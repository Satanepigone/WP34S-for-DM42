ARM GAS  /tmp/cccKVeLo.s 			page 1


   1              		.arch armv7e-m
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"keys.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.gtodot_digit,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	gtodot_digit:
  27              	.LVL0:
  28              	.LFB25:
  29              		.file 1 "src/keys.c"
   1:src/keys.c    **** /* This file is part of 34S.
   2:src/keys.c    ****  * 
   3:src/keys.c    ****  * 34S is free software: you can redistribute it and/or modify
   4:src/keys.c    ****  * it under the terms of the GNU General Public License as published by
   5:src/keys.c    ****  * the Free Software Foundation, either version 3 of the License, or
   6:src/keys.c    ****  * (at your option) any later version.
   7:src/keys.c    ****  * 
   8:src/keys.c    ****  * 34S is distributed in the hope that it will be useful,
   9:src/keys.c    ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:src/keys.c    ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:src/keys.c    ****  * GNU General Public License for more details.
  12:src/keys.c    ****  * 
  13:src/keys.c    ****  * You should have received a copy of the GNU General Public License
  14:src/keys.c    ****  * along with 34S.  If not, see <http://www.gnu.org/licenses/>.
  15:src/keys.c    ****  */
  16:src/keys.c    **** 
  17:src/keys.c    **** 
  18:src/keys.c    **** #ifdef DM42
  19:src/keys.c    **** #include "dmcp.h"
  20:src/keys.c    **** #endif
  21:src/keys.c    **** 
  22:src/keys.c    **** #define DM42SAFE
  23:src/keys.c    **** 
  24:src/keys.c    **** #include "features.h"
  25:src/keys.c    **** #include "xeq.h"
  26:src/keys.c    **** #include "keys.h"
  27:src/keys.c    **** #include "display.h"
  28:src/keys.c    **** #include "lcd.h"
  29:src/keys.c    **** #include "int.h"
ARM GAS  /tmp/cccKVeLo.s 			page 2


  30:src/keys.c    **** #include "consts.h"
  31:src/keys.c    **** #include "storage.h"
  32:src/keys.c    **** #include "stats.h"
  33:src/keys.c    **** #include "catalogues.h"
  34:src/keys.c    **** #ifndef DM42
  35:src/keys.c    **** #include "printer.h"
  36:src/keys.c    **** #endif
  37:src/keys.c    **** #undef DM42SAFE
  38:src/keys.c    **** 
  39:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
  40:src/keys.c    **** extern void changed_catalog_state();
  41:src/keys.c    **** #endif
  42:src/keys.c    **** 
  43:src/keys.c    **** #define STATE_UNFINISHED	(OP_SPEC | OP_UNFINISHED)
  44:src/keys.c    **** #define STATE_BACKSPACE		(OP_SPEC | OP_BACKSPACE)
  45:src/keys.c    **** #define STATE_SST		(OP_SPEC | OP_SST)
  46:src/keys.c    **** #define STATE_BST		(OP_SPEC | OP_BST)
  47:src/keys.c    **** #define STATE_RUNNING		(OP_SPEC | OP_RUNNING)
  48:src/keys.c    **** #define STATE_IGNORE		(OP_SPEC | OP_IGNORE)
  49:src/keys.c    **** #define STATE_WINDOWLEFT	(OP_SPEC | OP_WINDOWLEFT)
  50:src/keys.c    **** #define STATE_WINDOWRIGHT	(OP_SPEC | OP_WINDOWRIGHT)
  51:src/keys.c    **** //#define STATE_SHOW		(OP_SPEC | OP_SHOW)
  52:src/keys.c    **** 
  53:src/keys.c    **** /* Define this if the key codes map rows sequentially */
  54:src/keys.c    **** 
  55:src/keys.c    **** #define TEST_EQ		0
  56:src/keys.c    **** #define TEST_NE		1
  57:src/keys.c    **** #define TEST_LT		2
  58:src/keys.c    **** #define TEST_LE		3
  59:src/keys.c    **** #define TEST_GT		4
  60:src/keys.c    **** #define TEST_GE		5
  61:src/keys.c    **** 
  62:src/keys.c    **** enum confirmations {
  63:src/keys.c    **** 	// Apart from the first of these, these must be in the same
  64:src/keys.c    **** 	// order as the opcodes in xeq.h: OP_CLALL, OP_RESET, OP_CLPROG, OP_CLPALL
  65:src/keys.c    **** 	confirm_none=0, confirm_clall, confirm_reset, confirm_clprog, confirm_clpall
  66:src/keys.c    **** };
  67:src/keys.c    **** 
  68:src/keys.c    **** FLAG WasDataEntry;
  69:src/keys.c    **** 
  70:src/keys.c    **** /* Local data to this module */
  71:src/keys.c    **** unsigned int OpCode;
  72:src/keys.c    **** FLAG OpCodeDisplayPending;
  73:src/keys.c    **** FLAG GoFast;
  74:src/keys.c    **** FLAG NonProgrammable;
  75:src/keys.c    **** 
  76:src/keys.c    **** /*
  77:src/keys.c    ****  *  Needed before definition
  78:src/keys.c    ****  */ 
  79:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end);
  80:src/keys.c    **** 
  81:src/keys.c    **** unsigned int nd_opcode;
  82:src/keys.c    **** 
  83:src/keys.c    **** /*
  84:src/keys.c    ****  *  Return the shift state
  85:src/keys.c    ****  */
  86:src/keys.c    **** enum shifts cur_shift(void) {
ARM GAS  /tmp/cccKVeLo.s 			page 3


  87:src/keys.c    **** 	enum shifts s = shift_down();
  88:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
  89:src/keys.c    **** }
  90:src/keys.c    **** 
  91:src/keys.c    **** /*
  92:src/keys.c    ****  *  Set new shift state, return previous state
  93:src/keys.c    ****  */
  94:src/keys.c    **** static enum shifts set_shift(enum shifts shift) {
  95:src/keys.c    **** 	enum shifts r = cur_shift();
  96:src/keys.c    **** 	State2.shifts = shift;
  97:src/keys.c    **** 	//	State2.alpha_pos = 0;
  98:src/keys.c    **** 	return r;
  99:src/keys.c    **** }
 100:src/keys.c    **** 
 101:src/keys.c    **** /*
 102:src/keys.c    ****  *  Clear shift state and return previous state
 103:src/keys.c    ****  */
 104:src/keys.c    **** enum shifts reset_shift(void) {
 105:src/keys.c    **** 	return set_shift(SHIFT_N);
 106:src/keys.c    **** }
 107:src/keys.c    **** 
 108:src/keys.c    **** /*
 109:src/keys.c    ****  *  Toggle shift state
 110:src/keys.c    ****  */
 111:src/keys.c    **** static void toggle_shift(enum shifts shift) {
 112:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 113:src/keys.c    **** }
 114:src/keys.c    **** 
 115:src/keys.c    **** 
 116:src/keys.c    **** /*
 117:src/keys.c    ****  * Mapping from the key code to a linear index
 118:src/keys.c    ****  * The trick is to move the shifts and the holes in the map out of the way
 119:src/keys.c    ****  */
 120:src/keys.c    **** #ifdef DM42
 121:src/keys.c    **** static int keycode_to_linear_for_alpha(const keycode c)
 122:src/keys.c    **** {
 123:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 124:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 125:src/keys.c    **** 		 6,  7,  8,  9, 10, 11,   // K10 - K15
 126:src/keys.c    **** 		 12, 13, 14, 15, 16,  0,   // K20 - K24
 127:src/keys.c    **** 		17, 18, 19, 20, 21,  0,   // K30 - K34
 128:src/keys.c    **** 		22, 23, 24, 25, 26,  0,   // K40 - K44
 129:src/keys.c    **** 		27, 28, 29, 30, 31,  0,   // K50 - K54
 130:src/keys.c    **** 		32, 33, 34, 35, 36,       // K60 - K64
 131:src/keys.c    **** 		37, 37, 37, 37, 37, 37       // K_F, G, H, ARROW, CMPLX, NOP
 132:src/keys.c    **** 	};
 133:src/keys.c    **** 	return linear_key_map[c];
 134:src/keys.c    **** }
 135:src/keys.c    **** 
 136:src/keys.c    **** static int keycode_to_linear(const keycode c)
 137:src/keys.c    **** {
 138:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 139:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 140:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 141:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 142:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 143:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
ARM GAS  /tmp/cccKVeLo.s 			page 4


 144:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 145:src/keys.c    **** 		29, 30, 31, 32, 33,       // K60 - K64
 146:src/keys.c    **** 		34, 34, 34,  4,  5, 34,        // K_F, G, H, ARROW, CMPLX, NOP
 147:src/keys.c    **** 	};
 148:src/keys.c    **** 	return linear_key_map[c];
 149:src/keys.c    **** }
 150:src/keys.c    **** #else
 151:src/keys.c    **** static int keycode_to_linear(const keycode c)
 152:src/keys.c    **** {
 153:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 ] = {
 154:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 155:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 156:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 157:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 158:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 159:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 160:src/keys.c    **** 		29, 30, 31, 32, 33        // K60 - K64
 161:src/keys.c    **** 	};
 162:src/keys.c    **** 	return linear_key_map[c];
 163:src/keys.c    **** }
 164:src/keys.c    **** #endif
 165:src/keys.c    **** /*
 166:src/keys.c    ****  * Mapping from the key code to a row column code ('A'=11 to '+'=75)
 167:src/keys.c    ****  * Used in KEY? and for shorthand addressing
 168:src/keys.c    ****  */
 169:src/keys.c    **** int keycode_to_row_column(const int c)
 170:src/keys.c    **** {
 171:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 172:src/keys.c    **** }
 173:src/keys.c    **** 
 174:src/keys.c    **** /*
 175:src/keys.c    ****  * Mapping from a row column code ('A'=11 to '+'=75) to the key code
 176:src/keys.c    ****  * Used in PUTK and KTYPE.
 177:src/keys.c    ****  */
 178:src/keys.c    **** 
 179:src/keys.c    **** int row_column_to_keycode(const int c)
 180:src/keys.c    **** {
 181:src/keys.c    **** 	int row = c / 10 - 1;
 182:src/keys.c    **** 	int col = c % 10 - 1;
 183:src/keys.c    **** 
 184:src/keys.c    **** 	if (row < 0 || row > 6 || col > 5 - (row >= 2))
 185:src/keys.c    **** 		return -1;
 186:src/keys.c    **** 	return row * 6 + col;
 187:src/keys.c    **** }
 188:src/keys.c    **** 
 189:src/keys.c    **** /*
 190:src/keys.c    ****  *  Mapping from a key code to a digit from 0 to 9 or to a register address
 191:src/keys.c    ****  *  Bit seven is set if the key cannot be used as a label shortcut
 192:src/keys.c    ****  */
 193:src/keys.c    **** // Decision to make here about whether the top row can be used as shortcuts.
 194:src/keys.c    **** // Also, which other keys can / can't be used as shortcuts?
 195:src/keys.c    **** // Registers I, j, K, L will move with the new alpha layout.
 196:src/keys.c    **** 
 197:src/keys.c    **** #define NO_REG 0x7f
 198:src/keys.c    **** #define NO_SHORT 0x80
 199:src/keys.c    **** #ifdef DM42
 200:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
ARM GAS  /tmp/cccKVeLo.s 			page 5


 201:src/keys.c    **** {
 202:src/keys.c    ****   static const unsigned char map[] = {
 203:src/keys.c    ****     // K00 - K05
 204:src/keys.c    ****     NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 205:src/keys.c    ****     NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 206:src/keys.c    ****     NO_SHORT | NO_REG,   NO_REG,
 207:src/keys.c    ****     // K10 - K15
 208:src/keys.c    ****     NO_REG, NO_REG, regI_idx, regJ_idx, regK_idx, regL_idx, 
 209:src/keys.c    ****     // K20 - K24
 210:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 211:src/keys.c    ****     // K30 - K34
 212:src/keys.c    ****     NO_REG, 7, 8, 9, NO_REG,
 213:src/keys.c    ****     // K40 - K44
 214:src/keys.c    ****     NO_REG, NO_SHORT | regT_idx, 5, 6, NO_REG,
 215:src/keys.c    ****     // K50 - K54
 216:src/keys.c    ****     NO_REG, NO_SHORT | regX_idx, NO_SHORT | regY_idx, NO_SHORT | regZ_idx, NO_REG,
 217:src/keys.c    ****     // K60 - K64
 218:src/keys.c    ****     NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE, NO_REG, NO_REG,
 219:src/keys.c    ****     // Shifts etc. - K_F, K_G, K_H, K_ARROW, K_CMPLX. K_NOP
 220:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 221:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, 
 222:src/keys.c    ****   };
 223:src/keys.c    **** 
 224:src/keys.c    ****   return (unsigned int) map[keycode_to_linear_for_alpha(c)];
 225:src/keys.c    **** }
 226:src/keys.c    **** #else
 227:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 228:src/keys.c    **** {
 229:src/keys.c    ****   static const unsigned char map[] = {
 230:src/keys.c    **** 		// K00 - K05
 231:src/keys.c    **** 		NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 232:src/keys.c    **** 		NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 233:src/keys.c    **** 		NO_SHORT | NO_REG,   NO_REG,
 234:src/keys.c    **** 		// K10 - K12
 235:src/keys.c    **** 		NO_REG, NO_REG, regI_idx, 
 236:src/keys.c    **** 		// K20 - K24
 237:src/keys.c    **** 		NO_SHORT | NO_REG, regJ_idx, regK_idx, regL_idx, NO_SHORT | NO_REG,
 238:src/keys.c    **** 		// K30 - K34
 239:src/keys.c    **** 		NO_REG, 7, 8, 9, NO_REG,
 240:src/keys.c    **** 		// K40 - K44
 241:src/keys.c    **** 		NO_REG, 4, 5, 6, regT_idx,
 242:src/keys.c    **** 		// K50 - K54
 243:src/keys.c    **** 		NO_REG, 1, 2, 3, NO_REG,
 244:src/keys.c    **** 		// K60 - K63
 245:src/keys.c    **** 		NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE,
 246:src/keys.c    **** 		regY_idx, regZ_idx,
 247:src/keys.c    **** 		// Shifts, etc
 248:src/keys.c    **** 		NO_REG
 249:src/keys.c    **** 	};
 250:src/keys.c    **** 
 251:src/keys.c    **** 	return (unsigned int) map[keycode_to_linear(c)];
 252:src/keys.c    **** }
 253:src/keys.c    **** #endif
 254:src/keys.c    **** /*
 255:src/keys.c    ****  *  Mapping of a keycode and shift state to a catalogue number
 256:src/keys.c    ****  */
 257:src/keys.c    **** static enum catalogues keycode_to_cat(const keycode c, enum shifts shift)
ARM GAS  /tmp/cccKVeLo.s 			page 6


 258:src/keys.c    **** {
 259:src/keys.c    ****   enum catalogues cat = CATALOGUE_NONE;
 260:src/keys.c    ****   int i, col, max;
 261:src/keys.c    ****   const struct _map {
 262:src/keys.c    ****     unsigned char key, cat[3];
 263:src/keys.c    ****   } *cp;
 264:src/keys.c    **** 
 265:src/keys.c    ****   // Common to both alpha mode and normal mode is the programming X.FCN catalogue
 266:src/keys.c    ****   if (c == K53 && shift == SHIFT_H && ! State2.runmode && ! State2.cmplx && ! State2.multi)
 267:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 268:src/keys.c    **** 
 269:src/keys.c    ****   if (! State2.alphas && ! State2.multi) {
 270:src/keys.c    ****     /*
 271:src/keys.c    ****      *  Normal processing - Not alpha mode
 272:src/keys.c    ****      */
 273:src/keys.c    ****     static const struct _map cmap[] = {
 274:src/keys.c    **** #ifdef DM42
 275:src/keys.c    ****       { K04, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 276:src/keys.c    **** #else
 277:src/keys.c    ****       { K_ARROW, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 278:src/keys.c    **** #endif
 279:src/keys.c    ****       { K05,     { CATALOGUE_MODE,      CATALOGUE_MODE,      CATALOGUE_MODE          } },
 280:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
 281:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_USER          } },
 282:src/keys.c    **** #else
 283:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_LABELS        } },
 284:src/keys.c    **** #endif
 285:src/keys.c    ****       { K20,     { CATALOGUE_CONST,     CATALOGUE_NONE,      CATALOGUE_COMPLEX_CONST } },
 286:src/keys.c    ****       { K41,     { CATALOGUE_PROB,      CATALOGUE_NONE,      CATALOGUE_PROB          } },
 287:src/keys.c    ****       { K42,     { CATALOGUE_STATS,     CATALOGUE_NONE,      CATALOGUE_STATS         } },
 288:src/keys.c    ****       { K43,     { CATALOGUE_SUMS,      CATALOGUE_NONE,      CATALOGUE_SUMS          } },
 289:src/keys.c    ****       { K44,     { CATALOGUE_MATRIX,    CATALOGUE_NONE,      CATALOGUE_MATRIX        } },
 290:src/keys.c    ****       { K50,     { CATALOGUE_STATUS,    CATALOGUE_STATUS,    CATALOGUE_STATUS        } },
 291:src/keys.c    ****       { K51,     { CATALOGUE_TEST,      CATALOGUE_TEST,      CATALOGUE_TEST          } },
 292:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
 293:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_INTERNAL      } },
 294:src/keys.c    **** #else
 295:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_PROG          } },
 296:src/keys.c    **** #endif
 297:src/keys.c    ****       { K53,     { CATALOGUE_NORMAL,    CATALOGUE_INT,       CATALOGUE_COMPLEX       } },
 298:src/keys.c    ****     };
 299:src/keys.c    **** 
 300:src/keys.c    ****     if (c == K60 && shift == SHIFT_G) {
 301:src/keys.c    ****       /*
 302:src/keys.c    ****        *  SHOW starts register browser
 303:src/keys.c    ****        */
 304:src/keys.c    ****       return CATALOGUE_REGISTERS;
 305:src/keys.c    ****     }
 306:src/keys.c    **** #if 0
 307:src/keys.c    ****     // conflicts with c# 002 and c# 003
 308:src/keys.c    ****     if ((c == K52 || c == K53) && shift == SHIFT_N && State2.cmplx && State2.catalogue == CATALOGUE
 309:src/keys.c    ****       /*
 310:src/keys.c    ****        *  Shorthand to complex P.FCN & X.FCN - h may be omitted
 311:src/keys.c    ****        */
 312:src/keys.c    ****       shift = SHIFT_H;
 313:src/keys.c    ****     }
 314:src/keys.c    **** #endif
ARM GAS  /tmp/cccKVeLo.s 			page 7


 315:src/keys.c    ****     if (shift != SHIFT_H) {
 316:src/keys.c    ****       /*
 317:src/keys.c    ****        *  All standard catalogues are on h-shifted keys
 318:src/keys.c    ****        */
 319:src/keys.c    ****       return CATALOGUE_NONE;
 320:src/keys.c    ****     }
 321:src/keys.c    **** 
 322:src/keys.c    ****     /*
 323:src/keys.c    ****      *  Prepare search
 324:src/keys.c    ****      */
 325:src/keys.c    ****     cp = cmap;
 326:src/keys.c    **** #ifndef WINGUI
 327:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx || shift_down() == SHIFT_H ? 2 : 0;
 328:src/keys.c    **** #else
 329:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx ? 2 : 0;
 330:src/keys.c    **** #endif
 331:src/keys.c    ****     max = sizeof(cmap) / sizeof(cmap[0]);
 332:src/keys.c    ****   }
 333:src/keys.c    ****   else {
 334:src/keys.c    ****     /*
 335:src/keys.c    ****      *  All the alpha catalogues go here
 336:src/keys.c    ****      */
 337:src/keys.c    **** #ifdef DM42
 338:src/keys.c    ****     static const struct _map amap[] = {
 339:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 340:src/keys.c    ****       { K05, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 341:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 342:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 343:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 344:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 345:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 346:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 347:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 348:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 349:src/keys.c    ****     };
 350:src/keys.c    **** #else
 351:src/keys.c    ****     static const struct _map amap[] = {
 352:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 353:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 354:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 355:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 356:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 357:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 358:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 359:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 360:src/keys.c    ****     };
 361:src/keys.c    **** #endif
 362:src/keys.c    ****     static const char smap[] = { 0, 1, 0, 2 }; // Map shifts to columns;
 363:src/keys.c    **** 
 364:src/keys.c    ****     /*
 365:src/keys.c    ****      *  Prepare search
 366:src/keys.c    ****      */
 367:src/keys.c    ****     cp = amap;
 368:src/keys.c    ****     col = smap[shift];
 369:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 370:src/keys.c    ****   }
 371:src/keys.c    **** 
ARM GAS  /tmp/cccKVeLo.s 			page 8


 372:src/keys.c    ****   /*
 373:src/keys.c    ****    *  Search the key in one of the tables
 374:src/keys.c    ****    */
 375:src/keys.c    ****   for (i = 0; i < max; ++i, ++cp) {
 376:src/keys.c    ****     if (cp->key == c) {
 377:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 378:src/keys.c    ****       break;
 379:src/keys.c    ****     }
 380:src/keys.c    ****   }
 381:src/keys.c    ****   if (State2.multi && (cat < CATALOGUE_ALPHA_SYMBOLS || cat > CATALOGUE_ALPHA_SUBSCRIPTS)) {
 382:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 383:src/keys.c    ****     cat = CATALOGUE_NONE;
 384:src/keys.c    ****   }
 385:src/keys.c    ****   return cat;
 386:src/keys.c    **** }
 387:src/keys.c    **** 
 388:src/keys.c    **** #ifdef DM42
 389:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 390:src/keys.c    **** {
 391:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 392:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 393:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 394:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 395:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 396:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 397:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 398:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 399:src/keys.c    **** 
 400:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 401:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 402:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 403:src/keys.c    **** 		{ 'J',  0257, 0000, 0000, 'j',  0000,  },  // K13
 404:src/keys.c    **** 		{ 'K',  0000, 'K',  0000, 'k',  0251,  },  // K14
 405:src/keys.c    **** 		{ 'L',  0000, 0212, 0000, 'l',  0252,  },  // K15
 406:src/keys.c    **** 
 407:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 408:src/keys.c    **** 		{ 'M',  0000, 0253, 0027, 'm',  0253,  },  // K21
 409:src/keys.c    **** 		{ 'N',  0010, 'N',  0225, 'n',  0254,  },  // K22
 410:src/keys.c    **** 		{ 'O',  0000, 0227, 0257, 'o',  0267,  },  // K23
 411:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 412:src/keys.c    **** 
 413:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 414:src/keys.c    **** 		{ 'P',  '7',  0217, '&',  'p',  0257,  },  // K31
 415:src/keys.c    **** 		{ 'Q',  '8',  0000, '|',  'q',  0000,  },  // K32
 416:src/keys.c    **** 		{ 'R',  '9',  'R',  0013, 'r',  0260,  },  // K33
 417:src/keys.c    **** 		{ 'S',  '/',  0221, '\\', 's',  0261,  },  // K34
 418:src/keys.c    **** 
 419:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 420:src/keys.c    **** 		{ 'T',  '4',  'T',  0000, 't',  0262,  },  // K41
 421:src/keys.c    **** 		{ 'U',  '5',  0000, 0000, 'u',  0000,  },  // K42
 422:src/keys.c    **** 		{ 'V',  '6',  0000, 0000, 'v',  0000,  },  // K43
 423:src/keys.c    **** 		{ 'W', 0034,  0000, 0000, 'w',  0000,  },  // K44
 424:src/keys.c    **** 
 425:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 426:src/keys.c    **** 		{ 'X',  '1',  0215, 0000, 'x',  0255,  },  // K51
 427:src/keys.c    **** 		{ 'Y',  '2',  'Y',  0000, 'y',  0263,  },  // K52
 428:src/keys.c    **** 		{ 'Z',  '3',  'Z',  0000, 'z',  0245,  },  // K53
ARM GAS  /tmp/cccKVeLo.s 			page 9


 429:src/keys.c    **** 		{ '-',  '(',  ')',  0000, 0000, 0000,  },  // K54
 430:src/keys.c    **** 
 431:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K60
 432:src/keys.c    **** 		{ ':',  '0',  0207, ' ',  ';',  0247,  },  // K61
 433:src/keys.c    **** 		{ '.',  '.',  0226, 0000, '.',  0266,  },  // K62
 434:src/keys.c    **** 		{ '?',  0000, 0041, 0000, '?',  0000,  },  // K63
 435:src/keys.c    **** 		{ ' ',  '+',  '=',  0000, ' ',  ' ',   },  // K64
 436:src/keys.c    **** 
 437:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // shifts etc.
 438:src/keys.c    **** 	};
 439:src/keys.c    **** 	if (State2.alphashift) {
 440:src/keys.c    **** 		if (shift == SHIFT_N)
 441:src/keys.c    **** 			shift = SHIFT_LC_N;
 442:src/keys.c    **** 		else if (shift == SHIFT_G)
 443:src/keys.c    **** 			shift = SHIFT_LC_G;
 444:src/keys.c    **** 	}
 445:src/keys.c    **** 	return alphamap[keycode_to_linear_for_alpha(c)][shift];
 446:src/keys.c    **** }
 447:src/keys.c    **** #else
 448:src/keys.c    **** /*
 449:src/keys.c    ****  * Mapping from key position to alpha in the four key planes plus
 450:src/keys.c    ****  * the two lower case planes.
 451:src/keys.c    ****  */
 452:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 453:src/keys.c    **** {
 454:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 455:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 456:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 457:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 458:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 459:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 460:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 461:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 462:src/keys.c    **** 
 463:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 464:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 465:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 466:src/keys.c    **** 
 467:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 468:src/keys.c    **** 		{ 'J',  '(',  ')',  0027, 'j',  ')',   },  // K21
 469:src/keys.c    **** 		{ 'K',  0010, 'K',  0225, 'k',  0251,  },  // K22
 470:src/keys.c    **** 		{ 'L',  0000, 0212, 0257, 'l',  0252,  },  // K23
 471:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 472:src/keys.c    **** 
 473:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 474:src/keys.c    **** 		{ 'M',  '7',  'M',  '&',  'm',  0253,  },  // K31
 475:src/keys.c    **** 		{ 'N',  '8',  'N',  '|',  'n',  0254,  },  // K32
 476:src/keys.c    **** 		{ 'O',  '9',  0227, 0013, 'o',  0267,  },  // K33
 477:src/keys.c    **** 		{ 'P',  '/',  0217, '\\', 'p',  0257,  },  // K34
 478:src/keys.c    **** 
 479:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 480:src/keys.c    **** 		{ 'Q',  '4',  0000, 0000, 'q',  0000,  },  // K41
 481:src/keys.c    **** 		{ 'R',  '5',  'R',  0000, 'r',  0260,  },  // K42
 482:src/keys.c    **** 		{ 'S',  '6',  0221, 0000, 's',  0261,  },  // K43
 483:src/keys.c    **** 		{ 'T',  0034, 'T',  0000, 't',  0262,  },  // K44
 484:src/keys.c    **** 
 485:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
ARM GAS  /tmp/cccKVeLo.s 			page 10


 486:src/keys.c    **** 		{ '1',  '1',  0207, 0000, '1',  0247,  },  // K51
 487:src/keys.c    **** 		{ 'U',  '2',  0000, 0000, 'u',  0000,  },  // K52
 488:src/keys.c    **** 		{ 'V',  '3',  0000, 0000, 'v',  0000,  },  // K53
 489:src/keys.c    **** 		{ 'W',  0034, 0000, 0000, 'w',  0000,  },  // K54
 490:src/keys.c    **** 
 491:src/keys.c    **** 		{ 0000, 0222, 0000, 0000, 0000, 0000,  },  // K60
 492:src/keys.c    **** 		{ '0',  '0',  0226, ' ',  '0',  0266,  },  // K61
 493:src/keys.c    **** 		{ 'X',  '.',  0215, 0000, 'x',  0255,  },  // K62
 494:src/keys.c    **** 		{ 'Y',  0000, 'Y',  0000, 'y',  0263,  },  // K63
 495:src/keys.c    **** 		{ 'Z',  '+',  'Z',  0000, 'z',  0245,  },  // K64
 496:src/keys.c    **** 	};
 497:src/keys.c    **** 	if (State2.alphashift) {
 498:src/keys.c    **** 		if (shift == SHIFT_N)
 499:src/keys.c    **** 			shift = SHIFT_LC_N;
 500:src/keys.c    **** 		else if (shift == SHIFT_G)
 501:src/keys.c    **** 			shift = SHIFT_LC_G;
 502:src/keys.c    **** 	}
 503:src/keys.c    **** 	return alphamap[keycode_to_linear(c)][shift];
 504:src/keys.c    **** }
 505:src/keys.c    **** #endif
 506:src/keys.c    **** static void init_arg(const enum rarg base) {
 507:src/keys.c    **** 	if (is_bad_cmdline())
 508:src/keys.c    **** 		return;
 509:src/keys.c    **** 	CmdBase = base;
 510:src/keys.c    **** 	State2.ind = 0;
 511:src/keys.c    **** 	State2.digval = 0;
 512:src/keys.c    **** 	State2.numdigit = 0;
 513:src/keys.c    **** 	State2.rarg = 1;
 514:src/keys.c    **** 	State2.dot = 0;
 515:src/keys.c    **** 	State2.local = 0;
 516:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 517:src/keys.c    **** }
 518:src/keys.c    **** 
 519:src/keys.c    **** static void init_cat(enum catalogues cat) {
 520:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 521:src/keys.c    **** 		// Save last catalogue for a later restore
 522:src/keys.c    **** 		State.last_cat = State2.catalogue;
 523:src/keys.c    **** 		CmdLineLength = 0;
 524:src/keys.c    **** 	}
 525:src/keys.c    **** 	process_cmdline();
 526:src/keys.c    **** 
 527:src/keys.c    **** 	State2.labellist = 0;
 528:src/keys.c    **** 	State2.registerlist = 0;
 529:src/keys.c    **** 	State2.status = 0;
 530:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 531:src/keys.c    **** 
 532:src/keys.c    **** 	switch (cat) {
 533:src/keys.c    **** 	case CATALOGUE_LABELS:
 534:src/keys.c    **** 		// Label browser
 535:src/keys.c    **** 		State2.labellist = 1;
 536:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 537:src/keys.c    **** 		break;
 538:src/keys.c    **** 	
 539:src/keys.c    **** 	case CATALOGUE_REGISTERS:
 540:src/keys.c    **** 		// Register browser
 541:src/keys.c    **** 		State2.registerlist = 1;
 542:src/keys.c    **** 		State2.digval = regX_idx;
ARM GAS  /tmp/cccKVeLo.s 			page 11


 543:src/keys.c    **** 		State2.digval2 = 0;
 544:src/keys.c    **** 		break;
 545:src/keys.c    **** 
 546:src/keys.c    **** 	case CATALOGUE_STATUS:
 547:src/keys.c    **** 		// Flag browser
 548:src/keys.c    **** 		State2.status = 1;
 549:src/keys.c    **** 		break;
 550:src/keys.c    **** 
 551:src/keys.c    **** 	default:
 552:src/keys.c    **** 		// Normal catalogue
 553:src/keys.c    **** 		State2.catalogue = cat;
 554:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 555:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 556:src/keys.c    **** 			// Different catalogue, reset position
 557:src/keys.c    **** 			State.catpos = 0;
 558:src/keys.c    **** 		}
 559:src/keys.c    **** 	}
 560:src/keys.c    **** 	reset_shift();
 561:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 562:src/keys.c    **** 	changed_catalog_state();
 563:src/keys.c    **** #endif
 564:src/keys.c    **** }
 565:src/keys.c    **** 
 566:src/keys.c    **** /*
 567:src/keys.c    ****  *  Reset the internal state to a sane default
 568:src/keys.c    ****  */
 569:src/keys.c    **** void init_state(void) {
 570:src/keys.c    **** #ifndef REALBUILD
 571:src/keys.c    **** 	unsigned int a = State2.flags;
 572:src/keys.c    **** 	unsigned int b = State2.trace;
 573:src/keys.c    **** #else
 574:src/keys.c    **** 	FLAG t = TestFlag;
 575:src/keys.c    **** #endif
 576:src/keys.c    **** 	int v = Voltage;
 577:src/keys.c    **** 	int k = LastKey;
 578:src/keys.c    **** 
 579:src/keys.c    **** 	CmdBase = 0;
 580:src/keys.c    **** 	// Removed: will clear any locals on power off
 581:src/keys.c    **** 	// clrretstk(0);
 582:src/keys.c    **** 
 583:src/keys.c    **** 	xset(&State2, 0, sizeof(State2));
 584:src/keys.c    **** 	State2.test = TST_NONE;
 585:src/keys.c    **** 	State2.runmode = 1;
 586:src/keys.c    **** 	update_program_bounds(1);
 587:src/keys.c    **** 	set_lift();
 588:src/keys.c    **** 
 589:src/keys.c    **** 	// Restore stuff that has been moved to State2 for space reasons
 590:src/keys.c    **** 	// but must not be cleared.
 591:src/keys.c    **** 	Voltage = v;
 592:src/keys.c    **** 	LastKey = k;
 593:src/keys.c    **** #ifndef REALBUILD
 594:src/keys.c    **** 	State2.trace = b;
 595:src/keys.c    **** 	State2.flags = a;
 596:src/keys.c    **** #else
 597:src/keys.c    **** 	TestFlag = t;
 598:src/keys.c    **** #endif
 599:src/keys.c    **** 	ShowRegister = regX_idx;
ARM GAS  /tmp/cccKVeLo.s 			page 12


 600:src/keys.c    **** }
 601:src/keys.c    **** 
 602:src/keys.c    **** void soft_init_state(void) {
 603:src/keys.c    **** 	int soft;
 604:src/keys.c    **** 	unsigned int runmode;
 605:src/keys.c    **** 	unsigned int alphas;
 606:src/keys.c    **** 
 607:src/keys.c    **** 	if (CmdLineLength) {
 608:src/keys.c    **** 		CmdLineLength = 0;
 609:src/keys.c    **** 		CmdLineEex = 0;
 610:src/keys.c    **** 		CmdLineDot = 0;
 611:src/keys.c    **** 		return;
 612:src/keys.c    **** 	}
 613:src/keys.c    **** 	soft = State2.multi || State2.rarg || State2.hyp || State2.gtodot || State2.labellist ||
 614:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 615:src/keys.c    **** 	runmode = State2.runmode;
 616:src/keys.c    **** 	alphas = State2.alphas;
 617:src/keys.c    **** 	init_state();
 618:src/keys.c    **** 	if (soft) {
 619:src/keys.c    **** 		State2.runmode = runmode;
 620:src/keys.c    **** 		State2.alphas = alphas;
 621:src/keys.c    **** 	}
 622:src/keys.c    **** }
 623:src/keys.c    **** 
 624:src/keys.c    **** static int check_confirm(int op) {
 625:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 626:src/keys.c    **** 		const int nilop = argKIND(op);
 627:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 628:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 629:src/keys.c    **** 			return STATE_UNFINISHED;
 630:src/keys.c    **** 		}
 631:src/keys.c    **** #ifndef DM42		
 632:src/keys.c    **** 		if ((nilop >= OP_RECV && nilop <= OP_PSTO)
 633:src/keys.c    **** #endif
 634:src/keys.c    **** #ifdef DM42
 635:src/keys.c    **** 		    if ((nilop >= OP_SAVE && nilop <= OP_PSTO) // no recv in DM42
 636:src/keys.c    **** #endif
 637:src/keys.c    **** #ifdef INFRARED
 638:src/keys.c    **** 			|| nilop == OP_PRINT_PGM
 639:src/keys.c    **** #endif
 640:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
 641:src/keys.c    **** 			|| nilop == OP_STOPWATCH
 642:src/keys.c    **** #endif
 643:src/keys.c    **** 		) {
 644:src/keys.c    **** 			// These commands are not programmable
 645:src/keys.c    **** 			NonProgrammable = 1;
 646:src/keys.c    **** 		}
 647:src/keys.c    **** 	}
 648:src/keys.c    **** 	return op;
 649:src/keys.c    **** }
 650:src/keys.c    **** 
 651:src/keys.c    **** static void set_smode(const enum single_disp d) {
 652:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 653:src/keys.c    **** }
 654:src/keys.c    **** 
 655:src/keys.c    **** static int check_f_key(int n, const int dflt) {
 656:src/keys.c    **** 	const int code = 100 + n;
ARM GAS  /tmp/cccKVeLo.s 			page 13


 657:src/keys.c    **** 	unsigned int pc = state_pc();
 658:src/keys.c    **** 
 659:src/keys.c    **** 	if (State2.runmode) {
 660:src/keys.c    **** 		if (isXROM(pc))
 661:src/keys.c    **** 			pc = 1;
 662:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 663:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 664:src/keys.c    **** 	}
 665:src/keys.c    **** 	return dflt;
 666:src/keys.c    **** }
 667:src/keys.c    **** 
 668:src/keys.c    **** /* Return non-zero if the current mode is integer and we accept letters
 669:src/keys.c    ****  * as digits.
 670:src/keys.c    ****  */
 671:src/keys.c    **** static int intltr(int d) {
 672:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 673:src/keys.c    **** }
 674:src/keys.c    **** 
 675:src/keys.c    **** /*
 676:src/keys.c    ****  *  Process a key code in the unshifted mode.
 677:src/keys.c    ****  */
 678:src/keys.c    **** static int process_normal(const keycode c)
 679:src/keys.c    **** {
 680:src/keys.c    **** 	static const unsigned short int op_map[] = {
 681:src/keys.c    **** 		// Row 1
 682:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS, // A to D
 683:src/keys.c    **** 		OP_MON  | OP_RECIP,
 684:src/keys.c    **** 		OP_DYA  | OP_POW,
 685:src/keys.c    **** 		OP_MON  | OP_SQRT,
 686:src/keys.c    **** 		OP_SPEC | OP_E,		// ->
 687:src/keys.c    **** 		OP_SPEC | OP_F,		// CPX
 688:src/keys.c    **** 		// Row 2
 689:src/keys.c    **** 		RARG_STO,
 690:src/keys.c    **** 		RARG_RCL,
 691:src/keys.c    **** 		OP_NIL  | OP_RDOWN,
 692:src/keys.c    **** 		// Row 3
 693:src/keys.c    **** 		OP_SPEC | OP_ENTER,
 694:src/keys.c    **** 		RARG(RARG_SWAPX, regY_idx),
 695:src/keys.c    **** 		OP_SPEC | OP_CHS,	// CHS
 696:src/keys.c    **** 		OP_SPEC | OP_EEX,	// EEX
 697:src/keys.c    **** 		OP_SPEC | OP_CLX,	// <-
 698:src/keys.c    **** 		// Row 4
 699:src/keys.c    **** 		RARG_XEQ,
 700:src/keys.c    **** 		OP_SPEC | OP_7,
 701:src/keys.c    **** 		OP_SPEC | OP_8,
 702:src/keys.c    **** 		OP_SPEC | OP_9,
 703:src/keys.c    **** 		OP_DYA  | OP_DIV,
 704:src/keys.c    **** 		// Row 5
 705:src/keys.c    **** 		STATE_BST,
 706:src/keys.c    **** 		OP_SPEC | OP_4,
 707:src/keys.c    **** 		OP_SPEC | OP_5,
 708:src/keys.c    **** 		OP_SPEC | OP_6,
 709:src/keys.c    **** 		OP_DYA  | OP_MUL,
 710:src/keys.c    **** 		// Row 6
 711:src/keys.c    **** 		STATE_SST,		// SST
 712:src/keys.c    **** 		OP_SPEC | OP_1,
 713:src/keys.c    **** 		OP_SPEC | OP_2,
ARM GAS  /tmp/cccKVeLo.s 			page 14


 714:src/keys.c    **** 		OP_SPEC | OP_3,
 715:src/keys.c    **** 		OP_DYA  | OP_SUB,
 716:src/keys.c    **** 		// Row 7
 717:src/keys.c    **** 		STATE_UNFINISHED,	// ON/C
 718:src/keys.c    **** 		OP_SPEC | OP_0,
 719:src/keys.c    **** 		OP_SPEC | OP_DOT,
 720:src/keys.c    **** 		OP_NIL  | OP_RS,	// R/S
 721:src/keys.c    **** 		OP_DYA  | OP_ADD,
 722:src/keys.c    **** #ifdef DM42
 723:src/keys.c    **** 		OP_NIL  | OP_NOP,  // shifts etc.
 724:src/keys.c    **** #endif
 725:src/keys.c    **** 	};
 726:src/keys.c    **** 
 727:src/keys.c    **** 	int lc = keycode_to_linear(c);
 728:src/keys.c    **** 	int op = op_map[lc];
 729:src/keys.c    **** 	
 730:src/keys.c    **** 	// The switch handles all the special cases
 731:src/keys.c    **** #ifdef DM42
 732:src/keys.c    **** 	int op_int;
 733:src/keys.c    **** 	if (UState.intm) {
 734:src/keys.c    **** 	  switch (c) {
 735:src/keys.c    **** 	  case K00:
 736:src/keys.c    **** 	    op = OP_SPEC | OP_A;
 737:src/keys.c    **** 	    if (intltr(10)) {
 738:src/keys.c    **** 	      return op;
 739:src/keys.c    **** 	    }
 740:src/keys.c    **** 	    else {
 741:src/keys.c    **** 	      return check_f_key(0, op);
 742:src/keys.c    **** 	    }
 743:src/keys.c    **** 	  case K01:
 744:src/keys.c    **** 	    op = OP_SPEC | OP_B;
 745:src/keys.c    **** 	    if (intltr(11)) {
 746:src/keys.c    **** 	      return op;
 747:src/keys.c    **** 	    }
 748:src/keys.c    **** 	    else {
 749:src/keys.c    **** 	      return check_f_key(1, op);
 750:src/keys.c    **** 	    }
 751:src/keys.c    **** 	  case K03:
 752:src/keys.c    **** 	    op_int = OP_SPEC | OP_C;
 753:src/keys.c    **** 	    if (intltr(12)) {
 754:src/keys.c    **** 	      return op_int;
 755:src/keys.c    **** 	    }
 756:src/keys.c    **** 	    else {
 757:src/keys.c    **** 	      return check_f_key(2, op);
 758:src/keys.c    **** 	    }
 759:src/keys.c    **** 	  case K30:
 760:src/keys.c    **** 	    op_int = OP_SPEC | OP_F;
 761:src/keys.c    **** 	    if (intltr(15)) {
 762:src/keys.c    **** 	      return op_int;
 763:src/keys.c    **** 	    }
 764:src/keys.c    **** 	  default:;
 765:src/keys.c    **** 	  }
 766:src/keys.c    **** 	}
 767:src/keys.c    **** #endif  
 768:src/keys.c    **** 
 769:src/keys.c    **** 	switch (c) {
 770:src/keys.c    **** #ifdef DM42
ARM GAS  /tmp/cccKVeLo.s 			page 15


 771:src/keys.c    **** 	case K00:
 772:src/keys.c    **** 		return check_f_key(0, op);
 773:src/keys.c    **** 	case K01:
 774:src/keys.c    **** 		return check_f_key(1, op);
 775:src/keys.c    **** 	case K03:
 776:src/keys.c    **** 		return check_f_key(2, op);
 777:src/keys.c    **** #else
 778:src/keys.c    **** 	case K00:
 779:src/keys.c    **** 	case K01:
 780:src/keys.c    **** 		if (UState.intm)
 781:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 782:src/keys.c    **** 	case K02:
 783:src/keys.c    **** 	case K03:
 784:src/keys.c    **** 		if (intltr(lc + 10)) {
 785:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 786:src/keys.c    **** 			return op;
 787:src/keys.c    **** 		}
 788:src/keys.c    **** 		return check_f_key(lc, op);
 789:src/keys.c    **** #endif		
 790:src/keys.c    **** 	case K_ARROW:
 791:src/keys.c    **** #ifndef DM42
 792:src/keys.c    **** #ifdef INT_MODE_TEMPVIEW
 793:src/keys.c    **** 		if (intltr(14))
 794:src/keys.c    **** 			return op;
 795:src/keys.c    **** #else
 796:src/keys.c    **** 		if (UState.intm)
 797:src/keys.c    **** 			return op;
 798:src/keys.c    **** #endif
 799:src/keys.c    **** #endif		
 800:src/keys.c    **** 		if (is_bad_cmdline())
 801:src/keys.c    **** 			return STATE_UNFINISHED;
 802:src/keys.c    **** 		process_cmdline_set_lift();
 803:src/keys.c    **** 		State2.arrow = 1;
 804:src/keys.c    **** #ifdef DM42
 805:src/keys.c    **** 		set_menu (9); // arrow menu
 806:src/keys.c    **** 		display_current_menu ();
 807:src/keys.c    **** 		lcd_refresh ();
 808:src/keys.c    **** #else
 809:src/keys.c    **** 		set_shift(SHIFT_G);
 810:src/keys.c    **** #endif
 811:src/keys.c    **** 		break;
 812:src/keys.c    **** 
 813:src/keys.c    **** 	case K_CMPLX:
 814:src/keys.c    **** #ifdef DM42
 815:src/keys.c    **** 	  if (UState.intm)
 816:src/keys.c    **** 	    break; // return nothing
 817:src/keys.c    **** 	  State2.cmplx = 1;
 818:src/keys.c    **** #else
 819:src/keys.c    **** 	  if (UState.intm)
 820:src/keys.c    **** 	    return op;
 821:src/keys.c    **** 	  State2.cmplx = 1;
 822:src/keys.c    **** #endif
 823:src/keys.c    **** 	  break;
 824:src/keys.c    **** 
 825:src/keys.c    **** 	case K24:				// <-
 826:src/keys.c    **** 		if (State2.disp_temp)
 827:src/keys.c    **** 			return STATE_UNFINISHED;
ARM GAS  /tmp/cccKVeLo.s 			page 16


 828:src/keys.c    **** 		if (State2.runmode)
 829:src/keys.c    **** 			return op;
 830:src/keys.c    **** 		return STATE_BACKSPACE;
 831:src/keys.c    **** 
 832:src/keys.c    **** 	case K10:				// STO
 833:src/keys.c    **** 	case K11:				// RCL
 834:src/keys.c    **** 	case K30:				// XEQ
 835:src/keys.c    **** 		init_arg((enum rarg)op);
 836:src/keys.c    **** 		break;
 837:src/keys.c    **** 
 838:src/keys.c    **** 	default:
 839:src/keys.c    **** 		return op;			// Keys handled by table
 840:src/keys.c    **** 	}
 841:src/keys.c    **** 	return STATE_UNFINISHED;
 842:src/keys.c    **** }
 843:src/keys.c    **** 
 844:src/keys.c    **** 
 845:src/keys.c    **** /*
 846:src/keys.c    ****  *  Process a key code after f or g shift
 847:src/keys.c    ****  */
 848:src/keys.c    **** static int process_fg_shifted(const keycode c) {
 849:src/keys.c    **** 
 850:src/keys.c    **** #define NO_INT 0xf000
 851:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 852:src/keys.c    **** 		// Row 1
 853:src/keys.c    **** 		{ 1,                               0                           }, // HYP
 854:src/keys.c    **** 		{ OP_MON | OP_SIN      | NO_INT,   OP_MON | OP_ASIN   | NO_INT },
 855:src/keys.c    **** 		{ OP_MON | OP_COS      | NO_INT,   OP_MON | OP_ACOS   | NO_INT },
 856:src/keys.c    **** 		{ OP_MON | OP_TAN      | NO_INT,   OP_MON | OP_ATAN   | NO_INT },
 857:src/keys.c    **** 		{ OP_NIL | OP_P2R      | NO_INT,   OP_NIL | OP_R2P    | NO_INT },
 858:src/keys.c    **** 		{ OP_NIL | OP_FRACPROPER,	   OP_NIL | OP_FRACIMPROPER    }, // CPX
 859:src/keys.c    **** 		// Row 2
 860:src/keys.c    **** 		{ OP_NIL | OP_HMS,                 OP_NIL | OP_DEG    | NO_INT },
 861:src/keys.c    **** 		{ OP_NIL | OP_FLOAT,               OP_NIL | OP_RAD    | NO_INT },
 862:src/keys.c    **** 		{ OP_NIL | OP_RANDOM,              OP_NIL | OP_GRAD   | NO_INT },
 863:src/keys.c    **** 		// Row 3
 864:src/keys.c    **** 		{ STATE_UNFINISHED,		   OP_NIL | OP_FILL            }, // ENTER
 865:src/keys.c    **** 		{ STATE_WINDOWLEFT,   		   STATE_WINDOWRIGHT   	       },
 866:src/keys.c    **** 		{ RARG(RARG_BASE, 2),		   RARG(RARG_BASE, 8)          },
 867:src/keys.c    **** 		{ RARG(RARG_BASE, 10),		   RARG(RARG_BASE, 16)         },
 868:src/keys.c    **** 		{ OP_NIL | OP_CLPROG,		   OP_NIL | OP_SIGMACLEAR      },
 869:src/keys.c    **** 		// Row 4
 870:src/keys.c    **** 		{ OP_MON | OP_EXP,                 OP_MON | OP_LN              },
 871:src/keys.c    **** 		{ OP_MON | OP_10POWX,		   OP_MON | OP_LOG             },
 872:src/keys.c    **** 		{ OP_MON | OP_2POWX,		   OP_MON | OP_LG2             },
 873:src/keys.c    **** 		{ OP_DYA | OP_POW,                 OP_DYA | OP_LOGXY           },
 874:src/keys.c    **** 		{ OP_MON | OP_RECIP    | NO_INT,   OP_DYA | OP_PARAL	       },
 875:src/keys.c    **** 		// Row 5
 876:src/keys.c    **** 		{ OP_DYA | OP_COMB,                OP_DYA | OP_PERM            },
 877:src/keys.c    **** 		{ OP_MON | OP_cdf_Q    | NO_INT,   OP_MON | OP_qf_Q   | NO_INT },
 878:src/keys.c    **** 		{ OP_NIL | OP_statMEAN | NO_INT,   OP_NIL | OP_statS  | NO_INT },
 879:src/keys.c    **** 		{ OP_MON | OP_yhat     | NO_INT,   OP_NIL | OP_statR  | NO_INT },
 880:src/keys.c    **** 		{ OP_MON | OP_SQRT,		   OP_MON | OP_SQR             },
 881:src/keys.c    **** 		// Row 6
 882:src/keys.c    **** 		{ RARG_SF,                         RARG_CF                     },
 883:src/keys.c    **** 		{ TST_EQ,                          TST_NE                      }, // tests
 884:src/keys.c    **** 		{ RARG_SOLVE           | NO_INT,   RARG_INTG          | NO_INT },
ARM GAS  /tmp/cccKVeLo.s 			page 17


 885:src/keys.c    **** 		{ RARG_PROD            | NO_INT,   RARG_SUM           | NO_INT },
 886:src/keys.c    **** 		{ OP_MON | OP_PERCNT   | NO_INT,   OP_MON | OP_PERCHG | NO_INT },
 887:src/keys.c    **** 		// Row 7
 888:src/keys.c    **** #ifdef INFRARED
 889:src/keys.c    **** 		{ RARG(RARG_PRINT_REG,regX_idx),   STATE_UNFINISHED	       },
 890:src/keys.c    **** #else
 891:src/keys.c    **** 		{ STATE_UNFINISHED,		   STATE_UNFINISHED	       },
 892:src/keys.c    **** #endif
 893:src/keys.c    **** 		{ OP_MON | OP_ABS,		   OP_MON | OP_RND             },
 894:src/keys.c    **** 		{ OP_MON | OP_TRUNC,		   OP_MON | OP_FRAC            },
 895:src/keys.c    **** 		{ RARG_LBL,			   OP_NIL | OP_RTN             },
 896:src/keys.c    **** 		{ RARG_DSE,			   RARG_ISG                    },
 897:src/keys.c    **** #ifdef DM42
 898:src/keys.c    **** 		{ OP_NIL | OP_NOP,		   OP_NIL |OP_NOP              },
 899:src/keys.c    **** #endif
 900:src/keys.c    **** 	};
 901:src/keys.c    **** 
 902:src/keys.c    **** 	static const unsigned short int op_map2[] = {
 903:src/keys.c    **** 		STATE_UNFINISHED,
 904:src/keys.c    **** 		STATE_UNFINISHED,
 905:src/keys.c    **** 		OP_DYA  | OP_POW,
 906:src/keys.c    **** 		OP_MON  | OP_SQRT
 907:src/keys.c    **** 	};
 908:src/keys.c    **** 
 909:src/keys.c    **** 	enum shifts shift = reset_shift();
 910:src/keys.c    **** 	int lc = keycode_to_linear(c);
 911:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 912:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 913:src/keys.c    **** 	if (no_int)
 914:src/keys.c    **** 		op &= ~NO_INT;
 915:src/keys.c    **** 
 916:src/keys.c    **** 	switch (c) {
 917:src/keys.c    **** 	case K00:
 918:src/keys.c    **** 	  if (! UState.intm) {
 919:src/keys.c    **** 	    State2.hyp = 1;
 920:src/keys.c    **** 	    State2.dot = op;
 921:src/keys.c    **** 	    // State2.cmplx = 0;
 922:src/keys.c    **** 	    return STATE_UNFINISHED;
 923:src/keys.c    **** 	  }
 924:src/keys.c    **** 	  // fall through
 925:src/keys.c    **** 	case K01:
 926:src/keys.c    **** #ifdef DM42
 927:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 928:src/keys.c    **** 	    return check_f_key(lc, op_map2[lc]);
 929:src/keys.c    **** 	  }
 930:src/keys.c    **** 	  break;
 931:src/keys.c    **** #endif
 932:src/keys.c    **** #ifndef DM42
 933:src/keys.c    **** 	case K02:
 934:src/keys.c    **** #endif
 935:src/keys.c    **** 	case K03:
 936:src/keys.c    **** #ifdef DM42
 937:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 938:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 939:src/keys.c    **** 		}
 940:src/keys.c    **** 		break;
 941:src/keys.c    **** #else
ARM GAS  /tmp/cccKVeLo.s 			page 18


 942:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 943:src/keys.c    **** 			return check_f_key(2, op_map2[lc]);
 944:src/keys.c    **** 		}
 945:src/keys.c    **** 		break;
 946:src/keys.c    **** #endif
 947:src/keys.c    **** 	case K20:				// Alpha
 948:src/keys.c    **** 		if (shift == SHIFT_F) {
 949:src/keys.c    **** 			if (is_bad_cmdline())
 950:src/keys.c    **** 				return STATE_UNFINISHED;
 951:src/keys.c    **** 			process_cmdline_set_lift();
 952:src/keys.c    **** 			State2.alphas = 1;
 953:src/keys.c    **** #ifdef DM42
 954:src/keys.c    **** 			set_menu(16);
 955:src/keys.c    **** 			display_current_menu();
 956:src/keys.c    **** #endif
 957:src/keys.c    **** 		}
 958:src/keys.c    **** 		break;
 959:src/keys.c    **** #ifdef DM42
 960:src/keys.c    **** 	case K31:
 961:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(13)) {// Log - so D key
 962:src/keys.c    **** 	    return OP_SPEC | OP_D;
 963:src/keys.c    **** 	  }
 964:src/keys.c    **** 	  break;
 965:src/keys.c    **** 	case K30:
 966:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(14)) {// Ln - so E key
 967:src/keys.c    **** 	    return OP_SPEC | OP_E;
 968:src/keys.c    **** 	  }
 969:src/keys.c    **** 	  break;
 970:src/keys.c    **** #endif
 971:src/keys.c    **** 	case K51:
 972:src/keys.c    **** 		if (is_bad_cmdline())
 973:src/keys.c    **** 			return STATE_UNFINISHED;
 974:src/keys.c    **** 		process_cmdline_set_lift();
 975:src/keys.c    **** 		State2.test = op;
 976:src/keys.c    **** 		return STATE_UNFINISHED;
 977:src/keys.c    **** 
 978:src/keys.c    **** 	case K50:
 979:src/keys.c    **** #ifndef REALBUILD
 980:src/keys.c    **** 		if (SHIFT_N != shift_down()) {
 981:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 982:src/keys.c    **** 			return STATE_UNFINISHED;
 983:src/keys.c    **** 		}
 984:src/keys.c    **** #endif
 985:src/keys.c    **** 	case K52:
 986:src/keys.c    **** 	case K53:
 987:src/keys.c    **** 	case K63:
 988:src/keys.c    **** 	case K64:
 989:src/keys.c    **** 		if (op != (OP_NIL | OP_RTN)) {
 990:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 991:src/keys.c    **** 				init_arg((enum rarg) op);
 992:src/keys.c    **** 			}
 993:src/keys.c    **** 			return STATE_UNFINISHED;
 994:src/keys.c    **** 		}
 995:src/keys.c    **** 		break;
 996:src/keys.c    **** 
 997:src/keys.c    **** 	default:
 998:src/keys.c    **** 		break;
ARM GAS  /tmp/cccKVeLo.s 			page 19


 999:src/keys.c    **** 	}
1000:src/keys.c    **** 	if (no_int && UState.intm)
1001:src/keys.c    **** 		return STATE_UNFINISHED;
1002:src/keys.c    **** 
1003:src/keys.c    **** 	return check_confirm(op);
1004:src/keys.c    **** #undef NO_INT
1005:src/keys.c    **** }
1006:src/keys.c    **** 
1007:src/keys.c    **** /*
1008:src/keys.c    ****  *  Process a key code after h shift
1009:src/keys.c    ****  */
1010:src/keys.c    **** static int process_h_shifted(const keycode c) {
1011:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
1012:src/keys.c    **** #define NO_INT   0x4000
1013:src/keys.c    **** 	static const unsigned short int op_map[] = {
1014:src/keys.c    **** 		// Row 1
1015:src/keys.c    **** 		_RARG   | RARG_STD,
1016:src/keys.c    **** 		_RARG   | RARG_FIX,
1017:src/keys.c    **** 		_RARG   | RARG_SCI,
1018:src/keys.c    **** 		_RARG   | RARG_ENG,
1019:src/keys.c    **** 		STATE_UNFINISHED,	// CONV
1020:src/keys.c    **** 		STATE_UNFINISHED,	// MODE
1021:src/keys.c    **** 		// Row 2
1022:src/keys.c    **** 		STATE_UNFINISHED,	// CAT
1023:src/keys.c    **** 		_RARG   | RARG_VIEW,
1024:src/keys.c    **** 		OP_NIL  | OP_RUP,
1025:src/keys.c    **** 		// Row 3
1026:src/keys.c    **** 		_RARG	| RARG_INTNUM,	// CONST, will be emitted in integer mode only
1027:src/keys.c    **** 		_RARG   | RARG_SWAPX,
1028:src/keys.c    **** 		OP_MON  | OP_NOT,
1029:src/keys.c    **** 		CONST(OP_PI) | NO_INT,
1030:src/keys.c    **** 		OP_NIL  | OP_rCLX,
1031:src/keys.c    **** 		// Row 4
1032:src/keys.c    **** 		_RARG   | RARG_GTO,
1033:src/keys.c    **** 		OP_DYA  | OP_LAND,
1034:src/keys.c    **** 		OP_DYA  | OP_LOR,
1035:src/keys.c    **** 		OP_DYA  | OP_LXOR,
1036:src/keys.c    **** 		OP_DYA  | OP_MOD,
1037:src/keys.c    **** 		// Row 5
1038:src/keys.c    **** 		OP_MON  | OP_FACT,
1039:src/keys.c    **** 		STATE_UNFINISHED,	// PROB
1040:src/keys.c    **** 		STATE_UNFINISHED,	// STAT
1041:src/keys.c    **** 		STATE_UNFINISHED,	// CFIT
1042:src/keys.c    **** 		STATE_UNFINISHED,	// MATRIX
1043:src/keys.c    **** 		// Row 6
1044:src/keys.c    **** 		STATE_UNFINISHED,	// STATUS
1045:src/keys.c    **** 		STATE_UNFINISHED,	// TEST
1046:src/keys.c    **** 		STATE_UNFINISHED,	// P.FCN
1047:src/keys.c    **** 		STATE_UNFINISHED,	// X.FCN
1048:src/keys.c    **** 		OP_SPEC | OP_SIGMAMINUS | NO_INT,
1049:src/keys.c    **** 		// Row 7
1050:src/keys.c    **** 		OP_NIL | OP_OFF,
1051:src/keys.c    **** 		_RARG   | RARG_PAUSE,
1052:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1053:src/keys.c    **** 		OP_NIL  | OP_THOUS_OFF,
1054:src/keys.c    **** #else
1055:src/keys.c    ****  		OP_NIL  | OP_RADCOM,
ARM GAS  /tmp/cccKVeLo.s 			page 20


1056:src/keys.c    **** #endif
1057:src/keys.c    **** 		STATE_UNFINISHED,	// P/R
1058:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS | NO_INT,
1059:src/keys.c    **** #ifdef DM42
1060:src/keys.c    **** 		OP_NIL | OP_NOP,       // shifts etc.
1061:src/keys.c    **** #endif
1062:src/keys.c    **** 	};
1063:src/keys.c    **** 
1064:src/keys.c    **** 	int lc = keycode_to_linear(c);
1065:src/keys.c    **** 	int op = op_map[lc];
1066:src/keys.c    **** 	reset_shift();
1067:src/keys.c    **** 
1068:src/keys.c    **** 	// The switch handles all the special cases
1069:src/keys.c    **** 	switch (c) {
1070:src/keys.c    **** 	case K62:
1071:src/keys.c    **** 		if (UState.intm)
1072:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
1073:src/keys.c    **** 		else
1074:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1075:src/keys.c    **** 			if (UState.nothousands) op = OP_NIL | OP_THOUS_ON;
1076:src/keys.c    **** #else
1077:src/keys.c    **** 			if (UState.fraccomma) op = OP_NIL | OP_RADDOT;
1078:src/keys.c    **** #endif
1079:src/keys.c    **** 		break;
1080:src/keys.c    **** 
1081:src/keys.c    **** 	case K63:					// Program<->Run mode
1082:src/keys.c    **** 		if (is_bad_cmdline())
1083:src/keys.c    **** 			return STATE_UNFINISHED;
1084:src/keys.c    **** 		State2.runmode = 1 - State2.runmode;
1085:src/keys.c    **** 		process_cmdline_set_lift();
1086:src/keys.c    **** 		update_program_bounds(1);
1087:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
1088:src/keys.c    **** 			set_pc(0);
1089:src/keys.c    **** 		break;
1090:src/keys.c    **** 
1091:src/keys.c    **** 	default:
1092:src/keys.c    **** 		break;
1093:src/keys.c    **** 	}
1094:src/keys.c    **** 
1095:src/keys.c    **** 	if (op != STATE_UNFINISHED) {
1096:src/keys.c    **** 		if (op & _RARG) {
1097:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
1098:src/keys.c    **** 			op = STATE_UNFINISHED;
1099:src/keys.c    **** 		}
1100:src/keys.c    **** 	}
1101:src/keys.c    **** 	return UState.intm && (op & NO_INT) ? STATE_UNFINISHED : op & ~NO_INT;
1102:src/keys.c    **** #undef _RARG
1103:src/keys.c    **** #undef NO_INT
1104:src/keys.c    **** }
1105:src/keys.c    **** 
1106:src/keys.c    **** /*
1107:src/keys.c    ****  *  Process a key code after CPX
1108:src/keys.c    ****  */
1109:src/keys.c    **** static int process_cmplx(const keycode c) {
1110:src/keys.c    **** #define _RARG   0xFF00
1111:src/keys.c    **** #define CSWAPXZ RARG(RARG_CSWAPX, regZ_idx)
1112:src/keys.c    **** #define CNUM(n) RARG(RARG_INTNUM_CMPLX, n)
ARM GAS  /tmp/cccKVeLo.s 			page 21


1113:src/keys.c    **** 
1114:src/keys.c    **** 	static const unsigned short int op_map[][4] = {
1115:src/keys.c    **** 		// Row 1
1116:src/keys.c    **** 		{ 1,			1,                   0,                   0		      }, // HYP
1117:src/keys.c    **** 		{ OP_CMON | OP_RECIP,	OP_CMON | OP_SIN,    OP_CMON | OP_ASIN,   STATE_UNFINISHED    },
1118:src/keys.c    **** 		{ OP_CDYA | OP_POW,	OP_CMON | OP_COS,    OP_CMON | OP_ACOS,   STATE_UNFINISHED    },
1119:src/keys.c    **** 		{ OP_CMON | OP_SQRT,	OP_CMON | OP_TAN,    OP_CMON | OP_ATAN,   STATE_UNFINISHED    },
1120:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_NIL | OP_P2R,     OP_NIL | OP_R2P,     STATE_UNFINISHED    },
1121:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    }, // CPX
1122:src/keys.c    **** 		// Row 2
1123:src/keys.c    **** 		{ _RARG | RARG_CSTO,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1124:src/keys.c    **** 		{ _RARG | RARG_CRCL,	STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CVIEW  },
1125:src/keys.c    **** 		{ OP_NIL | OP_CRDOWN,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_CRUP    }, // R^
1126:src/keys.c    **** 		// Row 3
1127:src/keys.c    **** 		{ OP_NIL | OP_CENTER,	STATE_UNFINISHED,    OP_NIL | OP_CFILL,   OP_NIL | OP_CFILL   }, // ENTER
1128:src/keys.c    **** 		{ CSWAPXZ,		STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CSWAPX },
1129:src/keys.c    **** 		{ OP_CMON | OP_CCHS,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_CMON | OP_CCONJ  },
1130:src/keys.c    **** 		{ CONST_CMPLX(OP_PI),	STATE_UNFINISHED,    STATE_UNFINISHED,    CONST_CMPLX(OP_PI)  },
1131:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1132:src/keys.c    **** 		// Row 4
1133:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CMON | OP_EXP,    OP_CMON | OP_LN,     STATE_UNFINISHED    },
1134:src/keys.c    **** 		{ CNUM(7),		OP_CMON | OP_10POWX, OP_CMON | OP_LOG,    STATE_UNFINISHED    },
1135:src/keys.c    **** 		{ CNUM(8),		OP_CMON | OP_2POWX,  OP_CMON | OP_LG2,    STATE_UNFINISHED    },
1136:src/keys.c    **** 		{ CNUM(9),		OP_CDYA | OP_POW,    OP_CDYA | OP_LOGXY,  STATE_UNFINISHED    },
1137:src/keys.c    **** 		{ OP_CDYA | OP_DIV,	OP_CMON | OP_RECIP,  OP_CDYA | OP_PARAL,  STATE_UNFINISHED    },
1138:src/keys.c    **** 		// Row 5
1139:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CDYA | OP_COMB,   OP_CDYA | OP_PERM,   OP_CMON | OP_FACT   },
1140:src/keys.c    **** 		{ CNUM(4),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1141:src/keys.c    **** 		{ CNUM(5),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1142:src/keys.c    **** 		{ CNUM(6),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1143:src/keys.c    **** 		{ OP_CDYA | OP_MUL,	OP_CMON | OP_SQRT,   OP_CMON | OP_SQR,    OP_CMON | OP_SQR    },
1144:src/keys.c    **** 		// Row 6
1145:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1146:src/keys.c    **** 		{ CNUM(1),		TST_EQ,              TST_NE,              STATE_UNFINISHED    }, // tests
1147:src/keys.c    **** 		{ CNUM(2),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1148:src/keys.c    **** 		{ CNUM(3),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1149:src/keys.c    **** 		{ OP_CDYA | OP_SUB,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1150:src/keys.c    **** 		// Row 7
1151:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_OFF     },
1152:src/keys.c    **** 		{ CNUM(0),		OP_CMON | OP_ABS,    OP_CMON | OP_RND,    STATE_UNFINISHED    },
1153:src/keys.c    **** 		{ OP_NIL | OP_cmplxI,	OP_CMON | OP_TRUNC,  OP_CMON | OP_FRAC,   STATE_UNFINISHED    },
1154:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1155:src/keys.c    **** 		{ OP_NIL | OP_STOPWATCH, STATE_UNFINISHED,   STATE_UNFINISHED,    STATE_UNFINISHED    },
1156:src/keys.c    **** #else
1157:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1158:src/keys.c    **** #endif
1159:src/keys.c    **** 		{ OP_CDYA | OP_ADD,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1160:src/keys.c    **** #ifdef DM42
1161:src/keys.c    **** 		{ OP_NIL | OP_NOP,	OP_NIL | OP_NOP,    OP_NIL | OP_NOP,    OP_NIL | OP_NOP    }
1162:src/keys.c    **** #endif
1163:src/keys.c    **** 	};
1164:src/keys.c    **** 
1165:src/keys.c    **** 	enum shifts shift = reset_shift();
1166:src/keys.c    **** 	int lc = keycode_to_linear(c);
1167:src/keys.c    **** 	int op = op_map[lc][shift];
1168:src/keys.c    **** 	State2.cmplx = 0;
1169:src/keys.c    **** 
ARM GAS  /tmp/cccKVeLo.s 			page 22


1170:src/keys.c    **** 	if ((op & _RARG) == _RARG) {
1171:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
1172:src/keys.c    **** 		return STATE_UNFINISHED;
1173:src/keys.c    **** 	}
1174:src/keys.c    **** 	if (c == K00) {
1175:src/keys.c    **** 		// HYP
1176:src/keys.c    **** 		process_cmdline_set_lift();
1177:src/keys.c    **** 		State2.hyp = 1;
1178:src/keys.c    **** 		State2.dot = op;
1179:src/keys.c    **** 		State2.cmplx = 1;
1180:src/keys.c    **** 		return STATE_UNFINISHED;
1181:src/keys.c    **** 	}
1182:src/keys.c    **** 
1183:src/keys.c    **** 	if (shift != SHIFT_N) {
1184:src/keys.c    **** 		switch (c) {
1185:src/keys.c    **** 		case K_CMPLX:
1186:src/keys.c    **** 			set_shift(shift);
1187:src/keys.c    **** 			break;
1188:src/keys.c    **** 
1189:src/keys.c    **** 		case K51:
1190:src/keys.c    **** 			if (op != STATE_UNFINISHED) {
1191:src/keys.c    **** 				if (is_bad_cmdline())
1192:src/keys.c    **** 					return STATE_UNFINISHED;
1193:src/keys.c    **** 				process_cmdline_set_lift();
1194:src/keys.c    **** 				State2.cmplx = 1;
1195:src/keys.c    **** 				State2.test = op;
1196:src/keys.c    **** 			}
1197:src/keys.c    **** 			return STATE_UNFINISHED;
1198:src/keys.c    **** 
1199:src/keys.c    **** 		case K60:
1200:src/keys.c    **** 			init_state();
1201:src/keys.c    **** 			break;
1202:src/keys.c    **** 
1203:src/keys.c    **** 		default:
1204:src/keys.c    **** 			break;
1205:src/keys.c    **** 		}
1206:src/keys.c    **** 	}
1207:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1208:src/keys.c    **** 	return check_confirm(op);
1209:src/keys.c    **** #else
1210:src/keys.c    **** 	return op;
1211:src/keys.c    **** #endif
1212:src/keys.c    **** 
1213:src/keys.c    **** #undef _RARG
1214:src/keys.c    **** #undef CSWAPXZ
1215:src/keys.c    **** #undef CNUM
1216:src/keys.c    **** }
1217:src/keys.c    **** 
1218:src/keys.c    **** 
1219:src/keys.c    **** 
1220:src/keys.c    **** /*
1221:src/keys.c    ****  * Fairly simple routine for dealing with the HYP prefix.
1222:src/keys.c    ****  * This setting can only be followed by 4, 5, or 6 to specify
1223:src/keys.c    ****  * the function.  The inverse routines use the code too, the State2.dot
1224:src/keys.c    ****  * is 1 for normal and 0 for inverse hyperbolic.  We also have to
1225:src/keys.c    ****  * deal with the complex versions and the handling of that key and
1226:src/keys.c    ****  * the ON key are dealt with by our caller.
ARM GAS  /tmp/cccKVeLo.s 			page 23


1227:src/keys.c    ****  */
1228:src/keys.c    **** static int process_hyp(const keycode c) {
1229:src/keys.c    **** 	static const unsigned char op_map[][2] = {
1230:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
1231:src/keys.c    **** 		{ OP_ACOSH, OP_COSH },
1232:src/keys.c    **** 		{ OP_ATANH, OP_TANH }
1233:src/keys.c    **** 	};
1234:src/keys.c    **** 	int cmplx = State2.cmplx;
1235:src/keys.c    **** 	int f = State2.dot;
1236:src/keys.c    **** 
1237:src/keys.c    **** 	State2.hyp = 0;
1238:src/keys.c    **** 	State2.cmplx = 0;
1239:src/keys.c    **** 	State2.dot = 0;
1240:src/keys.c    **** #ifdef DM42
1241:src/keys.c    **** 	reset_shift();
1242:src/keys.c    **** #endif
1243:src/keys.c    **** 	switch ((int)c) {
1244:src/keys.c    **** 
1245:src/keys.c    **** 	case K01:
1246:src/keys.c    **** 	case K02:
1247:src/keys.c    **** 	case K03:
1248:src/keys.c    **** 		return (cmplx ? OP_CMON : OP_MON) | op_map[c - K01][f];
1249:src/keys.c    **** 
1250:src/keys.c    **** 	case K_CMPLX:
1251:src/keys.c    **** 		cmplx = ! cmplx;
1252:src/keys.c    **** 		goto stay;
1253:src/keys.c    **** 
1254:src/keys.c    **** #ifndef DM42
1255:src/keys.c    **** 	case K_F: 
1256:src/keys.c    **** 	case K_G:
1257:src/keys.c    **** 		f = (c == K_F);
1258:src/keys.c    **** 		// fall through
1259:src/keys.c    **** #else
1260:src/keys.c    **** 	case K_F:
1261:src/keys.c    **** 	  if (c == K_F) f = 1 - f;
1262:src/keys.c    **** #endif
1263:src/keys.c    **** 	stay:
1264:src/keys.c    **** 		// process_cmdline_set_lift();
1265:src/keys.c    **** 		State2.hyp = 1;
1266:src/keys.c    **** 		State2.cmplx = cmplx;
1267:src/keys.c    **** 		State2.dot = f;
1268:src/keys.c    **** 		break;
1269:src/keys.c    **** 
1270:src/keys.c    **** 	default:
1271:src/keys.c    **** 		break;
1272:src/keys.c    **** 	}
1273:src/keys.c    **** 	return STATE_UNFINISHED;
1274:src/keys.c    **** }
1275:src/keys.c    **** 
1276:src/keys.c    **** 
1277:src/keys.c    **** /*
1278:src/keys.c    ****  *  Process a key code after ->
1279:src/keys.c    ****  */
1280:src/keys.c    **** static int process_arrow(const keycode c) {
1281:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
1282:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
1283:src/keys.c    **** 		{ OP_MON | OP_2RAD,  OP_MON | OP_HMS2 },
ARM GAS  /tmp/cccKVeLo.s 			page 24


1284:src/keys.c    **** 		{ OP_MON | OP_2GRAD, STATE_UNFINISHED }
1285:src/keys.c    **** 	};
1286:src/keys.c    **** 	static const enum single_disp disp[][2] = {
1287:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
1288:src/keys.c    **** 		{ SDISP_HEX, SDISP_DEC }
1289:src/keys.c    **** 	};
1290:src/keys.c    **** 	const int shift = reset_shift();
1291:src/keys.c    **** 	const int f = (shift == SHIFT_F);
1292:src/keys.c    **** 
1293:src/keys.c    **** 	State2.arrow = 0;
1294:src/keys.c    **** #ifdef DM42
1295:src/keys.c    **** 	set_last_menu ();
1296:src/keys.c    **** 	display_current_menu ();
1297:src/keys.c    **** #endif
1298:src/keys.c    **** 	if (shift == SHIFT_N) return STATE_UNFINISHED;
1299:src/keys.c    **** 	
1300:src/keys.c    **** 	if (c >= K10 && c <= K12)
1301:src/keys.c    **** 		return op_map[c - K10][f];
1302:src/keys.c    **** 
1303:src/keys.c    **** 	if (c == K22 || c == K23)
1304:src/keys.c    **** 		set_smode(disp[c - K22][f]);
1305:src/keys.c    **** 
1306:src/keys.c    **** 	return STATE_UNFINISHED;
1307:src/keys.c    **** }
1308:src/keys.c    **** 
1309:src/keys.c    **** 
1310:src/keys.c    **** /* Process a GTO . sequence
1311:src/keys.c    ****  */
1312:src/keys.c    **** static int gtodot_digit(const int n) {
  30              		.loc 1 1312 38 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
1313:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  34              		.loc 1 1313 2 view .LVU1
1314:src/keys.c    **** 	const int lib = nLIB(state_pc());
  35              		.loc 1 1314 18 is_stmt 0 view .LVU2
  36 0000 144B     		ldr	r3, .L5
  37 0002 1A68     		ldr	r2, [r3]
1312:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  38              		.loc 1 1312 38 view .LVU3
  39 0004 70B5     		push	{r4, r5, r6, lr}
  40              		.cfi_def_cfa_offset 16
  41              		.cfi_offset 4, -16
  42              		.cfi_offset 5, -12
  43              		.cfi_offset 6, -8
  44              		.cfi_offset 14, -4
1313:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  45              		.loc 1 1313 24 view .LVU4
  46 0006 144E     		ldr	r6, .L5+4
  47              		.loc 1 1314 18 view .LVU5
  48 0008 B2F8E057 		ldrh	r5, [r2, #2016]
1313:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  49              		.loc 1 1313 24 view .LVU6
  50 000c 3389     		ldrh	r3, [r6, #8]
  51              		.loc 1 1314 18 view .LVU7
  52 000e AD0B     		lsrs	r5, r5, #14
ARM GAS  /tmp/cccKVeLo.s 			page 25


1313:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  53              		.loc 1 1313 32 view .LVU8
  54 0010 03EB8303 		add	r3, r3, r3, lsl #2
1312:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  55              		.loc 1 1312 38 view .LVU9
  56 0014 0446     		mov	r4, r0
1315:src/keys.c    **** 
1316:src/keys.c    **** 	if (val > sizeLIB(lib) / 10)
  57              		.loc 1 1316 12 view .LVU10
  58 0016 2846     		mov	r0, r5
  59              	.LVL1:
1313:src/keys.c    **** 	const int lib = nLIB(state_pc());
  60              		.loc 1 1313 12 view .LVU11
  61 0018 04EB4304 		add	r4, r4, r3, lsl #1
  62              	.LVL2:
1314:src/keys.c    **** 
  63              		.loc 1 1314 2 is_stmt 1 view .LVU12
  64              		.loc 1 1316 2 view .LVU13
  65              		.loc 1 1316 12 is_stmt 0 view .LVU14
  66 001c FFF7FEFF 		bl	sizeLIB
  67              	.LVL3:
  68              		.loc 1 1316 25 view .LVU15
  69 0020 0E4A     		ldr	r2, .L5+8
  70 0022 82FB0032 		smull	r3, r2, r2, r0
  71 0026 C317     		asrs	r3, r0, #31
  72 0028 C3EBA203 		rsb	r3, r3, r2, asr #2
  73              		.loc 1 1316 5 view .LVU16
  74 002c A342     		cmp	r3, r4
  75 002e 0FDB     		blt	.L1
1317:src/keys.c    **** 		return val;
1318:src/keys.c    **** 	if (++State2.numdigit == 3 + (lib & 1))
  76              		.loc 1 1318 2 is_stmt 1 view .LVU17
  77              		.loc 1 1318 6 is_stmt 0 view .LVU18
  78 0030 F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
  79              		.loc 1 1318 29 view .LVU19
  80 0032 15F0010F 		tst	r5, #1
  81              		.loc 1 1318 6 view .LVU20
  82 0036 03F10103 		add	r3, r3, #1
  83 003a DBB2     		uxtb	r3, r3
  84              		.loc 1 1318 29 view .LVU21
  85 003c 0CBF     		ite	eq
  86 003e 0322     		moveq	r2, #3
  87 0040 0422     		movne	r2, #4
  88              		.loc 1 1318 5 view .LVU22
  89 0042 9342     		cmp	r3, r2
1319:src/keys.c    **** 		return val;
1320:src/keys.c    **** 	State2.digval = val;
  90              		.loc 1 1320 2 is_stmt 1 view .LVU23
  91              		.loc 1 1320 16 is_stmt 0 view .LVU24
  92 0044 18BF     		it	ne
  93 0046 3481     		strhne	r4, [r6, #8]	@ movhi
1321:src/keys.c    **** 	return -1;
  94              		.loc 1 1321 2 is_stmt 1 view .LVU25
1318:src/keys.c    **** 		return val;
  95              		.loc 1 1318 5 is_stmt 0 view .LVU26
  96 0048 F372     		strb	r3, [r6, #11]
  97              		.loc 1 1321 9 view .LVU27
ARM GAS  /tmp/cccKVeLo.s 			page 26


  98 004a 18BF     		it	ne
  99 004c 4FF0FF34 		movne	r4, #-1
 100              	.LVL4:
 101              	.L1:
1322:src/keys.c    **** }
 102              		.loc 1 1322 1 view .LVU28
 103 0050 2046     		mov	r0, r4
 104 0052 70BD     		pop	{r4, r5, r6, pc}
 105              	.LVL5:
 106              	.L6:
 107              		.loc 1 1322 1 view .LVU29
 108              		.align	2
 109              	.L5:
 110 0054 00000000 		.word	main_ram
 111 0058 00000000 		.word	StateWhileOn
 112 005c 67666666 		.word	1717986919
 113              		.cfi_endproc
 114              	.LFE25:
 116              		.section	.text.check_f_key,"ax",%progbits
 117              		.align	1
 118              		.p2align 2,,3
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu fpv4-sp-d16
 124              	check_f_key:
 125              	.LVL6:
 126              	.LFB17:
 655:src/keys.c    **** 	const int code = 100 + n;
 127              		.loc 1 655 47 is_stmt 1 view -0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 656:src/keys.c    **** 	unsigned int pc = state_pc();
 131              		.loc 1 656 2 view .LVU31
 655:src/keys.c    **** 	const int code = 100 + n;
 132              		.loc 1 655 47 is_stmt 0 view .LVU32
 133 0000 38B5     		push	{r3, r4, r5, lr}
 134              		.cfi_def_cfa_offset 16
 135              		.cfi_offset 3, -16
 136              		.cfi_offset 4, -12
 137              		.cfi_offset 5, -8
 138              		.cfi_offset 14, -4
 659:src/keys.c    **** 		if (isXROM(pc))
 139              		.loc 1 659 6 view .LVU33
 140 0002 0D4B     		ldr	r3, .L17
 141 0004 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 142              	.LVL7:
 657:src/keys.c    **** 
 143              		.loc 1 657 2 is_stmt 1 view .LVU34
 659:src/keys.c    **** 		if (isXROM(pc))
 144              		.loc 1 659 2 view .LVU35
 659:src/keys.c    **** 		if (isXROM(pc))
 145              		.loc 1 659 5 is_stmt 0 view .LVU36
 146 0006 5B06     		lsls	r3, r3, #25
 655:src/keys.c    **** 	const int code = 100 + n;
 147              		.loc 1 655 47 view .LVU37
ARM GAS  /tmp/cccKVeLo.s 			page 27


 148 0008 0C46     		mov	r4, r1
 659:src/keys.c    **** 		if (isXROM(pc))
 149              		.loc 1 659 5 view .LVU38
 150 000a 0FD5     		bpl	.L11
 657:src/keys.c    **** 
 151              		.loc 1 657 20 view .LVU39
 152 000c 0B4B     		ldr	r3, .L17+4
 153              	.LVL8:
 657:src/keys.c    **** 
 154              		.loc 1 657 20 view .LVU40
 155 000e 1B68     		ldr	r3, [r3]
 156              	.LVL9:
 657:src/keys.c    **** 
 157              		.loc 1 657 15 view .LVU41
 158 0010 B3F8E037 		ldrh	r3, [r3, #2016]
 159              	.LVL10:
 660:src/keys.c    **** 			pc = 1;
 160              		.loc 1 660 3 is_stmt 1 view .LVU42
 660:src/keys.c    **** 			pc = 1;
 161              		.loc 1 660 7 is_stmt 0 view .LVU43
 162 0014 9A0B     		lsrs	r2, r3, #14
 661:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 163              		.loc 1 661 7 view .LVU44
 164 0016 032A     		cmp	r2, #3
 165              	.LVL11:
 662:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 166              		.loc 1 662 3 is_stmt 1 view .LVU45
 656:src/keys.c    **** 	unsigned int pc = state_pc();
 167              		.loc 1 656 12 is_stmt 0 view .LVU46
 168 0018 00F16405 		add	r5, r0, #100
 169              	.LVL12:
 662:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 170              		.loc 1 662 7 view .LVU47
 171 001c 2946     		mov	r1, r5
 172              	.LVL13:
 662:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 173              		.loc 1 662 7 view .LVU48
 174 001e 14BF     		ite	ne
 175 0020 1846     		movne	r0, r3
 176              	.LVL14:
 662:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 177              		.loc 1 662 7 view .LVU49
 178 0022 0120     		moveq	r0, #1
 179 0024 0222     		movs	r2, #2
 180 0026 FFF7FEFF 		bl	find_label_from
 181              	.LVL15:
 662:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 182              		.loc 1 662 6 view .LVU50
 183 002a 08B9     		cbnz	r0, .L16
 184              	.LVL16:
 185              	.L11:
 665:src/keys.c    **** }
 186              		.loc 1 665 9 view .LVU51
 187 002c 2046     		mov	r0, r4
 666:src/keys.c    **** 
 188              		.loc 1 666 1 view .LVU52
 189 002e 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/cccKVeLo.s 			page 28


 190              	.LVL17:
 191              	.L16:
 663:src/keys.c    **** 	}
 192              		.loc 1 663 4 is_stmt 1 view .LVU53
 663:src/keys.c    **** 	}
 193              		.loc 1 663 11 is_stmt 0 view .LVU54
 194 0030 45F4C840 		orr	r0, r5, #25600
 666:src/keys.c    **** 
 195              		.loc 1 666 1 view .LVU55
 196 0034 38BD     		pop	{r3, r4, r5, pc}
 197              	.LVL18:
 198              	.L18:
 666:src/keys.c    **** 
 199              		.loc 1 666 1 view .LVU56
 200 0036 00BF     		.align	2
 201              	.L17:
 202 0038 00000000 		.word	StateWhileOn
 203 003c 00000000 		.word	main_ram
 204              		.cfi_endproc
 205              	.LFE17:
 207              		.section	.text.is_label_or_end_at,"ax",%progbits
 208              		.align	1
 209              		.p2align 2,,3
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 213              		.fpu fpv4-sp-d16
 215              	is_label_or_end_at:
 216              	.LVL19:
 217              	.LFB49:
1323:src/keys.c    **** 
1324:src/keys.c    **** static int gtodot_fkey(int n) {
1325:src/keys.c    **** 	const int code = 100 + n;
1326:src/keys.c    **** 	unsigned int pc = state_pc();
1327:src/keys.c    **** 
1328:src/keys.c    **** 	if(isXROM(pc))
1329:src/keys.c    **** 		pc = 1;
1330:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
1331:src/keys.c    **** 	if (pc > 0)
1332:src/keys.c    **** 		return pc;
1333:src/keys.c    **** 	return state_pc();
1334:src/keys.c    **** }
1335:src/keys.c    **** 
1336:src/keys.c    **** static int process_gtodot(const keycode c) {
1337:src/keys.c    **** 	int pc = -1;
1338:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
1339:src/keys.c    **** 
1340:src/keys.c    **** 	if (rawpc <= 9) {
1341:src/keys.c    **** 		// Digit 0 - 9
1342:src/keys.c    **** 		pc = gtodot_digit(rawpc);
1343:src/keys.c    **** 	}
1344:src/keys.c    **** #ifdef DM42
1345:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regX_idx) rawpc = gtodot_digit(1); 
1346:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
1347:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
1348:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
1349:src/keys.c    **** #endif
ARM GAS  /tmp/cccKVeLo.s 			page 29


1350:src/keys.c    **** 	else if (c >= K00 && c <= K03) {
1351:src/keys.c    **** 		// A - D
1352:src/keys.c    **** 		rawpc = gtodot_fkey(c - K00);
1353:src/keys.c    **** 		goto fin;
1354:src/keys.c    **** 	}
1355:src/keys.c    **** 	else if (c == K62) {
1356:src/keys.c    **** 		// .
1357:src/keys.c    **** 		rawpc = ProgSize;
1358:src/keys.c    **** 		goto fin;
1359:src/keys.c    **** 	}
1360:src/keys.c    **** 	else if (c == K20) {
1361:src/keys.c    **** 		// ENTER - short circuit processing
1362:src/keys.c    **** 		pc = State2.digval;
1363:src/keys.c    **** 	}
1364:src/keys.c    **** 	else if (c == K24) {
1365:src/keys.c    **** 		// backspace
1366:src/keys.c    **** 		if (State2.numdigit == 0) {
1367:src/keys.c    **** 			goto fin2;
1368:src/keys.c    **** 		} else {
1369:src/keys.c    **** 			State2.numdigit--;
1370:src/keys.c    **** 			State2.digval /= 10;
1371:src/keys.c    **** 		}
1372:src/keys.c    **** 	}
1373:src/keys.c    **** 	else if (c == K_UP) {
1374:src/keys.c    **** 		// up
1375:src/keys.c    **** 		rawpc = state_pc();
1376:src/keys.c    **** 		if (rawpc == 1)
1377:src/keys.c    **** 			rawpc = 0;
1378:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
1379:src/keys.c    **** 		update_program_bounds(1);
1380:src/keys.c    **** 		rawpc = ProgBegin;
1381:src/keys.c    **** 		goto fin;
1382:src/keys.c    **** 	}
1383:src/keys.c    **** 	else if (c == K_DOWN) {
1384:src/keys.c    **** 		// down
1385:src/keys.c    **** 		update_program_bounds(1);
1386:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
1387:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
1388:src/keys.c    **** 			rawpc = 1;
1389:src/keys.c    **** 		goto fin;
1390:src/keys.c    **** 	}
1391:src/keys.c    **** 	if (pc >= 0) {
1392:src/keys.c    **** 		rawpc = find_user_pc(pc);
1393:src/keys.c    **** fin:		set_pc(rawpc);
1394:src/keys.c    **** fin2:		State2.gtodot = 0;
1395:src/keys.c    **** 		State2.digval = 0;
1396:src/keys.c    **** 		State2.numdigit = 0;
1397:src/keys.c    **** 	}
1398:src/keys.c    **** 	return STATE_UNFINISHED;
1399:src/keys.c    **** }
1400:src/keys.c    **** 
1401:src/keys.c    **** 
1402:src/keys.c    **** /* Process a keystroke in alpha mode
1403:src/keys.c    ****  */
1404:src/keys.c    **** static int process_alpha(const keycode c) {
1405:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
1406:src/keys.c    ****         int op = STATE_UNFINISHED;
ARM GAS  /tmp/cccKVeLo.s 			page 30


1407:src/keys.c    **** 	const enum shifts shift = reset_shift();
1408:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
1409:src/keys.c    **** 	State2.alpha_pos = 0;
1410:src/keys.c    **** 
1411:src/keys.c    **** 	switch (c) {
1412:src/keys.c    **** 	case K10:	// STO
1413:src/keys.c    **** 		if (shift == SHIFT_F) {
1414:src/keys.c    **** 			init_arg(RARG_ASTO);
1415:src/keys.c    **** 			return STATE_UNFINISHED;
1416:src/keys.c    **** 		}
1417:src/keys.c    **** 		break;
1418:src/keys.c    **** 
1419:src/keys.c    **** 	case K11:	// RCL - maybe view
1420:src/keys.c    **** 		if (shift == SHIFT_F) {
1421:src/keys.c    **** 			init_arg(RARG_ARCL);
1422:src/keys.c    **** 			return STATE_UNFINISHED;
1423:src/keys.c    **** 		} else if (shift == SHIFT_H) {
1424:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
1425:src/keys.c    **** 			return STATE_UNFINISHED;
1426:src/keys.c    **** 		}
1427:src/keys.c    **** 		break;
1428:src/keys.c    **** 
1429:src/keys.c    **** 	case K20:	// Enter - maybe exit alpha mode
1430:src/keys.c    **** 		if (shift == SHIFT_G || shift == SHIFT_H)
1431:src/keys.c    **** 			break;
1432:src/keys.c    **** 		if (shift == SHIFT_F && ! State2.runmode) {
1433:src/keys.c    **** 			State2.multi = 1;
1434:src/keys.c    **** 			State2.numdigit = 0;
1435:src/keys.c    **** 			CmdBase = DBL_ALPHA;
1436:src/keys.c    **** 			return STATE_UNFINISHED;
1437:src/keys.c    **** 		}
1438:src/keys.c    **** 		State2.alphas = 0;
1439:src/keys.c    **** 		State2.alphashift = 0;
1440:src/keys.c    **** #ifdef DM42
1441:src/keys.c    **** 		set_menu(-1);
1442:src/keys.c    **** 		display_current_menu();
1443:src/keys.c    **** #endif
1444:src/keys.c    **** 		return op;
1445:src/keys.c    **** 
1446:src/keys.c    **** 	case K24:	// Clx - backspace, clear Alpha
1447:src/keys.c    **** 		if (shift == SHIFT_N)
1448:src/keys.c    **** 			return STATE_BACKSPACE;
1449:src/keys.c    **** 		if (shift == SHIFT_H)
1450:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
1451:src/keys.c    **** 		break;
1452:src/keys.c    **** 
1453:src/keys.c    **** 	case K_UP:
1454:src/keys.c    **** 	  if (shift == SHIFT_N) {
1455:src/keys.c    **** 	    if ( State2.runmode ) {
1456:src/keys.c    **** 	      // Alpha scroll left
1457:src/keys.c    **** #ifdef DM42
1458:src/keys.c    **** 	      /* 
1459:src/keys.c    **** 	       * The numbers 20 and 12 below should match the same 
1460:src/keys.c    **** 	       * numbers in display.c, lines 2414 and 2416.
1461:src/keys.c    **** 	       */
1462:src/keys.c    **** #ifdef BIGGER_DISPLAY
1463:src/keys.c    **** 	      if ((alpha_pos == 0) || (alen()-6*alpha_pos >= 20)) {
ARM GAS  /tmp/cccKVeLo.s 			page 31


1464:src/keys.c    **** 		alpha_pos += 1;
1465:src/keys.c    **** 	      }
1466:src/keys.c    **** #else
1467:src/keys.c    **** 	      if ((alpha_pos == 0) || (alen()-6*alpha_pos >= 12)) {
1468:src/keys.c    **** 		alpha_pos += 1;
1469:src/keys.c    **** 	      }
1470:src/keys.c    **** #endif
1471:src/keys.c    **** 	      State2.alpha_pos = alpha_pos;
1472:src/keys.c    **** #else
1473:src/keys.c    **** 	      int n = alpha_pos + 1;
1474:src/keys.c    **** 	      State2.alpha_pos = ( n < ( alen() + 5 ) / 6 ) ? n : alpha_pos;
1475:src/keys.c    **** #endif
1476:src/keys.c    **** 	      return STATE_UNFINISHED;
1477:src/keys.c    **** 	    }
1478:src/keys.c    **** 	    return STATE_BST;
1479:src/keys.c    **** 	  }
1480:src/keys.c    **** 	  break;
1481:src/keys.c    **** 
1482:src/keys.c    **** 	case K_DOWN:
1483:src/keys.c    **** 	  if (shift == SHIFT_N) {
1484:src/keys.c    **** 	    if ( State2.runmode ) {
1485:src/keys.c    **** 	      // Alpha scroll right
1486:src/keys.c    **** 	      if (alpha_pos > 0)
1487:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
1488:src/keys.c    **** 	      return STATE_UNFINISHED;
1489:src/keys.c    **** 	    }
1490:src/keys.c    **** 	    return STATE_SST;
1491:src/keys.c    **** 	  }
1492:src/keys.c    **** 	  break;
1493:src/keys.c    **** 
1494:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
1495:src/keys.c    **** 		if (shift == SHIFT_F)
1496:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
1497:src/keys.c    **** 		else if (shift == SHIFT_H)
1498:src/keys.c    **** 			return OP_NIL | OP_OFF;
1499:src/keys.c    **** 		else if (shift == SHIFT_N) {
1500:src/keys.c    **** 		  set_menu(-1);
1501:src/keys.c    **** 		  display_current_menu();
1502:src/keys.c    **** 		  init_state();
1503:src/keys.c    **** 		}
1504:src/keys.c    **** 		return STATE_UNFINISHED;
1505:src/keys.c    **** 
1506:src/keys.c    **** 	case K63:
1507:src/keys.c    **** 		if (shift == SHIFT_F)
1508:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
1509:src/keys.c    **** 		break;
1510:src/keys.c    **** 
1511:src/keys.c    **** 	default:
1512:src/keys.c    **** 		break;
1513:src/keys.c    **** 	}
1514:src/keys.c    **** 
1515:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
1516:src/keys.c    **** 	if (ch == 0)
1517:src/keys.c    **** 		return STATE_UNFINISHED;
1518:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
1519:src/keys.c    **** }
1520:src/keys.c    **** 
ARM GAS  /tmp/cccKVeLo.s 			page 32


1521:src/keys.c    **** /*
1522:src/keys.c    ****  *  Code to handle all commands with arguments
1523:src/keys.c    ****  */
1524:src/keys.c    **** static void reset_arg(void) {
1525:src/keys.c    **** 	init_arg((enum rarg) 0);
1526:src/keys.c    **** 	State2.rarg = 0;
1527:src/keys.c    **** }
1528:src/keys.c    **** 
1529:src/keys.c    **** static int arg_eval(unsigned int val) {
1530:src/keys.c    **** 	const unsigned int base = CmdBase;
1531:src/keys.c    **** 	int r = RARG(base, val 
1532:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
1533:src/keys.c    **** 		           + (State2.local ? LOCAL_REG_BASE : 0));
1534:src/keys.c    **** 	const unsigned int ssize = (! UState.stack_depth || ! State2.runmode ) ? 4 : 8;
1535:src/keys.c    **** 
1536:src/keys.c    **** 	if (! State2.ind) {
1537:src/keys.c    **** 		/*
1538:src/keys.c    **** 		 *  Central argument checking for some commands
1539:src/keys.c    **** 		 */
1540:src/keys.c    **** #ifdef SHOW_COMPLEX_REGS
1541:src/keys.c    **** 		if (argcmds[base].cmplx && val > TOPREALREG - 2 ) {
1542:src/keys.c    **** 			// remap complex registers cY->T, cZ->A, cT->C
1543:src/keys.c    **** 			                     // 99,   X,   Y,   Z,   T,   A,   B,   C,   D,   L,   I,   J,   K
1544:src/keys.c    **** 			static char remap[] = {  0, 100, 102, 104, 106,   0,   0,   0,   0, 108,   0, 110,   0 };
1545:src/keys.c    **** 			val = (unsigned int) remap[ val - (TOPREALREG - 1) ];
1546:src/keys.c    **** 			if ( val == 0 )
1547:src/keys.c    **** 				return STATE_UNFINISHED;
1548:src/keys.c    **** 			r = RARG(base, val);
1549:src/keys.c    **** 		}
1550:src/keys.c    **** #else
1551:src/keys.c    **** 		if (argcmds[base].cmplx && (val > TOPREALREG - 2 && (val & 1)))
1552:src/keys.c    **** 			// Disallow odd complex register > 98
1553:src/keys.c    **** 			return STATE_UNFINISHED;
1554:src/keys.c    **** #endif
1555:src/keys.c    **** 		if ((base == RARG_STOSTK || base == RARG_RCLSTK) && (val > TOPREALREG - ssize))
1556:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
1557:src/keys.c    **** 			return STATE_UNFINISHED;
1558:src/keys.c    **** 	}
1559:src/keys.c    **** 	// Build op-code
1560:src/keys.c    **** 	reset_arg();
1561:src/keys.c    **** 	return r;
1562:src/keys.c    **** }
1563:src/keys.c    **** 
1564:src/keys.c    **** static int arg_digit(int n) {
1565:src/keys.c    **** 	int lim;
1566:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1567:src/keys.c    **** 	int dispmode = get_dispmode_digs(&lim);
1568:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
1569:src/keys.c    **** #else
1570:src/keys.c    **** 	const unsigned int base = CmdBase;
1571:src/keys.c    **** #endif
1572:src/keys.c    **** 	const unsigned int val = State2.digval * 10 + n;
1573:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
1574:src/keys.c    **** 	
1575:src/keys.c    **** 	if (State2.local) {
1576:src/keys.c    **** 		// Handle local registers and flags
1577:src/keys.c    **** 		lim = MAX_LOCAL_DIRECT - 1;				// default
ARM GAS  /tmp/cccKVeLo.s 			page 33


1578:src/keys.c    **** 		if (State2.runmode) {
1579:src/keys.c    **** 			if (LocalRegs == 0)
1580:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
1581:src/keys.c    **** 			if (is_reg) {
1582:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
1583:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
1584:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
1585:src/keys.c    **** 			}
1586:src/keys.c    **** 		}
1587:src/keys.c    **** 	}
1588:src/keys.c    **** 	else if (is_reg)						// normal register
1589:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
1590:src/keys.c    **** 	else {
1591:src/keys.c    **** 		lim = (int) argcmds[base].lim;				// any other command
1592:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
1593:src/keys.c    **** 			lim = RARG_IND - 1;
1594:src/keys.c    **** 	}
1595:src/keys.c    **** 	if ((int) val > lim)
1596:src/keys.c    **** 		return STATE_UNFINISHED;
1597:src/keys.c    **** 
1598:src/keys.c    **** 	State2.digval = val;
1599:src/keys.c    **** 	++State2.numdigit;
1600:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
1601:src/keys.c    **** 		int result = arg_eval(val);
1602:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
1603:src/keys.c    **** 			--State2.numdigit;
1604:src/keys.c    **** 			State2.digval /= 10;
1605:src/keys.c    **** 		}
1606:src/keys.c    **** 		return result;
1607:src/keys.c    **** 	}
1608:src/keys.c    **** 	return STATE_UNFINISHED;
1609:src/keys.c    **** }
1610:src/keys.c    **** 
1611:src/keys.c    **** static int arg_fkey(int n) {
1612:src/keys.c    **** 	const unsigned int b = CmdBase;
1613:src/keys.c    **** 
1614:src/keys.c    **** 	if (argcmds[b].label || (b >= RARG_SF && b <= RARG_FCF))
1615:src/keys.c    **** 	{
1616:src/keys.c    **** 		if (State2.ind || State2.numdigit > 0)
1617:src/keys.c    **** 			return STATE_UNFINISHED;
1618:src/keys.c    **** 		if (argcmds[b].lim < 100)
1619:src/keys.c    **** 			return STATE_UNFINISHED;
1620:src/keys.c    **** 		return arg_eval(n + 100);
1621:src/keys.c    **** 	}
1622:src/keys.c    **** 	return STATE_UNFINISHED;
1623:src/keys.c    **** }
1624:src/keys.c    **** 
1625:src/keys.c    **** static int arg_storcl_check(const unsigned int b, const int cmplx) {
1626:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
1627:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || b == RARG_FLRCL ||
1628:src/keys.c    **** 			(cmplx && (b == RARG_CSTO || b == RARG_CRCL || b == RARG_FLCRCL)));
1629:src/keys.c    **** #else
1630:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || (cmplx && (b == RARG_CSTO || b == RARG_CRCL )));
1631:src/keys.c    **** #endif
1632:src/keys.c    **** }
1633:src/keys.c    **** 
1634:src/keys.c    **** static int arg_storcl(const unsigned int n, int cmplx) {
ARM GAS  /tmp/cccKVeLo.s 			page 34


1635:src/keys.c    **** 	unsigned int b = CmdBase;
1636:src/keys.c    **** 
1637:src/keys.c    **** 	if (arg_storcl_check(b, cmplx)) {
1638:src/keys.c    **** 		CmdBase += n;
1639:src/keys.c    **** 		return 1;
1640:src/keys.c    **** 	}
1641:src/keys.c    **** 	/* And we can turn off the operation too */
1642:src/keys.c    **** 	if (b >= n) {
1643:src/keys.c    **** 		b -= n;
1644:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
1645:src/keys.c    **** 			CmdBase = b;
1646:src/keys.c    **** 			return 1;
1647:src/keys.c    **** 		}
1648:src/keys.c    **** 	}
1649:src/keys.c    **** 	return 0;
1650:src/keys.c    **** }
1651:src/keys.c    **** 
1652:src/keys.c    **** static int process_arg_dot(const unsigned int base) {
1653:src/keys.c    **** 
1654:src/keys.c    **** 	if (State2.numdigit == 0) {
1655:src/keys.c    **** 		// Only valid at beginning of entry
1656:src/keys.c    **** 		if (State2.dot || State2.local) {
1657:src/keys.c    **** 			// '..' or ENTER '.' = X
1658:src/keys.c    **** 			State2.local = 0;
1659:src/keys.c    **** 			return arg_eval(regX_idx);
1660:src/keys.c    **** 		}
1661:src/keys.c    **** 		if (argcmds[base].local || State2.ind) {
1662:src/keys.c    **** 			// local register or flag select
1663:src/keys.c    **** 			State2.local = 1;
1664:src/keys.c    **** 		}
1665:src/keys.c    **** 		else if (base == RARG_GTO || base == RARG_XEQ) {
1666:src/keys.c    **** 			// Special GTO . sequence
1667:src/keys.c    **** 			if (! State2.ind) {
1668:src/keys.c    **** 				State2.gtodot = 1;
1669:src/keys.c    **** 				reset_arg();
1670:src/keys.c    **** 			}
1671:src/keys.c    **** 		}
1672:src/keys.c    **** 	}
1673:src/keys.c    **** 	return STATE_UNFINISHED;
1674:src/keys.c    **** }
1675:src/keys.c    **** 
1676:src/keys.c    **** static int process_arg_shuffle(int r) {
1677:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
1678:src/keys.c    **** 	if (State2.numdigit < 4)
1679:src/keys.c    **** 		return STATE_UNFINISHED;
1680:src/keys.c    **** 	return arg_eval(State2.digval);
1681:src/keys.c    **** }
1682:src/keys.c    **** 
1683:src/keys.c    **** 
1684:src/keys.c    **** static int process_arg(const keycode c) {
1685:src/keys.c    **** 	unsigned int base = CmdBase;
1686:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
1687:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
1688:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
1689:src/keys.c    **** 	const enum shifts shift = reset_shift();
1690:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
1691:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
ARM GAS  /tmp/cccKVeLo.s 			page 35


1692:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
1693:src/keys.c    **** 
1694:src/keys.c    **** 	n &= ~NO_SHORT;
1695:src/keys.c    **** 	if (base >= NUM_RARG) {
1696:src/keys.c    **** 		reset_arg();
1697:src/keys.c    **** 		return STATE_UNFINISHED;
1698:src/keys.c    **** 	}
1699:src/keys.c    **** #ifdef DM42
1700:src/keys.c    **** 	if ( ! shorthand && ! State2.dot && ! State2.shuffle ) {
1701:src/keys.c    **** 	  switch (n) {
1702:src/keys.c    **** 	  case regX_idx:
1703:src/keys.c    **** 	    return arg_digit(1);
1704:src/keys.c    **** 	  case regY_idx:
1705:src/keys.c    **** 	    return arg_digit(2);
1706:src/keys.c    **** 	  case regZ_idx:
1707:src/keys.c    **** 	    return arg_digit(3);
1708:src/keys.c    **** 	  case regT_idx:
1709:src/keys.c    **** 	    return arg_digit(4);
1710:src/keys.c    **** 	  case 5:
1711:src/keys.c    **** 	  case 6:
1712:src/keys.c    **** 	  case 7:
1713:src/keys.c    **** 	  case 8:
1714:src/keys.c    **** 	  case 9:
1715:src/keys.c    **** 	  case 0:
1716:src/keys.c    **** 	    return arg_digit(n);
1717:src/keys.c    **** 	  }
1718:src/keys.c    **** 	}
1719:src/keys.c    **** #else
1720:src/keys.c    **** 	if (n <= 9 && ! shorthand && ! State2.dot && ! State2.shuffle)
1721:src/keys.c    **** 		return arg_digit(n);
1722:src/keys.c    **** #endif	
1723:src/keys.c    **** 	if (shorthand)
1724:src/keys.c    **** 		// row column shorthand addressing
1725:src/keys.c    **** 		return arg_eval(keycode_to_row_column(c));
1726:src/keys.c    **** 
1727:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1728:src/keys.c    **** 	if (base >= RARG_FIX && base <= RARG_SIG0) {
1729:src/keys.c    **** 		switch ((int)c) {
1730:src/keys.c    **** 		case K_UP:	// up arrow
1731:src/keys.c    **** 			if (--base < RARG_FIX)
1732:src/keys.c    **** 				base = RARG_SIG0;
1733:src/keys.c    **** 			break;
1734:src/keys.c    **** 
1735:src/keys.c    **** 		case K_DOWN:	// down arrow
1736:src/keys.c    **** 		case K01:	// B
1737:src/keys.c    **** 			if (++base > RARG_SIG0)
1738:src/keys.c    **** 				base = RARG_FIX;
1739:src/keys.c    **** 			break;
1740:src/keys.c    **** 		}
1741:src/keys.c    **** 		CmdBase = base;
1742:src/keys.c    **** 	}
1743:src/keys.c    **** #endif
1744:src/keys.c    **** 	/*
1745:src/keys.c    **** 	 *  So far, we've got the digits and some special label addressing keys
1746:src/keys.c    **** 	 *  Handle the rest here.
1747:src/keys.c    **** 	 */
1748:src/keys.c    **** 	switch ((int)c) {
ARM GAS  /tmp/cccKVeLo.s 			page 36


1749:src/keys.c    **** 	case K_F:
1750:src/keys.c    **** 		if (label_addressing)
1751:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
1752:src/keys.c    **** 		break;
1753:src/keys.c    **** 
1754:src/keys.c    **** 	case K_ARROW:		// arrow
1755:src/keys.c    **** 		if (!State2.dot && argcmds[base].indirectokay) {
1756:src/keys.c    **** 			State2.ind = ! State2.ind;
1757:src/keys.c    **** 			if (! stack_reg)
1758:src/keys.c    **** 				State2.dot = 0;
1759:src/keys.c    **** 		}
1760:src/keys.c    **** 		break;
1761:src/keys.c    **** 
1762:src/keys.c    **** 	case K_CMPLX:
1763:src/keys.c    **** 		if (State2.ind || State2.dot)
1764:src/keys.c    **** 			break;
1765:src/keys.c    **** 		if (base == RARG_STO)
1766:src/keys.c    **** 			CmdBase = RARG_STOM;
1767:src/keys.c    **** 		else if (base == RARG_RCL)
1768:src/keys.c    **** 			CmdBase = RARG_RCLM;
1769:src/keys.c    **** 		break;
1770:src/keys.c    **** #ifdef DM42
1771:src/keys.c    **** 	case K41:       // T
1772:src/keys.c    **** 	  if (State2.shuffle)
1773:src/keys.c    **** 	    return process_arg_shuffle(3);
1774:src/keys.c    **** 	case K51:       // X
1775:src/keys.c    **** 	  if (State2.shuffle)
1776:src/keys.c    **** 	    return process_arg_shuffle(0);
1777:src/keys.c    **** 	case K52:	// Y
1778:src/keys.c    **** 	  if (State2.shuffle)
1779:src/keys.c    **** 	    return process_arg_shuffle(1);
1780:src/keys.c    **** 	case K53:       // Z
1781:src/keys.c    **** 	  if (State2.shuffle)
1782:src/keys.c    **** 	    return process_arg_shuffle(2);
1783:src/keys.c    **** #else
1784:src/keys.c    **** 	case K63:	// Y
1785:src/keys.c    **** 	  if (State2.shuffle)
1786:src/keys.c    **** 	    return process_arg_shuffle(1);
1787:src/keys.c    **** #endif
1788:src/keys.c    **** 	case K00:	// A
1789:src/keys.c    **** 	case K01:	// B
1790:src/keys.c    **** 	case K02:	// C
1791:src/keys.c    **** 	case K03:	// D
1792:src/keys.c    **** #ifdef DM42
1793:src/keys.c    **** 	case K12:	// I (lastY)
1794:src/keys.c    **** 	case K13:	// J
1795:src/keys.c    **** 	case K14:	// K
1796:src/keys.c    **** 	case K15:	// L (lastX)
1797:src/keys.c    **** #else
1798:src/keys.c    **** 	case K12:	// I (lastY)
1799:src/keys.c    **** 	case K21:	// J
1800:src/keys.c    **** 	case K22:	// K
1801:src/keys.c    **** 	case K23:	// L (lastX)
1802:src/keys.c    **** #endif
1803:src/keys.c    **** 	  if (State2.dot || stack_reg)
1804:src/keys.c    **** 			return arg_eval(n);
1805:src/keys.c    **** 		if ( c <= K03 )
ARM GAS  /tmp/cccKVeLo.s 			page 37


1806:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
1807:src/keys.c    **** 		break;
1808:src/keys.c    **** #ifdef DM42
1809:src/keys.c    **** 	case K62:	// '.'
1810:src/keys.c    **** 		return process_arg_dot(base);
1811:src/keys.c    **** 
1812:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
1813:src/keys.c    **** 	case K64:		// plus
1814:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
1815:src/keys.c    **** 			return arg_eval(n);
1816:src/keys.c    **** 		break;
1817:src/keys.c    **** 	case K54:               // minus
1818:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
1819:src/keys.c    **** 			reset_arg();
1820:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
1821:src/keys.c    **** 		}
1822:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
1823:src/keys.c    **** 		break;
1824:src/keys.c    **** 	case K44:		// multiply
1825:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
1826:src/keys.c    **** 			return arg_eval(n);
1827:src/keys.c    **** 		break;
1828:src/keys.c    **** 	case K34:
1829:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
1830:src/keys.c    **** 		break;
1831:src/keys.c    **** #else
1832:src/keys.c    **** 	case K62:	// X, '.'
1833:src/keys.c    **** 		if (State2.shuffle)
1834:src/keys.c    **** 			return process_arg_shuffle(0);
1835:src/keys.c    **** 		return process_arg_dot(base);
1836:src/keys.c    **** 
1837:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
1838:src/keys.c    **** 	case K64:		// Z register
1839:src/keys.c    **** 		if (State2.shuffle)
1840:src/keys.c    **** 			return process_arg_shuffle(2);
1841:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
1842:src/keys.c    **** 			return arg_eval(n);
1843:src/keys.c    **** 		break;
1844:src/keys.c    **** 
1845:src/keys.c    **** 	case K54:
1846:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
1847:src/keys.c    **** 			reset_arg();
1848:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
1849:src/keys.c    **** 		}
1850:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
1851:src/keys.c    **** 		break;
1852:src/keys.c    **** 
1853:src/keys.c    **** 	case K44:		// T register
1854:src/keys.c    **** 		if (State2.shuffle)
1855:src/keys.c    **** 			return process_arg_shuffle(3);
1856:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
1857:src/keys.c    **** 			return arg_eval(n);
1858:src/keys.c    **** 		break;
1859:src/keys.c    **** 
1860:src/keys.c    **** 	case K34:
1861:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
1862:src/keys.c    **** 		break;
ARM GAS  /tmp/cccKVeLo.s 			page 38


1863:src/keys.c    **** #endif
1864:src/keys.c    **** 	case K_UP:
1865:src/keys.c    **** 		arg_storcl(RARG_STO_MAX - RARG_STO, 0);
1866:src/keys.c    **** 		break;
1867:src/keys.c    **** 
1868:src/keys.c    **** 	case K_DOWN:
1869:src/keys.c    **** 		arg_storcl(RARG_STO_MIN - RARG_STO, 0);
1870:src/keys.c    **** 		break;
1871:src/keys.c    **** 
1872:src/keys.c    **** 	case K20:				// Enter is a short cut finisher but it also changes a few commands if it is first up
1873:src/keys.c    **** 		if (State2.numdigit == 0 && !State2.ind && !State2.dot) {
1874:src/keys.c    **** 			if (argcmds[base].label) {
1875:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
1876:src/keys.c    **** 				State2.multi = 1;
1877:src/keys.c    **** 				State2.alphashift = 0;
1878:src/keys.c    **** 				State2.rarg = 0;
1879:src/keys.c    **** 			} else if (base == RARG_SCI) {
1880:src/keys.c    **** 				reset_arg();
1881:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
1882:src/keys.c    **** 			} else if (base == RARG_ENG) {
1883:src/keys.c    **** 				reset_arg();
1884:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
1885:src/keys.c    **** 			} else if (argcmds[base].stckreg)
1886:src/keys.c    **** 				State2.dot = 1;
1887:src/keys.c    **** 		} else if (State2.numdigit > 0)
1888:src/keys.c    **** 			return arg_eval(State2.digval);
1889:src/keys.c    **** 		else if (stack_reg)
1890:src/keys.c    **** 			State2.dot = 1 - State2.dot;
1891:src/keys.c    **** 		break;
1892:src/keys.c    **** 
1893:src/keys.c    **** 	case K24:	// <-
1894:src/keys.c    **** 		if (State2.numdigit == 0) {
1895:src/keys.c    **** 			if (State2.dot)
1896:src/keys.c    **** 				State2.dot = 0;
1897:src/keys.c    **** 			else if (State2.local)
1898:src/keys.c    **** 				State2.local = 0;
1899:src/keys.c    **** 			else if (State2.ind)
1900:src/keys.c    **** 				State2.ind = 0;
1901:src/keys.c    **** 			else
1902:src/keys.c    **** 				goto reset;
1903:src/keys.c    **** 		}
1904:src/keys.c    **** 		else {
1905:src/keys.c    **** 			--State2.numdigit;
1906:src/keys.c    **** 			if (State2.shuffle)
1907:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
1908:src/keys.c    **** 			else
1909:src/keys.c    **** 				State2.digval /= 10;
1910:src/keys.c    **** 		}
1911:src/keys.c    **** 		break;
1912:src/keys.c    **** 
1913:src/keys.c    **** 	case K60:
1914:src/keys.c    **** 	reset:
1915:src/keys.c    **** 		reset_arg();
1916:src/keys.c    **** 	default:
1917:src/keys.c    **** 		break;
1918:src/keys.c    **** 	}
1919:src/keys.c    **** 	return STATE_UNFINISHED;
ARM GAS  /tmp/cccKVeLo.s 			page 39


1920:src/keys.c    **** }
1921:src/keys.c    **** 
1922:src/keys.c    **** 
1923:src/keys.c    **** /*
1924:src/keys.c    ****  *  Process arguments to the diverse test commands
1925:src/keys.c    ****  */
1926:src/keys.c    **** static int process_test(const keycode c) {
1927:src/keys.c    **** 	int r = State2.test;
1928:src/keys.c    **** 	int cmpx = State2.cmplx;
1929:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
1930:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
1931:src/keys.c    **** 
1932:src/keys.c    **** 	State2.test = TST_NONE;
1933:src/keys.c    **** 	State2.cmplx = 0;
1934:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
1935:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
1936:src/keys.c    **** 		// Lettered register
1937:src/keys.c    **** 		if (cmpx && (n & 1)) {
1938:src/keys.c    **** 			if (n == regI_idx)
1939:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
1940:src/keys.c    **** 			// Disallow odd complex registers > A
1941:src/keys.c    **** 			goto again;
1942:src/keys.c    **** 		}
1943:src/keys.c    **** 		// Return the command with the register completed
1944:src/keys.c    **** 		return RARG(base, n);
1945:src/keys.c    **** 	}
1946:src/keys.c    **** 	else if ( n == 0 ) {
1947:src/keys.c    **** 		// Special 0
1948:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq0 : OP_Xeq0) + r;
1949:src/keys.c    **** 	}
1950:src/keys.c    **** 	else if ( n == 1 ) {
1951:src/keys.c    **** 		// Special 1
1952:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq1 : OP_Xeq1) + r;
1953:src/keys.c    **** 	}
1954:src/keys.c    **** 	else if ( n <= 9 || c == K_ARROW || c == K62 ) {
1955:src/keys.c    **** 		// digit 2..9, -> or .
1956:src/keys.c    **** 		init_arg((enum rarg)base);
1957:src/keys.c    **** 		return process_arg(c);
1958:src/keys.c    **** 	}
1959:src/keys.c    **** 
1960:src/keys.c    **** 	switch (c) {
1961:src/keys.c    **** 	case K11:					// tests vs register
1962:src/keys.c    **** 	case K20:
1963:src/keys.c    **** 		init_arg((enum rarg)base);
1964:src/keys.c    **** 		return STATE_UNFINISHED;
1965:src/keys.c    **** 
1966:src/keys.c    **** 	//case K60:
1967:src/keys.c    **** 	case K24:
1968:src/keys.c    **** 		return STATE_UNFINISHED;
1969:src/keys.c    **** 
1970:src/keys.c    **** 	default:
1971:src/keys.c    **** 		break;
1972:src/keys.c    **** 	}
1973:src/keys.c    **** again:
1974:src/keys.c    **** 	State2.test = r;
1975:src/keys.c    **** 	State2.cmplx = cmpx;
1976:src/keys.c    **** 	return STATE_UNFINISHED;
ARM GAS  /tmp/cccKVeLo.s 			page 40


1977:src/keys.c    **** }
1978:src/keys.c    **** 
1979:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
1980:src/keys.c    **** /*
1981:src/keys.c    ****  *  Build the user catalogue on the fly in RAM and return the number of entries
1982:src/keys.c    ****  */
1983:src/keys.c    **** #define USER_CAT_MAX 100
1984:src/keys.c    **** s_opcode UserCat[USER_CAT_MAX];
1985:src/keys.c    **** 
1986:src/keys.c    **** static int build_user_cat(void)
1987:src/keys.c    **** {
1988:src/keys.c    **** 	// find the label 'CAT'
1989:src/keys.c    **** 	const int lbl = OP_DBL + (DBL_LBL << DBL_SHIFT) + 'C' + ('A' << 16) + ('T' << 24);
1990:src/keys.c    **** 	unsigned int pc = findmultilbl(lbl, 0);
1991:src/keys.c    **** 	int len = 0;
1992:src/keys.c    **** 	while (pc && len < USER_CAT_MAX) {
1993:src/keys.c    **** 		// do a simnple insert-sort to sort the entries
1994:src/keys.c    **** 		char buf1[16];
1995:src/keys.c    **** 		int i;
1996:src/keys.c    **** 		s_opcode op;
1997:src/keys.c    **** 	next:
1998:src/keys.c    **** 		pc = do_inc(pc, 0);
1999:src/keys.c    **** 		op = (s_opcode) getprog(pc);
2000:src/keys.c    **** 		if (op == (OP_NIL | OP_END))
2001:src/keys.c    **** 			break;
2002:src/keys.c    **** 		if (isDBL(op))
2003:src/keys.c    **** 			continue;
2004:src/keys.c    **** 		if (isRARG(op)) {
2005:src/keys.c    **** 			const s_opcode rarg = RARG_CMD(op);
2006:src/keys.c    **** 			if (rarg != RARG_ALPHA && rarg != RARG_CONV
2007:src/keys.c    **** 			    && rarg != RARG_CONST && rarg != RARG_CONST_CMPLX)
2008:src/keys.c    **** 				op = op & 0xff00;	// remove argument
2009:src/keys.c    **** 		}
2010:src/keys.c    **** 		catcmd(op, buf1);
2011:src/keys.c    **** 		for (i = 0; i < len; ++i) {
2012:src/keys.c    **** 			// Find a position in the table to insert the new entry
2013:src/keys.c    **** 			char buf2[16];
2014:src/keys.c    **** 			const char *p, *q;
2015:src/keys.c    **** 			int diff = 0;
2016:src/keys.c    **** 			if (op == UserCat[i]) {
2017:src/keys.c    **** 				// duplicate entry - ignore
2018:src/keys.c    **** 				goto next;
2019:src/keys.c    **** 			}
2020:src/keys.c    **** 			p = buf1;
2021:src/keys.c    **** 			if (*p == COMPLEX_PREFIX)
2022:src/keys.c    **** 				++p;
2023:src/keys.c    **** 			q = catcmd(UserCat[i], buf2);
2024:src/keys.c    **** 			if (*q == COMPLEX_PREFIX)
2025:src/keys.c    **** 				++q;
2026:src/keys.c    **** 			diff = 0;
2027:src/keys.c    **** 			while (*p != '\0' && diff == 0) {
2028:src/keys.c    **** 				diff = remap_chars(*q++) - remap_chars(*p++);
2029:src/keys.c    **** 			}
2030:src/keys.c    **** 			if ((diff == 0 && *q == 0) ) {
2031:src/keys.c    **** 				// identical according to sort order, insert after
2032:src/keys.c    **** 				++i;
2033:src/keys.c    **** 				break;
ARM GAS  /tmp/cccKVeLo.s 			page 41


2034:src/keys.c    **** 			}
2035:src/keys.c    **** 			if (diff > 0) {
2036:src/keys.c    **** 				// insert new entry before the one found because this is greater
2037:src/keys.c    **** 				break;
2038:src/keys.c    **** 			}
2039:src/keys.c    **** 		}
2040:src/keys.c    **** 		if (i < len) {
2041:src/keys.c    **** 			// Make room
2042:src/keys.c    **** 			xcopy(UserCat + i + 1, UserCat + i, (len - i) << 1);
2043:src/keys.c    **** 		}
2044:src/keys.c    **** 		UserCat[i] = op;
2045:src/keys.c    **** 		++len;
2046:src/keys.c    **** 	}
2047:src/keys.c    **** 	// return the number of entries
2048:src/keys.c    **** 	return len;
2049:src/keys.c    **** }
2050:src/keys.c    **** #endif
2051:src/keys.c    **** 
2052:src/keys.c    **** /* Return the number of entries in the current catalogue.
2053:src/keys.c    ****  * These are all fixed size known at compile time so a table lookup will
2054:src/keys.c    ****  * likely be the most space efficient method.
2055:src/keys.c    ****  */
2056:src/keys.c    **** int current_catalogue_max(void) {
2057:src/keys.c    **** 	// A quick table of catalogue sizes
2058:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues' 
2059:src/keys.c    **** 	static const unsigned char catalogue_sizes[] = 
2060:src/keys.c    **** 	{
2061:src/keys.c    **** 		0, // NONE
2062:src/keys.c    **** 		SIZE_catalogue,
2063:src/keys.c    **** 		SIZE_cplx_catalogue,
2064:src/keys.c    **** 		SIZE_stats_catalogue,
2065:src/keys.c    **** 		SIZE_prob_catalogue,
2066:src/keys.c    **** 		SIZE_int_catalogue,
2067:src/keys.c    **** 		SIZE_prog_catalogue,
2068:src/keys.c    **** 		SIZE_program_xfcn,
2069:src/keys.c    **** 		SIZE_test_catalogue,
2070:src/keys.c    **** 		SIZE_mode_catalogue,
2071:src/keys.c    **** 		SIZE_alpha_catalogue,
2072:src/keys.c    **** 		SIZE_alpha_symbols,
2073:src/keys.c    **** 		SIZE_alpha_compares,
2074:src/keys.c    **** 		SIZE_alpha_arrows,
2075:src/keys.c    **** 		SIZE_alpha_letters,
2076:src/keys.c    **** 		SIZE_alpha_subscripts,
2077:src/keys.c    **** 		NUM_CONSTS_CAT,
2078:src/keys.c    **** 		NUM_CONSTS_CAT,
2079:src/keys.c    **** 		SIZE_conv_catalogue,
2080:src/keys.c    **** 		SIZE_sums_catalogue,
2081:src/keys.c    **** 		SIZE_matrix_catalogue,
2082:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2083:src/keys.c    **** 		SIZE_internal_catalogue,
2084:src/keys.c    **** #endif
2085:src/keys.c    **** 	};
2086:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2087:src/keys.c    **** 	const int cat = State2.catalogue;
2088:src/keys.c    **** 	return cat == CATALOGUE_USER ? build_user_cat() : catalogue_sizes[cat];
2089:src/keys.c    **** #else
2090:src/keys.c    **** 	return catalogue_sizes[State2.catalogue];
ARM GAS  /tmp/cccKVeLo.s 			page 42


2091:src/keys.c    **** #endif
2092:src/keys.c    **** }
2093:src/keys.c    **** 
2094:src/keys.c    **** 
2095:src/keys.c    **** /* Look up the character position in the given byte array and
2096:src/keys.c    ****  * build the alpha op-code for it.
2097:src/keys.c    ****  */
2098:src/keys.c    **** static opcode alpha_code(int n, const char tbl[]) {
2099:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
2100:src/keys.c    **** }
2101:src/keys.c    **** 
2102:src/keys.c    **** 
2103:src/keys.c    **** /* Return the opcode for entry n from the current catalogue
2104:src/keys.c    ****  */
2105:src/keys.c    **** opcode current_catalogue(int n) {
2106:src/keys.c    **** 	// A quick table of catalogue tables
2107:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues'
2108:src/keys.c    **** 	static const void *catalogues[] =
2109:src/keys.c    **** 	{
2110:src/keys.c    **** 		NULL, // NONE
2111:src/keys.c    **** 		catalogue,
2112:src/keys.c    **** 		cplx_catalogue,
2113:src/keys.c    **** 		stats_catalogue,
2114:src/keys.c    **** 		prob_catalogue,
2115:src/keys.c    **** 		int_catalogue,
2116:src/keys.c    **** 		prog_catalogue,
2117:src/keys.c    **** 		program_xfcn,
2118:src/keys.c    **** 		test_catalogue,
2119:src/keys.c    **** 		mode_catalogue,
2120:src/keys.c    **** 		alpha_catalogue,
2121:src/keys.c    **** 		alpha_symbols,
2122:src/keys.c    **** 		alpha_compares,
2123:src/keys.c    **** 		alpha_arrows,
2124:src/keys.c    **** 		alpha_letters,
2125:src/keys.c    **** 		alpha_subscripts,
2126:src/keys.c    **** 		NULL,
2127:src/keys.c    **** 		NULL,
2128:src/keys.c    **** 		NULL, //CONV
2129:src/keys.c    **** 		sums_catalogue,
2130:src/keys.c    **** 		matrix_catalogue,
2131:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2132:src/keys.c    **** 		internal_catalogue,
2133:src/keys.c    **** #endif
2134:src/keys.c    **** 	};
2135:src/keys.c    **** 	const unsigned char *cat;
2136:src/keys.c    **** 	unsigned int c = State2.catalogue;
2137:src/keys.c    **** 	int m, i;
2138:src/keys.c    **** 	unsigned p, q;
2139:src/keys.c    **** 
2140:src/keys.c    **** 	if (c == CATALOGUE_CONST) {
2141:src/keys.c    **** 		if (n == OP_ZERO)
2142:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
2143:src/keys.c    **** 		return CONST(n);
2144:src/keys.c    **** 	}
2145:src/keys.c    **** 	if (c == CATALOGUE_COMPLEX_CONST) {
2146:src/keys.c    **** 		if (n == OP_ZERO)
2147:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
ARM GAS  /tmp/cccKVeLo.s 			page 43


2148:src/keys.c    **** 		return CONST_CMPLX(n);
2149:src/keys.c    **** 	}
2150:src/keys.c    **** 	if (c == CATALOGUE_CONV) {
2151:src/keys.c    **** 		const int cnv = conv_catalogue[n];
2152:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
2153:src/keys.c    **** 			// Monadic conversion routine
2154:src/keys.c    **** 			return OP_MON | (cnv - SIZE_conv_catalogue);
2155:src/keys.c    **** 		else
2156:src/keys.c    **** 			return RARG(RARG_CONV, cnv);
2157:src/keys.c    **** 	}
2158:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2159:src/keys.c    **** 	if (c == CATALOGUE_USER)
2160:src/keys.c    **** 		return build_user_cat() ? UserCat[n] : STATE_IGNORE;
2161:src/keys.c    **** #endif
2162:src/keys.c    **** 
2163:src/keys.c    **** 	if (c == CATALOGUE_ALPHA_LETTERS && State2.alphashift)
2164:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
2165:src/keys.c    **** 	else
2166:src/keys.c    **** 		cat = (const unsigned char *) catalogues[c];
2167:src/keys.c    **** 
2168:src/keys.c    **** 	if (c >= CATALOGUE_ALPHA_SYMBOLS && c <= CATALOGUE_ALPHA_SUBSCRIPTS) {
2169:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
2170:src/keys.c    **** 	}
2171:src/keys.c    **** 	if (c >= sizeof(catalogues) / sizeof(void *))
2172:src/keys.c    **** 		return OP_NIL | OP_NOP;
2173:src/keys.c    **** 
2174:src/keys.c    **** 	/* Unpack the opcode */
2175:src/keys.c    **** 	cat += n + (n >> 2);
2176:src/keys.c    **** 	p = cat[0];
2177:src/keys.c    **** 	q = cat[1];
2178:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
2179:src/keys.c    **** 
2180:src/keys.c    **** 	/* Now figure out which opcode it really is */
2181:src/keys.c    **** 	for (i=0; i<KIND_MAX; i++) {
2182:src/keys.c    **** 		if (m < opcode_breaks[i])
2183:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
2184:src/keys.c    **** 		m -= opcode_breaks[i];
2185:src/keys.c    **** 	}
2186:src/keys.c    **** 	return RARG_BASEOP(m);
2187:src/keys.c    **** }
2188:src/keys.c    **** 
2189:src/keys.c    **** 
2190:src/keys.c    **** /*
2191:src/keys.c    ****  *  Helper for navigation in alpha catalogues. Some charaters are not allowed
2192:src/keys.c    ****  *  in multi character commands.
2193:src/keys.c    ****  */
2194:src/keys.c    **** static int forbidden_alpha(int pos) {
2195:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
2196:src/keys.c    **** }
2197:src/keys.c    **** 
2198:src/keys.c    **** /*
2199:src/keys.c    ****  *  Catalogue navigation
2200:src/keys.c    ****  */
2201:src/keys.c    ****  static int process_catalogue(const keycode c, const enum shifts shift, const int is_multi) {
2202:src/keys.c    ****    int pos = State.catpos;
2203:src/keys.c    ****    int ch;
2204:src/keys.c    ****    const int ctmax = current_catalogue_max();
ARM GAS  /tmp/cccKVeLo.s 			page 44


2205:src/keys.c    ****    const enum catalogues cat = (enum catalogues) State2.catalogue;
2206:src/keys.c    **** 
2207:src/keys.c    ****    if (shift == SHIFT_N) {
2208:src/keys.c    ****      switch (c) {
2209:src/keys.c    **** #ifdef DM42
2210:src/keys.c    ****      case K05:			// XEQ accepts command
2211:src/keys.c    **** #else	  
2212:src/keys.c    ****      case K30:			// XEQ accepts command
2213:src/keys.c    **** #endif						  
2214:src/keys.c    ****      case K20:			// Enter accepts command
2215:src/keys.c    ****        if (pos < ctmax && !(is_multi && forbidden_alpha(pos))) {
2216:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
2217:src/keys.c    **** 
2218:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2219:src/keys.c    **** 
2220:src/keys.c    **** 	 if (isRARG(op)) {
2221:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
2222:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
2223:src/keys.c    **** 	     return op;
2224:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
2225:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
2226:src/keys.c    **** 	   else
2227:src/keys.c    **** 	     init_arg(RARG_CMD(op));
2228:src/keys.c    **** 	 }
2229:src/keys.c    **** 	 else {
2230:src/keys.c    **** 	   return check_confirm(op);
2231:src/keys.c    **** 	 }
2232:src/keys.c    ****        } else
2233:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2234:src/keys.c    ****        return STATE_UNFINISHED;
2235:src/keys.c    **** 
2236:src/keys.c    ****      case K24:			// backspace
2237:src/keys.c    ****        if (CmdLineLength > 0 && Keyticks < 30) {
2238:src/keys.c    **** 	 if (--CmdLineLength > 0)
2239:src/keys.c    **** 	   goto search;
2240:src/keys.c    **** 	 pos = 0;
2241:src/keys.c    **** 	 goto set_pos;
2242:src/keys.c    ****        } else
2243:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2244:src/keys.c    ****        return STATE_UNFINISHED;
2245:src/keys.c    **** 
2246:src/keys.c    ****      case K60:
2247:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2248:src/keys.c    ****        return STATE_UNFINISHED;
2249:src/keys.c    **** 
2250:src/keys.c    ****      case K_UP:
2251:src/keys.c    ****        CmdLineLength = 0;
2252:src/keys.c    ****        if (pos == 0)
2253:src/keys.c    **** 	 goto set_max;
2254:src/keys.c    ****        else
2255:src/keys.c    **** 	 --pos;
2256:src/keys.c    ****        goto set_pos;
2257:src/keys.c    **** 
2258:src/keys.c    ****      case K_DOWN:
2259:src/keys.c    ****        CmdLineLength = 0;
2260:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
2261:src/keys.c    ****        if (pos >= ctmax)
ARM GAS  /tmp/cccKVeLo.s 			page 45


2262:src/keys.c    **** 	 pos = 0;
2263:src/keys.c    ****        goto set_pos;
2264:src/keys.c    **** 
2265:src/keys.c    ****      default:
2266:src/keys.c    ****        break;
2267:src/keys.c    ****      }
2268:src/keys.c    ****    } else if (shift == SHIFT_F) {
2269:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
2270:src/keys.c    ****        /*
2271:src/keys.c    **** 	* f 1/x in conversion catalogue
2272:src/keys.c    **** 	*/
2273:src/keys.c    ****        /* A small table of commands in pairs containing inverse commands.
2274:src/keys.c    **** 	* This table could be unsigned characters only storing the monadic kind.
2275:src/keys.c    **** 	* this saves twelve bytes in the table at a cost of some bytes in the code below.
2276:src/keys.c    **** 	* Not worth it since the maximum saving will be less than twelve bytes.
2277:src/keys.c    **** 	*/
2278:src/keys.c    ****        static const unsigned short int conv_mapping[] = {
2279:src/keys.c    **** 	 OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
2280:src/keys.c    **** 	 OP_MON | OP_DB_PR,	OP_MON | OP_PR_DB,
2281:src/keys.c    **** 	 OP_MON | OP_DEGC_F,	OP_MON | OP_DEGF_C,
2282:src/keys.c    **** 	 OP_MON | OP_DEG2RAD,	OP_MON | OP_RAD2DEG,
2283:src/keys.c    **** 	 OP_MON | OP_DEG2GRD,	OP_MON | OP_GRD2DEG,
2284:src/keys.c    **** 	 OP_MON | OP_RAD2GRD,	OP_MON | OP_GRD2RAD,
2285:src/keys.c    ****        };
2286:src/keys.c    ****        const opcode op = current_catalogue(pos);
2287:src/keys.c    ****        int i;
2288:src/keys.c    **** 
2289:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2290:src/keys.c    ****        if (isRARG(op))
2291:src/keys.c    **** 	 return op ^ 1;
2292:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
2293:src/keys.c    **** 	 if (op == conv_mapping[i])
2294:src/keys.c    **** 	   return conv_mapping[i^1];
2295:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
2296:src/keys.c    ****      }
2297:src/keys.c    ****      else if (c == K60 && (State2.alphas || State2.multi)) {
2298:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
2299:src/keys.c    ****        State2.alphashift = 1 - State2.alphashift;
2300:src/keys.c    ****        return STATE_UNFINISHED;
2301:src/keys.c    ****      }
2302:src/keys.c    ****    } else if (shift == SHIFT_G) {
2303:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
2304:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2305:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
2306:src/keys.c    ****      }
2307:src/keys.c    ****    }
2308:src/keys.c    **** 
2309:src/keys.c    ****    /* We've got a key press, map it to a character and try to
2310:src/keys.c    ****     * jump to the appropriate catalogue entry.
2311:src/keys.c    ****     */
2312:src/keys.c    ****    ch = remap_chars(keycode_to_alpha(c, shift == SHIFT_G ? SHIFT_LC_G : shift));
2313:src/keys.c    ****    reset_shift();
2314:src/keys.c    ****    if (ch == '\0')
2315:src/keys.c    ****      return STATE_UNFINISHED;
2316:src/keys.c    ****    if (cat > CATALOGUE_ALPHA && cat < CATALOGUE_CONST) {
2317:src/keys.c    ****      // No multi character search in alpha catalogues
2318:src/keys.c    ****      CmdLineLength = 0;
ARM GAS  /tmp/cccKVeLo.s 			page 46


2319:src/keys.c    ****    }
2320:src/keys.c    ****    if (CmdLineLength < 10)
2321:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
2322:src/keys.c    ****    /* Search for the current buffer in the catalogue */
2323:src/keys.c    **** 
2324:src/keys.c    ****  search:
2325:src/keys.c    ****    Cmdline[CmdLineLength] = '\0';
2326:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
2327:src/keys.c    ****      char buf[16];
2328:src/keys.c    ****      const char *cmd = catcmd(current_catalogue(pos), buf);
2329:src/keys.c    ****      int i;
2330:src/keys.c    **** 
2331:src/keys.c    ****      if (*cmd == COMPLEX_PREFIX)
2332:src/keys.c    ****        cmd++;
2333:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
2334:src/keys.c    ****        const int c = remap_chars(cmd[i]);
2335:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
2336:src/keys.c    ****        if (c > cl)
2337:src/keys.c    **** 	 goto set_pos;
2338:src/keys.c    ****        else if (c < cl)
2339:src/keys.c    **** 	 break;
2340:src/keys.c    ****      }
2341:src/keys.c    ****      if (Cmdline[i] == '\0')
2342:src/keys.c    ****        goto set_pos;
2343:src/keys.c    ****    }
2344:src/keys.c    ****  set_max:
2345:src/keys.c    ****    pos = ctmax - 1;
2346:src/keys.c    ****  set_pos:
2347:src/keys.c    ****    while (is_multi && pos && forbidden_alpha(pos))
2348:src/keys.c    ****      --pos;
2349:src/keys.c    ****    State.catpos = pos;
2350:src/keys.c    ****    return STATE_UNFINISHED;
2351:src/keys.c    ****  }
2352:src/keys.c    **** 
2353:src/keys.c    **** #ifndef REALBUILD
2354:src/keys.c    **** int find_pos(const char* text) {
2355:src/keys.c    **** 	int pos;
2356:src/keys.c    **** 	const int ctmax = current_catalogue_max();
2357:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
2358:src/keys.c    **** 		char buf[16];
2359:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
2360:src/keys.c    **** 		int i;
2361:src/keys.c    **** 
2362:src/keys.c    **** 		if (*cmd == COMPLEX_PREFIX)
2363:src/keys.c    **** 			cmd++;
2364:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
2365:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
2366:src/keys.c    **** 			const int cl = remap_chars(text[i]);
2367:src/keys.c    **** 			if (c > cl)
2368:src/keys.c    **** 				return pos;
2369:src/keys.c    **** 			else if (c < cl)
2370:src/keys.c    **** 				break;
2371:src/keys.c    **** 		}
2372:src/keys.c    **** 		if (text[i] == '\0')
2373:src/keys.c    **** 			return pos;
2374:src/keys.c    **** 	}
2375:src/keys.c    **** 	return pos;
ARM GAS  /tmp/cccKVeLo.s 			page 47


2376:src/keys.c    **** }
2377:src/keys.c    **** 
2378:src/keys.c    **** #endif
2379:src/keys.c    **** 
2380:src/keys.c    **** /* Multi (2) word instruction entry
2381:src/keys.c    ****  */
2382:src/keys.c    **** static void reset_multi(void) {
2383:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
2384:src/keys.c    **** 	State2.multi = 0;
2385:src/keys.c    **** 	if (! State2.alphas )
2386:src/keys.c    **** 		State2.alphashift = 0;
2387:src/keys.c    **** }
2388:src/keys.c    **** 
2389:src/keys.c    **** static int process_multi(const keycode c) {
2390:src/keys.c    **** 	enum shifts shift = reset_shift();
2391:src/keys.c    **** 	unsigned int ch = 0;
2392:src/keys.c    **** 	unsigned int opcode;
2393:src/keys.c    **** 
2394:src/keys.c    **** 	if (State2.catalogue) {
2395:src/keys.c    **** 		// Alpha catalogue from within multi character command
2396:src/keys.c    **** 		opcode = process_catalogue((const keycode)c, shift, State2.numdigit == 2);
2397:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
2398:src/keys.c    **** 			return opcode;
2399:src/keys.c    **** 		ch = (unsigned char) opcode;
2400:src/keys.c    **** 		goto add_char;
2401:src/keys.c    **** 	}
2402:src/keys.c    **** 
2403:src/keys.c    **** 	switch (c) {
2404:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
2405:src/keys.c    **** 		if (shift != SHIFT_N)
2406:src/keys.c    **** 				break;
2407:src/keys.c    **** 		reset_multi();
2408:src/keys.c    **** 		if (State2.numdigit == 0)
2409:src/keys.c    **** 			return STATE_UNFINISHED;
2410:src/keys.c    **** 		else if (State2.numdigit == 1)
2411:src/keys.c    **** 			State2.digval2 = 0;
2412:src/keys.c    **** 		goto fin;
2413:src/keys.c    **** 
2414:src/keys.c    **** 	case K24:	// Clx - backspace, clear alpha
2415:src/keys.c    **** 		if (shift != SHIFT_H) {
2416:src/keys.c    **** 			if (State2.numdigit == 0)
2417:src/keys.c    **** 				reset_multi();
2418:src/keys.c    **** 			else
2419:src/keys.c    **** 				State2.numdigit--;
2420:src/keys.c    **** 			return STATE_UNFINISHED;
2421:src/keys.c    **** 		}
2422:src/keys.c    **** 		break;
2423:src/keys.c    **** 
2424:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
2425:src/keys.c    **** 		if (shift == SHIFT_F)
2426:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
2427:src/keys.c    **** 		else
2428:src/keys.c    **** 			reset_multi();
2429:src/keys.c    **** 		return STATE_UNFINISHED;
2430:src/keys.c    **** 
2431:src/keys.c    **** 	default:
2432:src/keys.c    **** 		break;
ARM GAS  /tmp/cccKVeLo.s 			page 48


2433:src/keys.c    **** 		}
2434:src/keys.c    **** 
2435:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
2436:src/keys.c    **** 	ch = keycode_to_alpha(c, shift);
2437:src/keys.c    **** 	if (ch == 0)
2438:src/keys.c    **** 		return STATE_UNFINISHED;
2439:src/keys.c    **** add_char:
2440:src/keys.c    **** 	if (State2.numdigit == 0) {
2441:src/keys.c    **** 		State2.digval = ch;
2442:src/keys.c    **** 		State2.numdigit = 1;
2443:src/keys.c    **** 		return STATE_UNFINISHED;
2444:src/keys.c    **** 	} else if (State2.numdigit == 1) {
2445:src/keys.c    **** 		State2.digval2 = ch;
2446:src/keys.c    **** 		State2.numdigit = 2;
2447:src/keys.c    **** 		return STATE_UNFINISHED;
2448:src/keys.c    **** 	}
2449:src/keys.c    **** 	reset_multi();
2450:src/keys.c    **** 
2451:src/keys.c    **** fin:
2452:src/keys.c    **** 	opcode = OP_DBL + (CmdBase << DBL_SHIFT) 
2453:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
2454:src/keys.c    **** 	return opcode;
2455:src/keys.c    **** }
2456:src/keys.c    **** 
2457:src/keys.c    **** 
2458:src/keys.c    **** /* Handle YES/NO confirmations
2459:src/keys.c    ****  */
2460:src/keys.c    **** static int process_confirm(const keycode c) {
2461:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
2462:src/keys.c    **** 	switch (c) {
2463:src/keys.c    **** #ifdef DM42
2464:src/keys.c    **** 	case K52:
2465:src/keys.c    **** #endif
2466:src/keys.c    **** 	case K63:			// Yes
2467:src/keys.c    **** 	  switch (State2.confirm) {
2468:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
2469:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
2470:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
2471:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
2472:src/keys.c    **** 	  }
2473:src/keys.c    **** 	case K24:
2474:src/keys.c    **** #ifdef DM42
2475:src/keys.c    **** 	case K22:
2476:src/keys.c    **** #else
2477:src/keys.c    **** 	case K32:
2478:src/keys.c    **** #endif
2479:src/keys.c    **** 	  // No
2480:src/keys.c    **** 	  State2.confirm = 0;
2481:src/keys.c    **** 	  State2.digval = 0;
2482:src/keys.c    **** 	  break;
2483:src/keys.c    **** 	default:			// No state change
2484:src/keys.c    **** 	  break;
2485:src/keys.c    **** 	}
2486:src/keys.c    **** 	return STATE_UNFINISHED;
2487:src/keys.c    **** }
2488:src/keys.c    **** 
2489:src/keys.c    **** 
ARM GAS  /tmp/cccKVeLo.s 			page 49


2490:src/keys.c    **** /*
2491:src/keys.c    ****  *  STATUS
2492:src/keys.c    ****  */
2493:src/keys.c    **** static int process_status(const keycode c) {
2494:src/keys.c    **** 	int n = ((int)State2.status) - 3;
2495:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
2496:src/keys.c    **** 
2497:src/keys.c    **** 	if (c == K_UP) {
2498:src/keys.c    **** 		if (--n < -2)
2499:src/keys.c    **** 			n = max;
2500:src/keys.c    **** 	}
2501:src/keys.c    **** 	else if (c == K_DOWN) {
2502:src/keys.c    **** 		if (++n > max)
2503:src/keys.c    **** 			n = -2;
2504:src/keys.c    **** 	}
2505:src/keys.c    **** 	else if (c == K24 /* || c == K60 */) {
2506:src/keys.c    **** 		State2.status = 0;
2507:src/keys.c    **** 		return STATE_UNFINISHED;
2508:src/keys.c    **** 	} 
2509:src/keys.c    **** 	else {
2510:src/keys.c    **** 		int nn = keycode_to_digit_or_register(c) & 0x7f;
2511:src/keys.c    **** 		if (nn <= 9)
2512:src/keys.c    **** 			n = nn;
2513:src/keys.c    **** 		else if (nn == LOCAL_REG_BASE)
2514:src/keys.c    **** 			n = n == max ? 10 : max;
2515:src/keys.c    **** 		else if (nn != NO_REG)
2516:src/keys.c    **** 			n = 10; 
2517:src/keys.c    **** 	}
2518:src/keys.c    **** 	State2.status = n + 3;
2519:src/keys.c    **** 
2520:src/keys.c    **** 	return STATE_UNFINISHED;
2521:src/keys.c    **** }
2522:src/keys.c    **** 
2523:src/keys.c    **** 
2524:src/keys.c    **** /*
2525:src/keys.c    ****  *  CAT helper
2526:src/keys.c    ****  */
2527:src/keys.c    **** static int is_label_or_end_at(unsigned int pc, int search_end) {
 218              		.loc 1 2527 64 is_stmt 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
2528:src/keys.c    **** 	const unsigned int op = getprog(pc);
 222              		.loc 1 2528 2 view .LVU58
2527:src/keys.c    **** 	const unsigned int op = getprog(pc);
 223              		.loc 1 2527 64 is_stmt 0 view .LVU59
 224 0000 10B5     		push	{r4, lr}
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 4, -8
 227              		.cfi_offset 14, -4
2527:src/keys.c    **** 	const unsigned int op = getprog(pc);
 228              		.loc 1 2527 64 view .LVU60
 229 0002 0C46     		mov	r4, r1
 230              		.loc 1 2528 26 view .LVU61
 231 0004 FFF7FEFF 		bl	getprog
 232              	.LVL20:
2529:src/keys.c    **** 
ARM GAS  /tmp/cccKVeLo.s 			page 50


2530:src/keys.c    **** 	return op == (OP_NIL | OP_END) || (!search_end && (isDBL(op) && opDBL(op) == DBL_LBL));
 233              		.loc 1 2530 2 is_stmt 1 view .LVU62
 234              		.loc 1 2530 33 is_stmt 0 view .LVU63
 235 0008 B0F59D7F 		cmp	r0, #314
 236 000c 06D0     		beq	.L21
 237              		.loc 1 2530 53 discriminator 3 view .LVU64
 238 000e 00F47043 		and	r3, r0, #61440
 239              		.loc 1 2530 49 discriminator 3 view .LVU65
 240 0012 B3F5704F 		cmp	r3, #61440
 241 0016 03D0     		beq	.L24
 242              		.loc 1 2530 33 view .LVU66
 243 0018 0020     		movs	r0, #0
 244              	.LVL21:
2531:src/keys.c    **** }
 245              		.loc 1 2531 1 view .LVU67
 246 001a 10BD     		pop	{r4, pc}
 247              	.LVL22:
 248              	.L21:
2530:src/keys.c    **** }
 249              		.loc 1 2530 33 view .LVU68
 250 001c 0120     		movs	r0, #1
 251              	.LVL23:
 252              		.loc 1 2531 1 view .LVU69
 253 001e 10BD     		pop	{r4, pc}
 254              	.LVL24:
 255              	.L24:
2530:src/keys.c    **** }
 256              		.loc 1 2530 66 discriminator 5 view .LVU70
 257 0020 C0F30320 		ubfx	r0, r0, #8, #4
 258              	.LVL25:
2530:src/keys.c    **** }
 259              		.loc 1 2530 63 discriminator 5 view .LVU71
 260 0024 50EA0403 		orrs	r3, r0, r4
 261 0028 0CBF     		ite	eq
 262 002a 0120     		moveq	r0, #1
 263 002c 0020     		movne	r0, #0
 264              		.loc 1 2531 1 discriminator 5 view .LVU72
 265 002e 10BD     		pop	{r4, pc}
 266              		.loc 1 2531 1 discriminator 5 view .LVU73
 267              		.cfi_endproc
 268              	.LFE49:
 270              		.section	.text.advance_to_next_label,"ax",%progbits
 271              		.align	1
 272              		.p2align 2,,3
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv4-sp-d16
 278              	advance_to_next_label:
 279              	.LVL26:
 280              	.LFB50:
2532:src/keys.c    **** 
2533:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end) {
 281              		.loc 1 2533 85 is_stmt 1 view -0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cccKVeLo.s 			page 51


 285              		.loc 1 2533 85 is_stmt 0 view .LVU75
 286 0000 70B5     		push	{r4, r5, r6, lr}
 287              		.cfi_def_cfa_offset 16
 288              		.cfi_offset 4, -16
 289              		.cfi_offset 5, -12
 290              		.cfi_offset 6, -8
 291              		.cfi_offset 14, -4
 292              		.loc 1 2533 85 view .LVU76
 293 0002 0446     		mov	r4, r0
2534:src/keys.c    **** 	do {
 294              		.loc 1 2534 2 is_stmt 1 view .LVU77
2535:src/keys.c    **** 		for (;;) {
 295              		.loc 1 2535 3 view .LVU78
2536:src/keys.c    **** 			if (inc) {
 296              		.loc 1 2536 4 view .LVU79
2533:src/keys.c    **** 	do {
 297              		.loc 1 2533 85 is_stmt 0 view .LVU80
 298 0004 1646     		mov	r6, r2
 299              		.loc 1 2536 7 view .LVU81
 300 0006 21B9     		cbnz	r1, .L29
 301              	.LVL27:
 302              	.L26:
2537:src/keys.c    **** 				pc = do_inc(pc, 0);
2538:src/keys.c    **** 				if (PcWrapped)
2539:src/keys.c    **** 					break;
2540:src/keys.c    **** 			}
2541:src/keys.c    **** 			else
2542:src/keys.c    **** 				inc = 1;
2543:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 303              		.loc 1 2543 4 is_stmt 1 view .LVU82
 304              		.loc 1 2543 8 is_stmt 0 view .LVU83
 305 0008 3146     		mov	r1, r6
 306 000a 2046     		mov	r0, r4
 307              		.loc 1 2543 8 view .LVU84
 308 000c FFF7FEFF 		bl	is_label_or_end_at
 309              	.LVL28:
 310              		.loc 1 2543 7 view .LVU85
 311 0010 B8B9     		cbnz	r0, .L28
 312              	.LVL29:
 313              	.L29:
 314              		.loc 1 2543 7 view .LVU86
 315 0012 0D4D     		ldr	r5, .L37
 316              	.L30:
2537:src/keys.c    **** 				pc = do_inc(pc, 0);
 317              		.loc 1 2537 5 is_stmt 1 view .LVU87
2537:src/keys.c    **** 				pc = do_inc(pc, 0);
 318              		.loc 1 2537 10 is_stmt 0 view .LVU88
 319 0014 2046     		mov	r0, r4
 320 0016 0021     		movs	r1, #0
 321 0018 FFF7FEFF 		bl	do_inc
 322              	.LVL30:
2538:src/keys.c    **** 					break;
 323              		.loc 1 2538 8 view .LVU89
 324 001c 2B68     		ldr	r3, [r5]
2537:src/keys.c    **** 				pc = do_inc(pc, 0);
 325              		.loc 1 2537 10 view .LVU90
 326 001e 0446     		mov	r4, r0
ARM GAS  /tmp/cccKVeLo.s 			page 52


 327              	.LVL31:
2538:src/keys.c    **** 					break;
 328              		.loc 1 2538 5 is_stmt 1 view .LVU91
2538:src/keys.c    **** 					break;
 329              		.loc 1 2538 8 is_stmt 0 view .LVU92
 330 0020 002B     		cmp	r3, #0
 331 0022 F1D0     		beq	.L26
2544:src/keys.c    **** 				return pc;
2545:src/keys.c    **** 			}
2546:src/keys.c    **** 		}
2547:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) + 1) & 3);
 332              		.loc 1 2547 3 is_stmt 1 view .LVU93
 333              		.loc 1 2547 8 is_stmt 0 view .LVU94
 334 0024 20F47F54 		bic	r4, r0, #16320
 335 0028 24F03F04 		bic	r4, r4, #63
 336 002c 04F58044 		add	r4, r4, #16384
 337 0030 A4B2     		uxth	r4, r4
 338              		.loc 1 2547 6 view .LVU95
 339 0032 44F00104 		orr	r4, r4, #1
 340              	.LVL32:
2548:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 341              		.loc 1 2548 10 is_stmt 1 view .LVU96
 342              		.loc 1 2548 13 is_stmt 0 view .LVU97
 343 0036 2046     		mov	r0, r4
 344 0038 3146     		mov	r1, r6
 345 003a FFF7FEFF 		bl	is_label_or_end_at
 346              	.LVL33:
 347              		.loc 1 2548 2 view .LVU98
 348 003e 0028     		cmp	r0, #0
 349 0040 E8D0     		beq	.L30
 350              	.L28:
2549:src/keys.c    **** 	return pc;
2550:src/keys.c    **** }
 351              		.loc 1 2550 1 view .LVU99
 352 0042 2046     		mov	r0, r4
 353 0044 70BD     		pop	{r4, r5, r6, pc}
 354              	.LVL34:
 355              	.L38:
 356              		.loc 1 2550 1 view .LVU100
 357 0046 00BF     		.align	2
 358              	.L37:
 359 0048 00000000 		.word	PcWrapped
 360              		.cfi_endproc
 361              	.LFE50:
 363              		.section	.text.init_cat,"ax",%progbits
 364              		.align	1
 365              		.p2align 2,,3
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu fpv4-sp-d16
 371              	init_cat:
 372              	.LVL35:
 373              	.LFB12:
 519:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 374              		.loc 1 519 43 is_stmt 1 view -0
 375              		.cfi_startproc
ARM GAS  /tmp/cccKVeLo.s 			page 53


 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 520:src/keys.c    **** 		// Save last catalogue for a later restore
 378              		.loc 1 520 2 view .LVU102
 519:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 379              		.loc 1 519 43 is_stmt 0 view .LVU103
 380 0000 38B5     		push	{r3, r4, r5, lr}
 381              		.cfi_def_cfa_offset 16
 382              		.cfi_offset 3, -16
 383              		.cfi_offset 4, -12
 384              		.cfi_offset 5, -8
 385              		.cfi_offset 14, -4
 520:src/keys.c    **** 		// Save last catalogue for a later restore
 386              		.loc 1 520 37 view .LVU104
 387 0002 384C     		ldr	r4, .L58
 520:src/keys.c    **** 		// Save last catalogue for a later restore
 388              		.loc 1 520 5 view .LVU105
 389 0004 0546     		mov	r5, r0
 390 0006 D0B9     		cbnz	r0, .L40
 520:src/keys.c    **** 		// Save last catalogue for a later restore
 391              		.loc 1 520 37 discriminator 1 view .LVU106
 392 0008 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 520:src/keys.c    **** 		// Save last catalogue for a later restore
 393              		.loc 1 520 28 discriminator 1 view .LVU107
 394 000a 43B1     		cbz	r3, .L41
 522:src/keys.c    **** 		CmdLineLength = 0;
 395              		.loc 1 522 3 is_stmt 1 view .LVU108
 522:src/keys.c    **** 		CmdLineLength = 0;
 396              		.loc 1 522 18 is_stmt 0 view .LVU109
 397 000c 364A     		ldr	r2, .L58+4
 523:src/keys.c    **** 	}
 398              		.loc 1 523 17 view .LVU110
 399 000e 2077     		strb	r0, [r4, #28]
 522:src/keys.c    **** 		CmdLineLength = 0;
 400              		.loc 1 522 18 view .LVU111
 401 0010 1268     		ldr	r2, [r2]
 402 0012 92F8DC17 		ldrb	r1, [r2, #2012]	@ zero_extendqisi2
 403 0016 63F30401 		bfi	r1, r3, #0, #5
 404 001a 82F8DC17 		strb	r1, [r2, #2012]
 523:src/keys.c    **** 	}
 405              		.loc 1 523 3 is_stmt 1 view .LVU112
 406              	.L41:
 525:src/keys.c    **** 
 407              		.loc 1 525 2 view .LVU113
 408 001e FFF7FEFF 		bl	process_cmdline
 409              	.LVL36:
 527:src/keys.c    **** 	State2.registerlist = 0;
 410              		.loc 1 527 2 view .LVU114
 528:src/keys.c    **** 	State2.status = 0;
 411              		.loc 1 528 2 view .LVU115
 529:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 412              		.loc 1 529 2 view .LVU116
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 413              		.loc 1 554 16 is_stmt 0 view .LVU117
 414 0022 6369     		ldr	r3, [r4, #20]
 415 0024 23F04063 		bic	r3, r3, #201326592
 416 0028 23F40073 		bic	r3, r3, #512
ARM GAS  /tmp/cccKVeLo.s 			page 54


 529:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 417              		.loc 1 529 16 view .LVU118
 418 002c 0022     		movs	r2, #0
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 419              		.loc 1 554 16 view .LVU119
 420 002e 6361     		str	r3, [r4, #20]
 529:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 421              		.loc 1 529 16 view .LVU120
 422 0030 2273     		strb	r2, [r4, #12]
 530:src/keys.c    **** 
 423              		.loc 1 530 2 is_stmt 1 view .LVU121
 532:src/keys.c    **** 	case CATALOGUE_LABELS:
 424              		.loc 1 532 2 view .LVU122
 553:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 425              		.loc 1 553 3 view .LVU123
 553:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 426              		.loc 1 553 20 is_stmt 0 view .LVU124
 427 0032 A273     		strb	r2, [r4, #14]
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 428              		.loc 1 554 3 is_stmt 1 view .LVU125
 555:src/keys.c    **** 			// Different catalogue, reset position
 429              		.loc 1 555 3 view .LVU126
 560:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 430              		.loc 1 560 2 view .LVU127
 431              	.LBB244:
 432              	.LBI244:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 433              		.loc 1 104 13 view .LVU128
 434              	.LBE244:
 105:src/keys.c    **** }
 435              		.loc 1 105 2 view .LVU129
 436              	.LVL37:
 437              	.LBB261:
 438              	.LBB245:
 439              	.LBI245:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 440              		.loc 1 94 20 view .LVU130
 441              	.LBB246:
  95:src/keys.c    **** 	State2.shifts = shift;
 442              		.loc 1 95 2 view .LVU131
 443              	.LBB247:
 444              	.LBI247:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 445              		.loc 1 86 13 view .LVU132
 446              	.LBB248:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 447              		.loc 1 87 2 view .LVU133
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 448              		.loc 1 87 18 is_stmt 0 view .LVU134
 449 0034 FFF7FEFF 		bl	shift_down
 450              	.LVL38:
  88:src/keys.c    **** }
 451              		.loc 1 88 2 is_stmt 1 view .LVU135
 452              	.LBE248:
 453              	.LBE247:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 454              		.loc 1 96 2 view .LVU136
ARM GAS  /tmp/cccKVeLo.s 			page 55


  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 455              		.loc 1 96 16 is_stmt 0 view .LVU137
 456 0038 0023     		movs	r3, #0
 457 003a 2374     		strb	r3, [r4, #16]
  98:src/keys.c    **** }
 458              		.loc 1 98 2 is_stmt 1 view .LVU138
 459              	.LVL39:
  98:src/keys.c    **** }
 460              		.loc 1 98 2 is_stmt 0 view .LVU139
 461              	.LBE246:
 462              	.LBE245:
 463              	.LBE261:
 564:src/keys.c    **** 
 464              		.loc 1 564 1 view .LVU140
 465 003c 38BD     		pop	{r3, r4, r5, pc}
 466              	.LVL40:
 467              	.L40:
 525:src/keys.c    **** 
 468              		.loc 1 525 2 is_stmt 1 view .LVU141
 469 003e FFF7FEFF 		bl	process_cmdline
 470              	.LVL41:
 527:src/keys.c    **** 	State2.registerlist = 0;
 471              		.loc 1 527 2 view .LVU142
 528:src/keys.c    **** 	State2.status = 0;
 472              		.loc 1 528 2 view .LVU143
 527:src/keys.c    **** 	State2.registerlist = 0;
 473              		.loc 1 527 19 is_stmt 0 view .LVU144
 474 0042 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 529:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 475              		.loc 1 529 16 view .LVU145
 476 0044 0022     		movs	r2, #0
 527:src/keys.c    **** 	State2.registerlist = 0;
 477              		.loc 1 527 19 view .LVU146
 478 0046 23F00C03 		bic	r3, r3, #12
 532:src/keys.c    **** 	case CATALOGUE_LABELS:
 479              		.loc 1 532 2 view .LVU147
 480 004a 162D     		cmp	r5, #22
 527:src/keys.c    **** 	State2.registerlist = 0;
 481              		.loc 1 527 19 view .LVU148
 482 004c E375     		strb	r3, [r4, #23]
 529:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 483              		.loc 1 529 2 is_stmt 1 view .LVU149
 529:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 484              		.loc 1 529 16 is_stmt 0 view .LVU150
 485 004e 2273     		strb	r2, [r4, #12]
 530:src/keys.c    **** 
 486              		.loc 1 530 2 is_stmt 1 view .LVU151
 530:src/keys.c    **** 
 487              		.loc 1 530 19 is_stmt 0 view .LVU152
 488 0050 A273     		strb	r2, [r4, #14]
 532:src/keys.c    **** 	case CATALOGUE_LABELS:
 489              		.loc 1 532 2 is_stmt 1 view .LVU153
 490 0052 1BD0     		beq	.L42
 491 0054 172D     		cmp	r5, #23
 492 0056 06D1     		bne	.L56
 548:src/keys.c    **** 		break;
 493              		.loc 1 548 3 view .LVU154
ARM GAS  /tmp/cccKVeLo.s 			page 56


 548:src/keys.c    **** 		break;
 494              		.loc 1 548 17 is_stmt 0 view .LVU155
 495 0058 0123     		movs	r3, #1
 496 005a 2373     		strb	r3, [r4, #12]
 549:src/keys.c    **** 
 497              		.loc 1 549 3 is_stmt 1 view .LVU156
 560:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 498              		.loc 1 560 2 view .LVU157
 499              	.LBB262:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 500              		.loc 1 104 13 view .LVU158
 501              	.LBE262:
 105:src/keys.c    **** }
 502              		.loc 1 105 2 view .LVU159
 503              	.LVL42:
 504              	.LBB263:
 505              	.LBB258:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 506              		.loc 1 94 20 view .LVU160
 507              	.LBB255:
  95:src/keys.c    **** 	State2.shifts = shift;
 508              		.loc 1 95 2 view .LVU161
 509              	.LBB252:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 510              		.loc 1 86 13 view .LVU162
 511              	.LBB249:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 512              		.loc 1 87 2 view .LVU163
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 513              		.loc 1 87 18 is_stmt 0 view .LVU164
 514 005c FFF7FEFF 		bl	shift_down
 515              	.LVL43:
  88:src/keys.c    **** }
 516              		.loc 1 88 2 is_stmt 1 view .LVU165
 517              	.LBE249:
 518              	.LBE252:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 519              		.loc 1 96 2 view .LVU166
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 520              		.loc 1 96 16 is_stmt 0 view .LVU167
 521 0060 0023     		movs	r3, #0
 522 0062 2374     		strb	r3, [r4, #16]
  98:src/keys.c    **** }
 523              		.loc 1 98 2 is_stmt 1 view .LVU168
 524              	.LVL44:
  98:src/keys.c    **** }
 525              		.loc 1 98 2 is_stmt 0 view .LVU169
 526              	.LBE255:
 527              	.LBE258:
 528              	.LBE263:
 564:src/keys.c    **** 
 529              		.loc 1 564 1 view .LVU170
 530 0064 38BD     		pop	{r3, r4, r5, pc}
 531              	.L56:
 532:src/keys.c    **** 	case CATALOGUE_LABELS:
 532              		.loc 1 532 2 view .LVU171
 533 0066 152D     		cmp	r5, #21
ARM GAS  /tmp/cccKVeLo.s 			page 57


 534 0068 1CD1     		bne	.L44
 535:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 535              		.loc 1 535 3 is_stmt 1 view .LVU172
 536:src/keys.c    **** 		break;
 536              		.loc 1 536 41 is_stmt 0 view .LVU173
 537 006a 1F49     		ldr	r1, .L58+4
 535:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 538              		.loc 1 535 20 view .LVU174
 539 006c DBB2     		uxtb	r3, r3
 536:src/keys.c    **** 		break;
 540              		.loc 1 536 41 view .LVU175
 541 006e 0968     		ldr	r1, [r1]
 535:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 542              		.loc 1 535 20 view .LVU176
 543 0070 43F00403 		orr	r3, r3, #4
 544 0074 E375     		strb	r3, [r4, #23]
 536:src/keys.c    **** 		break;
 545              		.loc 1 536 3 is_stmt 1 view .LVU177
 536:src/keys.c    **** 		break;
 546              		.loc 1 536 19 is_stmt 0 view .LVU178
 547 0076 B1F8EC07 		ldrh	r0, [r1, #2028]
 548 007a 1146     		mov	r1, r2
 549 007c FFF7FEFF 		bl	advance_to_next_label
 550              	.LVL45:
 536:src/keys.c    **** 		break;
 551              		.loc 1 536 17 view .LVU179
 552 0080 2081     		strh	r0, [r4, #8]	@ movhi
 537:src/keys.c    **** 	
 553              		.loc 1 537 3 is_stmt 1 view .LVU180
 554              	.L45:
 560:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 555              		.loc 1 560 2 view .LVU181
 556              	.LBB264:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 557              		.loc 1 104 13 view .LVU182
 558              	.LBE264:
 105:src/keys.c    **** }
 559              		.loc 1 105 2 view .LVU183
 560              	.LVL46:
 561              	.LBB265:
 562              	.LBB259:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 563              		.loc 1 94 20 view .LVU184
 564              	.LBB256:
  95:src/keys.c    **** 	State2.shifts = shift;
 565              		.loc 1 95 2 view .LVU185
 566              	.LBB253:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 567              		.loc 1 86 13 view .LVU186
 568              	.LBB250:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 569              		.loc 1 87 2 view .LVU187
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 570              		.loc 1 87 18 is_stmt 0 view .LVU188
 571 0082 FFF7FEFF 		bl	shift_down
 572              	.LVL47:
  88:src/keys.c    **** }
ARM GAS  /tmp/cccKVeLo.s 			page 58


 573              		.loc 1 88 2 is_stmt 1 view .LVU189
 574              	.LBE250:
 575              	.LBE253:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 576              		.loc 1 96 2 view .LVU190
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 577              		.loc 1 96 16 is_stmt 0 view .LVU191
 578 0086 0023     		movs	r3, #0
 579 0088 2374     		strb	r3, [r4, #16]
  98:src/keys.c    **** }
 580              		.loc 1 98 2 is_stmt 1 view .LVU192
 581              	.LVL48:
  98:src/keys.c    **** }
 582              		.loc 1 98 2 is_stmt 0 view .LVU193
 583              	.LBE256:
 584              	.LBE259:
 585              	.LBE265:
 564:src/keys.c    **** 
 586              		.loc 1 564 1 view .LVU194
 587 008a 38BD     		pop	{r3, r4, r5, pc}
 588              	.L42:
 541:src/keys.c    **** 		State2.digval = regX_idx;
 589              		.loc 1 541 3 is_stmt 1 view .LVU195
 541:src/keys.c    **** 		State2.digval = regX_idx;
 590              		.loc 1 541 23 is_stmt 0 view .LVU196
 591 008c E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 543:src/keys.c    **** 		break;
 592              		.loc 1 543 18 view .LVU197
 593 008e A272     		strb	r2, [r4, #10]
 541:src/keys.c    **** 		State2.digval = regX_idx;
 594              		.loc 1 541 23 view .LVU198
 595 0090 43F00803 		orr	r3, r3, #8
 542:src/keys.c    **** 		State2.digval2 = 0;
 596              		.loc 1 542 17 view .LVU199
 597 0094 6422     		movs	r2, #100
 541:src/keys.c    **** 		State2.digval = regX_idx;
 598              		.loc 1 541 23 view .LVU200
 599 0096 E375     		strb	r3, [r4, #23]
 542:src/keys.c    **** 		State2.digval2 = 0;
 600              		.loc 1 542 3 is_stmt 1 view .LVU201
 542:src/keys.c    **** 		State2.digval2 = 0;
 601              		.loc 1 542 17 is_stmt 0 view .LVU202
 602 0098 2281     		strh	r2, [r4, #8]	@ movhi
 543:src/keys.c    **** 		break;
 603              		.loc 1 543 3 is_stmt 1 view .LVU203
 544:src/keys.c    **** 
 604              		.loc 1 544 3 view .LVU204
 560:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 605              		.loc 1 560 2 view .LVU205
 606              	.LBB266:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 607              		.loc 1 104 13 view .LVU206
 608              	.LBE266:
 105:src/keys.c    **** }
 609              		.loc 1 105 2 view .LVU207
 610              	.LVL49:
 611              	.LBB267:
ARM GAS  /tmp/cccKVeLo.s 			page 59


 612              	.LBB260:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 613              		.loc 1 94 20 view .LVU208
 614              	.LBB257:
  95:src/keys.c    **** 	State2.shifts = shift;
 615              		.loc 1 95 2 view .LVU209
 616              	.LBB254:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 617              		.loc 1 86 13 view .LVU210
 618              	.LBB251:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 619              		.loc 1 87 2 view .LVU211
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 620              		.loc 1 87 18 is_stmt 0 view .LVU212
 621 009a FFF7FEFF 		bl	shift_down
 622              	.LVL50:
  88:src/keys.c    **** }
 623              		.loc 1 88 2 is_stmt 1 view .LVU213
 624              	.LBE251:
 625              	.LBE254:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 626              		.loc 1 96 2 view .LVU214
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 627              		.loc 1 96 16 is_stmt 0 view .LVU215
 628 009e 0023     		movs	r3, #0
 629 00a0 2374     		strb	r3, [r4, #16]
  98:src/keys.c    **** }
 630              		.loc 1 98 2 is_stmt 1 view .LVU216
 631              	.LVL51:
  98:src/keys.c    **** }
 632              		.loc 1 98 2 is_stmt 0 view .LVU217
 633              	.LBE257:
 634              	.LBE260:
 635              	.LBE267:
 564:src/keys.c    **** 
 636              		.loc 1 564 1 view .LVU218
 637 00a2 38BD     		pop	{r3, r4, r5, pc}
 638              	.L44:
 553:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 639              		.loc 1 553 3 is_stmt 1 view .LVU219
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 640              		.loc 1 554 44 is_stmt 0 view .LVU220
 641 00a4 022D     		cmp	r5, #2
 553:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 642              		.loc 1 553 20 view .LVU221
 643 00a6 A573     		strb	r5, [r4, #14]
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 644              		.loc 1 554 3 is_stmt 1 view .LVU222
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 645              		.loc 1 554 44 is_stmt 0 view .LVU223
 646 00a8 12D1     		bne	.L57
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 647              		.loc 1 554 16 view .LVU224
 648 00aa 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 649 00ac 43F00203 		orr	r3, r3, #2
 650 00b0 6375     		strb	r3, [r4, #21]
 555:src/keys.c    **** 			// Different catalogue, reset position
ARM GAS  /tmp/cccKVeLo.s 			page 60


 651              		.loc 1 555 3 is_stmt 1 view .LVU225
 652              	.L49:
 555:src/keys.c    **** 			// Different catalogue, reset position
 653              		.loc 1 555 32 is_stmt 0 discriminator 1 view .LVU226
 654 00b2 0D4B     		ldr	r3, .L58+4
 655 00b4 1A68     		ldr	r2, [r3]
 555:src/keys.c    **** 			// Different catalogue, reset position
 656              		.loc 1 555 37 discriminator 1 view .LVU227
 657 00b6 92F8DC37 		ldrb	r3, [r2, #2012]	@ zero_extendqisi2
 555:src/keys.c    **** 			// Different catalogue, reset position
 658              		.loc 1 555 29 discriminator 1 view .LVU228
 659 00ba 03F01F03 		and	r3, r3, #31
 660 00be AB42     		cmp	r3, r5
 661 00c0 DFD0     		beq	.L45
 557:src/keys.c    **** 		}
 662              		.loc 1 557 4 is_stmt 1 view .LVU229
 557:src/keys.c    **** 		}
 663              		.loc 1 557 17 is_stmt 0 view .LVU230
 664 00c2 B2F8DC37 		ldrh	r3, [r2, #2012]
 665 00c6 6FF34B13 		bfc	r3, #5, #7
 666 00ca A2F8DC37 		strh	r3, [r2, #2012]	@ movhi
 667 00ce D8E7     		b	.L45
 668              	.L57:
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 669              		.loc 1 554 44 view .LVU231
 670 00d0 A5F11101 		sub	r1, r5, #17
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 671              		.loc 1 554 16 view .LVU232
 672 00d4 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 673              		.loc 1 554 44 view .LVU233
 674 00d6 4A42     		rsbs	r2, r1, #0
 675 00d8 4A41     		adcs	r2, r2, r1
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 676              		.loc 1 554 16 view .LVU234
 677 00da 62F34103 		bfi	r3, r2, #1, #1
 678 00de 6375     		strb	r3, [r4, #21]
 555:src/keys.c    **** 			// Different catalogue, reset position
 679              		.loc 1 555 3 is_stmt 1 view .LVU235
 680 00e0 E7E7     		b	.L49
 681              	.L59:
 682 00e2 00BF     		.align	2
 683              	.L58:
 684 00e4 00000000 		.word	StateWhileOn
 685 00e8 00000000 		.word	main_ram
 686              		.cfi_endproc
 687              	.LFE12:
 689              		.section	.text.advance_to_previous_label,"ax",%progbits
 690              		.align	1
 691              		.p2align 2,,3
 692              		.syntax unified
 693              		.thumb
 694              		.thumb_func
 695              		.fpu fpv4-sp-d16
 697              	advance_to_previous_label:
 698              	.LVL52:
 699              	.LFB51:
ARM GAS  /tmp/cccKVeLo.s 			page 61


2551:src/keys.c    **** 
2552:src/keys.c    **** static unsigned int advance_to_previous_label(unsigned int pc, int search_end) {
 700              		.loc 1 2552 80 view -0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704              		.loc 1 2552 80 is_stmt 0 view .LVU237
 705 0000 70B5     		push	{r4, r5, r6, lr}
 706              		.cfi_def_cfa_offset 16
 707              		.cfi_offset 4, -16
 708              		.cfi_offset 5, -12
 709              		.cfi_offset 6, -8
 710              		.cfi_offset 14, -4
 711 0002 124E     		ldr	r6, .L69
 712              		.loc 1 2552 80 view .LVU238
 713 0004 0446     		mov	r4, r0
 714 0006 0D46     		mov	r5, r1
 715              	.LVL53:
 716              	.L61:
2553:src/keys.c    **** 	do {
 717              		.loc 1 2553 2 is_stmt 1 view .LVU239
2554:src/keys.c    **** 		for (;;) {
 718              		.loc 1 2554 3 view .LVU240
2555:src/keys.c    **** 			pc = do_dec(pc, 0);
 719              		.loc 1 2555 4 view .LVU241
 720              		.loc 1 2555 9 is_stmt 0 view .LVU242
 721 0008 2046     		mov	r0, r4
 722 000a 0021     		movs	r1, #0
 723 000c FFF7FEFF 		bl	do_dec
 724              	.LVL54:
2556:src/keys.c    **** 			if (PcWrapped)
2557:src/keys.c    **** 				break;
2558:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 725              		.loc 1 2558 4 is_stmt 1 view .LVU243
2559:src/keys.c    **** 				return pc;
2560:src/keys.c    **** 			}
2561:src/keys.c    **** 		}
2562:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) - 1) & 3);
 726              		.loc 1 2562 3 view .LVU244
 727              		.loc 1 2562 8 is_stmt 0 view .LVU245
 728 0010 20F47F53 		bic	r3, r0, #16320
 729 0014 23F03F03 		bic	r3, r3, #63
2556:src/keys.c    **** 			if (PcWrapped)
 730              		.loc 1 2556 7 view .LVU246
 731 0018 3268     		ldr	r2, [r6]
 732              		.loc 1 2562 8 view .LVU247
 733 001a A3F58043 		sub	r3, r3, #16384
2563:src/keys.c    **** 		pc = do_dec(pc, 0);
 734              		.loc 1 2563 8 view .LVU248
 735 001e 0021     		movs	r1, #0
2555:src/keys.c    **** 			if (PcWrapped)
 736              		.loc 1 2555 9 view .LVU249
 737 0020 0446     		mov	r4, r0
 738              	.LVL55:
2556:src/keys.c    **** 				break;
 739              		.loc 1 2556 4 is_stmt 1 view .LVU250
2562:src/keys.c    **** 		pc = do_dec(pc, 0);
ARM GAS  /tmp/cccKVeLo.s 			page 62


 740              		.loc 1 2562 8 is_stmt 0 view .LVU251
 741 0022 9BB2     		uxth	r3, r3
 742              	.LVL56:
 743              		.loc 1 2563 3 is_stmt 1 view .LVU252
2556:src/keys.c    **** 				break;
 744              		.loc 1 2556 7 is_stmt 0 view .LVU253
 745 0024 32B9     		cbnz	r2, .L62
2558:src/keys.c    **** 				return pc;
 746              		.loc 1 2558 8 view .LVU254
 747 0026 2946     		mov	r1, r5
 748 0028 FFF7FEFF 		bl	is_label_or_end_at
 749              	.LVL57:
2558:src/keys.c    **** 				return pc;
 750              		.loc 1 2558 7 view .LVU255
 751 002c 0028     		cmp	r0, #0
 752 002e EBD0     		beq	.L61
2564:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
2565:src/keys.c    **** 	return pc;
2566:src/keys.c    **** }
 753              		.loc 1 2566 1 view .LVU256
 754 0030 2046     		mov	r0, r4
 755 0032 70BD     		pop	{r4, r5, r6, pc}
 756              	.LVL58:
 757              	.L62:
2563:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 758              		.loc 1 2563 8 view .LVU257
 759 0034 43F00100 		orr	r0, r3, #1
 760 0038 FFF7FEFF 		bl	do_dec
 761              	.LVL59:
2564:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 762              		.loc 1 2564 13 view .LVU258
 763 003c 2946     		mov	r1, r5
2563:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 764              		.loc 1 2563 8 view .LVU259
 765 003e 0446     		mov	r4, r0
 766              	.LVL60:
2564:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 767              		.loc 1 2564 10 is_stmt 1 view .LVU260
2564:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 768              		.loc 1 2564 13 is_stmt 0 view .LVU261
 769 0040 FFF7FEFF 		bl	is_label_or_end_at
 770              	.LVL61:
2564:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 771              		.loc 1 2564 2 view .LVU262
 772 0044 0028     		cmp	r0, #0
 773 0046 DFD0     		beq	.L61
 774              		.loc 1 2566 1 view .LVU263
 775 0048 2046     		mov	r0, r4
 776 004a 70BD     		pop	{r4, r5, r6, pc}
 777              	.LVL62:
 778              	.L70:
 779              		.loc 1 2566 1 view .LVU264
 780              		.align	2
 781              	.L69:
 782 004c 00000000 		.word	PcWrapped
 783              		.cfi_endproc
 784              	.LFE51:
ARM GAS  /tmp/cccKVeLo.s 			page 63


 786              		.section	.text.check_confirm.part.0,"ax",%progbits
 787              		.align	1
 788              		.p2align 2,,3
 789              		.syntax unified
 790              		.thumb
 791              		.thumb_func
 792              		.fpu fpv4-sp-d16
 794              	check_confirm.part.0:
 795              	.LVL63:
 796              	.LFB59:
 624:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 797              		.loc 1 624 12 is_stmt 1 view -0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801              		@ link register save eliminated.
 802              	.LBB268:
 626:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 803              		.loc 1 626 3 view .LVU266
 627:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 804              		.loc 1 627 3 view .LVU267
 626:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 805              		.loc 1 626 13 is_stmt 0 view .LVU268
 806 0000 C3B2     		uxtb	r3, r0
 627:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 807              		.loc 1 627 25 view .LVU269
 808 0002 A3F14102 		sub	r2, r3, #65
 627:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 809              		.loc 1 627 6 view .LVU270
 810 0006 032A     		cmp	r2, #3
 811 0008 06D9     		bls	.L74
 635:src/keys.c    **** #endif
 812              		.loc 1 635 7 is_stmt 1 view .LVU271
 635:src/keys.c    **** #endif
 813              		.loc 1 635 29 is_stmt 0 view .LVU272
 814 000a AD3B     		subs	r3, r3, #173
 635:src/keys.c    **** #endif
 815              		.loc 1 635 10 view .LVU273
 816 000c 052B     		cmp	r3, #5
 817 000e 02D8     		bhi	.L73
 645:src/keys.c    **** 		}
 818              		.loc 1 645 4 is_stmt 1 view .LVU274
 645:src/keys.c    **** 		}
 819              		.loc 1 645 20 is_stmt 0 view .LVU275
 820 0010 054B     		ldr	r3, .L75
 821 0012 0122     		movs	r2, #1
 822 0014 1A60     		str	r2, [r3]
 823              	.L73:
 824              	.LBE268:
 649:src/keys.c    **** 
 825              		.loc 1 649 1 view .LVU276
 826 0016 7047     		bx	lr
 827              	.L74:
 828              	.LBB269:
 628:src/keys.c    **** 			return STATE_UNFINISHED;
 829              		.loc 1 628 4 is_stmt 1 view .LVU277
 628:src/keys.c    **** 			return STATE_UNFINISHED;
ARM GAS  /tmp/cccKVeLo.s 			page 64


 830              		.loc 1 628 19 is_stmt 0 view .LVU278
 831 0018 044B     		ldr	r3, .L75+4
 832 001a 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
 628:src/keys.c    **** 			return STATE_UNFINISHED;
 833              		.loc 1 628 35 view .LVU279
 834 001c 4038     		subs	r0, r0, #64
 835              	.LVL64:
 628:src/keys.c    **** 			return STATE_UNFINISHED;
 836              		.loc 1 628 19 view .LVU280
 837 001e 60F30202 		bfi	r2, r0, #0, #3
 838 0022 1A75     		strb	r2, [r3, #20]
 629:src/keys.c    **** 		}
 839              		.loc 1 629 4 is_stmt 1 view .LVU281
 629:src/keys.c    **** 		}
 840              		.loc 1 629 11 is_stmt 0 view .LVU282
 841 0024 3320     		movs	r0, #51
 842              	.LVL65:
 629:src/keys.c    **** 		}
 843              		.loc 1 629 11 view .LVU283
 844 0026 7047     		bx	lr
 845              	.L76:
 846              		.align	2
 847              	.L75:
 848 0028 00000000 		.word	NonProgrammable
 849 002c 00000000 		.word	StateWhileOn
 850              	.LBE269:
 851              		.cfi_endproc
 852              	.LFE59:
 854              		.section	.text.init_arg.part.0,"ax",%progbits
 855              		.align	1
 856              		.p2align 2,,3
 857              		.syntax unified
 858              		.thumb
 859              		.thumb_func
 860              		.fpu fpv4-sp-d16
 862              	init_arg.part.0:
 863              	.LVL66:
 864              	.LFB61:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 865              		.loc 1 506 13 is_stmt 1 view -0
 866              		.cfi_startproc
 867              		@ args = 0, pretend = 0, frame = 0
 868              		@ frame_needed = 0, uses_anonymous_args = 0
 869              		@ link register save eliminated.
 509:src/keys.c    **** 	State2.ind = 0;
 870              		.loc 1 509 2 view .LVU285
 509:src/keys.c    **** 	State2.ind = 0;
 871              		.loc 1 509 10 is_stmt 0 view .LVU286
 872 0000 084B     		ldr	r3, .L78
 514:src/keys.c    **** 	State2.local = 0;
 873              		.loc 1 514 13 view .LVU287
 874 0002 5969     		ldr	r1, [r3, #20]
 509:src/keys.c    **** 	State2.ind = 0;
 875              		.loc 1 509 10 view .LVU288
 876 0004 D877     		strb	r0, [r3, #31]
 510:src/keys.c    **** 	State2.digval = 0;
 877              		.loc 1 510 2 is_stmt 1 view .LVU289
ARM GAS  /tmp/cccKVeLo.s 			page 65


 511:src/keys.c    **** 	State2.numdigit = 0;
 878              		.loc 1 511 2 view .LVU290
 514:src/keys.c    **** 	State2.local = 0;
 879              		.loc 1 514 13 is_stmt 0 view .LVU291
 880 0006 21F40F11 		bic	r1, r1, #2342912
 881 000a 8628     		cmp	r0, #134
 882 000c 0CBF     		ite	eq
 883 000e 4FF40812 		moveq	r2, #2228224
 884 0012 4FF40012 		movne	r2, #2097152
 885 0016 0A43     		orrs	r2, r2, r1
 511:src/keys.c    **** 	State2.numdigit = 0;
 886              		.loc 1 511 16 view .LVU292
 887 0018 0021     		movs	r1, #0
 514:src/keys.c    **** 	State2.local = 0;
 888              		.loc 1 514 13 view .LVU293
 889 001a 5A61     		str	r2, [r3, #20]
 511:src/keys.c    **** 	State2.numdigit = 0;
 890              		.loc 1 511 16 view .LVU294
 891 001c 1981     		strh	r1, [r3, #8]	@ movhi
 512:src/keys.c    **** 	State2.rarg = 1;
 892              		.loc 1 512 2 is_stmt 1 view .LVU295
 512:src/keys.c    **** 	State2.rarg = 1;
 893              		.loc 1 512 18 is_stmt 0 view .LVU296
 894 001e D972     		strb	r1, [r3, #11]
 513:src/keys.c    **** 	State2.dot = 0;
 895              		.loc 1 513 2 is_stmt 1 view .LVU297
 514:src/keys.c    **** 	State2.local = 0;
 896              		.loc 1 514 2 view .LVU298
 515:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 897              		.loc 1 515 2 view .LVU299
 516:src/keys.c    **** }
 898              		.loc 1 516 2 view .LVU300
 517:src/keys.c    **** 
 899              		.loc 1 517 1 is_stmt 0 view .LVU301
 900 0020 7047     		bx	lr
 901              	.L79:
 902 0022 00BF     		.align	2
 903              	.L78:
 904 0024 00000000 		.word	StateWhileOn
 905              		.cfi_endproc
 906              	.LFE61:
 908              		.section	.text.reset_arg,"ax",%progbits
 909              		.align	1
 910              		.p2align 2,,3
 911              		.syntax unified
 912              		.thumb
 913              		.thumb_func
 914              		.fpu fpv4-sp-d16
 916              	reset_arg:
 917              	.LFB29:
1524:src/keys.c    **** 	init_arg((enum rarg) 0);
 918              		.loc 1 1524 29 is_stmt 1 view -0
 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 0
 921              		@ frame_needed = 0, uses_anonymous_args = 0
1525:src/keys.c    **** 	State2.rarg = 0;
 922              		.loc 1 1525 2 view .LVU303
ARM GAS  /tmp/cccKVeLo.s 			page 66


 923              	.LVL67:
 924              	.LBB270:
 925              	.LBI270:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 926              		.loc 1 506 13 view .LVU304
 927              	.LBB271:
 507:src/keys.c    **** 		return;
 928              		.loc 1 507 2 view .LVU305
 929              	.LBE271:
 930              	.LBE270:
1524:src/keys.c    **** 	init_arg((enum rarg) 0);
 931              		.loc 1 1524 29 is_stmt 0 view .LVU306
 932 0000 08B5     		push	{r3, lr}
 933              		.cfi_def_cfa_offset 8
 934              		.cfi_offset 3, -8
 935              		.cfi_offset 14, -4
 936              	.LBB273:
 937              	.LBB272:
 507:src/keys.c    **** 		return;
 938              		.loc 1 507 6 view .LVU307
 939 0002 FFF7FEFF 		bl	is_bad_cmdline
 940              	.LVL68:
 507:src/keys.c    **** 		return;
 941              		.loc 1 507 5 view .LVU308
 942 0006 08B9     		cbnz	r0, .L81
 943 0008 FFF7FEFF 		bl	init_arg.part.0
 944              	.LVL69:
 945              	.L81:
 507:src/keys.c    **** 		return;
 946              		.loc 1 507 5 view .LVU309
 947              	.LBE272:
 948              	.LBE273:
1526:src/keys.c    **** }
 949              		.loc 1 1526 2 is_stmt 1 view .LVU310
1526:src/keys.c    **** }
 950              		.loc 1 1526 14 is_stmt 0 view .LVU311
 951 000c 024B     		ldr	r3, .L83
 952 000e 9A7D     		ldrb	r2, [r3, #22]	@ zero_extendqisi2
 953 0010 6FF34512 		bfc	r2, #5, #1
 954 0014 9A75     		strb	r2, [r3, #22]
1527:src/keys.c    **** 
 955              		.loc 1 1527 1 view .LVU312
 956 0016 08BD     		pop	{r3, pc}
 957              	.L84:
 958              		.align	2
 959              	.L83:
 960 0018 00000000 		.word	StateWhileOn
 961              		.cfi_endproc
 962              	.LFE29:
 964              		.section	.text.arg_eval,"ax",%progbits
 965              		.align	1
 966              		.p2align 2,,3
 967              		.syntax unified
 968              		.thumb
 969              		.thumb_func
 970              		.fpu fpv4-sp-d16
 972              	arg_eval:
ARM GAS  /tmp/cccKVeLo.s 			page 67


 973              	.LVL70:
 974              	.LFB30:
1529:src/keys.c    **** 	const unsigned int base = CmdBase;
 975              		.loc 1 1529 39 is_stmt 1 view -0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 0
 978              		@ frame_needed = 0, uses_anonymous_args = 0
1530:src/keys.c    **** 	int r = RARG(base, val 
 979              		.loc 1 1530 2 view .LVU314
1530:src/keys.c    **** 	int r = RARG(base, val 
 980              		.loc 1 1530 28 is_stmt 0 view .LVU315
 981 0000 1C4B     		ldr	r3, .L106
1529:src/keys.c    **** 	const unsigned int base = CmdBase;
 982              		.loc 1 1529 39 view .LVU316
 983 0002 70B5     		push	{r4, r5, r6, lr}
 984              		.cfi_def_cfa_offset 16
 985              		.cfi_offset 4, -16
 986              		.cfi_offset 5, -12
 987              		.cfi_offset 6, -8
 988              		.cfi_offset 14, -4
1531:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 989              		.loc 1 1531 10 view .LVU317
 990 0004 9D7D     		ldrb	r5, [r3, #22]	@ zero_extendqisi2
 991 0006 597D     		ldrb	r1, [r3, #21]	@ zero_extendqisi2
1530:src/keys.c    **** 	int r = RARG(base, val 
 992              		.loc 1 1530 21 view .LVU318
 993 0008 DA7F     		ldrb	r2, [r3, #31]	@ zero_extendqisi2
 994              	.LVL71:
1531:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 995              		.loc 1 1531 2 is_stmt 1 view .LVU319
1531:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 996              		.loc 1 1531 10 is_stmt 0 view .LVU320
 997 000a EE07     		lsls	r6, r5, #31
1534:src/keys.c    **** 
 998              		.loc 1 1534 30 view .LVU321
 999 000c 1A4E     		ldr	r6, .L106+4
 1000 000e 3668     		ldr	r6, [r6]
1531:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 1001              		.loc 1 1531 10 view .LVU322
 1002 0010 01F08003 		and	r3, r1, #128
 1003 0014 0344     		add	r3, r3, r0
1534:src/keys.c    **** 
 1004              		.loc 1 1534 30 view .LVU323
 1005 0016 96F8EA67 		ldrb	r6, [r6, #2026]	@ zero_extendqisi2
1531:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 1006              		.loc 1 1531 10 view .LVU324
 1007 001a 02F12004 		add	r4, r2, #32
 1008 001e 48BF     		it	mi
 1009 0020 7033     		addmi	r3, r3, #112
 1010 0022 2402     		lsls	r4, r4, #8
 1011 0024 1C43     		orrs	r4, r4, r3
 1012              	.LVL72:
1534:src/keys.c    **** 
 1013              		.loc 1 1534 2 is_stmt 1 view .LVU325
1534:src/keys.c    **** 
 1014              		.loc 1 1534 77 is_stmt 0 view .LVU326
 1015 0026 3307     		lsls	r3, r6, #28
ARM GAS  /tmp/cccKVeLo.s 			page 68


 1016 0028 1DD5     		bpl	.L92
1534:src/keys.c    **** 
 1017              		.loc 1 1534 77 discriminator 2 view .LVU327
 1018 002a 15F0400F 		tst	r5, #64
 1019 002e 0CBF     		ite	eq
 1020 0030 0425     		moveq	r5, #4
 1021 0032 0825     		movne	r5, #8
 1022              	.L87:
 1023              	.LVL73:
1536:src/keys.c    **** 		/*
 1024              		.loc 1 1536 2 is_stmt 1 discriminator 6 view .LVU328
1536:src/keys.c    **** 		/*
 1025              		.loc 1 1536 5 is_stmt 0 discriminator 6 view .LVU329
 1026 0034 0E06     		lsls	r6, r1, #24
 1027 0036 12D4     		bmi	.L88
1551:src/keys.c    **** 			// Disallow odd complex register > 98
 1028              		.loc 1 1551 3 is_stmt 1 view .LVU330
1551:src/keys.c    **** 			// Disallow odd complex register > 98
 1029              		.loc 1 1551 20 is_stmt 0 view .LVU331
 1030 0038 104B     		ldr	r3, .L106+8
 1031 003a 03EB0213 		add	r3, r3, r2, lsl #4
 1032 003e 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
1551:src/keys.c    **** 			// Disallow odd complex register > 98
 1033              		.loc 1 1551 6 view .LVU332
 1034 0040 D906     		lsls	r1, r3, #27
 1035 0042 09D5     		bpl	.L89
1551:src/keys.c    **** 			// Disallow odd complex register > 98
 1036              		.loc 1 1551 27 discriminator 1 view .LVU333
 1037 0044 6228     		cmp	r0, #98
 1038 0046 07D9     		bls	.L89
1551:src/keys.c    **** 			// Disallow odd complex register > 98
 1039              		.loc 1 1551 52 discriminator 2 view .LVU334
 1040 0048 C307     		lsls	r3, r0, #31
 1041 004a 02D4     		bmi	.L96
1555:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1042              		.loc 1 1555 3 is_stmt 1 view .LVU335
1555:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1043              		.loc 1 1555 28 is_stmt 0 view .LVU336
 1044 004c 223A     		subs	r2, r2, #34
 1045              	.LVL74:
1555:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1046              		.loc 1 1555 6 view .LVU337
 1047 004e 012A     		cmp	r2, #1
 1048 0050 05D8     		bhi	.L88
 1049              	.LVL75:
 1050              	.L96:
1553:src/keys.c    **** #endif
 1051              		.loc 1 1553 11 view .LVU338
 1052 0052 3324     		movs	r4, #51
 1053              	.LVL76:
1562:src/keys.c    **** 
 1054              		.loc 1 1562 1 view .LVU339
 1055 0054 2046     		mov	r0, r4
 1056              	.LVL77:
1562:src/keys.c    **** 
 1057              		.loc 1 1562 1 view .LVU340
 1058 0056 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/cccKVeLo.s 			page 69


 1059              	.LVL78:
 1060              	.L89:
1555:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1061              		.loc 1 1555 3 is_stmt 1 view .LVU341
1555:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1062              		.loc 1 1555 28 is_stmt 0 view .LVU342
 1063 0058 223A     		subs	r2, r2, #34
 1064              	.LVL79:
1555:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1065              		.loc 1 1555 6 view .LVU343
 1066 005a 012A     		cmp	r2, #1
 1067 005c 05D9     		bls	.L105
 1068              	.LVL80:
 1069              	.L88:
1560:src/keys.c    **** 	return r;
 1070              		.loc 1 1560 2 is_stmt 1 view .LVU344
 1071 005e FFF7FEFF 		bl	reset_arg
 1072              	.LVL81:
1561:src/keys.c    **** }
 1073              		.loc 1 1561 2 view .LVU345
1562:src/keys.c    **** 
 1074              		.loc 1 1562 1 is_stmt 0 view .LVU346
 1075 0062 2046     		mov	r0, r4
 1076 0064 70BD     		pop	{r4, r5, r6, pc}
 1077              	.LVL82:
 1078              	.L92:
1534:src/keys.c    **** 
 1079              		.loc 1 1534 77 view .LVU347
 1080 0066 0425     		movs	r5, #4
 1081 0068 E4E7     		b	.L87
 1082              	.LVL83:
 1083              	.L105:
1555:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1084              		.loc 1 1555 73 discriminator 1 view .LVU348
 1085 006a C5F16405 		rsb	r5, r5, #100
 1086              	.LVL84:
1555:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1087              		.loc 1 1555 52 discriminator 1 view .LVU349
 1088 006e 8542     		cmp	r5, r0
 1089 0070 F5D2     		bcs	.L88
 1090 0072 EEE7     		b	.L96
 1091              	.L107:
 1092              		.align	2
 1093              	.L106:
 1094 0074 00000000 		.word	StateWhileOn
 1095 0078 00000000 		.word	main_ram
 1096 007c 00000000 		.word	argcmds
 1097              		.cfi_endproc
 1098              	.LFE30:
 1100              		.section	.text.process_arg_shuffle,"ax",%progbits
 1101              		.align	1
 1102              		.p2align 2,,3
 1103              		.syntax unified
 1104              		.thumb
 1105              		.thumb_func
 1106              		.fpu fpv4-sp-d16
 1108              	process_arg_shuffle:
ARM GAS  /tmp/cccKVeLo.s 			page 70


 1109              	.LVL85:
 1110              	.LFB36:
1676:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1111              		.loc 1 1676 39 is_stmt 1 view -0
 1112              		.cfi_startproc
 1113              		@ args = 0, pretend = 0, frame = 0
 1114              		@ frame_needed = 0, uses_anonymous_args = 0
 1115              		@ link register save eliminated.
1677:src/keys.c    **** 	if (State2.numdigit < 4)
 1116              		.loc 1 1677 2 view .LVU351
1676:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1117              		.loc 1 1676 39 is_stmt 0 view .LVU352
 1118 0000 10B4     		push	{r4}
 1119              		.cfi_def_cfa_offset 4
 1120              		.cfi_offset 4, -4
1677:src/keys.c    **** 	if (State2.numdigit < 4)
 1121              		.loc 1 1677 31 view .LVU353
 1122 0002 0A4A     		ldr	r2, .L111
 1123 0004 D37A     		ldrb	r3, [r2, #11]	@ zero_extendqisi2
1677:src/keys.c    **** 	if (State2.numdigit < 4)
 1124              		.loc 1 1677 16 view .LVU354
 1125 0006 1189     		ldrh	r1, [r2, #8]
1677:src/keys.c    **** 	if (State2.numdigit < 4)
 1126              		.loc 1 1677 43 view .LVU355
 1127 0008 5C00     		lsls	r4, r3, #1
1677:src/keys.c    **** 	if (State2.numdigit < 4)
 1128              		.loc 1 1677 21 view .LVU356
 1129 000a A040     		lsls	r0, r0, r4
 1130              	.LVL86:
1677:src/keys.c    **** 	if (State2.numdigit < 4)
 1131              		.loc 1 1677 40 view .LVU357
 1132 000c 0133     		adds	r3, r3, #1
 1133 000e DBB2     		uxtb	r3, r3
1677:src/keys.c    **** 	if (State2.numdigit < 4)
 1134              		.loc 1 1677 16 view .LVU358
 1135 0010 0844     		add	r0, r0, r1
 1136 0012 80B2     		uxth	r0, r0
1678:src/keys.c    **** 		return STATE_UNFINISHED;
 1137              		.loc 1 1678 5 view .LVU359
 1138 0014 032B     		cmp	r3, #3
1677:src/keys.c    **** 	if (State2.numdigit < 4)
 1139              		.loc 1 1677 40 view .LVU360
 1140 0016 D372     		strb	r3, [r2, #11]
1677:src/keys.c    **** 	if (State2.numdigit < 4)
 1141              		.loc 1 1677 16 view .LVU361
 1142 0018 1081     		strh	r0, [r2, #8]	@ movhi
1678:src/keys.c    **** 		return STATE_UNFINISHED;
 1143              		.loc 1 1678 2 is_stmt 1 view .LVU362
1678:src/keys.c    **** 		return STATE_UNFINISHED;
 1144              		.loc 1 1678 5 is_stmt 0 view .LVU363
 1145 001a 03D9     		bls	.L109
1680:src/keys.c    **** }
 1146              		.loc 1 1680 2 is_stmt 1 view .LVU364
1681:src/keys.c    **** 
 1147              		.loc 1 1681 1 is_stmt 0 view .LVU365
 1148 001c 5DF8044B 		ldr	r4, [sp], #4
 1149              		.cfi_remember_state
ARM GAS  /tmp/cccKVeLo.s 			page 71


 1150              		.cfi_restore 4
 1151              		.cfi_def_cfa_offset 0
1680:src/keys.c    **** }
 1152              		.loc 1 1680 9 view .LVU366
 1153 0020 FFF7FEBF 		b	arg_eval
 1154              	.LVL87:
 1155              	.L109:
 1156              		.cfi_restore_state
1681:src/keys.c    **** 
 1157              		.loc 1 1681 1 view .LVU367
 1158 0024 3320     		movs	r0, #51
 1159 0026 5DF8044B 		ldr	r4, [sp], #4
 1160              		.cfi_restore 4
 1161              		.cfi_def_cfa_offset 0
 1162 002a 7047     		bx	lr
 1163              	.L112:
 1164              		.align	2
 1165              	.L111:
 1166 002c 00000000 		.word	StateWhileOn
 1167              		.cfi_endproc
 1168              	.LFE36:
 1170              		.section	.text.arg_digit,"ax",%progbits
 1171              		.align	1
 1172              		.p2align 2,,3
 1173              		.syntax unified
 1174              		.thumb
 1175              		.thumb_func
 1176              		.fpu fpv4-sp-d16
 1178              	arg_digit:
 1179              	.LVL88:
 1180              	.LFB31:
1564:src/keys.c    **** 	int lim;
 1181              		.loc 1 1564 29 is_stmt 1 view -0
 1182              		.cfi_startproc
 1183              		@ args = 0, pretend = 0, frame = 0
 1184              		@ frame_needed = 0, uses_anonymous_args = 0
1565:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
 1185              		.loc 1 1565 2 view .LVU369
1570:src/keys.c    **** #endif
 1186              		.loc 1 1570 2 view .LVU370
1564:src/keys.c    **** 	int lim;
 1187              		.loc 1 1564 29 is_stmt 0 view .LVU371
 1188 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1189              		.cfi_def_cfa_offset 24
 1190              		.cfi_offset 3, -24
 1191              		.cfi_offset 4, -20
 1192              		.cfi_offset 5, -16
 1193              		.cfi_offset 6, -12
 1194              		.cfi_offset 7, -8
 1195              		.cfi_offset 14, -4
1570:src/keys.c    **** #endif
 1196              		.loc 1 1570 28 view .LVU372
 1197 0002 314C     		ldr	r4, .L138
1573:src/keys.c    **** 	
 1198              		.loc 1 1573 34 view .LVU373
 1199 0004 314A     		ldr	r2, .L138+4
1570:src/keys.c    **** #endif
ARM GAS  /tmp/cccKVeLo.s 			page 72


 1200              		.loc 1 1570 28 view .LVU374
 1201 0006 E77F     		ldrb	r7, [r4, #31]	@ zero_extendqisi2
 1202              	.LVL89:
1572:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1203              		.loc 1 1572 2 is_stmt 1 view .LVU375
1572:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1204              		.loc 1 1572 33 is_stmt 0 view .LVU376
 1205 0008 2389     		ldrh	r3, [r4, #8]
1573:src/keys.c    **** 	
 1206              		.loc 1 1573 34 view .LVU377
 1207 000a 02EB0712 		add	r2, r2, r7, lsl #4
1572:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1208              		.loc 1 1572 41 view .LVU378
 1209 000e 03EB8303 		add	r3, r3, r3, lsl #2
1573:src/keys.c    **** 	
 1210              		.loc 1 1573 34 view .LVU379
 1211 0012 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
1573:src/keys.c    **** 	
 1212              		.loc 1 1573 39 view .LVU380
 1213 0014 8E07     		lsls	r6, r1, #30
1572:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1214              		.loc 1 1572 46 view .LVU381
 1215 0016 00EB4305 		add	r5, r0, r3, lsl #1
 1216              	.LVL90:
1573:src/keys.c    **** 	
 1217              		.loc 1 1573 2 is_stmt 1 view .LVU382
1573:src/keys.c    **** 	
 1218              		.loc 1 1573 39 is_stmt 0 view .LVU383
 1219 001a C1F34000 		ubfx	r0, r1, #1, #1
 1220              	.LVL91:
1573:src/keys.c    **** 	
 1221              		.loc 1 1573 39 view .LVU384
 1222 001e 32D5     		bpl	.L114
 1223              	.LVL92:
1575:src/keys.c    **** 		// Handle local registers and flags
 1224              		.loc 1 1575 2 is_stmt 1 view .LVU385
1575:src/keys.c    **** 		// Handle local registers and flags
 1225              		.loc 1 1575 6 is_stmt 0 view .LVU386
 1226 0020 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1575:src/keys.c    **** 		// Handle local registers and flags
 1227              		.loc 1 1575 5 view .LVU387
 1228 0022 D907     		lsls	r1, r3, #31
 1229 0024 28D5     		bpl	.L116
 1230              	.L127:
1573:src/keys.c    **** 	
 1231              		.loc 1 1573 39 view .LVU388
 1232 0026 0120     		movs	r0, #1
 1233              	.LVL93:
 1234              	.L115:
1577:src/keys.c    **** 		if (State2.runmode) {
 1235              		.loc 1 1577 3 is_stmt 1 view .LVU389
1578:src/keys.c    **** 			if (LocalRegs == 0)
 1236              		.loc 1 1578 3 view .LVU390
1578:src/keys.c    **** 			if (LocalRegs == 0)
 1237              		.loc 1 1578 6 is_stmt 0 view .LVU391
 1238 0028 5A06     		lsls	r2, r3, #25
 1239 002a 3BD5     		bpl	.L129
ARM GAS  /tmp/cccKVeLo.s 			page 73


1579:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1240              		.loc 1 1579 4 is_stmt 1 view .LVU392
1579:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1241              		.loc 1 1579 8 is_stmt 0 view .LVU393
 1242 002c 284B     		ldr	r3, .L138+8
 1243 002e 1B68     		ldr	r3, [r3]
1579:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1244              		.loc 1 1579 7 view .LVU394
 1245 0030 B3F9DE37 		ldrsh	r3, [r3, #2014]
 1246 0034 2BB3     		cbz	r3, .L122
1581:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
 1247              		.loc 1 1581 4 is_stmt 1 view .LVU395
1581:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
 1248              		.loc 1 1581 7 is_stmt 0 view .LVU396
 1249 0036 A8B3     		cbz	r0, .L129
1582:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1250              		.loc 1 1582 5 is_stmt 1 view .LVU397
1582:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1251              		.loc 1 1582 11 is_stmt 0 view .LVU398
 1252 0038 3846     		mov	r0, r7
 1253 003a FFF7FEFF 		bl	local_regs_rarg
 1254              	.LVL94:
1583:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1255              		.loc 1 1583 5 is_stmt 1 view .LVU399
1582:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1256              		.loc 1 1582 9 is_stmt 0 view .LVU400
 1257 003e 0138     		subs	r0, r0, #1
 1258              	.LVL95:
1582:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1259              		.loc 1 1582 9 view .LVU401
 1260 0040 0F28     		cmp	r0, #15
 1261 0042 A8BF     		it	ge
 1262 0044 0F20     		movge	r0, #15
 1263              	.LVL96:
 1264              	.L119:
1595:src/keys.c    **** 		return STATE_UNFINISHED;
 1265              		.loc 1 1595 2 is_stmt 1 view .LVU402
1595:src/keys.c    **** 		return STATE_UNFINISHED;
 1266              		.loc 1 1595 5 is_stmt 0 view .LVU403
 1267 0046 8542     		cmp	r5, r0
 1268 0048 1BDC     		bgt	.L122
 1269              	.L136:
1598:src/keys.c    **** 	++State2.numdigit;
 1270              		.loc 1 1598 2 is_stmt 1 view .LVU404
1599:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1271              		.loc 1 1599 2 is_stmt 0 view .LVU405
 1272 004a E67A     		ldrb	r6, [r4, #11]	@ zero_extendqisi2
1598:src/keys.c    **** 	++State2.numdigit;
 1273              		.loc 1 1598 16 view .LVU406
 1274 004c 2581     		strh	r5, [r4, #8]	@ movhi
1599:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1275              		.loc 1 1599 2 is_stmt 1 view .LVU407
 1276 004e 0136     		adds	r6, r6, #1
1600:src/keys.c    **** 		int result = arg_eval(val);
 1277              		.loc 1 1600 16 is_stmt 0 view .LVU408
 1278 0050 05EB8503 		add	r3, r5, r5, lsl #2
1599:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
ARM GAS  /tmp/cccKVeLo.s 			page 74


 1279              		.loc 1 1599 2 view .LVU409
 1280 0054 F6B2     		uxtb	r6, r6
1600:src/keys.c    **** 		int result = arg_eval(val);
 1281              		.loc 1 1600 5 view .LVU410
 1282 0056 B0EB430F 		cmp	r0, r3, lsl #1
1599:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1283              		.loc 1 1599 2 view .LVU411
 1284 005a E672     		strb	r6, [r4, #11]
1600:src/keys.c    **** 		int result = arg_eval(val);
 1285              		.loc 1 1600 2 is_stmt 1 view .LVU412
1600:src/keys.c    **** 		int result = arg_eval(val);
 1286              		.loc 1 1600 5 is_stmt 0 view .LVU413
 1287 005c 04DB     		blt	.L125
1600:src/keys.c    **** 		int result = arg_eval(val);
 1288              		.loc 1 1600 49 discriminator 1 view .LVU414
 1289 005e 3846     		mov	r0, r7
 1290              	.LVL97:
1600:src/keys.c    **** 		int result = arg_eval(val);
 1291              		.loc 1 1600 49 discriminator 1 view .LVU415
 1292 0060 FFF7FEFF 		bl	num_arg_digits
 1293              	.LVL98:
1600:src/keys.c    **** 		int result = arg_eval(val);
 1294              		.loc 1 1600 27 discriminator 1 view .LVU416
 1295 0064 8642     		cmp	r6, r0
 1296 0066 0CDB     		blt	.L122
 1297              	.L125:
 1298              	.LBB274:
1601:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1299              		.loc 1 1601 3 is_stmt 1 view .LVU417
1601:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1300              		.loc 1 1601 16 is_stmt 0 view .LVU418
 1301 0068 2846     		mov	r0, r5
 1302 006a FFF7FEFF 		bl	arg_eval
 1303              	.LVL99:
1602:src/keys.c    **** 			--State2.numdigit;
 1304              		.loc 1 1602 3 is_stmt 1 view .LVU419
1602:src/keys.c    **** 			--State2.numdigit;
 1305              		.loc 1 1602 6 is_stmt 0 view .LVU420
 1306 006e 3328     		cmp	r0, #51
 1307 0070 1AD0     		beq	.L134
 1308              	.LBE274:
1609:src/keys.c    **** 
 1309              		.loc 1 1609 1 view .LVU421
 1310 0072 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1311              	.LVL100:
 1312              	.L137:
1575:src/keys.c    **** 		// Handle local registers and flags
 1313              		.loc 1 1575 2 is_stmt 1 view .LVU422
1575:src/keys.c    **** 		// Handle local registers and flags
 1314              		.loc 1 1575 5 is_stmt 0 view .LVU423
 1315 0074 DA07     		lsls	r2, r3, #31
 1316 0076 D6D4     		bmi	.L127
 1317              	.L116:
1589:src/keys.c    **** 	else {
 1318              		.loc 1 1589 3 is_stmt 1 view .LVU424
1589:src/keys.c    **** 	else {
 1319              		.loc 1 1589 65 is_stmt 0 view .LVU425
ARM GAS  /tmp/cccKVeLo.s 			page 75


 1320 0078 5B06     		lsls	r3, r3, #25
 1321 007a 1FD4     		bmi	.L135
 1322 007c 6320     		movs	r0, #99
 1323              	.LVL101:
1595:src/keys.c    **** 		return STATE_UNFINISHED;
 1324              		.loc 1 1595 2 is_stmt 1 view .LVU426
1595:src/keys.c    **** 		return STATE_UNFINISHED;
 1325              		.loc 1 1595 5 is_stmt 0 view .LVU427
 1326 007e 8542     		cmp	r5, r0
 1327 0080 E3DD     		ble	.L136
 1328              	.LVL102:
 1329              	.L122:
1580:src/keys.c    **** 			if (is_reg) {
 1330              		.loc 1 1580 12 view .LVU428
 1331 0082 3320     		movs	r0, #51
1609:src/keys.c    **** 
 1332              		.loc 1 1609 1 view .LVU429
 1333 0084 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1334              	.LVL103:
 1335              	.L114:
1573:src/keys.c    **** 	
 1336              		.loc 1 1573 39 discriminator 2 view .LVU430
 1337 0086 94F91530 		ldrsb	r3, [r4, #21]
 1338 008a 002B     		cmp	r3, #0
1575:src/keys.c    **** 		// Handle local registers and flags
 1339              		.loc 1 1575 6 discriminator 2 view .LVU431
 1340 008c A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1573:src/keys.c    **** 	
 1341              		.loc 1 1573 39 discriminator 2 view .LVU432
 1342 008e F1DB     		blt	.L137
 1343              	.LVL104:
1575:src/keys.c    **** 		// Handle local registers and flags
 1344              		.loc 1 1575 2 is_stmt 1 view .LVU433
1575:src/keys.c    **** 		// Handle local registers and flags
 1345              		.loc 1 1575 5 is_stmt 0 view .LVU434
 1346 0090 DE07     		lsls	r6, r3, #31
 1347 0092 C9D4     		bmi	.L115
1588:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
 1348              		.loc 1 1588 7 is_stmt 1 view .LVU435
1591:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1349              		.loc 1 1591 3 view .LVU436
1591:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1350              		.loc 1 1591 7 is_stmt 0 view .LVU437
 1351 0094 1079     		ldrb	r0, [r2, #4]	@ zero_extendqisi2
 1352              	.LVL105:
1592:src/keys.c    **** 			lim = RARG_IND - 1;
 1353              		.loc 1 1592 3 is_stmt 1 view .LVU438
1592:src/keys.c    **** 			lim = RARG_IND - 1;
 1354              		.loc 1 1592 6 is_stmt 0 view .LVU439
 1355 0096 7F28     		cmp	r0, #127
 1356 0098 D5DD     		ble	.L119
1593:src/keys.c    **** 	}
 1357              		.loc 1 1593 8 discriminator 1 view .LVU440
 1358 009a 11F0010F 		tst	r1, #1
 1359 009e 18BF     		it	ne
 1360 00a0 7F20     		movne	r0, #127
 1361              	.LVL106:
ARM GAS  /tmp/cccKVeLo.s 			page 76


1593:src/keys.c    **** 	}
 1362              		.loc 1 1593 8 discriminator 1 view .LVU441
 1363 00a2 D0E7     		b	.L119
 1364              	.LVL107:
 1365              	.L129:
1577:src/keys.c    **** 		if (State2.runmode) {
 1366              		.loc 1 1577 7 view .LVU442
 1367 00a4 0F20     		movs	r0, #15
 1368 00a6 CEE7     		b	.L119
 1369              	.LVL108:
 1370              	.L134:
 1371              	.LBB275:
1603:src/keys.c    **** 			State2.digval /= 10;
 1372              		.loc 1 1603 4 is_stmt 1 view .LVU443
1604:src/keys.c    **** 		}
 1373              		.loc 1 1604 18 is_stmt 0 view .LVU444
 1374 00a8 2389     		ldrh	r3, [r4, #8]
 1375 00aa 0A49     		ldr	r1, .L138+12
1603:src/keys.c    **** 			State2.digval /= 10;
 1376              		.loc 1 1603 4 view .LVU445
 1377 00ac E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
1604:src/keys.c    **** 		}
 1378              		.loc 1 1604 18 view .LVU446
 1379 00ae A1FB0313 		umull	r1, r3, r1, r3
 1380 00b2 DB08     		lsrs	r3, r3, #3
1603:src/keys.c    **** 			State2.digval /= 10;
 1381              		.loc 1 1603 4 view .LVU447
 1382 00b4 013A     		subs	r2, r2, #1
1604:src/keys.c    **** 		}
 1383              		.loc 1 1604 18 view .LVU448
 1384 00b6 2381     		strh	r3, [r4, #8]	@ movhi
1603:src/keys.c    **** 			State2.digval /= 10;
 1385              		.loc 1 1603 4 view .LVU449
 1386 00b8 E272     		strb	r2, [r4, #11]
1604:src/keys.c    **** 		}
 1387              		.loc 1 1604 4 is_stmt 1 view .LVU450
 1388              	.LBE275:
1609:src/keys.c    **** 
 1389              		.loc 1 1609 1 is_stmt 0 view .LVU451
 1390 00ba F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1391              	.LVL109:
 1392              	.L135:
1589:src/keys.c    **** 	else {
 1393              		.loc 1 1589 26 discriminator 1 view .LVU452
 1394 00bc 3846     		mov	r0, r7
 1395 00be FFF7FEFF 		bl	global_regs_rarg
 1396              	.LVL110:
1589:src/keys.c    **** 	else {
 1397              		.loc 1 1589 61 discriminator 1 view .LVU453
 1398 00c2 0138     		subs	r0, r0, #1
 1399 00c4 BFE7     		b	.L119
 1400              	.L139:
 1401 00c6 00BF     		.align	2
 1402              	.L138:
 1403 00c8 00000000 		.word	StateWhileOn
 1404 00cc 00000000 		.word	argcmds
 1405 00d0 00000000 		.word	main_ram
ARM GAS  /tmp/cccKVeLo.s 			page 77


 1406 00d4 CDCCCCCC 		.word	-858993459
 1407              		.cfi_endproc
 1408              	.LFE31:
 1410              		.section	.text.intltr,"ax",%progbits
 1411              		.align	1
 1412              		.p2align 2,,3
 1413              		.syntax unified
 1414              		.thumb
 1415              		.thumb_func
 1416              		.fpu fpv4-sp-d16
 1418              	intltr:
 1419              	.LVL111:
 1420              	.LFB18:
 671:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1421              		.loc 1 671 26 is_stmt 1 view -0
 1422              		.cfi_startproc
 1423              		@ args = 0, pretend = 0, frame = 0
 1424              		@ frame_needed = 0, uses_anonymous_args = 0
 672:src/keys.c    **** }
 1425              		.loc 1 672 2 view .LVU455
 672:src/keys.c    **** }
 1426              		.loc 1 672 10 is_stmt 0 view .LVU456
 1427 0000 0B4B     		ldr	r3, .L149
 1428 0002 1B68     		ldr	r3, [r3]
 1429 0004 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 672:src/keys.c    **** }
 1430              		.loc 1 672 22 view .LVU457
 1431 0008 13F00103 		ands	r3, r3, #1
 1432 000c 05D0     		beq	.L142
 672:src/keys.c    **** }
 1433              		.loc 1 672 26 discriminator 1 view .LVU458
 1434 000e 094B     		ldr	r3, .L149+4
 1435 0010 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 672:src/keys.c    **** }
 1436              		.loc 1 672 22 discriminator 1 view .LVU459
 1437 0012 5B06     		lsls	r3, r3, #25
 1438 0014 03D4     		bmi	.L148
 672:src/keys.c    **** }
 1439              		.loc 1 672 22 view .LVU460
 1440 0016 0120     		movs	r0, #1
 1441              	.LVL112:
 673:src/keys.c    **** 
 1442              		.loc 1 673 1 view .LVU461
 1443 0018 7047     		bx	lr
 1444              	.LVL113:
 1445              	.L142:
 672:src/keys.c    **** }
 1446              		.loc 1 672 22 view .LVU462
 1447 001a 1846     		mov	r0, r3
 1448              	.LVL114:
 672:src/keys.c    **** }
 1449              		.loc 1 672 22 view .LVU463
 1450 001c 7047     		bx	lr
 1451              	.LVL115:
 1452              	.L148:
 671:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1453              		.loc 1 671 26 view .LVU464
ARM GAS  /tmp/cccKVeLo.s 			page 78


 1454 001e 10B5     		push	{r4, lr}
 1455              		.cfi_def_cfa_offset 8
 1456              		.cfi_offset 4, -8
 1457              		.cfi_offset 14, -4
 1458 0020 0446     		mov	r4, r0
 1459              	.LVL116:
 1460              	.LBB278:
 1461              	.LBI278:
 671:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1462              		.loc 1 671 12 is_stmt 1 view .LVU465
 1463              	.LBB279:
 672:src/keys.c    **** }
 1464              		.loc 1 672 52 is_stmt 0 view .LVU466
 1465 0022 FFF7FEFF 		bl	int_base
 1466              	.LVL117:
 672:src/keys.c    **** }
 1467              		.loc 1 672 43 view .LVU467
 1468 0026 8442     		cmp	r4, r0
 1469 0028 ACBF     		ite	ge
 1470 002a 0020     		movge	r0, #0
 1471 002c 0120     		movlt	r0, #1
 1472              	.LBE279:
 1473              	.LBE278:
 673:src/keys.c    **** 
 1474              		.loc 1 673 1 view .LVU468
 1475 002e 10BD     		pop	{r4, pc}
 1476              	.LVL118:
 1477              	.L150:
 673:src/keys.c    **** 
 1478              		.loc 1 673 1 view .LVU469
 1479              		.align	2
 1480              	.L149:
 1481 0030 00000000 		.word	main_ram
 1482 0034 00000000 		.word	StateWhileOn
 1483              		.cfi_endproc
 1484              	.LFE18:
 1486              		.section	.text.set_window,"ax",%progbits
 1487              		.align	1
 1488              		.p2align 2,,3
 1489              		.syntax unified
 1490              		.thumb
 1491              		.thumb_func
 1492              		.fpu fpv4-sp-d16
 1494              	set_window:
 1495              	.LVL119:
 1496              	.LFB53:
2567:src/keys.c    **** 
2568:src/keys.c    **** 
2569:src/keys.c    **** /*
2570:src/keys.c    ****  *  CAT command
2571:src/keys.c    ****  */
2572:src/keys.c    **** static int process_labellist(const keycode c) {
2573:src/keys.c    **** 	unsigned int pc = State2.digval;
2574:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
2575:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
2576:src/keys.c    **** 	const int opcode = getprog(pc);
2577:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
ARM GAS  /tmp/cccKVeLo.s 			page 79


2578:src/keys.c    **** 	const int direct = State2.runmode;
2579:src/keys.c    **** 	const enum shifts shift = reset_shift();
2580:src/keys.c    **** 	int op = STATE_UNFINISHED;
2581:src/keys.c    **** 
2582:src/keys.c    **** 	if (n < REGION_XROM) {
2583:src/keys.c    **** 		// Digits take you to that segment
2584:src/keys.c    **** 		pc = addrLIB(1, n);
2585:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
2586:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
2587:src/keys.c    **** 		State2.digval = pc;
2588:src/keys.c    **** 		return STATE_UNFINISHED;
2589:src/keys.c    **** 	}
2590:src/keys.c    **** 
2591:src/keys.c    **** 	switch (c | (shift << 8)) {
2592:src/keys.c    **** 
2593:src/keys.c    **** 	case K_UP | (SHIFT_F << 8):		// Find first label of previous program
2594:src/keys.c    **** 		pc = advance_to_previous_label(advance_to_previous_label(pc, 1), 1);
2595:src/keys.c    **** 		goto next;
2596:src/keys.c    **** 
2597:src/keys.c    **** 	case K_DOWN | (SHIFT_F << 8):		// Find next program
2598:src/keys.c    **** 		pc = advance_to_next_label(pc, 0, 1);
2599:src/keys.c    **** 	case K_DOWN:				// Find next label
2600:src/keys.c    **** 	next:
2601:src/keys.c    **** 		State2.digval = advance_to_next_label(pc, 1, 0);
2602:src/keys.c    **** 		return STATE_UNFINISHED;
2603:src/keys.c    **** 
2604:src/keys.c    **** 	case K_UP:				// Find previous label
2605:src/keys.c    **** 		State2.digval = advance_to_previous_label(pc, 0);
2606:src/keys.c    **** 		return STATE_UNFINISHED;
2607:src/keys.c    **** 
2608:src/keys.c    **** 	case K24:				// <- exits
2609:src/keys.c    **** 		break;
2610:src/keys.c    **** 
2611:src/keys.c    **** 	case K20:				// ENTER^
2612:src/keys.c    **** 	set_pc_and_exit:
2613:src/keys.c    **** 		set_pc(pc);			// forced branch
2614:src/keys.c    **** 		break;
2615:src/keys.c    **** 
2616:src/keys.c    **** 	case K24 | (SHIFT_F << 8):		// CLP
2617:src/keys.c    **** 		op = (OP_NIL | OP_CLPROG);
2618:src/keys.c    **** 		goto set_pc_and_exit;
2619:src/keys.c    **** 
2620:src/keys.c    **** 	case K10:				// STO
2621:src/keys.c    **** 	case K11:				// RCL
2622:src/keys.c    **** 	  //#ifndef DM42	
2623:src/keys.c    **** 		op = c == K10 ? (OP_NIL | OP_PSTO) : (OP_NIL | OP_PRCL);
2624:src/keys.c    **** 	  //#endif
2625:src/keys.c    **** /* #ifdef DM42 */
2626:src/keys.c    **** /* 	        op = OP_NIL; */
2627:src/keys.c    **** /* #endif	     */
2628:src/keys.c    **** 	  goto set_pc_and_exit;
2629:src/keys.c    **** #ifdef DM42
2630:src/keys.c    **** 	case K05:				// XEQ
2631:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
2632:src/keys.c    **** 		goto xeq_or_gto;
2633:src/keys.c    **** 
2634:src/keys.c    **** 	case K05 | (SHIFT_F << 8):		// GTO
ARM GAS  /tmp/cccKVeLo.s 			page 80


2635:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
2636:src/keys.c    **** 	xeq_or_gto:
2637:src/keys.c    **** 		if (label)
2638:src/keys.c    **** 			break;
2639:src/keys.c    **** 		return STATE_UNFINISHED;
2640:src/keys.c    **** #else
2641:src/keys.c    **** 	case K30:				// XEQ
2642:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
2643:src/keys.c    **** 		goto xeq_or_gto;
2644:src/keys.c    **** 
2645:src/keys.c    **** 	case K30 | (SHIFT_H << 8):		// GTO
2646:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
2647:src/keys.c    **** 	xeq_or_gto:
2648:src/keys.c    **** 		if (label)
2649:src/keys.c    **** 			break;
2650:src/keys.c    **** 		return STATE_UNFINISHED;
2651:src/keys.c    **** #endif		
2652:src/keys.c    **** 	case K63:				// R/S
2653:src/keys.c    **** 		if (direct && label) {
2654:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
2655:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
2656:src/keys.c    **** 			break;
2657:src/keys.c    **** 		}
2658:src/keys.c    **** 		return STATE_UNFINISHED;
2659:src/keys.c    **** 
2660:src/keys.c    **** 	case K63 | (SHIFT_H << 8):		// P/R
2661:src/keys.c    **** 		State2.runmode = 0;		// switch to program mode
2662:src/keys.c    **** 		goto set_pc_and_exit;
2663:src/keys.c    **** 
2664:src/keys.c    **** 	default:
2665:src/keys.c    **** 		return STATE_UNFINISHED;
2666:src/keys.c    **** 	}
2667:src/keys.c    **** 	State2.digval = 0;
2668:src/keys.c    **** 	State2.labellist = 0;
2669:src/keys.c    **** 	return check_confirm(op);
2670:src/keys.c    **** }
2671:src/keys.c    **** 
2672:src/keys.c    **** 
2673:src/keys.c    **** static void set_window(int c) {
 1497              		.loc 1 2673 31 is_stmt 1 view -0
 1498              		.cfi_startproc
 1499              		@ args = 0, pretend = 0, frame = 0
 1500              		@ frame_needed = 0, uses_anonymous_args = 0
2674:src/keys.c    **** 
2675:src/keys.c    **** 	if (State2.runmode) {
 1501              		.loc 1 2675 2 view .LVU471
2673:src/keys.c    **** 
 1502              		.loc 1 2673 31 is_stmt 0 view .LVU472
 1503 0000 38B5     		push	{r3, r4, r5, lr}
 1504              		.cfi_def_cfa_offset 16
 1505              		.cfi_offset 3, -16
 1506              		.cfi_offset 4, -12
 1507              		.cfi_offset 5, -8
 1508              		.cfi_offset 14, -4
 1509              		.loc 1 2675 6 view .LVU473
 1510 0002 224C     		ldr	r4, .L166
 1511 0004 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
ARM GAS  /tmp/cccKVeLo.s 			page 81


 1512              		.loc 1 2675 5 view .LVU474
 1513 0006 5A06     		lsls	r2, r3, #25
 1514 0008 00D4     		bmi	.L163
 1515              	.LVL120:
 1516              	.L151:
2676:src/keys.c    **** 		process_cmdline_set_lift();
2677:src/keys.c    **** 		// Make sure IntMaxWindow is recalculated
2678:src/keys.c    **** 		State2.disp_freeze = 0;
2679:src/keys.c    **** 		display();	
2680:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
2681:src/keys.c    **** 			if (UState.intm) {
2682:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
2683:src/keys.c    **** 					State2.window--;
2684:src/keys.c    **** 				return;
2685:src/keys.c    **** 			}
2686:src/keys.c    **** 			else 
2687:src/keys.c    **** 				State2.window = is_dblmode();
2688:src/keys.c    **** 		}
2689:src/keys.c    **** 		else {
2690:src/keys.c    **** 			if (UState.intm) {
2691:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
2692:src/keys.c    **** 					State2.window++;
2693:src/keys.c    **** 				return;
2694:src/keys.c    **** 			}
2695:src/keys.c    **** 			else
2696:src/keys.c    **** 				State2.window = 0;
2697:src/keys.c    **** 		}
2698:src/keys.c    **** 		set_smode(SDISP_SHOW);
2699:src/keys.c    **** 	}
2700:src/keys.c    **** }
 1517              		.loc 1 2700 1 view .LVU475
 1518 000a 38BD     		pop	{r3, r4, r5, pc}
 1519              	.LVL121:
 1520              	.L163:
2676:src/keys.c    **** 		process_cmdline_set_lift();
 1521              		.loc 1 2676 3 is_stmt 1 view .LVU476
 1522 000c 0546     		mov	r5, r0
 1523 000e FFF7FEFF 		bl	process_cmdline_set_lift
 1524              	.LVL122:
2678:src/keys.c    **** 		display();	
 1525              		.loc 1 2678 3 view .LVU477
2678:src/keys.c    **** 		display();	
 1526              		.loc 1 2678 22 is_stmt 0 view .LVU478
 1527 0012 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 1528 0014 6FF30413 		bfc	r3, #4, #1
 1529 0018 E375     		strb	r3, [r4, #23]
2679:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
 1530              		.loc 1 2679 3 is_stmt 1 view .LVU479
 1531 001a FFF7FEFF 		bl	display
 1532              	.LVL123:
2680:src/keys.c    **** 			if (UState.intm) {
 1533              		.loc 1 2680 3 view .LVU480
2681:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1534              		.loc 1 2681 8 is_stmt 0 view .LVU481
 1535 001e 1C4B     		ldr	r3, .L166+4
 1536 0020 1B68     		ldr	r3, [r3]
2680:src/keys.c    **** 			if (UState.intm) {
ARM GAS  /tmp/cccKVeLo.s 			page 82


 1537              		.loc 1 2680 6 view .LVU482
 1538 0022 2C2D     		cmp	r5, #44
2681:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1539              		.loc 1 2681 8 view .LVU483
 1540 0024 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
2680:src/keys.c    **** 			if (UState.intm) {
 1541              		.loc 1 2680 6 view .LVU484
 1542 0028 18D0     		beq	.L164
2690:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 1543              		.loc 1 2690 4 is_stmt 1 view .LVU485
2690:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 1544              		.loc 1 2690 7 is_stmt 0 view .LVU486
 1545 002a 13F00103 		ands	r3, r3, #1
 1546 002e 09D1     		bne	.L165
2696:src/keys.c    **** 		}
 1547              		.loc 1 2696 5 is_stmt 1 view .LVU487
2696:src/keys.c    **** 		}
 1548              		.loc 1 2696 19 is_stmt 0 view .LVU488
 1549 0030 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 1550 0032 63F3C502 		bfi	r2, r3, #3, #3
 1551 0036 2275     		strb	r2, [r4, #20]
 1552              	.L157:
2698:src/keys.c    **** 	}
 1553              		.loc 1 2698 3 is_stmt 1 view .LVU489
 1554              	.LVL124:
 1555              	.LBB286:
 1556              	.LBI286:
 651:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 1557              		.loc 1 651 13 view .LVU490
 1558              	.LBB287:
 652:src/keys.c    **** }
 1559              		.loc 1 652 2 view .LVU491
 652:src/keys.c    **** }
 1560              		.loc 1 652 15 is_stmt 0 view .LVU492
 1561 0038 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 1562 003a 013B     		subs	r3, r3, #1
 1563 003c 18BF     		it	ne
 1564 003e 0123     		movne	r3, #1
 1565 0040 6374     		strb	r3, [r4, #17]
 1566              	.LVL125:
 652:src/keys.c    **** }
 1567              		.loc 1 652 15 view .LVU493
 1568              	.LBE287:
 1569              	.LBE286:
 1570              		.loc 1 2700 1 view .LVU494
 1571 0042 38BD     		pop	{r3, r4, r5, pc}
 1572              	.LVL126:
 1573              	.L165:
2691:src/keys.c    **** 					State2.window++;
 1574              		.loc 1 2691 5 is_stmt 1 view .LVU495
2691:src/keys.c    **** 					State2.window++;
 1575              		.loc 1 2691 22 is_stmt 0 view .LVU496
 1576 0044 134A     		ldr	r2, .L166+8
2691:src/keys.c    **** 					State2.window++;
 1577              		.loc 1 2691 42 view .LVU497
 1578 0046 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
2691:src/keys.c    **** 					State2.window++;
ARM GAS  /tmp/cccKVeLo.s 			page 83


 1579              		.loc 1 2691 8 view .LVU498
 1580 0048 1168     		ldr	r1, [r2]
2691:src/keys.c    **** 					State2.window++;
 1581              		.loc 1 2691 42 view .LVU499
 1582 004a C3F3C202 		ubfx	r2, r3, #3, #3
2691:src/keys.c    **** 					State2.window++;
 1583              		.loc 1 2691 8 view .LVU500
 1584 004e 8A42     		cmp	r2, r1
 1585 0050 DBDA     		bge	.L151
2692:src/keys.c    **** 				return;
 1586              		.loc 1 2692 6 is_stmt 1 view .LVU501
2692:src/keys.c    **** 				return;
 1587              		.loc 1 2692 19 is_stmt 0 view .LVU502
 1588 0052 0132     		adds	r2, r2, #1
 1589 0054 62F3C503 		bfi	r3, r2, #3, #3
 1590 0058 2375     		strb	r3, [r4, #20]
 1591              		.loc 1 2700 1 view .LVU503
 1592 005a 38BD     		pop	{r3, r4, r5, pc}
 1593              	.LVL127:
 1594              	.L164:
2681:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1595              		.loc 1 2681 4 is_stmt 1 view .LVU504
2681:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1596              		.loc 1 2681 7 is_stmt 0 view .LVU505
 1597 005c DB07     		lsls	r3, r3, #31
 1598 005e 0ED5     		bpl	.L155
 1599              	.LBB288:
 1600              	.LBI288:
2673:src/keys.c    **** 
 1601              		.loc 1 2673 13 is_stmt 1 view .LVU506
 1602              	.LVL128:
 1603              	.LBB289:
2682:src/keys.c    **** 					State2.window--;
 1604              		.loc 1 2682 5 view .LVU507
2682:src/keys.c    **** 					State2.window--;
 1605              		.loc 1 2682 22 is_stmt 0 view .LVU508
 1606 0060 0C4B     		ldr	r3, .L166+8
2682:src/keys.c    **** 					State2.window--;
 1607              		.loc 1 2682 8 view .LVU509
 1608 0062 1B68     		ldr	r3, [r3]
 1609 0064 002B     		cmp	r3, #0
 1610 0066 D0DD     		ble	.L151
2682:src/keys.c    **** 					State2.window--;
 1611              		.loc 1 2682 43 view .LVU510
 1612 0068 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
2682:src/keys.c    **** 					State2.window--;
 1613              		.loc 1 2682 26 view .LVU511
 1614 006a 13F0380F 		tst	r3, #56
 1615 006e CCD0     		beq	.L151
2683:src/keys.c    **** 				return;
 1616              		.loc 1 2683 6 is_stmt 1 view .LVU512
2683:src/keys.c    **** 				return;
 1617              		.loc 1 2683 12 is_stmt 0 view .LVU513
 1618 0070 C3F3C202 		ubfx	r2, r3, #3, #3
2683:src/keys.c    **** 				return;
 1619              		.loc 1 2683 19 view .LVU514
 1620 0074 0732     		adds	r2, r2, #7
ARM GAS  /tmp/cccKVeLo.s 			page 84


 1621 0076 62F3C503 		bfi	r3, r2, #3, #3
 1622 007a 2375     		strb	r3, [r4, #20]
 1623              	.LBE289:
 1624              	.LBE288:
 1625              		.loc 1 2700 1 view .LVU515
 1626 007c 38BD     		pop	{r3, r4, r5, pc}
 1627              	.LVL129:
 1628              	.L155:
2687:src/keys.c    **** 		}
 1629              		.loc 1 2687 5 is_stmt 1 view .LVU516
2687:src/keys.c    **** 		}
 1630              		.loc 1 2687 21 is_stmt 0 view .LVU517
 1631 007e FFF7FEFF 		bl	is_dblmode
 1632              	.LVL130:
2687:src/keys.c    **** 		}
 1633              		.loc 1 2687 19 view .LVU518
 1634 0082 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 1635 0084 60F3C503 		bfi	r3, r0, #3, #3
 1636 0088 2375     		strb	r3, [r4, #20]
 1637 008a D5E7     		b	.L157
 1638              	.L167:
 1639              		.align	2
 1640              	.L166:
 1641 008c 00000000 		.word	StateWhileOn
 1642 0090 00000000 		.word	main_ram
 1643 0094 00000000 		.word	IntMaxWindow
 1644              		.cfi_endproc
 1645              	.LFE53:
 1647              		.section	.text.arg_storcl,"ax",%progbits
 1648              		.align	1
 1649              		.p2align 2,,3
 1650              		.syntax unified
 1651              		.thumb
 1652              		.thumb_func
 1653              		.fpu fpv4-sp-d16
 1655              	arg_storcl:
 1656              	.LVL131:
 1657              	.LFB34:
1634:src/keys.c    **** 	unsigned int b = CmdBase;
 1658              		.loc 1 1634 56 is_stmt 1 view -0
 1659              		.cfi_startproc
 1660              		@ args = 0, pretend = 0, frame = 0
 1661              		@ frame_needed = 0, uses_anonymous_args = 0
 1662              		@ link register save eliminated.
1635:src/keys.c    **** 
 1663              		.loc 1 1635 2 view .LVU520
1635:src/keys.c    **** 
 1664              		.loc 1 1635 19 is_stmt 0 view .LVU521
 1665 0000 0F4A     		ldr	r2, .L200
 1666 0002 D37F     		ldrb	r3, [r2, #31]	@ zero_extendqisi2
 1667              	.LVL132:
1637:src/keys.c    **** 		CmdBase += n;
 1668              		.loc 1 1637 2 is_stmt 1 view .LVU522
 1669              	.LBB298:
 1670              	.LBI298:
1625:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1671              		.loc 1 1625 12 view .LVU523
ARM GAS  /tmp/cccKVeLo.s 			page 85


 1672              	.LBB299:
1630:src/keys.c    **** #endif
 1673              		.loc 1 1630 2 view .LVU524
1630:src/keys.c    **** #endif
 1674              		.loc 1 1630 41 is_stmt 0 view .LVU525
 1675 0004 032B     		cmp	r3, #3
 1676 0006 14D0     		beq	.L169
1630:src/keys.c    **** #endif
 1677              		.loc 1 1630 24 view .LVU526
 1678 0008 0A2B     		cmp	r3, #10
 1679 000a 12D0     		beq	.L169
 1680              	.LVL133:
 1681              	.LBB300:
 1682              	.LBI300:
1625:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1683              		.loc 1 1625 12 is_stmt 1 view .LVU527
 1684              	.LBB301:
1630:src/keys.c    **** #endif
 1685              		.loc 1 1630 41 is_stmt 0 view .LVU528
 1686 000c 19B1     		cbz	r1, .L170
1630:src/keys.c    **** #endif
 1687              		.loc 1 1630 51 view .LVU529
 1688 000e 152B     		cmp	r3, #21
 1689 0010 0FD0     		beq	.L169
1630:src/keys.c    **** #endif
 1690              		.loc 1 1630 70 view .LVU530
 1691 0012 1A2B     		cmp	r3, #26
 1692 0014 0DD0     		beq	.L169
 1693              	.L170:
 1694              	.LVL134:
1630:src/keys.c    **** #endif
 1695              		.loc 1 1630 70 view .LVU531
 1696              	.LBE301:
 1697              	.LBE300:
 1698              	.LBE299:
 1699              	.LBE298:
1642:src/keys.c    **** 		b -= n;
 1700              		.loc 1 1642 2 is_stmt 1 view .LVU532
1642:src/keys.c    **** 		b -= n;
 1701              		.loc 1 1642 5 is_stmt 0 view .LVU533
 1702 0016 8342     		cmp	r3, r0
 1703 0018 09D3     		bcc	.L175
1643:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 1704              		.loc 1 1643 3 is_stmt 1 view .LVU534
1643:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 1705              		.loc 1 1643 5 is_stmt 0 view .LVU535
 1706 001a 1B1A     		subs	r3, r3, r0
 1707              	.LVL135:
1644:src/keys.c    **** 			CmdBase = b;
 1708              		.loc 1 1644 3 is_stmt 1 view .LVU536
 1709              	.LBB302:
 1710              	.LBI302:
1625:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1711              		.loc 1 1625 12 view .LVU537
 1712              	.LBB303:
1630:src/keys.c    **** #endif
 1713              		.loc 1 1630 2 view .LVU538
ARM GAS  /tmp/cccKVeLo.s 			page 86


1630:src/keys.c    **** #endif
 1714              		.loc 1 1630 41 is_stmt 0 view .LVU539
 1715 001c 032B     		cmp	r3, #3
 1716 001e 0CD0     		beq	.L173
1630:src/keys.c    **** #endif
 1717              		.loc 1 1630 24 view .LVU540
 1718 0020 0A2B     		cmp	r3, #10
 1719 0022 0AD0     		beq	.L173
 1720              	.LVL136:
 1721              	.LBB304:
 1722              	.LBI304:
1625:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1723              		.loc 1 1625 12 is_stmt 1 view .LVU541
 1724              	.LBB305:
1630:src/keys.c    **** #endif
 1725              		.loc 1 1630 41 is_stmt 0 view .LVU542
 1726 0024 19B1     		cbz	r1, .L175
1630:src/keys.c    **** #endif
 1727              		.loc 1 1630 51 view .LVU543
 1728 0026 152B     		cmp	r3, #21
 1729 0028 07D0     		beq	.L173
1630:src/keys.c    **** #endif
 1730              		.loc 1 1630 70 view .LVU544
 1731 002a 1A2B     		cmp	r3, #26
 1732 002c 05D0     		beq	.L173
 1733              	.LVL137:
 1734              	.L175:
1630:src/keys.c    **** #endif
 1735              		.loc 1 1630 70 view .LVU545
 1736              	.LBE305:
 1737              	.LBE304:
 1738              	.LBE303:
 1739              	.LBE302:
1649:src/keys.c    **** }
 1740              		.loc 1 1649 9 view .LVU546
 1741 002e 0020     		movs	r0, #0
 1742              	.LVL138:
1650:src/keys.c    **** 
 1743              		.loc 1 1650 1 view .LVU547
 1744 0030 7047     		bx	lr
 1745              	.LVL139:
 1746              	.L169:
1638:src/keys.c    **** 		return 1;
 1747              		.loc 1 1638 3 is_stmt 1 view .LVU548
1638:src/keys.c    **** 		return 1;
 1748              		.loc 1 1638 11 is_stmt 0 view .LVU549
 1749 0032 1844     		add	r0, r0, r3
 1750              	.LVL140:
1638:src/keys.c    **** 		return 1;
 1751              		.loc 1 1638 11 view .LVU550
 1752 0034 D077     		strb	r0, [r2, #31]
1639:src/keys.c    **** 	}
 1753              		.loc 1 1639 3 is_stmt 1 view .LVU551
1639:src/keys.c    **** 	}
 1754              		.loc 1 1639 10 is_stmt 0 view .LVU552
 1755 0036 0120     		movs	r0, #1
 1756 0038 7047     		bx	lr
ARM GAS  /tmp/cccKVeLo.s 			page 87


 1757              	.LVL141:
 1758              	.L173:
1645:src/keys.c    **** 			return 1;
 1759              		.loc 1 1645 4 is_stmt 1 view .LVU553
1645:src/keys.c    **** 			return 1;
 1760              		.loc 1 1645 12 is_stmt 0 view .LVU554
 1761 003a D377     		strb	r3, [r2, #31]
1646:src/keys.c    **** 		}
 1762              		.loc 1 1646 4 is_stmt 1 view .LVU555
1646:src/keys.c    **** 		}
 1763              		.loc 1 1646 11 is_stmt 0 view .LVU556
 1764 003c 0120     		movs	r0, #1
 1765              	.LVL142:
1646:src/keys.c    **** 		}
 1766              		.loc 1 1646 11 view .LVU557
 1767 003e 7047     		bx	lr
 1768              	.L201:
 1769              		.align	2
 1770              	.L200:
 1771 0040 00000000 		.word	StateWhileOn
 1772              		.cfi_endproc
 1773              	.LFE34:
 1775              		.section	.text.process_arg,"ax",%progbits
 1776              		.align	1
 1777              		.p2align 2,,3
 1778              		.syntax unified
 1779              		.thumb
 1780              		.thumb_func
 1781              		.fpu fpv4-sp-d16
 1783              	process_arg:
 1784              	.LVL143:
 1785              	.LFB37:
1684:src/keys.c    **** 	unsigned int base = CmdBase;
 1786              		.loc 1 1684 41 is_stmt 1 view -0
 1787              		.cfi_startproc
 1788              		@ args = 0, pretend = 0, frame = 8
 1789              		@ frame_needed = 0, uses_anonymous_args = 0
1685:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1790              		.loc 1 1685 2 view .LVU559
1684:src/keys.c    **** 	unsigned int base = CmdBase;
 1791              		.loc 1 1684 41 is_stmt 0 view .LVU560
 1792 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1793              		.cfi_def_cfa_offset 36
 1794              		.cfi_offset 4, -36
 1795              		.cfi_offset 5, -32
 1796              		.cfi_offset 6, -28
 1797              		.cfi_offset 7, -24
 1798              		.cfi_offset 8, -20
 1799              		.cfi_offset 9, -16
 1800              		.cfi_offset 10, -12
 1801              		.cfi_offset 11, -8
 1802              		.cfi_offset 14, -4
1685:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1803              		.loc 1 1685 22 view .LVU561
 1804 0004 A94D     		ldr	r5, .L317
1687:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1805              		.loc 1 1687 31 view .LVU562
ARM GAS  /tmp/cccKVeLo.s 			page 88


 1806 0006 DFF8B4B2 		ldr	fp, .L317+16
1685:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1807              		.loc 1 1685 22 view .LVU563
 1808 000a EF7F     		ldrb	r7, [r5, #31]	@ zero_extendqisi2
 1809              	.LVL144:
1686:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
 1810              		.loc 1 1686 2 is_stmt 1 view .LVU564
 1811              	.LBB327:
 1812              	.LBB328:
 1813              	.LBB329:
 1814              	.LBB330:
 133:src/keys.c    **** }
 1815              		.loc 1 133 23 is_stmt 0 view .LVU565
 1816 000c A84B     		ldr	r3, .L317+4
 1817              	.LBE330:
 1818              	.LBE329:
 224:src/keys.c    **** }
 1819              		.loc 1 224 28 view .LVU566
 1820 000e A94A     		ldr	r2, .L317+8
 1821              	.LBB333:
 1822              	.LBB331:
 133:src/keys.c    **** }
 1823              		.loc 1 133 23 view .LVU567
 1824 0010 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 1825              	.LBE331:
 1826              	.LBE333:
 1827              	.LBE328:
 1828              	.LBE327:
1687:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1829              		.loc 1 1687 31 view .LVU568
 1830 0012 0BEB0711 		add	r1, fp, r7, lsl #4
 1831              	.LBB337:
 1832              	.LBB335:
 224:src/keys.c    **** }
 1833              		.loc 1 224 28 view .LVU569
 1834 0016 12F80390 		ldrb	r9, [r2, r3]	@ zero_extendqisi2
 1835              	.LBE335:
 1836              	.LBE337:
1687:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1837              		.loc 1 1687 31 view .LVU570
 1838 001a 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
1684:src/keys.c    **** 	unsigned int base = CmdBase;
 1839              		.loc 1 1684 41 view .LVU571
 1840 001c 83B0     		sub	sp, sp, #12
 1841              		.cfi_def_cfa_offset 48
1687:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1842              		.loc 1 1687 40 view .LVU572
 1843 001e 4A07     		lsls	r2, r1, #29
 1844 0020 58BF     		it	pl
 1845 0022 95F91580 		ldrsbpl	r8, [r5, #21]
1687:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1846              		.loc 1 1687 31 view .LVU573
 1847 0026 C1F38003 		ubfx	r3, r1, #2, #1
 1848 002a 0193     		str	r3, [sp, #4]
1688:src/keys.c    **** 	const enum shifts shift = reset_shift();
 1849              		.loc 1 1688 20 view .LVU574
 1850 002c 2B7C     		ldrb	r3, [r5, #16]	@ zero_extendqisi2
ARM GAS  /tmp/cccKVeLo.s 			page 89


 1851 002e 0093     		str	r3, [sp]
1687:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1852              		.loc 1 1687 40 view .LVU575
 1853 0030 54BF     		ite	pl
 1854 0032 4FEAD878 		lsrpl	r8, r8, #31
 1855 0036 4FF00108 		movmi	r8, #1
1684:src/keys.c    **** 	unsigned int base = CmdBase;
 1856              		.loc 1 1684 41 view .LVU576
 1857 003a 0646     		mov	r6, r0
 1858              	.LVL145:
 1859              	.LBB338:
 1860              	.LBI327:
 200:src/keys.c    **** {
 1861              		.loc 1 200 14 is_stmt 1 view .LVU577
 1862              	.LBB336:
 202:src/keys.c    ****     // K00 - K05
 1863              		.loc 1 202 3 view .LVU578
 224:src/keys.c    **** }
 1864              		.loc 1 224 3 view .LVU579
 1865              	.LBB334:
 1866              	.LBI329:
 121:src/keys.c    **** {
 1867              		.loc 1 121 12 view .LVU580
 1868              	.LBB332:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 1869              		.loc 1 123 2 view .LVU581
 133:src/keys.c    **** }
 1870              		.loc 1 133 2 view .LVU582
 133:src/keys.c    **** }
 1871              		.loc 1 133 2 is_stmt 0 view .LVU583
 1872              	.LBE332:
 1873              	.LBE334:
 224:src/keys.c    **** }
 1874              		.loc 1 224 10 view .LVU584
 1875 003c 4C46     		mov	r4, r9
 1876              	.LVL146:
 224:src/keys.c    **** }
 1877              		.loc 1 224 10 view .LVU585
 1878              	.LBE336:
 1879              	.LBE338:
1687:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1880              		.loc 1 1687 2 is_stmt 1 view .LVU586
1688:src/keys.c    **** 	const enum shifts shift = reset_shift();
 1881              		.loc 1 1688 2 view .LVU587
1689:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
 1882              		.loc 1 1689 2 view .LVU588
 1883              	.LBB339:
 1884              	.LBI339:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 1885              		.loc 1 104 13 view .LVU589
 1886              	.LBE339:
 105:src/keys.c    **** }
 1887              		.loc 1 105 2 view .LVU590
 1888              	.LBB352:
 1889              	.LBB340:
 1890              	.LBI340:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
ARM GAS  /tmp/cccKVeLo.s 			page 90


 1891              		.loc 1 94 20 view .LVU591
 1892              	.LBB341:
  95:src/keys.c    **** 	State2.shifts = shift;
 1893              		.loc 1 95 2 view .LVU592
 1894              	.LBB342:
 1895              	.LBI342:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 1896              		.loc 1 86 13 view .LVU593
 1897              	.LBB343:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1898              		.loc 1 87 2 view .LVU594
 1899              	.LBE343:
 1900              	.LBE342:
 1901              	.LBE341:
 1902              	.LBE340:
 1903              	.LBE352:
1687:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1904              		.loc 1 1687 31 is_stmt 0 view .LVU595
 1905 003e 4FEA071A 		lsl	r10, r7, #4
 1906              	.LBB353:
 1907              	.LBB349:
 1908              	.LBB346:
 1909              	.LBB345:
 1910              	.LBB344:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1911              		.loc 1 87 18 view .LVU596
 1912 0042 FFF7FEFF 		bl	shift_down
 1913              	.LVL147:
  88:src/keys.c    **** }
 1914              		.loc 1 88 2 is_stmt 1 view .LVU597
  88:src/keys.c    **** }
 1915              		.loc 1 88 52 is_stmt 0 view .LVU598
 1916 0046 00B9     		cbnz	r0, .L204
 1917 0048 287C     		ldrb	r0, [r5, #16]	@ zero_extendqisi2
 1918              	.LVL148:
 1919              	.L204:
  88:src/keys.c    **** }
 1920              		.loc 1 88 52 view .LVU599
 1921              	.LBE344:
 1922              	.LBE345:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1923              		.loc 1 96 2 is_stmt 1 view .LVU600
 1924              	.LBE346:
 1925              	.LBE349:
 1926              	.LBE353:
1690:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1927              		.loc 1 1690 38 is_stmt 0 view .LVU601
 1928 004a 0BEB0A01 		add	r1, fp, r10
 1929              	.LBB354:
 1930              	.LBB350:
 1931              	.LBB347:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1932              		.loc 1 96 16 view .LVU602
 1933 004e 4FF0000C 		mov	ip, #0
 1934              	.LBE347:
 1935              	.LBE350:
 1936              	.LBE354:
ARM GAS  /tmp/cccKVeLo.s 			page 91


1690:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1937              		.loc 1 1690 38 view .LVU603
 1938 0052 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 1939              	.LBB355:
 1940              	.LBB351:
 1941              	.LBB348:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1942              		.loc 1 96 16 view .LVU604
 1943 0054 85F810C0 		strb	ip, [r5, #16]
  98:src/keys.c    **** }
 1944              		.loc 1 98 2 is_stmt 1 view .LVU605
 1945              	.LVL149:
  98:src/keys.c    **** }
 1946              		.loc 1 98 2 is_stmt 0 view .LVU606
 1947              	.LBE348:
 1948              	.LBE351:
 1949              	.LBE355:
1690:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1950              		.loc 1 1690 2 is_stmt 1 view .LVU607
1690:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1951              		.loc 1 1690 61 is_stmt 0 view .LVU608
 1952 0058 8B06     		lsls	r3, r1, #26
1690:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1953              		.loc 1 1690 38 view .LVU609
 1954 005a C1F3401E 		ubfx	lr, r1, #5, #1
1690:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1955              		.loc 1 1690 61 view .LVU610
 1956 005e 46D5     		bpl	.L205
1690:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1957              		.loc 1 1690 61 discriminator 1 view .LVU611
 1958 0060 697D     		ldrb	r1, [r5, #21]	@ zero_extendqisi2
 1959 0062 11F0C00F 		tst	r1, #192
 1960 0066 57D1     		bne	.L206
 1961              	.LVL150:
1691:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 1962              		.loc 1 1691 2 is_stmt 1 view .LVU612
1691:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 1963              		.loc 1 1691 35 is_stmt 0 view .LVU613
 1964 0068 292E     		cmp	r6, #41
 1965 006a 7DD0     		beq	.L207
1692:src/keys.c    **** 
 1966              		.loc 1 1692 11 view .LVU614
 1967 006c 0128     		cmp	r0, #1
 1968 006e 00F09280 		beq	.L208
1692:src/keys.c    **** 
 1969              		.loc 1 1692 32 discriminator 3 view .LVU615
 1970 0072 B9F1090F 		cmp	r9, #9
 1971 0076 00F28B80 		bhi	.L209
 1972              	.LVL151:
1694:src/keys.c    **** 	if (base >= NUM_RARG) {
 1973              		.loc 1 1694 2 is_stmt 1 view .LVU616
1695:src/keys.c    **** 		reset_arg();
 1974              		.loc 1 1695 2 view .LVU617
1695:src/keys.c    **** 		reset_arg();
 1975              		.loc 1 1695 5 is_stmt 0 view .LVU618
 1976 007a 8C2F     		cmp	r7, #140
 1977 007c 50D8     		bhi	.L266
ARM GAS  /tmp/cccKVeLo.s 			page 92


1700:src/keys.c    **** 	  switch (n) {
 1978              		.loc 1 1700 35 view .LVU619
 1979 007e 6969     		ldr	r1, [r5, #20]
 1980 0080 11F4103F 		tst	r1, #147456
1690:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1981              		.loc 1 1690 61 view .LVU620
 1982 0084 4FF0010C 		mov	ip, #1
1700:src/keys.c    **** 	  switch (n) {
 1983              		.loc 1 1700 35 view .LVU621
 1984 0088 7BD0     		beq	.L270
 1985              	.LVL152:
 1986              	.L217:
1723:src/keys.c    **** 		// row column shorthand addressing
 1987              		.loc 1 1723 2 is_stmt 1 view .LVU622
1748:src/keys.c    **** 	case K_F:
 1988              		.loc 1 1748 2 view .LVU623
 1989 008a 2D2E     		cmp	r6, #45
 1990 008c 4AD8     		bhi	.L304
 1991 008e DFE816F0 		tbh	[pc, r6, lsl #1]
 1992              	.L268:
 1993 0092 4D00     		.2byte	(.L232-.L268)/2
 1994 0094 4D00     		.2byte	(.L232-.L268)/2
 1995 0096 4D00     		.2byte	(.L232-.L268)/2
 1996 0098 4D00     		.2byte	(.L232-.L268)/2
 1997 009a 4900     		.2byte	(.L304-.L268)/2
 1998 009c 4900     		.2byte	(.L304-.L268)/2
 1999 009e 4900     		.2byte	(.L304-.L268)/2
 2000 00a0 4900     		.2byte	(.L304-.L268)/2
 2001 00a2 4D00     		.2byte	(.L232-.L268)/2
 2002 00a4 4D00     		.2byte	(.L232-.L268)/2
 2003 00a6 4D00     		.2byte	(.L232-.L268)/2
 2004 00a8 4D00     		.2byte	(.L232-.L268)/2
 2005 00aa D500     		.2byte	(.L255-.L268)/2
 2006 00ac 4900     		.2byte	(.L304-.L268)/2
 2007 00ae 4900     		.2byte	(.L304-.L268)/2
 2008 00b0 4900     		.2byte	(.L304-.L268)/2
 2009 00b2 6801     		.2byte	(.L262-.L268)/2
 2010 00b4 4900     		.2byte	(.L304-.L268)/2
 2011 00b6 DB00     		.2byte	(.L253-.L268)/2
 2012 00b8 4900     		.2byte	(.L304-.L268)/2
 2013 00ba 4900     		.2byte	(.L304-.L268)/2
 2014 00bc 4900     		.2byte	(.L304-.L268)/2
 2015 00be 6201     		.2byte	(.L252-.L268)/2
 2016 00c0 4900     		.2byte	(.L304-.L268)/2
 2017 00c2 5601     		.2byte	(.L254-.L268)/2
 2018 00c4 5C01     		.2byte	(.L231-.L268)/2
 2019 00c6 4900     		.2byte	(.L304-.L268)/2
 2020 00c8 4900     		.2byte	(.L304-.L268)/2
 2021 00ca 9800     		.2byte	(.L249-.L268)/2
 2022 00cc 4900     		.2byte	(.L304-.L268)/2
 2023 00ce 4900     		.2byte	(.L304-.L268)/2
 2024 00d0 4001     		.2byte	(.L233-.L268)/2
 2025 00d2 4A01     		.2byte	(.L234-.L268)/2
 2026 00d4 5001     		.2byte	(.L235-.L268)/2
 2027 00d6 E100     		.2byte	(.L246-.L268)/2
 2028 00d8 4900     		.2byte	(.L304-.L268)/2
 2029 00da 4700     		.2byte	(.L266-.L268)/2
ARM GAS  /tmp/cccKVeLo.s 			page 93


 2030 00dc 4900     		.2byte	(.L304-.L268)/2
 2031 00de ED00     		.2byte	(.L239-.L268)/2
 2032 00e0 4900     		.2byte	(.L304-.L268)/2
 2033 00e2 1701     		.2byte	(.L243-.L268)/2
 2034 00e4 B000     		.2byte	(.L225-.L268)/2
 2035 00e6 4900     		.2byte	(.L304-.L268)/2
 2036 00e8 4900     		.2byte	(.L304-.L268)/2
 2037 00ea 2601     		.2byte	(.L227-.L268)/2
 2038 00ec C600     		.2byte	(.L229-.L268)/2
 2039              	.LVL153:
 2040              		.p2align 1
 2041              	.L205:
1694:src/keys.c    **** 	if (base >= NUM_RARG) {
 2042              		.loc 1 1694 2 view .LVU624
1695:src/keys.c    **** 		reset_arg();
 2043              		.loc 1 1695 5 is_stmt 0 view .LVU625
 2044 00ee 8C2F     		cmp	r7, #140
1694:src/keys.c    **** 	if (base >= NUM_RARG) {
 2045              		.loc 1 1694 4 view .LVU626
 2046 00f0 29F08004 		bic	r4, r9, #128
 2047              	.LVL154:
1695:src/keys.c    **** 		reset_arg();
 2048              		.loc 1 1695 2 is_stmt 1 view .LVU627
1695:src/keys.c    **** 		reset_arg();
 2049              		.loc 1 1695 5 is_stmt 0 view .LVU628
 2050 00f4 14D8     		bhi	.L266
1690:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2051              		.loc 1 1690 61 view .LVU629
 2052 00f6 F446     		mov	ip, lr
 2053              	.L214:
1700:src/keys.c    **** 	  switch (n) {
 2054              		.loc 1 1700 35 discriminator 1 view .LVU630
 2055 00f8 6969     		ldr	r1, [r5, #20]
 2056 00fa 11F4103F 		tst	r1, #147456
 2057 00fe C4D1     		bne	.L217
1701:src/keys.c    **** 	  case regX_idx:
 2058              		.loc 1 1701 4 is_stmt 1 view .LVU631
 2059 0100 672C     		cmp	r4, #103
 2060 0102 C2D8     		bhi	.L217
 2061              	.LVL155:
 2062              	.L269:
1701:src/keys.c    **** 	  case regX_idx:
 2063              		.loc 1 1701 4 is_stmt 0 view .LVU632
 2064 0104 632C     		cmp	r4, #99
 2065 0106 3CD9     		bls	.L270
 2066 0108 653C     		subs	r4, r4, #101
 2067 010a 022C     		cmp	r4, #2
 2068 010c 00F2AA81 		bhi	.L220
 2069 0110 DFE804F0 		tbb	[pc, r4]
 2070              	.L222:
 2071 0114 6B       		.byte	(.L224-.L222)/2
 2072 0115 65       		.byte	(.L223-.L222)/2
 2073 0116 6D       		.byte	(.L221-.L222)/2
 2074              	.LVL156:
 2075 0117 00       		.p2align 1
 2076              	.L206:
1694:src/keys.c    **** 	if (base >= NUM_RARG) {
ARM GAS  /tmp/cccKVeLo.s 			page 94


 2077              		.loc 1 1694 2 is_stmt 1 view .LVU633
1695:src/keys.c    **** 		reset_arg();
 2078              		.loc 1 1695 5 is_stmt 0 view .LVU634
 2079 0118 8C2F     		cmp	r7, #140
1694:src/keys.c    **** 	if (base >= NUM_RARG) {
 2080              		.loc 1 1694 4 view .LVU635
 2081 011a 29F08004 		bic	r4, r9, #128
 2082              	.LVL157:
1695:src/keys.c    **** 		reset_arg();
 2083              		.loc 1 1695 2 is_stmt 1 view .LVU636
1695:src/keys.c    **** 		reset_arg();
 2084              		.loc 1 1695 5 is_stmt 0 view .LVU637
 2085 011e EBD9     		bls	.L214
 2086              	.LVL158:
 2087              	.L266:
1915:src/keys.c    **** 	default:
 2088              		.loc 1 1915 3 is_stmt 1 view .LVU638
 2089 0120 FFF7FEFF 		bl	reset_arg
 2090              	.LVL159:
 2091              	.L304:
1919:src/keys.c    **** }
 2092              		.loc 1 1919 9 is_stmt 0 view .LVU639
 2093 0124 3320     		movs	r0, #51
 2094              	.L202:
1920:src/keys.c    **** 
 2095              		.loc 1 1920 1 view .LVU640
 2096 0126 03B0     		add	sp, sp, #12
 2097              		.cfi_remember_state
 2098              		.cfi_def_cfa_offset 36
 2099              	.LVL160:
1920:src/keys.c    **** 
 2100              		.loc 1 1920 1 view .LVU641
 2101              		@ sp needed
 2102 0128 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2103              	.LVL161:
 2104              	.L232:
 2105              		.cfi_restore_state
1803:src/keys.c    **** 			return arg_eval(n);
 2106              		.loc 1 1803 4 is_stmt 1 view .LVU642
1803:src/keys.c    **** 			return arg_eval(n);
 2107              		.loc 1 1803 8 is_stmt 0 view .LVU643
 2108 012c 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
1803:src/keys.c    **** 			return arg_eval(n);
 2109              		.loc 1 1803 7 view .LVU644
 2110 012e 5F06     		lsls	r7, r3, #25
 2111              	.LVL162:
1803:src/keys.c    **** 			return arg_eval(n);
 2112              		.loc 1 1803 7 view .LVU645
 2113 0130 53D4     		bmi	.L251
1803:src/keys.c    **** 			return arg_eval(n);
 2114              		.loc 1 1803 19 discriminator 1 view .LVU646
 2115 0132 B8F1000F 		cmp	r8, #0
 2116 0136 50D1     		bne	.L251
1805:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 2117              		.loc 1 1805 3 is_stmt 1 view .LVU647
1805:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 2118              		.loc 1 1805 6 is_stmt 0 view .LVU648
ARM GAS  /tmp/cccKVeLo.s 			page 95


 2119 0138 032E     		cmp	r6, #3
 2120 013a F3D8     		bhi	.L304
1806:src/keys.c    **** 		break;
 2121              		.loc 1 1806 4 is_stmt 1 view .LVU649
 2122              	.LVL163:
 2123              	.LBB356:
 2124              	.LBI356:
1611:src/keys.c    **** 	const unsigned int b = CmdBase;
 2125              		.loc 1 1611 12 view .LVU650
 2126              	.LBB357:
1612:src/keys.c    **** 
 2127              		.loc 1 1612 2 view .LVU651
1612:src/keys.c    **** 
 2128              		.loc 1 1612 21 is_stmt 0 view .LVU652
 2129 013c EA7F     		ldrb	r2, [r5, #31]	@ zero_extendqisi2
 2130              	.LVL164:
1614:src/keys.c    **** 	{
 2131              		.loc 1 1614 2 is_stmt 1 view .LVU653
1614:src/keys.c    **** 	{
 2132              		.loc 1 1614 16 is_stmt 0 view .LVU654
 2133 013e 0BEB0210 		add	r0, fp, r2, lsl #4
 2134 0142 1101     		lsls	r1, r2, #4
 2135 0144 4079     		ldrb	r0, [r0, #5]	@ zero_extendqisi2
1614:src/keys.c    **** 	{
 2136              		.loc 1 1614 5 view .LVU655
 2137 0146 8006     		lsls	r0, r0, #26
 2138 0148 02D4     		bmi	.L238
1614:src/keys.c    **** 	{
 2139              		.loc 1 1614 40 view .LVU656
 2140 014a 513A     		subs	r2, r2, #81
 2141              	.LVL165:
1614:src/keys.c    **** 	{
 2142              		.loc 1 1614 23 view .LVU657
 2143 014c 0A2A     		cmp	r2, #10
 2144 014e E9D8     		bhi	.L304
 2145              	.LVL166:
 2146              	.L238:
1616:src/keys.c    **** 			return STATE_UNFINISHED;
 2147              		.loc 1 1616 3 is_stmt 1 view .LVU658
1616:src/keys.c    **** 			return STATE_UNFINISHED;
 2148              		.loc 1 1616 6 is_stmt 0 view .LVU659
 2149 0150 1F06     		lsls	r7, r3, #24
 2150 0152 E7D4     		bmi	.L304
1616:src/keys.c    **** 			return STATE_UNFINISHED;
 2151              		.loc 1 1616 18 view .LVU660
 2152 0154 EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 2153 0156 002B     		cmp	r3, #0
 2154 0158 E4D1     		bne	.L304
1618:src/keys.c    **** 			return STATE_UNFINISHED;
 2155              		.loc 1 1618 3 is_stmt 1 view .LVU661
1618:src/keys.c    **** 			return STATE_UNFINISHED;
 2156              		.loc 1 1618 17 is_stmt 0 view .LVU662
 2157 015a 5944     		add	r1, r1, fp
1618:src/keys.c    **** 			return STATE_UNFINISHED;
 2158              		.loc 1 1618 6 view .LVU663
 2159 015c 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 2160 015e 632B     		cmp	r3, #99
ARM GAS  /tmp/cccKVeLo.s 			page 96


 2161 0160 E0D9     		bls	.L304
1620:src/keys.c    **** 	}
 2162              		.loc 1 1620 3 is_stmt 1 view .LVU664
1620:src/keys.c    **** 	}
 2163              		.loc 1 1620 10 is_stmt 0 view .LVU665
 2164 0162 06F16400 		add	r0, r6, #100
 2165 0166 27E0     		b	.L306
 2166              	.LVL167:
 2167              	.L207:
1620:src/keys.c    **** 	}
 2168              		.loc 1 1620 10 view .LVU666
 2169              	.LBE357:
 2170              	.LBE356:
1694:src/keys.c    **** 	if (base >= NUM_RARG) {
 2171              		.loc 1 1694 2 is_stmt 1 view .LVU667
1695:src/keys.c    **** 		reset_arg();
 2172              		.loc 1 1695 2 view .LVU668
1695:src/keys.c    **** 		reset_arg();
 2173              		.loc 1 1695 5 is_stmt 0 view .LVU669
 2174 0168 8C2F     		cmp	r7, #140
 2175 016a D9D8     		bhi	.L266
1700:src/keys.c    **** 	  switch (n) {
 2176              		.loc 1 1700 35 view .LVU670
 2177 016c 6969     		ldr	r1, [r5, #20]
 2178 016e 11F4103F 		tst	r1, #147456
 2179 0172 41D1     		bne	.L226
1694:src/keys.c    **** 	if (base >= NUM_RARG) {
 2180              		.loc 1 1694 4 view .LVU671
 2181 0174 29F08004 		bic	r4, r9, #128
1701:src/keys.c    **** 	  case regX_idx:
 2182              		.loc 1 1701 4 is_stmt 1 view .LVU672
 2183 0178 672C     		cmp	r4, #103
 2184 017a 3DD8     		bhi	.L226
1690:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2185              		.loc 1 1690 61 is_stmt 0 view .LVU673
 2186 017c 4FF0010C 		mov	ip, #1
 2187 0180 C0E7     		b	.L269
 2188              	.LVL168:
 2189              	.L270:
1701:src/keys.c    **** 	  case regX_idx:
 2190              		.loc 1 1701 4 view .LVU674
 2191 0182 1CB1     		cbz	r4, .L219
 2192 0184 631F     		subs	r3, r4, #5
 2193 0186 042B     		cmp	r3, #4
 2194 0188 3FF67FAF 		bhi	.L217
 2195              	.L219:
1716:src/keys.c    **** 	  }
 2196              		.loc 1 1716 6 is_stmt 1 view .LVU675
1716:src/keys.c    **** 	  }
 2197              		.loc 1 1716 13 is_stmt 0 view .LVU676
 2198 018c 2046     		mov	r0, r4
 2199              	.LVL169:
1716:src/keys.c    **** 	  }
 2200              		.loc 1 1716 13 view .LVU677
 2201 018e 27E0     		b	.L305
 2202              	.LVL170:
 2203              	.L209:
ARM GAS  /tmp/cccKVeLo.s 			page 97


1692:src/keys.c    **** 
 2204              		.loc 1 1692 42 discriminator 4 view .LVU678
 2205 0190 19F0800F 		tst	r9, #128
 2206 0194 3CD1     		bne	.L212
 2207              	.L208:
 2208              	.LVL171:
1694:src/keys.c    **** 	if (base >= NUM_RARG) {
 2209              		.loc 1 1694 2 is_stmt 1 view .LVU679
1695:src/keys.c    **** 		reset_arg();
 2210              		.loc 1 1695 2 view .LVU680
1695:src/keys.c    **** 		reset_arg();
 2211              		.loc 1 1695 5 is_stmt 0 view .LVU681
 2212 0196 8C2F     		cmp	r7, #140
 2213 0198 C2D8     		bhi	.L266
1723:src/keys.c    **** 		// row column shorthand addressing
 2214              		.loc 1 1723 2 is_stmt 1 view .LVU682
1725:src/keys.c    **** 
 2215              		.loc 1 1725 3 view .LVU683
 2216              	.LVL172:
 2217              	.LBB358:
 2218              	.LBI358:
 169:src/keys.c    **** {
 2219              		.loc 1 169 5 view .LVU684
 2220              	.LBB359:
 171:src/keys.c    **** }
 2221              		.loc 1 171 2 view .LVU685
 171:src/keys.c    **** }
 2222              		.loc 1 171 18 is_stmt 0 view .LVU686
 2223 019a 474B     		ldr	r3, .L317+12
 2224 019c A3FB0623 		umull	r2, r3, r3, r6
 171:src/keys.c    **** }
 2225              		.loc 1 171 24 view .LVU687
 2226 01a0 03F0FC00 		and	r0, r3, #252
 2227              	.LVL173:
 171:src/keys.c    **** }
 2228              		.loc 1 171 24 view .LVU688
 2229 01a4 00EB9300 		add	r0, r0, r3, lsr #2
 171:src/keys.c    **** }
 2230              		.loc 1 171 18 view .LVU689
 2231 01a8 9B08     		lsrs	r3, r3, #2
 171:src/keys.c    **** }
 2232              		.loc 1 171 24 view .LVU690
 2233 01aa 4000     		lsls	r0, r0, #1
 171:src/keys.c    **** }
 2234              		.loc 1 171 33 view .LVU691
 2235 01ac 03EB4303 		add	r3, r3, r3, lsl #1
 171:src/keys.c    **** }
 2236              		.loc 1 171 12 view .LVU692
 2237 01b0 0B30     		adds	r0, r0, #11
 171:src/keys.c    **** }
 2238              		.loc 1 171 33 view .LVU693
 2239 01b2 A6EB4306 		sub	r6, r6, r3, lsl #1
 2240              	.LBE359:
 2241              	.LBE358:
1725:src/keys.c    **** 
 2242              		.loc 1 1725 10 view .LVU694
 2243 01b6 3044     		add	r0, r0, r6
ARM GAS  /tmp/cccKVeLo.s 			page 98


 2244              	.LVL174:
 2245              	.L306:
1920:src/keys.c    **** 
 2246              		.loc 1 1920 1 view .LVU695
 2247 01b8 03B0     		add	sp, sp, #12
 2248              		.cfi_remember_state
 2249              		.cfi_def_cfa_offset 36
 2250              	.LVL175:
1920:src/keys.c    **** 
 2251              		.loc 1 1920 1 view .LVU696
 2252              		@ sp needed
 2253 01ba BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2254              		.cfi_restore 14
 2255              		.cfi_restore 11
 2256              		.cfi_restore 10
 2257              		.cfi_restore 9
 2258              		.cfi_restore 8
 2259              		.cfi_restore 7
 2260              		.cfi_restore 6
 2261              		.cfi_restore 5
 2262              		.cfi_restore 4
 2263              		.cfi_def_cfa_offset 0
 2264              	.LVL176:
1725:src/keys.c    **** 
 2265              		.loc 1 1725 10 view .LVU697
 2266 01be FFF7FEBF 		b	arg_eval
 2267              	.LVL177:
 2268              	.L249:
 2269              		.cfi_restore_state
1825:src/keys.c    **** 			return arg_eval(n);
 2270              		.loc 1 1825 3 is_stmt 1 view .LVU698
1825:src/keys.c    **** 			return arg_eval(n);
 2271              		.loc 1 1825 7 is_stmt 0 view .LVU699
 2272 01c2 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
1825:src/keys.c    **** 			return arg_eval(n);
 2273              		.loc 1 1825 6 view .LVU700
 2274 01c4 5806     		lsls	r0, r3, #25
 2275              	.LVL178:
1825:src/keys.c    **** 			return arg_eval(n);
 2276              		.loc 1 1825 6 view .LVU701
 2277 01c6 08D4     		bmi	.L251
1825:src/keys.c    **** 			return arg_eval(n);
 2278              		.loc 1 1825 25 discriminator 1 view .LVU702
 2279 01c8 0121     		movs	r1, #1
 2280 01ca 0320     		movs	r0, #3
 2281 01cc FFF7FEFF 		bl	arg_storcl
 2282              	.LVL179:
1825:src/keys.c    **** 			return arg_eval(n);
 2283              		.loc 1 1825 18 discriminator 1 view .LVU703
 2284 01d0 0028     		cmp	r0, #0
 2285 01d2 A7D1     		bne	.L304
1825:src/keys.c    **** 			return arg_eval(n);
 2286              		.loc 1 1825 63 discriminator 2 view .LVU704
 2287 01d4 B8F1000F 		cmp	r8, #0
 2288 01d8 A4D0     		beq	.L304
 2289              	.LVL180:
 2290              	.L251:
ARM GAS  /tmp/cccKVeLo.s 			page 99


1826:src/keys.c    **** 		break;
 2291              		.loc 1 1826 4 is_stmt 1 view .LVU705
1826:src/keys.c    **** 		break;
 2292              		.loc 1 1826 11 is_stmt 0 view .LVU706
 2293 01da 2046     		mov	r0, r4
 2294 01dc ECE7     		b	.L306
 2295              	.LVL181:
 2296              	.L223:
1707:src/keys.c    **** 	  case regT_idx:
 2297              		.loc 1 1707 6 is_stmt 1 view .LVU707
1707:src/keys.c    **** 	  case regT_idx:
 2298              		.loc 1 1707 13 is_stmt 0 view .LVU708
 2299 01de 0320     		movs	r0, #3
 2300              	.LVL182:
 2301              	.L305:
1920:src/keys.c    **** 
 2302              		.loc 1 1920 1 view .LVU709
 2303 01e0 03B0     		add	sp, sp, #12
 2304              		.cfi_remember_state
 2305              		.cfi_def_cfa_offset 36
 2306              	.LVL183:
1920:src/keys.c    **** 
 2307              		.loc 1 1920 1 view .LVU710
 2308              		@ sp needed
 2309 01e2 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2310              		.cfi_restore 14
 2311              		.cfi_restore 11
 2312              		.cfi_restore 10
 2313              		.cfi_restore 9
 2314              		.cfi_restore 8
 2315              		.cfi_restore 7
 2316              		.cfi_restore 6
 2317              		.cfi_restore 5
 2318              		.cfi_restore 4
 2319              		.cfi_def_cfa_offset 0
 2320              	.LVL184:
1705:src/keys.c    **** 	  case regZ_idx:
 2321              		.loc 1 1705 13 view .LVU711
 2322 01e6 FFF7FEBF 		b	arg_digit
 2323              	.LVL185:
 2324              	.L224:
 2325              		.cfi_restore_state
1705:src/keys.c    **** 	  case regZ_idx:
 2326              		.loc 1 1705 6 is_stmt 1 view .LVU712
1705:src/keys.c    **** 	  case regZ_idx:
 2327              		.loc 1 1705 13 is_stmt 0 view .LVU713
 2328 01ea 0220     		movs	r0, #2
 2329              	.LVL186:
1705:src/keys.c    **** 	  case regZ_idx:
 2330              		.loc 1 1705 13 view .LVU714
 2331 01ec F8E7     		b	.L305
 2332              	.LVL187:
 2333              	.L221:
1709:src/keys.c    **** 	  case 5:
 2334              		.loc 1 1709 6 is_stmt 1 view .LVU715
1709:src/keys.c    **** 	  case 5:
 2335              		.loc 1 1709 13 is_stmt 0 view .LVU716
ARM GAS  /tmp/cccKVeLo.s 			page 100


 2336 01ee 0420     		movs	r0, #4
 2337              	.LVL188:
1709:src/keys.c    **** 	  case 5:
 2338              		.loc 1 1709 13 view .LVU717
 2339 01f0 F6E7     		b	.L305
 2340              	.LVL189:
 2341              	.L225:
1750:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 2342              		.loc 1 1750 3 is_stmt 1 view .LVU718
1750:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 2343              		.loc 1 1750 6 is_stmt 0 view .LVU719
 2344 01f2 BCF1000F 		cmp	ip, #0
 2345 01f6 95D0     		beq	.L304
 2346              	.L226:
1751:src/keys.c    **** 		break;
 2347              		.loc 1 1751 4 is_stmt 1 view .LVU720
 2348              	.LVL190:
 2349              	.LBB360:
 2350              	.LBI360:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 2351              		.loc 1 94 20 view .LVU721
 2352              	.LBB361:
  95:src/keys.c    **** 	State2.shifts = shift;
 2353              		.loc 1 95 2 view .LVU722
 2354              	.LBB362:
 2355              	.LBI362:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 2356              		.loc 1 86 13 view .LVU723
 2357              	.LBB363:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2358              		.loc 1 87 2 view .LVU724
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2359              		.loc 1 87 18 is_stmt 0 view .LVU725
 2360 01f8 FFF7FEFF 		bl	shift_down
 2361              	.LVL191:
  88:src/keys.c    **** }
 2362              		.loc 1 88 2 is_stmt 1 view .LVU726
 2363              	.LBE363:
 2364              	.LBE362:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2365              		.loc 1 96 2 view .LVU727
 2366              	.LBE361:
 2367              	.LBE360:
1751:src/keys.c    **** 		break;
 2368              		.loc 1 1751 4 is_stmt 0 view .LVU728
 2369 01fc 009B     		ldr	r3, [sp]
 2370 01fe B3F10109 		subs	r9, r3, #1
 2371 0202 18BF     		it	ne
 2372 0204 4FF00109 		movne	r9, #1
 2373 0208 85F81090 		strb	r9, [r5, #16]
 2374              	.LBB366:
 2375              	.LBB364:
  98:src/keys.c    **** }
 2376              		.loc 1 98 2 is_stmt 1 view .LVU729
 2377              	.LBE364:
 2378              	.LBE366:
1919:src/keys.c    **** }
ARM GAS  /tmp/cccKVeLo.s 			page 101


 2379              		.loc 1 1919 9 is_stmt 0 view .LVU730
 2380 020c 3320     		movs	r0, #51
 2381              	.LBB367:
 2382              	.LBB365:
  98:src/keys.c    **** }
 2383              		.loc 1 98 9 view .LVU731
 2384 020e 8AE7     		b	.L202
 2385              	.LVL192:
 2386              	.L212:
  98:src/keys.c    **** }
 2387              		.loc 1 98 9 view .LVU732
 2388              	.LBE365:
 2389              	.LBE367:
1694:src/keys.c    **** 	if (base >= NUM_RARG) {
 2390              		.loc 1 1694 2 is_stmt 1 view .LVU733
1695:src/keys.c    **** 		reset_arg();
 2391              		.loc 1 1695 5 is_stmt 0 view .LVU734
 2392 0210 8C2F     		cmp	r7, #140
1694:src/keys.c    **** 	if (base >= NUM_RARG) {
 2393              		.loc 1 1694 4 view .LVU735
 2394 0212 29F08004 		bic	r4, r9, #128
 2395              	.LVL193:
1695:src/keys.c    **** 		reset_arg();
 2396              		.loc 1 1695 2 is_stmt 1 view .LVU736
1695:src/keys.c    **** 		reset_arg();
 2397              		.loc 1 1695 5 is_stmt 0 view .LVU737
 2398 0216 83D8     		bhi	.L266
1690:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2399              		.loc 1 1690 61 view .LVU738
 2400 0218 4FF0010C 		mov	ip, #1
 2401 021c 6CE7     		b	.L214
 2402              	.LVL194:
 2403              	.L229:
1763:src/keys.c    **** 			break;
 2404              		.loc 1 1763 3 is_stmt 1 view .LVU739
1763:src/keys.c    **** 			break;
 2405              		.loc 1 1763 18 is_stmt 0 view .LVU740
 2406 021e 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
1763:src/keys.c    **** 			break;
 2407              		.loc 1 1763 6 view .LVU741
 2408 0220 13F0C00F 		tst	r3, #192
 2409 0224 7FF47EAF 		bne	.L304
1765:src/keys.c    **** 			CmdBase = RARG_STOM;
 2410              		.loc 1 1765 3 is_stmt 1 view .LVU742
1765:src/keys.c    **** 			CmdBase = RARG_STOM;
 2411              		.loc 1 1765 6 is_stmt 0 view .LVU743
 2412 0228 032F     		cmp	r7, #3
 2413 022a 00F0F080 		beq	.L310
1767:src/keys.c    **** 			CmdBase = RARG_RCLM;
 2414              		.loc 1 1767 8 is_stmt 1 view .LVU744
1767:src/keys.c    **** 			CmdBase = RARG_RCLM;
 2415              		.loc 1 1767 11 is_stmt 0 view .LVU745
 2416 022e 0A2F     		cmp	r7, #10
 2417 0230 7FF478AF 		bne	.L304
1768:src/keys.c    **** 		break;
 2418              		.loc 1 1768 4 is_stmt 1 view .LVU746
1768:src/keys.c    **** 		break;
ARM GAS  /tmp/cccKVeLo.s 			page 102


 2419              		.loc 1 1768 12 is_stmt 0 view .LVU747
 2420 0234 7823     		movs	r3, #120
 2421 0236 EB77     		strb	r3, [r5, #31]
1919:src/keys.c    **** }
 2422              		.loc 1 1919 9 view .LVU748
 2423 0238 3320     		movs	r0, #51
 2424              	.LVL195:
1919:src/keys.c    **** }
 2425              		.loc 1 1919 9 view .LVU749
 2426 023a 74E7     		b	.L202
 2427              	.LVL196:
 2428              	.L255:
1873:src/keys.c    **** 			if (argcmds[base].label) {
 2429              		.loc 1 1873 3 is_stmt 1 view .LVU750
1873:src/keys.c    **** 			if (argcmds[base].label) {
 2430              		.loc 1 1873 6 is_stmt 0 view .LVU751
 2431 023c EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 2432 023e 002B     		cmp	r3, #0
 2433 0240 00F0A180 		beq	.L311
1887:src/keys.c    **** 			return arg_eval(State2.digval);
 2434              		.loc 1 1887 10 is_stmt 1 view .LVU752
1888:src/keys.c    **** 		else if (stack_reg)
 2435              		.loc 1 1888 4 view .LVU753
1888:src/keys.c    **** 		else if (stack_reg)
 2436              		.loc 1 1888 11 is_stmt 0 view .LVU754
 2437 0244 2889     		ldrh	r0, [r5, #8]
 2438              	.LVL197:
1888:src/keys.c    **** 		else if (stack_reg)
 2439              		.loc 1 1888 11 view .LVU755
 2440 0246 B7E7     		b	.L306
 2441              	.LVL198:
 2442              	.L253:
1865:src/keys.c    **** 		break;
 2443              		.loc 1 1865 3 is_stmt 1 view .LVU756
 2444 0248 0021     		movs	r1, #0
 2445 024a 0620     		movs	r0, #6
 2446              	.LVL199:
1865:src/keys.c    **** 		break;
 2447              		.loc 1 1865 3 is_stmt 0 view .LVU757
 2448 024c FFF7FEFF 		bl	arg_storcl
 2449              	.LVL200:
1866:src/keys.c    **** 
 2450              		.loc 1 1866 3 is_stmt 1 view .LVU758
1919:src/keys.c    **** }
 2451              		.loc 1 1919 9 is_stmt 0 view .LVU759
 2452 0250 3320     		movs	r0, #51
1866:src/keys.c    **** 
 2453              		.loc 1 1866 3 view .LVU760
 2454 0252 68E7     		b	.L202
 2455              	.LVL201:
 2456              	.L246:
1818:src/keys.c    **** 			reset_arg();
 2457              		.loc 1 1818 3 is_stmt 1 view .LVU761
1818:src/keys.c    **** 			reset_arg();
 2458              		.loc 1 1818 6 is_stmt 0 view .LVU762
 2459 0254 212F     		cmp	r7, #33
 2460 0256 00F0C780 		beq	.L247
ARM GAS  /tmp/cccKVeLo.s 			page 103


1818:src/keys.c    **** 			reset_arg();
 2461              		.loc 1 1818 25 discriminator 1 view .LVU763
 2462 025a 732F     		cmp	r7, #115
 2463 025c 00F0C480 		beq	.L247
1822:src/keys.c    **** 		break;
 2464              		.loc 1 1822 3 is_stmt 1 view .LVU764
 2465 0260 0121     		movs	r1, #1
 2466 0262 0220     		movs	r0, #2
 2467              	.LVL202:
1822:src/keys.c    **** 		break;
 2468              		.loc 1 1822 3 is_stmt 0 view .LVU765
 2469 0264 FFF7FEFF 		bl	arg_storcl
 2470              	.LVL203:
1823:src/keys.c    **** 	case K44:		// multiply
 2471              		.loc 1 1823 3 is_stmt 1 view .LVU766
1919:src/keys.c    **** }
 2472              		.loc 1 1919 9 is_stmt 0 view .LVU767
 2473 0268 3320     		movs	r0, #51
1823:src/keys.c    **** 	case K44:		// multiply
 2474              		.loc 1 1823 3 view .LVU768
 2475 026a 5CE7     		b	.L202
 2476              	.LVL204:
 2477              	.L239:
1810:src/keys.c    **** 
 2478              		.loc 1 1810 3 is_stmt 1 view .LVU769
 2479              	.LBB368:
 2480              	.LBI368:
1652:src/keys.c    **** 
 2481              		.loc 1 1652 12 view .LVU770
 2482              	.LBB369:
1654:src/keys.c    **** 		// Only valid at beginning of entry
 2483              		.loc 1 1654 2 view .LVU771
1654:src/keys.c    **** 		// Only valid at beginning of entry
 2484              		.loc 1 1654 5 is_stmt 0 view .LVU772
 2485 026c EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 2486 026e 002B     		cmp	r3, #0
 2487 0270 7FF458AF 		bne	.L304
1656:src/keys.c    **** 			// '..' or ENTER '.' = X
 2488              		.loc 1 1656 3 is_stmt 1 view .LVU773
1656:src/keys.c    **** 			// '..' or ENTER '.' = X
 2489              		.loc 1 1656 6 is_stmt 0 view .LVU774
 2490 0274 11F4A03F 		tst	r1, #81920
 2491 0278 40F0CD80 		bne	.L312
1661:src/keys.c    **** 			// local register or flag select
 2492              		.loc 1 1661 3 is_stmt 1 view .LVU775
1661:src/keys.c    **** 			// local register or flag select
 2493              		.loc 1 1661 20 is_stmt 0 view .LVU776
 2494 027c 0BEB0A02 		add	r2, fp, r10
 2495 0280 5379     		ldrb	r3, [r2, #5]	@ zero_extendqisi2
1661:src/keys.c    **** 			// local register or flag select
 2496              		.loc 1 1661 6 view .LVU777
 2497 0282 1E07     		lsls	r6, r3, #28
 2498 0284 00F1B580 		bmi	.L241
1661:src/keys.c    **** 			// local register or flag select
 2499              		.loc 1 1661 27 view .LVU778
 2500 0288 95F91530 		ldrsb	r3, [r5, #21]
 2501 028c 002B     		cmp	r3, #0
ARM GAS  /tmp/cccKVeLo.s 			page 104


 2502 028e C0F2B080 		blt	.L241
1665:src/keys.c    **** 			// Special GTO . sequence
 2503              		.loc 1 1665 8 is_stmt 1 view .LVU779
1665:src/keys.c    **** 			// Special GTO . sequence
 2504              		.loc 1 1665 29 is_stmt 0 view .LVU780
 2505 0292 443F     		subs	r7, r7, #68
 2506              	.LVL205:
1665:src/keys.c    **** 			// Special GTO . sequence
 2507              		.loc 1 1665 11 view .LVU781
 2508 0294 012F     		cmp	r7, #1
 2509 0296 3FF645AF 		bhi	.L304
1667:src/keys.c    **** 				State2.gtodot = 1;
 2510              		.loc 1 1667 4 is_stmt 1 view .LVU782
1668:src/keys.c    **** 				reset_arg();
 2511              		.loc 1 1668 5 view .LVU783
1668:src/keys.c    **** 				reset_arg();
 2512              		.loc 1 1668 19 is_stmt 0 view .LVU784
 2513 029a 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
 2514 029c 43F00103 		orr	r3, r3, #1
 2515 02a0 6B75     		strb	r3, [r5, #21]
1669:src/keys.c    **** 			}
 2516              		.loc 1 1669 5 is_stmt 1 view .LVU785
 2517 02a2 FFF7FEFF 		bl	reset_arg
 2518              	.LVL206:
1673:src/keys.c    **** }
 2519              		.loc 1 1673 9 is_stmt 0 view .LVU786
 2520 02a6 3320     		movs	r0, #51
 2521 02a8 3DE7     		b	.L202
 2522              	.L318:
 2523 02aa 00BF     		.align	2
 2524              	.L317:
 2525 02ac 00000000 		.word	StateWhileOn
 2526 02b0 00000000 		.word	.LANCHOR1
 2527 02b4 00000000 		.word	.LANCHOR0
 2528 02b8 ABAAAAAA 		.word	-1431655765
 2529 02bc 00000000 		.word	argcmds
 2530              	.LVL207:
 2531              	.L243:
1673:src/keys.c    **** }
 2532              		.loc 1 1673 9 view .LVU787
 2533              	.LBE369:
 2534              	.LBE368:
1814:src/keys.c    **** 			return arg_eval(n);
 2535              		.loc 1 1814 3 is_stmt 1 view .LVU788
1814:src/keys.c    **** 			return arg_eval(n);
 2536              		.loc 1 1814 7 is_stmt 0 view .LVU789
 2537 02c0 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
1814:src/keys.c    **** 			return arg_eval(n);
 2538              		.loc 1 1814 6 view .LVU790
 2539 02c2 5D06     		lsls	r5, r3, #25
 2540 02c4 89D4     		bmi	.L251
1814:src/keys.c    **** 			return arg_eval(n);
 2541              		.loc 1 1814 25 discriminator 1 view .LVU791
 2542 02c6 0121     		movs	r1, #1
 2543 02c8 0846     		mov	r0, r1
 2544              	.LVL208:
1814:src/keys.c    **** 			return arg_eval(n);
ARM GAS  /tmp/cccKVeLo.s 			page 105


 2545              		.loc 1 1814 25 discriminator 1 view .LVU792
 2546 02ca FFF7FEFF 		bl	arg_storcl
 2547              	.LVL209:
1814:src/keys.c    **** 			return arg_eval(n);
 2548              		.loc 1 1814 18 discriminator 1 view .LVU793
 2549 02ce 0028     		cmp	r0, #0
 2550 02d0 7FF428AF 		bne	.L304
1825:src/keys.c    **** 			return arg_eval(n);
 2551              		.loc 1 1825 63 view .LVU794
 2552 02d4 B8F1000F 		cmp	r8, #0
 2553 02d8 3FF424AF 		beq	.L304
 2554 02dc 7DE7     		b	.L251
 2555              	.LVL210:
 2556              	.L227:
1755:src/keys.c    **** 			State2.ind = ! State2.ind;
 2557              		.loc 1 1755 3 is_stmt 1 view .LVU795
1755:src/keys.c    **** 			State2.ind = ! State2.ind;
 2558              		.loc 1 1755 7 is_stmt 0 view .LVU796
 2559 02de 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
1755:src/keys.c    **** 			State2.ind = ! State2.ind;
 2560              		.loc 1 1755 6 view .LVU797
 2561 02e0 5E06     		lsls	r6, r3, #25
 2562 02e2 3FF51FAF 		bmi	.L304
1755:src/keys.c    **** 			State2.ind = ! State2.ind;
 2563              		.loc 1 1755 35 discriminator 1 view .LVU798
 2564 02e6 D344     		add	fp, fp, r10
 2565 02e8 9BF80520 		ldrb	r2, [fp, #5]	@ zero_extendqisi2
1755:src/keys.c    **** 			State2.ind = ! State2.ind;
 2566              		.loc 1 1755 19 discriminator 1 view .LVU799
 2567 02ec D407     		lsls	r4, r2, #31
 2568 02ee 7FF519AF 		bpl	.L304
1756:src/keys.c    **** 			if (! stack_reg)
 2569              		.loc 1 1756 4 is_stmt 1 view .LVU800
1756:src/keys.c    **** 			if (! stack_reg)
 2570              		.loc 1 1756 17 is_stmt 0 view .LVU801
 2571 02f2 DA43     		mvns	r2, r3
 2572 02f4 C2F3C012 		ubfx	r2, r2, #7, #1
1756:src/keys.c    **** 			if (! stack_reg)
 2573              		.loc 1 1756 15 view .LVU802
 2574 02f8 62F3C713 		bfi	r3, r2, #7, #1
 2575 02fc 6B75     		strb	r3, [r5, #21]
1757:src/keys.c    **** 				State2.dot = 0;
 2576              		.loc 1 1757 4 is_stmt 1 view .LVU803
1757:src/keys.c    **** 				State2.dot = 0;
 2577              		.loc 1 1757 7 is_stmt 0 view .LVU804
 2578 02fe B8F1000F 		cmp	r8, #0
 2579 0302 7FF40FAF 		bne	.L304
 2580              	.L264:
1758:src/keys.c    **** 		}
 2581              		.loc 1 1758 5 is_stmt 1 view .LVU805
1758:src/keys.c    **** 		}
 2582              		.loc 1 1758 16 is_stmt 0 view .LVU806
 2583 0306 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
 2584 0308 6FF38613 		bfc	r3, #6, #1
 2585 030c 6B75     		strb	r3, [r5, #21]
1919:src/keys.c    **** }
 2586              		.loc 1 1919 9 view .LVU807
ARM GAS  /tmp/cccKVeLo.s 			page 106


 2587 030e 3320     		movs	r0, #51
 2588              	.LVL211:
1919:src/keys.c    **** }
 2589              		.loc 1 1919 9 view .LVU808
 2590 0310 09E7     		b	.L202
 2591              	.LVL212:
 2592              	.L233:
1775:src/keys.c    **** 	    return process_arg_shuffle(0);
 2593              		.loc 1 1775 4 is_stmt 1 view .LVU809
1775:src/keys.c    **** 	    return process_arg_shuffle(0);
 2594              		.loc 1 1775 8 is_stmt 0 view .LVU810
 2595 0312 AB7D     		ldrb	r3, [r5, #22]	@ zero_extendqisi2
1775:src/keys.c    **** 	    return process_arg_shuffle(0);
 2596              		.loc 1 1775 7 view .LVU811
 2597 0314 9907     		lsls	r1, r3, #30
 2598 0316 7FF509AF 		bpl	.L232
1776:src/keys.c    **** 	case K52:	// Y
 2599              		.loc 1 1776 6 is_stmt 1 view .LVU812
1776:src/keys.c    **** 	case K52:	// Y
 2600              		.loc 1 1776 13 is_stmt 0 view .LVU813
 2601 031a 0020     		movs	r0, #0
 2602              	.LVL213:
 2603              	.L307:
1920:src/keys.c    **** 
 2604              		.loc 1 1920 1 view .LVU814
 2605 031c 03B0     		add	sp, sp, #12
 2606              		.cfi_remember_state
 2607              		.cfi_def_cfa_offset 36
 2608              	.LVL214:
1920:src/keys.c    **** 
 2609              		.loc 1 1920 1 view .LVU815
 2610              		@ sp needed
 2611 031e BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2612              		.cfi_restore 14
 2613              		.cfi_restore 11
 2614              		.cfi_restore 10
 2615              		.cfi_restore 9
 2616              		.cfi_restore 8
 2617              		.cfi_restore 7
 2618              		.cfi_restore 6
 2619              		.cfi_restore 5
 2620              		.cfi_restore 4
 2621              		.cfi_def_cfa_offset 0
 2622              	.LVL215:
1782:src/keys.c    **** #else
 2623              		.loc 1 1782 13 view .LVU816
 2624 0322 FFF7FEBF 		b	process_arg_shuffle
 2625              	.LVL216:
 2626              	.L234:
 2627              		.cfi_restore_state
1778:src/keys.c    **** 	    return process_arg_shuffle(1);
 2628              		.loc 1 1778 4 is_stmt 1 view .LVU817
1778:src/keys.c    **** 	    return process_arg_shuffle(1);
 2629              		.loc 1 1778 8 is_stmt 0 view .LVU818
 2630 0326 AB7D     		ldrb	r3, [r5, #22]	@ zero_extendqisi2
1778:src/keys.c    **** 	    return process_arg_shuffle(1);
 2631              		.loc 1 1778 7 view .LVU819
ARM GAS  /tmp/cccKVeLo.s 			page 107


 2632 0328 9A07     		lsls	r2, r3, #30
 2633 032a 7FF5FFAE 		bpl	.L232
1779:src/keys.c    **** 	case K53:       // Z
 2634              		.loc 1 1779 6 is_stmt 1 view .LVU820
1779:src/keys.c    **** 	case K53:       // Z
 2635              		.loc 1 1779 13 is_stmt 0 view .LVU821
 2636 032e 0120     		movs	r0, #1
 2637              	.LVL217:
1779:src/keys.c    **** 	case K53:       // Z
 2638              		.loc 1 1779 13 view .LVU822
 2639 0330 F4E7     		b	.L307
 2640              	.LVL218:
 2641              	.L235:
1781:src/keys.c    **** 	    return process_arg_shuffle(2);
 2642              		.loc 1 1781 4 is_stmt 1 view .LVU823
1781:src/keys.c    **** 	    return process_arg_shuffle(2);
 2643              		.loc 1 1781 8 is_stmt 0 view .LVU824
 2644 0332 AB7D     		ldrb	r3, [r5, #22]	@ zero_extendqisi2
1781:src/keys.c    **** 	    return process_arg_shuffle(2);
 2645              		.loc 1 1781 7 view .LVU825
 2646 0334 9B07     		lsls	r3, r3, #30
 2647 0336 7FF5F9AE 		bpl	.L232
1782:src/keys.c    **** #else
 2648              		.loc 1 1782 6 is_stmt 1 view .LVU826
1782:src/keys.c    **** #else
 2649              		.loc 1 1782 13 is_stmt 0 view .LVU827
 2650 033a 0220     		movs	r0, #2
 2651              	.LVL219:
1782:src/keys.c    **** #else
 2652              		.loc 1 1782 13 view .LVU828
 2653 033c EEE7     		b	.L307
 2654              	.LVL220:
 2655              	.L254:
1869:src/keys.c    **** 		break;
 2656              		.loc 1 1869 3 is_stmt 1 view .LVU829
 2657 033e 0021     		movs	r1, #0
 2658 0340 0520     		movs	r0, #5
 2659              	.LVL221:
1869:src/keys.c    **** 		break;
 2660              		.loc 1 1869 3 is_stmt 0 view .LVU830
 2661 0342 FFF7FEFF 		bl	arg_storcl
 2662              	.LVL222:
1870:src/keys.c    **** 
 2663              		.loc 1 1870 3 is_stmt 1 view .LVU831
1919:src/keys.c    **** }
 2664              		.loc 1 1919 9 is_stmt 0 view .LVU832
 2665 0346 3320     		movs	r0, #51
1870:src/keys.c    **** 
 2666              		.loc 1 1870 3 view .LVU833
 2667 0348 EDE6     		b	.L202
 2668              	.LVL223:
 2669              	.L231:
1772:src/keys.c    **** 	    return process_arg_shuffle(3);
 2670              		.loc 1 1772 4 is_stmt 1 view .LVU834
1772:src/keys.c    **** 	    return process_arg_shuffle(3);
 2671              		.loc 1 1772 8 is_stmt 0 view .LVU835
 2672 034a AB7D     		ldrb	r3, [r5, #22]	@ zero_extendqisi2
ARM GAS  /tmp/cccKVeLo.s 			page 108


1772:src/keys.c    **** 	    return process_arg_shuffle(3);
 2673              		.loc 1 1772 7 view .LVU836
 2674 034c 9807     		lsls	r0, r3, #30
 2675              	.LVL224:
1772:src/keys.c    **** 	    return process_arg_shuffle(3);
 2676              		.loc 1 1772 7 view .LVU837
 2677 034e 7FF5EDAE 		bpl	.L232
1773:src/keys.c    **** 	case K51:       // X
 2678              		.loc 1 1773 6 is_stmt 1 view .LVU838
1773:src/keys.c    **** 	case K51:       // X
 2679              		.loc 1 1773 13 is_stmt 0 view .LVU839
 2680 0352 0320     		movs	r0, #3
 2681 0354 E2E7     		b	.L307
 2682              	.LVL225:
 2683              	.L252:
1829:src/keys.c    **** 		break;
 2684              		.loc 1 1829 3 is_stmt 1 view .LVU840
 2685 0356 0121     		movs	r1, #1
 2686 0358 0420     		movs	r0, #4
 2687              	.LVL226:
1829:src/keys.c    **** 		break;
 2688              		.loc 1 1829 3 is_stmt 0 view .LVU841
 2689 035a FFF7FEFF 		bl	arg_storcl
 2690              	.LVL227:
1830:src/keys.c    **** #else
 2691              		.loc 1 1830 3 is_stmt 1 view .LVU842
1919:src/keys.c    **** }
 2692              		.loc 1 1919 9 is_stmt 0 view .LVU843
 2693 035e 3320     		movs	r0, #51
1830:src/keys.c    **** #else
 2694              		.loc 1 1830 3 view .LVU844
 2695 0360 E1E6     		b	.L202
 2696              	.LVL228:
 2697              	.L262:
1894:src/keys.c    **** 			if (State2.dot)
 2698              		.loc 1 1894 3 is_stmt 1 view .LVU845
1894:src/keys.c    **** 			if (State2.dot)
 2699              		.loc 1 1894 13 is_stmt 0 view .LVU846
 2700 0362 EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
1894:src/keys.c    **** 			if (State2.dot)
 2701              		.loc 1 1894 6 view .LVU847
 2702 0364 83BB     		cbnz	r3, .L263
1895:src/keys.c    **** 				State2.dot = 0;
 2703              		.loc 1 1895 4 is_stmt 1 view .LVU848
1895:src/keys.c    **** 				State2.dot = 0;
 2704              		.loc 1 1895 8 is_stmt 0 view .LVU849
 2705 0366 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
1895:src/keys.c    **** 				State2.dot = 0;
 2706              		.loc 1 1895 7 view .LVU850
 2707 0368 13F04001 		ands	r1, r3, #64
 2708 036c CBD1     		bne	.L264
1897:src/keys.c    **** 				State2.local = 0;
 2709              		.loc 1 1897 9 is_stmt 1 view .LVU851
1897:src/keys.c    **** 				State2.local = 0;
 2710              		.loc 1 1897 13 is_stmt 0 view .LVU852
 2711 036e AA7D     		ldrb	r2, [r5, #22]	@ zero_extendqisi2
1897:src/keys.c    **** 				State2.local = 0;
ARM GAS  /tmp/cccKVeLo.s 			page 109


 2712              		.loc 1 1897 12 view .LVU853
 2713 0370 12F00100 		ands	r0, r2, #1
 2714              	.LVL229:
1897:src/keys.c    **** 				State2.local = 0;
 2715              		.loc 1 1897 12 view .LVU854
 2716 0374 55D1     		bne	.L313
1899:src/keys.c    **** 				State2.ind = 0;
 2717              		.loc 1 1899 9 is_stmt 1 view .LVU855
1899:src/keys.c    **** 				State2.ind = 0;
 2718              		.loc 1 1899 12 is_stmt 0 view .LVU856
 2719 0376 1906     		lsls	r1, r3, #24
 2720 0378 7FF5D2AE 		bpl	.L266
1900:src/keys.c    **** 			else
 2721              		.loc 1 1900 5 is_stmt 1 view .LVU857
1900:src/keys.c    **** 			else
 2722              		.loc 1 1900 16 is_stmt 0 view .LVU858
 2723 037c 60F3C713 		bfi	r3, r0, #7, #1
 2724 0380 6B75     		strb	r3, [r5, #21]
1919:src/keys.c    **** }
 2725              		.loc 1 1919 9 view .LVU859
 2726 0382 3320     		movs	r0, #51
 2727 0384 CFE6     		b	.L202
 2728              	.LVL230:
 2729              	.L311:
1873:src/keys.c    **** 			if (argcmds[base].label) {
 2730              		.loc 1 1873 43 discriminator 1 view .LVU860
 2731 0386 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
 2732 0388 13F0C00F 		tst	r3, #192
 2733 038c 0FD1     		bne	.L257
1874:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 2734              		.loc 1 1874 4 is_stmt 1 view .LVU861
1874:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 2735              		.loc 1 1874 7 is_stmt 0 view .LVU862
 2736 038e BEF1000F 		cmp	lr, #0
 2737 0392 4BD1     		bne	.L314
1879:src/keys.c    **** 				reset_arg();
 2738              		.loc 1 1879 11 is_stmt 1 view .LVU863
1879:src/keys.c    **** 				reset_arg();
 2739              		.loc 1 1879 14 is_stmt 0 view .LVU864
 2740 0394 4E2F     		cmp	r7, #78
 2741 0396 5BD0     		beq	.L315
1882:src/keys.c    **** 				reset_arg();
 2742              		.loc 1 1882 11 is_stmt 1 view .LVU865
1882:src/keys.c    **** 				reset_arg();
 2743              		.loc 1 1882 14 is_stmt 0 view .LVU866
 2744 0398 4F2F     		cmp	r7, #79
 2745 039a 5ED0     		beq	.L316
1885:src/keys.c    **** 				State2.dot = 1;
 2746              		.loc 1 1885 11 is_stmt 1 view .LVU867
1885:src/keys.c    **** 				State2.dot = 1;
 2747              		.loc 1 1885 14 is_stmt 0 view .LVU868
 2748 039c 019A     		ldr	r2, [sp, #4]
 2749 039e 002A     		cmp	r2, #0
 2750 03a0 3FF4C0AE 		beq	.L304
1886:src/keys.c    **** 		} else if (State2.numdigit > 0)
 2751              		.loc 1 1886 5 is_stmt 1 view .LVU869
1886:src/keys.c    **** 		} else if (State2.numdigit > 0)
ARM GAS  /tmp/cccKVeLo.s 			page 110


 2752              		.loc 1 1886 16 is_stmt 0 view .LVU870
 2753 03a4 43F04003 		orr	r3, r3, #64
 2754 03a8 6B75     		strb	r3, [r5, #21]
1919:src/keys.c    **** }
 2755              		.loc 1 1919 9 view .LVU871
 2756 03aa 3320     		movs	r0, #51
 2757              	.LVL231:
1919:src/keys.c    **** }
 2758              		.loc 1 1919 9 view .LVU872
 2759 03ac BBE6     		b	.L202
 2760              	.LVL232:
 2761              	.L257:
1887:src/keys.c    **** 			return arg_eval(State2.digval);
 2762              		.loc 1 1887 10 is_stmt 1 view .LVU873
1889:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 2763              		.loc 1 1889 8 view .LVU874
1889:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 2764              		.loc 1 1889 11 is_stmt 0 view .LVU875
 2765 03ae B8F1000F 		cmp	r8, #0
 2766 03b2 3FF4B7AE 		beq	.L304
1890:src/keys.c    **** 		break;
 2767              		.loc 1 1890 4 is_stmt 1 view .LVU876
1890:src/keys.c    **** 		break;
 2768              		.loc 1 1890 27 is_stmt 0 view .LVU877
 2769 03b6 C3F38012 		ubfx	r2, r3, #6, #1
1890:src/keys.c    **** 		break;
 2770              		.loc 1 1890 19 view .LVU878
 2771 03ba C2F10102 		rsb	r2, r2, #1
1890:src/keys.c    **** 		break;
 2772              		.loc 1 1890 15 view .LVU879
 2773 03be 62F38613 		bfi	r3, r2, #6, #1
 2774 03c2 6B75     		strb	r3, [r5, #21]
1919:src/keys.c    **** }
 2775              		.loc 1 1919 9 view .LVU880
 2776 03c4 3320     		movs	r0, #51
 2777              	.LVL233:
1919:src/keys.c    **** }
 2778              		.loc 1 1919 9 view .LVU881
 2779 03c6 AEE6     		b	.L202
 2780              	.LVL234:
 2781              	.L263:
1905:src/keys.c    **** 			if (State2.shuffle)
 2782              		.loc 1 1905 4 is_stmt 1 view .LVU882
1906:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2783              		.loc 1 1906 8 is_stmt 0 view .LVU883
 2784 03c8 AA7D     		ldrb	r2, [r5, #22]	@ zero_extendqisi2
1905:src/keys.c    **** 			if (State2.shuffle)
 2785              		.loc 1 1905 4 view .LVU884
 2786 03ca 013B     		subs	r3, r3, #1
 2787 03cc DBB2     		uxtb	r3, r3
1906:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2788              		.loc 1 1906 7 view .LVU885
 2789 03ce 9207     		lsls	r2, r2, #30
1905:src/keys.c    **** 			if (State2.shuffle)
 2790              		.loc 1 1905 4 view .LVU886
 2791 03d0 EB72     		strb	r3, [r5, #11]
1906:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
ARM GAS  /tmp/cccKVeLo.s 			page 111


 2792              		.loc 1 1906 4 is_stmt 1 view .LVU887
1906:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2793              		.loc 1 1906 7 is_stmt 0 view .LVU888
 2794 03d2 14D5     		bpl	.L267
1907:src/keys.c    **** 			else
 2795              		.loc 1 1907 5 is_stmt 1 view .LVU889
1907:src/keys.c    **** 			else
 2796              		.loc 1 1907 19 is_stmt 0 view .LVU890
 2797 03d4 2A89     		ldrh	r2, [r5, #8]
1907:src/keys.c    **** 			else
 2798              		.loc 1 1907 46 view .LVU891
 2799 03d6 5B00     		lsls	r3, r3, #1
1907:src/keys.c    **** 			else
 2800              		.loc 1 1907 26 view .LVU892
 2801 03d8 0321     		movs	r1, #3
 2802 03da 01FA03F3 		lsl	r3, r1, r3
1907:src/keys.c    **** 			else
 2803              		.loc 1 1907 19 view .LVU893
 2804 03de 22EA0303 		bic	r3, r2, r3
 2805 03e2 2B81     		strh	r3, [r5, #8]	@ movhi
1919:src/keys.c    **** }
 2806              		.loc 1 1919 9 view .LVU894
 2807 03e4 3320     		movs	r0, #51
 2808              	.LVL235:
1919:src/keys.c    **** }
 2809              		.loc 1 1919 9 view .LVU895
 2810 03e6 9EE6     		b	.L202
 2811              	.LVL236:
 2812              	.L247:
1819:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
 2813              		.loc 1 1819 4 is_stmt 1 view .LVU896
 2814 03e8 FFF7FEFF 		bl	reset_arg
 2815              	.LVL237:
1820:src/keys.c    **** 		}
 2816              		.loc 1 1820 4 view .LVU897
1820:src/keys.c    **** 		}
 2817              		.loc 1 1820 11 is_stmt 0 view .LVU898
 2818 03ec 40F27510 		movw	r0, #373
 2819 03f0 99E6     		b	.L202
 2820              	.LVL238:
 2821              	.L241:
 2822              	.LBB372:
 2823              	.LBB370:
1663:src/keys.c    **** 		}
 2824              		.loc 1 1663 4 is_stmt 1 view .LVU899
1663:src/keys.c    **** 		}
 2825              		.loc 1 1663 17 is_stmt 0 view .LVU900
 2826 03f2 AB7D     		ldrb	r3, [r5, #22]	@ zero_extendqisi2
 2827 03f4 43F00103 		orr	r3, r3, #1
 2828 03f8 AB75     		strb	r3, [r5, #22]
1673:src/keys.c    **** }
 2829              		.loc 1 1673 9 view .LVU901
 2830 03fa 3320     		movs	r0, #51
 2831              	.LVL239:
1663:src/keys.c    **** 		}
 2832              		.loc 1 1663 17 view .LVU902
 2833 03fc 93E6     		b	.L202
ARM GAS  /tmp/cccKVeLo.s 			page 112


 2834              	.LVL240:
 2835              	.L267:
1663:src/keys.c    **** 		}
 2836              		.loc 1 1663 17 view .LVU903
 2837              	.LBE370:
 2838              	.LBE372:
1909:src/keys.c    **** 		}
 2839              		.loc 1 1909 5 is_stmt 1 view .LVU904
1909:src/keys.c    **** 		}
 2840              		.loc 1 1909 19 is_stmt 0 view .LVU905
 2841 03fe 2B89     		ldrh	r3, [r5, #8]
 2842 0400 194A     		ldr	r2, .L319
 2843 0402 A2FB0323 		umull	r2, r3, r2, r3
 2844 0406 DB08     		lsrs	r3, r3, #3
 2845 0408 2B81     		strh	r3, [r5, #8]	@ movhi
1919:src/keys.c    **** }
 2846              		.loc 1 1919 9 view .LVU906
 2847 040a 3320     		movs	r0, #51
 2848              	.LVL241:
1919:src/keys.c    **** }
 2849              		.loc 1 1919 9 view .LVU907
 2850 040c 8BE6     		b	.L202
 2851              	.LVL242:
 2852              	.L310:
1766:src/keys.c    **** 		else if (base == RARG_RCL)
 2853              		.loc 1 1766 4 is_stmt 1 view .LVU908
1766:src/keys.c    **** 		else if (base == RARG_RCL)
 2854              		.loc 1 1766 12 is_stmt 0 view .LVU909
 2855 040e 7723     		movs	r3, #119
 2856 0410 EB77     		strb	r3, [r5, #31]
1919:src/keys.c    **** }
 2857              		.loc 1 1919 9 view .LVU910
 2858 0412 3320     		movs	r0, #51
 2859              	.LVL243:
1919:src/keys.c    **** }
 2860              		.loc 1 1919 9 view .LVU911
 2861 0414 87E6     		b	.L202
 2862              	.LVL244:
 2863              	.L312:
 2864              	.LBB373:
 2865              	.LBB371:
1658:src/keys.c    **** 			return arg_eval(regX_idx);
 2866              		.loc 1 1658 4 is_stmt 1 view .LVU912
1658:src/keys.c    **** 			return arg_eval(regX_idx);
 2867              		.loc 1 1658 17 is_stmt 0 view .LVU913
 2868 0416 AA7D     		ldrb	r2, [r5, #22]	@ zero_extendqisi2
 2869 0418 63F30002 		bfi	r2, r3, #0, #1
1659:src/keys.c    **** 		}
 2870              		.loc 1 1659 11 view .LVU914
 2871 041c 6420     		movs	r0, #100
 2872              	.LVL245:
1658:src/keys.c    **** 			return arg_eval(regX_idx);
 2873              		.loc 1 1658 17 view .LVU915
 2874 041e AA75     		strb	r2, [r5, #22]
1659:src/keys.c    **** 		}
 2875              		.loc 1 1659 4 is_stmt 1 view .LVU916
 2876 0420 CAE6     		b	.L306
ARM GAS  /tmp/cccKVeLo.s 			page 113


 2877              	.LVL246:
 2878              	.L313:
1659:src/keys.c    **** 		}
 2879              		.loc 1 1659 4 is_stmt 0 view .LVU917
 2880              	.LBE371:
 2881              	.LBE373:
1898:src/keys.c    **** 			else if (State2.ind)
 2882              		.loc 1 1898 5 is_stmt 1 view .LVU918
1898:src/keys.c    **** 			else if (State2.ind)
 2883              		.loc 1 1898 18 is_stmt 0 view .LVU919
 2884 0422 61F30002 		bfi	r2, r1, #0, #1
 2885 0426 AA75     		strb	r2, [r5, #22]
1919:src/keys.c    **** }
 2886              		.loc 1 1919 9 view .LVU920
 2887 0428 3320     		movs	r0, #51
 2888 042a 7CE6     		b	.L202
 2889              	.LVL247:
 2890              	.L314:
1875:src/keys.c    **** 				State2.multi = 1;
 2891              		.loc 1 1875 5 is_stmt 1 view .LVU921
 2892              	.LBB374:
 2893              	.LBI374:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 2894              		.loc 1 506 13 view .LVU922
 2895              	.LBB375:
 507:src/keys.c    **** 		return;
 2896              		.loc 1 507 2 view .LVU923
 507:src/keys.c    **** 		return;
 2897              		.loc 1 507 6 is_stmt 0 view .LVU924
 2898 042c FFF7FEFF 		bl	is_bad_cmdline
 2899              	.LVL248:
 507:src/keys.c    **** 		return;
 2900              		.loc 1 507 5 view .LVU925
 2901 0430 20B9     		cbnz	r0, .L259
 2902              	.LBE375:
 2903              	.LBE374:
1875:src/keys.c    **** 				State2.multi = 1;
 2904              		.loc 1 1875 31 view .LVU926
 2905 0432 A7F14200 		sub	r0, r7, #66
 2906              	.LBB377:
 2907              	.LBB376:
 2908 0436 C0B2     		uxtb	r0, r0
 2909 0438 FFF7FEFF 		bl	init_arg.part.0
 2910              	.LVL249:
 2911              	.L259:
1875:src/keys.c    **** 				State2.multi = 1;
 2912              		.loc 1 1875 31 view .LVU927
 2913              	.LBE376:
 2914              	.LBE377:
1876:src/keys.c    **** 				State2.alphashift = 0;
 2915              		.loc 1 1876 5 is_stmt 1 view .LVU928
1877:src/keys.c    **** 				State2.rarg = 0;
 2916              		.loc 1 1877 5 view .LVU929
1878:src/keys.c    **** 			} else if (base == RARG_SCI) {
 2917              		.loc 1 1878 5 view .LVU930
1876:src/keys.c    **** 				State2.alphashift = 0;
 2918              		.loc 1 1876 18 is_stmt 0 view .LVU931
ARM GAS  /tmp/cccKVeLo.s 			page 114


 2919 043c 6B69     		ldr	r3, [r5, #20]
 2920 043e 23F44013 		bic	r3, r3, #3145728
 2921 0442 23F40063 		bic	r3, r3, #2048
 2922 0446 43F40063 		orr	r3, r3, #2048
 2923 044a 6B61     		str	r3, [r5, #20]
1919:src/keys.c    **** }
 2924              		.loc 1 1919 9 view .LVU932
 2925 044c 3320     		movs	r0, #51
 2926 044e 6AE6     		b	.L202
 2927              	.LVL250:
 2928              	.L315:
1880:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
 2929              		.loc 1 1880 5 is_stmt 1 view .LVU933
 2930 0450 FFF7FEFF 		bl	reset_arg
 2931              	.LVL251:
1881:src/keys.c    **** 			} else if (base == RARG_ENG) {
 2932              		.loc 1 1881 5 view .LVU934
1881:src/keys.c    **** 			} else if (base == RARG_ENG) {
 2933              		.loc 1 1881 12 is_stmt 0 view .LVU935
 2934 0454 40F25510 		movw	r0, #341
 2935 0458 65E6     		b	.L202
 2936              	.LVL252:
 2937              	.L316:
1883:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
 2938              		.loc 1 1883 5 is_stmt 1 view .LVU936
 2939 045a FFF7FEFF 		bl	reset_arg
 2940              	.LVL253:
1884:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 2941              		.loc 1 1884 5 view .LVU937
1884:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 2942              		.loc 1 1884 12 is_stmt 0 view .LVU938
 2943 045e 4FF4AB70 		mov	r0, #342
 2944 0462 60E6     		b	.L202
 2945              	.LVL254:
 2946              	.L220:
1703:src/keys.c    **** 	  case regY_idx:
 2947              		.loc 1 1703 6 is_stmt 1 view .LVU939
1703:src/keys.c    **** 	  case regY_idx:
 2948              		.loc 1 1703 13 is_stmt 0 view .LVU940
 2949 0464 0120     		movs	r0, #1
 2950              	.LVL255:
1703:src/keys.c    **** 	  case regY_idx:
 2951              		.loc 1 1703 13 view .LVU941
 2952 0466 BBE6     		b	.L305
 2953              	.L320:
 2954              		.align	2
 2955              	.L319:
 2956 0468 CDCCCCCC 		.word	-858993459
 2957              		.cfi_endproc
 2958              	.LFE37:
 2960              		.section	.text.cur_shift,"ax",%progbits
 2961              		.align	1
 2962              		.p2align 2,,3
 2963              		.global	cur_shift
 2964              		.syntax unified
 2965              		.thumb
 2966              		.thumb_func
ARM GAS  /tmp/cccKVeLo.s 			page 115


 2967              		.fpu fpv4-sp-d16
 2969              	cur_shift:
 2970              	.LFB0:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 2971              		.loc 1 86 29 is_stmt 1 view -0
 2972              		.cfi_startproc
 2973              		@ args = 0, pretend = 0, frame = 0
 2974              		@ frame_needed = 0, uses_anonymous_args = 0
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2975              		.loc 1 87 2 view .LVU943
  86:src/keys.c    **** 	enum shifts s = shift_down();
 2976              		.loc 1 86 29 is_stmt 0 view .LVU944
 2977 0000 08B5     		push	{r3, lr}
 2978              		.cfi_def_cfa_offset 8
 2979              		.cfi_offset 3, -8
 2980              		.cfi_offset 14, -4
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2981              		.loc 1 87 18 view .LVU945
 2982 0002 FFF7FEFF 		bl	shift_down
 2983              	.LVL256:
  88:src/keys.c    **** }
 2984              		.loc 1 88 2 is_stmt 1 view .LVU946
  88:src/keys.c    **** }
 2985              		.loc 1 88 52 is_stmt 0 view .LVU947
 2986 0006 08B9     		cbnz	r0, .L322
  88:src/keys.c    **** }
 2987              		.loc 1 88 52 discriminator 1 view .LVU948
 2988 0008 014B     		ldr	r3, .L324
 2989 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 2990              	.LVL257:
 2991              	.L322:
  89:src/keys.c    **** 
 2992              		.loc 1 89 1 discriminator 4 view .LVU949
 2993 000c 08BD     		pop	{r3, pc}
 2994              	.L325:
 2995 000e 00BF     		.align	2
 2996              	.L324:
 2997 0010 00000000 		.word	StateWhileOn
 2998              		.cfi_endproc
 2999              	.LFE0:
 3001              		.section	.text.reset_shift,"ax",%progbits
 3002              		.align	1
 3003              		.p2align 2,,3
 3004              		.global	reset_shift
 3005              		.syntax unified
 3006              		.thumb
 3007              		.thumb_func
 3008              		.fpu fpv4-sp-d16
 3010              	reset_shift:
 3011              	.LFB2:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 3012              		.loc 1 104 31 is_stmt 1 view -0
 3013              		.cfi_startproc
 3014              		@ args = 0, pretend = 0, frame = 0
 3015              		@ frame_needed = 0, uses_anonymous_args = 0
 105:src/keys.c    **** }
 3016              		.loc 1 105 2 view .LVU951
ARM GAS  /tmp/cccKVeLo.s 			page 116


 3017              	.LVL258:
 3018              	.LBB378:
 3019              	.LBI378:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 3020              		.loc 1 94 20 view .LVU952
 3021              	.LBB379:
  95:src/keys.c    **** 	State2.shifts = shift;
 3022              		.loc 1 95 2 view .LVU953
 3023              	.LBB380:
 3024              	.LBI380:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 3025              		.loc 1 86 13 view .LVU954
 3026              	.LBB381:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3027              		.loc 1 87 2 view .LVU955
 3028              	.LBE381:
 3029              	.LBE380:
 3030              	.LBE379:
 3031              	.LBE378:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 3032              		.loc 1 104 31 is_stmt 0 view .LVU956
 3033 0000 08B5     		push	{r3, lr}
 3034              		.cfi_def_cfa_offset 8
 3035              		.cfi_offset 3, -8
 3036              		.cfi_offset 14, -4
 3037              	.LBB385:
 3038              	.LBB384:
 3039              	.LBB383:
 3040              	.LBB382:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3041              		.loc 1 87 18 view .LVU957
 3042 0002 FFF7FEFF 		bl	shift_down
 3043              	.LVL259:
  88:src/keys.c    **** }
 3044              		.loc 1 88 2 is_stmt 1 view .LVU958
  88:src/keys.c    **** }
 3045              		.loc 1 88 52 is_stmt 0 view .LVU959
 3046 0006 034B     		ldr	r3, .L331
 3047 0008 00B9     		cbnz	r0, .L327
 3048 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 3049              	.LVL260:
 3050              	.L327:
  88:src/keys.c    **** }
 3051              		.loc 1 88 52 view .LVU960
 3052              	.LBE382:
 3053              	.LBE383:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3054              		.loc 1 96 2 is_stmt 1 view .LVU961
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3055              		.loc 1 96 16 is_stmt 0 view .LVU962
 3056 000c 0022     		movs	r2, #0
 3057 000e 1A74     		strb	r2, [r3, #16]
  98:src/keys.c    **** }
 3058              		.loc 1 98 2 is_stmt 1 view .LVU963
 3059              	.LVL261:
  98:src/keys.c    **** }
 3060              		.loc 1 98 2 is_stmt 0 view .LVU964
ARM GAS  /tmp/cccKVeLo.s 			page 117


 3061              	.LBE384:
 3062              	.LBE385:
 106:src/keys.c    **** 
 3063              		.loc 1 106 1 view .LVU965
 3064 0010 08BD     		pop	{r3, pc}
 3065              	.L332:
 3066 0012 00BF     		.align	2
 3067              	.L331:
 3068 0014 00000000 		.word	StateWhileOn
 3069              		.cfi_endproc
 3070              	.LFE2:
 3072              		.section	.text.keycode_to_row_column,"ax",%progbits
 3073              		.align	1
 3074              		.p2align 2,,3
 3075              		.global	keycode_to_row_column
 3076              		.syntax unified
 3077              		.thumb
 3078              		.thumb_func
 3079              		.fpu fpv4-sp-d16
 3081              	keycode_to_row_column:
 3082              	.LVL262:
 3083              	.LFB6:
 170:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 3084              		.loc 1 170 1 is_stmt 1 view -0
 3085              		.cfi_startproc
 3086              		@ args = 0, pretend = 0, frame = 0
 3087              		@ frame_needed = 0, uses_anonymous_args = 0
 3088              		@ link register save eliminated.
 171:src/keys.c    **** }
 3089              		.loc 1 171 2 view .LVU967
 171:src/keys.c    **** }
 3090              		.loc 1 171 18 is_stmt 0 view .LVU968
 3091 0000 074A     		ldr	r2, .L334
 3092 0002 82FB0032 		smull	r3, r2, r2, r0
 3093 0006 A2EBE073 		sub	r3, r2, r0, asr #31
 171:src/keys.c    **** }
 3094              		.loc 1 171 24 view .LVU969
 3095 000a 03EB8302 		add	r2, r3, r3, lsl #2
 3096 000e 5200     		lsls	r2, r2, #1
 171:src/keys.c    **** }
 3097              		.loc 1 171 33 view .LVU970
 3098 0010 03EB4303 		add	r3, r3, r3, lsl #1
 3099 0014 A0EB4303 		sub	r3, r0, r3, lsl #1
 171:src/keys.c    **** }
 3100              		.loc 1 171 12 view .LVU971
 3101 0018 02F10B00 		add	r0, r2, #11
 3102              	.LVL263:
 172:src/keys.c    **** 
 3103              		.loc 1 172 1 view .LVU972
 3104 001c 1844     		add	r0, r0, r3
 3105 001e 7047     		bx	lr
 3106              	.L335:
 3107              		.align	2
 3108              	.L334:
 3109 0020 ABAAAA2A 		.word	715827883
 3110              		.cfi_endproc
 3111              	.LFE6:
ARM GAS  /tmp/cccKVeLo.s 			page 118


 3113              		.section	.text.row_column_to_keycode,"ax",%progbits
 3114              		.align	1
 3115              		.p2align 2,,3
 3116              		.global	row_column_to_keycode
 3117              		.syntax unified
 3118              		.thumb
 3119              		.thumb_func
 3120              		.fpu fpv4-sp-d16
 3122              	row_column_to_keycode:
 3123              	.LVL264:
 3124              	.LFB7:
 180:src/keys.c    **** 	int row = c / 10 - 1;
 3125              		.loc 1 180 1 is_stmt 1 view -0
 3126              		.cfi_startproc
 3127              		@ args = 0, pretend = 0, frame = 0
 3128              		@ frame_needed = 0, uses_anonymous_args = 0
 3129              		@ link register save eliminated.
 181:src/keys.c    **** 	int col = c % 10 - 1;
 3130              		.loc 1 181 2 view .LVU974
 181:src/keys.c    **** 	int col = c % 10 - 1;
 3131              		.loc 1 181 14 is_stmt 0 view .LVU975
 3132 0000 0E4A     		ldr	r2, .L342
 3133 0002 82FB0032 		smull	r3, r2, r2, r0
 3134 0006 C317     		asrs	r3, r0, #31
 3135 0008 C3EBA203 		rsb	r3, r3, r2, asr #2
 182:src/keys.c    **** 
 3136              		.loc 1 182 14 view .LVU976
 3137 000c 03EB8302 		add	r2, r3, r3, lsl #2
 181:src/keys.c    **** 	int col = c % 10 - 1;
 3138              		.loc 1 181 6 view .LVU977
 3139 0010 013B     		subs	r3, r3, #1
 3140              	.LVL265:
 182:src/keys.c    **** 
 3141              		.loc 1 182 2 is_stmt 1 view .LVU978
 182:src/keys.c    **** 
 3142              		.loc 1 182 14 is_stmt 0 view .LVU979
 3143 0012 A0EB4200 		sub	r0, r0, r2, lsl #1
 3144              	.LVL266:
 184:src/keys.c    **** 		return -1;
 3145              		.loc 1 184 5 view .LVU980
 3146 0016 062B     		cmp	r3, #6
 182:src/keys.c    **** 
 3147              		.loc 1 182 6 view .LVU981
 3148 0018 00F1FF30 		add	r0, r0, #-1
 3149              	.LVL267:
 184:src/keys.c    **** 		return -1;
 3150              		.loc 1 184 2 is_stmt 1 view .LVU982
 184:src/keys.c    **** 		return -1;
 3151              		.loc 1 184 5 is_stmt 0 view .LVU983
 3152 001c 0AD8     		bhi	.L341
 184:src/keys.c    **** 		return -1;
 3153              		.loc 1 184 36 discriminator 1 view .LVU984
 3154 001e 012B     		cmp	r3, #1
 3155 0020 CCBF     		ite	gt
 3156 0022 0422     		movgt	r2, #4
 3157 0024 0522     		movle	r2, #5
 184:src/keys.c    **** 		return -1;
ARM GAS  /tmp/cccKVeLo.s 			page 119


 3158              		.loc 1 184 25 discriminator 1 view .LVU985
 3159 0026 8242     		cmp	r2, r0
 3160 0028 04DB     		blt	.L341
 186:src/keys.c    **** }
 3161              		.loc 1 186 2 is_stmt 1 view .LVU986
 186:src/keys.c    **** }
 3162              		.loc 1 186 13 is_stmt 0 view .LVU987
 3163 002a 03EB4303 		add	r3, r3, r3, lsl #1
 3164              	.LVL268:
 186:src/keys.c    **** }
 3165              		.loc 1 186 17 view .LVU988
 3166 002e 00EB4300 		add	r0, r0, r3, lsl #1
 3167              	.LVL269:
 186:src/keys.c    **** }
 3168              		.loc 1 186 17 view .LVU989
 3169 0032 7047     		bx	lr
 3170              	.LVL270:
 3171              	.L341:
 185:src/keys.c    **** 	return row * 6 + col;
 3172              		.loc 1 185 10 view .LVU990
 3173 0034 4FF0FF30 		mov	r0, #-1
 3174              	.LVL271:
 187:src/keys.c    **** 
 3175              		.loc 1 187 1 view .LVU991
 3176 0038 7047     		bx	lr
 3177              	.L343:
 3178 003a 00BF     		.align	2
 3179              	.L342:
 3180 003c 67666666 		.word	1717986919
 3181              		.cfi_endproc
 3182              	.LFE7:
 3184              		.section	.text.keycode_to_digit_or_register,"ax",%progbits
 3185              		.align	1
 3186              		.p2align 2,,3
 3187              		.global	keycode_to_digit_or_register
 3188              		.syntax unified
 3189              		.thumb
 3190              		.thumb_func
 3191              		.fpu fpv4-sp-d16
 3193              	keycode_to_digit_or_register:
 3194              	.LVL272:
 3195              	.LFB8:
 201:src/keys.c    ****   static const unsigned char map[] = {
 3196              		.loc 1 201 1 is_stmt 1 view -0
 3197              		.cfi_startproc
 3198              		@ args = 0, pretend = 0, frame = 0
 3199              		@ frame_needed = 0, uses_anonymous_args = 0
 3200              		@ link register save eliminated.
 202:src/keys.c    ****     // K00 - K05
 3201              		.loc 1 202 3 view .LVU993
 224:src/keys.c    **** }
 3202              		.loc 1 224 3 view .LVU994
 3203              	.LBB386:
 3204              	.LBI386:
 121:src/keys.c    **** {
 3205              		.loc 1 121 12 view .LVU995
 3206              	.LBB387:
ARM GAS  /tmp/cccKVeLo.s 			page 120


 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3207              		.loc 1 123 2 view .LVU996
 133:src/keys.c    **** }
 3208              		.loc 1 133 2 view .LVU997
 133:src/keys.c    **** }
 3209              		.loc 1 133 23 is_stmt 0 view .LVU998
 3210 0000 024B     		ldr	r3, .L345
 3211              	.LBE387:
 3212              	.LBE386:
 224:src/keys.c    **** }
 3213              		.loc 1 224 28 view .LVU999
 3214 0002 034A     		ldr	r2, .L345+4
 3215              	.LBB389:
 3216              	.LBB388:
 133:src/keys.c    **** }
 3217              		.loc 1 133 23 view .LVU1000
 3218 0004 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 3219              	.LBE388:
 3220              	.LBE389:
 225:src/keys.c    **** #else
 3221              		.loc 1 225 1 view .LVU1001
 3222 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 3223              	.LVL273:
 225:src/keys.c    **** #else
 3224              		.loc 1 225 1 view .LVU1002
 3225 0008 7047     		bx	lr
 3226              	.L346:
 3227 000a 00BF     		.align	2
 3228              	.L345:
 3229 000c 00000000 		.word	.LANCHOR1
 3230 0010 00000000 		.word	.LANCHOR0
 3231              		.cfi_endproc
 3232              	.LFE8:
 3234              		.section	.text.init_state,"ax",%progbits
 3235              		.align	1
 3236              		.p2align 2,,3
 3237              		.global	init_state
 3238              		.syntax unified
 3239              		.thumb
 3240              		.thumb_func
 3241              		.fpu fpv4-sp-d16
 3243              	init_state:
 3244              	.LFB13:
 569:src/keys.c    **** #ifndef REALBUILD
 3245              		.loc 1 569 23 is_stmt 1 view -0
 3246              		.cfi_startproc
 3247              		@ args = 0, pretend = 0, frame = 0
 3248              		@ frame_needed = 0, uses_anonymous_args = 0
 571:src/keys.c    **** 	unsigned int b = State2.trace;
 3249              		.loc 1 571 2 view .LVU1004
 569:src/keys.c    **** #ifndef REALBUILD
 3250              		.loc 1 569 23 is_stmt 0 view .LVU1005
 3251 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3252              		.cfi_def_cfa_offset 24
 3253              		.cfi_offset 4, -24
 3254              		.cfi_offset 5, -20
 3255              		.cfi_offset 6, -16
ARM GAS  /tmp/cccKVeLo.s 			page 121


 3256              		.cfi_offset 7, -12
 3257              		.cfi_offset 8, -8
 3258              		.cfi_offset 14, -4
 571:src/keys.c    **** 	unsigned int b = State2.trace;
 3259              		.loc 1 571 25 view .LVU1006
 3260 0004 154C     		ldr	r4, .L349
 579:src/keys.c    **** 	// Removed: will clear any locals on power off
 3261              		.loc 1 579 10 view .LVU1007
 3262 0006 0021     		movs	r1, #0
 583:src/keys.c    **** 	State2.test = TST_NONE;
 3263              		.loc 1 583 2 view .LVU1008
 3264 0008 1422     		movs	r2, #20
 3265 000a 04F10800 		add	r0, r4, #8
 579:src/keys.c    **** 	// Removed: will clear any locals on power off
 3266              		.loc 1 579 10 view .LVU1009
 3267 000e E177     		strb	r1, [r4, #31]
 571:src/keys.c    **** 	unsigned int b = State2.trace;
 3268              		.loc 1 571 25 view .LVU1010
 3269 0010 257E     		ldrb	r5, [r4, #24]	@ zero_extendqisi2
 572:src/keys.c    **** #else
 3270              		.loc 1 572 25 view .LVU1011
 3271 0012 E67D     		ldrb	r6, [r4, #23]	@ zero_extendqisi2
 576:src/keys.c    **** 	int k = LastKey;
 3272              		.loc 1 576 10 view .LVU1012
 3273 0014 A77C     		ldrb	r7, [r4, #18]	@ zero_extendqisi2
 577:src/keys.c    **** 
 3274              		.loc 1 577 10 view .LVU1013
 3275 0016 94F91380 		ldrsb	r8, [r4, #19]
 583:src/keys.c    **** 	State2.test = TST_NONE;
 3276              		.loc 1 583 2 view .LVU1014
 3277 001a FFF7FEFF 		bl	xset
 3278              	.LVL274:
 585:src/keys.c    **** 	update_program_bounds(1);
 3279              		.loc 1 585 17 view .LVU1015
 3280 001e A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 584:src/keys.c    **** 	State2.runmode = 1;
 3281              		.loc 1 584 14 view .LVU1016
 3282 0020 0722     		movs	r2, #7
 585:src/keys.c    **** 	update_program_bounds(1);
 3283              		.loc 1 585 17 view .LVU1017
 3284 0022 43F04003 		orr	r3, r3, #64
 586:src/keys.c    **** 	set_lift();
 3285              		.loc 1 586 2 view .LVU1018
 3286 0026 0120     		movs	r0, #1
 584:src/keys.c    **** 	State2.runmode = 1;
 3287              		.loc 1 584 14 view .LVU1019
 3288 0028 E273     		strb	r2, [r4, #15]
 585:src/keys.c    **** 	update_program_bounds(1);
 3289              		.loc 1 585 17 view .LVU1020
 3290 002a A375     		strb	r3, [r4, #22]
 586:src/keys.c    **** 	set_lift();
 3291              		.loc 1 586 2 view .LVU1021
 3292 002c FFF7FEFF 		bl	update_program_bounds
 3293              	.LVL275:
 587:src/keys.c    **** 
 3294              		.loc 1 587 2 view .LVU1022
 3295 0030 FFF7FEFF 		bl	set_lift
ARM GAS  /tmp/cccKVeLo.s 			page 122


 3296              	.LVL276:
 594:src/keys.c    **** 	State2.flags = a;
 3297              		.loc 1 594 15 view .LVU1023
 3298 0034 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 595:src/keys.c    **** #else
 3299              		.loc 1 595 15 view .LVU1024
 3300 0036 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 599:src/keys.c    **** }
 3301              		.loc 1 599 15 view .LVU1025
 3302 0038 0949     		ldr	r1, .L349+4
 592:src/keys.c    **** #ifndef REALBUILD
 3303              		.loc 1 592 10 view .LVU1026
 3304 003a 84F81380 		strb	r8, [r4, #19]
 571:src/keys.c    **** 	unsigned int b = State2.trace;
 3305              		.loc 1 571 25 view .LVU1027
 3306 003e 05F00105 		and	r5, r5, #1
 3307              	.LVL277:
 572:src/keys.c    **** #else
 3308              		.loc 1 572 2 is_stmt 1 view .LVU1028
 572:src/keys.c    **** #else
 3309              		.loc 1 572 25 is_stmt 0 view .LVU1029
 3310 0042 F609     		lsrs	r6, r6, #7
 3311              	.LVL278:
 576:src/keys.c    **** 	int k = LastKey;
 3312              		.loc 1 576 2 is_stmt 1 view .LVU1030
 576:src/keys.c    **** 	int k = LastKey;
 3313              		.loc 1 576 10 is_stmt 0 view .LVU1031
 3314 0044 FFB2     		uxtb	r7, r7
 3315              	.LVL279:
 577:src/keys.c    **** 
 3316              		.loc 1 577 2 is_stmt 1 view .LVU1032
 579:src/keys.c    **** 	// Removed: will clear any locals on power off
 3317              		.loc 1 579 2 view .LVU1033
 583:src/keys.c    **** 	State2.test = TST_NONE;
 3318              		.loc 1 583 2 view .LVU1034
 584:src/keys.c    **** 	State2.runmode = 1;
 3319              		.loc 1 584 2 view .LVU1035
 585:src/keys.c    **** 	update_program_bounds(1);
 3320              		.loc 1 585 2 view .LVU1036
 586:src/keys.c    **** 	set_lift();
 3321              		.loc 1 586 2 view .LVU1037
 587:src/keys.c    **** 
 3322              		.loc 1 587 2 view .LVU1038
 591:src/keys.c    **** 	LastKey = k;
 3323              		.loc 1 591 2 view .LVU1039
 594:src/keys.c    **** 	State2.flags = a;
 3324              		.loc 1 594 15 is_stmt 0 view .LVU1040
 3325 0046 66F3C712 		bfi	r2, r6, #7, #1
 595:src/keys.c    **** #else
 3326              		.loc 1 595 15 view .LVU1041
 3327 004a 65F30003 		bfi	r3, r5, #0, #1
 599:src/keys.c    **** }
 3328              		.loc 1 599 15 view .LVU1042
 3329 004e 6420     		movs	r0, #100
 594:src/keys.c    **** 	State2.flags = a;
 3330              		.loc 1 594 15 view .LVU1043
 3331 0050 E275     		strb	r2, [r4, #23]
ARM GAS  /tmp/cccKVeLo.s 			page 123


 595:src/keys.c    **** #else
 3332              		.loc 1 595 15 view .LVU1044
 3333 0052 2376     		strb	r3, [r4, #24]
 591:src/keys.c    **** 	LastKey = k;
 3334              		.loc 1 591 10 view .LVU1045
 3335 0054 A774     		strb	r7, [r4, #18]
 592:src/keys.c    **** #ifndef REALBUILD
 3336              		.loc 1 592 2 is_stmt 1 view .LVU1046
 594:src/keys.c    **** 	State2.flags = a;
 3337              		.loc 1 594 2 view .LVU1047
 595:src/keys.c    **** #else
 3338              		.loc 1 595 2 view .LVU1048
 599:src/keys.c    **** }
 3339              		.loc 1 599 2 view .LVU1049
 599:src/keys.c    **** }
 3340              		.loc 1 599 15 is_stmt 0 view .LVU1050
 3341 0056 0860     		str	r0, [r1]
 600:src/keys.c    **** 
 3342              		.loc 1 600 1 view .LVU1051
 3343 0058 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3344              	.LVL280:
 3345              	.L350:
 600:src/keys.c    **** 
 3346              		.loc 1 600 1 view .LVU1052
 3347              		.align	2
 3348              	.L349:
 3349 005c 00000000 		.word	StateWhileOn
 3350 0060 00000000 		.word	ShowRegister
 3351              		.cfi_endproc
 3352              	.LFE13:
 3354              		.section	.text.soft_init_state,"ax",%progbits
 3355              		.align	1
 3356              		.p2align 2,,3
 3357              		.global	soft_init_state
 3358              		.syntax unified
 3359              		.thumb
 3360              		.thumb_func
 3361              		.fpu fpv4-sp-d16
 3363              	soft_init_state:
 3364              	.LFB14:
 602:src/keys.c    **** 	int soft;
 3365              		.loc 1 602 28 is_stmt 1 view -0
 3366              		.cfi_startproc
 3367              		@ args = 0, pretend = 0, frame = 0
 3368              		@ frame_needed = 0, uses_anonymous_args = 0
 603:src/keys.c    **** 	unsigned int runmode;
 3369              		.loc 1 603 2 view .LVU1054
 604:src/keys.c    **** 	unsigned int alphas;
 3370              		.loc 1 604 2 view .LVU1055
 605:src/keys.c    **** 
 3371              		.loc 1 605 2 view .LVU1056
 607:src/keys.c    **** 		CmdLineLength = 0;
 3372              		.loc 1 607 2 view .LVU1057
 602:src/keys.c    **** 	int soft;
 3373              		.loc 1 602 28 is_stmt 0 view .LVU1058
 3374 0000 38B5     		push	{r3, r4, r5, lr}
 3375              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cccKVeLo.s 			page 124


 3376              		.cfi_offset 3, -16
 3377              		.cfi_offset 4, -12
 3378              		.cfi_offset 5, -8
 3379              		.cfi_offset 14, -4
 607:src/keys.c    **** 		CmdLineLength = 0;
 3380              		.loc 1 607 6 view .LVU1059
 3381 0002 114C     		ldr	r4, .L358
 607:src/keys.c    **** 		CmdLineLength = 0;
 3382              		.loc 1 607 5 view .LVU1060
 3383 0004 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 3384 0006 D3B9     		cbnz	r3, .L357
 613:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 3385              		.loc 1 613 2 is_stmt 1 view .LVU1061
 614:src/keys.c    **** 	runmode = State2.runmode;
 3386              		.loc 1 614 17 is_stmt 0 view .LVU1062
 3387 0008 104A     		ldr	r2, .L358+4
 3388 000a 6369     		ldr	r3, [r4, #20]
 614:src/keys.c    **** 	runmode = State2.runmode;
 3389              		.loc 1 614 60 view .LVU1063
 3390 000c 1A42     		tst	r2, r3
 3391 000e 0AD0     		beq	.L354
 3392              	.L355:
 3393              	.LVL281:
 615:src/keys.c    **** 	alphas = State2.alphas;
 3394              		.loc 1 615 2 is_stmt 1 view .LVU1064
 616:src/keys.c    **** 	init_state();
 3395              		.loc 1 616 17 is_stmt 0 view .LVU1065
 3396 0010 A57D     		ldrb	r5, [r4, #22]	@ zero_extendqisi2
 3397              	.LVL282:
 616:src/keys.c    **** 	init_state();
 3398              		.loc 1 616 2 is_stmt 1 view .LVU1066
 617:src/keys.c    **** 	if (soft) {
 3399              		.loc 1 617 2 view .LVU1067
 3400 0012 FFF7FEFF 		bl	init_state
 3401              	.LVL283:
 618:src/keys.c    **** 		State2.runmode = runmode;
 3402              		.loc 1 618 2 view .LVU1068
 619:src/keys.c    **** 		State2.alphas = alphas;
 3403              		.loc 1 619 3 view .LVU1069
 620:src/keys.c    **** 	}
 3404              		.loc 1 620 3 view .LVU1070
 620:src/keys.c    **** 	}
 3405              		.loc 1 620 17 is_stmt 0 view .LVU1071
 3406 0016 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 3407 0018 05F04805 		and	r5, r5, #72
 3408 001c 23F04803 		bic	r3, r3, #72
 3409 0020 2B43     		orrs	r3, r3, r5
 3410 0022 A375     		strb	r3, [r4, #22]
 622:src/keys.c    **** 
 3411              		.loc 1 622 1 view .LVU1072
 3412 0024 38BD     		pop	{r3, r4, r5, pc}
 3413              	.LVL284:
 3414              	.L354:
 614:src/keys.c    **** 	runmode = State2.runmode;
 3415              		.loc 1 614 60 discriminator 2 view .LVU1073
 3416 0026 E368     		ldr	r3, [r4, #12]
 3417 0028 23F47F03 		bic	r3, r3, #16711680
ARM GAS  /tmp/cccKVeLo.s 			page 125


 3418 002c 23F47F43 		bic	r3, r3, #65280
 3419 0030 B3F1E06F 		cmp	r3, #117440512
 3420 0034 ECD1     		bne	.L355
 3421              	.LVL285:
 615:src/keys.c    **** 	alphas = State2.alphas;
 3422              		.loc 1 615 2 is_stmt 1 view .LVU1074
 616:src/keys.c    **** 	init_state();
 3423              		.loc 1 616 2 view .LVU1075
 617:src/keys.c    **** 	if (soft) {
 3424              		.loc 1 617 2 view .LVU1076
 622:src/keys.c    **** 
 3425              		.loc 1 622 1 is_stmt 0 view .LVU1077
 3426 0036 BDE83840 		pop	{r3, r4, r5, lr}
 3427              		.cfi_remember_state
 3428              		.cfi_restore 14
 3429              		.cfi_restore 5
 3430              		.cfi_restore 4
 3431              		.cfi_restore 3
 3432              		.cfi_def_cfa_offset 0
 617:src/keys.c    **** 	if (soft) {
 3433              		.loc 1 617 2 view .LVU1078
 3434 003a FFF7FEBF 		b	init_state
 3435              	.LVL286:
 3436              	.L357:
 3437              		.cfi_restore_state
 3438              	.LBB392:
 3439              	.LBI392:
 602:src/keys.c    **** 	int soft;
 3440              		.loc 1 602 6 is_stmt 1 view .LVU1079
 3441              	.LBB393:
 608:src/keys.c    **** 		CmdLineEex = 0;
 3442              		.loc 1 608 3 view .LVU1080
 609:src/keys.c    **** 		CmdLineDot = 0;
 3443              		.loc 1 609 3 view .LVU1081
 610:src/keys.c    **** 		return;
 3444              		.loc 1 610 3 view .LVU1082
 608:src/keys.c    **** 		CmdLineEex = 0;
 3445              		.loc 1 608 17 is_stmt 0 view .LVU1083
 3446 003e 0023     		movs	r3, #0
 3447 0040 A383     		strh	r3, [r4, #28]	@ movhi
 610:src/keys.c    **** 		return;
 3448              		.loc 1 610 14 view .LVU1084
 3449 0042 A377     		strb	r3, [r4, #30]
 611:src/keys.c    **** 	}
 3450              		.loc 1 611 3 is_stmt 1 view .LVU1085
 3451              	.LBE393:
 3452              	.LBE392:
 622:src/keys.c    **** 
 3453              		.loc 1 622 1 is_stmt 0 view .LVU1086
 3454 0044 38BD     		pop	{r3, r4, r5, pc}
 3455              	.L359:
 3456 0046 00BF     		.align	2
 3457              	.L358:
 3458 0048 00000000 		.word	StateWhileOn
 3459 004c 002F2004 		.word	69218048
 3460              		.cfi_endproc
 3461              	.LFE14:
ARM GAS  /tmp/cccKVeLo.s 			page 126


 3463              		.section	.text.current_catalogue_max,"ax",%progbits
 3464              		.align	1
 3465              		.p2align 2,,3
 3466              		.global	current_catalogue_max
 3467              		.syntax unified
 3468              		.thumb
 3469              		.thumb_func
 3470              		.fpu fpv4-sp-d16
 3472              	current_catalogue_max:
 3473              	.LFB39:
2056:src/keys.c    **** 	// A quick table of catalogue sizes
 3474              		.loc 1 2056 33 is_stmt 1 view -0
 3475              		.cfi_startproc
 3476              		@ args = 0, pretend = 0, frame = 0
 3477              		@ frame_needed = 0, uses_anonymous_args = 0
 3478              		@ link register save eliminated.
2059:src/keys.c    **** 	{
 3479              		.loc 1 2059 2 view .LVU1088
2090:src/keys.c    **** #endif
 3480              		.loc 1 2090 2 view .LVU1089
2090:src/keys.c    **** #endif
 3481              		.loc 1 2090 31 is_stmt 0 view .LVU1090
 3482 0000 024B     		ldr	r3, .L361
2090:src/keys.c    **** #endif
 3483              		.loc 1 2090 24 view .LVU1091
 3484 0002 034A     		ldr	r2, .L361+4
2090:src/keys.c    **** #endif
 3485              		.loc 1 2090 31 view .LVU1092
 3486 0004 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2092:src/keys.c    **** 
 3487              		.loc 1 2092 1 view .LVU1093
 3488 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 3489 0008 7047     		bx	lr
 3490              	.L362:
 3491 000a 00BF     		.align	2
 3492              	.L361:
 3493 000c 00000000 		.word	StateWhileOn
 3494 0010 00000000 		.word	.LANCHOR2
 3495              		.cfi_endproc
 3496              	.LFE39:
 3498              		.section	.text.current_catalogue,"ax",%progbits
 3499              		.align	1
 3500              		.p2align 2,,3
 3501              		.global	current_catalogue
 3502              		.syntax unified
 3503              		.thumb
 3504              		.thumb_func
 3505              		.fpu fpv4-sp-d16
 3507              	current_catalogue:
 3508              	.LVL287:
 3509              	.LFB41:
2105:src/keys.c    **** 	// A quick table of catalogue tables
 3510              		.loc 1 2105 33 is_stmt 1 view -0
 3511              		.cfi_startproc
 3512              		@ args = 0, pretend = 0, frame = 0
 3513              		@ frame_needed = 0, uses_anonymous_args = 0
 3514              		@ link register save eliminated.
ARM GAS  /tmp/cccKVeLo.s 			page 127


2108:src/keys.c    **** 	{
 3515              		.loc 1 2108 2 view .LVU1095
2135:src/keys.c    **** 	unsigned int c = State2.catalogue;
 3516              		.loc 1 2135 2 view .LVU1096
2136:src/keys.c    **** 	int m, i;
 3517              		.loc 1 2136 2 view .LVU1097
2136:src/keys.c    **** 	int m, i;
 3518              		.loc 1 2136 25 is_stmt 0 view .LVU1098
 3519 0000 314A     		ldr	r2, .L390
2136:src/keys.c    **** 	int m, i;
 3520              		.loc 1 2136 15 view .LVU1099
 3521 0002 937B     		ldrb	r3, [r2, #14]	@ zero_extendqisi2
 3522              	.LVL288:
2137:src/keys.c    **** 	unsigned p, q;
 3523              		.loc 1 2137 2 is_stmt 1 view .LVU1100
2138:src/keys.c    **** 
 3524              		.loc 1 2138 2 view .LVU1101
2140:src/keys.c    **** 		if (n == OP_ZERO)
 3525              		.loc 1 2140 2 view .LVU1102
2140:src/keys.c    **** 		if (n == OP_ZERO)
 3526              		.loc 1 2140 5 is_stmt 0 view .LVU1103
 3527 0004 102B     		cmp	r3, #16
 3528 0006 39D0     		beq	.L384
2145:src/keys.c    **** 		if (n == OP_ZERO)
 3529              		.loc 1 2145 2 is_stmt 1 view .LVU1104
2145:src/keys.c    **** 		if (n == OP_ZERO)
 3530              		.loc 1 2145 5 is_stmt 0 view .LVU1105
 3531 0008 112B     		cmp	r3, #17
 3532 000a 32D0     		beq	.L385
2150:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 3533              		.loc 1 2150 2 is_stmt 1 view .LVU1106
2150:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 3534              		.loc 1 2150 5 is_stmt 0 view .LVU1107
 3535 000c 122B     		cmp	r3, #18
 3536 000e 45D0     		beq	.L386
2163:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 3537              		.loc 1 2163 2 is_stmt 1 view .LVU1108
2163:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 3538              		.loc 1 2163 5 is_stmt 0 view .LVU1109
 3539 0010 0E2B     		cmp	r3, #14
 3540 0012 38D0     		beq	.L387
2166:src/keys.c    **** 
 3541              		.loc 1 2166 3 is_stmt 1 view .LVU1110
2166:src/keys.c    **** 
 3542              		.loc 1 2166 7 is_stmt 0 view .LVU1111
 3543 0014 2D4A     		ldr	r2, .L390+4
2168:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3544              		.loc 1 2168 35 view .LVU1112
 3545 0016 A3F10B01 		sub	r1, r3, #11
2168:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3546              		.loc 1 2168 5 view .LVU1113
 3547 001a 0429     		cmp	r1, #4
2166:src/keys.c    **** 
 3548              		.loc 1 2166 7 view .LVU1114
 3549 001c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 3550              	.LVL289:
2168:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
ARM GAS  /tmp/cccKVeLo.s 			page 128


 3551              		.loc 1 2168 2 is_stmt 1 view .LVU1115
2168:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3552              		.loc 1 2168 5 is_stmt 0 view .LVU1116
 3553 0020 38D9     		bls	.L370
2171:src/keys.c    **** 		return OP_NIL | OP_NOP;
 3554              		.loc 1 2171 2 is_stmt 1 view .LVU1117
2171:src/keys.c    **** 		return OP_NIL | OP_NOP;
 3555              		.loc 1 2171 5 is_stmt 0 view .LVU1118
 3556 0022 142B     		cmp	r3, #20
 3557 0024 4DD8     		bhi	.L378
2175:src/keys.c    **** 	p = cat[0];
 3558              		.loc 1 2175 2 is_stmt 1 view .LVU1119
2105:src/keys.c    **** 	// A quick table of catalogue tables
 3559              		.loc 1 2105 33 is_stmt 0 view .LVU1120
 3560 0026 10B4     		push	{r4}
 3561              		.cfi_def_cfa_offset 4
 3562              		.cfi_offset 4, -4
2175:src/keys.c    **** 	p = cat[0];
 3563              		.loc 1 2175 11 view .LVU1121
 3564 0028 00EBA001 		add	r1, r0, r0, asr #2
2175:src/keys.c    **** 	p = cat[0];
 3565              		.loc 1 2175 6 view .LVU1122
 3566 002c 5318     		adds	r3, r2, r1
 3567              	.LVL290:
2176:src/keys.c    **** 	q = cat[1];
 3568              		.loc 1 2176 2 is_stmt 1 view .LVU1123
2177:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3569              		.loc 1 2177 2 view .LVU1124
2178:src/keys.c    **** 
 3570              		.loc 1 2178 2 view .LVU1125
2178:src/keys.c    **** 
 3571              		.loc 1 2178 35 is_stmt 0 view .LVU1126
 3572 002e 4000     		lsls	r0, r0, #1
 3573              	.LVL291:
2176:src/keys.c    **** 	q = cat[1];
 3574              		.loc 1 2176 4 view .LVU1127
 3575 0030 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 3576              	.LVL292:
2177:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3577              		.loc 1 2177 4 view .LVU1128
 3578 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3579              	.LVL293:
2177:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3580              		.loc 1 2177 4 view .LVU1129
 3581 0034 2649     		ldr	r1, .L390+8
 3582              	.LVL294:
2178:src/keys.c    **** 
 3583              		.loc 1 2178 54 view .LVU1130
 3584 0036 C443     		mvns	r4, r0
2178:src/keys.c    **** 
 3585              		.loc 1 2178 35 view .LVU1131
 3586 0038 00F00600 		and	r0, r0, #6
2178:src/keys.c    **** 
 3587              		.loc 1 2178 54 view .LVU1132
 3588 003c 04F00604 		and	r4, r4, #6
2178:src/keys.c    **** 
 3589              		.loc 1 2178 24 view .LVU1133
ARM GAS  /tmp/cccKVeLo.s 			page 129


 3590 0040 0230     		adds	r0, r0, #2
2178:src/keys.c    **** 
 3591              		.loc 1 2178 48 view .LVU1134
 3592 0042 E340     		lsrs	r3, r3, r4
 3593              	.LVL295:
2178:src/keys.c    **** 
 3594              		.loc 1 2178 18 view .LVU1135
 3595 0044 02FA00F0 		lsl	r0, r2, r0
2178:src/keys.c    **** 
 3596              		.loc 1 2178 43 view .LVU1136
 3597 0048 1843     		orrs	r0, r0, r3
2178:src/keys.c    **** 
 3598              		.loc 1 2178 4 view .LVU1137
 3599 004a C0F30903 		ubfx	r3, r0, #0, #10
 3600              	.LVL296:
2181:src/keys.c    **** 		if (m < opcode_breaks[i])
 3601              		.loc 1 2181 2 is_stmt 1 view .LVU1138
2181:src/keys.c    **** 		if (m < opcode_breaks[i])
 3602              		.loc 1 2181 12 view .LVU1139
2178:src/keys.c    **** 
 3603              		.loc 1 2178 4 is_stmt 0 view .LVU1140
 3604 004e 3422     		movs	r2, #52
 3605              	.LVL297:
2181:src/keys.c    **** 		if (m < opcode_breaks[i])
 3606              		.loc 1 2181 8 view .LVU1141
 3607 0050 0020     		movs	r0, #0
 3608 0052 01E0     		b	.L374
 3609              	.LVL298:
 3610              	.L389:
2181:src/keys.c    **** 		if (m < opcode_breaks[i])
 3611              		.loc 1 2181 8 view .LVU1142
 3612 0054 11F8012B 		ldrb	r2, [r1], #1	@ zero_extendqisi2
 3613              	.LVL299:
 3614              	.L374:
2182:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 3615              		.loc 1 2182 3 is_stmt 1 view .LVU1143
2184:src/keys.c    **** 	}
 3616              		.loc 1 2184 3 view .LVU1144
2182:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 3617              		.loc 1 2182 6 is_stmt 0 view .LVU1145
 3618 0058 9A42     		cmp	r2, r3
 3619 005a 2FDC     		bgt	.L388
2181:src/keys.c    **** 		if (m < opcode_breaks[i])
 3620              		.loc 1 2181 25 discriminator 2 view .LVU1146
 3621 005c 0130     		adds	r0, r0, #1
 3622              	.LVL300:
2181:src/keys.c    **** 		if (m < opcode_breaks[i])
 3623              		.loc 1 2181 2 discriminator 2 view .LVU1147
 3624 005e 0728     		cmp	r0, #7
2184:src/keys.c    **** 	}
 3625              		.loc 1 2184 5 discriminator 2 view .LVU1148
 3626 0060 A3EB0203 		sub	r3, r3, r2
 3627              	.LVL301:
2181:src/keys.c    **** 		if (m < opcode_breaks[i])
 3628              		.loc 1 2181 24 is_stmt 1 discriminator 2 view .LVU1149
2181:src/keys.c    **** 		if (m < opcode_breaks[i])
 3629              		.loc 1 2181 12 discriminator 2 view .LVU1150
ARM GAS  /tmp/cccKVeLo.s 			page 130


2181:src/keys.c    **** 		if (m < opcode_breaks[i])
 3630              		.loc 1 2181 2 is_stmt 0 discriminator 2 view .LVU1151
 3631 0064 F6D1     		bne	.L389
2186:src/keys.c    **** }
 3632              		.loc 1 2186 2 is_stmt 1 view .LVU1152
2186:src/keys.c    **** }
 3633              		.loc 1 2186 9 is_stmt 0 view .LVU1153
 3634 0066 03F12000 		add	r0, r3, #32
 3635              	.LVL302:
2186:src/keys.c    **** }
 3636              		.loc 1 2186 9 view .LVU1154
 3637 006a 0002     		lsls	r0, r0, #8
 3638              	.L363:
2187:src/keys.c    **** 
 3639              		.loc 1 2187 1 view .LVU1155
 3640 006c 5DF8044B 		ldr	r4, [sp], #4
 3641              		.cfi_restore 4
 3642              		.cfi_def_cfa_offset 0
 3643 0070 7047     		bx	lr
 3644              	.LVL303:
 3645              	.L385:
2146:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 3646              		.loc 1 2146 3 is_stmt 1 view .LVU1156
2146:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 3647              		.loc 1 2146 6 is_stmt 0 view .LVU1157
 3648 0072 4B28     		cmp	r0, #75
 3649 0074 1FD0     		beq	.L376
2148:src/keys.c    **** 	}
 3650              		.loc 1 2148 3 is_stmt 1 view .LVU1158
2148:src/keys.c    **** 	}
 3651              		.loc 1 2148 10 is_stmt 0 view .LVU1159
 3652 0076 40F40450 		orr	r0, r0, #8448
 3653              	.LVL304:
2148:src/keys.c    **** 	}
 3654              		.loc 1 2148 10 view .LVU1160
 3655 007a 7047     		bx	lr
 3656              	.LVL305:
 3657              	.L384:
2141:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 3658              		.loc 1 2141 3 is_stmt 1 view .LVU1161
2141:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 3659              		.loc 1 2141 6 is_stmt 0 view .LVU1162
 3660 007c 4B28     		cmp	r0, #75
 3661 007e 17D0     		beq	.L375
2143:src/keys.c    **** 	}
 3662              		.loc 1 2143 3 is_stmt 1 view .LVU1163
2143:src/keys.c    **** 	}
 3663              		.loc 1 2143 10 is_stmt 0 view .LVU1164
 3664 0080 40F40050 		orr	r0, r0, #8192
 3665              	.LVL306:
2143:src/keys.c    **** 	}
 3666              		.loc 1 2143 10 view .LVU1165
 3667 0084 7047     		bx	lr
 3668              	.LVL307:
 3669              	.L387:
2163:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 3670              		.loc 1 2163 35 discriminator 1 view .LVU1166
ARM GAS  /tmp/cccKVeLo.s 			page 131


 3671 0086 917D     		ldrb	r1, [r2, #22]	@ zero_extendqisi2
2164:src/keys.c    **** 	else
 3672              		.loc 1 2164 7 discriminator 1 view .LVU1167
 3673 0088 124B     		ldr	r3, .L390+12
 3674              	.LVL308:
2164:src/keys.c    **** 	else
 3675              		.loc 1 2164 7 discriminator 1 view .LVU1168
 3676 008a 134A     		ldr	r2, .L390+16
 3677              	.LVL309:
2164:src/keys.c    **** 	else
 3678              		.loc 1 2164 7 discriminator 1 view .LVU1169
 3679 008c 11F0100F 		tst	r1, #16
 3680 0090 18BF     		it	ne
 3681 0092 1A46     		movne	r2, r3
 3682              	.L370:
 3683              	.LVL310:
2169:src/keys.c    **** 	}
 3684              		.loc 1 2169 3 is_stmt 1 view .LVU1170
 3685              	.LBB394:
 3686              	.LBI394:
2098:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
 3687              		.loc 1 2098 15 view .LVU1171
 3688              	.LBB395:
2099:src/keys.c    **** }
 3689              		.loc 1 2099 2 view .LVU1172
2099:src/keys.c    **** }
 3690              		.loc 1 2099 9 is_stmt 0 view .LVU1173
 3691 0094 105C     		ldrb	r0, [r2, r0]	@ zero_extendqisi2
 3692              	.LVL311:
2099:src/keys.c    **** }
 3693              		.loc 1 2099 9 view .LVU1174
 3694 0096 40F48840 		orr	r0, r0, #17408
 3695              	.LVL312:
2099:src/keys.c    **** }
 3696              		.loc 1 2099 9 view .LVU1175
 3697              	.LBE395:
 3698              	.LBE394:
2169:src/keys.c    **** 	}
 3699              		.loc 1 2169 10 view .LVU1176
 3700 009a 7047     		bx	lr
 3701              	.LVL313:
 3702              	.L386:
 3703              	.LBB396:
2151:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3704              		.loc 1 2151 3 is_stmt 1 view .LVU1177
2151:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3705              		.loc 1 2151 33 is_stmt 0 view .LVU1178
 3706 009c 0F4B     		ldr	r3, .L390+20
 3707              	.LVL314:
2151:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3708              		.loc 1 2151 13 view .LVU1179
 3709 009e 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 3710              	.LVL315:
2152:src/keys.c    **** 			// Monadic conversion routine
 3711              		.loc 1 2152 3 is_stmt 1 view .LVU1180
2152:src/keys.c    **** 			// Monadic conversion routine
 3712              		.loc 1 2152 6 is_stmt 0 view .LVU1181
ARM GAS  /tmp/cccKVeLo.s 			page 132


 3713 00a0 5728     		cmp	r0, #87
2154:src/keys.c    **** 		else
 3714              		.loc 1 2154 4 is_stmt 1 view .LVU1182
2154:src/keys.c    **** 		else
 3715              		.loc 1 2154 25 is_stmt 0 view .LVU1183
 3716 00a2 C6BF     		itte	gt
 3717 00a4 5838     		subgt	r0, r0, #88
 3718              	.LVL316:
2154:src/keys.c    **** 		else
 3719              		.loc 1 2154 18 view .LVU1184
 3720 00a6 40F40070 		orrgt	r0, r0, #512
2156:src/keys.c    **** 	}
 3721              		.loc 1 2156 4 is_stmt 1 view .LVU1185
2156:src/keys.c    **** 	}
 3722              		.loc 1 2156 11 is_stmt 0 view .LVU1186
 3723 00aa 40F40C40 		orrle	r0, r0, #35840
 3724 00ae 7047     		bx	lr
 3725              	.LVL317:
 3726              	.L375:
2156:src/keys.c    **** 	}
 3727              		.loc 1 2156 11 view .LVU1187
 3728              	.LBE396:
2142:src/keys.c    **** 		return CONST(n);
 3729              		.loc 1 2142 11 view .LVU1188
 3730 00b0 4FF42740 		mov	r0, #42752
 3731              	.LVL318:
2142:src/keys.c    **** 		return CONST(n);
 3732              		.loc 1 2142 11 view .LVU1189
 3733 00b4 7047     		bx	lr
 3734              	.LVL319:
 3735              	.L376:
2147:src/keys.c    **** 		return CONST_CMPLX(n);
 3736              		.loc 1 2147 11 view .LVU1190
 3737 00b6 4FF42840 		mov	r0, #43008
 3738              	.LVL320:
2147:src/keys.c    **** 		return CONST_CMPLX(n);
 3739              		.loc 1 2147 11 view .LVU1191
 3740 00ba 7047     		bx	lr
 3741              	.LVL321:
 3742              	.L388:
 3743              		.cfi_def_cfa_offset 4
 3744              		.cfi_offset 4, -4
2183:src/keys.c    **** 		m -= opcode_breaks[i];
 3745              		.loc 1 2183 4 is_stmt 1 view .LVU1192
2183:src/keys.c    **** 		m -= opcode_breaks[i];
 3746              		.loc 1 2183 29 is_stmt 0 view .LVU1193
 3747 00bc 03EB0020 		add	r0, r3, r0, lsl #8
 3748              	.LVL322:
2183:src/keys.c    **** 		m -= opcode_breaks[i];
 3749              		.loc 1 2183 29 view .LVU1194
 3750 00c0 D4E7     		b	.L363
 3751              	.LVL323:
 3752              	.L378:
 3753              		.cfi_def_cfa_offset 0
 3754              		.cfi_restore 4
2172:src/keys.c    **** 
 3755              		.loc 1 2172 10 view .LVU1195
ARM GAS  /tmp/cccKVeLo.s 			page 133


 3756 00c2 4FF48070 		mov	r0, #256
 3757              	.LVL324:
2187:src/keys.c    **** 
 3758              		.loc 1 2187 1 view .LVU1196
 3759 00c6 7047     		bx	lr
 3760              	.L391:
 3761              		.align	2
 3762              	.L390:
 3763 00c8 00000000 		.word	StateWhileOn
 3764 00cc 00000000 		.word	.LANCHOR6
 3765 00d0 01000000 		.word	.LANCHOR7+1
 3766 00d4 00000000 		.word	.LANCHOR4
 3767 00d8 00000000 		.word	.LANCHOR3
 3768 00dc 00000000 		.word	.LANCHOR5
 3769              		.cfi_endproc
 3770              	.LFE41:
 3772              		.section	.text.process_catalogue,"ax",%progbits
 3773              		.align	1
 3774              		.p2align 2,,3
 3775              		.syntax unified
 3776              		.thumb
 3777              		.thumb_func
 3778              		.fpu fpv4-sp-d16
 3780              	process_catalogue:
 3781              	.LVL325:
 3782              	.LFB43:
2201:src/keys.c    ****    int pos = State.catpos;
 3783              		.loc 1 2201 93 is_stmt 1 view -0
 3784              		.cfi_startproc
 3785              		@ args = 0, pretend = 0, frame = 16
 3786              		@ frame_needed = 0, uses_anonymous_args = 0
2201:src/keys.c    ****    int pos = State.catpos;
 3787              		.loc 1 2201 93 is_stmt 0 view .LVU1198
 3788 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3789              		.cfi_def_cfa_offset 36
 3790              		.cfi_offset 4, -36
 3791              		.cfi_offset 5, -32
 3792              		.cfi_offset 6, -28
 3793              		.cfi_offset 7, -24
 3794              		.cfi_offset 8, -20
 3795              		.cfi_offset 9, -16
 3796              		.cfi_offset 10, -12
 3797              		.cfi_offset 11, -8
 3798              		.cfi_offset 14, -4
2202:src/keys.c    ****    int ch;
 3799              		.loc 1 2202 14 view .LVU1199
 3800 0004 DFF8EC92 		ldr	r9, .L506+24
 3801              	.LBB397:
 3802              	.LBB398:
2090:src/keys.c    **** #endif
 3803              		.loc 1 2090 31 view .LVU1200
 3804 0008 B44F     		ldr	r7, .L506
 3805              	.LBE398:
 3806              	.LBE397:
2202:src/keys.c    ****    int ch;
 3807              		.loc 1 2202 14 view .LVU1201
 3808 000a D9F80040 		ldr	r4, [r9]
ARM GAS  /tmp/cccKVeLo.s 			page 134


 3809              	.LBB403:
 3810              	.LBB399:
2090:src/keys.c    **** #endif
 3811              		.loc 1 2090 31 view .LVU1202
 3812 000e 97F80EA0 		ldrb	r10, [r7, #14]	@ zero_extendqisi2
 3813              	.LBE399:
 3814              	.LBE403:
2202:src/keys.c    ****    int ch;
 3815              		.loc 1 2202 19 view .LVU1203
 3816 0012 B4F8DC57 		ldrh	r5, [r4, #2012]
 3817              	.LBB404:
 3818              	.LBB400:
2090:src/keys.c    **** #endif
 3819              		.loc 1 2090 24 view .LVU1204
 3820 0016 B24B     		ldr	r3, .L506+4
 3821              	.LBE400:
 3822              	.LBE404:
2202:src/keys.c    ****    int ch;
 3823              		.loc 1 2202 4 is_stmt 1 view .LVU1205
2201:src/keys.c    ****    int pos = State.catpos;
 3824              		.loc 1 2201 93 is_stmt 0 view .LVU1206
 3825 0018 85B0     		sub	sp, sp, #20
 3826              		.cfi_def_cfa_offset 56
 3827              	.LBB405:
 3828              	.LBB401:
2090:src/keys.c    **** #endif
 3829              		.loc 1 2090 24 view .LVU1207
 3830 001a 13F80A80 		ldrb	r8, [r3, r10]	@ zero_extendqisi2
 3831              	.LBE401:
 3832              	.LBE405:
2201:src/keys.c    ****    int pos = State.catpos;
 3833              		.loc 1 2201 93 view .LVU1208
 3834 001e 1646     		mov	r6, r2
2202:src/keys.c    ****    int ch;
 3835              		.loc 1 2202 8 view .LVU1209
 3836 0020 C5F34615 		ubfx	r5, r5, #5, #7
 3837              	.LVL326:
2203:src/keys.c    ****    const int ctmax = current_catalogue_max();
 3838              		.loc 1 2203 4 is_stmt 1 view .LVU1210
2204:src/keys.c    ****    const enum catalogues cat = (enum catalogues) State2.catalogue;
 3839              		.loc 1 2204 4 view .LVU1211
 3840              	.LBB406:
 3841              	.LBI397:
2056:src/keys.c    **** 	// A quick table of catalogue sizes
 3842              		.loc 1 2056 5 view .LVU1212
 3843              	.LBB402:
2059:src/keys.c    **** 	{
 3844              		.loc 1 2059 2 view .LVU1213
2090:src/keys.c    **** #endif
 3845              		.loc 1 2090 2 view .LVU1214
2090:src/keys.c    **** #endif
 3846              		.loc 1 2090 2 is_stmt 0 view .LVU1215
 3847              	.LBE402:
 3848              	.LBE406:
2205:src/keys.c    **** 
 3849              		.loc 1 2205 4 is_stmt 1 view .LVU1216
2207:src/keys.c    ****      switch (c) {
ARM GAS  /tmp/cccKVeLo.s 			page 135


 3850              		.loc 1 2207 4 view .LVU1217
2207:src/keys.c    ****      switch (c) {
 3851              		.loc 1 2207 7 is_stmt 0 view .LVU1218
 3852 0024 0029     		cmp	r1, #0
 3853 0026 65D0     		beq	.L491
2268:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
 3854              		.loc 1 2268 11 is_stmt 1 view .LVU1219
2268:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
 3855              		.loc 1 2268 14 is_stmt 0 view .LVU1220
 3856 0028 0129     		cmp	r1, #1
 3857 002a 00F0ED80 		beq	.L492
2302:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
 3858              		.loc 1 2302 11 is_stmt 1 view .LVU1221
2302:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
 3859              		.loc 1 2302 14 is_stmt 0 view .LVU1222
 3860 002e 0229     		cmp	r1, #2
 3861 0030 00F00B81 		beq	.L493
 3862              	.LVL327:
 3863              	.L428:
 3864              	.LBB407:
 3865              	.LBB408:
 445:src/keys.c    **** }
 3866              		.loc 1 445 2 is_stmt 1 view .LVU1223
 3867              	.LBB409:
 3868              	.LBI409:
 121:src/keys.c    **** {
 3869              		.loc 1 121 12 view .LVU1224
 3870              	.LBB410:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3871              		.loc 1 123 2 view .LVU1225
 133:src/keys.c    **** }
 3872              		.loc 1 133 2 view .LVU1226
 133:src/keys.c    **** }
 3873              		.loc 1 133 23 is_stmt 0 view .LVU1227
 3874 0034 AB4B     		ldr	r3, .L506+8
 3875              	.LBE410:
 3876              	.LBE409:
 445:src/keys.c    **** }
 3877              		.loc 1 445 49 view .LVU1228
 3878 0036 AC4A     		ldr	r2, .L506+12
 3879              	.LBB412:
 3880              	.LBB411:
 133:src/keys.c    **** }
 3881              		.loc 1 133 23 view .LVU1229
 3882 0038 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 3883              	.LBE411:
 3884              	.LBE412:
 445:src/keys.c    **** }
 3885              		.loc 1 445 49 view .LVU1230
 3886 003a 03EB4303 		add	r3, r3, r3, lsl #1
 3887 003e 02EB4303 		add	r3, r2, r3, lsl #1
 3888              	.LBE408:
 3889              	.LBE407:
 3890              	.LBB416:
 3891              	.LBB417:
 3892              	.LBB418:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
ARM GAS  /tmp/cccKVeLo.s 			page 136


 3893              		.loc 1 96 16 view .LVU1231
 3894 0042 0025     		movs	r5, #0
 3895              	.LVL328:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3896              		.loc 1 96 16 view .LVU1232
 3897              	.LBE418:
 3898              	.LBE417:
 3899              	.LBE416:
2312:src/keys.c    ****    reset_shift();
 3900              		.loc 1 2312 9 view .LVU1233
 3901 0044 585C     		ldrb	r0, [r3, r1]	@ zero_extendqisi2
 3902              	.LVL329:
2312:src/keys.c    ****    reset_shift();
 3903              		.loc 1 2312 9 view .LVU1234
 3904 0046 FFF7FEFF 		bl	remap_chars
 3905              	.LVL330:
2312:src/keys.c    ****    reset_shift();
 3906              		.loc 1 2312 9 view .LVU1235
 3907 004a 0446     		mov	r4, r0
 3908              	.LVL331:
2313:src/keys.c    ****    if (ch == '\0')
 3909              		.loc 1 2313 4 is_stmt 1 view .LVU1236
 3910              	.LBB423:
 3911              	.LBI416:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 3912              		.loc 1 104 13 view .LVU1237
 3913              	.LBE423:
 105:src/keys.c    **** }
 3914              		.loc 1 105 2 view .LVU1238
 3915              	.LBB424:
 3916              	.LBB422:
 3917              	.LBI417:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 3918              		.loc 1 94 20 view .LVU1239
 3919              	.LBB421:
  95:src/keys.c    **** 	State2.shifts = shift;
 3920              		.loc 1 95 2 view .LVU1240
 3921              	.LBB419:
 3922              	.LBI419:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 3923              		.loc 1 86 13 view .LVU1241
 3924              	.LBB420:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3925              		.loc 1 87 2 view .LVU1242
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3926              		.loc 1 87 18 is_stmt 0 view .LVU1243
 3927 004c FFF7FEFF 		bl	shift_down
 3928              	.LVL332:
  88:src/keys.c    **** }
 3929              		.loc 1 88 2 is_stmt 1 view .LVU1244
 3930              	.LBE420:
 3931              	.LBE419:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3932              		.loc 1 96 2 view .LVU1245
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3933              		.loc 1 96 16 is_stmt 0 view .LVU1246
 3934 0050 3D74     		strb	r5, [r7, #16]
ARM GAS  /tmp/cccKVeLo.s 			page 137


  98:src/keys.c    **** }
 3935              		.loc 1 98 2 is_stmt 1 view .LVU1247
 3936              	.LVL333:
  98:src/keys.c    **** }
 3937              		.loc 1 98 2 is_stmt 0 view .LVU1248
 3938              	.LBE421:
 3939              	.LBE422:
 3940              	.LBE424:
2314:src/keys.c    ****      return STATE_UNFINISHED;
 3941              		.loc 1 2314 4 is_stmt 1 view .LVU1249
2314:src/keys.c    ****      return STATE_UNFINISHED;
 3942              		.loc 1 2314 7 is_stmt 0 view .LVU1250
 3943 0052 002C     		cmp	r4, #0
 3944 0054 6FD0     		beq	.L490
2316:src/keys.c    ****      // No multi character search in alpha catalogues
 3945              		.loc 1 2316 4 is_stmt 1 view .LVU1251
2316:src/keys.c    ****      // No multi character search in alpha catalogues
 3946              		.loc 1 2316 7 is_stmt 0 view .LVU1252
 3947 0056 AAF10B0A 		sub	r10, r10, #11
 3948              	.LVL334:
2316:src/keys.c    ****      // No multi character search in alpha catalogues
 3949              		.loc 1 2316 7 view .LVU1253
 3950 005a BAF1040F 		cmp	r10, #4
 3951 005e 40F2CB80 		bls	.L442
2320:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 3952              		.loc 1 2320 4 is_stmt 1 view .LVU1254
2320:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 3953              		.loc 1 2320 8 is_stmt 0 view .LVU1255
 3954 0062 3D7F     		ldrb	r5, [r7, #28]	@ zero_extendqisi2
2320:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 3955              		.loc 1 2320 7 view .LVU1256
 3956 0064 092D     		cmp	r5, #9
 3957 0066 40F2C780 		bls	.L442
 3958              	.LVL335:
 3959              	.L410:
2325:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
 3960              		.loc 1 2325 4 is_stmt 1 view .LVU1257
2325:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
 3961              		.loc 1 2325 27 is_stmt 0 view .LVU1258
 3962 006a 7B19     		adds	r3, r7, r5
 3963 006c 0025     		movs	r5, #0
 3964 006e 83F82050 		strb	r5, [r3, #32]
2326:src/keys.c    ****      char buf[16];
 3965              		.loc 1 2326 4 is_stmt 1 view .LVU1259
 3966              	.LVL336:
2326:src/keys.c    ****      char buf[16];
 3967              		.loc 1 2326 18 view .LVU1260
2326:src/keys.c    ****      char buf[16];
 3968              		.loc 1 2326 4 is_stmt 0 view .LVU1261
 3969 0072 B8F1000F 		cmp	r8, #0
 3970 0076 00F0D780 		beq	.L488
 3971              	.LVL337:
 3972              	.L430:
 3973              	.LBB425:
2327:src/keys.c    ****      const char *cmd = catcmd(current_catalogue(pos), buf);
 3974              		.loc 1 2327 6 is_stmt 1 view .LVU1262
2328:src/keys.c    ****      int i;
ARM GAS  /tmp/cccKVeLo.s 			page 138


 3975              		.loc 1 2328 6 view .LVU1263
2328:src/keys.c    ****      int i;
 3976              		.loc 1 2328 24 is_stmt 0 view .LVU1264
 3977 007a 2846     		mov	r0, r5
 3978 007c FFF7FEFF 		bl	current_catalogue
 3979              	.LVL338:
 3980 0080 6946     		mov	r1, sp
 3981 0082 FFF7FEFF 		bl	catcmd
 3982              	.LVL339:
 3983 0086 0446     		mov	r4, r0
 3984              	.LVL340:
2329:src/keys.c    **** 
 3985              		.loc 1 2329 6 is_stmt 1 view .LVU1265
2331:src/keys.c    ****        cmd++;
 3986              		.loc 1 2331 6 view .LVU1266
2332:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
 3987              		.loc 1 2332 8 view .LVU1267
2331:src/keys.c    ****        cmd++;
 3988              		.loc 1 2331 10 is_stmt 0 view .LVU1268
 3989 0088 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3990              	.LVL341:
2331:src/keys.c    ****        cmd++;
 3991              		.loc 1 2331 9 view .LVU1269
 3992 008a 1428     		cmp	r0, #20
 3993 008c 04BF     		itt	eq
 3994 008e 6078     		ldrbeq	r0, [r4, #1]	@ zero_extendqisi2
2332:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
 3995              		.loc 1 2332 11 view .LVU1270
 3996 0090 0134     		addeq	r4, r4, #1
 3997              	.LVL342:
2333:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 3998              		.loc 1 2333 6 is_stmt 1 view .LVU1271
2333:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 3999              		.loc 1 2333 16 view .LVU1272
2333:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 4000              		.loc 1 2333 6 is_stmt 0 view .LVU1273
 4001 0092 0028     		cmp	r0, #0
 4002 0094 00F0BF80 		beq	.L432
 4003 0098 DFF85CB2 		ldr	fp, .L506+28
 4004 009c C4F1010A 		rsb	r10, r4, #1
 4005 00a0 06E0     		b	.L435
 4006              	.LVL343:
 4007              	.L495:
 4008              	.LBB426:
2338:src/keys.c    **** 	 break;
 4009              		.loc 1 2338 16 view .LVU1274
 4010 00a2 C0F2BA80 		blt	.L434
 4011              	.LBE426:
2333:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 4012              		.loc 1 2333 19 discriminator 2 view .LVU1275
 4013 00a6 14F8010F 		ldrb	r0, [r4, #1]!	@ zero_extendqisi2
 4014              	.LVL344:
2333:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 4015              		.loc 1 2333 6 discriminator 2 view .LVU1276
 4016 00aa 0028     		cmp	r0, #0
 4017 00ac 00F0BF80 		beq	.L494
 4018              	.LVL345:
ARM GAS  /tmp/cccKVeLo.s 			page 139


 4019              	.L435:
 4020              	.LBB427:
2334:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
 4021              		.loc 1 2334 8 is_stmt 1 view .LVU1277
2334:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
 4022              		.loc 1 2334 22 is_stmt 0 view .LVU1278
 4023 00b0 FFF7FEFF 		bl	remap_chars
 4024              	.LVL346:
2338:src/keys.c    **** 	 break;
 4025              		.loc 1 2338 13 is_stmt 1 view .LVU1279
 4026              	.LBE427:
2333:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 4027              		.loc 1 2333 32 view .LVU1280
 4028              	.LBB428:
2335:src/keys.c    ****        if (c > cl)
 4029              		.loc 1 2335 8 view .LVU1281
2335:src/keys.c    ****        if (c > cl)
 4030              		.loc 1 2335 46 is_stmt 0 view .LVU1282
 4031 00b4 1BF8013F 		ldrb	r3, [fp, #1]!	@ zero_extendqisi2
 4032              	.LVL347:
2336:src/keys.c    **** 	 goto set_pos;
 4033              		.loc 1 2336 8 is_stmt 1 view .LVU1283
2336:src/keys.c    **** 	 goto set_pos;
 4034              		.loc 1 2336 11 is_stmt 0 view .LVU1284
 4035 00b8 9842     		cmp	r0, r3
 4036 00ba 0AEB0402 		add	r2, r10, r4
 4037              	.LVL348:
2336:src/keys.c    **** 	 goto set_pos;
 4038              		.loc 1 2336 11 view .LVU1285
 4039              	.LBE428:
2333:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 4040              		.loc 1 2333 16 is_stmt 1 view .LVU1286
 4041              	.LBB429:
2336:src/keys.c    **** 	 goto set_pos;
 4042              		.loc 1 2336 11 is_stmt 0 view .LVU1287
 4043 00be F0DD     		ble	.L495
 4044              	.LVL349:
 4045              	.L433:
2336:src/keys.c    **** 	 goto set_pos;
 4046              		.loc 1 2336 11 view .LVU1288
 4047 00c0 D9F80040 		ldr	r4, [r9]
 4048              	.L413:
2336:src/keys.c    **** 	 goto set_pos;
 4049              		.loc 1 2336 11 view .LVU1289
 4050              	.LBE429:
 4051              	.LBE425:
2347:src/keys.c    ****      --pos;
 4052              		.loc 1 2347 10 is_stmt 1 view .LVU1290
 4053 00c4 002E     		cmp	r6, #0
 4054 00c6 00F0B680 		beq	.L417
2347:src/keys.c    ****      --pos;
 4055              		.loc 1 2347 20 is_stmt 0 view .LVU1291
 4056 00ca 4DB1     		cbz	r5, .L411
 4057              	.LVL350:
 4058              	.L489:
2347:src/keys.c    ****      --pos;
 4059              		.loc 1 2347 20 view .LVU1292
ARM GAS  /tmp/cccKVeLo.s 			page 140


 4060 00cc 2846     		mov	r0, r5
 4061 00ce FFF7FEFF 		bl	current_catalogue
 4062              	.LVL351:
2348:src/keys.c    ****    State.catpos = pos;
 4063              		.loc 1 2348 6 is_stmt 1 view .LVU1293
2347:src/keys.c    ****      --pos;
 4064              		.loc 1 2347 10 view .LVU1294
 4065              	.LBB430:
 4066              	.LBI430:
2194:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 4067              		.loc 1 2194 12 view .LVU1295
 4068              	.LBB431:
2195:src/keys.c    **** }
 4069              		.loc 1 2195 2 view .LVU1296
2195:src/keys.c    **** }
 4070              		.loc 1 2195 33 is_stmt 0 view .LVU1297
 4071 00d2 00F0F000 		and	r0, r0, #240
 4072              	.LBE431:
 4073              	.LBE430:
2347:src/keys.c    ****      --pos;
 4074              		.loc 1 2347 27 view .LVU1298
 4075 00d6 F028     		cmp	r0, #240
 4076 00d8 40F0AD80 		bne	.L417
2347:src/keys.c    ****      --pos;
 4077              		.loc 1 2347 20 view .LVU1299
 4078 00dc 013D     		subs	r5, r5, #1
 4079              	.LVL352:
2347:src/keys.c    ****      --pos;
 4080              		.loc 1 2347 20 view .LVU1300
 4081 00de F5D1     		bne	.L489
 4082              	.LVL353:
 4083              	.L411:
2349:src/keys.c    ****    return STATE_UNFINISHED;
 4084              		.loc 1 2349 4 is_stmt 1 view .LVU1301
2349:src/keys.c    ****    return STATE_UNFINISHED;
 4085              		.loc 1 2349 17 is_stmt 0 view .LVU1302
 4086 00e0 B4F8DC37 		ldrh	r3, [r4, #2012]
 4087 00e4 65F34B13 		bfi	r3, r5, #5, #7
 4088 00e8 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2350:src/keys.c    ****  }
 4089              		.loc 1 2350 4 is_stmt 1 view .LVU1303
2350:src/keys.c    ****  }
 4090              		.loc 1 2350 11 is_stmt 0 view .LVU1304
 4091 00ec 3320     		movs	r0, #51
 4092              	.L502:
2351:src/keys.c    **** 
 4093              		.loc 1 2351 2 view .LVU1305
 4094 00ee 05B0     		add	sp, sp, #20
 4095              		.cfi_remember_state
 4096              		.cfi_def_cfa_offset 36
 4097              		@ sp needed
 4098 00f0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4099              	.LVL354:
 4100              	.L491:
 4101              		.cfi_restore_state
2208:src/keys.c    **** #ifdef DM42
 4102              		.loc 1 2208 6 is_stmt 1 view .LVU1306
ARM GAS  /tmp/cccKVeLo.s 			page 141


 4103 00f4 431F     		subs	r3, r0, #5
 4104 00f6 1F2B     		cmp	r3, #31
 4105 00f8 2FD8     		bhi	.L394
 4106 00fa DFE803F0 		tbb	[pc, r3]
 4107              	.LVL355:
 4108              	.L396:
 4109 00fe 35       		.byte	(.L400-.L396)/2
 4110 00ff 2E       		.byte	(.L394-.L396)/2
 4111 0100 2E       		.byte	(.L394-.L396)/2
 4112 0101 2E       		.byte	(.L394-.L396)/2
 4113 0102 2E       		.byte	(.L394-.L396)/2
 4114 0103 2E       		.byte	(.L394-.L396)/2
 4115 0104 2E       		.byte	(.L394-.L396)/2
 4116 0105 35       		.byte	(.L400-.L396)/2
 4117 0106 2E       		.byte	(.L394-.L396)/2
 4118 0107 2E       		.byte	(.L394-.L396)/2
 4119 0108 2E       		.byte	(.L394-.L396)/2
 4120 0109 20       		.byte	(.L399-.L396)/2
 4121 010a 2E       		.byte	(.L394-.L396)/2
 4122 010b 64       		.byte	(.L398-.L396)/2
 4123 010c 2E       		.byte	(.L394-.L396)/2
 4124 010d 2E       		.byte	(.L394-.L396)/2
 4125 010e 2E       		.byte	(.L394-.L396)/2
 4126 010f 2E       		.byte	(.L394-.L396)/2
 4127 0110 2E       		.byte	(.L394-.L396)/2
 4128 0111 6B       		.byte	(.L397-.L396)/2
 4129 0112 2E       		.byte	(.L394-.L396)/2
 4130 0113 2E       		.byte	(.L394-.L396)/2
 4131 0114 2E       		.byte	(.L394-.L396)/2
 4132 0115 2E       		.byte	(.L394-.L396)/2
 4133 0116 2E       		.byte	(.L394-.L396)/2
 4134 0117 2E       		.byte	(.L394-.L396)/2
 4135 0118 2E       		.byte	(.L394-.L396)/2
 4136 0119 2E       		.byte	(.L394-.L396)/2
 4137 011a 2E       		.byte	(.L394-.L396)/2
 4138 011b 2E       		.byte	(.L394-.L396)/2
 4139 011c 2E       		.byte	(.L394-.L396)/2
 4140 011d 27       		.byte	(.L395-.L396)/2
 4141              		.p2align 1
 4142              	.L501:
2297:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 4143              		.loc 1 2297 42 is_stmt 0 discriminator 1 view .LVU1307
 4144 011e 734A     		ldr	r2, .L506+16
 4145              	.LVL356:
2297:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 4146              		.loc 1 2297 42 discriminator 1 view .LVU1308
 4147 0120 7B69     		ldr	r3, [r7, #20]
2297:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 4148              		.loc 1 2297 24 discriminator 1 view .LVU1309
 4149 0122 1A42     		tst	r2, r3
 4150 0124 75D0     		beq	.L425
2299:src/keys.c    ****        return STATE_UNFINISHED;
 4151              		.loc 1 2299 8 is_stmt 1 view .LVU1310
2299:src/keys.c    ****        return STATE_UNFINISHED;
 4152              		.loc 1 2299 38 is_stmt 0 view .LVU1311
 4153 0126 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4154 0128 C3F30012 		ubfx	r2, r3, #4, #1
ARM GAS  /tmp/cccKVeLo.s 			page 142


2299:src/keys.c    ****        return STATE_UNFINISHED;
 4155              		.loc 1 2299 30 view .LVU1312
 4156 012c C2F10102 		rsb	r2, r2, #1
2299:src/keys.c    ****        return STATE_UNFINISHED;
 4157              		.loc 1 2299 26 view .LVU1313
 4158 0130 62F30413 		bfi	r3, r2, #4, #1
 4159 0134 BB75     		strb	r3, [r7, #22]
 4160              	.LVL357:
 4161              	.L490:
2300:src/keys.c    ****      }
 4162              		.loc 1 2300 8 is_stmt 1 view .LVU1314
2300:src/keys.c    ****      }
 4163              		.loc 1 2300 15 is_stmt 0 view .LVU1315
 4164 0136 3320     		movs	r0, #51
 4165              	.L392:
2351:src/keys.c    **** 
 4166              		.loc 1 2351 2 view .LVU1316
 4167 0138 05B0     		add	sp, sp, #20
 4168              		.cfi_remember_state
 4169              		.cfi_def_cfa_offset 36
 4170              		@ sp needed
 4171 013a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4172              	.LVL358:
 4173              	.L399:
 4174              		.cfi_restore_state
2237:src/keys.c    **** 	 if (--CmdLineLength > 0)
 4175              		.loc 1 2237 8 is_stmt 1 view .LVU1317
2237:src/keys.c    **** 	 if (--CmdLineLength > 0)
 4176              		.loc 1 2237 11 is_stmt 0 view .LVU1318
 4177 013e 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 4178 0140 23B1     		cbz	r3, .L395
2237:src/keys.c    **** 	 if (--CmdLineLength > 0)
 4179              		.loc 1 2237 33 discriminator 1 view .LVU1319
 4180 0142 FFF7FEFF 		bl	keyticks
 4181              	.LVL359:
2237:src/keys.c    **** 	 if (--CmdLineLength > 0)
 4182              		.loc 1 2237 30 discriminator 1 view .LVU1320
 4183 0146 1D28     		cmp	r0, #29
 4184 0148 40F39580 		ble	.L496
 4185              	.L395:
2247:src/keys.c    ****        return STATE_UNFINISHED;
 4186              		.loc 1 2247 8 is_stmt 1 view .LVU1321
 4187 014c 0020     		movs	r0, #0
 4188 014e FFF7FEFF 		bl	init_cat
 4189              	.LVL360:
2248:src/keys.c    **** 
 4190              		.loc 1 2248 8 view .LVU1322
2248:src/keys.c    **** 
 4191              		.loc 1 2248 15 is_stmt 0 view .LVU1323
 4192 0152 3320     		movs	r0, #51
2351:src/keys.c    **** 
 4193              		.loc 1 2351 2 view .LVU1324
 4194 0154 05B0     		add	sp, sp, #20
 4195              		.cfi_remember_state
 4196              		.cfi_def_cfa_offset 36
 4197              		@ sp needed
 4198 0156 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
ARM GAS  /tmp/cccKVeLo.s 			page 143


 4199              	.LVL361:
 4200              	.L394:
 4201              		.cfi_restore_state
 4202              	.LBB432:
 4203              	.LBI407:
 389:src/keys.c    **** {
 4204              		.loc 1 389 12 is_stmt 1 discriminator 4 view .LVU1325
 4205              	.LBB413:
 391:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4206              		.loc 1 391 2 discriminator 4 view .LVU1326
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4207              		.loc 1 439 2 discriminator 4 view .LVU1327
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4208              		.loc 1 439 6 is_stmt 0 discriminator 4 view .LVU1328
 4209 015a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4210              		.loc 1 439 5 discriminator 4 view .LVU1329
 4211 015c 13F0100F 		tst	r3, #16
 4212 0160 14BF     		ite	ne
 4213 0162 0421     		movne	r1, #4
 4214              	.LVL362:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4215              		.loc 1 439 5 discriminator 4 view .LVU1330
 4216 0164 0021     		moveq	r1, #0
 4217 0166 65E7     		b	.L428
 4218              	.LVL363:
 4219              	.L400:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4220              		.loc 1 439 5 discriminator 4 view .LVU1331
 4221              	.LBE413:
 4222              	.LBE432:
2215:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 4223              		.loc 1 2215 8 is_stmt 1 view .LVU1332
2215:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 4224              		.loc 1 2215 11 is_stmt 0 view .LVU1333
 4225 0168 4545     		cmp	r5, r8
 4226 016a EFDA     		bge	.L395
 4227 016c 2846     		mov	r0, r5
 4228              	.LVL364:
2215:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 4229              		.loc 1 2215 24 discriminator 1 view .LVU1334
 4230 016e 002E     		cmp	r6, #0
 4231 0170 00F08D80 		beq	.L497
 4232              	.LVL365:
 4233              	.LBB433:
 4234              	.LBI433:
2194:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 4235              		.loc 1 2194 12 is_stmt 1 view .LVU1335
 4236              	.LBB434:
2195:src/keys.c    **** }
 4237              		.loc 1 2195 2 view .LVU1336
2195:src/keys.c    **** }
 4238              		.loc 1 2195 10 is_stmt 0 view .LVU1337
 4239 0174 FFF7FEFF 		bl	current_catalogue
 4240              	.LVL366:
2195:src/keys.c    **** }
 4241              		.loc 1 2195 33 view .LVU1338
ARM GAS  /tmp/cccKVeLo.s 			page 144


 4242 0178 00F0F003 		and	r3, r0, #240
 4243              	.LBE434:
 4244              	.LBE433:
2215:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 4245              		.loc 1 2215 27 view .LVU1339
 4246 017c F02B     		cmp	r3, #240
 4247              	.LBB436:
 4248              	.LBB435:
2195:src/keys.c    **** }
 4249              		.loc 1 2195 10 view .LVU1340
 4250 017e 0446     		mov	r4, r0
 4251              	.LBE435:
 4252              	.LBE436:
2215:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 4253              		.loc 1 2215 27 view .LVU1341
 4254 0180 E4D0     		beq	.L395
 4255              	.L403:
 4256              	.LBB437:
2216:src/keys.c    **** 
 4257              		.loc 1 2216 3 is_stmt 1 view .LVU1342
2218:src/keys.c    **** 
 4258              		.loc 1 2218 3 view .LVU1343
 4259 0182 0020     		movs	r0, #0
 4260 0184 FFF7FEFF 		bl	init_cat
 4261              	.LVL367:
2220:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 4262              		.loc 1 2220 3 view .LVU1344
2220:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 4263              		.loc 1 2220 6 is_stmt 0 view .LVU1345
 4264 0188 14F47043 		ands	r3, r4, #61440
 4265 018c 00F08C80 		beq	.L404
2220:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 4266              		.loc 1 2220 7 discriminator 1 view .LVU1346
 4267 0190 B3F5704F 		cmp	r3, #61440
 4268 0194 00F08880 		beq	.L404
 4269              	.LBB438:
2221:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4270              		.loc 1 2221 5 is_stmt 1 view .LVU1347
2221:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4271              		.loc 1 2221 31 is_stmt 0 view .LVU1348
 4272 0198 C4F30723 		ubfx	r3, r4, #8, #8
 4273 019c A3F12005 		sub	r5, r3, #32
 4274              	.LVL368:
2221:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4275              		.loc 1 2221 31 view .LVU1349
 4276 01a0 EDB2     		uxtb	r5, r5
 4277              	.LVL369:
2222:src/keys.c    **** 	     return op;
 4278              		.loc 1 2222 5 is_stmt 1 view .LVU1350
2222:src/keys.c    **** 	     return op;
 4279              		.loc 1 2222 8 is_stmt 0 view .LVU1351
 4280 01a2 012D     		cmp	r5, #1
 4281 01a4 40F28980 		bls	.L405
2222:src/keys.c    **** 	     return op;
 4282              		.loc 1 2222 56 discriminator 1 view .LVU1352
 4283 01a8 6C2D     		cmp	r5, #108
 4284 01aa 00F08680 		beq	.L405
ARM GAS  /tmp/cccKVeLo.s 			page 145


2222:src/keys.c    **** 	     return op;
 4285              		.loc 1 2222 77 discriminator 2 view .LVU1353
 4286 01ae 242D     		cmp	r5, #36
 4287 01b0 00F08380 		beq	.L405
2224:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4288              		.loc 1 2224 5 is_stmt 1 view .LVU1354
2224:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4289              		.loc 1 2224 30 is_stmt 0 view .LVU1355
 4290 01b4 A5F12D02 		sub	r2, r5, #45
2224:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4291              		.loc 1 2224 8 view .LVU1356
 4292 01b8 062A     		cmp	r2, #6
 4293 01ba 00F29F80 		bhi	.L408
2225:src/keys.c    **** 	   else
 4294              		.loc 1 2225 7 is_stmt 1 view .LVU1357
2225:src/keys.c    **** 	   else
 4295              		.loc 1 2225 28 is_stmt 0 view .LVU1358
 4296 01be 4D3B     		subs	r3, r3, #77
2225:src/keys.c    **** 	   else
 4297              		.loc 1 2225 19 view .LVU1359
 4298 01c0 FB73     		strb	r3, [r7, #15]
 4299              	.LBE438:
 4300              	.LBE437:
2234:src/keys.c    **** 
 4301              		.loc 1 2234 15 view .LVU1360
 4302 01c2 3320     		movs	r0, #51
 4303              	.LBB448:
 4304              	.LBB441:
 4305 01c4 B8E7     		b	.L392
 4306              	.LVL370:
 4307              	.L398:
2234:src/keys.c    **** 
 4308              		.loc 1 2234 15 view .LVU1361
 4309              	.LBE441:
 4310              	.LBE448:
2251:src/keys.c    ****        if (pos == 0)
 4311              		.loc 1 2251 8 is_stmt 1 view .LVU1362
2251:src/keys.c    ****        if (pos == 0)
 4312              		.loc 1 2251 22 is_stmt 0 view .LVU1363
 4313 01c6 0023     		movs	r3, #0
 4314 01c8 3B77     		strb	r3, [r7, #28]
2252:src/keys.c    **** 	 goto set_max;
 4315              		.loc 1 2252 8 is_stmt 1 view .LVU1364
2252:src/keys.c    **** 	 goto set_max;
 4316              		.loc 1 2252 11 is_stmt 0 view .LVU1365
 4317 01ca 002D     		cmp	r5, #0
 4318 01cc 5DD1     		bne	.L498
 4319              	.LVL371:
 4320              	.L412:
2345:src/keys.c    ****  set_pos:
 4321              		.loc 1 2345 4 is_stmt 1 view .LVU1366
2345:src/keys.c    ****  set_pos:
 4322              		.loc 1 2345 8 is_stmt 0 view .LVU1367
 4323 01ce 08F1FF35 		add	r5, r8, #-1
 4324              	.LVL372:
2345:src/keys.c    ****  set_pos:
 4325              		.loc 1 2345 8 view .LVU1368
ARM GAS  /tmp/cccKVeLo.s 			page 146


 4326 01d2 77E7     		b	.L413
 4327              	.LVL373:
 4328              	.L397:
2259:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 4329              		.loc 1 2259 8 is_stmt 1 view .LVU1369
2259:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 4330              		.loc 1 2259 22 is_stmt 0 view .LVU1370
 4331 01d4 0023     		movs	r3, #0
 4332 01d6 3B77     		strb	r3, [r7, #28]
2260:src/keys.c    ****        if (pos >= ctmax)
 4333              		.loc 1 2260 8 is_stmt 1 view .LVU1371
2260:src/keys.c    ****        if (pos >= ctmax)
 4334              		.loc 1 2260 14 is_stmt 0 view .LVU1372
 4335 01d8 06E0     		b	.L416
 4336              	.LVL374:
 4337              	.L499:
2260:src/keys.c    ****        if (pos >= ctmax)
 4338              		.loc 1 2260 29 discriminator 1 view .LVU1373
 4339 01da 66B3     		cbz	r6, .L417
 4340              	.LBB449:
 4341              	.LBB450:
2195:src/keys.c    **** }
 4342              		.loc 1 2195 10 view .LVU1374
 4343 01dc FFF7FEFF 		bl	current_catalogue
 4344              	.LVL375:
2195:src/keys.c    **** }
 4345              		.loc 1 2195 33 view .LVU1375
 4346 01e0 00F0F000 		and	r0, r0, #240
 4347              	.LBE450:
 4348              	.LBE449:
2260:src/keys.c    ****        if (pos >= ctmax)
 4349              		.loc 1 2260 41 view .LVU1376
 4350 01e4 F028     		cmp	r0, #240
 4351 01e6 26D1     		bne	.L417
 4352              	.L416:
2260:src/keys.c    ****        if (pos >= ctmax)
 4353              		.loc 1 2260 65 is_stmt 1 discriminator 3 view .LVU1377
2260:src/keys.c    ****        if (pos >= ctmax)
 4354              		.loc 1 2260 14 discriminator 3 view .LVU1378
 4355 01e8 0135     		adds	r5, r5, #1
 4356              	.LVL376:
 4357              	.LBB453:
 4358              	.LBI449:
2194:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 4359              		.loc 1 2194 12 discriminator 3 view .LVU1379
 4360              	.LBB451:
2195:src/keys.c    **** }
 4361              		.loc 1 2195 2 discriminator 3 view .LVU1380
 4362              	.LBE451:
 4363              	.LBE453:
2260:src/keys.c    ****        if (pos >= ctmax)
 4364              		.loc 1 2260 14 is_stmt 0 discriminator 3 view .LVU1381
 4365 01ea A845     		cmp	r8, r5
 4366              	.LBB454:
 4367              	.LBB452:
2195:src/keys.c    **** }
 4368              		.loc 1 2195 10 discriminator 3 view .LVU1382
ARM GAS  /tmp/cccKVeLo.s 			page 147


 4369 01ec 2846     		mov	r0, r5
 4370              	.LBE452:
 4371              	.LBE454:
2260:src/keys.c    ****        if (pos >= ctmax)
 4372              		.loc 1 2260 14 discriminator 3 view .LVU1383
 4373 01ee F4DC     		bgt	.L499
 4374              	.LVL377:
2347:src/keys.c    ****      --pos;
 4375              		.loc 1 2347 10 is_stmt 1 view .LVU1384
2262:src/keys.c    ****        goto set_pos;
 4376              		.loc 1 2262 7 is_stmt 0 view .LVU1385
 4377 01f0 3546     		mov	r5, r6
 4378              	.LVL378:
2347:src/keys.c    ****      --pos;
 4379              		.loc 1 2347 10 view .LVU1386
 4380 01f2 06B3     		cbz	r6, .L417
 4381              	.LVL379:
2347:src/keys.c    ****      --pos;
 4382              		.loc 1 2347 10 view .LVU1387
 4383 01f4 0025     		movs	r5, #0
 4384              	.LVL380:
2347:src/keys.c    ****      --pos;
 4385              		.loc 1 2347 10 view .LVU1388
 4386 01f6 73E7     		b	.L411
 4387              	.LVL381:
 4388              	.L442:
2320:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 4389              		.loc 1 2320 8 view .LVU1389
 4390 01f8 2B46     		mov	r3, r5
2321:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 4391              		.loc 1 2321 6 is_stmt 1 view .LVU1390
2321:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 4392              		.loc 1 2321 31 is_stmt 0 view .LVU1391
 4393 01fa 3B44     		add	r3, r3, r7
2321:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 4394              		.loc 1 2321 27 view .LVU1392
 4395 01fc 0135     		adds	r5, r5, #1
 4396 01fe EDB2     		uxtb	r5, r5
 4397 0200 3D77     		strb	r5, [r7, #28]
2321:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 4398              		.loc 1 2321 31 view .LVU1393
 4399 0202 83F82040 		strb	r4, [r3, #32]
 4400 0206 30E7     		b	.L410
 4401              	.LVL382:
 4402              	.L492:
2269:src/keys.c    ****        /*
 4403              		.loc 1 2269 6 is_stmt 1 view .LVU1394
2269:src/keys.c    ****        /*
 4404              		.loc 1 2269 9 is_stmt 0 view .LVU1395
 4405 0208 BAF1120F 		cmp	r10, #18
 4406 020c 21D0     		beq	.L500
 4407              	.L419:
2297:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 4408              		.loc 1 2297 11 is_stmt 1 view .LVU1396
2297:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 4409              		.loc 1 2297 14 is_stmt 0 view .LVU1397
 4410 020e 2428     		cmp	r0, #36
ARM GAS  /tmp/cccKVeLo.s 			page 148


 4411 0210 85D0     		beq	.L501
 4412              	.LVL383:
 4413              	.L425:
2312:src/keys.c    ****    reset_shift();
 4414              		.loc 1 2312 4 is_stmt 1 view .LVU1398
 4415              	.LBB455:
 389:src/keys.c    **** {
 4416              		.loc 1 389 12 view .LVU1399
 4417              	.LBB414:
 391:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4418              		.loc 1 391 2 view .LVU1400
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4419              		.loc 1 439 2 view .LVU1401
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4420              		.loc 1 439 5 is_stmt 0 view .LVU1402
 4421 0212 0121     		movs	r1, #1
 4422              	.LVL384:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4423              		.loc 1 439 5 view .LVU1403
 4424 0214 0EE7     		b	.L428
 4425              	.LVL385:
 4426              	.L432:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4427              		.loc 1 439 5 view .LVU1404
 4428 0216 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 4429              	.LVL386:
 4430              	.L434:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4431              		.loc 1 439 5 view .LVU1405
 4432              	.LBE414:
 4433              	.LBE455:
 4434              	.LBB456:
2341:src/keys.c    ****        goto set_pos;
 4435              		.loc 1 2341 6 is_stmt 1 view .LVU1406
2341:src/keys.c    ****        goto set_pos;
 4436              		.loc 1 2341 9 is_stmt 0 view .LVU1407
 4437 021a 002B     		cmp	r3, #0
 4438 021c 3FF450AF 		beq	.L433
 4439              	.LBE456:
2326:src/keys.c    ****      char buf[16];
 4440              		.loc 1 2326 31 is_stmt 1 view .LVU1408
 4441 0220 0135     		adds	r5, r5, #1
 4442              	.LVL387:
2326:src/keys.c    ****      char buf[16];
 4443              		.loc 1 2326 18 view .LVU1409
2326:src/keys.c    ****      char buf[16];
 4444              		.loc 1 2326 4 is_stmt 0 view .LVU1410
 4445 0222 A845     		cmp	r8, r5
 4446 0224 7FF429AF 		bne	.L430
 4447              	.LVL388:
 4448              	.L488:
2326:src/keys.c    ****      char buf[16];
 4449              		.loc 1 2326 4 view .LVU1411
 4450 0228 D9F80040 		ldr	r4, [r9]
 4451 022c CFE7     		b	.L412
 4452              	.LVL389:
 4453              	.L494:
ARM GAS  /tmp/cccKVeLo.s 			page 149


2326:src/keys.c    ****      char buf[16];
 4454              		.loc 1 2326 4 view .LVU1412
 4455 022e 3A44     		add	r2, r2, r7
 4456              	.LVL390:
2326:src/keys.c    ****      char buf[16];
 4457              		.loc 1 2326 4 view .LVU1413
 4458 0230 92F82030 		ldrb	r3, [r2, #32]	@ zero_extendqisi2
 4459              	.LVL391:
2326:src/keys.c    ****      char buf[16];
 4460              		.loc 1 2326 4 view .LVU1414
 4461 0234 F1E7     		b	.L434
 4462              	.LVL392:
 4463              	.L417:
2349:src/keys.c    ****    return STATE_UNFINISHED;
 4464              		.loc 1 2349 17 view .LVU1415
 4465 0236 B4F8DC37 		ldrh	r3, [r4, #2012]
 4466 023a 05F07F05 		and	r5, r5, #127
 4467              	.LVL393:
2349:src/keys.c    ****    return STATE_UNFINISHED;
 4468              		.loc 1 2349 4 is_stmt 1 view .LVU1416
2349:src/keys.c    ****    return STATE_UNFINISHED;
 4469              		.loc 1 2349 17 is_stmt 0 view .LVU1417
 4470 023e 65F34B13 		bfi	r3, r5, #5, #7
 4471 0242 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2350:src/keys.c    ****  }
 4472              		.loc 1 2350 4 is_stmt 1 view .LVU1418
2350:src/keys.c    ****  }
 4473              		.loc 1 2350 11 is_stmt 0 view .LVU1419
 4474 0246 3320     		movs	r0, #51
 4475 0248 51E7     		b	.L502
 4476              	.LVL394:
 4477              	.L493:
2303:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 4478              		.loc 1 2303 6 is_stmt 1 view .LVU1420
2303:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 4479              		.loc 1 2303 9 is_stmt 0 view .LVU1421
 4480 024a 1028     		cmp	r0, #16
 4481 024c 23D0     		beq	.L503
 4482              	.L427:
2312:src/keys.c    ****    reset_shift();
 4483              		.loc 1 2312 4 is_stmt 1 view .LVU1422
 4484              	.LVL395:
 4485              	.LBB457:
 389:src/keys.c    **** {
 4486              		.loc 1 389 12 view .LVU1423
 4487              	.LBB415:
 391:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4488              		.loc 1 391 2 view .LVU1424
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4489              		.loc 1 439 2 view .LVU1425
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4490              		.loc 1 439 5 is_stmt 0 view .LVU1426
 4491 024e 0521     		movs	r1, #5
 4492              	.LVL396:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4493              		.loc 1 439 5 view .LVU1427
 4494 0250 F0E6     		b	.L428
ARM GAS  /tmp/cccKVeLo.s 			page 150


 4495              	.LVL397:
 4496              	.L500:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4497              		.loc 1 439 5 view .LVU1428
 4498              	.LBE415:
 4499              	.LBE457:
2269:src/keys.c    ****        /*
 4500              		.loc 1 2269 32 discriminator 1 view .LVU1429
 4501 0252 0128     		cmp	r0, #1
 4502 0254 DBD1     		bne	.L419
 4503              	.LBB458:
2278:src/keys.c    **** 	 OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
 4504              		.loc 1 2278 8 is_stmt 1 view .LVU1430
2286:src/keys.c    ****        int i;
 4505              		.loc 1 2286 8 view .LVU1431
2286:src/keys.c    ****        int i;
 4506              		.loc 1 2286 26 is_stmt 0 view .LVU1432
 4507 0256 2846     		mov	r0, r5
 4508              	.LVL398:
2286:src/keys.c    ****        int i;
 4509              		.loc 1 2286 26 view .LVU1433
 4510 0258 FFF7FEFF 		bl	current_catalogue
 4511              	.LVL399:
2286:src/keys.c    ****        int i;
 4512              		.loc 1 2286 26 view .LVU1434
 4513 025c 0446     		mov	r4, r0
 4514              	.LVL400:
2287:src/keys.c    **** 
 4515              		.loc 1 2287 8 is_stmt 1 view .LVU1435
2289:src/keys.c    ****        if (isRARG(op))
 4516              		.loc 1 2289 8 view .LVU1436
 4517 025e 0020     		movs	r0, #0
 4518              	.LVL401:
2289:src/keys.c    ****        if (isRARG(op))
 4519              		.loc 1 2289 8 is_stmt 0 view .LVU1437
 4520 0260 FFF7FEFF 		bl	init_cat
 4521              	.LVL402:
2290:src/keys.c    **** 	 return op ^ 1;
 4522              		.loc 1 2290 8 is_stmt 1 view .LVU1438
2290:src/keys.c    **** 	 return op ^ 1;
 4523              		.loc 1 2290 11 is_stmt 0 view .LVU1439
 4524 0264 14F47043 		ands	r3, r4, #61440
 4525 0268 29D0     		beq	.L420
2290:src/keys.c    **** 	 return op ^ 1;
 4526              		.loc 1 2290 12 discriminator 1 view .LVU1440
 4527 026a B3F5704F 		cmp	r3, #61440
 4528 026e 26D0     		beq	.L420
2291:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 4529              		.loc 1 2291 3 is_stmt 1 view .LVU1441
2291:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 4530              		.loc 1 2291 13 is_stmt 0 view .LVU1442
 4531 0270 84F00100 		eor	r0, r4, #1
 4532 0274 60E7     		b	.L392
 4533              	.LVL403:
 4534              	.L496:
2291:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 4535              		.loc 1 2291 13 view .LVU1443
ARM GAS  /tmp/cccKVeLo.s 			page 151


 4536              	.LBE458:
2238:src/keys.c    **** 	   goto search;
 4537              		.loc 1 2238 3 is_stmt 1 view .LVU1444
2238:src/keys.c    **** 	   goto search;
 4538              		.loc 1 2238 7 is_stmt 0 view .LVU1445
 4539 0276 3D7F     		ldrb	r5, [r7, #28]	@ zero_extendqisi2
 4540              	.LVL404:
2238:src/keys.c    **** 	   goto search;
 4541              		.loc 1 2238 7 view .LVU1446
 4542 0278 013D     		subs	r5, r5, #1
 4543 027a EDB2     		uxtb	r5, r5
2238:src/keys.c    **** 	   goto search;
 4544              		.loc 1 2238 6 view .LVU1447
 4545 027c 3D77     		strb	r5, [r7, #28]
 4546 027e 002D     		cmp	r5, #0
 4547 0280 7FF4F3AE 		bne	.L410
 4548 0284 D9F80040 		ldr	r4, [r9]
 4549 0288 2AE7     		b	.L411
 4550              	.LVL405:
 4551              	.L498:
2255:src/keys.c    ****        goto set_pos;
 4552              		.loc 1 2255 3 is_stmt 1 view .LVU1448
 4553 028a 013D     		subs	r5, r5, #1
 4554              	.LVL406:
2256:src/keys.c    **** 
 4555              		.loc 1 2256 8 view .LVU1449
 4556 028c 1AE7     		b	.L413
 4557              	.LVL407:
 4558              	.L497:
2256:src/keys.c    **** 
 4559              		.loc 1 2256 8 is_stmt 0 view .LVU1450
 4560 028e FFF7FEFF 		bl	current_catalogue
 4561              	.LVL408:
2256:src/keys.c    **** 
 4562              		.loc 1 2256 8 view .LVU1451
 4563 0292 0446     		mov	r4, r0
 4564 0294 75E7     		b	.L403
 4565              	.LVL409:
 4566              	.L503:
2303:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 4567              		.loc 1 2303 19 discriminator 1 view .LVU1452
 4568 0296 BAF1130F 		cmp	r10, #19
 4569 029a D8D1     		bne	.L427
2304:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
 4570              		.loc 1 2304 8 is_stmt 1 view .LVU1453
 4571 029c 0020     		movs	r0, #0
 4572              	.LVL410:
2304:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
 4573              		.loc 1 2304 8 is_stmt 0 view .LVU1454
 4574 029e FFF7FEFF 		bl	init_cat
 4575              	.LVL411:
2305:src/keys.c    ****      }
 4576              		.loc 1 2305 8 is_stmt 1 view .LVU1455
2305:src/keys.c    ****      }
 4577              		.loc 1 2305 15 is_stmt 0 view .LVU1456
 4578 02a2 40F23D10 		movw	r0, #317
 4579 02a6 47E7     		b	.L392
ARM GAS  /tmp/cccKVeLo.s 			page 152


 4580              	.L404:
 4581              	.LBB459:
2230:src/keys.c    **** 	 }
 4582              		.loc 1 2230 5 is_stmt 1 view .LVU1457
 4583              	.LBB442:
 4584              	.LBB443:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 4585              		.loc 1 625 5 is_stmt 0 view .LVU1458
 4586 02a8 C4F30723 		ubfx	r3, r4, #8, #8
 4587 02ac 012B     		cmp	r3, #1
 4588              	.LBE443:
 4589              	.LBE442:
2230:src/keys.c    **** 	 }
 4590              		.loc 1 2230 12 view .LVU1459
 4591 02ae 2046     		mov	r0, r4
 4592              	.LVL412:
 4593              	.LBB445:
 4594              	.LBI442:
 624:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 4595              		.loc 1 624 12 is_stmt 1 view .LVU1460
 4596              	.LBB444:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 4597              		.loc 1 625 2 view .LVU1461
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 4598              		.loc 1 625 5 is_stmt 0 view .LVU1462
 4599 02b0 7FF442AF 		bne	.L392
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 4600              		.loc 1 625 5 view .LVU1463
 4601 02b4 FFF7FEFF 		bl	check_confirm.part.0
 4602              	.LVL413:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 4603              		.loc 1 625 5 view .LVU1464
 4604 02b8 3EE7     		b	.L392
 4605              	.LVL414:
 4606              	.L405:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 4607              		.loc 1 625 5 view .LVU1465
 4608              	.LBE444:
 4609              	.LBE445:
 4610              	.LBB446:
2223:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4611              		.loc 1 2223 7 is_stmt 1 view .LVU1466
2223:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4612              		.loc 1 2223 14 is_stmt 0 view .LVU1467
 4613 02ba 2046     		mov	r0, r4
 4614 02bc 3CE7     		b	.L392
 4615              	.LVL415:
 4616              	.L420:
2223:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4617              		.loc 1 2223 14 view .LVU1468
 4618 02be 0C48     		ldr	r0, .L506+20
 4619              	.LBE446:
 4620              	.LBE459:
2201:src/keys.c    ****    int pos = State.catpos;
 4621              		.loc 1 2201 93 view .LVU1469
 4622 02c0 40F28522 		movw	r2, #645
 4623 02c4 0146     		mov	r1, r0
ARM GAS  /tmp/cccKVeLo.s 			page 153


 4624 02c6 0023     		movs	r3, #0
 4625 02c8 01E0     		b	.L422
 4626              	.LVL416:
 4627              	.L505:
2201:src/keys.c    ****    int pos = State.catpos;
 4628              		.loc 1 2201 93 view .LVU1470
 4629 02ca 31F8022F 		ldrh	r2, [r1, #2]!
 4630              	.LVL417:
 4631              	.L422:
 4632              	.LBB460:
2293:src/keys.c    **** 	   return conv_mapping[i^1];
 4633              		.loc 1 2293 3 is_stmt 1 view .LVU1471
2292:src/keys.c    **** 	 if (op == conv_mapping[i])
 4634              		.loc 1 2292 72 view .LVU1472
2293:src/keys.c    **** 	   return conv_mapping[i^1];
 4635              		.loc 1 2293 6 is_stmt 0 view .LVU1473
 4636 02ce A242     		cmp	r2, r4
 4637 02d0 1ED0     		beq	.L504
2292:src/keys.c    **** 	 if (op == conv_mapping[i])
 4638              		.loc 1 2292 72 discriminator 2 view .LVU1474
 4639 02d2 0133     		adds	r3, r3, #1
 4640              	.LVL418:
2292:src/keys.c    **** 	 if (op == conv_mapping[i])
 4641              		.loc 1 2292 20 is_stmt 1 discriminator 2 view .LVU1475
2292:src/keys.c    **** 	 if (op == conv_mapping[i])
 4642              		.loc 1 2292 8 is_stmt 0 discriminator 2 view .LVU1476
 4643 02d4 0C2B     		cmp	r3, #12
 4644 02d6 F8D1     		bne	.L505
 4645 02d8 2DE7     		b	.L490
 4646              	.L507:
 4647 02da 00BF     		.align	2
 4648              	.L506:
 4649 02dc 00000000 		.word	StateWhileOn
 4650 02e0 00000000 		.word	.LANCHOR2
 4651 02e4 00000000 		.word	.LANCHOR1
 4652 02e8 00000000 		.word	.LANCHOR9
 4653 02ec 00080800 		.word	526336
 4654 02f0 00000000 		.word	.LANCHOR8
 4655 02f4 00000000 		.word	main_ram
 4656 02f8 1F000000 		.word	StateWhileOn+31
 4657              	.LVL419:
 4658              	.L408:
2292:src/keys.c    **** 	 if (op == conv_mapping[i])
 4659              		.loc 1 2292 8 discriminator 2 view .LVU1477
 4660              	.LBE460:
 4661              	.LBB461:
 4662              	.LBB447:
2227:src/keys.c    **** 	 }
 4663              		.loc 1 2227 7 is_stmt 1 view .LVU1478
 4664              	.LBB439:
 4665              	.LBI439:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 4666              		.loc 1 506 13 view .LVU1479
 4667              	.LBB440:
 507:src/keys.c    **** 		return;
 4668              		.loc 1 507 2 view .LVU1480
 507:src/keys.c    **** 		return;
ARM GAS  /tmp/cccKVeLo.s 			page 154


 4669              		.loc 1 507 6 is_stmt 0 view .LVU1481
 4670 02fc FFF7FEFF 		bl	is_bad_cmdline
 4671              	.LVL420:
 507:src/keys.c    **** 		return;
 4672              		.loc 1 507 5 view .LVU1482
 4673 0300 0028     		cmp	r0, #0
 4674 0302 7FF418AF 		bne	.L490
 4675 0306 2846     		mov	r0, r5
 4676 0308 FFF7FEFF 		bl	init_arg.part.0
 4677              	.LVL421:
 4678              	.LBE440:
 4679              	.LBE439:
 4680              	.LBE447:
 4681              	.LBE461:
2234:src/keys.c    **** 
 4682              		.loc 1 2234 15 view .LVU1483
 4683 030c 3320     		movs	r0, #51
 4684 030e 13E7     		b	.L392
 4685              	.LVL422:
 4686              	.L504:
 4687              	.LBB462:
2294:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 4688              		.loc 1 2294 5 is_stmt 1 view .LVU1484
2294:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 4689              		.loc 1 2294 26 is_stmt 0 view .LVU1485
 4690 0310 83F00103 		eor	r3, r3, #1
 4691              	.LVL423:
2294:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 4692              		.loc 1 2294 24 view .LVU1486
 4693 0314 30F81300 		ldrh	r0, [r0, r3, lsl #1]
 4694 0318 0EE7     		b	.L392
 4695              	.LBE462:
 4696              		.cfi_endproc
 4697              	.LFE43:
 4699              		.section	.text.find_pos,"ax",%progbits
 4700              		.align	1
 4701              		.p2align 2,,3
 4702              		.global	find_pos
 4703              		.syntax unified
 4704              		.thumb
 4705              		.thumb_func
 4706              		.fpu fpv4-sp-d16
 4708              	find_pos:
 4709              	.LVL424:
 4710              	.LFB44:
2354:src/keys.c    **** 	int pos;
 4711              		.loc 1 2354 32 is_stmt 1 view -0
 4712              		.cfi_startproc
 4713              		@ args = 0, pretend = 0, frame = 16
 4714              		@ frame_needed = 0, uses_anonymous_args = 0
2355:src/keys.c    **** 	const int ctmax = current_catalogue_max();
 4715              		.loc 1 2355 2 view .LVU1488
2356:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 4716              		.loc 1 2356 2 view .LVU1489
 4717              	.LBB463:
 4718              	.LBI463:
2056:src/keys.c    **** 	// A quick table of catalogue sizes
ARM GAS  /tmp/cccKVeLo.s 			page 155


 4719              		.loc 1 2056 5 view .LVU1490
 4720              	.LBB464:
2059:src/keys.c    **** 	{
 4721              		.loc 1 2059 2 view .LVU1491
2090:src/keys.c    **** #endif
 4722              		.loc 1 2090 2 view .LVU1492
 4723              	.LBE464:
 4724              	.LBE463:
2354:src/keys.c    **** 	int pos;
 4725              		.loc 1 2354 32 is_stmt 0 view .LVU1493
 4726 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 4727              		.cfi_def_cfa_offset 32
 4728              		.cfi_offset 4, -32
 4729              		.cfi_offset 5, -28
 4730              		.cfi_offset 6, -24
 4731              		.cfi_offset 7, -20
 4732              		.cfi_offset 8, -16
 4733              		.cfi_offset 9, -12
 4734              		.cfi_offset 10, -8
 4735              		.cfi_offset 14, -4
 4736              	.LBB466:
 4737              	.LBB465:
2090:src/keys.c    **** #endif
 4738              		.loc 1 2090 31 view .LVU1494
 4739 0004 1E4B     		ldr	r3, .L525
2090:src/keys.c    **** #endif
 4740              		.loc 1 2090 24 view .LVU1495
 4741 0006 1F4A     		ldr	r2, .L525+4
2090:src/keys.c    **** #endif
 4742              		.loc 1 2090 31 view .LVU1496
 4743 0008 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2090:src/keys.c    **** #endif
 4744              		.loc 1 2090 24 view .LVU1497
 4745 000a 12F803A0 		ldrb	r10, [r2, r3]	@ zero_extendqisi2
 4746              	.LVL425:
2090:src/keys.c    **** #endif
 4747              		.loc 1 2090 24 view .LVU1498
 4748              	.LBE465:
 4749              	.LBE466:
2357:src/keys.c    **** 		char buf[16];
 4750              		.loc 1 2357 2 is_stmt 1 view .LVU1499
2357:src/keys.c    **** 		char buf[16];
 4751              		.loc 1 2357 16 view .LVU1500
2354:src/keys.c    **** 	int pos;
 4752              		.loc 1 2354 32 is_stmt 0 view .LVU1501
 4753 000e 84B0     		sub	sp, sp, #16
 4754              		.cfi_def_cfa_offset 48
2357:src/keys.c    **** 		char buf[16];
 4755              		.loc 1 2357 2 view .LVU1502
 4756 0010 BAF1000F 		cmp	r10, #0
 4757 0014 32D0     		beq	.L515
 4758 0016 8146     		mov	r9, r0
2357:src/keys.c    **** 		char buf[16];
 4759              		.loc 1 2357 11 view .LVU1503
 4760 0018 4FF00008 		mov	r8, #0
 4761 001c C0F10107 		rsb	r7, r0, #1
 4762              	.LVL426:
ARM GAS  /tmp/cccKVeLo.s 			page 156


 4763              	.L514:
 4764              	.LBB467:
2358:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
 4765              		.loc 1 2358 3 is_stmt 1 view .LVU1504
2359:src/keys.c    **** 		int i;
 4766              		.loc 1 2359 3 view .LVU1505
2359:src/keys.c    **** 		int i;
 4767              		.loc 1 2359 21 is_stmt 0 view .LVU1506
 4768 0020 4046     		mov	r0, r8
 4769 0022 FFF7FEFF 		bl	current_catalogue
 4770              	.LVL427:
 4771 0026 6946     		mov	r1, sp
 4772 0028 FFF7FEFF 		bl	catcmd
 4773              	.LVL428:
 4774 002c 0646     		mov	r6, r0
 4775              	.LVL429:
2360:src/keys.c    **** 
 4776              		.loc 1 2360 3 is_stmt 1 view .LVU1507
2362:src/keys.c    **** 			cmd++;
 4777              		.loc 1 2362 3 view .LVU1508
2363:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 4778              		.loc 1 2363 4 view .LVU1509
2362:src/keys.c    **** 			cmd++;
 4779              		.loc 1 2362 7 is_stmt 0 view .LVU1510
 4780 002e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4781              	.LVL430:
2362:src/keys.c    **** 			cmd++;
 4782              		.loc 1 2362 6 view .LVU1511
 4783 0030 1428     		cmp	r0, #20
 4784 0032 04BF     		itt	eq
 4785 0034 7078     		ldrbeq	r0, [r6, #1]	@ zero_extendqisi2
2363:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 4786              		.loc 1 2363 7 view .LVU1512
 4787 0036 0136     		addeq	r6, r6, #1
 4788              	.LVL431:
2364:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4789              		.loc 1 2364 3 is_stmt 1 view .LVU1513
2364:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4790              		.loc 1 2364 13 view .LVU1514
2364:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4791              		.loc 1 2364 3 is_stmt 0 view .LVU1515
 4792 0038 A8B1     		cbz	r0, .L516
 4793 003a 09F1FF33 		add	r3, r9, #-1
 4794 003e 04E0     		b	.L513
 4795              	.LVL432:
 4796              	.L524:
 4797              	.LBB468:
2369:src/keys.c    **** 				break;
 4798              		.loc 1 2369 12 view .LVU1516
 4799 0040 12DB     		blt	.L511
 4800              	.LBE468:
2364:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4801              		.loc 1 2364 16 discriminator 2 view .LVU1517
 4802 0042 16F8010F 		ldrb	r0, [r6, #1]!	@ zero_extendqisi2
 4803              	.LVL433:
2364:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4804              		.loc 1 2364 16 discriminator 2 view .LVU1518
ARM GAS  /tmp/cccKVeLo.s 			page 157


 4805 0046 3C44     		add	r4, r4, r7
2364:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4806              		.loc 1 2364 3 discriminator 2 view .LVU1519
 4807 0048 B0B1     		cbz	r0, .L523
 4808              	.LVL434:
 4809              	.L513:
 4810              	.LBB469:
2365:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 4811              		.loc 1 2365 4 is_stmt 1 view .LVU1520
 4812 004a 5C1C     		adds	r4, r3, #1
2365:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 4813              		.loc 1 2365 18 is_stmt 0 view .LVU1521
 4814 004c FFF7FEFF 		bl	remap_chars
 4815              	.LVL435:
 4816 0050 0546     		mov	r5, r0
2366:src/keys.c    **** 			if (c > cl)
 4817              		.loc 1 2366 19 view .LVU1522
 4818 0052 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 4819              	.LVL436:
2366:src/keys.c    **** 			if (c > cl)
 4820              		.loc 1 2366 4 is_stmt 1 view .LVU1523
2366:src/keys.c    **** 			if (c > cl)
 4821              		.loc 1 2366 19 is_stmt 0 view .LVU1524
 4822 0054 FFF7FEFF 		bl	remap_chars
 4823              	.LVL437:
2369:src/keys.c    **** 				break;
 4824              		.loc 1 2369 9 is_stmt 1 view .LVU1525
 4825              	.LBE469:
2364:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4826              		.loc 1 2364 29 view .LVU1526
2364:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4827              		.loc 1 2364 13 view .LVU1527
 4828              	.LBB470:
2367:src/keys.c    **** 				return pos;
 4829              		.loc 1 2367 4 view .LVU1528
2367:src/keys.c    **** 				return pos;
 4830              		.loc 1 2367 7 is_stmt 0 view .LVU1529
 4831 0058 8542     		cmp	r5, r0
 4832 005a 2346     		mov	r3, r4
 4833 005c F0DD     		ble	.L524
 4834              	.LVL438:
 4835              	.L508:
2367:src/keys.c    **** 				return pos;
 4836              		.loc 1 2367 7 view .LVU1530
 4837              	.LBE470:
 4838              	.LBE467:
2376:src/keys.c    **** 
 4839              		.loc 1 2376 1 view .LVU1531
 4840 005e 4046     		mov	r0, r8
 4841 0060 04B0     		add	sp, sp, #16
 4842              		.cfi_remember_state
 4843              		.cfi_def_cfa_offset 32
 4844              		@ sp needed
 4845 0062 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4846              	.LVL439:
 4847              	.L516:
 4848              		.cfi_restore_state
ARM GAS  /tmp/cccKVeLo.s 			page 158


 4849              	.LBB471:
2364:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4850              		.loc 1 2364 3 view .LVU1532
 4851 0066 4C46     		mov	r4, r9
 4852              	.LVL440:
 4853              	.L511:
2372:src/keys.c    **** 			return pos;
 4854              		.loc 1 2372 3 is_stmt 1 view .LVU1533
2372:src/keys.c    **** 			return pos;
 4855              		.loc 1 2372 6 is_stmt 0 view .LVU1534
 4856 0068 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4857 006a 002B     		cmp	r3, #0
 4858 006c F7D0     		beq	.L508
 4859              	.LBE471:
2357:src/keys.c    **** 		char buf[16];
 4860              		.loc 1 2357 29 is_stmt 1 view .LVU1535
 4861 006e 08F10108 		add	r8, r8, #1
 4862              	.LVL441:
2357:src/keys.c    **** 		char buf[16];
 4863              		.loc 1 2357 16 view .LVU1536
2357:src/keys.c    **** 		char buf[16];
 4864              		.loc 1 2357 2 is_stmt 0 view .LVU1537
 4865 0072 D045     		cmp	r8, r10
 4866 0074 D4D1     		bne	.L514
 4867 0076 F2E7     		b	.L508
 4868              	.LVL442:
 4869              	.L523:
2357:src/keys.c    **** 		char buf[16];
 4870              		.loc 1 2357 2 view .LVU1538
 4871 0078 4C44     		add	r4, r4, r9
 4872 007a F5E7     		b	.L511
 4873              	.LVL443:
 4874              	.L515:
2357:src/keys.c    **** 		char buf[16];
 4875              		.loc 1 2357 11 view .LVU1539
 4876 007c D046     		mov	r8, r10
 4877 007e EEE7     		b	.L508
 4878              	.L526:
 4879              		.align	2
 4880              	.L525:
 4881 0080 00000000 		.word	StateWhileOn
 4882 0084 00000000 		.word	.LANCHOR2
 4883              		.cfi_endproc
 4884              	.LFE44:
 4886              		.section	.text.get_alpha_state,"ax",%progbits
 4887              		.align	1
 4888              		.p2align 2,,3
 4889              		.global	get_alpha_state
 4890              		.syntax unified
 4891              		.thumb
 4892              		.thumb_func
 4893              		.fpu fpv4-sp-d16
 4895              	get_alpha_state:
 4896              	.LFB56:
2701:src/keys.c    **** 
2702:src/keys.c    **** 
2703:src/keys.c    **** static int process_registerlist(const keycode c) {
ARM GAS  /tmp/cccKVeLo.s 			page 159


2704:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
2705:src/keys.c    **** 	enum shifts shift = reset_shift();
2706:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
2707:src/keys.c    **** 	const int g_max = global_regs();
2708:src/keys.c    **** 
2709:src/keys.c    **** 	if (n == LOCAL_REG_BASE) {	// '.'
2710:src/keys.c    **** 		if (local_regs())
2711:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
2712:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
2713:src/keys.c    **** 		goto reset_window;
2714:src/keys.c    **** 	}
2715:src/keys.c    **** 	else if (n <= 9) {
2716:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
2717:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
2718:src/keys.c    **** 			dv = n;
2719:src/keys.c    **** 		State2.digval = dv;
2720:src/keys.c    **** 		goto reset_window;
2721:src/keys.c    **** 	}
2722:src/keys.c    **** 	else if ((shift == SHIFT_F || shift == SHIFT_G) && c == K21) {  // <( )>
2723:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
2724:src/keys.c    **** 		set_smode(SDISP_SHOW);
2725:src/keys.c    **** 	}
2726:src/keys.c    **** 	else if (n != NO_REG) {
2727:src/keys.c    **** 		State2.digval = n;
2728:src/keys.c    **** 		goto reset_window;
2729:src/keys.c    **** 	}
2730:src/keys.c    **** 
2731:src/keys.c    **** 	switch (c) {
2732:src/keys.c    **** 	case K_DOWN:
2733:src/keys.c    **** 		if (State2.digval > 0) {
2734:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
2735:src/keys.c    **** 				State2.digval = global_regs();
2736:src/keys.c    **** 			--State2.digval;
2737:src/keys.c    **** 		}
2738:src/keys.c    **** 		else
2739:src/keys.c    **** 			State2.digval = max - 1;
2740:src/keys.c    **** 		goto reset_window;
2741:src/keys.c    **** 
2742:src/keys.c    **** 	case K_UP:
2743:src/keys.c    **** 		if (State2.digval < max - 1) {
2744:src/keys.c    **** 			State2.digval++;
2745:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
2746:src/keys.c    **** 				State2.digval = regX_idx;
2747:src/keys.c    **** 		}
2748:src/keys.c    **** 		else	
2749:src/keys.c    **** 			State2.digval = 0;
2750:src/keys.c    **** 		goto reset_window;
2751:src/keys.c    **** 
2752:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
2753:src/keys.c    **** 	case K04:
2754:src/keys.c    **** 		State2.digval2 = ! State2.digval2 && ! State2.local;
2755:src/keys.c    **** 		goto reset_window;
2756:src/keys.c    **** #endif
2757:src/keys.c    **** 
2758:src/keys.c    **** 	case K24:			
2759:src/keys.c    **** 	//case K60:
2760:src/keys.c    **** 		if (State2.disp_temp)
ARM GAS  /tmp/cccKVeLo.s 			page 160


2761:src/keys.c    **** 			return STATE_UNFINISHED;
2762:src/keys.c    **** 		break;		// Exit doing nothing
2763:src/keys.c    **** 
2764:src/keys.c    **** 	case K20:		// ENTER
2765:src/keys.c    **** 		if (shift == SHIFT_F) {
2766:src/keys.c    **** 			State2.disp_as_alpha = 1;
2767:src/keys.c    **** 			goto reset_window;
2768:src/keys.c    **** 		}
2769:src/keys.c    **** 	case K11:		// RCL
2770:src/keys.c    **** 		if ( shift == SHIFT_N ) {
2771:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
2772:src/keys.c    **** 			n = RARG( State2.digval2 ? RARG_FLRCL : RARG_RCL, State2.digval );
2773:src/keys.c    **** #else
2774:src/keys.c    **** 			n = RARG( RARG_RCL, State2.digval );
2775:src/keys.c    **** #endif
2776:src/keys.c    **** 			State2.registerlist = 0;
2777:src/keys.c    **** 			State2.digval = 0;
2778:src/keys.c    **** 			State2.digval2 = 0;
2779:src/keys.c    **** 			return n;
2780:src/keys.c    **** 		}
2781:src/keys.c    **** 	default:
2782:src/keys.c    **** 		return STATE_UNFINISHED;
2783:src/keys.c    **** 	}
2784:src/keys.c    **** 	State2.registerlist = 0;
2785:src/keys.c    **** 	State2.digval = 0;
2786:src/keys.c    **** 	State2.digval2 = 0;
2787:src/keys.c    **** reset_window:
2788:src/keys.c    **** 	State2.window = 0;
2789:src/keys.c    **** 	return STATE_UNFINISHED;
2790:src/keys.c    **** }
2791:src/keys.c    **** 
2792:src/keys.c    **** 
2793:src/keys.c    **** static int process(const int c) {
2794:src/keys.c    ****   const enum shifts shift = cur_shift();
2795:src/keys.c    ****   enum catalogues cat;
2796:src/keys.c    **** 
2797:src/keys.c    ****   if (Running || Pause) {
2798:src/keys.c    ****     /*
2799:src/keys.c    ****      *  Abort a running program with R/S or EXIT
2800:src/keys.c    ****      */
2801:src/keys.c    ****     if (c == K60 || c == K63) {
2802:src/keys.c    ****       if (Pause && isXROM(state_pc()))
2803:src/keys.c    **** 	set_pc(0);
2804:src/keys.c    ****       Pause = 0;
2805:src/keys.c    ****       xeq_xrom();
2806:src/keys.c    ****       set_running_off();
2807:src/keys.c    ****       DispMsg = "Stopped";
2808:src/keys.c    ****       State2.disp_freeze = 0;
2809:src/keys.c    ****       return STATE_UNFINISHED;
2810:src/keys.c    ****     }
2811:src/keys.c    ****     if ( c != K_HEARTBEAT ) {
2812:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
2813:src/keys.c    ****       Pause = 0;			// leave PSE statement
2814:src/keys.c    ****       GoFast = 1;
2815:src/keys.c    ****     }
2816:src/keys.c    ****     // continue execution if really running, else ignore (PSE)
2817:src/keys.c    ****     return STATE_RUNNING;
ARM GAS  /tmp/cccKVeLo.s 			page 161


2818:src/keys.c    ****   }
2819:src/keys.c    **** 
2820:src/keys.c    ****   /* Check for ON in the unshifted state -- this is a reset sequence
2821:src/keys.c    ****    * common across all modes.  Shifted modes need to check this themselves
2822:src/keys.c    ****    * if required.
2823:src/keys.c    ****    */
2824:src/keys.c    **** #ifdef DM42
2825:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue && ! State2.arrow)
2826:src/keys.c    **** #else
2827:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue)
2828:src/keys.c    **** #endif
2829:src/keys.c    ****     {
2830:src/keys.c    ****       soft_init_state();
2831:src/keys.c    ****       return STATE_UNFINISHED;
2832:src/keys.c    ****     }
2833:src/keys.c    **** 
2834:src/keys.c    **** #ifndef CONSOLE
2835:src/keys.c    **** 	if (c == K63 && JustStopped) {
2836:src/keys.c    **** 		// Avoid an accidental restart with R/S
2837:src/keys.c    **** 		JustStopped = 0;
2838:src/keys.c    **** 		return STATE_IGNORE;
2839:src/keys.c    **** 	}
2840:src/keys.c    **** #endif
2841:src/keys.c    **** 	/*  Handle the keyboard timeout for catalogue navigation
2842:src/keys.c    **** 	 *  Must be done early in the process to capture the shifts correctly
2843:src/keys.c    **** 	 */
2844:src/keys.c    **** 	if (State2.catalogue && Keyticks > 30)
2845:src/keys.c    **** 		CmdLineLength = 0;
2846:src/keys.c    **** 	/*
2847:src/keys.c    **** 	 *  Process the various cases
2848:src/keys.c    **** 	 *  The handlers in this block here do not handle shifts at all or do it themselves
2849:src/keys.c    **** 	 */
2850:src/keys.c    **** 	if (State2.confirm)
2851:src/keys.c    **** 		return process_confirm((const keycode)c);
2852:src/keys.c    **** 
2853:src/keys.c    **** 	if (State2.rarg)
2854:src/keys.c    **** 		return process_arg((const keycode)c);
2855:src/keys.c    **** 
2856:src/keys.c    **** 	if (State2.gtodot)
2857:src/keys.c    **** 		return process_gtodot((const keycode)c);
2858:src/keys.c    **** 
2859:src/keys.c    **** 	if (State2.hyp)
2860:src/keys.c    **** 		return process_hyp((const keycode)c);
2861:src/keys.c    **** 
2862:src/keys.c    **** 	if (State2.test != TST_NONE)
2863:src/keys.c    **** 		return process_test((const keycode)c);
2864:src/keys.c    **** 
2865:src/keys.c    **** 	if (State2.status)
2866:src/keys.c    **** 		return process_status((const keycode)c);
2867:src/keys.c    **** 
2868:src/keys.c    **** 	/*
2869:src/keys.c    **** 	 *  Process shift keys directly
2870:src/keys.c    **** 	 */
2871:src/keys.c    **** 	if (c == K_F) {
2872:src/keys.c    **** 		toggle_shift(SHIFT_F);
2873:src/keys.c    **** 		return STATE_UNFINISHED;
2874:src/keys.c    **** 	}
ARM GAS  /tmp/cccKVeLo.s 			page 162


2875:src/keys.c    **** 	if (c == K_G) {
2876:src/keys.c    **** 		toggle_shift(SHIFT_G);
2877:src/keys.c    **** 		return STATE_UNFINISHED;
2878:src/keys.c    **** 	}
2879:src/keys.c    **** 	if (c == K_H) {
2880:src/keys.c    **** 		toggle_shift(SHIFT_H);
2881:src/keys.c    **** 		State2.arrow = 0;
2882:src/keys.c    **** 		return STATE_UNFINISHED;
2883:src/keys.c    **** 	}
2884:src/keys.c    **** 	/*
2885:src/keys.c    **** 	 *  The handlers in this block need to call reset_shift somewhere
2886:src/keys.c    **** 	 */
2887:src/keys.c    **** 	// print_debug (2, c);
2888:src/keys.c    **** 	if (State2.arrow)
2889:src/keys.c    **** 		return process_arrow((const keycode)c);
2890:src/keys.c    **** 
2891:src/keys.c    **** 	/*
2892:src/keys.c    **** 	 * Here the keys are mapped to catalogues
2893:src/keys.c    **** 	 * The position of this code decides where catalogue switching
2894:src/keys.c    **** 	 * works and were not
2895:src/keys.c    **** 	 */
2896:src/keys.c    **** 	cat = keycode_to_cat((keycode)c, shift);
2897:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
2898:src/keys.c    **** 		if (is_bad_cmdline())
2899:src/keys.c    **** 			return STATE_UNFINISHED;
2900:src/keys.c    **** 		init_cat( CATALOGUE_NONE );
2901:src/keys.c    **** 		init_cat( cat );
2902:src/keys.c    **** 		return STATE_UNFINISHED;
2903:src/keys.c    **** 	}
2904:src/keys.c    **** 
2905:src/keys.c    **** 	/*
2906:src/keys.c    **** 	 *  More handlers...
2907:src/keys.c    **** 	 */
2908:src/keys.c    **** 	if (State2.multi)
2909:src/keys.c    **** 		return process_multi((const keycode)c);
2910:src/keys.c    **** 
2911:src/keys.c    **** 	if (State2.labellist)
2912:src/keys.c    **** 		return process_labellist((const keycode)c);
2913:src/keys.c    **** 
2914:src/keys.c    **** 	if (State2.registerlist)
2915:src/keys.c    **** 		return process_registerlist((const keycode)c);
2916:src/keys.c    **** 
2917:src/keys.c    **** 	if (State2.catalogue)
2918:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
2919:src/keys.c    **** 
2920:src/keys.c    **** 	if (State2.alphas) {
2921:src/keys.c    **** #ifndef INFRARED
2922:src/keys.c    **** 		return process_alpha((const keycode)c);
2923:src/keys.c    **** #else
2924:src/keys.c    **** 		int i = process_alpha((const keycode)c);
2925:src/keys.c    **** 		if (! State2.alphas && get_user_flag(T_FLAG)) {
2926:src/keys.c    **** 			print_tab(0);
2927:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
2928:src/keys.c    **** 		}
2929:src/keys.c    **** 		return i;
2930:src/keys.c    **** #endif
2931:src/keys.c    **** 	}
ARM GAS  /tmp/cccKVeLo.s 			page 163


2932:src/keys.c    **** 
2933:src/keys.c    **** 	if (State2.cmplx) {
2934:src/keys.c    **** 		return process_cmplx((const keycode)c);
2935:src/keys.c    **** 	} else {
2936:src/keys.c    **** 		if (shift == SHIFT_F || shift == SHIFT_G)
2937:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
2938:src/keys.c    **** 		if (shift == SHIFT_H)
2939:src/keys.c    **** 			return process_h_shifted((const keycode)c);
2940:src/keys.c    **** 		// print_debug (3, c);
2941:src/keys.c    **** 		return process_normal((const keycode)c);
2942:src/keys.c    **** 	}
2943:src/keys.c    **** }
2944:src/keys.c    **** 
2945:src/keys.c    ****  unsigned int get_alpha_state ( void ) {
 4897              		.loc 1 2945 40 is_stmt 1 view -0
 4898              		.cfi_startproc
 4899              		@ args = 0, pretend = 0, frame = 0
 4900              		@ frame_needed = 0, uses_anonymous_args = 0
 4901              		@ link register save eliminated.
2946:src/keys.c    ****    return (State2.alphas || State2.confirm || State2.status || State2.labellist
 4902              		.loc 1 2946 4 view .LVU1541
 4903              		.loc 1 2946 53 is_stmt 0 view .LVU1542
 4904 0000 074B     		ldr	r3, .L532
 4905              		.loc 1 2946 44 view .LVU1543
 4906 0002 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 4907 0004 1AB9     		cbnz	r2, .L530
2947:src/keys.c    **** 	   || State2.rarg || State2.registerlist || State2.multi 
2948:src/keys.c    **** 	   || State2.gtodot || State2.catalogue || (State2.test != TST_NONE));
 4908              		.loc 1 2948 5 discriminator 2 view .LVU1544
 4909 0006 5969     		ldr	r1, [r3, #20]
 4910 0008 064A     		ldr	r2, .L532+4
 4911 000a 0A40     		ands	r2, r2, r1
 4912 000c 0AB1     		cbz	r2, .L531
 4913              	.L530:
 4914 000e 0120     		movs	r0, #1
2949:src/keys.c    ****  }
 4915              		.loc 1 2949 2 view .LVU1545
 4916 0010 7047     		bx	lr
 4917              	.L531:
2948:src/keys.c    ****  }
 4918              		.loc 1 2948 42 discriminator 3 view .LVU1546
 4919 0012 D889     		ldrh	r0, [r3, #14]
 4920 0014 B0F5E060 		subs	r0, r0, #1792
 4921 0018 18BF     		it	ne
 4922 001a 0120     		movne	r0, #1
 4923 001c 7047     		bx	lr
 4924              	.L533:
 4925 001e 00BF     		.align	2
 4926              	.L532:
 4927 0020 00000000 		.word	StateWhileOn
 4928 0024 0709280C 		.word	203950343
 4929              		.cfi_endproc
 4930              	.LFE56:
 4932              		.section	.rodata.process_keycode.str1.4,"aMS",%progbits,1
 4933              		.align	2
 4934              	.LC0:
 4935 0000 52554E00 		.ascii	"RUN\000"
ARM GAS  /tmp/cccKVeLo.s 			page 164


 4936              		.align	2
 4937              	.LC1:
 4938 0004 4E554C4C 		.ascii	"NULL\000"
 4938      00
 4939 0009 000000   		.align	2
 4940              	.LC2:
 4941 000c 53746F70 		.ascii	"Stopped\000"
 4941      70656400 
 4942              		.section	.text.process_keycode,"ax",%progbits
 4943              		.align	1
 4944              		.p2align 2,,3
 4945              		.global	process_keycode
 4946              		.syntax unified
 4947              		.thumb
 4948              		.thumb_func
 4949              		.fpu fpv4-sp-d16
 4951              	process_keycode:
 4952              	.LVL444:
 4953              	.LFB58:
2950:src/keys.c    **** 
2951:src/keys.c    ****  void process_keycode_with_shift ( struct _ndmap remapped ) {
2952:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
2953:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
2954:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
2955:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
2956:src/keys.c    ****        // Was error just wait for confirmation
2957:src/keys.c    ****        wait_for_key_press();
2958:src/keys.c    ****      }
2959:src/keys.c    ****      start_buzzer_freq(8800); sys_delay(10); stop_buzzer();// End click
2960:src/keys.c    ****      return;
2961:src/keys.c    ****    }
2962:src/keys.c    ****    if (remapped.key_34s == K_OP) {
2963:src/keys.c    ****      nd_opcode = remapped.shift;
2964:src/keys.c    ****      set_shift(SHIFT_N);
2965:src/keys.c    ****    }
2966:src/keys.c    ****    else if (remapped.shift >= 0) set_shift ( remapped.shift );
2967:src/keys.c    ****    process_keycode ( remapped.key_34s );
2968:src/keys.c    ****  }
2969:src/keys.c    ****  
2970:src/keys.c    **** /*
2971:src/keys.c    ****  *  Fed with key codes by the event loop
2972:src/keys.c    ****  */
2973:src/keys.c    **** void process_keycode(int c)
2974:src/keys.c    **** {
 4954              		.loc 1 2974 1 is_stmt 1 view -0
 4955              		.cfi_startproc
 4956              		@ args = 0, pretend = 0, frame = 8
 4957              		@ frame_needed = 0, uses_anonymous_args = 0
2975:src/keys.c    ****   static int was_paused;
 4958              		.loc 1 2975 3 view .LVU1548
2976:src/keys.c    ****   //volatile int cmdline_empty; // volatile because it's uninitialized in some cases
2977:src/keys.c    ****   int cmdline_empty = 0;        // Visual studio chokes in debug mode over the above
 4959              		.loc 1 2977 3 view .LVU1549
2978:src/keys.c    ****   if (was_paused && Pause == 0)
 4960              		.loc 1 2978 3 view .LVU1550
2974:src/keys.c    ****   static int was_paused;
 4961              		.loc 1 2974 1 is_stmt 0 view .LVU1551
ARM GAS  /tmp/cccKVeLo.s 			page 165


 4962 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4963              		.cfi_def_cfa_offset 36
 4964              		.cfi_offset 4, -36
 4965              		.cfi_offset 5, -32
 4966              		.cfi_offset 6, -28
 4967              		.cfi_offset 7, -24
 4968              		.cfi_offset 8, -20
 4969              		.cfi_offset 9, -16
 4970              		.cfi_offset 10, -12
 4971              		.cfi_offset 11, -8
 4972              		.cfi_offset 14, -4
 4973              		.loc 1 2978 7 view .LVU1552
 4974 0004 944D     		ldr	r5, .L1202
 4975              		.loc 1 2978 27 view .LVU1553
 4976 0006 954F     		ldr	r7, .L1202+4
 4977              		.loc 1 2978 6 view .LVU1554
 4978 0008 2B68     		ldr	r3, [r5]
2974:src/keys.c    ****   static int was_paused;
 4979              		.loc 1 2974 1 view .LVU1555
 4980 000a 83B0     		sub	sp, sp, #12
 4981              		.cfi_def_cfa_offset 48
2974:src/keys.c    ****   static int was_paused;
 4982              		.loc 1 2974 1 view .LVU1556
 4983 000c 0446     		mov	r4, r0
 4984              		.loc 1 2978 6 view .LVU1557
 4985 000e 1BB1     		cbz	r3, .L535
 4986              		.loc 1 2978 27 discriminator 1 view .LVU1558
 4987 0010 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 4988              		.loc 1 2978 18 discriminator 1 view .LVU1559
 4989 0012 002B     		cmp	r3, #0
 4990 0014 00F00782 		beq	.L1102
 4991              	.LVL445:
 4992              	.L535:
2979:src/keys.c    ****     {
2980:src/keys.c    ****     /*
2981:src/keys.c    ****      *  Continue XROM execution after a pause
2982:src/keys.c    ****      */
2983:src/keys.c    ****       xeq_xrom();
2984:src/keys.c    ****     }
2985:src/keys.c    ****   was_paused = Pause;
 4993              		.loc 1 2985 3 is_stmt 1 view .LVU1560
 4994              		.loc 1 2985 14 is_stmt 0 view .LVU1561
 4995 0018 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 4996 001a 2B60     		str	r3, [r5]
2986:src/keys.c    ****   if (c == K_NOP)
 4997              		.loc 1 2986 3 is_stmt 1 view .LVU1562
 4998              		.loc 1 2986 6 is_stmt 0 view .LVU1563
 4999 001c 2E2C     		cmp	r4, #46
 5000 001e 00F0C381 		beq	.L1103
2987:src/keys.c    ****     {
2988:src/keys.c    ****       OpCode = 0;
2989:src/keys.c    ****     }
2990:src/keys.c    ****   else if (c == K_HEARTBEAT)
 5001              		.loc 1 2990 8 is_stmt 1 view .LVU1564
 5002              		.loc 1 2990 11 is_stmt 0 view .LVU1565
 5003 0022 622C     		cmp	r4, #98
 5004 0024 71D0     		beq	.L1104
ARM GAS  /tmp/cccKVeLo.s 			page 166


2991:src/keys.c    ****     {
2992:src/keys.c    ****     /*
2993:src/keys.c    ****      *  Heartbeat processing goes here.
2994:src/keys.c    ****      *  This is totally thread safe!
2995:src/keys.c    ****      */
2996:src/keys.c    ****     if (Keyticks >= 2) {
2997:src/keys.c    ****       /*
2998:src/keys.c    ****        *  Some time has passed after last key press
2999:src/keys.c    ****        */
3000:src/keys.c    ****       if (OpCode != 0) {
3001:src/keys.c    **** 	/*
3002:src/keys.c    **** 	 *  Handle command display and NULL here
3003:src/keys.c    **** 	 */
3004:src/keys.c    **** 	if (OpCodeDisplayPending) {
3005:src/keys.c    **** 	  /*
3006:src/keys.c    **** 	   *  Show command to the user
3007:src/keys.c    **** 	   */
3008:src/keys.c    **** 	  OpCodeDisplayPending = 0;
3009:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
3010:src/keys.c    **** 	    DispMsg = "RUN";
3011:src/keys.c    **** 	  }
3012:src/keys.c    **** 	  else {
3013:src/keys.c    **** 	    scopy_char(TraceBuffer, prt(OpCode, TraceBuffer), '\0');
3014:src/keys.c    **** 	    DispMsg = TraceBuffer;
3015:src/keys.c    **** 	  }
3016:src/keys.c    **** 	  display();
3017:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
3018:src/keys.c    **** 	}
3019:src/keys.c    ****     else if (Keyticks > 12) {
3020:src/keys.c    **** 	  /*
3021:src/keys.c    **** 	   *  Key is too long held down
3022:src/keys.c    **** 	   */
3023:src/keys.c    **** 	  OpCode = 0;
3024:src/keys.c    **** 	  message("NULL", CNULL);
3025:src/keys.c    **** 	  // Force display update on key-up
3026:src/keys.c    **** 	  State2.disp_temp = 0;
3027:src/keys.c    **** 	}
3028:src/keys.c    ****       }
3029:src/keys.c    ****       if (Keyticks > 12 && shift_down() != SHIFT_N) {
3030:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
3031:src/keys.c    **** 	State2.shifts = SHIFT_N;
3032:src/keys.c    ****       }
3033:src/keys.c    ****     }
3034:src/keys.c    **** 
3035:src/keys.c    ****     /*
3036:src/keys.c    ****      *  Serve the watchdog
3037:src/keys.c    ****      */
3038:src/keys.c    ****     watchdog();
3039:src/keys.c    **** 
3040:src/keys.c    **** #ifndef CONSOLE
3041:src/keys.c    ****     /*
3042:src/keys.c    ****      *  If buffer is empty re-allow R/S to start a program
3043:src/keys.c    ****      */
3044:src/keys.c    ****     if (JustStopped && !is_key_pressed()) {
3045:src/keys.c    ****       JustStopped = 0;
3046:src/keys.c    ****     }
3047:src/keys.c    **** #endif
ARM GAS  /tmp/cccKVeLo.s 			page 167


3048:src/keys.c    **** 
3049:src/keys.c    ****     /*
3050:src/keys.c    ****      *  Do nothing if not running a program
3051:src/keys.c    ****      */
3052:src/keys.c    ****     if (!Running && ! Pause)
3053:src/keys.c    ****       return;
3054:src/keys.c    ****   }
3055:src/keys.c    ****   else {
3056:src/keys.c    ****     /*
3057:src/keys.c    ****      *  Not the heartbeat - prepare for execution of any commands
3058:src/keys.c    ****      */
3059:src/keys.c    ****     xeq_init_contexts();
 5005              		.loc 1 3059 5 is_stmt 1 view .LVU1566
3060:src/keys.c    ****     State2.wascomplex = 0;
 5006              		.loc 1 3060 23 is_stmt 0 view .LVU1567
 5007 0026 DFF85082 		ldr	r8, .L1202+32
3059:src/keys.c    ****     State2.wascomplex = 0;
 5008              		.loc 1 3059 5 view .LVU1568
 5009 002a FFF7FEFF 		bl	xeq_init_contexts
 5010              	.LVL446:
 5011              		.loc 1 3060 5 is_stmt 1 view .LVU1569
 5012              		.loc 1 3060 23 is_stmt 0 view .LVU1570
 5013 002e 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
3061:src/keys.c    **** 
3062:src/keys.c    ****     if (is_dot(RPN)) {
 5014              		.loc 1 3062 9 view .LVU1571
 5015 0032 8D20     		movs	r0, #141
3060:src/keys.c    **** 
 5016              		.loc 1 3060 23 view .LVU1572
 5017 0034 6FF38713 		bfc	r3, #6, #2
 5018 0038 88F81430 		strb	r3, [r8, #20]
 5019              		.loc 1 3062 5 is_stmt 1 view .LVU1573
 5020              		.loc 1 3062 9 is_stmt 0 view .LVU1574
 5021 003c FFF7FEFF 		bl	is_dot
 5022              	.LVL447:
 5023              		.loc 1 3062 8 view .LVU1575
 5024 0040 0028     		cmp	r0, #0
 5025 0042 40F07E82 		bne	.L1105
 5026              	.L553:
3063:src/keys.c    ****       /*
3064:src/keys.c    ****        * Turn off the RPN annunciator as a visual feedback
3065:src/keys.c    ****        */
3066:src/keys.c    ****       clr_dot(RPN);
3067:src/keys.c    ****       finish_RPN(); // RPN
3068:src/keys.c    ****     }
3069:src/keys.c    **** 
3070:src/keys.c    **** #ifndef CONSOLE
3071:src/keys.c    ****     /*
3072:src/keys.c    ****      *  Reallow display refresh which is temporarily disabled after a stop
3073:src/keys.c    ****      *  All keys execpt R/S trigger this. The latter will only be reenabled
3074:src/keys.c    ****      *  from the heartbeat after the keybord buffer has become empty to avoid
3075:src/keys.c    ****      *  an accidental restart of the program.
3076:src/keys.c    ****      */
3077:src/keys.c    ****     if (c != K63)
 5027              		.loc 1 3077 5 is_stmt 1 view .LVU1576
 5028              		.loc 1 3077 8 is_stmt 0 view .LVU1577
 5029 0046 272C     		cmp	r4, #39
ARM GAS  /tmp/cccKVeLo.s 			page 168


 5030 0048 00F07882 		beq	.L1106
3078:src/keys.c    ****       JustStopped = 0;
 5031              		.loc 1 3078 7 is_stmt 1 view .LVU1578
 5032              		.loc 1 3078 19 is_stmt 0 view .LVU1579
 5033 004c 844B     		ldr	r3, .L1202+8
 5034 004e 0025     		movs	r5, #0
3079:src/keys.c    **** #endif
3080:src/keys.c    ****   }
3081:src/keys.c    **** 
3082:src/keys.c    ****   /*
3083:src/keys.c    ****    *  Handle key release
3084:src/keys.c    ****    */
3085:src/keys.c    ****   if (c == K_RELEASE)
 5035              		.loc 1 3085 6 view .LVU1580
 5036 0050 632C     		cmp	r4, #99
3078:src/keys.c    ****       JustStopped = 0;
 5037              		.loc 1 3078 19 view .LVU1581
 5038 0052 1D60     		str	r5, [r3]
 5039              		.loc 1 3085 3 is_stmt 1 view .LVU1582
 5040              		.loc 1 3085 6 is_stmt 0 view .LVU1583
 5041 0054 40F0B781 		bne	.L555
3086:src/keys.c    ****     {
3087:src/keys.c    ****     if (OpCode != 0) {
 5042              		.loc 1 3087 5 is_stmt 1 view .LVU1584
 5043              		.loc 1 3087 16 is_stmt 0 view .LVU1585
 5044 0058 824B     		ldr	r3, .L1202+12
 5045 005a 1C68     		ldr	r4, [r3]
 5046              	.LVL448:
 5047              		.loc 1 3087 8 view .LVU1586
 5048 005c 002C     		cmp	r4, #0
 5049 005e 00F08382 		beq	.L556
3088:src/keys.c    ****       /*
3089:src/keys.c    ****        * Execute the key on release
3090:src/keys.c    ****        */
3091:src/keys.c    ****       GoFast = 1;
 5050              		.loc 1 3091 7 is_stmt 1 view .LVU1587
 5051              		.loc 1 3091 14 is_stmt 0 view .LVU1588
 5052 0062 814A     		ldr	r2, .L1202+16
3092:src/keys.c    ****       c = OpCode;
3093:src/keys.c    ****       OpCode = 0;
 5053              		.loc 1 3093 14 view .LVU1589
 5054 0064 1D60     		str	r5, [r3]
3091:src/keys.c    ****       c = OpCode;
 5055              		.loc 1 3091 14 view .LVU1590
 5056 0066 0120     		movs	r0, #1
3094:src/keys.c    **** 
3095:src/keys.c    ****       if (c == STATE_SST)
 5057              		.loc 1 3095 10 view .LVU1591
 5058 0068 2E2C     		cmp	r4, #46
3092:src/keys.c    ****       OpCode = 0;
 5059              		.loc 1 3092 9 view .LVU1592
 5060 006a A346     		mov	fp, r4
3091:src/keys.c    ****       c = OpCode;
 5061              		.loc 1 3091 14 view .LVU1593
 5062 006c 1060     		str	r0, [r2]
3092:src/keys.c    ****       OpCode = 0;
 5063              		.loc 1 3092 7 is_stmt 1 view .LVU1594
ARM GAS  /tmp/cccKVeLo.s 			page 169


 5064              	.LVL449:
3093:src/keys.c    **** 
 5065              		.loc 1 3093 7 view .LVU1595
 5066              		.loc 1 3095 7 view .LVU1596
 5067              		.loc 1 3095 10 is_stmt 0 view .LVU1597
 5068 006e 00F08F82 		beq	.L1107
3096:src/keys.c    **** 	xeq_sst_bst(1);
3097:src/keys.c    ****       else {
3098:src/keys.c    **** 	if (c == (OP_NIL | OP_OFF) || c == (OP_NIL | OP_rCLX) || !is_bad_cmdline()) {
 5069              		.loc 1 3098 2 is_stmt 1 view .LVU1598
 5070              		.loc 1 3098 5 is_stmt 0 view .LVU1599
 5071 0072 B4F5817F 		cmp	r4, #258
 5072 0076 08D0     		beq	.L562
 5073              		.loc 1 3098 29 discriminator 1 view .LVU1600
 5074 0078 40F23F13 		movw	r3, #319
 5075 007c 9C42     		cmp	r4, r3
 5076 007e 04D0     		beq	.L562
 5077              		.loc 1 3098 60 discriminator 2 view .LVU1601
 5078 0080 FFF7FEFF 		bl	is_bad_cmdline
 5079              	.LVL450:
 5080              		.loc 1 3098 56 discriminator 2 view .LVU1602
 5081 0084 0028     		cmp	r0, #0
 5082 0086 40F09382 		bne	.L1108
 5083              	.L562:
3099:src/keys.c    **** 	  xeq(c);
 5084              		.loc 1 3099 4 is_stmt 1 view .LVU1603
3100:src/keys.c    **** 	  if (Running || Pause)
 5085              		.loc 1 3100 8 is_stmt 0 view .LVU1604
 5086 008a 784E     		ldr	r6, .L1202+20
3099:src/keys.c    **** 	  xeq(c);
 5087              		.loc 1 3099 4 view .LVU1605
 5088 008c 2046     		mov	r0, r4
 5089 008e FFF7FEFF 		bl	xeq
 5090              	.LVL451:
 5091              		.loc 1 3100 4 is_stmt 1 view .LVU1606
 5092              		.loc 1 3100 7 is_stmt 0 view .LVU1607
 5093 0092 3368     		ldr	r3, [r6]
 5094 0094 0BB9     		cbnz	r3, .L560
 5095              		.loc 1 3100 16 discriminator 1 view .LVU1608
 5096 0096 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 5097 0098 0BB1     		cbz	r3, .L558
 5098              	.L560:
3101:src/keys.c    **** 	    xeqprog();
 5099              		.loc 1 3101 6 is_stmt 1 view .LVU1609
 5100 009a FFF7FEFF 		bl	xeqprog
 5101              	.LVL452:
 5102              	.L558:
3102:src/keys.c    **** 	}
3103:src/keys.c    ****       }
3104:src/keys.c    ****       dot(RPN, ShowRPN);
 5103              		.loc 1 3104 7 view .LVU1610
 5104 009e 744C     		ldr	r4, .L1202+24
 5105              	.LVL453:
 5106              		.loc 1 3104 7 is_stmt 0 view .LVU1611
 5107 00a0 8D20     		movs	r0, #141
 5108 00a2 2168     		ldr	r1, [r4]
 5109 00a4 FFF7FEFF 		bl	dot
ARM GAS  /tmp/cccKVeLo.s 			page 170


 5110              	.LVL454:
3105:src/keys.c    ****     }
3106:src/keys.c    ****     else {
3107:src/keys.c    ****       // Ignore key-up if no operation was pending
3108:src/keys.c    ****       dot(RPN, ShowRPN);
3109:src/keys.c    **** #ifndef CONSOLE
3110:src/keys.c    ****       if (! State2.disp_temp ) {
3111:src/keys.c    **** 	if (!WasDataEntry) {
3112:src/keys.c    **** 	  // This will get rid of the last displayed op-code
3113:src/keys.c    **** 	  display();
3114:src/keys.c    **** 	}
3115:src/keys.c    **** 	else {
3116:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3117:src/keys.c    **** 	}
3118:src/keys.c    ****       }
3119:src/keys.c    **** #endif
3120:src/keys.c    ****       return;
3121:src/keys.c    ****     }
3122:src/keys.c    **** 
3123:src/keys.c    ****     /*
3124:src/keys.c    ****      *  Turn on the RPN symbol if desired
3125:src/keys.c    ****      */
3126:src/keys.c    ****     if (ShowRPN) {
 5111              		.loc 1 3126 5 is_stmt 1 view .LVU1612
 5112              		.loc 1 3126 9 is_stmt 0 view .LVU1613
 5113 00a8 2568     		ldr	r5, [r4]
 5114              		.loc 1 3126 8 view .LVU1614
 5115 00aa 002D     		cmp	r5, #0
 5116 00ac 40F04F82 		bne	.L564
 5117 00b0 3268     		ldr	r2, [r6]
 5118              	.LVL455:
 5119              	.L565:
3127:src/keys.c    ****       finish_RPN(); // RPN
3128:src/keys.c    ****     }
3129:src/keys.c    ****   }
3130:src/keys.c    ****   else {
3131:src/keys.c    ****     /*
3132:src/keys.c    ****      *  Decode the key 
3133:src/keys.c    ****      */
3134:src/keys.c    ****     // print_debug (100, c);
3135:src/keys.c    ****     WasDataEntry = 0;
3136:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
3137:src/keys.c    **** #ifdef DM42
3138:src/keys.c    ****     if (c != K_OP) {
3139:src/keys.c    ****       c = process(c);		// returns an op-code or state
3140:src/keys.c    ****     }
3141:src/keys.c    ****     else {
3142:src/keys.c    ****       if (isRARG(nd_opcode)) {
3143:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
3144:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
3145:src/keys.c    **** 	  c = nd_opcode;
3146:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
3147:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
3148:src/keys.c    **** 	  c = STATE_UNFINISHED;
3149:src/keys.c    **** 	}
3150:src/keys.c    **** 	else {
3151:src/keys.c    **** 	  init_arg(RARG_CMD(nd_opcode));
ARM GAS  /tmp/cccKVeLo.s 			page 171


3152:src/keys.c    **** 	  c = STATE_UNFINISHED;
3153:src/keys.c    **** 	}
3154:src/keys.c    ****       }
3155:src/keys.c    ****       else {
3156:src/keys.c    **** 	c = check_confirm(nd_opcode);
3157:src/keys.c    ****       }      
3158:src/keys.c    ****     }
3159:src/keys.c    **** #else
3160:src/keys.c    ****     c = process(c);		// returns an op-code or state
3161:src/keys.c    **** #endif
3162:src/keys.c    ****     switch (c) {
3163:src/keys.c    ****     case STATE_SST:
3164:src/keys.c    ****       OpCode = c;
3165:src/keys.c    ****       OpCodeDisplayPending = 0;
3166:src/keys.c    ****       xeq_sst_bst(0);
3167:src/keys.c    ****       break;
3168:src/keys.c    **** 
3169:src/keys.c    ****     case STATE_BST:
3170:src/keys.c    ****       xeq_sst_bst(-1);
3171:src/keys.c    ****       break;
3172:src/keys.c    **** 
3173:src/keys.c    ****     case STATE_BACKSPACE:
3174:src/keys.c    ****       if (! State2.runmode)
3175:src/keys.c    **** 	delprog();
3176:src/keys.c    ****       else if (State2.alphas) {
3177:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
3178:src/keys.c    **** 	if (p > Alpha)
3179:src/keys.c    **** 	  *--p = '\0';
3180:src/keys.c    ****       }
3181:src/keys.c    ****       break;
3182:src/keys.c    **** 
3183:src/keys.c    ****     case STATE_RUNNING:
3184:src/keys.c    ****       xeqprog();  // continue execution
3185:src/keys.c    ****       break;
3186:src/keys.c    **** 
3187:src/keys.c    ****     case STATE_WINDOWRIGHT:
3188:src/keys.c    ****     case STATE_WINDOWLEFT:
3189:src/keys.c    ****       if (!is_bad_cmdline())
3190:src/keys.c    **** 	set_window(c);
3191:src/keys.c    ****       break;
3192:src/keys.c    **** 
3193:src/keys.c    ****     case STATE_UNFINISHED:
3194:src/keys.c    ****     case STATE_IGNORE:
3195:src/keys.c    ****       break;
3196:src/keys.c    **** 
3197:src/keys.c    ****     default:
3198:src/keys.c    ****       if (State2.runmode || NonProgrammable) {
3199:src/keys.c    **** 	NonProgrammable = 0;
3200:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
3201:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
3202:src/keys.c    **** 	    // Data entry key
3203:src/keys.c    **** #ifndef CONSOLE
3204:src/keys.c    **** 	    WasDataEntry = 1;
3205:src/keys.c    **** #endif
3206:src/keys.c    **** 	    cmdline_empty = (CmdLineLength == 0);
3207:src/keys.c    **** 	    xeq(c);
3208:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
ARM GAS  /tmp/cccKVeLo.s 			page 172


3209:src/keys.c    **** 	  }
3210:src/keys.c    **** 	}
3211:src/keys.c    **** 	else {
3212:src/keys.c    **** 	  // Save the op-code for execution on key-up
3213:src/keys.c    **** 	  OpCode = c;
3214:src/keys.c    **** 	  OpCodeDisplayPending = 1;
3215:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3216:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
3217:src/keys.c    **** 	}
3218:src/keys.c    ****       }
3219:src/keys.c    ****       else {
3220:src/keys.c    **** 	stoprog(c);
3221:src/keys.c    ****       }
3222:src/keys.c    ****     }
3223:src/keys.c    ****   }
3224:src/keys.c    ****   if (! Running && ! Pause
 5120              		.loc 1 3224 3 is_stmt 1 view .LVU1615
 5121              		.loc 1 3224 6 is_stmt 0 view .LVU1616
 5122 00b2 002A     		cmp	r2, #0
 5123 00b4 40F07481 		bne	.L1098
 5124              	.LVL456:
 5125              	.L580:
 5126              		.loc 1 3224 20 discriminator 1 view .LVU1617
 5127 00b8 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 5128              		.loc 1 3224 17 discriminator 1 view .LVU1618
 5129 00ba 002B     		cmp	r3, #0
 5130 00bc 40F07081 		bne	.L1098
3225:src/keys.c    **** #ifndef CONSOLE
3226:src/keys.c    ****       && ! JustStopped
 5131              		.loc 1 3226 10 view .LVU1619
 5132 00c0 674B     		ldr	r3, .L1202+8
3227:src/keys.c    **** #endif
3228:src/keys.c    ****       && ! JustDisplayed && c != STATE_IGNORE) {
 5133              		.loc 1 3228 10 view .LVU1620
 5134 00c2 6C4C     		ldr	r4, .L1202+28
 5135 00c4 1B68     		ldr	r3, [r3]
 5136 00c6 2268     		ldr	r2, [r4]
 5137              		.loc 1 3228 7 view .LVU1621
 5138 00c8 1343     		orrs	r3, r3, r2
 5139 00ca 19D1     		bne	.L878
 5140              		.loc 1 3228 26 discriminator 1 view .LVU1622
 5141 00cc BBF1320F 		cmp	fp, #50
 5142 00d0 16D0     		beq	.L878
 5143              	.LBB652:
3229:src/keys.c    ****     const int orig_WasDataEntry = WasDataEntry;
 5144              		.loc 1 3229 5 is_stmt 1 view .LVU1623
 5145              		.loc 1 3229 15 is_stmt 0 view .LVU1624
 5146 00d2 DFF8C091 		ldr	r9, .L1202+60
 5147 00d6 D9F80060 		ldr	r6, [r9]
 5148              	.LVL457:
3230:src/keys.c    **** 
3231:src/keys.c    ****     WasDataEntry &= !(c == (OP_SPEC | OP_ENTER) || cmdline_empty || State2.invalid_disp);
 5149              		.loc 1 3231 5 is_stmt 1 view .LVU1625
 5150              		.loc 1 3231 21 is_stmt 0 view .LVU1626
 5151 00da BBF1000F 		cmp	fp, #0
 5152 00de 09D0     		beq	.L880
 5153              		.loc 1 3231 49 discriminator 1 view .LVU1627
ARM GAS  /tmp/cccKVeLo.s 			page 173


 5154 00e0 002D     		cmp	r5, #0
 5155 00e2 40F0DC84 		bne	.L939
 5156              		.loc 1 3231 66 discriminator 3 view .LVU1628
 5157 00e6 644B     		ldr	r3, .L1202+32
 5158 00e8 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 5159              		.loc 1 3231 21 discriminator 3 view .LVU1629
 5160 00ea 9F07     		lsls	r7, r3, #30
 5161 00ec 00F12D85 		bmi	.L940
 5162 00f0 06F0010B 		and	fp, r6, #1
 5163              	.LVL458:
 5164              	.L880:
 5165              		.loc 1 3231 18 discriminator 8 view .LVU1630
 5166 00f4 C9F800B0 		str	fp, [r9]
3232:src/keys.c    ****     display();
 5167              		.loc 1 3232 5 is_stmt 1 discriminator 8 view .LVU1631
 5168 00f8 FFF7FEFF 		bl	display
 5169              	.LVL459:
3233:src/keys.c    ****     WasDataEntry = orig_WasDataEntry;
 5170              		.loc 1 3233 5 discriminator 8 view .LVU1632
 5171              		.loc 1 3233 18 is_stmt 0 discriminator 8 view .LVU1633
 5172 00fc C9F80060 		str	r6, [r9]
 5173              	.LVL460:
 5174              	.L878:
 5175              		.loc 1 3233 18 discriminator 8 view .LVU1634
 5176              	.LBE652:
3234:src/keys.c    ****   }
3235:src/keys.c    **** 
3236:src/keys.c    ****  no_display:
3237:src/keys.c    ****   JustDisplayed = 0;
 5177              		.loc 1 3237 3 is_stmt 1 view .LVU1635
 5178              		.loc 1 3237 17 is_stmt 0 view .LVU1636
 5179 0100 0023     		movs	r3, #0
 5180 0102 2360     		str	r3, [r4]
3238:src/keys.c    ****   watchdog();
 5181              		.loc 1 3238 13 is_stmt 1 view .LVU1637
 5182              	.L534:
3239:src/keys.c    **** }
 5183              		.loc 1 3239 1 is_stmt 0 view .LVU1638
 5184 0104 03B0     		add	sp, sp, #12
 5185              		.cfi_remember_state
 5186              		.cfi_def_cfa_offset 36
 5187              		@ sp needed
 5188 0106 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5189              	.LVL461:
 5190              	.L1104:
 5191              		.cfi_restore_state
2996:src/keys.c    ****       /*
 5192              		.loc 1 2996 5 is_stmt 1 view .LVU1639
2996:src/keys.c    ****       /*
 5193              		.loc 1 2996 9 is_stmt 0 view .LVU1640
 5194 010a FFF7FEFF 		bl	keyticks
 5195              	.LVL462:
2996:src/keys.c    ****       /*
 5196              		.loc 1 2996 8 view .LVU1641
 5197 010e 0128     		cmp	r0, #1
 5198 0110 1BDD     		ble	.L540
3000:src/keys.c    **** 	/*
ARM GAS  /tmp/cccKVeLo.s 			page 174


 5199              		.loc 1 3000 7 is_stmt 1 view .LVU1642
3000:src/keys.c    **** 	/*
 5200              		.loc 1 3000 18 is_stmt 0 view .LVU1643
 5201 0112 544D     		ldr	r5, .L1202+12
 5202 0114 2868     		ldr	r0, [r5]
3000:src/keys.c    **** 	/*
 5203              		.loc 1 3000 10 view .LVU1644
 5204 0116 98B1     		cbz	r0, .L542
3004:src/keys.c    **** 	  /*
 5205              		.loc 1 3004 2 is_stmt 1 view .LVU1645
3004:src/keys.c    **** 	  /*
 5206              		.loc 1 3004 6 is_stmt 0 view .LVU1646
 5207 0118 584B     		ldr	r3, .L1202+36
3004:src/keys.c    **** 	  /*
 5208              		.loc 1 3004 5 view .LVU1647
 5209 011a 1E68     		ldr	r6, [r3]
 5210 011c 002E     		cmp	r6, #0
 5211 011e 00F06782 		beq	.L543
3008:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5212              		.loc 1 3008 4 is_stmt 1 view .LVU1648
3009:src/keys.c    **** 	    DispMsg = "RUN";
 5213              		.loc 1 3009 7 is_stmt 0 view .LVU1649
 5214 0122 40F23B12 		movw	r2, #315
3008:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5215              		.loc 1 3008 25 view .LVU1650
 5216 0126 0025     		movs	r5, #0
3009:src/keys.c    **** 	    DispMsg = "RUN";
 5217              		.loc 1 3009 7 view .LVU1651
 5218 0128 9042     		cmp	r0, r2
3008:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5219              		.loc 1 3008 25 view .LVU1652
 5220 012a 1D60     		str	r5, [r3]
3009:src/keys.c    **** 	    DispMsg = "RUN";
 5221              		.loc 1 3009 4 is_stmt 1 view .LVU1653
3009:src/keys.c    **** 	    DispMsg = "RUN";
 5222              		.loc 1 3009 7 is_stmt 0 view .LVU1654
 5223 012c 40F0B683 		bne	.L544
3010:src/keys.c    **** 	  }
 5224              		.loc 1 3010 6 is_stmt 1 view .LVU1655
3010:src/keys.c    **** 	  }
 5225              		.loc 1 3010 14 is_stmt 0 view .LVU1656
 5226 0130 534B     		ldr	r3, .L1202+40
 5227 0132 544A     		ldr	r2, .L1202+44
 5228 0134 1A60     		str	r2, [r3]
 5229              	.L545:
3016:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
 5230              		.loc 1 3016 4 is_stmt 1 view .LVU1657
 5231 0136 FFF7FEFF 		bl	display
 5232              	.LVL463:
3017:src/keys.c    **** 	}
 5233              		.loc 1 3017 4 view .LVU1658
3017:src/keys.c    **** 	}
 5234              		.loc 1 3017 12 is_stmt 0 view .LVU1659
 5235 013a 4D4B     		ldr	r3, .L1202+24
 5236 013c 0122     		movs	r2, #1
 5237 013e 1A60     		str	r2, [r3]
 5238              	.L542:
ARM GAS  /tmp/cccKVeLo.s 			page 175


3029:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5239              		.loc 1 3029 7 is_stmt 1 view .LVU1660
3029:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5240              		.loc 1 3029 11 is_stmt 0 view .LVU1661
 5241 0140 FFF7FEFF 		bl	keyticks
 5242              	.LVL464:
3029:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5243              		.loc 1 3029 10 view .LVU1662
 5244 0144 0C28     		cmp	r0, #12
 5245 0146 00F32A82 		bgt	.L1109
 5246              	.L540:
3038:src/keys.c    **** 
 5247              		.loc 1 3038 15 is_stmt 1 view .LVU1663
3044:src/keys.c    ****       JustStopped = 0;
 5248              		.loc 1 3044 5 view .LVU1664
3044:src/keys.c    ****       JustStopped = 0;
 5249              		.loc 1 3044 9 is_stmt 0 view .LVU1665
 5250 014a 454D     		ldr	r5, .L1202+8
3044:src/keys.c    ****       JustStopped = 0;
 5251              		.loc 1 3044 8 view .LVU1666
 5252 014c 2B68     		ldr	r3, [r5]
 5253 014e 002B     		cmp	r3, #0
 5254 0150 40F09A81 		bne	.L1110
 5255              	.L549:
3052:src/keys.c    ****       return;
 5256              		.loc 1 3052 5 is_stmt 1 view .LVU1667
3052:src/keys.c    ****       return;
 5257              		.loc 1 3052 9 is_stmt 0 view .LVU1668
 5258 0154 454E     		ldr	r6, .L1202+20
 5259 0156 3368     		ldr	r3, [r6]
3052:src/keys.c    ****       return;
 5260              		.loc 1 3052 8 view .LVU1669
 5261 0158 002B     		cmp	r3, #0
 5262 015a 00F08781 		beq	.L1111
 5263              	.L551:
3085:src/keys.c    ****     {
 5264              		.loc 1 3085 3 is_stmt 1 view .LVU1670
3135:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5265              		.loc 1 3135 5 view .LVU1671
3136:src/keys.c    **** #ifdef DM42
 5266              		.loc 1 3136 13 is_stmt 0 view .LVU1672
 5267 015e 444A     		ldr	r2, .L1202+24
3135:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5268              		.loc 1 3135 18 view .LVU1673
 5269 0160 DFF83091 		ldr	r9, .L1202+60
3136:src/keys.c    **** #ifdef DM42
 5270              		.loc 1 3136 15 view .LVU1674
 5271 0164 B3FA83F3 		clz	r3, r3
 5272 0168 5B09     		lsrs	r3, r3, #5
3136:src/keys.c    **** #ifdef DM42
 5273              		.loc 1 3136 13 view .LVU1675
 5274 016a 1360     		str	r3, [r2]
3135:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5275              		.loc 1 3135 18 view .LVU1676
 5276 016c 0023     		movs	r3, #0
 5277 016e C9F80030 		str	r3, [r9]
3136:src/keys.c    **** #ifdef DM42
ARM GAS  /tmp/cccKVeLo.s 			page 176


 5278              		.loc 1 3136 5 is_stmt 1 view .LVU1677
3138:src/keys.c    ****       c = process(c);		// returns an op-code or state
 5279              		.loc 1 3138 5 view .LVU1678
 5280              	.L537:
3139:src/keys.c    ****     }
 5281              		.loc 1 3139 7 view .LVU1679
 5282              	.LVL465:
 5283              	.LBB653:
 5284              	.LBI653:
2793:src/keys.c    ****   const enum shifts shift = cur_shift();
 5285              		.loc 1 2793 12 view .LVU1680
 5286              	.LBB654:
2794:src/keys.c    ****   enum catalogues cat;
 5287              		.loc 1 2794 3 view .LVU1681
 5288              	.LBB655:
 5289              	.LBI655:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 5290              		.loc 1 86 13 view .LVU1682
 5291              	.LBB656:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5292              		.loc 1 87 2 view .LVU1683
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5293              		.loc 1 87 18 is_stmt 0 view .LVU1684
 5294 0172 FFF7FEFF 		bl	shift_down
 5295              	.LVL466:
  88:src/keys.c    **** }
 5296              		.loc 1 88 2 is_stmt 1 view .LVU1685
  88:src/keys.c    **** }
 5297              		.loc 1 88 52 is_stmt 0 view .LVU1686
 5298 0176 8246     		mov	r10, r0
 5299 0178 10B9     		cbnz	r0, .L569
 5300 017a 3F4B     		ldr	r3, .L1202+32
 5301 017c 93F810A0 		ldrb	r10, [r3, #16]	@ zero_extendqisi2
 5302              	.L569:
 5303              	.LVL467:
  88:src/keys.c    **** }
 5304              		.loc 1 88 52 view .LVU1687
 5305              	.LBE656:
 5306              	.LBE655:
2795:src/keys.c    **** 
 5307              		.loc 1 2795 3 is_stmt 1 view .LVU1688
2797:src/keys.c    ****     /*
 5308              		.loc 1 2797 3 view .LVU1689
2797:src/keys.c    ****     /*
 5309              		.loc 1 2797 7 is_stmt 0 view .LVU1690
 5310 0180 3568     		ldr	r5, [r6]
2797:src/keys.c    ****     /*
 5311              		.loc 1 2797 6 view .LVU1691
 5312 0182 002D     		cmp	r5, #0
 5313 0184 40F0F380 		bne	.L570
2797:src/keys.c    ****     /*
 5314              		.loc 1 2797 15 view .LVU1692
 5315 0188 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 5316 018a 002B     		cmp	r3, #0
 5317 018c 40F0EF80 		bne	.L570
2825:src/keys.c    **** #else
 5318              		.loc 1 2825 3 is_stmt 1 view .LVU1693
ARM GAS  /tmp/cccKVeLo.s 			page 177


2825:src/keys.c    **** #else
 5319              		.loc 1 2825 6 is_stmt 0 view .LVU1694
 5320 0190 242C     		cmp	r4, #36
 5321 0192 00F0F283 		beq	.L1112
2835:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5322              		.loc 1 2835 2 is_stmt 1 view .LVU1695
2835:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5323              		.loc 1 2835 5 is_stmt 0 view .LVU1696
 5324 0196 272C     		cmp	r4, #39
 5325 0198 04D1     		bne	.L579
2835:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5326              		.loc 1 2835 15 view .LVU1697
 5327 019a 314B     		ldr	r3, .L1202+8
 5328 019c 1A68     		ldr	r2, [r3]
 5329 019e 002A     		cmp	r2, #0
 5330 01a0 40F0C184 		bne	.L1113
 5331              	.L579:
 5332 01a4 DFF8D080 		ldr	r8, .L1202+32
 5333 01a8 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
 5334              	.L577:
2844:src/keys.c    **** 		CmdLineLength = 0;
 5335              		.loc 1 2844 2 is_stmt 1 view .LVU1698
2844:src/keys.c    **** 		CmdLineLength = 0;
 5336              		.loc 1 2844 5 is_stmt 0 view .LVU1699
 5337 01ac 002B     		cmp	r3, #0
 5338 01ae 40F06D83 		bne	.L1114
 5339              	.L582:
2850:src/keys.c    **** 		return process_confirm((const keycode)c);
 5340              		.loc 1 2850 2 is_stmt 1 view .LVU1700
2850:src/keys.c    **** 		return process_confirm((const keycode)c);
 5341              		.loc 1 2850 6 is_stmt 0 view .LVU1701
 5342 01b2 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
2850:src/keys.c    **** 		return process_confirm((const keycode)c);
 5343              		.loc 1 2850 5 view .LVU1702
 5344 01b6 5907     		lsls	r1, r3, #29
 5345 01b8 40F09A83 		bne	.L1115
2853:src/keys.c    **** 		return process_arg((const keycode)c);
 5346              		.loc 1 2853 2 is_stmt 1 view .LVU1703
2853:src/keys.c    **** 		return process_arg((const keycode)c);
 5347              		.loc 1 2853 6 is_stmt 0 view .LVU1704
 5348 01bc 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2853:src/keys.c    **** 		return process_arg((const keycode)c);
 5349              		.loc 1 2853 5 view .LVU1705
 5350 01c0 9A06     		lsls	r2, r3, #26
 5351 01c2 00F1F083 		bmi	.L1116
2856:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5352              		.loc 1 2856 2 is_stmt 1 view .LVU1706
2856:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5353              		.loc 1 2856 6 is_stmt 0 view .LVU1707
 5354 01c6 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
2856:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5355              		.loc 1 2856 5 view .LVU1708
 5356 01ca 11F0010B 		ands	fp, r1, #1
 5357 01ce 40F02B84 		bne	.L1117
2859:src/keys.c    **** 		return process_hyp((const keycode)c);
 5358              		.loc 1 2859 2 is_stmt 1 view .LVU1709
2859:src/keys.c    **** 		return process_hyp((const keycode)c);
ARM GAS  /tmp/cccKVeLo.s 			page 178


 5359              		.loc 1 2859 5 is_stmt 0 view .LVU1710
 5360 01d2 11F02000 		ands	r0, r1, #32
 5361 01d6 40F06584 		bne	.L1118
2862:src/keys.c    **** 		return process_test((const keycode)c);
 5362              		.loc 1 2862 2 is_stmt 1 view .LVU1711
2862:src/keys.c    **** 		return process_test((const keycode)c);
 5363              		.loc 1 2862 12 is_stmt 0 view .LVU1712
 5364 01da 98F80FB0 		ldrb	fp, [r8, #15]	@ zero_extendqisi2
2862:src/keys.c    **** 		return process_test((const keycode)c);
 5365              		.loc 1 2862 5 view .LVU1713
 5366 01de BBF1070F 		cmp	fp, #7
 5367 01e2 40F0ED83 		bne	.L1119
2865:src/keys.c    **** 		return process_status((const keycode)c);
 5368              		.loc 1 2865 2 is_stmt 1 view .LVU1714
2865:src/keys.c    **** 		return process_status((const keycode)c);
 5369              		.loc 1 2865 12 is_stmt 0 view .LVU1715
 5370 01e6 98F80C30 		ldrb	r3, [r8, #12]	@ zero_extendqisi2
2865:src/keys.c    **** 		return process_status((const keycode)c);
 5371              		.loc 1 2865 5 view .LVU1716
 5372 01ea 002B     		cmp	r3, #0
 5373 01ec 40F0B084 		bne	.L1120
2871:src/keys.c    **** 		toggle_shift(SHIFT_F);
 5374              		.loc 1 2871 2 is_stmt 1 view .LVU1717
2871:src/keys.c    **** 		toggle_shift(SHIFT_F);
 5375              		.loc 1 2871 5 is_stmt 0 view .LVU1718
 5376 01f0 292C     		cmp	r4, #41
 5377 01f2 00F06D85 		beq	.L1121
2875:src/keys.c    **** 		toggle_shift(SHIFT_G);
 5378              		.loc 1 2875 2 is_stmt 1 view .LVU1719
2875:src/keys.c    **** 		toggle_shift(SHIFT_G);
 5379              		.loc 1 2875 5 is_stmt 0 view .LVU1720
 5380 01f6 2A2C     		cmp	r4, #42
 5381 01f8 00F07B85 		beq	.L1122
2879:src/keys.c    **** 		toggle_shift(SHIFT_H);
 5382              		.loc 1 2879 2 is_stmt 1 view .LVU1721
2879:src/keys.c    **** 		toggle_shift(SHIFT_H);
 5383              		.loc 1 2879 5 is_stmt 0 view .LVU1722
 5384 01fc 2B2C     		cmp	r4, #43
 5385 01fe 00F09585 		beq	.L1123
2888:src/keys.c    **** 		return process_arrow((const keycode)c);
 5386              		.loc 1 2888 2 is_stmt 1 view .LVU1723
2888:src/keys.c    **** 		return process_arrow((const keycode)c);
 5387              		.loc 1 2888 5 is_stmt 0 view .LVU1724
 5388 0202 4807     		lsls	r0, r1, #29
 5389 0204 00F1D084 		bmi	.L1124
2896:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 5390              		.loc 1 2896 2 is_stmt 1 view .LVU1725
2896:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 5391              		.loc 1 2896 8 is_stmt 0 view .LVU1726
 5392 0208 E4B2     		uxtb	r4, r4
 5393              	.LVL468:
 5394              	.LBB657:
 5395              	.LBI657:
 257:src/keys.c    **** {
 5396              		.loc 1 257 24 is_stmt 1 view .LVU1727
 5397              	.LBB658:
 259:src/keys.c    ****   int i, col, max;
ARM GAS  /tmp/cccKVeLo.s 			page 179


 5398              		.loc 1 259 3 view .LVU1728
 260:src/keys.c    ****   const struct _map {
 5399              		.loc 1 260 3 view .LVU1729
 261:src/keys.c    ****     unsigned char key, cat[3];
 5400              		.loc 1 261 3 view .LVU1730
 266:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 5401              		.loc 1 266 3 view .LVU1731
 266:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 5402              		.loc 1 266 6 is_stmt 0 view .LVU1732
 5403 020a 212C     		cmp	r4, #33
 5404 020c 00F0F884 		beq	.L1125
 269:src/keys.c    ****     /*
 5405              		.loc 1 269 3 is_stmt 1 view .LVU1733
 269:src/keys.c    ****     /*
 5406              		.loc 1 269 23 is_stmt 0 view .LVU1734
 5407 0210 1D4A     		ldr	r2, .L1202+48
 5408 0212 D8F81430 		ldr	r3, [r8, #20]
 269:src/keys.c    ****     /*
 5409              		.loc 1 269 6 view .LVU1735
 5410 0216 1A42     		tst	r2, r3
 5411 0218 40F0FC84 		bne	.L663
 5412              	.LBB659:
 273:src/keys.c    **** #ifdef DM42
 5413              		.loc 1 273 5 is_stmt 1 view .LVU1736
 300:src/keys.c    ****       /*
 5414              		.loc 1 300 5 view .LVU1737
 300:src/keys.c    ****       /*
 5415              		.loc 1 300 8 is_stmt 0 view .LVU1738
 5416 021c 242C     		cmp	r4, #36
 5417 021e 03D1     		bne	.L664
 300:src/keys.c    ****       /*
 5418              		.loc 1 300 18 view .LVU1739
 5419 0220 BAF1020F 		cmp	r10, #2
 5420 0224 01F0ED83 		beq	.L912
 5421              	.L664:
 315:src/keys.c    ****       /*
 5422              		.loc 1 315 5 is_stmt 1 view .LVU1740
 315:src/keys.c    ****       /*
 5423              		.loc 1 315 8 is_stmt 0 view .LVU1741
 5424 0228 BAF1030F 		cmp	r10, #3
 5425 022c 3BD1     		bne	.L671
 5426              	.L894:
 325:src/keys.c    **** #ifndef WINGUI
 5427              		.loc 1 325 5 is_stmt 1 view .LVU1742
 5428              	.LVL469:
 327:src/keys.c    **** #else
 5429              		.loc 1 327 5 view .LVU1743
 327:src/keys.c    **** #else
 5430              		.loc 1 327 23 is_stmt 0 view .LVU1744
 5431 022e 174B     		ldr	r3, .L1202+52
 5432 0230 1B68     		ldr	r3, [r3]
 5433 0232 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 327:src/keys.c    **** #else
 5434              		.loc 1 327 27 view .LVU1745
 5435 0236 DA07     		lsls	r2, r3, #31
 5436 0238 00F11E86 		bmi	.L913
 327:src/keys.c    **** #else
ARM GAS  /tmp/cccKVeLo.s 			page 180


 5437              		.loc 1 327 73 view .LVU1746
 5438 023c 11F0020B 		ands	fp, r1, #2
 5439 0240 01F06881 		beq	.L1126
 325:src/keys.c    **** #ifndef WINGUI
 5440              		.loc 1 325 8 view .LVU1747
 5441 0244 124B     		ldr	r3, .L1202+56
 331:src/keys.c    ****   }
 5442              		.loc 1 331 9 view .LVU1748
 5443 0246 0C22     		movs	r2, #12
 327:src/keys.c    **** #else
 5444              		.loc 1 327 73 view .LVU1749
 5445 0248 4FF0020C 		mov	ip, #2
 5446              	.LVL470:
 5447              	.L666:
 327:src/keys.c    **** #else
 5448              		.loc 1 327 73 view .LVU1750
 5449              	.LBE659:
 375:src/keys.c    ****     if (cp->key == c) {
 5450              		.loc 1 375 3 is_stmt 1 view .LVU1751
 375:src/keys.c    ****     if (cp->key == c) {
 5451              		.loc 1 375 15 view .LVU1752
 5452 024c 181F     		subs	r0, r3, #4
 5453 024e 00EB8200 		add	r0, r0, r2, lsl #2
 5454              	.LBB660:
 327:src/keys.c    **** #else
 5455              		.loc 1 327 73 is_stmt 0 view .LVU1753
 5456 0252 0422     		movs	r2, #4
 5457              	.LVL471:
 327:src/keys.c    **** #else
 5458              		.loc 1 327 73 view .LVU1754
 5459 0254 22E0     		b	.L672
 5460              	.L1203:
 5461 0256 00BF     		.align	2
 5462              	.L1202:
 5463 0258 00000000 		.word	.LANCHOR12
 5464 025c 00000000 		.word	Pause
 5465 0260 00000000 		.word	JustStopped
 5466 0264 00000000 		.word	OpCode
 5467 0268 00000000 		.word	GoFast
 5468 026c 00000000 		.word	Running
 5469 0270 00000000 		.word	ShowRPN
 5470 0274 00000000 		.word	JustDisplayed
 5471 0278 00000000 		.word	StateWhileOn
 5472 027c 00000000 		.word	OpCodeDisplayPending
 5473 0280 00000000 		.word	DispMsg
 5474 0284 00000000 		.word	.LC0
 5475 0288 00080800 		.word	526336
 5476 028c 00000000 		.word	main_ram
 5477 0290 00000000 		.word	.LANCHOR11
 5478 0294 00000000 		.word	WasDataEntry
 5479              	.LVL472:
 5480              	.L1128:
 327:src/keys.c    **** #else
 5481              		.loc 1 327 73 view .LVU1755
 5482 0298 13F8042F 		ldrb	r2, [r3, #4]!	@ zero_extendqisi2
 5483              	.LVL473:
 5484              	.L672:
ARM GAS  /tmp/cccKVeLo.s 			page 181


 327:src/keys.c    **** #else
 5485              		.loc 1 327 73 view .LVU1756
 5486              	.LBE660:
 376:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 5487              		.loc 1 376 5 is_stmt 1 view .LVU1757
 375:src/keys.c    ****     if (cp->key == c) {
 5488              		.loc 1 375 24 view .LVU1758
 375:src/keys.c    ****     if (cp->key == c) {
 5489              		.loc 1 375 15 view .LVU1759
 376:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 5490              		.loc 1 376 8 is_stmt 0 view .LVU1760
 5491 029c 9442     		cmp	r4, r2
 5492 029e 00F0F684 		beq	.L1127
 375:src/keys.c    ****     if (cp->key == c) {
 5493              		.loc 1 375 3 view .LVU1761
 5494 02a2 9842     		cmp	r0, r3
 5495 02a4 F8D1     		bne	.L1128
 5496              	.LVL474:
 5497              	.L671:
 381:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5498              		.loc 1 381 3 is_stmt 1 view .LVU1762
 381:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5499              		.loc 1 381 6 is_stmt 0 view .LVU1763
 5500 02a6 0807     		lsls	r0, r1, #28
 5501 02a8 00F17885 		bmi	.L677
 5502              	.LVL475:
 5503              	.L675:
 381:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5504              		.loc 1 381 6 view .LVU1764
 5505              	.LBE658:
 5506              	.LBE657:
2911:src/keys.c    **** 		return process_labellist((const keycode)c);
 5507              		.loc 1 2911 2 is_stmt 1 view .LVU1765
2911:src/keys.c    **** 		return process_labellist((const keycode)c);
 5508              		.loc 1 2911 6 is_stmt 0 view .LVU1766
 5509 02ac 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
2911:src/keys.c    **** 		return process_labellist((const keycode)c);
 5510              		.loc 1 2911 5 view .LVU1767
 5511 02b0 5807     		lsls	r0, r3, #29
 5512 02b2 00F11C86 		bmi	.L1129
2914:src/keys.c    **** 		return process_registerlist((const keycode)c);
 5513              		.loc 1 2914 2 is_stmt 1 view .LVU1768
2914:src/keys.c    **** 		return process_registerlist((const keycode)c);
 5514              		.loc 1 2914 5 is_stmt 0 view .LVU1769
 5515 02b6 1A07     		lsls	r2, r3, #28
 5516 02b8 00F14587 		bmi	.L1130
2917:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 5517              		.loc 1 2917 2 is_stmt 1 view .LVU1770
2917:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 5518              		.loc 1 2917 5 is_stmt 0 view .LVU1771
 5519 02bc 98F80E20 		ldrb	r2, [r8, #14]	@ zero_extendqisi2
 5520 02c0 002A     		cmp	r2, #0
 5521 02c2 41F00780 		bne	.L1131
2920:src/keys.c    **** #ifndef INFRARED
 5522              		.loc 1 2920 2 is_stmt 1 view .LVU1772
2920:src/keys.c    **** #ifndef INFRARED
 5523              		.loc 1 2920 6 is_stmt 0 view .LVU1773
ARM GAS  /tmp/cccKVeLo.s 			page 182


 5524 02c6 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2920:src/keys.c    **** #ifndef INFRARED
 5525              		.loc 1 2920 5 view .LVU1774
 5526 02ca 1007     		lsls	r0, r2, #28
 5527 02cc 01F11C80 		bmi	.L1132
2933:src/keys.c    **** 		return process_cmplx((const keycode)c);
 5528              		.loc 1 2933 2 is_stmt 1 view .LVU1775
2933:src/keys.c    **** 		return process_cmplx((const keycode)c);
 5529              		.loc 1 2933 5 is_stmt 0 view .LVU1776
 5530 02d0 11F0020B 		ands	fp, r1, #2
 5531 02d4 41F08A80 		bne	.L1133
2936:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5532              		.loc 1 2936 3 is_stmt 1 view .LVU1777
2936:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5533              		.loc 1 2936 24 is_stmt 0 view .LVU1778
 5534 02d8 0AF1FF31 		add	r1, r10, #-1
2936:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5535              		.loc 1 2936 6 view .LVU1779
 5536 02dc C9B2     		uxtb	r1, r1
 5537 02de 0129     		cmp	r1, #1
 5538 02e0 41F27D81 		bls	.L1134
2938:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 5539              		.loc 1 2938 3 is_stmt 1 view .LVU1780
2938:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 5540              		.loc 1 2938 6 is_stmt 0 view .LVU1781
 5541 02e4 BAF1030F 		cmp	r10, #3
 5542 02e8 01F03181 		beq	.L1135
2941:src/keys.c    **** 	}
 5543              		.loc 1 2941 3 is_stmt 1 view .LVU1782
 5544              	.LVL476:
 5545              	.LBB672:
 5546              	.LBI672:
 678:src/keys.c    **** {
 5547              		.loc 1 678 12 view .LVU1783
 5548              	.LBB673:
 680:src/keys.c    **** 		// Row 1
 5549              		.loc 1 680 2 view .LVU1784
 727:src/keys.c    **** 	int op = op_map[lc];
 5550              		.loc 1 727 2 view .LVU1785
 5551              	.LBB674:
 5552              	.LBI674:
 136:src/keys.c    **** {
 5553              		.loc 1 136 12 view .LVU1786
 5554              	.LBB675:
 138:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 5555              		.loc 1 138 2 view .LVU1787
 148:src/keys.c    **** }
 5556              		.loc 1 148 2 view .LVU1788
 148:src/keys.c    **** }
 5557              		.loc 1 148 2 is_stmt 0 view .LVU1789
 5558              	.LBE675:
 5559              	.LBE674:
 728:src/keys.c    **** 	
 5560              		.loc 1 728 2 is_stmt 1 view .LVU1790
 733:src/keys.c    **** 	  switch (c) {
 5561              		.loc 1 733 6 is_stmt 0 view .LVU1791
 5562 02ec B149     		ldr	r1, .L1204
ARM GAS  /tmp/cccKVeLo.s 			page 183


 5563              	.LBB678:
 5564              	.LBB676:
 148:src/keys.c    **** }
 5565              		.loc 1 148 23 view .LVU1792
 5566 02ee B248     		ldr	r0, .L1204+4
 5567              	.LBE676:
 5568              	.LBE678:
 733:src/keys.c    **** 	  switch (c) {
 5569              		.loc 1 733 6 view .LVU1793
 5570 02f0 0968     		ldr	r1, [r1]
 5571              	.LBB679:
 5572              	.LBB677:
 148:src/keys.c    **** }
 5573              		.loc 1 148 23 view .LVU1794
 5574 02f2 10F804C0 		ldrb	ip, [r0, r4]	@ zero_extendqisi2
 5575              	.LBE677:
 5576              	.LBE679:
 728:src/keys.c    **** 	
 5577              		.loc 1 728 17 view .LVU1795
 5578 02f6 B148     		ldr	r0, .L1204+8
 733:src/keys.c    **** 	  switch (c) {
 5579              		.loc 1 733 6 view .LVU1796
 5580 02f8 91F8E817 		ldrb	r1, [r1, #2024]	@ zero_extendqisi2
 728:src/keys.c    **** 	
 5581              		.loc 1 728 17 view .LVU1797
 5582 02fc 30F81CA0 		ldrh	r10, [r0, ip, lsl #1]
 5583              	.LVL477:
 733:src/keys.c    **** 	  switch (c) {
 5584              		.loc 1 733 5 view .LVU1798
 5585 0300 C807     		lsls	r0, r1, #31
 728:src/keys.c    **** 	
 5586              		.loc 1 728 6 view .LVU1799
 5587 0302 D346     		mov	fp, r10
 5588              	.LVL478:
 732:src/keys.c    **** 	if (UState.intm) {
 5589              		.loc 1 732 2 is_stmt 1 view .LVU1800
 733:src/keys.c    **** 	  switch (c) {
 5590              		.loc 1 733 2 view .LVU1801
 733:src/keys.c    **** 	  switch (c) {
 5591              		.loc 1 733 5 is_stmt 0 view .LVU1802
 5592 0304 00F1BD81 		bmi	.L1136
 764:src/keys.c    **** 	  }
 5593              		.loc 1 764 12 is_stmt 1 view .LVU1803
 769:src/keys.c    **** #ifdef DM42
 5594              		.loc 1 769 2 view .LVU1804
 5595 0308 2D2C     		cmp	r4, #45
 5596 030a 00F29580 		bhi	.L595
 5597 030e DFE814F0 		tbh	[pc, r4, lsl #1]
 5598              	.L900:
 5599 0312 B70B     		.2byte	(.L847-.L900)/2
 5600 0314 AA0B     		.2byte	(.L848-.L900)/2
 5601 0316 9300     		.2byte	(.L595-.L900)/2
 5602 0318 3D02     		.2byte	(.L846-.L900)/2
 5603 031a 9300     		.2byte	(.L595-.L900)/2
 5604 031c 9300     		.2byte	(.L595-.L900)/2
 5605 031e 2E02     		.2byte	(.L841-.L900)/2
 5606 0320 2E02     		.2byte	(.L841-.L900)/2
ARM GAS  /tmp/cccKVeLo.s 			page 184


 5607 0322 9300     		.2byte	(.L595-.L900)/2
 5608 0324 9300     		.2byte	(.L595-.L900)/2
 5609 0326 9300     		.2byte	(.L595-.L900)/2
 5610 0328 9300     		.2byte	(.L595-.L900)/2
 5611 032a 9300     		.2byte	(.L595-.L900)/2
 5612 032c 9300     		.2byte	(.L595-.L900)/2
 5613 032e 9300     		.2byte	(.L595-.L900)/2
 5614 0330 9300     		.2byte	(.L595-.L900)/2
 5615 0332 2302     		.2byte	(.L845-.L900)/2
 5616 0334 9300     		.2byte	(.L595-.L900)/2
 5617 0336 2E02     		.2byte	(.L841-.L900)/2
 5618 0338 9300     		.2byte	(.L595-.L900)/2
 5619 033a 9300     		.2byte	(.L595-.L900)/2
 5620 033c 9300     		.2byte	(.L595-.L900)/2
 5621 033e 9300     		.2byte	(.L595-.L900)/2
 5622 0340 9300     		.2byte	(.L595-.L900)/2
 5623 0342 9300     		.2byte	(.L595-.L900)/2
 5624 0344 9300     		.2byte	(.L595-.L900)/2
 5625 0346 9300     		.2byte	(.L595-.L900)/2
 5626 0348 9300     		.2byte	(.L595-.L900)/2
 5627 034a 9300     		.2byte	(.L595-.L900)/2
 5628 034c 9300     		.2byte	(.L595-.L900)/2
 5629 034e 9300     		.2byte	(.L595-.L900)/2
 5630 0350 9300     		.2byte	(.L595-.L900)/2
 5631 0352 9300     		.2byte	(.L595-.L900)/2
 5632 0354 9300     		.2byte	(.L595-.L900)/2
 5633 0356 9300     		.2byte	(.L595-.L900)/2
 5634 0358 9300     		.2byte	(.L595-.L900)/2
 5635 035a 9300     		.2byte	(.L595-.L900)/2
 5636 035c 9300     		.2byte	(.L595-.L900)/2
 5637 035e 9300     		.2byte	(.L595-.L900)/2
 5638 0360 9300     		.2byte	(.L595-.L900)/2
 5639 0362 9300     		.2byte	(.L595-.L900)/2
 5640 0364 9300     		.2byte	(.L595-.L900)/2
 5641 0366 9300     		.2byte	(.L595-.L900)/2
 5642 0368 9300     		.2byte	(.L595-.L900)/2
 5643 036a 4302     		.2byte	(.L844-.L900)/2
 5644 036c F40B     		.2byte	(.L850-.L900)/2
 5645              	.LVL479:
 5646              		.p2align 1
 5647              	.L570:
 769:src/keys.c    **** #ifdef DM42
 5648              		.loc 1 769 2 is_stmt 0 view .LVU1805
 5649              	.LBE673:
 5650              	.LBE672:
2801:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 5651              		.loc 1 2801 5 is_stmt 1 view .LVU1806
2801:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 5652              		.loc 1 2801 8 is_stmt 0 view .LVU1807
 5653 036e 242C     		cmp	r4, #36
 5654 0370 00F09180 		beq	.L572
2801:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 5655              		.loc 1 2801 18 view .LVU1808
 5656 0374 272C     		cmp	r4, #39
 5657 0376 00F08E80 		beq	.L572
2811:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 5658              		.loc 1 2811 5 is_stmt 1 view .LVU1809
ARM GAS  /tmp/cccKVeLo.s 			page 185


2811:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 5659              		.loc 1 2811 8 is_stmt 0 view .LVU1810
 5660 037a 622C     		cmp	r4, #98
 5661 037c 07D0     		beq	.L575
2812:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5662              		.loc 1 2812 7 is_stmt 1 view .LVU1811
2812:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5663              		.loc 1 2812 15 is_stmt 0 view .LVU1812
 5664 037e 904B     		ldr	r3, .L1204+12
2814:src/keys.c    ****     }
 5665              		.loc 1 2814 14 view .LVU1813
 5666 0380 904A     		ldr	r2, .L1204+16
2812:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5667              		.loc 1 2812 17 view .LVU1814
 5668 0382 0134     		adds	r4, r4, #1
 5669              	.LVL480:
2814:src/keys.c    ****     }
 5670              		.loc 1 2814 14 view .LVU1815
 5671 0384 0121     		movs	r1, #1
2812:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5672              		.loc 1 2812 15 view .LVU1816
 5673 0386 DC74     		strb	r4, [r3, #19]
2813:src/keys.c    ****       GoFast = 1;
 5674              		.loc 1 2813 7 is_stmt 1 view .LVU1817
2813:src/keys.c    ****       GoFast = 1;
 5675              		.loc 1 2813 13 is_stmt 0 view .LVU1818
 5676 0388 0023     		movs	r3, #0
2814:src/keys.c    ****     }
 5677              		.loc 1 2814 14 view .LVU1819
 5678 038a 1160     		str	r1, [r2]
2813:src/keys.c    ****       GoFast = 1;
 5679              		.loc 1 2813 13 view .LVU1820
 5680 038c 3B70     		strb	r3, [r7]
2814:src/keys.c    ****     }
 5681              		.loc 1 2814 7 is_stmt 1 view .LVU1821
 5682              	.LVL481:
 5683              	.L575:
2814:src/keys.c    ****     }
 5684              		.loc 1 2814 7 is_stmt 0 view .LVU1822
 5685              	.LBE654:
 5686              	.LBE653:
3184:src/keys.c    ****       break;
 5687              		.loc 1 3184 7 is_stmt 1 view .LVU1823
 5688 038e FFF7FEFF 		bl	xeqprog
 5689              	.LVL482:
3185:src/keys.c    **** 
 5690              		.loc 1 3185 7 view .LVU1824
 5691 0392 3268     		ldr	r2, [r6]
2977:src/keys.c    ****   if (was_paused && Pause == 0)
 5692              		.loc 1 2977 7 is_stmt 0 view .LVU1825
 5693 0394 0025     		movs	r5, #0
3185:src/keys.c    **** 
 5694              		.loc 1 3185 7 view .LVU1826
 5695 0396 4FF0310B 		mov	fp, #49
 5696              	.LVL483:
3224:src/keys.c    **** #ifndef CONSOLE
 5697              		.loc 1 3224 3 is_stmt 1 view .LVU1827
ARM GAS  /tmp/cccKVeLo.s 			page 186


3224:src/keys.c    **** #ifndef CONSOLE
 5698              		.loc 1 3224 6 is_stmt 0 view .LVU1828
 5699 039a 002A     		cmp	r2, #0
 5700 039c 3FF48CAE 		beq	.L580
 5701              	.L1098:
3224:src/keys.c    **** #ifndef CONSOLE
 5702              		.loc 1 3224 6 view .LVU1829
 5703 03a0 894C     		ldr	r4, .L1204+20
3237:src/keys.c    ****   watchdog();
 5704              		.loc 1 3237 3 is_stmt 1 view .LVU1830
3237:src/keys.c    ****   watchdog();
 5705              		.loc 1 3237 17 is_stmt 0 view .LVU1831
 5706 03a2 0023     		movs	r3, #0
 5707 03a4 2360     		str	r3, [r4]
3238:src/keys.c    **** }
 5708              		.loc 1 3238 13 is_stmt 1 view .LVU1832
 5709 03a6 ADE6     		b	.L534
 5710              	.LVL484:
 5711              	.L1103:
2988:src/keys.c    ****     }
 5712              		.loc 1 2988 7 view .LVU1833
3136:src/keys.c    **** #ifdef DM42
 5713              		.loc 1 3136 15 is_stmt 0 view .LVU1834
 5714 03a8 884E     		ldr	r6, .L1204+24
3136:src/keys.c    **** #ifdef DM42
 5715              		.loc 1 3136 13 view .LVU1835
 5716 03aa 8949     		ldr	r1, .L1204+28
3136:src/keys.c    **** #ifdef DM42
 5717              		.loc 1 3136 15 view .LVU1836
 5718 03ac 3368     		ldr	r3, [r6]
2988:src/keys.c    ****     }
 5719              		.loc 1 2988 14 view .LVU1837
 5720 03ae 894A     		ldr	r2, .L1204+32
3135:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5721              		.loc 1 3135 18 view .LVU1838
 5722 03b0 DFF83892 		ldr	r9, .L1204+56
3136:src/keys.c    **** #ifdef DM42
 5723              		.loc 1 3136 15 view .LVU1839
 5724 03b4 B3FA83F3 		clz	r3, r3
 5725 03b8 5B09     		lsrs	r3, r3, #5
3136:src/keys.c    **** #ifdef DM42
 5726              		.loc 1 3136 13 view .LVU1840
 5727 03ba 0B60     		str	r3, [r1]
2988:src/keys.c    ****     }
 5728              		.loc 1 2988 14 view .LVU1841
 5729 03bc 0023     		movs	r3, #0
 5730 03be 1360     		str	r3, [r2]
3085:src/keys.c    ****     {
 5731              		.loc 1 3085 3 is_stmt 1 view .LVU1842
3135:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5732              		.loc 1 3135 5 view .LVU1843
3135:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5733              		.loc 1 3135 18 is_stmt 0 view .LVU1844
 5734 03c0 C9F80030 		str	r3, [r9]
3136:src/keys.c    **** #ifdef DM42
 5735              		.loc 1 3136 5 is_stmt 1 view .LVU1845
3138:src/keys.c    ****       c = process(c);		// returns an op-code or state
ARM GAS  /tmp/cccKVeLo.s 			page 187


 5736              		.loc 1 3138 5 view .LVU1846
 5737 03c4 D5E6     		b	.L537
 5738              	.L555:
3138:src/keys.c    ****       c = process(c);		// returns an op-code or state
 5739              		.loc 1 3138 5 is_stmt 0 view .LVU1847
 5740 03c6 814E     		ldr	r6, .L1204+24
3136:src/keys.c    **** #ifdef DM42
 5741              		.loc 1 3136 13 view .LVU1848
 5742 03c8 8149     		ldr	r1, .L1204+28
 5743 03ca 3268     		ldr	r2, [r6]
3135:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5744              		.loc 1 3135 5 is_stmt 1 view .LVU1849
3135:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5745              		.loc 1 3135 18 is_stmt 0 view .LVU1850
 5746 03cc DFF81C92 		ldr	r9, .L1204+56
3136:src/keys.c    **** #ifdef DM42
 5747              		.loc 1 3136 15 view .LVU1851
 5748 03d0 B2FA82F3 		clz	r3, r2
 5749 03d4 5B09     		lsrs	r3, r3, #5
3138:src/keys.c    ****       c = process(c);		// returns an op-code or state
 5750              		.loc 1 3138 8 view .LVU1852
 5751 03d6 342C     		cmp	r4, #52
3136:src/keys.c    **** #ifdef DM42
 5752              		.loc 1 3136 13 view .LVU1853
 5753 03d8 0B60     		str	r3, [r1]
3135:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5754              		.loc 1 3135 18 view .LVU1854
 5755 03da C9F80050 		str	r5, [r9]
3136:src/keys.c    **** #ifdef DM42
 5756              		.loc 1 3136 5 is_stmt 1 view .LVU1855
3138:src/keys.c    ****       c = process(c);		// returns an op-code or state
 5757              		.loc 1 3138 5 view .LVU1856
3138:src/keys.c    ****       c = process(c);		// returns an op-code or state
 5758              		.loc 1 3138 8 is_stmt 0 view .LVU1857
 5759 03de 7FF4C8AE 		bne	.L537
3142:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 5760              		.loc 1 3142 7 is_stmt 1 view .LVU1858
3142:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 5761              		.loc 1 3142 11 is_stmt 0 view .LVU1859
 5762 03e2 7D4B     		ldr	r3, .L1204+36
 5763 03e4 1868     		ldr	r0, [r3]
3142:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 5764              		.loc 1 3142 10 view .LVU1860
 5765 03e6 10F47043 		ands	r3, r0, #61440
 5766 03ea 1FD0     		beq	.L853
3142:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 5767              		.loc 1 3142 11 discriminator 1 view .LVU1861
 5768 03ec B3F5704F 		cmp	r3, #61440
 5769              	.LBB1274:
3143:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 5770              		.loc 1 3143 28 discriminator 1 view .LVU1862
 5771 03f0 C0F30723 		ubfx	r3, r0, #8, #8
 5772              	.LBE1274:
3142:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 5773              		.loc 1 3142 11 discriminator 1 view .LVU1863
 5774 03f4 00F0B080 		beq	.L854
 5775              	.LBB1277:
ARM GAS  /tmp/cccKVeLo.s 			page 188


3143:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 5776              		.loc 1 3143 2 is_stmt 1 view .LVU1864
3143:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 5777              		.loc 1 3143 28 is_stmt 0 view .LVU1865
 5778 03f8 A3F12004 		sub	r4, r3, #32
 5779              	.LVL485:
3143:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 5780              		.loc 1 3143 28 view .LVU1866
 5781 03fc E4B2     		uxtb	r4, r4
 5782              	.LVL486:
3144:src/keys.c    **** 	  c = nd_opcode;
 5783              		.loc 1 3144 2 is_stmt 1 view .LVU1867
3144:src/keys.c    **** 	  c = nd_opcode;
 5784              		.loc 1 3144 5 is_stmt 0 view .LVU1868
 5785 03fe 012C     		cmp	r4, #1
 5786 0400 40F28C80 		bls	.L855
3144:src/keys.c    **** 	  c = nd_opcode;
 5787              		.loc 1 3144 53 discriminator 1 view .LVU1869
 5788 0404 6C2C     		cmp	r4, #108
 5789 0406 00F08980 		beq	.L855
3144:src/keys.c    **** 	  c = nd_opcode;
 5790              		.loc 1 3144 74 discriminator 2 view .LVU1870
 5791 040a 242C     		cmp	r4, #36
 5792 040c 00F08680 		beq	.L855
3146:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 5793              		.loc 1 3146 7 is_stmt 1 view .LVU1871
3146:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 5794              		.loc 1 3146 32 is_stmt 0 view .LVU1872
 5795 0410 A4F12D01 		sub	r1, r4, #45
3146:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 5796              		.loc 1 3146 10 view .LVU1873
 5797 0414 0629     		cmp	r1, #6
 5798 0416 00F23483 		bhi	.L857
3147:src/keys.c    **** 	  c = STATE_UNFINISHED;
 5799              		.loc 1 3147 4 is_stmt 1 view .LVU1874
3147:src/keys.c    **** 	  c = STATE_UNFINISHED;
 5800              		.loc 1 3147 25 is_stmt 0 view .LVU1875
 5801 041a 4D3B     		subs	r3, r3, #77
3147:src/keys.c    **** 	  c = STATE_UNFINISHED;
 5802              		.loc 1 3147 16 view .LVU1876
 5803 041c 88F80F30 		strb	r3, [r8, #15]
3148:src/keys.c    **** 	}
 5804              		.loc 1 3148 4 is_stmt 1 view .LVU1877
 5805              	.LVL487:
3148:src/keys.c    **** 	}
 5806              		.loc 1 3148 4 is_stmt 0 view .LVU1878
 5807              	.LBE1277:
3162:src/keys.c    ****     case STATE_SST:
 5808              		.loc 1 3162 5 is_stmt 1 view .LVU1879
 5809              	.LBB1278:
3148:src/keys.c    **** 	}
 5810              		.loc 1 3148 6 is_stmt 0 view .LVU1880
 5811 0420 4FF0330B 		mov	fp, #51
 5812 0424 45E6     		b	.L565
 5813              	.LVL488:
 5814              	.L1102:
3148:src/keys.c    **** 	}
ARM GAS  /tmp/cccKVeLo.s 			page 189


 5815              		.loc 1 3148 6 view .LVU1881
 5816              	.LBE1278:
2983:src/keys.c    ****     }
 5817              		.loc 1 2983 7 is_stmt 1 view .LVU1882
 5818 0426 FFF7FEFF 		bl	xeq_xrom
 5819              	.LVL489:
2983:src/keys.c    ****     }
 5820              		.loc 1 2983 7 is_stmt 0 view .LVU1883
 5821 042a F5E5     		b	.L535
 5822              	.L853:
3156:src/keys.c    ****       }      
 5823              		.loc 1 3156 2 is_stmt 1 view .LVU1884
 5824              	.LBB1279:
 5825              	.LBB1280:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 5826              		.loc 1 625 5 is_stmt 0 view .LVU1885
 5827 042c C0F30723 		ubfx	r3, r0, #8, #8
 5828 0430 012B     		cmp	r3, #1
 5829              	.LBE1280:
 5830              	.LBE1279:
3156:src/keys.c    ****       }      
 5831              		.loc 1 3156 6 view .LVU1886
 5832 0432 8346     		mov	fp, r0
 5833              	.LVL490:
 5834              	.LBB1284:
 5835              	.LBI1279:
 624:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 5836              		.loc 1 624 12 is_stmt 1 view .LVU1887
 5837              	.LBB1281:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 5838              		.loc 1 625 2 view .LVU1888
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 5839              		.loc 1 625 5 is_stmt 0 view .LVU1889
 5840 0434 00F09480 		beq	.L895
 5841              	.LVL491:
 5842              	.L595:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 5843              		.loc 1 625 5 view .LVU1890
 5844              	.LBE1281:
 5845              	.LBE1284:
3162:src/keys.c    ****     case STATE_SST:
 5846              		.loc 1 3162 5 is_stmt 1 view .LVU1891
 5847 0438 ABF12B03 		sub	r3, fp, #43
 5848 043c 082B     		cmp	r3, #8
 5849 043e 00F2E780 		bhi	.L859
 5850 0442 01A2     		adr	r2, .L861
 5851 0444 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5852              		.p2align 2
 5853              	.L861:
 5854 0448 77040000 		.word	.L866+1
 5855 044c 77040000 		.word	.L866+1
 5856 0450 11060000 		.word	.L859+1
 5857 0454 E5040000 		.word	.L775+1
 5858 0458 D3040000 		.word	.L771+1
 5859 045c 03050000 		.word	.L768+1
 5860 0460 8F030000 		.word	.L575+1
 5861 0464 99050000 		.word	.L860+1
ARM GAS  /tmp/cccKVeLo.s 			page 190


 5862 0468 99050000 		.word	.L860+1
 5863              	.LVL492:
 5864              		.p2align 1
 5865              	.L1111:
3052:src/keys.c    ****       return;
 5866              		.loc 1 3052 21 is_stmt 0 discriminator 1 view .LVU1892
 5867 046c 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
3052:src/keys.c    ****       return;
 5868              		.loc 1 3052 18 discriminator 1 view .LVU1893
 5869 046e 002A     		cmp	r2, #0
 5870 0470 7FF475AE 		bne	.L551
 5871 0474 46E6     		b	.L534
 5872              	.LVL493:
 5873              	.L866:
3189:src/keys.c    **** 	set_window(c);
 5874              		.loc 1 3189 7 is_stmt 1 view .LVU1894
3189:src/keys.c    **** 	set_window(c);
 5875              		.loc 1 3189 12 is_stmt 0 view .LVU1895
 5876 0476 FFF7FEFF 		bl	is_bad_cmdline
 5877              	.LVL494:
3189:src/keys.c    **** 	set_window(c);
 5878              		.loc 1 3189 10 view .LVU1896
 5879 047a 0546     		mov	r5, r0
 5880 047c 0028     		cmp	r0, #0
 5881 047e 00F00082 		beq	.L870
 5882 0482 3268     		ldr	r2, [r6]
2977:src/keys.c    ****   if (was_paused && Pause == 0)
 5883              		.loc 1 2977 7 view .LVU1897
 5884 0484 0025     		movs	r5, #0
 5885 0486 14E6     		b	.L565
 5886              	.LVL495:
 5887              	.L1110:
3044:src/keys.c    ****       JustStopped = 0;
 5888              		.loc 1 3044 25 discriminator 1 view .LVU1898
 5889 0488 FFF7FEFF 		bl	is_key_pressed
 5890              	.LVL496:
3044:src/keys.c    ****       JustStopped = 0;
 5891              		.loc 1 3044 21 discriminator 1 view .LVU1899
 5892 048c 0028     		cmp	r0, #0
 5893 048e 7FF461AE 		bne	.L549
3045:src/keys.c    ****     }
 5894              		.loc 1 3045 7 is_stmt 1 view .LVU1900
3045:src/keys.c    ****     }
 5895              		.loc 1 3045 19 is_stmt 0 view .LVU1901
 5896 0492 2860     		str	r0, [r5]
 5897 0494 5EE6     		b	.L549
 5898              	.LVL497:
 5899              	.L572:
 5900              	.LBB1285:
 5901              	.LBB1220:
2802:src/keys.c    **** 	set_pc(0);
 5902              		.loc 1 2802 7 is_stmt 1 view .LVU1902
2802:src/keys.c    **** 	set_pc(0);
 5903              		.loc 1 2802 11 is_stmt 0 view .LVU1903
 5904 0496 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
2802:src/keys.c    **** 	set_pc(0);
 5905              		.loc 1 2802 10 view .LVU1904
ARM GAS  /tmp/cccKVeLo.s 			page 191


 5906 0498 4BB1     		cbz	r3, .L574
2802:src/keys.c    **** 	set_pc(0);
 5907              		.loc 1 2802 20 view .LVU1905
 5908 049a 464B     		ldr	r3, .L1204
 5909 049c 1B68     		ldr	r3, [r3]
 5910 049e B3F8E037 		ldrh	r3, [r3, #2016]
2802:src/keys.c    **** 	set_pc(0);
 5911              		.loc 1 2802 17 view .LVU1906
 5912 04a2 9B0B     		lsrs	r3, r3, #14
 5913 04a4 032B     		cmp	r3, #3
 5914 04a6 02D1     		bne	.L574
2803:src/keys.c    ****       Pause = 0;
 5915              		.loc 1 2803 2 is_stmt 1 view .LVU1907
 5916 04a8 0020     		movs	r0, #0
 5917 04aa FFF7FEFF 		bl	set_pc
 5918              	.LVL498:
 5919              	.L574:
2804:src/keys.c    ****       xeq_xrom();
 5920              		.loc 1 2804 7 view .LVU1908
2804:src/keys.c    ****       xeq_xrom();
 5921              		.loc 1 2804 13 is_stmt 0 view .LVU1909
 5922 04ae 0025     		movs	r5, #0
 5923 04b0 3D70     		strb	r5, [r7]
2805:src/keys.c    ****       set_running_off();
 5924              		.loc 1 2805 7 is_stmt 1 view .LVU1910
 5925 04b2 FFF7FEFF 		bl	xeq_xrom
 5926              	.LVL499:
2806:src/keys.c    ****       DispMsg = "Stopped";
 5927              		.loc 1 2806 7 view .LVU1911
 5928 04b6 FFF7FEFF 		bl	set_running_off
 5929              	.LVL500:
2807:src/keys.c    ****       State2.disp_freeze = 0;
 5930              		.loc 1 2807 7 view .LVU1912
2808:src/keys.c    ****       return STATE_UNFINISHED;
 5931              		.loc 1 2808 26 is_stmt 0 view .LVU1913
 5932 04ba 414B     		ldr	r3, .L1204+12
2807:src/keys.c    ****       State2.disp_freeze = 0;
 5933              		.loc 1 2807 15 view .LVU1914
 5934 04bc 4748     		ldr	r0, .L1204+40
2808:src/keys.c    ****       return STATE_UNFINISHED;
 5935              		.loc 1 2808 26 view .LVU1915
 5936 04be D97D     		ldrb	r1, [r3, #23]	@ zero_extendqisi2
2807:src/keys.c    ****       State2.disp_freeze = 0;
 5937              		.loc 1 2807 15 view .LVU1916
 5938 04c0 474C     		ldr	r4, .L1204+44
 5939              	.LVL501:
2807:src/keys.c    ****       State2.disp_freeze = 0;
 5940              		.loc 1 2807 15 view .LVU1917
 5941 04c2 3268     		ldr	r2, [r6]
 5942 04c4 0460     		str	r4, [r0]
2808:src/keys.c    ****       return STATE_UNFINISHED;
 5943              		.loc 1 2808 7 is_stmt 1 view .LVU1918
2808:src/keys.c    ****       return STATE_UNFINISHED;
 5944              		.loc 1 2808 26 is_stmt 0 view .LVU1919
 5945 04c6 65F30411 		bfi	r1, r5, #4, #1
 5946 04ca D975     		strb	r1, [r3, #23]
2809:src/keys.c    ****     }
ARM GAS  /tmp/cccKVeLo.s 			page 192


 5947              		.loc 1 2809 7 is_stmt 1 view .LVU1920
2809:src/keys.c    ****     }
 5948              		.loc 1 2809 14 is_stmt 0 view .LVU1921
 5949 04cc 4FF0330B 		mov	fp, #51
 5950 04d0 EFE5     		b	.L565
 5951              	.LVL502:
 5952              	.L771:
2809:src/keys.c    ****     }
 5953              		.loc 1 2809 14 view .LVU1922
 5954              	.LBE1220:
 5955              	.LBE1285:
3170:src/keys.c    ****       break;
 5956              		.loc 1 3170 7 is_stmt 1 view .LVU1923
 5957 04d2 4FF0FF30 		mov	r0, #-1
 5958 04d6 FFF7FEFF 		bl	xeq_sst_bst
 5959              	.LVL503:
3171:src/keys.c    **** 
 5960              		.loc 1 3171 7 view .LVU1924
2977:src/keys.c    ****   if (was_paused && Pause == 0)
 5961              		.loc 1 2977 7 is_stmt 0 view .LVU1925
 5962 04da 0025     		movs	r5, #0
 5963 04dc 3268     		ldr	r2, [r6]
3171:src/keys.c    **** 
 5964              		.loc 1 3171 7 view .LVU1926
 5965 04de 4FF02F0B 		mov	fp, #47
 5966 04e2 E6E5     		b	.L565
 5967              	.L775:
3164:src/keys.c    ****       OpCodeDisplayPending = 0;
 5968              		.loc 1 3164 7 is_stmt 1 view .LVU1927
3165:src/keys.c    ****       xeq_sst_bst(0);
 5969              		.loc 1 3165 28 is_stmt 0 view .LVU1928
 5970 04e4 3F4A     		ldr	r2, .L1204+48
3164:src/keys.c    ****       OpCodeDisplayPending = 0;
 5971              		.loc 1 3164 14 view .LVU1929
 5972 04e6 3B49     		ldr	r1, .L1204+32
3165:src/keys.c    ****       xeq_sst_bst(0);
 5973              		.loc 1 3165 28 view .LVU1930
 5974 04e8 0020     		movs	r0, #0
3164:src/keys.c    ****       OpCodeDisplayPending = 0;
 5975              		.loc 1 3164 14 view .LVU1931
 5976 04ea 2E23     		movs	r3, #46
3165:src/keys.c    ****       xeq_sst_bst(0);
 5977              		.loc 1 3165 28 view .LVU1932
 5978 04ec 1060     		str	r0, [r2]
3164:src/keys.c    ****       OpCodeDisplayPending = 0;
 5979              		.loc 1 3164 14 view .LVU1933
 5980 04ee 0B60     		str	r3, [r1]
3165:src/keys.c    ****       xeq_sst_bst(0);
 5981              		.loc 1 3165 7 is_stmt 1 view .LVU1934
3166:src/keys.c    ****       break;
 5982              		.loc 1 3166 7 view .LVU1935
3167:src/keys.c    **** 
 5983              		.loc 1 3167 7 is_stmt 0 view .LVU1936
 5984 04f0 9B46     		mov	fp, r3
2977:src/keys.c    ****   if (was_paused && Pause == 0)
 5985              		.loc 1 2977 7 view .LVU1937
 5986 04f2 0546     		mov	r5, r0
ARM GAS  /tmp/cccKVeLo.s 			page 193


3166:src/keys.c    ****       break;
 5987              		.loc 1 3166 7 view .LVU1938
 5988 04f4 FFF7FEFF 		bl	xeq_sst_bst
 5989              	.LVL504:
3167:src/keys.c    **** 
 5990              		.loc 1 3167 7 is_stmt 1 view .LVU1939
 5991 04f8 3268     		ldr	r2, [r6]
 5992 04fa DAE5     		b	.L565
 5993              	.LVL505:
 5994              	.L759:
 5995              	.LBB1286:
 5996              	.LBB1221:
 5997              	.LBB697:
 5998              	.LBB698:
1447:src/keys.c    **** 			return STATE_BACKSPACE;
 5999              		.loc 1 1447 3 view .LVU1940
1447:src/keys.c    **** 			return STATE_BACKSPACE;
 6000              		.loc 1 1447 6 is_stmt 0 view .LVU1941
 6001 04fc 0028     		cmp	r0, #0
 6002 04fe 41F00D84 		bne	.L769
 6003              	.LVL506:
 6004              	.L768:
1447:src/keys.c    **** 			return STATE_BACKSPACE;
 6005              		.loc 1 1447 6 view .LVU1942
 6006              	.LBE698:
 6007              	.LBE697:
 6008              	.LBE1221:
 6009              	.LBE1286:
3174:src/keys.c    **** 	delprog();
 6010              		.loc 1 3174 7 is_stmt 1 view .LVU1943
3174:src/keys.c    **** 	delprog();
 6011              		.loc 1 3174 11 is_stmt 0 view .LVU1944
 6012 0502 98F81650 		ldrb	r5, [r8, #22]	@ zero_extendqisi2
3174:src/keys.c    **** 	delprog();
 6013              		.loc 1 3174 10 view .LVU1945
 6014 0506 6C06     		lsls	r4, r5, #25
 6015 0508 40F12A81 		bpl	.L867
3176:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 6016              		.loc 1 3176 12 is_stmt 1 view .LVU1946
3176:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 6017              		.loc 1 3176 15 is_stmt 0 view .LVU1947
 6018 050c 15F00805 		ands	r5, r5, #8
 6019 0510 40F09580 		bne	.L868
 6020 0514 3268     		ldr	r2, [r6]
 6021 0516 4FF0300B 		mov	fp, #48
 6022 051a CAE5     		b	.L565
 6023              	.LVL507:
 6024              	.L855:
 6025              	.LBB1287:
3145:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
 6026              		.loc 1 3145 4 is_stmt 1 view .LVU1948
 6027 051c 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3145:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
 6028              		.loc 1 3145 6 is_stmt 0 view .LVU1949
 6029 0520 8346     		mov	fp, r0
 6030              	.LVL508:
 6031              	.L622:
ARM GAS  /tmp/cccKVeLo.s 			page 194


3145:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
 6032              		.loc 1 3145 6 view .LVU1950
 6033              	.LBE1287:
3198:src/keys.c    **** 	NonProgrammable = 0;
 6034              		.loc 1 3198 7 is_stmt 1 view .LVU1951
3198:src/keys.c    **** 	NonProgrammable = 0;
 6035              		.loc 1 3198 10 is_stmt 0 view .LVU1952
 6036 0522 5906     		lsls	r1, r3, #25
 6037 0524 00F1CB81 		bmi	.L1137
 6038              	.L888:
3198:src/keys.c    **** 	NonProgrammable = 0;
 6039              		.loc 1 3198 26 view .LVU1953
 6040 0528 2F4B     		ldr	r3, .L1204+52
 6041 052a 1A68     		ldr	r2, [r3]
 6042 052c 002A     		cmp	r2, #0
 6043 052e 41F0FC82 		bne	.L1138
 6044              	.LVL509:
 6045              	.L876:
3220:src/keys.c    ****       }
 6046              		.loc 1 3220 2 is_stmt 1 view .LVU1954
 6047 0532 FFF7FEFF 		bl	stoprog
 6048              	.LVL510:
2977:src/keys.c    ****   if (was_paused && Pause == 0)
 6049              		.loc 1 2977 7 is_stmt 0 view .LVU1955
 6050 0536 0025     		movs	r5, #0
 6051 0538 3268     		ldr	r2, [r6]
 6052 053a BAE5     		b	.L565
 6053              	.LVL511:
 6054              	.L1106:
2977:src/keys.c    ****   if (was_paused && Pause == 0)
 6055              		.loc 1 2977 7 view .LVU1956
 6056 053c 234E     		ldr	r6, .L1204+24
 6057 053e 3368     		ldr	r3, [r6]
 6058 0540 0DE6     		b	.L551
 6059              	.L1105:
3066:src/keys.c    ****       finish_RPN(); // RPN
 6060              		.loc 1 3066 7 is_stmt 1 view .LVU1957
 6061 0542 8D20     		movs	r0, #141
 6062 0544 FFF7FEFF 		bl	clr_dot
 6063              	.LVL512:
3067:src/keys.c    ****     }
 6064              		.loc 1 3067 7 view .LVU1958
 6065 0548 FFF7FEFF 		bl	finish_RPN
 6066              	.LVL513:
 6067 054c 7BE5     		b	.L553
 6068              	.LVL514:
 6069              	.L564:
3127:src/keys.c    ****     }
 6070              		.loc 1 3127 7 view .LVU1959
 6071 054e FFF7FEFF 		bl	finish_RPN
 6072              	.LVL515:
2977:src/keys.c    ****   if (was_paused && Pause == 0)
 6073              		.loc 1 2977 7 is_stmt 0 view .LVU1960
 6074 0552 0025     		movs	r5, #0
 6075 0554 3268     		ldr	r2, [r6]
 6076 0556 ACE5     		b	.L565
 6077              	.LVL516:
ARM GAS  /tmp/cccKVeLo.s 			page 195


 6078              	.L854:
3156:src/keys.c    ****       }      
 6079              		.loc 1 3156 2 is_stmt 1 view .LVU1961
 6080              	.LBB1288:
 6081              	.LBB1282:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 6082              		.loc 1 625 5 is_stmt 0 view .LVU1962
 6083 0558 012B     		cmp	r3, #1
 6084              	.LBE1282:
 6085              	.LBE1288:
3156:src/keys.c    ****       }      
 6086              		.loc 1 3156 6 view .LVU1963
 6087 055a 8346     		mov	fp, r0
 6088              	.LVL517:
 6089              	.LBB1289:
 624:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 6090              		.loc 1 624 12 is_stmt 1 view .LVU1964
 6091              	.LBB1283:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 6092              		.loc 1 625 2 view .LVU1965
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 6093              		.loc 1 625 5 is_stmt 0 view .LVU1966
 6094 055c 40F08180 		bne	.L1139
 6095              	.LVL518:
 6096              	.L895:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 6097              		.loc 1 625 5 view .LVU1967
 6098 0560 FFF7FEFF 		bl	check_confirm.part.0
 6099              	.LVL519:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 6100              		.loc 1 625 5 view .LVU1968
 6101 0564 8346     		mov	fp, r0
 6102              	.LVL520:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 6103              		.loc 1 625 5 view .LVU1969
 6104 0566 67E7     		b	.L595
 6105              	.LVL521:
 6106              	.L556:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 6107              		.loc 1 625 5 view .LVU1970
 6108              	.LBE1283:
 6109              	.LBE1289:
3108:src/keys.c    **** #ifndef CONSOLE
 6110              		.loc 1 3108 7 is_stmt 1 view .LVU1971
 6111 0568 194B     		ldr	r3, .L1204+28
 6112 056a 8D20     		movs	r0, #141
 6113 056c 1968     		ldr	r1, [r3]
 6114 056e FFF7FEFF 		bl	dot
 6115              	.LVL522:
3110:src/keys.c    **** 	if (!WasDataEntry) {
 6116              		.loc 1 3110 7 view .LVU1972
3110:src/keys.c    **** 	if (!WasDataEntry) {
 6117              		.loc 1 3110 11 is_stmt 0 view .LVU1973
 6118 0572 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3110:src/keys.c    **** 	if (!WasDataEntry) {
 6119              		.loc 1 3110 10 view .LVU1974
 6120 0576 9806     		lsls	r0, r3, #26
ARM GAS  /tmp/cccKVeLo.s 			page 196


 6121 0578 3FF5C4AD 		bmi	.L534
3111:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 6122              		.loc 1 3111 2 is_stmt 1 view .LVU1975
3111:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 6123              		.loc 1 3111 6 is_stmt 0 view .LVU1976
 6124 057c 1B4B     		ldr	r3, .L1204+56
3111:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 6125              		.loc 1 3111 5 view .LVU1977
 6126 057e 1B68     		ldr	r3, [r3]
 6127 0580 002B     		cmp	r3, #0
 6128 0582 40F09781 		bne	.L567
3113:src/keys.c    **** 	}
 6129              		.loc 1 3113 4 is_stmt 1 view .LVU1978
 6130              		.loc 1 3239 1 is_stmt 0 view .LVU1979
 6131 0586 03B0     		add	sp, sp, #12
 6132              		.cfi_remember_state
 6133              		.cfi_def_cfa_offset 36
 6134              		@ sp needed
 6135 0588 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6136              		.cfi_restore 14
 6137              		.cfi_restore 11
 6138              		.cfi_restore 10
 6139              		.cfi_restore 9
 6140              		.cfi_restore 8
 6141              		.cfi_restore 7
 6142              		.cfi_restore 6
 6143              		.cfi_restore 5
 6144              		.cfi_restore 4
 6145              		.cfi_def_cfa_offset 0
3113:src/keys.c    **** 	}
 6146              		.loc 1 3113 4 view .LVU1980
 6147 058c FFF7FEBF 		b	display
 6148              	.LVL523:
 6149              	.L1107:
 6150              		.cfi_restore_state
3096:src/keys.c    ****       else {
 6151              		.loc 1 3096 2 is_stmt 1 view .LVU1981
 6152 0590 FFF7FEFF 		bl	xeq_sst_bst
 6153              	.LVL524:
 6154 0594 0D4E     		ldr	r6, .L1204+24
 6155 0596 82E5     		b	.L558
 6156              	.LVL525:
 6157              	.L860:
3096:src/keys.c    ****       else {
 6158              		.loc 1 3096 2 is_stmt 0 view .LVU1982
 6159 0598 3268     		ldr	r2, [r6]
2977:src/keys.c    ****   if (was_paused && Pause == 0)
 6160              		.loc 1 2977 7 view .LVU1983
 6161 059a 0025     		movs	r5, #0
 6162 059c 89E5     		b	.L565
 6163              	.LVL526:
 6164              	.L1109:
3029:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 6165              		.loc 1 3029 28 discriminator 1 view .LVU1984
 6166 059e FFF7FEFF 		bl	shift_down
 6167              	.LVL527:
3029:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
ARM GAS  /tmp/cccKVeLo.s 			page 197


 6168              		.loc 1 3029 25 discriminator 1 view .LVU1985
 6169 05a2 0028     		cmp	r0, #0
 6170 05a4 3FF4D1AD 		beq	.L540
3031:src/keys.c    ****       }
 6171              		.loc 1 3031 2 is_stmt 1 view .LVU1986
3031:src/keys.c    ****       }
 6172              		.loc 1 3031 16 is_stmt 0 view .LVU1987
 6173 05a8 054B     		ldr	r3, .L1204+12
 6174 05aa 0022     		movs	r2, #0
 6175 05ac 1A74     		strb	r2, [r3, #16]
 6176 05ae CCE5     		b	.L540
 6177              	.L1108:
3031:src/keys.c    ****       }
 6178              		.loc 1 3031 16 view .LVU1988
 6179 05b0 064E     		ldr	r6, .L1204+24
 6180 05b2 74E5     		b	.L558
 6181              	.L1205:
 6182              		.align	2
 6183              	.L1204:
 6184 05b4 00000000 		.word	main_ram
 6185 05b8 00000000 		.word	.LANCHOR18
 6186 05bc 00000000 		.word	.LANCHOR22
 6187 05c0 00000000 		.word	StateWhileOn
 6188 05c4 00000000 		.word	GoFast
 6189 05c8 00000000 		.word	JustDisplayed
 6190 05cc 00000000 		.word	Running
 6191 05d0 00000000 		.word	ShowRPN
 6192 05d4 00000000 		.word	OpCode
 6193 05d8 00000000 		.word	nd_opcode
 6194 05dc 00000000 		.word	DispMsg
 6195 05e0 0C000000 		.word	.LC2
 6196 05e4 00000000 		.word	OpCodeDisplayPending
 6197 05e8 00000000 		.word	NonProgrammable
 6198 05ec 00000000 		.word	WasDataEntry
 6199              	.L543:
3019:src/keys.c    **** 	  /*
 6200              		.loc 1 3019 10 is_stmt 1 view .LVU1989
3019:src/keys.c    **** 	  /*
 6201              		.loc 1 3019 14 is_stmt 0 view .LVU1990
 6202 05f0 FFF7FEFF 		bl	keyticks
 6203              	.LVL528:
3019:src/keys.c    **** 	  /*
 6204              		.loc 1 3019 13 view .LVU1991
 6205 05f4 0C28     		cmp	r0, #12
 6206 05f6 7FF7A3AD 		ble	.L542
3023:src/keys.c    **** 	  message("NULL", CNULL);
 6207              		.loc 1 3023 4 is_stmt 1 view .LVU1992
3024:src/keys.c    **** 	  // Force display update on key-up
 6208              		.loc 1 3024 4 is_stmt 0 view .LVU1993
 6209 05fa B448     		ldr	r0, .L1206
3023:src/keys.c    **** 	  message("NULL", CNULL);
 6210              		.loc 1 3023 11 view .LVU1994
 6211 05fc 2E60     		str	r6, [r5]
3024:src/keys.c    **** 	  // Force display update on key-up
 6212              		.loc 1 3024 4 is_stmt 1 view .LVU1995
 6213 05fe 3146     		mov	r1, r6
 6214 0600 FFF7FEFF 		bl	message
ARM GAS  /tmp/cccKVeLo.s 			page 198


 6215              	.LVL529:
3026:src/keys.c    **** 	}
 6216              		.loc 1 3026 4 view .LVU1996
3026:src/keys.c    **** 	}
 6217              		.loc 1 3026 21 is_stmt 0 view .LVU1997
 6218 0604 B24B     		ldr	r3, .L1206+4
 6219 0606 DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 6220 0608 66F34512 		bfi	r2, r6, #5, #1
 6221 060c DA75     		strb	r2, [r3, #23]
 6222 060e 97E5     		b	.L542
 6223              	.LVL530:
 6224              	.L859:
3198:src/keys.c    **** 	NonProgrammable = 0;
 6225              		.loc 1 3198 11 view .LVU1998
 6226 0610 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 6227 0614 AF4A     		ldr	r2, .L1206+8
3198:src/keys.c    **** 	NonProgrammable = 0;
 6228              		.loc 1 3198 10 view .LVU1999
 6229 0616 5B06     		lsls	r3, r3, #25
 6230 0618 5846     		mov	r0, fp
 6231              	.LVL531:
3198:src/keys.c    **** 	NonProgrammable = 0;
 6232              		.loc 1 3198 7 is_stmt 1 view .LVU2000
3198:src/keys.c    **** 	NonProgrammable = 0;
 6233              		.loc 1 3198 10 is_stmt 0 view .LVU2001
 6234 061a 41F1A382 		bpl	.L1090
 6235              	.L875:
 6236              	.LVL532:
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6237              		.loc 1 3199 2 is_stmt 1 view .LVU2002
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6238              		.loc 1 3199 18 is_stmt 0 view .LVU2003
 6239 061e 0023     		movs	r3, #0
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6240              		.loc 1 3200 5 view .LVU2004
 6241 0620 1428     		cmp	r0, #20
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6242              		.loc 1 3199 18 view .LVU2005
 6243 0622 1360     		str	r3, [r2]
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6244              		.loc 1 3200 2 is_stmt 1 view .LVU2006
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6245              		.loc 1 3200 5 is_stmt 0 view .LVU2007
 6246 0624 24D8     		bhi	.L872
3201:src/keys.c    **** 	    // Data entry key
 6247              		.loc 1 3201 4 is_stmt 1 view .LVU2008
3201:src/keys.c    **** 	    // Data entry key
 6248              		.loc 1 3201 7 is_stmt 0 view .LVU2009
 6249 0626 BBF1000F 		cmp	fp, #0
 6250 062a 40F0CF80 		bne	.L874
3201:src/keys.c    **** 	    // Data entry key
 6251              		.loc 1 3201 38 discriminator 1 view .LVU2010
 6252 062e FFF7FEFF 		bl	is_bad_cmdline
 6253              	.LVL533:
3201:src/keys.c    **** 	    // Data entry key
 6254              		.loc 1 3201 34 discriminator 1 view .LVU2011
 6255 0632 0028     		cmp	r0, #0
ARM GAS  /tmp/cccKVeLo.s 			page 199


 6256 0634 00F04781 		beq	.L938
 6257 0638 3268     		ldr	r2, [r6]
2977:src/keys.c    ****   if (was_paused && Pause == 0)
 6258              		.loc 1 2977 7 view .LVU2012
 6259 063a 5D46     		mov	r5, fp
 6260 063c 39E5     		b	.L565
 6261              	.L868:
 6262              	.LBB1290:
3177:src/keys.c    **** 	if (p > Alpha)
 6263              		.loc 1 3177 2 is_stmt 1 view .LVU2013
3177:src/keys.c    **** 	if (p > Alpha)
 6264              		.loc 1 3177 22 is_stmt 0 view .LVU2014
 6265 063e A64C     		ldr	r4, .L1206+12
 6266 0640 2068     		ldr	r0, [r4]
3177:src/keys.c    **** 	if (p > Alpha)
 6267              		.loc 1 3177 12 view .LVU2015
 6268 0642 0021     		movs	r1, #0
 6269 0644 00F5F660 		add	r0, r0, #1968
 6270 0648 FFF7FEFF 		bl	find_char
 6271              	.LVL534:
3178:src/keys.c    **** 	  *--p = '\0';
 6272              		.loc 1 3178 8 view .LVU2016
 6273 064c 2368     		ldr	r3, [r4]
 6274              	.LVL535:
3178:src/keys.c    **** 	  *--p = '\0';
 6275              		.loc 1 3178 2 is_stmt 1 view .LVU2017
3178:src/keys.c    **** 	  *--p = '\0';
 6276              		.loc 1 3178 8 is_stmt 0 view .LVU2018
 6277 064e 03F5F663 		add	r3, r3, #1968
3178:src/keys.c    **** 	  *--p = '\0';
 6278              		.loc 1 3178 5 view .LVU2019
 6279 0652 9842     		cmp	r0, r3
 6280 0654 00F2AC81 		bhi	.L869
 6281 0658 3268     		ldr	r2, [r6]
 6282              	.LBE1290:
2977:src/keys.c    ****   if (was_paused && Pause == 0)
 6283              		.loc 1 2977 7 view .LVU2020
 6284 065a 0025     		movs	r5, #0
 6285              	.LBB1291:
3178:src/keys.c    **** 	  *--p = '\0';
 6286              		.loc 1 3178 5 view .LVU2021
 6287 065c 4FF0300B 		mov	fp, #48
 6288 0660 27E5     		b	.L565
 6289              	.LVL536:
 6290              	.L1139:
3178:src/keys.c    **** 	  *--p = '\0';
 6291              		.loc 1 3178 5 view .LVU2022
 6292              	.LBE1291:
3198:src/keys.c    **** 	NonProgrammable = 0;
 6293              		.loc 1 3198 7 is_stmt 1 view .LVU2023
3198:src/keys.c    **** 	NonProgrammable = 0;
 6294              		.loc 1 3198 11 is_stmt 0 view .LVU2024
 6295 0662 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3198:src/keys.c    **** 	NonProgrammable = 0;
 6296              		.loc 1 3198 10 view .LVU2025
 6297 0666 5A06     		lsls	r2, r3, #25
 6298 0668 7FF55EAF 		bpl	.L888
ARM GAS  /tmp/cccKVeLo.s 			page 200


 6299              	.LVL537:
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6300              		.loc 1 3199 2 is_stmt 1 view .LVU2026
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6301              		.loc 1 3199 18 is_stmt 0 view .LVU2027
 6302 066c 994B     		ldr	r3, .L1206+8
 6303 066e 1D60     		str	r5, [r3]
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6304              		.loc 1 3200 2 is_stmt 1 view .LVU2028
 6305              	.L872:
3213:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 6306              		.loc 1 3213 4 view .LVU2029
3213:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 6307              		.loc 1 3213 11 is_stmt 0 view .LVU2030
 6308 0670 9A4A     		ldr	r2, .L1206+16
3214:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 6309              		.loc 1 3214 25 view .LVU2031
 6310 0672 9B4B     		ldr	r3, .L1206+20
3213:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 6311              		.loc 1 3213 11 view .LVU2032
 6312 0674 1060     		str	r0, [r2]
3214:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 6313              		.loc 1 3214 4 is_stmt 1 view .LVU2033
3214:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 6314              		.loc 1 3214 25 is_stmt 0 view .LVU2034
 6315 0676 0122     		movs	r2, #1
 6316 0678 9A4C     		ldr	r4, .L1206+24
 6317 067a 1A60     		str	r2, [r3]
3215:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
 6318              		.loc 1 3215 4 is_stmt 1 view .LVU2035
 6319 067c FFF7FEFF 		bl	finish_RPN
 6320              	.LVL538:
3216:src/keys.c    **** 	}
 6321              		.loc 1 3216 4 view .LVU2036
 6322 0680 3EE5     		b	.L878
 6323              	.LVL539:
 6324              	.L1136:
 6325              	.LBB1292:
 6326              	.LBB1222:
 6327              	.LBB762:
 6328              	.LBB682:
 734:src/keys.c    **** 	  case K00:
 6329              		.loc 1 734 4 view .LVU2037
 6330 0682 122C     		cmp	r4, #18
 6331 0684 0BD8     		bhi	.L831
 6332 0686 DFE804F0 		tbb	[pc, r4]
 6333              	.L833:
 6334 068a BE       		.byte	(.L836-.L833)/2
 6335 068b B2       		.byte	(.L835-.L833)/2
 6336 068c 0A       		.byte	(.L831-.L833)/2
 6337 068d C9       		.byte	(.L834-.L833)/2
 6338 068e 0A       		.byte	(.L831-.L833)/2
 6339 068f 0A       		.byte	(.L831-.L833)/2
 6340 0690 0A       		.byte	(.L831-.L833)/2
 6341 0691 0A       		.byte	(.L831-.L833)/2
 6342 0692 0A       		.byte	(.L831-.L833)/2
 6343 0693 0A       		.byte	(.L831-.L833)/2
ARM GAS  /tmp/cccKVeLo.s 			page 201


 6344 0694 0A       		.byte	(.L831-.L833)/2
 6345 0695 0A       		.byte	(.L831-.L833)/2
 6346 0696 0A       		.byte	(.L831-.L833)/2
 6347 0697 0A       		.byte	(.L831-.L833)/2
 6348 0698 0A       		.byte	(.L831-.L833)/2
 6349 0699 0A       		.byte	(.L831-.L833)/2
 6350 069a 0A       		.byte	(.L831-.L833)/2
 6351 069b 0A       		.byte	(.L831-.L833)/2
 6352 069c 91       		.byte	(.L832-.L833)/2
 6353 069d 00       		.p2align 1
 6354              	.L831:
 764:src/keys.c    **** 	  }
 6355              		.loc 1 764 12 view .LVU2038
 769:src/keys.c    **** #ifdef DM42
 6356              		.loc 1 769 2 view .LVU2039
 6357 069e 033C     		subs	r4, r4, #3
 6358 06a0 2A2C     		cmp	r4, #42
 6359 06a2 3FF6C9AE 		bhi	.L595
 6360 06a6 01A1     		adr	r1, .L843
 6361 06a8 51F824F0 		ldr	pc, [r1, r4, lsl #2]
 6362              		.p2align 2
 6363              	.L843:
 6364 06ac 8D070000 		.word	.L846+1
 6365 06b0 39040000 		.word	.L595+1
 6366 06b4 39040000 		.word	.L595+1
 6367 06b8 6F070000 		.word	.L841+1
 6368 06bc 6F070000 		.word	.L841+1
 6369 06c0 39040000 		.word	.L595+1
 6370 06c4 39040000 		.word	.L595+1
 6371 06c8 39040000 		.word	.L595+1
 6372 06cc 39040000 		.word	.L595+1
 6373 06d0 39040000 		.word	.L595+1
 6374 06d4 39040000 		.word	.L595+1
 6375 06d8 39040000 		.word	.L595+1
 6376 06dc 39040000 		.word	.L595+1
 6377 06e0 59070000 		.word	.L845+1
 6378 06e4 39040000 		.word	.L595+1
 6379 06e8 6F070000 		.word	.L841+1
 6380 06ec 39040000 		.word	.L595+1
 6381 06f0 39040000 		.word	.L595+1
 6382 06f4 39040000 		.word	.L595+1
 6383 06f8 39040000 		.word	.L595+1
 6384 06fc 39040000 		.word	.L595+1
 6385 0700 39040000 		.word	.L595+1
 6386 0704 39040000 		.word	.L595+1
 6387 0708 39040000 		.word	.L595+1
 6388 070c 39040000 		.word	.L595+1
 6389 0710 39040000 		.word	.L595+1
 6390 0714 39040000 		.word	.L595+1
 6391 0718 39040000 		.word	.L595+1
 6392 071c 39040000 		.word	.L595+1
 6393 0720 39040000 		.word	.L595+1
 6394 0724 39040000 		.word	.L595+1
 6395 0728 39040000 		.word	.L595+1
 6396 072c 39040000 		.word	.L595+1
 6397 0730 39040000 		.word	.L595+1
 6398 0734 39040000 		.word	.L595+1
ARM GAS  /tmp/cccKVeLo.s 			page 202


 6399 0738 39040000 		.word	.L595+1
 6400 073c 39040000 		.word	.L595+1
 6401 0740 39040000 		.word	.L595+1
 6402 0744 39040000 		.word	.L595+1
 6403 0748 39040000 		.word	.L595+1
 6404 074c 39040000 		.word	.L595+1
 6405 0750 99070000 		.word	.L844+1
 6406 0754 3F080000 		.word	.L842+1
 6407              		.p2align 1
 6408              	.L845:
 826:src/keys.c    **** 			return STATE_UNFINISHED;
 6409              		.loc 1 826 3 view .LVU2040
 826:src/keys.c    **** 			return STATE_UNFINISHED;
 6410              		.loc 1 826 6 is_stmt 0 view .LVU2041
 6411 0758 9906     		lsls	r1, r3, #26
 6412 075a 70D4     		bmi	.L842
 828:src/keys.c    **** 			return op;
 6413              		.loc 1 828 3 is_stmt 1 view .LVU2042
 828:src/keys.c    **** 			return op;
 6414              		.loc 1 828 6 is_stmt 0 view .LVU2043
 6415 075c 5306     		lsls	r3, r2, #25
 6416 075e 72D4     		bmi	.L851
 6417              	.LVL540:
 6418              	.L867:
 828:src/keys.c    **** 			return op;
 6419              		.loc 1 828 6 view .LVU2044
 6420              	.LBE682:
 6421              	.LBE762:
 6422              	.LBE1222:
 6423              	.LBE1292:
3175:src/keys.c    ****       else if (State2.alphas) {
 6424              		.loc 1 3175 2 is_stmt 1 view .LVU2045
 6425 0760 FFF7FEFF 		bl	delprog
 6426              	.LVL541:
2977:src/keys.c    ****   if (was_paused && Pause == 0)
 6427              		.loc 1 2977 7 is_stmt 0 view .LVU2046
 6428 0764 0025     		movs	r5, #0
 6429 0766 3268     		ldr	r2, [r6]
 6430 0768 4FF0300B 		mov	fp, #48
 6431 076c A1E4     		b	.L565
 6432              	.LVL542:
 6433              	.L841:
 6434              	.LBB1293:
 6435              	.LBB1223:
 6436              	.LBB763:
 6437              	.LBB683:
 835:src/keys.c    **** 		break;
 6438              		.loc 1 835 3 is_stmt 1 view .LVU2047
 6439              	.LBB680:
 6440              	.LBI680:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 6441              		.loc 1 506 13 view .LVU2048
 6442              	.LBB681:
 507:src/keys.c    **** 		return;
 6443              		.loc 1 507 2 view .LVU2049
 507:src/keys.c    **** 		return;
 6444              		.loc 1 507 6 is_stmt 0 view .LVU2050
ARM GAS  /tmp/cccKVeLo.s 			page 203


 6445 076e FFF7FEFF 		bl	is_bad_cmdline
 6446              	.LVL543:
 507:src/keys.c    **** 		return;
 6447              		.loc 1 507 5 view .LVU2051
 6448 0772 0446     		mov	r4, r0
 6449 0774 0028     		cmp	r0, #0
 6450 0776 41F06283 		bne	.L1140
 6451 077a 5FFA8AF0 		uxtb	r0, r10
 6452 077e FFF7FEFF 		bl	init_arg.part.0
 6453              	.LVL544:
 6454              	.LBE681:
 6455              	.LBE680:
 6456              	.LBE683:
 6457              	.LBE763:
 6458              	.LBE1223:
 6459              	.LBE1293:
2977:src/keys.c    ****   if (was_paused && Pause == 0)
 6460              		.loc 1 2977 7 view .LVU2052
 6461 0782 2546     		mov	r5, r4
 6462 0784 3268     		ldr	r2, [r6]
 6463              	.LBB1294:
 6464              	.LBB1224:
 6465              	.LBB764:
 6466              	.LBB684:
 841:src/keys.c    **** }
 6467              		.loc 1 841 9 view .LVU2053
 6468 0786 4FF0330B 		mov	fp, #51
 6469 078a 92E4     		b	.L565
 6470              	.LVL545:
 6471              	.L846:
 776:src/keys.c    **** #else
 6472              		.loc 1 776 3 is_stmt 1 view .LVU2054
 776:src/keys.c    **** #else
 6473              		.loc 1 776 10 is_stmt 0 view .LVU2055
 6474 078c 5146     		mov	r1, r10
 6475 078e 0220     		movs	r0, #2
 6476 0790 FFF7FEFF 		bl	check_f_key
 6477              	.LVL546:
 6478 0794 8346     		mov	fp, r0
 6479 0796 4FE6     		b	.L595
 6480              	.L844:
 800:src/keys.c    **** 			return STATE_UNFINISHED;
 6481              		.loc 1 800 3 is_stmt 1 view .LVU2056
 800:src/keys.c    **** 			return STATE_UNFINISHED;
 6482              		.loc 1 800 7 is_stmt 0 view .LVU2057
 6483 0798 FFF7FEFF 		bl	is_bad_cmdline
 6484              	.LVL547:
 800:src/keys.c    **** 			return STATE_UNFINISHED;
 6485              		.loc 1 800 6 view .LVU2058
 6486 079c 0446     		mov	r4, r0
 6487 079e 0028     		cmp	r0, #0
 6488 07a0 01F07581 		beq	.L849
 6489 07a4 3268     		ldr	r2, [r6]
 801:src/keys.c    **** 		process_cmdline_set_lift();
 6490              		.loc 1 801 11 view .LVU2059
 6491 07a6 4FF0330B 		mov	fp, #51
 6492 07aa 82E4     		b	.L565
ARM GAS  /tmp/cccKVeLo.s 			page 204


 6493              	.L832:
 760:src/keys.c    **** 	    if (intltr(15)) {
 6494              		.loc 1 760 6 is_stmt 1 view .LVU2060
 6495              	.LVL548:
 761:src/keys.c    **** 	      return op_int;
 6496              		.loc 1 761 6 view .LVU2061
 761:src/keys.c    **** 	      return op_int;
 6497              		.loc 1 761 10 is_stmt 0 view .LVU2062
 6498 07ac 0F20     		movs	r0, #15
 6499 07ae FFF7FEFF 		bl	intltr
 6500              	.LVL549:
 761:src/keys.c    **** 	      return op_int;
 6501              		.loc 1 761 9 view .LVU2063
 6502 07b2 0028     		cmp	r0, #0
 6503 07b4 DBD0     		beq	.L841
 6504              	.LVL550:
 761:src/keys.c    **** 	      return op_int;
 6505              		.loc 1 761 9 view .LVU2064
 6506              	.LBE684:
 6507              	.LBE764:
 6508              	.LBE1224:
 6509              	.LBE1294:
3198:src/keys.c    **** 	NonProgrammable = 0;
 6510              		.loc 1 3198 7 is_stmt 1 view .LVU2065
3198:src/keys.c    **** 	NonProgrammable = 0;
 6511              		.loc 1 3198 11 is_stmt 0 view .LVU2066
 6512 07b6 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3198:src/keys.c    **** 	NonProgrammable = 0;
 6513              		.loc 1 3198 10 view .LVU2067
 6514 07ba 5C06     		lsls	r4, r3, #25
 6515 07bc 41F1DD81 		bpl	.L934
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6516              		.loc 1 3199 2 is_stmt 1 view .LVU2068
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6517              		.loc 1 3199 18 is_stmt 0 view .LVU2069
 6518 07c0 444B     		ldr	r3, .L1206+8
 6519 07c2 0022     		movs	r2, #0
 6520              	.LBB1295:
 6521              	.LBB1225:
 6522              	.LBB765:
 6523              	.LBB685:
 762:src/keys.c    **** 	    }
 6524              		.loc 1 762 15 view .LVU2070
 6525 07c4 4FF0140B 		mov	fp, #20
 6526              	.LBE685:
 6527              	.LBE765:
 6528              	.LBE1225:
 6529              	.LBE1295:
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6530              		.loc 1 3199 18 view .LVU2071
 6531 07c8 1A60     		str	r2, [r3]
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6532              		.loc 1 3200 2 is_stmt 1 view .LVU2072
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6533              		.loc 1 3200 32 is_stmt 0 view .LVU2073
 6534 07ca 5846     		mov	r0, fp
 6535              	.LVL551:
ARM GAS  /tmp/cccKVeLo.s 			page 205


 6536              	.L874:
3204:src/keys.c    **** #endif
 6537              		.loc 1 3204 6 is_stmt 1 view .LVU2074
3206:src/keys.c    **** 	    xeq(c);
 6538              		.loc 1 3206 37 is_stmt 0 view .LVU2075
 6539 07cc 98F81C50 		ldrb	r5, [r8, #28]	@ zero_extendqisi2
3204:src/keys.c    **** #endif
 6540              		.loc 1 3204 19 view .LVU2076
 6541 07d0 0123     		movs	r3, #1
3206:src/keys.c    **** 	    xeq(c);
 6542              		.loc 1 3206 37 view .LVU2077
 6543 07d2 B5FA85F5 		clz	r5, r5
3204:src/keys.c    **** #endif
 6544              		.loc 1 3204 19 view .LVU2078
 6545 07d6 C9F80030 		str	r3, [r9]
3206:src/keys.c    **** 	    xeq(c);
 6546              		.loc 1 3206 6 is_stmt 1 view .LVU2079
3207:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 6547              		.loc 1 3207 6 is_stmt 0 view .LVU2080
 6548 07da FFF7FEFF 		bl	xeq
 6549              	.LVL552:
3208:src/keys.c    **** 	  }
 6550              		.loc 1 3208 38 view .LVU2081
 6551 07de 98F81C00 		ldrb	r0, [r8, #28]	@ zero_extendqisi2
 6552 07e2 3268     		ldr	r2, [r6]
3206:src/keys.c    **** 	    xeq(c);
 6553              		.loc 1 3206 37 view .LVU2082
 6554 07e4 6D09     		lsrs	r5, r5, #5
 6555              	.LVL553:
3207:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 6556              		.loc 1 3207 6 is_stmt 1 view .LVU2083
3208:src/keys.c    **** 	  }
 6557              		.loc 1 3208 6 view .LVU2084
3208:src/keys.c    **** 	  }
 6558              		.loc 1 3208 20 is_stmt 0 view .LVU2085
 6559 07e6 0028     		cmp	r0, #0
 6560 07e8 08BF     		it	eq
 6561 07ea 0125     		moveq	r5, #1
 6562              	.LVL554:
3208:src/keys.c    **** 	  }
 6563              		.loc 1 3208 20 view .LVU2086
 6564 07ec 61E4     		b	.L565
 6565              	.LVL555:
 6566              	.L835:
 6567              	.LBB1296:
 6568              	.LBB1226:
 6569              	.LBB766:
 6570              	.LBB686:
 744:src/keys.c    **** 	    if (intltr(11)) {
 6571              		.loc 1 744 6 is_stmt 1 view .LVU2087
 745:src/keys.c    **** 	      return op;
 6572              		.loc 1 745 6 view .LVU2088
 745:src/keys.c    **** 	      return op;
 6573              		.loc 1 745 10 is_stmt 0 view .LVU2089
 6574 07ee 0B20     		movs	r0, #11
 6575 07f0 FFF7FEFF 		bl	intltr
 6576              	.LVL556:
ARM GAS  /tmp/cccKVeLo.s 			page 206


 745:src/keys.c    **** 	      return op;
 6577              		.loc 1 745 9 view .LVU2090
 6578 07f4 0028     		cmp	r0, #0
 6579 07f6 41F01683 		bne	.L838
 749:src/keys.c    **** 	    }
 6580              		.loc 1 749 8 is_stmt 1 view .LVU2091
 749:src/keys.c    **** 	    }
 6581              		.loc 1 749 15 is_stmt 0 view .LVU2092
 6582 07fa 1021     		movs	r1, #16
 6583 07fc 0120     		movs	r0, #1
 6584 07fe FFF7FEFF 		bl	check_f_key
 6585              	.LVL557:
 6586 0802 8346     		mov	fp, r0
 6587 0804 18E6     		b	.L595
 6588              	.LVL558:
 6589              	.L836:
 736:src/keys.c    **** 	    if (intltr(10)) {
 6590              		.loc 1 736 6 is_stmt 1 view .LVU2093
 737:src/keys.c    **** 	      return op;
 6591              		.loc 1 737 6 view .LVU2094
 737:src/keys.c    **** 	      return op;
 6592              		.loc 1 737 10 is_stmt 0 view .LVU2095
 6593 0806 0A20     		movs	r0, #10
 6594 0808 FFF7FEFF 		bl	intltr
 6595              	.LVL559:
 737:src/keys.c    **** 	      return op;
 6596              		.loc 1 737 9 view .LVU2096
 6597 080c 0028     		cmp	r0, #0
 6598 080e 41F05381 		bne	.L837
 741:src/keys.c    **** 	    }
 6599              		.loc 1 741 8 is_stmt 1 view .LVU2097
 741:src/keys.c    **** 	    }
 6600              		.loc 1 741 15 is_stmt 0 view .LVU2098
 6601 0812 0F21     		movs	r1, #15
 6602 0814 FFF7FEFF 		bl	check_f_key
 6603              	.LVL560:
 6604 0818 8346     		mov	fp, r0
 6605 081a 0DE6     		b	.L595
 6606              	.LVL561:
 6607              	.L834:
 752:src/keys.c    **** 	    if (intltr(12)) {
 6608              		.loc 1 752 6 is_stmt 1 view .LVU2099
 753:src/keys.c    **** 	      return op_int;
 6609              		.loc 1 753 6 view .LVU2100
 753:src/keys.c    **** 	      return op_int;
 6610              		.loc 1 753 10 is_stmt 0 view .LVU2101
 6611 081c 0C20     		movs	r0, #12
 6612 081e FFF7FEFF 		bl	intltr
 6613              	.LVL562:
 753:src/keys.c    **** 	      return op_int;
 6614              		.loc 1 753 9 view .LVU2102
 6615 0822 0028     		cmp	r0, #0
 6616 0824 B2D0     		beq	.L846
 6617              	.LVL563:
 753:src/keys.c    **** 	      return op_int;
 6618              		.loc 1 753 9 view .LVU2103
 6619              	.LBE686:
ARM GAS  /tmp/cccKVeLo.s 			page 207


 6620              	.LBE766:
 6621              	.LBE1226:
 6622              	.LBE1296:
3198:src/keys.c    **** 	NonProgrammable = 0;
 6623              		.loc 1 3198 7 is_stmt 1 view .LVU2104
3198:src/keys.c    **** 	NonProgrammable = 0;
 6624              		.loc 1 3198 11 is_stmt 0 view .LVU2105
 6625 0826 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3198:src/keys.c    **** 	NonProgrammable = 0;
 6626              		.loc 1 3198 10 view .LVU2106
 6627 082a 5D06     		lsls	r5, r3, #25
 6628 082c 41F1F882 		bpl	.L933
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6629              		.loc 1 3199 2 is_stmt 1 view .LVU2107
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6630              		.loc 1 3199 18 is_stmt 0 view .LVU2108
 6631 0830 284B     		ldr	r3, .L1206+8
 6632 0832 0022     		movs	r2, #0
 6633              	.LBB1297:
 6634              	.LBB1227:
 6635              	.LBB767:
 6636              	.LBB687:
 754:src/keys.c    **** 	    }
 6637              		.loc 1 754 15 view .LVU2109
 6638 0834 4FF0110B 		mov	fp, #17
 6639              	.LBE687:
 6640              	.LBE767:
 6641              	.LBE1227:
 6642              	.LBE1297:
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6643              		.loc 1 3199 18 view .LVU2110
 6644 0838 1A60     		str	r2, [r3]
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6645              		.loc 1 3200 2 is_stmt 1 view .LVU2111
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6646              		.loc 1 3200 32 is_stmt 0 view .LVU2112
 6647 083a 5846     		mov	r0, fp
 6648 083c C6E7     		b	.L874
 6649              	.LVL564:
 6650              	.L842:
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6651              		.loc 1 3200 32 view .LVU2113
 6652 083e 3268     		ldr	r2, [r6]
 6653              	.LBB1298:
 6654              	.LBB1228:
 6655              	.LBB768:
 6656              	.LBB688:
 841:src/keys.c    **** }
 6657              		.loc 1 841 9 view .LVU2114
 6658 0840 4FF0330B 		mov	fp, #51
 6659 0844 35E4     		b	.L565
 6660              	.L851:
 6661              	.LVL565:
 841:src/keys.c    **** }
 6662              		.loc 1 841 9 view .LVU2115
 6663              	.LBE688:
 6664              	.LBE768:
ARM GAS  /tmp/cccKVeLo.s 			page 208


 6665              	.LBE1228:
 6666              	.LBE1298:
3162:src/keys.c    ****     case STATE_SST:
 6667              		.loc 1 3162 5 is_stmt 1 view .LVU2116
 6668 0846 AAF12B03 		sub	r3, r10, #43
 6669 084a 082B     		cmp	r3, #8
 6670 084c 16D8     		bhi	.L889
 6671 084e 01A2     		adr	r2, .L891
 6672 0850 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6673              		.p2align 2
 6674              	.L891:
 6675 0854 77040000 		.word	.L866+1
 6676 0858 77040000 		.word	.L866+1
 6677 085c 7D080000 		.word	.L889+1
 6678 0860 E5040000 		.word	.L775+1
 6679 0864 D3040000 		.word	.L771+1
 6680 0868 03050000 		.word	.L768+1
 6681 086c 8F030000 		.word	.L575+1
 6682 0870 79080000 		.word	.L890+1
 6683 0874 79080000 		.word	.L890+1
 6684              		.p2align 1
 6685              	.L890:
 6686 0878 3268     		ldr	r2, [r6]
 6687 087a 1AE4     		b	.L565
 6688              	.L889:
 6689 087c 154A     		ldr	r2, .L1206+8
 6690 087e 5046     		mov	r0, r10
 6691 0880 CDE6     		b	.L875
 6692              	.LVL566:
 6693              	.L870:
3190:src/keys.c    ****       break;
 6694              		.loc 1 3190 2 view .LVU2117
 6695 0882 5846     		mov	r0, fp
 6696 0884 FFF7FEFF 		bl	set_window
 6697              	.LVL567:
 6698 0888 3268     		ldr	r2, [r6]
 6699 088a 12E4     		b	.L565
 6700              	.LVL568:
 6701              	.L1114:
 6702              	.LBB1299:
 6703              	.LBB1229:
2844:src/keys.c    **** 		CmdLineLength = 0;
 6704              		.loc 1 2844 26 is_stmt 0 view .LVU2118
 6705 088c FFF7FEFF 		bl	keyticks
 6706              	.LVL569:
2844:src/keys.c    **** 		CmdLineLength = 0;
 6707              		.loc 1 2844 23 view .LVU2119
 6708 0890 1E28     		cmp	r0, #30
2845:src/keys.c    **** 	/*
 6709              		.loc 1 2845 3 is_stmt 1 view .LVU2120
2845:src/keys.c    **** 	/*
 6710              		.loc 1 2845 17 is_stmt 0 view .LVU2121
 6711 0892 C4BF     		itt	gt
 6712 0894 0023     		movgt	r3, #0
 6713 0896 88F81C30 		strbgt	r3, [r8, #28]
 6714 089a 8AE4     		b	.L582
 6715              	.LVL570:
ARM GAS  /tmp/cccKVeLo.s 			page 209


 6716              	.L544:
2845:src/keys.c    **** 	/*
 6717              		.loc 1 2845 17 view .LVU2122
 6718              	.LBE1229:
 6719              	.LBE1299:
3013:src/keys.c    **** 	    DispMsg = TraceBuffer;
 6720              		.loc 1 3013 6 is_stmt 1 view .LVU2123
 6721 089c 124E     		ldr	r6, .L1206+28
 6722 089e 3146     		mov	r1, r6
 6723 08a0 FFF7FEFF 		bl	prt
 6724              	.LVL571:
 6725 08a4 2A46     		mov	r2, r5
 6726 08a6 0146     		mov	r1, r0
 6727 08a8 3046     		mov	r0, r6
 6728 08aa FFF7FEFF 		bl	scopy_char
 6729              	.LVL572:
3014:src/keys.c    **** 	  }
 6730              		.loc 1 3014 6 view .LVU2124
3014:src/keys.c    **** 	  }
 6731              		.loc 1 3014 14 is_stmt 0 view .LVU2125
 6732 08ae 0F4B     		ldr	r3, .L1206+32
 6733 08b0 1E60     		str	r6, [r3]
 6734 08b2 40E4     		b	.L545
 6735              	.LVL573:
 6736              	.L567:
3116:src/keys.c    **** 	}
 6737              		.loc 1 3116 4 is_stmt 1 view .LVU2126
 6738              		.loc 1 3239 1 is_stmt 0 view .LVU2127
 6739 08b4 03B0     		add	sp, sp, #12
 6740              		.cfi_remember_state
 6741              		.cfi_def_cfa_offset 36
 6742              		@ sp needed
 6743 08b6 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6744              		.cfi_restore 14
 6745              		.cfi_restore 11
 6746              		.cfi_restore 10
 6747              		.cfi_restore 9
 6748              		.cfi_restore 8
 6749              		.cfi_restore 7
 6750              		.cfi_restore 6
 6751              		.cfi_restore 5
 6752              		.cfi_restore 4
 6753              		.cfi_def_cfa_offset 0
3116:src/keys.c    **** 	}
 6754              		.loc 1 3116 4 view .LVU2128
 6755 08ba FFF7FEBF 		b	finish_RPN
 6756              	.LVL574:
 6757              	.L1137:
 6758              		.cfi_restore_state
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6759              		.loc 1 3199 2 is_stmt 1 view .LVU2129
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6760              		.loc 1 3199 18 is_stmt 0 view .LVU2130
 6761 08be 054B     		ldr	r3, .L1206+8
 6762 08c0 0022     		movs	r2, #0
 6763 08c2 1A60     		str	r2, [r3]
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
ARM GAS  /tmp/cccKVeLo.s 			page 210


 6764              		.loc 1 3200 2 is_stmt 1 view .LVU2131
 6765 08c4 D4E6     		b	.L872
 6766              	.LVL575:
 6767              	.L938:
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6768              		.loc 1 3200 32 is_stmt 0 view .LVU2132
 6769 08c6 5846     		mov	r0, fp
 6770 08c8 80E7     		b	.L874
 6771              	.L1207:
 6772 08ca 00BF     		.align	2
 6773              	.L1206:
 6774 08cc 04000000 		.word	.LC1
 6775 08d0 00000000 		.word	StateWhileOn
 6776 08d4 00000000 		.word	NonProgrammable
 6777 08d8 00000000 		.word	main_ram
 6778 08dc 00000000 		.word	OpCode
 6779 08e0 00000000 		.word	OpCodeDisplayPending
 6780 08e4 00000000 		.word	JustDisplayed
 6781 08e8 00000000 		.word	TraceBuffer
 6782 08ec 00000000 		.word	DispMsg
 6783              	.LVL576:
 6784              	.L1115:
 6785              	.LBB1300:
 6786              	.LBB1230:
2851:src/keys.c    **** 
 6787              		.loc 1 2851 3 is_stmt 1 view .LVU2133
 6788              	.LBB769:
 6789              	.LBI769:
2460:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
 6790              		.loc 1 2460 12 view .LVU2134
 6791              	.LBB770:
2462:src/keys.c    **** #ifdef DM42
 6792              		.loc 1 2462 2 view .LVU2135
 6793 08f0 E4B2     		uxtb	r4, r4
 6794              	.LVL577:
2462:src/keys.c    **** #ifdef DM42
 6795              		.loc 1 2462 2 is_stmt 0 view .LVU2136
 6796 08f2 A4F10E03 		sub	r3, r4, #14
 6797 08f6 192B     		cmp	r3, #25
 6798 08f8 0ED8     		bhi	.L585
 6799 08fa DFE803F0 		tbb	[pc, r3]
 6800              	.L587:
 6801 08fe 14       		.byte	(.L588-.L587)/2
 6802 08ff 0D       		.byte	(.L585-.L587)/2
 6803 0900 14       		.byte	(.L588-.L587)/2
 6804 0901 0D       		.byte	(.L585-.L587)/2
 6805 0902 0D       		.byte	(.L585-.L587)/2
 6806 0903 0D       		.byte	(.L585-.L587)/2
 6807 0904 0D       		.byte	(.L585-.L587)/2
 6808 0905 0D       		.byte	(.L585-.L587)/2
 6809 0906 0D       		.byte	(.L585-.L587)/2
 6810 0907 0D       		.byte	(.L585-.L587)/2
 6811 0908 0D       		.byte	(.L585-.L587)/2
 6812 0909 0D       		.byte	(.L585-.L587)/2
 6813 090a 0D       		.byte	(.L585-.L587)/2
 6814 090b 0D       		.byte	(.L585-.L587)/2
 6815 090c 0D       		.byte	(.L585-.L587)/2
ARM GAS  /tmp/cccKVeLo.s 			page 211


 6816 090d 0D       		.byte	(.L585-.L587)/2
 6817 090e 0D       		.byte	(.L585-.L587)/2
 6818 090f 0D       		.byte	(.L585-.L587)/2
 6819 0910 22       		.byte	(.L586-.L587)/2
 6820 0911 0D       		.byte	(.L585-.L587)/2
 6821 0912 0D       		.byte	(.L585-.L587)/2
 6822 0913 0D       		.byte	(.L585-.L587)/2
 6823 0914 0D       		.byte	(.L585-.L587)/2
 6824 0915 0D       		.byte	(.L585-.L587)/2
 6825 0916 0D       		.byte	(.L585-.L587)/2
 6826 0917 22       		.byte	(.L586-.L587)/2
 6827              		.p2align 1
 6828              	.L585:
 6829 0918 3268     		ldr	r2, [r6]
 6830              	.LBE770:
 6831              	.LBE769:
2851:src/keys.c    **** 
 6832              		.loc 1 2851 10 view .LVU2137
 6833 091a 4FF0330B 		mov	fp, #51
 6834 091e FFF7C8BB 		b	.L565
 6835              	.L589:
 6836              	.LBB773:
 6837              	.LBB771:
2471:src/keys.c    **** 	  }
 6838              		.loc 1 2471 26 is_stmt 1 view .LVU2138
 6839 0922 FFF7FEFF 		bl	clpall
 6840              	.LVL578:
2471:src/keys.c    **** 	  }
 6841              		.loc 1 2471 36 view .LVU2139
 6842              	.L588:
2480:src/keys.c    **** 	  State2.digval = 0;
 6843              		.loc 1 2480 4 view .LVU2140
2480:src/keys.c    **** 	  State2.digval = 0;
 6844              		.loc 1 2480 19 is_stmt 0 view .LVU2141
 6845 0926 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
 6846 092a 3268     		ldr	r2, [r6]
 6847 092c 6FF30203 		bfc	r3, #0, #3
2481:src/keys.c    **** 	  break;
 6848              		.loc 1 2481 18 view .LVU2142
 6849 0930 0021     		movs	r1, #0
2480:src/keys.c    **** 	  State2.digval = 0;
 6850              		.loc 1 2480 19 view .LVU2143
 6851 0932 88F81430 		strb	r3, [r8, #20]
2481:src/keys.c    **** 	  break;
 6852              		.loc 1 2481 4 is_stmt 1 view .LVU2144
2481:src/keys.c    **** 	  break;
 6853              		.loc 1 2481 18 is_stmt 0 view .LVU2145
 6854 0936 A8F80810 		strh	r1, [r8, #8]	@ movhi
2482:src/keys.c    **** 	default:			// No state change
 6855              		.loc 1 2482 4 is_stmt 1 view .LVU2146
 6856              	.LBE771:
 6857              	.LBE773:
2851:src/keys.c    **** 
 6858              		.loc 1 2851 10 is_stmt 0 view .LVU2147
 6859 093a 4FF0330B 		mov	fp, #51
 6860              	.LBB774:
 6861              	.LBB772:
ARM GAS  /tmp/cccKVeLo.s 			page 212


2482:src/keys.c    **** 	default:			// No state change
 6862              		.loc 1 2482 4 view .LVU2148
 6863 093e FFF7B8BB 		b	.L565
 6864              	.L586:
2467:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 6865              		.loc 1 2467 4 is_stmt 1 view .LVU2149
2467:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 6866              		.loc 1 2467 18 is_stmt 0 view .LVU2150
 6867 0942 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
 6868 0946 03F00703 		and	r3, r3, #7
 6869 094a 013B     		subs	r3, r3, #1
 6870 094c 032B     		cmp	r3, #3
 6871 094e EAD8     		bhi	.L588
 6872 0950 01A2     		adr	r2, .L590
 6873 0952 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6874 0956 00BF     		.p2align 2
 6875              	.L590:
 6876 0958 75090000 		.word	.L593+1
 6877 095c 6F090000 		.word	.L592+1
 6878 0960 69090000 		.word	.L591+1
 6879 0964 23090000 		.word	.L589+1
 6880              		.p2align 1
 6881              	.L591:
2470:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 6882              		.loc 1 2470 26 is_stmt 1 view .LVU2151
 6883 0968 FFF7FEFF 		bl	clrprog
 6884              	.LVL579:
2470:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 6885              		.loc 1 2470 37 view .LVU2152
2470:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 6886              		.loc 1 2470 4 is_stmt 0 view .LVU2153
 6887 096c DBE7     		b	.L588
 6888              	.L592:
2469:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 6889              		.loc 1 2469 25 is_stmt 1 view .LVU2154
 6890 096e FFF7FEFF 		bl	reset
 6891              	.LVL580:
2469:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 6892              		.loc 1 2469 34 view .LVU2155
2469:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 6893              		.loc 1 2469 4 is_stmt 0 view .LVU2156
 6894 0972 D8E7     		b	.L588
 6895              	.L593:
2468:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 6896              		.loc 1 2468 25 is_stmt 1 view .LVU2157
 6897 0974 FFF7FEFF 		bl	clrall
 6898              	.LVL581:
2468:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 6899              		.loc 1 2468 35 view .LVU2158
2468:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 6900              		.loc 1 2468 4 is_stmt 0 view .LVU2159
 6901 0978 D5E7     		b	.L588
 6902              	.LVL582:
 6903              	.L1112:
2468:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 6904              		.loc 1 2468 4 view .LVU2160
 6905              	.LBE772:
ARM GAS  /tmp/cccKVeLo.s 			page 213


 6906              	.LBE774:
2825:src/keys.c    **** #else
 6907              		.loc 1 2825 47 view .LVU2161
 6908 097a DFF8AC83 		ldr	r8, .L1208+28
2825:src/keys.c    **** #else
 6909              		.loc 1 2825 61 view .LVU2162
 6910 097e 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2825:src/keys.c    **** #else
 6911              		.loc 1 2825 47 view .LVU2163
 6912 0982 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
2825:src/keys.c    **** #else
 6913              		.loc 1 2825 61 view .LVU2164
 6914 0986 02F00402 		and	r2, r2, #4
2825:src/keys.c    **** #else
 6915              		.loc 1 2825 58 view .LVU2165
 6916 098a 1A43     		orrs	r2, r2, r3
 6917 098c 4AEA0202 		orr	r2, r10, r2
 6918 0990 12F0FF0F 		tst	r2, #255
 6919 0994 7FF40AAC 		bne	.L577
2830:src/keys.c    ****       return STATE_UNFINISHED;
 6920              		.loc 1 2830 7 is_stmt 1 view .LVU2166
 6921 0998 FFF7FEFF 		bl	soft_init_state
 6922              	.LVL583:
2831:src/keys.c    ****     }
 6923              		.loc 1 2831 7 view .LVU2167
2831:src/keys.c    ****     }
 6924              		.loc 1 2831 14 is_stmt 0 view .LVU2168
 6925 099c 4FF0330B 		mov	fp, #51
 6926 09a0 3268     		ldr	r2, [r6]
 6927 09a2 FFF786BB 		b	.L565
 6928              	.L1116:
2854:src/keys.c    **** 
 6929              		.loc 1 2854 3 is_stmt 1 view .LVU2169
2854:src/keys.c    **** 
 6930              		.loc 1 2854 10 is_stmt 0 view .LVU2170
 6931 09a6 E0B2     		uxtb	r0, r4
 6932 09a8 FFF7FEFF 		bl	process_arg
 6933              	.LVL584:
 6934 09ac 8346     		mov	fp, r0
 6935 09ae 43E5     		b	.L595
 6936              	.LVL585:
 6937              	.L869:
2854:src/keys.c    **** 
 6938              		.loc 1 2854 10 view .LVU2171
 6939              	.LBE1230:
 6940              	.LBE1300:
 6941              	.LBB1301:
3179:src/keys.c    ****       }
 6942              		.loc 1 3179 4 is_stmt 1 view .LVU2172
3179:src/keys.c    ****       }
 6943              		.loc 1 3179 9 is_stmt 0 view .LVU2173
 6944 09b0 0025     		movs	r5, #0
 6945 09b2 00F8015C 		strb	r5, [r0, #-1]
 6946 09b6 3268     		ldr	r2, [r6]
 6947 09b8 4FF0300B 		mov	fp, #48
 6948 09bc FFF779BB 		b	.L565
 6949              	.LVL586:
ARM GAS  /tmp/cccKVeLo.s 			page 214


 6950              	.L1119:
3179:src/keys.c    ****       }
 6951              		.loc 1 3179 9 view .LVU2174
 6952              	.LBE1301:
 6953              	.LBB1302:
 6954              	.LBB1231:
2863:src/keys.c    **** 
 6955              		.loc 1 2863 3 is_stmt 1 view .LVU2175
 6956              	.LBB775:
 6957              	.LBI775:
1926:src/keys.c    **** 	int r = State2.test;
 6958              		.loc 1 1926 12 view .LVU2176
 6959              	.LBB776:
1927:src/keys.c    **** 	int cmpx = State2.cmplx;
 6960              		.loc 1 1927 2 view .LVU2177
1928:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 6961              		.loc 1 1928 2 view .LVU2178
 6962              	.LBB777:
 6963              	.LBB778:
 6964              	.LBB779:
 6965              	.LBB780:
 133:src/keys.c    **** }
 6966              		.loc 1 133 23 is_stmt 0 view .LVU2179
 6967 09c0 D24A     		ldr	r2, .L1208
 6968              	.LBE780:
 6969              	.LBE779:
 224:src/keys.c    **** }
 6970              		.loc 1 224 28 view .LVU2180
 6971 09c2 DFF84CC3 		ldr	ip, .L1208+4
 6972              	.LBB784:
 6973              	.LBB781:
 133:src/keys.c    **** }
 6974              		.loc 1 133 23 view .LVU2181
 6975 09c6 E4B2     		uxtb	r4, r4
 6976              	.LVL587:
 133:src/keys.c    **** }
 6977              		.loc 1 133 23 view .LVU2182
 6978              	.LBE781:
 6979              	.LBE784:
 6980              	.LBE778:
 6981              	.LBE777:
1930:src/keys.c    **** 
 6982              		.loc 1 1930 44 view .LVU2183
 6983 09c8 11F0020F 		tst	r1, #2
 6984              	.LBB789:
 6985              	.LBB787:
 6986              	.LBB785:
 6987              	.LBB782:
 133:src/keys.c    **** }
 6988              		.loc 1 133 23 view .LVU2184
 6989 09cc 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 6990              	.LBE782:
 6991              	.LBE785:
 224:src/keys.c    **** }
 6992              		.loc 1 224 28 view .LVU2185
 6993 09ce 1CF802C0 		ldrb	ip, [ip, r2]	@ zero_extendqisi2
 6994              	.LBE787:
ARM GAS  /tmp/cccKVeLo.s 			page 215


 6995              	.LBE789:
1928:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 6996              		.loc 1 1928 19 view .LVU2186
 6997 09d2 C1F3400E 		ubfx	lr, r1, #1, #1
 6998              	.LVL588:
1929:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 6999              		.loc 1 1929 2 is_stmt 1 view .LVU2187
 7000              	.LBB790:
 7001              	.LBI777:
 200:src/keys.c    **** {
 7002              		.loc 1 200 14 view .LVU2188
 7003              	.LBB788:
 202:src/keys.c    ****     // K00 - K05
 7004              		.loc 1 202 3 view .LVU2189
 224:src/keys.c    **** }
 7005              		.loc 1 224 3 view .LVU2190
 7006              	.LBB786:
 7007              	.LBI779:
 121:src/keys.c    **** {
 7008              		.loc 1 121 12 view .LVU2191
 7009              	.LBB783:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 7010              		.loc 1 123 2 view .LVU2192
 133:src/keys.c    **** }
 7011              		.loc 1 133 2 view .LVU2193
 133:src/keys.c    **** }
 7012              		.loc 1 133 2 is_stmt 0 view .LVU2194
 7013              	.LBE783:
 7014              	.LBE786:
 7015              	.LBE788:
 7016              	.LBE790:
1929:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 7017              		.loc 1 1929 15 view .LVU2195
 7018 09d6 2CF08002 		bic	r2, ip, #128
 7019              	.LVL589:
1930:src/keys.c    **** 
 7020              		.loc 1 1930 2 is_stmt 1 view .LVU2196
1930:src/keys.c    **** 
 7021              		.loc 1 1930 44 is_stmt 0 view .LVU2197
 7022 09da 00F0A980 		beq	.L1141
 7023              	.LVL590:
1932:src/keys.c    **** 	State2.cmplx = 0;
 7024              		.loc 1 1932 2 is_stmt 1 view .LVU2198
1933:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7025              		.loc 1 1933 15 is_stmt 0 view .LVU2199
 7026 09de 60F34101 		bfi	r1, r0, #1, #1
1934:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7027              		.loc 1 1934 5 view .LVU2200
 7028 09e2 642A     		cmp	r2, #100
1932:src/keys.c    **** 	State2.cmplx = 0;
 7029              		.loc 1 1932 14 view .LVU2201
 7030 09e4 4FF00700 		mov	r0, #7
1933:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7031              		.loc 1 1933 15 view .LVU2202
 7032 09e8 88F81510 		strb	r1, [r8, #21]
1932:src/keys.c    **** 	State2.cmplx = 0;
 7033              		.loc 1 1932 14 view .LVU2203
ARM GAS  /tmp/cccKVeLo.s 			page 216


 7034 09ec 88F80F00 		strb	r0, [r8, #15]
1933:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7035              		.loc 1 1933 2 is_stmt 1 view .LVU2204
1934:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7036              		.loc 1 1934 2 view .LVU2205
1934:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7037              		.loc 1 1934 5 is_stmt 0 view .LVU2206
 7038 09f0 00F06C84 		beq	.L941
1930:src/keys.c    **** 
 7039              		.loc 1 1930 44 view .LVU2207
 7040 09f4 4FF0340A 		mov	r10, #52
 7041              	.LVL591:
 7042              	.L898:
1935:src/keys.c    **** 		// Lettered register
 7043              		.loc 1 1935 5 view .LVU2208
 7044 09f8 7F2A     		cmp	r2, #127
1930:src/keys.c    **** 
 7045              		.loc 1 1930 60 view .LVU2209
 7046 09fa DA44     		add	r10, r10, fp
1935:src/keys.c    **** 		// Lettered register
 7047              		.loc 1 1935 2 is_stmt 1 view .LVU2210
1935:src/keys.c    **** 		// Lettered register
 7048              		.loc 1 1935 5 is_stmt 0 view .LVU2211
 7049 09fc 00F01381 		beq	.L627
 7050              	.LVL592:
1935:src/keys.c    **** 		// Lettered register
 7051              		.loc 1 1935 18 view .LVU2212
 7052 0a00 632A     		cmp	r2, #99
 7053 0a02 40F23981 		bls	.L628
1935:src/keys.c    **** 		// Lettered register
 7054              		.loc 1 1935 37 view .LVU2213
 7055 0a06 6F2A     		cmp	r2, #111
 7056 0a08 00F20D81 		bhi	.L627
1937:src/keys.c    **** 			if (n == regI_idx)
 7057              		.loc 1 1937 3 is_stmt 1 view .LVU2214
1937:src/keys.c    **** 			if (n == regI_idx)
 7058              		.loc 1 1937 6 is_stmt 0 view .LVU2215
 7059 0a0c BEF1000F 		cmp	lr, #0
 7060 0a10 00F01D82 		beq	.L629
1937:src/keys.c    **** 			if (n == regI_idx)
 7061              		.loc 1 1937 12 view .LVU2216
 7062 0a14 1CF0010F 		tst	ip, #1
 7063 0a18 00F01982 		beq	.L629
1938:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 7064              		.loc 1 1938 4 is_stmt 1 view .LVU2217
1938:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 7065              		.loc 1 1938 7 is_stmt 0 view .LVU2218
 7066 0a1c 6D2A     		cmp	r2, #109
 7067 0a1e 40F00F81 		bne	.L630
1939:src/keys.c    **** 			// Disallow odd complex registers > A
 7068              		.loc 1 1939 5 is_stmt 1 view .LVU2219
1939:src/keys.c    **** 			// Disallow odd complex registers > A
 7069              		.loc 1 1939 30 is_stmt 0 view .LVU2220
 7070 0a22 0BF1290B 		add	fp, fp, #41
 7071              	.LVL593:
1939:src/keys.c    **** 			// Disallow odd complex registers > A
 7072              		.loc 1 1939 30 view .LVU2221
ARM GAS  /tmp/cccKVeLo.s 			page 217


 7073 0a26 07E5     		b	.L595
 7074              	.LVL594:
 7075              	.L1117:
1939:src/keys.c    **** 			// Disallow odd complex registers > A
 7076              		.loc 1 1939 30 view .LVU2222
 7077              	.LBE776:
 7078              	.LBE775:
2857:src/keys.c    **** 
 7079              		.loc 1 2857 3 is_stmt 1 view .LVU2223
 7080              	.LBB806:
 7081              	.LBI806:
1336:src/keys.c    **** 	int pc = -1;
 7082              		.loc 1 1336 12 view .LVU2224
 7083              	.LBB807:
1337:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
 7084              		.loc 1 1337 2 view .LVU2225
1338:src/keys.c    **** 
 7085              		.loc 1 1338 2 view .LVU2226
 7086              	.LBB808:
 7087              	.LBI808:
 200:src/keys.c    **** {
 7088              		.loc 1 200 14 view .LVU2227
 7089              	.LBB809:
 202:src/keys.c    ****     // K00 - K05
 7090              		.loc 1 202 3 view .LVU2228
 224:src/keys.c    **** }
 7091              		.loc 1 224 3 view .LVU2229
 7092              	.LBB810:
 7093              	.LBI810:
 121:src/keys.c    **** {
 7094              		.loc 1 121 12 view .LVU2230
 7095              	.LBB811:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 7096              		.loc 1 123 2 view .LVU2231
 133:src/keys.c    **** }
 7097              		.loc 1 133 2 view .LVU2232
 133:src/keys.c    **** }
 7098              		.loc 1 133 23 is_stmt 0 view .LVU2233
 7099 0a28 B84B     		ldr	r3, .L1208
 7100              	.LBE811:
 7101              	.LBE810:
 224:src/keys.c    **** }
 7102              		.loc 1 224 28 view .LVU2234
 7103 0a2a B94A     		ldr	r2, .L1208+4
 7104 0a2c E4B2     		uxtb	r4, r4
 7105              	.LVL595:
 7106              	.LBB813:
 7107              	.LBB812:
 133:src/keys.c    **** }
 7108              		.loc 1 133 23 view .LVU2235
 7109 0a2e 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 7110              	.LBE812:
 7111              	.LBE813:
 224:src/keys.c    **** }
 7112              		.loc 1 224 28 view .LVU2236
 7113 0a30 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 7114              	.LVL596:
ARM GAS  /tmp/cccKVeLo.s 			page 218


 224:src/keys.c    **** }
 7115              		.loc 1 224 28 view .LVU2237
 7116              	.LBE809:
 7117              	.LBE808:
1340:src/keys.c    **** 		// Digit 0 - 9
 7118              		.loc 1 1340 2 is_stmt 1 view .LVU2238
1340:src/keys.c    **** 		// Digit 0 - 9
 7119              		.loc 1 1340 5 is_stmt 0 view .LVU2239
 7120 0a32 0928     		cmp	r0, #9
 7121 0a34 40F21781 		bls	.L1142
1345:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 7122              		.loc 1 1345 7 is_stmt 1 view .LVU2240
1345:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 7123              		.loc 1 1345 18 is_stmt 0 view .LVU2241
 7124 0a38 20F08000 		bic	r0, r0, #128
 7125              	.LVL597:
1345:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 7126              		.loc 1 1345 10 view .LVU2242
 7127 0a3c 6428     		cmp	r0, #100
 7128 0a3e 00F0A081 		beq	.L1143
1346:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 7129              		.loc 1 1346 7 is_stmt 1 view .LVU2243
1346:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 7130              		.loc 1 1346 10 is_stmt 0 view .LVU2244
 7131 0a42 6528     		cmp	r0, #101
 7132 0a44 00F0FB81 		beq	.L1144
1347:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 7133              		.loc 1 1347 7 is_stmt 1 view .LVU2245
1347:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 7134              		.loc 1 1347 10 is_stmt 0 view .LVU2246
 7135 0a48 6628     		cmp	r0, #102
 7136 0a4a 00F02682 		beq	.L1145
1348:src/keys.c    **** #endif
 7137              		.loc 1 1348 7 is_stmt 1 view .LVU2247
1348:src/keys.c    **** #endif
 7138              		.loc 1 1348 10 is_stmt 0 view .LVU2248
 7139 0a4e 6728     		cmp	r0, #103
 7140 0a50 00F01D84 		beq	.L1146
1350:src/keys.c    **** 		// A - D
 7141              		.loc 1 1350 7 is_stmt 1 view .LVU2249
1350:src/keys.c    **** 		// A - D
 7142              		.loc 1 1350 10 is_stmt 0 view .LVU2250
 7143 0a54 032C     		cmp	r4, #3
 7144 0a56 40F22284 		bls	.L1147
1355:src/keys.c    **** 		// .
 7145              		.loc 1 1355 7 is_stmt 1 view .LVU2251
1355:src/keys.c    **** 		// .
 7146              		.loc 1 1355 10 is_stmt 0 view .LVU2252
 7147 0a5a 262C     		cmp	r4, #38
 7148 0a5c 00F0BA84 		beq	.L1148
1360:src/keys.c    **** 		// ENTER - short circuit processing
 7149              		.loc 1 1360 7 is_stmt 1 view .LVU2253
1360:src/keys.c    **** 		// ENTER - short circuit processing
 7150              		.loc 1 1360 10 is_stmt 0 view .LVU2254
 7151 0a60 0C2C     		cmp	r4, #12
 7152 0a62 00F07381 		beq	.L1149
1364:src/keys.c    **** 		// backspace
ARM GAS  /tmp/cccKVeLo.s 			page 219


 7153              		.loc 1 1364 7 is_stmt 1 view .LVU2255
1364:src/keys.c    **** 		// backspace
 7154              		.loc 1 1364 10 is_stmt 0 view .LVU2256
 7155 0a66 102C     		cmp	r4, #16
 7156 0a68 00F0A084 		beq	.L1150
1373:src/keys.c    **** 		// up
 7157              		.loc 1 1373 7 is_stmt 1 view .LVU2257
1373:src/keys.c    **** 		// up
 7158              		.loc 1 1373 10 is_stmt 0 view .LVU2258
 7159 0a6c 122C     		cmp	r4, #18
 7160 0a6e 00F01887 		beq	.L1151
1383:src/keys.c    **** 		// down
 7161              		.loc 1 1383 7 is_stmt 1 view .LVU2259
1383:src/keys.c    **** 		// down
 7162              		.loc 1 1383 10 is_stmt 0 view .LVU2260
 7163 0a72 182C     		cmp	r4, #24
 7164 0a74 00F0E387 		beq	.L614
 7165 0a78 3268     		ldr	r2, [r6]
 7166              	.LVL598:
1383:src/keys.c    **** 		// down
 7167              		.loc 1 1383 10 view .LVU2261
 7168              	.LBE807:
 7169              	.LBE806:
2857:src/keys.c    **** 
 7170              		.loc 1 2857 10 view .LVU2262
 7171 0a7a 4FF0330B 		mov	fp, #51
 7172 0a7e FFF718BB 		b	.L565
 7173              	.LVL599:
 7174              	.L857:
2857:src/keys.c    **** 
 7175              		.loc 1 2857 10 view .LVU2263
 7176              	.LBE1231:
 7177              	.LBE1302:
 7178              	.LBB1303:
3151:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7179              		.loc 1 3151 4 is_stmt 1 view .LVU2264
 7180              	.LBB1275:
 7181              	.LBI1275:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 7182              		.loc 1 506 13 view .LVU2265
 7183              	.LBB1276:
 507:src/keys.c    **** 		return;
 7184              		.loc 1 507 2 view .LVU2266
 507:src/keys.c    **** 		return;
 7185              		.loc 1 507 6 is_stmt 0 view .LVU2267
 7186 0a82 FFF7FEFF 		bl	is_bad_cmdline
 7187              	.LVL600:
 507:src/keys.c    **** 		return;
 7188              		.loc 1 507 5 view .LVU2268
 7189 0a86 0546     		mov	r5, r0
 7190 0a88 0028     		cmp	r0, #0
 7191 0a8a 40F0E680 		bne	.L1152
 7192 0a8e 2046     		mov	r0, r4
 7193 0a90 FFF7FEFF 		bl	init_arg.part.0
 7194              	.LVL601:
 7195              	.LBE1276:
 7196              	.LBE1275:
ARM GAS  /tmp/cccKVeLo.s 			page 220


3152:src/keys.c    **** 	}
 7197              		.loc 1 3152 6 view .LVU2269
 7198 0a94 4FF0330B 		mov	fp, #51
 7199 0a98 3268     		ldr	r2, [r6]
 7200 0a9a FFF70ABB 		b	.L565
 7201              	.LVL602:
 7202              	.L939:
3152:src/keys.c    **** 	}
 7203              		.loc 1 3152 6 view .LVU2270
 7204              	.LBE1303:
 7205              	.LBB1304:
 7206 0a9e 9B46     		mov	fp, r3
 7207              	.LVL603:
3152:src/keys.c    **** 	}
 7208              		.loc 1 3152 6 view .LVU2271
 7209 0aa0 FFF728BB 		b	.L880
 7210              	.LVL604:
 7211              	.L1118:
3152:src/keys.c    **** 	}
 7212              		.loc 1 3152 6 view .LVU2272
 7213              	.LBE1304:
 7214              	.LBB1305:
 7215              	.LBB1232:
2860:src/keys.c    **** 
 7216              		.loc 1 2860 3 is_stmt 1 view .LVU2273
 7217              	.LBB827:
 7218              	.LBB828:
1238:src/keys.c    **** 	State2.dot = 0;
 7219              		.loc 1 1238 15 is_stmt 0 view .LVU2274
 7220 0aa4 21F06203 		bic	r3, r1, #98
 7221              	.LBE828:
 7222              	.LBE827:
2860:src/keys.c    **** 
 7223              		.loc 1 2860 10 view .LVU2275
 7224 0aa8 E4B2     		uxtb	r4, r4
 7225              	.LVL605:
 7226              	.LBB842:
 7227              	.LBI827:
1228:src/keys.c    **** 	static const unsigned char op_map[][2] = {
 7228              		.loc 1 1228 12 is_stmt 1 view .LVU2276
 7229              	.LBB838:
1229:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
 7230              		.loc 1 1229 2 view .LVU2277
1234:src/keys.c    **** 	int f = State2.dot;
 7231              		.loc 1 1234 2 view .LVU2278
1238:src/keys.c    **** 	State2.dot = 0;
 7232              		.loc 1 1238 15 is_stmt 0 view .LVU2279
 7233 0aaa 88F81530 		strb	r3, [r8, #21]
1234:src/keys.c    **** 	int f = State2.dot;
 7234              		.loc 1 1234 20 view .LVU2280
 7235 0aae C1F3400A 		ubfx	r10, r1, #1, #1
 7236              	.LVL606:
1235:src/keys.c    **** 
 7237              		.loc 1 1235 2 is_stmt 1 view .LVU2281
1235:src/keys.c    **** 
 7238              		.loc 1 1235 16 is_stmt 0 view .LVU2282
 7239 0ab2 C1F38019 		ubfx	r9, r1, #6, #1
ARM GAS  /tmp/cccKVeLo.s 			page 221


 7240              	.LVL607:
1237:src/keys.c    **** 	State2.cmplx = 0;
 7241              		.loc 1 1237 2 is_stmt 1 view .LVU2283
1238:src/keys.c    **** 	State2.dot = 0;
 7242              		.loc 1 1238 2 view .LVU2284
1239:src/keys.c    **** #ifdef DM42
 7243              		.loc 1 1239 2 view .LVU2285
1241:src/keys.c    **** #endif
 7244              		.loc 1 1241 2 view .LVU2286
 7245              	.LBB829:
 7246              	.LBI829:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 7247              		.loc 1 104 13 view .LVU2287
 7248              	.LBE829:
 7249              	.LBE838:
 7250              	.LBE842:
 7251              	.LBE1232:
 7252              	.LBE1305:
 105:src/keys.c    **** }
 7253              		.loc 1 105 2 view .LVU2288
 7254              	.LBB1306:
 7255              	.LBB1233:
 7256              	.LBB843:
 7257              	.LBB839:
 7258              	.LBB836:
 7259              	.LBB830:
 7260              	.LBI830:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 7261              		.loc 1 94 20 view .LVU2289
 7262              	.LBB831:
  95:src/keys.c    **** 	State2.shifts = shift;
 7263              		.loc 1 95 2 view .LVU2290
 7264              	.LBB832:
 7265              	.LBI832:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 7266              		.loc 1 86 13 view .LVU2291
 7267              	.LBB833:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7268              		.loc 1 87 2 view .LVU2292
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7269              		.loc 1 87 18 is_stmt 0 view .LVU2293
 7270 0ab6 FFF7FEFF 		bl	shift_down
 7271              	.LVL608:
  88:src/keys.c    **** }
 7272              		.loc 1 88 2 is_stmt 1 view .LVU2294
 7273              	.LBE833:
 7274              	.LBE832:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 7275              		.loc 1 96 2 view .LVU2295
 7276              	.LBE831:
 7277              	.LBE830:
 7278              	.LBE836:
1243:src/keys.c    **** 
 7279              		.loc 1 1243 2 is_stmt 0 view .LVU2296
 7280 0aba 292C     		cmp	r4, #41
 7281              	.LBB837:
 7282              	.LBB835:
ARM GAS  /tmp/cccKVeLo.s 			page 222


 7283              	.LBB834:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 7284              		.loc 1 96 16 view .LVU2297
 7285 0abc 88F810B0 		strb	fp, [r8, #16]
  98:src/keys.c    **** }
 7286              		.loc 1 98 2 is_stmt 1 view .LVU2298
 7287              	.LVL609:
  98:src/keys.c    **** }
 7288              		.loc 1 98 2 is_stmt 0 view .LVU2299
 7289              	.LBE834:
 7290              	.LBE835:
 7291              	.LBE837:
1243:src/keys.c    **** 
 7292              		.loc 1 1243 2 is_stmt 1 view .LVU2300
 7293 0ac0 00F0E283 		beq	.L616
 7294 0ac4 16D8     		bhi	.L617
 7295 0ac6 013C     		subs	r4, r4, #1
 7296              	.LVL610:
1243:src/keys.c    **** 
 7297              		.loc 1 1243 2 is_stmt 0 view .LVU2301
 7298 0ac8 E3B2     		uxtb	r3, r4
 7299 0aca 022B     		cmp	r3, #2
 7300 0acc 00F20C81 		bhi	.L618
1248:src/keys.c    **** 
 7301              		.loc 1 1248 3 is_stmt 1 view .LVU2302
1248:src/keys.c    **** 
 7302              		.loc 1 1248 54 is_stmt 0 view .LVU2303
 7303 0ad0 904A     		ldr	r2, .L1208+8
 7304 0ad2 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 7305 0ad6 02EB4404 		add	r4, r2, r4, lsl #1
 7306              	.LVL611:
1248:src/keys.c    **** 
 7307              		.loc 1 1248 27 view .LVU2304
 7308 0ada BAF1000F 		cmp	r10, #0
1248:src/keys.c    **** 
 7309              		.loc 1 1248 54 view .LVU2305
 7310 0ade 14F809B0 		ldrb	fp, [r4, r9]	@ zero_extendqisi2
1248:src/keys.c    **** 
 7311              		.loc 1 1248 27 view .LVU2306
 7312 0ae2 14BF     		ite	ne
 7313 0ae4 4FF4A062 		movne	r2, #1280
 7314 0ae8 4FF40072 		moveq	r2, #512
1248:src/keys.c    **** 
 7315              		.loc 1 1248 37 view .LVU2307
 7316 0aec 4BEA020B 		orr	fp, fp, r2
 7317 0af0 5846     		mov	r0, fp
 7318 0af2 16E5     		b	.L622
 7319              	.LVL612:
 7320              	.L617:
1243:src/keys.c    **** 
 7321              		.loc 1 1243 2 view .LVU2308
 7322 0af4 2D2C     		cmp	r4, #45
 7323 0af6 40F0F780 		bne	.L618
1251:src/keys.c    **** 		goto stay;
 7324              		.loc 1 1251 3 is_stmt 1 view .LVU2309
 7325 0afa 8AF0010A 		eor	r10, r10, #1
 7326              	.LVL613:
ARM GAS  /tmp/cccKVeLo.s 			page 223


1252:src/keys.c    **** 
 7327              		.loc 1 1252 3 view .LVU2310
 7328              	.L623:
1265:src/keys.c    **** 		State2.cmplx = cmplx;
 7329              		.loc 1 1265 3 view .LVU2311
1266:src/keys.c    **** 		State2.dot = f;
 7330              		.loc 1 1266 3 view .LVU2312
1267:src/keys.c    **** 		break;
 7331              		.loc 1 1267 3 view .LVU2313
1266:src/keys.c    **** 		State2.dot = f;
 7332              		.loc 1 1266 16 is_stmt 0 view .LVU2314
 7333 0afe 4FEA4A03 		lsl	r3, r10, #1
 7334 0b02 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 7335 0b06 3268     		ldr	r2, [r6]
 7336 0b08 43F02003 		orr	r3, r3, #32
 7337 0b0c 43EA8913 		orr	r3, r3, r9, lsl #6
 7338 0b10 03F06203 		and	r3, r3, #98
 7339 0b14 21F06201 		bic	r1, r1, #98
 7340 0b18 0B43     		orrs	r3, r3, r1
 7341 0b1a 88F81530 		strb	r3, [r8, #21]
1268:src/keys.c    **** 
 7342              		.loc 1 1268 3 is_stmt 1 view .LVU2315
1273:src/keys.c    **** }
 7343              		.loc 1 1273 9 is_stmt 0 view .LVU2316
 7344 0b1e 4FF0330B 		mov	fp, #51
1268:src/keys.c    **** 
 7345              		.loc 1 1268 3 view .LVU2317
 7346 0b22 FFF7C6BA 		b	.L565
 7347              	.LVL614:
 7348              	.L1113:
1268:src/keys.c    **** 
 7349              		.loc 1 1268 3 view .LVU2318
 7350              	.LBE839:
 7351              	.LBE843:
2837:src/keys.c    **** 		return STATE_IGNORE;
 7352              		.loc 1 2837 3 is_stmt 1 view .LVU2319
2837:src/keys.c    **** 		return STATE_IGNORE;
 7353              		.loc 1 2837 15 is_stmt 0 view .LVU2320
 7354 0b26 1D60     		str	r5, [r3]
2838:src/keys.c    **** 	}
 7355              		.loc 1 2838 3 is_stmt 1 view .LVU2321
 7356              	.LVL615:
2838:src/keys.c    **** 	}
 7357              		.loc 1 2838 3 is_stmt 0 view .LVU2322
 7358              	.LBE1233:
 7359              	.LBE1306:
3224:src/keys.c    **** #ifndef CONSOLE
 7360              		.loc 1 3224 3 is_stmt 1 view .LVU2323
 7361              	.LBB1307:
 7362              	.LBB1234:
2838:src/keys.c    **** 	}
 7363              		.loc 1 2838 10 is_stmt 0 view .LVU2324
 7364 0b28 4FF0320B 		mov	fp, #50
 7365 0b2c FFF7C4BA 		b	.L580
 7366              	.LVL616:
 7367              	.L1141:
 7368              	.LBB844:
ARM GAS  /tmp/cccKVeLo.s 			page 224


 7369              	.LBB795:
1932:src/keys.c    **** 	State2.cmplx = 0;
 7370              		.loc 1 1932 2 is_stmt 1 view .LVU2325
1933:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7371              		.loc 1 1933 15 is_stmt 0 view .LVU2326
 7372 0b30 6EF34101 		bfi	r1, lr, #1, #1
1932:src/keys.c    **** 	State2.cmplx = 0;
 7373              		.loc 1 1932 14 view .LVU2327
 7374 0b34 0720     		movs	r0, #7
1934:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7375              		.loc 1 1934 5 view .LVU2328
 7376 0b36 642A     		cmp	r2, #100
1933:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7377              		.loc 1 1933 15 view .LVU2329
 7378 0b38 88F81510 		strb	r1, [r8, #21]
1932:src/keys.c    **** 	State2.cmplx = 0;
 7379              		.loc 1 1932 14 view .LVU2330
 7380 0b3c 88F80F00 		strb	r0, [r8, #15]
1933:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7381              		.loc 1 1933 2 is_stmt 1 view .LVU2331
1934:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7382              		.loc 1 1934 2 view .LVU2332
1934:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7383              		.loc 1 1934 5 is_stmt 0 view .LVU2333
 7384 0b40 00F0D783 		beq	.L942
1930:src/keys.c    **** 
 7385              		.loc 1 1930 44 view .LVU2334
 7386 0b44 4FF02D0A 		mov	r10, #45
 7387              	.LVL617:
1930:src/keys.c    **** 
 7388              		.loc 1 1930 44 view .LVU2335
 7389 0b48 56E7     		b	.L898
 7390              	.LVL618:
 7391              	.L940:
1930:src/keys.c    **** 
 7392              		.loc 1 1930 44 view .LVU2336
 7393              	.LBE795:
 7394              	.LBE844:
 7395              	.LBE1234:
 7396              	.LBE1307:
 7397              	.LBB1308:
 7398 0b4a AB46     		mov	fp, r5
 7399              	.LVL619:
1930:src/keys.c    **** 
 7400              		.loc 1 1930 44 view .LVU2337
 7401 0b4c FFF7D2BA 		b	.L880
 7402              	.LVL620:
 7403              	.L1120:
1930:src/keys.c    **** 
 7404              		.loc 1 1930 44 view .LVU2338
 7405              	.LBE1308:
 7406              	.LBB1309:
 7407              	.LBB1235:
2866:src/keys.c    **** 
 7408              		.loc 1 2866 3 is_stmt 1 view .LVU2339
 7409              	.LBB845:
 7410              	.LBB846:
ARM GAS  /tmp/cccKVeLo.s 			page 225


2495:src/keys.c    **** 
 7411              		.loc 1 2495 12 is_stmt 0 view .LVU2340
 7412 0b50 714A     		ldr	r2, .L1208+12
 7413 0b52 1268     		ldr	r2, [r2]
2495:src/keys.c    **** 
 7414              		.loc 1 2495 31 view .LVU2341
 7415 0b54 B2F9DE27 		ldrsh	r2, [r2, #2014]
 7416              	.LBE846:
 7417              	.LBE845:
2866:src/keys.c    **** 
 7418              		.loc 1 2866 10 view .LVU2342
 7419 0b58 E4B2     		uxtb	r4, r4
 7420              	.LVL621:
 7421              	.LBB865:
 7422              	.LBI845:
2493:src/keys.c    **** 	int n = ((int)State2.status) - 3;
 7423              		.loc 1 2493 12 is_stmt 1 view .LVU2343
 7424              	.LBB857:
2494:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7425              		.loc 1 2494 2 view .LVU2344
2495:src/keys.c    **** 
 7426              		.loc 1 2495 2 view .LVU2345
2495:src/keys.c    **** 
 7427              		.loc 1 2495 31 is_stmt 0 view .LVU2346
 7428 0b5a 002A     		cmp	r2, #0
 7429 0b5c B4BF     		ite	lt
 7430 0b5e 0B22     		movlt	r2, #11
 7431 0b60 0A22     		movge	r2, #10
 7432              	.LVL622:
2497:src/keys.c    **** 		if (--n < -2)
 7433              		.loc 1 2497 2 is_stmt 1 view .LVU2347
2497:src/keys.c    **** 		if (--n < -2)
 7434              		.loc 1 2497 5 is_stmt 0 view .LVU2348
 7435 0b62 122C     		cmp	r4, #18
 7436 0b64 00F00881 		beq	.L1153
2501:src/keys.c    **** 		if (++n > max)
 7437              		.loc 1 2501 7 is_stmt 1 view .LVU2349
2501:src/keys.c    **** 		if (++n > max)
 7438              		.loc 1 2501 10 is_stmt 0 view .LVU2350
 7439 0b68 182C     		cmp	r4, #24
 7440 0b6a 00F07781 		beq	.L1154
2505:src/keys.c    **** 		State2.status = 0;
 7441              		.loc 1 2505 7 is_stmt 1 view .LVU2351
2505:src/keys.c    **** 		State2.status = 0;
 7442              		.loc 1 2505 10 is_stmt 0 view .LVU2352
 7443 0b6e 102C     		cmp	r4, #16
 7444 0b70 00F0C383 		beq	.L1155
 7445              	.LBB847:
2510:src/keys.c    **** 		if (nn <= 9)
 7446              		.loc 1 2510 3 is_stmt 1 view .LVU2353
 7447              	.LVL623:
 7448              	.LBB848:
 7449              	.LBI848:
 200:src/keys.c    **** {
 7450              		.loc 1 200 14 view .LVU2354
 7451              	.LBB849:
 202:src/keys.c    ****     // K00 - K05
ARM GAS  /tmp/cccKVeLo.s 			page 226


 7452              		.loc 1 202 3 view .LVU2355
 224:src/keys.c    **** }
 7453              		.loc 1 224 3 view .LVU2356
 7454              	.LBB850:
 7455              	.LBI850:
 121:src/keys.c    **** {
 7456              		.loc 1 121 12 view .LVU2357
 7457              	.LBB851:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 7458              		.loc 1 123 2 view .LVU2358
 133:src/keys.c    **** }
 7459              		.loc 1 133 2 view .LVU2359
 133:src/keys.c    **** }
 7460              		.loc 1 133 23 is_stmt 0 view .LVU2360
 7461 0b74 6549     		ldr	r1, .L1208
 7462              	.LBE851:
 7463              	.LBE850:
 224:src/keys.c    **** }
 7464              		.loc 1 224 28 view .LVU2361
 7465 0b76 6648     		ldr	r0, .L1208+4
 7466              	.LBB853:
 7467              	.LBB852:
 133:src/keys.c    **** }
 7468              		.loc 1 133 23 view .LVU2362
 7469 0b78 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 7470 0b7a 415C     		ldrb	r1, [r0, r1]	@ zero_extendqisi2
 7471 0b7c 01F07F01 		and	r1, r1, #127
 7472              	.LVL624:
 133:src/keys.c    **** }
 7473              		.loc 1 133 23 view .LVU2363
 7474              	.LBE852:
 7475              	.LBE853:
 7476              	.LBE849:
 7477              	.LBE848:
2511:src/keys.c    **** 			n = nn;
 7478              		.loc 1 2511 3 is_stmt 1 view .LVU2364
2511:src/keys.c    **** 			n = nn;
 7479              		.loc 1 2511 6 is_stmt 0 view .LVU2365
 7480 0b80 0929     		cmp	r1, #9
 7481 0b82 40F2A781 		bls	.L908
2513:src/keys.c    **** 			n = n == max ? 10 : max;
 7482              		.loc 1 2513 11 view .LVU2366
 7483 0b86 7029     		cmp	r1, #112
 7484              	.LBE847:
2494:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7485              		.loc 1 2494 6 view .LVU2367
 7486 0b88 A3F10303 		sub	r3, r3, #3
 7487              	.LVL625:
 7488              	.LBB854:
2513:src/keys.c    **** 			n = n == max ? 10 : max;
 7489              		.loc 1 2513 8 is_stmt 1 view .LVU2368
2513:src/keys.c    **** 			n = n == max ? 10 : max;
 7490              		.loc 1 2513 11 is_stmt 0 view .LVU2369
 7491 0b8c 00F02285 		beq	.L1156
2515:src/keys.c    **** 			n = 10; 
 7492              		.loc 1 2515 8 is_stmt 1 view .LVU2370
 7493              	.LBE854:
ARM GAS  /tmp/cccKVeLo.s 			page 227


2494:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7494              		.loc 1 2494 6 is_stmt 0 view .LVU2371
 7495 0b90 7F29     		cmp	r1, #127
 7496 0b92 0CBF     		ite	eq
 7497 0b94 1A46     		moveq	r2, r3
 7498              	.LVL626:
2494:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7499              		.loc 1 2494 6 view .LVU2372
 7500 0b96 0A22     		movne	r2, #10
 7501              	.LVL627:
 7502              	.L644:
2518:src/keys.c    **** 
 7503              		.loc 1 2518 2 is_stmt 1 view .LVU2373
2518:src/keys.c    **** 
 7504              		.loc 1 2518 20 is_stmt 0 view .LVU2374
 7505 0b98 0332     		adds	r2, r2, #3
 7506              	.LVL628:
2518:src/keys.c    **** 
 7507              		.loc 1 2518 16 view .LVU2375
 7508 0b9a 88F80C20 		strb	r2, [r8, #12]
2520:src/keys.c    **** }
 7509              		.loc 1 2520 2 is_stmt 1 view .LVU2376
 7510              	.LBE857:
 7511              	.LBE865:
2866:src/keys.c    **** 
 7512              		.loc 1 2866 10 is_stmt 0 view .LVU2377
 7513 0b9e 4FF0330B 		mov	fp, #51
 7514 0ba2 3268     		ldr	r2, [r6]
 7515              	.LVL629:
 7516              	.LBB866:
 7517              	.LBB858:
2520:src/keys.c    **** }
 7518              		.loc 1 2520 9 view .LVU2378
 7519 0ba4 FFF785BA 		b	.L565
 7520              	.LVL630:
 7521              	.L1124:
2520:src/keys.c    **** }
 7522              		.loc 1 2520 9 view .LVU2379
 7523              	.LBE858:
 7524              	.LBE866:
2889:src/keys.c    **** 
 7525              		.loc 1 2889 3 is_stmt 1 view .LVU2380
 7526              	.LBB867:
 7527              	.LBB868:
 7528              	.LBB869:
 7529              	.LBB870:
 7530              	.LBB871:
 7531              	.LBB872:
 7532              	.LBB873:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7533              		.loc 1 87 18 is_stmt 0 view .LVU2381
 7534 0ba8 FFF7FEFF 		bl	shift_down
 7535              	.LVL631:
 7536              	.LBE873:
 7537              	.LBE872:
 7538              	.LBE871:
 7539              	.LBE870:
ARM GAS  /tmp/cccKVeLo.s 			page 228


 7540              	.LBE869:
 7541              	.LBE868:
 7542              	.LBE867:
2889:src/keys.c    **** 
 7543              		.loc 1 2889 10 view .LVU2382
 7544 0bac E4B2     		uxtb	r4, r4
 7545              	.LVL632:
 7546              	.LBB894:
 7547              	.LBI867:
1280:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 7548              		.loc 1 1280 12 is_stmt 1 view .LVU2383
 7549              	.LBB890:
1281:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
 7550              		.loc 1 1281 2 view .LVU2384
1286:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
 7551              		.loc 1 1286 2 view .LVU2385
1290:src/keys.c    **** 	const int f = (shift == SHIFT_F);
 7552              		.loc 1 1290 2 view .LVU2386
 7553              	.LBB882:
 7554              	.LBI869:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 7555              		.loc 1 104 13 view .LVU2387
 7556              	.LBE882:
 7557              	.LBE890:
 7558              	.LBE894:
 7559              	.LBE1235:
 7560              	.LBE1309:
 105:src/keys.c    **** }
 7561              		.loc 1 105 2 view .LVU2388
 7562              	.LBB1310:
 7563              	.LBB1236:
 7564              	.LBB895:
 7565              	.LBB891:
 7566              	.LBB883:
 7567              	.LBB879:
 7568              	.LBI870:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 7569              		.loc 1 94 20 view .LVU2389
 7570              	.LBB876:
  95:src/keys.c    **** 	State2.shifts = shift;
 7571              		.loc 1 95 2 view .LVU2390
 7572              	.LBB875:
 7573              	.LBI872:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 7574              		.loc 1 86 13 view .LVU2391
 7575              	.LBB874:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7576              		.loc 1 87 2 view .LVU2392
  88:src/keys.c    **** }
 7577              		.loc 1 88 2 view .LVU2393
  88:src/keys.c    **** }
 7578              		.loc 1 88 52 is_stmt 0 view .LVU2394
 7579 0bae 8346     		mov	fp, r0
 7580 0bb0 08B9     		cbnz	r0, .L654
 7581 0bb2 98F810B0 		ldrb	fp, [r8, #16]	@ zero_extendqisi2
 7582              	.L654:
 7583              	.LVL633:
ARM GAS  /tmp/cccKVeLo.s 			page 229


  88:src/keys.c    **** }
 7584              		.loc 1 88 52 view .LVU2395
 7585              	.LBE874:
 7586              	.LBE875:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 7587              		.loc 1 96 2 is_stmt 1 view .LVU2396
 7588              	.LBE876:
 7589              	.LBE879:
 7590              	.LBE883:
1293:src/keys.c    **** #ifdef DM42
 7591              		.loc 1 1293 15 is_stmt 0 view .LVU2397
 7592 0bb6 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 7593              	.LBB884:
 7594              	.LBB880:
 7595              	.LBB877:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 7596              		.loc 1 96 16 view .LVU2398
 7597 0bba 0023     		movs	r3, #0
 7598              	.LBE877:
 7599              	.LBE880:
 7600              	.LBE884:
1291:src/keys.c    **** 
 7601              		.loc 1 1291 23 view .LVU2399
 7602 0bbc ABF1010A 		sub	r10, fp, #1
 7603              	.LVL634:
1293:src/keys.c    **** #ifdef DM42
 7604              		.loc 1 1293 15 view .LVU2400
 7605 0bc0 63F38202 		bfi	r2, r3, #2, #1
1291:src/keys.c    **** 
 7606              		.loc 1 1291 23 view .LVU2401
 7607 0bc4 BAFA8AFA 		clz	r10, r10
1293:src/keys.c    **** #ifdef DM42
 7608              		.loc 1 1293 15 view .LVU2402
 7609 0bc8 88F81520 		strb	r2, [r8, #21]
 7610              	.LBB885:
 7611              	.LBB881:
 7612              	.LBB878:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 7613              		.loc 1 96 16 view .LVU2403
 7614 0bcc 88F81030 		strb	r3, [r8, #16]
  98:src/keys.c    **** }
 7615              		.loc 1 98 2 is_stmt 1 view .LVU2404
 7616              	.LVL635:
  98:src/keys.c    **** }
 7617              		.loc 1 98 2 is_stmt 0 view .LVU2405
 7618              	.LBE878:
 7619              	.LBE881:
 7620              	.LBE885:
1291:src/keys.c    **** 
 7621              		.loc 1 1291 2 is_stmt 1 view .LVU2406
1291:src/keys.c    **** 
 7622              		.loc 1 1291 23 is_stmt 0 view .LVU2407
 7623 0bd0 4FEA5A1A 		lsr	r10, r10, #5
 7624              	.LVL636:
1293:src/keys.c    **** #ifdef DM42
 7625              		.loc 1 1293 2 is_stmt 1 view .LVU2408
1295:src/keys.c    **** 	display_current_menu ();
ARM GAS  /tmp/cccKVeLo.s 			page 230


 7626              		.loc 1 1295 2 view .LVU2409
 7627 0bd4 FFF7FEFF 		bl	set_last_menu
 7628              	.LVL637:
1296:src/keys.c    **** #endif
 7629              		.loc 1 1296 2 view .LVU2410
 7630 0bd8 FFF7FEFF 		bl	display_current_menu
 7631              	.LVL638:
1298:src/keys.c    **** 	
 7632              		.loc 1 1298 2 view .LVU2411
1298:src/keys.c    **** 	
 7633              		.loc 1 1298 5 is_stmt 0 view .LVU2412
 7634 0bdc BBF1000F 		cmp	fp, #0
 7635 0be0 09D0     		beq	.L657
1300:src/keys.c    **** 		return op_map[c - K10][f];
 7636              		.loc 1 1300 2 is_stmt 1 view .LVU2413
1300:src/keys.c    **** 		return op_map[c - K10][f];
 7637              		.loc 1 1300 15 is_stmt 0 view .LVU2414
 7638 0be2 A31F     		subs	r3, r4, #6
1300:src/keys.c    **** 		return op_map[c - K10][f];
 7639              		.loc 1 1300 5 view .LVU2415
 7640 0be4 DAB2     		uxtb	r2, r3
 7641 0be6 022A     		cmp	r2, #2
 7642 0be8 40F23F81 		bls	.L1157
1303:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7643              		.loc 1 1303 2 is_stmt 1 view .LVU2416
1303:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7644              		.loc 1 1303 15 is_stmt 0 view .LVU2417
 7645 0bec 0E3C     		subs	r4, r4, #14
 7646              	.LVL639:
1303:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7647              		.loc 1 1303 5 view .LVU2418
 7648 0bee E3B2     		uxtb	r3, r4
 7649 0bf0 012B     		cmp	r3, #1
 7650 0bf2 40F22F82 		bls	.L1158
 7651              	.LVL640:
 7652              	.L657:
1303:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7653              		.loc 1 1303 5 view .LVU2419
 7654 0bf6 3268     		ldr	r2, [r6]
1298:src/keys.c    **** 	
 7655              		.loc 1 1298 31 view .LVU2420
 7656 0bf8 4FF0330B 		mov	fp, #51
 7657              	.LVL641:
1298:src/keys.c    **** 	
 7658              		.loc 1 1298 31 view .LVU2421
 7659 0bfc FFF759BA 		b	.L565
 7660              	.LVL642:
 7661              	.L1125:
1298:src/keys.c    **** 	
 7662              		.loc 1 1298 31 view .LVU2422
 7663              	.LBE891:
 7664              	.LBE895:
 7665              	.LBB896:
 7666              	.LBB666:
 266:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 7667              		.loc 1 266 16 view .LVU2423
 7668 0c00 BAF1030F 		cmp	r10, #3
ARM GAS  /tmp/cccKVeLo.s 			page 231


 7669 0c04 00F03E81 		beq	.L1159
 269:src/keys.c    ****     /*
 7670              		.loc 1 269 3 is_stmt 1 view .LVU2424
 269:src/keys.c    ****     /*
 7671              		.loc 1 269 23 is_stmt 0 view .LVU2425
 7672 0c08 444A     		ldr	r2, .L1208+16
 7673 0c0a D8F81430 		ldr	r3, [r8, #20]
 269:src/keys.c    ****     /*
 7674              		.loc 1 269 6 view .LVU2426
 7675 0c0e 1A42     		tst	r2, r3
 7676 0c10 3FF449AB 		beq	.L671
 7677              	.L663:
 7678              	.LBB661:
 338:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 7679              		.loc 1 338 5 is_stmt 1 view .LVU2427
 362:src/keys.c    **** 
 7680              		.loc 1 362 5 view .LVU2428
 367:src/keys.c    ****     col = smap[shift];
 7681              		.loc 1 367 5 view .LVU2429
 7682              	.LVL643:
 368:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7683              		.loc 1 368 5 view .LVU2430
 368:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7684              		.loc 1 368 15 is_stmt 0 view .LVU2431
 7685 0c14 424A     		ldr	r2, .L1208+20
 367:src/keys.c    ****     col = smap[shift];
 7686              		.loc 1 367 8 view .LVU2432
 7687 0c16 434B     		ldr	r3, .L1208+24
 368:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7688              		.loc 1 368 9 view .LVU2433
 7689 0c18 12F80AC0 		ldrb	ip, [r2, r10]	@ zero_extendqisi2
 7690              	.LVL644:
 369:src/keys.c    ****   }
 7691              		.loc 1 369 5 is_stmt 1 view .LVU2434
 369:src/keys.c    ****   }
 7692              		.loc 1 369 9 is_stmt 0 view .LVU2435
 7693 0c1c 0822     		movs	r2, #8
 7694 0c1e FFF715BB 		b	.L666
 7695              	.LVL645:
 7696              	.L633:
 369:src/keys.c    ****   }
 7697              		.loc 1 369 9 view .LVU2436
 7698              	.LBE661:
 7699              	.LBE666:
 7700              	.LBE896:
 7701              	.LBB897:
 7702              	.LBB796:
1954:src/keys.c    **** 		// digit 2..9, -> or .
 7703              		.loc 1 1954 7 is_stmt 1 view .LVU2437
1954:src/keys.c    **** 		// digit 2..9, -> or .
 7704              		.loc 1 1954 10 is_stmt 0 view .LVU2438
 7705 0c22 092A     		cmp	r2, #9
 7706 0c24 47D9     		bls	.L635
 7707              	.L627:
1954:src/keys.c    **** 		// digit 2..9, -> or .
 7708              		.loc 1 1954 19 view .LVU2439
 7709 0c26 2C2C     		cmp	r4, #44
ARM GAS  /tmp/cccKVeLo.s 			page 232


 7710 0c28 45D0     		beq	.L635
1954:src/keys.c    **** 		// digit 2..9, -> or .
 7711              		.loc 1 1954 35 view .LVU2440
 7712 0c2a 262C     		cmp	r4, #38
 7713 0c2c 43D0     		beq	.L635
1960:src/keys.c    **** 	case K11:					// tests vs register
 7714              		.loc 1 1960 2 is_stmt 1 view .LVU2441
 7715 0c2e 0C2C     		cmp	r4, #12
 7716 0c30 00F03B81 		beq	.L638
 7717 0c34 102C     		cmp	r4, #16
 7718 0c36 00F04881 		beq	.L639
 7719 0c3a 072C     		cmp	r4, #7
 7720 0c3c 00F03581 		beq	.L638
 7721              	.L630:
1974:src/keys.c    **** 	State2.cmplx = cmpx;
 7722              		.loc 1 1974 2 view .LVU2442
1975:src/keys.c    **** 	return STATE_UNFINISHED;
 7723              		.loc 1 1975 15 is_stmt 0 view .LVU2443
 7724 0c40 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
 7725 0c44 3268     		ldr	r2, [r6]
1974:src/keys.c    **** 	State2.cmplx = cmpx;
 7726              		.loc 1 1974 14 view .LVU2444
 7727 0c46 88F80FB0 		strb	fp, [r8, #15]
1975:src/keys.c    **** 	return STATE_UNFINISHED;
 7728              		.loc 1 1975 2 is_stmt 1 view .LVU2445
1975:src/keys.c    **** 	return STATE_UNFINISHED;
 7729              		.loc 1 1975 15 is_stmt 0 view .LVU2446
 7730 0c4a 6EF34103 		bfi	r3, lr, #1, #1
 7731 0c4e 88F81530 		strb	r3, [r8, #21]
1976:src/keys.c    **** }
 7732              		.loc 1 1976 2 is_stmt 1 view .LVU2447
1976:src/keys.c    **** }
 7733              		.loc 1 1976 9 is_stmt 0 view .LVU2448
 7734 0c52 4FF0330B 		mov	fp, #51
 7735              	.LVL646:
1976:src/keys.c    **** }
 7736              		.loc 1 1976 9 view .LVU2449
 7737 0c56 FFF72CBA 		b	.L565
 7738              	.LVL647:
 7739              	.L1152:
1976:src/keys.c    **** }
 7740              		.loc 1 1976 9 view .LVU2450
 7741 0c5a 3268     		ldr	r2, [r6]
 7742              	.LBE796:
 7743              	.LBE897:
 7744              	.LBE1236:
 7745              	.LBE1310:
2977:src/keys.c    ****   if (was_paused && Pause == 0)
 7746              		.loc 1 2977 7 view .LVU2451
 7747 0c5c 0025     		movs	r5, #0
 7748              	.LBB1311:
3152:src/keys.c    **** 	}
 7749              		.loc 1 3152 6 view .LVU2452
 7750 0c5e 4FF0330B 		mov	fp, #51
 7751 0c62 FFF726BA 		b	.L565
 7752              	.LVL648:
 7753              	.L1142:
ARM GAS  /tmp/cccKVeLo.s 			page 233


3152:src/keys.c    **** 	}
 7754              		.loc 1 3152 6 view .LVU2453
 7755              	.LBE1311:
 7756              	.LBB1312:
 7757              	.LBB1237:
 7758              	.LBB898:
 7759              	.LBB816:
1342:src/keys.c    **** 	}
 7760              		.loc 1 1342 3 is_stmt 1 view .LVU2454
1342:src/keys.c    **** 	}
 7761              		.loc 1 1342 8 is_stmt 0 view .LVU2455
 7762 0c66 FFF7FEFF 		bl	gtodot_digit
 7763              	.LVL649:
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7764              		.loc 1 1391 2 is_stmt 1 view .LVU2456
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7765              		.loc 1 1391 5 is_stmt 0 view .LVU2457
 7766 0c6a 0028     		cmp	r0, #0
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7767              		.loc 1 1391 5 view .LVU2458
 7768 0c6c 70DA     		bge	.L598
 7769 0c6e 3268     		ldr	r2, [r6]
 7770              	.LBE816:
 7771              	.LBE898:
2857:src/keys.c    **** 
 7772              		.loc 1 2857 10 view .LVU2459
 7773 0c70 4FF0330B 		mov	fp, #51
 7774 0c74 FFF71DBA 		b	.L565
 7775              	.LVL650:
 7776              	.L628:
 7777              	.LBB899:
 7778              	.LBB797:
1946:src/keys.c    **** 		// Special 0
 7779              		.loc 1 1946 7 is_stmt 1 view .LVU2460
1946:src/keys.c    **** 		// Special 0
 7780              		.loc 1 1946 10 is_stmt 0 view .LVU2461
 7781 0c78 002A     		cmp	r2, #0
 7782 0c7a 41F01481 		bne	.L631
1948:src/keys.c    **** 	}
 7783              		.loc 1 1948 3 is_stmt 1 view .LVU2462
1948:src/keys.c    **** 	}
 7784              		.loc 1 1948 18 is_stmt 0 view .LVU2463
 7785 0c7e BEF1000F 		cmp	lr, #0
 7786 0c82 14BF     		ite	ne
 7787 0c84 2523     		movne	r3, #37
 7788 0c86 1723     		moveq	r3, #23
1948:src/keys.c    **** 	}
 7789              		.loc 1 1948 47 view .LVU2464
 7790 0c88 9B44     		add	fp, fp, r3
 7791              	.LVL651:
1948:src/keys.c    **** 	}
 7792              		.loc 1 1948 47 view .LVU2465
 7793 0c8a FFF7D5BB 		b	.L595
 7794              	.LVL652:
 7795              	.L1127:
1948:src/keys.c    **** 	}
 7796              		.loc 1 1948 47 view .LVU2466
ARM GAS  /tmp/cccKVeLo.s 			page 234


 7797              	.LBE797:
 7798              	.LBE899:
 7799              	.LBB900:
 7800              	.LBB667:
 377:src/keys.c    ****       break;
 7801              		.loc 1 377 7 is_stmt 1 view .LVU2467
 377:src/keys.c    ****       break;
 7802              		.loc 1 377 11 is_stmt 0 view .LVU2468
 7803 0c8e 6344     		add	r3, r3, ip
 7804              	.LVL653:
 377:src/keys.c    ****       break;
 7805              		.loc 1 377 11 view .LVU2469
 7806 0c90 93F801B0 		ldrb	fp, [r3, #1]	@ zero_extendqisi2
 7807              	.LVL654:
 378:src/keys.c    ****     }
 7808              		.loc 1 378 7 is_stmt 1 view .LVU2470
 381:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7809              		.loc 1 381 3 view .LVU2471
 381:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7810              		.loc 1 381 6 is_stmt 0 view .LVU2472
 7811 0c94 0B07     		lsls	r3, r1, #28
 7812 0c96 7CD5     		bpl	.L1160
 381:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7813              		.loc 1 381 20 view .LVU2473
 7814 0c98 ABF10B03 		sub	r3, fp, #11
 7815 0c9c 042B     		cmp	r3, #4
 7816 0c9e 7DD8     		bhi	.L677
 7817              	.LVL655:
 7818              	.L661:
 381:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7819              		.loc 1 381 20 view .LVU2474
 7820              	.LBE667:
 7821              	.LBE900:
2898:src/keys.c    **** 			return STATE_UNFINISHED;
 7822              		.loc 1 2898 3 is_stmt 1 view .LVU2475
2898:src/keys.c    **** 			return STATE_UNFINISHED;
 7823              		.loc 1 2898 7 is_stmt 0 view .LVU2476
 7824 0ca0 FFF7FEFF 		bl	is_bad_cmdline
 7825              	.LVL656:
2898:src/keys.c    **** 			return STATE_UNFINISHED;
 7826              		.loc 1 2898 6 view .LVU2477
 7827 0ca4 0446     		mov	r4, r0
 7828 0ca6 0028     		cmp	r0, #0
 7829 0ca8 00F01681 		beq	.L676
 7830 0cac 3268     		ldr	r2, [r6]
2899:src/keys.c    **** 		init_cat( CATALOGUE_NONE );
 7831              		.loc 1 2899 11 view .LVU2478
 7832 0cae 4FF0330B 		mov	fp, #51
 7833 0cb2 FFF7FEB9 		b	.L565
 7834              	.LVL657:
 7835              	.L635:
 7836              	.LBB901:
 7837              	.LBB798:
1956:src/keys.c    **** 		return process_arg(c);
 7838              		.loc 1 1956 3 is_stmt 1 view .LVU2479
 7839              	.LBB791:
 7840              	.LBI791:
ARM GAS  /tmp/cccKVeLo.s 			page 235


 506:src/keys.c    **** 	if (is_bad_cmdline())
 7841              		.loc 1 506 13 view .LVU2480
 7842              	.LBB792:
 507:src/keys.c    **** 		return;
 7843              		.loc 1 507 2 view .LVU2481
 507:src/keys.c    **** 		return;
 7844              		.loc 1 507 6 is_stmt 0 view .LVU2482
 7845 0cb6 FFF7FEFF 		bl	is_bad_cmdline
 7846              	.LVL658:
 507:src/keys.c    **** 		return;
 7847              		.loc 1 507 5 view .LVU2483
 7848 0cba 18B9     		cbnz	r0, .L637
 7849 0cbc 5FFA8AF0 		uxtb	r0, r10
 7850 0cc0 FFF7FEFF 		bl	init_arg.part.0
 7851              	.LVL659:
 7852              	.L637:
 507:src/keys.c    **** 		return;
 7853              		.loc 1 507 5 view .LVU2484
 7854              	.LBE792:
 7855              	.LBE791:
1957:src/keys.c    **** 	}
 7856              		.loc 1 1957 3 is_stmt 1 view .LVU2485
1957:src/keys.c    **** 	}
 7857              		.loc 1 1957 10 is_stmt 0 view .LVU2486
 7858 0cc4 2046     		mov	r0, r4
 7859 0cc6 FFF7FEFF 		bl	process_arg
 7860              	.LVL660:
 7861 0cca 8346     		mov	fp, r0
 7862              	.LVL661:
1957:src/keys.c    **** 	}
 7863              		.loc 1 1957 10 view .LVU2487
 7864 0ccc FFF7B4BB 		b	.L595
 7865              	.LVL662:
 7866              	.L1121:
1957:src/keys.c    **** 	}
 7867              		.loc 1 1957 10 view .LVU2488
 7868              	.LBE798:
 7869              	.LBE901:
2872:src/keys.c    **** 		return STATE_UNFINISHED;
 7870              		.loc 1 2872 3 is_stmt 1 view .LVU2489
 7871              	.LBB902:
 7872              	.LBI902:
 111:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 7873              		.loc 1 111 13 view .LVU2490
 7874              	.LBB903:
 112:src/keys.c    **** }
 7875              		.loc 1 112 2 view .LVU2491
 112:src/keys.c    **** }
 7876              		.loc 1 112 16 is_stmt 0 view .LVU2492
 7877 0cd0 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 7878 0cd4 3268     		ldr	r2, [r6]
 7879 0cd6 013B     		subs	r3, r3, #1
 7880 0cd8 18BF     		it	ne
 7881 0cda 0123     		movne	r3, #1
 7882 0cdc 88F81030 		strb	r3, [r8, #16]
 7883              	.LVL663:
 112:src/keys.c    **** }
ARM GAS  /tmp/cccKVeLo.s 			page 236


 7884              		.loc 1 112 16 view .LVU2493
 7885              	.LBE903:
 7886              	.LBE902:
2873:src/keys.c    **** 	}
 7887              		.loc 1 2873 3 is_stmt 1 view .LVU2494
2873:src/keys.c    **** 	}
 7888              		.loc 1 2873 10 is_stmt 0 view .LVU2495
 7889 0ce0 4FF0330B 		mov	fp, #51
 7890 0ce4 FFF7E5B9 		b	.L565
 7891              	.LVL664:
 7892              	.L618:
2873:src/keys.c    **** 	}
 7893              		.loc 1 2873 10 view .LVU2496
 7894 0ce8 3268     		ldr	r2, [r6]
 7895              	.LBB904:
 7896              	.LBB840:
1273:src/keys.c    **** }
 7897              		.loc 1 1273 9 view .LVU2497
 7898 0cea 4FF0330B 		mov	fp, #51
 7899 0cee FFF7E0B9 		b	.L565
 7900              	.LVL665:
 7901              	.L1122:
1273:src/keys.c    **** }
 7902              		.loc 1 1273 9 view .LVU2498
 7903              	.LBE840:
 7904              	.LBE904:
2876:src/keys.c    **** 		return STATE_UNFINISHED;
 7905              		.loc 1 2876 3 is_stmt 1 view .LVU2499
 7906              	.LBB905:
 7907              	.LBI905:
 111:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 7908              		.loc 1 111 13 view .LVU2500
 7909              	.LBB906:
 112:src/keys.c    **** }
 7910              		.loc 1 112 2 view .LVU2501
 112:src/keys.c    **** }
 7911              		.loc 1 112 16 is_stmt 0 view .LVU2502
 7912 0cf2 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 7913 0cf6 3268     		ldr	r2, [r6]
 7914 0cf8 0229     		cmp	r1, #2
 7915 0cfa 18BF     		it	ne
 7916 0cfc 0223     		movne	r3, #2
 7917 0cfe 88F81030 		strb	r3, [r8, #16]
 7918              	.LVL666:
 112:src/keys.c    **** }
 7919              		.loc 1 112 16 view .LVU2503
 7920              	.LBE906:
 7921              	.LBE905:
2877:src/keys.c    **** 	}
 7922              		.loc 1 2877 3 is_stmt 1 view .LVU2504
2877:src/keys.c    **** 	}
 7923              		.loc 1 2877 10 is_stmt 0 view .LVU2505
 7924 0d02 4FF0330B 		mov	fp, #51
 7925 0d06 FFF7D4B9 		b	.L565
 7926              	.L1209:
 7927 0d0a 00BF     		.align	2
 7928              	.L1208:
ARM GAS  /tmp/cccKVeLo.s 			page 237


 7929 0d0c 00000000 		.word	.LANCHOR1
 7930 0d10 00000000 		.word	.LANCHOR0
 7931 0d14 00000000 		.word	.LANCHOR13
 7932 0d18 00000000 		.word	main_ram
 7933 0d1c 00080800 		.word	526336
 7934 0d20 00000000 		.word	.LANCHOR16
 7935 0d24 00000000 		.word	.LANCHOR10
 7936 0d28 00000000 		.word	StateWhileOn
 7937              	.L1123:
2880:src/keys.c    **** 		State2.arrow = 0;
 7938              		.loc 1 2880 3 is_stmt 1 view .LVU2506
 7939              	.LVL667:
 7940              	.LBB907:
 7941              	.LBI907:
 111:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 7942              		.loc 1 111 13 view .LVU2507
 7943              	.LBB908:
 112:src/keys.c    **** }
 7944              		.loc 1 112 2 view .LVU2508
 112:src/keys.c    **** }
 7945              		.loc 1 112 16 is_stmt 0 view .LVU2509
 7946 0d2c 98F81040 		ldrb	r4, [r8, #16]	@ zero_extendqisi2
 7947              	.LVL668:
 112:src/keys.c    **** }
 7948              		.loc 1 112 16 view .LVU2510
 7949 0d30 3268     		ldr	r2, [r6]
 7950 0d32 032C     		cmp	r4, #3
 7951              	.LBE908:
 7952              	.LBE907:
2881:src/keys.c    **** 		return STATE_UNFINISHED;
 7953              		.loc 1 2881 16 view .LVU2511
 7954 0d34 60F38201 		bfi	r1, r0, #2, #1
 7955              	.LBB911:
 7956              	.LBB909:
 112:src/keys.c    **** }
 7957              		.loc 1 112 16 view .LVU2512
 7958 0d38 18BF     		it	ne
 7959 0d3a 0323     		movne	r3, #3
 7960              	.LBE909:
 7961              	.LBE911:
2881:src/keys.c    **** 		return STATE_UNFINISHED;
 7962              		.loc 1 2881 16 view .LVU2513
 7963 0d3c 88F81510 		strb	r1, [r8, #21]
 7964              	.LBB912:
 7965              	.LBB910:
 112:src/keys.c    **** }
 7966              		.loc 1 112 16 view .LVU2514
 7967 0d40 88F81030 		strb	r3, [r8, #16]
 7968              	.LVL669:
 112:src/keys.c    **** }
 7969              		.loc 1 112 16 view .LVU2515
 7970              	.LBE910:
 7971              	.LBE912:
2881:src/keys.c    **** 		return STATE_UNFINISHED;
 7972              		.loc 1 2881 3 is_stmt 1 view .LVU2516
2882:src/keys.c    **** 	}
 7973              		.loc 1 2882 3 view .LVU2517
ARM GAS  /tmp/cccKVeLo.s 			page 238


2882:src/keys.c    **** 	}
 7974              		.loc 1 2882 10 is_stmt 0 view .LVU2518
 7975 0d44 4FF0330B 		mov	fp, #51
 7976 0d48 FFF7B3B9 		b	.L565
 7977              	.LVL670:
 7978              	.L1149:
 7979              	.LBB913:
 7980              	.LBB817:
1362:src/keys.c    **** 	}
 7981              		.loc 1 1362 3 is_stmt 1 view .LVU2519
1362:src/keys.c    **** 	}
 7982              		.loc 1 1362 6 is_stmt 0 view .LVU2520
 7983 0d4c B8F80800 		ldrh	r0, [r8, #8]
 7984              	.LVL671:
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7985              		.loc 1 1391 2 is_stmt 1 view .LVU2521
 7986              	.L598:
1392:src/keys.c    **** fin:		set_pc(rawpc);
 7987              		.loc 1 1392 3 view .LVU2522
1392:src/keys.c    **** fin:		set_pc(rawpc);
 7988              		.loc 1 1392 11 is_stmt 0 view .LVU2523
 7989 0d50 FFF7FEFF 		bl	find_user_pc
 7990              	.LVL672:
 7991              	.L607:
1393:src/keys.c    **** fin2:		State2.gtodot = 0;
 7992              		.loc 1 1393 7 is_stmt 1 view .LVU2524
 7993 0d54 FFF7FEFF 		bl	set_pc
 7994              	.LVL673:
 7995              	.L611:
1394:src/keys.c    **** 		State2.digval = 0;
 7996              		.loc 1 1394 8 view .LVU2525
1394:src/keys.c    **** 		State2.digval = 0;
 7997              		.loc 1 1394 22 is_stmt 0 view .LVU2526
 7998 0d58 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 7999 0d5c 3268     		ldr	r2, [r6]
1395:src/keys.c    **** 		State2.numdigit = 0;
 8000              		.loc 1 1395 17 view .LVU2527
 8001 0d5e 0023     		movs	r3, #0
1394:src/keys.c    **** 		State2.digval = 0;
 8002              		.loc 1 1394 22 view .LVU2528
 8003 0d60 6FF30001 		bfc	r1, #0, #1
 8004 0d64 88F81510 		strb	r1, [r8, #21]
1395:src/keys.c    **** 		State2.numdigit = 0;
 8005              		.loc 1 1395 3 is_stmt 1 view .LVU2529
1395:src/keys.c    **** 		State2.numdigit = 0;
 8006              		.loc 1 1395 17 is_stmt 0 view .LVU2530
 8007 0d68 A8F80830 		strh	r3, [r8, #8]	@ movhi
1396:src/keys.c    **** 	}
 8008              		.loc 1 1396 3 is_stmt 1 view .LVU2531
1396:src/keys.c    **** 	}
 8009              		.loc 1 1396 19 is_stmt 0 view .LVU2532
 8010 0d6c 88F80B30 		strb	r3, [r8, #11]
 8011              	.LBE817:
 8012              	.LBE913:
2857:src/keys.c    **** 
 8013              		.loc 1 2857 10 view .LVU2533
 8014 0d70 4FF0330B 		mov	fp, #51
ARM GAS  /tmp/cccKVeLo.s 			page 239


 8015 0d74 FFF79DB9 		b	.L565
 8016              	.LVL674:
 8017              	.L1153:
 8018              	.LBB914:
 8019              	.LBB859:
2498:src/keys.c    **** 			n = max;
 8020              		.loc 1 2498 3 is_stmt 1 view .LVU2534
2498:src/keys.c    **** 			n = max;
 8021              		.loc 1 2498 6 is_stmt 0 view .LVU2535
 8022 0d78 191F     		subs	r1, r3, #4
 8023              	.LVL675:
2498:src/keys.c    **** 			n = max;
 8024              		.loc 1 2498 6 view .LVU2536
 8025 0d7a 012B     		cmp	r3, #1
 8026 0d7c 18BF     		it	ne
 8027 0d7e 0A46     		movne	r2, r1
 8028              	.LVL676:
2498:src/keys.c    **** 			n = max;
 8029              		.loc 1 2498 6 view .LVU2537
 8030 0d80 0AE7     		b	.L644
 8031              	.LVL677:
 8032              	.L1143:
2498:src/keys.c    **** 			n = max;
 8033              		.loc 1 2498 6 view .LVU2538
 8034              	.LBE859:
 8035              	.LBE914:
 8036              	.LBB915:
 8037              	.LBB818:
1345:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8038              		.loc 1 1345 44 is_stmt 1 view .LVU2539
1345:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8039              		.loc 1 1345 52 is_stmt 0 view .LVU2540
 8040 0d82 0120     		movs	r0, #1
 8041 0d84 FFF7FEFF 		bl	gtodot_digit
 8042              	.LVL678:
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8043              		.loc 1 1391 2 is_stmt 1 view .LVU2541
 8044              	.LBE818:
 8045              	.LBE915:
2857:src/keys.c    **** 
 8046              		.loc 1 2857 10 is_stmt 0 view .LVU2542
 8047 0d88 4FF0330B 		mov	fp, #51
 8048 0d8c 3268     		ldr	r2, [r6]
 8049 0d8e FFF790B9 		b	.L565
 8050              	.LVL679:
 8051              	.L1160:
2897:src/keys.c    **** 		if (is_bad_cmdline())
 8052              		.loc 1 2897 2 is_stmt 1 view .LVU2543
2897:src/keys.c    **** 		if (is_bad_cmdline())
 8053              		.loc 1 2897 5 is_stmt 0 view .LVU2544
 8054 0d92 BBF1000F 		cmp	fp, #0
 8055 0d96 83D1     		bne	.L661
 8056 0d98 FFF788BA 		b	.L675
 8057              	.LVL680:
 8058              	.L677:
2909:src/keys.c    **** 
 8059              		.loc 1 2909 3 is_stmt 1 view .LVU2545
ARM GAS  /tmp/cccKVeLo.s 			page 240


 8060              	.LBB916:
 8061              	.LBI916:
2389:src/keys.c    **** 	enum shifts shift = reset_shift();
 8062              		.loc 1 2389 12 view .LVU2546
 8063              	.LBB917:
2390:src/keys.c    **** 	unsigned int ch = 0;
 8064              		.loc 1 2390 2 view .LVU2547
 8065              	.LBB918:
 8066              	.LBI918:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 8067              		.loc 1 104 13 view .LVU2548
 8068              	.LBE918:
 8069              	.LBE917:
 8070              	.LBE916:
 8071              	.LBE1237:
 8072              	.LBE1312:
 105:src/keys.c    **** }
 8073              		.loc 1 105 2 view .LVU2549
 8074              	.LBB1313:
 8075              	.LBB1238:
 8076              	.LBB955:
 8077              	.LBB946:
 8078              	.LBB925:
 8079              	.LBB919:
 8080              	.LBI919:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 8081              		.loc 1 94 20 view .LVU2550
 8082              	.LBB920:
  95:src/keys.c    **** 	State2.shifts = shift;
 8083              		.loc 1 95 2 view .LVU2551
 8084              	.LBB921:
 8085              	.LBI921:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 8086              		.loc 1 86 13 view .LVU2552
 8087              	.LBB922:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8088              		.loc 1 87 2 view .LVU2553
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8089              		.loc 1 87 18 is_stmt 0 view .LVU2554
 8090 0d9c FFF7FEFF 		bl	shift_down
 8091              	.LVL681:
  88:src/keys.c    **** }
 8092              		.loc 1 88 2 is_stmt 1 view .LVU2555
  88:src/keys.c    **** }
 8093              		.loc 1 88 52 is_stmt 0 view .LVU2556
 8094 0da0 0146     		mov	r1, r0
 8095 0da2 08B9     		cbnz	r0, .L674
 8096 0da4 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 8097              	.L674:
 8098              	.LVL682:
  88:src/keys.c    **** }
 8099              		.loc 1 88 52 view .LVU2557
 8100              	.LBE922:
 8101              	.LBE921:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8102              		.loc 1 96 2 is_stmt 1 view .LVU2558
 8103              	.LBE920:
ARM GAS  /tmp/cccKVeLo.s 			page 241


 8104              	.LBE919:
 8105              	.LBE925:
2394:src/keys.c    **** 		// Alpha catalogue from within multi character command
 8106              		.loc 1 2394 5 is_stmt 0 view .LVU2559
 8107 0da8 98F80E00 		ldrb	r0, [r8, #14]	@ zero_extendqisi2
 8108              	.LBB926:
 8109              	.LBB924:
 8110              	.LBB923:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8111              		.loc 1 96 16 view .LVU2560
 8112 0dac 0023     		movs	r3, #0
 8113 0dae 88F81030 		strb	r3, [r8, #16]
  98:src/keys.c    **** }
 8114              		.loc 1 98 2 is_stmt 1 view .LVU2561
 8115              	.LVL683:
  98:src/keys.c    **** }
 8116              		.loc 1 98 2 is_stmt 0 view .LVU2562
 8117              	.LBE923:
 8118              	.LBE924:
 8119              	.LBE926:
2391:src/keys.c    **** 	unsigned int opcode;
 8120              		.loc 1 2391 2 is_stmt 1 view .LVU2563
2392:src/keys.c    **** 
 8121              		.loc 1 2392 2 view .LVU2564
2394:src/keys.c    **** 		// Alpha catalogue from within multi character command
 8122              		.loc 1 2394 2 view .LVU2565
2394:src/keys.c    **** 		// Alpha catalogue from within multi character command
 8123              		.loc 1 2394 5 is_stmt 0 view .LVU2566
 8124 0db2 0028     		cmp	r0, #0
 8125 0db4 40F0BA83 		bne	.L1161
2403:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
 8126              		.loc 1 2403 2 is_stmt 1 view .LVU2567
 8127 0db8 102C     		cmp	r4, #16
 8128 0dba 00F0F484 		beq	.L681
 8129 0dbe 242C     		cmp	r4, #36
 8130 0dc0 00F0D684 		beq	.L682
 8131 0dc4 0C2C     		cmp	r4, #12
 8132 0dc6 00F00B85 		beq	.L1162
 8133              	.L683:
2436:src/keys.c    **** 	if (ch == 0)
 8134              		.loc 1 2436 2 view .LVU2568
 8135              	.LBB927:
 8136              	.LBB928:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 8137              		.loc 1 439 6 is_stmt 0 view .LVU2569
 8138 0dca 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 8139              	.LVL684:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 8140              		.loc 1 439 6 view .LVU2570
 8141              	.LBE928:
 8142              	.LBI927:
 389:src/keys.c    **** {
 8143              		.loc 1 389 12 is_stmt 1 view .LVU2571
 8144              	.LBB933:
 391:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 8145              		.loc 1 391 2 view .LVU2572
 439:src/keys.c    **** 		if (shift == SHIFT_N)
ARM GAS  /tmp/cccKVeLo.s 			page 242


 8146              		.loc 1 439 2 view .LVU2573
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 8147              		.loc 1 439 5 is_stmt 0 view .LVU2574
 8148 0dce DB06     		lsls	r3, r3, #27
 8149 0dd0 03D5     		bpl	.L687
 440:src/keys.c    **** 			shift = SHIFT_LC_N;
 8150              		.loc 1 440 3 is_stmt 1 view .LVU2575
 440:src/keys.c    **** 			shift = SHIFT_LC_N;
 8151              		.loc 1 440 6 is_stmt 0 view .LVU2576
 8152 0dd2 0029     		cmp	r1, #0
 8153 0dd4 40F08C86 		bne	.L1163
 441:src/keys.c    **** 		else if (shift == SHIFT_G)
 8154              		.loc 1 441 10 view .LVU2577
 8155 0dd8 0421     		movs	r1, #4
 8156              	.LVL685:
 8157              	.L687:
 445:src/keys.c    **** }
 8158              		.loc 1 445 2 is_stmt 1 view .LVU2578
 8159              	.LBB929:
 8160              	.LBI929:
 121:src/keys.c    **** {
 8161              		.loc 1 121 12 view .LVU2579
 8162              	.LBB930:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8163              		.loc 1 123 2 view .LVU2580
 133:src/keys.c    **** }
 8164              		.loc 1 133 2 view .LVU2581
 133:src/keys.c    **** }
 8165              		.loc 1 133 23 is_stmt 0 view .LVU2582
 8166 0dda C44B     		ldr	r3, .L1210
 8167              	.LBE930:
 8168              	.LBE929:
 445:src/keys.c    **** }
 8169              		.loc 1 445 49 view .LVU2583
 8170 0ddc C44A     		ldr	r2, .L1210+4
 8171              	.LBB932:
 8172              	.LBB931:
 133:src/keys.c    **** }
 8173              		.loc 1 133 23 view .LVU2584
 8174 0dde 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 8175              	.LBE931:
 8176              	.LBE932:
 445:src/keys.c    **** }
 8177              		.loc 1 445 49 view .LVU2585
 8178 0de0 0620     		movs	r0, #6
 8179 0de2 00FB0323 		mla	r3, r0, r3, r2
 8180              	.LBE933:
 8181              	.LBE927:
2436:src/keys.c    **** 	if (ch == 0)
 8182              		.loc 1 2436 5 view .LVU2586
 8183 0de6 585C     		ldrb	r0, [r3, r1]	@ zero_extendqisi2
 8184              	.LVL686:
2437:src/keys.c    **** 		return STATE_UNFINISHED;
 8185              		.loc 1 2437 2 is_stmt 1 view .LVU2587
2437:src/keys.c    **** 		return STATE_UNFINISHED;
 8186              		.loc 1 2437 5 is_stmt 0 view .LVU2588
 8187 0de8 0028     		cmp	r0, #0
ARM GAS  /tmp/cccKVeLo.s 			page 243


 8188 0dea 00F01886 		beq	.L1164
 8189              	.L680:
2440:src/keys.c    **** 		State2.digval = ch;
 8190              		.loc 1 2440 2 is_stmt 1 view .LVU2589
2440:src/keys.c    **** 		State2.digval = ch;
 8191              		.loc 1 2440 12 is_stmt 0 view .LVU2590
 8192 0dee 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
2440:src/keys.c    **** 		State2.digval = ch;
 8193              		.loc 1 2440 5 view .LVU2591
 8194 0df2 002B     		cmp	r3, #0
 8195 0df4 00F00986 		beq	.L1165
2444:src/keys.c    **** 		State2.digval2 = ch;
 8196              		.loc 1 2444 9 is_stmt 1 view .LVU2592
2444:src/keys.c    **** 		State2.digval2 = ch;
 8197              		.loc 1 2444 12 is_stmt 0 view .LVU2593
 8198 0df8 012B     		cmp	r3, #1
 8199 0dfa 00F0CF86 		beq	.L1166
2449:src/keys.c    **** 
 8200              		.loc 1 2449 2 is_stmt 1 view .LVU2594
 8201              	.LBB935:
 8202              	.LBI935:
2382:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 8203              		.loc 1 2382 13 view .LVU2595
 8204              	.LBB936:
2384:src/keys.c    **** 	if (! State2.alphas )
 8205              		.loc 1 2384 2 view .LVU2596
2384:src/keys.c    **** 	if (! State2.alphas )
 8206              		.loc 1 2384 15 is_stmt 0 view .LVU2597
 8207 0dfe 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2385:src/keys.c    **** 		State2.alphashift = 0;
 8208              		.loc 1 2385 6 view .LVU2598
 8209 0e02 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2384:src/keys.c    **** 	if (! State2.alphas )
 8210              		.loc 1 2384 15 view .LVU2599
 8211 0e06 6FF3C302 		bfc	r2, #3, #1
 8212 0e0a 88F81520 		strb	r2, [r8, #21]
2385:src/keys.c    **** 		State2.alphashift = 0;
 8213              		.loc 1 2385 2 is_stmt 1 view .LVU2600
2385:src/keys.c    **** 		State2.alphashift = 0;
 8214              		.loc 1 2385 5 is_stmt 0 view .LVU2601
 8215 0e0e 13F00802 		ands	r2, r3, #8
2386:src/keys.c    **** }
 8216              		.loc 1 2386 3 is_stmt 1 view .LVU2602
2386:src/keys.c    **** }
 8217              		.loc 1 2386 21 is_stmt 0 view .LVU2603
 8218 0e12 04BF     		itt	eq
 8219 0e14 62F30413 		bfieq	r3, r2, #4, #1
 8220 0e18 88F81630 		strbeq	r3, [r8, #22]
 8221              	.LVL687:
 8222              	.L686:
2386:src/keys.c    **** }
 8223              		.loc 1 2386 21 view .LVU2604
 8224              	.LBE936:
 8225              	.LBE935:
2452:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 8226              		.loc 1 2452 2 is_stmt 1 view .LVU2605
2454:src/keys.c    **** }
ARM GAS  /tmp/cccKVeLo.s 			page 244


 8227              		.loc 1 2454 2 view .LVU2606
2452:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 8228              		.loc 1 2452 21 is_stmt 0 view .LVU2607
 8229 0e1c 98F81FB0 		ldrb	fp, [r8, #31]	@ zero_extendqisi2
2453:src/keys.c    **** 	return opcode;
 8230              		.loc 1 2453 17 view .LVU2608
 8231 0e20 B8F80820 		ldrh	r2, [r8, #8]
2453:src/keys.c    **** 	return opcode;
 8232              		.loc 1 2453 34 view .LVU2609
 8233 0e24 98F80A30 		ldrb	r3, [r8, #10]	@ zero_extendqisi2
2452:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 8234              		.loc 1 2452 29 view .LVU2610
 8235 0e28 4FEA0B2B 		lsl	fp, fp, #8
2452:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 8236              		.loc 1 2452 18 view .LVU2611
 8237 0e2c 0BF5704B 		add	fp, fp, #61440
2453:src/keys.c    **** 	return opcode;
 8238              		.loc 1 2453 9 view .LVU2612
 8239 0e30 9344     		add	fp, fp, r2
2453:src/keys.c    **** 	return opcode;
 8240              		.loc 1 2453 25 view .LVU2613
 8241 0e32 0BEB034B 		add	fp, fp, r3, lsl #16
2452:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 8242              		.loc 1 2452 9 view .LVU2614
 8243 0e36 0BEB006B 		add	fp, fp, r0, lsl #24
2454:src/keys.c    **** }
 8244              		.loc 1 2454 9 view .LVU2615
 8245 0e3a FFF7FDBA 		b	.L595
 8246              	.LVL688:
 8247              	.L1144:
2454:src/keys.c    **** }
 8248              		.loc 1 2454 9 view .LVU2616
 8249              	.LBE946:
 8250              	.LBE955:
 8251              	.LBB956:
 8252              	.LBB819:
1346:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 8253              		.loc 1 1346 44 is_stmt 1 view .LVU2617
1346:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 8254              		.loc 1 1346 52 is_stmt 0 view .LVU2618
 8255 0e3e 0220     		movs	r0, #2
 8256 0e40 FFF7FEFF 		bl	gtodot_digit
 8257              	.LVL689:
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8258              		.loc 1 1391 2 is_stmt 1 view .LVU2619
 8259              	.LBE819:
 8260              	.LBE956:
2857:src/keys.c    **** 
 8261              		.loc 1 2857 10 is_stmt 0 view .LVU2620
 8262 0e44 4FF0330B 		mov	fp, #51
 8263 0e48 3268     		ldr	r2, [r6]
 8264 0e4a FFF732B9 		b	.L565
 8265              	.LVL690:
 8266              	.L629:
 8267              	.LBB957:
 8268              	.LBB799:
1944:src/keys.c    **** 	}
ARM GAS  /tmp/cccKVeLo.s 			page 245


 8269              		.loc 1 1944 3 is_stmt 1 view .LVU2621
1944:src/keys.c    **** 	}
 8270              		.loc 1 1944 10 is_stmt 0 view .LVU2622
 8271 0e4e 0AF12000 		add	r0, r10, #32
 8272 0e52 42EA0020 		orr	r0, r2, r0, lsl #8
 8273 0e56 8346     		mov	fp, r0
 8274              	.LVL691:
1944:src/keys.c    **** 	}
 8275              		.loc 1 1944 10 view .LVU2623
 8276 0e58 FFF763BB 		b	.L622
 8277              	.LVL692:
 8278              	.L1154:
1944:src/keys.c    **** 	}
 8279              		.loc 1 1944 10 view .LVU2624
 8280              	.LBE799:
 8281              	.LBE957:
 8282              	.LBB958:
 8283              	.LBB860:
2502:src/keys.c    **** 			n = -2;
 8284              		.loc 1 2502 3 is_stmt 1 view .LVU2625
2502:src/keys.c    **** 			n = -2;
 8285              		.loc 1 2502 6 is_stmt 0 view .LVU2626
 8286 0e5c 023B     		subs	r3, r3, #2
 8287              	.LVL693:
2503:src/keys.c    **** 	}
 8288              		.loc 1 2503 6 view .LVU2627
 8289 0e5e 9342     		cmp	r3, r2
 8290 0e60 D4BF     		ite	le
 8291 0e62 1A46     		movle	r2, r3
 8292              	.LVL694:
2503:src/keys.c    **** 	}
 8293              		.loc 1 2503 6 view .LVU2628
 8294 0e64 6FF00102 		mvngt	r2, #1
 8295 0e68 96E6     		b	.L644
 8296              	.LVL695:
 8297              	.L1157:
2503:src/keys.c    **** 	}
 8298              		.loc 1 2503 6 view .LVU2629
 8299              	.LBE860:
 8300              	.LBE958:
 8301              	.LBB959:
 8302              	.LBB892:
1301:src/keys.c    **** 
 8303              		.loc 1 1301 3 is_stmt 1 view .LVU2630
1301:src/keys.c    **** 
 8304              		.loc 1 1301 25 is_stmt 0 view .LVU2631
 8305 0e6a A24A     		ldr	r2, .L1210+8
 8306 0e6c 0AEB4303 		add	r3, r10, r3, lsl #1
 8307 0e70 32F813B0 		ldrh	fp, [r2, r3, lsl #1]
 8308              	.LVL696:
1301:src/keys.c    **** 
 8309              		.loc 1 1301 25 view .LVU2632
 8310 0e74 FFF7E0BA 		b	.L595
 8311              	.LVL697:
 8312              	.L913:
1301:src/keys.c    **** 
 8313              		.loc 1 1301 25 view .LVU2633
ARM GAS  /tmp/cccKVeLo.s 			page 246


 8314              	.LBE892:
 8315              	.LBE959:
 8316              	.LBB960:
 8317              	.LBB668:
 8318              	.LBB662:
 325:src/keys.c    **** #ifndef WINGUI
 8319              		.loc 1 325 8 view .LVU2634
 8320 0e78 9F4B     		ldr	r3, .L1210+12
 331:src/keys.c    ****   }
 8321              		.loc 1 331 9 view .LVU2635
 8322 0e7a 0C22     		movs	r2, #12
 327:src/keys.c    **** #else
 8323              		.loc 1 327 27 view .LVU2636
 8324 0e7c 4FF0010C 		mov	ip, #1
 8325 0e80 FFF7E4B9 		b	.L666
 8326              	.LVL698:
 8327              	.L1159:
 327:src/keys.c    **** #else
 8328              		.loc 1 327 27 view .LVU2637
 8329              	.LBE662:
 266:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 8330              		.loc 1 266 74 view .LVU2638
 8331 0e84 D8F81430 		ldr	r3, [r8, #20]
 8332 0e88 9C4A     		ldr	r2, .L1210+16
 8333 0e8a 1342     		tst	r3, r2
 8334 0e8c 3FF408AF 		beq	.L661
 269:src/keys.c    ****     /*
 8335              		.loc 1 269 3 is_stmt 1 view .LVU2639
 269:src/keys.c    ****     /*
 8336              		.loc 1 269 23 is_stmt 0 view .LVU2640
 8337 0e90 9B4A     		ldr	r2, .L1210+20
 269:src/keys.c    ****     /*
 8338              		.loc 1 269 6 view .LVU2641
 8339 0e92 1342     		tst	r3, r2
 8340 0e94 3FF4CBA9 		beq	.L894
 8341 0e98 BCE6     		b	.L663
 8342              	.LVL699:
 8343              	.L1145:
 269:src/keys.c    ****     /*
 8344              		.loc 1 269 6 view .LVU2642
 8345              	.LBE668:
 8346              	.LBE960:
 8347              	.LBB961:
 8348              	.LBB820:
1347:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 8349              		.loc 1 1347 44 is_stmt 1 view .LVU2643
1347:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 8350              		.loc 1 1347 52 is_stmt 0 view .LVU2644
 8351 0e9a 0320     		movs	r0, #3
 8352 0e9c FFF7FEFF 		bl	gtodot_digit
 8353              	.LVL700:
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8354              		.loc 1 1391 2 is_stmt 1 view .LVU2645
 8355              	.LBE820:
 8356              	.LBE961:
2857:src/keys.c    **** 
 8357              		.loc 1 2857 10 is_stmt 0 view .LVU2646
ARM GAS  /tmp/cccKVeLo.s 			page 247


 8358 0ea0 4FF0330B 		mov	fp, #51
 8359 0ea4 3268     		ldr	r2, [r6]
 8360 0ea6 FFF704B9 		b	.L565
 8361              	.LVL701:
 8362              	.L638:
 8363              	.LBB962:
 8364              	.LBB800:
1963:src/keys.c    **** 		return STATE_UNFINISHED;
 8365              		.loc 1 1963 3 is_stmt 1 view .LVU2647
 8366              	.LBB793:
 8367              	.LBI793:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 8368              		.loc 1 506 13 view .LVU2648
 8369              	.LBB794:
 507:src/keys.c    **** 		return;
 8370              		.loc 1 507 2 view .LVU2649
 507:src/keys.c    **** 		return;
 8371              		.loc 1 507 6 is_stmt 0 view .LVU2650
 8372 0eaa FFF7FEFF 		bl	is_bad_cmdline
 8373              	.LVL702:
 507:src/keys.c    **** 		return;
 8374              		.loc 1 507 5 view .LVU2651
 8375 0eae 0446     		mov	r4, r0
 8376 0eb0 0028     		cmp	r0, #0
 8377 0eb2 40F0CA84 		bne	.L1167
 8378 0eb6 5FFA8AF0 		uxtb	r0, r10
 8379 0eba FFF7FEFF 		bl	init_arg.part.0
 8380              	.LVL703:
 8381              	.LBE794:
 8382              	.LBE793:
 8383              	.LBE800:
 8384              	.LBE962:
 8385              	.LBE1238:
 8386              	.LBE1313:
2977:src/keys.c    ****   if (was_paused && Pause == 0)
 8387              		.loc 1 2977 7 view .LVU2652
 8388 0ebe 2546     		mov	r5, r4
 8389 0ec0 3268     		ldr	r2, [r6]
 8390              	.LBB1314:
 8391              	.LBB1239:
 8392              	.LBB963:
 8393              	.LBB801:
1964:src/keys.c    **** 
 8394              		.loc 1 1964 10 view .LVU2653
 8395 0ec2 4FF0330B 		mov	fp, #51
 8396              	.LVL704:
1964:src/keys.c    **** 
 8397              		.loc 1 1964 10 view .LVU2654
 8398 0ec6 FFF7F4B8 		b	.L565
 8399              	.LVL705:
 8400              	.L639:
1964:src/keys.c    **** 
 8401              		.loc 1 1964 10 view .LVU2655
 8402 0eca 3268     		ldr	r2, [r6]
1968:src/keys.c    **** 
 8403              		.loc 1 1968 10 view .LVU2656
 8404 0ecc 4FF0330B 		mov	fp, #51
ARM GAS  /tmp/cccKVeLo.s 			page 248


 8405              	.LVL706:
1968:src/keys.c    **** 
 8406              		.loc 1 1968 10 view .LVU2657
 8407 0ed0 FFF7EFB8 		b	.L565
 8408              	.LVL707:
 8409              	.L908:
1968:src/keys.c    **** 
 8410              		.loc 1 1968 10 view .LVU2658
 8411              	.LBE801:
 8412              	.LBE963:
 8413              	.LBB964:
 8414              	.LBB861:
 8415              	.LBB855:
2510:src/keys.c    **** 		if (nn <= 9)
 8416              		.loc 1 2510 7 view .LVU2659
 8417 0ed4 0A46     		mov	r2, r1
 8418              	.LVL708:
2510:src/keys.c    **** 		if (nn <= 9)
 8419              		.loc 1 2510 7 view .LVU2660
 8420 0ed6 5FE6     		b	.L644
 8421              	.LVL709:
 8422              	.L676:
2510:src/keys.c    **** 		if (nn <= 9)
 8423              		.loc 1 2510 7 view .LVU2661
 8424              	.LBE855:
 8425              	.LBE861:
 8426              	.LBE964:
2900:src/keys.c    **** 		init_cat( cat );
 8427              		.loc 1 2900 3 is_stmt 1 view .LVU2662
 8428 0ed8 FFF7FEFF 		bl	init_cat
 8429              	.LVL710:
2901:src/keys.c    **** 		return STATE_UNFINISHED;
 8430              		.loc 1 2901 3 view .LVU2663
 8431 0edc 5846     		mov	r0, fp
 8432 0ede FFF7FEFF 		bl	init_cat
 8433              	.LVL711:
2902:src/keys.c    **** 	}
 8434              		.loc 1 2902 3 view .LVU2664
 8435              	.LBE1239:
 8436              	.LBE1314:
2977:src/keys.c    ****   if (was_paused && Pause == 0)
 8437              		.loc 1 2977 7 is_stmt 0 view .LVU2665
 8438 0ee2 2546     		mov	r5, r4
 8439 0ee4 3268     		ldr	r2, [r6]
 8440              	.LBB1315:
 8441              	.LBB1240:
2902:src/keys.c    **** 	}
 8442              		.loc 1 2902 10 view .LVU2666
 8443 0ee6 4FF0330B 		mov	fp, #51
 8444 0eea FFF7E2B8 		b	.L565
 8445              	.L1129:
2912:src/keys.c    **** 
 8446              		.loc 1 2912 3 is_stmt 1 view .LVU2667
 8447              	.LVL712:
 8448              	.LBB965:
 8449              	.LBI965:
2572:src/keys.c    **** 	unsigned int pc = State2.digval;
ARM GAS  /tmp/cccKVeLo.s 			page 249


 8450              		.loc 1 2572 12 view .LVU2668
 8451              	.LBB966:
2573:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 8452              		.loc 1 2573 2 view .LVU2669
2575:src/keys.c    **** 	const int opcode = getprog(pc);
 8453              		.loc 1 2575 27 is_stmt 0 view .LVU2670
 8454 0eee 262C     		cmp	r4, #38
2573:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 8455              		.loc 1 2573 15 view .LVU2671
 8456 0ef0 B8F808A0 		ldrh	r10, [r8, #8]
 8457              	.LVL713:
2574:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
 8458              		.loc 1 2574 2 is_stmt 1 view .LVU2672
2575:src/keys.c    **** 	const int opcode = getprog(pc);
 8459              		.loc 1 2575 27 is_stmt 0 view .LVU2673
 8460 0ef4 00F02883 		beq	.L918
 8461              	.LVL714:
 8462              	.LBB967:
 8463              	.LBI967:
 200:src/keys.c    **** {
 8464              		.loc 1 200 14 is_stmt 1 view .LVU2674
 8465              	.LBB968:
 202:src/keys.c    ****     // K00 - K05
 8466              		.loc 1 202 3 view .LVU2675
 224:src/keys.c    **** }
 8467              		.loc 1 224 3 view .LVU2676
 8468              	.LBB969:
 8469              	.LBI969:
 121:src/keys.c    **** {
 8470              		.loc 1 121 12 view .LVU2677
 8471              	.LBB970:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8472              		.loc 1 123 2 view .LVU2678
 133:src/keys.c    **** }
 8473              		.loc 1 133 2 view .LVU2679
 133:src/keys.c    **** }
 8474              		.loc 1 133 23 is_stmt 0 view .LVU2680
 8475 0ef8 7C4B     		ldr	r3, .L1210
 8476              	.LBE970:
 8477              	.LBE969:
 224:src/keys.c    **** }
 8478              		.loc 1 224 28 view .LVU2681
 8479 0efa 824A     		ldr	r2, .L1210+24
 8480              	.LBB972:
 8481              	.LBB971:
 133:src/keys.c    **** }
 8482              		.loc 1 133 23 view .LVU2682
 8483 0efc 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 8484              	.LBE971:
 8485              	.LBE972:
 224:src/keys.c    **** }
 8486              		.loc 1 224 10 view .LVU2683
 8487 0efe 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
 8488              	.LBE968:
 8489              	.LBE967:
2575:src/keys.c    **** 	const int opcode = getprog(pc);
 8490              		.loc 1 2575 27 view .LVU2684
ARM GAS  /tmp/cccKVeLo.s 			page 250


 8491 0f02 2BF0800B 		bic	fp, fp, #128
 8492              	.L695:
 8493              	.LVL715:
2576:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 8494              		.loc 1 2576 2 is_stmt 1 view .LVU2685
2576:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 8495              		.loc 1 2576 21 is_stmt 0 view .LVU2686
 8496 0f06 5046     		mov	r0, r10
 8497 0f08 FFF7FEFF 		bl	getprog
 8498              	.LVL716:
2577:src/keys.c    **** 	const int direct = State2.runmode;
 8499              		.loc 1 2577 2 is_stmt 1 view .LVU2687
2577:src/keys.c    **** 	const int direct = State2.runmode;
 8500              		.loc 1 2577 20 is_stmt 0 view .LVU2688
 8501 0f0c 00F47040 		and	r0, r0, #61440
 8502              	.LVL717:
2577:src/keys.c    **** 	const int direct = State2.runmode;
 8503              		.loc 1 2577 63 view .LVU2689
 8504 0f10 B0F5704F 		cmp	r0, #61440
 8505 0f14 00F04E85 		beq	.L1168
 8506 0f18 0022     		movs	r2, #0
 8507              	.L696:
 8508              	.LVL718:
2578:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8509              		.loc 1 2578 2 is_stmt 1 view .LVU2690
2578:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8510              		.loc 1 2578 27 is_stmt 0 view .LVU2691
 8511 0f1a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 8512 0f1e 0192     		str	r2, [sp, #4]
 8513              	.LVL719:
2578:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8514              		.loc 1 2578 27 view .LVU2692
 8515 0f20 C3F38013 		ubfx	r3, r3, #6, #1
 8516 0f24 0093     		str	r3, [sp]
 8517              	.LVL720:
2579:src/keys.c    **** 	int op = STATE_UNFINISHED;
 8518              		.loc 1 2579 2 is_stmt 1 view .LVU2693
 8519              	.LBB973:
 8520              	.LBI973:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 8521              		.loc 1 104 13 view .LVU2694
 8522              	.LBE973:
 8523              	.LBE966:
 8524              	.LBE965:
 8525              	.LBE1240:
 8526              	.LBE1315:
 105:src/keys.c    **** }
 8527              		.loc 1 105 2 view .LVU2695
 8528              	.LBB1316:
 8529              	.LBB1241:
 8530              	.LBB1000:
 8531              	.LBB992:
 8532              	.LBB980:
 8533              	.LBB974:
 8534              	.LBI974:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 8535              		.loc 1 94 20 view .LVU2696
ARM GAS  /tmp/cccKVeLo.s 			page 251


 8536              	.LBB975:
  95:src/keys.c    **** 	State2.shifts = shift;
 8537              		.loc 1 95 2 view .LVU2697
 8538              	.LBB976:
 8539              	.LBI976:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 8540              		.loc 1 86 13 view .LVU2698
 8541              	.LBB977:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8542              		.loc 1 87 2 view .LVU2699
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8543              		.loc 1 87 18 is_stmt 0 view .LVU2700
 8544 0f26 FFF7FEFF 		bl	shift_down
 8545              	.LVL721:
  88:src/keys.c    **** }
 8546              		.loc 1 88 2 is_stmt 1 view .LVU2701
  88:src/keys.c    **** }
 8547              		.loc 1 88 52 is_stmt 0 view .LVU2702
 8548 0f2a 019A     		ldr	r2, [sp, #4]
 8549 0f2c 0346     		mov	r3, r0
 8550 0f2e 08B9     		cbnz	r0, .L697
 8551 0f30 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 8552              	.L697:
 8553              	.LVL722:
  88:src/keys.c    **** }
 8554              		.loc 1 88 52 view .LVU2703
 8555              	.LBE977:
 8556              	.LBE976:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8557              		.loc 1 96 2 is_stmt 1 view .LVU2704
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8558              		.loc 1 96 16 is_stmt 0 view .LVU2705
 8559 0f34 0021     		movs	r1, #0
 8560              	.LBE975:
 8561              	.LBE974:
 8562              	.LBE980:
2582:src/keys.c    **** 		// Digits take you to that segment
 8563              		.loc 1 2582 5 view .LVU2706
 8564 0f36 BBF1020F 		cmp	fp, #2
 8565              	.LBB981:
 8566              	.LBB979:
 8567              	.LBB978:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8568              		.loc 1 96 16 view .LVU2707
 8569 0f3a 88F81010 		strb	r1, [r8, #16]
  98:src/keys.c    **** }
 8570              		.loc 1 98 2 is_stmt 1 view .LVU2708
 8571              	.LVL723:
  98:src/keys.c    **** }
 8572              		.loc 1 98 2 is_stmt 0 view .LVU2709
 8573              	.LBE978:
 8574              	.LBE979:
 8575              	.LBE981:
2580:src/keys.c    **** 
 8576              		.loc 1 2580 2 is_stmt 1 view .LVU2710
2582:src/keys.c    **** 		// Digits take you to that segment
 8577              		.loc 1 2582 2 view .LVU2711
ARM GAS  /tmp/cccKVeLo.s 			page 252


2582:src/keys.c    **** 		// Digits take you to that segment
 8578              		.loc 1 2582 5 is_stmt 0 view .LVU2712
 8579 0f3e 40F22785 		bls	.L1169
2591:src/keys.c    **** 
 8580              		.loc 1 2591 2 is_stmt 1 view .LVU2713
2591:src/keys.c    **** 
 8581              		.loc 1 2591 12 is_stmt 0 view .LVU2714
 8582 0f42 44EA0323 		orr	r3, r4, r3, lsl #8
 8583              	.LVL724:
2591:src/keys.c    **** 
 8584              		.loc 1 2591 2 view .LVU2715
 8585 0f46 272B     		cmp	r3, #39
 8586 0f48 00F39580 		bgt	.L700
 8587 0f4c 042B     		cmp	r3, #4
 8588 0f4e 53DD     		ble	.L702
 8589 0f50 053B     		subs	r3, r3, #5
 8590 0f52 222B     		cmp	r3, #34
 8591 0f54 50D8     		bhi	.L702
 8592 0f56 DFE803F0 		tbb	[pc, r3]
 8593              	.L709:
 8594 0f5a 5B       		.byte	(.L714-.L709)/2
 8595 0f5b 54       		.byte	(.L713-.L709)/2
 8596 0f5c 54       		.byte	(.L713-.L709)/2
 8597 0f5d 4F       		.byte	(.L702-.L709)/2
 8598 0f5e 4F       		.byte	(.L702-.L709)/2
 8599 0f5f 4F       		.byte	(.L702-.L709)/2
 8600 0f60 4F       		.byte	(.L702-.L709)/2
 8601 0f61 12       		.byte	(.L921-.L709)/2
 8602 0f62 4F       		.byte	(.L702-.L709)/2
 8603 0f63 4F       		.byte	(.L702-.L709)/2
 8604 0f64 4F       		.byte	(.L702-.L709)/2
 8605 0f65 6F       		.byte	(.L712-.L709)/2
 8606 0f66 4F       		.byte	(.L702-.L709)/2
 8607 0f67 64       		.byte	(.L711-.L709)/2
 8608 0f68 4F       		.byte	(.L702-.L709)/2
 8609 0f69 4F       		.byte	(.L702-.L709)/2
 8610 0f6a 4F       		.byte	(.L702-.L709)/2
 8611 0f6b 4F       		.byte	(.L702-.L709)/2
 8612 0f6c 4F       		.byte	(.L702-.L709)/2
 8613 0f6d 31       		.byte	(.L710-.L709)/2
 8614 0f6e 4F       		.byte	(.L702-.L709)/2
 8615 0f6f 4F       		.byte	(.L702-.L709)/2
 8616 0f70 4F       		.byte	(.L702-.L709)/2
 8617 0f71 4F       		.byte	(.L702-.L709)/2
 8618 0f72 4F       		.byte	(.L702-.L709)/2
 8619 0f73 4F       		.byte	(.L702-.L709)/2
 8620 0f74 4F       		.byte	(.L702-.L709)/2
 8621 0f75 4F       		.byte	(.L702-.L709)/2
 8622 0f76 4F       		.byte	(.L702-.L709)/2
 8623 0f77 4F       		.byte	(.L702-.L709)/2
 8624 0f78 4F       		.byte	(.L702-.L709)/2
 8625 0f79 4F       		.byte	(.L702-.L709)/2
 8626 0f7a 4F       		.byte	(.L702-.L709)/2
 8627 0f7b 4F       		.byte	(.L702-.L709)/2
 8628 0f7c 3D       		.byte	(.L708-.L709)/2
 8629 0f7d 00       		.p2align 1
 8630              	.L921:
ARM GAS  /tmp/cccKVeLo.s 			page 253


2580:src/keys.c    **** 
 8631              		.loc 1 2580 6 view .LVU2716
 8632 0f7e 4FF0330B 		mov	fp, #51
 8633              	.LVL725:
 8634              	.L706:
2613:src/keys.c    **** 		break;
 8635              		.loc 1 2613 3 is_stmt 1 view .LVU2717
 8636 0f82 5046     		mov	r0, r10
 8637 0f84 FFF7FEFF 		bl	set_pc
 8638              	.LVL726:
2614:src/keys.c    **** 
 8639              		.loc 1 2614 3 view .LVU2718
 8640              	.L718:
2667:src/keys.c    **** 	State2.labellist = 0;
 8641              		.loc 1 2667 2 view .LVU2719
2668:src/keys.c    **** 	return check_confirm(op);
 8642              		.loc 1 2668 19 is_stmt 0 view .LVU2720
 8643 0f88 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
2667:src/keys.c    **** 	State2.labellist = 0;
 8644              		.loc 1 2667 16 view .LVU2721
 8645 0f8c 0022     		movs	r2, #0
 8646              	.LBB982:
 8647              	.LBB983:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8648              		.loc 1 625 5 view .LVU2722
 8649 0f8e CBF30723 		ubfx	r3, fp, #8, #8
 8650              	.LBE983:
 8651              	.LBE982:
2668:src/keys.c    **** 	return check_confirm(op);
 8652              		.loc 1 2668 19 view .LVU2723
 8653 0f92 62F38201 		bfi	r1, r2, #2, #1
 8654              	.LBB988:
 8655              	.LBB984:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8656              		.loc 1 625 5 view .LVU2724
 8657 0f96 012B     		cmp	r3, #1
 8658              	.LBE984:
 8659              	.LBE988:
2668:src/keys.c    **** 	return check_confirm(op);
 8660              		.loc 1 2668 19 view .LVU2725
 8661 0f98 88F81710 		strb	r1, [r8, #23]
2667:src/keys.c    **** 	State2.labellist = 0;
 8662              		.loc 1 2667 16 view .LVU2726
 8663 0f9c A8F80820 		strh	r2, [r8, #8]	@ movhi
2668:src/keys.c    **** 	return check_confirm(op);
 8664              		.loc 1 2668 2 is_stmt 1 view .LVU2727
2669:src/keys.c    **** }
 8665              		.loc 1 2669 2 view .LVU2728
 8666              	.LVL727:
 8667              	.LBB989:
 8668              	.LBI982:
 624:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8669              		.loc 1 624 12 view .LVU2729
 8670              	.LBB985:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8671              		.loc 1 625 2 view .LVU2730
 625:src/keys.c    **** 		const int nilop = argKIND(op);
ARM GAS  /tmp/cccKVeLo.s 			page 254


 8672              		.loc 1 625 5 is_stmt 0 view .LVU2731
 8673 0fa0 7FF44AAA 		bne	.L595
 8674              	.LVL728:
 8675              	.L893:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8676              		.loc 1 625 5 view .LVU2732
 8677              	.LBE985:
 8678              	.LBE989:
 8679              	.LBE992:
 8680              	.LBE1000:
 8681              	.LBB1001:
 8682              	.LBB1002:
 8683              	.LBB1003:
 8684              	.LBB1004:
 8685 0fa4 5846     		mov	r0, fp
 8686 0fa6 FFF7FEFF 		bl	check_confirm.part.0
 8687              	.LVL729:
 8688 0faa 8346     		mov	fp, r0
 8689              	.LVL730:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8690              		.loc 1 625 5 view .LVU2733
 8691 0fac FFF744BA 		b	.L595
 8692              	.LVL731:
 8693              	.L703:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8694              		.loc 1 625 5 view .LVU2734
 8695              	.LBE1004:
 8696              	.LBE1003:
 8697              	.LBE1002:
 8698              	.LBE1001:
 8699              	.LBB1039:
 8700              	.LBB993:
2598:src/keys.c    **** 	case K_DOWN:				// Find next label
 8701              		.loc 1 2598 3 is_stmt 1 view .LVU2735
2598:src/keys.c    **** 	case K_DOWN:				// Find next label
 8702              		.loc 1 2598 8 is_stmt 0 view .LVU2736
 8703 0fb0 5046     		mov	r0, r10
 8704 0fb2 0122     		movs	r2, #1
 8705 0fb4 0021     		movs	r1, #0
 8706 0fb6 FFF7FEFF 		bl	advance_to_next_label
 8707              	.LVL732:
 8708 0fba 8246     		mov	r10, r0
 8709              	.LVL733:
 8710              	.L710:
2601:src/keys.c    **** 		return STATE_UNFINISHED;
 8711              		.loc 1 2601 3 is_stmt 1 view .LVU2737
2601:src/keys.c    **** 		return STATE_UNFINISHED;
 8712              		.loc 1 2601 19 is_stmt 0 view .LVU2738
 8713 0fbc 0022     		movs	r2, #0
 8714 0fbe 5046     		mov	r0, r10
 8715 0fc0 0121     		movs	r1, #1
 8716 0fc2 FFF7FEFF 		bl	advance_to_next_label
 8717              	.LVL734:
2602:src/keys.c    **** 
 8718              		.loc 1 2602 10 view .LVU2739
 8719 0fc6 4FF0330B 		mov	fp, #51
 8720              	.LVL735:
ARM GAS  /tmp/cccKVeLo.s 			page 255


2602:src/keys.c    **** 
 8721              		.loc 1 2602 10 view .LVU2740
 8722 0fca 3268     		ldr	r2, [r6]
2601:src/keys.c    **** 		return STATE_UNFINISHED;
 8723              		.loc 1 2601 17 view .LVU2741
 8724 0fcc A8F80800 		strh	r0, [r8, #8]	@ movhi
2602:src/keys.c    **** 
 8725              		.loc 1 2602 3 is_stmt 1 view .LVU2742
2602:src/keys.c    **** 
 8726              		.loc 1 2602 10 is_stmt 0 view .LVU2743
 8727 0fd0 FFF76FB8 		b	.L565
 8728              	.LVL736:
 8729              	.L708:
2653:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8730              		.loc 1 2653 3 is_stmt 1 view .LVU2744
2653:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8731              		.loc 1 2653 6 is_stmt 0 view .LVU2745
 8732 0fd4 009B     		ldr	r3, [sp]
 8733 0fd6 FBB1     		cbz	r3, .L720
2653:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8734              		.loc 1 2653 14 view .LVU2746
 8735 0fd8 F2B1     		cbz	r2, .L720
2654:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
 8736              		.loc 1 2654 4 is_stmt 1 view .LVU2747
 8737 0fda 5146     		mov	r1, r10
 8738 0fdc 0120     		movs	r0, #1
 8739 0fde FFF7FEFF 		bl	cmdgtocommon
 8740              	.LVL737:
2655:src/keys.c    **** 			break;
 8741              		.loc 1 2655 4 view .LVU2748
2656:src/keys.c    **** 		}
 8742              		.loc 1 2656 4 view .LVU2749
2667:src/keys.c    **** 	State2.labellist = 0;
 8743              		.loc 1 2667 2 view .LVU2750
2668:src/keys.c    **** 	return check_confirm(op);
 8744              		.loc 1 2668 19 is_stmt 0 view .LVU2751
 8745 0fe2 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
2667:src/keys.c    **** 	State2.labellist = 0;
 8746              		.loc 1 2667 16 view .LVU2752
 8747 0fe6 0023     		movs	r3, #0
2668:src/keys.c    **** 	return check_confirm(op);
 8748              		.loc 1 2668 19 view .LVU2753
 8749 0fe8 63F38202 		bfi	r2, r3, #2, #1
 8750 0fec 88F81720 		strb	r2, [r8, #23]
2667:src/keys.c    **** 	State2.labellist = 0;
 8751              		.loc 1 2667 16 view .LVU2754
 8752 0ff0 A8F80830 		strh	r3, [r8, #8]	@ movhi
2668:src/keys.c    **** 	return check_confirm(op);
 8753              		.loc 1 2668 2 is_stmt 1 view .LVU2755
2669:src/keys.c    **** }
 8754              		.loc 1 2669 2 view .LVU2756
 8755              	.LVL738:
 8756              	.LBB990:
 624:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8757              		.loc 1 624 12 view .LVU2757
 8758              	.LBB986:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
ARM GAS  /tmp/cccKVeLo.s 			page 256


 8759              		.loc 1 625 2 view .LVU2758
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8760              		.loc 1 625 2 is_stmt 0 view .LVU2759
 8761              	.LBE986:
 8762              	.LBE990:
 8763              	.LBE993:
 8764              	.LBE1039:
 8765              	.LBE1241:
 8766              	.LBE1316:
3162:src/keys.c    ****     case STATE_SST:
 8767              		.loc 1 3162 5 is_stmt 1 view .LVU2760
 8768 0ff4 FFF7CBB9 		b	.L575
 8769              	.LVL739:
 8770              	.L702:
3162:src/keys.c    ****     case STATE_SST:
 8771              		.loc 1 3162 5 is_stmt 0 view .LVU2761
 8772 0ff8 3268     		ldr	r2, [r6]
 8773              	.LBB1317:
 8774              	.LBB1242:
 8775              	.LBB1040:
 8776              	.LBB994:
2665:src/keys.c    **** 	}
 8777              		.loc 1 2665 10 view .LVU2762
 8778 0ffa 4FF0330B 		mov	fp, #51
 8779              	.LVL740:
2665:src/keys.c    **** 	}
 8780              		.loc 1 2665 10 view .LVU2763
 8781 0ffe FFF758B8 		b	.L565
 8782              	.LVL741:
 8783              	.L713:
2623:src/keys.c    **** 	  //#endif
 8784              		.loc 1 2623 3 is_stmt 1 view .LVU2764
2623:src/keys.c    **** 	  //#endif
 8785              		.loc 1 2623 38 is_stmt 0 view .LVU2765
 8786 1002 062C     		cmp	r4, #6
 8787 1004 40F2B11B 		movw	fp, #433
 8788              	.LVL742:
2623:src/keys.c    **** 	  //#endif
 8789              		.loc 1 2623 38 view .LVU2766
 8790 1008 08BF     		it	eq
 8791 100a 4FF4D97B 		moveq	fp, #434
 8792 100e B8E7     		b	.L706
 8793              	.LVL743:
 8794              	.L714:
 8795              	.L719:
2631:src/keys.c    **** 		goto xeq_or_gto;
 8796              		.loc 1 2631 3 is_stmt 1 view .LVU2767
2631:src/keys.c    **** 		goto xeq_or_gto;
 8797              		.loc 1 2631 6 is_stmt 0 view .LVU2768
 8798 1010 02F5007B 		add	fp, r2, #512
 8799              	.LVL744:
2632:src/keys.c    **** 
 8800              		.loc 1 2632 3 is_stmt 1 view .LVU2769
2637:src/keys.c    **** 			break;
 8801              		.loc 1 2637 3 view .LVU2770
2637:src/keys.c    **** 			break;
 8802              		.loc 1 2637 6 is_stmt 0 view .LVU2771
ARM GAS  /tmp/cccKVeLo.s 			page 257


 8803 1014 002A     		cmp	r2, #0
 8804 1016 B7D1     		bne	.L718
 8805              	.LVL745:
 8806              	.L720:
2637:src/keys.c    **** 			break;
 8807              		.loc 1 2637 6 view .LVU2772
 8808 1018 3268     		ldr	r2, [r6]
2639:src/keys.c    **** #else
 8809              		.loc 1 2639 10 view .LVU2773
 8810 101a 4FF0330B 		mov	fp, #51
 8811 101e FFF748B8 		b	.L565
 8812              	.LVL746:
 8813              	.L711:
2605:src/keys.c    **** 		return STATE_UNFINISHED;
 8814              		.loc 1 2605 3 is_stmt 1 view .LVU2774
2605:src/keys.c    **** 		return STATE_UNFINISHED;
 8815              		.loc 1 2605 19 is_stmt 0 view .LVU2775
 8816 1022 5046     		mov	r0, r10
 8817 1024 0021     		movs	r1, #0
 8818 1026 FFF7FEFF 		bl	advance_to_previous_label
 8819              	.LVL747:
2606:src/keys.c    **** 
 8820              		.loc 1 2606 10 view .LVU2776
 8821 102a 4FF0330B 		mov	fp, #51
 8822              	.LVL748:
2606:src/keys.c    **** 
 8823              		.loc 1 2606 10 view .LVU2777
 8824 102e 3268     		ldr	r2, [r6]
2605:src/keys.c    **** 		return STATE_UNFINISHED;
 8825              		.loc 1 2605 17 view .LVU2778
 8826 1030 A8F80800 		strh	r0, [r8, #8]	@ movhi
2606:src/keys.c    **** 
 8827              		.loc 1 2606 3 is_stmt 1 view .LVU2779
2606:src/keys.c    **** 
 8828              		.loc 1 2606 10 is_stmt 0 view .LVU2780
 8829 1034 FFF73DB8 		b	.L565
 8830              	.LVL749:
 8831              	.L712:
2667:src/keys.c    **** 	State2.labellist = 0;
 8832              		.loc 1 2667 2 is_stmt 1 view .LVU2781
2668:src/keys.c    **** 	return check_confirm(op);
 8833              		.loc 1 2668 19 is_stmt 0 view .LVU2782
 8834 1038 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
 8835 103c 3268     		ldr	r2, [r6]
2667:src/keys.c    **** 	State2.labellist = 0;
 8836              		.loc 1 2667 16 view .LVU2783
 8837 103e 0023     		movs	r3, #0
2668:src/keys.c    **** 	return check_confirm(op);
 8838              		.loc 1 2668 19 view .LVU2784
 8839 1040 63F38201 		bfi	r1, r3, #2, #1
 8840 1044 88F81710 		strb	r1, [r8, #23]
2667:src/keys.c    **** 	State2.labellist = 0;
 8841              		.loc 1 2667 16 view .LVU2785
 8842 1048 A8F80830 		strh	r3, [r8, #8]	@ movhi
2668:src/keys.c    **** 	return check_confirm(op);
 8843              		.loc 1 2668 2 is_stmt 1 view .LVU2786
2669:src/keys.c    **** }
ARM GAS  /tmp/cccKVeLo.s 			page 258


 8844              		.loc 1 2669 2 view .LVU2787
 8845              	.LVL750:
 8846              	.LBB991:
 624:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8847              		.loc 1 624 12 view .LVU2788
 8848              	.LBB987:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8849              		.loc 1 625 2 view .LVU2789
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8850              		.loc 1 625 2 is_stmt 0 view .LVU2790
 8851              	.LBE987:
 8852              	.LBE991:
 8853              	.LBE994:
 8854              	.LBE1040:
 8855              	.LBE1242:
 8856              	.LBE1317:
3162:src/keys.c    ****     case STATE_SST:
 8857              		.loc 1 3162 5 is_stmt 1 view .LVU2791
 8858              	.LBB1318:
 8859              	.LBB1243:
 8860              	.LBB1041:
 8861              	.LBB995:
2580:src/keys.c    **** 
 8862              		.loc 1 2580 6 is_stmt 0 view .LVU2792
 8863 104c 4FF0330B 		mov	fp, #51
 8864              	.LVL751:
2580:src/keys.c    **** 
 8865              		.loc 1 2580 6 view .LVU2793
 8866 1050 FFF72FB8 		b	.L565
 8867              	.LVL752:
 8868              	.L1158:
2580:src/keys.c    **** 
 8869              		.loc 1 2580 6 view .LVU2794
 8870              	.LBE995:
 8871              	.LBE1041:
 8872              	.LBB1042:
 8873              	.LBB893:
1304:src/keys.c    **** 
 8874              		.loc 1 1304 3 is_stmt 1 view .LVU2795
 8875 1054 2C4B     		ldr	r3, .L1210+28
 8876              	.LBB886:
 8877              	.LBB887:
 652:src/keys.c    **** }
 8878              		.loc 1 652 15 is_stmt 0 view .LVU2796
 8879 1056 98F81110 		ldrb	r1, [r8, #17]	@ zero_extendqisi2
 8880 105a 3268     		ldr	r2, [r6]
 8881              	.LBE887:
 8882              	.LBE886:
1304:src/keys.c    **** 
 8883              		.loc 1 1304 3 view .LVU2797
 8884 105c 03EB4403 		add	r3, r3, r4, lsl #1
1306:src/keys.c    **** }
 8885              		.loc 1 1306 9 view .LVU2798
 8886 1060 4FF0330B 		mov	fp, #51
 8887              	.LVL753:
1304:src/keys.c    **** 
 8888              		.loc 1 1304 3 view .LVU2799
ARM GAS  /tmp/cccKVeLo.s 			page 259


 8889 1064 13F80A30 		ldrb	r3, [r3, r10]	@ zero_extendqisi2
 8890              	.LVL754:
 8891              	.LBB889:
 8892              	.LBI886:
 651:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 8893              		.loc 1 651 13 is_stmt 1 view .LVU2800
 8894              	.LBB888:
 652:src/keys.c    **** }
 8895              		.loc 1 652 2 view .LVU2801
 652:src/keys.c    **** }
 8896              		.loc 1 652 15 is_stmt 0 view .LVU2802
 8897 1068 9942     		cmp	r1, r3
 8898 106a 08BF     		it	eq
 8899 106c 0023     		moveq	r3, #0
 8900              	.LVL755:
 652:src/keys.c    **** }
 8901              		.loc 1 652 15 view .LVU2803
 8902 106e 88F81130 		strb	r3, [r8, #17]
 653:src/keys.c    **** 
 8903              		.loc 1 653 1 view .LVU2804
 8904 1072 FFF71EB8 		b	.L565
 8905              	.LVL756:
 8906              	.L700:
 653:src/keys.c    **** 
 8907              		.loc 1 653 1 view .LVU2805
 8908              	.LBE888:
 8909              	.LBE889:
 8910              	.LBE893:
 8911              	.LBE1042:
 8912              	.LBB1043:
 8913              	.LBB996:
2591:src/keys.c    **** 
 8914              		.loc 1 2591 2 view .LVU2806
 8915 1076 B3F58C7F 		cmp	r3, #280
 8916 107a 56DC     		bgt	.L715
 8917 107c B3F5827F 		cmp	r3, #260
 8918 1080 BADD     		ble	.L702
 8919 1082 6FF48271 		mvn	r1, #260
 8920 1086 0B44     		add	r3, r3, r1
 8921 1088 132B     		cmp	r3, #19
 8922 108a B5D8     		bhi	.L702
 8923 108c 01A1     		adr	r1, .L704
 8924 108e 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 8925 1092 00BF     		.p2align 2
 8926              	.L704:
 8927 1094 0D110000 		.word	.L707+1
 8928 1098 F90F0000 		.word	.L702+1
 8929 109c F90F0000 		.word	.L702+1
 8930 10a0 F90F0000 		.word	.L702+1
 8931 10a4 F90F0000 		.word	.L702+1
 8932 10a8 F90F0000 		.word	.L702+1
 8933 10ac F90F0000 		.word	.L702+1
 8934 10b0 F90F0000 		.word	.L702+1
 8935 10b4 F90F0000 		.word	.L702+1
 8936 10b8 F90F0000 		.word	.L702+1
 8937 10bc F90F0000 		.word	.L702+1
 8938 10c0 E5100000 		.word	.L920+1
ARM GAS  /tmp/cccKVeLo.s 			page 260


 8939 10c4 F90F0000 		.word	.L702+1
 8940 10c8 19110000 		.word	.L705+1
 8941 10cc F90F0000 		.word	.L702+1
 8942 10d0 F90F0000 		.word	.L702+1
 8943 10d4 F90F0000 		.word	.L702+1
 8944 10d8 F90F0000 		.word	.L702+1
 8945 10dc F90F0000 		.word	.L702+1
 8946 10e0 B10F0000 		.word	.L703+1
 8947              		.p2align 1
 8948              	.L920:
 8949 10e4 40F2431B 		movw	fp, #323
 8950              	.LVL757:
2591:src/keys.c    **** 
 8951              		.loc 1 2591 2 view .LVU2807
 8952 10e8 4BE7     		b	.L706
 8953              	.L1211:
 8954 10ea 00BF     		.align	2
 8955              	.L1210:
 8956 10ec 00000000 		.word	.LANCHOR1
 8957 10f0 00000000 		.word	.LANCHOR9
 8958 10f4 00000000 		.word	.LANCHOR14
 8959 10f8 00000000 		.word	.LANCHOR11
 8960 10fc 000A4000 		.word	4196864
 8961 1100 00080800 		.word	526336
 8962 1104 00000000 		.word	.LANCHOR0
 8963 1108 00000000 		.word	.LANCHOR15
 8964              	.LVL758:
 8965              	.L707:
2635:src/keys.c    **** 	xeq_or_gto:
 8966              		.loc 1 2635 3 is_stmt 1 view .LVU2808
2635:src/keys.c    **** 	xeq_or_gto:
 8967              		.loc 1 2635 6 is_stmt 0 view .LVU2809
 8968 110c 02F5407B 		add	fp, r2, #768
 8969              	.LVL759:
2637:src/keys.c    **** 			break;
 8970              		.loc 1 2637 3 is_stmt 1 view .LVU2810
2637:src/keys.c    **** 			break;
 8971              		.loc 1 2637 6 is_stmt 0 view .LVU2811
 8972 1110 002A     		cmp	r2, #0
 8973 1112 7FF439AF 		bne	.L718
 8974 1116 7FE7     		b	.L720
 8975              	.LVL760:
 8976              	.L705:
2594:src/keys.c    **** 		goto next;
 8977              		.loc 1 2594 3 is_stmt 1 view .LVU2812
2594:src/keys.c    **** 		goto next;
 8978              		.loc 1 2594 8 is_stmt 0 view .LVU2813
 8979 1118 5046     		mov	r0, r10
 8980 111a 0121     		movs	r1, #1
 8981 111c FFF7FEFF 		bl	advance_to_previous_label
 8982              	.LVL761:
 8983 1120 0121     		movs	r1, #1
 8984 1122 FFF7FEFF 		bl	advance_to_previous_label
 8985              	.LVL762:
 8986 1126 8246     		mov	r10, r0
 8987              	.LVL763:
2595:src/keys.c    **** 
ARM GAS  /tmp/cccKVeLo.s 			page 261


 8988              		.loc 1 2595 3 is_stmt 1 view .LVU2814
 8989 1128 48E7     		b	.L710
 8990              	.LVL764:
 8991              	.L715:
2591:src/keys.c    **** 
 8992              		.loc 1 2591 2 is_stmt 0 view .LVU2815
 8993 112a 40F22732 		movw	r2, #807
 8994 112e 9342     		cmp	r3, r2
 8995 1130 7FF462AF 		bne	.L702
2661:src/keys.c    **** 		goto set_pc_and_exit;
 8996              		.loc 1 2661 3 is_stmt 1 view .LVU2816
2661:src/keys.c    **** 		goto set_pc_and_exit;
 8997              		.loc 1 2661 18 is_stmt 0 view .LVU2817
 8998 1134 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 8999 1138 61F38613 		bfi	r3, r1, #6, #1
 9000 113c 88F81630 		strb	r3, [r8, #22]
2662:src/keys.c    **** 
 9001              		.loc 1 2662 3 is_stmt 1 view .LVU2818
2580:src/keys.c    **** 
 9002              		.loc 1 2580 6 is_stmt 0 view .LVU2819
 9003 1140 4FF0330B 		mov	fp, #51
 9004              	.LVL765:
2662:src/keys.c    **** 
 9005              		.loc 1 2662 3 view .LVU2820
 9006 1144 1DE7     		b	.L706
 9007              	.LVL766:
 9008              	.L1130:
2662:src/keys.c    **** 
 9009              		.loc 1 2662 3 view .LVU2821
 9010              	.LBE996:
 9011              	.LBE1043:
2915:src/keys.c    **** 
 9012              		.loc 1 2915 3 is_stmt 1 view .LVU2822
 9013              	.LBB1044:
 9014              	.LBI1044:
2703:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 9015              		.loc 1 2703 12 view .LVU2823
 9016              	.LBB1045:
2704:src/keys.c    **** 	enum shifts shift = reset_shift();
 9017              		.loc 1 2704 2 view .LVU2824
 9018              	.LBB1046:
 9019              	.LBI1046:
 200:src/keys.c    **** {
 9020              		.loc 1 200 14 view .LVU2825
 9021              	.LBB1047:
 202:src/keys.c    ****     // K00 - K05
 9022              		.loc 1 202 3 view .LVU2826
 224:src/keys.c    **** }
 9023              		.loc 1 224 3 view .LVU2827
 9024              	.LBB1048:
 9025              	.LBI1048:
 121:src/keys.c    **** {
 9026              		.loc 1 121 12 view .LVU2828
 9027              	.LBB1049:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9028              		.loc 1 123 2 view .LVU2829
 133:src/keys.c    **** }
ARM GAS  /tmp/cccKVeLo.s 			page 262


 9029              		.loc 1 133 2 view .LVU2830
 133:src/keys.c    **** }
 9030              		.loc 1 133 23 is_stmt 0 view .LVU2831
 9031 1146 A54B     		ldr	r3, .L1212
 9032              	.LBE1049:
 9033              	.LBE1048:
 224:src/keys.c    **** }
 9034              		.loc 1 224 28 view .LVU2832
 9035 1148 A54A     		ldr	r2, .L1212+4
 9036              	.LBB1051:
 9037              	.LBB1050:
 133:src/keys.c    **** }
 9038              		.loc 1 133 23 view .LVU2833
 9039 114a 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 9040              	.LBE1050:
 9041              	.LBE1051:
 224:src/keys.c    **** }
 9042              		.loc 1 224 10 view .LVU2834
 9043 114c 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
 9044              	.LBE1047:
 9045              	.LBE1046:
 9046              	.LBB1052:
 9047              	.LBB1053:
 9048              	.LBB1054:
 9049              	.LBB1055:
 9050              	.LBB1056:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9051              		.loc 1 87 18 view .LVU2835
 9052 1150 FFF7FEFF 		bl	shift_down
 9053              	.LVL767:
 9054              	.LBE1056:
 9055              	.LBE1055:
 9056              	.LBE1054:
 9057              	.LBE1053:
 9058              	.LBE1052:
2704:src/keys.c    **** 	enum shifts shift = reset_shift();
 9059              		.loc 1 2704 15 view .LVU2836
 9060 1154 2BF0800B 		bic	fp, fp, #128
 9061              	.LVL768:
2705:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
 9062              		.loc 1 2705 2 is_stmt 1 view .LVU2837
 9063              	.LBB1065:
 9064              	.LBI1052:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 9065              		.loc 1 104 13 view .LVU2838
 9066              	.LBE1065:
 9067              	.LBE1045:
 9068              	.LBE1044:
 9069              	.LBE1243:
 9070              	.LBE1318:
 105:src/keys.c    **** }
 9071              		.loc 1 105 2 view .LVU2839
 9072              	.LBB1319:
 9073              	.LBB1244:
 9074              	.LBB1080:
 9075              	.LBB1072:
 9076              	.LBB1066:
ARM GAS  /tmp/cccKVeLo.s 			page 263


 9077              	.LBB1062:
 9078              	.LBI1053:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 9079              		.loc 1 94 20 view .LVU2840
 9080              	.LBB1059:
  95:src/keys.c    **** 	State2.shifts = shift;
 9081              		.loc 1 95 2 view .LVU2841
 9082              	.LBB1058:
 9083              	.LBI1055:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 9084              		.loc 1 86 13 view .LVU2842
 9085              	.LBB1057:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9086              		.loc 1 87 2 view .LVU2843
  88:src/keys.c    **** }
 9087              		.loc 1 88 2 view .LVU2844
  88:src/keys.c    **** }
 9088              		.loc 1 88 52 is_stmt 0 view .LVU2845
 9089 1158 8146     		mov	r9, r0
 9090 115a 08B9     		cbnz	r0, .L722
 9091 115c 98F81090 		ldrb	r9, [r8, #16]	@ zero_extendqisi2
 9092              	.L722:
 9093              	.LVL769:
  88:src/keys.c    **** }
 9094              		.loc 1 88 52 view .LVU2846
 9095              	.LBE1057:
 9096              	.LBE1058:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9097              		.loc 1 96 2 is_stmt 1 view .LVU2847
 9098              	.LBE1059:
 9099              	.LBE1062:
 9100              	.LBE1066:
2706:src/keys.c    **** 	const int g_max = global_regs();
 9101              		.loc 1 2706 31 is_stmt 0 view .LVU2848
 9102 1160 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9103              	.LBB1067:
 9104              	.LBB1063:
 9105              	.LBB1060:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9106              		.loc 1 96 16 view .LVU2849
 9107 1164 0022     		movs	r2, #0
 9108              	.LBE1060:
 9109              	.LBE1063:
 9110              	.LBE1067:
2706:src/keys.c    **** 	const int g_max = global_regs();
 9111              		.loc 1 2706 46 view .LVU2850
 9112 1166 DB07     		lsls	r3, r3, #31
 9113              	.LBB1068:
 9114              	.LBB1064:
 9115              	.LBB1061:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9116              		.loc 1 96 16 view .LVU2851
 9117 1168 88F81020 		strb	r2, [r8, #16]
  98:src/keys.c    **** }
 9118              		.loc 1 98 2 is_stmt 1 view .LVU2852
 9119              	.LVL770:
  98:src/keys.c    **** }
ARM GAS  /tmp/cccKVeLo.s 			page 264


 9120              		.loc 1 98 2 is_stmt 0 view .LVU2853
 9121              	.LBE1061:
 9122              	.LBE1064:
 9123              	.LBE1068:
2706:src/keys.c    **** 	const int g_max = global_regs();
 9124              		.loc 1 2706 2 is_stmt 1 view .LVU2854
2706:src/keys.c    **** 	const int g_max = global_regs();
 9125              		.loc 1 2706 46 is_stmt 0 view .LVU2855
 9126 116c 00F11783 		bmi	.L1170
 9127 1170 4FF0700A 		mov	r10, #112
 9128              	.LVL771:
 9129              	.L723:
2707:src/keys.c    **** 
 9130              		.loc 1 2707 2 is_stmt 1 view .LVU2856
2707:src/keys.c    **** 
 9131              		.loc 1 2707 20 is_stmt 0 view .LVU2857
 9132 1174 FFF7FEFF 		bl	global_regs
 9133              	.LVL772:
2709:src/keys.c    **** 		if (local_regs())
 9134              		.loc 1 2709 2 is_stmt 1 view .LVU2858
2709:src/keys.c    **** 		if (local_regs())
 9135              		.loc 1 2709 5 is_stmt 0 view .LVU2859
 9136 1178 BBF1700F 		cmp	fp, #112
 9137 117c 00F01885 		beq	.L1171
2715:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 9138              		.loc 1 2715 7 is_stmt 1 view .LVU2860
2715:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 9139              		.loc 1 2715 10 is_stmt 0 view .LVU2861
 9140 1180 BBF1090F 		cmp	fp, #9
 9141 1184 40F22584 		bls	.L1172
2722:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 9142              		.loc 1 2722 7 is_stmt 1 view .LVU2862
2722:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 9143              		.loc 1 2722 29 is_stmt 0 view .LVU2863
 9144 1188 09F1FF33 		add	r3, r9, #-1
2722:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 9145              		.loc 1 2722 10 view .LVU2864
 9146 118c DBB2     		uxtb	r3, r3
 9147 118e 012B     		cmp	r3, #1
 9148 1190 40F24583 		bls	.L1173
 9149              	.L731:
2726:src/keys.c    **** 		State2.digval = n;
 9150              		.loc 1 2726 7 is_stmt 1 view .LVU2865
2726:src/keys.c    **** 		State2.digval = n;
 9151              		.loc 1 2726 10 is_stmt 0 view .LVU2866
 9152 1194 BBF17F0F 		cmp	fp, #127
 9153 1198 40F01384 		bne	.L1174
2731:src/keys.c    **** 	case K_DOWN:
 9154              		.loc 1 2731 2 is_stmt 1 view .LVU2867
 9155 119c 073C     		subs	r4, r4, #7
 9156 119e 112C     		cmp	r4, #17
 9157 11a0 21D8     		bhi	.L881
 9158 11a2 DFE804F0 		tbb	[pc, r4]
 9159              	.L882:
 9160 11a6 09       		.byte	(.L744-.L882)/2
 9161 11a7 20       		.byte	(.L881-.L882)/2
 9162 11a8 20       		.byte	(.L881-.L882)/2
ARM GAS  /tmp/cccKVeLo.s 			page 265


 9163 11a9 20       		.byte	(.L881-.L882)/2
 9164 11aa 20       		.byte	(.L881-.L882)/2
 9165 11ab 50       		.byte	(.L743-.L882)/2
 9166 11ac 20       		.byte	(.L881-.L882)/2
 9167 11ad 20       		.byte	(.L881-.L882)/2
 9168 11ae 20       		.byte	(.L881-.L882)/2
 9169 11af 41       		.byte	(.L741-.L882)/2
 9170 11b0 20       		.byte	(.L881-.L882)/2
 9171 11b1 5A       		.byte	(.L737-.L882)/2
 9172 11b2 20       		.byte	(.L881-.L882)/2
 9173 11b3 20       		.byte	(.L881-.L882)/2
 9174 11b4 20       		.byte	(.L881-.L882)/2
 9175 11b5 20       		.byte	(.L881-.L882)/2
 9176 11b6 20       		.byte	(.L881-.L882)/2
 9177 11b7 25       		.byte	(.L734-.L882)/2
 9178              		.p2align 1
 9179              	.L744:
2770:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 9180              		.loc 1 2770 3 view .LVU2868
2770:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 9181              		.loc 1 2770 6 is_stmt 0 view .LVU2869
 9182 11b8 B9F1000F 		cmp	r9, #0
 9183 11bc 40F00484 		bne	.L745
2774:src/keys.c    **** #endif
 9184              		.loc 1 2774 4 is_stmt 1 view .LVU2870
2774:src/keys.c    **** #endif
 9185              		.loc 1 2774 8 is_stmt 0 view .LVU2871
 9186 11c0 B8F808B0 		ldrh	fp, [r8, #8]
 9187              	.LVL773:
2776:src/keys.c    **** 			State2.digval = 0;
 9188              		.loc 1 2776 4 is_stmt 1 view .LVU2872
2776:src/keys.c    **** 			State2.digval = 0;
 9189              		.loc 1 2776 24 is_stmt 0 view .LVU2873
 9190 11c4 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
2778:src/keys.c    **** 			return n;
 9191              		.loc 1 2778 19 view .LVU2874
 9192 11c8 88F80A90 		strb	r9, [r8, #10]
2776:src/keys.c    **** 			State2.digval = 0;
 9193              		.loc 1 2776 24 view .LVU2875
 9194 11cc 69F3C303 		bfi	r3, r9, #3, #1
2779:src/keys.c    **** 		}
 9195              		.loc 1 2779 11 view .LVU2876
 9196 11d0 4BF4285B 		orr	fp, fp, #10752
 9197              	.LVL774:
2776:src/keys.c    **** 			State2.digval = 0;
 9198              		.loc 1 2776 24 view .LVU2877
 9199 11d4 88F81730 		strb	r3, [r8, #23]
2777:src/keys.c    **** 			State2.digval2 = 0;
 9200              		.loc 1 2777 4 is_stmt 1 view .LVU2878
2778:src/keys.c    **** 			return n;
 9201              		.loc 1 2778 4 view .LVU2879
2779:src/keys.c    **** 		}
 9202              		.loc 1 2779 4 view .LVU2880
2777:src/keys.c    **** 			State2.digval2 = 0;
 9203              		.loc 1 2777 18 is_stmt 0 view .LVU2881
 9204 11d8 A8F80890 		strh	r9, [r8, #8]	@ movhi
 9205 11dc 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
ARM GAS  /tmp/cccKVeLo.s 			page 266


 9206 11e0 5846     		mov	r0, fp
 9207              	.LVL775:
2779:src/keys.c    **** 		}
 9208              		.loc 1 2779 11 view .LVU2882
 9209 11e2 FFF79EB9 		b	.L622
 9210              	.LVL776:
 9211              	.L881:
2779:src/keys.c    **** 		}
 9212              		.loc 1 2779 11 view .LVU2883
 9213 11e6 3268     		ldr	r2, [r6]
2782:src/keys.c    **** 	}
 9214              		.loc 1 2782 10 view .LVU2884
 9215 11e8 4FF0330B 		mov	fp, #51
 9216              	.LVL777:
2782:src/keys.c    **** 	}
 9217              		.loc 1 2782 10 view .LVU2885
 9218 11ec FEF761BF 		b	.L565
 9219              	.LVL778:
 9220              	.L734:
2733:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 9221              		.loc 1 2733 3 is_stmt 1 view .LVU2886
2733:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 9222              		.loc 1 2733 13 is_stmt 0 view .LVU2887
 9223 11f0 B8F80830 		ldrh	r3, [r8, #8]
2733:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 9224              		.loc 1 2733 6 view .LVU2888
 9225 11f4 002B     		cmp	r3, #0
 9226 11f6 00F09C84 		beq	.L735
2734:src/keys.c    **** 				State2.digval = global_regs();
 9227              		.loc 1 2734 4 is_stmt 1 view .LVU2889
2734:src/keys.c    **** 				State2.digval = global_regs();
 9228              		.loc 1 2734 8 is_stmt 0 view .LVU2890
 9229 11fa 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2734:src/keys.c    **** 				State2.digval = global_regs();
 9230              		.loc 1 2734 7 view .LVU2891
 9231 11fe D207     		lsls	r2, r2, #31
 9232 1200 02D4     		bmi	.L736
2734:src/keys.c    **** 				State2.digval = global_regs();
 9233              		.loc 1 2734 23 view .LVU2892
 9234 1202 642B     		cmp	r3, #100
 9235 1204 00F09B84 		beq	.L1175
 9236              	.LVL779:
 9237              	.L736:
2736:src/keys.c    **** 		}
 9238              		.loc 1 2736 4 is_stmt 1 view .LVU2893
 9239 1208 B8F80830 		ldrh	r3, [r8, #8]
 9240 120c 013B     		subs	r3, r3, #1
 9241              	.L1095:
2736:src/keys.c    **** 		}
 9242              		.loc 1 2736 4 is_stmt 0 view .LVU2894
 9243 120e A8F80830 		strh	r3, [r8, #8]	@ movhi
 9244              	.LVL780:
 9245              	.L727:
2788:src/keys.c    **** 	return STATE_UNFINISHED;
 9246              		.loc 1 2788 2 is_stmt 1 view .LVU2895
2788:src/keys.c    **** 	return STATE_UNFINISHED;
 9247              		.loc 1 2788 16 is_stmt 0 view .LVU2896
ARM GAS  /tmp/cccKVeLo.s 			page 267


 9248 1212 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
 9249 1216 3268     		ldr	r2, [r6]
 9250 1218 6FF3C503 		bfc	r3, #3, #3
 9251 121c 88F81430 		strb	r3, [r8, #20]
2789:src/keys.c    **** }
 9252              		.loc 1 2789 2 is_stmt 1 view .LVU2897
2789:src/keys.c    **** }
 9253              		.loc 1 2789 9 is_stmt 0 view .LVU2898
 9254 1220 4FF0330B 		mov	fp, #51
 9255              	.LVL781:
2789:src/keys.c    **** }
 9256              		.loc 1 2789 9 view .LVU2899
 9257 1224 FEF745BF 		b	.L565
 9258              	.LVL782:
 9259              	.L741:
2760:src/keys.c    **** 			return STATE_UNFINISHED;
 9260              		.loc 1 2760 3 is_stmt 1 view .LVU2900
2760:src/keys.c    **** 			return STATE_UNFINISHED;
 9261              		.loc 1 2760 7 is_stmt 0 view .LVU2901
 9262 1228 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
2760:src/keys.c    **** 			return STATE_UNFINISHED;
 9263              		.loc 1 2760 6 view .LVU2902
 9264 122c 13F02002 		ands	r2, r3, #32
 9265 1230 40F0CA83 		bne	.L745
2762:src/keys.c    **** 
 9266              		.loc 1 2762 3 is_stmt 1 view .LVU2903
2784:src/keys.c    **** 	State2.digval = 0;
 9267              		.loc 1 2784 2 view .LVU2904
2784:src/keys.c    **** 	State2.digval = 0;
 9268              		.loc 1 2784 22 is_stmt 0 view .LVU2905
 9269 1234 62F3C303 		bfi	r3, r2, #3, #1
 9270 1238 88F81730 		strb	r3, [r8, #23]
2785:src/keys.c    **** 	State2.digval2 = 0;
 9271              		.loc 1 2785 2 is_stmt 1 view .LVU2906
2785:src/keys.c    **** 	State2.digval2 = 0;
 9272              		.loc 1 2785 16 is_stmt 0 view .LVU2907
 9273 123c A8F80820 		strh	r2, [r8, #8]	@ movhi
2786:src/keys.c    **** reset_window:
 9274              		.loc 1 2786 2 is_stmt 1 view .LVU2908
2786:src/keys.c    **** reset_window:
 9275              		.loc 1 2786 17 is_stmt 0 view .LVU2909
 9276 1240 88F80A20 		strb	r2, [r8, #10]
 9277 1244 E5E7     		b	.L727
 9278              	.L743:
2765:src/keys.c    **** 			State2.disp_as_alpha = 1;
 9279              		.loc 1 2765 3 is_stmt 1 view .LVU2910
2765:src/keys.c    **** 			State2.disp_as_alpha = 1;
 9280              		.loc 1 2765 6 is_stmt 0 view .LVU2911
 9281 1246 B9F1010F 		cmp	r9, #1
 9282 124a B5D1     		bne	.L744
2766:src/keys.c    **** 			goto reset_window;
 9283              		.loc 1 2766 4 is_stmt 1 view .LVU2912
2766:src/keys.c    **** 			goto reset_window;
 9284              		.loc 1 2766 25 is_stmt 0 view .LVU2913
 9285 124c 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9286 1250 43F00403 		orr	r3, r3, #4
 9287 1254 88F81630 		strb	r3, [r8, #22]
ARM GAS  /tmp/cccKVeLo.s 			page 268


2767:src/keys.c    **** 		}
 9288              		.loc 1 2767 4 is_stmt 1 view .LVU2914
 9289 1258 DBE7     		b	.L727
 9290              	.L737:
2743:src/keys.c    **** 			State2.digval++;
 9291              		.loc 1 2743 3 view .LVU2915
2743:src/keys.c    **** 			State2.digval++;
 9292              		.loc 1 2743 13 is_stmt 0 view .LVU2916
 9293 125a B8F80830 		ldrh	r3, [r8, #8]
2743:src/keys.c    **** 			State2.digval++;
 9294              		.loc 1 2743 27 view .LVU2917
 9295 125e 0AF1FF3A 		add	r10, r10, #-1
 9296              	.LVL783:
2743:src/keys.c    **** 			State2.digval++;
 9297              		.loc 1 2743 6 view .LVU2918
 9298 1262 5345     		cmp	r3, r10
 9299 1264 80F28484 		bge	.L738
2744:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 9300              		.loc 1 2744 4 is_stmt 1 view .LVU2919
2745:src/keys.c    **** 				State2.digval = regX_idx;
 9301              		.loc 1 2745 8 is_stmt 0 view .LVU2920
 9302 1268 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2744:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 9303              		.loc 1 2744 17 view .LVU2921
 9304 126c 0133     		adds	r3, r3, #1
 9305 126e 9CB2     		uxth	r4, r3
2745:src/keys.c    **** 				State2.digval = regX_idx;
 9306              		.loc 1 2745 7 view .LVU2922
 9307 1270 D307     		lsls	r3, r2, #31
2744:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 9308              		.loc 1 2744 17 view .LVU2923
 9309 1272 A8F80840 		strh	r4, [r8, #8]	@ movhi
2745:src/keys.c    **** 				State2.digval = regX_idx;
 9310              		.loc 1 2745 4 is_stmt 1 view .LVU2924
2745:src/keys.c    **** 				State2.digval = regX_idx;
 9311              		.loc 1 2745 7 is_stmt 0 view .LVU2925
 9312 1276 CCD4     		bmi	.L727
2745:src/keys.c    **** 				State2.digval = regX_idx;
 9313              		.loc 1 2745 43 view .LVU2926
 9314 1278 FFF7FEFF 		bl	global_regs
 9315              	.LVL784:
2745:src/keys.c    **** 				State2.digval = regX_idx;
 9316              		.loc 1 2745 23 view .LVU2927
 9317 127c 8442     		cmp	r4, r0
 9318 127e C8D1     		bne	.L727
2746:src/keys.c    **** 		}
 9319              		.loc 1 2746 5 is_stmt 1 view .LVU2928
2746:src/keys.c    **** 		}
 9320              		.loc 1 2746 19 is_stmt 0 view .LVU2929
 9321 1280 6423     		movs	r3, #100
 9322 1282 A8F80830 		strh	r3, [r8, #8]	@ movhi
 9323 1286 C4E7     		b	.L727
 9324              	.LVL785:
 9325              	.L616:
2746:src/keys.c    **** 		}
 9326              		.loc 1 2746 19 view .LVU2930
 9327              	.LBE1072:
ARM GAS  /tmp/cccKVeLo.s 			page 269


 9328              	.LBE1080:
 9329              	.LBB1081:
 9330              	.LBB841:
1261:src/keys.c    **** #endif
 9331              		.loc 1 1261 4 is_stmt 1 view .LVU2931
1261:src/keys.c    **** #endif
 9332              		.loc 1 1261 18 view .LVU2932
1261:src/keys.c    **** #endif
 9333              		.loc 1 1261 18 is_stmt 0 view .LVU2933
 9334 1288 89F00109 		eor	r9, r9, #1
 9335              	.LVL786:
1261:src/keys.c    **** #endif
 9336              		.loc 1 1261 18 view .LVU2934
 9337 128c 37E4     		b	.L623
 9338              	.LVL787:
 9339              	.L1146:
1261:src/keys.c    **** #endif
 9340              		.loc 1 1261 18 view .LVU2935
 9341              	.LBE841:
 9342              	.LBE1081:
 9343              	.LBB1082:
 9344              	.LBB821:
1348:src/keys.c    **** #endif
 9345              		.loc 1 1348 44 is_stmt 1 view .LVU2936
1348:src/keys.c    **** #endif
 9346              		.loc 1 1348 52 is_stmt 0 view .LVU2937
 9347 128e 0420     		movs	r0, #4
 9348 1290 FFF7FEFF 		bl	gtodot_digit
 9349              	.LVL788:
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9350              		.loc 1 1391 2 is_stmt 1 view .LVU2938
 9351              	.LBE821:
 9352              	.LBE1082:
2857:src/keys.c    **** 
 9353              		.loc 1 2857 10 is_stmt 0 view .LVU2939
 9354 1294 4FF0330B 		mov	fp, #51
 9355 1298 3268     		ldr	r2, [r6]
 9356 129a FEF70ABF 		b	.L565
 9357              	.LVL789:
 9358              	.L1147:
 9359              	.LBB1083:
 9360              	.LBB822:
1352:src/keys.c    **** 		goto fin;
 9361              		.loc 1 1352 3 is_stmt 1 view .LVU2940
 9362              	.LBB814:
 9363              	.LBI814:
1324:src/keys.c    **** 	const int code = 100 + n;
 9364              		.loc 1 1324 12 view .LVU2941
 9365              	.LBB815:
1325:src/keys.c    **** 	unsigned int pc = state_pc();
 9366              		.loc 1 1325 2 view .LVU2942
1326:src/keys.c    **** 
 9367              		.loc 1 1326 2 view .LVU2943
1326:src/keys.c    **** 
 9368              		.loc 1 1326 20 is_stmt 0 view .LVU2944
 9369 129e DFF84891 		ldr	r9, .L1212+12
 9370 12a2 D9F80030 		ldr	r3, [r9]
ARM GAS  /tmp/cccKVeLo.s 			page 270


 9371              	.LVL790:
1326:src/keys.c    **** 
 9372              		.loc 1 1326 15 view .LVU2945
 9373 12a6 B3F8E007 		ldrh	r0, [r3, #2016]
 9374              	.LVL791:
1328:src/keys.c    **** 		pc = 1;
 9375              		.loc 1 1328 2 is_stmt 1 view .LVU2946
1328:src/keys.c    **** 		pc = 1;
 9376              		.loc 1 1328 5 is_stmt 0 view .LVU2947
 9377 12aa 830B     		lsrs	r3, r0, #14
1329:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
 9378              		.loc 1 1329 6 view .LVU2948
 9379 12ac 032B     		cmp	r3, #3
 9380              	.LVL792:
1330:src/keys.c    **** 	if (pc > 0)
 9381              		.loc 1 1330 2 is_stmt 1 view .LVU2949
1330:src/keys.c    **** 	if (pc > 0)
 9382              		.loc 1 1330 7 is_stmt 0 view .LVU2950
 9383 12ae 08BF     		it	eq
 9384 12b0 0120     		moveq	r0, #1
 9385              	.LVL793:
1330:src/keys.c    **** 	if (pc > 0)
 9386              		.loc 1 1330 7 view .LVU2951
 9387 12b2 04F16401 		add	r1, r4, #100
 9388              	.LVL794:
1330:src/keys.c    **** 	if (pc > 0)
 9389              		.loc 1 1330 7 view .LVU2952
 9390 12b6 0322     		movs	r2, #3
 9391              	.LVL795:
1330:src/keys.c    **** 	if (pc > 0)
 9392              		.loc 1 1330 7 view .LVU2953
 9393 12b8 FFF7FEFF 		bl	find_label_from
 9394              	.LVL796:
1331:src/keys.c    **** 		return pc;
 9395              		.loc 1 1331 2 is_stmt 1 view .LVU2954
1331:src/keys.c    **** 		return pc;
 9396              		.loc 1 1331 5 is_stmt 0 view .LVU2955
 9397 12bc 0028     		cmp	r0, #0
 9398 12be 7FF449AD 		bne	.L607
1333:src/keys.c    **** }
 9399              		.loc 1 1333 2 is_stmt 1 view .LVU2956
1333:src/keys.c    **** }
 9400              		.loc 1 1333 9 is_stmt 0 view .LVU2957
 9401 12c2 D9F80030 		ldr	r3, [r9]
 9402 12c6 B3F8E007 		ldrh	r0, [r3, #2016]
 9403              	.LVL797:
1333:src/keys.c    **** }
 9404              		.loc 1 1333 9 view .LVU2958
 9405              	.LBE815:
 9406              	.LBE814:
1353:src/keys.c    **** 	}
 9407              		.loc 1 1353 3 is_stmt 1 view .LVU2959
 9408 12ca 43E5     		b	.L607
 9409              	.LVL798:
 9410              	.L941:
1353:src/keys.c    **** 	}
 9411              		.loc 1 1353 3 is_stmt 0 view .LVU2960
ARM GAS  /tmp/cccKVeLo.s 			page 271


 9412              	.LBE822:
 9413              	.LBE1083:
 9414              	.LBB1084:
 9415              	.LBB802:
1952:src/keys.c    **** 	}
 9416              		.loc 1 1952 18 view .LVU2961
 9417 12cc 2723     		movs	r3, #39
1952:src/keys.c    **** 	}
 9418              		.loc 1 1952 47 view .LVU2962
 9419 12ce 9B44     		add	fp, fp, r3
 9420              	.LVL799:
1952:src/keys.c    **** 	}
 9421              		.loc 1 1952 47 view .LVU2963
 9422 12d0 FFF7B2B8 		b	.L595
 9423              	.LVL800:
 9424              	.L1131:
1952:src/keys.c    **** 	}
 9425              		.loc 1 1952 47 view .LVU2964
 9426              	.LBE802:
 9427              	.LBE1084:
2918:src/keys.c    **** 
 9428              		.loc 1 2918 3 is_stmt 1 view .LVU2965
 9429              	.LBB1085:
 9430              	.LBI1085:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 9431              		.loc 1 104 13 view .LVU2966
 9432              	.LBE1085:
 9433              	.LBE1244:
 9434              	.LBE1319:
 105:src/keys.c    **** }
 9435              		.loc 1 105 2 view .LVU2967
 9436              	.LBB1320:
 9437              	.LBB1245:
 9438              	.LBB1092:
 9439              	.LBB1086:
 9440              	.LBI1086:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 9441              		.loc 1 94 20 view .LVU2968
 9442              	.LBB1087:
  95:src/keys.c    **** 	State2.shifts = shift;
 9443              		.loc 1 95 2 view .LVU2969
 9444              	.LBB1088:
 9445              	.LBI1088:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 9446              		.loc 1 86 13 view .LVU2970
 9447              	.LBB1089:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9448              		.loc 1 87 2 view .LVU2971
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9449              		.loc 1 87 18 is_stmt 0 view .LVU2972
 9450 12d4 FFF7FEFF 		bl	shift_down
 9451              	.LVL801:
  88:src/keys.c    **** }
 9452              		.loc 1 88 2 is_stmt 1 view .LVU2973
  88:src/keys.c    **** }
 9453              		.loc 1 88 52 is_stmt 0 view .LVU2974
 9454 12d8 0146     		mov	r1, r0
ARM GAS  /tmp/cccKVeLo.s 			page 272


 9455 12da 08B9     		cbnz	r0, .L747
 9456 12dc 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 9457              	.L747:
 9458              	.LVL802:
  88:src/keys.c    **** }
 9459              		.loc 1 88 52 view .LVU2975
 9460              	.LBE1089:
 9461              	.LBE1088:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9462              		.loc 1 96 2 is_stmt 1 view .LVU2976
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9463              		.loc 1 96 16 is_stmt 0 view .LVU2977
 9464 12e0 0022     		movs	r2, #0
 9465              	.LBE1087:
 9466              	.LBE1086:
 9467              	.LBE1092:
2918:src/keys.c    **** 
 9468              		.loc 1 2918 10 view .LVU2978
 9469 12e2 2046     		mov	r0, r4
 9470              	.LBB1093:
 9471              	.LBB1091:
 9472              	.LBB1090:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9473              		.loc 1 96 16 view .LVU2979
 9474 12e4 88F81020 		strb	r2, [r8, #16]
  98:src/keys.c    **** }
 9475              		.loc 1 98 2 is_stmt 1 view .LVU2980
 9476              	.LVL803:
  98:src/keys.c    **** }
 9477              		.loc 1 98 2 is_stmt 0 view .LVU2981
 9478              	.LBE1090:
 9479              	.LBE1091:
 9480              	.LBE1093:
2918:src/keys.c    **** 
 9481              		.loc 1 2918 10 view .LVU2982
 9482 12e8 FFF7FEFF 		bl	process_catalogue
 9483              	.LVL804:
2918:src/keys.c    **** 
 9484              		.loc 1 2918 10 view .LVU2983
 9485 12ec 8346     		mov	fp, r0
 9486 12ee FFF7A3B8 		b	.L595
 9487              	.LVL805:
 9488              	.L942:
 9489              	.LBB1094:
 9490              	.LBB803:
1952:src/keys.c    **** 	}
 9491              		.loc 1 1952 18 view .LVU2984
 9492 12f2 1E23     		movs	r3, #30
1952:src/keys.c    **** 	}
 9493              		.loc 1 1952 47 view .LVU2985
 9494 12f4 9B44     		add	fp, fp, r3
 9495              	.LVL806:
1952:src/keys.c    **** 	}
 9496              		.loc 1 1952 47 view .LVU2986
 9497 12f6 FFF79FB8 		b	.L595
 9498              	.LVL807:
 9499              	.L1155:
ARM GAS  /tmp/cccKVeLo.s 			page 273


1952:src/keys.c    **** 	}
 9500              		.loc 1 1952 47 view .LVU2987
 9501              	.LBE803:
 9502              	.LBE1094:
 9503              	.LBB1095:
 9504              	.LBB862:
2506:src/keys.c    **** 		return STATE_UNFINISHED;
 9505              		.loc 1 2506 3 is_stmt 1 view .LVU2988
 9506 12fa 3268     		ldr	r2, [r6]
 9507              	.LVL808:
2506:src/keys.c    **** 		return STATE_UNFINISHED;
 9508              		.loc 1 2506 17 is_stmt 0 view .LVU2989
 9509 12fc 88F80C00 		strb	r0, [r8, #12]
2507:src/keys.c    **** 	} 
 9510              		.loc 1 2507 3 is_stmt 1 view .LVU2990
 9511              	.LBE862:
 9512              	.LBE1095:
2866:src/keys.c    **** 
 9513              		.loc 1 2866 10 is_stmt 0 view .LVU2991
 9514 1300 4FF0330B 		mov	fp, #51
 9515              	.LBB1096:
 9516              	.LBB863:
2507:src/keys.c    **** 	} 
 9517              		.loc 1 2507 10 view .LVU2992
 9518 1304 FEF7D5BE 		b	.L565
 9519              	.LVL809:
 9520              	.L1132:
2507:src/keys.c    **** 	} 
 9521              		.loc 1 2507 10 view .LVU2993
 9522              	.LBE863:
 9523              	.LBE1096:
2922:src/keys.c    **** #else
 9524              		.loc 1 2922 3 is_stmt 1 view .LVU2994
 9525              	.LBB1097:
 9526              	.LBI697:
1404:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
 9527              		.loc 1 1404 12 view .LVU2995
 9528              	.LBB750:
1405:src/keys.c    ****         int op = STATE_UNFINISHED;
 9529              		.loc 1 1405 2 view .LVU2996
1405:src/keys.c    ****         int op = STATE_UNFINISHED;
 9530              		.loc 1 1405 33 is_stmt 0 view .LVU2997
 9531 1308 98F80D90 		ldrb	r9, [r8, #13]	@ zero_extendqisi2
 9532              	.LBB699:
 9533              	.LBB700:
 9534              	.LBB701:
 9535              	.LBB702:
 9536              	.LBB703:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9537              		.loc 1 87 18 view .LVU2998
 9538 130c FFF7FEFF 		bl	shift_down
 9539              	.LVL810:
 9540              	.LBE703:
 9541              	.LBE702:
 9542              	.LBE701:
 9543              	.LBE700:
 9544              	.LBE699:
ARM GAS  /tmp/cccKVeLo.s 			page 274


1405:src/keys.c    ****         int op = STATE_UNFINISHED;
 9545              		.loc 1 1405 15 view .LVU2999
 9546 1310 CA46     		mov	r10, r9
 9547              	.LVL811:
1406:src/keys.c    **** 	const enum shifts shift = reset_shift();
 9548              		.loc 1 1406 9 is_stmt 1 view .LVU3000
1407:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
 9549              		.loc 1 1407 2 view .LVU3001
 9550              	.LBB712:
 9551              	.LBI699:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 9552              		.loc 1 104 13 view .LVU3002
 9553              	.LBE712:
 9554              	.LBE750:
 9555              	.LBE1097:
 9556              	.LBE1245:
 9557              	.LBE1320:
 105:src/keys.c    **** }
 9558              		.loc 1 105 2 view .LVU3003
 9559              	.LBB1321:
 9560              	.LBB1246:
 9561              	.LBB1098:
 9562              	.LBB751:
 9563              	.LBB713:
 9564              	.LBB709:
 9565              	.LBI700:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 9566              		.loc 1 94 20 view .LVU3004
 9567              	.LBB706:
  95:src/keys.c    **** 	State2.shifts = shift;
 9568              		.loc 1 95 2 view .LVU3005
 9569              	.LBB705:
 9570              	.LBI702:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 9571              		.loc 1 86 13 view .LVU3006
 9572              	.LBB704:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9573              		.loc 1 87 2 view .LVU3007
  88:src/keys.c    **** }
 9574              		.loc 1 88 2 view .LVU3008
  88:src/keys.c    **** }
 9575              		.loc 1 88 52 is_stmt 0 view .LVU3009
 9576 1312 08B9     		cbnz	r0, .L749
 9577 1314 98F81000 		ldrb	r0, [r8, #16]	@ zero_extendqisi2
 9578              	.LVL812:
 9579              	.L749:
  88:src/keys.c    **** }
 9580              		.loc 1 88 52 view .LVU3010
 9581              	.LBE704:
 9582              	.LBE705:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9583              		.loc 1 96 2 is_stmt 1 view .LVU3011
 9584              	.LBE706:
 9585              	.LBE709:
 9586              	.LBE713:
 9587              	.LBB714:
 9588              	.LBB715:
ARM GAS  /tmp/cccKVeLo.s 			page 275


 439:src/keys.c    **** 		if (shift == SHIFT_N)
 9589              		.loc 1 439 6 is_stmt 0 view .LVU3012
 9590 1318 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9591              	.LBE715:
 9592              	.LBE714:
 9593              	.LBB731:
 9594              	.LBB710:
 9595              	.LBB707:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9596              		.loc 1 96 16 view .LVU3013
 9597 131c 4FF0000C 		mov	ip, #0
 9598              	.LBE707:
 9599              	.LBE710:
 9600              	.LBE731:
 9601              	.LBB732:
 9602              	.LBB726:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 9603              		.loc 1 439 5 view .LVU3014
 9604 1320 D906     		lsls	r1, r3, #27
 9605              	.LBE726:
 9606              	.LBE732:
 9607              	.LBB733:
 9608              	.LBB711:
 9609              	.LBB708:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9610              		.loc 1 96 16 view .LVU3015
 9611 1322 88F810C0 		strb	ip, [r8, #16]
  98:src/keys.c    **** }
 9612              		.loc 1 98 2 is_stmt 1 view .LVU3016
 9613              	.LVL813:
  98:src/keys.c    **** }
 9614              		.loc 1 98 2 is_stmt 0 view .LVU3017
 9615              	.LBE708:
 9616              	.LBE711:
 9617              	.LBE733:
1408:src/keys.c    **** 	State2.alpha_pos = 0;
 9618              		.loc 1 1408 2 is_stmt 1 view .LVU3018
1408:src/keys.c    **** 	State2.alpha_pos = 0;
 9619              		.loc 1 1408 11 is_stmt 0 view .LVU3019
 9620 1326 0246     		mov	r2, r0
 9621              	.LVL814:
 9622              	.LBB734:
 9623              	.LBI714:
 389:src/keys.c    **** {
 9624              		.loc 1 389 12 is_stmt 1 view .LVU3020
 9625              	.LBB727:
 391:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 9626              		.loc 1 391 2 view .LVU3021
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 9627              		.loc 1 439 2 view .LVU3022
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 9628              		.loc 1 439 5 is_stmt 0 view .LVU3023
 9629 1328 40F19C80 		bpl	.L750
 440:src/keys.c    **** 			shift = SHIFT_LC_N;
 9630              		.loc 1 440 3 is_stmt 1 view .LVU3024
 440:src/keys.c    **** 			shift = SHIFT_LC_N;
 9631              		.loc 1 440 6 is_stmt 0 view .LVU3025
ARM GAS  /tmp/cccKVeLo.s 			page 276


 9632 132c 0028     		cmp	r0, #0
 9633 132e 00F09880 		beq	.L926
 442:src/keys.c    **** 			shift = SHIFT_LC_G;
 9634              		.loc 1 442 8 is_stmt 1 view .LVU3026
 9635              	.LBB716:
 9636              	.LBB717:
 133:src/keys.c    **** }
 9637              		.loc 1 133 23 is_stmt 0 view .LVU3027
 9638 1332 2A49     		ldr	r1, .L1212
 9639              	.LBE717:
 9640              	.LBE716:
 445:src/keys.c    **** }
 9641              		.loc 1 445 49 view .LVU3028
 9642 1334 2B4A     		ldr	r2, .L1212+8
 9643              	.LBB722:
 9644              	.LBB718:
 133:src/keys.c    **** }
 9645              		.loc 1 133 23 view .LVU3029
 9646 1336 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 9647              	.LBE718:
 9648              	.LBE722:
 9649              	.LBE727:
 9650              	.LBE734:
1409:src/keys.c    **** 
 9651              		.loc 1 1409 19 view .LVU3030
 9652 1338 88F80DC0 		strb	ip, [r8, #13]
 9653              	.LBB735:
 9654              	.LBB728:
 443:src/keys.c    **** 	}
 9655              		.loc 1 443 10 view .LVU3031
 9656 133c 0228     		cmp	r0, #2
 445:src/keys.c    **** }
 9657              		.loc 1 445 49 view .LVU3032
 9658 133e 4FF0060C 		mov	ip, #6
 9659 1342 0CFB0121 		mla	r1, ip, r1, r2
 443:src/keys.c    **** 	}
 9660              		.loc 1 443 10 view .LVU3033
 9661 1346 14BF     		ite	ne
 9662 1348 0246     		movne	r2, r0
 9663 134a 0522     		moveq	r2, #5
 9664              	.LVL815:
 445:src/keys.c    **** }
 9665              		.loc 1 445 2 is_stmt 1 view .LVU3034
 9666              	.LBB723:
 9667              	.LBI716:
 121:src/keys.c    **** {
 9668              		.loc 1 121 12 view .LVU3035
 9669              	.LBB719:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9670              		.loc 1 123 2 view .LVU3036
 133:src/keys.c    **** }
 9671              		.loc 1 133 2 view .LVU3037
 133:src/keys.c    **** }
 9672              		.loc 1 133 2 is_stmt 0 view .LVU3038
 9673 134c 063C     		subs	r4, r4, #6
 9674              	.LBE719:
 9675              	.LBE723:
ARM GAS  /tmp/cccKVeLo.s 			page 277


 445:src/keys.c    **** }
 9676              		.loc 1 445 49 view .LVU3039
 9677 134e 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 9678              	.LVL816:
 445:src/keys.c    **** }
 9679              		.loc 1 445 49 view .LVU3040
 9680              	.LBE728:
 9681              	.LBE735:
1409:src/keys.c    **** 
 9682              		.loc 1 1409 2 is_stmt 1 view .LVU3041
1411:src/keys.c    **** 	case K10:	// STO
 9683              		.loc 1 1411 2 view .LVU3042
 9684 1350 212C     		cmp	r4, #33
 9685 1352 23D8     		bhi	.L753
 9686 1354 DFE814F0 		tbh	[pc, r4, lsl #1]
 9687              	.L883:
 9688 1358 1B05     		.2byte	(.L762-.L883)/2
 9689 135a 0905     		.2byte	(.L761-.L883)/2
 9690 135c 2200     		.2byte	(.L753-.L883)/2
 9691 135e 2200     		.2byte	(.L753-.L883)/2
 9692 1360 2200     		.2byte	(.L753-.L883)/2
 9693 1362 2200     		.2byte	(.L753-.L883)/2
 9694 1364 EE04     		.2byte	(.L760-.L883)/2
 9695 1366 2200     		.2byte	(.L753-.L883)/2
 9696 1368 2200     		.2byte	(.L753-.L883)/2
 9697 136a 2200     		.2byte	(.L753-.L883)/2
 9698 136c E204     		.2byte	(.L769-.L883)/2
 9699 136e 2200     		.2byte	(.L753-.L883)/2
 9700 1370 BE04     		.2byte	(.L758-.L883)/2
 9701 1372 2200     		.2byte	(.L753-.L883)/2
 9702 1374 2200     		.2byte	(.L753-.L883)/2
 9703 1376 2200     		.2byte	(.L753-.L883)/2
 9704 1378 2200     		.2byte	(.L753-.L883)/2
 9705 137a 2200     		.2byte	(.L753-.L883)/2
 9706 137c B004     		.2byte	(.L757-.L883)/2
 9707 137e 2200     		.2byte	(.L753-.L883)/2
 9708 1380 2200     		.2byte	(.L753-.L883)/2
 9709 1382 2200     		.2byte	(.L753-.L883)/2
 9710 1384 2200     		.2byte	(.L753-.L883)/2
 9711 1386 2200     		.2byte	(.L753-.L883)/2
 9712 1388 2200     		.2byte	(.L753-.L883)/2
 9713 138a 2200     		.2byte	(.L753-.L883)/2
 9714 138c 2200     		.2byte	(.L753-.L883)/2
 9715 138e 2200     		.2byte	(.L753-.L883)/2
 9716 1390 2200     		.2byte	(.L753-.L883)/2
 9717 1392 2200     		.2byte	(.L753-.L883)/2
 9718 1394 7304     		.2byte	(.L756-.L883)/2
 9719 1396 2200     		.2byte	(.L753-.L883)/2
 9720 1398 2200     		.2byte	(.L753-.L883)/2
 9721 139a 6704     		.2byte	(.L754-.L883)/2
 9722              		.p2align 1
 9723              	.L753:
1516:src/keys.c    **** 		return STATE_UNFINISHED;
 9724              		.loc 1 1516 2 view .LVU3043
1516:src/keys.c    **** 		return STATE_UNFINISHED;
 9725              		.loc 1 1516 5 is_stmt 0 view .LVU3044
 9726 139c 0029     		cmp	r1, #0
ARM GAS  /tmp/cccKVeLo.s 			page 278


 9727 139e 00F09782 		beq	.L1176
1518:src/keys.c    **** }
 9728              		.loc 1 1518 2 is_stmt 1 view .LVU3045
1518:src/keys.c    **** }
 9729              		.loc 1 1518 9 is_stmt 0 view .LVU3046
 9730 13a2 41F4884B 		orr	fp, r1, #17408
 9731 13a6 5846     		mov	r0, fp
 9732              	.LVL817:
1518:src/keys.c    **** }
 9733              		.loc 1 1518 9 view .LVU3047
 9734 13a8 FFF7BBB8 		b	.L622
 9735              	.LVL818:
 9736              	.L1150:
1518:src/keys.c    **** }
 9737              		.loc 1 1518 9 view .LVU3048
 9738              	.LBE751:
 9739              	.LBE1098:
 9740              	.LBB1099:
 9741              	.LBB823:
1366:src/keys.c    **** 			goto fin2;
 9742              		.loc 1 1366 3 is_stmt 1 view .LVU3049
1366:src/keys.c    **** 			goto fin2;
 9743              		.loc 1 1366 13 is_stmt 0 view .LVU3050
 9744 13ac 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 9745              	.LVL819:
1366:src/keys.c    **** 			goto fin2;
 9746              		.loc 1 1366 6 view .LVU3051
 9747 13b0 002B     		cmp	r3, #0
 9748 13b2 3FF4D1AC 		beq	.L611
1369:src/keys.c    **** 			State2.digval /= 10;
 9749              		.loc 1 1369 4 is_stmt 1 view .LVU3052
1369:src/keys.c    **** 			State2.digval /= 10;
 9750              		.loc 1 1369 19 is_stmt 0 view .LVU3053
 9751 13b6 013B     		subs	r3, r3, #1
 9752 13b8 88F80B30 		strb	r3, [r8, #11]
1370:src/keys.c    **** 		}
 9753              		.loc 1 1370 4 is_stmt 1 view .LVU3054
1370:src/keys.c    **** 		}
 9754              		.loc 1 1370 18 is_stmt 0 view .LVU3055
 9755 13bc 0A21     		movs	r1, #10
 9756 13be B8F80830 		ldrh	r3, [r8, #8]
 9757 13c2 3268     		ldr	r2, [r6]
 9758              	.LVL820:
1370:src/keys.c    **** 		}
 9759              		.loc 1 1370 18 view .LVU3056
 9760 13c4 B3FBF1F3 		udiv	r3, r3, r1
 9761              	.LBE823:
 9762              	.LBE1099:
2857:src/keys.c    **** 
 9763              		.loc 1 2857 10 view .LVU3057
 9764 13c8 4FF0330B 		mov	fp, #51
 9765              	.LBB1100:
 9766              	.LBB824:
1370:src/keys.c    **** 		}
 9767              		.loc 1 1370 18 view .LVU3058
 9768 13cc A8F80830 		strh	r3, [r8, #8]	@ movhi
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
ARM GAS  /tmp/cccKVeLo.s 			page 279


 9769              		.loc 1 1391 2 is_stmt 1 view .LVU3059
 9770 13d0 FEF76FBE 		b	.L565
 9771              	.LVL821:
 9772              	.L1148:
1357:src/keys.c    **** 		goto fin;
 9773              		.loc 1 1357 3 view .LVU3060
1357:src/keys.c    **** 		goto fin;
 9774              		.loc 1 1357 11 is_stmt 0 view .LVU3061
 9775 13d4 044B     		ldr	r3, .L1212+12
 9776              	.LVL822:
1357:src/keys.c    **** 		goto fin;
 9777              		.loc 1 1357 11 view .LVU3062
 9778 13d6 1B68     		ldr	r3, [r3]
1357:src/keys.c    **** 		goto fin;
 9779              		.loc 1 1357 9 view .LVU3063
 9780 13d8 5888     		ldrh	r0, [r3, #2]
 9781              	.LVL823:
1358:src/keys.c    **** 	}
 9782              		.loc 1 1358 3 is_stmt 1 view .LVU3064
 9783 13da BBE4     		b	.L607
 9784              	.L1213:
 9785              		.align	2
 9786              	.L1212:
 9787 13dc 00000000 		.word	.LANCHOR1
 9788 13e0 00000000 		.word	.LANCHOR0
 9789 13e4 00000000 		.word	.LANCHOR9
 9790 13e8 00000000 		.word	main_ram
 9791              	.LVL824:
 9792              	.L1133:
1358:src/keys.c    **** 	}
 9793              		.loc 1 1358 3 is_stmt 0 view .LVU3065
 9794              	.LBE824:
 9795              	.LBE1100:
2934:src/keys.c    **** 	} else {
 9796              		.loc 1 2934 3 is_stmt 1 view .LVU3066
 9797              	.LBB1101:
 9798              	.LBI1101:
1109:src/keys.c    **** #define _RARG   0xFF00
 9799              		.loc 1 1109 12 view .LVU3067
 9800              	.LBB1102:
1114:src/keys.c    **** 		// Row 1
 9801              		.loc 1 1114 2 view .LVU3068
1165:src/keys.c    **** 	int lc = keycode_to_linear(c);
 9802              		.loc 1 1165 2 view .LVU3069
 9803              	.LBB1103:
 9804              	.LBI1103:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 9805              		.loc 1 104 13 view .LVU3070
 9806              	.LBE1103:
 9807              	.LBE1102:
 9808              	.LBE1101:
 9809              	.LBE1246:
 9810              	.LBE1321:
 105:src/keys.c    **** }
 9811              		.loc 1 105 2 view .LVU3071
 9812              	.LBB1322:
 9813              	.LBB1247:
ARM GAS  /tmp/cccKVeLo.s 			page 280


 9814              	.LBB1133:
 9815              	.LBB1127:
 9816              	.LBB1112:
 9817              	.LBB1104:
 9818              	.LBI1104:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 9819              		.loc 1 94 20 view .LVU3072
 9820              	.LBB1105:
  95:src/keys.c    **** 	State2.shifts = shift;
 9821              		.loc 1 95 2 view .LVU3073
 9822              	.LBB1106:
 9823              	.LBI1106:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 9824              		.loc 1 86 13 view .LVU3074
 9825              	.LBB1107:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9826              		.loc 1 87 2 view .LVU3075
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9827              		.loc 1 87 18 is_stmt 0 view .LVU3076
 9828 13ec FFF7FEFF 		bl	shift_down
 9829              	.LVL825:
  88:src/keys.c    **** }
 9830              		.loc 1 88 2 is_stmt 1 view .LVU3077
  88:src/keys.c    **** }
 9831              		.loc 1 88 52 is_stmt 0 view .LVU3078
 9832 13f0 8246     		mov	r10, r0
 9833              	.LVL826:
  88:src/keys.c    **** }
 9834              		.loc 1 88 52 view .LVU3079
 9835 13f2 08B9     		cbnz	r0, .L783
 9836 13f4 98F810A0 		ldrb	r10, [r8, #16]	@ zero_extendqisi2
 9837              	.L783:
 9838              	.LVL827:
  88:src/keys.c    **** }
 9839              		.loc 1 88 52 view .LVU3080
 9840              	.LBE1107:
 9841              	.LBE1106:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9842              		.loc 1 96 2 is_stmt 1 view .LVU3081
 9843              	.LBE1105:
 9844              	.LBE1104:
 9845              	.LBE1112:
 9846              	.LBB1113:
 9847              	.LBB1114:
 148:src/keys.c    **** }
 9848              		.loc 1 148 23 is_stmt 0 view .LVU3082
 9849 13f8 BA4B     		ldr	r3, .L1214
 9850              	.LBE1114:
 9851              	.LBE1113:
1167:src/keys.c    **** 	State2.cmplx = 0;
 9852              		.loc 1 1167 21 view .LVU3083
 9853 13fa BB48     		ldr	r0, .L1214+4
 9854              	.LBB1117:
 9855              	.LBB1115:
 148:src/keys.c    **** }
 9856              		.loc 1 148 23 view .LVU3084
 9857 13fc 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
ARM GAS  /tmp/cccKVeLo.s 			page 281


 9858              	.LBE1115:
 9859              	.LBE1117:
1168:src/keys.c    **** 
 9860              		.loc 1 1168 15 view .LVU3085
 9861 13fe 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
1167:src/keys.c    **** 	State2.cmplx = 0;
 9862              		.loc 1 1167 21 view .LVU3086
 9863 1402 0AEB8303 		add	r3, r10, r3, lsl #2
 9864              	.LBB1118:
 9865              	.LBB1110:
 9866              	.LBB1108:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9867              		.loc 1 96 16 view .LVU3087
 9868 1406 0021     		movs	r1, #0
 9869              	.LBE1108:
 9870              	.LBE1110:
 9871              	.LBE1118:
1167:src/keys.c    **** 	State2.cmplx = 0;
 9872              		.loc 1 1167 21 view .LVU3088
 9873 1408 30F813B0 		ldrh	fp, [r0, r3, lsl #1]
 9874              	.LBB1119:
 9875              	.LBB1111:
 9876              	.LBB1109:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9877              		.loc 1 96 16 view .LVU3089
 9878 140c 88F81010 		strb	r1, [r8, #16]
  98:src/keys.c    **** }
 9879              		.loc 1 98 2 is_stmt 1 view .LVU3090
 9880              	.LVL828:
  98:src/keys.c    **** }
 9881              		.loc 1 98 2 is_stmt 0 view .LVU3091
 9882              	.LBE1109:
 9883              	.LBE1111:
 9884              	.LBE1119:
1166:src/keys.c    **** 	int op = op_map[lc][shift];
 9885              		.loc 1 1166 2 is_stmt 1 view .LVU3092
 9886              	.LBB1120:
 9887              	.LBI1113:
 136:src/keys.c    **** {
 9888              		.loc 1 136 12 view .LVU3093
 9889              	.LBB1116:
 138:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9890              		.loc 1 138 2 view .LVU3094
 148:src/keys.c    **** }
 9891              		.loc 1 148 2 view .LVU3095
 148:src/keys.c    **** }
 9892              		.loc 1 148 2 is_stmt 0 view .LVU3096
 9893              	.LBE1116:
 9894              	.LBE1120:
1167:src/keys.c    **** 	State2.cmplx = 0;
 9895              		.loc 1 1167 2 is_stmt 1 view .LVU3097
1168:src/keys.c    **** 
 9896              		.loc 1 1168 2 view .LVU3098
1170:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9897              		.loc 1 1170 5 is_stmt 0 view .LVU3099
 9898 1410 0BF47F43 		and	r3, fp, #65280
1168:src/keys.c    **** 
ARM GAS  /tmp/cccKVeLo.s 			page 282


 9899              		.loc 1 1168 15 view .LVU3100
 9900 1414 61F34102 		bfi	r2, r1, #1, #1
1170:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9901              		.loc 1 1170 5 view .LVU3101
 9902 1418 B3F57F4F 		cmp	r3, #65280
1168:src/keys.c    **** 
 9903              		.loc 1 1168 15 view .LVU3102
 9904 141c 88F81520 		strb	r2, [r8, #21]
1170:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9905              		.loc 1 1170 2 is_stmt 1 view .LVU3103
1170:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9906              		.loc 1 1170 5 is_stmt 0 view .LVU3104
 9907 1420 00F03285 		beq	.L1177
1174:src/keys.c    **** 		// HYP
 9908              		.loc 1 1174 2 is_stmt 1 view .LVU3105
1174:src/keys.c    **** 		// HYP
 9909              		.loc 1 1174 5 is_stmt 0 view .LVU3106
 9910 1424 002C     		cmp	r4, #0
 9911 1426 00F01C85 		beq	.L1178
1183:src/keys.c    **** 		switch (c) {
 9912              		.loc 1 1183 2 is_stmt 1 view .LVU3107
1183:src/keys.c    **** 		switch (c) {
 9913              		.loc 1 1183 5 is_stmt 0 view .LVU3108
 9914 142a BAF1000F 		cmp	r10, #0
 9915 142e 3FF403A8 		beq	.L595
1184:src/keys.c    **** 		case K_CMPLX:
 9916              		.loc 1 1184 3 is_stmt 1 view .LVU3109
 9917 1432 242C     		cmp	r4, #36
 9918 1434 00F01185 		beq	.L787
 9919 1438 2D2C     		cmp	r4, #45
 9920 143a 00F00885 		beq	.L788
 9921 143e 1F2C     		cmp	r4, #31
 9922 1440 7EF4FAAF 		bne	.L595
1190:src/keys.c    **** 				if (is_bad_cmdline())
 9923              		.loc 1 1190 4 view .LVU3110
1190:src/keys.c    **** 				if (is_bad_cmdline())
 9924              		.loc 1 1190 7 is_stmt 0 view .LVU3111
 9925 1444 BBF1330F 		cmp	fp, #51
 9926 1448 00F06283 		beq	.L1179
1191:src/keys.c    **** 					return STATE_UNFINISHED;
 9927              		.loc 1 1191 5 is_stmt 1 view .LVU3112
1191:src/keys.c    **** 					return STATE_UNFINISHED;
 9928              		.loc 1 1191 9 is_stmt 0 view .LVU3113
 9929 144c FFF7FEFF 		bl	is_bad_cmdline
 9930              	.LVL829:
1191:src/keys.c    **** 					return STATE_UNFINISHED;
 9931              		.loc 1 1191 8 view .LVU3114
 9932 1450 0446     		mov	r4, r0
 9933 1452 0028     		cmp	r0, #0
 9934 1454 00F03C83 		beq	.L791
 9935 1458 3268     		ldr	r2, [r6]
1192:src/keys.c    **** 				process_cmdline_set_lift();
 9936              		.loc 1 1192 13 view .LVU3115
 9937 145a 4FF0330B 		mov	fp, #51
 9938              	.LVL830:
1192:src/keys.c    **** 				process_cmdline_set_lift();
 9939              		.loc 1 1192 13 view .LVU3116
ARM GAS  /tmp/cccKVeLo.s 			page 283


 9940 145e FEF728BE 		b	.L565
 9941              	.LVL831:
 9942              	.L926:
1192:src/keys.c    **** 				process_cmdline_set_lift();
 9943              		.loc 1 1192 13 view .LVU3117
 9944              	.LBE1127:
 9945              	.LBE1133:
 9946              	.LBB1134:
 9947              	.LBB752:
 9948              	.LBB736:
 9949              	.LBB729:
 441:src/keys.c    **** 		else if (shift == SHIFT_G)
 9950              		.loc 1 441 10 view .LVU3118
 9951 1462 0422     		movs	r2, #4
 9952              	.L750:
 9953              	.LVL832:
 445:src/keys.c    **** }
 9954              		.loc 1 445 2 is_stmt 1 view .LVU3119
 9955              	.LBB724:
 121:src/keys.c    **** {
 9956              		.loc 1 121 12 view .LVU3120
 9957              	.LBB720:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9958              		.loc 1 123 2 view .LVU3121
 133:src/keys.c    **** }
 9959              		.loc 1 133 2 view .LVU3122
 133:src/keys.c    **** }
 9960              		.loc 1 133 23 is_stmt 0 view .LVU3123
 9961 1464 A149     		ldr	r1, .L1214+8
 9962              	.LBE720:
 9963              	.LBE724:
 445:src/keys.c    **** }
 9964              		.loc 1 445 49 view .LVU3124
 9965 1466 DFF894C2 		ldr	ip, .L1214+24
 9966              	.LBB725:
 9967              	.LBB721:
 133:src/keys.c    **** }
 9968              		.loc 1 133 23 view .LVU3125
 9969 146a 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 9970              	.LBE721:
 9971              	.LBE725:
 445:src/keys.c    **** }
 9972              		.loc 1 445 49 view .LVU3126
 9973 146c 4FF0060E 		mov	lr, #6
 9974 1470 0EFB01C1 		mla	r1, lr, r1, ip
 9975 1474 063C     		subs	r4, r4, #6
 9976              	.LBE729:
 9977              	.LBE736:
1409:src/keys.c    **** 
 9978              		.loc 1 1409 19 view .LVU3127
 9979 1476 4FF0000C 		mov	ip, #0
 9980              	.LBB737:
 9981              	.LBB730:
 445:src/keys.c    **** }
 9982              		.loc 1 445 49 view .LVU3128
 9983 147a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 9984              	.LVL833:
ARM GAS  /tmp/cccKVeLo.s 			page 284


 445:src/keys.c    **** }
 9985              		.loc 1 445 49 view .LVU3129
 9986              	.LBE730:
 9987              	.LBE737:
1409:src/keys.c    **** 
 9988              		.loc 1 1409 2 is_stmt 1 view .LVU3130
1409:src/keys.c    **** 
 9989              		.loc 1 1409 19 is_stmt 0 view .LVU3131
 9990 147c 88F80DC0 		strb	ip, [r8, #13]
1411:src/keys.c    **** 	case K10:	// STO
 9991              		.loc 1 1411 2 is_stmt 1 view .LVU3132
 9992 1480 212C     		cmp	r4, #33
 9993 1482 8BD8     		bhi	.L753
 9994 1484 01A2     		adr	r2, .L755
 9995 1486 52F824F0 		ldr	pc, [r2, r4, lsl #2]
 9996 148a 00BF     		.p2align 2
 9997              	.L755:
 9998 148c 8F1D0000 		.word	.L762+1
 9999 1490 6B1D0000 		.word	.L761+1
 10000 1494 9D130000 		.word	.L753+1
 10001 1498 9D130000 		.word	.L753+1
 10002 149c 9D130000 		.word	.L753+1
 10003 14a0 9D130000 		.word	.L753+1
 10004 14a4 351D0000 		.word	.L760+1
 10005 14a8 9D130000 		.word	.L753+1
 10006 14ac 9D130000 		.word	.L753+1
 10007 14b0 9D130000 		.word	.L753+1
 10008 14b4 FD040000 		.word	.L759+1
 10009 14b8 9D130000 		.word	.L753+1
 10010 14bc D51C0000 		.word	.L758+1
 10011 14c0 9D130000 		.word	.L753+1
 10012 14c4 9D130000 		.word	.L753+1
 10013 14c8 9D130000 		.word	.L753+1
 10014 14cc 9D130000 		.word	.L753+1
 10015 14d0 9D130000 		.word	.L753+1
 10016 14d4 B91C0000 		.word	.L757+1
 10017 14d8 9D130000 		.word	.L753+1
 10018 14dc 9D130000 		.word	.L753+1
 10019 14e0 9D130000 		.word	.L753+1
 10020 14e4 9D130000 		.word	.L753+1
 10021 14e8 9D130000 		.word	.L753+1
 10022 14ec 9D130000 		.word	.L753+1
 10023 14f0 9D130000 		.word	.L753+1
 10024 14f4 9D130000 		.word	.L753+1
 10025 14f8 9D130000 		.word	.L753+1
 10026 14fc 9D130000 		.word	.L753+1
 10027 1500 9D130000 		.word	.L753+1
 10028 1504 3F1C0000 		.word	.L756+1
 10029 1508 9D130000 		.word	.L753+1
 10030 150c 9D130000 		.word	.L753+1
 10031 1510 271C0000 		.word	.L754+1
 10032              	.LVL834:
 10033              		.p2align 1
 10034              	.L1126:
1411:src/keys.c    **** 	case K10:	// STO
 10035              		.loc 1 1411 2 is_stmt 0 view .LVU3133
 10036              	.LBE752:
ARM GAS  /tmp/cccKVeLo.s 			page 285


 10037              	.LBE1134:
 10038              	.LBB1135:
 10039              	.LBB669:
 10040              	.LBB663:
 327:src/keys.c    **** #else
 10041              		.loc 1 327 45 view .LVU3134
 10042 1514 FFF7FEFF 		bl	shift_down
 10043              	.LVL835:
 327:src/keys.c    **** #else
 10044              		.loc 1 327 42 view .LVU3135
 10045 1518 0328     		cmp	r0, #3
 10046 151a 00F08582 		beq	.L667
 10047 151e 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 325:src/keys.c    **** #ifndef WINGUI
 10048              		.loc 1 325 8 view .LVU3136
 10049 1522 734B     		ldr	r3, .L1214+12
 327:src/keys.c    **** #else
 10050              		.loc 1 327 73 view .LVU3137
 10051 1524 DC46     		mov	ip, fp
 331:src/keys.c    ****   }
 10052              		.loc 1 331 9 view .LVU3138
 10053 1526 0C22     		movs	r2, #12
 10054 1528 FEF790BE 		b	.L666
 10055              	.LVL836:
 10056              	.L1161:
 331:src/keys.c    ****   }
 10057              		.loc 1 331 9 view .LVU3139
 10058              	.LBE663:
 10059              	.LBE669:
 10060              	.LBE1135:
 10061              	.LBB1136:
 10062              	.LBB947:
2396:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 10063              		.loc 1 2396 3 is_stmt 1 view .LVU3140
2396:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 10064              		.loc 1 2396 12 is_stmt 0 view .LVU3141
 10065 152c 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
 10066 1530 2046     		mov	r0, r4
 10067 1532 941E     		subs	r4, r2, #2
 10068 1534 6242     		rsbs	r2, r4, #0
 10069 1536 6241     		adcs	r2, r2, r4
 10070 1538 FFF7FEFF 		bl	process_catalogue
 10071              	.LVL837:
2397:src/keys.c    **** 			return opcode;
 10072              		.loc 1 2397 6 view .LVU3142
 10073 153c 3328     		cmp	r0, #51
2396:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 10074              		.loc 1 2396 12 view .LVU3143
 10075 153e 8346     		mov	fp, r0
 10076              	.LVL838:
2397:src/keys.c    **** 			return opcode;
 10077              		.loc 1 2397 3 is_stmt 1 view .LVU3144
2397:src/keys.c    **** 			return opcode;
 10078              		.loc 1 2397 6 is_stmt 0 view .LVU3145
 10079 1540 00F07A82 		beq	.L1180
2399:src/keys.c    **** 		goto add_char;
 10080              		.loc 1 2399 3 is_stmt 1 view .LVU3146
ARM GAS  /tmp/cccKVeLo.s 			page 286


2399:src/keys.c    **** 		goto add_char;
 10081              		.loc 1 2399 6 is_stmt 0 view .LVU3147
 10082 1544 C0B2     		uxtb	r0, r0
 10083              	.LVL839:
2400:src/keys.c    **** 	}
 10084              		.loc 1 2400 3 is_stmt 1 view .LVU3148
 10085 1546 52E4     		b	.L680
 10086              	.LVL840:
 10087              	.L918:
2400:src/keys.c    **** 	}
 10088              		.loc 1 2400 3 is_stmt 0 view .LVU3149
 10089              	.LBE947:
 10090              	.LBE1136:
 10091              	.LBB1137:
 10092              	.LBB997:
2575:src/keys.c    **** 	const int opcode = getprog(pc);
 10093              		.loc 1 2575 27 view .LVU3150
 10094 1548 4FF0030B 		mov	fp, #3
 10095 154c DBE4     		b	.L695
 10096              	.LVL841:
 10097              	.L1135:
2575:src/keys.c    **** 	const int opcode = getprog(pc);
 10098              		.loc 1 2575 27 view .LVU3151
 10099              	.LBE997:
 10100              	.LBE1137:
2939:src/keys.c    **** 		// print_debug (3, c);
 10101              		.loc 1 2939 4 is_stmt 1 view .LVU3152
 10102              	.LBB1138:
 10103              	.LBI1138:
1010:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 10104              		.loc 1 1010 12 view .LVU3153
 10105              	.LBB1139:
1013:src/keys.c    **** 		// Row 1
 10106              		.loc 1 1013 2 view .LVU3154
1064:src/keys.c    **** 	int op = op_map[lc];
 10107              		.loc 1 1064 2 view .LVU3155
 10108              	.LBB1140:
 10109              	.LBI1140:
 136:src/keys.c    **** {
 10110              		.loc 1 136 12 view .LVU3156
 10111              	.LBB1141:
 138:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10112              		.loc 1 138 2 view .LVU3157
 148:src/keys.c    **** }
 10113              		.loc 1 148 2 view .LVU3158
 148:src/keys.c    **** }
 10114              		.loc 1 148 2 is_stmt 0 view .LVU3159
 10115              	.LBE1141:
 10116              	.LBE1140:
1065:src/keys.c    **** 	reset_shift();
 10117              		.loc 1 1065 2 is_stmt 1 view .LVU3160
 10118              	.LBB1144:
 10119              	.LBB1142:
 148:src/keys.c    **** }
 10120              		.loc 1 148 23 is_stmt 0 view .LVU3161
 10121 154e 654A     		ldr	r2, .L1214
 10122              	.LBE1142:
ARM GAS  /tmp/cccKVeLo.s 			page 287


 10123              	.LBE1144:
1065:src/keys.c    **** 	reset_shift();
 10124              		.loc 1 1065 17 view .LVU3162
 10125 1550 684B     		ldr	r3, .L1214+16
 10126              	.LBB1145:
 10127              	.LBB1143:
 148:src/keys.c    **** }
 10128              		.loc 1 148 23 view .LVU3163
 10129 1552 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 10130              	.LBE1143:
 10131              	.LBE1145:
1065:src/keys.c    **** 	reset_shift();
 10132              		.loc 1 1065 17 view .LVU3164
 10133 1554 33F812A0 		ldrh	r10, [r3, r2, lsl #1]
 10134              	.LVL842:
1066:src/keys.c    **** 
 10135              		.loc 1 1066 2 is_stmt 1 view .LVU3165
 10136              	.LBB1146:
 10137              	.LBI1146:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 10138              		.loc 1 104 13 view .LVU3166
 10139              	.LBE1146:
 10140              	.LBE1139:
 10141              	.LBE1138:
 10142              	.LBE1247:
 10143              	.LBE1322:
 105:src/keys.c    **** }
 10144              		.loc 1 105 2 view .LVU3167
 10145              	.LBB1323:
 10146              	.LBB1248:
 10147              	.LBB1160:
 10148              	.LBB1157:
 10149              	.LBB1153:
 10150              	.LBB1147:
 10151              	.LBI1147:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 10152              		.loc 1 94 20 view .LVU3168
 10153              	.LBB1148:
  95:src/keys.c    **** 	State2.shifts = shift;
 10154              		.loc 1 95 2 view .LVU3169
 10155              	.LBB1149:
 10156              	.LBI1149:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 10157              		.loc 1 86 13 view .LVU3170
 10158              	.LBB1150:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10159              		.loc 1 87 2 view .LVU3171
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10160              		.loc 1 87 18 is_stmt 0 view .LVU3172
 10161 1558 FFF7FEFF 		bl	shift_down
 10162              	.LVL843:
  88:src/keys.c    **** }
 10163              		.loc 1 88 2 is_stmt 1 view .LVU3173
 10164              	.LBE1150:
 10165              	.LBE1149:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10166              		.loc 1 96 2 view .LVU3174
ARM GAS  /tmp/cccKVeLo.s 			page 288


 10167              	.LBE1148:
 10168              	.LBE1147:
 10169              	.LBE1153:
1069:src/keys.c    **** 	case K62:
 10170              		.loc 1 1069 2 is_stmt 0 view .LVU3175
 10171 155c 262C     		cmp	r4, #38
 10172              	.LBB1154:
 10173              	.LBB1152:
 10174              	.LBB1151:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10175              		.loc 1 96 16 view .LVU3176
 10176 155e 88F810B0 		strb	fp, [r8, #16]
  98:src/keys.c    **** }
 10177              		.loc 1 98 2 is_stmt 1 view .LVU3177
 10178              	.LVL844:
  98:src/keys.c    **** }
 10179              		.loc 1 98 2 is_stmt 0 view .LVU3178
 10180              	.LBE1151:
 10181              	.LBE1152:
 10182              	.LBE1154:
1069:src/keys.c    **** 	case K62:
 10183              		.loc 1 1069 2 is_stmt 1 view .LVU3179
 10184 1562 00F07781 		beq	.L818
 10185 1566 272C     		cmp	r4, #39
 10186 1568 1FD1     		bne	.L820
1082:src/keys.c    **** 			return STATE_UNFINISHED;
 10187              		.loc 1 1082 3 view .LVU3180
1082:src/keys.c    **** 			return STATE_UNFINISHED;
 10188              		.loc 1 1082 7 is_stmt 0 view .LVU3181
 10189 156a FFF7FEFF 		bl	is_bad_cmdline
 10190              	.LVL845:
1082:src/keys.c    **** 			return STATE_UNFINISHED;
 10191              		.loc 1 1082 6 view .LVU3182
 10192 156e 0028     		cmp	r0, #0
 10193 1570 40F0F382 		bne	.L1181
1084:src/keys.c    **** 		process_cmdline_set_lift();
 10194              		.loc 1 1084 3 is_stmt 1 view .LVU3183
1084:src/keys.c    **** 		process_cmdline_set_lift();
 10195              		.loc 1 1084 30 is_stmt 0 view .LVU3184
 10196 1574 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10197 1578 C3F38012 		ubfx	r2, r3, #6, #1
1084:src/keys.c    **** 		process_cmdline_set_lift();
 10198              		.loc 1 1084 22 view .LVU3185
 10199 157c C2F10102 		rsb	r2, r2, #1
1084:src/keys.c    **** 		process_cmdline_set_lift();
 10200              		.loc 1 1084 18 view .LVU3186
 10201 1580 62F38613 		bfi	r3, r2, #6, #1
 10202 1584 88F81630 		strb	r3, [r8, #22]
1085:src/keys.c    **** 		update_program_bounds(1);
 10203              		.loc 1 1085 3 is_stmt 1 view .LVU3187
 10204 1588 FFF7FEFF 		bl	process_cmdline_set_lift
 10205              	.LVL846:
1086:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
 10206              		.loc 1 1086 3 view .LVU3188
 10207 158c 0120     		movs	r0, #1
 10208 158e FFF7FEFF 		bl	update_program_bounds
 10209              	.LVL847:
ARM GAS  /tmp/cccKVeLo.s 			page 289


1087:src/keys.c    **** 			set_pc(0);
 10210              		.loc 1 1087 3 view .LVU3189
1087:src/keys.c    **** 			set_pc(0);
 10211              		.loc 1 1087 7 is_stmt 0 view .LVU3190
 10212 1592 98F81600 		ldrb	r0, [r8, #22]	@ zero_extendqisi2
1087:src/keys.c    **** 			set_pc(0);
 10213              		.loc 1 1087 6 view .LVU3191
 10214 1596 10F04000 		ands	r0, r0, #64
 10215 159a 06D1     		bne	.L820
1087:src/keys.c    **** 			set_pc(0);
 10216              		.loc 1 1087 27 view .LVU3192
 10217 159c 564B     		ldr	r3, .L1214+20
 10218 159e 1B68     		ldr	r3, [r3]
1087:src/keys.c    **** 			set_pc(0);
 10219              		.loc 1 1087 24 view .LVU3193
 10220 15a0 B3F8E027 		ldrh	r2, [r3, #2016]
 10221 15a4 012A     		cmp	r2, #1
 10222 15a6 00F0D082 		beq	.L1182
 10223              	.L820:
1095:src/keys.c    **** 		if (op & _RARG) {
 10224              		.loc 1 1095 5 view .LVU3194
 10225 15aa BAF1330F 		cmp	r10, #51
1065:src/keys.c    **** 	reset_shift();
 10226              		.loc 1 1065 6 view .LVU3195
 10227 15ae D346     		mov	fp, r10
1095:src/keys.c    **** 		if (op & _RARG) {
 10228              		.loc 1 1095 2 is_stmt 1 view .LVU3196
1095:src/keys.c    **** 		if (op & _RARG) {
 10229              		.loc 1 1095 5 is_stmt 0 view .LVU3197
 10230 15b0 0AD0     		beq	.L829
 10231              	.LVL848:
1096:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 10232              		.loc 1 1096 3 is_stmt 1 view .LVU3198
1096:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 10233              		.loc 1 1096 6 is_stmt 0 view .LVU3199
 10234 15b2 1AF4004F 		tst	r10, #32768
 10235 15b6 00F05C81 		beq	.L1183
1097:src/keys.c    **** 			op = STATE_UNFINISHED;
 10236              		.loc 1 1097 4 is_stmt 1 view .LVU3200
 10237              	.LVL849:
 10238              	.LBB1155:
 10239              	.LBI1155:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 10240              		.loc 1 506 13 view .LVU3201
 10241              	.LBB1156:
 507:src/keys.c    **** 		return;
 10242              		.loc 1 507 2 view .LVU3202
 507:src/keys.c    **** 		return;
 10243              		.loc 1 507 6 is_stmt 0 view .LVU3203
 10244 15ba FFF7FEFF 		bl	is_bad_cmdline
 10245              	.LVL850:
 507:src/keys.c    **** 		return;
 10246              		.loc 1 507 5 view .LVU3204
 10247 15be 18B9     		cbnz	r0, .L829
 10248 15c0 5FFA8AF0 		uxtb	r0, r10
 10249 15c4 FFF7FEFF 		bl	init_arg.part.0
 10250              	.LVL851:
ARM GAS  /tmp/cccKVeLo.s 			page 290


 10251              	.L829:
 507:src/keys.c    **** 		return;
 10252              		.loc 1 507 5 view .LVU3205
 10253              	.LBE1156:
 10254              	.LBE1155:
1101:src/keys.c    **** #undef _RARG
 10255              		.loc 1 1101 2 is_stmt 1 view .LVU3206
1077:src/keys.c    **** #endif
 10256              		.loc 1 1077 29 is_stmt 0 view .LVU3207
 10257 15c8 4FF0330B 		mov	fp, #51
 10258              	.LVL852:
 10259              	.L823:
1101:src/keys.c    **** #undef _RARG
 10260              		.loc 1 1101 57 view .LVU3208
 10261 15cc 2BF4804B 		bic	fp, fp, #16384
 10262 15d0 FEF732BF 		b	.L595
 10263              	.LVL853:
 10264              	.L1156:
1101:src/keys.c    **** #undef _RARG
 10265              		.loc 1 1101 57 view .LVU3209
 10266              	.LBE1157:
 10267              	.LBE1160:
 10268              	.LBB1161:
 10269              	.LBB864:
 10270              	.LBB856:
2514:src/keys.c    **** 		else if (nn != NO_REG)
 10271              		.loc 1 2514 4 is_stmt 1 view .LVU3210
2516:src/keys.c    **** 	}
 10272              		.loc 1 2516 6 is_stmt 0 view .LVU3211
 10273 15d4 9342     		cmp	r3, r2
 10274 15d6 08BF     		it	eq
 10275 15d8 0A22     		moveq	r2, #10
 10276              	.LVL854:
2516:src/keys.c    **** 	}
 10277              		.loc 1 2516 6 view .LVU3212
 10278 15da FFF7DDBA 		b	.L644
 10279              	.LVL855:
 10280              	.L1134:
2516:src/keys.c    **** 	}
 10281              		.loc 1 2516 6 view .LVU3213
 10282              	.LBE856:
 10283              	.LBE864:
 10284              	.LBE1161:
2937:src/keys.c    **** 		if (shift == SHIFT_H)
 10285              		.loc 1 2937 4 is_stmt 1 view .LVU3214
 10286              	.LBB1162:
 10287              	.LBI1001:
 848:src/keys.c    **** 
 10288              		.loc 1 848 12 view .LVU3215
 10289              	.LBB1027:
 851:src/keys.c    **** 		// Row 1
 10290              		.loc 1 851 2 view .LVU3216
 902:src/keys.c    **** 		STATE_UNFINISHED,
 10291              		.loc 1 902 2 view .LVU3217
 909:src/keys.c    **** 	int lc = keycode_to_linear(c);
 10292              		.loc 1 909 2 view .LVU3218
 10293              	.LBB1006:
ARM GAS  /tmp/cccKVeLo.s 			page 291


 10294              	.LBI1006:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 10295              		.loc 1 104 13 view .LVU3219
 10296              	.LBE1006:
 10297              	.LBE1027:
 10298              	.LBE1162:
 10299              	.LBE1248:
 10300              	.LBE1323:
 105:src/keys.c    **** }
 10301              		.loc 1 105 2 view .LVU3220
 10302              	.LBB1324:
 10303              	.LBB1249:
 10304              	.LBB1163:
 10305              	.LBB1028:
 10306              	.LBB1015:
 10307              	.LBB1007:
 10308              	.LBI1007:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 10309              		.loc 1 94 20 view .LVU3221
 10310              	.LBB1008:
  95:src/keys.c    **** 	State2.shifts = shift;
 10311              		.loc 1 95 2 view .LVU3222
 10312              	.LBB1009:
 10313              	.LBI1009:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 10314              		.loc 1 86 13 view .LVU3223
 10315              	.LBB1010:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10316              		.loc 1 87 2 view .LVU3224
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10317              		.loc 1 87 18 is_stmt 0 view .LVU3225
 10318 15de FFF7FEFF 		bl	shift_down
 10319              	.LVL856:
  88:src/keys.c    **** }
 10320              		.loc 1 88 2 is_stmt 1 view .LVU3226
  88:src/keys.c    **** }
 10321              		.loc 1 88 52 is_stmt 0 view .LVU3227
 10322 15e2 0346     		mov	r3, r0
 10323 15e4 08B9     		cbnz	r0, .L793
 10324 15e6 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 10325              	.L793:
 10326              	.LVL857:
  88:src/keys.c    **** }
 10327              		.loc 1 88 52 view .LVU3228
 10328              	.LBE1010:
 10329              	.LBE1009:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10330              		.loc 1 96 2 is_stmt 1 view .LVU3229
 10331              	.LBE1008:
 10332              	.LBE1007:
 10333              	.LBE1015:
 10334              	.LBB1016:
 10335              	.LBB1017:
 148:src/keys.c    **** }
 10336              		.loc 1 148 23 is_stmt 0 view .LVU3230
 10337 15ea 3E4A     		ldr	r2, .L1214
 10338              	.LBE1017:
ARM GAS  /tmp/cccKVeLo.s 			page 292


 10339              	.LBE1016:
 911:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10340              		.loc 1 911 21 view .LVU3231
 10341 15ec DFF810C1 		ldr	ip, .L1214+28
 10342              	.LBB1020:
 10343              	.LBB1018:
 148:src/keys.c    **** }
 10344              		.loc 1 148 23 view .LVU3232
 10345 15f0 105D     		ldrb	r0, [r2, r4]	@ zero_extendqisi2
 10346              	.LBE1018:
 10347              	.LBE1020:
 911:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10348              		.loc 1 911 21 view .LVU3233
 10349 15f2 4200     		lsls	r2, r0, #1
 10350 15f4 022B     		cmp	r3, #2
 10351 15f6 08BF     		it	eq
 10352 15f8 0132     		addeq	r2, r2, #1
 10353              	.LBB1021:
 10354              	.LBB1013:
 10355              	.LBB1011:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10356              		.loc 1 96 16 view .LVU3234
 10357 15fa 0021     		movs	r1, #0
 10358              	.LBE1011:
 10359              	.LBE1013:
 10360              	.LBE1021:
 911:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10361              		.loc 1 911 21 view .LVU3235
 10362 15fc 3CF812B0 		ldrh	fp, [ip, r2, lsl #1]
 10363              	.LBB1022:
 10364              	.LBB1014:
 10365              	.LBB1012:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10366              		.loc 1 96 16 view .LVU3236
 10367 1600 88F81010 		strb	r1, [r8, #16]
  98:src/keys.c    **** }
 10368              		.loc 1 98 2 is_stmt 1 view .LVU3237
 10369              	.LVL858:
  98:src/keys.c    **** }
 10370              		.loc 1 98 2 is_stmt 0 view .LVU3238
 10371              	.LBE1012:
 10372              	.LBE1014:
 10373              	.LBE1022:
 910:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 10374              		.loc 1 910 2 is_stmt 1 view .LVU3239
 10375              	.LBB1023:
 10376              	.LBI1016:
 136:src/keys.c    **** {
 10377              		.loc 1 136 12 view .LVU3240
 10378              	.LBB1019:
 138:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10379              		.loc 1 138 2 view .LVU3241
 148:src/keys.c    **** }
 10380              		.loc 1 148 2 view .LVU3242
 148:src/keys.c    **** }
 10381              		.loc 1 148 2 is_stmt 0 view .LVU3243
 10382              	.LBE1019:
ARM GAS  /tmp/cccKVeLo.s 			page 293


 10383              	.LBE1023:
 911:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10384              		.loc 1 911 2 is_stmt 1 view .LVU3244
 912:src/keys.c    **** 	if (no_int)
 10385              		.loc 1 912 2 view .LVU3245
 10386 1604 0BF4704A 		and	r10, fp, #61440
 10387              	.LVL859:
 913:src/keys.c    **** 		op &= ~NO_INT;
 10388              		.loc 1 913 2 view .LVU3246
 913:src/keys.c    **** 		op &= ~NO_INT;
 10389              		.loc 1 913 5 is_stmt 0 view .LVU3247
 10390 1608 BAF5704F 		cmp	r10, #61440
 10391 160c 00F06681 		beq	.L1184
 916:src/keys.c    **** 	case K00:
 10392              		.loc 1 916 2 is_stmt 1 view .LVU3248
 10393 1610 282C     		cmp	r4, #40
 10394 1612 22D8     		bhi	.L816
 10395 1614 DFE804F0 		tbb	[pc, r4]
 10396              	.L884:
 10397 1618 4D       		.byte	(.L805-.L884)/2
 10398 1619 5F       		.byte	(.L803-.L884)/2
 10399 161a 21       		.byte	(.L816-.L884)/2
 10400 161b 5F       		.byte	(.L803-.L884)/2
 10401 161c 21       		.byte	(.L816-.L884)/2
 10402 161d 21       		.byte	(.L816-.L884)/2
 10403 161e 21       		.byte	(.L816-.L884)/2
 10404 161f 21       		.byte	(.L816-.L884)/2
 10405 1620 21       		.byte	(.L816-.L884)/2
 10406 1621 21       		.byte	(.L816-.L884)/2
 10407 1622 21       		.byte	(.L816-.L884)/2
 10408 1623 21       		.byte	(.L816-.L884)/2
 10409 1624 15       		.byte	(.L802-.L884)/2
 10410 1625 21       		.byte	(.L816-.L884)/2
 10411 1626 21       		.byte	(.L816-.L884)/2
 10412 1627 21       		.byte	(.L816-.L884)/2
 10413 1628 21       		.byte	(.L816-.L884)/2
 10414 1629 21       		.byte	(.L816-.L884)/2
 10415 162a 90       		.byte	(.L801-.L884)/2
 10416 162b 76       		.byte	(.L800-.L884)/2
 10417 162c 21       		.byte	(.L816-.L884)/2
 10418 162d 21       		.byte	(.L816-.L884)/2
 10419 162e 21       		.byte	(.L816-.L884)/2
 10420 162f 21       		.byte	(.L816-.L884)/2
 10421 1630 21       		.byte	(.L816-.L884)/2
 10422 1631 21       		.byte	(.L816-.L884)/2
 10423 1632 21       		.byte	(.L816-.L884)/2
 10424 1633 21       		.byte	(.L816-.L884)/2
 10425 1634 21       		.byte	(.L816-.L884)/2
 10426 1635 21       		.byte	(.L816-.L884)/2
 10427 1636 32       		.byte	(.L799-.L884)/2
 10428 1637 27       		.byte	(.L798-.L884)/2
 10429 1638 39       		.byte	(.L796-.L884)/2
 10430 1639 39       		.byte	(.L796-.L884)/2
 10431 163a 21       		.byte	(.L816-.L884)/2
 10432 163b 21       		.byte	(.L816-.L884)/2
 10433 163c 21       		.byte	(.L816-.L884)/2
 10434 163d 21       		.byte	(.L816-.L884)/2
ARM GAS  /tmp/cccKVeLo.s 			page 294


 10435 163e 21       		.byte	(.L816-.L884)/2
 10436 163f 39       		.byte	(.L796-.L884)/2
 10437 1640 39       		.byte	(.L796-.L884)/2
 10438 1641 00       		.p2align 1
 10439              	.L802:
 948:src/keys.c    **** 			if (is_bad_cmdline())
 10440              		.loc 1 948 3 view .LVU3249
 948:src/keys.c    **** 			if (is_bad_cmdline())
 10441              		.loc 1 948 6 is_stmt 0 view .LVU3250
 10442 1642 012B     		cmp	r3, #1
 10443 1644 00F04884 		beq	.L1185
 10444              	.LVL860:
 10445              	.L807:
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10446              		.loc 1 1000 2 is_stmt 1 view .LVU3251
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10447              		.loc 1 1000 5 is_stmt 0 view .LVU3252
 10448 1648 BAF5704F 		cmp	r10, #61440
 10449 164c 05D1     		bne	.L816
 10450              	.L795:
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10451              		.loc 1 1000 13 view .LVU3253
 10452 164e 2A4B     		ldr	r3, .L1214+20
 10453 1650 1B68     		ldr	r3, [r3]
 10454 1652 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10455 1656 D907     		lsls	r1, r3, #31
 10456 1658 26D4     		bmi	.L899
 10457              	.LVL861:
 10458              	.L816:
1003:src/keys.c    **** #undef NO_INT
 10459              		.loc 1 1003 2 is_stmt 1 view .LVU3254
 10460              	.LBB1024:
 10461              	.LBI1003:
 624:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10462              		.loc 1 624 12 view .LVU3255
 10463              	.LBB1005:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 10464              		.loc 1 625 2 view .LVU3256
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 10465              		.loc 1 625 6 is_stmt 0 view .LVU3257
 10466 165a 4FEA2B23 		asr	r3, fp, #8
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 10467              		.loc 1 625 5 view .LVU3258
 10468 165e 012B     		cmp	r3, #1
 10469 1660 7EF4EAAE 		bne	.L595
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 10470              		.loc 1 625 5 view .LVU3259
 10471 1664 9EE4     		b	.L893
 10472              	.LVL862:
 10473              	.L798:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 10474              		.loc 1 625 5 view .LVU3260
 10475              	.LBE1005:
 10476              	.LBE1024:
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 10477              		.loc 1 972 3 is_stmt 1 view .LVU3261
 972:src/keys.c    **** 			return STATE_UNFINISHED;
ARM GAS  /tmp/cccKVeLo.s 			page 295


 10478              		.loc 1 972 7 is_stmt 0 view .LVU3262
 10479 1666 FFF7FEFF 		bl	is_bad_cmdline
 10480              	.LVL863:
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 10481              		.loc 1 972 6 view .LVU3263
 10482 166a 0446     		mov	r4, r0
 10483              	.LVL864:
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 10484              		.loc 1 972 6 view .LVU3264
 10485 166c 0028     		cmp	r0, #0
 10486 166e 00F0CA82 		beq	.L812
 10487 1672 3268     		ldr	r2, [r6]
 973:src/keys.c    **** 		process_cmdline_set_lift();
 10488              		.loc 1 973 11 view .LVU3265
 10489 1674 4FF0330B 		mov	fp, #51
 10490              	.LVL865:
 973:src/keys.c    **** 		process_cmdline_set_lift();
 10491              		.loc 1 973 11 view .LVU3266
 10492 1678 FEF71BBD 		b	.L565
 10493              	.LVL866:
 10494              	.L799:
 980:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10495              		.loc 1 980 3 is_stmt 1 view .LVU3267
 10496 167c 0093     		str	r3, [sp]
 980:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10497              		.loc 1 980 18 is_stmt 0 view .LVU3268
 10498 167e FFF7FEFF 		bl	shift_down
 10499              	.LVL867:
 980:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10500              		.loc 1 980 6 view .LVU3269
 10501 1682 009B     		ldr	r3, [sp]
 10502 1684 0028     		cmp	r0, #0
 10503 1686 40F01984 		bne	.L1186
 10504              	.L796:
 989:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 10505              		.loc 1 989 3 is_stmt 1 view .LVU3270
 989:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 10506              		.loc 1 989 6 is_stmt 0 view .LVU3271
 10507 168a BBF59C7F 		cmp	fp, #312
 10508 168e 40F05B84 		bne	.L1187
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10509              		.loc 1 1000 2 is_stmt 1 view .LVU3272
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10510              		.loc 1 1000 5 is_stmt 0 view .LVU3273
 10511 1692 BAF5704F 		cmp	r10, #61440
 10512 1696 7FF485AC 		bne	.L893
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10513              		.loc 1 1000 13 view .LVU3274
 10514 169a 174B     		ldr	r3, .L1214+20
 10515 169c 1B68     		ldr	r3, [r3]
 10516 169e 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10517 16a2 DB07     		lsls	r3, r3, #31
 10518 16a4 7FF57EAC 		bpl	.L893
 10519              	.L899:
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10520              		.loc 1 1000 13 view .LVU3275
 10521 16a8 3268     		ldr	r2, [r6]
ARM GAS  /tmp/cccKVeLo.s 			page 296


1001:src/keys.c    **** 
 10522              		.loc 1 1001 10 view .LVU3276
 10523 16aa 4FF0330B 		mov	fp, #51
 10524              	.LVL868:
1001:src/keys.c    **** 
 10525              		.loc 1 1001 10 view .LVU3277
 10526 16ae FEF700BD 		b	.L565
 10527              	.LVL869:
 10528              	.L805:
 918:src/keys.c    **** 	    State2.hyp = 1;
 10529              		.loc 1 918 4 is_stmt 1 view .LVU3278
 918:src/keys.c    **** 	    State2.hyp = 1;
 10530              		.loc 1 918 8 is_stmt 0 view .LVU3279
 10531 16b2 114A     		ldr	r2, .L1214+20
 10532 16b4 1268     		ldr	r2, [r2]
 10533 16b6 92F8E827 		ldrb	r2, [r2, #2024]	@ zero_extendqisi2
 918:src/keys.c    **** 	    State2.hyp = 1;
 10534              		.loc 1 918 7 view .LVU3280
 10535 16ba D407     		lsls	r4, r2, #31
 10536 16bc 40F13384 		bpl	.L1188
 10537              	.L1100:
 937:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10538              		.loc 1 937 20 view .LVU3281
 10539 16c0 012B     		cmp	r3, #1
 10540 16c2 00F02884 		beq	.L1189
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10541              		.loc 1 1000 2 is_stmt 1 view .LVU3282
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10542              		.loc 1 1000 5 is_stmt 0 view .LVU3283
 10543 16c6 BAF5704F 		cmp	r10, #61440
 10544 16ca C6D1     		bne	.L816
 10545 16cc 3268     		ldr	r2, [r6]
1001:src/keys.c    **** 
 10546              		.loc 1 1001 10 view .LVU3284
 10547 16ce 4FF0330B 		mov	fp, #51
 10548              	.LVL870:
1001:src/keys.c    **** 
 10549              		.loc 1 1001 10 view .LVU3285
 10550 16d2 FEF7EEBC 		b	.L565
 10551              	.LVL871:
 10552              	.L803:
 937:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10553              		.loc 1 937 4 is_stmt 1 view .LVU3286
 937:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10554              		.loc 1 937 8 is_stmt 0 view .LVU3287
 10555 16d6 084A     		ldr	r2, .L1214+20
 10556 16d8 1268     		ldr	r2, [r2]
 10557 16da 92F8E827 		ldrb	r2, [r2, #2024]	@ zero_extendqisi2
 937:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10558              		.loc 1 937 7 view .LVU3288
 10559 16de D107     		lsls	r1, r2, #31
 10560 16e0 B2D5     		bpl	.L807
 10561 16e2 EDE7     		b	.L1100
 10562              	.L1215:
 10563              		.align	2
 10564              	.L1214:
 10565 16e4 00000000 		.word	.LANCHOR18
ARM GAS  /tmp/cccKVeLo.s 			page 297


 10566 16e8 00000000 		.word	.LANCHOR17
 10567 16ec 00000000 		.word	.LANCHOR1
 10568 16f0 00000000 		.word	.LANCHOR11
 10569 16f4 00000000 		.word	.LANCHOR21
 10570 16f8 00000000 		.word	main_ram
 10571 16fc 00000000 		.word	.LANCHOR9
 10572 1700 00000000 		.word	.LANCHOR19
 10573              	.L800:
 961:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10574              		.loc 1 961 4 is_stmt 1 view .LVU3289
 961:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10575              		.loc 1 961 7 is_stmt 0 view .LVU3290
 10576 1704 022B     		cmp	r3, #2
 10577 1706 9FD1     		bne	.L807
 961:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10578              		.loc 1 961 27 view .LVU3291
 10579 1708 DA4B     		ldr	r3, .L1216
 10580              	.LVL872:
 961:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10581              		.loc 1 961 27 view .LVU3292
 10582 170a 1B68     		ldr	r3, [r3]
 10583 170c 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10584 1710 DA07     		lsls	r2, r3, #31
 10585 1712 99D5     		bpl	.L807
 961:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10586              		.loc 1 961 45 view .LVU3293
 10587 1714 0D20     		movs	r0, #13
 10588              	.LVL873:
 961:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10589              		.loc 1 961 45 view .LVU3294
 10590 1716 FFF7FEFF 		bl	intltr
 10591              	.LVL874:
 961:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10592              		.loc 1 961 42 view .LVU3295
 10593 171a 0028     		cmp	r0, #0
 10594 171c 94D0     		beq	.L807
 10595              	.LVL875:
 961:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10596              		.loc 1 961 42 view .LVU3296
 10597              	.LBE1028:
 10598              	.LBE1163:
 10599              	.LBE1249:
 10600              	.LBE1324:
3198:src/keys.c    **** 	NonProgrammable = 0;
 10601              		.loc 1 3198 7 is_stmt 1 view .LVU3297
3198:src/keys.c    **** 	NonProgrammable = 0;
 10602              		.loc 1 3198 11 is_stmt 0 view .LVU3298
 10603 171e 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3198:src/keys.c    **** 	NonProgrammable = 0;
 10604              		.loc 1 3198 10 view .LVU3299
 10605 1722 5906     		lsls	r1, r3, #25
 10606 1724 40F1EA83 		bpl	.L930
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10607              		.loc 1 3199 2 is_stmt 1 view .LVU3300
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10608              		.loc 1 3199 18 is_stmt 0 view .LVU3301
 10609 1728 D34B     		ldr	r3, .L1216+4
ARM GAS  /tmp/cccKVeLo.s 			page 298


 10610 172a 0022     		movs	r2, #0
 10611              	.LBB1325:
 10612              	.LBB1250:
 10613              	.LBB1164:
 10614              	.LBB1029:
 962:src/keys.c    **** 	  }
 10615              		.loc 1 962 13 view .LVU3302
 10616 172c 4FF0120B 		mov	fp, #18
 10617              	.LBE1029:
 10618              	.LBE1164:
 10619              	.LBE1250:
 10620              	.LBE1325:
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10621              		.loc 1 3199 18 view .LVU3303
 10622 1730 1A60     		str	r2, [r3]
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10623              		.loc 1 3200 2 is_stmt 1 view .LVU3304
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10624              		.loc 1 3200 32 is_stmt 0 view .LVU3305
 10625 1732 5846     		mov	r0, fp
 10626 1734 FFF74AB8 		b	.L874
 10627              	.LVL876:
 10628              	.L801:
 10629              	.LBB1326:
 10630              	.LBB1251:
 10631              	.LBB1165:
 10632              	.LBB1030:
 966:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10633              		.loc 1 966 4 is_stmt 1 view .LVU3306
 966:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10634              		.loc 1 966 7 is_stmt 0 view .LVU3307
 10635 1738 022B     		cmp	r3, #2
 10636 173a 85D1     		bne	.L807
 966:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10637              		.loc 1 966 27 view .LVU3308
 10638 173c CD4B     		ldr	r3, .L1216
 10639              	.LVL877:
 966:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10640              		.loc 1 966 27 view .LVU3309
 10641 173e 1B68     		ldr	r3, [r3]
 10642 1740 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10643 1744 DB07     		lsls	r3, r3, #31
 10644 1746 7FF57FAF 		bpl	.L807
 966:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10645              		.loc 1 966 45 view .LVU3310
 10646 174a 0E20     		movs	r0, #14
 10647              	.LVL878:
 966:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10648              		.loc 1 966 45 view .LVU3311
 10649 174c FFF7FEFF 		bl	intltr
 10650              	.LVL879:
 966:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10651              		.loc 1 966 42 view .LVU3312
 10652 1750 0028     		cmp	r0, #0
 10653 1752 3FF479AF 		beq	.L807
 10654              	.LVL880:
 966:src/keys.c    **** 	    return OP_SPEC | OP_E;
ARM GAS  /tmp/cccKVeLo.s 			page 299


 10655              		.loc 1 966 42 view .LVU3313
 10656              	.LBE1030:
 10657              	.LBE1165:
 10658              	.LBE1251:
 10659              	.LBE1326:
3198:src/keys.c    **** 	NonProgrammable = 0;
 10660              		.loc 1 3198 7 is_stmt 1 view .LVU3314
3198:src/keys.c    **** 	NonProgrammable = 0;
 10661              		.loc 1 3198 11 is_stmt 0 view .LVU3315
 10662 1756 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3198:src/keys.c    **** 	NonProgrammable = 0;
 10663              		.loc 1 3198 10 view .LVU3316
 10664 175a 5A06     		lsls	r2, r3, #25
 10665 175c 40F11382 		bpl	.L931
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10666              		.loc 1 3199 2 is_stmt 1 view .LVU3317
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10667              		.loc 1 3199 18 is_stmt 0 view .LVU3318
 10668 1760 C54B     		ldr	r3, .L1216+4
 10669 1762 0022     		movs	r2, #0
 10670              	.LBB1327:
 10671              	.LBB1252:
 10672              	.LBB1166:
 10673              	.LBB1031:
 967:src/keys.c    **** 	  }
 10674              		.loc 1 967 13 view .LVU3319
 10675 1764 4FF0130B 		mov	fp, #19
 10676              	.LBE1031:
 10677              	.LBE1166:
 10678              	.LBE1252:
 10679              	.LBE1327:
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10680              		.loc 1 3199 18 view .LVU3320
 10681 1768 1A60     		str	r2, [r3]
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10682              		.loc 1 3200 2 is_stmt 1 view .LVU3321
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10683              		.loc 1 3200 32 is_stmt 0 view .LVU3322
 10684 176a 5846     		mov	r0, fp
 10685 176c FFF72EB8 		b	.L874
 10686              	.LVL881:
 10687              	.L682:
 10688              	.LBB1328:
 10689              	.LBB1253:
 10690              	.LBB1167:
 10691              	.LBB948:
2425:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 10692              		.loc 1 2425 3 is_stmt 1 view .LVU3323
2425:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 10693              		.loc 1 2425 6 is_stmt 0 view .LVU3324
 10694 1770 0129     		cmp	r1, #1
 10695 1772 00F03982 		beq	.L1190
2428:src/keys.c    **** 		return STATE_UNFINISHED;
 10696              		.loc 1 2428 4 is_stmt 1 view .LVU3325
 10697              	.LBB937:
 10698              	.LBI937:
2382:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
ARM GAS  /tmp/cccKVeLo.s 			page 300


 10699              		.loc 1 2382 13 view .LVU3326
 10700              	.LBB938:
2384:src/keys.c    **** 	if (! State2.alphas )
 10701              		.loc 1 2384 2 view .LVU3327
2384:src/keys.c    **** 	if (! State2.alphas )
 10702              		.loc 1 2384 15 is_stmt 0 view .LVU3328
 10703 1776 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2385:src/keys.c    **** 		State2.alphashift = 0;
 10704              		.loc 1 2385 6 view .LVU3329
 10705 177a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2384:src/keys.c    **** 	if (! State2.alphas )
 10706              		.loc 1 2384 15 view .LVU3330
 10707 177e 60F3C302 		bfi	r2, r0, #3, #1
 10708 1782 88F81520 		strb	r2, [r8, #21]
2385:src/keys.c    **** 		State2.alphashift = 0;
 10709              		.loc 1 2385 2 is_stmt 1 view .LVU3331
2385:src/keys.c    **** 		State2.alphashift = 0;
 10710              		.loc 1 2385 5 is_stmt 0 view .LVU3332
 10711 1786 13F00802 		ands	r2, r3, #8
2386:src/keys.c    **** }
 10712              		.loc 1 2386 3 is_stmt 1 view .LVU3333
2386:src/keys.c    **** }
 10713              		.loc 1 2386 21 is_stmt 0 view .LVU3334
 10714 178a 04BF     		itt	eq
 10715 178c 62F30413 		bfieq	r3, r2, #4, #1
 10716 1790 88F81630 		strbeq	r3, [r8, #22]
 10717 1794 3268     		ldr	r2, [r6]
 10718              	.LBE938:
 10719              	.LBE937:
2429:src/keys.c    **** 
 10720              		.loc 1 2429 10 view .LVU3335
 10721 1796 4FF0330B 		mov	fp, #51
 10722 179a FEF78ABC 		b	.L565
 10723              	.LVL882:
 10724              	.L1170:
2429:src/keys.c    **** 
 10725              		.loc 1 2429 10 view .LVU3336
 10726              	.LBE948:
 10727              	.LBE1167:
 10728              	.LBB1168:
 10729              	.LBB1073:
2706:src/keys.c    **** 	const int g_max = global_regs();
 10730              		.loc 1 2706 33 view .LVU3337
 10731 179e FFF7FEFF 		bl	local_regs
 10732              	.LVL883:
 10733 17a2 8246     		mov	r10, r0
 10734              	.LVL884:
2706:src/keys.c    **** 	const int g_max = global_regs();
 10735              		.loc 1 2706 33 view .LVU3338
 10736 17a4 E6E4     		b	.L723
 10737              	.LVL885:
 10738              	.L681:
2706:src/keys.c    **** 	const int g_max = global_regs();
 10739              		.loc 1 2706 33 view .LVU3339
 10740              	.LBE1073:
 10741              	.LBE1168:
 10742              	.LBB1169:
ARM GAS  /tmp/cccKVeLo.s 			page 301


 10743              	.LBB949:
2415:src/keys.c    **** 			if (State2.numdigit == 0)
 10744              		.loc 1 2415 3 is_stmt 1 view .LVU3340
2415:src/keys.c    **** 			if (State2.numdigit == 0)
 10745              		.loc 1 2415 6 is_stmt 0 view .LVU3341
 10746 17a6 0329     		cmp	r1, #3
 10747 17a8 3FF417AB 		beq	.L687
2416:src/keys.c    **** 				reset_multi();
 10748              		.loc 1 2416 4 is_stmt 1 view .LVU3342
2416:src/keys.c    **** 				reset_multi();
 10749              		.loc 1 2416 14 is_stmt 0 view .LVU3343
 10750 17ac 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
2416:src/keys.c    **** 				reset_multi();
 10751              		.loc 1 2416 7 view .LVU3344
 10752 17b0 002A     		cmp	r2, #0
 10753 17b2 40F0EB81 		bne	.L688
2417:src/keys.c    **** 			else
 10754              		.loc 1 2417 5 is_stmt 1 view .LVU3345
 10755              	.LBB939:
 10756              	.LBI939:
2382:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 10757              		.loc 1 2382 13 view .LVU3346
 10758              	.LBB940:
2384:src/keys.c    **** 	if (! State2.alphas )
 10759              		.loc 1 2384 2 view .LVU3347
2385:src/keys.c    **** 		State2.alphashift = 0;
 10760              		.loc 1 2385 6 is_stmt 0 view .LVU3348
 10761 17b6 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2384:src/keys.c    **** 	if (! State2.alphas )
 10762              		.loc 1 2384 15 view .LVU3349
 10763 17ba 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 10764              	.LVL886:
2384:src/keys.c    **** 	if (! State2.alphas )
 10765              		.loc 1 2384 15 view .LVU3350
 10766 17be 62F3C301 		bfi	r1, r2, #3, #1
2385:src/keys.c    **** 		State2.alphashift = 0;
 10767              		.loc 1 2385 5 view .LVU3351
 10768 17c2 13F00802 		ands	r2, r3, #8
2386:src/keys.c    **** }
 10769              		.loc 1 2386 21 view .LVU3352
 10770 17c6 08BF     		it	eq
 10771 17c8 62F30413 		bfieq	r3, r2, #4, #1
2384:src/keys.c    **** 	if (! State2.alphas )
 10772              		.loc 1 2384 15 view .LVU3353
 10773 17cc 88F81510 		strb	r1, [r8, #21]
2385:src/keys.c    **** 		State2.alphashift = 0;
 10774              		.loc 1 2385 2 is_stmt 1 view .LVU3354
2386:src/keys.c    **** }
 10775              		.loc 1 2386 3 view .LVU3355
2386:src/keys.c    **** }
 10776              		.loc 1 2386 21 is_stmt 0 view .LVU3356
 10777 17d0 08BF     		it	eq
 10778 17d2 88F81630 		strbeq	r3, [r8, #22]
 10779 17d6 3268     		ldr	r2, [r6]
 10780              	.LBE940:
 10781              	.LBE939:
2420:src/keys.c    **** 		}
ARM GAS  /tmp/cccKVeLo.s 			page 302


 10782              		.loc 1 2420 11 view .LVU3357
 10783 17d8 4FF0330B 		mov	fp, #51
 10784 17dc FEF769BC 		b	.L565
 10785              	.LVL887:
 10786              	.L1162:
2405:src/keys.c    **** 				break;
 10787              		.loc 1 2405 3 is_stmt 1 view .LVU3358
2405:src/keys.c    **** 				break;
 10788              		.loc 1 2405 6 is_stmt 0 view .LVU3359
 10789 17e0 0029     		cmp	r1, #0
 10790 17e2 7FF4F2AA 		bne	.L683
2407:src/keys.c    **** 		if (State2.numdigit == 0)
 10791              		.loc 1 2407 3 is_stmt 1 view .LVU3360
 10792              	.LBB941:
 10793              	.LBI941:
2382:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 10794              		.loc 1 2382 13 view .LVU3361
 10795              	.LBB942:
2384:src/keys.c    **** 	if (! State2.alphas )
 10796              		.loc 1 2384 2 view .LVU3362
2384:src/keys.c    **** 	if (! State2.alphas )
 10797              		.loc 1 2384 15 is_stmt 0 view .LVU3363
 10798 17e6 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2385:src/keys.c    **** 		State2.alphashift = 0;
 10799              		.loc 1 2385 6 view .LVU3364
 10800 17ea 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2384:src/keys.c    **** 	if (! State2.alphas )
 10801              		.loc 1 2384 15 view .LVU3365
 10802 17ee 61F3C302 		bfi	r2, r1, #3, #1
 10803 17f2 88F81520 		strb	r2, [r8, #21]
2385:src/keys.c    **** 		State2.alphashift = 0;
 10804              		.loc 1 2385 2 is_stmt 1 view .LVU3366
2385:src/keys.c    **** 		State2.alphashift = 0;
 10805              		.loc 1 2385 5 is_stmt 0 view .LVU3367
 10806 17f6 1A07     		lsls	r2, r3, #28
2386:src/keys.c    **** }
 10807              		.loc 1 2386 3 is_stmt 1 view .LVU3368
 10808              	.LBE942:
 10809              	.LBE941:
2408:src/keys.c    **** 			return STATE_UNFINISHED;
 10810              		.loc 1 2408 3 view .LVU3369
 10811              	.LBB944:
 10812              	.LBB943:
2386:src/keys.c    **** }
 10813              		.loc 1 2386 21 is_stmt 0 view .LVU3370
 10814 17f8 5CBF     		itt	pl
 10815 17fa 61F30413 		bfipl	r3, r1, #4, #1
 10816 17fe 88F81630 		strbpl	r3, [r8, #22]
 10817              	.LBE943:
 10818              	.LBE944:
2408:src/keys.c    **** 			return STATE_UNFINISHED;
 10819              		.loc 1 2408 13 view .LVU3371
 10820 1802 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
2408:src/keys.c    **** 			return STATE_UNFINISHED;
 10821              		.loc 1 2408 6 view .LVU3372
 10822 1806 002B     		cmp	r3, #0
 10823 1808 00F00583 		beq	.L1191
ARM GAS  /tmp/cccKVeLo.s 			page 303


2410:src/keys.c    **** 			State2.digval2 = 0;
 10824              		.loc 1 2410 8 is_stmt 1 view .LVU3373
2410:src/keys.c    **** 			State2.digval2 = 0;
 10825              		.loc 1 2410 11 is_stmt 0 view .LVU3374
 10826 180c 012B     		cmp	r3, #1
2411:src/keys.c    **** 		goto fin;
 10827              		.loc 1 2411 19 view .LVU3375
 10828 180e 4FF00000 		mov	r0, #0
2410:src/keys.c    **** 			State2.digval2 = 0;
 10829              		.loc 1 2410 11 view .LVU3376
 10830 1812 7FF403AB 		bne	.L686
2411:src/keys.c    **** 		goto fin;
 10831              		.loc 1 2411 4 is_stmt 1 view .LVU3377
2411:src/keys.c    **** 		goto fin;
 10832              		.loc 1 2411 19 is_stmt 0 view .LVU3378
 10833 1816 88F80A00 		strb	r0, [r8, #10]
 10834 181a FFF7FFBA 		b	.L686
 10835              	.LVL888:
 10836              	.L1173:
2411:src/keys.c    **** 		goto fin;
 10837              		.loc 1 2411 19 view .LVU3379
 10838              	.LBE949:
 10839              	.LBE1169:
 10840              	.LBB1170:
 10841              	.LBB1074:
2722:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 10842              		.loc 1 2722 50 view .LVU3380
 10843 181e 0D2C     		cmp	r4, #13
 10844 1820 7FF4B8AC 		bne	.L731
2723:src/keys.c    **** 		set_smode(SDISP_SHOW);
 10845              		.loc 1 2723 3 is_stmt 1 view .LVU3381
 10846 1824 B9F1010F 		cmp	r9, #1
 10847 1828 14BF     		ite	ne
 10848 182a 2C20     		movne	r0, #44
 10849              	.LVL889:
2723:src/keys.c    **** 		set_smode(SDISP_SHOW);
 10850              		.loc 1 2723 3 is_stmt 0 view .LVU3382
 10851 182c 2B20     		moveq	r0, #43
 10852 182e FFF7FEFF 		bl	set_window
 10853              	.LVL890:
2724:src/keys.c    **** 	}
 10854              		.loc 1 2724 3 is_stmt 1 view .LVU3383
 10855              	.LBB1069:
 10856              	.LBI1069:
 651:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 10857              		.loc 1 651 13 view .LVU3384
 10858              	.LBB1070:
 652:src/keys.c    **** }
 10859              		.loc 1 652 2 view .LVU3385
 652:src/keys.c    **** }
 10860              		.loc 1 652 15 is_stmt 0 view .LVU3386
 10861 1832 98F81130 		ldrb	r3, [r8, #17]	@ zero_extendqisi2
 10862 1836 3268     		ldr	r2, [r6]
 10863 1838 013B     		subs	r3, r3, #1
 10864 183a 18BF     		it	ne
 10865 183c 0123     		movne	r3, #1
 10866 183e 88F81130 		strb	r3, [r8, #17]
ARM GAS  /tmp/cccKVeLo.s 			page 304


 10867              	.LVL891:
 652:src/keys.c    **** }
 10868              		.loc 1 652 15 view .LVU3387
 10869              	.LBE1070:
 10870              	.LBE1069:
2731:src/keys.c    **** 	case K_DOWN:
 10871              		.loc 1 2731 2 is_stmt 1 view .LVU3388
2731:src/keys.c    **** 	case K_DOWN:
 10872              		.loc 1 2731 2 is_stmt 0 view .LVU3389
 10873              	.LBE1074:
 10874              	.LBE1170:
 10875              	.LBE1253:
 10876              	.LBE1328:
3162:src/keys.c    ****     case STATE_SST:
 10877              		.loc 1 3162 5 is_stmt 1 view .LVU3390
 10878              	.LBB1329:
 10879              	.LBB1254:
 10880              	.LBB1171:
 10881              	.LBB1075:
2782:src/keys.c    **** 	}
 10882              		.loc 1 2782 10 is_stmt 0 view .LVU3391
 10883 1842 4FF0330B 		mov	fp, #51
 10884 1846 FEF734BC 		b	.L565
 10885              	.LVL892:
 10886              	.L1167:
2782:src/keys.c    **** 	}
 10887              		.loc 1 2782 10 view .LVU3392
 10888 184a 3268     		ldr	r2, [r6]
 10889              	.LBE1075:
 10890              	.LBE1171:
 10891              	.LBB1172:
 10892              	.LBB804:
1964:src/keys.c    **** 
 10893              		.loc 1 1964 10 view .LVU3393
 10894 184c 4FF0330B 		mov	fp, #51
 10895              	.LVL893:
1964:src/keys.c    **** 
 10896              		.loc 1 1964 10 view .LVU3394
 10897 1850 FEF72FBC 		b	.L565
 10898              	.LVL894:
 10899              	.L818:
1964:src/keys.c    **** 
 10900              		.loc 1 1964 10 view .LVU3395
 10901              	.LBE804:
 10902              	.LBE1172:
 10903              	.LBB1173:
 10904              	.LBB1158:
1071:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 10905              		.loc 1 1071 3 is_stmt 1 view .LVU3396
1071:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 10906              		.loc 1 1071 7 is_stmt 0 view .LVU3397
 10907 1854 874B     		ldr	r3, .L1216
 10908 1856 1B68     		ldr	r3, [r3]
 10909 1858 93F8E827 		ldrb	r2, [r3, #2024]	@ zero_extendqisi2
1071:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 10910              		.loc 1 1071 6 view .LVU3398
 10911 185c D207     		lsls	r2, r2, #31
ARM GAS  /tmp/cccKVeLo.s 			page 305


 10912 185e 18D5     		bpl	.L821
1072:src/keys.c    **** 		else
 10913              		.loc 1 1072 4 is_stmt 1 view .LVU3399
1072:src/keys.c    **** 		else
 10914              		.loc 1 1072 57 is_stmt 0 view .LVU3400
 10915 1860 93F9E737 		ldrsb	r3, [r3, #2023]
 10916 1864 002B     		cmp	r3, #0
 10917 1866 40F2531B 		movw	fp, #339
 10918 186a A8BF     		it	ge
 10919 186c 4FF4AA7B 		movge	fp, #340
 10920 1870 ACE6     		b	.L823
 10921              	.LVL895:
 10922              	.L1183:
1101:src/keys.c    **** #undef _RARG
 10923              		.loc 1 1101 2 is_stmt 1 view .LVU3401
1101:src/keys.c    **** #undef _RARG
 10924              		.loc 1 1101 9 is_stmt 0 view .LVU3402
 10925 1872 804B     		ldr	r3, .L1216
 10926 1874 1B68     		ldr	r3, [r3]
 10927 1876 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1101:src/keys.c    **** #undef _RARG
 10928              		.loc 1 1101 57 view .LVU3403
 10929 187a DC07     		lsls	r4, r3, #31
 10930 187c 7FF5A6AE 		bpl	.L823
 10931              	.LVL896:
1101:src/keys.c    **** #undef _RARG
 10932              		.loc 1 1101 21 view .LVU3404
 10933 1880 1AF4804F 		tst	r10, #16384
 10934 1884 3FF4A2AE 		beq	.L823
 10935 1888 3268     		ldr	r2, [r6]
1101:src/keys.c    **** #undef _RARG
 10936              		.loc 1 1101 57 view .LVU3405
 10937 188a 4FF0330B 		mov	fp, #51
 10938 188e FEF710BC 		b	.L565
 10939              	.LVL897:
 10940              	.L821:
1077:src/keys.c    **** #endif
 10941              		.loc 1 1077 4 is_stmt 1 view .LVU3406
1077:src/keys.c    **** #endif
 10942              		.loc 1 1077 8 is_stmt 0 view .LVU3407
 10943 1892 93F8E737 		ldrb	r3, [r3, #2023]	@ zero_extendqisi2
1077:src/keys.c    **** #endif
 10944              		.loc 1 1077 7 view .LVU3408
 10945 1896 9B06     		lsls	r3, r3, #26
 10946 1898 7FF587AE 		bpl	.L820
1077:src/keys.c    **** #endif
 10947              		.loc 1 1077 29 view .LVU3409
 10948 189c 40F24F1B 		movw	fp, #335
 10949 18a0 94E6     		b	.L823
 10950              	.LVL898:
 10951              	.L1151:
1077:src/keys.c    **** #endif
 10952              		.loc 1 1077 29 view .LVU3410
 10953              	.LBE1158:
 10954              	.LBE1173:
 10955              	.LBB1174:
 10956              	.LBB825:
ARM GAS  /tmp/cccKVeLo.s 			page 306


1375:src/keys.c    **** 		if (rawpc == 1)
 10957              		.loc 1 1375 3 is_stmt 1 view .LVU3411
1375:src/keys.c    **** 		if (rawpc == 1)
 10958              		.loc 1 1375 11 is_stmt 0 view .LVU3412
 10959 18a2 DFF8D091 		ldr	r9, .L1216
 10960 18a6 D9F80030 		ldr	r3, [r9]
 10961              	.LVL899:
1375:src/keys.c    **** 		if (rawpc == 1)
 10962              		.loc 1 1375 9 view .LVU3413
 10963 18aa B3F8E007 		ldrh	r0, [r3, #2016]
 10964              	.LVL900:
1376:src/keys.c    **** 			rawpc = 0;
 10965              		.loc 1 1376 3 is_stmt 1 view .LVU3414
1377:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
 10966              		.loc 1 1377 10 is_stmt 0 view .LVU3415
 10967 18ae 0128     		cmp	r0, #1
 10968              	.LVL901:
1378:src/keys.c    **** 		update_program_bounds(1);
 10969              		.loc 1 1378 3 is_stmt 1 view .LVU3416
 10970 18b0 08BF     		it	eq
 10971 18b2 0020     		moveq	r0, #0
 10972              	.LVL902:
1378:src/keys.c    **** 		update_program_bounds(1);
 10973              		.loc 1 1378 3 is_stmt 0 view .LVU3417
 10974 18b4 0021     		movs	r1, #0
 10975 18b6 FFF7FEFF 		bl	do_dec
 10976              	.LVL903:
1378:src/keys.c    **** 		update_program_bounds(1);
 10977              		.loc 1 1378 3 view .LVU3418
 10978 18ba FFF7FEFF 		bl	set_pc
 10979              	.LVL904:
1379:src/keys.c    **** 		rawpc = ProgBegin;
 10980              		.loc 1 1379 3 is_stmt 1 view .LVU3419
 10981 18be 0120     		movs	r0, #1
 10982 18c0 FFF7FEFF 		bl	update_program_bounds
 10983              	.LVL905:
1380:src/keys.c    **** 		goto fin;
 10984              		.loc 1 1380 3 view .LVU3420
1380:src/keys.c    **** 		goto fin;
 10985              		.loc 1 1380 11 is_stmt 0 view .LVU3421
 10986 18c4 D9F80030 		ldr	r3, [r9]
1380:src/keys.c    **** 		goto fin;
 10987              		.loc 1 1380 9 view .LVU3422
 10988 18c8 B3F8EC07 		ldrh	r0, [r3, #2028]
 10989              	.LVL906:
1381:src/keys.c    **** 	}
 10990              		.loc 1 1381 3 is_stmt 1 view .LVU3423
 10991 18cc FFF742BA 		b	.L607
 10992              	.LVL907:
 10993              	.L1176:
1381:src/keys.c    **** 	}
 10994              		.loc 1 1381 3 is_stmt 0 view .LVU3424
 10995 18d0 3268     		ldr	r2, [r6]
 10996              	.LBE825:
 10997              	.LBE1174:
 10998              	.LBE1254:
 10999              	.LBE1329:
ARM GAS  /tmp/cccKVeLo.s 			page 307


2977:src/keys.c    ****   if (was_paused && Pause == 0)
 11000              		.loc 1 2977 7 view .LVU3425
 11001 18d2 0D46     		mov	r5, r1
 11002              	.LBB1330:
 11003              	.LBB1255:
 11004              	.LBB1175:
 11005              	.LBB753:
1517:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
 11006              		.loc 1 1517 10 view .LVU3426
 11007 18d4 4FF0330B 		mov	fp, #51
 11008 18d8 FEF7EBBB 		b	.L565
 11009              	.LVL908:
 11010              	.L1184:
1517:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
 11011              		.loc 1 1517 10 view .LVU3427
 11012              	.LBE753:
 11013              	.LBE1175:
 11014              	.LBB1176:
 11015              	.LBB1032:
 914:src/keys.c    **** 
 11016              		.loc 1 914 3 is_stmt 1 view .LVU3428
 914:src/keys.c    **** 
 11017              		.loc 1 914 6 is_stmt 0 view .LVU3429
 11018 18dc 2BF4704B 		bic	fp, fp, #61440
 11019              	.LVL909:
 916:src/keys.c    **** 	case K00:
 11020              		.loc 1 916 2 is_stmt 1 view .LVU3430
 11021 18e0 282C     		cmp	r4, #40
 11022 18e2 3FF6B4AE 		bhi	.L795
 11023 18e6 01A2     		adr	r2, .L797
 11024 18e8 52F824F0 		ldr	pc, [r2, r4, lsl #2]
 11025              		.p2align 2
 11026              	.L797:
 11027 18ec B3160000 		.word	.L805+1
 11028 18f0 D7160000 		.word	.L803+1
 11029 18f4 4F160000 		.word	.L795+1
 11030 18f8 D7160000 		.word	.L803+1
 11031 18fc 4F160000 		.word	.L795+1
 11032 1900 4F160000 		.word	.L795+1
 11033 1904 4F160000 		.word	.L795+1
 11034 1908 4F160000 		.word	.L795+1
 11035 190c 4F160000 		.word	.L795+1
 11036 1910 4F160000 		.word	.L795+1
 11037 1914 4F160000 		.word	.L795+1
 11038 1918 4F160000 		.word	.L795+1
 11039 191c 43160000 		.word	.L802+1
 11040 1920 4F160000 		.word	.L795+1
 11041 1924 4F160000 		.word	.L795+1
 11042 1928 4F160000 		.word	.L795+1
 11043 192c 4F160000 		.word	.L795+1
 11044 1930 4F160000 		.word	.L795+1
 11045 1934 39170000 		.word	.L801+1
 11046 1938 05170000 		.word	.L800+1
 11047 193c 4F160000 		.word	.L795+1
 11048 1940 4F160000 		.word	.L795+1
 11049 1944 4F160000 		.word	.L795+1
 11050 1948 4F160000 		.word	.L795+1
ARM GAS  /tmp/cccKVeLo.s 			page 308


 11051 194c 4F160000 		.word	.L795+1
 11052 1950 4F160000 		.word	.L795+1
 11053 1954 4F160000 		.word	.L795+1
 11054 1958 4F160000 		.word	.L795+1
 11055 195c 4F160000 		.word	.L795+1
 11056 1960 4F160000 		.word	.L795+1
 11057 1964 7D160000 		.word	.L799+1
 11058 1968 67160000 		.word	.L798+1
 11059 196c 8B160000 		.word	.L796+1
 11060 1970 8B160000 		.word	.L796+1
 11061 1974 4F160000 		.word	.L795+1
 11062 1978 4F160000 		.word	.L795+1
 11063 197c 4F160000 		.word	.L795+1
 11064 1980 4F160000 		.word	.L795+1
 11065 1984 4F160000 		.word	.L795+1
 11066 1988 8B160000 		.word	.L796+1
 11067 198c 8B160000 		.word	.L796+1
 11068              	.LVL910:
 11069              		.p2align 1
 11070              	.L1169:
 916:src/keys.c    **** 	case K00:
 11071              		.loc 1 916 2 is_stmt 0 view .LVU3431
 11072              	.LBE1032:
 11073              	.LBE1176:
 11074              	.LBB1177:
 11075              	.LBB998:
2584:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 11076              		.loc 1 2584 3 is_stmt 1 view .LVU3432
2584:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 11077              		.loc 1 2584 8 is_stmt 0 view .LVU3433
 11078 1990 4FEA8B34 		lsl	r4, fp, #14
2584:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 11079              		.loc 1 2584 6 view .LVU3434
 11080 1994 44F00104 		orr	r4, r4, #1
 11081              	.LVL911:
2585:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 11082              		.loc 1 2585 3 is_stmt 1 view .LVU3435
2585:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 11083              		.loc 1 2585 9 is_stmt 0 view .LVU3436
 11084 1998 2046     		mov	r0, r4
 11085 199a FFF7FEFF 		bl	is_label_or_end_at
 11086              	.LVL912:
2585:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 11087              		.loc 1 2585 6 view .LVU3437
 11088 199e 0246     		mov	r2, r0
 11089 19a0 0028     		cmp	r0, #0
 11090 19a2 00F03A81 		beq	.L1192
 11091              	.L699:
2587:src/keys.c    **** 		return STATE_UNFINISHED;
 11092              		.loc 1 2587 3 is_stmt 1 view .LVU3438
 11093 19a6 3268     		ldr	r2, [r6]
2587:src/keys.c    **** 		return STATE_UNFINISHED;
 11094              		.loc 1 2587 17 is_stmt 0 view .LVU3439
 11095 19a8 A8F80840 		strh	r4, [r8, #8]	@ movhi
2588:src/keys.c    **** 	}
 11096              		.loc 1 2588 3 is_stmt 1 view .LVU3440
2588:src/keys.c    **** 	}
ARM GAS  /tmp/cccKVeLo.s 			page 309


 11097              		.loc 1 2588 10 is_stmt 0 view .LVU3441
 11098 19ac 4FF0330B 		mov	fp, #51
 11099              	.LVL913:
2588:src/keys.c    **** 	}
 11100              		.loc 1 2588 10 view .LVU3442
 11101 19b0 FEF77FBB 		b	.L565
 11102              	.LVL914:
 11103              	.L1168:
2577:src/keys.c    **** 	const int direct = State2.runmode;
 11104              		.loc 1 2577 37 view .LVU3443
 11105 19b4 5046     		mov	r0, r10
 11106 19b6 FFF7FEFF 		bl	getprog
 11107              	.LVL915:
2577:src/keys.c    **** 	const int direct = State2.runmode;
 11108              		.loc 1 2577 63 view .LVU3444
 11109 19ba 20F47062 		bic	r2, r0, #3840
 11110 19be FFF7ACBA 		b	.L696
 11111              	.LVL916:
 11112              	.L1174:
2577:src/keys.c    **** 	const int direct = State2.runmode;
 11113              		.loc 1 2577 63 view .LVU3445
 11114              	.LBE998:
 11115              	.LBE1177:
 11116              	.LBB1178:
 11117              	.LBB1076:
2727:src/keys.c    **** 		goto reset_window;
 11118              		.loc 1 2727 3 is_stmt 1 view .LVU3446
2727:src/keys.c    **** 		goto reset_window;
 11119              		.loc 1 2727 17 is_stmt 0 view .LVU3447
 11120 19c2 A8F808B0 		strh	fp, [r8, #8]	@ movhi
2728:src/keys.c    **** 	}
 11121              		.loc 1 2728 3 is_stmt 1 view .LVU3448
 11122 19c6 24E4     		b	.L727
 11123              	.L745:
 11124 19c8 3268     		ldr	r2, [r6]
2761:src/keys.c    **** 		break;		// Exit doing nothing
 11125              		.loc 1 2761 11 is_stmt 0 view .LVU3449
 11126 19ca 4FF0330B 		mov	fp, #51
 11127              	.LVL917:
2761:src/keys.c    **** 		break;		// Exit doing nothing
 11128              		.loc 1 2761 11 view .LVU3450
 11129 19ce FEF770BB 		b	.L565
 11130              	.LVL918:
 11131              	.L1172:
 11132              	.LBB1071:
2716:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 11133              		.loc 1 2716 3 is_stmt 1 view .LVU3451
2716:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 11134              		.loc 1 2716 19 is_stmt 0 view .LVU3452
 11135 19d2 B8F80810 		ldrh	r1, [r8, #8]
2716:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 11136              		.loc 1 2716 27 view .LVU3453
 11137 19d6 0A23     		movs	r3, #10
2716:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 11138              		.loc 1 2716 32 view .LVU3454
 11139 19d8 03FB01B2 		mla	r2, r3, r1, fp
2716:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
ARM GAS  /tmp/cccKVeLo.s 			page 310


 11140              		.loc 1 2716 37 view .LVU3455
 11141 19dc 6424     		movs	r4, #100
 11142 19de B2FBF4F3 		udiv	r3, r2, r4
 11143 19e2 04FB1323 		mls	r3, r4, r3, r2
 11144              	.LVL919:
2717:src/keys.c    **** 			dv = n;
 11145              		.loc 1 2717 3 is_stmt 1 view .LVU3456
2717:src/keys.c    **** 			dv = n;
 11146              		.loc 1 2717 6 is_stmt 0 view .LVU3457
 11147 19e6 5345     		cmp	r3, r10
 11148 19e8 09DA     		bge	.L729
2717:src/keys.c    **** 			dv = n;
 11149              		.loc 1 2717 21 view .LVU3458
 11150 19ea 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2717:src/keys.c    **** 			dv = n;
 11151              		.loc 1 2717 17 view .LVU3459
 11152 19ee D407     		lsls	r4, r2, #31
 11153 19f0 3FF50DAC 		bmi	.L1095
2717:src/keys.c    **** 			dv = n;
 11154              		.loc 1 2717 36 view .LVU3460
 11155 19f4 8842     		cmp	r0, r1
 11156 19f6 02DD     		ble	.L729
2717:src/keys.c    **** 			dv = n;
 11157              		.loc 1 2717 63 view .LVU3461
 11158 19f8 9842     		cmp	r0, r3
 11159 19fa 3FF708AC 		bgt	.L1095
 11160              	.L729:
2718:src/keys.c    **** 		State2.digval = dv;
 11161              		.loc 1 2718 4 is_stmt 1 view .LVU3462
2718:src/keys.c    **** 		State2.digval = dv;
 11162              		.loc 1 2718 7 is_stmt 0 view .LVU3463
 11163 19fe 5B46     		mov	r3, fp
 11164              	.LVL920:
2719:src/keys.c    **** 		goto reset_window;
 11165              		.loc 1 2719 3 is_stmt 1 view .LVU3464
 11166 1a00 05E4     		b	.L1095
 11167              	.LVL921:
 11168              	.L912:
2719:src/keys.c    **** 		goto reset_window;
 11169              		.loc 1 2719 3 is_stmt 0 view .LVU3465
 11170              	.LBE1071:
 11171              	.LBE1076:
 11172              	.LBE1178:
 11173              	.LBB1179:
 11174              	.LBB670:
 11175              	.LBB664:
 304:src/keys.c    ****     }
 11176              		.loc 1 304 14 view .LVU3466
 11177 1a02 4FF0160B 		mov	fp, #22
 11178 1a06 FFF74BB9 		b	.L661
 11179              	.LVL922:
 11180              	.L1165:
 304:src/keys.c    ****     }
 11181              		.loc 1 304 14 view .LVU3467
 11182              	.LBE664:
 11183              	.LBE670:
 11184              	.LBE1179:
ARM GAS  /tmp/cccKVeLo.s 			page 311


 11185              	.LBB1180:
 11186              	.LBB950:
2441:src/keys.c    **** 		State2.numdigit = 1;
 11187              		.loc 1 2441 3 is_stmt 1 view .LVU3468
2442:src/keys.c    **** 		return STATE_UNFINISHED;
 11188              		.loc 1 2442 19 is_stmt 0 view .LVU3469
 11189 1a0a 0123     		movs	r3, #1
 11190 1a0c 3268     		ldr	r2, [r6]
2441:src/keys.c    **** 		State2.numdigit = 1;
 11191              		.loc 1 2441 17 view .LVU3470
 11192 1a0e A8F80800 		strh	r0, [r8, #8]	@ movhi
2442:src/keys.c    **** 		return STATE_UNFINISHED;
 11193              		.loc 1 2442 3 is_stmt 1 view .LVU3471
2442:src/keys.c    **** 		return STATE_UNFINISHED;
 11194              		.loc 1 2442 19 is_stmt 0 view .LVU3472
 11195 1a12 88F80B30 		strb	r3, [r8, #11]
2443:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 11196              		.loc 1 2443 3 is_stmt 1 view .LVU3473
2443:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 11197              		.loc 1 2443 10 is_stmt 0 view .LVU3474
 11198 1a16 4FF0330B 		mov	fp, #51
 11199 1a1a FEF74ABB 		b	.L565
 11200              	.L1164:
2443:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 11201              		.loc 1 2443 10 view .LVU3475
 11202 1a1e 3268     		ldr	r2, [r6]
2438:src/keys.c    **** add_char:
 11203              		.loc 1 2438 10 view .LVU3476
 11204 1a20 4FF0330B 		mov	fp, #51
 11205 1a24 FEF745BB 		b	.L565
 11206              	.LVL923:
 11207              	.L667:
2438:src/keys.c    **** add_char:
 11208              		.loc 1 2438 10 view .LVU3477
 11209 1a28 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 11210              	.LBE950:
 11211              	.LBE1180:
 11212              	.LBB1181:
 11213              	.LBB671:
 11214              	.LBB665:
 325:src/keys.c    **** #ifndef WINGUI
 11215              		.loc 1 325 8 view .LVU3478
 11216 1a2c 134B     		ldr	r3, .L1216+8
 331:src/keys.c    ****   }
 11217              		.loc 1 331 9 view .LVU3479
 11218 1a2e 0C22     		movs	r2, #12
 327:src/keys.c    **** #else
 11219              		.loc 1 327 73 view .LVU3480
 11220 1a30 4FF0020C 		mov	ip, #2
 11221 1a34 FEF70ABC 		b	.L666
 11222              	.LVL924:
 11223              	.L1180:
 327:src/keys.c    **** #else
 11224              		.loc 1 327 73 view .LVU3481
 11225 1a38 3268     		ldr	r2, [r6]
 11226 1a3a FEF73ABB 		b	.L565
 11227              	.LVL925:
ARM GAS  /tmp/cccKVeLo.s 			page 312


 11228              	.L614:
 327:src/keys.c    **** #else
 11229              		.loc 1 327 73 view .LVU3482
 11230              	.LBE665:
 11231              	.LBE671:
 11232              	.LBE1181:
 11233              	.LBB1182:
 11234              	.LBB826:
1385:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 11235              		.loc 1 1385 3 is_stmt 1 view .LVU3483
1386:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 11236              		.loc 1 1386 18 is_stmt 0 view .LVU3484
 11237 1a3e 0D4C     		ldr	r4, .L1216
1385:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 11238              		.loc 1 1385 3 view .LVU3485
 11239 1a40 0120     		movs	r0, #1
 11240 1a42 FFF7FEFF 		bl	update_program_bounds
 11241              	.LVL926:
1386:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 11242              		.loc 1 1386 3 is_stmt 1 view .LVU3486
1386:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 11243              		.loc 1 1386 18 is_stmt 0 view .LVU3487
 11244 1a46 2368     		ldr	r3, [r4]
1386:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 11245              		.loc 1 1386 11 view .LVU3488
 11246 1a48 0021     		movs	r1, #0
 11247 1a4a B3F8EE07 		ldrh	r0, [r3, #2030]
 11248 1a4e FFF7FEFF 		bl	do_inc
 11249              	.LVL927:
1387:src/keys.c    **** 			rawpc = 1;
 11250              		.loc 1 1387 3 is_stmt 1 view .LVU3489
1387:src/keys.c    **** 			rawpc = 1;
 11251              		.loc 1 1387 6 is_stmt 0 view .LVU3490
 11252 1a52 0028     		cmp	r0, #0
 11253 1a54 7FF47EA9 		bne	.L607
1387:src/keys.c    **** 			rawpc = 1;
 11254              		.loc 1 1387 21 view .LVU3491
 11255 1a58 2368     		ldr	r3, [r4]
1387:src/keys.c    **** 			rawpc = 1;
 11256              		.loc 1 1387 18 view .LVU3492
 11257 1a5a 5888     		ldrh	r0, [r3, #2]
 11258              	.LVL928:
1387:src/keys.c    **** 			rawpc = 1;
 11259              		.loc 1 1387 18 view .LVU3493
 11260 1a5c 0038     		subs	r0, r0, #0
 11261 1a5e 18BF     		it	ne
 11262 1a60 0120     		movne	r0, #1
 11263 1a62 FFF777B9 		b	.L607
 11264              	.LVL929:
 11265              	.L848:
1387:src/keys.c    **** 			rawpc = 1;
 11266              		.loc 1 1387 18 view .LVU3494
 11267              	.LBE826:
 11268              	.LBE1182:
 11269              	.LBB1183:
 11270              	.LBB689:
 774:src/keys.c    **** 	case K03:
ARM GAS  /tmp/cccKVeLo.s 			page 313


 11271              		.loc 1 774 3 is_stmt 1 view .LVU3495
 774:src/keys.c    **** 	case K03:
 11272              		.loc 1 774 10 is_stmt 0 view .LVU3496
 11273 1a66 5146     		mov	r1, r10
 11274 1a68 0120     		movs	r0, #1
 11275 1a6a FFF7FEFF 		bl	check_f_key
 11276              	.LVL930:
 11277 1a6e 8346     		mov	fp, r0
 11278 1a70 FEF7E2BC 		b	.L595
 11279              	.L1217:
 11280              		.align	2
 11281              	.L1216:
 11282 1a74 00000000 		.word	main_ram
 11283 1a78 00000000 		.word	NonProgrammable
 11284 1a7c 00000000 		.word	.LANCHOR11
 11285              	.L847:
 772:src/keys.c    **** 	case K01:
 11286              		.loc 1 772 3 is_stmt 1 view .LVU3497
 772:src/keys.c    **** 	case K01:
 11287              		.loc 1 772 10 is_stmt 0 view .LVU3498
 11288 1a80 5146     		mov	r1, r10
 11289 1a82 0020     		movs	r0, #0
 11290 1a84 FFF7FEFF 		bl	check_f_key
 11291              	.LVL931:
 11292 1a88 8346     		mov	fp, r0
 11293 1a8a FEF7D5BC 		b	.L595
 11294              	.L849:
 802:src/keys.c    **** 		State2.arrow = 1;
 11295              		.loc 1 802 3 is_stmt 1 view .LVU3499
 11296 1a8e FFF7FEFF 		bl	process_cmdline_set_lift
 11297              	.LVL932:
 803:src/keys.c    **** #ifdef DM42
 11298              		.loc 1 803 3 view .LVU3500
 803:src/keys.c    **** #ifdef DM42
 11299              		.loc 1 803 16 is_stmt 0 view .LVU3501
 11300 1a92 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
 805:src/keys.c    **** 		display_current_menu ();
 11301              		.loc 1 805 3 view .LVU3502
 11302 1a96 0920     		movs	r0, #9
 803:src/keys.c    **** #ifdef DM42
 11303              		.loc 1 803 16 view .LVU3503
 11304 1a98 43F00403 		orr	r3, r3, #4
 11305 1a9c 88F81530 		strb	r3, [r8, #21]
 805:src/keys.c    **** 		display_current_menu ();
 11306              		.loc 1 805 3 is_stmt 1 view .LVU3504
 11307 1aa0 FFF7FEFF 		bl	set_menu
 11308              	.LVL933:
 806:src/keys.c    **** 		lcd_refresh ();
 11309              		.loc 1 806 3 view .LVU3505
 11310 1aa4 FFF7FEFF 		bl	display_current_menu
 11311              	.LVL934:
 807:src/keys.c    **** #else
 11312              		.loc 1 807 3 view .LVU3506
 11313 1aa8 CD4B     		ldr	r3, .L1218
 11314 1aaa 9847     		blx	r3
 11315              	.LVL935:
 811:src/keys.c    **** 
ARM GAS  /tmp/cccKVeLo.s 			page 314


 11316              		.loc 1 811 3 view .LVU3507
 11317              	.LBE689:
 11318              	.LBE1183:
 11319              	.LBE1255:
 11320              	.LBE1330:
2977:src/keys.c    ****   if (was_paused && Pause == 0)
 11321              		.loc 1 2977 7 is_stmt 0 view .LVU3508
 11322 1aac 2546     		mov	r5, r4
 11323 1aae 3268     		ldr	r2, [r6]
 11324              	.LBB1331:
 11325              	.LBB1256:
 11326              	.LBB1184:
 11327              	.LBB690:
 841:src/keys.c    **** }
 11328              		.loc 1 841 9 view .LVU3509
 11329 1ab0 4FF0330B 		mov	fp, #51
 811:src/keys.c    **** 
 11330              		.loc 1 811 3 view .LVU3510
 11331 1ab4 FEF7FDBA 		b	.L565
 11332              	.LVL936:
 11333              	.L837:
 811:src/keys.c    **** 
 11334              		.loc 1 811 3 view .LVU3511
 11335              	.LBE690:
 11336              	.LBE1184:
 11337              	.LBE1256:
 11338              	.LBE1331:
3198:src/keys.c    **** 	NonProgrammable = 0;
 11339              		.loc 1 3198 7 is_stmt 1 view .LVU3512
3198:src/keys.c    **** 	NonProgrammable = 0;
 11340              		.loc 1 3198 11 is_stmt 0 view .LVU3513
 11341 1ab8 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3198:src/keys.c    **** 	NonProgrammable = 0;
 11342              		.loc 1 3198 10 view .LVU3514
 11343 1abc 5806     		lsls	r0, r3, #25
 11344 1abe 2AD5     		bpl	.L935
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11345              		.loc 1 3199 2 is_stmt 1 view .LVU3515
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11346              		.loc 1 3199 18 is_stmt 0 view .LVU3516
 11347 1ac0 C84B     		ldr	r3, .L1218+4
 11348 1ac2 0022     		movs	r2, #0
 11349              	.LBB1332:
 11350              	.LBB1257:
 11351              	.LBB1185:
 11352              	.LBB691:
 738:src/keys.c    **** 	    }
 11353              		.loc 1 738 15 view .LVU3517
 11354 1ac4 4FF00F0B 		mov	fp, #15
 11355              	.LBE691:
 11356              	.LBE1185:
 11357              	.LBE1257:
 11358              	.LBE1332:
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11359              		.loc 1 3199 18 view .LVU3518
 11360 1ac8 1A60     		str	r2, [r3]
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
ARM GAS  /tmp/cccKVeLo.s 			page 315


 11361              		.loc 1 3200 2 is_stmt 1 view .LVU3519
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11362              		.loc 1 3200 32 is_stmt 0 view .LVU3520
 11363 1aca 5846     		mov	r0, fp
 11364 1acc FEF77EBE 		b	.L874
 11365              	.LVL937:
 11366              	.L791:
 11367              	.LBB1333:
 11368              	.LBB1258:
 11369              	.LBB1186:
 11370              	.LBB1128:
1193:src/keys.c    **** 				State2.cmplx = 1;
 11371              		.loc 1 1193 5 is_stmt 1 view .LVU3521
 11372 1ad0 FFF7FEFF 		bl	process_cmdline_set_lift
 11373              	.LVL938:
1194:src/keys.c    **** 				State2.test = op;
 11374              		.loc 1 1194 5 view .LVU3522
1194:src/keys.c    **** 				State2.test = op;
 11375              		.loc 1 1194 18 is_stmt 0 view .LVU3523
 11376 1ad4 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
 11377 1ad8 3268     		ldr	r2, [r6]
1195:src/keys.c    **** 			}
 11378              		.loc 1 1195 17 view .LVU3524
 11379 1ada 88F80FB0 		strb	fp, [r8, #15]
1194:src/keys.c    **** 				State2.test = op;
 11380              		.loc 1 1194 18 view .LVU3525
 11381 1ade 43F00203 		orr	r3, r3, #2
 11382 1ae2 88F81530 		strb	r3, [r8, #21]
1195:src/keys.c    **** 			}
 11383              		.loc 1 1195 5 is_stmt 1 view .LVU3526
 11384              	.LBE1128:
 11385              	.LBE1186:
 11386              	.LBE1258:
 11387              	.LBE1333:
2977:src/keys.c    ****   if (was_paused && Pause == 0)
 11388              		.loc 1 2977 7 is_stmt 0 view .LVU3527
 11389 1ae6 2546     		mov	r5, r4
 11390              	.LBB1334:
 11391              	.LBB1259:
 11392              	.LBB1187:
 11393              	.LBB1129:
1197:src/keys.c    **** 
 11394              		.loc 1 1197 11 view .LVU3528
 11395 1ae8 4FF0330B 		mov	fp, #51
 11396              	.LVL939:
1197:src/keys.c    **** 
 11397              		.loc 1 1197 11 view .LVU3529
 11398 1aec FEF7E1BA 		b	.L565
 11399              	.LVL940:
 11400              	.L1163:
1197:src/keys.c    **** 
 11401              		.loc 1 1197 11 view .LVU3530
 11402              	.LBE1129:
 11403              	.LBE1187:
 11404              	.LBB1188:
 11405              	.LBB951:
 11406              	.LBB945:
ARM GAS  /tmp/cccKVeLo.s 			page 316


 11407              	.LBB934:
 442:src/keys.c    **** 			shift = SHIFT_LC_G;
 11408              		.loc 1 442 8 is_stmt 1 view .LVU3531
 443:src/keys.c    **** 	}
 11409              		.loc 1 443 10 is_stmt 0 view .LVU3532
 11410 1af0 0229     		cmp	r1, #2
 11411 1af2 08BF     		it	eq
 11412 1af4 0521     		moveq	r1, #5
 11413              	.LVL941:
 443:src/keys.c    **** 	}
 11414              		.loc 1 443 10 view .LVU3533
 11415 1af6 FFF770B9 		b	.L687
 11416              	.LVL942:
 11417              	.L850:
 443:src/keys.c    **** 	}
 11418              		.loc 1 443 10 view .LVU3534
 11419              	.LBE934:
 11420              	.LBE945:
 11421              	.LBE951:
 11422              	.LBE1188:
 11423              	.LBB1189:
 11424              	.LBB692:
 817:src/keys.c    **** #else
 11425              		.loc 1 817 4 is_stmt 1 view .LVU3535
 817:src/keys.c    **** #else
 11426              		.loc 1 817 17 is_stmt 0 view .LVU3536
 11427 1afa 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
 11428 1afe 3268     		ldr	r2, [r6]
 11429 1b00 43F00203 		orr	r3, r3, #2
 11430 1b04 88F81530 		strb	r3, [r8, #21]
 823:src/keys.c    **** 
 11431              		.loc 1 823 4 is_stmt 1 view .LVU3537
 841:src/keys.c    **** }
 11432              		.loc 1 841 9 is_stmt 0 view .LVU3538
 11433 1b08 4FF0330B 		mov	fp, #51
 823:src/keys.c    **** 
 11434              		.loc 1 823 4 view .LVU3539
 11435 1b0c FEF7D1BA 		b	.L565
 11436              	.LVL943:
 11437              	.L1179:
 823:src/keys.c    **** 
 11438              		.loc 1 823 4 view .LVU3540
 11439 1b10 3268     		ldr	r2, [r6]
 11440 1b12 FEF7CEBA 		b	.L565
 11441              	.LVL944:
 11442              	.L935:
 738:src/keys.c    **** 	    }
 11443              		.loc 1 738 15 view .LVU3541
 11444 1b16 4FF00F0B 		mov	fp, #15
 11445              	.LVL945:
 11446              	.L873:
 738:src/keys.c    **** 	    }
 11447              		.loc 1 738 15 view .LVU3542
 11448              	.LBE692:
 11449              	.LBE1189:
 11450              	.LBE1259:
 11451              	.LBE1334:
ARM GAS  /tmp/cccKVeLo.s 			page 317


3198:src/keys.c    **** 	NonProgrammable = 0;
 11452              		.loc 1 3198 26 view .LVU3543
 11453 1b1a B24B     		ldr	r3, .L1218+4
 11454 1b1c 1A68     		ldr	r2, [r3]
 11455 1b1e 7AB3     		cbz	r2, .L1097
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11456              		.loc 1 3199 2 is_stmt 1 view .LVU3544
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11457              		.loc 1 3199 18 is_stmt 0 view .LVU3545
 11458 1b20 0022     		movs	r2, #0
 11459 1b22 1A60     		str	r2, [r3]
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11460              		.loc 1 3200 2 is_stmt 1 view .LVU3546
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11461              		.loc 1 3200 32 is_stmt 0 view .LVU3547
 11462 1b24 5846     		mov	r0, fp
 11463 1b26 FEF751BE 		b	.L874
 11464              	.LVL946:
 11465              	.L1138:
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11466              		.loc 1 3199 2 is_stmt 1 view .LVU3548
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11467              		.loc 1 3199 18 is_stmt 0 view .LVU3549
 11468 1b2a 0022     		movs	r2, #0
 11469 1b2c 1A60     		str	r2, [r3]
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11470              		.loc 1 3200 2 is_stmt 1 view .LVU3550
 11471 1b2e FEF79FBD 		b	.L872
 11472              	.LVL947:
 11473              	.L735:
 11474              	.LBB1335:
 11475              	.LBB1260:
 11476              	.LBB1190:
 11477              	.LBB1077:
2739:src/keys.c    **** 		goto reset_window;
 11478              		.loc 1 2739 4 view .LVU3551
2739:src/keys.c    **** 		goto reset_window;
 11479              		.loc 1 2739 24 is_stmt 0 view .LVU3552
 11480 1b32 0AF1FF3A 		add	r10, r10, #-1
 11481              	.LVL948:
2739:src/keys.c    **** 		goto reset_window;
 11482              		.loc 1 2739 18 view .LVU3553
 11483 1b36 A8F808A0 		strh	r10, [r8, #8]	@ movhi
 11484 1b3a FFF76ABB 		b	.L727
 11485              	.LVL949:
 11486              	.L1175:
2735:src/keys.c    **** 			--State2.digval;
 11487              		.loc 1 2735 5 is_stmt 1 view .LVU3554
2735:src/keys.c    **** 			--State2.digval;
 11488              		.loc 1 2735 21 is_stmt 0 view .LVU3555
 11489 1b3e FFF7FEFF 		bl	global_regs
 11490              	.LVL950:
2735:src/keys.c    **** 			--State2.digval;
 11491              		.loc 1 2735 19 view .LVU3556
 11492 1b42 A8F80800 		strh	r0, [r8, #8]	@ movhi
 11493 1b46 FFF75FBB 		b	.L736
 11494              	.LVL951:
ARM GAS  /tmp/cccKVeLo.s 			page 318


 11495              	.L1182:
2735:src/keys.c    **** 			--State2.digval;
 11496              		.loc 1 2735 19 view .LVU3557
 11497              	.LBE1077:
 11498              	.LBE1190:
 11499              	.LBB1191:
 11500              	.LBB1159:
1087:src/keys.c    **** 			set_pc(0);
 11501              		.loc 1 1087 43 view .LVU3558
 11502 1b4a B3F8EE37 		ldrh	r3, [r3, #2030]
 11503 1b4e 012B     		cmp	r3, #1
 11504 1b50 7FF42BAD 		bne	.L820
1088:src/keys.c    **** 		break;
 11505              		.loc 1 1088 4 is_stmt 1 view .LVU3559
 11506 1b54 FFF7FEFF 		bl	set_pc
 11507              	.LVL952:
 11508 1b58 27E5     		b	.L820
 11509              	.L1181:
 11510 1b5a 3268     		ldr	r2, [r6]
1083:src/keys.c    **** 		State2.runmode = 1 - State2.runmode;
 11511              		.loc 1 1083 11 is_stmt 0 view .LVU3560
 11512 1b5c 4FF0330B 		mov	fp, #51
 11513 1b60 FEF7A7BA 		b	.L565
 11514              	.LVL953:
 11515              	.L1090:
1083:src/keys.c    **** 		State2.runmode = 1 - State2.runmode;
 11516              		.loc 1 1083 11 view .LVU3561
 11517              	.LBE1159:
 11518              	.LBE1191:
 11519              	.LBE1260:
 11520              	.LBE1335:
3198:src/keys.c    **** 	NonProgrammable = 0;
 11521              		.loc 1 3198 26 discriminator 1 view .LVU3562
 11522 1b64 1368     		ldr	r3, [r2]
 11523 1b66 002B     		cmp	r3, #0
 11524 1b68 7EF459AD 		bne	.L875
 11525 1b6c FEF7E1BC 		b	.L876
 11526              	.LVL954:
 11527              	.L738:
 11528              	.LBB1336:
 11529              	.LBB1261:
 11530              	.LBB1192:
 11531              	.LBB1078:
2749:src/keys.c    **** 		goto reset_window;
 11532              		.loc 1 2749 4 is_stmt 1 view .LVU3563
2749:src/keys.c    **** 		goto reset_window;
 11533              		.loc 1 2749 18 is_stmt 0 view .LVU3564
 11534 1b70 0023     		movs	r3, #0
 11535 1b72 A8F80830 		strh	r3, [r8, #8]	@ movhi
 11536 1b76 FFF74CBB 		b	.L727
 11537              	.LVL955:
 11538              	.L934:
2749:src/keys.c    **** 		goto reset_window;
 11539              		.loc 1 2749 18 view .LVU3565
 11540              	.LBE1078:
 11541              	.LBE1192:
 11542              	.LBB1193:
ARM GAS  /tmp/cccKVeLo.s 			page 319


 11543              	.LBB693:
 762:src/keys.c    **** 	    }
 11544              		.loc 1 762 15 view .LVU3566
 11545 1b7a 4FF0140B 		mov	fp, #20
 11546 1b7e CCE7     		b	.L873
 11547              	.LVL956:
 11548              	.L1097:
 762:src/keys.c    **** 	    }
 11549              		.loc 1 762 15 view .LVU3567
 11550 1b80 5846     		mov	r0, fp
 11551 1b82 FEF7D6BC 		b	.L876
 11552              	.LVL957:
 11553              	.L931:
 762:src/keys.c    **** 	    }
 11554              		.loc 1 762 15 view .LVU3568
 11555              	.LBE693:
 11556              	.LBE1193:
 11557              	.LBB1194:
 11558              	.LBB1033:
 967:src/keys.c    **** 	  }
 11559              		.loc 1 967 13 view .LVU3569
 11560 1b86 4FF0130B 		mov	fp, #19
 11561 1b8a C6E7     		b	.L873
 11562              	.LVL958:
 11563              	.L688:
 967:src/keys.c    **** 	  }
 11564              		.loc 1 967 13 view .LVU3570
 11565              	.LBE1033:
 11566              	.LBE1194:
 11567              	.LBB1195:
 11568              	.LBB952:
2419:src/keys.c    **** 			return STATE_UNFINISHED;
 11569              		.loc 1 2419 5 is_stmt 1 view .LVU3571
2419:src/keys.c    **** 			return STATE_UNFINISHED;
 11570              		.loc 1 2419 20 is_stmt 0 view .LVU3572
 11571 1b8c 013A     		subs	r2, r2, #1
 11572 1b8e 88F80B20 		strb	r2, [r8, #11]
2420:src/keys.c    **** 		}
 11573              		.loc 1 2420 11 view .LVU3573
 11574 1b92 4FF0330B 		mov	fp, #51
 11575 1b96 3268     		ldr	r2, [r6]
 11576 1b98 FEF78BBA 		b	.L565
 11577              	.LVL959:
 11578              	.L1166:
2445:src/keys.c    **** 		State2.numdigit = 2;
 11579              		.loc 1 2445 3 is_stmt 1 view .LVU3574
2446:src/keys.c    **** 		return STATE_UNFINISHED;
 11580              		.loc 1 2446 19 is_stmt 0 view .LVU3575
 11581 1b9c 0223     		movs	r3, #2
 11582 1b9e 3268     		ldr	r2, [r6]
2445:src/keys.c    **** 		State2.numdigit = 2;
 11583              		.loc 1 2445 18 view .LVU3576
 11584 1ba0 88F80A00 		strb	r0, [r8, #10]
2446:src/keys.c    **** 		return STATE_UNFINISHED;
 11585              		.loc 1 2446 3 is_stmt 1 view .LVU3577
2446:src/keys.c    **** 		return STATE_UNFINISHED;
 11586              		.loc 1 2446 19 is_stmt 0 view .LVU3578
ARM GAS  /tmp/cccKVeLo.s 			page 320


 11587 1ba4 88F80B30 		strb	r3, [r8, #11]
2447:src/keys.c    **** 	}
 11588              		.loc 1 2447 3 is_stmt 1 view .LVU3579
2447:src/keys.c    **** 	}
 11589              		.loc 1 2447 10 is_stmt 0 view .LVU3580
 11590 1ba8 4FF0330B 		mov	fp, #51
 11591 1bac FEF781BA 		b	.L565
 11592              	.LVL960:
 11593              	.L1171:
2447:src/keys.c    **** 	}
 11594              		.loc 1 2447 10 view .LVU3581
 11595              	.LBE952:
 11596              	.LBE1195:
 11597              	.LBB1196:
 11598              	.LBB1079:
2710:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 11599              		.loc 1 2710 3 is_stmt 1 view .LVU3582
2710:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 11600              		.loc 1 2710 7 is_stmt 0 view .LVU3583
 11601 1bb0 FFF7FEFF 		bl	local_regs
 11602              	.LVL961:
2710:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 11603              		.loc 1 2710 6 view .LVU3584
 11604 1bb4 68B1     		cbz	r0, .L725
2711:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11605              		.loc 1 2711 4 is_stmt 1 view .LVU3585
2711:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11606              		.loc 1 2711 19 is_stmt 0 view .LVU3586
 11607 1bb6 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2711:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11608              		.loc 1 2711 34 view .LVU3587
 11609 1bba 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
2711:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11610              		.loc 1 2711 19 view .LVU3588
 11611 1bbe 03F00101 		and	r1, r3, #1
2711:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11612              		.loc 1 2711 34 view .LVU3589
 11613 1bc2 0A43     		orrs	r2, r1, r2
 11614 1bc4 0CBF     		ite	eq
 11615 1bc6 0122     		moveq	r2, #1
 11616 1bc8 0022     		movne	r2, #0
2711:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11617              		.loc 1 2711 17 view .LVU3590
 11618 1bca 62F30003 		bfi	r3, r2, #0, #1
 11619 1bce 88F81630 		strb	r3, [r8, #22]
 11620              	.L725:
2712:src/keys.c    **** 		goto reset_window;
 11621              		.loc 1 2712 3 is_stmt 1 view .LVU3591
2712:src/keys.c    **** 		goto reset_window;
 11622              		.loc 1 2712 32 is_stmt 0 view .LVU3592
 11623 1bd2 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2712:src/keys.c    **** 		goto reset_window;
 11624              		.loc 1 2712 17 view .LVU3593
 11625 1bd6 13F0010F 		tst	r3, #1
 11626 1bda 14BF     		ite	ne
 11627 1bdc 0023     		movne	r3, #0
 11628 1bde 6423     		moveq	r3, #100
ARM GAS  /tmp/cccKVeLo.s 			page 321


 11629 1be0 A8F80830 		strh	r3, [r8, #8]	@ movhi
2713:src/keys.c    **** 	}
 11630              		.loc 1 2713 3 is_stmt 1 view .LVU3594
 11631 1be4 FFF715BB 		b	.L727
 11632              	.LVL962:
 11633              	.L1190:
2713:src/keys.c    **** 	}
 11634              		.loc 1 2713 3 is_stmt 0 view .LVU3595
 11635              	.LBE1079:
 11636              	.LBE1196:
 11637              	.LBB1197:
 11638              	.LBB953:
2426:src/keys.c    **** 		else
 11639              		.loc 1 2426 4 is_stmt 1 view .LVU3596
2426:src/keys.c    **** 		else
 11640              		.loc 1 2426 34 is_stmt 0 view .LVU3597
 11641 1be8 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11642 1bec 3268     		ldr	r2, [r6]
 11643 1bee C3F30011 		ubfx	r1, r3, #4, #1
 11644              	.LVL963:
2426:src/keys.c    **** 		else
 11645              		.loc 1 2426 26 view .LVU3598
 11646 1bf2 C1F10101 		rsb	r1, r1, #1
2426:src/keys.c    **** 		else
 11647              		.loc 1 2426 22 view .LVU3599
 11648 1bf6 61F30413 		bfi	r3, r1, #4, #1
 11649 1bfa 88F81630 		strb	r3, [r8, #22]
2429:src/keys.c    **** 
 11650              		.loc 1 2429 10 view .LVU3600
 11651 1bfe 4FF0330B 		mov	fp, #51
 11652 1c02 FEF756BA 		b	.L565
 11653              	.LVL964:
 11654              	.L812:
2429:src/keys.c    **** 
 11655              		.loc 1 2429 10 view .LVU3601
 11656              	.LBE953:
 11657              	.LBE1197:
 11658              	.LBB1198:
 11659              	.LBB1034:
 974:src/keys.c    **** 		State2.test = op;
 11660              		.loc 1 974 3 is_stmt 1 view .LVU3602
 11661 1c06 FFF7FEFF 		bl	process_cmdline_set_lift
 11662              	.LVL965:
 975:src/keys.c    **** 		return STATE_UNFINISHED;
 11663              		.loc 1 975 3 view .LVU3603
 11664              	.LBE1034:
 11665              	.LBE1198:
 11666              	.LBE1261:
 11667              	.LBE1336:
2977:src/keys.c    ****   if (was_paused && Pause == 0)
 11668              		.loc 1 2977 7 is_stmt 0 view .LVU3604
 11669 1c0a 2546     		mov	r5, r4
 11670              	.LBB1337:
 11671              	.LBB1262:
 11672              	.LBB1199:
 11673              	.LBB1035:
 975:src/keys.c    **** 		return STATE_UNFINISHED;
ARM GAS  /tmp/cccKVeLo.s 			page 322


 11674              		.loc 1 975 15 view .LVU3605
 11675 1c0c 88F80FB0 		strb	fp, [r8, #15]
 976:src/keys.c    **** 
 11676              		.loc 1 976 3 is_stmt 1 view .LVU3606
 11677 1c10 3268     		ldr	r2, [r6]
 976:src/keys.c    **** 
 11678              		.loc 1 976 10 is_stmt 0 view .LVU3607
 11679 1c12 4FF0330B 		mov	fp, #51
 11680              	.LVL966:
 976:src/keys.c    **** 
 11681              		.loc 1 976 10 view .LVU3608
 11682 1c16 FEF74CBA 		b	.L565
 11683              	.LVL967:
 11684              	.L1192:
 976:src/keys.c    **** 
 11685              		.loc 1 976 10 view .LVU3609
 11686              	.LBE1035:
 11687              	.LBE1199:
 11688              	.LBB1200:
 11689              	.LBB999:
2586:src/keys.c    **** 		State2.digval = pc;
 11690              		.loc 1 2586 4 is_stmt 1 view .LVU3610
2586:src/keys.c    **** 		State2.digval = pc;
 11691              		.loc 1 2586 9 is_stmt 0 view .LVU3611
 11692 1c1a 2046     		mov	r0, r4
 11693 1c1c 0121     		movs	r1, #1
 11694 1c1e FFF7FEFF 		bl	advance_to_next_label
 11695              	.LVL968:
 11696 1c22 0446     		mov	r4, r0
 11697              	.LVL969:
2586:src/keys.c    **** 		State2.digval = pc;
 11698              		.loc 1 2586 9 view .LVU3612
 11699 1c24 BFE6     		b	.L699
 11700              	.LVL970:
 11701              	.L754:
2586:src/keys.c    **** 		State2.digval = pc;
 11702              		.loc 1 2586 9 view .LVU3613
 11703              	.LBE999:
 11704              	.LBE1200:
 11705              	.LBB1201:
 11706              	.LBB754:
1507:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 11707              		.loc 1 1507 3 is_stmt 1 view .LVU3614
1507:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 11708              		.loc 1 1507 6 is_stmt 0 view .LVU3615
 11709 1c26 0128     		cmp	r0, #1
 11710 1c28 7FF4B8AB 		bne	.L753
 11711              	.LVL971:
1507:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 11712              		.loc 1 1507 6 view .LVU3616
 11713              	.LBE754:
 11714              	.LBE1201:
 11715              	.LBE1262:
 11716              	.LBE1337:
3198:src/keys.c    **** 	NonProgrammable = 0;
 11717              		.loc 1 3198 7 is_stmt 1 view .LVU3617
3198:src/keys.c    **** 	NonProgrammable = 0;
ARM GAS  /tmp/cccKVeLo.s 			page 323


 11718              		.loc 1 3198 10 is_stmt 0 view .LVU3618
 11719 1c2c 5806     		lsls	r0, r3, #25
 11720              	.LVL972:
3198:src/keys.c    **** 	NonProgrammable = 0;
 11721              		.loc 1 3198 10 view .LVU3619
 11722 1c2e 10D5     		bpl	.L929
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11723              		.loc 1 3199 2 is_stmt 1 view .LVU3620
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11724              		.loc 1 3199 18 is_stmt 0 view .LVU3621
 11725 1c30 6C4B     		ldr	r3, .L1218+4
 11726 1c32 0022     		movs	r2, #0
 11727 1c34 1A60     		str	r2, [r3]
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11728              		.loc 1 3200 2 is_stmt 1 view .LVU3622
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11729              		.loc 1 3200 32 is_stmt 0 view .LVU3623
 11730 1c36 40F23B10 		movw	r0, #315
 11731 1c3a FEF719BD 		b	.L872
 11732              	.LVL973:
 11733              	.L756:
 11734              	.LBB1338:
 11735              	.LBB1263:
 11736              	.LBB1202:
 11737              	.LBB755:
1495:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 11738              		.loc 1 1495 3 is_stmt 1 view .LVU3624
1495:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 11739              		.loc 1 1495 6 is_stmt 0 view .LVU3625
 11740 1c3e 0128     		cmp	r0, #1
 11741 1c40 28D0     		beq	.L1193
1497:src/keys.c    **** 			return OP_NIL | OP_OFF;
 11742              		.loc 1 1497 8 is_stmt 1 view .LVU3626
1497:src/keys.c    **** 			return OP_NIL | OP_OFF;
 11743              		.loc 1 1497 11 is_stmt 0 view .LVU3627
 11744 1c42 0328     		cmp	r0, #3
 11745 1c44 1DD0     		beq	.L778
1499:src/keys.c    **** 		  set_menu(-1);
 11746              		.loc 1 1499 8 is_stmt 1 view .LVU3628
1499:src/keys.c    **** 		  set_menu(-1);
 11747              		.loc 1 1499 11 is_stmt 0 view .LVU3629
 11748 1c46 78B1     		cbz	r0, .L779
 11749 1c48 3268     		ldr	r2, [r6]
1504:src/keys.c    **** 
 11750              		.loc 1 1504 10 view .LVU3630
 11751 1c4a 4FF0330B 		mov	fp, #51
 11752 1c4e FEF730BA 		b	.L565
 11753              	.LVL974:
 11754              	.L929:
1508:src/keys.c    **** 		break;
 11755              		.loc 1 1508 11 view .LVU3631
 11756 1c52 40F23B1B 		movw	fp, #315
 11757              	.LVL975:
 11758              	.L871:
1508:src/keys.c    **** 		break;
 11759              		.loc 1 1508 11 view .LVU3632
 11760              	.LBE755:
ARM GAS  /tmp/cccKVeLo.s 			page 324


 11761              	.LBE1202:
 11762              	.LBE1263:
 11763              	.LBE1338:
3198:src/keys.c    **** 	NonProgrammable = 0;
 11764              		.loc 1 3198 26 view .LVU3633
 11765 1c56 634B     		ldr	r3, .L1218+4
 11766 1c58 1A68     		ldr	r2, [r3]
 11767 1c5a 002A     		cmp	r2, #0
 11768 1c5c 90D0     		beq	.L1097
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11769              		.loc 1 3199 2 is_stmt 1 view .LVU3634
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11770              		.loc 1 3199 18 is_stmt 0 view .LVU3635
 11771 1c5e 0022     		movs	r2, #0
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11772              		.loc 1 3200 32 view .LVU3636
 11773 1c60 5846     		mov	r0, fp
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11774              		.loc 1 3199 18 view .LVU3637
 11775 1c62 1A60     		str	r2, [r3]
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11776              		.loc 1 3200 2 is_stmt 1 view .LVU3638
 11777 1c64 FEF704BD 		b	.L872
 11778              	.LVL976:
 11779              	.L779:
 11780              	.LBB1339:
 11781              	.LBB1264:
 11782              	.LBB1203:
 11783              	.LBB756:
1500:src/keys.c    **** 		  display_current_menu();
 11784              		.loc 1 1500 5 view .LVU3639
 11785 1c68 4FF0FF30 		mov	r0, #-1
 11786              	.LVL977:
1500:src/keys.c    **** 		  display_current_menu();
 11787              		.loc 1 1500 5 is_stmt 0 view .LVU3640
 11788 1c6c FFF7FEFF 		bl	set_menu
 11789              	.LVL978:
1501:src/keys.c    **** 		  init_state();
 11790              		.loc 1 1501 5 is_stmt 1 view .LVU3641
1504:src/keys.c    **** 
 11791              		.loc 1 1504 10 is_stmt 0 view .LVU3642
 11792 1c70 4FF0330B 		mov	fp, #51
1501:src/keys.c    **** 		  init_state();
 11793              		.loc 1 1501 5 view .LVU3643
 11794 1c74 FFF7FEFF 		bl	display_current_menu
 11795              	.LVL979:
1502:src/keys.c    **** 		}
 11796              		.loc 1 1502 5 is_stmt 1 view .LVU3644
 11797 1c78 FFF7FEFF 		bl	init_state
 11798              	.LVL980:
 11799 1c7c 3268     		ldr	r2, [r6]
 11800 1c7e FEF718BA 		b	.L565
 11801              	.LVL981:
 11802              	.L778:
1502:src/keys.c    **** 		}
 11803              		.loc 1 1502 5 is_stmt 0 view .LVU3645
 11804              	.LBE756:
ARM GAS  /tmp/cccKVeLo.s 			page 325


 11805              	.LBE1203:
 11806              	.LBE1264:
 11807              	.LBE1339:
3198:src/keys.c    **** 	NonProgrammable = 0;
 11808              		.loc 1 3198 7 is_stmt 1 view .LVU3646
3198:src/keys.c    **** 	NonProgrammable = 0;
 11809              		.loc 1 3198 10 is_stmt 0 view .LVU3647
 11810 1c82 5A06     		lsls	r2, r3, #25
 11811 1c84 15D5     		bpl	.L937
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11812              		.loc 1 3199 2 is_stmt 1 view .LVU3648
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11813              		.loc 1 3199 18 is_stmt 0 view .LVU3649
 11814 1c86 574B     		ldr	r3, .L1218+4
 11815 1c88 0022     		movs	r2, #0
 11816 1c8a 1A60     		str	r2, [r3]
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11817              		.loc 1 3200 2 is_stmt 1 view .LVU3650
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11818              		.loc 1 3200 32 is_stmt 0 view .LVU3651
 11819 1c8c 4FF48170 		mov	r0, #258
 11820              	.LVL982:
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11821              		.loc 1 3200 32 view .LVU3652
 11822 1c90 FEF7EEBC 		b	.L872
 11823              	.LVL983:
 11824              	.L1193:
 11825              	.LBB1340:
 11826              	.LBB1265:
 11827              	.LBB1204:
 11828              	.LBB757:
1496:src/keys.c    **** 		else if (shift == SHIFT_H)
 11829              		.loc 1 1496 4 is_stmt 1 view .LVU3653
1496:src/keys.c    **** 		else if (shift == SHIFT_H)
 11830              		.loc 1 1496 34 is_stmt 0 view .LVU3654
 11831 1c94 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11832 1c98 3268     		ldr	r2, [r6]
 11833 1c9a C3F30011 		ubfx	r1, r3, #4, #1
 11834              	.LVL984:
1496:src/keys.c    **** 		else if (shift == SHIFT_H)
 11835              		.loc 1 1496 26 view .LVU3655
 11836 1c9e C1F10101 		rsb	r1, r1, #1
1496:src/keys.c    **** 		else if (shift == SHIFT_H)
 11837              		.loc 1 1496 22 view .LVU3656
 11838 1ca2 61F30413 		bfi	r3, r1, #4, #1
 11839 1ca6 88F81630 		strb	r3, [r8, #22]
1504:src/keys.c    **** 
 11840              		.loc 1 1504 10 view .LVU3657
 11841 1caa 4FF0330B 		mov	fp, #51
 11842 1cae FEF700BA 		b	.L565
 11843              	.LVL985:
 11844              	.L937:
1498:src/keys.c    **** 		else if (shift == SHIFT_N) {
 11845              		.loc 1 1498 11 view .LVU3658
 11846 1cb2 4FF4817B 		mov	fp, #258
 11847 1cb6 CEE7     		b	.L871
 11848              	.LVL986:
ARM GAS  /tmp/cccKVeLo.s 			page 326


 11849              	.L757:
1483:src/keys.c    **** 	    if ( State2.runmode ) {
 11850              		.loc 1 1483 4 is_stmt 1 view .LVU3659
1483:src/keys.c    **** 	    if ( State2.runmode ) {
 11851              		.loc 1 1483 7 is_stmt 0 view .LVU3660
 11852 1cb8 0028     		cmp	r0, #0
 11853 1cba 7FF46FAB 		bne	.L753
1484:src/keys.c    **** 	      // Alpha scroll right
 11854              		.loc 1 1484 6 is_stmt 1 view .LVU3661
1484:src/keys.c    **** 	      // Alpha scroll right
 11855              		.loc 1 1484 9 is_stmt 0 view .LVU3662
 11856 1cbe 5B06     		lsls	r3, r3, #25
 11857 1cc0 7EF510AC 		bpl	.L775
1486:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
 11858              		.loc 1 1486 8 is_stmt 1 view .LVU3663
1486:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
 11859              		.loc 1 1486 11 is_stmt 0 view .LVU3664
 11860 1cc4 B9F1000F 		cmp	r9, #0
 11861 1cc8 16D1     		bne	.L776
 11862 1cca 3268     		ldr	r2, [r6]
1488:src/keys.c    **** 	    }
 11863              		.loc 1 1488 15 view .LVU3665
 11864 1ccc 4FF0330B 		mov	fp, #51
 11865 1cd0 FEF7EFB9 		b	.L565
 11866              	.L758:
1454:src/keys.c    **** 	    if ( State2.runmode ) {
 11867              		.loc 1 1454 4 is_stmt 1 view .LVU3666
1454:src/keys.c    **** 	    if ( State2.runmode ) {
 11868              		.loc 1 1454 7 is_stmt 0 view .LVU3667
 11869 1cd4 0028     		cmp	r0, #0
 11870 1cd6 7FF461AB 		bne	.L753
1455:src/keys.c    **** 	      // Alpha scroll left
 11871              		.loc 1 1455 6 is_stmt 1 view .LVU3668
1455:src/keys.c    **** 	      // Alpha scroll left
 11872              		.loc 1 1455 9 is_stmt 0 view .LVU3669
 11873 1cda 5A06     		lsls	r2, r3, #25
 11874 1cdc 7EF5F9AB 		bpl	.L771
1463:src/keys.c    **** 		alpha_pos += 1;
 11875              		.loc 1 1463 8 is_stmt 1 view .LVU3670
1463:src/keys.c    **** 		alpha_pos += 1;
 11876              		.loc 1 1463 11 is_stmt 0 view .LVU3671
 11877 1ce0 B9F1000F 		cmp	r9, #0
 11878 1ce4 11D1     		bne	.L772
 11879              	.LVL987:
 11880              	.L774:
1464:src/keys.c    **** 	      }
 11881              		.loc 1 1464 3 is_stmt 1 view .LVU3672
1464:src/keys.c    **** 	      }
 11882              		.loc 1 1464 13 is_stmt 0 view .LVU3673
 11883 1ce6 09F1010A 		add	r10, r9, #1
 11884              	.LVL988:
 11885              	.L773:
1471:src/keys.c    **** #else
 11886              		.loc 1 1471 8 is_stmt 1 view .LVU3674
 11887 1cea 3268     		ldr	r2, [r6]
1471:src/keys.c    **** #else
 11888              		.loc 1 1471 25 is_stmt 0 view .LVU3675
ARM GAS  /tmp/cccKVeLo.s 			page 327


 11889 1cec 88F80DA0 		strb	r10, [r8, #13]
1476:src/keys.c    **** 	    }
 11890              		.loc 1 1476 8 is_stmt 1 view .LVU3676
1476:src/keys.c    **** 	    }
 11891              		.loc 1 1476 15 is_stmt 0 view .LVU3677
 11892 1cf0 4FF0330B 		mov	fp, #51
 11893 1cf4 FEF7DDB9 		b	.L565
 11894              	.LVL989:
 11895              	.L776:
1487:src/keys.c    **** 	      return STATE_UNFINISHED;
 11896              		.loc 1 1487 3 is_stmt 1 view .LVU3678
1487:src/keys.c    **** 	      return STATE_UNFINISHED;
 11897              		.loc 1 1487 31 is_stmt 0 view .LVU3679
 11898 1cf8 09F1FF39 		add	r9, r9, #-1
 11899              	.LVL990:
1487:src/keys.c    **** 	      return STATE_UNFINISHED;
 11900              		.loc 1 1487 31 view .LVU3680
 11901 1cfc 3268     		ldr	r2, [r6]
1487:src/keys.c    **** 	      return STATE_UNFINISHED;
 11902              		.loc 1 1487 20 view .LVU3681
 11903 1cfe 88F80D90 		strb	r9, [r8, #13]
1488:src/keys.c    **** 	    }
 11904              		.loc 1 1488 15 view .LVU3682
 11905 1d02 4FF0330B 		mov	fp, #51
 11906 1d06 FEF7D4B9 		b	.L565
 11907              	.LVL991:
 11908              	.L772:
1463:src/keys.c    **** 		alpha_pos += 1;
 11909              		.loc 1 1463 33 view .LVU3683
 11910 1d0a FFF7FEFF 		bl	alen
 11911              	.LVL992:
1463:src/keys.c    **** 		alpha_pos += 1;
 11912              		.loc 1 1463 41 view .LVU3684
 11913 1d0e 09EB4903 		add	r3, r9, r9, lsl #1
1463:src/keys.c    **** 		alpha_pos += 1;
 11914              		.loc 1 1463 39 view .LVU3685
 11915 1d12 A0EB4300 		sub	r0, r0, r3, lsl #1
1463:src/keys.c    **** 		alpha_pos += 1;
 11916              		.loc 1 1463 29 view .LVU3686
 11917 1d16 1328     		cmp	r0, #19
 11918 1d18 E5D8     		bhi	.L774
 11919 1d1a E6E7     		b	.L773
 11920              	.LVL993:
 11921              	.L769:
1449:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11922              		.loc 1 1449 3 is_stmt 1 view .LVU3687
1449:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11923              		.loc 1 1449 6 is_stmt 0 view .LVU3688
 11924 1d1c 0328     		cmp	r0, #3
 11925 1d1e 7FF43DAB 		bne	.L753
 11926              	.LVL994:
1449:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11927              		.loc 1 1449 6 view .LVU3689
 11928              	.LBE757:
 11929              	.LBE1204:
 11930              	.LBE1265:
 11931              	.LBE1340:
ARM GAS  /tmp/cccKVeLo.s 			page 328


3198:src/keys.c    **** 	NonProgrammable = 0;
 11932              		.loc 1 3198 7 is_stmt 1 view .LVU3690
3198:src/keys.c    **** 	NonProgrammable = 0;
 11933              		.loc 1 3198 10 is_stmt 0 view .LVU3691
 11934 1d22 5906     		lsls	r1, r3, #25
 11935              	.LVL995:
3198:src/keys.c    **** 	NonProgrammable = 0;
 11936              		.loc 1 3198 10 view .LVU3692
 11937 1d24 48D5     		bpl	.L936
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11938              		.loc 1 3199 2 is_stmt 1 view .LVU3693
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11939              		.loc 1 3199 18 is_stmt 0 view .LVU3694
 11940 1d26 2F4B     		ldr	r3, .L1218+4
 11941 1d28 0022     		movs	r2, #0
 11942 1d2a 1A60     		str	r2, [r3]
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11943              		.loc 1 3200 2 is_stmt 1 view .LVU3695
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11944              		.loc 1 3200 32 is_stmt 0 view .LVU3696
 11945 1d2c 4FF4BA70 		mov	r0, #372
 11946              	.LVL996:
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11947              		.loc 1 3200 32 view .LVU3697
 11948 1d30 FEF79EBC 		b	.L872
 11949              	.LVL997:
 11950              	.L760:
 11951              	.LBB1341:
 11952              	.LBB1266:
 11953              	.LBB1205:
 11954              	.LBB758:
1430:src/keys.c    **** 			break;
 11955              		.loc 1 1430 3 is_stmt 1 view .LVU3698
1430:src/keys.c    **** 			break;
 11956              		.loc 1 1430 24 is_stmt 0 view .LVU3699
 11957 1d34 821E     		subs	r2, r0, #2
1430:src/keys.c    **** 			break;
 11958              		.loc 1 1430 6 view .LVU3700
 11959 1d36 D2B2     		uxtb	r2, r2
 11960 1d38 012A     		cmp	r2, #1
 11961 1d3a 7FF62FAB 		bls	.L753
1432:src/keys.c    **** 			State2.multi = 1;
 11962              		.loc 1 1432 3 is_stmt 1 view .LVU3701
1432:src/keys.c    **** 			State2.multi = 1;
 11963              		.loc 1 1432 6 is_stmt 0 view .LVU3702
 11964 1d3e 0128     		cmp	r0, #1
 11965 1d40 02D1     		bne	.L767
1432:src/keys.c    **** 			State2.multi = 1;
 11966              		.loc 1 1432 24 view .LVU3703
 11967 1d42 13F04002 		ands	r2, r3, #64
 11968 1d46 3AD0     		beq	.L1194
 11969              	.L767:
1438:src/keys.c    **** 		State2.alphashift = 0;
 11970              		.loc 1 1438 3 is_stmt 1 view .LVU3704
1439:src/keys.c    **** #ifdef DM42
 11971              		.loc 1 1439 3 view .LVU3705
1438:src/keys.c    **** 		State2.alphashift = 0;
ARM GAS  /tmp/cccKVeLo.s 			page 329


 11972              		.loc 1 1438 17 is_stmt 0 view .LVU3706
 11973 1d48 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
1441:src/keys.c    **** 		display_current_menu();
 11974              		.loc 1 1441 3 view .LVU3707
 11975 1d4c 4FF0FF30 		mov	r0, #-1
 11976              	.LVL998:
1438:src/keys.c    **** 		State2.alphashift = 0;
 11977              		.loc 1 1438 17 view .LVU3708
 11978 1d50 23F01803 		bic	r3, r3, #24
 11979 1d54 88F81630 		strb	r3, [r8, #22]
1441:src/keys.c    **** 		display_current_menu();
 11980              		.loc 1 1441 3 is_stmt 1 view .LVU3709
1444:src/keys.c    **** 
 11981              		.loc 1 1444 10 is_stmt 0 view .LVU3710
 11982 1d58 4FF0330B 		mov	fp, #51
1441:src/keys.c    **** 		display_current_menu();
 11983              		.loc 1 1441 3 view .LVU3711
 11984 1d5c FFF7FEFF 		bl	set_menu
 11985              	.LVL999:
1442:src/keys.c    **** #endif
 11986              		.loc 1 1442 3 is_stmt 1 view .LVU3712
 11987 1d60 FFF7FEFF 		bl	display_current_menu
 11988              	.LVL1000:
1444:src/keys.c    **** 
 11989              		.loc 1 1444 3 view .LVU3713
 11990 1d64 3268     		ldr	r2, [r6]
1444:src/keys.c    **** 
 11991              		.loc 1 1444 10 is_stmt 0 view .LVU3714
 11992 1d66 FEF7A4B9 		b	.L565
 11993              	.LVL1001:
 11994              	.L761:
1420:src/keys.c    **** 			init_arg(RARG_ARCL);
 11995              		.loc 1 1420 3 is_stmt 1 view .LVU3715
1420:src/keys.c    **** 			init_arg(RARG_ARCL);
 11996              		.loc 1 1420 6 is_stmt 0 view .LVU3716
 11997 1d6a 0128     		cmp	r0, #1
 11998 1d6c 3CD0     		beq	.L1195
1423:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 11999              		.loc 1 1423 10 is_stmt 1 view .LVU3717
1423:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 12000              		.loc 1 1423 13 is_stmt 0 view .LVU3718
 12001 1d6e 0328     		cmp	r0, #3
 12002 1d70 7FF414AB 		bne	.L753
1424:src/keys.c    **** 			return STATE_UNFINISHED;
 12003              		.loc 1 1424 4 is_stmt 1 view .LVU3719
 12004              	.LVL1002:
 12005              	.LBB738:
 12006              	.LBI738:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 12007              		.loc 1 506 13 view .LVU3720
 12008              	.LBB739:
 507:src/keys.c    **** 		return;
 12009              		.loc 1 507 2 view .LVU3721
 507:src/keys.c    **** 		return;
 12010              		.loc 1 507 6 is_stmt 0 view .LVU3722
 12011 1d74 FFF7FEFF 		bl	is_bad_cmdline
 12012              	.LVL1003:
ARM GAS  /tmp/cccKVeLo.s 			page 330


 507:src/keys.c    **** 		return;
 12013              		.loc 1 507 5 view .LVU3723
 12014 1d78 0346     		mov	r3, r0
 12015 1d7a C0B9     		cbnz	r0, .L1196
 12016 1d7c 7320     		movs	r0, #115
 12017              	.LBE739:
 12018              	.LBE738:
 12019              	.LBE758:
 12020              	.LBE1205:
 12021              	.LBE1266:
 12022              	.LBE1341:
2977:src/keys.c    ****   if (was_paused && Pause == 0)
 12023              		.loc 1 2977 7 view .LVU3724
 12024 1d7e 1D46     		mov	r5, r3
 12025              	.LBB1342:
 12026              	.LBB1267:
 12027              	.LBB1206:
 12028              	.LBB759:
1425:src/keys.c    **** 		}
 12029              		.loc 1 1425 11 view .LVU3725
 12030 1d80 4FF0330B 		mov	fp, #51
 12031              	.LBB741:
 12032              	.LBB740:
 12033 1d84 FFF7FEFF 		bl	init_arg.part.0
 12034              	.LVL1004:
 12035 1d88 3268     		ldr	r2, [r6]
 12036 1d8a FEF792B9 		b	.L565
 12037              	.LVL1005:
 12038              	.L762:
1425:src/keys.c    **** 		}
 12039              		.loc 1 1425 11 view .LVU3726
 12040              	.LBE740:
 12041              	.LBE741:
1413:src/keys.c    **** 			init_arg(RARG_ASTO);
 12042              		.loc 1 1413 3 is_stmt 1 view .LVU3727
1413:src/keys.c    **** 			init_arg(RARG_ASTO);
 12043              		.loc 1 1413 6 is_stmt 0 view .LVU3728
 12044 1d8e 0128     		cmp	r0, #1
 12045 1d90 7FF404AB 		bne	.L753
1414:src/keys.c    **** 			return STATE_UNFINISHED;
 12046              		.loc 1 1414 4 is_stmt 1 view .LVU3729
 12047              	.LVL1006:
 12048              	.LBB742:
 12049              	.LBI742:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 12050              		.loc 1 506 13 view .LVU3730
 12051              	.LBB743:
 507:src/keys.c    **** 		return;
 12052              		.loc 1 507 2 view .LVU3731
 507:src/keys.c    **** 		return;
 12053              		.loc 1 507 6 is_stmt 0 view .LVU3732
 12054 1d94 FFF7FEFF 		bl	is_bad_cmdline
 12055              	.LVL1007:
 507:src/keys.c    **** 		return;
 12056              		.loc 1 507 5 view .LVU3733
 12057 1d98 0346     		mov	r3, r0
 12058 1d9a 90BB     		cbnz	r0, .L1197
ARM GAS  /tmp/cccKVeLo.s 			page 331


 12059 1d9c 2620     		movs	r0, #38
 12060              	.LBE743:
 12061              	.LBE742:
 12062              	.LBE759:
 12063              	.LBE1206:
 12064              	.LBE1267:
 12065              	.LBE1342:
2977:src/keys.c    ****   if (was_paused && Pause == 0)
 12066              		.loc 1 2977 7 view .LVU3734
 12067 1d9e 1D46     		mov	r5, r3
 12068              	.LBB1343:
 12069              	.LBB1268:
 12070              	.LBB1207:
 12071              	.LBB760:
1415:src/keys.c    **** 		}
 12072              		.loc 1 1415 11 view .LVU3735
 12073 1da0 4FF0330B 		mov	fp, #51
 12074              	.LBB745:
 12075              	.LBB744:
 12076 1da4 FFF7FEFF 		bl	init_arg.part.0
 12077              	.LVL1008:
 12078 1da8 3268     		ldr	r2, [r6]
 12079 1daa FEF782B9 		b	.L565
 12080              	.LVL1009:
 12081              	.L1196:
1415:src/keys.c    **** 		}
 12082              		.loc 1 1415 11 view .LVU3736
 12083 1dae 3268     		ldr	r2, [r6]
 12084              	.LBE744:
 12085              	.LBE745:
1425:src/keys.c    **** 		}
 12086              		.loc 1 1425 11 view .LVU3737
 12087 1db0 4FF0330B 		mov	fp, #51
 12088 1db4 FEF77DB9 		b	.L565
 12089              	.LVL1010:
 12090              	.L936:
1450:src/keys.c    **** 		break;
 12091              		.loc 1 1450 11 view .LVU3738
 12092 1db8 4FF4BA7B 		mov	fp, #372
 12093 1dbc 4BE7     		b	.L871
 12094              	.LVL1011:
 12095              	.L1194:
1433:src/keys.c    **** 			State2.numdigit = 0;
 12096              		.loc 1 1433 4 is_stmt 1 view .LVU3739
1433:src/keys.c    **** 			State2.numdigit = 0;
 12097              		.loc 1 1433 17 is_stmt 0 view .LVU3740
 12098 1dbe 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
1434:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 12099              		.loc 1 1434 20 view .LVU3741
 12100 1dc2 88F80B20 		strb	r2, [r8, #11]
1433:src/keys.c    **** 			State2.numdigit = 0;
 12101              		.loc 1 1433 17 view .LVU3742
 12102 1dc6 43F00803 		orr	r3, r3, #8
1435:src/keys.c    **** 			return STATE_UNFINISHED;
 12103              		.loc 1 1435 12 view .LVU3743
 12104 1dca 0A21     		movs	r1, #10
 12105              	.LVL1012:
ARM GAS  /tmp/cccKVeLo.s 			page 332


1435:src/keys.c    **** 			return STATE_UNFINISHED;
 12106              		.loc 1 1435 12 view .LVU3744
 12107 1dcc 3268     		ldr	r2, [r6]
 12108 1dce 88F81F10 		strb	r1, [r8, #31]
1433:src/keys.c    **** 			State2.numdigit = 0;
 12109              		.loc 1 1433 17 view .LVU3745
 12110 1dd2 88F81530 		strb	r3, [r8, #21]
1434:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 12111              		.loc 1 1434 4 is_stmt 1 view .LVU3746
1435:src/keys.c    **** 			return STATE_UNFINISHED;
 12112              		.loc 1 1435 4 view .LVU3747
1436:src/keys.c    **** 		}
 12113              		.loc 1 1436 4 view .LVU3748
1436:src/keys.c    **** 		}
 12114              		.loc 1 1436 11 is_stmt 0 view .LVU3749
 12115 1dd6 4FF0330B 		mov	fp, #51
 12116 1dda FEF76AB9 		b	.L565
 12117              	.L1219:
 12118 1dde 00BF     		.align	2
 12119              	.L1218:
 12120 1de0 31020008 		.word	134218289
 12121 1de4 00000000 		.word	NonProgrammable
 12122              	.LVL1013:
 12123              	.L1195:
1421:src/keys.c    **** 			return STATE_UNFINISHED;
 12124              		.loc 1 1421 4 is_stmt 1 view .LVU3750
 12125              	.LBB746:
 12126              	.LBI746:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 12127              		.loc 1 506 13 view .LVU3751
 12128              	.LBB747:
 507:src/keys.c    **** 		return;
 12129              		.loc 1 507 2 view .LVU3752
 507:src/keys.c    **** 		return;
 12130              		.loc 1 507 6 is_stmt 0 view .LVU3753
 12131 1de8 FFF7FEFF 		bl	is_bad_cmdline
 12132              	.LVL1014:
 507:src/keys.c    **** 		return;
 12133              		.loc 1 507 5 view .LVU3754
 12134 1dec 0346     		mov	r3, r0
 12135 1dee 68B9     		cbnz	r0, .L1198
 12136 1df0 2720     		movs	r0, #39
 12137              	.LBE747:
 12138              	.LBE746:
 12139              	.LBE760:
 12140              	.LBE1207:
 12141              	.LBE1268:
 12142              	.LBE1343:
2977:src/keys.c    ****   if (was_paused && Pause == 0)
 12143              		.loc 1 2977 7 view .LVU3755
 12144 1df2 1D46     		mov	r5, r3
 12145              	.LBB1344:
 12146              	.LBB1269:
 12147              	.LBB1208:
 12148              	.LBB761:
1422:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 12149              		.loc 1 1422 11 view .LVU3756
ARM GAS  /tmp/cccKVeLo.s 			page 333


 12150 1df4 4FF0330B 		mov	fp, #51
 12151              	.LBB749:
 12152              	.LBB748:
 12153 1df8 FFF7FEFF 		bl	init_arg.part.0
 12154              	.LVL1015:
 12155 1dfc 3268     		ldr	r2, [r6]
 12156 1dfe FEF758B9 		b	.L565
 12157              	.LVL1016:
 12158              	.L1197:
1422:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 12159              		.loc 1 1422 11 view .LVU3757
 12160 1e02 3268     		ldr	r2, [r6]
 12161              	.LBE748:
 12162              	.LBE749:
1415:src/keys.c    **** 		}
 12163              		.loc 1 1415 11 view .LVU3758
 12164 1e04 4FF0330B 		mov	fp, #51
 12165 1e08 FEF753B9 		b	.L565
 12166              	.LVL1017:
 12167              	.L1198:
1415:src/keys.c    **** 		}
 12168              		.loc 1 1415 11 view .LVU3759
 12169 1e0c 3268     		ldr	r2, [r6]
1422:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 12170              		.loc 1 1422 11 view .LVU3760
 12171 1e0e 4FF0330B 		mov	fp, #51
 12172 1e12 FEF74EB9 		b	.L565
 12173              	.LVL1018:
 12174              	.L1191:
1422:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 12175              		.loc 1 1422 11 view .LVU3761
 12176 1e16 3268     		ldr	r2, [r6]
 12177              	.LBE761:
 12178              	.LBE1208:
 12179              	.LBB1209:
 12180              	.LBB954:
2409:src/keys.c    **** 		else if (State2.numdigit == 1)
 12181              		.loc 1 2409 11 view .LVU3762
 12182 1e18 4FF0330B 		mov	fp, #51
 12183 1e1c FEF749B9 		b	.L565
 12184              	.LVL1019:
 12185              	.L933:
2409:src/keys.c    **** 		else if (State2.numdigit == 1)
 12186              		.loc 1 2409 11 view .LVU3763
 12187              	.LBE954:
 12188              	.LBE1209:
 12189              	.LBB1210:
 12190              	.LBB694:
 754:src/keys.c    **** 	    }
 12191              		.loc 1 754 15 view .LVU3764
 12192 1e20 4FF0110B 		mov	fp, #17
 12193 1e24 79E6     		b	.L873
 12194              	.LVL1020:
 12195              	.L838:
 754:src/keys.c    **** 	    }
 12196              		.loc 1 754 15 view .LVU3765
 12197              	.LBE694:
ARM GAS  /tmp/cccKVeLo.s 			page 334


 12198              	.LBE1210:
 12199              	.LBE1269:
 12200              	.LBE1344:
3198:src/keys.c    **** 	NonProgrammable = 0;
 12201              		.loc 1 3198 7 is_stmt 1 view .LVU3766
3198:src/keys.c    **** 	NonProgrammable = 0;
 12202              		.loc 1 3198 11 is_stmt 0 view .LVU3767
 12203 1e26 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3198:src/keys.c    **** 	NonProgrammable = 0;
 12204              		.loc 1 3198 10 view .LVU3768
 12205 1e2a 5B06     		lsls	r3, r3, #25
 12206 1e2c 0CD5     		bpl	.L932
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12207              		.loc 1 3199 2 is_stmt 1 view .LVU3769
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12208              		.loc 1 3199 18 is_stmt 0 view .LVU3770
 12209 1e2e 574B     		ldr	r3, .L1220
 12210 1e30 0022     		movs	r2, #0
 12211              	.LBB1345:
 12212              	.LBB1270:
 12213              	.LBB1211:
 12214              	.LBB695:
 746:src/keys.c    **** 	    }
 12215              		.loc 1 746 15 view .LVU3771
 12216 1e32 4FF0100B 		mov	fp, #16
 12217              	.LBE695:
 12218              	.LBE1211:
 12219              	.LBE1270:
 12220              	.LBE1345:
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12221              		.loc 1 3199 18 view .LVU3772
 12222 1e36 1A60     		str	r2, [r3]
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12223              		.loc 1 3200 2 is_stmt 1 view .LVU3773
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12224              		.loc 1 3200 32 is_stmt 0 view .LVU3774
 12225 1e38 5846     		mov	r0, fp
 12226 1e3a FEF7C7BC 		b	.L874
 12227              	.LVL1021:
 12228              	.L1140:
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12229              		.loc 1 3200 32 view .LVU3775
 12230 1e3e 3268     		ldr	r2, [r6]
 12231              	.LBB1346:
 12232              	.LBB1271:
 12233              	.LBB1212:
 12234              	.LBB696:
 841:src/keys.c    **** }
 12235              		.loc 1 841 9 view .LVU3776
 12236 1e40 4FF0330B 		mov	fp, #51
 12237 1e44 FEF735B9 		b	.L565
 12238              	.LVL1022:
 12239              	.L932:
 746:src/keys.c    **** 	    }
 12240              		.loc 1 746 15 view .LVU3777
 12241 1e48 4FF0100B 		mov	fp, #16
 12242 1e4c 65E6     		b	.L873
ARM GAS  /tmp/cccKVeLo.s 			page 335


 12243              	.LVL1023:
 12244              	.L788:
 746:src/keys.c    **** 	    }
 12245              		.loc 1 746 15 view .LVU3778
 12246              	.LBE696:
 12247              	.LBE1212:
 12248              	.LBB1213:
 12249              	.LBB1130:
1186:src/keys.c    **** 			break;
 12250              		.loc 1 1186 4 is_stmt 1 view .LVU3779
 12251              	.LBB1121:
 12252              	.LBI1121:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 12253              		.loc 1 94 20 view .LVU3780
 12254              	.LBB1122:
  95:src/keys.c    **** 	State2.shifts = shift;
 12255              		.loc 1 95 2 view .LVU3781
 12256              	.LBB1123:
 12257              	.LBI1123:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 12258              		.loc 1 86 13 view .LVU3782
 12259              	.LBB1124:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12260              		.loc 1 87 2 view .LVU3783
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12261              		.loc 1 87 18 is_stmt 0 view .LVU3784
 12262 1e4e FFF7FEFF 		bl	shift_down
 12263              	.LVL1024:
  88:src/keys.c    **** }
 12264              		.loc 1 88 2 is_stmt 1 view .LVU3785
 12265              	.LBE1124:
 12266              	.LBE1123:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12267              		.loc 1 96 2 view .LVU3786
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12268              		.loc 1 96 16 is_stmt 0 view .LVU3787
 12269 1e52 88F810A0 		strb	r10, [r8, #16]
  98:src/keys.c    **** }
 12270              		.loc 1 98 2 is_stmt 1 view .LVU3788
  98:src/keys.c    **** }
 12271              		.loc 1 98 9 is_stmt 0 view .LVU3789
 12272 1e56 FEF7EFBA 		b	.L595
 12273              	.LVL1025:
 12274              	.L787:
  98:src/keys.c    **** }
 12275              		.loc 1 98 9 view .LVU3790
 12276              	.LBE1122:
 12277              	.LBE1121:
1200:src/keys.c    **** 			break;
 12278              		.loc 1 1200 4 is_stmt 1 view .LVU3791
 12279 1e5a FFF7FEFF 		bl	init_state
 12280              	.LVL1026:
1201:src/keys.c    **** 
 12281              		.loc 1 1201 4 view .LVU3792
 12282 1e5e FEF7EBBA 		b	.L595
 12283              	.L1178:
1176:src/keys.c    **** 		State2.hyp = 1;
ARM GAS  /tmp/cccKVeLo.s 			page 336


 12284              		.loc 1 1176 3 view .LVU3793
 12285 1e62 FFF7FEFF 		bl	process_cmdline_set_lift
 12286              	.LVL1027:
1177:src/keys.c    **** 		State2.dot = op;
 12287              		.loc 1 1177 3 view .LVU3794
1178:src/keys.c    **** 		State2.cmplx = 1;
 12288              		.loc 1 1178 3 view .LVU3795
1179:src/keys.c    **** 		return STATE_UNFINISHED;
 12289              		.loc 1 1179 3 view .LVU3796
1179:src/keys.c    **** 		return STATE_UNFINISHED;
 12290              		.loc 1 1179 16 is_stmt 0 view .LVU3797
 12291 1e66 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 12292 1e6a 3268     		ldr	r2, [r6]
 12293 1e6c 0BF00103 		and	r3, fp, #1
 12294 1e70 9B01     		lsls	r3, r3, #6
 12295 1e72 43F02203 		orr	r3, r3, #34
 12296 1e76 21F06201 		bic	r1, r1, #98
 12297 1e7a 0B43     		orrs	r3, r3, r1
 12298 1e7c 88F81530 		strb	r3, [r8, #21]
1180:src/keys.c    **** 	}
 12299              		.loc 1 1180 3 is_stmt 1 view .LVU3798
1180:src/keys.c    **** 	}
 12300              		.loc 1 1180 10 is_stmt 0 view .LVU3799
 12301 1e80 4FF0330B 		mov	fp, #51
 12302              	.LVL1028:
1180:src/keys.c    **** 	}
 12303              		.loc 1 1180 10 view .LVU3800
 12304 1e84 FEF715B9 		b	.L565
 12305              	.LVL1029:
 12306              	.L1177:
1171:src/keys.c    **** 		return STATE_UNFINISHED;
 12307              		.loc 1 1171 3 is_stmt 1 view .LVU3801
 12308              	.LBB1125:
 12309              	.LBI1125:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 12310              		.loc 1 506 13 view .LVU3802
 12311              	.LBB1126:
 507:src/keys.c    **** 		return;
 12312              		.loc 1 507 2 view .LVU3803
 507:src/keys.c    **** 		return;
 12313              		.loc 1 507 6 is_stmt 0 view .LVU3804
 12314 1e88 FFF7FEFF 		bl	is_bad_cmdline
 12315              	.LVL1030:
 507:src/keys.c    **** 		return;
 12316              		.loc 1 507 5 view .LVU3805
 12317 1e8c 0446     		mov	r4, r0
 12318 1e8e 0028     		cmp	r0, #0
 12319 1e90 3CD1     		bne	.L1199
 12320 1e92 5FFA8BF0 		uxtb	r0, fp
 12321 1e96 FFF7FEFF 		bl	init_arg.part.0
 12322              	.LVL1031:
 12323              	.LBE1126:
 12324              	.LBE1125:
 12325              	.LBE1130:
 12326              	.LBE1213:
 12327              	.LBE1271:
 12328              	.LBE1346:
ARM GAS  /tmp/cccKVeLo.s 			page 337


2977:src/keys.c    ****   if (was_paused && Pause == 0)
 12329              		.loc 1 2977 7 view .LVU3806
 12330 1e9a 2546     		mov	r5, r4
 12331 1e9c 3268     		ldr	r2, [r6]
 12332              	.LBB1347:
 12333              	.LBB1272:
 12334              	.LBB1214:
 12335              	.LBB1131:
1172:src/keys.c    **** 	}
 12336              		.loc 1 1172 10 view .LVU3807
 12337 1e9e 4FF0330B 		mov	fp, #51
 12338              	.LVL1032:
1172:src/keys.c    **** 	}
 12339              		.loc 1 1172 10 view .LVU3808
 12340 1ea2 FEF706B9 		b	.L565
 12341              	.LVL1033:
 12342              	.L631:
1172:src/keys.c    **** 	}
 12343              		.loc 1 1172 10 view .LVU3809
 12344              	.LBE1131:
 12345              	.LBE1214:
 12346              	.LBB1215:
 12347              	.LBB805:
1950:src/keys.c    **** 		// Special 1
 12348              		.loc 1 1950 7 is_stmt 1 view .LVU3810
1950:src/keys.c    **** 		// Special 1
 12349              		.loc 1 1950 10 is_stmt 0 view .LVU3811
 12350 1ea6 012A     		cmp	r2, #1
 12351 1ea8 7EF4BBAE 		bne	.L633
1952:src/keys.c    **** 	}
 12352              		.loc 1 1952 3 is_stmt 1 view .LVU3812
1952:src/keys.c    **** 	}
 12353              		.loc 1 1952 18 is_stmt 0 view .LVU3813
 12354 1eac BEF1000F 		cmp	lr, #0
 12355 1eb0 14BF     		ite	ne
 12356 1eb2 2723     		movne	r3, #39
 12357 1eb4 1E23     		moveq	r3, #30
1952:src/keys.c    **** 	}
 12358              		.loc 1 1952 47 view .LVU3814
 12359 1eb6 9B44     		add	fp, fp, r3
 12360              	.LVL1034:
1952:src/keys.c    **** 	}
 12361              		.loc 1 1952 47 view .LVU3815
 12362 1eb8 FEF7BEBA 		b	.L595
 12363              	.LVL1035:
 12364              	.L1186:
1952:src/keys.c    **** 	}
 12365              		.loc 1 1952 47 view .LVU3816
 12366              	.LBE805:
 12367              	.LBE1215:
 12368              	.LBB1216:
 12369              	.LBB1036:
 981:src/keys.c    **** 			return STATE_UNFINISHED;
 12370              		.loc 1 981 4 is_stmt 1 view .LVU3817
 981:src/keys.c    **** 			return STATE_UNFINISHED;
 12371              		.loc 1 981 26 is_stmt 0 view .LVU3818
 12372 1ebc 5C1E     		subs	r4, r3, #1
ARM GAS  /tmp/cccKVeLo.s 			page 338


 12373              	.LVL1036:
 981:src/keys.c    **** 			return STATE_UNFINISHED;
 12374              		.loc 1 981 17 view .LVU3819
 12375 1ebe 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
 12376 1ec2 3268     		ldr	r2, [r6]
 981:src/keys.c    **** 			return STATE_UNFINISHED;
 12377              		.loc 1 981 26 view .LVU3820
 12378 1ec4 6342     		rsbs	r3, r4, #0
 12379 1ec6 6341     		adcs	r3, r3, r4
 981:src/keys.c    **** 			return STATE_UNFINISHED;
 12380              		.loc 1 981 17 view .LVU3821
 12381 1ec8 63F3C711 		bfi	r1, r3, #7, #1
 12382 1ecc 88F81710 		strb	r1, [r8, #23]
 982:src/keys.c    **** 		}
 12383              		.loc 1 982 4 is_stmt 1 view .LVU3822
 982:src/keys.c    **** 		}
 12384              		.loc 1 982 11 is_stmt 0 view .LVU3823
 12385 1ed0 4FF0330B 		mov	fp, #51
 12386              	.LVL1037:
 982:src/keys.c    **** 		}
 12387              		.loc 1 982 11 view .LVU3824
 12388 1ed4 FEF7EDB8 		b	.L565
 12389              	.LVL1038:
 12390              	.L1185:
 949:src/keys.c    **** 				return STATE_UNFINISHED;
 12391              		.loc 1 949 4 is_stmt 1 view .LVU3825
 949:src/keys.c    **** 				return STATE_UNFINISHED;
 12392              		.loc 1 949 8 is_stmt 0 view .LVU3826
 12393 1ed8 FFF7FEFF 		bl	is_bad_cmdline
 12394              	.LVL1039:
 949:src/keys.c    **** 				return STATE_UNFINISHED;
 12395              		.loc 1 949 7 view .LVU3827
 12396 1edc 88B9     		cbnz	r0, .L1200
 951:src/keys.c    **** 			State2.alphas = 1;
 12397              		.loc 1 951 4 is_stmt 1 view .LVU3828
 12398 1ede FFF7FEFF 		bl	process_cmdline_set_lift
 12399              	.LVL1040:
 952:src/keys.c    **** #ifdef DM42
 12400              		.loc 1 952 4 view .LVU3829
 952:src/keys.c    **** #ifdef DM42
 12401              		.loc 1 952 18 is_stmt 0 view .LVU3830
 12402 1ee2 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 954:src/keys.c    **** 			display_current_menu();
 12403              		.loc 1 954 4 view .LVU3831
 12404 1ee6 1020     		movs	r0, #16
 952:src/keys.c    **** #ifdef DM42
 12405              		.loc 1 952 18 view .LVU3832
 12406 1ee8 43F00803 		orr	r3, r3, #8
 12407 1eec 88F81630 		strb	r3, [r8, #22]
 954:src/keys.c    **** 			display_current_menu();
 12408              		.loc 1 954 4 is_stmt 1 view .LVU3833
 12409 1ef0 FFF7FEFF 		bl	set_menu
 12410              	.LVL1041:
 955:src/keys.c    **** #endif
 12411              		.loc 1 955 4 view .LVU3834
 12412 1ef4 FFF7FEFF 		bl	display_current_menu
 12413              	.LVL1042:
ARM GAS  /tmp/cccKVeLo.s 			page 339


 12414 1ef8 FFF7A6BB 		b	.L807
 12415              	.LVL1043:
 12416              	.L930:
 962:src/keys.c    **** 	  }
 12417              		.loc 1 962 13 is_stmt 0 view .LVU3835
 12418 1efc 4FF0120B 		mov	fp, #18
 12419 1f00 0BE6     		b	.L873
 12420              	.LVL1044:
 12421              	.L1200:
 962:src/keys.c    **** 	  }
 12422              		.loc 1 962 13 view .LVU3836
 12423 1f02 3268     		ldr	r2, [r6]
 950:src/keys.c    **** 			process_cmdline_set_lift();
 12424              		.loc 1 950 12 view .LVU3837
 12425 1f04 4FF0330B 		mov	fp, #51
 12426              	.LVL1045:
 950:src/keys.c    **** 			process_cmdline_set_lift();
 12427              		.loc 1 950 12 view .LVU3838
 12428 1f08 FEF7D3B8 		b	.L565
 12429              	.LVL1046:
 12430              	.L1199:
 950:src/keys.c    **** 			process_cmdline_set_lift();
 12431              		.loc 1 950 12 view .LVU3839
 12432 1f0c 3268     		ldr	r2, [r6]
 12433              	.LBE1036:
 12434              	.LBE1216:
 12435              	.LBB1217:
 12436              	.LBB1132:
1172:src/keys.c    **** 	}
 12437              		.loc 1 1172 10 view .LVU3840
 12438 1f0e 4FF0330B 		mov	fp, #51
 12439              	.LVL1047:
1172:src/keys.c    **** 	}
 12440              		.loc 1 1172 10 view .LVU3841
 12441 1f12 FEF7CEB8 		b	.L565
 12442              	.LVL1048:
 12443              	.L1189:
1172:src/keys.c    **** 	}
 12444              		.loc 1 1172 10 view .LVU3842
 12445              	.LBE1132:
 12446              	.LBE1217:
 12447              	.LBB1218:
 12448              	.LBB1037:
 938:src/keys.c    **** 		}
 12449              		.loc 1 938 4 is_stmt 1 view .LVU3843
 938:src/keys.c    **** 		}
 12450              		.loc 1 938 34 is_stmt 0 view .LVU3844
 12451 1f16 1E4B     		ldr	r3, .L1220+4
 12452              	.LVL1049:
 938:src/keys.c    **** 		}
 12453              		.loc 1 938 11 view .LVU3845
 12454 1f18 33F81010 		ldrh	r1, [r3, r0, lsl #1]
 12455 1f1c FFF7FEFF 		bl	check_f_key
 12456              	.LVL1050:
 938:src/keys.c    **** 		}
 12457              		.loc 1 938 11 view .LVU3846
 12458 1f20 8346     		mov	fp, r0
ARM GAS  /tmp/cccKVeLo.s 			page 340


 12459              	.LVL1051:
 938:src/keys.c    **** 		}
 12460              		.loc 1 938 11 view .LVU3847
 12461 1f22 FEF789BA 		b	.L595
 12462              	.LVL1052:
 12463              	.L1188:
 919:src/keys.c    **** 	    State2.dot = op;
 12464              		.loc 1 919 6 is_stmt 1 view .LVU3848
 920:src/keys.c    **** 	    // State2.cmplx = 0;
 12465              		.loc 1 920 6 view .LVU3849
 919:src/keys.c    **** 	    State2.dot = op;
 12466              		.loc 1 919 17 is_stmt 0 view .LVU3850
 12467 1f26 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 12468 1f2a 3268     		ldr	r2, [r6]
 12469 1f2c 0BF00103 		and	r3, fp, #1
 12470              	.LVL1053:
 919:src/keys.c    **** 	    State2.dot = op;
 12471              		.loc 1 919 17 view .LVU3851
 12472 1f30 9B01     		lsls	r3, r3, #6
 12473 1f32 43F02003 		orr	r3, r3, #32
 12474 1f36 21F06001 		bic	r1, r1, #96
 12475 1f3a 0B43     		orrs	r3, r3, r1
 12476 1f3c 88F81530 		strb	r3, [r8, #21]
 922:src/keys.c    **** 	  }
 12477              		.loc 1 922 6 is_stmt 1 view .LVU3852
 922:src/keys.c    **** 	  }
 12478              		.loc 1 922 13 is_stmt 0 view .LVU3853
 12479 1f40 4FF0330B 		mov	fp, #51
 12480              	.LVL1054:
 922:src/keys.c    **** 	  }
 12481              		.loc 1 922 13 view .LVU3854
 12482 1f44 FEF7B5B8 		b	.L565
 12483              	.LVL1055:
 12484              	.L1187:
 990:src/keys.c    **** 				init_arg((enum rarg) op);
 12485              		.loc 1 990 4 is_stmt 1 view .LVU3855
 990:src/keys.c    **** 				init_arg((enum rarg) op);
 12486              		.loc 1 990 7 is_stmt 0 view .LVU3856
 12487 1f48 BAF5704F 		cmp	r10, #61440
 12488 1f4c 0AD1     		bne	.L814
 990:src/keys.c    **** 				init_arg((enum rarg) op);
 12489              		.loc 1 990 18 view .LVU3857
 12490 1f4e 114B     		ldr	r3, .L1220+8
 12491 1f50 1B68     		ldr	r3, [r3]
 12492 1f52 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 990:src/keys.c    **** 				init_arg((enum rarg) op);
 12493              		.loc 1 990 8 view .LVU3858
 12494 1f56 D807     		lsls	r0, r3, #31
 12495 1f58 04D5     		bpl	.L814
 12496 1f5a 3268     		ldr	r2, [r6]
 993:src/keys.c    **** 		}
 12497              		.loc 1 993 11 view .LVU3859
 12498 1f5c 4FF0330B 		mov	fp, #51
 12499              	.LVL1056:
 993:src/keys.c    **** 		}
 12500              		.loc 1 993 11 view .LVU3860
 12501 1f60 FEF7A7B8 		b	.L565
ARM GAS  /tmp/cccKVeLo.s 			page 341


 12502              	.LVL1057:
 12503              	.L814:
 991:src/keys.c    **** 			}
 12504              		.loc 1 991 5 is_stmt 1 view .LVU3861
 12505              	.LBB1025:
 12506              	.LBI1025:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 12507              		.loc 1 506 13 view .LVU3862
 12508              	.LBB1026:
 507:src/keys.c    **** 		return;
 12509              		.loc 1 507 2 view .LVU3863
 507:src/keys.c    **** 		return;
 12510              		.loc 1 507 6 is_stmt 0 view .LVU3864
 12511 1f64 FFF7FEFF 		bl	is_bad_cmdline
 12512              	.LVL1058:
 507:src/keys.c    **** 		return;
 12513              		.loc 1 507 5 view .LVU3865
 12514 1f68 0446     		mov	r4, r0
 12515              	.LVL1059:
 507:src/keys.c    **** 		return;
 12516              		.loc 1 507 5 view .LVU3866
 12517 1f6a 48B9     		cbnz	r0, .L1201
 12518 1f6c 5FFA8BF0 		uxtb	r0, fp
 12519 1f70 FFF7FEFF 		bl	init_arg.part.0
 12520              	.LVL1060:
 12521              	.LBE1026:
 12522              	.LBE1025:
 12523              	.LBE1037:
 12524              	.LBE1218:
 12525              	.LBE1272:
 12526              	.LBE1347:
2977:src/keys.c    ****   if (was_paused && Pause == 0)
 12527              		.loc 1 2977 7 view .LVU3867
 12528 1f74 2546     		mov	r5, r4
 12529 1f76 3268     		ldr	r2, [r6]
 12530              	.LBB1348:
 12531              	.LBB1273:
 12532              	.LBB1219:
 12533              	.LBB1038:
 993:src/keys.c    **** 		}
 12534              		.loc 1 993 11 view .LVU3868
 12535 1f78 4FF0330B 		mov	fp, #51
 12536              	.LVL1061:
 993:src/keys.c    **** 		}
 12537              		.loc 1 993 11 view .LVU3869
 12538 1f7c FEF799B8 		b	.L565
 12539              	.LVL1062:
 12540              	.L1201:
 993:src/keys.c    **** 		}
 12541              		.loc 1 993 11 view .LVU3870
 12542 1f80 3268     		ldr	r2, [r6]
 12543 1f82 4FF0330B 		mov	fp, #51
 12544              	.LVL1063:
 993:src/keys.c    **** 		}
 12545              		.loc 1 993 11 view .LVU3871
 12546 1f86 FEF794B8 		b	.L565
 12547              	.L1221:
ARM GAS  /tmp/cccKVeLo.s 			page 342


 12548 1f8a 00BF     		.align	2
 12549              	.L1220:
 12550 1f8c 00000000 		.word	NonProgrammable
 12551 1f90 00000000 		.word	.LANCHOR20
 12552 1f94 00000000 		.word	main_ram
 12553              	.LBE1038:
 12554              	.LBE1219:
 12555              	.LBE1273:
 12556              	.LBE1348:
 12557              		.cfi_endproc
 12558              	.LFE58:
 12560              		.section	.text.process_keycode_with_shift,"ax",%progbits
 12561              		.align	1
 12562              		.p2align 2,,3
 12563              		.global	process_keycode_with_shift
 12564              		.syntax unified
 12565              		.thumb
 12566              		.thumb_func
 12567              		.fpu fpv4-sp-d16
 12569              	process_keycode_with_shift:
 12570              	.LFB57:
2951:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 12571              		.loc 1 2951 61 is_stmt 1 view -0
 12572              		.cfi_startproc
 12573              		@ args = 0, pretend = 0, frame = 8
 12574              		@ frame_needed = 0, uses_anonymous_args = 0
 12575 0000 30B5     		push	{r4, r5, lr}
 12576              		.cfi_def_cfa_offset 12
 12577              		.cfi_offset 4, -12
 12578              		.cfi_offset 5, -8
 12579              		.cfi_offset 14, -4
 12580 0002 83B0     		sub	sp, sp, #12
 12581              		.cfi_def_cfa_offset 24
2951:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 12582              		.loc 1 2951 61 is_stmt 0 view .LVU3873
 12583 0004 02AB     		add	r3, sp, #8
 12584 0006 03E90300 		stmdb	r3, {r0, r1}
 12585 000a 9DF80040 		ldrb	r4, [sp]	@ zero_extendqisi2
 12586              	.LVL1064:
2952:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 12587              		.loc 1 2952 4 is_stmt 1 view .LVU3874
2952:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 12588              		.loc 1 2952 7 is_stmt 0 view .LVU3875
 12589 000e 2E2C     		cmp	r4, #46
 12590 0010 10D0     		beq	.L1222
2953:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 12591              		.loc 1 2953 4 is_stmt 1 view .LVU3876
2953:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 12592              		.loc 1 2953 7 is_stmt 0 view .LVU3877
 12593 0012 332C     		cmp	r4, #51
 12594 0014 1DD0     		beq	.L1229
2962:src/keys.c    ****      nd_opcode = remapped.shift;
 12595              		.loc 1 2962 7 view .LVU3878
 12596 0016 342C     		cmp	r4, #52
 12597 0018 019D     		ldr	r5, [sp, #4]
2962:src/keys.c    ****      nd_opcode = remapped.shift;
 12598              		.loc 1 2962 4 is_stmt 1 view .LVU3879
ARM GAS  /tmp/cccKVeLo.s 			page 343


2962:src/keys.c    ****      nd_opcode = remapped.shift;
 12599              		.loc 1 2962 7 is_stmt 0 view .LVU3880
 12600 001a 0DD0     		beq	.L1230
2966:src/keys.c    ****    process_keycode ( remapped.key_34s );
 12601              		.loc 1 2966 9 is_stmt 1 view .LVU3881
2966:src/keys.c    ****    process_keycode ( remapped.key_34s );
 12602              		.loc 1 2966 12 is_stmt 0 view .LVU3882
 12603 001c 002D     		cmp	r5, #0
 12604 001e 03DB     		blt	.L1227
2966:src/keys.c    ****    process_keycode ( remapped.key_34s );
 12605              		.loc 1 2966 34 is_stmt 1 discriminator 1 view .LVU3883
 12606              	.LVL1065:
 12607              	.LBB1349:
 12608              	.LBI1349:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 12609              		.loc 1 94 20 discriminator 1 view .LVU3884
 12610              	.LBB1350:
  95:src/keys.c    **** 	State2.shifts = shift;
 12611              		.loc 1 95 2 discriminator 1 view .LVU3885
 12612              	.LBB1351:
 12613              	.LBI1351:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 12614              		.loc 1 86 13 discriminator 1 view .LVU3886
 12615              	.LBB1352:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12616              		.loc 1 87 2 discriminator 1 view .LVU3887
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12617              		.loc 1 87 18 is_stmt 0 discriminator 1 view .LVU3888
 12618 0020 FFF7FEFF 		bl	shift_down
 12619              	.LVL1066:
  88:src/keys.c    **** }
 12620              		.loc 1 88 2 is_stmt 1 discriminator 1 view .LVU3889
 12621              	.LBE1352:
 12622              	.LBE1351:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12623              		.loc 1 96 2 discriminator 1 view .LVU3890
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12624              		.loc 1 96 16 is_stmt 0 discriminator 1 view .LVU3891
 12625 0024 194B     		ldr	r3, .L1231
 12626              	.LBE1350:
 12627              	.LBE1349:
2966:src/keys.c    ****    process_keycode ( remapped.key_34s );
 12628              		.loc 1 2966 34 discriminator 1 view .LVU3892
 12629 0026 1D74     		strb	r5, [r3, #16]
 12630              	.LBB1354:
 12631              	.LBB1353:
  98:src/keys.c    **** }
 12632              		.loc 1 98 2 is_stmt 1 discriminator 1 view .LVU3893
 12633              	.LVL1067:
 12634              	.L1227:
  98:src/keys.c    **** }
 12635              		.loc 1 98 2 is_stmt 0 discriminator 1 view .LVU3894
 12636              	.LBE1353:
 12637              	.LBE1354:
2967:src/keys.c    ****  }
 12638              		.loc 1 2967 4 is_stmt 1 view .LVU3895
 12639 0028 2046     		mov	r0, r4
ARM GAS  /tmp/cccKVeLo.s 			page 344


2968:src/keys.c    ****  
 12640              		.loc 1 2968 2 is_stmt 0 view .LVU3896
 12641 002a 03B0     		add	sp, sp, #12
 12642              		.cfi_remember_state
 12643              		.cfi_def_cfa_offset 12
 12644              		@ sp needed
 12645 002c BDE83040 		pop	{r4, r5, lr}
 12646              		.cfi_restore 14
 12647              		.cfi_restore 5
 12648              		.cfi_restore 4
 12649              		.cfi_def_cfa_offset 0
 12650              	.LVL1068:
2967:src/keys.c    ****  }
 12651              		.loc 1 2967 4 view .LVU3897
 12652 0030 FFF7FEBF 		b	process_keycode
 12653              	.LVL1069:
 12654              	.L1222:
 12655              		.cfi_restore_state
2968:src/keys.c    ****  
 12656              		.loc 1 2968 2 view .LVU3898
 12657 0034 03B0     		add	sp, sp, #12
 12658              		.cfi_remember_state
 12659              		.cfi_def_cfa_offset 12
 12660              		@ sp needed
 12661 0036 30BD     		pop	{r4, r5, pc}
 12662              	.LVL1070:
 12663              	.L1230:
 12664              		.cfi_restore_state
2963:src/keys.c    ****      set_shift(SHIFT_N);
 12665              		.loc 1 2963 6 is_stmt 1 view .LVU3899
2963:src/keys.c    ****      set_shift(SHIFT_N);
 12666              		.loc 1 2963 16 is_stmt 0 view .LVU3900
 12667 0038 154B     		ldr	r3, .L1231+4
 12668 003a 1D60     		str	r5, [r3]
2964:src/keys.c    ****    }
 12669              		.loc 1 2964 6 is_stmt 1 view .LVU3901
 12670              	.LVL1071:
 12671              	.LBB1355:
 12672              	.LBI1355:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 12673              		.loc 1 94 20 view .LVU3902
 12674              	.LBB1356:
  95:src/keys.c    **** 	State2.shifts = shift;
 12675              		.loc 1 95 2 view .LVU3903
 12676              	.LBB1357:
 12677              	.LBI1357:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 12678              		.loc 1 86 13 view .LVU3904
 12679              	.LBB1358:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12680              		.loc 1 87 2 view .LVU3905
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12681              		.loc 1 87 18 is_stmt 0 view .LVU3906
 12682 003c FFF7FEFF 		bl	shift_down
 12683              	.LVL1072:
  88:src/keys.c    **** }
 12684              		.loc 1 88 2 is_stmt 1 view .LVU3907
ARM GAS  /tmp/cccKVeLo.s 			page 345


 12685              	.LBE1358:
 12686              	.LBE1357:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12687              		.loc 1 96 2 view .LVU3908
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12688              		.loc 1 96 16 is_stmt 0 view .LVU3909
 12689 0040 124B     		ldr	r3, .L1231
 12690 0042 0022     		movs	r2, #0
 12691              	.LBE1356:
 12692              	.LBE1355:
2967:src/keys.c    ****  }
 12693              		.loc 1 2967 4 view .LVU3910
 12694 0044 2046     		mov	r0, r4
 12695              	.LBB1360:
 12696              	.LBB1359:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12697              		.loc 1 96 16 view .LVU3911
 12698 0046 1A74     		strb	r2, [r3, #16]
  98:src/keys.c    **** }
 12699              		.loc 1 98 2 is_stmt 1 view .LVU3912
 12700              	.LVL1073:
  98:src/keys.c    **** }
 12701              		.loc 1 98 2 is_stmt 0 view .LVU3913
 12702              	.LBE1359:
 12703              	.LBE1360:
2967:src/keys.c    ****  }
 12704              		.loc 1 2967 4 is_stmt 1 view .LVU3914
2968:src/keys.c    ****  
 12705              		.loc 1 2968 2 is_stmt 0 view .LVU3915
 12706 0048 03B0     		add	sp, sp, #12
 12707              		.cfi_remember_state
 12708              		.cfi_def_cfa_offset 12
 12709              		@ sp needed
 12710 004a BDE83040 		pop	{r4, r5, lr}
 12711              		.cfi_restore 14
 12712              		.cfi_restore 5
 12713              		.cfi_restore 4
 12714              		.cfi_def_cfa_offset 0
 12715              	.LVL1074:
2967:src/keys.c    ****  }
 12716              		.loc 1 2967 4 view .LVU3916
 12717 004e FFF7FEBF 		b	process_keycode
 12718              	.LVL1075:
 12719              	.L1229:
 12720              		.cfi_restore_state
2954:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 12721              		.loc 1 2954 6 is_stmt 1 view .LVU3917
 12722 0052 104B     		ldr	r3, .L1231+8
 12723 0054 41F23010 		movw	r0, #4400
 12724 0058 9847     		blx	r3
 12725              	.LVL1076:
2954:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 12726              		.loc 1 2954 31 view .LVU3918
 12727 005a 0A20     		movs	r0, #10
 12728 005c 0E4B     		ldr	r3, .L1231+12
 12729 005e 9847     		blx	r3
 12730              	.LVL1077:
ARM GAS  /tmp/cccKVeLo.s 			page 346


2954:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 12731              		.loc 1 2954 46 view .LVU3919
 12732 0060 0E4B     		ldr	r3, .L1231+16
 12733 0062 9847     		blx	r3
 12734              	.LVL1078:
2955:src/keys.c    ****        // Was error just wait for confirmation
 12735              		.loc 1 2955 6 view .LVU3920
2955:src/keys.c    ****        // Was error just wait for confirmation
 12736              		.loc 1 2955 11 is_stmt 0 view .LVU3921
 12737 0064 0E4B     		ldr	r3, .L1231+20
 12738 0066 0120     		movs	r0, #1
 12739 0068 9847     		blx	r3
 12740              	.LVL1079:
2955:src/keys.c    ****        // Was error just wait for confirmation
 12741              		.loc 1 2955 9 view .LVU3922
 12742 006a 0228     		cmp	r0, #2
 12743 006c 01D1     		bne	.L1225
2957:src/keys.c    ****      }
 12744              		.loc 1 2957 8 is_stmt 1 view .LVU3923
 12745 006e 0D4B     		ldr	r3, .L1231+24
 12746 0070 9847     		blx	r3
 12747              	.LVL1080:
 12748              	.L1225:
2959:src/keys.c    ****      return;
 12749              		.loc 1 2959 6 view .LVU3924
 12750 0072 084B     		ldr	r3, .L1231+8
 12751 0074 42F26020 		movw	r0, #8800
 12752 0078 9847     		blx	r3
 12753              	.LVL1081:
2959:src/keys.c    ****      return;
 12754              		.loc 1 2959 31 view .LVU3925
 12755 007a 074B     		ldr	r3, .L1231+12
 12756 007c 0A20     		movs	r0, #10
 12757 007e 9847     		blx	r3
 12758              	.LVL1082:
2959:src/keys.c    ****      return;
 12759              		.loc 1 2959 46 view .LVU3926
 12760 0080 064B     		ldr	r3, .L1231+16
2968:src/keys.c    ****  
 12761              		.loc 1 2968 2 is_stmt 0 view .LVU3927
 12762 0082 03B0     		add	sp, sp, #12
 12763              		.cfi_def_cfa_offset 12
 12764              		@ sp needed
 12765 0084 BDE83040 		pop	{r4, r5, lr}
 12766              		.cfi_restore 14
 12767              		.cfi_restore 5
 12768              		.cfi_restore 4
 12769              		.cfi_def_cfa_offset 0
 12770              	.LVL1083:
2959:src/keys.c    ****      return;
 12771              		.loc 1 2959 46 view .LVU3928
 12772 0088 1847     		bx	r3	@ indirect register sibling call
 12773              	.LVL1084:
 12774              	.L1232:
 12775 008a 00BF     		.align	2
 12776              	.L1231:
 12777 008c 00000000 		.word	StateWhileOn
ARM GAS  /tmp/cccKVeLo.s 			page 347


 12778 0090 00000000 		.word	nd_opcode
 12779 0094 F5020008 		.word	134218485
 12780 0098 05040008 		.word	134218757
 12781 009c F9020008 		.word	134218489
 12782 00a0 79030008 		.word	134218617
 12783 00a4 99030008 		.word	134218649
 12784              		.cfi_endproc
 12785              	.LFE57:
 12787              		.comm	nd_opcode,4,4
 12788              		.comm	NonProgrammable,4,4
 12789              		.comm	GoFast,4,4
 12790              		.comm	OpCodeDisplayPending,4,4
 12791              		.comm	OpCode,4,4
 12792              		.comm	WasDataEntry,4,4
 12793              		.section	.bss.was_paused.9650,"aw",%nobits
 12794              		.align	2
 12795              		.set	.LANCHOR12,. + 0
 12798              	was_paused.9650:
 12799 0000 00000000 		.space	4
 12800              		.section	.rodata.alpha_arrows,"a"
 12801              		.align	2
 12804              	alpha_arrows:
 12805 0000 0D0E100F 		.ascii	"\015\016\020\017\003\004\237^\177"
 12805      03049F5E 
 12805      7F
 12806              		.section	.rodata.alpha_catalogue,"a"
 12807              		.align	2
 12810              	alpha_catalogue:
 12811 0000 0D4AC280 		.ascii	"\015J\302\200\236\256\012\242~\265\256k\252\356\274"
 12811      9EAE0AA2 
 12811      7EB5AE6B 
 12811      AAEEBC
 12812 000f 284AB0   		.ascii	"(J\260"
 12813              		.section	.rodata.alpha_compares,"a"
 12814              		.align	2
 12817              	alpha_compares:
 12818 0000 3C093D1D 		.ascii	"<\011=\035\012>[]{}"
 12818      0A3E5B5D 
 12818      7B7D
 12819              		.section	.rodata.alpha_letters,"a"
 12820              		.align	2
 12821              		.set	.LANCHOR3,. + 0
 12824              	alpha_letters:
 12825 0000 C0C1C2C3 		.ascii	"\300\301\302\303\210\304\305\306\307\204\310\311\312"
 12825      88C4C5C6 
 12825      C784C8C9 
 12825      CA
 12826 000d CB9ECCCD 		.ascii	"\313\236\314\315\316\317\320\321\322\323\324\025\325"
 12826      CECFD0D1 
 12826      D2D3D415 
 12826      D5
 12827 001a D618D8D9 		.ascii	"\326\030\330\331\332\333\334\001\031\002\335\032\336"
 12827      DADBDC01 
 12827      1902DD1A 
 12827      DE
 12828 0027 DF       		.ascii	"\337"
 12829              		.section	.rodata.alpha_letters_lower,"a"
ARM GAS  /tmp/cccKVeLo.s 			page 348


 12830              		.align	2
 12831              		.set	.LANCHOR4,. + 0
 12834              	alpha_letters_lower:
 12835 0000 E0E1E2E3 		.ascii	"\340\341\342\343\211\344\345\346\347\205\350\351\352"
 12835      89E4E5E6 
 12835      E785E8E9 
 12835      EA
 12836 000d EB9EECED 		.ascii	"\353\236\354\355\356\357\360\361\362\363\364\026\365"
 12836      EEEFF0F1 
 12836      F2F3F416 
 12836      F5
 12837 001a F618F8F9 		.ascii	"\366\030\370\371\372\373\374\001\031\002\375\032\376"
 12837      FAFBFC01 
 12837      1902FD1A 
 12837      FE
 12838 0027 FF       		.ascii	"\377"
 12839              		.section	.rodata.alpha_subscripts,"a"
 12840              		.align	2
 12843              	alpha_subscripts:
 12844 0000 B805B9BA 		.ascii	"\270\005\271\272\232\200\327\230\273\024\206\274\367"
 12844      9A80D798 
 12844      BB1486BC 
 12844      F7
 12845 000d 1BBDBE93 		.ascii	"\033\275\276\223\277\201\213\234\214\231\235\220\233"
 12845      BF818B9C 
 12845      8C999D90 
 12845      9B
 12846              		.section	.rodata.alpha_symbols,"a"
 12847              		.align	2
 12850              	alpha_symbols:
 12851 0000 2C3A3B27 		.ascii	",:;'\"*@_~%$\014\036\037\216\256\222`#"
 12851      222A405F 
 12851      7E25240C 
 12851      1E1F8EAE 
 12851      926023
 12852              		.section	.rodata.alphamap.9184,"a"
 12853              		.align	2
 12854              		.set	.LANCHOR9,. + 0
 12857              	alphamap.9184:
 12858 0000 41004100 		.ascii	"A\000A\000a\240"
 12858      61A0
 12859 0006 42004200 		.ascii	"B\000B\000b\241"
 12859      62A1
 12860 000c 43008200 		.ascii	"C\000\202\000c\242"
 12860      63A2
 12861 0012 44008300 		.ascii	"D\000\203\000d\243"
 12861      64A3
 12862 0018 450D4500 		.ascii	"E\015E\000e\244"
 12862      65A4
 12863 001e 46009400 		.ascii	"F\000\224\000f\264"
 12863      66B4
 12864 0024 47008200 		.ascii	"G\000\202\000g\242"
 12864      67A2
 12865 002a 48005800 		.ascii	"H\000X\000h\265"
 12865      68B5
 12866 0030 49004900 		.ascii	"I\000I\000i\250"
 12866      69A8
ARM GAS  /tmp/cccKVeLo.s 			page 349


 12867 0036 4AAF0000 		.ascii	"J\257\000\000j\000"
 12867      6A00
 12868 003c 4B004B00 		.ascii	"K\000K\000k\251"
 12868      6BA9
 12869 0042 4C008A00 		.ascii	"L\000\212\000l\252"
 12869      6CAA
 12870 0048 00004800 		.ascii	"\000\000H\000\000\246"
 12870      00A6
 12871 004e 4D00AB17 		.ascii	"M\000\253\027m\253"
 12871      6DAB
 12872 0054 4E084E95 		.ascii	"N\010N\225n\254"
 12872      6EAC
 12873 005a 4F0097AF 		.ascii	"O\000\227\257o\267"
 12873      6FB7
 12874 0060 00000000 		.ascii	"\000\000\000\000\000\000"
 12874      0000
 12875 0066 00000000 		.ascii	"\000\000\000\000\000\000"
 12875      0000
 12876 006c 50378F26 		.ascii	"P7\217&p\257"
 12876      70AF
 12877 0072 5138007C 		.ascii	"Q8\000|q\000"
 12877      7100
 12878 0078 5239520B 		.ascii	"R9R\013r\260"
 12878      72B0
 12879 007e 532F915C 		.ascii	"S/\221\\s\261"
 12879      73B1
 12880 0084 00000021 		.ascii	"\000\000\000!\000\000"
 12880      0000
 12881 008a 54345400 		.ascii	"T4T\000t\262"
 12881      74B2
 12882 0090 55350000 		.ascii	"U5\000\000u\000"
 12882      7500
 12883 0096 56360000 		.ascii	"V6\000\000v\000"
 12883      7600
 12884 009c 571C0000 		.ascii	"W\034\000\000w\000"
 12884      7700
 12885 00a2 0000003F 		.ascii	"\000\000\000?\000\000"
 12885      0000
 12886 00a8 58318D00 		.ascii	"X1\215\000x\255"
 12886      78AD
 12887 00ae 59325900 		.ascii	"Y2Y\000y\263"
 12887      79B3
 12888 00b4 5A335A00 		.ascii	"Z3Z\000z\245"
 12888      7AA5
 12889 00ba 2D282900 		.ascii	"-()\000\000\000"
 12889      0000
 12890 00c0 00000000 		.ascii	"\000\000\000\000\000\000"
 12890      0000
 12891 00c6 3A308720 		.ascii	":0\207 ;\247"
 12891      3BA7
 12892 00cc 2E2E9600 		.ascii	"..\226\000.\266"
 12892      2EB6
 12893 00d2 3F002100 		.ascii	"?\000!\000?\000"
 12893      3F00
 12894 00d8 202B3D00 		.ascii	" +=\000  "
 12894      2020
 12895 00de 00000000 		.ascii	"\000\000\000\000\000\000"
ARM GAS  /tmp/cccKVeLo.s 			page 350


 12895      0000
 12896              		.section	.rodata.amap.9175,"a"
 12897              		.align	2
 12898              		.set	.LANCHOR10,. + 0
 12901              	amap.9175:
 12902 0000 04       		.byte	4
 12903 0001 000D00   		.ascii	"\000\015\000"
 12904 0004 05       		.byte	5
 12905 0005 000E09   		.ascii	"\000\016\011"
 12906 0008 2C       		.byte	44
 12907 0009 000D00   		.ascii	"\000\015\000"
 12908 000c 2D       		.byte	45
 12909 000d 000E09   		.ascii	"\000\016\011"
 12910 0010 08       		.byte	8
 12911 0011 00000F   		.ascii	"\000\000\017"
 12912 0014 1F       		.byte	31
 12913 0015 00000C   		.ascii	"\000\000\014"
 12914 0018 21       		.byte	33
 12915 0019 00000A   		.ascii	"\000\000\012"
 12916 001c 26       		.byte	38
 12917 001d 00000B   		.ascii	"\000\000\013"
 12918              		.section	.rodata.catalogue,"a"
 12919              		.align	2
 12922              	catalogue:
 12923 0000 431A4660 		.ascii	"C\032F`\301_W\343\330\242;X\026\274}Dq\001\011tK\222"
 12923      C15F57E3 
 12923      D8A23B58 
 12923      16BC7D44 
 12923      71010974 
 12924 0016 F60D0643 		.ascii	"\366\015\006COV\235!H\2216\325\266iZfK\016o\027V\241"
 12924      4F569D21 
 12924      489136D5 
 12924      B6695A66 
 12924      4B0E6F17 
 12925 002c B4415C06 		.ascii	"\264A\\\006i%`\231vY\224`\032\306\354\303k[\024K\006"
 12925      69256099 
 12925      76599460 
 12925      1AC6ECC3 
 12925      6B5B144B 
 12926 0041 3DF05C07 		.ascii	"=\360\\\007\002>\321\243\013\017(\333&\021\263\015W"
 12926      023ED1A3 
 12926      0B0F28DB 
 12926      2611B30D 
 12926      57
 12927 0052 33290841 		.ascii	"3)\010A\320\224-\256+\033u\374\240'\253\202\250\237"
 12927      D0942DAE 
 12927      2B1B75FC 
 12927      A027AB82 
 12927      A89F
 12928 0064 ADEB5AE6 		.ascii	"\255\353Z\346\272\256\353\312\330\241*\331\224\221\235"
 12928      BAAEEBCA 
 12928      D8A12AD9 
 12928      94919D
 12929 0073 6799B671 		.ascii	"g\231\266q\260_\020\007\025\242o\326\325\251\241"
 12929      B05F1007 
 12929      15A26FD6 
 12929      D5A9A1
ARM GAS  /tmp/cccKVeLo.s 			page 351


 12930              		.section	.rodata.catalogue_sizes.9448,"a"
 12931              		.align	2
 12932              		.set	.LANCHOR2,. + 0
 12935              	catalogue_sizes.9448:
 12936 0000 00681911 		.ascii	"\000h\031\0216<C~%4\016\023\012\011(\032LLX\016\023"
 12936      363C437E 
 12936      25340E13 
 12936      0A09281A 
 12936      4C4C580E 
 12937              		.section	.rodata.catalogues.9456,"a"
 12938              		.align	2
 12939              		.set	.LANCHOR6,. + 0
 12942              	catalogues.9456:
 12943 0000 00000000 		.word	0
 12944 0004 00000000 		.word	catalogue
 12945 0008 00000000 		.word	cplx_catalogue
 12946 000c 00000000 		.word	stats_catalogue
 12947 0010 00000000 		.word	prob_catalogue
 12948 0014 00000000 		.word	int_catalogue
 12949 0018 00000000 		.word	prog_catalogue
 12950 001c 00000000 		.word	program_xfcn
 12951 0020 00000000 		.word	test_catalogue
 12952 0024 00000000 		.word	mode_catalogue
 12953 0028 00000000 		.word	alpha_catalogue
 12954 002c 00000000 		.word	alpha_symbols
 12955 0030 00000000 		.word	alpha_compares
 12956 0034 00000000 		.word	alpha_arrows
 12957 0038 00000000 		.word	alpha_letters
 12958 003c 00000000 		.word	alpha_subscripts
 12959 0040 00000000 		.word	0
 12960 0044 00000000 		.word	0
 12961 0048 00000000 		.word	0
 12962 004c 00000000 		.word	sums_catalogue
 12963 0050 00000000 		.word	matrix_catalogue
 12964              		.section	.rodata.cmap.9174,"a"
 12965              		.align	2
 12966              		.set	.LANCHOR11,. + 0
 12969              	cmap.9174:
 12970 0000 04       		.byte	4
 12971 0001 120012   		.ascii	"\022\000\022"
 12972 0004 05       		.byte	5
 12973 0005 090909   		.ascii	"\011\011\011"
 12974 0008 06       		.byte	6
 12975 0009 151515   		.ascii	"\025\025\025"
 12976 000c 0C       		.byte	12
 12977 000d 100011   		.ascii	"\020\000\021"
 12978 0010 19       		.byte	25
 12979 0011 040004   		.ascii	"\004\000\004"
 12980 0014 1A       		.byte	26
 12981 0015 030003   		.ascii	"\003\000\003"
 12982 0018 1B       		.byte	27
 12983 0019 130013   		.ascii	"\023\000\023"
 12984 001c 1C       		.byte	28
 12985 001d 140014   		.ascii	"\024\000\024"
 12986 0020 1E       		.byte	30
 12987 0021 171717   		.ascii	"\027\027\027"
 12988 0024 1F       		.byte	31
ARM GAS  /tmp/cccKVeLo.s 			page 352


 12989 0025 080808   		.ascii	"\010\010\010"
 12990 0028 20       		.byte	32
 12991 0029 060606   		.ascii	"\006\006\006"
 12992 002c 21       		.byte	33
 12993 002d 010502   		.ascii	"\001\005\002"
 12994              		.section	.rodata.conv_catalogue,"a"
 12995              		.align	2
 12996              		.set	.LANCHOR5,. + 0
 12999              	conv_catalogue:
 13000 0000 DADB8C8A 		.ascii	"\332\333\214\212+-\3357'913\021\026\005\334\336\031"
 13000      2B2DDD37 
 13000      27393133 
 13000      111605DC 
 13000      DE19
 13001 0012 1D1B1315 		.ascii	"\035\033\023\025\015\017\215\010\217\012*,GCE\027?0"
 13001      0D0F8D08 
 13001      8F0A2A2C 
 13001      47434517 
 13001      3F30
 13002 0024 32340400 		.ascii	"24\004\000\002\006&\" ($5/\001#\020\014\016!\022\024"
 13002      02062622 
 13002      20282435 
 13002      2F012310 
 13002      0C0E2112 
 13003 0039 3B181A1C 		.ascii	";\030\032\034\036).\01168>:<@%\337=\213\216\003\007"
 13003      1E292E09 
 13003      36383E3A 
 13003      3C4025DF 
 13003      3D8B8E03 
 13004 004e 4B49410B 		.ascii	"KIA\013JHFBD\037"
 13004      4A484642 
 13004      441F
 13005              		.section	.rodata.conv_mapping.9495,"a"
 13006              		.align	2
 13007              		.set	.LANCHOR8,. + 0
 13010              	conv_mapping.9495:
 13011 0000 8502     		.short	645
 13012 0002 8402     		.short	644
 13013 0004 8602     		.short	646
 13014 0006 8702     		.short	647
 13015 0008 8202     		.short	642
 13016 000a 8302     		.short	643
 13017 000c 3202     		.short	562
 13018 000e 3302     		.short	563
 13019 0010 3402     		.short	564
 13020 0012 3502     		.short	565
 13021 0014 3602     		.short	566
 13022 0016 3702     		.short	567
 13023              		.section	.rodata.cplx_catalogue,"a"
 13024              		.align	2
 13027              	cplx_catalogue:
 13028 0000 78278C6A 		.ascii	"x'\214j\001;\316\341\015\332x_W\332fvf\347\345\317{"
 13028      013BCEE1 
 13028      0DDA785F 
 13028      57DA6676 
 13028      66E7E5CF 
 13029 0015 9DB775DF 		.ascii	"\235\267u\337\242\353\011\265\370u\000"
ARM GAS  /tmp/cccKVeLo.s 			page 353


 13029      A2EB09B5 
 13029      F87500
 13030              		.section	.rodata.disp.9311,"a"
 13031              		.align	2
 13032              		.set	.LANCHOR15,. + 0
 13035              	disp.9311:
 13036 0000 03       		.byte	3
 13037 0001 02       		.byte	2
 13038 0002 05       		.byte	5
 13039 0003 04       		.byte	4
 13040              		.section	.rodata.int_catalogue,"a"
 13041              		.align	2
 13044              	int_catalogue:
 13045 0000 432F3306 		.ascii	"C/3\006\365=\233\342Y\275\020\257d4\365i\331&\240\224"
 13045      F53D9BE2 
 13045      59BD10AF 
 13045      6434F569 
 13045      D926A094 
 13046 0014 BE6FA65D 		.ascii	"\276o\246]\226\\\231F\261qn\3146\264\225\273n\363\336"
 13046      965C9946 
 13046      B1716ECC 
 13046      36B495BB 
 13046      6EF3DE
 13047 0027 EEBC2F41 		.ascii	"\356\274/A\240\373\274o,=\204\015L\244-\256+\033z\340"
 13047      A0FBBC6F 
 13047      2C3D840D 
 13047      4CA42DAE 
 13047      2B1B7AE0 
 13048 003b AAADEB5A 		.ascii	"\252\255\353Z\346\272\256\353\312\330\253I\020\007\031"
 13048      E6BAAEEB 
 13048      CAD8AB49 
 13048      100719
 13049 004a C7       		.ascii	"\307"
 13050              		.section	.rodata.linear_key_map.9145,"a"
 13051              		.align	2
 13052              		.set	.LANCHOR1,. + 0
 13055              	linear_key_map.9145:
 13056 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\011\012\013\014"
 13056      04050607 
 13056      08090A0B 
 13056      0C
 13057 000d 0D0E0F10 		.ascii	"\015\016\017\020\000\021\022\023\024\025\000\026\027"
 13057      00111213 
 13057      14150016 
 13057      17
 13058 001a 18191A00 		.ascii	"\030\031\032\000\033\034\035\036\037\000 !\"#$%%%%%"
 13058      1B1C1D1E 
 13058      1F002021 
 13058      22232425 
 13058      25252525 
 13059 002e 25       		.ascii	"%"
 13060              		.section	.rodata.linear_key_map.9149,"a"
 13061              		.align	2
 13062              		.set	.LANCHOR18,. + 0
 13065              	linear_key_map.9149:
 13066 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\"\"\"\011\012\013"
 13066      04050607 
ARM GAS  /tmp/cccKVeLo.s 			page 354


 13066      08222222 
 13066      090A0B
 13067 000f 0C0D000E 		.ascii	"\014\015\000\016\017\020\021\022\000\023\024\025\026"
 13067      0F101112 
 13067      00131415 
 13067      16
 13068 001c 17001819 		.ascii	"\027\000\030\031\032\033\034\000\035\036\037 !\"\"\""
 13068      1A1B1C00 
 13068      1D1E1F20 
 13068      21222222 
 13069 002c 040522   		.ascii	"\004\005\""
 13070              		.section	.rodata.map.9161,"a"
 13071              		.align	2
 13072              		.set	.LANCHOR0,. + 0
 13075              	map.9161:
 13076 0000 E8E9EAEB 		.ascii	"\350\351\352\353\377\177\177\177mnol\377\377\377\377"
 13076      FF7F7F7F 
 13076      6D6E6F6C 
 13076      FFFFFFFF 
 13077 0010 FF7F0708 		.ascii	"\377\177\007\010\011\177\177\347\005\006\177\177\344"
 13077      097F7FE7 
 13077      05067F7F 
 13077      E4
 13078 001d E5E67FFF 		.ascii	"\345\346\177\377\000\360\177\177\377\377\377\377\377"
 13078      00F07F7F 
 13078      FFFFFFFF 
 13078      FF
 13079 002a FF       		.ascii	"\377"
 13080              		.section	.rodata.matrix_catalogue,"a"
 13081              		.align	2
 13084              	matrix_catalogue:
 13085 0000 62DC4364 		.ascii	"b\334Cd\3305\334#m\205nXf\341\301n\230\2461\303bX\206"
 13085      D835DC23 
 13085      6D856E58 
 13085      66E1C16E 
 13085      98A631C3 
 13086 0017 1C       		.ascii	"\034"
 13087              		.section	.rodata.mode_catalogue,"a"
 13088              		.align	2
 13091              	mode_catalogue:
 13092 0000 2948C290 		.ascii	")H\302\220\213\276\306c\250\351\037\210\001\374|\270"
 13092      8BBEC663 
 13092      A8E91F88 
 13092      01FC7CB8 
 13093 0010 09818CCF 		.ascii	"\011\201\214\317$I\302lb\031I2H\232\0310\202\020\203"
 13093      2449C26C 
 13093      62194932 
 13093      489A1930 
 13093      821083
 13094 0023 C3704220 		.ascii	"\303pB \2072\012c\020\3072Js\024\306#\214\340\3409\301"
 13094      87320A63 
 13094      10C7324A 
 13094      7314C623 
 13094      8CE0E039 
 13095 0038 C862148D 		.ascii	"\310b\024\215\273\0173\310\231"
 13095      BB0F33C8 
 13095      99
ARM GAS  /tmp/cccKVeLo.s 			page 355


 13096              		.section	.rodata.op_map.9228,"a"
 13097              		.align	2
 13098              		.set	.LANCHOR22,. + 0
 13101              	op_map.9228:
 13102 0000 1500     		.short	21
 13103 0002 0B02     		.short	523
 13104 0004 0003     		.short	768
 13105 0006 0A02     		.short	522
 13106 0008 1300     		.short	19
 13107 000a 1400     		.short	20
 13108 000c 0300     		.short	3
 13109 000e 0A00     		.short	10
 13110 0010 0701     		.short	263
 13111 0012 0000     		.short	0
 13112 0014 6531     		.short	12645
 13113 0016 0300     		.short	3
 13114 0018 0200     		.short	2
 13115 001a 0100     		.short	1
 13116 001c 4400     		.short	68
 13117 001e 0C00     		.short	12
 13118 0020 0D00     		.short	13
 13119 0022 0E00     		.short	14
 13120 0024 0403     		.short	772
 13121 0026 2F00     		.short	47
 13122 0028 0900     		.short	9
 13123 002a 0A00     		.short	10
 13124 002c 0B00     		.short	11
 13125 002e 0303     		.short	771
 13126 0030 2E00     		.short	46
 13127 0032 0600     		.short	6
 13128 0034 0700     		.short	7
 13129 0036 0800     		.short	8
 13130 0038 0203     		.short	770
 13131 003a 3300     		.short	51
 13132 003c 0500     		.short	5
 13133 003e 0400     		.short	4
 13134 0040 3B01     		.short	315
 13135 0042 0103     		.short	769
 13136 0044 0001     		.short	256
 13137              		.section	.rodata.op_map.9251,"a"
 13138              		.align	2
 13139              		.set	.LANCHOR19,. + 0
 13142              	op_map.9251:
 13143 0000 0100     		.short	1
 13144 0002 0000     		.short	0
 13145 0004 20F2     		.short	-3552
 13146 0006 23F2     		.short	-3549
 13147 0008 21F2     		.short	-3551
 13148 000a 24F2     		.short	-3548
 13149 000c 22F2     		.short	-3550
 13150 000e 25F2     		.short	-3547
 13151 0010 47F1     		.short	-3769
 13152 0012 46F1     		.short	-3770
 13153 0014 4E01     		.short	334
 13154 0016 4D01     		.short	333
 13155 0018 5C01     		.short	348
 13156 001a 35F1     		.short	-3787
ARM GAS  /tmp/cccKVeLo.s 			page 356


 13157 001c 5B01     		.short	347
 13158 001e 36F1     		.short	-3786
 13159 0020 3301     		.short	307
 13160 0022 37F1     		.short	-3785
 13161 0024 3300     		.short	51
 13162 0026 0C01     		.short	268
 13163 0028 2B00     		.short	43
 13164 002a 2C00     		.short	44
 13165 002c 028B     		.short	-29950
 13166 002e 088B     		.short	-29944
 13167 0030 0A8B     		.short	-29942
 13168 0032 108B     		.short	-29936
 13169 0034 4301     		.short	323
 13170 0036 3D01     		.short	317
 13171 0038 0902     		.short	521
 13172 003a 0802     		.short	520
 13173 003c 1002     		.short	528
 13174 003e 0D02     		.short	525
 13175 0040 0F02     		.short	527
 13176 0042 0E02     		.short	526
 13177 0044 0003     		.short	768
 13178 0046 0803     		.short	776
 13179 0048 0BF2     		.short	-3573
 13180 004a 1603     		.short	790
 13181 004c 1203     		.short	786
 13182 004e 1303     		.short	787
 13183 0050 3DF2     		.short	-3523
 13184 0052 3EF2     		.short	-3522
 13185 0054 24F1     		.short	-3804
 13186 0056 1EF1     		.short	-3810
 13187 0058 75F2     		.short	-3467
 13188 005a 27F1     		.short	-3801
 13189 005c 0A02     		.short	522
 13190 005e 1602     		.short	534
 13191 0060 5100     		.short	81
 13192 0062 5200     		.short	82
 13193 0064 0000     		.short	0
 13194 0066 0100     		.short	1
 13195 0068 48F0     		.short	-4024
 13196 006a 4BF0     		.short	-4021
 13197 006c 47F0     		.short	-4025
 13198 006e 46F0     		.short	-4026
 13199 0070 77F2     		.short	-3465
 13200 0072 78F2     		.short	-3464
 13201 0074 3300     		.short	51
 13202 0076 3300     		.short	51
 13203 0078 0502     		.short	517
 13204 007a 0602     		.short	518
 13205 007c 0402     		.short	516
 13206 007e 0002     		.short	512
 13207 0080 4200     		.short	66
 13208 0082 3801     		.short	312
 13209 0084 3A00     		.short	58
 13210 0086 3B00     		.short	59
 13211 0088 0001     		.short	256
 13212 008a 0001     		.short	256
 13213              		.section	.rodata.op_map.9274,"a"
ARM GAS  /tmp/cccKVeLo.s 			page 357


 13214              		.align	2
 13215              		.set	.LANCHOR21,. + 0
 13218              	op_map.9274:
 13219 0000 4C80     		.short	-32692
 13220 0002 4D80     		.short	-32691
 13221 0004 4E80     		.short	-32690
 13222 0006 4F80     		.short	-32689
 13223 0008 3300     		.short	51
 13224 000a 3300     		.short	51
 13225 000c 3300     		.short	51
 13226 000e 2180     		.short	-32735
 13227 0010 0801     		.short	264
 13228 0012 8780     		.short	-32633
 13229 0014 1180     		.short	-32751
 13230 0016 7C02     		.short	636
 13231 0018 5560     		.short	24661
 13232 001a 3F01     		.short	319
 13233 001c 4580     		.short	-32699
 13234 001e 1C03     		.short	796
 13235 0020 1D03     		.short	797
 13236 0022 1E03     		.short	798
 13237 0024 0603     		.short	774
 13238 0026 2F02     		.short	559
 13239 0028 3300     		.short	51
 13240 002a 3300     		.short	51
 13241 002c 3300     		.short	51
 13242 002e 3300     		.short	51
 13243 0030 3300     		.short	51
 13244 0032 3300     		.short	51
 13245 0034 3300     		.short	51
 13246 0036 3300     		.short	51
 13247 0038 1640     		.short	16406
 13248 003a 0201     		.short	258
 13249 003c 6D80     		.short	-32659
 13250 003e 5001     		.short	336
 13251 0040 3300     		.short	51
 13252 0042 1540     		.short	16405
 13253 0044 0001     		.short	256
 13254              		.section	.rodata.op_map.9284,"a"
 13255              		.align	2
 13256              		.set	.LANCHOR17,. + 0
 13259              	op_map.9284:
 13260 0000 0100     		.short	1
 13261 0002 0100     		.short	1
 13262 0004 0000     		.short	0
 13263 0006 0000     		.short	0
 13264 0008 0B05     		.short	1291
 13265 000a 2005     		.short	1312
 13266 000c 2305     		.short	1315
 13267 000e 3300     		.short	51
 13268 0010 0006     		.short	1536
 13269 0012 2105     		.short	1313
 13270 0014 2405     		.short	1316
 13271 0016 3300     		.short	51
 13272 0018 0A05     		.short	1290
 13273 001a 2205     		.short	1314
 13274 001c 2505     		.short	1317
ARM GAS  /tmp/cccKVeLo.s 			page 358


 13275 001e 3300     		.short	51
 13276 0020 3300     		.short	51
 13277 0022 4701     		.short	327
 13278 0024 4601     		.short	326
 13279 0026 3300     		.short	51
 13280 0028 3300     		.short	51
 13281 002a 3300     		.short	51
 13282 002c 3300     		.short	51
 13283 002e 3300     		.short	51
 13284 0030 15FF     		.short	-235
 13285 0032 3300     		.short	51
 13286 0034 3300     		.short	51
 13287 0036 3300     		.short	51
 13288 0038 1AFF     		.short	-230
 13289 003a 3300     		.short	51
 13290 003c 3300     		.short	51
 13291 003e 8CFF     		.short	-116
 13292 0040 0901     		.short	265
 13293 0042 3300     		.short	51
 13294 0044 3300     		.short	51
 13295 0046 0A01     		.short	266
 13296 0048 0B01     		.short	267
 13297 004a 3300     		.short	51
 13298 004c 0D01     		.short	269
 13299 004e 0D01     		.short	269
 13300 0050 663F     		.short	16230
 13301 0052 3300     		.short	51
 13302 0054 3300     		.short	51
 13303 0056 1FFF     		.short	-225
 13304 0058 3805     		.short	1336
 13305 005a 3300     		.short	51
 13306 005c 3300     		.short	51
 13307 005e 3905     		.short	1337
 13308 0060 5521     		.short	8533
 13309 0062 3300     		.short	51
 13310 0064 3300     		.short	51
 13311 0066 5521     		.short	8533
 13312 0068 3300     		.short	51
 13313 006a 3300     		.short	51
 13314 006c 3300     		.short	51
 13315 006e 3300     		.short	51
 13316 0070 3300     		.short	51
 13317 0072 0905     		.short	1289
 13318 0074 0805     		.short	1288
 13319 0076 3300     		.short	51
 13320 0078 07A8     		.short	-22521
 13321 007a 1005     		.short	1296
 13322 007c 0D05     		.short	1293
 13323 007e 3300     		.short	51
 13324 0080 08A8     		.short	-22520
 13325 0082 0F05     		.short	1295
 13326 0084 0E05     		.short	1294
 13327 0086 3300     		.short	51
 13328 0088 09A8     		.short	-22519
 13329 008a 0006     		.short	1536
 13330 008c 0806     		.short	1544
 13331 008e 3300     		.short	51
ARM GAS  /tmp/cccKVeLo.s 			page 359


 13332 0090 0406     		.short	1540
 13333 0092 0B05     		.short	1291
 13334 0094 1606     		.short	1558
 13335 0096 3300     		.short	51
 13336 0098 3300     		.short	51
 13337 009a 1206     		.short	1554
 13338 009c 1306     		.short	1555
 13339 009e 2F05     		.short	1327
 13340 00a0 04A8     		.short	-22524
 13341 00a2 3300     		.short	51
 13342 00a4 3300     		.short	51
 13343 00a6 3300     		.short	51
 13344 00a8 05A8     		.short	-22523
 13345 00aa 3300     		.short	51
 13346 00ac 3300     		.short	51
 13347 00ae 3300     		.short	51
 13348 00b0 06A8     		.short	-22522
 13349 00b2 3300     		.short	51
 13350 00b4 3300     		.short	51
 13351 00b6 3300     		.short	51
 13352 00b8 0306     		.short	1539
 13353 00ba 0A05     		.short	1290
 13354 00bc 1605     		.short	1302
 13355 00be 1605     		.short	1302
 13356 00c0 3300     		.short	51
 13357 00c2 3300     		.short	51
 13358 00c4 3300     		.short	51
 13359 00c6 3300     		.short	51
 13360 00c8 01A8     		.short	-22527
 13361 00ca 0000     		.short	0
 13362 00cc 0100     		.short	1
 13363 00ce 3300     		.short	51
 13364 00d0 02A8     		.short	-22526
 13365 00d2 3300     		.short	51
 13366 00d4 3300     		.short	51
 13367 00d6 3300     		.short	51
 13368 00d8 03A8     		.short	-22525
 13369 00da 3300     		.short	51
 13370 00dc 3300     		.short	51
 13371 00de 3300     		.short	51
 13372 00e0 0206     		.short	1538
 13373 00e2 3300     		.short	51
 13374 00e4 3300     		.short	51
 13375 00e6 3300     		.short	51
 13376 00e8 3300     		.short	51
 13377 00ea 3300     		.short	51
 13378 00ec 3300     		.short	51
 13379 00ee 0201     		.short	258
 13380 00f0 00A8     		.short	-22528
 13381 00f2 0505     		.short	1285
 13382 00f4 0605     		.short	1286
 13383 00f6 3300     		.short	51
 13384 00f8 B801     		.short	440
 13385 00fa 0405     		.short	1284
 13386 00fc 0005     		.short	1280
 13387 00fe 3300     		.short	51
 13388 0100 3300     		.short	51
ARM GAS  /tmp/cccKVeLo.s 			page 360


 13389 0102 3300     		.short	51
 13390 0104 3300     		.short	51
 13391 0106 3300     		.short	51
 13392 0108 0106     		.short	1537
 13393 010a 3300     		.short	51
 13394 010c 3300     		.short	51
 13395 010e 3300     		.short	51
 13396 0110 0001     		.short	256
 13397 0112 0001     		.short	256
 13398 0114 0001     		.short	256
 13399 0116 0001     		.short	256
 13400              		.section	.rodata.op_map.9296,"a"
 13401              		.align	2
 13402              		.set	.LANCHOR13,. + 0
 13405              	op_map.9296:
 13406 0000 2A27     		.ascii	"*'"
 13407 0002 2B28     		.ascii	"+("
 13408 0004 2C29     		.ascii	",)"
 13409              		.section	.rodata.op_map.9310,"a"
 13410              		.align	2
 13411              		.set	.LANCHOR14,. + 0
 13414              	op_map.9310:
 13415 0000 1A02     		.short	538
 13416 0002 7B02     		.short	635
 13417 0004 1B02     		.short	539
 13418 0006 7A02     		.short	634
 13419 0008 1C02     		.short	540
 13420 000a 3300     		.short	51
 13421              		.section	.rodata.op_map2.9252,"a"
 13422              		.align	2
 13423              		.set	.LANCHOR20,. + 0
 13426              	op_map2.9252:
 13427 0000 3300     		.short	51
 13428 0002 3300     		.short	51
 13429 0004 0003     		.short	768
 13430 0006 0A02     		.short	522
 13431              		.section	.rodata.opcode_breaks,"a"
 13432              		.align	2
 13433              		.set	.LANCHOR7,. + 0
 13436              	opcode_breaks:
 13437 0000 34C0992F 		.ascii	"4\300\231/\014\231/"
 13437      0C992F
 13438              		.section	.rodata.prob_catalogue,"a"
 13439              		.align	2
 13442              	prob_catalogue:
 13443 0000 50D42581 		.ascii	"P\324%\201DV\025u\235YP\023\365}ANU\324\351;S\024\265"
 13443      44561575 
 13443      9D595013 
 13443      F57D414E 
 13443      55D4E93B 
 13444 0017 8D4D5495 		.ascii	"\215MT\225\025\225SUUE\231VS\324\345\221PRT\205\211"
 13444      15955355 
 13444      55459956 
 13444      53D4E591 
 13444      50525485 
 13445 002c 4A519455 		.ascii	"JQ\224U\205GM\225\304\3358OS\305y>V\223\004\3215L\325"
 13445      85474D95 
ARM GAS  /tmp/cccKVeLo.s 			page 361


 13445      C4DD384F 
 13445      53C5793E 
 13445      569304D1 
 13446 0043 B0       		.ascii	"\260"
 13447              		.section	.rodata.prog_catalogue,"a"
 13448              		.align	2
 13451              	prog_catalogue:
 13452 0000 B1CD1C6C 		.ascii	"\261\315\034ly\035G\201\310t*1\233@B\263,\341\272\222"
 13452      791D4781 
 13452      C8742A31 
 13452      9B4042B3 
 13452      2CE1BA92 
 13453 0014 B8CE0B66 		.ascii	"\270\316\013f\3323-\0336\317\302\216#\220\3478\316\214"
 13453      DA332D1B 
 13453      36CFC28E 
 13453      2390E738 
 13453      CE8C
 13454 0026 30DE3770 		.ascii	"0\3367p\260\320\3349G\003\233\011\254\315\361\330\315"
 13454      B0D0DC39 
 13454      47039B09 
 13454      ACCDF1D8 
 13454      CD
 13455 0037 1B4B12BC 		.ascii	"\033K\022\274\262,\016\033\030\322\015\353#\002\244"
 13455      B22C0E1B 
 13455      18D20DEB 
 13455      2302A4
 13456 0046 2A7030E8 		.ascii	"*p0\350\313\250\252<\000\256+o\374X"
 13456      CBA8AA3C 
 13456      00AE2B6F 
 13456      FC58
 13457              		.section	.rodata.program_xfcn,"a"
 13458              		.align	2
 13461              	program_xfcn:
 13462 0000 431A4662 		.ascii	"C\032Fb\3630W\325\372\365=\212#\265\201k\333\342Y\275"
 13462      F33057D5 
 13462      FAF53D8A 
 13462      23B5816B 
 13462      DBE259BD 
 13463 0014 1F511C40 		.ascii	"\037Q\034@B]\022\344\275\203A\257d4\365i\322\024\211"
 13463      425D12E4 
 13463      BD8341AF 
 13463      6434F569 
 13463      D21489
 13464 0027 136D5B66 		.ascii	"\023m[f\225\246d\260\346\361uj\011F\321\005p\031\244"
 13464      95A664B0 
 13464      E6F1756A 
 13464      0946D105 
 13464      7019A4
 13465 003a 9582BE6F 		.ascii	"\225\202\276o\246]\226\\\231F\001\254\\[\263\015\255"
 13465      A65D965C 
 13465      994601AC 
 13465      5C5BB30D 
 13465      AD
 13466 004b 6C512C18 		.ascii	"lQ,\030\225\273n\363\336\356\2740[\323\001\300\206\203"
 13466      95BB6EF3 
 13466      DEEEBC30 
 13466      5BD301C0 
ARM GAS  /tmp/cccKVeLo.s 			page 362


 13466      8683
 13467 005d ED1ABC4C 		.ascii	"\355\032\274L+\313\017(\333&\021\263\015W3)\010A\320"
 13467      2BCB0F28 
 13467      DB2611B3 
 13467      0D573329 
 13467      0841D0
 13468 0070 942DAE2B 		.ascii	"\224-\256+\033u\374\240'\253\202\250\237\255\353Z\346"
 13468      1B75FCA0 
 13468      27AB82A8 
 13468      9FADEB5A 
 13468      E6
 13469 0081 BAAEEBCA 		.ascii	"\272\256\353\312\330\241*\331\224\221\235g\231\266q"
 13469      D8A12AD9 
 13469      94919D67 
 13469      99B671
 13470 0090 B05F1007 		.ascii	"\260_\020\007\031\305h\233\365\265jh\\p"
 13470      19C5689B 
 13470      F5B56A68 
 13470      5C70
 13471              		.section	.rodata.smap.9176,"a"
 13472              		.align	2
 13473              		.set	.LANCHOR16,. + 0
 13476              	smap.9176:
 13477 0000 00010002 		.ascii	"\000\001\000\002"
 13478              		.section	.rodata.stats_catalogue,"a"
 13479              		.align	2
 13482              	stats_catalogue:
 13483 0000 1805C1A0 		.ascii	"\030\005\301\240]\027\311qXa\026\205\225\240T\027\205"
 13483      5D17C971 
 13483      58611685 
 13483      95A05417 
 13483      85
 13484 0011 514C575A 		.ascii	"QLWZ\200"
 13484      80
 13485              		.section	.rodata.sums_catalogue,"a"
 13486              		.align	2
 13489              	sums_catalogue:
 13490 0000 1444B134 		.ascii	"\024D\2614J\023\204\301 E\021\004\361\034I\021\205\000"
 13490      4A1384C1 
 13490      20451104 
 13490      F11C4911 
 13490      8500
 13491              		.section	.rodata.test_catalogue,"a"
 13492              		.align	2
 13495              	test_catalogue:
 13496 0000 BE2F7C54 		.ascii	"\276/|T\353/\313\333\226\351\272\356\242\362\344\271"
 13496      EB2FCBDB 
 13496      96E9BAEE 
 13496      A2F2E4B9 
 13497 0010 AE8B9CD3 		.ascii	"\256\213\234\323.\357\353L\2356\213\202\370\2725\013"
 13497      2EEFEB4C 
 13497      9D368B82 
 13497      F8BA350B 
 13498 0020 9340F0B0 		.ascii	"\223@\360\260,\023T\326\257\354;\010\267<@"
 13498      2C1354D6 
 13498      AFEC3B08 
 13498      B73C40
ARM GAS  /tmp/cccKVeLo.s 			page 363


 13499              		.text
 13500              	.Letext0:
 13501              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 13502              		.file 3 "dmcp/dmcp.h"
 13503              		.file 4 "src/decNumber/decContext.h"
 13504              		.file 5 "src/decNumber/decNumber.h"
 13505              		.file 6 "src/decNumber/decimal64.h"
 13506              		.file 7 "src/decNumber/decimal128.h"
 13507              		.file 8 "src/xeq.h"
 13508              		.file 9 "src/data.h"
 13509              		.file 10 "src/keys.h"
 13510              		.file 11 "src/display.h"
 13511              		.file 12 "src/consts.h"
 13512              		.file 13 "src/storage.h"
 13513              		.file 14 "src/stats.h"
 13514              		.file 15 "src/catalogues.h"
 13515              		.file 16 "src/lcd.h"
 13516              		.file 17 "src/int.h"
ARM GAS  /tmp/cccKVeLo.s 			page 364


DEFINED SYMBOLS
                            *ABS*:0000000000000000 keys.c
     /tmp/cccKVeLo.s:18     .text.gtodot_digit:0000000000000000 $t
     /tmp/cccKVeLo.s:26     .text.gtodot_digit:0000000000000000 gtodot_digit
     /tmp/cccKVeLo.s:110    .text.gtodot_digit:0000000000000054 $d
     /tmp/cccKVeLo.s:117    .text.check_f_key:0000000000000000 $t
     /tmp/cccKVeLo.s:124    .text.check_f_key:0000000000000000 check_f_key
     /tmp/cccKVeLo.s:202    .text.check_f_key:0000000000000038 $d
     /tmp/cccKVeLo.s:208    .text.is_label_or_end_at:0000000000000000 $t
     /tmp/cccKVeLo.s:215    .text.is_label_or_end_at:0000000000000000 is_label_or_end_at
     /tmp/cccKVeLo.s:271    .text.advance_to_next_label:0000000000000000 $t
     /tmp/cccKVeLo.s:278    .text.advance_to_next_label:0000000000000000 advance_to_next_label
     /tmp/cccKVeLo.s:359    .text.advance_to_next_label:0000000000000048 $d
     /tmp/cccKVeLo.s:364    .text.init_cat:0000000000000000 $t
     /tmp/cccKVeLo.s:371    .text.init_cat:0000000000000000 init_cat
     /tmp/cccKVeLo.s:684    .text.init_cat:00000000000000e4 $d
     /tmp/cccKVeLo.s:690    .text.advance_to_previous_label:0000000000000000 $t
     /tmp/cccKVeLo.s:697    .text.advance_to_previous_label:0000000000000000 advance_to_previous_label
     /tmp/cccKVeLo.s:782    .text.advance_to_previous_label:000000000000004c $d
     /tmp/cccKVeLo.s:787    .text.check_confirm.part.0:0000000000000000 $t
     /tmp/cccKVeLo.s:794    .text.check_confirm.part.0:0000000000000000 check_confirm.part.0
     /tmp/cccKVeLo.s:848    .text.check_confirm.part.0:0000000000000028 $d
                            *COM*:0000000000000004 NonProgrammable
     /tmp/cccKVeLo.s:855    .text.init_arg.part.0:0000000000000000 $t
     /tmp/cccKVeLo.s:862    .text.init_arg.part.0:0000000000000000 init_arg.part.0
     /tmp/cccKVeLo.s:904    .text.init_arg.part.0:0000000000000024 $d
     /tmp/cccKVeLo.s:909    .text.reset_arg:0000000000000000 $t
     /tmp/cccKVeLo.s:916    .text.reset_arg:0000000000000000 reset_arg
     /tmp/cccKVeLo.s:960    .text.reset_arg:0000000000000018 $d
     /tmp/cccKVeLo.s:965    .text.arg_eval:0000000000000000 $t
     /tmp/cccKVeLo.s:972    .text.arg_eval:0000000000000000 arg_eval
     /tmp/cccKVeLo.s:1094   .text.arg_eval:0000000000000074 $d
     /tmp/cccKVeLo.s:1101   .text.process_arg_shuffle:0000000000000000 $t
     /tmp/cccKVeLo.s:1108   .text.process_arg_shuffle:0000000000000000 process_arg_shuffle
     /tmp/cccKVeLo.s:1166   .text.process_arg_shuffle:000000000000002c $d
     /tmp/cccKVeLo.s:1171   .text.arg_digit:0000000000000000 $t
     /tmp/cccKVeLo.s:1178   .text.arg_digit:0000000000000000 arg_digit
     /tmp/cccKVeLo.s:1403   .text.arg_digit:00000000000000c8 $d
     /tmp/cccKVeLo.s:1411   .text.intltr:0000000000000000 $t
     /tmp/cccKVeLo.s:1418   .text.intltr:0000000000000000 intltr
     /tmp/cccKVeLo.s:1481   .text.intltr:0000000000000030 $d
     /tmp/cccKVeLo.s:1487   .text.set_window:0000000000000000 $t
     /tmp/cccKVeLo.s:1494   .text.set_window:0000000000000000 set_window
     /tmp/cccKVeLo.s:1641   .text.set_window:000000000000008c $d
     /tmp/cccKVeLo.s:1648   .text.arg_storcl:0000000000000000 $t
     /tmp/cccKVeLo.s:1655   .text.arg_storcl:0000000000000000 arg_storcl
     /tmp/cccKVeLo.s:1771   .text.arg_storcl:0000000000000040 $d
     /tmp/cccKVeLo.s:1776   .text.process_arg:0000000000000000 $t
     /tmp/cccKVeLo.s:1783   .text.process_arg:0000000000000000 process_arg
     /tmp/cccKVeLo.s:1993   .text.process_arg:0000000000000092 $d
     /tmp/cccKVeLo.s:2040   .text.process_arg:00000000000000ee $t
     /tmp/cccKVeLo.s:2071   .text.process_arg:0000000000000114 $d
     /tmp/cccKVeLo.s:2525   .text.process_arg:00000000000002ac $d
     /tmp/cccKVeLo.s:2537   .text.process_arg:00000000000002c0 $t
     /tmp/cccKVeLo.s:2956   .text.process_arg:0000000000000468 $d
     /tmp/cccKVeLo.s:2961   .text.cur_shift:0000000000000000 $t
     /tmp/cccKVeLo.s:2969   .text.cur_shift:0000000000000000 cur_shift
ARM GAS  /tmp/cccKVeLo.s 			page 365


     /tmp/cccKVeLo.s:2997   .text.cur_shift:0000000000000010 $d
     /tmp/cccKVeLo.s:3002   .text.reset_shift:0000000000000000 $t
     /tmp/cccKVeLo.s:3010   .text.reset_shift:0000000000000000 reset_shift
     /tmp/cccKVeLo.s:3068   .text.reset_shift:0000000000000014 $d
     /tmp/cccKVeLo.s:3073   .text.keycode_to_row_column:0000000000000000 $t
     /tmp/cccKVeLo.s:3081   .text.keycode_to_row_column:0000000000000000 keycode_to_row_column
     /tmp/cccKVeLo.s:3109   .text.keycode_to_row_column:0000000000000020 $d
     /tmp/cccKVeLo.s:3114   .text.row_column_to_keycode:0000000000000000 $t
     /tmp/cccKVeLo.s:3122   .text.row_column_to_keycode:0000000000000000 row_column_to_keycode
     /tmp/cccKVeLo.s:3180   .text.row_column_to_keycode:000000000000003c $d
     /tmp/cccKVeLo.s:3185   .text.keycode_to_digit_or_register:0000000000000000 $t
     /tmp/cccKVeLo.s:3193   .text.keycode_to_digit_or_register:0000000000000000 keycode_to_digit_or_register
     /tmp/cccKVeLo.s:3229   .text.keycode_to_digit_or_register:000000000000000c $d
     /tmp/cccKVeLo.s:3235   .text.init_state:0000000000000000 $t
     /tmp/cccKVeLo.s:3243   .text.init_state:0000000000000000 init_state
     /tmp/cccKVeLo.s:3349   .text.init_state:000000000000005c $d
     /tmp/cccKVeLo.s:3355   .text.soft_init_state:0000000000000000 $t
     /tmp/cccKVeLo.s:3363   .text.soft_init_state:0000000000000000 soft_init_state
     /tmp/cccKVeLo.s:3458   .text.soft_init_state:0000000000000048 $d
     /tmp/cccKVeLo.s:3464   .text.current_catalogue_max:0000000000000000 $t
     /tmp/cccKVeLo.s:3472   .text.current_catalogue_max:0000000000000000 current_catalogue_max
     /tmp/cccKVeLo.s:3493   .text.current_catalogue_max:000000000000000c $d
     /tmp/cccKVeLo.s:3499   .text.current_catalogue:0000000000000000 $t
     /tmp/cccKVeLo.s:3507   .text.current_catalogue:0000000000000000 current_catalogue
     /tmp/cccKVeLo.s:3763   .text.current_catalogue:00000000000000c8 $d
     /tmp/cccKVeLo.s:3773   .text.process_catalogue:0000000000000000 $t
     /tmp/cccKVeLo.s:3780   .text.process_catalogue:0000000000000000 process_catalogue
     /tmp/cccKVeLo.s:4109   .text.process_catalogue:00000000000000fe $d
     /tmp/cccKVeLo.s:4141   .text.process_catalogue:000000000000011e $t
     /tmp/cccKVeLo.s:4649   .text.process_catalogue:00000000000002dc $d
     /tmp/cccKVeLo.s:4670   .text.process_catalogue:00000000000002fc $t
     /tmp/cccKVeLo.s:4700   .text.find_pos:0000000000000000 $t
     /tmp/cccKVeLo.s:4708   .text.find_pos:0000000000000000 find_pos
     /tmp/cccKVeLo.s:4881   .text.find_pos:0000000000000080 $d
     /tmp/cccKVeLo.s:4887   .text.get_alpha_state:0000000000000000 $t
     /tmp/cccKVeLo.s:4895   .text.get_alpha_state:0000000000000000 get_alpha_state
     /tmp/cccKVeLo.s:4927   .text.get_alpha_state:0000000000000020 $d
     /tmp/cccKVeLo.s:4933   .rodata.process_keycode.str1.4:0000000000000000 $d
     /tmp/cccKVeLo.s:4943   .text.process_keycode:0000000000000000 $t
     /tmp/cccKVeLo.s:4951   .text.process_keycode:0000000000000000 process_keycode
     /tmp/cccKVeLo.s:5463   .text.process_keycode:0000000000000258 $d
                            *COM*:0000000000000004 OpCode
                            *COM*:0000000000000004 GoFast
                            *COM*:0000000000000004 OpCodeDisplayPending
                            *COM*:0000000000000004 WasDataEntry
     /tmp/cccKVeLo.s:5482   .text.process_keycode:0000000000000298 $t
     /tmp/cccKVeLo.s:5599   .text.process_keycode:0000000000000312 $d
     /tmp/cccKVeLo.s:5646   .text.process_keycode:000000000000036e $t
     /tmp/cccKVeLo.s:5854   .text.process_keycode:0000000000000448 $d
     /tmp/cccKVeLo.s:5864   .text.process_keycode:000000000000046c $t
     /tmp/cccKVeLo.s:6184   .text.process_keycode:00000000000005b4 $d
                            *COM*:0000000000000004 nd_opcode
     /tmp/cccKVeLo.s:6202   .text.process_keycode:00000000000005f0 $t
     /tmp/cccKVeLo.s:6334   .text.process_keycode:000000000000068a $d
     /tmp/cccKVeLo.s:6364   .text.process_keycode:00000000000006ac $d
     /tmp/cccKVeLo.s:6407   .text.process_keycode:0000000000000758 $t
     /tmp/cccKVeLo.s:6675   .text.process_keycode:0000000000000854 $d
ARM GAS  /tmp/cccKVeLo.s 			page 366


     /tmp/cccKVeLo.s:6684   .text.process_keycode:0000000000000878 $t
     /tmp/cccKVeLo.s:6774   .text.process_keycode:00000000000008cc $d
     /tmp/cccKVeLo.s:6793   .text.process_keycode:00000000000008f0 $t
     /tmp/cccKVeLo.s:6801   .text.process_keycode:00000000000008fe $d
     /tmp/cccKVeLo.s:6827   .text.process_keycode:0000000000000918 $t
     /tmp/cccKVeLo.s:6876   .text.process_keycode:0000000000000958 $d
     /tmp/cccKVeLo.s:6880   .text.process_keycode:0000000000000968 $t
     /tmp/cccKVeLo.s:7929   .text.process_keycode:0000000000000d0c $d
     /tmp/cccKVeLo.s:7946   .text.process_keycode:0000000000000d2c $t
     /tmp/cccKVeLo.s:8594   .text.process_keycode:0000000000000f5a $d
     /tmp/cccKVeLo.s:8927   .text.process_keycode:0000000000001094 $d
     /tmp/cccKVeLo.s:8947   .text.process_keycode:00000000000010e4 $t
     /tmp/cccKVeLo.s:8956   .text.process_keycode:00000000000010ec $d
     /tmp/cccKVeLo.s:8968   .text.process_keycode:000000000000110c $t
     /tmp/cccKVeLo.s:9160   .text.process_keycode:00000000000011a6 $d
     /tmp/cccKVeLo.s:9178   .text.process_keycode:00000000000011b8 $t
     /tmp/cccKVeLo.s:9688   .text.process_keycode:0000000000001358 $d
     /tmp/cccKVeLo.s:9722   .text.process_keycode:000000000000139c $t
     /tmp/cccKVeLo.s:9787   .text.process_keycode:00000000000013dc $d
     /tmp/cccKVeLo.s:9828   .text.process_keycode:00000000000013ec $t
     /tmp/cccKVeLo.s:9998   .text.process_keycode:000000000000148c $d
     /tmp/cccKVeLo.s:10033  .text.process_keycode:0000000000001514 $t
     /tmp/cccKVeLo.s:10397  .text.process_keycode:0000000000001618 $d
     /tmp/cccKVeLo.s:10565  .text.process_keycode:00000000000016e4 $d
     /tmp/cccKVeLo.s:10576  .text.process_keycode:0000000000001704 $t
     /tmp/cccKVeLo.s:11027  .text.process_keycode:00000000000018ec $d
     /tmp/cccKVeLo.s:11069  .text.process_keycode:0000000000001990 $t
     /tmp/cccKVeLo.s:11282  .text.process_keycode:0000000000001a74 $d
     /tmp/cccKVeLo.s:11288  .text.process_keycode:0000000000001a80 $t
     /tmp/cccKVeLo.s:12120  .text.process_keycode:0000000000001de0 $d
     /tmp/cccKVeLo.s:12131  .text.process_keycode:0000000000001de8 $t
     /tmp/cccKVeLo.s:12550  .text.process_keycode:0000000000001f8c $d
     /tmp/cccKVeLo.s:12561  .text.process_keycode_with_shift:0000000000000000 $t
     /tmp/cccKVeLo.s:12569  .text.process_keycode_with_shift:0000000000000000 process_keycode_with_shift
     /tmp/cccKVeLo.s:12777  .text.process_keycode_with_shift:000000000000008c $d
     /tmp/cccKVeLo.s:12794  .bss.was_paused.9650:0000000000000000 $d
     /tmp/cccKVeLo.s:12798  .bss.was_paused.9650:0000000000000000 was_paused.9650
     /tmp/cccKVeLo.s:12801  .rodata.alpha_arrows:0000000000000000 $d
     /tmp/cccKVeLo.s:12804  .rodata.alpha_arrows:0000000000000000 alpha_arrows
     /tmp/cccKVeLo.s:12807  .rodata.alpha_catalogue:0000000000000000 $d
     /tmp/cccKVeLo.s:12810  .rodata.alpha_catalogue:0000000000000000 alpha_catalogue
     /tmp/cccKVeLo.s:12814  .rodata.alpha_compares:0000000000000000 $d
     /tmp/cccKVeLo.s:12817  .rodata.alpha_compares:0000000000000000 alpha_compares
     /tmp/cccKVeLo.s:12820  .rodata.alpha_letters:0000000000000000 $d
     /tmp/cccKVeLo.s:12824  .rodata.alpha_letters:0000000000000000 alpha_letters
     /tmp/cccKVeLo.s:12830  .rodata.alpha_letters_lower:0000000000000000 $d
     /tmp/cccKVeLo.s:12834  .rodata.alpha_letters_lower:0000000000000000 alpha_letters_lower
     /tmp/cccKVeLo.s:12840  .rodata.alpha_subscripts:0000000000000000 $d
     /tmp/cccKVeLo.s:12843  .rodata.alpha_subscripts:0000000000000000 alpha_subscripts
     /tmp/cccKVeLo.s:12847  .rodata.alpha_symbols:0000000000000000 $d
     /tmp/cccKVeLo.s:12850  .rodata.alpha_symbols:0000000000000000 alpha_symbols
     /tmp/cccKVeLo.s:12853  .rodata.alphamap.9184:0000000000000000 $d
     /tmp/cccKVeLo.s:12857  .rodata.alphamap.9184:0000000000000000 alphamap.9184
     /tmp/cccKVeLo.s:12897  .rodata.amap.9175:0000000000000000 $d
     /tmp/cccKVeLo.s:12901  .rodata.amap.9175:0000000000000000 amap.9175
     /tmp/cccKVeLo.s:12919  .rodata.catalogue:0000000000000000 $d
     /tmp/cccKVeLo.s:12922  .rodata.catalogue:0000000000000000 catalogue
ARM GAS  /tmp/cccKVeLo.s 			page 367


     /tmp/cccKVeLo.s:12931  .rodata.catalogue_sizes.9448:0000000000000000 $d
     /tmp/cccKVeLo.s:12935  .rodata.catalogue_sizes.9448:0000000000000000 catalogue_sizes.9448
     /tmp/cccKVeLo.s:12938  .rodata.catalogues.9456:0000000000000000 $d
     /tmp/cccKVeLo.s:12942  .rodata.catalogues.9456:0000000000000000 catalogues.9456
     /tmp/cccKVeLo.s:13027  .rodata.cplx_catalogue:0000000000000000 cplx_catalogue
     /tmp/cccKVeLo.s:13482  .rodata.stats_catalogue:0000000000000000 stats_catalogue
     /tmp/cccKVeLo.s:13442  .rodata.prob_catalogue:0000000000000000 prob_catalogue
     /tmp/cccKVeLo.s:13044  .rodata.int_catalogue:0000000000000000 int_catalogue
     /tmp/cccKVeLo.s:13451  .rodata.prog_catalogue:0000000000000000 prog_catalogue
     /tmp/cccKVeLo.s:13461  .rodata.program_xfcn:0000000000000000 program_xfcn
     /tmp/cccKVeLo.s:13495  .rodata.test_catalogue:0000000000000000 test_catalogue
     /tmp/cccKVeLo.s:13091  .rodata.mode_catalogue:0000000000000000 mode_catalogue
     /tmp/cccKVeLo.s:13489  .rodata.sums_catalogue:0000000000000000 sums_catalogue
     /tmp/cccKVeLo.s:13084  .rodata.matrix_catalogue:0000000000000000 matrix_catalogue
     /tmp/cccKVeLo.s:12965  .rodata.cmap.9174:0000000000000000 $d
     /tmp/cccKVeLo.s:12969  .rodata.cmap.9174:0000000000000000 cmap.9174
     /tmp/cccKVeLo.s:12995  .rodata.conv_catalogue:0000000000000000 $d
     /tmp/cccKVeLo.s:12999  .rodata.conv_catalogue:0000000000000000 conv_catalogue
     /tmp/cccKVeLo.s:13006  .rodata.conv_mapping.9495:0000000000000000 $d
     /tmp/cccKVeLo.s:13010  .rodata.conv_mapping.9495:0000000000000000 conv_mapping.9495
     /tmp/cccKVeLo.s:13024  .rodata.cplx_catalogue:0000000000000000 $d
     /tmp/cccKVeLo.s:13031  .rodata.disp.9311:0000000000000000 $d
     /tmp/cccKVeLo.s:13035  .rodata.disp.9311:0000000000000000 disp.9311
     /tmp/cccKVeLo.s:13041  .rodata.int_catalogue:0000000000000000 $d
     /tmp/cccKVeLo.s:13051  .rodata.linear_key_map.9145:0000000000000000 $d
     /tmp/cccKVeLo.s:13055  .rodata.linear_key_map.9145:0000000000000000 linear_key_map.9145
     /tmp/cccKVeLo.s:13061  .rodata.linear_key_map.9149:0000000000000000 $d
     /tmp/cccKVeLo.s:13065  .rodata.linear_key_map.9149:0000000000000000 linear_key_map.9149
     /tmp/cccKVeLo.s:13071  .rodata.map.9161:0000000000000000 $d
     /tmp/cccKVeLo.s:13075  .rodata.map.9161:0000000000000000 map.9161
     /tmp/cccKVeLo.s:13081  .rodata.matrix_catalogue:0000000000000000 $d
     /tmp/cccKVeLo.s:13088  .rodata.mode_catalogue:0000000000000000 $d
     /tmp/cccKVeLo.s:13097  .rodata.op_map.9228:0000000000000000 $d
     /tmp/cccKVeLo.s:13101  .rodata.op_map.9228:0000000000000000 op_map.9228
     /tmp/cccKVeLo.s:13138  .rodata.op_map.9251:0000000000000000 $d
     /tmp/cccKVeLo.s:13142  .rodata.op_map.9251:0000000000000000 op_map.9251
     /tmp/cccKVeLo.s:13214  .rodata.op_map.9274:0000000000000000 $d
     /tmp/cccKVeLo.s:13218  .rodata.op_map.9274:0000000000000000 op_map.9274
     /tmp/cccKVeLo.s:13255  .rodata.op_map.9284:0000000000000000 $d
     /tmp/cccKVeLo.s:13259  .rodata.op_map.9284:0000000000000000 op_map.9284
     /tmp/cccKVeLo.s:13401  .rodata.op_map.9296:0000000000000000 $d
     /tmp/cccKVeLo.s:13405  .rodata.op_map.9296:0000000000000000 op_map.9296
     /tmp/cccKVeLo.s:13410  .rodata.op_map.9310:0000000000000000 $d
     /tmp/cccKVeLo.s:13414  .rodata.op_map.9310:0000000000000000 op_map.9310
     /tmp/cccKVeLo.s:13422  .rodata.op_map2.9252:0000000000000000 $d
     /tmp/cccKVeLo.s:13426  .rodata.op_map2.9252:0000000000000000 op_map2.9252
     /tmp/cccKVeLo.s:13432  .rodata.opcode_breaks:0000000000000000 $d
     /tmp/cccKVeLo.s:13436  .rodata.opcode_breaks:0000000000000000 opcode_breaks
     /tmp/cccKVeLo.s:13439  .rodata.prob_catalogue:0000000000000000 $d
     /tmp/cccKVeLo.s:13448  .rodata.prog_catalogue:0000000000000000 $d
     /tmp/cccKVeLo.s:13458  .rodata.program_xfcn:0000000000000000 $d
     /tmp/cccKVeLo.s:13472  .rodata.smap.9176:0000000000000000 $d
     /tmp/cccKVeLo.s:13476  .rodata.smap.9176:0000000000000000 smap.9176
     /tmp/cccKVeLo.s:13479  .rodata.stats_catalogue:0000000000000000 $d
     /tmp/cccKVeLo.s:13486  .rodata.sums_catalogue:0000000000000000 $d
     /tmp/cccKVeLo.s:13492  .rodata.test_catalogue:0000000000000000 $d
     /tmp/cccKVeLo.s:2075   .text.process_arg:0000000000000117 $d
ARM GAS  /tmp/cccKVeLo.s 			page 368


     /tmp/cccKVeLo.s:2075   .text.process_arg:0000000000000118 $t
     /tmp/cccKVeLo.s:6353   .text.process_keycode:000000000000069d $d
     /tmp/cccKVeLo.s:6353   .text.process_keycode:000000000000069e $t
     /tmp/cccKVeLo.s:8629   .text.process_keycode:0000000000000f7d $d
     /tmp/cccKVeLo.s:8629   .text.process_keycode:0000000000000f7e $t
     /tmp/cccKVeLo.s:10438  .text.process_keycode:0000000000001641 $d
     /tmp/cccKVeLo.s:10438  .text.process_keycode:0000000000001642 $t

UNDEFINED SYMBOLS
sizeLIB
main_ram
StateWhileOn
find_label_from
getprog
do_inc
PcWrapped
process_cmdline
shift_down
do_dec
is_bad_cmdline
argcmds
local_regs_rarg
num_arg_digits
global_regs_rarg
int_base
process_cmdline_set_lift
display
is_dblmode
IntMaxWindow
xset
update_program_bounds
set_lift
ShowRegister
remap_chars
catcmd
keyticks
xeq_init_contexts
is_dot
xeq
xeqprog
dot
Pause
JustStopped
Running
ShowRPN
JustDisplayed
DispMsg
xeq_xrom
is_key_pressed
set_pc
set_running_off
xeq_sst_bst
stoprog
clr_dot
finish_RPN
message
find_char
ARM GAS  /tmp/cccKVeLo.s 			page 369


delprog
prt
scopy_char
TraceBuffer
clpall
clrprog
reset
clrall
set_last_menu
display_current_menu
find_user_pc
cmdgtocommon
global_regs
local_regs
set_menu
alen

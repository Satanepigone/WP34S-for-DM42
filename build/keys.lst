ARM GAS  /tmp/ccihcwFT.s 			page 1


   1              		.arch armv7e-m
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"keys.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.gtodot_digit,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	gtodot_digit:
  27              	.LVL0:
  28              	.LFB25:
  29              		.file 1 "src/keys.c"
   1:src/keys.c    **** /* This file is part of 34S.
   2:src/keys.c    ****  * 
   3:src/keys.c    ****  * 34S is free software: you can redistribute it and/or modify
   4:src/keys.c    ****  * it under the terms of the GNU General Public License as published by
   5:src/keys.c    ****  * the Free Software Foundation, either version 3 of the License, or
   6:src/keys.c    ****  * (at your option) any later version.
   7:src/keys.c    ****  * 
   8:src/keys.c    ****  * 34S is distributed in the hope that it will be useful,
   9:src/keys.c    ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:src/keys.c    ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:src/keys.c    ****  * GNU General Public License for more details.
  12:src/keys.c    ****  * 
  13:src/keys.c    ****  * You should have received a copy of the GNU General Public License
  14:src/keys.c    ****  * along with 34S.  If not, see <http://www.gnu.org/licenses/>.
  15:src/keys.c    ****  */
  16:src/keys.c    **** 
  17:src/keys.c    **** 
  18:src/keys.c    **** #ifdef DM42
  19:src/keys.c    **** #include "dmcp.h"
  20:src/keys.c    **** #endif
  21:src/keys.c    **** 
  22:src/keys.c    **** #define DM42SAFE
  23:src/keys.c    **** 
  24:src/keys.c    **** #include "features.h"
  25:src/keys.c    **** #include "xeq.h"
  26:src/keys.c    **** #include "keys.h"
  27:src/keys.c    **** #include "display.h"
  28:src/keys.c    **** #include "lcd.h"
  29:src/keys.c    **** #include "int.h"
ARM GAS  /tmp/ccihcwFT.s 			page 2


  30:src/keys.c    **** #include "consts.h"
  31:src/keys.c    **** #include "storage.h"
  32:src/keys.c    **** #include "stats.h"
  33:src/keys.c    **** #include "catalogues.h"
  34:src/keys.c    **** #ifndef DM42
  35:src/keys.c    **** #include "printer.h"
  36:src/keys.c    **** #endif
  37:src/keys.c    **** #undef DM42SAFE
  38:src/keys.c    **** 
  39:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
  40:src/keys.c    **** extern void changed_catalog_state();
  41:src/keys.c    **** #endif
  42:src/keys.c    **** 
  43:src/keys.c    **** #define STATE_UNFINISHED	(OP_SPEC | OP_UNFINISHED)
  44:src/keys.c    **** #define STATE_BACKSPACE		(OP_SPEC | OP_BACKSPACE)
  45:src/keys.c    **** #define STATE_SST		(OP_SPEC | OP_SST)
  46:src/keys.c    **** #define STATE_BST		(OP_SPEC | OP_BST)
  47:src/keys.c    **** #define STATE_RUNNING		(OP_SPEC | OP_RUNNING)
  48:src/keys.c    **** #define STATE_IGNORE		(OP_SPEC | OP_IGNORE)
  49:src/keys.c    **** #define STATE_WINDOWLEFT	(OP_SPEC | OP_WINDOWLEFT)
  50:src/keys.c    **** #define STATE_WINDOWRIGHT	(OP_SPEC | OP_WINDOWRIGHT)
  51:src/keys.c    **** //#define STATE_SHOW		(OP_SPEC | OP_SHOW)
  52:src/keys.c    **** 
  53:src/keys.c    **** /* Define this if the key codes map rows sequentially */
  54:src/keys.c    **** 
  55:src/keys.c    **** #define TEST_EQ		0
  56:src/keys.c    **** #define TEST_NE		1
  57:src/keys.c    **** #define TEST_LT		2
  58:src/keys.c    **** #define TEST_LE		3
  59:src/keys.c    **** #define TEST_GT		4
  60:src/keys.c    **** #define TEST_GE		5
  61:src/keys.c    **** 
  62:src/keys.c    **** enum confirmations {
  63:src/keys.c    **** 	// Apart from the first of these, these must be in the same
  64:src/keys.c    **** 	// order as the opcodes in xeq.h: OP_CLALL, OP_RESET, OP_CLPROG, OP_CLPALL
  65:src/keys.c    **** 	confirm_none=0, confirm_clall, confirm_reset, confirm_clprog, confirm_clpall
  66:src/keys.c    **** };
  67:src/keys.c    **** 
  68:src/keys.c    **** FLAG WasDataEntry;
  69:src/keys.c    **** 
  70:src/keys.c    **** /* Local data to this module */
  71:src/keys.c    **** unsigned int OpCode;
  72:src/keys.c    **** FLAG OpCodeDisplayPending;
  73:src/keys.c    **** FLAG GoFast;
  74:src/keys.c    **** FLAG NonProgrammable;
  75:src/keys.c    **** 
  76:src/keys.c    **** /*
  77:src/keys.c    ****  *  Needed before definition
  78:src/keys.c    ****  */ 
  79:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end);
  80:src/keys.c    **** 
  81:src/keys.c    **** unsigned int nd_opcode;
  82:src/keys.c    **** 
  83:src/keys.c    **** /*
  84:src/keys.c    ****  *  Return the shift state
  85:src/keys.c    ****  */
  86:src/keys.c    **** enum shifts cur_shift(void) {
ARM GAS  /tmp/ccihcwFT.s 			page 3


  87:src/keys.c    **** 	enum shifts s = shift_down();
  88:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
  89:src/keys.c    **** }
  90:src/keys.c    **** 
  91:src/keys.c    **** /*
  92:src/keys.c    ****  *  Set new shift state, return previous state
  93:src/keys.c    ****  */
  94:src/keys.c    **** static enum shifts set_shift(enum shifts shift) {
  95:src/keys.c    **** 	enum shifts r = cur_shift();
  96:src/keys.c    **** 	State2.shifts = shift;
  97:src/keys.c    **** 	//	State2.alpha_pos = 0;
  98:src/keys.c    **** 	return r;
  99:src/keys.c    **** }
 100:src/keys.c    **** 
 101:src/keys.c    **** /*
 102:src/keys.c    ****  *  Clear shift state and return previous state
 103:src/keys.c    ****  */
 104:src/keys.c    **** enum shifts reset_shift(void) {
 105:src/keys.c    **** 	return set_shift(SHIFT_N);
 106:src/keys.c    **** }
 107:src/keys.c    **** 
 108:src/keys.c    **** /*
 109:src/keys.c    ****  *  Toggle shift state
 110:src/keys.c    ****  */
 111:src/keys.c    **** static void toggle_shift(enum shifts shift) {
 112:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 113:src/keys.c    **** }
 114:src/keys.c    **** 
 115:src/keys.c    **** 
 116:src/keys.c    **** /*
 117:src/keys.c    ****  * Mapping from the key code to a linear index
 118:src/keys.c    ****  * The trick is to move the shifts and the holes in the map out of the way
 119:src/keys.c    ****  */
 120:src/keys.c    **** #ifdef DM42
 121:src/keys.c    **** static int keycode_to_linear_for_alpha(const keycode c)
 122:src/keys.c    **** {
 123:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 124:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 125:src/keys.c    **** 		 6,  7,  8,  9, 10, 11,   // K10 - K15
 126:src/keys.c    **** 		 12, 13, 14, 15, 16,  0,   // K20 - K24
 127:src/keys.c    **** 		17, 18, 19, 20, 21,  0,   // K30 - K34
 128:src/keys.c    **** 		22, 23, 24, 25, 26,  0,   // K40 - K44
 129:src/keys.c    **** 		27, 28, 29, 30, 31,  0,   // K50 - K54
 130:src/keys.c    **** 		32, 33, 34, 35, 36,       // K60 - K64
 131:src/keys.c    **** 		37, 37, 37, 37, 37, 37       // K_F, G, H, ARROW, CMPLX, NOP
 132:src/keys.c    **** 	};
 133:src/keys.c    **** 	return linear_key_map[c];
 134:src/keys.c    **** }
 135:src/keys.c    **** 
 136:src/keys.c    **** static int keycode_to_linear(const keycode c)
 137:src/keys.c    **** {
 138:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 139:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 140:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 141:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 142:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 143:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
ARM GAS  /tmp/ccihcwFT.s 			page 4


 144:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 145:src/keys.c    **** 		29, 30, 31, 32, 33,       // K60 - K64
 146:src/keys.c    **** 		34, 34, 34,  4,  5, 34,        // K_F, G, H, ARROW, CMPLX, NOP
 147:src/keys.c    **** 	};
 148:src/keys.c    **** 	return linear_key_map[c];
 149:src/keys.c    **** }
 150:src/keys.c    **** #else
 151:src/keys.c    **** static int keycode_to_linear(const keycode c)
 152:src/keys.c    **** {
 153:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 ] = {
 154:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 155:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 156:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 157:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 158:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 159:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 160:src/keys.c    **** 		29, 30, 31, 32, 33        // K60 - K64
 161:src/keys.c    **** 	};
 162:src/keys.c    **** 	return linear_key_map[c];
 163:src/keys.c    **** }
 164:src/keys.c    **** #endif
 165:src/keys.c    **** /*
 166:src/keys.c    ****  * Mapping from the key code to a row column code ('A'=11 to '+'=75)
 167:src/keys.c    ****  * Used in KEY? and for shorthand addressing
 168:src/keys.c    ****  */
 169:src/keys.c    **** int keycode_to_row_column(const int c)
 170:src/keys.c    **** {
 171:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 172:src/keys.c    **** }
 173:src/keys.c    **** 
 174:src/keys.c    **** /*
 175:src/keys.c    ****  * Mapping from a row column code ('A'=11 to '+'=75) to the key code
 176:src/keys.c    ****  * Used in PUTK and KTYPE.
 177:src/keys.c    ****  */
 178:src/keys.c    **** 
 179:src/keys.c    **** int row_column_to_keycode(const int c)
 180:src/keys.c    **** {
 181:src/keys.c    **** 	int row = c / 10 - 1;
 182:src/keys.c    **** 	int col = c % 10 - 1;
 183:src/keys.c    **** 
 184:src/keys.c    **** 	if (row < 0 || row > 6 || col > 5 - (row >= 2))
 185:src/keys.c    **** 		return -1;
 186:src/keys.c    **** 	return row * 6 + col;
 187:src/keys.c    **** }
 188:src/keys.c    **** 
 189:src/keys.c    **** /*
 190:src/keys.c    ****  *  Mapping from a key code to a digit from 0 to 9 or to a register address
 191:src/keys.c    ****  *  Bit seven is set if the key cannot be used as a label shortcut
 192:src/keys.c    ****  */
 193:src/keys.c    **** // Decision to make here about whether the top row can be used as shortcuts.
 194:src/keys.c    **** // Also, which other keys can / can't be used as shortcuts?
 195:src/keys.c    **** // Registers I, j, K, L will move with the new alpha layout.
 196:src/keys.c    **** 
 197:src/keys.c    **** #define NO_REG 0x7f
 198:src/keys.c    **** #define NO_SHORT 0x80
 199:src/keys.c    **** #ifdef DM42
 200:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
ARM GAS  /tmp/ccihcwFT.s 			page 5


 201:src/keys.c    **** {
 202:src/keys.c    ****   static const unsigned char map[] = {
 203:src/keys.c    ****     // K00 - K05
 204:src/keys.c    ****     NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 205:src/keys.c    ****     NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 206:src/keys.c    ****     NO_SHORT | NO_REG,   NO_REG,
 207:src/keys.c    ****     // K10 - K15
 208:src/keys.c    ****     NO_REG, NO_REG, regI_idx, regJ_idx, regK_idx, regL_idx, 
 209:src/keys.c    ****     // K20 - K24
 210:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 211:src/keys.c    ****     // K30 - K34
 212:src/keys.c    ****     NO_REG, 7, 8, 9, NO_REG,
 213:src/keys.c    ****     // K40 - K44
 214:src/keys.c    ****     NO_REG, NO_SHORT | regT_idx, 5, 6, NO_REG,
 215:src/keys.c    ****     // K50 - K54
 216:src/keys.c    ****     NO_REG, NO_SHORT | regX_idx, NO_SHORT | regY_idx, NO_SHORT | regZ_idx, NO_REG,
 217:src/keys.c    ****     // K60 - K64
 218:src/keys.c    ****     NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE, NO_REG, NO_REG,
 219:src/keys.c    ****     // Shifts etc. - K_F, K_G, K_H, K_ARROW, K_CMPLX. K_NOP
 220:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 221:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, 
 222:src/keys.c    ****   };
 223:src/keys.c    **** 
 224:src/keys.c    ****   return (unsigned int) map[keycode_to_linear_for_alpha(c)];
 225:src/keys.c    **** }
 226:src/keys.c    **** #else
 227:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 228:src/keys.c    **** {
 229:src/keys.c    ****   static const unsigned char map[] = {
 230:src/keys.c    **** 		// K00 - K05
 231:src/keys.c    **** 		NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 232:src/keys.c    **** 		NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 233:src/keys.c    **** 		NO_SHORT | NO_REG,   NO_REG,
 234:src/keys.c    **** 		// K10 - K12
 235:src/keys.c    **** 		NO_REG, NO_REG, regI_idx, 
 236:src/keys.c    **** 		// K20 - K24
 237:src/keys.c    **** 		NO_SHORT | NO_REG, regJ_idx, regK_idx, regL_idx, NO_SHORT | NO_REG,
 238:src/keys.c    **** 		// K30 - K34
 239:src/keys.c    **** 		NO_REG, 7, 8, 9, NO_REG,
 240:src/keys.c    **** 		// K40 - K44
 241:src/keys.c    **** 		NO_REG, 4, 5, 6, regT_idx,
 242:src/keys.c    **** 		// K50 - K54
 243:src/keys.c    **** 		NO_REG, 1, 2, 3, NO_REG,
 244:src/keys.c    **** 		// K60 - K63
 245:src/keys.c    **** 		NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE,
 246:src/keys.c    **** 		regY_idx, regZ_idx,
 247:src/keys.c    **** 		// Shifts, etc
 248:src/keys.c    **** 		NO_REG
 249:src/keys.c    **** 	};
 250:src/keys.c    **** 
 251:src/keys.c    **** 	return (unsigned int) map[keycode_to_linear(c)];
 252:src/keys.c    **** }
 253:src/keys.c    **** #endif
 254:src/keys.c    **** /*
 255:src/keys.c    ****  *  Mapping of a keycode and shift state to a catalogue number
 256:src/keys.c    ****  */
 257:src/keys.c    **** static enum catalogues keycode_to_cat(const keycode c, enum shifts shift)
ARM GAS  /tmp/ccihcwFT.s 			page 6


 258:src/keys.c    **** {
 259:src/keys.c    ****   enum catalogues cat = CATALOGUE_NONE;
 260:src/keys.c    ****   int i, col, max;
 261:src/keys.c    ****   const struct _map {
 262:src/keys.c    ****     unsigned char key, cat[3];
 263:src/keys.c    ****   } *cp;
 264:src/keys.c    **** 
 265:src/keys.c    ****   // Common to both alpha mode and normal mode is the programming X.FCN catalogue
 266:src/keys.c    ****   if (c == K53 && shift == SHIFT_H && ! State2.runmode && ! State2.cmplx && ! State2.multi)
 267:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 268:src/keys.c    **** 
 269:src/keys.c    ****   if (! State2.alphas && ! State2.multi) {
 270:src/keys.c    ****     /*
 271:src/keys.c    ****      *  Normal processing - Not alpha mode
 272:src/keys.c    ****      */
 273:src/keys.c    ****     static const struct _map cmap[] = {
 274:src/keys.c    **** #ifdef DM42
 275:src/keys.c    ****       { K04, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 276:src/keys.c    **** #else
 277:src/keys.c    ****       { K_ARROW, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 278:src/keys.c    **** #endif
 279:src/keys.c    ****       { K05,     { CATALOGUE_MODE,      CATALOGUE_MODE,      CATALOGUE_MODE          } },
 280:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
 281:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_USER          } },
 282:src/keys.c    **** #else
 283:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_LABELS        } },
 284:src/keys.c    **** #endif
 285:src/keys.c    ****       { K20,     { CATALOGUE_CONST,     CATALOGUE_NONE,      CATALOGUE_COMPLEX_CONST } },
 286:src/keys.c    ****       { K41,     { CATALOGUE_PROB,      CATALOGUE_NONE,      CATALOGUE_PROB          } },
 287:src/keys.c    ****       { K42,     { CATALOGUE_STATS,     CATALOGUE_NONE,      CATALOGUE_STATS         } },
 288:src/keys.c    ****       { K43,     { CATALOGUE_SUMS,      CATALOGUE_NONE,      CATALOGUE_SUMS          } },
 289:src/keys.c    ****       { K44,     { CATALOGUE_MATRIX,    CATALOGUE_NONE,      CATALOGUE_MATRIX        } },
 290:src/keys.c    ****       { K50,     { CATALOGUE_STATUS,    CATALOGUE_STATUS,    CATALOGUE_STATUS        } },
 291:src/keys.c    ****       { K51,     { CATALOGUE_TEST,      CATALOGUE_TEST,      CATALOGUE_TEST          } },
 292:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
 293:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_INTERNAL      } },
 294:src/keys.c    **** #else
 295:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_PROG          } },
 296:src/keys.c    **** #endif
 297:src/keys.c    ****       { K53,     { CATALOGUE_NORMAL,    CATALOGUE_INT,       CATALOGUE_COMPLEX       } },
 298:src/keys.c    ****     };
 299:src/keys.c    **** 
 300:src/keys.c    ****     if (c == K60 && shift == SHIFT_G) {
 301:src/keys.c    ****       /*
 302:src/keys.c    ****        *  SHOW starts register browser
 303:src/keys.c    ****        */
 304:src/keys.c    ****       return CATALOGUE_REGISTERS;
 305:src/keys.c    ****     }
 306:src/keys.c    **** #if 0
 307:src/keys.c    ****     // conflicts with c# 002 and c# 003
 308:src/keys.c    ****     if ((c == K52 || c == K53) && shift == SHIFT_N && State2.cmplx && State2.catalogue == CATALOGUE
 309:src/keys.c    ****       /*
 310:src/keys.c    ****        *  Shorthand to complex P.FCN & X.FCN - h may be omitted
 311:src/keys.c    ****        */
 312:src/keys.c    ****       shift = SHIFT_H;
 313:src/keys.c    ****     }
 314:src/keys.c    **** #endif
ARM GAS  /tmp/ccihcwFT.s 			page 7


 315:src/keys.c    ****     if (shift != SHIFT_H) {
 316:src/keys.c    ****       /*
 317:src/keys.c    ****        *  All standard catalogues are on h-shifted keys
 318:src/keys.c    ****        */
 319:src/keys.c    ****       return CATALOGUE_NONE;
 320:src/keys.c    ****     }
 321:src/keys.c    **** 
 322:src/keys.c    ****     /*
 323:src/keys.c    ****      *  Prepare search
 324:src/keys.c    ****      */
 325:src/keys.c    ****     cp = cmap;
 326:src/keys.c    **** #ifndef WINGUI
 327:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx || shift_down() == SHIFT_H ? 2 : 0;
 328:src/keys.c    **** #else
 329:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx ? 2 : 0;
 330:src/keys.c    **** #endif
 331:src/keys.c    ****     max = sizeof(cmap) / sizeof(cmap[0]);
 332:src/keys.c    ****   }
 333:src/keys.c    ****   else {
 334:src/keys.c    ****     /*
 335:src/keys.c    ****      *  All the alpha catalogues go here
 336:src/keys.c    ****      */
 337:src/keys.c    **** #ifdef DM42
 338:src/keys.c    ****     static const struct _map amap[] = {
 339:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 340:src/keys.c    ****       { K05, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 341:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 342:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 343:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 344:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 345:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 346:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 347:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 348:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 349:src/keys.c    ****     };
 350:src/keys.c    **** #else
 351:src/keys.c    ****     static const struct _map amap[] = {
 352:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 353:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 354:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 355:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 356:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 357:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 358:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 359:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 360:src/keys.c    ****     };
 361:src/keys.c    **** #endif
 362:src/keys.c    ****     static const char smap[] = { 0, 1, 0, 2 }; // Map shifts to columns;
 363:src/keys.c    **** 
 364:src/keys.c    ****     /*
 365:src/keys.c    ****      *  Prepare search
 366:src/keys.c    ****      */
 367:src/keys.c    ****     cp = amap;
 368:src/keys.c    ****     col = smap[shift];
 369:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 370:src/keys.c    ****   }
 371:src/keys.c    **** 
ARM GAS  /tmp/ccihcwFT.s 			page 8


 372:src/keys.c    ****   /*
 373:src/keys.c    ****    *  Search the key in one of the tables
 374:src/keys.c    ****    */
 375:src/keys.c    ****   for (i = 0; i < max; ++i, ++cp) {
 376:src/keys.c    ****     if (cp->key == c) {
 377:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 378:src/keys.c    ****       break;
 379:src/keys.c    ****     }
 380:src/keys.c    ****   }
 381:src/keys.c    ****   if (State2.multi && (cat < CATALOGUE_ALPHA_SYMBOLS || cat > CATALOGUE_ALPHA_SUBSCRIPTS)) {
 382:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 383:src/keys.c    ****     cat = CATALOGUE_NONE;
 384:src/keys.c    ****   }
 385:src/keys.c    ****   return cat;
 386:src/keys.c    **** }
 387:src/keys.c    **** 
 388:src/keys.c    **** #ifdef DM42
 389:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 390:src/keys.c    **** {
 391:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 392:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 393:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 394:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 395:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 396:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 397:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 398:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 399:src/keys.c    **** 
 400:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 401:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 402:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 403:src/keys.c    **** 		{ 'J',  0257, 0000, 0000, 'j',  0000,  },  // K13
 404:src/keys.c    **** 		{ 'K',  0000, 'K',  0000, 'k',  0251,  },  // K14
 405:src/keys.c    **** 		{ 'L',  0000, 0212, 0000, 'l',  0252,  },  // K15
 406:src/keys.c    **** 
 407:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 408:src/keys.c    **** 		{ 'M',  0000, 0253, 0027, 'm',  0253,  },  // K21
 409:src/keys.c    **** 		{ 'N',  0010, 'N',  0225, 'n',  0254,  },  // K22
 410:src/keys.c    **** 		{ 'O',  0000, 0227, 0257, 'o',  0267,  },  // K23
 411:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 412:src/keys.c    **** 
 413:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 414:src/keys.c    **** 		{ 'P',  '7',  0217, '&',  'p',  0257,  },  // K31
 415:src/keys.c    **** 		{ 'Q',  '8',  0000, '|',  'q',  0000,  },  // K32
 416:src/keys.c    **** 		{ 'R',  '9',  'R',  0013, 'r',  0260,  },  // K33
 417:src/keys.c    **** 		{ 'S',  '/',  0221, '\\', 's',  0261,  },  // K34
 418:src/keys.c    **** 
 419:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 420:src/keys.c    **** 		{ 'T',  '4',  'T',  0000, 't',  0262,  },  // K41
 421:src/keys.c    **** 		{ 'U',  '5',  0000, 0000, 'u',  0000,  },  // K42
 422:src/keys.c    **** 		{ 'V',  '6',  0000, 0000, 'v',  0000,  },  // K43
 423:src/keys.c    **** 		{ 'W', 0034,  0000, 0000, 'w',  0000,  },  // K44
 424:src/keys.c    **** 
 425:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 426:src/keys.c    **** 		{ 'X',  '1',  0215, 0000, 'x',  0255,  },  // K51
 427:src/keys.c    **** 		{ 'Y',  '2',  'Y',  0000, 'y',  0263,  },  // K52
 428:src/keys.c    **** 		{ 'Z',  '3',  'Z',  0000, 'z',  0245,  },  // K53
ARM GAS  /tmp/ccihcwFT.s 			page 9


 429:src/keys.c    **** 		{ '-',  '(',  ')',  0000, 0000, 0000,  },  // K54
 430:src/keys.c    **** 
 431:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K60
 432:src/keys.c    **** 		{ ':',  '0',  0207, ' ',  ';',  0247,  },  // K61
 433:src/keys.c    **** 		{ '.',  '.',  0226, 0000, '.',  0266,  },  // K62
 434:src/keys.c    **** 		{ '?',  0000, 0041, 0000, '?',  0000,  },  // K63
 435:src/keys.c    **** 		{ ' ',  '+',  '=',  0000, ' ',  ' ',   },  // K64
 436:src/keys.c    **** 
 437:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // shifts etc.
 438:src/keys.c    **** 	};
 439:src/keys.c    **** 	if (State2.alphashift) {
 440:src/keys.c    **** 		if (shift == SHIFT_N)
 441:src/keys.c    **** 			shift = SHIFT_LC_N;
 442:src/keys.c    **** 		else if (shift == SHIFT_G)
 443:src/keys.c    **** 			shift = SHIFT_LC_G;
 444:src/keys.c    **** 	}
 445:src/keys.c    **** 	return alphamap[keycode_to_linear_for_alpha(c)][shift];
 446:src/keys.c    **** }
 447:src/keys.c    **** #else
 448:src/keys.c    **** /*
 449:src/keys.c    ****  * Mapping from key position to alpha in the four key planes plus
 450:src/keys.c    ****  * the two lower case planes.
 451:src/keys.c    ****  */
 452:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 453:src/keys.c    **** {
 454:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 455:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 456:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 457:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 458:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 459:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 460:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 461:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 462:src/keys.c    **** 
 463:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 464:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 465:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 466:src/keys.c    **** 
 467:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 468:src/keys.c    **** 		{ 'J',  '(',  ')',  0027, 'j',  ')',   },  // K21
 469:src/keys.c    **** 		{ 'K',  0010, 'K',  0225, 'k',  0251,  },  // K22
 470:src/keys.c    **** 		{ 'L',  0000, 0212, 0257, 'l',  0252,  },  // K23
 471:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 472:src/keys.c    **** 
 473:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 474:src/keys.c    **** 		{ 'M',  '7',  'M',  '&',  'm',  0253,  },  // K31
 475:src/keys.c    **** 		{ 'N',  '8',  'N',  '|',  'n',  0254,  },  // K32
 476:src/keys.c    **** 		{ 'O',  '9',  0227, 0013, 'o',  0267,  },  // K33
 477:src/keys.c    **** 		{ 'P',  '/',  0217, '\\', 'p',  0257,  },  // K34
 478:src/keys.c    **** 
 479:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 480:src/keys.c    **** 		{ 'Q',  '4',  0000, 0000, 'q',  0000,  },  // K41
 481:src/keys.c    **** 		{ 'R',  '5',  'R',  0000, 'r',  0260,  },  // K42
 482:src/keys.c    **** 		{ 'S',  '6',  0221, 0000, 's',  0261,  },  // K43
 483:src/keys.c    **** 		{ 'T',  0034, 'T',  0000, 't',  0262,  },  // K44
 484:src/keys.c    **** 
 485:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
ARM GAS  /tmp/ccihcwFT.s 			page 10


 486:src/keys.c    **** 		{ '1',  '1',  0207, 0000, '1',  0247,  },  // K51
 487:src/keys.c    **** 		{ 'U',  '2',  0000, 0000, 'u',  0000,  },  // K52
 488:src/keys.c    **** 		{ 'V',  '3',  0000, 0000, 'v',  0000,  },  // K53
 489:src/keys.c    **** 		{ 'W',  0034, 0000, 0000, 'w',  0000,  },  // K54
 490:src/keys.c    **** 
 491:src/keys.c    **** 		{ 0000, 0222, 0000, 0000, 0000, 0000,  },  // K60
 492:src/keys.c    **** 		{ '0',  '0',  0226, ' ',  '0',  0266,  },  // K61
 493:src/keys.c    **** 		{ 'X',  '.',  0215, 0000, 'x',  0255,  },  // K62
 494:src/keys.c    **** 		{ 'Y',  0000, 'Y',  0000, 'y',  0263,  },  // K63
 495:src/keys.c    **** 		{ 'Z',  '+',  'Z',  0000, 'z',  0245,  },  // K64
 496:src/keys.c    **** 	};
 497:src/keys.c    **** 	if (State2.alphashift) {
 498:src/keys.c    **** 		if (shift == SHIFT_N)
 499:src/keys.c    **** 			shift = SHIFT_LC_N;
 500:src/keys.c    **** 		else if (shift == SHIFT_G)
 501:src/keys.c    **** 			shift = SHIFT_LC_G;
 502:src/keys.c    **** 	}
 503:src/keys.c    **** 	return alphamap[keycode_to_linear(c)][shift];
 504:src/keys.c    **** }
 505:src/keys.c    **** #endif
 506:src/keys.c    **** static void init_arg(const enum rarg base) {
 507:src/keys.c    **** 	if (is_bad_cmdline())
 508:src/keys.c    **** 		return;
 509:src/keys.c    **** 	CmdBase = base;
 510:src/keys.c    **** 	State2.ind = 0;
 511:src/keys.c    **** 	State2.digval = 0;
 512:src/keys.c    **** 	State2.numdigit = 0;
 513:src/keys.c    **** 	State2.rarg = 1;
 514:src/keys.c    **** 	State2.dot = 0;
 515:src/keys.c    **** 	State2.local = 0;
 516:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 517:src/keys.c    **** }
 518:src/keys.c    **** 
 519:src/keys.c    **** static void init_cat(enum catalogues cat) {
 520:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 521:src/keys.c    **** 		// Save last catalogue for a later restore
 522:src/keys.c    **** 		State.last_cat = State2.catalogue;
 523:src/keys.c    **** 		CmdLineLength = 0;
 524:src/keys.c    **** 	}
 525:src/keys.c    **** 	process_cmdline();
 526:src/keys.c    **** 
 527:src/keys.c    **** 	State2.labellist = 0;
 528:src/keys.c    **** 	State2.registerlist = 0;
 529:src/keys.c    **** 	State2.status = 0;
 530:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 531:src/keys.c    **** 
 532:src/keys.c    **** 	switch (cat) {
 533:src/keys.c    **** 	case CATALOGUE_LABELS:
 534:src/keys.c    **** 		// Label browser
 535:src/keys.c    **** 		State2.labellist = 1;
 536:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 537:src/keys.c    **** 		break;
 538:src/keys.c    **** 	
 539:src/keys.c    **** 	case CATALOGUE_REGISTERS:
 540:src/keys.c    **** 		// Register browser
 541:src/keys.c    **** 		State2.registerlist = 1;
 542:src/keys.c    **** 		State2.digval = regX_idx;
ARM GAS  /tmp/ccihcwFT.s 			page 11


 543:src/keys.c    **** 		State2.digval2 = 0;
 544:src/keys.c    **** 		break;
 545:src/keys.c    **** 
 546:src/keys.c    **** 	case CATALOGUE_STATUS:
 547:src/keys.c    **** 		// Flag browser
 548:src/keys.c    **** 		State2.status = 1;
 549:src/keys.c    **** 		break;
 550:src/keys.c    **** 
 551:src/keys.c    **** 	default:
 552:src/keys.c    **** 		// Normal catalogue
 553:src/keys.c    **** 		State2.catalogue = cat;
 554:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 555:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 556:src/keys.c    **** 			// Different catalogue, reset position
 557:src/keys.c    **** 			State.catpos = 0;
 558:src/keys.c    **** 		}
 559:src/keys.c    **** 	}
 560:src/keys.c    **** 	reset_shift();
 561:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 562:src/keys.c    **** 	changed_catalog_state();
 563:src/keys.c    **** #endif
 564:src/keys.c    **** }
 565:src/keys.c    **** 
 566:src/keys.c    **** /*
 567:src/keys.c    ****  *  Reset the internal state to a sane default
 568:src/keys.c    ****  */
 569:src/keys.c    **** void init_state(void) {
 570:src/keys.c    **** #ifndef REALBUILD
 571:src/keys.c    **** 	unsigned int a = State2.flags;
 572:src/keys.c    **** 	unsigned int b = State2.trace;
 573:src/keys.c    **** #else
 574:src/keys.c    **** 	FLAG t = TestFlag;
 575:src/keys.c    **** #endif
 576:src/keys.c    **** 	int v = Voltage;
 577:src/keys.c    **** 	int k = LastKey;
 578:src/keys.c    **** 
 579:src/keys.c    **** 	CmdBase = 0;
 580:src/keys.c    **** 	// Removed: will clear any locals on power off
 581:src/keys.c    **** 	// clrretstk(0);
 582:src/keys.c    **** 
 583:src/keys.c    **** 	xset(&State2, 0, sizeof(State2));
 584:src/keys.c    **** 	State2.test = TST_NONE;
 585:src/keys.c    **** 	State2.runmode = 1;
 586:src/keys.c    **** 	update_program_bounds(1);
 587:src/keys.c    **** 	set_lift();
 588:src/keys.c    **** 
 589:src/keys.c    **** 	// Restore stuff that has been moved to State2 for space reasons
 590:src/keys.c    **** 	// but must not be cleared.
 591:src/keys.c    **** 	Voltage = v;
 592:src/keys.c    **** 	LastKey = k;
 593:src/keys.c    **** #ifndef REALBUILD
 594:src/keys.c    **** 	State2.trace = b;
 595:src/keys.c    **** 	State2.flags = a;
 596:src/keys.c    **** #else
 597:src/keys.c    **** 	TestFlag = t;
 598:src/keys.c    **** #endif
 599:src/keys.c    **** 	ShowRegister = regX_idx;
ARM GAS  /tmp/ccihcwFT.s 			page 12


 600:src/keys.c    **** }
 601:src/keys.c    **** 
 602:src/keys.c    **** void soft_init_state(void) {
 603:src/keys.c    **** 	int soft;
 604:src/keys.c    **** 	unsigned int runmode;
 605:src/keys.c    **** 	unsigned int alphas;
 606:src/keys.c    **** 
 607:src/keys.c    **** 	if (CmdLineLength) {
 608:src/keys.c    **** 		CmdLineLength = 0;
 609:src/keys.c    **** 		CmdLineEex = 0;
 610:src/keys.c    **** 		CmdLineDot = 0;
 611:src/keys.c    **** 		return;
 612:src/keys.c    **** 	}
 613:src/keys.c    **** 	soft = State2.multi || State2.rarg || State2.hyp || State2.gtodot || State2.labellist ||
 614:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 615:src/keys.c    **** 	runmode = State2.runmode;
 616:src/keys.c    **** 	alphas = State2.alphas;
 617:src/keys.c    **** 	init_state();
 618:src/keys.c    **** 	if (soft) {
 619:src/keys.c    **** 		State2.runmode = runmode;
 620:src/keys.c    **** 		State2.alphas = alphas;
 621:src/keys.c    **** 	}
 622:src/keys.c    **** }
 623:src/keys.c    **** 
 624:src/keys.c    **** static int check_confirm(int op) {
 625:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 626:src/keys.c    **** 		const int nilop = argKIND(op);
 627:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 628:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 629:src/keys.c    **** 			return STATE_UNFINISHED;
 630:src/keys.c    **** 		}
 631:src/keys.c    **** #ifndef DM42		
 632:src/keys.c    **** 		if ((nilop >= OP_RECV && nilop <= OP_PSTO)
 633:src/keys.c    **** #endif
 634:src/keys.c    **** #ifdef DM42
 635:src/keys.c    **** 		    if ((nilop >= OP_SAVE && nilop <= OP_PSTO) // no recv in DM42
 636:src/keys.c    **** #endif
 637:src/keys.c    **** #ifdef INFRARED
 638:src/keys.c    **** 			|| nilop == OP_PRINT_PGM
 639:src/keys.c    **** #endif
 640:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
 641:src/keys.c    **** 			|| nilop == OP_STOPWATCH
 642:src/keys.c    **** #endif
 643:src/keys.c    **** 		) {
 644:src/keys.c    **** 			// These commands are not programmable
 645:src/keys.c    **** 			NonProgrammable = 1;
 646:src/keys.c    **** 		}
 647:src/keys.c    **** 	}
 648:src/keys.c    **** 	return op;
 649:src/keys.c    **** }
 650:src/keys.c    **** 
 651:src/keys.c    **** static void set_smode(const enum single_disp d) {
 652:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 653:src/keys.c    **** }
 654:src/keys.c    **** 
 655:src/keys.c    **** static int check_f_key(int n, const int dflt) {
 656:src/keys.c    **** 	const int code = 100 + n;
ARM GAS  /tmp/ccihcwFT.s 			page 13


 657:src/keys.c    **** 	unsigned int pc = state_pc();
 658:src/keys.c    **** 
 659:src/keys.c    **** 	if (State2.runmode) {
 660:src/keys.c    **** 		if (isXROM(pc))
 661:src/keys.c    **** 			pc = 1;
 662:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 663:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 664:src/keys.c    **** 	}
 665:src/keys.c    **** 	return dflt;
 666:src/keys.c    **** }
 667:src/keys.c    **** 
 668:src/keys.c    **** /* Return non-zero if the current mode is integer and we accept letters
 669:src/keys.c    ****  * as digits.
 670:src/keys.c    ****  */
 671:src/keys.c    **** static int intltr(int d) {
 672:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 673:src/keys.c    **** }
 674:src/keys.c    **** 
 675:src/keys.c    **** /*
 676:src/keys.c    ****  *  Process a key code in the unshifted mode.
 677:src/keys.c    ****  */
 678:src/keys.c    **** static int process_normal(const keycode c)
 679:src/keys.c    **** {
 680:src/keys.c    **** 	static const unsigned short int op_map[] = {
 681:src/keys.c    **** 		// Row 1
 682:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS, // A to D
 683:src/keys.c    **** 		OP_MON  | OP_RECIP,
 684:src/keys.c    **** 		OP_DYA  | OP_POW,
 685:src/keys.c    **** 		OP_MON  | OP_SQRT,
 686:src/keys.c    **** 		OP_SPEC | OP_E,		// ->
 687:src/keys.c    **** 		OP_SPEC | OP_F,		// CPX
 688:src/keys.c    **** 		// Row 2
 689:src/keys.c    **** 		RARG_STO,
 690:src/keys.c    **** 		RARG_RCL,
 691:src/keys.c    **** 		OP_NIL  | OP_RDOWN,
 692:src/keys.c    **** 		// Row 3
 693:src/keys.c    **** 		OP_SPEC | OP_ENTER,
 694:src/keys.c    **** 		RARG(RARG_SWAPX, regY_idx),
 695:src/keys.c    **** 		OP_SPEC | OP_CHS,	// CHS
 696:src/keys.c    **** 		OP_SPEC | OP_EEX,	// EEX
 697:src/keys.c    **** 		OP_SPEC | OP_CLX,	// <-
 698:src/keys.c    **** 		// Row 4
 699:src/keys.c    **** 		RARG_XEQ,
 700:src/keys.c    **** 		OP_SPEC | OP_7,
 701:src/keys.c    **** 		OP_SPEC | OP_8,
 702:src/keys.c    **** 		OP_SPEC | OP_9,
 703:src/keys.c    **** 		OP_DYA  | OP_DIV,
 704:src/keys.c    **** 		// Row 5
 705:src/keys.c    **** 		STATE_BST,
 706:src/keys.c    **** 		OP_SPEC | OP_4,
 707:src/keys.c    **** 		OP_SPEC | OP_5,
 708:src/keys.c    **** 		OP_SPEC | OP_6,
 709:src/keys.c    **** 		OP_DYA  | OP_MUL,
 710:src/keys.c    **** 		// Row 6
 711:src/keys.c    **** 		STATE_SST,		// SST
 712:src/keys.c    **** 		OP_SPEC | OP_1,
 713:src/keys.c    **** 		OP_SPEC | OP_2,
ARM GAS  /tmp/ccihcwFT.s 			page 14


 714:src/keys.c    **** 		OP_SPEC | OP_3,
 715:src/keys.c    **** 		OP_DYA  | OP_SUB,
 716:src/keys.c    **** 		// Row 7
 717:src/keys.c    **** 		STATE_UNFINISHED,	// ON/C
 718:src/keys.c    **** 		OP_SPEC | OP_0,
 719:src/keys.c    **** 		OP_SPEC | OP_DOT,
 720:src/keys.c    **** 		OP_NIL  | OP_RS,	// R/S
 721:src/keys.c    **** 		OP_DYA  | OP_ADD,
 722:src/keys.c    **** #ifdef DM42
 723:src/keys.c    **** 		OP_NIL  | OP_NOP,  // shifts etc.
 724:src/keys.c    **** #endif
 725:src/keys.c    **** 	};
 726:src/keys.c    **** 
 727:src/keys.c    **** 	int lc = keycode_to_linear(c);
 728:src/keys.c    **** 	int op = op_map[lc];
 729:src/keys.c    **** 	
 730:src/keys.c    **** 	// The switch handles all the special cases
 731:src/keys.c    **** #ifdef DM42
 732:src/keys.c    **** 	int op_int;
 733:src/keys.c    **** 	if (UState.intm) {
 734:src/keys.c    **** 	  switch (c) {
 735:src/keys.c    **** 	  case K00:
 736:src/keys.c    **** 	    op = OP_SPEC | OP_A;
 737:src/keys.c    **** 	    if (intltr(10)) {
 738:src/keys.c    **** 	      return op;
 739:src/keys.c    **** 	    }
 740:src/keys.c    **** 	    else {
 741:src/keys.c    **** 	      return check_f_key(0, op);
 742:src/keys.c    **** 	    }
 743:src/keys.c    **** 	  case K01:
 744:src/keys.c    **** 	    op = OP_SPEC | OP_B;
 745:src/keys.c    **** 	    if (intltr(11)) {
 746:src/keys.c    **** 	      return op;
 747:src/keys.c    **** 	    }
 748:src/keys.c    **** 	    else {
 749:src/keys.c    **** 	      return check_f_key(1, op);
 750:src/keys.c    **** 	    }
 751:src/keys.c    **** 	  case K03:
 752:src/keys.c    **** 	    op_int = OP_SPEC | OP_C;
 753:src/keys.c    **** 	    if (intltr(12)) {
 754:src/keys.c    **** 	      return op_int;
 755:src/keys.c    **** 	    }
 756:src/keys.c    **** 	    else {
 757:src/keys.c    **** 	      return check_f_key(2, op);
 758:src/keys.c    **** 	    }
 759:src/keys.c    **** 	  case K30:
 760:src/keys.c    **** 	    op_int = OP_SPEC | OP_F;
 761:src/keys.c    **** 	    if (intltr(15)) {
 762:src/keys.c    **** 	      return op_int;
 763:src/keys.c    **** 	    }
 764:src/keys.c    **** 	  default:;
 765:src/keys.c    **** 	  }
 766:src/keys.c    **** 	}
 767:src/keys.c    **** #endif  
 768:src/keys.c    **** 
 769:src/keys.c    **** 	switch (c) {
 770:src/keys.c    **** #ifdef DM42
ARM GAS  /tmp/ccihcwFT.s 			page 15


 771:src/keys.c    **** 	case K00:
 772:src/keys.c    **** 		return check_f_key(0, op);
 773:src/keys.c    **** 	case K01:
 774:src/keys.c    **** 		return check_f_key(1, op);
 775:src/keys.c    **** 	case K03:
 776:src/keys.c    **** 		return check_f_key(2, op);
 777:src/keys.c    **** #else
 778:src/keys.c    **** 	case K00:
 779:src/keys.c    **** 	case K01:
 780:src/keys.c    **** 		if (UState.intm)
 781:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 782:src/keys.c    **** 	case K02:
 783:src/keys.c    **** 	case K03:
 784:src/keys.c    **** 		if (intltr(lc + 10)) {
 785:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 786:src/keys.c    **** 			return op;
 787:src/keys.c    **** 		}
 788:src/keys.c    **** 		return check_f_key(lc, op);
 789:src/keys.c    **** #endif		
 790:src/keys.c    **** 	case K_ARROW:
 791:src/keys.c    **** #ifndef DM42
 792:src/keys.c    **** #ifdef INT_MODE_TEMPVIEW
 793:src/keys.c    **** 		if (intltr(14))
 794:src/keys.c    **** 			return op;
 795:src/keys.c    **** #else
 796:src/keys.c    **** 		if (UState.intm)
 797:src/keys.c    **** 			return op;
 798:src/keys.c    **** #endif
 799:src/keys.c    **** #endif		
 800:src/keys.c    **** 		if (is_bad_cmdline())
 801:src/keys.c    **** 			return STATE_UNFINISHED;
 802:src/keys.c    **** 		process_cmdline_set_lift();
 803:src/keys.c    **** 		State2.arrow = 1;
 804:src/keys.c    **** #ifdef DM42
 805:src/keys.c    **** 		set_menu (9); // arrow menu
 806:src/keys.c    **** 		display_current_menu ();
 807:src/keys.c    **** 		lcd_refresh ();
 808:src/keys.c    **** #else
 809:src/keys.c    **** 		set_shift(SHIFT_G);
 810:src/keys.c    **** #endif
 811:src/keys.c    **** 		break;
 812:src/keys.c    **** 
 813:src/keys.c    **** 	case K_CMPLX:
 814:src/keys.c    **** #ifdef DM42
 815:src/keys.c    **** 	  if (UState.intm)
 816:src/keys.c    **** 	    break; // return nothing
 817:src/keys.c    **** 	  State2.cmplx = 1;
 818:src/keys.c    **** #else
 819:src/keys.c    **** 	  if (UState.intm)
 820:src/keys.c    **** 	    return op;
 821:src/keys.c    **** 	  State2.cmplx = 1;
 822:src/keys.c    **** #endif
 823:src/keys.c    **** 	  break;
 824:src/keys.c    **** 
 825:src/keys.c    **** 	case K24:				// <-
 826:src/keys.c    **** 		if (State2.disp_temp)
 827:src/keys.c    **** 			return STATE_UNFINISHED;
ARM GAS  /tmp/ccihcwFT.s 			page 16


 828:src/keys.c    **** 		if (State2.runmode)
 829:src/keys.c    **** 			return op;
 830:src/keys.c    **** 		return STATE_BACKSPACE;
 831:src/keys.c    **** 
 832:src/keys.c    **** 	case K10:				// STO
 833:src/keys.c    **** 	case K11:				// RCL
 834:src/keys.c    **** 	case K30:				// XEQ
 835:src/keys.c    **** 		init_arg((enum rarg)op);
 836:src/keys.c    **** 		break;
 837:src/keys.c    **** 
 838:src/keys.c    **** 	default:
 839:src/keys.c    **** 		return op;			// Keys handled by table
 840:src/keys.c    **** 	}
 841:src/keys.c    **** 	return STATE_UNFINISHED;
 842:src/keys.c    **** }
 843:src/keys.c    **** 
 844:src/keys.c    **** 
 845:src/keys.c    **** /*
 846:src/keys.c    ****  *  Process a key code after f or g shift
 847:src/keys.c    ****  */
 848:src/keys.c    **** static int process_fg_shifted(const keycode c) {
 849:src/keys.c    **** 
 850:src/keys.c    **** #define NO_INT 0xf000
 851:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 852:src/keys.c    **** 		// Row 1
 853:src/keys.c    **** 		{ 1,                               0                           }, // HYP
 854:src/keys.c    **** 		{ OP_MON | OP_SIN      | NO_INT,   OP_MON | OP_ASIN   | NO_INT },
 855:src/keys.c    **** 		{ OP_MON | OP_COS      | NO_INT,   OP_MON | OP_ACOS   | NO_INT },
 856:src/keys.c    **** 		{ OP_MON | OP_TAN      | NO_INT,   OP_MON | OP_ATAN   | NO_INT },
 857:src/keys.c    **** 		{ OP_NIL | OP_P2R      | NO_INT,   OP_NIL | OP_R2P    | NO_INT },
 858:src/keys.c    **** 		{ OP_NIL | OP_FRACPROPER,	   OP_NIL | OP_FRACIMPROPER    }, // CPX
 859:src/keys.c    **** 		// Row 2
 860:src/keys.c    **** 		{ OP_NIL | OP_HMS,                 OP_NIL | OP_DEG    | NO_INT },
 861:src/keys.c    **** 		{ OP_NIL | OP_FLOAT,               OP_NIL | OP_RAD    | NO_INT },
 862:src/keys.c    **** 		{ OP_NIL | OP_RANDOM,              OP_NIL | OP_GRAD   | NO_INT },
 863:src/keys.c    **** 		// Row 3
 864:src/keys.c    **** 		{ STATE_UNFINISHED,		   OP_NIL | OP_FILL            }, // ENTER
 865:src/keys.c    **** 		{ STATE_WINDOWLEFT,   		   STATE_WINDOWRIGHT   	       },
 866:src/keys.c    **** 		{ RARG(RARG_BASE, 2),		   RARG(RARG_BASE, 8)          },
 867:src/keys.c    **** 		{ RARG(RARG_BASE, 10),		   RARG(RARG_BASE, 16)         },
 868:src/keys.c    **** 		{ OP_NIL | OP_CLPROG,		   OP_NIL | OP_SIGMACLEAR      },
 869:src/keys.c    **** 		// Row 4
 870:src/keys.c    **** 		{ OP_MON | OP_EXP,                 OP_MON | OP_LN              },
 871:src/keys.c    **** 		{ OP_MON | OP_10POWX,		   OP_MON | OP_LOG             },
 872:src/keys.c    **** 		{ OP_MON | OP_2POWX,		   OP_MON | OP_LG2             },
 873:src/keys.c    **** 		{ OP_DYA | OP_POW,                 OP_DYA | OP_LOGXY           },
 874:src/keys.c    **** 		{ OP_MON | OP_RECIP    | NO_INT,   OP_DYA | OP_PARAL	       },
 875:src/keys.c    **** 		// Row 5
 876:src/keys.c    **** 		{ OP_DYA | OP_COMB,                OP_DYA | OP_PERM            },
 877:src/keys.c    **** 		{ OP_MON | OP_cdf_Q    | NO_INT,   OP_MON | OP_qf_Q   | NO_INT },
 878:src/keys.c    **** 		{ OP_NIL | OP_statMEAN | NO_INT,   OP_NIL | OP_statS  | NO_INT },
 879:src/keys.c    **** 		{ OP_MON | OP_yhat     | NO_INT,   OP_NIL | OP_statR  | NO_INT },
 880:src/keys.c    **** 		{ OP_MON | OP_SQRT,		   OP_MON | OP_SQR             },
 881:src/keys.c    **** 		// Row 6
 882:src/keys.c    **** 		{ RARG_SF,                         RARG_CF                     },
 883:src/keys.c    **** 		{ TST_EQ,                          TST_NE                      }, // tests
 884:src/keys.c    **** 		{ RARG_SOLVE           | NO_INT,   RARG_INTG          | NO_INT },
ARM GAS  /tmp/ccihcwFT.s 			page 17


 885:src/keys.c    **** 		{ RARG_PROD            | NO_INT,   RARG_SUM           | NO_INT },
 886:src/keys.c    **** 		{ OP_MON | OP_PERCNT   | NO_INT,   OP_MON | OP_PERCHG | NO_INT },
 887:src/keys.c    **** 		// Row 7
 888:src/keys.c    **** #ifdef INFRARED
 889:src/keys.c    **** 		{ RARG(RARG_PRINT_REG,regX_idx),   STATE_UNFINISHED	       },
 890:src/keys.c    **** #else
 891:src/keys.c    **** 		{ STATE_UNFINISHED,		   STATE_UNFINISHED	       },
 892:src/keys.c    **** #endif
 893:src/keys.c    **** 		{ OP_MON | OP_ABS,		   OP_MON | OP_RND             },
 894:src/keys.c    **** 		{ OP_MON | OP_TRUNC,		   OP_MON | OP_FRAC            },
 895:src/keys.c    **** 		{ RARG_LBL,			   OP_NIL | OP_RTN             },
 896:src/keys.c    **** 		{ RARG_DSE,			   RARG_ISG                    },
 897:src/keys.c    **** #ifdef DM42
 898:src/keys.c    **** 		{ OP_NIL | OP_NOP,		   OP_NIL |OP_NOP              },
 899:src/keys.c    **** #endif
 900:src/keys.c    **** 	};
 901:src/keys.c    **** 
 902:src/keys.c    **** 	static const unsigned short int op_map2[] = {
 903:src/keys.c    **** 		STATE_UNFINISHED,
 904:src/keys.c    **** 		STATE_UNFINISHED,
 905:src/keys.c    **** 		OP_DYA  | OP_POW,
 906:src/keys.c    **** 		OP_MON  | OP_SQRT
 907:src/keys.c    **** 	};
 908:src/keys.c    **** 
 909:src/keys.c    **** 	enum shifts shift = reset_shift();
 910:src/keys.c    **** 	int lc = keycode_to_linear(c);
 911:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 912:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 913:src/keys.c    **** 	if (no_int)
 914:src/keys.c    **** 		op &= ~NO_INT;
 915:src/keys.c    **** 
 916:src/keys.c    **** 	switch (c) {
 917:src/keys.c    **** 	case K00:
 918:src/keys.c    **** 	  if (! UState.intm) {
 919:src/keys.c    **** 	    State2.hyp = 1;
 920:src/keys.c    **** 	    State2.dot = op;
 921:src/keys.c    **** 	    // State2.cmplx = 0;
 922:src/keys.c    **** 	    return STATE_UNFINISHED;
 923:src/keys.c    **** 	  }
 924:src/keys.c    **** 	  // fall through
 925:src/keys.c    **** 	case K01:
 926:src/keys.c    **** #ifdef DM42
 927:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 928:src/keys.c    **** 	    return check_f_key(lc, op_map2[lc]);
 929:src/keys.c    **** 	  }
 930:src/keys.c    **** 	  break;
 931:src/keys.c    **** #endif
 932:src/keys.c    **** #ifndef DM42
 933:src/keys.c    **** 	case K02:
 934:src/keys.c    **** #endif
 935:src/keys.c    **** 	case K03:
 936:src/keys.c    **** #ifdef DM42
 937:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 938:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 939:src/keys.c    **** 		}
 940:src/keys.c    **** 		break;
 941:src/keys.c    **** #else
ARM GAS  /tmp/ccihcwFT.s 			page 18


 942:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 943:src/keys.c    **** 			return check_f_key(2, op_map2[lc]);
 944:src/keys.c    **** 		}
 945:src/keys.c    **** 		break;
 946:src/keys.c    **** #endif
 947:src/keys.c    **** 	case K20:				// Alpha
 948:src/keys.c    **** 		if (shift == SHIFT_F) {
 949:src/keys.c    **** 			if (is_bad_cmdline())
 950:src/keys.c    **** 				return STATE_UNFINISHED;
 951:src/keys.c    **** 			process_cmdline_set_lift();
 952:src/keys.c    **** 			State2.alphas = 1;
 953:src/keys.c    **** #ifdef DM42
 954:src/keys.c    **** 			set_menu(16);
 955:src/keys.c    **** 			display_current_menu();
 956:src/keys.c    **** #endif
 957:src/keys.c    **** 		}
 958:src/keys.c    **** 		break;
 959:src/keys.c    **** #ifdef DM42
 960:src/keys.c    **** 	case K31:
 961:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(13)) {// Log - so D key
 962:src/keys.c    **** 	    return OP_SPEC | OP_D;
 963:src/keys.c    **** 	  }
 964:src/keys.c    **** 	  break;
 965:src/keys.c    **** 	case K30:
 966:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(14)) {// Ln - so E key
 967:src/keys.c    **** 	    return OP_SPEC | OP_E;
 968:src/keys.c    **** 	  }
 969:src/keys.c    **** 	  break;
 970:src/keys.c    **** #endif
 971:src/keys.c    **** 	case K51:
 972:src/keys.c    **** 		if (is_bad_cmdline())
 973:src/keys.c    **** 			return STATE_UNFINISHED;
 974:src/keys.c    **** 		process_cmdline_set_lift();
 975:src/keys.c    **** 		State2.test = op;
 976:src/keys.c    **** 		return STATE_UNFINISHED;
 977:src/keys.c    **** 
 978:src/keys.c    **** 	case K50:
 979:src/keys.c    **** #ifndef REALBUILD
 980:src/keys.c    **** 		if (SHIFT_N != shift_down()) {
 981:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 982:src/keys.c    **** 			return STATE_UNFINISHED;
 983:src/keys.c    **** 		}
 984:src/keys.c    **** #endif
 985:src/keys.c    **** 	case K52:
 986:src/keys.c    **** 	case K53:
 987:src/keys.c    **** 	case K63:
 988:src/keys.c    **** 	case K64:
 989:src/keys.c    **** 		if (op != (OP_NIL | OP_RTN)) {
 990:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 991:src/keys.c    **** 				init_arg((enum rarg) op);
 992:src/keys.c    **** 			}
 993:src/keys.c    **** 			return STATE_UNFINISHED;
 994:src/keys.c    **** 		}
 995:src/keys.c    **** 		break;
 996:src/keys.c    **** 
 997:src/keys.c    **** 	default:
 998:src/keys.c    **** 		break;
ARM GAS  /tmp/ccihcwFT.s 			page 19


 999:src/keys.c    **** 	}
1000:src/keys.c    **** 	if (no_int && UState.intm)
1001:src/keys.c    **** 		return STATE_UNFINISHED;
1002:src/keys.c    **** 
1003:src/keys.c    **** 	return check_confirm(op);
1004:src/keys.c    **** #undef NO_INT
1005:src/keys.c    **** }
1006:src/keys.c    **** 
1007:src/keys.c    **** /*
1008:src/keys.c    ****  *  Process a key code after h shift
1009:src/keys.c    ****  */
1010:src/keys.c    **** static int process_h_shifted(const keycode c) {
1011:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
1012:src/keys.c    **** #define NO_INT   0x4000
1013:src/keys.c    **** 	static const unsigned short int op_map[] = {
1014:src/keys.c    **** 		// Row 1
1015:src/keys.c    **** 		_RARG   | RARG_STD,
1016:src/keys.c    **** 		_RARG   | RARG_FIX,
1017:src/keys.c    **** 		_RARG   | RARG_SCI,
1018:src/keys.c    **** 		_RARG   | RARG_ENG,
1019:src/keys.c    **** 		STATE_UNFINISHED,	// CONV
1020:src/keys.c    **** 		STATE_UNFINISHED,	// MODE
1021:src/keys.c    **** 		// Row 2
1022:src/keys.c    **** 		STATE_UNFINISHED,	// CAT
1023:src/keys.c    **** 		_RARG   | RARG_VIEW,
1024:src/keys.c    **** 		OP_NIL  | OP_RUP,
1025:src/keys.c    **** 		// Row 3
1026:src/keys.c    **** 		_RARG	| RARG_INTNUM,	// CONST, will be emitted in integer mode only
1027:src/keys.c    **** 		_RARG   | RARG_SWAPX,
1028:src/keys.c    **** 		OP_MON  | OP_NOT,
1029:src/keys.c    **** 		CONST(OP_PI) | NO_INT,
1030:src/keys.c    **** 		OP_NIL  | OP_rCLX,
1031:src/keys.c    **** 		// Row 4
1032:src/keys.c    **** 		_RARG   | RARG_GTO,
1033:src/keys.c    **** 		OP_DYA  | OP_LAND,
1034:src/keys.c    **** 		OP_DYA  | OP_LOR,
1035:src/keys.c    **** 		OP_DYA  | OP_LXOR,
1036:src/keys.c    **** 		OP_DYA  | OP_MOD,
1037:src/keys.c    **** 		// Row 5
1038:src/keys.c    **** 		OP_MON  | OP_FACT,
1039:src/keys.c    **** 		STATE_UNFINISHED,	// PROB
1040:src/keys.c    **** 		STATE_UNFINISHED,	// STAT
1041:src/keys.c    **** 		STATE_UNFINISHED,	// CFIT
1042:src/keys.c    **** 		STATE_UNFINISHED,	// MATRIX
1043:src/keys.c    **** 		// Row 6
1044:src/keys.c    **** 		STATE_UNFINISHED,	// STATUS
1045:src/keys.c    **** 		STATE_UNFINISHED,	// TEST
1046:src/keys.c    **** 		STATE_UNFINISHED,	// P.FCN
1047:src/keys.c    **** 		STATE_UNFINISHED,	// X.FCN
1048:src/keys.c    **** 		OP_SPEC | OP_SIGMAMINUS | NO_INT,
1049:src/keys.c    **** 		// Row 7
1050:src/keys.c    **** 		OP_NIL | OP_OFF,
1051:src/keys.c    **** 		_RARG   | RARG_PAUSE,
1052:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1053:src/keys.c    **** 		OP_NIL  | OP_THOUS_OFF,
1054:src/keys.c    **** #else
1055:src/keys.c    ****  		OP_NIL  | OP_RADCOM,
ARM GAS  /tmp/ccihcwFT.s 			page 20


1056:src/keys.c    **** #endif
1057:src/keys.c    **** 		STATE_UNFINISHED,	// P/R
1058:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS | NO_INT,
1059:src/keys.c    **** #ifdef DM42
1060:src/keys.c    **** 		OP_NIL | OP_NOP,       // shifts etc.
1061:src/keys.c    **** #endif
1062:src/keys.c    **** 	};
1063:src/keys.c    **** 
1064:src/keys.c    **** 	int lc = keycode_to_linear(c);
1065:src/keys.c    **** 	int op = op_map[lc];
1066:src/keys.c    **** 	reset_shift();
1067:src/keys.c    **** 
1068:src/keys.c    **** 	// The switch handles all the special cases
1069:src/keys.c    **** 	switch (c) {
1070:src/keys.c    **** 	case K62:
1071:src/keys.c    **** 		if (UState.intm)
1072:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
1073:src/keys.c    **** 		else
1074:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1075:src/keys.c    **** 			if (UState.nothousands) op = OP_NIL | OP_THOUS_ON;
1076:src/keys.c    **** #else
1077:src/keys.c    **** 			if (UState.fraccomma) op = OP_NIL | OP_RADDOT;
1078:src/keys.c    **** #endif
1079:src/keys.c    **** 		break;
1080:src/keys.c    **** 
1081:src/keys.c    **** 	case K63:					// Program<->Run mode
1082:src/keys.c    **** 		if (is_bad_cmdline())
1083:src/keys.c    **** 			return STATE_UNFINISHED;
1084:src/keys.c    **** 		State2.runmode = 1 - State2.runmode;
1085:src/keys.c    **** 		process_cmdline_set_lift();
1086:src/keys.c    **** 		update_program_bounds(1);
1087:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
1088:src/keys.c    **** 			set_pc(0);
1089:src/keys.c    **** 		break;
1090:src/keys.c    **** 
1091:src/keys.c    **** 	default:
1092:src/keys.c    **** 		break;
1093:src/keys.c    **** 	}
1094:src/keys.c    **** 
1095:src/keys.c    **** 	if (op != STATE_UNFINISHED) {
1096:src/keys.c    **** 		if (op & _RARG) {
1097:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
1098:src/keys.c    **** 			op = STATE_UNFINISHED;
1099:src/keys.c    **** 		}
1100:src/keys.c    **** 	}
1101:src/keys.c    **** 	return UState.intm && (op & NO_INT) ? STATE_UNFINISHED : op & ~NO_INT;
1102:src/keys.c    **** #undef _RARG
1103:src/keys.c    **** #undef NO_INT
1104:src/keys.c    **** }
1105:src/keys.c    **** 
1106:src/keys.c    **** /*
1107:src/keys.c    ****  *  Process a key code after CPX
1108:src/keys.c    ****  */
1109:src/keys.c    **** static int process_cmplx(const keycode c) {
1110:src/keys.c    **** #define _RARG   0xFF00
1111:src/keys.c    **** #define CSWAPXZ RARG(RARG_CSWAPX, regZ_idx)
1112:src/keys.c    **** #define CNUM(n) RARG(RARG_INTNUM_CMPLX, n)
ARM GAS  /tmp/ccihcwFT.s 			page 21


1113:src/keys.c    **** 
1114:src/keys.c    **** 	static const unsigned short int op_map[][4] = {
1115:src/keys.c    **** 		// Row 1
1116:src/keys.c    **** 		{ 1,			1,                   0,                   0		      }, // HYP
1117:src/keys.c    **** 		{ OP_CMON | OP_RECIP,	OP_CMON | OP_SIN,    OP_CMON | OP_ASIN,   STATE_UNFINISHED    },
1118:src/keys.c    **** 		{ OP_CDYA | OP_POW,	OP_CMON | OP_COS,    OP_CMON | OP_ACOS,   STATE_UNFINISHED    },
1119:src/keys.c    **** 		{ OP_CMON | OP_SQRT,	OP_CMON | OP_TAN,    OP_CMON | OP_ATAN,   STATE_UNFINISHED    },
1120:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_NIL | OP_P2R,     OP_NIL | OP_R2P,     STATE_UNFINISHED    },
1121:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    }, // CPX
1122:src/keys.c    **** 		// Row 2
1123:src/keys.c    **** 		{ _RARG | RARG_CSTO,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1124:src/keys.c    **** 		{ _RARG | RARG_CRCL,	STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CVIEW  },
1125:src/keys.c    **** 		{ OP_NIL | OP_CRDOWN,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_CRUP    }, // R^
1126:src/keys.c    **** 		// Row 3
1127:src/keys.c    **** 		{ OP_NIL | OP_CENTER,	STATE_UNFINISHED,    OP_NIL | OP_CFILL,   OP_NIL | OP_CFILL   }, // ENTER
1128:src/keys.c    **** 		{ CSWAPXZ,		STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CSWAPX },
1129:src/keys.c    **** 		{ OP_CMON | OP_CCHS,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_CMON | OP_CCONJ  },
1130:src/keys.c    **** 		{ CONST_CMPLX(OP_PI),	STATE_UNFINISHED,    STATE_UNFINISHED,    CONST_CMPLX(OP_PI)  },
1131:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1132:src/keys.c    **** 		// Row 4
1133:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CMON | OP_EXP,    OP_CMON | OP_LN,     STATE_UNFINISHED    },
1134:src/keys.c    **** 		{ CNUM(7),		OP_CMON | OP_10POWX, OP_CMON | OP_LOG,    STATE_UNFINISHED    },
1135:src/keys.c    **** 		{ CNUM(8),		OP_CMON | OP_2POWX,  OP_CMON | OP_LG2,    STATE_UNFINISHED    },
1136:src/keys.c    **** 		{ CNUM(9),		OP_CDYA | OP_POW,    OP_CDYA | OP_LOGXY,  STATE_UNFINISHED    },
1137:src/keys.c    **** 		{ OP_CDYA | OP_DIV,	OP_CMON | OP_RECIP,  OP_CDYA | OP_PARAL,  STATE_UNFINISHED    },
1138:src/keys.c    **** 		// Row 5
1139:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CDYA | OP_COMB,   OP_CDYA | OP_PERM,   OP_CMON | OP_FACT   },
1140:src/keys.c    **** 		{ CNUM(4),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1141:src/keys.c    **** 		{ CNUM(5),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1142:src/keys.c    **** 		{ CNUM(6),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1143:src/keys.c    **** 		{ OP_CDYA | OP_MUL,	OP_CMON | OP_SQRT,   OP_CMON | OP_SQR,    OP_CMON | OP_SQR    },
1144:src/keys.c    **** 		// Row 6
1145:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1146:src/keys.c    **** 		{ CNUM(1),		TST_EQ,              TST_NE,              STATE_UNFINISHED    }, // tests
1147:src/keys.c    **** 		{ CNUM(2),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1148:src/keys.c    **** 		{ CNUM(3),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1149:src/keys.c    **** 		{ OP_CDYA | OP_SUB,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1150:src/keys.c    **** 		// Row 7
1151:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_OFF     },
1152:src/keys.c    **** 		{ CNUM(0),		OP_CMON | OP_ABS,    OP_CMON | OP_RND,    STATE_UNFINISHED    },
1153:src/keys.c    **** 		{ OP_NIL | OP_cmplxI,	OP_CMON | OP_TRUNC,  OP_CMON | OP_FRAC,   STATE_UNFINISHED    },
1154:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1155:src/keys.c    **** 		{ OP_NIL | OP_STOPWATCH, STATE_UNFINISHED,   STATE_UNFINISHED,    STATE_UNFINISHED    },
1156:src/keys.c    **** #else
1157:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1158:src/keys.c    **** #endif
1159:src/keys.c    **** 		{ OP_CDYA | OP_ADD,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1160:src/keys.c    **** #ifdef DM42
1161:src/keys.c    **** 		{ OP_NIL | OP_NOP,	OP_NIL | OP_NOP,    OP_NIL | OP_NOP,    OP_NIL | OP_NOP    }
1162:src/keys.c    **** #endif
1163:src/keys.c    **** 	};
1164:src/keys.c    **** 
1165:src/keys.c    **** 	enum shifts shift = reset_shift();
1166:src/keys.c    **** 	int lc = keycode_to_linear(c);
1167:src/keys.c    **** 	int op = op_map[lc][shift];
1168:src/keys.c    **** 	State2.cmplx = 0;
1169:src/keys.c    **** 
ARM GAS  /tmp/ccihcwFT.s 			page 22


1170:src/keys.c    **** 	if ((op & _RARG) == _RARG) {
1171:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
1172:src/keys.c    **** 		return STATE_UNFINISHED;
1173:src/keys.c    **** 	}
1174:src/keys.c    **** 	if (c == K00) {
1175:src/keys.c    **** 		// HYP
1176:src/keys.c    **** 		process_cmdline_set_lift();
1177:src/keys.c    **** 		State2.hyp = 1;
1178:src/keys.c    **** 		State2.dot = op;
1179:src/keys.c    **** 		State2.cmplx = 1;
1180:src/keys.c    **** 		return STATE_UNFINISHED;
1181:src/keys.c    **** 	}
1182:src/keys.c    **** 
1183:src/keys.c    **** 	if (shift != SHIFT_N) {
1184:src/keys.c    **** 		switch (c) {
1185:src/keys.c    **** 		case K_CMPLX:
1186:src/keys.c    **** 			set_shift(shift);
1187:src/keys.c    **** 			break;
1188:src/keys.c    **** 
1189:src/keys.c    **** 		case K51:
1190:src/keys.c    **** 			if (op != STATE_UNFINISHED) {
1191:src/keys.c    **** 				if (is_bad_cmdline())
1192:src/keys.c    **** 					return STATE_UNFINISHED;
1193:src/keys.c    **** 				process_cmdline_set_lift();
1194:src/keys.c    **** 				State2.cmplx = 1;
1195:src/keys.c    **** 				State2.test = op;
1196:src/keys.c    **** 			}
1197:src/keys.c    **** 			return STATE_UNFINISHED;
1198:src/keys.c    **** 
1199:src/keys.c    **** 		case K60:
1200:src/keys.c    **** 			init_state();
1201:src/keys.c    **** 			break;
1202:src/keys.c    **** 
1203:src/keys.c    **** 		default:
1204:src/keys.c    **** 			break;
1205:src/keys.c    **** 		}
1206:src/keys.c    **** 	}
1207:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1208:src/keys.c    **** 	return check_confirm(op);
1209:src/keys.c    **** #else
1210:src/keys.c    **** 	return op;
1211:src/keys.c    **** #endif
1212:src/keys.c    **** 
1213:src/keys.c    **** #undef _RARG
1214:src/keys.c    **** #undef CSWAPXZ
1215:src/keys.c    **** #undef CNUM
1216:src/keys.c    **** }
1217:src/keys.c    **** 
1218:src/keys.c    **** 
1219:src/keys.c    **** 
1220:src/keys.c    **** /*
1221:src/keys.c    ****  * Fairly simple routine for dealing with the HYP prefix.
1222:src/keys.c    ****  * This setting can only be followed by 4, 5, or 6 to specify
1223:src/keys.c    ****  * the function.  The inverse routines use the code too, the State2.dot
1224:src/keys.c    ****  * is 1 for normal and 0 for inverse hyperbolic.  We also have to
1225:src/keys.c    ****  * deal with the complex versions and the handling of that key and
1226:src/keys.c    ****  * the ON key are dealt with by our caller.
ARM GAS  /tmp/ccihcwFT.s 			page 23


1227:src/keys.c    ****  */
1228:src/keys.c    **** static int process_hyp(const keycode c) {
1229:src/keys.c    **** 	static const unsigned char op_map[][2] = {
1230:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
1231:src/keys.c    **** 		{ OP_ACOSH, OP_COSH },
1232:src/keys.c    **** 		{ OP_ATANH, OP_TANH }
1233:src/keys.c    **** 	};
1234:src/keys.c    **** 	int cmplx = State2.cmplx;
1235:src/keys.c    **** 	int f = State2.dot;
1236:src/keys.c    **** 
1237:src/keys.c    **** 	State2.hyp = 0;
1238:src/keys.c    **** 	State2.cmplx = 0;
1239:src/keys.c    **** 	State2.dot = 0;
1240:src/keys.c    **** #ifdef DM42
1241:src/keys.c    **** 	reset_shift();
1242:src/keys.c    **** #endif
1243:src/keys.c    **** 	switch ((int)c) {
1244:src/keys.c    **** 
1245:src/keys.c    **** 	case K01:
1246:src/keys.c    **** 	case K02:
1247:src/keys.c    **** 	case K03:
1248:src/keys.c    **** 		return (cmplx ? OP_CMON : OP_MON) | op_map[c - K01][f];
1249:src/keys.c    **** 
1250:src/keys.c    **** 	case K_CMPLX:
1251:src/keys.c    **** 		cmplx = ! cmplx;
1252:src/keys.c    **** 		goto stay;
1253:src/keys.c    **** 
1254:src/keys.c    **** #ifndef DM42
1255:src/keys.c    **** 	case K_F: 
1256:src/keys.c    **** 	case K_G:
1257:src/keys.c    **** 		f = (c == K_F);
1258:src/keys.c    **** 		// fall through
1259:src/keys.c    **** #else
1260:src/keys.c    **** 	case K_F:
1261:src/keys.c    **** 	  if (c == K_F) f = 1 - f;
1262:src/keys.c    **** #endif
1263:src/keys.c    **** 	stay:
1264:src/keys.c    **** 		// process_cmdline_set_lift();
1265:src/keys.c    **** 		State2.hyp = 1;
1266:src/keys.c    **** 		State2.cmplx = cmplx;
1267:src/keys.c    **** 		State2.dot = f;
1268:src/keys.c    **** 		break;
1269:src/keys.c    **** 
1270:src/keys.c    **** 	default:
1271:src/keys.c    **** 		break;
1272:src/keys.c    **** 	}
1273:src/keys.c    **** 	return STATE_UNFINISHED;
1274:src/keys.c    **** }
1275:src/keys.c    **** 
1276:src/keys.c    **** 
1277:src/keys.c    **** /*
1278:src/keys.c    ****  *  Process a key code after ->
1279:src/keys.c    ****  */
1280:src/keys.c    **** static int process_arrow(const keycode c) {
1281:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
1282:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
1283:src/keys.c    **** 		{ OP_MON | OP_2RAD,  OP_MON | OP_HMS2 },
ARM GAS  /tmp/ccihcwFT.s 			page 24


1284:src/keys.c    **** 		{ OP_MON | OP_2GRAD, STATE_UNFINISHED }
1285:src/keys.c    **** 	};
1286:src/keys.c    **** 	static const enum single_disp disp[][2] = {
1287:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
1288:src/keys.c    **** 		{ SDISP_HEX, SDISP_DEC }
1289:src/keys.c    **** 	};
1290:src/keys.c    **** 	const int shift = reset_shift();
1291:src/keys.c    **** 	const int f = (shift == SHIFT_F);
1292:src/keys.c    **** 
1293:src/keys.c    **** 	State2.arrow = 0;
1294:src/keys.c    **** #ifdef DM42
1295:src/keys.c    **** 	set_last_menu ();
1296:src/keys.c    **** 	display_current_menu ();
1297:src/keys.c    **** #endif
1298:src/keys.c    **** 	if (shift == SHIFT_N) return STATE_UNFINISHED;
1299:src/keys.c    **** 	
1300:src/keys.c    **** 	if (c >= K10 && c <= K12)
1301:src/keys.c    **** 		return op_map[c - K10][f];
1302:src/keys.c    **** 
1303:src/keys.c    **** 	if (c == K22 || c == K23)
1304:src/keys.c    **** 		set_smode(disp[c - K22][f]);
1305:src/keys.c    **** 
1306:src/keys.c    **** 	return STATE_UNFINISHED;
1307:src/keys.c    **** }
1308:src/keys.c    **** 
1309:src/keys.c    **** 
1310:src/keys.c    **** /* Process a GTO . sequence
1311:src/keys.c    ****  */
1312:src/keys.c    **** static int gtodot_digit(const int n) {
  30              		.loc 1 1312 38 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
1313:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  34              		.loc 1 1313 2 view .LVU1
1314:src/keys.c    **** 	const int lib = nLIB(state_pc());
  35              		.loc 1 1314 18 is_stmt 0 view .LVU2
  36 0000 144B     		ldr	r3, .L5
  37 0002 1A68     		ldr	r2, [r3]
1312:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  38              		.loc 1 1312 38 view .LVU3
  39 0004 70B5     		push	{r4, r5, r6, lr}
  40              		.cfi_def_cfa_offset 16
  41              		.cfi_offset 4, -16
  42              		.cfi_offset 5, -12
  43              		.cfi_offset 6, -8
  44              		.cfi_offset 14, -4
1313:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  45              		.loc 1 1313 24 view .LVU4
  46 0006 144E     		ldr	r6, .L5+4
  47              		.loc 1 1314 18 view .LVU5
  48 0008 B2F8E057 		ldrh	r5, [r2, #2016]
1313:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  49              		.loc 1 1313 24 view .LVU6
  50 000c 3389     		ldrh	r3, [r6, #8]
  51              		.loc 1 1314 18 view .LVU7
  52 000e AD0B     		lsrs	r5, r5, #14
ARM GAS  /tmp/ccihcwFT.s 			page 25


1313:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  53              		.loc 1 1313 32 view .LVU8
  54 0010 03EB8303 		add	r3, r3, r3, lsl #2
1312:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  55              		.loc 1 1312 38 view .LVU9
  56 0014 0446     		mov	r4, r0
1315:src/keys.c    **** 
1316:src/keys.c    **** 	if (val > sizeLIB(lib) / 10)
  57              		.loc 1 1316 12 view .LVU10
  58 0016 2846     		mov	r0, r5
  59              	.LVL1:
1313:src/keys.c    **** 	const int lib = nLIB(state_pc());
  60              		.loc 1 1313 12 view .LVU11
  61 0018 04EB4304 		add	r4, r4, r3, lsl #1
  62              	.LVL2:
1314:src/keys.c    **** 
  63              		.loc 1 1314 2 is_stmt 1 view .LVU12
  64              		.loc 1 1316 2 view .LVU13
  65              		.loc 1 1316 12 is_stmt 0 view .LVU14
  66 001c FFF7FEFF 		bl	sizeLIB
  67              	.LVL3:
  68              		.loc 1 1316 25 view .LVU15
  69 0020 0E4A     		ldr	r2, .L5+8
  70 0022 82FB0032 		smull	r3, r2, r2, r0
  71 0026 C317     		asrs	r3, r0, #31
  72 0028 C3EBA203 		rsb	r3, r3, r2, asr #2
  73              		.loc 1 1316 5 view .LVU16
  74 002c A342     		cmp	r3, r4
  75 002e 0FDB     		blt	.L1
1317:src/keys.c    **** 		return val;
1318:src/keys.c    **** 	if (++State2.numdigit == 3 + (lib & 1))
  76              		.loc 1 1318 2 is_stmt 1 view .LVU17
  77              		.loc 1 1318 6 is_stmt 0 view .LVU18
  78 0030 F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
  79              		.loc 1 1318 29 view .LVU19
  80 0032 15F0010F 		tst	r5, #1
  81              		.loc 1 1318 6 view .LVU20
  82 0036 03F10103 		add	r3, r3, #1
  83 003a DBB2     		uxtb	r3, r3
  84              		.loc 1 1318 29 view .LVU21
  85 003c 0CBF     		ite	eq
  86 003e 0322     		moveq	r2, #3
  87 0040 0422     		movne	r2, #4
  88              		.loc 1 1318 5 view .LVU22
  89 0042 9342     		cmp	r3, r2
1319:src/keys.c    **** 		return val;
1320:src/keys.c    **** 	State2.digval = val;
  90              		.loc 1 1320 2 is_stmt 1 view .LVU23
  91              		.loc 1 1320 16 is_stmt 0 view .LVU24
  92 0044 18BF     		it	ne
  93 0046 3481     		strhne	r4, [r6, #8]	@ movhi
1321:src/keys.c    **** 	return -1;
  94              		.loc 1 1321 2 is_stmt 1 view .LVU25
1318:src/keys.c    **** 		return val;
  95              		.loc 1 1318 5 is_stmt 0 view .LVU26
  96 0048 F372     		strb	r3, [r6, #11]
  97              		.loc 1 1321 9 view .LVU27
ARM GAS  /tmp/ccihcwFT.s 			page 26


  98 004a 18BF     		it	ne
  99 004c 4FF0FF34 		movne	r4, #-1
 100              	.LVL4:
 101              	.L1:
1322:src/keys.c    **** }
 102              		.loc 1 1322 1 view .LVU28
 103 0050 2046     		mov	r0, r4
 104 0052 70BD     		pop	{r4, r5, r6, pc}
 105              	.LVL5:
 106              	.L6:
 107              		.loc 1 1322 1 view .LVU29
 108              		.align	2
 109              	.L5:
 110 0054 00000000 		.word	main_ram
 111 0058 00000000 		.word	StateWhileOn
 112 005c 67666666 		.word	1717986919
 113              		.cfi_endproc
 114              	.LFE25:
 116              		.section	.text.check_f_key,"ax",%progbits
 117              		.align	1
 118              		.p2align 2,,3
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu fpv4-sp-d16
 124              	check_f_key:
 125              	.LVL6:
 126              	.LFB17:
 655:src/keys.c    **** 	const int code = 100 + n;
 127              		.loc 1 655 47 is_stmt 1 view -0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 656:src/keys.c    **** 	unsigned int pc = state_pc();
 131              		.loc 1 656 2 view .LVU31
 655:src/keys.c    **** 	const int code = 100 + n;
 132              		.loc 1 655 47 is_stmt 0 view .LVU32
 133 0000 38B5     		push	{r3, r4, r5, lr}
 134              		.cfi_def_cfa_offset 16
 135              		.cfi_offset 3, -16
 136              		.cfi_offset 4, -12
 137              		.cfi_offset 5, -8
 138              		.cfi_offset 14, -4
 659:src/keys.c    **** 		if (isXROM(pc))
 139              		.loc 1 659 6 view .LVU33
 140 0002 0D4B     		ldr	r3, .L17
 141 0004 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 142              	.LVL7:
 657:src/keys.c    **** 
 143              		.loc 1 657 2 is_stmt 1 view .LVU34
 659:src/keys.c    **** 		if (isXROM(pc))
 144              		.loc 1 659 2 view .LVU35
 659:src/keys.c    **** 		if (isXROM(pc))
 145              		.loc 1 659 5 is_stmt 0 view .LVU36
 146 0006 5B06     		lsls	r3, r3, #25
 655:src/keys.c    **** 	const int code = 100 + n;
 147              		.loc 1 655 47 view .LVU37
ARM GAS  /tmp/ccihcwFT.s 			page 27


 148 0008 0C46     		mov	r4, r1
 659:src/keys.c    **** 		if (isXROM(pc))
 149              		.loc 1 659 5 view .LVU38
 150 000a 0FD5     		bpl	.L11
 657:src/keys.c    **** 
 151              		.loc 1 657 20 view .LVU39
 152 000c 0B4B     		ldr	r3, .L17+4
 153              	.LVL8:
 657:src/keys.c    **** 
 154              		.loc 1 657 20 view .LVU40
 155 000e 1B68     		ldr	r3, [r3]
 156              	.LVL9:
 657:src/keys.c    **** 
 157              		.loc 1 657 15 view .LVU41
 158 0010 B3F8E037 		ldrh	r3, [r3, #2016]
 159              	.LVL10:
 660:src/keys.c    **** 			pc = 1;
 160              		.loc 1 660 3 is_stmt 1 view .LVU42
 660:src/keys.c    **** 			pc = 1;
 161              		.loc 1 660 7 is_stmt 0 view .LVU43
 162 0014 9A0B     		lsrs	r2, r3, #14
 661:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 163              		.loc 1 661 7 view .LVU44
 164 0016 032A     		cmp	r2, #3
 165              	.LVL11:
 662:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 166              		.loc 1 662 3 is_stmt 1 view .LVU45
 656:src/keys.c    **** 	unsigned int pc = state_pc();
 167              		.loc 1 656 12 is_stmt 0 view .LVU46
 168 0018 00F16405 		add	r5, r0, #100
 169              	.LVL12:
 662:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 170              		.loc 1 662 7 view .LVU47
 171 001c 2946     		mov	r1, r5
 172              	.LVL13:
 662:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 173              		.loc 1 662 7 view .LVU48
 174 001e 14BF     		ite	ne
 175 0020 1846     		movne	r0, r3
 176              	.LVL14:
 662:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 177              		.loc 1 662 7 view .LVU49
 178 0022 0120     		moveq	r0, #1
 179 0024 0222     		movs	r2, #2
 180 0026 FFF7FEFF 		bl	find_label_from
 181              	.LVL15:
 662:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 182              		.loc 1 662 6 view .LVU50
 183 002a 08B9     		cbnz	r0, .L16
 184              	.LVL16:
 185              	.L11:
 665:src/keys.c    **** }
 186              		.loc 1 665 9 view .LVU51
 187 002c 2046     		mov	r0, r4
 666:src/keys.c    **** 
 188              		.loc 1 666 1 view .LVU52
 189 002e 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/ccihcwFT.s 			page 28


 190              	.LVL17:
 191              	.L16:
 663:src/keys.c    **** 	}
 192              		.loc 1 663 4 is_stmt 1 view .LVU53
 663:src/keys.c    **** 	}
 193              		.loc 1 663 11 is_stmt 0 view .LVU54
 194 0030 45F4C840 		orr	r0, r5, #25600
 666:src/keys.c    **** 
 195              		.loc 1 666 1 view .LVU55
 196 0034 38BD     		pop	{r3, r4, r5, pc}
 197              	.LVL18:
 198              	.L18:
 666:src/keys.c    **** 
 199              		.loc 1 666 1 view .LVU56
 200 0036 00BF     		.align	2
 201              	.L17:
 202 0038 00000000 		.word	StateWhileOn
 203 003c 00000000 		.word	main_ram
 204              		.cfi_endproc
 205              	.LFE17:
 207              		.section	.text.is_label_or_end_at,"ax",%progbits
 208              		.align	1
 209              		.p2align 2,,3
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 213              		.fpu fpv4-sp-d16
 215              	is_label_or_end_at:
 216              	.LVL19:
 217              	.LFB49:
1323:src/keys.c    **** 
1324:src/keys.c    **** static int gtodot_fkey(int n) {
1325:src/keys.c    **** 	const int code = 100 + n;
1326:src/keys.c    **** 	unsigned int pc = state_pc();
1327:src/keys.c    **** 
1328:src/keys.c    **** 	if(isXROM(pc))
1329:src/keys.c    **** 		pc = 1;
1330:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
1331:src/keys.c    **** 	if (pc > 0)
1332:src/keys.c    **** 		return pc;
1333:src/keys.c    **** 	return state_pc();
1334:src/keys.c    **** }
1335:src/keys.c    **** 
1336:src/keys.c    **** static int process_gtodot(const keycode c) {
1337:src/keys.c    **** 	int pc = -1;
1338:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
1339:src/keys.c    **** 
1340:src/keys.c    **** 	if (rawpc <= 9) {
1341:src/keys.c    **** 		// Digit 0 - 9
1342:src/keys.c    **** 		pc = gtodot_digit(rawpc);
1343:src/keys.c    **** 	}
1344:src/keys.c    **** #ifdef DM42
1345:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regX_idx) rawpc = gtodot_digit(1); 
1346:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
1347:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
1348:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
1349:src/keys.c    **** #endif
ARM GAS  /tmp/ccihcwFT.s 			page 29


1350:src/keys.c    **** 	else if (c >= K00 && c <= K03) {
1351:src/keys.c    **** 		// A - D
1352:src/keys.c    **** 		rawpc = gtodot_fkey(c - K00);
1353:src/keys.c    **** 		goto fin;
1354:src/keys.c    **** 	}
1355:src/keys.c    **** 	else if (c == K62) {
1356:src/keys.c    **** 		// .
1357:src/keys.c    **** 		rawpc = ProgSize;
1358:src/keys.c    **** 		goto fin;
1359:src/keys.c    **** 	}
1360:src/keys.c    **** 	else if (c == K20) {
1361:src/keys.c    **** 		// ENTER - short circuit processing
1362:src/keys.c    **** 		pc = State2.digval;
1363:src/keys.c    **** 	}
1364:src/keys.c    **** 	else if (c == K24) {
1365:src/keys.c    **** 		// backspace
1366:src/keys.c    **** 		if (State2.numdigit == 0) {
1367:src/keys.c    **** 			goto fin2;
1368:src/keys.c    **** 		} else {
1369:src/keys.c    **** 			State2.numdigit--;
1370:src/keys.c    **** 			State2.digval /= 10;
1371:src/keys.c    **** 		}
1372:src/keys.c    **** 	}
1373:src/keys.c    **** 	else if (c == K_UP) {
1374:src/keys.c    **** 		// up
1375:src/keys.c    **** 		rawpc = state_pc();
1376:src/keys.c    **** 		if (rawpc == 1)
1377:src/keys.c    **** 			rawpc = 0;
1378:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
1379:src/keys.c    **** 		update_program_bounds(1);
1380:src/keys.c    **** 		rawpc = ProgBegin;
1381:src/keys.c    **** 		goto fin;
1382:src/keys.c    **** 	}
1383:src/keys.c    **** 	else if (c == K_DOWN) {
1384:src/keys.c    **** 		// down
1385:src/keys.c    **** 		update_program_bounds(1);
1386:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
1387:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
1388:src/keys.c    **** 			rawpc = 1;
1389:src/keys.c    **** 		goto fin;
1390:src/keys.c    **** 	}
1391:src/keys.c    **** 	if (pc >= 0) {
1392:src/keys.c    **** 		rawpc = find_user_pc(pc);
1393:src/keys.c    **** fin:		set_pc(rawpc);
1394:src/keys.c    **** fin2:		State2.gtodot = 0;
1395:src/keys.c    **** 		State2.digval = 0;
1396:src/keys.c    **** 		State2.numdigit = 0;
1397:src/keys.c    **** 	}
1398:src/keys.c    **** 	return STATE_UNFINISHED;
1399:src/keys.c    **** }
1400:src/keys.c    **** 
1401:src/keys.c    **** 
1402:src/keys.c    **** /* Process a keystroke in alpha mode
1403:src/keys.c    ****  */
1404:src/keys.c    **** static int process_alpha(const keycode c) {
1405:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
1406:src/keys.c    ****         int op = STATE_UNFINISHED;
ARM GAS  /tmp/ccihcwFT.s 			page 30


1407:src/keys.c    **** 	const enum shifts shift = reset_shift();
1408:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
1409:src/keys.c    **** 	State2.alpha_pos = 0;
1410:src/keys.c    **** 
1411:src/keys.c    **** 	switch (c) {
1412:src/keys.c    **** 	case K10:	// STO
1413:src/keys.c    **** 		if (shift == SHIFT_F) {
1414:src/keys.c    **** 			init_arg(RARG_ASTO);
1415:src/keys.c    **** 			return STATE_UNFINISHED;
1416:src/keys.c    **** 		}
1417:src/keys.c    **** 		break;
1418:src/keys.c    **** 
1419:src/keys.c    **** 	case K11:	// RCL - maybe view
1420:src/keys.c    **** 		if (shift == SHIFT_F) {
1421:src/keys.c    **** 			init_arg(RARG_ARCL);
1422:src/keys.c    **** 			return STATE_UNFINISHED;
1423:src/keys.c    **** 		} else if (shift == SHIFT_H) {
1424:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
1425:src/keys.c    **** 			return STATE_UNFINISHED;
1426:src/keys.c    **** 		}
1427:src/keys.c    **** 		break;
1428:src/keys.c    **** 
1429:src/keys.c    **** 	case K20:	// Enter - maybe exit alpha mode
1430:src/keys.c    **** 		if (shift == SHIFT_G || shift == SHIFT_H)
1431:src/keys.c    **** 			break;
1432:src/keys.c    **** 		if (shift == SHIFT_F && ! State2.runmode) {
1433:src/keys.c    **** 			State2.multi = 1;
1434:src/keys.c    **** 			State2.numdigit = 0;
1435:src/keys.c    **** 			CmdBase = DBL_ALPHA;
1436:src/keys.c    **** 			return STATE_UNFINISHED;
1437:src/keys.c    **** 		}
1438:src/keys.c    **** 		State2.alphas = 0;
1439:src/keys.c    **** 		State2.alphashift = 0;
1440:src/keys.c    **** #ifdef DM42
1441:src/keys.c    **** 		set_menu(-1);
1442:src/keys.c    **** 		display_current_menu();
1443:src/keys.c    **** #endif
1444:src/keys.c    **** 		return op;
1445:src/keys.c    **** 
1446:src/keys.c    **** 	case K24:	// Clx - backspace, clear Alpha
1447:src/keys.c    **** 		if (shift == SHIFT_N)
1448:src/keys.c    **** 			return STATE_BACKSPACE;
1449:src/keys.c    **** 		if (shift == SHIFT_H)
1450:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
1451:src/keys.c    **** 		break;
1452:src/keys.c    **** 
1453:src/keys.c    **** 	case K_UP:
1454:src/keys.c    **** 	  if (shift == SHIFT_N) {
1455:src/keys.c    **** 	    if ( State2.runmode ) {
1456:src/keys.c    **** 	      // Alpha scroll left
1457:src/keys.c    **** #ifdef DM42
1458:src/keys.c    **** 	      /* 
1459:src/keys.c    **** 	       * The numbers 20 and 12 below should match the same 
1460:src/keys.c    **** 	       * numbers in display.c, lines 2414 and 2416.
1461:src/keys.c    **** 	       */
1462:src/keys.c    **** #ifdef BIGGER_DISPLAY
1463:src/keys.c    **** 	      if ((alpha_pos == 0) || (alen()-6*alpha_pos >= 20)) {
ARM GAS  /tmp/ccihcwFT.s 			page 31


1464:src/keys.c    **** 		alpha_pos += 1;
1465:src/keys.c    **** 	      }
1466:src/keys.c    **** #else
1467:src/keys.c    **** 	      if ((alpha_pos == 0) || (alen()-6*alpha_pos >= 12)) {
1468:src/keys.c    **** 		alpha_pos += 1;
1469:src/keys.c    **** 	      }
1470:src/keys.c    **** #endif
1471:src/keys.c    **** 	      State2.alpha_pos = alpha_pos;
1472:src/keys.c    **** #else
1473:src/keys.c    **** 	      int n = alpha_pos + 1;
1474:src/keys.c    **** 	      State2.alpha_pos = ( n < ( alen() + 5 ) / 6 ) ? n : alpha_pos;
1475:src/keys.c    **** #endif
1476:src/keys.c    **** 	      return STATE_UNFINISHED;
1477:src/keys.c    **** 	    }
1478:src/keys.c    **** 	    return STATE_BST;
1479:src/keys.c    **** 	  }
1480:src/keys.c    **** 	  break;
1481:src/keys.c    **** 
1482:src/keys.c    **** 	case K_DOWN:
1483:src/keys.c    **** 	  if (shift == SHIFT_N) {
1484:src/keys.c    **** 	    if ( State2.runmode ) {
1485:src/keys.c    **** 	      // Alpha scroll right
1486:src/keys.c    **** 	      if (alpha_pos > 0)
1487:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
1488:src/keys.c    **** 	      return STATE_UNFINISHED;
1489:src/keys.c    **** 	    }
1490:src/keys.c    **** 	    return STATE_SST;
1491:src/keys.c    **** 	  }
1492:src/keys.c    **** 	  break;
1493:src/keys.c    **** 
1494:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
1495:src/keys.c    **** 		if (shift == SHIFT_F)
1496:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
1497:src/keys.c    **** 		else if (shift == SHIFT_H)
1498:src/keys.c    **** 			return OP_NIL | OP_OFF;
1499:src/keys.c    **** 		else if (shift == SHIFT_N) {
1500:src/keys.c    **** #ifdef DM42
1501:src/keys.c    **** 		  set_menu(-1);
1502:src/keys.c    **** 		  display_current_menu();
1503:src/keys.c    **** #endif
1504:src/keys.c    **** 		  init_state();
1505:src/keys.c    **** 		}
1506:src/keys.c    **** 		return STATE_UNFINISHED;
1507:src/keys.c    **** 
1508:src/keys.c    **** 	case K63:
1509:src/keys.c    **** 		if (shift == SHIFT_F)
1510:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
1511:src/keys.c    **** 		break;
1512:src/keys.c    **** 
1513:src/keys.c    **** 	default:
1514:src/keys.c    **** 		break;
1515:src/keys.c    **** 	}
1516:src/keys.c    **** 
1517:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
1518:src/keys.c    **** 	if (ch == 0)
1519:src/keys.c    **** 		return STATE_UNFINISHED;
1520:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
ARM GAS  /tmp/ccihcwFT.s 			page 32


1521:src/keys.c    **** }
1522:src/keys.c    **** 
1523:src/keys.c    **** /*
1524:src/keys.c    ****  *  Code to handle all commands with arguments
1525:src/keys.c    ****  */
1526:src/keys.c    **** static void reset_arg(void) {
1527:src/keys.c    **** 	init_arg((enum rarg) 0);
1528:src/keys.c    **** 	State2.rarg = 0;
1529:src/keys.c    **** }
1530:src/keys.c    **** 
1531:src/keys.c    **** static int arg_eval(unsigned int val) {
1532:src/keys.c    **** 	const unsigned int base = CmdBase;
1533:src/keys.c    **** 	int r = RARG(base, val 
1534:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
1535:src/keys.c    **** 		           + (State2.local ? LOCAL_REG_BASE : 0));
1536:src/keys.c    **** 	const unsigned int ssize = (! UState.stack_depth || ! State2.runmode ) ? 4 : 8;
1537:src/keys.c    **** 
1538:src/keys.c    **** 	if (! State2.ind) {
1539:src/keys.c    **** 		/*
1540:src/keys.c    **** 		 *  Central argument checking for some commands
1541:src/keys.c    **** 		 */
1542:src/keys.c    **** #ifdef SHOW_COMPLEX_REGS
1543:src/keys.c    **** 		if (argcmds[base].cmplx && val > TOPREALREG - 2 ) {
1544:src/keys.c    **** 			// remap complex registers cY->T, cZ->A, cT->C
1545:src/keys.c    **** 			                     // 99,   X,   Y,   Z,   T,   A,   B,   C,   D,   L,   I,   J,   K
1546:src/keys.c    **** 			static char remap[] = {  0, 100, 102, 104, 106,   0,   0,   0,   0, 108,   0, 110,   0 };
1547:src/keys.c    **** 			val = (unsigned int) remap[ val - (TOPREALREG - 1) ];
1548:src/keys.c    **** 			if ( val == 0 )
1549:src/keys.c    **** 				return STATE_UNFINISHED;
1550:src/keys.c    **** 			r = RARG(base, val);
1551:src/keys.c    **** 		}
1552:src/keys.c    **** #else
1553:src/keys.c    **** 		if (argcmds[base].cmplx && (val > TOPREALREG - 2 && (val & 1)))
1554:src/keys.c    **** 			// Disallow odd complex register > 98
1555:src/keys.c    **** 			return STATE_UNFINISHED;
1556:src/keys.c    **** #endif
1557:src/keys.c    **** 		if ((base == RARG_STOSTK || base == RARG_RCLSTK) && (val > TOPREALREG - ssize))
1558:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
1559:src/keys.c    **** 			return STATE_UNFINISHED;
1560:src/keys.c    **** 	}
1561:src/keys.c    **** 	// Build op-code
1562:src/keys.c    **** 	reset_arg();
1563:src/keys.c    **** 	return r;
1564:src/keys.c    **** }
1565:src/keys.c    **** 
1566:src/keys.c    **** static int arg_digit(int n) {
1567:src/keys.c    **** 	int lim;
1568:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1569:src/keys.c    **** 	int dispmode = get_dispmode_digs(&lim);
1570:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
1571:src/keys.c    **** #else
1572:src/keys.c    **** 	const unsigned int base = CmdBase;
1573:src/keys.c    **** #endif
1574:src/keys.c    **** 	const unsigned int val = State2.digval * 10 + n;
1575:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
1576:src/keys.c    **** 	
1577:src/keys.c    **** 	if (State2.local) {
ARM GAS  /tmp/ccihcwFT.s 			page 33


1578:src/keys.c    **** 		// Handle local registers and flags
1579:src/keys.c    **** 		lim = MAX_LOCAL_DIRECT - 1;				// default
1580:src/keys.c    **** 		if (State2.runmode) {
1581:src/keys.c    **** 			if (LocalRegs == 0)
1582:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
1583:src/keys.c    **** 			if (is_reg) {
1584:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
1585:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
1586:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
1587:src/keys.c    **** 			}
1588:src/keys.c    **** 		}
1589:src/keys.c    **** 	}
1590:src/keys.c    **** 	else if (is_reg)						// normal register
1591:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
1592:src/keys.c    **** 	else {
1593:src/keys.c    **** 		lim = (int) argcmds[base].lim;				// any other command
1594:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
1595:src/keys.c    **** 			lim = RARG_IND - 1;
1596:src/keys.c    **** 	}
1597:src/keys.c    **** 	if ((int) val > lim)
1598:src/keys.c    **** 		return STATE_UNFINISHED;
1599:src/keys.c    **** 
1600:src/keys.c    **** 	State2.digval = val;
1601:src/keys.c    **** 	++State2.numdigit;
1602:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
1603:src/keys.c    **** 		int result = arg_eval(val);
1604:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
1605:src/keys.c    **** 			--State2.numdigit;
1606:src/keys.c    **** 			State2.digval /= 10;
1607:src/keys.c    **** 		}
1608:src/keys.c    **** 		return result;
1609:src/keys.c    **** 	}
1610:src/keys.c    **** 	return STATE_UNFINISHED;
1611:src/keys.c    **** }
1612:src/keys.c    **** 
1613:src/keys.c    **** static int arg_fkey(int n) {
1614:src/keys.c    **** 	const unsigned int b = CmdBase;
1615:src/keys.c    **** 
1616:src/keys.c    **** 	if (argcmds[b].label || (b >= RARG_SF && b <= RARG_FCF))
1617:src/keys.c    **** 	{
1618:src/keys.c    **** 		if (State2.ind || State2.numdigit > 0)
1619:src/keys.c    **** 			return STATE_UNFINISHED;
1620:src/keys.c    **** 		if (argcmds[b].lim < 100)
1621:src/keys.c    **** 			return STATE_UNFINISHED;
1622:src/keys.c    **** 		return arg_eval(n + 100);
1623:src/keys.c    **** 	}
1624:src/keys.c    **** 	return STATE_UNFINISHED;
1625:src/keys.c    **** }
1626:src/keys.c    **** 
1627:src/keys.c    **** static int arg_storcl_check(const unsigned int b, const int cmplx) {
1628:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
1629:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || b == RARG_FLRCL ||
1630:src/keys.c    **** 			(cmplx && (b == RARG_CSTO || b == RARG_CRCL || b == RARG_FLCRCL)));
1631:src/keys.c    **** #else
1632:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || (cmplx && (b == RARG_CSTO || b == RARG_CRCL )));
1633:src/keys.c    **** #endif
1634:src/keys.c    **** }
ARM GAS  /tmp/ccihcwFT.s 			page 34


1635:src/keys.c    **** 
1636:src/keys.c    **** static int arg_storcl(const unsigned int n, int cmplx) {
1637:src/keys.c    **** 	unsigned int b = CmdBase;
1638:src/keys.c    **** 
1639:src/keys.c    **** 	if (arg_storcl_check(b, cmplx)) {
1640:src/keys.c    **** 		CmdBase += n;
1641:src/keys.c    **** 		return 1;
1642:src/keys.c    **** 	}
1643:src/keys.c    **** 	/* And we can turn off the operation too */
1644:src/keys.c    **** 	if (b >= n) {
1645:src/keys.c    **** 		b -= n;
1646:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
1647:src/keys.c    **** 			CmdBase = b;
1648:src/keys.c    **** 			return 1;
1649:src/keys.c    **** 		}
1650:src/keys.c    **** 	}
1651:src/keys.c    **** 	return 0;
1652:src/keys.c    **** }
1653:src/keys.c    **** 
1654:src/keys.c    **** static int process_arg_dot(const unsigned int base) {
1655:src/keys.c    **** 
1656:src/keys.c    **** 	if (State2.numdigit == 0) {
1657:src/keys.c    **** 		// Only valid at beginning of entry
1658:src/keys.c    **** 		if (State2.dot || State2.local) {
1659:src/keys.c    **** 			// '..' or ENTER '.' = X
1660:src/keys.c    **** 			State2.local = 0;
1661:src/keys.c    **** 			return arg_eval(regX_idx);
1662:src/keys.c    **** 		}
1663:src/keys.c    **** 		if (argcmds[base].local || State2.ind) {
1664:src/keys.c    **** 			// local register or flag select
1665:src/keys.c    **** 			State2.local = 1;
1666:src/keys.c    **** 		}
1667:src/keys.c    **** 		else if (base == RARG_GTO || base == RARG_XEQ) {
1668:src/keys.c    **** 			// Special GTO . sequence
1669:src/keys.c    **** 			if (! State2.ind) {
1670:src/keys.c    **** 				State2.gtodot = 1;
1671:src/keys.c    **** 				reset_arg();
1672:src/keys.c    **** 			}
1673:src/keys.c    **** 		}
1674:src/keys.c    **** 	}
1675:src/keys.c    **** 	return STATE_UNFINISHED;
1676:src/keys.c    **** }
1677:src/keys.c    **** 
1678:src/keys.c    **** static int process_arg_shuffle(int r) {
1679:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
1680:src/keys.c    **** 	if (State2.numdigit < 4)
1681:src/keys.c    **** 		return STATE_UNFINISHED;
1682:src/keys.c    **** 	return arg_eval(State2.digval);
1683:src/keys.c    **** }
1684:src/keys.c    **** 
1685:src/keys.c    **** 
1686:src/keys.c    **** static int process_arg(const keycode c) {
1687:src/keys.c    **** 	unsigned int base = CmdBase;
1688:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
1689:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
1690:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
1691:src/keys.c    **** 	const enum shifts shift = reset_shift();
ARM GAS  /tmp/ccihcwFT.s 			page 35


1692:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
1693:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
1694:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
1695:src/keys.c    **** 
1696:src/keys.c    **** 	n &= ~NO_SHORT;
1697:src/keys.c    **** 	if (base >= NUM_RARG) {
1698:src/keys.c    **** 		reset_arg();
1699:src/keys.c    **** 		return STATE_UNFINISHED;
1700:src/keys.c    **** 	}
1701:src/keys.c    **** #ifdef DM42
1702:src/keys.c    **** 	if ( ! shorthand && ! State2.dot && ! State2.shuffle ) {
1703:src/keys.c    **** 	  switch (n) {
1704:src/keys.c    **** 	  case regX_idx:
1705:src/keys.c    **** 	    return arg_digit(1);
1706:src/keys.c    **** 	  case regY_idx:
1707:src/keys.c    **** 	    return arg_digit(2);
1708:src/keys.c    **** 	  case regZ_idx:
1709:src/keys.c    **** 	    return arg_digit(3);
1710:src/keys.c    **** 	  case regT_idx:
1711:src/keys.c    **** 	    return arg_digit(4);
1712:src/keys.c    **** 	  case 5:
1713:src/keys.c    **** 	  case 6:
1714:src/keys.c    **** 	  case 7:
1715:src/keys.c    **** 	  case 8:
1716:src/keys.c    **** 	  case 9:
1717:src/keys.c    **** 	  case 0:
1718:src/keys.c    **** 	    return arg_digit(n);
1719:src/keys.c    **** 	  }
1720:src/keys.c    **** 	}
1721:src/keys.c    **** #else
1722:src/keys.c    **** 	if (n <= 9 && ! shorthand && ! State2.dot && ! State2.shuffle)
1723:src/keys.c    **** 		return arg_digit(n);
1724:src/keys.c    **** #endif	
1725:src/keys.c    **** 	if (shorthand)
1726:src/keys.c    **** 		// row column shorthand addressing
1727:src/keys.c    **** 		return arg_eval(keycode_to_row_column(c));
1728:src/keys.c    **** 
1729:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1730:src/keys.c    **** #ifdef DM42
1731:src/keys.c    **** 	if (base == RARG_FIX || base == RARG_SIG || base == RARG_SIG0) {
1732:src/keys.c    **** 		switch ((int)c) {
1733:src/keys.c    **** 		case K_UP:	// up arrow
1734:src/keys.c    **** 		  if (base == RARG_FIX) base = RARG_SIG;
1735:src/keys.c    **** 		  if (base == RARG_SIG) base = RARG_SIG0;
1736:src/keys.c    **** 		  if (base == RARG_SIG0) base = RARG_FIX;
1737:src/keys.c    **** 			break;
1738:src/keys.c    **** 		case K_DOWN:	// down arrow
1739:src/keys.c    **** 		case K01:	// B
1740:src/keys.c    **** 		  if (base == RARG_FIX) base = RARG_SIG0;
1741:src/keys.c    **** 		  if (base == RARG_SIG) base = RARG_FIX;
1742:src/keys.c    **** 		  if (base == RARG_SIG0) base = RARG_SIG;
1743:src/keys.c    **** 		}
1744:src/keys.c    **** 	}
1745:src/keys.c    **** 		CmdBase = base;
1746:src/keys.c    **** #else
1747:src/keys.c    **** 	if (base >= RARG_FIX && base <= RARG_SIG0) {
1748:src/keys.c    **** 		switch ((int)c) {
ARM GAS  /tmp/ccihcwFT.s 			page 36


1749:src/keys.c    **** 		case K_UP:	// up arrow
1750:src/keys.c    **** 			if (--base < RARG_FIX)
1751:src/keys.c    **** 				base = RARG_SIG0;
1752:src/keys.c    **** 			break;
1753:src/keys.c    **** 
1754:src/keys.c    **** 		case K_DOWN:	// down arrow
1755:src/keys.c    **** 		case K01:	// B
1756:src/keys.c    **** 			if (++base > RARG_SIG0)
1757:src/keys.c    **** 				base = RARG_FIX;
1758:src/keys.c    **** 			break;
1759:src/keys.c    **** 		}
1760:src/keys.c    **** 		CmdBase = base;
1761:src/keys.c    **** 	}
1762:src/keys.c    **** #endif
1763:src/keys.c    **** #endif
1764:src/keys.c    **** 	/*
1765:src/keys.c    **** 	 *  So far, we've got the digits and some special label addressing keys
1766:src/keys.c    **** 	 *  Handle the rest here.
1767:src/keys.c    **** 	 */
1768:src/keys.c    **** 	switch ((int)c) {
1769:src/keys.c    **** 	case K_F:
1770:src/keys.c    **** 		if (label_addressing)
1771:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
1772:src/keys.c    **** 		break;
1773:src/keys.c    **** 
1774:src/keys.c    **** 	case K_ARROW:		// arrow
1775:src/keys.c    **** 		if (!State2.dot && argcmds[base].indirectokay) {
1776:src/keys.c    **** 			State2.ind = ! State2.ind;
1777:src/keys.c    **** 			if (! stack_reg)
1778:src/keys.c    **** 				State2.dot = 0;
1779:src/keys.c    **** 		}
1780:src/keys.c    **** 		break;
1781:src/keys.c    **** 
1782:src/keys.c    **** 	case K_CMPLX:
1783:src/keys.c    **** 		if (State2.ind || State2.dot)
1784:src/keys.c    **** 			break;
1785:src/keys.c    **** 		if (base == RARG_STO)
1786:src/keys.c    **** 			CmdBase = RARG_STOM;
1787:src/keys.c    **** 		else if (base == RARG_RCL)
1788:src/keys.c    **** 			CmdBase = RARG_RCLM;
1789:src/keys.c    **** 		break;
1790:src/keys.c    **** #ifdef DM42
1791:src/keys.c    **** 	case K41:       // T
1792:src/keys.c    **** 	  if (State2.shuffle)
1793:src/keys.c    **** 	    return process_arg_shuffle(3);
1794:src/keys.c    **** 	case K51:       // X
1795:src/keys.c    **** 	  if (State2.shuffle)
1796:src/keys.c    **** 	    return process_arg_shuffle(0);
1797:src/keys.c    **** 	case K52:	// Y
1798:src/keys.c    **** 	  if (State2.shuffle)
1799:src/keys.c    **** 	    return process_arg_shuffle(1);
1800:src/keys.c    **** 	case K53:       // Z
1801:src/keys.c    **** 	  if (State2.shuffle)
1802:src/keys.c    **** 	    return process_arg_shuffle(2);
1803:src/keys.c    **** #else
1804:src/keys.c    **** 	case K63:	// Y
1805:src/keys.c    **** 	  if (State2.shuffle)
ARM GAS  /tmp/ccihcwFT.s 			page 37


1806:src/keys.c    **** 	    return process_arg_shuffle(1);
1807:src/keys.c    **** #endif
1808:src/keys.c    **** 	case K00:	// A
1809:src/keys.c    **** 	case K01:	// B
1810:src/keys.c    **** 	case K02:	// C
1811:src/keys.c    **** 	case K03:	// D
1812:src/keys.c    **** #ifdef DM42
1813:src/keys.c    **** 	case K12:	// I (lastY)
1814:src/keys.c    **** 	case K13:	// J
1815:src/keys.c    **** 	case K14:	// K
1816:src/keys.c    **** 	case K15:	// L (lastX)
1817:src/keys.c    **** #else
1818:src/keys.c    **** 	case K12:	// I (lastY)
1819:src/keys.c    **** 	case K21:	// J
1820:src/keys.c    **** 	case K22:	// K
1821:src/keys.c    **** 	case K23:	// L (lastX)
1822:src/keys.c    **** #endif
1823:src/keys.c    **** 	  if (State2.dot || stack_reg)
1824:src/keys.c    **** 			return arg_eval(n);
1825:src/keys.c    **** 		if ( c <= K03 )
1826:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
1827:src/keys.c    **** 		break;
1828:src/keys.c    **** #ifdef DM42
1829:src/keys.c    **** 	case K62:	// '.'
1830:src/keys.c    **** 		return process_arg_dot(base);
1831:src/keys.c    **** 
1832:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
1833:src/keys.c    **** 	case K64:		// plus
1834:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
1835:src/keys.c    **** 			return arg_eval(n);
1836:src/keys.c    **** 		break;
1837:src/keys.c    **** 	case K54:               // minus
1838:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
1839:src/keys.c    **** 			reset_arg();
1840:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
1841:src/keys.c    **** 		}
1842:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
1843:src/keys.c    **** 		break;
1844:src/keys.c    **** 	case K44:		// multiply
1845:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
1846:src/keys.c    **** 			return arg_eval(n);
1847:src/keys.c    **** 		break;
1848:src/keys.c    **** 	case K34:
1849:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
1850:src/keys.c    **** 		break;
1851:src/keys.c    **** #else
1852:src/keys.c    **** 	case K62:	// X, '.'
1853:src/keys.c    **** 		if (State2.shuffle)
1854:src/keys.c    **** 			return process_arg_shuffle(0);
1855:src/keys.c    **** 		return process_arg_dot(base);
1856:src/keys.c    **** 
1857:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
1858:src/keys.c    **** 	case K64:		// Z register
1859:src/keys.c    **** 		if (State2.shuffle)
1860:src/keys.c    **** 			return process_arg_shuffle(2);
1861:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
1862:src/keys.c    **** 			return arg_eval(n);
ARM GAS  /tmp/ccihcwFT.s 			page 38


1863:src/keys.c    **** 		break;
1864:src/keys.c    **** 
1865:src/keys.c    **** 	case K54:
1866:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
1867:src/keys.c    **** 			reset_arg();
1868:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
1869:src/keys.c    **** 		}
1870:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
1871:src/keys.c    **** 		break;
1872:src/keys.c    **** 
1873:src/keys.c    **** 	case K44:		// T register
1874:src/keys.c    **** 		if (State2.shuffle)
1875:src/keys.c    **** 			return process_arg_shuffle(3);
1876:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
1877:src/keys.c    **** 			return arg_eval(n);
1878:src/keys.c    **** 		break;
1879:src/keys.c    **** 
1880:src/keys.c    **** 	case K34:
1881:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
1882:src/keys.c    **** 		break;
1883:src/keys.c    **** #endif
1884:src/keys.c    **** 	case K_UP:
1885:src/keys.c    **** 		arg_storcl(RARG_STO_MAX - RARG_STO, 0);
1886:src/keys.c    **** 		break;
1887:src/keys.c    **** 
1888:src/keys.c    **** 	case K_DOWN:
1889:src/keys.c    **** 		arg_storcl(RARG_STO_MIN - RARG_STO, 0);
1890:src/keys.c    **** 		break;
1891:src/keys.c    **** 
1892:src/keys.c    **** 	case K20:				// Enter is a short cut finisher but it also changes a few commands if it is first up
1893:src/keys.c    **** 		if (State2.numdigit == 0 && !State2.ind && !State2.dot) {
1894:src/keys.c    **** 			if (argcmds[base].label) {
1895:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
1896:src/keys.c    **** 				State2.multi = 1;
1897:src/keys.c    **** 				State2.alphashift = 0;
1898:src/keys.c    **** 				State2.rarg = 0;
1899:src/keys.c    **** 			} else if (base == RARG_SCI) {
1900:src/keys.c    **** 				reset_arg();
1901:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
1902:src/keys.c    **** 			} else if (base == RARG_ENG) {
1903:src/keys.c    **** 				reset_arg();
1904:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
1905:src/keys.c    **** 			} else if (argcmds[base].stckreg)
1906:src/keys.c    **** 				State2.dot = 1;
1907:src/keys.c    **** 		} else if (State2.numdigit > 0)
1908:src/keys.c    **** 			return arg_eval(State2.digval);
1909:src/keys.c    **** 		else if (stack_reg)
1910:src/keys.c    **** 			State2.dot = 1 - State2.dot;
1911:src/keys.c    **** 		break;
1912:src/keys.c    **** 
1913:src/keys.c    **** 	case K24:	// <-
1914:src/keys.c    **** 		if (State2.numdigit == 0) {
1915:src/keys.c    **** 			if (State2.dot)
1916:src/keys.c    **** 				State2.dot = 0;
1917:src/keys.c    **** 			else if (State2.local)
1918:src/keys.c    **** 				State2.local = 0;
1919:src/keys.c    **** 			else if (State2.ind)
ARM GAS  /tmp/ccihcwFT.s 			page 39


1920:src/keys.c    **** 				State2.ind = 0;
1921:src/keys.c    **** 			else
1922:src/keys.c    **** 				goto reset;
1923:src/keys.c    **** 		}
1924:src/keys.c    **** 		else {
1925:src/keys.c    **** 			--State2.numdigit;
1926:src/keys.c    **** 			if (State2.shuffle)
1927:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
1928:src/keys.c    **** 			else
1929:src/keys.c    **** 				State2.digval /= 10;
1930:src/keys.c    **** 		}
1931:src/keys.c    **** 		break;
1932:src/keys.c    **** 
1933:src/keys.c    **** 	case K60:
1934:src/keys.c    **** 	reset:
1935:src/keys.c    **** 		reset_arg();
1936:src/keys.c    **** 	default:
1937:src/keys.c    **** 		break;
1938:src/keys.c    **** 	}
1939:src/keys.c    **** 	return STATE_UNFINISHED;
1940:src/keys.c    **** }
1941:src/keys.c    **** 
1942:src/keys.c    **** 
1943:src/keys.c    **** /*
1944:src/keys.c    ****  *  Process arguments to the diverse test commands
1945:src/keys.c    ****  */
1946:src/keys.c    **** static int process_test(const keycode c) {
1947:src/keys.c    **** 	int r = State2.test;
1948:src/keys.c    **** 	int cmpx = State2.cmplx;
1949:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
1950:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
1951:src/keys.c    **** 
1952:src/keys.c    **** 	State2.test = TST_NONE;
1953:src/keys.c    **** 	State2.cmplx = 0;
1954:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
1955:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
1956:src/keys.c    **** 		// Lettered register
1957:src/keys.c    **** 		if (cmpx && (n & 1)) {
1958:src/keys.c    **** 			if (n == regI_idx)
1959:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
1960:src/keys.c    **** 			// Disallow odd complex registers > A
1961:src/keys.c    **** 			goto again;
1962:src/keys.c    **** 		}
1963:src/keys.c    **** 		// Return the command with the register completed
1964:src/keys.c    **** 		return RARG(base, n);
1965:src/keys.c    **** 	}
1966:src/keys.c    **** 	else if ( n == 0 ) {
1967:src/keys.c    **** 		// Special 0
1968:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq0 : OP_Xeq0) + r;
1969:src/keys.c    **** 	}
1970:src/keys.c    **** 	else if ( n == 1 ) {
1971:src/keys.c    **** 		// Special 1
1972:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq1 : OP_Xeq1) + r;
1973:src/keys.c    **** 	}
1974:src/keys.c    **** 	else if ( n <= 9 || c == K_ARROW || c == K62 ) {
1975:src/keys.c    **** 		// digit 2..9, -> or .
1976:src/keys.c    **** 		init_arg((enum rarg)base);
ARM GAS  /tmp/ccihcwFT.s 			page 40


1977:src/keys.c    **** 		return process_arg(c);
1978:src/keys.c    **** 	}
1979:src/keys.c    **** 
1980:src/keys.c    **** 	switch (c) {
1981:src/keys.c    **** 	case K11:					// tests vs register
1982:src/keys.c    **** 	case K20:
1983:src/keys.c    **** 		init_arg((enum rarg)base);
1984:src/keys.c    **** 		return STATE_UNFINISHED;
1985:src/keys.c    **** 
1986:src/keys.c    **** 	//case K60:
1987:src/keys.c    **** 	case K24:
1988:src/keys.c    **** 		return STATE_UNFINISHED;
1989:src/keys.c    **** 
1990:src/keys.c    **** 	default:
1991:src/keys.c    **** 		break;
1992:src/keys.c    **** 	}
1993:src/keys.c    **** again:
1994:src/keys.c    **** 	State2.test = r;
1995:src/keys.c    **** 	State2.cmplx = cmpx;
1996:src/keys.c    **** 	return STATE_UNFINISHED;
1997:src/keys.c    **** }
1998:src/keys.c    **** 
1999:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2000:src/keys.c    **** /*
2001:src/keys.c    ****  *  Build the user catalogue on the fly in RAM and return the number of entries
2002:src/keys.c    ****  */
2003:src/keys.c    **** #define USER_CAT_MAX 100
2004:src/keys.c    **** s_opcode UserCat[USER_CAT_MAX];
2005:src/keys.c    **** 
2006:src/keys.c    **** static int build_user_cat(void)
2007:src/keys.c    **** {
2008:src/keys.c    **** 	// find the label 'CAT'
2009:src/keys.c    **** 	const int lbl = OP_DBL + (DBL_LBL << DBL_SHIFT) + 'C' + ('A' << 16) + ('T' << 24);
2010:src/keys.c    **** 	unsigned int pc = findmultilbl(lbl, 0);
2011:src/keys.c    **** 	int len = 0;
2012:src/keys.c    **** 	while (pc && len < USER_CAT_MAX) {
2013:src/keys.c    **** 		// do a simnple insert-sort to sort the entries
2014:src/keys.c    **** 		char buf1[16];
2015:src/keys.c    **** 		int i;
2016:src/keys.c    **** 		s_opcode op;
2017:src/keys.c    **** 	next:
2018:src/keys.c    **** 		pc = do_inc(pc, 0);
2019:src/keys.c    **** 		op = (s_opcode) getprog(pc);
2020:src/keys.c    **** 		if (op == (OP_NIL | OP_END))
2021:src/keys.c    **** 			break;
2022:src/keys.c    **** 		if (isDBL(op))
2023:src/keys.c    **** 			continue;
2024:src/keys.c    **** 		if (isRARG(op)) {
2025:src/keys.c    **** 			const s_opcode rarg = RARG_CMD(op);
2026:src/keys.c    **** 			if (rarg != RARG_ALPHA && rarg != RARG_CONV
2027:src/keys.c    **** 			    && rarg != RARG_CONST && rarg != RARG_CONST_CMPLX)
2028:src/keys.c    **** 				op = op & 0xff00;	// remove argument
2029:src/keys.c    **** 		}
2030:src/keys.c    **** 		catcmd(op, buf1);
2031:src/keys.c    **** 		for (i = 0; i < len; ++i) {
2032:src/keys.c    **** 			// Find a position in the table to insert the new entry
2033:src/keys.c    **** 			char buf2[16];
ARM GAS  /tmp/ccihcwFT.s 			page 41


2034:src/keys.c    **** 			const char *p, *q;
2035:src/keys.c    **** 			int diff = 0;
2036:src/keys.c    **** 			if (op == UserCat[i]) {
2037:src/keys.c    **** 				// duplicate entry - ignore
2038:src/keys.c    **** 				goto next;
2039:src/keys.c    **** 			}
2040:src/keys.c    **** 			p = buf1;
2041:src/keys.c    **** 			if (*p == COMPLEX_PREFIX)
2042:src/keys.c    **** 				++p;
2043:src/keys.c    **** 			q = catcmd(UserCat[i], buf2);
2044:src/keys.c    **** 			if (*q == COMPLEX_PREFIX)
2045:src/keys.c    **** 				++q;
2046:src/keys.c    **** 			diff = 0;
2047:src/keys.c    **** 			while (*p != '\0' && diff == 0) {
2048:src/keys.c    **** 				diff = remap_chars(*q++) - remap_chars(*p++);
2049:src/keys.c    **** 			}
2050:src/keys.c    **** 			if ((diff == 0 && *q == 0) ) {
2051:src/keys.c    **** 				// identical according to sort order, insert after
2052:src/keys.c    **** 				++i;
2053:src/keys.c    **** 				break;
2054:src/keys.c    **** 			}
2055:src/keys.c    **** 			if (diff > 0) {
2056:src/keys.c    **** 				// insert new entry before the one found because this is greater
2057:src/keys.c    **** 				break;
2058:src/keys.c    **** 			}
2059:src/keys.c    **** 		}
2060:src/keys.c    **** 		if (i < len) {
2061:src/keys.c    **** 			// Make room
2062:src/keys.c    **** 			xcopy(UserCat + i + 1, UserCat + i, (len - i) << 1);
2063:src/keys.c    **** 		}
2064:src/keys.c    **** 		UserCat[i] = op;
2065:src/keys.c    **** 		++len;
2066:src/keys.c    **** 	}
2067:src/keys.c    **** 	// return the number of entries
2068:src/keys.c    **** 	return len;
2069:src/keys.c    **** }
2070:src/keys.c    **** #endif
2071:src/keys.c    **** 
2072:src/keys.c    **** /* Return the number of entries in the current catalogue.
2073:src/keys.c    ****  * These are all fixed size known at compile time so a table lookup will
2074:src/keys.c    ****  * likely be the most space efficient method.
2075:src/keys.c    ****  */
2076:src/keys.c    **** int current_catalogue_max(void) {
2077:src/keys.c    **** 	// A quick table of catalogue sizes
2078:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues' 
2079:src/keys.c    **** 	static const unsigned char catalogue_sizes[] = 
2080:src/keys.c    **** 	{
2081:src/keys.c    **** 		0, // NONE
2082:src/keys.c    **** 		SIZE_catalogue,
2083:src/keys.c    **** 		SIZE_cplx_catalogue,
2084:src/keys.c    **** 		SIZE_stats_catalogue,
2085:src/keys.c    **** 		SIZE_prob_catalogue,
2086:src/keys.c    **** 		SIZE_int_catalogue,
2087:src/keys.c    **** 		SIZE_prog_catalogue,
2088:src/keys.c    **** 		SIZE_program_xfcn,
2089:src/keys.c    **** 		SIZE_test_catalogue,
2090:src/keys.c    **** 		SIZE_mode_catalogue,
ARM GAS  /tmp/ccihcwFT.s 			page 42


2091:src/keys.c    **** 		SIZE_alpha_catalogue,
2092:src/keys.c    **** 		SIZE_alpha_symbols,
2093:src/keys.c    **** 		SIZE_alpha_compares,
2094:src/keys.c    **** 		SIZE_alpha_arrows,
2095:src/keys.c    **** 		SIZE_alpha_letters,
2096:src/keys.c    **** 		SIZE_alpha_subscripts,
2097:src/keys.c    **** 		NUM_CONSTS_CAT,
2098:src/keys.c    **** 		NUM_CONSTS_CAT,
2099:src/keys.c    **** 		SIZE_conv_catalogue,
2100:src/keys.c    **** 		SIZE_sums_catalogue,
2101:src/keys.c    **** 		SIZE_matrix_catalogue,
2102:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2103:src/keys.c    **** 		SIZE_internal_catalogue,
2104:src/keys.c    **** #endif
2105:src/keys.c    **** 	};
2106:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2107:src/keys.c    **** 	const int cat = State2.catalogue;
2108:src/keys.c    **** 	return cat == CATALOGUE_USER ? build_user_cat() : catalogue_sizes[cat];
2109:src/keys.c    **** #else
2110:src/keys.c    **** 	return catalogue_sizes[State2.catalogue];
2111:src/keys.c    **** #endif
2112:src/keys.c    **** }
2113:src/keys.c    **** 
2114:src/keys.c    **** 
2115:src/keys.c    **** /* Look up the character position in the given byte array and
2116:src/keys.c    ****  * build the alpha op-code for it.
2117:src/keys.c    ****  */
2118:src/keys.c    **** static opcode alpha_code(int n, const char tbl[]) {
2119:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
2120:src/keys.c    **** }
2121:src/keys.c    **** 
2122:src/keys.c    **** 
2123:src/keys.c    **** /* Return the opcode for entry n from the current catalogue
2124:src/keys.c    ****  */
2125:src/keys.c    **** opcode current_catalogue(int n) {
2126:src/keys.c    **** 	// A quick table of catalogue tables
2127:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues'
2128:src/keys.c    **** 	static const void *catalogues[] =
2129:src/keys.c    **** 	{
2130:src/keys.c    **** 		NULL, // NONE
2131:src/keys.c    **** 		catalogue,
2132:src/keys.c    **** 		cplx_catalogue,
2133:src/keys.c    **** 		stats_catalogue,
2134:src/keys.c    **** 		prob_catalogue,
2135:src/keys.c    **** 		int_catalogue,
2136:src/keys.c    **** 		prog_catalogue,
2137:src/keys.c    **** 		program_xfcn,
2138:src/keys.c    **** 		test_catalogue,
2139:src/keys.c    **** 		mode_catalogue,
2140:src/keys.c    **** 		alpha_catalogue,
2141:src/keys.c    **** 		alpha_symbols,
2142:src/keys.c    **** 		alpha_compares,
2143:src/keys.c    **** 		alpha_arrows,
2144:src/keys.c    **** 		alpha_letters,
2145:src/keys.c    **** 		alpha_subscripts,
2146:src/keys.c    **** 		NULL,
2147:src/keys.c    **** 		NULL,
ARM GAS  /tmp/ccihcwFT.s 			page 43


2148:src/keys.c    **** 		NULL, //CONV
2149:src/keys.c    **** 		sums_catalogue,
2150:src/keys.c    **** 		matrix_catalogue,
2151:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2152:src/keys.c    **** 		internal_catalogue,
2153:src/keys.c    **** #endif
2154:src/keys.c    **** 	};
2155:src/keys.c    **** 	const unsigned char *cat;
2156:src/keys.c    **** 	unsigned int c = State2.catalogue;
2157:src/keys.c    **** 	int m, i;
2158:src/keys.c    **** 	unsigned p, q;
2159:src/keys.c    **** 
2160:src/keys.c    **** 	if (c == CATALOGUE_CONST) {
2161:src/keys.c    **** 		if (n == OP_ZERO)
2162:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
2163:src/keys.c    **** 		return CONST(n);
2164:src/keys.c    **** 	}
2165:src/keys.c    **** 	if (c == CATALOGUE_COMPLEX_CONST) {
2166:src/keys.c    **** 		if (n == OP_ZERO)
2167:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
2168:src/keys.c    **** 		return CONST_CMPLX(n);
2169:src/keys.c    **** 	}
2170:src/keys.c    **** 	if (c == CATALOGUE_CONV) {
2171:src/keys.c    **** 		const int cnv = conv_catalogue[n];
2172:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
2173:src/keys.c    **** 			// Monadic conversion routine
2174:src/keys.c    **** 			return OP_MON | (cnv - SIZE_conv_catalogue);
2175:src/keys.c    **** 		else
2176:src/keys.c    **** 			return RARG(RARG_CONV, cnv);
2177:src/keys.c    **** 	}
2178:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2179:src/keys.c    **** 	if (c == CATALOGUE_USER)
2180:src/keys.c    **** 		return build_user_cat() ? UserCat[n] : STATE_IGNORE;
2181:src/keys.c    **** #endif
2182:src/keys.c    **** 
2183:src/keys.c    **** 	if (c == CATALOGUE_ALPHA_LETTERS && State2.alphashift)
2184:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
2185:src/keys.c    **** 	else
2186:src/keys.c    **** 		cat = (const unsigned char *) catalogues[c];
2187:src/keys.c    **** 
2188:src/keys.c    **** 	if (c >= CATALOGUE_ALPHA_SYMBOLS && c <= CATALOGUE_ALPHA_SUBSCRIPTS) {
2189:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
2190:src/keys.c    **** 	}
2191:src/keys.c    **** 	if (c >= sizeof(catalogues) / sizeof(void *))
2192:src/keys.c    **** 		return OP_NIL | OP_NOP;
2193:src/keys.c    **** 
2194:src/keys.c    **** 	/* Unpack the opcode */
2195:src/keys.c    **** 	cat += n + (n >> 2);
2196:src/keys.c    **** 	p = cat[0];
2197:src/keys.c    **** 	q = cat[1];
2198:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
2199:src/keys.c    **** 
2200:src/keys.c    **** 	/* Now figure out which opcode it really is */
2201:src/keys.c    **** 	for (i=0; i<KIND_MAX; i++) {
2202:src/keys.c    **** 		if (m < opcode_breaks[i])
2203:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
2204:src/keys.c    **** 		m -= opcode_breaks[i];
ARM GAS  /tmp/ccihcwFT.s 			page 44


2205:src/keys.c    **** 	}
2206:src/keys.c    **** 	return RARG_BASEOP(m);
2207:src/keys.c    **** }
2208:src/keys.c    **** 
2209:src/keys.c    **** 
2210:src/keys.c    **** /*
2211:src/keys.c    ****  *  Helper for navigation in alpha catalogues. Some charaters are not allowed
2212:src/keys.c    ****  *  in multi character commands.
2213:src/keys.c    ****  */
2214:src/keys.c    **** static int forbidden_alpha(int pos) {
2215:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
2216:src/keys.c    **** }
2217:src/keys.c    **** 
2218:src/keys.c    **** /*
2219:src/keys.c    ****  *  Catalogue navigation
2220:src/keys.c    ****  */
2221:src/keys.c    ****  static int process_catalogue(const keycode c, const enum shifts shift, const int is_multi) {
2222:src/keys.c    ****    int pos = State.catpos;
2223:src/keys.c    ****    int ch;
2224:src/keys.c    ****    const int ctmax = current_catalogue_max();
2225:src/keys.c    ****    const enum catalogues cat = (enum catalogues) State2.catalogue;
2226:src/keys.c    **** 
2227:src/keys.c    ****    if (shift == SHIFT_N) {
2228:src/keys.c    ****      switch (c) {
2229:src/keys.c    **** #ifdef DM42
2230:src/keys.c    ****      case K05:			// XEQ accepts command
2231:src/keys.c    **** #else	  
2232:src/keys.c    ****      case K30:			// XEQ accepts command
2233:src/keys.c    **** #endif						  
2234:src/keys.c    ****      case K20:			// Enter accepts command
2235:src/keys.c    ****        if (pos < ctmax && !(is_multi && forbidden_alpha(pos))) {
2236:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
2237:src/keys.c    **** 
2238:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2239:src/keys.c    **** 
2240:src/keys.c    **** 	 if (isRARG(op)) {
2241:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
2242:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
2243:src/keys.c    **** 	     return op;
2244:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
2245:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
2246:src/keys.c    **** 	   else
2247:src/keys.c    **** 	     init_arg(RARG_CMD(op));
2248:src/keys.c    **** 	 }
2249:src/keys.c    **** 	 else {
2250:src/keys.c    **** 	   return check_confirm(op);
2251:src/keys.c    **** 	 }
2252:src/keys.c    ****        } else
2253:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2254:src/keys.c    ****        return STATE_UNFINISHED;
2255:src/keys.c    **** 
2256:src/keys.c    ****      case K24:			// backspace
2257:src/keys.c    ****        if (CmdLineLength > 0 && Keyticks < 30) {
2258:src/keys.c    **** 	 if (--CmdLineLength > 0)
2259:src/keys.c    **** 	   goto search;
2260:src/keys.c    **** 	 pos = 0;
2261:src/keys.c    **** 	 goto set_pos;
ARM GAS  /tmp/ccihcwFT.s 			page 45


2262:src/keys.c    ****        } else
2263:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2264:src/keys.c    ****        return STATE_UNFINISHED;
2265:src/keys.c    **** 
2266:src/keys.c    ****      case K60:
2267:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2268:src/keys.c    ****        return STATE_UNFINISHED;
2269:src/keys.c    **** 
2270:src/keys.c    ****      case K_UP:
2271:src/keys.c    ****        CmdLineLength = 0;
2272:src/keys.c    ****        if (pos == 0)
2273:src/keys.c    **** 	 goto set_max;
2274:src/keys.c    ****        else
2275:src/keys.c    **** 	 --pos;
2276:src/keys.c    ****        goto set_pos;
2277:src/keys.c    **** 
2278:src/keys.c    ****      case K_DOWN:
2279:src/keys.c    ****        CmdLineLength = 0;
2280:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
2281:src/keys.c    ****        if (pos >= ctmax)
2282:src/keys.c    **** 	 pos = 0;
2283:src/keys.c    ****        goto set_pos;
2284:src/keys.c    **** 
2285:src/keys.c    ****      default:
2286:src/keys.c    ****        break;
2287:src/keys.c    ****      }
2288:src/keys.c    ****    } else if (shift == SHIFT_F) {
2289:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
2290:src/keys.c    ****        /*
2291:src/keys.c    **** 	* f 1/x in conversion catalogue
2292:src/keys.c    **** 	*/
2293:src/keys.c    ****        /* A small table of commands in pairs containing inverse commands.
2294:src/keys.c    **** 	* This table could be unsigned characters only storing the monadic kind.
2295:src/keys.c    **** 	* this saves twelve bytes in the table at a cost of some bytes in the code below.
2296:src/keys.c    **** 	* Not worth it since the maximum saving will be less than twelve bytes.
2297:src/keys.c    **** 	*/
2298:src/keys.c    ****        static const unsigned short int conv_mapping[] = {
2299:src/keys.c    **** 	 OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
2300:src/keys.c    **** 	 OP_MON | OP_DB_PR,	OP_MON | OP_PR_DB,
2301:src/keys.c    **** 	 OP_MON | OP_DEGC_F,	OP_MON | OP_DEGF_C,
2302:src/keys.c    **** 	 OP_MON | OP_DEG2RAD,	OP_MON | OP_RAD2DEG,
2303:src/keys.c    **** 	 OP_MON | OP_DEG2GRD,	OP_MON | OP_GRD2DEG,
2304:src/keys.c    **** 	 OP_MON | OP_RAD2GRD,	OP_MON | OP_GRD2RAD,
2305:src/keys.c    ****        };
2306:src/keys.c    ****        const opcode op = current_catalogue(pos);
2307:src/keys.c    ****        int i;
2308:src/keys.c    **** 
2309:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2310:src/keys.c    ****        if (isRARG(op))
2311:src/keys.c    **** 	 return op ^ 1;
2312:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
2313:src/keys.c    **** 	 if (op == conv_mapping[i])
2314:src/keys.c    **** 	   return conv_mapping[i^1];
2315:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
2316:src/keys.c    ****      }
2317:src/keys.c    ****      else if (c == K60 && (State2.alphas || State2.multi)) {
2318:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
ARM GAS  /tmp/ccihcwFT.s 			page 46


2319:src/keys.c    ****        State2.alphashift = 1 - State2.alphashift;
2320:src/keys.c    ****        return STATE_UNFINISHED;
2321:src/keys.c    ****      }
2322:src/keys.c    ****    } else if (shift == SHIFT_G) {
2323:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
2324:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2325:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
2326:src/keys.c    ****      }
2327:src/keys.c    ****    }
2328:src/keys.c    **** 
2329:src/keys.c    ****    /* We've got a key press, map it to a character and try to
2330:src/keys.c    ****     * jump to the appropriate catalogue entry.
2331:src/keys.c    ****     */
2332:src/keys.c    ****    ch = remap_chars(keycode_to_alpha(c, shift == SHIFT_G ? SHIFT_LC_G : shift));
2333:src/keys.c    ****    reset_shift();
2334:src/keys.c    ****    if (ch == '\0')
2335:src/keys.c    ****      return STATE_UNFINISHED;
2336:src/keys.c    ****    if (cat > CATALOGUE_ALPHA && cat < CATALOGUE_CONST) {
2337:src/keys.c    ****      // No multi character search in alpha catalogues
2338:src/keys.c    ****      CmdLineLength = 0;
2339:src/keys.c    ****    }
2340:src/keys.c    ****    if (CmdLineLength < 10)
2341:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
2342:src/keys.c    ****    /* Search for the current buffer in the catalogue */
2343:src/keys.c    **** 
2344:src/keys.c    ****  search:
2345:src/keys.c    ****    Cmdline[CmdLineLength] = '\0';
2346:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
2347:src/keys.c    ****      char buf[16];
2348:src/keys.c    ****      const char *cmd = catcmd(current_catalogue(pos), buf);
2349:src/keys.c    ****      int i;
2350:src/keys.c    **** 
2351:src/keys.c    ****      if (*cmd == COMPLEX_PREFIX)
2352:src/keys.c    ****        cmd++;
2353:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
2354:src/keys.c    ****        const int c = remap_chars(cmd[i]);
2355:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
2356:src/keys.c    ****        if (c > cl)
2357:src/keys.c    **** 	 goto set_pos;
2358:src/keys.c    ****        else if (c < cl)
2359:src/keys.c    **** 	 break;
2360:src/keys.c    ****      }
2361:src/keys.c    ****      if (Cmdline[i] == '\0')
2362:src/keys.c    ****        goto set_pos;
2363:src/keys.c    ****    }
2364:src/keys.c    ****  set_max:
2365:src/keys.c    ****    pos = ctmax - 1;
2366:src/keys.c    ****  set_pos:
2367:src/keys.c    ****    while (is_multi && pos && forbidden_alpha(pos))
2368:src/keys.c    ****      --pos;
2369:src/keys.c    ****    State.catpos = pos;
2370:src/keys.c    ****    return STATE_UNFINISHED;
2371:src/keys.c    ****  }
2372:src/keys.c    **** 
2373:src/keys.c    **** #ifndef REALBUILD
2374:src/keys.c    **** int find_pos(const char* text) {
2375:src/keys.c    **** 	int pos;
ARM GAS  /tmp/ccihcwFT.s 			page 47


2376:src/keys.c    **** 	const int ctmax = current_catalogue_max();
2377:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
2378:src/keys.c    **** 		char buf[16];
2379:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
2380:src/keys.c    **** 		int i;
2381:src/keys.c    **** 
2382:src/keys.c    **** 		if (*cmd == COMPLEX_PREFIX)
2383:src/keys.c    **** 			cmd++;
2384:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
2385:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
2386:src/keys.c    **** 			const int cl = remap_chars(text[i]);
2387:src/keys.c    **** 			if (c > cl)
2388:src/keys.c    **** 				return pos;
2389:src/keys.c    **** 			else if (c < cl)
2390:src/keys.c    **** 				break;
2391:src/keys.c    **** 		}
2392:src/keys.c    **** 		if (text[i] == '\0')
2393:src/keys.c    **** 			return pos;
2394:src/keys.c    **** 	}
2395:src/keys.c    **** 	return pos;
2396:src/keys.c    **** }
2397:src/keys.c    **** 
2398:src/keys.c    **** #endif
2399:src/keys.c    **** 
2400:src/keys.c    **** /* Multi (2) word instruction entry
2401:src/keys.c    ****  */
2402:src/keys.c    **** static void reset_multi(void) {
2403:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
2404:src/keys.c    **** 	State2.multi = 0;
2405:src/keys.c    **** 	if (! State2.alphas )
2406:src/keys.c    **** 		State2.alphashift = 0;
2407:src/keys.c    **** }
2408:src/keys.c    **** 
2409:src/keys.c    **** static int process_multi(const keycode c) {
2410:src/keys.c    **** 	enum shifts shift = reset_shift();
2411:src/keys.c    **** 	unsigned int ch = 0;
2412:src/keys.c    **** 	unsigned int opcode;
2413:src/keys.c    **** 
2414:src/keys.c    **** 	if (State2.catalogue) {
2415:src/keys.c    **** 		// Alpha catalogue from within multi character command
2416:src/keys.c    **** 		opcode = process_catalogue((const keycode)c, shift, State2.numdigit == 2);
2417:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
2418:src/keys.c    **** 			return opcode;
2419:src/keys.c    **** 		ch = (unsigned char) opcode;
2420:src/keys.c    **** 		goto add_char;
2421:src/keys.c    **** 	}
2422:src/keys.c    **** 
2423:src/keys.c    **** 	switch (c) {
2424:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
2425:src/keys.c    **** 		if (shift != SHIFT_N)
2426:src/keys.c    **** 				break;
2427:src/keys.c    **** 		reset_multi();
2428:src/keys.c    **** 		if (State2.numdigit == 0)
2429:src/keys.c    **** 			return STATE_UNFINISHED;
2430:src/keys.c    **** 		else if (State2.numdigit == 1)
2431:src/keys.c    **** 			State2.digval2 = 0;
2432:src/keys.c    **** 		goto fin;
ARM GAS  /tmp/ccihcwFT.s 			page 48


2433:src/keys.c    **** 
2434:src/keys.c    **** 	case K24:	// Clx - backspace, clear alpha
2435:src/keys.c    **** 		if (shift != SHIFT_H) {
2436:src/keys.c    **** 			if (State2.numdigit == 0)
2437:src/keys.c    **** 				reset_multi();
2438:src/keys.c    **** 			else
2439:src/keys.c    **** 				State2.numdigit--;
2440:src/keys.c    **** 			return STATE_UNFINISHED;
2441:src/keys.c    **** 		}
2442:src/keys.c    **** 		break;
2443:src/keys.c    **** 
2444:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
2445:src/keys.c    **** 		if (shift == SHIFT_F)
2446:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
2447:src/keys.c    **** 		else
2448:src/keys.c    **** 			reset_multi();
2449:src/keys.c    **** 		return STATE_UNFINISHED;
2450:src/keys.c    **** 
2451:src/keys.c    **** 	default:
2452:src/keys.c    **** 		break;
2453:src/keys.c    **** 		}
2454:src/keys.c    **** 
2455:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
2456:src/keys.c    **** 	ch = keycode_to_alpha(c, shift);
2457:src/keys.c    **** 	if (ch == 0)
2458:src/keys.c    **** 		return STATE_UNFINISHED;
2459:src/keys.c    **** add_char:
2460:src/keys.c    **** 	if (State2.numdigit == 0) {
2461:src/keys.c    **** 		State2.digval = ch;
2462:src/keys.c    **** 		State2.numdigit = 1;
2463:src/keys.c    **** 		return STATE_UNFINISHED;
2464:src/keys.c    **** 	} else if (State2.numdigit == 1) {
2465:src/keys.c    **** 		State2.digval2 = ch;
2466:src/keys.c    **** 		State2.numdigit = 2;
2467:src/keys.c    **** 		return STATE_UNFINISHED;
2468:src/keys.c    **** 	}
2469:src/keys.c    **** 	reset_multi();
2470:src/keys.c    **** 
2471:src/keys.c    **** fin:
2472:src/keys.c    **** 	opcode = OP_DBL + (CmdBase << DBL_SHIFT) 
2473:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
2474:src/keys.c    **** 	return opcode;
2475:src/keys.c    **** }
2476:src/keys.c    **** 
2477:src/keys.c    **** 
2478:src/keys.c    **** /* Handle YES/NO confirmations
2479:src/keys.c    ****  */
2480:src/keys.c    **** static int process_confirm(const keycode c) {
2481:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
2482:src/keys.c    **** 	switch (c) {
2483:src/keys.c    **** #ifdef DM42
2484:src/keys.c    **** 	case K52:
2485:src/keys.c    **** #endif
2486:src/keys.c    **** 	case K63:			// Yes
2487:src/keys.c    **** 	  switch (State2.confirm) {
2488:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
2489:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
ARM GAS  /tmp/ccihcwFT.s 			page 49


2490:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
2491:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
2492:src/keys.c    **** 	  }
2493:src/keys.c    **** 	case K24:
2494:src/keys.c    **** #ifdef DM42
2495:src/keys.c    **** 	case K22:
2496:src/keys.c    **** #else
2497:src/keys.c    **** 	case K32:
2498:src/keys.c    **** #endif
2499:src/keys.c    **** 	  // No
2500:src/keys.c    **** 	  State2.confirm = 0;
2501:src/keys.c    **** 	  State2.digval = 0;
2502:src/keys.c    **** 	  break;
2503:src/keys.c    **** 	default:			// No state change
2504:src/keys.c    **** 	  break;
2505:src/keys.c    **** 	}
2506:src/keys.c    **** 	return STATE_UNFINISHED;
2507:src/keys.c    **** }
2508:src/keys.c    **** 
2509:src/keys.c    **** 
2510:src/keys.c    **** /*
2511:src/keys.c    ****  *  STATUS
2512:src/keys.c    ****  */
2513:src/keys.c    **** static int process_status(const keycode c) {
2514:src/keys.c    **** 	int n = ((int)State2.status) - 3;
2515:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
2516:src/keys.c    **** 
2517:src/keys.c    **** 	if (c == K_UP) {
2518:src/keys.c    **** 		if (--n < -2)
2519:src/keys.c    **** 			n = max;
2520:src/keys.c    **** 	}
2521:src/keys.c    **** 	else if (c == K_DOWN) {
2522:src/keys.c    **** 		if (++n > max)
2523:src/keys.c    **** 			n = -2;
2524:src/keys.c    **** 	}
2525:src/keys.c    **** 	else if (c == K24 /* || c == K60 */) {
2526:src/keys.c    **** 		State2.status = 0;
2527:src/keys.c    **** 		return STATE_UNFINISHED;
2528:src/keys.c    **** 	} 
2529:src/keys.c    **** 	else {
2530:src/keys.c    **** 		int nn = keycode_to_digit_or_register(c) & 0x7f;
2531:src/keys.c    **** 		if (nn <= 9)
2532:src/keys.c    **** 			n = nn;
2533:src/keys.c    **** 		else if (nn == LOCAL_REG_BASE)
2534:src/keys.c    **** 			n = n == max ? 10 : max;
2535:src/keys.c    **** 		else if (nn != NO_REG)
2536:src/keys.c    **** 			n = 10; 
2537:src/keys.c    **** 	}
2538:src/keys.c    **** 	State2.status = n + 3;
2539:src/keys.c    **** 
2540:src/keys.c    **** 	return STATE_UNFINISHED;
2541:src/keys.c    **** }
2542:src/keys.c    **** 
2543:src/keys.c    **** 
2544:src/keys.c    **** /*
2545:src/keys.c    ****  *  CAT helper
2546:src/keys.c    ****  */
ARM GAS  /tmp/ccihcwFT.s 			page 50


2547:src/keys.c    **** static int is_label_or_end_at(unsigned int pc, int search_end) {
 218              		.loc 1 2547 64 is_stmt 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
2548:src/keys.c    **** 	const unsigned int op = getprog(pc);
 222              		.loc 1 2548 2 view .LVU58
2547:src/keys.c    **** 	const unsigned int op = getprog(pc);
 223              		.loc 1 2547 64 is_stmt 0 view .LVU59
 224 0000 10B5     		push	{r4, lr}
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 4, -8
 227              		.cfi_offset 14, -4
2547:src/keys.c    **** 	const unsigned int op = getprog(pc);
 228              		.loc 1 2547 64 view .LVU60
 229 0002 0C46     		mov	r4, r1
 230              		.loc 1 2548 26 view .LVU61
 231 0004 FFF7FEFF 		bl	getprog
 232              	.LVL20:
2549:src/keys.c    **** 
2550:src/keys.c    **** 	return op == (OP_NIL | OP_END) || (!search_end && (isDBL(op) && opDBL(op) == DBL_LBL));
 233              		.loc 1 2550 2 is_stmt 1 view .LVU62
 234              		.loc 1 2550 33 is_stmt 0 view .LVU63
 235 0008 B0F59D7F 		cmp	r0, #314
 236 000c 06D0     		beq	.L21
 237              		.loc 1 2550 53 discriminator 3 view .LVU64
 238 000e 00F47043 		and	r3, r0, #61440
 239              		.loc 1 2550 49 discriminator 3 view .LVU65
 240 0012 B3F5704F 		cmp	r3, #61440
 241 0016 03D0     		beq	.L24
 242              		.loc 1 2550 33 view .LVU66
 243 0018 0020     		movs	r0, #0
 244              	.LVL21:
2551:src/keys.c    **** }
 245              		.loc 1 2551 1 view .LVU67
 246 001a 10BD     		pop	{r4, pc}
 247              	.LVL22:
 248              	.L21:
2550:src/keys.c    **** }
 249              		.loc 1 2550 33 view .LVU68
 250 001c 0120     		movs	r0, #1
 251              	.LVL23:
 252              		.loc 1 2551 1 view .LVU69
 253 001e 10BD     		pop	{r4, pc}
 254              	.LVL24:
 255              	.L24:
2550:src/keys.c    **** }
 256              		.loc 1 2550 66 discriminator 5 view .LVU70
 257 0020 C0F30320 		ubfx	r0, r0, #8, #4
 258              	.LVL25:
2550:src/keys.c    **** }
 259              		.loc 1 2550 63 discriminator 5 view .LVU71
 260 0024 50EA0403 		orrs	r3, r0, r4
 261 0028 0CBF     		ite	eq
 262 002a 0120     		moveq	r0, #1
 263 002c 0020     		movne	r0, #0
 264              		.loc 1 2551 1 discriminator 5 view .LVU72
ARM GAS  /tmp/ccihcwFT.s 			page 51


 265 002e 10BD     		pop	{r4, pc}
 266              		.loc 1 2551 1 discriminator 5 view .LVU73
 267              		.cfi_endproc
 268              	.LFE49:
 270              		.section	.text.advance_to_next_label,"ax",%progbits
 271              		.align	1
 272              		.p2align 2,,3
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv4-sp-d16
 278              	advance_to_next_label:
 279              	.LVL26:
 280              	.LFB50:
2552:src/keys.c    **** 
2553:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end) {
 281              		.loc 1 2553 85 is_stmt 1 view -0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		.loc 1 2553 85 is_stmt 0 view .LVU75
 286 0000 70B5     		push	{r4, r5, r6, lr}
 287              		.cfi_def_cfa_offset 16
 288              		.cfi_offset 4, -16
 289              		.cfi_offset 5, -12
 290              		.cfi_offset 6, -8
 291              		.cfi_offset 14, -4
 292              		.loc 1 2553 85 view .LVU76
 293 0002 0446     		mov	r4, r0
2554:src/keys.c    **** 	do {
 294              		.loc 1 2554 2 is_stmt 1 view .LVU77
2555:src/keys.c    **** 		for (;;) {
 295              		.loc 1 2555 3 view .LVU78
2556:src/keys.c    **** 			if (inc) {
 296              		.loc 1 2556 4 view .LVU79
2553:src/keys.c    **** 	do {
 297              		.loc 1 2553 85 is_stmt 0 view .LVU80
 298 0004 1646     		mov	r6, r2
 299              		.loc 1 2556 7 view .LVU81
 300 0006 21B9     		cbnz	r1, .L29
 301              	.LVL27:
 302              	.L26:
2557:src/keys.c    **** 				pc = do_inc(pc, 0);
2558:src/keys.c    **** 				if (PcWrapped)
2559:src/keys.c    **** 					break;
2560:src/keys.c    **** 			}
2561:src/keys.c    **** 			else
2562:src/keys.c    **** 				inc = 1;
2563:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 303              		.loc 1 2563 4 is_stmt 1 view .LVU82
 304              		.loc 1 2563 8 is_stmt 0 view .LVU83
 305 0008 3146     		mov	r1, r6
 306 000a 2046     		mov	r0, r4
 307              		.loc 1 2563 8 view .LVU84
 308 000c FFF7FEFF 		bl	is_label_or_end_at
 309              	.LVL28:
 310              		.loc 1 2563 7 view .LVU85
ARM GAS  /tmp/ccihcwFT.s 			page 52


 311 0010 B8B9     		cbnz	r0, .L28
 312              	.LVL29:
 313              	.L29:
 314              		.loc 1 2563 7 view .LVU86
 315 0012 0D4D     		ldr	r5, .L37
 316              	.L30:
2557:src/keys.c    **** 				pc = do_inc(pc, 0);
 317              		.loc 1 2557 5 is_stmt 1 view .LVU87
2557:src/keys.c    **** 				pc = do_inc(pc, 0);
 318              		.loc 1 2557 10 is_stmt 0 view .LVU88
 319 0014 2046     		mov	r0, r4
 320 0016 0021     		movs	r1, #0
 321 0018 FFF7FEFF 		bl	do_inc
 322              	.LVL30:
2558:src/keys.c    **** 					break;
 323              		.loc 1 2558 8 view .LVU89
 324 001c 2B68     		ldr	r3, [r5]
2557:src/keys.c    **** 				pc = do_inc(pc, 0);
 325              		.loc 1 2557 10 view .LVU90
 326 001e 0446     		mov	r4, r0
 327              	.LVL31:
2558:src/keys.c    **** 					break;
 328              		.loc 1 2558 5 is_stmt 1 view .LVU91
2558:src/keys.c    **** 					break;
 329              		.loc 1 2558 8 is_stmt 0 view .LVU92
 330 0020 002B     		cmp	r3, #0
 331 0022 F1D0     		beq	.L26
2564:src/keys.c    **** 				return pc;
2565:src/keys.c    **** 			}
2566:src/keys.c    **** 		}
2567:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) + 1) & 3);
 332              		.loc 1 2567 3 is_stmt 1 view .LVU93
 333              		.loc 1 2567 8 is_stmt 0 view .LVU94
 334 0024 20F47F54 		bic	r4, r0, #16320
 335 0028 24F03F04 		bic	r4, r4, #63
 336 002c 04F58044 		add	r4, r4, #16384
 337 0030 A4B2     		uxth	r4, r4
 338              		.loc 1 2567 6 view .LVU95
 339 0032 44F00104 		orr	r4, r4, #1
 340              	.LVL32:
2568:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 341              		.loc 1 2568 10 is_stmt 1 view .LVU96
 342              		.loc 1 2568 13 is_stmt 0 view .LVU97
 343 0036 2046     		mov	r0, r4
 344 0038 3146     		mov	r1, r6
 345 003a FFF7FEFF 		bl	is_label_or_end_at
 346              	.LVL33:
 347              		.loc 1 2568 2 view .LVU98
 348 003e 0028     		cmp	r0, #0
 349 0040 E8D0     		beq	.L30
 350              	.L28:
2569:src/keys.c    **** 	return pc;
2570:src/keys.c    **** }
 351              		.loc 1 2570 1 view .LVU99
 352 0042 2046     		mov	r0, r4
 353 0044 70BD     		pop	{r4, r5, r6, pc}
 354              	.LVL34:
ARM GAS  /tmp/ccihcwFT.s 			page 53


 355              	.L38:
 356              		.loc 1 2570 1 view .LVU100
 357 0046 00BF     		.align	2
 358              	.L37:
 359 0048 00000000 		.word	PcWrapped
 360              		.cfi_endproc
 361              	.LFE50:
 363              		.section	.text.init_cat,"ax",%progbits
 364              		.align	1
 365              		.p2align 2,,3
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu fpv4-sp-d16
 371              	init_cat:
 372              	.LVL35:
 373              	.LFB12:
 519:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 374              		.loc 1 519 43 is_stmt 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 520:src/keys.c    **** 		// Save last catalogue for a later restore
 378              		.loc 1 520 2 view .LVU102
 519:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 379              		.loc 1 519 43 is_stmt 0 view .LVU103
 380 0000 38B5     		push	{r3, r4, r5, lr}
 381              		.cfi_def_cfa_offset 16
 382              		.cfi_offset 3, -16
 383              		.cfi_offset 4, -12
 384              		.cfi_offset 5, -8
 385              		.cfi_offset 14, -4
 520:src/keys.c    **** 		// Save last catalogue for a later restore
 386              		.loc 1 520 37 view .LVU104
 387 0002 384C     		ldr	r4, .L58
 520:src/keys.c    **** 		// Save last catalogue for a later restore
 388              		.loc 1 520 5 view .LVU105
 389 0004 0546     		mov	r5, r0
 390 0006 D0B9     		cbnz	r0, .L40
 520:src/keys.c    **** 		// Save last catalogue for a later restore
 391              		.loc 1 520 37 discriminator 1 view .LVU106
 392 0008 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 520:src/keys.c    **** 		// Save last catalogue for a later restore
 393              		.loc 1 520 28 discriminator 1 view .LVU107
 394 000a 43B1     		cbz	r3, .L41
 522:src/keys.c    **** 		CmdLineLength = 0;
 395              		.loc 1 522 3 is_stmt 1 view .LVU108
 522:src/keys.c    **** 		CmdLineLength = 0;
 396              		.loc 1 522 18 is_stmt 0 view .LVU109
 397 000c 364A     		ldr	r2, .L58+4
 523:src/keys.c    **** 	}
 398              		.loc 1 523 17 view .LVU110
 399 000e 2077     		strb	r0, [r4, #28]
 522:src/keys.c    **** 		CmdLineLength = 0;
 400              		.loc 1 522 18 view .LVU111
 401 0010 1268     		ldr	r2, [r2]
 402 0012 92F8DC17 		ldrb	r1, [r2, #2012]	@ zero_extendqisi2
ARM GAS  /tmp/ccihcwFT.s 			page 54


 403 0016 63F30401 		bfi	r1, r3, #0, #5
 404 001a 82F8DC17 		strb	r1, [r2, #2012]
 523:src/keys.c    **** 	}
 405              		.loc 1 523 3 is_stmt 1 view .LVU112
 406              	.L41:
 525:src/keys.c    **** 
 407              		.loc 1 525 2 view .LVU113
 408 001e FFF7FEFF 		bl	process_cmdline
 409              	.LVL36:
 527:src/keys.c    **** 	State2.registerlist = 0;
 410              		.loc 1 527 2 view .LVU114
 528:src/keys.c    **** 	State2.status = 0;
 411              		.loc 1 528 2 view .LVU115
 529:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 412              		.loc 1 529 2 view .LVU116
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 413              		.loc 1 554 16 is_stmt 0 view .LVU117
 414 0022 6369     		ldr	r3, [r4, #20]
 415 0024 23F04063 		bic	r3, r3, #201326592
 416 0028 23F40073 		bic	r3, r3, #512
 529:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 417              		.loc 1 529 16 view .LVU118
 418 002c 0022     		movs	r2, #0
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 419              		.loc 1 554 16 view .LVU119
 420 002e 6361     		str	r3, [r4, #20]
 529:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 421              		.loc 1 529 16 view .LVU120
 422 0030 2273     		strb	r2, [r4, #12]
 530:src/keys.c    **** 
 423              		.loc 1 530 2 is_stmt 1 view .LVU121
 532:src/keys.c    **** 	case CATALOGUE_LABELS:
 424              		.loc 1 532 2 view .LVU122
 553:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 425              		.loc 1 553 3 view .LVU123
 553:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 426              		.loc 1 553 20 is_stmt 0 view .LVU124
 427 0032 A273     		strb	r2, [r4, #14]
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 428              		.loc 1 554 3 is_stmt 1 view .LVU125
 555:src/keys.c    **** 			// Different catalogue, reset position
 429              		.loc 1 555 3 view .LVU126
 560:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 430              		.loc 1 560 2 view .LVU127
 431              	.LBB244:
 432              	.LBI244:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 433              		.loc 1 104 13 view .LVU128
 434              	.LBE244:
 105:src/keys.c    **** }
 435              		.loc 1 105 2 view .LVU129
 436              	.LVL37:
 437              	.LBB261:
 438              	.LBB245:
 439              	.LBI245:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 440              		.loc 1 94 20 view .LVU130
ARM GAS  /tmp/ccihcwFT.s 			page 55


 441              	.LBB246:
  95:src/keys.c    **** 	State2.shifts = shift;
 442              		.loc 1 95 2 view .LVU131
 443              	.LBB247:
 444              	.LBI247:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 445              		.loc 1 86 13 view .LVU132
 446              	.LBB248:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 447              		.loc 1 87 2 view .LVU133
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 448              		.loc 1 87 18 is_stmt 0 view .LVU134
 449 0034 FFF7FEFF 		bl	shift_down
 450              	.LVL38:
  88:src/keys.c    **** }
 451              		.loc 1 88 2 is_stmt 1 view .LVU135
 452              	.LBE248:
 453              	.LBE247:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 454              		.loc 1 96 2 view .LVU136
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 455              		.loc 1 96 16 is_stmt 0 view .LVU137
 456 0038 0023     		movs	r3, #0
 457 003a 2374     		strb	r3, [r4, #16]
  98:src/keys.c    **** }
 458              		.loc 1 98 2 is_stmt 1 view .LVU138
 459              	.LVL39:
  98:src/keys.c    **** }
 460              		.loc 1 98 2 is_stmt 0 view .LVU139
 461              	.LBE246:
 462              	.LBE245:
 463              	.LBE261:
 564:src/keys.c    **** 
 464              		.loc 1 564 1 view .LVU140
 465 003c 38BD     		pop	{r3, r4, r5, pc}
 466              	.LVL40:
 467              	.L40:
 525:src/keys.c    **** 
 468              		.loc 1 525 2 is_stmt 1 view .LVU141
 469 003e FFF7FEFF 		bl	process_cmdline
 470              	.LVL41:
 527:src/keys.c    **** 	State2.registerlist = 0;
 471              		.loc 1 527 2 view .LVU142
 528:src/keys.c    **** 	State2.status = 0;
 472              		.loc 1 528 2 view .LVU143
 527:src/keys.c    **** 	State2.registerlist = 0;
 473              		.loc 1 527 19 is_stmt 0 view .LVU144
 474 0042 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 529:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 475              		.loc 1 529 16 view .LVU145
 476 0044 0022     		movs	r2, #0
 527:src/keys.c    **** 	State2.registerlist = 0;
 477              		.loc 1 527 19 view .LVU146
 478 0046 23F00C03 		bic	r3, r3, #12
 532:src/keys.c    **** 	case CATALOGUE_LABELS:
 479              		.loc 1 532 2 view .LVU147
 480 004a 162D     		cmp	r5, #22
ARM GAS  /tmp/ccihcwFT.s 			page 56


 527:src/keys.c    **** 	State2.registerlist = 0;
 481              		.loc 1 527 19 view .LVU148
 482 004c E375     		strb	r3, [r4, #23]
 529:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 483              		.loc 1 529 2 is_stmt 1 view .LVU149
 529:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 484              		.loc 1 529 16 is_stmt 0 view .LVU150
 485 004e 2273     		strb	r2, [r4, #12]
 530:src/keys.c    **** 
 486              		.loc 1 530 2 is_stmt 1 view .LVU151
 530:src/keys.c    **** 
 487              		.loc 1 530 19 is_stmt 0 view .LVU152
 488 0050 A273     		strb	r2, [r4, #14]
 532:src/keys.c    **** 	case CATALOGUE_LABELS:
 489              		.loc 1 532 2 is_stmt 1 view .LVU153
 490 0052 1BD0     		beq	.L42
 491 0054 172D     		cmp	r5, #23
 492 0056 06D1     		bne	.L56
 548:src/keys.c    **** 		break;
 493              		.loc 1 548 3 view .LVU154
 548:src/keys.c    **** 		break;
 494              		.loc 1 548 17 is_stmt 0 view .LVU155
 495 0058 0123     		movs	r3, #1
 496 005a 2373     		strb	r3, [r4, #12]
 549:src/keys.c    **** 
 497              		.loc 1 549 3 is_stmt 1 view .LVU156
 560:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 498              		.loc 1 560 2 view .LVU157
 499              	.LBB262:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 500              		.loc 1 104 13 view .LVU158
 501              	.LBE262:
 105:src/keys.c    **** }
 502              		.loc 1 105 2 view .LVU159
 503              	.LVL42:
 504              	.LBB263:
 505              	.LBB258:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 506              		.loc 1 94 20 view .LVU160
 507              	.LBB255:
  95:src/keys.c    **** 	State2.shifts = shift;
 508              		.loc 1 95 2 view .LVU161
 509              	.LBB252:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 510              		.loc 1 86 13 view .LVU162
 511              	.LBB249:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 512              		.loc 1 87 2 view .LVU163
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 513              		.loc 1 87 18 is_stmt 0 view .LVU164
 514 005c FFF7FEFF 		bl	shift_down
 515              	.LVL43:
  88:src/keys.c    **** }
 516              		.loc 1 88 2 is_stmt 1 view .LVU165
 517              	.LBE249:
 518              	.LBE252:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
ARM GAS  /tmp/ccihcwFT.s 			page 57


 519              		.loc 1 96 2 view .LVU166
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 520              		.loc 1 96 16 is_stmt 0 view .LVU167
 521 0060 0023     		movs	r3, #0
 522 0062 2374     		strb	r3, [r4, #16]
  98:src/keys.c    **** }
 523              		.loc 1 98 2 is_stmt 1 view .LVU168
 524              	.LVL44:
  98:src/keys.c    **** }
 525              		.loc 1 98 2 is_stmt 0 view .LVU169
 526              	.LBE255:
 527              	.LBE258:
 528              	.LBE263:
 564:src/keys.c    **** 
 529              		.loc 1 564 1 view .LVU170
 530 0064 38BD     		pop	{r3, r4, r5, pc}
 531              	.L56:
 532:src/keys.c    **** 	case CATALOGUE_LABELS:
 532              		.loc 1 532 2 view .LVU171
 533 0066 152D     		cmp	r5, #21
 534 0068 1CD1     		bne	.L44
 535:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 535              		.loc 1 535 3 is_stmt 1 view .LVU172
 536:src/keys.c    **** 		break;
 536              		.loc 1 536 41 is_stmt 0 view .LVU173
 537 006a 1F49     		ldr	r1, .L58+4
 535:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 538              		.loc 1 535 20 view .LVU174
 539 006c DBB2     		uxtb	r3, r3
 536:src/keys.c    **** 		break;
 540              		.loc 1 536 41 view .LVU175
 541 006e 0968     		ldr	r1, [r1]
 535:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 542              		.loc 1 535 20 view .LVU176
 543 0070 43F00403 		orr	r3, r3, #4
 544 0074 E375     		strb	r3, [r4, #23]
 536:src/keys.c    **** 		break;
 545              		.loc 1 536 3 is_stmt 1 view .LVU177
 536:src/keys.c    **** 		break;
 546              		.loc 1 536 19 is_stmt 0 view .LVU178
 547 0076 B1F8EC07 		ldrh	r0, [r1, #2028]
 548 007a 1146     		mov	r1, r2
 549 007c FFF7FEFF 		bl	advance_to_next_label
 550              	.LVL45:
 536:src/keys.c    **** 		break;
 551              		.loc 1 536 17 view .LVU179
 552 0080 2081     		strh	r0, [r4, #8]	@ movhi
 537:src/keys.c    **** 	
 553              		.loc 1 537 3 is_stmt 1 view .LVU180
 554              	.L45:
 560:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 555              		.loc 1 560 2 view .LVU181
 556              	.LBB264:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 557              		.loc 1 104 13 view .LVU182
 558              	.LBE264:
 105:src/keys.c    **** }
ARM GAS  /tmp/ccihcwFT.s 			page 58


 559              		.loc 1 105 2 view .LVU183
 560              	.LVL46:
 561              	.LBB265:
 562              	.LBB259:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 563              		.loc 1 94 20 view .LVU184
 564              	.LBB256:
  95:src/keys.c    **** 	State2.shifts = shift;
 565              		.loc 1 95 2 view .LVU185
 566              	.LBB253:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 567              		.loc 1 86 13 view .LVU186
 568              	.LBB250:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 569              		.loc 1 87 2 view .LVU187
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 570              		.loc 1 87 18 is_stmt 0 view .LVU188
 571 0082 FFF7FEFF 		bl	shift_down
 572              	.LVL47:
  88:src/keys.c    **** }
 573              		.loc 1 88 2 is_stmt 1 view .LVU189
 574              	.LBE250:
 575              	.LBE253:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 576              		.loc 1 96 2 view .LVU190
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 577              		.loc 1 96 16 is_stmt 0 view .LVU191
 578 0086 0023     		movs	r3, #0
 579 0088 2374     		strb	r3, [r4, #16]
  98:src/keys.c    **** }
 580              		.loc 1 98 2 is_stmt 1 view .LVU192
 581              	.LVL48:
  98:src/keys.c    **** }
 582              		.loc 1 98 2 is_stmt 0 view .LVU193
 583              	.LBE256:
 584              	.LBE259:
 585              	.LBE265:
 564:src/keys.c    **** 
 586              		.loc 1 564 1 view .LVU194
 587 008a 38BD     		pop	{r3, r4, r5, pc}
 588              	.L42:
 541:src/keys.c    **** 		State2.digval = regX_idx;
 589              		.loc 1 541 3 is_stmt 1 view .LVU195
 541:src/keys.c    **** 		State2.digval = regX_idx;
 590              		.loc 1 541 23 is_stmt 0 view .LVU196
 591 008c E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 543:src/keys.c    **** 		break;
 592              		.loc 1 543 18 view .LVU197
 593 008e A272     		strb	r2, [r4, #10]
 541:src/keys.c    **** 		State2.digval = regX_idx;
 594              		.loc 1 541 23 view .LVU198
 595 0090 43F00803 		orr	r3, r3, #8
 542:src/keys.c    **** 		State2.digval2 = 0;
 596              		.loc 1 542 17 view .LVU199
 597 0094 6422     		movs	r2, #100
 541:src/keys.c    **** 		State2.digval = regX_idx;
 598              		.loc 1 541 23 view .LVU200
ARM GAS  /tmp/ccihcwFT.s 			page 59


 599 0096 E375     		strb	r3, [r4, #23]
 542:src/keys.c    **** 		State2.digval2 = 0;
 600              		.loc 1 542 3 is_stmt 1 view .LVU201
 542:src/keys.c    **** 		State2.digval2 = 0;
 601              		.loc 1 542 17 is_stmt 0 view .LVU202
 602 0098 2281     		strh	r2, [r4, #8]	@ movhi
 543:src/keys.c    **** 		break;
 603              		.loc 1 543 3 is_stmt 1 view .LVU203
 544:src/keys.c    **** 
 604              		.loc 1 544 3 view .LVU204
 560:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 605              		.loc 1 560 2 view .LVU205
 606              	.LBB266:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 607              		.loc 1 104 13 view .LVU206
 608              	.LBE266:
 105:src/keys.c    **** }
 609              		.loc 1 105 2 view .LVU207
 610              	.LVL49:
 611              	.LBB267:
 612              	.LBB260:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 613              		.loc 1 94 20 view .LVU208
 614              	.LBB257:
  95:src/keys.c    **** 	State2.shifts = shift;
 615              		.loc 1 95 2 view .LVU209
 616              	.LBB254:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 617              		.loc 1 86 13 view .LVU210
 618              	.LBB251:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 619              		.loc 1 87 2 view .LVU211
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 620              		.loc 1 87 18 is_stmt 0 view .LVU212
 621 009a FFF7FEFF 		bl	shift_down
 622              	.LVL50:
  88:src/keys.c    **** }
 623              		.loc 1 88 2 is_stmt 1 view .LVU213
 624              	.LBE251:
 625              	.LBE254:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 626              		.loc 1 96 2 view .LVU214
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 627              		.loc 1 96 16 is_stmt 0 view .LVU215
 628 009e 0023     		movs	r3, #0
 629 00a0 2374     		strb	r3, [r4, #16]
  98:src/keys.c    **** }
 630              		.loc 1 98 2 is_stmt 1 view .LVU216
 631              	.LVL51:
  98:src/keys.c    **** }
 632              		.loc 1 98 2 is_stmt 0 view .LVU217
 633              	.LBE257:
 634              	.LBE260:
 635              	.LBE267:
 564:src/keys.c    **** 
 636              		.loc 1 564 1 view .LVU218
 637 00a2 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/ccihcwFT.s 			page 60


 638              	.L44:
 553:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 639              		.loc 1 553 3 is_stmt 1 view .LVU219
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 640              		.loc 1 554 44 is_stmt 0 view .LVU220
 641 00a4 022D     		cmp	r5, #2
 553:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 642              		.loc 1 553 20 view .LVU221
 643 00a6 A573     		strb	r5, [r4, #14]
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 644              		.loc 1 554 3 is_stmt 1 view .LVU222
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 645              		.loc 1 554 44 is_stmt 0 view .LVU223
 646 00a8 12D1     		bne	.L57
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 647              		.loc 1 554 16 view .LVU224
 648 00aa 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 649 00ac 43F00203 		orr	r3, r3, #2
 650 00b0 6375     		strb	r3, [r4, #21]
 555:src/keys.c    **** 			// Different catalogue, reset position
 651              		.loc 1 555 3 is_stmt 1 view .LVU225
 652              	.L49:
 555:src/keys.c    **** 			// Different catalogue, reset position
 653              		.loc 1 555 32 is_stmt 0 discriminator 1 view .LVU226
 654 00b2 0D4B     		ldr	r3, .L58+4
 655 00b4 1A68     		ldr	r2, [r3]
 555:src/keys.c    **** 			// Different catalogue, reset position
 656              		.loc 1 555 37 discriminator 1 view .LVU227
 657 00b6 92F8DC37 		ldrb	r3, [r2, #2012]	@ zero_extendqisi2
 555:src/keys.c    **** 			// Different catalogue, reset position
 658              		.loc 1 555 29 discriminator 1 view .LVU228
 659 00ba 03F01F03 		and	r3, r3, #31
 660 00be AB42     		cmp	r3, r5
 661 00c0 DFD0     		beq	.L45
 557:src/keys.c    **** 		}
 662              		.loc 1 557 4 is_stmt 1 view .LVU229
 557:src/keys.c    **** 		}
 663              		.loc 1 557 17 is_stmt 0 view .LVU230
 664 00c2 B2F8DC37 		ldrh	r3, [r2, #2012]
 665 00c6 6FF34B13 		bfc	r3, #5, #7
 666 00ca A2F8DC37 		strh	r3, [r2, #2012]	@ movhi
 667 00ce D8E7     		b	.L45
 668              	.L57:
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 669              		.loc 1 554 44 view .LVU231
 670 00d0 A5F11101 		sub	r1, r5, #17
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 671              		.loc 1 554 16 view .LVU232
 672 00d4 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 673              		.loc 1 554 44 view .LVU233
 674 00d6 4A42     		rsbs	r2, r1, #0
 675 00d8 4A41     		adcs	r2, r2, r1
 554:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 676              		.loc 1 554 16 view .LVU234
 677 00da 62F34103 		bfi	r3, r2, #1, #1
 678 00de 6375     		strb	r3, [r4, #21]
ARM GAS  /tmp/ccihcwFT.s 			page 61


 555:src/keys.c    **** 			// Different catalogue, reset position
 679              		.loc 1 555 3 is_stmt 1 view .LVU235
 680 00e0 E7E7     		b	.L49
 681              	.L59:
 682 00e2 00BF     		.align	2
 683              	.L58:
 684 00e4 00000000 		.word	StateWhileOn
 685 00e8 00000000 		.word	main_ram
 686              		.cfi_endproc
 687              	.LFE12:
 689              		.section	.text.advance_to_previous_label,"ax",%progbits
 690              		.align	1
 691              		.p2align 2,,3
 692              		.syntax unified
 693              		.thumb
 694              		.thumb_func
 695              		.fpu fpv4-sp-d16
 697              	advance_to_previous_label:
 698              	.LVL52:
 699              	.LFB51:
2571:src/keys.c    **** 
2572:src/keys.c    **** static unsigned int advance_to_previous_label(unsigned int pc, int search_end) {
 700              		.loc 1 2572 80 view -0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704              		.loc 1 2572 80 is_stmt 0 view .LVU237
 705 0000 70B5     		push	{r4, r5, r6, lr}
 706              		.cfi_def_cfa_offset 16
 707              		.cfi_offset 4, -16
 708              		.cfi_offset 5, -12
 709              		.cfi_offset 6, -8
 710              		.cfi_offset 14, -4
 711 0002 124E     		ldr	r6, .L69
 712              		.loc 1 2572 80 view .LVU238
 713 0004 0446     		mov	r4, r0
 714 0006 0D46     		mov	r5, r1
 715              	.LVL53:
 716              	.L61:
2573:src/keys.c    **** 	do {
 717              		.loc 1 2573 2 is_stmt 1 view .LVU239
2574:src/keys.c    **** 		for (;;) {
 718              		.loc 1 2574 3 view .LVU240
2575:src/keys.c    **** 			pc = do_dec(pc, 0);
 719              		.loc 1 2575 4 view .LVU241
 720              		.loc 1 2575 9 is_stmt 0 view .LVU242
 721 0008 2046     		mov	r0, r4
 722 000a 0021     		movs	r1, #0
 723 000c FFF7FEFF 		bl	do_dec
 724              	.LVL54:
2576:src/keys.c    **** 			if (PcWrapped)
2577:src/keys.c    **** 				break;
2578:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 725              		.loc 1 2578 4 is_stmt 1 view .LVU243
2579:src/keys.c    **** 				return pc;
2580:src/keys.c    **** 			}
2581:src/keys.c    **** 		}
ARM GAS  /tmp/ccihcwFT.s 			page 62


2582:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) - 1) & 3);
 726              		.loc 1 2582 3 view .LVU244
 727              		.loc 1 2582 8 is_stmt 0 view .LVU245
 728 0010 20F47F53 		bic	r3, r0, #16320
 729 0014 23F03F03 		bic	r3, r3, #63
2576:src/keys.c    **** 			if (PcWrapped)
 730              		.loc 1 2576 7 view .LVU246
 731 0018 3268     		ldr	r2, [r6]
 732              		.loc 1 2582 8 view .LVU247
 733 001a A3F58043 		sub	r3, r3, #16384
2583:src/keys.c    **** 		pc = do_dec(pc, 0);
 734              		.loc 1 2583 8 view .LVU248
 735 001e 0021     		movs	r1, #0
2575:src/keys.c    **** 			if (PcWrapped)
 736              		.loc 1 2575 9 view .LVU249
 737 0020 0446     		mov	r4, r0
 738              	.LVL55:
2576:src/keys.c    **** 				break;
 739              		.loc 1 2576 4 is_stmt 1 view .LVU250
2582:src/keys.c    **** 		pc = do_dec(pc, 0);
 740              		.loc 1 2582 8 is_stmt 0 view .LVU251
 741 0022 9BB2     		uxth	r3, r3
 742              	.LVL56:
 743              		.loc 1 2583 3 is_stmt 1 view .LVU252
2576:src/keys.c    **** 				break;
 744              		.loc 1 2576 7 is_stmt 0 view .LVU253
 745 0024 32B9     		cbnz	r2, .L62
2578:src/keys.c    **** 				return pc;
 746              		.loc 1 2578 8 view .LVU254
 747 0026 2946     		mov	r1, r5
 748 0028 FFF7FEFF 		bl	is_label_or_end_at
 749              	.LVL57:
2578:src/keys.c    **** 				return pc;
 750              		.loc 1 2578 7 view .LVU255
 751 002c 0028     		cmp	r0, #0
 752 002e EBD0     		beq	.L61
2584:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
2585:src/keys.c    **** 	return pc;
2586:src/keys.c    **** }
 753              		.loc 1 2586 1 view .LVU256
 754 0030 2046     		mov	r0, r4
 755 0032 70BD     		pop	{r4, r5, r6, pc}
 756              	.LVL58:
 757              	.L62:
2583:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 758              		.loc 1 2583 8 view .LVU257
 759 0034 43F00100 		orr	r0, r3, #1
 760 0038 FFF7FEFF 		bl	do_dec
 761              	.LVL59:
2584:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 762              		.loc 1 2584 13 view .LVU258
 763 003c 2946     		mov	r1, r5
2583:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 764              		.loc 1 2583 8 view .LVU259
 765 003e 0446     		mov	r4, r0
 766              	.LVL60:
2584:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
ARM GAS  /tmp/ccihcwFT.s 			page 63


 767              		.loc 1 2584 10 is_stmt 1 view .LVU260
2584:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 768              		.loc 1 2584 13 is_stmt 0 view .LVU261
 769 0040 FFF7FEFF 		bl	is_label_or_end_at
 770              	.LVL61:
2584:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 771              		.loc 1 2584 2 view .LVU262
 772 0044 0028     		cmp	r0, #0
 773 0046 DFD0     		beq	.L61
 774              		.loc 1 2586 1 view .LVU263
 775 0048 2046     		mov	r0, r4
 776 004a 70BD     		pop	{r4, r5, r6, pc}
 777              	.LVL62:
 778              	.L70:
 779              		.loc 1 2586 1 view .LVU264
 780              		.align	2
 781              	.L69:
 782 004c 00000000 		.word	PcWrapped
 783              		.cfi_endproc
 784              	.LFE51:
 786              		.section	.text.check_confirm.part.0,"ax",%progbits
 787              		.align	1
 788              		.p2align 2,,3
 789              		.syntax unified
 790              		.thumb
 791              		.thumb_func
 792              		.fpu fpv4-sp-d16
 794              	check_confirm.part.0:
 795              	.LVL63:
 796              	.LFB59:
 624:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 797              		.loc 1 624 12 is_stmt 1 view -0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801              		@ link register save eliminated.
 802              	.LBB268:
 626:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 803              		.loc 1 626 3 view .LVU266
 627:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 804              		.loc 1 627 3 view .LVU267
 626:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 805              		.loc 1 626 13 is_stmt 0 view .LVU268
 806 0000 C3B2     		uxtb	r3, r0
 627:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 807              		.loc 1 627 25 view .LVU269
 808 0002 A3F14102 		sub	r2, r3, #65
 627:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 809              		.loc 1 627 6 view .LVU270
 810 0006 032A     		cmp	r2, #3
 811 0008 06D9     		bls	.L74
 635:src/keys.c    **** #endif
 812              		.loc 1 635 7 is_stmt 1 view .LVU271
 635:src/keys.c    **** #endif
 813              		.loc 1 635 29 is_stmt 0 view .LVU272
 814 000a AD3B     		subs	r3, r3, #173
 635:src/keys.c    **** #endif
ARM GAS  /tmp/ccihcwFT.s 			page 64


 815              		.loc 1 635 10 view .LVU273
 816 000c 052B     		cmp	r3, #5
 817 000e 02D8     		bhi	.L73
 645:src/keys.c    **** 		}
 818              		.loc 1 645 4 is_stmt 1 view .LVU274
 645:src/keys.c    **** 		}
 819              		.loc 1 645 20 is_stmt 0 view .LVU275
 820 0010 054B     		ldr	r3, .L75
 821 0012 0122     		movs	r2, #1
 822 0014 1A60     		str	r2, [r3]
 823              	.L73:
 824              	.LBE268:
 649:src/keys.c    **** 
 825              		.loc 1 649 1 view .LVU276
 826 0016 7047     		bx	lr
 827              	.L74:
 828              	.LBB269:
 628:src/keys.c    **** 			return STATE_UNFINISHED;
 829              		.loc 1 628 4 is_stmt 1 view .LVU277
 628:src/keys.c    **** 			return STATE_UNFINISHED;
 830              		.loc 1 628 19 is_stmt 0 view .LVU278
 831 0018 044B     		ldr	r3, .L75+4
 832 001a 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
 628:src/keys.c    **** 			return STATE_UNFINISHED;
 833              		.loc 1 628 35 view .LVU279
 834 001c 4038     		subs	r0, r0, #64
 835              	.LVL64:
 628:src/keys.c    **** 			return STATE_UNFINISHED;
 836              		.loc 1 628 19 view .LVU280
 837 001e 60F30202 		bfi	r2, r0, #0, #3
 838 0022 1A75     		strb	r2, [r3, #20]
 629:src/keys.c    **** 		}
 839              		.loc 1 629 4 is_stmt 1 view .LVU281
 629:src/keys.c    **** 		}
 840              		.loc 1 629 11 is_stmt 0 view .LVU282
 841 0024 3320     		movs	r0, #51
 842              	.LVL65:
 629:src/keys.c    **** 		}
 843              		.loc 1 629 11 view .LVU283
 844 0026 7047     		bx	lr
 845              	.L76:
 846              		.align	2
 847              	.L75:
 848 0028 00000000 		.word	NonProgrammable
 849 002c 00000000 		.word	StateWhileOn
 850              	.LBE269:
 851              		.cfi_endproc
 852              	.LFE59:
 854              		.section	.text.init_arg.part.0,"ax",%progbits
 855              		.align	1
 856              		.p2align 2,,3
 857              		.syntax unified
 858              		.thumb
 859              		.thumb_func
 860              		.fpu fpv4-sp-d16
 862              	init_arg.part.0:
 863              	.LVL66:
ARM GAS  /tmp/ccihcwFT.s 			page 65


 864              	.LFB61:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 865              		.loc 1 506 13 is_stmt 1 view -0
 866              		.cfi_startproc
 867              		@ args = 0, pretend = 0, frame = 0
 868              		@ frame_needed = 0, uses_anonymous_args = 0
 869              		@ link register save eliminated.
 509:src/keys.c    **** 	State2.ind = 0;
 870              		.loc 1 509 2 view .LVU285
 509:src/keys.c    **** 	State2.ind = 0;
 871              		.loc 1 509 10 is_stmt 0 view .LVU286
 872 0000 084B     		ldr	r3, .L78
 514:src/keys.c    **** 	State2.local = 0;
 873              		.loc 1 514 13 view .LVU287
 874 0002 5969     		ldr	r1, [r3, #20]
 509:src/keys.c    **** 	State2.ind = 0;
 875              		.loc 1 509 10 view .LVU288
 876 0004 D877     		strb	r0, [r3, #31]
 510:src/keys.c    **** 	State2.digval = 0;
 877              		.loc 1 510 2 is_stmt 1 view .LVU289
 511:src/keys.c    **** 	State2.numdigit = 0;
 878              		.loc 1 511 2 view .LVU290
 514:src/keys.c    **** 	State2.local = 0;
 879              		.loc 1 514 13 is_stmt 0 view .LVU291
 880 0006 21F40F11 		bic	r1, r1, #2342912
 881 000a 8628     		cmp	r0, #134
 882 000c 0CBF     		ite	eq
 883 000e 4FF40812 		moveq	r2, #2228224
 884 0012 4FF40012 		movne	r2, #2097152
 885 0016 0A43     		orrs	r2, r2, r1
 511:src/keys.c    **** 	State2.numdigit = 0;
 886              		.loc 1 511 16 view .LVU292
 887 0018 0021     		movs	r1, #0
 514:src/keys.c    **** 	State2.local = 0;
 888              		.loc 1 514 13 view .LVU293
 889 001a 5A61     		str	r2, [r3, #20]
 511:src/keys.c    **** 	State2.numdigit = 0;
 890              		.loc 1 511 16 view .LVU294
 891 001c 1981     		strh	r1, [r3, #8]	@ movhi
 512:src/keys.c    **** 	State2.rarg = 1;
 892              		.loc 1 512 2 is_stmt 1 view .LVU295
 512:src/keys.c    **** 	State2.rarg = 1;
 893              		.loc 1 512 18 is_stmt 0 view .LVU296
 894 001e D972     		strb	r1, [r3, #11]
 513:src/keys.c    **** 	State2.dot = 0;
 895              		.loc 1 513 2 is_stmt 1 view .LVU297
 514:src/keys.c    **** 	State2.local = 0;
 896              		.loc 1 514 2 view .LVU298
 515:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 897              		.loc 1 515 2 view .LVU299
 516:src/keys.c    **** }
 898              		.loc 1 516 2 view .LVU300
 517:src/keys.c    **** 
 899              		.loc 1 517 1 is_stmt 0 view .LVU301
 900 0020 7047     		bx	lr
 901              	.L79:
 902 0022 00BF     		.align	2
ARM GAS  /tmp/ccihcwFT.s 			page 66


 903              	.L78:
 904 0024 00000000 		.word	StateWhileOn
 905              		.cfi_endproc
 906              	.LFE61:
 908              		.section	.text.reset_arg,"ax",%progbits
 909              		.align	1
 910              		.p2align 2,,3
 911              		.syntax unified
 912              		.thumb
 913              		.thumb_func
 914              		.fpu fpv4-sp-d16
 916              	reset_arg:
 917              	.LFB29:
1526:src/keys.c    **** 	init_arg((enum rarg) 0);
 918              		.loc 1 1526 29 is_stmt 1 view -0
 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 0
 921              		@ frame_needed = 0, uses_anonymous_args = 0
1527:src/keys.c    **** 	State2.rarg = 0;
 922              		.loc 1 1527 2 view .LVU303
 923              	.LVL67:
 924              	.LBB270:
 925              	.LBI270:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 926              		.loc 1 506 13 view .LVU304
 927              	.LBB271:
 507:src/keys.c    **** 		return;
 928              		.loc 1 507 2 view .LVU305
 929              	.LBE271:
 930              	.LBE270:
1526:src/keys.c    **** 	init_arg((enum rarg) 0);
 931              		.loc 1 1526 29 is_stmt 0 view .LVU306
 932 0000 08B5     		push	{r3, lr}
 933              		.cfi_def_cfa_offset 8
 934              		.cfi_offset 3, -8
 935              		.cfi_offset 14, -4
 936              	.LBB273:
 937              	.LBB272:
 507:src/keys.c    **** 		return;
 938              		.loc 1 507 6 view .LVU307
 939 0002 FFF7FEFF 		bl	is_bad_cmdline
 940              	.LVL68:
 507:src/keys.c    **** 		return;
 941              		.loc 1 507 5 view .LVU308
 942 0006 08B9     		cbnz	r0, .L81
 943 0008 FFF7FEFF 		bl	init_arg.part.0
 944              	.LVL69:
 945              	.L81:
 507:src/keys.c    **** 		return;
 946              		.loc 1 507 5 view .LVU309
 947              	.LBE272:
 948              	.LBE273:
1528:src/keys.c    **** }
 949              		.loc 1 1528 2 is_stmt 1 view .LVU310
1528:src/keys.c    **** }
 950              		.loc 1 1528 14 is_stmt 0 view .LVU311
 951 000c 024B     		ldr	r3, .L83
ARM GAS  /tmp/ccihcwFT.s 			page 67


 952 000e 9A7D     		ldrb	r2, [r3, #22]	@ zero_extendqisi2
 953 0010 6FF34512 		bfc	r2, #5, #1
 954 0014 9A75     		strb	r2, [r3, #22]
1529:src/keys.c    **** 
 955              		.loc 1 1529 1 view .LVU312
 956 0016 08BD     		pop	{r3, pc}
 957              	.L84:
 958              		.align	2
 959              	.L83:
 960 0018 00000000 		.word	StateWhileOn
 961              		.cfi_endproc
 962              	.LFE29:
 964              		.section	.text.arg_eval,"ax",%progbits
 965              		.align	1
 966              		.p2align 2,,3
 967              		.syntax unified
 968              		.thumb
 969              		.thumb_func
 970              		.fpu fpv4-sp-d16
 972              	arg_eval:
 973              	.LVL70:
 974              	.LFB30:
1531:src/keys.c    **** 	const unsigned int base = CmdBase;
 975              		.loc 1 1531 39 is_stmt 1 view -0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 0
 978              		@ frame_needed = 0, uses_anonymous_args = 0
1532:src/keys.c    **** 	int r = RARG(base, val 
 979              		.loc 1 1532 2 view .LVU314
1532:src/keys.c    **** 	int r = RARG(base, val 
 980              		.loc 1 1532 28 is_stmt 0 view .LVU315
 981 0000 1C4B     		ldr	r3, .L106
1531:src/keys.c    **** 	const unsigned int base = CmdBase;
 982              		.loc 1 1531 39 view .LVU316
 983 0002 70B5     		push	{r4, r5, r6, lr}
 984              		.cfi_def_cfa_offset 16
 985              		.cfi_offset 4, -16
 986              		.cfi_offset 5, -12
 987              		.cfi_offset 6, -8
 988              		.cfi_offset 14, -4
1533:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 989              		.loc 1 1533 10 view .LVU317
 990 0004 9D7D     		ldrb	r5, [r3, #22]	@ zero_extendqisi2
 991 0006 597D     		ldrb	r1, [r3, #21]	@ zero_extendqisi2
1532:src/keys.c    **** 	int r = RARG(base, val 
 992              		.loc 1 1532 21 view .LVU318
 993 0008 DA7F     		ldrb	r2, [r3, #31]	@ zero_extendqisi2
 994              	.LVL71:
1533:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 995              		.loc 1 1533 2 is_stmt 1 view .LVU319
1533:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 996              		.loc 1 1533 10 is_stmt 0 view .LVU320
 997 000a EE07     		lsls	r6, r5, #31
1536:src/keys.c    **** 
 998              		.loc 1 1536 30 view .LVU321
 999 000c 1A4E     		ldr	r6, .L106+4
 1000 000e 3668     		ldr	r6, [r6]
ARM GAS  /tmp/ccihcwFT.s 			page 68


1533:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 1001              		.loc 1 1533 10 view .LVU322
 1002 0010 01F08003 		and	r3, r1, #128
 1003 0014 0344     		add	r3, r3, r0
1536:src/keys.c    **** 
 1004              		.loc 1 1536 30 view .LVU323
 1005 0016 96F8EA67 		ldrb	r6, [r6, #2026]	@ zero_extendqisi2
1533:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 1006              		.loc 1 1533 10 view .LVU324
 1007 001a 02F12004 		add	r4, r2, #32
 1008 001e 48BF     		it	mi
 1009 0020 7033     		addmi	r3, r3, #112
 1010 0022 2402     		lsls	r4, r4, #8
 1011 0024 1C43     		orrs	r4, r4, r3
 1012              	.LVL72:
1536:src/keys.c    **** 
 1013              		.loc 1 1536 2 is_stmt 1 view .LVU325
1536:src/keys.c    **** 
 1014              		.loc 1 1536 77 is_stmt 0 view .LVU326
 1015 0026 3307     		lsls	r3, r6, #28
 1016 0028 1DD5     		bpl	.L92
1536:src/keys.c    **** 
 1017              		.loc 1 1536 77 discriminator 2 view .LVU327
 1018 002a 15F0400F 		tst	r5, #64
 1019 002e 0CBF     		ite	eq
 1020 0030 0425     		moveq	r5, #4
 1021 0032 0825     		movne	r5, #8
 1022              	.L87:
 1023              	.LVL73:
1538:src/keys.c    **** 		/*
 1024              		.loc 1 1538 2 is_stmt 1 discriminator 6 view .LVU328
1538:src/keys.c    **** 		/*
 1025              		.loc 1 1538 5 is_stmt 0 discriminator 6 view .LVU329
 1026 0034 0E06     		lsls	r6, r1, #24
 1027 0036 12D4     		bmi	.L88
1553:src/keys.c    **** 			// Disallow odd complex register > 98
 1028              		.loc 1 1553 3 is_stmt 1 view .LVU330
1553:src/keys.c    **** 			// Disallow odd complex register > 98
 1029              		.loc 1 1553 20 is_stmt 0 view .LVU331
 1030 0038 104B     		ldr	r3, .L106+8
 1031 003a 03EB0213 		add	r3, r3, r2, lsl #4
 1032 003e 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
1553:src/keys.c    **** 			// Disallow odd complex register > 98
 1033              		.loc 1 1553 6 view .LVU332
 1034 0040 D906     		lsls	r1, r3, #27
 1035 0042 09D5     		bpl	.L89
1553:src/keys.c    **** 			// Disallow odd complex register > 98
 1036              		.loc 1 1553 27 discriminator 1 view .LVU333
 1037 0044 6228     		cmp	r0, #98
 1038 0046 07D9     		bls	.L89
1553:src/keys.c    **** 			// Disallow odd complex register > 98
 1039              		.loc 1 1553 52 discriminator 2 view .LVU334
 1040 0048 C307     		lsls	r3, r0, #31
 1041 004a 02D4     		bmi	.L96
1557:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1042              		.loc 1 1557 3 is_stmt 1 view .LVU335
1557:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
ARM GAS  /tmp/ccihcwFT.s 			page 69


 1043              		.loc 1 1557 28 is_stmt 0 view .LVU336
 1044 004c 223A     		subs	r2, r2, #34
 1045              	.LVL74:
1557:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1046              		.loc 1 1557 6 view .LVU337
 1047 004e 012A     		cmp	r2, #1
 1048 0050 05D8     		bhi	.L88
 1049              	.LVL75:
 1050              	.L96:
1555:src/keys.c    **** #endif
 1051              		.loc 1 1555 11 view .LVU338
 1052 0052 3324     		movs	r4, #51
 1053              	.LVL76:
1564:src/keys.c    **** 
 1054              		.loc 1 1564 1 view .LVU339
 1055 0054 2046     		mov	r0, r4
 1056              	.LVL77:
1564:src/keys.c    **** 
 1057              		.loc 1 1564 1 view .LVU340
 1058 0056 70BD     		pop	{r4, r5, r6, pc}
 1059              	.LVL78:
 1060              	.L89:
1557:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1061              		.loc 1 1557 3 is_stmt 1 view .LVU341
1557:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1062              		.loc 1 1557 28 is_stmt 0 view .LVU342
 1063 0058 223A     		subs	r2, r2, #34
 1064              	.LVL79:
1557:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1065              		.loc 1 1557 6 view .LVU343
 1066 005a 012A     		cmp	r2, #1
 1067 005c 05D9     		bls	.L105
 1068              	.LVL80:
 1069              	.L88:
1562:src/keys.c    **** 	return r;
 1070              		.loc 1 1562 2 is_stmt 1 view .LVU344
 1071 005e FFF7FEFF 		bl	reset_arg
 1072              	.LVL81:
1563:src/keys.c    **** }
 1073              		.loc 1 1563 2 view .LVU345
1564:src/keys.c    **** 
 1074              		.loc 1 1564 1 is_stmt 0 view .LVU346
 1075 0062 2046     		mov	r0, r4
 1076 0064 70BD     		pop	{r4, r5, r6, pc}
 1077              	.LVL82:
 1078              	.L92:
1536:src/keys.c    **** 
 1079              		.loc 1 1536 77 view .LVU347
 1080 0066 0425     		movs	r5, #4
 1081 0068 E4E7     		b	.L87
 1082              	.LVL83:
 1083              	.L105:
1557:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1084              		.loc 1 1557 73 discriminator 1 view .LVU348
 1085 006a C5F16405 		rsb	r5, r5, #100
 1086              	.LVL84:
1557:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
ARM GAS  /tmp/ccihcwFT.s 			page 70


 1087              		.loc 1 1557 52 discriminator 1 view .LVU349
 1088 006e 8542     		cmp	r5, r0
 1089 0070 F5D2     		bcs	.L88
 1090 0072 EEE7     		b	.L96
 1091              	.L107:
 1092              		.align	2
 1093              	.L106:
 1094 0074 00000000 		.word	StateWhileOn
 1095 0078 00000000 		.word	main_ram
 1096 007c 00000000 		.word	argcmds
 1097              		.cfi_endproc
 1098              	.LFE30:
 1100              		.section	.text.process_arg_shuffle,"ax",%progbits
 1101              		.align	1
 1102              		.p2align 2,,3
 1103              		.syntax unified
 1104              		.thumb
 1105              		.thumb_func
 1106              		.fpu fpv4-sp-d16
 1108              	process_arg_shuffle:
 1109              	.LVL85:
 1110              	.LFB36:
1678:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1111              		.loc 1 1678 39 is_stmt 1 view -0
 1112              		.cfi_startproc
 1113              		@ args = 0, pretend = 0, frame = 0
 1114              		@ frame_needed = 0, uses_anonymous_args = 0
 1115              		@ link register save eliminated.
1679:src/keys.c    **** 	if (State2.numdigit < 4)
 1116              		.loc 1 1679 2 view .LVU351
1678:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1117              		.loc 1 1678 39 is_stmt 0 view .LVU352
 1118 0000 10B4     		push	{r4}
 1119              		.cfi_def_cfa_offset 4
 1120              		.cfi_offset 4, -4
1679:src/keys.c    **** 	if (State2.numdigit < 4)
 1121              		.loc 1 1679 31 view .LVU353
 1122 0002 0A4A     		ldr	r2, .L111
 1123 0004 D37A     		ldrb	r3, [r2, #11]	@ zero_extendqisi2
1679:src/keys.c    **** 	if (State2.numdigit < 4)
 1124              		.loc 1 1679 16 view .LVU354
 1125 0006 1189     		ldrh	r1, [r2, #8]
1679:src/keys.c    **** 	if (State2.numdigit < 4)
 1126              		.loc 1 1679 43 view .LVU355
 1127 0008 5C00     		lsls	r4, r3, #1
1679:src/keys.c    **** 	if (State2.numdigit < 4)
 1128              		.loc 1 1679 21 view .LVU356
 1129 000a A040     		lsls	r0, r0, r4
 1130              	.LVL86:
1679:src/keys.c    **** 	if (State2.numdigit < 4)
 1131              		.loc 1 1679 40 view .LVU357
 1132 000c 0133     		adds	r3, r3, #1
 1133 000e DBB2     		uxtb	r3, r3
1679:src/keys.c    **** 	if (State2.numdigit < 4)
 1134              		.loc 1 1679 16 view .LVU358
 1135 0010 0844     		add	r0, r0, r1
 1136 0012 80B2     		uxth	r0, r0
ARM GAS  /tmp/ccihcwFT.s 			page 71


1680:src/keys.c    **** 		return STATE_UNFINISHED;
 1137              		.loc 1 1680 5 view .LVU359
 1138 0014 032B     		cmp	r3, #3
1679:src/keys.c    **** 	if (State2.numdigit < 4)
 1139              		.loc 1 1679 40 view .LVU360
 1140 0016 D372     		strb	r3, [r2, #11]
1679:src/keys.c    **** 	if (State2.numdigit < 4)
 1141              		.loc 1 1679 16 view .LVU361
 1142 0018 1081     		strh	r0, [r2, #8]	@ movhi
1680:src/keys.c    **** 		return STATE_UNFINISHED;
 1143              		.loc 1 1680 2 is_stmt 1 view .LVU362
1680:src/keys.c    **** 		return STATE_UNFINISHED;
 1144              		.loc 1 1680 5 is_stmt 0 view .LVU363
 1145 001a 03D9     		bls	.L109
1682:src/keys.c    **** }
 1146              		.loc 1 1682 2 is_stmt 1 view .LVU364
1683:src/keys.c    **** 
 1147              		.loc 1 1683 1 is_stmt 0 view .LVU365
 1148 001c 5DF8044B 		ldr	r4, [sp], #4
 1149              		.cfi_remember_state
 1150              		.cfi_restore 4
 1151              		.cfi_def_cfa_offset 0
1682:src/keys.c    **** }
 1152              		.loc 1 1682 9 view .LVU366
 1153 0020 FFF7FEBF 		b	arg_eval
 1154              	.LVL87:
 1155              	.L109:
 1156              		.cfi_restore_state
1683:src/keys.c    **** 
 1157              		.loc 1 1683 1 view .LVU367
 1158 0024 3320     		movs	r0, #51
 1159 0026 5DF8044B 		ldr	r4, [sp], #4
 1160              		.cfi_restore 4
 1161              		.cfi_def_cfa_offset 0
 1162 002a 7047     		bx	lr
 1163              	.L112:
 1164              		.align	2
 1165              	.L111:
 1166 002c 00000000 		.word	StateWhileOn
 1167              		.cfi_endproc
 1168              	.LFE36:
 1170              		.section	.text.arg_digit,"ax",%progbits
 1171              		.align	1
 1172              		.p2align 2,,3
 1173              		.syntax unified
 1174              		.thumb
 1175              		.thumb_func
 1176              		.fpu fpv4-sp-d16
 1178              	arg_digit:
 1179              	.LVL88:
 1180              	.LFB31:
1566:src/keys.c    **** 	int lim;
 1181              		.loc 1 1566 29 is_stmt 1 view -0
 1182              		.cfi_startproc
 1183              		@ args = 0, pretend = 0, frame = 8
 1184              		@ frame_needed = 0, uses_anonymous_args = 0
1567:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
ARM GAS  /tmp/ccihcwFT.s 			page 72


 1185              		.loc 1 1567 2 view .LVU369
1569:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1186              		.loc 1 1569 2 view .LVU370
1566:src/keys.c    **** 	int lim;
 1187              		.loc 1 1566 29 is_stmt 0 view .LVU371
 1188 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1189              		.cfi_def_cfa_offset 20
 1190              		.cfi_offset 4, -20
 1191              		.cfi_offset 5, -16
 1192              		.cfi_offset 6, -12
 1193              		.cfi_offset 7, -8
 1194              		.cfi_offset 14, -4
1570:src/keys.c    **** #else
 1195              		.loc 1 1570 29 view .LVU372
 1196 0002 3E4D     		ldr	r5, .L160
1566:src/keys.c    **** 	int lim;
 1197              		.loc 1 1566 29 view .LVU373
 1198 0004 83B0     		sub	sp, sp, #12
 1199              		.cfi_def_cfa_offset 32
1566:src/keys.c    **** 	int lim;
 1200              		.loc 1 1566 29 view .LVU374
 1201 0006 0446     		mov	r4, r0
1569:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1202              		.loc 1 1569 17 view .LVU375
 1203 0008 01A8     		add	r0, sp, #4
 1204              	.LVL89:
1569:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1205              		.loc 1 1569 17 view .LVU376
 1206 000a FFF7FEFF 		bl	get_dispmode_digs
 1207              	.LVL90:
1570:src/keys.c    **** #else
 1208              		.loc 1 1570 29 view .LVU377
 1209 000e A97D     		ldrb	r1, [r5, #22]	@ zero_extendqisi2
 1210              	.LVL91:
1570:src/keys.c    **** #else
 1211              		.loc 1 1570 2 is_stmt 1 view .LVU378
 1212 0010 EE7F     		ldrb	r6, [r5, #31]	@ zero_extendqisi2
1570:src/keys.c    **** #else
 1213              		.loc 1 1570 130 is_stmt 0 view .LVU379
 1214 0012 11F0400C 		ands	ip, r1, #64
 1215 0016 01D0     		beq	.L116
1570:src/keys.c    **** #else
 1216              		.loc 1 1570 44 discriminator 2 view .LVU380
 1217 0018 502E     		cmp	r6, #80
 1218 001a 64D0     		beq	.L156
 1219              	.LVL92:
 1220              	.L116:
1574:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1221              		.loc 1 1574 2 is_stmt 1 discriminator 8 view .LVU381
1575:src/keys.c    **** 	
 1222              		.loc 1 1575 34 is_stmt 0 discriminator 8 view .LVU382
 1223 001c 384A     		ldr	r2, .L160+4
1574:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1224              		.loc 1 1574 33 discriminator 8 view .LVU383
 1225 001e 2B89     		ldrh	r3, [r5, #8]
1575:src/keys.c    **** 	
 1226              		.loc 1 1575 34 discriminator 8 view .LVU384
ARM GAS  /tmp/ccihcwFT.s 			page 73


 1227 0020 02EB0612 		add	r2, r2, r6, lsl #4
1574:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1228              		.loc 1 1574 41 discriminator 8 view .LVU385
 1229 0024 03EB8303 		add	r3, r3, r3, lsl #2
1575:src/keys.c    **** 	
 1230              		.loc 1 1575 34 discriminator 8 view .LVU386
 1231 0028 5779     		ldrb	r7, [r2, #5]	@ zero_extendqisi2
1574:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1232              		.loc 1 1574 46 discriminator 8 view .LVU387
 1233 002a 04EB4304 		add	r4, r4, r3, lsl #1
 1234              	.LVL93:
1575:src/keys.c    **** 	
 1235              		.loc 1 1575 2 is_stmt 1 discriminator 8 view .LVU388
1575:src/keys.c    **** 	
 1236              		.loc 1 1575 39 is_stmt 0 discriminator 8 view .LVU389
 1237 002e BB07     		lsls	r3, r7, #30
 1238 0030 32D4     		bmi	.L155
1575:src/keys.c    **** 	
 1239              		.loc 1 1575 39 discriminator 2 view .LVU390
 1240 0032 95F91530 		ldrsb	r3, [r5, #21]
 1241 0036 002B     		cmp	r3, #0
 1242 0038 2EDB     		blt	.L155
 1243              	.LVL94:
1577:src/keys.c    **** 		// Handle local registers and flags
 1244              		.loc 1 1577 2 is_stmt 1 view .LVU391
1577:src/keys.c    **** 		// Handle local registers and flags
 1245              		.loc 1 1577 5 is_stmt 0 view .LVU392
 1246 003a C907     		lsls	r1, r1, #31
 1247 003c 4BD5     		bpl	.L122
1579:src/keys.c    **** 		if (State2.runmode) {
 1248              		.loc 1 1579 3 is_stmt 1 view .LVU393
1579:src/keys.c    **** 		if (State2.runmode) {
 1249              		.loc 1 1579 7 is_stmt 0 view .LVU394
 1250 003e 0F23     		movs	r3, #15
 1251 0040 0193     		str	r3, [sp, #4]
1580:src/keys.c    **** 			if (LocalRegs == 0)
 1252              		.loc 1 1580 3 is_stmt 1 view .LVU395
1580:src/keys.c    **** 			if (LocalRegs == 0)
 1253              		.loc 1 1580 6 is_stmt 0 view .LVU396
 1254 0042 BCF1000F 		cmp	ip, #0
 1255 0046 05D0     		beq	.L125
1581:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1256              		.loc 1 1581 4 is_stmt 1 view .LVU397
1581:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1257              		.loc 1 1581 8 is_stmt 0 view .LVU398
 1258 0048 2E4B     		ldr	r3, .L160+8
 1259 004a 1B68     		ldr	r3, [r3]
1581:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1260              		.loc 1 1581 7 view .LVU399
 1261 004c B3F9DE37 		ldrsh	r3, [r3, #2014]
 1262 0050 002B     		cmp	r3, #0
 1263 0052 3DD0     		beq	.L127
 1264              	.LVL95:
 1265              	.L125:
1591:src/keys.c    **** 	else {
 1266              		.loc 1 1591 65 view .LVU400
 1267 0054 0F20     		movs	r0, #15
ARM GAS  /tmp/ccihcwFT.s 			page 74


 1268              	.L124:
1597:src/keys.c    **** 		return STATE_UNFINISHED;
 1269              		.loc 1 1597 2 is_stmt 1 view .LVU401
1597:src/keys.c    **** 		return STATE_UNFINISHED;
 1270              		.loc 1 1597 5 is_stmt 0 view .LVU402
 1271 0056 8442     		cmp	r4, r0
 1272 0058 3ADC     		bgt	.L127
 1273              	.L159:
1600:src/keys.c    **** 	++State2.numdigit;
 1274              		.loc 1 1600 2 is_stmt 1 view .LVU403
1601:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1275              		.loc 1 1601 2 is_stmt 0 view .LVU404
 1276 005a EF7A     		ldrb	r7, [r5, #11]	@ zero_extendqisi2
1600:src/keys.c    **** 	++State2.numdigit;
 1277              		.loc 1 1600 16 view .LVU405
 1278 005c 2C81     		strh	r4, [r5, #8]	@ movhi
1601:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1279              		.loc 1 1601 2 is_stmt 1 view .LVU406
 1280 005e 0137     		adds	r7, r7, #1
1602:src/keys.c    **** 		int result = arg_eval(val);
 1281              		.loc 1 1602 16 is_stmt 0 view .LVU407
 1282 0060 04EB8403 		add	r3, r4, r4, lsl #2
1601:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1283              		.loc 1 1601 2 view .LVU408
 1284 0064 FFB2     		uxtb	r7, r7
1602:src/keys.c    **** 		int result = arg_eval(val);
 1285              		.loc 1 1602 5 view .LVU409
 1286 0066 B0EB430F 		cmp	r0, r3, lsl #1
1601:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1287              		.loc 1 1601 2 view .LVU410
 1288 006a EF72     		strb	r7, [r5, #11]
1602:src/keys.c    **** 		int result = arg_eval(val);
 1289              		.loc 1 1602 2 is_stmt 1 view .LVU411
1602:src/keys.c    **** 		int result = arg_eval(val);
 1290              		.loc 1 1602 5 is_stmt 0 view .LVU412
 1291 006c 04DB     		blt	.L133
1602:src/keys.c    **** 		int result = arg_eval(val);
 1292              		.loc 1 1602 49 discriminator 1 view .LVU413
 1293 006e 3046     		mov	r0, r6
 1294 0070 FFF7FEFF 		bl	num_arg_digits
 1295              	.LVL96:
1602:src/keys.c    **** 		int result = arg_eval(val);
 1296              		.loc 1 1602 27 discriminator 1 view .LVU414
 1297 0074 8742     		cmp	r7, r0
 1298 0076 2BDB     		blt	.L127
 1299              	.L133:
 1300              	.LBB274:
1603:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1301              		.loc 1 1603 3 is_stmt 1 view .LVU415
1603:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1302              		.loc 1 1603 16 is_stmt 0 view .LVU416
 1303 0078 2046     		mov	r0, r4
 1304 007a FFF7FEFF 		bl	arg_eval
 1305              	.LVL97:
1604:src/keys.c    **** 			--State2.numdigit;
 1306              		.loc 1 1604 3 is_stmt 1 view .LVU417
1604:src/keys.c    **** 			--State2.numdigit;
ARM GAS  /tmp/ccihcwFT.s 			page 75


 1307              		.loc 1 1604 6 is_stmt 0 view .LVU418
 1308 007e 3328     		cmp	r0, #51
 1309 0080 08D1     		bne	.L113
1605:src/keys.c    **** 			State2.digval /= 10;
 1310              		.loc 1 1605 4 is_stmt 1 view .LVU419
1606:src/keys.c    **** 		}
 1311              		.loc 1 1606 18 is_stmt 0 view .LVU420
 1312 0082 2B89     		ldrh	r3, [r5, #8]
 1313 0084 2049     		ldr	r1, .L160+12
1605:src/keys.c    **** 			State2.digval /= 10;
 1314              		.loc 1 1605 4 view .LVU421
 1315 0086 EA7A     		ldrb	r2, [r5, #11]	@ zero_extendqisi2
1606:src/keys.c    **** 		}
 1316              		.loc 1 1606 18 view .LVU422
 1317 0088 A1FB0313 		umull	r1, r3, r1, r3
 1318 008c DB08     		lsrs	r3, r3, #3
1605:src/keys.c    **** 			State2.digval /= 10;
 1319              		.loc 1 1605 4 view .LVU423
 1320 008e 013A     		subs	r2, r2, #1
1606:src/keys.c    **** 		}
 1321              		.loc 1 1606 18 view .LVU424
 1322 0090 2B81     		strh	r3, [r5, #8]	@ movhi
1605:src/keys.c    **** 			State2.digval /= 10;
 1323              		.loc 1 1605 4 view .LVU425
 1324 0092 EA72     		strb	r2, [r5, #11]
1606:src/keys.c    **** 		}
 1325              		.loc 1 1606 4 is_stmt 1 view .LVU426
 1326              	.L113:
 1327              	.LBE274:
1611:src/keys.c    **** 
 1328              		.loc 1 1611 1 is_stmt 0 view .LVU427
 1329 0094 03B0     		add	sp, sp, #12
 1330              		.cfi_remember_state
 1331              		.cfi_def_cfa_offset 20
 1332              		@ sp needed
 1333 0096 F0BD     		pop	{r4, r5, r6, r7, pc}
 1334              	.LVL98:
 1335              	.L155:
 1336              		.cfi_restore_state
1577:src/keys.c    **** 		// Handle local registers and flags
 1337              		.loc 1 1577 2 is_stmt 1 view .LVU428
1577:src/keys.c    **** 		// Handle local registers and flags
 1338              		.loc 1 1577 5 is_stmt 0 view .LVU429
 1339 0098 C807     		lsls	r0, r1, #31
 1340 009a 12D5     		bpl	.L157
1579:src/keys.c    **** 		if (State2.runmode) {
 1341              		.loc 1 1579 3 is_stmt 1 view .LVU430
1579:src/keys.c    **** 		if (State2.runmode) {
 1342              		.loc 1 1579 7 is_stmt 0 view .LVU431
 1343 009c 0F23     		movs	r3, #15
 1344 009e 0193     		str	r3, [sp, #4]
1580:src/keys.c    **** 			if (LocalRegs == 0)
 1345              		.loc 1 1580 3 is_stmt 1 view .LVU432
1580:src/keys.c    **** 			if (LocalRegs == 0)
 1346              		.loc 1 1580 6 is_stmt 0 view .LVU433
 1347 00a0 BCF1000F 		cmp	ip, #0
 1348 00a4 D6D0     		beq	.L125
ARM GAS  /tmp/ccihcwFT.s 			page 76


1581:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1349              		.loc 1 1581 4 is_stmt 1 view .LVU434
1581:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1350              		.loc 1 1581 8 is_stmt 0 view .LVU435
 1351 00a6 174B     		ldr	r3, .L160+8
 1352 00a8 1B68     		ldr	r3, [r3]
1581:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1353              		.loc 1 1581 7 view .LVU436
 1354 00aa B3F9DE37 		ldrsh	r3, [r3, #2014]
 1355 00ae 7BB1     		cbz	r3, .L127
1584:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1356              		.loc 1 1584 5 is_stmt 1 view .LVU437
1584:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1357              		.loc 1 1584 11 is_stmt 0 view .LVU438
 1358 00b0 F0B2     		uxtb	r0, r6
 1359 00b2 FFF7FEFF 		bl	local_regs_rarg
 1360              	.LVL99:
1584:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1361              		.loc 1 1584 45 view .LVU439
 1362 00b6 0138     		subs	r0, r0, #1
1585:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1363              		.loc 1 1585 5 is_stmt 1 view .LVU440
1585:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1364              		.loc 1 1585 8 is_stmt 0 view .LVU441
 1365 00b8 0F28     		cmp	r0, #15
 1366 00ba 06DD     		ble	.L154
1586:src/keys.c    **** 			}
 1367              		.loc 1 1586 6 is_stmt 1 view .LVU442
1586:src/keys.c    **** 			}
 1368              		.loc 1 1586 10 is_stmt 0 view .LVU443
 1369 00bc 0F20     		movs	r0, #15
 1370 00be 0190     		str	r0, [sp, #4]
 1371 00c0 C9E7     		b	.L124
 1372              	.L157:
1591:src/keys.c    **** 	else {
 1373              		.loc 1 1591 3 is_stmt 1 view .LVU444
1591:src/keys.c    **** 	else {
 1374              		.loc 1 1591 65 is_stmt 0 view .LVU445
 1375 00c2 BCF1000F 		cmp	ip, #0
 1376 00c6 13D1     		bne	.L158
 1377 00c8 6320     		movs	r0, #99
 1378              	.LVL100:
 1379              	.L154:
1597:src/keys.c    **** 		return STATE_UNFINISHED;
 1380              		.loc 1 1597 5 view .LVU446
 1381 00ca 8442     		cmp	r4, r0
1595:src/keys.c    **** 	}
 1382              		.loc 1 1595 8 view .LVU447
 1383 00cc 0190     		str	r0, [sp, #4]
1597:src/keys.c    **** 		return STATE_UNFINISHED;
 1384              		.loc 1 1597 2 is_stmt 1 view .LVU448
1597:src/keys.c    **** 		return STATE_UNFINISHED;
 1385              		.loc 1 1597 5 is_stmt 0 view .LVU449
 1386 00ce C4DD     		ble	.L159
 1387              	.L127:
1582:src/keys.c    **** 			if (is_reg) {
 1388              		.loc 1 1582 12 view .LVU450
ARM GAS  /tmp/ccihcwFT.s 			page 77


 1389 00d0 3320     		movs	r0, #51
1611:src/keys.c    **** 
 1390              		.loc 1 1611 1 view .LVU451
 1391 00d2 03B0     		add	sp, sp, #12
 1392              		.cfi_remember_state
 1393              		.cfi_def_cfa_offset 20
 1394              		@ sp needed
 1395 00d4 F0BD     		pop	{r4, r5, r6, r7, pc}
 1396              	.LVL101:
 1397              	.L122:
 1398              		.cfi_restore_state
1590:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
 1399              		.loc 1 1590 7 is_stmt 1 view .LVU452
1593:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1400              		.loc 1 1593 3 view .LVU453
1593:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1401              		.loc 1 1593 9 is_stmt 0 view .LVU454
 1402 00d6 1079     		ldrb	r0, [r2, #4]	@ zero_extendqisi2
1593:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1403              		.loc 1 1593 7 view .LVU455
 1404 00d8 0190     		str	r0, [sp, #4]
1594:src/keys.c    **** 			lim = RARG_IND - 1;
 1405              		.loc 1 1594 3 is_stmt 1 view .LVU456
1594:src/keys.c    **** 			lim = RARG_IND - 1;
 1406              		.loc 1 1594 6 is_stmt 0 view .LVU457
 1407 00da 7F28     		cmp	r0, #127
 1408 00dc BBDD     		ble	.L124
1594:src/keys.c    **** 			lim = RARG_IND - 1;
 1409              		.loc 1 1594 23 discriminator 1 view .LVU458
 1410 00de FB07     		lsls	r3, r7, #31
 1411 00e0 B9D5     		bpl	.L124
1595:src/keys.c    **** 	}
 1412              		.loc 1 1595 4 is_stmt 1 view .LVU459
1595:src/keys.c    **** 	}
 1413              		.loc 1 1595 8 is_stmt 0 view .LVU460
 1414 00e2 7F20     		movs	r0, #127
 1415 00e4 F1E7     		b	.L154
 1416              	.LVL102:
 1417              	.L156:
1570:src/keys.c    **** #else
 1418              		.loc 1 1570 93 discriminator 4 view .LVU461
 1419 00e6 0438     		subs	r0, r0, #4
 1420              	.LVL103:
1570:src/keys.c    **** #else
 1421              		.loc 1 1570 68 discriminator 4 view .LVU462
 1422 00e8 0128     		cmp	r0, #1
1570:src/keys.c    **** #else
 1423              		.loc 1 1570 130 discriminator 4 view .LVU463
 1424 00ea 98BF     		it	ls
 1425 00ec 8D26     		movls	r6, #141
 1426 00ee 95E7     		b	.L116
 1427              	.LVL104:
 1428              	.L158:
1591:src/keys.c    **** 	else {
 1429              		.loc 1 1591 26 discriminator 1 view .LVU464
 1430 00f0 F0B2     		uxtb	r0, r6
 1431 00f2 FFF7FEFF 		bl	global_regs_rarg
ARM GAS  /tmp/ccihcwFT.s 			page 78


 1432              	.LVL105:
1591:src/keys.c    **** 	else {
 1433              		.loc 1 1591 61 discriminator 1 view .LVU465
 1434 00f6 0138     		subs	r0, r0, #1
 1435 00f8 E7E7     		b	.L154
 1436              	.L161:
 1437 00fa 00BF     		.align	2
 1438              	.L160:
 1439 00fc 00000000 		.word	StateWhileOn
 1440 0100 00000000 		.word	argcmds
 1441 0104 00000000 		.word	main_ram
 1442 0108 CDCCCCCC 		.word	-858993459
 1443              		.cfi_endproc
 1444              	.LFE31:
 1446              		.section	.text.intltr,"ax",%progbits
 1447              		.align	1
 1448              		.p2align 2,,3
 1449              		.syntax unified
 1450              		.thumb
 1451              		.thumb_func
 1452              		.fpu fpv4-sp-d16
 1454              	intltr:
 1455              	.LVL106:
 1456              	.LFB18:
 671:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1457              		.loc 1 671 26 is_stmt 1 view -0
 1458              		.cfi_startproc
 1459              		@ args = 0, pretend = 0, frame = 0
 1460              		@ frame_needed = 0, uses_anonymous_args = 0
 672:src/keys.c    **** }
 1461              		.loc 1 672 2 view .LVU467
 672:src/keys.c    **** }
 1462              		.loc 1 672 10 is_stmt 0 view .LVU468
 1463 0000 0B4B     		ldr	r3, .L171
 1464 0002 1B68     		ldr	r3, [r3]
 1465 0004 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 672:src/keys.c    **** }
 1466              		.loc 1 672 22 view .LVU469
 1467 0008 13F00103 		ands	r3, r3, #1
 1468 000c 05D0     		beq	.L164
 672:src/keys.c    **** }
 1469              		.loc 1 672 26 discriminator 1 view .LVU470
 1470 000e 094B     		ldr	r3, .L171+4
 1471 0010 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 672:src/keys.c    **** }
 1472              		.loc 1 672 22 discriminator 1 view .LVU471
 1473 0012 5B06     		lsls	r3, r3, #25
 1474 0014 03D4     		bmi	.L170
 672:src/keys.c    **** }
 1475              		.loc 1 672 22 view .LVU472
 1476 0016 0120     		movs	r0, #1
 1477              	.LVL107:
 673:src/keys.c    **** 
 1478              		.loc 1 673 1 view .LVU473
 1479 0018 7047     		bx	lr
 1480              	.LVL108:
 1481              	.L164:
ARM GAS  /tmp/ccihcwFT.s 			page 79


 672:src/keys.c    **** }
 1482              		.loc 1 672 22 view .LVU474
 1483 001a 1846     		mov	r0, r3
 1484              	.LVL109:
 672:src/keys.c    **** }
 1485              		.loc 1 672 22 view .LVU475
 1486 001c 7047     		bx	lr
 1487              	.LVL110:
 1488              	.L170:
 671:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1489              		.loc 1 671 26 view .LVU476
 1490 001e 10B5     		push	{r4, lr}
 1491              		.cfi_def_cfa_offset 8
 1492              		.cfi_offset 4, -8
 1493              		.cfi_offset 14, -4
 1494 0020 0446     		mov	r4, r0
 1495              	.LVL111:
 1496              	.LBB277:
 1497              	.LBI277:
 671:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1498              		.loc 1 671 12 is_stmt 1 view .LVU477
 1499              	.LBB278:
 672:src/keys.c    **** }
 1500              		.loc 1 672 52 is_stmt 0 view .LVU478
 1501 0022 FFF7FEFF 		bl	int_base
 1502              	.LVL112:
 672:src/keys.c    **** }
 1503              		.loc 1 672 43 view .LVU479
 1504 0026 8442     		cmp	r4, r0
 1505 0028 ACBF     		ite	ge
 1506 002a 0020     		movge	r0, #0
 1507 002c 0120     		movlt	r0, #1
 1508              	.LBE278:
 1509              	.LBE277:
 673:src/keys.c    **** 
 1510              		.loc 1 673 1 view .LVU480
 1511 002e 10BD     		pop	{r4, pc}
 1512              	.LVL113:
 1513              	.L172:
 673:src/keys.c    **** 
 1514              		.loc 1 673 1 view .LVU481
 1515              		.align	2
 1516              	.L171:
 1517 0030 00000000 		.word	main_ram
 1518 0034 00000000 		.word	StateWhileOn
 1519              		.cfi_endproc
 1520              	.LFE18:
 1522              		.section	.text.set_window,"ax",%progbits
 1523              		.align	1
 1524              		.p2align 2,,3
 1525              		.syntax unified
 1526              		.thumb
 1527              		.thumb_func
 1528              		.fpu fpv4-sp-d16
 1530              	set_window:
 1531              	.LVL114:
 1532              	.LFB53:
ARM GAS  /tmp/ccihcwFT.s 			page 80


2587:src/keys.c    **** 
2588:src/keys.c    **** 
2589:src/keys.c    **** /*
2590:src/keys.c    ****  *  CAT command
2591:src/keys.c    ****  */
2592:src/keys.c    **** static int process_labellist(const keycode c) {
2593:src/keys.c    **** 	unsigned int pc = State2.digval;
2594:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
2595:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
2596:src/keys.c    **** 	const int opcode = getprog(pc);
2597:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
2598:src/keys.c    **** 	const int direct = State2.runmode;
2599:src/keys.c    **** 	const enum shifts shift = reset_shift();
2600:src/keys.c    **** 	int op = STATE_UNFINISHED;
2601:src/keys.c    **** 
2602:src/keys.c    **** 	if (n < REGION_XROM) {
2603:src/keys.c    **** 		// Digits take you to that segment
2604:src/keys.c    **** 		pc = addrLIB(1, n);
2605:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
2606:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
2607:src/keys.c    **** 		State2.digval = pc;
2608:src/keys.c    **** 		return STATE_UNFINISHED;
2609:src/keys.c    **** 	}
2610:src/keys.c    **** 
2611:src/keys.c    **** 	switch (c | (shift << 8)) {
2612:src/keys.c    **** 
2613:src/keys.c    **** 	case K_UP | (SHIFT_F << 8):		// Find first label of previous program
2614:src/keys.c    **** 		pc = advance_to_previous_label(advance_to_previous_label(pc, 1), 1);
2615:src/keys.c    **** 		goto next;
2616:src/keys.c    **** 
2617:src/keys.c    **** 	case K_DOWN | (SHIFT_F << 8):		// Find next program
2618:src/keys.c    **** 		pc = advance_to_next_label(pc, 0, 1);
2619:src/keys.c    **** 	case K_DOWN:				// Find next label
2620:src/keys.c    **** 	next:
2621:src/keys.c    **** 		State2.digval = advance_to_next_label(pc, 1, 0);
2622:src/keys.c    **** 		return STATE_UNFINISHED;
2623:src/keys.c    **** 
2624:src/keys.c    **** 	case K_UP:				// Find previous label
2625:src/keys.c    **** 		State2.digval = advance_to_previous_label(pc, 0);
2626:src/keys.c    **** 		return STATE_UNFINISHED;
2627:src/keys.c    **** 
2628:src/keys.c    **** 	case K24:				// <- exits
2629:src/keys.c    **** 		break;
2630:src/keys.c    **** 
2631:src/keys.c    **** 	case K20:				// ENTER^
2632:src/keys.c    **** 	set_pc_and_exit:
2633:src/keys.c    **** 		set_pc(pc);			// forced branch
2634:src/keys.c    **** 		break;
2635:src/keys.c    **** 
2636:src/keys.c    **** 	case K24 | (SHIFT_F << 8):		// CLP
2637:src/keys.c    **** 		op = (OP_NIL | OP_CLPROG);
2638:src/keys.c    **** 		goto set_pc_and_exit;
2639:src/keys.c    **** 
2640:src/keys.c    **** 	case K10:				// STO
2641:src/keys.c    **** 	case K11:				// RCL
2642:src/keys.c    **** 	  //#ifndef DM42	
2643:src/keys.c    **** 		op = c == K10 ? (OP_NIL | OP_PSTO) : (OP_NIL | OP_PRCL);
ARM GAS  /tmp/ccihcwFT.s 			page 81


2644:src/keys.c    **** 	  //#endif
2645:src/keys.c    **** /* #ifdef DM42 */
2646:src/keys.c    **** /* 	        op = OP_NIL; */
2647:src/keys.c    **** /* #endif	     */
2648:src/keys.c    **** 	  goto set_pc_and_exit;
2649:src/keys.c    **** #ifdef DM42
2650:src/keys.c    **** 	case K05:				// XEQ
2651:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
2652:src/keys.c    **** 		goto xeq_or_gto;
2653:src/keys.c    **** 
2654:src/keys.c    **** 	case K05 | (SHIFT_F << 8):		// GTO
2655:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
2656:src/keys.c    **** 	xeq_or_gto:
2657:src/keys.c    **** 		if (label)
2658:src/keys.c    **** 			break;
2659:src/keys.c    **** 		return STATE_UNFINISHED;
2660:src/keys.c    **** #else
2661:src/keys.c    **** 	case K30:				// XEQ
2662:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
2663:src/keys.c    **** 		goto xeq_or_gto;
2664:src/keys.c    **** 
2665:src/keys.c    **** 	case K30 | (SHIFT_H << 8):		// GTO
2666:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
2667:src/keys.c    **** 	xeq_or_gto:
2668:src/keys.c    **** 		if (label)
2669:src/keys.c    **** 			break;
2670:src/keys.c    **** 		return STATE_UNFINISHED;
2671:src/keys.c    **** #endif		
2672:src/keys.c    **** 	case K63:				// R/S
2673:src/keys.c    **** 		if (direct && label) {
2674:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
2675:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
2676:src/keys.c    **** 			break;
2677:src/keys.c    **** 		}
2678:src/keys.c    **** 		return STATE_UNFINISHED;
2679:src/keys.c    **** 
2680:src/keys.c    **** 	case K63 | (SHIFT_H << 8):		// P/R
2681:src/keys.c    **** 		State2.runmode = 0;		// switch to program mode
2682:src/keys.c    **** 		goto set_pc_and_exit;
2683:src/keys.c    **** 
2684:src/keys.c    **** 	default:
2685:src/keys.c    **** 		return STATE_UNFINISHED;
2686:src/keys.c    **** 	}
2687:src/keys.c    **** 	State2.digval = 0;
2688:src/keys.c    **** 	State2.labellist = 0;
2689:src/keys.c    **** 	return check_confirm(op);
2690:src/keys.c    **** }
2691:src/keys.c    **** 
2692:src/keys.c    **** 
2693:src/keys.c    **** static void set_window(int c) {
 1533              		.loc 1 2693 31 is_stmt 1 view -0
 1534              		.cfi_startproc
 1535              		@ args = 0, pretend = 0, frame = 0
 1536              		@ frame_needed = 0, uses_anonymous_args = 0
2694:src/keys.c    **** 
2695:src/keys.c    **** 	if (State2.runmode) {
 1537              		.loc 1 2695 2 view .LVU483
ARM GAS  /tmp/ccihcwFT.s 			page 82


2693:src/keys.c    **** 
 1538              		.loc 1 2693 31 is_stmt 0 view .LVU484
 1539 0000 38B5     		push	{r3, r4, r5, lr}
 1540              		.cfi_def_cfa_offset 16
 1541              		.cfi_offset 3, -16
 1542              		.cfi_offset 4, -12
 1543              		.cfi_offset 5, -8
 1544              		.cfi_offset 14, -4
 1545              		.loc 1 2695 6 view .LVU485
 1546 0002 224C     		ldr	r4, .L188
 1547 0004 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 1548              		.loc 1 2695 5 view .LVU486
 1549 0006 5A06     		lsls	r2, r3, #25
 1550 0008 00D4     		bmi	.L185
 1551              	.LVL115:
 1552              	.L173:
2696:src/keys.c    **** 		process_cmdline_set_lift();
2697:src/keys.c    **** 		// Make sure IntMaxWindow is recalculated
2698:src/keys.c    **** 		State2.disp_freeze = 0;
2699:src/keys.c    **** 		display();	
2700:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
2701:src/keys.c    **** 			if (UState.intm) {
2702:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
2703:src/keys.c    **** 					State2.window--;
2704:src/keys.c    **** 				return;
2705:src/keys.c    **** 			}
2706:src/keys.c    **** 			else 
2707:src/keys.c    **** 				State2.window = is_dblmode();
2708:src/keys.c    **** 		}
2709:src/keys.c    **** 		else {
2710:src/keys.c    **** 			if (UState.intm) {
2711:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
2712:src/keys.c    **** 					State2.window++;
2713:src/keys.c    **** 				return;
2714:src/keys.c    **** 			}
2715:src/keys.c    **** 			else
2716:src/keys.c    **** 				State2.window = 0;
2717:src/keys.c    **** 		}
2718:src/keys.c    **** 		set_smode(SDISP_SHOW);
2719:src/keys.c    **** 	}
2720:src/keys.c    **** }
 1553              		.loc 1 2720 1 view .LVU487
 1554 000a 38BD     		pop	{r3, r4, r5, pc}
 1555              	.LVL116:
 1556              	.L185:
2696:src/keys.c    **** 		process_cmdline_set_lift();
 1557              		.loc 1 2696 3 is_stmt 1 view .LVU488
 1558 000c 0546     		mov	r5, r0
 1559 000e FFF7FEFF 		bl	process_cmdline_set_lift
 1560              	.LVL117:
2698:src/keys.c    **** 		display();	
 1561              		.loc 1 2698 3 view .LVU489
2698:src/keys.c    **** 		display();	
 1562              		.loc 1 2698 22 is_stmt 0 view .LVU490
 1563 0012 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 1564 0014 6FF30413 		bfc	r3, #4, #1
 1565 0018 E375     		strb	r3, [r4, #23]
ARM GAS  /tmp/ccihcwFT.s 			page 83


2699:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
 1566              		.loc 1 2699 3 is_stmt 1 view .LVU491
 1567 001a FFF7FEFF 		bl	display
 1568              	.LVL118:
2700:src/keys.c    **** 			if (UState.intm) {
 1569              		.loc 1 2700 3 view .LVU492
2701:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1570              		.loc 1 2701 8 is_stmt 0 view .LVU493
 1571 001e 1C4B     		ldr	r3, .L188+4
 1572 0020 1B68     		ldr	r3, [r3]
2700:src/keys.c    **** 			if (UState.intm) {
 1573              		.loc 1 2700 6 view .LVU494
 1574 0022 2C2D     		cmp	r5, #44
2701:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1575              		.loc 1 2701 8 view .LVU495
 1576 0024 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
2700:src/keys.c    **** 			if (UState.intm) {
 1577              		.loc 1 2700 6 view .LVU496
 1578 0028 18D0     		beq	.L186
2710:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 1579              		.loc 1 2710 4 is_stmt 1 view .LVU497
2710:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 1580              		.loc 1 2710 7 is_stmt 0 view .LVU498
 1581 002a 13F00103 		ands	r3, r3, #1
 1582 002e 09D1     		bne	.L187
2716:src/keys.c    **** 		}
 1583              		.loc 1 2716 5 is_stmt 1 view .LVU499
2716:src/keys.c    **** 		}
 1584              		.loc 1 2716 19 is_stmt 0 view .LVU500
 1585 0030 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 1586 0032 63F3C502 		bfi	r2, r3, #3, #3
 1587 0036 2275     		strb	r2, [r4, #20]
 1588              	.L179:
2718:src/keys.c    **** 	}
 1589              		.loc 1 2718 3 is_stmt 1 view .LVU501
 1590              	.LVL119:
 1591              	.LBB285:
 1592              	.LBI285:
 651:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 1593              		.loc 1 651 13 view .LVU502
 1594              	.LBB286:
 652:src/keys.c    **** }
 1595              		.loc 1 652 2 view .LVU503
 652:src/keys.c    **** }
 1596              		.loc 1 652 15 is_stmt 0 view .LVU504
 1597 0038 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 1598 003a 013B     		subs	r3, r3, #1
 1599 003c 18BF     		it	ne
 1600 003e 0123     		movne	r3, #1
 1601 0040 6374     		strb	r3, [r4, #17]
 1602              	.LVL120:
 652:src/keys.c    **** }
 1603              		.loc 1 652 15 view .LVU505
 1604              	.LBE286:
 1605              	.LBE285:
 1606              		.loc 1 2720 1 view .LVU506
 1607 0042 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/ccihcwFT.s 			page 84


 1608              	.LVL121:
 1609              	.L187:
2711:src/keys.c    **** 					State2.window++;
 1610              		.loc 1 2711 5 is_stmt 1 view .LVU507
2711:src/keys.c    **** 					State2.window++;
 1611              		.loc 1 2711 22 is_stmt 0 view .LVU508
 1612 0044 134A     		ldr	r2, .L188+8
2711:src/keys.c    **** 					State2.window++;
 1613              		.loc 1 2711 42 view .LVU509
 1614 0046 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
2711:src/keys.c    **** 					State2.window++;
 1615              		.loc 1 2711 8 view .LVU510
 1616 0048 1168     		ldr	r1, [r2]
2711:src/keys.c    **** 					State2.window++;
 1617              		.loc 1 2711 42 view .LVU511
 1618 004a C3F3C202 		ubfx	r2, r3, #3, #3
2711:src/keys.c    **** 					State2.window++;
 1619              		.loc 1 2711 8 view .LVU512
 1620 004e 8A42     		cmp	r2, r1
 1621 0050 DBDA     		bge	.L173
2712:src/keys.c    **** 				return;
 1622              		.loc 1 2712 6 is_stmt 1 view .LVU513
2712:src/keys.c    **** 				return;
 1623              		.loc 1 2712 19 is_stmt 0 view .LVU514
 1624 0052 0132     		adds	r2, r2, #1
 1625 0054 62F3C503 		bfi	r3, r2, #3, #3
 1626 0058 2375     		strb	r3, [r4, #20]
 1627              		.loc 1 2720 1 view .LVU515
 1628 005a 38BD     		pop	{r3, r4, r5, pc}
 1629              	.LVL122:
 1630              	.L186:
2701:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1631              		.loc 1 2701 4 is_stmt 1 view .LVU516
2701:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1632              		.loc 1 2701 7 is_stmt 0 view .LVU517
 1633 005c DB07     		lsls	r3, r3, #31
 1634 005e 0ED5     		bpl	.L177
 1635              	.LBB287:
 1636              	.LBI287:
2693:src/keys.c    **** 
 1637              		.loc 1 2693 13 is_stmt 1 view .LVU518
 1638              	.LVL123:
 1639              	.LBB288:
2702:src/keys.c    **** 					State2.window--;
 1640              		.loc 1 2702 5 view .LVU519
2702:src/keys.c    **** 					State2.window--;
 1641              		.loc 1 2702 22 is_stmt 0 view .LVU520
 1642 0060 0C4B     		ldr	r3, .L188+8
2702:src/keys.c    **** 					State2.window--;
 1643              		.loc 1 2702 8 view .LVU521
 1644 0062 1B68     		ldr	r3, [r3]
 1645 0064 002B     		cmp	r3, #0
 1646 0066 D0DD     		ble	.L173
2702:src/keys.c    **** 					State2.window--;
 1647              		.loc 1 2702 43 view .LVU522
 1648 0068 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
2702:src/keys.c    **** 					State2.window--;
ARM GAS  /tmp/ccihcwFT.s 			page 85


 1649              		.loc 1 2702 26 view .LVU523
 1650 006a 13F0380F 		tst	r3, #56
 1651 006e CCD0     		beq	.L173
2703:src/keys.c    **** 				return;
 1652              		.loc 1 2703 6 is_stmt 1 view .LVU524
2703:src/keys.c    **** 				return;
 1653              		.loc 1 2703 12 is_stmt 0 view .LVU525
 1654 0070 C3F3C202 		ubfx	r2, r3, #3, #3
2703:src/keys.c    **** 				return;
 1655              		.loc 1 2703 19 view .LVU526
 1656 0074 0732     		adds	r2, r2, #7
 1657 0076 62F3C503 		bfi	r3, r2, #3, #3
 1658 007a 2375     		strb	r3, [r4, #20]
 1659              	.LBE288:
 1660              	.LBE287:
 1661              		.loc 1 2720 1 view .LVU527
 1662 007c 38BD     		pop	{r3, r4, r5, pc}
 1663              	.LVL124:
 1664              	.L177:
2707:src/keys.c    **** 		}
 1665              		.loc 1 2707 5 is_stmt 1 view .LVU528
2707:src/keys.c    **** 		}
 1666              		.loc 1 2707 21 is_stmt 0 view .LVU529
 1667 007e FFF7FEFF 		bl	is_dblmode
 1668              	.LVL125:
2707:src/keys.c    **** 		}
 1669              		.loc 1 2707 19 view .LVU530
 1670 0082 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 1671 0084 60F3C503 		bfi	r3, r0, #3, #3
 1672 0088 2375     		strb	r3, [r4, #20]
 1673 008a D5E7     		b	.L179
 1674              	.L189:
 1675              		.align	2
 1676              	.L188:
 1677 008c 00000000 		.word	StateWhileOn
 1678 0090 00000000 		.word	main_ram
 1679 0094 00000000 		.word	IntMaxWindow
 1680              		.cfi_endproc
 1681              	.LFE53:
 1683              		.section	.text.arg_storcl,"ax",%progbits
 1684              		.align	1
 1685              		.p2align 2,,3
 1686              		.syntax unified
 1687              		.thumb
 1688              		.thumb_func
 1689              		.fpu fpv4-sp-d16
 1691              	arg_storcl:
 1692              	.LVL126:
 1693              	.LFB34:
1636:src/keys.c    **** 	unsigned int b = CmdBase;
 1694              		.loc 1 1636 56 is_stmt 1 view -0
 1695              		.cfi_startproc
 1696              		@ args = 0, pretend = 0, frame = 0
 1697              		@ frame_needed = 0, uses_anonymous_args = 0
 1698              		@ link register save eliminated.
1637:src/keys.c    **** 
 1699              		.loc 1 1637 2 view .LVU532
ARM GAS  /tmp/ccihcwFT.s 			page 86


1637:src/keys.c    **** 
 1700              		.loc 1 1637 19 is_stmt 0 view .LVU533
 1701 0000 0F4A     		ldr	r2, .L222
 1702 0002 D37F     		ldrb	r3, [r2, #31]	@ zero_extendqisi2
 1703              	.LVL127:
1639:src/keys.c    **** 		CmdBase += n;
 1704              		.loc 1 1639 2 is_stmt 1 view .LVU534
 1705              	.LBB297:
 1706              	.LBI297:
1627:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1707              		.loc 1 1627 12 view .LVU535
 1708              	.LBB298:
1632:src/keys.c    **** #endif
 1709              		.loc 1 1632 2 view .LVU536
1632:src/keys.c    **** #endif
 1710              		.loc 1 1632 41 is_stmt 0 view .LVU537
 1711 0004 032B     		cmp	r3, #3
 1712 0006 14D0     		beq	.L191
1632:src/keys.c    **** #endif
 1713              		.loc 1 1632 24 view .LVU538
 1714 0008 0A2B     		cmp	r3, #10
 1715 000a 12D0     		beq	.L191
 1716              	.LVL128:
 1717              	.LBB299:
 1718              	.LBI299:
1627:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1719              		.loc 1 1627 12 is_stmt 1 view .LVU539
 1720              	.LBB300:
1632:src/keys.c    **** #endif
 1721              		.loc 1 1632 41 is_stmt 0 view .LVU540
 1722 000c 19B1     		cbz	r1, .L192
1632:src/keys.c    **** #endif
 1723              		.loc 1 1632 51 view .LVU541
 1724 000e 152B     		cmp	r3, #21
 1725 0010 0FD0     		beq	.L191
1632:src/keys.c    **** #endif
 1726              		.loc 1 1632 70 view .LVU542
 1727 0012 1A2B     		cmp	r3, #26
 1728 0014 0DD0     		beq	.L191
 1729              	.L192:
 1730              	.LVL129:
1632:src/keys.c    **** #endif
 1731              		.loc 1 1632 70 view .LVU543
 1732              	.LBE300:
 1733              	.LBE299:
 1734              	.LBE298:
 1735              	.LBE297:
1644:src/keys.c    **** 		b -= n;
 1736              		.loc 1 1644 2 is_stmt 1 view .LVU544
1644:src/keys.c    **** 		b -= n;
 1737              		.loc 1 1644 5 is_stmt 0 view .LVU545
 1738 0016 8342     		cmp	r3, r0
 1739 0018 09D3     		bcc	.L197
1645:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 1740              		.loc 1 1645 3 is_stmt 1 view .LVU546
1645:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 1741              		.loc 1 1645 5 is_stmt 0 view .LVU547
ARM GAS  /tmp/ccihcwFT.s 			page 87


 1742 001a 1B1A     		subs	r3, r3, r0
 1743              	.LVL130:
1646:src/keys.c    **** 			CmdBase = b;
 1744              		.loc 1 1646 3 is_stmt 1 view .LVU548
 1745              	.LBB301:
 1746              	.LBI301:
1627:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1747              		.loc 1 1627 12 view .LVU549
 1748              	.LBB302:
1632:src/keys.c    **** #endif
 1749              		.loc 1 1632 2 view .LVU550
1632:src/keys.c    **** #endif
 1750              		.loc 1 1632 41 is_stmt 0 view .LVU551
 1751 001c 032B     		cmp	r3, #3
 1752 001e 0CD0     		beq	.L195
1632:src/keys.c    **** #endif
 1753              		.loc 1 1632 24 view .LVU552
 1754 0020 0A2B     		cmp	r3, #10
 1755 0022 0AD0     		beq	.L195
 1756              	.LVL131:
 1757              	.LBB303:
 1758              	.LBI303:
1627:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1759              		.loc 1 1627 12 is_stmt 1 view .LVU553
 1760              	.LBB304:
1632:src/keys.c    **** #endif
 1761              		.loc 1 1632 41 is_stmt 0 view .LVU554
 1762 0024 19B1     		cbz	r1, .L197
1632:src/keys.c    **** #endif
 1763              		.loc 1 1632 51 view .LVU555
 1764 0026 152B     		cmp	r3, #21
 1765 0028 07D0     		beq	.L195
1632:src/keys.c    **** #endif
 1766              		.loc 1 1632 70 view .LVU556
 1767 002a 1A2B     		cmp	r3, #26
 1768 002c 05D0     		beq	.L195
 1769              	.LVL132:
 1770              	.L197:
1632:src/keys.c    **** #endif
 1771              		.loc 1 1632 70 view .LVU557
 1772              	.LBE304:
 1773              	.LBE303:
 1774              	.LBE302:
 1775              	.LBE301:
1651:src/keys.c    **** }
 1776              		.loc 1 1651 9 view .LVU558
 1777 002e 0020     		movs	r0, #0
 1778              	.LVL133:
1652:src/keys.c    **** 
 1779              		.loc 1 1652 1 view .LVU559
 1780 0030 7047     		bx	lr
 1781              	.LVL134:
 1782              	.L191:
1640:src/keys.c    **** 		return 1;
 1783              		.loc 1 1640 3 is_stmt 1 view .LVU560
1640:src/keys.c    **** 		return 1;
 1784              		.loc 1 1640 11 is_stmt 0 view .LVU561
ARM GAS  /tmp/ccihcwFT.s 			page 88


 1785 0032 1844     		add	r0, r0, r3
 1786              	.LVL135:
1640:src/keys.c    **** 		return 1;
 1787              		.loc 1 1640 11 view .LVU562
 1788 0034 D077     		strb	r0, [r2, #31]
1641:src/keys.c    **** 	}
 1789              		.loc 1 1641 3 is_stmt 1 view .LVU563
1641:src/keys.c    **** 	}
 1790              		.loc 1 1641 10 is_stmt 0 view .LVU564
 1791 0036 0120     		movs	r0, #1
 1792 0038 7047     		bx	lr
 1793              	.LVL136:
 1794              	.L195:
1647:src/keys.c    **** 			return 1;
 1795              		.loc 1 1647 4 is_stmt 1 view .LVU565
1647:src/keys.c    **** 			return 1;
 1796              		.loc 1 1647 12 is_stmt 0 view .LVU566
 1797 003a D377     		strb	r3, [r2, #31]
1648:src/keys.c    **** 		}
 1798              		.loc 1 1648 4 is_stmt 1 view .LVU567
1648:src/keys.c    **** 		}
 1799              		.loc 1 1648 11 is_stmt 0 view .LVU568
 1800 003c 0120     		movs	r0, #1
 1801              	.LVL137:
1648:src/keys.c    **** 		}
 1802              		.loc 1 1648 11 view .LVU569
 1803 003e 7047     		bx	lr
 1804              	.L223:
 1805              		.align	2
 1806              	.L222:
 1807 0040 00000000 		.word	StateWhileOn
 1808              		.cfi_endproc
 1809              	.LFE34:
 1811              		.section	.text.process_arg,"ax",%progbits
 1812              		.align	1
 1813              		.p2align 2,,3
 1814              		.syntax unified
 1815              		.thumb
 1816              		.thumb_func
 1817              		.fpu fpv4-sp-d16
 1819              	process_arg:
 1820              	.LVL138:
 1821              	.LFB37:
1686:src/keys.c    **** 	unsigned int base = CmdBase;
 1822              		.loc 1 1686 41 is_stmt 1 view -0
 1823              		.cfi_startproc
 1824              		@ args = 0, pretend = 0, frame = 8
 1825              		@ frame_needed = 0, uses_anonymous_args = 0
1687:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1826              		.loc 1 1687 2 view .LVU571
1686:src/keys.c    **** 	unsigned int base = CmdBase;
 1827              		.loc 1 1686 41 is_stmt 0 view .LVU572
 1828 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1829              		.cfi_def_cfa_offset 36
 1830              		.cfi_offset 4, -36
 1831              		.cfi_offset 5, -32
 1832              		.cfi_offset 6, -28
ARM GAS  /tmp/ccihcwFT.s 			page 89


 1833              		.cfi_offset 7, -24
 1834              		.cfi_offset 8, -20
 1835              		.cfi_offset 9, -16
 1836              		.cfi_offset 10, -12
 1837              		.cfi_offset 11, -8
 1838              		.cfi_offset 14, -4
1687:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1839              		.loc 1 1687 22 view .LVU573
 1840 0004 C94C     		ldr	r4, .L363
1689:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1841              		.loc 1 1689 31 view .LVU574
 1842 0006 DFF834A3 		ldr	r10, .L363+16
1687:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1843              		.loc 1 1687 22 view .LVU575
 1844 000a E77F     		ldrb	r7, [r4, #31]	@ zero_extendqisi2
 1845              	.LBB326:
 1846              	.LBB327:
 1847              	.LBB328:
 1848              	.LBB329:
 133:src/keys.c    **** }
 1849              		.loc 1 133 23 view .LVU576
 1850 000c C84A     		ldr	r2, .L363+4
 1851              	.LBE329:
 1852              	.LBE328:
 224:src/keys.c    **** }
 1853              		.loc 1 224 28 view .LVU577
 1854 000e C94D     		ldr	r5, .L363+8
 1855              	.LBB332:
 1856              	.LBB330:
 133:src/keys.c    **** }
 1857              		.loc 1 133 23 view .LVU578
 1858 0010 125C     		ldrb	r2, [r2, r0]	@ zero_extendqisi2
 1859              	.LBE330:
 1860              	.LBE332:
 1861              	.LBE327:
 1862              	.LBE326:
1690:src/keys.c    **** 	const enum shifts shift = reset_shift();
 1863              		.loc 1 1690 20 view .LVU579
 1864 0012 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 1865              	.LBB336:
 1866              	.LBB334:
 224:src/keys.c    **** }
 1867              		.loc 1 224 28 view .LVU580
 1868 0014 15F80290 		ldrb	r9, [r5, r2]	@ zero_extendqisi2
 1869              	.LBE334:
 1870              	.LBE336:
1689:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1871              		.loc 1 1689 31 view .LVU581
 1872 0018 0AEB0711 		add	r1, r10, r7, lsl #4
1686:src/keys.c    **** 	unsigned int base = CmdBase;
 1873              		.loc 1 1686 41 view .LVU582
 1874 001c 83B0     		sub	sp, sp, #12
 1875              		.cfi_def_cfa_offset 48
1689:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1876              		.loc 1 1689 31 view .LVU583
 1877 001e 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
1687:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
ARM GAS  /tmp/ccihcwFT.s 			page 90


 1878              		.loc 1 1687 15 view .LVU584
 1879 0020 0097     		str	r7, [sp]
 1880              	.LVL139:
1688:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
 1881              		.loc 1 1688 2 is_stmt 1 view .LVU585
1689:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1882              		.loc 1 1689 40 is_stmt 0 view .LVU586
 1883 0022 4A07     		lsls	r2, r1, #29
 1884 0024 58BF     		it	pl
 1885 0026 94F91580 		ldrsbpl	r8, [r4, #21]
1690:src/keys.c    **** 	const enum shifts shift = reset_shift();
 1886              		.loc 1 1690 20 view .LVU587
 1887 002a 0193     		str	r3, [sp, #4]
1689:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1888              		.loc 1 1689 40 view .LVU588
 1889 002c 54BF     		ite	pl
 1890 002e 4FEAD878 		lsrpl	r8, r8, #31
 1891 0032 4FF00108 		movmi	r8, #1
1686:src/keys.c    **** 	unsigned int base = CmdBase;
 1892              		.loc 1 1686 41 view .LVU589
 1893 0036 0646     		mov	r6, r0
 1894              	.LVL140:
 1895              	.LBB337:
 1896              	.LBI326:
 200:src/keys.c    **** {
 1897              		.loc 1 200 14 is_stmt 1 view .LVU590
 1898              	.LBB335:
 202:src/keys.c    ****     // K00 - K05
 1899              		.loc 1 202 3 view .LVU591
 224:src/keys.c    **** }
 1900              		.loc 1 224 3 view .LVU592
 1901              	.LBB333:
 1902              	.LBI328:
 121:src/keys.c    **** {
 1903              		.loc 1 121 12 view .LVU593
 1904              	.LBB331:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 1905              		.loc 1 123 2 view .LVU594
 133:src/keys.c    **** }
 1906              		.loc 1 133 2 view .LVU595
 133:src/keys.c    **** }
 1907              		.loc 1 133 2 is_stmt 0 view .LVU596
 1908              	.LBE331:
 1909              	.LBE333:
 224:src/keys.c    **** }
 1910              		.loc 1 224 10 view .LVU597
 1911 0038 4D46     		mov	r5, r9
 1912              	.LVL141:
 224:src/keys.c    **** }
 1913              		.loc 1 224 10 view .LVU598
 1914              	.LBE335:
 1915              	.LBE337:
1689:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1916              		.loc 1 1689 2 is_stmt 1 view .LVU599
1690:src/keys.c    **** 	const enum shifts shift = reset_shift();
 1917              		.loc 1 1690 2 view .LVU600
1691:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
ARM GAS  /tmp/ccihcwFT.s 			page 91


 1918              		.loc 1 1691 2 view .LVU601
 1919              	.LBB338:
 1920              	.LBI338:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 1921              		.loc 1 104 13 view .LVU602
 1922              	.LBE338:
 105:src/keys.c    **** }
 1923              		.loc 1 105 2 view .LVU603
 1924              	.LBB351:
 1925              	.LBB339:
 1926              	.LBI339:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 1927              		.loc 1 94 20 view .LVU604
 1928              	.LBB340:
  95:src/keys.c    **** 	State2.shifts = shift;
 1929              		.loc 1 95 2 view .LVU605
 1930              	.LBB341:
 1931              	.LBI341:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 1932              		.loc 1 86 13 view .LVU606
 1933              	.LBB342:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1934              		.loc 1 87 2 view .LVU607
 1935              	.LBE342:
 1936              	.LBE341:
 1937              	.LBE340:
 1938              	.LBE339:
 1939              	.LBE351:
1689:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1940              		.loc 1 1689 31 is_stmt 0 view .LVU608
 1941 003a 4FEA071B 		lsl	fp, r7, #4
 1942              	.LBB352:
 1943              	.LBB348:
 1944              	.LBB345:
 1945              	.LBB344:
 1946              	.LBB343:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1947              		.loc 1 87 18 view .LVU609
 1948 003e FFF7FEFF 		bl	shift_down
 1949              	.LVL142:
  88:src/keys.c    **** }
 1950              		.loc 1 88 2 is_stmt 1 view .LVU610
  88:src/keys.c    **** }
 1951              		.loc 1 88 52 is_stmt 0 view .LVU611
 1952 0042 00B9     		cbnz	r0, .L226
 1953 0044 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
 1954              	.LVL143:
 1955              	.L226:
  88:src/keys.c    **** }
 1956              		.loc 1 88 52 view .LVU612
 1957              	.LBE343:
 1958              	.LBE344:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1959              		.loc 1 96 2 is_stmt 1 view .LVU613
 1960              	.LBE345:
 1961              	.LBE348:
 1962              	.LBE352:
ARM GAS  /tmp/ccihcwFT.s 			page 92


1692:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1963              		.loc 1 1692 38 is_stmt 0 view .LVU614
 1964 0046 D344     		add	fp, fp, r10
 1965              	.LBB353:
 1966              	.LBB349:
 1967              	.LBB346:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1968              		.loc 1 96 16 view .LVU615
 1969 0048 4FF0000E 		mov	lr, #0
 1970              	.LBE346:
 1971              	.LBE349:
 1972              	.LBE353:
1692:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1973              		.loc 1 1692 38 view .LVU616
 1974 004c 9BF80510 		ldrb	r1, [fp, #5]	@ zero_extendqisi2
 1975              	.LBB354:
 1976              	.LBB350:
 1977              	.LBB347:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1978              		.loc 1 96 16 view .LVU617
 1979 0050 84F810E0 		strb	lr, [r4, #16]
  98:src/keys.c    **** }
 1980              		.loc 1 98 2 is_stmt 1 view .LVU618
 1981              	.LVL144:
  98:src/keys.c    **** }
 1982              		.loc 1 98 2 is_stmt 0 view .LVU619
 1983              	.LBE347:
 1984              	.LBE350:
 1985              	.LBE354:
1692:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1986              		.loc 1 1692 2 is_stmt 1 view .LVU620
1692:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1987              		.loc 1 1692 61 is_stmt 0 view .LVU621
 1988 0054 8B06     		lsls	r3, r1, #26
 1989 0056 C1F3401C 		ubfx	ip, r1, #5, #1
 1990 005a 19D5     		bpl	.L227
1692:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1991              		.loc 1 1692 61 discriminator 1 view .LVU622
 1992 005c 617D     		ldrb	r1, [r4, #21]	@ zero_extendqisi2
 1993 005e 11F0C00F 		tst	r1, #192
 1994 0062 1FD0     		beq	.L352
 1995              	.LVL145:
1696:src/keys.c    **** 	if (base >= NUM_RARG) {
 1996              		.loc 1 1696 2 is_stmt 1 view .LVU623
1697:src/keys.c    **** 		reset_arg();
 1997              		.loc 1 1697 5 is_stmt 0 view .LVU624
 1998 0064 8E2F     		cmp	r7, #142
1696:src/keys.c    **** 	if (base >= NUM_RARG) {
 1999              		.loc 1 1696 4 view .LVU625
 2000 0066 29F08005 		bic	r5, r9, #128
 2001              	.LVL146:
1697:src/keys.c    **** 		reset_arg();
 2002              		.loc 1 1697 2 is_stmt 1 view .LVU626
1697:src/keys.c    **** 		reset_arg();
 2003              		.loc 1 1697 5 is_stmt 0 view .LVU627
 2004 006a 15D8     		bhi	.L254
1692:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
ARM GAS  /tmp/ccihcwFT.s 			page 93


 2005              		.loc 1 1692 61 view .LVU628
 2006 006c F446     		mov	ip, lr
 2007              	.L236:
1702:src/keys.c    **** 	  switch (n) {
 2008              		.loc 1 1702 35 discriminator 1 view .LVU629
 2009 006e 6169     		ldr	r1, [r4, #20]
 2010 0070 11F4103F 		tst	r1, #147456
 2011 0074 2ED1     		bne	.L238
1703:src/keys.c    **** 	  case regX_idx:
 2012              		.loc 1 1703 4 is_stmt 1 view .LVU630
 2013 0076 672D     		cmp	r5, #103
 2014 0078 2CD8     		bhi	.L238
1703:src/keys.c    **** 	  case regX_idx:
 2015              		.loc 1 1703 4 is_stmt 0 view .LVU631
 2016 007a 632D     		cmp	r5, #99
 2017 007c 24D9     		bls	.L302
 2018 007e 653D     		subs	r5, r5, #101
 2019              	.LVL147:
1703:src/keys.c    **** 	  case regX_idx:
 2020              		.loc 1 1703 4 view .LVU632
 2021 0080 022D     		cmp	r5, #2
 2022 0082 00F26282 		bhi	.L241
 2023 0086 DFE815F0 		tbh	[pc, r5, lsl #1]
 2024              	.L243:
 2025 008a 0D01     		.2byte	(.L245-.L243)/2
 2026 008c 0701     		.2byte	(.L244-.L243)/2
 2027 008e 0F01     		.2byte	(.L242-.L243)/2
 2028              	.LVL148:
 2029              		.p2align 1
 2030              	.L227:
1696:src/keys.c    **** 	if (base >= NUM_RARG) {
 2031              		.loc 1 1696 2 is_stmt 1 view .LVU633
1697:src/keys.c    **** 		reset_arg();
 2032              		.loc 1 1697 5 is_stmt 0 view .LVU634
 2033 0090 8E2F     		cmp	r7, #142
1696:src/keys.c    **** 	if (base >= NUM_RARG) {
 2034              		.loc 1 1696 4 view .LVU635
 2035 0092 29F08005 		bic	r5, r9, #128
 2036              	.LVL149:
1697:src/keys.c    **** 		reset_arg();
 2037              		.loc 1 1697 2 is_stmt 1 view .LVU636
1697:src/keys.c    **** 		reset_arg();
 2038              		.loc 1 1697 5 is_stmt 0 view .LVU637
 2039 0096 EAD9     		bls	.L236
 2040              	.LVL150:
 2041              	.L254:
1935:src/keys.c    **** 	default:
 2042              		.loc 1 1935 3 is_stmt 1 view .LVU638
 2043 0098 FFF7FEFF 		bl	reset_arg
 2044              	.LVL151:
 2045              	.L345:
1939:src/keys.c    **** }
 2046              		.loc 1 1939 9 is_stmt 0 view .LVU639
 2047 009c 3320     		movs	r0, #51
 2048              	.L224:
1940:src/keys.c    **** 
 2049              		.loc 1 1940 1 view .LVU640
ARM GAS  /tmp/ccihcwFT.s 			page 94


 2050 009e 03B0     		add	sp, sp, #12
 2051              		.cfi_remember_state
 2052              		.cfi_def_cfa_offset 36
 2053              		@ sp needed
 2054 00a0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2055              	.LVL152:
 2056              	.L352:
 2057              		.cfi_restore_state
1693:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 2058              		.loc 1 1693 2 is_stmt 1 view .LVU641
1693:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 2059              		.loc 1 1693 35 is_stmt 0 view .LVU642
 2060 00a4 292E     		cmp	r6, #41
 2061 00a6 00F09380 		beq	.L229
1694:src/keys.c    **** 
 2062              		.loc 1 1694 11 view .LVU643
 2063 00aa 0128     		cmp	r0, #1
 2064 00ac 00F0CD80 		beq	.L230
1694:src/keys.c    **** 
 2065              		.loc 1 1694 32 discriminator 3 view .LVU644
 2066 00b0 B9F1090F 		cmp	r9, #9
 2067 00b4 00F28980 		bhi	.L231
 2068              	.LVL153:
1696:src/keys.c    **** 	if (base >= NUM_RARG) {
 2069              		.loc 1 1696 2 is_stmt 1 view .LVU645
1697:src/keys.c    **** 		reset_arg();
 2070              		.loc 1 1697 2 view .LVU646
1697:src/keys.c    **** 		reset_arg();
 2071              		.loc 1 1697 5 is_stmt 0 view .LVU647
 2072 00b8 8E2F     		cmp	r7, #142
 2073 00ba EDD8     		bhi	.L254
1702:src/keys.c    **** 	  switch (n) {
 2074              		.loc 1 1702 35 view .LVU648
 2075 00bc 6169     		ldr	r1, [r4, #20]
 2076 00be 11F4103F 		tst	r1, #147456
1692:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2077              		.loc 1 1692 61 view .LVU649
 2078 00c2 4FF0010C 		mov	ip, #1
1702:src/keys.c    **** 	  switch (n) {
 2079              		.loc 1 1702 35 view .LVU650
 2080 00c6 05D1     		bne	.L238
 2081              	.L302:
1703:src/keys.c    **** 	  case regX_idx:
 2082              		.loc 1 1703 4 view .LVU651
 2083 00c8 15B1     		cbz	r5, .L240
 2084 00ca 6A1F     		subs	r2, r5, #5
 2085 00cc 042A     		cmp	r2, #4
 2086 00ce 01D8     		bhi	.L238
 2087              	.L240:
1718:src/keys.c    **** 	  }
 2088              		.loc 1 1718 6 is_stmt 1 view .LVU652
1718:src/keys.c    **** 	  }
 2089              		.loc 1 1718 13 is_stmt 0 view .LVU653
 2090 00d0 2846     		mov	r0, r5
 2091              	.LVL154:
1718:src/keys.c    **** 	  }
 2092              		.loc 1 1718 13 view .LVU654
ARM GAS  /tmp/ccihcwFT.s 			page 95


 2093 00d2 E2E0     		b	.L346
 2094              	.LVL155:
 2095              	.L238:
1725:src/keys.c    **** 		// row column shorthand addressing
 2096              		.loc 1 1725 2 is_stmt 1 view .LVU655
1731:src/keys.c    **** 		switch ((int)c) {
 2097              		.loc 1 1731 2 view .LVU656
1731:src/keys.c    **** 		switch ((int)c) {
 2098              		.loc 1 1731 5 is_stmt 0 view .LVU657
 2099 00d4 4D2F     		cmp	r7, #77
 2100 00d6 00F08480 		beq	.L353
1731:src/keys.c    **** 		switch ((int)c) {
 2101              		.loc 1 1731 23 discriminator 1 view .LVU658
 2102 00da 07F17302 		add	r2, r7, #115
 2103 00de D2B2     		uxtb	r2, r2
 2104 00e0 012A     		cmp	r2, #1
 2105 00e2 61D9     		bls	.L354
 2106              	.LVL156:
 2107              	.L247:
1745:src/keys.c    **** #else
 2108              		.loc 1 1745 3 is_stmt 1 view .LVU659
1745:src/keys.c    **** #else
 2109              		.loc 1 1745 11 is_stmt 0 view .LVU660
 2110 00e4 E777     		strb	r7, [r4, #31]
1768:src/keys.c    **** 	case K_F:
 2111              		.loc 1 1768 2 is_stmt 1 view .LVU661
 2112 00e6 2D2E     		cmp	r6, #45
 2113 00e8 D8D8     		bhi	.L345
 2114 00ea 01A3     		adr	r3, .L249
 2115 00ec 53F826F0 		ldr	pc, [r3, r6, lsl #2]
 2116              		.p2align 2
 2117              	.L249:
 2118 00f0 FF010000 		.word	.L266+1
 2119 00f4 FF010000 		.word	.L266+1
 2120 00f8 FF010000 		.word	.L266+1
 2121 00fc FF010000 		.word	.L266+1
 2122 0100 9D000000 		.word	.L345+1
 2123 0104 9D000000 		.word	.L345+1
 2124 0108 9D000000 		.word	.L345+1
 2125 010c 9D000000 		.word	.L345+1
 2126 0110 FF010000 		.word	.L266+1
 2127 0114 FF010000 		.word	.L266+1
 2128 0118 FF010000 		.word	.L266+1
 2129 011c FF010000 		.word	.L266+1
 2130 0120 F9030000 		.word	.L265+1
 2131 0124 9D000000 		.word	.L345+1
 2132 0128 9D000000 		.word	.L345+1
 2133 012c 9D000000 		.word	.L345+1
 2134 0130 01040000 		.word	.L264+1
 2135 0134 9D000000 		.word	.L345+1
 2136 0138 C5020000 		.word	.L263+1
 2137 013c 9D000000 		.word	.L345+1
 2138 0140 9D000000 		.word	.L345+1
 2139 0144 9D000000 		.word	.L345+1
 2140 0148 DF020000 		.word	.L262+1
 2141 014c 9D000000 		.word	.L345+1
 2142 0150 B5020000 		.word	.L261+1
ARM GAS  /tmp/ccihcwFT.s 			page 96


 2143 0154 41030000 		.word	.L260+1
 2144 0158 9D000000 		.word	.L345+1
 2145 015c 9D000000 		.word	.L345+1
 2146 0160 79020000 		.word	.L259+1
 2147 0164 9D000000 		.word	.L345+1
 2148 0168 9D000000 		.word	.L345+1
 2149 016c 55030000 		.word	.L258+1
 2150 0170 61030000 		.word	.L257+1
 2151 0174 6D030000 		.word	.L256+1
 2152 0178 79030000 		.word	.L255+1
 2153 017c 9D000000 		.word	.L345+1
 2154 0180 99000000 		.word	.L254+1
 2155 0184 9D000000 		.word	.L345+1
 2156 0188 93030000 		.word	.L253+1
 2157 018c 9D000000 		.word	.L345+1
 2158 0190 D9030000 		.word	.L252+1
 2159 0194 0D030000 		.word	.L251+1
 2160 0198 9D000000 		.word	.L345+1
 2161 019c 9D000000 		.word	.L345+1
 2162 01a0 27040000 		.word	.L250+1
 2163 01a4 EB020000 		.word	.L248+1
 2164              	.LVL157:
 2165              		.p2align 1
 2166              	.L354:
1732:src/keys.c    **** 		case K_UP:	// up arrow
 2167              		.loc 1 1732 3 view .LVU662
 2168 01a8 122E     		cmp	r6, #18
 2169 01aa 00F08980 		beq	.L292
 2170 01ae 182E     		cmp	r6, #24
 2171 01b0 7CD0     		beq	.L293
 2172 01b2 012E     		cmp	r6, #1
 2173 01b4 96D1     		bne	.L247
1740:src/keys.c    **** 		  if (base == RARG_SIG) base = RARG_FIX;
 2174              		.loc 1 1740 5 view .LVU663
1741:src/keys.c    **** 		  if (base == RARG_SIG0) base = RARG_SIG;
 2175              		.loc 1 1741 5 view .LVU664
1741:src/keys.c    **** 		  if (base == RARG_SIG0) base = RARG_SIG;
 2176              		.loc 1 1741 8 is_stmt 0 view .LVU665
 2177 01b6 8D2F     		cmp	r7, #141
 2178 01b8 00F08A80 		beq	.L355
 2179              	.L300:
1742:src/keys.c    **** 		}
 2180              		.loc 1 1742 5 is_stmt 1 view .LVU666
1742:src/keys.c    **** 		}
 2181              		.loc 1 1742 8 is_stmt 0 view .LVU667
 2182 01bc 8E2F     		cmp	r7, #142
 2183 01be 03BF     		ittte	eq
 2184 01c0 8D23     		moveq	r3, #141
 2185 01c2 0093     		streq	r3, [sp]
1742:src/keys.c    **** 		}
 2186              		.loc 1 1742 33 view .LVU668
 2187 01c4 1F46     		moveq	r7, r3
 2188              	.LVL158:
1742:src/keys.c    **** 		}
 2189              		.loc 1 1742 33 view .LVU669
 2190 01c6 8E27     		movne	r7, #142
 2191 01c8 8CE7     		b	.L247
ARM GAS  /tmp/ccihcwFT.s 			page 97


 2192              	.LVL159:
 2193              	.L231:
1694:src/keys.c    **** 
 2194              		.loc 1 1694 42 discriminator 4 view .LVU670
 2195 01ca 19F0800F 		tst	r9, #128
 2196 01ce 3CD0     		beq	.L230
 2197              	.L229:
 2198              	.LVL160:
1696:src/keys.c    **** 	if (base >= NUM_RARG) {
 2199              		.loc 1 1696 2 is_stmt 1 view .LVU671
1697:src/keys.c    **** 		reset_arg();
 2200              		.loc 1 1697 5 is_stmt 0 view .LVU672
 2201 01d0 8E2F     		cmp	r7, #142
1696:src/keys.c    **** 	if (base >= NUM_RARG) {
 2202              		.loc 1 1696 4 view .LVU673
 2203 01d2 29F08005 		bic	r5, r9, #128
 2204              	.LVL161:
1697:src/keys.c    **** 		reset_arg();
 2205              		.loc 1 1697 2 is_stmt 1 view .LVU674
1692:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2206              		.loc 1 1692 61 is_stmt 0 view .LVU675
 2207 01d6 98BF     		it	ls
 2208 01d8 4FF0010C 		movls	ip, #1
1697:src/keys.c    **** 		reset_arg();
 2209              		.loc 1 1697 5 view .LVU676
 2210 01dc 7FF647AF 		bls	.L236
 2211 01e0 5AE7     		b	.L254
 2212              	.L353:
1732:src/keys.c    **** 		case K_UP:	// up arrow
 2213              		.loc 1 1732 3 is_stmt 1 view .LVU677
 2214 01e2 122E     		cmp	r6, #18
 2215 01e4 6CD0     		beq	.L292
 2216 01e6 182E     		cmp	r6, #24
 2217 01e8 00F07381 		beq	.L295
 2218 01ec 012E     		cmp	r6, #1
 2219 01ee 7FF479AF 		bne	.L247
 2220              	.LVL162:
1745:src/keys.c    **** #else
 2221              		.loc 1 1745 3 view .LVU678
1745:src/keys.c    **** #else
 2222              		.loc 1 1745 11 is_stmt 0 view .LVU679
 2223 01f2 4FF08D09 		mov	r9, #141
 2224 01f6 84F81F90 		strb	r9, [r4, #31]
1768:src/keys.c    **** 	case K_F:
 2225              		.loc 1 1768 2 is_stmt 1 view .LVU680
1745:src/keys.c    **** #else
 2226              		.loc 1 1745 11 is_stmt 0 view .LVU681
 2227 01fa CDF80090 		str	r9, [sp]
 2228              	.LVL163:
 2229              	.L266:
1823:src/keys.c    **** 			return arg_eval(n);
 2230              		.loc 1 1823 4 is_stmt 1 view .LVU682
1823:src/keys.c    **** 			return arg_eval(n);
 2231              		.loc 1 1823 8 is_stmt 0 view .LVU683
 2232 01fe 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
1823:src/keys.c    **** 			return arg_eval(n);
 2233              		.loc 1 1823 7 view .LVU684
ARM GAS  /tmp/ccihcwFT.s 			page 98


 2234 0200 5006     		lsls	r0, r2, #25
 2235              	.LVL164:
1823:src/keys.c    **** 			return arg_eval(n);
 2236              		.loc 1 1823 7 view .LVU685
 2237 0202 47D4     		bmi	.L281
1823:src/keys.c    **** 			return arg_eval(n);
 2238              		.loc 1 1823 19 discriminator 1 view .LVU686
 2239 0204 B8F1000F 		cmp	r8, #0
 2240 0208 44D1     		bne	.L281
1825:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 2241              		.loc 1 1825 3 is_stmt 1 view .LVU687
1825:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 2242              		.loc 1 1825 6 is_stmt 0 view .LVU688
 2243 020a 032E     		cmp	r6, #3
 2244 020c 3FF646AF 		bhi	.L345
1826:src/keys.c    **** 		break;
 2245              		.loc 1 1826 4 is_stmt 1 view .LVU689
 2246              	.LVL165:
 2247              	.LBB355:
 2248              	.LBI355:
1613:src/keys.c    **** 	const unsigned int b = CmdBase;
 2249              		.loc 1 1613 12 view .LVU690
 2250              	.LBB356:
1614:src/keys.c    **** 
 2251              		.loc 1 1614 2 view .LVU691
1616:src/keys.c    **** 	{
 2252              		.loc 1 1616 2 view .LVU692
1616:src/keys.c    **** 	{
 2253              		.loc 1 1616 16 is_stmt 0 view .LVU693
 2254 0210 009B     		ldr	r3, [sp]
 2255 0212 0AEB0311 		add	r1, r10, r3, lsl #4
 2256 0216 1801     		lsls	r0, r3, #4
 2257 0218 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
1616:src/keys.c    **** 	{
 2258              		.loc 1 1616 5 view .LVU694
 2259 021a 8906     		lsls	r1, r1, #26
 2260 021c 05D4     		bmi	.L272
1616:src/keys.c    **** 	{
 2261              		.loc 1 1616 40 view .LVU695
 2262 021e A3F15109 		sub	r9, r3, #81
1616:src/keys.c    **** 	{
 2263              		.loc 1 1616 23 view .LVU696
 2264 0222 B9F10A0F 		cmp	r9, #10
 2265 0226 3FF639AF 		bhi	.L345
 2266              	.L272:
1618:src/keys.c    **** 			return STATE_UNFINISHED;
 2267              		.loc 1 1618 3 is_stmt 1 view .LVU697
1618:src/keys.c    **** 			return STATE_UNFINISHED;
 2268              		.loc 1 1618 6 is_stmt 0 view .LVU698
 2269 022a 1206     		lsls	r2, r2, #24
 2270 022c 3FF536AF 		bmi	.L345
1618:src/keys.c    **** 			return STATE_UNFINISHED;
 2271              		.loc 1 1618 18 view .LVU699
 2272 0230 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 2273 0232 002A     		cmp	r2, #0
 2274 0234 7FF432AF 		bne	.L345
1620:src/keys.c    **** 			return STATE_UNFINISHED;
ARM GAS  /tmp/ccihcwFT.s 			page 99


 2275              		.loc 1 1620 3 is_stmt 1 view .LVU700
1620:src/keys.c    **** 			return STATE_UNFINISHED;
 2276              		.loc 1 1620 17 is_stmt 0 view .LVU701
 2277 0238 0AEB0003 		add	r3, r10, r0
1620:src/keys.c    **** 			return STATE_UNFINISHED;
 2278              		.loc 1 1620 6 view .LVU702
 2279 023c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2280 023e 632B     		cmp	r3, #99
 2281 0240 7FF62CAF 		bls	.L345
1622:src/keys.c    **** 	}
 2282              		.loc 1 1622 3 is_stmt 1 view .LVU703
1622:src/keys.c    **** 	}
 2283              		.loc 1 1622 10 is_stmt 0 view .LVU704
 2284 0244 06F16400 		add	r0, r6, #100
 2285 0248 11E0     		b	.L347
 2286              	.LVL166:
 2287              	.L230:
1622:src/keys.c    **** 	}
 2288              		.loc 1 1622 10 view .LVU705
 2289              	.LBE356:
 2290              	.LBE355:
1696:src/keys.c    **** 	if (base >= NUM_RARG) {
 2291              		.loc 1 1696 2 is_stmt 1 view .LVU706
1697:src/keys.c    **** 		reset_arg();
 2292              		.loc 1 1697 2 view .LVU707
1697:src/keys.c    **** 		reset_arg();
 2293              		.loc 1 1697 5 is_stmt 0 view .LVU708
 2294 024a 8E2F     		cmp	r7, #142
 2295 024c 3FF624AF 		bhi	.L254
1725:src/keys.c    **** 		// row column shorthand addressing
 2296              		.loc 1 1725 2 is_stmt 1 view .LVU709
1727:src/keys.c    **** 
 2297              		.loc 1 1727 3 view .LVU710
 2298              	.LVL167:
 2299              	.LBB357:
 2300              	.LBI357:
 169:src/keys.c    **** {
 2301              		.loc 1 169 5 view .LVU711
 2302              	.LBB358:
 171:src/keys.c    **** }
 2303              		.loc 1 171 2 view .LVU712
 171:src/keys.c    **** }
 2304              		.loc 1 171 18 is_stmt 0 view .LVU713
 2305 0250 394B     		ldr	r3, .L363+12
 2306 0252 A3FB0623 		umull	r2, r3, r3, r6
 171:src/keys.c    **** }
 2307              		.loc 1 171 24 view .LVU714
 2308 0256 03F0FC00 		and	r0, r3, #252
 2309              	.LVL168:
 171:src/keys.c    **** }
 2310              		.loc 1 171 24 view .LVU715
 2311 025a 00EB9300 		add	r0, r0, r3, lsr #2
 171:src/keys.c    **** }
 2312              		.loc 1 171 18 view .LVU716
 2313 025e 9B08     		lsrs	r3, r3, #2
 171:src/keys.c    **** }
 2314              		.loc 1 171 24 view .LVU717
ARM GAS  /tmp/ccihcwFT.s 			page 100


 2315 0260 4000     		lsls	r0, r0, #1
 171:src/keys.c    **** }
 2316              		.loc 1 171 33 view .LVU718
 2317 0262 03EB4303 		add	r3, r3, r3, lsl #1
 171:src/keys.c    **** }
 2318              		.loc 1 171 12 view .LVU719
 2319 0266 0B30     		adds	r0, r0, #11
 171:src/keys.c    **** }
 2320              		.loc 1 171 33 view .LVU720
 2321 0268 A6EB4306 		sub	r6, r6, r3, lsl #1
 2322              	.LBE358:
 2323              	.LBE357:
1727:src/keys.c    **** 
 2324              		.loc 1 1727 10 view .LVU721
 2325 026c 3044     		add	r0, r0, r6
 2326              	.LVL169:
 2327              	.L347:
1940:src/keys.c    **** 
 2328              		.loc 1 1940 1 view .LVU722
 2329 026e 03B0     		add	sp, sp, #12
 2330              		.cfi_remember_state
 2331              		.cfi_def_cfa_offset 36
 2332              		@ sp needed
 2333 0270 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2334              		.cfi_restore 14
 2335              		.cfi_restore 11
 2336              		.cfi_restore 10
 2337              		.cfi_restore 9
 2338              		.cfi_restore 8
 2339              		.cfi_restore 7
 2340              		.cfi_restore 6
 2341              		.cfi_restore 5
 2342              		.cfi_restore 4
 2343              		.cfi_def_cfa_offset 0
 2344              	.LVL170:
1727:src/keys.c    **** 
 2345              		.loc 1 1727 10 view .LVU723
 2346 0274 FFF7FEBF 		b	arg_eval
 2347              	.LVL171:
 2348              	.L259:
 2349              		.cfi_restore_state
1845:src/keys.c    **** 			return arg_eval(n);
 2350              		.loc 1 1845 3 is_stmt 1 view .LVU724
1845:src/keys.c    **** 			return arg_eval(n);
 2351              		.loc 1 1845 7 is_stmt 0 view .LVU725
 2352 0278 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1845:src/keys.c    **** 			return arg_eval(n);
 2353              		.loc 1 1845 6 view .LVU726
 2354 027a 5E06     		lsls	r6, r3, #25
 2355 027c 0AD4     		bmi	.L281
1845:src/keys.c    **** 			return arg_eval(n);
 2356              		.loc 1 1845 25 discriminator 1 view .LVU727
 2357 027e 0121     		movs	r1, #1
 2358 0280 0320     		movs	r0, #3
 2359              	.LVL172:
1845:src/keys.c    **** 			return arg_eval(n);
 2360              		.loc 1 1845 25 discriminator 1 view .LVU728
ARM GAS  /tmp/ccihcwFT.s 			page 101


 2361 0282 FFF7FEFF 		bl	arg_storcl
 2362              	.LVL173:
1845:src/keys.c    **** 			return arg_eval(n);
 2363              		.loc 1 1845 18 discriminator 1 view .LVU729
 2364 0286 0028     		cmp	r0, #0
 2365 0288 7FF408AF 		bne	.L345
1845:src/keys.c    **** 			return arg_eval(n);
 2366              		.loc 1 1845 63 discriminator 2 view .LVU730
 2367 028c B8F1000F 		cmp	r8, #0
 2368 0290 3FF404AF 		beq	.L345
 2369              	.LVL174:
 2370              	.L281:
1846:src/keys.c    **** 		break;
 2371              		.loc 1 1846 4 is_stmt 1 view .LVU731
1846:src/keys.c    **** 		break;
 2372              		.loc 1 1846 11 is_stmt 0 view .LVU732
 2373 0294 2846     		mov	r0, r5
 2374 0296 EAE7     		b	.L347
 2375              	.LVL175:
 2376              	.L244:
1709:src/keys.c    **** 	  case regT_idx:
 2377              		.loc 1 1709 6 is_stmt 1 view .LVU733
1709:src/keys.c    **** 	  case regT_idx:
 2378              		.loc 1 1709 13 is_stmt 0 view .LVU734
 2379 0298 0320     		movs	r0, #3
 2380              	.LVL176:
 2381              	.L346:
1940:src/keys.c    **** 
 2382              		.loc 1 1940 1 view .LVU735
 2383 029a 03B0     		add	sp, sp, #12
 2384              		.cfi_remember_state
 2385              		.cfi_def_cfa_offset 36
 2386              		@ sp needed
 2387 029c BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2388              		.cfi_restore 14
 2389              		.cfi_restore 11
 2390              		.cfi_restore 10
 2391              		.cfi_restore 9
 2392              		.cfi_restore 8
 2393              		.cfi_restore 7
 2394              		.cfi_restore 6
 2395              		.cfi_restore 5
 2396              		.cfi_restore 4
 2397              		.cfi_def_cfa_offset 0
 2398              	.LVL177:
1707:src/keys.c    **** 	  case regZ_idx:
 2399              		.loc 1 1707 13 view .LVU736
 2400 02a0 FFF7FEBF 		b	arg_digit
 2401              	.LVL178:
 2402              	.L245:
 2403              		.cfi_restore_state
1707:src/keys.c    **** 	  case regZ_idx:
 2404              		.loc 1 1707 6 is_stmt 1 view .LVU737
1707:src/keys.c    **** 	  case regZ_idx:
 2405              		.loc 1 1707 13 is_stmt 0 view .LVU738
 2406 02a4 0220     		movs	r0, #2
 2407              	.LVL179:
ARM GAS  /tmp/ccihcwFT.s 			page 102


1707:src/keys.c    **** 	  case regZ_idx:
 2408              		.loc 1 1707 13 view .LVU739
 2409 02a6 F8E7     		b	.L346
 2410              	.LVL180:
 2411              	.L242:
1711:src/keys.c    **** 	  case 5:
 2412              		.loc 1 1711 6 is_stmt 1 view .LVU740
1711:src/keys.c    **** 	  case 5:
 2413              		.loc 1 1711 13 is_stmt 0 view .LVU741
 2414 02a8 0420     		movs	r0, #4
 2415              	.LVL181:
1711:src/keys.c    **** 	  case 5:
 2416              		.loc 1 1711 13 view .LVU742
 2417 02aa F6E7     		b	.L346
 2418              	.LVL182:
 2419              	.L293:
1740:src/keys.c    **** 		  if (base == RARG_SIG) base = RARG_FIX;
 2420              		.loc 1 1740 5 is_stmt 1 view .LVU743
1741:src/keys.c    **** 		  if (base == RARG_SIG0) base = RARG_SIG;
 2421              		.loc 1 1741 5 view .LVU744
1741:src/keys.c    **** 		  if (base == RARG_SIG0) base = RARG_SIG;
 2422              		.loc 1 1741 8 is_stmt 0 view .LVU745
 2423 02ac 8D2F     		cmp	r7, #141
 2424 02ae 85D1     		bne	.L300
 2425              	.LVL183:
1745:src/keys.c    **** #else
 2426              		.loc 1 1745 3 is_stmt 1 view .LVU746
1745:src/keys.c    **** #else
 2427              		.loc 1 1745 11 is_stmt 0 view .LVU747
 2428 02b0 4D23     		movs	r3, #77
 2429 02b2 E377     		strb	r3, [r4, #31]
1768:src/keys.c    **** 	case K_F:
 2430              		.loc 1 1768 2 is_stmt 1 view .LVU748
 2431              	.LVL184:
 2432              	.L261:
1889:src/keys.c    **** 		break;
 2433              		.loc 1 1889 3 view .LVU749
 2434 02b4 0021     		movs	r1, #0
 2435 02b6 0520     		movs	r0, #5
 2436              	.LVL185:
1889:src/keys.c    **** 		break;
 2437              		.loc 1 1889 3 is_stmt 0 view .LVU750
 2438 02b8 FFF7FEFF 		bl	arg_storcl
 2439              	.LVL186:
1890:src/keys.c    **** 
 2440              		.loc 1 1890 3 is_stmt 1 view .LVU751
1939:src/keys.c    **** }
 2441              		.loc 1 1939 9 is_stmt 0 view .LVU752
 2442 02bc 3320     		movs	r0, #51
1890:src/keys.c    **** 
 2443              		.loc 1 1890 3 view .LVU753
 2444 02be EEE6     		b	.L224
 2445              	.LVL187:
 2446              	.L292:
1745:src/keys.c    **** #else
 2447              		.loc 1 1745 3 is_stmt 1 view .LVU754
1745:src/keys.c    **** #else
ARM GAS  /tmp/ccihcwFT.s 			page 103


 2448              		.loc 1 1745 11 is_stmt 0 view .LVU755
 2449 02c0 4D23     		movs	r3, #77
 2450 02c2 E377     		strb	r3, [r4, #31]
1768:src/keys.c    **** 	case K_F:
 2451              		.loc 1 1768 2 is_stmt 1 view .LVU756
 2452              	.L263:
1885:src/keys.c    **** 		break;
 2453              		.loc 1 1885 3 view .LVU757
 2454 02c4 0021     		movs	r1, #0
 2455 02c6 0620     		movs	r0, #6
 2456              	.LVL188:
1885:src/keys.c    **** 		break;
 2457              		.loc 1 1885 3 is_stmt 0 view .LVU758
 2458 02c8 FFF7FEFF 		bl	arg_storcl
 2459              	.LVL189:
1886:src/keys.c    **** 
 2460              		.loc 1 1886 3 is_stmt 1 view .LVU759
1939:src/keys.c    **** }
 2461              		.loc 1 1939 9 is_stmt 0 view .LVU760
 2462 02cc 3320     		movs	r0, #51
1886:src/keys.c    **** 
 2463              		.loc 1 1886 3 view .LVU761
 2464 02ce E6E6     		b	.L224
 2465              	.LVL190:
 2466              	.L355:
1745:src/keys.c    **** #else
 2467              		.loc 1 1745 3 is_stmt 1 view .LVU762
1745:src/keys.c    **** #else
 2468              		.loc 1 1745 11 is_stmt 0 view .LVU763
 2469 02d0 4FF04D09 		mov	r9, #77
 2470 02d4 84F81F90 		strb	r9, [r4, #31]
1768:src/keys.c    **** 	case K_F:
 2471              		.loc 1 1768 2 is_stmt 1 view .LVU764
1741:src/keys.c    **** 		  if (base == RARG_SIG0) base = RARG_SIG;
 2472              		.loc 1 1741 32 is_stmt 0 view .LVU765
 2473 02d8 CDF80090 		str	r9, [sp]
 2474 02dc 8FE7     		b	.L266
 2475              	.LVL191:
 2476              	.L262:
1849:src/keys.c    **** 		break;
 2477              		.loc 1 1849 3 is_stmt 1 view .LVU766
 2478 02de 0121     		movs	r1, #1
 2479 02e0 0420     		movs	r0, #4
 2480              	.LVL192:
1849:src/keys.c    **** 		break;
 2481              		.loc 1 1849 3 is_stmt 0 view .LVU767
 2482 02e2 FFF7FEFF 		bl	arg_storcl
 2483              	.LVL193:
1850:src/keys.c    **** #else
 2484              		.loc 1 1850 3 is_stmt 1 view .LVU768
1939:src/keys.c    **** }
 2485              		.loc 1 1939 9 is_stmt 0 view .LVU769
 2486 02e6 3320     		movs	r0, #51
1850:src/keys.c    **** #else
 2487              		.loc 1 1850 3 view .LVU770
 2488 02e8 D9E6     		b	.L224
 2489              	.LVL194:
ARM GAS  /tmp/ccihcwFT.s 			page 104


 2490              	.L248:
1783:src/keys.c    **** 			break;
 2491              		.loc 1 1783 3 is_stmt 1 view .LVU771
1783:src/keys.c    **** 			break;
 2492              		.loc 1 1783 18 is_stmt 0 view .LVU772
 2493 02ea 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1783:src/keys.c    **** 			break;
 2494              		.loc 1 1783 6 view .LVU773
 2495 02ec 13F0C00F 		tst	r3, #192
 2496 02f0 7FF4D4AE 		bne	.L345
1785:src/keys.c    **** 			CmdBase = RARG_STOM;
 2497              		.loc 1 1785 3 is_stmt 1 view .LVU774
1785:src/keys.c    **** 			CmdBase = RARG_STOM;
 2498              		.loc 1 1785 6 is_stmt 0 view .LVU775
 2499 02f4 009B     		ldr	r3, [sp]
 2500 02f6 032B     		cmp	r3, #3
 2501 02f8 00F0FC80 		beq	.L356
1787:src/keys.c    **** 			CmdBase = RARG_RCLM;
 2502              		.loc 1 1787 8 is_stmt 1 view .LVU776
1787:src/keys.c    **** 			CmdBase = RARG_RCLM;
 2503              		.loc 1 1787 11 is_stmt 0 view .LVU777
 2504 02fc 009B     		ldr	r3, [sp]
 2505 02fe 0A2B     		cmp	r3, #10
 2506 0300 7FF4CCAE 		bne	.L345
1788:src/keys.c    **** 		break;
 2507              		.loc 1 1788 4 is_stmt 1 view .LVU778
1788:src/keys.c    **** 		break;
 2508              		.loc 1 1788 12 is_stmt 0 view .LVU779
 2509 0304 7823     		movs	r3, #120
 2510 0306 E377     		strb	r3, [r4, #31]
1939:src/keys.c    **** }
 2511              		.loc 1 1939 9 view .LVU780
 2512 0308 3320     		movs	r0, #51
 2513              	.LVL195:
1939:src/keys.c    **** }
 2514              		.loc 1 1939 9 view .LVU781
 2515 030a C8E6     		b	.L224
 2516              	.LVL196:
 2517              	.L251:
1770:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 2518              		.loc 1 1770 3 is_stmt 1 view .LVU782
1770:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 2519              		.loc 1 1770 6 is_stmt 0 view .LVU783
 2520 030c BCF1000F 		cmp	ip, #0
 2521 0310 3FF4C4AE 		beq	.L345
1771:src/keys.c    **** 		break;
 2522              		.loc 1 1771 4 is_stmt 1 view .LVU784
 2523              	.LVL197:
 2524              	.LBB359:
 2525              	.LBI359:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 2526              		.loc 1 94 20 view .LVU785
 2527              	.LBB360:
  95:src/keys.c    **** 	State2.shifts = shift;
 2528              		.loc 1 95 2 view .LVU786
 2529              	.LBB361:
 2530              	.LBI361:
ARM GAS  /tmp/ccihcwFT.s 			page 105


  86:src/keys.c    **** 	enum shifts s = shift_down();
 2531              		.loc 1 86 13 view .LVU787
 2532              	.LBB362:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2533              		.loc 1 87 2 view .LVU788
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2534              		.loc 1 87 18 is_stmt 0 view .LVU789
 2535 0314 FFF7FEFF 		bl	shift_down
 2536              	.LVL198:
  88:src/keys.c    **** }
 2537              		.loc 1 88 2 is_stmt 1 view .LVU790
 2538              	.LBE362:
 2539              	.LBE361:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2540              		.loc 1 96 2 view .LVU791
 2541              	.LBE360:
 2542              	.LBE359:
1771:src/keys.c    **** 		break;
 2543              		.loc 1 1771 4 is_stmt 0 view .LVU792
 2544 0318 019B     		ldr	r3, [sp, #4]
 2545 031a B3F1010A 		subs	r10, r3, #1
 2546 031e 18BF     		it	ne
 2547 0320 4FF0010A 		movne	r10, #1
 2548 0324 84F810A0 		strb	r10, [r4, #16]
 2549              	.LBB365:
 2550              	.LBB363:
  98:src/keys.c    **** }
 2551              		.loc 1 98 2 is_stmt 1 view .LVU793
 2552              	.LBE363:
 2553              	.LBE365:
1939:src/keys.c    **** }
 2554              		.loc 1 1939 9 is_stmt 0 view .LVU794
 2555 0328 3320     		movs	r0, #51
 2556              	.LBB366:
 2557              	.LBB364:
  98:src/keys.c    **** }
 2558              		.loc 1 98 9 view .LVU795
 2559 032a B8E6     		b	.L224
 2560              	.L364:
 2561              		.align	2
 2562              	.L363:
 2563 032c 00000000 		.word	StateWhileOn
 2564 0330 00000000 		.word	.LANCHOR1
 2565 0334 00000000 		.word	.LANCHOR0
 2566 0338 ABAAAAAA 		.word	-1431655765
 2567 033c 00000000 		.word	argcmds
 2568              	.LVL199:
 2569              	.L260:
  98:src/keys.c    **** }
 2570              		.loc 1 98 9 view .LVU796
 2571              	.LBE364:
 2572              	.LBE366:
1792:src/keys.c    **** 	    return process_arg_shuffle(3);
 2573              		.loc 1 1792 4 is_stmt 1 view .LVU797
1792:src/keys.c    **** 	    return process_arg_shuffle(3);
 2574              		.loc 1 1792 8 is_stmt 0 view .LVU798
 2575 0340 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
ARM GAS  /tmp/ccihcwFT.s 			page 106


1792:src/keys.c    **** 	    return process_arg_shuffle(3);
 2576              		.loc 1 1792 7 view .LVU799
 2577 0342 9107     		lsls	r1, r2, #30
 2578 0344 7FF55BAF 		bpl	.L266
1793:src/keys.c    **** 	case K51:       // X
 2579              		.loc 1 1793 6 is_stmt 1 view .LVU800
1793:src/keys.c    **** 	case K51:       // X
 2580              		.loc 1 1793 13 is_stmt 0 view .LVU801
 2581 0348 0320     		movs	r0, #3
 2582              	.LVL200:
 2583              	.L348:
1940:src/keys.c    **** 
 2584              		.loc 1 1940 1 view .LVU802
 2585 034a 03B0     		add	sp, sp, #12
 2586              		.cfi_remember_state
 2587              		.cfi_def_cfa_offset 36
 2588              	.LVL201:
1940:src/keys.c    **** 
 2589              		.loc 1 1940 1 view .LVU803
 2590              		@ sp needed
 2591 034c BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2592              		.cfi_restore 14
 2593              		.cfi_restore 11
 2594              		.cfi_restore 10
 2595              		.cfi_restore 9
 2596              		.cfi_restore 8
 2597              		.cfi_restore 7
 2598              		.cfi_restore 6
 2599              		.cfi_restore 5
 2600              		.cfi_restore 4
 2601              		.cfi_def_cfa_offset 0
 2602              	.LVL202:
1802:src/keys.c    **** #else
 2603              		.loc 1 1802 13 view .LVU804
 2604 0350 FFF7FEBF 		b	process_arg_shuffle
 2605              	.LVL203:
 2606              	.L258:
 2607              		.cfi_restore_state
1795:src/keys.c    **** 	    return process_arg_shuffle(0);
 2608              		.loc 1 1795 4 is_stmt 1 view .LVU805
1795:src/keys.c    **** 	    return process_arg_shuffle(0);
 2609              		.loc 1 1795 8 is_stmt 0 view .LVU806
 2610 0354 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
1795:src/keys.c    **** 	    return process_arg_shuffle(0);
 2611              		.loc 1 1795 7 view .LVU807
 2612 0356 9207     		lsls	r2, r2, #30
 2613 0358 7FF551AF 		bpl	.L266
1796:src/keys.c    **** 	case K52:	// Y
 2614              		.loc 1 1796 6 is_stmt 1 view .LVU808
1796:src/keys.c    **** 	case K52:	// Y
 2615              		.loc 1 1796 13 is_stmt 0 view .LVU809
 2616 035c 0020     		movs	r0, #0
 2617              	.LVL204:
1796:src/keys.c    **** 	case K52:	// Y
 2618              		.loc 1 1796 13 view .LVU810
 2619 035e F4E7     		b	.L348
 2620              	.LVL205:
ARM GAS  /tmp/ccihcwFT.s 			page 107


 2621              	.L257:
1798:src/keys.c    **** 	    return process_arg_shuffle(1);
 2622              		.loc 1 1798 4 is_stmt 1 view .LVU811
1798:src/keys.c    **** 	    return process_arg_shuffle(1);
 2623              		.loc 1 1798 8 is_stmt 0 view .LVU812
 2624 0360 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
1798:src/keys.c    **** 	    return process_arg_shuffle(1);
 2625              		.loc 1 1798 7 view .LVU813
 2626 0362 9307     		lsls	r3, r2, #30
 2627 0364 7FF54BAF 		bpl	.L266
1799:src/keys.c    **** 	case K53:       // Z
 2628              		.loc 1 1799 6 is_stmt 1 view .LVU814
1799:src/keys.c    **** 	case K53:       // Z
 2629              		.loc 1 1799 13 is_stmt 0 view .LVU815
 2630 0368 0120     		movs	r0, #1
 2631              	.LVL206:
1799:src/keys.c    **** 	case K53:       // Z
 2632              		.loc 1 1799 13 view .LVU816
 2633 036a EEE7     		b	.L348
 2634              	.LVL207:
 2635              	.L256:
1801:src/keys.c    **** 	    return process_arg_shuffle(2);
 2636              		.loc 1 1801 4 is_stmt 1 view .LVU817
1801:src/keys.c    **** 	    return process_arg_shuffle(2);
 2637              		.loc 1 1801 8 is_stmt 0 view .LVU818
 2638 036c A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
1801:src/keys.c    **** 	    return process_arg_shuffle(2);
 2639              		.loc 1 1801 7 view .LVU819
 2640 036e 9707     		lsls	r7, r2, #30
 2641 0370 7FF545AF 		bpl	.L266
1802:src/keys.c    **** #else
 2642              		.loc 1 1802 6 is_stmt 1 view .LVU820
1802:src/keys.c    **** #else
 2643              		.loc 1 1802 13 is_stmt 0 view .LVU821
 2644 0374 0220     		movs	r0, #2
 2645              	.LVL208:
1802:src/keys.c    **** #else
 2646              		.loc 1 1802 13 view .LVU822
 2647 0376 E8E7     		b	.L348
 2648              	.LVL209:
 2649              	.L255:
1838:src/keys.c    **** 			reset_arg();
 2650              		.loc 1 1838 3 is_stmt 1 view .LVU823
1838:src/keys.c    **** 			reset_arg();
 2651              		.loc 1 1838 6 is_stmt 0 view .LVU824
 2652 0378 009B     		ldr	r3, [sp]
 2653 037a 212B     		cmp	r3, #33
 2654 037c 00F0A480 		beq	.L278
1838:src/keys.c    **** 			reset_arg();
 2655              		.loc 1 1838 25 discriminator 1 view .LVU825
 2656 0380 732B     		cmp	r3, #115
 2657 0382 00F0A180 		beq	.L278
1842:src/keys.c    **** 		break;
 2658              		.loc 1 1842 3 is_stmt 1 view .LVU826
 2659 0386 0121     		movs	r1, #1
 2660 0388 0220     		movs	r0, #2
 2661              	.LVL210:
ARM GAS  /tmp/ccihcwFT.s 			page 108


1842:src/keys.c    **** 		break;
 2662              		.loc 1 1842 3 is_stmt 0 view .LVU827
 2663 038a FFF7FEFF 		bl	arg_storcl
 2664              	.LVL211:
1843:src/keys.c    **** 	case K44:		// multiply
 2665              		.loc 1 1843 3 is_stmt 1 view .LVU828
1939:src/keys.c    **** }
 2666              		.loc 1 1939 9 is_stmt 0 view .LVU829
 2667 038e 3320     		movs	r0, #51
1843:src/keys.c    **** 	case K44:		// multiply
 2668              		.loc 1 1843 3 view .LVU830
 2669 0390 85E6     		b	.L224
 2670              	.LVL212:
 2671              	.L253:
1830:src/keys.c    **** 
 2672              		.loc 1 1830 3 is_stmt 1 view .LVU831
 2673              	.LBB367:
 2674              	.LBI367:
1654:src/keys.c    **** 
 2675              		.loc 1 1654 12 view .LVU832
 2676              	.LBB368:
1656:src/keys.c    **** 		// Only valid at beginning of entry
 2677              		.loc 1 1656 2 view .LVU833
1656:src/keys.c    **** 		// Only valid at beginning of entry
 2678              		.loc 1 1656 5 is_stmt 0 view .LVU834
 2679 0392 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 2680 0394 002A     		cmp	r2, #0
 2681 0396 7FF481AE 		bne	.L345
1658:src/keys.c    **** 			// '..' or ENTER '.' = X
 2682              		.loc 1 1658 3 is_stmt 1 view .LVU835
1658:src/keys.c    **** 			// '..' or ENTER '.' = X
 2683              		.loc 1 1658 6 is_stmt 0 view .LVU836
 2684 039a 11F4A03F 		tst	r1, #81920
 2685 039e 40F0AD80 		bne	.L357
1663:src/keys.c    **** 			// local register or flag select
 2686              		.loc 1 1663 3 is_stmt 1 view .LVU837
1663:src/keys.c    **** 			// local register or flag select
 2687              		.loc 1 1663 20 is_stmt 0 view .LVU838
 2688 03a2 009B     		ldr	r3, [sp]
 2689 03a4 0AEB0313 		add	r3, r10, r3, lsl #4
 2690 03a8 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
1663:src/keys.c    **** 			// local register or flag select
 2691              		.loc 1 1663 6 view .LVU839
 2692 03aa 1B07     		lsls	r3, r3, #28
 2693 03ac 00F19480 		bmi	.L274
1663:src/keys.c    **** 			// local register or flag select
 2694              		.loc 1 1663 27 view .LVU840
 2695 03b0 94F91530 		ldrsb	r3, [r4, #21]
 2696 03b4 002B     		cmp	r3, #0
 2697 03b6 C0F28F80 		blt	.L274
1667:src/keys.c    **** 			// Special GTO . sequence
 2698              		.loc 1 1667 8 is_stmt 1 view .LVU841
1667:src/keys.c    **** 			// Special GTO . sequence
 2699              		.loc 1 1667 29 is_stmt 0 view .LVU842
 2700 03ba 009B     		ldr	r3, [sp]
 2701 03bc A3F14409 		sub	r9, r3, #68
1667:src/keys.c    **** 			// Special GTO . sequence
ARM GAS  /tmp/ccihcwFT.s 			page 109


 2702              		.loc 1 1667 11 view .LVU843
 2703 03c0 B9F1010F 		cmp	r9, #1
 2704 03c4 3FF66AAE 		bhi	.L345
1669:src/keys.c    **** 				State2.gtodot = 1;
 2705              		.loc 1 1669 4 is_stmt 1 view .LVU844
1670:src/keys.c    **** 				reset_arg();
 2706              		.loc 1 1670 5 view .LVU845
1670:src/keys.c    **** 				reset_arg();
 2707              		.loc 1 1670 19 is_stmt 0 view .LVU846
 2708 03c8 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 2709 03ca 43F00103 		orr	r3, r3, #1
 2710 03ce 6375     		strb	r3, [r4, #21]
1671:src/keys.c    **** 			}
 2711              		.loc 1 1671 5 is_stmt 1 view .LVU847
 2712 03d0 FFF7FEFF 		bl	reset_arg
 2713              	.LVL213:
1675:src/keys.c    **** }
 2714              		.loc 1 1675 9 is_stmt 0 view .LVU848
 2715 03d4 3320     		movs	r0, #51
 2716 03d6 62E6     		b	.L224
 2717              	.LVL214:
 2718              	.L252:
1675:src/keys.c    **** }
 2719              		.loc 1 1675 9 view .LVU849
 2720              	.LBE368:
 2721              	.LBE367:
1834:src/keys.c    **** 			return arg_eval(n);
 2722              		.loc 1 1834 3 is_stmt 1 view .LVU850
1834:src/keys.c    **** 			return arg_eval(n);
 2723              		.loc 1 1834 7 is_stmt 0 view .LVU851
 2724 03d8 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1834:src/keys.c    **** 			return arg_eval(n);
 2725              		.loc 1 1834 6 view .LVU852
 2726 03da 5F06     		lsls	r7, r3, #25
 2727 03dc 3FF55AAF 		bmi	.L281
1834:src/keys.c    **** 			return arg_eval(n);
 2728              		.loc 1 1834 25 discriminator 1 view .LVU853
 2729 03e0 0121     		movs	r1, #1
 2730 03e2 0846     		mov	r0, r1
 2731              	.LVL215:
1834:src/keys.c    **** 			return arg_eval(n);
 2732              		.loc 1 1834 25 discriminator 1 view .LVU854
 2733 03e4 FFF7FEFF 		bl	arg_storcl
 2734              	.LVL216:
1834:src/keys.c    **** 			return arg_eval(n);
 2735              		.loc 1 1834 18 discriminator 1 view .LVU855
 2736 03e8 0028     		cmp	r0, #0
 2737 03ea 7FF457AE 		bne	.L345
1845:src/keys.c    **** 			return arg_eval(n);
 2738              		.loc 1 1845 63 view .LVU856
 2739 03ee B8F1000F 		cmp	r8, #0
 2740 03f2 3FF453AE 		beq	.L345
 2741 03f6 4DE7     		b	.L281
 2742              	.LVL217:
 2743              	.L265:
1893:src/keys.c    **** 			if (argcmds[base].label) {
 2744              		.loc 1 1893 3 is_stmt 1 view .LVU857
ARM GAS  /tmp/ccihcwFT.s 			page 110


1893:src/keys.c    **** 			if (argcmds[base].label) {
 2745              		.loc 1 1893 6 is_stmt 0 view .LVU858
 2746 03f8 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 2747 03fa 82B3     		cbz	r2, .L358
1907:src/keys.c    **** 			return arg_eval(State2.digval);
 2748              		.loc 1 1907 10 is_stmt 1 view .LVU859
1908:src/keys.c    **** 		else if (stack_reg)
 2749              		.loc 1 1908 4 view .LVU860
1908:src/keys.c    **** 		else if (stack_reg)
 2750              		.loc 1 1908 11 is_stmt 0 view .LVU861
 2751 03fc 2089     		ldrh	r0, [r4, #8]
 2752              	.LVL218:
1908:src/keys.c    **** 		else if (stack_reg)
 2753              		.loc 1 1908 11 view .LVU862
 2754 03fe 36E7     		b	.L347
 2755              	.LVL219:
 2756              	.L264:
1914:src/keys.c    **** 			if (State2.dot)
 2757              		.loc 1 1914 3 is_stmt 1 view .LVU863
1914:src/keys.c    **** 			if (State2.dot)
 2758              		.loc 1 1914 13 is_stmt 0 view .LVU864
 2759 0400 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
1914:src/keys.c    **** 			if (State2.dot)
 2760              		.loc 1 1914 6 view .LVU865
 2761 0402 002B     		cmp	r3, #0
 2762 0404 50D1     		bne	.L288
1915:src/keys.c    **** 				State2.dot = 0;
 2763              		.loc 1 1915 4 is_stmt 1 view .LVU866
1915:src/keys.c    **** 				State2.dot = 0;
 2764              		.loc 1 1915 8 is_stmt 0 view .LVU867
 2765 0406 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1915:src/keys.c    **** 				State2.dot = 0;
 2766              		.loc 1 1915 7 view .LVU868
 2767 0408 13F04001 		ands	r1, r3, #64
 2768 040c 21D1     		bne	.L289
1917:src/keys.c    **** 				State2.local = 0;
 2769              		.loc 1 1917 9 is_stmt 1 view .LVU869
1917:src/keys.c    **** 				State2.local = 0;
 2770              		.loc 1 1917 13 is_stmt 0 view .LVU870
 2771 040e A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
1917:src/keys.c    **** 				State2.local = 0;
 2772              		.loc 1 1917 12 view .LVU871
 2773 0410 12F00100 		ands	r0, r2, #1
 2774              	.LVL220:
1917:src/keys.c    **** 				State2.local = 0;
 2775              		.loc 1 1917 12 view .LVU872
 2776 0414 78D1     		bne	.L359
1919:src/keys.c    **** 				State2.ind = 0;
 2777              		.loc 1 1919 9 is_stmt 1 view .LVU873
1919:src/keys.c    **** 				State2.ind = 0;
 2778              		.loc 1 1919 12 is_stmt 0 view .LVU874
 2779 0416 1906     		lsls	r1, r3, #24
 2780 0418 7FF53EAE 		bpl	.L254
1920:src/keys.c    **** 			else
 2781              		.loc 1 1920 5 is_stmt 1 view .LVU875
1920:src/keys.c    **** 			else
 2782              		.loc 1 1920 16 is_stmt 0 view .LVU876
ARM GAS  /tmp/ccihcwFT.s 			page 111


 2783 041c 60F3C713 		bfi	r3, r0, #7, #1
 2784 0420 6375     		strb	r3, [r4, #21]
1939:src/keys.c    **** }
 2785              		.loc 1 1939 9 view .LVU877
 2786 0422 3320     		movs	r0, #51
 2787 0424 3BE6     		b	.L224
 2788              	.LVL221:
 2789              	.L250:
1775:src/keys.c    **** 			State2.ind = ! State2.ind;
 2790              		.loc 1 1775 3 is_stmt 1 view .LVU878
1775:src/keys.c    **** 			State2.ind = ! State2.ind;
 2791              		.loc 1 1775 7 is_stmt 0 view .LVU879
 2792 0426 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
1775:src/keys.c    **** 			State2.ind = ! State2.ind;
 2793              		.loc 1 1775 6 view .LVU880
 2794 0428 5506     		lsls	r5, r2, #25
 2795              	.LVL222:
1775:src/keys.c    **** 			State2.ind = ! State2.ind;
 2796              		.loc 1 1775 6 view .LVU881
 2797 042a 3FF537AE 		bmi	.L345
1775:src/keys.c    **** 			State2.ind = ! State2.ind;
 2798              		.loc 1 1775 35 discriminator 1 view .LVU882
 2799 042e 009B     		ldr	r3, [sp]
 2800 0430 0AEB0319 		add	r9, r10, r3, lsl #4
 2801 0434 99F80530 		ldrb	r3, [r9, #5]	@ zero_extendqisi2
1775:src/keys.c    **** 			State2.ind = ! State2.ind;
 2802              		.loc 1 1775 19 discriminator 1 view .LVU883
 2803 0438 D807     		lsls	r0, r3, #31
 2804              	.LVL223:
1775:src/keys.c    **** 			State2.ind = ! State2.ind;
 2805              		.loc 1 1775 19 discriminator 1 view .LVU884
 2806 043a 7FF52FAE 		bpl	.L345
1776:src/keys.c    **** 			if (! stack_reg)
 2807              		.loc 1 1776 4 is_stmt 1 view .LVU885
1776:src/keys.c    **** 			if (! stack_reg)
 2808              		.loc 1 1776 17 is_stmt 0 view .LVU886
 2809 043e D343     		mvns	r3, r2
 2810 0440 C3F3C013 		ubfx	r3, r3, #7, #1
1776:src/keys.c    **** 			if (! stack_reg)
 2811              		.loc 1 1776 15 view .LVU887
 2812 0444 63F3C712 		bfi	r2, r3, #7, #1
 2813 0448 6275     		strb	r2, [r4, #21]
1777:src/keys.c    **** 				State2.dot = 0;
 2814              		.loc 1 1777 4 is_stmt 1 view .LVU888
1777:src/keys.c    **** 				State2.dot = 0;
 2815              		.loc 1 1777 7 is_stmt 0 view .LVU889
 2816 044a B8F1000F 		cmp	r8, #0
 2817 044e 7FF425AE 		bne	.L345
 2818              	.L289:
1778:src/keys.c    **** 		}
 2819              		.loc 1 1778 5 is_stmt 1 view .LVU890
1778:src/keys.c    **** 		}
 2820              		.loc 1 1778 16 is_stmt 0 view .LVU891
 2821 0452 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 2822 0454 6FF38613 		bfc	r3, #6, #1
 2823 0458 6375     		strb	r3, [r4, #21]
1939:src/keys.c    **** }
ARM GAS  /tmp/ccihcwFT.s 			page 112


 2824              		.loc 1 1939 9 view .LVU892
 2825 045a 3320     		movs	r0, #51
 2826 045c 1FE6     		b	.L224
 2827              	.LVL224:
 2828              	.L358:
1893:src/keys.c    **** 			if (argcmds[base].label) {
 2829              		.loc 1 1893 43 discriminator 1 view .LVU893
 2830 045e 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
 2831 0460 12F0C00F 		tst	r2, #192
 2832 0464 13D1     		bne	.L283
1894:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 2833              		.loc 1 1894 4 is_stmt 1 view .LVU894
1894:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 2834              		.loc 1 1894 21 is_stmt 0 view .LVU895
 2835 0466 009B     		ldr	r3, [sp]
 2836 0468 0AEB0313 		add	r3, r10, r3, lsl #4
 2837 046c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
1894:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 2838              		.loc 1 1894 7 view .LVU896
 2839 046e 9D06     		lsls	r5, r3, #26
 2840              	.LVL225:
1894:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 2841              		.loc 1 1894 7 view .LVU897
 2842 0470 4FD4     		bmi	.L360
1899:src/keys.c    **** 				reset_arg();
 2843              		.loc 1 1899 11 is_stmt 1 view .LVU898
1899:src/keys.c    **** 				reset_arg();
 2844              		.loc 1 1899 14 is_stmt 0 view .LVU899
 2845 0472 0099     		ldr	r1, [sp]
 2846 0474 4E29     		cmp	r1, #78
 2847 0476 5ED0     		beq	.L361
1902:src/keys.c    **** 				reset_arg();
 2848              		.loc 1 1902 11 is_stmt 1 view .LVU900
1902:src/keys.c    **** 				reset_arg();
 2849              		.loc 1 1902 14 is_stmt 0 view .LVU901
 2850 0478 0099     		ldr	r1, [sp]
 2851 047a 4F29     		cmp	r1, #79
 2852 047c 60D0     		beq	.L362
1905:src/keys.c    **** 				State2.dot = 1;
 2853              		.loc 1 1905 11 is_stmt 1 view .LVU902
1905:src/keys.c    **** 				State2.dot = 1;
 2854              		.loc 1 1905 14 is_stmt 0 view .LVU903
 2855 047e 5807     		lsls	r0, r3, #29
 2856              	.LVL226:
1905:src/keys.c    **** 				State2.dot = 1;
 2857              		.loc 1 1905 14 view .LVU904
 2858 0480 7FF50CAE 		bpl	.L345
1906:src/keys.c    **** 		} else if (State2.numdigit > 0)
 2859              		.loc 1 1906 5 is_stmt 1 view .LVU905
1906:src/keys.c    **** 		} else if (State2.numdigit > 0)
 2860              		.loc 1 1906 16 is_stmt 0 view .LVU906
 2861 0484 42F04002 		orr	r2, r2, #64
 2862 0488 6275     		strb	r2, [r4, #21]
1939:src/keys.c    **** }
 2863              		.loc 1 1939 9 view .LVU907
 2864 048a 3320     		movs	r0, #51
 2865 048c 07E6     		b	.L224
ARM GAS  /tmp/ccihcwFT.s 			page 113


 2866              	.LVL227:
 2867              	.L283:
1907:src/keys.c    **** 			return arg_eval(State2.digval);
 2868              		.loc 1 1907 10 is_stmt 1 view .LVU908
1909:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 2869              		.loc 1 1909 8 view .LVU909
1909:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 2870              		.loc 1 1909 11 is_stmt 0 view .LVU910
 2871 048e B8F1000F 		cmp	r8, #0
 2872 0492 3FF403AE 		beq	.L345
1910:src/keys.c    **** 		break;
 2873              		.loc 1 1910 4 is_stmt 1 view .LVU911
1910:src/keys.c    **** 		break;
 2874              		.loc 1 1910 27 is_stmt 0 view .LVU912
 2875 0496 C2F38013 		ubfx	r3, r2, #6, #1
1910:src/keys.c    **** 		break;
 2876              		.loc 1 1910 19 view .LVU913
 2877 049a C3F10103 		rsb	r3, r3, #1
1910:src/keys.c    **** 		break;
 2878              		.loc 1 1910 15 view .LVU914
 2879 049e 63F38612 		bfi	r2, r3, #6, #1
 2880 04a2 6275     		strb	r2, [r4, #21]
1939:src/keys.c    **** }
 2881              		.loc 1 1939 9 view .LVU915
 2882 04a4 3320     		movs	r0, #51
 2883              	.LVL228:
1939:src/keys.c    **** }
 2884              		.loc 1 1939 9 view .LVU916
 2885 04a6 FAE5     		b	.L224
 2886              	.LVL229:
 2887              	.L288:
1925:src/keys.c    **** 			if (State2.shuffle)
 2888              		.loc 1 1925 4 is_stmt 1 view .LVU917
1926:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2889              		.loc 1 1926 8 is_stmt 0 view .LVU918
 2890 04a8 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
1925:src/keys.c    **** 			if (State2.shuffle)
 2891              		.loc 1 1925 4 view .LVU919
 2892 04aa 013B     		subs	r3, r3, #1
 2893 04ac DBB2     		uxtb	r3, r3
1926:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2894              		.loc 1 1926 7 view .LVU920
 2895 04ae 9207     		lsls	r2, r2, #30
1925:src/keys.c    **** 			if (State2.shuffle)
 2896              		.loc 1 1925 4 view .LVU921
 2897 04b0 E372     		strb	r3, [r4, #11]
1926:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2898              		.loc 1 1926 4 is_stmt 1 view .LVU922
1926:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2899              		.loc 1 1926 7 is_stmt 0 view .LVU923
 2900 04b2 17D5     		bpl	.L291
1927:src/keys.c    **** 			else
 2901              		.loc 1 1927 5 is_stmt 1 view .LVU924
1927:src/keys.c    **** 			else
 2902              		.loc 1 1927 19 is_stmt 0 view .LVU925
 2903 04b4 2289     		ldrh	r2, [r4, #8]
1927:src/keys.c    **** 			else
ARM GAS  /tmp/ccihcwFT.s 			page 114


 2904              		.loc 1 1927 46 view .LVU926
 2905 04b6 5B00     		lsls	r3, r3, #1
1927:src/keys.c    **** 			else
 2906              		.loc 1 1927 26 view .LVU927
 2907 04b8 0321     		movs	r1, #3
 2908 04ba 01FA03F3 		lsl	r3, r1, r3
1927:src/keys.c    **** 			else
 2909              		.loc 1 1927 19 view .LVU928
 2910 04be 22EA0303 		bic	r3, r2, r3
 2911 04c2 2381     		strh	r3, [r4, #8]	@ movhi
1939:src/keys.c    **** }
 2912              		.loc 1 1939 9 view .LVU929
 2913 04c4 3320     		movs	r0, #51
 2914              	.LVL230:
1939:src/keys.c    **** }
 2915              		.loc 1 1939 9 view .LVU930
 2916 04c6 EAE5     		b	.L224
 2917              	.LVL231:
 2918              	.L278:
1839:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
 2919              		.loc 1 1839 4 is_stmt 1 view .LVU931
 2920 04c8 FFF7FEFF 		bl	reset_arg
 2921              	.LVL232:
1840:src/keys.c    **** 		}
 2922              		.loc 1 1840 4 view .LVU932
1840:src/keys.c    **** 		}
 2923              		.loc 1 1840 11 is_stmt 0 view .LVU933
 2924 04cc 40F27510 		movw	r0, #373
 2925 04d0 E5E5     		b	.L224
 2926              	.LVL233:
 2927              	.L295:
1745:src/keys.c    **** #else
 2928              		.loc 1 1745 3 is_stmt 1 view .LVU934
1745:src/keys.c    **** #else
 2929              		.loc 1 1745 11 is_stmt 0 view .LVU935
 2930 04d2 8D23     		movs	r3, #141
 2931 04d4 E377     		strb	r3, [r4, #31]
1768:src/keys.c    **** 	case K_F:
 2932              		.loc 1 1768 2 is_stmt 1 view .LVU936
 2933 04d6 EDE6     		b	.L261
 2934              	.LVL234:
 2935              	.L274:
 2936              	.LBB371:
 2937              	.LBB369:
1665:src/keys.c    **** 		}
 2938              		.loc 1 1665 4 view .LVU937
1665:src/keys.c    **** 		}
 2939              		.loc 1 1665 17 is_stmt 0 view .LVU938
 2940 04d8 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 2941 04da 43F00103 		orr	r3, r3, #1
 2942 04de A375     		strb	r3, [r4, #22]
1675:src/keys.c    **** }
 2943              		.loc 1 1675 9 view .LVU939
 2944 04e0 3320     		movs	r0, #51
 2945              	.LVL235:
1665:src/keys.c    **** 		}
 2946              		.loc 1 1665 17 view .LVU940
ARM GAS  /tmp/ccihcwFT.s 			page 115


 2947 04e2 DCE5     		b	.L224
 2948              	.LVL236:
 2949              	.L291:
1665:src/keys.c    **** 		}
 2950              		.loc 1 1665 17 view .LVU941
 2951              	.LBE369:
 2952              	.LBE371:
1929:src/keys.c    **** 		}
 2953              		.loc 1 1929 5 is_stmt 1 view .LVU942
1929:src/keys.c    **** 		}
 2954              		.loc 1 1929 19 is_stmt 0 view .LVU943
 2955 04e4 2389     		ldrh	r3, [r4, #8]
 2956 04e6 1A4A     		ldr	r2, .L365
 2957 04e8 A2FB0323 		umull	r2, r3, r2, r3
 2958 04ec DB08     		lsrs	r3, r3, #3
 2959 04ee 2381     		strh	r3, [r4, #8]	@ movhi
1939:src/keys.c    **** }
 2960              		.loc 1 1939 9 view .LVU944
 2961 04f0 3320     		movs	r0, #51
 2962              	.LVL237:
1939:src/keys.c    **** }
 2963              		.loc 1 1939 9 view .LVU945
 2964 04f2 D4E5     		b	.L224
 2965              	.LVL238:
 2966              	.L356:
1786:src/keys.c    **** 		else if (base == RARG_RCL)
 2967              		.loc 1 1786 4 is_stmt 1 view .LVU946
1786:src/keys.c    **** 		else if (base == RARG_RCL)
 2968              		.loc 1 1786 12 is_stmt 0 view .LVU947
 2969 04f4 7723     		movs	r3, #119
 2970 04f6 E377     		strb	r3, [r4, #31]
1939:src/keys.c    **** }
 2971              		.loc 1 1939 9 view .LVU948
 2972 04f8 3320     		movs	r0, #51
 2973              	.LVL239:
1939:src/keys.c    **** }
 2974              		.loc 1 1939 9 view .LVU949
 2975 04fa D0E5     		b	.L224
 2976              	.LVL240:
 2977              	.L357:
 2978              	.LBB372:
 2979              	.LBB370:
1660:src/keys.c    **** 			return arg_eval(regX_idx);
 2980              		.loc 1 1660 4 is_stmt 1 view .LVU950
1660:src/keys.c    **** 			return arg_eval(regX_idx);
 2981              		.loc 1 1660 17 is_stmt 0 view .LVU951
 2982 04fc A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 2983 04fe 62F30003 		bfi	r3, r2, #0, #1
1661:src/keys.c    **** 		}
 2984              		.loc 1 1661 11 view .LVU952
 2985 0502 6420     		movs	r0, #100
 2986              	.LVL241:
1660:src/keys.c    **** 			return arg_eval(regX_idx);
 2987              		.loc 1 1660 17 view .LVU953
 2988 0504 A375     		strb	r3, [r4, #22]
1661:src/keys.c    **** 		}
 2989              		.loc 1 1661 4 is_stmt 1 view .LVU954
ARM GAS  /tmp/ccihcwFT.s 			page 116


 2990 0506 B2E6     		b	.L347
 2991              	.LVL242:
 2992              	.L359:
1661:src/keys.c    **** 		}
 2993              		.loc 1 1661 4 is_stmt 0 view .LVU955
 2994              	.LBE370:
 2995              	.LBE372:
1918:src/keys.c    **** 			else if (State2.ind)
 2996              		.loc 1 1918 5 is_stmt 1 view .LVU956
1918:src/keys.c    **** 			else if (State2.ind)
 2997              		.loc 1 1918 18 is_stmt 0 view .LVU957
 2998 0508 61F30002 		bfi	r2, r1, #0, #1
 2999 050c A275     		strb	r2, [r4, #22]
1939:src/keys.c    **** }
 3000              		.loc 1 1939 9 view .LVU958
 3001 050e 3320     		movs	r0, #51
 3002 0510 C5E5     		b	.L224
 3003              	.LVL243:
 3004              	.L360:
1895:src/keys.c    **** 				State2.multi = 1;
 3005              		.loc 1 1895 5 is_stmt 1 view .LVU959
 3006              	.LBB373:
 3007              	.LBI373:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 3008              		.loc 1 506 13 view .LVU960
 3009              	.LBB374:
 507:src/keys.c    **** 		return;
 3010              		.loc 1 507 2 view .LVU961
 507:src/keys.c    **** 		return;
 3011              		.loc 1 507 6 is_stmt 0 view .LVU962
 3012 0512 FFF7FEFF 		bl	is_bad_cmdline
 3013              	.LVL244:
 507:src/keys.c    **** 		return;
 3014              		.loc 1 507 5 view .LVU963
 3015 0516 20B9     		cbnz	r0, .L285
 3016              	.LBE374:
 3017              	.LBE373:
1895:src/keys.c    **** 				State2.multi = 1;
 3018              		.loc 1 1895 31 view .LVU964
 3019 0518 A7F14200 		sub	r0, r7, #66
 3020              	.LBB376:
 3021              	.LBB375:
 3022 051c C0B2     		uxtb	r0, r0
 3023 051e FFF7FEFF 		bl	init_arg.part.0
 3024              	.LVL245:
 3025              	.L285:
1895:src/keys.c    **** 				State2.multi = 1;
 3026              		.loc 1 1895 31 view .LVU965
 3027              	.LBE375:
 3028              	.LBE376:
1896:src/keys.c    **** 				State2.alphashift = 0;
 3029              		.loc 1 1896 5 is_stmt 1 view .LVU966
1897:src/keys.c    **** 				State2.rarg = 0;
 3030              		.loc 1 1897 5 view .LVU967
1898:src/keys.c    **** 			} else if (base == RARG_SCI) {
 3031              		.loc 1 1898 5 view .LVU968
1896:src/keys.c    **** 				State2.alphashift = 0;
ARM GAS  /tmp/ccihcwFT.s 			page 117


 3032              		.loc 1 1896 18 is_stmt 0 view .LVU969
 3033 0522 6369     		ldr	r3, [r4, #20]
 3034 0524 23F44013 		bic	r3, r3, #3145728
 3035 0528 23F40063 		bic	r3, r3, #2048
 3036 052c 43F40063 		orr	r3, r3, #2048
 3037 0530 6361     		str	r3, [r4, #20]
1939:src/keys.c    **** }
 3038              		.loc 1 1939 9 view .LVU970
 3039 0532 3320     		movs	r0, #51
 3040 0534 B3E5     		b	.L224
 3041              	.LVL246:
 3042              	.L361:
1900:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
 3043              		.loc 1 1900 5 is_stmt 1 view .LVU971
 3044 0536 FFF7FEFF 		bl	reset_arg
 3045              	.LVL247:
1901:src/keys.c    **** 			} else if (base == RARG_ENG) {
 3046              		.loc 1 1901 5 view .LVU972
1901:src/keys.c    **** 			} else if (base == RARG_ENG) {
 3047              		.loc 1 1901 12 is_stmt 0 view .LVU973
 3048 053a 40F25510 		movw	r0, #341
 3049 053e AEE5     		b	.L224
 3050              	.LVL248:
 3051              	.L362:
1903:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
 3052              		.loc 1 1903 5 is_stmt 1 view .LVU974
 3053 0540 FFF7FEFF 		bl	reset_arg
 3054              	.LVL249:
1904:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 3055              		.loc 1 1904 5 view .LVU975
1904:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 3056              		.loc 1 1904 12 is_stmt 0 view .LVU976
 3057 0544 4FF4AB70 		mov	r0, #342
 3058 0548 A9E5     		b	.L224
 3059              	.LVL250:
 3060              	.L241:
1705:src/keys.c    **** 	  case regY_idx:
 3061              		.loc 1 1705 6 is_stmt 1 view .LVU977
1705:src/keys.c    **** 	  case regY_idx:
 3062              		.loc 1 1705 13 is_stmt 0 view .LVU978
 3063 054a 0120     		movs	r0, #1
 3064              	.LVL251:
1705:src/keys.c    **** 	  case regY_idx:
 3065              		.loc 1 1705 13 view .LVU979
 3066 054c A5E6     		b	.L346
 3067              	.L366:
 3068 054e 00BF     		.align	2
 3069              	.L365:
 3070 0550 CDCCCCCC 		.word	-858993459
 3071              		.cfi_endproc
 3072              	.LFE37:
 3074              		.section	.text.cur_shift,"ax",%progbits
 3075              		.align	1
 3076              		.p2align 2,,3
 3077              		.global	cur_shift
 3078              		.syntax unified
 3079              		.thumb
ARM GAS  /tmp/ccihcwFT.s 			page 118


 3080              		.thumb_func
 3081              		.fpu fpv4-sp-d16
 3083              	cur_shift:
 3084              	.LFB0:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 3085              		.loc 1 86 29 is_stmt 1 view -0
 3086              		.cfi_startproc
 3087              		@ args = 0, pretend = 0, frame = 0
 3088              		@ frame_needed = 0, uses_anonymous_args = 0
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3089              		.loc 1 87 2 view .LVU981
  86:src/keys.c    **** 	enum shifts s = shift_down();
 3090              		.loc 1 86 29 is_stmt 0 view .LVU982
 3091 0000 08B5     		push	{r3, lr}
 3092              		.cfi_def_cfa_offset 8
 3093              		.cfi_offset 3, -8
 3094              		.cfi_offset 14, -4
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3095              		.loc 1 87 18 view .LVU983
 3096 0002 FFF7FEFF 		bl	shift_down
 3097              	.LVL252:
  88:src/keys.c    **** }
 3098              		.loc 1 88 2 is_stmt 1 view .LVU984
  88:src/keys.c    **** }
 3099              		.loc 1 88 52 is_stmt 0 view .LVU985
 3100 0006 08B9     		cbnz	r0, .L368
  88:src/keys.c    **** }
 3101              		.loc 1 88 52 discriminator 1 view .LVU986
 3102 0008 014B     		ldr	r3, .L370
 3103 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 3104              	.LVL253:
 3105              	.L368:
  89:src/keys.c    **** 
 3106              		.loc 1 89 1 discriminator 4 view .LVU987
 3107 000c 08BD     		pop	{r3, pc}
 3108              	.L371:
 3109 000e 00BF     		.align	2
 3110              	.L370:
 3111 0010 00000000 		.word	StateWhileOn
 3112              		.cfi_endproc
 3113              	.LFE0:
 3115              		.section	.text.reset_shift,"ax",%progbits
 3116              		.align	1
 3117              		.p2align 2,,3
 3118              		.global	reset_shift
 3119              		.syntax unified
 3120              		.thumb
 3121              		.thumb_func
 3122              		.fpu fpv4-sp-d16
 3124              	reset_shift:
 3125              	.LFB2:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 3126              		.loc 1 104 31 is_stmt 1 view -0
 3127              		.cfi_startproc
 3128              		@ args = 0, pretend = 0, frame = 0
 3129              		@ frame_needed = 0, uses_anonymous_args = 0
 105:src/keys.c    **** }
ARM GAS  /tmp/ccihcwFT.s 			page 119


 3130              		.loc 1 105 2 view .LVU989
 3131              	.LVL254:
 3132              	.LBB377:
 3133              	.LBI377:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 3134              		.loc 1 94 20 view .LVU990
 3135              	.LBB378:
  95:src/keys.c    **** 	State2.shifts = shift;
 3136              		.loc 1 95 2 view .LVU991
 3137              	.LBB379:
 3138              	.LBI379:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 3139              		.loc 1 86 13 view .LVU992
 3140              	.LBB380:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3141              		.loc 1 87 2 view .LVU993
 3142              	.LBE380:
 3143              	.LBE379:
 3144              	.LBE378:
 3145              	.LBE377:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 3146              		.loc 1 104 31 is_stmt 0 view .LVU994
 3147 0000 08B5     		push	{r3, lr}
 3148              		.cfi_def_cfa_offset 8
 3149              		.cfi_offset 3, -8
 3150              		.cfi_offset 14, -4
 3151              	.LBB384:
 3152              	.LBB383:
 3153              	.LBB382:
 3154              	.LBB381:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3155              		.loc 1 87 18 view .LVU995
 3156 0002 FFF7FEFF 		bl	shift_down
 3157              	.LVL255:
  88:src/keys.c    **** }
 3158              		.loc 1 88 2 is_stmt 1 view .LVU996
  88:src/keys.c    **** }
 3159              		.loc 1 88 52 is_stmt 0 view .LVU997
 3160 0006 034B     		ldr	r3, .L377
 3161 0008 00B9     		cbnz	r0, .L373
 3162 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 3163              	.LVL256:
 3164              	.L373:
  88:src/keys.c    **** }
 3165              		.loc 1 88 52 view .LVU998
 3166              	.LBE381:
 3167              	.LBE382:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3168              		.loc 1 96 2 is_stmt 1 view .LVU999
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3169              		.loc 1 96 16 is_stmt 0 view .LVU1000
 3170 000c 0022     		movs	r2, #0
 3171 000e 1A74     		strb	r2, [r3, #16]
  98:src/keys.c    **** }
 3172              		.loc 1 98 2 is_stmt 1 view .LVU1001
 3173              	.LVL257:
  98:src/keys.c    **** }
ARM GAS  /tmp/ccihcwFT.s 			page 120


 3174              		.loc 1 98 2 is_stmt 0 view .LVU1002
 3175              	.LBE383:
 3176              	.LBE384:
 106:src/keys.c    **** 
 3177              		.loc 1 106 1 view .LVU1003
 3178 0010 08BD     		pop	{r3, pc}
 3179              	.L378:
 3180 0012 00BF     		.align	2
 3181              	.L377:
 3182 0014 00000000 		.word	StateWhileOn
 3183              		.cfi_endproc
 3184              	.LFE2:
 3186              		.section	.text.keycode_to_row_column,"ax",%progbits
 3187              		.align	1
 3188              		.p2align 2,,3
 3189              		.global	keycode_to_row_column
 3190              		.syntax unified
 3191              		.thumb
 3192              		.thumb_func
 3193              		.fpu fpv4-sp-d16
 3195              	keycode_to_row_column:
 3196              	.LVL258:
 3197              	.LFB6:
 170:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 3198              		.loc 1 170 1 is_stmt 1 view -0
 3199              		.cfi_startproc
 3200              		@ args = 0, pretend = 0, frame = 0
 3201              		@ frame_needed = 0, uses_anonymous_args = 0
 3202              		@ link register save eliminated.
 171:src/keys.c    **** }
 3203              		.loc 1 171 2 view .LVU1005
 171:src/keys.c    **** }
 3204              		.loc 1 171 18 is_stmt 0 view .LVU1006
 3205 0000 074A     		ldr	r2, .L380
 3206 0002 82FB0032 		smull	r3, r2, r2, r0
 3207 0006 A2EBE073 		sub	r3, r2, r0, asr #31
 171:src/keys.c    **** }
 3208              		.loc 1 171 24 view .LVU1007
 3209 000a 03EB8302 		add	r2, r3, r3, lsl #2
 3210 000e 5200     		lsls	r2, r2, #1
 171:src/keys.c    **** }
 3211              		.loc 1 171 33 view .LVU1008
 3212 0010 03EB4303 		add	r3, r3, r3, lsl #1
 3213 0014 A0EB4303 		sub	r3, r0, r3, lsl #1
 171:src/keys.c    **** }
 3214              		.loc 1 171 12 view .LVU1009
 3215 0018 02F10B00 		add	r0, r2, #11
 3216              	.LVL259:
 172:src/keys.c    **** 
 3217              		.loc 1 172 1 view .LVU1010
 3218 001c 1844     		add	r0, r0, r3
 3219 001e 7047     		bx	lr
 3220              	.L381:
 3221              		.align	2
 3222              	.L380:
 3223 0020 ABAAAA2A 		.word	715827883
 3224              		.cfi_endproc
ARM GAS  /tmp/ccihcwFT.s 			page 121


 3225              	.LFE6:
 3227              		.section	.text.row_column_to_keycode,"ax",%progbits
 3228              		.align	1
 3229              		.p2align 2,,3
 3230              		.global	row_column_to_keycode
 3231              		.syntax unified
 3232              		.thumb
 3233              		.thumb_func
 3234              		.fpu fpv4-sp-d16
 3236              	row_column_to_keycode:
 3237              	.LVL260:
 3238              	.LFB7:
 180:src/keys.c    **** 	int row = c / 10 - 1;
 3239              		.loc 1 180 1 is_stmt 1 view -0
 3240              		.cfi_startproc
 3241              		@ args = 0, pretend = 0, frame = 0
 3242              		@ frame_needed = 0, uses_anonymous_args = 0
 3243              		@ link register save eliminated.
 181:src/keys.c    **** 	int col = c % 10 - 1;
 3244              		.loc 1 181 2 view .LVU1012
 181:src/keys.c    **** 	int col = c % 10 - 1;
 3245              		.loc 1 181 14 is_stmt 0 view .LVU1013
 3246 0000 0E4A     		ldr	r2, .L388
 3247 0002 82FB0032 		smull	r3, r2, r2, r0
 3248 0006 C317     		asrs	r3, r0, #31
 3249 0008 C3EBA203 		rsb	r3, r3, r2, asr #2
 182:src/keys.c    **** 
 3250              		.loc 1 182 14 view .LVU1014
 3251 000c 03EB8302 		add	r2, r3, r3, lsl #2
 181:src/keys.c    **** 	int col = c % 10 - 1;
 3252              		.loc 1 181 6 view .LVU1015
 3253 0010 013B     		subs	r3, r3, #1
 3254              	.LVL261:
 182:src/keys.c    **** 
 3255              		.loc 1 182 2 is_stmt 1 view .LVU1016
 182:src/keys.c    **** 
 3256              		.loc 1 182 14 is_stmt 0 view .LVU1017
 3257 0012 A0EB4200 		sub	r0, r0, r2, lsl #1
 3258              	.LVL262:
 184:src/keys.c    **** 		return -1;
 3259              		.loc 1 184 5 view .LVU1018
 3260 0016 062B     		cmp	r3, #6
 182:src/keys.c    **** 
 3261              		.loc 1 182 6 view .LVU1019
 3262 0018 00F1FF30 		add	r0, r0, #-1
 3263              	.LVL263:
 184:src/keys.c    **** 		return -1;
 3264              		.loc 1 184 2 is_stmt 1 view .LVU1020
 184:src/keys.c    **** 		return -1;
 3265              		.loc 1 184 5 is_stmt 0 view .LVU1021
 3266 001c 0AD8     		bhi	.L387
 184:src/keys.c    **** 		return -1;
 3267              		.loc 1 184 36 discriminator 1 view .LVU1022
 3268 001e 012B     		cmp	r3, #1
 3269 0020 CCBF     		ite	gt
 3270 0022 0422     		movgt	r2, #4
 3271 0024 0522     		movle	r2, #5
ARM GAS  /tmp/ccihcwFT.s 			page 122


 184:src/keys.c    **** 		return -1;
 3272              		.loc 1 184 25 discriminator 1 view .LVU1023
 3273 0026 8242     		cmp	r2, r0
 3274 0028 04DB     		blt	.L387
 186:src/keys.c    **** }
 3275              		.loc 1 186 2 is_stmt 1 view .LVU1024
 186:src/keys.c    **** }
 3276              		.loc 1 186 13 is_stmt 0 view .LVU1025
 3277 002a 03EB4303 		add	r3, r3, r3, lsl #1
 3278              	.LVL264:
 186:src/keys.c    **** }
 3279              		.loc 1 186 17 view .LVU1026
 3280 002e 00EB4300 		add	r0, r0, r3, lsl #1
 3281              	.LVL265:
 186:src/keys.c    **** }
 3282              		.loc 1 186 17 view .LVU1027
 3283 0032 7047     		bx	lr
 3284              	.LVL266:
 3285              	.L387:
 185:src/keys.c    **** 	return row * 6 + col;
 3286              		.loc 1 185 10 view .LVU1028
 3287 0034 4FF0FF30 		mov	r0, #-1
 3288              	.LVL267:
 187:src/keys.c    **** 
 3289              		.loc 1 187 1 view .LVU1029
 3290 0038 7047     		bx	lr
 3291              	.L389:
 3292 003a 00BF     		.align	2
 3293              	.L388:
 3294 003c 67666666 		.word	1717986919
 3295              		.cfi_endproc
 3296              	.LFE7:
 3298              		.section	.text.keycode_to_digit_or_register,"ax",%progbits
 3299              		.align	1
 3300              		.p2align 2,,3
 3301              		.global	keycode_to_digit_or_register
 3302              		.syntax unified
 3303              		.thumb
 3304              		.thumb_func
 3305              		.fpu fpv4-sp-d16
 3307              	keycode_to_digit_or_register:
 3308              	.LVL268:
 3309              	.LFB8:
 201:src/keys.c    ****   static const unsigned char map[] = {
 3310              		.loc 1 201 1 is_stmt 1 view -0
 3311              		.cfi_startproc
 3312              		@ args = 0, pretend = 0, frame = 0
 3313              		@ frame_needed = 0, uses_anonymous_args = 0
 3314              		@ link register save eliminated.
 202:src/keys.c    ****     // K00 - K05
 3315              		.loc 1 202 3 view .LVU1031
 224:src/keys.c    **** }
 3316              		.loc 1 224 3 view .LVU1032
 3317              	.LBB385:
 3318              	.LBI385:
 121:src/keys.c    **** {
 3319              		.loc 1 121 12 view .LVU1033
ARM GAS  /tmp/ccihcwFT.s 			page 123


 3320              	.LBB386:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3321              		.loc 1 123 2 view .LVU1034
 133:src/keys.c    **** }
 3322              		.loc 1 133 2 view .LVU1035
 133:src/keys.c    **** }
 3323              		.loc 1 133 23 is_stmt 0 view .LVU1036
 3324 0000 024B     		ldr	r3, .L391
 3325              	.LBE386:
 3326              	.LBE385:
 224:src/keys.c    **** }
 3327              		.loc 1 224 28 view .LVU1037
 3328 0002 034A     		ldr	r2, .L391+4
 3329              	.LBB388:
 3330              	.LBB387:
 133:src/keys.c    **** }
 3331              		.loc 1 133 23 view .LVU1038
 3332 0004 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 3333              	.LBE387:
 3334              	.LBE388:
 225:src/keys.c    **** #else
 3335              		.loc 1 225 1 view .LVU1039
 3336 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 3337              	.LVL269:
 225:src/keys.c    **** #else
 3338              		.loc 1 225 1 view .LVU1040
 3339 0008 7047     		bx	lr
 3340              	.L392:
 3341 000a 00BF     		.align	2
 3342              	.L391:
 3343 000c 00000000 		.word	.LANCHOR1
 3344 0010 00000000 		.word	.LANCHOR0
 3345              		.cfi_endproc
 3346              	.LFE8:
 3348              		.section	.text.init_state,"ax",%progbits
 3349              		.align	1
 3350              		.p2align 2,,3
 3351              		.global	init_state
 3352              		.syntax unified
 3353              		.thumb
 3354              		.thumb_func
 3355              		.fpu fpv4-sp-d16
 3357              	init_state:
 3358              	.LFB13:
 569:src/keys.c    **** #ifndef REALBUILD
 3359              		.loc 1 569 23 is_stmt 1 view -0
 3360              		.cfi_startproc
 3361              		@ args = 0, pretend = 0, frame = 0
 3362              		@ frame_needed = 0, uses_anonymous_args = 0
 571:src/keys.c    **** 	unsigned int b = State2.trace;
 3363              		.loc 1 571 2 view .LVU1042
 569:src/keys.c    **** #ifndef REALBUILD
 3364              		.loc 1 569 23 is_stmt 0 view .LVU1043
 3365 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3366              		.cfi_def_cfa_offset 24
 3367              		.cfi_offset 4, -24
 3368              		.cfi_offset 5, -20
ARM GAS  /tmp/ccihcwFT.s 			page 124


 3369              		.cfi_offset 6, -16
 3370              		.cfi_offset 7, -12
 3371              		.cfi_offset 8, -8
 3372              		.cfi_offset 14, -4
 571:src/keys.c    **** 	unsigned int b = State2.trace;
 3373              		.loc 1 571 25 view .LVU1044
 3374 0004 154C     		ldr	r4, .L395
 579:src/keys.c    **** 	// Removed: will clear any locals on power off
 3375              		.loc 1 579 10 view .LVU1045
 3376 0006 0021     		movs	r1, #0
 583:src/keys.c    **** 	State2.test = TST_NONE;
 3377              		.loc 1 583 2 view .LVU1046
 3378 0008 1422     		movs	r2, #20
 3379 000a 04F10800 		add	r0, r4, #8
 579:src/keys.c    **** 	// Removed: will clear any locals on power off
 3380              		.loc 1 579 10 view .LVU1047
 3381 000e E177     		strb	r1, [r4, #31]
 571:src/keys.c    **** 	unsigned int b = State2.trace;
 3382              		.loc 1 571 25 view .LVU1048
 3383 0010 257E     		ldrb	r5, [r4, #24]	@ zero_extendqisi2
 572:src/keys.c    **** #else
 3384              		.loc 1 572 25 view .LVU1049
 3385 0012 E67D     		ldrb	r6, [r4, #23]	@ zero_extendqisi2
 576:src/keys.c    **** 	int k = LastKey;
 3386              		.loc 1 576 10 view .LVU1050
 3387 0014 A77C     		ldrb	r7, [r4, #18]	@ zero_extendqisi2
 577:src/keys.c    **** 
 3388              		.loc 1 577 10 view .LVU1051
 3389 0016 94F91380 		ldrsb	r8, [r4, #19]
 583:src/keys.c    **** 	State2.test = TST_NONE;
 3390              		.loc 1 583 2 view .LVU1052
 3391 001a FFF7FEFF 		bl	xset
 3392              	.LVL270:
 585:src/keys.c    **** 	update_program_bounds(1);
 3393              		.loc 1 585 17 view .LVU1053
 3394 001e A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 584:src/keys.c    **** 	State2.runmode = 1;
 3395              		.loc 1 584 14 view .LVU1054
 3396 0020 0722     		movs	r2, #7
 585:src/keys.c    **** 	update_program_bounds(1);
 3397              		.loc 1 585 17 view .LVU1055
 3398 0022 43F04003 		orr	r3, r3, #64
 586:src/keys.c    **** 	set_lift();
 3399              		.loc 1 586 2 view .LVU1056
 3400 0026 0120     		movs	r0, #1
 584:src/keys.c    **** 	State2.runmode = 1;
 3401              		.loc 1 584 14 view .LVU1057
 3402 0028 E273     		strb	r2, [r4, #15]
 585:src/keys.c    **** 	update_program_bounds(1);
 3403              		.loc 1 585 17 view .LVU1058
 3404 002a A375     		strb	r3, [r4, #22]
 586:src/keys.c    **** 	set_lift();
 3405              		.loc 1 586 2 view .LVU1059
 3406 002c FFF7FEFF 		bl	update_program_bounds
 3407              	.LVL271:
 587:src/keys.c    **** 
 3408              		.loc 1 587 2 view .LVU1060
ARM GAS  /tmp/ccihcwFT.s 			page 125


 3409 0030 FFF7FEFF 		bl	set_lift
 3410              	.LVL272:
 594:src/keys.c    **** 	State2.flags = a;
 3411              		.loc 1 594 15 view .LVU1061
 3412 0034 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 595:src/keys.c    **** #else
 3413              		.loc 1 595 15 view .LVU1062
 3414 0036 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 599:src/keys.c    **** }
 3415              		.loc 1 599 15 view .LVU1063
 3416 0038 0949     		ldr	r1, .L395+4
 592:src/keys.c    **** #ifndef REALBUILD
 3417              		.loc 1 592 10 view .LVU1064
 3418 003a 84F81380 		strb	r8, [r4, #19]
 571:src/keys.c    **** 	unsigned int b = State2.trace;
 3419              		.loc 1 571 25 view .LVU1065
 3420 003e 05F00105 		and	r5, r5, #1
 3421              	.LVL273:
 572:src/keys.c    **** #else
 3422              		.loc 1 572 2 is_stmt 1 view .LVU1066
 572:src/keys.c    **** #else
 3423              		.loc 1 572 25 is_stmt 0 view .LVU1067
 3424 0042 F609     		lsrs	r6, r6, #7
 3425              	.LVL274:
 576:src/keys.c    **** 	int k = LastKey;
 3426              		.loc 1 576 2 is_stmt 1 view .LVU1068
 576:src/keys.c    **** 	int k = LastKey;
 3427              		.loc 1 576 10 is_stmt 0 view .LVU1069
 3428 0044 FFB2     		uxtb	r7, r7
 3429              	.LVL275:
 577:src/keys.c    **** 
 3430              		.loc 1 577 2 is_stmt 1 view .LVU1070
 579:src/keys.c    **** 	// Removed: will clear any locals on power off
 3431              		.loc 1 579 2 view .LVU1071
 583:src/keys.c    **** 	State2.test = TST_NONE;
 3432              		.loc 1 583 2 view .LVU1072
 584:src/keys.c    **** 	State2.runmode = 1;
 3433              		.loc 1 584 2 view .LVU1073
 585:src/keys.c    **** 	update_program_bounds(1);
 3434              		.loc 1 585 2 view .LVU1074
 586:src/keys.c    **** 	set_lift();
 3435              		.loc 1 586 2 view .LVU1075
 587:src/keys.c    **** 
 3436              		.loc 1 587 2 view .LVU1076
 591:src/keys.c    **** 	LastKey = k;
 3437              		.loc 1 591 2 view .LVU1077
 594:src/keys.c    **** 	State2.flags = a;
 3438              		.loc 1 594 15 is_stmt 0 view .LVU1078
 3439 0046 66F3C712 		bfi	r2, r6, #7, #1
 595:src/keys.c    **** #else
 3440              		.loc 1 595 15 view .LVU1079
 3441 004a 65F30003 		bfi	r3, r5, #0, #1
 599:src/keys.c    **** }
 3442              		.loc 1 599 15 view .LVU1080
 3443 004e 6420     		movs	r0, #100
 594:src/keys.c    **** 	State2.flags = a;
 3444              		.loc 1 594 15 view .LVU1081
ARM GAS  /tmp/ccihcwFT.s 			page 126


 3445 0050 E275     		strb	r2, [r4, #23]
 595:src/keys.c    **** #else
 3446              		.loc 1 595 15 view .LVU1082
 3447 0052 2376     		strb	r3, [r4, #24]
 591:src/keys.c    **** 	LastKey = k;
 3448              		.loc 1 591 10 view .LVU1083
 3449 0054 A774     		strb	r7, [r4, #18]
 592:src/keys.c    **** #ifndef REALBUILD
 3450              		.loc 1 592 2 is_stmt 1 view .LVU1084
 594:src/keys.c    **** 	State2.flags = a;
 3451              		.loc 1 594 2 view .LVU1085
 595:src/keys.c    **** #else
 3452              		.loc 1 595 2 view .LVU1086
 599:src/keys.c    **** }
 3453              		.loc 1 599 2 view .LVU1087
 599:src/keys.c    **** }
 3454              		.loc 1 599 15 is_stmt 0 view .LVU1088
 3455 0056 0860     		str	r0, [r1]
 600:src/keys.c    **** 
 3456              		.loc 1 600 1 view .LVU1089
 3457 0058 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3458              	.LVL276:
 3459              	.L396:
 600:src/keys.c    **** 
 3460              		.loc 1 600 1 view .LVU1090
 3461              		.align	2
 3462              	.L395:
 3463 005c 00000000 		.word	StateWhileOn
 3464 0060 00000000 		.word	ShowRegister
 3465              		.cfi_endproc
 3466              	.LFE13:
 3468              		.section	.text.soft_init_state,"ax",%progbits
 3469              		.align	1
 3470              		.p2align 2,,3
 3471              		.global	soft_init_state
 3472              		.syntax unified
 3473              		.thumb
 3474              		.thumb_func
 3475              		.fpu fpv4-sp-d16
 3477              	soft_init_state:
 3478              	.LFB14:
 602:src/keys.c    **** 	int soft;
 3479              		.loc 1 602 28 is_stmt 1 view -0
 3480              		.cfi_startproc
 3481              		@ args = 0, pretend = 0, frame = 0
 3482              		@ frame_needed = 0, uses_anonymous_args = 0
 603:src/keys.c    **** 	unsigned int runmode;
 3483              		.loc 1 603 2 view .LVU1092
 604:src/keys.c    **** 	unsigned int alphas;
 3484              		.loc 1 604 2 view .LVU1093
 605:src/keys.c    **** 
 3485              		.loc 1 605 2 view .LVU1094
 607:src/keys.c    **** 		CmdLineLength = 0;
 3486              		.loc 1 607 2 view .LVU1095
 602:src/keys.c    **** 	int soft;
 3487              		.loc 1 602 28 is_stmt 0 view .LVU1096
 3488 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /tmp/ccihcwFT.s 			page 127


 3489              		.cfi_def_cfa_offset 16
 3490              		.cfi_offset 3, -16
 3491              		.cfi_offset 4, -12
 3492              		.cfi_offset 5, -8
 3493              		.cfi_offset 14, -4
 607:src/keys.c    **** 		CmdLineLength = 0;
 3494              		.loc 1 607 6 view .LVU1097
 3495 0002 114C     		ldr	r4, .L404
 607:src/keys.c    **** 		CmdLineLength = 0;
 3496              		.loc 1 607 5 view .LVU1098
 3497 0004 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 3498 0006 D3B9     		cbnz	r3, .L403
 613:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 3499              		.loc 1 613 2 is_stmt 1 view .LVU1099
 614:src/keys.c    **** 	runmode = State2.runmode;
 3500              		.loc 1 614 17 is_stmt 0 view .LVU1100
 3501 0008 104A     		ldr	r2, .L404+4
 3502 000a 6369     		ldr	r3, [r4, #20]
 614:src/keys.c    **** 	runmode = State2.runmode;
 3503              		.loc 1 614 60 view .LVU1101
 3504 000c 1A42     		tst	r2, r3
 3505 000e 0AD0     		beq	.L400
 3506              	.L401:
 3507              	.LVL277:
 615:src/keys.c    **** 	alphas = State2.alphas;
 3508              		.loc 1 615 2 is_stmt 1 view .LVU1102
 616:src/keys.c    **** 	init_state();
 3509              		.loc 1 616 17 is_stmt 0 view .LVU1103
 3510 0010 A57D     		ldrb	r5, [r4, #22]	@ zero_extendqisi2
 3511              	.LVL278:
 616:src/keys.c    **** 	init_state();
 3512              		.loc 1 616 2 is_stmt 1 view .LVU1104
 617:src/keys.c    **** 	if (soft) {
 3513              		.loc 1 617 2 view .LVU1105
 3514 0012 FFF7FEFF 		bl	init_state
 3515              	.LVL279:
 618:src/keys.c    **** 		State2.runmode = runmode;
 3516              		.loc 1 618 2 view .LVU1106
 619:src/keys.c    **** 		State2.alphas = alphas;
 3517              		.loc 1 619 3 view .LVU1107
 620:src/keys.c    **** 	}
 3518              		.loc 1 620 3 view .LVU1108
 620:src/keys.c    **** 	}
 3519              		.loc 1 620 17 is_stmt 0 view .LVU1109
 3520 0016 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 3521 0018 05F04805 		and	r5, r5, #72
 3522 001c 23F04803 		bic	r3, r3, #72
 3523 0020 2B43     		orrs	r3, r3, r5
 3524 0022 A375     		strb	r3, [r4, #22]
 622:src/keys.c    **** 
 3525              		.loc 1 622 1 view .LVU1110
 3526 0024 38BD     		pop	{r3, r4, r5, pc}
 3527              	.LVL280:
 3528              	.L400:
 614:src/keys.c    **** 	runmode = State2.runmode;
 3529              		.loc 1 614 60 discriminator 2 view .LVU1111
 3530 0026 E368     		ldr	r3, [r4, #12]
ARM GAS  /tmp/ccihcwFT.s 			page 128


 3531 0028 23F47F03 		bic	r3, r3, #16711680
 3532 002c 23F47F43 		bic	r3, r3, #65280
 3533 0030 B3F1E06F 		cmp	r3, #117440512
 3534 0034 ECD1     		bne	.L401
 3535              	.LVL281:
 615:src/keys.c    **** 	alphas = State2.alphas;
 3536              		.loc 1 615 2 is_stmt 1 view .LVU1112
 616:src/keys.c    **** 	init_state();
 3537              		.loc 1 616 2 view .LVU1113
 617:src/keys.c    **** 	if (soft) {
 3538              		.loc 1 617 2 view .LVU1114
 622:src/keys.c    **** 
 3539              		.loc 1 622 1 is_stmt 0 view .LVU1115
 3540 0036 BDE83840 		pop	{r3, r4, r5, lr}
 3541              		.cfi_remember_state
 3542              		.cfi_restore 14
 3543              		.cfi_restore 5
 3544              		.cfi_restore 4
 3545              		.cfi_restore 3
 3546              		.cfi_def_cfa_offset 0
 617:src/keys.c    **** 	if (soft) {
 3547              		.loc 1 617 2 view .LVU1116
 3548 003a FFF7FEBF 		b	init_state
 3549              	.LVL282:
 3550              	.L403:
 3551              		.cfi_restore_state
 3552              	.LBB391:
 3553              	.LBI391:
 602:src/keys.c    **** 	int soft;
 3554              		.loc 1 602 6 is_stmt 1 view .LVU1117
 3555              	.LBB392:
 608:src/keys.c    **** 		CmdLineEex = 0;
 3556              		.loc 1 608 3 view .LVU1118
 609:src/keys.c    **** 		CmdLineDot = 0;
 3557              		.loc 1 609 3 view .LVU1119
 610:src/keys.c    **** 		return;
 3558              		.loc 1 610 3 view .LVU1120
 608:src/keys.c    **** 		CmdLineEex = 0;
 3559              		.loc 1 608 17 is_stmt 0 view .LVU1121
 3560 003e 0023     		movs	r3, #0
 3561 0040 A383     		strh	r3, [r4, #28]	@ movhi
 610:src/keys.c    **** 		return;
 3562              		.loc 1 610 14 view .LVU1122
 3563 0042 A377     		strb	r3, [r4, #30]
 611:src/keys.c    **** 	}
 3564              		.loc 1 611 3 is_stmt 1 view .LVU1123
 3565              	.LBE392:
 3566              	.LBE391:
 622:src/keys.c    **** 
 3567              		.loc 1 622 1 is_stmt 0 view .LVU1124
 3568 0044 38BD     		pop	{r3, r4, r5, pc}
 3569              	.L405:
 3570 0046 00BF     		.align	2
 3571              	.L404:
 3572 0048 00000000 		.word	StateWhileOn
 3573 004c 002F2004 		.word	69218048
 3574              		.cfi_endproc
ARM GAS  /tmp/ccihcwFT.s 			page 129


 3575              	.LFE14:
 3577              		.section	.text.current_catalogue_max,"ax",%progbits
 3578              		.align	1
 3579              		.p2align 2,,3
 3580              		.global	current_catalogue_max
 3581              		.syntax unified
 3582              		.thumb
 3583              		.thumb_func
 3584              		.fpu fpv4-sp-d16
 3586              	current_catalogue_max:
 3587              	.LFB39:
2076:src/keys.c    **** 	// A quick table of catalogue sizes
 3588              		.loc 1 2076 33 is_stmt 1 view -0
 3589              		.cfi_startproc
 3590              		@ args = 0, pretend = 0, frame = 0
 3591              		@ frame_needed = 0, uses_anonymous_args = 0
 3592              		@ link register save eliminated.
2079:src/keys.c    **** 	{
 3593              		.loc 1 2079 2 view .LVU1126
2110:src/keys.c    **** #endif
 3594              		.loc 1 2110 2 view .LVU1127
2110:src/keys.c    **** #endif
 3595              		.loc 1 2110 31 is_stmt 0 view .LVU1128
 3596 0000 024B     		ldr	r3, .L407
2110:src/keys.c    **** #endif
 3597              		.loc 1 2110 24 view .LVU1129
 3598 0002 034A     		ldr	r2, .L407+4
2110:src/keys.c    **** #endif
 3599              		.loc 1 2110 31 view .LVU1130
 3600 0004 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2112:src/keys.c    **** 
 3601              		.loc 1 2112 1 view .LVU1131
 3602 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 3603 0008 7047     		bx	lr
 3604              	.L408:
 3605 000a 00BF     		.align	2
 3606              	.L407:
 3607 000c 00000000 		.word	StateWhileOn
 3608 0010 00000000 		.word	.LANCHOR2
 3609              		.cfi_endproc
 3610              	.LFE39:
 3612              		.section	.text.current_catalogue,"ax",%progbits
 3613              		.align	1
 3614              		.p2align 2,,3
 3615              		.global	current_catalogue
 3616              		.syntax unified
 3617              		.thumb
 3618              		.thumb_func
 3619              		.fpu fpv4-sp-d16
 3621              	current_catalogue:
 3622              	.LVL283:
 3623              	.LFB41:
2125:src/keys.c    **** 	// A quick table of catalogue tables
 3624              		.loc 1 2125 33 is_stmt 1 view -0
 3625              		.cfi_startproc
 3626              		@ args = 0, pretend = 0, frame = 0
 3627              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccihcwFT.s 			page 130


 3628              		@ link register save eliminated.
2128:src/keys.c    **** 	{
 3629              		.loc 1 2128 2 view .LVU1133
2155:src/keys.c    **** 	unsigned int c = State2.catalogue;
 3630              		.loc 1 2155 2 view .LVU1134
2156:src/keys.c    **** 	int m, i;
 3631              		.loc 1 2156 2 view .LVU1135
2156:src/keys.c    **** 	int m, i;
 3632              		.loc 1 2156 25 is_stmt 0 view .LVU1136
 3633 0000 314A     		ldr	r2, .L436
2156:src/keys.c    **** 	int m, i;
 3634              		.loc 1 2156 15 view .LVU1137
 3635 0002 937B     		ldrb	r3, [r2, #14]	@ zero_extendqisi2
 3636              	.LVL284:
2157:src/keys.c    **** 	unsigned p, q;
 3637              		.loc 1 2157 2 is_stmt 1 view .LVU1138
2158:src/keys.c    **** 
 3638              		.loc 1 2158 2 view .LVU1139
2160:src/keys.c    **** 		if (n == OP_ZERO)
 3639              		.loc 1 2160 2 view .LVU1140
2160:src/keys.c    **** 		if (n == OP_ZERO)
 3640              		.loc 1 2160 5 is_stmt 0 view .LVU1141
 3641 0004 102B     		cmp	r3, #16
 3642 0006 39D0     		beq	.L430
2165:src/keys.c    **** 		if (n == OP_ZERO)
 3643              		.loc 1 2165 2 is_stmt 1 view .LVU1142
2165:src/keys.c    **** 		if (n == OP_ZERO)
 3644              		.loc 1 2165 5 is_stmt 0 view .LVU1143
 3645 0008 112B     		cmp	r3, #17
 3646 000a 32D0     		beq	.L431
2170:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 3647              		.loc 1 2170 2 is_stmt 1 view .LVU1144
2170:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 3648              		.loc 1 2170 5 is_stmt 0 view .LVU1145
 3649 000c 122B     		cmp	r3, #18
 3650 000e 45D0     		beq	.L432
2183:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 3651              		.loc 1 2183 2 is_stmt 1 view .LVU1146
2183:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 3652              		.loc 1 2183 5 is_stmt 0 view .LVU1147
 3653 0010 0E2B     		cmp	r3, #14
 3654 0012 38D0     		beq	.L433
2186:src/keys.c    **** 
 3655              		.loc 1 2186 3 is_stmt 1 view .LVU1148
2186:src/keys.c    **** 
 3656              		.loc 1 2186 7 is_stmt 0 view .LVU1149
 3657 0014 2D4A     		ldr	r2, .L436+4
2188:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3658              		.loc 1 2188 35 view .LVU1150
 3659 0016 A3F10B01 		sub	r1, r3, #11
2188:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3660              		.loc 1 2188 5 view .LVU1151
 3661 001a 0429     		cmp	r1, #4
2186:src/keys.c    **** 
 3662              		.loc 1 2186 7 view .LVU1152
 3663 001c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 3664              	.LVL285:
ARM GAS  /tmp/ccihcwFT.s 			page 131


2188:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3665              		.loc 1 2188 2 is_stmt 1 view .LVU1153
2188:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3666              		.loc 1 2188 5 is_stmt 0 view .LVU1154
 3667 0020 38D9     		bls	.L416
2191:src/keys.c    **** 		return OP_NIL | OP_NOP;
 3668              		.loc 1 2191 2 is_stmt 1 view .LVU1155
2191:src/keys.c    **** 		return OP_NIL | OP_NOP;
 3669              		.loc 1 2191 5 is_stmt 0 view .LVU1156
 3670 0022 142B     		cmp	r3, #20
 3671 0024 4DD8     		bhi	.L424
2195:src/keys.c    **** 	p = cat[0];
 3672              		.loc 1 2195 2 is_stmt 1 view .LVU1157
2125:src/keys.c    **** 	// A quick table of catalogue tables
 3673              		.loc 1 2125 33 is_stmt 0 view .LVU1158
 3674 0026 10B4     		push	{r4}
 3675              		.cfi_def_cfa_offset 4
 3676              		.cfi_offset 4, -4
2195:src/keys.c    **** 	p = cat[0];
 3677              		.loc 1 2195 11 view .LVU1159
 3678 0028 00EBA001 		add	r1, r0, r0, asr #2
2195:src/keys.c    **** 	p = cat[0];
 3679              		.loc 1 2195 6 view .LVU1160
 3680 002c 5318     		adds	r3, r2, r1
 3681              	.LVL286:
2196:src/keys.c    **** 	q = cat[1];
 3682              		.loc 1 2196 2 is_stmt 1 view .LVU1161
2197:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3683              		.loc 1 2197 2 view .LVU1162
2198:src/keys.c    **** 
 3684              		.loc 1 2198 2 view .LVU1163
2198:src/keys.c    **** 
 3685              		.loc 1 2198 35 is_stmt 0 view .LVU1164
 3686 002e 4000     		lsls	r0, r0, #1
 3687              	.LVL287:
2196:src/keys.c    **** 	q = cat[1];
 3688              		.loc 1 2196 4 view .LVU1165
 3689 0030 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 3690              	.LVL288:
2197:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3691              		.loc 1 2197 4 view .LVU1166
 3692 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3693              	.LVL289:
2197:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3694              		.loc 1 2197 4 view .LVU1167
 3695 0034 2649     		ldr	r1, .L436+8
 3696              	.LVL290:
2198:src/keys.c    **** 
 3697              		.loc 1 2198 54 view .LVU1168
 3698 0036 C443     		mvns	r4, r0
2198:src/keys.c    **** 
 3699              		.loc 1 2198 35 view .LVU1169
 3700 0038 00F00600 		and	r0, r0, #6
2198:src/keys.c    **** 
 3701              		.loc 1 2198 54 view .LVU1170
 3702 003c 04F00604 		and	r4, r4, #6
2198:src/keys.c    **** 
ARM GAS  /tmp/ccihcwFT.s 			page 132


 3703              		.loc 1 2198 24 view .LVU1171
 3704 0040 0230     		adds	r0, r0, #2
2198:src/keys.c    **** 
 3705              		.loc 1 2198 48 view .LVU1172
 3706 0042 E340     		lsrs	r3, r3, r4
 3707              	.LVL291:
2198:src/keys.c    **** 
 3708              		.loc 1 2198 18 view .LVU1173
 3709 0044 02FA00F0 		lsl	r0, r2, r0
2198:src/keys.c    **** 
 3710              		.loc 1 2198 43 view .LVU1174
 3711 0048 1843     		orrs	r0, r0, r3
2198:src/keys.c    **** 
 3712              		.loc 1 2198 4 view .LVU1175
 3713 004a C0F30903 		ubfx	r3, r0, #0, #10
 3714              	.LVL292:
2201:src/keys.c    **** 		if (m < opcode_breaks[i])
 3715              		.loc 1 2201 2 is_stmt 1 view .LVU1176
2201:src/keys.c    **** 		if (m < opcode_breaks[i])
 3716              		.loc 1 2201 12 view .LVU1177
2198:src/keys.c    **** 
 3717              		.loc 1 2198 4 is_stmt 0 view .LVU1178
 3718 004e 3422     		movs	r2, #52
 3719              	.LVL293:
2201:src/keys.c    **** 		if (m < opcode_breaks[i])
 3720              		.loc 1 2201 8 view .LVU1179
 3721 0050 0020     		movs	r0, #0
 3722 0052 01E0     		b	.L420
 3723              	.LVL294:
 3724              	.L435:
2201:src/keys.c    **** 		if (m < opcode_breaks[i])
 3725              		.loc 1 2201 8 view .LVU1180
 3726 0054 11F8012B 		ldrb	r2, [r1], #1	@ zero_extendqisi2
 3727              	.LVL295:
 3728              	.L420:
2202:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 3729              		.loc 1 2202 3 is_stmt 1 view .LVU1181
2204:src/keys.c    **** 	}
 3730              		.loc 1 2204 3 view .LVU1182
2202:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 3731              		.loc 1 2202 6 is_stmt 0 view .LVU1183
 3732 0058 9A42     		cmp	r2, r3
 3733 005a 2FDC     		bgt	.L434
2201:src/keys.c    **** 		if (m < opcode_breaks[i])
 3734              		.loc 1 2201 25 discriminator 2 view .LVU1184
 3735 005c 0130     		adds	r0, r0, #1
 3736              	.LVL296:
2201:src/keys.c    **** 		if (m < opcode_breaks[i])
 3737              		.loc 1 2201 2 discriminator 2 view .LVU1185
 3738 005e 0728     		cmp	r0, #7
2204:src/keys.c    **** 	}
 3739              		.loc 1 2204 5 discriminator 2 view .LVU1186
 3740 0060 A3EB0203 		sub	r3, r3, r2
 3741              	.LVL297:
2201:src/keys.c    **** 		if (m < opcode_breaks[i])
 3742              		.loc 1 2201 24 is_stmt 1 discriminator 2 view .LVU1187
2201:src/keys.c    **** 		if (m < opcode_breaks[i])
ARM GAS  /tmp/ccihcwFT.s 			page 133


 3743              		.loc 1 2201 12 discriminator 2 view .LVU1188
2201:src/keys.c    **** 		if (m < opcode_breaks[i])
 3744              		.loc 1 2201 2 is_stmt 0 discriminator 2 view .LVU1189
 3745 0064 F6D1     		bne	.L435
2206:src/keys.c    **** }
 3746              		.loc 1 2206 2 is_stmt 1 view .LVU1190
2206:src/keys.c    **** }
 3747              		.loc 1 2206 9 is_stmt 0 view .LVU1191
 3748 0066 03F12000 		add	r0, r3, #32
 3749              	.LVL298:
2206:src/keys.c    **** }
 3750              		.loc 1 2206 9 view .LVU1192
 3751 006a 0002     		lsls	r0, r0, #8
 3752              	.L409:
2207:src/keys.c    **** 
 3753              		.loc 1 2207 1 view .LVU1193
 3754 006c 5DF8044B 		ldr	r4, [sp], #4
 3755              		.cfi_restore 4
 3756              		.cfi_def_cfa_offset 0
 3757 0070 7047     		bx	lr
 3758              	.LVL299:
 3759              	.L431:
2166:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 3760              		.loc 1 2166 3 is_stmt 1 view .LVU1194
2166:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 3761              		.loc 1 2166 6 is_stmt 0 view .LVU1195
 3762 0072 4B28     		cmp	r0, #75
 3763 0074 1FD0     		beq	.L422
2168:src/keys.c    **** 	}
 3764              		.loc 1 2168 3 is_stmt 1 view .LVU1196
2168:src/keys.c    **** 	}
 3765              		.loc 1 2168 10 is_stmt 0 view .LVU1197
 3766 0076 40F40450 		orr	r0, r0, #8448
 3767              	.LVL300:
2168:src/keys.c    **** 	}
 3768              		.loc 1 2168 10 view .LVU1198
 3769 007a 7047     		bx	lr
 3770              	.LVL301:
 3771              	.L430:
2161:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 3772              		.loc 1 2161 3 is_stmt 1 view .LVU1199
2161:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 3773              		.loc 1 2161 6 is_stmt 0 view .LVU1200
 3774 007c 4B28     		cmp	r0, #75
 3775 007e 17D0     		beq	.L421
2163:src/keys.c    **** 	}
 3776              		.loc 1 2163 3 is_stmt 1 view .LVU1201
2163:src/keys.c    **** 	}
 3777              		.loc 1 2163 10 is_stmt 0 view .LVU1202
 3778 0080 40F40050 		orr	r0, r0, #8192
 3779              	.LVL302:
2163:src/keys.c    **** 	}
 3780              		.loc 1 2163 10 view .LVU1203
 3781 0084 7047     		bx	lr
 3782              	.LVL303:
 3783              	.L433:
2183:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
ARM GAS  /tmp/ccihcwFT.s 			page 134


 3784              		.loc 1 2183 35 discriminator 1 view .LVU1204
 3785 0086 917D     		ldrb	r1, [r2, #22]	@ zero_extendqisi2
2184:src/keys.c    **** 	else
 3786              		.loc 1 2184 7 discriminator 1 view .LVU1205
 3787 0088 124B     		ldr	r3, .L436+12
 3788              	.LVL304:
2184:src/keys.c    **** 	else
 3789              		.loc 1 2184 7 discriminator 1 view .LVU1206
 3790 008a 134A     		ldr	r2, .L436+16
 3791              	.LVL305:
2184:src/keys.c    **** 	else
 3792              		.loc 1 2184 7 discriminator 1 view .LVU1207
 3793 008c 11F0100F 		tst	r1, #16
 3794 0090 18BF     		it	ne
 3795 0092 1A46     		movne	r2, r3
 3796              	.L416:
 3797              	.LVL306:
2189:src/keys.c    **** 	}
 3798              		.loc 1 2189 3 is_stmt 1 view .LVU1208
 3799              	.LBB393:
 3800              	.LBI393:
2118:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
 3801              		.loc 1 2118 15 view .LVU1209
 3802              	.LBB394:
2119:src/keys.c    **** }
 3803              		.loc 1 2119 2 view .LVU1210
2119:src/keys.c    **** }
 3804              		.loc 1 2119 9 is_stmt 0 view .LVU1211
 3805 0094 105C     		ldrb	r0, [r2, r0]	@ zero_extendqisi2
 3806              	.LVL307:
2119:src/keys.c    **** }
 3807              		.loc 1 2119 9 view .LVU1212
 3808 0096 40F48840 		orr	r0, r0, #17408
 3809              	.LVL308:
2119:src/keys.c    **** }
 3810              		.loc 1 2119 9 view .LVU1213
 3811              	.LBE394:
 3812              	.LBE393:
2189:src/keys.c    **** 	}
 3813              		.loc 1 2189 10 view .LVU1214
 3814 009a 7047     		bx	lr
 3815              	.LVL309:
 3816              	.L432:
 3817              	.LBB395:
2171:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3818              		.loc 1 2171 3 is_stmt 1 view .LVU1215
2171:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3819              		.loc 1 2171 33 is_stmt 0 view .LVU1216
 3820 009c 0F4B     		ldr	r3, .L436+20
 3821              	.LVL310:
2171:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3822              		.loc 1 2171 13 view .LVU1217
 3823 009e 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 3824              	.LVL311:
2172:src/keys.c    **** 			// Monadic conversion routine
 3825              		.loc 1 2172 3 is_stmt 1 view .LVU1218
2172:src/keys.c    **** 			// Monadic conversion routine
ARM GAS  /tmp/ccihcwFT.s 			page 135


 3826              		.loc 1 2172 6 is_stmt 0 view .LVU1219
 3827 00a0 5728     		cmp	r0, #87
2174:src/keys.c    **** 		else
 3828              		.loc 1 2174 4 is_stmt 1 view .LVU1220
2174:src/keys.c    **** 		else
 3829              		.loc 1 2174 25 is_stmt 0 view .LVU1221
 3830 00a2 C6BF     		itte	gt
 3831 00a4 5838     		subgt	r0, r0, #88
 3832              	.LVL312:
2174:src/keys.c    **** 		else
 3833              		.loc 1 2174 18 view .LVU1222
 3834 00a6 40F40070 		orrgt	r0, r0, #512
2176:src/keys.c    **** 	}
 3835              		.loc 1 2176 4 is_stmt 1 view .LVU1223
2176:src/keys.c    **** 	}
 3836              		.loc 1 2176 11 is_stmt 0 view .LVU1224
 3837 00aa 40F40C40 		orrle	r0, r0, #35840
 3838 00ae 7047     		bx	lr
 3839              	.LVL313:
 3840              	.L421:
2176:src/keys.c    **** 	}
 3841              		.loc 1 2176 11 view .LVU1225
 3842              	.LBE395:
2162:src/keys.c    **** 		return CONST(n);
 3843              		.loc 1 2162 11 view .LVU1226
 3844 00b0 4FF42740 		mov	r0, #42752
 3845              	.LVL314:
2162:src/keys.c    **** 		return CONST(n);
 3846              		.loc 1 2162 11 view .LVU1227
 3847 00b4 7047     		bx	lr
 3848              	.LVL315:
 3849              	.L422:
2167:src/keys.c    **** 		return CONST_CMPLX(n);
 3850              		.loc 1 2167 11 view .LVU1228
 3851 00b6 4FF42840 		mov	r0, #43008
 3852              	.LVL316:
2167:src/keys.c    **** 		return CONST_CMPLX(n);
 3853              		.loc 1 2167 11 view .LVU1229
 3854 00ba 7047     		bx	lr
 3855              	.LVL317:
 3856              	.L434:
 3857              		.cfi_def_cfa_offset 4
 3858              		.cfi_offset 4, -4
2203:src/keys.c    **** 		m -= opcode_breaks[i];
 3859              		.loc 1 2203 4 is_stmt 1 view .LVU1230
2203:src/keys.c    **** 		m -= opcode_breaks[i];
 3860              		.loc 1 2203 29 is_stmt 0 view .LVU1231
 3861 00bc 03EB0020 		add	r0, r3, r0, lsl #8
 3862              	.LVL318:
2203:src/keys.c    **** 		m -= opcode_breaks[i];
 3863              		.loc 1 2203 29 view .LVU1232
 3864 00c0 D4E7     		b	.L409
 3865              	.LVL319:
 3866              	.L424:
 3867              		.cfi_def_cfa_offset 0
 3868              		.cfi_restore 4
2192:src/keys.c    **** 
ARM GAS  /tmp/ccihcwFT.s 			page 136


 3869              		.loc 1 2192 10 view .LVU1233
 3870 00c2 4FF48070 		mov	r0, #256
 3871              	.LVL320:
2207:src/keys.c    **** 
 3872              		.loc 1 2207 1 view .LVU1234
 3873 00c6 7047     		bx	lr
 3874              	.L437:
 3875              		.align	2
 3876              	.L436:
 3877 00c8 00000000 		.word	StateWhileOn
 3878 00cc 00000000 		.word	.LANCHOR6
 3879 00d0 01000000 		.word	.LANCHOR7+1
 3880 00d4 00000000 		.word	.LANCHOR4
 3881 00d8 00000000 		.word	.LANCHOR3
 3882 00dc 00000000 		.word	.LANCHOR5
 3883              		.cfi_endproc
 3884              	.LFE41:
 3886              		.section	.text.process_catalogue,"ax",%progbits
 3887              		.align	1
 3888              		.p2align 2,,3
 3889              		.syntax unified
 3890              		.thumb
 3891              		.thumb_func
 3892              		.fpu fpv4-sp-d16
 3894              	process_catalogue:
 3895              	.LVL321:
 3896              	.LFB43:
2221:src/keys.c    ****    int pos = State.catpos;
 3897              		.loc 1 2221 93 is_stmt 1 view -0
 3898              		.cfi_startproc
 3899              		@ args = 0, pretend = 0, frame = 16
 3900              		@ frame_needed = 0, uses_anonymous_args = 0
2221:src/keys.c    ****    int pos = State.catpos;
 3901              		.loc 1 2221 93 is_stmt 0 view .LVU1236
 3902 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3903              		.cfi_def_cfa_offset 36
 3904              		.cfi_offset 4, -36
 3905              		.cfi_offset 5, -32
 3906              		.cfi_offset 6, -28
 3907              		.cfi_offset 7, -24
 3908              		.cfi_offset 8, -20
 3909              		.cfi_offset 9, -16
 3910              		.cfi_offset 10, -12
 3911              		.cfi_offset 11, -8
 3912              		.cfi_offset 14, -4
2222:src/keys.c    ****    int ch;
 3913              		.loc 1 2222 14 view .LVU1237
 3914 0004 DFF8EC92 		ldr	r9, .L552+24
 3915              	.LBB396:
 3916              	.LBB397:
2110:src/keys.c    **** #endif
 3917              		.loc 1 2110 31 view .LVU1238
 3918 0008 B44F     		ldr	r7, .L552
 3919              	.LBE397:
 3920              	.LBE396:
2222:src/keys.c    ****    int ch;
 3921              		.loc 1 2222 14 view .LVU1239
ARM GAS  /tmp/ccihcwFT.s 			page 137


 3922 000a D9F80040 		ldr	r4, [r9]
 3923              	.LBB402:
 3924              	.LBB398:
2110:src/keys.c    **** #endif
 3925              		.loc 1 2110 31 view .LVU1240
 3926 000e 97F80EA0 		ldrb	r10, [r7, #14]	@ zero_extendqisi2
 3927              	.LBE398:
 3928              	.LBE402:
2222:src/keys.c    ****    int ch;
 3929              		.loc 1 2222 19 view .LVU1241
 3930 0012 B4F8DC57 		ldrh	r5, [r4, #2012]
 3931              	.LBB403:
 3932              	.LBB399:
2110:src/keys.c    **** #endif
 3933              		.loc 1 2110 24 view .LVU1242
 3934 0016 B24B     		ldr	r3, .L552+4
 3935              	.LBE399:
 3936              	.LBE403:
2222:src/keys.c    ****    int ch;
 3937              		.loc 1 2222 4 is_stmt 1 view .LVU1243
2221:src/keys.c    ****    int pos = State.catpos;
 3938              		.loc 1 2221 93 is_stmt 0 view .LVU1244
 3939 0018 85B0     		sub	sp, sp, #20
 3940              		.cfi_def_cfa_offset 56
 3941              	.LBB404:
 3942              	.LBB400:
2110:src/keys.c    **** #endif
 3943              		.loc 1 2110 24 view .LVU1245
 3944 001a 13F80A80 		ldrb	r8, [r3, r10]	@ zero_extendqisi2
 3945              	.LBE400:
 3946              	.LBE404:
2221:src/keys.c    ****    int pos = State.catpos;
 3947              		.loc 1 2221 93 view .LVU1246
 3948 001e 1646     		mov	r6, r2
2222:src/keys.c    ****    int ch;
 3949              		.loc 1 2222 8 view .LVU1247
 3950 0020 C5F34615 		ubfx	r5, r5, #5, #7
 3951              	.LVL322:
2223:src/keys.c    ****    const int ctmax = current_catalogue_max();
 3952              		.loc 1 2223 4 is_stmt 1 view .LVU1248
2224:src/keys.c    ****    const enum catalogues cat = (enum catalogues) State2.catalogue;
 3953              		.loc 1 2224 4 view .LVU1249
 3954              	.LBB405:
 3955              	.LBI396:
2076:src/keys.c    **** 	// A quick table of catalogue sizes
 3956              		.loc 1 2076 5 view .LVU1250
 3957              	.LBB401:
2079:src/keys.c    **** 	{
 3958              		.loc 1 2079 2 view .LVU1251
2110:src/keys.c    **** #endif
 3959              		.loc 1 2110 2 view .LVU1252
2110:src/keys.c    **** #endif
 3960              		.loc 1 2110 2 is_stmt 0 view .LVU1253
 3961              	.LBE401:
 3962              	.LBE405:
2225:src/keys.c    **** 
 3963              		.loc 1 2225 4 is_stmt 1 view .LVU1254
ARM GAS  /tmp/ccihcwFT.s 			page 138


2227:src/keys.c    ****      switch (c) {
 3964              		.loc 1 2227 4 view .LVU1255
2227:src/keys.c    ****      switch (c) {
 3965              		.loc 1 2227 7 is_stmt 0 view .LVU1256
 3966 0024 0029     		cmp	r1, #0
 3967 0026 65D0     		beq	.L537
2288:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
 3968              		.loc 1 2288 11 is_stmt 1 view .LVU1257
2288:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
 3969              		.loc 1 2288 14 is_stmt 0 view .LVU1258
 3970 0028 0129     		cmp	r1, #1
 3971 002a 00F0ED80 		beq	.L538
2322:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
 3972              		.loc 1 2322 11 is_stmt 1 view .LVU1259
2322:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
 3973              		.loc 1 2322 14 is_stmt 0 view .LVU1260
 3974 002e 0229     		cmp	r1, #2
 3975 0030 00F00B81 		beq	.L539
 3976              	.LVL323:
 3977              	.L474:
 3978              	.LBB406:
 3979              	.LBB407:
 445:src/keys.c    **** }
 3980              		.loc 1 445 2 is_stmt 1 view .LVU1261
 3981              	.LBB408:
 3982              	.LBI408:
 121:src/keys.c    **** {
 3983              		.loc 1 121 12 view .LVU1262
 3984              	.LBB409:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3985              		.loc 1 123 2 view .LVU1263
 133:src/keys.c    **** }
 3986              		.loc 1 133 2 view .LVU1264
 133:src/keys.c    **** }
 3987              		.loc 1 133 23 is_stmt 0 view .LVU1265
 3988 0034 AB4B     		ldr	r3, .L552+8
 3989              	.LBE409:
 3990              	.LBE408:
 445:src/keys.c    **** }
 3991              		.loc 1 445 49 view .LVU1266
 3992 0036 AC4A     		ldr	r2, .L552+12
 3993              	.LBB411:
 3994              	.LBB410:
 133:src/keys.c    **** }
 3995              		.loc 1 133 23 view .LVU1267
 3996 0038 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 3997              	.LBE410:
 3998              	.LBE411:
 445:src/keys.c    **** }
 3999              		.loc 1 445 49 view .LVU1268
 4000 003a 03EB4303 		add	r3, r3, r3, lsl #1
 4001 003e 02EB4303 		add	r3, r2, r3, lsl #1
 4002              	.LBE407:
 4003              	.LBE406:
 4004              	.LBB415:
 4005              	.LBB416:
 4006              	.LBB417:
ARM GAS  /tmp/ccihcwFT.s 			page 139


  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4007              		.loc 1 96 16 view .LVU1269
 4008 0042 0025     		movs	r5, #0
 4009              	.LVL324:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4010              		.loc 1 96 16 view .LVU1270
 4011              	.LBE417:
 4012              	.LBE416:
 4013              	.LBE415:
2332:src/keys.c    ****    reset_shift();
 4014              		.loc 1 2332 9 view .LVU1271
 4015 0044 585C     		ldrb	r0, [r3, r1]	@ zero_extendqisi2
 4016              	.LVL325:
2332:src/keys.c    ****    reset_shift();
 4017              		.loc 1 2332 9 view .LVU1272
 4018 0046 FFF7FEFF 		bl	remap_chars
 4019              	.LVL326:
2332:src/keys.c    ****    reset_shift();
 4020              		.loc 1 2332 9 view .LVU1273
 4021 004a 0446     		mov	r4, r0
 4022              	.LVL327:
2333:src/keys.c    ****    if (ch == '\0')
 4023              		.loc 1 2333 4 is_stmt 1 view .LVU1274
 4024              	.LBB422:
 4025              	.LBI415:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 4026              		.loc 1 104 13 view .LVU1275
 4027              	.LBE422:
 105:src/keys.c    **** }
 4028              		.loc 1 105 2 view .LVU1276
 4029              	.LBB423:
 4030              	.LBB421:
 4031              	.LBI416:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 4032              		.loc 1 94 20 view .LVU1277
 4033              	.LBB420:
  95:src/keys.c    **** 	State2.shifts = shift;
 4034              		.loc 1 95 2 view .LVU1278
 4035              	.LBB418:
 4036              	.LBI418:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 4037              		.loc 1 86 13 view .LVU1279
 4038              	.LBB419:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4039              		.loc 1 87 2 view .LVU1280
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4040              		.loc 1 87 18 is_stmt 0 view .LVU1281
 4041 004c FFF7FEFF 		bl	shift_down
 4042              	.LVL328:
  88:src/keys.c    **** }
 4043              		.loc 1 88 2 is_stmt 1 view .LVU1282
 4044              	.LBE419:
 4045              	.LBE418:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4046              		.loc 1 96 2 view .LVU1283
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4047              		.loc 1 96 16 is_stmt 0 view .LVU1284
ARM GAS  /tmp/ccihcwFT.s 			page 140


 4048 0050 3D74     		strb	r5, [r7, #16]
  98:src/keys.c    **** }
 4049              		.loc 1 98 2 is_stmt 1 view .LVU1285
 4050              	.LVL329:
  98:src/keys.c    **** }
 4051              		.loc 1 98 2 is_stmt 0 view .LVU1286
 4052              	.LBE420:
 4053              	.LBE421:
 4054              	.LBE423:
2334:src/keys.c    ****      return STATE_UNFINISHED;
 4055              		.loc 1 2334 4 is_stmt 1 view .LVU1287
2334:src/keys.c    ****      return STATE_UNFINISHED;
 4056              		.loc 1 2334 7 is_stmt 0 view .LVU1288
 4057 0052 002C     		cmp	r4, #0
 4058 0054 6FD0     		beq	.L536
2336:src/keys.c    ****      // No multi character search in alpha catalogues
 4059              		.loc 1 2336 4 is_stmt 1 view .LVU1289
2336:src/keys.c    ****      // No multi character search in alpha catalogues
 4060              		.loc 1 2336 7 is_stmt 0 view .LVU1290
 4061 0056 AAF10B0A 		sub	r10, r10, #11
 4062              	.LVL330:
2336:src/keys.c    ****      // No multi character search in alpha catalogues
 4063              		.loc 1 2336 7 view .LVU1291
 4064 005a BAF1040F 		cmp	r10, #4
 4065 005e 40F2CB80 		bls	.L488
2340:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 4066              		.loc 1 2340 4 is_stmt 1 view .LVU1292
2340:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 4067              		.loc 1 2340 8 is_stmt 0 view .LVU1293
 4068 0062 3D7F     		ldrb	r5, [r7, #28]	@ zero_extendqisi2
2340:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 4069              		.loc 1 2340 7 view .LVU1294
 4070 0064 092D     		cmp	r5, #9
 4071 0066 40F2C780 		bls	.L488
 4072              	.LVL331:
 4073              	.L456:
2345:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
 4074              		.loc 1 2345 4 is_stmt 1 view .LVU1295
2345:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
 4075              		.loc 1 2345 27 is_stmt 0 view .LVU1296
 4076 006a 7B19     		adds	r3, r7, r5
 4077 006c 0025     		movs	r5, #0
 4078 006e 83F82050 		strb	r5, [r3, #32]
2346:src/keys.c    ****      char buf[16];
 4079              		.loc 1 2346 4 is_stmt 1 view .LVU1297
 4080              	.LVL332:
2346:src/keys.c    ****      char buf[16];
 4081              		.loc 1 2346 18 view .LVU1298
2346:src/keys.c    ****      char buf[16];
 4082              		.loc 1 2346 4 is_stmt 0 view .LVU1299
 4083 0072 B8F1000F 		cmp	r8, #0
 4084 0076 00F0D780 		beq	.L534
 4085              	.LVL333:
 4086              	.L476:
 4087              	.LBB424:
2347:src/keys.c    ****      const char *cmd = catcmd(current_catalogue(pos), buf);
 4088              		.loc 1 2347 6 is_stmt 1 view .LVU1300
ARM GAS  /tmp/ccihcwFT.s 			page 141


2348:src/keys.c    ****      int i;
 4089              		.loc 1 2348 6 view .LVU1301
2348:src/keys.c    ****      int i;
 4090              		.loc 1 2348 24 is_stmt 0 view .LVU1302
 4091 007a 2846     		mov	r0, r5
 4092 007c FFF7FEFF 		bl	current_catalogue
 4093              	.LVL334:
 4094 0080 6946     		mov	r1, sp
 4095 0082 FFF7FEFF 		bl	catcmd
 4096              	.LVL335:
 4097 0086 0446     		mov	r4, r0
 4098              	.LVL336:
2349:src/keys.c    **** 
 4099              		.loc 1 2349 6 is_stmt 1 view .LVU1303
2351:src/keys.c    ****        cmd++;
 4100              		.loc 1 2351 6 view .LVU1304
2352:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
 4101              		.loc 1 2352 8 view .LVU1305
2351:src/keys.c    ****        cmd++;
 4102              		.loc 1 2351 10 is_stmt 0 view .LVU1306
 4103 0088 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4104              	.LVL337:
2351:src/keys.c    ****        cmd++;
 4105              		.loc 1 2351 9 view .LVU1307
 4106 008a 1428     		cmp	r0, #20
 4107 008c 04BF     		itt	eq
 4108 008e 6078     		ldrbeq	r0, [r4, #1]	@ zero_extendqisi2
2352:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
 4109              		.loc 1 2352 11 view .LVU1308
 4110 0090 0134     		addeq	r4, r4, #1
 4111              	.LVL338:
2353:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 4112              		.loc 1 2353 6 is_stmt 1 view .LVU1309
2353:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 4113              		.loc 1 2353 16 view .LVU1310
2353:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 4114              		.loc 1 2353 6 is_stmt 0 view .LVU1311
 4115 0092 0028     		cmp	r0, #0
 4116 0094 00F0BF80 		beq	.L478
 4117 0098 DFF85CB2 		ldr	fp, .L552+28
 4118 009c C4F1010A 		rsb	r10, r4, #1
 4119 00a0 06E0     		b	.L481
 4120              	.LVL339:
 4121              	.L541:
 4122              	.LBB425:
2358:src/keys.c    **** 	 break;
 4123              		.loc 1 2358 16 view .LVU1312
 4124 00a2 C0F2BA80 		blt	.L480
 4125              	.LBE425:
2353:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 4126              		.loc 1 2353 19 discriminator 2 view .LVU1313
 4127 00a6 14F8010F 		ldrb	r0, [r4, #1]!	@ zero_extendqisi2
 4128              	.LVL340:
2353:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 4129              		.loc 1 2353 6 discriminator 2 view .LVU1314
 4130 00aa 0028     		cmp	r0, #0
 4131 00ac 00F0BF80 		beq	.L540
ARM GAS  /tmp/ccihcwFT.s 			page 142


 4132              	.LVL341:
 4133              	.L481:
 4134              	.LBB426:
2354:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
 4135              		.loc 1 2354 8 is_stmt 1 view .LVU1315
2354:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
 4136              		.loc 1 2354 22 is_stmt 0 view .LVU1316
 4137 00b0 FFF7FEFF 		bl	remap_chars
 4138              	.LVL342:
2358:src/keys.c    **** 	 break;
 4139              		.loc 1 2358 13 is_stmt 1 view .LVU1317
 4140              	.LBE426:
2353:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 4141              		.loc 1 2353 32 view .LVU1318
 4142              	.LBB427:
2355:src/keys.c    ****        if (c > cl)
 4143              		.loc 1 2355 8 view .LVU1319
2355:src/keys.c    ****        if (c > cl)
 4144              		.loc 1 2355 46 is_stmt 0 view .LVU1320
 4145 00b4 1BF8013F 		ldrb	r3, [fp, #1]!	@ zero_extendqisi2
 4146              	.LVL343:
2356:src/keys.c    **** 	 goto set_pos;
 4147              		.loc 1 2356 8 is_stmt 1 view .LVU1321
2356:src/keys.c    **** 	 goto set_pos;
 4148              		.loc 1 2356 11 is_stmt 0 view .LVU1322
 4149 00b8 9842     		cmp	r0, r3
 4150 00ba 0AEB0402 		add	r2, r10, r4
 4151              	.LVL344:
2356:src/keys.c    **** 	 goto set_pos;
 4152              		.loc 1 2356 11 view .LVU1323
 4153              	.LBE427:
2353:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 4154              		.loc 1 2353 16 is_stmt 1 view .LVU1324
 4155              	.LBB428:
2356:src/keys.c    **** 	 goto set_pos;
 4156              		.loc 1 2356 11 is_stmt 0 view .LVU1325
 4157 00be F0DD     		ble	.L541
 4158              	.LVL345:
 4159              	.L479:
2356:src/keys.c    **** 	 goto set_pos;
 4160              		.loc 1 2356 11 view .LVU1326
 4161 00c0 D9F80040 		ldr	r4, [r9]
 4162              	.L459:
2356:src/keys.c    **** 	 goto set_pos;
 4163              		.loc 1 2356 11 view .LVU1327
 4164              	.LBE428:
 4165              	.LBE424:
2367:src/keys.c    ****      --pos;
 4166              		.loc 1 2367 10 is_stmt 1 view .LVU1328
 4167 00c4 002E     		cmp	r6, #0
 4168 00c6 00F0B680 		beq	.L463
2367:src/keys.c    ****      --pos;
 4169              		.loc 1 2367 20 is_stmt 0 view .LVU1329
 4170 00ca 4DB1     		cbz	r5, .L457
 4171              	.LVL346:
 4172              	.L535:
2367:src/keys.c    ****      --pos;
ARM GAS  /tmp/ccihcwFT.s 			page 143


 4173              		.loc 1 2367 20 view .LVU1330
 4174 00cc 2846     		mov	r0, r5
 4175 00ce FFF7FEFF 		bl	current_catalogue
 4176              	.LVL347:
2368:src/keys.c    ****    State.catpos = pos;
 4177              		.loc 1 2368 6 is_stmt 1 view .LVU1331
2367:src/keys.c    ****      --pos;
 4178              		.loc 1 2367 10 view .LVU1332
 4179              	.LBB429:
 4180              	.LBI429:
2214:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 4181              		.loc 1 2214 12 view .LVU1333
 4182              	.LBB430:
2215:src/keys.c    **** }
 4183              		.loc 1 2215 2 view .LVU1334
2215:src/keys.c    **** }
 4184              		.loc 1 2215 33 is_stmt 0 view .LVU1335
 4185 00d2 00F0F000 		and	r0, r0, #240
 4186              	.LBE430:
 4187              	.LBE429:
2367:src/keys.c    ****      --pos;
 4188              		.loc 1 2367 27 view .LVU1336
 4189 00d6 F028     		cmp	r0, #240
 4190 00d8 40F0AD80 		bne	.L463
2367:src/keys.c    ****      --pos;
 4191              		.loc 1 2367 20 view .LVU1337
 4192 00dc 013D     		subs	r5, r5, #1
 4193              	.LVL348:
2367:src/keys.c    ****      --pos;
 4194              		.loc 1 2367 20 view .LVU1338
 4195 00de F5D1     		bne	.L535
 4196              	.LVL349:
 4197              	.L457:
2369:src/keys.c    ****    return STATE_UNFINISHED;
 4198              		.loc 1 2369 4 is_stmt 1 view .LVU1339
2369:src/keys.c    ****    return STATE_UNFINISHED;
 4199              		.loc 1 2369 17 is_stmt 0 view .LVU1340
 4200 00e0 B4F8DC37 		ldrh	r3, [r4, #2012]
 4201 00e4 65F34B13 		bfi	r3, r5, #5, #7
 4202 00e8 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2370:src/keys.c    ****  }
 4203              		.loc 1 2370 4 is_stmt 1 view .LVU1341
2370:src/keys.c    ****  }
 4204              		.loc 1 2370 11 is_stmt 0 view .LVU1342
 4205 00ec 3320     		movs	r0, #51
 4206              	.L548:
2371:src/keys.c    **** 
 4207              		.loc 1 2371 2 view .LVU1343
 4208 00ee 05B0     		add	sp, sp, #20
 4209              		.cfi_remember_state
 4210              		.cfi_def_cfa_offset 36
 4211              		@ sp needed
 4212 00f0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4213              	.LVL350:
 4214              	.L537:
 4215              		.cfi_restore_state
2228:src/keys.c    **** #ifdef DM42
ARM GAS  /tmp/ccihcwFT.s 			page 144


 4216              		.loc 1 2228 6 is_stmt 1 view .LVU1344
 4217 00f4 431F     		subs	r3, r0, #5
 4218 00f6 1F2B     		cmp	r3, #31
 4219 00f8 2FD8     		bhi	.L440
 4220 00fa DFE803F0 		tbb	[pc, r3]
 4221              	.LVL351:
 4222              	.L442:
 4223 00fe 35       		.byte	(.L446-.L442)/2
 4224 00ff 2E       		.byte	(.L440-.L442)/2
 4225 0100 2E       		.byte	(.L440-.L442)/2
 4226 0101 2E       		.byte	(.L440-.L442)/2
 4227 0102 2E       		.byte	(.L440-.L442)/2
 4228 0103 2E       		.byte	(.L440-.L442)/2
 4229 0104 2E       		.byte	(.L440-.L442)/2
 4230 0105 35       		.byte	(.L446-.L442)/2
 4231 0106 2E       		.byte	(.L440-.L442)/2
 4232 0107 2E       		.byte	(.L440-.L442)/2
 4233 0108 2E       		.byte	(.L440-.L442)/2
 4234 0109 20       		.byte	(.L445-.L442)/2
 4235 010a 2E       		.byte	(.L440-.L442)/2
 4236 010b 64       		.byte	(.L444-.L442)/2
 4237 010c 2E       		.byte	(.L440-.L442)/2
 4238 010d 2E       		.byte	(.L440-.L442)/2
 4239 010e 2E       		.byte	(.L440-.L442)/2
 4240 010f 2E       		.byte	(.L440-.L442)/2
 4241 0110 2E       		.byte	(.L440-.L442)/2
 4242 0111 6B       		.byte	(.L443-.L442)/2
 4243 0112 2E       		.byte	(.L440-.L442)/2
 4244 0113 2E       		.byte	(.L440-.L442)/2
 4245 0114 2E       		.byte	(.L440-.L442)/2
 4246 0115 2E       		.byte	(.L440-.L442)/2
 4247 0116 2E       		.byte	(.L440-.L442)/2
 4248 0117 2E       		.byte	(.L440-.L442)/2
 4249 0118 2E       		.byte	(.L440-.L442)/2
 4250 0119 2E       		.byte	(.L440-.L442)/2
 4251 011a 2E       		.byte	(.L440-.L442)/2
 4252 011b 2E       		.byte	(.L440-.L442)/2
 4253 011c 2E       		.byte	(.L440-.L442)/2
 4254 011d 27       		.byte	(.L441-.L442)/2
 4255              		.p2align 1
 4256              	.L547:
2317:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 4257              		.loc 1 2317 42 is_stmt 0 discriminator 1 view .LVU1345
 4258 011e 734A     		ldr	r2, .L552+16
 4259              	.LVL352:
2317:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 4260              		.loc 1 2317 42 discriminator 1 view .LVU1346
 4261 0120 7B69     		ldr	r3, [r7, #20]
2317:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 4262              		.loc 1 2317 24 discriminator 1 view .LVU1347
 4263 0122 1A42     		tst	r2, r3
 4264 0124 75D0     		beq	.L471
2319:src/keys.c    ****        return STATE_UNFINISHED;
 4265              		.loc 1 2319 8 is_stmt 1 view .LVU1348
2319:src/keys.c    ****        return STATE_UNFINISHED;
 4266              		.loc 1 2319 38 is_stmt 0 view .LVU1349
 4267 0126 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  /tmp/ccihcwFT.s 			page 145


 4268 0128 C3F30012 		ubfx	r2, r3, #4, #1
2319:src/keys.c    ****        return STATE_UNFINISHED;
 4269              		.loc 1 2319 30 view .LVU1350
 4270 012c C2F10102 		rsb	r2, r2, #1
2319:src/keys.c    ****        return STATE_UNFINISHED;
 4271              		.loc 1 2319 26 view .LVU1351
 4272 0130 62F30413 		bfi	r3, r2, #4, #1
 4273 0134 BB75     		strb	r3, [r7, #22]
 4274              	.LVL353:
 4275              	.L536:
2320:src/keys.c    ****      }
 4276              		.loc 1 2320 8 is_stmt 1 view .LVU1352
2320:src/keys.c    ****      }
 4277              		.loc 1 2320 15 is_stmt 0 view .LVU1353
 4278 0136 3320     		movs	r0, #51
 4279              	.L438:
2371:src/keys.c    **** 
 4280              		.loc 1 2371 2 view .LVU1354
 4281 0138 05B0     		add	sp, sp, #20
 4282              		.cfi_remember_state
 4283              		.cfi_def_cfa_offset 36
 4284              		@ sp needed
 4285 013a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4286              	.LVL354:
 4287              	.L445:
 4288              		.cfi_restore_state
2257:src/keys.c    **** 	 if (--CmdLineLength > 0)
 4289              		.loc 1 2257 8 is_stmt 1 view .LVU1355
2257:src/keys.c    **** 	 if (--CmdLineLength > 0)
 4290              		.loc 1 2257 11 is_stmt 0 view .LVU1356
 4291 013e 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 4292 0140 23B1     		cbz	r3, .L441
2257:src/keys.c    **** 	 if (--CmdLineLength > 0)
 4293              		.loc 1 2257 33 discriminator 1 view .LVU1357
 4294 0142 FFF7FEFF 		bl	keyticks
 4295              	.LVL355:
2257:src/keys.c    **** 	 if (--CmdLineLength > 0)
 4296              		.loc 1 2257 30 discriminator 1 view .LVU1358
 4297 0146 1D28     		cmp	r0, #29
 4298 0148 40F39580 		ble	.L542
 4299              	.L441:
2267:src/keys.c    ****        return STATE_UNFINISHED;
 4300              		.loc 1 2267 8 is_stmt 1 view .LVU1359
 4301 014c 0020     		movs	r0, #0
 4302 014e FFF7FEFF 		bl	init_cat
 4303              	.LVL356:
2268:src/keys.c    **** 
 4304              		.loc 1 2268 8 view .LVU1360
2268:src/keys.c    **** 
 4305              		.loc 1 2268 15 is_stmt 0 view .LVU1361
 4306 0152 3320     		movs	r0, #51
2371:src/keys.c    **** 
 4307              		.loc 1 2371 2 view .LVU1362
 4308 0154 05B0     		add	sp, sp, #20
 4309              		.cfi_remember_state
 4310              		.cfi_def_cfa_offset 36
 4311              		@ sp needed
ARM GAS  /tmp/ccihcwFT.s 			page 146


 4312 0156 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4313              	.LVL357:
 4314              	.L440:
 4315              		.cfi_restore_state
 4316              	.LBB431:
 4317              	.LBI406:
 389:src/keys.c    **** {
 4318              		.loc 1 389 12 is_stmt 1 discriminator 4 view .LVU1363
 4319              	.LBB412:
 391:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4320              		.loc 1 391 2 discriminator 4 view .LVU1364
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4321              		.loc 1 439 2 discriminator 4 view .LVU1365
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4322              		.loc 1 439 6 is_stmt 0 discriminator 4 view .LVU1366
 4323 015a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4324              		.loc 1 439 5 discriminator 4 view .LVU1367
 4325 015c 13F0100F 		tst	r3, #16
 4326 0160 14BF     		ite	ne
 4327 0162 0421     		movne	r1, #4
 4328              	.LVL358:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4329              		.loc 1 439 5 discriminator 4 view .LVU1368
 4330 0164 0021     		moveq	r1, #0
 4331 0166 65E7     		b	.L474
 4332              	.LVL359:
 4333              	.L446:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4334              		.loc 1 439 5 discriminator 4 view .LVU1369
 4335              	.LBE412:
 4336              	.LBE431:
2235:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 4337              		.loc 1 2235 8 is_stmt 1 view .LVU1370
2235:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 4338              		.loc 1 2235 11 is_stmt 0 view .LVU1371
 4339 0168 4545     		cmp	r5, r8
 4340 016a EFDA     		bge	.L441
 4341 016c 2846     		mov	r0, r5
 4342              	.LVL360:
2235:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 4343              		.loc 1 2235 24 discriminator 1 view .LVU1372
 4344 016e 002E     		cmp	r6, #0
 4345 0170 00F08D80 		beq	.L543
 4346              	.LVL361:
 4347              	.LBB432:
 4348              	.LBI432:
2214:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 4349              		.loc 1 2214 12 is_stmt 1 view .LVU1373
 4350              	.LBB433:
2215:src/keys.c    **** }
 4351              		.loc 1 2215 2 view .LVU1374
2215:src/keys.c    **** }
 4352              		.loc 1 2215 10 is_stmt 0 view .LVU1375
 4353 0174 FFF7FEFF 		bl	current_catalogue
 4354              	.LVL362:
2215:src/keys.c    **** }
ARM GAS  /tmp/ccihcwFT.s 			page 147


 4355              		.loc 1 2215 33 view .LVU1376
 4356 0178 00F0F003 		and	r3, r0, #240
 4357              	.LBE433:
 4358              	.LBE432:
2235:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 4359              		.loc 1 2235 27 view .LVU1377
 4360 017c F02B     		cmp	r3, #240
 4361              	.LBB435:
 4362              	.LBB434:
2215:src/keys.c    **** }
 4363              		.loc 1 2215 10 view .LVU1378
 4364 017e 0446     		mov	r4, r0
 4365              	.LBE434:
 4366              	.LBE435:
2235:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 4367              		.loc 1 2235 27 view .LVU1379
 4368 0180 E4D0     		beq	.L441
 4369              	.L449:
 4370              	.LBB436:
2236:src/keys.c    **** 
 4371              		.loc 1 2236 3 is_stmt 1 view .LVU1380
2238:src/keys.c    **** 
 4372              		.loc 1 2238 3 view .LVU1381
 4373 0182 0020     		movs	r0, #0
 4374 0184 FFF7FEFF 		bl	init_cat
 4375              	.LVL363:
2240:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 4376              		.loc 1 2240 3 view .LVU1382
2240:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 4377              		.loc 1 2240 6 is_stmt 0 view .LVU1383
 4378 0188 14F47043 		ands	r3, r4, #61440
 4379 018c 00F08C80 		beq	.L450
2240:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 4380              		.loc 1 2240 7 discriminator 1 view .LVU1384
 4381 0190 B3F5704F 		cmp	r3, #61440
 4382 0194 00F08880 		beq	.L450
 4383              	.LBB437:
2241:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4384              		.loc 1 2241 5 is_stmt 1 view .LVU1385
2241:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4385              		.loc 1 2241 31 is_stmt 0 view .LVU1386
 4386 0198 C4F30723 		ubfx	r3, r4, #8, #8
 4387 019c A3F12005 		sub	r5, r3, #32
 4388              	.LVL364:
2241:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4389              		.loc 1 2241 31 view .LVU1387
 4390 01a0 EDB2     		uxtb	r5, r5
 4391              	.LVL365:
2242:src/keys.c    **** 	     return op;
 4392              		.loc 1 2242 5 is_stmt 1 view .LVU1388
2242:src/keys.c    **** 	     return op;
 4393              		.loc 1 2242 8 is_stmt 0 view .LVU1389
 4394 01a2 012D     		cmp	r5, #1
 4395 01a4 40F28980 		bls	.L451
2242:src/keys.c    **** 	     return op;
 4396              		.loc 1 2242 56 discriminator 1 view .LVU1390
 4397 01a8 6C2D     		cmp	r5, #108
ARM GAS  /tmp/ccihcwFT.s 			page 148


 4398 01aa 00F08680 		beq	.L451
2242:src/keys.c    **** 	     return op;
 4399              		.loc 1 2242 77 discriminator 2 view .LVU1391
 4400 01ae 242D     		cmp	r5, #36
 4401 01b0 00F08380 		beq	.L451
2244:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4402              		.loc 1 2244 5 is_stmt 1 view .LVU1392
2244:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4403              		.loc 1 2244 30 is_stmt 0 view .LVU1393
 4404 01b4 A5F12D02 		sub	r2, r5, #45
2244:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4405              		.loc 1 2244 8 view .LVU1394
 4406 01b8 062A     		cmp	r2, #6
 4407 01ba 00F29F80 		bhi	.L454
2245:src/keys.c    **** 	   else
 4408              		.loc 1 2245 7 is_stmt 1 view .LVU1395
2245:src/keys.c    **** 	   else
 4409              		.loc 1 2245 28 is_stmt 0 view .LVU1396
 4410 01be 4D3B     		subs	r3, r3, #77
2245:src/keys.c    **** 	   else
 4411              		.loc 1 2245 19 view .LVU1397
 4412 01c0 FB73     		strb	r3, [r7, #15]
 4413              	.LBE437:
 4414              	.LBE436:
2254:src/keys.c    **** 
 4415              		.loc 1 2254 15 view .LVU1398
 4416 01c2 3320     		movs	r0, #51
 4417              	.LBB447:
 4418              	.LBB440:
 4419 01c4 B8E7     		b	.L438
 4420              	.LVL366:
 4421              	.L444:
2254:src/keys.c    **** 
 4422              		.loc 1 2254 15 view .LVU1399
 4423              	.LBE440:
 4424              	.LBE447:
2271:src/keys.c    ****        if (pos == 0)
 4425              		.loc 1 2271 8 is_stmt 1 view .LVU1400
2271:src/keys.c    ****        if (pos == 0)
 4426              		.loc 1 2271 22 is_stmt 0 view .LVU1401
 4427 01c6 0023     		movs	r3, #0
 4428 01c8 3B77     		strb	r3, [r7, #28]
2272:src/keys.c    **** 	 goto set_max;
 4429              		.loc 1 2272 8 is_stmt 1 view .LVU1402
2272:src/keys.c    **** 	 goto set_max;
 4430              		.loc 1 2272 11 is_stmt 0 view .LVU1403
 4431 01ca 002D     		cmp	r5, #0
 4432 01cc 5DD1     		bne	.L544
 4433              	.LVL367:
 4434              	.L458:
2365:src/keys.c    ****  set_pos:
 4435              		.loc 1 2365 4 is_stmt 1 view .LVU1404
2365:src/keys.c    ****  set_pos:
 4436              		.loc 1 2365 8 is_stmt 0 view .LVU1405
 4437 01ce 08F1FF35 		add	r5, r8, #-1
 4438              	.LVL368:
2365:src/keys.c    ****  set_pos:
ARM GAS  /tmp/ccihcwFT.s 			page 149


 4439              		.loc 1 2365 8 view .LVU1406
 4440 01d2 77E7     		b	.L459
 4441              	.LVL369:
 4442              	.L443:
2279:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 4443              		.loc 1 2279 8 is_stmt 1 view .LVU1407
2279:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 4444              		.loc 1 2279 22 is_stmt 0 view .LVU1408
 4445 01d4 0023     		movs	r3, #0
 4446 01d6 3B77     		strb	r3, [r7, #28]
2280:src/keys.c    ****        if (pos >= ctmax)
 4447              		.loc 1 2280 8 is_stmt 1 view .LVU1409
2280:src/keys.c    ****        if (pos >= ctmax)
 4448              		.loc 1 2280 14 is_stmt 0 view .LVU1410
 4449 01d8 06E0     		b	.L462
 4450              	.LVL370:
 4451              	.L545:
2280:src/keys.c    ****        if (pos >= ctmax)
 4452              		.loc 1 2280 29 discriminator 1 view .LVU1411
 4453 01da 66B3     		cbz	r6, .L463
 4454              	.LBB448:
 4455              	.LBB449:
2215:src/keys.c    **** }
 4456              		.loc 1 2215 10 view .LVU1412
 4457 01dc FFF7FEFF 		bl	current_catalogue
 4458              	.LVL371:
2215:src/keys.c    **** }
 4459              		.loc 1 2215 33 view .LVU1413
 4460 01e0 00F0F000 		and	r0, r0, #240
 4461              	.LBE449:
 4462              	.LBE448:
2280:src/keys.c    ****        if (pos >= ctmax)
 4463              		.loc 1 2280 41 view .LVU1414
 4464 01e4 F028     		cmp	r0, #240
 4465 01e6 26D1     		bne	.L463
 4466              	.L462:
2280:src/keys.c    ****        if (pos >= ctmax)
 4467              		.loc 1 2280 65 is_stmt 1 discriminator 3 view .LVU1415
2280:src/keys.c    ****        if (pos >= ctmax)
 4468              		.loc 1 2280 14 discriminator 3 view .LVU1416
 4469 01e8 0135     		adds	r5, r5, #1
 4470              	.LVL372:
 4471              	.LBB452:
 4472              	.LBI448:
2214:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 4473              		.loc 1 2214 12 discriminator 3 view .LVU1417
 4474              	.LBB450:
2215:src/keys.c    **** }
 4475              		.loc 1 2215 2 discriminator 3 view .LVU1418
 4476              	.LBE450:
 4477              	.LBE452:
2280:src/keys.c    ****        if (pos >= ctmax)
 4478              		.loc 1 2280 14 is_stmt 0 discriminator 3 view .LVU1419
 4479 01ea A845     		cmp	r8, r5
 4480              	.LBB453:
 4481              	.LBB451:
2215:src/keys.c    **** }
ARM GAS  /tmp/ccihcwFT.s 			page 150


 4482              		.loc 1 2215 10 discriminator 3 view .LVU1420
 4483 01ec 2846     		mov	r0, r5
 4484              	.LBE451:
 4485              	.LBE453:
2280:src/keys.c    ****        if (pos >= ctmax)
 4486              		.loc 1 2280 14 discriminator 3 view .LVU1421
 4487 01ee F4DC     		bgt	.L545
 4488              	.LVL373:
2367:src/keys.c    ****      --pos;
 4489              		.loc 1 2367 10 is_stmt 1 view .LVU1422
2282:src/keys.c    ****        goto set_pos;
 4490              		.loc 1 2282 7 is_stmt 0 view .LVU1423
 4491 01f0 3546     		mov	r5, r6
 4492              	.LVL374:
2367:src/keys.c    ****      --pos;
 4493              		.loc 1 2367 10 view .LVU1424
 4494 01f2 06B3     		cbz	r6, .L463
 4495              	.LVL375:
2367:src/keys.c    ****      --pos;
 4496              		.loc 1 2367 10 view .LVU1425
 4497 01f4 0025     		movs	r5, #0
 4498              	.LVL376:
2367:src/keys.c    ****      --pos;
 4499              		.loc 1 2367 10 view .LVU1426
 4500 01f6 73E7     		b	.L457
 4501              	.LVL377:
 4502              	.L488:
2340:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 4503              		.loc 1 2340 8 view .LVU1427
 4504 01f8 2B46     		mov	r3, r5
2341:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 4505              		.loc 1 2341 6 is_stmt 1 view .LVU1428
2341:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 4506              		.loc 1 2341 31 is_stmt 0 view .LVU1429
 4507 01fa 3B44     		add	r3, r3, r7
2341:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 4508              		.loc 1 2341 27 view .LVU1430
 4509 01fc 0135     		adds	r5, r5, #1
 4510 01fe EDB2     		uxtb	r5, r5
 4511 0200 3D77     		strb	r5, [r7, #28]
2341:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 4512              		.loc 1 2341 31 view .LVU1431
 4513 0202 83F82040 		strb	r4, [r3, #32]
 4514 0206 30E7     		b	.L456
 4515              	.LVL378:
 4516              	.L538:
2289:src/keys.c    ****        /*
 4517              		.loc 1 2289 6 is_stmt 1 view .LVU1432
2289:src/keys.c    ****        /*
 4518              		.loc 1 2289 9 is_stmt 0 view .LVU1433
 4519 0208 BAF1120F 		cmp	r10, #18
 4520 020c 21D0     		beq	.L546
 4521              	.L465:
2317:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 4522              		.loc 1 2317 11 is_stmt 1 view .LVU1434
2317:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 4523              		.loc 1 2317 14 is_stmt 0 view .LVU1435
ARM GAS  /tmp/ccihcwFT.s 			page 151


 4524 020e 2428     		cmp	r0, #36
 4525 0210 85D0     		beq	.L547
 4526              	.LVL379:
 4527              	.L471:
2332:src/keys.c    ****    reset_shift();
 4528              		.loc 1 2332 4 is_stmt 1 view .LVU1436
 4529              	.LBB454:
 389:src/keys.c    **** {
 4530              		.loc 1 389 12 view .LVU1437
 4531              	.LBB413:
 391:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4532              		.loc 1 391 2 view .LVU1438
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4533              		.loc 1 439 2 view .LVU1439
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4534              		.loc 1 439 5 is_stmt 0 view .LVU1440
 4535 0212 0121     		movs	r1, #1
 4536              	.LVL380:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4537              		.loc 1 439 5 view .LVU1441
 4538 0214 0EE7     		b	.L474
 4539              	.LVL381:
 4540              	.L478:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4541              		.loc 1 439 5 view .LVU1442
 4542 0216 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 4543              	.LVL382:
 4544              	.L480:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4545              		.loc 1 439 5 view .LVU1443
 4546              	.LBE413:
 4547              	.LBE454:
 4548              	.LBB455:
2361:src/keys.c    ****        goto set_pos;
 4549              		.loc 1 2361 6 is_stmt 1 view .LVU1444
2361:src/keys.c    ****        goto set_pos;
 4550              		.loc 1 2361 9 is_stmt 0 view .LVU1445
 4551 021a 002B     		cmp	r3, #0
 4552 021c 3FF450AF 		beq	.L479
 4553              	.LBE455:
2346:src/keys.c    ****      char buf[16];
 4554              		.loc 1 2346 31 is_stmt 1 view .LVU1446
 4555 0220 0135     		adds	r5, r5, #1
 4556              	.LVL383:
2346:src/keys.c    ****      char buf[16];
 4557              		.loc 1 2346 18 view .LVU1447
2346:src/keys.c    ****      char buf[16];
 4558              		.loc 1 2346 4 is_stmt 0 view .LVU1448
 4559 0222 A845     		cmp	r8, r5
 4560 0224 7FF429AF 		bne	.L476
 4561              	.LVL384:
 4562              	.L534:
2346:src/keys.c    ****      char buf[16];
 4563              		.loc 1 2346 4 view .LVU1449
 4564 0228 D9F80040 		ldr	r4, [r9]
 4565 022c CFE7     		b	.L458
 4566              	.LVL385:
ARM GAS  /tmp/ccihcwFT.s 			page 152


 4567              	.L540:
2346:src/keys.c    ****      char buf[16];
 4568              		.loc 1 2346 4 view .LVU1450
 4569 022e 3A44     		add	r2, r2, r7
 4570              	.LVL386:
2346:src/keys.c    ****      char buf[16];
 4571              		.loc 1 2346 4 view .LVU1451
 4572 0230 92F82030 		ldrb	r3, [r2, #32]	@ zero_extendqisi2
 4573              	.LVL387:
2346:src/keys.c    ****      char buf[16];
 4574              		.loc 1 2346 4 view .LVU1452
 4575 0234 F1E7     		b	.L480
 4576              	.LVL388:
 4577              	.L463:
2369:src/keys.c    ****    return STATE_UNFINISHED;
 4578              		.loc 1 2369 17 view .LVU1453
 4579 0236 B4F8DC37 		ldrh	r3, [r4, #2012]
 4580 023a 05F07F05 		and	r5, r5, #127
 4581              	.LVL389:
2369:src/keys.c    ****    return STATE_UNFINISHED;
 4582              		.loc 1 2369 4 is_stmt 1 view .LVU1454
2369:src/keys.c    ****    return STATE_UNFINISHED;
 4583              		.loc 1 2369 17 is_stmt 0 view .LVU1455
 4584 023e 65F34B13 		bfi	r3, r5, #5, #7
 4585 0242 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2370:src/keys.c    ****  }
 4586              		.loc 1 2370 4 is_stmt 1 view .LVU1456
2370:src/keys.c    ****  }
 4587              		.loc 1 2370 11 is_stmt 0 view .LVU1457
 4588 0246 3320     		movs	r0, #51
 4589 0248 51E7     		b	.L548
 4590              	.LVL390:
 4591              	.L539:
2323:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 4592              		.loc 1 2323 6 is_stmt 1 view .LVU1458
2323:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 4593              		.loc 1 2323 9 is_stmt 0 view .LVU1459
 4594 024a 1028     		cmp	r0, #16
 4595 024c 23D0     		beq	.L549
 4596              	.L473:
2332:src/keys.c    ****    reset_shift();
 4597              		.loc 1 2332 4 is_stmt 1 view .LVU1460
 4598              	.LVL391:
 4599              	.LBB456:
 389:src/keys.c    **** {
 4600              		.loc 1 389 12 view .LVU1461
 4601              	.LBB414:
 391:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4602              		.loc 1 391 2 view .LVU1462
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4603              		.loc 1 439 2 view .LVU1463
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4604              		.loc 1 439 5 is_stmt 0 view .LVU1464
 4605 024e 0521     		movs	r1, #5
 4606              	.LVL392:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4607              		.loc 1 439 5 view .LVU1465
ARM GAS  /tmp/ccihcwFT.s 			page 153


 4608 0250 F0E6     		b	.L474
 4609              	.LVL393:
 4610              	.L546:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 4611              		.loc 1 439 5 view .LVU1466
 4612              	.LBE414:
 4613              	.LBE456:
2289:src/keys.c    ****        /*
 4614              		.loc 1 2289 32 discriminator 1 view .LVU1467
 4615 0252 0128     		cmp	r0, #1
 4616 0254 DBD1     		bne	.L465
 4617              	.LBB457:
2298:src/keys.c    **** 	 OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
 4618              		.loc 1 2298 8 is_stmt 1 view .LVU1468
2306:src/keys.c    ****        int i;
 4619              		.loc 1 2306 8 view .LVU1469
2306:src/keys.c    ****        int i;
 4620              		.loc 1 2306 26 is_stmt 0 view .LVU1470
 4621 0256 2846     		mov	r0, r5
 4622              	.LVL394:
2306:src/keys.c    ****        int i;
 4623              		.loc 1 2306 26 view .LVU1471
 4624 0258 FFF7FEFF 		bl	current_catalogue
 4625              	.LVL395:
2306:src/keys.c    ****        int i;
 4626              		.loc 1 2306 26 view .LVU1472
 4627 025c 0446     		mov	r4, r0
 4628              	.LVL396:
2307:src/keys.c    **** 
 4629              		.loc 1 2307 8 is_stmt 1 view .LVU1473
2309:src/keys.c    ****        if (isRARG(op))
 4630              		.loc 1 2309 8 view .LVU1474
 4631 025e 0020     		movs	r0, #0
 4632              	.LVL397:
2309:src/keys.c    ****        if (isRARG(op))
 4633              		.loc 1 2309 8 is_stmt 0 view .LVU1475
 4634 0260 FFF7FEFF 		bl	init_cat
 4635              	.LVL398:
2310:src/keys.c    **** 	 return op ^ 1;
 4636              		.loc 1 2310 8 is_stmt 1 view .LVU1476
2310:src/keys.c    **** 	 return op ^ 1;
 4637              		.loc 1 2310 11 is_stmt 0 view .LVU1477
 4638 0264 14F47043 		ands	r3, r4, #61440
 4639 0268 29D0     		beq	.L466
2310:src/keys.c    **** 	 return op ^ 1;
 4640              		.loc 1 2310 12 discriminator 1 view .LVU1478
 4641 026a B3F5704F 		cmp	r3, #61440
 4642 026e 26D0     		beq	.L466
2311:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 4643              		.loc 1 2311 3 is_stmt 1 view .LVU1479
2311:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 4644              		.loc 1 2311 13 is_stmt 0 view .LVU1480
 4645 0270 84F00100 		eor	r0, r4, #1
 4646 0274 60E7     		b	.L438
 4647              	.LVL399:
 4648              	.L542:
2311:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
ARM GAS  /tmp/ccihcwFT.s 			page 154


 4649              		.loc 1 2311 13 view .LVU1481
 4650              	.LBE457:
2258:src/keys.c    **** 	   goto search;
 4651              		.loc 1 2258 3 is_stmt 1 view .LVU1482
2258:src/keys.c    **** 	   goto search;
 4652              		.loc 1 2258 7 is_stmt 0 view .LVU1483
 4653 0276 3D7F     		ldrb	r5, [r7, #28]	@ zero_extendqisi2
 4654              	.LVL400:
2258:src/keys.c    **** 	   goto search;
 4655              		.loc 1 2258 7 view .LVU1484
 4656 0278 013D     		subs	r5, r5, #1
 4657 027a EDB2     		uxtb	r5, r5
2258:src/keys.c    **** 	   goto search;
 4658              		.loc 1 2258 6 view .LVU1485
 4659 027c 3D77     		strb	r5, [r7, #28]
 4660 027e 002D     		cmp	r5, #0
 4661 0280 7FF4F3AE 		bne	.L456
 4662 0284 D9F80040 		ldr	r4, [r9]
 4663 0288 2AE7     		b	.L457
 4664              	.LVL401:
 4665              	.L544:
2275:src/keys.c    ****        goto set_pos;
 4666              		.loc 1 2275 3 is_stmt 1 view .LVU1486
 4667 028a 013D     		subs	r5, r5, #1
 4668              	.LVL402:
2276:src/keys.c    **** 
 4669              		.loc 1 2276 8 view .LVU1487
 4670 028c 1AE7     		b	.L459
 4671              	.LVL403:
 4672              	.L543:
2276:src/keys.c    **** 
 4673              		.loc 1 2276 8 is_stmt 0 view .LVU1488
 4674 028e FFF7FEFF 		bl	current_catalogue
 4675              	.LVL404:
2276:src/keys.c    **** 
 4676              		.loc 1 2276 8 view .LVU1489
 4677 0292 0446     		mov	r4, r0
 4678 0294 75E7     		b	.L449
 4679              	.LVL405:
 4680              	.L549:
2323:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 4681              		.loc 1 2323 19 discriminator 1 view .LVU1490
 4682 0296 BAF1130F 		cmp	r10, #19
 4683 029a D8D1     		bne	.L473
2324:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
 4684              		.loc 1 2324 8 is_stmt 1 view .LVU1491
 4685 029c 0020     		movs	r0, #0
 4686              	.LVL406:
2324:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
 4687              		.loc 1 2324 8 is_stmt 0 view .LVU1492
 4688 029e FFF7FEFF 		bl	init_cat
 4689              	.LVL407:
2325:src/keys.c    ****      }
 4690              		.loc 1 2325 8 is_stmt 1 view .LVU1493
2325:src/keys.c    ****      }
 4691              		.loc 1 2325 15 is_stmt 0 view .LVU1494
 4692 02a2 40F23D10 		movw	r0, #317
ARM GAS  /tmp/ccihcwFT.s 			page 155


 4693 02a6 47E7     		b	.L438
 4694              	.L450:
 4695              	.LBB458:
2250:src/keys.c    **** 	 }
 4696              		.loc 1 2250 5 is_stmt 1 view .LVU1495
 4697              	.LBB441:
 4698              	.LBB442:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 4699              		.loc 1 625 5 is_stmt 0 view .LVU1496
 4700 02a8 C4F30723 		ubfx	r3, r4, #8, #8
 4701 02ac 012B     		cmp	r3, #1
 4702              	.LBE442:
 4703              	.LBE441:
2250:src/keys.c    **** 	 }
 4704              		.loc 1 2250 12 view .LVU1497
 4705 02ae 2046     		mov	r0, r4
 4706              	.LVL408:
 4707              	.LBB444:
 4708              	.LBI441:
 624:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 4709              		.loc 1 624 12 is_stmt 1 view .LVU1498
 4710              	.LBB443:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 4711              		.loc 1 625 2 view .LVU1499
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 4712              		.loc 1 625 5 is_stmt 0 view .LVU1500
 4713 02b0 7FF442AF 		bne	.L438
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 4714              		.loc 1 625 5 view .LVU1501
 4715 02b4 FFF7FEFF 		bl	check_confirm.part.0
 4716              	.LVL409:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 4717              		.loc 1 625 5 view .LVU1502
 4718 02b8 3EE7     		b	.L438
 4719              	.LVL410:
 4720              	.L451:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 4721              		.loc 1 625 5 view .LVU1503
 4722              	.LBE443:
 4723              	.LBE444:
 4724              	.LBB445:
2243:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4725              		.loc 1 2243 7 is_stmt 1 view .LVU1504
2243:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4726              		.loc 1 2243 14 is_stmt 0 view .LVU1505
 4727 02ba 2046     		mov	r0, r4
 4728 02bc 3CE7     		b	.L438
 4729              	.LVL411:
 4730              	.L466:
2243:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4731              		.loc 1 2243 14 view .LVU1506
 4732 02be 0C48     		ldr	r0, .L552+20
 4733              	.LBE445:
 4734              	.LBE458:
2221:src/keys.c    ****    int pos = State.catpos;
 4735              		.loc 1 2221 93 view .LVU1507
 4736 02c0 40F28522 		movw	r2, #645
ARM GAS  /tmp/ccihcwFT.s 			page 156


 4737 02c4 0146     		mov	r1, r0
 4738 02c6 0023     		movs	r3, #0
 4739 02c8 01E0     		b	.L468
 4740              	.LVL412:
 4741              	.L551:
2221:src/keys.c    ****    int pos = State.catpos;
 4742              		.loc 1 2221 93 view .LVU1508
 4743 02ca 31F8022F 		ldrh	r2, [r1, #2]!
 4744              	.LVL413:
 4745              	.L468:
 4746              	.LBB459:
2313:src/keys.c    **** 	   return conv_mapping[i^1];
 4747              		.loc 1 2313 3 is_stmt 1 view .LVU1509
2312:src/keys.c    **** 	 if (op == conv_mapping[i])
 4748              		.loc 1 2312 72 view .LVU1510
2313:src/keys.c    **** 	   return conv_mapping[i^1];
 4749              		.loc 1 2313 6 is_stmt 0 view .LVU1511
 4750 02ce A242     		cmp	r2, r4
 4751 02d0 1ED0     		beq	.L550
2312:src/keys.c    **** 	 if (op == conv_mapping[i])
 4752              		.loc 1 2312 72 discriminator 2 view .LVU1512
 4753 02d2 0133     		adds	r3, r3, #1
 4754              	.LVL414:
2312:src/keys.c    **** 	 if (op == conv_mapping[i])
 4755              		.loc 1 2312 20 is_stmt 1 discriminator 2 view .LVU1513
2312:src/keys.c    **** 	 if (op == conv_mapping[i])
 4756              		.loc 1 2312 8 is_stmt 0 discriminator 2 view .LVU1514
 4757 02d4 0C2B     		cmp	r3, #12
 4758 02d6 F8D1     		bne	.L551
 4759 02d8 2DE7     		b	.L536
 4760              	.L553:
 4761 02da 00BF     		.align	2
 4762              	.L552:
 4763 02dc 00000000 		.word	StateWhileOn
 4764 02e0 00000000 		.word	.LANCHOR2
 4765 02e4 00000000 		.word	.LANCHOR1
 4766 02e8 00000000 		.word	.LANCHOR9
 4767 02ec 00080800 		.word	526336
 4768 02f0 00000000 		.word	.LANCHOR8
 4769 02f4 00000000 		.word	main_ram
 4770 02f8 1F000000 		.word	StateWhileOn+31
 4771              	.LVL415:
 4772              	.L454:
2312:src/keys.c    **** 	 if (op == conv_mapping[i])
 4773              		.loc 1 2312 8 discriminator 2 view .LVU1515
 4774              	.LBE459:
 4775              	.LBB460:
 4776              	.LBB446:
2247:src/keys.c    **** 	 }
 4777              		.loc 1 2247 7 is_stmt 1 view .LVU1516
 4778              	.LBB438:
 4779              	.LBI438:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 4780              		.loc 1 506 13 view .LVU1517
 4781              	.LBB439:
 507:src/keys.c    **** 		return;
 4782              		.loc 1 507 2 view .LVU1518
ARM GAS  /tmp/ccihcwFT.s 			page 157


 507:src/keys.c    **** 		return;
 4783              		.loc 1 507 6 is_stmt 0 view .LVU1519
 4784 02fc FFF7FEFF 		bl	is_bad_cmdline
 4785              	.LVL416:
 507:src/keys.c    **** 		return;
 4786              		.loc 1 507 5 view .LVU1520
 4787 0300 0028     		cmp	r0, #0
 4788 0302 7FF418AF 		bne	.L536
 4789 0306 2846     		mov	r0, r5
 4790 0308 FFF7FEFF 		bl	init_arg.part.0
 4791              	.LVL417:
 4792              	.LBE439:
 4793              	.LBE438:
 4794              	.LBE446:
 4795              	.LBE460:
2254:src/keys.c    **** 
 4796              		.loc 1 2254 15 view .LVU1521
 4797 030c 3320     		movs	r0, #51
 4798 030e 13E7     		b	.L438
 4799              	.LVL418:
 4800              	.L550:
 4801              	.LBB461:
2314:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 4802              		.loc 1 2314 5 is_stmt 1 view .LVU1522
2314:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 4803              		.loc 1 2314 26 is_stmt 0 view .LVU1523
 4804 0310 83F00103 		eor	r3, r3, #1
 4805              	.LVL419:
2314:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 4806              		.loc 1 2314 24 view .LVU1524
 4807 0314 30F81300 		ldrh	r0, [r0, r3, lsl #1]
 4808 0318 0EE7     		b	.L438
 4809              	.LBE461:
 4810              		.cfi_endproc
 4811              	.LFE43:
 4813              		.section	.text.find_pos,"ax",%progbits
 4814              		.align	1
 4815              		.p2align 2,,3
 4816              		.global	find_pos
 4817              		.syntax unified
 4818              		.thumb
 4819              		.thumb_func
 4820              		.fpu fpv4-sp-d16
 4822              	find_pos:
 4823              	.LVL420:
 4824              	.LFB44:
2374:src/keys.c    **** 	int pos;
 4825              		.loc 1 2374 32 is_stmt 1 view -0
 4826              		.cfi_startproc
 4827              		@ args = 0, pretend = 0, frame = 16
 4828              		@ frame_needed = 0, uses_anonymous_args = 0
2375:src/keys.c    **** 	const int ctmax = current_catalogue_max();
 4829              		.loc 1 2375 2 view .LVU1526
2376:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 4830              		.loc 1 2376 2 view .LVU1527
 4831              	.LBB462:
 4832              	.LBI462:
ARM GAS  /tmp/ccihcwFT.s 			page 158


2076:src/keys.c    **** 	// A quick table of catalogue sizes
 4833              		.loc 1 2076 5 view .LVU1528
 4834              	.LBB463:
2079:src/keys.c    **** 	{
 4835              		.loc 1 2079 2 view .LVU1529
2110:src/keys.c    **** #endif
 4836              		.loc 1 2110 2 view .LVU1530
 4837              	.LBE463:
 4838              	.LBE462:
2374:src/keys.c    **** 	int pos;
 4839              		.loc 1 2374 32 is_stmt 0 view .LVU1531
 4840 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 4841              		.cfi_def_cfa_offset 32
 4842              		.cfi_offset 4, -32
 4843              		.cfi_offset 5, -28
 4844              		.cfi_offset 6, -24
 4845              		.cfi_offset 7, -20
 4846              		.cfi_offset 8, -16
 4847              		.cfi_offset 9, -12
 4848              		.cfi_offset 10, -8
 4849              		.cfi_offset 14, -4
 4850              	.LBB465:
 4851              	.LBB464:
2110:src/keys.c    **** #endif
 4852              		.loc 1 2110 31 view .LVU1532
 4853 0004 1E4B     		ldr	r3, .L571
2110:src/keys.c    **** #endif
 4854              		.loc 1 2110 24 view .LVU1533
 4855 0006 1F4A     		ldr	r2, .L571+4
2110:src/keys.c    **** #endif
 4856              		.loc 1 2110 31 view .LVU1534
 4857 0008 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2110:src/keys.c    **** #endif
 4858              		.loc 1 2110 24 view .LVU1535
 4859 000a 12F803A0 		ldrb	r10, [r2, r3]	@ zero_extendqisi2
 4860              	.LVL421:
2110:src/keys.c    **** #endif
 4861              		.loc 1 2110 24 view .LVU1536
 4862              	.LBE464:
 4863              	.LBE465:
2377:src/keys.c    **** 		char buf[16];
 4864              		.loc 1 2377 2 is_stmt 1 view .LVU1537
2377:src/keys.c    **** 		char buf[16];
 4865              		.loc 1 2377 16 view .LVU1538
2374:src/keys.c    **** 	int pos;
 4866              		.loc 1 2374 32 is_stmt 0 view .LVU1539
 4867 000e 84B0     		sub	sp, sp, #16
 4868              		.cfi_def_cfa_offset 48
2377:src/keys.c    **** 		char buf[16];
 4869              		.loc 1 2377 2 view .LVU1540
 4870 0010 BAF1000F 		cmp	r10, #0
 4871 0014 32D0     		beq	.L561
 4872 0016 8146     		mov	r9, r0
2377:src/keys.c    **** 		char buf[16];
 4873              		.loc 1 2377 11 view .LVU1541
 4874 0018 4FF00008 		mov	r8, #0
 4875 001c C0F10107 		rsb	r7, r0, #1
ARM GAS  /tmp/ccihcwFT.s 			page 159


 4876              	.LVL422:
 4877              	.L560:
 4878              	.LBB466:
2378:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
 4879              		.loc 1 2378 3 is_stmt 1 view .LVU1542
2379:src/keys.c    **** 		int i;
 4880              		.loc 1 2379 3 view .LVU1543
2379:src/keys.c    **** 		int i;
 4881              		.loc 1 2379 21 is_stmt 0 view .LVU1544
 4882 0020 4046     		mov	r0, r8
 4883 0022 FFF7FEFF 		bl	current_catalogue
 4884              	.LVL423:
 4885 0026 6946     		mov	r1, sp
 4886 0028 FFF7FEFF 		bl	catcmd
 4887              	.LVL424:
 4888 002c 0646     		mov	r6, r0
 4889              	.LVL425:
2380:src/keys.c    **** 
 4890              		.loc 1 2380 3 is_stmt 1 view .LVU1545
2382:src/keys.c    **** 			cmd++;
 4891              		.loc 1 2382 3 view .LVU1546
2383:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 4892              		.loc 1 2383 4 view .LVU1547
2382:src/keys.c    **** 			cmd++;
 4893              		.loc 1 2382 7 is_stmt 0 view .LVU1548
 4894 002e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4895              	.LVL426:
2382:src/keys.c    **** 			cmd++;
 4896              		.loc 1 2382 6 view .LVU1549
 4897 0030 1428     		cmp	r0, #20
 4898 0032 04BF     		itt	eq
 4899 0034 7078     		ldrbeq	r0, [r6, #1]	@ zero_extendqisi2
2383:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 4900              		.loc 1 2383 7 view .LVU1550
 4901 0036 0136     		addeq	r6, r6, #1
 4902              	.LVL427:
2384:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4903              		.loc 1 2384 3 is_stmt 1 view .LVU1551
2384:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4904              		.loc 1 2384 13 view .LVU1552
2384:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4905              		.loc 1 2384 3 is_stmt 0 view .LVU1553
 4906 0038 A8B1     		cbz	r0, .L562
 4907 003a 09F1FF33 		add	r3, r9, #-1
 4908 003e 04E0     		b	.L559
 4909              	.LVL428:
 4910              	.L570:
 4911              	.LBB467:
2389:src/keys.c    **** 				break;
 4912              		.loc 1 2389 12 view .LVU1554
 4913 0040 12DB     		blt	.L557
 4914              	.LBE467:
2384:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4915              		.loc 1 2384 16 discriminator 2 view .LVU1555
 4916 0042 16F8010F 		ldrb	r0, [r6, #1]!	@ zero_extendqisi2
 4917              	.LVL429:
2384:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
ARM GAS  /tmp/ccihcwFT.s 			page 160


 4918              		.loc 1 2384 16 discriminator 2 view .LVU1556
 4919 0046 3C44     		add	r4, r4, r7
2384:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4920              		.loc 1 2384 3 discriminator 2 view .LVU1557
 4921 0048 B0B1     		cbz	r0, .L569
 4922              	.LVL430:
 4923              	.L559:
 4924              	.LBB468:
2385:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 4925              		.loc 1 2385 4 is_stmt 1 view .LVU1558
 4926 004a 5C1C     		adds	r4, r3, #1
2385:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 4927              		.loc 1 2385 18 is_stmt 0 view .LVU1559
 4928 004c FFF7FEFF 		bl	remap_chars
 4929              	.LVL431:
 4930 0050 0546     		mov	r5, r0
2386:src/keys.c    **** 			if (c > cl)
 4931              		.loc 1 2386 19 view .LVU1560
 4932 0052 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 4933              	.LVL432:
2386:src/keys.c    **** 			if (c > cl)
 4934              		.loc 1 2386 4 is_stmt 1 view .LVU1561
2386:src/keys.c    **** 			if (c > cl)
 4935              		.loc 1 2386 19 is_stmt 0 view .LVU1562
 4936 0054 FFF7FEFF 		bl	remap_chars
 4937              	.LVL433:
2389:src/keys.c    **** 				break;
 4938              		.loc 1 2389 9 is_stmt 1 view .LVU1563
 4939              	.LBE468:
2384:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4940              		.loc 1 2384 29 view .LVU1564
2384:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4941              		.loc 1 2384 13 view .LVU1565
 4942              	.LBB469:
2387:src/keys.c    **** 				return pos;
 4943              		.loc 1 2387 4 view .LVU1566
2387:src/keys.c    **** 				return pos;
 4944              		.loc 1 2387 7 is_stmt 0 view .LVU1567
 4945 0058 8542     		cmp	r5, r0
 4946 005a 2346     		mov	r3, r4
 4947 005c F0DD     		ble	.L570
 4948              	.LVL434:
 4949              	.L554:
2387:src/keys.c    **** 				return pos;
 4950              		.loc 1 2387 7 view .LVU1568
 4951              	.LBE469:
 4952              	.LBE466:
2396:src/keys.c    **** 
 4953              		.loc 1 2396 1 view .LVU1569
 4954 005e 4046     		mov	r0, r8
 4955 0060 04B0     		add	sp, sp, #16
 4956              		.cfi_remember_state
 4957              		.cfi_def_cfa_offset 32
 4958              		@ sp needed
 4959 0062 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4960              	.LVL435:
 4961              	.L562:
ARM GAS  /tmp/ccihcwFT.s 			page 161


 4962              		.cfi_restore_state
 4963              	.LBB470:
2384:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4964              		.loc 1 2384 3 view .LVU1570
 4965 0066 4C46     		mov	r4, r9
 4966              	.LVL436:
 4967              	.L557:
2392:src/keys.c    **** 			return pos;
 4968              		.loc 1 2392 3 is_stmt 1 view .LVU1571
2392:src/keys.c    **** 			return pos;
 4969              		.loc 1 2392 6 is_stmt 0 view .LVU1572
 4970 0068 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4971 006a 002B     		cmp	r3, #0
 4972 006c F7D0     		beq	.L554
 4973              	.LBE470:
2377:src/keys.c    **** 		char buf[16];
 4974              		.loc 1 2377 29 is_stmt 1 view .LVU1573
 4975 006e 08F10108 		add	r8, r8, #1
 4976              	.LVL437:
2377:src/keys.c    **** 		char buf[16];
 4977              		.loc 1 2377 16 view .LVU1574
2377:src/keys.c    **** 		char buf[16];
 4978              		.loc 1 2377 2 is_stmt 0 view .LVU1575
 4979 0072 D045     		cmp	r8, r10
 4980 0074 D4D1     		bne	.L560
 4981 0076 F2E7     		b	.L554
 4982              	.LVL438:
 4983              	.L569:
2377:src/keys.c    **** 		char buf[16];
 4984              		.loc 1 2377 2 view .LVU1576
 4985 0078 4C44     		add	r4, r4, r9
 4986 007a F5E7     		b	.L557
 4987              	.LVL439:
 4988              	.L561:
2377:src/keys.c    **** 		char buf[16];
 4989              		.loc 1 2377 11 view .LVU1577
 4990 007c D046     		mov	r8, r10
 4991 007e EEE7     		b	.L554
 4992              	.L572:
 4993              		.align	2
 4994              	.L571:
 4995 0080 00000000 		.word	StateWhileOn
 4996 0084 00000000 		.word	.LANCHOR2
 4997              		.cfi_endproc
 4998              	.LFE44:
 5000              		.section	.text.get_alpha_state,"ax",%progbits
 5001              		.align	1
 5002              		.p2align 2,,3
 5003              		.global	get_alpha_state
 5004              		.syntax unified
 5005              		.thumb
 5006              		.thumb_func
 5007              		.fpu fpv4-sp-d16
 5009              	get_alpha_state:
 5010              	.LFB56:
2721:src/keys.c    **** 
2722:src/keys.c    **** 
ARM GAS  /tmp/ccihcwFT.s 			page 162


2723:src/keys.c    **** static int process_registerlist(const keycode c) {
2724:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
2725:src/keys.c    **** 	enum shifts shift = reset_shift();
2726:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
2727:src/keys.c    **** 	const int g_max = global_regs();
2728:src/keys.c    **** 
2729:src/keys.c    **** 	if (n == LOCAL_REG_BASE) {	// '.'
2730:src/keys.c    **** 		if (local_regs())
2731:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
2732:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
2733:src/keys.c    **** 		goto reset_window;
2734:src/keys.c    **** 	}
2735:src/keys.c    **** 	else if (n <= 9) {
2736:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
2737:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
2738:src/keys.c    **** 			dv = n;
2739:src/keys.c    **** 		State2.digval = dv;
2740:src/keys.c    **** 		goto reset_window;
2741:src/keys.c    **** 	}
2742:src/keys.c    **** 	else if ((shift == SHIFT_F || shift == SHIFT_G) && c == K21) {  // <( )>
2743:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
2744:src/keys.c    **** 		set_smode(SDISP_SHOW);
2745:src/keys.c    **** 	}
2746:src/keys.c    **** 	else if (n != NO_REG) {
2747:src/keys.c    **** 		State2.digval = n;
2748:src/keys.c    **** 		goto reset_window;
2749:src/keys.c    **** 	}
2750:src/keys.c    **** 
2751:src/keys.c    **** 	switch (c) {
2752:src/keys.c    **** 	case K_DOWN:
2753:src/keys.c    **** 		if (State2.digval > 0) {
2754:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
2755:src/keys.c    **** 				State2.digval = global_regs();
2756:src/keys.c    **** 			--State2.digval;
2757:src/keys.c    **** 		}
2758:src/keys.c    **** 		else
2759:src/keys.c    **** 			State2.digval = max - 1;
2760:src/keys.c    **** 		goto reset_window;
2761:src/keys.c    **** 
2762:src/keys.c    **** 	case K_UP:
2763:src/keys.c    **** 		if (State2.digval < max - 1) {
2764:src/keys.c    **** 			State2.digval++;
2765:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
2766:src/keys.c    **** 				State2.digval = regX_idx;
2767:src/keys.c    **** 		}
2768:src/keys.c    **** 		else	
2769:src/keys.c    **** 			State2.digval = 0;
2770:src/keys.c    **** 		goto reset_window;
2771:src/keys.c    **** 
2772:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
2773:src/keys.c    **** 	case K04:
2774:src/keys.c    **** 		State2.digval2 = ! State2.digval2 && ! State2.local;
2775:src/keys.c    **** 		goto reset_window;
2776:src/keys.c    **** #endif
2777:src/keys.c    **** 
2778:src/keys.c    **** 	case K24:			
2779:src/keys.c    **** 	//case K60:
ARM GAS  /tmp/ccihcwFT.s 			page 163


2780:src/keys.c    **** 		if (State2.disp_temp)
2781:src/keys.c    **** 			return STATE_UNFINISHED;
2782:src/keys.c    **** 		break;		// Exit doing nothing
2783:src/keys.c    **** 
2784:src/keys.c    **** 	case K20:		// ENTER
2785:src/keys.c    **** 		if (shift == SHIFT_F) {
2786:src/keys.c    **** 			State2.disp_as_alpha = 1;
2787:src/keys.c    **** 			goto reset_window;
2788:src/keys.c    **** 		}
2789:src/keys.c    **** 	case K11:		// RCL
2790:src/keys.c    **** 		if ( shift == SHIFT_N ) {
2791:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
2792:src/keys.c    **** 			n = RARG( State2.digval2 ? RARG_FLRCL : RARG_RCL, State2.digval );
2793:src/keys.c    **** #else
2794:src/keys.c    **** 			n = RARG( RARG_RCL, State2.digval );
2795:src/keys.c    **** #endif
2796:src/keys.c    **** 			State2.registerlist = 0;
2797:src/keys.c    **** 			State2.digval = 0;
2798:src/keys.c    **** 			State2.digval2 = 0;
2799:src/keys.c    **** 			return n;
2800:src/keys.c    **** 		}
2801:src/keys.c    **** 	default:
2802:src/keys.c    **** 		return STATE_UNFINISHED;
2803:src/keys.c    **** 	}
2804:src/keys.c    **** 	State2.registerlist = 0;
2805:src/keys.c    **** 	State2.digval = 0;
2806:src/keys.c    **** 	State2.digval2 = 0;
2807:src/keys.c    **** reset_window:
2808:src/keys.c    **** 	State2.window = 0;
2809:src/keys.c    **** 	return STATE_UNFINISHED;
2810:src/keys.c    **** }
2811:src/keys.c    **** 
2812:src/keys.c    **** 
2813:src/keys.c    **** static int process(const int c) {
2814:src/keys.c    ****   const enum shifts shift = cur_shift();
2815:src/keys.c    ****   enum catalogues cat;
2816:src/keys.c    **** 
2817:src/keys.c    ****   if (Running || Pause) {
2818:src/keys.c    ****     /*
2819:src/keys.c    ****      *  Abort a running program with R/S or EXIT
2820:src/keys.c    ****      */
2821:src/keys.c    ****     if (c == K60 || c == K63) {
2822:src/keys.c    ****       if (Pause && isXROM(state_pc()))
2823:src/keys.c    **** 	set_pc(0);
2824:src/keys.c    ****       Pause = 0;
2825:src/keys.c    ****       xeq_xrom();
2826:src/keys.c    ****       set_running_off();
2827:src/keys.c    ****       DispMsg = "Stopped";
2828:src/keys.c    ****       State2.disp_freeze = 0;
2829:src/keys.c    ****       return STATE_UNFINISHED;
2830:src/keys.c    ****     }
2831:src/keys.c    ****     if ( c != K_HEARTBEAT ) {
2832:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
2833:src/keys.c    ****       Pause = 0;			// leave PSE statement
2834:src/keys.c    ****       GoFast = 1;
2835:src/keys.c    ****     }
2836:src/keys.c    ****     // continue execution if really running, else ignore (PSE)
ARM GAS  /tmp/ccihcwFT.s 			page 164


2837:src/keys.c    ****     return STATE_RUNNING;
2838:src/keys.c    ****   }
2839:src/keys.c    **** 
2840:src/keys.c    ****   /* Check for ON in the unshifted state -- this is a reset sequence
2841:src/keys.c    ****    * common across all modes.  Shifted modes need to check this themselves
2842:src/keys.c    ****    * if required.
2843:src/keys.c    ****    */
2844:src/keys.c    **** #ifdef DM42
2845:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue && ! State2.arrow && ! State2.alphas)
2846:src/keys.c    **** #else
2847:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue)
2848:src/keys.c    **** #endif
2849:src/keys.c    ****     {
2850:src/keys.c    ****       soft_init_state();
2851:src/keys.c    ****       return STATE_UNFINISHED;
2852:src/keys.c    ****     }
2853:src/keys.c    **** 
2854:src/keys.c    **** #ifndef CONSOLE
2855:src/keys.c    **** 	if (c == K63 && JustStopped) {
2856:src/keys.c    **** 		// Avoid an accidental restart with R/S
2857:src/keys.c    **** 		JustStopped = 0;
2858:src/keys.c    **** 		return STATE_IGNORE;
2859:src/keys.c    **** 	}
2860:src/keys.c    **** #endif
2861:src/keys.c    **** 	/*  Handle the keyboard timeout for catalogue navigation
2862:src/keys.c    **** 	 *  Must be done early in the process to capture the shifts correctly
2863:src/keys.c    **** 	 */
2864:src/keys.c    **** 	if (State2.catalogue && Keyticks > 30)
2865:src/keys.c    **** 		CmdLineLength = 0;
2866:src/keys.c    **** 	/*
2867:src/keys.c    **** 	 *  Process the various cases
2868:src/keys.c    **** 	 *  The handlers in this block here do not handle shifts at all or do it themselves
2869:src/keys.c    **** 	 */
2870:src/keys.c    **** 	if (State2.confirm)
2871:src/keys.c    **** 		return process_confirm((const keycode)c);
2872:src/keys.c    **** 
2873:src/keys.c    **** 	if (State2.rarg)
2874:src/keys.c    **** 		return process_arg((const keycode)c);
2875:src/keys.c    **** 
2876:src/keys.c    **** 	if (State2.gtodot)
2877:src/keys.c    **** 		return process_gtodot((const keycode)c);
2878:src/keys.c    **** 
2879:src/keys.c    **** 	if (State2.hyp)
2880:src/keys.c    **** 		return process_hyp((const keycode)c);
2881:src/keys.c    **** 
2882:src/keys.c    **** 	if (State2.test != TST_NONE)
2883:src/keys.c    **** 		return process_test((const keycode)c);
2884:src/keys.c    **** 
2885:src/keys.c    **** 	if (State2.status)
2886:src/keys.c    **** 		return process_status((const keycode)c);
2887:src/keys.c    **** 
2888:src/keys.c    **** 	/*
2889:src/keys.c    **** 	 *  Process shift keys directly
2890:src/keys.c    **** 	 */
2891:src/keys.c    **** 	if (c == K_F) {
2892:src/keys.c    **** 		toggle_shift(SHIFT_F);
2893:src/keys.c    **** 		return STATE_UNFINISHED;
ARM GAS  /tmp/ccihcwFT.s 			page 165


2894:src/keys.c    **** 	}
2895:src/keys.c    **** 	if (c == K_G) {
2896:src/keys.c    **** 		toggle_shift(SHIFT_G);
2897:src/keys.c    **** 		return STATE_UNFINISHED;
2898:src/keys.c    **** 	}
2899:src/keys.c    **** 	if (c == K_H) {
2900:src/keys.c    **** 		toggle_shift(SHIFT_H);
2901:src/keys.c    **** 		State2.arrow = 0;
2902:src/keys.c    **** 		return STATE_UNFINISHED;
2903:src/keys.c    **** 	}
2904:src/keys.c    **** 	/*
2905:src/keys.c    **** 	 *  The handlers in this block need to call reset_shift somewhere
2906:src/keys.c    **** 	 */
2907:src/keys.c    **** 	// print_debug (2, c);
2908:src/keys.c    **** 	if (State2.arrow)
2909:src/keys.c    **** 		return process_arrow((const keycode)c);
2910:src/keys.c    **** 
2911:src/keys.c    **** 	/*
2912:src/keys.c    **** 	 * Here the keys are mapped to catalogues
2913:src/keys.c    **** 	 * The position of this code decides where catalogue switching
2914:src/keys.c    **** 	 * works and were not
2915:src/keys.c    **** 	 */
2916:src/keys.c    **** 	cat = keycode_to_cat((keycode)c, shift);
2917:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
2918:src/keys.c    **** 		if (is_bad_cmdline())
2919:src/keys.c    **** 			return STATE_UNFINISHED;
2920:src/keys.c    **** 		init_cat( CATALOGUE_NONE );
2921:src/keys.c    **** 		init_cat( cat );
2922:src/keys.c    **** 		return STATE_UNFINISHED;
2923:src/keys.c    **** 	}
2924:src/keys.c    **** 
2925:src/keys.c    **** 	/*
2926:src/keys.c    **** 	 *  More handlers...
2927:src/keys.c    **** 	 */
2928:src/keys.c    **** 	if (State2.multi)
2929:src/keys.c    **** 		return process_multi((const keycode)c);
2930:src/keys.c    **** 
2931:src/keys.c    **** 	if (State2.labellist)
2932:src/keys.c    **** 		return process_labellist((const keycode)c);
2933:src/keys.c    **** 
2934:src/keys.c    **** 	if (State2.registerlist)
2935:src/keys.c    **** 		return process_registerlist((const keycode)c);
2936:src/keys.c    **** 
2937:src/keys.c    **** 	if (State2.catalogue)
2938:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
2939:src/keys.c    **** 
2940:src/keys.c    **** 	if (State2.alphas) {
2941:src/keys.c    **** #ifndef INFRARED
2942:src/keys.c    **** 		return process_alpha((const keycode)c);
2943:src/keys.c    **** #else
2944:src/keys.c    **** 		int i = process_alpha((const keycode)c);
2945:src/keys.c    **** 		if (! State2.alphas && get_user_flag(T_FLAG)) {
2946:src/keys.c    **** 			print_tab(0);
2947:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
2948:src/keys.c    **** 		}
2949:src/keys.c    **** 		return i;
2950:src/keys.c    **** #endif
ARM GAS  /tmp/ccihcwFT.s 			page 166


2951:src/keys.c    **** 	}
2952:src/keys.c    **** 
2953:src/keys.c    **** 	if (State2.cmplx) {
2954:src/keys.c    **** 		return process_cmplx((const keycode)c);
2955:src/keys.c    **** 	} else {
2956:src/keys.c    **** 		if (shift == SHIFT_F || shift == SHIFT_G)
2957:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
2958:src/keys.c    **** 		if (shift == SHIFT_H)
2959:src/keys.c    **** 			return process_h_shifted((const keycode)c);
2960:src/keys.c    **** 		// print_debug (3, c);
2961:src/keys.c    **** 		return process_normal((const keycode)c);
2962:src/keys.c    **** 	}
2963:src/keys.c    **** }
2964:src/keys.c    **** 
2965:src/keys.c    ****  unsigned int get_alpha_state ( void ) {
 5011              		.loc 1 2965 40 is_stmt 1 view -0
 5012              		.cfi_startproc
 5013              		@ args = 0, pretend = 0, frame = 0
 5014              		@ frame_needed = 0, uses_anonymous_args = 0
 5015              		@ link register save eliminated.
2966:src/keys.c    ****    return (State2.alphas || State2.confirm || State2.status || State2.labellist
 5016              		.loc 1 2966 4 view .LVU1579
 5017              		.loc 1 2966 53 is_stmt 0 view .LVU1580
 5018 0000 074B     		ldr	r3, .L578
 5019              		.loc 1 2966 44 view .LVU1581
 5020 0002 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 5021 0004 1AB9     		cbnz	r2, .L576
2967:src/keys.c    **** 	   || State2.rarg || State2.registerlist || State2.multi 
2968:src/keys.c    **** 	   || State2.gtodot || State2.catalogue || (State2.test != TST_NONE));
 5022              		.loc 1 2968 5 discriminator 2 view .LVU1582
 5023 0006 5969     		ldr	r1, [r3, #20]
 5024 0008 064A     		ldr	r2, .L578+4
 5025 000a 0A40     		ands	r2, r2, r1
 5026 000c 0AB1     		cbz	r2, .L577
 5027              	.L576:
 5028 000e 0120     		movs	r0, #1
2969:src/keys.c    ****  }
 5029              		.loc 1 2969 2 view .LVU1583
 5030 0010 7047     		bx	lr
 5031              	.L577:
2968:src/keys.c    ****  }
 5032              		.loc 1 2968 42 discriminator 3 view .LVU1584
 5033 0012 D889     		ldrh	r0, [r3, #14]
 5034 0014 B0F5E060 		subs	r0, r0, #1792
 5035 0018 18BF     		it	ne
 5036 001a 0120     		movne	r0, #1
 5037 001c 7047     		bx	lr
 5038              	.L579:
 5039 001e 00BF     		.align	2
 5040              	.L578:
 5041 0020 00000000 		.word	StateWhileOn
 5042 0024 0709280C 		.word	203950343
 5043              		.cfi_endproc
 5044              	.LFE56:
 5046              		.section	.rodata.process_keycode.str1.4,"aMS",%progbits,1
 5047              		.align	2
 5048              	.LC0:
ARM GAS  /tmp/ccihcwFT.s 			page 167


 5049 0000 52554E00 		.ascii	"RUN\000"
 5050              		.align	2
 5051              	.LC1:
 5052 0004 4E554C4C 		.ascii	"NULL\000"
 5052      00
 5053 0009 000000   		.align	2
 5054              	.LC2:
 5055 000c 53746F70 		.ascii	"Stopped\000"
 5055      70656400 
 5056              		.section	.text.process_keycode,"ax",%progbits
 5057              		.align	1
 5058              		.p2align 2,,3
 5059              		.global	process_keycode
 5060              		.syntax unified
 5061              		.thumb
 5062              		.thumb_func
 5063              		.fpu fpv4-sp-d16
 5065              	process_keycode:
 5066              	.LVL440:
 5067              	.LFB58:
2970:src/keys.c    **** 
2971:src/keys.c    ****  void process_keycode_with_shift ( struct _ndmap remapped ) {
2972:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
2973:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
2974:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
2975:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
2976:src/keys.c    ****        // Was error just wait for confirmation
2977:src/keys.c    ****        wait_for_key_press();
2978:src/keys.c    ****      }
2979:src/keys.c    ****      start_buzzer_freq(8800); sys_delay(10); stop_buzzer();// End click
2980:src/keys.c    ****      return;
2981:src/keys.c    ****    }
2982:src/keys.c    ****    if (remapped.key_34s == K_OP) {
2983:src/keys.c    ****      nd_opcode = remapped.shift;
2984:src/keys.c    ****      set_shift(SHIFT_N);
2985:src/keys.c    ****    }
2986:src/keys.c    ****    else if (remapped.shift >= 0) set_shift ( remapped.shift );
2987:src/keys.c    ****    process_keycode ( remapped.key_34s );
2988:src/keys.c    ****  }
2989:src/keys.c    ****  
2990:src/keys.c    **** /*
2991:src/keys.c    ****  *  Fed with key codes by the event loop
2992:src/keys.c    ****  */
2993:src/keys.c    **** void process_keycode(int c)
2994:src/keys.c    **** {
 5068              		.loc 1 2994 1 is_stmt 1 view -0
 5069              		.cfi_startproc
 5070              		@ args = 0, pretend = 0, frame = 8
 5071              		@ frame_needed = 0, uses_anonymous_args = 0
2995:src/keys.c    ****   static int was_paused;
 5072              		.loc 1 2995 3 view .LVU1586
2996:src/keys.c    ****   //volatile int cmdline_empty; // volatile because it's uninitialized in some cases
2997:src/keys.c    ****   int cmdline_empty = 0;        // Visual studio chokes in debug mode over the above
 5073              		.loc 1 2997 3 view .LVU1587
2998:src/keys.c    ****   if (was_paused && Pause == 0)
 5074              		.loc 1 2998 3 view .LVU1588
2994:src/keys.c    ****   static int was_paused;
ARM GAS  /tmp/ccihcwFT.s 			page 168


 5075              		.loc 1 2994 1 is_stmt 0 view .LVU1589
 5076 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5077              		.cfi_def_cfa_offset 36
 5078              		.cfi_offset 4, -36
 5079              		.cfi_offset 5, -32
 5080              		.cfi_offset 6, -28
 5081              		.cfi_offset 7, -24
 5082              		.cfi_offset 8, -20
 5083              		.cfi_offset 9, -16
 5084              		.cfi_offset 10, -12
 5085              		.cfi_offset 11, -8
 5086              		.cfi_offset 14, -4
 5087              		.loc 1 2998 7 view .LVU1590
 5088 0004 964D     		ldr	r5, .L1248
 5089              		.loc 1 2998 27 view .LVU1591
 5090 0006 974F     		ldr	r7, .L1248+4
 5091              		.loc 1 2998 6 view .LVU1592
 5092 0008 2B68     		ldr	r3, [r5]
2994:src/keys.c    ****   static int was_paused;
 5093              		.loc 1 2994 1 view .LVU1593
 5094 000a 83B0     		sub	sp, sp, #12
 5095              		.cfi_def_cfa_offset 48
2994:src/keys.c    ****   static int was_paused;
 5096              		.loc 1 2994 1 view .LVU1594
 5097 000c 0446     		mov	r4, r0
 5098              		.loc 1 2998 6 view .LVU1595
 5099 000e 1BB1     		cbz	r3, .L581
 5100              		.loc 1 2998 27 discriminator 1 view .LVU1596
 5101 0010 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 5102              		.loc 1 2998 18 discriminator 1 view .LVU1597
 5103 0012 002B     		cmp	r3, #0
 5104 0014 00F00B82 		beq	.L1148
 5105              	.LVL441:
 5106              	.L581:
2999:src/keys.c    ****     {
3000:src/keys.c    ****     /*
3001:src/keys.c    ****      *  Continue XROM execution after a pause
3002:src/keys.c    ****      */
3003:src/keys.c    ****       xeq_xrom();
3004:src/keys.c    ****     }
3005:src/keys.c    ****   was_paused = Pause;
 5107              		.loc 1 3005 3 is_stmt 1 view .LVU1598
 5108              		.loc 1 3005 14 is_stmt 0 view .LVU1599
 5109 0018 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 5110 001a 2B60     		str	r3, [r5]
3006:src/keys.c    ****   if (c == K_NOP)
 5111              		.loc 1 3006 3 is_stmt 1 view .LVU1600
 5112              		.loc 1 3006 6 is_stmt 0 view .LVU1601
 5113 001c 2E2C     		cmp	r4, #46
 5114 001e 00F0C781 		beq	.L1149
3007:src/keys.c    ****     {
3008:src/keys.c    ****       OpCode = 0;
3009:src/keys.c    ****     }
3010:src/keys.c    ****   else if (c == K_HEARTBEAT)
 5115              		.loc 1 3010 8 is_stmt 1 view .LVU1602
 5116              		.loc 1 3010 11 is_stmt 0 view .LVU1603
 5117 0022 622C     		cmp	r4, #98
ARM GAS  /tmp/ccihcwFT.s 			page 169


 5118 0024 71D0     		beq	.L1150
3011:src/keys.c    ****     {
3012:src/keys.c    ****     /*
3013:src/keys.c    ****      *  Heartbeat processing goes here.
3014:src/keys.c    ****      *  This is totally thread safe!
3015:src/keys.c    ****      */
3016:src/keys.c    ****     if (Keyticks >= 2) {
3017:src/keys.c    ****       /*
3018:src/keys.c    ****        *  Some time has passed after last key press
3019:src/keys.c    ****        */
3020:src/keys.c    ****       if (OpCode != 0) {
3021:src/keys.c    **** 	/*
3022:src/keys.c    **** 	 *  Handle command display and NULL here
3023:src/keys.c    **** 	 */
3024:src/keys.c    **** 	if (OpCodeDisplayPending) {
3025:src/keys.c    **** 	  /*
3026:src/keys.c    **** 	   *  Show command to the user
3027:src/keys.c    **** 	   */
3028:src/keys.c    **** 	  OpCodeDisplayPending = 0;
3029:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
3030:src/keys.c    **** 	    DispMsg = "RUN";
3031:src/keys.c    **** 	  }
3032:src/keys.c    **** 	  else {
3033:src/keys.c    **** 	    scopy_char(TraceBuffer, prt(OpCode, TraceBuffer), '\0');
3034:src/keys.c    **** 	    DispMsg = TraceBuffer;
3035:src/keys.c    **** 	  }
3036:src/keys.c    **** 	  display();
3037:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
3038:src/keys.c    **** 	}
3039:src/keys.c    ****     else if (Keyticks > 12) {
3040:src/keys.c    **** 	  /*
3041:src/keys.c    **** 	   *  Key is too long held down
3042:src/keys.c    **** 	   */
3043:src/keys.c    **** 	  OpCode = 0;
3044:src/keys.c    **** 	  message("NULL", CNULL);
3045:src/keys.c    **** 	  // Force display update on key-up
3046:src/keys.c    **** 	  State2.disp_temp = 0;
3047:src/keys.c    **** 	}
3048:src/keys.c    ****       }
3049:src/keys.c    ****       if (Keyticks > 12 && shift_down() != SHIFT_N) {
3050:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
3051:src/keys.c    **** 	State2.shifts = SHIFT_N;
3052:src/keys.c    ****       }
3053:src/keys.c    ****     }
3054:src/keys.c    **** 
3055:src/keys.c    ****     /*
3056:src/keys.c    ****      *  Serve the watchdog
3057:src/keys.c    ****      */
3058:src/keys.c    ****     watchdog();
3059:src/keys.c    **** 
3060:src/keys.c    **** #ifndef CONSOLE
3061:src/keys.c    ****     /*
3062:src/keys.c    ****      *  If buffer is empty re-allow R/S to start a program
3063:src/keys.c    ****      */
3064:src/keys.c    ****     if (JustStopped && !is_key_pressed()) {
3065:src/keys.c    ****       JustStopped = 0;
3066:src/keys.c    ****     }
ARM GAS  /tmp/ccihcwFT.s 			page 170


3067:src/keys.c    **** #endif
3068:src/keys.c    **** 
3069:src/keys.c    ****     /*
3070:src/keys.c    ****      *  Do nothing if not running a program
3071:src/keys.c    ****      */
3072:src/keys.c    ****     if (!Running && ! Pause)
3073:src/keys.c    ****       return;
3074:src/keys.c    ****   }
3075:src/keys.c    ****   else {
3076:src/keys.c    ****     /*
3077:src/keys.c    ****      *  Not the heartbeat - prepare for execution of any commands
3078:src/keys.c    ****      */
3079:src/keys.c    ****     xeq_init_contexts();
 5119              		.loc 1 3079 5 is_stmt 1 view .LVU1604
3080:src/keys.c    ****     State2.wascomplex = 0;
 5120              		.loc 1 3080 23 is_stmt 0 view .LVU1605
 5121 0026 DFF85882 		ldr	r8, .L1248+32
3079:src/keys.c    ****     State2.wascomplex = 0;
 5122              		.loc 1 3079 5 view .LVU1606
 5123 002a FFF7FEFF 		bl	xeq_init_contexts
 5124              	.LVL442:
 5125              		.loc 1 3080 5 is_stmt 1 view .LVU1607
 5126              		.loc 1 3080 23 is_stmt 0 view .LVU1608
 5127 002e 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
3081:src/keys.c    **** 
3082:src/keys.c    ****     if (is_dot(RPN)) {
 5128              		.loc 1 3082 9 view .LVU1609
 5129 0032 8D20     		movs	r0, #141
3080:src/keys.c    **** 
 5130              		.loc 1 3080 23 view .LVU1610
 5131 0034 6FF38713 		bfc	r3, #6, #2
 5132 0038 88F81430 		strb	r3, [r8, #20]
 5133              		.loc 1 3082 5 is_stmt 1 view .LVU1611
 5134              		.loc 1 3082 9 is_stmt 0 view .LVU1612
 5135 003c FFF7FEFF 		bl	is_dot
 5136              	.LVL443:
 5137              		.loc 1 3082 8 view .LVU1613
 5138 0040 0028     		cmp	r0, #0
 5139 0042 40F07F82 		bne	.L1151
 5140              	.L599:
3083:src/keys.c    ****       /*
3084:src/keys.c    ****        * Turn off the RPN annunciator as a visual feedback
3085:src/keys.c    ****        */
3086:src/keys.c    ****       clr_dot(RPN);
3087:src/keys.c    ****       finish_RPN(); // RPN
3088:src/keys.c    ****     }
3089:src/keys.c    **** 
3090:src/keys.c    **** #ifndef CONSOLE
3091:src/keys.c    ****     /*
3092:src/keys.c    ****      *  Reallow display refresh which is temporarily disabled after a stop
3093:src/keys.c    ****      *  All keys execpt R/S trigger this. The latter will only be reenabled
3094:src/keys.c    ****      *  from the heartbeat after the keybord buffer has become empty to avoid
3095:src/keys.c    ****      *  an accidental restart of the program.
3096:src/keys.c    ****      */
3097:src/keys.c    ****     if (c != K63)
 5141              		.loc 1 3097 5 is_stmt 1 view .LVU1614
 5142              		.loc 1 3097 8 is_stmt 0 view .LVU1615
ARM GAS  /tmp/ccihcwFT.s 			page 171


 5143 0046 272C     		cmp	r4, #39
 5144 0048 00F07982 		beq	.L1152
3098:src/keys.c    ****       JustStopped = 0;
 5145              		.loc 1 3098 7 is_stmt 1 view .LVU1616
 5146              		.loc 1 3098 19 is_stmt 0 view .LVU1617
 5147 004c 864B     		ldr	r3, .L1248+8
 5148 004e 0025     		movs	r5, #0
3099:src/keys.c    **** #endif
3100:src/keys.c    ****   }
3101:src/keys.c    **** 
3102:src/keys.c    ****   /*
3103:src/keys.c    ****    *  Handle key release
3104:src/keys.c    ****    */
3105:src/keys.c    ****   if (c == K_RELEASE)
 5149              		.loc 1 3105 6 view .LVU1618
 5150 0050 632C     		cmp	r4, #99
3098:src/keys.c    ****       JustStopped = 0;
 5151              		.loc 1 3098 19 view .LVU1619
 5152 0052 1D60     		str	r5, [r3]
 5153              		.loc 1 3105 3 is_stmt 1 view .LVU1620
 5154              		.loc 1 3105 6 is_stmt 0 view .LVU1621
 5155 0054 40F0BB81 		bne	.L601
3106:src/keys.c    ****     {
3107:src/keys.c    ****     if (OpCode != 0) {
 5156              		.loc 1 3107 5 is_stmt 1 view .LVU1622
 5157              		.loc 1 3107 16 is_stmt 0 view .LVU1623
 5158 0058 844B     		ldr	r3, .L1248+12
 5159 005a 1C68     		ldr	r4, [r3]
 5160              	.LVL444:
 5161              		.loc 1 3107 8 view .LVU1624
 5162 005c 002C     		cmp	r4, #0
 5163 005e 00F08482 		beq	.L602
3108:src/keys.c    ****       /*
3109:src/keys.c    ****        * Execute the key on release
3110:src/keys.c    ****        */
3111:src/keys.c    ****       GoFast = 1;
 5164              		.loc 1 3111 7 is_stmt 1 view .LVU1625
 5165              		.loc 1 3111 14 is_stmt 0 view .LVU1626
 5166 0062 834A     		ldr	r2, .L1248+16
3112:src/keys.c    ****       c = OpCode;
3113:src/keys.c    ****       OpCode = 0;
 5167              		.loc 1 3113 14 view .LVU1627
 5168 0064 1D60     		str	r5, [r3]
3111:src/keys.c    ****       c = OpCode;
 5169              		.loc 1 3111 14 view .LVU1628
 5170 0066 0120     		movs	r0, #1
3114:src/keys.c    **** 
3115:src/keys.c    ****       if (c == STATE_SST)
 5171              		.loc 1 3115 10 view .LVU1629
 5172 0068 2E2C     		cmp	r4, #46
3112:src/keys.c    ****       OpCode = 0;
 5173              		.loc 1 3112 9 view .LVU1630
 5174 006a A346     		mov	fp, r4
3111:src/keys.c    ****       c = OpCode;
 5175              		.loc 1 3111 14 view .LVU1631
 5176 006c 1060     		str	r0, [r2]
3112:src/keys.c    ****       OpCode = 0;
ARM GAS  /tmp/ccihcwFT.s 			page 172


 5177              		.loc 1 3112 7 is_stmt 1 view .LVU1632
 5178              	.LVL445:
3113:src/keys.c    **** 
 5179              		.loc 1 3113 7 view .LVU1633
 5180              		.loc 1 3115 7 view .LVU1634
 5181              		.loc 1 3115 10 is_stmt 0 view .LVU1635
 5182 006e 00F09082 		beq	.L1153
3116:src/keys.c    **** 	xeq_sst_bst(1);
3117:src/keys.c    ****       else {
3118:src/keys.c    **** 	if (c == (OP_NIL | OP_OFF) || c == (OP_NIL | OP_rCLX) || !is_bad_cmdline()) {
 5183              		.loc 1 3118 2 is_stmt 1 view .LVU1636
 5184              		.loc 1 3118 5 is_stmt 0 view .LVU1637
 5185 0072 B4F5817F 		cmp	r4, #258
 5186 0076 08D0     		beq	.L608
 5187              		.loc 1 3118 29 discriminator 1 view .LVU1638
 5188 0078 40F23F13 		movw	r3, #319
 5189 007c 9C42     		cmp	r4, r3
 5190 007e 04D0     		beq	.L608
 5191              		.loc 1 3118 60 discriminator 2 view .LVU1639
 5192 0080 FFF7FEFF 		bl	is_bad_cmdline
 5193              	.LVL446:
 5194              		.loc 1 3118 56 discriminator 2 view .LVU1640
 5195 0084 0028     		cmp	r0, #0
 5196 0086 40F09482 		bne	.L1154
 5197              	.L608:
3119:src/keys.c    **** 	  xeq(c);
 5198              		.loc 1 3119 4 is_stmt 1 view .LVU1641
3120:src/keys.c    **** 	  if (Running || Pause)
 5199              		.loc 1 3120 8 is_stmt 0 view .LVU1642
 5200 008a 7A4E     		ldr	r6, .L1248+20
3119:src/keys.c    **** 	  xeq(c);
 5201              		.loc 1 3119 4 view .LVU1643
 5202 008c 2046     		mov	r0, r4
 5203 008e FFF7FEFF 		bl	xeq
 5204              	.LVL447:
 5205              		.loc 1 3120 4 is_stmt 1 view .LVU1644
 5206              		.loc 1 3120 7 is_stmt 0 view .LVU1645
 5207 0092 3368     		ldr	r3, [r6]
 5208 0094 0BB9     		cbnz	r3, .L606
 5209              		.loc 1 3120 16 discriminator 1 view .LVU1646
 5210 0096 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 5211 0098 0BB1     		cbz	r3, .L604
 5212              	.L606:
3121:src/keys.c    **** 	    xeqprog();
 5213              		.loc 1 3121 6 is_stmt 1 view .LVU1647
 5214 009a FFF7FEFF 		bl	xeqprog
 5215              	.LVL448:
 5216              	.L604:
3122:src/keys.c    **** 	}
3123:src/keys.c    ****       }
3124:src/keys.c    ****       dot(RPN, ShowRPN);
 5217              		.loc 1 3124 7 view .LVU1648
 5218 009e 764C     		ldr	r4, .L1248+24
 5219              	.LVL449:
 5220              		.loc 1 3124 7 is_stmt 0 view .LVU1649
 5221 00a0 8D20     		movs	r0, #141
 5222 00a2 2168     		ldr	r1, [r4]
ARM GAS  /tmp/ccihcwFT.s 			page 173


 5223 00a4 FFF7FEFF 		bl	dot
 5224              	.LVL450:
3125:src/keys.c    ****     }
3126:src/keys.c    ****     else {
3127:src/keys.c    ****       // Ignore key-up if no operation was pending
3128:src/keys.c    ****       dot(RPN, ShowRPN);
3129:src/keys.c    **** #ifndef CONSOLE
3130:src/keys.c    ****       if (! State2.disp_temp ) {
3131:src/keys.c    **** 	if (!WasDataEntry) {
3132:src/keys.c    **** 	  // This will get rid of the last displayed op-code
3133:src/keys.c    **** 	  display();
3134:src/keys.c    **** 	}
3135:src/keys.c    **** 	else {
3136:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3137:src/keys.c    **** 	}
3138:src/keys.c    ****       }
3139:src/keys.c    **** #endif
3140:src/keys.c    ****       return;
3141:src/keys.c    ****     }
3142:src/keys.c    **** 
3143:src/keys.c    ****     /*
3144:src/keys.c    ****      *  Turn on the RPN symbol if desired
3145:src/keys.c    ****      */
3146:src/keys.c    ****     if (ShowRPN) {
 5225              		.loc 1 3146 5 is_stmt 1 view .LVU1650
 5226              		.loc 1 3146 9 is_stmt 0 view .LVU1651
 5227 00a8 2568     		ldr	r5, [r4]
 5228              		.loc 1 3146 8 view .LVU1652
 5229 00aa 002D     		cmp	r5, #0
 5230 00ac 40F05082 		bne	.L610
 5231 00b0 3268     		ldr	r2, [r6]
 5232              	.LVL451:
 5233              	.L611:
3147:src/keys.c    ****       finish_RPN(); // RPN
3148:src/keys.c    ****     }
3149:src/keys.c    ****   }
3150:src/keys.c    ****   else {
3151:src/keys.c    ****     /*
3152:src/keys.c    ****      *  Decode the key 
3153:src/keys.c    ****      */
3154:src/keys.c    ****     // print_debug (100, c);
3155:src/keys.c    ****     WasDataEntry = 0;
3156:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
3157:src/keys.c    **** #ifdef DM42
3158:src/keys.c    ****     if (c != K_OP) {
3159:src/keys.c    ****       c = process(c);		// returns an op-code or state
3160:src/keys.c    ****     }
3161:src/keys.c    ****     else {
3162:src/keys.c    ****       if (isRARG(nd_opcode)) {
3163:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
3164:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
3165:src/keys.c    **** 	  c = nd_opcode;
3166:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
3167:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
3168:src/keys.c    **** 	  c = STATE_UNFINISHED;
3169:src/keys.c    **** 	}
3170:src/keys.c    **** 	else {
ARM GAS  /tmp/ccihcwFT.s 			page 174


3171:src/keys.c    **** 	  init_arg(RARG_CMD(nd_opcode));
3172:src/keys.c    **** 	  c = STATE_UNFINISHED;
3173:src/keys.c    **** 	}
3174:src/keys.c    ****       }
3175:src/keys.c    ****       else {
3176:src/keys.c    **** 	c = check_confirm(nd_opcode);
3177:src/keys.c    ****       }      
3178:src/keys.c    ****     }
3179:src/keys.c    **** #else
3180:src/keys.c    ****     c = process(c);		// returns an op-code or state
3181:src/keys.c    **** #endif
3182:src/keys.c    ****     switch (c) {
3183:src/keys.c    ****     case STATE_SST:
3184:src/keys.c    ****       OpCode = c;
3185:src/keys.c    ****       OpCodeDisplayPending = 0;
3186:src/keys.c    ****       xeq_sst_bst(0);
3187:src/keys.c    ****       break;
3188:src/keys.c    **** 
3189:src/keys.c    ****     case STATE_BST:
3190:src/keys.c    ****       xeq_sst_bst(-1);
3191:src/keys.c    ****       break;
3192:src/keys.c    **** 
3193:src/keys.c    ****     case STATE_BACKSPACE:
3194:src/keys.c    ****       if (! State2.runmode)
3195:src/keys.c    **** 	delprog();
3196:src/keys.c    ****       else if (State2.alphas) {
3197:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
3198:src/keys.c    **** 	if (p > Alpha)
3199:src/keys.c    **** 	  *--p = '\0';
3200:src/keys.c    ****       }
3201:src/keys.c    ****       break;
3202:src/keys.c    **** 
3203:src/keys.c    ****     case STATE_RUNNING:
3204:src/keys.c    ****       xeqprog();  // continue execution
3205:src/keys.c    ****       break;
3206:src/keys.c    **** 
3207:src/keys.c    ****     case STATE_WINDOWRIGHT:
3208:src/keys.c    ****     case STATE_WINDOWLEFT:
3209:src/keys.c    ****       if (!is_bad_cmdline())
3210:src/keys.c    **** 	set_window(c);
3211:src/keys.c    ****       break;
3212:src/keys.c    **** 
3213:src/keys.c    ****     case STATE_UNFINISHED:
3214:src/keys.c    ****     case STATE_IGNORE:
3215:src/keys.c    ****       break;
3216:src/keys.c    **** 
3217:src/keys.c    ****     default:
3218:src/keys.c    ****       if (State2.runmode || NonProgrammable) {
3219:src/keys.c    **** 	NonProgrammable = 0;
3220:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
3221:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
3222:src/keys.c    **** 	    // Data entry key
3223:src/keys.c    **** #ifndef CONSOLE
3224:src/keys.c    **** 	    WasDataEntry = 1;
3225:src/keys.c    **** #endif
3226:src/keys.c    **** 	    cmdline_empty = (CmdLineLength == 0);
3227:src/keys.c    **** 	    xeq(c);
ARM GAS  /tmp/ccihcwFT.s 			page 175


3228:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
3229:src/keys.c    **** 	  }
3230:src/keys.c    **** 	}
3231:src/keys.c    **** 	else {
3232:src/keys.c    **** 	  // Save the op-code for execution on key-up
3233:src/keys.c    **** 	  OpCode = c;
3234:src/keys.c    **** 	  OpCodeDisplayPending = 1;
3235:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3236:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
3237:src/keys.c    **** 	}
3238:src/keys.c    ****       }
3239:src/keys.c    ****       else {
3240:src/keys.c    **** 	stoprog(c);
3241:src/keys.c    ****       }
3242:src/keys.c    ****     }
3243:src/keys.c    ****   }
3244:src/keys.c    ****   if (! Running && ! Pause
 5234              		.loc 1 3244 3 is_stmt 1 view .LVU1653
 5235              		.loc 1 3244 6 is_stmt 0 view .LVU1654
 5236 00b2 002A     		cmp	r2, #0
 5237 00b4 40F07881 		bne	.L1144
 5238              	.LVL452:
 5239              	.L627:
 5240              		.loc 1 3244 20 discriminator 1 view .LVU1655
 5241 00b8 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 5242              		.loc 1 3244 17 discriminator 1 view .LVU1656
 5243 00ba 002B     		cmp	r3, #0
 5244 00bc 40F07481 		bne	.L1144
3245:src/keys.c    **** #ifndef CONSOLE
3246:src/keys.c    ****       && ! JustStopped
 5245              		.loc 1 3246 10 view .LVU1657
 5246 00c0 694B     		ldr	r3, .L1248+8
3247:src/keys.c    **** #endif
3248:src/keys.c    ****       && ! JustDisplayed && c != STATE_IGNORE) {
 5247              		.loc 1 3248 10 view .LVU1658
 5248 00c2 6E4C     		ldr	r4, .L1248+28
 5249 00c4 1B68     		ldr	r3, [r3]
 5250 00c6 2268     		ldr	r2, [r4]
 5251              		.loc 1 3248 7 view .LVU1659
 5252 00c8 1343     		orrs	r3, r3, r2
 5253 00ca 19D1     		bne	.L924
 5254              		.loc 1 3248 26 discriminator 1 view .LVU1660
 5255 00cc BBF1320F 		cmp	fp, #50
 5256 00d0 16D0     		beq	.L924
 5257              	.LBB651:
3249:src/keys.c    ****     const int orig_WasDataEntry = WasDataEntry;
 5258              		.loc 1 3249 5 is_stmt 1 view .LVU1661
 5259              		.loc 1 3249 15 is_stmt 0 view .LVU1662
 5260 00d2 DFF8C891 		ldr	r9, .L1248+60
 5261 00d6 D9F80060 		ldr	r6, [r9]
 5262              	.LVL453:
3250:src/keys.c    **** 
3251:src/keys.c    ****     WasDataEntry &= !(c == (OP_SPEC | OP_ENTER) || cmdline_empty || State2.invalid_disp);
 5263              		.loc 1 3251 5 is_stmt 1 view .LVU1663
 5264              		.loc 1 3251 21 is_stmt 0 view .LVU1664
 5265 00da BBF1000F 		cmp	fp, #0
 5266 00de 09D0     		beq	.L926
ARM GAS  /tmp/ccihcwFT.s 			page 176


 5267              		.loc 1 3251 49 discriminator 1 view .LVU1665
 5268 00e0 002D     		cmp	r5, #0
 5269 00e2 40F0CD84 		bne	.L985
 5270              		.loc 1 3251 66 discriminator 3 view .LVU1666
 5271 00e6 664B     		ldr	r3, .L1248+32
 5272 00e8 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 5273              		.loc 1 3251 21 discriminator 3 view .LVU1667
 5274 00ea 9F07     		lsls	r7, r3, #30
 5275 00ec 00F11E85 		bmi	.L986
 5276 00f0 06F0010B 		and	fp, r6, #1
 5277              	.LVL454:
 5278              	.L926:
 5279              		.loc 1 3251 18 discriminator 8 view .LVU1668
 5280 00f4 C9F800B0 		str	fp, [r9]
3252:src/keys.c    ****     display();
 5281              		.loc 1 3252 5 is_stmt 1 discriminator 8 view .LVU1669
 5282 00f8 FFF7FEFF 		bl	display
 5283              	.LVL455:
3253:src/keys.c    ****     WasDataEntry = orig_WasDataEntry;
 5284              		.loc 1 3253 5 discriminator 8 view .LVU1670
 5285              		.loc 1 3253 18 is_stmt 0 discriminator 8 view .LVU1671
 5286 00fc C9F80060 		str	r6, [r9]
 5287              	.LVL456:
 5288              	.L924:
 5289              		.loc 1 3253 18 discriminator 8 view .LVU1672
 5290              	.LBE651:
3254:src/keys.c    ****   }
3255:src/keys.c    **** 
3256:src/keys.c    ****  no_display:
3257:src/keys.c    ****   JustDisplayed = 0;
 5291              		.loc 1 3257 3 is_stmt 1 view .LVU1673
 5292              		.loc 1 3257 17 is_stmt 0 view .LVU1674
 5293 0100 0023     		movs	r3, #0
 5294 0102 2360     		str	r3, [r4]
3258:src/keys.c    ****   watchdog();
 5295              		.loc 1 3258 13 is_stmt 1 view .LVU1675
 5296              	.L580:
3259:src/keys.c    **** }
 5297              		.loc 1 3259 1 is_stmt 0 view .LVU1676
 5298 0104 03B0     		add	sp, sp, #12
 5299              		.cfi_remember_state
 5300              		.cfi_def_cfa_offset 36
 5301              		@ sp needed
 5302 0106 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5303              	.LVL457:
 5304              	.L1150:
 5305              		.cfi_restore_state
3016:src/keys.c    ****       /*
 5306              		.loc 1 3016 5 is_stmt 1 view .LVU1677
3016:src/keys.c    ****       /*
 5307              		.loc 1 3016 9 is_stmt 0 view .LVU1678
 5308 010a FFF7FEFF 		bl	keyticks
 5309              	.LVL458:
3016:src/keys.c    ****       /*
 5310              		.loc 1 3016 8 view .LVU1679
 5311 010e 0128     		cmp	r0, #1
 5312 0110 1BDD     		ble	.L586
ARM GAS  /tmp/ccihcwFT.s 			page 177


3020:src/keys.c    **** 	/*
 5313              		.loc 1 3020 7 is_stmt 1 view .LVU1680
3020:src/keys.c    **** 	/*
 5314              		.loc 1 3020 18 is_stmt 0 view .LVU1681
 5315 0112 564D     		ldr	r5, .L1248+12
 5316 0114 2868     		ldr	r0, [r5]
3020:src/keys.c    **** 	/*
 5317              		.loc 1 3020 10 view .LVU1682
 5318 0116 98B1     		cbz	r0, .L588
3024:src/keys.c    **** 	  /*
 5319              		.loc 1 3024 2 is_stmt 1 view .LVU1683
3024:src/keys.c    **** 	  /*
 5320              		.loc 1 3024 6 is_stmt 0 view .LVU1684
 5321 0118 5A4B     		ldr	r3, .L1248+36
3024:src/keys.c    **** 	  /*
 5322              		.loc 1 3024 5 view .LVU1685
 5323 011a 1E68     		ldr	r6, [r3]
 5324 011c 002E     		cmp	r6, #0
 5325 011e 00F06982 		beq	.L589
3028:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5326              		.loc 1 3028 4 is_stmt 1 view .LVU1686
3029:src/keys.c    **** 	    DispMsg = "RUN";
 5327              		.loc 1 3029 7 is_stmt 0 view .LVU1687
 5328 0122 40F23B12 		movw	r2, #315
3028:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5329              		.loc 1 3028 25 view .LVU1688
 5330 0126 0025     		movs	r5, #0
3029:src/keys.c    **** 	    DispMsg = "RUN";
 5331              		.loc 1 3029 7 view .LVU1689
 5332 0128 9042     		cmp	r0, r2
3028:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5333              		.loc 1 3028 25 view .LVU1690
 5334 012a 1D60     		str	r5, [r3]
3029:src/keys.c    **** 	    DispMsg = "RUN";
 5335              		.loc 1 3029 4 is_stmt 1 view .LVU1691
3029:src/keys.c    **** 	    DispMsg = "RUN";
 5336              		.loc 1 3029 7 is_stmt 0 view .LVU1692
 5337 012c 40F0A683 		bne	.L590
3030:src/keys.c    **** 	  }
 5338              		.loc 1 3030 6 is_stmt 1 view .LVU1693
3030:src/keys.c    **** 	  }
 5339              		.loc 1 3030 14 is_stmt 0 view .LVU1694
 5340 0130 554B     		ldr	r3, .L1248+40
 5341 0132 564A     		ldr	r2, .L1248+44
 5342 0134 1A60     		str	r2, [r3]
 5343              	.L591:
3036:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
 5344              		.loc 1 3036 4 is_stmt 1 view .LVU1695
 5345 0136 FFF7FEFF 		bl	display
 5346              	.LVL459:
3037:src/keys.c    **** 	}
 5347              		.loc 1 3037 4 view .LVU1696
3037:src/keys.c    **** 	}
 5348              		.loc 1 3037 12 is_stmt 0 view .LVU1697
 5349 013a 4F4B     		ldr	r3, .L1248+24
 5350 013c 0122     		movs	r2, #1
 5351 013e 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccihcwFT.s 			page 178


 5352              	.L588:
3049:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5353              		.loc 1 3049 7 is_stmt 1 view .LVU1698
3049:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5354              		.loc 1 3049 11 is_stmt 0 view .LVU1699
 5355 0140 FFF7FEFF 		bl	keyticks
 5356              	.LVL460:
3049:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5357              		.loc 1 3049 10 view .LVU1700
 5358 0144 0C28     		cmp	r0, #12
 5359 0146 00F32B82 		bgt	.L1155
 5360              	.L586:
3058:src/keys.c    **** 
 5361              		.loc 1 3058 15 is_stmt 1 view .LVU1701
3064:src/keys.c    ****       JustStopped = 0;
 5362              		.loc 1 3064 5 view .LVU1702
3064:src/keys.c    ****       JustStopped = 0;
 5363              		.loc 1 3064 9 is_stmt 0 view .LVU1703
 5364 014a 474D     		ldr	r5, .L1248+8
3064:src/keys.c    ****       JustStopped = 0;
 5365              		.loc 1 3064 8 view .LVU1704
 5366 014c 2B68     		ldr	r3, [r5]
 5367 014e 002B     		cmp	r3, #0
 5368 0150 40F09E81 		bne	.L1156
 5369              	.L595:
3072:src/keys.c    ****       return;
 5370              		.loc 1 3072 5 is_stmt 1 view .LVU1705
3072:src/keys.c    ****       return;
 5371              		.loc 1 3072 9 is_stmt 0 view .LVU1706
 5372 0154 474E     		ldr	r6, .L1248+20
 5373 0156 3368     		ldr	r3, [r6]
3072:src/keys.c    ****       return;
 5374              		.loc 1 3072 8 view .LVU1707
 5375 0158 002B     		cmp	r3, #0
 5376 015a 00F08B81 		beq	.L1157
 5377              	.L597:
3105:src/keys.c    ****     {
 5378              		.loc 1 3105 3 is_stmt 1 view .LVU1708
3155:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5379              		.loc 1 3155 5 view .LVU1709
3156:src/keys.c    **** #ifdef DM42
 5380              		.loc 1 3156 13 is_stmt 0 view .LVU1710
 5381 015e 464A     		ldr	r2, .L1248+24
3155:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5382              		.loc 1 3155 18 view .LVU1711
 5383 0160 DFF83891 		ldr	r9, .L1248+60
3156:src/keys.c    **** #ifdef DM42
 5384              		.loc 1 3156 15 view .LVU1712
 5385 0164 B3FA83F3 		clz	r3, r3
 5386 0168 5B09     		lsrs	r3, r3, #5
3156:src/keys.c    **** #ifdef DM42
 5387              		.loc 1 3156 13 view .LVU1713
 5388 016a 1360     		str	r3, [r2]
3155:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5389              		.loc 1 3155 18 view .LVU1714
 5390 016c 0023     		movs	r3, #0
 5391 016e C9F80030 		str	r3, [r9]
ARM GAS  /tmp/ccihcwFT.s 			page 179


3156:src/keys.c    **** #ifdef DM42
 5392              		.loc 1 3156 5 is_stmt 1 view .LVU1715
3158:src/keys.c    ****       c = process(c);		// returns an op-code or state
 5393              		.loc 1 3158 5 view .LVU1716
 5394              	.L583:
3159:src/keys.c    ****     }
 5395              		.loc 1 3159 7 view .LVU1717
 5396              	.LVL461:
 5397              	.LBB652:
 5398              	.LBI652:
2813:src/keys.c    ****   const enum shifts shift = cur_shift();
 5399              		.loc 1 2813 12 view .LVU1718
 5400              	.LBB653:
2814:src/keys.c    ****   enum catalogues cat;
 5401              		.loc 1 2814 3 view .LVU1719
 5402              	.LBB654:
 5403              	.LBI654:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 5404              		.loc 1 86 13 view .LVU1720
 5405              	.LBB655:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5406              		.loc 1 87 2 view .LVU1721
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5407              		.loc 1 87 18 is_stmt 0 view .LVU1722
 5408 0172 FFF7FEFF 		bl	shift_down
 5409              	.LVL462:
  88:src/keys.c    **** }
 5410              		.loc 1 88 2 is_stmt 1 view .LVU1723
  88:src/keys.c    **** }
 5411              		.loc 1 88 52 is_stmt 0 view .LVU1724
 5412 0176 8246     		mov	r10, r0
 5413 0178 10B9     		cbnz	r0, .L615
 5414 017a 414B     		ldr	r3, .L1248+32
 5415 017c 93F810A0 		ldrb	r10, [r3, #16]	@ zero_extendqisi2
 5416              	.L615:
 5417              	.LVL463:
  88:src/keys.c    **** }
 5418              		.loc 1 88 52 view .LVU1725
 5419              	.LBE655:
 5420              	.LBE654:
2815:src/keys.c    **** 
 5421              		.loc 1 2815 3 is_stmt 1 view .LVU1726
2817:src/keys.c    ****     /*
 5422              		.loc 1 2817 3 view .LVU1727
2817:src/keys.c    ****     /*
 5423              		.loc 1 2817 7 is_stmt 0 view .LVU1728
 5424 0180 3568     		ldr	r5, [r6]
2817:src/keys.c    ****     /*
 5425              		.loc 1 2817 6 view .LVU1729
 5426 0182 002D     		cmp	r5, #0
 5427 0184 40F0F780 		bne	.L616
2817:src/keys.c    ****     /*
 5428              		.loc 1 2817 15 view .LVU1730
 5429 0188 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 5430 018a 002B     		cmp	r3, #0
 5431 018c 40F0F380 		bne	.L616
2845:src/keys.c    **** #else
ARM GAS  /tmp/ccihcwFT.s 			page 180


 5432              		.loc 1 2845 3 is_stmt 1 view .LVU1731
2845:src/keys.c    **** #else
 5433              		.loc 1 2845 6 is_stmt 0 view .LVU1732
 5434 0190 242C     		cmp	r4, #36
 5435 0192 00F0E283 		beq	.L1158
2855:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5436              		.loc 1 2855 2 is_stmt 1 view .LVU1733
2855:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5437              		.loc 1 2855 5 is_stmt 0 view .LVU1734
 5438 0196 272C     		cmp	r4, #39
 5439 0198 04D1     		bne	.L626
2855:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5440              		.loc 1 2855 15 view .LVU1735
 5441 019a 334B     		ldr	r3, .L1248+8
 5442 019c 1A68     		ldr	r2, [r3]
 5443 019e 002A     		cmp	r2, #0
 5444 01a0 40F0B284 		bne	.L1159
 5445              	.L626:
 5446 01a4 DFF8D880 		ldr	r8, .L1248+32
 5447 01a8 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
 5448              	.L623:
2864:src/keys.c    **** 		CmdLineLength = 0;
 5449              		.loc 1 2864 2 is_stmt 1 view .LVU1736
2864:src/keys.c    **** 		CmdLineLength = 0;
 5450              		.loc 1 2864 5 is_stmt 0 view .LVU1737
 5451 01ac 33B1     		cbz	r3, .L629
2864:src/keys.c    **** 		CmdLineLength = 0;
 5452              		.loc 1 2864 26 view .LVU1738
 5453 01ae FFF7FEFF 		bl	keyticks
 5454              	.LVL464:
2864:src/keys.c    **** 		CmdLineLength = 0;
 5455              		.loc 1 2864 23 view .LVU1739
 5456 01b2 1E28     		cmp	r0, #30
2865:src/keys.c    **** 	/*
 5457              		.loc 1 2865 3 is_stmt 1 view .LVU1740
2865:src/keys.c    **** 	/*
 5458              		.loc 1 2865 17 is_stmt 0 view .LVU1741
 5459 01b4 C4BF     		itt	gt
 5460 01b6 0023     		movgt	r3, #0
 5461 01b8 88F81C30 		strbgt	r3, [r8, #28]
 5462              	.L629:
2870:src/keys.c    **** 		return process_confirm((const keycode)c);
 5463              		.loc 1 2870 2 is_stmt 1 view .LVU1742
2870:src/keys.c    **** 		return process_confirm((const keycode)c);
 5464              		.loc 1 2870 6 is_stmt 0 view .LVU1743
 5465 01bc 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
2870:src/keys.c    **** 		return process_confirm((const keycode)c);
 5466              		.loc 1 2870 5 view .LVU1744
 5467 01c0 5907     		lsls	r1, r3, #29
 5468 01c2 40F08583 		bne	.L1160
2873:src/keys.c    **** 		return process_arg((const keycode)c);
 5469              		.loc 1 2873 2 is_stmt 1 view .LVU1745
2873:src/keys.c    **** 		return process_arg((const keycode)c);
 5470              		.loc 1 2873 6 is_stmt 0 view .LVU1746
 5471 01c6 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2873:src/keys.c    **** 		return process_arg((const keycode)c);
 5472              		.loc 1 2873 5 view .LVU1747
ARM GAS  /tmp/ccihcwFT.s 			page 181


 5473 01ca 9A06     		lsls	r2, r3, #26
 5474 01cc 00F1DC83 		bmi	.L1161
2876:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5475              		.loc 1 2876 2 is_stmt 1 view .LVU1748
2876:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5476              		.loc 1 2876 6 is_stmt 0 view .LVU1749
 5477 01d0 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
2876:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5478              		.loc 1 2876 5 view .LVU1750
 5479 01d4 11F0010B 		ands	fp, r1, #1
 5480 01d8 40F01784 		bne	.L1162
2879:src/keys.c    **** 		return process_hyp((const keycode)c);
 5481              		.loc 1 2879 2 is_stmt 1 view .LVU1751
2879:src/keys.c    **** 		return process_hyp((const keycode)c);
 5482              		.loc 1 2879 5 is_stmt 0 view .LVU1752
 5483 01dc 11F02000 		ands	r0, r1, #32
 5484 01e0 40F05184 		bne	.L1163
2882:src/keys.c    **** 		return process_test((const keycode)c);
 5485              		.loc 1 2882 2 is_stmt 1 view .LVU1753
2882:src/keys.c    **** 		return process_test((const keycode)c);
 5486              		.loc 1 2882 12 is_stmt 0 view .LVU1754
 5487 01e4 98F80FB0 		ldrb	fp, [r8, #15]	@ zero_extendqisi2
2882:src/keys.c    **** 		return process_test((const keycode)c);
 5488              		.loc 1 2882 5 view .LVU1755
 5489 01e8 BBF1070F 		cmp	fp, #7
 5490 01ec 40F0D983 		bne	.L1164
2885:src/keys.c    **** 		return process_status((const keycode)c);
 5491              		.loc 1 2885 2 is_stmt 1 view .LVU1756
2885:src/keys.c    **** 		return process_status((const keycode)c);
 5492              		.loc 1 2885 12 is_stmt 0 view .LVU1757
 5493 01f0 98F80C30 		ldrb	r3, [r8, #12]	@ zero_extendqisi2
2885:src/keys.c    **** 		return process_status((const keycode)c);
 5494              		.loc 1 2885 5 view .LVU1758
 5495 01f4 002B     		cmp	r3, #0
 5496 01f6 40F09C84 		bne	.L1165
2891:src/keys.c    **** 		toggle_shift(SHIFT_F);
 5497              		.loc 1 2891 2 is_stmt 1 view .LVU1759
2891:src/keys.c    **** 		toggle_shift(SHIFT_F);
 5498              		.loc 1 2891 5 is_stmt 0 view .LVU1760
 5499 01fa 292C     		cmp	r4, #41
 5500 01fc 00F05A85 		beq	.L1166
2895:src/keys.c    **** 		toggle_shift(SHIFT_G);
 5501              		.loc 1 2895 2 is_stmt 1 view .LVU1761
2895:src/keys.c    **** 		toggle_shift(SHIFT_G);
 5502              		.loc 1 2895 5 is_stmt 0 view .LVU1762
 5503 0200 2A2C     		cmp	r4, #42
 5504 0202 00F07A85 		beq	.L1167
2899:src/keys.c    **** 		toggle_shift(SHIFT_H);
 5505              		.loc 1 2899 2 is_stmt 1 view .LVU1763
2899:src/keys.c    **** 		toggle_shift(SHIFT_H);
 5506              		.loc 1 2899 5 is_stmt 0 view .LVU1764
 5507 0206 2B2C     		cmp	r4, #43
 5508 0208 00F09985 		beq	.L1168
2908:src/keys.c    **** 		return process_arrow((const keycode)c);
 5509              		.loc 1 2908 2 is_stmt 1 view .LVU1765
2908:src/keys.c    **** 		return process_arrow((const keycode)c);
 5510              		.loc 1 2908 5 is_stmt 0 view .LVU1766
ARM GAS  /tmp/ccihcwFT.s 			page 182


 5511 020c 4807     		lsls	r0, r1, #29
 5512 020e 00F1BC84 		bmi	.L1169
2916:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 5513              		.loc 1 2916 2 is_stmt 1 view .LVU1767
2916:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 5514              		.loc 1 2916 8 is_stmt 0 view .LVU1768
 5515 0212 E4B2     		uxtb	r4, r4
 5516              	.LVL465:
 5517              	.LBB656:
 5518              	.LBI656:
 257:src/keys.c    **** {
 5519              		.loc 1 257 24 is_stmt 1 view .LVU1769
 5520              	.LBB657:
 259:src/keys.c    ****   int i, col, max;
 5521              		.loc 1 259 3 view .LVU1770
 260:src/keys.c    ****   const struct _map {
 5522              		.loc 1 260 3 view .LVU1771
 261:src/keys.c    ****     unsigned char key, cat[3];
 5523              		.loc 1 261 3 view .LVU1772
 266:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 5524              		.loc 1 266 3 view .LVU1773
 266:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 5525              		.loc 1 266 6 is_stmt 0 view .LVU1774
 5526 0214 212C     		cmp	r4, #33
 5527 0216 00F0E484 		beq	.L1170
 269:src/keys.c    ****     /*
 5528              		.loc 1 269 3 is_stmt 1 view .LVU1775
 269:src/keys.c    ****     /*
 5529              		.loc 1 269 23 is_stmt 0 view .LVU1776
 5530 021a 1D4A     		ldr	r2, .L1248+48
 5531 021c D8F81430 		ldr	r3, [r8, #20]
 269:src/keys.c    ****     /*
 5532              		.loc 1 269 6 view .LVU1777
 5533 0220 1A42     		tst	r2, r3
 5534 0222 40F0E884 		bne	.L709
 5535              	.LBB658:
 273:src/keys.c    **** #ifdef DM42
 5536              		.loc 1 273 5 is_stmt 1 view .LVU1778
 300:src/keys.c    ****       /*
 5537              		.loc 1 300 5 view .LVU1779
 300:src/keys.c    ****       /*
 5538              		.loc 1 300 8 is_stmt 0 view .LVU1780
 5539 0226 242C     		cmp	r4, #36
 5540 0228 03D1     		bne	.L710
 300:src/keys.c    ****       /*
 5541              		.loc 1 300 18 view .LVU1781
 5542 022a BAF1020F 		cmp	r10, #2
 5543 022e 01F03683 		beq	.L958
 5544              	.L710:
 315:src/keys.c    ****       /*
 5545              		.loc 1 315 5 is_stmt 1 view .LVU1782
 315:src/keys.c    ****       /*
 5546              		.loc 1 315 8 is_stmt 0 view .LVU1783
 5547 0232 BAF1030F 		cmp	r10, #3
 5548 0236 3AD1     		bne	.L717
 5549              	.L940:
 325:src/keys.c    **** #ifndef WINGUI
ARM GAS  /tmp/ccihcwFT.s 			page 183


 5550              		.loc 1 325 5 is_stmt 1 view .LVU1784
 5551              	.LVL466:
 327:src/keys.c    **** #else
 5552              		.loc 1 327 5 view .LVU1785
 327:src/keys.c    **** #else
 5553              		.loc 1 327 23 is_stmt 0 view .LVU1786
 5554 0238 164B     		ldr	r3, .L1248+52
 5555 023a 1B68     		ldr	r3, [r3]
 5556 023c 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 327:src/keys.c    **** #else
 5557              		.loc 1 327 27 view .LVU1787
 5558 0240 DA07     		lsls	r2, r3, #31
 5559 0242 00F12086 		bmi	.L959
 327:src/keys.c    **** #else
 5560              		.loc 1 327 73 view .LVU1788
 5561 0246 11F0020B 		ands	fp, r1, #2
 5562 024a 01F06081 		beq	.L1171
 325:src/keys.c    **** #ifndef WINGUI
 5563              		.loc 1 325 8 view .LVU1789
 5564 024e 124B     		ldr	r3, .L1248+56
 331:src/keys.c    ****   }
 5565              		.loc 1 331 9 view .LVU1790
 5566 0250 0C22     		movs	r2, #12
 327:src/keys.c    **** #else
 5567              		.loc 1 327 73 view .LVU1791
 5568 0252 4FF0020C 		mov	ip, #2
 5569              	.LVL467:
 5570              	.L712:
 327:src/keys.c    **** #else
 5571              		.loc 1 327 73 view .LVU1792
 5572              	.LBE658:
 375:src/keys.c    ****     if (cp->key == c) {
 5573              		.loc 1 375 3 is_stmt 1 view .LVU1793
 375:src/keys.c    ****     if (cp->key == c) {
 5574              		.loc 1 375 15 view .LVU1794
 5575 0256 181F     		subs	r0, r3, #4
 5576 0258 00EB8200 		add	r0, r0, r2, lsl #2
 5577              	.LBB659:
 327:src/keys.c    **** #else
 5578              		.loc 1 327 73 is_stmt 0 view .LVU1795
 5579 025c 0422     		movs	r2, #4
 5580              	.LVL468:
 327:src/keys.c    **** #else
 5581              		.loc 1 327 73 view .LVU1796
 5582 025e 21E0     		b	.L718
 5583              	.L1249:
 5584              		.align	2
 5585              	.L1248:
 5586 0260 00000000 		.word	.LANCHOR12
 5587 0264 00000000 		.word	Pause
 5588 0268 00000000 		.word	JustStopped
 5589 026c 00000000 		.word	OpCode
 5590 0270 00000000 		.word	GoFast
 5591 0274 00000000 		.word	Running
 5592 0278 00000000 		.word	ShowRPN
 5593 027c 00000000 		.word	JustDisplayed
 5594 0280 00000000 		.word	StateWhileOn
ARM GAS  /tmp/ccihcwFT.s 			page 184


 5595 0284 00000000 		.word	OpCodeDisplayPending
 5596 0288 00000000 		.word	DispMsg
 5597 028c 00000000 		.word	.LC0
 5598 0290 00080800 		.word	526336
 5599 0294 00000000 		.word	main_ram
 5600 0298 00000000 		.word	.LANCHOR11
 5601 029c 00000000 		.word	WasDataEntry
 5602              	.LVL469:
 5603              	.L1173:
 327:src/keys.c    **** #else
 5604              		.loc 1 327 73 view .LVU1797
 5605 02a0 13F8042F 		ldrb	r2, [r3, #4]!	@ zero_extendqisi2
 5606              	.LVL470:
 5607              	.L718:
 327:src/keys.c    **** #else
 5608              		.loc 1 327 73 view .LVU1798
 5609              	.LBE659:
 376:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 5610              		.loc 1 376 5 is_stmt 1 view .LVU1799
 375:src/keys.c    ****     if (cp->key == c) {
 5611              		.loc 1 375 24 view .LVU1800
 375:src/keys.c    ****     if (cp->key == c) {
 5612              		.loc 1 375 15 view .LVU1801
 376:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 5613              		.loc 1 376 8 is_stmt 0 view .LVU1802
 5614 02a4 9442     		cmp	r4, r2
 5615 02a6 00F0E384 		beq	.L1172
 375:src/keys.c    ****     if (cp->key == c) {
 5616              		.loc 1 375 3 view .LVU1803
 5617 02aa 9842     		cmp	r0, r3
 5618 02ac F8D1     		bne	.L1173
 5619              	.LVL471:
 5620              	.L717:
 381:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5621              		.loc 1 381 3 is_stmt 1 view .LVU1804
 381:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5622              		.loc 1 381 6 is_stmt 0 view .LVU1805
 5623 02ae 0807     		lsls	r0, r1, #28
 5624 02b0 00F15A85 		bmi	.L723
 5625              	.LVL472:
 5626              	.L721:
 381:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5627              		.loc 1 381 6 view .LVU1806
 5628              	.LBE657:
 5629              	.LBE656:
2931:src/keys.c    **** 		return process_labellist((const keycode)c);
 5630              		.loc 1 2931 2 is_stmt 1 view .LVU1807
2931:src/keys.c    **** 		return process_labellist((const keycode)c);
 5631              		.loc 1 2931 6 is_stmt 0 view .LVU1808
 5632 02b4 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
2931:src/keys.c    **** 		return process_labellist((const keycode)c);
 5633              		.loc 1 2931 5 view .LVU1809
 5634 02b8 5807     		lsls	r0, r3, #29
 5635 02ba 00F11D86 		bmi	.L1174
2934:src/keys.c    **** 		return process_registerlist((const keycode)c);
 5636              		.loc 1 2934 2 is_stmt 1 view .LVU1810
2934:src/keys.c    **** 		return process_registerlist((const keycode)c);
ARM GAS  /tmp/ccihcwFT.s 			page 185


 5637              		.loc 1 2934 5 is_stmt 0 view .LVU1811
 5638 02be 1A07     		lsls	r2, r3, #28
 5639 02c0 00F13387 		bmi	.L1175
2937:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 5640              		.loc 1 2937 2 is_stmt 1 view .LVU1812
2937:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 5641              		.loc 1 2937 5 is_stmt 0 view .LVU1813
 5642 02c4 98F80E20 		ldrb	r2, [r8, #14]	@ zero_extendqisi2
 5643 02c8 002A     		cmp	r2, #0
 5644 02ca 40F0F187 		bne	.L1176
2940:src/keys.c    **** #ifndef INFRARED
 5645              		.loc 1 2940 2 is_stmt 1 view .LVU1814
2940:src/keys.c    **** #ifndef INFRARED
 5646              		.loc 1 2940 6 is_stmt 0 view .LVU1815
 5647 02ce 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2940:src/keys.c    **** #ifndef INFRARED
 5648              		.loc 1 2940 5 view .LVU1816
 5649 02d2 1007     		lsls	r0, r2, #28
 5650 02d4 01F12280 		bmi	.L1177
2953:src/keys.c    **** 		return process_cmplx((const keycode)c);
 5651              		.loc 1 2953 2 is_stmt 1 view .LVU1817
2953:src/keys.c    **** 		return process_cmplx((const keycode)c);
 5652              		.loc 1 2953 5 is_stmt 0 view .LVU1818
 5653 02d8 11F0020B 		ands	fp, r1, #2
 5654 02dc 41F0CE80 		bne	.L1178
2956:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5655              		.loc 1 2956 3 is_stmt 1 view .LVU1819
2956:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5656              		.loc 1 2956 24 is_stmt 0 view .LVU1820
 5657 02e0 0AF1FF31 		add	r1, r10, #-1
2956:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5658              		.loc 1 2956 6 view .LVU1821
 5659 02e4 C9B2     		uxtb	r1, r1
 5660 02e6 0129     		cmp	r1, #1
 5661 02e8 41F2A681 		bls	.L1179
2958:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 5662              		.loc 1 2958 3 is_stmt 1 view .LVU1822
2958:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 5663              		.loc 1 2958 6 is_stmt 0 view .LVU1823
 5664 02ec BAF1030F 		cmp	r10, #3
 5665 02f0 01F01C81 		beq	.L1180
2961:src/keys.c    **** 	}
 5666              		.loc 1 2961 3 is_stmt 1 view .LVU1824
 5667              	.LVL473:
 5668              	.LBB671:
 5669              	.LBI671:
 678:src/keys.c    **** {
 5670              		.loc 1 678 12 view .LVU1825
 5671              	.LBB672:
 680:src/keys.c    **** 		// Row 1
 5672              		.loc 1 680 2 view .LVU1826
 727:src/keys.c    **** 	int op = op_map[lc];
 5673              		.loc 1 727 2 view .LVU1827
 5674              	.LBB673:
 5675              	.LBI673:
 136:src/keys.c    **** {
 5676              		.loc 1 136 12 view .LVU1828
ARM GAS  /tmp/ccihcwFT.s 			page 186


 5677              	.LBB674:
 138:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 5678              		.loc 1 138 2 view .LVU1829
 148:src/keys.c    **** }
 5679              		.loc 1 148 2 view .LVU1830
 148:src/keys.c    **** }
 5680              		.loc 1 148 2 is_stmt 0 view .LVU1831
 5681              	.LBE674:
 5682              	.LBE673:
 728:src/keys.c    **** 	
 5683              		.loc 1 728 2 is_stmt 1 view .LVU1832
 733:src/keys.c    **** 	  switch (c) {
 5684              		.loc 1 733 6 is_stmt 0 view .LVU1833
 5685 02f4 B049     		ldr	r1, .L1250
 5686              	.LBB677:
 5687              	.LBB675:
 148:src/keys.c    **** }
 5688              		.loc 1 148 23 view .LVU1834
 5689 02f6 B148     		ldr	r0, .L1250+4
 5690              	.LBE675:
 5691              	.LBE677:
 733:src/keys.c    **** 	  switch (c) {
 5692              		.loc 1 733 6 view .LVU1835
 5693 02f8 0968     		ldr	r1, [r1]
 5694              	.LBB678:
 5695              	.LBB676:
 148:src/keys.c    **** }
 5696              		.loc 1 148 23 view .LVU1836
 5697 02fa 10F804C0 		ldrb	ip, [r0, r4]	@ zero_extendqisi2
 5698              	.LBE676:
 5699              	.LBE678:
 728:src/keys.c    **** 	
 5700              		.loc 1 728 17 view .LVU1837
 5701 02fe B048     		ldr	r0, .L1250+8
 733:src/keys.c    **** 	  switch (c) {
 5702              		.loc 1 733 6 view .LVU1838
 5703 0300 91F8E817 		ldrb	r1, [r1, #2024]	@ zero_extendqisi2
 728:src/keys.c    **** 	
 5704              		.loc 1 728 17 view .LVU1839
 5705 0304 30F81CA0 		ldrh	r10, [r0, ip, lsl #1]
 5706              	.LVL474:
 733:src/keys.c    **** 	  switch (c) {
 5707              		.loc 1 733 5 view .LVU1840
 5708 0308 C807     		lsls	r0, r1, #31
 728:src/keys.c    **** 	
 5709              		.loc 1 728 6 view .LVU1841
 5710 030a D346     		mov	fp, r10
 5711              	.LVL475:
 732:src/keys.c    **** 	if (UState.intm) {
 5712              		.loc 1 732 2 is_stmt 1 view .LVU1842
 733:src/keys.c    **** 	  switch (c) {
 5713              		.loc 1 733 2 view .LVU1843
 733:src/keys.c    **** 	  switch (c) {
 5714              		.loc 1 733 5 is_stmt 0 view .LVU1844
 5715 030c 00F1BB81 		bmi	.L1181
 764:src/keys.c    **** 	  }
 5716              		.loc 1 764 12 is_stmt 1 view .LVU1845
ARM GAS  /tmp/ccihcwFT.s 			page 187


 769:src/keys.c    **** #ifdef DM42
 5717              		.loc 1 769 2 view .LVU1846
 5718 0310 2D2C     		cmp	r4, #45
 5719 0312 00F29580 		bhi	.L641
 5720 0316 DFE814F0 		tbh	[pc, r4, lsl #1]
 5721              	.L946:
 5722 031a D00A     		.2byte	(.L893-.L946)/2
 5723 031c C90A     		.2byte	(.L894-.L946)/2
 5724 031e 9300     		.2byte	(.L641-.L946)/2
 5725 0320 2C02     		.2byte	(.L892-.L946)/2
 5726 0322 9300     		.2byte	(.L641-.L946)/2
 5727 0324 9300     		.2byte	(.L641-.L946)/2
 5728 0326 3802     		.2byte	(.L887-.L946)/2
 5729 0328 3802     		.2byte	(.L887-.L946)/2
 5730 032a 9300     		.2byte	(.L641-.L946)/2
 5731 032c 9300     		.2byte	(.L641-.L946)/2
 5732 032e 9300     		.2byte	(.L641-.L946)/2
 5733 0330 9300     		.2byte	(.L641-.L946)/2
 5734 0332 9300     		.2byte	(.L641-.L946)/2
 5735 0334 9300     		.2byte	(.L641-.L946)/2
 5736 0336 9300     		.2byte	(.L641-.L946)/2
 5737 0338 9300     		.2byte	(.L641-.L946)/2
 5738 033a 2102     		.2byte	(.L891-.L946)/2
 5739 033c 9300     		.2byte	(.L641-.L946)/2
 5740 033e 3802     		.2byte	(.L887-.L946)/2
 5741 0340 9300     		.2byte	(.L641-.L946)/2
 5742 0342 9300     		.2byte	(.L641-.L946)/2
 5743 0344 9300     		.2byte	(.L641-.L946)/2
 5744 0346 9300     		.2byte	(.L641-.L946)/2
 5745 0348 9300     		.2byte	(.L641-.L946)/2
 5746 034a 9300     		.2byte	(.L641-.L946)/2
 5747 034c 9300     		.2byte	(.L641-.L946)/2
 5748 034e 9300     		.2byte	(.L641-.L946)/2
 5749 0350 9300     		.2byte	(.L641-.L946)/2
 5750 0352 9300     		.2byte	(.L641-.L946)/2
 5751 0354 9300     		.2byte	(.L641-.L946)/2
 5752 0356 9300     		.2byte	(.L641-.L946)/2
 5753 0358 9300     		.2byte	(.L641-.L946)/2
 5754 035a 9300     		.2byte	(.L641-.L946)/2
 5755 035c 9300     		.2byte	(.L641-.L946)/2
 5756 035e 9300     		.2byte	(.L641-.L946)/2
 5757 0360 9300     		.2byte	(.L641-.L946)/2
 5758 0362 9300     		.2byte	(.L641-.L946)/2
 5759 0364 9300     		.2byte	(.L641-.L946)/2
 5760 0366 9300     		.2byte	(.L641-.L946)/2
 5761 0368 9300     		.2byte	(.L641-.L946)/2
 5762 036a 9300     		.2byte	(.L641-.L946)/2
 5763 036c 9300     		.2byte	(.L641-.L946)/2
 5764 036e 9300     		.2byte	(.L641-.L946)/2
 5765 0370 9300     		.2byte	(.L641-.L946)/2
 5766 0372 6802     		.2byte	(.L890-.L946)/2
 5767 0374 9C0D     		.2byte	(.L896-.L946)/2
 5768              	.LVL476:
 5769              		.p2align 1
 5770              	.L616:
 769:src/keys.c    **** #ifdef DM42
 5771              		.loc 1 769 2 is_stmt 0 view .LVU1847
ARM GAS  /tmp/ccihcwFT.s 			page 188


 5772              	.LBE672:
 5773              	.LBE671:
2821:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 5774              		.loc 1 2821 5 is_stmt 1 view .LVU1848
2821:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 5775              		.loc 1 2821 8 is_stmt 0 view .LVU1849
 5776 0376 242C     		cmp	r4, #36
 5777 0378 00F09180 		beq	.L618
2821:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 5778              		.loc 1 2821 18 view .LVU1850
 5779 037c 272C     		cmp	r4, #39
 5780 037e 00F08E80 		beq	.L618
2831:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 5781              		.loc 1 2831 5 is_stmt 1 view .LVU1851
2831:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 5782              		.loc 1 2831 8 is_stmt 0 view .LVU1852
 5783 0382 622C     		cmp	r4, #98
 5784 0384 07D0     		beq	.L621
2832:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5785              		.loc 1 2832 7 is_stmt 1 view .LVU1853
2832:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5786              		.loc 1 2832 15 is_stmt 0 view .LVU1854
 5787 0386 8F4B     		ldr	r3, .L1250+12
2834:src/keys.c    ****     }
 5788              		.loc 1 2834 14 view .LVU1855
 5789 0388 8F4A     		ldr	r2, .L1250+16
2832:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5790              		.loc 1 2832 17 view .LVU1856
 5791 038a 0134     		adds	r4, r4, #1
 5792              	.LVL477:
2834:src/keys.c    ****     }
 5793              		.loc 1 2834 14 view .LVU1857
 5794 038c 0121     		movs	r1, #1
2832:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5795              		.loc 1 2832 15 view .LVU1858
 5796 038e DC74     		strb	r4, [r3, #19]
2833:src/keys.c    ****       GoFast = 1;
 5797              		.loc 1 2833 7 is_stmt 1 view .LVU1859
2833:src/keys.c    ****       GoFast = 1;
 5798              		.loc 1 2833 13 is_stmt 0 view .LVU1860
 5799 0390 0023     		movs	r3, #0
2834:src/keys.c    ****     }
 5800              		.loc 1 2834 14 view .LVU1861
 5801 0392 1160     		str	r1, [r2]
2833:src/keys.c    ****       GoFast = 1;
 5802              		.loc 1 2833 13 view .LVU1862
 5803 0394 3B70     		strb	r3, [r7]
2834:src/keys.c    ****     }
 5804              		.loc 1 2834 7 is_stmt 1 view .LVU1863
 5805              	.LVL478:
 5806              	.L621:
2834:src/keys.c    ****     }
 5807              		.loc 1 2834 7 is_stmt 0 view .LVU1864
 5808              	.LBE653:
 5809              	.LBE652:
3204:src/keys.c    ****       break;
 5810              		.loc 1 3204 7 is_stmt 1 view .LVU1865
ARM GAS  /tmp/ccihcwFT.s 			page 189


 5811 0396 FFF7FEFF 		bl	xeqprog
 5812              	.LVL479:
3205:src/keys.c    **** 
 5813              		.loc 1 3205 7 view .LVU1866
 5814 039a 3268     		ldr	r2, [r6]
2997:src/keys.c    ****   if (was_paused && Pause == 0)
 5815              		.loc 1 2997 7 is_stmt 0 view .LVU1867
 5816 039c 0025     		movs	r5, #0
3205:src/keys.c    **** 
 5817              		.loc 1 3205 7 view .LVU1868
 5818 039e 4FF0310B 		mov	fp, #49
 5819              	.LVL480:
3244:src/keys.c    **** #ifndef CONSOLE
 5820              		.loc 1 3244 3 is_stmt 1 view .LVU1869
3244:src/keys.c    **** #ifndef CONSOLE
 5821              		.loc 1 3244 6 is_stmt 0 view .LVU1870
 5822 03a2 002A     		cmp	r2, #0
 5823 03a4 3FF488AE 		beq	.L627
 5824              	.L1144:
3244:src/keys.c    **** #ifndef CONSOLE
 5825              		.loc 1 3244 6 view .LVU1871
 5826 03a8 884C     		ldr	r4, .L1250+20
3257:src/keys.c    ****   watchdog();
 5827              		.loc 1 3257 3 is_stmt 1 view .LVU1872
3257:src/keys.c    ****   watchdog();
 5828              		.loc 1 3257 17 is_stmt 0 view .LVU1873
 5829 03aa 0023     		movs	r3, #0
 5830 03ac 2360     		str	r3, [r4]
3258:src/keys.c    **** }
 5831              		.loc 1 3258 13 is_stmt 1 view .LVU1874
 5832 03ae A9E6     		b	.L580
 5833              	.LVL481:
 5834              	.L1149:
3008:src/keys.c    ****     }
 5835              		.loc 1 3008 7 view .LVU1875
3156:src/keys.c    **** #ifdef DM42
 5836              		.loc 1 3156 15 is_stmt 0 view .LVU1876
 5837 03b0 874E     		ldr	r6, .L1250+24
3156:src/keys.c    **** #ifdef DM42
 5838              		.loc 1 3156 13 view .LVU1877
 5839 03b2 8849     		ldr	r1, .L1250+28
3156:src/keys.c    **** #ifdef DM42
 5840              		.loc 1 3156 15 view .LVU1878
 5841 03b4 3368     		ldr	r3, [r6]
3008:src/keys.c    ****     }
 5842              		.loc 1 3008 14 view .LVU1879
 5843 03b6 884A     		ldr	r2, .L1250+32
3155:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5844              		.loc 1 3155 18 view .LVU1880
 5845 03b8 DFF83492 		ldr	r9, .L1250+56
3156:src/keys.c    **** #ifdef DM42
 5846              		.loc 1 3156 15 view .LVU1881
 5847 03bc B3FA83F3 		clz	r3, r3
 5848 03c0 5B09     		lsrs	r3, r3, #5
3156:src/keys.c    **** #ifdef DM42
 5849              		.loc 1 3156 13 view .LVU1882
 5850 03c2 0B60     		str	r3, [r1]
ARM GAS  /tmp/ccihcwFT.s 			page 190


3008:src/keys.c    ****     }
 5851              		.loc 1 3008 14 view .LVU1883
 5852 03c4 0023     		movs	r3, #0
 5853 03c6 1360     		str	r3, [r2]
3105:src/keys.c    ****     {
 5854              		.loc 1 3105 3 is_stmt 1 view .LVU1884
3155:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5855              		.loc 1 3155 5 view .LVU1885
3155:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5856              		.loc 1 3155 18 is_stmt 0 view .LVU1886
 5857 03c8 C9F80030 		str	r3, [r9]
3156:src/keys.c    **** #ifdef DM42
 5858              		.loc 1 3156 5 is_stmt 1 view .LVU1887
3158:src/keys.c    ****       c = process(c);		// returns an op-code or state
 5859              		.loc 1 3158 5 view .LVU1888
 5860 03cc D1E6     		b	.L583
 5861              	.L601:
3158:src/keys.c    ****       c = process(c);		// returns an op-code or state
 5862              		.loc 1 3158 5 is_stmt 0 view .LVU1889
 5863 03ce 804E     		ldr	r6, .L1250+24
3156:src/keys.c    **** #ifdef DM42
 5864              		.loc 1 3156 13 view .LVU1890
 5865 03d0 8049     		ldr	r1, .L1250+28
 5866 03d2 3268     		ldr	r2, [r6]
3155:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5867              		.loc 1 3155 5 is_stmt 1 view .LVU1891
3155:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5868              		.loc 1 3155 18 is_stmt 0 view .LVU1892
 5869 03d4 DFF81892 		ldr	r9, .L1250+56
3156:src/keys.c    **** #ifdef DM42
 5870              		.loc 1 3156 15 view .LVU1893
 5871 03d8 B2FA82F3 		clz	r3, r2
 5872 03dc 5B09     		lsrs	r3, r3, #5
3158:src/keys.c    ****       c = process(c);		// returns an op-code or state
 5873              		.loc 1 3158 8 view .LVU1894
 5874 03de 342C     		cmp	r4, #52
3156:src/keys.c    **** #ifdef DM42
 5875              		.loc 1 3156 13 view .LVU1895
 5876 03e0 0B60     		str	r3, [r1]
3155:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5877              		.loc 1 3155 18 view .LVU1896
 5878 03e2 C9F80050 		str	r5, [r9]
3156:src/keys.c    **** #ifdef DM42
 5879              		.loc 1 3156 5 is_stmt 1 view .LVU1897
3158:src/keys.c    ****       c = process(c);		// returns an op-code or state
 5880              		.loc 1 3158 5 view .LVU1898
3158:src/keys.c    ****       c = process(c);		// returns an op-code or state
 5881              		.loc 1 3158 8 is_stmt 0 view .LVU1899
 5882 03e6 7FF4C4AE 		bne	.L583
3162:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 5883              		.loc 1 3162 7 is_stmt 1 view .LVU1900
3162:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 5884              		.loc 1 3162 11 is_stmt 0 view .LVU1901
 5885 03ea 7C4B     		ldr	r3, .L1250+36
 5886 03ec 1868     		ldr	r0, [r3]
3162:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 5887              		.loc 1 3162 10 view .LVU1902
ARM GAS  /tmp/ccihcwFT.s 			page 191


 5888 03ee 10F47043 		ands	r3, r0, #61440
 5889 03f2 1FD0     		beq	.L899
3162:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 5890              		.loc 1 3162 11 discriminator 1 view .LVU1903
 5891 03f4 B3F5704F 		cmp	r3, #61440
 5892              	.LBB1272:
3163:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 5893              		.loc 1 3163 28 discriminator 1 view .LVU1904
 5894 03f8 C0F30723 		ubfx	r3, r0, #8, #8
 5895              	.LBE1272:
3162:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 5896              		.loc 1 3162 11 discriminator 1 view .LVU1905
 5897 03fc 00F0AD80 		beq	.L900
 5898              	.LBB1275:
3163:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 5899              		.loc 1 3163 2 is_stmt 1 view .LVU1906
3163:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 5900              		.loc 1 3163 28 is_stmt 0 view .LVU1907
 5901 0400 A3F12004 		sub	r4, r3, #32
 5902              	.LVL482:
3163:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 5903              		.loc 1 3163 28 view .LVU1908
 5904 0404 E4B2     		uxtb	r4, r4
 5905              	.LVL483:
3164:src/keys.c    **** 	  c = nd_opcode;
 5906              		.loc 1 3164 2 is_stmt 1 view .LVU1909
3164:src/keys.c    **** 	  c = nd_opcode;
 5907              		.loc 1 3164 5 is_stmt 0 view .LVU1910
 5908 0406 012C     		cmp	r4, #1
 5909 0408 40F28980 		bls	.L901
3164:src/keys.c    **** 	  c = nd_opcode;
 5910              		.loc 1 3164 53 discriminator 1 view .LVU1911
 5911 040c 6C2C     		cmp	r4, #108
 5912 040e 00F08680 		beq	.L901
3164:src/keys.c    **** 	  c = nd_opcode;
 5913              		.loc 1 3164 74 discriminator 2 view .LVU1912
 5914 0412 242C     		cmp	r4, #36
 5915 0414 00F08380 		beq	.L901
3166:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 5916              		.loc 1 3166 7 is_stmt 1 view .LVU1913
3166:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 5917              		.loc 1 3166 32 is_stmt 0 view .LVU1914
 5918 0418 A4F12D01 		sub	r1, r4, #45
3166:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 5919              		.loc 1 3166 10 view .LVU1915
 5920 041c 0629     		cmp	r1, #6
 5921 041e 00F22183 		bhi	.L903
3167:src/keys.c    **** 	  c = STATE_UNFINISHED;
 5922              		.loc 1 3167 4 is_stmt 1 view .LVU1916
3167:src/keys.c    **** 	  c = STATE_UNFINISHED;
 5923              		.loc 1 3167 25 is_stmt 0 view .LVU1917
 5924 0422 4D3B     		subs	r3, r3, #77
3167:src/keys.c    **** 	  c = STATE_UNFINISHED;
 5925              		.loc 1 3167 16 view .LVU1918
 5926 0424 88F80F30 		strb	r3, [r8, #15]
3168:src/keys.c    **** 	}
 5927              		.loc 1 3168 4 is_stmt 1 view .LVU1919
ARM GAS  /tmp/ccihcwFT.s 			page 192


 5928              	.LVL484:
3168:src/keys.c    **** 	}
 5929              		.loc 1 3168 4 is_stmt 0 view .LVU1920
 5930              	.LBE1275:
3182:src/keys.c    ****     case STATE_SST:
 5931              		.loc 1 3182 5 is_stmt 1 view .LVU1921
 5932              	.LBB1276:
3168:src/keys.c    **** 	}
 5933              		.loc 1 3168 6 is_stmt 0 view .LVU1922
 5934 0428 4FF0330B 		mov	fp, #51
 5935 042c 41E6     		b	.L611
 5936              	.LVL485:
 5937              	.L1148:
3168:src/keys.c    **** 	}
 5938              		.loc 1 3168 6 view .LVU1923
 5939              	.LBE1276:
3003:src/keys.c    ****     }
 5940              		.loc 1 3003 7 is_stmt 1 view .LVU1924
 5941 042e FFF7FEFF 		bl	xeq_xrom
 5942              	.LVL486:
3003:src/keys.c    ****     }
 5943              		.loc 1 3003 7 is_stmt 0 view .LVU1925
 5944 0432 F1E5     		b	.L581
 5945              	.L899:
3176:src/keys.c    ****       }      
 5946              		.loc 1 3176 2 is_stmt 1 view .LVU1926
 5947              	.LBB1277:
 5948              	.LBB1278:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 5949              		.loc 1 625 5 is_stmt 0 view .LVU1927
 5950 0434 C0F30723 		ubfx	r3, r0, #8, #8
 5951 0438 012B     		cmp	r3, #1
 5952              	.LBE1278:
 5953              	.LBE1277:
3176:src/keys.c    ****       }      
 5954              		.loc 1 3176 6 view .LVU1928
 5955 043a 8346     		mov	fp, r0
 5956              	.LVL487:
 5957              	.LBB1282:
 5958              	.LBI1277:
 624:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 5959              		.loc 1 624 12 is_stmt 1 view .LVU1929
 5960              	.LBB1279:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 5961              		.loc 1 625 2 view .LVU1930
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 5962              		.loc 1 625 5 is_stmt 0 view .LVU1931
 5963 043c 00F09180 		beq	.L941
 5964              	.LVL488:
 5965              	.L641:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 5966              		.loc 1 625 5 view .LVU1932
 5967              	.LBE1279:
 5968              	.LBE1282:
3182:src/keys.c    ****     case STATE_SST:
 5969              		.loc 1 3182 5 is_stmt 1 view .LVU1933
 5970 0440 ABF12B03 		sub	r3, fp, #43
ARM GAS  /tmp/ccihcwFT.s 			page 193


 5971 0444 082B     		cmp	r3, #8
 5972 0446 00F2E580 		bhi	.L905
 5973 044a 01A2     		adr	r2, .L907
 5974 044c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5975              		.p2align 2
 5976              	.L907:
 5977 0450 7F040000 		.word	.L912+1
 5978 0454 7F040000 		.word	.L912+1
 5979 0458 15060000 		.word	.L905+1
 5980 045c ED040000 		.word	.L821+1
 5981 0460 DB040000 		.word	.L817+1
 5982 0464 05050000 		.word	.L814+1
 5983 0468 97030000 		.word	.L621+1
 5984 046c 9B050000 		.word	.L906+1
 5985 0470 9B050000 		.word	.L906+1
 5986              	.LVL489:
 5987              		.p2align 1
 5988              	.L1157:
3072:src/keys.c    ****       return;
 5989              		.loc 1 3072 21 is_stmt 0 discriminator 1 view .LVU1934
 5990 0474 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
3072:src/keys.c    ****       return;
 5991              		.loc 1 3072 18 discriminator 1 view .LVU1935
 5992 0476 002A     		cmp	r2, #0
 5993 0478 7FF471AE 		bne	.L597
 5994 047c 42E6     		b	.L580
 5995              	.LVL490:
 5996              	.L912:
3209:src/keys.c    **** 	set_window(c);
 5997              		.loc 1 3209 7 is_stmt 1 view .LVU1936
3209:src/keys.c    **** 	set_window(c);
 5998              		.loc 1 3209 12 is_stmt 0 view .LVU1937
 5999 047e FFF7FEFF 		bl	is_bad_cmdline
 6000              	.LVL491:
3209:src/keys.c    **** 	set_window(c);
 6001              		.loc 1 3209 10 view .LVU1938
 6002 0482 0546     		mov	r5, r0
 6003 0484 0028     		cmp	r0, #0
 6004 0486 00F0F481 		beq	.L916
 6005 048a 3268     		ldr	r2, [r6]
2997:src/keys.c    ****   if (was_paused && Pause == 0)
 6006              		.loc 1 2997 7 view .LVU1939
 6007 048c 0025     		movs	r5, #0
 6008 048e 10E6     		b	.L611
 6009              	.LVL492:
 6010              	.L1156:
3064:src/keys.c    ****       JustStopped = 0;
 6011              		.loc 1 3064 25 discriminator 1 view .LVU1940
 6012 0490 FFF7FEFF 		bl	is_key_pressed
 6013              	.LVL493:
3064:src/keys.c    ****       JustStopped = 0;
 6014              		.loc 1 3064 21 discriminator 1 view .LVU1941
 6015 0494 0028     		cmp	r0, #0
 6016 0496 7FF45DAE 		bne	.L595
3065:src/keys.c    ****     }
 6017              		.loc 1 3065 7 is_stmt 1 view .LVU1942
3065:src/keys.c    ****     }
ARM GAS  /tmp/ccihcwFT.s 			page 194


 6018              		.loc 1 3065 19 is_stmt 0 view .LVU1943
 6019 049a 2860     		str	r0, [r5]
 6020 049c 5AE6     		b	.L595
 6021              	.LVL494:
 6022              	.L618:
 6023              	.LBB1283:
 6024              	.LBB1221:
2822:src/keys.c    **** 	set_pc(0);
 6025              		.loc 1 2822 7 is_stmt 1 view .LVU1944
2822:src/keys.c    **** 	set_pc(0);
 6026              		.loc 1 2822 11 is_stmt 0 view .LVU1945
 6027 049e 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
2822:src/keys.c    **** 	set_pc(0);
 6028              		.loc 1 2822 10 view .LVU1946
 6029 04a0 4BB1     		cbz	r3, .L620
2822:src/keys.c    **** 	set_pc(0);
 6030              		.loc 1 2822 20 view .LVU1947
 6031 04a2 454B     		ldr	r3, .L1250
 6032 04a4 1B68     		ldr	r3, [r3]
 6033 04a6 B3F8E037 		ldrh	r3, [r3, #2016]
2822:src/keys.c    **** 	set_pc(0);
 6034              		.loc 1 2822 17 view .LVU1948
 6035 04aa 9B0B     		lsrs	r3, r3, #14
 6036 04ac 032B     		cmp	r3, #3
 6037 04ae 02D1     		bne	.L620
2823:src/keys.c    ****       Pause = 0;
 6038              		.loc 1 2823 2 is_stmt 1 view .LVU1949
 6039 04b0 0020     		movs	r0, #0
 6040 04b2 FFF7FEFF 		bl	set_pc
 6041              	.LVL495:
 6042              	.L620:
2824:src/keys.c    ****       xeq_xrom();
 6043              		.loc 1 2824 7 view .LVU1950
2824:src/keys.c    ****       xeq_xrom();
 6044              		.loc 1 2824 13 is_stmt 0 view .LVU1951
 6045 04b6 0025     		movs	r5, #0
 6046 04b8 3D70     		strb	r5, [r7]
2825:src/keys.c    ****       set_running_off();
 6047              		.loc 1 2825 7 is_stmt 1 view .LVU1952
 6048 04ba FFF7FEFF 		bl	xeq_xrom
 6049              	.LVL496:
2826:src/keys.c    ****       DispMsg = "Stopped";
 6050              		.loc 1 2826 7 view .LVU1953
 6051 04be FFF7FEFF 		bl	set_running_off
 6052              	.LVL497:
2827:src/keys.c    ****       State2.disp_freeze = 0;
 6053              		.loc 1 2827 7 view .LVU1954
2828:src/keys.c    ****       return STATE_UNFINISHED;
 6054              		.loc 1 2828 26 is_stmt 0 view .LVU1955
 6055 04c2 404B     		ldr	r3, .L1250+12
2827:src/keys.c    ****       State2.disp_freeze = 0;
 6056              		.loc 1 2827 15 view .LVU1956
 6057 04c4 4648     		ldr	r0, .L1250+40
2828:src/keys.c    ****       return STATE_UNFINISHED;
 6058              		.loc 1 2828 26 view .LVU1957
 6059 04c6 D97D     		ldrb	r1, [r3, #23]	@ zero_extendqisi2
2827:src/keys.c    ****       State2.disp_freeze = 0;
ARM GAS  /tmp/ccihcwFT.s 			page 195


 6060              		.loc 1 2827 15 view .LVU1958
 6061 04c8 464C     		ldr	r4, .L1250+44
 6062              	.LVL498:
2827:src/keys.c    ****       State2.disp_freeze = 0;
 6063              		.loc 1 2827 15 view .LVU1959
 6064 04ca 3268     		ldr	r2, [r6]
 6065 04cc 0460     		str	r4, [r0]
2828:src/keys.c    ****       return STATE_UNFINISHED;
 6066              		.loc 1 2828 7 is_stmt 1 view .LVU1960
2828:src/keys.c    ****       return STATE_UNFINISHED;
 6067              		.loc 1 2828 26 is_stmt 0 view .LVU1961
 6068 04ce 65F30411 		bfi	r1, r5, #4, #1
 6069 04d2 D975     		strb	r1, [r3, #23]
2829:src/keys.c    ****     }
 6070              		.loc 1 2829 7 is_stmt 1 view .LVU1962
2829:src/keys.c    ****     }
 6071              		.loc 1 2829 14 is_stmt 0 view .LVU1963
 6072 04d4 4FF0330B 		mov	fp, #51
 6073 04d8 EBE5     		b	.L611
 6074              	.LVL499:
 6075              	.L817:
2829:src/keys.c    ****     }
 6076              		.loc 1 2829 14 view .LVU1964
 6077              	.LBE1221:
 6078              	.LBE1283:
3190:src/keys.c    ****       break;
 6079              		.loc 1 3190 7 is_stmt 1 view .LVU1965
 6080 04da 4FF0FF30 		mov	r0, #-1
 6081 04de FFF7FEFF 		bl	xeq_sst_bst
 6082              	.LVL500:
3191:src/keys.c    **** 
 6083              		.loc 1 3191 7 view .LVU1966
2997:src/keys.c    ****   if (was_paused && Pause == 0)
 6084              		.loc 1 2997 7 is_stmt 0 view .LVU1967
 6085 04e2 0025     		movs	r5, #0
 6086 04e4 3268     		ldr	r2, [r6]
3191:src/keys.c    **** 
 6087              		.loc 1 3191 7 view .LVU1968
 6088 04e6 4FF02F0B 		mov	fp, #47
 6089 04ea E2E5     		b	.L611
 6090              	.L821:
3184:src/keys.c    ****       OpCodeDisplayPending = 0;
 6091              		.loc 1 3184 7 is_stmt 1 view .LVU1969
3185:src/keys.c    ****       xeq_sst_bst(0);
 6092              		.loc 1 3185 28 is_stmt 0 view .LVU1970
 6093 04ec 3E4A     		ldr	r2, .L1250+48
3184:src/keys.c    ****       OpCodeDisplayPending = 0;
 6094              		.loc 1 3184 14 view .LVU1971
 6095 04ee 3A49     		ldr	r1, .L1250+32
3185:src/keys.c    ****       xeq_sst_bst(0);
 6096              		.loc 1 3185 28 view .LVU1972
 6097 04f0 0020     		movs	r0, #0
3184:src/keys.c    ****       OpCodeDisplayPending = 0;
 6098              		.loc 1 3184 14 view .LVU1973
 6099 04f2 2E23     		movs	r3, #46
3185:src/keys.c    ****       xeq_sst_bst(0);
 6100              		.loc 1 3185 28 view .LVU1974
ARM GAS  /tmp/ccihcwFT.s 			page 196


 6101 04f4 1060     		str	r0, [r2]
3184:src/keys.c    ****       OpCodeDisplayPending = 0;
 6102              		.loc 1 3184 14 view .LVU1975
 6103 04f6 0B60     		str	r3, [r1]
3185:src/keys.c    ****       xeq_sst_bst(0);
 6104              		.loc 1 3185 7 is_stmt 1 view .LVU1976
3186:src/keys.c    ****       break;
 6105              		.loc 1 3186 7 view .LVU1977
3187:src/keys.c    **** 
 6106              		.loc 1 3187 7 is_stmt 0 view .LVU1978
 6107 04f8 9B46     		mov	fp, r3
2997:src/keys.c    ****   if (was_paused && Pause == 0)
 6108              		.loc 1 2997 7 view .LVU1979
 6109 04fa 0546     		mov	r5, r0
3186:src/keys.c    ****       break;
 6110              		.loc 1 3186 7 view .LVU1980
 6111 04fc FFF7FEFF 		bl	xeq_sst_bst
 6112              	.LVL501:
3187:src/keys.c    **** 
 6113              		.loc 1 3187 7 is_stmt 1 view .LVU1981
 6114 0500 3268     		ldr	r2, [r6]
 6115 0502 D6E5     		b	.L611
 6116              	.L814:
3194:src/keys.c    **** 	delprog();
 6117              		.loc 1 3194 7 view .LVU1982
3194:src/keys.c    **** 	delprog();
 6118              		.loc 1 3194 11 is_stmt 0 view .LVU1983
 6119 0504 98F81650 		ldrb	r5, [r8, #22]	@ zero_extendqisi2
3194:src/keys.c    **** 	delprog();
 6120              		.loc 1 3194 10 view .LVU1984
 6121 0508 6C06     		lsls	r4, r5, #25
 6122 050a 40F12B81 		bpl	.L913
3196:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 6123              		.loc 1 3196 12 is_stmt 1 view .LVU1985
3196:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 6124              		.loc 1 3196 15 is_stmt 0 view .LVU1986
 6125 050e 15F00805 		ands	r5, r5, #8
 6126 0512 40F09680 		bne	.L914
 6127 0516 3268     		ldr	r2, [r6]
 6128 0518 4FF0300B 		mov	fp, #48
 6129 051c C9E5     		b	.L611
 6130              	.LVL502:
 6131              	.L901:
 6132              	.LBB1284:
3165:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
 6133              		.loc 1 3165 4 is_stmt 1 view .LVU1987
 6134 051e 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3165:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
 6135              		.loc 1 3165 6 is_stmt 0 view .LVU1988
 6136 0522 8346     		mov	fp, r0
 6137              	.LVL503:
 6138              	.L668:
3165:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
 6139              		.loc 1 3165 6 view .LVU1989
 6140              	.LBE1284:
3218:src/keys.c    **** 	NonProgrammable = 0;
 6141              		.loc 1 3218 7 is_stmt 1 view .LVU1990
ARM GAS  /tmp/ccihcwFT.s 			page 197


3218:src/keys.c    **** 	NonProgrammable = 0;
 6142              		.loc 1 3218 10 is_stmt 0 view .LVU1991
 6143 0524 5906     		lsls	r1, r3, #25
 6144 0526 00F1BA81 		bmi	.L1182
 6145              	.L934:
3218:src/keys.c    **** 	NonProgrammable = 0;
 6146              		.loc 1 3218 26 view .LVU1992
 6147 052a 304B     		ldr	r3, .L1250+52
 6148 052c 1A68     		ldr	r2, [r3]
 6149 052e 002A     		cmp	r2, #0
 6150 0530 41F0BE84 		bne	.L1183
 6151              	.LVL504:
 6152              	.L922:
3240:src/keys.c    ****       }
 6153              		.loc 1 3240 2 is_stmt 1 view .LVU1993
 6154 0534 FFF7FEFF 		bl	stoprog
 6155              	.LVL505:
2997:src/keys.c    ****   if (was_paused && Pause == 0)
 6156              		.loc 1 2997 7 is_stmt 0 view .LVU1994
 6157 0538 0025     		movs	r5, #0
 6158 053a 3268     		ldr	r2, [r6]
 6159 053c B9E5     		b	.L611
 6160              	.LVL506:
 6161              	.L1152:
2997:src/keys.c    ****   if (was_paused && Pause == 0)
 6162              		.loc 1 2997 7 view .LVU1995
 6163 053e 244E     		ldr	r6, .L1250+24
 6164 0540 3368     		ldr	r3, [r6]
 6165 0542 0CE6     		b	.L597
 6166              	.L1151:
3086:src/keys.c    ****       finish_RPN(); // RPN
 6167              		.loc 1 3086 7 is_stmt 1 view .LVU1996
 6168 0544 8D20     		movs	r0, #141
 6169 0546 FFF7FEFF 		bl	clr_dot
 6170              	.LVL507:
3087:src/keys.c    ****     }
 6171              		.loc 1 3087 7 view .LVU1997
 6172 054a FFF7FEFF 		bl	finish_RPN
 6173              	.LVL508:
 6174 054e 7AE5     		b	.L599
 6175              	.LVL509:
 6176              	.L610:
3147:src/keys.c    ****     }
 6177              		.loc 1 3147 7 view .LVU1998
 6178 0550 FFF7FEFF 		bl	finish_RPN
 6179              	.LVL510:
2997:src/keys.c    ****   if (was_paused && Pause == 0)
 6180              		.loc 1 2997 7 is_stmt 0 view .LVU1999
 6181 0554 0025     		movs	r5, #0
 6182 0556 3268     		ldr	r2, [r6]
 6183 0558 ABE5     		b	.L611
 6184              	.LVL511:
 6185              	.L900:
3176:src/keys.c    ****       }      
 6186              		.loc 1 3176 2 is_stmt 1 view .LVU2000
 6187              	.LBB1285:
 6188              	.LBB1280:
ARM GAS  /tmp/ccihcwFT.s 			page 198


 625:src/keys.c    **** 		const int nilop = argKIND(op);
 6189              		.loc 1 625 5 is_stmt 0 view .LVU2001
 6190 055a 012B     		cmp	r3, #1
 6191              	.LBE1280:
 6192              	.LBE1285:
3176:src/keys.c    ****       }      
 6193              		.loc 1 3176 6 view .LVU2002
 6194 055c 8346     		mov	fp, r0
 6195              	.LVL512:
 6196              	.LBB1286:
 624:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 6197              		.loc 1 624 12 is_stmt 1 view .LVU2003
 6198              	.LBB1281:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 6199              		.loc 1 625 2 view .LVU2004
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 6200              		.loc 1 625 5 is_stmt 0 view .LVU2005
 6201 055e 40F08280 		bne	.L1184
 6202              	.LVL513:
 6203              	.L941:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 6204              		.loc 1 625 5 view .LVU2006
 6205 0562 FFF7FEFF 		bl	check_confirm.part.0
 6206              	.LVL514:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 6207              		.loc 1 625 5 view .LVU2007
 6208 0566 8346     		mov	fp, r0
 6209              	.LVL515:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 6210              		.loc 1 625 5 view .LVU2008
 6211 0568 6AE7     		b	.L641
 6212              	.LVL516:
 6213              	.L602:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 6214              		.loc 1 625 5 view .LVU2009
 6215              	.LBE1281:
 6216              	.LBE1286:
3128:src/keys.c    **** #ifndef CONSOLE
 6217              		.loc 1 3128 7 is_stmt 1 view .LVU2010
 6218 056a 1A4B     		ldr	r3, .L1250+28
 6219 056c 8D20     		movs	r0, #141
 6220 056e 1968     		ldr	r1, [r3]
 6221 0570 FFF7FEFF 		bl	dot
 6222              	.LVL517:
3130:src/keys.c    **** 	if (!WasDataEntry) {
 6223              		.loc 1 3130 7 view .LVU2011
3130:src/keys.c    **** 	if (!WasDataEntry) {
 6224              		.loc 1 3130 11 is_stmt 0 view .LVU2012
 6225 0574 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3130:src/keys.c    **** 	if (!WasDataEntry) {
 6226              		.loc 1 3130 10 view .LVU2013
 6227 0578 9806     		lsls	r0, r3, #26
 6228 057a 3FF5C3AD 		bmi	.L580
3131:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 6229              		.loc 1 3131 2 is_stmt 1 view .LVU2014
3131:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 6230              		.loc 1 3131 6 is_stmt 0 view .LVU2015
ARM GAS  /tmp/ccihcwFT.s 			page 199


 6231 057e 1C4B     		ldr	r3, .L1250+56
3131:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 6232              		.loc 1 3131 5 view .LVU2016
 6233 0580 1B68     		ldr	r3, [r3]
 6234 0582 002B     		cmp	r3, #0
 6235 0584 40F08681 		bne	.L613
3133:src/keys.c    **** 	}
 6236              		.loc 1 3133 4 is_stmt 1 view .LVU2017
 6237              		.loc 1 3259 1 is_stmt 0 view .LVU2018
 6238 0588 03B0     		add	sp, sp, #12
 6239              		.cfi_remember_state
 6240              		.cfi_def_cfa_offset 36
 6241              		@ sp needed
 6242 058a BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6243              		.cfi_restore 14
 6244              		.cfi_restore 11
 6245              		.cfi_restore 10
 6246              		.cfi_restore 9
 6247              		.cfi_restore 8
 6248              		.cfi_restore 7
 6249              		.cfi_restore 6
 6250              		.cfi_restore 5
 6251              		.cfi_restore 4
 6252              		.cfi_def_cfa_offset 0
3133:src/keys.c    **** 	}
 6253              		.loc 1 3133 4 view .LVU2019
 6254 058e FFF7FEBF 		b	display
 6255              	.LVL518:
 6256              	.L1153:
 6257              		.cfi_restore_state
3116:src/keys.c    ****       else {
 6258              		.loc 1 3116 2 is_stmt 1 view .LVU2020
 6259 0592 FFF7FEFF 		bl	xeq_sst_bst
 6260              	.LVL519:
 6261 0596 0E4E     		ldr	r6, .L1250+24
 6262 0598 81E5     		b	.L604
 6263              	.LVL520:
 6264              	.L906:
3116:src/keys.c    ****       else {
 6265              		.loc 1 3116 2 is_stmt 0 view .LVU2021
 6266 059a 3268     		ldr	r2, [r6]
2997:src/keys.c    ****   if (was_paused && Pause == 0)
 6267              		.loc 1 2997 7 view .LVU2022
 6268 059c 0025     		movs	r5, #0
 6269 059e 88E5     		b	.L611
 6270              	.LVL521:
 6271              	.L1155:
3049:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 6272              		.loc 1 3049 28 discriminator 1 view .LVU2023
 6273 05a0 FFF7FEFF 		bl	shift_down
 6274              	.LVL522:
3049:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 6275              		.loc 1 3049 25 discriminator 1 view .LVU2024
 6276 05a4 0028     		cmp	r0, #0
 6277 05a6 3FF4D0AD 		beq	.L586
3051:src/keys.c    ****       }
 6278              		.loc 1 3051 2 is_stmt 1 view .LVU2025
ARM GAS  /tmp/ccihcwFT.s 			page 200


3051:src/keys.c    ****       }
 6279              		.loc 1 3051 16 is_stmt 0 view .LVU2026
 6280 05aa 064B     		ldr	r3, .L1250+12
 6281 05ac 0022     		movs	r2, #0
 6282 05ae 1A74     		strb	r2, [r3, #16]
 6283 05b0 CBE5     		b	.L586
 6284              	.L1154:
3051:src/keys.c    ****       }
 6285              		.loc 1 3051 16 view .LVU2027
 6286 05b2 074E     		ldr	r6, .L1250+24
 6287 05b4 73E5     		b	.L604
 6288              	.L1251:
 6289 05b6 00BF     		.align	2
 6290              	.L1250:
 6291 05b8 00000000 		.word	main_ram
 6292 05bc 00000000 		.word	.LANCHOR18
 6293 05c0 00000000 		.word	.LANCHOR22
 6294 05c4 00000000 		.word	StateWhileOn
 6295 05c8 00000000 		.word	GoFast
 6296 05cc 00000000 		.word	JustDisplayed
 6297 05d0 00000000 		.word	Running
 6298 05d4 00000000 		.word	ShowRPN
 6299 05d8 00000000 		.word	OpCode
 6300 05dc 00000000 		.word	nd_opcode
 6301 05e0 00000000 		.word	DispMsg
 6302 05e4 0C000000 		.word	.LC2
 6303 05e8 00000000 		.word	OpCodeDisplayPending
 6304 05ec 00000000 		.word	NonProgrammable
 6305 05f0 00000000 		.word	WasDataEntry
 6306              	.L589:
3039:src/keys.c    **** 	  /*
 6307              		.loc 1 3039 10 is_stmt 1 view .LVU2028
3039:src/keys.c    **** 	  /*
 6308              		.loc 1 3039 14 is_stmt 0 view .LVU2029
 6309 05f4 FFF7FEFF 		bl	keyticks
 6310              	.LVL523:
3039:src/keys.c    **** 	  /*
 6311              		.loc 1 3039 13 view .LVU2030
 6312 05f8 0C28     		cmp	r0, #12
 6313 05fa 7FF7A1AD 		ble	.L588
3043:src/keys.c    **** 	  message("NULL", CNULL);
 6314              		.loc 1 3043 4 is_stmt 1 view .LVU2031
3044:src/keys.c    **** 	  // Force display update on key-up
 6315              		.loc 1 3044 4 is_stmt 0 view .LVU2032
 6316 05fe AB48     		ldr	r0, .L1252
3043:src/keys.c    **** 	  message("NULL", CNULL);
 6317              		.loc 1 3043 11 view .LVU2033
 6318 0600 2E60     		str	r6, [r5]
3044:src/keys.c    **** 	  // Force display update on key-up
 6319              		.loc 1 3044 4 is_stmt 1 view .LVU2034
 6320 0602 3146     		mov	r1, r6
 6321 0604 FFF7FEFF 		bl	message
 6322              	.LVL524:
3046:src/keys.c    **** 	}
 6323              		.loc 1 3046 4 view .LVU2035
3046:src/keys.c    **** 	}
 6324              		.loc 1 3046 21 is_stmt 0 view .LVU2036
ARM GAS  /tmp/ccihcwFT.s 			page 201


 6325 0608 A94B     		ldr	r3, .L1252+4
 6326 060a DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 6327 060c 66F34512 		bfi	r2, r6, #5, #1
 6328 0610 DA75     		strb	r2, [r3, #23]
 6329 0612 95E5     		b	.L588
 6330              	.LVL525:
 6331              	.L905:
3218:src/keys.c    **** 	NonProgrammable = 0;
 6332              		.loc 1 3218 11 view .LVU2037
 6333 0614 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 6334 0618 A64A     		ldr	r2, .L1252+8
3218:src/keys.c    **** 	NonProgrammable = 0;
 6335              		.loc 1 3218 10 view .LVU2038
 6336 061a 5B06     		lsls	r3, r3, #25
 6337 061c 5846     		mov	r0, fp
 6338              	.LVL526:
3218:src/keys.c    **** 	NonProgrammable = 0;
 6339              		.loc 1 3218 7 is_stmt 1 view .LVU2039
3218:src/keys.c    **** 	NonProgrammable = 0;
 6340              		.loc 1 3218 10 is_stmt 0 view .LVU2040
 6341 061e 41F18582 		bpl	.L1136
 6342              	.L921:
 6343              	.LVL527:
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6344              		.loc 1 3219 2 is_stmt 1 view .LVU2041
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6345              		.loc 1 3219 18 is_stmt 0 view .LVU2042
 6346 0622 0023     		movs	r3, #0
3220:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6347              		.loc 1 3220 5 view .LVU2043
 6348 0624 1428     		cmp	r0, #20
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6349              		.loc 1 3219 18 view .LVU2044
 6350 0626 1360     		str	r3, [r2]
3220:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6351              		.loc 1 3220 2 is_stmt 1 view .LVU2045
3220:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6352              		.loc 1 3220 5 is_stmt 0 view .LVU2046
 6353 0628 24D8     		bhi	.L918
3221:src/keys.c    **** 	    // Data entry key
 6354              		.loc 1 3221 4 is_stmt 1 view .LVU2047
3221:src/keys.c    **** 	    // Data entry key
 6355              		.loc 1 3221 7 is_stmt 0 view .LVU2048
 6356 062a BBF1000F 		cmp	fp, #0
 6357 062e 40F0CB80 		bne	.L920
3221:src/keys.c    **** 	    // Data entry key
 6358              		.loc 1 3221 38 discriminator 1 view .LVU2049
 6359 0632 FFF7FEFF 		bl	is_bad_cmdline
 6360              	.LVL528:
3221:src/keys.c    **** 	    // Data entry key
 6361              		.loc 1 3221 34 discriminator 1 view .LVU2050
 6362 0636 0028     		cmp	r0, #0
 6363 0638 00F03581 		beq	.L984
 6364 063c 3268     		ldr	r2, [r6]
2997:src/keys.c    ****   if (was_paused && Pause == 0)
 6365              		.loc 1 2997 7 view .LVU2051
 6366 063e 5D46     		mov	r5, fp
ARM GAS  /tmp/ccihcwFT.s 			page 202


 6367 0640 37E5     		b	.L611
 6368              	.L914:
 6369              	.LBB1287:
3197:src/keys.c    **** 	if (p > Alpha)
 6370              		.loc 1 3197 2 is_stmt 1 view .LVU2052
3197:src/keys.c    **** 	if (p > Alpha)
 6371              		.loc 1 3197 22 is_stmt 0 view .LVU2053
 6372 0642 9D4C     		ldr	r4, .L1252+12
 6373 0644 2068     		ldr	r0, [r4]
3197:src/keys.c    **** 	if (p > Alpha)
 6374              		.loc 1 3197 12 view .LVU2054
 6375 0646 0021     		movs	r1, #0
 6376 0648 00F5F660 		add	r0, r0, #1968
 6377 064c FFF7FEFF 		bl	find_char
 6378              	.LVL529:
3198:src/keys.c    **** 	  *--p = '\0';
 6379              		.loc 1 3198 8 view .LVU2055
 6380 0650 2368     		ldr	r3, [r4]
 6381              	.LVL530:
3198:src/keys.c    **** 	  *--p = '\0';
 6382              		.loc 1 3198 2 is_stmt 1 view .LVU2056
3198:src/keys.c    **** 	  *--p = '\0';
 6383              		.loc 1 3198 8 is_stmt 0 view .LVU2057
 6384 0652 03F5F663 		add	r3, r3, #1968
3198:src/keys.c    **** 	  *--p = '\0';
 6385              		.loc 1 3198 5 view .LVU2058
 6386 0656 9842     		cmp	r0, r3
 6387 0658 00F29B81 		bhi	.L915
 6388 065c 3268     		ldr	r2, [r6]
 6389              	.LBE1287:
2997:src/keys.c    ****   if (was_paused && Pause == 0)
 6390              		.loc 1 2997 7 view .LVU2059
 6391 065e 0025     		movs	r5, #0
 6392              	.LBB1288:
3198:src/keys.c    **** 	  *--p = '\0';
 6393              		.loc 1 3198 5 view .LVU2060
 6394 0660 4FF0300B 		mov	fp, #48
 6395 0664 25E5     		b	.L611
 6396              	.LVL531:
 6397              	.L1184:
3198:src/keys.c    **** 	  *--p = '\0';
 6398              		.loc 1 3198 5 view .LVU2061
 6399              	.LBE1288:
3218:src/keys.c    **** 	NonProgrammable = 0;
 6400              		.loc 1 3218 7 is_stmt 1 view .LVU2062
3218:src/keys.c    **** 	NonProgrammable = 0;
 6401              		.loc 1 3218 11 is_stmt 0 view .LVU2063
 6402 0666 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3218:src/keys.c    **** 	NonProgrammable = 0;
 6403              		.loc 1 3218 10 view .LVU2064
 6404 066a 5A06     		lsls	r2, r3, #25
 6405 066c 7FF55DAF 		bpl	.L934
 6406              	.LVL532:
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6407              		.loc 1 3219 2 is_stmt 1 view .LVU2065
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6408              		.loc 1 3219 18 is_stmt 0 view .LVU2066
ARM GAS  /tmp/ccihcwFT.s 			page 203


 6409 0670 904B     		ldr	r3, .L1252+8
 6410 0672 1D60     		str	r5, [r3]
3220:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6411              		.loc 1 3220 2 is_stmt 1 view .LVU2067
 6412              	.L918:
3233:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 6413              		.loc 1 3233 4 view .LVU2068
3233:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 6414              		.loc 1 3233 11 is_stmt 0 view .LVU2069
 6415 0674 914A     		ldr	r2, .L1252+16
3234:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 6416              		.loc 1 3234 25 view .LVU2070
 6417 0676 924B     		ldr	r3, .L1252+20
3233:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 6418              		.loc 1 3233 11 view .LVU2071
 6419 0678 1060     		str	r0, [r2]
3234:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 6420              		.loc 1 3234 4 is_stmt 1 view .LVU2072
3234:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 6421              		.loc 1 3234 25 is_stmt 0 view .LVU2073
 6422 067a 0122     		movs	r2, #1
 6423 067c 914C     		ldr	r4, .L1252+24
 6424 067e 1A60     		str	r2, [r3]
3235:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
 6425              		.loc 1 3235 4 is_stmt 1 view .LVU2074
 6426 0680 FFF7FEFF 		bl	finish_RPN
 6427              	.LVL533:
3236:src/keys.c    **** 	}
 6428              		.loc 1 3236 4 view .LVU2075
 6429 0684 3CE5     		b	.L924
 6430              	.LVL534:
 6431              	.L1181:
 6432              	.LBB1289:
 6433              	.LBB1222:
 6434              	.LBB696:
 6435              	.LBB681:
 734:src/keys.c    **** 	  case K00:
 6436              		.loc 1 734 4 view .LVU2076
 6437 0686 122C     		cmp	r4, #18
 6438 0688 0BD8     		bhi	.L877
 6439 068a DFE804F0 		tbb	[pc, r4]
 6440              	.L879:
 6441 068e C4       		.byte	(.L882-.L879)/2
 6442 068f B8       		.byte	(.L881-.L879)/2
 6443 0690 0A       		.byte	(.L877-.L879)/2
 6444 0691 8D       		.byte	(.L880-.L879)/2
 6445 0692 0A       		.byte	(.L877-.L879)/2
 6446 0693 0A       		.byte	(.L877-.L879)/2
 6447 0694 0A       		.byte	(.L877-.L879)/2
 6448 0695 0A       		.byte	(.L877-.L879)/2
 6449 0696 0A       		.byte	(.L877-.L879)/2
 6450 0697 0A       		.byte	(.L877-.L879)/2
 6451 0698 0A       		.byte	(.L877-.L879)/2
 6452 0699 0A       		.byte	(.L877-.L879)/2
 6453 069a 0A       		.byte	(.L877-.L879)/2
 6454 069b 0A       		.byte	(.L877-.L879)/2
 6455 069c 0A       		.byte	(.L877-.L879)/2
ARM GAS  /tmp/ccihcwFT.s 			page 204


 6456 069d 0A       		.byte	(.L877-.L879)/2
 6457 069e 0A       		.byte	(.L877-.L879)/2
 6458 069f 0A       		.byte	(.L877-.L879)/2
 6459 06a0 78       		.byte	(.L878-.L879)/2
 6460 06a1 00       		.p2align 1
 6461              	.L877:
 764:src/keys.c    **** 	  }
 6462              		.loc 1 764 12 view .LVU2077
 769:src/keys.c    **** #ifdef DM42
 6463              		.loc 1 769 2 view .LVU2078
 6464 06a2 033C     		subs	r4, r4, #3
 6465 06a4 2A2C     		cmp	r4, #42
 6466 06a6 3FF6CBAE 		bhi	.L641
 6467 06aa 01A1     		adr	r1, .L889
 6468 06ac 51F824F0 		ldr	pc, [r1, r4, lsl #2]
 6469              		.p2align 2
 6470              	.L889:
 6471 06b0 73070000 		.word	.L892+1
 6472 06b4 41040000 		.word	.L641+1
 6473 06b8 41040000 		.word	.L641+1
 6474 06bc 8B070000 		.word	.L887+1
 6475 06c0 8B070000 		.word	.L887+1
 6476 06c4 41040000 		.word	.L641+1
 6477 06c8 41040000 		.word	.L641+1
 6478 06cc 41040000 		.word	.L641+1
 6479 06d0 41040000 		.word	.L641+1
 6480 06d4 41040000 		.word	.L641+1
 6481 06d8 41040000 		.word	.L641+1
 6482 06dc 41040000 		.word	.L641+1
 6483 06e0 41040000 		.word	.L641+1
 6484 06e4 5D070000 		.word	.L891+1
 6485 06e8 41040000 		.word	.L641+1
 6486 06ec 8B070000 		.word	.L887+1
 6487 06f0 41040000 		.word	.L641+1
 6488 06f4 41040000 		.word	.L641+1
 6489 06f8 41040000 		.word	.L641+1
 6490 06fc 41040000 		.word	.L641+1
 6491 0700 41040000 		.word	.L641+1
 6492 0704 41040000 		.word	.L641+1
 6493 0708 41040000 		.word	.L641+1
 6494 070c 41040000 		.word	.L641+1
 6495 0710 41040000 		.word	.L641+1
 6496 0714 41040000 		.word	.L641+1
 6497 0718 41040000 		.word	.L641+1
 6498 071c 41040000 		.word	.L641+1
 6499 0720 41040000 		.word	.L641+1
 6500 0724 41040000 		.word	.L641+1
 6501 0728 41040000 		.word	.L641+1
 6502 072c 41040000 		.word	.L641+1
 6503 0730 41040000 		.word	.L641+1
 6504 0734 41040000 		.word	.L641+1
 6505 0738 41040000 		.word	.L641+1
 6506 073c 41040000 		.word	.L641+1
 6507 0740 41040000 		.word	.L641+1
 6508 0744 41040000 		.word	.L641+1
 6509 0748 41040000 		.word	.L641+1
 6510 074c 41040000 		.word	.L641+1
ARM GAS  /tmp/ccihcwFT.s 			page 205


 6511 0750 41040000 		.word	.L641+1
 6512 0754 EB070000 		.word	.L890+1
 6513 0758 2D080000 		.word	.L888+1
 6514              		.p2align 1
 6515              	.L891:
 826:src/keys.c    **** 			return STATE_UNFINISHED;
 6516              		.loc 1 826 3 view .LVU2079
 826:src/keys.c    **** 			return STATE_UNFINISHED;
 6517              		.loc 1 826 6 is_stmt 0 view .LVU2080
 6518 075c 9906     		lsls	r1, r3, #26
 6519 075e 65D4     		bmi	.L888
 828:src/keys.c    **** 			return op;
 6520              		.loc 1 828 3 is_stmt 1 view .LVU2081
 828:src/keys.c    **** 			return op;
 6521              		.loc 1 828 6 is_stmt 0 view .LVU2082
 6522 0760 5306     		lsls	r3, r2, #25
 6523 0762 67D4     		bmi	.L897
 6524              	.LVL535:
 6525              	.L913:
 828:src/keys.c    **** 			return op;
 6526              		.loc 1 828 6 view .LVU2083
 6527              	.LBE681:
 6528              	.LBE696:
 6529              	.LBE1222:
 6530              	.LBE1289:
3195:src/keys.c    ****       else if (State2.alphas) {
 6531              		.loc 1 3195 2 is_stmt 1 view .LVU2084
 6532 0764 FFF7FEFF 		bl	delprog
 6533              	.LVL536:
2997:src/keys.c    ****   if (was_paused && Pause == 0)
 6534              		.loc 1 2997 7 is_stmt 0 view .LVU2085
 6535 0768 0025     		movs	r5, #0
 6536 076a 3268     		ldr	r2, [r6]
 6537 076c 4FF0300B 		mov	fp, #48
 6538 0770 9FE4     		b	.L611
 6539              	.LVL537:
 6540              	.L892:
 6541              	.LBB1290:
 6542              	.LBB1223:
 6543              	.LBB697:
 6544              	.LBB682:
 776:src/keys.c    **** #else
 6545              		.loc 1 776 3 is_stmt 1 view .LVU2086
 776:src/keys.c    **** #else
 6546              		.loc 1 776 10 is_stmt 0 view .LVU2087
 6547 0772 5146     		mov	r1, r10
 6548 0774 0220     		movs	r0, #2
 6549 0776 FFF7FEFF 		bl	check_f_key
 6550              	.LVL538:
 6551 077a 8346     		mov	fp, r0
 6552 077c 60E6     		b	.L641
 6553              	.L878:
 760:src/keys.c    **** 	    if (intltr(15)) {
 6554              		.loc 1 760 6 is_stmt 1 view .LVU2088
 6555              	.LVL539:
 761:src/keys.c    **** 	      return op_int;
 6556              		.loc 1 761 6 view .LVU2089
ARM GAS  /tmp/ccihcwFT.s 			page 206


 761:src/keys.c    **** 	      return op_int;
 6557              		.loc 1 761 10 is_stmt 0 view .LVU2090
 6558 077e 0F20     		movs	r0, #15
 6559 0780 FFF7FEFF 		bl	intltr
 6560              	.LVL540:
 761:src/keys.c    **** 	      return op_int;
 6561              		.loc 1 761 9 view .LVU2091
 6562 0784 0028     		cmp	r0, #0
 6563 0786 41F0FE81 		bne	.L1185
 6564              	.LVL541:
 6565              	.L887:
 835:src/keys.c    **** 		break;
 6566              		.loc 1 835 3 is_stmt 1 view .LVU2092
 6567              	.LBB679:
 6568              	.LBI679:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 6569              		.loc 1 506 13 view .LVU2093
 6570              	.LBB680:
 507:src/keys.c    **** 		return;
 6571              		.loc 1 507 2 view .LVU2094
 507:src/keys.c    **** 		return;
 6572              		.loc 1 507 6 is_stmt 0 view .LVU2095
 6573 078a FFF7FEFF 		bl	is_bad_cmdline
 6574              	.LVL542:
 507:src/keys.c    **** 		return;
 6575              		.loc 1 507 5 view .LVU2096
 6576 078e 0446     		mov	r4, r0
 6577 0790 0028     		cmp	r0, #0
 6578 0792 41F00482 		bne	.L1186
 6579 0796 5FFA8AF0 		uxtb	r0, r10
 6580 079a FFF7FEFF 		bl	init_arg.part.0
 6581              	.LVL543:
 6582              	.LBE680:
 6583              	.LBE679:
 6584              	.LBE682:
 6585              	.LBE697:
 6586              	.LBE1223:
 6587              	.LBE1290:
2997:src/keys.c    ****   if (was_paused && Pause == 0)
 6588              		.loc 1 2997 7 view .LVU2097
 6589 079e 2546     		mov	r5, r4
 6590 07a0 3268     		ldr	r2, [r6]
 6591              	.LBB1291:
 6592              	.LBB1224:
 6593              	.LBB698:
 6594              	.LBB683:
 841:src/keys.c    **** }
 6595              		.loc 1 841 9 view .LVU2098
 6596 07a2 4FF0330B 		mov	fp, #51
 6597 07a6 84E4     		b	.L611
 6598              	.LVL544:
 6599              	.L880:
 752:src/keys.c    **** 	    if (intltr(12)) {
 6600              		.loc 1 752 6 is_stmt 1 view .LVU2099
 753:src/keys.c    **** 	      return op_int;
 6601              		.loc 1 753 6 view .LVU2100
 753:src/keys.c    **** 	      return op_int;
ARM GAS  /tmp/ccihcwFT.s 			page 207


 6602              		.loc 1 753 10 is_stmt 0 view .LVU2101
 6603 07a8 0C20     		movs	r0, #12
 6604 07aa FFF7FEFF 		bl	intltr
 6605              	.LVL545:
 753:src/keys.c    **** 	      return op_int;
 6606              		.loc 1 753 9 view .LVU2102
 6607 07ae 0028     		cmp	r0, #0
 6608 07b0 DFD0     		beq	.L892
 6609              	.LVL546:
 753:src/keys.c    **** 	      return op_int;
 6610              		.loc 1 753 9 view .LVU2103
 6611              	.LBE683:
 6612              	.LBE698:
 6613              	.LBE1224:
 6614              	.LBE1291:
3218:src/keys.c    **** 	NonProgrammable = 0;
 6615              		.loc 1 3218 7 is_stmt 1 view .LVU2104
3218:src/keys.c    **** 	NonProgrammable = 0;
 6616              		.loc 1 3218 11 is_stmt 0 view .LVU2105
 6617 07b2 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3218:src/keys.c    **** 	NonProgrammable = 0;
 6618              		.loc 1 3218 10 view .LVU2106
 6619 07b6 5D06     		lsls	r5, r3, #25
 6620 07b8 41F1CD81 		bpl	.L979
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6621              		.loc 1 3219 2 is_stmt 1 view .LVU2107
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6622              		.loc 1 3219 18 is_stmt 0 view .LVU2108
 6623 07bc 3D4B     		ldr	r3, .L1252+8
 6624 07be 0022     		movs	r2, #0
 6625              	.LBB1292:
 6626              	.LBB1225:
 6627              	.LBB699:
 6628              	.LBB684:
 754:src/keys.c    **** 	    }
 6629              		.loc 1 754 15 view .LVU2109
 6630 07c0 4FF0110B 		mov	fp, #17
 6631              	.LBE684:
 6632              	.LBE699:
 6633              	.LBE1225:
 6634              	.LBE1292:
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6635              		.loc 1 3219 18 view .LVU2110
 6636 07c4 1A60     		str	r2, [r3]
3220:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6637              		.loc 1 3220 2 is_stmt 1 view .LVU2111
3220:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6638              		.loc 1 3220 32 is_stmt 0 view .LVU2112
 6639 07c6 5846     		mov	r0, fp
 6640              	.LVL547:
 6641              	.L920:
3224:src/keys.c    **** #endif
 6642              		.loc 1 3224 6 is_stmt 1 view .LVU2113
3226:src/keys.c    **** 	    xeq(c);
 6643              		.loc 1 3226 37 is_stmt 0 view .LVU2114
 6644 07c8 98F81C50 		ldrb	r5, [r8, #28]	@ zero_extendqisi2
3224:src/keys.c    **** #endif
ARM GAS  /tmp/ccihcwFT.s 			page 208


 6645              		.loc 1 3224 19 view .LVU2115
 6646 07cc 0123     		movs	r3, #1
3226:src/keys.c    **** 	    xeq(c);
 6647              		.loc 1 3226 37 view .LVU2116
 6648 07ce B5FA85F5 		clz	r5, r5
3224:src/keys.c    **** #endif
 6649              		.loc 1 3224 19 view .LVU2117
 6650 07d2 C9F80030 		str	r3, [r9]
3226:src/keys.c    **** 	    xeq(c);
 6651              		.loc 1 3226 6 is_stmt 1 view .LVU2118
3227:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 6652              		.loc 1 3227 6 is_stmt 0 view .LVU2119
 6653 07d6 FFF7FEFF 		bl	xeq
 6654              	.LVL548:
3228:src/keys.c    **** 	  }
 6655              		.loc 1 3228 38 view .LVU2120
 6656 07da 98F81C00 		ldrb	r0, [r8, #28]	@ zero_extendqisi2
 6657 07de 3268     		ldr	r2, [r6]
3226:src/keys.c    **** 	    xeq(c);
 6658              		.loc 1 3226 37 view .LVU2121
 6659 07e0 6D09     		lsrs	r5, r5, #5
 6660              	.LVL549:
3227:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 6661              		.loc 1 3227 6 is_stmt 1 view .LVU2122
3228:src/keys.c    **** 	  }
 6662              		.loc 1 3228 6 view .LVU2123
3228:src/keys.c    **** 	  }
 6663              		.loc 1 3228 20 is_stmt 0 view .LVU2124
 6664 07e2 0028     		cmp	r0, #0
 6665 07e4 08BF     		it	eq
 6666 07e6 0125     		moveq	r5, #1
 6667              	.LVL550:
3228:src/keys.c    **** 	  }
 6668              		.loc 1 3228 20 view .LVU2125
 6669 07e8 63E4     		b	.L611
 6670              	.LVL551:
 6671              	.L890:
 6672              	.LBB1293:
 6673              	.LBB1226:
 6674              	.LBB700:
 6675              	.LBB685:
 800:src/keys.c    **** 			return STATE_UNFINISHED;
 6676              		.loc 1 800 3 is_stmt 1 view .LVU2126
 800:src/keys.c    **** 			return STATE_UNFINISHED;
 6677              		.loc 1 800 7 is_stmt 0 view .LVU2127
 6678 07ea FFF7FEFF 		bl	is_bad_cmdline
 6679              	.LVL552:
 800:src/keys.c    **** 			return STATE_UNFINISHED;
 6680              		.loc 1 800 6 view .LVU2128
 6681 07ee 0446     		mov	r4, r0
 6682 07f0 0028     		cmp	r0, #0
 6683 07f2 01F03C83 		beq	.L895
 6684 07f6 3268     		ldr	r2, [r6]
 801:src/keys.c    **** 		process_cmdline_set_lift();
 6685              		.loc 1 801 11 view .LVU2129
 6686 07f8 4FF0330B 		mov	fp, #51
 6687 07fc 59E4     		b	.L611
ARM GAS  /tmp/ccihcwFT.s 			page 209


 6688              	.L881:
 744:src/keys.c    **** 	    if (intltr(11)) {
 6689              		.loc 1 744 6 is_stmt 1 view .LVU2130
 6690              	.LVL553:
 745:src/keys.c    **** 	      return op;
 6691              		.loc 1 745 6 view .LVU2131
 745:src/keys.c    **** 	      return op;
 6692              		.loc 1 745 10 is_stmt 0 view .LVU2132
 6693 07fe 0B20     		movs	r0, #11
 6694 0800 FFF7FEFF 		bl	intltr
 6695              	.LVL554:
 745:src/keys.c    **** 	      return op;
 6696              		.loc 1 745 9 view .LVU2133
 6697 0804 0028     		cmp	r0, #0
 6698 0806 41F04783 		bne	.L884
 749:src/keys.c    **** 	    }
 6699              		.loc 1 749 8 is_stmt 1 view .LVU2134
 749:src/keys.c    **** 	    }
 6700              		.loc 1 749 15 is_stmt 0 view .LVU2135
 6701 080a 1021     		movs	r1, #16
 6702 080c 0120     		movs	r0, #1
 6703 080e FFF7FEFF 		bl	check_f_key
 6704              	.LVL555:
 6705 0812 8346     		mov	fp, r0
 6706 0814 14E6     		b	.L641
 6707              	.LVL556:
 6708              	.L882:
 736:src/keys.c    **** 	    if (intltr(10)) {
 6709              		.loc 1 736 6 is_stmt 1 view .LVU2136
 737:src/keys.c    **** 	      return op;
 6710              		.loc 1 737 6 view .LVU2137
 737:src/keys.c    **** 	      return op;
 6711              		.loc 1 737 10 is_stmt 0 view .LVU2138
 6712 0816 0A20     		movs	r0, #10
 6713 0818 FFF7FEFF 		bl	intltr
 6714              	.LVL557:
 737:src/keys.c    **** 	      return op;
 6715              		.loc 1 737 9 view .LVU2139
 6716 081c 0028     		cmp	r0, #0
 6717 081e 41F00C83 		bne	.L883
 741:src/keys.c    **** 	    }
 6718              		.loc 1 741 8 is_stmt 1 view .LVU2140
 741:src/keys.c    **** 	    }
 6719              		.loc 1 741 15 is_stmt 0 view .LVU2141
 6720 0822 0F21     		movs	r1, #15
 6721 0824 FFF7FEFF 		bl	check_f_key
 6722              	.LVL558:
 6723 0828 8346     		mov	fp, r0
 6724 082a 09E6     		b	.L641
 6725              	.LVL559:
 6726              	.L888:
 741:src/keys.c    **** 	    }
 6727              		.loc 1 741 15 view .LVU2142
 6728 082c 3268     		ldr	r2, [r6]
 841:src/keys.c    **** }
 6729              		.loc 1 841 9 view .LVU2143
 6730 082e 4FF0330B 		mov	fp, #51
ARM GAS  /tmp/ccihcwFT.s 			page 210


 6731 0832 3EE4     		b	.L611
 6732              	.L897:
 6733              	.LVL560:
 841:src/keys.c    **** }
 6734              		.loc 1 841 9 view .LVU2144
 6735              	.LBE685:
 6736              	.LBE700:
 6737              	.LBE1226:
 6738              	.LBE1293:
3182:src/keys.c    ****     case STATE_SST:
 6739              		.loc 1 3182 5 is_stmt 1 view .LVU2145
 6740 0834 AAF12B03 		sub	r3, r10, #43
 6741 0838 082B     		cmp	r3, #8
 6742 083a 17D8     		bhi	.L935
 6743 083c 01A2     		adr	r2, .L937
 6744 083e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6745 0842 00BF     		.p2align 2
 6746              	.L937:
 6747 0844 7F040000 		.word	.L912+1
 6748 0848 7F040000 		.word	.L912+1
 6749 084c 6D080000 		.word	.L935+1
 6750 0850 ED040000 		.word	.L821+1
 6751 0854 DB040000 		.word	.L817+1
 6752 0858 05050000 		.word	.L814+1
 6753 085c 97030000 		.word	.L621+1
 6754 0860 69080000 		.word	.L936+1
 6755 0864 69080000 		.word	.L936+1
 6756              		.p2align 1
 6757              	.L936:
 6758 0868 3268     		ldr	r2, [r6]
 6759 086a 22E4     		b	.L611
 6760              	.L935:
 6761 086c 114A     		ldr	r2, .L1252+8
 6762 086e 5046     		mov	r0, r10
 6763 0870 D7E6     		b	.L921
 6764              	.LVL561:
 6765              	.L916:
3210:src/keys.c    ****       break;
 6766              		.loc 1 3210 2 view .LVU2146
 6767 0872 5846     		mov	r0, fp
 6768 0874 FFF7FEFF 		bl	set_window
 6769              	.LVL562:
 6770 0878 3268     		ldr	r2, [r6]
 6771 087a 1AE4     		b	.L611
 6772              	.LVL563:
 6773              	.L590:
3033:src/keys.c    **** 	    DispMsg = TraceBuffer;
 6774              		.loc 1 3033 6 view .LVU2147
 6775 087c 124E     		ldr	r6, .L1252+28
 6776 087e 3146     		mov	r1, r6
 6777 0880 FFF7FEFF 		bl	prt
 6778              	.LVL564:
 6779 0884 2A46     		mov	r2, r5
 6780 0886 0146     		mov	r1, r0
 6781 0888 3046     		mov	r0, r6
 6782 088a FFF7FEFF 		bl	scopy_char
 6783              	.LVL565:
ARM GAS  /tmp/ccihcwFT.s 			page 211


3034:src/keys.c    **** 	  }
 6784              		.loc 1 3034 6 view .LVU2148
3034:src/keys.c    **** 	  }
 6785              		.loc 1 3034 14 is_stmt 0 view .LVU2149
 6786 088e 0F4B     		ldr	r3, .L1252+32
 6787 0890 1E60     		str	r6, [r3]
 6788 0892 50E4     		b	.L591
 6789              	.LVL566:
 6790              	.L613:
3136:src/keys.c    **** 	}
 6791              		.loc 1 3136 4 is_stmt 1 view .LVU2150
 6792              		.loc 1 3259 1 is_stmt 0 view .LVU2151
 6793 0894 03B0     		add	sp, sp, #12
 6794              		.cfi_remember_state
 6795              		.cfi_def_cfa_offset 36
 6796              		@ sp needed
 6797 0896 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6798              		.cfi_restore 14
 6799              		.cfi_restore 11
 6800              		.cfi_restore 10
 6801              		.cfi_restore 9
 6802              		.cfi_restore 8
 6803              		.cfi_restore 7
 6804              		.cfi_restore 6
 6805              		.cfi_restore 5
 6806              		.cfi_restore 4
 6807              		.cfi_def_cfa_offset 0
3136:src/keys.c    **** 	}
 6808              		.loc 1 3136 4 view .LVU2152
 6809 089a FFF7FEBF 		b	finish_RPN
 6810              	.LVL567:
 6811              	.L1182:
 6812              		.cfi_restore_state
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6813              		.loc 1 3219 2 is_stmt 1 view .LVU2153
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6814              		.loc 1 3219 18 is_stmt 0 view .LVU2154
 6815 089e 054B     		ldr	r3, .L1252+8
 6816 08a0 0022     		movs	r2, #0
 6817 08a2 1A60     		str	r2, [r3]
3220:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6818              		.loc 1 3220 2 is_stmt 1 view .LVU2155
 6819 08a4 E6E6     		b	.L918
 6820              	.LVL568:
 6821              	.L984:
3220:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6822              		.loc 1 3220 32 is_stmt 0 view .LVU2156
 6823 08a6 5846     		mov	r0, fp
 6824 08a8 8EE7     		b	.L920
 6825              	.L1253:
 6826 08aa 00BF     		.align	2
 6827              	.L1252:
 6828 08ac 04000000 		.word	.LC1
 6829 08b0 00000000 		.word	StateWhileOn
 6830 08b4 00000000 		.word	NonProgrammable
 6831 08b8 00000000 		.word	main_ram
 6832 08bc 00000000 		.word	OpCode
ARM GAS  /tmp/ccihcwFT.s 			page 212


 6833 08c0 00000000 		.word	OpCodeDisplayPending
 6834 08c4 00000000 		.word	JustDisplayed
 6835 08c8 00000000 		.word	TraceBuffer
 6836 08cc 00000000 		.word	DispMsg
 6837              	.LVL569:
 6838              	.L1160:
 6839              	.LBB1294:
 6840              	.LBB1227:
2871:src/keys.c    **** 
 6841              		.loc 1 2871 3 is_stmt 1 view .LVU2157
 6842              	.LBB701:
 6843              	.LBI701:
2480:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
 6844              		.loc 1 2480 12 view .LVU2158
 6845              	.LBB702:
2482:src/keys.c    **** #ifdef DM42
 6846              		.loc 1 2482 2 view .LVU2159
 6847 08d0 E4B2     		uxtb	r4, r4
 6848              	.LVL570:
2482:src/keys.c    **** #ifdef DM42
 6849              		.loc 1 2482 2 is_stmt 0 view .LVU2160
 6850 08d2 A4F10E03 		sub	r3, r4, #14
 6851 08d6 192B     		cmp	r3, #25
 6852 08d8 0ED8     		bhi	.L631
 6853 08da DFE803F0 		tbb	[pc, r3]
 6854              	.L633:
 6855 08de 14       		.byte	(.L634-.L633)/2
 6856 08df 0D       		.byte	(.L631-.L633)/2
 6857 08e0 14       		.byte	(.L634-.L633)/2
 6858 08e1 0D       		.byte	(.L631-.L633)/2
 6859 08e2 0D       		.byte	(.L631-.L633)/2
 6860 08e3 0D       		.byte	(.L631-.L633)/2
 6861 08e4 0D       		.byte	(.L631-.L633)/2
 6862 08e5 0D       		.byte	(.L631-.L633)/2
 6863 08e6 0D       		.byte	(.L631-.L633)/2
 6864 08e7 0D       		.byte	(.L631-.L633)/2
 6865 08e8 0D       		.byte	(.L631-.L633)/2
 6866 08e9 0D       		.byte	(.L631-.L633)/2
 6867 08ea 0D       		.byte	(.L631-.L633)/2
 6868 08eb 0D       		.byte	(.L631-.L633)/2
 6869 08ec 0D       		.byte	(.L631-.L633)/2
 6870 08ed 0D       		.byte	(.L631-.L633)/2
 6871 08ee 0D       		.byte	(.L631-.L633)/2
 6872 08ef 0D       		.byte	(.L631-.L633)/2
 6873 08f0 22       		.byte	(.L632-.L633)/2
 6874 08f1 0D       		.byte	(.L631-.L633)/2
 6875 08f2 0D       		.byte	(.L631-.L633)/2
 6876 08f3 0D       		.byte	(.L631-.L633)/2
 6877 08f4 0D       		.byte	(.L631-.L633)/2
 6878 08f5 0D       		.byte	(.L631-.L633)/2
 6879 08f6 0D       		.byte	(.L631-.L633)/2
 6880 08f7 22       		.byte	(.L632-.L633)/2
 6881              		.p2align 1
 6882              	.L631:
 6883 08f8 3268     		ldr	r2, [r6]
 6884              	.LBE702:
 6885              	.LBE701:
ARM GAS  /tmp/ccihcwFT.s 			page 213


2871:src/keys.c    **** 
 6886              		.loc 1 2871 10 view .LVU2161
 6887 08fa 4FF0330B 		mov	fp, #51
 6888 08fe FFF7D8BB 		b	.L611
 6889              	.L635:
 6890              	.LBB705:
 6891              	.LBB703:
2491:src/keys.c    **** 	  }
 6892              		.loc 1 2491 26 is_stmt 1 view .LVU2162
 6893 0902 FFF7FEFF 		bl	clpall
 6894              	.LVL571:
2491:src/keys.c    **** 	  }
 6895              		.loc 1 2491 36 view .LVU2163
 6896              	.L634:
2500:src/keys.c    **** 	  State2.digval = 0;
 6897              		.loc 1 2500 4 view .LVU2164
2500:src/keys.c    **** 	  State2.digval = 0;
 6898              		.loc 1 2500 19 is_stmt 0 view .LVU2165
 6899 0906 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
 6900 090a 3268     		ldr	r2, [r6]
 6901 090c 6FF30203 		bfc	r3, #0, #3
2501:src/keys.c    **** 	  break;
 6902              		.loc 1 2501 18 view .LVU2166
 6903 0910 0021     		movs	r1, #0
2500:src/keys.c    **** 	  State2.digval = 0;
 6904              		.loc 1 2500 19 view .LVU2167
 6905 0912 88F81430 		strb	r3, [r8, #20]
2501:src/keys.c    **** 	  break;
 6906              		.loc 1 2501 4 is_stmt 1 view .LVU2168
2501:src/keys.c    **** 	  break;
 6907              		.loc 1 2501 18 is_stmt 0 view .LVU2169
 6908 0916 A8F80810 		strh	r1, [r8, #8]	@ movhi
2502:src/keys.c    **** 	default:			// No state change
 6909              		.loc 1 2502 4 is_stmt 1 view .LVU2170
 6910              	.LBE703:
 6911              	.LBE705:
2871:src/keys.c    **** 
 6912              		.loc 1 2871 10 is_stmt 0 view .LVU2171
 6913 091a 4FF0330B 		mov	fp, #51
 6914              	.LBB706:
 6915              	.LBB704:
2502:src/keys.c    **** 	default:			// No state change
 6916              		.loc 1 2502 4 view .LVU2172
 6917 091e FFF7C8BB 		b	.L611
 6918              	.L632:
2487:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 6919              		.loc 1 2487 4 is_stmt 1 view .LVU2173
2487:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 6920              		.loc 1 2487 18 is_stmt 0 view .LVU2174
 6921 0922 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
 6922 0926 03F00703 		and	r3, r3, #7
 6923 092a 013B     		subs	r3, r3, #1
 6924 092c 032B     		cmp	r3, #3
 6925 092e EAD8     		bhi	.L634
 6926 0930 01A2     		adr	r2, .L636
 6927 0932 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6928 0936 00BF     		.p2align 2
ARM GAS  /tmp/ccihcwFT.s 			page 214


 6929              	.L636:
 6930 0938 55090000 		.word	.L639+1
 6931 093c 4F090000 		.word	.L638+1
 6932 0940 49090000 		.word	.L637+1
 6933 0944 03090000 		.word	.L635+1
 6934              		.p2align 1
 6935              	.L637:
2490:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 6936              		.loc 1 2490 26 is_stmt 1 view .LVU2175
 6937 0948 FFF7FEFF 		bl	clrprog
 6938              	.LVL572:
2490:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 6939              		.loc 1 2490 37 view .LVU2176
2490:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 6940              		.loc 1 2490 4 is_stmt 0 view .LVU2177
 6941 094c DBE7     		b	.L634
 6942              	.L638:
2489:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 6943              		.loc 1 2489 25 is_stmt 1 view .LVU2178
 6944 094e FFF7FEFF 		bl	reset
 6945              	.LVL573:
2489:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 6946              		.loc 1 2489 34 view .LVU2179
2489:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 6947              		.loc 1 2489 4 is_stmt 0 view .LVU2180
 6948 0952 D8E7     		b	.L634
 6949              	.L639:
2488:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 6950              		.loc 1 2488 25 is_stmt 1 view .LVU2181
 6951 0954 FFF7FEFF 		bl	clrall
 6952              	.LVL574:
2488:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 6953              		.loc 1 2488 35 view .LVU2182
2488:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 6954              		.loc 1 2488 4 is_stmt 0 view .LVU2183
 6955 0958 D5E7     		b	.L634
 6956              	.LVL575:
 6957              	.L1158:
2488:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 6958              		.loc 1 2488 4 view .LVU2184
 6959              	.LBE704:
 6960              	.LBE706:
2845:src/keys.c    **** #else
 6961              		.loc 1 2845 47 view .LVU2185
 6962 095a DFF89083 		ldr	r8, .L1254+32
 6963 095e 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
2845:src/keys.c    **** #else
 6964              		.loc 1 2845 36 view .LVU2186
 6965 0962 4AEA0302 		orr	r2, r10, r3
 6966 0966 12F0FF0F 		tst	r2, #255
 6967 096a 7FF41FAC 		bne	.L623
2845:src/keys.c    **** #else
 6968              		.loc 1 2845 76 view .LVU2187
 6969 096e D74A     		ldr	r2, .L1254
 6970 0970 D8F81430 		ldr	r3, [r8, #20]
 6971 0974 1A42     		tst	r2, r3
 6972 0976 7FF421AC 		bne	.L629
ARM GAS  /tmp/ccihcwFT.s 			page 215


2850:src/keys.c    ****       return STATE_UNFINISHED;
 6973              		.loc 1 2850 7 is_stmt 1 view .LVU2188
 6974 097a FFF7FEFF 		bl	soft_init_state
 6975              	.LVL576:
2851:src/keys.c    ****     }
 6976              		.loc 1 2851 7 view .LVU2189
2851:src/keys.c    ****     }
 6977              		.loc 1 2851 14 is_stmt 0 view .LVU2190
 6978 097e 4FF0330B 		mov	fp, #51
 6979 0982 3268     		ldr	r2, [r6]
 6980 0984 FFF795BB 		b	.L611
 6981              	.L1161:
2874:src/keys.c    **** 
 6982              		.loc 1 2874 3 is_stmt 1 view .LVU2191
2874:src/keys.c    **** 
 6983              		.loc 1 2874 10 is_stmt 0 view .LVU2192
 6984 0988 E0B2     		uxtb	r0, r4
 6985 098a FFF7FEFF 		bl	process_arg
 6986              	.LVL577:
 6987 098e 8346     		mov	fp, r0
 6988 0990 56E5     		b	.L641
 6989              	.LVL578:
 6990              	.L915:
2874:src/keys.c    **** 
 6991              		.loc 1 2874 10 view .LVU2193
 6992              	.LBE1227:
 6993              	.LBE1294:
 6994              	.LBB1295:
3199:src/keys.c    ****       }
 6995              		.loc 1 3199 4 is_stmt 1 view .LVU2194
3199:src/keys.c    ****       }
 6996              		.loc 1 3199 9 is_stmt 0 view .LVU2195
 6997 0992 0025     		movs	r5, #0
 6998 0994 00F8015C 		strb	r5, [r0, #-1]
 6999 0998 3268     		ldr	r2, [r6]
 7000 099a 4FF0300B 		mov	fp, #48
 7001 099e FFF788BB 		b	.L611
 7002              	.LVL579:
 7003              	.L1164:
3199:src/keys.c    ****       }
 7004              		.loc 1 3199 9 view .LVU2196
 7005              	.LBE1295:
 7006              	.LBB1296:
 7007              	.LBB1228:
2883:src/keys.c    **** 
 7008              		.loc 1 2883 3 is_stmt 1 view .LVU2197
 7009              	.LBB707:
 7010              	.LBI707:
1946:src/keys.c    **** 	int r = State2.test;
 7011              		.loc 1 1946 12 view .LVU2198
 7012              	.LBB708:
1947:src/keys.c    **** 	int cmpx = State2.cmplx;
 7013              		.loc 1 1947 2 view .LVU2199
1948:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 7014              		.loc 1 1948 2 view .LVU2200
 7015              	.LBB709:
 7016              	.LBB710:
ARM GAS  /tmp/ccihcwFT.s 			page 216


 7017              	.LBB711:
 7018              	.LBB712:
 133:src/keys.c    **** }
 7019              		.loc 1 133 23 is_stmt 0 view .LVU2201
 7020 09a2 CB4A     		ldr	r2, .L1254+4
 7021              	.LBE712:
 7022              	.LBE711:
 224:src/keys.c    **** }
 7023              		.loc 1 224 28 view .LVU2202
 7024 09a4 DFF82CC3 		ldr	ip, .L1254+8
 7025              	.LBB716:
 7026              	.LBB713:
 133:src/keys.c    **** }
 7027              		.loc 1 133 23 view .LVU2203
 7028 09a8 E4B2     		uxtb	r4, r4
 7029              	.LVL580:
 133:src/keys.c    **** }
 7030              		.loc 1 133 23 view .LVU2204
 7031              	.LBE713:
 7032              	.LBE716:
 7033              	.LBE710:
 7034              	.LBE709:
1950:src/keys.c    **** 
 7035              		.loc 1 1950 44 view .LVU2205
 7036 09aa 11F0020F 		tst	r1, #2
 7037              	.LBB721:
 7038              	.LBB719:
 7039              	.LBB717:
 7040              	.LBB714:
 133:src/keys.c    **** }
 7041              		.loc 1 133 23 view .LVU2206
 7042 09ae 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 7043              	.LBE714:
 7044              	.LBE717:
 224:src/keys.c    **** }
 7045              		.loc 1 224 28 view .LVU2207
 7046 09b0 1CF802C0 		ldrb	ip, [ip, r2]	@ zero_extendqisi2
 7047              	.LBE719:
 7048              	.LBE721:
1948:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 7049              		.loc 1 1948 19 view .LVU2208
 7050 09b4 C1F3400E 		ubfx	lr, r1, #1, #1
 7051              	.LVL581:
1949:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 7052              		.loc 1 1949 2 is_stmt 1 view .LVU2209
 7053              	.LBB722:
 7054              	.LBI709:
 200:src/keys.c    **** {
 7055              		.loc 1 200 14 view .LVU2210
 7056              	.LBB720:
 202:src/keys.c    ****     // K00 - K05
 7057              		.loc 1 202 3 view .LVU2211
 224:src/keys.c    **** }
 7058              		.loc 1 224 3 view .LVU2212
 7059              	.LBB718:
 7060              	.LBI711:
 121:src/keys.c    **** {
ARM GAS  /tmp/ccihcwFT.s 			page 217


 7061              		.loc 1 121 12 view .LVU2213
 7062              	.LBB715:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 7063              		.loc 1 123 2 view .LVU2214
 133:src/keys.c    **** }
 7064              		.loc 1 133 2 view .LVU2215
 133:src/keys.c    **** }
 7065              		.loc 1 133 2 is_stmt 0 view .LVU2216
 7066              	.LBE715:
 7067              	.LBE718:
 7068              	.LBE720:
 7069              	.LBE722:
1949:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 7070              		.loc 1 1949 15 view .LVU2217
 7071 09b8 2CF08002 		bic	r2, ip, #128
 7072              	.LVL582:
1950:src/keys.c    **** 
 7073              		.loc 1 1950 2 is_stmt 1 view .LVU2218
1950:src/keys.c    **** 
 7074              		.loc 1 1950 44 is_stmt 0 view .LVU2219
 7075 09bc 00F0A980 		beq	.L1187
 7076              	.LVL583:
1952:src/keys.c    **** 	State2.cmplx = 0;
 7077              		.loc 1 1952 2 is_stmt 1 view .LVU2220
1953:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7078              		.loc 1 1953 15 is_stmt 0 view .LVU2221
 7079 09c0 60F34101 		bfi	r1, r0, #1, #1
1954:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7080              		.loc 1 1954 5 view .LVU2222
 7081 09c4 642A     		cmp	r2, #100
1952:src/keys.c    **** 	State2.cmplx = 0;
 7082              		.loc 1 1952 14 view .LVU2223
 7083 09c6 4FF00700 		mov	r0, #7
1953:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7084              		.loc 1 1953 15 view .LVU2224
 7085 09ca 88F81510 		strb	r1, [r8, #21]
1952:src/keys.c    **** 	State2.cmplx = 0;
 7086              		.loc 1 1952 14 view .LVU2225
 7087 09ce 88F80F00 		strb	r0, [r8, #15]
1953:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7088              		.loc 1 1953 2 is_stmt 1 view .LVU2226
1954:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7089              		.loc 1 1954 2 view .LVU2227
1954:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7090              		.loc 1 1954 5 is_stmt 0 view .LVU2228
 7091 09d2 00F07C84 		beq	.L987
1950:src/keys.c    **** 
 7092              		.loc 1 1950 44 view .LVU2229
 7093 09d6 4FF0340A 		mov	r10, #52
 7094              	.LVL584:
 7095              	.L944:
1955:src/keys.c    **** 		// Lettered register
 7096              		.loc 1 1955 5 view .LVU2230
 7097 09da 7F2A     		cmp	r2, #127
1950:src/keys.c    **** 
 7098              		.loc 1 1950 60 view .LVU2231
 7099 09dc DA44     		add	r10, r10, fp
ARM GAS  /tmp/ccihcwFT.s 			page 218


1955:src/keys.c    **** 		// Lettered register
 7100              		.loc 1 1955 2 is_stmt 1 view .LVU2232
1955:src/keys.c    **** 		// Lettered register
 7101              		.loc 1 1955 5 is_stmt 0 view .LVU2233
 7102 09de 00F01381 		beq	.L673
 7103              	.LVL585:
1955:src/keys.c    **** 		// Lettered register
 7104              		.loc 1 1955 18 view .LVU2234
 7105 09e2 632A     		cmp	r2, #99
 7106 09e4 40F23981 		bls	.L674
1955:src/keys.c    **** 		// Lettered register
 7107              		.loc 1 1955 37 view .LVU2235
 7108 09e8 6F2A     		cmp	r2, #111
 7109 09ea 00F20D81 		bhi	.L673
1957:src/keys.c    **** 			if (n == regI_idx)
 7110              		.loc 1 1957 3 is_stmt 1 view .LVU2236
1957:src/keys.c    **** 			if (n == regI_idx)
 7111              		.loc 1 1957 6 is_stmt 0 view .LVU2237
 7112 09ee BEF1000F 		cmp	lr, #0
 7113 09f2 00F02082 		beq	.L675
1957:src/keys.c    **** 			if (n == regI_idx)
 7114              		.loc 1 1957 12 view .LVU2238
 7115 09f6 1CF0010F 		tst	ip, #1
 7116 09fa 00F01C82 		beq	.L675
1958:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 7117              		.loc 1 1958 4 is_stmt 1 view .LVU2239
1958:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 7118              		.loc 1 1958 7 is_stmt 0 view .LVU2240
 7119 09fe 6D2A     		cmp	r2, #109
 7120 0a00 40F00F81 		bne	.L676
1959:src/keys.c    **** 			// Disallow odd complex registers > A
 7121              		.loc 1 1959 5 is_stmt 1 view .LVU2241
1959:src/keys.c    **** 			// Disallow odd complex registers > A
 7122              		.loc 1 1959 30 is_stmt 0 view .LVU2242
 7123 0a04 0BF1290B 		add	fp, fp, #41
 7124              	.LVL586:
1959:src/keys.c    **** 			// Disallow odd complex registers > A
 7125              		.loc 1 1959 30 view .LVU2243
 7126 0a08 1AE5     		b	.L641
 7127              	.LVL587:
 7128              	.L1162:
1959:src/keys.c    **** 			// Disallow odd complex registers > A
 7129              		.loc 1 1959 30 view .LVU2244
 7130              	.LBE708:
 7131              	.LBE707:
2877:src/keys.c    **** 
 7132              		.loc 1 2877 3 is_stmt 1 view .LVU2245
 7133              	.LBB737:
 7134              	.LBI737:
1336:src/keys.c    **** 	int pc = -1;
 7135              		.loc 1 1336 12 view .LVU2246
 7136              	.LBB738:
1337:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
 7137              		.loc 1 1337 2 view .LVU2247
1338:src/keys.c    **** 
 7138              		.loc 1 1338 2 view .LVU2248
 7139              	.LBB739:
ARM GAS  /tmp/ccihcwFT.s 			page 219


 7140              	.LBI739:
 200:src/keys.c    **** {
 7141              		.loc 1 200 14 view .LVU2249
 7142              	.LBB740:
 202:src/keys.c    ****     // K00 - K05
 7143              		.loc 1 202 3 view .LVU2250
 224:src/keys.c    **** }
 7144              		.loc 1 224 3 view .LVU2251
 7145              	.LBB741:
 7146              	.LBI741:
 121:src/keys.c    **** {
 7147              		.loc 1 121 12 view .LVU2252
 7148              	.LBB742:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 7149              		.loc 1 123 2 view .LVU2253
 133:src/keys.c    **** }
 7150              		.loc 1 133 2 view .LVU2254
 133:src/keys.c    **** }
 7151              		.loc 1 133 23 is_stmt 0 view .LVU2255
 7152 0a0a B14B     		ldr	r3, .L1254+4
 7153              	.LBE742:
 7154              	.LBE741:
 224:src/keys.c    **** }
 7155              		.loc 1 224 28 view .LVU2256
 7156 0a0c B14A     		ldr	r2, .L1254+8
 7157 0a0e E4B2     		uxtb	r4, r4
 7158              	.LVL588:
 7159              	.LBB744:
 7160              	.LBB743:
 133:src/keys.c    **** }
 7161              		.loc 1 133 23 view .LVU2257
 7162 0a10 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 7163              	.LBE743:
 7164              	.LBE744:
 224:src/keys.c    **** }
 7165              		.loc 1 224 28 view .LVU2258
 7166 0a12 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 7167              	.LVL589:
 224:src/keys.c    **** }
 7168              		.loc 1 224 28 view .LVU2259
 7169              	.LBE740:
 7170              	.LBE739:
1340:src/keys.c    **** 		// Digit 0 - 9
 7171              		.loc 1 1340 2 is_stmt 1 view .LVU2260
1340:src/keys.c    **** 		// Digit 0 - 9
 7172              		.loc 1 1340 5 is_stmt 0 view .LVU2261
 7173 0a14 0928     		cmp	r0, #9
 7174 0a16 40F21781 		bls	.L1188
1345:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 7175              		.loc 1 1345 7 is_stmt 1 view .LVU2262
1345:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 7176              		.loc 1 1345 18 is_stmt 0 view .LVU2263
 7177 0a1a 20F08000 		bic	r0, r0, #128
 7178              	.LVL590:
1345:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 7179              		.loc 1 1345 10 view .LVU2264
 7180 0a1e 6428     		cmp	r0, #100
ARM GAS  /tmp/ccihcwFT.s 			page 220


 7181 0a20 00F0F381 		beq	.L1189
1346:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 7182              		.loc 1 1346 7 is_stmt 1 view .LVU2265
1346:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 7183              		.loc 1 1346 10 is_stmt 0 view .LVU2266
 7184 0a24 6528     		cmp	r0, #101
 7185 0a26 00F0FE81 		beq	.L1190
1347:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 7186              		.loc 1 1347 7 is_stmt 1 view .LVU2267
1347:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 7187              		.loc 1 1347 10 is_stmt 0 view .LVU2268
 7188 0a2a 6628     		cmp	r0, #102
 7189 0a2c 00F01882 		beq	.L1191
1348:src/keys.c    **** #endif
 7190              		.loc 1 1348 7 is_stmt 1 view .LVU2269
1348:src/keys.c    **** #endif
 7191              		.loc 1 1348 10 is_stmt 0 view .LVU2270
 7192 0a30 6728     		cmp	r0, #103
 7193 0a32 00F01E84 		beq	.L1192
1350:src/keys.c    **** 		// A - D
 7194              		.loc 1 1350 7 is_stmt 1 view .LVU2271
1350:src/keys.c    **** 		// A - D
 7195              		.loc 1 1350 10 is_stmt 0 view .LVU2272
 7196 0a36 032C     		cmp	r4, #3
 7197 0a38 40F22384 		bls	.L1193
1355:src/keys.c    **** 		// .
 7198              		.loc 1 1355 7 is_stmt 1 view .LVU2273
1355:src/keys.c    **** 		// .
 7199              		.loc 1 1355 10 is_stmt 0 view .LVU2274
 7200 0a3c 262C     		cmp	r4, #38
 7201 0a3e 00F05584 		beq	.L1194
1360:src/keys.c    **** 		// ENTER - short circuit processing
 7202              		.loc 1 1360 7 is_stmt 1 view .LVU2275
1360:src/keys.c    **** 		// ENTER - short circuit processing
 7203              		.loc 1 1360 10 is_stmt 0 view .LVU2276
 7204 0a42 0C2C     		cmp	r4, #12
 7205 0a44 00F06581 		beq	.L1195
1364:src/keys.c    **** 		// backspace
 7206              		.loc 1 1364 7 is_stmt 1 view .LVU2277
1364:src/keys.c    **** 		// backspace
 7207              		.loc 1 1364 10 is_stmt 0 view .LVU2278
 7208 0a48 102C     		cmp	r4, #16
 7209 0a4a 00F05384 		beq	.L1196
1373:src/keys.c    **** 		// up
 7210              		.loc 1 1373 7 is_stmt 1 view .LVU2279
1373:src/keys.c    **** 		// up
 7211              		.loc 1 1373 10 is_stmt 0 view .LVU2280
 7212 0a4e 122C     		cmp	r4, #18
 7213 0a50 00F00E87 		beq	.L1197
1383:src/keys.c    **** 		// down
 7214              		.loc 1 1383 7 is_stmt 1 view .LVU2281
1383:src/keys.c    **** 		// down
 7215              		.loc 1 1383 10 is_stmt 0 view .LVU2282
 7216 0a54 182C     		cmp	r4, #24
 7217 0a56 00F04B87 		beq	.L660
 7218 0a5a 3268     		ldr	r2, [r6]
 7219              	.LVL591:
ARM GAS  /tmp/ccihcwFT.s 			page 221


1383:src/keys.c    **** 		// down
 7220              		.loc 1 1383 10 view .LVU2283
 7221              	.LBE738:
 7222              	.LBE737:
2877:src/keys.c    **** 
 7223              		.loc 1 2877 10 view .LVU2284
 7224 0a5c 4FF0330B 		mov	fp, #51
 7225 0a60 FFF727BB 		b	.L611
 7226              	.LVL592:
 7227              	.L903:
2877:src/keys.c    **** 
 7228              		.loc 1 2877 10 view .LVU2285
 7229              	.LBE1228:
 7230              	.LBE1296:
 7231              	.LBB1297:
3171:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7232              		.loc 1 3171 4 is_stmt 1 view .LVU2286
 7233              	.LBB1273:
 7234              	.LBI1273:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 7235              		.loc 1 506 13 view .LVU2287
 7236              	.LBB1274:
 507:src/keys.c    **** 		return;
 7237              		.loc 1 507 2 view .LVU2288
 507:src/keys.c    **** 		return;
 7238              		.loc 1 507 6 is_stmt 0 view .LVU2289
 7239 0a64 FFF7FEFF 		bl	is_bad_cmdline
 7240              	.LVL593:
 507:src/keys.c    **** 		return;
 7241              		.loc 1 507 5 view .LVU2290
 7242 0a68 0546     		mov	r5, r0
 7243 0a6a 0028     		cmp	r0, #0
 7244 0a6c 40F0E680 		bne	.L1198
 7245 0a70 2046     		mov	r0, r4
 7246 0a72 FFF7FEFF 		bl	init_arg.part.0
 7247              	.LVL594:
 7248              	.LBE1274:
 7249              	.LBE1273:
3172:src/keys.c    **** 	}
 7250              		.loc 1 3172 6 view .LVU2291
 7251 0a76 4FF0330B 		mov	fp, #51
 7252 0a7a 3268     		ldr	r2, [r6]
 7253 0a7c FFF719BB 		b	.L611
 7254              	.LVL595:
 7255              	.L985:
3172:src/keys.c    **** 	}
 7256              		.loc 1 3172 6 view .LVU2292
 7257              	.LBE1297:
 7258              	.LBB1298:
 7259 0a80 9B46     		mov	fp, r3
 7260              	.LVL596:
3172:src/keys.c    **** 	}
 7261              		.loc 1 3172 6 view .LVU2293
 7262 0a82 FFF737BB 		b	.L926
 7263              	.LVL597:
 7264              	.L1163:
3172:src/keys.c    **** 	}
ARM GAS  /tmp/ccihcwFT.s 			page 222


 7265              		.loc 1 3172 6 view .LVU2294
 7266              	.LBE1298:
 7267              	.LBB1299:
 7268              	.LBB1229:
2880:src/keys.c    **** 
 7269              		.loc 1 2880 3 is_stmt 1 view .LVU2295
 7270              	.LBB758:
 7271              	.LBB759:
1238:src/keys.c    **** 	State2.dot = 0;
 7272              		.loc 1 1238 15 is_stmt 0 view .LVU2296
 7273 0a86 21F06203 		bic	r3, r1, #98
 7274              	.LBE759:
 7275              	.LBE758:
2880:src/keys.c    **** 
 7276              		.loc 1 2880 10 view .LVU2297
 7277 0a8a E4B2     		uxtb	r4, r4
 7278              	.LVL598:
 7279              	.LBB773:
 7280              	.LBI758:
1228:src/keys.c    **** 	static const unsigned char op_map[][2] = {
 7281              		.loc 1 1228 12 is_stmt 1 view .LVU2298
 7282              	.LBB769:
1229:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
 7283              		.loc 1 1229 2 view .LVU2299
1234:src/keys.c    **** 	int f = State2.dot;
 7284              		.loc 1 1234 2 view .LVU2300
1238:src/keys.c    **** 	State2.dot = 0;
 7285              		.loc 1 1238 15 is_stmt 0 view .LVU2301
 7286 0a8c 88F81530 		strb	r3, [r8, #21]
1234:src/keys.c    **** 	int f = State2.dot;
 7287              		.loc 1 1234 20 view .LVU2302
 7288 0a90 C1F3400A 		ubfx	r10, r1, #1, #1
 7289              	.LVL599:
1235:src/keys.c    **** 
 7290              		.loc 1 1235 2 is_stmt 1 view .LVU2303
1235:src/keys.c    **** 
 7291              		.loc 1 1235 16 is_stmt 0 view .LVU2304
 7292 0a94 C1F38019 		ubfx	r9, r1, #6, #1
 7293              	.LVL600:
1237:src/keys.c    **** 	State2.cmplx = 0;
 7294              		.loc 1 1237 2 is_stmt 1 view .LVU2305
1238:src/keys.c    **** 	State2.dot = 0;
 7295              		.loc 1 1238 2 view .LVU2306
1239:src/keys.c    **** #ifdef DM42
 7296              		.loc 1 1239 2 view .LVU2307
1241:src/keys.c    **** #endif
 7297              		.loc 1 1241 2 view .LVU2308
 7298              	.LBB760:
 7299              	.LBI760:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 7300              		.loc 1 104 13 view .LVU2309
 7301              	.LBE760:
 7302              	.LBE769:
 7303              	.LBE773:
 7304              	.LBE1229:
 7305              	.LBE1299:
 105:src/keys.c    **** }
ARM GAS  /tmp/ccihcwFT.s 			page 223


 7306              		.loc 1 105 2 view .LVU2310
 7307              	.LBB1300:
 7308              	.LBB1230:
 7309              	.LBB774:
 7310              	.LBB770:
 7311              	.LBB767:
 7312              	.LBB761:
 7313              	.LBI761:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 7314              		.loc 1 94 20 view .LVU2311
 7315              	.LBB762:
  95:src/keys.c    **** 	State2.shifts = shift;
 7316              		.loc 1 95 2 view .LVU2312
 7317              	.LBB763:
 7318              	.LBI763:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 7319              		.loc 1 86 13 view .LVU2313
 7320              	.LBB764:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7321              		.loc 1 87 2 view .LVU2314
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7322              		.loc 1 87 18 is_stmt 0 view .LVU2315
 7323 0a98 FFF7FEFF 		bl	shift_down
 7324              	.LVL601:
  88:src/keys.c    **** }
 7325              		.loc 1 88 2 is_stmt 1 view .LVU2316
 7326              	.LBE764:
 7327              	.LBE763:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 7328              		.loc 1 96 2 view .LVU2317
 7329              	.LBE762:
 7330              	.LBE761:
 7331              	.LBE767:
1243:src/keys.c    **** 
 7332              		.loc 1 1243 2 is_stmt 0 view .LVU2318
 7333 0a9c 292C     		cmp	r4, #41
 7334              	.LBB768:
 7335              	.LBB766:
 7336              	.LBB765:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 7337              		.loc 1 96 16 view .LVU2319
 7338 0a9e 88F810B0 		strb	fp, [r8, #16]
  98:src/keys.c    **** }
 7339              		.loc 1 98 2 is_stmt 1 view .LVU2320
 7340              	.LVL602:
  98:src/keys.c    **** }
 7341              		.loc 1 98 2 is_stmt 0 view .LVU2321
 7342              	.LBE765:
 7343              	.LBE766:
 7344              	.LBE768:
1243:src/keys.c    **** 
 7345              		.loc 1 1243 2 is_stmt 1 view .LVU2322
 7346 0aa2 00F0E383 		beq	.L662
 7347 0aa6 16D8     		bhi	.L663
 7348 0aa8 013C     		subs	r4, r4, #1
 7349              	.LVL603:
1243:src/keys.c    **** 
ARM GAS  /tmp/ccihcwFT.s 			page 224


 7350              		.loc 1 1243 2 is_stmt 0 view .LVU2323
 7351 0aaa E3B2     		uxtb	r3, r4
 7352 0aac 022B     		cmp	r3, #2
 7353 0aae 00F21F81 		bhi	.L664
1248:src/keys.c    **** 
 7354              		.loc 1 1248 3 is_stmt 1 view .LVU2324
1248:src/keys.c    **** 
 7355              		.loc 1 1248 54 is_stmt 0 view .LVU2325
 7356 0ab2 894A     		ldr	r2, .L1254+12
 7357 0ab4 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 7358 0ab8 02EB4404 		add	r4, r2, r4, lsl #1
 7359              	.LVL604:
1248:src/keys.c    **** 
 7360              		.loc 1 1248 27 view .LVU2326
 7361 0abc BAF1000F 		cmp	r10, #0
1248:src/keys.c    **** 
 7362              		.loc 1 1248 54 view .LVU2327
 7363 0ac0 14F809B0 		ldrb	fp, [r4, r9]	@ zero_extendqisi2
1248:src/keys.c    **** 
 7364              		.loc 1 1248 27 view .LVU2328
 7365 0ac4 14BF     		ite	ne
 7366 0ac6 4FF4A062 		movne	r2, #1280
 7367 0aca 4FF40072 		moveq	r2, #512
1248:src/keys.c    **** 
 7368              		.loc 1 1248 37 view .LVU2329
 7369 0ace 4BEA020B 		orr	fp, fp, r2
 7370 0ad2 5846     		mov	r0, fp
 7371 0ad4 26E5     		b	.L668
 7372              	.LVL605:
 7373              	.L663:
1243:src/keys.c    **** 
 7374              		.loc 1 1243 2 view .LVU2330
 7375 0ad6 2D2C     		cmp	r4, #45
 7376 0ad8 40F00A81 		bne	.L664
1251:src/keys.c    **** 		goto stay;
 7377              		.loc 1 1251 3 is_stmt 1 view .LVU2331
 7378 0adc 8AF0010A 		eor	r10, r10, #1
 7379              	.LVL606:
1252:src/keys.c    **** 
 7380              		.loc 1 1252 3 view .LVU2332
 7381              	.L669:
1265:src/keys.c    **** 		State2.cmplx = cmplx;
 7382              		.loc 1 1265 3 view .LVU2333
1266:src/keys.c    **** 		State2.dot = f;
 7383              		.loc 1 1266 3 view .LVU2334
1267:src/keys.c    **** 		break;
 7384              		.loc 1 1267 3 view .LVU2335
1266:src/keys.c    **** 		State2.dot = f;
 7385              		.loc 1 1266 16 is_stmt 0 view .LVU2336
 7386 0ae0 4FEA4A03 		lsl	r3, r10, #1
 7387 0ae4 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 7388 0ae8 3268     		ldr	r2, [r6]
 7389 0aea 43F02003 		orr	r3, r3, #32
 7390 0aee 43EA8913 		orr	r3, r3, r9, lsl #6
 7391 0af2 03F06203 		and	r3, r3, #98
 7392 0af6 21F06201 		bic	r1, r1, #98
 7393 0afa 0B43     		orrs	r3, r3, r1
ARM GAS  /tmp/ccihcwFT.s 			page 225


 7394 0afc 88F81530 		strb	r3, [r8, #21]
1268:src/keys.c    **** 
 7395              		.loc 1 1268 3 is_stmt 1 view .LVU2337
1273:src/keys.c    **** }
 7396              		.loc 1 1273 9 is_stmt 0 view .LVU2338
 7397 0b00 4FF0330B 		mov	fp, #51
1268:src/keys.c    **** 
 7398              		.loc 1 1268 3 view .LVU2339
 7399 0b04 FFF7D5BA 		b	.L611
 7400              	.LVL607:
 7401              	.L1159:
1268:src/keys.c    **** 
 7402              		.loc 1 1268 3 view .LVU2340
 7403              	.LBE770:
 7404              	.LBE774:
2857:src/keys.c    **** 		return STATE_IGNORE;
 7405              		.loc 1 2857 3 is_stmt 1 view .LVU2341
2857:src/keys.c    **** 		return STATE_IGNORE;
 7406              		.loc 1 2857 15 is_stmt 0 view .LVU2342
 7407 0b08 1D60     		str	r5, [r3]
2858:src/keys.c    **** 	}
 7408              		.loc 1 2858 3 is_stmt 1 view .LVU2343
 7409              	.LVL608:
2858:src/keys.c    **** 	}
 7410              		.loc 1 2858 3 is_stmt 0 view .LVU2344
 7411              	.LBE1230:
 7412              	.LBE1300:
3244:src/keys.c    **** #ifndef CONSOLE
 7413              		.loc 1 3244 3 is_stmt 1 view .LVU2345
 7414              	.LBB1301:
 7415              	.LBB1231:
2858:src/keys.c    **** 	}
 7416              		.loc 1 2858 10 is_stmt 0 view .LVU2346
 7417 0b0a 4FF0320B 		mov	fp, #50
 7418 0b0e FFF7D3BA 		b	.L627
 7419              	.LVL609:
 7420              	.L1187:
 7421              	.LBB775:
 7422              	.LBB727:
1952:src/keys.c    **** 	State2.cmplx = 0;
 7423              		.loc 1 1952 2 is_stmt 1 view .LVU2347
1953:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7424              		.loc 1 1953 15 is_stmt 0 view .LVU2348
 7425 0b12 6EF34101 		bfi	r1, lr, #1, #1
1952:src/keys.c    **** 	State2.cmplx = 0;
 7426              		.loc 1 1952 14 view .LVU2349
 7427 0b16 0720     		movs	r0, #7
1954:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7428              		.loc 1 1954 5 view .LVU2350
 7429 0b18 642A     		cmp	r2, #100
1953:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7430              		.loc 1 1953 15 view .LVU2351
 7431 0b1a 88F81510 		strb	r1, [r8, #21]
1952:src/keys.c    **** 	State2.cmplx = 0;
 7432              		.loc 1 1952 14 view .LVU2352
 7433 0b1e 88F80F00 		strb	r0, [r8, #15]
1953:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
ARM GAS  /tmp/ccihcwFT.s 			page 226


 7434              		.loc 1 1953 2 is_stmt 1 view .LVU2353
1954:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7435              		.loc 1 1954 2 view .LVU2354
1954:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7436              		.loc 1 1954 5 is_stmt 0 view .LVU2355
 7437 0b22 00F0D883 		beq	.L988
1950:src/keys.c    **** 
 7438              		.loc 1 1950 44 view .LVU2356
 7439 0b26 4FF02D0A 		mov	r10, #45
 7440              	.LVL610:
1950:src/keys.c    **** 
 7441              		.loc 1 1950 44 view .LVU2357
 7442 0b2a 56E7     		b	.L944
 7443              	.LVL611:
 7444              	.L986:
1950:src/keys.c    **** 
 7445              		.loc 1 1950 44 view .LVU2358
 7446              	.LBE727:
 7447              	.LBE775:
 7448              	.LBE1231:
 7449              	.LBE1301:
 7450              	.LBB1302:
 7451 0b2c AB46     		mov	fp, r5
 7452              	.LVL612:
1950:src/keys.c    **** 
 7453              		.loc 1 1950 44 view .LVU2359
 7454 0b2e FFF7E1BA 		b	.L926
 7455              	.LVL613:
 7456              	.L1165:
1950:src/keys.c    **** 
 7457              		.loc 1 1950 44 view .LVU2360
 7458              	.LBE1302:
 7459              	.LBB1303:
 7460              	.LBB1232:
2886:src/keys.c    **** 
 7461              		.loc 1 2886 3 is_stmt 1 view .LVU2361
 7462              	.LBB776:
 7463              	.LBB777:
2515:src/keys.c    **** 
 7464              		.loc 1 2515 12 is_stmt 0 view .LVU2362
 7465 0b32 6A4A     		ldr	r2, .L1254+16
 7466 0b34 1268     		ldr	r2, [r2]
2515:src/keys.c    **** 
 7467              		.loc 1 2515 31 view .LVU2363
 7468 0b36 B2F9DE27 		ldrsh	r2, [r2, #2014]
 7469              	.LBE777:
 7470              	.LBE776:
2886:src/keys.c    **** 
 7471              		.loc 1 2886 10 view .LVU2364
 7472 0b3a E4B2     		uxtb	r4, r4
 7473              	.LVL614:
 7474              	.LBB796:
 7475              	.LBI776:
2513:src/keys.c    **** 	int n = ((int)State2.status) - 3;
 7476              		.loc 1 2513 12 is_stmt 1 view .LVU2365
 7477              	.LBB788:
2514:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
ARM GAS  /tmp/ccihcwFT.s 			page 227


 7478              		.loc 1 2514 2 view .LVU2366
2515:src/keys.c    **** 
 7479              		.loc 1 2515 2 view .LVU2367
2515:src/keys.c    **** 
 7480              		.loc 1 2515 31 is_stmt 0 view .LVU2368
 7481 0b3c 002A     		cmp	r2, #0
 7482 0b3e B4BF     		ite	lt
 7483 0b40 0B22     		movlt	r2, #11
 7484 0b42 0A22     		movge	r2, #10
 7485              	.LVL615:
2517:src/keys.c    **** 		if (--n < -2)
 7486              		.loc 1 2517 2 is_stmt 1 view .LVU2369
2517:src/keys.c    **** 		if (--n < -2)
 7487              		.loc 1 2517 5 is_stmt 0 view .LVU2370
 7488 0b44 122C     		cmp	r4, #18
 7489 0b46 00F00A81 		beq	.L1199
2521:src/keys.c    **** 		if (++n > max)
 7490              		.loc 1 2521 7 is_stmt 1 view .LVU2371
2521:src/keys.c    **** 		if (++n > max)
 7491              		.loc 1 2521 10 is_stmt 0 view .LVU2372
 7492 0b4a 182C     		cmp	r4, #24
 7493 0b4c 00F08181 		beq	.L1200
2525:src/keys.c    **** 		State2.status = 0;
 7494              		.loc 1 2525 7 is_stmt 1 view .LVU2373
2525:src/keys.c    **** 		State2.status = 0;
 7495              		.loc 1 2525 10 is_stmt 0 view .LVU2374
 7496 0b50 102C     		cmp	r4, #16
 7497 0b52 00F0C483 		beq	.L1201
 7498              	.LBB778:
2530:src/keys.c    **** 		if (nn <= 9)
 7499              		.loc 1 2530 3 is_stmt 1 view .LVU2375
 7500              	.LVL616:
 7501              	.LBB779:
 7502              	.LBI779:
 200:src/keys.c    **** {
 7503              		.loc 1 200 14 view .LVU2376
 7504              	.LBB780:
 202:src/keys.c    ****     // K00 - K05
 7505              		.loc 1 202 3 view .LVU2377
 224:src/keys.c    **** }
 7506              		.loc 1 224 3 view .LVU2378
 7507              	.LBB781:
 7508              	.LBI781:
 121:src/keys.c    **** {
 7509              		.loc 1 121 12 view .LVU2379
 7510              	.LBB782:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 7511              		.loc 1 123 2 view .LVU2380
 133:src/keys.c    **** }
 7512              		.loc 1 133 2 view .LVU2381
 133:src/keys.c    **** }
 7513              		.loc 1 133 23 is_stmt 0 view .LVU2382
 7514 0b56 5E49     		ldr	r1, .L1254+4
 7515              	.LBE782:
 7516              	.LBE781:
 224:src/keys.c    **** }
 7517              		.loc 1 224 28 view .LVU2383
ARM GAS  /tmp/ccihcwFT.s 			page 228


 7518 0b58 5E48     		ldr	r0, .L1254+8
 7519              	.LBB784:
 7520              	.LBB783:
 133:src/keys.c    **** }
 7521              		.loc 1 133 23 view .LVU2384
 7522 0b5a 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 7523 0b5c 415C     		ldrb	r1, [r0, r1]	@ zero_extendqisi2
 7524 0b5e 01F07F01 		and	r1, r1, #127
 7525              	.LVL617:
 133:src/keys.c    **** }
 7526              		.loc 1 133 23 view .LVU2385
 7527              	.LBE783:
 7528              	.LBE784:
 7529              	.LBE780:
 7530              	.LBE779:
2531:src/keys.c    **** 			n = nn;
 7531              		.loc 1 2531 3 is_stmt 1 view .LVU2386
2531:src/keys.c    **** 			n = nn;
 7532              		.loc 1 2531 6 is_stmt 0 view .LVU2387
 7533 0b62 0929     		cmp	r1, #9
 7534 0b64 40F2B581 		bls	.L954
2533:src/keys.c    **** 			n = n == max ? 10 : max;
 7535              		.loc 1 2533 11 view .LVU2388
 7536 0b68 7029     		cmp	r1, #112
 7537              	.LBE778:
2514:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7538              		.loc 1 2514 6 view .LVU2389
 7539 0b6a A3F10303 		sub	r3, r3, #3
 7540              	.LVL618:
 7541              	.LBB785:
2533:src/keys.c    **** 			n = n == max ? 10 : max;
 7542              		.loc 1 2533 8 is_stmt 1 view .LVU2390
2533:src/keys.c    **** 			n = n == max ? 10 : max;
 7543              		.loc 1 2533 11 is_stmt 0 view .LVU2391
 7544 0b6e 00F02085 		beq	.L1202
2535:src/keys.c    **** 			n = 10; 
 7545              		.loc 1 2535 8 is_stmt 1 view .LVU2392
 7546              	.LBE785:
2514:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7547              		.loc 1 2514 6 is_stmt 0 view .LVU2393
 7548 0b72 7F29     		cmp	r1, #127
 7549 0b74 0CBF     		ite	eq
 7550 0b76 1A46     		moveq	r2, r3
 7551              	.LVL619:
2514:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7552              		.loc 1 2514 6 view .LVU2394
 7553 0b78 0A22     		movne	r2, #10
 7554              	.LVL620:
 7555              	.L690:
2538:src/keys.c    **** 
 7556              		.loc 1 2538 2 is_stmt 1 view .LVU2395
2538:src/keys.c    **** 
 7557              		.loc 1 2538 20 is_stmt 0 view .LVU2396
 7558 0b7a 0332     		adds	r2, r2, #3
 7559              	.LVL621:
2538:src/keys.c    **** 
 7560              		.loc 1 2538 16 view .LVU2397
ARM GAS  /tmp/ccihcwFT.s 			page 229


 7561 0b7c 88F80C20 		strb	r2, [r8, #12]
2540:src/keys.c    **** }
 7562              		.loc 1 2540 2 is_stmt 1 view .LVU2398
 7563              	.LBE788:
 7564              	.LBE796:
2886:src/keys.c    **** 
 7565              		.loc 1 2886 10 is_stmt 0 view .LVU2399
 7566 0b80 4FF0330B 		mov	fp, #51
 7567 0b84 3268     		ldr	r2, [r6]
 7568              	.LVL622:
 7569              	.LBB797:
 7570              	.LBB789:
2540:src/keys.c    **** }
 7571              		.loc 1 2540 9 view .LVU2400
 7572 0b86 FFF794BA 		b	.L611
 7573              	.LVL623:
 7574              	.L1169:
2540:src/keys.c    **** }
 7575              		.loc 1 2540 9 view .LVU2401
 7576              	.LBE789:
 7577              	.LBE797:
2909:src/keys.c    **** 
 7578              		.loc 1 2909 3 is_stmt 1 view .LVU2402
 7579              	.LBB798:
 7580              	.LBB799:
 7581              	.LBB800:
 7582              	.LBB801:
 7583              	.LBB802:
 7584              	.LBB803:
 7585              	.LBB804:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7586              		.loc 1 87 18 is_stmt 0 view .LVU2403
 7587 0b8a FFF7FEFF 		bl	shift_down
 7588              	.LVL624:
 7589              	.LBE804:
 7590              	.LBE803:
 7591              	.LBE802:
 7592              	.LBE801:
 7593              	.LBE800:
 7594              	.LBE799:
 7595              	.LBE798:
2909:src/keys.c    **** 
 7596              		.loc 1 2909 10 view .LVU2404
 7597 0b8e E4B2     		uxtb	r4, r4
 7598              	.LVL625:
 7599              	.LBB825:
 7600              	.LBI798:
1280:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 7601              		.loc 1 1280 12 is_stmt 1 view .LVU2405
 7602              	.LBB821:
1281:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
 7603              		.loc 1 1281 2 view .LVU2406
1286:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
 7604              		.loc 1 1286 2 view .LVU2407
1290:src/keys.c    **** 	const int f = (shift == SHIFT_F);
 7605              		.loc 1 1290 2 view .LVU2408
 7606              	.LBB813:
ARM GAS  /tmp/ccihcwFT.s 			page 230


 7607              	.LBI800:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 7608              		.loc 1 104 13 view .LVU2409
 7609              	.LBE813:
 7610              	.LBE821:
 7611              	.LBE825:
 7612              	.LBE1232:
 7613              	.LBE1303:
 105:src/keys.c    **** }
 7614              		.loc 1 105 2 view .LVU2410
 7615              	.LBB1304:
 7616              	.LBB1233:
 7617              	.LBB826:
 7618              	.LBB822:
 7619              	.LBB814:
 7620              	.LBB810:
 7621              	.LBI801:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 7622              		.loc 1 94 20 view .LVU2411
 7623              	.LBB807:
  95:src/keys.c    **** 	State2.shifts = shift;
 7624              		.loc 1 95 2 view .LVU2412
 7625              	.LBB806:
 7626              	.LBI803:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 7627              		.loc 1 86 13 view .LVU2413
 7628              	.LBB805:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7629              		.loc 1 87 2 view .LVU2414
  88:src/keys.c    **** }
 7630              		.loc 1 88 2 view .LVU2415
  88:src/keys.c    **** }
 7631              		.loc 1 88 52 is_stmt 0 view .LVU2416
 7632 0b90 8346     		mov	fp, r0
 7633 0b92 08B9     		cbnz	r0, .L700
 7634 0b94 98F810B0 		ldrb	fp, [r8, #16]	@ zero_extendqisi2
 7635              	.L700:
 7636              	.LVL626:
  88:src/keys.c    **** }
 7637              		.loc 1 88 52 view .LVU2417
 7638              	.LBE805:
 7639              	.LBE806:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 7640              		.loc 1 96 2 is_stmt 1 view .LVU2418
 7641              	.LBE807:
 7642              	.LBE810:
 7643              	.LBE814:
1293:src/keys.c    **** #ifdef DM42
 7644              		.loc 1 1293 15 is_stmt 0 view .LVU2419
 7645 0b98 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 7646              	.LBB815:
 7647              	.LBB811:
 7648              	.LBB808:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 7649              		.loc 1 96 16 view .LVU2420
 7650 0b9c 0023     		movs	r3, #0
 7651              	.LBE808:
ARM GAS  /tmp/ccihcwFT.s 			page 231


 7652              	.LBE811:
 7653              	.LBE815:
1291:src/keys.c    **** 
 7654              		.loc 1 1291 23 view .LVU2421
 7655 0b9e ABF1010A 		sub	r10, fp, #1
 7656              	.LVL627:
1293:src/keys.c    **** #ifdef DM42
 7657              		.loc 1 1293 15 view .LVU2422
 7658 0ba2 63F38202 		bfi	r2, r3, #2, #1
1291:src/keys.c    **** 
 7659              		.loc 1 1291 23 view .LVU2423
 7660 0ba6 BAFA8AFA 		clz	r10, r10
1293:src/keys.c    **** #ifdef DM42
 7661              		.loc 1 1293 15 view .LVU2424
 7662 0baa 88F81520 		strb	r2, [r8, #21]
 7663              	.LBB816:
 7664              	.LBB812:
 7665              	.LBB809:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 7666              		.loc 1 96 16 view .LVU2425
 7667 0bae 88F81030 		strb	r3, [r8, #16]
  98:src/keys.c    **** }
 7668              		.loc 1 98 2 is_stmt 1 view .LVU2426
 7669              	.LVL628:
  98:src/keys.c    **** }
 7670              		.loc 1 98 2 is_stmt 0 view .LVU2427
 7671              	.LBE809:
 7672              	.LBE812:
 7673              	.LBE816:
1291:src/keys.c    **** 
 7674              		.loc 1 1291 2 is_stmt 1 view .LVU2428
1291:src/keys.c    **** 
 7675              		.loc 1 1291 23 is_stmt 0 view .LVU2429
 7676 0bb2 4FEA5A1A 		lsr	r10, r10, #5
 7677              	.LVL629:
1293:src/keys.c    **** #ifdef DM42
 7678              		.loc 1 1293 2 is_stmt 1 view .LVU2430
1295:src/keys.c    **** 	display_current_menu ();
 7679              		.loc 1 1295 2 view .LVU2431
 7680 0bb6 FFF7FEFF 		bl	set_last_menu
 7681              	.LVL630:
1296:src/keys.c    **** #endif
 7682              		.loc 1 1296 2 view .LVU2432
 7683 0bba FFF7FEFF 		bl	display_current_menu
 7684              	.LVL631:
1298:src/keys.c    **** 	
 7685              		.loc 1 1298 2 view .LVU2433
1298:src/keys.c    **** 	
 7686              		.loc 1 1298 5 is_stmt 0 view .LVU2434
 7687 0bbe BBF1000F 		cmp	fp, #0
 7688 0bc2 09D0     		beq	.L703
1300:src/keys.c    **** 		return op_map[c - K10][f];
 7689              		.loc 1 1300 2 is_stmt 1 view .LVU2435
1300:src/keys.c    **** 		return op_map[c - K10][f];
 7690              		.loc 1 1300 15 is_stmt 0 view .LVU2436
 7691 0bc4 A31F     		subs	r3, r4, #6
1300:src/keys.c    **** 		return op_map[c - K10][f];
ARM GAS  /tmp/ccihcwFT.s 			page 232


 7692              		.loc 1 1300 5 view .LVU2437
 7693 0bc6 DAB2     		uxtb	r2, r3
 7694 0bc8 022A     		cmp	r2, #2
 7695 0bca 40F23B81 		bls	.L1203
1303:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7696              		.loc 1 1303 2 is_stmt 1 view .LVU2438
1303:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7697              		.loc 1 1303 15 is_stmt 0 view .LVU2439
 7698 0bce 0E3C     		subs	r4, r4, #14
 7699              	.LVL632:
1303:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7700              		.loc 1 1303 5 view .LVU2440
 7701 0bd0 E3B2     		uxtb	r3, r4
 7702 0bd2 012B     		cmp	r3, #1
 7703 0bd4 40F27F81 		bls	.L1204
 7704              	.LVL633:
 7705              	.L703:
1303:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7706              		.loc 1 1303 5 view .LVU2441
 7707 0bd8 3268     		ldr	r2, [r6]
1298:src/keys.c    **** 	
 7708              		.loc 1 1298 31 view .LVU2442
 7709 0bda 4FF0330B 		mov	fp, #51
 7710              	.LVL634:
1298:src/keys.c    **** 	
 7711              		.loc 1 1298 31 view .LVU2443
 7712 0bde FFF768BA 		b	.L611
 7713              	.LVL635:
 7714              	.L1170:
1298:src/keys.c    **** 	
 7715              		.loc 1 1298 31 view .LVU2444
 7716              	.LBE822:
 7717              	.LBE826:
 7718              	.LBB827:
 7719              	.LBB665:
 266:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 7720              		.loc 1 266 16 view .LVU2445
 7721 0be2 BAF1030F 		cmp	r10, #3
 7722 0be6 00F04381 		beq	.L1205
 269:src/keys.c    ****     /*
 7723              		.loc 1 269 3 is_stmt 1 view .LVU2446
 269:src/keys.c    ****     /*
 7724              		.loc 1 269 23 is_stmt 0 view .LVU2447
 7725 0bea 3D4A     		ldr	r2, .L1254+20
 7726 0bec D8F81430 		ldr	r3, [r8, #20]
 269:src/keys.c    ****     /*
 7727              		.loc 1 269 6 view .LVU2448
 7728 0bf0 1A42     		tst	r2, r3
 7729 0bf2 3FF45CAB 		beq	.L717
 7730              	.L709:
 7731              	.LBB660:
 338:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 7732              		.loc 1 338 5 is_stmt 1 view .LVU2449
 362:src/keys.c    **** 
 7733              		.loc 1 362 5 view .LVU2450
 367:src/keys.c    ****     col = smap[shift];
 7734              		.loc 1 367 5 view .LVU2451
ARM GAS  /tmp/ccihcwFT.s 			page 233


 7735              	.LVL636:
 368:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7736              		.loc 1 368 5 view .LVU2452
 368:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7737              		.loc 1 368 15 is_stmt 0 view .LVU2453
 7738 0bf6 3B4A     		ldr	r2, .L1254+24
 367:src/keys.c    ****     col = smap[shift];
 7739              		.loc 1 367 8 view .LVU2454
 7740 0bf8 3B4B     		ldr	r3, .L1254+28
 368:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7741              		.loc 1 368 9 view .LVU2455
 7742 0bfa 12F80AC0 		ldrb	ip, [r2, r10]	@ zero_extendqisi2
 7743              	.LVL637:
 369:src/keys.c    ****   }
 7744              		.loc 1 369 5 is_stmt 1 view .LVU2456
 369:src/keys.c    ****   }
 7745              		.loc 1 369 9 is_stmt 0 view .LVU2457
 7746 0bfe 0822     		movs	r2, #8
 7747 0c00 FFF729BB 		b	.L712
 7748              	.LVL638:
 7749              	.L679:
 369:src/keys.c    ****   }
 7750              		.loc 1 369 9 view .LVU2458
 7751              	.LBE660:
 7752              	.LBE665:
 7753              	.LBE827:
 7754              	.LBB828:
 7755              	.LBB728:
1974:src/keys.c    **** 		// digit 2..9, -> or .
 7756              		.loc 1 1974 7 is_stmt 1 view .LVU2459
1974:src/keys.c    **** 		// digit 2..9, -> or .
 7757              		.loc 1 1974 10 is_stmt 0 view .LVU2460
 7758 0c04 092A     		cmp	r2, #9
 7759 0c06 48D9     		bls	.L681
 7760              	.L673:
1974:src/keys.c    **** 		// digit 2..9, -> or .
 7761              		.loc 1 1974 19 view .LVU2461
 7762 0c08 2C2C     		cmp	r4, #44
 7763 0c0a 46D0     		beq	.L681
1974:src/keys.c    **** 		// digit 2..9, -> or .
 7764              		.loc 1 1974 35 view .LVU2462
 7765 0c0c 262C     		cmp	r4, #38
 7766 0c0e 44D0     		beq	.L681
1980:src/keys.c    **** 	case K11:					// tests vs register
 7767              		.loc 1 1980 2 is_stmt 1 view .LVU2463
 7768 0c10 0C2C     		cmp	r4, #12
 7769 0c12 00F04381 		beq	.L684
 7770 0c16 102C     		cmp	r4, #16
 7771 0c18 00F03B81 		beq	.L685
 7772 0c1c 072C     		cmp	r4, #7
 7773 0c1e 00F03D81 		beq	.L684
 7774              	.L676:
1994:src/keys.c    **** 	State2.cmplx = cmpx;
 7775              		.loc 1 1994 2 view .LVU2464
1995:src/keys.c    **** 	return STATE_UNFINISHED;
 7776              		.loc 1 1995 15 is_stmt 0 view .LVU2465
 7777 0c22 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
ARM GAS  /tmp/ccihcwFT.s 			page 234


 7778 0c26 3268     		ldr	r2, [r6]
1994:src/keys.c    **** 	State2.cmplx = cmpx;
 7779              		.loc 1 1994 14 view .LVU2466
 7780 0c28 88F80FB0 		strb	fp, [r8, #15]
1995:src/keys.c    **** 	return STATE_UNFINISHED;
 7781              		.loc 1 1995 2 is_stmt 1 view .LVU2467
1995:src/keys.c    **** 	return STATE_UNFINISHED;
 7782              		.loc 1 1995 15 is_stmt 0 view .LVU2468
 7783 0c2c 6EF34103 		bfi	r3, lr, #1, #1
 7784 0c30 88F81530 		strb	r3, [r8, #21]
1996:src/keys.c    **** }
 7785              		.loc 1 1996 2 is_stmt 1 view .LVU2469
1996:src/keys.c    **** }
 7786              		.loc 1 1996 9 is_stmt 0 view .LVU2470
 7787 0c34 4FF0330B 		mov	fp, #51
 7788              	.LVL639:
1996:src/keys.c    **** }
 7789              		.loc 1 1996 9 view .LVU2471
 7790 0c38 FFF73BBA 		b	.L611
 7791              	.LVL640:
 7792              	.L1198:
1996:src/keys.c    **** }
 7793              		.loc 1 1996 9 view .LVU2472
 7794 0c3c 3268     		ldr	r2, [r6]
 7795              	.LBE728:
 7796              	.LBE828:
 7797              	.LBE1233:
 7798              	.LBE1304:
2997:src/keys.c    ****   if (was_paused && Pause == 0)
 7799              		.loc 1 2997 7 view .LVU2473
 7800 0c3e 0025     		movs	r5, #0
 7801              	.LBB1305:
3172:src/keys.c    **** 	}
 7802              		.loc 1 3172 6 view .LVU2474
 7803 0c40 4FF0330B 		mov	fp, #51
 7804 0c44 FFF735BA 		b	.L611
 7805              	.LVL641:
 7806              	.L1188:
3172:src/keys.c    **** 	}
 7807              		.loc 1 3172 6 view .LVU2475
 7808              	.LBE1305:
 7809              	.LBB1306:
 7810              	.LBB1234:
 7811              	.LBB829:
 7812              	.LBB747:
1342:src/keys.c    **** 	}
 7813              		.loc 1 1342 3 is_stmt 1 view .LVU2476
1342:src/keys.c    **** 	}
 7814              		.loc 1 1342 8 is_stmt 0 view .LVU2477
 7815 0c48 FFF7FEFF 		bl	gtodot_digit
 7816              	.LVL642:
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7817              		.loc 1 1391 2 is_stmt 1 view .LVU2478
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7818              		.loc 1 1391 5 is_stmt 0 view .LVU2479
 7819 0c4c 0028     		cmp	r0, #0
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
ARM GAS  /tmp/ccihcwFT.s 			page 235


 7820              		.loc 1 1391 5 view .LVU2480
 7821 0c4e 62DA     		bge	.L644
 7822 0c50 3268     		ldr	r2, [r6]
 7823              	.LBE747:
 7824              	.LBE829:
2877:src/keys.c    **** 
 7825              		.loc 1 2877 10 view .LVU2481
 7826 0c52 4FF0330B 		mov	fp, #51
 7827 0c56 FFF72CBA 		b	.L611
 7828              	.LVL643:
 7829              	.L674:
 7830              	.LBB830:
 7831              	.LBB729:
1966:src/keys.c    **** 		// Special 0
 7832              		.loc 1 1966 7 is_stmt 1 view .LVU2482
1966:src/keys.c    **** 		// Special 0
 7833              		.loc 1 1966 10 is_stmt 0 view .LVU2483
 7834 0c5a 002A     		cmp	r2, #0
 7835 0c5c 41F05D80 		bne	.L677
1968:src/keys.c    **** 	}
 7836              		.loc 1 1968 3 is_stmt 1 view .LVU2484
1968:src/keys.c    **** 	}
 7837              		.loc 1 1968 18 is_stmt 0 view .LVU2485
 7838 0c60 BEF1000F 		cmp	lr, #0
 7839 0c64 14BF     		ite	ne
 7840 0c66 2523     		movne	r3, #37
 7841 0c68 1723     		moveq	r3, #23
1968:src/keys.c    **** 	}
 7842              		.loc 1 1968 47 view .LVU2486
 7843 0c6a 9B44     		add	fp, fp, r3
 7844              	.LVL644:
1968:src/keys.c    **** 	}
 7845              		.loc 1 1968 47 view .LVU2487
 7846 0c6c FFF7E8BB 		b	.L641
 7847              	.LVL645:
 7848              	.L1172:
1968:src/keys.c    **** 	}
 7849              		.loc 1 1968 47 view .LVU2488
 7850              	.LBE729:
 7851              	.LBE830:
 7852              	.LBB831:
 7853              	.LBB666:
 377:src/keys.c    ****       break;
 7854              		.loc 1 377 7 is_stmt 1 view .LVU2489
 377:src/keys.c    ****       break;
 7855              		.loc 1 377 11 is_stmt 0 view .LVU2490
 7856 0c70 6344     		add	r3, r3, ip
 7857              	.LVL646:
 377:src/keys.c    ****       break;
 7858              		.loc 1 377 11 view .LVU2491
 7859 0c72 93F801B0 		ldrb	fp, [r3, #1]	@ zero_extendqisi2
 7860              	.LVL647:
 378:src/keys.c    ****     }
 7861              		.loc 1 378 7 is_stmt 1 view .LVU2492
 381:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7862              		.loc 1 381 3 view .LVU2493
 381:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
ARM GAS  /tmp/ccihcwFT.s 			page 236


 7863              		.loc 1 381 6 is_stmt 0 view .LVU2494
 7864 0c76 0B07     		lsls	r3, r1, #28
 7865 0c78 40F1CF80 		bpl	.L1206
 381:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7866              		.loc 1 381 20 view .LVU2495
 7867 0c7c ABF10B03 		sub	r3, fp, #11
 7868 0c80 042B     		cmp	r3, #4
 7869 0c82 71D8     		bhi	.L723
 7870              	.LVL648:
 7871              	.L707:
 381:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7872              		.loc 1 381 20 view .LVU2496
 7873              	.LBE666:
 7874              	.LBE831:
2918:src/keys.c    **** 			return STATE_UNFINISHED;
 7875              		.loc 1 2918 3 is_stmt 1 view .LVU2497
2918:src/keys.c    **** 			return STATE_UNFINISHED;
 7876              		.loc 1 2918 7 is_stmt 0 view .LVU2498
 7877 0c84 FFF7FEFF 		bl	is_bad_cmdline
 7878              	.LVL649:
2918:src/keys.c    **** 			return STATE_UNFINISHED;
 7879              		.loc 1 2918 6 view .LVU2499
 7880 0c88 0446     		mov	r4, r0
 7881 0c8a 0028     		cmp	r0, #0
 7882 0c8c 00F01681 		beq	.L722
 7883 0c90 3268     		ldr	r2, [r6]
2919:src/keys.c    **** 		init_cat( CATALOGUE_NONE );
 7884              		.loc 1 2919 11 view .LVU2500
 7885 0c92 4FF0330B 		mov	fp, #51
 7886 0c96 FFF70CBA 		b	.L611
 7887              	.LVL650:
 7888              	.L681:
 7889              	.LBB832:
 7890              	.LBB730:
1976:src/keys.c    **** 		return process_arg(c);
 7891              		.loc 1 1976 3 is_stmt 1 view .LVU2501
 7892              	.LBB723:
 7893              	.LBI723:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 7894              		.loc 1 506 13 view .LVU2502
 7895              	.LBB724:
 507:src/keys.c    **** 		return;
 7896              		.loc 1 507 2 view .LVU2503
 507:src/keys.c    **** 		return;
 7897              		.loc 1 507 6 is_stmt 0 view .LVU2504
 7898 0c9a FFF7FEFF 		bl	is_bad_cmdline
 7899              	.LVL651:
 507:src/keys.c    **** 		return;
 7900              		.loc 1 507 5 view .LVU2505
 7901 0c9e 18B9     		cbnz	r0, .L683
 7902 0ca0 5FFA8AF0 		uxtb	r0, r10
 7903 0ca4 FFF7FEFF 		bl	init_arg.part.0
 7904              	.LVL652:
 7905              	.L683:
 507:src/keys.c    **** 		return;
 7906              		.loc 1 507 5 view .LVU2506
 7907              	.LBE724:
ARM GAS  /tmp/ccihcwFT.s 			page 237


 7908              	.LBE723:
1977:src/keys.c    **** 	}
 7909              		.loc 1 1977 3 is_stmt 1 view .LVU2507
1977:src/keys.c    **** 	}
 7910              		.loc 1 1977 10 is_stmt 0 view .LVU2508
 7911 0ca8 2046     		mov	r0, r4
 7912 0caa FFF7FEFF 		bl	process_arg
 7913              	.LVL653:
 7914 0cae 8346     		mov	fp, r0
 7915              	.LVL654:
1977:src/keys.c    **** 	}
 7916              		.loc 1 1977 10 view .LVU2509
 7917 0cb0 FFF7C6BB 		b	.L641
 7918              	.LVL655:
 7919              	.L1166:
1977:src/keys.c    **** 	}
 7920              		.loc 1 1977 10 view .LVU2510
 7921              	.LBE730:
 7922              	.LBE832:
2892:src/keys.c    **** 		return STATE_UNFINISHED;
 7923              		.loc 1 2892 3 is_stmt 1 view .LVU2511
 7924              	.LBB833:
 7925              	.LBI833:
 111:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 7926              		.loc 1 111 13 view .LVU2512
 7927              	.LBB834:
 112:src/keys.c    **** }
 7928              		.loc 1 112 2 view .LVU2513
 112:src/keys.c    **** }
 7929              		.loc 1 112 16 is_stmt 0 view .LVU2514
 7930 0cb4 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 7931 0cb8 3268     		ldr	r2, [r6]
 7932 0cba 013B     		subs	r3, r3, #1
 7933 0cbc 18BF     		it	ne
 7934 0cbe 0123     		movne	r3, #1
 7935 0cc0 88F81030 		strb	r3, [r8, #16]
 7936              	.LVL656:
 112:src/keys.c    **** }
 7937              		.loc 1 112 16 view .LVU2515
 7938              	.LBE834:
 7939              	.LBE833:
2893:src/keys.c    **** 	}
 7940              		.loc 1 2893 3 is_stmt 1 view .LVU2516
2893:src/keys.c    **** 	}
 7941              		.loc 1 2893 10 is_stmt 0 view .LVU2517
 7942 0cc4 4FF0330B 		mov	fp, #51
 7943 0cc8 FFF7F3B9 		b	.L611
 7944              	.L1255:
 7945              		.align	2
 7946              	.L1254:
 7947 0ccc 00040800 		.word	525312
 7948 0cd0 00000000 		.word	.LANCHOR1
 7949 0cd4 00000000 		.word	.LANCHOR0
 7950 0cd8 00000000 		.word	.LANCHOR13
 7951 0cdc 00000000 		.word	main_ram
 7952 0ce0 00080800 		.word	526336
 7953 0ce4 00000000 		.word	.LANCHOR16
ARM GAS  /tmp/ccihcwFT.s 			page 238


 7954 0ce8 00000000 		.word	.LANCHOR10
 7955 0cec 00000000 		.word	StateWhileOn
 7956              	.LVL657:
 7957              	.L664:
2893:src/keys.c    **** 	}
 7958              		.loc 1 2893 10 view .LVU2518
 7959 0cf0 3268     		ldr	r2, [r6]
 7960              	.LBB835:
 7961              	.LBB771:
1273:src/keys.c    **** }
 7962              		.loc 1 1273 9 view .LVU2519
 7963 0cf2 4FF0330B 		mov	fp, #51
 7964 0cf6 FFF7DCB9 		b	.L611
 7965              	.LVL658:
 7966              	.L1167:
1273:src/keys.c    **** }
 7967              		.loc 1 1273 9 view .LVU2520
 7968              	.LBE771:
 7969              	.LBE835:
2896:src/keys.c    **** 		return STATE_UNFINISHED;
 7970              		.loc 1 2896 3 is_stmt 1 view .LVU2521
 7971              	.LBB836:
 7972              	.LBI836:
 111:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 7973              		.loc 1 111 13 view .LVU2522
 7974              	.LBB837:
 112:src/keys.c    **** }
 7975              		.loc 1 112 2 view .LVU2523
 112:src/keys.c    **** }
 7976              		.loc 1 112 16 is_stmt 0 view .LVU2524
 7977 0cfa 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 7978 0cfe 3268     		ldr	r2, [r6]
 7979 0d00 0229     		cmp	r1, #2
 7980 0d02 18BF     		it	ne
 7981 0d04 0223     		movne	r3, #2
 7982 0d06 88F81030 		strb	r3, [r8, #16]
 7983              	.LVL659:
 112:src/keys.c    **** }
 7984              		.loc 1 112 16 view .LVU2525
 7985              	.LBE837:
 7986              	.LBE836:
2897:src/keys.c    **** 	}
 7987              		.loc 1 2897 3 is_stmt 1 view .LVU2526
2897:src/keys.c    **** 	}
 7988              		.loc 1 2897 10 is_stmt 0 view .LVU2527
 7989 0d0a 4FF0330B 		mov	fp, #51
 7990 0d0e FFF7D0B9 		b	.L611
 7991              	.LVL660:
 7992              	.L1195:
 7993              	.LBB838:
 7994              	.LBB748:
1362:src/keys.c    **** 	}
 7995              		.loc 1 1362 3 is_stmt 1 view .LVU2528
1362:src/keys.c    **** 	}
 7996              		.loc 1 1362 6 is_stmt 0 view .LVU2529
 7997 0d12 B8F80800 		ldrh	r0, [r8, #8]
 7998              	.LVL661:
ARM GAS  /tmp/ccihcwFT.s 			page 239


1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7999              		.loc 1 1391 2 is_stmt 1 view .LVU2530
 8000              	.L644:
1392:src/keys.c    **** fin:		set_pc(rawpc);
 8001              		.loc 1 1392 3 view .LVU2531
1392:src/keys.c    **** fin:		set_pc(rawpc);
 8002              		.loc 1 1392 11 is_stmt 0 view .LVU2532
 8003 0d16 FFF7FEFF 		bl	find_user_pc
 8004              	.LVL662:
 8005              	.L653:
1393:src/keys.c    **** fin2:		State2.gtodot = 0;
 8006              		.loc 1 1393 7 is_stmt 1 view .LVU2533
 8007 0d1a FFF7FEFF 		bl	set_pc
 8008              	.LVL663:
 8009              	.L657:
1394:src/keys.c    **** 		State2.digval = 0;
 8010              		.loc 1 1394 8 view .LVU2534
1394:src/keys.c    **** 		State2.digval = 0;
 8011              		.loc 1 1394 22 is_stmt 0 view .LVU2535
 8012 0d1e 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 8013 0d22 3268     		ldr	r2, [r6]
1395:src/keys.c    **** 		State2.numdigit = 0;
 8014              		.loc 1 1395 17 view .LVU2536
 8015 0d24 0023     		movs	r3, #0
1394:src/keys.c    **** 		State2.digval = 0;
 8016              		.loc 1 1394 22 view .LVU2537
 8017 0d26 6FF30001 		bfc	r1, #0, #1
 8018 0d2a 88F81510 		strb	r1, [r8, #21]
1395:src/keys.c    **** 		State2.numdigit = 0;
 8019              		.loc 1 1395 3 is_stmt 1 view .LVU2538
1395:src/keys.c    **** 		State2.numdigit = 0;
 8020              		.loc 1 1395 17 is_stmt 0 view .LVU2539
 8021 0d2e A8F80830 		strh	r3, [r8, #8]	@ movhi
1396:src/keys.c    **** 	}
 8022              		.loc 1 1396 3 is_stmt 1 view .LVU2540
1396:src/keys.c    **** 	}
 8023              		.loc 1 1396 19 is_stmt 0 view .LVU2541
 8024 0d32 88F80B30 		strb	r3, [r8, #11]
 8025              	.LBE748:
 8026              	.LBE838:
2877:src/keys.c    **** 
 8027              		.loc 1 2877 10 view .LVU2542
 8028 0d36 4FF0330B 		mov	fp, #51
 8029 0d3a FFF7BAB9 		b	.L611
 8030              	.LVL664:
 8031              	.L1168:
2900:src/keys.c    **** 		State2.arrow = 0;
 8032              		.loc 1 2900 3 is_stmt 1 view .LVU2543
 8033              	.LBB839:
 8034              	.LBI839:
 111:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 8035              		.loc 1 111 13 view .LVU2544
 8036              	.LBB840:
 112:src/keys.c    **** }
 8037              		.loc 1 112 2 view .LVU2545
 112:src/keys.c    **** }
 8038              		.loc 1 112 16 is_stmt 0 view .LVU2546
ARM GAS  /tmp/ccihcwFT.s 			page 240


 8039 0d3e 98F81040 		ldrb	r4, [r8, #16]	@ zero_extendqisi2
 8040              	.LVL665:
 112:src/keys.c    **** }
 8041              		.loc 1 112 16 view .LVU2547
 8042 0d42 3268     		ldr	r2, [r6]
 8043 0d44 032C     		cmp	r4, #3
 8044              	.LBE840:
 8045              	.LBE839:
2901:src/keys.c    **** 		return STATE_UNFINISHED;
 8046              		.loc 1 2901 16 view .LVU2548
 8047 0d46 60F38201 		bfi	r1, r0, #2, #1
 8048              	.LBB843:
 8049              	.LBB841:
 112:src/keys.c    **** }
 8050              		.loc 1 112 16 view .LVU2549
 8051 0d4a 18BF     		it	ne
 8052 0d4c 0323     		movne	r3, #3
 8053              	.LBE841:
 8054              	.LBE843:
2901:src/keys.c    **** 		return STATE_UNFINISHED;
 8055              		.loc 1 2901 16 view .LVU2550
 8056 0d4e 88F81510 		strb	r1, [r8, #21]
 8057              	.LBB844:
 8058              	.LBB842:
 112:src/keys.c    **** }
 8059              		.loc 1 112 16 view .LVU2551
 8060 0d52 88F81030 		strb	r3, [r8, #16]
 8061              	.LVL666:
 112:src/keys.c    **** }
 8062              		.loc 1 112 16 view .LVU2552
 8063              	.LBE842:
 8064              	.LBE844:
2901:src/keys.c    **** 		return STATE_UNFINISHED;
 8065              		.loc 1 2901 3 is_stmt 1 view .LVU2553
2902:src/keys.c    **** 	}
 8066              		.loc 1 2902 3 view .LVU2554
2902:src/keys.c    **** 	}
 8067              		.loc 1 2902 10 is_stmt 0 view .LVU2555
 8068 0d56 4FF0330B 		mov	fp, #51
 8069 0d5a FFF7AAB9 		b	.L611
 8070              	.LVL667:
 8071              	.L1199:
 8072              	.LBB845:
 8073              	.LBB790:
2518:src/keys.c    **** 			n = max;
 8074              		.loc 1 2518 3 is_stmt 1 view .LVU2556
2518:src/keys.c    **** 			n = max;
 8075              		.loc 1 2518 6 is_stmt 0 view .LVU2557
 8076 0d5e 191F     		subs	r1, r3, #4
 8077              	.LVL668:
2518:src/keys.c    **** 			n = max;
 8078              		.loc 1 2518 6 view .LVU2558
 8079 0d60 012B     		cmp	r3, #1
 8080 0d62 18BF     		it	ne
 8081 0d64 0A46     		movne	r2, r1
 8082              	.LVL669:
2518:src/keys.c    **** 			n = max;
ARM GAS  /tmp/ccihcwFT.s 			page 241


 8083              		.loc 1 2518 6 view .LVU2559
 8084 0d66 08E7     		b	.L690
 8085              	.LVL670:
 8086              	.L723:
2518:src/keys.c    **** 			n = max;
 8087              		.loc 1 2518 6 view .LVU2560
 8088              	.LBE790:
 8089              	.LBE845:
2929:src/keys.c    **** 
 8090              		.loc 1 2929 3 is_stmt 1 view .LVU2561
 8091              	.LBB846:
 8092              	.LBI846:
2409:src/keys.c    **** 	enum shifts shift = reset_shift();
 8093              		.loc 1 2409 12 view .LVU2562
 8094              	.LBB847:
2410:src/keys.c    **** 	unsigned int ch = 0;
 8095              		.loc 1 2410 2 view .LVU2563
 8096              	.LBB848:
 8097              	.LBI848:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 8098              		.loc 1 104 13 view .LVU2564
 8099              	.LBE848:
 8100              	.LBE847:
 8101              	.LBE846:
 8102              	.LBE1234:
 8103              	.LBE1306:
 105:src/keys.c    **** }
 8104              		.loc 1 105 2 view .LVU2565
 8105              	.LBB1307:
 8106              	.LBB1235:
 8107              	.LBB884:
 8108              	.LBB876:
 8109              	.LBB855:
 8110              	.LBB849:
 8111              	.LBI849:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 8112              		.loc 1 94 20 view .LVU2566
 8113              	.LBB850:
  95:src/keys.c    **** 	State2.shifts = shift;
 8114              		.loc 1 95 2 view .LVU2567
 8115              	.LBB851:
 8116              	.LBI851:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 8117              		.loc 1 86 13 view .LVU2568
 8118              	.LBB852:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8119              		.loc 1 87 2 view .LVU2569
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8120              		.loc 1 87 18 is_stmt 0 view .LVU2570
 8121 0d68 FFF7FEFF 		bl	shift_down
 8122              	.LVL671:
  88:src/keys.c    **** }
 8123              		.loc 1 88 2 is_stmt 1 view .LVU2571
  88:src/keys.c    **** }
 8124              		.loc 1 88 52 is_stmt 0 view .LVU2572
 8125 0d6c 0146     		mov	r1, r0
 8126 0d6e 08B9     		cbnz	r0, .L720
ARM GAS  /tmp/ccihcwFT.s 			page 242


 8127 0d70 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 8128              	.L720:
 8129              	.LVL672:
  88:src/keys.c    **** }
 8130              		.loc 1 88 52 view .LVU2573
 8131              	.LBE852:
 8132              	.LBE851:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8133              		.loc 1 96 2 is_stmt 1 view .LVU2574
 8134              	.LBE850:
 8135              	.LBE849:
 8136              	.LBE855:
2414:src/keys.c    **** 		// Alpha catalogue from within multi character command
 8137              		.loc 1 2414 5 is_stmt 0 view .LVU2575
 8138 0d74 98F80E00 		ldrb	r0, [r8, #14]	@ zero_extendqisi2
 8139              	.LBB856:
 8140              	.LBB854:
 8141              	.LBB853:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8142              		.loc 1 96 16 view .LVU2576
 8143 0d78 0023     		movs	r3, #0
 8144 0d7a 88F81030 		strb	r3, [r8, #16]
  98:src/keys.c    **** }
 8145              		.loc 1 98 2 is_stmt 1 view .LVU2577
 8146              	.LVL673:
  98:src/keys.c    **** }
 8147              		.loc 1 98 2 is_stmt 0 view .LVU2578
 8148              	.LBE853:
 8149              	.LBE854:
 8150              	.LBE856:
2411:src/keys.c    **** 	unsigned int opcode;
 8151              		.loc 1 2411 2 is_stmt 1 view .LVU2579
2412:src/keys.c    **** 
 8152              		.loc 1 2412 2 view .LVU2580
2414:src/keys.c    **** 		// Alpha catalogue from within multi character command
 8153              		.loc 1 2414 2 view .LVU2581
2414:src/keys.c    **** 		// Alpha catalogue from within multi character command
 8154              		.loc 1 2414 5 is_stmt 0 view .LVU2582
 8155 0d7e 0028     		cmp	r0, #0
 8156 0d80 40F0B783 		bne	.L1207
2423:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
 8157              		.loc 1 2423 2 is_stmt 1 view .LVU2583
 8158 0d84 102C     		cmp	r4, #16
 8159 0d86 00F03185 		beq	.L727
 8160 0d8a 242C     		cmp	r4, #36
 8161 0d8c 00F01785 		beq	.L728
 8162 0d90 0C2C     		cmp	r4, #12
 8163 0d92 00F01384 		beq	.L1208
 8164              	.L729:
2456:src/keys.c    **** 	if (ch == 0)
 8165              		.loc 1 2456 2 view .LVU2584
 8166              	.LBB857:
 8167              	.LBB858:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 8168              		.loc 1 439 6 is_stmt 0 view .LVU2585
 8169 0d96 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 8170              	.LVL674:
ARM GAS  /tmp/ccihcwFT.s 			page 243


 439:src/keys.c    **** 		if (shift == SHIFT_N)
 8171              		.loc 1 439 6 view .LVU2586
 8172              	.LBE858:
 8173              	.LBI857:
 389:src/keys.c    **** {
 8174              		.loc 1 389 12 is_stmt 1 view .LVU2587
 8175              	.LBB863:
 391:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 8176              		.loc 1 391 2 view .LVU2588
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 8177              		.loc 1 439 2 view .LVU2589
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 8178              		.loc 1 439 5 is_stmt 0 view .LVU2590
 8179 0d9a DB06     		lsls	r3, r3, #27
 8180 0d9c 03D5     		bpl	.L733
 440:src/keys.c    **** 			shift = SHIFT_LC_N;
 8181              		.loc 1 440 3 is_stmt 1 view .LVU2591
 440:src/keys.c    **** 			shift = SHIFT_LC_N;
 8182              		.loc 1 440 6 is_stmt 0 view .LVU2592
 8183 0d9e 0029     		cmp	r1, #0
 8184 0da0 40F0CF86 		bne	.L1209
 441:src/keys.c    **** 		else if (shift == SHIFT_G)
 8185              		.loc 1 441 10 view .LVU2593
 8186 0da4 0421     		movs	r1, #4
 8187              	.LVL675:
 8188              	.L733:
 445:src/keys.c    **** }
 8189              		.loc 1 445 2 is_stmt 1 view .LVU2594
 8190              	.LBB859:
 8191              	.LBI859:
 121:src/keys.c    **** {
 8192              		.loc 1 121 12 view .LVU2595
 8193              	.LBB860:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8194              		.loc 1 123 2 view .LVU2596
 133:src/keys.c    **** }
 8195              		.loc 1 133 2 view .LVU2597
 133:src/keys.c    **** }
 8196              		.loc 1 133 23 is_stmt 0 view .LVU2598
 8197 0da6 AF4B     		ldr	r3, .L1256
 8198              	.LBE860:
 8199              	.LBE859:
 445:src/keys.c    **** }
 8200              		.loc 1 445 49 view .LVU2599
 8201 0da8 AF4A     		ldr	r2, .L1256+4
 8202              	.LBB862:
 8203              	.LBB861:
 133:src/keys.c    **** }
 8204              		.loc 1 133 23 view .LVU2600
 8205 0daa 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 8206              	.LBE861:
 8207              	.LBE862:
 445:src/keys.c    **** }
 8208              		.loc 1 445 49 view .LVU2601
 8209 0dac 0620     		movs	r0, #6
 8210 0dae 00FB0323 		mla	r3, r0, r3, r2
 8211              	.LBE863:
ARM GAS  /tmp/ccihcwFT.s 			page 244


 8212              	.LBE857:
2456:src/keys.c    **** 	if (ch == 0)
 8213              		.loc 1 2456 5 view .LVU2602
 8214 0db2 585C     		ldrb	r0, [r3, r1]	@ zero_extendqisi2
 8215              	.LVL676:
2457:src/keys.c    **** 		return STATE_UNFINISHED;
 8216              		.loc 1 2457 2 is_stmt 1 view .LVU2603
2457:src/keys.c    **** 		return STATE_UNFINISHED;
 8217              		.loc 1 2457 5 is_stmt 0 view .LVU2604
 8218 0db4 0028     		cmp	r0, #0
 8219 0db6 00F09685 		beq	.L1210
 8220              	.L726:
2460:src/keys.c    **** 		State2.digval = ch;
 8221              		.loc 1 2460 2 is_stmt 1 view .LVU2605
2460:src/keys.c    **** 		State2.digval = ch;
 8222              		.loc 1 2460 12 is_stmt 0 view .LVU2606
 8223 0dba 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
2460:src/keys.c    **** 		State2.digval = ch;
 8224              		.loc 1 2460 5 view .LVU2607
 8225 0dbe 002B     		cmp	r3, #0
 8226 0dc0 00F03185 		beq	.L1211
2464:src/keys.c    **** 		State2.digval2 = ch;
 8227              		.loc 1 2464 9 is_stmt 1 view .LVU2608
2464:src/keys.c    **** 		State2.digval2 = ch;
 8228              		.loc 1 2464 12 is_stmt 0 view .LVU2609
 8229 0dc4 012B     		cmp	r3, #1
 8230 0dc6 00F0BB87 		beq	.L1212
2469:src/keys.c    **** 
 8231              		.loc 1 2469 2 is_stmt 1 view .LVU2610
 8232              	.LBB865:
 8233              	.LBI865:
2402:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 8234              		.loc 1 2402 13 view .LVU2611
 8235              	.LBB866:
2404:src/keys.c    **** 	if (! State2.alphas )
 8236              		.loc 1 2404 2 view .LVU2612
2404:src/keys.c    **** 	if (! State2.alphas )
 8237              		.loc 1 2404 15 is_stmt 0 view .LVU2613
 8238 0dca 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2405:src/keys.c    **** 		State2.alphashift = 0;
 8239              		.loc 1 2405 6 view .LVU2614
 8240 0dce 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2404:src/keys.c    **** 	if (! State2.alphas )
 8241              		.loc 1 2404 15 view .LVU2615
 8242 0dd2 6FF3C302 		bfc	r2, #3, #1
 8243 0dd6 88F81520 		strb	r2, [r8, #21]
2405:src/keys.c    **** 		State2.alphashift = 0;
 8244              		.loc 1 2405 2 is_stmt 1 view .LVU2616
2405:src/keys.c    **** 		State2.alphashift = 0;
 8245              		.loc 1 2405 5 is_stmt 0 view .LVU2617
 8246 0dda 13F00802 		ands	r2, r3, #8
2406:src/keys.c    **** }
 8247              		.loc 1 2406 3 is_stmt 1 view .LVU2618
2406:src/keys.c    **** }
 8248              		.loc 1 2406 21 is_stmt 0 view .LVU2619
 8249 0dde 04BF     		itt	eq
 8250 0de0 62F30413 		bfieq	r3, r2, #4, #1
ARM GAS  /tmp/ccihcwFT.s 			page 245


 8251 0de4 88F81630 		strbeq	r3, [r8, #22]
 8252              	.LVL677:
 8253              	.L732:
2406:src/keys.c    **** }
 8254              		.loc 1 2406 21 view .LVU2620
 8255              	.LBE866:
 8256              	.LBE865:
2472:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 8257              		.loc 1 2472 2 is_stmt 1 view .LVU2621
2474:src/keys.c    **** }
 8258              		.loc 1 2474 2 view .LVU2622
2472:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 8259              		.loc 1 2472 21 is_stmt 0 view .LVU2623
 8260 0de8 98F81FB0 		ldrb	fp, [r8, #31]	@ zero_extendqisi2
2473:src/keys.c    **** 	return opcode;
 8261              		.loc 1 2473 17 view .LVU2624
 8262 0dec B8F80820 		ldrh	r2, [r8, #8]
2473:src/keys.c    **** 	return opcode;
 8263              		.loc 1 2473 34 view .LVU2625
 8264 0df0 98F80A30 		ldrb	r3, [r8, #10]	@ zero_extendqisi2
2472:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 8265              		.loc 1 2472 29 view .LVU2626
 8266 0df4 4FEA0B2B 		lsl	fp, fp, #8
2472:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 8267              		.loc 1 2472 18 view .LVU2627
 8268 0df8 0BF5704B 		add	fp, fp, #61440
2473:src/keys.c    **** 	return opcode;
 8269              		.loc 1 2473 9 view .LVU2628
 8270 0dfc 9344     		add	fp, fp, r2
2473:src/keys.c    **** 	return opcode;
 8271              		.loc 1 2473 25 view .LVU2629
 8272 0dfe 0BEB034B 		add	fp, fp, r3, lsl #16
2472:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 8273              		.loc 1 2472 9 view .LVU2630
 8274 0e02 0BEB006B 		add	fp, fp, r0, lsl #24
2474:src/keys.c    **** }
 8275              		.loc 1 2474 9 view .LVU2631
 8276 0e06 FFF71BBB 		b	.L641
 8277              	.LVL678:
 8278              	.L1189:
2474:src/keys.c    **** }
 8279              		.loc 1 2474 9 view .LVU2632
 8280              	.LBE876:
 8281              	.LBE884:
 8282              	.LBB885:
 8283              	.LBB749:
1345:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8284              		.loc 1 1345 44 is_stmt 1 view .LVU2633
1345:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8285              		.loc 1 1345 52 is_stmt 0 view .LVU2634
 8286 0e0a 0120     		movs	r0, #1
 8287 0e0c FFF7FEFF 		bl	gtodot_digit
 8288              	.LVL679:
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8289              		.loc 1 1391 2 is_stmt 1 view .LVU2635
 8290              	.LBE749:
 8291              	.LBE885:
ARM GAS  /tmp/ccihcwFT.s 			page 246


2877:src/keys.c    **** 
 8292              		.loc 1 2877 10 is_stmt 0 view .LVU2636
 8293 0e10 4FF0330B 		mov	fp, #51
 8294 0e14 3268     		ldr	r2, [r6]
 8295 0e16 FFF74CB9 		b	.L611
 8296              	.LVL680:
 8297              	.L1206:
2917:src/keys.c    **** 		if (is_bad_cmdline())
 8298              		.loc 1 2917 2 is_stmt 1 view .LVU2637
2917:src/keys.c    **** 		if (is_bad_cmdline())
 8299              		.loc 1 2917 5 is_stmt 0 view .LVU2638
 8300 0e1a BBF1000F 		cmp	fp, #0
 8301 0e1e 7FF431AF 		bne	.L707
 8302 0e22 FFF747BA 		b	.L721
 8303              	.LVL681:
 8304              	.L1190:
 8305              	.LBB886:
 8306              	.LBB750:
1346:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 8307              		.loc 1 1346 44 is_stmt 1 view .LVU2639
1346:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 8308              		.loc 1 1346 52 is_stmt 0 view .LVU2640
 8309 0e26 0220     		movs	r0, #2
 8310 0e28 FFF7FEFF 		bl	gtodot_digit
 8311              	.LVL682:
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8312              		.loc 1 1391 2 is_stmt 1 view .LVU2641
 8313              	.LBE750:
 8314              	.LBE886:
2877:src/keys.c    **** 
 8315              		.loc 1 2877 10 is_stmt 0 view .LVU2642
 8316 0e2c 4FF0330B 		mov	fp, #51
 8317 0e30 3268     		ldr	r2, [r6]
 8318 0e32 FFF73EB9 		b	.L611
 8319              	.LVL683:
 8320              	.L675:
 8321              	.LBB887:
 8322              	.LBB731:
1964:src/keys.c    **** 	}
 8323              		.loc 1 1964 3 is_stmt 1 view .LVU2643
1964:src/keys.c    **** 	}
 8324              		.loc 1 1964 10 is_stmt 0 view .LVU2644
 8325 0e36 0AF12000 		add	r0, r10, #32
 8326 0e3a 42EA0020 		orr	r0, r2, r0, lsl #8
 8327 0e3e 8346     		mov	fp, r0
 8328              	.LVL684:
1964:src/keys.c    **** 	}
 8329              		.loc 1 1964 10 view .LVU2645
 8330 0e40 FFF770BB 		b	.L668
 8331              	.LVL685:
 8332              	.L1203:
1964:src/keys.c    **** 	}
 8333              		.loc 1 1964 10 view .LVU2646
 8334              	.LBE731:
 8335              	.LBE887:
 8336              	.LBB888:
 8337              	.LBB823:
ARM GAS  /tmp/ccihcwFT.s 			page 247


1301:src/keys.c    **** 
 8338              		.loc 1 1301 3 is_stmt 1 view .LVU2647
1301:src/keys.c    **** 
 8339              		.loc 1 1301 25 is_stmt 0 view .LVU2648
 8340 0e44 894A     		ldr	r2, .L1256+8
 8341 0e46 0AEB4303 		add	r3, r10, r3, lsl #1
 8342 0e4a 32F813B0 		ldrh	fp, [r2, r3, lsl #1]
 8343              	.LVL686:
1301:src/keys.c    **** 
 8344              		.loc 1 1301 25 view .LVU2649
 8345 0e4e FFF7F7BA 		b	.L641
 8346              	.LVL687:
 8347              	.L1200:
1301:src/keys.c    **** 
 8348              		.loc 1 1301 25 view .LVU2650
 8349              	.LBE823:
 8350              	.LBE888:
 8351              	.LBB889:
 8352              	.LBB791:
2522:src/keys.c    **** 			n = -2;
 8353              		.loc 1 2522 3 is_stmt 1 view .LVU2651
2522:src/keys.c    **** 			n = -2;
 8354              		.loc 1 2522 6 is_stmt 0 view .LVU2652
 8355 0e52 023B     		subs	r3, r3, #2
 8356              	.LVL688:
2523:src/keys.c    **** 	}
 8357              		.loc 1 2523 6 view .LVU2653
 8358 0e54 9342     		cmp	r3, r2
 8359 0e56 D4BF     		ite	le
 8360 0e58 1A46     		movle	r2, r3
 8361              	.LVL689:
2523:src/keys.c    **** 	}
 8362              		.loc 1 2523 6 view .LVU2654
 8363 0e5a 6FF00102 		mvngt	r2, #1
 8364 0e5e 8CE6     		b	.L690
 8365              	.LVL690:
 8366              	.L1191:
2523:src/keys.c    **** 	}
 8367              		.loc 1 2523 6 view .LVU2655
 8368              	.LBE791:
 8369              	.LBE889:
 8370              	.LBB890:
 8371              	.LBB751:
1347:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 8372              		.loc 1 1347 44 is_stmt 1 view .LVU2656
1347:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 8373              		.loc 1 1347 52 is_stmt 0 view .LVU2657
 8374 0e60 0320     		movs	r0, #3
 8375 0e62 FFF7FEFF 		bl	gtodot_digit
 8376              	.LVL691:
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8377              		.loc 1 1391 2 is_stmt 1 view .LVU2658
 8378              	.LBE751:
 8379              	.LBE890:
2877:src/keys.c    **** 
 8380              		.loc 1 2877 10 is_stmt 0 view .LVU2659
 8381 0e66 4FF0330B 		mov	fp, #51
ARM GAS  /tmp/ccihcwFT.s 			page 248


 8382 0e6a 3268     		ldr	r2, [r6]
 8383 0e6c FFF721B9 		b	.L611
 8384              	.LVL692:
 8385              	.L1205:
 8386              	.LBB891:
 8387              	.LBB667:
 266:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 8388              		.loc 1 266 74 view .LVU2660
 8389 0e70 D8F81430 		ldr	r3, [r8, #20]
 8390 0e74 7E4A     		ldr	r2, .L1256+12
 8391 0e76 1342     		tst	r3, r2
 8392 0e78 3FF404AF 		beq	.L707
 269:src/keys.c    ****     /*
 8393              		.loc 1 269 3 is_stmt 1 view .LVU2661
 269:src/keys.c    ****     /*
 8394              		.loc 1 269 23 is_stmt 0 view .LVU2662
 8395 0e7c 7D4A     		ldr	r2, .L1256+16
 269:src/keys.c    ****     /*
 8396              		.loc 1 269 6 view .LVU2663
 8397 0e7e 1342     		tst	r3, r2
 8398 0e80 3FF4DAA9 		beq	.L940
 8399 0e84 B7E6     		b	.L709
 8400              	.LVL693:
 8401              	.L959:
 8402              	.LBB661:
 325:src/keys.c    **** #ifndef WINGUI
 8403              		.loc 1 325 8 view .LVU2664
 8404 0e86 7C4B     		ldr	r3, .L1256+20
 331:src/keys.c    ****   }
 8405              		.loc 1 331 9 view .LVU2665
 8406 0e88 0C22     		movs	r2, #12
 327:src/keys.c    **** #else
 8407              		.loc 1 327 27 view .LVU2666
 8408 0e8a 4FF0010C 		mov	ip, #1
 8409 0e8e FFF7E2B9 		b	.L712
 8410              	.LVL694:
 8411              	.L685:
 327:src/keys.c    **** #else
 8412              		.loc 1 327 27 view .LVU2667
 8413 0e92 3268     		ldr	r2, [r6]
 8414              	.LBE661:
 8415              	.LBE667:
 8416              	.LBE891:
 8417              	.LBB892:
 8418              	.LBB732:
1988:src/keys.c    **** 
 8419              		.loc 1 1988 10 view .LVU2668
 8420 0e94 4FF0330B 		mov	fp, #51
 8421              	.LVL695:
1988:src/keys.c    **** 
 8422              		.loc 1 1988 10 view .LVU2669
 8423 0e98 FFF70BB9 		b	.L611
 8424              	.LVL696:
 8425              	.L684:
1983:src/keys.c    **** 		return STATE_UNFINISHED;
 8426              		.loc 1 1983 3 is_stmt 1 view .LVU2670
 8427              	.LBB725:
ARM GAS  /tmp/ccihcwFT.s 			page 249


 8428              	.LBI725:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 8429              		.loc 1 506 13 view .LVU2671
 8430              	.LBB726:
 507:src/keys.c    **** 		return;
 8431              		.loc 1 507 2 view .LVU2672
 507:src/keys.c    **** 		return;
 8432              		.loc 1 507 6 is_stmt 0 view .LVU2673
 8433 0e9c FFF7FEFF 		bl	is_bad_cmdline
 8434              	.LVL697:
 507:src/keys.c    **** 		return;
 8435              		.loc 1 507 5 view .LVU2674
 8436 0ea0 0446     		mov	r4, r0
 8437 0ea2 0028     		cmp	r0, #0
 8438 0ea4 40F0A983 		bne	.L1213
 8439 0ea8 5FFA8AF0 		uxtb	r0, r10
 8440 0eac FFF7FEFF 		bl	init_arg.part.0
 8441              	.LVL698:
 8442              	.LBE726:
 8443              	.LBE725:
 8444              	.LBE732:
 8445              	.LBE892:
 8446              	.LBE1235:
 8447              	.LBE1307:
2997:src/keys.c    ****   if (was_paused && Pause == 0)
 8448              		.loc 1 2997 7 view .LVU2675
 8449 0eb0 2546     		mov	r5, r4
 8450 0eb2 3268     		ldr	r2, [r6]
 8451              	.LBB1308:
 8452              	.LBB1236:
 8453              	.LBB893:
 8454              	.LBB733:
1984:src/keys.c    **** 
 8455              		.loc 1 1984 10 view .LVU2676
 8456 0eb4 4FF0330B 		mov	fp, #51
 8457              	.LVL699:
1984:src/keys.c    **** 
 8458              		.loc 1 1984 10 view .LVU2677
 8459 0eb8 FFF7FBB8 		b	.L611
 8460              	.LVL700:
 8461              	.L722:
1984:src/keys.c    **** 
 8462              		.loc 1 1984 10 view .LVU2678
 8463              	.LBE733:
 8464              	.LBE893:
2920:src/keys.c    **** 		init_cat( cat );
 8465              		.loc 1 2920 3 is_stmt 1 view .LVU2679
 8466 0ebc FFF7FEFF 		bl	init_cat
 8467              	.LVL701:
2921:src/keys.c    **** 		return STATE_UNFINISHED;
 8468              		.loc 1 2921 3 view .LVU2680
 8469 0ec0 5846     		mov	r0, fp
 8470 0ec2 FFF7FEFF 		bl	init_cat
 8471              	.LVL702:
2922:src/keys.c    **** 	}
 8472              		.loc 1 2922 3 view .LVU2681
 8473              	.LBE1236:
ARM GAS  /tmp/ccihcwFT.s 			page 250


 8474              	.LBE1308:
2997:src/keys.c    ****   if (was_paused && Pause == 0)
 8475              		.loc 1 2997 7 is_stmt 0 view .LVU2682
 8476 0ec6 2546     		mov	r5, r4
 8477 0ec8 3268     		ldr	r2, [r6]
 8478              	.LBB1309:
 8479              	.LBB1237:
2922:src/keys.c    **** 	}
 8480              		.loc 1 2922 10 view .LVU2683
 8481 0eca 4FF0330B 		mov	fp, #51
 8482 0ece FFF7F0B8 		b	.L611
 8483              	.LVL703:
 8484              	.L954:
 8485              	.LBB894:
 8486              	.LBB792:
 8487              	.LBB786:
2530:src/keys.c    **** 		if (nn <= 9)
 8488              		.loc 1 2530 7 view .LVU2684
 8489 0ed2 0A46     		mov	r2, r1
 8490              	.LVL704:
2530:src/keys.c    **** 		if (nn <= 9)
 8491              		.loc 1 2530 7 view .LVU2685
 8492 0ed4 51E6     		b	.L690
 8493              	.LVL705:
 8494              	.L1204:
2530:src/keys.c    **** 		if (nn <= 9)
 8495              		.loc 1 2530 7 view .LVU2686
 8496              	.LBE786:
 8497              	.LBE792:
 8498              	.LBE894:
 8499              	.LBB895:
 8500              	.LBB824:
1304:src/keys.c    **** 
 8501              		.loc 1 1304 3 is_stmt 1 view .LVU2687
 8502 0ed6 694B     		ldr	r3, .L1256+24
 8503              	.LBB817:
 8504              	.LBB818:
 652:src/keys.c    **** }
 8505              		.loc 1 652 15 is_stmt 0 view .LVU2688
 8506 0ed8 98F81110 		ldrb	r1, [r8, #17]	@ zero_extendqisi2
 8507 0edc 3268     		ldr	r2, [r6]
 8508              	.LBE818:
 8509              	.LBE817:
1304:src/keys.c    **** 
 8510              		.loc 1 1304 3 view .LVU2689
 8511 0ede 03EB4403 		add	r3, r3, r4, lsl #1
1306:src/keys.c    **** }
 8512              		.loc 1 1306 9 view .LVU2690
 8513 0ee2 4FF0330B 		mov	fp, #51
 8514              	.LVL706:
1304:src/keys.c    **** 
 8515              		.loc 1 1304 3 view .LVU2691
 8516 0ee6 13F80A30 		ldrb	r3, [r3, r10]	@ zero_extendqisi2
 8517              	.LVL707:
 8518              	.LBB820:
 8519              	.LBI817:
 651:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
ARM GAS  /tmp/ccihcwFT.s 			page 251


 8520              		.loc 1 651 13 is_stmt 1 view .LVU2692
 8521              	.LBB819:
 652:src/keys.c    **** }
 8522              		.loc 1 652 2 view .LVU2693
 652:src/keys.c    **** }
 8523              		.loc 1 652 15 is_stmt 0 view .LVU2694
 8524 0eea 9942     		cmp	r1, r3
 8525 0eec 08BF     		it	eq
 8526 0eee 0023     		moveq	r3, #0
 8527              	.LVL708:
 652:src/keys.c    **** }
 8528              		.loc 1 652 15 view .LVU2695
 8529 0ef0 88F81130 		strb	r3, [r8, #17]
 653:src/keys.c    **** 
 8530              		.loc 1 653 1 view .LVU2696
 8531 0ef4 FFF7DDB8 		b	.L611
 8532              	.LVL709:
 8533              	.L1174:
 653:src/keys.c    **** 
 8534              		.loc 1 653 1 view .LVU2697
 8535              	.LBE819:
 8536              	.LBE820:
 8537              	.LBE824:
 8538              	.LBE895:
2932:src/keys.c    **** 
 8539              		.loc 1 2932 3 is_stmt 1 view .LVU2698
 8540              	.LBB896:
 8541              	.LBI896:
2592:src/keys.c    **** 	unsigned int pc = State2.digval;
 8542              		.loc 1 2592 12 view .LVU2699
 8543              	.LBB897:
2593:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 8544              		.loc 1 2593 2 view .LVU2700
2595:src/keys.c    **** 	const int opcode = getprog(pc);
 8545              		.loc 1 2595 27 is_stmt 0 view .LVU2701
 8546 0ef8 262C     		cmp	r4, #38
2593:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 8547              		.loc 1 2593 15 view .LVU2702
 8548 0efa B8F808A0 		ldrh	r10, [r8, #8]
 8549              	.LVL710:
2594:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
 8550              		.loc 1 2594 2 is_stmt 1 view .LVU2703
2595:src/keys.c    **** 	const int opcode = getprog(pc);
 8551              		.loc 1 2595 27 is_stmt 0 view .LVU2704
 8552 0efe 00F01283 		beq	.L964
 8553              	.LVL711:
 8554              	.LBB898:
 8555              	.LBI898:
 200:src/keys.c    **** {
 8556              		.loc 1 200 14 is_stmt 1 view .LVU2705
 8557              	.LBB899:
 202:src/keys.c    ****     // K00 - K05
 8558              		.loc 1 202 3 view .LVU2706
 224:src/keys.c    **** }
 8559              		.loc 1 224 3 view .LVU2707
 8560              	.LBB900:
 8561              	.LBI900:
ARM GAS  /tmp/ccihcwFT.s 			page 252


 121:src/keys.c    **** {
 8562              		.loc 1 121 12 view .LVU2708
 8563              	.LBB901:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8564              		.loc 1 123 2 view .LVU2709
 133:src/keys.c    **** }
 8565              		.loc 1 133 2 view .LVU2710
 133:src/keys.c    **** }
 8566              		.loc 1 133 23 is_stmt 0 view .LVU2711
 8567 0f02 584B     		ldr	r3, .L1256
 8568              	.LBE901:
 8569              	.LBE900:
 224:src/keys.c    **** }
 8570              		.loc 1 224 28 view .LVU2712
 8571 0f04 5E4A     		ldr	r2, .L1256+28
 8572              	.LBB903:
 8573              	.LBB902:
 133:src/keys.c    **** }
 8574              		.loc 1 133 23 view .LVU2713
 8575 0f06 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 8576              	.LBE902:
 8577              	.LBE903:
 224:src/keys.c    **** }
 8578              		.loc 1 224 10 view .LVU2714
 8579 0f08 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
 8580              	.LBE899:
 8581              	.LBE898:
2595:src/keys.c    **** 	const int opcode = getprog(pc);
 8582              		.loc 1 2595 27 view .LVU2715
 8583 0f0c 2BF0800B 		bic	fp, fp, #128
 8584              	.L741:
 8585              	.LVL712:
2596:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 8586              		.loc 1 2596 2 is_stmt 1 view .LVU2716
2596:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 8587              		.loc 1 2596 21 is_stmt 0 view .LVU2717
 8588 0f10 5046     		mov	r0, r10
 8589 0f12 FFF7FEFF 		bl	getprog
 8590              	.LVL713:
2597:src/keys.c    **** 	const int direct = State2.runmode;
 8591              		.loc 1 2597 2 is_stmt 1 view .LVU2718
2597:src/keys.c    **** 	const int direct = State2.runmode;
 8592              		.loc 1 2597 20 is_stmt 0 view .LVU2719
 8593 0f16 00F47040 		and	r0, r0, #61440
 8594              	.LVL714:
2597:src/keys.c    **** 	const int direct = State2.runmode;
 8595              		.loc 1 2597 63 view .LVU2720
 8596 0f1a B0F5704F 		cmp	r0, #61440
 8597 0f1e 00F0D384 		beq	.L1214
 8598 0f22 0022     		movs	r2, #0
 8599              	.L742:
 8600              	.LVL715:
2598:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8601              		.loc 1 2598 2 is_stmt 1 view .LVU2721
2598:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8602              		.loc 1 2598 27 is_stmt 0 view .LVU2722
 8603 0f24 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
ARM GAS  /tmp/ccihcwFT.s 			page 253


 8604 0f28 0192     		str	r2, [sp, #4]
 8605              	.LVL716:
2598:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8606              		.loc 1 2598 27 view .LVU2723
 8607 0f2a C3F38013 		ubfx	r3, r3, #6, #1
 8608 0f2e 0093     		str	r3, [sp]
 8609              	.LVL717:
2599:src/keys.c    **** 	int op = STATE_UNFINISHED;
 8610              		.loc 1 2599 2 is_stmt 1 view .LVU2724
 8611              	.LBB904:
 8612              	.LBI904:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 8613              		.loc 1 104 13 view .LVU2725
 8614              	.LBE904:
 8615              	.LBE897:
 8616              	.LBE896:
 8617              	.LBE1237:
 8618              	.LBE1309:
 105:src/keys.c    **** }
 8619              		.loc 1 105 2 view .LVU2726
 8620              	.LBB1310:
 8621              	.LBB1238:
 8622              	.LBB931:
 8623              	.LBB923:
 8624              	.LBB911:
 8625              	.LBB905:
 8626              	.LBI905:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 8627              		.loc 1 94 20 view .LVU2727
 8628              	.LBB906:
  95:src/keys.c    **** 	State2.shifts = shift;
 8629              		.loc 1 95 2 view .LVU2728
 8630              	.LBB907:
 8631              	.LBI907:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 8632              		.loc 1 86 13 view .LVU2729
 8633              	.LBB908:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8634              		.loc 1 87 2 view .LVU2730
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8635              		.loc 1 87 18 is_stmt 0 view .LVU2731
 8636 0f30 FFF7FEFF 		bl	shift_down
 8637              	.LVL718:
  88:src/keys.c    **** }
 8638              		.loc 1 88 2 is_stmt 1 view .LVU2732
  88:src/keys.c    **** }
 8639              		.loc 1 88 52 is_stmt 0 view .LVU2733
 8640 0f34 019A     		ldr	r2, [sp, #4]
 8641 0f36 0346     		mov	r3, r0
 8642 0f38 08B9     		cbnz	r0, .L743
 8643 0f3a 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 8644              	.L743:
 8645              	.LVL719:
  88:src/keys.c    **** }
 8646              		.loc 1 88 52 view .LVU2734
 8647              	.LBE908:
 8648              	.LBE907:
ARM GAS  /tmp/ccihcwFT.s 			page 254


  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8649              		.loc 1 96 2 is_stmt 1 view .LVU2735
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8650              		.loc 1 96 16 is_stmt 0 view .LVU2736
 8651 0f3e 0021     		movs	r1, #0
 8652              	.LBE906:
 8653              	.LBE905:
 8654              	.LBE911:
2602:src/keys.c    **** 		// Digits take you to that segment
 8655              		.loc 1 2602 5 view .LVU2737
 8656 0f40 BBF1020F 		cmp	fp, #2
 8657              	.LBB912:
 8658              	.LBB910:
 8659              	.LBB909:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8660              		.loc 1 96 16 view .LVU2738
 8661 0f44 88F81010 		strb	r1, [r8, #16]
  98:src/keys.c    **** }
 8662              		.loc 1 98 2 is_stmt 1 view .LVU2739
 8663              	.LVL720:
  98:src/keys.c    **** }
 8664              		.loc 1 98 2 is_stmt 0 view .LVU2740
 8665              	.LBE909:
 8666              	.LBE910:
 8667              	.LBE912:
2600:src/keys.c    **** 
 8668              		.loc 1 2600 2 is_stmt 1 view .LVU2741
2602:src/keys.c    **** 		// Digits take you to that segment
 8669              		.loc 1 2602 2 view .LVU2742
2602:src/keys.c    **** 		// Digits take you to that segment
 8670              		.loc 1 2602 5 is_stmt 0 view .LVU2743
 8671 0f48 40F26C85 		bls	.L1215
2611:src/keys.c    **** 
 8672              		.loc 1 2611 2 is_stmt 1 view .LVU2744
2611:src/keys.c    **** 
 8673              		.loc 1 2611 12 is_stmt 0 view .LVU2745
 8674 0f4c 44EA0323 		orr	r3, r4, r3, lsl #8
 8675              	.LVL721:
2611:src/keys.c    **** 
 8676              		.loc 1 2611 2 view .LVU2746
 8677 0f50 272B     		cmp	r3, #39
 8678 0f52 00F39780 		bgt	.L746
 8679 0f56 042B     		cmp	r3, #4
 8680 0f58 4ADD     		ble	.L748
 8681 0f5a 053B     		subs	r3, r3, #5
 8682 0f5c 222B     		cmp	r3, #34
 8683 0f5e 47D8     		bhi	.L748
 8684 0f60 DFE803F0 		tbb	[pc, r3]
 8685              	.L755:
 8686 0f64 3D       		.byte	(.L760-.L755)/2
 8687 0f65 4B       		.byte	(.L759-.L755)/2
 8688 0f66 4B       		.byte	(.L759-.L755)/2
 8689 0f67 46       		.byte	(.L748-.L755)/2
 8690 0f68 46       		.byte	(.L748-.L755)/2
 8691 0f69 46       		.byte	(.L748-.L755)/2
 8692 0f6a 46       		.byte	(.L748-.L755)/2
 8693 0f6b 12       		.byte	(.L967-.L755)/2
ARM GAS  /tmp/ccihcwFT.s 			page 255


 8694 0f6c 46       		.byte	(.L748-.L755)/2
 8695 0f6d 46       		.byte	(.L748-.L755)/2
 8696 0f6e 46       		.byte	(.L748-.L755)/2
 8697 0f6f 71       		.byte	(.L758-.L755)/2
 8698 0f70 46       		.byte	(.L748-.L755)/2
 8699 0f71 66       		.byte	(.L757-.L755)/2
 8700 0f72 46       		.byte	(.L748-.L755)/2
 8701 0f73 46       		.byte	(.L748-.L755)/2
 8702 0f74 46       		.byte	(.L748-.L755)/2
 8703 0f75 46       		.byte	(.L748-.L755)/2
 8704 0f76 46       		.byte	(.L748-.L755)/2
 8705 0f77 31       		.byte	(.L756-.L755)/2
 8706 0f78 46       		.byte	(.L748-.L755)/2
 8707 0f79 46       		.byte	(.L748-.L755)/2
 8708 0f7a 46       		.byte	(.L748-.L755)/2
 8709 0f7b 46       		.byte	(.L748-.L755)/2
 8710 0f7c 46       		.byte	(.L748-.L755)/2
 8711 0f7d 46       		.byte	(.L748-.L755)/2
 8712 0f7e 46       		.byte	(.L748-.L755)/2
 8713 0f7f 46       		.byte	(.L748-.L755)/2
 8714 0f80 46       		.byte	(.L748-.L755)/2
 8715 0f81 46       		.byte	(.L748-.L755)/2
 8716 0f82 46       		.byte	(.L748-.L755)/2
 8717 0f83 46       		.byte	(.L748-.L755)/2
 8718 0f84 46       		.byte	(.L748-.L755)/2
 8719 0f85 46       		.byte	(.L748-.L755)/2
 8720 0f86 52       		.byte	(.L754-.L755)/2
 8721 0f87 00       		.p2align 1
 8722              	.L967:
2600:src/keys.c    **** 
 8723              		.loc 1 2600 6 view .LVU2747
 8724 0f88 4FF0330B 		mov	fp, #51
 8725              	.LVL722:
 8726              	.L752:
2633:src/keys.c    **** 		break;
 8727              		.loc 1 2633 3 is_stmt 1 view .LVU2748
 8728 0f8c 5046     		mov	r0, r10
 8729 0f8e FFF7FEFF 		bl	set_pc
 8730              	.LVL723:
2634:src/keys.c    **** 
 8731              		.loc 1 2634 3 view .LVU2749
 8732              	.L764:
2687:src/keys.c    **** 	State2.labellist = 0;
 8733              		.loc 1 2687 2 view .LVU2750
2688:src/keys.c    **** 	return check_confirm(op);
 8734              		.loc 1 2688 19 is_stmt 0 view .LVU2751
 8735 0f92 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
2687:src/keys.c    **** 	State2.labellist = 0;
 8736              		.loc 1 2687 16 view .LVU2752
 8737 0f96 0022     		movs	r2, #0
 8738              	.LBB913:
 8739              	.LBB914:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8740              		.loc 1 625 5 view .LVU2753
 8741 0f98 CBF30723 		ubfx	r3, fp, #8, #8
 8742              	.LBE914:
 8743              	.LBE913:
ARM GAS  /tmp/ccihcwFT.s 			page 256


2688:src/keys.c    **** 	return check_confirm(op);
 8744              		.loc 1 2688 19 view .LVU2754
 8745 0f9c 62F38201 		bfi	r1, r2, #2, #1
 8746              	.LBB919:
 8747              	.LBB915:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8748              		.loc 1 625 5 view .LVU2755
 8749 0fa0 012B     		cmp	r3, #1
 8750              	.LBE915:
 8751              	.LBE919:
2688:src/keys.c    **** 	return check_confirm(op);
 8752              		.loc 1 2688 19 view .LVU2756
 8753 0fa2 88F81710 		strb	r1, [r8, #23]
2687:src/keys.c    **** 	State2.labellist = 0;
 8754              		.loc 1 2687 16 view .LVU2757
 8755 0fa6 A8F80820 		strh	r2, [r8, #8]	@ movhi
2688:src/keys.c    **** 	return check_confirm(op);
 8756              		.loc 1 2688 2 is_stmt 1 view .LVU2758
2689:src/keys.c    **** }
 8757              		.loc 1 2689 2 view .LVU2759
 8758              	.LVL724:
 8759              	.LBB920:
 8760              	.LBI913:
 624:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8761              		.loc 1 624 12 view .LVU2760
 8762              	.LBB916:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8763              		.loc 1 625 2 view .LVU2761
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8764              		.loc 1 625 5 is_stmt 0 view .LVU2762
 8765 0faa 7FF449AA 		bne	.L641
 8766              	.LVL725:
 8767              	.L939:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8768              		.loc 1 625 5 view .LVU2763
 8769              	.LBE916:
 8770              	.LBE920:
 8771              	.LBE923:
 8772              	.LBE931:
 8773              	.LBB932:
 8774              	.LBB933:
 8775              	.LBB934:
 8776              	.LBB935:
 8777 0fae 5846     		mov	r0, fp
 8778 0fb0 FFF7FEFF 		bl	check_confirm.part.0
 8779              	.LVL726:
 8780 0fb4 8346     		mov	fp, r0
 8781              	.LVL727:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8782              		.loc 1 625 5 view .LVU2764
 8783 0fb6 FFF743BA 		b	.L641
 8784              	.LVL728:
 8785              	.L749:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8786              		.loc 1 625 5 view .LVU2765
 8787              	.LBE935:
 8788              	.LBE934:
ARM GAS  /tmp/ccihcwFT.s 			page 257


 8789              	.LBE933:
 8790              	.LBE932:
 8791              	.LBB972:
 8792              	.LBB924:
2618:src/keys.c    **** 	case K_DOWN:				// Find next label
 8793              		.loc 1 2618 3 is_stmt 1 view .LVU2766
2618:src/keys.c    **** 	case K_DOWN:				// Find next label
 8794              		.loc 1 2618 8 is_stmt 0 view .LVU2767
 8795 0fba 5046     		mov	r0, r10
 8796 0fbc 0122     		movs	r2, #1
 8797 0fbe 0021     		movs	r1, #0
 8798 0fc0 FFF7FEFF 		bl	advance_to_next_label
 8799              	.LVL729:
 8800 0fc4 8246     		mov	r10, r0
 8801              	.LVL730:
 8802              	.L756:
2621:src/keys.c    **** 		return STATE_UNFINISHED;
 8803              		.loc 1 2621 3 is_stmt 1 view .LVU2768
2621:src/keys.c    **** 		return STATE_UNFINISHED;
 8804              		.loc 1 2621 19 is_stmt 0 view .LVU2769
 8805 0fc6 0022     		movs	r2, #0
 8806 0fc8 5046     		mov	r0, r10
 8807 0fca 0121     		movs	r1, #1
 8808 0fcc FFF7FEFF 		bl	advance_to_next_label
 8809              	.LVL731:
2622:src/keys.c    **** 
 8810              		.loc 1 2622 10 view .LVU2770
 8811 0fd0 4FF0330B 		mov	fp, #51
 8812              	.LVL732:
2622:src/keys.c    **** 
 8813              		.loc 1 2622 10 view .LVU2771
 8814 0fd4 3268     		ldr	r2, [r6]
2621:src/keys.c    **** 		return STATE_UNFINISHED;
 8815              		.loc 1 2621 17 view .LVU2772
 8816 0fd6 A8F80800 		strh	r0, [r8, #8]	@ movhi
2622:src/keys.c    **** 
 8817              		.loc 1 2622 3 is_stmt 1 view .LVU2773
2622:src/keys.c    **** 
 8818              		.loc 1 2622 10 is_stmt 0 view .LVU2774
 8819 0fda FFF76AB8 		b	.L611
 8820              	.LVL733:
 8821              	.L760:
2651:src/keys.c    **** 		goto xeq_or_gto;
 8822              		.loc 1 2651 3 is_stmt 1 view .LVU2775
2651:src/keys.c    **** 		goto xeq_or_gto;
 8823              		.loc 1 2651 6 is_stmt 0 view .LVU2776
 8824 0fde 02F5007B 		add	fp, r2, #512
 8825              	.LVL734:
2652:src/keys.c    **** 
 8826              		.loc 1 2652 3 is_stmt 1 view .LVU2777
 8827              	.L765:
2657:src/keys.c    **** 			break;
 8828              		.loc 1 2657 3 view .LVU2778
2657:src/keys.c    **** 			break;
 8829              		.loc 1 2657 6 is_stmt 0 view .LVU2779
 8830 0fe2 002A     		cmp	r2, #0
 8831 0fe4 D5D1     		bne	.L764
ARM GAS  /tmp/ccihcwFT.s 			page 258


 8832              	.LVL735:
 8833              	.L766:
2657:src/keys.c    **** 			break;
 8834              		.loc 1 2657 6 view .LVU2780
 8835 0fe6 3268     		ldr	r2, [r6]
2659:src/keys.c    **** #else
 8836              		.loc 1 2659 10 view .LVU2781
 8837 0fe8 4FF0330B 		mov	fp, #51
 8838 0fec FFF761B8 		b	.L611
 8839              	.LVL736:
 8840              	.L748:
2659:src/keys.c    **** #else
 8841              		.loc 1 2659 10 view .LVU2782
 8842 0ff0 3268     		ldr	r2, [r6]
2685:src/keys.c    **** 	}
 8843              		.loc 1 2685 10 view .LVU2783
 8844 0ff2 4FF0330B 		mov	fp, #51
 8845              	.LVL737:
2685:src/keys.c    **** 	}
 8846              		.loc 1 2685 10 view .LVU2784
 8847 0ff6 FFF75CB8 		b	.L611
 8848              	.LVL738:
 8849              	.L759:
2643:src/keys.c    **** 	  //#endif
 8850              		.loc 1 2643 3 is_stmt 1 view .LVU2785
2643:src/keys.c    **** 	  //#endif
 8851              		.loc 1 2643 38 is_stmt 0 view .LVU2786
 8852 0ffa 062C     		cmp	r4, #6
 8853 0ffc 40F2B11B 		movw	fp, #433
 8854              	.LVL739:
2643:src/keys.c    **** 	  //#endif
 8855              		.loc 1 2643 38 view .LVU2787
 8856 1000 08BF     		it	eq
 8857 1002 4FF4D97B 		moveq	fp, #434
 8858 1006 C1E7     		b	.L752
 8859              	.LVL740:
 8860              	.L754:
2673:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8861              		.loc 1 2673 3 is_stmt 1 view .LVU2788
2673:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8862              		.loc 1 2673 6 is_stmt 0 view .LVU2789
 8863 1008 009B     		ldr	r3, [sp]
 8864 100a 002B     		cmp	r3, #0
 8865 100c EBD0     		beq	.L766
2673:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8866              		.loc 1 2673 14 view .LVU2790
 8867 100e 002A     		cmp	r2, #0
 8868 1010 E9D0     		beq	.L766
2674:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
 8869              		.loc 1 2674 4 is_stmt 1 view .LVU2791
 8870 1012 5146     		mov	r1, r10
 8871 1014 0120     		movs	r0, #1
 8872 1016 FFF7FEFF 		bl	cmdgtocommon
 8873              	.LVL741:
2675:src/keys.c    **** 			break;
 8874              		.loc 1 2675 4 view .LVU2792
2676:src/keys.c    **** 		}
ARM GAS  /tmp/ccihcwFT.s 			page 259


 8875              		.loc 1 2676 4 view .LVU2793
2687:src/keys.c    **** 	State2.labellist = 0;
 8876              		.loc 1 2687 2 view .LVU2794
2688:src/keys.c    **** 	return check_confirm(op);
 8877              		.loc 1 2688 19 is_stmt 0 view .LVU2795
 8878 101a 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
2687:src/keys.c    **** 	State2.labellist = 0;
 8879              		.loc 1 2687 16 view .LVU2796
 8880 101e 0023     		movs	r3, #0
2688:src/keys.c    **** 	return check_confirm(op);
 8881              		.loc 1 2688 19 view .LVU2797
 8882 1020 63F38202 		bfi	r2, r3, #2, #1
 8883 1024 88F81720 		strb	r2, [r8, #23]
2687:src/keys.c    **** 	State2.labellist = 0;
 8884              		.loc 1 2687 16 view .LVU2798
 8885 1028 A8F80830 		strh	r3, [r8, #8]	@ movhi
2688:src/keys.c    **** 	return check_confirm(op);
 8886              		.loc 1 2688 2 is_stmt 1 view .LVU2799
2689:src/keys.c    **** }
 8887              		.loc 1 2689 2 view .LVU2800
 8888              	.LVL742:
 8889              	.LBB921:
 624:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8890              		.loc 1 624 12 view .LVU2801
 8891              	.LBB917:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8892              		.loc 1 625 2 view .LVU2802
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8893              		.loc 1 625 2 is_stmt 0 view .LVU2803
 8894              	.LBE917:
 8895              	.LBE921:
 8896              	.LBE924:
 8897              	.LBE972:
 8898              	.LBE1238:
 8899              	.LBE1310:
3182:src/keys.c    ****     case STATE_SST:
 8900              		.loc 1 3182 5 is_stmt 1 view .LVU2804
 8901 102c FFF7B3B9 		b	.L621
 8902              	.LVL743:
 8903              	.L757:
 8904              	.LBB1311:
 8905              	.LBB1239:
 8906              	.LBB973:
 8907              	.LBB925:
2625:src/keys.c    **** 		return STATE_UNFINISHED;
 8908              		.loc 1 2625 3 view .LVU2805
2625:src/keys.c    **** 		return STATE_UNFINISHED;
 8909              		.loc 1 2625 19 is_stmt 0 view .LVU2806
 8910 1030 5046     		mov	r0, r10
 8911 1032 0021     		movs	r1, #0
 8912 1034 FFF7FEFF 		bl	advance_to_previous_label
 8913              	.LVL744:
2626:src/keys.c    **** 
 8914              		.loc 1 2626 10 view .LVU2807
 8915 1038 4FF0330B 		mov	fp, #51
 8916              	.LVL745:
2626:src/keys.c    **** 
ARM GAS  /tmp/ccihcwFT.s 			page 260


 8917              		.loc 1 2626 10 view .LVU2808
 8918 103c 3268     		ldr	r2, [r6]
2625:src/keys.c    **** 		return STATE_UNFINISHED;
 8919              		.loc 1 2625 17 view .LVU2809
 8920 103e A8F80800 		strh	r0, [r8, #8]	@ movhi
2626:src/keys.c    **** 
 8921              		.loc 1 2626 3 is_stmt 1 view .LVU2810
2626:src/keys.c    **** 
 8922              		.loc 1 2626 10 is_stmt 0 view .LVU2811
 8923 1042 FFF736B8 		b	.L611
 8924              	.LVL746:
 8925              	.L758:
2687:src/keys.c    **** 	State2.labellist = 0;
 8926              		.loc 1 2687 2 is_stmt 1 view .LVU2812
2688:src/keys.c    **** 	return check_confirm(op);
 8927              		.loc 1 2688 19 is_stmt 0 view .LVU2813
 8928 1046 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
 8929 104a 3268     		ldr	r2, [r6]
2687:src/keys.c    **** 	State2.labellist = 0;
 8930              		.loc 1 2687 16 view .LVU2814
 8931 104c 0023     		movs	r3, #0
2688:src/keys.c    **** 	return check_confirm(op);
 8932              		.loc 1 2688 19 view .LVU2815
 8933 104e 63F38201 		bfi	r1, r3, #2, #1
 8934 1052 88F81710 		strb	r1, [r8, #23]
2687:src/keys.c    **** 	State2.labellist = 0;
 8935              		.loc 1 2687 16 view .LVU2816
 8936 1056 A8F80830 		strh	r3, [r8, #8]	@ movhi
2688:src/keys.c    **** 	return check_confirm(op);
 8937              		.loc 1 2688 2 is_stmt 1 view .LVU2817
2689:src/keys.c    **** }
 8938              		.loc 1 2689 2 view .LVU2818
 8939              	.LVL747:
 8940              	.LBB922:
 624:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8941              		.loc 1 624 12 view .LVU2819
 8942              	.LBB918:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8943              		.loc 1 625 2 view .LVU2820
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 8944              		.loc 1 625 2 is_stmt 0 view .LVU2821
 8945              	.LBE918:
 8946              	.LBE922:
 8947              	.LBE925:
 8948              	.LBE973:
 8949              	.LBE1239:
 8950              	.LBE1311:
3182:src/keys.c    ****     case STATE_SST:
 8951              		.loc 1 3182 5 is_stmt 1 view .LVU2822
 8952              	.LBB1312:
 8953              	.LBB1240:
 8954              	.LBB974:
 8955              	.LBB926:
2600:src/keys.c    **** 
 8956              		.loc 1 2600 6 is_stmt 0 view .LVU2823
 8957 105a 4FF0330B 		mov	fp, #51
 8958              	.LVL748:
ARM GAS  /tmp/ccihcwFT.s 			page 261


2600:src/keys.c    **** 
 8959              		.loc 1 2600 6 view .LVU2824
 8960 105e FFF728B8 		b	.L611
 8961              	.L1257:
 8962 1062 00BF     		.align	2
 8963              	.L1256:
 8964 1064 00000000 		.word	.LANCHOR1
 8965 1068 00000000 		.word	.LANCHOR9
 8966 106c 00000000 		.word	.LANCHOR14
 8967 1070 000A4000 		.word	4196864
 8968 1074 00080800 		.word	526336
 8969 1078 00000000 		.word	.LANCHOR11
 8970 107c 00000000 		.word	.LANCHOR15
 8971 1080 00000000 		.word	.LANCHOR0
 8972              	.LVL749:
 8973              	.L746:
2611:src/keys.c    **** 
 8974              		.loc 1 2611 2 view .LVU2825
 8975 1084 B3F58C7F 		cmp	r3, #280
 8976 1088 41DC     		bgt	.L761
 8977 108a B3F5827F 		cmp	r3, #260
 8978 108e AFDD     		ble	.L748
 8979 1090 6FF48271 		mvn	r1, #260
 8980 1094 0B44     		add	r3, r3, r1
 8981 1096 132B     		cmp	r3, #19
 8982 1098 AAD8     		bhi	.L748
 8983 109a 01A1     		adr	r1, .L750
 8984 109c 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 8985              		.p2align 2
 8986              	.L750:
 8987 10a0 F7100000 		.word	.L753+1
 8988 10a4 F10F0000 		.word	.L748+1
 8989 10a8 F10F0000 		.word	.L748+1
 8990 10ac F10F0000 		.word	.L748+1
 8991 10b0 F10F0000 		.word	.L748+1
 8992 10b4 F10F0000 		.word	.L748+1
 8993 10b8 F10F0000 		.word	.L748+1
 8994 10bc F10F0000 		.word	.L748+1
 8995 10c0 F10F0000 		.word	.L748+1
 8996 10c4 F10F0000 		.word	.L748+1
 8997 10c8 F10F0000 		.word	.L748+1
 8998 10cc F1100000 		.word	.L966+1
 8999 10d0 F10F0000 		.word	.L748+1
 9000 10d4 FD100000 		.word	.L751+1
 9001 10d8 F10F0000 		.word	.L748+1
 9002 10dc F10F0000 		.word	.L748+1
 9003 10e0 F10F0000 		.word	.L748+1
 9004 10e4 F10F0000 		.word	.L748+1
 9005 10e8 F10F0000 		.word	.L748+1
 9006 10ec BB0F0000 		.word	.L749+1
 9007              		.p2align 1
 9008              	.L966:
 9009 10f0 40F2431B 		movw	fp, #323
 9010              	.LVL750:
2611:src/keys.c    **** 
 9011              		.loc 1 2611 2 view .LVU2826
 9012 10f4 4AE7     		b	.L752
ARM GAS  /tmp/ccihcwFT.s 			page 262


 9013              	.LVL751:
 9014              	.L753:
2655:src/keys.c    **** 	xeq_or_gto:
 9015              		.loc 1 2655 3 is_stmt 1 view .LVU2827
2655:src/keys.c    **** 	xeq_or_gto:
 9016              		.loc 1 2655 6 is_stmt 0 view .LVU2828
 9017 10f6 02F5407B 		add	fp, r2, #768
 9018              	.LVL752:
2655:src/keys.c    **** 	xeq_or_gto:
 9019              		.loc 1 2655 6 view .LVU2829
 9020 10fa 72E7     		b	.L765
 9021              	.LVL753:
 9022              	.L751:
2614:src/keys.c    **** 		goto next;
 9023              		.loc 1 2614 3 is_stmt 1 view .LVU2830
2614:src/keys.c    **** 		goto next;
 9024              		.loc 1 2614 8 is_stmt 0 view .LVU2831
 9025 10fc 5046     		mov	r0, r10
 9026 10fe 0121     		movs	r1, #1
 9027 1100 FFF7FEFF 		bl	advance_to_previous_label
 9028              	.LVL754:
 9029 1104 0121     		movs	r1, #1
 9030 1106 FFF7FEFF 		bl	advance_to_previous_label
 9031              	.LVL755:
 9032 110a 8246     		mov	r10, r0
 9033              	.LVL756:
2615:src/keys.c    **** 
 9034              		.loc 1 2615 3 is_stmt 1 view .LVU2832
 9035 110c 5BE7     		b	.L756
 9036              	.LVL757:
 9037              	.L761:
2611:src/keys.c    **** 
 9038              		.loc 1 2611 2 is_stmt 0 view .LVU2833
 9039 110e 40F22732 		movw	r2, #807
 9040 1112 9342     		cmp	r3, r2
 9041 1114 7FF46CAF 		bne	.L748
2681:src/keys.c    **** 		goto set_pc_and_exit;
 9042              		.loc 1 2681 3 is_stmt 1 view .LVU2834
2681:src/keys.c    **** 		goto set_pc_and_exit;
 9043              		.loc 1 2681 18 is_stmt 0 view .LVU2835
 9044 1118 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9045 111c 61F38613 		bfi	r3, r1, #6, #1
 9046 1120 88F81630 		strb	r3, [r8, #22]
2682:src/keys.c    **** 
 9047              		.loc 1 2682 3 is_stmt 1 view .LVU2836
2600:src/keys.c    **** 
 9048              		.loc 1 2600 6 is_stmt 0 view .LVU2837
 9049 1124 4FF0330B 		mov	fp, #51
 9050              	.LVL758:
2682:src/keys.c    **** 
 9051              		.loc 1 2682 3 view .LVU2838
 9052 1128 30E7     		b	.L752
 9053              	.LVL759:
 9054              	.L1175:
2682:src/keys.c    **** 
 9055              		.loc 1 2682 3 view .LVU2839
 9056              	.LBE926:
ARM GAS  /tmp/ccihcwFT.s 			page 263


 9057              	.LBE974:
2935:src/keys.c    **** 
 9058              		.loc 1 2935 3 is_stmt 1 view .LVU2840
 9059              	.LBB975:
 9060              	.LBI975:
2723:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 9061              		.loc 1 2723 12 view .LVU2841
 9062              	.LBB976:
2724:src/keys.c    **** 	enum shifts shift = reset_shift();
 9063              		.loc 1 2724 2 view .LVU2842
 9064              	.LBB977:
 9065              	.LBI977:
 200:src/keys.c    **** {
 9066              		.loc 1 200 14 view .LVU2843
 9067              	.LBB978:
 202:src/keys.c    ****     // K00 - K05
 9068              		.loc 1 202 3 view .LVU2844
 224:src/keys.c    **** }
 9069              		.loc 1 224 3 view .LVU2845
 9070              	.LBB979:
 9071              	.LBI979:
 121:src/keys.c    **** {
 9072              		.loc 1 121 12 view .LVU2846
 9073              	.LBB980:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9074              		.loc 1 123 2 view .LVU2847
 133:src/keys.c    **** }
 9075              		.loc 1 133 2 view .LVU2848
 133:src/keys.c    **** }
 9076              		.loc 1 133 23 is_stmt 0 view .LVU2849
 9077 112a A44B     		ldr	r3, .L1258
 9078              	.LBE980:
 9079              	.LBE979:
 224:src/keys.c    **** }
 9080              		.loc 1 224 28 view .LVU2850
 9081 112c A44A     		ldr	r2, .L1258+4
 9082              	.LBB982:
 9083              	.LBB981:
 133:src/keys.c    **** }
 9084              		.loc 1 133 23 view .LVU2851
 9085 112e 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 9086              	.LBE981:
 9087              	.LBE982:
 224:src/keys.c    **** }
 9088              		.loc 1 224 10 view .LVU2852
 9089 1130 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
 9090              	.LBE978:
 9091              	.LBE977:
 9092              	.LBB983:
 9093              	.LBB984:
 9094              	.LBB985:
 9095              	.LBB986:
 9096              	.LBB987:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9097              		.loc 1 87 18 view .LVU2853
 9098 1134 FFF7FEFF 		bl	shift_down
 9099              	.LVL760:
ARM GAS  /tmp/ccihcwFT.s 			page 264


 9100              	.LBE987:
 9101              	.LBE986:
 9102              	.LBE985:
 9103              	.LBE984:
 9104              	.LBE983:
2724:src/keys.c    **** 	enum shifts shift = reset_shift();
 9105              		.loc 1 2724 15 view .LVU2854
 9106 1138 2BF0800B 		bic	fp, fp, #128
 9107              	.LVL761:
2725:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
 9108              		.loc 1 2725 2 is_stmt 1 view .LVU2855
 9109              	.LBB996:
 9110              	.LBI983:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 9111              		.loc 1 104 13 view .LVU2856
 9112              	.LBE996:
 9113              	.LBE976:
 9114              	.LBE975:
 9115              	.LBE1240:
 9116              	.LBE1312:
 105:src/keys.c    **** }
 9117              		.loc 1 105 2 view .LVU2857
 9118              	.LBB1313:
 9119              	.LBB1241:
 9120              	.LBB1011:
 9121              	.LBB1003:
 9122              	.LBB997:
 9123              	.LBB993:
 9124              	.LBI984:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 9125              		.loc 1 94 20 view .LVU2858
 9126              	.LBB990:
  95:src/keys.c    **** 	State2.shifts = shift;
 9127              		.loc 1 95 2 view .LVU2859
 9128              	.LBB989:
 9129              	.LBI986:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 9130              		.loc 1 86 13 view .LVU2860
 9131              	.LBB988:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9132              		.loc 1 87 2 view .LVU2861
  88:src/keys.c    **** }
 9133              		.loc 1 88 2 view .LVU2862
  88:src/keys.c    **** }
 9134              		.loc 1 88 52 is_stmt 0 view .LVU2863
 9135 113c 8146     		mov	r9, r0
 9136 113e 08B9     		cbnz	r0, .L768
 9137 1140 98F81090 		ldrb	r9, [r8, #16]	@ zero_extendqisi2
 9138              	.L768:
 9139              	.LVL762:
  88:src/keys.c    **** }
 9140              		.loc 1 88 52 view .LVU2864
 9141              	.LBE988:
 9142              	.LBE989:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9143              		.loc 1 96 2 is_stmt 1 view .LVU2865
 9144              	.LBE990:
ARM GAS  /tmp/ccihcwFT.s 			page 265


 9145              	.LBE993:
 9146              	.LBE997:
2726:src/keys.c    **** 	const int g_max = global_regs();
 9147              		.loc 1 2726 31 is_stmt 0 view .LVU2866
 9148 1144 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9149              	.LBB998:
 9150              	.LBB994:
 9151              	.LBB991:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9152              		.loc 1 96 16 view .LVU2867
 9153 1148 0022     		movs	r2, #0
 9154              	.LBE991:
 9155              	.LBE994:
 9156              	.LBE998:
2726:src/keys.c    **** 	const int g_max = global_regs();
 9157              		.loc 1 2726 46 view .LVU2868
 9158 114a DB07     		lsls	r3, r3, #31
 9159              	.LBB999:
 9160              	.LBB995:
 9161              	.LBB992:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9162              		.loc 1 96 16 view .LVU2869
 9163 114c 88F81020 		strb	r2, [r8, #16]
  98:src/keys.c    **** }
 9164              		.loc 1 98 2 is_stmt 1 view .LVU2870
 9165              	.LVL763:
  98:src/keys.c    **** }
 9166              		.loc 1 98 2 is_stmt 0 view .LVU2871
 9167              	.LBE992:
 9168              	.LBE995:
 9169              	.LBE999:
2726:src/keys.c    **** 	const int g_max = global_regs();
 9170              		.loc 1 2726 2 is_stmt 1 view .LVU2872
2726:src/keys.c    **** 	const int g_max = global_regs();
 9171              		.loc 1 2726 46 is_stmt 0 view .LVU2873
 9172 1150 00F15882 		bmi	.L1216
 9173 1154 4FF0700A 		mov	r10, #112
 9174              	.LVL764:
 9175              	.L769:
2727:src/keys.c    **** 
 9176              		.loc 1 2727 2 is_stmt 1 view .LVU2874
2727:src/keys.c    **** 
 9177              		.loc 1 2727 20 is_stmt 0 view .LVU2875
 9178 1158 FFF7FEFF 		bl	global_regs
 9179              	.LVL765:
2729:src/keys.c    **** 		if (local_regs())
 9180              		.loc 1 2729 2 is_stmt 1 view .LVU2876
2729:src/keys.c    **** 		if (local_regs())
 9181              		.loc 1 2729 5 is_stmt 0 view .LVU2877
 9182 115c BBF1700F 		cmp	fp, #112
 9183 1160 00F04C85 		beq	.L1217
2735:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 9184              		.loc 1 2735 7 is_stmt 1 view .LVU2878
2735:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 9185              		.loc 1 2735 10 is_stmt 0 view .LVU2879
 9186 1164 BBF1090F 		cmp	fp, #9
 9187 1168 40F26783 		bls	.L1218
ARM GAS  /tmp/ccihcwFT.s 			page 266


2742:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 9188              		.loc 1 2742 7 is_stmt 1 view .LVU2880
2742:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 9189              		.loc 1 2742 29 is_stmt 0 view .LVU2881
 9190 116c 09F1FF33 		add	r3, r9, #-1
2742:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 9191              		.loc 1 2742 10 view .LVU2882
 9192 1170 DBB2     		uxtb	r3, r3
 9193 1172 012B     		cmp	r3, #1
 9194 1174 40F24A82 		bls	.L1219
 9195              	.L777:
2746:src/keys.c    **** 		State2.digval = n;
 9196              		.loc 1 2746 7 is_stmt 1 view .LVU2883
2746:src/keys.c    **** 		State2.digval = n;
 9197              		.loc 1 2746 10 is_stmt 0 view .LVU2884
 9198 1178 BBF17F0F 		cmp	fp, #127
 9199 117c 40F07583 		bne	.L1220
2751:src/keys.c    **** 	case K_DOWN:
 9200              		.loc 1 2751 2 is_stmt 1 view .LVU2885
 9201 1180 073C     		subs	r4, r4, #7
 9202 1182 112C     		cmp	r4, #17
 9203 1184 21D8     		bhi	.L927
 9204 1186 DFE804F0 		tbb	[pc, r4]
 9205              	.L928:
 9206 118a 09       		.byte	(.L790-.L928)/2
 9207 118b 20       		.byte	(.L927-.L928)/2
 9208 118c 20       		.byte	(.L927-.L928)/2
 9209 118d 20       		.byte	(.L927-.L928)/2
 9210 118e 20       		.byte	(.L927-.L928)/2
 9211 118f 50       		.byte	(.L789-.L928)/2
 9212 1190 20       		.byte	(.L927-.L928)/2
 9213 1191 20       		.byte	(.L927-.L928)/2
 9214 1192 20       		.byte	(.L927-.L928)/2
 9215 1193 41       		.byte	(.L787-.L928)/2
 9216 1194 20       		.byte	(.L927-.L928)/2
 9217 1195 5A       		.byte	(.L783-.L928)/2
 9218 1196 20       		.byte	(.L927-.L928)/2
 9219 1197 20       		.byte	(.L927-.L928)/2
 9220 1198 20       		.byte	(.L927-.L928)/2
 9221 1199 20       		.byte	(.L927-.L928)/2
 9222 119a 20       		.byte	(.L927-.L928)/2
 9223 119b 25       		.byte	(.L780-.L928)/2
 9224              		.p2align 1
 9225              	.L790:
2790:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 9226              		.loc 1 2790 3 view .LVU2886
2790:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 9227              		.loc 1 2790 6 is_stmt 0 view .LVU2887
 9228 119c B9F1000F 		cmp	r9, #0
 9229 11a0 40F0E083 		bne	.L791
2794:src/keys.c    **** #endif
 9230              		.loc 1 2794 4 is_stmt 1 view .LVU2888
2794:src/keys.c    **** #endif
 9231              		.loc 1 2794 8 is_stmt 0 view .LVU2889
 9232 11a4 B8F808B0 		ldrh	fp, [r8, #8]
 9233              	.LVL766:
2796:src/keys.c    **** 			State2.digval = 0;
ARM GAS  /tmp/ccihcwFT.s 			page 267


 9234              		.loc 1 2796 4 is_stmt 1 view .LVU2890
2796:src/keys.c    **** 			State2.digval = 0;
 9235              		.loc 1 2796 24 is_stmt 0 view .LVU2891
 9236 11a8 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
2798:src/keys.c    **** 			return n;
 9237              		.loc 1 2798 19 view .LVU2892
 9238 11ac 88F80A90 		strb	r9, [r8, #10]
2796:src/keys.c    **** 			State2.digval = 0;
 9239              		.loc 1 2796 24 view .LVU2893
 9240 11b0 69F3C303 		bfi	r3, r9, #3, #1
2799:src/keys.c    **** 		}
 9241              		.loc 1 2799 11 view .LVU2894
 9242 11b4 4BF4285B 		orr	fp, fp, #10752
 9243              	.LVL767:
2796:src/keys.c    **** 			State2.digval = 0;
 9244              		.loc 1 2796 24 view .LVU2895
 9245 11b8 88F81730 		strb	r3, [r8, #23]
2797:src/keys.c    **** 			State2.digval2 = 0;
 9246              		.loc 1 2797 4 is_stmt 1 view .LVU2896
2798:src/keys.c    **** 			return n;
 9247              		.loc 1 2798 4 view .LVU2897
2799:src/keys.c    **** 		}
 9248              		.loc 1 2799 4 view .LVU2898
2797:src/keys.c    **** 			State2.digval2 = 0;
 9249              		.loc 1 2797 18 is_stmt 0 view .LVU2899
 9250 11bc A8F80890 		strh	r9, [r8, #8]	@ movhi
 9251 11c0 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9252 11c4 5846     		mov	r0, fp
 9253              	.LVL768:
2799:src/keys.c    **** 		}
 9254              		.loc 1 2799 11 view .LVU2900
 9255 11c6 FFF7ADB9 		b	.L668
 9256              	.LVL769:
 9257              	.L927:
2799:src/keys.c    **** 		}
 9258              		.loc 1 2799 11 view .LVU2901
 9259 11ca 3268     		ldr	r2, [r6]
2802:src/keys.c    **** 	}
 9260              		.loc 1 2802 10 view .LVU2902
 9261 11cc 4FF0330B 		mov	fp, #51
 9262              	.LVL770:
2802:src/keys.c    **** 	}
 9263              		.loc 1 2802 10 view .LVU2903
 9264 11d0 FEF76FBF 		b	.L611
 9265              	.LVL771:
 9266              	.L780:
2753:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 9267              		.loc 1 2753 3 is_stmt 1 view .LVU2904
2753:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 9268              		.loc 1 2753 13 is_stmt 0 view .LVU2905
 9269 11d4 B8F80830 		ldrh	r3, [r8, #8]
2753:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 9270              		.loc 1 2753 6 view .LVU2906
 9271 11d8 002B     		cmp	r3, #0
 9272 11da 00F09B84 		beq	.L781
2754:src/keys.c    **** 				State2.digval = global_regs();
 9273              		.loc 1 2754 4 is_stmt 1 view .LVU2907
ARM GAS  /tmp/ccihcwFT.s 			page 268


2754:src/keys.c    **** 				State2.digval = global_regs();
 9274              		.loc 1 2754 8 is_stmt 0 view .LVU2908
 9275 11de 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2754:src/keys.c    **** 				State2.digval = global_regs();
 9276              		.loc 1 2754 7 view .LVU2909
 9277 11e2 D207     		lsls	r2, r2, #31
 9278 11e4 02D4     		bmi	.L782
2754:src/keys.c    **** 				State2.digval = global_regs();
 9279              		.loc 1 2754 23 view .LVU2910
 9280 11e6 642B     		cmp	r3, #100
 9281 11e8 00F09A84 		beq	.L1221
 9282              	.LVL772:
 9283              	.L782:
2756:src/keys.c    **** 		}
 9284              		.loc 1 2756 4 is_stmt 1 view .LVU2911
 9285 11ec B8F80830 		ldrh	r3, [r8, #8]
 9286 11f0 013B     		subs	r3, r3, #1
 9287              	.L1141:
2756:src/keys.c    **** 		}
 9288              		.loc 1 2756 4 is_stmt 0 view .LVU2912
 9289 11f2 A8F80830 		strh	r3, [r8, #8]	@ movhi
 9290              	.LVL773:
 9291              	.L773:
2808:src/keys.c    **** 	return STATE_UNFINISHED;
 9292              		.loc 1 2808 2 is_stmt 1 view .LVU2913
2808:src/keys.c    **** 	return STATE_UNFINISHED;
 9293              		.loc 1 2808 16 is_stmt 0 view .LVU2914
 9294 11f6 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
 9295 11fa 3268     		ldr	r2, [r6]
 9296 11fc 6FF3C503 		bfc	r3, #3, #3
 9297 1200 88F81430 		strb	r3, [r8, #20]
2809:src/keys.c    **** }
 9298              		.loc 1 2809 2 is_stmt 1 view .LVU2915
2809:src/keys.c    **** }
 9299              		.loc 1 2809 9 is_stmt 0 view .LVU2916
 9300 1204 4FF0330B 		mov	fp, #51
 9301              	.LVL774:
2809:src/keys.c    **** }
 9302              		.loc 1 2809 9 view .LVU2917
 9303 1208 FEF753BF 		b	.L611
 9304              	.LVL775:
 9305              	.L787:
2780:src/keys.c    **** 			return STATE_UNFINISHED;
 9306              		.loc 1 2780 3 is_stmt 1 view .LVU2918
2780:src/keys.c    **** 			return STATE_UNFINISHED;
 9307              		.loc 1 2780 7 is_stmt 0 view .LVU2919
 9308 120c 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
2780:src/keys.c    **** 			return STATE_UNFINISHED;
 9309              		.loc 1 2780 6 view .LVU2920
 9310 1210 13F02002 		ands	r2, r3, #32
 9311 1214 40F0A683 		bne	.L791
2782:src/keys.c    **** 
 9312              		.loc 1 2782 3 is_stmt 1 view .LVU2921
2804:src/keys.c    **** 	State2.digval = 0;
 9313              		.loc 1 2804 2 view .LVU2922
2804:src/keys.c    **** 	State2.digval = 0;
 9314              		.loc 1 2804 22 is_stmt 0 view .LVU2923
ARM GAS  /tmp/ccihcwFT.s 			page 269


 9315 1218 62F3C303 		bfi	r3, r2, #3, #1
 9316 121c 88F81730 		strb	r3, [r8, #23]
2805:src/keys.c    **** 	State2.digval2 = 0;
 9317              		.loc 1 2805 2 is_stmt 1 view .LVU2924
2805:src/keys.c    **** 	State2.digval2 = 0;
 9318              		.loc 1 2805 16 is_stmt 0 view .LVU2925
 9319 1220 A8F80820 		strh	r2, [r8, #8]	@ movhi
2806:src/keys.c    **** reset_window:
 9320              		.loc 1 2806 2 is_stmt 1 view .LVU2926
2806:src/keys.c    **** reset_window:
 9321              		.loc 1 2806 17 is_stmt 0 view .LVU2927
 9322 1224 88F80A20 		strb	r2, [r8, #10]
 9323 1228 E5E7     		b	.L773
 9324              	.L789:
2785:src/keys.c    **** 			State2.disp_as_alpha = 1;
 9325              		.loc 1 2785 3 is_stmt 1 view .LVU2928
2785:src/keys.c    **** 			State2.disp_as_alpha = 1;
 9326              		.loc 1 2785 6 is_stmt 0 view .LVU2929
 9327 122a B9F1010F 		cmp	r9, #1
 9328 122e B5D1     		bne	.L790
2786:src/keys.c    **** 			goto reset_window;
 9329              		.loc 1 2786 4 is_stmt 1 view .LVU2930
2786:src/keys.c    **** 			goto reset_window;
 9330              		.loc 1 2786 25 is_stmt 0 view .LVU2931
 9331 1230 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9332 1234 43F00403 		orr	r3, r3, #4
 9333 1238 88F81630 		strb	r3, [r8, #22]
2787:src/keys.c    **** 		}
 9334              		.loc 1 2787 4 is_stmt 1 view .LVU2932
 9335 123c DBE7     		b	.L773
 9336              	.L783:
2763:src/keys.c    **** 			State2.digval++;
 9337              		.loc 1 2763 3 view .LVU2933
2763:src/keys.c    **** 			State2.digval++;
 9338              		.loc 1 2763 13 is_stmt 0 view .LVU2934
 9339 123e B8F80830 		ldrh	r3, [r8, #8]
2763:src/keys.c    **** 			State2.digval++;
 9340              		.loc 1 2763 27 view .LVU2935
 9341 1242 0AF1FF3A 		add	r10, r10, #-1
 9342              	.LVL776:
2763:src/keys.c    **** 			State2.digval++;
 9343              		.loc 1 2763 6 view .LVU2936
 9344 1246 5345     		cmp	r3, r10
 9345 1248 80F27684 		bge	.L784
2764:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 9346              		.loc 1 2764 4 is_stmt 1 view .LVU2937
2765:src/keys.c    **** 				State2.digval = regX_idx;
 9347              		.loc 1 2765 8 is_stmt 0 view .LVU2938
 9348 124c 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2764:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 9349              		.loc 1 2764 17 view .LVU2939
 9350 1250 0133     		adds	r3, r3, #1
 9351 1252 9CB2     		uxth	r4, r3
2765:src/keys.c    **** 				State2.digval = regX_idx;
 9352              		.loc 1 2765 7 view .LVU2940
 9353 1254 D307     		lsls	r3, r2, #31
2764:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
ARM GAS  /tmp/ccihcwFT.s 			page 270


 9354              		.loc 1 2764 17 view .LVU2941
 9355 1256 A8F80840 		strh	r4, [r8, #8]	@ movhi
2765:src/keys.c    **** 				State2.digval = regX_idx;
 9356              		.loc 1 2765 4 is_stmt 1 view .LVU2942
2765:src/keys.c    **** 				State2.digval = regX_idx;
 9357              		.loc 1 2765 7 is_stmt 0 view .LVU2943
 9358 125a CCD4     		bmi	.L773
2765:src/keys.c    **** 				State2.digval = regX_idx;
 9359              		.loc 1 2765 43 view .LVU2944
 9360 125c FFF7FEFF 		bl	global_regs
 9361              	.LVL777:
2765:src/keys.c    **** 				State2.digval = regX_idx;
 9362              		.loc 1 2765 23 view .LVU2945
 9363 1260 8442     		cmp	r4, r0
 9364 1262 C8D1     		bne	.L773
2766:src/keys.c    **** 		}
 9365              		.loc 1 2766 5 is_stmt 1 view .LVU2946
2766:src/keys.c    **** 		}
 9366              		.loc 1 2766 19 is_stmt 0 view .LVU2947
 9367 1264 6423     		movs	r3, #100
 9368 1266 A8F80830 		strh	r3, [r8, #8]	@ movhi
 9369 126a C4E7     		b	.L773
 9370              	.LVL778:
 9371              	.L662:
2766:src/keys.c    **** 		}
 9372              		.loc 1 2766 19 view .LVU2948
 9373              	.LBE1003:
 9374              	.LBE1011:
 9375              	.LBB1012:
 9376              	.LBB772:
1261:src/keys.c    **** #endif
 9377              		.loc 1 1261 4 is_stmt 1 view .LVU2949
1261:src/keys.c    **** #endif
 9378              		.loc 1 1261 18 view .LVU2950
1261:src/keys.c    **** #endif
 9379              		.loc 1 1261 18 is_stmt 0 view .LVU2951
 9380 126c 89F00109 		eor	r9, r9, #1
 9381              	.LVL779:
1261:src/keys.c    **** #endif
 9382              		.loc 1 1261 18 view .LVU2952
 9383 1270 36E4     		b	.L669
 9384              	.LVL780:
 9385              	.L1192:
1261:src/keys.c    **** #endif
 9386              		.loc 1 1261 18 view .LVU2953
 9387              	.LBE772:
 9388              	.LBE1012:
 9389              	.LBB1013:
 9390              	.LBB752:
1348:src/keys.c    **** #endif
 9391              		.loc 1 1348 44 is_stmt 1 view .LVU2954
1348:src/keys.c    **** #endif
 9392              		.loc 1 1348 52 is_stmt 0 view .LVU2955
 9393 1272 0420     		movs	r0, #4
 9394 1274 FFF7FEFF 		bl	gtodot_digit
 9395              	.LVL781:
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
ARM GAS  /tmp/ccihcwFT.s 			page 271


 9396              		.loc 1 1391 2 is_stmt 1 view .LVU2956
 9397              	.LBE752:
 9398              	.LBE1013:
2877:src/keys.c    **** 
 9399              		.loc 1 2877 10 is_stmt 0 view .LVU2957
 9400 1278 4FF0330B 		mov	fp, #51
 9401 127c 3268     		ldr	r2, [r6]
 9402 127e FEF718BF 		b	.L611
 9403              	.LVL782:
 9404              	.L1193:
 9405              	.LBB1014:
 9406              	.LBB753:
1352:src/keys.c    **** 		goto fin;
 9407              		.loc 1 1352 3 is_stmt 1 view .LVU2958
 9408              	.LBB745:
 9409              	.LBI745:
1324:src/keys.c    **** 	const int code = 100 + n;
 9410              		.loc 1 1324 12 view .LVU2959
 9411              	.LBB746:
1325:src/keys.c    **** 	unsigned int pc = state_pc();
 9412              		.loc 1 1325 2 view .LVU2960
1326:src/keys.c    **** 
 9413              		.loc 1 1326 2 view .LVU2961
1326:src/keys.c    **** 
 9414              		.loc 1 1326 20 is_stmt 0 view .LVU2962
 9415 1282 DFF84091 		ldr	r9, .L1258+8
 9416 1286 D9F80030 		ldr	r3, [r9]
 9417              	.LVL783:
1326:src/keys.c    **** 
 9418              		.loc 1 1326 15 view .LVU2963
 9419 128a B3F8E007 		ldrh	r0, [r3, #2016]
 9420              	.LVL784:
1328:src/keys.c    **** 		pc = 1;
 9421              		.loc 1 1328 2 is_stmt 1 view .LVU2964
1328:src/keys.c    **** 		pc = 1;
 9422              		.loc 1 1328 5 is_stmt 0 view .LVU2965
 9423 128e 830B     		lsrs	r3, r0, #14
1329:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
 9424              		.loc 1 1329 6 view .LVU2966
 9425 1290 032B     		cmp	r3, #3
 9426              	.LVL785:
1330:src/keys.c    **** 	if (pc > 0)
 9427              		.loc 1 1330 2 is_stmt 1 view .LVU2967
1330:src/keys.c    **** 	if (pc > 0)
 9428              		.loc 1 1330 7 is_stmt 0 view .LVU2968
 9429 1292 08BF     		it	eq
 9430 1294 0120     		moveq	r0, #1
 9431              	.LVL786:
1330:src/keys.c    **** 	if (pc > 0)
 9432              		.loc 1 1330 7 view .LVU2969
 9433 1296 04F16401 		add	r1, r4, #100
 9434              	.LVL787:
1330:src/keys.c    **** 	if (pc > 0)
 9435              		.loc 1 1330 7 view .LVU2970
 9436 129a 0322     		movs	r2, #3
 9437              	.LVL788:
1330:src/keys.c    **** 	if (pc > 0)
ARM GAS  /tmp/ccihcwFT.s 			page 272


 9438              		.loc 1 1330 7 view .LVU2971
 9439 129c FFF7FEFF 		bl	find_label_from
 9440              	.LVL789:
1331:src/keys.c    **** 		return pc;
 9441              		.loc 1 1331 2 is_stmt 1 view .LVU2972
1331:src/keys.c    **** 		return pc;
 9442              		.loc 1 1331 5 is_stmt 0 view .LVU2973
 9443 12a0 0028     		cmp	r0, #0
 9444 12a2 7FF43AAD 		bne	.L653
1333:src/keys.c    **** }
 9445              		.loc 1 1333 2 is_stmt 1 view .LVU2974
1333:src/keys.c    **** }
 9446              		.loc 1 1333 9 is_stmt 0 view .LVU2975
 9447 12a6 D9F80030 		ldr	r3, [r9]
 9448 12aa B3F8E007 		ldrh	r0, [r3, #2016]
 9449              	.LVL790:
1333:src/keys.c    **** }
 9450              		.loc 1 1333 9 view .LVU2976
 9451              	.LBE746:
 9452              	.LBE745:
1353:src/keys.c    **** 	}
 9453              		.loc 1 1353 3 is_stmt 1 view .LVU2977
 9454 12ae 34E5     		b	.L653
 9455              	.LVL791:
 9456              	.L1176:
1353:src/keys.c    **** 	}
 9457              		.loc 1 1353 3 is_stmt 0 view .LVU2978
 9458              	.LBE753:
 9459              	.LBE1014:
2938:src/keys.c    **** 
 9460              		.loc 1 2938 3 is_stmt 1 view .LVU2979
 9461              	.LBB1015:
 9462              	.LBI1015:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 9463              		.loc 1 104 13 view .LVU2980
 9464              	.LBE1015:
 9465              	.LBE1241:
 9466              	.LBE1313:
 105:src/keys.c    **** }
 9467              		.loc 1 105 2 view .LVU2981
 9468              	.LBB1314:
 9469              	.LBB1242:
 9470              	.LBB1022:
 9471              	.LBB1016:
 9472              	.LBI1016:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 9473              		.loc 1 94 20 view .LVU2982
 9474              	.LBB1017:
  95:src/keys.c    **** 	State2.shifts = shift;
 9475              		.loc 1 95 2 view .LVU2983
 9476              	.LBB1018:
 9477              	.LBI1018:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 9478              		.loc 1 86 13 view .LVU2984
 9479              	.LBB1019:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9480              		.loc 1 87 2 view .LVU2985
ARM GAS  /tmp/ccihcwFT.s 			page 273


  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9481              		.loc 1 87 18 is_stmt 0 view .LVU2986
 9482 12b0 FFF7FEFF 		bl	shift_down
 9483              	.LVL792:
  88:src/keys.c    **** }
 9484              		.loc 1 88 2 is_stmt 1 view .LVU2987
  88:src/keys.c    **** }
 9485              		.loc 1 88 52 is_stmt 0 view .LVU2988
 9486 12b4 0146     		mov	r1, r0
 9487 12b6 08B9     		cbnz	r0, .L793
 9488 12b8 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 9489              	.L793:
 9490              	.LVL793:
  88:src/keys.c    **** }
 9491              		.loc 1 88 52 view .LVU2989
 9492              	.LBE1019:
 9493              	.LBE1018:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9494              		.loc 1 96 2 is_stmt 1 view .LVU2990
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9495              		.loc 1 96 16 is_stmt 0 view .LVU2991
 9496 12bc 0022     		movs	r2, #0
 9497              	.LBE1017:
 9498              	.LBE1016:
 9499              	.LBE1022:
2938:src/keys.c    **** 
 9500              		.loc 1 2938 10 view .LVU2992
 9501 12be 2046     		mov	r0, r4
 9502              	.LBB1023:
 9503              	.LBB1021:
 9504              	.LBB1020:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9505              		.loc 1 96 16 view .LVU2993
 9506 12c0 88F81020 		strb	r2, [r8, #16]
  98:src/keys.c    **** }
 9507              		.loc 1 98 2 is_stmt 1 view .LVU2994
 9508              	.LVL794:
  98:src/keys.c    **** }
 9509              		.loc 1 98 2 is_stmt 0 view .LVU2995
 9510              	.LBE1020:
 9511              	.LBE1021:
 9512              	.LBE1023:
2938:src/keys.c    **** 
 9513              		.loc 1 2938 10 view .LVU2996
 9514 12c4 FFF7FEFF 		bl	process_catalogue
 9515              	.LVL795:
2938:src/keys.c    **** 
 9516              		.loc 1 2938 10 view .LVU2997
 9517 12c8 8346     		mov	fp, r0
 9518 12ca FFF7B9B8 		b	.L641
 9519              	.LVL796:
 9520              	.L987:
 9521              	.LBB1024:
 9522              	.LBB734:
1972:src/keys.c    **** 	}
 9523              		.loc 1 1972 18 view .LVU2998
 9524 12ce 2723     		movs	r3, #39
ARM GAS  /tmp/ccihcwFT.s 			page 274


1972:src/keys.c    **** 	}
 9525              		.loc 1 1972 47 view .LVU2999
 9526 12d0 9B44     		add	fp, fp, r3
 9527              	.LVL797:
1972:src/keys.c    **** 	}
 9528              		.loc 1 1972 47 view .LVU3000
 9529 12d2 FFF7B5B8 		b	.L641
 9530              	.LVL798:
 9531              	.L988:
1972:src/keys.c    **** 	}
 9532              		.loc 1 1972 18 view .LVU3001
 9533 12d6 1E23     		movs	r3, #30
1972:src/keys.c    **** 	}
 9534              		.loc 1 1972 47 view .LVU3002
 9535 12d8 9B44     		add	fp, fp, r3
 9536              	.LVL799:
1972:src/keys.c    **** 	}
 9537              		.loc 1 1972 47 view .LVU3003
 9538 12da FFF7B1B8 		b	.L641
 9539              	.LVL800:
 9540              	.L1201:
1972:src/keys.c    **** 	}
 9541              		.loc 1 1972 47 view .LVU3004
 9542              	.LBE734:
 9543              	.LBE1024:
 9544              	.LBB1025:
 9545              	.LBB793:
2526:src/keys.c    **** 		return STATE_UNFINISHED;
 9546              		.loc 1 2526 3 is_stmt 1 view .LVU3005
 9547 12de 3268     		ldr	r2, [r6]
 9548              	.LVL801:
2526:src/keys.c    **** 		return STATE_UNFINISHED;
 9549              		.loc 1 2526 17 is_stmt 0 view .LVU3006
 9550 12e0 88F80C00 		strb	r0, [r8, #12]
2527:src/keys.c    **** 	} 
 9551              		.loc 1 2527 3 is_stmt 1 view .LVU3007
 9552              	.LBE793:
 9553              	.LBE1025:
2886:src/keys.c    **** 
 9554              		.loc 1 2886 10 is_stmt 0 view .LVU3008
 9555 12e4 4FF0330B 		mov	fp, #51
 9556              	.LBB1026:
 9557              	.LBB794:
2527:src/keys.c    **** 	} 
 9558              		.loc 1 2527 10 view .LVU3009
 9559 12e8 FEF7E3BE 		b	.L611
 9560              	.LVL802:
 9561              	.L1194:
2527:src/keys.c    **** 	} 
 9562              		.loc 1 2527 10 view .LVU3010
 9563              	.LBE794:
 9564              	.LBE1026:
 9565              	.LBB1027:
 9566              	.LBB754:
1357:src/keys.c    **** 		goto fin;
 9567              		.loc 1 1357 3 is_stmt 1 view .LVU3011
1357:src/keys.c    **** 		goto fin;
ARM GAS  /tmp/ccihcwFT.s 			page 275


 9568              		.loc 1 1357 11 is_stmt 0 view .LVU3012
 9569 12ec 354B     		ldr	r3, .L1258+8
 9570              	.LVL803:
1357:src/keys.c    **** 		goto fin;
 9571              		.loc 1 1357 11 view .LVU3013
 9572 12ee 1B68     		ldr	r3, [r3]
1357:src/keys.c    **** 		goto fin;
 9573              		.loc 1 1357 9 view .LVU3014
 9574 12f0 5888     		ldrh	r0, [r3, #2]
 9575              	.LVL804:
1358:src/keys.c    **** 	}
 9576              		.loc 1 1358 3 is_stmt 1 view .LVU3015
 9577 12f2 12E5     		b	.L653
 9578              	.LVL805:
 9579              	.L1196:
1366:src/keys.c    **** 			goto fin2;
 9580              		.loc 1 1366 3 view .LVU3016
1366:src/keys.c    **** 			goto fin2;
 9581              		.loc 1 1366 13 is_stmt 0 view .LVU3017
 9582 12f4 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 9583              	.LVL806:
1366:src/keys.c    **** 			goto fin2;
 9584              		.loc 1 1366 6 view .LVU3018
 9585 12f8 002B     		cmp	r3, #0
 9586 12fa 3FF410AD 		beq	.L657
1369:src/keys.c    **** 			State2.digval /= 10;
 9587              		.loc 1 1369 4 is_stmt 1 view .LVU3019
1369:src/keys.c    **** 			State2.digval /= 10;
 9588              		.loc 1 1369 19 is_stmt 0 view .LVU3020
 9589 12fe 013B     		subs	r3, r3, #1
 9590 1300 88F80B30 		strb	r3, [r8, #11]
1370:src/keys.c    **** 		}
 9591              		.loc 1 1370 4 is_stmt 1 view .LVU3021
1370:src/keys.c    **** 		}
 9592              		.loc 1 1370 18 is_stmt 0 view .LVU3022
 9593 1304 0A21     		movs	r1, #10
 9594 1306 B8F80830 		ldrh	r3, [r8, #8]
 9595 130a 3268     		ldr	r2, [r6]
 9596              	.LVL807:
1370:src/keys.c    **** 		}
 9597              		.loc 1 1370 18 view .LVU3023
 9598 130c B3FBF1F3 		udiv	r3, r3, r1
 9599              	.LBE754:
 9600              	.LBE1027:
2877:src/keys.c    **** 
 9601              		.loc 1 2877 10 view .LVU3024
 9602 1310 4FF0330B 		mov	fp, #51
 9603              	.LBB1028:
 9604              	.LBB755:
1370:src/keys.c    **** 		}
 9605              		.loc 1 1370 18 view .LVU3025
 9606 1314 A8F80830 		strh	r3, [r8, #8]	@ movhi
1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9607              		.loc 1 1391 2 is_stmt 1 view .LVU3026
 9608 1318 FEF7CBBE 		b	.L611
 9609              	.LVL808:
 9610              	.L1177:
ARM GAS  /tmp/ccihcwFT.s 			page 276


1391:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9611              		.loc 1 1391 2 is_stmt 0 view .LVU3027
 9612              	.LBE755:
 9613              	.LBE1028:
2942:src/keys.c    **** #else
 9614              		.loc 1 2942 3 is_stmt 1 view .LVU3028
 9615              	.LBB1029:
 9616              	.LBI1029:
1404:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
 9617              		.loc 1 1404 12 view .LVU3029
 9618              	.LBB1030:
1405:src/keys.c    ****         int op = STATE_UNFINISHED;
 9619              		.loc 1 1405 2 view .LVU3030
1405:src/keys.c    ****         int op = STATE_UNFINISHED;
 9620              		.loc 1 1405 33 is_stmt 0 view .LVU3031
 9621 131c 98F80D90 		ldrb	r9, [r8, #13]	@ zero_extendqisi2
 9622              	.LBB1031:
 9623              	.LBB1032:
 9624              	.LBB1033:
 9625              	.LBB1034:
 9626              	.LBB1035:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9627              		.loc 1 87 18 view .LVU3032
 9628 1320 FFF7FEFF 		bl	shift_down
 9629              	.LVL809:
 9630              	.LBE1035:
 9631              	.LBE1034:
 9632              	.LBE1033:
 9633              	.LBE1032:
 9634              	.LBE1031:
1405:src/keys.c    ****         int op = STATE_UNFINISHED;
 9635              		.loc 1 1405 15 view .LVU3033
 9636 1324 CA46     		mov	r10, r9
 9637              	.LVL810:
1406:src/keys.c    **** 	const enum shifts shift = reset_shift();
 9638              		.loc 1 1406 9 is_stmt 1 view .LVU3034
1407:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
 9639              		.loc 1 1407 2 view .LVU3035
 9640              	.LBB1044:
 9641              	.LBI1031:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 9642              		.loc 1 104 13 view .LVU3036
 9643              	.LBE1044:
 9644              	.LBE1030:
 9645              	.LBE1029:
 9646              	.LBE1242:
 9647              	.LBE1314:
 105:src/keys.c    **** }
 9648              		.loc 1 105 2 view .LVU3037
 9649              	.LBB1315:
 9650              	.LBB1243:
 9651              	.LBB1094:
 9652              	.LBB1082:
 9653              	.LBB1045:
 9654              	.LBB1041:
 9655              	.LBI1032:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
ARM GAS  /tmp/ccihcwFT.s 			page 277


 9656              		.loc 1 94 20 view .LVU3038
 9657              	.LBB1038:
  95:src/keys.c    **** 	State2.shifts = shift;
 9658              		.loc 1 95 2 view .LVU3039
 9659              	.LBB1037:
 9660              	.LBI1034:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 9661              		.loc 1 86 13 view .LVU3040
 9662              	.LBB1036:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9663              		.loc 1 87 2 view .LVU3041
  88:src/keys.c    **** }
 9664              		.loc 1 88 2 view .LVU3042
  88:src/keys.c    **** }
 9665              		.loc 1 88 52 is_stmt 0 view .LVU3043
 9666 1326 08B9     		cbnz	r0, .L795
 9667 1328 98F81000 		ldrb	r0, [r8, #16]	@ zero_extendqisi2
 9668              	.LVL811:
 9669              	.L795:
  88:src/keys.c    **** }
 9670              		.loc 1 88 52 view .LVU3044
 9671              	.LBE1036:
 9672              	.LBE1037:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9673              		.loc 1 96 2 is_stmt 1 view .LVU3045
 9674              	.LBE1038:
 9675              	.LBE1041:
 9676              	.LBE1045:
 9677              	.LBB1046:
 9678              	.LBB1047:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 9679              		.loc 1 439 6 is_stmt 0 view .LVU3046
 9680 132c 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9681              	.LBE1047:
 9682              	.LBE1046:
 9683              	.LBB1063:
 9684              	.LBB1042:
 9685              	.LBB1039:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9686              		.loc 1 96 16 view .LVU3047
 9687 1330 4FF0000C 		mov	ip, #0
 9688              	.LBE1039:
 9689              	.LBE1042:
 9690              	.LBE1063:
 9691              	.LBB1064:
 9692              	.LBB1058:
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 9693              		.loc 1 439 5 view .LVU3048
 9694 1334 D906     		lsls	r1, r3, #27
 9695              	.LBE1058:
 9696              	.LBE1064:
 9697              	.LBB1065:
 9698              	.LBB1043:
 9699              	.LBB1040:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9700              		.loc 1 96 16 view .LVU3049
 9701 1336 88F810C0 		strb	ip, [r8, #16]
ARM GAS  /tmp/ccihcwFT.s 			page 278


  98:src/keys.c    **** }
 9702              		.loc 1 98 2 is_stmt 1 view .LVU3050
 9703              	.LVL812:
  98:src/keys.c    **** }
 9704              		.loc 1 98 2 is_stmt 0 view .LVU3051
 9705              	.LBE1040:
 9706              	.LBE1043:
 9707              	.LBE1065:
1408:src/keys.c    **** 	State2.alpha_pos = 0;
 9708              		.loc 1 1408 2 is_stmt 1 view .LVU3052
1408:src/keys.c    **** 	State2.alpha_pos = 0;
 9709              		.loc 1 1408 11 is_stmt 0 view .LVU3053
 9710 133a 0246     		mov	r2, r0
 9711              	.LVL813:
 9712              	.LBB1066:
 9713              	.LBI1046:
 389:src/keys.c    **** {
 9714              		.loc 1 389 12 is_stmt 1 view .LVU3054
 9715              	.LBB1059:
 391:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 9716              		.loc 1 391 2 view .LVU3055
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 9717              		.loc 1 439 2 view .LVU3056
 439:src/keys.c    **** 		if (shift == SHIFT_N)
 9718              		.loc 1 439 5 is_stmt 0 view .LVU3057
 9719 133c 47D5     		bpl	.L796
 440:src/keys.c    **** 			shift = SHIFT_LC_N;
 9720              		.loc 1 440 3 is_stmt 1 view .LVU3058
 440:src/keys.c    **** 			shift = SHIFT_LC_N;
 9721              		.loc 1 440 6 is_stmt 0 view .LVU3059
 9722 133e 0028     		cmp	r0, #0
 9723 1340 44D0     		beq	.L972
 442:src/keys.c    **** 			shift = SHIFT_LC_G;
 9724              		.loc 1 442 8 is_stmt 1 view .LVU3060
 9725              	.LBB1048:
 9726              	.LBB1049:
 133:src/keys.c    **** }
 9727              		.loc 1 133 23 is_stmt 0 view .LVU3061
 9728 1342 1E49     		ldr	r1, .L1258
 9729              	.LBE1049:
 9730              	.LBE1048:
 445:src/keys.c    **** }
 9731              		.loc 1 445 49 view .LVU3062
 9732 1344 204A     		ldr	r2, .L1258+12
 9733              	.LBB1054:
 9734              	.LBB1050:
 133:src/keys.c    **** }
 9735              		.loc 1 133 23 view .LVU3063
 9736 1346 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 9737              	.LBE1050:
 9738              	.LBE1054:
 9739              	.LBE1059:
 9740              	.LBE1066:
1409:src/keys.c    **** 
 9741              		.loc 1 1409 19 view .LVU3064
 9742 1348 88F80DC0 		strb	ip, [r8, #13]
 9743              	.LBB1067:
ARM GAS  /tmp/ccihcwFT.s 			page 279


 9744              	.LBB1060:
 443:src/keys.c    **** 	}
 9745              		.loc 1 443 10 view .LVU3065
 9746 134c 0228     		cmp	r0, #2
 445:src/keys.c    **** }
 9747              		.loc 1 445 49 view .LVU3066
 9748 134e 4FF0060C 		mov	ip, #6
 9749 1352 0CFB0121 		mla	r1, ip, r1, r2
 443:src/keys.c    **** 	}
 9750              		.loc 1 443 10 view .LVU3067
 9751 1356 14BF     		ite	ne
 9752 1358 0246     		movne	r2, r0
 9753 135a 0522     		moveq	r2, #5
 9754              	.LVL814:
 445:src/keys.c    **** }
 9755              		.loc 1 445 2 is_stmt 1 view .LVU3068
 9756              	.LBB1055:
 9757              	.LBI1048:
 121:src/keys.c    **** {
 9758              		.loc 1 121 12 view .LVU3069
 9759              	.LBB1051:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9760              		.loc 1 123 2 view .LVU3070
 133:src/keys.c    **** }
 9761              		.loc 1 133 2 view .LVU3071
 133:src/keys.c    **** }
 9762              		.loc 1 133 2 is_stmt 0 view .LVU3072
 9763 135c 063C     		subs	r4, r4, #6
 9764              	.LBE1051:
 9765              	.LBE1055:
 445:src/keys.c    **** }
 9766              		.loc 1 445 49 view .LVU3073
 9767 135e 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 9768              	.LVL815:
 445:src/keys.c    **** }
 9769              		.loc 1 445 49 view .LVU3074
 9770              	.LBE1060:
 9771              	.LBE1067:
1409:src/keys.c    **** 
 9772              		.loc 1 1409 2 is_stmt 1 view .LVU3075
1411:src/keys.c    **** 	case K10:	// STO
 9773              		.loc 1 1411 2 view .LVU3076
 9774 1360 212C     		cmp	r4, #33
 9775 1362 23D8     		bhi	.L799
 9776 1364 DFE814F0 		tbh	[pc, r4, lsl #1]
 9777              	.L929:
 9778 1368 BA05     		.2byte	(.L808-.L929)/2
 9779 136a A805     		.2byte	(.L807-.L929)/2
 9780 136c 2200     		.2byte	(.L799-.L929)/2
 9781 136e 2200     		.2byte	(.L799-.L929)/2
 9782 1370 2200     		.2byte	(.L799-.L929)/2
 9783 1372 2200     		.2byte	(.L799-.L929)/2
 9784 1374 CF05     		.2byte	(.L806-.L929)/2
 9785 1376 2200     		.2byte	(.L799-.L929)/2
 9786 1378 2200     		.2byte	(.L799-.L929)/2
 9787 137a 2200     		.2byte	(.L799-.L929)/2
 9788 137c 0304     		.2byte	(.L815-.L929)/2
ARM GAS  /tmp/ccihcwFT.s 			page 280


 9789 137e 2200     		.2byte	(.L799-.L929)/2
 9790 1380 B504     		.2byte	(.L804-.L929)/2
 9791 1382 2200     		.2byte	(.L799-.L929)/2
 9792 1384 2200     		.2byte	(.L799-.L929)/2
 9793 1386 2200     		.2byte	(.L799-.L929)/2
 9794 1388 2200     		.2byte	(.L799-.L929)/2
 9795 138a 2200     		.2byte	(.L799-.L929)/2
 9796 138c A704     		.2byte	(.L803-.L929)/2
 9797 138e 2200     		.2byte	(.L799-.L929)/2
 9798 1390 2200     		.2byte	(.L799-.L929)/2
 9799 1392 2200     		.2byte	(.L799-.L929)/2
 9800 1394 2200     		.2byte	(.L799-.L929)/2
 9801 1396 2200     		.2byte	(.L799-.L929)/2
 9802 1398 2200     		.2byte	(.L799-.L929)/2
 9803 139a 2200     		.2byte	(.L799-.L929)/2
 9804 139c 2200     		.2byte	(.L799-.L929)/2
 9805 139e 2200     		.2byte	(.L799-.L929)/2
 9806 13a0 2200     		.2byte	(.L799-.L929)/2
 9807 13a2 2200     		.2byte	(.L799-.L929)/2
 9808 13a4 7204     		.2byte	(.L802-.L929)/2
 9809 13a6 2200     		.2byte	(.L799-.L929)/2
 9810 13a8 2200     		.2byte	(.L799-.L929)/2
 9811 13aa 6604     		.2byte	(.L800-.L929)/2
 9812              		.p2align 1
 9813              	.L799:
1518:src/keys.c    **** 		return STATE_UNFINISHED;
 9814              		.loc 1 1518 2 view .LVU3077
1518:src/keys.c    **** 		return STATE_UNFINISHED;
 9815              		.loc 1 1518 5 is_stmt 0 view .LVU3078
 9816 13ac 0029     		cmp	r1, #0
 9817 13ae 00F0D382 		beq	.L1222
1520:src/keys.c    **** }
 9818              		.loc 1 1520 2 is_stmt 1 view .LVU3079
1520:src/keys.c    **** }
 9819              		.loc 1 1520 9 is_stmt 0 view .LVU3080
 9820 13b2 41F4884B 		orr	fp, r1, #17408
 9821 13b6 5846     		mov	r0, fp
 9822              	.LVL816:
1520:src/keys.c    **** }
 9823              		.loc 1 1520 9 view .LVU3081
 9824 13b8 FFF7B4B8 		b	.L668
 9825              	.L1259:
 9826              		.align	2
 9827              	.L1258:
 9828 13bc 00000000 		.word	.LANCHOR1
 9829 13c0 00000000 		.word	.LANCHOR0
 9830 13c4 00000000 		.word	main_ram
 9831 13c8 00000000 		.word	.LANCHOR9
 9832              	.LVL817:
 9833              	.L972:
 9834              	.LBB1068:
 9835              	.LBB1061:
 441:src/keys.c    **** 		else if (shift == SHIFT_G)
 9836              		.loc 1 441 10 view .LVU3082
 9837 13cc 0422     		movs	r2, #4
 9838              	.L796:
 9839              	.LVL818:
ARM GAS  /tmp/ccihcwFT.s 			page 281


 445:src/keys.c    **** }
 9840              		.loc 1 445 2 is_stmt 1 view .LVU3083
 9841              	.LBB1056:
 121:src/keys.c    **** {
 9842              		.loc 1 121 12 view .LVU3084
 9843              	.LBB1052:
 123:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9844              		.loc 1 123 2 view .LVU3085
 133:src/keys.c    **** }
 9845              		.loc 1 133 2 view .LVU3086
 133:src/keys.c    **** }
 9846              		.loc 1 133 23 is_stmt 0 view .LVU3087
 9847 13ce BC49     		ldr	r1, .L1260
 9848              	.LBE1052:
 9849              	.LBE1056:
 445:src/keys.c    **** }
 9850              		.loc 1 445 49 view .LVU3088
 9851 13d0 DFF804C3 		ldr	ip, .L1260+24
 9852              	.LBB1057:
 9853              	.LBB1053:
 133:src/keys.c    **** }
 9854              		.loc 1 133 23 view .LVU3089
 9855 13d4 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 9856              	.LBE1053:
 9857              	.LBE1057:
 445:src/keys.c    **** }
 9858              		.loc 1 445 49 view .LVU3090
 9859 13d6 4FF0060E 		mov	lr, #6
 9860 13da 0EFB01C1 		mla	r1, lr, r1, ip
 9861 13de 063C     		subs	r4, r4, #6
 9862              	.LBE1061:
 9863              	.LBE1068:
1409:src/keys.c    **** 
 9864              		.loc 1 1409 19 view .LVU3091
 9865 13e0 4FF0000C 		mov	ip, #0
 9866              	.LBB1069:
 9867              	.LBB1062:
 445:src/keys.c    **** }
 9868              		.loc 1 445 49 view .LVU3092
 9869 13e4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 9870              	.LVL819:
 445:src/keys.c    **** }
 9871              		.loc 1 445 49 view .LVU3093
 9872              	.LBE1062:
 9873              	.LBE1069:
1409:src/keys.c    **** 
 9874              		.loc 1 1409 2 is_stmt 1 view .LVU3094
1409:src/keys.c    **** 
 9875              		.loc 1 1409 19 is_stmt 0 view .LVU3095
 9876 13e6 88F80DC0 		strb	ip, [r8, #13]
1411:src/keys.c    **** 	case K10:	// STO
 9877              		.loc 1 1411 2 is_stmt 1 view .LVU3096
 9878 13ea 212C     		cmp	r4, #33
 9879 13ec DED8     		bhi	.L799
 9880 13ee 01A2     		adr	r2, .L801
 9881 13f0 52F824F0 		ldr	pc, [r2, r4, lsl #2]
 9882              		.p2align 2
ARM GAS  /tmp/ccihcwFT.s 			page 282


 9883              	.L801:
 9884 13f4 DD1E0000 		.word	.L808+1
 9885 13f8 B91E0000 		.word	.L807+1
 9886 13fc AD130000 		.word	.L799+1
 9887 1400 AD130000 		.word	.L799+1
 9888 1404 AD130000 		.word	.L799+1
 9889 1408 AD130000 		.word	.L799+1
 9890 140c 071F0000 		.word	.L806+1
 9891 1410 AD130000 		.word	.L799+1
 9892 1414 AD130000 		.word	.L799+1
 9893 1418 AD130000 		.word	.L799+1
 9894 141c 691B0000 		.word	.L805+1
 9895 1420 AD130000 		.word	.L799+1
 9896 1424 D31C0000 		.word	.L804+1
 9897 1428 AD130000 		.word	.L799+1
 9898 142c AD130000 		.word	.L799+1
 9899 1430 AD130000 		.word	.L799+1
 9900 1434 AD130000 		.word	.L799+1
 9901 1438 AD130000 		.word	.L799+1
 9902 143c B71C0000 		.word	.L803+1
 9903 1440 AD130000 		.word	.L799+1
 9904 1444 AD130000 		.word	.L799+1
 9905 1448 AD130000 		.word	.L799+1
 9906 144c AD130000 		.word	.L799+1
 9907 1450 AD130000 		.word	.L799+1
 9908 1454 AD130000 		.word	.L799+1
 9909 1458 AD130000 		.word	.L799+1
 9910 145c AD130000 		.word	.L799+1
 9911 1460 AD130000 		.word	.L799+1
 9912 1464 AD130000 		.word	.L799+1
 9913 1468 AD130000 		.word	.L799+1
 9914 146c 4D1C0000 		.word	.L802+1
 9915 1470 AD130000 		.word	.L799+1
 9916 1474 AD130000 		.word	.L799+1
 9917 1478 351C0000 		.word	.L800+1
 9918              	.LVL820:
 9919              		.p2align 1
 9920              	.L1178:
1411:src/keys.c    **** 	case K10:	// STO
 9921              		.loc 1 1411 2 is_stmt 0 view .LVU3097
 9922              	.LBE1082:
 9923              	.LBE1094:
2954:src/keys.c    **** 	} else {
 9924              		.loc 1 2954 3 is_stmt 1 view .LVU3098
 9925              	.LBB1095:
 9926              	.LBI1095:
1109:src/keys.c    **** #define _RARG   0xFF00
 9927              		.loc 1 1109 12 view .LVU3099
 9928              	.LBB1096:
1114:src/keys.c    **** 		// Row 1
 9929              		.loc 1 1114 2 view .LVU3100
1165:src/keys.c    **** 	int lc = keycode_to_linear(c);
 9930              		.loc 1 1165 2 view .LVU3101
 9931              	.LBB1097:
 9932              	.LBI1097:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 9933              		.loc 1 104 13 view .LVU3102
ARM GAS  /tmp/ccihcwFT.s 			page 283


 9934              	.LBE1097:
 9935              	.LBE1096:
 9936              	.LBE1095:
 9937              	.LBE1243:
 9938              	.LBE1315:
 105:src/keys.c    **** }
 9939              		.loc 1 105 2 view .LVU3103
 9940              	.LBB1316:
 9941              	.LBB1244:
 9942              	.LBB1127:
 9943              	.LBB1121:
 9944              	.LBB1106:
 9945              	.LBB1098:
 9946              	.LBI1098:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 9947              		.loc 1 94 20 view .LVU3104
 9948              	.LBB1099:
  95:src/keys.c    **** 	State2.shifts = shift;
 9949              		.loc 1 95 2 view .LVU3105
 9950              	.LBB1100:
 9951              	.LBI1100:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 9952              		.loc 1 86 13 view .LVU3106
 9953              	.LBB1101:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9954              		.loc 1 87 2 view .LVU3107
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9955              		.loc 1 87 18 is_stmt 0 view .LVU3108
 9956 147c FFF7FEFF 		bl	shift_down
 9957              	.LVL821:
  88:src/keys.c    **** }
 9958              		.loc 1 88 2 is_stmt 1 view .LVU3109
  88:src/keys.c    **** }
 9959              		.loc 1 88 52 is_stmt 0 view .LVU3110
 9960 1480 8246     		mov	r10, r0
 9961              	.LVL822:
  88:src/keys.c    **** }
 9962              		.loc 1 88 52 view .LVU3111
 9963 1482 08B9     		cbnz	r0, .L829
 9964 1484 98F810A0 		ldrb	r10, [r8, #16]	@ zero_extendqisi2
 9965              	.L829:
 9966              	.LVL823:
  88:src/keys.c    **** }
 9967              		.loc 1 88 52 view .LVU3112
 9968              	.LBE1101:
 9969              	.LBE1100:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9970              		.loc 1 96 2 is_stmt 1 view .LVU3113
 9971              	.LBE1099:
 9972              	.LBE1098:
 9973              	.LBE1106:
 9974              	.LBB1107:
 9975              	.LBB1108:
 148:src/keys.c    **** }
 9976              		.loc 1 148 23 is_stmt 0 view .LVU3114
 9977 1488 8E4B     		ldr	r3, .L1260+4
 9978              	.LBE1108:
ARM GAS  /tmp/ccihcwFT.s 			page 284


 9979              	.LBE1107:
1167:src/keys.c    **** 	State2.cmplx = 0;
 9980              		.loc 1 1167 21 view .LVU3115
 9981 148a 8F48     		ldr	r0, .L1260+8
 9982              	.LBB1111:
 9983              	.LBB1109:
 148:src/keys.c    **** }
 9984              		.loc 1 148 23 view .LVU3116
 9985 148c 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 9986              	.LBE1109:
 9987              	.LBE1111:
1168:src/keys.c    **** 
 9988              		.loc 1 1168 15 view .LVU3117
 9989 148e 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
1167:src/keys.c    **** 	State2.cmplx = 0;
 9990              		.loc 1 1167 21 view .LVU3118
 9991 1492 0AEB8303 		add	r3, r10, r3, lsl #2
 9992              	.LBB1112:
 9993              	.LBB1104:
 9994              	.LBB1102:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9995              		.loc 1 96 16 view .LVU3119
 9996 1496 0021     		movs	r1, #0
 9997              	.LBE1102:
 9998              	.LBE1104:
 9999              	.LBE1112:
1167:src/keys.c    **** 	State2.cmplx = 0;
 10000              		.loc 1 1167 21 view .LVU3120
 10001 1498 30F813B0 		ldrh	fp, [r0, r3, lsl #1]
 10002              	.LBB1113:
 10003              	.LBB1105:
 10004              	.LBB1103:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10005              		.loc 1 96 16 view .LVU3121
 10006 149c 88F81010 		strb	r1, [r8, #16]
  98:src/keys.c    **** }
 10007              		.loc 1 98 2 is_stmt 1 view .LVU3122
 10008              	.LVL824:
  98:src/keys.c    **** }
 10009              		.loc 1 98 2 is_stmt 0 view .LVU3123
 10010              	.LBE1103:
 10011              	.LBE1105:
 10012              	.LBE1113:
1166:src/keys.c    **** 	int op = op_map[lc][shift];
 10013              		.loc 1 1166 2 is_stmt 1 view .LVU3124
 10014              	.LBB1114:
 10015              	.LBI1107:
 136:src/keys.c    **** {
 10016              		.loc 1 136 12 view .LVU3125
 10017              	.LBB1110:
 138:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10018              		.loc 1 138 2 view .LVU3126
 148:src/keys.c    **** }
 10019              		.loc 1 148 2 view .LVU3127
 148:src/keys.c    **** }
 10020              		.loc 1 148 2 is_stmt 0 view .LVU3128
 10021              	.LBE1110:
ARM GAS  /tmp/ccihcwFT.s 			page 285


 10022              	.LBE1114:
1167:src/keys.c    **** 	State2.cmplx = 0;
 10023              		.loc 1 1167 2 is_stmt 1 view .LVU3129
1168:src/keys.c    **** 
 10024              		.loc 1 1168 2 view .LVU3130
1170:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 10025              		.loc 1 1170 5 is_stmt 0 view .LVU3131
 10026 14a0 0BF47F43 		and	r3, fp, #65280
1168:src/keys.c    **** 
 10027              		.loc 1 1168 15 view .LVU3132
 10028 14a4 61F34102 		bfi	r2, r1, #1, #1
1170:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 10029              		.loc 1 1170 5 view .LVU3133
 10030 14a8 B3F57F4F 		cmp	r3, #65280
1168:src/keys.c    **** 
 10031              		.loc 1 1168 15 view .LVU3134
 10032 14ac 88F81520 		strb	r2, [r8, #21]
1170:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 10033              		.loc 1 1170 2 is_stmt 1 view .LVU3135
1170:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 10034              		.loc 1 1170 5 is_stmt 0 view .LVU3136
 10035 14b0 00F0A784 		beq	.L1223
1174:src/keys.c    **** 		// HYP
 10036              		.loc 1 1174 2 is_stmt 1 view .LVU3137
1174:src/keys.c    **** 		// HYP
 10037              		.loc 1 1174 5 is_stmt 0 view .LVU3138
 10038 14b4 002C     		cmp	r4, #0
 10039 14b6 00F09184 		beq	.L1224
1183:src/keys.c    **** 		switch (c) {
 10040              		.loc 1 1183 2 is_stmt 1 view .LVU3139
1183:src/keys.c    **** 		switch (c) {
 10041              		.loc 1 1183 5 is_stmt 0 view .LVU3140
 10042 14ba BAF1000F 		cmp	r10, #0
 10043 14be 3EF4BFAF 		beq	.L641
1184:src/keys.c    **** 		case K_CMPLX:
 10044              		.loc 1 1184 3 is_stmt 1 view .LVU3141
 10045 14c2 242C     		cmp	r4, #36
 10046 14c4 00F0AB84 		beq	.L833
 10047 14c8 2D2C     		cmp	r4, #45
 10048 14ca 00F07C84 		beq	.L834
 10049 14ce 1F2C     		cmp	r4, #31
 10050 14d0 7EF4B6AF 		bne	.L641
1190:src/keys.c    **** 				if (is_bad_cmdline())
 10051              		.loc 1 1190 4 view .LVU3142
1190:src/keys.c    **** 				if (is_bad_cmdline())
 10052              		.loc 1 1190 7 is_stmt 0 view .LVU3143
 10053 14d4 BBF1330F 		cmp	fp, #51
 10054 14d8 00F06484 		beq	.L1225
1191:src/keys.c    **** 					return STATE_UNFINISHED;
 10055              		.loc 1 1191 5 is_stmt 1 view .LVU3144
1191:src/keys.c    **** 					return STATE_UNFINISHED;
 10056              		.loc 1 1191 9 is_stmt 0 view .LVU3145
 10057 14dc FFF7FEFF 		bl	is_bad_cmdline
 10058              	.LVL825:
1191:src/keys.c    **** 					return STATE_UNFINISHED;
 10059              		.loc 1 1191 8 view .LVU3146
 10060 14e0 0446     		mov	r4, r0
ARM GAS  /tmp/ccihcwFT.s 			page 286


 10061 14e2 0028     		cmp	r0, #0
 10062 14e4 00F04E84 		beq	.L837
 10063 14e8 3268     		ldr	r2, [r6]
1192:src/keys.c    **** 				process_cmdline_set_lift();
 10064              		.loc 1 1192 13 view .LVU3147
 10065 14ea 4FF0330B 		mov	fp, #51
 10066              	.LVL826:
1192:src/keys.c    **** 				process_cmdline_set_lift();
 10067              		.loc 1 1192 13 view .LVU3148
 10068 14ee FEF7E0BD 		b	.L611
 10069              	.LVL827:
 10070              	.L1207:
1192:src/keys.c    **** 				process_cmdline_set_lift();
 10071              		.loc 1 1192 13 view .LVU3149
 10072              	.LBE1121:
 10073              	.LBE1127:
 10074              	.LBB1128:
 10075              	.LBB877:
2416:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 10076              		.loc 1 2416 3 is_stmt 1 view .LVU3150
2416:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 10077              		.loc 1 2416 12 is_stmt 0 view .LVU3151
 10078 14f2 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
 10079 14f6 2046     		mov	r0, r4
 10080 14f8 941E     		subs	r4, r2, #2
 10081 14fa 6242     		rsbs	r2, r4, #0
 10082 14fc 6241     		adcs	r2, r2, r4
 10083 14fe FFF7FEFF 		bl	process_catalogue
 10084              	.LVL828:
2417:src/keys.c    **** 			return opcode;
 10085              		.loc 1 2417 6 view .LVU3152
 10086 1502 3328     		cmp	r0, #51
2416:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 10087              		.loc 1 2416 12 view .LVU3153
 10088 1504 8346     		mov	fp, r0
 10089              	.LVL829:
2417:src/keys.c    **** 			return opcode;
 10090              		.loc 1 2417 3 is_stmt 1 view .LVU3154
2417:src/keys.c    **** 			return opcode;
 10091              		.loc 1 2417 6 is_stmt 0 view .LVU3155
 10092 1506 00F0CE81 		beq	.L1226
2419:src/keys.c    **** 		goto add_char;
 10093              		.loc 1 2419 3 is_stmt 1 view .LVU3156
2419:src/keys.c    **** 		goto add_char;
 10094              		.loc 1 2419 6 is_stmt 0 view .LVU3157
 10095 150a C0B2     		uxtb	r0, r0
 10096              	.LVL830:
2420:src/keys.c    **** 	}
 10097              		.loc 1 2420 3 is_stmt 1 view .LVU3158
 10098 150c 55E4     		b	.L726
 10099              	.LVL831:
 10100              	.L1171:
2420:src/keys.c    **** 	}
 10101              		.loc 1 2420 3 is_stmt 0 view .LVU3159
 10102              	.LBE877:
 10103              	.LBE1128:
 10104              	.LBB1129:
ARM GAS  /tmp/ccihcwFT.s 			page 287


 10105              	.LBB668:
 10106              	.LBB662:
 327:src/keys.c    **** #else
 10107              		.loc 1 327 45 view .LVU3160
 10108 150e FFF7FEFF 		bl	shift_down
 10109              	.LVL832:
 327:src/keys.c    **** #else
 10110              		.loc 1 327 42 view .LVU3161
 10111 1512 0328     		cmp	r0, #3
 10112 1514 00F0DF81 		beq	.L713
 10113 1518 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 325:src/keys.c    **** #ifndef WINGUI
 10114              		.loc 1 325 8 view .LVU3162
 10115 151c 6B4B     		ldr	r3, .L1260+12
 327:src/keys.c    **** #else
 10116              		.loc 1 327 73 view .LVU3163
 10117 151e DC46     		mov	ip, fp
 331:src/keys.c    ****   }
 10118              		.loc 1 331 9 view .LVU3164
 10119 1520 0C22     		movs	r2, #12
 10120 1522 FEF798BE 		b	.L712
 10121              	.LVL833:
 10122              	.L964:
 331:src/keys.c    ****   }
 10123              		.loc 1 331 9 view .LVU3165
 10124              	.LBE662:
 10125              	.LBE668:
 10126              	.LBE1129:
 10127              	.LBB1130:
 10128              	.LBB927:
2595:src/keys.c    **** 	const int opcode = getprog(pc);
 10129              		.loc 1 2595 27 view .LVU3166
 10130 1526 4FF0030B 		mov	fp, #3
 10131 152a F1E4     		b	.L741
 10132              	.LVL834:
 10133              	.L1180:
2595:src/keys.c    **** 	const int opcode = getprog(pc);
 10134              		.loc 1 2595 27 view .LVU3167
 10135              	.LBE927:
 10136              	.LBE1130:
2959:src/keys.c    **** 		// print_debug (3, c);
 10137              		.loc 1 2959 4 is_stmt 1 view .LVU3168
 10138              	.LBB1131:
 10139              	.LBI1131:
1010:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 10140              		.loc 1 1010 12 view .LVU3169
 10141              	.LBB1132:
1013:src/keys.c    **** 		// Row 1
 10142              		.loc 1 1013 2 view .LVU3170
1064:src/keys.c    **** 	int op = op_map[lc];
 10143              		.loc 1 1064 2 view .LVU3171
 10144              	.LBB1133:
 10145              	.LBI1133:
 136:src/keys.c    **** {
 10146              		.loc 1 136 12 view .LVU3172
 10147              	.LBB1134:
 138:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
ARM GAS  /tmp/ccihcwFT.s 			page 288


 10148              		.loc 1 138 2 view .LVU3173
 148:src/keys.c    **** }
 10149              		.loc 1 148 2 view .LVU3174
 148:src/keys.c    **** }
 10150              		.loc 1 148 2 is_stmt 0 view .LVU3175
 10151              	.LBE1134:
 10152              	.LBE1133:
1065:src/keys.c    **** 	reset_shift();
 10153              		.loc 1 1065 2 is_stmt 1 view .LVU3176
 10154              	.LBB1137:
 10155              	.LBB1135:
 148:src/keys.c    **** }
 10156              		.loc 1 148 23 is_stmt 0 view .LVU3177
 10157 152c 654A     		ldr	r2, .L1260+4
 10158              	.LBE1135:
 10159              	.LBE1137:
1065:src/keys.c    **** 	reset_shift();
 10160              		.loc 1 1065 17 view .LVU3178
 10161 152e 684B     		ldr	r3, .L1260+16
 10162              	.LBB1138:
 10163              	.LBB1136:
 148:src/keys.c    **** }
 10164              		.loc 1 148 23 view .LVU3179
 10165 1530 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 10166              	.LBE1136:
 10167              	.LBE1138:
1065:src/keys.c    **** 	reset_shift();
 10168              		.loc 1 1065 17 view .LVU3180
 10169 1532 33F812A0 		ldrh	r10, [r3, r2, lsl #1]
 10170              	.LVL835:
1066:src/keys.c    **** 
 10171              		.loc 1 1066 2 is_stmt 1 view .LVU3181
 10172              	.LBB1139:
 10173              	.LBI1139:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 10174              		.loc 1 104 13 view .LVU3182
 10175              	.LBE1139:
 10176              	.LBE1132:
 10177              	.LBE1131:
 10178              	.LBE1244:
 10179              	.LBE1316:
 105:src/keys.c    **** }
 10180              		.loc 1 105 2 view .LVU3183
 10181              	.LBB1317:
 10182              	.LBB1245:
 10183              	.LBB1154:
 10184              	.LBB1150:
 10185              	.LBB1146:
 10186              	.LBB1140:
 10187              	.LBI1140:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 10188              		.loc 1 94 20 view .LVU3184
 10189              	.LBB1141:
  95:src/keys.c    **** 	State2.shifts = shift;
 10190              		.loc 1 95 2 view .LVU3185
 10191              	.LBB1142:
 10192              	.LBI1142:
ARM GAS  /tmp/ccihcwFT.s 			page 289


  86:src/keys.c    **** 	enum shifts s = shift_down();
 10193              		.loc 1 86 13 view .LVU3186
 10194              	.LBB1143:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10195              		.loc 1 87 2 view .LVU3187
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10196              		.loc 1 87 18 is_stmt 0 view .LVU3188
 10197 1536 FFF7FEFF 		bl	shift_down
 10198              	.LVL836:
  88:src/keys.c    **** }
 10199              		.loc 1 88 2 is_stmt 1 view .LVU3189
 10200              	.LBE1143:
 10201              	.LBE1142:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10202              		.loc 1 96 2 view .LVU3190
 10203              	.LBE1141:
 10204              	.LBE1140:
 10205              	.LBE1146:
1069:src/keys.c    **** 	case K62:
 10206              		.loc 1 1069 2 is_stmt 0 view .LVU3191
 10207 153a 262C     		cmp	r4, #38
 10208              	.LBB1147:
 10209              	.LBB1145:
 10210              	.LBB1144:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10211              		.loc 1 96 16 view .LVU3192
 10212 153c 88F810B0 		strb	fp, [r8, #16]
  98:src/keys.c    **** }
 10213              		.loc 1 98 2 is_stmt 1 view .LVU3193
 10214              	.LVL837:
  98:src/keys.c    **** }
 10215              		.loc 1 98 2 is_stmt 0 view .LVU3194
 10216              	.LBE1144:
 10217              	.LBE1145:
 10218              	.LBE1147:
1069:src/keys.c    **** 	case K62:
 10219              		.loc 1 1069 2 is_stmt 1 view .LVU3195
 10220 1540 00F0EA81 		beq	.L864
 10221 1544 272C     		cmp	r4, #39
 10222 1546 1FD1     		bne	.L866
1082:src/keys.c    **** 			return STATE_UNFINISHED;
 10223              		.loc 1 1082 3 view .LVU3196
1082:src/keys.c    **** 			return STATE_UNFINISHED;
 10224              		.loc 1 1082 7 is_stmt 0 view .LVU3197
 10225 1548 FFF7FEFF 		bl	is_bad_cmdline
 10226              	.LVL838:
1082:src/keys.c    **** 			return STATE_UNFINISHED;
 10227              		.loc 1 1082 6 view .LVU3198
 10228 154c 0028     		cmp	r0, #0
 10229 154e 40F04183 		bne	.L1227
1084:src/keys.c    **** 		process_cmdline_set_lift();
 10230              		.loc 1 1084 3 is_stmt 1 view .LVU3199
1084:src/keys.c    **** 		process_cmdline_set_lift();
 10231              		.loc 1 1084 30 is_stmt 0 view .LVU3200
 10232 1552 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10233 1556 C3F38012 		ubfx	r2, r3, #6, #1
1084:src/keys.c    **** 		process_cmdline_set_lift();
ARM GAS  /tmp/ccihcwFT.s 			page 290


 10234              		.loc 1 1084 22 view .LVU3201
 10235 155a C2F10102 		rsb	r2, r2, #1
1084:src/keys.c    **** 		process_cmdline_set_lift();
 10236              		.loc 1 1084 18 view .LVU3202
 10237 155e 62F38613 		bfi	r3, r2, #6, #1
 10238 1562 88F81630 		strb	r3, [r8, #22]
1085:src/keys.c    **** 		update_program_bounds(1);
 10239              		.loc 1 1085 3 is_stmt 1 view .LVU3203
 10240 1566 FFF7FEFF 		bl	process_cmdline_set_lift
 10241              	.LVL839:
1086:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
 10242              		.loc 1 1086 3 view .LVU3204
 10243 156a 0120     		movs	r0, #1
 10244 156c FFF7FEFF 		bl	update_program_bounds
 10245              	.LVL840:
1087:src/keys.c    **** 			set_pc(0);
 10246              		.loc 1 1087 3 view .LVU3205
1087:src/keys.c    **** 			set_pc(0);
 10247              		.loc 1 1087 7 is_stmt 0 view .LVU3206
 10248 1570 98F81600 		ldrb	r0, [r8, #22]	@ zero_extendqisi2
1087:src/keys.c    **** 			set_pc(0);
 10249              		.loc 1 1087 6 view .LVU3207
 10250 1574 10F04000 		ands	r0, r0, #64
 10251 1578 06D1     		bne	.L866
1087:src/keys.c    **** 			set_pc(0);
 10252              		.loc 1 1087 27 view .LVU3208
 10253 157a 564B     		ldr	r3, .L1260+20
 10254 157c 1B68     		ldr	r3, [r3]
1087:src/keys.c    **** 			set_pc(0);
 10255              		.loc 1 1087 24 view .LVU3209
 10256 157e B3F8E027 		ldrh	r2, [r3, #2016]
 10257 1582 012A     		cmp	r2, #1
 10258 1584 00F01E83 		beq	.L1228
 10259              	.L866:
1095:src/keys.c    **** 		if (op & _RARG) {
 10260              		.loc 1 1095 5 view .LVU3210
 10261 1588 BAF1330F 		cmp	r10, #51
1065:src/keys.c    **** 	reset_shift();
 10262              		.loc 1 1065 6 view .LVU3211
 10263 158c D346     		mov	fp, r10
1095:src/keys.c    **** 		if (op & _RARG) {
 10264              		.loc 1 1095 2 is_stmt 1 view .LVU3212
1095:src/keys.c    **** 		if (op & _RARG) {
 10265              		.loc 1 1095 5 is_stmt 0 view .LVU3213
 10266 158e 0AD0     		beq	.L875
 10267              	.LVL841:
1096:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 10268              		.loc 1 1096 3 is_stmt 1 view .LVU3214
1096:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 10269              		.loc 1 1096 6 is_stmt 0 view .LVU3215
 10270 1590 1AF4004F 		tst	r10, #32768
 10271 1594 00F0D081 		beq	.L1229
1097:src/keys.c    **** 			op = STATE_UNFINISHED;
 10272              		.loc 1 1097 4 is_stmt 1 view .LVU3216
 10273              	.LVL842:
 10274              	.LBB1148:
 10275              	.LBI1148:
ARM GAS  /tmp/ccihcwFT.s 			page 291


 506:src/keys.c    **** 	if (is_bad_cmdline())
 10276              		.loc 1 506 13 view .LVU3217
 10277              	.LBB1149:
 507:src/keys.c    **** 		return;
 10278              		.loc 1 507 2 view .LVU3218
 507:src/keys.c    **** 		return;
 10279              		.loc 1 507 6 is_stmt 0 view .LVU3219
 10280 1598 FFF7FEFF 		bl	is_bad_cmdline
 10281              	.LVL843:
 507:src/keys.c    **** 		return;
 10282              		.loc 1 507 5 view .LVU3220
 10283 159c 18B9     		cbnz	r0, .L875
 10284 159e 5FFA8AF0 		uxtb	r0, r10
 10285 15a2 FFF7FEFF 		bl	init_arg.part.0
 10286              	.LVL844:
 10287              	.L875:
 507:src/keys.c    **** 		return;
 10288              		.loc 1 507 5 view .LVU3221
 10289              	.LBE1149:
 10290              	.LBE1148:
1101:src/keys.c    **** #undef _RARG
 10291              		.loc 1 1101 2 is_stmt 1 view .LVU3222
1077:src/keys.c    **** #endif
 10292              		.loc 1 1077 29 is_stmt 0 view .LVU3223
 10293 15a6 4FF0330B 		mov	fp, #51
 10294              	.LVL845:
 10295              	.L869:
1101:src/keys.c    **** #undef _RARG
 10296              		.loc 1 1101 57 view .LVU3224
 10297 15aa 2BF4804B 		bic	fp, fp, #16384
 10298 15ae FEF747BF 		b	.L641
 10299              	.LVL846:
 10300              	.L1202:
1101:src/keys.c    **** #undef _RARG
 10301              		.loc 1 1101 57 view .LVU3225
 10302              	.LBE1150:
 10303              	.LBE1154:
 10304              	.LBB1155:
 10305              	.LBB795:
 10306              	.LBB787:
2534:src/keys.c    **** 		else if (nn != NO_REG)
 10307              		.loc 1 2534 4 is_stmt 1 view .LVU3226
2536:src/keys.c    **** 	}
 10308              		.loc 1 2536 6 is_stmt 0 view .LVU3227
 10309 15b2 9342     		cmp	r3, r2
 10310 15b4 08BF     		it	eq
 10311 15b6 0A22     		moveq	r2, #10
 10312              	.LVL847:
2536:src/keys.c    **** 	}
 10313              		.loc 1 2536 6 view .LVU3228
 10314 15b8 FFF7DFBA 		b	.L690
 10315              	.LVL848:
 10316              	.L1208:
2536:src/keys.c    **** 	}
 10317              		.loc 1 2536 6 view .LVU3229
 10318              	.LBE787:
 10319              	.LBE795:
ARM GAS  /tmp/ccihcwFT.s 			page 292


 10320              	.LBE1155:
 10321              	.LBB1156:
 10322              	.LBB878:
2425:src/keys.c    **** 				break;
 10323              		.loc 1 2425 3 is_stmt 1 view .LVU3230
2425:src/keys.c    **** 				break;
 10324              		.loc 1 2425 6 is_stmt 0 view .LVU3231
 10325 15bc 0029     		cmp	r1, #0
 10326 15be 7FF4EAAB 		bne	.L729
2427:src/keys.c    **** 		if (State2.numdigit == 0)
 10327              		.loc 1 2427 3 is_stmt 1 view .LVU3232
 10328              	.LBB867:
 10329              	.LBI867:
2402:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 10330              		.loc 1 2402 13 view .LVU3233
 10331              	.LBB868:
2404:src/keys.c    **** 	if (! State2.alphas )
 10332              		.loc 1 2404 2 view .LVU3234
2404:src/keys.c    **** 	if (! State2.alphas )
 10333              		.loc 1 2404 15 is_stmt 0 view .LVU3235
 10334 15c2 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2405:src/keys.c    **** 		State2.alphashift = 0;
 10335              		.loc 1 2405 6 view .LVU3236
 10336 15c6 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2404:src/keys.c    **** 	if (! State2.alphas )
 10337              		.loc 1 2404 15 view .LVU3237
 10338 15ca 61F3C302 		bfi	r2, r1, #3, #1
 10339 15ce 88F81520 		strb	r2, [r8, #21]
2405:src/keys.c    **** 		State2.alphashift = 0;
 10340              		.loc 1 2405 2 is_stmt 1 view .LVU3238
2405:src/keys.c    **** 		State2.alphashift = 0;
 10341              		.loc 1 2405 5 is_stmt 0 view .LVU3239
 10342 15d2 1A07     		lsls	r2, r3, #28
2406:src/keys.c    **** }
 10343              		.loc 1 2406 3 is_stmt 1 view .LVU3240
 10344              	.LBE868:
 10345              	.LBE867:
2428:src/keys.c    **** 			return STATE_UNFINISHED;
 10346              		.loc 1 2428 3 view .LVU3241
 10347              	.LBB870:
 10348              	.LBB869:
2406:src/keys.c    **** }
 10349              		.loc 1 2406 21 is_stmt 0 view .LVU3242
 10350 15d4 5CBF     		itt	pl
 10351 15d6 61F30413 		bfipl	r3, r1, #4, #1
 10352 15da 88F81630 		strbpl	r3, [r8, #22]
 10353              	.LBE869:
 10354              	.LBE870:
2428:src/keys.c    **** 			return STATE_UNFINISHED;
 10355              		.loc 1 2428 13 view .LVU3243
 10356 15de 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
2428:src/keys.c    **** 			return STATE_UNFINISHED;
 10357              		.loc 1 2428 6 view .LVU3244
 10358 15e2 002B     		cmp	r3, #0
 10359 15e4 00F0B282 		beq	.L1230
2430:src/keys.c    **** 			State2.digval2 = 0;
 10360              		.loc 1 2430 8 is_stmt 1 view .LVU3245
ARM GAS  /tmp/ccihcwFT.s 			page 293


2430:src/keys.c    **** 			State2.digval2 = 0;
 10361              		.loc 1 2430 11 is_stmt 0 view .LVU3246
 10362 15e8 012B     		cmp	r3, #1
2431:src/keys.c    **** 		goto fin;
 10363              		.loc 1 2431 19 view .LVU3247
 10364 15ea 4FF00000 		mov	r0, #0
2430:src/keys.c    **** 			State2.digval2 = 0;
 10365              		.loc 1 2430 11 view .LVU3248
 10366 15ee 7FF4FBAB 		bne	.L732
2431:src/keys.c    **** 		goto fin;
 10367              		.loc 1 2431 4 is_stmt 1 view .LVU3249
2431:src/keys.c    **** 		goto fin;
 10368              		.loc 1 2431 19 is_stmt 0 view .LVU3250
 10369 15f2 88F80A00 		strb	r0, [r8, #10]
 10370 15f6 FFF7F7BB 		b	.L732
 10371              	.LVL849:
 10372              	.L1213:
2431:src/keys.c    **** 		goto fin;
 10373              		.loc 1 2431 19 view .LVU3251
 10374 15fa 3268     		ldr	r2, [r6]
 10375              	.LBE878:
 10376              	.LBE1156:
 10377              	.LBB1157:
 10378              	.LBB735:
1984:src/keys.c    **** 
 10379              		.loc 1 1984 10 view .LVU3252
 10380 15fc 4FF0330B 		mov	fp, #51
 10381              	.LVL850:
1984:src/keys.c    **** 
 10382              		.loc 1 1984 10 view .LVU3253
 10383 1600 FEF757BD 		b	.L611
 10384              	.LVL851:
 10385              	.L1216:
1984:src/keys.c    **** 
 10386              		.loc 1 1984 10 view .LVU3254
 10387              	.LBE735:
 10388              	.LBE1157:
 10389              	.LBB1158:
 10390              	.LBB1004:
2726:src/keys.c    **** 	const int g_max = global_regs();
 10391              		.loc 1 2726 33 view .LVU3255
 10392 1604 FFF7FEFF 		bl	local_regs
 10393              	.LVL852:
 10394 1608 8246     		mov	r10, r0
 10395              	.LVL853:
2726:src/keys.c    **** 	const int g_max = global_regs();
 10396              		.loc 1 2726 33 view .LVU3256
 10397 160a A5E5     		b	.L769
 10398              	.LVL854:
 10399              	.L1219:
2742:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 10400              		.loc 1 2742 50 view .LVU3257
 10401 160c 0D2C     		cmp	r4, #13
 10402 160e 7FF4B3AD 		bne	.L777
2743:src/keys.c    **** 		set_smode(SDISP_SHOW);
 10403              		.loc 1 2743 3 is_stmt 1 view .LVU3258
 10404 1612 B9F1010F 		cmp	r9, #1
ARM GAS  /tmp/ccihcwFT.s 			page 294


 10405 1616 14BF     		ite	ne
 10406 1618 2C20     		movne	r0, #44
 10407              	.LVL855:
2743:src/keys.c    **** 		set_smode(SDISP_SHOW);
 10408              		.loc 1 2743 3 is_stmt 0 view .LVU3259
 10409 161a 2B20     		moveq	r0, #43
 10410 161c FFF7FEFF 		bl	set_window
 10411              	.LVL856:
2744:src/keys.c    **** 	}
 10412              		.loc 1 2744 3 is_stmt 1 view .LVU3260
 10413              	.LBB1000:
 10414              	.LBI1000:
 651:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 10415              		.loc 1 651 13 view .LVU3261
 10416              	.LBB1001:
 652:src/keys.c    **** }
 10417              		.loc 1 652 2 view .LVU3262
 652:src/keys.c    **** }
 10418              		.loc 1 652 15 is_stmt 0 view .LVU3263
 10419 1620 98F81130 		ldrb	r3, [r8, #17]	@ zero_extendqisi2
 10420 1624 3268     		ldr	r2, [r6]
 10421 1626 013B     		subs	r3, r3, #1
 10422 1628 18BF     		it	ne
 10423 162a 0123     		movne	r3, #1
 10424 162c 88F81130 		strb	r3, [r8, #17]
 10425              	.LVL857:
 652:src/keys.c    **** }
 10426              		.loc 1 652 15 view .LVU3264
 10427              	.LBE1001:
 10428              	.LBE1000:
2751:src/keys.c    **** 	case K_DOWN:
 10429              		.loc 1 2751 2 is_stmt 1 view .LVU3265
2751:src/keys.c    **** 	case K_DOWN:
 10430              		.loc 1 2751 2 is_stmt 0 view .LVU3266
 10431              	.LBE1004:
 10432              	.LBE1158:
 10433              	.LBE1245:
 10434              	.LBE1317:
3182:src/keys.c    ****     case STATE_SST:
 10435              		.loc 1 3182 5 is_stmt 1 view .LVU3267
 10436              	.LBB1318:
 10437              	.LBB1246:
 10438              	.LBB1159:
 10439              	.LBB1005:
2802:src/keys.c    **** 	}
 10440              		.loc 1 2802 10 is_stmt 0 view .LVU3268
 10441 1630 4FF0330B 		mov	fp, #51
 10442 1634 FEF73DBD 		b	.L611
 10443              	.LVL858:
 10444              	.L1179:
2802:src/keys.c    **** 	}
 10445              		.loc 1 2802 10 view .LVU3269
 10446              	.LBE1005:
 10447              	.LBE1159:
2957:src/keys.c    **** 		if (shift == SHIFT_H)
 10448              		.loc 1 2957 4 is_stmt 1 view .LVU3270
 10449              	.LBB1160:
ARM GAS  /tmp/ccihcwFT.s 			page 295


 10450              	.LBI932:
 848:src/keys.c    **** 
 10451              		.loc 1 848 12 view .LVU3271
 10452              	.LBB958:
 851:src/keys.c    **** 		// Row 1
 10453              		.loc 1 851 2 view .LVU3272
 902:src/keys.c    **** 		STATE_UNFINISHED,
 10454              		.loc 1 902 2 view .LVU3273
 909:src/keys.c    **** 	int lc = keycode_to_linear(c);
 10455              		.loc 1 909 2 view .LVU3274
 10456              	.LBB937:
 10457              	.LBI937:
 104:src/keys.c    **** 	return set_shift(SHIFT_N);
 10458              		.loc 1 104 13 view .LVU3275
 10459              	.LBE937:
 10460              	.LBE958:
 10461              	.LBE1160:
 10462              	.LBE1246:
 10463              	.LBE1318:
 105:src/keys.c    **** }
 10464              		.loc 1 105 2 view .LVU3276
 10465              	.LBB1319:
 10466              	.LBB1247:
 10467              	.LBB1161:
 10468              	.LBB959:
 10469              	.LBB946:
 10470              	.LBB938:
 10471              	.LBI938:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 10472              		.loc 1 94 20 view .LVU3277
 10473              	.LBB939:
  95:src/keys.c    **** 	State2.shifts = shift;
 10474              		.loc 1 95 2 view .LVU3278
 10475              	.LBB940:
 10476              	.LBI940:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 10477              		.loc 1 86 13 view .LVU3279
 10478              	.LBB941:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10479              		.loc 1 87 2 view .LVU3280
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10480              		.loc 1 87 18 is_stmt 0 view .LVU3281
 10481 1638 FFF7FEFF 		bl	shift_down
 10482              	.LVL859:
  88:src/keys.c    **** }
 10483              		.loc 1 88 2 is_stmt 1 view .LVU3282
  88:src/keys.c    **** }
 10484              		.loc 1 88 52 is_stmt 0 view .LVU3283
 10485 163c 0346     		mov	r3, r0
 10486 163e 08B9     		cbnz	r0, .L839
 10487 1640 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 10488              	.L839:
 10489              	.LVL860:
  88:src/keys.c    **** }
 10490              		.loc 1 88 52 view .LVU3284
 10491              	.LBE941:
 10492              	.LBE940:
ARM GAS  /tmp/ccihcwFT.s 			page 296


  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10493              		.loc 1 96 2 is_stmt 1 view .LVU3285
 10494              	.LBE939:
 10495              	.LBE938:
 10496              	.LBE946:
 10497              	.LBB947:
 10498              	.LBB948:
 148:src/keys.c    **** }
 10499              		.loc 1 148 23 is_stmt 0 view .LVU3286
 10500 1644 1F4A     		ldr	r2, .L1260+4
 10501              	.LBE948:
 10502              	.LBE947:
 911:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10503              		.loc 1 911 21 view .LVU3287
 10504 1646 DFF894C0 		ldr	ip, .L1260+28
 10505              	.LBB951:
 10506              	.LBB949:
 148:src/keys.c    **** }
 10507              		.loc 1 148 23 view .LVU3288
 10508 164a 105D     		ldrb	r0, [r2, r4]	@ zero_extendqisi2
 10509              	.LBE949:
 10510              	.LBE951:
 911:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10511              		.loc 1 911 21 view .LVU3289
 10512 164c 4200     		lsls	r2, r0, #1
 10513 164e 022B     		cmp	r3, #2
 10514 1650 08BF     		it	eq
 10515 1652 0132     		addeq	r2, r2, #1
 10516              	.LBB952:
 10517              	.LBB944:
 10518              	.LBB942:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10519              		.loc 1 96 16 view .LVU3290
 10520 1654 0021     		movs	r1, #0
 10521              	.LBE942:
 10522              	.LBE944:
 10523              	.LBE952:
 911:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10524              		.loc 1 911 21 view .LVU3291
 10525 1656 3CF812B0 		ldrh	fp, [ip, r2, lsl #1]
 10526              	.LBB953:
 10527              	.LBB945:
 10528              	.LBB943:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10529              		.loc 1 96 16 view .LVU3292
 10530 165a 88F81010 		strb	r1, [r8, #16]
  98:src/keys.c    **** }
 10531              		.loc 1 98 2 is_stmt 1 view .LVU3293
 10532              	.LVL861:
  98:src/keys.c    **** }
 10533              		.loc 1 98 2 is_stmt 0 view .LVU3294
 10534              	.LBE943:
 10535              	.LBE945:
 10536              	.LBE953:
 910:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 10537              		.loc 1 910 2 is_stmt 1 view .LVU3295
 10538              	.LBB954:
ARM GAS  /tmp/ccihcwFT.s 			page 297


 10539              	.LBI947:
 136:src/keys.c    **** {
 10540              		.loc 1 136 12 view .LVU3296
 10541              	.LBB950:
 138:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10542              		.loc 1 138 2 view .LVU3297
 148:src/keys.c    **** }
 10543              		.loc 1 148 2 view .LVU3298
 148:src/keys.c    **** }
 10544              		.loc 1 148 2 is_stmt 0 view .LVU3299
 10545              	.LBE950:
 10546              	.LBE954:
 911:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10547              		.loc 1 911 2 is_stmt 1 view .LVU3300
 912:src/keys.c    **** 	if (no_int)
 10548              		.loc 1 912 2 view .LVU3301
 10549 165e 0BF4704A 		and	r10, fp, #61440
 10550              	.LVL862:
 913:src/keys.c    **** 		op &= ~NO_INT;
 10551              		.loc 1 913 2 view .LVU3302
 913:src/keys.c    **** 		op &= ~NO_INT;
 10552              		.loc 1 913 5 is_stmt 0 view .LVU3303
 10553 1662 BAF5704F 		cmp	r10, #61440
 10554 1666 00F08281 		beq	.L1231
 916:src/keys.c    **** 	case K00:
 10555              		.loc 1 916 2 is_stmt 1 view .LVU3304
 10556 166a 282C     		cmp	r4, #40
 10557 166c 22D8     		bhi	.L862
 10558 166e DFE804F0 		tbb	[pc, r4]
 10559              	.L930:
 10560 1672 5D       		.byte	(.L851-.L930)/2
 10561 1673 9E       		.byte	(.L849-.L930)/2
 10562 1674 21       		.byte	(.L862-.L930)/2
 10563 1675 9E       		.byte	(.L849-.L930)/2
 10564 1676 21       		.byte	(.L862-.L930)/2
 10565 1677 21       		.byte	(.L862-.L930)/2
 10566 1678 21       		.byte	(.L862-.L930)/2
 10567 1679 21       		.byte	(.L862-.L930)/2
 10568 167a 21       		.byte	(.L862-.L930)/2
 10569 167b 21       		.byte	(.L862-.L930)/2
 10570 167c 21       		.byte	(.L862-.L930)/2
 10571 167d 21       		.byte	(.L862-.L930)/2
 10572 167e 89       		.byte	(.L848-.L930)/2
 10573 167f 21       		.byte	(.L862-.L930)/2
 10574 1680 21       		.byte	(.L862-.L930)/2
 10575 1681 21       		.byte	(.L862-.L930)/2
 10576 1682 21       		.byte	(.L862-.L930)/2
 10577 1683 21       		.byte	(.L862-.L930)/2
 10578 1684 6F       		.byte	(.L847-.L930)/2
 10579 1685 15       		.byte	(.L846-.L930)/2
 10580 1686 21       		.byte	(.L862-.L930)/2
 10581 1687 21       		.byte	(.L862-.L930)/2
 10582 1688 21       		.byte	(.L862-.L930)/2
 10583 1689 21       		.byte	(.L862-.L930)/2
 10584 168a 21       		.byte	(.L862-.L930)/2
 10585 168b 21       		.byte	(.L862-.L930)/2
 10586 168c 21       		.byte	(.L862-.L930)/2
ARM GAS  /tmp/ccihcwFT.s 			page 298


 10587 168d 21       		.byte	(.L862-.L930)/2
 10588 168e 21       		.byte	(.L862-.L930)/2
 10589 168f 21       		.byte	(.L862-.L930)/2
 10590 1690 42       		.byte	(.L845-.L930)/2
 10591 1691 37       		.byte	(.L844-.L930)/2
 10592 1692 49       		.byte	(.L842-.L930)/2
 10593 1693 49       		.byte	(.L842-.L930)/2
 10594 1694 21       		.byte	(.L862-.L930)/2
 10595 1695 21       		.byte	(.L862-.L930)/2
 10596 1696 21       		.byte	(.L862-.L930)/2
 10597 1697 21       		.byte	(.L862-.L930)/2
 10598 1698 21       		.byte	(.L862-.L930)/2
 10599 1699 49       		.byte	(.L842-.L930)/2
 10600 169a 49       		.byte	(.L842-.L930)/2
 10601 169b 00       		.p2align 1
 10602              	.L846:
 961:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10603              		.loc 1 961 4 view .LVU3305
 961:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10604              		.loc 1 961 7 is_stmt 0 view .LVU3306
 10605 169c 022B     		cmp	r3, #2
 10606 169e 00F00B82 		beq	.L1232
 10607              	.LVL863:
 10608              	.L853:
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10609              		.loc 1 1000 2 is_stmt 1 view .LVU3307
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10610              		.loc 1 1000 5 is_stmt 0 view .LVU3308
 10611 16a2 BAF5704F 		cmp	r10, #61440
 10612 16a6 05D1     		bne	.L862
 10613              	.L841:
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10614              		.loc 1 1000 13 view .LVU3309
 10615 16a8 0A4B     		ldr	r3, .L1260+20
 10616 16aa 1B68     		ldr	r3, [r3]
 10617 16ac 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10618 16b0 D907     		lsls	r1, r3, #31
 10619 16b2 36D4     		bmi	.L945
 10620              	.LVL864:
 10621              	.L862:
1003:src/keys.c    **** #undef NO_INT
 10622              		.loc 1 1003 2 is_stmt 1 view .LVU3310
 10623              	.LBB955:
 10624              	.LBI934:
 624:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10625              		.loc 1 624 12 view .LVU3311
 10626              	.LBB936:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 10627              		.loc 1 625 2 view .LVU3312
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 10628              		.loc 1 625 6 is_stmt 0 view .LVU3313
 10629 16b4 4FEA2B23 		asr	r3, fp, #8
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 10630              		.loc 1 625 5 view .LVU3314
 10631 16b8 012B     		cmp	r3, #1
 10632 16ba 7EF4C1AE 		bne	.L641
 625:src/keys.c    **** 		const int nilop = argKIND(op);
ARM GAS  /tmp/ccihcwFT.s 			page 299


 10633              		.loc 1 625 5 view .LVU3315
 10634 16be 76E4     		b	.L939
 10635              	.L1261:
 10636              		.align	2
 10637              	.L1260:
 10638 16c0 00000000 		.word	.LANCHOR1
 10639 16c4 00000000 		.word	.LANCHOR18
 10640 16c8 00000000 		.word	.LANCHOR17
 10641 16cc 00000000 		.word	.LANCHOR11
 10642 16d0 00000000 		.word	.LANCHOR21
 10643 16d4 00000000 		.word	main_ram
 10644 16d8 00000000 		.word	.LANCHOR9
 10645 16dc 00000000 		.word	.LANCHOR19
 10646              	.LVL865:
 10647              	.L844:
 625:src/keys.c    **** 		const int nilop = argKIND(op);
 10648              		.loc 1 625 5 view .LVU3316
 10649              	.LBE936:
 10650              	.LBE955:
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 10651              		.loc 1 972 3 is_stmt 1 view .LVU3317
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 10652              		.loc 1 972 7 is_stmt 0 view .LVU3318
 10653 16e0 FFF7FEFF 		bl	is_bad_cmdline
 10654              	.LVL866:
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 10655              		.loc 1 972 6 view .LVU3319
 10656 16e4 0446     		mov	r4, r0
 10657              	.LVL867:
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 10658              		.loc 1 972 6 view .LVU3320
 10659 16e6 0028     		cmp	r0, #0
 10660 16e8 00F03483 		beq	.L858
 10661 16ec 3268     		ldr	r2, [r6]
 973:src/keys.c    **** 		process_cmdline_set_lift();
 10662              		.loc 1 973 11 view .LVU3321
 10663 16ee 4FF0330B 		mov	fp, #51
 10664              	.LVL868:
 973:src/keys.c    **** 		process_cmdline_set_lift();
 10665              		.loc 1 973 11 view .LVU3322
 10666 16f2 FEF7DEBC 		b	.L611
 10667              	.LVL869:
 10668              	.L845:
 980:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10669              		.loc 1 980 3 is_stmt 1 view .LVU3323
 10670 16f6 0093     		str	r3, [sp]
 980:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10671              		.loc 1 980 18 is_stmt 0 view .LVU3324
 10672 16f8 FFF7FEFF 		bl	shift_down
 10673              	.LVL870:
 980:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10674              		.loc 1 980 6 view .LVU3325
 10675 16fc 009B     		ldr	r3, [sp]
 10676 16fe 0028     		cmp	r0, #0
 10677 1700 40F0CC81 		bne	.L1233
 10678              	.L842:
 989:src/keys.c    **** 			if (! (no_int && UState.intm)) {
ARM GAS  /tmp/ccihcwFT.s 			page 300


 10679              		.loc 1 989 3 is_stmt 1 view .LVU3326
 989:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 10680              		.loc 1 989 6 is_stmt 0 view .LVU3327
 10681 1704 BBF59C7F 		cmp	fp, #312
 10682 1708 40F02E83 		bne	.L1234
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10683              		.loc 1 1000 2 is_stmt 1 view .LVU3328
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10684              		.loc 1 1000 5 is_stmt 0 view .LVU3329
 10685 170c BAF5704F 		cmp	r10, #61440
 10686 1710 7FF44DAC 		bne	.L939
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10687              		.loc 1 1000 13 view .LVU3330
 10688 1714 DD4B     		ldr	r3, .L1262
 10689 1716 1B68     		ldr	r3, [r3]
 10690 1718 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10691 171c DB07     		lsls	r3, r3, #31
 10692 171e 7FF546AC 		bpl	.L939
 10693              	.L945:
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10694              		.loc 1 1000 13 view .LVU3331
 10695 1722 3268     		ldr	r2, [r6]
1001:src/keys.c    **** 
 10696              		.loc 1 1001 10 view .LVU3332
 10697 1724 4FF0330B 		mov	fp, #51
 10698              	.LVL871:
1001:src/keys.c    **** 
 10699              		.loc 1 1001 10 view .LVU3333
 10700 1728 FEF7C3BC 		b	.L611
 10701              	.LVL872:
 10702              	.L851:
 918:src/keys.c    **** 	    State2.hyp = 1;
 10703              		.loc 1 918 4 is_stmt 1 view .LVU3334
 918:src/keys.c    **** 	    State2.hyp = 1;
 10704              		.loc 1 918 8 is_stmt 0 view .LVU3335
 10705 172c D74A     		ldr	r2, .L1262
 10706 172e 1268     		ldr	r2, [r2]
 10707 1730 92F8E827 		ldrb	r2, [r2, #2024]	@ zero_extendqisi2
 918:src/keys.c    **** 	    State2.hyp = 1;
 10708              		.loc 1 918 7 view .LVU3336
 10709 1734 D407     		lsls	r4, r2, #31
 10710 1736 40F19781 		bpl	.L1235
 10711              	.L1146:
 937:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10712              		.loc 1 937 20 view .LVU3337
 10713 173a 012B     		cmp	r3, #1
 10714 173c 00F08C81 		beq	.L1236
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10715              		.loc 1 1000 2 is_stmt 1 view .LVU3338
1000:src/keys.c    **** 		return STATE_UNFINISHED;
 10716              		.loc 1 1000 5 is_stmt 0 view .LVU3339
 10717 1740 BAF5704F 		cmp	r10, #61440
 10718 1744 B6D1     		bne	.L862
 10719 1746 3268     		ldr	r2, [r6]
1001:src/keys.c    **** 
 10720              		.loc 1 1001 10 view .LVU3340
 10721 1748 4FF0330B 		mov	fp, #51
ARM GAS  /tmp/ccihcwFT.s 			page 301


 10722              	.LVL873:
1001:src/keys.c    **** 
 10723              		.loc 1 1001 10 view .LVU3341
 10724 174c FEF7B1BC 		b	.L611
 10725              	.LVL874:
 10726              	.L847:
 966:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10727              		.loc 1 966 4 is_stmt 1 view .LVU3342
 966:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10728              		.loc 1 966 7 is_stmt 0 view .LVU3343
 10729 1750 022B     		cmp	r3, #2
 10730 1752 A6D1     		bne	.L853
 966:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10731              		.loc 1 966 27 view .LVU3344
 10732 1754 CD4B     		ldr	r3, .L1262
 10733              	.LVL875:
 966:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10734              		.loc 1 966 27 view .LVU3345
 10735 1756 1B68     		ldr	r3, [r3]
 10736 1758 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10737 175c DB07     		lsls	r3, r3, #31
 10738 175e A0D5     		bpl	.L853
 966:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10739              		.loc 1 966 45 view .LVU3346
 10740 1760 0E20     		movs	r0, #14
 10741              	.LVL876:
 966:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10742              		.loc 1 966 45 view .LVU3347
 10743 1762 FFF7FEFF 		bl	intltr
 10744              	.LVL877:
 966:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10745              		.loc 1 966 42 view .LVU3348
 10746 1766 0028     		cmp	r0, #0
 10747 1768 9BD0     		beq	.L853
 10748              	.LVL878:
 966:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10749              		.loc 1 966 42 view .LVU3349
 10750              	.LBE959:
 10751              	.LBE1161:
 10752              	.LBE1247:
 10753              	.LBE1319:
3218:src/keys.c    **** 	NonProgrammable = 0;
 10754              		.loc 1 3218 7 is_stmt 1 view .LVU3350
3218:src/keys.c    **** 	NonProgrammable = 0;
 10755              		.loc 1 3218 11 is_stmt 0 view .LVU3351
 10756 176a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3218:src/keys.c    **** 	NonProgrammable = 0;
 10757              		.loc 1 3218 10 view .LVU3352
 10758 176e 5A06     		lsls	r2, r3, #25
 10759 1770 40F1BB81 		bpl	.L977
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10760              		.loc 1 3219 2 is_stmt 1 view .LVU3353
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10761              		.loc 1 3219 18 is_stmt 0 view .LVU3354
 10762 1774 C64B     		ldr	r3, .L1262+4
 10763 1776 0022     		movs	r2, #0
 10764              	.LBB1320:
ARM GAS  /tmp/ccihcwFT.s 			page 302


 10765              	.LBB1248:
 10766              	.LBB1162:
 10767              	.LBB960:
 967:src/keys.c    **** 	  }
 10768              		.loc 1 967 13 view .LVU3355
 10769 1778 4FF0130B 		mov	fp, #19
 10770              	.LBE960:
 10771              	.LBE1162:
 10772              	.LBE1248:
 10773              	.LBE1320:
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10774              		.loc 1 3219 18 view .LVU3356
 10775 177c 1A60     		str	r2, [r3]
3220:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10776              		.loc 1 3220 2 is_stmt 1 view .LVU3357
3220:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10777              		.loc 1 3220 32 is_stmt 0 view .LVU3358
 10778 177e 5846     		mov	r0, fp
 10779 1780 FFF722B8 		b	.L920
 10780              	.LVL879:
 10781              	.L848:
 10782              	.LBB1321:
 10783              	.LBB1249:
 10784              	.LBB1163:
 10785              	.LBB961:
 948:src/keys.c    **** 			if (is_bad_cmdline())
 10786              		.loc 1 948 3 is_stmt 1 view .LVU3359
 948:src/keys.c    **** 			if (is_bad_cmdline())
 10787              		.loc 1 948 6 is_stmt 0 view .LVU3360
 10788 1784 012B     		cmp	r3, #1
 10789 1786 8CD1     		bne	.L853
 949:src/keys.c    **** 				return STATE_UNFINISHED;
 10790              		.loc 1 949 4 is_stmt 1 view .LVU3361
 949:src/keys.c    **** 				return STATE_UNFINISHED;
 10791              		.loc 1 949 8 is_stmt 0 view .LVU3362
 10792 1788 FFF7FEFF 		bl	is_bad_cmdline
 10793              	.LVL880:
 949:src/keys.c    **** 				return STATE_UNFINISHED;
 10794              		.loc 1 949 7 view .LVU3363
 10795 178c 0028     		cmp	r0, #0
 10796 178e 40F0B681 		bne	.L1237
 951:src/keys.c    **** 			State2.alphas = 1;
 10797              		.loc 1 951 4 is_stmt 1 view .LVU3364
 10798 1792 FFF7FEFF 		bl	process_cmdline_set_lift
 10799              	.LVL881:
 952:src/keys.c    **** #ifdef DM42
 10800              		.loc 1 952 4 view .LVU3365
 952:src/keys.c    **** #ifdef DM42
 10801              		.loc 1 952 18 is_stmt 0 view .LVU3366
 10802 1796 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 954:src/keys.c    **** 			display_current_menu();
 10803              		.loc 1 954 4 view .LVU3367
 10804 179a 1020     		movs	r0, #16
 952:src/keys.c    **** #ifdef DM42
 10805              		.loc 1 952 18 view .LVU3368
 10806 179c 43F00803 		orr	r3, r3, #8
 10807 17a0 88F81630 		strb	r3, [r8, #22]
ARM GAS  /tmp/ccihcwFT.s 			page 303


 954:src/keys.c    **** 			display_current_menu();
 10808              		.loc 1 954 4 is_stmt 1 view .LVU3369
 10809 17a4 FFF7FEFF 		bl	set_menu
 10810              	.LVL882:
 955:src/keys.c    **** #endif
 10811              		.loc 1 955 4 view .LVU3370
 10812 17a8 FFF7FEFF 		bl	display_current_menu
 10813              	.LVL883:
 10814 17ac 79E7     		b	.L853
 10815              	.LVL884:
 10816              	.L849:
 937:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10817              		.loc 1 937 4 view .LVU3371
 937:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10818              		.loc 1 937 8 is_stmt 0 view .LVU3372
 10819 17ae B74A     		ldr	r2, .L1262
 10820 17b0 1268     		ldr	r2, [r2]
 10821 17b2 92F8E827 		ldrb	r2, [r2, #2024]	@ zero_extendqisi2
 937:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10822              		.loc 1 937 7 view .LVU3373
 10823 17b6 D107     		lsls	r1, r2, #31
 10824 17b8 7FF573AF 		bpl	.L853
 10825 17bc BDE7     		b	.L1146
 10826              	.LVL885:
 10827              	.L728:
 937:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10828              		.loc 1 937 7 view .LVU3374
 10829              	.LBE961:
 10830              	.LBE1163:
 10831              	.LBB1164:
 10832              	.LBB879:
2445:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 10833              		.loc 1 2445 3 is_stmt 1 view .LVU3375
2445:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 10834              		.loc 1 2445 6 is_stmt 0 view .LVU3376
 10835 17be 0129     		cmp	r1, #1
 10836 17c0 00F00D82 		beq	.L1238
2448:src/keys.c    **** 		return STATE_UNFINISHED;
 10837              		.loc 1 2448 4 is_stmt 1 view .LVU3377
 10838              	.LBB871:
 10839              	.LBI871:
2402:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 10840              		.loc 1 2402 13 view .LVU3378
 10841              	.LBB872:
2404:src/keys.c    **** 	if (! State2.alphas )
 10842              		.loc 1 2404 2 view .LVU3379
2404:src/keys.c    **** 	if (! State2.alphas )
 10843              		.loc 1 2404 15 is_stmt 0 view .LVU3380
 10844 17c4 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2405:src/keys.c    **** 		State2.alphashift = 0;
 10845              		.loc 1 2405 6 view .LVU3381
 10846 17c8 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2404:src/keys.c    **** 	if (! State2.alphas )
 10847              		.loc 1 2404 15 view .LVU3382
 10848 17cc 60F3C302 		bfi	r2, r0, #3, #1
 10849 17d0 88F81520 		strb	r2, [r8, #21]
2405:src/keys.c    **** 		State2.alphashift = 0;
ARM GAS  /tmp/ccihcwFT.s 			page 304


 10850              		.loc 1 2405 2 is_stmt 1 view .LVU3383
2405:src/keys.c    **** 		State2.alphashift = 0;
 10851              		.loc 1 2405 5 is_stmt 0 view .LVU3384
 10852 17d4 13F00802 		ands	r2, r3, #8
2406:src/keys.c    **** }
 10853              		.loc 1 2406 3 is_stmt 1 view .LVU3385
2406:src/keys.c    **** }
 10854              		.loc 1 2406 21 is_stmt 0 view .LVU3386
 10855 17d8 04BF     		itt	eq
 10856 17da 62F30413 		bfieq	r3, r2, #4, #1
 10857 17de 88F81630 		strbeq	r3, [r8, #22]
 10858 17e2 3268     		ldr	r2, [r6]
 10859              	.LBE872:
 10860              	.LBE871:
2449:src/keys.c    **** 
 10861              		.loc 1 2449 10 view .LVU3387
 10862 17e4 4FF0330B 		mov	fp, #51
 10863 17e8 FEF763BC 		b	.L611
 10864              	.L727:
2435:src/keys.c    **** 			if (State2.numdigit == 0)
 10865              		.loc 1 2435 3 is_stmt 1 view .LVU3388
2435:src/keys.c    **** 			if (State2.numdigit == 0)
 10866              		.loc 1 2435 6 is_stmt 0 view .LVU3389
 10867 17ec 0329     		cmp	r1, #3
 10868 17ee 3FF4DAAA 		beq	.L733
2436:src/keys.c    **** 				reset_multi();
 10869              		.loc 1 2436 4 is_stmt 1 view .LVU3390
2436:src/keys.c    **** 				reset_multi();
 10870              		.loc 1 2436 14 is_stmt 0 view .LVU3391
 10871 17f2 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
2436:src/keys.c    **** 				reset_multi();
 10872              		.loc 1 2436 7 view .LVU3392
 10873 17f6 002A     		cmp	r2, #0
 10874 17f8 40F09A82 		bne	.L734
2437:src/keys.c    **** 			else
 10875              		.loc 1 2437 5 is_stmt 1 view .LVU3393
 10876              	.LBB873:
 10877              	.LBI873:
2402:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 10878              		.loc 1 2402 13 view .LVU3394
 10879              	.LBB874:
2404:src/keys.c    **** 	if (! State2.alphas )
 10880              		.loc 1 2404 2 view .LVU3395
2405:src/keys.c    **** 		State2.alphashift = 0;
 10881              		.loc 1 2405 6 is_stmt 0 view .LVU3396
 10882 17fc 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2404:src/keys.c    **** 	if (! State2.alphas )
 10883              		.loc 1 2404 15 view .LVU3397
 10884 1800 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 10885              	.LVL886:
2404:src/keys.c    **** 	if (! State2.alphas )
 10886              		.loc 1 2404 15 view .LVU3398
 10887 1804 62F3C301 		bfi	r1, r2, #3, #1
2405:src/keys.c    **** 		State2.alphashift = 0;
 10888              		.loc 1 2405 5 view .LVU3399
 10889 1808 13F00802 		ands	r2, r3, #8
2406:src/keys.c    **** }
ARM GAS  /tmp/ccihcwFT.s 			page 305


 10890              		.loc 1 2406 21 view .LVU3400
 10891 180c 08BF     		it	eq
 10892 180e 62F30413 		bfieq	r3, r2, #4, #1
2404:src/keys.c    **** 	if (! State2.alphas )
 10893              		.loc 1 2404 15 view .LVU3401
 10894 1812 88F81510 		strb	r1, [r8, #21]
2405:src/keys.c    **** 		State2.alphashift = 0;
 10895              		.loc 1 2405 2 is_stmt 1 view .LVU3402
2406:src/keys.c    **** }
 10896              		.loc 1 2406 3 view .LVU3403
2406:src/keys.c    **** }
 10897              		.loc 1 2406 21 is_stmt 0 view .LVU3404
 10898 1816 08BF     		it	eq
 10899 1818 88F81630 		strbeq	r3, [r8, #22]
 10900 181c 3268     		ldr	r2, [r6]
 10901              	.LBE874:
 10902              	.LBE873:
2440:src/keys.c    **** 		}
 10903              		.loc 1 2440 11 view .LVU3405
 10904 181e 4FF0330B 		mov	fp, #51
 10905 1822 FEF746BC 		b	.L611
 10906              	.LVL887:
 10907              	.L1211:
2461:src/keys.c    **** 		State2.numdigit = 1;
 10908              		.loc 1 2461 3 is_stmt 1 view .LVU3406
2462:src/keys.c    **** 		return STATE_UNFINISHED;
 10909              		.loc 1 2462 19 is_stmt 0 view .LVU3407
 10910 1826 0123     		movs	r3, #1
 10911 1828 3268     		ldr	r2, [r6]
2461:src/keys.c    **** 		State2.numdigit = 1;
 10912              		.loc 1 2461 17 view .LVU3408
 10913 182a A8F80800 		strh	r0, [r8, #8]	@ movhi
2462:src/keys.c    **** 		return STATE_UNFINISHED;
 10914              		.loc 1 2462 3 is_stmt 1 view .LVU3409
2462:src/keys.c    **** 		return STATE_UNFINISHED;
 10915              		.loc 1 2462 19 is_stmt 0 view .LVU3410
 10916 182e 88F80B30 		strb	r3, [r8, #11]
2463:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 10917              		.loc 1 2463 3 is_stmt 1 view .LVU3411
2463:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 10918              		.loc 1 2463 10 is_stmt 0 view .LVU3412
 10919 1832 4FF0330B 		mov	fp, #51
 10920 1836 FEF73CBC 		b	.L611
 10921              	.LVL888:
 10922              	.L1218:
2463:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 10923              		.loc 1 2463 10 view .LVU3413
 10924              	.LBE879:
 10925              	.LBE1164:
 10926              	.LBB1165:
 10927              	.LBB1006:
 10928              	.LBB1002:
2736:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10929              		.loc 1 2736 3 is_stmt 1 view .LVU3414
2736:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10930              		.loc 1 2736 19 is_stmt 0 view .LVU3415
 10931 183a B8F80810 		ldrh	r1, [r8, #8]
ARM GAS  /tmp/ccihcwFT.s 			page 306


2736:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10932              		.loc 1 2736 27 view .LVU3416
 10933 183e 0A23     		movs	r3, #10
2736:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10934              		.loc 1 2736 32 view .LVU3417
 10935 1840 03FB01B2 		mla	r2, r3, r1, fp
2736:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10936              		.loc 1 2736 37 view .LVU3418
 10937 1844 6424     		movs	r4, #100
 10938 1846 B2FBF4F3 		udiv	r3, r2, r4
 10939 184a 04FB1323 		mls	r3, r4, r3, r2
 10940              	.LVL889:
2737:src/keys.c    **** 			dv = n;
 10941              		.loc 1 2737 3 is_stmt 1 view .LVU3419
2737:src/keys.c    **** 			dv = n;
 10942              		.loc 1 2737 6 is_stmt 0 view .LVU3420
 10943 184e 5345     		cmp	r3, r10
 10944 1850 09DA     		bge	.L775
2737:src/keys.c    **** 			dv = n;
 10945              		.loc 1 2737 21 view .LVU3421
 10946 1852 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2737:src/keys.c    **** 			dv = n;
 10947              		.loc 1 2737 17 view .LVU3422
 10948 1856 D407     		lsls	r4, r2, #31
 10949 1858 3FF5CBAC 		bmi	.L1141
2737:src/keys.c    **** 			dv = n;
 10950              		.loc 1 2737 36 view .LVU3423
 10951 185c 8842     		cmp	r0, r1
 10952 185e 02DD     		ble	.L775
2737:src/keys.c    **** 			dv = n;
 10953              		.loc 1 2737 63 view .LVU3424
 10954 1860 9842     		cmp	r0, r3
 10955 1862 3FF7C6AC 		bgt	.L1141
 10956              	.L775:
2738:src/keys.c    **** 		State2.digval = dv;
 10957              		.loc 1 2738 4 is_stmt 1 view .LVU3425
2738:src/keys.c    **** 		State2.digval = dv;
 10958              		.loc 1 2738 7 is_stmt 0 view .LVU3426
 10959 1866 5B46     		mov	r3, fp
 10960              	.LVL890:
2739:src/keys.c    **** 		goto reset_window;
 10961              		.loc 1 2739 3 is_stmt 1 view .LVU3427
 10962 1868 C3E4     		b	.L1141
 10963              	.LVL891:
 10964              	.L1220:
2739:src/keys.c    **** 		goto reset_window;
 10965              		.loc 1 2739 3 is_stmt 0 view .LVU3428
 10966              	.LBE1002:
2747:src/keys.c    **** 		goto reset_window;
 10967              		.loc 1 2747 3 is_stmt 1 view .LVU3429
2747:src/keys.c    **** 		goto reset_window;
 10968              		.loc 1 2747 17 is_stmt 0 view .LVU3430
 10969 186a A8F808B0 		strh	fp, [r8, #8]	@ movhi
2748:src/keys.c    **** 	}
 10970              		.loc 1 2748 3 is_stmt 1 view .LVU3431
 10971 186e C2E4     		b	.L773
 10972              	.LVL892:
ARM GAS  /tmp/ccihcwFT.s 			page 307


 10973              	.L1197:
2748:src/keys.c    **** 	}
 10974              		.loc 1 2748 3 is_stmt 0 view .LVU3432
 10975              	.LBE1006:
 10976              	.LBE1165:
 10977              	.LBB1166:
 10978              	.LBB756:
1375:src/keys.c    **** 		if (rawpc == 1)
 10979              		.loc 1 1375 3 is_stmt 1 view .LVU3433
1375:src/keys.c    **** 		if (rawpc == 1)
 10980              		.loc 1 1375 11 is_stmt 0 view .LVU3434
 10981 1870 DFF81892 		ldr	r9, .L1262
 10982 1874 D9F80030 		ldr	r3, [r9]
 10983              	.LVL893:
1375:src/keys.c    **** 		if (rawpc == 1)
 10984              		.loc 1 1375 9 view .LVU3435
 10985 1878 B3F8E007 		ldrh	r0, [r3, #2016]
 10986              	.LVL894:
1376:src/keys.c    **** 			rawpc = 0;
 10987              		.loc 1 1376 3 is_stmt 1 view .LVU3436
1377:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
 10988              		.loc 1 1377 10 is_stmt 0 view .LVU3437
 10989 187c 0128     		cmp	r0, #1
 10990              	.LVL895:
1378:src/keys.c    **** 		update_program_bounds(1);
 10991              		.loc 1 1378 3 is_stmt 1 view .LVU3438
 10992 187e 08BF     		it	eq
 10993 1880 0020     		moveq	r0, #0
 10994              	.LVL896:
1378:src/keys.c    **** 		update_program_bounds(1);
 10995              		.loc 1 1378 3 is_stmt 0 view .LVU3439
 10996 1882 0021     		movs	r1, #0
 10997 1884 FFF7FEFF 		bl	do_dec
 10998              	.LVL897:
1378:src/keys.c    **** 		update_program_bounds(1);
 10999              		.loc 1 1378 3 view .LVU3440
 11000 1888 FFF7FEFF 		bl	set_pc
 11001              	.LVL898:
1379:src/keys.c    **** 		rawpc = ProgBegin;
 11002              		.loc 1 1379 3 is_stmt 1 view .LVU3441
 11003 188c 0120     		movs	r0, #1
 11004 188e FFF7FEFF 		bl	update_program_bounds
 11005              	.LVL899:
1380:src/keys.c    **** 		goto fin;
 11006              		.loc 1 1380 3 view .LVU3442
1380:src/keys.c    **** 		goto fin;
 11007              		.loc 1 1380 11 is_stmt 0 view .LVU3443
 11008 1892 D9F80030 		ldr	r3, [r9]
1380:src/keys.c    **** 		goto fin;
 11009              		.loc 1 1380 9 view .LVU3444
 11010 1896 B3F8EC07 		ldrh	r0, [r3, #2028]
 11011              	.LVL900:
1381:src/keys.c    **** 	}
 11012              		.loc 1 1381 3 is_stmt 1 view .LVU3445
 11013 189a FFF73EBA 		b	.L653
 11014              	.LVL901:
 11015              	.L958:
ARM GAS  /tmp/ccihcwFT.s 			page 308


1381:src/keys.c    **** 	}
 11016              		.loc 1 1381 3 is_stmt 0 view .LVU3446
 11017              	.LBE756:
 11018              	.LBE1166:
 11019              	.LBB1167:
 11020              	.LBB669:
 11021              	.LBB663:
 304:src/keys.c    ****     }
 11022              		.loc 1 304 14 view .LVU3447
 11023 189e 4FF0160B 		mov	fp, #22
 11024 18a2 FFF7EFB9 		b	.L707
 11025              	.LVL902:
 11026              	.L1226:
 304:src/keys.c    ****     }
 11027              		.loc 1 304 14 view .LVU3448
 11028 18a6 3268     		ldr	r2, [r6]
 11029 18a8 FEF703BC 		b	.L611
 11030              	.LVL903:
 11031              	.L894:
 304:src/keys.c    ****     }
 11032              		.loc 1 304 14 view .LVU3449
 11033              	.LBE663:
 11034              	.LBE669:
 11035              	.LBE1167:
 11036              	.LBB1168:
 11037              	.LBB686:
 774:src/keys.c    **** 	case K03:
 11038              		.loc 1 774 3 is_stmt 1 view .LVU3450
 774:src/keys.c    **** 	case K03:
 11039              		.loc 1 774 10 is_stmt 0 view .LVU3451
 11040 18ac 5146     		mov	r1, r10
 11041 18ae 0120     		movs	r0, #1
 11042 18b0 FFF7FEFF 		bl	check_f_key
 11043              	.LVL904:
 11044 18b4 8346     		mov	fp, r0
 11045 18b6 FEF7C3BD 		b	.L641
 11046              	.L893:
 772:src/keys.c    **** 	case K01:
 11047              		.loc 1 772 3 is_stmt 1 view .LVU3452
 772:src/keys.c    **** 	case K01:
 11048              		.loc 1 772 10 is_stmt 0 view .LVU3453
 11049 18ba 5146     		mov	r1, r10
 11050 18bc 0020     		movs	r0, #0
 11051 18be FFF7FEFF 		bl	check_f_key
 11052              	.LVL905:
 11053 18c2 8346     		mov	fp, r0
 11054 18c4 FEF7BCBD 		b	.L641
 11055              	.LVL906:
 11056              	.L1214:
 772:src/keys.c    **** 	case K01:
 11057              		.loc 1 772 10 view .LVU3454
 11058              	.LBE686:
 11059              	.LBE1168:
 11060              	.LBB1169:
 11061              	.LBB928:
2597:src/keys.c    **** 	const int direct = State2.runmode;
 11062              		.loc 1 2597 37 view .LVU3455
ARM GAS  /tmp/ccihcwFT.s 			page 309


 11063 18c8 5046     		mov	r0, r10
 11064 18ca FFF7FEFF 		bl	getprog
 11065              	.LVL907:
2597:src/keys.c    **** 	const int direct = State2.runmode;
 11066              		.loc 1 2597 63 view .LVU3456
 11067 18ce 20F47062 		bic	r2, r0, #3840
 11068 18d2 FFF727BB 		b	.L742
 11069              	.LVL908:
 11070              	.L713:
2597:src/keys.c    **** 	const int direct = State2.runmode;
 11071              		.loc 1 2597 63 view .LVU3457
 11072 18d6 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 11073              	.LBE928:
 11074              	.LBE1169:
 11075              	.LBB1170:
 11076              	.LBB670:
 11077              	.LBB664:
 325:src/keys.c    **** #ifndef WINGUI
 11078              		.loc 1 325 8 view .LVU3458
 11079 18da 6E4B     		ldr	r3, .L1262+8
 331:src/keys.c    ****   }
 11080              		.loc 1 331 9 view .LVU3459
 11081 18dc 0C22     		movs	r2, #12
 327:src/keys.c    **** #else
 11082              		.loc 1 327 73 view .LVU3460
 11083 18de 4FF0020C 		mov	ip, #2
 11084 18e2 FEF7B8BC 		b	.L712
 11085              	.LVL909:
 11086              	.L1210:
 327:src/keys.c    **** #else
 11087              		.loc 1 327 73 view .LVU3461
 11088 18e6 3268     		ldr	r2, [r6]
 11089              	.LBE664:
 11090              	.LBE670:
 11091              	.LBE1170:
 11092              	.LBB1171:
 11093              	.LBB880:
2458:src/keys.c    **** add_char:
 11094              		.loc 1 2458 10 view .LVU3462
 11095 18e8 4FF0330B 		mov	fp, #51
 11096 18ec FEF7E1BB 		b	.L611
 11097              	.LVL910:
 11098              	.L660:
2458:src/keys.c    **** add_char:
 11099              		.loc 1 2458 10 view .LVU3463
 11100              	.LBE880:
 11101              	.LBE1171:
 11102              	.LBB1172:
 11103              	.LBB757:
1385:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 11104              		.loc 1 1385 3 is_stmt 1 view .LVU3464
1386:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 11105              		.loc 1 1386 18 is_stmt 0 view .LVU3465
 11106 18f0 664C     		ldr	r4, .L1262
1385:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 11107              		.loc 1 1385 3 view .LVU3466
 11108 18f2 0120     		movs	r0, #1
ARM GAS  /tmp/ccihcwFT.s 			page 310


 11109 18f4 FFF7FEFF 		bl	update_program_bounds
 11110              	.LVL911:
1386:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 11111              		.loc 1 1386 3 is_stmt 1 view .LVU3467
1386:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 11112              		.loc 1 1386 18 is_stmt 0 view .LVU3468
 11113 18f8 2368     		ldr	r3, [r4]
1386:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 11114              		.loc 1 1386 11 view .LVU3469
 11115 18fa 0021     		movs	r1, #0
 11116 18fc B3F8EE07 		ldrh	r0, [r3, #2030]
 11117 1900 FFF7FEFF 		bl	do_inc
 11118              	.LVL912:
1387:src/keys.c    **** 			rawpc = 1;
 11119              		.loc 1 1387 3 is_stmt 1 view .LVU3470
1387:src/keys.c    **** 			rawpc = 1;
 11120              		.loc 1 1387 6 is_stmt 0 view .LVU3471
 11121 1904 0028     		cmp	r0, #0
 11122 1906 7FF408AA 		bne	.L653
1387:src/keys.c    **** 			rawpc = 1;
 11123              		.loc 1 1387 21 view .LVU3472
 11124 190a 2368     		ldr	r3, [r4]
1387:src/keys.c    **** 			rawpc = 1;
 11125              		.loc 1 1387 18 view .LVU3473
 11126 190c 5888     		ldrh	r0, [r3, #2]
 11127              	.LVL913:
1387:src/keys.c    **** 			rawpc = 1;
 11128              		.loc 1 1387 18 view .LVU3474
 11129 190e 0038     		subs	r0, r0, #0
 11130 1910 18BF     		it	ne
 11131 1912 0120     		movne	r0, #1
 11132 1914 FFF701BA 		b	.L653
 11133              	.LVL914:
 11134              	.L864:
1387:src/keys.c    **** 			rawpc = 1;
 11135              		.loc 1 1387 18 view .LVU3475
 11136              	.LBE757:
 11137              	.LBE1172:
 11138              	.LBB1173:
 11139              	.LBB1151:
1071:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 11140              		.loc 1 1071 3 is_stmt 1 view .LVU3476
1071:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 11141              		.loc 1 1071 7 is_stmt 0 view .LVU3477
 11142 1918 5C4B     		ldr	r3, .L1262
 11143 191a 1B68     		ldr	r3, [r3]
 11144 191c 93F8E827 		ldrb	r2, [r3, #2024]	@ zero_extendqisi2
1071:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 11145              		.loc 1 1071 6 view .LVU3478
 11146 1920 D207     		lsls	r2, r2, #31
 11147 1922 40F19180 		bpl	.L867
1072:src/keys.c    **** 		else
 11148              		.loc 1 1072 4 is_stmt 1 view .LVU3479
1072:src/keys.c    **** 		else
 11149              		.loc 1 1072 57 is_stmt 0 view .LVU3480
 11150 1926 93F9E737 		ldrsb	r3, [r3, #2023]
 11151 192a 002B     		cmp	r3, #0
ARM GAS  /tmp/ccihcwFT.s 			page 311


 11152 192c 40F2531B 		movw	fp, #339
 11153 1930 A8BF     		it	ge
 11154 1932 4FF4AA7B 		movge	fp, #340
 11155 1936 38E6     		b	.L869
 11156              	.LVL915:
 11157              	.L1229:
1101:src/keys.c    **** #undef _RARG
 11158              		.loc 1 1101 2 is_stmt 1 view .LVU3481
1101:src/keys.c    **** #undef _RARG
 11159              		.loc 1 1101 9 is_stmt 0 view .LVU3482
 11160 1938 544B     		ldr	r3, .L1262
 11161 193a 1B68     		ldr	r3, [r3]
 11162 193c 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1101:src/keys.c    **** #undef _RARG
 11163              		.loc 1 1101 57 view .LVU3483
 11164 1940 DC07     		lsls	r4, r3, #31
 11165 1942 7FF532AE 		bpl	.L869
 11166              	.LVL916:
1101:src/keys.c    **** #undef _RARG
 11167              		.loc 1 1101 21 view .LVU3484
 11168 1946 1AF4804F 		tst	r10, #16384
 11169 194a 3FF42EAE 		beq	.L869
 11170 194e 3268     		ldr	r2, [r6]
1101:src/keys.c    **** #undef _RARG
 11171              		.loc 1 1101 57 view .LVU3485
 11172 1950 4FF0330B 		mov	fp, #51
 11173 1954 FEF7ADBB 		b	.L611
 11174              	.LVL917:
 11175              	.L1222:
1101:src/keys.c    **** #undef _RARG
 11176              		.loc 1 1101 57 view .LVU3486
 11177 1958 3268     		ldr	r2, [r6]
 11178              	.LBE1151:
 11179              	.LBE1173:
 11180              	.LBE1249:
 11181              	.LBE1321:
2997:src/keys.c    ****   if (was_paused && Pause == 0)
 11182              		.loc 1 2997 7 view .LVU3487
 11183 195a 0D46     		mov	r5, r1
 11184              	.LBB1322:
 11185              	.LBB1250:
 11186              	.LBB1174:
 11187              	.LBB1083:
1519:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
 11188              		.loc 1 1519 10 view .LVU3488
 11189 195c 4FF0330B 		mov	fp, #51
 11190 1960 FEF7A7BB 		b	.L611
 11191              	.LVL918:
 11192              	.L791:
1519:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
 11193              		.loc 1 1519 10 view .LVU3489
 11194 1964 3268     		ldr	r2, [r6]
 11195              	.LBE1083:
 11196              	.LBE1174:
 11197              	.LBB1175:
 11198              	.LBB1007:
2781:src/keys.c    **** 		break;		// Exit doing nothing
ARM GAS  /tmp/ccihcwFT.s 			page 312


 11199              		.loc 1 2781 11 view .LVU3490
 11200 1966 4FF0330B 		mov	fp, #51
 11201              	.LVL919:
2781:src/keys.c    **** 		break;		// Exit doing nothing
 11202              		.loc 1 2781 11 view .LVU3491
 11203 196a FEF7A2BB 		b	.L611
 11204              	.LVL920:
 11205              	.L1231:
2781:src/keys.c    **** 		break;		// Exit doing nothing
 11206              		.loc 1 2781 11 view .LVU3492
 11207              	.LBE1007:
 11208              	.LBE1175:
 11209              	.LBB1176:
 11210              	.LBB962:
 914:src/keys.c    **** 
 11211              		.loc 1 914 3 is_stmt 1 view .LVU3493
 914:src/keys.c    **** 
 11212              		.loc 1 914 6 is_stmt 0 view .LVU3494
 11213 196e 2BF4704B 		bic	fp, fp, #61440
 11214              	.LVL921:
 916:src/keys.c    **** 	case K00:
 11215              		.loc 1 916 2 is_stmt 1 view .LVU3495
 11216 1972 282C     		cmp	r4, #40
 11217 1974 3FF698AE 		bhi	.L841
 11218 1978 01A2     		adr	r2, .L843
 11219 197a 52F824F0 		ldr	pc, [r2, r4, lsl #2]
 11220 197e 00BF     		.p2align 2
 11221              	.L843:
 11222 1980 2D170000 		.word	.L851+1
 11223 1984 AF170000 		.word	.L849+1
 11224 1988 A9160000 		.word	.L841+1
 11225 198c AF170000 		.word	.L849+1
 11226 1990 A9160000 		.word	.L841+1
 11227 1994 A9160000 		.word	.L841+1
 11228 1998 A9160000 		.word	.L841+1
 11229 199c A9160000 		.word	.L841+1
 11230 19a0 A9160000 		.word	.L841+1
 11231 19a4 A9160000 		.word	.L841+1
 11232 19a8 A9160000 		.word	.L841+1
 11233 19ac A9160000 		.word	.L841+1
 11234 19b0 85170000 		.word	.L848+1
 11235 19b4 A9160000 		.word	.L841+1
 11236 19b8 A9160000 		.word	.L841+1
 11237 19bc A9160000 		.word	.L841+1
 11238 19c0 A9160000 		.word	.L841+1
 11239 19c4 A9160000 		.word	.L841+1
 11240 19c8 51170000 		.word	.L847+1
 11241 19cc 9D160000 		.word	.L846+1
 11242 19d0 A9160000 		.word	.L841+1
 11243 19d4 A9160000 		.word	.L841+1
 11244 19d8 A9160000 		.word	.L841+1
 11245 19dc A9160000 		.word	.L841+1
 11246 19e0 A9160000 		.word	.L841+1
 11247 19e4 A9160000 		.word	.L841+1
 11248 19e8 A9160000 		.word	.L841+1
 11249 19ec A9160000 		.word	.L841+1
 11250 19f0 A9160000 		.word	.L841+1
ARM GAS  /tmp/ccihcwFT.s 			page 313


 11251 19f4 A9160000 		.word	.L841+1
 11252 19f8 F7160000 		.word	.L845+1
 11253 19fc E1160000 		.word	.L844+1
 11254 1a00 05170000 		.word	.L842+1
 11255 1a04 05170000 		.word	.L842+1
 11256 1a08 A9160000 		.word	.L841+1
 11257 1a0c A9160000 		.word	.L841+1
 11258 1a10 A9160000 		.word	.L841+1
 11259 1a14 A9160000 		.word	.L841+1
 11260 1a18 A9160000 		.word	.L841+1
 11261 1a1c 05170000 		.word	.L842+1
 11262 1a20 05170000 		.word	.L842+1
 11263              	.LVL922:
 11264              		.p2align 1
 11265              	.L1215:
 916:src/keys.c    **** 	case K00:
 11266              		.loc 1 916 2 is_stmt 0 view .LVU3496
 11267              	.LBE962:
 11268              	.LBE1176:
 11269              	.LBB1177:
 11270              	.LBB929:
2604:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 11271              		.loc 1 2604 3 is_stmt 1 view .LVU3497
2604:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 11272              		.loc 1 2604 8 is_stmt 0 view .LVU3498
 11273 1a24 4FEA8B34 		lsl	r4, fp, #14
2604:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 11274              		.loc 1 2604 6 view .LVU3499
 11275 1a28 44F00104 		orr	r4, r4, #1
 11276              	.LVL923:
2605:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 11277              		.loc 1 2605 3 is_stmt 1 view .LVU3500
2605:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 11278              		.loc 1 2605 9 is_stmt 0 view .LVU3501
 11279 1a2c 2046     		mov	r0, r4
 11280 1a2e FFF7FEFF 		bl	is_label_or_end_at
 11281              	.LVL924:
2605:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 11282              		.loc 1 2605 6 view .LVU3502
 11283 1a32 0246     		mov	r2, r0
 11284 1a34 0028     		cmp	r0, #0
 11285 1a36 00F09180 		beq	.L1239
 11286              	.L745:
2607:src/keys.c    **** 		return STATE_UNFINISHED;
 11287              		.loc 1 2607 3 is_stmt 1 view .LVU3503
 11288 1a3a 3268     		ldr	r2, [r6]
2607:src/keys.c    **** 		return STATE_UNFINISHED;
 11289              		.loc 1 2607 17 is_stmt 0 view .LVU3504
 11290 1a3c A8F80840 		strh	r4, [r8, #8]	@ movhi
2608:src/keys.c    **** 	}
 11291              		.loc 1 2608 3 is_stmt 1 view .LVU3505
2608:src/keys.c    **** 	}
 11292              		.loc 1 2608 10 is_stmt 0 view .LVU3506
 11293 1a40 4FF0330B 		mov	fp, #51
 11294              	.LVL925:
2608:src/keys.c    **** 	}
 11295              		.loc 1 2608 10 view .LVU3507
ARM GAS  /tmp/ccihcwFT.s 			page 314


 11296 1a44 FEF735BB 		b	.L611
 11297              	.LVL926:
 11298              	.L867:
2608:src/keys.c    **** 	}
 11299              		.loc 1 2608 10 view .LVU3508
 11300              	.LBE929:
 11301              	.LBE1177:
 11302              	.LBB1178:
 11303              	.LBB1152:
1077:src/keys.c    **** #endif
 11304              		.loc 1 1077 4 is_stmt 1 view .LVU3509
1077:src/keys.c    **** #endif
 11305              		.loc 1 1077 8 is_stmt 0 view .LVU3510
 11306 1a48 93F8E737 		ldrb	r3, [r3, #2023]	@ zero_extendqisi2
1077:src/keys.c    **** #endif
 11307              		.loc 1 1077 7 view .LVU3511
 11308 1a4c 9B06     		lsls	r3, r3, #26
 11309 1a4e 7FF59BAD 		bpl	.L866
1077:src/keys.c    **** #endif
 11310              		.loc 1 1077 29 view .LVU3512
 11311 1a52 40F24F1B 		movw	fp, #335
 11312 1a56 A8E5     		b	.L869
 11313              	.LVL927:
 11314              	.L1236:
1077:src/keys.c    **** #endif
 11315              		.loc 1 1077 29 view .LVU3513
 11316              	.LBE1152:
 11317              	.LBE1178:
 11318              	.LBB1179:
 11319              	.LBB963:
 938:src/keys.c    **** 		}
 11320              		.loc 1 938 4 is_stmt 1 view .LVU3514
 938:src/keys.c    **** 		}
 11321              		.loc 1 938 34 is_stmt 0 view .LVU3515
 11322 1a58 0F4B     		ldr	r3, .L1262+12
 11323              	.LVL928:
 938:src/keys.c    **** 		}
 11324              		.loc 1 938 11 view .LVU3516
 11325 1a5a 33F81010 		ldrh	r1, [r3, r0, lsl #1]
 11326 1a5e FFF7FEFF 		bl	check_f_key
 11327              	.LVL929:
 938:src/keys.c    **** 		}
 11328              		.loc 1 938 11 view .LVU3517
 11329 1a62 8346     		mov	fp, r0
 11330              	.LVL930:
 938:src/keys.c    **** 		}
 11331              		.loc 1 938 11 view .LVU3518
 11332 1a64 FEF7ECBC 		b	.L641
 11333              	.LVL931:
 11334              	.L1235:
 919:src/keys.c    **** 	    State2.dot = op;
 11335              		.loc 1 919 6 is_stmt 1 view .LVU3519
 920:src/keys.c    **** 	    // State2.cmplx = 0;
 11336              		.loc 1 920 6 view .LVU3520
 919:src/keys.c    **** 	    State2.dot = op;
 11337              		.loc 1 919 17 is_stmt 0 view .LVU3521
 11338 1a68 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
ARM GAS  /tmp/ccihcwFT.s 			page 315


 11339 1a6c 3268     		ldr	r2, [r6]
 11340 1a6e 0BF00103 		and	r3, fp, #1
 11341              	.LVL932:
 919:src/keys.c    **** 	    State2.dot = op;
 11342              		.loc 1 919 17 view .LVU3522
 11343 1a72 9B01     		lsls	r3, r3, #6
 11344 1a74 43F02003 		orr	r3, r3, #32
 11345 1a78 21F06001 		bic	r1, r1, #96
 11346 1a7c 0B43     		orrs	r3, r3, r1
 11347 1a7e 88F81530 		strb	r3, [r8, #21]
 922:src/keys.c    **** 	  }
 11348              		.loc 1 922 6 is_stmt 1 view .LVU3523
 922:src/keys.c    **** 	  }
 11349              		.loc 1 922 13 is_stmt 0 view .LVU3524
 11350 1a82 4FF0330B 		mov	fp, #51
 11351              	.LVL933:
 922:src/keys.c    **** 	  }
 11352              		.loc 1 922 13 view .LVU3525
 11353 1a86 FEF714BB 		b	.L611
 11354              	.L1263:
 11355 1a8a 00BF     		.align	2
 11356              	.L1262:
 11357 1a8c 00000000 		.word	main_ram
 11358 1a90 00000000 		.word	NonProgrammable
 11359 1a94 00000000 		.word	.LANCHOR11
 11360 1a98 00000000 		.word	.LANCHOR20
 11361              	.LVL934:
 11362              	.L1233:
 981:src/keys.c    **** 			return STATE_UNFINISHED;
 11363              		.loc 1 981 4 is_stmt 1 view .LVU3526
 981:src/keys.c    **** 			return STATE_UNFINISHED;
 11364              		.loc 1 981 26 is_stmt 0 view .LVU3527
 11365 1a9c 5C1E     		subs	r4, r3, #1
 11366              	.LVL935:
 981:src/keys.c    **** 			return STATE_UNFINISHED;
 11367              		.loc 1 981 17 view .LVU3528
 11368 1a9e 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
 11369 1aa2 3268     		ldr	r2, [r6]
 981:src/keys.c    **** 			return STATE_UNFINISHED;
 11370              		.loc 1 981 26 view .LVU3529
 11371 1aa4 6342     		rsbs	r3, r4, #0
 11372 1aa6 6341     		adcs	r3, r3, r4
 981:src/keys.c    **** 			return STATE_UNFINISHED;
 11373              		.loc 1 981 17 view .LVU3530
 11374 1aa8 63F3C711 		bfi	r1, r3, #7, #1
 11375 1aac 88F81710 		strb	r1, [r8, #23]
 982:src/keys.c    **** 		}
 11376              		.loc 1 982 4 is_stmt 1 view .LVU3531
 982:src/keys.c    **** 		}
 11377              		.loc 1 982 11 is_stmt 0 view .LVU3532
 11378 1ab0 4FF0330B 		mov	fp, #51
 11379              	.LVL936:
 982:src/keys.c    **** 		}
 11380              		.loc 1 982 11 view .LVU3533
 11381 1ab4 FEF7FDBA 		b	.L611
 11382              	.LVL937:
 11383              	.L1232:
ARM GAS  /tmp/ccihcwFT.s 			page 316


 961:src/keys.c    **** 	    return OP_SPEC | OP_D;
 11384              		.loc 1 961 27 view .LVU3534
 11385 1ab8 C64B     		ldr	r3, .L1264
 11386              	.LVL938:
 961:src/keys.c    **** 	    return OP_SPEC | OP_D;
 11387              		.loc 1 961 27 view .LVU3535
 11388 1aba 1B68     		ldr	r3, [r3]
 11389 1abc 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 11390 1ac0 DA07     		lsls	r2, r3, #31
 11391 1ac2 7FF5EEAD 		bpl	.L853
 961:src/keys.c    **** 	    return OP_SPEC | OP_D;
 11392              		.loc 1 961 45 view .LVU3536
 11393 1ac6 0D20     		movs	r0, #13
 11394              	.LVL939:
 961:src/keys.c    **** 	    return OP_SPEC | OP_D;
 11395              		.loc 1 961 45 view .LVU3537
 11396 1ac8 FFF7FEFF 		bl	intltr
 11397              	.LVL940:
 961:src/keys.c    **** 	    return OP_SPEC | OP_D;
 11398              		.loc 1 961 42 view .LVU3538
 11399 1acc 0028     		cmp	r0, #0
 11400 1ace 3FF4E8AD 		beq	.L853
 11401              	.LVL941:
 961:src/keys.c    **** 	    return OP_SPEC | OP_D;
 11402              		.loc 1 961 42 view .LVU3539
 11403              	.LBE963:
 11404              	.LBE1179:
 11405              	.LBE1250:
 11406              	.LBE1322:
3218:src/keys.c    **** 	NonProgrammable = 0;
 11407              		.loc 1 3218 7 is_stmt 1 view .LVU3540
3218:src/keys.c    **** 	NonProgrammable = 0;
 11408              		.loc 1 3218 11 is_stmt 0 view .LVU3541
 11409 1ad2 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3218:src/keys.c    **** 	NonProgrammable = 0;
 11410              		.loc 1 3218 10 view .LVU3542
 11411 1ad6 5906     		lsls	r1, r3, #25
 11412 1ad8 16D5     		bpl	.L976
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11413              		.loc 1 3219 2 is_stmt 1 view .LVU3543
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11414              		.loc 1 3219 18 is_stmt 0 view .LVU3544
 11415 1ada BF4B     		ldr	r3, .L1264+4
 11416 1adc 0022     		movs	r2, #0
 11417              	.LBB1323:
 11418              	.LBB1251:
 11419              	.LBB1180:
 11420              	.LBB964:
 962:src/keys.c    **** 	  }
 11421              		.loc 1 962 13 view .LVU3545
 11422 1ade 4FF0120B 		mov	fp, #18
 11423              	.LBE964:
 11424              	.LBE1180:
 11425              	.LBE1251:
 11426              	.LBE1323:
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11427              		.loc 1 3219 18 view .LVU3546
ARM GAS  /tmp/ccihcwFT.s 			page 317


 11428 1ae2 1A60     		str	r2, [r3]
3220:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11429              		.loc 1 3220 2 is_stmt 1 view .LVU3547
3220:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11430              		.loc 1 3220 32 is_stmt 0 view .LVU3548
 11431 1ae4 5846     		mov	r0, fp
 11432 1ae6 FEF76FBE 		b	.L920
 11433              	.LVL942:
 11434              	.L977:
 11435              	.LBB1324:
 11436              	.LBB1252:
 11437              	.LBB1181:
 11438              	.LBB965:
 967:src/keys.c    **** 	  }
 11439              		.loc 1 967 13 view .LVU3549
 11440 1aea 4FF0130B 		mov	fp, #19
 11441              	.LVL943:
 11442              	.L919:
 967:src/keys.c    **** 	  }
 11443              		.loc 1 967 13 view .LVU3550
 11444              	.LBE965:
 11445              	.LBE1181:
 11446              	.LBE1252:
 11447              	.LBE1324:
3218:src/keys.c    **** 	NonProgrammable = 0;
 11448              		.loc 1 3218 26 view .LVU3551
 11449 1aee BA4B     		ldr	r3, .L1264+4
 11450 1af0 1A68     		ldr	r2, [r3]
 11451 1af2 62B1     		cbz	r2, .L1143
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11452              		.loc 1 3219 2 is_stmt 1 view .LVU3552
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11453              		.loc 1 3219 18 is_stmt 0 view .LVU3553
 11454 1af4 0022     		movs	r2, #0
 11455 1af6 1A60     		str	r2, [r3]
3220:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11456              		.loc 1 3220 2 is_stmt 1 view .LVU3554
3220:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11457              		.loc 1 3220 32 is_stmt 0 view .LVU3555
 11458 1af8 5846     		mov	r0, fp
 11459 1afa FEF765BE 		b	.L920
 11460              	.LVL944:
 11461              	.L1237:
3220:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11462              		.loc 1 3220 32 view .LVU3556
 11463 1afe 3268     		ldr	r2, [r6]
 11464              	.LBB1325:
 11465              	.LBB1253:
 11466              	.LBB1182:
 11467              	.LBB966:
 950:src/keys.c    **** 			process_cmdline_set_lift();
 11468              		.loc 1 950 12 view .LVU3557
 11469 1b00 4FF0330B 		mov	fp, #51
 11470              	.LVL945:
 950:src/keys.c    **** 			process_cmdline_set_lift();
 11471              		.loc 1 950 12 view .LVU3558
 11472 1b04 FEF7D5BA 		b	.L611
ARM GAS  /tmp/ccihcwFT.s 			page 318


 11473              	.LVL946:
 11474              	.L976:
 962:src/keys.c    **** 	  }
 11475              		.loc 1 962 13 view .LVU3559
 11476 1b08 4FF0120B 		mov	fp, #18
 11477 1b0c EFE7     		b	.L919
 11478              	.LVL947:
 11479              	.L1143:
 962:src/keys.c    **** 	  }
 11480              		.loc 1 962 13 view .LVU3560
 11481 1b0e 5846     		mov	r0, fp
 11482 1b10 FEF710BD 		b	.L922
 11483              	.LVL948:
 11484              	.L781:
 962:src/keys.c    **** 	  }
 11485              		.loc 1 962 13 view .LVU3561
 11486              	.LBE966:
 11487              	.LBE1182:
 11488              	.LBB1183:
 11489              	.LBB1008:
2759:src/keys.c    **** 		goto reset_window;
 11490              		.loc 1 2759 4 is_stmt 1 view .LVU3562
2759:src/keys.c    **** 		goto reset_window;
 11491              		.loc 1 2759 24 is_stmt 0 view .LVU3563
 11492 1b14 0AF1FF3A 		add	r10, r10, #-1
 11493              	.LVL949:
2759:src/keys.c    **** 		goto reset_window;
 11494              		.loc 1 2759 18 view .LVU3564
 11495 1b18 A8F808A0 		strh	r10, [r8, #8]	@ movhi
 11496 1b1c FFF76BBB 		b	.L773
 11497              	.LVL950:
 11498              	.L1221:
2755:src/keys.c    **** 			--State2.digval;
 11499              		.loc 1 2755 5 is_stmt 1 view .LVU3565
2755:src/keys.c    **** 			--State2.digval;
 11500              		.loc 1 2755 21 is_stmt 0 view .LVU3566
 11501 1b20 FFF7FEFF 		bl	global_regs
 11502              	.LVL951:
2755:src/keys.c    **** 			--State2.digval;
 11503              		.loc 1 2755 19 view .LVU3567
 11504 1b24 A8F80800 		strh	r0, [r8, #8]	@ movhi
 11505 1b28 FFF760BB 		b	.L782
 11506              	.LVL952:
 11507              	.L1136:
2755:src/keys.c    **** 			--State2.digval;
 11508              		.loc 1 2755 19 view .LVU3568
 11509              	.LBE1008:
 11510              	.LBE1183:
 11511              	.LBE1253:
 11512              	.LBE1325:
3218:src/keys.c    **** 	NonProgrammable = 0;
 11513              		.loc 1 3218 26 discriminator 1 view .LVU3569
 11514 1b2c 1368     		ldr	r3, [r2]
 11515 1b2e 002B     		cmp	r3, #0
 11516 1b30 7EF477AD 		bne	.L921
 11517 1b34 FEF7FEBC 		b	.L922
 11518              	.LVL953:
ARM GAS  /tmp/ccihcwFT.s 			page 319


 11519              	.L784:
 11520              	.LBB1326:
 11521              	.LBB1254:
 11522              	.LBB1184:
 11523              	.LBB1009:
2769:src/keys.c    **** 		goto reset_window;
 11524              		.loc 1 2769 4 is_stmt 1 view .LVU3570
2769:src/keys.c    **** 		goto reset_window;
 11525              		.loc 1 2769 18 is_stmt 0 view .LVU3571
 11526 1b38 0023     		movs	r3, #0
 11527 1b3a A8F80830 		strh	r3, [r8, #8]	@ movhi
 11528 1b3e FFF75ABB 		b	.L773
 11529              	.LVL954:
 11530              	.L1209:
2769:src/keys.c    **** 		goto reset_window;
 11531              		.loc 1 2769 18 view .LVU3572
 11532              	.LBE1009:
 11533              	.LBE1184:
 11534              	.LBB1185:
 11535              	.LBB881:
 11536              	.LBB875:
 11537              	.LBB864:
 442:src/keys.c    **** 			shift = SHIFT_LC_G;
 11538              		.loc 1 442 8 is_stmt 1 view .LVU3573
 443:src/keys.c    **** 	}
 11539              		.loc 1 443 10 is_stmt 0 view .LVU3574
 11540 1b42 0229     		cmp	r1, #2
 11541 1b44 08BF     		it	eq
 11542 1b46 0521     		moveq	r1, #5
 11543              	.LVL955:
 443:src/keys.c    **** 	}
 11544              		.loc 1 443 10 view .LVU3575
 11545 1b48 FFF72DB9 		b	.L733
 11546              	.LVL956:
 11547              	.L1230:
 443:src/keys.c    **** 	}
 11548              		.loc 1 443 10 view .LVU3576
 11549 1b4c 3268     		ldr	r2, [r6]
 11550              	.LBE864:
 11551              	.LBE875:
2429:src/keys.c    **** 		else if (State2.numdigit == 1)
 11552              		.loc 1 2429 11 view .LVU3577
 11553 1b4e 4FF0330B 		mov	fp, #51
 11554 1b52 FEF7AEBA 		b	.L611
 11555              	.LVL957:
 11556              	.L979:
2429:src/keys.c    **** 		else if (State2.numdigit == 1)
 11557              		.loc 1 2429 11 view .LVU3578
 11558              	.LBE881:
 11559              	.LBE1185:
 11560              	.LBB1186:
 11561              	.LBB687:
 754:src/keys.c    **** 	    }
 11562              		.loc 1 754 15 view .LVU3579
 11563 1b56 4FF0110B 		mov	fp, #17
 11564 1b5a C8E7     		b	.L919
 11565              	.LVL958:
ARM GAS  /tmp/ccihcwFT.s 			page 320


 11566              	.L1239:
 754:src/keys.c    **** 	    }
 11567              		.loc 1 754 15 view .LVU3580
 11568              	.LBE687:
 11569              	.LBE1186:
 11570              	.LBB1187:
 11571              	.LBB930:
2606:src/keys.c    **** 		State2.digval = pc;
 11572              		.loc 1 2606 4 is_stmt 1 view .LVU3581
2606:src/keys.c    **** 		State2.digval = pc;
 11573              		.loc 1 2606 9 is_stmt 0 view .LVU3582
 11574 1b5c 2046     		mov	r0, r4
 11575 1b5e 0121     		movs	r1, #1
 11576 1b60 FFF7FEFF 		bl	advance_to_next_label
 11577              	.LVL959:
 11578 1b64 0446     		mov	r4, r0
 11579              	.LVL960:
2606:src/keys.c    **** 		State2.digval = pc;
 11580              		.loc 1 2606 9 view .LVU3583
 11581 1b66 68E7     		b	.L745
 11582              	.LVL961:
 11583              	.L805:
2606:src/keys.c    **** 		State2.digval = pc;
 11584              		.loc 1 2606 9 view .LVU3584
 11585              	.LBE930:
 11586              	.LBE1187:
 11587              	.LBB1188:
 11588              	.LBB1084:
1447:src/keys.c    **** 			return STATE_BACKSPACE;
 11589              		.loc 1 1447 3 is_stmt 1 view .LVU3585
1447:src/keys.c    **** 			return STATE_BACKSPACE;
 11590              		.loc 1 1447 6 is_stmt 0 view .LVU3586
 11591 1b68 0028     		cmp	r0, #0
 11592 1b6a 3EF4CBAC 		beq	.L814
 11593              	.L815:
1449:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11594              		.loc 1 1449 3 is_stmt 1 view .LVU3587
1449:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11595              		.loc 1 1449 6 is_stmt 0 view .LVU3588
 11596 1b6e 0328     		cmp	r0, #3
 11597 1b70 7FF41CAC 		bne	.L799
 11598              	.LVL962:
1449:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11599              		.loc 1 1449 6 view .LVU3589
 11600              	.LBE1084:
 11601              	.LBE1188:
 11602              	.LBE1254:
 11603              	.LBE1326:
3218:src/keys.c    **** 	NonProgrammable = 0;
 11604              		.loc 1 3218 7 is_stmt 1 view .LVU3590
3218:src/keys.c    **** 	NonProgrammable = 0;
 11605              		.loc 1 3218 10 is_stmt 0 view .LVU3591
 11606 1b74 5906     		lsls	r1, r3, #25
 11607              	.LVL963:
3218:src/keys.c    **** 	NonProgrammable = 0;
 11608              		.loc 1 3218 10 view .LVU3592
 11609 1b76 17D5     		bpl	.L982
ARM GAS  /tmp/ccihcwFT.s 			page 321


3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11610              		.loc 1 3219 2 is_stmt 1 view .LVU3593
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11611              		.loc 1 3219 18 is_stmt 0 view .LVU3594
 11612 1b78 974B     		ldr	r3, .L1264+4
 11613 1b7a 0022     		movs	r2, #0
 11614 1b7c 1A60     		str	r2, [r3]
3220:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11615              		.loc 1 3220 2 is_stmt 1 view .LVU3595
3220:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11616              		.loc 1 3220 32 is_stmt 0 view .LVU3596
 11617 1b7e 4FF4BA70 		mov	r0, #372
 11618              	.LVL964:
3220:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11619              		.loc 1 3220 32 view .LVU3597
 11620 1b82 FEF777BD 		b	.L918
 11621              	.LVL965:
 11622              	.L1185:
3218:src/keys.c    **** 	NonProgrammable = 0;
 11623              		.loc 1 3218 7 is_stmt 1 view .LVU3598
3218:src/keys.c    **** 	NonProgrammable = 0;
 11624              		.loc 1 3218 11 is_stmt 0 view .LVU3599
 11625 1b86 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3218:src/keys.c    **** 	NonProgrammable = 0;
 11626              		.loc 1 3218 10 view .LVU3600
 11627 1b8a 5C06     		lsls	r4, r3, #25
 11628 1b8c 17D5     		bpl	.L980
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11629              		.loc 1 3219 2 is_stmt 1 view .LVU3601
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11630              		.loc 1 3219 18 is_stmt 0 view .LVU3602
 11631 1b8e 924B     		ldr	r3, .L1264+4
 11632 1b90 0022     		movs	r2, #0
 11633              	.LBB1327:
 11634              	.LBB1255:
 11635              	.LBB1189:
 11636              	.LBB688:
 762:src/keys.c    **** 	    }
 11637              		.loc 1 762 15 view .LVU3603
 11638 1b92 4FF0140B 		mov	fp, #20
 11639              	.LBE688:
 11640              	.LBE1189:
 11641              	.LBE1255:
 11642              	.LBE1327:
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11643              		.loc 1 3219 18 view .LVU3604
 11644 1b96 1A60     		str	r2, [r3]
3220:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11645              		.loc 1 3220 2 is_stmt 1 view .LVU3605
3220:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11646              		.loc 1 3220 32 is_stmt 0 view .LVU3606
 11647 1b98 5846     		mov	r0, fp
 11648 1b9a FEF715BE 		b	.L920
 11649              	.LVL966:
 11650              	.L1186:
3220:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11651              		.loc 1 3220 32 view .LVU3607
ARM GAS  /tmp/ccihcwFT.s 			page 322


 11652 1b9e 3268     		ldr	r2, [r6]
 11653              	.LBB1328:
 11654              	.LBB1256:
 11655              	.LBB1190:
 11656              	.LBB689:
 841:src/keys.c    **** }
 11657              		.loc 1 841 9 view .LVU3608
 11658 1ba0 4FF0330B 		mov	fp, #51
 11659 1ba4 FEF785BA 		b	.L611
 11660              	.LVL967:
 11661              	.L982:
 841:src/keys.c    **** }
 11662              		.loc 1 841 9 view .LVU3609
 11663              	.LBE689:
 11664              	.LBE1190:
 11665              	.LBB1191:
 11666              	.LBB1085:
1450:src/keys.c    **** 		break;
 11667              		.loc 1 1450 11 view .LVU3610
 11668 1ba8 4FF4BA7B 		mov	fp, #372
 11669              	.LVL968:
 11670              	.L917:
1450:src/keys.c    **** 		break;
 11671              		.loc 1 1450 11 view .LVU3611
 11672              	.LBE1085:
 11673              	.LBE1191:
 11674              	.LBE1256:
 11675              	.LBE1328:
3218:src/keys.c    **** 	NonProgrammable = 0;
 11676              		.loc 1 3218 26 view .LVU3612
 11677 1bac 8A4B     		ldr	r3, .L1264+4
 11678 1bae 1A68     		ldr	r2, [r3]
 11679 1bb0 002A     		cmp	r2, #0
 11680 1bb2 ACD0     		beq	.L1143
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11681              		.loc 1 3219 2 is_stmt 1 view .LVU3613
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11682              		.loc 1 3219 18 is_stmt 0 view .LVU3614
 11683 1bb4 0022     		movs	r2, #0
3220:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11684              		.loc 1 3220 32 view .LVU3615
 11685 1bb6 5846     		mov	r0, fp
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11686              		.loc 1 3219 18 view .LVU3616
 11687 1bb8 1A60     		str	r2, [r3]
3220:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11688              		.loc 1 3220 2 is_stmt 1 view .LVU3617
 11689 1bba FEF75BBD 		b	.L918
 11690              	.LVL969:
 11691              	.L980:
 11692              	.LBB1329:
 11693              	.LBB1257:
 11694              	.LBB1192:
 11695              	.LBB690:
 762:src/keys.c    **** 	    }
 11696              		.loc 1 762 15 is_stmt 0 view .LVU3618
 11697 1bbe 4FF0140B 		mov	fp, #20
ARM GAS  /tmp/ccihcwFT.s 			page 323


 11698 1bc2 94E7     		b	.L919
 11699              	.LVL970:
 11700              	.L1228:
 762:src/keys.c    **** 	    }
 11701              		.loc 1 762 15 view .LVU3619
 11702              	.LBE690:
 11703              	.LBE1192:
 11704              	.LBB1193:
 11705              	.LBB1153:
1087:src/keys.c    **** 			set_pc(0);
 11706              		.loc 1 1087 43 view .LVU3620
 11707 1bc4 B3F8EE37 		ldrh	r3, [r3, #2030]
 11708 1bc8 012B     		cmp	r3, #1
 11709 1bca 7FF4DDAC 		bne	.L866
1088:src/keys.c    **** 		break;
 11710              		.loc 1 1088 4 is_stmt 1 view .LVU3621
 11711 1bce FFF7FEFF 		bl	set_pc
 11712              	.LVL971:
 11713 1bd2 D9E4     		b	.L866
 11714              	.L1227:
 11715 1bd4 3268     		ldr	r2, [r6]
1083:src/keys.c    **** 		State2.runmode = 1 - State2.runmode;
 11716              		.loc 1 1083 11 is_stmt 0 view .LVU3622
 11717 1bd6 4FF0330B 		mov	fp, #51
 11718 1bda FEF76ABA 		b	.L611
 11719              	.LVL972:
 11720              	.L1238:
1083:src/keys.c    **** 		State2.runmode = 1 - State2.runmode;
 11721              		.loc 1 1083 11 view .LVU3623
 11722              	.LBE1153:
 11723              	.LBE1193:
 11724              	.LBB1194:
 11725              	.LBB882:
2446:src/keys.c    **** 		else
 11726              		.loc 1 2446 4 is_stmt 1 view .LVU3624
2446:src/keys.c    **** 		else
 11727              		.loc 1 2446 34 is_stmt 0 view .LVU3625
 11728 1bde 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11729 1be2 3268     		ldr	r2, [r6]
 11730 1be4 C3F30011 		ubfx	r1, r3, #4, #1
 11731              	.LVL973:
2446:src/keys.c    **** 		else
 11732              		.loc 1 2446 26 view .LVU3626
 11733 1be8 C1F10101 		rsb	r1, r1, #1
2446:src/keys.c    **** 		else
 11734              		.loc 1 2446 22 view .LVU3627
 11735 1bec 61F30413 		bfi	r3, r1, #4, #1
 11736 1bf0 88F81630 		strb	r3, [r8, #22]
2449:src/keys.c    **** 
 11737              		.loc 1 2449 10 view .LVU3628
 11738 1bf4 4FF0330B 		mov	fp, #51
 11739 1bf8 FEF75BBA 		b	.L611
 11740              	.LVL974:
 11741              	.L1217:
2449:src/keys.c    **** 
 11742              		.loc 1 2449 10 view .LVU3629
 11743              	.LBE882:
ARM GAS  /tmp/ccihcwFT.s 			page 324


 11744              	.LBE1194:
 11745              	.LBB1195:
 11746              	.LBB1010:
2730:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 11747              		.loc 1 2730 3 is_stmt 1 view .LVU3630
2730:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 11748              		.loc 1 2730 7 is_stmt 0 view .LVU3631
 11749 1bfc FFF7FEFF 		bl	local_regs
 11750              	.LVL975:
2730:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 11751              		.loc 1 2730 6 view .LVU3632
 11752 1c00 68B1     		cbz	r0, .L771
2731:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11753              		.loc 1 2731 4 is_stmt 1 view .LVU3633
2731:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11754              		.loc 1 2731 19 is_stmt 0 view .LVU3634
 11755 1c02 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2731:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11756              		.loc 1 2731 34 view .LVU3635
 11757 1c06 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
2731:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11758              		.loc 1 2731 19 view .LVU3636
 11759 1c0a 03F00101 		and	r1, r3, #1
2731:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11760              		.loc 1 2731 34 view .LVU3637
 11761 1c0e 0A43     		orrs	r2, r1, r2
 11762 1c10 0CBF     		ite	eq
 11763 1c12 0122     		moveq	r2, #1
 11764 1c14 0022     		movne	r2, #0
2731:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 11765              		.loc 1 2731 17 view .LVU3638
 11766 1c16 62F30003 		bfi	r3, r2, #0, #1
 11767 1c1a 88F81630 		strb	r3, [r8, #22]
 11768              	.L771:
2732:src/keys.c    **** 		goto reset_window;
 11769              		.loc 1 2732 3 is_stmt 1 view .LVU3639
2732:src/keys.c    **** 		goto reset_window;
 11770              		.loc 1 2732 32 is_stmt 0 view .LVU3640
 11771 1c1e 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2732:src/keys.c    **** 		goto reset_window;
 11772              		.loc 1 2732 17 view .LVU3641
 11773 1c22 13F0010F 		tst	r3, #1
 11774 1c26 14BF     		ite	ne
 11775 1c28 0023     		movne	r3, #0
 11776 1c2a 6423     		moveq	r3, #100
 11777 1c2c A8F80830 		strh	r3, [r8, #8]	@ movhi
2733:src/keys.c    **** 	}
 11778              		.loc 1 2733 3 is_stmt 1 view .LVU3642
 11779 1c30 FFF7E1BA 		b	.L773
 11780              	.LVL976:
 11781              	.L800:
2733:src/keys.c    **** 	}
 11782              		.loc 1 2733 3 is_stmt 0 view .LVU3643
 11783              	.LBE1010:
 11784              	.LBE1195:
 11785              	.LBB1196:
 11786              	.LBB1086:
ARM GAS  /tmp/ccihcwFT.s 			page 325


1509:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 11787              		.loc 1 1509 3 is_stmt 1 view .LVU3644
1509:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 11788              		.loc 1 1509 6 is_stmt 0 view .LVU3645
 11789 1c34 0128     		cmp	r0, #1
 11790 1c36 7FF4B9AB 		bne	.L799
 11791              	.LVL977:
1509:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 11792              		.loc 1 1509 6 view .LVU3646
 11793              	.LBE1086:
 11794              	.LBE1196:
 11795              	.LBE1257:
 11796              	.LBE1329:
3218:src/keys.c    **** 	NonProgrammable = 0;
 11797              		.loc 1 3218 7 is_stmt 1 view .LVU3647
3218:src/keys.c    **** 	NonProgrammable = 0;
 11798              		.loc 1 3218 10 is_stmt 0 view .LVU3648
 11799 1c3a 5806     		lsls	r0, r3, #25
 11800              	.LVL978:
3218:src/keys.c    **** 	NonProgrammable = 0;
 11801              		.loc 1 3218 10 view .LVU3649
 11802 1c3c 10D5     		bpl	.L975
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11803              		.loc 1 3219 2 is_stmt 1 view .LVU3650
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11804              		.loc 1 3219 18 is_stmt 0 view .LVU3651
 11805 1c3e 664B     		ldr	r3, .L1264+4
 11806 1c40 0022     		movs	r2, #0
 11807 1c42 1A60     		str	r2, [r3]
3220:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11808              		.loc 1 3220 2 is_stmt 1 view .LVU3652
3220:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11809              		.loc 1 3220 32 is_stmt 0 view .LVU3653
 11810 1c44 40F23B10 		movw	r0, #315
 11811 1c48 FEF714BD 		b	.L918
 11812              	.LVL979:
 11813              	.L802:
 11814              	.LBB1330:
 11815              	.LBB1258:
 11816              	.LBB1197:
 11817              	.LBB1087:
1495:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 11818              		.loc 1 1495 3 is_stmt 1 view .LVU3654
1495:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 11819              		.loc 1 1495 6 is_stmt 0 view .LVU3655
 11820 1c4c 0128     		cmp	r0, #1
 11821 1c4e 20D0     		beq	.L1240
1497:src/keys.c    **** 			return OP_NIL | OP_OFF;
 11822              		.loc 1 1497 8 is_stmt 1 view .LVU3656
1497:src/keys.c    **** 			return OP_NIL | OP_OFF;
 11823              		.loc 1 1497 11 is_stmt 0 view .LVU3657
 11824 1c50 0328     		cmp	r0, #3
 11825 1c52 15D0     		beq	.L824
1499:src/keys.c    **** #ifdef DM42
 11826              		.loc 1 1499 8 is_stmt 1 view .LVU3658
1499:src/keys.c    **** #ifdef DM42
 11827              		.loc 1 1499 11 is_stmt 0 view .LVU3659
ARM GAS  /tmp/ccihcwFT.s 			page 326


 11828 1c54 38B1     		cbz	r0, .L825
 11829 1c56 3268     		ldr	r2, [r6]
1506:src/keys.c    **** 
 11830              		.loc 1 1506 10 view .LVU3660
 11831 1c58 4FF0330B 		mov	fp, #51
 11832 1c5c FEF729BA 		b	.L611
 11833              	.LVL980:
 11834              	.L975:
1510:src/keys.c    **** 		break;
 11835              		.loc 1 1510 11 view .LVU3661
 11836 1c60 40F23B1B 		movw	fp, #315
 11837 1c64 A2E7     		b	.L917
 11838              	.LVL981:
 11839              	.L825:
1501:src/keys.c    **** 		  display_current_menu();
 11840              		.loc 1 1501 5 is_stmt 1 view .LVU3662
 11841 1c66 4FF0FF30 		mov	r0, #-1
 11842              	.LVL982:
1501:src/keys.c    **** 		  display_current_menu();
 11843              		.loc 1 1501 5 is_stmt 0 view .LVU3663
 11844 1c6a FFF7FEFF 		bl	set_menu
 11845              	.LVL983:
1502:src/keys.c    **** #endif
 11846              		.loc 1 1502 5 is_stmt 1 view .LVU3664
1506:src/keys.c    **** 
 11847              		.loc 1 1506 10 is_stmt 0 view .LVU3665
 11848 1c6e 4FF0330B 		mov	fp, #51
1502:src/keys.c    **** #endif
 11849              		.loc 1 1502 5 view .LVU3666
 11850 1c72 FFF7FEFF 		bl	display_current_menu
 11851              	.LVL984:
1504:src/keys.c    **** 		}
 11852              		.loc 1 1504 5 is_stmt 1 view .LVU3667
 11853 1c76 FFF7FEFF 		bl	init_state
 11854              	.LVL985:
 11855 1c7a 3268     		ldr	r2, [r6]
 11856 1c7c FEF719BA 		b	.L611
 11857              	.LVL986:
 11858              	.L824:
1504:src/keys.c    **** 		}
 11859              		.loc 1 1504 5 is_stmt 0 view .LVU3668
 11860              	.LBE1087:
 11861              	.LBE1197:
 11862              	.LBE1258:
 11863              	.LBE1330:
3218:src/keys.c    **** 	NonProgrammable = 0;
 11864              		.loc 1 3218 7 is_stmt 1 view .LVU3669
3218:src/keys.c    **** 	NonProgrammable = 0;
 11865              		.loc 1 3218 10 is_stmt 0 view .LVU3670
 11866 1c80 5A06     		lsls	r2, r3, #25
 11867 1c82 15D5     		bpl	.L983
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11868              		.loc 1 3219 2 is_stmt 1 view .LVU3671
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11869              		.loc 1 3219 18 is_stmt 0 view .LVU3672
 11870 1c84 544B     		ldr	r3, .L1264+4
 11871 1c86 0022     		movs	r2, #0
ARM GAS  /tmp/ccihcwFT.s 			page 327


 11872 1c88 1A60     		str	r2, [r3]
3220:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11873              		.loc 1 3220 2 is_stmt 1 view .LVU3673
3220:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11874              		.loc 1 3220 32 is_stmt 0 view .LVU3674
 11875 1c8a 4FF48170 		mov	r0, #258
 11876              	.LVL987:
3220:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11877              		.loc 1 3220 32 view .LVU3675
 11878 1c8e FEF7F1BC 		b	.L918
 11879              	.LVL988:
 11880              	.L1240:
 11881              	.LBB1331:
 11882              	.LBB1259:
 11883              	.LBB1198:
 11884              	.LBB1088:
1496:src/keys.c    **** 		else if (shift == SHIFT_H)
 11885              		.loc 1 1496 4 is_stmt 1 view .LVU3676
1496:src/keys.c    **** 		else if (shift == SHIFT_H)
 11886              		.loc 1 1496 34 is_stmt 0 view .LVU3677
 11887 1c92 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11888 1c96 3268     		ldr	r2, [r6]
 11889 1c98 C3F30011 		ubfx	r1, r3, #4, #1
 11890              	.LVL989:
1496:src/keys.c    **** 		else if (shift == SHIFT_H)
 11891              		.loc 1 1496 26 view .LVU3678
 11892 1c9c C1F10101 		rsb	r1, r1, #1
1496:src/keys.c    **** 		else if (shift == SHIFT_H)
 11893              		.loc 1 1496 22 view .LVU3679
 11894 1ca0 61F30413 		bfi	r3, r1, #4, #1
 11895 1ca4 88F81630 		strb	r3, [r8, #22]
1506:src/keys.c    **** 
 11896              		.loc 1 1506 10 view .LVU3680
 11897 1ca8 4FF0330B 		mov	fp, #51
 11898 1cac FEF701BA 		b	.L611
 11899              	.LVL990:
 11900              	.L983:
1498:src/keys.c    **** 		else if (shift == SHIFT_N) {
 11901              		.loc 1 1498 11 view .LVU3681
 11902 1cb0 4FF4817B 		mov	fp, #258
 11903 1cb4 7AE7     		b	.L917
 11904              	.LVL991:
 11905              	.L803:
1483:src/keys.c    **** 	    if ( State2.runmode ) {
 11906              		.loc 1 1483 4 is_stmt 1 view .LVU3682
1483:src/keys.c    **** 	    if ( State2.runmode ) {
 11907              		.loc 1 1483 7 is_stmt 0 view .LVU3683
 11908 1cb6 0028     		cmp	r0, #0
 11909 1cb8 7FF478AB 		bne	.L799
1484:src/keys.c    **** 	      // Alpha scroll right
 11910              		.loc 1 1484 6 is_stmt 1 view .LVU3684
1484:src/keys.c    **** 	      // Alpha scroll right
 11911              		.loc 1 1484 9 is_stmt 0 view .LVU3685
 11912 1cbc 5B06     		lsls	r3, r3, #25
 11913 1cbe 7EF515AC 		bpl	.L821
1486:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
 11914              		.loc 1 1486 8 is_stmt 1 view .LVU3686
ARM GAS  /tmp/ccihcwFT.s 			page 328


1486:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
 11915              		.loc 1 1486 11 is_stmt 0 view .LVU3687
 11916 1cc2 B9F1000F 		cmp	r9, #0
 11917 1cc6 16D1     		bne	.L822
 11918 1cc8 3268     		ldr	r2, [r6]
1488:src/keys.c    **** 	    }
 11919              		.loc 1 1488 15 view .LVU3688
 11920 1cca 4FF0330B 		mov	fp, #51
 11921 1cce FEF7F0B9 		b	.L611
 11922              	.L804:
1454:src/keys.c    **** 	    if ( State2.runmode ) {
 11923              		.loc 1 1454 4 is_stmt 1 view .LVU3689
1454:src/keys.c    **** 	    if ( State2.runmode ) {
 11924              		.loc 1 1454 7 is_stmt 0 view .LVU3690
 11925 1cd2 0028     		cmp	r0, #0
 11926 1cd4 7FF46AAB 		bne	.L799
1455:src/keys.c    **** 	      // Alpha scroll left
 11927              		.loc 1 1455 6 is_stmt 1 view .LVU3691
1455:src/keys.c    **** 	      // Alpha scroll left
 11928              		.loc 1 1455 9 is_stmt 0 view .LVU3692
 11929 1cd8 5A06     		lsls	r2, r3, #25
 11930 1cda 7EF5FEAB 		bpl	.L817
1467:src/keys.c    **** 		alpha_pos += 1;
 11931              		.loc 1 1467 8 is_stmt 1 view .LVU3693
1467:src/keys.c    **** 		alpha_pos += 1;
 11932              		.loc 1 1467 11 is_stmt 0 view .LVU3694
 11933 1cde B9F1000F 		cmp	r9, #0
 11934 1ce2 11D1     		bne	.L818
 11935              	.LVL992:
 11936              	.L820:
1468:src/keys.c    **** 	      }
 11937              		.loc 1 1468 3 is_stmt 1 view .LVU3695
1468:src/keys.c    **** 	      }
 11938              		.loc 1 1468 13 is_stmt 0 view .LVU3696
 11939 1ce4 09F1010A 		add	r10, r9, #1
 11940              	.LVL993:
 11941              	.L819:
1471:src/keys.c    **** #else
 11942              		.loc 1 1471 8 is_stmt 1 view .LVU3697
 11943 1ce8 3268     		ldr	r2, [r6]
1471:src/keys.c    **** #else
 11944              		.loc 1 1471 25 is_stmt 0 view .LVU3698
 11945 1cea 88F80DA0 		strb	r10, [r8, #13]
1476:src/keys.c    **** 	    }
 11946              		.loc 1 1476 8 is_stmt 1 view .LVU3699
1476:src/keys.c    **** 	    }
 11947              		.loc 1 1476 15 is_stmt 0 view .LVU3700
 11948 1cee 4FF0330B 		mov	fp, #51
 11949 1cf2 FEF7DEB9 		b	.L611
 11950              	.LVL994:
 11951              	.L822:
1487:src/keys.c    **** 	      return STATE_UNFINISHED;
 11952              		.loc 1 1487 3 is_stmt 1 view .LVU3701
1487:src/keys.c    **** 	      return STATE_UNFINISHED;
 11953              		.loc 1 1487 31 is_stmt 0 view .LVU3702
 11954 1cf6 09F1FF39 		add	r9, r9, #-1
 11955              	.LVL995:
ARM GAS  /tmp/ccihcwFT.s 			page 329


1487:src/keys.c    **** 	      return STATE_UNFINISHED;
 11956              		.loc 1 1487 31 view .LVU3703
 11957 1cfa 3268     		ldr	r2, [r6]
1487:src/keys.c    **** 	      return STATE_UNFINISHED;
 11958              		.loc 1 1487 20 view .LVU3704
 11959 1cfc 88F80D90 		strb	r9, [r8, #13]
1488:src/keys.c    **** 	    }
 11960              		.loc 1 1488 15 view .LVU3705
 11961 1d00 4FF0330B 		mov	fp, #51
 11962 1d04 FEF7D5B9 		b	.L611
 11963              	.LVL996:
 11964              	.L818:
1467:src/keys.c    **** 		alpha_pos += 1;
 11965              		.loc 1 1467 33 view .LVU3706
 11966 1d08 FFF7FEFF 		bl	alen
 11967              	.LVL997:
1467:src/keys.c    **** 		alpha_pos += 1;
 11968              		.loc 1 1467 41 view .LVU3707
 11969 1d0c 09EB4903 		add	r3, r9, r9, lsl #1
1467:src/keys.c    **** 		alpha_pos += 1;
 11970              		.loc 1 1467 39 view .LVU3708
 11971 1d10 A0EB4300 		sub	r0, r0, r3, lsl #1
1467:src/keys.c    **** 		alpha_pos += 1;
 11972              		.loc 1 1467 29 view .LVU3709
 11973 1d14 0B28     		cmp	r0, #11
 11974 1d16 E5D8     		bhi	.L820
 11975 1d18 E6E7     		b	.L819
 11976              	.LVL998:
 11977              	.L677:
1467:src/keys.c    **** 		alpha_pos += 1;
 11978              		.loc 1 1467 29 view .LVU3710
 11979              	.LBE1088:
 11980              	.LBE1198:
 11981              	.LBB1199:
 11982              	.LBB736:
1970:src/keys.c    **** 		// Special 1
 11983              		.loc 1 1970 7 is_stmt 1 view .LVU3711
1970:src/keys.c    **** 		// Special 1
 11984              		.loc 1 1970 10 is_stmt 0 view .LVU3712
 11985 1d1a 012A     		cmp	r2, #1
 11986 1d1c 7EF472AF 		bne	.L679
1972:src/keys.c    **** 	}
 11987              		.loc 1 1972 3 is_stmt 1 view .LVU3713
1972:src/keys.c    **** 	}
 11988              		.loc 1 1972 18 is_stmt 0 view .LVU3714
 11989 1d20 BEF1000F 		cmp	lr, #0
 11990 1d24 14BF     		ite	ne
 11991 1d26 2723     		movne	r3, #39
 11992 1d28 1E23     		moveq	r3, #30
1972:src/keys.c    **** 	}
 11993              		.loc 1 1972 47 view .LVU3715
 11994 1d2a 9B44     		add	fp, fp, r3
 11995              	.LVL999:
1972:src/keys.c    **** 	}
 11996              		.loc 1 1972 47 view .LVU3716
 11997 1d2c FEF788BB 		b	.L641
 11998              	.LVL1000:
ARM GAS  /tmp/ccihcwFT.s 			page 330


 11999              	.L734:
1972:src/keys.c    **** 	}
 12000              		.loc 1 1972 47 view .LVU3717
 12001              	.LBE736:
 12002              	.LBE1199:
 12003              	.LBB1200:
 12004              	.LBB883:
2439:src/keys.c    **** 			return STATE_UNFINISHED;
 12005              		.loc 1 2439 5 is_stmt 1 view .LVU3718
2439:src/keys.c    **** 			return STATE_UNFINISHED;
 12006              		.loc 1 2439 20 is_stmt 0 view .LVU3719
 12007 1d30 013A     		subs	r2, r2, #1
 12008 1d32 88F80B20 		strb	r2, [r8, #11]
2440:src/keys.c    **** 		}
 12009              		.loc 1 2440 11 view .LVU3720
 12010 1d36 4FF0330B 		mov	fp, #51
 12011 1d3a 3268     		ldr	r2, [r6]
 12012 1d3c FEF7B9B9 		b	.L611
 12013              	.LVL1001:
 12014              	.L1212:
2465:src/keys.c    **** 		State2.numdigit = 2;
 12015              		.loc 1 2465 3 is_stmt 1 view .LVU3721
2466:src/keys.c    **** 		return STATE_UNFINISHED;
 12016              		.loc 1 2466 19 is_stmt 0 view .LVU3722
 12017 1d40 0223     		movs	r3, #2
 12018 1d42 3268     		ldr	r2, [r6]
2465:src/keys.c    **** 		State2.numdigit = 2;
 12019              		.loc 1 2465 18 view .LVU3723
 12020 1d44 88F80A00 		strb	r0, [r8, #10]
2466:src/keys.c    **** 		return STATE_UNFINISHED;
 12021              		.loc 1 2466 3 is_stmt 1 view .LVU3724
2466:src/keys.c    **** 		return STATE_UNFINISHED;
 12022              		.loc 1 2466 19 is_stmt 0 view .LVU3725
 12023 1d48 88F80B30 		strb	r3, [r8, #11]
2467:src/keys.c    **** 	}
 12024              		.loc 1 2467 3 is_stmt 1 view .LVU3726
2467:src/keys.c    **** 	}
 12025              		.loc 1 2467 10 is_stmt 0 view .LVU3727
 12026 1d4c 4FF0330B 		mov	fp, #51
 12027 1d50 FEF7AFB9 		b	.L611
 12028              	.LVL1002:
 12029              	.L858:
2467:src/keys.c    **** 	}
 12030              		.loc 1 2467 10 view .LVU3728
 12031              	.LBE883:
 12032              	.LBE1200:
 12033              	.LBB1201:
 12034              	.LBB967:
 974:src/keys.c    **** 		State2.test = op;
 12035              		.loc 1 974 3 is_stmt 1 view .LVU3729
 12036 1d54 FFF7FEFF 		bl	process_cmdline_set_lift
 12037              	.LVL1003:
 975:src/keys.c    **** 		return STATE_UNFINISHED;
 12038              		.loc 1 975 3 view .LVU3730
 12039              	.LBE967:
 12040              	.LBE1201:
 12041              	.LBE1259:
ARM GAS  /tmp/ccihcwFT.s 			page 331


 12042              	.LBE1331:
2997:src/keys.c    ****   if (was_paused && Pause == 0)
 12043              		.loc 1 2997 7 is_stmt 0 view .LVU3731
 12044 1d58 2546     		mov	r5, r4
 12045              	.LBB1332:
 12046              	.LBB1260:
 12047              	.LBB1202:
 12048              	.LBB968:
 975:src/keys.c    **** 		return STATE_UNFINISHED;
 12049              		.loc 1 975 15 view .LVU3732
 12050 1d5a 88F80FB0 		strb	fp, [r8, #15]
 976:src/keys.c    **** 
 12051              		.loc 1 976 3 is_stmt 1 view .LVU3733
 12052 1d5e 3268     		ldr	r2, [r6]
 976:src/keys.c    **** 
 12053              		.loc 1 976 10 is_stmt 0 view .LVU3734
 12054 1d60 4FF0330B 		mov	fp, #51
 12055              	.LVL1004:
 976:src/keys.c    **** 
 12056              		.loc 1 976 10 view .LVU3735
 12057 1d64 FEF7A5B9 		b	.L611
 12058              	.LVL1005:
 12059              	.L1234:
 990:src/keys.c    **** 				init_arg((enum rarg) op);
 12060              		.loc 1 990 4 is_stmt 1 view .LVU3736
 990:src/keys.c    **** 				init_arg((enum rarg) op);
 12061              		.loc 1 990 7 is_stmt 0 view .LVU3737
 12062 1d68 BAF5704F 		cmp	r10, #61440
 12063 1d6c 1DD1     		bne	.L860
 990:src/keys.c    **** 				init_arg((enum rarg) op);
 12064              		.loc 1 990 18 view .LVU3738
 12065 1d6e 194B     		ldr	r3, .L1264
 12066 1d70 1B68     		ldr	r3, [r3]
 12067 1d72 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 990:src/keys.c    **** 				init_arg((enum rarg) op);
 12068              		.loc 1 990 8 view .LVU3739
 12069 1d76 D807     		lsls	r0, r3, #31
 12070 1d78 17D5     		bpl	.L860
 12071 1d7a 3268     		ldr	r2, [r6]
 993:src/keys.c    **** 		}
 12072              		.loc 1 993 11 view .LVU3740
 12073 1d7c 4FF0330B 		mov	fp, #51
 12074              	.LVL1006:
 993:src/keys.c    **** 		}
 12075              		.loc 1 993 11 view .LVU3741
 12076 1d80 FEF797B9 		b	.L611
 12077              	.LVL1007:
 12078              	.L837:
 993:src/keys.c    **** 		}
 12079              		.loc 1 993 11 view .LVU3742
 12080              	.LBE968:
 12081              	.LBE1202:
 12082              	.LBB1203:
 12083              	.LBB1122:
1193:src/keys.c    **** 				State2.cmplx = 1;
 12084              		.loc 1 1193 5 is_stmt 1 view .LVU3743
 12085 1d84 FFF7FEFF 		bl	process_cmdline_set_lift
ARM GAS  /tmp/ccihcwFT.s 			page 332


 12086              	.LVL1008:
1194:src/keys.c    **** 				State2.test = op;
 12087              		.loc 1 1194 5 view .LVU3744
1194:src/keys.c    **** 				State2.test = op;
 12088              		.loc 1 1194 18 is_stmt 0 view .LVU3745
 12089 1d88 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
 12090 1d8c 3268     		ldr	r2, [r6]
1195:src/keys.c    **** 			}
 12091              		.loc 1 1195 17 view .LVU3746
 12092 1d8e 88F80FB0 		strb	fp, [r8, #15]
1194:src/keys.c    **** 				State2.test = op;
 12093              		.loc 1 1194 18 view .LVU3747
 12094 1d92 43F00203 		orr	r3, r3, #2
 12095 1d96 88F81530 		strb	r3, [r8, #21]
1195:src/keys.c    **** 			}
 12096              		.loc 1 1195 5 is_stmt 1 view .LVU3748
 12097              	.LBE1122:
 12098              	.LBE1203:
 12099              	.LBE1260:
 12100              	.LBE1332:
2997:src/keys.c    ****   if (was_paused && Pause == 0)
 12101              		.loc 1 2997 7 is_stmt 0 view .LVU3749
 12102 1d9a 2546     		mov	r5, r4
 12103              	.LBB1333:
 12104              	.LBB1261:
 12105              	.LBB1204:
 12106              	.LBB1123:
1197:src/keys.c    **** 
 12107              		.loc 1 1197 11 view .LVU3750
 12108 1d9c 4FF0330B 		mov	fp, #51
 12109              	.LVL1009:
1197:src/keys.c    **** 
 12110              		.loc 1 1197 11 view .LVU3751
 12111 1da0 FEF787B9 		b	.L611
 12112              	.LVL1010:
 12113              	.L1225:
1197:src/keys.c    **** 
 12114              		.loc 1 1197 11 view .LVU3752
 12115 1da4 3268     		ldr	r2, [r6]
 12116 1da6 FEF784B9 		b	.L611
 12117              	.LVL1011:
 12118              	.L860:
1197:src/keys.c    **** 
 12119              		.loc 1 1197 11 view .LVU3753
 12120              	.LBE1123:
 12121              	.LBE1204:
 12122              	.LBB1205:
 12123              	.LBB969:
 991:src/keys.c    **** 			}
 12124              		.loc 1 991 5 is_stmt 1 view .LVU3754
 12125              	.LBB956:
 12126              	.LBI956:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 12127              		.loc 1 506 13 view .LVU3755
 12128              	.LBB957:
 507:src/keys.c    **** 		return;
 12129              		.loc 1 507 2 view .LVU3756
ARM GAS  /tmp/ccihcwFT.s 			page 333


 507:src/keys.c    **** 		return;
 12130              		.loc 1 507 6 is_stmt 0 view .LVU3757
 12131 1daa FFF7FEFF 		bl	is_bad_cmdline
 12132              	.LVL1012:
 507:src/keys.c    **** 		return;
 12133              		.loc 1 507 5 view .LVU3758
 12134 1dae 0446     		mov	r4, r0
 12135              	.LVL1013:
 507:src/keys.c    **** 		return;
 12136              		.loc 1 507 5 view .LVU3759
 12137 1db0 C8BB     		cbnz	r0, .L1241
 12138 1db2 5FFA8BF0 		uxtb	r0, fp
 12139 1db6 FFF7FEFF 		bl	init_arg.part.0
 12140              	.LVL1014:
 12141              	.LBE957:
 12142              	.LBE956:
 12143              	.LBE969:
 12144              	.LBE1205:
 12145              	.LBE1261:
 12146              	.LBE1333:
2997:src/keys.c    ****   if (was_paused && Pause == 0)
 12147              		.loc 1 2997 7 view .LVU3760
 12148 1dba 2546     		mov	r5, r4
 12149 1dbc 3268     		ldr	r2, [r6]
 12150              	.LBB1334:
 12151              	.LBB1262:
 12152              	.LBB1206:
 12153              	.LBB970:
 993:src/keys.c    **** 		}
 12154              		.loc 1 993 11 view .LVU3761
 12155 1dbe 4FF0330B 		mov	fp, #51
 12156              	.LVL1015:
 993:src/keys.c    **** 		}
 12157              		.loc 1 993 11 view .LVU3762
 12158 1dc2 FEF776B9 		b	.L611
 12159              	.LVL1016:
 12160              	.L834:
 993:src/keys.c    **** 		}
 12161              		.loc 1 993 11 view .LVU3763
 12162              	.LBE970:
 12163              	.LBE1206:
 12164              	.LBB1207:
 12165              	.LBB1124:
1186:src/keys.c    **** 			break;
 12166              		.loc 1 1186 4 is_stmt 1 view .LVU3764
 12167              	.LBB1115:
 12168              	.LBI1115:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 12169              		.loc 1 94 20 view .LVU3765
 12170              	.LBB1116:
  95:src/keys.c    **** 	State2.shifts = shift;
 12171              		.loc 1 95 2 view .LVU3766
 12172              	.LBB1117:
 12173              	.LBI1117:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 12174              		.loc 1 86 13 view .LVU3767
 12175              	.LBB1118:
ARM GAS  /tmp/ccihcwFT.s 			page 334


  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12176              		.loc 1 87 2 view .LVU3768
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12177              		.loc 1 87 18 is_stmt 0 view .LVU3769
 12178 1dc6 FFF7FEFF 		bl	shift_down
 12179              	.LVL1017:
  88:src/keys.c    **** }
 12180              		.loc 1 88 2 is_stmt 1 view .LVU3770
 12181              	.LBE1118:
 12182              	.LBE1117:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12183              		.loc 1 96 2 view .LVU3771
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12184              		.loc 1 96 16 is_stmt 0 view .LVU3772
 12185 1dca 88F810A0 		strb	r10, [r8, #16]
  98:src/keys.c    **** }
 12186              		.loc 1 98 2 is_stmt 1 view .LVU3773
  98:src/keys.c    **** }
 12187              		.loc 1 98 9 is_stmt 0 view .LVU3774
 12188 1dce FEF737BB 		b	.L641
 12189              	.L1265:
 12190 1dd2 00BF     		.align	2
 12191              	.L1264:
 12192 1dd4 00000000 		.word	main_ram
 12193 1dd8 00000000 		.word	NonProgrammable
 12194              	.LVL1018:
 12195              	.L1224:
  98:src/keys.c    **** }
 12196              		.loc 1 98 9 view .LVU3775
 12197              	.LBE1116:
 12198              	.LBE1115:
1176:src/keys.c    **** 		State2.hyp = 1;
 12199              		.loc 1 1176 3 is_stmt 1 view .LVU3776
 12200 1ddc FFF7FEFF 		bl	process_cmdline_set_lift
 12201              	.LVL1019:
1177:src/keys.c    **** 		State2.dot = op;
 12202              		.loc 1 1177 3 view .LVU3777
1178:src/keys.c    **** 		State2.cmplx = 1;
 12203              		.loc 1 1178 3 view .LVU3778
1179:src/keys.c    **** 		return STATE_UNFINISHED;
 12204              		.loc 1 1179 3 view .LVU3779
1179:src/keys.c    **** 		return STATE_UNFINISHED;
 12205              		.loc 1 1179 16 is_stmt 0 view .LVU3780
 12206 1de0 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 12207 1de4 3268     		ldr	r2, [r6]
 12208 1de6 0BF00103 		and	r3, fp, #1
 12209 1dea 9B01     		lsls	r3, r3, #6
 12210 1dec 43F02203 		orr	r3, r3, #34
 12211 1df0 21F06201 		bic	r1, r1, #98
 12212 1df4 0B43     		orrs	r3, r3, r1
 12213 1df6 88F81530 		strb	r3, [r8, #21]
1180:src/keys.c    **** 	}
 12214              		.loc 1 1180 3 is_stmt 1 view .LVU3781
1180:src/keys.c    **** 	}
 12215              		.loc 1 1180 10 is_stmt 0 view .LVU3782
 12216 1dfa 4FF0330B 		mov	fp, #51
 12217              	.LVL1020:
ARM GAS  /tmp/ccihcwFT.s 			page 335


1180:src/keys.c    **** 	}
 12218              		.loc 1 1180 10 view .LVU3783
 12219 1dfe FEF758B9 		b	.L611
 12220              	.LVL1021:
 12221              	.L1223:
1171:src/keys.c    **** 		return STATE_UNFINISHED;
 12222              		.loc 1 1171 3 is_stmt 1 view .LVU3784
 12223              	.LBB1119:
 12224              	.LBI1119:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 12225              		.loc 1 506 13 view .LVU3785
 12226              	.LBB1120:
 507:src/keys.c    **** 		return;
 12227              		.loc 1 507 2 view .LVU3786
 507:src/keys.c    **** 		return;
 12228              		.loc 1 507 6 is_stmt 0 view .LVU3787
 12229 1e02 FFF7FEFF 		bl	is_bad_cmdline
 12230              	.LVL1022:
 507:src/keys.c    **** 		return;
 12231              		.loc 1 507 5 view .LVU3788
 12232 1e06 0446     		mov	r4, r0
 12233 1e08 90B9     		cbnz	r0, .L1242
 12234 1e0a 5FFA8BF0 		uxtb	r0, fp
 12235 1e0e FFF7FEFF 		bl	init_arg.part.0
 12236              	.LVL1023:
 12237              	.LBE1120:
 12238              	.LBE1119:
 12239              	.LBE1124:
 12240              	.LBE1207:
 12241              	.LBE1262:
 12242              	.LBE1334:
2997:src/keys.c    ****   if (was_paused && Pause == 0)
 12243              		.loc 1 2997 7 view .LVU3789
 12244 1e12 2546     		mov	r5, r4
 12245 1e14 3268     		ldr	r2, [r6]
 12246              	.LBB1335:
 12247              	.LBB1263:
 12248              	.LBB1208:
 12249              	.LBB1125:
1172:src/keys.c    **** 	}
 12250              		.loc 1 1172 10 view .LVU3790
 12251 1e16 4FF0330B 		mov	fp, #51
 12252              	.LVL1024:
1172:src/keys.c    **** 	}
 12253              		.loc 1 1172 10 view .LVU3791
 12254 1e1a FEF74AB9 		b	.L611
 12255              	.LVL1025:
 12256              	.L833:
1200:src/keys.c    **** 			break;
 12257              		.loc 1 1200 4 is_stmt 1 view .LVU3792
 12258 1e1e FFF7FEFF 		bl	init_state
 12259              	.LVL1026:
1201:src/keys.c    **** 
 12260              		.loc 1 1201 4 view .LVU3793
 12261 1e22 FEF70DBB 		b	.L641
 12262              	.LVL1027:
 12263              	.L1241:
ARM GAS  /tmp/ccihcwFT.s 			page 336


1201:src/keys.c    **** 
 12264              		.loc 1 1201 4 is_stmt 0 view .LVU3794
 12265 1e26 3268     		ldr	r2, [r6]
 12266              	.LBE1125:
 12267              	.LBE1208:
 12268              	.LBB1209:
 12269              	.LBB971:
 993:src/keys.c    **** 		}
 12270              		.loc 1 993 11 view .LVU3795
 12271 1e28 4FF0330B 		mov	fp, #51
 12272              	.LVL1028:
 993:src/keys.c    **** 		}
 12273              		.loc 1 993 11 view .LVU3796
 12274 1e2c FEF741B9 		b	.L611
 12275              	.LVL1029:
 12276              	.L1242:
 993:src/keys.c    **** 		}
 12277              		.loc 1 993 11 view .LVU3797
 12278 1e30 3268     		ldr	r2, [r6]
 12279              	.LBE971:
 12280              	.LBE1209:
 12281              	.LBB1210:
 12282              	.LBB1126:
1172:src/keys.c    **** 	}
 12283              		.loc 1 1172 10 view .LVU3798
 12284 1e32 4FF0330B 		mov	fp, #51
 12285              	.LVL1030:
1172:src/keys.c    **** 	}
 12286              		.loc 1 1172 10 view .LVU3799
 12287 1e36 FEF73CB9 		b	.L611
 12288              	.LVL1031:
 12289              	.L883:
1172:src/keys.c    **** 	}
 12290              		.loc 1 1172 10 view .LVU3800
 12291              	.LBE1126:
 12292              	.LBE1210:
 12293              	.LBE1263:
 12294              	.LBE1335:
3218:src/keys.c    **** 	NonProgrammable = 0;
 12295              		.loc 1 3218 7 is_stmt 1 view .LVU3801
3218:src/keys.c    **** 	NonProgrammable = 0;
 12296              		.loc 1 3218 11 is_stmt 0 view .LVU3802
 12297 1e3a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3218:src/keys.c    **** 	NonProgrammable = 0;
 12298              		.loc 1 3218 10 view .LVU3803
 12299 1e3e 5806     		lsls	r0, r3, #25
 12300 1e40 12D5     		bpl	.L981
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12301              		.loc 1 3219 2 is_stmt 1 view .LVU3804
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12302              		.loc 1 3219 18 is_stmt 0 view .LVU3805
 12303 1e42 534B     		ldr	r3, .L1266
 12304 1e44 0022     		movs	r2, #0
 12305              	.LBB1336:
 12306              	.LBB1264:
 12307              	.LBB1211:
 12308              	.LBB691:
ARM GAS  /tmp/ccihcwFT.s 			page 337


 738:src/keys.c    **** 	    }
 12309              		.loc 1 738 15 view .LVU3806
 12310 1e46 4FF00F0B 		mov	fp, #15
 12311              	.LBE691:
 12312              	.LBE1211:
 12313              	.LBE1264:
 12314              	.LBE1336:
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12315              		.loc 1 3219 18 view .LVU3807
 12316 1e4a 1A60     		str	r2, [r3]
3220:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12317              		.loc 1 3220 2 is_stmt 1 view .LVU3808
3220:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12318              		.loc 1 3220 32 is_stmt 0 view .LVU3809
 12319 1e4c 5846     		mov	r0, fp
 12320 1e4e FEF7BBBC 		b	.L920
 12321              	.LVL1032:
 12322              	.L896:
 12323              	.LBB1337:
 12324              	.LBB1265:
 12325              	.LBB1212:
 12326              	.LBB692:
 817:src/keys.c    **** #else
 12327              		.loc 1 817 4 is_stmt 1 view .LVU3810
 817:src/keys.c    **** #else
 12328              		.loc 1 817 17 is_stmt 0 view .LVU3811
 12329 1e52 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
 12330 1e56 3268     		ldr	r2, [r6]
 12331 1e58 43F00203 		orr	r3, r3, #2
 12332 1e5c 88F81530 		strb	r3, [r8, #21]
 823:src/keys.c    **** 
 12333              		.loc 1 823 4 is_stmt 1 view .LVU3812
 841:src/keys.c    **** }
 12334              		.loc 1 841 9 is_stmt 0 view .LVU3813
 12335 1e60 4FF0330B 		mov	fp, #51
 823:src/keys.c    **** 
 12336              		.loc 1 823 4 view .LVU3814
 12337 1e64 FEF725B9 		b	.L611
 12338              	.LVL1033:
 12339              	.L981:
 738:src/keys.c    **** 	    }
 12340              		.loc 1 738 15 view .LVU3815
 12341 1e68 4FF00F0B 		mov	fp, #15
 12342 1e6c 3FE6     		b	.L919
 12343              	.LVL1034:
 12344              	.L895:
 802:src/keys.c    **** 		State2.arrow = 1;
 12345              		.loc 1 802 3 is_stmt 1 view .LVU3816
 12346 1e6e FFF7FEFF 		bl	process_cmdline_set_lift
 12347              	.LVL1035:
 803:src/keys.c    **** #ifdef DM42
 12348              		.loc 1 803 3 view .LVU3817
 803:src/keys.c    **** #ifdef DM42
 12349              		.loc 1 803 16 is_stmt 0 view .LVU3818
 12350 1e72 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
 805:src/keys.c    **** 		display_current_menu ();
 12351              		.loc 1 805 3 view .LVU3819
ARM GAS  /tmp/ccihcwFT.s 			page 338


 12352 1e76 0920     		movs	r0, #9
 803:src/keys.c    **** #ifdef DM42
 12353              		.loc 1 803 16 view .LVU3820
 12354 1e78 43F00403 		orr	r3, r3, #4
 12355 1e7c 88F81530 		strb	r3, [r8, #21]
 805:src/keys.c    **** 		display_current_menu ();
 12356              		.loc 1 805 3 is_stmt 1 view .LVU3821
 12357 1e80 FFF7FEFF 		bl	set_menu
 12358              	.LVL1036:
 806:src/keys.c    **** 		lcd_refresh ();
 12359              		.loc 1 806 3 view .LVU3822
 12360 1e84 FFF7FEFF 		bl	display_current_menu
 12361              	.LVL1037:
 807:src/keys.c    **** #else
 12362              		.loc 1 807 3 view .LVU3823
 12363 1e88 424B     		ldr	r3, .L1266+4
 12364 1e8a 9847     		blx	r3
 12365              	.LVL1038:
 811:src/keys.c    **** 
 12366              		.loc 1 811 3 view .LVU3824
 12367              	.LBE692:
 12368              	.LBE1212:
 12369              	.LBE1265:
 12370              	.LBE1337:
2997:src/keys.c    ****   if (was_paused && Pause == 0)
 12371              		.loc 1 2997 7 is_stmt 0 view .LVU3825
 12372 1e8c 2546     		mov	r5, r4
 12373 1e8e 3268     		ldr	r2, [r6]
 12374              	.LBB1338:
 12375              	.LBB1266:
 12376              	.LBB1213:
 12377              	.LBB693:
 841:src/keys.c    **** }
 12378              		.loc 1 841 9 view .LVU3826
 12379 1e90 4FF0330B 		mov	fp, #51
 811:src/keys.c    **** 
 12380              		.loc 1 811 3 view .LVU3827
 12381 1e94 FEF70DB9 		b	.L611
 12382              	.LVL1039:
 12383              	.L884:
 811:src/keys.c    **** 
 12384              		.loc 1 811 3 view .LVU3828
 12385              	.LBE693:
 12386              	.LBE1213:
 12387              	.LBE1266:
 12388              	.LBE1338:
3218:src/keys.c    **** 	NonProgrammable = 0;
 12389              		.loc 1 3218 7 is_stmt 1 view .LVU3829
3218:src/keys.c    **** 	NonProgrammable = 0;
 12390              		.loc 1 3218 11 is_stmt 0 view .LVU3830
 12391 1e98 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3218:src/keys.c    **** 	NonProgrammable = 0;
 12392              		.loc 1 3218 10 view .LVU3831
 12393 1e9c 5B06     		lsls	r3, r3, #25
 12394 1e9e 64D5     		bpl	.L978
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12395              		.loc 1 3219 2 is_stmt 1 view .LVU3832
ARM GAS  /tmp/ccihcwFT.s 			page 339


3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12396              		.loc 1 3219 18 is_stmt 0 view .LVU3833
 12397 1ea0 3B4B     		ldr	r3, .L1266
 12398 1ea2 0022     		movs	r2, #0
 12399              	.LBB1339:
 12400              	.LBB1267:
 12401              	.LBB1214:
 12402              	.LBB694:
 746:src/keys.c    **** 	    }
 12403              		.loc 1 746 15 view .LVU3834
 12404 1ea4 4FF0100B 		mov	fp, #16
 12405              	.LBE694:
 12406              	.LBE1214:
 12407              	.LBE1267:
 12408              	.LBE1339:
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12409              		.loc 1 3219 18 view .LVU3835
 12410 1ea8 1A60     		str	r2, [r3]
3220:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12411              		.loc 1 3220 2 is_stmt 1 view .LVU3836
3220:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12412              		.loc 1 3220 32 is_stmt 0 view .LVU3837
 12413 1eaa 5846     		mov	r0, fp
 12414 1eac FEF78CBC 		b	.L920
 12415              	.LVL1040:
 12416              	.L1183:
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12417              		.loc 1 3219 2 is_stmt 1 view .LVU3838
3219:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12418              		.loc 1 3219 18 is_stmt 0 view .LVU3839
 12419 1eb0 0022     		movs	r2, #0
 12420 1eb2 1A60     		str	r2, [r3]
3220:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12421              		.loc 1 3220 2 is_stmt 1 view .LVU3840
 12422 1eb4 FEF7DEBB 		b	.L918
 12423              	.LVL1041:
 12424              	.L807:
 12425              	.LBB1340:
 12426              	.LBB1268:
 12427              	.LBB1215:
 12428              	.LBB1089:
1420:src/keys.c    **** 			init_arg(RARG_ARCL);
 12429              		.loc 1 1420 3 view .LVU3841
1420:src/keys.c    **** 			init_arg(RARG_ARCL);
 12430              		.loc 1 1420 6 is_stmt 0 view .LVU3842
 12431 1eb8 0128     		cmp	r0, #1
 12432 1eba 3FD0     		beq	.L1243
1423:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 12433              		.loc 1 1423 10 is_stmt 1 view .LVU3843
1423:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 12434              		.loc 1 1423 13 is_stmt 0 view .LVU3844
 12435 1ebc 0328     		cmp	r0, #3
 12436 1ebe 7FF475AA 		bne	.L799
1424:src/keys.c    **** 			return STATE_UNFINISHED;
 12437              		.loc 1 1424 4 is_stmt 1 view .LVU3845
 12438              	.LVL1042:
 12439              	.LBB1070:
ARM GAS  /tmp/ccihcwFT.s 			page 340


 12440              	.LBI1070:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 12441              		.loc 1 506 13 view .LVU3846
 12442              	.LBB1071:
 507:src/keys.c    **** 		return;
 12443              		.loc 1 507 2 view .LVU3847
 507:src/keys.c    **** 		return;
 12444              		.loc 1 507 6 is_stmt 0 view .LVU3848
 12445 1ec2 FFF7FEFF 		bl	is_bad_cmdline
 12446              	.LVL1043:
 507:src/keys.c    **** 		return;
 12447              		.loc 1 507 5 view .LVU3849
 12448 1ec6 0346     		mov	r3, r0
 12449 1ec8 C0B9     		cbnz	r0, .L1244
 12450 1eca 7320     		movs	r0, #115
 12451              	.LBE1071:
 12452              	.LBE1070:
 12453              	.LBE1089:
 12454              	.LBE1215:
 12455              	.LBE1268:
 12456              	.LBE1340:
2997:src/keys.c    ****   if (was_paused && Pause == 0)
 12457              		.loc 1 2997 7 view .LVU3850
 12458 1ecc 1D46     		mov	r5, r3
 12459              	.LBB1341:
 12460              	.LBB1269:
 12461              	.LBB1216:
 12462              	.LBB1090:
1425:src/keys.c    **** 		}
 12463              		.loc 1 1425 11 view .LVU3851
 12464 1ece 4FF0330B 		mov	fp, #51
 12465              	.LBB1073:
 12466              	.LBB1072:
 12467 1ed2 FFF7FEFF 		bl	init_arg.part.0
 12468              	.LVL1044:
 12469 1ed6 3268     		ldr	r2, [r6]
 12470 1ed8 FEF7EBB8 		b	.L611
 12471              	.LVL1045:
 12472              	.L808:
1425:src/keys.c    **** 		}
 12473              		.loc 1 1425 11 view .LVU3852
 12474              	.LBE1072:
 12475              	.LBE1073:
1413:src/keys.c    **** 			init_arg(RARG_ASTO);
 12476              		.loc 1 1413 3 is_stmt 1 view .LVU3853
1413:src/keys.c    **** 			init_arg(RARG_ASTO);
 12477              		.loc 1 1413 6 is_stmt 0 view .LVU3854
 12478 1edc 0128     		cmp	r0, #1
 12479 1ede 7FF465AA 		bne	.L799
1414:src/keys.c    **** 			return STATE_UNFINISHED;
 12480              		.loc 1 1414 4 is_stmt 1 view .LVU3855
 12481              	.LVL1046:
 12482              	.LBB1074:
 12483              	.LBI1074:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 12484              		.loc 1 506 13 view .LVU3856
 12485              	.LBB1075:
ARM GAS  /tmp/ccihcwFT.s 			page 341


 507:src/keys.c    **** 		return;
 12486              		.loc 1 507 2 view .LVU3857
 507:src/keys.c    **** 		return;
 12487              		.loc 1 507 6 is_stmt 0 view .LVU3858
 12488 1ee2 FFF7FEFF 		bl	is_bad_cmdline
 12489              	.LVL1047:
 507:src/keys.c    **** 		return;
 12490              		.loc 1 507 5 view .LVU3859
 12491 1ee6 0346     		mov	r3, r0
 12492 1ee8 A8BB     		cbnz	r0, .L1245
 12493 1eea 2620     		movs	r0, #38
 12494              	.LBE1075:
 12495              	.LBE1074:
 12496              	.LBE1090:
 12497              	.LBE1216:
 12498              	.LBE1269:
 12499              	.LBE1341:
2997:src/keys.c    ****   if (was_paused && Pause == 0)
 12500              		.loc 1 2997 7 view .LVU3860
 12501 1eec 1D46     		mov	r5, r3
 12502              	.LBB1342:
 12503              	.LBB1270:
 12504              	.LBB1217:
 12505              	.LBB1091:
1415:src/keys.c    **** 		}
 12506              		.loc 1 1415 11 view .LVU3861
 12507 1eee 4FF0330B 		mov	fp, #51
 12508              	.LBB1077:
 12509              	.LBB1076:
 12510 1ef2 FFF7FEFF 		bl	init_arg.part.0
 12511              	.LVL1048:
 12512 1ef6 3268     		ldr	r2, [r6]
 12513 1ef8 FEF7DBB8 		b	.L611
 12514              	.LVL1049:
 12515              	.L1244:
1415:src/keys.c    **** 		}
 12516              		.loc 1 1415 11 view .LVU3862
 12517 1efc 3268     		ldr	r2, [r6]
 12518              	.LBE1076:
 12519              	.LBE1077:
1425:src/keys.c    **** 		}
 12520              		.loc 1 1425 11 view .LVU3863
 12521 1efe 4FF0330B 		mov	fp, #51
 12522 1f02 FEF7D6B8 		b	.L611
 12523              	.LVL1050:
 12524              	.L806:
1430:src/keys.c    **** 			break;
 12525              		.loc 1 1430 3 is_stmt 1 view .LVU3864
1430:src/keys.c    **** 			break;
 12526              		.loc 1 1430 24 is_stmt 0 view .LVU3865
 12527 1f06 821E     		subs	r2, r0, #2
1430:src/keys.c    **** 			break;
 12528              		.loc 1 1430 6 view .LVU3866
 12529 1f08 D2B2     		uxtb	r2, r2
 12530 1f0a 012A     		cmp	r2, #1
 12531 1f0c 7FF64EAA 		bls	.L799
1432:src/keys.c    **** 			State2.multi = 1;
ARM GAS  /tmp/ccihcwFT.s 			page 342


 12532              		.loc 1 1432 3 is_stmt 1 view .LVU3867
1432:src/keys.c    **** 			State2.multi = 1;
 12533              		.loc 1 1432 6 is_stmt 0 view .LVU3868
 12534 1f10 0128     		cmp	r0, #1
 12535 1f12 02D1     		bne	.L813
1432:src/keys.c    **** 			State2.multi = 1;
 12536              		.loc 1 1432 24 view .LVU3869
 12537 1f14 13F04002 		ands	r2, r3, #64
 12538 1f18 2AD0     		beq	.L1246
 12539              	.L813:
1438:src/keys.c    **** 		State2.alphashift = 0;
 12540              		.loc 1 1438 3 is_stmt 1 view .LVU3870
1439:src/keys.c    **** #ifdef DM42
 12541              		.loc 1 1439 3 view .LVU3871
1438:src/keys.c    **** 		State2.alphashift = 0;
 12542              		.loc 1 1438 17 is_stmt 0 view .LVU3872
 12543 1f1a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
1441:src/keys.c    **** 		display_current_menu();
 12544              		.loc 1 1441 3 view .LVU3873
 12545 1f1e 4FF0FF30 		mov	r0, #-1
 12546              	.LVL1051:
1438:src/keys.c    **** 		State2.alphashift = 0;
 12547              		.loc 1 1438 17 view .LVU3874
 12548 1f22 23F01803 		bic	r3, r3, #24
 12549 1f26 88F81630 		strb	r3, [r8, #22]
1441:src/keys.c    **** 		display_current_menu();
 12550              		.loc 1 1441 3 is_stmt 1 view .LVU3875
1444:src/keys.c    **** 
 12551              		.loc 1 1444 10 is_stmt 0 view .LVU3876
 12552 1f2a 4FF0330B 		mov	fp, #51
1441:src/keys.c    **** 		display_current_menu();
 12553              		.loc 1 1441 3 view .LVU3877
 12554 1f2e FFF7FEFF 		bl	set_menu
 12555              	.LVL1052:
1442:src/keys.c    **** #endif
 12556              		.loc 1 1442 3 is_stmt 1 view .LVU3878
 12557 1f32 FFF7FEFF 		bl	display_current_menu
 12558              	.LVL1053:
1444:src/keys.c    **** 
 12559              		.loc 1 1444 3 view .LVU3879
 12560 1f36 3268     		ldr	r2, [r6]
1444:src/keys.c    **** 
 12561              		.loc 1 1444 10 is_stmt 0 view .LVU3880
 12562 1f38 FEF7BBB8 		b	.L611
 12563              	.LVL1054:
 12564              	.L1243:
1421:src/keys.c    **** 			return STATE_UNFINISHED;
 12565              		.loc 1 1421 4 is_stmt 1 view .LVU3881
 12566              	.LBB1078:
 12567              	.LBI1078:
 506:src/keys.c    **** 	if (is_bad_cmdline())
 12568              		.loc 1 506 13 view .LVU3882
 12569              	.LBB1079:
 507:src/keys.c    **** 		return;
 12570              		.loc 1 507 2 view .LVU3883
 507:src/keys.c    **** 		return;
 12571              		.loc 1 507 6 is_stmt 0 view .LVU3884
ARM GAS  /tmp/ccihcwFT.s 			page 343


 12572 1f3c FFF7FEFF 		bl	is_bad_cmdline
 12573              	.LVL1055:
 507:src/keys.c    **** 		return;
 12574              		.loc 1 507 5 view .LVU3885
 12575 1f40 0346     		mov	r3, r0
 12576 1f42 68B9     		cbnz	r0, .L1247
 12577 1f44 2720     		movs	r0, #39
 12578              	.LBE1079:
 12579              	.LBE1078:
 12580              	.LBE1091:
 12581              	.LBE1217:
 12582              	.LBE1270:
 12583              	.LBE1342:
2997:src/keys.c    ****   if (was_paused && Pause == 0)
 12584              		.loc 1 2997 7 view .LVU3886
 12585 1f46 1D46     		mov	r5, r3
 12586              	.LBB1343:
 12587              	.LBB1271:
 12588              	.LBB1218:
 12589              	.LBB1092:
1422:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 12590              		.loc 1 1422 11 view .LVU3887
 12591 1f48 4FF0330B 		mov	fp, #51
 12592              	.LBB1081:
 12593              	.LBB1080:
 12594 1f4c FFF7FEFF 		bl	init_arg.part.0
 12595              	.LVL1056:
 12596 1f50 3268     		ldr	r2, [r6]
 12597 1f52 FEF7AEB8 		b	.L611
 12598              	.LVL1057:
 12599              	.L1245:
1422:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 12600              		.loc 1 1422 11 view .LVU3888
 12601 1f56 3268     		ldr	r2, [r6]
 12602              	.LBE1080:
 12603              	.LBE1081:
1415:src/keys.c    **** 		}
 12604              		.loc 1 1415 11 view .LVU3889
 12605 1f58 4FF0330B 		mov	fp, #51
 12606 1f5c FEF7A9B8 		b	.L611
 12607              	.LVL1058:
 12608              	.L1247:
1415:src/keys.c    **** 		}
 12609              		.loc 1 1415 11 view .LVU3890
 12610 1f60 3268     		ldr	r2, [r6]
1422:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 12611              		.loc 1 1422 11 view .LVU3891
 12612 1f62 4FF0330B 		mov	fp, #51
 12613 1f66 FEF7A4B8 		b	.L611
 12614              	.LVL1059:
 12615              	.L978:
1422:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 12616              		.loc 1 1422 11 view .LVU3892
 12617              	.LBE1092:
 12618              	.LBE1218:
 12619              	.LBB1219:
 12620              	.LBB695:
ARM GAS  /tmp/ccihcwFT.s 			page 344


 746:src/keys.c    **** 	    }
 12621              		.loc 1 746 15 view .LVU3893
 12622 1f6a 4FF0100B 		mov	fp, #16
 12623 1f6e BEE5     		b	.L919
 12624              	.LVL1060:
 12625              	.L1246:
 746:src/keys.c    **** 	    }
 12626              		.loc 1 746 15 view .LVU3894
 12627              	.LBE695:
 12628              	.LBE1219:
 12629              	.LBB1220:
 12630              	.LBB1093:
1433:src/keys.c    **** 			State2.numdigit = 0;
 12631              		.loc 1 1433 4 is_stmt 1 view .LVU3895
1433:src/keys.c    **** 			State2.numdigit = 0;
 12632              		.loc 1 1433 17 is_stmt 0 view .LVU3896
 12633 1f70 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
1434:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 12634              		.loc 1 1434 20 view .LVU3897
 12635 1f74 88F80B20 		strb	r2, [r8, #11]
1433:src/keys.c    **** 			State2.numdigit = 0;
 12636              		.loc 1 1433 17 view .LVU3898
 12637 1f78 43F00803 		orr	r3, r3, #8
1435:src/keys.c    **** 			return STATE_UNFINISHED;
 12638              		.loc 1 1435 12 view .LVU3899
 12639 1f7c 0A21     		movs	r1, #10
 12640              	.LVL1061:
1435:src/keys.c    **** 			return STATE_UNFINISHED;
 12641              		.loc 1 1435 12 view .LVU3900
 12642 1f7e 3268     		ldr	r2, [r6]
 12643 1f80 88F81F10 		strb	r1, [r8, #31]
1433:src/keys.c    **** 			State2.numdigit = 0;
 12644              		.loc 1 1433 17 view .LVU3901
 12645 1f84 88F81530 		strb	r3, [r8, #21]
1434:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 12646              		.loc 1 1434 4 is_stmt 1 view .LVU3902
1435:src/keys.c    **** 			return STATE_UNFINISHED;
 12647              		.loc 1 1435 4 view .LVU3903
1436:src/keys.c    **** 		}
 12648              		.loc 1 1436 4 view .LVU3904
1436:src/keys.c    **** 		}
 12649              		.loc 1 1436 11 is_stmt 0 view .LVU3905
 12650 1f88 4FF0330B 		mov	fp, #51
 12651 1f8c FEF791B8 		b	.L611
 12652              	.L1267:
 12653              		.align	2
 12654              	.L1266:
 12655 1f90 00000000 		.word	NonProgrammable
 12656 1f94 31020008 		.word	134218289
 12657              	.LBE1093:
 12658              	.LBE1220:
 12659              	.LBE1271:
 12660              	.LBE1343:
 12661              		.cfi_endproc
 12662              	.LFE58:
 12664              		.section	.text.process_keycode_with_shift,"ax",%progbits
 12665              		.align	1
ARM GAS  /tmp/ccihcwFT.s 			page 345


 12666              		.p2align 2,,3
 12667              		.global	process_keycode_with_shift
 12668              		.syntax unified
 12669              		.thumb
 12670              		.thumb_func
 12671              		.fpu fpv4-sp-d16
 12673              	process_keycode_with_shift:
 12674              	.LFB57:
2971:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 12675              		.loc 1 2971 61 is_stmt 1 view -0
 12676              		.cfi_startproc
 12677              		@ args = 0, pretend = 0, frame = 8
 12678              		@ frame_needed = 0, uses_anonymous_args = 0
 12679 0000 30B5     		push	{r4, r5, lr}
 12680              		.cfi_def_cfa_offset 12
 12681              		.cfi_offset 4, -12
 12682              		.cfi_offset 5, -8
 12683              		.cfi_offset 14, -4
 12684 0002 83B0     		sub	sp, sp, #12
 12685              		.cfi_def_cfa_offset 24
2971:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 12686              		.loc 1 2971 61 is_stmt 0 view .LVU3907
 12687 0004 02AB     		add	r3, sp, #8
 12688 0006 03E90300 		stmdb	r3, {r0, r1}
 12689 000a 9DF80040 		ldrb	r4, [sp]	@ zero_extendqisi2
 12690              	.LVL1062:
2972:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 12691              		.loc 1 2972 4 is_stmt 1 view .LVU3908
2972:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 12692              		.loc 1 2972 7 is_stmt 0 view .LVU3909
 12693 000e 2E2C     		cmp	r4, #46
 12694 0010 10D0     		beq	.L1268
2973:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 12695              		.loc 1 2973 4 is_stmt 1 view .LVU3910
2973:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 12696              		.loc 1 2973 7 is_stmt 0 view .LVU3911
 12697 0012 332C     		cmp	r4, #51
 12698 0014 1DD0     		beq	.L1275
2982:src/keys.c    ****      nd_opcode = remapped.shift;
 12699              		.loc 1 2982 7 view .LVU3912
 12700 0016 342C     		cmp	r4, #52
 12701 0018 019D     		ldr	r5, [sp, #4]
2982:src/keys.c    ****      nd_opcode = remapped.shift;
 12702              		.loc 1 2982 4 is_stmt 1 view .LVU3913
2982:src/keys.c    ****      nd_opcode = remapped.shift;
 12703              		.loc 1 2982 7 is_stmt 0 view .LVU3914
 12704 001a 0DD0     		beq	.L1276
2986:src/keys.c    ****    process_keycode ( remapped.key_34s );
 12705              		.loc 1 2986 9 is_stmt 1 view .LVU3915
2986:src/keys.c    ****    process_keycode ( remapped.key_34s );
 12706              		.loc 1 2986 12 is_stmt 0 view .LVU3916
 12707 001c 002D     		cmp	r5, #0
 12708 001e 03DB     		blt	.L1273
2986:src/keys.c    ****    process_keycode ( remapped.key_34s );
 12709              		.loc 1 2986 34 is_stmt 1 discriminator 1 view .LVU3917
 12710              	.LVL1063:
 12711              	.LBB1344:
ARM GAS  /tmp/ccihcwFT.s 			page 346


 12712              	.LBI1344:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 12713              		.loc 1 94 20 discriminator 1 view .LVU3918
 12714              	.LBB1345:
  95:src/keys.c    **** 	State2.shifts = shift;
 12715              		.loc 1 95 2 discriminator 1 view .LVU3919
 12716              	.LBB1346:
 12717              	.LBI1346:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 12718              		.loc 1 86 13 discriminator 1 view .LVU3920
 12719              	.LBB1347:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12720              		.loc 1 87 2 discriminator 1 view .LVU3921
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12721              		.loc 1 87 18 is_stmt 0 discriminator 1 view .LVU3922
 12722 0020 FFF7FEFF 		bl	shift_down
 12723              	.LVL1064:
  88:src/keys.c    **** }
 12724              		.loc 1 88 2 is_stmt 1 discriminator 1 view .LVU3923
 12725              	.LBE1347:
 12726              	.LBE1346:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12727              		.loc 1 96 2 discriminator 1 view .LVU3924
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12728              		.loc 1 96 16 is_stmt 0 discriminator 1 view .LVU3925
 12729 0024 194B     		ldr	r3, .L1277
 12730              	.LBE1345:
 12731              	.LBE1344:
2986:src/keys.c    ****    process_keycode ( remapped.key_34s );
 12732              		.loc 1 2986 34 discriminator 1 view .LVU3926
 12733 0026 1D74     		strb	r5, [r3, #16]
 12734              	.LBB1349:
 12735              	.LBB1348:
  98:src/keys.c    **** }
 12736              		.loc 1 98 2 is_stmt 1 discriminator 1 view .LVU3927
 12737              	.LVL1065:
 12738              	.L1273:
  98:src/keys.c    **** }
 12739              		.loc 1 98 2 is_stmt 0 discriminator 1 view .LVU3928
 12740              	.LBE1348:
 12741              	.LBE1349:
2987:src/keys.c    ****  }
 12742              		.loc 1 2987 4 is_stmt 1 view .LVU3929
 12743 0028 2046     		mov	r0, r4
2988:src/keys.c    ****  
 12744              		.loc 1 2988 2 is_stmt 0 view .LVU3930
 12745 002a 03B0     		add	sp, sp, #12
 12746              		.cfi_remember_state
 12747              		.cfi_def_cfa_offset 12
 12748              		@ sp needed
 12749 002c BDE83040 		pop	{r4, r5, lr}
 12750              		.cfi_restore 14
 12751              		.cfi_restore 5
 12752              		.cfi_restore 4
 12753              		.cfi_def_cfa_offset 0
 12754              	.LVL1066:
2987:src/keys.c    ****  }
ARM GAS  /tmp/ccihcwFT.s 			page 347


 12755              		.loc 1 2987 4 view .LVU3931
 12756 0030 FFF7FEBF 		b	process_keycode
 12757              	.LVL1067:
 12758              	.L1268:
 12759              		.cfi_restore_state
2988:src/keys.c    ****  
 12760              		.loc 1 2988 2 view .LVU3932
 12761 0034 03B0     		add	sp, sp, #12
 12762              		.cfi_remember_state
 12763              		.cfi_def_cfa_offset 12
 12764              		@ sp needed
 12765 0036 30BD     		pop	{r4, r5, pc}
 12766              	.LVL1068:
 12767              	.L1276:
 12768              		.cfi_restore_state
2983:src/keys.c    ****      set_shift(SHIFT_N);
 12769              		.loc 1 2983 6 is_stmt 1 view .LVU3933
2983:src/keys.c    ****      set_shift(SHIFT_N);
 12770              		.loc 1 2983 16 is_stmt 0 view .LVU3934
 12771 0038 154B     		ldr	r3, .L1277+4
 12772 003a 1D60     		str	r5, [r3]
2984:src/keys.c    ****    }
 12773              		.loc 1 2984 6 is_stmt 1 view .LVU3935
 12774              	.LVL1069:
 12775              	.LBB1350:
 12776              	.LBI1350:
  94:src/keys.c    **** 	enum shifts r = cur_shift();
 12777              		.loc 1 94 20 view .LVU3936
 12778              	.LBB1351:
  95:src/keys.c    **** 	State2.shifts = shift;
 12779              		.loc 1 95 2 view .LVU3937
 12780              	.LBB1352:
 12781              	.LBI1352:
  86:src/keys.c    **** 	enum shifts s = shift_down();
 12782              		.loc 1 86 13 view .LVU3938
 12783              	.LBB1353:
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12784              		.loc 1 87 2 view .LVU3939
  87:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12785              		.loc 1 87 18 is_stmt 0 view .LVU3940
 12786 003c FFF7FEFF 		bl	shift_down
 12787              	.LVL1070:
  88:src/keys.c    **** }
 12788              		.loc 1 88 2 is_stmt 1 view .LVU3941
 12789              	.LBE1353:
 12790              	.LBE1352:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12791              		.loc 1 96 2 view .LVU3942
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12792              		.loc 1 96 16 is_stmt 0 view .LVU3943
 12793 0040 124B     		ldr	r3, .L1277
 12794 0042 0022     		movs	r2, #0
 12795              	.LBE1351:
 12796              	.LBE1350:
2987:src/keys.c    ****  }
 12797              		.loc 1 2987 4 view .LVU3944
 12798 0044 2046     		mov	r0, r4
ARM GAS  /tmp/ccihcwFT.s 			page 348


 12799              	.LBB1355:
 12800              	.LBB1354:
  96:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12801              		.loc 1 96 16 view .LVU3945
 12802 0046 1A74     		strb	r2, [r3, #16]
  98:src/keys.c    **** }
 12803              		.loc 1 98 2 is_stmt 1 view .LVU3946
 12804              	.LVL1071:
  98:src/keys.c    **** }
 12805              		.loc 1 98 2 is_stmt 0 view .LVU3947
 12806              	.LBE1354:
 12807              	.LBE1355:
2987:src/keys.c    ****  }
 12808              		.loc 1 2987 4 is_stmt 1 view .LVU3948
2988:src/keys.c    ****  
 12809              		.loc 1 2988 2 is_stmt 0 view .LVU3949
 12810 0048 03B0     		add	sp, sp, #12
 12811              		.cfi_remember_state
 12812              		.cfi_def_cfa_offset 12
 12813              		@ sp needed
 12814 004a BDE83040 		pop	{r4, r5, lr}
 12815              		.cfi_restore 14
 12816              		.cfi_restore 5
 12817              		.cfi_restore 4
 12818              		.cfi_def_cfa_offset 0
 12819              	.LVL1072:
2987:src/keys.c    ****  }
 12820              		.loc 1 2987 4 view .LVU3950
 12821 004e FFF7FEBF 		b	process_keycode
 12822              	.LVL1073:
 12823              	.L1275:
 12824              		.cfi_restore_state
2974:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 12825              		.loc 1 2974 6 is_stmt 1 view .LVU3951
 12826 0052 104B     		ldr	r3, .L1277+8
 12827 0054 41F23010 		movw	r0, #4400
 12828 0058 9847     		blx	r3
 12829              	.LVL1074:
2974:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 12830              		.loc 1 2974 31 view .LVU3952
 12831 005a 0A20     		movs	r0, #10
 12832 005c 0E4B     		ldr	r3, .L1277+12
 12833 005e 9847     		blx	r3
 12834              	.LVL1075:
2974:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 12835              		.loc 1 2974 46 view .LVU3953
 12836 0060 0E4B     		ldr	r3, .L1277+16
 12837 0062 9847     		blx	r3
 12838              	.LVL1076:
2975:src/keys.c    ****        // Was error just wait for confirmation
 12839              		.loc 1 2975 6 view .LVU3954
2975:src/keys.c    ****        // Was error just wait for confirmation
 12840              		.loc 1 2975 11 is_stmt 0 view .LVU3955
 12841 0064 0E4B     		ldr	r3, .L1277+20
 12842 0066 0120     		movs	r0, #1
 12843 0068 9847     		blx	r3
 12844              	.LVL1077:
ARM GAS  /tmp/ccihcwFT.s 			page 349


2975:src/keys.c    ****        // Was error just wait for confirmation
 12845              		.loc 1 2975 9 view .LVU3956
 12846 006a 0228     		cmp	r0, #2
 12847 006c 01D1     		bne	.L1271
2977:src/keys.c    ****      }
 12848              		.loc 1 2977 8 is_stmt 1 view .LVU3957
 12849 006e 0D4B     		ldr	r3, .L1277+24
 12850 0070 9847     		blx	r3
 12851              	.LVL1078:
 12852              	.L1271:
2979:src/keys.c    ****      return;
 12853              		.loc 1 2979 6 view .LVU3958
 12854 0072 084B     		ldr	r3, .L1277+8
 12855 0074 42F26020 		movw	r0, #8800
 12856 0078 9847     		blx	r3
 12857              	.LVL1079:
2979:src/keys.c    ****      return;
 12858              		.loc 1 2979 31 view .LVU3959
 12859 007a 074B     		ldr	r3, .L1277+12
 12860 007c 0A20     		movs	r0, #10
 12861 007e 9847     		blx	r3
 12862              	.LVL1080:
2979:src/keys.c    ****      return;
 12863              		.loc 1 2979 46 view .LVU3960
 12864 0080 064B     		ldr	r3, .L1277+16
2988:src/keys.c    ****  
 12865              		.loc 1 2988 2 is_stmt 0 view .LVU3961
 12866 0082 03B0     		add	sp, sp, #12
 12867              		.cfi_def_cfa_offset 12
 12868              		@ sp needed
 12869 0084 BDE83040 		pop	{r4, r5, lr}
 12870              		.cfi_restore 14
 12871              		.cfi_restore 5
 12872              		.cfi_restore 4
 12873              		.cfi_def_cfa_offset 0
 12874              	.LVL1081:
2979:src/keys.c    ****      return;
 12875              		.loc 1 2979 46 view .LVU3962
 12876 0088 1847     		bx	r3	@ indirect register sibling call
 12877              	.LVL1082:
 12878              	.L1278:
 12879 008a 00BF     		.align	2
 12880              	.L1277:
 12881 008c 00000000 		.word	StateWhileOn
 12882 0090 00000000 		.word	nd_opcode
 12883 0094 F5020008 		.word	134218485
 12884 0098 05040008 		.word	134218757
 12885 009c F9020008 		.word	134218489
 12886 00a0 79030008 		.word	134218617
 12887 00a4 99030008 		.word	134218649
 12888              		.cfi_endproc
 12889              	.LFE57:
 12891              		.comm	nd_opcode,4,4
 12892              		.comm	NonProgrammable,4,4
 12893              		.comm	GoFast,4,4
 12894              		.comm	OpCodeDisplayPending,4,4
 12895              		.comm	OpCode,4,4
ARM GAS  /tmp/ccihcwFT.s 			page 350


 12896              		.comm	WasDataEntry,4,4
 12897              		.section	.bss.was_paused.9667,"aw",%nobits
 12898              		.align	2
 12899              		.set	.LANCHOR12,. + 0
 12902              	was_paused.9667:
 12903 0000 00000000 		.space	4
 12904              		.section	.rodata.alpha_arrows,"a"
 12905              		.align	2
 12908              	alpha_arrows:
 12909 0000 0D0E100F 		.ascii	"\015\016\020\017\003\004\237^\177"
 12909      03049F5E 
 12909      7F
 12910              		.section	.rodata.alpha_catalogue,"a"
 12911              		.align	2
 12914              	alpha_catalogue:
 12915 0000 0D4AC280 		.ascii	"\015J\302\200\236\256\012\242~\265\256k\252\356\274"
 12915      9EAE0AA2 
 12915      7EB5AE6B 
 12915      AAEEBC
 12916 000f 284AB0   		.ascii	"(J\260"
 12917              		.section	.rodata.alpha_compares,"a"
 12918              		.align	2
 12921              	alpha_compares:
 12922 0000 3C093D1D 		.ascii	"<\011=\035\012>[]{}"
 12922      0A3E5B5D 
 12922      7B7D
 12923              		.section	.rodata.alpha_letters,"a"
 12924              		.align	2
 12925              		.set	.LANCHOR3,. + 0
 12928              	alpha_letters:
 12929 0000 C0C1C2C3 		.ascii	"\300\301\302\303\210\304\305\306\307\204\310\311\312"
 12929      88C4C5C6 
 12929      C784C8C9 
 12929      CA
 12930 000d CB9ECCCD 		.ascii	"\313\236\314\315\316\317\320\321\322\323\324\025\325"
 12930      CECFD0D1 
 12930      D2D3D415 
 12930      D5
 12931 001a D618D8D9 		.ascii	"\326\030\330\331\332\333\334\001\031\002\335\032\336"
 12931      DADBDC01 
 12931      1902DD1A 
 12931      DE
 12932 0027 DF       		.ascii	"\337"
 12933              		.section	.rodata.alpha_letters_lower,"a"
 12934              		.align	2
 12935              		.set	.LANCHOR4,. + 0
 12938              	alpha_letters_lower:
 12939 0000 E0E1E2E3 		.ascii	"\340\341\342\343\211\344\345\346\347\205\350\351\352"
 12939      89E4E5E6 
 12939      E785E8E9 
 12939      EA
 12940 000d EB9EECED 		.ascii	"\353\236\354\355\356\357\360\361\362\363\364\026\365"
 12940      EEEFF0F1 
 12940      F2F3F416 
 12940      F5
 12941 001a F618F8F9 		.ascii	"\366\030\370\371\372\373\374\001\031\002\375\032\376"
 12941      FAFBFC01 
ARM GAS  /tmp/ccihcwFT.s 			page 351


 12941      1902FD1A 
 12941      FE
 12942 0027 FF       		.ascii	"\377"
 12943              		.section	.rodata.alpha_subscripts,"a"
 12944              		.align	2
 12947              	alpha_subscripts:
 12948 0000 B805B9BA 		.ascii	"\270\005\271\272\232\200\327\230\273\024\206\274\367"
 12948      9A80D798 
 12948      BB1486BC 
 12948      F7
 12949 000d 1BBDBE93 		.ascii	"\033\275\276\223\277\201\213\234\214\231\235\220\233"
 12949      BF818B9C 
 12949      8C999D90 
 12949      9B
 12950              		.section	.rodata.alpha_symbols,"a"
 12951              		.align	2
 12954              	alpha_symbols:
 12955 0000 2C3A3B27 		.ascii	",:;'\"*@_~%$\014\036\037\216\256\222`#"
 12955      222A405F 
 12955      7E25240C 
 12955      1E1F8EAE 
 12955      926023
 12956              		.section	.rodata.alphamap.9196,"a"
 12957              		.align	2
 12958              		.set	.LANCHOR9,. + 0
 12961              	alphamap.9196:
 12962 0000 41004100 		.ascii	"A\000A\000a\240"
 12962      61A0
 12963 0006 42004200 		.ascii	"B\000B\000b\241"
 12963      62A1
 12964 000c 43008200 		.ascii	"C\000\202\000c\242"
 12964      63A2
 12965 0012 44008300 		.ascii	"D\000\203\000d\243"
 12965      64A3
 12966 0018 450D4500 		.ascii	"E\015E\000e\244"
 12966      65A4
 12967 001e 46009400 		.ascii	"F\000\224\000f\264"
 12967      66B4
 12968 0024 47008200 		.ascii	"G\000\202\000g\242"
 12968      67A2
 12969 002a 48005800 		.ascii	"H\000X\000h\265"
 12969      68B5
 12970 0030 49004900 		.ascii	"I\000I\000i\250"
 12970      69A8
 12971 0036 4AAF0000 		.ascii	"J\257\000\000j\000"
 12971      6A00
 12972 003c 4B004B00 		.ascii	"K\000K\000k\251"
 12972      6BA9
 12973 0042 4C008A00 		.ascii	"L\000\212\000l\252"
 12973      6CAA
 12974 0048 00004800 		.ascii	"\000\000H\000\000\246"
 12974      00A6
 12975 004e 4D00AB17 		.ascii	"M\000\253\027m\253"
 12975      6DAB
 12976 0054 4E084E95 		.ascii	"N\010N\225n\254"
 12976      6EAC
 12977 005a 4F0097AF 		.ascii	"O\000\227\257o\267"
ARM GAS  /tmp/ccihcwFT.s 			page 352


 12977      6FB7
 12978 0060 00000000 		.ascii	"\000\000\000\000\000\000"
 12978      0000
 12979 0066 00000000 		.ascii	"\000\000\000\000\000\000"
 12979      0000
 12980 006c 50378F26 		.ascii	"P7\217&p\257"
 12980      70AF
 12981 0072 5138007C 		.ascii	"Q8\000|q\000"
 12981      7100
 12982 0078 5239520B 		.ascii	"R9R\013r\260"
 12982      72B0
 12983 007e 532F915C 		.ascii	"S/\221\\s\261"
 12983      73B1
 12984 0084 00000021 		.ascii	"\000\000\000!\000\000"
 12984      0000
 12985 008a 54345400 		.ascii	"T4T\000t\262"
 12985      74B2
 12986 0090 55350000 		.ascii	"U5\000\000u\000"
 12986      7500
 12987 0096 56360000 		.ascii	"V6\000\000v\000"
 12987      7600
 12988 009c 571C0000 		.ascii	"W\034\000\000w\000"
 12988      7700
 12989 00a2 0000003F 		.ascii	"\000\000\000?\000\000"
 12989      0000
 12990 00a8 58318D00 		.ascii	"X1\215\000x\255"
 12990      78AD
 12991 00ae 59325900 		.ascii	"Y2Y\000y\263"
 12991      79B3
 12992 00b4 5A335A00 		.ascii	"Z3Z\000z\245"
 12992      7AA5
 12993 00ba 2D282900 		.ascii	"-()\000\000\000"
 12993      0000
 12994 00c0 00000000 		.ascii	"\000\000\000\000\000\000"
 12994      0000
 12995 00c6 3A308720 		.ascii	":0\207 ;\247"
 12995      3BA7
 12996 00cc 2E2E9600 		.ascii	"..\226\000.\266"
 12996      2EB6
 12997 00d2 3F002100 		.ascii	"?\000!\000?\000"
 12997      3F00
 12998 00d8 202B3D00 		.ascii	" +=\000  "
 12998      2020
 12999 00de 00000000 		.ascii	"\000\000\000\000\000\000"
 12999      0000
 13000              		.section	.rodata.amap.9187,"a"
 13001              		.align	2
 13002              		.set	.LANCHOR10,. + 0
 13005              	amap.9187:
 13006 0000 04       		.byte	4
 13007 0001 000D00   		.ascii	"\000\015\000"
 13008 0004 05       		.byte	5
 13009 0005 000E09   		.ascii	"\000\016\011"
 13010 0008 2C       		.byte	44
 13011 0009 000D00   		.ascii	"\000\015\000"
 13012 000c 2D       		.byte	45
 13013 000d 000E09   		.ascii	"\000\016\011"
ARM GAS  /tmp/ccihcwFT.s 			page 353


 13014 0010 08       		.byte	8
 13015 0011 00000F   		.ascii	"\000\000\017"
 13016 0014 1F       		.byte	31
 13017 0015 00000C   		.ascii	"\000\000\014"
 13018 0018 21       		.byte	33
 13019 0019 00000A   		.ascii	"\000\000\012"
 13020 001c 26       		.byte	38
 13021 001d 00000B   		.ascii	"\000\000\013"
 13022              		.section	.rodata.catalogue,"a"
 13023              		.align	2
 13026              	catalogue:
 13027 0000 431A4660 		.ascii	"C\032F`\301_W\343\330\242;X\026\274}Dq\001\011tK\222"
 13027      C15F57E3 
 13027      D8A23B58 
 13027      16BC7D44 
 13027      71010974 
 13028 0016 F60D0643 		.ascii	"\366\015\006COV\235!H\2216\325\266iZfK\016o\027V\241"
 13028      4F569D21 
 13028      489136D5 
 13028      B6695A66 
 13028      4B0E6F17 
 13029 002c B4415C06 		.ascii	"\264A\\\006i%`\231vY\224`\032\306\354\303k[\024K\006"
 13029      69256099 
 13029      76599460 
 13029      1AC6ECC3 
 13029      6B5B144B 
 13030 0041 3DF05C07 		.ascii	"=\360\\\007\002>\321\243\013\017(\333&\021\263\015W"
 13030      023ED1A3 
 13030      0B0F28DB 
 13030      2611B30D 
 13030      57
 13031 0052 33290841 		.ascii	"3)\010A\320\224-\256+\033u\374\240'\253\202\250\237"
 13031      D0942DAE 
 13031      2B1B75FC 
 13031      A027AB82 
 13031      A89F
 13032 0064 ADEB5AE6 		.ascii	"\255\353Z\346\272\256\353\312\330\241*\331\224\221\235"
 13032      BAAEEBCA 
 13032      D8A12AD9 
 13032      94919D
 13033 0073 6799B671 		.ascii	"g\231\266q\260_\020\007\025\242o\326\325\251\241"
 13033      B05F1007 
 13033      15A26FD6 
 13033      D5A9A1
 13034              		.section	.rodata.catalogue_sizes.9465,"a"
 13035              		.align	2
 13036              		.set	.LANCHOR2,. + 0
 13039              	catalogue_sizes.9465:
 13040 0000 00681911 		.ascii	"\000h\031\0216<C~%4\016\023\012\011(\032LLX\016\023"
 13040      363C437E 
 13040      25340E13 
 13040      0A09281A 
 13040      4C4C580E 
 13041              		.section	.rodata.catalogues.9473,"a"
 13042              		.align	2
 13043              		.set	.LANCHOR6,. + 0
 13046              	catalogues.9473:
ARM GAS  /tmp/ccihcwFT.s 			page 354


 13047 0000 00000000 		.word	0
 13048 0004 00000000 		.word	catalogue
 13049 0008 00000000 		.word	cplx_catalogue
 13050 000c 00000000 		.word	stats_catalogue
 13051 0010 00000000 		.word	prob_catalogue
 13052 0014 00000000 		.word	int_catalogue
 13053 0018 00000000 		.word	prog_catalogue
 13054 001c 00000000 		.word	program_xfcn
 13055 0020 00000000 		.word	test_catalogue
 13056 0024 00000000 		.word	mode_catalogue
 13057 0028 00000000 		.word	alpha_catalogue
 13058 002c 00000000 		.word	alpha_symbols
 13059 0030 00000000 		.word	alpha_compares
 13060 0034 00000000 		.word	alpha_arrows
 13061 0038 00000000 		.word	alpha_letters
 13062 003c 00000000 		.word	alpha_subscripts
 13063 0040 00000000 		.word	0
 13064 0044 00000000 		.word	0
 13065 0048 00000000 		.word	0
 13066 004c 00000000 		.word	sums_catalogue
 13067 0050 00000000 		.word	matrix_catalogue
 13068              		.section	.rodata.cmap.9186,"a"
 13069              		.align	2
 13070              		.set	.LANCHOR11,. + 0
 13073              	cmap.9186:
 13074 0000 04       		.byte	4
 13075 0001 120012   		.ascii	"\022\000\022"
 13076 0004 05       		.byte	5
 13077 0005 090909   		.ascii	"\011\011\011"
 13078 0008 06       		.byte	6
 13079 0009 151515   		.ascii	"\025\025\025"
 13080 000c 0C       		.byte	12
 13081 000d 100011   		.ascii	"\020\000\021"
 13082 0010 19       		.byte	25
 13083 0011 040004   		.ascii	"\004\000\004"
 13084 0014 1A       		.byte	26
 13085 0015 030003   		.ascii	"\003\000\003"
 13086 0018 1B       		.byte	27
 13087 0019 130013   		.ascii	"\023\000\023"
 13088 001c 1C       		.byte	28
 13089 001d 140014   		.ascii	"\024\000\024"
 13090 0020 1E       		.byte	30
 13091 0021 171717   		.ascii	"\027\027\027"
 13092 0024 1F       		.byte	31
 13093 0025 080808   		.ascii	"\010\010\010"
 13094 0028 20       		.byte	32
 13095 0029 060606   		.ascii	"\006\006\006"
 13096 002c 21       		.byte	33
 13097 002d 010502   		.ascii	"\001\005\002"
 13098              		.section	.rodata.conv_catalogue,"a"
 13099              		.align	2
 13100              		.set	.LANCHOR5,. + 0
 13103              	conv_catalogue:
 13104 0000 DADB8C8A 		.ascii	"\332\333\214\212+-\3357'913\021\026\005\334\336\031"
 13104      2B2DDD37 
 13104      27393133 
 13104      111605DC 
ARM GAS  /tmp/ccihcwFT.s 			page 355


 13104      DE19
 13105 0012 1D1B1315 		.ascii	"\035\033\023\025\015\017\215\010\217\012*,GCE\027?0"
 13105      0D0F8D08 
 13105      8F0A2A2C 
 13105      47434517 
 13105      3F30
 13106 0024 32340400 		.ascii	"24\004\000\002\006&\" ($5/\001#\020\014\016!\022\024"
 13106      02062622 
 13106      20282435 
 13106      2F012310 
 13106      0C0E2112 
 13107 0039 3B181A1C 		.ascii	";\030\032\034\036).\01168>:<@%\337=\213\216\003\007"
 13107      1E292E09 
 13107      36383E3A 
 13107      3C4025DF 
 13107      3D8B8E03 
 13108 004e 4B49410B 		.ascii	"KIA\013JHFBD\037"
 13108      4A484642 
 13108      441F
 13109              		.section	.rodata.conv_mapping.9512,"a"
 13110              		.align	2
 13111              		.set	.LANCHOR8,. + 0
 13114              	conv_mapping.9512:
 13115 0000 8502     		.short	645
 13116 0002 8402     		.short	644
 13117 0004 8602     		.short	646
 13118 0006 8702     		.short	647
 13119 0008 8202     		.short	642
 13120 000a 8302     		.short	643
 13121 000c 3202     		.short	562
 13122 000e 3302     		.short	563
 13123 0010 3402     		.short	564
 13124 0012 3502     		.short	565
 13125 0014 3602     		.short	566
 13126 0016 3702     		.short	567
 13127              		.section	.rodata.cplx_catalogue,"a"
 13128              		.align	2
 13131              	cplx_catalogue:
 13132 0000 78278C6A 		.ascii	"x'\214j\001;\316\341\015\332x_W\332fvf\347\345\317{"
 13132      013BCEE1 
 13132      0DDA785F 
 13132      57DA6676 
 13132      66E7E5CF 
 13133 0015 9DB775DF 		.ascii	"\235\267u\337\242\353\011\265\370u\000"
 13133      A2EB09B5 
 13133      F87500
 13134              		.section	.rodata.disp.9323,"a"
 13135              		.align	2
 13136              		.set	.LANCHOR15,. + 0
 13139              	disp.9323:
 13140 0000 03       		.byte	3
 13141 0001 02       		.byte	2
 13142 0002 05       		.byte	5
 13143 0003 04       		.byte	4
 13144              		.section	.rodata.int_catalogue,"a"
 13145              		.align	2
 13148              	int_catalogue:
ARM GAS  /tmp/ccihcwFT.s 			page 356


 13149 0000 432F3306 		.ascii	"C/3\006\365=\233\342Y\275\020\257d4\365i\331&\240\224"
 13149      F53D9BE2 
 13149      59BD10AF 
 13149      6434F569 
 13149      D926A094 
 13150 0014 BE6FA65D 		.ascii	"\276o\246]\226\\\231F\261qn\3146\264\225\273n\363\336"
 13150      965C9946 
 13150      B1716ECC 
 13150      36B495BB 
 13150      6EF3DE
 13151 0027 EEBC2F41 		.ascii	"\356\274/A\240\373\274o,=\204\015L\244-\256+\033z\340"
 13151      A0FBBC6F 
 13151      2C3D840D 
 13151      4CA42DAE 
 13151      2B1B7AE0 
 13152 003b AAADEB5A 		.ascii	"\252\255\353Z\346\272\256\353\312\330\253I\020\007\031"
 13152      E6BAAEEB 
 13152      CAD8AB49 
 13152      100719
 13153 004a C7       		.ascii	"\307"
 13154              		.section	.rodata.linear_key_map.9157,"a"
 13155              		.align	2
 13156              		.set	.LANCHOR1,. + 0
 13159              	linear_key_map.9157:
 13160 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\011\012\013\014"
 13160      04050607 
 13160      08090A0B 
 13160      0C
 13161 000d 0D0E0F10 		.ascii	"\015\016\017\020\000\021\022\023\024\025\000\026\027"
 13161      00111213 
 13161      14150016 
 13161      17
 13162 001a 18191A00 		.ascii	"\030\031\032\000\033\034\035\036\037\000 !\"#$%%%%%"
 13162      1B1C1D1E 
 13162      1F002021 
 13162      22232425 
 13162      25252525 
 13163 002e 25       		.ascii	"%"
 13164              		.section	.rodata.linear_key_map.9161,"a"
 13165              		.align	2
 13166              		.set	.LANCHOR18,. + 0
 13169              	linear_key_map.9161:
 13170 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\"\"\"\011\012\013"
 13170      04050607 
 13170      08222222 
 13170      090A0B
 13171 000f 0C0D000E 		.ascii	"\014\015\000\016\017\020\021\022\000\023\024\025\026"
 13171      0F101112 
 13171      00131415 
 13171      16
 13172 001c 17001819 		.ascii	"\027\000\030\031\032\033\034\000\035\036\037 !\"\"\""
 13172      1A1B1C00 
 13172      1D1E1F20 
 13172      21222222 
 13173 002c 040522   		.ascii	"\004\005\""
 13174              		.section	.rodata.map.9173,"a"
 13175              		.align	2
ARM GAS  /tmp/ccihcwFT.s 			page 357


 13176              		.set	.LANCHOR0,. + 0
 13179              	map.9173:
 13180 0000 E8E9EAEB 		.ascii	"\350\351\352\353\377\177\177\177mnol\377\377\377\377"
 13180      FF7F7F7F 
 13180      6D6E6F6C 
 13180      FFFFFFFF 
 13181 0010 FF7F0708 		.ascii	"\377\177\007\010\011\177\177\347\005\006\177\177\344"
 13181      097F7FE7 
 13181      05067F7F 
 13181      E4
 13182 001d E5E67FFF 		.ascii	"\345\346\177\377\000\360\177\177\377\377\377\377\377"
 13182      00F07F7F 
 13182      FFFFFFFF 
 13182      FF
 13183 002a FF       		.ascii	"\377"
 13184              		.section	.rodata.matrix_catalogue,"a"
 13185              		.align	2
 13188              	matrix_catalogue:
 13189 0000 62DC4364 		.ascii	"b\334Cd\3305\334#m\205nXf\341\301n\230\2461\303bX\206"
 13189      D835DC23 
 13189      6D856E58 
 13189      66E1C16E 
 13189      98A631C3 
 13190 0017 1C       		.ascii	"\034"
 13191              		.section	.rodata.mode_catalogue,"a"
 13192              		.align	2
 13195              	mode_catalogue:
 13196 0000 2948C290 		.ascii	")H\302\220\213\276\306c\250\351\037\210\001\374|\270"
 13196      8BBEC663 
 13196      A8E91F88 
 13196      01FC7CB8 
 13197 0010 09818CCF 		.ascii	"\011\201\214\317$I\302lb\031I2H\232\0310\202\020\203"
 13197      2449C26C 
 13197      62194932 
 13197      489A1930 
 13197      821083
 13198 0023 C3704220 		.ascii	"\303pB \2072\012c\020\3072Js\024\306#\214\340\3409\301"
 13198      87320A63 
 13198      10C7324A 
 13198      7314C623 
 13198      8CE0E039 
 13199 0038 C862148D 		.ascii	"\310b\024\215\273\0173\310\231"
 13199      BB0F33C8 
 13199      99
 13200              		.section	.rodata.op_map.9240,"a"
 13201              		.align	2
 13202              		.set	.LANCHOR22,. + 0
 13205              	op_map.9240:
 13206 0000 1500     		.short	21
 13207 0002 0B02     		.short	523
 13208 0004 0003     		.short	768
 13209 0006 0A02     		.short	522
 13210 0008 1300     		.short	19
 13211 000a 1400     		.short	20
 13212 000c 0300     		.short	3
 13213 000e 0A00     		.short	10
 13214 0010 0701     		.short	263
ARM GAS  /tmp/ccihcwFT.s 			page 358


 13215 0012 0000     		.short	0
 13216 0014 6531     		.short	12645
 13217 0016 0300     		.short	3
 13218 0018 0200     		.short	2
 13219 001a 0100     		.short	1
 13220 001c 4400     		.short	68
 13221 001e 0C00     		.short	12
 13222 0020 0D00     		.short	13
 13223 0022 0E00     		.short	14
 13224 0024 0403     		.short	772
 13225 0026 2F00     		.short	47
 13226 0028 0900     		.short	9
 13227 002a 0A00     		.short	10
 13228 002c 0B00     		.short	11
 13229 002e 0303     		.short	771
 13230 0030 2E00     		.short	46
 13231 0032 0600     		.short	6
 13232 0034 0700     		.short	7
 13233 0036 0800     		.short	8
 13234 0038 0203     		.short	770
 13235 003a 3300     		.short	51
 13236 003c 0500     		.short	5
 13237 003e 0400     		.short	4
 13238 0040 3B01     		.short	315
 13239 0042 0103     		.short	769
 13240 0044 0001     		.short	256
 13241              		.section	.rodata.op_map.9263,"a"
 13242              		.align	2
 13243              		.set	.LANCHOR19,. + 0
 13246              	op_map.9263:
 13247 0000 0100     		.short	1
 13248 0002 0000     		.short	0
 13249 0004 20F2     		.short	-3552
 13250 0006 23F2     		.short	-3549
 13251 0008 21F2     		.short	-3551
 13252 000a 24F2     		.short	-3548
 13253 000c 22F2     		.short	-3550
 13254 000e 25F2     		.short	-3547
 13255 0010 47F1     		.short	-3769
 13256 0012 46F1     		.short	-3770
 13257 0014 4E01     		.short	334
 13258 0016 4D01     		.short	333
 13259 0018 5C01     		.short	348
 13260 001a 35F1     		.short	-3787
 13261 001c 5B01     		.short	347
 13262 001e 36F1     		.short	-3786
 13263 0020 3301     		.short	307
 13264 0022 37F1     		.short	-3785
 13265 0024 3300     		.short	51
 13266 0026 0C01     		.short	268
 13267 0028 2B00     		.short	43
 13268 002a 2C00     		.short	44
 13269 002c 028B     		.short	-29950
 13270 002e 088B     		.short	-29944
 13271 0030 0A8B     		.short	-29942
 13272 0032 108B     		.short	-29936
 13273 0034 4301     		.short	323
ARM GAS  /tmp/ccihcwFT.s 			page 359


 13274 0036 3D01     		.short	317
 13275 0038 0902     		.short	521
 13276 003a 0802     		.short	520
 13277 003c 1002     		.short	528
 13278 003e 0D02     		.short	525
 13279 0040 0F02     		.short	527
 13280 0042 0E02     		.short	526
 13281 0044 0003     		.short	768
 13282 0046 0803     		.short	776
 13283 0048 0BF2     		.short	-3573
 13284 004a 1603     		.short	790
 13285 004c 1203     		.short	786
 13286 004e 1303     		.short	787
 13287 0050 3DF2     		.short	-3523
 13288 0052 3EF2     		.short	-3522
 13289 0054 24F1     		.short	-3804
 13290 0056 1EF1     		.short	-3810
 13291 0058 75F2     		.short	-3467
 13292 005a 27F1     		.short	-3801
 13293 005c 0A02     		.short	522
 13294 005e 1602     		.short	534
 13295 0060 5100     		.short	81
 13296 0062 5200     		.short	82
 13297 0064 0000     		.short	0
 13298 0066 0100     		.short	1
 13299 0068 48F0     		.short	-4024
 13300 006a 4BF0     		.short	-4021
 13301 006c 47F0     		.short	-4025
 13302 006e 46F0     		.short	-4026
 13303 0070 77F2     		.short	-3465
 13304 0072 78F2     		.short	-3464
 13305 0074 3300     		.short	51
 13306 0076 3300     		.short	51
 13307 0078 0502     		.short	517
 13308 007a 0602     		.short	518
 13309 007c 0402     		.short	516
 13310 007e 0002     		.short	512
 13311 0080 4200     		.short	66
 13312 0082 3801     		.short	312
 13313 0084 3A00     		.short	58
 13314 0086 3B00     		.short	59
 13315 0088 0001     		.short	256
 13316 008a 0001     		.short	256
 13317              		.section	.rodata.op_map.9286,"a"
 13318              		.align	2
 13319              		.set	.LANCHOR21,. + 0
 13322              	op_map.9286:
 13323 0000 4C80     		.short	-32692
 13324 0002 4D80     		.short	-32691
 13325 0004 4E80     		.short	-32690
 13326 0006 4F80     		.short	-32689
 13327 0008 3300     		.short	51
 13328 000a 3300     		.short	51
 13329 000c 3300     		.short	51
 13330 000e 2180     		.short	-32735
 13331 0010 0801     		.short	264
 13332 0012 8780     		.short	-32633
ARM GAS  /tmp/ccihcwFT.s 			page 360


 13333 0014 1180     		.short	-32751
 13334 0016 7C02     		.short	636
 13335 0018 5560     		.short	24661
 13336 001a 3F01     		.short	319
 13337 001c 4580     		.short	-32699
 13338 001e 1C03     		.short	796
 13339 0020 1D03     		.short	797
 13340 0022 1E03     		.short	798
 13341 0024 0603     		.short	774
 13342 0026 2F02     		.short	559
 13343 0028 3300     		.short	51
 13344 002a 3300     		.short	51
 13345 002c 3300     		.short	51
 13346 002e 3300     		.short	51
 13347 0030 3300     		.short	51
 13348 0032 3300     		.short	51
 13349 0034 3300     		.short	51
 13350 0036 3300     		.short	51
 13351 0038 1640     		.short	16406
 13352 003a 0201     		.short	258
 13353 003c 6D80     		.short	-32659
 13354 003e 5001     		.short	336
 13355 0040 3300     		.short	51
 13356 0042 1540     		.short	16405
 13357 0044 0001     		.short	256
 13358              		.section	.rodata.op_map.9296,"a"
 13359              		.align	2
 13360              		.set	.LANCHOR17,. + 0
 13363              	op_map.9296:
 13364 0000 0100     		.short	1
 13365 0002 0100     		.short	1
 13366 0004 0000     		.short	0
 13367 0006 0000     		.short	0
 13368 0008 0B05     		.short	1291
 13369 000a 2005     		.short	1312
 13370 000c 2305     		.short	1315
 13371 000e 3300     		.short	51
 13372 0010 0006     		.short	1536
 13373 0012 2105     		.short	1313
 13374 0014 2405     		.short	1316
 13375 0016 3300     		.short	51
 13376 0018 0A05     		.short	1290
 13377 001a 2205     		.short	1314
 13378 001c 2505     		.short	1317
 13379 001e 3300     		.short	51
 13380 0020 3300     		.short	51
 13381 0022 4701     		.short	327
 13382 0024 4601     		.short	326
 13383 0026 3300     		.short	51
 13384 0028 3300     		.short	51
 13385 002a 3300     		.short	51
 13386 002c 3300     		.short	51
 13387 002e 3300     		.short	51
 13388 0030 15FF     		.short	-235
 13389 0032 3300     		.short	51
 13390 0034 3300     		.short	51
 13391 0036 3300     		.short	51
ARM GAS  /tmp/ccihcwFT.s 			page 361


 13392 0038 1AFF     		.short	-230
 13393 003a 3300     		.short	51
 13394 003c 3300     		.short	51
 13395 003e 8CFF     		.short	-116
 13396 0040 0901     		.short	265
 13397 0042 3300     		.short	51
 13398 0044 3300     		.short	51
 13399 0046 0A01     		.short	266
 13400 0048 0B01     		.short	267
 13401 004a 3300     		.short	51
 13402 004c 0D01     		.short	269
 13403 004e 0D01     		.short	269
 13404 0050 663F     		.short	16230
 13405 0052 3300     		.short	51
 13406 0054 3300     		.short	51
 13407 0056 1FFF     		.short	-225
 13408 0058 3805     		.short	1336
 13409 005a 3300     		.short	51
 13410 005c 3300     		.short	51
 13411 005e 3905     		.short	1337
 13412 0060 5521     		.short	8533
 13413 0062 3300     		.short	51
 13414 0064 3300     		.short	51
 13415 0066 5521     		.short	8533
 13416 0068 3300     		.short	51
 13417 006a 3300     		.short	51
 13418 006c 3300     		.short	51
 13419 006e 3300     		.short	51
 13420 0070 3300     		.short	51
 13421 0072 0905     		.short	1289
 13422 0074 0805     		.short	1288
 13423 0076 3300     		.short	51
 13424 0078 07A8     		.short	-22521
 13425 007a 1005     		.short	1296
 13426 007c 0D05     		.short	1293
 13427 007e 3300     		.short	51
 13428 0080 08A8     		.short	-22520
 13429 0082 0F05     		.short	1295
 13430 0084 0E05     		.short	1294
 13431 0086 3300     		.short	51
 13432 0088 09A8     		.short	-22519
 13433 008a 0006     		.short	1536
 13434 008c 0806     		.short	1544
 13435 008e 3300     		.short	51
 13436 0090 0406     		.short	1540
 13437 0092 0B05     		.short	1291
 13438 0094 1606     		.short	1558
 13439 0096 3300     		.short	51
 13440 0098 3300     		.short	51
 13441 009a 1206     		.short	1554
 13442 009c 1306     		.short	1555
 13443 009e 2F05     		.short	1327
 13444 00a0 04A8     		.short	-22524
 13445 00a2 3300     		.short	51
 13446 00a4 3300     		.short	51
 13447 00a6 3300     		.short	51
 13448 00a8 05A8     		.short	-22523
ARM GAS  /tmp/ccihcwFT.s 			page 362


 13449 00aa 3300     		.short	51
 13450 00ac 3300     		.short	51
 13451 00ae 3300     		.short	51
 13452 00b0 06A8     		.short	-22522
 13453 00b2 3300     		.short	51
 13454 00b4 3300     		.short	51
 13455 00b6 3300     		.short	51
 13456 00b8 0306     		.short	1539
 13457 00ba 0A05     		.short	1290
 13458 00bc 1605     		.short	1302
 13459 00be 1605     		.short	1302
 13460 00c0 3300     		.short	51
 13461 00c2 3300     		.short	51
 13462 00c4 3300     		.short	51
 13463 00c6 3300     		.short	51
 13464 00c8 01A8     		.short	-22527
 13465 00ca 0000     		.short	0
 13466 00cc 0100     		.short	1
 13467 00ce 3300     		.short	51
 13468 00d0 02A8     		.short	-22526
 13469 00d2 3300     		.short	51
 13470 00d4 3300     		.short	51
 13471 00d6 3300     		.short	51
 13472 00d8 03A8     		.short	-22525
 13473 00da 3300     		.short	51
 13474 00dc 3300     		.short	51
 13475 00de 3300     		.short	51
 13476 00e0 0206     		.short	1538
 13477 00e2 3300     		.short	51
 13478 00e4 3300     		.short	51
 13479 00e6 3300     		.short	51
 13480 00e8 3300     		.short	51
 13481 00ea 3300     		.short	51
 13482 00ec 3300     		.short	51
 13483 00ee 0201     		.short	258
 13484 00f0 00A8     		.short	-22528
 13485 00f2 0505     		.short	1285
 13486 00f4 0605     		.short	1286
 13487 00f6 3300     		.short	51
 13488 00f8 B801     		.short	440
 13489 00fa 0405     		.short	1284
 13490 00fc 0005     		.short	1280
 13491 00fe 3300     		.short	51
 13492 0100 3300     		.short	51
 13493 0102 3300     		.short	51
 13494 0104 3300     		.short	51
 13495 0106 3300     		.short	51
 13496 0108 0106     		.short	1537
 13497 010a 3300     		.short	51
 13498 010c 3300     		.short	51
 13499 010e 3300     		.short	51
 13500 0110 0001     		.short	256
 13501 0112 0001     		.short	256
 13502 0114 0001     		.short	256
 13503 0116 0001     		.short	256
 13504              		.section	.rodata.op_map.9308,"a"
 13505              		.align	2
ARM GAS  /tmp/ccihcwFT.s 			page 363


 13506              		.set	.LANCHOR13,. + 0
 13509              	op_map.9308:
 13510 0000 2A27     		.ascii	"*'"
 13511 0002 2B28     		.ascii	"+("
 13512 0004 2C29     		.ascii	",)"
 13513              		.section	.rodata.op_map.9322,"a"
 13514              		.align	2
 13515              		.set	.LANCHOR14,. + 0
 13518              	op_map.9322:
 13519 0000 1A02     		.short	538
 13520 0002 7B02     		.short	635
 13521 0004 1B02     		.short	539
 13522 0006 7A02     		.short	634
 13523 0008 1C02     		.short	540
 13524 000a 3300     		.short	51
 13525              		.section	.rodata.op_map2.9264,"a"
 13526              		.align	2
 13527              		.set	.LANCHOR20,. + 0
 13530              	op_map2.9264:
 13531 0000 3300     		.short	51
 13532 0002 3300     		.short	51
 13533 0004 0003     		.short	768
 13534 0006 0A02     		.short	522
 13535              		.section	.rodata.opcode_breaks,"a"
 13536              		.align	2
 13537              		.set	.LANCHOR7,. + 0
 13540              	opcode_breaks:
 13541 0000 34C0992F 		.ascii	"4\300\231/\014\231/"
 13541      0C992F
 13542              		.section	.rodata.prob_catalogue,"a"
 13543              		.align	2
 13546              	prob_catalogue:
 13547 0000 50D42581 		.ascii	"P\324%\201DV\025u\235YP\023\365}ANU\324\351;S\024\265"
 13547      44561575 
 13547      9D595013 
 13547      F57D414E 
 13547      55D4E93B 
 13548 0017 8D4D5495 		.ascii	"\215MT\225\025\225SUUE\231VS\324\345\221PRT\205\211"
 13548      15955355 
 13548      55459956 
 13548      53D4E591 
 13548      50525485 
 13549 002c 4A519455 		.ascii	"JQ\224U\205GM\225\304\3358OS\305y>V\223\004\3215L\325"
 13549      85474D95 
 13549      C4DD384F 
 13549      53C5793E 
 13549      569304D1 
 13550 0043 B0       		.ascii	"\260"
 13551              		.section	.rodata.prog_catalogue,"a"
 13552              		.align	2
 13555              	prog_catalogue:
 13556 0000 B1CD1C6C 		.ascii	"\261\315\034ly\035G\201\310t*1\233@B\263,\341\272\222"
 13556      791D4781 
 13556      C8742A31 
 13556      9B4042B3 
 13556      2CE1BA92 
 13557 0014 B8CE0B66 		.ascii	"\270\316\013f\3323-\0336\317\302\216#\220\3478\316\214"
ARM GAS  /tmp/ccihcwFT.s 			page 364


 13557      DA332D1B 
 13557      36CFC28E 
 13557      2390E738 
 13557      CE8C
 13558 0026 30DE3770 		.ascii	"0\3367p\260\320\3349G\003\233\011\254\315\361\330\315"
 13558      B0D0DC39 
 13558      47039B09 
 13558      ACCDF1D8 
 13558      CD
 13559 0037 1B4B12BC 		.ascii	"\033K\022\274\262,\016\033\030\322\015\353#\002\244"
 13559      B22C0E1B 
 13559      18D20DEB 
 13559      2302A4
 13560 0046 2A7030E8 		.ascii	"*p0\350\313\250\252<\000\256+o\374X"
 13560      CBA8AA3C 
 13560      00AE2B6F 
 13560      FC58
 13561              		.section	.rodata.program_xfcn,"a"
 13562              		.align	2
 13565              	program_xfcn:
 13566 0000 431A4662 		.ascii	"C\032Fb\3630W\325\372\365=\212#\265\201k\333\342Y\275"
 13566      F33057D5 
 13566      FAF53D8A 
 13566      23B5816B 
 13566      DBE259BD 
 13567 0014 1F511C40 		.ascii	"\037Q\034@B]\022\344\275\203A\257d4\365i\322\024\211"
 13567      425D12E4 
 13567      BD8341AF 
 13567      6434F569 
 13567      D21489
 13568 0027 136D5B66 		.ascii	"\023m[f\225\246d\260\346\361uj\011F\321\005p\031\244"
 13568      95A664B0 
 13568      E6F1756A 
 13568      0946D105 
 13568      7019A4
 13569 003a 9582BE6F 		.ascii	"\225\202\276o\246]\226\\\231F\001\254\\[\263\015\255"
 13569      A65D965C 
 13569      994601AC 
 13569      5C5BB30D 
 13569      AD
 13570 004b 6C512C18 		.ascii	"lQ,\030\225\273n\363\336\356\2740[\323\001\300\206\203"
 13570      95BB6EF3 
 13570      DEEEBC30 
 13570      5BD301C0 
 13570      8683
 13571 005d ED1ABC4C 		.ascii	"\355\032\274L+\313\017(\333&\021\263\015W3)\010A\320"
 13571      2BCB0F28 
 13571      DB2611B3 
 13571      0D573329 
 13571      0841D0
 13572 0070 942DAE2B 		.ascii	"\224-\256+\033u\374\240'\253\202\250\237\255\353Z\346"
 13572      1B75FCA0 
 13572      27AB82A8 
 13572      9FADEB5A 
 13572      E6
 13573 0081 BAAEEBCA 		.ascii	"\272\256\353\312\330\241*\331\224\221\235g\231\266q"
 13573      D8A12AD9 
ARM GAS  /tmp/ccihcwFT.s 			page 365


 13573      94919D67 
 13573      99B671
 13574 0090 B05F1007 		.ascii	"\260_\020\007\031\305h\233\365\265jh\\p"
 13574      19C5689B 
 13574      F5B56A68 
 13574      5C70
 13575              		.section	.rodata.smap.9188,"a"
 13576              		.align	2
 13577              		.set	.LANCHOR16,. + 0
 13580              	smap.9188:
 13581 0000 00010002 		.ascii	"\000\001\000\002"
 13582              		.section	.rodata.stats_catalogue,"a"
 13583              		.align	2
 13586              	stats_catalogue:
 13587 0000 1805C1A0 		.ascii	"\030\005\301\240]\027\311qXa\026\205\225\240T\027\205"
 13587      5D17C971 
 13587      58611685 
 13587      95A05417 
 13587      85
 13588 0011 514C575A 		.ascii	"QLWZ\200"
 13588      80
 13589              		.section	.rodata.sums_catalogue,"a"
 13590              		.align	2
 13593              	sums_catalogue:
 13594 0000 1444B134 		.ascii	"\024D\2614J\023\204\301 E\021\004\361\034I\021\205\000"
 13594      4A1384C1 
 13594      20451104 
 13594      F11C4911 
 13594      8500
 13595              		.section	.rodata.test_catalogue,"a"
 13596              		.align	2
 13599              	test_catalogue:
 13600 0000 BE2F7C54 		.ascii	"\276/|T\353/\313\333\226\351\272\356\242\362\344\271"
 13600      EB2FCBDB 
 13600      96E9BAEE 
 13600      A2F2E4B9 
 13601 0010 AE8B9CD3 		.ascii	"\256\213\234\323.\357\353L\2356\213\202\370\2725\013"
 13601      2EEFEB4C 
 13601      9D368B82 
 13601      F8BA350B 
 13602 0020 9340F0B0 		.ascii	"\223@\360\260,\023T\326\257\354;\010\267<@"
 13602      2C1354D6 
 13602      AFEC3B08 
 13602      B73C40
 13603              		.text
 13604              	.Letext0:
 13605              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 13606              		.file 3 "dmcp/dmcp.h"
 13607              		.file 4 "src/decNumber/decContext.h"
 13608              		.file 5 "src/decNumber/decNumber.h"
 13609              		.file 6 "src/decNumber/decimal64.h"
 13610              		.file 7 "src/decNumber/decimal128.h"
 13611              		.file 8 "src/xeq.h"
 13612              		.file 9 "src/data.h"
 13613              		.file 10 "src/keys.h"
 13614              		.file 11 "src/display.h"
 13615              		.file 12 "src/consts.h"
ARM GAS  /tmp/ccihcwFT.s 			page 366


 13616              		.file 13 "src/storage.h"
 13617              		.file 14 "src/stats.h"
 13618              		.file 15 "src/catalogues.h"
 13619              		.file 16 "src/lcd.h"
 13620              		.file 17 "src/int.h"
ARM GAS  /tmp/ccihcwFT.s 			page 367


DEFINED SYMBOLS
                            *ABS*:0000000000000000 keys.c
     /tmp/ccihcwFT.s:18     .text.gtodot_digit:0000000000000000 $t
     /tmp/ccihcwFT.s:26     .text.gtodot_digit:0000000000000000 gtodot_digit
     /tmp/ccihcwFT.s:110    .text.gtodot_digit:0000000000000054 $d
     /tmp/ccihcwFT.s:117    .text.check_f_key:0000000000000000 $t
     /tmp/ccihcwFT.s:124    .text.check_f_key:0000000000000000 check_f_key
     /tmp/ccihcwFT.s:202    .text.check_f_key:0000000000000038 $d
     /tmp/ccihcwFT.s:208    .text.is_label_or_end_at:0000000000000000 $t
     /tmp/ccihcwFT.s:215    .text.is_label_or_end_at:0000000000000000 is_label_or_end_at
     /tmp/ccihcwFT.s:271    .text.advance_to_next_label:0000000000000000 $t
     /tmp/ccihcwFT.s:278    .text.advance_to_next_label:0000000000000000 advance_to_next_label
     /tmp/ccihcwFT.s:359    .text.advance_to_next_label:0000000000000048 $d
     /tmp/ccihcwFT.s:364    .text.init_cat:0000000000000000 $t
     /tmp/ccihcwFT.s:371    .text.init_cat:0000000000000000 init_cat
     /tmp/ccihcwFT.s:684    .text.init_cat:00000000000000e4 $d
     /tmp/ccihcwFT.s:690    .text.advance_to_previous_label:0000000000000000 $t
     /tmp/ccihcwFT.s:697    .text.advance_to_previous_label:0000000000000000 advance_to_previous_label
     /tmp/ccihcwFT.s:782    .text.advance_to_previous_label:000000000000004c $d
     /tmp/ccihcwFT.s:787    .text.check_confirm.part.0:0000000000000000 $t
     /tmp/ccihcwFT.s:794    .text.check_confirm.part.0:0000000000000000 check_confirm.part.0
     /tmp/ccihcwFT.s:848    .text.check_confirm.part.0:0000000000000028 $d
                            *COM*:0000000000000004 NonProgrammable
     /tmp/ccihcwFT.s:855    .text.init_arg.part.0:0000000000000000 $t
     /tmp/ccihcwFT.s:862    .text.init_arg.part.0:0000000000000000 init_arg.part.0
     /tmp/ccihcwFT.s:904    .text.init_arg.part.0:0000000000000024 $d
     /tmp/ccihcwFT.s:909    .text.reset_arg:0000000000000000 $t
     /tmp/ccihcwFT.s:916    .text.reset_arg:0000000000000000 reset_arg
     /tmp/ccihcwFT.s:960    .text.reset_arg:0000000000000018 $d
     /tmp/ccihcwFT.s:965    .text.arg_eval:0000000000000000 $t
     /tmp/ccihcwFT.s:972    .text.arg_eval:0000000000000000 arg_eval
     /tmp/ccihcwFT.s:1094   .text.arg_eval:0000000000000074 $d
     /tmp/ccihcwFT.s:1101   .text.process_arg_shuffle:0000000000000000 $t
     /tmp/ccihcwFT.s:1108   .text.process_arg_shuffle:0000000000000000 process_arg_shuffle
     /tmp/ccihcwFT.s:1166   .text.process_arg_shuffle:000000000000002c $d
     /tmp/ccihcwFT.s:1171   .text.arg_digit:0000000000000000 $t
     /tmp/ccihcwFT.s:1178   .text.arg_digit:0000000000000000 arg_digit
     /tmp/ccihcwFT.s:1439   .text.arg_digit:00000000000000fc $d
     /tmp/ccihcwFT.s:1447   .text.intltr:0000000000000000 $t
     /tmp/ccihcwFT.s:1454   .text.intltr:0000000000000000 intltr
     /tmp/ccihcwFT.s:1517   .text.intltr:0000000000000030 $d
     /tmp/ccihcwFT.s:1523   .text.set_window:0000000000000000 $t
     /tmp/ccihcwFT.s:1530   .text.set_window:0000000000000000 set_window
     /tmp/ccihcwFT.s:1677   .text.set_window:000000000000008c $d
     /tmp/ccihcwFT.s:1684   .text.arg_storcl:0000000000000000 $t
     /tmp/ccihcwFT.s:1691   .text.arg_storcl:0000000000000000 arg_storcl
     /tmp/ccihcwFT.s:1807   .text.arg_storcl:0000000000000040 $d
     /tmp/ccihcwFT.s:1812   .text.process_arg:0000000000000000 $t
     /tmp/ccihcwFT.s:1819   .text.process_arg:0000000000000000 process_arg
     /tmp/ccihcwFT.s:2025   .text.process_arg:000000000000008a $d
     /tmp/ccihcwFT.s:2029   .text.process_arg:0000000000000090 $t
     /tmp/ccihcwFT.s:2118   .text.process_arg:00000000000000f0 $d
     /tmp/ccihcwFT.s:2165   .text.process_arg:00000000000001a8 $t
     /tmp/ccihcwFT.s:2563   .text.process_arg:000000000000032c $d
     /tmp/ccihcwFT.s:2575   .text.process_arg:0000000000000340 $t
     /tmp/ccihcwFT.s:3070   .text.process_arg:0000000000000550 $d
     /tmp/ccihcwFT.s:3075   .text.cur_shift:0000000000000000 $t
ARM GAS  /tmp/ccihcwFT.s 			page 368


     /tmp/ccihcwFT.s:3083   .text.cur_shift:0000000000000000 cur_shift
     /tmp/ccihcwFT.s:3111   .text.cur_shift:0000000000000010 $d
     /tmp/ccihcwFT.s:3116   .text.reset_shift:0000000000000000 $t
     /tmp/ccihcwFT.s:3124   .text.reset_shift:0000000000000000 reset_shift
     /tmp/ccihcwFT.s:3182   .text.reset_shift:0000000000000014 $d
     /tmp/ccihcwFT.s:3187   .text.keycode_to_row_column:0000000000000000 $t
     /tmp/ccihcwFT.s:3195   .text.keycode_to_row_column:0000000000000000 keycode_to_row_column
     /tmp/ccihcwFT.s:3223   .text.keycode_to_row_column:0000000000000020 $d
     /tmp/ccihcwFT.s:3228   .text.row_column_to_keycode:0000000000000000 $t
     /tmp/ccihcwFT.s:3236   .text.row_column_to_keycode:0000000000000000 row_column_to_keycode
     /tmp/ccihcwFT.s:3294   .text.row_column_to_keycode:000000000000003c $d
     /tmp/ccihcwFT.s:3299   .text.keycode_to_digit_or_register:0000000000000000 $t
     /tmp/ccihcwFT.s:3307   .text.keycode_to_digit_or_register:0000000000000000 keycode_to_digit_or_register
     /tmp/ccihcwFT.s:3343   .text.keycode_to_digit_or_register:000000000000000c $d
     /tmp/ccihcwFT.s:3349   .text.init_state:0000000000000000 $t
     /tmp/ccihcwFT.s:3357   .text.init_state:0000000000000000 init_state
     /tmp/ccihcwFT.s:3463   .text.init_state:000000000000005c $d
     /tmp/ccihcwFT.s:3469   .text.soft_init_state:0000000000000000 $t
     /tmp/ccihcwFT.s:3477   .text.soft_init_state:0000000000000000 soft_init_state
     /tmp/ccihcwFT.s:3572   .text.soft_init_state:0000000000000048 $d
     /tmp/ccihcwFT.s:3578   .text.current_catalogue_max:0000000000000000 $t
     /tmp/ccihcwFT.s:3586   .text.current_catalogue_max:0000000000000000 current_catalogue_max
     /tmp/ccihcwFT.s:3607   .text.current_catalogue_max:000000000000000c $d
     /tmp/ccihcwFT.s:3613   .text.current_catalogue:0000000000000000 $t
     /tmp/ccihcwFT.s:3621   .text.current_catalogue:0000000000000000 current_catalogue
     /tmp/ccihcwFT.s:3877   .text.current_catalogue:00000000000000c8 $d
     /tmp/ccihcwFT.s:3887   .text.process_catalogue:0000000000000000 $t
     /tmp/ccihcwFT.s:3894   .text.process_catalogue:0000000000000000 process_catalogue
     /tmp/ccihcwFT.s:4223   .text.process_catalogue:00000000000000fe $d
     /tmp/ccihcwFT.s:4255   .text.process_catalogue:000000000000011e $t
     /tmp/ccihcwFT.s:4763   .text.process_catalogue:00000000000002dc $d
     /tmp/ccihcwFT.s:4784   .text.process_catalogue:00000000000002fc $t
     /tmp/ccihcwFT.s:4814   .text.find_pos:0000000000000000 $t
     /tmp/ccihcwFT.s:4822   .text.find_pos:0000000000000000 find_pos
     /tmp/ccihcwFT.s:4995   .text.find_pos:0000000000000080 $d
     /tmp/ccihcwFT.s:5001   .text.get_alpha_state:0000000000000000 $t
     /tmp/ccihcwFT.s:5009   .text.get_alpha_state:0000000000000000 get_alpha_state
     /tmp/ccihcwFT.s:5041   .text.get_alpha_state:0000000000000020 $d
     /tmp/ccihcwFT.s:5047   .rodata.process_keycode.str1.4:0000000000000000 $d
     /tmp/ccihcwFT.s:5057   .text.process_keycode:0000000000000000 $t
     /tmp/ccihcwFT.s:5065   .text.process_keycode:0000000000000000 process_keycode
     /tmp/ccihcwFT.s:5586   .text.process_keycode:0000000000000260 $d
                            *COM*:0000000000000004 OpCode
                            *COM*:0000000000000004 GoFast
                            *COM*:0000000000000004 OpCodeDisplayPending
                            *COM*:0000000000000004 WasDataEntry
     /tmp/ccihcwFT.s:5605   .text.process_keycode:00000000000002a0 $t
     /tmp/ccihcwFT.s:5722   .text.process_keycode:000000000000031a $d
     /tmp/ccihcwFT.s:5769   .text.process_keycode:0000000000000376 $t
     /tmp/ccihcwFT.s:5977   .text.process_keycode:0000000000000450 $d
     /tmp/ccihcwFT.s:5987   .text.process_keycode:0000000000000474 $t
     /tmp/ccihcwFT.s:6291   .text.process_keycode:00000000000005b8 $d
                            *COM*:0000000000000004 nd_opcode
     /tmp/ccihcwFT.s:6309   .text.process_keycode:00000000000005f4 $t
     /tmp/ccihcwFT.s:6441   .text.process_keycode:000000000000068e $d
     /tmp/ccihcwFT.s:6471   .text.process_keycode:00000000000006b0 $d
     /tmp/ccihcwFT.s:6514   .text.process_keycode:000000000000075c $t
ARM GAS  /tmp/ccihcwFT.s 			page 369


     /tmp/ccihcwFT.s:6747   .text.process_keycode:0000000000000844 $d
     /tmp/ccihcwFT.s:6756   .text.process_keycode:0000000000000868 $t
     /tmp/ccihcwFT.s:6828   .text.process_keycode:00000000000008ac $d
     /tmp/ccihcwFT.s:6847   .text.process_keycode:00000000000008d0 $t
     /tmp/ccihcwFT.s:6855   .text.process_keycode:00000000000008de $d
     /tmp/ccihcwFT.s:6881   .text.process_keycode:00000000000008f8 $t
     /tmp/ccihcwFT.s:6930   .text.process_keycode:0000000000000938 $d
     /tmp/ccihcwFT.s:6934   .text.process_keycode:0000000000000948 $t
     /tmp/ccihcwFT.s:7947   .text.process_keycode:0000000000000ccc $d
     /tmp/ccihcwFT.s:7959   .text.process_keycode:0000000000000cf0 $t
     /tmp/ccihcwFT.s:8686   .text.process_keycode:0000000000000f64 $d
     /tmp/ccihcwFT.s:8964   .text.process_keycode:0000000000001064 $d
     /tmp/ccihcwFT.s:8975   .text.process_keycode:0000000000001084 $t
     /tmp/ccihcwFT.s:8987   .text.process_keycode:00000000000010a0 $d
     /tmp/ccihcwFT.s:9007   .text.process_keycode:00000000000010f0 $t
     /tmp/ccihcwFT.s:9206   .text.process_keycode:000000000000118a $d
     /tmp/ccihcwFT.s:9224   .text.process_keycode:000000000000119c $t
     /tmp/ccihcwFT.s:9778   .text.process_keycode:0000000000001368 $d
     /tmp/ccihcwFT.s:9812   .text.process_keycode:00000000000013ac $t
     /tmp/ccihcwFT.s:9828   .text.process_keycode:00000000000013bc $d
     /tmp/ccihcwFT.s:9837   .text.process_keycode:00000000000013cc $t
     /tmp/ccihcwFT.s:9884   .text.process_keycode:00000000000013f4 $d
     /tmp/ccihcwFT.s:9919   .text.process_keycode:000000000000147c $t
     /tmp/ccihcwFT.s:10560  .text.process_keycode:0000000000001672 $d
     /tmp/ccihcwFT.s:10638  .text.process_keycode:00000000000016c0 $d
     /tmp/ccihcwFT.s:10653  .text.process_keycode:00000000000016e0 $t
     /tmp/ccihcwFT.s:11222  .text.process_keycode:0000000000001980 $d
     /tmp/ccihcwFT.s:11264  .text.process_keycode:0000000000001a24 $t
     /tmp/ccihcwFT.s:11357  .text.process_keycode:0000000000001a8c $d
     /tmp/ccihcwFT.s:11365  .text.process_keycode:0000000000001a9c $t
     /tmp/ccihcwFT.s:12192  .text.process_keycode:0000000000001dd4 $d
     /tmp/ccihcwFT.s:12200  .text.process_keycode:0000000000001ddc $t
     /tmp/ccihcwFT.s:12655  .text.process_keycode:0000000000001f90 $d
     /tmp/ccihcwFT.s:12665  .text.process_keycode_with_shift:0000000000000000 $t
     /tmp/ccihcwFT.s:12673  .text.process_keycode_with_shift:0000000000000000 process_keycode_with_shift
     /tmp/ccihcwFT.s:12881  .text.process_keycode_with_shift:000000000000008c $d
     /tmp/ccihcwFT.s:12898  .bss.was_paused.9667:0000000000000000 $d
     /tmp/ccihcwFT.s:12902  .bss.was_paused.9667:0000000000000000 was_paused.9667
     /tmp/ccihcwFT.s:12905  .rodata.alpha_arrows:0000000000000000 $d
     /tmp/ccihcwFT.s:12908  .rodata.alpha_arrows:0000000000000000 alpha_arrows
     /tmp/ccihcwFT.s:12911  .rodata.alpha_catalogue:0000000000000000 $d
     /tmp/ccihcwFT.s:12914  .rodata.alpha_catalogue:0000000000000000 alpha_catalogue
     /tmp/ccihcwFT.s:12918  .rodata.alpha_compares:0000000000000000 $d
     /tmp/ccihcwFT.s:12921  .rodata.alpha_compares:0000000000000000 alpha_compares
     /tmp/ccihcwFT.s:12924  .rodata.alpha_letters:0000000000000000 $d
     /tmp/ccihcwFT.s:12928  .rodata.alpha_letters:0000000000000000 alpha_letters
     /tmp/ccihcwFT.s:12934  .rodata.alpha_letters_lower:0000000000000000 $d
     /tmp/ccihcwFT.s:12938  .rodata.alpha_letters_lower:0000000000000000 alpha_letters_lower
     /tmp/ccihcwFT.s:12944  .rodata.alpha_subscripts:0000000000000000 $d
     /tmp/ccihcwFT.s:12947  .rodata.alpha_subscripts:0000000000000000 alpha_subscripts
     /tmp/ccihcwFT.s:12951  .rodata.alpha_symbols:0000000000000000 $d
     /tmp/ccihcwFT.s:12954  .rodata.alpha_symbols:0000000000000000 alpha_symbols
     /tmp/ccihcwFT.s:12957  .rodata.alphamap.9196:0000000000000000 $d
     /tmp/ccihcwFT.s:12961  .rodata.alphamap.9196:0000000000000000 alphamap.9196
     /tmp/ccihcwFT.s:13001  .rodata.amap.9187:0000000000000000 $d
     /tmp/ccihcwFT.s:13005  .rodata.amap.9187:0000000000000000 amap.9187
     /tmp/ccihcwFT.s:13023  .rodata.catalogue:0000000000000000 $d
ARM GAS  /tmp/ccihcwFT.s 			page 370


     /tmp/ccihcwFT.s:13026  .rodata.catalogue:0000000000000000 catalogue
     /tmp/ccihcwFT.s:13035  .rodata.catalogue_sizes.9465:0000000000000000 $d
     /tmp/ccihcwFT.s:13039  .rodata.catalogue_sizes.9465:0000000000000000 catalogue_sizes.9465
     /tmp/ccihcwFT.s:13042  .rodata.catalogues.9473:0000000000000000 $d
     /tmp/ccihcwFT.s:13046  .rodata.catalogues.9473:0000000000000000 catalogues.9473
     /tmp/ccihcwFT.s:13131  .rodata.cplx_catalogue:0000000000000000 cplx_catalogue
     /tmp/ccihcwFT.s:13586  .rodata.stats_catalogue:0000000000000000 stats_catalogue
     /tmp/ccihcwFT.s:13546  .rodata.prob_catalogue:0000000000000000 prob_catalogue
     /tmp/ccihcwFT.s:13148  .rodata.int_catalogue:0000000000000000 int_catalogue
     /tmp/ccihcwFT.s:13555  .rodata.prog_catalogue:0000000000000000 prog_catalogue
     /tmp/ccihcwFT.s:13565  .rodata.program_xfcn:0000000000000000 program_xfcn
     /tmp/ccihcwFT.s:13599  .rodata.test_catalogue:0000000000000000 test_catalogue
     /tmp/ccihcwFT.s:13195  .rodata.mode_catalogue:0000000000000000 mode_catalogue
     /tmp/ccihcwFT.s:13593  .rodata.sums_catalogue:0000000000000000 sums_catalogue
     /tmp/ccihcwFT.s:13188  .rodata.matrix_catalogue:0000000000000000 matrix_catalogue
     /tmp/ccihcwFT.s:13069  .rodata.cmap.9186:0000000000000000 $d
     /tmp/ccihcwFT.s:13073  .rodata.cmap.9186:0000000000000000 cmap.9186
     /tmp/ccihcwFT.s:13099  .rodata.conv_catalogue:0000000000000000 $d
     /tmp/ccihcwFT.s:13103  .rodata.conv_catalogue:0000000000000000 conv_catalogue
     /tmp/ccihcwFT.s:13110  .rodata.conv_mapping.9512:0000000000000000 $d
     /tmp/ccihcwFT.s:13114  .rodata.conv_mapping.9512:0000000000000000 conv_mapping.9512
     /tmp/ccihcwFT.s:13128  .rodata.cplx_catalogue:0000000000000000 $d
     /tmp/ccihcwFT.s:13135  .rodata.disp.9323:0000000000000000 $d
     /tmp/ccihcwFT.s:13139  .rodata.disp.9323:0000000000000000 disp.9323
     /tmp/ccihcwFT.s:13145  .rodata.int_catalogue:0000000000000000 $d
     /tmp/ccihcwFT.s:13155  .rodata.linear_key_map.9157:0000000000000000 $d
     /tmp/ccihcwFT.s:13159  .rodata.linear_key_map.9157:0000000000000000 linear_key_map.9157
     /tmp/ccihcwFT.s:13165  .rodata.linear_key_map.9161:0000000000000000 $d
     /tmp/ccihcwFT.s:13169  .rodata.linear_key_map.9161:0000000000000000 linear_key_map.9161
     /tmp/ccihcwFT.s:13175  .rodata.map.9173:0000000000000000 $d
     /tmp/ccihcwFT.s:13179  .rodata.map.9173:0000000000000000 map.9173
     /tmp/ccihcwFT.s:13185  .rodata.matrix_catalogue:0000000000000000 $d
     /tmp/ccihcwFT.s:13192  .rodata.mode_catalogue:0000000000000000 $d
     /tmp/ccihcwFT.s:13201  .rodata.op_map.9240:0000000000000000 $d
     /tmp/ccihcwFT.s:13205  .rodata.op_map.9240:0000000000000000 op_map.9240
     /tmp/ccihcwFT.s:13242  .rodata.op_map.9263:0000000000000000 $d
     /tmp/ccihcwFT.s:13246  .rodata.op_map.9263:0000000000000000 op_map.9263
     /tmp/ccihcwFT.s:13318  .rodata.op_map.9286:0000000000000000 $d
     /tmp/ccihcwFT.s:13322  .rodata.op_map.9286:0000000000000000 op_map.9286
     /tmp/ccihcwFT.s:13359  .rodata.op_map.9296:0000000000000000 $d
     /tmp/ccihcwFT.s:13363  .rodata.op_map.9296:0000000000000000 op_map.9296
     /tmp/ccihcwFT.s:13505  .rodata.op_map.9308:0000000000000000 $d
     /tmp/ccihcwFT.s:13509  .rodata.op_map.9308:0000000000000000 op_map.9308
     /tmp/ccihcwFT.s:13514  .rodata.op_map.9322:0000000000000000 $d
     /tmp/ccihcwFT.s:13518  .rodata.op_map.9322:0000000000000000 op_map.9322
     /tmp/ccihcwFT.s:13526  .rodata.op_map2.9264:0000000000000000 $d
     /tmp/ccihcwFT.s:13530  .rodata.op_map2.9264:0000000000000000 op_map2.9264
     /tmp/ccihcwFT.s:13536  .rodata.opcode_breaks:0000000000000000 $d
     /tmp/ccihcwFT.s:13540  .rodata.opcode_breaks:0000000000000000 opcode_breaks
     /tmp/ccihcwFT.s:13543  .rodata.prob_catalogue:0000000000000000 $d
     /tmp/ccihcwFT.s:13552  .rodata.prog_catalogue:0000000000000000 $d
     /tmp/ccihcwFT.s:13562  .rodata.program_xfcn:0000000000000000 $d
     /tmp/ccihcwFT.s:13576  .rodata.smap.9188:0000000000000000 $d
     /tmp/ccihcwFT.s:13580  .rodata.smap.9188:0000000000000000 smap.9188
     /tmp/ccihcwFT.s:13583  .rodata.stats_catalogue:0000000000000000 $d
     /tmp/ccihcwFT.s:13590  .rodata.sums_catalogue:0000000000000000 $d
     /tmp/ccihcwFT.s:13596  .rodata.test_catalogue:0000000000000000 $d
ARM GAS  /tmp/ccihcwFT.s 			page 371


     /tmp/ccihcwFT.s:6460   .text.process_keycode:00000000000006a1 $d
     /tmp/ccihcwFT.s:6460   .text.process_keycode:00000000000006a2 $t
     /tmp/ccihcwFT.s:8721   .text.process_keycode:0000000000000f87 $d
     /tmp/ccihcwFT.s:8721   .text.process_keycode:0000000000000f88 $t
     /tmp/ccihcwFT.s:10601  .text.process_keycode:000000000000169b $d
     /tmp/ccihcwFT.s:10601  .text.process_keycode:000000000000169c $t

UNDEFINED SYMBOLS
sizeLIB
main_ram
StateWhileOn
find_label_from
getprog
do_inc
PcWrapped
process_cmdline
shift_down
do_dec
is_bad_cmdline
argcmds
get_dispmode_digs
num_arg_digits
local_regs_rarg
global_regs_rarg
int_base
process_cmdline_set_lift
display
is_dblmode
IntMaxWindow
xset
update_program_bounds
set_lift
ShowRegister
remap_chars
catcmd
keyticks
xeq_init_contexts
is_dot
xeq
xeqprog
dot
Pause
JustStopped
Running
ShowRPN
JustDisplayed
DispMsg
xeq_xrom
is_key_pressed
set_pc
set_running_off
xeq_sst_bst
stoprog
clr_dot
finish_RPN
message
find_char
ARM GAS  /tmp/ccihcwFT.s 			page 372


delprog
prt
scopy_char
TraceBuffer
clpall
clrprog
reset
clrall
set_last_menu
display_current_menu
find_user_pc
cmdgtocommon
global_regs
local_regs
set_menu
alen

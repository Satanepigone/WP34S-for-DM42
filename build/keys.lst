ARM GAS  /tmp/ccgiIQCZ.s 			page 1


   1              		.arch armv7e-m
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"keys.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.gtodot_digit,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	gtodot_digit:
  27              	.LVL0:
  28              	.LFB30:
  29              		.file 1 "src/keys.c"
   1:src/keys.c    **** /* This file is part of 34S.
   2:src/keys.c    ****  * 
   3:src/keys.c    ****  * 34S is free software: you can redistribute it and/or modify
   4:src/keys.c    ****  * it under the terms of the GNU General Public License as published by
   5:src/keys.c    ****  * the Free Software Foundation, either version 3 of the License, or
   6:src/keys.c    ****  * (at your option) any later version.
   7:src/keys.c    ****  * 
   8:src/keys.c    ****  * 34S is distributed in the hope that it will be useful,
   9:src/keys.c    ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:src/keys.c    ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:src/keys.c    ****  * GNU General Public License for more details.
  12:src/keys.c    ****  * 
  13:src/keys.c    ****  * You should have received a copy of the GNU General Public License
  14:src/keys.c    ****  * along with 34S.  If not, see <http://www.gnu.org/licenses/>.
  15:src/keys.c    ****  */
  16:src/keys.c    **** 
  17:src/keys.c    **** 
  18:src/keys.c    **** #ifdef DM42
  19:src/keys.c    **** #include "dmcp.h"
  20:src/keys.c    **** #endif
  21:src/keys.c    **** 
  22:src/keys.c    **** #define DM42SAFE
  23:src/keys.c    **** 
  24:src/keys.c    **** #include "features.h"
  25:src/keys.c    **** #include "xeq.h"
  26:src/keys.c    **** #include "keys.h"
  27:src/keys.c    **** #include "display.h"
  28:src/keys.c    **** #include "lcd.h"
  29:src/keys.c    **** #include "int.h"
ARM GAS  /tmp/ccgiIQCZ.s 			page 2


  30:src/keys.c    **** #include "consts.h"
  31:src/keys.c    **** #include "storage.h"
  32:src/keys.c    **** #include "stats.h"
  33:src/keys.c    **** #include "catalogues.h"
  34:src/keys.c    **** #ifdef INFRARED
  35:src/keys.c    **** #include "printer.h"
  36:src/keys.c    **** #endif
  37:src/keys.c    **** #ifdef INCLUDE_C_LOCK
  38:src/keys.c    **** #include "decn.h"
  39:src/keys.c    **** #endif
  40:src/keys.c    **** #undef DM42SAFE
  41:src/keys.c    **** 
  42:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
  43:src/keys.c    **** extern void changed_catalog_state();
  44:src/keys.c    **** #endif
  45:src/keys.c    **** 
  46:src/keys.c    **** #ifdef INCLUDE_C_LOCK
  47:src/keys.c    **** void finish_cpx_entry ( int );
  48:src/keys.c    **** void stack_begin ( int ); 
  49:src/keys.c    **** static int process_cmplx ( const keycode );
  50:src/keys.c    **** static void stack_restore ( void );
  51:src/keys.c    **** #endif
  52:src/keys.c    **** 
  53:src/keys.c    **** #define STATE_UNFINISHED	(OP_SPEC | OP_UNFINISHED)
  54:src/keys.c    **** #define STATE_BACKSPACE		(OP_SPEC | OP_BACKSPACE)
  55:src/keys.c    **** #define STATE_SST		(OP_SPEC | OP_SST)
  56:src/keys.c    **** #define STATE_BST		(OP_SPEC | OP_BST)
  57:src/keys.c    **** #define STATE_RUNNING		(OP_SPEC | OP_RUNNING)
  58:src/keys.c    **** #define STATE_IGNORE		(OP_SPEC | OP_IGNORE)
  59:src/keys.c    **** #define STATE_WINDOWLEFT	(OP_SPEC | OP_WINDOWLEFT)
  60:src/keys.c    **** #define STATE_WINDOWRIGHT	(OP_SPEC | OP_WINDOWRIGHT)
  61:src/keys.c    **** //#define STATE_SHOW		(OP_SPEC | OP_SHOW)
  62:src/keys.c    **** 
  63:src/keys.c    **** /* Define this if the key codes map rows sequentially */
  64:src/keys.c    **** 
  65:src/keys.c    **** #define TEST_EQ		0
  66:src/keys.c    **** #define TEST_NE		1
  67:src/keys.c    **** #define TEST_LT		2
  68:src/keys.c    **** #define TEST_LE		3
  69:src/keys.c    **** #define TEST_GT		4
  70:src/keys.c    **** #define TEST_GE		5
  71:src/keys.c    **** 
  72:src/keys.c    **** enum confirmations {
  73:src/keys.c    **** 	// Apart from the first of these, these must be in the same
  74:src/keys.c    **** 	// order as the opcodes in xeq.h: OP_CLALL, OP_RESET, OP_CLPROG, OP_CLPALL
  75:src/keys.c    **** 	confirm_none=0, confirm_clall, confirm_reset, confirm_clprog, confirm_clpall
  76:src/keys.c    **** };
  77:src/keys.c    **** 
  78:src/keys.c    **** FLAG WasDataEntry;
  79:src/keys.c    **** 
  80:src/keys.c    **** /* Local data to this module */
  81:src/keys.c    **** unsigned int OpCode;
  82:src/keys.c    **** FLAG OpCodeDisplayPending;
  83:src/keys.c    **** FLAG GoFast;
  84:src/keys.c    **** FLAG NonProgrammable;
  85:src/keys.c    **** 
  86:src/keys.c    **** /*
ARM GAS  /tmp/ccgiIQCZ.s 			page 3


  87:src/keys.c    ****  *  Needed before definition
  88:src/keys.c    ****  */ 
  89:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end);
  90:src/keys.c    **** 
  91:src/keys.c    **** unsigned int nd_opcode;
  92:src/keys.c    **** 
  93:src/keys.c    **** /*
  94:src/keys.c    ****  *  Return the shift state
  95:src/keys.c    ****  */
  96:src/keys.c    **** enum shifts cur_shift(void) {
  97:src/keys.c    **** 	enum shifts s = shift_down();
  98:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
  99:src/keys.c    **** }
 100:src/keys.c    **** 
 101:src/keys.c    **** /*
 102:src/keys.c    ****  *  Set new shift state, return previous state
 103:src/keys.c    ****  */
 104:src/keys.c    **** static enum shifts set_shift(enum shifts shift) {
 105:src/keys.c    **** 	enum shifts r = cur_shift();
 106:src/keys.c    **** 	State2.shifts = shift;
 107:src/keys.c    **** 	//	State2.alpha_pos = 0;
 108:src/keys.c    **** 	return r;
 109:src/keys.c    **** }
 110:src/keys.c    **** 
 111:src/keys.c    **** /*
 112:src/keys.c    ****  *  Clear shift state and return previous state
 113:src/keys.c    ****  */
 114:src/keys.c    **** enum shifts reset_shift(void) {
 115:src/keys.c    **** 	return set_shift(SHIFT_N);
 116:src/keys.c    **** }
 117:src/keys.c    **** 
 118:src/keys.c    **** /*
 119:src/keys.c    ****  *  Toggle shift state
 120:src/keys.c    ****  */
 121:src/keys.c    **** static void toggle_shift(enum shifts shift) {
 122:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 123:src/keys.c    **** }
 124:src/keys.c    **** 
 125:src/keys.c    **** 
 126:src/keys.c    **** /*
 127:src/keys.c    ****  * Mapping from the key code to a linear index
 128:src/keys.c    ****  * The trick is to move the shifts and the holes in the map out of the way
 129:src/keys.c    ****  */
 130:src/keys.c    **** #ifdef DM42
 131:src/keys.c    **** static int keycode_to_linear_for_alpha(const keycode c)
 132:src/keys.c    **** {
 133:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 134:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 135:src/keys.c    **** 		 6,  7,  8,  9, 10, 11,   // K10 - K15
 136:src/keys.c    **** 		 12, 13, 14, 15, 16,  0,   // K20 - K24
 137:src/keys.c    **** 		17, 18, 19, 20, 21,  0,   // K30 - K34
 138:src/keys.c    **** 		22, 23, 24, 25, 26,  0,   // K40 - K44
 139:src/keys.c    **** 		27, 28, 29, 30, 31,  0,   // K50 - K54
 140:src/keys.c    **** 		32, 33, 34, 35, 36,       // K60 - K64
 141:src/keys.c    **** 		37, 37, 37, 37, 37, 37       // K_F, G, H, ARROW, CMPLX, NOP
 142:src/keys.c    **** 	};
 143:src/keys.c    **** 	return linear_key_map[c];
ARM GAS  /tmp/ccgiIQCZ.s 			page 4


 144:src/keys.c    **** }
 145:src/keys.c    **** 
 146:src/keys.c    **** static int keycode_to_linear(const keycode c)
 147:src/keys.c    **** {
 148:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 149:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 150:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 151:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 152:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 153:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 154:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 155:src/keys.c    **** 		29, 30, 31, 32, 33,       // K60 - K64
 156:src/keys.c    **** 		34, 34, 34,  4,  5, 34,        // K_F, G, H, ARROW, CMPLX, NOP
 157:src/keys.c    **** 	};
 158:src/keys.c    **** 	return linear_key_map[c];
 159:src/keys.c    **** }
 160:src/keys.c    **** #else
 161:src/keys.c    **** static int keycode_to_linear(const keycode c)
 162:src/keys.c    **** {
 163:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 ] = {
 164:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 165:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 166:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 167:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 168:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 169:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 170:src/keys.c    **** 		29, 30, 31, 32, 33        // K60 - K64
 171:src/keys.c    **** 	};
 172:src/keys.c    **** 	return linear_key_map[c];
 173:src/keys.c    **** }
 174:src/keys.c    **** #endif
 175:src/keys.c    **** /*
 176:src/keys.c    ****  * Mapping from the key code to a row column code ('A'=11 to '+'=75)
 177:src/keys.c    ****  * Used in KEY? and for shorthand addressing
 178:src/keys.c    ****  */
 179:src/keys.c    **** int keycode_to_row_column(const int c)
 180:src/keys.c    **** {
 181:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 182:src/keys.c    **** }
 183:src/keys.c    **** 
 184:src/keys.c    **** /*
 185:src/keys.c    ****  * Mapping from a row column code ('A'=11 to '+'=75) to the key code
 186:src/keys.c    ****  * Used in PUTK and KTYPE.
 187:src/keys.c    ****  */
 188:src/keys.c    **** 
 189:src/keys.c    **** int row_column_to_keycode(const int c)
 190:src/keys.c    **** {
 191:src/keys.c    **** 	int row = c / 10 - 1;
 192:src/keys.c    **** 	int col = c % 10 - 1;
 193:src/keys.c    **** 
 194:src/keys.c    **** 	if (row < 0 || row > 6 || col > 5 - (row >= 2))
 195:src/keys.c    **** 		return -1;
 196:src/keys.c    **** 	return row * 6 + col;
 197:src/keys.c    **** }
 198:src/keys.c    **** 
 199:src/keys.c    **** /*
 200:src/keys.c    ****  *  Mapping from a key code to a digit from 0 to 9 or to a register address
ARM GAS  /tmp/ccgiIQCZ.s 			page 5


 201:src/keys.c    ****  *  Bit seven is set if the key cannot be used as a label shortcut
 202:src/keys.c    ****  */
 203:src/keys.c    **** // Decision to make here about whether the top row can be used as shortcuts.
 204:src/keys.c    **** // Also, which other keys can / can't be used as shortcuts?
 205:src/keys.c    **** // Registers I, j, K, L will move with the new alpha layout.
 206:src/keys.c    **** 
 207:src/keys.c    **** #define NO_REG 0x7f
 208:src/keys.c    **** #define NO_SHORT 0x80
 209:src/keys.c    **** #ifdef DM42
 210:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 211:src/keys.c    **** {
 212:src/keys.c    ****   static const unsigned char map[] = {
 213:src/keys.c    ****     // K00 - K05
 214:src/keys.c    ****     NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 215:src/keys.c    ****     NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 216:src/keys.c    ****     NO_SHORT | NO_REG,   NO_REG,
 217:src/keys.c    ****     // K10 - K15
 218:src/keys.c    ****     NO_REG, NO_REG, regI_idx, regJ_idx, regK_idx, regL_idx, 
 219:src/keys.c    ****     // K20 - K24
 220:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 221:src/keys.c    ****     // K30 - K34
 222:src/keys.c    ****     NO_REG, 7, 8, 9, NO_REG,
 223:src/keys.c    ****     // K40 - K44
 224:src/keys.c    ****     NO_REG, NO_SHORT | regT_idx, 5, 6, NO_REG,
 225:src/keys.c    ****     // K50 - K54
 226:src/keys.c    ****     NO_REG, NO_SHORT | regX_idx, NO_SHORT | regY_idx, NO_SHORT | regZ_idx, NO_REG,
 227:src/keys.c    ****     // K60 - K64
 228:src/keys.c    ****     NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE, NO_REG, NO_REG,
 229:src/keys.c    ****     // Shifts etc. - K_F, K_G, K_H, K_ARROW, K_CMPLX. K_NOP
 230:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 231:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, 
 232:src/keys.c    ****   };
 233:src/keys.c    **** 
 234:src/keys.c    ****   return (unsigned int) map[keycode_to_linear_for_alpha(c)];
 235:src/keys.c    **** }
 236:src/keys.c    **** #else
 237:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 238:src/keys.c    **** {
 239:src/keys.c    ****   static const unsigned char map[] = {
 240:src/keys.c    **** 		// K00 - K05
 241:src/keys.c    **** 		NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 242:src/keys.c    **** 		NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 243:src/keys.c    **** 		NO_SHORT | NO_REG,   NO_REG,
 244:src/keys.c    **** 		// K10 - K12
 245:src/keys.c    **** 		NO_REG, NO_REG, regI_idx, 
 246:src/keys.c    **** 		// K20 - K24
 247:src/keys.c    **** 		NO_SHORT | NO_REG, regJ_idx, regK_idx, regL_idx, NO_SHORT | NO_REG,
 248:src/keys.c    **** 		// K30 - K34
 249:src/keys.c    **** 		NO_REG, 7, 8, 9, NO_REG,
 250:src/keys.c    **** 		// K40 - K44
 251:src/keys.c    **** 		NO_REG, 4, 5, 6, regT_idx,
 252:src/keys.c    **** 		// K50 - K54
 253:src/keys.c    **** 		NO_REG, 1, 2, 3, NO_REG,
 254:src/keys.c    **** 		// K60 - K63
 255:src/keys.c    **** 		NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE,
 256:src/keys.c    **** 		regY_idx, regZ_idx,
 257:src/keys.c    **** 		// Shifts, etc
ARM GAS  /tmp/ccgiIQCZ.s 			page 6


 258:src/keys.c    **** 		NO_REG
 259:src/keys.c    **** 	};
 260:src/keys.c    **** 
 261:src/keys.c    **** 	return (unsigned int) map[keycode_to_linear(c)];
 262:src/keys.c    **** }
 263:src/keys.c    **** #endif
 264:src/keys.c    **** /*
 265:src/keys.c    ****  *  Mapping of a keycode and shift state to a catalogue number
 266:src/keys.c    ****  */
 267:src/keys.c    **** static enum catalogues keycode_to_cat(const keycode c, enum shifts shift)
 268:src/keys.c    **** {
 269:src/keys.c    ****   enum catalogues cat = CATALOGUE_NONE;
 270:src/keys.c    ****   int i, col, max;
 271:src/keys.c    ****   const struct _map {
 272:src/keys.c    ****     unsigned char key, cat[3];
 273:src/keys.c    ****   } *cp;
 274:src/keys.c    **** 
 275:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 276:src/keys.c    **** 	if (C_LOCKED) { // Limited set of catalogues available in complex lock mode - all listed here
 277:src/keys.c    **** 		if (shift == SHIFT_H) {
 278:src/keys.c    **** 			switch (c) {
 279:src/keys.c    **** 				case K53:
 280:src/keys.c    **** 					return CATALOGUE_COMPLEX;
 281:src/keys.c    **** 				case K04:
 282:src/keys.c    **** 					return CATALOGUE_CONV;
 283:src/keys.c    **** 				case K05:
 284:src/keys.c    **** 					return CATALOGUE_MODE;
 285:src/keys.c    **** 				case K20:
 286:src/keys.c    **** 					if ( (REAL_FLAG || IMAG_FLAG) ) { // number being entered
 287:src/keys.c    **** 						finish_cpx_entry(1);
 288:src/keys.c    **** 					}
 289:src/keys.c    **** 					return CATALOGUE_COMPLEX_CONST;
 290:src/keys.c    **** 				default:
 291:src/keys.c    **** 					return CATALOGUE_NONE;
 292:src/keys.c    **** 			}
 293:src/keys.c    **** 		}
 294:src/keys.c    **** 		if ( (shift == SHIFT_G) && (c == K60) )
 295:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 296:src/keys.c    **** 		if ( (shift == SHIFT_F) && (c == K20) ) {
 297:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 298:src/keys.c    **** 				SET_REAL;
 299:src/keys.c    **** 				stack_begin (1);
 300:src/keys.c    **** 			}
 301:src/keys.c    **** 			else if (CmdLineLength) {
 302:src/keys.c    **** 				CmdLineLength = 0;
 303:src/keys.c    **** 				CmdLineEex = 0;
 304:src/keys.c    **** 				CmdLineDot = 0;
 305:src/keys.c    **** 			}
 306:src/keys.c    **** 			return CATALOGUE_CONST;
 307:src/keys.c    **** 		}
 308:src/keys.c    **** 		return CATALOGUE_NONE;
 309:src/keys.c    **** 	}
 310:src/keys.c    **** #endif
 311:src/keys.c    ****   // Common to both alpha mode and normal mode is the programming X.FCN catalogue
 312:src/keys.c    ****   if (c == K53 && shift == SHIFT_H && ! State2.runmode && ! State2.cmplx && ! State2.multi)
 313:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 314:src/keys.c    **** 
ARM GAS  /tmp/ccgiIQCZ.s 			page 7


 315:src/keys.c    ****   if (! State2.alphas && ! State2.multi) {
 316:src/keys.c    ****     /*
 317:src/keys.c    ****      *  Normal processing - Not alpha mode
 318:src/keys.c    ****      */
 319:src/keys.c    ****     static const struct _map cmap[] = {
 320:src/keys.c    **** #ifdef DM42
 321:src/keys.c    ****       { K04, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 322:src/keys.c    **** #else
 323:src/keys.c    ****       { K_ARROW, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 324:src/keys.c    **** #endif
 325:src/keys.c    ****       { K05,     { CATALOGUE_MODE,      CATALOGUE_MODE,      CATALOGUE_MODE          } },
 326:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
 327:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_USER          } },
 328:src/keys.c    **** #else
 329:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_LABELS        } },
 330:src/keys.c    **** #endif
 331:src/keys.c    ****       { K20,     { CATALOGUE_CONST,     CATALOGUE_NONE,      CATALOGUE_COMPLEX_CONST } },
 332:src/keys.c    ****       { K41,     { CATALOGUE_PROB,      CATALOGUE_NONE,      CATALOGUE_PROB          } },
 333:src/keys.c    ****       { K42,     { CATALOGUE_STATS,     CATALOGUE_NONE,      CATALOGUE_STATS         } },
 334:src/keys.c    ****       { K43,     { CATALOGUE_SUMS,      CATALOGUE_NONE,      CATALOGUE_SUMS          } },
 335:src/keys.c    ****       { K44,     { CATALOGUE_MATRIX,    CATALOGUE_NONE,      CATALOGUE_MATRIX        } },
 336:src/keys.c    ****       { K50,     { CATALOGUE_STATUS,    CATALOGUE_STATUS,    CATALOGUE_STATUS        } },
 337:src/keys.c    ****       { K51,     { CATALOGUE_TEST,      CATALOGUE_TEST,      CATALOGUE_TEST          } },
 338:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
 339:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_INTERNAL      } },
 340:src/keys.c    **** #else
 341:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_PROG          } },
 342:src/keys.c    **** #endif
 343:src/keys.c    ****       { K53,     { CATALOGUE_NORMAL,    CATALOGUE_INT,       CATALOGUE_COMPLEX       } },
 344:src/keys.c    ****     };
 345:src/keys.c    **** 
 346:src/keys.c    ****     if (c == K60 && shift == SHIFT_G) {
 347:src/keys.c    ****       /*
 348:src/keys.c    ****        *  SHOW starts register browser
 349:src/keys.c    ****        */
 350:src/keys.c    ****       return CATALOGUE_REGISTERS;
 351:src/keys.c    ****     }
 352:src/keys.c    **** #if 0
 353:src/keys.c    ****     // conflicts with c# 002 and c# 003
 354:src/keys.c    ****     if ((c == K52 || c == K53) && shift == SHIFT_N && State2.cmplx && State2.catalogue == CATALOGUE
 355:src/keys.c    ****       /*
 356:src/keys.c    ****        *  Shorthand to complex P.FCN & X.FCN - h may be omitted
 357:src/keys.c    ****        */
 358:src/keys.c    ****       shift = SHIFT_H;
 359:src/keys.c    ****     }
 360:src/keys.c    **** #endif
 361:src/keys.c    ****     if (shift != SHIFT_H) {
 362:src/keys.c    ****       /*
 363:src/keys.c    ****        *  All standard catalogues are on h-shifted keys
 364:src/keys.c    ****        */
 365:src/keys.c    ****       return CATALOGUE_NONE;
 366:src/keys.c    ****     }
 367:src/keys.c    **** 
 368:src/keys.c    ****     /*
 369:src/keys.c    ****      *  Prepare search
 370:src/keys.c    ****      */
 371:src/keys.c    ****     cp = cmap;
ARM GAS  /tmp/ccgiIQCZ.s 			page 8


 372:src/keys.c    **** #ifndef WINGUI
 373:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx || shift_down() == SHIFT_H ? 2 : 0;
 374:src/keys.c    **** #else
 375:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx ? 2 : 0;
 376:src/keys.c    **** #endif
 377:src/keys.c    ****     max = sizeof(cmap) / sizeof(cmap[0]);
 378:src/keys.c    ****   }
 379:src/keys.c    ****   else {
 380:src/keys.c    ****     /*
 381:src/keys.c    ****      *  All the alpha catalogues go here
 382:src/keys.c    ****      */
 383:src/keys.c    **** #ifdef DM42
 384:src/keys.c    ****     static const struct _map amap[] = {
 385:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 386:src/keys.c    ****       { K05, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 387:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 388:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 389:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 390:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 391:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 392:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 393:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 394:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 395:src/keys.c    ****     };
 396:src/keys.c    **** #else
 397:src/keys.c    ****     static const struct _map amap[] = {
 398:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 399:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 400:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 401:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 402:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 403:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 404:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 405:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 406:src/keys.c    ****     };
 407:src/keys.c    **** #endif
 408:src/keys.c    ****     static const char smap[] = { 0, 1, 0, 2 }; // Map shifts to columns;
 409:src/keys.c    **** 
 410:src/keys.c    ****     /*
 411:src/keys.c    ****      *  Prepare search
 412:src/keys.c    ****      */
 413:src/keys.c    ****     cp = amap;
 414:src/keys.c    ****     col = smap[shift];
 415:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 416:src/keys.c    ****   }
 417:src/keys.c    **** 
 418:src/keys.c    ****   /*
 419:src/keys.c    ****    *  Search the key in one of the tables
 420:src/keys.c    ****    */
 421:src/keys.c    ****   for (i = 0; i < max; ++i, ++cp) {
 422:src/keys.c    ****     if (cp->key == c) {
 423:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 424:src/keys.c    ****       break;
 425:src/keys.c    ****     }
 426:src/keys.c    ****   }
 427:src/keys.c    ****   if (State2.multi && (cat < CATALOGUE_ALPHA_SYMBOLS || cat > CATALOGUE_ALPHA_SUBSCRIPTS)) {
 428:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
ARM GAS  /tmp/ccgiIQCZ.s 			page 9


 429:src/keys.c    ****     cat = CATALOGUE_NONE;
 430:src/keys.c    ****   }
 431:src/keys.c    ****   return cat;
 432:src/keys.c    **** }
 433:src/keys.c    **** 
 434:src/keys.c    **** #ifdef DM42
 435:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 436:src/keys.c    **** {
 437:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 438:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 439:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 440:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 441:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 442:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 443:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 444:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 445:src/keys.c    **** 
 446:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 447:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 448:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 449:src/keys.c    **** 		{ 'J',  0257, 0000, 0000, 'j',  0000,  },  // K13
 450:src/keys.c    **** 		{ 'K',  0000, 'K',  0000, 'k',  0251,  },  // K14
 451:src/keys.c    **** 		{ 'L',  0000, 0212, 0000, 'l',  0252,  },  // K15
 452:src/keys.c    **** 
 453:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 454:src/keys.c    **** 		{ 'M',  0000, 0253, 0027, 'm',  0253,  },  // K21
 455:src/keys.c    **** 		{ 'N',  0010, 'N',  0225, 'n',  0254,  },  // K22
 456:src/keys.c    **** 		{ 'O',  0000, 0227, 0257, 'o',  0267,  },  // K23
 457:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 458:src/keys.c    **** 
 459:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 460:src/keys.c    **** 		{ 'P',  '7',  0217, '&',  'p',  0257,  },  // K31
 461:src/keys.c    **** 		{ 'Q',  '8',  0000, '|',  'q',  0000,  },  // K32
 462:src/keys.c    **** 		{ 'R',  '9',  'R',  0013, 'r',  0260,  },  // K33
 463:src/keys.c    **** 		{ 'S',  '/',  0221, '\\', 's',  0261,  },  // K34
 464:src/keys.c    **** 
 465:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 466:src/keys.c    **** 		{ 'T',  '4',  'T',  0000, 't',  0262,  },  // K41
 467:src/keys.c    **** 		{ 'U',  '5',  0000, 0000, 'u',  0000,  },  // K42
 468:src/keys.c    **** 		{ 'V',  '6',  0000, 0000, 'v',  0000,  },  // K43
 469:src/keys.c    **** 		{ 'W', 0034,  0000, 0000, 'w',  0000,  },  // K44
 470:src/keys.c    **** 
 471:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 472:src/keys.c    **** 		{ 'X',  '1',  0215, 0000, 'x',  0255,  },  // K51
 473:src/keys.c    **** 		{ 'Y',  '2',  'Y',  0000, 'y',  0263,  },  // K52
 474:src/keys.c    **** 		{ 'Z',  '3',  'Z',  0000, 'z',  0245,  },  // K53
 475:src/keys.c    **** 		{ '-',  '(',  ')',  0000, 0000, 0000,  },  // K54
 476:src/keys.c    **** 
 477:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K60
 478:src/keys.c    **** 		{ ':',  '0',  0207, ' ',  ';',  0247,  },  // K61
 479:src/keys.c    **** 		{ '.',  '.',  0226, 0000, '.',  0266,  },  // K62
 480:src/keys.c    **** 		{ '?',  '!',  0041, 0000, '?',  '!',  },  // K63
 481:src/keys.c    **** 		{ ' ',  '+',  '=',  0006, ' ',  ' ',   },  // K64
 482:src/keys.c    **** 
 483:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // shifts etc.
 484:src/keys.c    **** 	};
 485:src/keys.c    **** 	if (State2.alphashift) {
ARM GAS  /tmp/ccgiIQCZ.s 			page 10


 486:src/keys.c    **** 		if (shift == SHIFT_N)
 487:src/keys.c    **** 			shift = SHIFT_LC_N;
 488:src/keys.c    **** 		else if (shift == SHIFT_G)
 489:src/keys.c    **** 			shift = SHIFT_LC_G;
 490:src/keys.c    **** 	}
 491:src/keys.c    **** 	return alphamap[keycode_to_linear_for_alpha(c)][shift];
 492:src/keys.c    **** }
 493:src/keys.c    **** #else
 494:src/keys.c    **** /*
 495:src/keys.c    ****  * Mapping from key position to alpha in the four key planes plus
 496:src/keys.c    ****  * the two lower case planes.
 497:src/keys.c    ****  */
 498:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 499:src/keys.c    **** {
 500:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 501:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 502:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 503:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 504:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 505:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 506:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 507:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 508:src/keys.c    **** 
 509:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 510:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 511:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 512:src/keys.c    **** 
 513:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 514:src/keys.c    **** 		{ 'J',  '(',  ')',  0027, 'j',  ')',   },  // K21
 515:src/keys.c    **** 		{ 'K',  0010, 'K',  0225, 'k',  0251,  },  // K22
 516:src/keys.c    **** 		{ 'L',  0000, 0212, 0257, 'l',  0252,  },  // K23
 517:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 518:src/keys.c    **** 
 519:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 520:src/keys.c    **** 		{ 'M',  '7',  'M',  '&',  'm',  0253,  },  // K31
 521:src/keys.c    **** 		{ 'N',  '8',  'N',  '|',  'n',  0254,  },  // K32
 522:src/keys.c    **** 		{ 'O',  '9',  0227, 0013, 'o',  0267,  },  // K33
 523:src/keys.c    **** 		{ 'P',  '/',  0217, '\\', 'p',  0257,  },  // K34
 524:src/keys.c    **** 
 525:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 526:src/keys.c    **** 		{ 'Q',  '4',  0000, 0000, 'q',  0000,  },  // K41
 527:src/keys.c    **** 		{ 'R',  '5',  'R',  0000, 'r',  0260,  },  // K42
 528:src/keys.c    **** 		{ 'S',  '6',  0221, 0000, 's',  0261,  },  // K43
 529:src/keys.c    **** 		{ 'T',  0034, 'T',  0000, 't',  0262,  },  // K44
 530:src/keys.c    **** 
 531:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 532:src/keys.c    **** 		{ '1',  '1',  0207, 0000, '1',  0247,  },  // K51
 533:src/keys.c    **** 		{ 'U',  '2',  0000, 0000, 'u',  0000,  },  // K52
 534:src/keys.c    **** 		{ 'V',  '3',  0000, 0000, 'v',  0000,  },  // K53
 535:src/keys.c    **** 		{ 'W',  0034, 0000, 0000, 'w',  0000,  },  // K54
 536:src/keys.c    **** 
 537:src/keys.c    **** 		{ 0000, 0222, 0000, 0000, 0000, 0000,  },  // K60
 538:src/keys.c    **** 		{ '0',  '0',  0226, ' ',  '0',  0266,  },  // K61
 539:src/keys.c    **** 		{ 'X',  '.',  0215, 0000, 'x',  0255,  },  // K62
 540:src/keys.c    **** 		{ 'Y',  0000, 'Y',  0000, 'y',  0263,  },  // K63
 541:src/keys.c    **** 		{ 'Z',  '+',  'Z',  0000, 'z',  0245,  },  // K64
 542:src/keys.c    **** 	};
ARM GAS  /tmp/ccgiIQCZ.s 			page 11


 543:src/keys.c    **** 	if (State2.alphashift) {
 544:src/keys.c    **** 		if (shift == SHIFT_N)
 545:src/keys.c    **** 			shift = SHIFT_LC_N;
 546:src/keys.c    **** 		else if (shift == SHIFT_G)
 547:src/keys.c    **** 			shift = SHIFT_LC_G;
 548:src/keys.c    **** 	}
 549:src/keys.c    **** 	return alphamap[keycode_to_linear(c)][shift];
 550:src/keys.c    **** }
 551:src/keys.c    **** #endif
 552:src/keys.c    **** static void init_arg(const enum rarg base) {
 553:src/keys.c    **** 	if (is_bad_cmdline())
 554:src/keys.c    **** 		return;
 555:src/keys.c    **** 	CmdBase = base;
 556:src/keys.c    **** 	State2.ind = 0;
 557:src/keys.c    **** 	State2.digval = 0;
 558:src/keys.c    **** 	State2.numdigit = 0;
 559:src/keys.c    **** 	State2.rarg = 1;
 560:src/keys.c    **** 	State2.dot = 0;
 561:src/keys.c    **** 	State2.local = 0;
 562:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 563:src/keys.c    **** }
 564:src/keys.c    **** 
 565:src/keys.c    **** static void init_cat(enum catalogues cat) {
 566:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 567:src/keys.c    **** 		// Save last catalogue for a later restore
 568:src/keys.c    **** 		State.last_cat = State2.catalogue;
 569:src/keys.c    **** 		CmdLineLength = 0;
 570:src/keys.c    **** 	}
 571:src/keys.c    **** 	process_cmdline();
 572:src/keys.c    **** 
 573:src/keys.c    **** 	State2.labellist = 0;
 574:src/keys.c    **** 	State2.registerlist = 0;
 575:src/keys.c    **** 	State2.status = 0;
 576:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 577:src/keys.c    **** 
 578:src/keys.c    **** 	switch (cat) {
 579:src/keys.c    **** 	case CATALOGUE_LABELS:
 580:src/keys.c    **** 		// Label browser
 581:src/keys.c    **** 		State2.labellist = 1;
 582:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 583:src/keys.c    **** 		break;
 584:src/keys.c    **** 	
 585:src/keys.c    **** 	case CATALOGUE_REGISTERS:
 586:src/keys.c    **** 		// Register browser
 587:src/keys.c    **** 		State2.registerlist = 1;
 588:src/keys.c    **** 		State2.digval = regX_idx;
 589:src/keys.c    **** 		State2.digval2 = 0;
 590:src/keys.c    **** 		break;
 591:src/keys.c    **** 
 592:src/keys.c    **** 	case CATALOGUE_STATUS:
 593:src/keys.c    **** 		// Flag browser
 594:src/keys.c    **** 		State2.status = 1;
 595:src/keys.c    **** 		break;
 596:src/keys.c    **** 
 597:src/keys.c    **** 	default:
 598:src/keys.c    **** 		// Normal catalogue
 599:src/keys.c    **** 		State2.catalogue = cat;
ARM GAS  /tmp/ccgiIQCZ.s 			page 12


 600:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 601:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 602:src/keys.c    **** 			// Different catalogue, reset position
 603:src/keys.c    **** 			State.catpos = 0;
 604:src/keys.c    **** 		}
 605:src/keys.c    **** 	}
 606:src/keys.c    **** 	reset_shift();
 607:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 608:src/keys.c    **** 	changed_catalog_state();
 609:src/keys.c    **** #endif
 610:src/keys.c    **** }
 611:src/keys.c    **** 
 612:src/keys.c    **** /*
 613:src/keys.c    ****  *  Reset the internal state to a sane default
 614:src/keys.c    ****  */
 615:src/keys.c    **** void init_state(void) {
 616:src/keys.c    **** #ifndef REALBUILD
 617:src/keys.c    **** 	unsigned int a = State2.flags;
 618:src/keys.c    **** 	unsigned int b = State2.trace;
 619:src/keys.c    **** #else
 620:src/keys.c    **** 	FLAG t = TestFlag;
 621:src/keys.c    **** #endif
 622:src/keys.c    **** 	int v = Voltage;
 623:src/keys.c    **** 	int k = LastKey;
 624:src/keys.c    **** 
 625:src/keys.c    **** 	CmdBase = 0;
 626:src/keys.c    **** 	// Removed: will clear any locals on power off
 627:src/keys.c    **** 	// clrretstk(0);
 628:src/keys.c    **** 
 629:src/keys.c    **** 	xset(&State2, 0, sizeof(State2));
 630:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 631:src/keys.c    **** 
 632:src/keys.c    **** #ifdef DEFAULT_TO_SSIZE8 							//JM3
 633:src/keys.c    **** 	INIT_8; 								//JM3
 634:src/keys.c    **** 	UState.stack_depth = 1; // set stack size to 8 	//JM3
 635:src/keys.c    **** #endif  									//JM3
 636:src/keys.c    **** 
 637:src/keys.c    **** #ifdef DEFAULT_DATE_YMD			//JM5
 638:src/keys.c    **** 	UState.date_mode = 1;		//JM5
 639:src/keys.c    **** #endif							//JM5
 640:src/keys.c    **** 
 641:src/keys.c    **** #ifdef DEFAULT_DATE_MDY			//JM5
 642:src/keys.c    **** 	UState.date_mode = 2;		//JM5
 643:src/keys.c    **** #endif							//JM5
 644:src/keys.c    **** 
 645:src/keys.c    **** #ifdef YREG_ON_BY_DEFAULT
 646:src/keys.c    **** 	UState.show_y = 1;
 647:src/keys.c    **** #endif
 648:src/keys.c    **** 
 649:src/keys.c    **** #ifdef DEFAULT_TO_J
 650:src/keys.c    **** 	SET_CPX_J;
 651:src/keys.c    **** #endif
 652:src/keys.c    **** 
 653:src/keys.c    **** #ifdef DEFAULT_TO_CPX_YES
 654:src/keys.c    **** 	cpx_nop(OP_CYES);
 655:src/keys.c    **** #endif
 656:src/keys.c    **** 
ARM GAS  /tmp/ccgiIQCZ.s 			page 13


 657:src/keys.c    **** #ifdef DEFAULT_TO_C_LOCK
 658:src/keys.c    **** 	cpx_nop(OP_CYES);
 659:src/keys.c    **** 	cpx_nop(OP_C_ON);
 660:src/keys.c    **** #endif
 661:src/keys.c    **** 
 662:src/keys.c    **** #ifdef ENTRY_RPN
 663:src/keys.c    **** 
 664:src/keys.c    **** #ifdef DEFAULT_TO_ENTRY_RPN
 665:src/keys.c    **** 	ENTRY_RPN_ON;
 666:src/keys.c    **** #else
 667:src/keys.c    **** 	ENTRY_RPN_OFF;
 668:src/keys.c    **** #endif
 669:src/keys.c    **** 
 670:src/keys.c    **** #endif
 671:src/keys.c    **** 	
 672:src/keys.c    **** #endif
 673:src/keys.c    **** 
 674:src/keys.c    **** 	State2.test = TST_NONE;
 675:src/keys.c    **** 	State2.runmode = 1;
 676:src/keys.c    **** 	update_program_bounds(1);
 677:src/keys.c    **** 	set_lift();
 678:src/keys.c    **** 
 679:src/keys.c    **** 	// Restore stuff that has been moved to State2 for space reasons
 680:src/keys.c    **** 	// but must not be cleared.
 681:src/keys.c    **** 	Voltage = v;
 682:src/keys.c    **** 	LastKey = k;
 683:src/keys.c    **** #ifndef REALBUILD
 684:src/keys.c    **** 	State2.trace = b;
 685:src/keys.c    **** 	State2.flags = a;
 686:src/keys.c    **** #else
 687:src/keys.c    **** 	TestFlag = t;
 688:src/keys.c    **** #endif
 689:src/keys.c    **** 	ShowRegister = regX_idx;
 690:src/keys.c    **** }
 691:src/keys.c    **** 
 692:src/keys.c    **** void soft_init_state(void) {
 693:src/keys.c    ****   int soft;
 694:src/keys.c    ****   unsigned int runmode;
 695:src/keys.c    ****   unsigned int alphas;
 696:src/keys.c    **** 
 697:src/keys.c    ****   if (CmdLineLength) {
 698:src/keys.c    ****     CmdLineLength = 0;
 699:src/keys.c    ****     CmdLineEex = 0;
 700:src/keys.c    ****     CmdLineDot = 0;
 701:src/keys.c    ****     return;
 702:src/keys.c    ****   }
 703:src/keys.c    ****   soft = State2.multi || State2.rarg || State2.hyp || State2.gtodot || State2.labellist ||
 704:src/keys.c    ****     State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 705:src/keys.c    ****   runmode = State2.runmode;
 706:src/keys.c    ****   alphas = State2.alphas;
 707:src/keys.c    ****   init_state();
 708:src/keys.c    ****   if (soft) {
 709:src/keys.c    ****     State2.runmode = runmode;
 710:src/keys.c    ****     State2.alphas = alphas;
 711:src/keys.c    ****   }
 712:src/keys.c    ****   clear_disp(); // clears display so it is redrawn
 713:src/keys.c    ****   display_current_menu();
ARM GAS  /tmp/ccgiIQCZ.s 			page 14


 714:src/keys.c    **** }
 715:src/keys.c    **** 
 716:src/keys.c    **** static int check_confirm(int op) {
 717:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 718:src/keys.c    **** 		const int nilop = argKIND(op);
 719:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 720:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 721:src/keys.c    **** 			return STATE_UNFINISHED;
 722:src/keys.c    **** 		}
 723:src/keys.c    **** #ifndef DM42		
 724:src/keys.c    **** 		if ((nilop >= OP_RECV && nilop <= OP_PSTO)
 725:src/keys.c    **** #endif
 726:src/keys.c    **** #ifdef DM42
 727:src/keys.c    **** 		    if ((nilop >= OP_SAVE && nilop <= OP_PSTO) // no recv in DM42
 728:src/keys.c    **** #endif
 729:src/keys.c    **** #ifdef INFRARED
 730:src/keys.c    **** 			|| nilop == OP_PRINT_PGM
 731:src/keys.c    **** #endif
 732:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
 733:src/keys.c    **** //			|| nilop == OP_STOPWATCH // so it can go in a user menu
 734:src/keys.c    **** #endif
 735:src/keys.c    **** 		) {
 736:src/keys.c    **** 			// These commands are not programmable
 737:src/keys.c    **** 			NonProgrammable = 1;
 738:src/keys.c    **** 		}
 739:src/keys.c    **** 	}
 740:src/keys.c    **** 	return op;
 741:src/keys.c    **** }
 742:src/keys.c    **** 
 743:src/keys.c    **** static void set_smode(const enum single_disp d) {
 744:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 745:src/keys.c    **** }
 746:src/keys.c    **** 
 747:src/keys.c    **** static int check_f_key(int n, const int dflt) {
 748:src/keys.c    **** 	const int code = 100 + n;
 749:src/keys.c    **** 	unsigned int pc = state_pc();
 750:src/keys.c    **** 
 751:src/keys.c    **** 	if (State2.runmode) {
 752:src/keys.c    **** 		if (isXROM(pc))
 753:src/keys.c    **** 			pc = 1;
 754:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 755:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 756:src/keys.c    **** 	}
 757:src/keys.c    **** 	return dflt;
 758:src/keys.c    **** }
 759:src/keys.c    **** 
 760:src/keys.c    **** /* Return non-zero if the current mode is integer and we accept letters
 761:src/keys.c    ****  * as digits.
 762:src/keys.c    ****  */
 763:src/keys.c    **** static int intltr(int d) {
 764:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 765:src/keys.c    **** }
 766:src/keys.c    **** 
 767:src/keys.c    **** /*
 768:src/keys.c    ****  *  Process a key code in the unshifted mode.
 769:src/keys.c    ****  */
 770:src/keys.c    **** static int process_normal(const keycode c)
ARM GAS  /tmp/ccgiIQCZ.s 			page 15


 771:src/keys.c    **** {
 772:src/keys.c    **** 	static const unsigned short int op_map[] = {
 773:src/keys.c    **** 		// Row 1
 774:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS, // A to D
 775:src/keys.c    **** 		OP_MON  | OP_RECIP,
 776:src/keys.c    **** 		OP_DYA  | OP_POW,
 777:src/keys.c    **** 		OP_MON  | OP_SQRT,
 778:src/keys.c    **** 		OP_SPEC | OP_E,		// ->
 779:src/keys.c    **** 		OP_SPEC | OP_F,		// CPX
 780:src/keys.c    **** 		// Row 2
 781:src/keys.c    **** 		RARG_STO,
 782:src/keys.c    **** 		RARG_RCL,
 783:src/keys.c    **** 		OP_NIL  | OP_RDOWN,
 784:src/keys.c    **** 		// Row 3
 785:src/keys.c    **** 		OP_SPEC | OP_ENTER,
 786:src/keys.c    **** 		RARG(RARG_SWAPX, regY_idx),
 787:src/keys.c    **** 		OP_SPEC | OP_CHS,	// CHS
 788:src/keys.c    **** 		OP_SPEC | OP_EEX,	// EEX
 789:src/keys.c    **** 		OP_SPEC | OP_CLX,	// <-
 790:src/keys.c    **** 		// Row 4
 791:src/keys.c    **** 		RARG_XEQ,
 792:src/keys.c    **** 		OP_SPEC | OP_7,
 793:src/keys.c    **** 		OP_SPEC | OP_8,
 794:src/keys.c    **** 		OP_SPEC | OP_9,
 795:src/keys.c    **** 		OP_DYA  | OP_DIV,
 796:src/keys.c    **** 		// Row 5
 797:src/keys.c    **** 		STATE_BST,
 798:src/keys.c    **** 		OP_SPEC | OP_4,
 799:src/keys.c    **** 		OP_SPEC | OP_5,
 800:src/keys.c    **** 		OP_SPEC | OP_6,
 801:src/keys.c    **** 		OP_DYA  | OP_MUL,
 802:src/keys.c    **** 		// Row 6
 803:src/keys.c    **** 		STATE_SST,		// SST
 804:src/keys.c    **** 		OP_SPEC | OP_1,
 805:src/keys.c    **** 		OP_SPEC | OP_2,
 806:src/keys.c    **** 		OP_SPEC | OP_3,
 807:src/keys.c    **** 		OP_DYA  | OP_SUB,
 808:src/keys.c    **** 		// Row 7
 809:src/keys.c    **** 		STATE_UNFINISHED,	// ON/C
 810:src/keys.c    **** 		OP_SPEC | OP_0,
 811:src/keys.c    **** 		OP_SPEC | OP_DOT,
 812:src/keys.c    **** 		OP_NIL  | OP_RS,	// R/S
 813:src/keys.c    **** 		OP_DYA  | OP_ADD,
 814:src/keys.c    **** #ifdef DM42
 815:src/keys.c    **** 		OP_NIL  | OP_NOP,  // shifts etc.
 816:src/keys.c    **** #endif
 817:src/keys.c    **** 	};
 818:src/keys.c    **** 
 819:src/keys.c    **** 	int lc = keycode_to_linear(c);
 820:src/keys.c    **** 	int op = op_map[lc];
 821:src/keys.c    **** 	
 822:src/keys.c    **** 	// The switch handles all the special cases
 823:src/keys.c    **** #ifdef DM42
 824:src/keys.c    **** 	int op_int;
 825:src/keys.c    **** 	if (UState.intm) {
 826:src/keys.c    **** 	  switch (c) {
 827:src/keys.c    **** 	  case K00:
ARM GAS  /tmp/ccgiIQCZ.s 			page 16


 828:src/keys.c    **** 	    op = OP_SPEC | OP_A;
 829:src/keys.c    **** 	    if (intltr(10)) {
 830:src/keys.c    **** 	      return op;
 831:src/keys.c    **** 	    }
 832:src/keys.c    **** 	    else {
 833:src/keys.c    **** 	      return check_f_key(0, op);
 834:src/keys.c    **** 	    }
 835:src/keys.c    **** 	  case K01:
 836:src/keys.c    **** 	    op = OP_SPEC | OP_B;
 837:src/keys.c    **** 	    if (intltr(11)) {
 838:src/keys.c    **** 	      return op;
 839:src/keys.c    **** 	    }
 840:src/keys.c    **** 	    else {
 841:src/keys.c    **** 	      return check_f_key(1, op);
 842:src/keys.c    **** 	    }
 843:src/keys.c    **** 	  case K03:
 844:src/keys.c    **** 	    op_int = OP_SPEC | OP_C;
 845:src/keys.c    **** 	    if (intltr(12)) {
 846:src/keys.c    **** 	      return op_int;
 847:src/keys.c    **** 	    }
 848:src/keys.c    **** 	    else {
 849:src/keys.c    **** 	      return check_f_key(2, op);
 850:src/keys.c    **** 	    }
 851:src/keys.c    **** 	  case K30:
 852:src/keys.c    **** 	    op_int = OP_SPEC | OP_F;
 853:src/keys.c    **** 	    if (intltr(15)) {
 854:src/keys.c    **** 	      return op_int;
 855:src/keys.c    **** 	    }
 856:src/keys.c    **** 	  default:;
 857:src/keys.c    **** 	  }
 858:src/keys.c    **** 	}
 859:src/keys.c    **** #endif  
 860:src/keys.c    **** 
 861:src/keys.c    **** 	switch (c) {
 862:src/keys.c    **** #ifdef DM42
 863:src/keys.c    **** 	case K00:
 864:src/keys.c    **** 		return check_f_key(0, op);
 865:src/keys.c    **** 	case K01:
 866:src/keys.c    **** 		return check_f_key(1, op);
 867:src/keys.c    **** 	case K03:
 868:src/keys.c    **** 		return check_f_key(2, op);
 869:src/keys.c    **** #else
 870:src/keys.c    **** 	case K00:
 871:src/keys.c    **** 	case K01:
 872:src/keys.c    **** 		if (UState.intm)
 873:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 874:src/keys.c    **** 	case K02:
 875:src/keys.c    **** 	case K03:
 876:src/keys.c    **** 		if (intltr(lc + 10)) {
 877:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 878:src/keys.c    **** 			return op;
 879:src/keys.c    **** 		}
 880:src/keys.c    **** 		return check_f_key(lc, op);
 881:src/keys.c    **** #endif		
 882:src/keys.c    **** 	case K_ARROW:
 883:src/keys.c    **** #ifndef DM42
 884:src/keys.c    **** #ifdef INT_MODE_TEMPVIEW
ARM GAS  /tmp/ccgiIQCZ.s 			page 17


 885:src/keys.c    **** 		if (intltr(14))
 886:src/keys.c    **** 			return op;
 887:src/keys.c    **** #else
 888:src/keys.c    **** 		if (UState.intm)
 889:src/keys.c    **** 			return op;
 890:src/keys.c    **** #endif
 891:src/keys.c    **** #endif		
 892:src/keys.c    **** 		if (is_bad_cmdline())
 893:src/keys.c    **** 			return STATE_UNFINISHED;
 894:src/keys.c    **** 		process_cmdline_set_lift();
 895:src/keys.c    **** 		State2.arrow = 1;
 896:src/keys.c    **** #ifdef DM42
 897:src/keys.c    **** 		set_menu (M_Arrow); // arrow menu
 898:src/keys.c    **** 		display_current_menu ();
 899:src/keys.c    **** 		lcd_refresh ();
 900:src/keys.c    **** #else
 901:src/keys.c    **** 		set_shift(SHIFT_G);
 902:src/keys.c    **** #endif
 903:src/keys.c    **** 		break;
 904:src/keys.c    **** 
 905:src/keys.c    **** 	case K_CMPLX:
 906:src/keys.c    **** #ifdef DM42
 907:src/keys.c    **** 	  if (UState.intm)
 908:src/keys.c    **** 	    break; // return nothing
 909:src/keys.c    **** 	  State2.cmplx = 1;
 910:src/keys.c    **** #else
 911:src/keys.c    **** 	  if (UState.intm)
 912:src/keys.c    **** 	    return op;
 913:src/keys.c    **** 	  State2.cmplx = 1;
 914:src/keys.c    **** #endif
 915:src/keys.c    **** 	  break;
 916:src/keys.c    **** 
 917:src/keys.c    **** 	case K24:				// <-
 918:src/keys.c    **** 		if (State2.disp_temp)
 919:src/keys.c    **** 			return STATE_UNFINISHED;
 920:src/keys.c    **** 		if (State2.runmode)
 921:src/keys.c    **** 			return op;
 922:src/keys.c    **** 		return STATE_BACKSPACE;
 923:src/keys.c    **** 
 924:src/keys.c    **** 	case K10:				// STO
 925:src/keys.c    **** 	case K11:				// RCL
 926:src/keys.c    **** 	case K30:				// XEQ
 927:src/keys.c    **** 		init_arg((enum rarg)op);
 928:src/keys.c    **** 		break;
 929:src/keys.c    **** 
 930:src/keys.c    **** 	default:
 931:src/keys.c    **** 		return op;			// Keys handled by table
 932:src/keys.c    **** 	}
 933:src/keys.c    **** 	return STATE_UNFINISHED;
 934:src/keys.c    **** }
 935:src/keys.c    **** 
 936:src/keys.c    **** 
 937:src/keys.c    **** /*
 938:src/keys.c    ****  *  Process a key code after f or g shift
 939:src/keys.c    ****  */
 940:src/keys.c    **** static int process_fg_shifted(const keycode c) {
 941:src/keys.c    **** 
ARM GAS  /tmp/ccgiIQCZ.s 			page 18


 942:src/keys.c    **** #define NO_INT 0xf000
 943:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 944:src/keys.c    **** 		// Row 1
 945:src/keys.c    **** 		{ 1,                               0                           }, // HYP
 946:src/keys.c    **** 		{ OP_MON | OP_SIN      | NO_INT,   OP_MON | OP_ASIN   | NO_INT },
 947:src/keys.c    **** 		{ OP_MON | OP_COS      | NO_INT,   OP_MON | OP_ACOS   | NO_INT },
 948:src/keys.c    **** 		{ OP_MON | OP_TAN      | NO_INT,   OP_MON | OP_ATAN   | NO_INT },
 949:src/keys.c    **** 		{ OP_NIL | OP_P2R      | NO_INT,   OP_NIL | OP_R2P    | NO_INT },
 950:src/keys.c    **** 		{ OP_NIL | OP_FRACPROPER,	   OP_NIL | OP_FRACIMPROPER    }, // CPX
 951:src/keys.c    **** 		// Row 2
 952:src/keys.c    **** 		{ OP_NIL | OP_HMS,                 OP_NIL | OP_DEG    | NO_INT },
 953:src/keys.c    **** 		{ OP_NIL | OP_FLOAT,               OP_NIL | OP_RAD    | NO_INT },
 954:src/keys.c    **** 		{ OP_NIL | OP_RANDOM,              OP_NIL | OP_GRAD   | NO_INT },
 955:src/keys.c    **** 		// Row 3
 956:src/keys.c    **** 		{ STATE_UNFINISHED,		   OP_NIL | OP_FILL            }, // ENTER
 957:src/keys.c    **** 		{ STATE_WINDOWLEFT,   		   STATE_WINDOWRIGHT   	       },
 958:src/keys.c    **** 		{ RARG(RARG_BASE, 2),		   RARG(RARG_BASE, 8)          },
 959:src/keys.c    **** 		{ RARG(RARG_BASE, 10),		   RARG(RARG_BASE, 16)         },
 960:src/keys.c    **** 		{ OP_NIL | OP_CLPROG,		   OP_NIL | OP_SIGMACLEAR      },
 961:src/keys.c    **** 		// Row 4
 962:src/keys.c    **** 		{ OP_MON | OP_EXP,                 OP_MON | OP_LN              },
 963:src/keys.c    **** 		{ OP_MON | OP_10POWX,		   OP_MON | OP_LOG             },
 964:src/keys.c    **** 		{ OP_MON | OP_2POWX,		   OP_MON | OP_LG2             },
 965:src/keys.c    **** 		{ OP_DYA | OP_POW,                 OP_DYA | OP_LOGXY           },
 966:src/keys.c    **** 		{ OP_MON | OP_RECIP    | NO_INT,   OP_DYA | OP_PARAL	       },
 967:src/keys.c    **** 		// Row 5
 968:src/keys.c    **** 		{ OP_DYA | OP_COMB,                OP_DYA | OP_PERM            },
 969:src/keys.c    **** 		{ OP_MON | OP_cdf_Q    | NO_INT,   OP_MON | OP_qf_Q   | NO_INT },
 970:src/keys.c    **** 		{ OP_NIL | OP_statMEAN | NO_INT,   OP_NIL | OP_statS  | NO_INT },
 971:src/keys.c    **** 		{ OP_MON | OP_yhat     | NO_INT,   OP_NIL | OP_statR  | NO_INT },
 972:src/keys.c    **** 		{ OP_MON | OP_SQRT,		   OP_MON | OP_SQR             },
 973:src/keys.c    **** 		// Row 6
 974:src/keys.c    **** 		{ RARG_SF,                         RARG_CF                     },
 975:src/keys.c    **** 		{ TST_EQ,                          TST_NE                      }, // tests
 976:src/keys.c    **** 		{ RARG_SOLVE           | NO_INT,   RARG_INTG          | NO_INT },
 977:src/keys.c    **** 		{ RARG_PROD            | NO_INT,   RARG_SUM           | NO_INT },
 978:src/keys.c    **** 		{ OP_MON | OP_PERCNT   | NO_INT,   OP_MON | OP_PERCHG | NO_INT },
 979:src/keys.c    **** 		// Row 7
 980:src/keys.c    **** #ifdef INFRARED
 981:src/keys.c    **** 		{ RARG(RARG_PRINT_REG,regX_idx),   STATE_UNFINISHED	       },
 982:src/keys.c    **** #else
 983:src/keys.c    **** 		{ STATE_UNFINISHED,		   STATE_UNFINISHED	       },
 984:src/keys.c    **** #endif
 985:src/keys.c    **** 		{ OP_MON | OP_ABS,		   OP_MON | OP_RND             },
 986:src/keys.c    **** 		{ OP_MON | OP_TRUNC,		   OP_MON | OP_FRAC            },
 987:src/keys.c    **** 		{ RARG_LBL,			   OP_NIL | OP_RTN             },
 988:src/keys.c    **** 		{ RARG_DSE,			   RARG_ISG                    },
 989:src/keys.c    **** #ifdef DM42
 990:src/keys.c    **** 		{ OP_NIL | OP_NOP,		   OP_NIL |OP_NOP              },
 991:src/keys.c    **** #endif
 992:src/keys.c    **** 	};
 993:src/keys.c    **** 
 994:src/keys.c    **** 	static const unsigned short int op_map2[] = {
 995:src/keys.c    **** 		STATE_UNFINISHED,
 996:src/keys.c    **** 		STATE_UNFINISHED,
 997:src/keys.c    **** 		OP_DYA  | OP_POW,
 998:src/keys.c    **** 		OP_MON  | OP_SQRT
ARM GAS  /tmp/ccgiIQCZ.s 			page 19


 999:src/keys.c    **** 	};
1000:src/keys.c    **** 
1001:src/keys.c    **** 	enum shifts shift = reset_shift();
1002:src/keys.c    **** 	int lc = keycode_to_linear(c);
1003:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
1004:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
1005:src/keys.c    **** 	if (no_int)
1006:src/keys.c    **** 		op &= ~NO_INT;
1007:src/keys.c    **** 
1008:src/keys.c    **** 	switch (c) {
1009:src/keys.c    **** 	case K00:
1010:src/keys.c    **** 	  if (! UState.intm) {
1011:src/keys.c    **** 	    State2.hyp = 1;
1012:src/keys.c    **** 	    State2.dot = op;
1013:src/keys.c    **** 	    // State2.cmplx = 0;
1014:src/keys.c    **** 	    return STATE_UNFINISHED;
1015:src/keys.c    **** 	  }
1016:src/keys.c    **** 	  // fall through
1017:src/keys.c    **** 	case K01:
1018:src/keys.c    **** #ifdef DM42
1019:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
1020:src/keys.c    **** 	    return check_f_key(lc, op_map2[lc]);
1021:src/keys.c    **** 	  }
1022:src/keys.c    **** 	  break;
1023:src/keys.c    **** #endif
1024:src/keys.c    **** #ifndef DM42
1025:src/keys.c    **** 	case K02:
1026:src/keys.c    **** #endif
1027:src/keys.c    **** 	case K03:
1028:src/keys.c    **** #ifdef DM42
1029:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
1030:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
1031:src/keys.c    **** 		}
1032:src/keys.c    **** 		break;
1033:src/keys.c    **** #else
1034:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
1035:src/keys.c    **** 			return check_f_key(2, op_map2[lc]);
1036:src/keys.c    **** 		}
1037:src/keys.c    **** 		break;
1038:src/keys.c    **** #endif
1039:src/keys.c    **** 	case K20:				// Alpha
1040:src/keys.c    **** 		if (shift == SHIFT_F) {
1041:src/keys.c    **** 			if (is_bad_cmdline())
1042:src/keys.c    **** 				return STATE_UNFINISHED;
1043:src/keys.c    **** 			process_cmdline_set_lift();
1044:src/keys.c    **** 			State2.alphas = 1;
1045:src/keys.c    **** #ifdef DM42
1046:src/keys.c    **** 			set_menu(M_Alpha);
1047:src/keys.c    **** 			display_current_menu();
1048:src/keys.c    **** #endif
1049:src/keys.c    **** 		}
1050:src/keys.c    **** 		break;
1051:src/keys.c    **** #ifdef DM42
1052:src/keys.c    **** 	case K31:
1053:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(13)) {// Log - so D key
1054:src/keys.c    **** 	    return OP_SPEC | OP_D;
1055:src/keys.c    **** 	  }
ARM GAS  /tmp/ccgiIQCZ.s 			page 20


1056:src/keys.c    **** 	  break;
1057:src/keys.c    **** 	case K30:
1058:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(14)) {// Ln - so E key
1059:src/keys.c    **** 	    return OP_SPEC | OP_E;
1060:src/keys.c    **** 	  }
1061:src/keys.c    **** 	  break;
1062:src/keys.c    **** #endif
1063:src/keys.c    **** 	case K51:
1064:src/keys.c    **** 		if (is_bad_cmdline())
1065:src/keys.c    **** 			return STATE_UNFINISHED;
1066:src/keys.c    **** 		process_cmdline_set_lift();
1067:src/keys.c    **** 		State2.test = op;
1068:src/keys.c    **** 		return STATE_UNFINISHED;
1069:src/keys.c    **** 
1070:src/keys.c    **** 	case K50:
1071:src/keys.c    **** #ifndef REALBUILD
1072:src/keys.c    **** 		if (SHIFT_N != shift_down()) {
1073:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
1074:src/keys.c    **** 			return STATE_UNFINISHED;
1075:src/keys.c    **** 		}
1076:src/keys.c    **** #endif
1077:src/keys.c    **** 	case K52:
1078:src/keys.c    **** 	case K53:
1079:src/keys.c    **** 	case K63:
1080:src/keys.c    **** 	case K64:
1081:src/keys.c    **** 		if (op != (OP_NIL | OP_RTN)) {
1082:src/keys.c    **** 			if (! (no_int && UState.intm)) {
1083:src/keys.c    **** 				init_arg((enum rarg) op);
1084:src/keys.c    **** 			}
1085:src/keys.c    **** 			return STATE_UNFINISHED;
1086:src/keys.c    **** 		}
1087:src/keys.c    **** 		break;
1088:src/keys.c    **** 
1089:src/keys.c    **** 	default:
1090:src/keys.c    **** 		break;
1091:src/keys.c    **** 	}
1092:src/keys.c    **** 	if (no_int && UState.intm)
1093:src/keys.c    **** 		return STATE_UNFINISHED;
1094:src/keys.c    **** 
1095:src/keys.c    **** 	return check_confirm(op);
1096:src/keys.c    **** #undef NO_INT
1097:src/keys.c    **** }
1098:src/keys.c    **** 
1099:src/keys.c    **** /*
1100:src/keys.c    ****  *  Process a key code after h shift
1101:src/keys.c    ****  */
1102:src/keys.c    **** static int process_h_shifted(const keycode c) {
1103:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
1104:src/keys.c    **** #define NO_INT   0x4000
1105:src/keys.c    **** 	static const unsigned short int op_map[] = {
1106:src/keys.c    **** 		// Row 1
1107:src/keys.c    **** 		_RARG   | RARG_STD,
1108:src/keys.c    **** 		_RARG   | RARG_FIX,
1109:src/keys.c    **** 		_RARG   | RARG_SCI,
1110:src/keys.c    **** 		_RARG   | RARG_ENG,
1111:src/keys.c    **** 		STATE_UNFINISHED,	// CONV
1112:src/keys.c    **** 		STATE_UNFINISHED,	// MODE
ARM GAS  /tmp/ccgiIQCZ.s 			page 21


1113:src/keys.c    **** 		// Row 2
1114:src/keys.c    **** 		STATE_UNFINISHED,	// CAT
1115:src/keys.c    **** 		_RARG   | RARG_VIEW,
1116:src/keys.c    **** 		OP_NIL  | OP_RUP,
1117:src/keys.c    **** 		// Row 3
1118:src/keys.c    **** 		_RARG	| RARG_INTNUM,	// CONST, will be emitted in integer mode only
1119:src/keys.c    **** 		_RARG   | RARG_SWAPX,
1120:src/keys.c    **** 		OP_MON  | OP_NOT,
1121:src/keys.c    **** 		CONST(OP_PI) | NO_INT,
1122:src/keys.c    **** 		OP_NIL  | OP_rCLX,
1123:src/keys.c    **** 		// Row 4
1124:src/keys.c    **** 		_RARG   | RARG_GTO,
1125:src/keys.c    **** 		OP_DYA  | OP_LAND,
1126:src/keys.c    **** 		OP_DYA  | OP_LOR,
1127:src/keys.c    **** 		OP_DYA  | OP_LXOR,
1128:src/keys.c    **** 		OP_DYA  | OP_MOD,
1129:src/keys.c    **** 		// Row 5
1130:src/keys.c    **** 		OP_MON  | OP_FACT,
1131:src/keys.c    **** 		STATE_UNFINISHED,	// PROB
1132:src/keys.c    **** 		STATE_UNFINISHED,	// STAT
1133:src/keys.c    **** 		STATE_UNFINISHED,	// CFIT
1134:src/keys.c    **** 		STATE_UNFINISHED,	// MATRIX
1135:src/keys.c    **** 		// Row 6
1136:src/keys.c    **** 		STATE_UNFINISHED,	// STATUS
1137:src/keys.c    **** 		STATE_UNFINISHED,	// TEST
1138:src/keys.c    **** 		STATE_UNFINISHED,	// P.FCN
1139:src/keys.c    **** 		STATE_UNFINISHED,	// X.FCN
1140:src/keys.c    **** 		OP_SPEC | OP_SIGMAMINUS | NO_INT,
1141:src/keys.c    **** 		// Row 7
1142:src/keys.c    **** 		OP_NIL | OP_OFF,
1143:src/keys.c    **** 		_RARG   | RARG_PAUSE,
1144:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1145:src/keys.c    **** 		OP_NIL  | OP_THOUS_OFF,
1146:src/keys.c    **** #else
1147:src/keys.c    ****  		OP_NIL  | OP_RADCOM,
1148:src/keys.c    **** #endif
1149:src/keys.c    **** 		STATE_UNFINISHED,	// P/R
1150:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS | NO_INT,
1151:src/keys.c    **** #ifdef DM42
1152:src/keys.c    **** 		OP_NIL | OP_NOP,       // shifts etc.
1153:src/keys.c    **** #endif
1154:src/keys.c    **** 	};
1155:src/keys.c    **** 
1156:src/keys.c    **** 	int lc = keycode_to_linear(c);
1157:src/keys.c    **** 	int op = op_map[lc];
1158:src/keys.c    **** 	reset_shift();
1159:src/keys.c    **** 
1160:src/keys.c    **** 	// The switch handles all the special cases
1161:src/keys.c    **** 	switch (c) {
1162:src/keys.c    **** 	case K62:
1163:src/keys.c    **** 		if (UState.intm)
1164:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
1165:src/keys.c    **** 		else
1166:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1167:src/keys.c    **** 			if (UState.nothousands) op = OP_NIL | OP_THOUS_ON;
1168:src/keys.c    **** #else
1169:src/keys.c    **** 			if (UState.fraccomma) op = OP_NIL | OP_RADDOT;
ARM GAS  /tmp/ccgiIQCZ.s 			page 22


1170:src/keys.c    **** #endif
1171:src/keys.c    **** 		break;
1172:src/keys.c    **** 
1173:src/keys.c    **** 	case K63:					// Program<->Run mode
1174:src/keys.c    **** 		if (is_bad_cmdline())
1175:src/keys.c    **** 			return STATE_UNFINISHED;
1176:src/keys.c    **** 		State2.runmode = 1 - State2.runmode;
1177:src/keys.c    **** 		process_cmdline_set_lift();
1178:src/keys.c    **** 		update_program_bounds(1);
1179:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
1180:src/keys.c    **** 			set_pc(0);
1181:src/keys.c    **** 		break;
1182:src/keys.c    **** 
1183:src/keys.c    **** 	default:
1184:src/keys.c    **** 		break;
1185:src/keys.c    **** 	}
1186:src/keys.c    **** 
1187:src/keys.c    **** 	if (op != STATE_UNFINISHED) {
1188:src/keys.c    **** 		if (op & _RARG) {
1189:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
1190:src/keys.c    **** 			op = STATE_UNFINISHED;
1191:src/keys.c    **** 		}
1192:src/keys.c    **** 	}
1193:src/keys.c    **** 	return UState.intm && (op & NO_INT) ? STATE_UNFINISHED : op & ~NO_INT;
1194:src/keys.c    **** #undef _RARG
1195:src/keys.c    **** #undef NO_INT
1196:src/keys.c    **** }
1197:src/keys.c    **** #ifdef INCLUDE_C_LOCK
1198:src/keys.c    **** 
1199:src/keys.c    **** // Big section here - lots of functions that help with processing keys in complex lock mode
1200:src/keys.c    **** 
1201:src/keys.c    **** static void do_command_line ( void ) {
1202:src/keys.c    **** 	if (CmdLineLength) {
1203:src/keys.c    **** 		State2.state_lift = 0;
1204:src/keys.c    **** 		process_cmdline();
1205:src/keys.c    **** 	}
1206:src/keys.c    **** }
1207:src/keys.c    **** 
1208:src/keys.c    **** void finish_cpx_entry ( int lift ) {
1209:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
1210:src/keys.c    **** // The argument sets the lift state after entry is finished.
1211:src/keys.c    **** // It also converts entered polar form into rectangular coordinates, if needed.
1212:src/keys.c    **** // Note: does nothing to stack or lift state if number not being entered.
1213:src/keys.c    **** 	if ( !( REAL_FLAG || IMAG_FLAG ) ) return;
1214:src/keys.c    **** 
1215:src/keys.c    **** /*	if (REAL_FLAG) { // real part being entered
1216:src/keys.c    **** 		CLEAR_REAL;
1217:src/keys.c    **** 		do_command_line();
1218:src/keys.c    **** 	}
1219:src/keys.c    **** 	else if (IMAG_FLAG) {
1220:src/keys.c    **** 		CLEAR_IMAG;
1221:src/keys.c    **** 		do_command_line();
1222:src/keys.c    **** 		swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
1223:src/keys.c    **** 	}
1224:src/keys.c    **** */
1225:src/keys.c    **** 	do_command_line();
1226:src/keys.c    **** 	if (IMAG_FLAG) swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
ARM GAS  /tmp/ccgiIQCZ.s 			page 23


1227:src/keys.c    **** 	CLEAR_REAL;
1228:src/keys.c    **** 	CLEAR_IMAG;
1229:src/keys.c    **** 
1230:src/keys.c    **** 	State2.state_lift = lift;
1231:src/keys.c    **** 
1232:src/keys.c    **** 	if ( POLAR_DISPLAY && POLAR_FORM_NOT_READY ) {
1233:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
1234:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regX_idx));
1235:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
1236:src/keys.c    **** 		//call p2r
1237:src/keys.c    **** 		update_speed(0);
1238:src/keys.c    **** 		op_p2r(OP_NOP); // x, y now contain rectangular form
1239:src/keys.c    **** #ifdef RP_PREFIX
1240:src/keys.c    **** 		RectPolConv = 1; // stop "y" display
1241:src/keys.c    **** #endif
1242:src/keys.c    **** 		SET_POLAR_READY;
1243:src/keys.c    **** 	}
1244:src/keys.c    **** }
1245:src/keys.c    **** 
1246:src/keys.c    **** static void stack_restore ( void ) { 
1247:src/keys.c    **** 	// called if number entry terminated by EXIT key
1248:src/keys.c    **** 	// uses J and K registers to store the two stack registers displaced by the new entry
1249:src/keys.c    **** 	// tried declaring some static variables to hold the numbers but didn't work on real calculator
1250:src/keys.c    **** 	if ( !REAL_FLAG && !IMAG_FLAG  ) return; // number entry already over; no restore
1251:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
1252:src/keys.c    **** 		drop ( OP_DROPXY );
1253:src/keys.c    **** 		copyreg (get_reg_n(regC_idx), get_reg_n(regJ_idx));
1254:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
1255:src/keys.c    **** 	}
1256:src/keys.c    **** 	else { // X, Y have been overwritten
1257:src/keys.c    **** 		copyreg (get_reg_n(regX_idx), get_reg_n(regJ_idx));
1258:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
1259:src/keys.c    **** 	}
1260:src/keys.c    **** 	State2.state_lift = INIT_LIFT; // restore lift status too
1261:src/keys.c    **** 	CLEAR_INIT_LIFT;
1262:src/keys.c    **** 	CLEAR_POLAR_READY;
1263:src/keys.c    **** }
1264:src/keys.c    **** 
1265:src/keys.c    **** void stack_begin ( int zero_y ) { 
1266:src/keys.c    **** 	// Lifts stack if required and stores displaced registers; 
1267:src/keys.c    **** 	// zeros y if requested. 
1268:src/keys.c    **** 	CLEAR_POLAR_READY;
1269:src/keys.c    **** 	if ( State2.state_lift ){
1270:src/keys.c    **** 		SET_INIT_LIFT;
1271:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regC_idx));
1272:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
1273:src/keys.c    **** 		lift();
1274:src/keys.c    **** 		zero_X();
1275:src/keys.c    **** 		lift();
1276:src/keys.c    **** 		State2.state_lift = 0;
1277:src/keys.c    **** 	}
1278:src/keys.c    **** 	else {
1279:src/keys.c    **** 		CLEAR_INIT_LIFT;
1280:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regX_idx));
1281:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
1282:src/keys.c    **** 		zero_X();
1283:src/keys.c    **** 		if ( zero_y ) zero_Y();
ARM GAS  /tmp/ccgiIQCZ.s 			page 24


1284:src/keys.c    **** 	}
1285:src/keys.c    **** }
1286:src/keys.c    **** 
1287:src/keys.c    ****  static int process_c_lock ( const keycode c ) { // main function - called from process (c) functio
1288:src/keys.c    **** 
1289:src/keys.c    ****    enum shifts shift = cur_shift();
1290:src/keys.c    **** 
1291:src/keys.c    ****    // Individual keys needing special treatment
1292:src/keys.c    **** 
1293:src/keys.c    ****    if ( (c < K05) && shift == SHIFT_H ){ // display modes
1294:src/keys.c    ****      return process_h_shifted (c);
1295:src/keys.c    ****    }
1296:src/keys.c    **** 
1297:src/keys.c    **** 
1298:src/keys.c    ****    if ( (shift == SHIFT_G) && (c >= K10) && (c <= K12) ) { // angle mode change; needed because oth
1299:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
1300:src/keys.c    ****    }
1301:src/keys.c    ****    if ( (c >= K05) && (c <= K12) && (shift == SHIFT_F || shift == SHIFT_G) ) { // Deg, rad, grad, H
1302:src/keys.c    ****      return process_fg_shifted (c);
1303:src/keys.c    ****    }
1304:src/keys.c    **** 
1305:src/keys.c    ****    if (c==K23) { // pi key - needs to be separate from what follows as it doesn't want entry comple
1306:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
1307:src/keys.c    ****        reset_shift();
1308:src/keys.c    ****        if ( CmdLineLength ) {
1309:src/keys.c    **** 	 State2.state_lift = 0;
1310:src/keys.c    **** 	 return OP_NIL | OP_PIB;
1311:src/keys.c    ****        }
1312:src/keys.c    ****        else {
1313:src/keys.c    **** 	 return OP_NIL | OP_PIA;
1314:src/keys.c    ****        }
1315:src/keys.c    ****      }
1316:src/keys.c    ****      else {
1317:src/keys.c    **** #if INCLUDE_EEX_PI == 2
1318:src/keys.c    ****        const int eex_pi = 1;
1319:src/keys.c    **** #elif INCLUDE_EEX_PI == 1
1320:src/keys.c    ****        const int eex_pi = get_user_flag(regL_idx);
1321:src/keys.c    **** #else
1322:src/keys.c    ****        const int eex_pi = 0;
1323:src/keys.c    **** #endif
1324:src/keys.c    ****        if ( (shift == SHIFT_H) || (eex_pi && (shift == SHIFT_N) && CmdLineLength == 0) ) { // norma
1325:src/keys.c    **** 	 finish_cpx_entry(1);
1326:src/keys.c    **** 	 return process_cmplx(c);
1327:src/keys.c    ****        }
1328:src/keys.c    ****      }
1329:src/keys.c    ****    }
1330:src/keys.c    **** 
1331:src/keys.c    ****    if (shift != SHIFT_N) { // other shifted keys - special cases first.
1332:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
1333:src/keys.c    ****      switch (c) {
1334:src/keys.c    ****      case (K60):
1335:src/keys.c    ****        reset_shift();
1336:src/keys.c    ****        if (shift == SHIFT_H) return (OP_NIL | OP_OFF);
1337:src/keys.c    ****      case (K21): // x<->y key
1338:src/keys.c    ****        if (shift == SHIFT_F) { // changed this for DM42
1339:src/keys.c    **** 	 return process_fg_shifted(c); // SHOW
1340:src/keys.c    ****        }
ARM GAS  /tmp/ccgiIQCZ.s 			page 25


1341:src/keys.c    ****        if (shift == SHIFT_G) {
1342:src/keys.c    **** 	 reset_shift();
1343:src/keys.c    **** 	 return process_normal(K21); // x<>y
1344:src/keys.c    ****        }
1345:src/keys.c    ****        break;
1346:src/keys.c    ****      case (K40): // up-arrow key
1347:src/keys.c    ****        if (shift == SHIFT_F) {
1348:src/keys.c    **** 	 SET_RECTANGULAR_DISPLAY;
1349:src/keys.c    ****        }
1350:src/keys.c    ****        else if (shift == SHIFT_G) {
1351:src/keys.c    **** 	 SET_POLAR_DISPLAY;
1352:src/keys.c    **** 	 CLEAR_POLAR_READY;
1353:src/keys.c    **** 	 update_speed(0); // new polar display calculated from keyboard needs a speed boost
1354:src/keys.c    ****        }
1355:src/keys.c    ****        else if (shift == SHIFT_H) { // ND addition on DM42 - should work on ordinary calculator too
1356:src/keys.c    **** 	 return process_cmplx (c);
1357:src/keys.c    ****        }
1358:src/keys.c    ****        break;
1359:src/keys.c    ****      case (K22): // +/- key
1360:src/keys.c    ****        reset_shift();
1361:src/keys.c    ****        if (shift == SHIFT_F ) {
1362:src/keys.c    **** 	 return OP_NIL | OP_C_MIM;
1363:src/keys.c    ****        }
1364:src/keys.c    ****        else if (shift == SHIFT_H) {
1365:src/keys.c    **** 	 return OP_NIL | OP_C_MRE;
1366:src/keys.c    ****        }
1367:src/keys.c    ****        break;
1368:src/keys.c    ****      case (K62): // IP/FP key
1369:src/keys.c    ****        reset_shift();
1370:src/keys.c    ****        if (shift == SHIFT_F) {
1371:src/keys.c    **** 	 return OP_NIL | OP_C_IM;
1372:src/keys.c    ****        }
1373:src/keys.c    ****        else if (shift == SHIFT_G) {
1374:src/keys.c    **** 	 return OP_NIL | OP_C_RE;
1375:src/keys.c    ****        }
1376:src/keys.c    ****        break;
1377:src/keys.c    ****      case (K44): // x (times) key
1378:src/keys.c    ****        if (shift == SHIFT_H) { // real*real + i imag*imag
1379:src/keys.c    **** 	 reset_shift();
1380:src/keys.c    **** 	 return OP_CDYA | OP_CDOT;
1381:src/keys.c    ****        }
1382:src/keys.c    ****        else {
1383:src/keys.c    **** 	 return process_cmplx(c);
1384:src/keys.c    ****        }
1385:src/keys.c    ****        break;
1386:src/keys.c    ****      case (K34): // divide key
1387:src/keys.c    ****        if (shift == SHIFT_H) { // real/real + i imag/imag
1388:src/keys.c    **** 	 reset_shift();
1389:src/keys.c    **** 	 return OP_CDYA | OP_CDOTDIV;
1390:src/keys.c    ****        }
1391:src/keys.c    ****        else {
1392:src/keys.c    **** 	 return process_cmplx(c);
1393:src/keys.c    ****        }
1394:src/keys.c    ****        break;
1395:src/keys.c    ****      case (K24): // <- key
1396:src/keys.c    ****        if (POLAR_DISPLAY) break;
1397:src/keys.c    ****        if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real pa
ARM GAS  /tmp/ccgiIQCZ.s 			page 26


1398:src/keys.c    **** 	 zero_X ();
1399:src/keys.c    **** 	 State2.state_lift = 0;
1400:src/keys.c    **** 	 SET_REAL;
1401:src/keys.c    **** 	 stack_begin (0);
1402:src/keys.c    ****        }
1403:src/keys.c    ****        break;
1404:src/keys.c    ****      default:
1405:src/keys.c    ****        return process_cmplx(c); // for shifted keys not listed above
1406:src/keys.c    ****      }
1407:src/keys.c    ****      reset_shift(); // for the keys listed above; functions complete
1408:src/keys.c    ****      return STATE_UNFINISHED;
1409:src/keys.c    ****    }
1410:src/keys.c    **** 
1411:src/keys.c    ****    switch (c) { // non-shifted keys including numbers - in general, keys to be processed normally n
1412:src/keys.c    ****    case (K61):
1413:src/keys.c    ****    case (K62):
1414:src/keys.c    ****    case (K51):
1415:src/keys.c    ****    case (K52):
1416:src/keys.c    ****    case (K53):
1417:src/keys.c    ****    case (K41):
1418:src/keys.c    ****    case (K42):
1419:src/keys.c    ****    case (K43):
1420:src/keys.c    ****    case (K31):
1421:src/keys.c    ****    case (K32):
1422:src/keys.c    ****    case (K33):
1423:src/keys.c    ****    case (K23): // 0.123456789EEX
1424:src/keys.c    ****      if (!REAL_FLAG && !IMAG_FLAG) {
1425:src/keys.c    ****        SET_REAL; // start and continuation of real entry
1426:src/keys.c    ****        stack_begin (1);
1427:src/keys.c    ****      }
1428:src/keys.c    ****      return process_normal(c);
1429:src/keys.c    ****    case (K22): // CHS
1430:src/keys.c    ****      //	case (K23): // EEX
1431:src/keys.c    ****      if (!REAL_FLAG && !IMAG_FLAG) {
1432:src/keys.c    ****        return process_cmplx(c);
1433:src/keys.c    ****      }
1434:src/keys.c    ****      else {
1435:src/keys.c    ****        return process_normal(c);
1436:src/keys.c    ****      }
1437:src/keys.c    ****    case (K24): // backspace
1438:src/keys.c    ****    case (K04): // arrow
1439:src/keys.c    ****    case (K_ARROW):
1440:src/keys.c    ****      return process_normal(c);
1441:src/keys.c    ****    case (K_CMPLX):
1442:src/keys.c    ****      if (REAL_FLAG) { // Something - at least one digit - has been entered; real part now complete
1443:src/keys.c    ****        CLEAR_REAL;
1444:src/keys.c    ****        SET_IMAG;
1445:src/keys.c    ****        do_command_line();
1446:src/keys.c    ****        State2.state_lift = 0;
1447:src/keys.c    ****        swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
1448:src/keys.c    ****      }
1449:src/keys.c    ****      else if (IMAG_FLAG) { // finishing off imag part; nothing has necessarily been entered
1450:src/keys.c    ****        finish_cpx_entry (1);
1451:src/keys.c    ****      }
1452:src/keys.c    ****      else { // down here we need a part that deals with CPX being pressed without a real part being
1453:src/keys.c    ****        SET_IMAG;
1454:src/keys.c    ****        stack_begin (1);
ARM GAS  /tmp/ccgiIQCZ.s 			page 27


1455:src/keys.c    ****      }
1456:src/keys.c    ****      return STATE_UNFINISHED;
1457:src/keys.c    ****    default:;
1458:src/keys.c    ****    }
1459:src/keys.c    ****    finish_cpx_entry(0);
1460:src/keys.c    ****    return process_cmplx(c);
1461:src/keys.c    **** 
1462:src/keys.c    ****  }
1463:src/keys.c    **** 
1464:src/keys.c    **** #endif
1465:src/keys.c    **** 
1466:src/keys.c    **** /*
1467:src/keys.c    ****  *  Process a key code after CPX
1468:src/keys.c    ****  */
1469:src/keys.c    **** static int process_cmplx(const keycode c) {
1470:src/keys.c    **** #define _RARG   0xFF00
1471:src/keys.c    **** #define CSWAPXZ RARG(RARG_CSWAPX, regZ_idx)
1472:src/keys.c    **** #define CNUM(n) RARG(RARG_INTNUM_CMPLX, n)
1473:src/keys.c    **** 
1474:src/keys.c    **** 	static const unsigned short int op_map[][4] = {
1475:src/keys.c    **** 		// Row 1
1476:src/keys.c    **** 		{ 1,			1,                   0,                   0		      }, // HYP
1477:src/keys.c    **** 		{ OP_CMON | OP_RECIP,	OP_CMON | OP_SIN,    OP_CMON | OP_ASIN,   STATE_UNFINISHED    },
1478:src/keys.c    **** 		{ OP_CDYA | OP_POW,	OP_CMON | OP_COS,    OP_CMON | OP_ACOS,   STATE_UNFINISHED    },
1479:src/keys.c    **** 		{ OP_CMON | OP_SQRT,	OP_CMON | OP_TAN,    OP_CMON | OP_ATAN,   STATE_UNFINISHED    },
1480:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_NIL | OP_P2R,     OP_NIL | OP_R2P,     STATE_UNFINISHED    },
1481:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    }, // CPX
1482:src/keys.c    **** 		// Row 2
1483:src/keys.c    **** 		{ _RARG | RARG_CSTO,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1484:src/keys.c    **** 		{ _RARG | RARG_CRCL,	STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CVIEW  },
1485:src/keys.c    **** 		{ OP_NIL | OP_CRDOWN,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_CRUP    }, // R^
1486:src/keys.c    **** 		// Row 3
1487:src/keys.c    **** 		{ OP_NIL | OP_CENTER,	STATE_UNFINISHED,    OP_NIL | OP_CFILL,   OP_NIL | OP_CFILL   }, // ENTER
1488:src/keys.c    **** 		{ CSWAPXZ,		STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CSWAPX },
1489:src/keys.c    **** 		{ OP_CMON | OP_CCHS,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_CMON | OP_CCONJ  },
1490:src/keys.c    **** 		{ CONST_CMPLX(OP_PI),	STATE_UNFINISHED,    STATE_UNFINISHED,    CONST_CMPLX(OP_PI)  },
1491:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1492:src/keys.c    **** 		// Row 4
1493:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CMON | OP_EXP,    OP_CMON | OP_LN,     STATE_UNFINISHED    },
1494:src/keys.c    **** 		{ CNUM(7),		OP_CMON | OP_10POWX, OP_CMON | OP_LOG,    STATE_UNFINISHED    },
1495:src/keys.c    **** 		{ CNUM(8),		OP_CMON | OP_2POWX,  OP_CMON | OP_LG2,    STATE_UNFINISHED    },
1496:src/keys.c    **** 		{ CNUM(9),		OP_CDYA | OP_POW,    OP_CDYA | OP_LOGXY,  STATE_UNFINISHED    },
1497:src/keys.c    **** 		{ OP_CDYA | OP_DIV,	OP_CMON | OP_RECIP,  OP_CDYA | OP_PARAL,  STATE_UNFINISHED    },
1498:src/keys.c    **** 		// Row 5
1499:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CDYA | OP_COMB,   OP_CDYA | OP_PERM,   OP_CMON | OP_FACT   },
1500:src/keys.c    **** 		{ CNUM(4),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1501:src/keys.c    **** 		{ CNUM(5),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1502:src/keys.c    **** 		{ CNUM(6),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1503:src/keys.c    **** 		{ OP_CDYA | OP_MUL,	OP_CMON | OP_SQRT,   OP_CMON | OP_SQR,    OP_CMON | OP_SQR    },
1504:src/keys.c    **** 		// Row 6
1505:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1506:src/keys.c    **** 		{ CNUM(1),		TST_EQ,              TST_NE,              STATE_UNFINISHED    }, // tests
1507:src/keys.c    **** 		{ CNUM(2),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1508:src/keys.c    **** 		{ CNUM(3),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1509:src/keys.c    **** 		{ OP_CDYA | OP_SUB,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1510:src/keys.c    **** 		// Row 7
1511:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_OFF     },
ARM GAS  /tmp/ccgiIQCZ.s 			page 28


1512:src/keys.c    **** 		{ CNUM(0),		OP_CMON | OP_ABS,    OP_CMON | OP_RND,    STATE_UNFINISHED    },
1513:src/keys.c    **** 		{ OP_NIL | OP_cmplxI,	OP_CMON | OP_TRUNC,  OP_CMON | OP_FRAC,   STATE_UNFINISHED    },
1514:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1515:src/keys.c    **** 		{ OP_NIL | OP_STOPWATCH, STATE_UNFINISHED,   STATE_UNFINISHED,    STATE_UNFINISHED    },
1516:src/keys.c    **** #else
1517:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1518:src/keys.c    **** #endif
1519:src/keys.c    **** 		{ OP_CDYA | OP_ADD,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1520:src/keys.c    **** #ifdef DM42
1521:src/keys.c    **** 		{ OP_NIL | OP_NOP,	OP_NIL | OP_NOP,    OP_NIL | OP_NOP,    OP_NIL | OP_NOP    }
1522:src/keys.c    **** #endif
1523:src/keys.c    **** 	};
1524:src/keys.c    **** 
1525:src/keys.c    **** 	enum shifts shift = reset_shift();
1526:src/keys.c    **** 	int lc = keycode_to_linear(c);
1527:src/keys.c    **** 	int op = op_map[lc][shift];
1528:src/keys.c    **** 	State2.cmplx = 0;
1529:src/keys.c    **** 
1530:src/keys.c    **** 	if ((op & _RARG) == _RARG) {
1531:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
1532:src/keys.c    **** 		return STATE_UNFINISHED;
1533:src/keys.c    **** 	}
1534:src/keys.c    **** 	if (c == K00) {
1535:src/keys.c    **** 		// HYP
1536:src/keys.c    **** 		process_cmdline_set_lift();
1537:src/keys.c    **** 		State2.hyp = 1;
1538:src/keys.c    **** 		State2.dot = op;
1539:src/keys.c    **** 		State2.cmplx = 1;
1540:src/keys.c    **** 		return STATE_UNFINISHED;
1541:src/keys.c    **** 	}
1542:src/keys.c    **** 
1543:src/keys.c    **** 	if (shift != SHIFT_N) {
1544:src/keys.c    **** 		switch (c) {
1545:src/keys.c    **** 		case K_CMPLX:
1546:src/keys.c    **** 			set_shift(shift);
1547:src/keys.c    **** 			break;
1548:src/keys.c    **** 
1549:src/keys.c    **** 		case K51:
1550:src/keys.c    **** 			if (op != STATE_UNFINISHED) {
1551:src/keys.c    **** 				if (is_bad_cmdline())
1552:src/keys.c    **** 					return STATE_UNFINISHED;
1553:src/keys.c    **** 				process_cmdline_set_lift();
1554:src/keys.c    **** 				State2.cmplx = 1;
1555:src/keys.c    **** 				State2.test = op;
1556:src/keys.c    **** 			}
1557:src/keys.c    **** 			return STATE_UNFINISHED;
1558:src/keys.c    **** 
1559:src/keys.c    **** 		case K60:
1560:src/keys.c    **** 			init_state();
1561:src/keys.c    **** 			break;
1562:src/keys.c    **** 
1563:src/keys.c    **** 		default:
1564:src/keys.c    **** 			break;
1565:src/keys.c    **** 		}
1566:src/keys.c    **** 	}
1567:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1568:src/keys.c    **** 	return check_confirm(op);
ARM GAS  /tmp/ccgiIQCZ.s 			page 29


1569:src/keys.c    **** #else
1570:src/keys.c    **** 	return op;
1571:src/keys.c    **** #endif
1572:src/keys.c    **** 
1573:src/keys.c    **** #undef _RARG
1574:src/keys.c    **** #undef CSWAPXZ
1575:src/keys.c    **** #undef CNUM
1576:src/keys.c    **** }
1577:src/keys.c    **** 
1578:src/keys.c    **** 
1579:src/keys.c    **** 
1580:src/keys.c    **** /*
1581:src/keys.c    ****  * Fairly simple routine for dealing with the HYP prefix.
1582:src/keys.c    ****  * This setting can only be followed by 4, 5, or 6 to specify
1583:src/keys.c    ****  * the function.  The inverse routines use the code too, the State2.dot
1584:src/keys.c    ****  * is 1 for normal and 0 for inverse hyperbolic.  We also have to
1585:src/keys.c    ****  * deal with the complex versions and the handling of that key and
1586:src/keys.c    ****  * the ON key are dealt with by our caller.
1587:src/keys.c    ****  */
1588:src/keys.c    **** static int process_hyp(const keycode c) {
1589:src/keys.c    **** 	static const unsigned char op_map[][2] = {
1590:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
1591:src/keys.c    **** 		{ OP_ACOSH, OP_COSH },
1592:src/keys.c    **** 		{ OP_ATANH, OP_TANH }
1593:src/keys.c    **** 	};
1594:src/keys.c    **** 	int cmplx = State2.cmplx;
1595:src/keys.c    **** 	int f = State2.dot;
1596:src/keys.c    **** 
1597:src/keys.c    **** 	State2.hyp = 0;
1598:src/keys.c    **** 	State2.cmplx = 0;
1599:src/keys.c    **** 	State2.dot = 0;
1600:src/keys.c    **** #ifdef DM42
1601:src/keys.c    **** 	reset_shift();
1602:src/keys.c    **** #endif
1603:src/keys.c    **** 	switch ((int)c) {
1604:src/keys.c    **** 
1605:src/keys.c    **** 	case K01:
1606:src/keys.c    **** 	case K02:
1607:src/keys.c    **** 	case K03:
1608:src/keys.c    **** 		return (cmplx ? OP_CMON : OP_MON) | op_map[c - K01][f];
1609:src/keys.c    **** 
1610:src/keys.c    **** 	case K_CMPLX:
1611:src/keys.c    **** 		cmplx = ! cmplx;
1612:src/keys.c    **** 		goto stay;
1613:src/keys.c    **** 
1614:src/keys.c    **** #ifndef DM42
1615:src/keys.c    **** 	case K_F: 
1616:src/keys.c    **** 	case K_G:
1617:src/keys.c    **** 		f = (c == K_F);
1618:src/keys.c    **** 		// fall through
1619:src/keys.c    **** #else
1620:src/keys.c    **** 	case K_F:
1621:src/keys.c    **** 	  if (c == K_F) f = 1 - f;
1622:src/keys.c    **** #endif
1623:src/keys.c    **** 	stay:
1624:src/keys.c    **** 	  State2.hyp = 1;
1625:src/keys.c    **** 		State2.cmplx = cmplx;
ARM GAS  /tmp/ccgiIQCZ.s 			page 30


1626:src/keys.c    **** 		State2.dot = f;
1627:src/keys.c    **** 		break;
1628:src/keys.c    **** 
1629:src/keys.c    **** 	default:
1630:src/keys.c    **** 		break;
1631:src/keys.c    **** 	}
1632:src/keys.c    **** 	return STATE_UNFINISHED;
1633:src/keys.c    **** }
1634:src/keys.c    **** 
1635:src/keys.c    **** 
1636:src/keys.c    **** /*
1637:src/keys.c    ****  *  Process a key code after ->
1638:src/keys.c    ****  */
1639:src/keys.c    **** static int process_arrow(const keycode c) {
1640:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
1641:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
1642:src/keys.c    **** 		{ OP_MON | OP_2RAD,  OP_MON | OP_HMS2 },
1643:src/keys.c    **** 		{ OP_MON | OP_2GRAD, STATE_UNFINISHED }
1644:src/keys.c    **** 	};
1645:src/keys.c    **** 	static const enum single_disp disp[][2] = {
1646:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
1647:src/keys.c    **** 		{ SDISP_HEX, SDISP_DEC }
1648:src/keys.c    **** 	};
1649:src/keys.c    **** 	const int shift = reset_shift();
1650:src/keys.c    **** 	const int f = (shift == SHIFT_F);
1651:src/keys.c    **** 
1652:src/keys.c    **** 	State2.arrow = 0;
1653:src/keys.c    **** #ifdef DM42
1654:src/keys.c    **** 	set_last_menu ();
1655:src/keys.c    **** 	display_current_menu ();
1656:src/keys.c    **** #endif
1657:src/keys.c    **** #ifdef INCLUDE_C_LOCK
1658:src/keys.c    **** 	if (c == K_CMPLX && CPX_ENABLED) { // need this before the SHIFT_N test
1659:src/keys.c    **** 	  if (!C_LOCK_ON) {
1660:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
1661:src/keys.c    **** 	  }
1662:src/keys.c    **** 	  else {
1663:src/keys.c    **** 	    return OP_NIL | OP_C_OFF;
1664:src/keys.c    **** 	  }
1665:src/keys.c    **** 	}
1666:src/keys.c    **** #endif
1667:src/keys.c    **** 	if (shift == SHIFT_N) return STATE_UNFINISHED;
1668:src/keys.c    **** 	
1669:src/keys.c    **** 	if (c >= K10 && c <= K12)
1670:src/keys.c    **** 		return op_map[c - K10][f];
1671:src/keys.c    **** 
1672:src/keys.c    **** 	if (c == K22 || c == K23)
1673:src/keys.c    **** 		set_smode(disp[c - K22][f]);
1674:src/keys.c    **** 
1675:src/keys.c    **** 	return STATE_UNFINISHED;
1676:src/keys.c    **** }
1677:src/keys.c    **** 
1678:src/keys.c    **** 
1679:src/keys.c    **** /* Process a GTO . sequence
1680:src/keys.c    ****  */
1681:src/keys.c    **** static int gtodot_digit(const int n) {
  30              		.loc 1 1681 38 view -0
ARM GAS  /tmp/ccgiIQCZ.s 			page 31


  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
1682:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  34              		.loc 1 1682 2 view .LVU1
1683:src/keys.c    **** 	const int lib = nLIB(state_pc());
  35              		.loc 1 1683 18 is_stmt 0 view .LVU2
  36 0000 144B     		ldr	r3, .L5
  37 0002 1A68     		ldr	r2, [r3]
1681:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  38              		.loc 1 1681 38 view .LVU3
  39 0004 70B5     		push	{r4, r5, r6, lr}
  40              		.cfi_def_cfa_offset 16
  41              		.cfi_offset 4, -16
  42              		.cfi_offset 5, -12
  43              		.cfi_offset 6, -8
  44              		.cfi_offset 14, -4
1682:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  45              		.loc 1 1682 24 view .LVU4
  46 0006 144E     		ldr	r6, .L5+4
  47              		.loc 1 1683 18 view .LVU5
  48 0008 B2F8E057 		ldrh	r5, [r2, #2016]
1682:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  49              		.loc 1 1682 24 view .LVU6
  50 000c 3389     		ldrh	r3, [r6, #8]
  51              		.loc 1 1683 18 view .LVU7
  52 000e AD0B     		lsrs	r5, r5, #14
1682:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  53              		.loc 1 1682 32 view .LVU8
  54 0010 03EB8303 		add	r3, r3, r3, lsl #2
1681:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  55              		.loc 1 1681 38 view .LVU9
  56 0014 0446     		mov	r4, r0
1684:src/keys.c    **** 
1685:src/keys.c    **** 	if (val > sizeLIB(lib) / 10)
  57              		.loc 1 1685 12 view .LVU10
  58 0016 2846     		mov	r0, r5
  59              	.LVL1:
1682:src/keys.c    **** 	const int lib = nLIB(state_pc());
  60              		.loc 1 1682 12 view .LVU11
  61 0018 04EB4304 		add	r4, r4, r3, lsl #1
  62              	.LVL2:
1683:src/keys.c    **** 
  63              		.loc 1 1683 2 is_stmt 1 view .LVU12
  64              		.loc 1 1685 2 view .LVU13
  65              		.loc 1 1685 12 is_stmt 0 view .LVU14
  66 001c FFF7FEFF 		bl	sizeLIB
  67              	.LVL3:
  68              		.loc 1 1685 25 view .LVU15
  69 0020 0E4A     		ldr	r2, .L5+8
  70 0022 82FB0032 		smull	r3, r2, r2, r0
  71 0026 C317     		asrs	r3, r0, #31
  72 0028 C3EBA203 		rsb	r3, r3, r2, asr #2
  73              		.loc 1 1685 5 view .LVU16
  74 002c A342     		cmp	r3, r4
  75 002e 0FDB     		blt	.L1
1686:src/keys.c    **** 		return val;
ARM GAS  /tmp/ccgiIQCZ.s 			page 32


1687:src/keys.c    **** 	if (++State2.numdigit == 3 + (lib & 1))
  76              		.loc 1 1687 2 is_stmt 1 view .LVU17
  77              		.loc 1 1687 6 is_stmt 0 view .LVU18
  78 0030 F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
  79              		.loc 1 1687 29 view .LVU19
  80 0032 15F0010F 		tst	r5, #1
  81              		.loc 1 1687 6 view .LVU20
  82 0036 03F10103 		add	r3, r3, #1
  83 003a DBB2     		uxtb	r3, r3
  84              		.loc 1 1687 29 view .LVU21
  85 003c 0CBF     		ite	eq
  86 003e 0322     		moveq	r2, #3
  87 0040 0422     		movne	r2, #4
  88              		.loc 1 1687 5 view .LVU22
  89 0042 9342     		cmp	r3, r2
1688:src/keys.c    **** 		return val;
1689:src/keys.c    **** 	State2.digval = val;
  90              		.loc 1 1689 2 is_stmt 1 view .LVU23
  91              		.loc 1 1689 16 is_stmt 0 view .LVU24
  92 0044 18BF     		it	ne
  93 0046 3481     		strhne	r4, [r6, #8]	@ movhi
1690:src/keys.c    **** 	return -1;
  94              		.loc 1 1690 2 is_stmt 1 view .LVU25
1687:src/keys.c    **** 		return val;
  95              		.loc 1 1687 5 is_stmt 0 view .LVU26
  96 0048 F372     		strb	r3, [r6, #11]
  97              		.loc 1 1690 9 view .LVU27
  98 004a 18BF     		it	ne
  99 004c 4FF0FF34 		movne	r4, #-1
 100              	.LVL4:
 101              	.L1:
1691:src/keys.c    **** }
 102              		.loc 1 1691 1 view .LVU28
 103 0050 2046     		mov	r0, r4
 104 0052 70BD     		pop	{r4, r5, r6, pc}
 105              	.LVL5:
 106              	.L6:
 107              		.loc 1 1691 1 view .LVU29
 108              		.align	2
 109              	.L5:
 110 0054 00000000 		.word	main_ram
 111 0058 00000000 		.word	StateWhileOn
 112 005c 67666666 		.word	1717986919
 113              		.cfi_endproc
 114              	.LFE30:
 116              		.section	.text.check_f_key,"ax",%progbits
 117              		.align	1
 118              		.p2align 2,,3
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu fpv4-sp-d16
 124              	check_f_key:
 125              	.LVL6:
 126              	.LFB17:
 747:src/keys.c    **** 	const int code = 100 + n;
 127              		.loc 1 747 47 is_stmt 1 view -0
ARM GAS  /tmp/ccgiIQCZ.s 			page 33


 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 748:src/keys.c    **** 	unsigned int pc = state_pc();
 131              		.loc 1 748 2 view .LVU31
 747:src/keys.c    **** 	const int code = 100 + n;
 132              		.loc 1 747 47 is_stmt 0 view .LVU32
 133 0000 38B5     		push	{r3, r4, r5, lr}
 134              		.cfi_def_cfa_offset 16
 135              		.cfi_offset 3, -16
 136              		.cfi_offset 4, -12
 137              		.cfi_offset 5, -8
 138              		.cfi_offset 14, -4
 751:src/keys.c    **** 		if (isXROM(pc))
 139              		.loc 1 751 6 view .LVU33
 140 0002 0D4B     		ldr	r3, .L17
 141 0004 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 142              	.LVL7:
 749:src/keys.c    **** 
 143              		.loc 1 749 2 is_stmt 1 view .LVU34
 751:src/keys.c    **** 		if (isXROM(pc))
 144              		.loc 1 751 2 view .LVU35
 751:src/keys.c    **** 		if (isXROM(pc))
 145              		.loc 1 751 5 is_stmt 0 view .LVU36
 146 0006 5B06     		lsls	r3, r3, #25
 747:src/keys.c    **** 	const int code = 100 + n;
 147              		.loc 1 747 47 view .LVU37
 148 0008 0C46     		mov	r4, r1
 751:src/keys.c    **** 		if (isXROM(pc))
 149              		.loc 1 751 5 view .LVU38
 150 000a 0FD5     		bpl	.L11
 749:src/keys.c    **** 
 151              		.loc 1 749 20 view .LVU39
 152 000c 0B4B     		ldr	r3, .L17+4
 153              	.LVL8:
 749:src/keys.c    **** 
 154              		.loc 1 749 20 view .LVU40
 155 000e 1B68     		ldr	r3, [r3]
 156              	.LVL9:
 749:src/keys.c    **** 
 157              		.loc 1 749 15 view .LVU41
 158 0010 B3F8E037 		ldrh	r3, [r3, #2016]
 159              	.LVL10:
 752:src/keys.c    **** 			pc = 1;
 160              		.loc 1 752 3 is_stmt 1 view .LVU42
 752:src/keys.c    **** 			pc = 1;
 161              		.loc 1 752 7 is_stmt 0 view .LVU43
 162 0014 9A0B     		lsrs	r2, r3, #14
 753:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 163              		.loc 1 753 7 view .LVU44
 164 0016 032A     		cmp	r2, #3
 165              	.LVL11:
 754:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 166              		.loc 1 754 3 is_stmt 1 view .LVU45
 748:src/keys.c    **** 	unsigned int pc = state_pc();
 167              		.loc 1 748 12 is_stmt 0 view .LVU46
 168 0018 00F16405 		add	r5, r0, #100
ARM GAS  /tmp/ccgiIQCZ.s 			page 34


 169              	.LVL12:
 754:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 170              		.loc 1 754 7 view .LVU47
 171 001c 2946     		mov	r1, r5
 172              	.LVL13:
 754:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 173              		.loc 1 754 7 view .LVU48
 174 001e 14BF     		ite	ne
 175 0020 1846     		movne	r0, r3
 176              	.LVL14:
 754:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 177              		.loc 1 754 7 view .LVU49
 178 0022 0120     		moveq	r0, #1
 179 0024 0222     		movs	r2, #2
 180 0026 FFF7FEFF 		bl	find_label_from
 181              	.LVL15:
 754:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 182              		.loc 1 754 6 view .LVU50
 183 002a 08B9     		cbnz	r0, .L16
 184              	.LVL16:
 185              	.L11:
 757:src/keys.c    **** }
 186              		.loc 1 757 9 view .LVU51
 187 002c 2046     		mov	r0, r4
 758:src/keys.c    **** 
 188              		.loc 1 758 1 view .LVU52
 189 002e 38BD     		pop	{r3, r4, r5, pc}
 190              	.LVL17:
 191              	.L16:
 755:src/keys.c    **** 	}
 192              		.loc 1 755 4 is_stmt 1 view .LVU53
 755:src/keys.c    **** 	}
 193              		.loc 1 755 11 is_stmt 0 view .LVU54
 194 0030 45F4C840 		orr	r0, r5, #25600
 758:src/keys.c    **** 
 195              		.loc 1 758 1 view .LVU55
 196 0034 38BD     		pop	{r3, r4, r5, pc}
 197              	.LVL18:
 198              	.L18:
 758:src/keys.c    **** 
 199              		.loc 1 758 1 view .LVU56
 200 0036 00BF     		.align	2
 201              	.L17:
 202 0038 00000000 		.word	StateWhileOn
 203 003c 00000000 		.word	main_ram
 204              		.cfi_endproc
 205              	.LFE17:
 207              		.section	.text.is_label_or_end_at,"ax",%progbits
 208              		.align	1
 209              		.p2align 2,,3
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 213              		.fpu fpv4-sp-d16
 215              	is_label_or_end_at:
 216              	.LVL19:
 217              	.LFB54:
ARM GAS  /tmp/ccgiIQCZ.s 			page 35


1692:src/keys.c    **** 
1693:src/keys.c    **** static int gtodot_fkey(int n) {
1694:src/keys.c    **** 	const int code = 100 + n;
1695:src/keys.c    **** 	unsigned int pc = state_pc();
1696:src/keys.c    **** 
1697:src/keys.c    **** 	if(isXROM(pc))
1698:src/keys.c    **** 		pc = 1;
1699:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
1700:src/keys.c    **** 	if (pc > 0)
1701:src/keys.c    **** 		return pc;
1702:src/keys.c    **** 	return state_pc();
1703:src/keys.c    **** }
1704:src/keys.c    **** 
1705:src/keys.c    **** static int process_gtodot(const keycode c) {
1706:src/keys.c    **** 	int pc = -1;
1707:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
1708:src/keys.c    **** 
1709:src/keys.c    **** 	if (rawpc <= 9) {
1710:src/keys.c    **** 		// Digit 0 - 9
1711:src/keys.c    **** 		pc = gtodot_digit(rawpc);
1712:src/keys.c    **** 	}
1713:src/keys.c    **** #ifdef DM42
1714:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regX_idx) rawpc = gtodot_digit(1); 
1715:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
1716:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
1717:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
1718:src/keys.c    **** #endif
1719:src/keys.c    **** 	else if (c >= K00 && c <= K03) {
1720:src/keys.c    **** 		// A - D
1721:src/keys.c    **** 		rawpc = gtodot_fkey(c - K00);
1722:src/keys.c    **** 		goto fin;
1723:src/keys.c    **** 	}
1724:src/keys.c    **** 	else if (c == K62) {
1725:src/keys.c    **** 		// .
1726:src/keys.c    **** 		rawpc = ProgSize;
1727:src/keys.c    **** 		goto fin;
1728:src/keys.c    **** 	}
1729:src/keys.c    **** 	else if (c == K20) {
1730:src/keys.c    **** 		// ENTER - short circuit processing
1731:src/keys.c    **** 		pc = State2.digval;
1732:src/keys.c    **** 	}
1733:src/keys.c    **** 	else if (c == K24) {
1734:src/keys.c    **** 		// backspace
1735:src/keys.c    **** 		if (State2.numdigit == 0) {
1736:src/keys.c    **** 			goto fin2;
1737:src/keys.c    **** 		} else {
1738:src/keys.c    **** 			State2.numdigit--;
1739:src/keys.c    **** 			State2.digval /= 10;
1740:src/keys.c    **** 		}
1741:src/keys.c    **** 	}
1742:src/keys.c    **** 	else if (c == K_UP) {
1743:src/keys.c    **** 		// up
1744:src/keys.c    **** 		rawpc = state_pc();
1745:src/keys.c    **** 		if (rawpc == 1)
1746:src/keys.c    **** 			rawpc = 0;
1747:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
1748:src/keys.c    **** 		update_program_bounds(1);
ARM GAS  /tmp/ccgiIQCZ.s 			page 36


1749:src/keys.c    **** 		rawpc = ProgBegin;
1750:src/keys.c    **** 		goto fin;
1751:src/keys.c    **** 	}
1752:src/keys.c    **** 	else if (c == K_DOWN) {
1753:src/keys.c    **** 		// down
1754:src/keys.c    **** 		update_program_bounds(1);
1755:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
1756:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
1757:src/keys.c    **** 			rawpc = 1;
1758:src/keys.c    **** 		goto fin;
1759:src/keys.c    **** 	}
1760:src/keys.c    **** 	if (pc >= 0) {
1761:src/keys.c    **** 		rawpc = find_user_pc(pc);
1762:src/keys.c    **** fin:		set_pc(rawpc);
1763:src/keys.c    **** fin2:		State2.gtodot = 0;
1764:src/keys.c    **** 		State2.digval = 0;
1765:src/keys.c    **** 		State2.numdigit = 0;
1766:src/keys.c    **** 	}
1767:src/keys.c    **** 	return STATE_UNFINISHED;
1768:src/keys.c    **** }
1769:src/keys.c    **** 
1770:src/keys.c    **** 
1771:src/keys.c    **** /* Process a keystroke in alpha mode
1772:src/keys.c    ****  */
1773:src/keys.c    **** static int process_alpha(const keycode c) {
1774:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
1775:src/keys.c    ****         int op = STATE_UNFINISHED;
1776:src/keys.c    **** 	const enum shifts shift = reset_shift();
1777:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
1778:src/keys.c    **** 	State2.alpha_pos = 0;
1779:src/keys.c    **** 
1780:src/keys.c    **** 	switch (c) {
1781:src/keys.c    **** 	case K10:	// STO
1782:src/keys.c    **** 		if (shift == SHIFT_F) {
1783:src/keys.c    **** 			init_arg(RARG_ASTO);
1784:src/keys.c    **** 			return STATE_UNFINISHED;
1785:src/keys.c    **** 		}
1786:src/keys.c    **** 		break;
1787:src/keys.c    **** 
1788:src/keys.c    **** 	case K11:	// RCL - maybe view
1789:src/keys.c    **** 		if (shift == SHIFT_F) {
1790:src/keys.c    **** 			init_arg(RARG_ARCL);
1791:src/keys.c    **** 			return STATE_UNFINISHED;
1792:src/keys.c    **** 		} else if (shift == SHIFT_H) {
1793:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
1794:src/keys.c    **** 			return STATE_UNFINISHED;
1795:src/keys.c    **** 		}
1796:src/keys.c    **** 		break;
1797:src/keys.c    **** 
1798:src/keys.c    **** 	case K20:	// Enter - maybe exit alpha mode
1799:src/keys.c    **** 		if (shift == SHIFT_G || shift == SHIFT_H)
1800:src/keys.c    **** 			break;
1801:src/keys.c    **** 		if (shift == SHIFT_F && ! State2.runmode) {
1802:src/keys.c    **** 			State2.multi = 1;
1803:src/keys.c    **** 			State2.numdigit = 0;
1804:src/keys.c    **** 			CmdBase = DBL_ALPHA;
1805:src/keys.c    **** 			return STATE_UNFINISHED;
ARM GAS  /tmp/ccgiIQCZ.s 			page 37


1806:src/keys.c    **** 		}
1807:src/keys.c    **** 		State2.alphas = 0;
1808:src/keys.c    **** 		State2.alphashift = 0;
1809:src/keys.c    **** #ifdef DM42
1810:src/keys.c    **** 		set_menu(M_Last);
1811:src/keys.c    **** 		display_current_menu();
1812:src/keys.c    **** #endif
1813:src/keys.c    **** 		return op;
1814:src/keys.c    **** 
1815:src/keys.c    **** 	case K24:	// Clx - backspace, clear Alpha
1816:src/keys.c    **** 		if (shift == SHIFT_N)
1817:src/keys.c    **** 			return STATE_BACKSPACE;
1818:src/keys.c    **** 		if (shift == SHIFT_H)
1819:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
1820:src/keys.c    **** 		break;
1821:src/keys.c    **** 
1822:src/keys.c    **** 	case K_UP:
1823:src/keys.c    **** 	  if (shift == SHIFT_N) {
1824:src/keys.c    **** 	    if ( State2.runmode ) {
1825:src/keys.c    **** 	      // Alpha scroll left
1826:src/keys.c    **** #ifdef DM42
1827:src/keys.c    **** 	      /* 
1828:src/keys.c    **** 	       * The numbers 20 and 12 below should match the same 
1829:src/keys.c    **** 	       * numbers in display.c, lines 2414 and 2416.
1830:src/keys.c    **** 	       */
1831:src/keys.c    **** #ifdef BIGGER_DISPLAY
1832:src/keys.c    **** 	      if ((alpha_pos == 0) || (alen()-6*alpha_pos >= 20)) {
1833:src/keys.c    **** 		alpha_pos += 1;
1834:src/keys.c    **** 	      }
1835:src/keys.c    **** #else
1836:src/keys.c    **** 	      if ((alpha_pos == 0) || (alen()-6*alpha_pos >= 12)) {
1837:src/keys.c    **** 		alpha_pos += 1;
1838:src/keys.c    **** 	      }
1839:src/keys.c    **** #endif
1840:src/keys.c    **** 	      State2.alpha_pos = alpha_pos;
1841:src/keys.c    **** #else
1842:src/keys.c    **** 	      int n = alpha_pos + 1;
1843:src/keys.c    **** 	      State2.alpha_pos = ( n < ( alen() + 5 ) / 6 ) ? n : alpha_pos;
1844:src/keys.c    **** #endif
1845:src/keys.c    **** 	      return STATE_UNFINISHED;
1846:src/keys.c    **** 	    }
1847:src/keys.c    **** 	    return STATE_BST;
1848:src/keys.c    **** 	  }
1849:src/keys.c    **** 	  break;
1850:src/keys.c    **** 
1851:src/keys.c    **** 	case K_DOWN:
1852:src/keys.c    **** 	  if (shift == SHIFT_N) {
1853:src/keys.c    **** 	    if ( State2.runmode ) {
1854:src/keys.c    **** 	      // Alpha scroll right
1855:src/keys.c    **** 	      if (alpha_pos > 0)
1856:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
1857:src/keys.c    **** 	      return STATE_UNFINISHED;
1858:src/keys.c    **** 	    }
1859:src/keys.c    **** 	    return STATE_SST;
1860:src/keys.c    **** 	  }
1861:src/keys.c    **** 	  break;
1862:src/keys.c    **** 
ARM GAS  /tmp/ccgiIQCZ.s 			page 38


1863:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
1864:src/keys.c    **** 		if (shift == SHIFT_F)
1865:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
1866:src/keys.c    **** 		else if (shift == SHIFT_H)
1867:src/keys.c    **** 			return OP_NIL | OP_OFF;
1868:src/keys.c    **** 		else if (shift == SHIFT_N) {
1869:src/keys.c    **** #ifdef DM42
1870:src/keys.c    **** 		  set_menu(M_Last);
1871:src/keys.c    **** 		  display_current_menu();
1872:src/keys.c    **** #endif
1873:src/keys.c    **** 		  init_state();
1874:src/keys.c    **** 		}
1875:src/keys.c    **** 		return STATE_UNFINISHED;
1876:src/keys.c    **** 
1877:src/keys.c    **** 	case K63:
1878:src/keys.c    **** 		if (shift == SHIFT_F)
1879:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
1880:src/keys.c    **** 		break;
1881:src/keys.c    **** 
1882:src/keys.c    **** 	default:
1883:src/keys.c    **** 		break;
1884:src/keys.c    **** 	}
1885:src/keys.c    **** 
1886:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
1887:src/keys.c    **** 	if (ch == 0)
1888:src/keys.c    **** 		return STATE_UNFINISHED;
1889:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
1890:src/keys.c    **** }
1891:src/keys.c    **** 
1892:src/keys.c    **** /*
1893:src/keys.c    ****  *  Code to handle all commands with arguments
1894:src/keys.c    ****  */
1895:src/keys.c    **** static void reset_arg(void) {
1896:src/keys.c    **** 	init_arg((enum rarg) 0);
1897:src/keys.c    **** 	State2.rarg = 0;
1898:src/keys.c    **** }
1899:src/keys.c    **** 
1900:src/keys.c    ****  static int arg_eval(unsigned int val) {
1901:src/keys.c    ****    const unsigned int base = CmdBase;
1902:src/keys.c    ****    int r = RARG(base, val 
1903:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
1904:src/keys.c    **** 		+ (State2.local ? LOCAL_REG_BASE : 0));
1905:src/keys.c    ****    const unsigned int ssize = (! UState.stack_depth || ! State2.runmode ) ? 4 : 8;
1906:src/keys.c    **** 
1907:src/keys.c    ****    if (! State2.ind) {
1908:src/keys.c    ****      /*
1909:src/keys.c    ****       *  Central argument checking for some commands
1910:src/keys.c    ****       */
1911:src/keys.c    **** #ifdef SHOW_COMPLEX_REGS
1912:src/keys.c    ****      if (argcmds[base].cmplx && val > TOPREALREG - 2 ) {
1913:src/keys.c    ****        // remap complex registers cY->T, cZ->A, cT->C
1914:src/keys.c    ****        // 99,   X,   Y,   Z,   T,   A,   B,   C,   D,   L,   I,   J,   K
1915:src/keys.c    ****        static char remap[] = {  0, 100, 102, 104, 106,   0,   0,   0,   0, 108,   0, 110,   0 };
1916:src/keys.c    ****        val = (unsigned int) remap[ val - (TOPREALREG - 1) ];
1917:src/keys.c    ****        if ( val == 0 )
1918:src/keys.c    **** 	 return STATE_UNFINISHED;
1919:src/keys.c    ****        r = RARG(base, val);
ARM GAS  /tmp/ccgiIQCZ.s 			page 39


1920:src/keys.c    ****      }
1921:src/keys.c    **** #endif
1922:src/keys.c    **** #ifdef INCLUDE_C_LOCK
1923:src/keys.c    ****      if (argcmds[base].cmplx && (val > (unsigned int)(C_LOCKED ? 0 : TOPREALREG - 2) && (val & 1)))
1924:src/keys.c    ****        if (C_LOCKED) {
1925:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
1926:src/keys.c    **** 	 return STATE_UNFINISHED; // either leaves arg blank (if EXIT pressed) or with one digit in (STO)
1927:src/keys.c    ****        }
1928:src/keys.c    ****        else {
1929:src/keys.c    **** 	 return STATE_UNFINISHED;
1930:src/keys.c    ****        }
1931:src/keys.c    ****      }
1932:src/keys.c    **** #else
1933:src/keys.c    ****      if (argcmds[base].cmplx && (val > TOPREALREG - 2 && (val & 1)))
1934:src/keys.c    ****        // Disallow odd complex register > 98
1935:src/keys.c    ****        return STATE_UNFINISHED;
1936:src/keys.c    **** #endif
1937:src/keys.c    ****      if ((base == RARG_STOSTK || base == RARG_RCLSTK) && (val > TOPREALREG - ssize))
1938:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
1939:src/keys.c    ****        return STATE_UNFINISHED;
1940:src/keys.c    ****    }
1941:src/keys.c    ****    // Build op-code
1942:src/keys.c    ****    reset_arg();
1943:src/keys.c    ****    return r;
1944:src/keys.c    ****  }
1945:src/keys.c    **** 
1946:src/keys.c    **** static int arg_digit(int n) {
1947:src/keys.c    **** 	int lim;
1948:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1949:src/keys.c    **** 	int dispmode = get_dispmode_digs(&lim);
1950:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
1951:src/keys.c    **** #else
1952:src/keys.c    **** 	const unsigned int base = CmdBase;
1953:src/keys.c    **** #endif
1954:src/keys.c    **** 	const unsigned int val = State2.digval * 10 + n;
1955:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
1956:src/keys.c    **** 	
1957:src/keys.c    **** 	if (State2.local) {
1958:src/keys.c    **** 		// Handle local registers and flags
1959:src/keys.c    **** 		lim = MAX_LOCAL_DIRECT - 1;				// default
1960:src/keys.c    **** 		if (State2.runmode) {
1961:src/keys.c    **** 			if (LocalRegs == 0)
1962:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
1963:src/keys.c    **** 			if (is_reg) {
1964:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
1965:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
1966:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
1967:src/keys.c    **** 			}
1968:src/keys.c    **** 		}
1969:src/keys.c    **** 	}
1970:src/keys.c    **** 	else if (is_reg)						// normal register
1971:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
1972:src/keys.c    **** 	else {
1973:src/keys.c    **** 		lim = (int) argcmds[base].lim;				// any other command
1974:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
1975:src/keys.c    **** 			lim = RARG_IND - 1;
1976:src/keys.c    **** 	}
ARM GAS  /tmp/ccgiIQCZ.s 			page 40


1977:src/keys.c    **** 	if ((int) val > lim)
1978:src/keys.c    **** 		return STATE_UNFINISHED;
1979:src/keys.c    **** 
1980:src/keys.c    **** 	State2.digval = val;
1981:src/keys.c    **** 	++State2.numdigit;
1982:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
1983:src/keys.c    **** 		int result = arg_eval(val);
1984:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
1985:src/keys.c    **** 			--State2.numdigit;
1986:src/keys.c    **** 			State2.digval /= 10;
1987:src/keys.c    **** 		}
1988:src/keys.c    **** 		return result;
1989:src/keys.c    **** 	}
1990:src/keys.c    **** 	return STATE_UNFINISHED;
1991:src/keys.c    **** }
1992:src/keys.c    **** 
1993:src/keys.c    **** static int arg_fkey(int n) {
1994:src/keys.c    **** 	const unsigned int b = CmdBase;
1995:src/keys.c    **** 
1996:src/keys.c    **** 	if (argcmds[b].label || (b >= RARG_SF && b <= RARG_FCF))
1997:src/keys.c    **** 	{
1998:src/keys.c    **** 		if (State2.ind || State2.numdigit > 0)
1999:src/keys.c    **** 			return STATE_UNFINISHED;
2000:src/keys.c    **** 		if (argcmds[b].lim < 100)
2001:src/keys.c    **** 			return STATE_UNFINISHED;
2002:src/keys.c    **** 		return arg_eval(n + 100);
2003:src/keys.c    **** 	}
2004:src/keys.c    **** 	return STATE_UNFINISHED;
2005:src/keys.c    **** }
2006:src/keys.c    **** 
2007:src/keys.c    **** static int arg_storcl_check(const unsigned int b, const int cmplx) {
2008:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
2009:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || b == RARG_FLRCL ||
2010:src/keys.c    **** 			(cmplx && (b == RARG_CSTO || b == RARG_CRCL || b == RARG_FLCRCL)));
2011:src/keys.c    **** #else
2012:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || (cmplx && (b == RARG_CSTO || b == RARG_CRCL )));
2013:src/keys.c    **** #endif
2014:src/keys.c    **** }
2015:src/keys.c    **** 
2016:src/keys.c    **** static int arg_storcl(const unsigned int n, int cmplx) {
2017:src/keys.c    **** 	unsigned int b = CmdBase;
2018:src/keys.c    **** 
2019:src/keys.c    **** 	if (arg_storcl_check(b, cmplx)) {
2020:src/keys.c    **** 		CmdBase += n;
2021:src/keys.c    **** 		return 1;
2022:src/keys.c    **** 	}
2023:src/keys.c    **** 	/* And we can turn off the operation too */
2024:src/keys.c    **** 	if (b >= n) {
2025:src/keys.c    **** 		b -= n;
2026:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
2027:src/keys.c    **** 			CmdBase = b;
2028:src/keys.c    **** 			return 1;
2029:src/keys.c    **** 		}
2030:src/keys.c    **** 	}
2031:src/keys.c    **** 	return 0;
2032:src/keys.c    **** }
2033:src/keys.c    **** 
ARM GAS  /tmp/ccgiIQCZ.s 			page 41


2034:src/keys.c    **** static int process_arg_dot(const unsigned int base) {
2035:src/keys.c    **** 
2036:src/keys.c    **** 	if (State2.numdigit == 0) {
2037:src/keys.c    **** 		// Only valid at beginning of entry
2038:src/keys.c    **** 		if (State2.dot || State2.local) {
2039:src/keys.c    **** 			// '..' or ENTER '.' = X
2040:src/keys.c    **** 			State2.local = 0;
2041:src/keys.c    **** 			return arg_eval(regX_idx);
2042:src/keys.c    **** 		}
2043:src/keys.c    **** 		if (argcmds[base].local || State2.ind) {
2044:src/keys.c    **** 			// local register or flag select
2045:src/keys.c    **** 			State2.local = 1;
2046:src/keys.c    **** 		}
2047:src/keys.c    **** 		else if (base == RARG_GTO || base == RARG_XEQ) {
2048:src/keys.c    **** 			// Special GTO . sequence
2049:src/keys.c    **** 			if (! State2.ind) {
2050:src/keys.c    **** 				State2.gtodot = 1;
2051:src/keys.c    **** 				reset_arg();
2052:src/keys.c    **** 			}
2053:src/keys.c    **** 		}
2054:src/keys.c    **** 	}
2055:src/keys.c    **** 	return STATE_UNFINISHED;
2056:src/keys.c    **** }
2057:src/keys.c    **** 
2058:src/keys.c    **** static int process_arg_shuffle(int r) {
2059:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
2060:src/keys.c    **** 	if (State2.numdigit < 4)
2061:src/keys.c    **** 		return STATE_UNFINISHED;
2062:src/keys.c    **** 	return arg_eval(State2.digval);
2063:src/keys.c    **** }
2064:src/keys.c    **** 
2065:src/keys.c    **** 
2066:src/keys.c    **** static int process_arg(const keycode c) {
2067:src/keys.c    **** 	unsigned int base = CmdBase;
2068:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
2069:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
2070:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
2071:src/keys.c    **** 	const enum shifts shift = reset_shift();
2072:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
2073:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
2074:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
2075:src/keys.c    **** 
2076:src/keys.c    **** 	n &= ~NO_SHORT;
2077:src/keys.c    **** 	if (base >= NUM_RARG) {
2078:src/keys.c    **** 		reset_arg();
2079:src/keys.c    **** 		return STATE_UNFINISHED;
2080:src/keys.c    **** 	}
2081:src/keys.c    **** #ifdef DM42
2082:src/keys.c    **** 	if ( ! shorthand && ! State2.dot && ! State2.shuffle ) {
2083:src/keys.c    **** 	  switch (n) {
2084:src/keys.c    **** 	  case regX_idx:
2085:src/keys.c    **** 	    return arg_digit(1);
2086:src/keys.c    **** 	  case regY_idx:
2087:src/keys.c    **** 	    return arg_digit(2);
2088:src/keys.c    **** 	  case regZ_idx:
2089:src/keys.c    **** 	    return arg_digit(3);
2090:src/keys.c    **** 	  case regT_idx:
ARM GAS  /tmp/ccgiIQCZ.s 			page 42


2091:src/keys.c    **** 	    return arg_digit(4);
2092:src/keys.c    **** 	  case 5:
2093:src/keys.c    **** 	  case 6:
2094:src/keys.c    **** 	  case 7:
2095:src/keys.c    **** 	  case 8:
2096:src/keys.c    **** 	  case 9:
2097:src/keys.c    **** 	  case 0:
2098:src/keys.c    **** 	    return arg_digit(n);
2099:src/keys.c    **** 	  }
2100:src/keys.c    **** 	}
2101:src/keys.c    **** #else
2102:src/keys.c    **** 	if (n <= 9 && ! shorthand && ! State2.dot && ! State2.shuffle)
2103:src/keys.c    **** 		return arg_digit(n);
2104:src/keys.c    **** #endif	
2105:src/keys.c    **** 	if (shorthand)
2106:src/keys.c    **** 		// row column shorthand addressing
2107:src/keys.c    **** 		return arg_eval(keycode_to_row_column(c));
2108:src/keys.c    **** 
2109:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
2110:src/keys.c    **** #ifdef DM42
2111:src/keys.c    **** 	if (base == RARG_FIX || base == RARG_SIG || base == RARG_SIG0) {
2112:src/keys.c    **** 		switch ((int)c) {
2113:src/keys.c    **** 		case K_UP:	// up arrow
2114:src/keys.c    **** 		  if (base == RARG_FIX) {
2115:src/keys.c    **** 		    base = RARG_SIG;
2116:src/keys.c    **** 		    break;
2117:src/keys.c    **** 		  }
2118:src/keys.c    **** 		  if (base == RARG_SIG) {
2119:src/keys.c    **** 		    base = RARG_SIG0;
2120:src/keys.c    **** 		    break;
2121:src/keys.c    **** 		  }
2122:src/keys.c    **** 		  if (base == RARG_SIG0) {
2123:src/keys.c    **** 		    base = RARG_FIX;
2124:src/keys.c    **** 		    break;
2125:src/keys.c    **** 		  }
2126:src/keys.c    **** 		case K_DOWN:	// down arrow
2127:src/keys.c    **** 		case K01:	// B
2128:src/keys.c    **** 		  if (base == RARG_FIX) {
2129:src/keys.c    **** 		    base = RARG_SIG0;
2130:src/keys.c    **** 		    break;
2131:src/keys.c    **** 		  }
2132:src/keys.c    **** 		  if (base == RARG_SIG) {
2133:src/keys.c    **** 		    base = RARG_FIX;
2134:src/keys.c    **** 		    break;
2135:src/keys.c    **** 		  }
2136:src/keys.c    **** 		  if (base == RARG_SIG0) {
2137:src/keys.c    **** 		    base = RARG_SIG;
2138:src/keys.c    **** 		    break;
2139:src/keys.c    **** 		  }
2140:src/keys.c    **** 		}
2141:src/keys.c    **** 	}
2142:src/keys.c    **** 		CmdBase = base;
2143:src/keys.c    **** #else
2144:src/keys.c    **** 	if (base >= RARG_FIX && base <= RARG_SIG0) {
2145:src/keys.c    **** 		switch ((int)c) {
2146:src/keys.c    **** 		case K_UP:	// up arrow
2147:src/keys.c    **** 			if (--base < RARG_FIX)
ARM GAS  /tmp/ccgiIQCZ.s 			page 43


2148:src/keys.c    **** 				base = RARG_SIG0;
2149:src/keys.c    **** 			break;
2150:src/keys.c    **** 
2151:src/keys.c    **** 		case K_DOWN:	// down arrow
2152:src/keys.c    **** 		case K01:	// B
2153:src/keys.c    **** 			if (++base > RARG_SIG0)
2154:src/keys.c    **** 				base = RARG_FIX;
2155:src/keys.c    **** 			break;
2156:src/keys.c    **** 		}
2157:src/keys.c    **** 		CmdBase = base;
2158:src/keys.c    **** 	}
2159:src/keys.c    **** #endif
2160:src/keys.c    **** #endif
2161:src/keys.c    **** 	/*
2162:src/keys.c    **** 	 *  So far, we've got the digits and some special label addressing keys
2163:src/keys.c    **** 	 *  Handle the rest here.
2164:src/keys.c    **** 	 */
2165:src/keys.c    **** 	switch ((int)c) {
2166:src/keys.c    **** 	case K_F:
2167:src/keys.c    **** 		if (label_addressing)
2168:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
2169:src/keys.c    **** 		break;
2170:src/keys.c    **** 
2171:src/keys.c    **** 	case K_ARROW:		// arrow
2172:src/keys.c    **** 		if (!State2.dot && argcmds[base].indirectokay) {
2173:src/keys.c    **** 			State2.ind = ! State2.ind;
2174:src/keys.c    **** 			if (! stack_reg)
2175:src/keys.c    **** 				State2.dot = 0;
2176:src/keys.c    **** 		}
2177:src/keys.c    **** 		break;
2178:src/keys.c    **** 
2179:src/keys.c    **** 	case K_CMPLX:
2180:src/keys.c    **** 		if (State2.ind || State2.dot)
2181:src/keys.c    **** 			break;
2182:src/keys.c    **** 		if (base == RARG_STO)
2183:src/keys.c    **** 			CmdBase = RARG_STOM;
2184:src/keys.c    **** 		else if (base == RARG_RCL)
2185:src/keys.c    **** 			CmdBase = RARG_RCLM;
2186:src/keys.c    **** 		break;
2187:src/keys.c    **** #ifdef DM42
2188:src/keys.c    **** 	case K41:       // T
2189:src/keys.c    **** 	  if (State2.shuffle)
2190:src/keys.c    **** 	    return process_arg_shuffle(3);
2191:src/keys.c    **** 	case K51:       // X
2192:src/keys.c    **** 	  if (State2.shuffle)
2193:src/keys.c    **** 	    return process_arg_shuffle(0);
2194:src/keys.c    **** 	case K52:	// Y
2195:src/keys.c    **** 	  if (State2.shuffle)
2196:src/keys.c    **** 	    return process_arg_shuffle(1);
2197:src/keys.c    **** 	case K53:       // Z
2198:src/keys.c    **** 	  if (State2.shuffle)
2199:src/keys.c    **** 	    return process_arg_shuffle(2);
2200:src/keys.c    **** #else
2201:src/keys.c    **** 	case K63:	// Y
2202:src/keys.c    **** 	  if (State2.shuffle)
2203:src/keys.c    **** 	    return process_arg_shuffle(1);
2204:src/keys.c    **** #endif
ARM GAS  /tmp/ccgiIQCZ.s 			page 44


2205:src/keys.c    **** 	case K00:	// A
2206:src/keys.c    **** 	case K01:	// B
2207:src/keys.c    **** 	case K02:	// C
2208:src/keys.c    **** 	case K03:	// D
2209:src/keys.c    **** #ifdef DM42
2210:src/keys.c    **** 	case K12:	// I (lastY)
2211:src/keys.c    **** 	case K13:	// J
2212:src/keys.c    **** 	case K14:	// K
2213:src/keys.c    **** 	case K15:	// L (lastX)
2214:src/keys.c    **** #else
2215:src/keys.c    **** 	case K12:	// I (lastY)
2216:src/keys.c    **** 	case K21:	// J
2217:src/keys.c    **** 	case K22:	// K
2218:src/keys.c    **** 	case K23:	// L (lastX)
2219:src/keys.c    **** #endif
2220:src/keys.c    **** 	  if (State2.dot || stack_reg)
2221:src/keys.c    **** 			return arg_eval(n);
2222:src/keys.c    **** 		if ( c <= K03 )
2223:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
2224:src/keys.c    **** 		break;
2225:src/keys.c    **** #ifdef DM42
2226:src/keys.c    **** 	case K62:	// '.'
2227:src/keys.c    **** 		return process_arg_dot(base);
2228:src/keys.c    **** 
2229:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
2230:src/keys.c    **** 	case K64:		// plus
2231:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
2232:src/keys.c    **** 			return arg_eval(n);
2233:src/keys.c    **** 		break;
2234:src/keys.c    **** 	case K54:               // minus
2235:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
2236:src/keys.c    **** 			reset_arg();
2237:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
2238:src/keys.c    **** 		}
2239:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
2240:src/keys.c    **** 		break;
2241:src/keys.c    **** 	case K44:		// multiply
2242:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
2243:src/keys.c    **** 			return arg_eval(n);
2244:src/keys.c    **** 		break;
2245:src/keys.c    **** 	case K34:
2246:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
2247:src/keys.c    **** 		break;
2248:src/keys.c    **** #else
2249:src/keys.c    **** 	case K62:	// X, '.'
2250:src/keys.c    **** 		if (State2.shuffle)
2251:src/keys.c    **** 			return process_arg_shuffle(0);
2252:src/keys.c    **** 		return process_arg_dot(base);
2253:src/keys.c    **** 
2254:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
2255:src/keys.c    **** 	case K64:		// Z register
2256:src/keys.c    **** 		if (State2.shuffle)
2257:src/keys.c    **** 			return process_arg_shuffle(2);
2258:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
2259:src/keys.c    **** 			return arg_eval(n);
2260:src/keys.c    **** 		break;
2261:src/keys.c    **** 
ARM GAS  /tmp/ccgiIQCZ.s 			page 45


2262:src/keys.c    **** 	case K54:
2263:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
2264:src/keys.c    **** 			reset_arg();
2265:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
2266:src/keys.c    **** 		}
2267:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
2268:src/keys.c    **** 		break;
2269:src/keys.c    **** 
2270:src/keys.c    **** 	case K44:		// T register
2271:src/keys.c    **** 		if (State2.shuffle)
2272:src/keys.c    **** 			return process_arg_shuffle(3);
2273:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
2274:src/keys.c    **** 			return arg_eval(n);
2275:src/keys.c    **** 		break;
2276:src/keys.c    **** 
2277:src/keys.c    **** 	case K34:
2278:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
2279:src/keys.c    **** 		break;
2280:src/keys.c    **** #endif
2281:src/keys.c    **** 	case K_UP:
2282:src/keys.c    **** 		arg_storcl(RARG_STO_MAX - RARG_STO, 0);
2283:src/keys.c    **** 		break;
2284:src/keys.c    **** 
2285:src/keys.c    **** 	case K_DOWN:
2286:src/keys.c    **** 		arg_storcl(RARG_STO_MIN - RARG_STO, 0);
2287:src/keys.c    **** 		break;
2288:src/keys.c    **** 
2289:src/keys.c    **** 	case K20:				// Enter is a short cut finisher but it also changes a few commands if it is first up
2290:src/keys.c    **** 		if (State2.numdigit == 0 && !State2.ind && !State2.dot) {
2291:src/keys.c    **** 			if (argcmds[base].label) {
2292:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
2293:src/keys.c    **** 				State2.multi = 1;
2294:src/keys.c    **** 				State2.alphashift = 0;
2295:src/keys.c    **** 				State2.rarg = 0;
2296:src/keys.c    **** 			} else if (base == RARG_SCI) {
2297:src/keys.c    **** 				reset_arg();
2298:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
2299:src/keys.c    **** 			} else if (base == RARG_ENG) {
2300:src/keys.c    **** 				reset_arg();
2301:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
2302:src/keys.c    **** 			} else if (argcmds[base].stckreg)
2303:src/keys.c    **** 				State2.dot = 1;
2304:src/keys.c    **** 		} else if (State2.numdigit > 0)
2305:src/keys.c    **** 			return arg_eval(State2.digval);
2306:src/keys.c    **** 		else if (stack_reg)
2307:src/keys.c    **** 			State2.dot = 1 - State2.dot;
2308:src/keys.c    **** 		break;
2309:src/keys.c    **** 
2310:src/keys.c    **** 	case K24:	// <-
2311:src/keys.c    **** 		if (State2.numdigit == 0) {
2312:src/keys.c    **** 			if (State2.dot)
2313:src/keys.c    **** 				State2.dot = 0;
2314:src/keys.c    **** 			else if (State2.local)
2315:src/keys.c    **** 				State2.local = 0;
2316:src/keys.c    **** 			else if (State2.ind)
2317:src/keys.c    **** 				State2.ind = 0;
2318:src/keys.c    **** 			else
ARM GAS  /tmp/ccgiIQCZ.s 			page 46


2319:src/keys.c    **** 				goto reset;
2320:src/keys.c    **** 		}
2321:src/keys.c    **** 		else {
2322:src/keys.c    **** 			--State2.numdigit;
2323:src/keys.c    **** 			if (State2.shuffle)
2324:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
2325:src/keys.c    **** 			else
2326:src/keys.c    **** 				State2.digval /= 10;
2327:src/keys.c    **** 		}
2328:src/keys.c    **** 		break;
2329:src/keys.c    **** 
2330:src/keys.c    **** 	case K60:
2331:src/keys.c    **** 	reset:
2332:src/keys.c    **** 		reset_arg();
2333:src/keys.c    **** 	default:
2334:src/keys.c    **** 		break;
2335:src/keys.c    **** 	}
2336:src/keys.c    **** 	return STATE_UNFINISHED;
2337:src/keys.c    **** }
2338:src/keys.c    **** 
2339:src/keys.c    **** 
2340:src/keys.c    **** /*
2341:src/keys.c    ****  *  Process arguments to the diverse test commands
2342:src/keys.c    ****  */
2343:src/keys.c    **** static int process_test(const keycode c) {
2344:src/keys.c    **** 	int r = State2.test;
2345:src/keys.c    **** 	int cmpx = State2.cmplx;
2346:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
2347:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
2348:src/keys.c    **** 
2349:src/keys.c    **** 	State2.test = TST_NONE;
2350:src/keys.c    **** 	State2.cmplx = 0;
2351:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
2352:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
2353:src/keys.c    **** 		// Lettered register
2354:src/keys.c    **** 		if (cmpx && (n & 1)) {
2355:src/keys.c    **** 			if (n == regI_idx)
2356:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
2357:src/keys.c    **** 			// Disallow odd complex registers > A
2358:src/keys.c    **** 			goto again;
2359:src/keys.c    **** 		}
2360:src/keys.c    **** 		// Return the command with the register completed
2361:src/keys.c    **** 		return RARG(base, n);
2362:src/keys.c    **** 	}
2363:src/keys.c    **** 	else if ( n == 0 ) {
2364:src/keys.c    **** 		// Special 0
2365:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq0 : OP_Xeq0) + r;
2366:src/keys.c    **** 	}
2367:src/keys.c    **** 	else if ( n == 1 ) {
2368:src/keys.c    **** 		// Special 1
2369:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq1 : OP_Xeq1) + r;
2370:src/keys.c    **** 	}
2371:src/keys.c    **** 	else if ( n <= 9 || c == K_ARROW || c == K62 ) {
2372:src/keys.c    **** 		// digit 2..9, -> or .
2373:src/keys.c    **** 		init_arg((enum rarg)base);
2374:src/keys.c    **** 		return process_arg(c);
2375:src/keys.c    **** 	}
ARM GAS  /tmp/ccgiIQCZ.s 			page 47


2376:src/keys.c    **** 
2377:src/keys.c    **** 	switch (c) {
2378:src/keys.c    **** 	case K11:					// tests vs register
2379:src/keys.c    **** 	case K20:
2380:src/keys.c    **** 		init_arg((enum rarg)base);
2381:src/keys.c    **** 		return STATE_UNFINISHED;
2382:src/keys.c    **** 
2383:src/keys.c    **** 	//case K60:
2384:src/keys.c    **** 	case K24:
2385:src/keys.c    **** 		return STATE_UNFINISHED;
2386:src/keys.c    **** 
2387:src/keys.c    **** 	default:
2388:src/keys.c    **** 		break;
2389:src/keys.c    **** 	}
2390:src/keys.c    **** again:
2391:src/keys.c    **** 	State2.test = r;
2392:src/keys.c    **** 	State2.cmplx = cmpx;
2393:src/keys.c    **** 	return STATE_UNFINISHED;
2394:src/keys.c    **** }
2395:src/keys.c    **** 
2396:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2397:src/keys.c    **** /*
2398:src/keys.c    ****  *  Build the user catalogue on the fly in RAM and return the number of entries
2399:src/keys.c    ****  */
2400:src/keys.c    **** #define USER_CAT_MAX 100
2401:src/keys.c    **** s_opcode UserCat[USER_CAT_MAX];
2402:src/keys.c    **** 
2403:src/keys.c    **** static int build_user_cat(void)
2404:src/keys.c    **** {
2405:src/keys.c    **** 	// find the label 'CAT'
2406:src/keys.c    **** 	const int lbl = OP_DBL + (DBL_LBL << DBL_SHIFT) + 'C' + ('A' << 16) + ('T' << 24);
2407:src/keys.c    **** 	unsigned int pc = findmultilbl(lbl, 0);
2408:src/keys.c    **** 	int len = 0;
2409:src/keys.c    **** 	while (pc && len < USER_CAT_MAX) {
2410:src/keys.c    **** 		// do a simnple insert-sort to sort the entries
2411:src/keys.c    **** 		char buf1[16];
2412:src/keys.c    **** 		int i;
2413:src/keys.c    **** 		s_opcode op;
2414:src/keys.c    **** 	next:
2415:src/keys.c    **** 		pc = do_inc(pc, 0);
2416:src/keys.c    **** 		op = (s_opcode) getprog(pc);
2417:src/keys.c    **** 		if (op == (OP_NIL | OP_END))
2418:src/keys.c    **** 			break;
2419:src/keys.c    **** 		if (isDBL(op))
2420:src/keys.c    **** 			continue;
2421:src/keys.c    **** 		if (isRARG(op)) {
2422:src/keys.c    **** 			const s_opcode rarg = RARG_CMD(op);
2423:src/keys.c    **** 			if (rarg != RARG_ALPHA && rarg != RARG_CONV
2424:src/keys.c    **** 			    && rarg != RARG_CONST && rarg != RARG_CONST_CMPLX)
2425:src/keys.c    **** 				op = op & 0xff00;	// remove argument
2426:src/keys.c    **** 		}
2427:src/keys.c    **** 		catcmd(op, buf1);
2428:src/keys.c    **** 		for (i = 0; i < len; ++i) {
2429:src/keys.c    **** 			// Find a position in the table to insert the new entry
2430:src/keys.c    **** 			char buf2[16];
2431:src/keys.c    **** 			const char *p, *q;
2432:src/keys.c    **** 			int diff = 0;
ARM GAS  /tmp/ccgiIQCZ.s 			page 48


2433:src/keys.c    **** 			if (op == UserCat[i]) {
2434:src/keys.c    **** 				// duplicate entry - ignore
2435:src/keys.c    **** 				goto next;
2436:src/keys.c    **** 			}
2437:src/keys.c    **** 			p = buf1;
2438:src/keys.c    **** 			if (*p == COMPLEX_PREFIX)
2439:src/keys.c    **** 				++p;
2440:src/keys.c    **** 			q = catcmd(UserCat[i], buf2);
2441:src/keys.c    **** 			if (*q == COMPLEX_PREFIX)
2442:src/keys.c    **** 				++q;
2443:src/keys.c    **** 			diff = 0;
2444:src/keys.c    **** 			while (*p != '\0' && diff == 0) {
2445:src/keys.c    **** 				diff = remap_chars(*q++) - remap_chars(*p++);
2446:src/keys.c    **** 			}
2447:src/keys.c    **** 			if ((diff == 0 && *q == 0) ) {
2448:src/keys.c    **** 				// identical according to sort order, insert after
2449:src/keys.c    **** 				++i;
2450:src/keys.c    **** 				break;
2451:src/keys.c    **** 			}
2452:src/keys.c    **** 			if (diff > 0) {
2453:src/keys.c    **** 				// insert new entry before the one found because this is greater
2454:src/keys.c    **** 				break;
2455:src/keys.c    **** 			}
2456:src/keys.c    **** 		}
2457:src/keys.c    **** 		if (i < len) {
2458:src/keys.c    **** 			// Make room
2459:src/keys.c    **** 			xcopy(UserCat + i + 1, UserCat + i, (len - i) << 1);
2460:src/keys.c    **** 		}
2461:src/keys.c    **** 		UserCat[i] = op;
2462:src/keys.c    **** 		++len;
2463:src/keys.c    **** 	}
2464:src/keys.c    **** 	// return the number of entries
2465:src/keys.c    **** 	return len;
2466:src/keys.c    **** }
2467:src/keys.c    **** #endif
2468:src/keys.c    **** 
2469:src/keys.c    **** /* Return the number of entries in the current catalogue.
2470:src/keys.c    ****  * These are all fixed size known at compile time so a table lookup will
2471:src/keys.c    ****  * likely be the most space efficient method.
2472:src/keys.c    ****  */
2473:src/keys.c    **** int current_catalogue_max(void) {
2474:src/keys.c    **** 	// A quick table of catalogue sizes
2475:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues' 
2476:src/keys.c    **** 	static const unsigned char catalogue_sizes[] = 
2477:src/keys.c    **** 	{
2478:src/keys.c    **** 		0, // NONE
2479:src/keys.c    **** 		SIZE_catalogue,
2480:src/keys.c    **** 		SIZE_cplx_catalogue,
2481:src/keys.c    **** 		SIZE_stats_catalogue,
2482:src/keys.c    **** 		SIZE_prob_catalogue,
2483:src/keys.c    **** 		SIZE_int_catalogue,
2484:src/keys.c    **** 		SIZE_prog_catalogue,
2485:src/keys.c    **** 		SIZE_program_xfcn,
2486:src/keys.c    **** 		SIZE_test_catalogue,
2487:src/keys.c    **** 		SIZE_mode_catalogue,
2488:src/keys.c    **** 		SIZE_alpha_catalogue,
2489:src/keys.c    **** 		SIZE_alpha_symbols,
ARM GAS  /tmp/ccgiIQCZ.s 			page 49


2490:src/keys.c    **** 		SIZE_alpha_compares,
2491:src/keys.c    **** 		SIZE_alpha_arrows,
2492:src/keys.c    **** 		SIZE_alpha_letters,
2493:src/keys.c    **** 		SIZE_alpha_subscripts,
2494:src/keys.c    **** 		NUM_CONSTS_CAT,
2495:src/keys.c    **** 		NUM_CONSTS_CAT,
2496:src/keys.c    **** 		SIZE_conv_catalogue,
2497:src/keys.c    **** 		SIZE_sums_catalogue,
2498:src/keys.c    **** 		SIZE_matrix_catalogue,
2499:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2500:src/keys.c    **** 		SIZE_internal_catalogue,
2501:src/keys.c    **** #endif
2502:src/keys.c    **** 	};
2503:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2504:src/keys.c    **** 	const int cat = State2.catalogue;
2505:src/keys.c    **** 	return cat == CATALOGUE_USER ? build_user_cat() : catalogue_sizes[cat];
2506:src/keys.c    **** #else
2507:src/keys.c    **** 	return catalogue_sizes[State2.catalogue];
2508:src/keys.c    **** #endif
2509:src/keys.c    **** }
2510:src/keys.c    **** 
2511:src/keys.c    **** 
2512:src/keys.c    **** /* Look up the character position in the given byte array and
2513:src/keys.c    ****  * build the alpha op-code for it.
2514:src/keys.c    ****  */
2515:src/keys.c    **** static opcode alpha_code(int n, const char tbl[]) {
2516:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
2517:src/keys.c    **** }
2518:src/keys.c    **** 
2519:src/keys.c    **** 
2520:src/keys.c    **** /* Return the opcode for entry n from the current catalogue
2521:src/keys.c    ****  */
2522:src/keys.c    **** opcode current_catalogue(int n) {
2523:src/keys.c    **** 	// A quick table of catalogue tables
2524:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues'
2525:src/keys.c    **** 	static const void *catalogues[] =
2526:src/keys.c    **** 	{
2527:src/keys.c    **** 		NULL, // NONE
2528:src/keys.c    **** 		catalogue,
2529:src/keys.c    **** 		cplx_catalogue,
2530:src/keys.c    **** 		stats_catalogue,
2531:src/keys.c    **** 		prob_catalogue,
2532:src/keys.c    **** 		int_catalogue,
2533:src/keys.c    **** 		prog_catalogue,
2534:src/keys.c    **** 		program_xfcn,
2535:src/keys.c    **** 		test_catalogue,
2536:src/keys.c    **** 		mode_catalogue,
2537:src/keys.c    **** 		alpha_catalogue,
2538:src/keys.c    **** 		alpha_symbols,
2539:src/keys.c    **** 		alpha_compares,
2540:src/keys.c    **** 		alpha_arrows,
2541:src/keys.c    **** 		alpha_letters,
2542:src/keys.c    **** 		alpha_subscripts,
2543:src/keys.c    **** 		NULL,
2544:src/keys.c    **** 		NULL,
2545:src/keys.c    **** 		NULL, //CONV
2546:src/keys.c    **** 		sums_catalogue,
ARM GAS  /tmp/ccgiIQCZ.s 			page 50


2547:src/keys.c    **** 		matrix_catalogue,
2548:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2549:src/keys.c    **** 		internal_catalogue,
2550:src/keys.c    **** #endif
2551:src/keys.c    **** 	};
2552:src/keys.c    **** 	const unsigned char *cat;
2553:src/keys.c    **** 	unsigned int c = State2.catalogue;
2554:src/keys.c    **** 	int m, i;
2555:src/keys.c    **** 	unsigned p, q;
2556:src/keys.c    **** 
2557:src/keys.c    **** 	if (c == CATALOGUE_CONST) {
2558:src/keys.c    **** 		if (n == OP_ZERO)
2559:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
2560:src/keys.c    **** 		return CONST(n);
2561:src/keys.c    **** 	}
2562:src/keys.c    **** 	if (c == CATALOGUE_COMPLEX_CONST) {
2563:src/keys.c    **** 		if (n == OP_ZERO)
2564:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
2565:src/keys.c    **** 		return CONST_CMPLX(n);
2566:src/keys.c    **** 	}
2567:src/keys.c    **** 	if (c == CATALOGUE_CONV) {
2568:src/keys.c    **** 		const int cnv = conv_catalogue[n];
2569:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
2570:src/keys.c    **** 			// Monadic conversion routine
2571:src/keys.c    **** 			return OP_MON | (cnv - SIZE_conv_catalogue);
2572:src/keys.c    **** 		else
2573:src/keys.c    **** 			return RARG(RARG_CONV, cnv);
2574:src/keys.c    **** 	}
2575:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2576:src/keys.c    **** 	if (c == CATALOGUE_USER)
2577:src/keys.c    **** 		return build_user_cat() ? UserCat[n] : STATE_IGNORE;
2578:src/keys.c    **** #endif
2579:src/keys.c    **** 
2580:src/keys.c    **** 	if (c == CATALOGUE_ALPHA_LETTERS && State2.alphashift)
2581:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
2582:src/keys.c    **** 	else
2583:src/keys.c    **** 		cat = (const unsigned char *) catalogues[c];
2584:src/keys.c    **** 
2585:src/keys.c    **** 	if (c >= CATALOGUE_ALPHA_SYMBOLS && c <= CATALOGUE_ALPHA_SUBSCRIPTS) {
2586:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
2587:src/keys.c    **** 	}
2588:src/keys.c    **** 	if (c >= sizeof(catalogues) / sizeof(void *))
2589:src/keys.c    **** 		return OP_NIL | OP_NOP;
2590:src/keys.c    **** 
2591:src/keys.c    **** 	/* Unpack the opcode */
2592:src/keys.c    **** 	cat += n + (n >> 2);
2593:src/keys.c    **** 	p = cat[0];
2594:src/keys.c    **** 	q = cat[1];
2595:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
2596:src/keys.c    **** 
2597:src/keys.c    **** 	/* Now figure out which opcode it really is */
2598:src/keys.c    **** 	for (i=0; i<KIND_MAX; i++) {
2599:src/keys.c    **** 		if (m < opcode_breaks[i])
2600:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
2601:src/keys.c    **** 		m -= opcode_breaks[i];
2602:src/keys.c    **** 	}
2603:src/keys.c    **** 	return RARG_BASEOP(m);
ARM GAS  /tmp/ccgiIQCZ.s 			page 51


2604:src/keys.c    **** }
2605:src/keys.c    **** 
2606:src/keys.c    **** 
2607:src/keys.c    **** /*
2608:src/keys.c    ****  *  Helper for navigation in alpha catalogues. Some charaters are not allowed
2609:src/keys.c    ****  *  in multi character commands.
2610:src/keys.c    ****  */
2611:src/keys.c    **** static int forbidden_alpha(int pos) {
2612:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
2613:src/keys.c    **** }
2614:src/keys.c    **** 
2615:src/keys.c    **** /*
2616:src/keys.c    ****  *  Catalogue navigation
2617:src/keys.c    ****  */
2618:src/keys.c    ****  static int process_catalogue(const keycode c, const enum shifts shift, const int is_multi) {
2619:src/keys.c    ****    int pos = State.catpos;
2620:src/keys.c    ****    int ch;
2621:src/keys.c    ****    const int ctmax = current_catalogue_max();
2622:src/keys.c    ****    const enum catalogues cat = (enum catalogues) State2.catalogue;
2623:src/keys.c    **** 
2624:src/keys.c    ****    if (shift == SHIFT_N) {
2625:src/keys.c    ****      switch (c) {
2626:src/keys.c    **** #ifdef DM42
2627:src/keys.c    ****      case K05:			// XEQ accepts command
2628:src/keys.c    **** #else	  
2629:src/keys.c    ****      case K30:			// XEQ accepts command
2630:src/keys.c    **** #endif						  
2631:src/keys.c    ****      case K20:			// Enter accepts command
2632:src/keys.c    ****        if (pos < ctmax && !(is_multi && forbidden_alpha(pos))) {
2633:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
2634:src/keys.c    **** 
2635:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2636:src/keys.c    **** 
2637:src/keys.c    **** 	 if (isRARG(op)) {
2638:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
2639:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
2640:src/keys.c    **** 	     return op;
2641:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
2642:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
2643:src/keys.c    **** 	   else
2644:src/keys.c    **** 	     init_arg(RARG_CMD(op));
2645:src/keys.c    **** 	 }
2646:src/keys.c    **** 	 else {
2647:src/keys.c    **** 	   return check_confirm(op);
2648:src/keys.c    **** 	 }
2649:src/keys.c    ****        } else
2650:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2651:src/keys.c    ****        return STATE_UNFINISHED;
2652:src/keys.c    **** 
2653:src/keys.c    ****      case K24:			// backspace
2654:src/keys.c    ****        if (CmdLineLength > 0 && Keyticks < 30) {
2655:src/keys.c    **** 	 if (--CmdLineLength > 0)
2656:src/keys.c    **** 	   goto search;
2657:src/keys.c    **** 	 pos = 0;
2658:src/keys.c    **** 	 goto set_pos;
2659:src/keys.c    ****        } else
2660:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
ARM GAS  /tmp/ccgiIQCZ.s 			page 52


2661:src/keys.c    ****        return STATE_UNFINISHED;
2662:src/keys.c    **** 
2663:src/keys.c    ****      case K60:
2664:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2665:src/keys.c    ****        return STATE_UNFINISHED;
2666:src/keys.c    **** 
2667:src/keys.c    ****      case K_UP:
2668:src/keys.c    ****        CmdLineLength = 0;
2669:src/keys.c    ****        if (pos == 0)
2670:src/keys.c    **** 	 goto set_max;
2671:src/keys.c    ****        else
2672:src/keys.c    **** 	 --pos;
2673:src/keys.c    ****        goto set_pos;
2674:src/keys.c    **** 
2675:src/keys.c    ****      case K_DOWN:
2676:src/keys.c    ****        CmdLineLength = 0;
2677:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
2678:src/keys.c    ****        if (pos >= ctmax)
2679:src/keys.c    **** 	 pos = 0;
2680:src/keys.c    ****        goto set_pos;
2681:src/keys.c    **** 
2682:src/keys.c    ****      default:
2683:src/keys.c    ****        break;
2684:src/keys.c    ****      }
2685:src/keys.c    ****    } else if (shift == SHIFT_F) {
2686:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
2687:src/keys.c    ****        /*
2688:src/keys.c    **** 	* f 1/x in conversion catalogue
2689:src/keys.c    **** 	*/
2690:src/keys.c    ****        /* A small table of commands in pairs containing inverse commands.
2691:src/keys.c    **** 	* This table could be unsigned characters only storing the monadic kind.
2692:src/keys.c    **** 	* this saves twelve bytes in the table at a cost of some bytes in the code below.
2693:src/keys.c    **** 	* Not worth it since the maximum saving will be less than twelve bytes.
2694:src/keys.c    **** 	*/
2695:src/keys.c    ****        static const unsigned short int conv_mapping[] = {
2696:src/keys.c    **** 	 OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
2697:src/keys.c    **** 	 OP_MON | OP_DB_PR,	OP_MON | OP_PR_DB,
2698:src/keys.c    **** 	 OP_MON | OP_DEGC_F,	OP_MON | OP_DEGF_C,
2699:src/keys.c    **** 	 OP_MON | OP_DEG2RAD,	OP_MON | OP_RAD2DEG,
2700:src/keys.c    **** 	 OP_MON | OP_DEG2GRD,	OP_MON | OP_GRD2DEG,
2701:src/keys.c    **** 	 OP_MON | OP_RAD2GRD,	OP_MON | OP_GRD2RAD,
2702:src/keys.c    ****        };
2703:src/keys.c    ****        const opcode op = current_catalogue(pos);
2704:src/keys.c    ****        int i;
2705:src/keys.c    **** 
2706:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2707:src/keys.c    ****        if (isRARG(op))
2708:src/keys.c    **** 	 return op ^ 1;
2709:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
2710:src/keys.c    **** 	 if (op == conv_mapping[i])
2711:src/keys.c    **** 	   return conv_mapping[i^1];
2712:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
2713:src/keys.c    ****      }
2714:src/keys.c    ****      else if (c == K60 && (State2.alphas || State2.multi)) {
2715:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
2716:src/keys.c    ****        State2.alphashift = 1 - State2.alphashift;
2717:src/keys.c    ****        return STATE_UNFINISHED;
ARM GAS  /tmp/ccgiIQCZ.s 			page 53


2718:src/keys.c    ****      }
2719:src/keys.c    ****    } else if (shift == SHIFT_G) {
2720:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
2721:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2722:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
2723:src/keys.c    ****      }
2724:src/keys.c    ****    }
2725:src/keys.c    **** 
2726:src/keys.c    ****    /* We've got a key press, map it to a character and try to
2727:src/keys.c    ****     * jump to the appropriate catalogue entry.
2728:src/keys.c    ****     */
2729:src/keys.c    ****    ch = remap_chars(keycode_to_alpha(c, shift == SHIFT_G ? SHIFT_LC_G : shift));
2730:src/keys.c    ****    reset_shift();
2731:src/keys.c    ****    if (ch == '\0')
2732:src/keys.c    ****      return STATE_UNFINISHED;
2733:src/keys.c    ****    if (cat > CATALOGUE_ALPHA && cat < CATALOGUE_CONST) {
2734:src/keys.c    ****      // No multi character search in alpha catalogues
2735:src/keys.c    ****      CmdLineLength = 0;
2736:src/keys.c    ****    }
2737:src/keys.c    ****    if (CmdLineLength < 10)
2738:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
2739:src/keys.c    ****    /* Search for the current buffer in the catalogue */
2740:src/keys.c    **** 
2741:src/keys.c    ****  search:
2742:src/keys.c    ****    Cmdline[CmdLineLength] = '\0';
2743:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
2744:src/keys.c    ****      char buf[16];
2745:src/keys.c    ****      const char *cmd = catcmd(current_catalogue(pos), buf);
2746:src/keys.c    ****      int i;
2747:src/keys.c    **** 
2748:src/keys.c    ****      if (*cmd == COMPLEX_PREFIX)
2749:src/keys.c    ****        cmd++;
2750:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
2751:src/keys.c    ****        const int c = remap_chars(cmd[i]);
2752:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
2753:src/keys.c    ****        if (c > cl)
2754:src/keys.c    **** 	 goto set_pos;
2755:src/keys.c    ****        else if (c < cl)
2756:src/keys.c    **** 	 break;
2757:src/keys.c    ****      }
2758:src/keys.c    ****      if (Cmdline[i] == '\0')
2759:src/keys.c    ****        goto set_pos;
2760:src/keys.c    ****    }
2761:src/keys.c    ****  set_max:
2762:src/keys.c    ****    pos = ctmax - 1;
2763:src/keys.c    ****  set_pos:
2764:src/keys.c    ****    while (is_multi && pos && forbidden_alpha(pos))
2765:src/keys.c    ****      --pos;
2766:src/keys.c    ****    State.catpos = pos;
2767:src/keys.c    ****    return STATE_UNFINISHED;
2768:src/keys.c    ****  }
2769:src/keys.c    **** 
2770:src/keys.c    **** #ifndef REALBUILD
2771:src/keys.c    **** int find_pos(const char* text) {
2772:src/keys.c    **** 	int pos;
2773:src/keys.c    **** 	const int ctmax = current_catalogue_max();
2774:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
ARM GAS  /tmp/ccgiIQCZ.s 			page 54


2775:src/keys.c    **** 		char buf[16];
2776:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
2777:src/keys.c    **** 		int i;
2778:src/keys.c    **** 
2779:src/keys.c    **** 		if (*cmd == COMPLEX_PREFIX)
2780:src/keys.c    **** 			cmd++;
2781:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
2782:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
2783:src/keys.c    **** 			const int cl = remap_chars(text[i]);
2784:src/keys.c    **** 			if (c > cl)
2785:src/keys.c    **** 				return pos;
2786:src/keys.c    **** 			else if (c < cl)
2787:src/keys.c    **** 				break;
2788:src/keys.c    **** 		}
2789:src/keys.c    **** 		if (text[i] == '\0')
2790:src/keys.c    **** 			return pos;
2791:src/keys.c    **** 	}
2792:src/keys.c    **** 	return pos;
2793:src/keys.c    **** }
2794:src/keys.c    **** 
2795:src/keys.c    **** #endif
2796:src/keys.c    **** 
2797:src/keys.c    **** /* Multi (2) word instruction entry
2798:src/keys.c    ****  */
2799:src/keys.c    **** static void reset_multi(void) {
2800:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
2801:src/keys.c    **** 	State2.multi = 0;
2802:src/keys.c    **** 	if (! State2.alphas )
2803:src/keys.c    **** 		State2.alphashift = 0;
2804:src/keys.c    **** }
2805:src/keys.c    **** 
2806:src/keys.c    **** static int process_multi(const keycode c) {
2807:src/keys.c    **** 	enum shifts shift = reset_shift();
2808:src/keys.c    **** 	unsigned int ch = 0;
2809:src/keys.c    **** 	unsigned int opcode;
2810:src/keys.c    **** 
2811:src/keys.c    **** 	if (State2.catalogue) {
2812:src/keys.c    **** 		// Alpha catalogue from within multi character command
2813:src/keys.c    **** 		opcode = process_catalogue((const keycode)c, shift, State2.numdigit == 2);
2814:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
2815:src/keys.c    **** 			return opcode;
2816:src/keys.c    **** 		ch = (unsigned char) opcode;
2817:src/keys.c    **** 		goto add_char;
2818:src/keys.c    **** 	}
2819:src/keys.c    **** 
2820:src/keys.c    **** 	switch (c) {
2821:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
2822:src/keys.c    **** 		if (shift != SHIFT_N)
2823:src/keys.c    **** 				break;
2824:src/keys.c    **** 		reset_multi();
2825:src/keys.c    **** 		if (State2.numdigit == 0)
2826:src/keys.c    **** 			return STATE_UNFINISHED;
2827:src/keys.c    **** 		else if (State2.numdigit == 1)
2828:src/keys.c    **** 			State2.digval2 = 0;
2829:src/keys.c    **** 		goto fin;
2830:src/keys.c    **** 
2831:src/keys.c    **** 	case K24:	// Clx - backspace, clear alpha
ARM GAS  /tmp/ccgiIQCZ.s 			page 55


2832:src/keys.c    **** 		if (shift != SHIFT_H) {
2833:src/keys.c    **** 			if (State2.numdigit == 0)
2834:src/keys.c    **** 				reset_multi();
2835:src/keys.c    **** 			else
2836:src/keys.c    **** 				State2.numdigit--;
2837:src/keys.c    **** 			return STATE_UNFINISHED;
2838:src/keys.c    **** 		}
2839:src/keys.c    **** 		break;
2840:src/keys.c    **** 
2841:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
2842:src/keys.c    **** 		if (shift == SHIFT_F)
2843:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
2844:src/keys.c    **** 		else
2845:src/keys.c    **** 			reset_multi();
2846:src/keys.c    **** 		return STATE_UNFINISHED;
2847:src/keys.c    **** 
2848:src/keys.c    **** 	default:
2849:src/keys.c    **** 		break;
2850:src/keys.c    **** 		}
2851:src/keys.c    **** 
2852:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
2853:src/keys.c    **** 	ch = keycode_to_alpha(c, shift);
2854:src/keys.c    **** 	if (ch == 0)
2855:src/keys.c    **** 		return STATE_UNFINISHED;
2856:src/keys.c    **** add_char:
2857:src/keys.c    **** 	if (State2.numdigit == 0) {
2858:src/keys.c    **** 		State2.digval = ch;
2859:src/keys.c    **** 		State2.numdigit = 1;
2860:src/keys.c    **** 		return STATE_UNFINISHED;
2861:src/keys.c    **** 	} else if (State2.numdigit == 1) {
2862:src/keys.c    **** 		State2.digval2 = ch;
2863:src/keys.c    **** 		State2.numdigit = 2;
2864:src/keys.c    **** 		return STATE_UNFINISHED;
2865:src/keys.c    **** 	}
2866:src/keys.c    **** 	reset_multi();
2867:src/keys.c    **** 
2868:src/keys.c    **** fin:
2869:src/keys.c    **** 	opcode = OP_DBL + (CmdBase << DBL_SHIFT) 
2870:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
2871:src/keys.c    **** 	return opcode;
2872:src/keys.c    **** }
2873:src/keys.c    **** 
2874:src/keys.c    **** 
2875:src/keys.c    **** /* Handle YES/NO confirmations
2876:src/keys.c    ****  */
2877:src/keys.c    **** static int process_confirm(const keycode c) {
2878:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
2879:src/keys.c    **** 	switch (c) {
2880:src/keys.c    **** #ifdef DM42
2881:src/keys.c    **** 	case K52:
2882:src/keys.c    **** #endif
2883:src/keys.c    **** 	case K63:			// Yes
2884:src/keys.c    **** 	  switch (State2.confirm) {
2885:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
2886:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
2887:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
2888:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
ARM GAS  /tmp/ccgiIQCZ.s 			page 56


2889:src/keys.c    **** 	  }
2890:src/keys.c    **** 	case K24:
2891:src/keys.c    **** #ifdef DM42
2892:src/keys.c    **** 	case K22:
2893:src/keys.c    **** #else
2894:src/keys.c    **** 	case K32:
2895:src/keys.c    **** #endif
2896:src/keys.c    **** 	  // No
2897:src/keys.c    **** 	  State2.confirm = 0;
2898:src/keys.c    **** 	  State2.digval = 0;
2899:src/keys.c    **** 	  break;
2900:src/keys.c    **** 	default:			// No state change
2901:src/keys.c    **** 	  break;
2902:src/keys.c    **** 	}
2903:src/keys.c    **** 	return STATE_UNFINISHED;
2904:src/keys.c    **** }
2905:src/keys.c    **** 
2906:src/keys.c    **** 
2907:src/keys.c    **** /*
2908:src/keys.c    ****  *  STATUS
2909:src/keys.c    ****  */
2910:src/keys.c    **** static int process_status(const keycode c) {
2911:src/keys.c    **** 	int n = ((int)State2.status) - 3;
2912:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
2913:src/keys.c    **** 
2914:src/keys.c    **** 	if (c == K_UP) {
2915:src/keys.c    **** 		if (--n < -2)
2916:src/keys.c    **** 			n = max;
2917:src/keys.c    **** 	}
2918:src/keys.c    **** 	else if (c == K_DOWN) {
2919:src/keys.c    **** 		if (++n > max)
2920:src/keys.c    **** 			n = -2;
2921:src/keys.c    **** 	}
2922:src/keys.c    **** 	else if (c == K24 /* || c == K60 */) {
2923:src/keys.c    **** 		State2.status = 0;
2924:src/keys.c    **** 		return STATE_UNFINISHED;
2925:src/keys.c    **** 	} 
2926:src/keys.c    **** 	else {
2927:src/keys.c    **** 		int nn = keycode_to_digit_or_register(c) & 0x7f;
2928:src/keys.c    **** 		if (nn <= 9)
2929:src/keys.c    **** 			n = nn;
2930:src/keys.c    **** 		else if (nn == LOCAL_REG_BASE)
2931:src/keys.c    **** 			n = n == max ? 10 : max;
2932:src/keys.c    **** 		else if (nn != NO_REG)
2933:src/keys.c    **** 			n = 10; 
2934:src/keys.c    **** 	}
2935:src/keys.c    **** 	State2.status = n + 3;
2936:src/keys.c    **** 
2937:src/keys.c    **** 	return STATE_UNFINISHED;
2938:src/keys.c    **** }
2939:src/keys.c    **** 
2940:src/keys.c    **** 
2941:src/keys.c    **** /*
2942:src/keys.c    ****  *  CAT helper
2943:src/keys.c    ****  */
2944:src/keys.c    **** static int is_label_or_end_at(unsigned int pc, int search_end) {
 218              		.loc 1 2944 64 is_stmt 1 view -0
ARM GAS  /tmp/ccgiIQCZ.s 			page 57


 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
2945:src/keys.c    **** 	const unsigned int op = getprog(pc);
 222              		.loc 1 2945 2 view .LVU58
2944:src/keys.c    **** 	const unsigned int op = getprog(pc);
 223              		.loc 1 2944 64 is_stmt 0 view .LVU59
 224 0000 10B5     		push	{r4, lr}
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 4, -8
 227              		.cfi_offset 14, -4
2944:src/keys.c    **** 	const unsigned int op = getprog(pc);
 228              		.loc 1 2944 64 view .LVU60
 229 0002 0C46     		mov	r4, r1
 230              		.loc 1 2945 26 view .LVU61
 231 0004 FFF7FEFF 		bl	getprog
 232              	.LVL20:
2946:src/keys.c    **** 
2947:src/keys.c    **** 	return op == (OP_NIL | OP_END) || (!search_end && (isDBL(op) && opDBL(op) == DBL_LBL));
 233              		.loc 1 2947 2 is_stmt 1 view .LVU62
 234              		.loc 1 2947 33 is_stmt 0 view .LVU63
 235 0008 B0F59D7F 		cmp	r0, #314
 236 000c 06D0     		beq	.L21
 237              		.loc 1 2947 53 discriminator 3 view .LVU64
 238 000e 00F47043 		and	r3, r0, #61440
 239              		.loc 1 2947 49 discriminator 3 view .LVU65
 240 0012 B3F5704F 		cmp	r3, #61440
 241 0016 03D0     		beq	.L24
 242              		.loc 1 2947 33 view .LVU66
 243 0018 0020     		movs	r0, #0
 244              	.LVL21:
2948:src/keys.c    **** }
 245              		.loc 1 2948 1 view .LVU67
 246 001a 10BD     		pop	{r4, pc}
 247              	.LVL22:
 248              	.L21:
2947:src/keys.c    **** }
 249              		.loc 1 2947 33 view .LVU68
 250 001c 0120     		movs	r0, #1
 251              	.LVL23:
 252              		.loc 1 2948 1 view .LVU69
 253 001e 10BD     		pop	{r4, pc}
 254              	.LVL24:
 255              	.L24:
2947:src/keys.c    **** }
 256              		.loc 1 2947 66 discriminator 5 view .LVU70
 257 0020 C0F30320 		ubfx	r0, r0, #8, #4
 258              	.LVL25:
2947:src/keys.c    **** }
 259              		.loc 1 2947 63 discriminator 5 view .LVU71
 260 0024 50EA0403 		orrs	r3, r0, r4
 261 0028 0CBF     		ite	eq
 262 002a 0120     		moveq	r0, #1
 263 002c 0020     		movne	r0, #0
 264              		.loc 1 2948 1 discriminator 5 view .LVU72
 265 002e 10BD     		pop	{r4, pc}
 266              		.loc 1 2948 1 discriminator 5 view .LVU73
ARM GAS  /tmp/ccgiIQCZ.s 			page 58


 267              		.cfi_endproc
 268              	.LFE54:
 270              		.section	.text.advance_to_next_label,"ax",%progbits
 271              		.align	1
 272              		.p2align 2,,3
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv4-sp-d16
 278              	advance_to_next_label:
 279              	.LVL26:
 280              	.LFB55:
2949:src/keys.c    **** 
2950:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end) {
 281              		.loc 1 2950 85 is_stmt 1 view -0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		.loc 1 2950 85 is_stmt 0 view .LVU75
 286 0000 70B5     		push	{r4, r5, r6, lr}
 287              		.cfi_def_cfa_offset 16
 288              		.cfi_offset 4, -16
 289              		.cfi_offset 5, -12
 290              		.cfi_offset 6, -8
 291              		.cfi_offset 14, -4
 292              		.loc 1 2950 85 view .LVU76
 293 0002 0446     		mov	r4, r0
2951:src/keys.c    **** 	do {
 294              		.loc 1 2951 2 is_stmt 1 view .LVU77
2952:src/keys.c    **** 		for (;;) {
 295              		.loc 1 2952 3 view .LVU78
2953:src/keys.c    **** 			if (inc) {
 296              		.loc 1 2953 4 view .LVU79
2950:src/keys.c    **** 	do {
 297              		.loc 1 2950 85 is_stmt 0 view .LVU80
 298 0004 1646     		mov	r6, r2
 299              		.loc 1 2953 7 view .LVU81
 300 0006 21B9     		cbnz	r1, .L29
 301              	.LVL27:
 302              	.L26:
2954:src/keys.c    **** 				pc = do_inc(pc, 0);
2955:src/keys.c    **** 				if (PcWrapped)
2956:src/keys.c    **** 					break;
2957:src/keys.c    **** 			}
2958:src/keys.c    **** 			else
2959:src/keys.c    **** 				inc = 1;
2960:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 303              		.loc 1 2960 4 is_stmt 1 view .LVU82
 304              		.loc 1 2960 8 is_stmt 0 view .LVU83
 305 0008 3146     		mov	r1, r6
 306 000a 2046     		mov	r0, r4
 307              		.loc 1 2960 8 view .LVU84
 308 000c FFF7FEFF 		bl	is_label_or_end_at
 309              	.LVL28:
 310              		.loc 1 2960 7 view .LVU85
 311 0010 B8B9     		cbnz	r0, .L28
 312              	.LVL29:
ARM GAS  /tmp/ccgiIQCZ.s 			page 59


 313              	.L29:
 314              		.loc 1 2960 7 view .LVU86
 315 0012 0D4D     		ldr	r5, .L37
 316              	.L30:
2954:src/keys.c    **** 				pc = do_inc(pc, 0);
 317              		.loc 1 2954 5 is_stmt 1 view .LVU87
2954:src/keys.c    **** 				pc = do_inc(pc, 0);
 318              		.loc 1 2954 10 is_stmt 0 view .LVU88
 319 0014 2046     		mov	r0, r4
 320 0016 0021     		movs	r1, #0
 321 0018 FFF7FEFF 		bl	do_inc
 322              	.LVL30:
2955:src/keys.c    **** 					break;
 323              		.loc 1 2955 8 view .LVU89
 324 001c 2B68     		ldr	r3, [r5]
2954:src/keys.c    **** 				pc = do_inc(pc, 0);
 325              		.loc 1 2954 10 view .LVU90
 326 001e 0446     		mov	r4, r0
 327              	.LVL31:
2955:src/keys.c    **** 					break;
 328              		.loc 1 2955 5 is_stmt 1 view .LVU91
2955:src/keys.c    **** 					break;
 329              		.loc 1 2955 8 is_stmt 0 view .LVU92
 330 0020 002B     		cmp	r3, #0
 331 0022 F1D0     		beq	.L26
2961:src/keys.c    **** 				return pc;
2962:src/keys.c    **** 			}
2963:src/keys.c    **** 		}
2964:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) + 1) & 3);
 332              		.loc 1 2964 3 is_stmt 1 view .LVU93
 333              		.loc 1 2964 8 is_stmt 0 view .LVU94
 334 0024 20F47F54 		bic	r4, r0, #16320
 335 0028 24F03F04 		bic	r4, r4, #63
 336 002c 04F58044 		add	r4, r4, #16384
 337 0030 A4B2     		uxth	r4, r4
 338              		.loc 1 2964 6 view .LVU95
 339 0032 44F00104 		orr	r4, r4, #1
 340              	.LVL32:
2965:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 341              		.loc 1 2965 10 is_stmt 1 view .LVU96
 342              		.loc 1 2965 13 is_stmt 0 view .LVU97
 343 0036 2046     		mov	r0, r4
 344 0038 3146     		mov	r1, r6
 345 003a FFF7FEFF 		bl	is_label_or_end_at
 346              	.LVL33:
 347              		.loc 1 2965 2 view .LVU98
 348 003e 0028     		cmp	r0, #0
 349 0040 E8D0     		beq	.L30
 350              	.L28:
2966:src/keys.c    **** 	return pc;
2967:src/keys.c    **** }
 351              		.loc 1 2967 1 view .LVU99
 352 0042 2046     		mov	r0, r4
 353 0044 70BD     		pop	{r4, r5, r6, pc}
 354              	.LVL34:
 355              	.L38:
 356              		.loc 1 2967 1 view .LVU100
ARM GAS  /tmp/ccgiIQCZ.s 			page 60


 357 0046 00BF     		.align	2
 358              	.L37:
 359 0048 00000000 		.word	PcWrapped
 360              		.cfi_endproc
 361              	.LFE55:
 363              		.section	.text.init_cat,"ax",%progbits
 364              		.align	1
 365              		.p2align 2,,3
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu fpv4-sp-d16
 371              	init_cat:
 372              	.LVL35:
 373              	.LFB12:
 565:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 374              		.loc 1 565 43 is_stmt 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 378              		.loc 1 566 2 view .LVU102
 565:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 379              		.loc 1 565 43 is_stmt 0 view .LVU103
 380 0000 38B5     		push	{r3, r4, r5, lr}
 381              		.cfi_def_cfa_offset 16
 382              		.cfi_offset 3, -16
 383              		.cfi_offset 4, -12
 384              		.cfi_offset 5, -8
 385              		.cfi_offset 14, -4
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 386              		.loc 1 566 37 view .LVU104
 387 0002 384C     		ldr	r4, .L58
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 388              		.loc 1 566 5 view .LVU105
 389 0004 0546     		mov	r5, r0
 390 0006 D0B9     		cbnz	r0, .L40
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 391              		.loc 1 566 37 discriminator 1 view .LVU106
 392 0008 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 393              		.loc 1 566 28 discriminator 1 view .LVU107
 394 000a 43B1     		cbz	r3, .L41
 568:src/keys.c    **** 		CmdLineLength = 0;
 395              		.loc 1 568 3 is_stmt 1 view .LVU108
 568:src/keys.c    **** 		CmdLineLength = 0;
 396              		.loc 1 568 18 is_stmt 0 view .LVU109
 397 000c 364A     		ldr	r2, .L58+4
 569:src/keys.c    **** 	}
 398              		.loc 1 569 17 view .LVU110
 399 000e 2077     		strb	r0, [r4, #28]
 568:src/keys.c    **** 		CmdLineLength = 0;
 400              		.loc 1 568 18 view .LVU111
 401 0010 1268     		ldr	r2, [r2]
 402 0012 92F8DC17 		ldrb	r1, [r2, #2012]	@ zero_extendqisi2
 403 0016 63F30401 		bfi	r1, r3, #0, #5
 404 001a 82F8DC17 		strb	r1, [r2, #2012]
ARM GAS  /tmp/ccgiIQCZ.s 			page 61


 569:src/keys.c    **** 	}
 405              		.loc 1 569 3 is_stmt 1 view .LVU112
 406              	.L41:
 571:src/keys.c    **** 
 407              		.loc 1 571 2 view .LVU113
 408 001e FFF7FEFF 		bl	process_cmdline
 409              	.LVL36:
 573:src/keys.c    **** 	State2.registerlist = 0;
 410              		.loc 1 573 2 view .LVU114
 574:src/keys.c    **** 	State2.status = 0;
 411              		.loc 1 574 2 view .LVU115
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 412              		.loc 1 575 2 view .LVU116
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 413              		.loc 1 600 16 is_stmt 0 view .LVU117
 414 0022 6369     		ldr	r3, [r4, #20]
 415 0024 23F04063 		bic	r3, r3, #201326592
 416 0028 23F40073 		bic	r3, r3, #512
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 417              		.loc 1 575 16 view .LVU118
 418 002c 0022     		movs	r2, #0
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 419              		.loc 1 600 16 view .LVU119
 420 002e 6361     		str	r3, [r4, #20]
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 421              		.loc 1 575 16 view .LVU120
 422 0030 2273     		strb	r2, [r4, #12]
 576:src/keys.c    **** 
 423              		.loc 1 576 2 is_stmt 1 view .LVU121
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 424              		.loc 1 578 2 view .LVU122
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 425              		.loc 1 599 3 view .LVU123
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 426              		.loc 1 599 20 is_stmt 0 view .LVU124
 427 0032 A273     		strb	r2, [r4, #14]
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 428              		.loc 1 600 3 is_stmt 1 view .LVU125
 601:src/keys.c    **** 			// Different catalogue, reset position
 429              		.loc 1 601 3 view .LVU126
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 430              		.loc 1 606 2 view .LVU127
 431              	.LBB307:
 432              	.LBI307:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 433              		.loc 1 114 13 view .LVU128
 434              	.LBE307:
 115:src/keys.c    **** }
 435              		.loc 1 115 2 view .LVU129
 436              	.LVL37:
 437              	.LBB324:
 438              	.LBB308:
 439              	.LBI308:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 440              		.loc 1 104 20 view .LVU130
 441              	.LBB309:
 105:src/keys.c    **** 	State2.shifts = shift;
ARM GAS  /tmp/ccgiIQCZ.s 			page 62


 442              		.loc 1 105 2 view .LVU131
 443              	.LBB310:
 444              	.LBI310:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 445              		.loc 1 96 13 view .LVU132
 446              	.LBB311:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 447              		.loc 1 97 2 view .LVU133
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 448              		.loc 1 97 18 is_stmt 0 view .LVU134
 449 0034 FFF7FEFF 		bl	shift_down
 450              	.LVL38:
  98:src/keys.c    **** }
 451              		.loc 1 98 2 is_stmt 1 view .LVU135
 452              	.LBE311:
 453              	.LBE310:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 454              		.loc 1 106 2 view .LVU136
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 455              		.loc 1 106 16 is_stmt 0 view .LVU137
 456 0038 0023     		movs	r3, #0
 457 003a 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 458              		.loc 1 108 2 is_stmt 1 view .LVU138
 459              	.LVL39:
 108:src/keys.c    **** }
 460              		.loc 1 108 2 is_stmt 0 view .LVU139
 461              	.LBE309:
 462              	.LBE308:
 463              	.LBE324:
 610:src/keys.c    **** 
 464              		.loc 1 610 1 view .LVU140
 465 003c 38BD     		pop	{r3, r4, r5, pc}
 466              	.LVL40:
 467              	.L40:
 571:src/keys.c    **** 
 468              		.loc 1 571 2 is_stmt 1 view .LVU141
 469 003e FFF7FEFF 		bl	process_cmdline
 470              	.LVL41:
 573:src/keys.c    **** 	State2.registerlist = 0;
 471              		.loc 1 573 2 view .LVU142
 574:src/keys.c    **** 	State2.status = 0;
 472              		.loc 1 574 2 view .LVU143
 573:src/keys.c    **** 	State2.registerlist = 0;
 473              		.loc 1 573 19 is_stmt 0 view .LVU144
 474 0042 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 475              		.loc 1 575 16 view .LVU145
 476 0044 0022     		movs	r2, #0
 573:src/keys.c    **** 	State2.registerlist = 0;
 477              		.loc 1 573 19 view .LVU146
 478 0046 23F00C03 		bic	r3, r3, #12
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 479              		.loc 1 578 2 view .LVU147
 480 004a 162D     		cmp	r5, #22
 573:src/keys.c    **** 	State2.registerlist = 0;
 481              		.loc 1 573 19 view .LVU148
ARM GAS  /tmp/ccgiIQCZ.s 			page 63


 482 004c E375     		strb	r3, [r4, #23]
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 483              		.loc 1 575 2 is_stmt 1 view .LVU149
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 484              		.loc 1 575 16 is_stmt 0 view .LVU150
 485 004e 2273     		strb	r2, [r4, #12]
 576:src/keys.c    **** 
 486              		.loc 1 576 2 is_stmt 1 view .LVU151
 576:src/keys.c    **** 
 487              		.loc 1 576 19 is_stmt 0 view .LVU152
 488 0050 A273     		strb	r2, [r4, #14]
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 489              		.loc 1 578 2 is_stmt 1 view .LVU153
 490 0052 1BD0     		beq	.L42
 491 0054 172D     		cmp	r5, #23
 492 0056 06D1     		bne	.L56
 594:src/keys.c    **** 		break;
 493              		.loc 1 594 3 view .LVU154
 594:src/keys.c    **** 		break;
 494              		.loc 1 594 17 is_stmt 0 view .LVU155
 495 0058 0123     		movs	r3, #1
 496 005a 2373     		strb	r3, [r4, #12]
 595:src/keys.c    **** 
 497              		.loc 1 595 3 is_stmt 1 view .LVU156
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 498              		.loc 1 606 2 view .LVU157
 499              	.LBB325:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 500              		.loc 1 114 13 view .LVU158
 501              	.LBE325:
 115:src/keys.c    **** }
 502              		.loc 1 115 2 view .LVU159
 503              	.LVL42:
 504              	.LBB326:
 505              	.LBB321:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 506              		.loc 1 104 20 view .LVU160
 507              	.LBB318:
 105:src/keys.c    **** 	State2.shifts = shift;
 508              		.loc 1 105 2 view .LVU161
 509              	.LBB315:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 510              		.loc 1 96 13 view .LVU162
 511              	.LBB312:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 512              		.loc 1 97 2 view .LVU163
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 513              		.loc 1 97 18 is_stmt 0 view .LVU164
 514 005c FFF7FEFF 		bl	shift_down
 515              	.LVL43:
  98:src/keys.c    **** }
 516              		.loc 1 98 2 is_stmt 1 view .LVU165
 517              	.LBE312:
 518              	.LBE315:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 519              		.loc 1 106 2 view .LVU166
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
ARM GAS  /tmp/ccgiIQCZ.s 			page 64


 520              		.loc 1 106 16 is_stmt 0 view .LVU167
 521 0060 0023     		movs	r3, #0
 522 0062 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 523              		.loc 1 108 2 is_stmt 1 view .LVU168
 524              	.LVL44:
 108:src/keys.c    **** }
 525              		.loc 1 108 2 is_stmt 0 view .LVU169
 526              	.LBE318:
 527              	.LBE321:
 528              	.LBE326:
 610:src/keys.c    **** 
 529              		.loc 1 610 1 view .LVU170
 530 0064 38BD     		pop	{r3, r4, r5, pc}
 531              	.L56:
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 532              		.loc 1 578 2 view .LVU171
 533 0066 152D     		cmp	r5, #21
 534 0068 1CD1     		bne	.L44
 581:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 535              		.loc 1 581 3 is_stmt 1 view .LVU172
 582:src/keys.c    **** 		break;
 536              		.loc 1 582 41 is_stmt 0 view .LVU173
 537 006a 1F49     		ldr	r1, .L58+4
 581:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 538              		.loc 1 581 20 view .LVU174
 539 006c DBB2     		uxtb	r3, r3
 582:src/keys.c    **** 		break;
 540              		.loc 1 582 41 view .LVU175
 541 006e 0968     		ldr	r1, [r1]
 581:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 542              		.loc 1 581 20 view .LVU176
 543 0070 43F00403 		orr	r3, r3, #4
 544 0074 E375     		strb	r3, [r4, #23]
 582:src/keys.c    **** 		break;
 545              		.loc 1 582 3 is_stmt 1 view .LVU177
 582:src/keys.c    **** 		break;
 546              		.loc 1 582 19 is_stmt 0 view .LVU178
 547 0076 B1F8EC07 		ldrh	r0, [r1, #2028]
 548 007a 1146     		mov	r1, r2
 549 007c FFF7FEFF 		bl	advance_to_next_label
 550              	.LVL45:
 582:src/keys.c    **** 		break;
 551              		.loc 1 582 17 view .LVU179
 552 0080 2081     		strh	r0, [r4, #8]	@ movhi
 583:src/keys.c    **** 	
 553              		.loc 1 583 3 is_stmt 1 view .LVU180
 554              	.L45:
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 555              		.loc 1 606 2 view .LVU181
 556              	.LBB327:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 557              		.loc 1 114 13 view .LVU182
 558              	.LBE327:
 115:src/keys.c    **** }
 559              		.loc 1 115 2 view .LVU183
 560              	.LVL46:
ARM GAS  /tmp/ccgiIQCZ.s 			page 65


 561              	.LBB328:
 562              	.LBB322:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 563              		.loc 1 104 20 view .LVU184
 564              	.LBB319:
 105:src/keys.c    **** 	State2.shifts = shift;
 565              		.loc 1 105 2 view .LVU185
 566              	.LBB316:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 567              		.loc 1 96 13 view .LVU186
 568              	.LBB313:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 569              		.loc 1 97 2 view .LVU187
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 570              		.loc 1 97 18 is_stmt 0 view .LVU188
 571 0082 FFF7FEFF 		bl	shift_down
 572              	.LVL47:
  98:src/keys.c    **** }
 573              		.loc 1 98 2 is_stmt 1 view .LVU189
 574              	.LBE313:
 575              	.LBE316:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 576              		.loc 1 106 2 view .LVU190
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 577              		.loc 1 106 16 is_stmt 0 view .LVU191
 578 0086 0023     		movs	r3, #0
 579 0088 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 580              		.loc 1 108 2 is_stmt 1 view .LVU192
 581              	.LVL48:
 108:src/keys.c    **** }
 582              		.loc 1 108 2 is_stmt 0 view .LVU193
 583              	.LBE319:
 584              	.LBE322:
 585              	.LBE328:
 610:src/keys.c    **** 
 586              		.loc 1 610 1 view .LVU194
 587 008a 38BD     		pop	{r3, r4, r5, pc}
 588              	.L42:
 587:src/keys.c    **** 		State2.digval = regX_idx;
 589              		.loc 1 587 3 is_stmt 1 view .LVU195
 587:src/keys.c    **** 		State2.digval = regX_idx;
 590              		.loc 1 587 23 is_stmt 0 view .LVU196
 591 008c E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 589:src/keys.c    **** 		break;
 592              		.loc 1 589 18 view .LVU197
 593 008e A272     		strb	r2, [r4, #10]
 587:src/keys.c    **** 		State2.digval = regX_idx;
 594              		.loc 1 587 23 view .LVU198
 595 0090 43F00803 		orr	r3, r3, #8
 588:src/keys.c    **** 		State2.digval2 = 0;
 596              		.loc 1 588 17 view .LVU199
 597 0094 6422     		movs	r2, #100
 587:src/keys.c    **** 		State2.digval = regX_idx;
 598              		.loc 1 587 23 view .LVU200
 599 0096 E375     		strb	r3, [r4, #23]
 588:src/keys.c    **** 		State2.digval2 = 0;
ARM GAS  /tmp/ccgiIQCZ.s 			page 66


 600              		.loc 1 588 3 is_stmt 1 view .LVU201
 588:src/keys.c    **** 		State2.digval2 = 0;
 601              		.loc 1 588 17 is_stmt 0 view .LVU202
 602 0098 2281     		strh	r2, [r4, #8]	@ movhi
 589:src/keys.c    **** 		break;
 603              		.loc 1 589 3 is_stmt 1 view .LVU203
 590:src/keys.c    **** 
 604              		.loc 1 590 3 view .LVU204
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 605              		.loc 1 606 2 view .LVU205
 606              	.LBB329:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 607              		.loc 1 114 13 view .LVU206
 608              	.LBE329:
 115:src/keys.c    **** }
 609              		.loc 1 115 2 view .LVU207
 610              	.LVL49:
 611              	.LBB330:
 612              	.LBB323:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 613              		.loc 1 104 20 view .LVU208
 614              	.LBB320:
 105:src/keys.c    **** 	State2.shifts = shift;
 615              		.loc 1 105 2 view .LVU209
 616              	.LBB317:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 617              		.loc 1 96 13 view .LVU210
 618              	.LBB314:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 619              		.loc 1 97 2 view .LVU211
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 620              		.loc 1 97 18 is_stmt 0 view .LVU212
 621 009a FFF7FEFF 		bl	shift_down
 622              	.LVL50:
  98:src/keys.c    **** }
 623              		.loc 1 98 2 is_stmt 1 view .LVU213
 624              	.LBE314:
 625              	.LBE317:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 626              		.loc 1 106 2 view .LVU214
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 627              		.loc 1 106 16 is_stmt 0 view .LVU215
 628 009e 0023     		movs	r3, #0
 629 00a0 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 630              		.loc 1 108 2 is_stmt 1 view .LVU216
 631              	.LVL51:
 108:src/keys.c    **** }
 632              		.loc 1 108 2 is_stmt 0 view .LVU217
 633              	.LBE320:
 634              	.LBE323:
 635              	.LBE330:
 610:src/keys.c    **** 
 636              		.loc 1 610 1 view .LVU218
 637 00a2 38BD     		pop	{r3, r4, r5, pc}
 638              	.L44:
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
ARM GAS  /tmp/ccgiIQCZ.s 			page 67


 639              		.loc 1 599 3 is_stmt 1 view .LVU219
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 640              		.loc 1 600 44 is_stmt 0 view .LVU220
 641 00a4 022D     		cmp	r5, #2
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 642              		.loc 1 599 20 view .LVU221
 643 00a6 A573     		strb	r5, [r4, #14]
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 644              		.loc 1 600 3 is_stmt 1 view .LVU222
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 645              		.loc 1 600 44 is_stmt 0 view .LVU223
 646 00a8 12D1     		bne	.L57
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 647              		.loc 1 600 16 view .LVU224
 648 00aa 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 649 00ac 43F00203 		orr	r3, r3, #2
 650 00b0 6375     		strb	r3, [r4, #21]
 601:src/keys.c    **** 			// Different catalogue, reset position
 651              		.loc 1 601 3 is_stmt 1 view .LVU225
 652              	.L49:
 601:src/keys.c    **** 			// Different catalogue, reset position
 653              		.loc 1 601 32 is_stmt 0 discriminator 1 view .LVU226
 654 00b2 0D4B     		ldr	r3, .L58+4
 655 00b4 1A68     		ldr	r2, [r3]
 601:src/keys.c    **** 			// Different catalogue, reset position
 656              		.loc 1 601 37 discriminator 1 view .LVU227
 657 00b6 92F8DC37 		ldrb	r3, [r2, #2012]	@ zero_extendqisi2
 601:src/keys.c    **** 			// Different catalogue, reset position
 658              		.loc 1 601 29 discriminator 1 view .LVU228
 659 00ba 03F01F03 		and	r3, r3, #31
 660 00be AB42     		cmp	r3, r5
 661 00c0 DFD0     		beq	.L45
 603:src/keys.c    **** 		}
 662              		.loc 1 603 4 is_stmt 1 view .LVU229
 603:src/keys.c    **** 		}
 663              		.loc 1 603 17 is_stmt 0 view .LVU230
 664 00c2 B2F8DC37 		ldrh	r3, [r2, #2012]
 665 00c6 6FF34B13 		bfc	r3, #5, #7
 666 00ca A2F8DC37 		strh	r3, [r2, #2012]	@ movhi
 667 00ce D8E7     		b	.L45
 668              	.L57:
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 669              		.loc 1 600 44 view .LVU231
 670 00d0 A5F11101 		sub	r1, r5, #17
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 671              		.loc 1 600 16 view .LVU232
 672 00d4 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 673              		.loc 1 600 44 view .LVU233
 674 00d6 4A42     		rsbs	r2, r1, #0
 675 00d8 4A41     		adcs	r2, r2, r1
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 676              		.loc 1 600 16 view .LVU234
 677 00da 62F34103 		bfi	r3, r2, #1, #1
 678 00de 6375     		strb	r3, [r4, #21]
 601:src/keys.c    **** 			// Different catalogue, reset position
 679              		.loc 1 601 3 is_stmt 1 view .LVU235
ARM GAS  /tmp/ccgiIQCZ.s 			page 68


 680 00e0 E7E7     		b	.L49
 681              	.L59:
 682 00e2 00BF     		.align	2
 683              	.L58:
 684 00e4 00000000 		.word	StateWhileOn
 685 00e8 00000000 		.word	main_ram
 686              		.cfi_endproc
 687              	.LFE12:
 689              		.section	.text.advance_to_previous_label,"ax",%progbits
 690              		.align	1
 691              		.p2align 2,,3
 692              		.syntax unified
 693              		.thumb
 694              		.thumb_func
 695              		.fpu fpv4-sp-d16
 697              	advance_to_previous_label:
 698              	.LVL52:
 699              	.LFB56:
2968:src/keys.c    **** 
2969:src/keys.c    **** static unsigned int advance_to_previous_label(unsigned int pc, int search_end) {
 700              		.loc 1 2969 80 view -0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704              		.loc 1 2969 80 is_stmt 0 view .LVU237
 705 0000 70B5     		push	{r4, r5, r6, lr}
 706              		.cfi_def_cfa_offset 16
 707              		.cfi_offset 4, -16
 708              		.cfi_offset 5, -12
 709              		.cfi_offset 6, -8
 710              		.cfi_offset 14, -4
 711 0002 124E     		ldr	r6, .L69
 712              		.loc 1 2969 80 view .LVU238
 713 0004 0446     		mov	r4, r0
 714 0006 0D46     		mov	r5, r1
 715              	.LVL53:
 716              	.L61:
2970:src/keys.c    **** 	do {
 717              		.loc 1 2970 2 is_stmt 1 view .LVU239
2971:src/keys.c    **** 		for (;;) {
 718              		.loc 1 2971 3 view .LVU240
2972:src/keys.c    **** 			pc = do_dec(pc, 0);
 719              		.loc 1 2972 4 view .LVU241
 720              		.loc 1 2972 9 is_stmt 0 view .LVU242
 721 0008 2046     		mov	r0, r4
 722 000a 0021     		movs	r1, #0
 723 000c FFF7FEFF 		bl	do_dec
 724              	.LVL54:
2973:src/keys.c    **** 			if (PcWrapped)
2974:src/keys.c    **** 				break;
2975:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 725              		.loc 1 2975 4 is_stmt 1 view .LVU243
2976:src/keys.c    **** 				return pc;
2977:src/keys.c    **** 			}
2978:src/keys.c    **** 		}
2979:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) - 1) & 3);
 726              		.loc 1 2979 3 view .LVU244
ARM GAS  /tmp/ccgiIQCZ.s 			page 69


 727              		.loc 1 2979 8 is_stmt 0 view .LVU245
 728 0010 20F47F53 		bic	r3, r0, #16320
 729 0014 23F03F03 		bic	r3, r3, #63
2973:src/keys.c    **** 			if (PcWrapped)
 730              		.loc 1 2973 7 view .LVU246
 731 0018 3268     		ldr	r2, [r6]
 732              		.loc 1 2979 8 view .LVU247
 733 001a A3F58043 		sub	r3, r3, #16384
2980:src/keys.c    **** 		pc = do_dec(pc, 0);
 734              		.loc 1 2980 8 view .LVU248
 735 001e 0021     		movs	r1, #0
2972:src/keys.c    **** 			if (PcWrapped)
 736              		.loc 1 2972 9 view .LVU249
 737 0020 0446     		mov	r4, r0
 738              	.LVL55:
2973:src/keys.c    **** 				break;
 739              		.loc 1 2973 4 is_stmt 1 view .LVU250
2979:src/keys.c    **** 		pc = do_dec(pc, 0);
 740              		.loc 1 2979 8 is_stmt 0 view .LVU251
 741 0022 9BB2     		uxth	r3, r3
 742              	.LVL56:
 743              		.loc 1 2980 3 is_stmt 1 view .LVU252
2973:src/keys.c    **** 				break;
 744              		.loc 1 2973 7 is_stmt 0 view .LVU253
 745 0024 32B9     		cbnz	r2, .L62
2975:src/keys.c    **** 				return pc;
 746              		.loc 1 2975 8 view .LVU254
 747 0026 2946     		mov	r1, r5
 748 0028 FFF7FEFF 		bl	is_label_or_end_at
 749              	.LVL57:
2975:src/keys.c    **** 				return pc;
 750              		.loc 1 2975 7 view .LVU255
 751 002c 0028     		cmp	r0, #0
 752 002e EBD0     		beq	.L61
2981:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
2982:src/keys.c    **** 	return pc;
2983:src/keys.c    **** }
 753              		.loc 1 2983 1 view .LVU256
 754 0030 2046     		mov	r0, r4
 755 0032 70BD     		pop	{r4, r5, r6, pc}
 756              	.LVL58:
 757              	.L62:
2980:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 758              		.loc 1 2980 8 view .LVU257
 759 0034 43F00100 		orr	r0, r3, #1
 760 0038 FFF7FEFF 		bl	do_dec
 761              	.LVL59:
2981:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 762              		.loc 1 2981 13 view .LVU258
 763 003c 2946     		mov	r1, r5
2980:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 764              		.loc 1 2980 8 view .LVU259
 765 003e 0446     		mov	r4, r0
 766              	.LVL60:
2981:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 767              		.loc 1 2981 10 is_stmt 1 view .LVU260
2981:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
ARM GAS  /tmp/ccgiIQCZ.s 			page 70


 768              		.loc 1 2981 13 is_stmt 0 view .LVU261
 769 0040 FFF7FEFF 		bl	is_label_or_end_at
 770              	.LVL61:
2981:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 771              		.loc 1 2981 2 view .LVU262
 772 0044 0028     		cmp	r0, #0
 773 0046 DFD0     		beq	.L61
 774              		.loc 1 2983 1 view .LVU263
 775 0048 2046     		mov	r0, r4
 776 004a 70BD     		pop	{r4, r5, r6, pc}
 777              	.LVL62:
 778              	.L70:
 779              		.loc 1 2983 1 view .LVU264
 780              		.align	2
 781              	.L69:
 782 004c 00000000 		.word	PcWrapped
 783              		.cfi_endproc
 784              	.LFE56:
 786              		.section	.text.check_confirm.part.0,"ax",%progbits
 787              		.align	1
 788              		.p2align 2,,3
 789              		.syntax unified
 790              		.thumb
 791              		.thumb_func
 792              		.fpu fpv4-sp-d16
 794              	check_confirm.part.0:
 795              	.LVL63:
 796              	.LFB64:
 716:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 797              		.loc 1 716 12 is_stmt 1 view -0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801              		@ link register save eliminated.
 802              	.LBB331:
 718:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 803              		.loc 1 718 3 view .LVU266
 718:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 804              		.loc 1 718 13 is_stmt 0 view .LVU267
 805 0000 C3B2     		uxtb	r3, r0
 806              	.LVL64:
 719:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 807              		.loc 1 719 3 is_stmt 1 view .LVU268
 719:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 808              		.loc 1 719 25 is_stmt 0 view .LVU269
 809 0002 A3F14102 		sub	r2, r3, #65
 719:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 810              		.loc 1 719 6 view .LVU270
 811 0006 032A     		cmp	r2, #3
 812 0008 0AD9     		bls	.L76
 727:src/keys.c    **** #endif
 813              		.loc 1 727 7 is_stmt 1 view .LVU271
 727:src/keys.c    **** #endif
 814              		.loc 1 727 29 is_stmt 0 view .LVU272
 815 000a A3F1AD02 		sub	r2, r3, #173
 727:src/keys.c    **** #endif
 816              		.loc 1 727 10 view .LVU273
ARM GAS  /tmp/ccgiIQCZ.s 			page 71


 817 000e 052A     		cmp	r2, #5
 818 0010 03D8     		bhi	.L77
 819              	.L74:
 737:src/keys.c    **** 		}
 820              		.loc 1 737 4 is_stmt 1 view .LVU274
 737:src/keys.c    **** 		}
 821              		.loc 1 737 20 is_stmt 0 view .LVU275
 822 0012 074B     		ldr	r3, .L78
 823              	.LVL65:
 737:src/keys.c    **** 		}
 824              		.loc 1 737 20 view .LVU276
 825 0014 0122     		movs	r2, #1
 826              	.LVL66:
 737:src/keys.c    **** 		}
 827              		.loc 1 737 20 view .LVU277
 828 0016 1A60     		str	r2, [r3]
 829              	.LBE331:
 741:src/keys.c    **** 
 830              		.loc 1 741 1 view .LVU278
 831 0018 7047     		bx	lr
 832              	.LVL67:
 833              	.L77:
 834              	.LBB332:
 730:src/keys.c    **** #endif
 835              		.loc 1 730 4 view .LVU279
 836 001a BC2B     		cmp	r3, #188
 837 001c F9D0     		beq	.L74
 838              	.LBE332:
 741:src/keys.c    **** 
 839              		.loc 1 741 1 view .LVU280
 840 001e 7047     		bx	lr
 841              	.L76:
 842              	.LBB333:
 720:src/keys.c    **** 			return STATE_UNFINISHED;
 843              		.loc 1 720 4 is_stmt 1 view .LVU281
 720:src/keys.c    **** 			return STATE_UNFINISHED;
 844              		.loc 1 720 19 is_stmt 0 view .LVU282
 845 0020 044B     		ldr	r3, .L78+4
 846              	.LVL68:
 720:src/keys.c    **** 			return STATE_UNFINISHED;
 847              		.loc 1 720 19 view .LVU283
 848 0022 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
 849              	.LVL69:
 720:src/keys.c    **** 			return STATE_UNFINISHED;
 850              		.loc 1 720 35 view .LVU284
 851 0024 4038     		subs	r0, r0, #64
 852              	.LVL70:
 720:src/keys.c    **** 			return STATE_UNFINISHED;
 853              		.loc 1 720 19 view .LVU285
 854 0026 60F30202 		bfi	r2, r0, #0, #3
 855 002a 1A75     		strb	r2, [r3, #20]
 721:src/keys.c    **** 		}
 856              		.loc 1 721 4 is_stmt 1 view .LVU286
 721:src/keys.c    **** 		}
 857              		.loc 1 721 11 is_stmt 0 view .LVU287
 858 002c 3320     		movs	r0, #51
 859              	.LVL71:
ARM GAS  /tmp/ccgiIQCZ.s 			page 72


 721:src/keys.c    **** 		}
 860              		.loc 1 721 11 view .LVU288
 861 002e 7047     		bx	lr
 862              	.L79:
 863              		.align	2
 864              	.L78:
 865 0030 00000000 		.word	NonProgrammable
 866 0034 00000000 		.word	StateWhileOn
 867              	.LBE333:
 868              		.cfi_endproc
 869              	.LFE64:
 871              		.section	.text.init_arg.part.0,"ax",%progbits
 872              		.align	1
 873              		.p2align 2,,3
 874              		.syntax unified
 875              		.thumb
 876              		.thumb_func
 877              		.fpu fpv4-sp-d16
 879              	init_arg.part.0:
 880              	.LVL72:
 881              	.LFB66:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 882              		.loc 1 552 13 is_stmt 1 view -0
 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 0
 885              		@ frame_needed = 0, uses_anonymous_args = 0
 886              		@ link register save eliminated.
 555:src/keys.c    **** 	State2.ind = 0;
 887              		.loc 1 555 2 view .LVU290
 555:src/keys.c    **** 	State2.ind = 0;
 888              		.loc 1 555 10 is_stmt 0 view .LVU291
 889 0000 084B     		ldr	r3, .L81
 560:src/keys.c    **** 	State2.local = 0;
 890              		.loc 1 560 13 view .LVU292
 891 0002 5969     		ldr	r1, [r3, #20]
 555:src/keys.c    **** 	State2.ind = 0;
 892              		.loc 1 555 10 view .LVU293
 893 0004 D877     		strb	r0, [r3, #31]
 556:src/keys.c    **** 	State2.digval = 0;
 894              		.loc 1 556 2 is_stmt 1 view .LVU294
 557:src/keys.c    **** 	State2.numdigit = 0;
 895              		.loc 1 557 2 view .LVU295
 560:src/keys.c    **** 	State2.local = 0;
 896              		.loc 1 560 13 is_stmt 0 view .LVU296
 897 0006 21F40F11 		bic	r1, r1, #2342912
 898 000a 8628     		cmp	r0, #134
 899 000c 0CBF     		ite	eq
 900 000e 4FF40812 		moveq	r2, #2228224
 901 0012 4FF40012 		movne	r2, #2097152
 902 0016 0A43     		orrs	r2, r2, r1
 557:src/keys.c    **** 	State2.numdigit = 0;
 903              		.loc 1 557 16 view .LVU297
 904 0018 0021     		movs	r1, #0
 560:src/keys.c    **** 	State2.local = 0;
 905              		.loc 1 560 13 view .LVU298
 906 001a 5A61     		str	r2, [r3, #20]
 557:src/keys.c    **** 	State2.numdigit = 0;
ARM GAS  /tmp/ccgiIQCZ.s 			page 73


 907              		.loc 1 557 16 view .LVU299
 908 001c 1981     		strh	r1, [r3, #8]	@ movhi
 558:src/keys.c    **** 	State2.rarg = 1;
 909              		.loc 1 558 2 is_stmt 1 view .LVU300
 558:src/keys.c    **** 	State2.rarg = 1;
 910              		.loc 1 558 18 is_stmt 0 view .LVU301
 911 001e D972     		strb	r1, [r3, #11]
 559:src/keys.c    **** 	State2.dot = 0;
 912              		.loc 1 559 2 is_stmt 1 view .LVU302
 560:src/keys.c    **** 	State2.local = 0;
 913              		.loc 1 560 2 view .LVU303
 561:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 914              		.loc 1 561 2 view .LVU304
 562:src/keys.c    **** }
 915              		.loc 1 562 2 view .LVU305
 563:src/keys.c    **** 
 916              		.loc 1 563 1 is_stmt 0 view .LVU306
 917 0020 7047     		bx	lr
 918              	.L82:
 919 0022 00BF     		.align	2
 920              	.L81:
 921 0024 00000000 		.word	StateWhileOn
 922              		.cfi_endproc
 923              	.LFE66:
 925              		.section	.text.reset_arg,"ax",%progbits
 926              		.align	1
 927              		.p2align 2,,3
 928              		.syntax unified
 929              		.thumb
 930              		.thumb_func
 931              		.fpu fpv4-sp-d16
 933              	reset_arg:
 934              	.LFB34:
1895:src/keys.c    **** 	init_arg((enum rarg) 0);
 935              		.loc 1 1895 29 is_stmt 1 view -0
 936              		.cfi_startproc
 937              		@ args = 0, pretend = 0, frame = 0
 938              		@ frame_needed = 0, uses_anonymous_args = 0
1896:src/keys.c    **** 	State2.rarg = 0;
 939              		.loc 1 1896 2 view .LVU308
 940              	.LVL73:
 941              	.LBB334:
 942              	.LBI334:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 943              		.loc 1 552 13 view .LVU309
 944              	.LBB335:
 553:src/keys.c    **** 		return;
 945              		.loc 1 553 2 view .LVU310
 946              	.LBE335:
 947              	.LBE334:
1895:src/keys.c    **** 	init_arg((enum rarg) 0);
 948              		.loc 1 1895 29 is_stmt 0 view .LVU311
 949 0000 08B5     		push	{r3, lr}
 950              		.cfi_def_cfa_offset 8
 951              		.cfi_offset 3, -8
 952              		.cfi_offset 14, -4
 953              	.LBB337:
ARM GAS  /tmp/ccgiIQCZ.s 			page 74


 954              	.LBB336:
 553:src/keys.c    **** 		return;
 955              		.loc 1 553 6 view .LVU312
 956 0002 FFF7FEFF 		bl	is_bad_cmdline
 957              	.LVL74:
 553:src/keys.c    **** 		return;
 958              		.loc 1 553 5 view .LVU313
 959 0006 08B9     		cbnz	r0, .L84
 960 0008 FFF7FEFF 		bl	init_arg.part.0
 961              	.LVL75:
 962              	.L84:
 553:src/keys.c    **** 		return;
 963              		.loc 1 553 5 view .LVU314
 964              	.LBE336:
 965              	.LBE337:
1897:src/keys.c    **** }
 966              		.loc 1 1897 2 is_stmt 1 view .LVU315
1897:src/keys.c    **** }
 967              		.loc 1 1897 14 is_stmt 0 view .LVU316
 968 000c 024B     		ldr	r3, .L86
 969 000e 9A7D     		ldrb	r2, [r3, #22]	@ zero_extendqisi2
 970 0010 6FF34512 		bfc	r2, #5, #1
 971 0014 9A75     		strb	r2, [r3, #22]
1898:src/keys.c    **** 
 972              		.loc 1 1898 1 view .LVU317
 973 0016 08BD     		pop	{r3, pc}
 974              	.L87:
 975              		.align	2
 976              	.L86:
 977 0018 00000000 		.word	StateWhileOn
 978              		.cfi_endproc
 979              	.LFE34:
 981              		.section	.text.arg_eval,"ax",%progbits
 982              		.align	1
 983              		.p2align 2,,3
 984              		.syntax unified
 985              		.thumb
 986              		.thumb_func
 987              		.fpu fpv4-sp-d16
 989              	arg_eval:
 990              	.LVL76:
 991              	.LFB35:
1900:src/keys.c    ****    const unsigned int base = CmdBase;
 992              		.loc 1 1900 40 is_stmt 1 view -0
 993              		.cfi_startproc
 994              		@ args = 0, pretend = 0, frame = 0
 995              		@ frame_needed = 0, uses_anonymous_args = 0
1901:src/keys.c    ****    int r = RARG(base, val 
 996              		.loc 1 1901 4 view .LVU319
1900:src/keys.c    ****    const unsigned int base = CmdBase;
 997              		.loc 1 1900 40 is_stmt 0 view .LVU320
 998 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 999              		.cfi_def_cfa_offset 24
 1000              		.cfi_offset 3, -24
 1001              		.cfi_offset 4, -20
 1002              		.cfi_offset 5, -16
 1003              		.cfi_offset 6, -12
ARM GAS  /tmp/ccgiIQCZ.s 			page 75


 1004              		.cfi_offset 7, -8
 1005              		.cfi_offset 14, -4
1901:src/keys.c    ****    int r = RARG(base, val 
 1006              		.loc 1 1901 30 view .LVU321
 1007 0002 284B     		ldr	r3, .L115
1902:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1008              		.loc 1 1902 12 view .LVU322
 1009 0004 9E7D     		ldrb	r6, [r3, #22]	@ zero_extendqisi2
 1010 0006 597D     		ldrb	r1, [r3, #21]	@ zero_extendqisi2
1901:src/keys.c    ****    int r = RARG(base, val 
 1011              		.loc 1 1901 23 view .LVU323
 1012 0008 DA7F     		ldrb	r2, [r3, #31]	@ zero_extendqisi2
 1013              	.LVL77:
1902:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1014              		.loc 1 1902 4 is_stmt 1 view .LVU324
1902:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1015              		.loc 1 1902 12 is_stmt 0 view .LVU325
 1016 000a F507     		lsls	r5, r6, #31
1905:src/keys.c    **** 
 1017              		.loc 1 1905 34 view .LVU326
 1018 000c 264D     		ldr	r5, .L115+4
 1019 000e 2D68     		ldr	r5, [r5]
1902:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1020              		.loc 1 1902 12 view .LVU327
 1021 0010 01F08003 		and	r3, r1, #128
1905:src/keys.c    **** 
 1022              		.loc 1 1905 32 view .LVU328
 1023 0014 95F8EA77 		ldrb	r7, [r5, #2026]	@ zero_extendqisi2
1902:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1024              		.loc 1 1902 12 view .LVU329
 1025 0018 0344     		add	r3, r3, r0
 1026 001a 02F12004 		add	r4, r2, #32
 1027 001e 48BF     		it	mi
 1028 0020 7033     		addmi	r3, r3, #112
 1029 0022 2402     		lsls	r4, r4, #8
1905:src/keys.c    **** 
 1030              		.loc 1 1905 79 view .LVU330
 1031 0024 3F07     		lsls	r7, r7, #28
1902:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1032              		.loc 1 1902 12 view .LVU331
 1033 0026 44EA0304 		orr	r4, r4, r3
 1034              	.LVL78:
1905:src/keys.c    **** 
 1035              		.loc 1 1905 4 is_stmt 1 view .LVU332
1905:src/keys.c    **** 
 1036              		.loc 1 1905 79 is_stmt 0 view .LVU333
 1037 002a 26D5     		bpl	.L95
1905:src/keys.c    **** 
 1038              		.loc 1 1905 79 discriminator 2 view .LVU334
 1039 002c 16F0400F 		tst	r6, #64
 1040 0030 0CBF     		ite	eq
 1041 0032 0426     		moveq	r6, #4
 1042 0034 0826     		movne	r6, #8
 1043              	.L90:
 1044              	.LVL79:
1907:src/keys.c    ****      /*
 1045              		.loc 1 1907 4 is_stmt 1 discriminator 6 view .LVU335
ARM GAS  /tmp/ccgiIQCZ.s 			page 76


1907:src/keys.c    ****      /*
 1046              		.loc 1 1907 7 is_stmt 0 discriminator 6 view .LVU336
 1047 0036 0B06     		lsls	r3, r1, #24
 1048 0038 1BD4     		bmi	.L91
1923:src/keys.c    ****        if (C_LOCKED) {
 1049              		.loc 1 1923 6 is_stmt 1 view .LVU337
1923:src/keys.c    ****        if (C_LOCKED) {
 1050              		.loc 1 1923 23 is_stmt 0 view .LVU338
 1051 003a 1C4B     		ldr	r3, .L115+8
 1052 003c 03EB0213 		add	r3, r3, r2, lsl #4
 1053 0040 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
1923:src/keys.c    ****        if (C_LOCKED) {
 1054              		.loc 1 1923 9 view .LVU339
 1055 0042 DF06     		lsls	r7, r3, #27
 1056 0044 11D5     		bpl	.L92
1923:src/keys.c    ****        if (C_LOCKED) {
 1057              		.loc 1 1923 55 discriminator 1 view .LVU340
 1058 0046 95F8E437 		ldrb	r3, [r5, #2020]	@ zero_extendqisi2
1923:src/keys.c    ****        if (C_LOCKED) {
 1059              		.loc 1 1923 40 discriminator 1 view .LVU341
 1060 004a 13F00403 		ands	r3, r3, #4
 1061 004e 1BD1     		bne	.L112
1923:src/keys.c    ****        if (C_LOCKED) {
 1062              		.loc 1 1923 40 view .LVU342
 1063 0050 6221     		movs	r1, #98
 1064              	.L93:
1923:src/keys.c    ****        if (C_LOCKED) {
 1065              		.loc 1 1923 30 discriminator 7 view .LVU343
 1066 0052 8142     		cmp	r1, r0
 1067 0054 09D2     		bcs	.L92
1923:src/keys.c    ****        if (C_LOCKED) {
 1068              		.loc 1 1923 86 discriminator 8 view .LVU344
 1069 0056 C107     		lsls	r1, r0, #31
 1070 0058 07D5     		bpl	.L92
1924:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
 1071              		.loc 1 1924 8 is_stmt 1 view .LVU345
1924:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
 1072              		.loc 1 1924 11 is_stmt 0 view .LVU346
 1073 005a 1BB1     		cbz	r3, .L101
1924:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
 1074              		.loc 1 1924 12 discriminator 1 view .LVU347
 1075 005c 95F8DE37 		ldrb	r3, [r5, #2014]	@ zero_extendqisi2
 1076 0060 5B07     		lsls	r3, r3, #29
 1077 0062 19D4     		bmi	.L113
 1078              	.LVL80:
 1079              	.L101:
1929:src/keys.c    ****        }
 1080              		.loc 1 1929 10 view .LVU348
 1081 0064 3324     		movs	r4, #51
 1082              	.LVL81:
1944:src/keys.c    **** 
 1083              		.loc 1 1944 2 view .LVU349
 1084 0066 2046     		mov	r0, r4
 1085              	.LVL82:
1944:src/keys.c    **** 
 1086              		.loc 1 1944 2 view .LVU350
 1087 0068 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
ARM GAS  /tmp/ccgiIQCZ.s 			page 77


 1088              	.LVL83:
 1089              	.L92:
1937:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1090              		.loc 1 1937 6 is_stmt 1 view .LVU351
1937:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1091              		.loc 1 1937 31 is_stmt 0 view .LVU352
 1092 006a A2F12203 		sub	r3, r2, #34
1937:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1093              		.loc 1 1937 9 view .LVU353
 1094 006e 012B     		cmp	r3, #1
 1095 0070 05D9     		bls	.L114
 1096              	.LVL84:
 1097              	.L91:
1942:src/keys.c    ****    return r;
 1098              		.loc 1 1942 4 is_stmt 1 view .LVU354
 1099 0072 FFF7FEFF 		bl	reset_arg
 1100              	.LVL85:
1943:src/keys.c    ****  }
 1101              		.loc 1 1943 4 view .LVU355
 1102              	.L88:
1944:src/keys.c    **** 
 1103              		.loc 1 1944 2 is_stmt 0 view .LVU356
 1104 0076 2046     		mov	r0, r4
 1105 0078 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1106              	.LVL86:
 1107              	.L95:
1905:src/keys.c    **** 
 1108              		.loc 1 1905 79 view .LVU357
 1109 007a 0426     		movs	r6, #4
 1110 007c DBE7     		b	.L90
 1111              	.LVL87:
 1112              	.L114:
1937:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1113              		.loc 1 1937 76 discriminator 1 view .LVU358
 1114 007e C6F16406 		rsb	r6, r6, #100
 1115              	.LVL88:
1937:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1116              		.loc 1 1937 55 discriminator 1 view .LVU359
 1117 0082 8642     		cmp	r6, r0
 1118 0084 F5D2     		bcs	.L91
 1119 0086 EDE7     		b	.L101
 1120              	.LVL89:
 1121              	.L112:
1923:src/keys.c    ****        if (C_LOCKED) {
 1122              		.loc 1 1923 55 discriminator 2 view .LVU360
 1123 0088 95F8DE17 		ldrb	r1, [r5, #2014]	@ zero_extendqisi2
1923:src/keys.c    ****        if (C_LOCKED) {
 1124              		.loc 1 1923 40 discriminator 2 view .LVU361
 1125 008c 11F0040F 		tst	r1, #4
 1126 0090 0CBF     		ite	eq
 1127 0092 6221     		moveq	r1, #98
 1128 0094 0021     		movne	r1, #0
 1129 0096 DCE7     		b	.L93
 1130              	.L113:
1925:src/keys.c    **** 	 return STATE_UNFINISHED; // either leaves arg blank (if EXIT pressed) or with one digit in (STO)
 1131              		.loc 1 1925 3 is_stmt 1 view .LVU362
 1132 0098 1920     		movs	r0, #25
ARM GAS  /tmp/ccgiIQCZ.s 			page 78


 1133              	.LVL90:
1925:src/keys.c    **** 	 return STATE_UNFINISHED; // either leaves arg blank (if EXIT pressed) or with one digit in (STO)
 1134              		.loc 1 1925 3 is_stmt 0 view .LVU363
 1135 009a FFF7FEFF 		bl	error_message
 1136              	.LVL91:
1926:src/keys.c    ****        }
 1137              		.loc 1 1926 3 is_stmt 1 view .LVU364
1926:src/keys.c    ****        }
 1138              		.loc 1 1926 10 is_stmt 0 view .LVU365
 1139 009e 3324     		movs	r4, #51
 1140              	.LVL92:
1926:src/keys.c    ****        }
 1141              		.loc 1 1926 10 view .LVU366
 1142 00a0 E9E7     		b	.L88
 1143              	.L116:
 1144 00a2 00BF     		.align	2
 1145              	.L115:
 1146 00a4 00000000 		.word	StateWhileOn
 1147 00a8 00000000 		.word	main_ram
 1148 00ac 00000000 		.word	argcmds
 1149              		.cfi_endproc
 1150              	.LFE35:
 1152              		.section	.text.arg_digit,"ax",%progbits
 1153              		.align	1
 1154              		.p2align 2,,3
 1155              		.syntax unified
 1156              		.thumb
 1157              		.thumb_func
 1158              		.fpu fpv4-sp-d16
 1160              	arg_digit:
 1161              	.LVL93:
 1162              	.LFB36:
1946:src/keys.c    **** 	int lim;
 1163              		.loc 1 1946 29 is_stmt 1 view -0
 1164              		.cfi_startproc
 1165              		@ args = 0, pretend = 0, frame = 8
 1166              		@ frame_needed = 0, uses_anonymous_args = 0
1947:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
 1167              		.loc 1 1947 2 view .LVU368
1949:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1168              		.loc 1 1949 2 view .LVU369
1946:src/keys.c    **** 	int lim;
 1169              		.loc 1 1946 29 is_stmt 0 view .LVU370
 1170 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1171              		.cfi_def_cfa_offset 20
 1172              		.cfi_offset 4, -20
 1173              		.cfi_offset 5, -16
 1174              		.cfi_offset 6, -12
 1175              		.cfi_offset 7, -8
 1176              		.cfi_offset 14, -4
1950:src/keys.c    **** #else
 1177              		.loc 1 1950 29 view .LVU371
 1178 0002 3C4D     		ldr	r5, .L152
1946:src/keys.c    **** 	int lim;
 1179              		.loc 1 1946 29 view .LVU372
 1180 0004 83B0     		sub	sp, sp, #12
 1181              		.cfi_def_cfa_offset 32
ARM GAS  /tmp/ccgiIQCZ.s 			page 79


1946:src/keys.c    **** 	int lim;
 1182              		.loc 1 1946 29 view .LVU373
 1183 0006 0446     		mov	r4, r0
1949:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1184              		.loc 1 1949 17 view .LVU374
 1185 0008 01A8     		add	r0, sp, #4
 1186              	.LVL94:
1949:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1187              		.loc 1 1949 17 view .LVU375
 1188 000a FFF7FEFF 		bl	get_dispmode_digs
 1189              	.LVL95:
1950:src/keys.c    **** #else
 1190              		.loc 1 1950 29 view .LVU376
 1191 000e A97D     		ldrb	r1, [r5, #22]	@ zero_extendqisi2
 1192              	.LVL96:
1950:src/keys.c    **** #else
 1193              		.loc 1 1950 2 is_stmt 1 view .LVU377
 1194 0010 EE7F     		ldrb	r6, [r5, #31]	@ zero_extendqisi2
1950:src/keys.c    **** #else
 1195              		.loc 1 1950 130 is_stmt 0 view .LVU378
 1196 0012 11F0400C 		ands	ip, r1, #64
 1197 0016 01D0     		beq	.L120
1950:src/keys.c    **** #else
 1198              		.loc 1 1950 44 discriminator 2 view .LVU379
 1199 0018 502E     		cmp	r6, #80
 1200 001a 5DD0     		beq	.L147
 1201              	.LVL97:
 1202              	.L120:
1954:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1203              		.loc 1 1954 2 is_stmt 1 discriminator 8 view .LVU380
1955:src/keys.c    **** 	
 1204              		.loc 1 1955 34 is_stmt 0 discriminator 8 view .LVU381
 1205 001c 364A     		ldr	r2, .L152+4
1954:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1206              		.loc 1 1954 33 discriminator 8 view .LVU382
 1207 001e 2B89     		ldrh	r3, [r5, #8]
1955:src/keys.c    **** 	
 1208              		.loc 1 1955 34 discriminator 8 view .LVU383
 1209 0020 02EB0612 		add	r2, r2, r6, lsl #4
1954:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1210              		.loc 1 1954 41 discriminator 8 view .LVU384
 1211 0024 03EB8303 		add	r3, r3, r3, lsl #2
1955:src/keys.c    **** 	
 1212              		.loc 1 1955 34 discriminator 8 view .LVU385
 1213 0028 5779     		ldrb	r7, [r2, #5]	@ zero_extendqisi2
1955:src/keys.c    **** 	
 1214              		.loc 1 1955 39 discriminator 8 view .LVU386
 1215 002a B807     		lsls	r0, r7, #30
1954:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1216              		.loc 1 1954 46 discriminator 8 view .LVU387
 1217 002c 04EB4304 		add	r4, r4, r3, lsl #1
 1218              	.LVL98:
1955:src/keys.c    **** 	
 1219              		.loc 1 1955 2 is_stmt 1 discriminator 8 view .LVU388
1955:src/keys.c    **** 	
 1220              		.loc 1 1955 39 is_stmt 0 discriminator 8 view .LVU389
 1221 0030 C7F34003 		ubfx	r3, r7, #1, #1
ARM GAS  /tmp/ccgiIQCZ.s 			page 80


 1222 0034 2AD4     		bmi	.L146
1955:src/keys.c    **** 	
 1223              		.loc 1 1955 39 discriminator 2 view .LVU390
 1224 0036 95F91500 		ldrsb	r0, [r5, #21]
 1225 003a 0028     		cmp	r0, #0
 1226 003c 26DB     		blt	.L146
 1227              	.LVL99:
1957:src/keys.c    **** 		// Handle local registers and flags
 1228              		.loc 1 1957 2 is_stmt 1 view .LVU391
1957:src/keys.c    **** 		// Handle local registers and flags
 1229              		.loc 1 1957 5 is_stmt 0 view .LVU392
 1230 003e C907     		lsls	r1, r1, #31
 1231 0040 27D4     		bmi	.L122
1970:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
 1232              		.loc 1 1970 7 is_stmt 1 view .LVU393
1973:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1233              		.loc 1 1973 3 view .LVU394
1973:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1234              		.loc 1 1973 9 is_stmt 0 view .LVU395
 1235 0042 1079     		ldrb	r0, [r2, #4]	@ zero_extendqisi2
1973:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1236              		.loc 1 1973 7 view .LVU396
 1237 0044 0190     		str	r0, [sp, #4]
1974:src/keys.c    **** 			lim = RARG_IND - 1;
 1238              		.loc 1 1974 3 is_stmt 1 view .LVU397
1974:src/keys.c    **** 			lim = RARG_IND - 1;
 1239              		.loc 1 1974 6 is_stmt 0 view .LVU398
 1240 0046 7F28     		cmp	r0, #127
 1241 0048 4BDC     		bgt	.L148
 1242              	.LVL100:
 1243              	.L126:
1977:src/keys.c    **** 		return STATE_UNFINISHED;
 1244              		.loc 1 1977 2 is_stmt 1 view .LVU399
1977:src/keys.c    **** 		return STATE_UNFINISHED;
 1245              		.loc 1 1977 5 is_stmt 0 view .LVU400
 1246 004a 8442     		cmp	r4, r0
 1247 004c 3FDC     		bgt	.L131
 1248              	.L151:
1980:src/keys.c    **** 	++State2.numdigit;
 1249              		.loc 1 1980 2 is_stmt 1 view .LVU401
1981:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1250              		.loc 1 1981 2 is_stmt 0 view .LVU402
 1251 004e EF7A     		ldrb	r7, [r5, #11]	@ zero_extendqisi2
1980:src/keys.c    **** 	++State2.numdigit;
 1252              		.loc 1 1980 16 view .LVU403
 1253 0050 2C81     		strh	r4, [r5, #8]	@ movhi
1981:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1254              		.loc 1 1981 2 is_stmt 1 view .LVU404
 1255 0052 0137     		adds	r7, r7, #1
1982:src/keys.c    **** 		int result = arg_eval(val);
 1256              		.loc 1 1982 16 is_stmt 0 view .LVU405
 1257 0054 04EB8403 		add	r3, r4, r4, lsl #2
1981:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1258              		.loc 1 1981 2 view .LVU406
 1259 0058 FFB2     		uxtb	r7, r7
1982:src/keys.c    **** 		int result = arg_eval(val);
 1260              		.loc 1 1982 5 view .LVU407
ARM GAS  /tmp/ccgiIQCZ.s 			page 81


 1261 005a B0EB430F 		cmp	r0, r3, lsl #1
1981:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1262              		.loc 1 1981 2 view .LVU408
 1263 005e EF72     		strb	r7, [r5, #11]
1982:src/keys.c    **** 		int result = arg_eval(val);
 1264              		.loc 1 1982 2 is_stmt 1 view .LVU409
1982:src/keys.c    **** 		int result = arg_eval(val);
 1265              		.loc 1 1982 5 is_stmt 0 view .LVU410
 1266 0060 04DB     		blt	.L134
1982:src/keys.c    **** 		int result = arg_eval(val);
 1267              		.loc 1 1982 49 discriminator 1 view .LVU411
 1268 0062 3046     		mov	r0, r6
 1269 0064 FFF7FEFF 		bl	num_arg_digits
 1270              	.LVL101:
1982:src/keys.c    **** 		int result = arg_eval(val);
 1271              		.loc 1 1982 27 discriminator 1 view .LVU412
 1272 0068 8742     		cmp	r7, r0
 1273 006a 30DB     		blt	.L131
 1274              	.L134:
 1275              	.LBB338:
1983:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1276              		.loc 1 1983 3 is_stmt 1 view .LVU413
1983:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1277              		.loc 1 1983 16 is_stmt 0 view .LVU414
 1278 006c 2046     		mov	r0, r4
 1279 006e FFF7FEFF 		bl	arg_eval
 1280              	.LVL102:
1984:src/keys.c    **** 			--State2.numdigit;
 1281              		.loc 1 1984 3 is_stmt 1 view .LVU415
1984:src/keys.c    **** 			--State2.numdigit;
 1282              		.loc 1 1984 6 is_stmt 0 view .LVU416
 1283 0072 3328     		cmp	r0, #51
 1284 0074 08D1     		bne	.L117
1985:src/keys.c    **** 			State2.digval /= 10;
 1285              		.loc 1 1985 4 is_stmt 1 view .LVU417
1986:src/keys.c    **** 		}
 1286              		.loc 1 1986 18 is_stmt 0 view .LVU418
 1287 0076 2B89     		ldrh	r3, [r5, #8]
 1288 0078 2049     		ldr	r1, .L152+8
1985:src/keys.c    **** 			State2.digval /= 10;
 1289              		.loc 1 1985 4 view .LVU419
 1290 007a EA7A     		ldrb	r2, [r5, #11]	@ zero_extendqisi2
1986:src/keys.c    **** 		}
 1291              		.loc 1 1986 18 view .LVU420
 1292 007c A1FB0313 		umull	r1, r3, r1, r3
 1293 0080 DB08     		lsrs	r3, r3, #3
1985:src/keys.c    **** 			State2.digval /= 10;
 1294              		.loc 1 1985 4 view .LVU421
 1295 0082 013A     		subs	r2, r2, #1
1986:src/keys.c    **** 		}
 1296              		.loc 1 1986 18 view .LVU422
 1297 0084 2B81     		strh	r3, [r5, #8]	@ movhi
1985:src/keys.c    **** 			State2.digval /= 10;
 1298              		.loc 1 1985 4 view .LVU423
 1299 0086 EA72     		strb	r2, [r5, #11]
1986:src/keys.c    **** 		}
 1300              		.loc 1 1986 4 is_stmt 1 view .LVU424
ARM GAS  /tmp/ccgiIQCZ.s 			page 82


 1301              	.L117:
 1302              	.LBE338:
1991:src/keys.c    **** 
 1303              		.loc 1 1991 1 is_stmt 0 view .LVU425
 1304 0088 03B0     		add	sp, sp, #12
 1305              		.cfi_remember_state
 1306              		.cfi_def_cfa_offset 20
 1307              		@ sp needed
 1308 008a F0BD     		pop	{r4, r5, r6, r7, pc}
 1309              	.LVL103:
 1310              	.L146:
 1311              		.cfi_restore_state
1957:src/keys.c    **** 		// Handle local registers and flags
 1312              		.loc 1 1957 2 is_stmt 1 view .LVU426
1957:src/keys.c    **** 		// Handle local registers and flags
 1313              		.loc 1 1957 5 is_stmt 0 view .LVU427
 1314 008c C807     		lsls	r0, r1, #31
 1315 008e 17D5     		bpl	.L149
1955:src/keys.c    **** 	
 1316              		.loc 1 1955 39 view .LVU428
 1317 0090 0123     		movs	r3, #1
 1318              	.LVL104:
 1319              	.L122:
1959:src/keys.c    **** 		if (State2.runmode) {
 1320              		.loc 1 1959 3 is_stmt 1 view .LVU429
1959:src/keys.c    **** 		if (State2.runmode) {
 1321              		.loc 1 1959 7 is_stmt 0 view .LVU430
 1322 0092 0F27     		movs	r7, #15
 1323 0094 0197     		str	r7, [sp, #4]
1960:src/keys.c    **** 			if (LocalRegs == 0)
 1324              		.loc 1 1960 3 is_stmt 1 view .LVU431
1960:src/keys.c    **** 			if (LocalRegs == 0)
 1325              		.loc 1 1960 6 is_stmt 0 view .LVU432
 1326 0096 BCF1000F 		cmp	ip, #0
 1327 009a 1BD0     		beq	.L139
1961:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1328              		.loc 1 1961 4 is_stmt 1 view .LVU433
1961:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1329              		.loc 1 1961 18 is_stmt 0 view .LVU434
 1330 009c 184A     		ldr	r2, .L152+12
 1331 009e 1268     		ldr	r2, [r2]
 1332 00a0 B2F8DE27 		ldrh	r2, [r2, #2014]
 1333 00a4 22F01F02 		bic	r2, r2, #31
1961:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1334              		.loc 1 1961 7 view .LVU435
 1335 00a8 92B2     		uxth	r2, r2
 1336 00aa 82B1     		cbz	r2, .L131
1963:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
 1337              		.loc 1 1963 4 is_stmt 1 view .LVU436
1963:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
 1338              		.loc 1 1963 7 is_stmt 0 view .LVU437
 1339 00ac 93B1     		cbz	r3, .L139
1964:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1340              		.loc 1 1964 5 is_stmt 1 view .LVU438
1964:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1341              		.loc 1 1964 11 is_stmt 0 view .LVU439
 1342 00ae F0B2     		uxtb	r0, r6
ARM GAS  /tmp/ccgiIQCZ.s 			page 83


 1343 00b0 FFF7FEFF 		bl	local_regs_rarg
 1344              	.LVL105:
1964:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1345              		.loc 1 1964 45 view .LVU440
 1346 00b4 0138     		subs	r0, r0, #1
1965:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1347              		.loc 1 1965 5 is_stmt 1 view .LVU441
1965:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1348              		.loc 1 1965 8 is_stmt 0 view .LVU442
 1349 00b6 0F28     		cmp	r0, #15
 1350 00b8 06DD     		ble	.L145
1966:src/keys.c    **** 			}
 1351              		.loc 1 1966 6 is_stmt 1 view .LVU443
1966:src/keys.c    **** 			}
 1352              		.loc 1 1966 10 is_stmt 0 view .LVU444
 1353 00ba 0197     		str	r7, [sp, #4]
 1354 00bc 3846     		mov	r0, r7
 1355 00be C4E7     		b	.L126
 1356              	.LVL106:
 1357              	.L149:
1971:src/keys.c    **** 	else {
 1358              		.loc 1 1971 3 is_stmt 1 view .LVU445
1971:src/keys.c    **** 	else {
 1359              		.loc 1 1971 65 is_stmt 0 view .LVU446
 1360 00c0 BCF1000F 		cmp	ip, #0
 1361 00c4 11D1     		bne	.L150
 1362 00c6 6320     		movs	r0, #99
 1363              	.LVL107:
 1364              	.L145:
1977:src/keys.c    **** 		return STATE_UNFINISHED;
 1365              		.loc 1 1977 5 view .LVU447
 1366 00c8 8442     		cmp	r4, r0
1975:src/keys.c    **** 	}
 1367              		.loc 1 1975 8 view .LVU448
 1368 00ca 0190     		str	r0, [sp, #4]
1977:src/keys.c    **** 		return STATE_UNFINISHED;
 1369              		.loc 1 1977 2 is_stmt 1 view .LVU449
1977:src/keys.c    **** 		return STATE_UNFINISHED;
 1370              		.loc 1 1977 5 is_stmt 0 view .LVU450
 1371 00cc BFDD     		ble	.L151
 1372              	.L131:
1962:src/keys.c    **** 			if (is_reg) {
 1373              		.loc 1 1962 12 view .LVU451
 1374 00ce 3320     		movs	r0, #51
1991:src/keys.c    **** 
 1375              		.loc 1 1991 1 view .LVU452
 1376 00d0 03B0     		add	sp, sp, #12
 1377              		.cfi_remember_state
 1378              		.cfi_def_cfa_offset 20
 1379              		@ sp needed
 1380 00d2 F0BD     		pop	{r4, r5, r6, r7, pc}
 1381              	.LVL108:
 1382              	.L139:
 1383              		.cfi_restore_state
1991:src/keys.c    **** 
 1384              		.loc 1 1991 1 view .LVU453
 1385 00d4 3846     		mov	r0, r7
ARM GAS  /tmp/ccgiIQCZ.s 			page 84


 1386 00d6 B8E7     		b	.L126
 1387              	.LVL109:
 1388              	.L147:
1950:src/keys.c    **** #else
 1389              		.loc 1 1950 93 discriminator 4 view .LVU454
 1390 00d8 0438     		subs	r0, r0, #4
 1391              	.LVL110:
1950:src/keys.c    **** #else
 1392              		.loc 1 1950 68 discriminator 4 view .LVU455
 1393 00da 0128     		cmp	r0, #1
1950:src/keys.c    **** #else
 1394              		.loc 1 1950 130 discriminator 4 view .LVU456
 1395 00dc 98BF     		it	ls
 1396 00de 9C26     		movls	r6, #156
 1397 00e0 9CE7     		b	.L120
 1398              	.LVL111:
 1399              	.L148:
1974:src/keys.c    **** 			lim = RARG_IND - 1;
 1400              		.loc 1 1974 23 discriminator 1 view .LVU457
 1401 00e2 FB07     		lsls	r3, r7, #31
 1402 00e4 B1D5     		bpl	.L126
1975:src/keys.c    **** 	}
 1403              		.loc 1 1975 4 is_stmt 1 view .LVU458
1975:src/keys.c    **** 	}
 1404              		.loc 1 1975 8 is_stmt 0 view .LVU459
 1405 00e6 7F20     		movs	r0, #127
 1406 00e8 EEE7     		b	.L145
 1407              	.LVL112:
 1408              	.L150:
1971:src/keys.c    **** 	else {
 1409              		.loc 1 1971 26 discriminator 1 view .LVU460
 1410 00ea F0B2     		uxtb	r0, r6
 1411 00ec FFF7FEFF 		bl	global_regs_rarg
 1412              	.LVL113:
1971:src/keys.c    **** 	else {
 1413              		.loc 1 1971 61 discriminator 1 view .LVU461
 1414 00f0 0138     		subs	r0, r0, #1
 1415 00f2 E9E7     		b	.L145
 1416              	.L153:
 1417              		.align	2
 1418              	.L152:
 1419 00f4 00000000 		.word	StateWhileOn
 1420 00f8 00000000 		.word	argcmds
 1421 00fc CDCCCCCC 		.word	-858993459
 1422 0100 00000000 		.word	main_ram
 1423              		.cfi_endproc
 1424              	.LFE36:
 1426              		.section	.text.process_arg_shuffle,"ax",%progbits
 1427              		.align	1
 1428              		.p2align 2,,3
 1429              		.syntax unified
 1430              		.thumb
 1431              		.thumb_func
 1432              		.fpu fpv4-sp-d16
 1434              	process_arg_shuffle:
 1435              	.LVL114:
 1436              	.LFB41:
ARM GAS  /tmp/ccgiIQCZ.s 			page 85


2058:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1437              		.loc 1 2058 39 is_stmt 1 view -0
 1438              		.cfi_startproc
 1439              		@ args = 0, pretend = 0, frame = 0
 1440              		@ frame_needed = 0, uses_anonymous_args = 0
 1441              		@ link register save eliminated.
2059:src/keys.c    **** 	if (State2.numdigit < 4)
 1442              		.loc 1 2059 2 view .LVU463
2058:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1443              		.loc 1 2058 39 is_stmt 0 view .LVU464
 1444 0000 10B4     		push	{r4}
 1445              		.cfi_def_cfa_offset 4
 1446              		.cfi_offset 4, -4
2059:src/keys.c    **** 	if (State2.numdigit < 4)
 1447              		.loc 1 2059 31 view .LVU465
 1448 0002 0A4A     		ldr	r2, .L157
 1449 0004 D37A     		ldrb	r3, [r2, #11]	@ zero_extendqisi2
2059:src/keys.c    **** 	if (State2.numdigit < 4)
 1450              		.loc 1 2059 16 view .LVU466
 1451 0006 1189     		ldrh	r1, [r2, #8]
2059:src/keys.c    **** 	if (State2.numdigit < 4)
 1452              		.loc 1 2059 43 view .LVU467
 1453 0008 5C00     		lsls	r4, r3, #1
2059:src/keys.c    **** 	if (State2.numdigit < 4)
 1454              		.loc 1 2059 21 view .LVU468
 1455 000a A040     		lsls	r0, r0, r4
 1456              	.LVL115:
2059:src/keys.c    **** 	if (State2.numdigit < 4)
 1457              		.loc 1 2059 40 view .LVU469
 1458 000c 0133     		adds	r3, r3, #1
 1459 000e DBB2     		uxtb	r3, r3
2059:src/keys.c    **** 	if (State2.numdigit < 4)
 1460              		.loc 1 2059 16 view .LVU470
 1461 0010 0844     		add	r0, r0, r1
 1462 0012 80B2     		uxth	r0, r0
2060:src/keys.c    **** 		return STATE_UNFINISHED;
 1463              		.loc 1 2060 5 view .LVU471
 1464 0014 032B     		cmp	r3, #3
2059:src/keys.c    **** 	if (State2.numdigit < 4)
 1465              		.loc 1 2059 40 view .LVU472
 1466 0016 D372     		strb	r3, [r2, #11]
2059:src/keys.c    **** 	if (State2.numdigit < 4)
 1467              		.loc 1 2059 16 view .LVU473
 1468 0018 1081     		strh	r0, [r2, #8]	@ movhi
2060:src/keys.c    **** 		return STATE_UNFINISHED;
 1469              		.loc 1 2060 2 is_stmt 1 view .LVU474
2060:src/keys.c    **** 		return STATE_UNFINISHED;
 1470              		.loc 1 2060 5 is_stmt 0 view .LVU475
 1471 001a 03D9     		bls	.L155
2062:src/keys.c    **** }
 1472              		.loc 1 2062 2 is_stmt 1 view .LVU476
2063:src/keys.c    **** 
 1473              		.loc 1 2063 1 is_stmt 0 view .LVU477
 1474 001c 5DF8044B 		ldr	r4, [sp], #4
 1475              		.cfi_remember_state
 1476              		.cfi_restore 4
 1477              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccgiIQCZ.s 			page 86


2062:src/keys.c    **** }
 1478              		.loc 1 2062 9 view .LVU478
 1479 0020 FFF7FEBF 		b	arg_eval
 1480              	.LVL116:
 1481              	.L155:
 1482              		.cfi_restore_state
2063:src/keys.c    **** 
 1483              		.loc 1 2063 1 view .LVU479
 1484 0024 3320     		movs	r0, #51
 1485 0026 5DF8044B 		ldr	r4, [sp], #4
 1486              		.cfi_restore 4
 1487              		.cfi_def_cfa_offset 0
 1488 002a 7047     		bx	lr
 1489              	.L158:
 1490              		.align	2
 1491              	.L157:
 1492 002c 00000000 		.word	StateWhileOn
 1493              		.cfi_endproc
 1494              	.LFE41:
 1496              		.section	.text.process_h_shifted,"ax",%progbits
 1497              		.align	1
 1498              		.p2align 2,,3
 1499              		.syntax unified
 1500              		.thumb
 1501              		.thumb_func
 1502              		.fpu fpv4-sp-d16
 1504              	process_h_shifted:
 1505              	.LVL117:
 1506              	.LFB21:
1102:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1507              		.loc 1 1102 47 is_stmt 1 view -0
 1508              		.cfi_startproc
 1509              		@ args = 0, pretend = 0, frame = 0
 1510              		@ frame_needed = 0, uses_anonymous_args = 0
1105:src/keys.c    **** 		// Row 1
 1511              		.loc 1 1105 2 view .LVU481
1156:src/keys.c    **** 	int op = op_map[lc];
 1512              		.loc 1 1156 2 view .LVU482
 1513              	.LBB339:
 1514              	.LBB340:
 158:src/keys.c    **** }
 1515              		.loc 1 158 23 is_stmt 0 view .LVU483
 1516 0000 314A     		ldr	r2, .L190
 1517              	.LBE340:
 1518              	.LBE339:
1157:src/keys.c    **** 	reset_shift();
 1519              		.loc 1 1157 17 view .LVU484
 1520 0002 324B     		ldr	r3, .L190+4
 1521              	.LBB343:
 1522              	.LBB341:
 158:src/keys.c    **** }
 1523              		.loc 1 158 23 view .LVU485
 1524 0004 125C     		ldrb	r2, [r2, r0]	@ zero_extendqisi2
 1525              	.LBE341:
 1526              	.LBE343:
1102:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1527              		.loc 1 1102 47 view .LVU486
ARM GAS  /tmp/ccgiIQCZ.s 			page 87


 1528 0006 70B5     		push	{r4, r5, r6, lr}
 1529              		.cfi_def_cfa_offset 16
 1530              		.cfi_offset 4, -16
 1531              		.cfi_offset 5, -12
 1532              		.cfi_offset 6, -8
 1533              		.cfi_offset 14, -4
1102:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1534              		.loc 1 1102 47 view .LVU487
 1535 0008 0446     		mov	r4, r0
 1536              	.LVL118:
 1537              	.LBB344:
 1538              	.LBI339:
 146:src/keys.c    **** {
 1539              		.loc 1 146 12 is_stmt 1 view .LVU488
 1540              	.LBB342:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 1541              		.loc 1 148 2 view .LVU489
 158:src/keys.c    **** }
 1542              		.loc 1 158 2 view .LVU490
 158:src/keys.c    **** }
 1543              		.loc 1 158 2 is_stmt 0 view .LVU491
 1544              	.LBE342:
 1545              	.LBE344:
1157:src/keys.c    **** 	reset_shift();
 1546              		.loc 1 1157 2 is_stmt 1 view .LVU492
 1547              	.LBB345:
 1548              	.LBB346:
 1549              	.LBB347:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1550              		.loc 1 106 16 is_stmt 0 view .LVU493
 1551 000a 314E     		ldr	r6, .L190+8
 1552              	.LBE347:
 1553              	.LBE346:
 1554              	.LBE345:
1157:src/keys.c    **** 	reset_shift();
 1555              		.loc 1 1157 17 view .LVU494
 1556 000c 33F81250 		ldrh	r5, [r3, r2, lsl #1]
 1557              	.LVL119:
1158:src/keys.c    **** 
 1558              		.loc 1 1158 2 is_stmt 1 view .LVU495
 1559              	.LBB354:
 1560              	.LBI345:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 1561              		.loc 1 114 13 view .LVU496
 1562              	.LBE354:
 115:src/keys.c    **** }
 1563              		.loc 1 115 2 view .LVU497
 1564              	.LBB355:
 1565              	.LBB352:
 1566              	.LBI346:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 1567              		.loc 1 104 20 view .LVU498
 1568              	.LBB350:
 105:src/keys.c    **** 	State2.shifts = shift;
 1569              		.loc 1 105 2 view .LVU499
 1570              	.LBB348:
 1571              	.LBI348:
ARM GAS  /tmp/ccgiIQCZ.s 			page 88


  96:src/keys.c    **** 	enum shifts s = shift_down();
 1572              		.loc 1 96 13 view .LVU500
 1573              	.LBB349:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1574              		.loc 1 97 2 view .LVU501
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1575              		.loc 1 97 18 is_stmt 0 view .LVU502
 1576 0010 FFF7FEFF 		bl	shift_down
 1577              	.LVL120:
  98:src/keys.c    **** }
 1578              		.loc 1 98 2 is_stmt 1 view .LVU503
 1579              	.LBE349:
 1580              	.LBE348:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1581              		.loc 1 106 2 view .LVU504
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1582              		.loc 1 106 16 is_stmt 0 view .LVU505
 1583 0014 0023     		movs	r3, #0
 1584              	.LBE350:
 1585              	.LBE352:
 1586              	.LBE355:
1161:src/keys.c    **** 	case K62:
 1587              		.loc 1 1161 2 view .LVU506
 1588 0016 262C     		cmp	r4, #38
 1589              	.LBB356:
 1590              	.LBB353:
 1591              	.LBB351:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1592              		.loc 1 106 16 view .LVU507
 1593 0018 3374     		strb	r3, [r6, #16]
 108:src/keys.c    **** }
 1594              		.loc 1 108 2 is_stmt 1 view .LVU508
 1595              	.LVL121:
 108:src/keys.c    **** }
 1596              		.loc 1 108 2 is_stmt 0 view .LVU509
 1597              	.LBE351:
 1598              	.LBE353:
 1599              	.LBE356:
1161:src/keys.c    **** 	case K62:
 1600              		.loc 1 1161 2 is_stmt 1 view .LVU510
 1601 001a 27D0     		beq	.L160
 1602 001c 272C     		cmp	r4, #39
 1603 001e 19D1     		bne	.L162
1174:src/keys.c    **** 			return STATE_UNFINISHED;
 1604              		.loc 1 1174 3 view .LVU511
1174:src/keys.c    **** 			return STATE_UNFINISHED;
 1605              		.loc 1 1174 7 is_stmt 0 view .LVU512
 1606 0020 FFF7FEFF 		bl	is_bad_cmdline
 1607              	.LVL122:
1174:src/keys.c    **** 			return STATE_UNFINISHED;
 1608              		.loc 1 1174 6 view .LVU513
 1609 0024 00BB     		cbnz	r0, .L172
1176:src/keys.c    **** 		process_cmdline_set_lift();
 1610              		.loc 1 1176 3 is_stmt 1 view .LVU514
1176:src/keys.c    **** 		process_cmdline_set_lift();
 1611              		.loc 1 1176 30 is_stmt 0 view .LVU515
 1612 0026 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
ARM GAS  /tmp/ccgiIQCZ.s 			page 89


 1613 0028 C3F38012 		ubfx	r2, r3, #6, #1
1176:src/keys.c    **** 		process_cmdline_set_lift();
 1614              		.loc 1 1176 22 view .LVU516
 1615 002c C2F10102 		rsb	r2, r2, #1
1176:src/keys.c    **** 		process_cmdline_set_lift();
 1616              		.loc 1 1176 18 view .LVU517
 1617 0030 62F38613 		bfi	r3, r2, #6, #1
 1618 0034 B375     		strb	r3, [r6, #22]
1177:src/keys.c    **** 		update_program_bounds(1);
 1619              		.loc 1 1177 3 is_stmt 1 view .LVU518
 1620 0036 FFF7FEFF 		bl	process_cmdline_set_lift
 1621              	.LVL123:
1178:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
 1622              		.loc 1 1178 3 view .LVU519
 1623 003a 0120     		movs	r0, #1
 1624 003c FFF7FEFF 		bl	update_program_bounds
 1625              	.LVL124:
1179:src/keys.c    **** 			set_pc(0);
 1626              		.loc 1 1179 3 view .LVU520
1179:src/keys.c    **** 			set_pc(0);
 1627              		.loc 1 1179 7 is_stmt 0 view .LVU521
 1628 0040 B07D     		ldrb	r0, [r6, #22]	@ zero_extendqisi2
1179:src/keys.c    **** 			set_pc(0);
 1629              		.loc 1 1179 6 view .LVU522
 1630 0042 10F04000 		ands	r0, r0, #64
 1631 0046 05D1     		bne	.L162
1179:src/keys.c    **** 			set_pc(0);
 1632              		.loc 1 1179 27 discriminator 1 view .LVU523
 1633 0048 224B     		ldr	r3, .L190+12
 1634 004a 1B68     		ldr	r3, [r3]
1179:src/keys.c    **** 			set_pc(0);
 1635              		.loc 1 1179 24 discriminator 1 view .LVU524
 1636 004c B3F8E027 		ldrh	r2, [r3, #2016]
 1637 0050 012A     		cmp	r2, #1
 1638 0052 32D0     		beq	.L186
 1639              	.L162:
1187:src/keys.c    **** 		if (op & _RARG) {
 1640              		.loc 1 1187 2 is_stmt 1 view .LVU525
1187:src/keys.c    **** 		if (op & _RARG) {
 1641              		.loc 1 1187 5 is_stmt 0 view .LVU526
 1642 0054 332D     		cmp	r5, #51
 1643 0056 07D0     		beq	.L172
 1644              	.LVL125:
1188:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1645              		.loc 1 1188 3 is_stmt 1 view .LVU527
1188:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1646              		.loc 1 1188 6 is_stmt 0 view .LVU528
 1647 0058 2804     		lsls	r0, r5, #16
 1648 005a 14D5     		bpl	.L187
 1649              	.L170:
1189:src/keys.c    **** 			op = STATE_UNFINISHED;
 1650              		.loc 1 1189 4 is_stmt 1 view .LVU529
 1651              	.LVL126:
 1652              	.LBB357:
 1653              	.LBI357:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 1654              		.loc 1 552 13 view .LVU530
ARM GAS  /tmp/ccgiIQCZ.s 			page 90


 1655              	.LBB358:
 553:src/keys.c    **** 		return;
 1656              		.loc 1 553 2 view .LVU531
 553:src/keys.c    **** 		return;
 1657              		.loc 1 553 6 is_stmt 0 view .LVU532
 1658 005c FFF7FEFF 		bl	is_bad_cmdline
 1659              	.LVL127:
 553:src/keys.c    **** 		return;
 1660              		.loc 1 553 5 view .LVU533
 1661 0060 10B9     		cbnz	r0, .L172
 1662 0062 E8B2     		uxtb	r0, r5
 1663 0064 FFF7FEFF 		bl	init_arg.part.0
 1664              	.LVL128:
 1665              	.L172:
 553:src/keys.c    **** 		return;
 1666              		.loc 1 553 5 view .LVU534
 1667              	.LBE358:
 1668              	.LBE357:
1193:src/keys.c    **** #undef _RARG
 1669              		.loc 1 1193 2 is_stmt 1 view .LVU535
1102:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1670              		.loc 1 1102 47 is_stmt 0 view .LVU536
 1671 0068 3320     		movs	r0, #51
1196:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 1672              		.loc 1 1196 1 view .LVU537
 1673 006a 70BD     		pop	{r4, r5, r6, pc}
 1674              	.LVL129:
 1675              	.L160:
1163:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 1676              		.loc 1 1163 3 is_stmt 1 view .LVU538
1163:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 1677              		.loc 1 1163 7 is_stmt 0 view .LVU539
 1678 006c 194B     		ldr	r3, .L190+12
 1679 006e 1B68     		ldr	r3, [r3]
 1680 0070 93F8E827 		ldrb	r2, [r3, #2024]	@ zero_extendqisi2
1163:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 1681              		.loc 1 1163 6 view .LVU540
 1682 0074 D607     		lsls	r6, r2, #31
 1683 0076 0FD4     		bmi	.L188
1169:src/keys.c    **** #endif
 1684              		.loc 1 1169 4 is_stmt 1 view .LVU541
1169:src/keys.c    **** #endif
 1685              		.loc 1 1169 8 is_stmt 0 view .LVU542
 1686 0078 93F8E737 		ldrb	r3, [r3, #2023]	@ zero_extendqisi2
1169:src/keys.c    **** #endif
 1687              		.loc 1 1169 7 view .LVU543
 1688 007c 9C06     		lsls	r4, r3, #26
 1689 007e 14D5     		bpl	.L189
 1690 0080 40F24F10 		movw	r0, #335
 1691              	.LVL130:
1196:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 1692              		.loc 1 1196 1 view .LVU544
 1693 0084 70BD     		pop	{r4, r5, r6, pc}
 1694              	.L187:
 1695              	.LVL131:
1193:src/keys.c    **** #undef _RARG
 1696              		.loc 1 1193 2 is_stmt 1 view .LVU545
ARM GAS  /tmp/ccgiIQCZ.s 			page 91


1193:src/keys.c    **** #undef _RARG
 1697              		.loc 1 1193 9 is_stmt 0 view .LVU546
 1698 0086 134B     		ldr	r3, .L190+12
 1699 0088 1B68     		ldr	r3, [r3]
 1700 008a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1193:src/keys.c    **** #undef _RARG
 1701              		.loc 1 1193 57 view .LVU547
 1702 008e D907     		lsls	r1, r3, #31
 1703 0090 10D4     		bmi	.L171
 1704              	.LVL132:
 1705              	.L174:
1193:src/keys.c    **** #undef _RARG
 1706              		.loc 1 1193 57 view .LVU548
 1707 0092 25F48040 		bic	r0, r5, #16384
1196:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 1708              		.loc 1 1196 1 view .LVU549
 1709 0096 70BD     		pop	{r4, r5, r6, pc}
 1710              	.LVL133:
 1711              	.L188:
1164:src/keys.c    **** 		else
 1712              		.loc 1 1164 4 is_stmt 1 view .LVU550
1164:src/keys.c    **** 		else
 1713              		.loc 1 1164 57 is_stmt 0 view .LVU551
 1714 0098 93F9E737 		ldrsb	r3, [r3, #2023]
 1715 009c 002B     		cmp	r3, #0
 1716 009e 40F25315 		movw	r5, #339
 1717              	.LVL134:
1164:src/keys.c    **** 		else
 1718              		.loc 1 1164 57 view .LVU552
 1719 00a2 A8BF     		it	ge
 1720 00a4 4FF4AA75 		movge	r5, #340
 1721 00a8 F3E7     		b	.L174
 1722              	.LVL135:
 1723              	.L189:
1187:src/keys.c    **** 		if (op & _RARG) {
 1724              		.loc 1 1187 2 is_stmt 1 view .LVU553
1187:src/keys.c    **** 		if (op & _RARG) {
 1725              		.loc 1 1187 5 is_stmt 0 view .LVU554
 1726 00aa 332D     		cmp	r5, #51
 1727 00ac DCD0     		beq	.L172
 1728              	.LVL136:
1188:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1729              		.loc 1 1188 3 is_stmt 1 view .LVU555
1188:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1730              		.loc 1 1188 6 is_stmt 0 view .LVU556
 1731 00ae 2B04     		lsls	r3, r5, #16
 1732 00b0 D4D4     		bmi	.L170
 1733 00b2 EEE7     		b	.L174
 1734              	.LVL137:
 1735              	.L171:
1193:src/keys.c    **** #undef _RARG
 1736              		.loc 1 1193 21 view .LVU557
 1737 00b4 6A04     		lsls	r2, r5, #17
 1738 00b6 D7D4     		bmi	.L172
 1739 00b8 EBE7     		b	.L174
 1740              	.L186:
1179:src/keys.c    **** 			set_pc(0);
ARM GAS  /tmp/ccgiIQCZ.s 			page 92


 1741              		.loc 1 1179 43 discriminator 2 view .LVU558
 1742 00ba B3F8EE37 		ldrh	r3, [r3, #2030]
 1743 00be 012B     		cmp	r3, #1
 1744 00c0 C8D1     		bne	.L162
1180:src/keys.c    **** 		break;
 1745              		.loc 1 1180 4 is_stmt 1 view .LVU559
 1746 00c2 FFF7FEFF 		bl	set_pc
 1747              	.LVL138:
 1748 00c6 C5E7     		b	.L162
 1749              	.L191:
 1750              		.align	2
 1751              	.L190:
 1752 00c8 00000000 		.word	.LANCHOR1
 1753 00cc 00000000 		.word	.LANCHOR0
 1754 00d0 00000000 		.word	StateWhileOn
 1755 00d4 00000000 		.word	main_ram
 1756              		.cfi_endproc
 1757              	.LFE21:
 1759              		.section	.text.intltr,"ax",%progbits
 1760              		.align	1
 1761              		.p2align 2,,3
 1762              		.syntax unified
 1763              		.thumb
 1764              		.thumb_func
 1765              		.fpu fpv4-sp-d16
 1767              	intltr:
 1768              	.LVL139:
 1769              	.LFB18:
 763:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1770              		.loc 1 763 26 view -0
 1771              		.cfi_startproc
 1772              		@ args = 0, pretend = 0, frame = 0
 1773              		@ frame_needed = 0, uses_anonymous_args = 0
 764:src/keys.c    **** }
 1774              		.loc 1 764 2 view .LVU561
 764:src/keys.c    **** }
 1775              		.loc 1 764 10 is_stmt 0 view .LVU562
 1776 0000 0B4B     		ldr	r3, .L201
 1777 0002 1B68     		ldr	r3, [r3]
 1778 0004 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 764:src/keys.c    **** }
 1779              		.loc 1 764 22 view .LVU563
 1780 0008 13F00103 		ands	r3, r3, #1
 1781 000c 05D0     		beq	.L194
 764:src/keys.c    **** }
 1782              		.loc 1 764 26 discriminator 1 view .LVU564
 1783 000e 094B     		ldr	r3, .L201+4
 1784 0010 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 764:src/keys.c    **** }
 1785              		.loc 1 764 22 discriminator 1 view .LVU565
 1786 0012 5B06     		lsls	r3, r3, #25
 1787 0014 03D4     		bmi	.L200
 764:src/keys.c    **** }
 1788              		.loc 1 764 22 view .LVU566
 1789 0016 0120     		movs	r0, #1
 1790              	.LVL140:
 765:src/keys.c    **** 
ARM GAS  /tmp/ccgiIQCZ.s 			page 93


 1791              		.loc 1 765 1 view .LVU567
 1792 0018 7047     		bx	lr
 1793              	.LVL141:
 1794              	.L194:
 764:src/keys.c    **** }
 1795              		.loc 1 764 22 view .LVU568
 1796 001a 1846     		mov	r0, r3
 1797              	.LVL142:
 764:src/keys.c    **** }
 1798              		.loc 1 764 22 view .LVU569
 1799 001c 7047     		bx	lr
 1800              	.LVL143:
 1801              	.L200:
 763:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1802              		.loc 1 763 26 view .LVU570
 1803 001e 10B5     		push	{r4, lr}
 1804              		.cfi_def_cfa_offset 8
 1805              		.cfi_offset 4, -8
 1806              		.cfi_offset 14, -4
 1807 0020 0446     		mov	r4, r0
 1808              	.LVL144:
 1809              	.LBB361:
 1810              	.LBI361:
 763:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1811              		.loc 1 763 12 is_stmt 1 view .LVU571
 1812              	.LBB362:
 764:src/keys.c    **** }
 1813              		.loc 1 764 52 is_stmt 0 view .LVU572
 1814 0022 FFF7FEFF 		bl	int_base
 1815              	.LVL145:
 764:src/keys.c    **** }
 1816              		.loc 1 764 43 view .LVU573
 1817 0026 8442     		cmp	r4, r0
 1818 0028 ACBF     		ite	ge
 1819 002a 0020     		movge	r0, #0
 1820 002c 0120     		movlt	r0, #1
 1821              	.LBE362:
 1822              	.LBE361:
 765:src/keys.c    **** 
 1823              		.loc 1 765 1 view .LVU574
 1824 002e 10BD     		pop	{r4, pc}
 1825              	.LVL146:
 1826              	.L202:
 765:src/keys.c    **** 
 1827              		.loc 1 765 1 view .LVU575
 1828              		.align	2
 1829              	.L201:
 1830 0030 00000000 		.word	main_ram
 1831 0034 00000000 		.word	StateWhileOn
 1832              		.cfi_endproc
 1833              	.LFE18:
 1835              		.section	.text.process_normal,"ax",%progbits
 1836              		.align	1
 1837              		.p2align 2,,3
 1838              		.syntax unified
 1839              		.thumb
 1840              		.thumb_func
ARM GAS  /tmp/ccgiIQCZ.s 			page 94


 1841              		.fpu fpv4-sp-d16
 1843              	process_normal:
 1844              	.LVL147:
 1845              	.LFB19:
 771:src/keys.c    **** 	static const unsigned short int op_map[] = {
 1846              		.loc 1 771 1 is_stmt 1 view -0
 1847              		.cfi_startproc
 1848              		@ args = 0, pretend = 0, frame = 0
 1849              		@ frame_needed = 0, uses_anonymous_args = 0
 772:src/keys.c    **** 		// Row 1
 1850              		.loc 1 772 2 view .LVU577
 819:src/keys.c    **** 	int op = op_map[lc];
 1851              		.loc 1 819 2 view .LVU578
 1852              	.LBB363:
 1853              	.LBI363:
 146:src/keys.c    **** {
 1854              		.loc 1 146 12 view .LVU579
 1855              	.LBB364:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 1856              		.loc 1 148 2 view .LVU580
 158:src/keys.c    **** }
 1857              		.loc 1 158 2 view .LVU581
 158:src/keys.c    **** }
 1858              		.loc 1 158 2 is_stmt 0 view .LVU582
 1859              	.LBE364:
 1860              	.LBE363:
 820:src/keys.c    **** 	
 1861              		.loc 1 820 2 is_stmt 1 view .LVU583
 825:src/keys.c    **** 	  switch (c) {
 1862              		.loc 1 825 6 is_stmt 0 view .LVU584
 1863 0000 984B     		ldr	r3, .L234
 1864              	.LBB367:
 1865              	.LBB365:
 158:src/keys.c    **** }
 1866              		.loc 1 158 23 view .LVU585
 1867 0002 994A     		ldr	r2, .L234+4
 1868              	.LBE365:
 1869              	.LBE367:
 825:src/keys.c    **** 	  switch (c) {
 1870              		.loc 1 825 6 view .LVU586
 1871 0004 1B68     		ldr	r3, [r3]
 1872              	.LBB368:
 1873              	.LBB366:
 158:src/keys.c    **** }
 1874              		.loc 1 158 23 view .LVU587
 1875 0006 115C     		ldrb	r1, [r2, r0]	@ zero_extendqisi2
 1876              	.LBE366:
 1877              	.LBE368:
 820:src/keys.c    **** 	
 1878              		.loc 1 820 17 view .LVU588
 1879 0008 984A     		ldr	r2, .L234+8
 825:src/keys.c    **** 	  switch (c) {
 1880              		.loc 1 825 6 view .LVU589
 1881 000a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 771:src/keys.c    **** 	static const unsigned short int op_map[] = {
 1882              		.loc 1 771 1 view .LVU590
 1883 000e 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccgiIQCZ.s 			page 95


 1884              		.cfi_def_cfa_offset 8
 1885              		.cfi_offset 4, -8
 1886              		.cfi_offset 14, -4
 820:src/keys.c    **** 	
 1887              		.loc 1 820 17 view .LVU591
 1888 0010 32F81140 		ldrh	r4, [r2, r1, lsl #1]
 825:src/keys.c    **** 	  switch (c) {
 1889              		.loc 1 825 5 view .LVU592
 1890 0014 DB07     		lsls	r3, r3, #31
 820:src/keys.c    **** 	
 1891              		.loc 1 820 6 view .LVU593
 1892 0016 2246     		mov	r2, r4
 1893              	.LVL148:
 824:src/keys.c    **** 	if (UState.intm) {
 1894              		.loc 1 824 2 is_stmt 1 view .LVU594
 825:src/keys.c    **** 	  switch (c) {
 1895              		.loc 1 825 2 view .LVU595
 825:src/keys.c    **** 	  switch (c) {
 1896              		.loc 1 825 5 is_stmt 0 view .LVU596
 1897 0018 42D4     		bmi	.L230
 856:src/keys.c    **** 	  }
 1898              		.loc 1 856 12 is_stmt 1 view .LVU597
 861:src/keys.c    **** #ifdef DM42
 1899              		.loc 1 861 2 view .LVU598
 1900 001a 2D28     		cmp	r0, #45
 1901 001c 3ED8     		bhi	.L203
 1902 001e DFE810F0 		tbh	[pc, r0, lsl #1]
 1903              	.L222:
 1904 0022 0801     		.2byte	(.L218-.L222)/2
 1905 0024 0E01     		.2byte	(.L219-.L222)/2
 1906 0026 3D00     		.2byte	(.L203-.L222)/2
 1907 0028 CF00     		.2byte	(.L217-.L222)/2
 1908 002a 3D00     		.2byte	(.L203-.L222)/2
 1909 002c 3D00     		.2byte	(.L203-.L222)/2
 1910 002e 3400     		.2byte	(.L212-.L222)/2
 1911 0030 3400     		.2byte	(.L212-.L222)/2
 1912 0032 3D00     		.2byte	(.L203-.L222)/2
 1913 0034 3D00     		.2byte	(.L203-.L222)/2
 1914 0036 3D00     		.2byte	(.L203-.L222)/2
 1915 0038 3D00     		.2byte	(.L203-.L222)/2
 1916 003a 3D00     		.2byte	(.L203-.L222)/2
 1917 003c 3D00     		.2byte	(.L203-.L222)/2
 1918 003e 3D00     		.2byte	(.L203-.L222)/2
 1919 0040 3D00     		.2byte	(.L203-.L222)/2
 1920 0042 E900     		.2byte	(.L216-.L222)/2
 1921 0044 3D00     		.2byte	(.L203-.L222)/2
 1922 0046 3400     		.2byte	(.L212-.L222)/2
 1923 0048 3D00     		.2byte	(.L203-.L222)/2
 1924 004a 3D00     		.2byte	(.L203-.L222)/2
 1925 004c 3D00     		.2byte	(.L203-.L222)/2
 1926 004e 3D00     		.2byte	(.L203-.L222)/2
 1927 0050 3D00     		.2byte	(.L203-.L222)/2
 1928 0052 3D00     		.2byte	(.L203-.L222)/2
 1929 0054 3D00     		.2byte	(.L203-.L222)/2
 1930 0056 3D00     		.2byte	(.L203-.L222)/2
 1931 0058 3D00     		.2byte	(.L203-.L222)/2
 1932 005a 3D00     		.2byte	(.L203-.L222)/2
ARM GAS  /tmp/ccgiIQCZ.s 			page 96


 1933 005c 3D00     		.2byte	(.L203-.L222)/2
 1934 005e 3D00     		.2byte	(.L203-.L222)/2
 1935 0060 3D00     		.2byte	(.L203-.L222)/2
 1936 0062 3D00     		.2byte	(.L203-.L222)/2
 1937 0064 3D00     		.2byte	(.L203-.L222)/2
 1938 0066 3D00     		.2byte	(.L203-.L222)/2
 1939 0068 3D00     		.2byte	(.L203-.L222)/2
 1940 006a 3D00     		.2byte	(.L203-.L222)/2
 1941 006c 3D00     		.2byte	(.L203-.L222)/2
 1942 006e 3D00     		.2byte	(.L203-.L222)/2
 1943 0070 3D00     		.2byte	(.L203-.L222)/2
 1944 0072 3D00     		.2byte	(.L203-.L222)/2
 1945 0074 3D00     		.2byte	(.L203-.L222)/2
 1946 0076 3D00     		.2byte	(.L203-.L222)/2
 1947 0078 3D00     		.2byte	(.L203-.L222)/2
 1948 007a F400     		.2byte	(.L215-.L222)/2
 1949 007c C700     		.2byte	(.L221-.L222)/2
 1950              		.p2align 1
 1951              	.L206:
 852:src/keys.c    **** 	    if (intltr(15)) {
 1952              		.loc 1 852 6 view .LVU599
 1953              	.LVL149:
 853:src/keys.c    **** 	      return op_int;
 1954              		.loc 1 853 6 view .LVU600
 853:src/keys.c    **** 	      return op_int;
 1955              		.loc 1 853 10 is_stmt 0 view .LVU601
 1956 007e 0F20     		movs	r0, #15
 1957              	.LVL150:
 853:src/keys.c    **** 	      return op_int;
 1958              		.loc 1 853 10 view .LVU602
 1959 0080 FFF7FEFF 		bl	intltr
 1960              	.LVL151:
 853:src/keys.c    **** 	      return op_int;
 1961              		.loc 1 853 9 view .LVU603
 1962 0084 0028     		cmp	r0, #0
 1963 0086 40F0EB80 		bne	.L231
 1964              	.LVL152:
 1965              	.L212:
 927:src/keys.c    **** 		break;
 1966              		.loc 1 927 3 is_stmt 1 view .LVU604
 1967              	.LBB369:
 1968              	.LBI369:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 1969              		.loc 1 552 13 view .LVU605
 1970              	.LBB370:
 553:src/keys.c    **** 		return;
 1971              		.loc 1 553 2 view .LVU606
 553:src/keys.c    **** 		return;
 1972              		.loc 1 553 6 is_stmt 0 view .LVU607
 1973 008a FFF7FEFF 		bl	is_bad_cmdline
 1974              	.LVL153:
 553:src/keys.c    **** 		return;
 1975              		.loc 1 553 5 view .LVU608
 1976 008e 0028     		cmp	r0, #0
 1977 0090 40F09380 		bne	.L229
 1978 0094 E0B2     		uxtb	r0, r4
 1979 0096 FFF7FEFF 		bl	init_arg.part.0
ARM GAS  /tmp/ccgiIQCZ.s 			page 97


 1980              	.LVL154:
 1981              	.LBE370:
 1982              	.LBE369:
 933:src/keys.c    **** }
 1983              		.loc 1 933 9 view .LVU609
 1984 009a 3322     		movs	r2, #51
 1985              	.LVL155:
 1986              	.L203:
 934:src/keys.c    **** 
 1987              		.loc 1 934 1 view .LVU610
 1988 009c 1046     		mov	r0, r2
 1989 009e 10BD     		pop	{r4, pc}
 1990              	.LVL156:
 1991              	.L230:
 826:src/keys.c    **** 	  case K00:
 1992              		.loc 1 826 4 is_stmt 1 view .LVU611
 1993 00a0 1228     		cmp	r0, #18
 1994 00a2 29D8     		bhi	.L205
 1995 00a4 01A3     		adr	r3, .L207
 1996 00a6 53F820F0 		ldr	pc, [r3, r0, lsl #2]
 1997 00aa 00BF     		.p2align 2
 1998              	.L207:
 1999 00ac E9010000 		.word	.L210+1
 2000 00b0 DB010000 		.word	.L209+1
 2001 00b4 F9000000 		.word	.L205+1
 2002 00b8 CD010000 		.word	.L208+1
 2003 00bc F9000000 		.word	.L205+1
 2004 00c0 F9000000 		.word	.L205+1
 2005 00c4 F9000000 		.word	.L205+1
 2006 00c8 F9000000 		.word	.L205+1
 2007 00cc F9000000 		.word	.L205+1
 2008 00d0 F9000000 		.word	.L205+1
 2009 00d4 F9000000 		.word	.L205+1
 2010 00d8 F9000000 		.word	.L205+1
 2011 00dc F9000000 		.word	.L205+1
 2012 00e0 F9000000 		.word	.L205+1
 2013 00e4 F9000000 		.word	.L205+1
 2014 00e8 F9000000 		.word	.L205+1
 2015 00ec F9000000 		.word	.L205+1
 2016 00f0 F9000000 		.word	.L205+1
 2017 00f4 7F000000 		.word	.L206+1
 2018              		.p2align 1
 2019              	.L205:
 856:src/keys.c    **** 	  }
 2020              		.loc 1 856 12 view .LVU612
 861:src/keys.c    **** #ifdef DM42
 2021              		.loc 1 861 2 view .LVU613
 2022 00f8 C31E     		subs	r3, r0, #3
 2023 00fa 2A2B     		cmp	r3, #42
 2024 00fc CED8     		bhi	.L203
 2025 00fe 01A1     		adr	r1, .L214
 2026 0100 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 2027              		.p2align 2
 2028              	.L214:
 2029 0104 C1010000 		.word	.L217+1
 2030 0108 9D000000 		.word	.L203+1
 2031 010c 9D000000 		.word	.L203+1
ARM GAS  /tmp/ccgiIQCZ.s 			page 98


 2032 0110 8B000000 		.word	.L212+1
 2033 0114 8B000000 		.word	.L212+1
 2034 0118 9D000000 		.word	.L203+1
 2035 011c 9D000000 		.word	.L203+1
 2036 0120 9D000000 		.word	.L203+1
 2037 0124 9D000000 		.word	.L203+1
 2038 0128 9D000000 		.word	.L203+1
 2039 012c 9D000000 		.word	.L203+1
 2040 0130 9D000000 		.word	.L203+1
 2041 0134 9D000000 		.word	.L203+1
 2042 0138 F5010000 		.word	.L216+1
 2043 013c 9D000000 		.word	.L203+1
 2044 0140 8B000000 		.word	.L212+1
 2045 0144 9D000000 		.word	.L203+1
 2046 0148 9D000000 		.word	.L203+1
 2047 014c 9D000000 		.word	.L203+1
 2048 0150 9D000000 		.word	.L203+1
 2049 0154 9D000000 		.word	.L203+1
 2050 0158 9D000000 		.word	.L203+1
 2051 015c 9D000000 		.word	.L203+1
 2052 0160 9D000000 		.word	.L203+1
 2053 0164 9D000000 		.word	.L203+1
 2054 0168 9D000000 		.word	.L203+1
 2055 016c 9D000000 		.word	.L203+1
 2056 0170 9D000000 		.word	.L203+1
 2057 0174 9D000000 		.word	.L203+1
 2058 0178 9D000000 		.word	.L203+1
 2059 017c 9D000000 		.word	.L203+1
 2060 0180 9D000000 		.word	.L203+1
 2061 0184 9D000000 		.word	.L203+1
 2062 0188 9D000000 		.word	.L203+1
 2063 018c 9D000000 		.word	.L203+1
 2064 0190 9D000000 		.word	.L203+1
 2065 0194 9D000000 		.word	.L203+1
 2066 0198 9D000000 		.word	.L203+1
 2067 019c 9D000000 		.word	.L203+1
 2068 01a0 9D000000 		.word	.L203+1
 2069 01a4 9D000000 		.word	.L203+1
 2070 01a8 0B020000 		.word	.L215+1
 2071 01ac BB010000 		.word	.L229+1
 2072              		.p2align 1
 2073              	.L221:
 909:src/keys.c    **** #else
 2074              		.loc 1 909 4 view .LVU614
 909:src/keys.c    **** #else
 2075              		.loc 1 909 17 is_stmt 0 view .LVU615
 2076 01b0 2F4A     		ldr	r2, .L234+12
 2077              	.LVL157:
 909:src/keys.c    **** #else
 2078              		.loc 1 909 17 view .LVU616
 2079 01b2 537D     		ldrb	r3, [r2, #21]	@ zero_extendqisi2
 2080 01b4 43F00203 		orr	r3, r3, #2
 2081 01b8 5375     		strb	r3, [r2, #21]
 2082              	.LVL158:
 2083              	.L229:
 915:src/keys.c    **** 
 2084              		.loc 1 915 4 is_stmt 1 view .LVU617
ARM GAS  /tmp/ccgiIQCZ.s 			page 99


 933:src/keys.c    **** }
 2085              		.loc 1 933 9 is_stmt 0 view .LVU618
 2086 01ba 3322     		movs	r2, #51
 934:src/keys.c    **** 
 2087              		.loc 1 934 1 view .LVU619
 2088 01bc 1046     		mov	r0, r2
 2089 01be 10BD     		pop	{r4, pc}
 2090              	.LVL159:
 2091              	.L217:
 868:src/keys.c    **** #else
 2092              		.loc 1 868 3 is_stmt 1 view .LVU620
 868:src/keys.c    **** #else
 2093              		.loc 1 868 10 is_stmt 0 view .LVU621
 2094 01c0 2146     		mov	r1, r4
 2095 01c2 0220     		movs	r0, #2
 934:src/keys.c    **** 
 2096              		.loc 1 934 1 view .LVU622
 2097 01c4 BDE81040 		pop	{r4, lr}
 2098              		.cfi_remember_state
 2099              		.cfi_restore 14
 2100              		.cfi_restore 4
 2101              		.cfi_def_cfa_offset 0
 2102              	.LVL160:
 868:src/keys.c    **** #else
 2103              		.loc 1 868 10 view .LVU623
 2104 01c8 FFF7FEBF 		b	check_f_key
 2105              	.LVL161:
 2106              	.L208:
 2107              		.cfi_restore_state
 844:src/keys.c    **** 	    if (intltr(12)) {
 2108              		.loc 1 844 6 is_stmt 1 view .LVU624
 845:src/keys.c    **** 	      return op_int;
 2109              		.loc 1 845 6 view .LVU625
 845:src/keys.c    **** 	      return op_int;
 2110              		.loc 1 845 10 is_stmt 0 view .LVU626
 2111 01cc 0C20     		movs	r0, #12
 2112              	.LVL162:
 845:src/keys.c    **** 	      return op_int;
 2113              		.loc 1 845 10 view .LVU627
 2114 01ce FFF7FEFF 		bl	intltr
 2115              	.LVL163:
 845:src/keys.c    **** 	      return op_int;
 2116              		.loc 1 845 9 view .LVU628
 2117 01d2 0028     		cmp	r0, #0
 2118 01d4 F4D0     		beq	.L217
 846:src/keys.c    **** 	    }
 2119              		.loc 1 846 15 view .LVU629
 2120 01d6 1122     		movs	r2, #17
 2121 01d8 60E7     		b	.L203
 2122              	.LVL164:
 2123              	.L209:
 836:src/keys.c    **** 	    if (intltr(11)) {
 2124              		.loc 1 836 6 is_stmt 1 view .LVU630
 837:src/keys.c    **** 	      return op;
 2125              		.loc 1 837 6 view .LVU631
 837:src/keys.c    **** 	      return op;
 2126              		.loc 1 837 10 is_stmt 0 view .LVU632
ARM GAS  /tmp/ccgiIQCZ.s 			page 100


 2127 01da 0B20     		movs	r0, #11
 2128              	.LVL165:
 837:src/keys.c    **** 	      return op;
 2129              		.loc 1 837 10 view .LVU633
 2130 01dc FFF7FEFF 		bl	intltr
 2131              	.LVL166:
 837:src/keys.c    **** 	      return op;
 2132              		.loc 1 837 9 view .LVU634
 2133 01e0 0028     		cmp	r0, #0
 2134 01e2 37D0     		beq	.L232
 838:src/keys.c    **** 	    }
 2135              		.loc 1 838 15 view .LVU635
 2136 01e4 1022     		movs	r2, #16
 2137 01e6 59E7     		b	.L203
 2138              	.LVL167:
 2139              	.L210:
 828:src/keys.c    **** 	    if (intltr(10)) {
 2140              		.loc 1 828 6 is_stmt 1 view .LVU636
 829:src/keys.c    **** 	      return op;
 2141              		.loc 1 829 6 view .LVU637
 829:src/keys.c    **** 	      return op;
 2142              		.loc 1 829 10 is_stmt 0 view .LVU638
 2143 01e8 0A20     		movs	r0, #10
 2144              	.LVL168:
 829:src/keys.c    **** 	      return op;
 2145              		.loc 1 829 10 view .LVU639
 2146 01ea FFF7FEFF 		bl	intltr
 2147              	.LVL169:
 829:src/keys.c    **** 	      return op;
 2148              		.loc 1 829 9 view .LVU640
 2149 01ee 60B3     		cbz	r0, .L233
 830:src/keys.c    **** 	    }
 2150              		.loc 1 830 15 view .LVU641
 2151 01f0 0F22     		movs	r2, #15
 2152 01f2 53E7     		b	.L203
 2153              	.LVL170:
 2154              	.L216:
 918:src/keys.c    **** 			return STATE_UNFINISHED;
 2155              		.loc 1 918 3 is_stmt 1 view .LVU642
 918:src/keys.c    **** 			return STATE_UNFINISHED;
 2156              		.loc 1 918 7 is_stmt 0 view .LVU643
 2157 01f4 1E4B     		ldr	r3, .L234+12
 2158 01f6 DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 2159              	.LVL171:
 918:src/keys.c    **** 			return STATE_UNFINISHED;
 2160              		.loc 1 918 6 view .LVU644
 2161 01f8 9106     		lsls	r1, r2, #26
 2162 01fa DED4     		bmi	.L229
 920:src/keys.c    **** 			return op;
 2163              		.loc 1 920 3 is_stmt 1 view .LVU645
 920:src/keys.c    **** 			return op;
 2164              		.loc 1 920 7 is_stmt 0 view .LVU646
 2165 01fc 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 922:src/keys.c    **** 
 2166              		.loc 1 922 10 view .LVU647
 2167 01fe 13F0400F 		tst	r3, #64
 2168 0202 14BF     		ite	ne
ARM GAS  /tmp/ccgiIQCZ.s 			page 101


 2169 0204 2246     		movne	r2, r4
 2170 0206 3022     		moveq	r2, #48
 2171 0208 48E7     		b	.L203
 2172              	.LVL172:
 2173              	.L215:
 892:src/keys.c    **** 			return STATE_UNFINISHED;
 2174              		.loc 1 892 3 is_stmt 1 view .LVU648
 892:src/keys.c    **** 			return STATE_UNFINISHED;
 2175              		.loc 1 892 7 is_stmt 0 view .LVU649
 2176 020a FFF7FEFF 		bl	is_bad_cmdline
 2177              	.LVL173:
 892:src/keys.c    **** 			return STATE_UNFINISHED;
 2178              		.loc 1 892 6 view .LVU650
 2179 020e 0028     		cmp	r0, #0
 2180 0210 D3D1     		bne	.L229
 894:src/keys.c    **** 		State2.arrow = 1;
 2181              		.loc 1 894 3 is_stmt 1 view .LVU651
 2182 0212 FFF7FEFF 		bl	process_cmdline_set_lift
 2183              	.LVL174:
 895:src/keys.c    **** #ifdef DM42
 2184              		.loc 1 895 3 view .LVU652
 895:src/keys.c    **** #ifdef DM42
 2185              		.loc 1 895 16 is_stmt 0 view .LVU653
 2186 0216 164A     		ldr	r2, .L234+12
 2187 0218 537D     		ldrb	r3, [r2, #21]	@ zero_extendqisi2
 2188 021a 43F00403 		orr	r3, r3, #4
 2189 021e 5375     		strb	r3, [r2, #21]
 897:src/keys.c    **** 		display_current_menu ();
 2190              		.loc 1 897 3 is_stmt 1 view .LVU654
 2191 0220 0920     		movs	r0, #9
 2192 0222 FFF7FEFF 		bl	set_menu
 2193              	.LVL175:
 898:src/keys.c    **** 		lcd_refresh ();
 2194              		.loc 1 898 3 view .LVU655
 2195 0226 FFF7FEFF 		bl	display_current_menu
 2196              	.LVL176:
 899:src/keys.c    **** #else
 2197              		.loc 1 899 3 view .LVU656
 2198 022a 124B     		ldr	r3, .L234+16
 2199 022c 9847     		blx	r3
 2200              	.LVL177:
 903:src/keys.c    **** 
 2201              		.loc 1 903 3 view .LVU657
 933:src/keys.c    **** }
 2202              		.loc 1 933 9 is_stmt 0 view .LVU658
 2203 022e 3322     		movs	r2, #51
 903:src/keys.c    **** 
 2204              		.loc 1 903 3 view .LVU659
 2205 0230 34E7     		b	.L203
 2206              	.LVL178:
 2207              	.L218:
 864:src/keys.c    **** 	case K01:
 2208              		.loc 1 864 3 is_stmt 1 view .LVU660
 864:src/keys.c    **** 	case K01:
 2209              		.loc 1 864 10 is_stmt 0 view .LVU661
 2210 0232 2146     		mov	r1, r4
 2211 0234 0020     		movs	r0, #0
ARM GAS  /tmp/ccgiIQCZ.s 			page 102


 2212              	.LVL179:
 934:src/keys.c    **** 
 2213              		.loc 1 934 1 view .LVU662
 2214 0236 BDE81040 		pop	{r4, lr}
 2215              		.cfi_remember_state
 2216              		.cfi_restore 14
 2217              		.cfi_restore 4
 2218              		.cfi_def_cfa_offset 0
 864:src/keys.c    **** 	case K01:
 2219              		.loc 1 864 10 view .LVU663
 2220 023a FFF7FEBF 		b	check_f_key
 2221              	.LVL180:
 2222              	.L219:
 2223              		.cfi_restore_state
 866:src/keys.c    **** 	case K03:
 2224              		.loc 1 866 3 is_stmt 1 view .LVU664
 866:src/keys.c    **** 	case K03:
 2225              		.loc 1 866 10 is_stmt 0 view .LVU665
 2226 023e 2146     		mov	r1, r4
 2227 0240 0120     		movs	r0, #1
 2228              	.LVL181:
 934:src/keys.c    **** 
 2229              		.loc 1 934 1 view .LVU666
 2230 0242 BDE81040 		pop	{r4, lr}
 2231              		.cfi_remember_state
 2232              		.cfi_restore 14
 2233              		.cfi_restore 4
 2234              		.cfi_def_cfa_offset 0
 866:src/keys.c    **** 	case K03:
 2235              		.loc 1 866 10 view .LVU667
 2236 0246 FFF7FEBF 		b	check_f_key
 2237              	.LVL182:
 2238              	.L233:
 2239              		.cfi_restore_state
 833:src/keys.c    **** 	    }
 2240              		.loc 1 833 8 is_stmt 1 view .LVU668
 934:src/keys.c    **** 
 2241              		.loc 1 934 1 is_stmt 0 view .LVU669
 2242 024a BDE81040 		pop	{r4, lr}
 2243              		.cfi_remember_state
 2244              		.cfi_restore 14
 2245              		.cfi_restore 4
 2246              		.cfi_def_cfa_offset 0
 833:src/keys.c    **** 	    }
 2247              		.loc 1 833 15 view .LVU670
 2248 024e 0F21     		movs	r1, #15
 2249 0250 FFF7FEBF 		b	check_f_key
 2250              	.LVL183:
 2251              	.L232:
 2252              		.cfi_restore_state
 841:src/keys.c    **** 	    }
 2253              		.loc 1 841 8 is_stmt 1 view .LVU671
 934:src/keys.c    **** 
 2254              		.loc 1 934 1 is_stmt 0 view .LVU672
 2255 0254 BDE81040 		pop	{r4, lr}
 2256              		.cfi_remember_state
 2257              		.cfi_restore 14
ARM GAS  /tmp/ccgiIQCZ.s 			page 103


 2258              		.cfi_restore 4
 2259              		.cfi_def_cfa_offset 0
 841:src/keys.c    **** 	    }
 2260              		.loc 1 841 15 view .LVU673
 2261 0258 1021     		movs	r1, #16
 2262 025a 0120     		movs	r0, #1
 2263 025c FFF7FEBF 		b	check_f_key
 2264              	.LVL184:
 2265              	.L231:
 2266              		.cfi_restore_state
 854:src/keys.c    **** 	    }
 2267              		.loc 1 854 15 view .LVU674
 2268 0260 1422     		movs	r2, #20
 2269 0262 1BE7     		b	.L203
 2270              	.L235:
 2271              		.align	2
 2272              	.L234:
 2273 0264 00000000 		.word	main_ram
 2274 0268 00000000 		.word	.LANCHOR1
 2275 026c 00000000 		.word	.LANCHOR2
 2276 0270 00000000 		.word	StateWhileOn
 2277 0274 31020008 		.word	134218289
 2278              		.cfi_endproc
 2279              	.LFE19:
 2281              		.section	.text.process_fg_shifted,"ax",%progbits
 2282              		.align	1
 2283              		.p2align 2,,3
 2284              		.syntax unified
 2285              		.thumb
 2286              		.thumb_func
 2287              		.fpu fpv4-sp-d16
 2289              	process_fg_shifted:
 2290              	.LVL185:
 2291              	.LFB20:
 940:src/keys.c    **** 
 2292              		.loc 1 940 48 is_stmt 1 view -0
 2293              		.cfi_startproc
 2294              		@ args = 0, pretend = 0, frame = 0
 2295              		@ frame_needed = 0, uses_anonymous_args = 0
 943:src/keys.c    **** 		// Row 1
 2296              		.loc 1 943 2 view .LVU676
 994:src/keys.c    **** 		STATE_UNFINISHED,
 2297              		.loc 1 994 2 view .LVU677
1001:src/keys.c    **** 	int lc = keycode_to_linear(c);
 2298              		.loc 1 1001 2 view .LVU678
 2299              	.LBB371:
 2300              	.LBI371:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 2301              		.loc 1 114 13 view .LVU679
 2302              	.LBE371:
 115:src/keys.c    **** }
 2303              		.loc 1 115 2 view .LVU680
 2304              	.LBB388:
 2305              	.LBB372:
 2306              	.LBI372:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 2307              		.loc 1 104 20 view .LVU681
ARM GAS  /tmp/ccgiIQCZ.s 			page 104


 2308              	.LBB373:
 105:src/keys.c    **** 	State2.shifts = shift;
 2309              		.loc 1 105 2 view .LVU682
 2310              	.LBB374:
 2311              	.LBI374:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 2312              		.loc 1 96 13 view .LVU683
 2313              	.LBB375:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2314              		.loc 1 97 2 view .LVU684
 2315              	.LBE375:
 2316              	.LBE374:
 2317              	.LBE373:
 2318              	.LBE372:
 2319              	.LBE388:
 940:src/keys.c    **** 
 2320              		.loc 1 940 48 is_stmt 0 view .LVU685
 2321 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2322              		.cfi_def_cfa_offset 24
 2323              		.cfi_offset 4, -24
 2324              		.cfi_offset 5, -20
 2325              		.cfi_offset 6, -16
 2326              		.cfi_offset 7, -12
 2327              		.cfi_offset 8, -8
 2328              		.cfi_offset 14, -4
 940:src/keys.c    **** 
 2329              		.loc 1 940 48 view .LVU686
 2330 0004 0446     		mov	r4, r0
 2331              	.LBB389:
 2332              	.LBB384:
 2333              	.LBB380:
 2334              	.LBB378:
 2335              	.LBB376:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2336              		.loc 1 97 18 view .LVU687
 2337 0006 FFF7FEFF 		bl	shift_down
 2338              	.LVL186:
  98:src/keys.c    **** }
 2339              		.loc 1 98 2 is_stmt 1 view .LVU688
  98:src/keys.c    **** }
 2340              		.loc 1 98 52 is_stmt 0 view .LVU689
 2341 000a 0028     		cmp	r0, #0
 2342 000c 72D0     		beq	.L283
 2343 000e DFF89482 		ldr	r8, .L297+16
 2344 0012 0546     		mov	r5, r0
 2345              	.L237:
 2346              	.LVL187:
  98:src/keys.c    **** }
 2347              		.loc 1 98 52 view .LVU690
 2348              	.LBE376:
 2349              	.LBE378:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2350              		.loc 1 106 2 is_stmt 1 view .LVU691
 2351              	.LBE380:
 2352              	.LBE384:
 2353              	.LBE389:
 2354              	.LBB390:
ARM GAS  /tmp/ccgiIQCZ.s 			page 105


 2355              	.LBB391:
 158:src/keys.c    **** }
 2356              		.loc 1 158 23 is_stmt 0 view .LVU692
 2357 0014 9F4B     		ldr	r3, .L297
 2358              	.LBE391:
 2359              	.LBE390:
1003:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2360              		.loc 1 1003 21 view .LVU693
 2361 0016 A049     		ldr	r1, .L297+4
 2362              	.LBB394:
 2363              	.LBB392:
 158:src/keys.c    **** }
 2364              		.loc 1 158 23 view .LVU694
 2365 0018 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 2366              	.LBE392:
 2367              	.LBE394:
1003:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2368              		.loc 1 1003 21 view .LVU695
 2369 001a 4300     		lsls	r3, r0, #1
 2370 001c 022D     		cmp	r5, #2
 2371 001e 08BF     		it	eq
 2372 0020 0133     		addeq	r3, r3, #1
 2373              	.LBB395:
 2374              	.LBB385:
 2375              	.LBB381:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2376              		.loc 1 106 16 view .LVU696
 2377 0022 0022     		movs	r2, #0
 2378              	.LBE381:
 2379              	.LBE385:
 2380              	.LBE395:
1003:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2381              		.loc 1 1003 21 view .LVU697
 2382 0024 31F81360 		ldrh	r6, [r1, r3, lsl #1]
 2383              	.LBB396:
 2384              	.LBB386:
 2385              	.LBB382:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2386              		.loc 1 106 16 view .LVU698
 2387 0028 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 2388              		.loc 1 108 2 is_stmt 1 view .LVU699
 2389              	.LVL188:
 108:src/keys.c    **** }
 2390              		.loc 1 108 2 is_stmt 0 view .LVU700
 2391              	.LBE382:
 2392              	.LBE386:
 2393              	.LBE396:
1002:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 2394              		.loc 1 1002 2 is_stmt 1 view .LVU701
 2395              	.LBB397:
 2396              	.LBI390:
 146:src/keys.c    **** {
 2397              		.loc 1 146 12 view .LVU702
 2398              	.LBB393:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 2399              		.loc 1 148 2 view .LVU703
ARM GAS  /tmp/ccgiIQCZ.s 			page 106


 158:src/keys.c    **** }
 2400              		.loc 1 158 2 view .LVU704
 158:src/keys.c    **** }
 2401              		.loc 1 158 2 is_stmt 0 view .LVU705
 2402              	.LBE393:
 2403              	.LBE397:
1003:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2404              		.loc 1 1003 2 is_stmt 1 view .LVU706
1004:src/keys.c    **** 	if (no_int)
 2405              		.loc 1 1004 2 view .LVU707
 2406 002c 06F47047 		and	r7, r6, #61440
 2407              	.LVL189:
1005:src/keys.c    **** 		op &= ~NO_INT;
 2408              		.loc 1 1005 2 view .LVU708
1005:src/keys.c    **** 		op &= ~NO_INT;
 2409              		.loc 1 1005 5 is_stmt 0 view .LVU709
 2410 0030 B7F5704F 		cmp	r7, #61440
 2411 0034 63D0     		beq	.L291
1008:src/keys.c    **** 	case K00:
 2412              		.loc 1 1008 2 is_stmt 1 view .LVU710
 2413 0036 282C     		cmp	r4, #40
 2414 0038 34D8     		bhi	.L258
 2415 003a DFE804F0 		tbb	[pc, r4]
 2416              	.L259:
 2417 003e D3       		.byte	(.L249-.L259)/2
 2418 003f 39       		.byte	(.L247-.L259)/2
 2419 0040 33       		.byte	(.L258-.L259)/2
 2420 0041 39       		.byte	(.L247-.L259)/2
 2421 0042 33       		.byte	(.L258-.L259)/2
 2422 0043 33       		.byte	(.L258-.L259)/2
 2423 0044 33       		.byte	(.L258-.L259)/2
 2424 0045 33       		.byte	(.L258-.L259)/2
 2425 0046 33       		.byte	(.L258-.L259)/2
 2426 0047 33       		.byte	(.L258-.L259)/2
 2427 0048 33       		.byte	(.L258-.L259)/2
 2428 0049 33       		.byte	(.L258-.L259)/2
 2429 004a 15       		.byte	(.L246-.L259)/2
 2430 004b 33       		.byte	(.L258-.L259)/2
 2431 004c 33       		.byte	(.L258-.L259)/2
 2432 004d 33       		.byte	(.L258-.L259)/2
 2433 004e 33       		.byte	(.L258-.L259)/2
 2434 004f 33       		.byte	(.L258-.L259)/2
 2435 0050 E0       		.byte	(.L245-.L259)/2
 2436 0051 B9       		.byte	(.L244-.L259)/2
 2437 0052 33       		.byte	(.L258-.L259)/2
 2438 0053 33       		.byte	(.L258-.L259)/2
 2439 0054 33       		.byte	(.L258-.L259)/2
 2440 0055 33       		.byte	(.L258-.L259)/2
 2441 0056 33       		.byte	(.L258-.L259)/2
 2442 0057 33       		.byte	(.L258-.L259)/2
 2443 0058 33       		.byte	(.L258-.L259)/2
 2444 0059 33       		.byte	(.L258-.L259)/2
 2445 005a 33       		.byte	(.L258-.L259)/2
 2446 005b 33       		.byte	(.L258-.L259)/2
 2447 005c 44       		.byte	(.L243-.L259)/2
 2448 005d CB       		.byte	(.L242-.L259)/2
 2449 005e 49       		.byte	(.L240-.L259)/2
ARM GAS  /tmp/ccgiIQCZ.s 			page 107


 2450 005f 49       		.byte	(.L240-.L259)/2
 2451 0060 33       		.byte	(.L258-.L259)/2
 2452 0061 33       		.byte	(.L258-.L259)/2
 2453 0062 33       		.byte	(.L258-.L259)/2
 2454 0063 33       		.byte	(.L258-.L259)/2
 2455 0064 33       		.byte	(.L258-.L259)/2
 2456 0065 49       		.byte	(.L240-.L259)/2
 2457 0066 49       		.byte	(.L240-.L259)/2
 2458 0067 00       		.p2align 1
 2459              	.L246:
1040:src/keys.c    **** 			if (is_bad_cmdline())
 2460              		.loc 1 1040 3 view .LVU711
1040:src/keys.c    **** 			if (is_bad_cmdline())
 2461              		.loc 1 1040 6 is_stmt 0 view .LVU712
 2462 0068 012D     		cmp	r5, #1
 2463 006a 11D1     		bne	.L252
1041:src/keys.c    **** 				return STATE_UNFINISHED;
 2464              		.loc 1 1041 4 is_stmt 1 view .LVU713
1041:src/keys.c    **** 				return STATE_UNFINISHED;
 2465              		.loc 1 1041 8 is_stmt 0 view .LVU714
 2466 006c FFF7FEFF 		bl	is_bad_cmdline
 2467              	.LVL190:
1041:src/keys.c    **** 				return STATE_UNFINISHED;
 2468              		.loc 1 1041 7 view .LVU715
 2469 0070 0028     		cmp	r0, #0
 2470 0072 40F0B380 		bne	.L285
1043:src/keys.c    **** 			State2.alphas = 1;
 2471              		.loc 1 1043 4 is_stmt 1 view .LVU716
 2472 0076 FFF7FEFF 		bl	process_cmdline_set_lift
 2473              	.LVL191:
1044:src/keys.c    **** #ifdef DM42
 2474              		.loc 1 1044 4 view .LVU717
1044:src/keys.c    **** #ifdef DM42
 2475              		.loc 1 1044 18 is_stmt 0 view .LVU718
 2476 007a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
1046:src/keys.c    **** 			display_current_menu();
 2477              		.loc 1 1046 4 view .LVU719
 2478 007e 1020     		movs	r0, #16
1044:src/keys.c    **** #ifdef DM42
 2479              		.loc 1 1044 18 view .LVU720
 2480 0080 43F00803 		orr	r3, r3, #8
 2481 0084 88F81630 		strb	r3, [r8, #22]
1046:src/keys.c    **** 			display_current_menu();
 2482              		.loc 1 1046 4 is_stmt 1 view .LVU721
 2483 0088 FFF7FEFF 		bl	set_menu
 2484              	.LVL192:
1047:src/keys.c    **** #endif
 2485              		.loc 1 1047 4 view .LVU722
 2486 008c FFF7FEFF 		bl	display_current_menu
 2487              	.LVL193:
 2488              	.L252:
1092:src/keys.c    **** 		return STATE_UNFINISHED;
 2489              		.loc 1 1092 2 view .LVU723
1092:src/keys.c    **** 		return STATE_UNFINISHED;
 2490              		.loc 1 1092 5 is_stmt 0 view .LVU724
 2491 0090 B7F5704F 		cmp	r7, #61440
 2492 0094 06D1     		bne	.L258
ARM GAS  /tmp/ccgiIQCZ.s 			page 108


 2493              	.L239:
1092:src/keys.c    **** 		return STATE_UNFINISHED;
 2494              		.loc 1 1092 13 discriminator 1 view .LVU725
 2495 0096 814B     		ldr	r3, .L297+8
 2496 0098 1B68     		ldr	r3, [r3]
 2497 009a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2498 009e DA07     		lsls	r2, r3, #31
 2499 00a0 00F19C80 		bmi	.L285
 2500              	.L258:
1095:src/keys.c    **** #undef NO_INT
 2501              		.loc 1 1095 2 is_stmt 1 view .LVU726
 2502              	.LVL194:
 2503              	.LBB398:
 2504              	.LBI398:
 716:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 2505              		.loc 1 716 12 view .LVU727
 2506              	.LBB399:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 2507              		.loc 1 717 2 view .LVU728
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 2508              		.loc 1 717 6 is_stmt 0 view .LVU729
 2509 00a4 3312     		asrs	r3, r6, #8
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 2510              		.loc 1 717 5 view .LVU730
 2511 00a6 012B     		cmp	r3, #1
 2512 00a8 1FD0     		beq	.L261
 2513              	.LVL195:
 2514              	.L236:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 2515              		.loc 1 717 5 view .LVU731
 2516              	.LBE399:
 2517              	.LBE398:
1097:src/keys.c    **** 
 2518              		.loc 1 1097 1 view .LVU732
 2519 00aa 3046     		mov	r0, r6
 2520 00ac BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2521              	.LVL196:
 2522              	.L247:
1029:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2523              		.loc 1 1029 4 is_stmt 1 view .LVU733
1029:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2524              		.loc 1 1029 8 is_stmt 0 view .LVU734
 2525 00b0 7A4B     		ldr	r3, .L297+8
 2526 00b2 1B68     		ldr	r3, [r3]
 2527 00b4 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1029:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2528              		.loc 1 1029 7 view .LVU735
 2529 00b8 DB07     		lsls	r3, r3, #31
 2530 00ba 00F19980 		bmi	.L288
1092:src/keys.c    **** 		return STATE_UNFINISHED;
 2531              		.loc 1 1092 2 is_stmt 1 view .LVU736
1092:src/keys.c    **** 		return STATE_UNFINISHED;
 2532              		.loc 1 1092 5 is_stmt 0 view .LVU737
 2533 00be B7F5704F 		cmp	r7, #61440
 2534 00c2 EFD1     		bne	.L258
 2535 00c4 E7E7     		b	.L239
 2536              	.L243:
ARM GAS  /tmp/ccgiIQCZ.s 			page 109


1072:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 2537              		.loc 1 1072 3 is_stmt 1 view .LVU738
1072:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 2538              		.loc 1 1072 18 is_stmt 0 view .LVU739
 2539 00c6 FFF7FEFF 		bl	shift_down
 2540              	.LVL197:
1072:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 2541              		.loc 1 1072 6 view .LVU740
 2542 00ca 0028     		cmp	r0, #0
 2543 00cc 40F0BA80 		bne	.L292
 2544              	.L240:
1081:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 2545              		.loc 1 1081 3 is_stmt 1 view .LVU741
1081:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 2546              		.loc 1 1081 6 is_stmt 0 view .LVU742
 2547 00d0 B6F59C7F 		cmp	r6, #312
 2548 00d4 40F0A580 		bne	.L293
1092:src/keys.c    **** 		return STATE_UNFINISHED;
 2549              		.loc 1 1092 2 is_stmt 1 view .LVU743
1092:src/keys.c    **** 		return STATE_UNFINISHED;
 2550              		.loc 1 1092 5 is_stmt 0 view .LVU744
 2551 00d8 B7F5704F 		cmp	r7, #61440
 2552 00dc 05D1     		bne	.L261
1092:src/keys.c    **** 		return STATE_UNFINISHED;
 2553              		.loc 1 1092 13 view .LVU745
 2554 00de 6F4B     		ldr	r3, .L297+8
 2555 00e0 1B68     		ldr	r3, [r3]
 2556 00e2 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2557 00e6 DB07     		lsls	r3, r3, #31
 2558 00e8 78D4     		bmi	.L285
 2559              	.LVL198:
 2560              	.L261:
 2561              	.LBB402:
 2562              	.LBB400:
1092:src/keys.c    **** 		return STATE_UNFINISHED;
 2563              		.loc 1 1092 13 view .LVU746
 2564 00ea 3046     		mov	r0, r6
 2565              	.LBE400:
 2566              	.LBE402:
1097:src/keys.c    **** 
 2567              		.loc 1 1097 1 view .LVU747
 2568 00ec BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 2569              		.cfi_remember_state
 2570              		.cfi_restore 14
 2571              		.cfi_restore 8
 2572              		.cfi_restore 7
 2573              		.cfi_restore 6
 2574              		.cfi_restore 5
 2575              		.cfi_restore 4
 2576              		.cfi_def_cfa_offset 0
 2577              	.LVL199:
 2578              	.LBB403:
 2579              	.LBB401:
1097:src/keys.c    **** 
 2580              		.loc 1 1097 1 view .LVU748
 2581 00f0 FFF7FEBF 		b	check_confirm.part.0
 2582              	.LVL200:
ARM GAS  /tmp/ccgiIQCZ.s 			page 110


 2583              	.L283:
 2584              		.cfi_restore_state
1097:src/keys.c    **** 
 2585              		.loc 1 1097 1 view .LVU749
 2586              	.LBE401:
 2587              	.LBE403:
 2588              	.LBB404:
 2589              	.LBB387:
 2590              	.LBB383:
 2591              	.LBB379:
 2592              	.LBB377:
  98:src/keys.c    **** }
 2593              		.loc 1 98 52 view .LVU750
 2594 00f4 DFF8AC81 		ldr	r8, .L297+16
 2595 00f8 98F81050 		ldrb	r5, [r8, #16]	@ zero_extendqisi2
 2596 00fc 8AE7     		b	.L237
 2597              	.LVL201:
 2598              	.L291:
  98:src/keys.c    **** }
 2599              		.loc 1 98 52 view .LVU751
 2600              	.LBE377:
 2601              	.LBE379:
 2602              	.LBE383:
 2603              	.LBE387:
 2604              	.LBE404:
1006:src/keys.c    **** 
 2605              		.loc 1 1006 3 is_stmt 1 view .LVU752
1006:src/keys.c    **** 
 2606              		.loc 1 1006 6 is_stmt 0 view .LVU753
 2607 00fe 26F47046 		bic	r6, r6, #61440
 2608              	.LVL202:
1008:src/keys.c    **** 	case K00:
 2609              		.loc 1 1008 2 is_stmt 1 view .LVU754
 2610 0102 282C     		cmp	r4, #40
 2611 0104 C7D8     		bhi	.L239
 2612 0106 01A3     		adr	r3, .L241
 2613 0108 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 2614              		.p2align 2
 2615              	.L241:
 2616 010c E5010000 		.word	.L249+1
 2617 0110 B1000000 		.word	.L247+1
 2618 0114 97000000 		.word	.L239+1
 2619 0118 B1000000 		.word	.L247+1
 2620 011c 97000000 		.word	.L239+1
 2621 0120 97000000 		.word	.L239+1
 2622 0124 97000000 		.word	.L239+1
 2623 0128 97000000 		.word	.L239+1
 2624 012c 97000000 		.word	.L239+1
 2625 0130 97000000 		.word	.L239+1
 2626 0134 97000000 		.word	.L239+1
 2627 0138 97000000 		.word	.L239+1
 2628 013c 69000000 		.word	.L246+1
 2629 0140 97000000 		.word	.L239+1
 2630 0144 97000000 		.word	.L239+1
 2631 0148 97000000 		.word	.L239+1
 2632 014c 97000000 		.word	.L239+1
 2633 0150 97000000 		.word	.L239+1
ARM GAS  /tmp/ccgiIQCZ.s 			page 111


 2634 0154 FF010000 		.word	.L245+1
 2635 0158 B1010000 		.word	.L244+1
 2636 015c 97000000 		.word	.L239+1
 2637 0160 97000000 		.word	.L239+1
 2638 0164 97000000 		.word	.L239+1
 2639 0168 97000000 		.word	.L239+1
 2640 016c 97000000 		.word	.L239+1
 2641 0170 97000000 		.word	.L239+1
 2642 0174 97000000 		.word	.L239+1
 2643 0178 97000000 		.word	.L239+1
 2644 017c 97000000 		.word	.L239+1
 2645 0180 97000000 		.word	.L239+1
 2646 0184 C7000000 		.word	.L243+1
 2647 0188 D5010000 		.word	.L242+1
 2648 018c D1000000 		.word	.L240+1
 2649 0190 D1000000 		.word	.L240+1
 2650 0194 97000000 		.word	.L239+1
 2651 0198 97000000 		.word	.L239+1
 2652 019c 97000000 		.word	.L239+1
 2653 01a0 97000000 		.word	.L239+1
 2654 01a4 97000000 		.word	.L239+1
 2655 01a8 D1000000 		.word	.L240+1
 2656 01ac D1000000 		.word	.L240+1
 2657              		.p2align 1
 2658              	.L244:
1053:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2659              		.loc 1 1053 4 view .LVU755
1053:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2660              		.loc 1 1053 7 is_stmt 0 view .LVU756
 2661 01b0 022D     		cmp	r5, #2
 2662 01b2 7FF46DAF 		bne	.L252
1053:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2663              		.loc 1 1053 27 discriminator 1 view .LVU757
 2664 01b6 394B     		ldr	r3, .L297+8
 2665 01b8 1B68     		ldr	r3, [r3]
 2666 01ba 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2667 01be DC07     		lsls	r4, r3, #31
 2668 01c0 7FF566AF 		bpl	.L252
1053:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2669              		.loc 1 1053 45 discriminator 2 view .LVU758
 2670 01c4 0D20     		movs	r0, #13
 2671              	.LVL203:
1053:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2672              		.loc 1 1053 45 discriminator 2 view .LVU759
 2673 01c6 FFF7FEFF 		bl	intltr
 2674              	.LVL204:
1053:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2675              		.loc 1 1053 42 discriminator 2 view .LVU760
 2676 01ca 0028     		cmp	r0, #0
 2677 01cc 3FF460AF 		beq	.L252
1054:src/keys.c    **** 	  }
 2678              		.loc 1 1054 13 view .LVU761
 2679 01d0 1226     		movs	r6, #18
 2680              	.LVL205:
1054:src/keys.c    **** 	  }
 2681              		.loc 1 1054 13 view .LVU762
 2682 01d2 6AE7     		b	.L236
ARM GAS  /tmp/ccgiIQCZ.s 			page 112


 2683              	.LVL206:
 2684              	.L242:
1064:src/keys.c    **** 			return STATE_UNFINISHED;
 2685              		.loc 1 1064 3 is_stmt 1 view .LVU763
1064:src/keys.c    **** 			return STATE_UNFINISHED;
 2686              		.loc 1 1064 7 is_stmt 0 view .LVU764
 2687 01d4 FFF7FEFF 		bl	is_bad_cmdline
 2688              	.LVL207:
1064:src/keys.c    **** 			return STATE_UNFINISHED;
 2689              		.loc 1 1064 6 view .LVU765
 2690 01d8 0028     		cmp	r0, #0
 2691 01da 40D0     		beq	.L294
 2692              	.LVL208:
 2693              	.L285:
1085:src/keys.c    **** 		}
 2694              		.loc 1 1085 11 view .LVU766
 2695 01dc 3326     		movs	r6, #51
 2696              	.LVL209:
1097:src/keys.c    **** 
 2697              		.loc 1 1097 1 view .LVU767
 2698 01de 3046     		mov	r0, r6
 2699 01e0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2700              	.LVL210:
 2701              	.L249:
1010:src/keys.c    **** 	    State2.hyp = 1;
 2702              		.loc 1 1010 4 is_stmt 1 view .LVU768
1010:src/keys.c    **** 	    State2.hyp = 1;
 2703              		.loc 1 1010 8 is_stmt 0 view .LVU769
 2704 01e4 2D4B     		ldr	r3, .L297+8
 2705 01e6 1B68     		ldr	r3, [r3]
 2706 01e8 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1010:src/keys.c    **** 	    State2.hyp = 1;
 2707              		.loc 1 1010 7 view .LVU770
 2708 01ec DA07     		lsls	r2, r3, #31
 2709 01ee 3CD5     		bpl	.L295
 2710              	.L288:
1029:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2711              		.loc 1 1029 20 discriminator 1 view .LVU771
 2712 01f0 012D     		cmp	r5, #1
 2713 01f2 48D0     		beq	.L296
1092:src/keys.c    **** 		return STATE_UNFINISHED;
 2714              		.loc 1 1092 2 is_stmt 1 view .LVU772
1092:src/keys.c    **** 		return STATE_UNFINISHED;
 2715              		.loc 1 1092 5 is_stmt 0 view .LVU773
 2716 01f4 B7F5704F 		cmp	r7, #61440
 2717 01f8 7FF454AF 		bne	.L258
 2718 01fc EEE7     		b	.L285
 2719              	.L245:
1058:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2720              		.loc 1 1058 4 is_stmt 1 view .LVU774
1058:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2721              		.loc 1 1058 7 is_stmt 0 view .LVU775
 2722 01fe 022D     		cmp	r5, #2
 2723 0200 7FF446AF 		bne	.L252
1058:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2724              		.loc 1 1058 27 discriminator 1 view .LVU776
 2725 0204 254B     		ldr	r3, .L297+8
ARM GAS  /tmp/ccgiIQCZ.s 			page 113


 2726 0206 1B68     		ldr	r3, [r3]
 2727 0208 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2728 020c D807     		lsls	r0, r3, #31
 2729              	.LVL211:
1058:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2730              		.loc 1 1058 27 discriminator 1 view .LVU777
 2731 020e 7FF53FAF 		bpl	.L252
1058:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2732              		.loc 1 1058 45 discriminator 2 view .LVU778
 2733 0212 0E20     		movs	r0, #14
 2734 0214 FFF7FEFF 		bl	intltr
 2735              	.LVL212:
1058:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2736              		.loc 1 1058 42 discriminator 2 view .LVU779
 2737 0218 0028     		cmp	r0, #0
 2738 021a 3FF439AF 		beq	.L252
1059:src/keys.c    **** 	  }
 2739              		.loc 1 1059 13 view .LVU780
 2740 021e 1326     		movs	r6, #19
 2741              	.LVL213:
1059:src/keys.c    **** 	  }
 2742              		.loc 1 1059 13 view .LVU781
 2743 0220 43E7     		b	.L236
 2744              	.LVL214:
 2745              	.L293:
1082:src/keys.c    **** 				init_arg((enum rarg) op);
 2746              		.loc 1 1082 4 is_stmt 1 view .LVU782
1082:src/keys.c    **** 				init_arg((enum rarg) op);
 2747              		.loc 1 1082 7 is_stmt 0 view .LVU783
 2748 0222 B7F5704F 		cmp	r7, #61440
 2749 0226 05D1     		bne	.L257
1082:src/keys.c    **** 				init_arg((enum rarg) op);
 2750              		.loc 1 1082 18 discriminator 1 view .LVU784
 2751 0228 1C4B     		ldr	r3, .L297+8
 2752 022a 1B68     		ldr	r3, [r3]
 2753 022c 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1082:src/keys.c    **** 				init_arg((enum rarg) op);
 2754              		.loc 1 1082 8 discriminator 1 view .LVU785
 2755 0230 D907     		lsls	r1, r3, #31
 2756 0232 D3D4     		bmi	.L285
 2757              	.L257:
1083:src/keys.c    **** 			}
 2758              		.loc 1 1083 5 is_stmt 1 view .LVU786
 2759              	.LVL215:
 2760              	.LBB405:
 2761              	.LBI405:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 2762              		.loc 1 552 13 view .LVU787
 2763              	.LBB406:
 553:src/keys.c    **** 		return;
 2764              		.loc 1 553 2 view .LVU788
 553:src/keys.c    **** 		return;
 2765              		.loc 1 553 6 is_stmt 0 view .LVU789
 2766 0234 FFF7FEFF 		bl	is_bad_cmdline
 2767              	.LVL216:
 553:src/keys.c    **** 		return;
 2768              		.loc 1 553 5 view .LVU790
ARM GAS  /tmp/ccgiIQCZ.s 			page 114


 2769 0238 0028     		cmp	r0, #0
 2770 023a CFD1     		bne	.L285
 2771 023c F0B2     		uxtb	r0, r6
 2772 023e FFF7FEFF 		bl	init_arg.part.0
 2773              	.LVL217:
 2774 0242 CBE7     		b	.L285
 2775              	.LVL218:
 2776              	.L292:
 553:src/keys.c    **** 		return;
 2777              		.loc 1 553 5 view .LVU791
 2778              	.LBE406:
 2779              	.LBE405:
1073:src/keys.c    **** 			return STATE_UNFINISHED;
 2780              		.loc 1 1073 4 is_stmt 1 view .LVU792
1073:src/keys.c    **** 			return STATE_UNFINISHED;
 2781              		.loc 1 1073 26 is_stmt 0 view .LVU793
 2782 0244 A5F10105 		sub	r5, #1
 2783              	.LVL219:
1073:src/keys.c    **** 			return STATE_UNFINISHED;
 2784              		.loc 1 1073 17 view .LVU794
 2785 0248 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
1073:src/keys.c    **** 			return STATE_UNFINISHED;
 2786              		.loc 1 1073 26 view .LVU795
 2787 024c B5FA85F5 		clz	r5, r5
 2788 0250 6D09     		lsrs	r5, r5, #5
1073:src/keys.c    **** 			return STATE_UNFINISHED;
 2789              		.loc 1 1073 17 view .LVU796
 2790 0252 65F3C713 		bfi	r3, r5, #7, #1
 2791 0256 88F81730 		strb	r3, [r8, #23]
1074:src/keys.c    **** 		}
 2792              		.loc 1 1074 4 is_stmt 1 view .LVU797
1074:src/keys.c    **** 		}
 2793              		.loc 1 1074 11 is_stmt 0 view .LVU798
 2794 025a 3326     		movs	r6, #51
 2795              	.LVL220:
1074:src/keys.c    **** 		}
 2796              		.loc 1 1074 11 view .LVU799
 2797 025c 25E7     		b	.L236
 2798              	.LVL221:
 2799              	.L294:
1066:src/keys.c    **** 		State2.test = op;
 2800              		.loc 1 1066 3 is_stmt 1 view .LVU800
 2801 025e FFF7FEFF 		bl	process_cmdline_set_lift
 2802              	.LVL222:
1067:src/keys.c    **** 		return STATE_UNFINISHED;
 2803              		.loc 1 1067 3 view .LVU801
1067:src/keys.c    **** 		return STATE_UNFINISHED;
 2804              		.loc 1 1067 15 is_stmt 0 view .LVU802
 2805 0262 88F80F60 		strb	r6, [r8, #15]
1068:src/keys.c    **** 
 2806              		.loc 1 1068 3 is_stmt 1 view .LVU803
1068:src/keys.c    **** 
 2807              		.loc 1 1068 10 is_stmt 0 view .LVU804
 2808 0266 3326     		movs	r6, #51
 2809              	.LVL223:
1068:src/keys.c    **** 
 2810              		.loc 1 1068 10 view .LVU805
ARM GAS  /tmp/ccgiIQCZ.s 			page 115


 2811 0268 1FE7     		b	.L236
 2812              	.LVL224:
 2813              	.L295:
1011:src/keys.c    **** 	    State2.dot = op;
 2814              		.loc 1 1011 6 is_stmt 1 view .LVU806
1012:src/keys.c    **** 	    // State2.cmplx = 0;
 2815              		.loc 1 1012 6 view .LVU807
1011:src/keys.c    **** 	    State2.dot = op;
 2816              		.loc 1 1011 17 is_stmt 0 view .LVU808
 2817 026a 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 2818 026e 06F00103 		and	r3, r6, #1
 2819 0272 9B01     		lsls	r3, r3, #6
 2820 0274 43F02003 		orr	r3, r3, #32
 2821 0278 22F06002 		bic	r2, r2, #96
 2822 027c 1343     		orrs	r3, r3, r2
 2823 027e 88F81530 		strb	r3, [r8, #21]
1014:src/keys.c    **** 	  }
 2824              		.loc 1 1014 6 is_stmt 1 view .LVU809
1014:src/keys.c    **** 	  }
 2825              		.loc 1 1014 13 is_stmt 0 view .LVU810
 2826 0282 3326     		movs	r6, #51
 2827              	.LVL225:
1014:src/keys.c    **** 	  }
 2828              		.loc 1 1014 13 view .LVU811
 2829 0284 11E7     		b	.L236
 2830              	.LVL226:
 2831              	.L296:
1030:src/keys.c    **** 		}
 2832              		.loc 1 1030 4 is_stmt 1 view .LVU812
1030:src/keys.c    **** 		}
 2833              		.loc 1 1030 34 is_stmt 0 view .LVU813
 2834 0286 064B     		ldr	r3, .L297+12
1097:src/keys.c    **** 
 2835              		.loc 1 1097 1 view .LVU814
 2836 0288 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 2837              		.cfi_restore 14
 2838              		.cfi_restore 8
 2839              		.cfi_restore 7
 2840              		.cfi_restore 6
 2841              		.cfi_restore 5
 2842              		.cfi_restore 4
 2843              		.cfi_def_cfa_offset 0
 2844              	.LVL227:
1030:src/keys.c    **** 		}
 2845              		.loc 1 1030 11 view .LVU815
 2846 028c 33F81010 		ldrh	r1, [r3, r0, lsl #1]
 2847 0290 FFF7FEBF 		b	check_f_key
 2848              	.LVL228:
 2849              	.L298:
1030:src/keys.c    **** 		}
 2850              		.loc 1 1030 11 view .LVU816
 2851              		.align	2
 2852              	.L297:
 2853 0294 00000000 		.word	.LANCHOR1
 2854 0298 00000000 		.word	.LANCHOR3
 2855 029c 00000000 		.word	main_ram
 2856 02a0 00000000 		.word	.LANCHOR4
ARM GAS  /tmp/ccgiIQCZ.s 			page 116


 2857 02a4 00000000 		.word	StateWhileOn
 2858              		.cfi_endproc
 2859              	.LFE20:
 2861              		.section	.text.set_window,"ax",%progbits
 2862              		.align	1
 2863              		.p2align 2,,3
 2864              		.syntax unified
 2865              		.thumb
 2866              		.thumb_func
 2867              		.fpu fpv4-sp-d16
 2869              	set_window:
 2870              	.LVL229:
 2871              	.LFB58:
2984:src/keys.c    **** 
2985:src/keys.c    **** 
2986:src/keys.c    **** /*
2987:src/keys.c    ****  *  CAT command
2988:src/keys.c    ****  */
2989:src/keys.c    **** static int process_labellist(const keycode c) {
2990:src/keys.c    **** 	unsigned int pc = State2.digval;
2991:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
2992:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
2993:src/keys.c    **** 	const int opcode = getprog(pc);
2994:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
2995:src/keys.c    **** 	const int direct = State2.runmode;
2996:src/keys.c    **** 	const enum shifts shift = reset_shift();
2997:src/keys.c    **** 	int op = STATE_UNFINISHED;
2998:src/keys.c    **** 
2999:src/keys.c    **** 	if (n < REGION_XROM) {
3000:src/keys.c    **** 		// Digits take you to that segment
3001:src/keys.c    **** 		pc = addrLIB(1, n);
3002:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
3003:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
3004:src/keys.c    **** 		State2.digval = pc;
3005:src/keys.c    **** 		return STATE_UNFINISHED;
3006:src/keys.c    **** 	}
3007:src/keys.c    **** 
3008:src/keys.c    **** 	switch (c | (shift << 8)) {
3009:src/keys.c    **** 
3010:src/keys.c    **** 	case K_UP | (SHIFT_F << 8):		// Find first label of previous program
3011:src/keys.c    **** 		pc = advance_to_previous_label(advance_to_previous_label(pc, 1), 1);
3012:src/keys.c    **** 		goto next;
3013:src/keys.c    **** 
3014:src/keys.c    **** 	case K_DOWN | (SHIFT_F << 8):		// Find next program
3015:src/keys.c    **** 		pc = advance_to_next_label(pc, 0, 1);
3016:src/keys.c    **** 	case K_DOWN:				// Find next label
3017:src/keys.c    **** 	next:
3018:src/keys.c    **** 		State2.digval = advance_to_next_label(pc, 1, 0);
3019:src/keys.c    **** 		return STATE_UNFINISHED;
3020:src/keys.c    **** 
3021:src/keys.c    **** 	case K_UP:				// Find previous label
3022:src/keys.c    **** 		State2.digval = advance_to_previous_label(pc, 0);
3023:src/keys.c    **** 		return STATE_UNFINISHED;
3024:src/keys.c    **** 
3025:src/keys.c    **** 	case K24:				// <- exits
3026:src/keys.c    **** 		break;
3027:src/keys.c    **** 
ARM GAS  /tmp/ccgiIQCZ.s 			page 117


3028:src/keys.c    **** 	case K20:				// ENTER^
3029:src/keys.c    **** 	set_pc_and_exit:
3030:src/keys.c    **** 		set_pc(pc);			// forced branch
3031:src/keys.c    **** 		break;
3032:src/keys.c    **** 
3033:src/keys.c    **** 	case K24 | (SHIFT_F << 8):		// CLP
3034:src/keys.c    **** 		op = (OP_NIL | OP_CLPROG);
3035:src/keys.c    **** 		goto set_pc_and_exit;
3036:src/keys.c    **** 
3037:src/keys.c    **** 	case K10:				// STO
3038:src/keys.c    **** 	case K11:				// RCL
3039:src/keys.c    **** 	  //#ifndef DM42	
3040:src/keys.c    **** 		op = c == K10 ? (OP_NIL | OP_PSTO) : (OP_NIL | OP_PRCL);
3041:src/keys.c    **** 	  //#endif
3042:src/keys.c    **** /* #ifdef DM42 */
3043:src/keys.c    **** /* 	        op = OP_NIL; */
3044:src/keys.c    **** /* #endif	     */
3045:src/keys.c    **** 	  goto set_pc_and_exit;
3046:src/keys.c    **** #ifdef DM42
3047:src/keys.c    **** 	case K05:				// XEQ
3048:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
3049:src/keys.c    **** 		goto xeq_or_gto;
3050:src/keys.c    **** 
3051:src/keys.c    **** 	case K05 | (SHIFT_F << 8):		// GTO
3052:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
3053:src/keys.c    **** 	xeq_or_gto:
3054:src/keys.c    **** 		if (label)
3055:src/keys.c    **** 			break;
3056:src/keys.c    **** 		return STATE_UNFINISHED;
3057:src/keys.c    **** #else
3058:src/keys.c    **** 	case K30:				// XEQ
3059:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
3060:src/keys.c    **** 		goto xeq_or_gto;
3061:src/keys.c    **** 
3062:src/keys.c    **** 	case K30 | (SHIFT_H << 8):		// GTO
3063:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
3064:src/keys.c    **** 	xeq_or_gto:
3065:src/keys.c    **** 		if (label)
3066:src/keys.c    **** 			break;
3067:src/keys.c    **** 		return STATE_UNFINISHED;
3068:src/keys.c    **** #endif		
3069:src/keys.c    **** 	case K63:				// R/S
3070:src/keys.c    **** 		if (direct && label) {
3071:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
3072:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
3073:src/keys.c    **** 			break;
3074:src/keys.c    **** 		}
3075:src/keys.c    **** 		return STATE_UNFINISHED;
3076:src/keys.c    **** 
3077:src/keys.c    **** 	case K63 | (SHIFT_H << 8):		// P/R
3078:src/keys.c    **** 		State2.runmode = 0;		// switch to program mode
3079:src/keys.c    **** 		goto set_pc_and_exit;
3080:src/keys.c    **** 
3081:src/keys.c    **** 	default:
3082:src/keys.c    **** 		return STATE_UNFINISHED;
3083:src/keys.c    **** 	}
3084:src/keys.c    **** 	State2.digval = 0;
ARM GAS  /tmp/ccgiIQCZ.s 			page 118


3085:src/keys.c    **** 	State2.labellist = 0;
3086:src/keys.c    **** 	return check_confirm(op);
3087:src/keys.c    **** }
3088:src/keys.c    **** 
3089:src/keys.c    **** 
3090:src/keys.c    **** static void set_window(int c) {
 2872              		.loc 1 3090 31 is_stmt 1 view -0
 2873              		.cfi_startproc
 2874              		@ args = 0, pretend = 0, frame = 0
 2875              		@ frame_needed = 0, uses_anonymous_args = 0
3091:src/keys.c    **** 
3092:src/keys.c    **** 	if (State2.runmode) {
 2876              		.loc 1 3092 2 view .LVU818
3090:src/keys.c    **** 
 2877              		.loc 1 3090 31 is_stmt 0 view .LVU819
 2878 0000 38B5     		push	{r3, r4, r5, lr}
 2879              		.cfi_def_cfa_offset 16
 2880              		.cfi_offset 3, -16
 2881              		.cfi_offset 4, -12
 2882              		.cfi_offset 5, -8
 2883              		.cfi_offset 14, -4
 2884              		.loc 1 3092 6 view .LVU820
 2885 0002 224C     		ldr	r4, .L314
 2886 0004 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 2887              		.loc 1 3092 5 view .LVU821
 2888 0006 5A06     		lsls	r2, r3, #25
 2889 0008 00D4     		bmi	.L311
 2890              	.LVL230:
 2891              	.L299:
3093:src/keys.c    **** 		process_cmdline_set_lift();
3094:src/keys.c    **** 		// Make sure IntMaxWindow is recalculated
3095:src/keys.c    **** 		State2.disp_freeze = 0;
3096:src/keys.c    **** 		display();	
3097:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
3098:src/keys.c    **** 			if (UState.intm) {
3099:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
3100:src/keys.c    **** 					State2.window--;
3101:src/keys.c    **** 				return;
3102:src/keys.c    **** 			}
3103:src/keys.c    **** 			else 
3104:src/keys.c    **** 				State2.window = is_dblmode();
3105:src/keys.c    **** 		}
3106:src/keys.c    **** 		else {
3107:src/keys.c    **** 			if (UState.intm) {
3108:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
3109:src/keys.c    **** 					State2.window++;
3110:src/keys.c    **** 				return;
3111:src/keys.c    **** 			}
3112:src/keys.c    **** 			else
3113:src/keys.c    **** 				State2.window = 0;
3114:src/keys.c    **** 		}
3115:src/keys.c    **** 		set_smode(SDISP_SHOW);
3116:src/keys.c    **** 	}
3117:src/keys.c    **** }
 2892              		.loc 1 3117 1 view .LVU822
 2893 000a 38BD     		pop	{r3, r4, r5, pc}
 2894              	.LVL231:
ARM GAS  /tmp/ccgiIQCZ.s 			page 119


 2895              	.L311:
3093:src/keys.c    **** 		process_cmdline_set_lift();
 2896              		.loc 1 3093 3 is_stmt 1 view .LVU823
 2897 000c 0546     		mov	r5, r0
 2898 000e FFF7FEFF 		bl	process_cmdline_set_lift
 2899              	.LVL232:
3095:src/keys.c    **** 		display();	
 2900              		.loc 1 3095 3 view .LVU824
3095:src/keys.c    **** 		display();	
 2901              		.loc 1 3095 22 is_stmt 0 view .LVU825
 2902 0012 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 2903 0014 6FF30413 		bfc	r3, #4, #1
 2904 0018 E375     		strb	r3, [r4, #23]
3096:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
 2905              		.loc 1 3096 3 is_stmt 1 view .LVU826
 2906 001a FFF7FEFF 		bl	display
 2907              	.LVL233:
3097:src/keys.c    **** 			if (UState.intm) {
 2908              		.loc 1 3097 3 view .LVU827
3098:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2909              		.loc 1 3098 8 is_stmt 0 view .LVU828
 2910 001e 1C4B     		ldr	r3, .L314+4
 2911 0020 1B68     		ldr	r3, [r3]
3097:src/keys.c    **** 			if (UState.intm) {
 2912              		.loc 1 3097 6 view .LVU829
 2913 0022 2C2D     		cmp	r5, #44
3098:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2914              		.loc 1 3098 8 view .LVU830
 2915 0024 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
3097:src/keys.c    **** 			if (UState.intm) {
 2916              		.loc 1 3097 6 view .LVU831
 2917 0028 18D0     		beq	.L312
3107:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 2918              		.loc 1 3107 4 is_stmt 1 view .LVU832
3107:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 2919              		.loc 1 3107 7 is_stmt 0 view .LVU833
 2920 002a 13F00103 		ands	r3, r3, #1
 2921 002e 09D1     		bne	.L313
3113:src/keys.c    **** 		}
 2922              		.loc 1 3113 5 is_stmt 1 view .LVU834
3113:src/keys.c    **** 		}
 2923              		.loc 1 3113 19 is_stmt 0 view .LVU835
 2924 0030 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 2925 0032 63F3C502 		bfi	r2, r3, #3, #3
 2926 0036 2275     		strb	r2, [r4, #20]
 2927              	.L305:
3115:src/keys.c    **** 	}
 2928              		.loc 1 3115 3 is_stmt 1 view .LVU836
 2929              	.LVL234:
 2930              	.LBB413:
 2931              	.LBI413:
 743:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 2932              		.loc 1 743 13 view .LVU837
 2933              	.LBB414:
 744:src/keys.c    **** }
 2934              		.loc 1 744 2 view .LVU838
 744:src/keys.c    **** }
ARM GAS  /tmp/ccgiIQCZ.s 			page 120


 2935              		.loc 1 744 15 is_stmt 0 view .LVU839
 2936 0038 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 2937 003a 013B     		subs	r3, r3, #1
 2938 003c 18BF     		it	ne
 2939 003e 0123     		movne	r3, #1
 2940 0040 6374     		strb	r3, [r4, #17]
 2941              	.LVL235:
 744:src/keys.c    **** }
 2942              		.loc 1 744 15 view .LVU840
 2943              	.LBE414:
 2944              	.LBE413:
 2945              		.loc 1 3117 1 view .LVU841
 2946 0042 38BD     		pop	{r3, r4, r5, pc}
 2947              	.LVL236:
 2948              	.L313:
3108:src/keys.c    **** 					State2.window++;
 2949              		.loc 1 3108 5 is_stmt 1 view .LVU842
3108:src/keys.c    **** 					State2.window++;
 2950              		.loc 1 3108 22 is_stmt 0 view .LVU843
 2951 0044 134A     		ldr	r2, .L314+8
3108:src/keys.c    **** 					State2.window++;
 2952              		.loc 1 3108 42 view .LVU844
 2953 0046 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
3108:src/keys.c    **** 					State2.window++;
 2954              		.loc 1 3108 8 view .LVU845
 2955 0048 1168     		ldr	r1, [r2]
3108:src/keys.c    **** 					State2.window++;
 2956              		.loc 1 3108 42 view .LVU846
 2957 004a C3F3C202 		ubfx	r2, r3, #3, #3
3108:src/keys.c    **** 					State2.window++;
 2958              		.loc 1 3108 8 view .LVU847
 2959 004e 8A42     		cmp	r2, r1
 2960 0050 DBDA     		bge	.L299
3109:src/keys.c    **** 				return;
 2961              		.loc 1 3109 6 is_stmt 1 view .LVU848
3109:src/keys.c    **** 				return;
 2962              		.loc 1 3109 19 is_stmt 0 view .LVU849
 2963 0052 0132     		adds	r2, r2, #1
 2964 0054 62F3C503 		bfi	r3, r2, #3, #3
 2965 0058 2375     		strb	r3, [r4, #20]
 2966              		.loc 1 3117 1 view .LVU850
 2967 005a 38BD     		pop	{r3, r4, r5, pc}
 2968              	.LVL237:
 2969              	.L312:
3098:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2970              		.loc 1 3098 4 is_stmt 1 view .LVU851
3098:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2971              		.loc 1 3098 7 is_stmt 0 view .LVU852
 2972 005c DB07     		lsls	r3, r3, #31
 2973 005e 0ED5     		bpl	.L303
 2974              	.LBB415:
 2975              	.LBI415:
3090:src/keys.c    **** 
 2976              		.loc 1 3090 13 is_stmt 1 view .LVU853
 2977              	.LVL238:
 2978              	.LBB416:
3099:src/keys.c    **** 					State2.window--;
ARM GAS  /tmp/ccgiIQCZ.s 			page 121


 2979              		.loc 1 3099 5 view .LVU854
3099:src/keys.c    **** 					State2.window--;
 2980              		.loc 1 3099 22 is_stmt 0 view .LVU855
 2981 0060 0C4B     		ldr	r3, .L314+8
3099:src/keys.c    **** 					State2.window--;
 2982              		.loc 1 3099 8 view .LVU856
 2983 0062 1B68     		ldr	r3, [r3]
 2984 0064 002B     		cmp	r3, #0
 2985 0066 D0DD     		ble	.L299
3099:src/keys.c    **** 					State2.window--;
 2986              		.loc 1 3099 43 view .LVU857
 2987 0068 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
3099:src/keys.c    **** 					State2.window--;
 2988              		.loc 1 3099 26 view .LVU858
 2989 006a 13F0380F 		tst	r3, #56
 2990 006e CCD0     		beq	.L299
3100:src/keys.c    **** 				return;
 2991              		.loc 1 3100 6 is_stmt 1 view .LVU859
3100:src/keys.c    **** 				return;
 2992              		.loc 1 3100 12 is_stmt 0 view .LVU860
 2993 0070 C3F3C202 		ubfx	r2, r3, #3, #3
3100:src/keys.c    **** 				return;
 2994              		.loc 1 3100 19 view .LVU861
 2995 0074 0732     		adds	r2, r2, #7
 2996 0076 62F3C503 		bfi	r3, r2, #3, #3
 2997 007a 2375     		strb	r3, [r4, #20]
 2998              	.LBE416:
 2999              	.LBE415:
 3000              		.loc 1 3117 1 view .LVU862
 3001 007c 38BD     		pop	{r3, r4, r5, pc}
 3002              	.LVL239:
 3003              	.L303:
3104:src/keys.c    **** 		}
 3004              		.loc 1 3104 5 is_stmt 1 view .LVU863
3104:src/keys.c    **** 		}
 3005              		.loc 1 3104 21 is_stmt 0 view .LVU864
 3006 007e FFF7FEFF 		bl	is_dblmode
 3007              	.LVL240:
3104:src/keys.c    **** 		}
 3008              		.loc 1 3104 19 view .LVU865
 3009 0082 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 3010 0084 60F3C503 		bfi	r3, r0, #3, #3
 3011 0088 2375     		strb	r3, [r4, #20]
 3012 008a D5E7     		b	.L305
 3013              	.L315:
 3014              		.align	2
 3015              	.L314:
 3016 008c 00000000 		.word	StateWhileOn
 3017 0090 00000000 		.word	main_ram
 3018 0094 00000000 		.word	IntMaxWindow
 3019              		.cfi_endproc
 3020              	.LFE58:
 3022              		.section	.text.arg_storcl,"ax",%progbits
 3023              		.align	1
 3024              		.p2align 2,,3
 3025              		.syntax unified
 3026              		.thumb
ARM GAS  /tmp/ccgiIQCZ.s 			page 122


 3027              		.thumb_func
 3028              		.fpu fpv4-sp-d16
 3030              	arg_storcl:
 3031              	.LVL241:
 3032              	.LFB39:
2016:src/keys.c    **** 	unsigned int b = CmdBase;
 3033              		.loc 1 2016 56 is_stmt 1 view -0
 3034              		.cfi_startproc
 3035              		@ args = 0, pretend = 0, frame = 0
 3036              		@ frame_needed = 0, uses_anonymous_args = 0
 3037              		@ link register save eliminated.
2017:src/keys.c    **** 
 3038              		.loc 1 2017 2 view .LVU867
2017:src/keys.c    **** 
 3039              		.loc 1 2017 19 is_stmt 0 view .LVU868
 3040 0000 0F4A     		ldr	r2, .L348
 3041 0002 D37F     		ldrb	r3, [r2, #31]	@ zero_extendqisi2
 3042              	.LVL242:
2019:src/keys.c    **** 		CmdBase += n;
 3043              		.loc 1 2019 2 is_stmt 1 view .LVU869
 3044              	.LBB425:
 3045              	.LBI425:
2007:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3046              		.loc 1 2007 12 view .LVU870
 3047              	.LBB426:
2012:src/keys.c    **** #endif
 3048              		.loc 1 2012 2 view .LVU871
2012:src/keys.c    **** #endif
 3049              		.loc 1 2012 41 is_stmt 0 view .LVU872
 3050 0004 032B     		cmp	r3, #3
 3051 0006 14D0     		beq	.L317
2012:src/keys.c    **** #endif
 3052              		.loc 1 2012 24 view .LVU873
 3053 0008 0A2B     		cmp	r3, #10
 3054 000a 12D0     		beq	.L317
 3055              	.LVL243:
 3056              	.LBB427:
 3057              	.LBI427:
2007:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3058              		.loc 1 2007 12 is_stmt 1 view .LVU874
 3059              	.LBB428:
2012:src/keys.c    **** #endif
 3060              		.loc 1 2012 41 is_stmt 0 view .LVU875
 3061 000c 19B1     		cbz	r1, .L318
2012:src/keys.c    **** #endif
 3062              		.loc 1 2012 51 view .LVU876
 3063 000e 152B     		cmp	r3, #21
 3064 0010 0FD0     		beq	.L317
2012:src/keys.c    **** #endif
 3065              		.loc 1 2012 70 view .LVU877
 3066 0012 1A2B     		cmp	r3, #26
 3067 0014 0DD0     		beq	.L317
 3068              	.L318:
 3069              	.LVL244:
2012:src/keys.c    **** #endif
 3070              		.loc 1 2012 70 view .LVU878
 3071              	.LBE428:
ARM GAS  /tmp/ccgiIQCZ.s 			page 123


 3072              	.LBE427:
 3073              	.LBE426:
 3074              	.LBE425:
2024:src/keys.c    **** 		b -= n;
 3075              		.loc 1 2024 2 is_stmt 1 view .LVU879
2024:src/keys.c    **** 		b -= n;
 3076              		.loc 1 2024 5 is_stmt 0 view .LVU880
 3077 0016 8342     		cmp	r3, r0
 3078 0018 09D3     		bcc	.L323
2025:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 3079              		.loc 1 2025 3 is_stmt 1 view .LVU881
2025:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 3080              		.loc 1 2025 5 is_stmt 0 view .LVU882
 3081 001a 1B1A     		subs	r3, r3, r0
 3082              	.LVL245:
2026:src/keys.c    **** 			CmdBase = b;
 3083              		.loc 1 2026 3 is_stmt 1 view .LVU883
 3084              	.LBB429:
 3085              	.LBI429:
2007:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3086              		.loc 1 2007 12 view .LVU884
 3087              	.LBB430:
2012:src/keys.c    **** #endif
 3088              		.loc 1 2012 2 view .LVU885
2012:src/keys.c    **** #endif
 3089              		.loc 1 2012 41 is_stmt 0 view .LVU886
 3090 001c 032B     		cmp	r3, #3
 3091 001e 0CD0     		beq	.L321
2012:src/keys.c    **** #endif
 3092              		.loc 1 2012 24 view .LVU887
 3093 0020 0A2B     		cmp	r3, #10
 3094 0022 0AD0     		beq	.L321
 3095              	.LVL246:
 3096              	.LBB431:
 3097              	.LBI431:
2007:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3098              		.loc 1 2007 12 is_stmt 1 view .LVU888
 3099              	.LBB432:
2012:src/keys.c    **** #endif
 3100              		.loc 1 2012 41 is_stmt 0 view .LVU889
 3101 0024 19B1     		cbz	r1, .L323
2012:src/keys.c    **** #endif
 3102              		.loc 1 2012 51 view .LVU890
 3103 0026 152B     		cmp	r3, #21
 3104 0028 07D0     		beq	.L321
2012:src/keys.c    **** #endif
 3105              		.loc 1 2012 70 view .LVU891
 3106 002a 1A2B     		cmp	r3, #26
 3107 002c 05D0     		beq	.L321
 3108              	.LVL247:
 3109              	.L323:
2012:src/keys.c    **** #endif
 3110              		.loc 1 2012 70 view .LVU892
 3111              	.LBE432:
 3112              	.LBE431:
 3113              	.LBE430:
 3114              	.LBE429:
ARM GAS  /tmp/ccgiIQCZ.s 			page 124


2031:src/keys.c    **** }
 3115              		.loc 1 2031 9 view .LVU893
 3116 002e 0020     		movs	r0, #0
 3117              	.LVL248:
2032:src/keys.c    **** 
 3118              		.loc 1 2032 1 view .LVU894
 3119 0030 7047     		bx	lr
 3120              	.LVL249:
 3121              	.L317:
2020:src/keys.c    **** 		return 1;
 3122              		.loc 1 2020 3 is_stmt 1 view .LVU895
2020:src/keys.c    **** 		return 1;
 3123              		.loc 1 2020 11 is_stmt 0 view .LVU896
 3124 0032 1844     		add	r0, r0, r3
 3125              	.LVL250:
2020:src/keys.c    **** 		return 1;
 3126              		.loc 1 2020 11 view .LVU897
 3127 0034 D077     		strb	r0, [r2, #31]
2021:src/keys.c    **** 	}
 3128              		.loc 1 2021 3 is_stmt 1 view .LVU898
2021:src/keys.c    **** 	}
 3129              		.loc 1 2021 10 is_stmt 0 view .LVU899
 3130 0036 0120     		movs	r0, #1
 3131 0038 7047     		bx	lr
 3132              	.LVL251:
 3133              	.L321:
2027:src/keys.c    **** 			return 1;
 3134              		.loc 1 2027 4 is_stmt 1 view .LVU900
2027:src/keys.c    **** 			return 1;
 3135              		.loc 1 2027 12 is_stmt 0 view .LVU901
 3136 003a D377     		strb	r3, [r2, #31]
2028:src/keys.c    **** 		}
 3137              		.loc 1 2028 4 is_stmt 1 view .LVU902
2028:src/keys.c    **** 		}
 3138              		.loc 1 2028 11 is_stmt 0 view .LVU903
 3139 003c 0120     		movs	r0, #1
 3140              	.LVL252:
2028:src/keys.c    **** 		}
 3141              		.loc 1 2028 11 view .LVU904
 3142 003e 7047     		bx	lr
 3143              	.L349:
 3144              		.align	2
 3145              	.L348:
 3146 0040 00000000 		.word	StateWhileOn
 3147              		.cfi_endproc
 3148              	.LFE39:
 3150              		.section	.text.process_arg,"ax",%progbits
 3151              		.align	1
 3152              		.p2align 2,,3
 3153              		.syntax unified
 3154              		.thumb
 3155              		.thumb_func
 3156              		.fpu fpv4-sp-d16
 3158              	process_arg:
 3159              	.LVL253:
 3160              	.LFB42:
2066:src/keys.c    **** 	unsigned int base = CmdBase;
ARM GAS  /tmp/ccgiIQCZ.s 			page 125


 3161              		.loc 1 2066 41 is_stmt 1 view -0
 3162              		.cfi_startproc
 3163              		@ args = 0, pretend = 0, frame = 8
 3164              		@ frame_needed = 0, uses_anonymous_args = 0
2067:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3165              		.loc 1 2067 2 view .LVU906
2066:src/keys.c    **** 	unsigned int base = CmdBase;
 3166              		.loc 1 2066 41 is_stmt 0 view .LVU907
 3167 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3168              		.cfi_def_cfa_offset 36
 3169              		.cfi_offset 4, -36
 3170              		.cfi_offset 5, -32
 3171              		.cfi_offset 6, -28
 3172              		.cfi_offset 7, -24
 3173              		.cfi_offset 8, -20
 3174              		.cfi_offset 9, -16
 3175              		.cfi_offset 10, -12
 3176              		.cfi_offset 11, -8
 3177              		.cfi_offset 14, -4
2067:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3178              		.loc 1 2067 22 view .LVU908
 3179 0004 C94C     		ldr	r4, .L494
2069:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3180              		.loc 1 2069 31 view .LVU909
 3181 0006 DFF834A3 		ldr	r10, .L494+16
2067:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3182              		.loc 1 2067 22 view .LVU910
 3183 000a E57F     		ldrb	r5, [r4, #31]	@ zero_extendqisi2
 3184              	.LBB454:
 3185              	.LBB455:
 3186              	.LBB456:
 3187              	.LBB457:
 143:src/keys.c    **** }
 3188              		.loc 1 143 23 view .LVU911
 3189 000c C84A     		ldr	r2, .L494+4
 3190              	.LBE457:
 3191              	.LBE456:
 234:src/keys.c    **** }
 3192              		.loc 1 234 28 view .LVU912
 3193 000e C94E     		ldr	r6, .L494+8
 3194              	.LBB460:
 3195              	.LBB458:
 143:src/keys.c    **** }
 3196              		.loc 1 143 23 view .LVU913
 3197 0010 125C     		ldrb	r2, [r2, r0]	@ zero_extendqisi2
 3198              	.LBE458:
 3199              	.LBE460:
 3200              	.LBE455:
 3201              	.LBE454:
2070:src/keys.c    **** 	const enum shifts shift = reset_shift();
 3202              		.loc 1 2070 20 view .LVU914
 3203 0012 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 3204              	.LBB464:
 3205              	.LBB462:
 234:src/keys.c    **** }
 3206              		.loc 1 234 28 view .LVU915
 3207 0014 16F80290 		ldrb	r9, [r6, r2]	@ zero_extendqisi2
ARM GAS  /tmp/ccgiIQCZ.s 			page 126


 3208              	.LBE462:
 3209              	.LBE464:
2069:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3210              		.loc 1 2069 31 view .LVU916
 3211 0018 0AEB0511 		add	r1, r10, r5, lsl #4
2066:src/keys.c    **** 	unsigned int base = CmdBase;
 3212              		.loc 1 2066 41 view .LVU917
 3213 001c 83B0     		sub	sp, sp, #12
 3214              		.cfi_def_cfa_offset 48
2069:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3215              		.loc 1 2069 31 view .LVU918
 3216 001e 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
2067:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3217              		.loc 1 2067 15 view .LVU919
 3218 0020 0095     		str	r5, [sp]
 3219              	.LVL254:
2068:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
 3220              		.loc 1 2068 2 is_stmt 1 view .LVU920
2069:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3221              		.loc 1 2069 40 is_stmt 0 view .LVU921
 3222 0022 4A07     		lsls	r2, r1, #29
 3223 0024 58BF     		it	pl
 3224 0026 94F91580 		ldrsbpl	r8, [r4, #21]
2070:src/keys.c    **** 	const enum shifts shift = reset_shift();
 3225              		.loc 1 2070 20 view .LVU922
 3226 002a 0193     		str	r3, [sp, #4]
2069:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3227              		.loc 1 2069 40 view .LVU923
 3228 002c 54BF     		ite	pl
 3229 002e 4FEAD878 		lsrpl	r8, r8, #31
 3230 0032 4FF00108 		movmi	r8, #1
2066:src/keys.c    **** 	unsigned int base = CmdBase;
 3231              		.loc 1 2066 41 view .LVU924
 3232 0036 0746     		mov	r7, r0
 3233              	.LVL255:
 3234              	.LBB465:
 3235              	.LBI454:
 210:src/keys.c    **** {
 3236              		.loc 1 210 14 is_stmt 1 view .LVU925
 3237              	.LBB463:
 212:src/keys.c    ****     // K00 - K05
 3238              		.loc 1 212 3 view .LVU926
 234:src/keys.c    **** }
 3239              		.loc 1 234 3 view .LVU927
 3240              	.LBB461:
 3241              	.LBI456:
 131:src/keys.c    **** {
 3242              		.loc 1 131 12 view .LVU928
 3243              	.LBB459:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3244              		.loc 1 133 2 view .LVU929
 143:src/keys.c    **** }
 3245              		.loc 1 143 2 view .LVU930
 143:src/keys.c    **** }
 3246              		.loc 1 143 2 is_stmt 0 view .LVU931
 3247              	.LBE459:
 3248              	.LBE461:
ARM GAS  /tmp/ccgiIQCZ.s 			page 127


 234:src/keys.c    **** }
 3249              		.loc 1 234 10 view .LVU932
 3250 0038 4E46     		mov	r6, r9
 3251              	.LVL256:
 234:src/keys.c    **** }
 3252              		.loc 1 234 10 view .LVU933
 3253              	.LBE463:
 3254              	.LBE465:
2069:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3255              		.loc 1 2069 2 is_stmt 1 view .LVU934
2070:src/keys.c    **** 	const enum shifts shift = reset_shift();
 3256              		.loc 1 2070 2 view .LVU935
2071:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
 3257              		.loc 1 2071 2 view .LVU936
 3258              	.LBB466:
 3259              	.LBI466:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 3260              		.loc 1 114 13 view .LVU937
 3261              	.LBE466:
 115:src/keys.c    **** }
 3262              		.loc 1 115 2 view .LVU938
 3263              	.LBB479:
 3264              	.LBB467:
 3265              	.LBI467:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 3266              		.loc 1 104 20 view .LVU939
 3267              	.LBB468:
 105:src/keys.c    **** 	State2.shifts = shift;
 3268              		.loc 1 105 2 view .LVU940
 3269              	.LBB469:
 3270              	.LBI469:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 3271              		.loc 1 96 13 view .LVU941
 3272              	.LBB470:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3273              		.loc 1 97 2 view .LVU942
 3274              	.LBE470:
 3275              	.LBE469:
 3276              	.LBE468:
 3277              	.LBE467:
 3278              	.LBE479:
2069:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3279              		.loc 1 2069 31 is_stmt 0 view .LVU943
 3280 003a 4FEA051B 		lsl	fp, r5, #4
 3281              	.LBB480:
 3282              	.LBB476:
 3283              	.LBB473:
 3284              	.LBB472:
 3285              	.LBB471:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3286              		.loc 1 97 18 view .LVU944
 3287 003e FFF7FEFF 		bl	shift_down
 3288              	.LVL257:
  98:src/keys.c    **** }
 3289              		.loc 1 98 2 is_stmt 1 view .LVU945
  98:src/keys.c    **** }
 3290              		.loc 1 98 52 is_stmt 0 view .LVU946
ARM GAS  /tmp/ccgiIQCZ.s 			page 128


 3291 0042 00B9     		cbnz	r0, .L352
 3292 0044 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
 3293              	.LVL258:
 3294              	.L352:
  98:src/keys.c    **** }
 3295              		.loc 1 98 52 view .LVU947
 3296              	.LBE471:
 3297              	.LBE472:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3298              		.loc 1 106 2 is_stmt 1 view .LVU948
 3299              	.LBE473:
 3300              	.LBE476:
 3301              	.LBE480:
2072:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3302              		.loc 1 2072 38 is_stmt 0 view .LVU949
 3303 0046 D344     		add	fp, fp, r10
 3304              	.LBB481:
 3305              	.LBB477:
 3306              	.LBB474:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3307              		.loc 1 106 16 view .LVU950
 3308 0048 4FF0000E 		mov	lr, #0
 3309              	.LBE474:
 3310              	.LBE477:
 3311              	.LBE481:
2072:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3312              		.loc 1 2072 38 view .LVU951
 3313 004c 9BF80510 		ldrb	r1, [fp, #5]	@ zero_extendqisi2
 3314              	.LBB482:
 3315              	.LBB478:
 3316              	.LBB475:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3317              		.loc 1 106 16 view .LVU952
 3318 0050 84F810E0 		strb	lr, [r4, #16]
 108:src/keys.c    **** }
 3319              		.loc 1 108 2 is_stmt 1 view .LVU953
 3320              	.LVL259:
 108:src/keys.c    **** }
 3321              		.loc 1 108 2 is_stmt 0 view .LVU954
 3322              	.LBE475:
 3323              	.LBE478:
 3324              	.LBE482:
2072:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3325              		.loc 1 2072 2 is_stmt 1 view .LVU955
2072:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3326              		.loc 1 2072 61 is_stmt 0 view .LVU956
 3327 0054 8B06     		lsls	r3, r1, #26
 3328 0056 C1F3401C 		ubfx	ip, r1, #5, #1
 3329 005a 19D5     		bpl	.L353
2072:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3330              		.loc 1 2072 61 discriminator 1 view .LVU957
 3331 005c 617D     		ldrb	r1, [r4, #21]	@ zero_extendqisi2
 3332 005e 11F0C00F 		tst	r1, #192
 3333 0062 1FD0     		beq	.L482
 3334              	.LVL260:
2076:src/keys.c    **** 	if (base >= NUM_RARG) {
 3335              		.loc 1 2076 2 is_stmt 1 view .LVU958
ARM GAS  /tmp/ccgiIQCZ.s 			page 129


2077:src/keys.c    **** 		reset_arg();
 3336              		.loc 1 2077 5 is_stmt 0 view .LVU959
 3337 0064 9E2D     		cmp	r5, #158
2076:src/keys.c    **** 	if (base >= NUM_RARG) {
 3338              		.loc 1 2076 4 view .LVU960
 3339 0066 29F08006 		bic	r6, r9, #128
 3340              	.LVL261:
2077:src/keys.c    **** 		reset_arg();
 3341              		.loc 1 2077 2 is_stmt 1 view .LVU961
2077:src/keys.c    **** 		reset_arg();
 3342              		.loc 1 2077 5 is_stmt 0 view .LVU962
 3343 006a 15D8     		bhi	.L382
2072:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3344              		.loc 1 2072 61 view .LVU963
 3345 006c F446     		mov	ip, lr
 3346              	.L362:
2082:src/keys.c    **** 	  switch (n) {
 3347              		.loc 1 2082 35 discriminator 1 view .LVU964
 3348 006e 6169     		ldr	r1, [r4, #20]
 3349 0070 11F4103F 		tst	r1, #147456
 3350 0074 2ED1     		bne	.L364
2083:src/keys.c    **** 	  case regX_idx:
 3351              		.loc 1 2083 4 is_stmt 1 view .LVU965
 3352 0076 672E     		cmp	r6, #103
 3353 0078 2CD8     		bhi	.L364
2083:src/keys.c    **** 	  case regX_idx:
 3354              		.loc 1 2083 4 is_stmt 0 view .LVU966
 3355 007a 632E     		cmp	r6, #99
 3356 007c 24D9     		bls	.L424
 3357 007e 653E     		subs	r6, r6, #101
 3358              	.LVL262:
2083:src/keys.c    **** 	  case regX_idx:
 3359              		.loc 1 2083 4 view .LVU967
 3360 0080 022E     		cmp	r6, #2
 3361 0082 00F26082 		bhi	.L367
 3362 0086 DFE816F0 		tbh	[pc, r6, lsl #1]
 3363              	.L369:
 3364 008a 1101     		.2byte	(.L371-.L369)/2
 3365 008c 0B01     		.2byte	(.L370-.L369)/2
 3366 008e 1301     		.2byte	(.L368-.L369)/2
 3367              	.LVL263:
 3368              		.p2align 1
 3369              	.L353:
2076:src/keys.c    **** 	if (base >= NUM_RARG) {
 3370              		.loc 1 2076 2 is_stmt 1 view .LVU968
2077:src/keys.c    **** 		reset_arg();
 3371              		.loc 1 2077 5 is_stmt 0 view .LVU969
 3372 0090 9E2D     		cmp	r5, #158
2076:src/keys.c    **** 	if (base >= NUM_RARG) {
 3373              		.loc 1 2076 4 view .LVU970
 3374 0092 29F08006 		bic	r6, r9, #128
 3375              	.LVL264:
2077:src/keys.c    **** 		reset_arg();
 3376              		.loc 1 2077 2 is_stmt 1 view .LVU971
2077:src/keys.c    **** 		reset_arg();
 3377              		.loc 1 2077 5 is_stmt 0 view .LVU972
 3378 0096 EAD9     		bls	.L362
ARM GAS  /tmp/ccgiIQCZ.s 			page 130


 3379              	.LVL265:
 3380              	.L382:
2332:src/keys.c    **** 	default:
 3381              		.loc 1 2332 3 is_stmt 1 view .LVU973
 3382 0098 FFF7FEFF 		bl	reset_arg
 3383              	.LVL266:
 3384              	.L475:
2336:src/keys.c    **** }
 3385              		.loc 1 2336 9 is_stmt 0 view .LVU974
 3386 009c 3320     		movs	r0, #51
 3387              	.L350:
2337:src/keys.c    **** 
 3388              		.loc 1 2337 1 view .LVU975
 3389 009e 03B0     		add	sp, sp, #12
 3390              		.cfi_remember_state
 3391              		.cfi_def_cfa_offset 36
 3392              		@ sp needed
 3393 00a0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3394              	.LVL267:
 3395              	.L482:
 3396              		.cfi_restore_state
2073:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 3397              		.loc 1 2073 2 is_stmt 1 view .LVU976
2073:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 3398              		.loc 1 2073 35 is_stmt 0 view .LVU977
 3399 00a4 292F     		cmp	r7, #41
 3400 00a6 00F0C080 		beq	.L355
2074:src/keys.c    **** 
 3401              		.loc 1 2074 11 view .LVU978
 3402 00aa 0128     		cmp	r0, #1
 3403 00ac 00F0D180 		beq	.L356
2074:src/keys.c    **** 
 3404              		.loc 1 2074 32 discriminator 3 view .LVU979
 3405 00b0 B9F1090F 		cmp	r9, #9
 3406 00b4 00F2B680 		bhi	.L357
 3407              	.LVL268:
2076:src/keys.c    **** 	if (base >= NUM_RARG) {
 3408              		.loc 1 2076 2 is_stmt 1 view .LVU980
2077:src/keys.c    **** 		reset_arg();
 3409              		.loc 1 2077 2 view .LVU981
2077:src/keys.c    **** 		reset_arg();
 3410              		.loc 1 2077 5 is_stmt 0 view .LVU982
 3411 00b8 9E2D     		cmp	r5, #158
 3412 00ba EDD8     		bhi	.L382
2082:src/keys.c    **** 	  switch (n) {
 3413              		.loc 1 2082 35 view .LVU983
 3414 00bc 6169     		ldr	r1, [r4, #20]
 3415 00be 11F4103F 		tst	r1, #147456
2072:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3416              		.loc 1 2072 61 view .LVU984
 3417 00c2 4FF0010C 		mov	ip, #1
2082:src/keys.c    **** 	  switch (n) {
 3418              		.loc 1 2082 35 view .LVU985
 3419 00c6 05D1     		bne	.L364
 3420              	.L424:
2083:src/keys.c    **** 	  case regX_idx:
 3421              		.loc 1 2083 4 view .LVU986
ARM GAS  /tmp/ccgiIQCZ.s 			page 131


 3422 00c8 16B1     		cbz	r6, .L366
 3423 00ca 721F     		subs	r2, r6, #5
 3424 00cc 042A     		cmp	r2, #4
 3425 00ce 01D8     		bhi	.L364
 3426              	.L366:
2098:src/keys.c    **** 	  }
 3427              		.loc 1 2098 6 is_stmt 1 view .LVU987
2098:src/keys.c    **** 	  }
 3428              		.loc 1 2098 13 is_stmt 0 view .LVU988
 3429 00d0 3046     		mov	r0, r6
 3430              	.LVL269:
2098:src/keys.c    **** 	  }
 3431              		.loc 1 2098 13 view .LVU989
 3432 00d2 E6E0     		b	.L476
 3433              	.LVL270:
 3434              	.L364:
2105:src/keys.c    **** 		// row column shorthand addressing
 3435              		.loc 1 2105 2 is_stmt 1 view .LVU990
2111:src/keys.c    **** 		switch ((int)c) {
 3436              		.loc 1 2111 2 view .LVU991
2111:src/keys.c    **** 		switch ((int)c) {
 3437              		.loc 1 2111 5 is_stmt 0 view .LVU992
 3438 00d4 4D2D     		cmp	r5, #77
 3439 00d6 00F0B180 		beq	.L483
2111:src/keys.c    **** 		switch ((int)c) {
 3440              		.loc 1 2111 23 discriminator 1 view .LVU993
 3441 00da 05F16402 		add	r2, r5, #100
 3442 00de D2B2     		uxtb	r2, r2
 3443 00e0 012A     		cmp	r2, #1
 3444 00e2 61D9     		bls	.L484
 3445              	.LVL271:
 3446              	.L373:
2142:src/keys.c    **** #else
 3447              		.loc 1 2142 3 is_stmt 1 view .LVU994
2142:src/keys.c    **** #else
 3448              		.loc 1 2142 11 is_stmt 0 view .LVU995
 3449 00e4 E577     		strb	r5, [r4, #31]
2165:src/keys.c    **** 	case K_F:
 3450              		.loc 1 2165 2 is_stmt 1 view .LVU996
 3451 00e6 2D2F     		cmp	r7, #45
 3452 00e8 D8D8     		bhi	.L475
 3453 00ea 01A3     		adr	r3, .L377
 3454 00ec 53F827F0 		ldr	pc, [r3, r7, lsl #2]
 3455              		.p2align 2
 3456              	.L377:
 3457 00f0 C1010000 		.word	.L394+1
 3458 00f4 C1010000 		.word	.L394+1
 3459 00f8 C1010000 		.word	.L394+1
 3460 00fc C1010000 		.word	.L394+1
 3461 0100 9D000000 		.word	.L475+1
 3462 0104 9D000000 		.word	.L475+1
 3463 0108 9D000000 		.word	.L475+1
 3464 010c 9D000000 		.word	.L475+1
 3465 0110 C1010000 		.word	.L394+1
 3466 0114 C1010000 		.word	.L394+1
 3467 0118 C1010000 		.word	.L394+1
 3468 011c C1010000 		.word	.L394+1
ARM GAS  /tmp/ccgiIQCZ.s 			page 132


 3469 0120 45040000 		.word	.L393+1
 3470 0124 9D000000 		.word	.L475+1
 3471 0128 9D000000 		.word	.L475+1
 3472 012c 9D000000 		.word	.L475+1
 3473 0130 C7020000 		.word	.L392+1
 3474 0134 9D000000 		.word	.L475+1
 3475 0138 19020000 		.word	.L391+1
 3476 013c 9D000000 		.word	.L475+1
 3477 0140 9D000000 		.word	.L475+1
 3478 0144 9D000000 		.word	.L475+1
 3479 0148 F3020000 		.word	.L390+1
 3480 014c 9D000000 		.word	.L475+1
 3481 0150 FF020000 		.word	.L389+1
 3482 0154 0B030000 		.word	.L388+1
 3483 0158 9D000000 		.word	.L475+1
 3484 015c 9D000000 		.word	.L475+1
 3485 0160 81020000 		.word	.L387+1
 3486 0164 9D000000 		.word	.L475+1
 3487 0168 9D000000 		.word	.L475+1
 3488 016c 1F030000 		.word	.L386+1
 3489 0170 4D040000 		.word	.L385+1
 3490 0174 41030000 		.word	.L384+1
 3491 0178 4D030000 		.word	.L383+1
 3492 017c 9D000000 		.word	.L475+1
 3493 0180 99000000 		.word	.L382+1
 3494 0184 9D000000 		.word	.L475+1
 3495 0188 67030000 		.word	.L381+1
 3496 018c 9D000000 		.word	.L475+1
 3497 0190 AD030000 		.word	.L380+1
 3498 0194 CD030000 		.word	.L379+1
 3499 0198 9D000000 		.word	.L475+1
 3500 019c 9D000000 		.word	.L475+1
 3501 01a0 ED030000 		.word	.L378+1
 3502 01a4 25040000 		.word	.L376+1
 3503              	.LVL272:
 3504              		.p2align 1
 3505              	.L484:
2112:src/keys.c    **** 		case K_UP:	// up arrow
 3506              		.loc 1 2112 3 view .LVU997
 3507 01a8 122F     		cmp	r7, #18
 3508 01aa 2FD0     		beq	.L420
 3509 01ac 182F     		cmp	r7, #24
 3510 01ae 01D0     		beq	.L421
 3511 01b0 012F     		cmp	r7, #1
 3512 01b2 97D1     		bne	.L373
 3513              	.L421:
2128:src/keys.c    **** 		    base = RARG_SIG0;
 3514              		.loc 1 2128 5 view .LVU998
2132:src/keys.c    **** 		    base = RARG_FIX;
 3515              		.loc 1 2132 5 view .LVU999
2132:src/keys.c    **** 		    base = RARG_FIX;
 3516              		.loc 1 2132 8 is_stmt 0 view .LVU1000
 3517 01b4 9C2D     		cmp	r5, #156
 3518 01b6 7DD1     		bne	.L485
 3519 01b8 4D23     		movs	r3, #77
 3520 01ba 0093     		str	r3, [sp]
 3521              	.LVL273:
ARM GAS  /tmp/ccgiIQCZ.s 			page 133


2133:src/keys.c    **** 		    break;
 3522              		.loc 1 2133 12 view .LVU1001
 3523 01bc 1D46     		mov	r5, r3
 3524 01be 91E7     		b	.L373
 3525              	.LVL274:
 3526              	.L394:
2220:src/keys.c    **** 			return arg_eval(n);
 3527              		.loc 1 2220 4 is_stmt 1 view .LVU1002
2220:src/keys.c    **** 			return arg_eval(n);
 3528              		.loc 1 2220 8 is_stmt 0 view .LVU1003
 3529 01c0 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
2220:src/keys.c    **** 			return arg_eval(n);
 3530              		.loc 1 2220 7 view .LVU1004
 3531 01c2 5306     		lsls	r3, r2, #25
 3532 01c4 6AD4     		bmi	.L409
2220:src/keys.c    **** 			return arg_eval(n);
 3533              		.loc 1 2220 19 discriminator 1 view .LVU1005
 3534 01c6 B8F1000F 		cmp	r8, #0
 3535 01ca 67D1     		bne	.L409
2222:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 3536              		.loc 1 2222 3 is_stmt 1 view .LVU1006
2222:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 3537              		.loc 1 2222 6 is_stmt 0 view .LVU1007
 3538 01cc 032F     		cmp	r7, #3
 3539 01ce 3FF665AF 		bhi	.L475
2223:src/keys.c    **** 		break;
 3540              		.loc 1 2223 4 is_stmt 1 view .LVU1008
 3541              	.LVL275:
 3542              	.LBB483:
 3543              	.LBI483:
1993:src/keys.c    **** 	const unsigned int b = CmdBase;
 3544              		.loc 1 1993 12 view .LVU1009
 3545              	.LBB484:
1994:src/keys.c    **** 
 3546              		.loc 1 1994 2 view .LVU1010
1996:src/keys.c    **** 	{
 3547              		.loc 1 1996 2 view .LVU1011
1996:src/keys.c    **** 	{
 3548              		.loc 1 1996 16 is_stmt 0 view .LVU1012
 3549 01d2 009B     		ldr	r3, [sp]
 3550 01d4 0AEB0311 		add	r1, r10, r3, lsl #4
 3551 01d8 1801     		lsls	r0, r3, #4
 3552 01da 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
1996:src/keys.c    **** 	{
 3553              		.loc 1 1996 5 view .LVU1013
 3554 01dc 8D06     		lsls	r5, r1, #26
 3555 01de 05D4     		bmi	.L400
1996:src/keys.c    **** 	{
 3556              		.loc 1 1996 40 view .LVU1014
 3557 01e0 A3F15109 		sub	r9, r3, #81
1996:src/keys.c    **** 	{
 3558              		.loc 1 1996 23 view .LVU1015
 3559 01e4 B9F10A0F 		cmp	r9, #10
 3560 01e8 3FF658AF 		bhi	.L475
 3561              	.L400:
1998:src/keys.c    **** 			return STATE_UNFINISHED;
 3562              		.loc 1 1998 3 is_stmt 1 view .LVU1016
ARM GAS  /tmp/ccgiIQCZ.s 			page 134


1998:src/keys.c    **** 			return STATE_UNFINISHED;
 3563              		.loc 1 1998 6 is_stmt 0 view .LVU1017
 3564 01ec 1106     		lsls	r1, r2, #24
 3565 01ee 3FF555AF 		bmi	.L475
1998:src/keys.c    **** 			return STATE_UNFINISHED;
 3566              		.loc 1 1998 18 view .LVU1018
 3567 01f2 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 3568 01f4 002A     		cmp	r2, #0
 3569 01f6 7FF451AF 		bne	.L475
2000:src/keys.c    **** 			return STATE_UNFINISHED;
 3570              		.loc 1 2000 3 is_stmt 1 view .LVU1019
2000:src/keys.c    **** 			return STATE_UNFINISHED;
 3571              		.loc 1 2000 17 is_stmt 0 view .LVU1020
 3572 01fa 0AEB0003 		add	r3, r10, r0
2000:src/keys.c    **** 			return STATE_UNFINISHED;
 3573              		.loc 1 2000 6 view .LVU1021
 3574 01fe 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3575 0200 632B     		cmp	r3, #99
 3576 0202 7FF64BAF 		bls	.L475
2002:src/keys.c    **** 	}
 3577              		.loc 1 2002 3 is_stmt 1 view .LVU1022
2002:src/keys.c    **** 	}
 3578              		.loc 1 2002 10 is_stmt 0 view .LVU1023
 3579 0206 07F16400 		add	r0, r7, #100
 3580 020a 34E0     		b	.L477
 3581              	.LVL276:
 3582              	.L420:
2002:src/keys.c    **** 	}
 3583              		.loc 1 2002 10 view .LVU1024
 3584              	.LBE484:
 3585              	.LBE483:
2114:src/keys.c    **** 		    base = RARG_SIG;
 3586              		.loc 1 2114 5 is_stmt 1 view .LVU1025
2118:src/keys.c    **** 		    base = RARG_SIG0;
 3587              		.loc 1 2118 5 view .LVU1026
2118:src/keys.c    **** 		    base = RARG_SIG0;
 3588              		.loc 1 2118 8 is_stmt 0 view .LVU1027
 3589 020c 9C2D     		cmp	r5, #156
 3590 020e 01D0     		beq	.L470
2122:src/keys.c    **** 		    base = RARG_FIX;
 3591              		.loc 1 2122 5 is_stmt 1 view .LVU1028
2122:src/keys.c    **** 		    base = RARG_FIX;
 3592              		.loc 1 2122 8 is_stmt 0 view .LVU1029
 3593 0210 9D2D     		cmp	r5, #157
 3594 0212 56D0     		beq	.L486
 3595              	.L470:
2142:src/keys.c    **** #else
 3596              		.loc 1 2142 3 is_stmt 1 view .LVU1030
2142:src/keys.c    **** #else
 3597              		.loc 1 2142 11 is_stmt 0 view .LVU1031
 3598 0214 9D23     		movs	r3, #157
 3599              	.LVL277:
 3600              	.L474:
2142:src/keys.c    **** #else
 3601              		.loc 1 2142 11 view .LVU1032
 3602 0216 E377     		strb	r3, [r4, #31]
2165:src/keys.c    **** 	case K_F:
ARM GAS  /tmp/ccgiIQCZ.s 			page 135


 3603              		.loc 1 2165 2 is_stmt 1 view .LVU1033
 3604              	.L391:
2282:src/keys.c    **** 		break;
 3605              		.loc 1 2282 3 view .LVU1034
 3606 0218 0021     		movs	r1, #0
 3607 021a 0620     		movs	r0, #6
 3608              	.LVL278:
2282:src/keys.c    **** 		break;
 3609              		.loc 1 2282 3 is_stmt 0 view .LVU1035
 3610 021c FFF7FEFF 		bl	arg_storcl
 3611              	.LVL279:
2283:src/keys.c    **** 
 3612              		.loc 1 2283 3 is_stmt 1 view .LVU1036
2336:src/keys.c    **** }
 3613              		.loc 1 2336 9 is_stmt 0 view .LVU1037
 3614 0220 3320     		movs	r0, #51
2283:src/keys.c    **** 
 3615              		.loc 1 2283 3 view .LVU1038
 3616 0222 3CE7     		b	.L350
 3617              	.LVL280:
 3618              	.L357:
2074:src/keys.c    **** 
 3619              		.loc 1 2074 42 discriminator 4 view .LVU1039
 3620 0224 19F0800F 		tst	r9, #128
 3621 0228 13D0     		beq	.L356
 3622              	.L355:
 3623              	.LVL281:
2076:src/keys.c    **** 	if (base >= NUM_RARG) {
 3624              		.loc 1 2076 2 is_stmt 1 view .LVU1040
2077:src/keys.c    **** 		reset_arg();
 3625              		.loc 1 2077 5 is_stmt 0 view .LVU1041
 3626 022a 9E2D     		cmp	r5, #158
2076:src/keys.c    **** 	if (base >= NUM_RARG) {
 3627              		.loc 1 2076 4 view .LVU1042
 3628 022c 29F08006 		bic	r6, r9, #128
 3629              	.LVL282:
2077:src/keys.c    **** 		reset_arg();
 3630              		.loc 1 2077 2 is_stmt 1 view .LVU1043
2072:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3631              		.loc 1 2072 61 is_stmt 0 view .LVU1044
 3632 0230 98BF     		it	ls
 3633 0232 4FF0010C 		movls	ip, #1
2077:src/keys.c    **** 		reset_arg();
 3634              		.loc 1 2077 5 view .LVU1045
 3635 0236 7FF61AAF 		bls	.L362
 3636 023a 2DE7     		b	.L382
 3637              	.L483:
2112:src/keys.c    **** 		case K_UP:	// up arrow
 3638              		.loc 1 2112 3 is_stmt 1 view .LVU1046
 3639 023c 122F     		cmp	r7, #18
 3640 023e 00F00B81 		beq	.L432
 3641 0242 182F     		cmp	r7, #24
 3642 0244 02D0     		beq	.L434
 3643 0246 012F     		cmp	r7, #1
 3644 0248 7FF44CAF 		bne	.L373
 3645              	.L434:
 3646 024c 9D25     		movs	r5, #157
ARM GAS  /tmp/ccgiIQCZ.s 			page 136


 3647              	.LVL283:
2129:src/keys.c    **** 		    break;
 3648              		.loc 1 2129 12 is_stmt 0 view .LVU1047
 3649 024e 0095     		str	r5, [sp]
 3650 0250 48E7     		b	.L373
 3651              	.LVL284:
 3652              	.L356:
2076:src/keys.c    **** 	if (base >= NUM_RARG) {
 3653              		.loc 1 2076 2 is_stmt 1 view .LVU1048
2077:src/keys.c    **** 		reset_arg();
 3654              		.loc 1 2077 2 view .LVU1049
2077:src/keys.c    **** 		reset_arg();
 3655              		.loc 1 2077 5 is_stmt 0 view .LVU1050
 3656 0252 9E2D     		cmp	r5, #158
 3657 0254 3FF620AF 		bhi	.L382
2105:src/keys.c    **** 		// row column shorthand addressing
 3658              		.loc 1 2105 2 is_stmt 1 view .LVU1051
2107:src/keys.c    **** 
 3659              		.loc 1 2107 3 view .LVU1052
 3660              	.LVL285:
 3661              	.LBB485:
 3662              	.LBI485:
 179:src/keys.c    **** {
 3663              		.loc 1 179 5 view .LVU1053
 3664              	.LBB486:
 181:src/keys.c    **** }
 3665              		.loc 1 181 2 view .LVU1054
 181:src/keys.c    **** }
 3666              		.loc 1 181 18 is_stmt 0 view .LVU1055
 3667 0258 374B     		ldr	r3, .L494+12
 3668 025a A3FB0723 		umull	r2, r3, r3, r7
 181:src/keys.c    **** }
 3669              		.loc 1 181 24 view .LVU1056
 3670 025e 03F0FC00 		and	r0, r3, #252
 3671              	.LVL286:
 181:src/keys.c    **** }
 3672              		.loc 1 181 24 view .LVU1057
 3673 0262 00EB9300 		add	r0, r0, r3, lsr #2
 181:src/keys.c    **** }
 3674              		.loc 1 181 18 view .LVU1058
 3675 0266 9B08     		lsrs	r3, r3, #2
 181:src/keys.c    **** }
 3676              		.loc 1 181 24 view .LVU1059
 3677 0268 4000     		lsls	r0, r0, #1
 181:src/keys.c    **** }
 3678              		.loc 1 181 33 view .LVU1060
 3679 026a 03EB4303 		add	r3, r3, r3, lsl #1
 181:src/keys.c    **** }
 3680              		.loc 1 181 12 view .LVU1061
 3681 026e 0B30     		adds	r0, r0, #11
 181:src/keys.c    **** }
 3682              		.loc 1 181 33 view .LVU1062
 3683 0270 A7EB4307 		sub	r7, r7, r3, lsl #1
 3684              	.LBE486:
 3685              	.LBE485:
2107:src/keys.c    **** 
 3686              		.loc 1 2107 10 view .LVU1063
ARM GAS  /tmp/ccgiIQCZ.s 			page 137


 3687 0274 3844     		add	r0, r0, r7
 3688              	.LVL287:
 3689              	.L477:
2337:src/keys.c    **** 
 3690              		.loc 1 2337 1 view .LVU1064
 3691 0276 03B0     		add	sp, sp, #12
 3692              		.cfi_remember_state
 3693              		.cfi_def_cfa_offset 36
 3694              		@ sp needed
 3695 0278 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3696              		.cfi_restore 14
 3697              		.cfi_restore 11
 3698              		.cfi_restore 10
 3699              		.cfi_restore 9
 3700              		.cfi_restore 8
 3701              		.cfi_restore 7
 3702              		.cfi_restore 6
 3703              		.cfi_restore 5
 3704              		.cfi_restore 4
 3705              		.cfi_def_cfa_offset 0
 3706              	.LVL288:
2107:src/keys.c    **** 
 3707              		.loc 1 2107 10 view .LVU1065
 3708 027c FFF7FEBF 		b	arg_eval
 3709              	.LVL289:
 3710              	.L387:
 3711              		.cfi_restore_state
2242:src/keys.c    **** 			return arg_eval(n);
 3712              		.loc 1 2242 3 is_stmt 1 view .LVU1066
2242:src/keys.c    **** 			return arg_eval(n);
 3713              		.loc 1 2242 7 is_stmt 0 view .LVU1067
 3714 0280 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2242:src/keys.c    **** 			return arg_eval(n);
 3715              		.loc 1 2242 6 view .LVU1068
 3716 0282 5F06     		lsls	r7, r3, #25
 3717 0284 0AD4     		bmi	.L409
2242:src/keys.c    **** 			return arg_eval(n);
 3718              		.loc 1 2242 25 discriminator 1 view .LVU1069
 3719 0286 0121     		movs	r1, #1
 3720 0288 0320     		movs	r0, #3
 3721              	.LVL290:
2242:src/keys.c    **** 			return arg_eval(n);
 3722              		.loc 1 2242 25 discriminator 1 view .LVU1070
 3723 028a FFF7FEFF 		bl	arg_storcl
 3724              	.LVL291:
2242:src/keys.c    **** 			return arg_eval(n);
 3725              		.loc 1 2242 18 discriminator 1 view .LVU1071
 3726 028e 0028     		cmp	r0, #0
 3727 0290 7FF404AF 		bne	.L475
2242:src/keys.c    **** 			return arg_eval(n);
 3728              		.loc 1 2242 63 discriminator 2 view .LVU1072
 3729 0294 B8F1000F 		cmp	r8, #0
 3730 0298 3FF400AF 		beq	.L475
 3731              	.L409:
2243:src/keys.c    **** 		break;
 3732              		.loc 1 2243 4 is_stmt 1 view .LVU1073
2243:src/keys.c    **** 		break;
ARM GAS  /tmp/ccgiIQCZ.s 			page 138


 3733              		.loc 1 2243 11 is_stmt 0 view .LVU1074
 3734 029c 3046     		mov	r0, r6
 3735 029e EAE7     		b	.L477
 3736              	.LVL292:
 3737              	.L370:
2089:src/keys.c    **** 	  case regT_idx:
 3738              		.loc 1 2089 6 is_stmt 1 view .LVU1075
2089:src/keys.c    **** 	  case regT_idx:
 3739              		.loc 1 2089 13 is_stmt 0 view .LVU1076
 3740 02a0 0320     		movs	r0, #3
 3741              	.LVL293:
 3742              	.L476:
2337:src/keys.c    **** 
 3743              		.loc 1 2337 1 view .LVU1077
 3744 02a2 03B0     		add	sp, sp, #12
 3745              		.cfi_remember_state
 3746              		.cfi_def_cfa_offset 36
 3747              		@ sp needed
 3748 02a4 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3749              		.cfi_restore 14
 3750              		.cfi_restore 11
 3751              		.cfi_restore 10
 3752              		.cfi_restore 9
 3753              		.cfi_restore 8
 3754              		.cfi_restore 7
 3755              		.cfi_restore 6
 3756              		.cfi_restore 5
 3757              		.cfi_restore 4
 3758              		.cfi_def_cfa_offset 0
 3759              	.LVL294:
2087:src/keys.c    **** 	  case regZ_idx:
 3760              		.loc 1 2087 13 view .LVU1078
 3761 02a8 FFF7FEBF 		b	arg_digit
 3762              	.LVL295:
 3763              	.L371:
 3764              		.cfi_restore_state
2087:src/keys.c    **** 	  case regZ_idx:
 3765              		.loc 1 2087 6 is_stmt 1 view .LVU1079
2087:src/keys.c    **** 	  case regZ_idx:
 3766              		.loc 1 2087 13 is_stmt 0 view .LVU1080
 3767 02ac 0220     		movs	r0, #2
 3768              	.LVL296:
2087:src/keys.c    **** 	  case regZ_idx:
 3769              		.loc 1 2087 13 view .LVU1081
 3770 02ae F8E7     		b	.L476
 3771              	.LVL297:
 3772              	.L368:
2091:src/keys.c    **** 	  case 5:
 3773              		.loc 1 2091 6 is_stmt 1 view .LVU1082
2091:src/keys.c    **** 	  case 5:
 3774              		.loc 1 2091 13 is_stmt 0 view .LVU1083
 3775 02b0 0420     		movs	r0, #4
 3776              	.LVL298:
2091:src/keys.c    **** 	  case 5:
 3777              		.loc 1 2091 13 view .LVU1084
 3778 02b2 F6E7     		b	.L476
 3779              	.LVL299:
ARM GAS  /tmp/ccgiIQCZ.s 			page 139


 3780              	.L485:
2136:src/keys.c    **** 		    base = RARG_SIG;
 3781              		.loc 1 2136 5 is_stmt 1 view .LVU1085
2136:src/keys.c    **** 		    base = RARG_SIG;
 3782              		.loc 1 2136 8 is_stmt 0 view .LVU1086
 3783 02b4 9D2D     		cmp	r5, #157
 3784 02b6 40F00B81 		bne	.L430
 3785 02ba 9C23     		movs	r3, #156
 3786 02bc 0093     		str	r3, [sp]
 3787              	.LVL300:
2137:src/keys.c    **** 		    break;
 3788              		.loc 1 2137 12 view .LVU1087
 3789 02be 1D46     		mov	r5, r3
 3790 02c0 10E7     		b	.L373
 3791              	.LVL301:
 3792              	.L486:
2137:src/keys.c    **** 		    break;
 3793              		.loc 1 2137 12 view .LVU1088
 3794 02c2 4D23     		movs	r3, #77
 3795 02c4 A7E7     		b	.L474
 3796              	.LVL302:
 3797              	.L392:
2311:src/keys.c    **** 			if (State2.dot)
 3798              		.loc 1 2311 3 is_stmt 1 view .LVU1089
2311:src/keys.c    **** 			if (State2.dot)
 3799              		.loc 1 2311 13 is_stmt 0 view .LVU1090
 3800 02c6 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
2311:src/keys.c    **** 			if (State2.dot)
 3801              		.loc 1 2311 6 view .LVU1091
 3802 02c8 002B     		cmp	r3, #0
 3803 02ca 40F0EC80 		bne	.L416
2312:src/keys.c    **** 				State2.dot = 0;
 3804              		.loc 1 2312 4 is_stmt 1 view .LVU1092
2312:src/keys.c    **** 				State2.dot = 0;
 3805              		.loc 1 2312 8 is_stmt 0 view .LVU1093
 3806 02ce 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2312:src/keys.c    **** 				State2.dot = 0;
 3807              		.loc 1 2312 7 view .LVU1094
 3808 02d0 13F04001 		ands	r1, r3, #64
 3809 02d4 40F0A080 		bne	.L417
2314:src/keys.c    **** 				State2.local = 0;
 3810              		.loc 1 2314 9 is_stmt 1 view .LVU1095
2314:src/keys.c    **** 				State2.local = 0;
 3811              		.loc 1 2314 13 is_stmt 0 view .LVU1096
 3812 02d8 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2314:src/keys.c    **** 				State2.local = 0;
 3813              		.loc 1 2314 12 view .LVU1097
 3814 02da 12F00100 		ands	r0, r2, #1
 3815              	.LVL303:
2314:src/keys.c    **** 				State2.local = 0;
 3816              		.loc 1 2314 12 view .LVU1098
 3817 02de 40F01181 		bne	.L487
2316:src/keys.c    **** 				State2.ind = 0;
 3818              		.loc 1 2316 9 is_stmt 1 view .LVU1099
2316:src/keys.c    **** 				State2.ind = 0;
 3819              		.loc 1 2316 12 is_stmt 0 view .LVU1100
 3820 02e2 1906     		lsls	r1, r3, #24
ARM GAS  /tmp/ccgiIQCZ.s 			page 140


 3821 02e4 7FF5D8AE 		bpl	.L382
2317:src/keys.c    **** 			else
 3822              		.loc 1 2317 5 is_stmt 1 view .LVU1101
2317:src/keys.c    **** 			else
 3823              		.loc 1 2317 16 is_stmt 0 view .LVU1102
 3824 02e8 60F3C713 		bfi	r3, r0, #7, #1
 3825 02ec 6375     		strb	r3, [r4, #21]
2336:src/keys.c    **** }
 3826              		.loc 1 2336 9 view .LVU1103
 3827 02ee 3320     		movs	r0, #51
 3828 02f0 D5E6     		b	.L350
 3829              	.LVL304:
 3830              	.L390:
2246:src/keys.c    **** 		break;
 3831              		.loc 1 2246 3 is_stmt 1 view .LVU1104
 3832 02f2 0121     		movs	r1, #1
 3833 02f4 0420     		movs	r0, #4
 3834              	.LVL305:
2246:src/keys.c    **** 		break;
 3835              		.loc 1 2246 3 is_stmt 0 view .LVU1105
 3836 02f6 FFF7FEFF 		bl	arg_storcl
 3837              	.LVL306:
2247:src/keys.c    **** #else
 3838              		.loc 1 2247 3 is_stmt 1 view .LVU1106
2336:src/keys.c    **** }
 3839              		.loc 1 2336 9 is_stmt 0 view .LVU1107
 3840 02fa 3320     		movs	r0, #51
2247:src/keys.c    **** #else
 3841              		.loc 1 2247 3 view .LVU1108
 3842 02fc CFE6     		b	.L350
 3843              	.LVL307:
 3844              	.L389:
2286:src/keys.c    **** 		break;
 3845              		.loc 1 2286 3 is_stmt 1 view .LVU1109
 3846 02fe 0021     		movs	r1, #0
 3847 0300 0520     		movs	r0, #5
 3848              	.LVL308:
2286:src/keys.c    **** 		break;
 3849              		.loc 1 2286 3 is_stmt 0 view .LVU1110
 3850 0302 FFF7FEFF 		bl	arg_storcl
 3851              	.LVL309:
2287:src/keys.c    **** 
 3852              		.loc 1 2287 3 is_stmt 1 view .LVU1111
2336:src/keys.c    **** }
 3853              		.loc 1 2336 9 is_stmt 0 view .LVU1112
 3854 0306 3320     		movs	r0, #51
2287:src/keys.c    **** 
 3855              		.loc 1 2287 3 view .LVU1113
 3856 0308 C9E6     		b	.L350
 3857              	.LVL310:
 3858              	.L388:
2189:src/keys.c    **** 	    return process_arg_shuffle(3);
 3859              		.loc 1 2189 4 is_stmt 1 view .LVU1114
2189:src/keys.c    **** 	    return process_arg_shuffle(3);
 3860              		.loc 1 2189 8 is_stmt 0 view .LVU1115
 3861 030a A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2189:src/keys.c    **** 	    return process_arg_shuffle(3);
ARM GAS  /tmp/ccgiIQCZ.s 			page 141


 3862              		.loc 1 2189 7 view .LVU1116
 3863 030c 9507     		lsls	r5, r2, #30
 3864 030e 7FF557AF 		bpl	.L394
2190:src/keys.c    **** 	case K51:       // X
 3865              		.loc 1 2190 6 is_stmt 1 view .LVU1117
2190:src/keys.c    **** 	case K51:       // X
 3866              		.loc 1 2190 13 is_stmt 0 view .LVU1118
 3867 0312 0320     		movs	r0, #3
 3868              	.LVL311:
 3869              	.L478:
2337:src/keys.c    **** 
 3870              		.loc 1 2337 1 view .LVU1119
 3871 0314 03B0     		add	sp, sp, #12
 3872              		.cfi_remember_state
 3873              		.cfi_def_cfa_offset 36
 3874              		@ sp needed
 3875 0316 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3876              		.cfi_restore 14
 3877              		.cfi_restore 11
 3878              		.cfi_restore 10
 3879              		.cfi_restore 9
 3880              		.cfi_restore 8
 3881              		.cfi_restore 7
 3882              		.cfi_restore 6
 3883              		.cfi_restore 5
 3884              		.cfi_restore 4
 3885              		.cfi_def_cfa_offset 0
 3886              	.LVL312:
2199:src/keys.c    **** #else
 3887              		.loc 1 2199 13 view .LVU1120
 3888 031a FFF7FEBF 		b	process_arg_shuffle
 3889              	.LVL313:
 3890              	.L386:
 3891              		.cfi_restore_state
2192:src/keys.c    **** 	    return process_arg_shuffle(0);
 3892              		.loc 1 2192 4 is_stmt 1 view .LVU1121
2192:src/keys.c    **** 	    return process_arg_shuffle(0);
 3893              		.loc 1 2192 8 is_stmt 0 view .LVU1122
 3894 031e A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2192:src/keys.c    **** 	    return process_arg_shuffle(0);
 3895              		.loc 1 2192 7 view .LVU1123
 3896 0320 9007     		lsls	r0, r2, #30
 3897              	.LVL314:
2192:src/keys.c    **** 	    return process_arg_shuffle(0);
 3898              		.loc 1 2192 7 view .LVU1124
 3899 0322 7FF54DAF 		bpl	.L394
2193:src/keys.c    **** 	case K52:	// Y
 3900              		.loc 1 2193 6 is_stmt 1 view .LVU1125
2193:src/keys.c    **** 	case K52:	// Y
 3901              		.loc 1 2193 13 is_stmt 0 view .LVU1126
 3902 0326 0020     		movs	r0, #0
 3903 0328 F4E7     		b	.L478
 3904              	.L495:
 3905 032a 00BF     		.align	2
 3906              	.L494:
 3907 032c 00000000 		.word	StateWhileOn
 3908 0330 00000000 		.word	.LANCHOR6
ARM GAS  /tmp/ccgiIQCZ.s 			page 142


 3909 0334 00000000 		.word	.LANCHOR5
 3910 0338 ABAAAAAA 		.word	-1431655765
 3911 033c 00000000 		.word	argcmds
 3912              	.LVL315:
 3913              	.L384:
2198:src/keys.c    **** 	    return process_arg_shuffle(2);
 3914              		.loc 1 2198 4 is_stmt 1 view .LVU1127
2198:src/keys.c    **** 	    return process_arg_shuffle(2);
 3915              		.loc 1 2198 8 is_stmt 0 view .LVU1128
 3916 0340 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2198:src/keys.c    **** 	    return process_arg_shuffle(2);
 3917              		.loc 1 2198 7 view .LVU1129
 3918 0342 9207     		lsls	r2, r2, #30
 3919 0344 7FF53CAF 		bpl	.L394
2199:src/keys.c    **** #else
 3920              		.loc 1 2199 6 is_stmt 1 view .LVU1130
2199:src/keys.c    **** #else
 3921              		.loc 1 2199 13 is_stmt 0 view .LVU1131
 3922 0348 0220     		movs	r0, #2
 3923              	.LVL316:
2199:src/keys.c    **** #else
 3924              		.loc 1 2199 13 view .LVU1132
 3925 034a E3E7     		b	.L478
 3926              	.LVL317:
 3927              	.L383:
2235:src/keys.c    **** 			reset_arg();
 3928              		.loc 1 2235 3 is_stmt 1 view .LVU1133
2235:src/keys.c    **** 			reset_arg();
 3929              		.loc 1 2235 6 is_stmt 0 view .LVU1134
 3930 034c 009B     		ldr	r3, [sp]
 3931 034e 212B     		cmp	r3, #33
 3932 0350 00F0B980 		beq	.L406
2235:src/keys.c    **** 			reset_arg();
 3933              		.loc 1 2235 25 discriminator 1 view .LVU1135
 3934 0354 732B     		cmp	r3, #115
 3935 0356 00F0B680 		beq	.L406
2239:src/keys.c    **** 		break;
 3936              		.loc 1 2239 3 is_stmt 1 view .LVU1136
 3937 035a 0121     		movs	r1, #1
 3938 035c 0220     		movs	r0, #2
 3939              	.LVL318:
2239:src/keys.c    **** 		break;
 3940              		.loc 1 2239 3 is_stmt 0 view .LVU1137
 3941 035e FFF7FEFF 		bl	arg_storcl
 3942              	.LVL319:
2240:src/keys.c    **** 	case K44:		// multiply
 3943              		.loc 1 2240 3 is_stmt 1 view .LVU1138
2336:src/keys.c    **** }
 3944              		.loc 1 2336 9 is_stmt 0 view .LVU1139
 3945 0362 3320     		movs	r0, #51
2240:src/keys.c    **** 	case K44:		// multiply
 3946              		.loc 1 2240 3 view .LVU1140
 3947 0364 9BE6     		b	.L350
 3948              	.LVL320:
 3949              	.L381:
2227:src/keys.c    **** 
 3950              		.loc 1 2227 3 is_stmt 1 view .LVU1141
ARM GAS  /tmp/ccgiIQCZ.s 			page 143


 3951              	.LBB487:
 3952              	.LBI487:
2034:src/keys.c    **** 
 3953              		.loc 1 2034 12 view .LVU1142
 3954              	.LBB488:
2036:src/keys.c    **** 		// Only valid at beginning of entry
 3955              		.loc 1 2036 2 view .LVU1143
2036:src/keys.c    **** 		// Only valid at beginning of entry
 3956              		.loc 1 2036 5 is_stmt 0 view .LVU1144
 3957 0366 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 3958 0368 002A     		cmp	r2, #0
 3959 036a 7FF497AE 		bne	.L475
2038:src/keys.c    **** 			// '..' or ENTER '.' = X
 3960              		.loc 1 2038 3 is_stmt 1 view .LVU1145
2038:src/keys.c    **** 			// '..' or ENTER '.' = X
 3961              		.loc 1 2038 6 is_stmt 0 view .LVU1146
 3962 036e 11F4A03F 		tst	r1, #81920
 3963 0372 40F0C180 		bne	.L488
2043:src/keys.c    **** 			// local register or flag select
 3964              		.loc 1 2043 3 is_stmt 1 view .LVU1147
2043:src/keys.c    **** 			// local register or flag select
 3965              		.loc 1 2043 20 is_stmt 0 view .LVU1148
 3966 0376 009B     		ldr	r3, [sp]
 3967 0378 0AEB0313 		add	r3, r10, r3, lsl #4
 3968 037c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
2043:src/keys.c    **** 			// local register or flag select
 3969              		.loc 1 2043 6 view .LVU1149
 3970 037e 1A07     		lsls	r2, r3, #28
 3971 0380 00F1A880 		bmi	.L402
2043:src/keys.c    **** 			// local register or flag select
 3972              		.loc 1 2043 27 view .LVU1150
 3973 0384 94F91530 		ldrsb	r3, [r4, #21]
 3974 0388 002B     		cmp	r3, #0
 3975 038a C0F2A380 		blt	.L402
2047:src/keys.c    **** 			// Special GTO . sequence
 3976              		.loc 1 2047 8 is_stmt 1 view .LVU1151
2047:src/keys.c    **** 			// Special GTO . sequence
 3977              		.loc 1 2047 29 is_stmt 0 view .LVU1152
 3978 038e 009B     		ldr	r3, [sp]
 3979 0390 A3F14409 		sub	r9, r3, #68
2047:src/keys.c    **** 			// Special GTO . sequence
 3980              		.loc 1 2047 11 view .LVU1153
 3981 0394 B9F1010F 		cmp	r9, #1
 3982 0398 3FF680AE 		bhi	.L475
2049:src/keys.c    **** 				State2.gtodot = 1;
 3983              		.loc 1 2049 4 is_stmt 1 view .LVU1154
2050:src/keys.c    **** 				reset_arg();
 3984              		.loc 1 2050 5 view .LVU1155
2050:src/keys.c    **** 				reset_arg();
 3985              		.loc 1 2050 19 is_stmt 0 view .LVU1156
 3986 039c 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 3987 039e 43F00103 		orr	r3, r3, #1
 3988 03a2 6375     		strb	r3, [r4, #21]
2051:src/keys.c    **** 			}
 3989              		.loc 1 2051 5 is_stmt 1 view .LVU1157
 3990 03a4 FFF7FEFF 		bl	reset_arg
 3991              	.LVL321:
ARM GAS  /tmp/ccgiIQCZ.s 			page 144


2055:src/keys.c    **** }
 3992              		.loc 1 2055 9 is_stmt 0 view .LVU1158
 3993 03a8 3320     		movs	r0, #51
 3994 03aa 78E6     		b	.L350
 3995              	.LVL322:
 3996              	.L380:
2055:src/keys.c    **** }
 3997              		.loc 1 2055 9 view .LVU1159
 3998              	.LBE488:
 3999              	.LBE487:
2231:src/keys.c    **** 			return arg_eval(n);
 4000              		.loc 1 2231 3 is_stmt 1 view .LVU1160
2231:src/keys.c    **** 			return arg_eval(n);
 4001              		.loc 1 2231 7 is_stmt 0 view .LVU1161
 4002 03ac 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2231:src/keys.c    **** 			return arg_eval(n);
 4003              		.loc 1 2231 6 view .LVU1162
 4004 03ae 5B06     		lsls	r3, r3, #25
 4005 03b0 3FF574AF 		bmi	.L409
2231:src/keys.c    **** 			return arg_eval(n);
 4006              		.loc 1 2231 25 discriminator 1 view .LVU1163
 4007 03b4 0121     		movs	r1, #1
 4008 03b6 0846     		mov	r0, r1
 4009              	.LVL323:
2231:src/keys.c    **** 			return arg_eval(n);
 4010              		.loc 1 2231 25 discriminator 1 view .LVU1164
 4011 03b8 FFF7FEFF 		bl	arg_storcl
 4012              	.LVL324:
2231:src/keys.c    **** 			return arg_eval(n);
 4013              		.loc 1 2231 18 discriminator 1 view .LVU1165
 4014 03bc 0028     		cmp	r0, #0
 4015 03be 7FF46DAE 		bne	.L475
2242:src/keys.c    **** 			return arg_eval(n);
 4016              		.loc 1 2242 63 view .LVU1166
 4017 03c2 B8F1000F 		cmp	r8, #0
 4018 03c6 3FF469AE 		beq	.L475
 4019 03ca 67E7     		b	.L409
 4020              	.LVL325:
 4021              	.L379:
2167:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 4022              		.loc 1 2167 3 is_stmt 1 view .LVU1167
2167:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 4023              		.loc 1 2167 6 is_stmt 0 view .LVU1168
 4024 03cc BCF1000F 		cmp	ip, #0
 4025 03d0 3FF464AE 		beq	.L475
2168:src/keys.c    **** 		break;
 4026              		.loc 1 2168 4 is_stmt 1 view .LVU1169
 4027              	.LVL326:
 4028              	.LBB491:
 4029              	.LBI491:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 4030              		.loc 1 104 20 view .LVU1170
 4031              	.LBB492:
 105:src/keys.c    **** 	State2.shifts = shift;
 4032              		.loc 1 105 2 view .LVU1171
 4033              	.LBB493:
 4034              	.LBI493:
ARM GAS  /tmp/ccgiIQCZ.s 			page 145


  96:src/keys.c    **** 	enum shifts s = shift_down();
 4035              		.loc 1 96 13 view .LVU1172
 4036              	.LBB494:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4037              		.loc 1 97 2 view .LVU1173
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4038              		.loc 1 97 18 is_stmt 0 view .LVU1174
 4039 03d4 FFF7FEFF 		bl	shift_down
 4040              	.LVL327:
  98:src/keys.c    **** }
 4041              		.loc 1 98 2 is_stmt 1 view .LVU1175
 4042              	.LBE494:
 4043              	.LBE493:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4044              		.loc 1 106 2 view .LVU1176
 4045              	.LBE492:
 4046              	.LBE491:
2168:src/keys.c    **** 		break;
 4047              		.loc 1 2168 4 is_stmt 0 view .LVU1177
 4048 03d8 019B     		ldr	r3, [sp, #4]
 4049 03da B3F1010A 		subs	r10, r3, #1
 4050 03de 18BF     		it	ne
 4051 03e0 4FF0010A 		movne	r10, #1
 4052 03e4 84F810A0 		strb	r10, [r4, #16]
 4053              	.LBB497:
 4054              	.LBB495:
 108:src/keys.c    **** }
 4055              		.loc 1 108 2 is_stmt 1 view .LVU1178
 4056              	.LBE495:
 4057              	.LBE497:
2336:src/keys.c    **** }
 4058              		.loc 1 2336 9 is_stmt 0 view .LVU1179
 4059 03e8 3320     		movs	r0, #51
 4060              	.LBB498:
 4061              	.LBB496:
 108:src/keys.c    **** }
 4062              		.loc 1 108 9 view .LVU1180
 4063 03ea 58E6     		b	.L350
 4064              	.LVL328:
 4065              	.L378:
 108:src/keys.c    **** }
 4066              		.loc 1 108 9 view .LVU1181
 4067              	.LBE496:
 4068              	.LBE498:
2172:src/keys.c    **** 			State2.ind = ! State2.ind;
 4069              		.loc 1 2172 3 is_stmt 1 view .LVU1182
2172:src/keys.c    **** 			State2.ind = ! State2.ind;
 4070              		.loc 1 2172 7 is_stmt 0 view .LVU1183
 4071 03ec 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
2172:src/keys.c    **** 			State2.ind = ! State2.ind;
 4072              		.loc 1 2172 6 view .LVU1184
 4073 03ee 5706     		lsls	r7, r2, #25
 4074 03f0 3FF554AE 		bmi	.L475
2172:src/keys.c    **** 			State2.ind = ! State2.ind;
 4075              		.loc 1 2172 35 discriminator 1 view .LVU1185
 4076 03f4 009B     		ldr	r3, [sp]
 4077 03f6 0AEB0319 		add	r9, r10, r3, lsl #4
ARM GAS  /tmp/ccgiIQCZ.s 			page 146


 4078 03fa 99F80530 		ldrb	r3, [r9, #5]	@ zero_extendqisi2
2172:src/keys.c    **** 			State2.ind = ! State2.ind;
 4079              		.loc 1 2172 19 discriminator 1 view .LVU1186
 4080 03fe DE07     		lsls	r6, r3, #31
 4081              	.LVL329:
2172:src/keys.c    **** 			State2.ind = ! State2.ind;
 4082              		.loc 1 2172 19 discriminator 1 view .LVU1187
 4083 0400 7FF54CAE 		bpl	.L475
2173:src/keys.c    **** 			if (! stack_reg)
 4084              		.loc 1 2173 4 is_stmt 1 view .LVU1188
2173:src/keys.c    **** 			if (! stack_reg)
 4085              		.loc 1 2173 17 is_stmt 0 view .LVU1189
 4086 0404 D343     		mvns	r3, r2
 4087 0406 C3F3C013 		ubfx	r3, r3, #7, #1
2173:src/keys.c    **** 			if (! stack_reg)
 4088              		.loc 1 2173 15 view .LVU1190
 4089 040a 63F3C712 		bfi	r2, r3, #7, #1
 4090 040e 6275     		strb	r2, [r4, #21]
2174:src/keys.c    **** 				State2.dot = 0;
 4091              		.loc 1 2174 4 is_stmt 1 view .LVU1191
2174:src/keys.c    **** 				State2.dot = 0;
 4092              		.loc 1 2174 7 is_stmt 0 view .LVU1192
 4093 0410 B8F1000F 		cmp	r8, #0
 4094 0414 7FF442AE 		bne	.L475
 4095              	.L417:
2175:src/keys.c    **** 		}
 4096              		.loc 1 2175 5 is_stmt 1 view .LVU1193
2175:src/keys.c    **** 		}
 4097              		.loc 1 2175 16 is_stmt 0 view .LVU1194
 4098 0418 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 4099 041a 6FF38613 		bfc	r3, #6, #1
 4100 041e 6375     		strb	r3, [r4, #21]
2336:src/keys.c    **** }
 4101              		.loc 1 2336 9 view .LVU1195
 4102 0420 3320     		movs	r0, #51
 4103              	.LVL330:
2336:src/keys.c    **** }
 4104              		.loc 1 2336 9 view .LVU1196
 4105 0422 3CE6     		b	.L350
 4106              	.LVL331:
 4107              	.L376:
2180:src/keys.c    **** 			break;
 4108              		.loc 1 2180 3 is_stmt 1 view .LVU1197
2180:src/keys.c    **** 			break;
 4109              		.loc 1 2180 18 is_stmt 0 view .LVU1198
 4110 0424 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2180:src/keys.c    **** 			break;
 4111              		.loc 1 2180 6 view .LVU1199
 4112 0426 13F0C00F 		tst	r3, #192
 4113 042a 7FF437AE 		bne	.L475
2182:src/keys.c    **** 			CmdBase = RARG_STOM;
 4114              		.loc 1 2182 3 is_stmt 1 view .LVU1200
2182:src/keys.c    **** 			CmdBase = RARG_STOM;
 4115              		.loc 1 2182 6 is_stmt 0 view .LVU1201
 4116 042e 009B     		ldr	r3, [sp]
 4117 0430 032B     		cmp	r3, #3
 4118 0432 5DD0     		beq	.L489
ARM GAS  /tmp/ccgiIQCZ.s 			page 147


2184:src/keys.c    **** 			CmdBase = RARG_RCLM;
 4119              		.loc 1 2184 8 is_stmt 1 view .LVU1202
2184:src/keys.c    **** 			CmdBase = RARG_RCLM;
 4120              		.loc 1 2184 11 is_stmt 0 view .LVU1203
 4121 0434 009B     		ldr	r3, [sp]
 4122 0436 0A2B     		cmp	r3, #10
 4123 0438 7FF430AE 		bne	.L475
2185:src/keys.c    **** 		break;
 4124              		.loc 1 2185 4 is_stmt 1 view .LVU1204
2185:src/keys.c    **** 		break;
 4125              		.loc 1 2185 12 is_stmt 0 view .LVU1205
 4126 043c 7823     		movs	r3, #120
 4127 043e E377     		strb	r3, [r4, #31]
2336:src/keys.c    **** }
 4128              		.loc 1 2336 9 view .LVU1206
 4129 0440 3320     		movs	r0, #51
 4130              	.LVL332:
2336:src/keys.c    **** }
 4131              		.loc 1 2336 9 view .LVU1207
 4132 0442 2CE6     		b	.L350
 4133              	.LVL333:
 4134              	.L393:
2290:src/keys.c    **** 			if (argcmds[base].label) {
 4135              		.loc 1 2290 3 is_stmt 1 view .LVU1208
2290:src/keys.c    **** 			if (argcmds[base].label) {
 4136              		.loc 1 2290 6 is_stmt 0 view .LVU1209
 4137 0444 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 4138 0446 4AB1     		cbz	r2, .L490
2304:src/keys.c    **** 			return arg_eval(State2.digval);
 4139              		.loc 1 2304 10 is_stmt 1 view .LVU1210
2305:src/keys.c    **** 		else if (stack_reg)
 4140              		.loc 1 2305 4 view .LVU1211
2305:src/keys.c    **** 		else if (stack_reg)
 4141              		.loc 1 2305 11 is_stmt 0 view .LVU1212
 4142 0448 2089     		ldrh	r0, [r4, #8]
 4143              	.LVL334:
2305:src/keys.c    **** 		else if (stack_reg)
 4144              		.loc 1 2305 11 view .LVU1213
 4145 044a 14E7     		b	.L477
 4146              	.LVL335:
 4147              	.L385:
2195:src/keys.c    **** 	    return process_arg_shuffle(1);
 4148              		.loc 1 2195 4 is_stmt 1 view .LVU1214
2195:src/keys.c    **** 	    return process_arg_shuffle(1);
 4149              		.loc 1 2195 8 is_stmt 0 view .LVU1215
 4150 044c A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2195:src/keys.c    **** 	    return process_arg_shuffle(1);
 4151              		.loc 1 2195 7 view .LVU1216
 4152 044e 9107     		lsls	r1, r2, #30
 4153 0450 7FF5B6AE 		bpl	.L394
2196:src/keys.c    **** 	case K53:       // Z
 4154              		.loc 1 2196 6 is_stmt 1 view .LVU1217
2196:src/keys.c    **** 	case K53:       // Z
 4155              		.loc 1 2196 13 is_stmt 0 view .LVU1218
 4156 0454 0120     		movs	r0, #1
 4157              	.LVL336:
2196:src/keys.c    **** 	case K53:       // Z
ARM GAS  /tmp/ccgiIQCZ.s 			page 148


 4158              		.loc 1 2196 13 view .LVU1219
 4159 0456 5DE7     		b	.L478
 4160              	.LVL337:
 4161              	.L432:
2112:src/keys.c    **** 		case K_UP:	// up arrow
 4162              		.loc 1 2112 3 view .LVU1220
 4163 0458 9C23     		movs	r3, #156
 4164              	.LVL338:
2142:src/keys.c    **** #else
 4165              		.loc 1 2142 3 is_stmt 1 view .LVU1221
 4166 045a DCE6     		b	.L474
 4167              	.L490:
2290:src/keys.c    **** 			if (argcmds[base].label) {
 4168              		.loc 1 2290 43 is_stmt 0 discriminator 1 view .LVU1222
 4169 045c 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
 4170 045e 12F0C00F 		tst	r2, #192
 4171 0462 13D1     		bne	.L411
2291:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4172              		.loc 1 2291 4 is_stmt 1 view .LVU1223
2291:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4173              		.loc 1 2291 21 is_stmt 0 view .LVU1224
 4174 0464 009B     		ldr	r3, [sp]
 4175 0466 0AEB0313 		add	r3, r10, r3, lsl #4
 4176 046a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
2291:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4177              		.loc 1 2291 7 view .LVU1225
 4178 046c 9E06     		lsls	r6, r3, #26
 4179              	.LVL339:
2291:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4180              		.loc 1 2291 7 view .LVU1226
 4181 046e 4ED4     		bmi	.L491
2296:src/keys.c    **** 				reset_arg();
 4182              		.loc 1 2296 11 is_stmt 1 view .LVU1227
2296:src/keys.c    **** 				reset_arg();
 4183              		.loc 1 2296 14 is_stmt 0 view .LVU1228
 4184 0470 0099     		ldr	r1, [sp]
 4185 0472 4E29     		cmp	r1, #78
 4186 0474 5DD0     		beq	.L492
2299:src/keys.c    **** 				reset_arg();
 4187              		.loc 1 2299 11 is_stmt 1 view .LVU1229
2299:src/keys.c    **** 				reset_arg();
 4188              		.loc 1 2299 14 is_stmt 0 view .LVU1230
 4189 0476 0099     		ldr	r1, [sp]
 4190 0478 4F29     		cmp	r1, #79
 4191 047a 5FD0     		beq	.L493
2302:src/keys.c    **** 				State2.dot = 1;
 4192              		.loc 1 2302 11 is_stmt 1 view .LVU1231
2302:src/keys.c    **** 				State2.dot = 1;
 4193              		.loc 1 2302 14 is_stmt 0 view .LVU1232
 4194 047c 5807     		lsls	r0, r3, #29
 4195              	.LVL340:
2302:src/keys.c    **** 				State2.dot = 1;
 4196              		.loc 1 2302 14 view .LVU1233
 4197 047e 7FF50DAE 		bpl	.L475
2303:src/keys.c    **** 		} else if (State2.numdigit > 0)
 4198              		.loc 1 2303 5 is_stmt 1 view .LVU1234
2303:src/keys.c    **** 		} else if (State2.numdigit > 0)
ARM GAS  /tmp/ccgiIQCZ.s 			page 149


 4199              		.loc 1 2303 16 is_stmt 0 view .LVU1235
 4200 0482 42F04002 		orr	r2, r2, #64
 4201 0486 6275     		strb	r2, [r4, #21]
2336:src/keys.c    **** }
 4202              		.loc 1 2336 9 view .LVU1236
 4203 0488 3320     		movs	r0, #51
 4204 048a 08E6     		b	.L350
 4205              	.LVL341:
 4206              	.L411:
2304:src/keys.c    **** 			return arg_eval(State2.digval);
 4207              		.loc 1 2304 10 is_stmt 1 view .LVU1237
2306:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 4208              		.loc 1 2306 8 view .LVU1238
2306:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 4209              		.loc 1 2306 11 is_stmt 0 view .LVU1239
 4210 048c B8F1000F 		cmp	r8, #0
 4211 0490 3FF404AE 		beq	.L475
2307:src/keys.c    **** 		break;
 4212              		.loc 1 2307 4 is_stmt 1 view .LVU1240
2307:src/keys.c    **** 		break;
 4213              		.loc 1 2307 27 is_stmt 0 view .LVU1241
 4214 0494 C2F38013 		ubfx	r3, r2, #6, #1
2307:src/keys.c    **** 		break;
 4215              		.loc 1 2307 19 view .LVU1242
 4216 0498 C3F10103 		rsb	r3, r3, #1
2307:src/keys.c    **** 		break;
 4217              		.loc 1 2307 15 view .LVU1243
 4218 049c 63F38612 		bfi	r2, r3, #6, #1
 4219 04a0 6275     		strb	r2, [r4, #21]
2336:src/keys.c    **** }
 4220              		.loc 1 2336 9 view .LVU1244
 4221 04a2 3320     		movs	r0, #51
 4222              	.LVL342:
2336:src/keys.c    **** }
 4223              		.loc 1 2336 9 view .LVU1245
 4224 04a4 FBE5     		b	.L350
 4225              	.LVL343:
 4226              	.L416:
2322:src/keys.c    **** 			if (State2.shuffle)
 4227              		.loc 1 2322 4 is_stmt 1 view .LVU1246
2323:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4228              		.loc 1 2323 8 is_stmt 0 view .LVU1247
 4229 04a6 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2322:src/keys.c    **** 			if (State2.shuffle)
 4230              		.loc 1 2322 4 view .LVU1248
 4231 04a8 013B     		subs	r3, r3, #1
 4232 04aa DBB2     		uxtb	r3, r3
2323:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4233              		.loc 1 2323 7 view .LVU1249
 4234 04ac 9207     		lsls	r2, r2, #30
2322:src/keys.c    **** 			if (State2.shuffle)
 4235              		.loc 1 2322 4 view .LVU1250
 4236 04ae E372     		strb	r3, [r4, #11]
2323:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4237              		.loc 1 2323 4 is_stmt 1 view .LVU1251
2323:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4238              		.loc 1 2323 7 is_stmt 0 view .LVU1252
ARM GAS  /tmp/ccgiIQCZ.s 			page 150


 4239 04b0 16D5     		bpl	.L419
2324:src/keys.c    **** 			else
 4240              		.loc 1 2324 5 is_stmt 1 view .LVU1253
2324:src/keys.c    **** 			else
 4241              		.loc 1 2324 19 is_stmt 0 view .LVU1254
 4242 04b2 2289     		ldrh	r2, [r4, #8]
2324:src/keys.c    **** 			else
 4243              		.loc 1 2324 46 view .LVU1255
 4244 04b4 5B00     		lsls	r3, r3, #1
2324:src/keys.c    **** 			else
 4245              		.loc 1 2324 26 view .LVU1256
 4246 04b6 0321     		movs	r1, #3
 4247 04b8 01FA03F3 		lsl	r3, r1, r3
2324:src/keys.c    **** 			else
 4248              		.loc 1 2324 19 view .LVU1257
 4249 04bc 22EA0303 		bic	r3, r2, r3
 4250 04c0 2381     		strh	r3, [r4, #8]	@ movhi
2336:src/keys.c    **** }
 4251              		.loc 1 2336 9 view .LVU1258
 4252 04c2 3320     		movs	r0, #51
 4253              	.LVL344:
2336:src/keys.c    **** }
 4254              		.loc 1 2336 9 view .LVU1259
 4255 04c4 EBE5     		b	.L350
 4256              	.LVL345:
 4257              	.L406:
2236:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
 4258              		.loc 1 2236 4 is_stmt 1 view .LVU1260
 4259 04c6 FFF7FEFF 		bl	reset_arg
 4260              	.LVL346:
2237:src/keys.c    **** 		}
 4261              		.loc 1 2237 4 view .LVU1261
2237:src/keys.c    **** 		}
 4262              		.loc 1 2237 11 is_stmt 0 view .LVU1262
 4263 04ca 40F27510 		movw	r0, #373
 4264 04ce E6E5     		b	.L350
 4265              	.LVL347:
 4266              	.L430:
2237:src/keys.c    **** 		}
 4267              		.loc 1 2237 11 view .LVU1263
 4268 04d0 9D25     		movs	r5, #157
 4269              	.LVL348:
2237:src/keys.c    **** 		}
 4270              		.loc 1 2237 11 view .LVU1264
 4271 04d2 07E6     		b	.L373
 4272              	.LVL349:
 4273              	.L402:
 4274              	.LBB499:
 4275              	.LBB489:
2045:src/keys.c    **** 		}
 4276              		.loc 1 2045 4 is_stmt 1 view .LVU1265
2045:src/keys.c    **** 		}
 4277              		.loc 1 2045 17 is_stmt 0 view .LVU1266
 4278 04d4 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 4279 04d6 43F00103 		orr	r3, r3, #1
 4280 04da A375     		strb	r3, [r4, #22]
2055:src/keys.c    **** }
ARM GAS  /tmp/ccgiIQCZ.s 			page 151


 4281              		.loc 1 2055 9 view .LVU1267
 4282 04dc 3320     		movs	r0, #51
 4283              	.LVL350:
2045:src/keys.c    **** 		}
 4284              		.loc 1 2045 17 view .LVU1268
 4285 04de DEE5     		b	.L350
 4286              	.LVL351:
 4287              	.L419:
2045:src/keys.c    **** 		}
 4288              		.loc 1 2045 17 view .LVU1269
 4289              	.LBE489:
 4290              	.LBE499:
2326:src/keys.c    **** 		}
 4291              		.loc 1 2326 5 is_stmt 1 view .LVU1270
2326:src/keys.c    **** 		}
 4292              		.loc 1 2326 19 is_stmt 0 view .LVU1271
 4293 04e0 2389     		ldrh	r3, [r4, #8]
 4294 04e2 1A4A     		ldr	r2, .L496
 4295 04e4 A2FB0323 		umull	r2, r3, r2, r3
 4296 04e8 DB08     		lsrs	r3, r3, #3
 4297 04ea 2381     		strh	r3, [r4, #8]	@ movhi
2336:src/keys.c    **** }
 4298              		.loc 1 2336 9 view .LVU1272
 4299 04ec 3320     		movs	r0, #51
 4300              	.LVL352:
2336:src/keys.c    **** }
 4301              		.loc 1 2336 9 view .LVU1273
 4302 04ee D6E5     		b	.L350
 4303              	.LVL353:
 4304              	.L489:
2183:src/keys.c    **** 		else if (base == RARG_RCL)
 4305              		.loc 1 2183 4 is_stmt 1 view .LVU1274
2183:src/keys.c    **** 		else if (base == RARG_RCL)
 4306              		.loc 1 2183 12 is_stmt 0 view .LVU1275
 4307 04f0 7723     		movs	r3, #119
 4308 04f2 E377     		strb	r3, [r4, #31]
2336:src/keys.c    **** }
 4309              		.loc 1 2336 9 view .LVU1276
 4310 04f4 3320     		movs	r0, #51
 4311              	.LVL354:
2336:src/keys.c    **** }
 4312              		.loc 1 2336 9 view .LVU1277
 4313 04f6 D2E5     		b	.L350
 4314              	.LVL355:
 4315              	.L488:
 4316              	.LBB500:
 4317              	.LBB490:
2040:src/keys.c    **** 			return arg_eval(regX_idx);
 4318              		.loc 1 2040 4 is_stmt 1 view .LVU1278
2040:src/keys.c    **** 			return arg_eval(regX_idx);
 4319              		.loc 1 2040 17 is_stmt 0 view .LVU1279
 4320 04f8 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 4321 04fa 62F30003 		bfi	r3, r2, #0, #1
2041:src/keys.c    **** 		}
 4322              		.loc 1 2041 11 view .LVU1280
 4323 04fe 6420     		movs	r0, #100
 4324              	.LVL356:
ARM GAS  /tmp/ccgiIQCZ.s 			page 152


2040:src/keys.c    **** 			return arg_eval(regX_idx);
 4325              		.loc 1 2040 17 view .LVU1281
 4326 0500 A375     		strb	r3, [r4, #22]
2041:src/keys.c    **** 		}
 4327              		.loc 1 2041 4 is_stmt 1 view .LVU1282
 4328 0502 B8E6     		b	.L477
 4329              	.L487:
2041:src/keys.c    **** 		}
 4330              		.loc 1 2041 4 is_stmt 0 view .LVU1283
 4331              	.LBE490:
 4332              	.LBE500:
2315:src/keys.c    **** 			else if (State2.ind)
 4333              		.loc 1 2315 5 is_stmt 1 view .LVU1284
2315:src/keys.c    **** 			else if (State2.ind)
 4334              		.loc 1 2315 18 is_stmt 0 view .LVU1285
 4335 0504 61F30002 		bfi	r2, r1, #0, #1
 4336 0508 A275     		strb	r2, [r4, #22]
2336:src/keys.c    **** }
 4337              		.loc 1 2336 9 view .LVU1286
 4338 050a 3320     		movs	r0, #51
 4339 050c C7E5     		b	.L350
 4340              	.LVL357:
 4341              	.L491:
2292:src/keys.c    **** 				State2.multi = 1;
 4342              		.loc 1 2292 5 is_stmt 1 view .LVU1287
 4343              	.LBB501:
 4344              	.LBI501:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 4345              		.loc 1 552 13 view .LVU1288
 4346              	.LBB502:
 553:src/keys.c    **** 		return;
 4347              		.loc 1 553 2 view .LVU1289
 553:src/keys.c    **** 		return;
 4348              		.loc 1 553 6 is_stmt 0 view .LVU1290
 4349 050e FFF7FEFF 		bl	is_bad_cmdline
 4350              	.LVL358:
 553:src/keys.c    **** 		return;
 4351              		.loc 1 553 5 view .LVU1291
 4352 0512 20B9     		cbnz	r0, .L413
 4353              	.LBE502:
 4354              	.LBE501:
2292:src/keys.c    **** 				State2.multi = 1;
 4355              		.loc 1 2292 31 view .LVU1292
 4356 0514 A5F14200 		sub	r0, r5, #66
 4357              	.LBB504:
 4358              	.LBB503:
 4359 0518 C0B2     		uxtb	r0, r0
 4360 051a FFF7FEFF 		bl	init_arg.part.0
 4361              	.LVL359:
 4362              	.L413:
2292:src/keys.c    **** 				State2.multi = 1;
 4363              		.loc 1 2292 31 view .LVU1293
 4364              	.LBE503:
 4365              	.LBE504:
2293:src/keys.c    **** 				State2.alphashift = 0;
 4366              		.loc 1 2293 5 is_stmt 1 view .LVU1294
2294:src/keys.c    **** 				State2.rarg = 0;
ARM GAS  /tmp/ccgiIQCZ.s 			page 153


 4367              		.loc 1 2294 5 view .LVU1295
2295:src/keys.c    **** 			} else if (base == RARG_SCI) {
 4368              		.loc 1 2295 5 view .LVU1296
2293:src/keys.c    **** 				State2.alphashift = 0;
 4369              		.loc 1 2293 18 is_stmt 0 view .LVU1297
 4370 051e 6369     		ldr	r3, [r4, #20]
 4371 0520 23F44013 		bic	r3, r3, #3145728
 4372 0524 23F40063 		bic	r3, r3, #2048
 4373 0528 43F40063 		orr	r3, r3, #2048
 4374 052c 6361     		str	r3, [r4, #20]
2336:src/keys.c    **** }
 4375              		.loc 1 2336 9 view .LVU1298
 4376 052e 3320     		movs	r0, #51
 4377 0530 B5E5     		b	.L350
 4378              	.LVL360:
 4379              	.L492:
2297:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
 4380              		.loc 1 2297 5 is_stmt 1 view .LVU1299
 4381 0532 FFF7FEFF 		bl	reset_arg
 4382              	.LVL361:
2298:src/keys.c    **** 			} else if (base == RARG_ENG) {
 4383              		.loc 1 2298 5 view .LVU1300
2298:src/keys.c    **** 			} else if (base == RARG_ENG) {
 4384              		.loc 1 2298 12 is_stmt 0 view .LVU1301
 4385 0536 40F25510 		movw	r0, #341
 4386 053a B0E5     		b	.L350
 4387              	.LVL362:
 4388              	.L493:
2300:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
 4389              		.loc 1 2300 5 is_stmt 1 view .LVU1302
 4390 053c FFF7FEFF 		bl	reset_arg
 4391              	.LVL363:
2301:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 4392              		.loc 1 2301 5 view .LVU1303
2301:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 4393              		.loc 1 2301 12 is_stmt 0 view .LVU1304
 4394 0540 4FF4AB70 		mov	r0, #342
 4395 0544 ABE5     		b	.L350
 4396              	.LVL364:
 4397              	.L367:
2085:src/keys.c    **** 	  case regY_idx:
 4398              		.loc 1 2085 6 is_stmt 1 view .LVU1305
2085:src/keys.c    **** 	  case regY_idx:
 4399              		.loc 1 2085 13 is_stmt 0 view .LVU1306
 4400 0546 0120     		movs	r0, #1
 4401              	.LVL365:
2085:src/keys.c    **** 	  case regY_idx:
 4402              		.loc 1 2085 13 view .LVU1307
 4403 0548 ABE6     		b	.L476
 4404              	.L497:
 4405 054a 00BF     		.align	2
 4406              	.L496:
 4407 054c CDCCCCCC 		.word	-858993459
 4408              		.cfi_endproc
 4409              	.LFE42:
 4411              		.section	.text.cur_shift,"ax",%progbits
 4412              		.align	1
ARM GAS  /tmp/ccgiIQCZ.s 			page 154


 4413              		.p2align 2,,3
 4414              		.global	cur_shift
 4415              		.syntax unified
 4416              		.thumb
 4417              		.thumb_func
 4418              		.fpu fpv4-sp-d16
 4420              	cur_shift:
 4421              	.LFB0:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4422              		.loc 1 96 29 is_stmt 1 view -0
 4423              		.cfi_startproc
 4424              		@ args = 0, pretend = 0, frame = 0
 4425              		@ frame_needed = 0, uses_anonymous_args = 0
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4426              		.loc 1 97 2 view .LVU1309
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4427              		.loc 1 96 29 is_stmt 0 view .LVU1310
 4428 0000 08B5     		push	{r3, lr}
 4429              		.cfi_def_cfa_offset 8
 4430              		.cfi_offset 3, -8
 4431              		.cfi_offset 14, -4
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4432              		.loc 1 97 18 view .LVU1311
 4433 0002 FFF7FEFF 		bl	shift_down
 4434              	.LVL366:
  98:src/keys.c    **** }
 4435              		.loc 1 98 2 is_stmt 1 view .LVU1312
  98:src/keys.c    **** }
 4436              		.loc 1 98 52 is_stmt 0 view .LVU1313
 4437 0006 08B9     		cbnz	r0, .L499
  98:src/keys.c    **** }
 4438              		.loc 1 98 52 discriminator 1 view .LVU1314
 4439 0008 014B     		ldr	r3, .L501
 4440 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 4441              	.LVL367:
 4442              	.L499:
  99:src/keys.c    **** 
 4443              		.loc 1 99 1 discriminator 4 view .LVU1315
 4444 000c 08BD     		pop	{r3, pc}
 4445              	.L502:
 4446 000e 00BF     		.align	2
 4447              	.L501:
 4448 0010 00000000 		.word	StateWhileOn
 4449              		.cfi_endproc
 4450              	.LFE0:
 4452              		.section	.text.reset_shift,"ax",%progbits
 4453              		.align	1
 4454              		.p2align 2,,3
 4455              		.global	reset_shift
 4456              		.syntax unified
 4457              		.thumb
 4458              		.thumb_func
 4459              		.fpu fpv4-sp-d16
 4461              	reset_shift:
 4462              	.LFB2:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 4463              		.loc 1 114 31 is_stmt 1 view -0
ARM GAS  /tmp/ccgiIQCZ.s 			page 155


 4464              		.cfi_startproc
 4465              		@ args = 0, pretend = 0, frame = 0
 4466              		@ frame_needed = 0, uses_anonymous_args = 0
 115:src/keys.c    **** }
 4467              		.loc 1 115 2 view .LVU1317
 4468              	.LVL368:
 4469              	.LBB505:
 4470              	.LBI505:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 4471              		.loc 1 104 20 view .LVU1318
 4472              	.LBB506:
 105:src/keys.c    **** 	State2.shifts = shift;
 4473              		.loc 1 105 2 view .LVU1319
 4474              	.LBB507:
 4475              	.LBI507:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4476              		.loc 1 96 13 view .LVU1320
 4477              	.LBB508:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4478              		.loc 1 97 2 view .LVU1321
 4479              	.LBE508:
 4480              	.LBE507:
 4481              	.LBE506:
 4482              	.LBE505:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 4483              		.loc 1 114 31 is_stmt 0 view .LVU1322
 4484 0000 08B5     		push	{r3, lr}
 4485              		.cfi_def_cfa_offset 8
 4486              		.cfi_offset 3, -8
 4487              		.cfi_offset 14, -4
 4488              	.LBB512:
 4489              	.LBB511:
 4490              	.LBB510:
 4491              	.LBB509:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4492              		.loc 1 97 18 view .LVU1323
 4493 0002 FFF7FEFF 		bl	shift_down
 4494              	.LVL369:
  98:src/keys.c    **** }
 4495              		.loc 1 98 2 is_stmt 1 view .LVU1324
  98:src/keys.c    **** }
 4496              		.loc 1 98 52 is_stmt 0 view .LVU1325
 4497 0006 034B     		ldr	r3, .L508
 4498 0008 00B9     		cbnz	r0, .L504
 4499 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 4500              	.LVL370:
 4501              	.L504:
  98:src/keys.c    **** }
 4502              		.loc 1 98 52 view .LVU1326
 4503              	.LBE509:
 4504              	.LBE510:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4505              		.loc 1 106 2 is_stmt 1 view .LVU1327
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4506              		.loc 1 106 16 is_stmt 0 view .LVU1328
 4507 000c 0022     		movs	r2, #0
 4508 000e 1A74     		strb	r2, [r3, #16]
ARM GAS  /tmp/ccgiIQCZ.s 			page 156


 108:src/keys.c    **** }
 4509              		.loc 1 108 2 is_stmt 1 view .LVU1329
 4510              	.LVL371:
 108:src/keys.c    **** }
 4511              		.loc 1 108 2 is_stmt 0 view .LVU1330
 4512              	.LBE511:
 4513              	.LBE512:
 116:src/keys.c    **** 
 4514              		.loc 1 116 1 view .LVU1331
 4515 0010 08BD     		pop	{r3, pc}
 4516              	.L509:
 4517 0012 00BF     		.align	2
 4518              	.L508:
 4519 0014 00000000 		.word	StateWhileOn
 4520              		.cfi_endproc
 4521              	.LFE2:
 4523              		.section	.text.keycode_to_row_column,"ax",%progbits
 4524              		.align	1
 4525              		.p2align 2,,3
 4526              		.global	keycode_to_row_column
 4527              		.syntax unified
 4528              		.thumb
 4529              		.thumb_func
 4530              		.fpu fpv4-sp-d16
 4532              	keycode_to_row_column:
 4533              	.LVL372:
 4534              	.LFB6:
 180:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 4535              		.loc 1 180 1 is_stmt 1 view -0
 4536              		.cfi_startproc
 4537              		@ args = 0, pretend = 0, frame = 0
 4538              		@ frame_needed = 0, uses_anonymous_args = 0
 4539              		@ link register save eliminated.
 181:src/keys.c    **** }
 4540              		.loc 1 181 2 view .LVU1333
 181:src/keys.c    **** }
 4541              		.loc 1 181 18 is_stmt 0 view .LVU1334
 4542 0000 074A     		ldr	r2, .L511
 4543 0002 82FB0032 		smull	r3, r2, r2, r0
 4544 0006 A2EBE073 		sub	r3, r2, r0, asr #31
 181:src/keys.c    **** }
 4545              		.loc 1 181 24 view .LVU1335
 4546 000a 03EB8302 		add	r2, r3, r3, lsl #2
 4547 000e 5200     		lsls	r2, r2, #1
 181:src/keys.c    **** }
 4548              		.loc 1 181 33 view .LVU1336
 4549 0010 03EB4303 		add	r3, r3, r3, lsl #1
 4550 0014 A0EB4303 		sub	r3, r0, r3, lsl #1
 181:src/keys.c    **** }
 4551              		.loc 1 181 12 view .LVU1337
 4552 0018 02F10B00 		add	r0, r2, #11
 4553              	.LVL373:
 182:src/keys.c    **** 
 4554              		.loc 1 182 1 view .LVU1338
 4555 001c 1844     		add	r0, r0, r3
 4556 001e 7047     		bx	lr
 4557              	.L512:
ARM GAS  /tmp/ccgiIQCZ.s 			page 157


 4558              		.align	2
 4559              	.L511:
 4560 0020 ABAAAA2A 		.word	715827883
 4561              		.cfi_endproc
 4562              	.LFE6:
 4564              		.section	.text.row_column_to_keycode,"ax",%progbits
 4565              		.align	1
 4566              		.p2align 2,,3
 4567              		.global	row_column_to_keycode
 4568              		.syntax unified
 4569              		.thumb
 4570              		.thumb_func
 4571              		.fpu fpv4-sp-d16
 4573              	row_column_to_keycode:
 4574              	.LVL374:
 4575              	.LFB7:
 190:src/keys.c    **** 	int row = c / 10 - 1;
 4576              		.loc 1 190 1 is_stmt 1 view -0
 4577              		.cfi_startproc
 4578              		@ args = 0, pretend = 0, frame = 0
 4579              		@ frame_needed = 0, uses_anonymous_args = 0
 4580              		@ link register save eliminated.
 191:src/keys.c    **** 	int col = c % 10 - 1;
 4581              		.loc 1 191 2 view .LVU1340
 191:src/keys.c    **** 	int col = c % 10 - 1;
 4582              		.loc 1 191 14 is_stmt 0 view .LVU1341
 4583 0000 0E4A     		ldr	r2, .L519
 4584 0002 82FB0032 		smull	r3, r2, r2, r0
 4585 0006 C317     		asrs	r3, r0, #31
 4586 0008 C3EBA203 		rsb	r3, r3, r2, asr #2
 192:src/keys.c    **** 
 4587              		.loc 1 192 14 view .LVU1342
 4588 000c 03EB8302 		add	r2, r3, r3, lsl #2
 191:src/keys.c    **** 	int col = c % 10 - 1;
 4589              		.loc 1 191 6 view .LVU1343
 4590 0010 013B     		subs	r3, r3, #1
 4591              	.LVL375:
 192:src/keys.c    **** 
 4592              		.loc 1 192 2 is_stmt 1 view .LVU1344
 192:src/keys.c    **** 
 4593              		.loc 1 192 14 is_stmt 0 view .LVU1345
 4594 0012 A0EB4200 		sub	r0, r0, r2, lsl #1
 4595              	.LVL376:
 194:src/keys.c    **** 		return -1;
 4596              		.loc 1 194 5 view .LVU1346
 4597 0016 062B     		cmp	r3, #6
 192:src/keys.c    **** 
 4598              		.loc 1 192 6 view .LVU1347
 4599 0018 00F1FF30 		add	r0, r0, #-1
 4600              	.LVL377:
 194:src/keys.c    **** 		return -1;
 4601              		.loc 1 194 2 is_stmt 1 view .LVU1348
 194:src/keys.c    **** 		return -1;
 4602              		.loc 1 194 5 is_stmt 0 view .LVU1349
 4603 001c 0AD8     		bhi	.L518
 194:src/keys.c    **** 		return -1;
 4604              		.loc 1 194 36 discriminator 1 view .LVU1350
ARM GAS  /tmp/ccgiIQCZ.s 			page 158


 4605 001e 012B     		cmp	r3, #1
 4606 0020 CCBF     		ite	gt
 4607 0022 0422     		movgt	r2, #4
 4608 0024 0522     		movle	r2, #5
 194:src/keys.c    **** 		return -1;
 4609              		.loc 1 194 25 discriminator 1 view .LVU1351
 4610 0026 8242     		cmp	r2, r0
 4611 0028 04DB     		blt	.L518
 196:src/keys.c    **** }
 4612              		.loc 1 196 2 is_stmt 1 view .LVU1352
 196:src/keys.c    **** }
 4613              		.loc 1 196 13 is_stmt 0 view .LVU1353
 4614 002a 03EB4303 		add	r3, r3, r3, lsl #1
 4615              	.LVL378:
 196:src/keys.c    **** }
 4616              		.loc 1 196 17 view .LVU1354
 4617 002e 00EB4300 		add	r0, r0, r3, lsl #1
 4618              	.LVL379:
 196:src/keys.c    **** }
 4619              		.loc 1 196 17 view .LVU1355
 4620 0032 7047     		bx	lr
 4621              	.LVL380:
 4622              	.L518:
 195:src/keys.c    **** 	return row * 6 + col;
 4623              		.loc 1 195 10 view .LVU1356
 4624 0034 4FF0FF30 		mov	r0, #-1
 4625              	.LVL381:
 197:src/keys.c    **** 
 4626              		.loc 1 197 1 view .LVU1357
 4627 0038 7047     		bx	lr
 4628              	.L520:
 4629 003a 00BF     		.align	2
 4630              	.L519:
 4631 003c 67666666 		.word	1717986919
 4632              		.cfi_endproc
 4633              	.LFE7:
 4635              		.section	.text.keycode_to_digit_or_register,"ax",%progbits
 4636              		.align	1
 4637              		.p2align 2,,3
 4638              		.global	keycode_to_digit_or_register
 4639              		.syntax unified
 4640              		.thumb
 4641              		.thumb_func
 4642              		.fpu fpv4-sp-d16
 4644              	keycode_to_digit_or_register:
 4645              	.LVL382:
 4646              	.LFB8:
 211:src/keys.c    ****   static const unsigned char map[] = {
 4647              		.loc 1 211 1 is_stmt 1 view -0
 4648              		.cfi_startproc
 4649              		@ args = 0, pretend = 0, frame = 0
 4650              		@ frame_needed = 0, uses_anonymous_args = 0
 4651              		@ link register save eliminated.
 212:src/keys.c    ****     // K00 - K05
 4652              		.loc 1 212 3 view .LVU1359
 234:src/keys.c    **** }
 4653              		.loc 1 234 3 view .LVU1360
ARM GAS  /tmp/ccgiIQCZ.s 			page 159


 4654              	.LBB513:
 4655              	.LBI513:
 131:src/keys.c    **** {
 4656              		.loc 1 131 12 view .LVU1361
 4657              	.LBB514:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 4658              		.loc 1 133 2 view .LVU1362
 143:src/keys.c    **** }
 4659              		.loc 1 143 2 view .LVU1363
 143:src/keys.c    **** }
 4660              		.loc 1 143 23 is_stmt 0 view .LVU1364
 4661 0000 024B     		ldr	r3, .L522
 4662              	.LBE514:
 4663              	.LBE513:
 234:src/keys.c    **** }
 4664              		.loc 1 234 28 view .LVU1365
 4665 0002 034A     		ldr	r2, .L522+4
 4666              	.LBB516:
 4667              	.LBB515:
 143:src/keys.c    **** }
 4668              		.loc 1 143 23 view .LVU1366
 4669 0004 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 4670              	.LBE515:
 4671              	.LBE516:
 235:src/keys.c    **** #else
 4672              		.loc 1 235 1 view .LVU1367
 4673 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 4674              	.LVL383:
 235:src/keys.c    **** #else
 4675              		.loc 1 235 1 view .LVU1368
 4676 0008 7047     		bx	lr
 4677              	.L523:
 4678 000a 00BF     		.align	2
 4679              	.L522:
 4680 000c 00000000 		.word	.LANCHOR6
 4681 0010 00000000 		.word	.LANCHOR5
 4682              		.cfi_endproc
 4683              	.LFE8:
 4685              		.section	.text.init_state,"ax",%progbits
 4686              		.align	1
 4687              		.p2align 2,,3
 4688              		.global	init_state
 4689              		.syntax unified
 4690              		.thumb
 4691              		.thumb_func
 4692              		.fpu fpv4-sp-d16
 4694              	init_state:
 4695              	.LFB13:
 615:src/keys.c    **** #ifndef REALBUILD
 4696              		.loc 1 615 23 is_stmt 1 view -0
 4697              		.cfi_startproc
 4698              		@ args = 0, pretend = 0, frame = 0
 4699              		@ frame_needed = 0, uses_anonymous_args = 0
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4700              		.loc 1 617 2 view .LVU1370
 615:src/keys.c    **** #ifndef REALBUILD
 4701              		.loc 1 615 23 is_stmt 0 view .LVU1371
ARM GAS  /tmp/ccgiIQCZ.s 			page 160


 4702 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 4703              		.cfi_def_cfa_offset 32
 4704              		.cfi_offset 3, -32
 4705              		.cfi_offset 4, -28
 4706              		.cfi_offset 5, -24
 4707              		.cfi_offset 6, -20
 4708              		.cfi_offset 7, -16
 4709              		.cfi_offset 8, -12
 4710              		.cfi_offset 9, -8
 4711              		.cfi_offset 14, -4
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4712              		.loc 1 617 25 view .LVU1372
 4713 0004 1B4C     		ldr	r4, .L526
 625:src/keys.c    **** 	// Removed: will clear any locals on power off
 4714              		.loc 1 625 10 view .LVU1373
 4715 0006 4FF00008 		mov	r8, #0
 629:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 4716              		.loc 1 629 2 view .LVU1374
 4717 000a 4146     		mov	r1, r8
 4718 000c 1422     		movs	r2, #20
 4719 000e 04F10800 		add	r0, r4, #8
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4720              		.loc 1 617 25 view .LVU1375
 4721 0012 257E     		ldrb	r5, [r4, #24]	@ zero_extendqisi2
 618:src/keys.c    **** #else
 4722              		.loc 1 618 25 view .LVU1376
 4723 0014 E67D     		ldrb	r6, [r4, #23]	@ zero_extendqisi2
 622:src/keys.c    **** 	int k = LastKey;
 4724              		.loc 1 622 10 view .LVU1377
 4725 0016 A77C     		ldrb	r7, [r4, #18]	@ zero_extendqisi2
 623:src/keys.c    **** 
 4726              		.loc 1 623 10 view .LVU1378
 4727 0018 94F91390 		ldrsb	r9, [r4, #19]
 625:src/keys.c    **** 	// Removed: will clear any locals on power off
 4728              		.loc 1 625 10 view .LVU1379
 4729 001c 84F81F80 		strb	r8, [r4, #31]
 629:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 4730              		.loc 1 629 2 view .LVU1380
 4731 0020 FFF7FEFF 		bl	xset
 4732              	.LVL384:
 667:src/keys.c    **** #endif
 4733              		.loc 1 667 2 view .LVU1381
 4734 0024 144B     		ldr	r3, .L526+4
 4735 0026 1B68     		ldr	r3, [r3]
 4736 0028 93F8DD27 		ldrb	r2, [r3, #2013]	@ zero_extendqisi2
 4737 002c 68F3C712 		bfi	r2, r8, #7, #1
 4738 0030 83F8DD27 		strb	r2, [r3, #2013]
 675:src/keys.c    **** 	update_program_bounds(1);
 4739              		.loc 1 675 17 view .LVU1382
 4740 0034 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 674:src/keys.c    **** 	State2.runmode = 1;
 4741              		.loc 1 674 14 view .LVU1383
 4742 0036 0722     		movs	r2, #7
 675:src/keys.c    **** 	update_program_bounds(1);
 4743              		.loc 1 675 17 view .LVU1384
 4744 0038 43F04003 		orr	r3, r3, #64
 676:src/keys.c    **** 	set_lift();
ARM GAS  /tmp/ccgiIQCZ.s 			page 161


 4745              		.loc 1 676 2 view .LVU1385
 4746 003c 0120     		movs	r0, #1
 674:src/keys.c    **** 	State2.runmode = 1;
 4747              		.loc 1 674 14 view .LVU1386
 4748 003e E273     		strb	r2, [r4, #15]
 675:src/keys.c    **** 	update_program_bounds(1);
 4749              		.loc 1 675 17 view .LVU1387
 4750 0040 A375     		strb	r3, [r4, #22]
 676:src/keys.c    **** 	set_lift();
 4751              		.loc 1 676 2 view .LVU1388
 4752 0042 FFF7FEFF 		bl	update_program_bounds
 4753              	.LVL385:
 677:src/keys.c    **** 
 4754              		.loc 1 677 2 view .LVU1389
 4755 0046 FFF7FEFF 		bl	set_lift
 4756              	.LVL386:
 684:src/keys.c    **** 	State2.flags = a;
 4757              		.loc 1 684 15 view .LVU1390
 4758 004a E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 685:src/keys.c    **** #else
 4759              		.loc 1 685 15 view .LVU1391
 4760 004c 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 689:src/keys.c    **** }
 4761              		.loc 1 689 15 view .LVU1392
 4762 004e 0B49     		ldr	r1, .L526+8
 682:src/keys.c    **** #ifndef REALBUILD
 4763              		.loc 1 682 10 view .LVU1393
 4764 0050 84F81390 		strb	r9, [r4, #19]
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4765              		.loc 1 617 25 view .LVU1394
 4766 0054 05F00105 		and	r5, r5, #1
 4767              	.LVL387:
 618:src/keys.c    **** #else
 4768              		.loc 1 618 2 is_stmt 1 view .LVU1395
 618:src/keys.c    **** #else
 4769              		.loc 1 618 25 is_stmt 0 view .LVU1396
 4770 0058 F609     		lsrs	r6, r6, #7
 4771              	.LVL388:
 622:src/keys.c    **** 	int k = LastKey;
 4772              		.loc 1 622 2 is_stmt 1 view .LVU1397
 622:src/keys.c    **** 	int k = LastKey;
 4773              		.loc 1 622 10 is_stmt 0 view .LVU1398
 4774 005a FFB2     		uxtb	r7, r7
 4775              	.LVL389:
 623:src/keys.c    **** 
 4776              		.loc 1 623 2 is_stmt 1 view .LVU1399
 625:src/keys.c    **** 	// Removed: will clear any locals on power off
 4777              		.loc 1 625 2 view .LVU1400
 629:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 4778              		.loc 1 629 2 view .LVU1401
 667:src/keys.c    **** #endif
 4779              		.loc 1 667 2 view .LVU1402
 674:src/keys.c    **** 	State2.runmode = 1;
 4780              		.loc 1 674 2 view .LVU1403
 675:src/keys.c    **** 	update_program_bounds(1);
 4781              		.loc 1 675 2 view .LVU1404
 676:src/keys.c    **** 	set_lift();
ARM GAS  /tmp/ccgiIQCZ.s 			page 162


 4782              		.loc 1 676 2 view .LVU1405
 677:src/keys.c    **** 
 4783              		.loc 1 677 2 view .LVU1406
 681:src/keys.c    **** 	LastKey = k;
 4784              		.loc 1 681 2 view .LVU1407
 684:src/keys.c    **** 	State2.flags = a;
 4785              		.loc 1 684 15 is_stmt 0 view .LVU1408
 4786 005c 66F3C712 		bfi	r2, r6, #7, #1
 685:src/keys.c    **** #else
 4787              		.loc 1 685 15 view .LVU1409
 4788 0060 65F30003 		bfi	r3, r5, #0, #1
 689:src/keys.c    **** }
 4789              		.loc 1 689 15 view .LVU1410
 4790 0064 6420     		movs	r0, #100
 684:src/keys.c    **** 	State2.flags = a;
 4791              		.loc 1 684 15 view .LVU1411
 4792 0066 E275     		strb	r2, [r4, #23]
 685:src/keys.c    **** #else
 4793              		.loc 1 685 15 view .LVU1412
 4794 0068 2376     		strb	r3, [r4, #24]
 681:src/keys.c    **** 	LastKey = k;
 4795              		.loc 1 681 10 view .LVU1413
 4796 006a A774     		strb	r7, [r4, #18]
 682:src/keys.c    **** #ifndef REALBUILD
 4797              		.loc 1 682 2 is_stmt 1 view .LVU1414
 684:src/keys.c    **** 	State2.flags = a;
 4798              		.loc 1 684 2 view .LVU1415
 685:src/keys.c    **** #else
 4799              		.loc 1 685 2 view .LVU1416
 689:src/keys.c    **** }
 4800              		.loc 1 689 2 view .LVU1417
 689:src/keys.c    **** }
 4801              		.loc 1 689 15 is_stmt 0 view .LVU1418
 4802 006c 0860     		str	r0, [r1]
 690:src/keys.c    **** 
 4803              		.loc 1 690 1 view .LVU1419
 4804 006e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4805              	.LVL390:
 4806              	.L527:
 690:src/keys.c    **** 
 4807              		.loc 1 690 1 view .LVU1420
 4808 0072 00BF     		.align	2
 4809              	.L526:
 4810 0074 00000000 		.word	StateWhileOn
 4811 0078 00000000 		.word	main_ram
 4812 007c 00000000 		.word	ShowRegister
 4813              		.cfi_endproc
 4814              	.LFE13:
 4816              		.section	.text.process_cmplx,"ax",%progbits
 4817              		.align	1
 4818              		.p2align 2,,3
 4819              		.syntax unified
 4820              		.thumb
 4821              		.thumb_func
 4822              		.fpu fpv4-sp-d16
 4824              	process_cmplx:
 4825              	.LVL391:
ARM GAS  /tmp/ccgiIQCZ.s 			page 163


 4826              	.LFB27:
1469:src/keys.c    **** #define _RARG   0xFF00
 4827              		.loc 1 1469 43 is_stmt 1 view -0
 4828              		.cfi_startproc
 4829              		@ args = 0, pretend = 0, frame = 0
 4830              		@ frame_needed = 0, uses_anonymous_args = 0
1474:src/keys.c    **** 		// Row 1
 4831              		.loc 1 1474 2 view .LVU1422
1525:src/keys.c    **** 	int lc = keycode_to_linear(c);
 4832              		.loc 1 1525 2 view .LVU1423
 4833              	.LBB517:
 4834              	.LBI517:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 4835              		.loc 1 114 13 view .LVU1424
 4836              	.LBE517:
 115:src/keys.c    **** }
 4837              		.loc 1 115 2 view .LVU1425
 4838              	.LBB534:
 4839              	.LBB518:
 4840              	.LBI518:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 4841              		.loc 1 104 20 view .LVU1426
 4842              	.LBB519:
 105:src/keys.c    **** 	State2.shifts = shift;
 4843              		.loc 1 105 2 view .LVU1427
 4844              	.LBB520:
 4845              	.LBI520:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4846              		.loc 1 96 13 view .LVU1428
 4847              	.LBB521:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4848              		.loc 1 97 2 view .LVU1429
 4849              	.LBE521:
 4850              	.LBE520:
 4851              	.LBE519:
 4852              	.LBE518:
 4853              	.LBE534:
1469:src/keys.c    **** #define _RARG   0xFF00
 4854              		.loc 1 1469 43 is_stmt 0 view .LVU1430
 4855 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4856              		.cfi_def_cfa_offset 24
 4857              		.cfi_offset 3, -24
 4858              		.cfi_offset 4, -20
 4859              		.cfi_offset 5, -16
 4860              		.cfi_offset 6, -12
 4861              		.cfi_offset 7, -8
 4862              		.cfi_offset 14, -4
1469:src/keys.c    **** #define _RARG   0xFF00
 4863              		.loc 1 1469 43 view .LVU1431
 4864 0002 0546     		mov	r5, r0
 4865              	.LBB535:
 4866              	.LBB530:
 4867              	.LBB526:
 4868              	.LBB524:
 4869              	.LBB522:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4870              		.loc 1 97 18 view .LVU1432
ARM GAS  /tmp/ccgiIQCZ.s 			page 164


 4871 0004 FFF7FEFF 		bl	shift_down
 4872              	.LVL392:
  98:src/keys.c    **** }
 4873              		.loc 1 98 2 is_stmt 1 view .LVU1433
  98:src/keys.c    **** }
 4874              		.loc 1 98 52 is_stmt 0 view .LVU1434
 4875 0008 00B3     		cbz	r0, .L546
 4876 000a 2E4F     		ldr	r7, .L554
 4877 000c 0446     		mov	r4, r0
 4878              	.L529:
 4879              	.LVL393:
  98:src/keys.c    **** }
 4880              		.loc 1 98 52 view .LVU1435
 4881              	.LBE522:
 4882              	.LBE524:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4883              		.loc 1 106 2 is_stmt 1 view .LVU1436
 4884              	.LBE526:
 4885              	.LBE530:
 4886              	.LBE535:
 4887              	.LBB536:
 4888              	.LBB537:
 158:src/keys.c    **** }
 4889              		.loc 1 158 23 is_stmt 0 view .LVU1437
 4890 000e 2E4B     		ldr	r3, .L554+4
 4891              	.LBE537:
 4892              	.LBE536:
1527:src/keys.c    **** 	State2.cmplx = 0;
 4893              		.loc 1 1527 21 view .LVU1438
 4894 0010 2E48     		ldr	r0, .L554+8
 4895              	.LBB540:
 4896              	.LBB538:
 158:src/keys.c    **** }
 4897              		.loc 1 158 23 view .LVU1439
 4898 0012 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 4899              	.LBE538:
 4900              	.LBE540:
1528:src/keys.c    **** 
 4901              		.loc 1 1528 15 view .LVU1440
 4902 0014 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
1527:src/keys.c    **** 	State2.cmplx = 0;
 4903              		.loc 1 1527 21 view .LVU1441
 4904 0016 04EB8303 		add	r3, r4, r3, lsl #2
 4905              	.LBB541:
 4906              	.LBB531:
 4907              	.LBB527:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4908              		.loc 1 106 16 view .LVU1442
 4909 001a 0021     		movs	r1, #0
 4910              	.LBE527:
 4911              	.LBE531:
 4912              	.LBE541:
1527:src/keys.c    **** 	State2.cmplx = 0;
 4913              		.loc 1 1527 21 view .LVU1443
 4914 001c 30F81360 		ldrh	r6, [r0, r3, lsl #1]
 4915              	.LBB542:
 4916              	.LBB532:
ARM GAS  /tmp/ccgiIQCZ.s 			page 165


 4917              	.LBB528:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4918              		.loc 1 106 16 view .LVU1444
 4919 0020 3974     		strb	r1, [r7, #16]
 108:src/keys.c    **** }
 4920              		.loc 1 108 2 is_stmt 1 view .LVU1445
 4921              	.LVL394:
 108:src/keys.c    **** }
 4922              		.loc 1 108 2 is_stmt 0 view .LVU1446
 4923              	.LBE528:
 4924              	.LBE532:
 4925              	.LBE542:
1526:src/keys.c    **** 	int op = op_map[lc][shift];
 4926              		.loc 1 1526 2 is_stmt 1 view .LVU1447
 4927              	.LBB543:
 4928              	.LBI536:
 146:src/keys.c    **** {
 4929              		.loc 1 146 12 view .LVU1448
 4930              	.LBB539:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 4931              		.loc 1 148 2 view .LVU1449
 158:src/keys.c    **** }
 4932              		.loc 1 158 2 view .LVU1450
 158:src/keys.c    **** }
 4933              		.loc 1 158 2 is_stmt 0 view .LVU1451
 4934              	.LBE539:
 4935              	.LBE543:
1527:src/keys.c    **** 	State2.cmplx = 0;
 4936              		.loc 1 1527 2 is_stmt 1 view .LVU1452
1528:src/keys.c    **** 
 4937              		.loc 1 1528 2 view .LVU1453
1530:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4938              		.loc 1 1530 5 is_stmt 0 view .LVU1454
 4939 0022 06F47F43 		and	r3, r6, #65280
1528:src/keys.c    **** 
 4940              		.loc 1 1528 15 view .LVU1455
 4941 0026 61F34102 		bfi	r2, r1, #1, #1
1530:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4942              		.loc 1 1530 5 view .LVU1456
 4943 002a B3F57F4F 		cmp	r3, #65280
1528:src/keys.c    **** 
 4944              		.loc 1 1528 15 view .LVU1457
 4945 002e 7A75     		strb	r2, [r7, #21]
1530:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4946              		.loc 1 1530 2 is_stmt 1 view .LVU1458
1530:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4947              		.loc 1 1530 5 is_stmt 0 view .LVU1459
 4948 0030 36D0     		beq	.L549
1534:src/keys.c    **** 		// HYP
 4949              		.loc 1 1534 2 is_stmt 1 view .LVU1460
1534:src/keys.c    **** 		// HYP
 4950              		.loc 1 1534 5 is_stmt 0 view .LVU1461
 4951 0032 DDB1     		cbz	r5, .L550
1543:src/keys.c    **** 		switch (c) {
 4952              		.loc 1 1543 2 is_stmt 1 view .LVU1462
1543:src/keys.c    **** 		switch (c) {
 4953              		.loc 1 1543 5 is_stmt 0 view .LVU1463
ARM GAS  /tmp/ccgiIQCZ.s 			page 166


 4954 0034 2CB1     		cbz	r4, .L534
1544:src/keys.c    **** 		case K_CMPLX:
 4955              		.loc 1 1544 3 is_stmt 1 view .LVU1464
 4956 0036 242D     		cmp	r5, #36
 4957 0038 2CD0     		beq	.L535
 4958 003a 2D2D     		cmp	r5, #45
 4959 003c 23D0     		beq	.L536
 4960 003e 1F2D     		cmp	r5, #31
 4961 0040 0CD0     		beq	.L551
 4962              	.L534:
1568:src/keys.c    **** #else
 4963              		.loc 1 1568 2 view .LVU1465
 4964              	.LVL395:
 4965              	.LBB544:
 4966              	.LBI544:
 716:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 4967              		.loc 1 716 12 view .LVU1466
 4968              	.LBB545:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 4969              		.loc 1 717 2 view .LVU1467
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 4970              		.loc 1 717 6 is_stmt 0 view .LVU1468
 4971 0042 3312     		asrs	r3, r6, #8
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 4972              		.loc 1 717 5 view .LVU1469
 4973 0044 012B     		cmp	r3, #1
 4974 0046 04D0     		beq	.L552
 4975              	.LVL396:
 4976              	.L528:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 4977              		.loc 1 717 5 view .LVU1470
 4978              	.LBE545:
 4979              	.LBE544:
1576:src/keys.c    **** 
 4980              		.loc 1 1576 1 view .LVU1471
 4981 0048 3046     		mov	r0, r6
 4982 004a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4983              	.LVL397:
 4984              	.L546:
 4985              	.LBB551:
 4986              	.LBB533:
 4987              	.LBB529:
 4988              	.LBB525:
 4989              	.LBB523:
  98:src/keys.c    **** }
 4990              		.loc 1 98 52 view .LVU1472
 4991 004c 1D4F     		ldr	r7, .L554
 4992 004e 3C7C     		ldrb	r4, [r7, #16]	@ zero_extendqisi2
 4993 0050 DDE7     		b	.L529
 4994              	.LVL398:
 4995              	.L552:
  98:src/keys.c    **** }
 4996              		.loc 1 98 52 view .LVU1473
 4997              	.LBE523:
 4998              	.LBE525:
 4999              	.LBE529:
 5000              	.LBE533:
ARM GAS  /tmp/ccgiIQCZ.s 			page 167


 5001              	.LBE551:
 5002              	.LBB552:
 5003              	.LBB546:
 5004 0052 3046     		mov	r0, r6
 5005              	.LBE546:
 5006              	.LBE552:
1576:src/keys.c    **** 
 5007              		.loc 1 1576 1 view .LVU1474
 5008 0054 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 5009              		.cfi_remember_state
 5010              		.cfi_restore 14
 5011              		.cfi_restore 7
 5012              		.cfi_restore 6
 5013              		.cfi_restore 5
 5014              		.cfi_restore 4
 5015              		.cfi_restore 3
 5016              		.cfi_def_cfa_offset 0
 5017              	.LVL399:
 5018              	.LBB553:
 5019              	.LBB547:
1576:src/keys.c    **** 
 5020              		.loc 1 1576 1 view .LVU1475
 5021 0058 FFF7FEBF 		b	check_confirm.part.0
 5022              	.LVL400:
 5023              	.L551:
 5024              		.cfi_restore_state
1576:src/keys.c    **** 
 5025              		.loc 1 1576 1 view .LVU1476
 5026              	.LBE547:
 5027              	.LBE553:
1550:src/keys.c    **** 				if (is_bad_cmdline())
 5028              		.loc 1 1550 4 is_stmt 1 view .LVU1477
1550:src/keys.c    **** 				if (is_bad_cmdline())
 5029              		.loc 1 1550 7 is_stmt 0 view .LVU1478
 5030 005c 332E     		cmp	r6, #51
 5031 005e 02D0     		beq	.L548
1551:src/keys.c    **** 					return STATE_UNFINISHED;
 5032              		.loc 1 1551 5 is_stmt 1 view .LVU1479
1551:src/keys.c    **** 					return STATE_UNFINISHED;
 5033              		.loc 1 1551 9 is_stmt 0 view .LVU1480
 5034 0060 FFF7FEFF 		bl	is_bad_cmdline
 5035              	.LVL401:
1551:src/keys.c    **** 					return STATE_UNFINISHED;
 5036              		.loc 1 1551 8 view .LVU1481
 5037 0064 28B3     		cbz	r0, .L553
 5038              	.L548:
1540:src/keys.c    **** 	}
 5039              		.loc 1 1540 3 is_stmt 1 view .LVU1482
1540:src/keys.c    **** 	}
 5040              		.loc 1 1540 10 is_stmt 0 view .LVU1483
 5041 0066 3326     		movs	r6, #51
 5042              	.LVL402:
1576:src/keys.c    **** 
 5043              		.loc 1 1576 1 view .LVU1484
 5044 0068 3046     		mov	r0, r6
 5045 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5046              	.LVL403:
ARM GAS  /tmp/ccgiIQCZ.s 			page 168


 5047              	.L550:
1536:src/keys.c    **** 		State2.hyp = 1;
 5048              		.loc 1 1536 3 is_stmt 1 view .LVU1485
 5049 006c FFF7FEFF 		bl	process_cmdline_set_lift
 5050              	.LVL404:
1537:src/keys.c    **** 		State2.dot = op;
 5051              		.loc 1 1537 3 view .LVU1486
1538:src/keys.c    **** 		State2.cmplx = 1;
 5052              		.loc 1 1538 3 view .LVU1487
1539:src/keys.c    **** 		return STATE_UNFINISHED;
 5053              		.loc 1 1539 3 view .LVU1488
1539:src/keys.c    **** 		return STATE_UNFINISHED;
 5054              		.loc 1 1539 16 is_stmt 0 view .LVU1489
 5055 0070 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 5056 0072 06F00103 		and	r3, r6, #1
 5057 0076 9B01     		lsls	r3, r3, #6
 5058 0078 43F02203 		orr	r3, r3, #34
 5059 007c 22F06202 		bic	r2, r2, #98
 5060 0080 1343     		orrs	r3, r3, r2
 5061 0082 7B75     		strb	r3, [r7, #21]
 5062 0084 EFE7     		b	.L548
 5063              	.L536:
1546:src/keys.c    **** 			break;
 5064              		.loc 1 1546 4 is_stmt 1 view .LVU1490
 5065              	.LVL405:
 5066              	.LBB554:
 5067              	.LBI554:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 5068              		.loc 1 104 20 view .LVU1491
 5069              	.LBB555:
 105:src/keys.c    **** 	State2.shifts = shift;
 5070              		.loc 1 105 2 view .LVU1492
 5071              	.LBB556:
 5072              	.LBI556:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 5073              		.loc 1 96 13 view .LVU1493
 5074              	.LBB557:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5075              		.loc 1 97 2 view .LVU1494
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5076              		.loc 1 97 18 is_stmt 0 view .LVU1495
 5077 0086 FFF7FEFF 		bl	shift_down
 5078              	.LVL406:
  98:src/keys.c    **** }
 5079              		.loc 1 98 2 is_stmt 1 view .LVU1496
 5080              	.LBE557:
 5081              	.LBE556:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5082              		.loc 1 106 2 view .LVU1497
 5083              	.LBE555:
 5084              	.LBE554:
 5085              	.LBB559:
 5086              	.LBB548:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 5087              		.loc 1 717 6 is_stmt 0 view .LVU1498
 5088 008a 3312     		asrs	r3, r6, #8
 717:src/keys.c    **** 		const int nilop = argKIND(op);
ARM GAS  /tmp/ccgiIQCZ.s 			page 169


 5089              		.loc 1 717 5 view .LVU1499
 5090 008c 012B     		cmp	r3, #1
 5091              	.LBE548:
 5092              	.LBE559:
 5093              	.LBB560:
 5094              	.LBB558:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5095              		.loc 1 106 16 view .LVU1500
 5096 008e 3C74     		strb	r4, [r7, #16]
 108:src/keys.c    **** }
 5097              		.loc 1 108 2 is_stmt 1 view .LVU1501
 5098              	.LVL407:
 108:src/keys.c    **** }
 5099              		.loc 1 108 2 is_stmt 0 view .LVU1502
 5100              	.LBE558:
 5101              	.LBE560:
1568:src/keys.c    **** #else
 5102              		.loc 1 1568 2 is_stmt 1 view .LVU1503
 5103              	.LBB561:
 716:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 5104              		.loc 1 716 12 view .LVU1504
 5105              	.LBB549:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 5106              		.loc 1 717 2 view .LVU1505
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 5107              		.loc 1 717 5 is_stmt 0 view .LVU1506
 5108 0090 DAD1     		bne	.L528
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 5109              		.loc 1 717 5 view .LVU1507
 5110 0092 DEE7     		b	.L552
 5111              	.LVL408:
 5112              	.L535:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 5113              		.loc 1 717 5 view .LVU1508
 5114              	.LBE549:
 5115              	.LBE561:
1560:src/keys.c    **** 			break;
 5116              		.loc 1 1560 4 is_stmt 1 view .LVU1509
 5117 0094 FFF7FEFF 		bl	init_state
 5118              	.LVL409:
1561:src/keys.c    **** 
 5119              		.loc 1 1561 4 view .LVU1510
1568:src/keys.c    **** #else
 5120              		.loc 1 1568 2 view .LVU1511
 5121              	.LBB562:
 716:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 5122              		.loc 1 716 12 view .LVU1512
 5123              	.LBB550:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 5124              		.loc 1 717 2 view .LVU1513
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 5125              		.loc 1 717 6 is_stmt 0 view .LVU1514
 5126 0098 3312     		asrs	r3, r6, #8
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 5127              		.loc 1 717 5 view .LVU1515
 5128 009a 012B     		cmp	r3, #1
 5129 009c D4D1     		bne	.L528
ARM GAS  /tmp/ccgiIQCZ.s 			page 170


 5130 009e D8E7     		b	.L552
 5131              	.LVL410:
 5132              	.L549:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 5133              		.loc 1 717 5 view .LVU1516
 5134              	.LBE550:
 5135              	.LBE562:
1531:src/keys.c    **** 		return STATE_UNFINISHED;
 5136              		.loc 1 1531 3 is_stmt 1 view .LVU1517
 5137              	.LBB563:
 5138              	.LBI563:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 5139              		.loc 1 552 13 view .LVU1518
 5140              	.LBB564:
 553:src/keys.c    **** 		return;
 5141              		.loc 1 553 2 view .LVU1519
 553:src/keys.c    **** 		return;
 5142              		.loc 1 553 6 is_stmt 0 view .LVU1520
 5143 00a0 FFF7FEFF 		bl	is_bad_cmdline
 5144              	.LVL411:
 553:src/keys.c    **** 		return;
 5145              		.loc 1 553 5 view .LVU1521
 5146 00a4 0028     		cmp	r0, #0
 5147 00a6 DED1     		bne	.L548
 5148 00a8 F0B2     		uxtb	r0, r6
 5149 00aa FFF7FEFF 		bl	init_arg.part.0
 5150              	.LVL412:
 5151              	.LBE564:
 5152              	.LBE563:
1532:src/keys.c    **** 	}
 5153              		.loc 1 1532 10 view .LVU1522
 5154 00ae 3326     		movs	r6, #51
 5155              	.LVL413:
1532:src/keys.c    **** 	}
 5156              		.loc 1 1532 10 view .LVU1523
 5157 00b0 CAE7     		b	.L528
 5158              	.LVL414:
 5159              	.L553:
1553:src/keys.c    **** 				State2.cmplx = 1;
 5160              		.loc 1 1553 5 is_stmt 1 view .LVU1524
 5161 00b2 FFF7FEFF 		bl	process_cmdline_set_lift
 5162              	.LVL415:
1554:src/keys.c    **** 				State2.test = op;
 5163              		.loc 1 1554 5 view .LVU1525
1554:src/keys.c    **** 				State2.test = op;
 5164              		.loc 1 1554 18 is_stmt 0 view .LVU1526
 5165 00b6 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
1555:src/keys.c    **** 			}
 5166              		.loc 1 1555 17 view .LVU1527
 5167 00b8 FE73     		strb	r6, [r7, #15]
1554:src/keys.c    **** 				State2.test = op;
 5168              		.loc 1 1554 18 view .LVU1528
 5169 00ba 43F00203 		orr	r3, r3, #2
 5170 00be 7B75     		strb	r3, [r7, #21]
1555:src/keys.c    **** 			}
 5171              		.loc 1 1555 5 is_stmt 1 view .LVU1529
1557:src/keys.c    **** 
ARM GAS  /tmp/ccgiIQCZ.s 			page 171


 5172              		.loc 1 1557 11 is_stmt 0 view .LVU1530
 5173 00c0 3326     		movs	r6, #51
 5174              	.LVL416:
1557:src/keys.c    **** 
 5175              		.loc 1 1557 11 view .LVU1531
 5176 00c2 C1E7     		b	.L528
 5177              	.L555:
 5178              		.align	2
 5179              	.L554:
 5180 00c4 00000000 		.word	StateWhileOn
 5181 00c8 00000000 		.word	.LANCHOR1
 5182 00cc 00000000 		.word	.LANCHOR7
 5183              		.cfi_endproc
 5184              	.LFE27:
 5186              		.section	.text.soft_init_state,"ax",%progbits
 5187              		.align	1
 5188              		.p2align 2,,3
 5189              		.global	soft_init_state
 5190              		.syntax unified
 5191              		.thumb
 5192              		.thumb_func
 5193              		.fpu fpv4-sp-d16
 5195              	soft_init_state:
 5196              	.LFB14:
 692:src/keys.c    ****   int soft;
 5197              		.loc 1 692 28 is_stmt 1 view -0
 5198              		.cfi_startproc
 5199              		@ args = 0, pretend = 0, frame = 0
 5200              		@ frame_needed = 0, uses_anonymous_args = 0
 693:src/keys.c    ****   unsigned int runmode;
 5201              		.loc 1 693 3 view .LVU1533
 694:src/keys.c    ****   unsigned int alphas;
 5202              		.loc 1 694 3 view .LVU1534
 695:src/keys.c    **** 
 5203              		.loc 1 695 3 view .LVU1535
 697:src/keys.c    ****     CmdLineLength = 0;
 5204              		.loc 1 697 3 view .LVU1536
 692:src/keys.c    ****   int soft;
 5205              		.loc 1 692 28 is_stmt 0 view .LVU1537
 5206 0000 38B5     		push	{r3, r4, r5, lr}
 5207              		.cfi_def_cfa_offset 16
 5208              		.cfi_offset 3, -16
 5209              		.cfi_offset 4, -12
 5210              		.cfi_offset 5, -8
 5211              		.cfi_offset 14, -4
 697:src/keys.c    ****     CmdLineLength = 0;
 5212              		.loc 1 697 7 view .LVU1538
 5213 0002 154C     		ldr	r4, .L565
 697:src/keys.c    ****     CmdLineLength = 0;
 5214              		.loc 1 697 6 view .LVU1539
 5215 0004 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 5216 0006 1BBB     		cbnz	r3, .L564
 703:src/keys.c    ****     State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 5217              		.loc 1 703 3 is_stmt 1 view .LVU1540
 704:src/keys.c    ****   runmode = State2.runmode;
 5218              		.loc 1 704 18 is_stmt 0 view .LVU1541
 5219 0008 144A     		ldr	r2, .L565+4
ARM GAS  /tmp/ccgiIQCZ.s 			page 172


 5220 000a 6369     		ldr	r3, [r4, #20]
 704:src/keys.c    ****   runmode = State2.runmode;
 5221              		.loc 1 704 61 view .LVU1542
 5222 000c 1A42     		tst	r2, r3
 5223 000e 0FD0     		beq	.L559
 5224              	.L561:
 5225              	.LVL417:
 705:src/keys.c    ****   alphas = State2.alphas;
 5226              		.loc 1 705 3 is_stmt 1 view .LVU1543
 706:src/keys.c    ****   init_state();
 5227              		.loc 1 706 18 is_stmt 0 view .LVU1544
 5228 0010 A57D     		ldrb	r5, [r4, #22]	@ zero_extendqisi2
 5229              	.LVL418:
 706:src/keys.c    ****   init_state();
 5230              		.loc 1 706 3 is_stmt 1 view .LVU1545
 707:src/keys.c    ****   if (soft) {
 5231              		.loc 1 707 3 view .LVU1546
 5232 0012 FFF7FEFF 		bl	init_state
 5233              	.LVL419:
 708:src/keys.c    ****     State2.runmode = runmode;
 5234              		.loc 1 708 3 view .LVU1547
 709:src/keys.c    ****     State2.alphas = alphas;
 5235              		.loc 1 709 5 view .LVU1548
 710:src/keys.c    ****   }
 5236              		.loc 1 710 5 view .LVU1549
 710:src/keys.c    ****   }
 5237              		.loc 1 710 19 is_stmt 0 view .LVU1550
 5238 0016 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 5239 0018 05F04805 		and	r5, r5, #72
 5240 001c 23F04803 		bic	r3, r3, #72
 5241 0020 2B43     		orrs	r3, r3, r5
 5242 0022 A375     		strb	r3, [r4, #22]
 712:src/keys.c    ****   display_current_menu();
 5243              		.loc 1 712 3 is_stmt 1 view .LVU1551
 5244 0024 FFF7FEFF 		bl	clear_disp
 5245              	.LVL420:
 713:src/keys.c    **** }
 5246              		.loc 1 713 3 view .LVU1552
 714:src/keys.c    **** 
 5247              		.loc 1 714 1 is_stmt 0 view .LVU1553
 5248 0028 BDE83840 		pop	{r3, r4, r5, lr}
 5249              		.cfi_remember_state
 5250              		.cfi_restore 14
 5251              		.cfi_restore 5
 5252              		.cfi_restore 4
 5253              		.cfi_restore 3
 5254              		.cfi_def_cfa_offset 0
 713:src/keys.c    **** }
 5255              		.loc 1 713 3 view .LVU1554
 5256 002c FFF7FEBF 		b	display_current_menu
 5257              	.LVL421:
 5258              	.L559:
 5259              		.cfi_restore_state
 704:src/keys.c    ****   runmode = State2.runmode;
 5260              		.loc 1 704 61 discriminator 2 view .LVU1555
 5261 0030 E368     		ldr	r3, [r4, #12]
 5262 0032 23F47F03 		bic	r3, r3, #16711680
ARM GAS  /tmp/ccgiIQCZ.s 			page 173


 5263 0036 23F47F43 		bic	r3, r3, #65280
 5264 003a B3F1E06F 		cmp	r3, #117440512
 5265 003e E7D1     		bne	.L561
 5266              	.LVL422:
 705:src/keys.c    ****   alphas = State2.alphas;
 5267              		.loc 1 705 3 is_stmt 1 view .LVU1556
 706:src/keys.c    ****   init_state();
 5268              		.loc 1 706 3 view .LVU1557
 707:src/keys.c    ****   if (soft) {
 5269              		.loc 1 707 3 view .LVU1558
 5270 0040 FFF7FEFF 		bl	init_state
 5271              	.LVL423:
 708:src/keys.c    ****     State2.runmode = runmode;
 5272              		.loc 1 708 3 view .LVU1559
 712:src/keys.c    ****   display_current_menu();
 5273              		.loc 1 712 3 view .LVU1560
 5274 0044 FFF7FEFF 		bl	clear_disp
 5275              	.LVL424:
 713:src/keys.c    **** }
 5276              		.loc 1 713 3 view .LVU1561
 714:src/keys.c    **** 
 5277              		.loc 1 714 1 is_stmt 0 view .LVU1562
 5278 0048 BDE83840 		pop	{r3, r4, r5, lr}
 5279              		.cfi_remember_state
 5280              		.cfi_restore 14
 5281              		.cfi_restore 5
 5282              		.cfi_restore 4
 5283              		.cfi_restore 3
 5284              		.cfi_def_cfa_offset 0
 713:src/keys.c    **** }
 5285              		.loc 1 713 3 view .LVU1563
 5286 004c FFF7FEBF 		b	display_current_menu
 5287              	.LVL425:
 5288              	.L564:
 5289              		.cfi_restore_state
 5290              	.LBB567:
 5291              	.LBI567:
 692:src/keys.c    ****   int soft;
 5292              		.loc 1 692 6 is_stmt 1 view .LVU1564
 5293              	.LBB568:
 698:src/keys.c    ****     CmdLineEex = 0;
 5294              		.loc 1 698 5 view .LVU1565
 699:src/keys.c    ****     CmdLineDot = 0;
 5295              		.loc 1 699 5 view .LVU1566
 700:src/keys.c    ****     return;
 5296              		.loc 1 700 5 view .LVU1567
 698:src/keys.c    ****     CmdLineEex = 0;
 5297              		.loc 1 698 19 is_stmt 0 view .LVU1568
 5298 0050 0023     		movs	r3, #0
 5299 0052 A383     		strh	r3, [r4, #28]	@ movhi
 700:src/keys.c    ****     return;
 5300              		.loc 1 700 16 view .LVU1569
 5301 0054 A377     		strb	r3, [r4, #30]
 701:src/keys.c    ****   }
 5302              		.loc 1 701 5 is_stmt 1 view .LVU1570
 5303              	.LBE568:
 5304              	.LBE567:
ARM GAS  /tmp/ccgiIQCZ.s 			page 174


 714:src/keys.c    **** 
 5305              		.loc 1 714 1 is_stmt 0 view .LVU1571
 5306 0056 38BD     		pop	{r3, r4, r5, pc}
 5307              	.L566:
 5308              		.align	2
 5309              	.L565:
 5310 0058 00000000 		.word	StateWhileOn
 5311 005c 002F2004 		.word	69218048
 5312              		.cfi_endproc
 5313              	.LFE14:
 5315              		.section	.text.finish_cpx_entry,"ax",%progbits
 5316              		.align	1
 5317              		.p2align 2,,3
 5318              		.global	finish_cpx_entry
 5319              		.syntax unified
 5320              		.thumb
 5321              		.thumb_func
 5322              		.fpu fpv4-sp-d16
 5324              	finish_cpx_entry:
 5325              	.LVL426:
 5326              	.LFB23:
1208:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5327              		.loc 1 1208 36 is_stmt 1 view -0
 5328              		.cfi_startproc
 5329              		@ args = 0, pretend = 0, frame = 0
 5330              		@ frame_needed = 0, uses_anonymous_args = 0
1213:src/keys.c    **** 
 5331              		.loc 1 1213 2 view .LVU1573
1208:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5332              		.loc 1 1208 36 is_stmt 0 view .LVU1574
 5333 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5334              		.cfi_def_cfa_offset 24
 5335              		.cfi_offset 3, -24
 5336              		.cfi_offset 4, -20
 5337              		.cfi_offset 5, -16
 5338              		.cfi_offset 6, -12
 5339              		.cfi_offset 7, -8
 5340              		.cfi_offset 14, -4
1213:src/keys.c    **** 
 5341              		.loc 1 1213 10 view .LVU1575
 5342 0002 314D     		ldr	r5, .L583
 5343 0004 2B68     		ldr	r3, [r5]
 5344 0006 93F8E427 		ldrb	r2, [r3, #2020]	@ zero_extendqisi2
1208:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5345              		.loc 1 1208 36 view .LVU1576
 5346 000a 0646     		mov	r6, r0
1213:src/keys.c    **** 
 5347              		.loc 1 1213 5 view .LVU1577
 5348 000c 1007     		lsls	r0, r2, #28
 5349              	.LVL427:
1213:src/keys.c    **** 
 5350              		.loc 1 1213 5 view .LVU1578
 5351 000e 13D4     		bmi	.L568
1213:src/keys.c    **** 
 5352              		.loc 1 1213 20 discriminator 1 view .LVU1579
 5353 0010 93F8EB37 		ldrb	r3, [r3, #2027]	@ zero_extendqisi2
1213:src/keys.c    **** 
ARM GAS  /tmp/ccgiIQCZ.s 			page 175


 5354              		.loc 1 1213 7 discriminator 1 view .LVU1580
 5355 0014 1907     		lsls	r1, r3, #28
 5356 0016 56D5     		bpl	.L567
1225:src/keys.c    **** 	if (IMAG_FLAG) swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 5357              		.loc 1 1225 2 is_stmt 1 view .LVU1581
 5358              	.LBB575:
 5359              	.LBI575:
1201:src/keys.c    **** 	if (CmdLineLength) {
 5360              		.loc 1 1201 13 view .LVU1582
 5361              	.LBB576:
1202:src/keys.c    **** 		State2.state_lift = 0;
 5362              		.loc 1 1202 2 view .LVU1583
1202:src/keys.c    **** 		State2.state_lift = 0;
 5363              		.loc 1 1202 6 is_stmt 0 view .LVU1584
 5364 0018 2C4C     		ldr	r4, .L583+4
1202:src/keys.c    **** 		State2.state_lift = 0;
 5365              		.loc 1 1202 5 view .LVU1585
 5366 001a 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 5367 001c 7BB9     		cbnz	r3, .L574
 5368              	.L575:
 5369              	.LBE576:
 5370              	.LBE575:
1226:src/keys.c    **** 	CLEAR_REAL;
 5371              		.loc 1 1226 17 is_stmt 1 view .LVU1586
 5372 001e 6420     		movs	r0, #100
 5373 0020 FFF7FEFF 		bl	get_reg_n
 5374              	.LVL428:
 5375 0024 0746     		mov	r7, r0
 5376 0026 6520     		movs	r0, #101
 5377 0028 FFF7FEFF 		bl	get_reg_n
 5378              	.LVL429:
 5379 002c 0146     		mov	r1, r0
 5380 002e 3846     		mov	r0, r7
 5381 0030 FFF7FEFF 		bl	swap_reg
 5382              	.LVL430:
 5383 0034 2B68     		ldr	r3, [r5]
 5384 0036 0DE0     		b	.L572
 5385              	.L568:
1225:src/keys.c    **** 	if (IMAG_FLAG) swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 5386              		.loc 1 1225 2 view .LVU1587
 5387              	.LBB578:
1201:src/keys.c    **** 	if (CmdLineLength) {
 5388              		.loc 1 1201 13 view .LVU1588
 5389              	.LBB577:
1202:src/keys.c    **** 		State2.state_lift = 0;
 5390              		.loc 1 1202 2 view .LVU1589
1202:src/keys.c    **** 		State2.state_lift = 0;
 5391              		.loc 1 1202 6 is_stmt 0 view .LVU1590
 5392 0038 244C     		ldr	r4, .L583+4
1202:src/keys.c    **** 		State2.state_lift = 0;
 5393              		.loc 1 1202 5 view .LVU1591
 5394 003a 227F     		ldrb	r2, [r4, #28]	@ zero_extendqisi2
 5395 003c 32B1     		cbz	r2, .L571
 5396              	.L574:
1203:src/keys.c    **** 		process_cmdline();
 5397              		.loc 1 1203 3 is_stmt 1 view .LVU1592
1203:src/keys.c    **** 		process_cmdline();
ARM GAS  /tmp/ccgiIQCZ.s 			page 176


 5398              		.loc 1 1203 21 is_stmt 0 view .LVU1593
 5399 003e E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 5400 0040 6FF38613 		bfc	r3, #6, #1
 5401 0044 E375     		strb	r3, [r4, #23]
1204:src/keys.c    **** 	}
 5402              		.loc 1 1204 3 is_stmt 1 view .LVU1594
 5403 0046 FFF7FEFF 		bl	process_cmdline
 5404              	.LVL431:
 5405 004a 2B68     		ldr	r3, [r5]
 5406              	.L571:
 5407              	.LBE577:
 5408              	.LBE578:
1226:src/keys.c    **** 	CLEAR_REAL;
 5409              		.loc 1 1226 2 view .LVU1595
1226:src/keys.c    **** 	CLEAR_REAL;
 5410              		.loc 1 1226 6 is_stmt 0 view .LVU1596
 5411 004c 93F8EB27 		ldrb	r2, [r3, #2027]	@ zero_extendqisi2
1226:src/keys.c    **** 	CLEAR_REAL;
 5412              		.loc 1 1226 5 view .LVU1597
 5413 0050 1207     		lsls	r2, r2, #28
 5414 0052 E4D4     		bmi	.L575
 5415              	.L572:
1227:src/keys.c    **** 	CLEAR_IMAG;
 5416              		.loc 1 1227 2 is_stmt 1 view .LVU1598
 5417 0054 93F8E417 		ldrb	r1, [r3, #2020]	@ zero_extendqisi2
1228:src/keys.c    **** 
 5418              		.loc 1 1228 2 is_stmt 0 view .LVU1599
 5419 0058 93F8EB27 		ldrb	r2, [r3, #2027]	@ zero_extendqisi2
1227:src/keys.c    **** 	CLEAR_IMAG;
 5420              		.loc 1 1227 2 view .LVU1600
 5421 005c 6FF3C301 		bfc	r1, #3, #1
1228:src/keys.c    **** 
 5422              		.loc 1 1228 2 view .LVU1601
 5423 0060 6FF3C302 		bfc	r2, #3, #1
1227:src/keys.c    **** 	CLEAR_IMAG;
 5424              		.loc 1 1227 2 view .LVU1602
 5425 0064 83F8E417 		strb	r1, [r3, #2020]
1228:src/keys.c    **** 
 5426              		.loc 1 1228 2 is_stmt 1 view .LVU1603
 5427 0068 83F8EB27 		strb	r2, [r3, #2027]
1230:src/keys.c    **** 
 5428              		.loc 1 1230 2 view .LVU1604
1230:src/keys.c    **** 
 5429              		.loc 1 1230 20 is_stmt 0 view .LVU1605
 5430 006c E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 5431 006e 66F38612 		bfi	r2, r6, #6, #1
 5432              	.LVL432:
1230:src/keys.c    **** 
 5433              		.loc 1 1230 20 view .LVU1606
 5434 0072 E275     		strb	r2, [r4, #23]
1232:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
 5435              		.loc 1 1232 2 is_stmt 1 view .LVU1607
1232:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
 5436              		.loc 1 1232 21 is_stmt 0 view .LVU1608
 5437 0074 93F8DE37 		ldrb	r3, [r3, #2014]	@ zero_extendqisi2
1232:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
 5438              		.loc 1 1232 5 view .LVU1609
ARM GAS  /tmp/ccgiIQCZ.s 			page 177


 5439 0078 03F01803 		and	r3, r3, #24
 5440 007c 182B     		cmp	r3, #24
 5441 007e 22D1     		bne	.L567
 5442              	.LBB579:
 5443              	.LBI579:
1208:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5444              		.loc 1 1208 6 is_stmt 1 view .LVU1610
 5445              	.LVL433:
 5446              	.LBB580:
1234:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5447              		.loc 1 1234 3 view .LVU1611
 5448 0080 6E20     		movs	r0, #110
 5449 0082 FFF7FEFF 		bl	get_reg_n
 5450              	.LVL434:
 5451 0086 0446     		mov	r4, r0
1234:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5452              		.loc 1 1234 33 is_stmt 0 view .LVU1612
 5453 0088 6420     		movs	r0, #100
 5454 008a FFF7FEFF 		bl	get_reg_n
 5455              	.LVL435:
 5456 008e 0146     		mov	r1, r0
1234:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5457              		.loc 1 1234 3 view .LVU1613
 5458 0090 2046     		mov	r0, r4
 5459 0092 FFF7FEFF 		bl	copyreg
 5460              	.LVL436:
1235:src/keys.c    **** 		//call p2r
 5461              		.loc 1 1235 3 is_stmt 1 view .LVU1614
 5462 0096 6F20     		movs	r0, #111
 5463 0098 FFF7FEFF 		bl	get_reg_n
 5464              	.LVL437:
 5465 009c 0446     		mov	r4, r0
1235:src/keys.c    **** 		//call p2r
 5466              		.loc 1 1235 33 is_stmt 0 view .LVU1615
 5467 009e 6520     		movs	r0, #101
 5468 00a0 FFF7FEFF 		bl	get_reg_n
 5469              	.LVL438:
 5470 00a4 0146     		mov	r1, r0
1235:src/keys.c    **** 		//call p2r
 5471              		.loc 1 1235 3 view .LVU1616
 5472 00a6 2046     		mov	r0, r4
 5473 00a8 FFF7FEFF 		bl	copyreg
 5474              	.LVL439:
1237:src/keys.c    **** 		op_p2r(OP_NOP); // x, y now contain rectangular form
 5475              		.loc 1 1237 18 is_stmt 1 view .LVU1617
1238:src/keys.c    **** #ifdef RP_PREFIX
 5476              		.loc 1 1238 3 view .LVU1618
 5477 00ac 0020     		movs	r0, #0
 5478 00ae FFF7FEFF 		bl	op_p2r
 5479              	.LVL440:
1240:src/keys.c    **** #endif
 5480              		.loc 1 1240 3 view .LVU1619
1240:src/keys.c    **** #endif
 5481              		.loc 1 1240 15 is_stmt 0 view .LVU1620
 5482 00b2 074A     		ldr	r2, .L583+8
1242:src/keys.c    **** 	}
 5483              		.loc 1 1242 3 view .LVU1621
ARM GAS  /tmp/ccgiIQCZ.s 			page 178


 5484 00b4 2B68     		ldr	r3, [r5]
1240:src/keys.c    **** #endif
 5485              		.loc 1 1240 15 view .LVU1622
 5486 00b6 0121     		movs	r1, #1
 5487 00b8 1160     		str	r1, [r2]
1242:src/keys.c    **** 	}
 5488              		.loc 1 1242 3 is_stmt 1 view .LVU1623
 5489 00ba 93F8DE27 		ldrb	r2, [r3, #2014]	@ zero_extendqisi2
 5490 00be 6FF30412 		bfc	r2, #4, #1
 5491 00c2 83F8DE27 		strb	r2, [r3, #2014]
 5492              	.LVL441:
 5493              	.L567:
1242:src/keys.c    **** 	}
 5494              		.loc 1 1242 3 is_stmt 0 view .LVU1624
 5495              	.LBE580:
 5496              	.LBE579:
1244:src/keys.c    **** 
 5497              		.loc 1 1244 1 view .LVU1625
 5498 00c6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5499              	.L584:
 5500              		.align	2
 5501              	.L583:
 5502 00c8 00000000 		.word	main_ram
 5503 00cc 00000000 		.word	StateWhileOn
 5504 00d0 00000000 		.word	RectPolConv
 5505              		.cfi_endproc
 5506              	.LFE23:
 5508              		.section	.text.stack_begin,"ax",%progbits
 5509              		.align	1
 5510              		.p2align 2,,3
 5511              		.global	stack_begin
 5512              		.syntax unified
 5513              		.thumb
 5514              		.thumb_func
 5515              		.fpu fpv4-sp-d16
 5517              	stack_begin:
 5518              	.LVL442:
 5519              	.LFB25:
1265:src/keys.c    **** 	// Lifts stack if required and stores displaced registers; 
 5520              		.loc 1 1265 33 is_stmt 1 view -0
 5521              		.cfi_startproc
 5522              		@ args = 0, pretend = 0, frame = 0
 5523              		@ frame_needed = 0, uses_anonymous_args = 0
1268:src/keys.c    **** 	if ( State2.state_lift ){
 5524              		.loc 1 1268 2 view .LVU1627
1265:src/keys.c    **** 	// Lifts stack if required and stores displaced registers; 
 5525              		.loc 1 1265 33 is_stmt 0 view .LVU1628
 5526 0000 38B5     		push	{r3, r4, r5, lr}
 5527              		.cfi_def_cfa_offset 16
 5528              		.cfi_offset 3, -16
 5529              		.cfi_offset 4, -12
 5530              		.cfi_offset 5, -8
 5531              		.cfi_offset 14, -4
1268:src/keys.c    **** 	if ( State2.state_lift ){
 5532              		.loc 1 1268 2 view .LVU1629
 5533 0002 2C4B     		ldr	r3, .L592
1269:src/keys.c    **** 		SET_INIT_LIFT;
ARM GAS  /tmp/ccgiIQCZ.s 			page 179


 5534              		.loc 1 1269 7 view .LVU1630
 5535 0004 2C4C     		ldr	r4, .L592+4
1268:src/keys.c    **** 	if ( State2.state_lift ){
 5536              		.loc 1 1268 2 view .LVU1631
 5537 0006 1B68     		ldr	r3, [r3]
 5538 0008 93F8DE27 		ldrb	r2, [r3, #2014]	@ zero_extendqisi2
 5539 000c 42F01002 		orr	r2, r2, #16
 5540 0010 83F8DE27 		strb	r2, [r3, #2014]
1269:src/keys.c    **** 		SET_INIT_LIFT;
 5541              		.loc 1 1269 2 is_stmt 1 view .LVU1632
1269:src/keys.c    **** 		SET_INIT_LIFT;
 5542              		.loc 1 1269 7 is_stmt 0 view .LVU1633
 5543 0014 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
1269:src/keys.c    **** 		SET_INIT_LIFT;
 5544              		.loc 1 1269 5 view .LVU1634
 5545 0016 12F04002 		ands	r2, r2, #64
 5546 001a 26D0     		beq	.L586
1270:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regC_idx));
 5547              		.loc 1 1270 3 is_stmt 1 view .LVU1635
 5548 001c 93F8DE27 		ldrb	r2, [r3, #2014]	@ zero_extendqisi2
 5549 0020 42F00102 		orr	r2, r2, #1
 5550 0024 83F8DE27 		strb	r2, [r3, #2014]
1271:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5551              		.loc 1 1271 3 view .LVU1636
 5552 0028 6E20     		movs	r0, #110
 5553              	.LVL443:
1271:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5554              		.loc 1 1271 3 is_stmt 0 view .LVU1637
 5555 002a FFF7FEFF 		bl	get_reg_n
 5556              	.LVL444:
 5557 002e 0546     		mov	r5, r0
1271:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5558              		.loc 1 1271 33 view .LVU1638
 5559 0030 6A20     		movs	r0, #106
 5560 0032 FFF7FEFF 		bl	get_reg_n
 5561              	.LVL445:
 5562 0036 0146     		mov	r1, r0
1271:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5563              		.loc 1 1271 3 view .LVU1639
 5564 0038 2846     		mov	r0, r5
 5565 003a FFF7FEFF 		bl	copyreg
 5566              	.LVL446:
1272:src/keys.c    **** 		lift();
 5567              		.loc 1 1272 3 is_stmt 1 view .LVU1640
 5568 003e 6F20     		movs	r0, #111
 5569 0040 FFF7FEFF 		bl	get_reg_n
 5570              	.LVL447:
 5571 0044 0546     		mov	r5, r0
1272:src/keys.c    **** 		lift();
 5572              		.loc 1 1272 33 is_stmt 0 view .LVU1641
 5573 0046 6B20     		movs	r0, #107
 5574 0048 FFF7FEFF 		bl	get_reg_n
 5575              	.LVL448:
 5576 004c 0146     		mov	r1, r0
1272:src/keys.c    **** 		lift();
 5577              		.loc 1 1272 3 view .LVU1642
 5578 004e 2846     		mov	r0, r5
ARM GAS  /tmp/ccgiIQCZ.s 			page 180


 5579 0050 FFF7FEFF 		bl	copyreg
 5580              	.LVL449:
1273:src/keys.c    **** 		zero_X();
 5581              		.loc 1 1273 3 is_stmt 1 view .LVU1643
 5582 0054 FFF7FEFF 		bl	lift
 5583              	.LVL450:
1274:src/keys.c    **** 		lift();
 5584              		.loc 1 1274 3 view .LVU1644
 5585 0058 FFF7FEFF 		bl	zero_X
 5586              	.LVL451:
1275:src/keys.c    **** 		State2.state_lift = 0;
 5587              		.loc 1 1275 3 view .LVU1645
 5588 005c FFF7FEFF 		bl	lift
 5589              	.LVL452:
1276:src/keys.c    **** 	}
 5590              		.loc 1 1276 3 view .LVU1646
1276:src/keys.c    **** 	}
 5591              		.loc 1 1276 21 is_stmt 0 view .LVU1647
 5592 0060 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 5593 0062 6FF38613 		bfc	r3, #6, #1
 5594 0066 E375     		strb	r3, [r4, #23]
 5595              	.L585:
1285:src/keys.c    **** 
 5596              		.loc 1 1285 1 view .LVU1648
 5597 0068 38BD     		pop	{r3, r4, r5, pc}
 5598              	.LVL453:
 5599              	.L586:
1279:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regX_idx));
 5600              		.loc 1 1279 3 is_stmt 1 view .LVU1649
 5601 006a 93F8DE17 		ldrb	r1, [r3, #2014]	@ zero_extendqisi2
 5602 006e 62F30001 		bfi	r1, r2, #0, #1
 5603 0072 83F8DE17 		strb	r1, [r3, #2014]
1280:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5604              		.loc 1 1280 3 view .LVU1650
 5605 0076 0546     		mov	r5, r0
 5606 0078 6E20     		movs	r0, #110
 5607              	.LVL454:
1280:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5608              		.loc 1 1280 3 is_stmt 0 view .LVU1651
 5609 007a FFF7FEFF 		bl	get_reg_n
 5610              	.LVL455:
 5611 007e 0446     		mov	r4, r0
1280:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5612              		.loc 1 1280 33 view .LVU1652
 5613 0080 6420     		movs	r0, #100
 5614 0082 FFF7FEFF 		bl	get_reg_n
 5615              	.LVL456:
 5616 0086 0146     		mov	r1, r0
1280:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5617              		.loc 1 1280 3 view .LVU1653
 5618 0088 2046     		mov	r0, r4
 5619 008a FFF7FEFF 		bl	copyreg
 5620              	.LVL457:
1281:src/keys.c    **** 		zero_X();
 5621              		.loc 1 1281 3 is_stmt 1 view .LVU1654
 5622 008e 6F20     		movs	r0, #111
 5623 0090 FFF7FEFF 		bl	get_reg_n
ARM GAS  /tmp/ccgiIQCZ.s 			page 181


 5624              	.LVL458:
 5625 0094 0446     		mov	r4, r0
1281:src/keys.c    **** 		zero_X();
 5626              		.loc 1 1281 33 is_stmt 0 view .LVU1655
 5627 0096 6520     		movs	r0, #101
 5628 0098 FFF7FEFF 		bl	get_reg_n
 5629              	.LVL459:
 5630 009c 0146     		mov	r1, r0
1281:src/keys.c    **** 		zero_X();
 5631              		.loc 1 1281 3 view .LVU1656
 5632 009e 2046     		mov	r0, r4
 5633 00a0 FFF7FEFF 		bl	copyreg
 5634              	.LVL460:
1282:src/keys.c    **** 		if ( zero_y ) zero_Y();
 5635              		.loc 1 1282 3 is_stmt 1 view .LVU1657
 5636 00a4 FFF7FEFF 		bl	zero_X
 5637              	.LVL461:
1283:src/keys.c    **** 	}
 5638              		.loc 1 1283 3 view .LVU1658
1283:src/keys.c    **** 	}
 5639              		.loc 1 1283 6 is_stmt 0 view .LVU1659
 5640 00a8 002D     		cmp	r5, #0
 5641 00aa DDD0     		beq	.L585
1283:src/keys.c    **** 	}
 5642              		.loc 1 1283 17 is_stmt 1 discriminator 1 view .LVU1660
1285:src/keys.c    **** 
 5643              		.loc 1 1285 1 is_stmt 0 discriminator 1 view .LVU1661
 5644 00ac BDE83840 		pop	{r3, r4, r5, lr}
 5645              		.cfi_restore 14
 5646              		.cfi_restore 5
 5647              		.cfi_restore 4
 5648              		.cfi_restore 3
 5649              		.cfi_def_cfa_offset 0
 5650              	.LVL462:
1283:src/keys.c    **** 	}
 5651              		.loc 1 1283 17 discriminator 1 view .LVU1662
 5652 00b0 FFF7FEBF 		b	zero_Y
 5653              	.LVL463:
 5654              	.L593:
 5655              		.align	2
 5656              	.L592:
 5657 00b4 00000000 		.word	main_ram
 5658 00b8 00000000 		.word	StateWhileOn
 5659              		.cfi_endproc
 5660              	.LFE25:
 5662              		.section	.text.current_catalogue_max,"ax",%progbits
 5663              		.align	1
 5664              		.p2align 2,,3
 5665              		.global	current_catalogue_max
 5666              		.syntax unified
 5667              		.thumb
 5668              		.thumb_func
 5669              		.fpu fpv4-sp-d16
 5671              	current_catalogue_max:
 5672              	.LFB44:
2473:src/keys.c    **** 	// A quick table of catalogue sizes
 5673              		.loc 1 2473 33 is_stmt 1 view -0
ARM GAS  /tmp/ccgiIQCZ.s 			page 182


 5674              		.cfi_startproc
 5675              		@ args = 0, pretend = 0, frame = 0
 5676              		@ frame_needed = 0, uses_anonymous_args = 0
 5677              		@ link register save eliminated.
2476:src/keys.c    **** 	{
 5678              		.loc 1 2476 2 view .LVU1664
2507:src/keys.c    **** #endif
 5679              		.loc 1 2507 2 view .LVU1665
2507:src/keys.c    **** #endif
 5680              		.loc 1 2507 31 is_stmt 0 view .LVU1666
 5681 0000 024B     		ldr	r3, .L595
2507:src/keys.c    **** #endif
 5682              		.loc 1 2507 24 view .LVU1667
 5683 0002 034A     		ldr	r2, .L595+4
2507:src/keys.c    **** #endif
 5684              		.loc 1 2507 31 view .LVU1668
 5685 0004 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2509:src/keys.c    **** 
 5686              		.loc 1 2509 1 view .LVU1669
 5687 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 5688 0008 7047     		bx	lr
 5689              	.L596:
 5690 000a 00BF     		.align	2
 5691              	.L595:
 5692 000c 00000000 		.word	StateWhileOn
 5693 0010 00000000 		.word	.LANCHOR8
 5694              		.cfi_endproc
 5695              	.LFE44:
 5697              		.section	.text.current_catalogue,"ax",%progbits
 5698              		.align	1
 5699              		.p2align 2,,3
 5700              		.global	current_catalogue
 5701              		.syntax unified
 5702              		.thumb
 5703              		.thumb_func
 5704              		.fpu fpv4-sp-d16
 5706              	current_catalogue:
 5707              	.LVL464:
 5708              	.LFB46:
2522:src/keys.c    **** 	// A quick table of catalogue tables
 5709              		.loc 1 2522 33 is_stmt 1 view -0
 5710              		.cfi_startproc
 5711              		@ args = 0, pretend = 0, frame = 0
 5712              		@ frame_needed = 0, uses_anonymous_args = 0
 5713              		@ link register save eliminated.
2525:src/keys.c    **** 	{
 5714              		.loc 1 2525 2 view .LVU1671
2552:src/keys.c    **** 	unsigned int c = State2.catalogue;
 5715              		.loc 1 2552 2 view .LVU1672
2553:src/keys.c    **** 	int m, i;
 5716              		.loc 1 2553 2 view .LVU1673
2553:src/keys.c    **** 	int m, i;
 5717              		.loc 1 2553 25 is_stmt 0 view .LVU1674
 5718 0000 314A     		ldr	r2, .L624
2553:src/keys.c    **** 	int m, i;
 5719              		.loc 1 2553 15 view .LVU1675
 5720 0002 937B     		ldrb	r3, [r2, #14]	@ zero_extendqisi2
ARM GAS  /tmp/ccgiIQCZ.s 			page 183


 5721              	.LVL465:
2554:src/keys.c    **** 	unsigned p, q;
 5722              		.loc 1 2554 2 is_stmt 1 view .LVU1676
2555:src/keys.c    **** 
 5723              		.loc 1 2555 2 view .LVU1677
2557:src/keys.c    **** 		if (n == OP_ZERO)
 5724              		.loc 1 2557 2 view .LVU1678
2557:src/keys.c    **** 		if (n == OP_ZERO)
 5725              		.loc 1 2557 5 is_stmt 0 view .LVU1679
 5726 0004 102B     		cmp	r3, #16
 5727 0006 39D0     		beq	.L618
2562:src/keys.c    **** 		if (n == OP_ZERO)
 5728              		.loc 1 2562 2 is_stmt 1 view .LVU1680
2562:src/keys.c    **** 		if (n == OP_ZERO)
 5729              		.loc 1 2562 5 is_stmt 0 view .LVU1681
 5730 0008 112B     		cmp	r3, #17
 5731 000a 32D0     		beq	.L619
2567:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 5732              		.loc 1 2567 2 is_stmt 1 view .LVU1682
2567:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 5733              		.loc 1 2567 5 is_stmt 0 view .LVU1683
 5734 000c 122B     		cmp	r3, #18
 5735 000e 45D0     		beq	.L620
2580:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 5736              		.loc 1 2580 2 is_stmt 1 view .LVU1684
2580:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 5737              		.loc 1 2580 5 is_stmt 0 view .LVU1685
 5738 0010 0E2B     		cmp	r3, #14
 5739 0012 38D0     		beq	.L621
2583:src/keys.c    **** 
 5740              		.loc 1 2583 3 is_stmt 1 view .LVU1686
2583:src/keys.c    **** 
 5741              		.loc 1 2583 7 is_stmt 0 view .LVU1687
 5742 0014 2D4A     		ldr	r2, .L624+4
2585:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5743              		.loc 1 2585 35 view .LVU1688
 5744 0016 A3F10B01 		sub	r1, r3, #11
2585:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5745              		.loc 1 2585 5 view .LVU1689
 5746 001a 0429     		cmp	r1, #4
2583:src/keys.c    **** 
 5747              		.loc 1 2583 7 view .LVU1690
 5748 001c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 5749              	.LVL466:
2585:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5750              		.loc 1 2585 2 is_stmt 1 view .LVU1691
2585:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5751              		.loc 1 2585 5 is_stmt 0 view .LVU1692
 5752 0020 38D9     		bls	.L604
2588:src/keys.c    **** 		return OP_NIL | OP_NOP;
 5753              		.loc 1 2588 2 is_stmt 1 view .LVU1693
2588:src/keys.c    **** 		return OP_NIL | OP_NOP;
 5754              		.loc 1 2588 5 is_stmt 0 view .LVU1694
 5755 0022 142B     		cmp	r3, #20
 5756 0024 4DD8     		bhi	.L612
2592:src/keys.c    **** 	p = cat[0];
 5757              		.loc 1 2592 2 is_stmt 1 view .LVU1695
ARM GAS  /tmp/ccgiIQCZ.s 			page 184


2522:src/keys.c    **** 	// A quick table of catalogue tables
 5758              		.loc 1 2522 33 is_stmt 0 view .LVU1696
 5759 0026 10B4     		push	{r4}
 5760              		.cfi_def_cfa_offset 4
 5761              		.cfi_offset 4, -4
2592:src/keys.c    **** 	p = cat[0];
 5762              		.loc 1 2592 11 view .LVU1697
 5763 0028 00EBA001 		add	r1, r0, r0, asr #2
2592:src/keys.c    **** 	p = cat[0];
 5764              		.loc 1 2592 6 view .LVU1698
 5765 002c 5318     		adds	r3, r2, r1
 5766              	.LVL467:
2593:src/keys.c    **** 	q = cat[1];
 5767              		.loc 1 2593 2 is_stmt 1 view .LVU1699
2594:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 5768              		.loc 1 2594 2 view .LVU1700
2595:src/keys.c    **** 
 5769              		.loc 1 2595 2 view .LVU1701
2595:src/keys.c    **** 
 5770              		.loc 1 2595 35 is_stmt 0 view .LVU1702
 5771 002e 4000     		lsls	r0, r0, #1
 5772              	.LVL468:
2593:src/keys.c    **** 	q = cat[1];
 5773              		.loc 1 2593 4 view .LVU1703
 5774 0030 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 5775              	.LVL469:
2594:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 5776              		.loc 1 2594 4 view .LVU1704
 5777 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5778              	.LVL470:
2594:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 5779              		.loc 1 2594 4 view .LVU1705
 5780 0034 2649     		ldr	r1, .L624+8
 5781              	.LVL471:
2595:src/keys.c    **** 
 5782              		.loc 1 2595 54 view .LVU1706
 5783 0036 C443     		mvns	r4, r0
2595:src/keys.c    **** 
 5784              		.loc 1 2595 35 view .LVU1707
 5785 0038 00F00600 		and	r0, r0, #6
2595:src/keys.c    **** 
 5786              		.loc 1 2595 54 view .LVU1708
 5787 003c 04F00604 		and	r4, r4, #6
2595:src/keys.c    **** 
 5788              		.loc 1 2595 24 view .LVU1709
 5789 0040 0230     		adds	r0, r0, #2
2595:src/keys.c    **** 
 5790              		.loc 1 2595 48 view .LVU1710
 5791 0042 E340     		lsrs	r3, r3, r4
 5792              	.LVL472:
2595:src/keys.c    **** 
 5793              		.loc 1 2595 18 view .LVU1711
 5794 0044 02FA00F0 		lsl	r0, r2, r0
2595:src/keys.c    **** 
 5795              		.loc 1 2595 43 view .LVU1712
 5796 0048 1843     		orrs	r0, r0, r3
2595:src/keys.c    **** 
ARM GAS  /tmp/ccgiIQCZ.s 			page 185


 5797              		.loc 1 2595 4 view .LVU1713
 5798 004a C0F30903 		ubfx	r3, r0, #0, #10
 5799              	.LVL473:
2598:src/keys.c    **** 		if (m < opcode_breaks[i])
 5800              		.loc 1 2598 2 is_stmt 1 view .LVU1714
2598:src/keys.c    **** 		if (m < opcode_breaks[i])
 5801              		.loc 1 2598 12 view .LVU1715
2595:src/keys.c    **** 
 5802              		.loc 1 2595 4 is_stmt 0 view .LVU1716
 5803 004e 3422     		movs	r2, #52
 5804              	.LVL474:
2598:src/keys.c    **** 		if (m < opcode_breaks[i])
 5805              		.loc 1 2598 8 view .LVU1717
 5806 0050 0020     		movs	r0, #0
 5807 0052 01E0     		b	.L608
 5808              	.LVL475:
 5809              	.L623:
2598:src/keys.c    **** 		if (m < opcode_breaks[i])
 5810              		.loc 1 2598 8 view .LVU1718
 5811 0054 11F8012B 		ldrb	r2, [r1], #1	@ zero_extendqisi2
 5812              	.LVL476:
 5813              	.L608:
2599:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 5814              		.loc 1 2599 3 is_stmt 1 view .LVU1719
2601:src/keys.c    **** 	}
 5815              		.loc 1 2601 3 view .LVU1720
2599:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 5816              		.loc 1 2599 6 is_stmt 0 view .LVU1721
 5817 0058 9A42     		cmp	r2, r3
 5818 005a 2FDC     		bgt	.L622
2598:src/keys.c    **** 		if (m < opcode_breaks[i])
 5819              		.loc 1 2598 25 discriminator 2 view .LVU1722
 5820 005c 0130     		adds	r0, r0, #1
 5821              	.LVL477:
2598:src/keys.c    **** 		if (m < opcode_breaks[i])
 5822              		.loc 1 2598 2 discriminator 2 view .LVU1723
 5823 005e 0728     		cmp	r0, #7
2601:src/keys.c    **** 	}
 5824              		.loc 1 2601 5 discriminator 2 view .LVU1724
 5825 0060 A3EB0203 		sub	r3, r3, r2
 5826              	.LVL478:
2598:src/keys.c    **** 		if (m < opcode_breaks[i])
 5827              		.loc 1 2598 24 is_stmt 1 discriminator 2 view .LVU1725
2598:src/keys.c    **** 		if (m < opcode_breaks[i])
 5828              		.loc 1 2598 12 discriminator 2 view .LVU1726
2598:src/keys.c    **** 		if (m < opcode_breaks[i])
 5829              		.loc 1 2598 2 is_stmt 0 discriminator 2 view .LVU1727
 5830 0064 F6D1     		bne	.L623
2603:src/keys.c    **** }
 5831              		.loc 1 2603 2 is_stmt 1 view .LVU1728
2603:src/keys.c    **** }
 5832              		.loc 1 2603 9 is_stmt 0 view .LVU1729
 5833 0066 03F12000 		add	r0, r3, #32
 5834              	.LVL479:
2603:src/keys.c    **** }
 5835              		.loc 1 2603 9 view .LVU1730
 5836 006a 0002     		lsls	r0, r0, #8
ARM GAS  /tmp/ccgiIQCZ.s 			page 186


 5837              	.L597:
2604:src/keys.c    **** 
 5838              		.loc 1 2604 1 view .LVU1731
 5839 006c 5DF8044B 		ldr	r4, [sp], #4
 5840              		.cfi_restore 4
 5841              		.cfi_def_cfa_offset 0
 5842 0070 7047     		bx	lr
 5843              	.LVL480:
 5844              	.L619:
2563:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 5845              		.loc 1 2563 3 is_stmt 1 view .LVU1732
2563:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 5846              		.loc 1 2563 6 is_stmt 0 view .LVU1733
 5847 0072 4B28     		cmp	r0, #75
 5848 0074 1FD0     		beq	.L610
2565:src/keys.c    **** 	}
 5849              		.loc 1 2565 3 is_stmt 1 view .LVU1734
2565:src/keys.c    **** 	}
 5850              		.loc 1 2565 10 is_stmt 0 view .LVU1735
 5851 0076 40F40450 		orr	r0, r0, #8448
 5852              	.LVL481:
2565:src/keys.c    **** 	}
 5853              		.loc 1 2565 10 view .LVU1736
 5854 007a 7047     		bx	lr
 5855              	.LVL482:
 5856              	.L618:
2558:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 5857              		.loc 1 2558 3 is_stmt 1 view .LVU1737
2558:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 5858              		.loc 1 2558 6 is_stmt 0 view .LVU1738
 5859 007c 4B28     		cmp	r0, #75
 5860 007e 17D0     		beq	.L609
2560:src/keys.c    **** 	}
 5861              		.loc 1 2560 3 is_stmt 1 view .LVU1739
2560:src/keys.c    **** 	}
 5862              		.loc 1 2560 10 is_stmt 0 view .LVU1740
 5863 0080 40F40050 		orr	r0, r0, #8192
 5864              	.LVL483:
2560:src/keys.c    **** 	}
 5865              		.loc 1 2560 10 view .LVU1741
 5866 0084 7047     		bx	lr
 5867              	.LVL484:
 5868              	.L621:
2580:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 5869              		.loc 1 2580 35 discriminator 1 view .LVU1742
 5870 0086 917D     		ldrb	r1, [r2, #22]	@ zero_extendqisi2
2581:src/keys.c    **** 	else
 5871              		.loc 1 2581 7 discriminator 1 view .LVU1743
 5872 0088 124B     		ldr	r3, .L624+12
 5873              	.LVL485:
2581:src/keys.c    **** 	else
 5874              		.loc 1 2581 7 discriminator 1 view .LVU1744
 5875 008a 134A     		ldr	r2, .L624+16
 5876              	.LVL486:
2581:src/keys.c    **** 	else
 5877              		.loc 1 2581 7 discriminator 1 view .LVU1745
 5878 008c 11F0100F 		tst	r1, #16
ARM GAS  /tmp/ccgiIQCZ.s 			page 187


 5879 0090 18BF     		it	ne
 5880 0092 1A46     		movne	r2, r3
 5881              	.L604:
 5882              	.LVL487:
2586:src/keys.c    **** 	}
 5883              		.loc 1 2586 3 is_stmt 1 view .LVU1746
 5884              	.LBB581:
 5885              	.LBI581:
2515:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
 5886              		.loc 1 2515 15 view .LVU1747
 5887              	.LBB582:
2516:src/keys.c    **** }
 5888              		.loc 1 2516 2 view .LVU1748
2516:src/keys.c    **** }
 5889              		.loc 1 2516 9 is_stmt 0 view .LVU1749
 5890 0094 105C     		ldrb	r0, [r2, r0]	@ zero_extendqisi2
 5891              	.LVL488:
2516:src/keys.c    **** }
 5892              		.loc 1 2516 9 view .LVU1750
 5893 0096 40F48840 		orr	r0, r0, #17408
 5894              	.LVL489:
2516:src/keys.c    **** }
 5895              		.loc 1 2516 9 view .LVU1751
 5896              	.LBE582:
 5897              	.LBE581:
2586:src/keys.c    **** 	}
 5898              		.loc 1 2586 10 view .LVU1752
 5899 009a 7047     		bx	lr
 5900              	.LVL490:
 5901              	.L620:
 5902              	.LBB583:
2568:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 5903              		.loc 1 2568 3 is_stmt 1 view .LVU1753
2568:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 5904              		.loc 1 2568 33 is_stmt 0 view .LVU1754
 5905 009c 0F4B     		ldr	r3, .L624+20
 5906              	.LVL491:
2568:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 5907              		.loc 1 2568 13 view .LVU1755
 5908 009e 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 5909              	.LVL492:
2569:src/keys.c    **** 			// Monadic conversion routine
 5910              		.loc 1 2569 3 is_stmt 1 view .LVU1756
2569:src/keys.c    **** 			// Monadic conversion routine
 5911              		.loc 1 2569 6 is_stmt 0 view .LVU1757
 5912 00a0 5728     		cmp	r0, #87
2571:src/keys.c    **** 		else
 5913              		.loc 1 2571 4 is_stmt 1 view .LVU1758
2571:src/keys.c    **** 		else
 5914              		.loc 1 2571 25 is_stmt 0 view .LVU1759
 5915 00a2 C6BF     		itte	gt
 5916 00a4 5838     		subgt	r0, r0, #88
 5917              	.LVL493:
2571:src/keys.c    **** 		else
 5918              		.loc 1 2571 18 view .LVU1760
 5919 00a6 40F40070 		orrgt	r0, r0, #512
2573:src/keys.c    **** 	}
ARM GAS  /tmp/ccgiIQCZ.s 			page 188


 5920              		.loc 1 2573 4 is_stmt 1 view .LVU1761
2573:src/keys.c    **** 	}
 5921              		.loc 1 2573 11 is_stmt 0 view .LVU1762
 5922 00aa 40F40C40 		orrle	r0, r0, #35840
 5923 00ae 7047     		bx	lr
 5924              	.LVL494:
 5925              	.L609:
2573:src/keys.c    **** 	}
 5926              		.loc 1 2573 11 view .LVU1763
 5927              	.LBE583:
2559:src/keys.c    **** 		return CONST(n);
 5928              		.loc 1 2559 11 view .LVU1764
 5929 00b0 4FF42740 		mov	r0, #42752
 5930              	.LVL495:
2559:src/keys.c    **** 		return CONST(n);
 5931              		.loc 1 2559 11 view .LVU1765
 5932 00b4 7047     		bx	lr
 5933              	.LVL496:
 5934              	.L610:
2564:src/keys.c    **** 		return CONST_CMPLX(n);
 5935              		.loc 1 2564 11 view .LVU1766
 5936 00b6 4FF42840 		mov	r0, #43008
 5937              	.LVL497:
2564:src/keys.c    **** 		return CONST_CMPLX(n);
 5938              		.loc 1 2564 11 view .LVU1767
 5939 00ba 7047     		bx	lr
 5940              	.LVL498:
 5941              	.L622:
 5942              		.cfi_def_cfa_offset 4
 5943              		.cfi_offset 4, -4
2600:src/keys.c    **** 		m -= opcode_breaks[i];
 5944              		.loc 1 2600 4 is_stmt 1 view .LVU1768
2600:src/keys.c    **** 		m -= opcode_breaks[i];
 5945              		.loc 1 2600 29 is_stmt 0 view .LVU1769
 5946 00bc 03EB0020 		add	r0, r3, r0, lsl #8
 5947              	.LVL499:
2600:src/keys.c    **** 		m -= opcode_breaks[i];
 5948              		.loc 1 2600 29 view .LVU1770
 5949 00c0 D4E7     		b	.L597
 5950              	.LVL500:
 5951              	.L612:
 5952              		.cfi_def_cfa_offset 0
 5953              		.cfi_restore 4
2589:src/keys.c    **** 
 5954              		.loc 1 2589 10 view .LVU1771
 5955 00c2 4FF48070 		mov	r0, #256
 5956              	.LVL501:
2604:src/keys.c    **** 
 5957              		.loc 1 2604 1 view .LVU1772
 5958 00c6 7047     		bx	lr
 5959              	.L625:
 5960              		.align	2
 5961              	.L624:
 5962 00c8 00000000 		.word	StateWhileOn
 5963 00cc 00000000 		.word	.LANCHOR12
 5964 00d0 01000000 		.word	.LANCHOR13+1
 5965 00d4 00000000 		.word	.LANCHOR10
ARM GAS  /tmp/ccgiIQCZ.s 			page 189


 5966 00d8 00000000 		.word	.LANCHOR9
 5967 00dc 00000000 		.word	.LANCHOR11
 5968              		.cfi_endproc
 5969              	.LFE46:
 5971              		.section	.text.process_catalogue,"ax",%progbits
 5972              		.align	1
 5973              		.p2align 2,,3
 5974              		.syntax unified
 5975              		.thumb
 5976              		.thumb_func
 5977              		.fpu fpv4-sp-d16
 5979              	process_catalogue:
 5980              	.LVL502:
 5981              	.LFB48:
2618:src/keys.c    ****    int pos = State.catpos;
 5982              		.loc 1 2618 93 is_stmt 1 view -0
 5983              		.cfi_startproc
 5984              		@ args = 0, pretend = 0, frame = 16
 5985              		@ frame_needed = 0, uses_anonymous_args = 0
2618:src/keys.c    ****    int pos = State.catpos;
 5986              		.loc 1 2618 93 is_stmt 0 view .LVU1774
 5987 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5988              		.cfi_def_cfa_offset 36
 5989              		.cfi_offset 4, -36
 5990              		.cfi_offset 5, -32
 5991              		.cfi_offset 6, -28
 5992              		.cfi_offset 7, -24
 5993              		.cfi_offset 8, -20
 5994              		.cfi_offset 9, -16
 5995              		.cfi_offset 10, -12
 5996              		.cfi_offset 11, -8
 5997              		.cfi_offset 14, -4
2619:src/keys.c    ****    int ch;
 5998              		.loc 1 2619 14 view .LVU1775
 5999 0004 DFF8EC92 		ldr	r9, .L740+24
 6000              	.LBB584:
 6001              	.LBB585:
2507:src/keys.c    **** #endif
 6002              		.loc 1 2507 31 view .LVU1776
 6003 0008 B44F     		ldr	r7, .L740
 6004              	.LBE585:
 6005              	.LBE584:
2619:src/keys.c    ****    int ch;
 6006              		.loc 1 2619 14 view .LVU1777
 6007 000a D9F80040 		ldr	r4, [r9]
 6008              	.LBB590:
 6009              	.LBB586:
2507:src/keys.c    **** #endif
 6010              		.loc 1 2507 31 view .LVU1778
 6011 000e 97F80EA0 		ldrb	r10, [r7, #14]	@ zero_extendqisi2
 6012              	.LBE586:
 6013              	.LBE590:
2619:src/keys.c    ****    int ch;
 6014              		.loc 1 2619 19 view .LVU1779
 6015 0012 B4F8DC57 		ldrh	r5, [r4, #2012]
 6016              	.LBB591:
 6017              	.LBB587:
ARM GAS  /tmp/ccgiIQCZ.s 			page 190


2507:src/keys.c    **** #endif
 6018              		.loc 1 2507 24 view .LVU1780
 6019 0016 B24B     		ldr	r3, .L740+4
 6020              	.LBE587:
 6021              	.LBE591:
2619:src/keys.c    ****    int ch;
 6022              		.loc 1 2619 4 is_stmt 1 view .LVU1781
2618:src/keys.c    ****    int pos = State.catpos;
 6023              		.loc 1 2618 93 is_stmt 0 view .LVU1782
 6024 0018 85B0     		sub	sp, sp, #20
 6025              		.cfi_def_cfa_offset 56
 6026              	.LBB592:
 6027              	.LBB588:
2507:src/keys.c    **** #endif
 6028              		.loc 1 2507 24 view .LVU1783
 6029 001a 13F80A80 		ldrb	r8, [r3, r10]	@ zero_extendqisi2
 6030              	.LBE588:
 6031              	.LBE592:
2618:src/keys.c    ****    int pos = State.catpos;
 6032              		.loc 1 2618 93 view .LVU1784
 6033 001e 1646     		mov	r6, r2
2619:src/keys.c    ****    int ch;
 6034              		.loc 1 2619 8 view .LVU1785
 6035 0020 C5F34615 		ubfx	r5, r5, #5, #7
 6036              	.LVL503:
2620:src/keys.c    ****    const int ctmax = current_catalogue_max();
 6037              		.loc 1 2620 4 is_stmt 1 view .LVU1786
2621:src/keys.c    ****    const enum catalogues cat = (enum catalogues) State2.catalogue;
 6038              		.loc 1 2621 4 view .LVU1787
 6039              	.LBB593:
 6040              	.LBI584:
2473:src/keys.c    **** 	// A quick table of catalogue sizes
 6041              		.loc 1 2473 5 view .LVU1788
 6042              	.LBB589:
2476:src/keys.c    **** 	{
 6043              		.loc 1 2476 2 view .LVU1789
2507:src/keys.c    **** #endif
 6044              		.loc 1 2507 2 view .LVU1790
2507:src/keys.c    **** #endif
 6045              		.loc 1 2507 2 is_stmt 0 view .LVU1791
 6046              	.LBE589:
 6047              	.LBE593:
2622:src/keys.c    **** 
 6048              		.loc 1 2622 4 is_stmt 1 view .LVU1792
2624:src/keys.c    ****      switch (c) {
 6049              		.loc 1 2624 4 view .LVU1793
2624:src/keys.c    ****      switch (c) {
 6050              		.loc 1 2624 7 is_stmt 0 view .LVU1794
 6051 0024 0029     		cmp	r1, #0
 6052 0026 65D0     		beq	.L725
2685:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
 6053              		.loc 1 2685 11 is_stmt 1 view .LVU1795
2685:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
 6054              		.loc 1 2685 14 is_stmt 0 view .LVU1796
 6055 0028 0129     		cmp	r1, #1
 6056 002a 00F0ED80 		beq	.L726
2719:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
ARM GAS  /tmp/ccgiIQCZ.s 			page 191


 6057              		.loc 1 2719 11 is_stmt 1 view .LVU1797
2719:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
 6058              		.loc 1 2719 14 is_stmt 0 view .LVU1798
 6059 002e 0229     		cmp	r1, #2
 6060 0030 00F00B81 		beq	.L727
 6061              	.LVL504:
 6062              	.L662:
 6063              	.LBB594:
 6064              	.LBB595:
 491:src/keys.c    **** }
 6065              		.loc 1 491 2 is_stmt 1 view .LVU1799
 6066              	.LBB596:
 6067              	.LBI596:
 131:src/keys.c    **** {
 6068              		.loc 1 131 12 view .LVU1800
 6069              	.LBB597:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 6070              		.loc 1 133 2 view .LVU1801
 143:src/keys.c    **** }
 6071              		.loc 1 143 2 view .LVU1802
 143:src/keys.c    **** }
 6072              		.loc 1 143 23 is_stmt 0 view .LVU1803
 6073 0034 AB4B     		ldr	r3, .L740+8
 6074              	.LBE597:
 6075              	.LBE596:
 491:src/keys.c    **** }
 6076              		.loc 1 491 49 view .LVU1804
 6077 0036 AC4A     		ldr	r2, .L740+12
 6078              	.LBB599:
 6079              	.LBB598:
 143:src/keys.c    **** }
 6080              		.loc 1 143 23 view .LVU1805
 6081 0038 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 6082              	.LBE598:
 6083              	.LBE599:
 491:src/keys.c    **** }
 6084              		.loc 1 491 49 view .LVU1806
 6085 003a 03EB4303 		add	r3, r3, r3, lsl #1
 6086 003e 02EB4303 		add	r3, r2, r3, lsl #1
 6087              	.LBE595:
 6088              	.LBE594:
 6089              	.LBB603:
 6090              	.LBB604:
 6091              	.LBB605:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 6092              		.loc 1 106 16 view .LVU1807
 6093 0042 0025     		movs	r5, #0
 6094              	.LVL505:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 6095              		.loc 1 106 16 view .LVU1808
 6096              	.LBE605:
 6097              	.LBE604:
 6098              	.LBE603:
2729:src/keys.c    ****    reset_shift();
 6099              		.loc 1 2729 9 view .LVU1809
 6100 0044 585C     		ldrb	r0, [r3, r1]	@ zero_extendqisi2
 6101              	.LVL506:
ARM GAS  /tmp/ccgiIQCZ.s 			page 192


2729:src/keys.c    ****    reset_shift();
 6102              		.loc 1 2729 9 view .LVU1810
 6103 0046 FFF7FEFF 		bl	remap_chars
 6104              	.LVL507:
2729:src/keys.c    ****    reset_shift();
 6105              		.loc 1 2729 9 view .LVU1811
 6106 004a 0446     		mov	r4, r0
 6107              	.LVL508:
2730:src/keys.c    ****    if (ch == '\0')
 6108              		.loc 1 2730 4 is_stmt 1 view .LVU1812
 6109              	.LBB610:
 6110              	.LBI603:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 6111              		.loc 1 114 13 view .LVU1813
 6112              	.LBE610:
 115:src/keys.c    **** }
 6113              		.loc 1 115 2 view .LVU1814
 6114              	.LBB611:
 6115              	.LBB609:
 6116              	.LBI604:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 6117              		.loc 1 104 20 view .LVU1815
 6118              	.LBB608:
 105:src/keys.c    **** 	State2.shifts = shift;
 6119              		.loc 1 105 2 view .LVU1816
 6120              	.LBB606:
 6121              	.LBI606:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 6122              		.loc 1 96 13 view .LVU1817
 6123              	.LBB607:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 6124              		.loc 1 97 2 view .LVU1818
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 6125              		.loc 1 97 18 is_stmt 0 view .LVU1819
 6126 004c FFF7FEFF 		bl	shift_down
 6127              	.LVL509:
  98:src/keys.c    **** }
 6128              		.loc 1 98 2 is_stmt 1 view .LVU1820
 6129              	.LBE607:
 6130              	.LBE606:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 6131              		.loc 1 106 2 view .LVU1821
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 6132              		.loc 1 106 16 is_stmt 0 view .LVU1822
 6133 0050 3D74     		strb	r5, [r7, #16]
 108:src/keys.c    **** }
 6134              		.loc 1 108 2 is_stmt 1 view .LVU1823
 6135              	.LVL510:
 108:src/keys.c    **** }
 6136              		.loc 1 108 2 is_stmt 0 view .LVU1824
 6137              	.LBE608:
 6138              	.LBE609:
 6139              	.LBE611:
2731:src/keys.c    ****      return STATE_UNFINISHED;
 6140              		.loc 1 2731 4 is_stmt 1 view .LVU1825
2731:src/keys.c    ****      return STATE_UNFINISHED;
 6141              		.loc 1 2731 7 is_stmt 0 view .LVU1826
ARM GAS  /tmp/ccgiIQCZ.s 			page 193


 6142 0052 002C     		cmp	r4, #0
 6143 0054 6FD0     		beq	.L724
2733:src/keys.c    ****      // No multi character search in alpha catalogues
 6144              		.loc 1 2733 4 is_stmt 1 view .LVU1827
2733:src/keys.c    ****      // No multi character search in alpha catalogues
 6145              		.loc 1 2733 7 is_stmt 0 view .LVU1828
 6146 0056 AAF10B0A 		sub	r10, r10, #11
 6147              	.LVL511:
2733:src/keys.c    ****      // No multi character search in alpha catalogues
 6148              		.loc 1 2733 7 view .LVU1829
 6149 005a BAF1040F 		cmp	r10, #4
 6150 005e 40F2CB80 		bls	.L676
2737:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6151              		.loc 1 2737 4 is_stmt 1 view .LVU1830
2737:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6152              		.loc 1 2737 8 is_stmt 0 view .LVU1831
 6153 0062 3D7F     		ldrb	r5, [r7, #28]	@ zero_extendqisi2
2737:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6154              		.loc 1 2737 7 view .LVU1832
 6155 0064 092D     		cmp	r5, #9
 6156 0066 40F2C780 		bls	.L676
 6157              	.LVL512:
 6158              	.L644:
2742:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
 6159              		.loc 1 2742 4 is_stmt 1 view .LVU1833
2742:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
 6160              		.loc 1 2742 27 is_stmt 0 view .LVU1834
 6161 006a 7B19     		adds	r3, r7, r5
 6162 006c 0025     		movs	r5, #0
 6163 006e 83F82050 		strb	r5, [r3, #32]
2743:src/keys.c    ****      char buf[16];
 6164              		.loc 1 2743 4 is_stmt 1 view .LVU1835
 6165              	.LVL513:
2743:src/keys.c    ****      char buf[16];
 6166              		.loc 1 2743 18 view .LVU1836
2743:src/keys.c    ****      char buf[16];
 6167              		.loc 1 2743 4 is_stmt 0 view .LVU1837
 6168 0072 B8F1000F 		cmp	r8, #0
 6169 0076 00F0D780 		beq	.L722
 6170              	.LVL514:
 6171              	.L664:
 6172              	.LBB612:
2744:src/keys.c    ****      const char *cmd = catcmd(current_catalogue(pos), buf);
 6173              		.loc 1 2744 6 is_stmt 1 view .LVU1838
2745:src/keys.c    ****      int i;
 6174              		.loc 1 2745 6 view .LVU1839
2745:src/keys.c    ****      int i;
 6175              		.loc 1 2745 24 is_stmt 0 view .LVU1840
 6176 007a 2846     		mov	r0, r5
 6177 007c FFF7FEFF 		bl	current_catalogue
 6178              	.LVL515:
 6179 0080 6946     		mov	r1, sp
 6180 0082 FFF7FEFF 		bl	catcmd
 6181              	.LVL516:
 6182 0086 0446     		mov	r4, r0
 6183              	.LVL517:
2746:src/keys.c    **** 
ARM GAS  /tmp/ccgiIQCZ.s 			page 194


 6184              		.loc 1 2746 6 is_stmt 1 view .LVU1841
2748:src/keys.c    ****        cmd++;
 6185              		.loc 1 2748 6 view .LVU1842
2749:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
 6186              		.loc 1 2749 8 view .LVU1843
2748:src/keys.c    ****        cmd++;
 6187              		.loc 1 2748 10 is_stmt 0 view .LVU1844
 6188 0088 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 6189              	.LVL518:
2748:src/keys.c    ****        cmd++;
 6190              		.loc 1 2748 9 view .LVU1845
 6191 008a 1428     		cmp	r0, #20
 6192 008c 04BF     		itt	eq
 6193 008e 6078     		ldrbeq	r0, [r4, #1]	@ zero_extendqisi2
2749:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
 6194              		.loc 1 2749 11 view .LVU1846
 6195 0090 0134     		addeq	r4, r4, #1
 6196              	.LVL519:
2750:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6197              		.loc 1 2750 6 is_stmt 1 view .LVU1847
2750:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6198              		.loc 1 2750 16 view .LVU1848
2750:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6199              		.loc 1 2750 6 is_stmt 0 view .LVU1849
 6200 0092 0028     		cmp	r0, #0
 6201 0094 00F0BF80 		beq	.L666
 6202 0098 DFF85CB2 		ldr	fp, .L740+28
 6203 009c C4F1010A 		rsb	r10, r4, #1
 6204 00a0 06E0     		b	.L669
 6205              	.LVL520:
 6206              	.L729:
 6207              	.LBB613:
2755:src/keys.c    **** 	 break;
 6208              		.loc 1 2755 16 view .LVU1850
 6209 00a2 C0F2BA80 		blt	.L668
 6210              	.LBE613:
2750:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6211              		.loc 1 2750 19 discriminator 2 view .LVU1851
 6212 00a6 14F8010F 		ldrb	r0, [r4, #1]!	@ zero_extendqisi2
 6213              	.LVL521:
2750:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6214              		.loc 1 2750 6 discriminator 2 view .LVU1852
 6215 00aa 0028     		cmp	r0, #0
 6216 00ac 00F0BF80 		beq	.L728
 6217              	.LVL522:
 6218              	.L669:
 6219              	.LBB614:
2751:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
 6220              		.loc 1 2751 8 is_stmt 1 view .LVU1853
2751:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
 6221              		.loc 1 2751 22 is_stmt 0 view .LVU1854
 6222 00b0 FFF7FEFF 		bl	remap_chars
 6223              	.LVL523:
2755:src/keys.c    **** 	 break;
 6224              		.loc 1 2755 13 is_stmt 1 view .LVU1855
 6225              	.LBE614:
2750:src/keys.c    ****        const int c = remap_chars(cmd[i]);
ARM GAS  /tmp/ccgiIQCZ.s 			page 195


 6226              		.loc 1 2750 32 view .LVU1856
 6227              	.LBB615:
2752:src/keys.c    ****        if (c > cl)
 6228              		.loc 1 2752 8 view .LVU1857
2752:src/keys.c    ****        if (c > cl)
 6229              		.loc 1 2752 46 is_stmt 0 view .LVU1858
 6230 00b4 1BF8013F 		ldrb	r3, [fp, #1]!	@ zero_extendqisi2
 6231              	.LVL524:
2753:src/keys.c    **** 	 goto set_pos;
 6232              		.loc 1 2753 8 is_stmt 1 view .LVU1859
2753:src/keys.c    **** 	 goto set_pos;
 6233              		.loc 1 2753 11 is_stmt 0 view .LVU1860
 6234 00b8 9842     		cmp	r0, r3
 6235 00ba 0AEB0402 		add	r2, r10, r4
 6236              	.LVL525:
2753:src/keys.c    **** 	 goto set_pos;
 6237              		.loc 1 2753 11 view .LVU1861
 6238              	.LBE615:
2750:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6239              		.loc 1 2750 16 is_stmt 1 view .LVU1862
 6240              	.LBB616:
2753:src/keys.c    **** 	 goto set_pos;
 6241              		.loc 1 2753 11 is_stmt 0 view .LVU1863
 6242 00be F0DD     		ble	.L729
 6243              	.LVL526:
 6244              	.L667:
2753:src/keys.c    **** 	 goto set_pos;
 6245              		.loc 1 2753 11 view .LVU1864
 6246 00c0 D9F80040 		ldr	r4, [r9]
 6247              	.L647:
2753:src/keys.c    **** 	 goto set_pos;
 6248              		.loc 1 2753 11 view .LVU1865
 6249              	.LBE616:
 6250              	.LBE612:
2764:src/keys.c    ****      --pos;
 6251              		.loc 1 2764 10 is_stmt 1 view .LVU1866
 6252 00c4 002E     		cmp	r6, #0
 6253 00c6 00F0B680 		beq	.L651
2764:src/keys.c    ****      --pos;
 6254              		.loc 1 2764 20 is_stmt 0 view .LVU1867
 6255 00ca 4DB1     		cbz	r5, .L645
 6256              	.LVL527:
 6257              	.L723:
2764:src/keys.c    ****      --pos;
 6258              		.loc 1 2764 20 view .LVU1868
 6259 00cc 2846     		mov	r0, r5
 6260 00ce FFF7FEFF 		bl	current_catalogue
 6261              	.LVL528:
2765:src/keys.c    ****    State.catpos = pos;
 6262              		.loc 1 2765 6 is_stmt 1 view .LVU1869
2764:src/keys.c    ****      --pos;
 6263              		.loc 1 2764 10 view .LVU1870
 6264              	.LBB617:
 6265              	.LBI617:
2611:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 6266              		.loc 1 2611 12 view .LVU1871
 6267              	.LBB618:
ARM GAS  /tmp/ccgiIQCZ.s 			page 196


2612:src/keys.c    **** }
 6268              		.loc 1 2612 2 view .LVU1872
2612:src/keys.c    **** }
 6269              		.loc 1 2612 33 is_stmt 0 view .LVU1873
 6270 00d2 00F0F000 		and	r0, r0, #240
 6271              	.LBE618:
 6272              	.LBE617:
2764:src/keys.c    ****      --pos;
 6273              		.loc 1 2764 27 view .LVU1874
 6274 00d6 F028     		cmp	r0, #240
 6275 00d8 40F0AD80 		bne	.L651
2764:src/keys.c    ****      --pos;
 6276              		.loc 1 2764 20 view .LVU1875
 6277 00dc 013D     		subs	r5, r5, #1
 6278              	.LVL529:
2764:src/keys.c    ****      --pos;
 6279              		.loc 1 2764 20 view .LVU1876
 6280 00de F5D1     		bne	.L723
 6281              	.LVL530:
 6282              	.L645:
2766:src/keys.c    ****    return STATE_UNFINISHED;
 6283              		.loc 1 2766 4 is_stmt 1 view .LVU1877
2766:src/keys.c    ****    return STATE_UNFINISHED;
 6284              		.loc 1 2766 17 is_stmt 0 view .LVU1878
 6285 00e0 B4F8DC37 		ldrh	r3, [r4, #2012]
 6286 00e4 65F34B13 		bfi	r3, r5, #5, #7
 6287 00e8 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2767:src/keys.c    ****  }
 6288              		.loc 1 2767 4 is_stmt 1 view .LVU1879
2767:src/keys.c    ****  }
 6289              		.loc 1 2767 11 is_stmt 0 view .LVU1880
 6290 00ec 3320     		movs	r0, #51
 6291              	.L736:
2768:src/keys.c    **** 
 6292              		.loc 1 2768 2 view .LVU1881
 6293 00ee 05B0     		add	sp, sp, #20
 6294              		.cfi_remember_state
 6295              		.cfi_def_cfa_offset 36
 6296              		@ sp needed
 6297 00f0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6298              	.LVL531:
 6299              	.L725:
 6300              		.cfi_restore_state
2625:src/keys.c    **** #ifdef DM42
 6301              		.loc 1 2625 6 is_stmt 1 view .LVU1882
 6302 00f4 431F     		subs	r3, r0, #5
 6303 00f6 1F2B     		cmp	r3, #31
 6304 00f8 2FD8     		bhi	.L628
 6305 00fa DFE803F0 		tbb	[pc, r3]
 6306              	.LVL532:
 6307              	.L630:
 6308 00fe 35       		.byte	(.L634-.L630)/2
 6309 00ff 2E       		.byte	(.L628-.L630)/2
 6310 0100 2E       		.byte	(.L628-.L630)/2
 6311 0101 2E       		.byte	(.L628-.L630)/2
 6312 0102 2E       		.byte	(.L628-.L630)/2
 6313 0103 2E       		.byte	(.L628-.L630)/2
ARM GAS  /tmp/ccgiIQCZ.s 			page 197


 6314 0104 2E       		.byte	(.L628-.L630)/2
 6315 0105 35       		.byte	(.L634-.L630)/2
 6316 0106 2E       		.byte	(.L628-.L630)/2
 6317 0107 2E       		.byte	(.L628-.L630)/2
 6318 0108 2E       		.byte	(.L628-.L630)/2
 6319 0109 20       		.byte	(.L633-.L630)/2
 6320 010a 2E       		.byte	(.L628-.L630)/2
 6321 010b 64       		.byte	(.L632-.L630)/2
 6322 010c 2E       		.byte	(.L628-.L630)/2
 6323 010d 2E       		.byte	(.L628-.L630)/2
 6324 010e 2E       		.byte	(.L628-.L630)/2
 6325 010f 2E       		.byte	(.L628-.L630)/2
 6326 0110 2E       		.byte	(.L628-.L630)/2
 6327 0111 6B       		.byte	(.L631-.L630)/2
 6328 0112 2E       		.byte	(.L628-.L630)/2
 6329 0113 2E       		.byte	(.L628-.L630)/2
 6330 0114 2E       		.byte	(.L628-.L630)/2
 6331 0115 2E       		.byte	(.L628-.L630)/2
 6332 0116 2E       		.byte	(.L628-.L630)/2
 6333 0117 2E       		.byte	(.L628-.L630)/2
 6334 0118 2E       		.byte	(.L628-.L630)/2
 6335 0119 2E       		.byte	(.L628-.L630)/2
 6336 011a 2E       		.byte	(.L628-.L630)/2
 6337 011b 2E       		.byte	(.L628-.L630)/2
 6338 011c 2E       		.byte	(.L628-.L630)/2
 6339 011d 27       		.byte	(.L629-.L630)/2
 6340              		.p2align 1
 6341              	.L735:
2714:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6342              		.loc 1 2714 42 is_stmt 0 discriminator 1 view .LVU1883
 6343 011e 734A     		ldr	r2, .L740+16
 6344              	.LVL533:
2714:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6345              		.loc 1 2714 42 discriminator 1 view .LVU1884
 6346 0120 7B69     		ldr	r3, [r7, #20]
2714:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6347              		.loc 1 2714 24 discriminator 1 view .LVU1885
 6348 0122 1A42     		tst	r2, r3
 6349 0124 75D0     		beq	.L659
2716:src/keys.c    ****        return STATE_UNFINISHED;
 6350              		.loc 1 2716 8 is_stmt 1 view .LVU1886
2716:src/keys.c    ****        return STATE_UNFINISHED;
 6351              		.loc 1 2716 38 is_stmt 0 view .LVU1887
 6352 0126 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 6353 0128 C3F30012 		ubfx	r2, r3, #4, #1
2716:src/keys.c    ****        return STATE_UNFINISHED;
 6354              		.loc 1 2716 30 view .LVU1888
 6355 012c C2F10102 		rsb	r2, r2, #1
2716:src/keys.c    ****        return STATE_UNFINISHED;
 6356              		.loc 1 2716 26 view .LVU1889
 6357 0130 62F30413 		bfi	r3, r2, #4, #1
 6358 0134 BB75     		strb	r3, [r7, #22]
 6359              	.LVL534:
 6360              	.L724:
2717:src/keys.c    ****      }
 6361              		.loc 1 2717 8 is_stmt 1 view .LVU1890
2717:src/keys.c    ****      }
ARM GAS  /tmp/ccgiIQCZ.s 			page 198


 6362              		.loc 1 2717 15 is_stmt 0 view .LVU1891
 6363 0136 3320     		movs	r0, #51
 6364              	.L626:
2768:src/keys.c    **** 
 6365              		.loc 1 2768 2 view .LVU1892
 6366 0138 05B0     		add	sp, sp, #20
 6367              		.cfi_remember_state
 6368              		.cfi_def_cfa_offset 36
 6369              		@ sp needed
 6370 013a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6371              	.LVL535:
 6372              	.L633:
 6373              		.cfi_restore_state
2654:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6374              		.loc 1 2654 8 is_stmt 1 view .LVU1893
2654:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6375              		.loc 1 2654 11 is_stmt 0 view .LVU1894
 6376 013e 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 6377 0140 23B1     		cbz	r3, .L629
2654:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6378              		.loc 1 2654 33 discriminator 1 view .LVU1895
 6379 0142 FFF7FEFF 		bl	keyticks
 6380              	.LVL536:
2654:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6381              		.loc 1 2654 30 discriminator 1 view .LVU1896
 6382 0146 1D28     		cmp	r0, #29
 6383 0148 40F39580 		ble	.L730
 6384              	.L629:
2664:src/keys.c    ****        return STATE_UNFINISHED;
 6385              		.loc 1 2664 8 is_stmt 1 view .LVU1897
 6386 014c 0020     		movs	r0, #0
 6387 014e FFF7FEFF 		bl	init_cat
 6388              	.LVL537:
2665:src/keys.c    **** 
 6389              		.loc 1 2665 8 view .LVU1898
2665:src/keys.c    **** 
 6390              		.loc 1 2665 15 is_stmt 0 view .LVU1899
 6391 0152 3320     		movs	r0, #51
2768:src/keys.c    **** 
 6392              		.loc 1 2768 2 view .LVU1900
 6393 0154 05B0     		add	sp, sp, #20
 6394              		.cfi_remember_state
 6395              		.cfi_def_cfa_offset 36
 6396              		@ sp needed
 6397 0156 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6398              	.LVL538:
 6399              	.L628:
 6400              		.cfi_restore_state
 6401              	.LBB619:
 6402              	.LBI594:
 435:src/keys.c    **** {
 6403              		.loc 1 435 12 is_stmt 1 discriminator 4 view .LVU1901
 6404              	.LBB600:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6405              		.loc 1 437 2 discriminator 4 view .LVU1902
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6406              		.loc 1 485 2 discriminator 4 view .LVU1903
ARM GAS  /tmp/ccgiIQCZ.s 			page 199


 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6407              		.loc 1 485 6 is_stmt 0 discriminator 4 view .LVU1904
 6408 015a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6409              		.loc 1 485 5 discriminator 4 view .LVU1905
 6410 015c 13F0100F 		tst	r3, #16
 6411 0160 14BF     		ite	ne
 6412 0162 0421     		movne	r1, #4
 6413              	.LVL539:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6414              		.loc 1 485 5 discriminator 4 view .LVU1906
 6415 0164 0021     		moveq	r1, #0
 6416 0166 65E7     		b	.L662
 6417              	.LVL540:
 6418              	.L634:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6419              		.loc 1 485 5 discriminator 4 view .LVU1907
 6420              	.LBE600:
 6421              	.LBE619:
2632:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6422              		.loc 1 2632 8 is_stmt 1 view .LVU1908
2632:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6423              		.loc 1 2632 11 is_stmt 0 view .LVU1909
 6424 0168 4545     		cmp	r5, r8
 6425 016a EFDA     		bge	.L629
 6426 016c 2846     		mov	r0, r5
 6427              	.LVL541:
2632:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6428              		.loc 1 2632 24 discriminator 1 view .LVU1910
 6429 016e 002E     		cmp	r6, #0
 6430 0170 00F08D80 		beq	.L731
 6431              	.LVL542:
 6432              	.LBB620:
 6433              	.LBI620:
2611:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 6434              		.loc 1 2611 12 is_stmt 1 view .LVU1911
 6435              	.LBB621:
2612:src/keys.c    **** }
 6436              		.loc 1 2612 2 view .LVU1912
2612:src/keys.c    **** }
 6437              		.loc 1 2612 10 is_stmt 0 view .LVU1913
 6438 0174 FFF7FEFF 		bl	current_catalogue
 6439              	.LVL543:
2612:src/keys.c    **** }
 6440              		.loc 1 2612 33 view .LVU1914
 6441 0178 00F0F003 		and	r3, r0, #240
 6442              	.LBE621:
 6443              	.LBE620:
2632:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6444              		.loc 1 2632 27 view .LVU1915
 6445 017c F02B     		cmp	r3, #240
 6446              	.LBB623:
 6447              	.LBB622:
2612:src/keys.c    **** }
 6448              		.loc 1 2612 10 view .LVU1916
 6449 017e 0446     		mov	r4, r0
 6450              	.LBE622:
ARM GAS  /tmp/ccgiIQCZ.s 			page 200


 6451              	.LBE623:
2632:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6452              		.loc 1 2632 27 view .LVU1917
 6453 0180 E4D0     		beq	.L629
 6454              	.L637:
 6455              	.LBB624:
2633:src/keys.c    **** 
 6456              		.loc 1 2633 3 is_stmt 1 view .LVU1918
2635:src/keys.c    **** 
 6457              		.loc 1 2635 3 view .LVU1919
 6458 0182 0020     		movs	r0, #0
 6459 0184 FFF7FEFF 		bl	init_cat
 6460              	.LVL544:
2637:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 6461              		.loc 1 2637 3 view .LVU1920
2637:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 6462              		.loc 1 2637 6 is_stmt 0 view .LVU1921
 6463 0188 14F47043 		ands	r3, r4, #61440
 6464 018c 00F08C80 		beq	.L638
2637:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 6465              		.loc 1 2637 7 discriminator 1 view .LVU1922
 6466 0190 B3F5704F 		cmp	r3, #61440
 6467 0194 00F08880 		beq	.L638
 6468              	.LBB625:
2638:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 6469              		.loc 1 2638 5 is_stmt 1 view .LVU1923
2638:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 6470              		.loc 1 2638 31 is_stmt 0 view .LVU1924
 6471 0198 C4F30723 		ubfx	r3, r4, #8, #8
 6472 019c A3F12005 		sub	r5, r3, #32
 6473              	.LVL545:
2638:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 6474              		.loc 1 2638 31 view .LVU1925
 6475 01a0 EDB2     		uxtb	r5, r5
 6476              	.LVL546:
2639:src/keys.c    **** 	     return op;
 6477              		.loc 1 2639 5 is_stmt 1 view .LVU1926
2639:src/keys.c    **** 	     return op;
 6478              		.loc 1 2639 8 is_stmt 0 view .LVU1927
 6479 01a2 012D     		cmp	r5, #1
 6480 01a4 40F28980 		bls	.L639
2639:src/keys.c    **** 	     return op;
 6481              		.loc 1 2639 56 discriminator 1 view .LVU1928
 6482 01a8 6C2D     		cmp	r5, #108
 6483 01aa 00F08680 		beq	.L639
2639:src/keys.c    **** 	     return op;
 6484              		.loc 1 2639 77 discriminator 2 view .LVU1929
 6485 01ae 242D     		cmp	r5, #36
 6486 01b0 00F08380 		beq	.L639
2641:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 6487              		.loc 1 2641 5 is_stmt 1 view .LVU1930
2641:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 6488              		.loc 1 2641 30 is_stmt 0 view .LVU1931
 6489 01b4 A5F12D02 		sub	r2, r5, #45
2641:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 6490              		.loc 1 2641 8 view .LVU1932
 6491 01b8 062A     		cmp	r2, #6
ARM GAS  /tmp/ccgiIQCZ.s 			page 201


 6492 01ba 00F29F80 		bhi	.L642
2642:src/keys.c    **** 	   else
 6493              		.loc 1 2642 7 is_stmt 1 view .LVU1933
2642:src/keys.c    **** 	   else
 6494              		.loc 1 2642 28 is_stmt 0 view .LVU1934
 6495 01be 4D3B     		subs	r3, r3, #77
2642:src/keys.c    **** 	   else
 6496              		.loc 1 2642 19 view .LVU1935
 6497 01c0 FB73     		strb	r3, [r7, #15]
 6498              	.LBE625:
 6499              	.LBE624:
2651:src/keys.c    **** 
 6500              		.loc 1 2651 15 view .LVU1936
 6501 01c2 3320     		movs	r0, #51
 6502              	.LBB635:
 6503              	.LBB628:
 6504 01c4 B8E7     		b	.L626
 6505              	.LVL547:
 6506              	.L632:
2651:src/keys.c    **** 
 6507              		.loc 1 2651 15 view .LVU1937
 6508              	.LBE628:
 6509              	.LBE635:
2668:src/keys.c    ****        if (pos == 0)
 6510              		.loc 1 2668 8 is_stmt 1 view .LVU1938
2668:src/keys.c    ****        if (pos == 0)
 6511              		.loc 1 2668 22 is_stmt 0 view .LVU1939
 6512 01c6 0023     		movs	r3, #0
 6513 01c8 3B77     		strb	r3, [r7, #28]
2669:src/keys.c    **** 	 goto set_max;
 6514              		.loc 1 2669 8 is_stmt 1 view .LVU1940
2669:src/keys.c    **** 	 goto set_max;
 6515              		.loc 1 2669 11 is_stmt 0 view .LVU1941
 6516 01ca 002D     		cmp	r5, #0
 6517 01cc 5DD1     		bne	.L732
 6518              	.LVL548:
 6519              	.L646:
2762:src/keys.c    ****  set_pos:
 6520              		.loc 1 2762 4 is_stmt 1 view .LVU1942
2762:src/keys.c    ****  set_pos:
 6521              		.loc 1 2762 8 is_stmt 0 view .LVU1943
 6522 01ce 08F1FF35 		add	r5, r8, #-1
 6523              	.LVL549:
2762:src/keys.c    ****  set_pos:
 6524              		.loc 1 2762 8 view .LVU1944
 6525 01d2 77E7     		b	.L647
 6526              	.LVL550:
 6527              	.L631:
2676:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 6528              		.loc 1 2676 8 is_stmt 1 view .LVU1945
2676:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 6529              		.loc 1 2676 22 is_stmt 0 view .LVU1946
 6530 01d4 0023     		movs	r3, #0
 6531 01d6 3B77     		strb	r3, [r7, #28]
2677:src/keys.c    ****        if (pos >= ctmax)
 6532              		.loc 1 2677 8 is_stmt 1 view .LVU1947
2677:src/keys.c    ****        if (pos >= ctmax)
ARM GAS  /tmp/ccgiIQCZ.s 			page 202


 6533              		.loc 1 2677 14 is_stmt 0 view .LVU1948
 6534 01d8 06E0     		b	.L650
 6535              	.LVL551:
 6536              	.L733:
2677:src/keys.c    ****        if (pos >= ctmax)
 6537              		.loc 1 2677 29 discriminator 1 view .LVU1949
 6538 01da 66B3     		cbz	r6, .L651
 6539              	.LBB636:
 6540              	.LBB637:
2612:src/keys.c    **** }
 6541              		.loc 1 2612 10 view .LVU1950
 6542 01dc FFF7FEFF 		bl	current_catalogue
 6543              	.LVL552:
2612:src/keys.c    **** }
 6544              		.loc 1 2612 33 view .LVU1951
 6545 01e0 00F0F000 		and	r0, r0, #240
 6546              	.LBE637:
 6547              	.LBE636:
2677:src/keys.c    ****        if (pos >= ctmax)
 6548              		.loc 1 2677 41 view .LVU1952
 6549 01e4 F028     		cmp	r0, #240
 6550 01e6 26D1     		bne	.L651
 6551              	.L650:
2677:src/keys.c    ****        if (pos >= ctmax)
 6552              		.loc 1 2677 65 is_stmt 1 discriminator 3 view .LVU1953
2677:src/keys.c    ****        if (pos >= ctmax)
 6553              		.loc 1 2677 14 discriminator 3 view .LVU1954
 6554 01e8 0135     		adds	r5, r5, #1
 6555              	.LVL553:
 6556              	.LBB640:
 6557              	.LBI636:
2611:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 6558              		.loc 1 2611 12 discriminator 3 view .LVU1955
 6559              	.LBB638:
2612:src/keys.c    **** }
 6560              		.loc 1 2612 2 discriminator 3 view .LVU1956
 6561              	.LBE638:
 6562              	.LBE640:
2677:src/keys.c    ****        if (pos >= ctmax)
 6563              		.loc 1 2677 14 is_stmt 0 discriminator 3 view .LVU1957
 6564 01ea A845     		cmp	r8, r5
 6565              	.LBB641:
 6566              	.LBB639:
2612:src/keys.c    **** }
 6567              		.loc 1 2612 10 discriminator 3 view .LVU1958
 6568 01ec 2846     		mov	r0, r5
 6569              	.LBE639:
 6570              	.LBE641:
2677:src/keys.c    ****        if (pos >= ctmax)
 6571              		.loc 1 2677 14 discriminator 3 view .LVU1959
 6572 01ee F4DC     		bgt	.L733
 6573              	.LVL554:
2764:src/keys.c    ****      --pos;
 6574              		.loc 1 2764 10 is_stmt 1 view .LVU1960
2679:src/keys.c    ****        goto set_pos;
 6575              		.loc 1 2679 7 is_stmt 0 view .LVU1961
 6576 01f0 3546     		mov	r5, r6
ARM GAS  /tmp/ccgiIQCZ.s 			page 203


 6577              	.LVL555:
2764:src/keys.c    ****      --pos;
 6578              		.loc 1 2764 10 view .LVU1962
 6579 01f2 06B3     		cbz	r6, .L651
 6580              	.LVL556:
2764:src/keys.c    ****      --pos;
 6581              		.loc 1 2764 10 view .LVU1963
 6582 01f4 0025     		movs	r5, #0
 6583              	.LVL557:
2764:src/keys.c    ****      --pos;
 6584              		.loc 1 2764 10 view .LVU1964
 6585 01f6 73E7     		b	.L645
 6586              	.LVL558:
 6587              	.L676:
2737:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6588              		.loc 1 2737 8 view .LVU1965
 6589 01f8 2B46     		mov	r3, r5
2738:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6590              		.loc 1 2738 6 is_stmt 1 view .LVU1966
2738:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6591              		.loc 1 2738 31 is_stmt 0 view .LVU1967
 6592 01fa 3B44     		add	r3, r3, r7
2738:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6593              		.loc 1 2738 27 view .LVU1968
 6594 01fc 0135     		adds	r5, r5, #1
 6595 01fe EDB2     		uxtb	r5, r5
 6596 0200 3D77     		strb	r5, [r7, #28]
2738:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6597              		.loc 1 2738 31 view .LVU1969
 6598 0202 83F82040 		strb	r4, [r3, #32]
 6599 0206 30E7     		b	.L644
 6600              	.LVL559:
 6601              	.L726:
2686:src/keys.c    ****        /*
 6602              		.loc 1 2686 6 is_stmt 1 view .LVU1970
2686:src/keys.c    ****        /*
 6603              		.loc 1 2686 9 is_stmt 0 view .LVU1971
 6604 0208 BAF1120F 		cmp	r10, #18
 6605 020c 21D0     		beq	.L734
 6606              	.L653:
2714:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6607              		.loc 1 2714 11 is_stmt 1 view .LVU1972
2714:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6608              		.loc 1 2714 14 is_stmt 0 view .LVU1973
 6609 020e 2428     		cmp	r0, #36
 6610 0210 85D0     		beq	.L735
 6611              	.LVL560:
 6612              	.L659:
2729:src/keys.c    ****    reset_shift();
 6613              		.loc 1 2729 4 is_stmt 1 view .LVU1974
 6614              	.LBB642:
 435:src/keys.c    **** {
 6615              		.loc 1 435 12 view .LVU1975
 6616              	.LBB601:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6617              		.loc 1 437 2 view .LVU1976
 485:src/keys.c    **** 		if (shift == SHIFT_N)
ARM GAS  /tmp/ccgiIQCZ.s 			page 204


 6618              		.loc 1 485 2 view .LVU1977
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6619              		.loc 1 485 5 is_stmt 0 view .LVU1978
 6620 0212 0121     		movs	r1, #1
 6621              	.LVL561:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6622              		.loc 1 485 5 view .LVU1979
 6623 0214 0EE7     		b	.L662
 6624              	.LVL562:
 6625              	.L666:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6626              		.loc 1 485 5 view .LVU1980
 6627 0216 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 6628              	.LVL563:
 6629              	.L668:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6630              		.loc 1 485 5 view .LVU1981
 6631              	.LBE601:
 6632              	.LBE642:
 6633              	.LBB643:
2758:src/keys.c    ****        goto set_pos;
 6634              		.loc 1 2758 6 is_stmt 1 view .LVU1982
2758:src/keys.c    ****        goto set_pos;
 6635              		.loc 1 2758 9 is_stmt 0 view .LVU1983
 6636 021a 002B     		cmp	r3, #0
 6637 021c 3FF450AF 		beq	.L667
 6638              	.LBE643:
2743:src/keys.c    ****      char buf[16];
 6639              		.loc 1 2743 31 is_stmt 1 view .LVU1984
 6640 0220 0135     		adds	r5, r5, #1
 6641              	.LVL564:
2743:src/keys.c    ****      char buf[16];
 6642              		.loc 1 2743 18 view .LVU1985
2743:src/keys.c    ****      char buf[16];
 6643              		.loc 1 2743 4 is_stmt 0 view .LVU1986
 6644 0222 A845     		cmp	r8, r5
 6645 0224 7FF429AF 		bne	.L664
 6646              	.LVL565:
 6647              	.L722:
2743:src/keys.c    ****      char buf[16];
 6648              		.loc 1 2743 4 view .LVU1987
 6649 0228 D9F80040 		ldr	r4, [r9]
 6650 022c CFE7     		b	.L646
 6651              	.LVL566:
 6652              	.L728:
2743:src/keys.c    ****      char buf[16];
 6653              		.loc 1 2743 4 view .LVU1988
 6654 022e 3A44     		add	r2, r2, r7
 6655              	.LVL567:
2743:src/keys.c    ****      char buf[16];
 6656              		.loc 1 2743 4 view .LVU1989
 6657 0230 92F82030 		ldrb	r3, [r2, #32]	@ zero_extendqisi2
 6658              	.LVL568:
2743:src/keys.c    ****      char buf[16];
 6659              		.loc 1 2743 4 view .LVU1990
 6660 0234 F1E7     		b	.L668
 6661              	.LVL569:
ARM GAS  /tmp/ccgiIQCZ.s 			page 205


 6662              	.L651:
2766:src/keys.c    ****    return STATE_UNFINISHED;
 6663              		.loc 1 2766 17 view .LVU1991
 6664 0236 B4F8DC37 		ldrh	r3, [r4, #2012]
 6665 023a 05F07F05 		and	r5, r5, #127
 6666              	.LVL570:
2766:src/keys.c    ****    return STATE_UNFINISHED;
 6667              		.loc 1 2766 4 is_stmt 1 view .LVU1992
2766:src/keys.c    ****    return STATE_UNFINISHED;
 6668              		.loc 1 2766 17 is_stmt 0 view .LVU1993
 6669 023e 65F34B13 		bfi	r3, r5, #5, #7
 6670 0242 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2767:src/keys.c    ****  }
 6671              		.loc 1 2767 4 is_stmt 1 view .LVU1994
2767:src/keys.c    ****  }
 6672              		.loc 1 2767 11 is_stmt 0 view .LVU1995
 6673 0246 3320     		movs	r0, #51
 6674 0248 51E7     		b	.L736
 6675              	.LVL571:
 6676              	.L727:
2720:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 6677              		.loc 1 2720 6 is_stmt 1 view .LVU1996
2720:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 6678              		.loc 1 2720 9 is_stmt 0 view .LVU1997
 6679 024a 1028     		cmp	r0, #16
 6680 024c 23D0     		beq	.L737
 6681              	.L661:
2729:src/keys.c    ****    reset_shift();
 6682              		.loc 1 2729 4 is_stmt 1 view .LVU1998
 6683              	.LVL572:
 6684              	.LBB644:
 435:src/keys.c    **** {
 6685              		.loc 1 435 12 view .LVU1999
 6686              	.LBB602:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6687              		.loc 1 437 2 view .LVU2000
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6688              		.loc 1 485 2 view .LVU2001
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6689              		.loc 1 485 5 is_stmt 0 view .LVU2002
 6690 024e 0521     		movs	r1, #5
 6691              	.LVL573:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6692              		.loc 1 485 5 view .LVU2003
 6693 0250 F0E6     		b	.L662
 6694              	.LVL574:
 6695              	.L734:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6696              		.loc 1 485 5 view .LVU2004
 6697              	.LBE602:
 6698              	.LBE644:
2686:src/keys.c    ****        /*
 6699              		.loc 1 2686 32 discriminator 1 view .LVU2005
 6700 0252 0128     		cmp	r0, #1
 6701 0254 DBD1     		bne	.L653
 6702              	.LBB645:
2695:src/keys.c    **** 	 OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
ARM GAS  /tmp/ccgiIQCZ.s 			page 206


 6703              		.loc 1 2695 8 is_stmt 1 view .LVU2006
2703:src/keys.c    ****        int i;
 6704              		.loc 1 2703 8 view .LVU2007
2703:src/keys.c    ****        int i;
 6705              		.loc 1 2703 26 is_stmt 0 view .LVU2008
 6706 0256 2846     		mov	r0, r5
 6707              	.LVL575:
2703:src/keys.c    ****        int i;
 6708              		.loc 1 2703 26 view .LVU2009
 6709 0258 FFF7FEFF 		bl	current_catalogue
 6710              	.LVL576:
2703:src/keys.c    ****        int i;
 6711              		.loc 1 2703 26 view .LVU2010
 6712 025c 0446     		mov	r4, r0
 6713              	.LVL577:
2704:src/keys.c    **** 
 6714              		.loc 1 2704 8 is_stmt 1 view .LVU2011
2706:src/keys.c    ****        if (isRARG(op))
 6715              		.loc 1 2706 8 view .LVU2012
 6716 025e 0020     		movs	r0, #0
 6717              	.LVL578:
2706:src/keys.c    ****        if (isRARG(op))
 6718              		.loc 1 2706 8 is_stmt 0 view .LVU2013
 6719 0260 FFF7FEFF 		bl	init_cat
 6720              	.LVL579:
2707:src/keys.c    **** 	 return op ^ 1;
 6721              		.loc 1 2707 8 is_stmt 1 view .LVU2014
2707:src/keys.c    **** 	 return op ^ 1;
 6722              		.loc 1 2707 11 is_stmt 0 view .LVU2015
 6723 0264 14F47043 		ands	r3, r4, #61440
 6724 0268 29D0     		beq	.L654
2707:src/keys.c    **** 	 return op ^ 1;
 6725              		.loc 1 2707 12 discriminator 1 view .LVU2016
 6726 026a B3F5704F 		cmp	r3, #61440
 6727 026e 26D0     		beq	.L654
2708:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 6728              		.loc 1 2708 3 is_stmt 1 view .LVU2017
2708:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 6729              		.loc 1 2708 13 is_stmt 0 view .LVU2018
 6730 0270 84F00100 		eor	r0, r4, #1
 6731 0274 60E7     		b	.L626
 6732              	.LVL580:
 6733              	.L730:
2708:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 6734              		.loc 1 2708 13 view .LVU2019
 6735              	.LBE645:
2655:src/keys.c    **** 	   goto search;
 6736              		.loc 1 2655 3 is_stmt 1 view .LVU2020
2655:src/keys.c    **** 	   goto search;
 6737              		.loc 1 2655 7 is_stmt 0 view .LVU2021
 6738 0276 3D7F     		ldrb	r5, [r7, #28]	@ zero_extendqisi2
 6739              	.LVL581:
2655:src/keys.c    **** 	   goto search;
 6740              		.loc 1 2655 7 view .LVU2022
 6741 0278 013D     		subs	r5, r5, #1
 6742 027a EDB2     		uxtb	r5, r5
2655:src/keys.c    **** 	   goto search;
ARM GAS  /tmp/ccgiIQCZ.s 			page 207


 6743              		.loc 1 2655 6 view .LVU2023
 6744 027c 3D77     		strb	r5, [r7, #28]
 6745 027e 002D     		cmp	r5, #0
 6746 0280 7FF4F3AE 		bne	.L644
 6747 0284 D9F80040 		ldr	r4, [r9]
 6748 0288 2AE7     		b	.L645
 6749              	.LVL582:
 6750              	.L732:
2672:src/keys.c    ****        goto set_pos;
 6751              		.loc 1 2672 3 is_stmt 1 view .LVU2024
 6752 028a 013D     		subs	r5, r5, #1
 6753              	.LVL583:
2673:src/keys.c    **** 
 6754              		.loc 1 2673 8 view .LVU2025
 6755 028c 1AE7     		b	.L647
 6756              	.LVL584:
 6757              	.L731:
2673:src/keys.c    **** 
 6758              		.loc 1 2673 8 is_stmt 0 view .LVU2026
 6759 028e FFF7FEFF 		bl	current_catalogue
 6760              	.LVL585:
2673:src/keys.c    **** 
 6761              		.loc 1 2673 8 view .LVU2027
 6762 0292 0446     		mov	r4, r0
 6763 0294 75E7     		b	.L637
 6764              	.LVL586:
 6765              	.L737:
2720:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 6766              		.loc 1 2720 19 discriminator 1 view .LVU2028
 6767 0296 BAF1130F 		cmp	r10, #19
 6768 029a D8D1     		bne	.L661
2721:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
 6769              		.loc 1 2721 8 is_stmt 1 view .LVU2029
 6770 029c 0020     		movs	r0, #0
 6771              	.LVL587:
2721:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
 6772              		.loc 1 2721 8 is_stmt 0 view .LVU2030
 6773 029e FFF7FEFF 		bl	init_cat
 6774              	.LVL588:
2722:src/keys.c    ****      }
 6775              		.loc 1 2722 8 is_stmt 1 view .LVU2031
2722:src/keys.c    ****      }
 6776              		.loc 1 2722 15 is_stmt 0 view .LVU2032
 6777 02a2 40F23D10 		movw	r0, #317
 6778 02a6 47E7     		b	.L626
 6779              	.L638:
 6780              	.LBB646:
2647:src/keys.c    **** 	 }
 6781              		.loc 1 2647 5 is_stmt 1 view .LVU2033
 6782              	.LBB629:
 6783              	.LBB630:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 6784              		.loc 1 717 5 is_stmt 0 view .LVU2034
 6785 02a8 C4F30723 		ubfx	r3, r4, #8, #8
 6786 02ac 012B     		cmp	r3, #1
 6787              	.LBE630:
 6788              	.LBE629:
ARM GAS  /tmp/ccgiIQCZ.s 			page 208


2647:src/keys.c    **** 	 }
 6789              		.loc 1 2647 12 view .LVU2035
 6790 02ae 2046     		mov	r0, r4
 6791              	.LVL589:
 6792              	.LBB632:
 6793              	.LBI629:
 716:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 6794              		.loc 1 716 12 is_stmt 1 view .LVU2036
 6795              	.LBB631:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 6796              		.loc 1 717 2 view .LVU2037
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 6797              		.loc 1 717 5 is_stmt 0 view .LVU2038
 6798 02b0 7FF442AF 		bne	.L626
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 6799              		.loc 1 717 5 view .LVU2039
 6800 02b4 FFF7FEFF 		bl	check_confirm.part.0
 6801              	.LVL590:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 6802              		.loc 1 717 5 view .LVU2040
 6803 02b8 3EE7     		b	.L626
 6804              	.LVL591:
 6805              	.L639:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 6806              		.loc 1 717 5 view .LVU2041
 6807              	.LBE631:
 6808              	.LBE632:
 6809              	.LBB633:
2640:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 6810              		.loc 1 2640 7 is_stmt 1 view .LVU2042
2640:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 6811              		.loc 1 2640 14 is_stmt 0 view .LVU2043
 6812 02ba 2046     		mov	r0, r4
 6813 02bc 3CE7     		b	.L626
 6814              	.LVL592:
 6815              	.L654:
2640:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 6816              		.loc 1 2640 14 view .LVU2044
 6817 02be 0C48     		ldr	r0, .L740+20
 6818              	.LBE633:
 6819              	.LBE646:
2618:src/keys.c    ****    int pos = State.catpos;
 6820              		.loc 1 2618 93 view .LVU2045
 6821 02c0 40F28522 		movw	r2, #645
 6822 02c4 0146     		mov	r1, r0
 6823 02c6 0023     		movs	r3, #0
 6824 02c8 01E0     		b	.L656
 6825              	.LVL593:
 6826              	.L739:
2618:src/keys.c    ****    int pos = State.catpos;
 6827              		.loc 1 2618 93 view .LVU2046
 6828 02ca 31F8022F 		ldrh	r2, [r1, #2]!
 6829              	.LVL594:
 6830              	.L656:
 6831              	.LBB647:
2710:src/keys.c    **** 	   return conv_mapping[i^1];
 6832              		.loc 1 2710 3 is_stmt 1 view .LVU2047
ARM GAS  /tmp/ccgiIQCZ.s 			page 209


2709:src/keys.c    **** 	 if (op == conv_mapping[i])
 6833              		.loc 1 2709 72 view .LVU2048
2710:src/keys.c    **** 	   return conv_mapping[i^1];
 6834              		.loc 1 2710 6 is_stmt 0 view .LVU2049
 6835 02ce A242     		cmp	r2, r4
 6836 02d0 1ED0     		beq	.L738
2709:src/keys.c    **** 	 if (op == conv_mapping[i])
 6837              		.loc 1 2709 72 discriminator 2 view .LVU2050
 6838 02d2 0133     		adds	r3, r3, #1
 6839              	.LVL595:
2709:src/keys.c    **** 	 if (op == conv_mapping[i])
 6840              		.loc 1 2709 20 is_stmt 1 discriminator 2 view .LVU2051
2709:src/keys.c    **** 	 if (op == conv_mapping[i])
 6841              		.loc 1 2709 8 is_stmt 0 discriminator 2 view .LVU2052
 6842 02d4 0C2B     		cmp	r3, #12
 6843 02d6 F8D1     		bne	.L739
 6844 02d8 2DE7     		b	.L724
 6845              	.L741:
 6846 02da 00BF     		.align	2
 6847              	.L740:
 6848 02dc 00000000 		.word	StateWhileOn
 6849 02e0 00000000 		.word	.LANCHOR8
 6850 02e4 00000000 		.word	.LANCHOR6
 6851 02e8 00000000 		.word	.LANCHOR15
 6852 02ec 00080800 		.word	526336
 6853 02f0 00000000 		.word	.LANCHOR14
 6854 02f4 00000000 		.word	main_ram
 6855 02f8 1F000000 		.word	StateWhileOn+31
 6856              	.LVL596:
 6857              	.L642:
2709:src/keys.c    **** 	 if (op == conv_mapping[i])
 6858              		.loc 1 2709 8 discriminator 2 view .LVU2053
 6859              	.LBE647:
 6860              	.LBB648:
 6861              	.LBB634:
2644:src/keys.c    **** 	 }
 6862              		.loc 1 2644 7 is_stmt 1 view .LVU2054
 6863              	.LBB626:
 6864              	.LBI626:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 6865              		.loc 1 552 13 view .LVU2055
 6866              	.LBB627:
 553:src/keys.c    **** 		return;
 6867              		.loc 1 553 2 view .LVU2056
 553:src/keys.c    **** 		return;
 6868              		.loc 1 553 6 is_stmt 0 view .LVU2057
 6869 02fc FFF7FEFF 		bl	is_bad_cmdline
 6870              	.LVL597:
 553:src/keys.c    **** 		return;
 6871              		.loc 1 553 5 view .LVU2058
 6872 0300 0028     		cmp	r0, #0
 6873 0302 7FF418AF 		bne	.L724
 6874 0306 2846     		mov	r0, r5
 6875 0308 FFF7FEFF 		bl	init_arg.part.0
 6876              	.LVL598:
 6877              	.LBE627:
 6878              	.LBE626:
ARM GAS  /tmp/ccgiIQCZ.s 			page 210


 6879              	.LBE634:
 6880              	.LBE648:
2651:src/keys.c    **** 
 6881              		.loc 1 2651 15 view .LVU2059
 6882 030c 3320     		movs	r0, #51
 6883 030e 13E7     		b	.L626
 6884              	.LVL599:
 6885              	.L738:
 6886              	.LBB649:
2711:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 6887              		.loc 1 2711 5 is_stmt 1 view .LVU2060
2711:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 6888              		.loc 1 2711 26 is_stmt 0 view .LVU2061
 6889 0310 83F00103 		eor	r3, r3, #1
 6890              	.LVL600:
2711:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 6891              		.loc 1 2711 24 view .LVU2062
 6892 0314 30F81300 		ldrh	r0, [r0, r3, lsl #1]
 6893 0318 0EE7     		b	.L626
 6894              	.LBE649:
 6895              		.cfi_endproc
 6896              	.LFE48:
 6898              		.section	.text.find_pos,"ax",%progbits
 6899              		.align	1
 6900              		.p2align 2,,3
 6901              		.global	find_pos
 6902              		.syntax unified
 6903              		.thumb
 6904              		.thumb_func
 6905              		.fpu fpv4-sp-d16
 6907              	find_pos:
 6908              	.LVL601:
 6909              	.LFB49:
2771:src/keys.c    **** 	int pos;
 6910              		.loc 1 2771 32 is_stmt 1 view -0
 6911              		.cfi_startproc
 6912              		@ args = 0, pretend = 0, frame = 16
 6913              		@ frame_needed = 0, uses_anonymous_args = 0
2772:src/keys.c    **** 	const int ctmax = current_catalogue_max();
 6914              		.loc 1 2772 2 view .LVU2064
2773:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 6915              		.loc 1 2773 2 view .LVU2065
 6916              	.LBB650:
 6917              	.LBI650:
2473:src/keys.c    **** 	// A quick table of catalogue sizes
 6918              		.loc 1 2473 5 view .LVU2066
 6919              	.LBB651:
2476:src/keys.c    **** 	{
 6920              		.loc 1 2476 2 view .LVU2067
2507:src/keys.c    **** #endif
 6921              		.loc 1 2507 2 view .LVU2068
 6922              	.LBE651:
 6923              	.LBE650:
2771:src/keys.c    **** 	int pos;
 6924              		.loc 1 2771 32 is_stmt 0 view .LVU2069
 6925 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 6926              		.cfi_def_cfa_offset 32
ARM GAS  /tmp/ccgiIQCZ.s 			page 211


 6927              		.cfi_offset 4, -32
 6928              		.cfi_offset 5, -28
 6929              		.cfi_offset 6, -24
 6930              		.cfi_offset 7, -20
 6931              		.cfi_offset 8, -16
 6932              		.cfi_offset 9, -12
 6933              		.cfi_offset 10, -8
 6934              		.cfi_offset 14, -4
 6935              	.LBB653:
 6936              	.LBB652:
2507:src/keys.c    **** #endif
 6937              		.loc 1 2507 31 view .LVU2070
 6938 0004 1E4B     		ldr	r3, .L759
2507:src/keys.c    **** #endif
 6939              		.loc 1 2507 24 view .LVU2071
 6940 0006 1F4A     		ldr	r2, .L759+4
2507:src/keys.c    **** #endif
 6941              		.loc 1 2507 31 view .LVU2072
 6942 0008 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2507:src/keys.c    **** #endif
 6943              		.loc 1 2507 24 view .LVU2073
 6944 000a 12F803A0 		ldrb	r10, [r2, r3]	@ zero_extendqisi2
 6945              	.LVL602:
2507:src/keys.c    **** #endif
 6946              		.loc 1 2507 24 view .LVU2074
 6947              	.LBE652:
 6948              	.LBE653:
2774:src/keys.c    **** 		char buf[16];
 6949              		.loc 1 2774 2 is_stmt 1 view .LVU2075
2774:src/keys.c    **** 		char buf[16];
 6950              		.loc 1 2774 16 view .LVU2076
2771:src/keys.c    **** 	int pos;
 6951              		.loc 1 2771 32 is_stmt 0 view .LVU2077
 6952 000e 84B0     		sub	sp, sp, #16
 6953              		.cfi_def_cfa_offset 48
2774:src/keys.c    **** 		char buf[16];
 6954              		.loc 1 2774 2 view .LVU2078
 6955 0010 BAF1000F 		cmp	r10, #0
 6956 0014 32D0     		beq	.L749
 6957 0016 8146     		mov	r9, r0
2774:src/keys.c    **** 		char buf[16];
 6958              		.loc 1 2774 11 view .LVU2079
 6959 0018 4FF00008 		mov	r8, #0
 6960 001c C0F10107 		rsb	r7, r0, #1
 6961              	.LVL603:
 6962              	.L748:
 6963              	.LBB654:
2775:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
 6964              		.loc 1 2775 3 is_stmt 1 view .LVU2080
2776:src/keys.c    **** 		int i;
 6965              		.loc 1 2776 3 view .LVU2081
2776:src/keys.c    **** 		int i;
 6966              		.loc 1 2776 21 is_stmt 0 view .LVU2082
 6967 0020 4046     		mov	r0, r8
 6968 0022 FFF7FEFF 		bl	current_catalogue
 6969              	.LVL604:
 6970 0026 6946     		mov	r1, sp
ARM GAS  /tmp/ccgiIQCZ.s 			page 212


 6971 0028 FFF7FEFF 		bl	catcmd
 6972              	.LVL605:
 6973 002c 0646     		mov	r6, r0
 6974              	.LVL606:
2777:src/keys.c    **** 
 6975              		.loc 1 2777 3 is_stmt 1 view .LVU2083
2779:src/keys.c    **** 			cmd++;
 6976              		.loc 1 2779 3 view .LVU2084
2780:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 6977              		.loc 1 2780 4 view .LVU2085
2779:src/keys.c    **** 			cmd++;
 6978              		.loc 1 2779 7 is_stmt 0 view .LVU2086
 6979 002e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 6980              	.LVL607:
2779:src/keys.c    **** 			cmd++;
 6981              		.loc 1 2779 6 view .LVU2087
 6982 0030 1428     		cmp	r0, #20
 6983 0032 04BF     		itt	eq
 6984 0034 7078     		ldrbeq	r0, [r6, #1]	@ zero_extendqisi2
2780:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 6985              		.loc 1 2780 7 view .LVU2088
 6986 0036 0136     		addeq	r6, r6, #1
 6987              	.LVL608:
2781:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6988              		.loc 1 2781 3 is_stmt 1 view .LVU2089
2781:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6989              		.loc 1 2781 13 view .LVU2090
2781:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6990              		.loc 1 2781 3 is_stmt 0 view .LVU2091
 6991 0038 A8B1     		cbz	r0, .L750
 6992 003a 09F1FF33 		add	r3, r9, #-1
 6993 003e 04E0     		b	.L747
 6994              	.LVL609:
 6995              	.L758:
 6996              	.LBB655:
2786:src/keys.c    **** 				break;
 6997              		.loc 1 2786 12 view .LVU2092
 6998 0040 12DB     		blt	.L745
 6999              	.LBE655:
2781:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 7000              		.loc 1 2781 16 discriminator 2 view .LVU2093
 7001 0042 16F8010F 		ldrb	r0, [r6, #1]!	@ zero_extendqisi2
 7002              	.LVL610:
2781:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 7003              		.loc 1 2781 16 discriminator 2 view .LVU2094
 7004 0046 3C44     		add	r4, r4, r7
2781:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 7005              		.loc 1 2781 3 discriminator 2 view .LVU2095
 7006 0048 B0B1     		cbz	r0, .L757
 7007              	.LVL611:
 7008              	.L747:
 7009              	.LBB656:
2782:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 7010              		.loc 1 2782 4 is_stmt 1 view .LVU2096
 7011 004a 5C1C     		adds	r4, r3, #1
2782:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 7012              		.loc 1 2782 18 is_stmt 0 view .LVU2097
ARM GAS  /tmp/ccgiIQCZ.s 			page 213


 7013 004c FFF7FEFF 		bl	remap_chars
 7014              	.LVL612:
 7015 0050 0546     		mov	r5, r0
2783:src/keys.c    **** 			if (c > cl)
 7016              		.loc 1 2783 19 view .LVU2098
 7017 0052 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 7018              	.LVL613:
2783:src/keys.c    **** 			if (c > cl)
 7019              		.loc 1 2783 4 is_stmt 1 view .LVU2099
2783:src/keys.c    **** 			if (c > cl)
 7020              		.loc 1 2783 19 is_stmt 0 view .LVU2100
 7021 0054 FFF7FEFF 		bl	remap_chars
 7022              	.LVL614:
2786:src/keys.c    **** 				break;
 7023              		.loc 1 2786 9 is_stmt 1 view .LVU2101
 7024              	.LBE656:
2781:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 7025              		.loc 1 2781 29 view .LVU2102
2781:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 7026              		.loc 1 2781 13 view .LVU2103
 7027              	.LBB657:
2784:src/keys.c    **** 				return pos;
 7028              		.loc 1 2784 4 view .LVU2104
2784:src/keys.c    **** 				return pos;
 7029              		.loc 1 2784 7 is_stmt 0 view .LVU2105
 7030 0058 8542     		cmp	r5, r0
 7031 005a 2346     		mov	r3, r4
 7032 005c F0DD     		ble	.L758
 7033              	.LVL615:
 7034              	.L742:
2784:src/keys.c    **** 				return pos;
 7035              		.loc 1 2784 7 view .LVU2106
 7036              	.LBE657:
 7037              	.LBE654:
2793:src/keys.c    **** 
 7038              		.loc 1 2793 1 view .LVU2107
 7039 005e 4046     		mov	r0, r8
 7040 0060 04B0     		add	sp, sp, #16
 7041              		.cfi_remember_state
 7042              		.cfi_def_cfa_offset 32
 7043              		@ sp needed
 7044 0062 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 7045              	.LVL616:
 7046              	.L750:
 7047              		.cfi_restore_state
 7048              	.LBB658:
2781:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 7049              		.loc 1 2781 3 view .LVU2108
 7050 0066 4C46     		mov	r4, r9
 7051              	.LVL617:
 7052              	.L745:
2789:src/keys.c    **** 			return pos;
 7053              		.loc 1 2789 3 is_stmt 1 view .LVU2109
2789:src/keys.c    **** 			return pos;
 7054              		.loc 1 2789 6 is_stmt 0 view .LVU2110
 7055 0068 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 7056 006a 002B     		cmp	r3, #0
ARM GAS  /tmp/ccgiIQCZ.s 			page 214


 7057 006c F7D0     		beq	.L742
 7058              	.LBE658:
2774:src/keys.c    **** 		char buf[16];
 7059              		.loc 1 2774 29 is_stmt 1 view .LVU2111
 7060 006e 08F10108 		add	r8, r8, #1
 7061              	.LVL618:
2774:src/keys.c    **** 		char buf[16];
 7062              		.loc 1 2774 16 view .LVU2112
2774:src/keys.c    **** 		char buf[16];
 7063              		.loc 1 2774 2 is_stmt 0 view .LVU2113
 7064 0072 D045     		cmp	r8, r10
 7065 0074 D4D1     		bne	.L748
 7066 0076 F2E7     		b	.L742
 7067              	.LVL619:
 7068              	.L757:
2774:src/keys.c    **** 		char buf[16];
 7069              		.loc 1 2774 2 view .LVU2114
 7070 0078 4C44     		add	r4, r4, r9
 7071 007a F5E7     		b	.L745
 7072              	.LVL620:
 7073              	.L749:
2774:src/keys.c    **** 		char buf[16];
 7074              		.loc 1 2774 11 view .LVU2115
 7075 007c D046     		mov	r8, r10
 7076 007e EEE7     		b	.L742
 7077              	.L760:
 7078              		.align	2
 7079              	.L759:
 7080 0080 00000000 		.word	StateWhileOn
 7081 0084 00000000 		.word	.LANCHOR8
 7082              		.cfi_endproc
 7083              	.LFE49:
 7085              		.section	.text.get_alpha_state,"ax",%progbits
 7086              		.align	1
 7087              		.p2align 2,,3
 7088              		.global	get_alpha_state
 7089              		.syntax unified
 7090              		.thumb
 7091              		.thumb_func
 7092              		.fpu fpv4-sp-d16
 7094              	get_alpha_state:
 7095              	.LFB61:
3118:src/keys.c    **** 
3119:src/keys.c    **** 
3120:src/keys.c    **** static int process_registerlist(const keycode c) {
3121:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
3122:src/keys.c    **** 	enum shifts shift = reset_shift();
3123:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
3124:src/keys.c    **** 	const int g_max = global_regs();
3125:src/keys.c    **** 
3126:src/keys.c    **** 	if (n == LOCAL_REG_BASE) {	// '.'
3127:src/keys.c    **** 		if (local_regs())
3128:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
3129:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
3130:src/keys.c    **** 		goto reset_window;
3131:src/keys.c    **** 	}
3132:src/keys.c    **** 	else if (n <= 9) {
ARM GAS  /tmp/ccgiIQCZ.s 			page 215


3133:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
3134:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
3135:src/keys.c    **** 			dv = n;
3136:src/keys.c    **** 		State2.digval = dv;
3137:src/keys.c    **** 		goto reset_window;
3138:src/keys.c    **** 	}
3139:src/keys.c    **** 	else if ((shift == SHIFT_F || shift == SHIFT_G) && c == K21) {  // <( )>
3140:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
3141:src/keys.c    **** 		set_smode(SDISP_SHOW);
3142:src/keys.c    **** 	}
3143:src/keys.c    **** 	else if (n != NO_REG) {
3144:src/keys.c    **** 		State2.digval = n;
3145:src/keys.c    **** 		goto reset_window;
3146:src/keys.c    **** 	}
3147:src/keys.c    **** 
3148:src/keys.c    **** 	switch (c) {
3149:src/keys.c    **** 	case K_DOWN:
3150:src/keys.c    **** 		if (State2.digval > 0) {
3151:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
3152:src/keys.c    **** 				State2.digval = global_regs();
3153:src/keys.c    **** 			--State2.digval;
3154:src/keys.c    **** 		}
3155:src/keys.c    **** 		else
3156:src/keys.c    **** 			State2.digval = max - 1;
3157:src/keys.c    **** 		goto reset_window;
3158:src/keys.c    **** 
3159:src/keys.c    **** 	case K_UP:
3160:src/keys.c    **** 		if (State2.digval < max - 1) {
3161:src/keys.c    **** 			State2.digval++;
3162:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
3163:src/keys.c    **** 				State2.digval = regX_idx;
3164:src/keys.c    **** 		}
3165:src/keys.c    **** 		else	
3166:src/keys.c    **** 			State2.digval = 0;
3167:src/keys.c    **** 		goto reset_window;
3168:src/keys.c    **** 
3169:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
3170:src/keys.c    **** 	case K04:
3171:src/keys.c    **** 		State2.digval2 = ! State2.digval2 && ! State2.local;
3172:src/keys.c    **** 		goto reset_window;
3173:src/keys.c    **** #endif
3174:src/keys.c    **** 
3175:src/keys.c    **** 	case K24:			
3176:src/keys.c    **** 	//case K60:
3177:src/keys.c    **** 		if (State2.disp_temp)
3178:src/keys.c    **** 			return STATE_UNFINISHED;
3179:src/keys.c    **** 		break;		// Exit doing nothing
3180:src/keys.c    **** 
3181:src/keys.c    **** 	case K20:		// ENTER
3182:src/keys.c    **** 		if (shift == SHIFT_F) {
3183:src/keys.c    **** 			State2.disp_as_alpha = 1;
3184:src/keys.c    **** 			goto reset_window;
3185:src/keys.c    **** 		}
3186:src/keys.c    **** 	case K11:		// RCL
3187:src/keys.c    **** 		if ( shift == SHIFT_N ) {
3188:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
3189:src/keys.c    **** 			n = RARG( State2.digval2 ? RARG_FLRCL : RARG_RCL, State2.digval );
ARM GAS  /tmp/ccgiIQCZ.s 			page 216


3190:src/keys.c    **** #else
3191:src/keys.c    **** 			n = RARG( RARG_RCL, State2.digval );
3192:src/keys.c    **** #endif
3193:src/keys.c    **** 			State2.registerlist = 0;
3194:src/keys.c    **** 			State2.digval = 0;
3195:src/keys.c    **** 			State2.digval2 = 0;
3196:src/keys.c    **** 			return n;
3197:src/keys.c    **** 		}
3198:src/keys.c    **** 	default:
3199:src/keys.c    **** 		return STATE_UNFINISHED;
3200:src/keys.c    **** 	}
3201:src/keys.c    **** 	State2.registerlist = 0;
3202:src/keys.c    **** 	State2.digval = 0;
3203:src/keys.c    **** 	State2.digval2 = 0;
3204:src/keys.c    **** reset_window:
3205:src/keys.c    **** 	State2.window = 0;
3206:src/keys.c    **** 	return STATE_UNFINISHED;
3207:src/keys.c    **** }
3208:src/keys.c    **** 
3209:src/keys.c    **** 
3210:src/keys.c    **** static int process(const int c) {
3211:src/keys.c    ****   const enum shifts shift = cur_shift();
3212:src/keys.c    ****   enum catalogues cat;
3213:src/keys.c    **** 
3214:src/keys.c    ****   if (Running || Pause) {
3215:src/keys.c    ****     /*
3216:src/keys.c    ****      *  Abort a running program with R/S or EXIT
3217:src/keys.c    ****      */
3218:src/keys.c    ****     if (c == K60 || c == K63) {
3219:src/keys.c    ****       if (Pause && isXROM(state_pc()))
3220:src/keys.c    **** 	set_pc(0);
3221:src/keys.c    ****       Pause = 0;
3222:src/keys.c    ****       xeq_xrom();
3223:src/keys.c    ****       set_running_off();
3224:src/keys.c    ****       DispMsg = "Stopped";
3225:src/keys.c    ****       State2.disp_freeze = 0;
3226:src/keys.c    ****       return STATE_UNFINISHED;
3227:src/keys.c    ****     }
3228:src/keys.c    ****     if ( c != K_HEARTBEAT ) {
3229:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
3230:src/keys.c    ****       Pause = 0;			// leave PSE statement
3231:src/keys.c    ****       GoFast = 1;
3232:src/keys.c    ****     }
3233:src/keys.c    ****     // continue execution if really running, else ignore (PSE)
3234:src/keys.c    ****     return STATE_RUNNING;
3235:src/keys.c    ****   }
3236:src/keys.c    **** 
3237:src/keys.c    ****   /* Check for ON in the unshifted state -- this is a reset sequence
3238:src/keys.c    ****    * common across all modes.  Shifted modes need to check this themselves
3239:src/keys.c    ****    * if required.
3240:src/keys.c    ****    */
3241:src/keys.c    **** #ifdef DM42
3242:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue && ! State2.arrow && ! State2.alphas)
3243:src/keys.c    **** #else
3244:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue)
3245:src/keys.c    **** #endif
3246:src/keys.c    ****     {
ARM GAS  /tmp/ccgiIQCZ.s 			page 217


3247:src/keys.c    **** #ifdef INCLUDE_C_LOCK
3248:src/keys.c    ****       if (C_LOCKED) {
3249:src/keys.c    **** 	stack_restore();
3250:src/keys.c    **** 	CLEAR_REAL;
3251:src/keys.c    **** 	CLEAR_IMAG;
3252:src/keys.c    ****       }
3253:src/keys.c    **** #endif
3254:src/keys.c    ****       soft_init_state();
3255:src/keys.c    ****       return STATE_UNFINISHED;
3256:src/keys.c    ****     }
3257:src/keys.c    **** 
3258:src/keys.c    **** #ifndef CONSOLE
3259:src/keys.c    **** 	if (c == K63 && JustStopped) {
3260:src/keys.c    **** 		// Avoid an accidental restart with R/S
3261:src/keys.c    **** 		JustStopped = 0;
3262:src/keys.c    **** 		return STATE_IGNORE;
3263:src/keys.c    **** 	}
3264:src/keys.c    **** #endif
3265:src/keys.c    **** 	/*  Handle the keyboard timeout for catalogue navigation
3266:src/keys.c    **** 	 *  Must be done early in the process to capture the shifts correctly
3267:src/keys.c    **** 	 */
3268:src/keys.c    **** 	if (State2.catalogue && Keyticks > 30)
3269:src/keys.c    **** 		CmdLineLength = 0;
3270:src/keys.c    **** 	/*
3271:src/keys.c    **** 	 *  Process the various cases
3272:src/keys.c    **** 	 *  The handlers in this block here do not handle shifts at all or do it themselves
3273:src/keys.c    **** 	 */
3274:src/keys.c    **** 	if (State2.confirm)
3275:src/keys.c    **** 		return process_confirm((const keycode)c);
3276:src/keys.c    **** 
3277:src/keys.c    **** 	if (State2.rarg)
3278:src/keys.c    **** 		return process_arg((const keycode)c);
3279:src/keys.c    **** 
3280:src/keys.c    **** 	if (State2.gtodot)
3281:src/keys.c    **** 		return process_gtodot((const keycode)c);
3282:src/keys.c    **** 
3283:src/keys.c    **** 	if (State2.hyp)
3284:src/keys.c    **** 		return process_hyp((const keycode)c);
3285:src/keys.c    **** 
3286:src/keys.c    **** 	if (State2.test != TST_NONE)
3287:src/keys.c    **** 		return process_test((const keycode)c);
3288:src/keys.c    **** 
3289:src/keys.c    **** 	if (State2.status)
3290:src/keys.c    **** 		return process_status((const keycode)c);
3291:src/keys.c    **** 
3292:src/keys.c    **** 	/*
3293:src/keys.c    **** 	 *  Process shift keys directly
3294:src/keys.c    **** 	 */
3295:src/keys.c    **** 	if (c == K_F) {
3296:src/keys.c    **** 		toggle_shift(SHIFT_F);
3297:src/keys.c    **** 		return STATE_UNFINISHED;
3298:src/keys.c    **** 	}
3299:src/keys.c    **** 	if (c == K_G) {
3300:src/keys.c    **** 		toggle_shift(SHIFT_G);
3301:src/keys.c    **** 		return STATE_UNFINISHED;
3302:src/keys.c    **** 	}
3303:src/keys.c    **** 	if (c == K_H) {
ARM GAS  /tmp/ccgiIQCZ.s 			page 218


3304:src/keys.c    **** 		toggle_shift(SHIFT_H);
3305:src/keys.c    **** 		State2.arrow = 0;
3306:src/keys.c    **** 		return STATE_UNFINISHED;
3307:src/keys.c    **** 	}
3308:src/keys.c    **** 	/*
3309:src/keys.c    **** 	 *  The handlers in this block need to call reset_shift somewhere
3310:src/keys.c    **** 	 */
3311:src/keys.c    **** 	if (State2.arrow)
3312:src/keys.c    **** 		return process_arrow((const keycode)c);
3313:src/keys.c    **** 
3314:src/keys.c    **** 	/*
3315:src/keys.c    **** 	 * Here the keys are mapped to catalogues
3316:src/keys.c    **** 	 * The position of this code decides where catalogue switching
3317:src/keys.c    **** 	 * works and were not
3318:src/keys.c    **** 	 */
3319:src/keys.c    **** 	cat = keycode_to_cat((keycode)c, shift);
3320:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
3321:src/keys.c    **** 		if (is_bad_cmdline())
3322:src/keys.c    **** 			return STATE_UNFINISHED;
3323:src/keys.c    **** 		init_cat( CATALOGUE_NONE );
3324:src/keys.c    **** 		init_cat( cat );
3325:src/keys.c    **** 		return STATE_UNFINISHED;
3326:src/keys.c    **** 	}
3327:src/keys.c    **** 
3328:src/keys.c    **** 	/*
3329:src/keys.c    **** 	 *  More handlers...
3330:src/keys.c    **** 	 */
3331:src/keys.c    **** 	if (State2.multi)
3332:src/keys.c    **** 		return process_multi((const keycode)c);
3333:src/keys.c    **** 
3334:src/keys.c    **** 	if (State2.labellist)
3335:src/keys.c    **** 		return process_labellist((const keycode)c);
3336:src/keys.c    **** 
3337:src/keys.c    **** 	if (State2.registerlist)
3338:src/keys.c    **** 		return process_registerlist((const keycode)c);
3339:src/keys.c    **** 
3340:src/keys.c    **** 	if (State2.catalogue)
3341:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
3342:src/keys.c    **** 
3343:src/keys.c    **** 	if (State2.alphas) {
3344:src/keys.c    **** #ifndef INFRARED
3345:src/keys.c    **** 		return process_alpha((const keycode)c);
3346:src/keys.c    **** #else
3347:src/keys.c    **** 		int i = process_alpha((const keycode)c);
3348:src/keys.c    **** 		if (! State2.alphas && get_user_flag(T_FLAG)) {
3349:src/keys.c    **** 			print_tab(0);
3350:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
3351:src/keys.c    **** 		}
3352:src/keys.c    **** 		return i;
3353:src/keys.c    **** #endif
3354:src/keys.c    **** 	}
3355:src/keys.c    **** #ifdef INCLUDE_C_LOCK
3356:src/keys.c    **** 	if (C_LOCKED) {
3357:src/keys.c    **** 		return process_c_lock ((const keycode)c);
3358:src/keys.c    **** 	}
3359:src/keys.c    **** #endif
3360:src/keys.c    **** 	if (State2.cmplx) {
ARM GAS  /tmp/ccgiIQCZ.s 			page 219


3361:src/keys.c    **** 		return process_cmplx((const keycode)c);
3362:src/keys.c    **** 	} else {
3363:src/keys.c    **** 		if (shift == SHIFT_F || shift == SHIFT_G)
3364:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
3365:src/keys.c    **** 		if (shift == SHIFT_H)
3366:src/keys.c    **** 			return process_h_shifted((const keycode)c);
3367:src/keys.c    **** 		return process_normal((const keycode)c);
3368:src/keys.c    **** 	}
3369:src/keys.c    **** }
3370:src/keys.c    **** 
3371:src/keys.c    ****  unsigned int get_alpha_state ( void ) {
 7096              		.loc 1 3371 40 is_stmt 1 view -0
 7097              		.cfi_startproc
 7098              		@ args = 0, pretend = 0, frame = 0
 7099              		@ frame_needed = 0, uses_anonymous_args = 0
 7100              		@ link register save eliminated.
3372:src/keys.c    ****    return (State2.alphas || State2.confirm || State2.status || State2.labellist
 7101              		.loc 1 3372 4 view .LVU2117
 7102              		.loc 1 3372 53 is_stmt 0 view .LVU2118
 7103 0000 074B     		ldr	r3, .L766
 7104              		.loc 1 3372 44 view .LVU2119
 7105 0002 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 7106 0004 1AB9     		cbnz	r2, .L764
3373:src/keys.c    **** 	   || State2.rarg || State2.registerlist || State2.multi 
3374:src/keys.c    **** 	   || State2.gtodot || State2.catalogue || (State2.test != TST_NONE));
 7107              		.loc 1 3374 5 discriminator 2 view .LVU2120
 7108 0006 5969     		ldr	r1, [r3, #20]
 7109 0008 064A     		ldr	r2, .L766+4
 7110 000a 0A40     		ands	r2, r2, r1
 7111 000c 0AB1     		cbz	r2, .L765
 7112              	.L764:
 7113 000e 0120     		movs	r0, #1
3375:src/keys.c    ****  }
 7114              		.loc 1 3375 2 view .LVU2121
 7115 0010 7047     		bx	lr
 7116              	.L765:
3374:src/keys.c    ****  }
 7117              		.loc 1 3374 42 discriminator 3 view .LVU2122
 7118 0012 D889     		ldrh	r0, [r3, #14]
 7119 0014 B0F5E060 		subs	r0, r0, #1792
 7120 0018 18BF     		it	ne
 7121 001a 0120     		movne	r0, #1
 7122 001c 7047     		bx	lr
 7123              	.L767:
 7124 001e 00BF     		.align	2
 7125              	.L766:
 7126 0020 00000000 		.word	StateWhileOn
 7127 0024 0709280C 		.word	203950343
 7128              		.cfi_endproc
 7129              	.LFE61:
 7131              		.section	.rodata.process_keycode.str1.4,"aMS",%progbits,1
 7132              		.align	2
 7133              	.LC0:
 7134 0000 52554E00 		.ascii	"RUN\000"
 7135              		.align	2
 7136              	.LC1:
 7137 0004 4E554C4C 		.ascii	"NULL\000"
ARM GAS  /tmp/ccgiIQCZ.s 			page 220


 7137      00
 7138 0009 000000   		.align	2
 7139              	.LC2:
 7140 000c 53746F70 		.ascii	"Stopped\000"
 7140      70656400 
 7141              		.section	.text.process_keycode,"ax",%progbits
 7142              		.align	1
 7143              		.p2align 2,,3
 7144              		.global	process_keycode
 7145              		.syntax unified
 7146              		.thumb
 7147              		.thumb_func
 7148              		.fpu fpv4-sp-d16
 7150              	process_keycode:
 7151              	.LVL621:
 7152              	.LFB63:
3376:src/keys.c    **** 
3377:src/keys.c    ****  void process_keycode_with_shift ( struct _ndmap remapped ) {
3378:src/keys.c    ****    if (remapped.key_34s == K_NOP) {
3379:src/keys.c    ****      WasDataEntry = 0; // makes sure display is updated properly with status messages
3380:src/keys.c    ****      return;
3381:src/keys.c    ****    }
3382:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
3383:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
3384:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
3385:src/keys.c    ****        // Was error just wait for confirmation
3386:src/keys.c    ****        wait_for_key_press();
3387:src/keys.c    ****      }
3388:src/keys.c    ****      start_buzzer_freq(8800); sys_delay(10); stop_buzzer();// End click
3389:src/keys.c    ****      return;
3390:src/keys.c    ****    }
3391:src/keys.c    ****    if (remapped.key_34s == K_OP) {
3392:src/keys.c    ****      nd_opcode = remapped.shift;
3393:src/keys.c    ****      set_shift(SHIFT_N);
3394:src/keys.c    ****    }
3395:src/keys.c    ****    else if (remapped.shift >= 0) set_shift ( remapped.shift );
3396:src/keys.c    ****    process_keycode ( remapped.key_34s );
3397:src/keys.c    ****  }
3398:src/keys.c    ****  
3399:src/keys.c    **** /*
3400:src/keys.c    ****  *  Fed with key codes by the event loop
3401:src/keys.c    ****  */
3402:src/keys.c    **** void process_keycode(int c)
3403:src/keys.c    **** {
 7153              		.loc 1 3403 1 is_stmt 1 view -0
 7154              		.cfi_startproc
 7155              		@ args = 0, pretend = 0, frame = 8
 7156              		@ frame_needed = 0, uses_anonymous_args = 0
3404:src/keys.c    ****   static int was_paused;
 7157              		.loc 1 3404 3 view .LVU2124
3405:src/keys.c    ****   int cmdline_empty = 0;
 7158              		.loc 1 3405 3 view .LVU2125
3406:src/keys.c    ****   if (was_paused && Pause == 0)
 7159              		.loc 1 3406 3 view .LVU2126
3403:src/keys.c    ****   static int was_paused;
 7160              		.loc 1 3403 1 is_stmt 0 view .LVU2127
 7161 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
ARM GAS  /tmp/ccgiIQCZ.s 			page 221


 7162              		.cfi_def_cfa_offset 36
 7163              		.cfi_offset 4, -36
 7164              		.cfi_offset 5, -32
 7165              		.cfi_offset 6, -28
 7166              		.cfi_offset 7, -24
 7167              		.cfi_offset 8, -20
 7168              		.cfi_offset 9, -16
 7169              		.cfi_offset 10, -12
 7170              		.cfi_offset 11, -8
 7171              		.cfi_offset 14, -4
 7172              		.loc 1 3406 7 view .LVU2128
 7173 0004 B84D     		ldr	r5, .L1444
 7174              		.loc 1 3406 27 view .LVU2129
 7175 0006 B94F     		ldr	r7, .L1444+4
 7176              		.loc 1 3406 6 view .LVU2130
 7177 0008 2B68     		ldr	r3, [r5]
3403:src/keys.c    ****   static int was_paused;
 7178              		.loc 1 3403 1 view .LVU2131
 7179 000a 83B0     		sub	sp, sp, #12
 7180              		.cfi_def_cfa_offset 48
3403:src/keys.c    ****   static int was_paused;
 7181              		.loc 1 3403 1 view .LVU2132
 7182 000c 0446     		mov	r4, r0
 7183              		.loc 1 3406 6 view .LVU2133
 7184 000e 1BB1     		cbz	r3, .L769
 7185              		.loc 1 3406 27 discriminator 1 view .LVU2134
 7186 0010 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7187              		.loc 1 3406 18 discriminator 1 view .LVU2135
 7188 0012 002B     		cmp	r3, #0
 7189 0014 00F0C581 		beq	.L1351
 7190              	.LVL622:
 7191              	.L769:
3407:src/keys.c    ****     {
3408:src/keys.c    ****     /*
3409:src/keys.c    ****      *  Continue XROM execution after a pause
3410:src/keys.c    ****      */
3411:src/keys.c    ****       xeq_xrom();
3412:src/keys.c    ****     }
3413:src/keys.c    ****   was_paused = Pause;
 7192              		.loc 1 3413 3 is_stmt 1 view .LVU2136
 7193              		.loc 1 3413 14 is_stmt 0 view .LVU2137
 7194 0018 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7195 001a 2B60     		str	r3, [r5]
3414:src/keys.c    ****   if (c == K_NOP)
 7196              		.loc 1 3414 3 is_stmt 1 view .LVU2138
 7197              		.loc 1 3414 6 is_stmt 0 view .LVU2139
 7198 001c 2E2C     		cmp	r4, #46
 7199 001e 00F08181 		beq	.L1352
3415:src/keys.c    ****     {
3416:src/keys.c    ****       OpCode = 0;
3417:src/keys.c    ****     }
3418:src/keys.c    ****   else if (c == K_HEARTBEAT)
 7200              		.loc 1 3418 8 is_stmt 1 view .LVU2140
 7201              		.loc 1 3418 11 is_stmt 0 view .LVU2141
 7202 0022 622C     		cmp	r4, #98
 7203 0024 72D0     		beq	.L1353
3419:src/keys.c    ****     {
ARM GAS  /tmp/ccgiIQCZ.s 			page 222


3420:src/keys.c    ****       /*
3421:src/keys.c    ****        *  Heartbeat processing goes here.
3422:src/keys.c    ****        *  This is totally thread safe!
3423:src/keys.c    ****        */
3424:src/keys.c    ****       if (Keyticks >= 2) {
3425:src/keys.c    **** 	/*
3426:src/keys.c    **** 	 *  Some time has passed after last key press
3427:src/keys.c    **** 	 */
3428:src/keys.c    **** 	if (OpCode != 0) {
3429:src/keys.c    **** 	  /*
3430:src/keys.c    **** 	   *  Handle command display and NULL here
3431:src/keys.c    **** 	   */
3432:src/keys.c    **** 	  if (OpCodeDisplayPending) {
3433:src/keys.c    **** 	    /*
3434:src/keys.c    **** 	     *  Show command to the user
3435:src/keys.c    **** 	     */
3436:src/keys.c    **** 	    OpCodeDisplayPending = 0;
3437:src/keys.c    **** 	    if (OpCode == (OP_NIL | OP_RS)) {
3438:src/keys.c    **** 	      DispMsg = "RUN";
3439:src/keys.c    **** 	    }
3440:src/keys.c    **** 	    else {
3441:src/keys.c    **** 	      scopy_char(TraceBuffer, prt(OpCode, TraceBuffer), '\0');
3442:src/keys.c    **** 	      DispMsg = TraceBuffer;
3443:src/keys.c    **** 	    }
3444:src/keys.c    **** 	    display();
3445:src/keys.c    **** 	    ShowRPN = 1;	// Off because of DispMsg setting
3446:src/keys.c    **** 	  }
3447:src/keys.c    **** 	  else if (Keyticks > 12) {
3448:src/keys.c    **** 	    /*
3449:src/keys.c    **** 	     *  Key is too long held down
3450:src/keys.c    **** 	     */
3451:src/keys.c    **** 	    OpCode = 0;
3452:src/keys.c    **** 	    message("NULL", CNULL);
3453:src/keys.c    **** 	    // Force display update on key-up
3454:src/keys.c    **** 	    State2.disp_temp = 0;
3455:src/keys.c    **** 	  }
3456:src/keys.c    **** 	}
3457:src/keys.c    **** 	if (Keyticks > 12 && shift_down() != SHIFT_N) {
3458:src/keys.c    **** 	  // Rely on the held shift key instead of the toggle
3459:src/keys.c    **** 	  State2.shifts = SHIFT_N;
3460:src/keys.c    **** 	}
3461:src/keys.c    ****       }
3462:src/keys.c    **** 
3463:src/keys.c    ****       /*
3464:src/keys.c    ****        *  Serve the watchdog
3465:src/keys.c    ****        */
3466:src/keys.c    ****       watchdog();
3467:src/keys.c    **** 
3468:src/keys.c    **** #ifndef CONSOLE
3469:src/keys.c    ****       /*
3470:src/keys.c    ****        *  If buffer is empty re-allow R/S to start a program
3471:src/keys.c    ****        */
3472:src/keys.c    ****       if (JustStopped && !is_key_pressed()) {
3473:src/keys.c    **** 	JustStopped = 0;
3474:src/keys.c    ****       }
3475:src/keys.c    **** #endif
3476:src/keys.c    **** 
ARM GAS  /tmp/ccgiIQCZ.s 			page 223


3477:src/keys.c    ****       /*
3478:src/keys.c    ****        *  Do nothing if not running a program
3479:src/keys.c    ****        */
3480:src/keys.c    ****       if (!Running && ! Pause)
3481:src/keys.c    **** 	return;
3482:src/keys.c    ****     }
3483:src/keys.c    ****   else {
3484:src/keys.c    ****     /*
3485:src/keys.c    ****      *  Not the heartbeat - prepare for execution of any commands
3486:src/keys.c    ****      */
3487:src/keys.c    ****     xeq_init_contexts();
 7204              		.loc 1 3487 5 is_stmt 1 view .LVU2142
3488:src/keys.c    ****     State2.wascomplex = 0;
 7205              		.loc 1 3488 23 is_stmt 0 view .LVU2143
 7206 0026 DFF8E482 		ldr	r8, .L1444+36
3487:src/keys.c    ****     State2.wascomplex = 0;
 7207              		.loc 1 3487 5 view .LVU2144
 7208 002a FFF7FEFF 		bl	xeq_init_contexts
 7209              	.LVL623:
 7210              		.loc 1 3488 5 is_stmt 1 view .LVU2145
 7211              		.loc 1 3488 23 is_stmt 0 view .LVU2146
 7212 002e 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
3489:src/keys.c    **** 
3490:src/keys.c    ****     if (is_dot(RPN)) {
 7213              		.loc 1 3490 9 view .LVU2147
 7214 0032 8D20     		movs	r0, #141
3488:src/keys.c    **** 
 7215              		.loc 1 3488 23 view .LVU2148
 7216 0034 6FF38713 		bfc	r3, #6, #2
 7217 0038 88F81430 		strb	r3, [r8, #20]
 7218              		.loc 1 3490 5 is_stmt 1 view .LVU2149
 7219              		.loc 1 3490 9 is_stmt 0 view .LVU2150
 7220 003c FFF7FEFF 		bl	is_dot
 7221              	.LVL624:
 7222              		.loc 1 3490 8 view .LVU2151
 7223 0040 0028     		cmp	r0, #0
 7224 0042 40F05A82 		bne	.L1354
 7225              	.L787:
3491:src/keys.c    ****       /*
3492:src/keys.c    ****        * Turn off the RPN annunciator as a visual feedback
3493:src/keys.c    ****        */
3494:src/keys.c    ****       clr_dot(RPN);
3495:src/keys.c    ****       lcd_refresh();
3496:src/keys.c    ****     }
3497:src/keys.c    **** 
3498:src/keys.c    **** #ifndef CONSOLE
3499:src/keys.c    ****     /*
3500:src/keys.c    ****      *  Reallow display refresh which is temporarily disabled after a stop
3501:src/keys.c    ****      *  All keys execpt R/S trigger this. The latter will only be reenabled
3502:src/keys.c    ****      *  from the heartbeat after the keybord buffer has become empty to avoid
3503:src/keys.c    ****      *  an accidental restart of the program.
3504:src/keys.c    ****      */
3505:src/keys.c    ****     if (c != K63)
 7226              		.loc 1 3505 5 is_stmt 1 view .LVU2152
 7227              		.loc 1 3505 8 is_stmt 0 view .LVU2153
 7228 0046 272C     		cmp	r4, #39
 7229 0048 00F05482 		beq	.L1355
ARM GAS  /tmp/ccgiIQCZ.s 			page 224


3506:src/keys.c    ****       JustStopped = 0;
 7230              		.loc 1 3506 7 is_stmt 1 view .LVU2154
 7231              		.loc 1 3506 19 is_stmt 0 view .LVU2155
 7232 004c A84B     		ldr	r3, .L1444+8
 7233 004e 0020     		movs	r0, #0
3507:src/keys.c    **** #endif
3508:src/keys.c    ****   }
3509:src/keys.c    **** 
3510:src/keys.c    ****   /*
3511:src/keys.c    ****    *  Handle key release
3512:src/keys.c    ****    */
3513:src/keys.c    ****   if (c == K_RELEASE)
 7234              		.loc 1 3513 6 view .LVU2156
 7235 0050 632C     		cmp	r4, #99
3506:src/keys.c    ****       JustStopped = 0;
 7236              		.loc 1 3506 19 view .LVU2157
 7237 0052 1860     		str	r0, [r3]
 7238              		.loc 1 3513 3 is_stmt 1 view .LVU2158
 7239              		.loc 1 3513 6 is_stmt 0 view .LVU2159
 7240 0054 40F07581 		bne	.L789
3514:src/keys.c    ****     {
3515:src/keys.c    ****     if (OpCode != 0) {
 7241              		.loc 1 3515 5 is_stmt 1 view .LVU2160
 7242              		.loc 1 3515 16 is_stmt 0 view .LVU2161
 7243 0058 A64B     		ldr	r3, .L1444+12
 7244 005a 1D68     		ldr	r5, [r3]
 7245              		.loc 1 3515 8 view .LVU2162
 7246 005c 002D     		cmp	r5, #0
 7247 005e 00F05282 		beq	.L790
3516:src/keys.c    ****       /*
3517:src/keys.c    ****        * Execute the key on release
3518:src/keys.c    ****        */
3519:src/keys.c    ****       GoFast = 1;
 7248              		.loc 1 3519 7 is_stmt 1 view .LVU2163
 7249              		.loc 1 3519 14 is_stmt 0 view .LVU2164
 7250 0062 A54A     		ldr	r2, .L1444+16
3520:src/keys.c    ****       c = OpCode;
3521:src/keys.c    ****       OpCode = 0;
 7251              		.loc 1 3521 14 view .LVU2165
 7252 0064 1860     		str	r0, [r3]
3522:src/keys.c    **** 
3523:src/keys.c    ****       if (c == STATE_SST)
 7253              		.loc 1 3523 10 view .LVU2166
 7254 0066 2E2D     		cmp	r5, #46
3519:src/keys.c    ****       c = OpCode;
 7255              		.loc 1 3519 14 view .LVU2167
 7256 0068 4FF00100 		mov	r0, #1
3520:src/keys.c    ****       c = OpCode;
 7257              		.loc 1 3520 9 view .LVU2168
 7258 006c 2C46     		mov	r4, r5
 7259              	.LVL625:
3519:src/keys.c    ****       c = OpCode;
 7260              		.loc 1 3519 14 view .LVU2169
 7261 006e 1060     		str	r0, [r2]
3520:src/keys.c    ****       c = OpCode;
 7262              		.loc 1 3520 7 is_stmt 1 view .LVU2170
 7263              	.LVL626:
ARM GAS  /tmp/ccgiIQCZ.s 			page 225


3521:src/keys.c    **** 
 7264              		.loc 1 3521 7 view .LVU2171
 7265              		.loc 1 3523 7 view .LVU2172
 7266              		.loc 1 3523 10 is_stmt 0 view .LVU2173
 7267 0070 00F05D82 		beq	.L1356
3524:src/keys.c    **** 	xeq_sst_bst(1);
3525:src/keys.c    ****       else {
3526:src/keys.c    **** 	if (c == (OP_NIL | OP_OFF) || c == (OP_NIL | OP_rCLX) || !is_bad_cmdline()) {
 7268              		.loc 1 3526 2 is_stmt 1 view .LVU2174
 7269              		.loc 1 3526 5 is_stmt 0 view .LVU2175
 7270 0074 B5F5817F 		cmp	r5, #258
 7271 0078 08D0     		beq	.L796
 7272              		.loc 1 3526 29 discriminator 1 view .LVU2176
 7273 007a 40F23F13 		movw	r3, #319
 7274 007e 9D42     		cmp	r5, r3
 7275 0080 04D0     		beq	.L796
 7276              		.loc 1 3526 60 discriminator 2 view .LVU2177
 7277 0082 FFF7FEFF 		bl	is_bad_cmdline
 7278              	.LVL627:
 7279              		.loc 1 3526 56 discriminator 2 view .LVU2178
 7280 0086 0028     		cmp	r0, #0
 7281 0088 40F05E82 		bne	.L1357
 7282              	.L796:
3527:src/keys.c    **** 	  xeq(c);
 7283              		.loc 1 3527 4 is_stmt 1 view .LVU2179
3528:src/keys.c    **** 	  if (Running || Pause)
 7284              		.loc 1 3528 8 is_stmt 0 view .LVU2180
 7285 008c 9B4E     		ldr	r6, .L1444+20
3527:src/keys.c    **** 	  xeq(c);
 7286              		.loc 1 3527 4 view .LVU2181
 7287 008e 2846     		mov	r0, r5
 7288 0090 FFF7FEFF 		bl	xeq
 7289              	.LVL628:
 7290              		.loc 1 3528 4 is_stmt 1 view .LVU2182
 7291              		.loc 1 3528 7 is_stmt 0 view .LVU2183
 7292 0094 3368     		ldr	r3, [r6]
 7293 0096 0BB9     		cbnz	r3, .L794
 7294              		.loc 1 3528 16 discriminator 1 view .LVU2184
 7295 0098 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7296 009a 0BB1     		cbz	r3, .L792
 7297              	.L794:
3529:src/keys.c    **** 	    xeqprog();
 7298              		.loc 1 3529 6 is_stmt 1 view .LVU2185
 7299 009c FFF7FEFF 		bl	xeqprog
 7300              	.LVL629:
 7301              	.L792:
3530:src/keys.c    **** 	}
3531:src/keys.c    ****       }
3532:src/keys.c    ****       dot(RPN, ShowRPN);
 7302              		.loc 1 3532 7 view .LVU2186
 7303 00a0 974D     		ldr	r5, .L1444+24
 7304 00a2 8D20     		movs	r0, #141
 7305 00a4 2968     		ldr	r1, [r5]
 7306 00a6 FFF7FEFF 		bl	dot
 7307              	.LVL630:
3533:src/keys.c    ****     }
3534:src/keys.c    ****     else {
ARM GAS  /tmp/ccgiIQCZ.s 			page 226


3535:src/keys.c    ****       // Ignore key-up if no operation was pending
3536:src/keys.c    ****       dot(RPN, ShowRPN);
3537:src/keys.c    **** #ifndef CONSOLE
3538:src/keys.c    ****       if (! State2.disp_temp ) {
3539:src/keys.c    **** 	if (!WasDataEntry) {
3540:src/keys.c    **** 	  // This will get rid of the last displayed op-code
3541:src/keys.c    **** 	  display();
3542:src/keys.c    **** 	}
3543:src/keys.c    **** 	else {
3544:src/keys.c    **** 	  lcd_refresh(); // Update the RPN annunciator
3545:src/keys.c    **** 	}
3546:src/keys.c    ****       }
3547:src/keys.c    **** #endif
3548:src/keys.c    ****       return;
3549:src/keys.c    ****     }
3550:src/keys.c    **** 
3551:src/keys.c    ****     /*
3552:src/keys.c    ****      *  Turn on the RPN symbol if desired
3553:src/keys.c    ****      */
3554:src/keys.c    ****     if (ShowRPN) {
 7308              		.loc 1 3554 5 view .LVU2187
 7309              		.loc 1 3554 9 is_stmt 0 view .LVU2188
 7310 00aa 2D68     		ldr	r5, [r5]
 7311              		.loc 1 3554 8 view .LVU2189
 7312 00ac 002D     		cmp	r5, #0
 7313 00ae 00F0E281 		beq	.L1345
3555:src/keys.c    ****       lcd_refresh();
 7314              		.loc 1 3555 7 is_stmt 1 view .LVU2190
 7315 00b2 944B     		ldr	r3, .L1444+28
 7316 00b4 9847     		blx	r3
 7317              	.LVL631:
 7318 00b6 3368     		ldr	r3, [r6]
3405:src/keys.c    ****   if (was_paused && Pause == 0)
 7319              		.loc 1 3405 7 is_stmt 0 view .LVU2191
 7320 00b8 0025     		movs	r5, #0
 7321              	.LVL632:
 7322              	.L799:
3556:src/keys.c    ****     }
3557:src/keys.c    ****   }
3558:src/keys.c    ****   else {
3559:src/keys.c    ****     /*
3560:src/keys.c    ****      *  Decode the key 
3561:src/keys.c    ****      */
3562:src/keys.c    ****     WasDataEntry = 0;
3563:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
3564:src/keys.c    **** #ifdef DM42
3565:src/keys.c    ****     if (c != K_OP) {
3566:src/keys.c    ****       c = process(c);
3567:src/keys.c    ****       // returns an op-code or state
3568:src/keys.c    ****     }
3569:src/keys.c    ****     else {
3570:src/keys.c    ****       if (isRARG(nd_opcode)) {
3571:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
3572:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
3573:src/keys.c    **** 	  c = nd_opcode;
3574:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
3575:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
ARM GAS  /tmp/ccgiIQCZ.s 			page 227


3576:src/keys.c    **** 	  c = STATE_UNFINISHED;
3577:src/keys.c    **** 	}
3578:src/keys.c    **** 	else if ( (nd_opcode & 0x00ff) != 0 ) { // has argument
3579:src/keys.c    **** 	  c = nd_opcode;
3580:src/keys.c    **** 	}
3581:src/keys.c    **** 	else {
3582:src/keys.c    **** 	  init_arg(RARG_CMD(nd_opcode));
3583:src/keys.c    **** 	  c = STATE_UNFINISHED;
3584:src/keys.c    **** 	}
3585:src/keys.c    ****       }
3586:src/keys.c    ****       else if (isDBL(nd_opcode)) {
3587:src/keys.c    **** 	if ( (nd_opcode & 0xffff00ff) == 0 ) { // no argument
3588:src/keys.c    **** 	  init_arg(opDBL(nd_opcode));
3589:src/keys.c    **** 	  State2.multi = 1;
3590:src/keys.c    **** 	  State2.alphashift = 0;
3591:src/keys.c    **** 	  State2.rarg = 0;
3592:src/keys.c    **** 	  c = STATE_UNFINISHED;
3593:src/keys.c    **** 	}
3594:src/keys.c    **** 	else { // let argument through
3595:src/keys.c    **** 	  c = nd_opcode;
3596:src/keys.c    **** 	}
3597:src/keys.c    ****       }
3598:src/keys.c    ****       else {
3599:src/keys.c    **** 	c = check_confirm(nd_opcode);
3600:src/keys.c    ****       }      
3601:src/keys.c    ****     }
3602:src/keys.c    **** #else
3603:src/keys.c    ****     c = process(c);		// returns an op-code or state
3604:src/keys.c    **** #endif
3605:src/keys.c    ****     switch (c) {
3606:src/keys.c    ****     case STATE_SST:
3607:src/keys.c    ****       OpCode = c;
3608:src/keys.c    ****       OpCodeDisplayPending = 0;
3609:src/keys.c    ****       xeq_sst_bst(0);
3610:src/keys.c    ****       break;
3611:src/keys.c    **** 
3612:src/keys.c    ****     case STATE_BST:
3613:src/keys.c    ****       xeq_sst_bst(-1);
3614:src/keys.c    ****       break;
3615:src/keys.c    **** 
3616:src/keys.c    ****     case STATE_BACKSPACE:
3617:src/keys.c    ****       if (! State2.runmode)
3618:src/keys.c    **** 	delprog();
3619:src/keys.c    ****       else if (State2.alphas) {
3620:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
3621:src/keys.c    **** 	if (p > Alpha)
3622:src/keys.c    **** 	  *--p = '\0';
3623:src/keys.c    ****       }
3624:src/keys.c    ****       break;
3625:src/keys.c    **** 
3626:src/keys.c    ****     case STATE_RUNNING:
3627:src/keys.c    ****       xeqprog();  // continue execution
3628:src/keys.c    ****       break;
3629:src/keys.c    **** 
3630:src/keys.c    ****     case STATE_WINDOWRIGHT:
3631:src/keys.c    ****     case STATE_WINDOWLEFT:
3632:src/keys.c    ****       if (!is_bad_cmdline())
ARM GAS  /tmp/ccgiIQCZ.s 			page 228


3633:src/keys.c    **** 	set_window(c);
3634:src/keys.c    ****       break;
3635:src/keys.c    **** 
3636:src/keys.c    ****     case STATE_UNFINISHED:
3637:src/keys.c    ****     case STATE_IGNORE:
3638:src/keys.c    ****       break;
3639:src/keys.c    **** 
3640:src/keys.c    ****     default:
3641:src/keys.c    ****       if (State2.runmode || NonProgrammable) {
3642:src/keys.c    **** 	NonProgrammable = 0;
3643:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
3644:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
3645:src/keys.c    **** 	    // Data entry key
3646:src/keys.c    **** #ifndef CONSOLE
3647:src/keys.c    **** 	    WasDataEntry = 1;
3648:src/keys.c    **** #endif
3649:src/keys.c    **** 	    cmdline_empty = (CmdLineLength == 0);
3650:src/keys.c    **** 	    xeq(c);
3651:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
3652:src/keys.c    **** 	  }
3653:src/keys.c    **** 	}
3654:src/keys.c    **** 	else {
3655:src/keys.c    **** 	  // Save the op-code for execution on key-up
3656:src/keys.c    **** 	  OpCode = c;
3657:src/keys.c    **** 	  OpCodeDisplayPending = 1;
3658:src/keys.c    **** 	  lcd_refresh(); // Update the RPN annunciator
3659:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
3660:src/keys.c    **** 	}
3661:src/keys.c    ****       }
3662:src/keys.c    ****       else {
3663:src/keys.c    **** 	stoprog(c);
3664:src/keys.c    ****       }
3665:src/keys.c    ****     }
3666:src/keys.c    ****   }
3667:src/keys.c    ****   if (! Running && ! Pause
 7323              		.loc 1 3667 3 is_stmt 1 view .LVU2192
 7324              		.loc 1 3667 6 is_stmt 0 view .LVU2193
 7325 00ba 002B     		cmp	r3, #0
 7326 00bc 40F00F81 		bne	.L1350
 7327              	.LVL633:
 7328              	.L820:
 7329              		.loc 1 3667 20 discriminator 1 view .LVU2194
 7330 00c0 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7331              		.loc 1 3667 17 discriminator 1 view .LVU2195
 7332 00c2 002B     		cmp	r3, #0
 7333 00c4 40F00B81 		bne	.L1350
3668:src/keys.c    **** #ifndef CONSOLE
3669:src/keys.c    ****       && ! JustStopped
 7334              		.loc 1 3669 10 view .LVU2196
 7335 00c8 894B     		ldr	r3, .L1444+8
3670:src/keys.c    **** #endif
3671:src/keys.c    ****       && ! JustDisplayed && c != STATE_IGNORE) {
 7336              		.loc 1 3671 10 view .LVU2197
 7337 00ca 8F4E     		ldr	r6, .L1444+32
 7338 00cc 1B68     		ldr	r3, [r3]
 7339 00ce 3268     		ldr	r2, [r6]
 7340              		.loc 1 3671 7 view .LVU2198
ARM GAS  /tmp/ccgiIQCZ.s 			page 229


 7341 00d0 1343     		orrs	r3, r3, r2
 7342 00d2 16D1     		bne	.L1111
 7343              		.loc 1 3671 26 discriminator 1 view .LVU2199
 7344 00d4 322C     		cmp	r4, #50
 7345 00d6 14D0     		beq	.L1111
 7346              	.LBB845:
3672:src/keys.c    ****     const int orig_WasDataEntry = WasDataEntry;
 7347              		.loc 1 3672 5 is_stmt 1 view .LVU2200
 7348              		.loc 1 3672 15 is_stmt 0 view .LVU2201
 7349 00d8 DFF84092 		ldr	r9, .L1444+52
 7350 00dc D9F80070 		ldr	r7, [r9]
 7351              	.LVL634:
3673:src/keys.c    **** 
3674:src/keys.c    ****     WasDataEntry &= !(c == (OP_SPEC | OP_ENTER) || cmdline_empty || State2.invalid_disp);
 7352              		.loc 1 3674 5 is_stmt 1 view .LVU2202
 7353              		.loc 1 3674 21 is_stmt 0 view .LVU2203
 7354 00e0 4CB1     		cbz	r4, .L1113
 7355              		.loc 1 3674 49 discriminator 1 view .LVU2204
 7356 00e2 002D     		cmp	r5, #0
 7357 00e4 40F09884 		bne	.L1174
 7358              		.loc 1 3674 66 discriminator 3 view .LVU2205
 7359 00e8 884B     		ldr	r3, .L1444+36
 7360 00ea DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 7361              		.loc 1 3674 21 discriminator 3 view .LVU2206
 7362 00ec 9B07     		lsls	r3, r3, #30
 7363 00ee 00F18C85 		bmi	.L1175
 7364 00f2 07F00104 		and	r4, r7, #1
 7365              	.LVL635:
 7366              	.L1113:
 7367              		.loc 1 3674 18 discriminator 8 view .LVU2207
 7368 00f6 C9F80040 		str	r4, [r9]
3675:src/keys.c    ****     display();
 7369              		.loc 1 3675 5 is_stmt 1 discriminator 8 view .LVU2208
 7370 00fa FFF7FEFF 		bl	display
 7371              	.LVL636:
3676:src/keys.c    ****     WasDataEntry = orig_WasDataEntry;
 7372              		.loc 1 3676 5 discriminator 8 view .LVU2209
 7373              		.loc 1 3676 18 is_stmt 0 discriminator 8 view .LVU2210
 7374 00fe C9F80070 		str	r7, [r9]
 7375              	.LVL637:
 7376              	.L1111:
 7377              		.loc 1 3676 18 discriminator 8 view .LVU2211
 7378              	.LBE845:
3677:src/keys.c    ****   }
3678:src/keys.c    **** 
3679:src/keys.c    ****  no_display:
3680:src/keys.c    ****   JustDisplayed = 0;
 7379              		.loc 1 3680 3 is_stmt 1 view .LVU2212
 7380              		.loc 1 3680 17 is_stmt 0 view .LVU2213
 7381 0102 0023     		movs	r3, #0
 7382 0104 3360     		str	r3, [r6]
3681:src/keys.c    ****   watchdog();
 7383              		.loc 1 3681 13 is_stmt 1 view .LVU2214
 7384              	.L768:
3682:src/keys.c    **** }
 7385              		.loc 1 3682 1 is_stmt 0 view .LVU2215
 7386 0106 03B0     		add	sp, sp, #12
ARM GAS  /tmp/ccgiIQCZ.s 			page 230


 7387              		.cfi_remember_state
 7388              		.cfi_def_cfa_offset 36
 7389              		@ sp needed
 7390 0108 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7391              	.LVL638:
 7392              	.L1353:
 7393              		.cfi_restore_state
3424:src/keys.c    **** 	/*
 7394              		.loc 1 3424 7 is_stmt 1 view .LVU2216
3424:src/keys.c    **** 	/*
 7395              		.loc 1 3424 11 is_stmt 0 view .LVU2217
 7396 010c FFF7FEFF 		bl	keyticks
 7397              	.LVL639:
3424:src/keys.c    **** 	/*
 7398              		.loc 1 3424 10 view .LVU2218
 7399 0110 0128     		cmp	r0, #1
 7400 0112 1BDD     		ble	.L774
3428:src/keys.c    **** 	  /*
 7401              		.loc 1 3428 2 is_stmt 1 view .LVU2219
3428:src/keys.c    **** 	  /*
 7402              		.loc 1 3428 13 is_stmt 0 view .LVU2220
 7403 0114 774D     		ldr	r5, .L1444+12
 7404 0116 2868     		ldr	r0, [r5]
3428:src/keys.c    **** 	  /*
 7405              		.loc 1 3428 5 view .LVU2221
 7406 0118 98B1     		cbz	r0, .L776
3432:src/keys.c    **** 	    /*
 7407              		.loc 1 3432 4 is_stmt 1 view .LVU2222
3432:src/keys.c    **** 	    /*
 7408              		.loc 1 3432 8 is_stmt 0 view .LVU2223
 7409 011a 7D4B     		ldr	r3, .L1444+40
3432:src/keys.c    **** 	    /*
 7410              		.loc 1 3432 7 view .LVU2224
 7411 011c 1E68     		ldr	r6, [r3]
 7412 011e 002E     		cmp	r6, #0
 7413 0120 00F02982 		beq	.L777
3436:src/keys.c    **** 	    if (OpCode == (OP_NIL | OP_RS)) {
 7414              		.loc 1 3436 6 is_stmt 1 view .LVU2225
3437:src/keys.c    **** 	      DispMsg = "RUN";
 7415              		.loc 1 3437 9 is_stmt 0 view .LVU2226
 7416 0124 40F23B12 		movw	r2, #315
3436:src/keys.c    **** 	    if (OpCode == (OP_NIL | OP_RS)) {
 7417              		.loc 1 3436 27 view .LVU2227
 7418 0128 0025     		movs	r5, #0
3437:src/keys.c    **** 	      DispMsg = "RUN";
 7419              		.loc 1 3437 9 view .LVU2228
 7420 012a 9042     		cmp	r0, r2
3436:src/keys.c    **** 	    if (OpCode == (OP_NIL | OP_RS)) {
 7421              		.loc 1 3436 27 view .LVU2229
 7422 012c 1D60     		str	r5, [r3]
3437:src/keys.c    **** 	      DispMsg = "RUN";
 7423              		.loc 1 3437 6 is_stmt 1 view .LVU2230
3437:src/keys.c    **** 	      DispMsg = "RUN";
 7424              		.loc 1 3437 9 is_stmt 0 view .LVU2231
 7425 012e 40F04383 		bne	.L778
3438:src/keys.c    **** 	    }
 7426              		.loc 1 3438 8 is_stmt 1 view .LVU2232
ARM GAS  /tmp/ccgiIQCZ.s 			page 231


3438:src/keys.c    **** 	    }
 7427              		.loc 1 3438 16 is_stmt 0 view .LVU2233
 7428 0132 784B     		ldr	r3, .L1444+44
 7429 0134 784A     		ldr	r2, .L1444+48
 7430 0136 1A60     		str	r2, [r3]
 7431              	.L779:
3444:src/keys.c    **** 	    ShowRPN = 1;	// Off because of DispMsg setting
 7432              		.loc 1 3444 6 is_stmt 1 view .LVU2234
 7433 0138 FFF7FEFF 		bl	display
 7434              	.LVL640:
3445:src/keys.c    **** 	  }
 7435              		.loc 1 3445 6 view .LVU2235
3445:src/keys.c    **** 	  }
 7436              		.loc 1 3445 14 is_stmt 0 view .LVU2236
 7437 013c 704B     		ldr	r3, .L1444+24
 7438 013e 0122     		movs	r2, #1
 7439 0140 1A60     		str	r2, [r3]
 7440              	.L776:
3457:src/keys.c    **** 	  // Rely on the held shift key instead of the toggle
 7441              		.loc 1 3457 2 is_stmt 1 view .LVU2237
3457:src/keys.c    **** 	  // Rely on the held shift key instead of the toggle
 7442              		.loc 1 3457 6 is_stmt 0 view .LVU2238
 7443 0142 FFF7FEFF 		bl	keyticks
 7444              	.LVL641:
3457:src/keys.c    **** 	  // Rely on the held shift key instead of the toggle
 7445              		.loc 1 3457 5 view .LVU2239
 7446 0146 0C28     		cmp	r0, #12
 7447 0148 00F3F581 		bgt	.L1358
 7448              	.L774:
3466:src/keys.c    **** 
 7449              		.loc 1 3466 17 is_stmt 1 view .LVU2240
3472:src/keys.c    **** 	JustStopped = 0;
 7450              		.loc 1 3472 7 view .LVU2241
3472:src/keys.c    **** 	JustStopped = 0;
 7451              		.loc 1 3472 11 is_stmt 0 view .LVU2242
 7452 014c 684D     		ldr	r5, .L1444+8
3472:src/keys.c    **** 	JustStopped = 0;
 7453              		.loc 1 3472 10 view .LVU2243
 7454 014e 2B68     		ldr	r3, [r5]
 7455 0150 002B     		cmp	r3, #0
 7456 0152 40F05781 		bne	.L1359
 7457              	.L783:
3480:src/keys.c    **** 	return;
 7458              		.loc 1 3480 7 is_stmt 1 view .LVU2244
3480:src/keys.c    **** 	return;
 7459              		.loc 1 3480 11 is_stmt 0 view .LVU2245
 7460 0156 694E     		ldr	r6, .L1444+20
 7461 0158 3368     		ldr	r3, [r6]
3480:src/keys.c    **** 	return;
 7462              		.loc 1 3480 10 view .LVU2246
 7463 015a 002B     		cmp	r3, #0
 7464 015c 00F04481 		beq	.L1360
 7465              	.L785:
3513:src/keys.c    ****     {
 7466              		.loc 1 3513 3 is_stmt 1 view .LVU2247
3562:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7467              		.loc 1 3562 5 view .LVU2248
ARM GAS  /tmp/ccgiIQCZ.s 			page 232


3563:src/keys.c    **** #ifdef DM42
 7468              		.loc 1 3563 13 is_stmt 0 view .LVU2249
 7469 0160 674A     		ldr	r2, .L1444+24
3562:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7470              		.loc 1 3562 18 view .LVU2250
 7471 0162 DFF8B891 		ldr	r9, .L1444+52
3563:src/keys.c    **** #ifdef DM42
 7472              		.loc 1 3563 15 view .LVU2251
 7473 0166 B3FA83F3 		clz	r3, r3
 7474 016a 5B09     		lsrs	r3, r3, #5
3563:src/keys.c    **** #ifdef DM42
 7475              		.loc 1 3563 13 view .LVU2252
 7476 016c 1360     		str	r3, [r2]
3562:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7477              		.loc 1 3562 18 view .LVU2253
 7478 016e 0023     		movs	r3, #0
 7479 0170 C9F80030 		str	r3, [r9]
3563:src/keys.c    **** #ifdef DM42
 7480              		.loc 1 3563 5 is_stmt 1 view .LVU2254
3565:src/keys.c    ****       c = process(c);
 7481              		.loc 1 3565 5 view .LVU2255
 7482              	.L771:
3566:src/keys.c    ****       // returns an op-code or state
 7483              		.loc 1 3566 7 view .LVU2256
 7484              	.LVL642:
 7485              	.LBB846:
 7486              	.LBI846:
3210:src/keys.c    ****   const enum shifts shift = cur_shift();
 7487              		.loc 1 3210 12 view .LVU2257
 7488              	.LBB847:
3211:src/keys.c    ****   enum catalogues cat;
 7489              		.loc 1 3211 3 view .LVU2258
 7490              	.LBB848:
 7491              	.LBI848:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 7492              		.loc 1 96 13 view .LVU2259
 7493              	.LBB849:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7494              		.loc 1 97 2 view .LVU2260
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7495              		.loc 1 97 18 is_stmt 0 view .LVU2261
 7496 0174 FFF7FEFF 		bl	shift_down
 7497              	.LVL643:
  98:src/keys.c    **** }
 7498              		.loc 1 98 2 is_stmt 1 view .LVU2262
  98:src/keys.c    **** }
 7499              		.loc 1 98 52 is_stmt 0 view .LVU2263
 7500 0178 0346     		mov	r3, r0
 7501 017a 08B9     		cbnz	r0, .L803
 7502 017c 634B     		ldr	r3, .L1444+36
 7503 017e 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 7504              	.L803:
 7505              	.LVL644:
  98:src/keys.c    **** }
 7506              		.loc 1 98 52 view .LVU2264
 7507              	.LBE849:
 7508              	.LBE848:
ARM GAS  /tmp/ccgiIQCZ.s 			page 233


3212:src/keys.c    **** 
 7509              		.loc 1 3212 3 is_stmt 1 view .LVU2265
3214:src/keys.c    ****     /*
 7510              		.loc 1 3214 3 view .LVU2266
3214:src/keys.c    ****     /*
 7511              		.loc 1 3214 7 is_stmt 0 view .LVU2267
 7512 0180 3568     		ldr	r5, [r6]
3214:src/keys.c    ****     /*
 7513              		.loc 1 3214 6 view .LVU2268
 7514 0182 002D     		cmp	r5, #0
 7515 0184 40F09380 		bne	.L804
3214:src/keys.c    ****     /*
 7516              		.loc 1 3214 15 view .LVU2269
 7517 0188 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 7518 018a 002A     		cmp	r2, #0
 7519 018c 40F08F80 		bne	.L804
3242:src/keys.c    **** #else
 7520              		.loc 1 3242 3 is_stmt 1 view .LVU2270
3242:src/keys.c    **** #else
 7521              		.loc 1 3242 6 is_stmt 0 view .LVU2271
 7522 0190 242C     		cmp	r4, #36
 7523 0192 00F09383 		beq	.L1361
3259:src/keys.c    **** 		// Avoid an accidental restart with R/S
 7524              		.loc 1 3259 2 is_stmt 1 view .LVU2272
3259:src/keys.c    **** 		// Avoid an accidental restart with R/S
 7525              		.loc 1 3259 5 is_stmt 0 view .LVU2273
 7526 0196 272C     		cmp	r4, #39
 7527 0198 04D1     		bne	.L819
3259:src/keys.c    **** 		// Avoid an accidental restart with R/S
 7528              		.loc 1 3259 15 view .LVU2274
 7529 019a 554A     		ldr	r2, .L1444+8
 7530 019c 1168     		ldr	r1, [r2]
 7531 019e 0029     		cmp	r1, #0
 7532 01a0 40F07C84 		bne	.L1362
 7533              	.L819:
 7534 01a4 DFF86481 		ldr	r8, .L1444+36
 7535 01a8 98F80E20 		ldrb	r2, [r8, #14]	@ zero_extendqisi2
 7536              	.L811:
3268:src/keys.c    **** 		CmdLineLength = 0;
 7537              		.loc 1 3268 2 is_stmt 1 view .LVU2275
3268:src/keys.c    **** 		CmdLineLength = 0;
 7538              		.loc 1 3268 5 is_stmt 0 view .LVU2276
 7539 01ac 4AB1     		cbz	r2, .L822
 7540 01ae 0093     		str	r3, [sp]
3268:src/keys.c    **** 		CmdLineLength = 0;
 7541              		.loc 1 3268 26 view .LVU2277
 7542 01b0 FFF7FEFF 		bl	keyticks
 7543              	.LVL645:
3268:src/keys.c    **** 		CmdLineLength = 0;
 7544              		.loc 1 3268 23 view .LVU2278
 7545 01b4 1E28     		cmp	r0, #30
3269:src/keys.c    **** 	/*
 7546              		.loc 1 3269 17 view .LVU2279
 7547 01b6 C8BF     		it	gt
 7548 01b8 0022     		movgt	r2, #0
3268:src/keys.c    **** 		CmdLineLength = 0;
 7549              		.loc 1 3268 23 view .LVU2280
ARM GAS  /tmp/ccgiIQCZ.s 			page 234


 7550 01ba 009B     		ldr	r3, [sp]
3269:src/keys.c    **** 	/*
 7551              		.loc 1 3269 3 is_stmt 1 view .LVU2281
3269:src/keys.c    **** 	/*
 7552              		.loc 1 3269 17 is_stmt 0 view .LVU2282
 7553 01bc C8BF     		it	gt
 7554 01be 88F81C20 		strbgt	r2, [r8, #28]
 7555              	.L822:
3274:src/keys.c    **** 		return process_confirm((const keycode)c);
 7556              		.loc 1 3274 2 is_stmt 1 view .LVU2283
3274:src/keys.c    **** 		return process_confirm((const keycode)c);
 7557              		.loc 1 3274 6 is_stmt 0 view .LVU2284
 7558 01c2 98F81420 		ldrb	r2, [r8, #20]	@ zero_extendqisi2
3274:src/keys.c    **** 		return process_confirm((const keycode)c);
 7559              		.loc 1 3274 5 view .LVU2285
 7560 01c6 5007     		lsls	r0, r2, #29
 7561 01c8 40F00283 		bne	.L1363
3277:src/keys.c    **** 		return process_arg((const keycode)c);
 7562              		.loc 1 3277 2 is_stmt 1 view .LVU2286
3277:src/keys.c    **** 		return process_arg((const keycode)c);
 7563              		.loc 1 3277 6 is_stmt 0 view .LVU2287
 7564 01cc 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3277:src/keys.c    **** 		return process_arg((const keycode)c);
 7565              		.loc 1 3277 5 view .LVU2288
 7566 01d0 9106     		lsls	r1, r2, #26
 7567 01d2 00F19683 		bmi	.L1364
3280:src/keys.c    **** 		return process_gtodot((const keycode)c);
 7568              		.loc 1 3280 2 is_stmt 1 view .LVU2289
3280:src/keys.c    **** 		return process_gtodot((const keycode)c);
 7569              		.loc 1 3280 6 is_stmt 0 view .LVU2290
 7570 01d6 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
3280:src/keys.c    **** 		return process_gtodot((const keycode)c);
 7571              		.loc 1 3280 5 view .LVU2291
 7572 01da 11F0010A 		ands	r10, r1, #1
 7573 01de 40F0D283 		bne	.L1365
3283:src/keys.c    **** 		return process_hyp((const keycode)c);
 7574              		.loc 1 3283 2 is_stmt 1 view .LVU2292
3283:src/keys.c    **** 		return process_hyp((const keycode)c);
 7575              		.loc 1 3283 5 is_stmt 0 view .LVU2293
 7576 01e2 11F02000 		ands	r0, r1, #32
 7577 01e6 40F01A84 		bne	.L1366
3286:src/keys.c    **** 		return process_test((const keycode)c);
 7578              		.loc 1 3286 2 is_stmt 1 view .LVU2294
3286:src/keys.c    **** 		return process_test((const keycode)c);
 7579              		.loc 1 3286 12 is_stmt 0 view .LVU2295
 7580 01ea 98F80FA0 		ldrb	r10, [r8, #15]	@ zero_extendqisi2
3286:src/keys.c    **** 		return process_test((const keycode)c);
 7581              		.loc 1 3286 5 view .LVU2296
 7582 01ee BAF1070F 		cmp	r10, #7
 7583 01f2 40F09083 		bne	.L1367
3289:src/keys.c    **** 		return process_status((const keycode)c);
 7584              		.loc 1 3289 2 is_stmt 1 view .LVU2297
3289:src/keys.c    **** 		return process_status((const keycode)c);
 7585              		.loc 1 3289 12 is_stmt 0 view .LVU2298
 7586 01f6 98F80C20 		ldrb	r2, [r8, #12]	@ zero_extendqisi2
3289:src/keys.c    **** 		return process_status((const keycode)c);
 7587              		.loc 1 3289 5 view .LVU2299
ARM GAS  /tmp/ccgiIQCZ.s 			page 235


 7588 01fa 002A     		cmp	r2, #0
 7589 01fc 40F00885 		bne	.L1368
3295:src/keys.c    **** 		toggle_shift(SHIFT_F);
 7590              		.loc 1 3295 2 is_stmt 1 view .LVU2300
3295:src/keys.c    **** 		toggle_shift(SHIFT_F);
 7591              		.loc 1 3295 5 is_stmt 0 view .LVU2301
 7592 0200 292C     		cmp	r4, #41
 7593 0202 00F0B785 		beq	.L1369
3299:src/keys.c    **** 		toggle_shift(SHIFT_G);
 7594              		.loc 1 3299 2 is_stmt 1 view .LVU2302
3299:src/keys.c    **** 		toggle_shift(SHIFT_G);
 7595              		.loc 1 3299 5 is_stmt 0 view .LVU2303
 7596 0206 2A2C     		cmp	r4, #42
 7597 0208 00F0BF85 		beq	.L1370
3303:src/keys.c    **** 		toggle_shift(SHIFT_H);
 7598              		.loc 1 3303 2 is_stmt 1 view .LVU2304
3303:src/keys.c    **** 		toggle_shift(SHIFT_H);
 7599              		.loc 1 3303 5 is_stmt 0 view .LVU2305
 7600 020c 2B2C     		cmp	r4, #43
 7601 020e 00F0CC85 		beq	.L1371
3311:src/keys.c    **** 		return process_arrow((const keycode)c);
 7602              		.loc 1 3311 2 is_stmt 1 view .LVU2306
3311:src/keys.c    **** 		return process_arrow((const keycode)c);
 7603              		.loc 1 3311 5 is_stmt 0 view .LVU2307
 7604 0212 4807     		lsls	r0, r1, #29
 7605 0214 00F12885 		bmi	.L1372
3319:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 7606              		.loc 1 3319 2 is_stmt 1 view .LVU2308
 7607              	.LBB850:
 7608              	.LBB851:
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7609              		.loc 1 276 6 is_stmt 0 view .LVU2309
 7610 0218 DFF804B1 		ldr	fp, .L1444+56
 7611 021c DBF80000 		ldr	r0, [fp]
 7612 0220 90F8E4C7 		ldrb	ip, [r0, #2020]	@ zero_extendqisi2
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7613              		.loc 1 276 5 view .LVU2310
 7614 0224 1CF0040F 		tst	ip, #4
 7615              	.LBE851:
 7616              	.LBE850:
3319:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 7617              		.loc 1 3319 8 view .LVU2311
 7618 0228 E4B2     		uxtb	r4, r4
 7619              	.LVL646:
 7620              	.LBB872:
 7621              	.LBI850:
 267:src/keys.c    **** {
 7622              		.loc 1 267 24 is_stmt 1 view .LVU2312
 7623              	.LBB858:
 269:src/keys.c    ****   int i, col, max;
 7624              		.loc 1 269 3 view .LVU2313
 270:src/keys.c    ****   const struct _map {
 7625              		.loc 1 270 3 view .LVU2314
 271:src/keys.c    ****     unsigned char key, cat[3];
 7626              		.loc 1 271 3 view .LVU2315
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7627              		.loc 1 276 2 view .LVU2316
ARM GAS  /tmp/ccgiIQCZ.s 			page 236


 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7628              		.loc 1 276 5 is_stmt 0 view .LVU2317
 7629 022a 00F03B84 		beq	.L902
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7630              		.loc 1 276 6 view .LVU2318
 7631 022e 90F8DE27 		ldrb	r2, [r0, #2014]	@ zero_extendqisi2
 7632 0232 5207     		lsls	r2, r2, #29
 7633 0234 40F13684 		bpl	.L902
 277:src/keys.c    **** 			switch (c) {
 7634              		.loc 1 277 3 is_stmt 1 view .LVU2319
 277:src/keys.c    **** 			switch (c) {
 7635              		.loc 1 277 6 is_stmt 0 view .LVU2320
 7636 0238 032B     		cmp	r3, #3
 7637 023a 00F01182 		beq	.L1373
 294:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 7638              		.loc 1 294 3 is_stmt 1 view .LVU2321
 294:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 7639              		.loc 1 294 6 is_stmt 0 view .LVU2322
 7640 023e 022B     		cmp	r3, #2
 7641 0240 01F07A80 		beq	.L1374
 296:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 7642              		.loc 1 296 3 is_stmt 1 view .LVU2323
 296:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 7643              		.loc 1 296 6 is_stmt 0 view .LVU2324
 7644 0244 012B     		cmp	r3, #1
 7645 0246 02D1     		bne	.L923
 296:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 7646              		.loc 1 296 27 view .LVU2325
 7647 0248 0C2C     		cmp	r4, #12
 7648 024a 01F00D83 		beq	.L1375
 7649              	.LVL647:
 7650              	.L923:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7651              		.loc 1 427 3 is_stmt 1 view .LVU2326
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7652              		.loc 1 427 6 is_stmt 0 view .LVU2327
 7653 024e 0A07     		lsls	r2, r1, #28
 7654 0250 00F17E84 		bmi	.L929
 7655              	.LVL648:
 7656              	.L927:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7657              		.loc 1 427 6 view .LVU2328
 7658              	.LBE858:
 7659              	.LBE872:
3334:src/keys.c    **** 		return process_labellist((const keycode)c);
 7660              		.loc 1 3334 2 is_stmt 1 view .LVU2329
3334:src/keys.c    **** 		return process_labellist((const keycode)c);
 7661              		.loc 1 3334 6 is_stmt 0 view .LVU2330
 7662 0254 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
3334:src/keys.c    **** 		return process_labellist((const keycode)c);
 7663              		.loc 1 3334 5 view .LVU2331
 7664 0258 5007     		lsls	r0, r2, #29
 7665 025a 00F12F86 		bmi	.L1376
3337:src/keys.c    **** 		return process_registerlist((const keycode)c);
 7666              		.loc 1 3337 2 is_stmt 1 view .LVU2332
3337:src/keys.c    **** 		return process_registerlist((const keycode)c);
 7667              		.loc 1 3337 5 is_stmt 0 view .LVU2333
ARM GAS  /tmp/ccgiIQCZ.s 			page 237


 7668 025e 1207     		lsls	r2, r2, #28
 7669 0260 00F15487 		bmi	.L1377
3340:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 7670              		.loc 1 3340 2 is_stmt 1 view .LVU2334
3340:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 7671              		.loc 1 3340 5 is_stmt 0 view .LVU2335
 7672 0264 98F80E20 		ldrb	r2, [r8, #14]	@ zero_extendqisi2
 7673 0268 002A     		cmp	r2, #0
 7674 026a 41F04F80 		bne	.L1378
3343:src/keys.c    **** #ifndef INFRARED
 7675              		.loc 1 3343 2 is_stmt 1 view .LVU2336
3343:src/keys.c    **** #ifndef INFRARED
 7676              		.loc 1 3343 6 is_stmt 0 view .LVU2337
 7677 026e 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3343:src/keys.c    **** #ifndef INFRARED
 7678              		.loc 1 3343 5 view .LVU2338
 7679 0272 1007     		lsls	r0, r2, #28
 7680 0274 01F17280 		bmi	.L1379
3356:src/keys.c    **** 		return process_c_lock ((const keycode)c);
 7681              		.loc 1 3356 2 is_stmt 1 view .LVU2339
3356:src/keys.c    **** 		return process_c_lock ((const keycode)c);
 7682              		.loc 1 3356 6 is_stmt 0 view .LVU2340
 7683 0278 DBF80020 		ldr	r2, [fp]
 7684 027c 92F8E407 		ldrb	r0, [r2, #2020]	@ zero_extendqisi2
3356:src/keys.c    **** 		return process_c_lock ((const keycode)c);
 7685              		.loc 1 3356 5 view .LVU2341
 7686 0280 4007     		lsls	r0, r0, #29
 7687 0282 04D5     		bpl	.L1036
3356:src/keys.c    **** 		return process_c_lock ((const keycode)c);
 7688              		.loc 1 3356 6 view .LVU2342
 7689 0284 92F8DE27 		ldrb	r2, [r2, #2014]	@ zero_extendqisi2
 7690 0288 5007     		lsls	r0, r2, #29
 7691 028a 01F15082 		bmi	.L1380
 7692              	.L1036:
3360:src/keys.c    **** 		return process_cmplx((const keycode)c);
 7693              		.loc 1 3360 2 is_stmt 1 view .LVU2343
3360:src/keys.c    **** 		return process_cmplx((const keycode)c);
 7694              		.loc 1 3360 5 is_stmt 0 view .LVU2344
 7695 028e 8A07     		lsls	r2, r1, #30
 7696 0290 01F15981 		bmi	.L1342
3363:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 7697              		.loc 1 3363 3 is_stmt 1 view .LVU2345
3363:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 7698              		.loc 1 3363 24 is_stmt 0 view .LVU2346
 7699 0294 5A1E     		subs	r2, r3, #1
3363:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 7700              		.loc 1 3363 6 view .LVU2347
 7701 0296 D2B2     		uxtb	r2, r2
 7702 0298 012A     		cmp	r2, #1
 7703 029a 41F2C781 		bls	.L1340
3365:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 7704              		.loc 1 3365 3 is_stmt 1 view .LVU2348
3365:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 7705              		.loc 1 3365 6 is_stmt 0 view .LVU2349
 7706 029e 032B     		cmp	r3, #3
3366:src/keys.c    **** 		return process_normal((const keycode)c);
 7707              		.loc 1 3366 11 view .LVU2350
ARM GAS  /tmp/ccgiIQCZ.s 			page 238


 7708 02a0 2046     		mov	r0, r4
3365:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 7709              		.loc 1 3365 6 view .LVU2351
 7710 02a2 01F02981 		beq	.L1381
 7711              	.L1343:
 7712              	.LBB873:
 7713              	.LBB874:
1440:src/keys.c    ****    case (K_CMPLX):
 7714              		.loc 1 1440 13 view .LVU2352
 7715 02a6 FFF7FEFF 		bl	process_normal
 7716              	.LVL649:
 7717 02aa 0446     		mov	r4, r0
 7718 02ac 82E0     		b	.L834
 7719              	.LVL650:
 7720              	.L804:
1440:src/keys.c    ****    case (K_CMPLX):
 7721              		.loc 1 1440 13 view .LVU2353
 7722              	.LBE874:
 7723              	.LBE873:
3218:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 7724              		.loc 1 3218 5 is_stmt 1 view .LVU2354
3218:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 7725              		.loc 1 3218 8 is_stmt 0 view .LVU2355
 7726 02ae 242C     		cmp	r4, #36
 7727 02b0 00F0AF80 		beq	.L806
3218:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 7728              		.loc 1 3218 18 view .LVU2356
 7729 02b4 272C     		cmp	r4, #39
 7730 02b6 00F0AC80 		beq	.L806
3228:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 7731              		.loc 1 3228 5 is_stmt 1 view .LVU2357
3228:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 7732              		.loc 1 3228 8 is_stmt 0 view .LVU2358
 7733 02ba 622C     		cmp	r4, #98
 7734 02bc 07D0     		beq	.L809
3229:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7735              		.loc 1 3229 7 is_stmt 1 view .LVU2359
3229:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7736              		.loc 1 3229 15 is_stmt 0 view .LVU2360
 7737 02be 134B     		ldr	r3, .L1444+36
 7738              	.LVL651:
3231:src/keys.c    ****     }
 7739              		.loc 1 3231 14 view .LVU2361
 7740 02c0 0D4A     		ldr	r2, .L1444+16
3229:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7741              		.loc 1 3229 17 view .LVU2362
 7742 02c2 0134     		adds	r4, r4, #1
 7743              	.LVL652:
3231:src/keys.c    ****     }
 7744              		.loc 1 3231 14 view .LVU2363
 7745 02c4 0121     		movs	r1, #1
3229:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7746              		.loc 1 3229 15 view .LVU2364
 7747 02c6 DC74     		strb	r4, [r3, #19]
3230:src/keys.c    ****       GoFast = 1;
 7748              		.loc 1 3230 7 is_stmt 1 view .LVU2365
3230:src/keys.c    ****       GoFast = 1;
ARM GAS  /tmp/ccgiIQCZ.s 			page 239


 7749              		.loc 1 3230 13 is_stmt 0 view .LVU2366
 7750 02c8 0023     		movs	r3, #0
3231:src/keys.c    ****     }
 7751              		.loc 1 3231 14 view .LVU2367
 7752 02ca 1160     		str	r1, [r2]
3230:src/keys.c    ****       GoFast = 1;
 7753              		.loc 1 3230 13 view .LVU2368
 7754 02cc 3B70     		strb	r3, [r7]
3231:src/keys.c    ****     }
 7755              		.loc 1 3231 7 is_stmt 1 view .LVU2369
 7756              	.LVL653:
 7757              	.L809:
3231:src/keys.c    ****     }
 7758              		.loc 1 3231 7 is_stmt 0 view .LVU2370
 7759              	.LBE847:
 7760              	.LBE846:
3627:src/keys.c    ****       break;
 7761              		.loc 1 3627 7 is_stmt 1 view .LVU2371
 7762 02ce FFF7FEFF 		bl	xeqprog
 7763              	.LVL654:
3628:src/keys.c    **** 
 7764              		.loc 1 3628 7 view .LVU2372
 7765 02d2 3368     		ldr	r3, [r6]
3405:src/keys.c    ****   if (was_paused && Pause == 0)
 7766              		.loc 1 3405 7 is_stmt 0 view .LVU2373
 7767 02d4 0025     		movs	r5, #0
3628:src/keys.c    **** 
 7768              		.loc 1 3628 7 view .LVU2374
 7769 02d6 3124     		movs	r4, #49
 7770              	.LVL655:
3667:src/keys.c    **** #ifndef CONSOLE
 7771              		.loc 1 3667 3 is_stmt 1 view .LVU2375
3667:src/keys.c    **** #ifndef CONSOLE
 7772              		.loc 1 3667 6 is_stmt 0 view .LVU2376
 7773 02d8 002B     		cmp	r3, #0
 7774 02da 3FF4F1AE 		beq	.L820
 7775              	.L1350:
3667:src/keys.c    **** #ifndef CONSOLE
 7776              		.loc 1 3667 6 view .LVU2377
 7777 02de 0A4E     		ldr	r6, .L1444+32
3680:src/keys.c    ****   watchdog();
 7778              		.loc 1 3680 3 is_stmt 1 view .LVU2378
3680:src/keys.c    ****   watchdog();
 7779              		.loc 1 3680 17 is_stmt 0 view .LVU2379
 7780 02e0 0023     		movs	r3, #0
 7781 02e2 3360     		str	r3, [r6]
3681:src/keys.c    **** }
 7782              		.loc 1 3681 13 is_stmt 1 view .LVU2380
 7783 02e4 0FE7     		b	.L768
 7784              	.L1445:
 7785 02e6 00BF     		.align	2
 7786              	.L1444:
 7787 02e8 00000000 		.word	.LANCHOR18
 7788 02ec 00000000 		.word	Pause
 7789 02f0 00000000 		.word	JustStopped
 7790 02f4 00000000 		.word	OpCode
 7791 02f8 00000000 		.word	GoFast
ARM GAS  /tmp/ccgiIQCZ.s 			page 240


 7792 02fc 00000000 		.word	Running
 7793 0300 00000000 		.word	ShowRPN
 7794 0304 31020008 		.word	134218289
 7795 0308 00000000 		.word	JustDisplayed
 7796 030c 00000000 		.word	StateWhileOn
 7797 0310 00000000 		.word	OpCodeDisplayPending
 7798 0314 00000000 		.word	DispMsg
 7799 0318 00000000 		.word	.LC0
 7800 031c 00000000 		.word	WasDataEntry
 7801 0320 00000000 		.word	main_ram
 7802              	.LVL656:
 7803              	.L1352:
3416:src/keys.c    ****     }
 7804              		.loc 1 3416 7 view .LVU2381
3563:src/keys.c    **** #ifdef DM42
 7805              		.loc 1 3563 15 is_stmt 0 view .LVU2382
 7806 0324 B74E     		ldr	r6, .L1446
3563:src/keys.c    **** #ifdef DM42
 7807              		.loc 1 3563 13 view .LVU2383
 7808 0326 B849     		ldr	r1, .L1446+4
3563:src/keys.c    **** #ifdef DM42
 7809              		.loc 1 3563 15 view .LVU2384
 7810 0328 3368     		ldr	r3, [r6]
3416:src/keys.c    ****     }
 7811              		.loc 1 3416 14 view .LVU2385
 7812 032a B84A     		ldr	r2, .L1446+8
3562:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7813              		.loc 1 3562 18 view .LVU2386
 7814 032c DFF80093 		ldr	r9, .L1446+44
3563:src/keys.c    **** #ifdef DM42
 7815              		.loc 1 3563 15 view .LVU2387
 7816 0330 B3FA83F3 		clz	r3, r3
 7817 0334 5B09     		lsrs	r3, r3, #5
3563:src/keys.c    **** #ifdef DM42
 7818              		.loc 1 3563 13 view .LVU2388
 7819 0336 0B60     		str	r3, [r1]
3416:src/keys.c    ****     }
 7820              		.loc 1 3416 14 view .LVU2389
 7821 0338 0023     		movs	r3, #0
 7822 033a 1360     		str	r3, [r2]
3513:src/keys.c    ****     {
 7823              		.loc 1 3513 3 is_stmt 1 view .LVU2390
3562:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7824              		.loc 1 3562 5 view .LVU2391
3562:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7825              		.loc 1 3562 18 is_stmt 0 view .LVU2392
 7826 033c C9F80030 		str	r3, [r9]
3563:src/keys.c    **** #ifdef DM42
 7827              		.loc 1 3563 5 is_stmt 1 view .LVU2393
3565:src/keys.c    ****       c = process(c);
 7828              		.loc 1 3565 5 view .LVU2394
 7829 0340 18E7     		b	.L771
 7830              	.L789:
3565:src/keys.c    ****       c = process(c);
 7831              		.loc 1 3565 5 is_stmt 0 view .LVU2395
 7832 0342 B04E     		ldr	r6, .L1446
3563:src/keys.c    **** #ifdef DM42
ARM GAS  /tmp/ccgiIQCZ.s 			page 241


 7833              		.loc 1 3563 13 view .LVU2396
 7834 0344 B049     		ldr	r1, .L1446+4
 7835 0346 3368     		ldr	r3, [r6]
3562:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7836              		.loc 1 3562 5 is_stmt 1 view .LVU2397
3562:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7837              		.loc 1 3562 18 is_stmt 0 view .LVU2398
 7838 0348 DFF8E492 		ldr	r9, .L1446+44
3563:src/keys.c    **** #ifdef DM42
 7839              		.loc 1 3563 15 view .LVU2399
 7840 034c B3FA83F2 		clz	r2, r3
 7841 0350 5209     		lsrs	r2, r2, #5
3565:src/keys.c    ****       c = process(c);
 7842              		.loc 1 3565 8 view .LVU2400
 7843 0352 342C     		cmp	r4, #52
3563:src/keys.c    **** #ifdef DM42
 7844              		.loc 1 3563 13 view .LVU2401
 7845 0354 0A60     		str	r2, [r1]
3562:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7846              		.loc 1 3562 18 view .LVU2402
 7847 0356 C9F80000 		str	r0, [r9]
3563:src/keys.c    **** #ifdef DM42
 7848              		.loc 1 3563 5 is_stmt 1 view .LVU2403
3565:src/keys.c    ****       c = process(c);
 7849              		.loc 1 3565 5 view .LVU2404
3565:src/keys.c    ****       c = process(c);
 7850              		.loc 1 3565 8 is_stmt 0 view .LVU2405
 7851 035a 7FF40BAF 		bne	.L771
3570:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7852              		.loc 1 3570 7 is_stmt 1 view .LVU2406
3570:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7853              		.loc 1 3570 11 is_stmt 0 view .LVU2407
 7854 035e AC4A     		ldr	r2, .L1446+12
 7855 0360 1568     		ldr	r5, [r2]
3570:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7856              		.loc 1 3570 10 view .LVU2408
 7857 0362 15F47042 		ands	r2, r5, #61440
 7858 0366 1FD0     		beq	.L1089
3570:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7859              		.loc 1 3570 11 discriminator 1 view .LVU2409
 7860 0368 B2F5704F 		cmp	r2, #61440
 7861 036c 00F0AF80 		beq	.L1090
 7862              	.LBB1466:
3571:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 7863              		.loc 1 3571 2 is_stmt 1 view .LVU2410
3571:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 7864              		.loc 1 3571 28 is_stmt 0 view .LVU2411
 7865 0370 C5F30722 		ubfx	r2, r5, #8, #8
 7866 0374 A2F12004 		sub	r4, r2, #32
 7867              	.LVL657:
3571:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 7868              		.loc 1 3571 28 view .LVU2412
 7869 0378 E4B2     		uxtb	r4, r4
 7870              	.LVL658:
3572:src/keys.c    **** 	  c = nd_opcode;
 7871              		.loc 1 3572 2 is_stmt 1 view .LVU2413
3572:src/keys.c    **** 	  c = nd_opcode;
ARM GAS  /tmp/ccgiIQCZ.s 			page 242


 7872              		.loc 1 3572 5 is_stmt 0 view .LVU2414
 7873 037a 012C     		cmp	r4, #1
 7874 037c 40F2AA80 		bls	.L1096
3572:src/keys.c    **** 	  c = nd_opcode;
 7875              		.loc 1 3572 53 discriminator 1 view .LVU2415
 7876 0380 6C2C     		cmp	r4, #108
 7877 0382 00F0A780 		beq	.L1096
3572:src/keys.c    **** 	  c = nd_opcode;
 7878              		.loc 1 3572 74 discriminator 2 view .LVU2416
 7879 0386 242C     		cmp	r4, #36
 7880 0388 00F0A480 		beq	.L1096
3574:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 7881              		.loc 1 3574 7 is_stmt 1 view .LVU2417
3574:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 7882              		.loc 1 3574 32 is_stmt 0 view .LVU2418
 7883 038c A4F12D01 		sub	r1, r4, #45
3574:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 7884              		.loc 1 3574 10 view .LVU2419
 7885 0390 0629     		cmp	r1, #6
 7886 0392 00F28282 		bhi	.L1093
3575:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7887              		.loc 1 3575 4 is_stmt 1 view .LVU2420
3575:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7888              		.loc 1 3575 25 is_stmt 0 view .LVU2421
 7889 0396 4D3A     		subs	r2, r2, #77
3575:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7890              		.loc 1 3575 16 view .LVU2422
 7891 0398 88F80F20 		strb	r2, [r8, #15]
3576:src/keys.c    **** 	}
 7892              		.loc 1 3576 4 is_stmt 1 view .LVU2423
 7893              	.LVL659:
3576:src/keys.c    **** 	}
 7894              		.loc 1 3576 4 is_stmt 0 view .LVU2424
 7895              	.LBE1466:
3605:src/keys.c    ****     case STATE_SST:
 7896              		.loc 1 3605 5 is_stmt 1 view .LVU2425
3405:src/keys.c    ****   if (was_paused && Pause == 0)
 7897              		.loc 1 3405 7 is_stmt 0 view .LVU2426
 7898 039c 0546     		mov	r5, r0
 7899              	.LBB1469:
3576:src/keys.c    **** 	}
 7900              		.loc 1 3576 6 view .LVU2427
 7901 039e 3324     		movs	r4, #51
 7902              	.LVL660:
3576:src/keys.c    **** 	}
 7903              		.loc 1 3576 6 view .LVU2428
 7904 03a0 8BE6     		b	.L799
 7905              	.LVL661:
 7906              	.L1351:
3576:src/keys.c    **** 	}
 7907              		.loc 1 3576 6 view .LVU2429
 7908              	.LBE1469:
3411:src/keys.c    ****     }
 7909              		.loc 1 3411 7 is_stmt 1 view .LVU2430
 7910 03a2 FFF7FEFF 		bl	xeq_xrom
 7911              	.LVL662:
3411:src/keys.c    ****     }
ARM GAS  /tmp/ccgiIQCZ.s 			page 243


 7912              		.loc 1 3411 7 is_stmt 0 view .LVU2431
 7913 03a6 37E6     		b	.L769
 7914              	.L1089:
3599:src/keys.c    ****       }      
 7915              		.loc 1 3599 2 is_stmt 1 view .LVU2432
 7916              	.LBB1470:
 7917              	.LBB1471:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 7918              		.loc 1 717 5 is_stmt 0 view .LVU2433
 7919 03a8 C5F30723 		ubfx	r3, r5, #8, #8
 7920 03ac 012B     		cmp	r3, #1
 7921              	.LBE1471:
 7922              	.LBE1470:
3599:src/keys.c    ****       }      
 7923              		.loc 1 3599 6 view .LVU2434
 7924 03ae 2C46     		mov	r4, r5
 7925              	.LVL663:
 7926              	.LBB1474:
 7927              	.LBI1470:
 716:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 7928              		.loc 1 716 12 is_stmt 1 view .LVU2435
 7929              	.LBB1472:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 7930              		.loc 1 717 2 view .LVU2436
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 7931              		.loc 1 717 5 is_stmt 0 view .LVU2437
 7932 03b0 00F0C981 		beq	.L1341
 7933              	.LVL664:
 7934              	.L834:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 7935              		.loc 1 717 5 view .LVU2438
 7936              	.LBE1472:
 7937              	.LBE1474:
3605:src/keys.c    ****     case STATE_SST:
 7938              		.loc 1 3605 5 is_stmt 1 view .LVU2439
 7939 03b4 A4F12B03 		sub	r3, r4, #43
 7940 03b8 082B     		cmp	r3, #8
 7941 03ba 00F2FF80 		bhi	.L1098
 7942 03be 01A2     		adr	r2, .L1099
 7943 03c0 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7944              		.p2align 2
 7945              	.L1099:
 7946 03c4 F3030000 		.word	.L1100+1
 7947 03c8 F3030000 		.word	.L1100+1
 7948 03cc BD050000 		.word	.L1098+1
 7949 03d0 65040000 		.word	.L1031+1
 7950 03d4 BF040000 		.word	.L1033+1
 7951 03d8 8F040000 		.word	.L1034+1
 7952 03dc CF020000 		.word	.L809+1
 7953 03e0 FF030000 		.word	.L1346+1
 7954 03e4 FF030000 		.word	.L1346+1
 7955              		.p2align 1
 7956              	.L1360:
3480:src/keys.c    **** 	return;
 7957              		.loc 1 3480 23 is_stmt 0 discriminator 1 view .LVU2440
 7958 03e8 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
3480:src/keys.c    **** 	return;
ARM GAS  /tmp/ccgiIQCZ.s 			page 244


 7959              		.loc 1 3480 20 discriminator 1 view .LVU2441
 7960 03ea 002A     		cmp	r2, #0
 7961 03ec 7FF4B8AE 		bne	.L785
 7962 03f0 89E6     		b	.L768
 7963              	.L1100:
3632:src/keys.c    **** 	set_window(c);
 7964              		.loc 1 3632 7 is_stmt 1 view .LVU2442
3632:src/keys.c    **** 	set_window(c);
 7965              		.loc 1 3632 12 is_stmt 0 view .LVU2443
 7966 03f2 FFF7FEFF 		bl	is_bad_cmdline
 7967              	.LVL665:
3632:src/keys.c    **** 	set_window(c);
 7968              		.loc 1 3632 10 view .LVU2444
 7969 03f6 0546     		mov	r5, r0
 7970 03f8 0028     		cmp	r0, #0
 7971 03fa 00F0B581 		beq	.L1104
 7972              	.LVL666:
 7973              	.L1346:
3632:src/keys.c    **** 	set_window(c);
 7974              		.loc 1 3632 10 view .LVU2445
 7975 03fe 3368     		ldr	r3, [r6]
3405:src/keys.c    ****   if (was_paused && Pause == 0)
 7976              		.loc 1 3405 7 view .LVU2446
 7977 0400 0025     		movs	r5, #0
 7978 0402 5AE6     		b	.L799
 7979              	.LVL667:
 7980              	.L1359:
3472:src/keys.c    **** 	JustStopped = 0;
 7981              		.loc 1 3472 27 discriminator 1 view .LVU2447
 7982 0404 FFF7FEFF 		bl	is_key_pressed
 7983              	.LVL668:
3472:src/keys.c    **** 	JustStopped = 0;
 7984              		.loc 1 3472 23 discriminator 1 view .LVU2448
 7985 0408 0028     		cmp	r0, #0
 7986 040a 7FF4A4AE 		bne	.L783
3473:src/keys.c    ****       }
 7987              		.loc 1 3473 2 is_stmt 1 view .LVU2449
3473:src/keys.c    ****       }
 7988              		.loc 1 3473 14 is_stmt 0 view .LVU2450
 7989 040e 2860     		str	r0, [r5]
 7990 0410 A1E6     		b	.L783
 7991              	.LVL669:
 7992              	.L806:
 7993              	.LBB1475:
 7994              	.LBB1412:
3219:src/keys.c    **** 	set_pc(0);
 7995              		.loc 1 3219 7 is_stmt 1 view .LVU2451
3219:src/keys.c    **** 	set_pc(0);
 7996              		.loc 1 3219 11 is_stmt 0 view .LVU2452
 7997 0412 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7998              	.LVL670:
3219:src/keys.c    **** 	set_pc(0);
 7999              		.loc 1 3219 10 view .LVU2453
 8000 0414 4BB1     		cbz	r3, .L808
3219:src/keys.c    **** 	set_pc(0);
 8001              		.loc 1 3219 20 view .LVU2454
 8002 0416 7F4B     		ldr	r3, .L1446+16
ARM GAS  /tmp/ccgiIQCZ.s 			page 245


 8003 0418 1B68     		ldr	r3, [r3]
 8004 041a B3F8E037 		ldrh	r3, [r3, #2016]
3219:src/keys.c    **** 	set_pc(0);
 8005              		.loc 1 3219 17 view .LVU2455
 8006 041e 9B0B     		lsrs	r3, r3, #14
 8007 0420 032B     		cmp	r3, #3
 8008 0422 02D1     		bne	.L808
3220:src/keys.c    ****       Pause = 0;
 8009              		.loc 1 3220 2 is_stmt 1 view .LVU2456
 8010 0424 0020     		movs	r0, #0
 8011 0426 FFF7FEFF 		bl	set_pc
 8012              	.LVL671:
 8013              	.L808:
3221:src/keys.c    ****       xeq_xrom();
 8014              		.loc 1 3221 7 view .LVU2457
3221:src/keys.c    ****       xeq_xrom();
 8015              		.loc 1 3221 13 is_stmt 0 view .LVU2458
 8016 042a 0025     		movs	r5, #0
 8017 042c 3D70     		strb	r5, [r7]
3222:src/keys.c    ****       set_running_off();
 8018              		.loc 1 3222 7 is_stmt 1 view .LVU2459
 8019 042e FFF7FEFF 		bl	xeq_xrom
 8020              	.LVL672:
3223:src/keys.c    ****       DispMsg = "Stopped";
 8021              		.loc 1 3223 7 view .LVU2460
 8022 0432 FFF7FEFF 		bl	set_running_off
 8023              	.LVL673:
3224:src/keys.c    ****       State2.disp_freeze = 0;
 8024              		.loc 1 3224 7 view .LVU2461
3225:src/keys.c    ****       return STATE_UNFINISHED;
 8025              		.loc 1 3225 26 is_stmt 0 view .LVU2462
 8026 0436 784A     		ldr	r2, .L1446+20
3224:src/keys.c    ****       State2.disp_freeze = 0;
 8027              		.loc 1 3224 15 view .LVU2463
 8028 0438 7848     		ldr	r0, .L1446+24
3225:src/keys.c    ****       return STATE_UNFINISHED;
 8029              		.loc 1 3225 26 view .LVU2464
 8030 043a D17D     		ldrb	r1, [r2, #23]	@ zero_extendqisi2
3224:src/keys.c    ****       State2.disp_freeze = 0;
 8031              		.loc 1 3224 15 view .LVU2465
 8032 043c 784C     		ldr	r4, .L1446+28
 8033              	.LVL674:
3224:src/keys.c    ****       State2.disp_freeze = 0;
 8034              		.loc 1 3224 15 view .LVU2466
 8035 043e 0460     		str	r4, [r0]
3225:src/keys.c    ****       return STATE_UNFINISHED;
 8036              		.loc 1 3225 7 is_stmt 1 view .LVU2467
3225:src/keys.c    ****       return STATE_UNFINISHED;
 8037              		.loc 1 3225 26 is_stmt 0 view .LVU2468
 8038 0440 65F30411 		bfi	r1, r5, #4, #1
 8039 0444 3368     		ldr	r3, [r6]
 8040 0446 D175     		strb	r1, [r2, #23]
3226:src/keys.c    ****     }
 8041              		.loc 1 3226 7 is_stmt 1 view .LVU2469
3226:src/keys.c    ****     }
 8042              		.loc 1 3226 14 is_stmt 0 view .LVU2470
 8043 0448 3324     		movs	r4, #51
ARM GAS  /tmp/ccgiIQCZ.s 			page 246


 8044 044a 36E6     		b	.L799
 8045              	.LVL675:
 8046              	.L1026:
 8047              	.LBB986:
3348:src/keys.c    **** 			print_tab(0);
 8048              		.loc 1 3348 3 is_stmt 1 view .LVU2471
3348:src/keys.c    **** 			print_tab(0);
 8049              		.loc 1 3348 6 is_stmt 0 view .LVU2472
 8050 044c 1007     		lsls	r0, r2, #28
 8051              	.LVL676:
3348:src/keys.c    **** 			print_tab(0);
 8052              		.loc 1 3348 6 view .LVU2473
 8053 044e 09D4     		bmi	.L1031
3348:src/keys.c    **** 			print_tab(0);
 8054              		.loc 1 3348 26 view .LVU2474
 8055 0450 6720     		movs	r0, #103
 8056 0452 FFF7FEFF 		bl	get_user_flag
 8057              	.LVL677:
3348:src/keys.c    **** 			print_tab(0);
 8058              		.loc 1 3348 23 view .LVU2475
 8059 0456 28B1     		cbz	r0, .L1031
3349:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
 8060              		.loc 1 3349 4 is_stmt 1 view .LVU2476
 8061 0458 5046     		mov	r0, r10
 8062 045a FFF7FEFF 		bl	print_tab
 8063              	.LVL678:
3350:src/keys.c    **** 		}
 8064              		.loc 1 3350 4 view .LVU2477
 8065 045e C020     		movs	r0, #192
 8066 0460 FFF7FEFF 		bl	print_alpha
 8067              	.LVL679:
3350:src/keys.c    **** 		}
 8068              		.loc 1 3350 4 is_stmt 0 view .LVU2478
 8069              	.LBE986:
 8070              	.LBE1412:
 8071              	.LBE1475:
3605:src/keys.c    ****     case STATE_SST:
 8072              		.loc 1 3605 5 is_stmt 1 view .LVU2479
 8073              	.L1031:
3607:src/keys.c    ****       OpCodeDisplayPending = 0;
 8074              		.loc 1 3607 7 view .LVU2480
3607:src/keys.c    ****       OpCodeDisplayPending = 0;
 8075              		.loc 1 3607 14 is_stmt 0 view .LVU2481
 8076 0464 694A     		ldr	r2, .L1446+8
3608:src/keys.c    ****       xeq_sst_bst(0);
 8077              		.loc 1 3608 28 view .LVU2482
 8078 0466 6F4B     		ldr	r3, .L1446+32
 8079 0468 0020     		movs	r0, #0
3607:src/keys.c    ****       OpCodeDisplayPending = 0;
 8080              		.loc 1 3607 14 view .LVU2483
 8081 046a 2E24     		movs	r4, #46
 8082 046c 1460     		str	r4, [r2]
3608:src/keys.c    ****       xeq_sst_bst(0);
 8083              		.loc 1 3608 7 is_stmt 1 view .LVU2484
3608:src/keys.c    ****       xeq_sst_bst(0);
 8084              		.loc 1 3608 28 is_stmt 0 view .LVU2485
 8085 046e 1860     		str	r0, [r3]
ARM GAS  /tmp/ccgiIQCZ.s 			page 247


3609:src/keys.c    ****       break;
 8086              		.loc 1 3609 7 is_stmt 1 view .LVU2486
3405:src/keys.c    ****   if (was_paused && Pause == 0)
 8087              		.loc 1 3405 7 is_stmt 0 view .LVU2487
 8088 0470 0546     		mov	r5, r0
3609:src/keys.c    ****       break;
 8089              		.loc 1 3609 7 view .LVU2488
 8090 0472 FFF7FEFF 		bl	xeq_sst_bst
 8091              	.LVL680:
 8092              	.L1345:
3610:src/keys.c    **** 
 8093              		.loc 1 3610 7 is_stmt 1 view .LVU2489
 8094 0476 3368     		ldr	r3, [r6]
 8095 0478 1FE6     		b	.L799
 8096              	.LVL681:
 8097              	.L1388:
 8098              	.LBB1476:
 8099              	.LBB1413:
 8100              	.LBB1046:
3348:src/keys.c    **** 			print_tab(0);
 8101              		.loc 1 3348 26 is_stmt 0 view .LVU2490
 8102 047a 6720     		movs	r0, #103
 8103              	.LVL682:
3348:src/keys.c    **** 			print_tab(0);
 8104              		.loc 1 3348 26 view .LVU2491
 8105 047c FFF7FEFF 		bl	get_user_flag
 8106              	.LVL683:
3348:src/keys.c    **** 			print_tab(0);
 8107              		.loc 1 3348 23 view .LVU2492
 8108 0480 28B1     		cbz	r0, .L1034
3349:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
 8109              		.loc 1 3349 4 is_stmt 1 view .LVU2493
 8110 0482 5046     		mov	r0, r10
 8111 0484 FFF7FEFF 		bl	print_tab
 8112              	.LVL684:
3350:src/keys.c    **** 		}
 8113              		.loc 1 3350 4 view .LVU2494
 8114 0488 C020     		movs	r0, #192
 8115 048a FFF7FEFF 		bl	print_alpha
 8116              	.LVL685:
3350:src/keys.c    **** 		}
 8117              		.loc 1 3350 4 is_stmt 0 view .LVU2495
 8118              	.LBE1046:
 8119              	.LBE1413:
 8120              	.LBE1476:
3605:src/keys.c    ****     case STATE_SST:
 8121              		.loc 1 3605 5 is_stmt 1 view .LVU2496
 8122              	.L1034:
3617:src/keys.c    **** 	delprog();
 8123              		.loc 1 3617 7 view .LVU2497
3617:src/keys.c    **** 	delprog();
 8124              		.loc 1 3617 11 is_stmt 0 view .LVU2498
 8125 048e 98F81650 		ldrb	r5, [r8, #22]	@ zero_extendqisi2
3617:src/keys.c    **** 	delprog();
 8126              		.loc 1 3617 10 view .LVU2499
 8127 0492 6B06     		lsls	r3, r5, #25
 8128 0494 40F16281 		bpl	.L1127
ARM GAS  /tmp/ccgiIQCZ.s 			page 248


3619:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 8129              		.loc 1 3619 12 is_stmt 1 view .LVU2500
3619:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 8130              		.loc 1 3619 15 is_stmt 0 view .LVU2501
 8131 0498 15F00805 		ands	r5, r5, #8
 8132 049c 40F0CC80 		bne	.L1382
 8133              	.L1348:
 8134 04a0 3368     		ldr	r3, [r6]
 8135              	.LBB1477:
3622:src/keys.c    ****       }
 8136              		.loc 1 3622 9 view .LVU2502
 8137 04a2 3024     		movs	r4, #48
 8138 04a4 09E6     		b	.L799
 8139              	.LVL686:
 8140              	.L1022:
3622:src/keys.c    ****       }
 8141              		.loc 1 3622 9 view .LVU2503
 8142              	.LBE1477:
 8143              	.LBB1478:
 8144              	.LBB1414:
 8145              	.LBB1047:
3348:src/keys.c    **** 			print_tab(0);
 8146              		.loc 1 3348 3 is_stmt 1 view .LVU2504
3348:src/keys.c    **** 			print_tab(0);
 8147              		.loc 1 3348 6 is_stmt 0 view .LVU2505
 8148 04a6 1407     		lsls	r4, r2, #28
 8149 04a8 09D4     		bmi	.L1033
3348:src/keys.c    **** 			print_tab(0);
 8150              		.loc 1 3348 26 view .LVU2506
 8151 04aa 6720     		movs	r0, #103
 8152              	.LVL687:
3348:src/keys.c    **** 			print_tab(0);
 8153              		.loc 1 3348 26 view .LVU2507
 8154 04ac FFF7FEFF 		bl	get_user_flag
 8155              	.LVL688:
3348:src/keys.c    **** 			print_tab(0);
 8156              		.loc 1 3348 23 view .LVU2508
 8157 04b0 28B1     		cbz	r0, .L1033
3349:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
 8158              		.loc 1 3349 4 is_stmt 1 view .LVU2509
 8159 04b2 5046     		mov	r0, r10
 8160 04b4 FFF7FEFF 		bl	print_tab
 8161              	.LVL689:
3350:src/keys.c    **** 		}
 8162              		.loc 1 3350 4 view .LVU2510
 8163 04b8 C020     		movs	r0, #192
 8164 04ba FFF7FEFF 		bl	print_alpha
 8165              	.LVL690:
3350:src/keys.c    **** 		}
 8166              		.loc 1 3350 4 is_stmt 0 view .LVU2511
 8167              	.LBE1047:
 8168              	.LBE1414:
 8169              	.LBE1478:
3605:src/keys.c    ****     case STATE_SST:
 8170              		.loc 1 3605 5 is_stmt 1 view .LVU2512
 8171              	.L1033:
3613:src/keys.c    ****       break;
ARM GAS  /tmp/ccgiIQCZ.s 			page 249


 8172              		.loc 1 3613 7 view .LVU2513
 8173 04be 4FF0FF30 		mov	r0, #-1
 8174 04c2 FFF7FEFF 		bl	xeq_sst_bst
 8175              	.LVL691:
3614:src/keys.c    **** 
 8176              		.loc 1 3614 7 view .LVU2514
3405:src/keys.c    ****   if (was_paused && Pause == 0)
 8177              		.loc 1 3405 7 is_stmt 0 view .LVU2515
 8178 04c6 0025     		movs	r5, #0
 8179 04c8 3368     		ldr	r3, [r6]
3614:src/keys.c    **** 
 8180              		.loc 1 3614 7 view .LVU2516
 8181 04ca 2F24     		movs	r4, #47
 8182 04cc F5E5     		b	.L799
 8183              	.LVL692:
 8184              	.L1090:
3586:src/keys.c    **** 	if ( (nd_opcode & 0xffff00ff) == 0 ) { // no argument
 8185              		.loc 1 3586 12 is_stmt 1 view .LVU2517
3587:src/keys.c    **** 	  init_arg(opDBL(nd_opcode));
 8186              		.loc 1 3587 2 view .LVU2518
3587:src/keys.c    **** 	  init_arg(opDBL(nd_opcode));
 8187              		.loc 1 3587 5 is_stmt 0 view .LVU2519
 8188 04ce 35F47F43 		bics	r3, r5, #65280
 8189 04d2 3BD0     		beq	.L1383
 8190              	.LVL693:
 8191              	.L1096:
3595:src/keys.c    **** 	}
 8192              		.loc 1 3595 4 is_stmt 1 view .LVU2520
 8193 04d4 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3595:src/keys.c    **** 	}
 8194              		.loc 1 3595 6 is_stmt 0 view .LVU2521
 8195 04d8 2C46     		mov	r4, r5
 8196              	.LVL694:
 8197              	.L861:
3641:src/keys.c    **** 	NonProgrammable = 0;
 8198              		.loc 1 3641 7 is_stmt 1 view .LVU2522
3641:src/keys.c    **** 	NonProgrammable = 0;
 8199              		.loc 1 3641 10 is_stmt 0 view .LVU2523
 8200 04da 12F04002 		ands	r2, r2, #64
 8201 04de 40F06781 		bne	.L1384
3641:src/keys.c    **** 	NonProgrammable = 0;
 8202              		.loc 1 3641 26 view .LVU2524
 8203 04e2 514B     		ldr	r3, .L1446+36
 8204 04e4 1968     		ldr	r1, [r3]
 8205 04e6 0029     		cmp	r1, #0
 8206 04e8 41F06282 		bne	.L1385
 8207              	.LVL695:
 8208              	.L1108:
3663:src/keys.c    ****       }
 8209              		.loc 1 3663 2 is_stmt 1 view .LVU2525
 8210 04ec 2846     		mov	r0, r5
 8211 04ee FFF7FEFF 		bl	stoprog
 8212              	.LVL696:
 8213 04f2 84E7     		b	.L1346
 8214              	.LVL697:
 8215              	.L1355:
3663:src/keys.c    ****       }
ARM GAS  /tmp/ccgiIQCZ.s 			page 250


 8216              		.loc 1 3663 2 is_stmt 0 view .LVU2526
 8217 04f4 434E     		ldr	r6, .L1446
 8218 04f6 3368     		ldr	r3, [r6]
 8219 04f8 32E6     		b	.L785
 8220              	.L1354:
3494:src/keys.c    ****       lcd_refresh();
 8221              		.loc 1 3494 7 is_stmt 1 view .LVU2527
 8222 04fa 8D20     		movs	r0, #141
 8223 04fc FFF7FEFF 		bl	clr_dot
 8224              	.LVL698:
3495:src/keys.c    ****     }
 8225              		.loc 1 3495 7 view .LVU2528
 8226 0500 4A4B     		ldr	r3, .L1446+40
 8227 0502 9847     		blx	r3
 8228              	.LVL699:
 8229 0504 9FE5     		b	.L787
 8230              	.L790:
3536:src/keys.c    **** #ifndef CONSOLE
 8231              		.loc 1 3536 7 view .LVU2529
 8232 0506 404B     		ldr	r3, .L1446+4
 8233 0508 8D20     		movs	r0, #141
 8234 050a 1968     		ldr	r1, [r3]
 8235 050c FFF7FEFF 		bl	dot
 8236              	.LVL700:
3538:src/keys.c    **** 	if (!WasDataEntry) {
 8237              		.loc 1 3538 7 view .LVU2530
3538:src/keys.c    **** 	if (!WasDataEntry) {
 8238              		.loc 1 3538 11 is_stmt 0 view .LVU2531
 8239 0510 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3538:src/keys.c    **** 	if (!WasDataEntry) {
 8240              		.loc 1 3538 10 view .LVU2532
 8241 0514 9D06     		lsls	r5, r3, #26
 8242 0516 3FF5F6AD 		bmi	.L768
3539:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 8243              		.loc 1 3539 2 is_stmt 1 view .LVU2533
3539:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 8244              		.loc 1 3539 6 is_stmt 0 view .LVU2534
 8245 051a 454B     		ldr	r3, .L1446+44
3539:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 8246              		.loc 1 3539 5 view .LVU2535
 8247 051c 1B68     		ldr	r3, [r3]
 8248 051e 002B     		cmp	r3, #0
 8249 0520 00F0F481 		beq	.L1386
3544:src/keys.c    **** 	}
 8250              		.loc 1 3544 4 is_stmt 1 view .LVU2536
 8251 0524 414B     		ldr	r3, .L1446+40
 8252              		.loc 1 3682 1 is_stmt 0 view .LVU2537
 8253 0526 03B0     		add	sp, sp, #12
 8254              		.cfi_remember_state
 8255              		.cfi_def_cfa_offset 36
 8256              		@ sp needed
 8257 0528 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8258              		.cfi_restore 14
 8259              		.cfi_restore 11
 8260              		.cfi_restore 10
 8261              		.cfi_restore 9
 8262              		.cfi_restore 8
ARM GAS  /tmp/ccgiIQCZ.s 			page 251


 8263              		.cfi_restore 7
 8264              		.cfi_restore 6
 8265              		.cfi_restore 5
 8266              		.cfi_restore 4
 8267              		.cfi_def_cfa_offset 0
 8268              	.LVL701:
3544:src/keys.c    **** 	}
 8269              		.loc 1 3544 4 view .LVU2538
 8270 052c 1847     		bx	r3	@ indirect register sibling call
 8271              	.LVL702:
 8272              	.L1356:
 8273              		.cfi_restore_state
3524:src/keys.c    ****       else {
 8274              		.loc 1 3524 2 is_stmt 1 view .LVU2539
 8275 052e FFF7FEFF 		bl	xeq_sst_bst
 8276              	.LVL703:
 8277 0532 344E     		ldr	r6, .L1446
 8278 0534 B4E5     		b	.L792
 8279              	.L1358:
3457:src/keys.c    **** 	  // Rely on the held shift key instead of the toggle
 8280              		.loc 1 3457 23 is_stmt 0 discriminator 1 view .LVU2540
 8281 0536 FFF7FEFF 		bl	shift_down
 8282              	.LVL704:
3457:src/keys.c    **** 	  // Rely on the held shift key instead of the toggle
 8283              		.loc 1 3457 20 discriminator 1 view .LVU2541
 8284 053a 0028     		cmp	r0, #0
 8285 053c 3FF406AE 		beq	.L774
3459:src/keys.c    **** 	}
 8286              		.loc 1 3459 4 is_stmt 1 view .LVU2542
3459:src/keys.c    **** 	}
 8287              		.loc 1 3459 18 is_stmt 0 view .LVU2543
 8288 0540 354B     		ldr	r3, .L1446+20
 8289 0542 0022     		movs	r2, #0
 8290 0544 1A74     		strb	r2, [r3, #16]
 8291 0546 01E6     		b	.L774
 8292              	.L1357:
3459:src/keys.c    **** 	}
 8293              		.loc 1 3459 18 view .LVU2544
 8294 0548 2E4E     		ldr	r6, .L1446
 8295 054a A9E5     		b	.L792
 8296              	.L1383:
3588:src/keys.c    **** 	  State2.multi = 1;
 8297              		.loc 1 3588 4 is_stmt 1 view .LVU2545
 8298              	.LVL705:
 8299              	.LBB1479:
 8300              	.LBI1479:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 8301              		.loc 1 552 13 view .LVU2546
 8302              	.LBB1480:
 553:src/keys.c    **** 		return;
 8303              		.loc 1 553 2 view .LVU2547
 553:src/keys.c    **** 		return;
 8304              		.loc 1 553 6 is_stmt 0 view .LVU2548
 8305 054c FFF7FEFF 		bl	is_bad_cmdline
 8306              	.LVL706:
 553:src/keys.c    **** 		return;
 8307              		.loc 1 553 5 view .LVU2549
ARM GAS  /tmp/ccgiIQCZ.s 			page 252


 8308 0550 18B9     		cbnz	r0, .L1097
 8309 0552 C5F30320 		ubfx	r0, r5, #8, #4
 8310 0556 FFF7FEFF 		bl	init_arg.part.0
 8311              	.LVL707:
 8312              	.L1097:
 553:src/keys.c    **** 		return;
 8313              		.loc 1 553 5 view .LVU2550
 8314              	.LBE1480:
 8315              	.LBE1479:
3589:src/keys.c    **** 	  State2.alphashift = 0;
 8316              		.loc 1 3589 4 is_stmt 1 view .LVU2551
3590:src/keys.c    **** 	  State2.rarg = 0;
 8317              		.loc 1 3590 4 view .LVU2552
3591:src/keys.c    **** 	  c = STATE_UNFINISHED;
 8318              		.loc 1 3591 4 view .LVU2553
3589:src/keys.c    **** 	  State2.alphashift = 0;
 8319              		.loc 1 3589 17 is_stmt 0 view .LVU2554
 8320 055a D8F81420 		ldr	r2, [r8, #20]
 8321 055e 3368     		ldr	r3, [r6]
 8322 0560 22F44012 		bic	r2, r2, #3145728
 8323 0564 22F40062 		bic	r2, r2, #2048
 8324 0568 42F40062 		orr	r2, r2, #2048
 8325 056c C8F81420 		str	r2, [r8, #20]
3592:src/keys.c    **** 	}
 8326              		.loc 1 3592 4 is_stmt 1 view .LVU2555
 8327              	.LVL708:
3605:src/keys.c    ****     case STATE_SST:
 8328              		.loc 1 3605 5 view .LVU2556
3405:src/keys.c    ****   if (was_paused && Pause == 0)
 8329              		.loc 1 3405 7 is_stmt 0 view .LVU2557
 8330 0570 0025     		movs	r5, #0
3592:src/keys.c    **** 	}
 8331              		.loc 1 3592 6 view .LVU2558
 8332 0572 3324     		movs	r4, #51
 8333 0574 A1E5     		b	.L799
 8334              	.LVL709:
 8335              	.L777:
3447:src/keys.c    **** 	    /*
 8336              		.loc 1 3447 9 is_stmt 1 view .LVU2559
3447:src/keys.c    **** 	    /*
 8337              		.loc 1 3447 13 is_stmt 0 view .LVU2560
 8338 0576 FFF7FEFF 		bl	keyticks
 8339              	.LVL710:
3447:src/keys.c    **** 	    /*
 8340              		.loc 1 3447 12 view .LVU2561
 8341 057a 0C28     		cmp	r0, #12
 8342 057c 7FF7E1AD 		ble	.L776
3451:src/keys.c    **** 	    message("NULL", CNULL);
 8343              		.loc 1 3451 6 is_stmt 1 view .LVU2562
3452:src/keys.c    **** 	    // Force display update on key-up
 8344              		.loc 1 3452 6 is_stmt 0 view .LVU2563
 8345 0580 2C48     		ldr	r0, .L1446+48
3451:src/keys.c    **** 	    message("NULL", CNULL);
 8346              		.loc 1 3451 13 view .LVU2564
 8347 0582 2E60     		str	r6, [r5]
3452:src/keys.c    **** 	    // Force display update on key-up
 8348              		.loc 1 3452 6 is_stmt 1 view .LVU2565
ARM GAS  /tmp/ccgiIQCZ.s 			page 253


 8349 0584 3146     		mov	r1, r6
 8350 0586 FFF7FEFF 		bl	message
 8351              	.LVL711:
3454:src/keys.c    **** 	  }
 8352              		.loc 1 3454 6 view .LVU2566
3454:src/keys.c    **** 	  }
 8353              		.loc 1 3454 23 is_stmt 0 view .LVU2567
 8354 058a 234B     		ldr	r3, .L1446+20
 8355 058c DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 8356 058e 66F34512 		bfi	r2, r6, #5, #1
 8357 0592 DA75     		strb	r2, [r3, #23]
 8358 0594 D5E5     		b	.L776
 8359              	.LVL712:
 8360              	.L1005:
 8361              	.LBB1481:
 8362              	.LBB1415:
 8363              	.LBB1048:
 8364              	.LBB987:
 8365              	.LBB988:
1887:src/keys.c    **** 		return STATE_UNFINISHED;
 8366              		.loc 1 1887 2 is_stmt 1 view .LVU2568
1887:src/keys.c    **** 		return STATE_UNFINISHED;
 8367              		.loc 1 1887 5 is_stmt 0 view .LVU2569
 8368 0596 0028     		cmp	r0, #0
 8369 0598 01F0B681 		beq	.L1016
1889:src/keys.c    **** }
 8370              		.loc 1 1889 2 is_stmt 1 view .LVU2570
1889:src/keys.c    **** }
 8371              		.loc 1 1889 9 is_stmt 0 view .LVU2571
 8372 059c 40F48844 		orr	r4, r0, #17408
 8373              	.L1021:
 8374              	.LVL713:
1889:src/keys.c    **** }
 8375              		.loc 1 1889 9 view .LVU2572
 8376              	.LBE988:
 8377              	.LBE987:
3348:src/keys.c    **** 			print_tab(0);
 8378              		.loc 1 3348 3 is_stmt 1 view .LVU2573
3348:src/keys.c    **** 			print_tab(0);
 8379              		.loc 1 3348 6 is_stmt 0 view .LVU2574
 8380 05a0 12F00805 		ands	r5, r2, #8
 8381 05a4 41F0DB81 		bne	.L1387
3348:src/keys.c    **** 			print_tab(0);
 8382              		.loc 1 3348 26 view .LVU2575
 8383 05a8 6720     		movs	r0, #103
 8384              	.LVL714:
3348:src/keys.c    **** 			print_tab(0);
 8385              		.loc 1 3348 26 view .LVU2576
 8386 05aa FFF7FEFF 		bl	get_user_flag
 8387              	.LVL715:
3348:src/keys.c    **** 			print_tab(0);
 8388              		.loc 1 3348 23 view .LVU2577
 8389 05ae 28B1     		cbz	r0, .L1098
3349:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
 8390              		.loc 1 3349 4 is_stmt 1 view .LVU2578
 8391 05b0 2846     		mov	r0, r5
 8392 05b2 FFF7FEFF 		bl	print_tab
ARM GAS  /tmp/ccgiIQCZ.s 			page 254


 8393              	.LVL716:
3350:src/keys.c    **** 		}
 8394              		.loc 1 3350 4 view .LVU2579
 8395 05b6 C020     		movs	r0, #192
 8396 05b8 FFF7FEFF 		bl	print_alpha
 8397              	.LVL717:
 8398              	.L1098:
3350:src/keys.c    **** 		}
 8399              		.loc 1 3350 4 is_stmt 0 view .LVU2580
 8400              	.LBE1048:
 8401              	.LBE1415:
 8402              	.LBE1481:
3641:src/keys.c    **** 	NonProgrammable = 0;
 8403              		.loc 1 3641 7 is_stmt 1 view .LVU2581
3641:src/keys.c    **** 	NonProgrammable = 0;
 8404              		.loc 1 3641 11 is_stmt 0 view .LVU2582
 8405 05bc 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3641:src/keys.c    **** 	NonProgrammable = 0;
 8406              		.loc 1 3641 10 view .LVU2583
 8407 05c0 5A06     		lsls	r2, r3, #25
 8408 05c2 41F13084 		bpl	.L1106
 8409 05c6 184A     		ldr	r2, .L1446+36
 8410 05c8 2546     		mov	r5, r4
 8411              	.L1107:
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8412              		.loc 1 3642 2 is_stmt 1 view .LVU2584
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8413              		.loc 1 3642 18 is_stmt 0 view .LVU2585
 8414 05ca 0023     		movs	r3, #0
3643:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8415              		.loc 1 3643 5 view .LVU2586
 8416 05cc 142C     		cmp	r4, #20
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8417              		.loc 1 3642 18 view .LVU2587
 8418 05ce 1360     		str	r3, [r2]
3643:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8419              		.loc 1 3643 2 is_stmt 1 view .LVU2588
3643:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8420              		.loc 1 3643 5 is_stmt 0 view .LVU2589
 8421 05d0 00F2E580 		bhi	.L1105
3644:src/keys.c    **** 	    // Data entry key
 8422              		.loc 1 3644 4 is_stmt 1 view .LVU2590
3644:src/keys.c    **** 	    // Data entry key
 8423              		.loc 1 3644 7 is_stmt 0 view .LVU2591
 8424 05d4 24B9     		cbnz	r4, .L1110
3644:src/keys.c    **** 	    // Data entry key
 8425              		.loc 1 3644 38 discriminator 1 view .LVU2592
 8426 05d6 FFF7FEFF 		bl	is_bad_cmdline
 8427              	.LVL718:
3644:src/keys.c    **** 	    // Data entry key
 8428              		.loc 1 3644 34 discriminator 1 view .LVU2593
 8429 05da 0028     		cmp	r0, #0
 8430 05dc 7FF40FAF 		bne	.L1346
 8431              	.L1110:
3647:src/keys.c    **** #endif
 8432              		.loc 1 3647 6 is_stmt 1 view .LVU2594
3649:src/keys.c    **** 	    xeq(c);
ARM GAS  /tmp/ccgiIQCZ.s 			page 255


 8433              		.loc 1 3649 37 is_stmt 0 view .LVU2595
 8434 05e0 98F81C50 		ldrb	r5, [r8, #28]	@ zero_extendqisi2
3647:src/keys.c    **** #endif
 8435              		.loc 1 3647 19 view .LVU2596
 8436 05e4 0123     		movs	r3, #1
3650:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 8437              		.loc 1 3650 6 view .LVU2597
 8438 05e6 2046     		mov	r0, r4
3647:src/keys.c    **** #endif
 8439              		.loc 1 3647 19 view .LVU2598
 8440 05e8 C9F80030 		str	r3, [r9]
3649:src/keys.c    **** 	    xeq(c);
 8441              		.loc 1 3649 6 is_stmt 1 view .LVU2599
3649:src/keys.c    **** 	    xeq(c);
 8442              		.loc 1 3649 37 is_stmt 0 view .LVU2600
 8443 05ec B5FA85F5 		clz	r5, r5
3650:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 8444              		.loc 1 3650 6 view .LVU2601
 8445 05f0 FFF7FEFF 		bl	xeq
 8446              	.LVL719:
3651:src/keys.c    **** 	  }
 8447              		.loc 1 3651 38 view .LVU2602
 8448 05f4 98F81C00 		ldrb	r0, [r8, #28]	@ zero_extendqisi2
 8449 05f8 3368     		ldr	r3, [r6]
3649:src/keys.c    **** 	    xeq(c);
 8450              		.loc 1 3649 37 view .LVU2603
 8451 05fa 6D09     		lsrs	r5, r5, #5
 8452              	.LVL720:
3650:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 8453              		.loc 1 3650 6 is_stmt 1 view .LVU2604
3651:src/keys.c    **** 	  }
 8454              		.loc 1 3651 6 view .LVU2605
3651:src/keys.c    **** 	  }
 8455              		.loc 1 3651 20 is_stmt 0 view .LVU2606
 8456 05fc 0028     		cmp	r0, #0
 8457 05fe 08BF     		it	eq
 8458 0600 0125     		moveq	r5, #1
 8459              	.LVL721:
3651:src/keys.c    **** 	  }
 8460              		.loc 1 3651 20 view .LVU2607
 8461 0602 5AE5     		b	.L799
 8462              	.L1447:
 8463              		.align	2
 8464              	.L1446:
 8465 0604 00000000 		.word	Running
 8466 0608 00000000 		.word	ShowRPN
 8467 060c 00000000 		.word	OpCode
 8468 0610 00000000 		.word	nd_opcode
 8469 0614 00000000 		.word	main_ram
 8470 0618 00000000 		.word	StateWhileOn
 8471 061c 00000000 		.word	DispMsg
 8472 0620 0C000000 		.word	.LC2
 8473 0624 00000000 		.word	OpCodeDisplayPending
 8474 0628 00000000 		.word	NonProgrammable
 8475 062c 31020008 		.word	134218289
 8476 0630 00000000 		.word	WasDataEntry
 8477 0634 04000000 		.word	.LC1
ARM GAS  /tmp/ccgiIQCZ.s 			page 256


 8478              	.LVL722:
 8479              	.L1382:
3651:src/keys.c    **** 	  }
 8480              		.loc 1 3651 20 view .LVU2608
 8481 0638 DFF8DCB4 		ldr	fp, .L1448+40
 8482              	.L1102:
 8483              	.LBB1482:
3620:src/keys.c    **** 	if (p > Alpha)
 8484              		.loc 1 3620 2 is_stmt 1 view .LVU2609
3620:src/keys.c    **** 	if (p > Alpha)
 8485              		.loc 1 3620 22 is_stmt 0 view .LVU2610
 8486 063c DBF80000 		ldr	r0, [fp]
3620:src/keys.c    **** 	if (p > Alpha)
 8487              		.loc 1 3620 12 view .LVU2611
 8488 0640 0021     		movs	r1, #0
 8489 0642 00F5F660 		add	r0, r0, #1968
 8490 0646 FFF7FEFF 		bl	find_char
 8491              	.LVL723:
3621:src/keys.c    **** 	  *--p = '\0';
 8492              		.loc 1 3621 8 view .LVU2612
 8493 064a DBF80030 		ldr	r3, [fp]
 8494              	.LVL724:
3621:src/keys.c    **** 	  *--p = '\0';
 8495              		.loc 1 3621 2 is_stmt 1 view .LVU2613
3621:src/keys.c    **** 	  *--p = '\0';
 8496              		.loc 1 3621 8 is_stmt 0 view .LVU2614
 8497 064e 03F5F663 		add	r3, r3, #1968
3621:src/keys.c    **** 	  *--p = '\0';
 8498              		.loc 1 3621 5 view .LVU2615
 8499 0652 9842     		cmp	r0, r3
 8500 0654 00F29381 		bhi	.L1103
 8501 0658 3368     		ldr	r3, [r6]
 8502              	.LBE1482:
3405:src/keys.c    ****   if (was_paused && Pause == 0)
 8503              		.loc 1 3405 7 view .LVU2616
 8504 065a 0025     		movs	r5, #0
 8505              	.LBB1483:
3621:src/keys.c    **** 	  *--p = '\0';
 8506              		.loc 1 3621 5 view .LVU2617
 8507 065c 3024     		movs	r4, #48
 8508 065e 2CE5     		b	.L799
 8509              	.LVL725:
 8510              	.L1373:
3621:src/keys.c    **** 	  *--p = '\0';
 8511              		.loc 1 3621 5 view .LVU2618
 8512              	.LBE1483:
 8513              	.LBB1484:
 8514              	.LBB1416:
 8515              	.LBB1049:
 8516              	.LBB859:
 278:src/keys.c    **** 				case K53:
 8517              		.loc 1 278 4 is_stmt 1 view .LVU2619
 8518 0660 221F     		subs	r2, r4, #4
 8519 0662 1D2A     		cmp	r2, #29
 8520 0664 3FF6F3AD 		bhi	.L923
 8521 0668 0FF2040E 		adr	lr, .L906
 8522 066c 5EF822F0 		ldr	pc, [lr, r2, lsl #2]
ARM GAS  /tmp/ccgiIQCZ.s 			page 257


 8523              		.p2align 2
 8524              	.L906:
 8525 0670 FF060000 		.word	.L909+1
 8526 0674 1D070000 		.word	.L908+1
 8527 0678 4F020000 		.word	.L923+1
 8528 067c 4F020000 		.word	.L923+1
 8529 0680 4F020000 		.word	.L923+1
 8530 0684 4F020000 		.word	.L923+1
 8531 0688 4F020000 		.word	.L923+1
 8532 068c 4F020000 		.word	.L923+1
 8533 0690 05070000 		.word	.L907+1
 8534 0694 4F020000 		.word	.L923+1
 8535 0698 4F020000 		.word	.L923+1
 8536 069c 4F020000 		.word	.L923+1
 8537 06a0 4F020000 		.word	.L923+1
 8538 06a4 4F020000 		.word	.L923+1
 8539 06a8 4F020000 		.word	.L923+1
 8540 06ac 4F020000 		.word	.L923+1
 8541 06b0 4F020000 		.word	.L923+1
 8542 06b4 4F020000 		.word	.L923+1
 8543 06b8 4F020000 		.word	.L923+1
 8544 06bc 4F020000 		.word	.L923+1
 8545 06c0 4F020000 		.word	.L923+1
 8546 06c4 4F020000 		.word	.L923+1
 8547 06c8 4F020000 		.word	.L923+1
 8548 06cc 4F020000 		.word	.L923+1
 8549 06d0 4F020000 		.word	.L923+1
 8550 06d4 4F020000 		.word	.L923+1
 8551 06d8 4F020000 		.word	.L923+1
 8552 06dc 4F020000 		.word	.L923+1
 8553 06e0 4F020000 		.word	.L923+1
 8554 06e4 E9060000 		.word	.L1143+1
 8555              		.p2align 1
 8556              	.L1143:
 280:src/keys.c    **** 				case K04:
 8557              		.loc 1 280 13 is_stmt 0 view .LVU2620
 8558 06e8 4FF0020A 		mov	r10, #2
 8559              	.LVL726:
 8560              	.L905:
 280:src/keys.c    **** 				case K04:
 8561              		.loc 1 280 13 view .LVU2621
 8562              	.LBE859:
 8563              	.LBE1049:
3321:src/keys.c    **** 			return STATE_UNFINISHED;
 8564              		.loc 1 3321 3 is_stmt 1 view .LVU2622
3321:src/keys.c    **** 			return STATE_UNFINISHED;
 8565              		.loc 1 3321 7 is_stmt 0 view .LVU2623
 8566 06ec FFF7FEFF 		bl	is_bad_cmdline
 8567              	.LVL727:
3321:src/keys.c    **** 			return STATE_UNFINISHED;
 8568              		.loc 1 3321 6 view .LVU2624
 8569 06f0 0446     		mov	r4, r0
 8570 06f2 0028     		cmp	r0, #0
 8571 06f4 00F0C683 		beq	.L928
 8572              	.L1349:
3321:src/keys.c    **** 			return STATE_UNFINISHED;
 8573              		.loc 1 3321 6 view .LVU2625
ARM GAS  /tmp/ccgiIQCZ.s 			page 258


 8574 06f8 3368     		ldr	r3, [r6]
3325:src/keys.c    **** 	}
 8575              		.loc 1 3325 10 view .LVU2626
 8576 06fa 3324     		movs	r4, #51
 8577 06fc DDE4     		b	.L799
 8578              	.LVL728:
 8579              	.L909:
 8580              	.LBB1050:
 8581              	.LBB860:
 277:src/keys.c    **** 			switch (c) {
 8582              		.loc 1 277 6 view .LVU2627
 8583 06fe 4FF0120A 		mov	r10, #18
 8584 0702 F3E7     		b	.L905
 8585              	.L907:
 286:src/keys.c    **** 						finish_cpx_entry(1);
 8586              		.loc 1 286 6 is_stmt 1 view .LVU2628
 286:src/keys.c    **** 						finish_cpx_entry(1);
 8587              		.loc 1 286 9 is_stmt 0 view .LVU2629
 8588 0704 1CF0080F 		tst	ip, #8
 8589 0708 41F0C480 		bne	.L910
 286:src/keys.c    **** 						finish_cpx_entry(1);
 8590              		.loc 1 286 22 view .LVU2630
 8591 070c 90F8EB37 		ldrb	r3, [r0, #2027]	@ zero_extendqisi2
 8592              	.LVL729:
 286:src/keys.c    **** 						finish_cpx_entry(1);
 8593              		.loc 1 286 22 view .LVU2631
 8594 0710 1B07     		lsls	r3, r3, #28
 8595 0712 01F1BF80 		bmi	.L910
 289:src/keys.c    **** 				default:
 8596              		.loc 1 289 13 view .LVU2632
 8597 0716 4FF0110A 		mov	r10, #17
 8598 071a E7E7     		b	.L905
 8599              	.LVL730:
 8600              	.L908:
 284:src/keys.c    **** 				case K20:
 8601              		.loc 1 284 6 is_stmt 1 view .LVU2633
 284:src/keys.c    **** 				case K20:
 8602              		.loc 1 284 6 is_stmt 0 view .LVU2634
 8603              	.LBE860:
 8604              	.LBE1050:
3320:src/keys.c    **** 		if (is_bad_cmdline())
 8605              		.loc 1 3320 2 is_stmt 1 view .LVU2635
 8606              	.LBB1051:
 8607              	.LBB861:
 284:src/keys.c    **** 				case K20:
 8608              		.loc 1 284 13 is_stmt 0 view .LVU2636
 8609 071c 4FF0090A 		mov	r10, #9
 8610 0720 E4E7     		b	.L905
 8611              	.LVL731:
 8612              	.L1156:
 284:src/keys.c    **** 				case K20:
 8613              		.loc 1 284 13 view .LVU2637
 8614              	.LBE861:
 8615              	.LBE1051:
 8616              	.LBB1052:
 8617              	.LBB1053:
2997:src/keys.c    **** 
ARM GAS  /tmp/ccgiIQCZ.s 			page 259


 8618              		.loc 1 2997 6 view .LVU2638
 8619 0722 3324     		movs	r4, #51
 8620              	.LVL732:
 8621              	.L958:
3030:src/keys.c    **** 		break;
 8622              		.loc 1 3030 3 is_stmt 1 view .LVU2639
 8623 0724 5846     		mov	r0, fp
 8624 0726 FFF7FEFF 		bl	set_pc
 8625              	.LVL733:
3031:src/keys.c    **** 
 8626              		.loc 1 3031 3 view .LVU2640
 8627              	.L970:
3084:src/keys.c    **** 	State2.labellist = 0;
 8628              		.loc 1 3084 2 view .LVU2641
3085:src/keys.c    **** 	return check_confirm(op);
 8629              		.loc 1 3085 19 is_stmt 0 view .LVU2642
 8630 072a 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
3084:src/keys.c    **** 	State2.labellist = 0;
 8631              		.loc 1 3084 16 view .LVU2643
 8632 072e 0022     		movs	r2, #0
 8633              	.LBB1054:
 8634              	.LBB1055:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 8635              		.loc 1 717 5 view .LVU2644
 8636 0730 C4F30723 		ubfx	r3, r4, #8, #8
 8637              	.LBE1055:
 8638              	.LBE1054:
3085:src/keys.c    **** 	return check_confirm(op);
 8639              		.loc 1 3085 19 view .LVU2645
 8640 0734 62F38201 		bfi	r1, r2, #2, #1
 8641              	.LBB1060:
 8642              	.LBB1056:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 8643              		.loc 1 717 5 view .LVU2646
 8644 0738 012B     		cmp	r3, #1
 8645              	.LBE1056:
 8646              	.LBE1060:
3085:src/keys.c    **** 	return check_confirm(op);
 8647              		.loc 1 3085 19 view .LVU2647
 8648 073a 88F81710 		strb	r1, [r8, #23]
3084:src/keys.c    **** 	State2.labellist = 0;
 8649              		.loc 1 3084 16 view .LVU2648
 8650 073e A8F80820 		strh	r2, [r8, #8]	@ movhi
3085:src/keys.c    **** 	return check_confirm(op);
 8651              		.loc 1 3085 2 is_stmt 1 view .LVU2649
3086:src/keys.c    **** }
 8652              		.loc 1 3086 2 view .LVU2650
 8653              	.LVL734:
 8654              	.LBB1061:
 8655              	.LBI1054:
 716:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8656              		.loc 1 716 12 view .LVU2651
 8657              	.LBB1057:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 8658              		.loc 1 717 2 view .LVU2652
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 8659              		.loc 1 717 5 is_stmt 0 view .LVU2653
ARM GAS  /tmp/ccgiIQCZ.s 			page 260


 8660 0742 7FF437AE 		bne	.L834
 8661              	.LVL735:
 8662              	.L1341:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 8663              		.loc 1 717 5 view .LVU2654
 8664              	.LBE1057:
 8665              	.LBE1061:
 8666              	.LBE1053:
 8667              	.LBE1052:
 8668              	.LBE1416:
 8669              	.LBE1484:
 8670              	.LBB1485:
 8671              	.LBB1473:
 8672 0746 2046     		mov	r0, r4
 8673 0748 FFF7FEFF 		bl	check_confirm.part.0
 8674              	.LVL736:
 8675 074c 0446     		mov	r4, r0
 8676 074e 31E6     		b	.L834
 8677              	.LVL737:
 8678              	.L1019:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 8679              		.loc 1 717 5 view .LVU2655
 8680              	.LBE1473:
 8681              	.LBE1485:
 8682              	.LBB1486:
 8683              	.LBB1417:
 8684              	.LBB1086:
3348:src/keys.c    **** 			print_tab(0);
 8685              		.loc 1 3348 3 is_stmt 1 view .LVU2656
3348:src/keys.c    **** 			print_tab(0);
 8686              		.loc 1 3348 6 is_stmt 0 view .LVU2657
 8687 0750 1107     		lsls	r1, r2, #28
 8688 0752 7FF592AE 		bpl	.L1388
 8689              	.LVL738:
3348:src/keys.c    **** 			print_tab(0);
 8690              		.loc 1 3348 6 view .LVU2658
 8691              	.LBE1086:
 8692              	.LBE1417:
 8693              	.LBE1486:
3617:src/keys.c    **** 	delprog();
 8694              		.loc 1 3617 7 is_stmt 1 view .LVU2659
3617:src/keys.c    **** 	delprog();
 8695              		.loc 1 3617 10 is_stmt 0 view .LVU2660
 8696 0756 5306     		lsls	r3, r2, #25
 8697 0758 3FF570AF 		bmi	.L1102
 8698              	.LVL739:
 8699              	.L1127:
3618:src/keys.c    ****       else if (State2.alphas) {
 8700              		.loc 1 3618 2 is_stmt 1 view .LVU2661
 8701 075c FFF7FEFF 		bl	delprog
 8702              	.LVL740:
3405:src/keys.c    ****   if (was_paused && Pause == 0)
 8703              		.loc 1 3405 7 is_stmt 0 view .LVU2662
 8704 0760 0025     		movs	r5, #0
 8705 0762 3368     		ldr	r3, [r6]
 8706 0764 3024     		movs	r4, #48
 8707 0766 A8E4     		b	.L799
ARM GAS  /tmp/ccgiIQCZ.s 			page 261


 8708              	.LVL741:
 8709              	.L1104:
3633:src/keys.c    ****       break;
 8710              		.loc 1 3633 2 is_stmt 1 view .LVU2663
 8711 0768 2046     		mov	r0, r4
 8712 076a FFF7FEFF 		bl	set_window
 8713              	.LVL742:
 8714 076e 3368     		ldr	r3, [r6]
 8715 0770 A3E4     		b	.L799
 8716              	.LVL743:
 8717              	.L1059:
 8718              	.LBB1487:
 8719              	.LBB1418:
 8720              	.LBB1087:
 8721              	.LBB960:
1360:src/keys.c    ****        if (shift == SHIFT_F ) {
 8722              		.loc 1 1360 8 view .LVU2664
 8723              	.LBB875:
 8724              	.LBI875:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 8725              		.loc 1 114 13 view .LVU2665
 8726              	.LBE875:
 8727              	.LBE960:
 8728              	.LBE1087:
 8729              	.LBE1418:
 8730              	.LBE1487:
 115:src/keys.c    **** }
 8731              		.loc 1 115 2 view .LVU2666
 8732              	.LBB1488:
 8733              	.LBB1419:
 8734              	.LBB1088:
 8735              	.LBB961:
 8736              	.LBB882:
 8737              	.LBB876:
 8738              	.LBI876:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 8739              		.loc 1 104 20 view .LVU2667
 8740              	.LBB877:
 105:src/keys.c    **** 	State2.shifts = shift;
 8741              		.loc 1 105 2 view .LVU2668
 8742              	.LBB878:
 8743              	.LBI878:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 8744              		.loc 1 96 13 view .LVU2669
 8745              	.LBB879:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8746              		.loc 1 97 2 view .LVU2670
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8747              		.loc 1 97 18 is_stmt 0 view .LVU2671
 8748 0772 FFF7FEFF 		bl	shift_down
 8749              	.LVL744:
  98:src/keys.c    **** }
 8750              		.loc 1 98 2 is_stmt 1 view .LVU2672
 8751              	.LBE879:
 8752              	.LBE878:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8753              		.loc 1 106 2 view .LVU2673
ARM GAS  /tmp/ccgiIQCZ.s 			page 262


 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8754              		.loc 1 106 16 is_stmt 0 view .LVU2674
 8755 0776 0023     		movs	r3, #0
 8756              	.LBE877:
 8757              	.LBE876:
 8758              	.LBE882:
1361:src/keys.c    **** 	 return OP_NIL | OP_C_MIM;
 8759              		.loc 1 1361 11 view .LVU2675
 8760 0778 BAF1010F 		cmp	r10, #1
 8761              	.LBB883:
 8762              	.LBB881:
 8763              	.LBB880:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8764              		.loc 1 106 16 view .LVU2676
 8765 077c 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 8766              		.loc 1 108 2 is_stmt 1 view .LVU2677
 8767              	.LVL745:
 108:src/keys.c    **** }
 8768              		.loc 1 108 2 is_stmt 0 view .LVU2678
 8769              	.LBE880:
 8770              	.LBE881:
 8771              	.LBE883:
1361:src/keys.c    **** 	 return OP_NIL | OP_C_MIM;
 8772              		.loc 1 1361 8 is_stmt 1 view .LVU2679
1361:src/keys.c    **** 	 return OP_NIL | OP_C_MIM;
 8773              		.loc 1 1361 11 is_stmt 0 view .LVU2680
 8774 0780 01F01F83 		beq	.L1067
1364:src/keys.c    **** 	 return OP_NIL | OP_C_MRE;
 8775              		.loc 1 1364 13 is_stmt 1 view .LVU2681
1364:src/keys.c    **** 	 return OP_NIL | OP_C_MRE;
 8776              		.loc 1 1364 16 is_stmt 0 view .LVU2682
 8777 0784 BAF1030F 		cmp	r10, #3
 8778 0788 41F07982 		bne	.L1065
 8779              	.LVL746:
1364:src/keys.c    **** 	 return OP_NIL | OP_C_MRE;
 8780              		.loc 1 1364 16 view .LVU2683
 8781              	.LBE961:
 8782              	.LBE1088:
 8783              	.LBE1419:
 8784              	.LBE1488:
3641:src/keys.c    **** 	NonProgrammable = 0;
 8785              		.loc 1 3641 7 is_stmt 1 view .LVU2684
3641:src/keys.c    **** 	NonProgrammable = 0;
 8786              		.loc 1 3641 11 is_stmt 0 view .LVU2685
 8787 078c 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3641:src/keys.c    **** 	NonProgrammable = 0;
 8788              		.loc 1 3641 10 view .LVU2686
 8789 0790 5106     		lsls	r1, r2, #25
 8790 0792 41F1C182 		bpl	.L1167
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8791              		.loc 1 3642 2 is_stmt 1 view .LVU2687
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8792              		.loc 1 3642 18 is_stmt 0 view .LVU2688
 8793 0796 D64A     		ldr	r2, .L1448
3643:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8794              		.loc 1 3643 32 view .LVU2689
ARM GAS  /tmp/ccgiIQCZ.s 			page 263


 8795 0798 40F2CD15 		movw	r5, #461
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8796              		.loc 1 3642 18 view .LVU2690
 8797 079c 1360     		str	r3, [r2]
3643:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8798              		.loc 1 3643 2 is_stmt 1 view .LVU2691
 8799              	.LVL747:
 8800              	.L1105:
3656:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 8801              		.loc 1 3656 4 view .LVU2692
3656:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 8802              		.loc 1 3656 11 is_stmt 0 view .LVU2693
 8803 079e D54A     		ldr	r2, .L1448+4
3657:src/keys.c    **** 	  lcd_refresh(); // Update the RPN annunciator
 8804              		.loc 1 3657 25 view .LVU2694
 8805 07a0 D54B     		ldr	r3, .L1448+8
3656:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 8806              		.loc 1 3656 11 view .LVU2695
 8807 07a2 1560     		str	r5, [r2]
3657:src/keys.c    **** 	  lcd_refresh(); // Update the RPN annunciator
 8808              		.loc 1 3657 4 is_stmt 1 view .LVU2696
3657:src/keys.c    **** 	  lcd_refresh(); // Update the RPN annunciator
 8809              		.loc 1 3657 25 is_stmt 0 view .LVU2697
 8810 07a4 0122     		movs	r2, #1
 8811 07a6 1A60     		str	r2, [r3]
3658:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
 8812              		.loc 1 3658 4 is_stmt 1 view .LVU2698
 8813 07a8 D44B     		ldr	r3, .L1448+12
 8814 07aa D54E     		ldr	r6, .L1448+16
 8815 07ac 9847     		blx	r3
 8816              	.LVL748:
3659:src/keys.c    **** 	}
 8817              		.loc 1 3659 4 view .LVU2699
 8818 07ae A8E4     		b	.L1111
 8819              	.LVL749:
 8820              	.L1384:
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8821              		.loc 1 3642 2 view .LVU2700
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8822              		.loc 1 3642 18 is_stmt 0 view .LVU2701
 8823 07b0 CF4B     		ldr	r3, .L1448
 8824 07b2 0022     		movs	r2, #0
 8825 07b4 1A60     		str	r2, [r3]
3643:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8826              		.loc 1 3643 2 is_stmt 1 view .LVU2702
 8827 07b6 F2E7     		b	.L1105
 8828              	.L778:
3441:src/keys.c    **** 	      DispMsg = TraceBuffer;
 8829              		.loc 1 3441 8 view .LVU2703
 8830 07b8 D24E     		ldr	r6, .L1448+20
 8831 07ba 3146     		mov	r1, r6
 8832 07bc FFF7FEFF 		bl	prt
 8833              	.LVL750:
 8834 07c0 2A46     		mov	r2, r5
 8835 07c2 0146     		mov	r1, r0
 8836 07c4 3046     		mov	r0, r6
 8837 07c6 FFF7FEFF 		bl	scopy_char
ARM GAS  /tmp/ccgiIQCZ.s 			page 264


 8838              	.LVL751:
3442:src/keys.c    **** 	    }
 8839              		.loc 1 3442 8 view .LVU2704
3442:src/keys.c    **** 	    }
 8840              		.loc 1 3442 16 is_stmt 0 view .LVU2705
 8841 07ca CF4B     		ldr	r3, .L1448+24
 8842 07cc 1E60     		str	r6, [r3]
 8843 07ce B3E4     		b	.L779
 8844              	.LVL752:
 8845              	.L1363:
 8846              	.LBB1489:
 8847              	.LBB1420:
3275:src/keys.c    **** 
 8848              		.loc 1 3275 3 is_stmt 1 view .LVU2706
 8849              	.LBB1089:
 8850              	.LBI1089:
2877:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
 8851              		.loc 1 2877 12 view .LVU2707
 8852              	.LBB1090:
2879:src/keys.c    **** #ifdef DM42
 8853              		.loc 1 2879 2 view .LVU2708
 8854 07d0 E3B2     		uxtb	r3, r4
 8855 07d2 0E3B     		subs	r3, r3, #14
 8856 07d4 192B     		cmp	r3, #25
 8857 07d6 8FD8     		bhi	.L1349
 8858 07d8 01A2     		adr	r2, .L826
 8859 07da 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8860 07de 00BF     		.p2align 2
 8861              	.L826:
 8862 07e0 4D080000 		.word	.L827+1
 8863 07e4 F9060000 		.word	.L1349+1
 8864 07e8 4D080000 		.word	.L827+1
 8865 07ec F9060000 		.word	.L1349+1
 8866 07f0 F9060000 		.word	.L1349+1
 8867 07f4 F9060000 		.word	.L1349+1
 8868 07f8 F9060000 		.word	.L1349+1
 8869 07fc F9060000 		.word	.L1349+1
 8870 0800 F9060000 		.word	.L1349+1
 8871 0804 F9060000 		.word	.L1349+1
 8872 0808 F9060000 		.word	.L1349+1
 8873 080c F9060000 		.word	.L1349+1
 8874 0810 F9060000 		.word	.L1349+1
 8875 0814 F9060000 		.word	.L1349+1
 8876 0818 F9060000 		.word	.L1349+1
 8877 081c F9060000 		.word	.L1349+1
 8878 0820 F9060000 		.word	.L1349+1
 8879 0824 F9060000 		.word	.L1349+1
 8880 0828 65080000 		.word	.L825+1
 8881 082c F9060000 		.word	.L1349+1
 8882 0830 F9060000 		.word	.L1349+1
 8883 0834 F9060000 		.word	.L1349+1
 8884 0838 F9060000 		.word	.L1349+1
 8885 083c F9060000 		.word	.L1349+1
 8886 0840 F9060000 		.word	.L1349+1
 8887 0844 65080000 		.word	.L825+1
 8888              		.p2align 1
 8889              	.L828:
ARM GAS  /tmp/ccgiIQCZ.s 			page 265


2888:src/keys.c    **** 	  }
 8890              		.loc 1 2888 26 view .LVU2709
 8891 0848 FFF7FEFF 		bl	clpall
 8892              	.LVL753:
2888:src/keys.c    **** 	  }
 8893              		.loc 1 2888 36 view .LVU2710
 8894              	.L827:
2897:src/keys.c    **** 	  State2.digval = 0;
 8895              		.loc 1 2897 4 view .LVU2711
2897:src/keys.c    **** 	  State2.digval = 0;
 8896              		.loc 1 2897 19 is_stmt 0 view .LVU2712
 8897 084c 98F81420 		ldrb	r2, [r8, #20]	@ zero_extendqisi2
 8898 0850 3368     		ldr	r3, [r6]
 8899 0852 6FF30202 		bfc	r2, #0, #3
2898:src/keys.c    **** 	  break;
 8900              		.loc 1 2898 18 view .LVU2713
 8901 0856 0021     		movs	r1, #0
2897:src/keys.c    **** 	  State2.digval = 0;
 8902              		.loc 1 2897 19 view .LVU2714
 8903 0858 88F81420 		strb	r2, [r8, #20]
2898:src/keys.c    **** 	  break;
 8904              		.loc 1 2898 4 is_stmt 1 view .LVU2715
2898:src/keys.c    **** 	  break;
 8905              		.loc 1 2898 18 is_stmt 0 view .LVU2716
 8906 085c A8F80810 		strh	r1, [r8, #8]	@ movhi
2899:src/keys.c    **** 	default:			// No state change
 8907              		.loc 1 2899 4 is_stmt 1 view .LVU2717
 8908              	.LBE1090:
 8909              	.LBE1089:
3275:src/keys.c    **** 
 8910              		.loc 1 3275 10 is_stmt 0 view .LVU2718
 8911 0860 3324     		movs	r4, #51
 8912              	.LVL754:
 8913              	.LBB1092:
 8914              	.LBB1091:
2899:src/keys.c    **** 	default:			// No state change
 8915              		.loc 1 2899 4 view .LVU2719
 8916 0862 2AE4     		b	.L799
 8917              	.LVL755:
 8918              	.L825:
2884:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 8919              		.loc 1 2884 4 is_stmt 1 view .LVU2720
2884:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 8920              		.loc 1 2884 18 is_stmt 0 view .LVU2721
 8921 0864 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
 8922 0868 03F00703 		and	r3, r3, #7
 8923 086c 013B     		subs	r3, r3, #1
 8924 086e 032B     		cmp	r3, #3
 8925 0870 ECD8     		bhi	.L827
 8926 0872 01A2     		adr	r2, .L829
 8927 0874 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8928              		.p2align 2
 8929              	.L829:
 8930 0878 95080000 		.word	.L832+1
 8931 087c 8F080000 		.word	.L831+1
 8932 0880 89080000 		.word	.L830+1
 8933 0884 49080000 		.word	.L828+1
ARM GAS  /tmp/ccgiIQCZ.s 			page 266


 8934              		.p2align 1
 8935              	.L830:
2887:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 8936              		.loc 1 2887 26 is_stmt 1 view .LVU2722
 8937 0888 FFF7FEFF 		bl	clrprog
 8938              	.LVL756:
2887:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 8939              		.loc 1 2887 37 view .LVU2723
2887:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 8940              		.loc 1 2887 4 is_stmt 0 view .LVU2724
 8941 088c DEE7     		b	.L827
 8942              	.L831:
2886:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 8943              		.loc 1 2886 25 is_stmt 1 view .LVU2725
 8944 088e FFF7FEFF 		bl	reset
 8945              	.LVL757:
2886:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 8946              		.loc 1 2886 34 view .LVU2726
2886:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 8947              		.loc 1 2886 4 is_stmt 0 view .LVU2727
 8948 0892 DBE7     		b	.L827
 8949              	.L832:
2885:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8950              		.loc 1 2885 25 is_stmt 1 view .LVU2728
 8951 0894 FFF7FEFF 		bl	clrall
 8952              	.LVL758:
2885:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8953              		.loc 1 2885 35 view .LVU2729
2885:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8954              		.loc 1 2885 4 is_stmt 0 view .LVU2730
 8955 0898 D8E7     		b	.L827
 8956              	.LVL759:
 8957              	.L1093:
2885:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8958              		.loc 1 2885 4 view .LVU2731
 8959              	.LBE1091:
 8960              	.LBE1092:
 8961              	.LBE1420:
 8962              	.LBE1489:
 8963              	.LBB1490:
3578:src/keys.c    **** 	  c = nd_opcode;
 8964              		.loc 1 3578 7 is_stmt 1 view .LVU2732
3578:src/keys.c    **** 	  c = nd_opcode;
 8965              		.loc 1 3578 10 is_stmt 0 view .LVU2733
 8966 089a 15F0FF0F 		tst	r5, #255
 8967 089e 7FF419AE 		bne	.L1096
3582:src/keys.c    **** 	  c = STATE_UNFINISHED;
 8968              		.loc 1 3582 4 is_stmt 1 view .LVU2734
 8969              	.LVL760:
 8970              	.LBB1467:
 8971              	.LBI1467:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 8972              		.loc 1 552 13 view .LVU2735
 8973              	.LBB1468:
 553:src/keys.c    **** 		return;
 8974              		.loc 1 553 2 view .LVU2736
 553:src/keys.c    **** 		return;
ARM GAS  /tmp/ccgiIQCZ.s 			page 267


 8975              		.loc 1 553 6 is_stmt 0 view .LVU2737
 8976 08a2 FFF7FEFF 		bl	is_bad_cmdline
 8977              	.LVL761:
 553:src/keys.c    **** 		return;
 8978              		.loc 1 553 5 view .LVU2738
 8979 08a6 0546     		mov	r5, r0
 8980 08a8 0028     		cmp	r0, #0
 8981 08aa 40F07982 		bne	.L1389
 8982 08ae 2046     		mov	r0, r4
 8983 08b0 FFF7FEFF 		bl	init_arg.part.0
 8984              	.LVL762:
 8985              	.LBE1468:
 8986              	.LBE1467:
3583:src/keys.c    **** 	}
 8987              		.loc 1 3583 6 view .LVU2739
 8988 08b4 3324     		movs	r4, #51
 8989              	.LVL763:
3583:src/keys.c    **** 	}
 8990              		.loc 1 3583 6 view .LVU2740
 8991 08b6 3368     		ldr	r3, [r6]
 8992 08b8 FFF7FFBB 		b	.L799
 8993              	.LVL764:
 8994              	.L1361:
3583:src/keys.c    **** 	}
 8995              		.loc 1 3583 6 view .LVU2741
 8996              	.LBE1490:
 8997              	.LBB1491:
 8998              	.LBB1421:
3242:src/keys.c    **** #else
 8999              		.loc 1 3242 47 view .LVU2742
 9000 08bc DFF86482 		ldr	r8, .L1448+52
 9001 08c0 98F80E20 		ldrb	r2, [r8, #14]	@ zero_extendqisi2
3242:src/keys.c    **** #else
 9002              		.loc 1 3242 36 view .LVU2743
 9003 08c4 43EA0201 		orr	r1, r3, r2
 9004 08c8 11F0FF0F 		tst	r1, #255
 9005 08cc 7FF46EAC 		bne	.L811
3242:src/keys.c    **** #else
 9006              		.loc 1 3242 76 view .LVU2744
 9007 08d0 8E49     		ldr	r1, .L1448+28
 9008 08d2 D8F81420 		ldr	r2, [r8, #20]
 9009 08d6 1142     		tst	r1, r2
 9010 08d8 7FF473AC 		bne	.L822
3248:src/keys.c    **** 	stack_restore();
 9011              		.loc 1 3248 7 is_stmt 1 view .LVU2745
3248:src/keys.c    **** 	stack_restore();
 9012              		.loc 1 3248 11 is_stmt 0 view .LVU2746
 9013 08dc DFF838B2 		ldr	fp, .L1448+40
 9014 08e0 DBF80030 		ldr	r3, [fp]
 9015              	.LVL765:
3248:src/keys.c    **** 	stack_restore();
 9016              		.loc 1 3248 11 view .LVU2747
 9017 08e4 93F8E417 		ldrb	r1, [r3, #2020]	@ zero_extendqisi2
3248:src/keys.c    **** 	stack_restore();
 9018              		.loc 1 3248 10 view .LVU2748
 9019 08e8 4C07     		lsls	r4, r1, #29
 9020              	.LVL766:
ARM GAS  /tmp/ccgiIQCZ.s 			page 268


3248:src/keys.c    **** 	stack_restore();
 9021              		.loc 1 3248 10 view .LVU2749
 9022 08ea 04D5     		bpl	.L813
3248:src/keys.c    **** 	stack_restore();
 9023              		.loc 1 3248 11 view .LVU2750
 9024 08ec 93F8DE27 		ldrb	r2, [r3, #2014]	@ zero_extendqisi2
 9025 08f0 5007     		lsls	r0, r2, #29
 9026 08f2 00F1D286 		bmi	.L1390
 9027              	.L813:
3254:src/keys.c    ****       return STATE_UNFINISHED;
 9028              		.loc 1 3254 7 is_stmt 1 view .LVU2751
 9029 08f6 FFF7FEFF 		bl	soft_init_state
 9030              	.LVL767:
3255:src/keys.c    ****     }
 9031              		.loc 1 3255 7 view .LVU2752
3255:src/keys.c    ****     }
 9032              		.loc 1 3255 14 is_stmt 0 view .LVU2753
 9033 08fa 3324     		movs	r4, #51
 9034 08fc 3368     		ldr	r3, [r6]
 9035 08fe FFF7DCBB 		b	.L799
 9036              	.LVL768:
 9037              	.L1364:
3278:src/keys.c    **** 
 9038              		.loc 1 3278 3 is_stmt 1 view .LVU2754
3278:src/keys.c    **** 
 9039              		.loc 1 3278 10 is_stmt 0 view .LVU2755
 9040 0902 E0B2     		uxtb	r0, r4
 9041 0904 FFF7FEFF 		bl	process_arg
 9042              	.LVL769:
 9043 0908 0446     		mov	r4, r0
 9044              	.LVL770:
3278:src/keys.c    **** 
 9045              		.loc 1 3278 10 view .LVU2756
 9046 090a 53E5     		b	.L834
 9047              	.LVL771:
 9048              	.L1386:
3278:src/keys.c    **** 
 9049              		.loc 1 3278 10 view .LVU2757
 9050              	.LBE1421:
 9051              	.LBE1491:
3541:src/keys.c    **** 	}
 9052              		.loc 1 3541 4 is_stmt 1 view .LVU2758
 9053              		.loc 1 3682 1 is_stmt 0 view .LVU2759
 9054 090c 03B0     		add	sp, sp, #12
 9055              		.cfi_remember_state
 9056              		.cfi_def_cfa_offset 36
 9057              		@ sp needed
 9058 090e BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 9059              		.cfi_restore 14
 9060              		.cfi_restore 11
 9061              		.cfi_restore 10
 9062              		.cfi_restore 9
 9063              		.cfi_restore 8
 9064              		.cfi_restore 7
 9065              		.cfi_restore 6
 9066              		.cfi_restore 5
 9067              		.cfi_restore 4
ARM GAS  /tmp/ccgiIQCZ.s 			page 269


 9068              		.cfi_def_cfa_offset 0
 9069              	.LVL772:
3541:src/keys.c    **** 	}
 9070              		.loc 1 3541 4 view .LVU2760
 9071 0912 FFF7FEBF 		b	display
 9072              	.LVL773:
 9073              	.L1367:
 9074              		.cfi_restore_state
 9075              	.LBB1492:
 9076              	.LBB1422:
3287:src/keys.c    **** 
 9077              		.loc 1 3287 3 is_stmt 1 view .LVU2761
 9078              	.LBB1093:
 9079              	.LBI1093:
2343:src/keys.c    **** 	int r = State2.test;
 9080              		.loc 1 2343 12 view .LVU2762
 9081              	.LBB1094:
2344:src/keys.c    **** 	int cmpx = State2.cmplx;
 9082              		.loc 1 2344 2 view .LVU2763
2345:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 9083              		.loc 1 2345 2 view .LVU2764
 9084              	.LBB1095:
 9085              	.LBB1096:
 9086              	.LBB1097:
 9087              	.LBB1098:
 143:src/keys.c    **** }
 9088              		.loc 1 143 23 is_stmt 0 view .LVU2765
 9089 0916 7E4B     		ldr	r3, .L1448+32
 9090              	.LBE1098:
 9091              	.LBE1097:
 234:src/keys.c    **** }
 9092              		.loc 1 234 28 view .LVU2766
 9093 0918 DFF8F8C1 		ldr	ip, .L1448+36
 9094              	.LBB1102:
 9095              	.LBB1099:
 143:src/keys.c    **** }
 9096              		.loc 1 143 23 view .LVU2767
 9097 091c E4B2     		uxtb	r4, r4
 9098              	.LVL774:
 143:src/keys.c    **** }
 9099              		.loc 1 143 23 view .LVU2768
 9100              	.LBE1099:
 9101              	.LBE1102:
 9102              	.LBE1096:
 9103              	.LBE1095:
2347:src/keys.c    **** 
 9104              		.loc 1 2347 44 view .LVU2769
 9105 091e 11F0020F 		tst	r1, #2
 9106              	.LBB1107:
 9107              	.LBB1105:
 9108              	.LBB1103:
 9109              	.LBB1100:
 143:src/keys.c    **** }
 9110              		.loc 1 143 23 view .LVU2770
 9111 0922 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 9112              	.LBE1100:
 9113              	.LBE1103:
ARM GAS  /tmp/ccgiIQCZ.s 			page 270


 234:src/keys.c    **** }
 9114              		.loc 1 234 28 view .LVU2771
 9115 0924 1CF803C0 		ldrb	ip, [ip, r3]	@ zero_extendqisi2
 9116              	.LBE1105:
 9117              	.LBE1107:
2345:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 9118              		.loc 1 2345 19 view .LVU2772
 9119 0928 C1F3400E 		ubfx	lr, r1, #1, #1
 9120              	.LVL775:
2346:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 9121              		.loc 1 2346 2 is_stmt 1 view .LVU2773
 9122              	.LBB1108:
 9123              	.LBI1095:
 210:src/keys.c    **** {
 9124              		.loc 1 210 14 view .LVU2774
 9125              	.LBB1106:
 212:src/keys.c    ****     // K00 - K05
 9126              		.loc 1 212 3 view .LVU2775
 234:src/keys.c    **** }
 9127              		.loc 1 234 3 view .LVU2776
 9128              	.LBB1104:
 9129              	.LBI1097:
 131:src/keys.c    **** {
 9130              		.loc 1 131 12 view .LVU2777
 9131              	.LBB1101:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9132              		.loc 1 133 2 view .LVU2778
 143:src/keys.c    **** }
 9133              		.loc 1 143 2 view .LVU2779
 143:src/keys.c    **** }
 9134              		.loc 1 143 2 is_stmt 0 view .LVU2780
 9135              	.LBE1101:
 9136              	.LBE1104:
 9137              	.LBE1106:
 9138              	.LBE1108:
2346:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 9139              		.loc 1 2346 15 view .LVU2781
 9140 092c 2CF08003 		bic	r3, ip, #128
 9141              	.LVL776:
2347:src/keys.c    **** 
 9142              		.loc 1 2347 2 is_stmt 1 view .LVU2782
2347:src/keys.c    **** 
 9143              		.loc 1 2347 44 is_stmt 0 view .LVU2783
 9144 0930 00F05E81 		beq	.L1391
 9145              	.LVL777:
2349:src/keys.c    **** 	State2.cmplx = 0;
 9146              		.loc 1 2349 2 is_stmt 1 view .LVU2784
2350:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9147              		.loc 1 2350 15 is_stmt 0 view .LVU2785
 9148 0934 60F34101 		bfi	r1, r0, #1, #1
2351:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9149              		.loc 1 2351 5 view .LVU2786
 9150 0938 642B     		cmp	r3, #100
2349:src/keys.c    **** 	State2.cmplx = 0;
 9151              		.loc 1 2349 14 view .LVU2787
 9152 093a 4FF00700 		mov	r0, #7
2350:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
ARM GAS  /tmp/ccgiIQCZ.s 			page 271


 9153              		.loc 1 2350 15 view .LVU2788
 9154 093e 88F81510 		strb	r1, [r8, #21]
2349:src/keys.c    **** 	State2.cmplx = 0;
 9155              		.loc 1 2349 14 view .LVU2789
 9156 0942 88F80F00 		strb	r0, [r8, #15]
2350:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9157              		.loc 1 2350 2 is_stmt 1 view .LVU2790
2351:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9158              		.loc 1 2351 2 view .LVU2791
2351:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9159              		.loc 1 2351 5 is_stmt 0 view .LVU2792
 9160 0946 00F0DD84 		beq	.L1176
2347:src/keys.c    **** 
 9161              		.loc 1 2347 44 view .LVU2793
 9162 094a 4FF0340B 		mov	fp, #52
 9163              	.LVL778:
 9164              	.L1131:
2352:src/keys.c    **** 		// Lettered register
 9165              		.loc 1 2352 5 view .LVU2794
 9166 094e 7F2B     		cmp	r3, #127
2347:src/keys.c    **** 
 9167              		.loc 1 2347 60 view .LVU2795
 9168 0950 D344     		add	fp, fp, r10
2352:src/keys.c    **** 		// Lettered register
 9169              		.loc 1 2352 2 is_stmt 1 view .LVU2796
2352:src/keys.c    **** 		// Lettered register
 9170              		.loc 1 2352 5 is_stmt 0 view .LVU2797
 9171 0952 00F0C781 		beq	.L866
 9172              	.LVL779:
2352:src/keys.c    **** 		// Lettered register
 9173              		.loc 1 2352 18 view .LVU2798
 9174 0956 632B     		cmp	r3, #99
 9175 0958 40F2E581 		bls	.L867
2352:src/keys.c    **** 		// Lettered register
 9176              		.loc 1 2352 37 view .LVU2799
 9177 095c 6F2B     		cmp	r3, #111
 9178 095e 00F2C181 		bhi	.L866
2354:src/keys.c    **** 			if (n == regI_idx)
 9179              		.loc 1 2354 3 is_stmt 1 view .LVU2800
2354:src/keys.c    **** 			if (n == regI_idx)
 9180              		.loc 1 2354 6 is_stmt 0 view .LVU2801
 9181 0962 BEF1000F 		cmp	lr, #0
 9182 0966 00F05982 		beq	.L868
2354:src/keys.c    **** 			if (n == regI_idx)
 9183              		.loc 1 2354 12 view .LVU2802
 9184 096a 1CF0010F 		tst	ip, #1
 9185 096e 00F05582 		beq	.L868
2355:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 9186              		.loc 1 2355 4 is_stmt 1 view .LVU2803
2355:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 9187              		.loc 1 2355 7 is_stmt 0 view .LVU2804
 9188 0972 6D2B     		cmp	r3, #109
 9189 0974 40F0C381 		bne	.L869
2356:src/keys.c    **** 			// Disallow odd complex registers > A
 9190              		.loc 1 2356 5 is_stmt 1 view .LVU2805
2356:src/keys.c    **** 			// Disallow odd complex registers > A
 9191              		.loc 1 2356 30 is_stmt 0 view .LVU2806
ARM GAS  /tmp/ccgiIQCZ.s 			page 272


 9192 0978 0AF12904 		add	r4, r10, #41
 9193              	.LVL780:
2356:src/keys.c    **** 			// Disallow odd complex registers > A
 9194              		.loc 1 2356 30 view .LVU2807
 9195 097c 1AE5     		b	.L834
 9196              	.LVL781:
 9197              	.L1103:
2356:src/keys.c    **** 			// Disallow odd complex registers > A
 9198              		.loc 1 2356 30 view .LVU2808
 9199              	.LBE1094:
 9200              	.LBE1093:
 9201              	.LBE1422:
 9202              	.LBE1492:
 9203              	.LBB1493:
3622:src/keys.c    ****       }
 9204              		.loc 1 3622 4 is_stmt 1 view .LVU2809
3622:src/keys.c    ****       }
 9205              		.loc 1 3622 9 is_stmt 0 view .LVU2810
 9206 097e 0025     		movs	r5, #0
 9207 0980 00F8015C 		strb	r5, [r0, #-1]
 9208 0984 8CE5     		b	.L1348
 9209              	.LVL782:
 9210              	.L1365:
3622:src/keys.c    ****       }
 9211              		.loc 1 3622 9 view .LVU2811
 9212              	.LBE1493:
 9213              	.LBB1494:
 9214              	.LBB1423:
3281:src/keys.c    **** 
 9215              		.loc 1 3281 3 is_stmt 1 view .LVU2812
 9216              	.LBB1123:
 9217              	.LBI1123:
1705:src/keys.c    **** 	int pc = -1;
 9218              		.loc 1 1705 12 view .LVU2813
 9219              	.LBB1124:
1706:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
 9220              		.loc 1 1706 2 view .LVU2814
1707:src/keys.c    **** 
 9221              		.loc 1 1707 2 view .LVU2815
 9222              	.LBB1125:
 9223              	.LBI1125:
 210:src/keys.c    **** {
 9224              		.loc 1 210 14 view .LVU2816
 9225              	.LBB1126:
 212:src/keys.c    ****     // K00 - K05
 9226              		.loc 1 212 3 view .LVU2817
 234:src/keys.c    **** }
 9227              		.loc 1 234 3 view .LVU2818
 9228              	.LBB1127:
 9229              	.LBI1127:
 131:src/keys.c    **** {
 9230              		.loc 1 131 12 view .LVU2819
 9231              	.LBB1128:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9232              		.loc 1 133 2 view .LVU2820
 143:src/keys.c    **** }
 9233              		.loc 1 143 2 view .LVU2821
ARM GAS  /tmp/ccgiIQCZ.s 			page 273


 143:src/keys.c    **** }
 9234              		.loc 1 143 23 is_stmt 0 view .LVU2822
 9235 0986 624B     		ldr	r3, .L1448+32
 9236              	.LBE1128:
 9237              	.LBE1127:
 234:src/keys.c    **** }
 9238              		.loc 1 234 28 view .LVU2823
 9239 0988 624A     		ldr	r2, .L1448+36
 9240 098a E1B2     		uxtb	r1, r4
 9241              	.LVL783:
 9242              	.LBB1130:
 9243              	.LBB1129:
 143:src/keys.c    **** }
 9244              		.loc 1 143 23 view .LVU2824
 9245 098c 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 9246              	.LBE1129:
 9247              	.LBE1130:
 234:src/keys.c    **** }
 9248              		.loc 1 234 28 view .LVU2825
 9249 098e D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 9250              	.LVL784:
 234:src/keys.c    **** }
 9251              		.loc 1 234 28 view .LVU2826
 9252              	.LBE1126:
 9253              	.LBE1125:
1709:src/keys.c    **** 		// Digit 0 - 9
 9254              		.loc 1 1709 2 is_stmt 1 view .LVU2827
1709:src/keys.c    **** 		// Digit 0 - 9
 9255              		.loc 1 1709 5 is_stmt 0 view .LVU2828
 9256 0990 0928     		cmp	r0, #9
 9257 0992 40F2C081 		bls	.L1392
1714:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 9258              		.loc 1 1714 7 is_stmt 1 view .LVU2829
1714:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 9259              		.loc 1 1714 18 is_stmt 0 view .LVU2830
 9260 0996 20F08000 		bic	r0, r0, #128
 9261              	.LVL785:
1714:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 9262              		.loc 1 1714 10 view .LVU2831
 9263 099a 6428     		cmp	r0, #100
 9264 099c 00F01982 		beq	.L1393
1715:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 9265              		.loc 1 1715 7 is_stmt 1 view .LVU2832
1715:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 9266              		.loc 1 1715 10 is_stmt 0 view .LVU2833
 9267 09a0 6528     		cmp	r0, #101
 9268 09a2 00F03482 		beq	.L1394
1716:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 9269              		.loc 1 1716 7 is_stmt 1 view .LVU2834
1716:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 9270              		.loc 1 1716 10 is_stmt 0 view .LVU2835
 9271 09a6 6628     		cmp	r0, #102
 9272 09a8 00F05482 		beq	.L1395
1717:src/keys.c    **** #endif
 9273              		.loc 1 1717 7 is_stmt 1 view .LVU2836
1717:src/keys.c    **** #endif
 9274              		.loc 1 1717 10 is_stmt 0 view .LVU2837
ARM GAS  /tmp/ccgiIQCZ.s 			page 274


 9275 09ac 6728     		cmp	r0, #103
 9276 09ae 00F08784 		beq	.L1396
1719:src/keys.c    **** 		// A - D
 9277              		.loc 1 1719 7 is_stmt 1 view .LVU2838
1719:src/keys.c    **** 		// A - D
 9278              		.loc 1 1719 10 is_stmt 0 view .LVU2839
 9279 09b2 0329     		cmp	r1, #3
 9280 09b4 40F28F84 		bls	.L1397
1724:src/keys.c    **** 		// .
 9281              		.loc 1 1724 7 is_stmt 1 view .LVU2840
1724:src/keys.c    **** 		// .
 9282              		.loc 1 1724 10 is_stmt 0 view .LVU2841
 9283 09b8 2629     		cmp	r1, #38
 9284 09ba 00F0C484 		beq	.L1398
1729:src/keys.c    **** 		// ENTER - short circuit processing
 9285              		.loc 1 1729 7 is_stmt 1 view .LVU2842
1729:src/keys.c    **** 		// ENTER - short circuit processing
 9286              		.loc 1 1729 10 is_stmt 0 view .LVU2843
 9287 09be 0C29     		cmp	r1, #12
 9288 09c0 00F0B784 		beq	.L1399
1733:src/keys.c    **** 		// backspace
 9289              		.loc 1 1733 7 is_stmt 1 view .LVU2844
1733:src/keys.c    **** 		// backspace
 9290              		.loc 1 1733 10 is_stmt 0 view .LVU2845
 9291 09c4 1029     		cmp	r1, #16
 9292 09c6 00F0A885 		beq	.L1400
1742:src/keys.c    **** 		// up
 9293              		.loc 1 1742 7 is_stmt 1 view .LVU2846
1742:src/keys.c    **** 		// up
 9294              		.loc 1 1742 10 is_stmt 0 view .LVU2847
 9295 09ca 1229     		cmp	r1, #18
 9296 09cc 00F06987 		beq	.L1401
1752:src/keys.c    **** 		// down
 9297              		.loc 1 1752 7 is_stmt 1 view .LVU2848
1752:src/keys.c    **** 		// down
 9298              		.loc 1 1752 10 is_stmt 0 view .LVU2849
 9299 09d0 1829     		cmp	r1, #24
 9300 09d2 7FF491AE 		bne	.L1349
1754:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 9301              		.loc 1 1754 3 is_stmt 1 view .LVU2850
1755:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 9302              		.loc 1 1755 18 is_stmt 0 view .LVU2851
 9303 09d6 504C     		ldr	r4, .L1448+40
 9304              	.LVL786:
1754:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 9305              		.loc 1 1754 3 view .LVU2852
 9306 09d8 0120     		movs	r0, #1
 9307 09da FFF7FEFF 		bl	update_program_bounds
 9308              	.LVL787:
1755:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 9309              		.loc 1 1755 3 is_stmt 1 view .LVU2853
1755:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 9310              		.loc 1 1755 18 is_stmt 0 view .LVU2854
 9311 09de 2368     		ldr	r3, [r4]
1755:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 9312              		.loc 1 1755 11 view .LVU2855
 9313 09e0 0021     		movs	r1, #0
ARM GAS  /tmp/ccgiIQCZ.s 			page 275


 9314 09e2 B3F8EE07 		ldrh	r0, [r3, #2030]
 9315 09e6 FFF7FEFF 		bl	do_inc
 9316              	.LVL788:
1756:src/keys.c    **** 			rawpc = 1;
 9317              		.loc 1 1756 3 is_stmt 1 view .LVU2856
1756:src/keys.c    **** 			rawpc = 1;
 9318              		.loc 1 1756 6 is_stmt 0 view .LVU2857
 9319 09ea 20B9     		cbnz	r0, .L846
1756:src/keys.c    **** 			rawpc = 1;
 9320              		.loc 1 1756 21 view .LVU2858
 9321 09ec 2368     		ldr	r3, [r4]
1756:src/keys.c    **** 			rawpc = 1;
 9322              		.loc 1 1756 18 view .LVU2859
 9323 09ee 5888     		ldrh	r0, [r3, #2]
 9324              	.LVL789:
1756:src/keys.c    **** 			rawpc = 1;
 9325              		.loc 1 1756 18 view .LVU2860
 9326 09f0 0038     		subs	r0, r0, #0
 9327 09f2 18BF     		it	ne
 9328 09f4 0120     		movne	r0, #1
 9329              	.LVL790:
 9330              	.L846:
1762:src/keys.c    **** fin2:		State2.gtodot = 0;
 9331              		.loc 1 1762 7 is_stmt 1 view .LVU2861
 9332 09f6 FFF7FEFF 		bl	set_pc
 9333              	.LVL791:
 9334              	.L850:
1763:src/keys.c    **** 		State2.digval = 0;
 9335              		.loc 1 1763 8 view .LVU2862
1763:src/keys.c    **** 		State2.digval = 0;
 9336              		.loc 1 1763 22 is_stmt 0 view .LVU2863
 9337 09fa 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 9338 09fe 3368     		ldr	r3, [r6]
1764:src/keys.c    **** 		State2.numdigit = 0;
 9339              		.loc 1 1764 17 view .LVU2864
 9340 0a00 0022     		movs	r2, #0
1763:src/keys.c    **** 		State2.digval = 0;
 9341              		.loc 1 1763 22 view .LVU2865
 9342 0a02 6FF30001 		bfc	r1, #0, #1
 9343 0a06 88F81510 		strb	r1, [r8, #21]
1764:src/keys.c    **** 		State2.numdigit = 0;
 9344              		.loc 1 1764 3 is_stmt 1 view .LVU2866
1764:src/keys.c    **** 		State2.numdigit = 0;
 9345              		.loc 1 1764 17 is_stmt 0 view .LVU2867
 9346 0a0a A8F80820 		strh	r2, [r8, #8]	@ movhi
1765:src/keys.c    **** 	}
 9347              		.loc 1 1765 3 is_stmt 1 view .LVU2868
1765:src/keys.c    **** 	}
 9348              		.loc 1 1765 19 is_stmt 0 view .LVU2869
 9349 0a0e 88F80B20 		strb	r2, [r8, #11]
 9350              	.LBE1124:
 9351              	.LBE1123:
3281:src/keys.c    **** 
 9352              		.loc 1 3281 10 view .LVU2870
 9353 0a12 3324     		movs	r4, #51
 9354 0a14 FFF751BB 		b	.L799
 9355              	.LVL792:
ARM GAS  /tmp/ccgiIQCZ.s 			page 276


 9356              	.L1174:
3281:src/keys.c    **** 
 9357              		.loc 1 3281 10 view .LVU2871
 9358              	.LBE1423:
 9359              	.LBE1494:
 9360              	.LBB1495:
 9361 0a18 1C46     		mov	r4, r3
 9362              	.LVL793:
3281:src/keys.c    **** 
 9363              		.loc 1 3281 10 view .LVU2872
 9364 0a1a FFF76CBB 		b	.L1113
 9365              	.LVL794:
 9366              	.L1366:
3281:src/keys.c    **** 
 9367              		.loc 1 3281 10 view .LVU2873
 9368              	.LBE1495:
 9369              	.LBB1496:
 9370              	.LBB1424:
3284:src/keys.c    **** 
 9371              		.loc 1 3284 3 is_stmt 1 view .LVU2874
 9372              	.LBB1144:
 9373              	.LBB1145:
1598:src/keys.c    **** 	State2.dot = 0;
 9374              		.loc 1 1598 15 is_stmt 0 view .LVU2875
 9375 0a1e 21F06203 		bic	r3, r1, #98
 9376              	.LBE1145:
 9377              	.LBE1144:
3284:src/keys.c    **** 
 9378              		.loc 1 3284 10 view .LVU2876
 9379 0a22 E4B2     		uxtb	r4, r4
 9380              	.LVL795:
 9381              	.LBB1158:
 9382              	.LBI1144:
1588:src/keys.c    **** 	static const unsigned char op_map[][2] = {
 9383              		.loc 1 1588 12 is_stmt 1 view .LVU2877
 9384              	.LBB1155:
1589:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
 9385              		.loc 1 1589 2 view .LVU2878
1594:src/keys.c    **** 	int f = State2.dot;
 9386              		.loc 1 1594 2 view .LVU2879
1598:src/keys.c    **** 	State2.dot = 0;
 9387              		.loc 1 1598 15 is_stmt 0 view .LVU2880
 9388 0a24 88F81530 		strb	r3, [r8, #21]
1594:src/keys.c    **** 	int f = State2.dot;
 9389              		.loc 1 1594 20 view .LVU2881
 9390 0a28 C1F34009 		ubfx	r9, r1, #1, #1
 9391              	.LVL796:
1595:src/keys.c    **** 
 9392              		.loc 1 1595 2 is_stmt 1 view .LVU2882
1595:src/keys.c    **** 
 9393              		.loc 1 1595 16 is_stmt 0 view .LVU2883
 9394 0a2c C1F3801B 		ubfx	fp, r1, #6, #1
 9395              	.LVL797:
1597:src/keys.c    **** 	State2.cmplx = 0;
 9396              		.loc 1 1597 2 is_stmt 1 view .LVU2884
1598:src/keys.c    **** 	State2.dot = 0;
 9397              		.loc 1 1598 2 view .LVU2885
ARM GAS  /tmp/ccgiIQCZ.s 			page 277


1599:src/keys.c    **** #ifdef DM42
 9398              		.loc 1 1599 2 view .LVU2886
1601:src/keys.c    **** #endif
 9399              		.loc 1 1601 2 view .LVU2887
 9400              	.LBB1146:
 9401              	.LBI1146:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 9402              		.loc 1 114 13 view .LVU2888
 9403              	.LBE1146:
 9404              	.LBE1155:
 9405              	.LBE1158:
 9406              	.LBE1424:
 9407              	.LBE1496:
 115:src/keys.c    **** }
 9408              		.loc 1 115 2 view .LVU2889
 9409              	.LBB1497:
 9410              	.LBB1425:
 9411              	.LBB1159:
 9412              	.LBB1156:
 9413              	.LBB1153:
 9414              	.LBB1147:
 9415              	.LBI1147:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 9416              		.loc 1 104 20 view .LVU2890
 9417              	.LBB1148:
 105:src/keys.c    **** 	State2.shifts = shift;
 9418              		.loc 1 105 2 view .LVU2891
 9419              	.LBB1149:
 9420              	.LBI1149:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 9421              		.loc 1 96 13 view .LVU2892
 9422              	.LBB1150:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9423              		.loc 1 97 2 view .LVU2893
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9424              		.loc 1 97 18 is_stmt 0 view .LVU2894
 9425 0a30 FFF7FEFF 		bl	shift_down
 9426              	.LVL798:
  98:src/keys.c    **** }
 9427              		.loc 1 98 2 is_stmt 1 view .LVU2895
 9428              	.LBE1150:
 9429              	.LBE1149:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9430              		.loc 1 106 2 view .LVU2896
 9431              	.LBE1148:
 9432              	.LBE1147:
 9433              	.LBE1153:
1603:src/keys.c    **** 
 9434              		.loc 1 1603 2 is_stmt 0 view .LVU2897
 9435 0a34 292C     		cmp	r4, #41
 9436              	.LBB1154:
 9437              	.LBB1152:
 9438              	.LBB1151:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9439              		.loc 1 106 16 view .LVU2898
 9440 0a36 88F810A0 		strb	r10, [r8, #16]
 108:src/keys.c    **** }
ARM GAS  /tmp/ccgiIQCZ.s 			page 278


 9441              		.loc 1 108 2 is_stmt 1 view .LVU2899
 9442              	.LVL799:
 108:src/keys.c    **** }
 9443              		.loc 1 108 2 is_stmt 0 view .LVU2900
 9444              	.LBE1151:
 9445              	.LBE1152:
 9446              	.LBE1154:
1603:src/keys.c    **** 
 9447              		.loc 1 1603 2 is_stmt 1 view .LVU2901
 9448 0a3a 00F04884 		beq	.L855
 9449 0a3e 15D8     		bhi	.L856
 9450 0a40 013C     		subs	r4, r4, #1
 9451              	.LVL800:
1603:src/keys.c    **** 
 9452              		.loc 1 1603 2 is_stmt 0 view .LVU2902
 9453 0a42 E3B2     		uxtb	r3, r4
 9454 0a44 022B     		cmp	r3, #2
 9455 0a46 3FF657AE 		bhi	.L1349
1608:src/keys.c    **** 
 9456              		.loc 1 1608 3 is_stmt 1 view .LVU2903
1608:src/keys.c    **** 
 9457              		.loc 1 1608 54 is_stmt 0 view .LVU2904
 9458 0a4a 344B     		ldr	r3, .L1448+44
 9459 0a4c 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 9460 0a50 03EB4404 		add	r4, r3, r4, lsl #1
 9461              	.LVL801:
1608:src/keys.c    **** 
 9462              		.loc 1 1608 27 view .LVU2905
 9463 0a54 B9F1000F 		cmp	r9, #0
1608:src/keys.c    **** 
 9464              		.loc 1 1608 54 view .LVU2906
 9465 0a58 14F80B40 		ldrb	r4, [r4, fp]	@ zero_extendqisi2
1608:src/keys.c    **** 
 9466              		.loc 1 1608 27 view .LVU2907
 9467 0a5c 14BF     		ite	ne
 9468 0a5e 4FF4A063 		movne	r3, #1280
 9469 0a62 4FF40073 		moveq	r3, #512
1608:src/keys.c    **** 
 9470              		.loc 1 1608 37 view .LVU2908
 9471 0a66 1C43     		orrs	r4, r4, r3
 9472 0a68 2546     		mov	r5, r4
 9473 0a6a 36E5     		b	.L861
 9474              	.LVL802:
 9475              	.L856:
1603:src/keys.c    **** 
 9476              		.loc 1 1603 2 view .LVU2909
 9477 0a6c 2D2C     		cmp	r4, #45
 9478 0a6e 7FF443AE 		bne	.L1349
1611:src/keys.c    **** 		goto stay;
 9479              		.loc 1 1611 3 is_stmt 1 view .LVU2910
 9480 0a72 89F00109 		eor	r9, r9, #1
 9481              	.LVL803:
1612:src/keys.c    **** 
 9482              		.loc 1 1612 3 view .LVU2911
 9483              	.L862:
1624:src/keys.c    **** 		State2.cmplx = cmplx;
 9484              		.loc 1 1624 4 view .LVU2912
ARM GAS  /tmp/ccgiIQCZ.s 			page 279


1625:src/keys.c    **** 		State2.dot = f;
 9485              		.loc 1 1625 3 view .LVU2913
1626:src/keys.c    **** 		break;
 9486              		.loc 1 1626 3 view .LVU2914
1625:src/keys.c    **** 		State2.dot = f;
 9487              		.loc 1 1625 16 is_stmt 0 view .LVU2915
 9488 0a76 4FEA4902 		lsl	r2, r9, #1
 9489 0a7a 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 9490 0a7e 3368     		ldr	r3, [r6]
 9491 0a80 42F02002 		orr	r2, r2, #32
 9492 0a84 42EA8B12 		orr	r2, r2, fp, lsl #6
 9493 0a88 02F06202 		and	r2, r2, #98
 9494 0a8c 21F06201 		bic	r1, r1, #98
 9495 0a90 0A43     		orrs	r2, r2, r1
 9496 0a92 88F81520 		strb	r2, [r8, #21]
1627:src/keys.c    **** 
 9497              		.loc 1 1627 3 is_stmt 1 view .LVU2916
1632:src/keys.c    **** }
 9498              		.loc 1 1632 9 is_stmt 0 view .LVU2917
 9499 0a96 3324     		movs	r4, #51
 9500              	.LVL804:
1627:src/keys.c    **** 
 9501              		.loc 1 1627 3 view .LVU2918
 9502 0a98 FFF70FBB 		b	.L799
 9503              	.LVL805:
 9504              	.L1362:
1627:src/keys.c    **** 
 9505              		.loc 1 1627 3 view .LVU2919
 9506              	.LBE1156:
 9507              	.LBE1159:
3261:src/keys.c    **** 		return STATE_IGNORE;
 9508              		.loc 1 3261 3 is_stmt 1 view .LVU2920
3261:src/keys.c    **** 		return STATE_IGNORE;
 9509              		.loc 1 3261 15 is_stmt 0 view .LVU2921
 9510 0a9c 1560     		str	r5, [r2]
3262:src/keys.c    **** 	}
 9511              		.loc 1 3262 3 is_stmt 1 view .LVU2922
 9512              	.LVL806:
3262:src/keys.c    **** 	}
 9513              		.loc 1 3262 3 is_stmt 0 view .LVU2923
 9514              	.LBE1425:
 9515              	.LBE1497:
3667:src/keys.c    **** #ifndef CONSOLE
 9516              		.loc 1 3667 3 is_stmt 1 view .LVU2924
 9517              	.LBB1498:
 9518              	.LBB1426:
3262:src/keys.c    **** 	}
 9519              		.loc 1 3262 10 is_stmt 0 view .LVU2925
 9520 0a9e 3224     		movs	r4, #50
 9521 0aa0 FFF70EBB 		b	.L820
 9522              	.LVL807:
 9523              	.L902:
 9524              	.LBB1160:
 9525              	.LBB862:
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 9526              		.loc 1 312 3 is_stmt 1 view .LVU2926
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
ARM GAS  /tmp/ccgiIQCZ.s 			page 280


 9527              		.loc 1 312 6 is_stmt 0 view .LVU2927
 9528 0aa4 212C     		cmp	r4, #33
 9529 0aa6 00F04981 		beq	.L1402
 315:src/keys.c    ****     /*
 9530              		.loc 1 315 3 is_stmt 1 view .LVU2928
 315:src/keys.c    ****     /*
 9531              		.loc 1 315 23 is_stmt 0 view .LVU2929
 9532 0aaa DFF87CC0 		ldr	ip, .L1448+56
 315:src/keys.c    ****     /*
 9533              		.loc 1 315 6 view .LVU2930
 9534 0aae D8F81420 		ldr	r2, [r8, #20]
 9535 0ab2 1CEA020F 		tst	ip, r2
 9536 0ab6 40F04A81 		bne	.L916
 9537              	.LBB852:
 319:src/keys.c    **** #ifdef DM42
 9538              		.loc 1 319 5 is_stmt 1 view .LVU2931
 346:src/keys.c    ****       /*
 9539              		.loc 1 346 5 view .LVU2932
 346:src/keys.c    ****       /*
 9540              		.loc 1 346 8 is_stmt 0 view .LVU2933
 9541 0aba 242C     		cmp	r4, #36
 9542 0abc 02D1     		bne	.L917
 346:src/keys.c    ****       /*
 9543              		.loc 1 346 18 view .LVU2934
 9544 0abe 022B     		cmp	r3, #2
 9545 0ac0 00F03D84 		beq	.L1147
 9546              	.L917:
 361:src/keys.c    ****       /*
 9547              		.loc 1 361 5 is_stmt 1 view .LVU2935
 361:src/keys.c    ****       /*
 9548              		.loc 1 361 8 is_stmt 0 view .LVU2936
 9549 0ac4 032B     		cmp	r3, #3
 9550 0ac6 7FF4C2AB 		bne	.L923
 9551              	.L1130:
 371:src/keys.c    **** #ifndef WINGUI
 9552              		.loc 1 371 5 is_stmt 1 view .LVU2937
 9553              	.LVL808:
 373:src/keys.c    **** #else
 9554              		.loc 1 373 5 view .LVU2938
 373:src/keys.c    **** #else
 9555              		.loc 1 373 23 is_stmt 0 view .LVU2939
 9556 0aca 90F8E827 		ldrb	r2, [r0, #2024]	@ zero_extendqisi2
 373:src/keys.c    **** #else
 9557              		.loc 1 373 27 view .LVU2940
 9558 0ace D007     		lsls	r0, r2, #31
 9559 0ad0 00F1F183 		bmi	.L1148
 373:src/keys.c    **** #else
 9560              		.loc 1 373 73 view .LVU2941
 9561 0ad4 11F0020A 		ands	r10, r1, #2
 9562 0ad8 00F0BC85 		beq	.L1403
 371:src/keys.c    **** #ifndef WINGUI
 9563              		.loc 1 371 8 view .LVU2942
 9564 0adc 104A     		ldr	r2, .L1448+48
 377:src/keys.c    ****   }
 9565              		.loc 1 377 9 view .LVU2943
 9566 0ade 0C20     		movs	r0, #12
 373:src/keys.c    **** #else
ARM GAS  /tmp/ccgiIQCZ.s 			page 281


 9567              		.loc 1 373 73 view .LVU2944
 9568 0ae0 4FF0020E 		mov	lr, #2
 9569              	.LVL809:
 9570              	.L918:
 373:src/keys.c    **** #else
 9571              		.loc 1 373 73 view .LVU2945
 9572              	.LBE852:
 421:src/keys.c    ****     if (cp->key == c) {
 9573              		.loc 1 421 3 is_stmt 1 view .LVU2946
 421:src/keys.c    ****     if (cp->key == c) {
 9574              		.loc 1 421 15 view .LVU2947
 9575 0ae4 A2F1040C 		sub	ip, r2, #4
 9576 0ae8 0CEB800C 		add	ip, ip, r0, lsl #2
 9577              	.LBB853:
 373:src/keys.c    **** #else
 9578              		.loc 1 373 73 is_stmt 0 view .LVU2948
 9579 0aec 0420     		movs	r0, #4
 9580              	.LVL810:
 373:src/keys.c    **** #else
 9581              		.loc 1 373 73 view .LVU2949
 9582 0aee 22E0     		b	.L924
 9583              	.L1449:
 9584              		.align	2
 9585              	.L1448:
 9586 0af0 00000000 		.word	NonProgrammable
 9587 0af4 00000000 		.word	OpCode
 9588 0af8 00000000 		.word	OpCodeDisplayPending
 9589 0afc 31020008 		.word	134218289
 9590 0b00 00000000 		.word	JustDisplayed
 9591 0b04 00000000 		.word	TraceBuffer
 9592 0b08 00000000 		.word	DispMsg
 9593 0b0c 00040800 		.word	525312
 9594 0b10 00000000 		.word	.LANCHOR6
 9595 0b14 00000000 		.word	.LANCHOR5
 9596 0b18 00000000 		.word	main_ram
 9597 0b1c 00000000 		.word	.LANCHOR19
 9598 0b20 00000000 		.word	.LANCHOR17
 9599 0b24 00000000 		.word	StateWhileOn
 9600 0b28 00080800 		.word	526336
 9601              	.LVL811:
 9602              	.L920:
 373:src/keys.c    **** #else
 9603              		.loc 1 373 73 view .LVU2950
 9604              	.LBE853:
 421:src/keys.c    ****     if (cp->key == c) {
 9605              		.loc 1 421 3 view .LVU2951
 9606 0b2c 6245     		cmp	r2, ip
 9607 0b2e 3FF48EAB 		beq	.L923
 421:src/keys.c    ****     if (cp->key == c) {
 9608              		.loc 1 421 3 view .LVU2952
 9609 0b32 12F8040F 		ldrb	r0, [r2, #4]!	@ zero_extendqisi2
 9610              	.LVL812:
 9611              	.L924:
 422:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 9612              		.loc 1 422 5 is_stmt 1 view .LVU2953
 421:src/keys.c    ****     if (cp->key == c) {
 9613              		.loc 1 421 24 view .LVU2954
ARM GAS  /tmp/ccgiIQCZ.s 			page 282


 421:src/keys.c    ****     if (cp->key == c) {
 9614              		.loc 1 421 15 view .LVU2955
 422:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 9615              		.loc 1 422 8 is_stmt 0 view .LVU2956
 9616 0b36 8442     		cmp	r4, r0
 9617 0b38 F8D1     		bne	.L920
 423:src/keys.c    ****       break;
 9618              		.loc 1 423 7 is_stmt 1 view .LVU2957
 423:src/keys.c    ****       break;
 9619              		.loc 1 423 11 is_stmt 0 view .LVU2958
 9620 0b3a 7244     		add	r2, r2, lr
 9621              	.LVL813:
 423:src/keys.c    ****       break;
 9622              		.loc 1 423 11 view .LVU2959
 9623 0b3c 92F801A0 		ldrb	r10, [r2, #1]	@ zero_extendqisi2
 9624              	.LVL814:
 424:src/keys.c    ****     }
 9625              		.loc 1 424 7 is_stmt 1 view .LVU2960
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9626              		.loc 1 427 3 view .LVU2961
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9627              		.loc 1 427 6 is_stmt 0 view .LVU2962
 9628 0b40 0A07     		lsls	r2, r1, #28
 9629 0b42 40F17981 		bpl	.L1404
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9630              		.loc 1 427 20 view .LVU2963
 9631 0b46 AAF10B03 		sub	r3, r10, #11
 9632 0b4a 042B     		cmp	r3, #4
 9633 0b4c 7FF6CEAD 		bls	.L905
 9634              	.LVL815:
 9635              	.L929:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9636              		.loc 1 427 20 view .LVU2964
 9637              	.LBE862:
 9638              	.LBE1160:
3332:src/keys.c    **** 
 9639              		.loc 1 3332 3 is_stmt 1 view .LVU2965
 9640              	.LBB1161:
 9641              	.LBI1161:
2806:src/keys.c    **** 	enum shifts shift = reset_shift();
 9642              		.loc 1 2806 12 view .LVU2966
 9643              	.LBB1162:
2807:src/keys.c    **** 	unsigned int ch = 0;
 9644              		.loc 1 2807 2 view .LVU2967
 9645              	.LBB1163:
 9646              	.LBI1163:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 9647              		.loc 1 114 13 view .LVU2968
 9648              	.LBE1163:
 9649              	.LBE1162:
 9650              	.LBE1161:
 9651              	.LBE1426:
 9652              	.LBE1498:
 115:src/keys.c    **** }
 9653              		.loc 1 115 2 view .LVU2969
 9654              	.LBB1499:
 9655              	.LBB1427:
ARM GAS  /tmp/ccgiIQCZ.s 			page 283


 9656              	.LBB1199:
 9657              	.LBB1193:
 9658              	.LBB1170:
 9659              	.LBB1164:
 9660              	.LBI1164:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 9661              		.loc 1 104 20 view .LVU2970
 9662              	.LBB1165:
 105:src/keys.c    **** 	State2.shifts = shift;
 9663              		.loc 1 105 2 view .LVU2971
 9664              	.LBB1166:
 9665              	.LBI1166:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 9666              		.loc 1 96 13 view .LVU2972
 9667              	.LBB1167:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9668              		.loc 1 97 2 view .LVU2973
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9669              		.loc 1 97 18 is_stmt 0 view .LVU2974
 9670 0b50 FFF7FEFF 		bl	shift_down
 9671              	.LVL816:
  98:src/keys.c    **** }
 9672              		.loc 1 98 2 is_stmt 1 view .LVU2975
  98:src/keys.c    **** }
 9673              		.loc 1 98 52 is_stmt 0 view .LVU2976
 9674 0b54 0146     		mov	r1, r0
 9675 0b56 08B9     		cbnz	r0, .L926
 9676 0b58 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 9677              	.L926:
 9678              	.LVL817:
  98:src/keys.c    **** }
 9679              		.loc 1 98 52 view .LVU2977
 9680              	.LBE1167:
 9681              	.LBE1166:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9682              		.loc 1 106 2 is_stmt 1 view .LVU2978
 9683              	.LBE1165:
 9684              	.LBE1164:
 9685              	.LBE1170:
2811:src/keys.c    **** 		// Alpha catalogue from within multi character command
 9686              		.loc 1 2811 5 is_stmt 0 view .LVU2979
 9687 0b5c 98F80E00 		ldrb	r0, [r8, #14]	@ zero_extendqisi2
 9688              	.LBB1171:
 9689              	.LBB1169:
 9690              	.LBB1168:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9691              		.loc 1 106 16 view .LVU2980
 9692 0b60 0023     		movs	r3, #0
 9693 0b62 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 9694              		.loc 1 108 2 is_stmt 1 view .LVU2981
 9695              	.LVL818:
 108:src/keys.c    **** }
 9696              		.loc 1 108 2 is_stmt 0 view .LVU2982
 9697              	.LBE1168:
 9698              	.LBE1169:
 9699              	.LBE1171:
ARM GAS  /tmp/ccgiIQCZ.s 			page 284


2808:src/keys.c    **** 	unsigned int opcode;
 9700              		.loc 1 2808 2 is_stmt 1 view .LVU2983
2809:src/keys.c    **** 
 9701              		.loc 1 2809 2 view .LVU2984
2811:src/keys.c    **** 		// Alpha catalogue from within multi character command
 9702              		.loc 1 2811 2 view .LVU2985
2811:src/keys.c    **** 		// Alpha catalogue from within multi character command
 9703              		.loc 1 2811 5 is_stmt 0 view .LVU2986
 9704 0b66 0028     		cmp	r0, #0
 9705 0b68 40F0F384 		bne	.L1405
2820:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
 9706              		.loc 1 2820 2 is_stmt 1 view .LVU2987
 9707 0b6c 102C     		cmp	r4, #16
 9708 0b6e 00F0FF84 		beq	.L933
 9709 0b72 242C     		cmp	r4, #36
 9710 0b74 00F03785 		beq	.L934
 9711 0b78 0C2C     		cmp	r4, #12
 9712 0b7a 00F01585 		beq	.L1406
 9713              	.L935:
2853:src/keys.c    **** 	if (ch == 0)
 9714              		.loc 1 2853 2 view .LVU2988
 9715              	.LBB1172:
 9716              	.LBB1173:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 9717              		.loc 1 485 6 is_stmt 0 view .LVU2989
 9718 0b7e 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9719              	.LVL819:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 9720              		.loc 1 485 6 view .LVU2990
 9721              	.LBE1173:
 9722              	.LBI1172:
 435:src/keys.c    **** {
 9723              		.loc 1 435 12 is_stmt 1 view .LVU2991
 9724              	.LBB1178:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 9725              		.loc 1 437 2 view .LVU2992
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 9726              		.loc 1 485 2 view .LVU2993
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 9727              		.loc 1 485 5 is_stmt 0 view .LVU2994
 9728 0b82 DB06     		lsls	r3, r3, #27
 9729 0b84 03D5     		bpl	.L939
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 9730              		.loc 1 486 3 is_stmt 1 view .LVU2995
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 9731              		.loc 1 486 6 is_stmt 0 view .LVU2996
 9732 0b86 0029     		cmp	r1, #0
 9733 0b88 40F0FA86 		bne	.L1407
 487:src/keys.c    **** 		else if (shift == SHIFT_G)
 9734              		.loc 1 487 10 view .LVU2997
 9735 0b8c 0421     		movs	r1, #4
 9736              	.LVL820:
 9737              	.L939:
 491:src/keys.c    **** }
 9738              		.loc 1 491 2 is_stmt 1 view .LVU2998
 9739              	.LBB1174:
 9740              	.LBI1174:
ARM GAS  /tmp/ccgiIQCZ.s 			page 285


 131:src/keys.c    **** {
 9741              		.loc 1 131 12 view .LVU2999
 9742              	.LBB1175:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9743              		.loc 1 133 2 view .LVU3000
 143:src/keys.c    **** }
 9744              		.loc 1 143 2 view .LVU3001
 143:src/keys.c    **** }
 9745              		.loc 1 143 23 is_stmt 0 view .LVU3002
 9746 0b8e C14B     		ldr	r3, .L1450
 9747              	.LBE1175:
 9748              	.LBE1174:
 491:src/keys.c    **** }
 9749              		.loc 1 491 49 view .LVU3003
 9750 0b90 C14A     		ldr	r2, .L1450+4
 9751              	.LBB1177:
 9752              	.LBB1176:
 143:src/keys.c    **** }
 9753              		.loc 1 143 23 view .LVU3004
 9754 0b92 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 9755              	.LBE1176:
 9756              	.LBE1177:
 491:src/keys.c    **** }
 9757              		.loc 1 491 49 view .LVU3005
 9758 0b94 0620     		movs	r0, #6
 9759 0b96 00FB0323 		mla	r3, r0, r3, r2
 9760              	.LBE1178:
 9761              	.LBE1172:
2853:src/keys.c    **** 	if (ch == 0)
 9762              		.loc 1 2853 5 view .LVU3006
 9763 0b9a 5C5C     		ldrb	r4, [r3, r1]	@ zero_extendqisi2
 9764              	.LVL821:
2854:src/keys.c    **** 		return STATE_UNFINISHED;
 9765              		.loc 1 2854 2 is_stmt 1 view .LVU3007
2854:src/keys.c    **** 		return STATE_UNFINISHED;
 9766              		.loc 1 2854 5 is_stmt 0 view .LVU3008
 9767 0b9c 002C     		cmp	r4, #0
 9768 0b9e 3FF4ABAD 		beq	.L1349
 9769              	.L932:
2857:src/keys.c    **** 		State2.digval = ch;
 9770              		.loc 1 2857 2 is_stmt 1 view .LVU3009
2857:src/keys.c    **** 		State2.digval = ch;
 9771              		.loc 1 2857 12 is_stmt 0 view .LVU3010
 9772 0ba2 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
2857:src/keys.c    **** 		State2.digval = ch;
 9773              		.loc 1 2857 5 view .LVU3011
 9774 0ba6 002B     		cmp	r3, #0
 9775 0ba8 00F01086 		beq	.L1408
2861:src/keys.c    **** 		State2.digval2 = ch;
 9776              		.loc 1 2861 9 is_stmt 1 view .LVU3012
2861:src/keys.c    **** 		State2.digval2 = ch;
 9777              		.loc 1 2861 12 is_stmt 0 view .LVU3013
 9778 0bac 012B     		cmp	r3, #1
 9779 0bae 01F09E81 		beq	.L1409
2866:src/keys.c    **** 
 9780              		.loc 1 2866 2 is_stmt 1 view .LVU3014
 9781              	.LBB1180:
ARM GAS  /tmp/ccgiIQCZ.s 			page 286


 9782              	.LBI1180:
2799:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 9783              		.loc 1 2799 13 view .LVU3015
 9784              	.LBB1181:
2801:src/keys.c    **** 	if (! State2.alphas )
 9785              		.loc 1 2801 2 view .LVU3016
2801:src/keys.c    **** 	if (! State2.alphas )
 9786              		.loc 1 2801 15 is_stmt 0 view .LVU3017
 9787 0bb2 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2802:src/keys.c    **** 		State2.alphashift = 0;
 9788              		.loc 1 2802 6 view .LVU3018
 9789 0bb6 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2801:src/keys.c    **** 	if (! State2.alphas )
 9790              		.loc 1 2801 15 view .LVU3019
 9791 0bba 6FF3C302 		bfc	r2, #3, #1
 9792 0bbe 88F81520 		strb	r2, [r8, #21]
2802:src/keys.c    **** 		State2.alphashift = 0;
 9793              		.loc 1 2802 2 is_stmt 1 view .LVU3020
2802:src/keys.c    **** 		State2.alphashift = 0;
 9794              		.loc 1 2802 5 is_stmt 0 view .LVU3021
 9795 0bc2 13F00802 		ands	r2, r3, #8
2803:src/keys.c    **** }
 9796              		.loc 1 2803 3 is_stmt 1 view .LVU3022
2803:src/keys.c    **** }
 9797              		.loc 1 2803 21 is_stmt 0 view .LVU3023
 9798 0bc6 04BF     		itt	eq
 9799 0bc8 62F30413 		bfieq	r3, r2, #4, #1
 9800 0bcc 88F81630 		strbeq	r3, [r8, #22]
 9801              	.LVL822:
 9802              	.L938:
2803:src/keys.c    **** }
 9803              		.loc 1 2803 21 view .LVU3024
 9804              	.LBE1181:
 9805              	.LBE1180:
2869:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 9806              		.loc 1 2869 2 is_stmt 1 view .LVU3025
2871:src/keys.c    **** }
 9807              		.loc 1 2871 2 view .LVU3026
2869:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 9808              		.loc 1 2869 21 is_stmt 0 view .LVU3027
 9809 0bd0 98F81F30 		ldrb	r3, [r8, #31]	@ zero_extendqisi2
2870:src/keys.c    **** 	return opcode;
 9810              		.loc 1 2870 17 view .LVU3028
 9811 0bd4 B8F80810 		ldrh	r1, [r8, #8]
2870:src/keys.c    **** 	return opcode;
 9812              		.loc 1 2870 34 view .LVU3029
 9813 0bd8 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
2869:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 9814              		.loc 1 2869 29 view .LVU3030
 9815 0bdc 1B02     		lsls	r3, r3, #8
2869:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 9816              		.loc 1 2869 18 view .LVU3031
 9817 0bde 03F57043 		add	r3, r3, #61440
2870:src/keys.c    **** 	return opcode;
 9818              		.loc 1 2870 9 view .LVU3032
 9819 0be2 0B44     		add	r3, r3, r1
2870:src/keys.c    **** 	return opcode;
ARM GAS  /tmp/ccgiIQCZ.s 			page 287


 9820              		.loc 1 2870 25 view .LVU3033
 9821 0be4 03EB0243 		add	r3, r3, r2, lsl #16
2869:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 9822              		.loc 1 2869 9 view .LVU3034
 9823 0be8 03EB0464 		add	r4, r3, r4, lsl #24
 9824              	.LVL823:
2871:src/keys.c    **** }
 9825              		.loc 1 2871 9 view .LVU3035
 9826 0bec FFF7E2BB 		b	.L834
 9827              	.LVL824:
 9828              	.L1391:
2871:src/keys.c    **** }
 9829              		.loc 1 2871 9 view .LVU3036
 9830              	.LBE1193:
 9831              	.LBE1199:
 9832              	.LBB1200:
 9833              	.LBB1113:
2349:src/keys.c    **** 	State2.cmplx = 0;
 9834              		.loc 1 2349 2 is_stmt 1 view .LVU3037
2350:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9835              		.loc 1 2350 15 is_stmt 0 view .LVU3038
 9836 0bf0 6EF34101 		bfi	r1, lr, #1, #1
2349:src/keys.c    **** 	State2.cmplx = 0;
 9837              		.loc 1 2349 14 view .LVU3039
 9838 0bf4 0720     		movs	r0, #7
2351:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9839              		.loc 1 2351 5 view .LVU3040
 9840 0bf6 642B     		cmp	r3, #100
2350:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9841              		.loc 1 2350 15 view .LVU3041
 9842 0bf8 88F81510 		strb	r1, [r8, #21]
2349:src/keys.c    **** 	State2.cmplx = 0;
 9843              		.loc 1 2349 14 view .LVU3042
 9844 0bfc 88F80F00 		strb	r0, [r8, #15]
2350:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9845              		.loc 1 2350 2 is_stmt 1 view .LVU3043
2351:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9846              		.loc 1 2351 2 view .LVU3044
2351:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9847              		.loc 1 2351 5 is_stmt 0 view .LVU3045
 9848 0c00 00F09383 		beq	.L1177
2347:src/keys.c    **** 
 9849              		.loc 1 2347 44 view .LVU3046
 9850 0c04 4FF02D0B 		mov	fp, #45
 9851 0c08 A1E6     		b	.L1131
 9852              	.LVL825:
 9853              	.L1175:
2347:src/keys.c    **** 
 9854              		.loc 1 2347 44 view .LVU3047
 9855              	.LBE1113:
 9856              	.LBE1200:
 9857              	.LBE1427:
 9858              	.LBE1499:
 9859              	.LBB1500:
 9860 0c0a 2C46     		mov	r4, r5
 9861              	.LVL826:
2347:src/keys.c    **** 
ARM GAS  /tmp/ccgiIQCZ.s 			page 288


 9862              		.loc 1 2347 44 view .LVU3048
 9863 0c0c FFF773BA 		b	.L1113
 9864              	.LVL827:
 9865              	.L1368:
2347:src/keys.c    **** 
 9866              		.loc 1 2347 44 view .LVU3049
 9867              	.LBE1500:
 9868              	.LBB1501:
 9869              	.LBB1428:
3290:src/keys.c    **** 
 9870              		.loc 1 3290 3 is_stmt 1 view .LVU3050
 9871              	.LBB1201:
 9872              	.LBB1202:
2912:src/keys.c    **** 
 9873              		.loc 1 2912 12 is_stmt 0 view .LVU3051
 9874 0c10 A24B     		ldr	r3, .L1450+8
 9875 0c12 1B68     		ldr	r3, [r3]
 9876 0c14 B3F8DE37 		ldrh	r3, [r3, #2014]
 9877              	.LBE1202:
 9878              	.LBE1201:
3290:src/keys.c    **** 
 9879              		.loc 1 3290 10 view .LVU3052
 9880 0c18 E4B2     		uxtb	r4, r4
 9881              	.LVL828:
 9882              	.LBB1221:
 9883              	.LBI1201:
2910:src/keys.c    **** 	int n = ((int)State2.status) - 3;
 9884              		.loc 1 2910 12 is_stmt 1 view .LVU3053
 9885              	.LBB1213:
2911:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9886              		.loc 1 2911 2 view .LVU3054
2912:src/keys.c    **** 
 9887              		.loc 1 2912 2 view .LVU3055
2912:src/keys.c    **** 
 9888              		.loc 1 2912 31 is_stmt 0 view .LVU3056
 9889 0c1a 13F4004F 		tst	r3, #32768
 9890 0c1e 14BF     		ite	ne
 9891 0c20 0B23     		movne	r3, #11
 9892 0c22 0A23     		moveq	r3, #10
 9893              	.LVL829:
2914:src/keys.c    **** 		if (--n < -2)
 9894              		.loc 1 2914 2 is_stmt 1 view .LVU3057
2914:src/keys.c    **** 		if (--n < -2)
 9895              		.loc 1 2914 5 is_stmt 0 view .LVU3058
 9896 0c24 122C     		cmp	r4, #18
 9897 0c26 00F0CF80 		beq	.L1410
2918:src/keys.c    **** 		if (++n > max)
 9898              		.loc 1 2918 7 is_stmt 1 view .LVU3059
2918:src/keys.c    **** 		if (++n > max)
 9899              		.loc 1 2918 10 is_stmt 0 view .LVU3060
 9900 0c2a 182C     		cmp	r4, #24
 9901 0c2c 00F0FD80 		beq	.L1411
2922:src/keys.c    **** 		State2.status = 0;
 9902              		.loc 1 2922 7 is_stmt 1 view .LVU3061
2922:src/keys.c    **** 		State2.status = 0;
 9903              		.loc 1 2922 10 is_stmt 0 view .LVU3062
 9904 0c30 102C     		cmp	r4, #16
ARM GAS  /tmp/ccgiIQCZ.s 			page 289


 9905 0c32 00F08D83 		beq	.L1412
 9906              	.LBB1203:
2927:src/keys.c    **** 		if (nn <= 9)
 9907              		.loc 1 2927 3 is_stmt 1 view .LVU3063
 9908              	.LVL830:
 9909              	.LBB1204:
 9910              	.LBI1204:
 210:src/keys.c    **** {
 9911              		.loc 1 210 14 view .LVU3064
 9912              	.LBB1205:
 212:src/keys.c    ****     // K00 - K05
 9913              		.loc 1 212 3 view .LVU3065
 234:src/keys.c    **** }
 9914              		.loc 1 234 3 view .LVU3066
 9915              	.LBB1206:
 9916              	.LBI1206:
 131:src/keys.c    **** {
 9917              		.loc 1 131 12 view .LVU3067
 9918              	.LBB1207:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9919              		.loc 1 133 2 view .LVU3068
 143:src/keys.c    **** }
 9920              		.loc 1 143 2 view .LVU3069
 143:src/keys.c    **** }
 9921              		.loc 1 143 23 is_stmt 0 view .LVU3070
 9922 0c36 9749     		ldr	r1, .L1450
 9923              	.LBE1207:
 9924              	.LBE1206:
 234:src/keys.c    **** }
 9925              		.loc 1 234 28 view .LVU3071
 9926 0c38 9948     		ldr	r0, .L1450+12
 9927              	.LBB1209:
 9928              	.LBB1208:
 143:src/keys.c    **** }
 9929              		.loc 1 143 23 view .LVU3072
 9930 0c3a 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 9931 0c3c 415C     		ldrb	r1, [r0, r1]	@ zero_extendqisi2
 9932 0c3e 01F07F01 		and	r1, r1, #127
 9933              	.LVL831:
 143:src/keys.c    **** }
 9934              		.loc 1 143 23 view .LVU3073
 9935              	.LBE1208:
 9936              	.LBE1209:
 9937              	.LBE1205:
 9938              	.LBE1204:
2928:src/keys.c    **** 			n = nn;
 9939              		.loc 1 2928 3 is_stmt 1 view .LVU3074
2928:src/keys.c    **** 			n = nn;
 9940              		.loc 1 2928 6 is_stmt 0 view .LVU3075
 9941 0c42 0929     		cmp	r1, #9
 9942 0c44 40F21C81 		bls	.L1139
2930:src/keys.c    **** 			n = n == max ? 10 : max;
 9943              		.loc 1 2930 11 view .LVU3076
 9944 0c48 7029     		cmp	r1, #112
 9945              	.LBE1203:
2911:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9946              		.loc 1 2911 6 view .LVU3077
ARM GAS  /tmp/ccgiIQCZ.s 			page 290


 9947 0c4a A2F10302 		sub	r2, r2, #3
 9948              	.LVL832:
 9949              	.LBB1210:
2930:src/keys.c    **** 			n = n == max ? 10 : max;
 9950              		.loc 1 2930 8 is_stmt 1 view .LVU3078
2930:src/keys.c    **** 			n = n == max ? 10 : max;
 9951              		.loc 1 2930 11 is_stmt 0 view .LVU3079
 9952 0c4e 00F0DD84 		beq	.L1413
2932:src/keys.c    **** 			n = 10; 
 9953              		.loc 1 2932 8 is_stmt 1 view .LVU3080
 9954              	.LBE1210:
2911:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9955              		.loc 1 2911 6 is_stmt 0 view .LVU3081
 9956 0c52 7F29     		cmp	r1, #127
 9957 0c54 0CBF     		ite	eq
 9958 0c56 1346     		moveq	r3, r2
 9959              	.LVL833:
2911:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9960              		.loc 1 2911 6 view .LVU3082
 9961 0c58 0A23     		movne	r3, #10
 9962              	.LVL834:
 9963              	.L883:
2935:src/keys.c    **** 
 9964              		.loc 1 2935 2 is_stmt 1 view .LVU3083
2935:src/keys.c    **** 
 9965              		.loc 1 2935 20 is_stmt 0 view .LVU3084
 9966 0c5a 0333     		adds	r3, r3, #3
 9967              	.LVL835:
2935:src/keys.c    **** 
 9968              		.loc 1 2935 16 view .LVU3085
 9969 0c5c 88F80C30 		strb	r3, [r8, #12]
2937:src/keys.c    **** }
 9970              		.loc 1 2937 2 is_stmt 1 view .LVU3086
 9971              	.LBE1213:
 9972              	.LBE1221:
3290:src/keys.c    **** 
 9973              		.loc 1 3290 10 is_stmt 0 view .LVU3087
 9974 0c60 3324     		movs	r4, #51
 9975              	.LVL836:
3290:src/keys.c    **** 
 9976              		.loc 1 3290 10 view .LVU3088
 9977 0c62 3368     		ldr	r3, [r6]
 9978              	.LVL837:
 9979              	.LBB1222:
 9980              	.LBB1214:
2937:src/keys.c    **** }
 9981              		.loc 1 2937 9 view .LVU3089
 9982 0c64 FFF729BA 		b	.L799
 9983              	.LVL838:
 9984              	.L1372:
2937:src/keys.c    **** }
 9985              		.loc 1 2937 9 view .LVU3090
 9986              	.LBE1214:
 9987              	.LBE1222:
3312:src/keys.c    **** 
 9988              		.loc 1 3312 3 is_stmt 1 view .LVU3091
 9989              	.LBB1223:
ARM GAS  /tmp/ccgiIQCZ.s 			page 291


 9990              	.LBB1224:
 9991              	.LBB1225:
 9992              	.LBB1226:
 9993              	.LBB1227:
 9994              	.LBB1228:
 9995              	.LBB1229:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9996              		.loc 1 97 18 is_stmt 0 view .LVU3092
 9997 0c68 FFF7FEFF 		bl	shift_down
 9998              	.LVL839:
 9999              	.LBE1229:
 10000              	.LBE1228:
 10001              	.LBE1227:
 10002              	.LBE1226:
 10003              	.LBE1225:
 10004              	.LBE1224:
 10005              	.LBE1223:
3312:src/keys.c    **** 
 10006              		.loc 1 3312 10 view .LVU3093
 10007 0c6c E4B2     		uxtb	r4, r4
 10008              	.LVL840:
 10009              	.LBB1255:
 10010              	.LBI1223:
1639:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 10011              		.loc 1 1639 12 is_stmt 1 view .LVU3094
 10012              	.LBB1246:
1640:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
 10013              		.loc 1 1640 2 view .LVU3095
1645:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
 10014              		.loc 1 1645 2 view .LVU3096
1649:src/keys.c    **** 	const int f = (shift == SHIFT_F);
 10015              		.loc 1 1649 2 view .LVU3097
 10016              	.LBB1238:
 10017              	.LBI1225:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 10018              		.loc 1 114 13 view .LVU3098
 10019              	.LBE1238:
 10020              	.LBE1246:
 10021              	.LBE1255:
 10022              	.LBE1428:
 10023              	.LBE1501:
 115:src/keys.c    **** }
 10024              		.loc 1 115 2 view .LVU3099
 10025              	.LBB1502:
 10026              	.LBB1429:
 10027              	.LBB1256:
 10028              	.LBB1247:
 10029              	.LBB1239:
 10030              	.LBB1235:
 10031              	.LBI1226:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 10032              		.loc 1 104 20 view .LVU3100
 10033              	.LBB1232:
 105:src/keys.c    **** 	State2.shifts = shift;
 10034              		.loc 1 105 2 view .LVU3101
 10035              	.LBB1231:
 10036              	.LBI1228:
ARM GAS  /tmp/ccgiIQCZ.s 			page 292


  96:src/keys.c    **** 	enum shifts s = shift_down();
 10037              		.loc 1 96 13 view .LVU3102
 10038              	.LBB1230:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10039              		.loc 1 97 2 view .LVU3103
  98:src/keys.c    **** }
 10040              		.loc 1 98 2 view .LVU3104
  98:src/keys.c    **** }
 10041              		.loc 1 98 52 is_stmt 0 view .LVU3105
 10042 0c6e 8346     		mov	fp, r0
 10043 0c70 08B9     		cbnz	r0, .L893
 10044 0c72 98F810B0 		ldrb	fp, [r8, #16]	@ zero_extendqisi2
 10045              	.L893:
 10046              	.LVL841:
  98:src/keys.c    **** }
 10047              		.loc 1 98 52 view .LVU3106
 10048              	.LBE1230:
 10049              	.LBE1231:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10050              		.loc 1 106 2 is_stmt 1 view .LVU3107
 10051              	.LBE1232:
 10052              	.LBE1235:
 10053              	.LBE1239:
1652:src/keys.c    **** #ifdef DM42
 10054              		.loc 1 1652 15 is_stmt 0 view .LVU3108
 10055 0c76 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
 10056              	.LBB1240:
 10057              	.LBB1236:
 10058              	.LBB1233:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10059              		.loc 1 106 16 view .LVU3109
 10060 0c7a 4FF0000A 		mov	r10, #0
 10061              	.LBE1233:
 10062              	.LBE1236:
 10063              	.LBE1240:
1652:src/keys.c    **** #ifdef DM42
 10064              		.loc 1 1652 15 view .LVU3110
 10065 0c7e 6AF38203 		bfi	r3, r10, #2, #1
 10066 0c82 88F81530 		strb	r3, [r8, #21]
1650:src/keys.c    **** 
 10067              		.loc 1 1650 23 view .LVU3111
 10068 0c86 ABF10103 		sub	r3, fp, #1
 10069 0c8a B3FA83F3 		clz	r3, r3
 10070 0c8e 5B09     		lsrs	r3, r3, #5
 10071 0c90 0093     		str	r3, [sp]
 10072              	.LBB1241:
 10073              	.LBB1237:
 10074              	.LBB1234:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10075              		.loc 1 106 16 view .LVU3112
 10076 0c92 88F810A0 		strb	r10, [r8, #16]
 108:src/keys.c    **** }
 10077              		.loc 1 108 2 is_stmt 1 view .LVU3113
 10078              	.LVL842:
 108:src/keys.c    **** }
 10079              		.loc 1 108 2 is_stmt 0 view .LVU3114
 10080              	.LBE1234:
ARM GAS  /tmp/ccgiIQCZ.s 			page 293


 10081              	.LBE1237:
 10082              	.LBE1241:
1650:src/keys.c    **** 
 10083              		.loc 1 1650 2 is_stmt 1 view .LVU3115
1652:src/keys.c    **** #ifdef DM42
 10084              		.loc 1 1652 2 view .LVU3116
1654:src/keys.c    **** 	display_current_menu ();
 10085              		.loc 1 1654 2 view .LVU3117
 10086 0c96 FFF7FEFF 		bl	set_last_menu
 10087              	.LVL843:
1655:src/keys.c    **** #endif
 10088              		.loc 1 1655 2 view .LVU3118
 10089 0c9a FFF7FEFF 		bl	display_current_menu
 10090              	.LVL844:
1658:src/keys.c    **** 	  if (!C_LOCK_ON) {
 10091              		.loc 1 1658 2 view .LVU3119
1658:src/keys.c    **** 	  if (!C_LOCK_ON) {
 10092              		.loc 1 1658 5 is_stmt 0 view .LVU3120
 10093 0c9e 2D2C     		cmp	r4, #45
 10094 0ca0 00F09E80 		beq	.L1414
1667:src/keys.c    **** 	
 10095              		.loc 1 1667 2 is_stmt 1 view .LVU3121
1667:src/keys.c    **** 	
 10096              		.loc 1 1667 5 is_stmt 0 view .LVU3122
 10097 0ca4 BBF1000F 		cmp	fp, #0
 10098 0ca8 3FF426AD 		beq	.L1349
1669:src/keys.c    **** 		return op_map[c - K10][f];
 10099              		.loc 1 1669 2 is_stmt 1 view .LVU3123
1669:src/keys.c    **** 		return op_map[c - K10][f];
 10100              		.loc 1 1669 15 is_stmt 0 view .LVU3124
 10101 0cac A31F     		subs	r3, r4, #6
1669:src/keys.c    **** 		return op_map[c - K10][f];
 10102              		.loc 1 1669 5 view .LVU3125
 10103 0cae DAB2     		uxtb	r2, r3
 10104 0cb0 022A     		cmp	r2, #2
 10105 0cb2 40F2C780 		bls	.L1415
1672:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 10106              		.loc 1 1672 2 is_stmt 1 view .LVU3126
1672:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 10107              		.loc 1 1672 15 is_stmt 0 view .LVU3127
 10108 0cb6 0E3C     		subs	r4, r4, #14
 10109              	.LVL845:
1672:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 10110              		.loc 1 1672 5 view .LVU3128
 10111 0cb8 E3B2     		uxtb	r3, r4
 10112 0cba 012B     		cmp	r3, #1
 10113 0cbc 3FF61CAD 		bhi	.L1349
1673:src/keys.c    **** 
 10114              		.loc 1 1673 3 is_stmt 1 view .LVU3129
 10115 0cc0 784A     		ldr	r2, .L1450+16
 10116 0cc2 0098     		ldr	r0, [sp]
 10117              	.LBB1242:
 10118              	.LBB1243:
 744:src/keys.c    **** }
 10119              		.loc 1 744 15 is_stmt 0 view .LVU3130
 10120 0cc4 98F81110 		ldrb	r1, [r8, #17]	@ zero_extendqisi2
 10121 0cc8 3368     		ldr	r3, [r6]
ARM GAS  /tmp/ccgiIQCZ.s 			page 294


 10122              	.LBE1243:
 10123              	.LBE1242:
1673:src/keys.c    **** 
 10124              		.loc 1 1673 3 view .LVU3131
 10125 0cca 02EB4402 		add	r2, r2, r4, lsl #1
1675:src/keys.c    **** }
 10126              		.loc 1 1675 9 view .LVU3132
 10127 0cce 3324     		movs	r4, #51
 10128              	.LVL846:
1673:src/keys.c    **** 
 10129              		.loc 1 1673 3 view .LVU3133
 10130 0cd0 125C     		ldrb	r2, [r2, r0]	@ zero_extendqisi2
 10131              	.LVL847:
 10132              	.LBB1245:
 10133              	.LBI1242:
 743:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 10134              		.loc 1 743 13 is_stmt 1 view .LVU3134
 10135              	.LBB1244:
 744:src/keys.c    **** }
 10136              		.loc 1 744 2 view .LVU3135
 744:src/keys.c    **** }
 10137              		.loc 1 744 15 is_stmt 0 view .LVU3136
 10138 0cd2 9142     		cmp	r1, r2
 10139 0cd4 08BF     		it	eq
 10140 0cd6 0022     		moveq	r2, #0
 10141              	.LVL848:
 744:src/keys.c    **** }
 10142              		.loc 1 744 15 view .LVU3137
 10143 0cd8 88F81120 		strb	r2, [r8, #17]
 745:src/keys.c    **** 
 10144              		.loc 1 745 1 view .LVU3138
 10145 0cdc FFF7EDB9 		b	.L799
 10146              	.LVL849:
 10147              	.L872:
 745:src/keys.c    **** 
 10148              		.loc 1 745 1 view .LVU3139
 10149              	.LBE1244:
 10150              	.LBE1245:
 10151              	.LBE1247:
 10152              	.LBE1256:
 10153              	.LBB1257:
 10154              	.LBB1114:
2371:src/keys.c    **** 		// digit 2..9, -> or .
 10155              		.loc 1 2371 7 is_stmt 1 view .LVU3140
2371:src/keys.c    **** 		// digit 2..9, -> or .
 10156              		.loc 1 2371 10 is_stmt 0 view .LVU3141
 10157 0ce0 092B     		cmp	r3, #9
 10158 0ce2 3AD9     		bls	.L874
 10159              	.L866:
2371:src/keys.c    **** 		// digit 2..9, -> or .
 10160              		.loc 1 2371 19 view .LVU3142
 10161 0ce4 2C2C     		cmp	r4, #44
 10162 0ce6 38D0     		beq	.L874
2371:src/keys.c    **** 		// digit 2..9, -> or .
 10163              		.loc 1 2371 35 view .LVU3143
 10164 0ce8 262C     		cmp	r4, #38
 10165 0cea 36D0     		beq	.L874
ARM GAS  /tmp/ccgiIQCZ.s 			page 295


2377:src/keys.c    **** 	case K11:					// tests vs register
 10166              		.loc 1 2377 2 is_stmt 1 view .LVU3144
 10167 0cec 0C2C     		cmp	r4, #12
 10168 0cee 00F0B880 		beq	.L877
 10169 0cf2 102C     		cmp	r4, #16
 10170 0cf4 3FF400AD 		beq	.L1349
 10171 0cf8 072C     		cmp	r4, #7
 10172 0cfa 00F0B280 		beq	.L877
 10173              	.L869:
2391:src/keys.c    **** 	State2.cmplx = cmpx;
 10174              		.loc 1 2391 2 view .LVU3145
2392:src/keys.c    **** 	return STATE_UNFINISHED;
 10175              		.loc 1 2392 15 is_stmt 0 view .LVU3146
 10176 0cfe 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 10177 0d02 3368     		ldr	r3, [r6]
2391:src/keys.c    **** 	State2.cmplx = cmpx;
 10178              		.loc 1 2391 14 view .LVU3147
 10179 0d04 88F80FA0 		strb	r10, [r8, #15]
2392:src/keys.c    **** 	return STATE_UNFINISHED;
 10180              		.loc 1 2392 2 is_stmt 1 view .LVU3148
2392:src/keys.c    **** 	return STATE_UNFINISHED;
 10181              		.loc 1 2392 15 is_stmt 0 view .LVU3149
 10182 0d08 6EF34102 		bfi	r2, lr, #1, #1
 10183 0d0c 88F81520 		strb	r2, [r8, #21]
2393:src/keys.c    **** }
 10184              		.loc 1 2393 2 is_stmt 1 view .LVU3150
2393:src/keys.c    **** }
 10185              		.loc 1 2393 9 is_stmt 0 view .LVU3151
 10186 0d10 3324     		movs	r4, #51
 10187              	.LVL850:
2393:src/keys.c    **** }
 10188              		.loc 1 2393 9 view .LVU3152
 10189 0d12 FFF7D2B9 		b	.L799
 10190              	.LVL851:
 10191              	.L1392:
2393:src/keys.c    **** }
 10192              		.loc 1 2393 9 view .LVU3153
 10193              	.LBE1114:
 10194              	.LBE1257:
 10195              	.LBB1258:
 10196              	.LBB1133:
1711:src/keys.c    **** 	}
 10197              		.loc 1 1711 3 is_stmt 1 view .LVU3154
1711:src/keys.c    **** 	}
 10198              		.loc 1 1711 8 is_stmt 0 view .LVU3155
 10199 0d16 FFF7FEFF 		bl	gtodot_digit
 10200              	.LVL852:
1760:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10201              		.loc 1 1760 2 is_stmt 1 view .LVU3156
1760:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10202              		.loc 1 1760 5 is_stmt 0 view .LVU3157
 10203 0d1a 0028     		cmp	r0, #0
1760:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10204              		.loc 1 1760 5 view .LVU3158
 10205 0d1c FFF6ECAC 		blt	.L1349
 10206              	.L837:
1761:src/keys.c    **** fin:		set_pc(rawpc);
ARM GAS  /tmp/ccgiIQCZ.s 			page 296


 10207              		.loc 1 1761 3 is_stmt 1 view .LVU3159
1761:src/keys.c    **** fin:		set_pc(rawpc);
 10208              		.loc 1 1761 11 is_stmt 0 view .LVU3160
 10209 0d20 FFF7FEFF 		bl	find_user_pc
 10210              	.LVL853:
1761:src/keys.c    **** fin:		set_pc(rawpc);
 10211              		.loc 1 1761 11 view .LVU3161
 10212 0d24 67E6     		b	.L846
 10213              	.LVL854:
 10214              	.L867:
1761:src/keys.c    **** fin:		set_pc(rawpc);
 10215              		.loc 1 1761 11 view .LVU3162
 10216              	.LBE1133:
 10217              	.LBE1258:
 10218              	.LBB1259:
 10219              	.LBB1115:
2363:src/keys.c    **** 		// Special 0
 10220              		.loc 1 2363 7 is_stmt 1 view .LVU3163
2363:src/keys.c    **** 		// Special 0
 10221              		.loc 1 2363 10 is_stmt 0 view .LVU3164
 10222 0d26 002B     		cmp	r3, #0
 10223 0d28 40F00E86 		bne	.L870
2365:src/keys.c    **** 	}
 10224              		.loc 1 2365 3 is_stmt 1 view .LVU3165
2365:src/keys.c    **** 	}
 10225              		.loc 1 2365 18 is_stmt 0 view .LVU3166
 10226 0d2c BEF1000F 		cmp	lr, #0
 10227 0d30 14BF     		ite	ne
 10228 0d32 2524     		movne	r4, #37
 10229              	.LVL855:
2365:src/keys.c    **** 	}
 10230              		.loc 1 2365 18 view .LVU3167
 10231 0d34 1724     		moveq	r4, #23
2365:src/keys.c    **** 	}
 10232              		.loc 1 2365 47 view .LVU3168
 10233 0d36 5444     		add	r4, r4, r10
 10234 0d38 FFF73CBB 		b	.L834
 10235              	.LVL856:
 10236              	.L1402:
2365:src/keys.c    **** 	}
 10237              		.loc 1 2365 47 view .LVU3169
 10238              	.LBE1115:
 10239              	.LBE1259:
 10240              	.LBB1260:
 10241              	.LBB863:
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 10242              		.loc 1 312 16 view .LVU3170
 10243 0d3c 032B     		cmp	r3, #3
 10244 0d3e 00F0AB82 		beq	.L1416
 315:src/keys.c    ****     /*
 10245              		.loc 1 315 3 is_stmt 1 view .LVU3171
 315:src/keys.c    ****     /*
 10246              		.loc 1 315 23 is_stmt 0 view .LVU3172
 10247 0d42 5948     		ldr	r0, .L1450+20
 10248 0d44 D8F81420 		ldr	r2, [r8, #20]
 315:src/keys.c    ****     /*
 10249              		.loc 1 315 6 view .LVU3173
ARM GAS  /tmp/ccgiIQCZ.s 			page 297


 10250 0d48 1042     		tst	r0, r2
 10251 0d4a 3FF480AA 		beq	.L923
 10252              	.L916:
 10253              	.LBB854:
 384:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 10254              		.loc 1 384 5 is_stmt 1 view .LVU3174
 408:src/keys.c    **** 
 10255              		.loc 1 408 5 view .LVU3175
 413:src/keys.c    ****     col = smap[shift];
 10256              		.loc 1 413 5 view .LVU3176
 10257              	.LVL857:
 414:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 10258              		.loc 1 414 5 view .LVU3177
 414:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 10259              		.loc 1 414 15 is_stmt 0 view .LVU3178
 10260 0d4e 5748     		ldr	r0, .L1450+24
 413:src/keys.c    ****     col = smap[shift];
 10261              		.loc 1 413 8 view .LVU3179
 10262 0d50 574A     		ldr	r2, .L1450+28
 414:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 10263              		.loc 1 414 9 view .LVU3180
 10264 0d52 10F803E0 		ldrb	lr, [r0, r3]	@ zero_extendqisi2
 10265              	.LVL858:
 415:src/keys.c    ****   }
 10266              		.loc 1 415 5 is_stmt 1 view .LVU3181
 415:src/keys.c    ****   }
 10267              		.loc 1 415 9 is_stmt 0 view .LVU3182
 10268 0d56 0820     		movs	r0, #8
 10269 0d58 C4E6     		b	.L918
 10270              	.LVL859:
 10271              	.L874:
 415:src/keys.c    ****   }
 10272              		.loc 1 415 9 view .LVU3183
 10273              	.LBE854:
 10274              	.LBE863:
 10275              	.LBE1260:
 10276              	.LBB1261:
 10277              	.LBB1116:
2373:src/keys.c    **** 		return process_arg(c);
 10278              		.loc 1 2373 3 is_stmt 1 view .LVU3184
 10279              	.LBB1109:
 10280              	.LBI1109:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 10281              		.loc 1 552 13 view .LVU3185
 10282              	.LBB1110:
 553:src/keys.c    **** 		return;
 10283              		.loc 1 553 2 view .LVU3186
 553:src/keys.c    **** 		return;
 10284              		.loc 1 553 6 is_stmt 0 view .LVU3187
 10285 0d5a FFF7FEFF 		bl	is_bad_cmdline
 10286              	.LVL860:
 553:src/keys.c    **** 		return;
 10287              		.loc 1 553 5 view .LVU3188
 10288 0d5e 18B9     		cbnz	r0, .L876
 10289 0d60 5FFA8BF0 		uxtb	r0, fp
 10290 0d64 FFF7FEFF 		bl	init_arg.part.0
 10291              	.LVL861:
ARM GAS  /tmp/ccgiIQCZ.s 			page 298


 10292              	.L876:
 553:src/keys.c    **** 		return;
 10293              		.loc 1 553 5 view .LVU3189
 10294              	.LBE1110:
 10295              	.LBE1109:
2374:src/keys.c    **** 	}
 10296              		.loc 1 2374 3 is_stmt 1 view .LVU3190
2374:src/keys.c    **** 	}
 10297              		.loc 1 2374 10 is_stmt 0 view .LVU3191
 10298 0d68 2046     		mov	r0, r4
 10299 0d6a FFF7FEFF 		bl	process_arg
 10300              	.LVL862:
 10301 0d6e 0446     		mov	r4, r0
 10302              	.LVL863:
2374:src/keys.c    **** 	}
 10303              		.loc 1 2374 10 view .LVU3192
 10304 0d70 FFF720BB 		b	.L834
 10305              	.LVL864:
 10306              	.L1369:
2374:src/keys.c    **** 	}
 10307              		.loc 1 2374 10 view .LVU3193
 10308              	.LBE1116:
 10309              	.LBE1261:
3296:src/keys.c    **** 		return STATE_UNFINISHED;
 10310              		.loc 1 3296 3 is_stmt 1 view .LVU3194
 10311              	.LBB1262:
 10312              	.LBI1262:
 121:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 10313              		.loc 1 121 13 view .LVU3195
 10314              	.LBB1263:
 122:src/keys.c    **** }
 10315              		.loc 1 122 2 view .LVU3196
 122:src/keys.c    **** }
 10316              		.loc 1 122 16 is_stmt 0 view .LVU3197
 10317 0d74 98F81020 		ldrb	r2, [r8, #16]	@ zero_extendqisi2
 10318 0d78 3368     		ldr	r3, [r6]
 10319 0d7a 013A     		subs	r2, r2, #1
 10320 0d7c 18BF     		it	ne
 10321 0d7e 0122     		movne	r2, #1
 10322 0d80 88F81020 		strb	r2, [r8, #16]
 10323              	.LVL865:
 122:src/keys.c    **** }
 10324              		.loc 1 122 16 view .LVU3198
 10325              	.LBE1263:
 10326              	.LBE1262:
3297:src/keys.c    **** 	}
 10327              		.loc 1 3297 3 is_stmt 1 view .LVU3199
3297:src/keys.c    **** 	}
 10328              		.loc 1 3297 10 is_stmt 0 view .LVU3200
 10329 0d84 3324     		movs	r4, #51
 10330              	.LVL866:
3297:src/keys.c    **** 	}
 10331              		.loc 1 3297 10 view .LVU3201
 10332 0d86 FFF798B9 		b	.L799
 10333              	.LVL867:
 10334              	.L1370:
3300:src/keys.c    **** 		return STATE_UNFINISHED;
ARM GAS  /tmp/ccgiIQCZ.s 			page 299


 10335              		.loc 1 3300 3 is_stmt 1 view .LVU3202
 10336              	.LBB1264:
 10337              	.LBI1264:
 121:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 10338              		.loc 1 121 13 view .LVU3203
 10339              	.LBB1265:
 122:src/keys.c    **** }
 10340              		.loc 1 122 2 view .LVU3204
 122:src/keys.c    **** }
 10341              		.loc 1 122 16 is_stmt 0 view .LVU3205
 10342 0d8a 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 10343 0d8e 3368     		ldr	r3, [r6]
 10344 0d90 0229     		cmp	r1, #2
 10345 0d92 18BF     		it	ne
 10346 0d94 0222     		movne	r2, #2
 10347 0d96 88F81020 		strb	r2, [r8, #16]
 10348              	.LVL868:
 122:src/keys.c    **** }
 10349              		.loc 1 122 16 view .LVU3206
 10350              	.LBE1265:
 10351              	.LBE1264:
3301:src/keys.c    **** 	}
 10352              		.loc 1 3301 3 is_stmt 1 view .LVU3207
3301:src/keys.c    **** 	}
 10353              		.loc 1 3301 10 is_stmt 0 view .LVU3208
 10354 0d9a 3324     		movs	r4, #51
 10355              	.LVL869:
3301:src/keys.c    **** 	}
 10356              		.loc 1 3301 10 view .LVU3209
 10357 0d9c FFF78DB9 		b	.L799
 10358              	.LVL870:
 10359              	.L1389:
3301:src/keys.c    **** 	}
 10360              		.loc 1 3301 10 view .LVU3210
 10361 0da0 3368     		ldr	r3, [r6]
 10362              	.LBE1429:
 10363              	.LBE1502:
3405:src/keys.c    ****   if (was_paused && Pause == 0)
 10364              		.loc 1 3405 7 view .LVU3211
 10365 0da2 0025     		movs	r5, #0
 10366              	.LBB1503:
3583:src/keys.c    **** 	}
 10367              		.loc 1 3583 6 view .LVU3212
 10368 0da4 3324     		movs	r4, #51
 10369              	.LVL871:
3583:src/keys.c    **** 	}
 10370              		.loc 1 3583 6 view .LVU3213
 10371 0da6 FFF788B9 		b	.L799
 10372              	.LVL872:
 10373              	.L1371:
3583:src/keys.c    **** 	}
 10374              		.loc 1 3583 6 view .LVU3214
 10375              	.LBE1503:
 10376              	.LBB1504:
 10377              	.LBB1430:
3304:src/keys.c    **** 		State2.arrow = 0;
 10378              		.loc 1 3304 3 is_stmt 1 view .LVU3215
ARM GAS  /tmp/ccgiIQCZ.s 			page 300


 10379              	.LBB1266:
 10380              	.LBI1266:
 121:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 10381              		.loc 1 121 13 view .LVU3216
 10382              	.LBB1267:
 122:src/keys.c    **** }
 10383              		.loc 1 122 2 view .LVU3217
 122:src/keys.c    **** }
 10384              		.loc 1 122 16 is_stmt 0 view .LVU3218
 10385 0daa 98F81040 		ldrb	r4, [r8, #16]	@ zero_extendqisi2
 10386              	.LVL873:
 122:src/keys.c    **** }
 10387              		.loc 1 122 16 view .LVU3219
 10388 0dae 3368     		ldr	r3, [r6]
 10389 0db0 032C     		cmp	r4, #3
 10390              	.LBE1267:
 10391              	.LBE1266:
3305:src/keys.c    **** 		return STATE_UNFINISHED;
 10392              		.loc 1 3305 16 view .LVU3220
 10393 0db2 60F38201 		bfi	r1, r0, #2, #1
 10394              	.LBB1270:
 10395              	.LBB1268:
 122:src/keys.c    **** }
 10396              		.loc 1 122 16 view .LVU3221
 10397 0db6 18BF     		it	ne
 10398 0db8 0322     		movne	r2, #3
 10399              	.LBE1268:
 10400              	.LBE1270:
3305:src/keys.c    **** 		return STATE_UNFINISHED;
 10401              		.loc 1 3305 16 view .LVU3222
 10402 0dba 88F81510 		strb	r1, [r8, #21]
 10403              	.LBB1271:
 10404              	.LBB1269:
 122:src/keys.c    **** }
 10405              		.loc 1 122 16 view .LVU3223
 10406 0dbe 88F81020 		strb	r2, [r8, #16]
 10407              	.LVL874:
 122:src/keys.c    **** }
 10408              		.loc 1 122 16 view .LVU3224
 10409              	.LBE1269:
 10410              	.LBE1271:
3305:src/keys.c    **** 		return STATE_UNFINISHED;
 10411              		.loc 1 3305 3 is_stmt 1 view .LVU3225
3306:src/keys.c    **** 	}
 10412              		.loc 1 3306 3 view .LVU3226
3306:src/keys.c    **** 	}
 10413              		.loc 1 3306 10 is_stmt 0 view .LVU3227
 10414 0dc2 3324     		movs	r4, #51
 10415 0dc4 FFF779B9 		b	.L799
 10416              	.LVL875:
 10417              	.L1410:
 10418              	.LBB1272:
 10419              	.LBB1215:
2915:src/keys.c    **** 			n = max;
 10420              		.loc 1 2915 3 is_stmt 1 view .LVU3228
2915:src/keys.c    **** 			n = max;
 10421              		.loc 1 2915 6 is_stmt 0 view .LVU3229
ARM GAS  /tmp/ccgiIQCZ.s 			page 301


 10422 0dc8 111F     		subs	r1, r2, #4
 10423              	.LVL876:
2915:src/keys.c    **** 			n = max;
 10424              		.loc 1 2915 6 view .LVU3230
 10425 0dca 012A     		cmp	r2, #1
 10426 0dcc 18BF     		it	ne
 10427 0dce 0B46     		movne	r3, r1
 10428              	.LVL877:
2915:src/keys.c    **** 			n = max;
 10429              		.loc 1 2915 6 view .LVU3231
 10430 0dd0 43E7     		b	.L883
 10431              	.LVL878:
 10432              	.L1393:
2915:src/keys.c    **** 			n = max;
 10433              		.loc 1 2915 6 view .LVU3232
 10434              	.LBE1215:
 10435              	.LBE1272:
 10436              	.LBB1273:
 10437              	.LBB1134:
1714:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 10438              		.loc 1 1714 44 is_stmt 1 view .LVU3233
1714:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 10439              		.loc 1 1714 52 is_stmt 0 view .LVU3234
 10440 0dd2 0120     		movs	r0, #1
 10441 0dd4 FFF7FEFF 		bl	gtodot_digit
 10442              	.LVL879:
1760:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10443              		.loc 1 1760 2 is_stmt 1 view .LVU3235
 10444              	.LBE1134:
 10445              	.LBE1273:
3281:src/keys.c    **** 
 10446              		.loc 1 3281 10 is_stmt 0 view .LVU3236
 10447 0dd8 3324     		movs	r4, #51
 10448              	.LVL880:
3281:src/keys.c    **** 
 10449              		.loc 1 3281 10 view .LVU3237
 10450 0dda 3368     		ldr	r3, [r6]
 10451 0ddc FFF76DB9 		b	.L799
 10452              	.LVL881:
 10453              	.L1414:
 10454              	.LBB1274:
 10455              	.LBB1248:
1658:src/keys.c    **** 	  if (!C_LOCK_ON) {
 10456              		.loc 1 1658 22 view .LVU3238
 10457 0de0 2E4B     		ldr	r3, .L1450+8
 10458 0de2 1B68     		ldr	r3, [r3]
1658:src/keys.c    **** 	  if (!C_LOCK_ON) {
 10459              		.loc 1 1658 19 view .LVU3239
 10460 0de4 93F8DE17 		ldrb	r1, [r3, #2014]	@ zero_extendqisi2
 10461 0de8 4907     		lsls	r1, r1, #29
 10462 0dea 40F14C82 		bpl	.L895
1659:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
 10463              		.loc 1 1659 4 is_stmt 1 view .LVU3240
1659:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
 10464              		.loc 1 1659 8 is_stmt 0 view .LVU3241
 10465 0dee 93F8E437 		ldrb	r3, [r3, #2020]	@ zero_extendqisi2
1659:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
ARM GAS  /tmp/ccgiIQCZ.s 			page 302


 10466              		.loc 1 1659 7 view .LVU3242
 10467 0df2 13F00403 		ands	r3, r3, #4
 10468 0df6 40F08483 		bne	.L1417
 10469              	.LVL882:
1659:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
 10470              		.loc 1 1659 7 view .LVU3243
 10471              	.LBE1248:
 10472              	.LBE1274:
 10473              	.LBE1430:
 10474              	.LBE1504:
3641:src/keys.c    **** 	NonProgrammable = 0;
 10475              		.loc 1 3641 7 is_stmt 1 view .LVU3244
3641:src/keys.c    **** 	NonProgrammable = 0;
 10476              		.loc 1 3641 11 is_stmt 0 view .LVU3245
 10477 0dfa 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3641:src/keys.c    **** 	NonProgrammable = 0;
 10478              		.loc 1 3641 10 view .LVU3246
 10479 0dfe 5006     		lsls	r0, r2, #25
 10480 0e00 40F19885 		bpl	.L1171
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10481              		.loc 1 3642 2 is_stmt 1 view .LVU3247
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10482              		.loc 1 3642 18 is_stmt 0 view .LVU3248
 10483 0e04 2B4A     		ldr	r2, .L1450+32
3643:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10484              		.loc 1 3643 32 view .LVU3249
 10485 0e06 4FF4E575 		mov	r5, #458
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10486              		.loc 1 3642 18 view .LVU3250
 10487 0e0a 1360     		str	r3, [r2]
3643:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10488              		.loc 1 3643 2 is_stmt 1 view .LVU3251
 10489 0e0c C7E4     		b	.L1105
 10490              	.LVL883:
 10491              	.L1394:
 10492              	.LBB1505:
 10493              	.LBB1431:
 10494              	.LBB1275:
 10495              	.LBB1135:
1715:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 10496              		.loc 1 1715 44 view .LVU3252
1715:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 10497              		.loc 1 1715 52 is_stmt 0 view .LVU3253
 10498 0e0e 0220     		movs	r0, #2
 10499 0e10 FFF7FEFF 		bl	gtodot_digit
 10500              	.LVL884:
1760:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10501              		.loc 1 1760 2 is_stmt 1 view .LVU3254
 10502              	.LBE1135:
 10503              	.LBE1275:
3281:src/keys.c    **** 
 10504              		.loc 1 3281 10 is_stmt 0 view .LVU3255
 10505 0e14 3324     		movs	r4, #51
 10506              	.LVL885:
3281:src/keys.c    **** 
 10507              		.loc 1 3281 10 view .LVU3256
 10508 0e16 3368     		ldr	r3, [r6]
ARM GAS  /tmp/ccgiIQCZ.s 			page 303


 10509 0e18 FFF74FB9 		b	.L799
 10510              	.LVL886:
 10511              	.L868:
 10512              	.LBB1276:
 10513              	.LBB1117:
2361:src/keys.c    **** 	}
 10514              		.loc 1 2361 3 is_stmt 1 view .LVU3257
2361:src/keys.c    **** 	}
 10515              		.loc 1 2361 10 is_stmt 0 view .LVU3258
 10516 0e1c 0BF12005 		add	r5, fp, #32
 10517 0e20 43EA0525 		orr	r5, r3, r5, lsl #8
 10518 0e24 2C46     		mov	r4, r5
 10519              	.LVL887:
2361:src/keys.c    **** 	}
 10520              		.loc 1 2361 10 view .LVU3259
 10521 0e26 FFF758BB 		b	.L861
 10522              	.LVL888:
 10523              	.L1411:
2361:src/keys.c    **** 	}
 10524              		.loc 1 2361 10 view .LVU3260
 10525              	.LBE1117:
 10526              	.LBE1276:
 10527              	.LBB1277:
 10528              	.LBB1216:
2919:src/keys.c    **** 			n = -2;
 10529              		.loc 1 2919 3 is_stmt 1 view .LVU3261
2919:src/keys.c    **** 			n = -2;
 10530              		.loc 1 2919 6 is_stmt 0 view .LVU3262
 10531 0e2a 023A     		subs	r2, r2, #2
 10532              	.LVL889:
2920:src/keys.c    **** 	}
 10533              		.loc 1 2920 6 view .LVU3263
 10534 0e2c 9A42     		cmp	r2, r3
 10535 0e2e D4BF     		ite	le
 10536 0e30 1346     		movle	r3, r2
 10537              	.LVL890:
2920:src/keys.c    **** 	}
 10538              		.loc 1 2920 6 view .LVU3264
 10539 0e32 6FF00103 		mvngt	r3, #1
 10540 0e36 10E7     		b	.L883
 10541              	.LVL891:
 10542              	.L1404:
2920:src/keys.c    **** 	}
 10543              		.loc 1 2920 6 view .LVU3265
 10544              	.LBE1216:
 10545              	.LBE1277:
3320:src/keys.c    **** 		if (is_bad_cmdline())
 10546              		.loc 1 3320 2 is_stmt 1 view .LVU3266
3320:src/keys.c    **** 		if (is_bad_cmdline())
 10547              		.loc 1 3320 5 is_stmt 0 view .LVU3267
 10548 0e38 BAF1000F 		cmp	r10, #0
 10549 0e3c 7FF456AC 		bne	.L905
 10550 0e40 FFF708BA 		b	.L927
 10551              	.LVL892:
 10552              	.L1415:
 10553              	.LBB1278:
 10554              	.LBB1249:
ARM GAS  /tmp/ccgiIQCZ.s 			page 304


1670:src/keys.c    **** 
 10555              		.loc 1 1670 3 is_stmt 1 view .LVU3268
1670:src/keys.c    **** 
 10556              		.loc 1 1670 25 is_stmt 0 view .LVU3269
 10557 0e44 009A     		ldr	r2, [sp]
 10558 0e46 02EB4303 		add	r3, r2, r3, lsl #1
 10559 0e4a 1B4A     		ldr	r2, .L1450+36
 10560 0e4c 32F81340 		ldrh	r4, [r2, r3, lsl #1]
 10561              	.LVL893:
1670:src/keys.c    **** 
 10562              		.loc 1 1670 25 view .LVU3270
 10563 0e50 FFF7B0BA 		b	.L834
 10564              	.LVL894:
 10565              	.L1395:
1670:src/keys.c    **** 
 10566              		.loc 1 1670 25 view .LVU3271
 10567              	.LBE1249:
 10568              	.LBE1278:
 10569              	.LBB1279:
 10570              	.LBB1136:
1716:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 10571              		.loc 1 1716 44 is_stmt 1 view .LVU3272
1716:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 10572              		.loc 1 1716 52 is_stmt 0 view .LVU3273
 10573 0e54 0320     		movs	r0, #3
 10574 0e56 FFF7FEFF 		bl	gtodot_digit
 10575              	.LVL895:
1760:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10576              		.loc 1 1760 2 is_stmt 1 view .LVU3274
 10577              	.LBE1136:
 10578              	.LBE1279:
3281:src/keys.c    **** 
 10579              		.loc 1 3281 10 is_stmt 0 view .LVU3275
 10580 0e5a 3324     		movs	r4, #51
 10581              	.LVL896:
3281:src/keys.c    **** 
 10582              		.loc 1 3281 10 view .LVU3276
 10583 0e5c 3368     		ldr	r3, [r6]
 10584 0e5e FFF72CB9 		b	.L799
 10585              	.LVL897:
 10586              	.L877:
 10587              	.LBB1280:
 10588              	.LBB1118:
2380:src/keys.c    **** 		return STATE_UNFINISHED;
 10589              		.loc 1 2380 3 is_stmt 1 view .LVU3277
 10590              	.LBB1111:
 10591              	.LBI1111:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 10592              		.loc 1 552 13 view .LVU3278
 10593              	.LBB1112:
 553:src/keys.c    **** 		return;
 10594              		.loc 1 553 2 view .LVU3279
 553:src/keys.c    **** 		return;
 10595              		.loc 1 553 6 is_stmt 0 view .LVU3280
 10596 0e62 FFF7FEFF 		bl	is_bad_cmdline
 10597              	.LVL898:
 553:src/keys.c    **** 		return;
ARM GAS  /tmp/ccgiIQCZ.s 			page 305


 10598              		.loc 1 553 5 view .LVU3281
 10599 0e66 0446     		mov	r4, r0
 10600              	.LVL899:
 553:src/keys.c    **** 		return;
 10601              		.loc 1 553 5 view .LVU3282
 10602 0e68 0028     		cmp	r0, #0
 10603 0e6a 7FF445AC 		bne	.L1349
 10604 0e6e 5FFA8BF0 		uxtb	r0, fp
 10605 0e72 FFF7FEFF 		bl	init_arg.part.0
 10606              	.LVL900:
 10607              	.LBE1112:
 10608              	.LBE1111:
 10609              	.LBE1118:
 10610              	.LBE1280:
 10611              	.LBE1431:
 10612              	.LBE1505:
3405:src/keys.c    ****   if (was_paused && Pause == 0)
 10613              		.loc 1 3405 7 view .LVU3283
 10614 0e76 2546     		mov	r5, r4
 10615 0e78 3368     		ldr	r3, [r6]
 10616              	.LBB1506:
 10617              	.LBB1432:
 10618              	.LBB1281:
 10619              	.LBB1119:
2381:src/keys.c    **** 
 10620              		.loc 1 2381 10 view .LVU3284
 10621 0e7a 3324     		movs	r4, #51
 10622 0e7c FFF71DB9 		b	.L799
 10623              	.LVL901:
 10624              	.L1139:
2381:src/keys.c    **** 
 10625              		.loc 1 2381 10 view .LVU3285
 10626              	.LBE1119:
 10627              	.LBE1281:
 10628              	.LBB1282:
 10629              	.LBB1217:
 10630              	.LBB1211:
2927:src/keys.c    **** 		if (nn <= 9)
 10631              		.loc 1 2927 7 view .LVU3286
 10632 0e80 0B46     		mov	r3, r1
 10633              	.LVL902:
2927:src/keys.c    **** 		if (nn <= 9)
 10634              		.loc 1 2927 7 view .LVU3287
 10635 0e82 EAE6     		b	.L883
 10636              	.LVL903:
 10637              	.L928:
2927:src/keys.c    **** 		if (nn <= 9)
 10638              		.loc 1 2927 7 view .LVU3288
 10639              	.LBE1211:
 10640              	.LBE1217:
 10641              	.LBE1282:
3323:src/keys.c    **** 		init_cat( cat );
 10642              		.loc 1 3323 3 is_stmt 1 view .LVU3289
 10643 0e84 FFF7FEFF 		bl	init_cat
 10644              	.LVL904:
3324:src/keys.c    **** 		return STATE_UNFINISHED;
 10645              		.loc 1 3324 3 view .LVU3290
ARM GAS  /tmp/ccgiIQCZ.s 			page 306


 10646 0e88 5046     		mov	r0, r10
 10647 0e8a FFF7FEFF 		bl	init_cat
 10648              	.LVL905:
3325:src/keys.c    **** 	}
 10649              		.loc 1 3325 3 view .LVU3291
 10650              	.LBE1432:
 10651              	.LBE1506:
3405:src/keys.c    ****   if (was_paused && Pause == 0)
 10652              		.loc 1 3405 7 is_stmt 0 view .LVU3292
 10653 0e8e 2546     		mov	r5, r4
 10654 0e90 32E4     		b	.L1349
 10655              	.L1451:
 10656 0e92 00BF     		.align	2
 10657              	.L1450:
 10658 0e94 00000000 		.word	.LANCHOR6
 10659 0e98 00000000 		.word	.LANCHOR15
 10660 0e9c 00000000 		.word	main_ram
 10661 0ea0 00000000 		.word	.LANCHOR5
 10662 0ea4 00000000 		.word	.LANCHOR21
 10663 0ea8 00080800 		.word	526336
 10664 0eac 00000000 		.word	.LANCHOR22
 10665 0eb0 00000000 		.word	.LANCHOR16
 10666 0eb4 00000000 		.word	NonProgrammable
 10667 0eb8 00000000 		.word	.LANCHOR20
 10668              	.L1376:
 10669              	.LBB1507:
 10670              	.LBB1433:
3335:src/keys.c    **** 
 10671              		.loc 1 3335 3 is_stmt 1 view .LVU3293
 10672              	.LVL906:
 10673              	.LBB1283:
 10674              	.LBI1052:
2989:src/keys.c    **** 	unsigned int pc = State2.digval;
 10675              		.loc 1 2989 12 view .LVU3294
 10676              	.LBB1079:
2990:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 10677              		.loc 1 2990 2 view .LVU3295
2992:src/keys.c    **** 	const int opcode = getprog(pc);
 10678              		.loc 1 2992 27 is_stmt 0 view .LVU3296
 10679 0ebc 262C     		cmp	r4, #38
2990:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 10680              		.loc 1 2990 15 view .LVU3297
 10681 0ebe B8F808B0 		ldrh	fp, [r8, #8]
 10682              	.LVL907:
2991:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
 10683              		.loc 1 2991 2 is_stmt 1 view .LVU3298
2992:src/keys.c    **** 	const int opcode = getprog(pc);
 10684              		.loc 1 2992 27 is_stmt 0 view .LVU3299
 10685 0ec2 00F0A083 		beq	.L1153
 10686              	.LVL908:
 10687              	.LBB1062:
 10688              	.LBI1062:
 210:src/keys.c    **** {
 10689              		.loc 1 210 14 is_stmt 1 view .LVU3300
 10690              	.LBB1063:
 212:src/keys.c    ****     // K00 - K05
 10691              		.loc 1 212 3 view .LVU3301
ARM GAS  /tmp/ccgiIQCZ.s 			page 307


 234:src/keys.c    **** }
 10692              		.loc 1 234 3 view .LVU3302
 10693              	.LBB1064:
 10694              	.LBI1064:
 131:src/keys.c    **** {
 10695              		.loc 1 131 12 view .LVU3303
 10696              	.LBB1065:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10697              		.loc 1 133 2 view .LVU3304
 143:src/keys.c    **** }
 10698              		.loc 1 143 2 view .LVU3305
 143:src/keys.c    **** }
 10699              		.loc 1 143 23 is_stmt 0 view .LVU3306
 10700 0ec6 E14B     		ldr	r3, .L1452
 10701              	.LBE1065:
 10702              	.LBE1064:
 234:src/keys.c    **** }
 10703              		.loc 1 234 28 view .LVU3307
 10704 0ec8 E14A     		ldr	r2, .L1452+4
 10705              	.LBB1067:
 10706              	.LBB1066:
 143:src/keys.c    **** }
 10707              		.loc 1 143 23 view .LVU3308
 10708 0eca 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 10709              	.LBE1066:
 10710              	.LBE1067:
 234:src/keys.c    **** }
 10711              		.loc 1 234 10 view .LVU3309
 10712 0ecc 12F803A0 		ldrb	r10, [r2, r3]	@ zero_extendqisi2
 10713              	.LBE1063:
 10714              	.LBE1062:
2992:src/keys.c    **** 	const int opcode = getprog(pc);
 10715              		.loc 1 2992 27 view .LVU3310
 10716 0ed0 2AF0800A 		bic	r10, r10, #128
 10717              	.L947:
 10718              	.LVL909:
2993:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 10719              		.loc 1 2993 2 is_stmt 1 view .LVU3311
2993:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 10720              		.loc 1 2993 21 is_stmt 0 view .LVU3312
 10721 0ed4 5846     		mov	r0, fp
 10722 0ed6 FFF7FEFF 		bl	getprog
 10723              	.LVL910:
2994:src/keys.c    **** 	const int direct = State2.runmode;
 10724              		.loc 1 2994 2 is_stmt 1 view .LVU3313
2994:src/keys.c    **** 	const int direct = State2.runmode;
 10725              		.loc 1 2994 20 is_stmt 0 view .LVU3314
 10726 0eda 00F47040 		and	r0, r0, #61440
 10727              	.LVL911:
2994:src/keys.c    **** 	const int direct = State2.runmode;
 10728              		.loc 1 2994 63 view .LVU3315
 10729 0ede B0F5704F 		cmp	r0, #61440
 10730 0ee2 00F09A84 		beq	.L1418
 10731 0ee6 0022     		movs	r2, #0
 10732              	.L948:
 10733              	.LVL912:
2995:src/keys.c    **** 	const enum shifts shift = reset_shift();
ARM GAS  /tmp/ccgiIQCZ.s 			page 308


 10734              		.loc 1 2995 2 is_stmt 1 view .LVU3316
2995:src/keys.c    **** 	const enum shifts shift = reset_shift();
 10735              		.loc 1 2995 27 is_stmt 0 view .LVU3317
 10736 0ee8 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10737 0eec 0192     		str	r2, [sp, #4]
 10738              	.LVL913:
2995:src/keys.c    **** 	const enum shifts shift = reset_shift();
 10739              		.loc 1 2995 27 view .LVU3318
 10740 0eee C3F38013 		ubfx	r3, r3, #6, #1
 10741 0ef2 0093     		str	r3, [sp]
 10742              	.LVL914:
2996:src/keys.c    **** 	int op = STATE_UNFINISHED;
 10743              		.loc 1 2996 2 is_stmt 1 view .LVU3319
 10744              	.LBB1068:
 10745              	.LBI1068:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 10746              		.loc 1 114 13 view .LVU3320
 10747              	.LBE1068:
 10748              	.LBE1079:
 10749              	.LBE1283:
 10750              	.LBE1433:
 10751              	.LBE1507:
 115:src/keys.c    **** }
 10752              		.loc 1 115 2 view .LVU3321
 10753              	.LBB1508:
 10754              	.LBB1434:
 10755              	.LBB1284:
 10756              	.LBB1080:
 10757              	.LBB1075:
 10758              	.LBB1069:
 10759              	.LBI1069:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 10760              		.loc 1 104 20 view .LVU3322
 10761              	.LBB1070:
 105:src/keys.c    **** 	State2.shifts = shift;
 10762              		.loc 1 105 2 view .LVU3323
 10763              	.LBB1071:
 10764              	.LBI1071:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 10765              		.loc 1 96 13 view .LVU3324
 10766              	.LBB1072:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10767              		.loc 1 97 2 view .LVU3325
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10768              		.loc 1 97 18 is_stmt 0 view .LVU3326
 10769 0ef4 FFF7FEFF 		bl	shift_down
 10770              	.LVL915:
  98:src/keys.c    **** }
 10771              		.loc 1 98 2 is_stmt 1 view .LVU3327
  98:src/keys.c    **** }
 10772              		.loc 1 98 52 is_stmt 0 view .LVU3328
 10773 0ef8 019A     		ldr	r2, [sp, #4]
 10774 0efa 0346     		mov	r3, r0
 10775 0efc 08B9     		cbnz	r0, .L949
 10776 0efe 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 10777              	.L949:
 10778              	.LVL916:
ARM GAS  /tmp/ccgiIQCZ.s 			page 309


  98:src/keys.c    **** }
 10779              		.loc 1 98 52 view .LVU3329
 10780              	.LBE1072:
 10781              	.LBE1071:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10782              		.loc 1 106 2 is_stmt 1 view .LVU3330
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10783              		.loc 1 106 16 is_stmt 0 view .LVU3331
 10784 0f02 0021     		movs	r1, #0
 10785              	.LBE1070:
 10786              	.LBE1069:
 10787              	.LBE1075:
2999:src/keys.c    **** 		// Digits take you to that segment
 10788              		.loc 1 2999 5 view .LVU3332
 10789 0f04 BAF1020F 		cmp	r10, #2
 10790              	.LBB1076:
 10791              	.LBB1074:
 10792              	.LBB1073:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10793              		.loc 1 106 16 view .LVU3333
 10794 0f08 88F81010 		strb	r1, [r8, #16]
 108:src/keys.c    **** }
 10795              		.loc 1 108 2 is_stmt 1 view .LVU3334
 10796              	.LVL917:
 108:src/keys.c    **** }
 10797              		.loc 1 108 2 is_stmt 0 view .LVU3335
 10798              	.LBE1073:
 10799              	.LBE1074:
 10800              	.LBE1076:
2997:src/keys.c    **** 
 10801              		.loc 1 2997 2 is_stmt 1 view .LVU3336
2999:src/keys.c    **** 		// Digits take you to that segment
 10802              		.loc 1 2999 2 view .LVU3337
2999:src/keys.c    **** 		// Digits take you to that segment
 10803              		.loc 1 2999 5 is_stmt 0 view .LVU3338
 10804 0f0c 40F27484 		bls	.L1419
3008:src/keys.c    **** 
 10805              		.loc 1 3008 2 is_stmt 1 view .LVU3339
3008:src/keys.c    **** 
 10806              		.loc 1 3008 12 is_stmt 0 view .LVU3340
 10807 0f10 44EA0323 		orr	r3, r4, r3, lsl #8
 10808              	.LVL918:
3008:src/keys.c    **** 
 10809              		.loc 1 3008 2 view .LVU3341
 10810 0f14 272B     		cmp	r3, #39
 10811 0f16 00F39E80 		bgt	.L952
 10812 0f1a 042B     		cmp	r3, #4
 10813 0f1c 7FF7ECAB 		ble	.L1349
 10814 0f20 053B     		subs	r3, r3, #5
 10815 0f22 222B     		cmp	r3, #34
 10816 0f24 3FF6E8AB 		bhi	.L1349
 10817 0f28 01A1     		adr	r1, .L961
 10818 0f2a 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 10819 0f2e 00BF     		.p2align 2
 10820              	.L961:
 10821 0f30 49100000 		.word	.L966+1
 10822 0f34 DF0F0000 		.word	.L965+1
ARM GAS  /tmp/ccgiIQCZ.s 			page 310


 10823 0f38 DF0F0000 		.word	.L965+1
 10824 0f3c F9060000 		.word	.L1349+1
 10825 0f40 F9060000 		.word	.L1349+1
 10826 0f44 F9060000 		.word	.L1349+1
 10827 0f48 F9060000 		.word	.L1349+1
 10828 0f4c 23070000 		.word	.L1156+1
 10829 0f50 F9060000 		.word	.L1349+1
 10830 0f54 F9060000 		.word	.L1349+1
 10831 0f58 F9060000 		.word	.L1349+1
 10832 0f5c 2F100000 		.word	.L964+1
 10833 0f60 F9060000 		.word	.L1349+1
 10834 0f64 1B100000 		.word	.L963+1
 10835 0f68 F9060000 		.word	.L1349+1
 10836 0f6c F9060000 		.word	.L1349+1
 10837 0f70 F9060000 		.word	.L1349+1
 10838 0f74 F9060000 		.word	.L1349+1
 10839 0f78 F9060000 		.word	.L1349+1
 10840 0f7c C90F0000 		.word	.L962+1
 10841 0f80 F9060000 		.word	.L1349+1
 10842 0f84 F9060000 		.word	.L1349+1
 10843 0f88 F9060000 		.word	.L1349+1
 10844 0f8c F9060000 		.word	.L1349+1
 10845 0f90 F9060000 		.word	.L1349+1
 10846 0f94 F9060000 		.word	.L1349+1
 10847 0f98 F9060000 		.word	.L1349+1
 10848 0f9c F9060000 		.word	.L1349+1
 10849 0fa0 F9060000 		.word	.L1349+1
 10850 0fa4 F9060000 		.word	.L1349+1
 10851 0fa8 F9060000 		.word	.L1349+1
 10852 0fac F9060000 		.word	.L1349+1
 10853 0fb0 F9060000 		.word	.L1349+1
 10854 0fb4 F9060000 		.word	.L1349+1
 10855 0fb8 EF0F0000 		.word	.L960+1
 10856              		.p2align 1
 10857              	.L955:
3015:src/keys.c    **** 	case K_DOWN:				// Find next label
 10858              		.loc 1 3015 3 is_stmt 1 view .LVU3342
3015:src/keys.c    **** 	case K_DOWN:				// Find next label
 10859              		.loc 1 3015 8 is_stmt 0 view .LVU3343
 10860 0fbc 5846     		mov	r0, fp
 10861 0fbe 0122     		movs	r2, #1
 10862 0fc0 0021     		movs	r1, #0
 10863 0fc2 FFF7FEFF 		bl	advance_to_next_label
 10864              	.LVL919:
 10865 0fc6 8346     		mov	fp, r0
 10866              	.LVL920:
 10867              	.L962:
3018:src/keys.c    **** 		return STATE_UNFINISHED;
 10868              		.loc 1 3018 3 is_stmt 1 view .LVU3344
3018:src/keys.c    **** 		return STATE_UNFINISHED;
 10869              		.loc 1 3018 19 is_stmt 0 view .LVU3345
 10870 0fc8 5846     		mov	r0, fp
 10871 0fca 0022     		movs	r2, #0
 10872 0fcc 0121     		movs	r1, #1
 10873 0fce FFF7FEFF 		bl	advance_to_next_label
 10874              	.LVL921:
3019:src/keys.c    **** 
ARM GAS  /tmp/ccgiIQCZ.s 			page 311


 10875              		.loc 1 3019 10 view .LVU3346
 10876 0fd2 3324     		movs	r4, #51
 10877              	.LVL922:
3019:src/keys.c    **** 
 10878              		.loc 1 3019 10 view .LVU3347
 10879 0fd4 3368     		ldr	r3, [r6]
3018:src/keys.c    **** 		return STATE_UNFINISHED;
 10880              		.loc 1 3018 17 view .LVU3348
 10881 0fd6 A8F80800 		strh	r0, [r8, #8]	@ movhi
3019:src/keys.c    **** 
 10882              		.loc 1 3019 3 is_stmt 1 view .LVU3349
3019:src/keys.c    **** 
 10883              		.loc 1 3019 10 is_stmt 0 view .LVU3350
 10884 0fda FFF76EB8 		b	.L799
 10885              	.LVL923:
 10886              	.L965:
3040:src/keys.c    **** 	  //#endif
 10887              		.loc 1 3040 3 is_stmt 1 view .LVU3351
3040:src/keys.c    **** 	  //#endif
 10888              		.loc 1 3040 38 is_stmt 0 view .LVU3352
 10889 0fde 062C     		cmp	r4, #6
 10890 0fe0 40F2B114 		movw	r4, #433
 10891              	.LVL924:
3040:src/keys.c    **** 	  //#endif
 10892              		.loc 1 3040 38 view .LVU3353
 10893 0fe4 08BF     		it	eq
 10894 0fe6 4FF4D974 		moveq	r4, #434
 10895 0fea FFF79BBB 		b	.L958
 10896              	.LVL925:
 10897              	.L960:
3070:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 10898              		.loc 1 3070 3 is_stmt 1 view .LVU3354
3070:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 10899              		.loc 1 3070 6 is_stmt 0 view .LVU3355
 10900 0fee 009B     		ldr	r3, [sp]
 10901 0ff0 002B     		cmp	r3, #0
 10902 0ff2 3FF481AB 		beq	.L1349
3070:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 10903              		.loc 1 3070 14 view .LVU3356
 10904 0ff6 002A     		cmp	r2, #0
 10905 0ff8 3FF47EAB 		beq	.L1349
3071:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
 10906              		.loc 1 3071 4 is_stmt 1 view .LVU3357
 10907 0ffc 5946     		mov	r1, fp
 10908 0ffe 0120     		movs	r0, #1
 10909 1000 FFF7FEFF 		bl	cmdgtocommon
 10910              	.LVL926:
3072:src/keys.c    **** 			break;
 10911              		.loc 1 3072 4 view .LVU3358
3073:src/keys.c    **** 		}
 10912              		.loc 1 3073 4 view .LVU3359
3084:src/keys.c    **** 	State2.labellist = 0;
 10913              		.loc 1 3084 2 view .LVU3360
3085:src/keys.c    **** 	return check_confirm(op);
 10914              		.loc 1 3085 19 is_stmt 0 view .LVU3361
 10915 1004 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
3084:src/keys.c    **** 	State2.labellist = 0;
ARM GAS  /tmp/ccgiIQCZ.s 			page 312


 10916              		.loc 1 3084 16 view .LVU3362
 10917 1008 0023     		movs	r3, #0
3085:src/keys.c    **** 	return check_confirm(op);
 10918              		.loc 1 3085 19 view .LVU3363
 10919 100a 63F38202 		bfi	r2, r3, #2, #1
 10920 100e 88F81720 		strb	r2, [r8, #23]
3084:src/keys.c    **** 	State2.labellist = 0;
 10921              		.loc 1 3084 16 view .LVU3364
 10922 1012 A8F80830 		strh	r3, [r8, #8]	@ movhi
3085:src/keys.c    **** 	return check_confirm(op);
 10923              		.loc 1 3085 2 is_stmt 1 view .LVU3365
3086:src/keys.c    **** }
 10924              		.loc 1 3086 2 view .LVU3366
 10925              	.LVL927:
 10926              	.LBB1077:
 716:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10927              		.loc 1 716 12 view .LVU3367
 10928              	.LBB1058:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 10929              		.loc 1 717 2 view .LVU3368
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 10930              		.loc 1 717 2 is_stmt 0 view .LVU3369
 10931              	.LBE1058:
 10932              	.LBE1077:
 10933              	.LBE1080:
 10934              	.LBE1284:
 10935              	.LBE1434:
 10936              	.LBE1508:
3605:src/keys.c    ****     case STATE_SST:
 10937              		.loc 1 3605 5 is_stmt 1 view .LVU3370
 10938 1016 FFF75AB9 		b	.L809
 10939              	.LVL928:
 10940              	.L963:
 10941              	.LBB1509:
 10942              	.LBB1435:
 10943              	.LBB1285:
 10944              	.LBB1081:
3022:src/keys.c    **** 		return STATE_UNFINISHED;
 10945              		.loc 1 3022 3 view .LVU3371
3022:src/keys.c    **** 		return STATE_UNFINISHED;
 10946              		.loc 1 3022 19 is_stmt 0 view .LVU3372
 10947 101a 5846     		mov	r0, fp
 10948 101c 0021     		movs	r1, #0
 10949 101e FFF7FEFF 		bl	advance_to_previous_label
 10950              	.LVL929:
3023:src/keys.c    **** 
 10951              		.loc 1 3023 10 view .LVU3373
 10952 1022 3324     		movs	r4, #51
 10953              	.LVL930:
3023:src/keys.c    **** 
 10954              		.loc 1 3023 10 view .LVU3374
 10955 1024 3368     		ldr	r3, [r6]
3022:src/keys.c    **** 		return STATE_UNFINISHED;
 10956              		.loc 1 3022 17 view .LVU3375
 10957 1026 A8F80800 		strh	r0, [r8, #8]	@ movhi
3023:src/keys.c    **** 
 10958              		.loc 1 3023 3 is_stmt 1 view .LVU3376
ARM GAS  /tmp/ccgiIQCZ.s 			page 313


3023:src/keys.c    **** 
 10959              		.loc 1 3023 10 is_stmt 0 view .LVU3377
 10960 102a FFF746B8 		b	.L799
 10961              	.LVL931:
 10962              	.L964:
3084:src/keys.c    **** 	State2.labellist = 0;
 10963              		.loc 1 3084 2 is_stmt 1 view .LVU3378
3085:src/keys.c    **** 	return check_confirm(op);
 10964              		.loc 1 3085 19 is_stmt 0 view .LVU3379
 10965 102e 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
 10966 1032 3368     		ldr	r3, [r6]
3084:src/keys.c    **** 	State2.labellist = 0;
 10967              		.loc 1 3084 16 view .LVU3380
 10968 1034 0022     		movs	r2, #0
3085:src/keys.c    **** 	return check_confirm(op);
 10969              		.loc 1 3085 19 view .LVU3381
 10970 1036 62F38201 		bfi	r1, r2, #2, #1
 10971 103a 88F81710 		strb	r1, [r8, #23]
3084:src/keys.c    **** 	State2.labellist = 0;
 10972              		.loc 1 3084 16 view .LVU3382
 10973 103e A8F80820 		strh	r2, [r8, #8]	@ movhi
3085:src/keys.c    **** 	return check_confirm(op);
 10974              		.loc 1 3085 2 is_stmt 1 view .LVU3383
3086:src/keys.c    **** }
 10975              		.loc 1 3086 2 view .LVU3384
 10976              	.LVL932:
 10977              	.LBB1078:
 716:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10978              		.loc 1 716 12 view .LVU3385
 10979              	.LBB1059:
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 10980              		.loc 1 717 2 view .LVU3386
 717:src/keys.c    **** 		const int nilop = argKIND(op);
 10981              		.loc 1 717 2 is_stmt 0 view .LVU3387
 10982              	.LBE1059:
 10983              	.LBE1078:
 10984              	.LBE1081:
 10985              	.LBE1285:
 10986              	.LBE1435:
 10987              	.LBE1509:
3605:src/keys.c    ****     case STATE_SST:
 10988              		.loc 1 3605 5 is_stmt 1 view .LVU3388
 10989              	.LBB1510:
 10990              	.LBB1436:
 10991              	.LBB1286:
 10992              	.LBB1082:
2997:src/keys.c    **** 
 10993              		.loc 1 2997 6 is_stmt 0 view .LVU3389
 10994 1042 3324     		movs	r4, #51
 10995 1044 FFF739B8 		b	.L799
 10996              	.LVL933:
 10997              	.L966:
 10998              	.L971:
3048:src/keys.c    **** 		goto xeq_or_gto;
 10999              		.loc 1 3048 3 is_stmt 1 view .LVU3390
3048:src/keys.c    **** 		goto xeq_or_gto;
 11000              		.loc 1 3048 6 is_stmt 0 view .LVU3391
ARM GAS  /tmp/ccgiIQCZ.s 			page 314


 11001 1048 02F50074 		add	r4, r2, #512
 11002              	.LVL934:
3049:src/keys.c    **** 
 11003              		.loc 1 3049 3 is_stmt 1 view .LVU3392
3054:src/keys.c    **** 			break;
 11004              		.loc 1 3054 3 view .LVU3393
3054:src/keys.c    **** 			break;
 11005              		.loc 1 3054 6 is_stmt 0 view .LVU3394
 11006 104c 002A     		cmp	r2, #0
 11007 104e 7FF46CAB 		bne	.L970
 11008 1052 FFF751BB 		b	.L1349
 11009              	.LVL935:
 11010              	.L952:
3008:src/keys.c    **** 
 11011              		.loc 1 3008 2 view .LVU3395
 11012 1056 B3F58C7F 		cmp	r3, #280
 11013 105a 49DC     		bgt	.L967
 11014 105c B3F5827F 		cmp	r3, #260
 11015 1060 7FF74AAB 		ble	.L1349
 11016 1064 6FF48271 		mvn	r1, #260
 11017 1068 0B44     		add	r3, r3, r1
 11018 106a 132B     		cmp	r3, #19
 11019 106c 3FF644AB 		bhi	.L1349
 11020 1070 01A1     		adr	r1, .L956
 11021 1072 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 11022 1076 00BF     		.p2align 2
 11023              	.L956:
 11024 1078 D1100000 		.word	.L959+1
 11025 107c F9060000 		.word	.L1349+1
 11026 1080 F9060000 		.word	.L1349+1
 11027 1084 F9060000 		.word	.L1349+1
 11028 1088 F9060000 		.word	.L1349+1
 11029 108c F9060000 		.word	.L1349+1
 11030 1090 F9060000 		.word	.L1349+1
 11031 1094 F9060000 		.word	.L1349+1
 11032 1098 F9060000 		.word	.L1349+1
 11033 109c F9060000 		.word	.L1349+1
 11034 10a0 F9060000 		.word	.L1349+1
 11035 10a4 C9100000 		.word	.L1155+1
 11036 10a8 F9060000 		.word	.L1349+1
 11037 10ac DF100000 		.word	.L957+1
 11038 10b0 F9060000 		.word	.L1349+1
 11039 10b4 F9060000 		.word	.L1349+1
 11040 10b8 F9060000 		.word	.L1349+1
 11041 10bc F9060000 		.word	.L1349+1
 11042 10c0 F9060000 		.word	.L1349+1
 11043 10c4 BD0F0000 		.word	.L955+1
 11044              		.p2align 1
 11045              	.L1155:
 11046 10c8 40F24314 		movw	r4, #323
 11047              	.LVL936:
3008:src/keys.c    **** 
 11048              		.loc 1 3008 2 view .LVU3396
 11049 10cc FFF72ABB 		b	.L958
 11050              	.LVL937:
 11051              	.L959:
3052:src/keys.c    **** 	xeq_or_gto:
ARM GAS  /tmp/ccgiIQCZ.s 			page 315


 11052              		.loc 1 3052 3 is_stmt 1 view .LVU3397
3052:src/keys.c    **** 	xeq_or_gto:
 11053              		.loc 1 3052 6 is_stmt 0 view .LVU3398
 11054 10d0 02F54074 		add	r4, r2, #768
 11055              	.LVL938:
3054:src/keys.c    **** 			break;
 11056              		.loc 1 3054 3 is_stmt 1 view .LVU3399
3054:src/keys.c    **** 			break;
 11057              		.loc 1 3054 6 is_stmt 0 view .LVU3400
 11058 10d4 002A     		cmp	r2, #0
 11059 10d6 7FF428AB 		bne	.L970
 11060 10da FFF70DBB 		b	.L1349
 11061              	.LVL939:
 11062              	.L957:
3011:src/keys.c    **** 		goto next;
 11063              		.loc 1 3011 3 is_stmt 1 view .LVU3401
3011:src/keys.c    **** 		goto next;
 11064              		.loc 1 3011 8 is_stmt 0 view .LVU3402
 11065 10de 5846     		mov	r0, fp
 11066 10e0 0121     		movs	r1, #1
 11067 10e2 FFF7FEFF 		bl	advance_to_previous_label
 11068              	.LVL940:
 11069 10e6 0121     		movs	r1, #1
 11070 10e8 FFF7FEFF 		bl	advance_to_previous_label
 11071              	.LVL941:
 11072 10ec 8346     		mov	fp, r0
 11073              	.LVL942:
3012:src/keys.c    **** 
 11074              		.loc 1 3012 3 is_stmt 1 view .LVU3403
 11075 10ee 6BE7     		b	.L962
 11076              	.LVL943:
 11077              	.L967:
3008:src/keys.c    **** 
 11078              		.loc 1 3008 2 is_stmt 0 view .LVU3404
 11079 10f0 40F22732 		movw	r2, #807
 11080 10f4 9342     		cmp	r3, r2
 11081 10f6 7FF4FFAA 		bne	.L1349
3078:src/keys.c    **** 		goto set_pc_and_exit;
 11082              		.loc 1 3078 3 is_stmt 1 view .LVU3405
3078:src/keys.c    **** 		goto set_pc_and_exit;
 11083              		.loc 1 3078 18 is_stmt 0 view .LVU3406
 11084 10fa 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11085 10fe 61F38613 		bfi	r3, r1, #6, #1
 11086 1102 88F81630 		strb	r3, [r8, #22]
3079:src/keys.c    **** 
 11087              		.loc 1 3079 3 is_stmt 1 view .LVU3407
2997:src/keys.c    **** 
 11088              		.loc 1 2997 6 is_stmt 0 view .LVU3408
 11089 1106 3324     		movs	r4, #51
 11090              	.LVL944:
3079:src/keys.c    **** 
 11091              		.loc 1 3079 3 view .LVU3409
 11092 1108 FFF70CBB 		b	.L958
 11093              	.LVL945:
 11094              	.L1377:
3079:src/keys.c    **** 
 11095              		.loc 1 3079 3 view .LVU3410
ARM GAS  /tmp/ccgiIQCZ.s 			page 316


 11096              	.LBE1082:
 11097              	.LBE1286:
3338:src/keys.c    **** 
 11098              		.loc 1 3338 3 is_stmt 1 view .LVU3411
 11099              	.LBB1287:
 11100              	.LBI1287:
3120:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 11101              		.loc 1 3120 12 view .LVU3412
 11102              	.LBB1288:
3121:src/keys.c    **** 	enum shifts shift = reset_shift();
 11103              		.loc 1 3121 2 view .LVU3413
 11104              	.LBB1289:
 11105              	.LBI1289:
 210:src/keys.c    **** {
 11106              		.loc 1 210 14 view .LVU3414
 11107              	.LBB1290:
 212:src/keys.c    ****     // K00 - K05
 11108              		.loc 1 212 3 view .LVU3415
 234:src/keys.c    **** }
 11109              		.loc 1 234 3 view .LVU3416
 11110              	.LBB1291:
 11111              	.LBI1291:
 131:src/keys.c    **** {
 11112              		.loc 1 131 12 view .LVU3417
 11113              	.LBB1292:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 11114              		.loc 1 133 2 view .LVU3418
 143:src/keys.c    **** }
 11115              		.loc 1 143 2 view .LVU3419
 143:src/keys.c    **** }
 11116              		.loc 1 143 23 is_stmt 0 view .LVU3420
 11117 110c 4F4B     		ldr	r3, .L1452
 11118              	.LBE1292:
 11119              	.LBE1291:
 234:src/keys.c    **** }
 11120              		.loc 1 234 28 view .LVU3421
 11121 110e 504A     		ldr	r2, .L1452+4
 11122              	.LBB1294:
 11123              	.LBB1293:
 143:src/keys.c    **** }
 11124              		.loc 1 143 23 view .LVU3422
 11125 1110 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 11126              	.LBE1293:
 11127              	.LBE1294:
 234:src/keys.c    **** }
 11128              		.loc 1 234 10 view .LVU3423
 11129 1112 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
 11130              	.LBE1290:
 11131              	.LBE1289:
 11132              	.LBB1295:
 11133              	.LBB1296:
 11134              	.LBB1297:
 11135              	.LBB1298:
 11136              	.LBB1299:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11137              		.loc 1 97 18 view .LVU3424
 11138 1116 FFF7FEFF 		bl	shift_down
ARM GAS  /tmp/ccgiIQCZ.s 			page 317


 11139              	.LVL946:
 11140              	.LBE1299:
 11141              	.LBE1298:
 11142              	.LBE1297:
 11143              	.LBE1296:
 11144              	.LBE1295:
3121:src/keys.c    **** 	enum shifts shift = reset_shift();
 11145              		.loc 1 3121 15 view .LVU3425
 11146 111a 2BF0800B 		bic	fp, fp, #128
 11147              	.LVL947:
3122:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
 11148              		.loc 1 3122 2 is_stmt 1 view .LVU3426
 11149              	.LBB1308:
 11150              	.LBI1295:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 11151              		.loc 1 114 13 view .LVU3427
 11152              	.LBE1308:
 11153              	.LBE1288:
 11154              	.LBE1287:
 11155              	.LBE1436:
 11156              	.LBE1510:
 115:src/keys.c    **** }
 11157              		.loc 1 115 2 view .LVU3428
 11158              	.LBB1511:
 11159              	.LBB1437:
 11160              	.LBB1324:
 11161              	.LBB1315:
 11162              	.LBB1309:
 11163              	.LBB1305:
 11164              	.LBI1296:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 11165              		.loc 1 104 20 view .LVU3429
 11166              	.LBB1302:
 105:src/keys.c    **** 	State2.shifts = shift;
 11167              		.loc 1 105 2 view .LVU3430
 11168              	.LBB1301:
 11169              	.LBI1298:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 11170              		.loc 1 96 13 view .LVU3431
 11171              	.LBB1300:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11172              		.loc 1 97 2 view .LVU3432
  98:src/keys.c    **** }
 11173              		.loc 1 98 2 view .LVU3433
  98:src/keys.c    **** }
 11174              		.loc 1 98 52 is_stmt 0 view .LVU3434
 11175 111e 8146     		mov	r9, r0
 11176 1120 08B9     		cbnz	r0, .L974
 11177 1122 98F81090 		ldrb	r9, [r8, #16]	@ zero_extendqisi2
 11178              	.L974:
 11179              	.LVL948:
  98:src/keys.c    **** }
 11180              		.loc 1 98 52 view .LVU3435
 11181              	.LBE1300:
 11182              	.LBE1301:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11183              		.loc 1 106 2 is_stmt 1 view .LVU3436
ARM GAS  /tmp/ccgiIQCZ.s 			page 318


 11184              	.LBE1302:
 11185              	.LBE1305:
 11186              	.LBE1309:
3123:src/keys.c    **** 	const int g_max = global_regs();
 11187              		.loc 1 3123 31 is_stmt 0 view .LVU3437
 11188 1126 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11189              	.LBB1310:
 11190              	.LBB1306:
 11191              	.LBB1303:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11192              		.loc 1 106 16 view .LVU3438
 11193 112a 0022     		movs	r2, #0
 11194              	.LBE1303:
 11195              	.LBE1306:
 11196              	.LBE1310:
3123:src/keys.c    **** 	const int g_max = global_regs();
 11197              		.loc 1 3123 46 view .LVU3439
 11198 112c DB07     		lsls	r3, r3, #31
 11199              	.LBB1311:
 11200              	.LBB1307:
 11201              	.LBB1304:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11202              		.loc 1 106 16 view .LVU3440
 11203 112e 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 11204              		.loc 1 108 2 is_stmt 1 view .LVU3441
 11205              	.LVL949:
 108:src/keys.c    **** }
 11206              		.loc 1 108 2 is_stmt 0 view .LVU3442
 11207              	.LBE1304:
 11208              	.LBE1307:
 11209              	.LBE1311:
3123:src/keys.c    **** 	const int g_max = global_regs();
 11210              		.loc 1 3123 2 is_stmt 1 view .LVU3443
3123:src/keys.c    **** 	const int g_max = global_regs();
 11211              		.loc 1 3123 46 is_stmt 0 view .LVU3444
 11212 1132 00F1F882 		bmi	.L1420
 11213 1136 4FF0700A 		mov	r10, #112
 11214              	.L975:
 11215              	.LVL950:
3124:src/keys.c    **** 
 11216              		.loc 1 3124 2 is_stmt 1 view .LVU3445
3124:src/keys.c    **** 
 11217              		.loc 1 3124 20 is_stmt 0 view .LVU3446
 11218 113a FFF7FEFF 		bl	global_regs
 11219              	.LVL951:
3126:src/keys.c    **** 		if (local_regs())
 11220              		.loc 1 3126 2 is_stmt 1 view .LVU3447
3126:src/keys.c    **** 		if (local_regs())
 11221              		.loc 1 3126 5 is_stmt 0 view .LVU3448
 11222 113e BBF1700F 		cmp	fp, #112
 11223 1142 00F0DD86 		beq	.L1421
3132:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 11224              		.loc 1 3132 7 is_stmt 1 view .LVU3449
3132:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 11225              		.loc 1 3132 10 is_stmt 0 view .LVU3450
 11226 1146 BBF1090F 		cmp	fp, #9
ARM GAS  /tmp/ccgiIQCZ.s 			page 319


 11227 114a 40F26D83 		bls	.L1422
3139:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 11228              		.loc 1 3139 7 is_stmt 1 view .LVU3451
3139:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 11229              		.loc 1 3139 29 is_stmt 0 view .LVU3452
 11230 114e 09F1FF33 		add	r3, r9, #-1
3139:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 11231              		.loc 1 3139 10 view .LVU3453
 11232 1152 DBB2     		uxtb	r3, r3
 11233 1154 012B     		cmp	r3, #1
 11234 1156 40F28B82 		bls	.L1423
 11235              	.L983:
3143:src/keys.c    **** 		State2.digval = n;
 11236              		.loc 1 3143 7 is_stmt 1 view .LVU3454
3143:src/keys.c    **** 		State2.digval = n;
 11237              		.loc 1 3143 10 is_stmt 0 view .LVU3455
 11238 115a BBF17F0F 		cmp	fp, #127
 11239 115e 40F0C183 		bne	.L1424
3148:src/keys.c    **** 	case K_DOWN:
 11240              		.loc 1 3148 2 is_stmt 1 view .LVU3456
 11241 1162 073C     		subs	r4, r4, #7
 11242              	.LVL952:
3148:src/keys.c    **** 	case K_DOWN:
 11243              		.loc 1 3148 2 is_stmt 0 view .LVU3457
 11244 1164 112C     		cmp	r4, #17
 11245 1166 3FF6C7AA 		bhi	.L1349
 11246 116a 01A3     		adr	r3, .L1115
 11247 116c 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 11248              		.p2align 2
 11249              	.L1115:
 11250 1170 B9110000 		.word	.L996+1
 11251 1174 F9060000 		.word	.L1349+1
 11252 1178 F9060000 		.word	.L1349+1
 11253 117c F9060000 		.word	.L1349+1
 11254 1180 F9060000 		.word	.L1349+1
 11255 1184 73120000 		.word	.L995+1
 11256 1188 F9060000 		.word	.L1349+1
 11257 118c F9060000 		.word	.L1349+1
 11258 1190 F9060000 		.word	.L1349+1
 11259 1194 55120000 		.word	.L993+1
 11260 1198 F9060000 		.word	.L1349+1
 11261 119c 1D120000 		.word	.L989+1
 11262 11a0 F9060000 		.word	.L1349+1
 11263 11a4 F9060000 		.word	.L1349+1
 11264 11a8 F9060000 		.word	.L1349+1
 11265 11ac F9060000 		.word	.L1349+1
 11266 11b0 F9060000 		.word	.L1349+1
 11267 11b4 E7110000 		.word	.L986+1
 11268              		.p2align 1
 11269              	.L996:
3187:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 11270              		.loc 1 3187 3 is_stmt 1 view .LVU3458
3187:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 11271              		.loc 1 3187 6 is_stmt 0 view .LVU3459
 11272 11b8 B9F1000F 		cmp	r9, #0
 11273 11bc 7FF49CAA 		bne	.L1349
3191:src/keys.c    **** #endif
ARM GAS  /tmp/ccgiIQCZ.s 			page 320


 11274              		.loc 1 3191 4 is_stmt 1 view .LVU3460
3191:src/keys.c    **** #endif
 11275              		.loc 1 3191 8 is_stmt 0 view .LVU3461
 11276 11c0 B8F80840 		ldrh	r4, [r8, #8]
 11277              	.LVL953:
3193:src/keys.c    **** 			State2.digval = 0;
 11278              		.loc 1 3193 4 is_stmt 1 view .LVU3462
3193:src/keys.c    **** 			State2.digval = 0;
 11279              		.loc 1 3193 24 is_stmt 0 view .LVU3463
 11280 11c4 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
 11281 11c8 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3195:src/keys.c    **** 			return n;
 11282              		.loc 1 3195 19 view .LVU3464
 11283 11cc 88F80A90 		strb	r9, [r8, #10]
3196:src/keys.c    **** 		}
 11284              		.loc 1 3196 11 view .LVU3465
 11285 11d0 44F42854 		orr	r4, r4, #10752
 11286              	.LVL954:
3193:src/keys.c    **** 			State2.digval = 0;
 11287              		.loc 1 3193 24 view .LVU3466
 11288 11d4 69F3C303 		bfi	r3, r9, #3, #1
3194:src/keys.c    **** 			State2.digval2 = 0;
 11289              		.loc 1 3194 18 view .LVU3467
 11290 11d8 A8F80890 		strh	r9, [r8, #8]	@ movhi
 11291 11dc 2546     		mov	r5, r4
3193:src/keys.c    **** 			State2.digval = 0;
 11292              		.loc 1 3193 24 view .LVU3468
 11293 11de 88F81730 		strb	r3, [r8, #23]
3194:src/keys.c    **** 			State2.digval2 = 0;
 11294              		.loc 1 3194 4 is_stmt 1 view .LVU3469
3195:src/keys.c    **** 			return n;
 11295              		.loc 1 3195 4 view .LVU3470
3196:src/keys.c    **** 		}
 11296              		.loc 1 3196 4 view .LVU3471
3196:src/keys.c    **** 		}
 11297              		.loc 1 3196 11 is_stmt 0 view .LVU3472
 11298 11e2 FFF77AB9 		b	.L861
 11299              	.LVL955:
 11300              	.L986:
3150:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 11301              		.loc 1 3150 3 is_stmt 1 view .LVU3473
3150:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 11302              		.loc 1 3150 13 is_stmt 0 view .LVU3474
 11303 11e6 B8F80830 		ldrh	r3, [r8, #8]
3150:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 11304              		.loc 1 3150 6 view .LVU3475
 11305 11ea 002B     		cmp	r3, #0
 11306 11ec 00F02986 		beq	.L987
3151:src/keys.c    **** 				State2.digval = global_regs();
 11307              		.loc 1 3151 4 is_stmt 1 view .LVU3476
3151:src/keys.c    **** 				State2.digval = global_regs();
 11308              		.loc 1 3151 8 is_stmt 0 view .LVU3477
 11309 11f0 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3151:src/keys.c    **** 				State2.digval = global_regs();
 11310              		.loc 1 3151 7 view .LVU3478
 11311 11f4 D207     		lsls	r2, r2, #31
 11312 11f6 02D4     		bmi	.L988
ARM GAS  /tmp/ccgiIQCZ.s 			page 321


3151:src/keys.c    **** 				State2.digval = global_regs();
 11313              		.loc 1 3151 23 view .LVU3479
 11314 11f8 642B     		cmp	r3, #100
 11315 11fa 00F02886 		beq	.L1425
 11316              	.LVL956:
 11317              	.L988:
3153:src/keys.c    **** 		}
 11318              		.loc 1 3153 4 is_stmt 1 view .LVU3480
 11319 11fe B8F80830 		ldrh	r3, [r8, #8]
 11320 1202 013B     		subs	r3, r3, #1
 11321              	.LVL957:
 11322              	.L1339:
3153:src/keys.c    **** 		}
 11323              		.loc 1 3153 4 is_stmt 0 view .LVU3481
 11324 1204 A8F80830 		strh	r3, [r8, #8]	@ movhi
 11325              	.LVL958:
 11326              	.L979:
3205:src/keys.c    **** 	return STATE_UNFINISHED;
 11327              		.loc 1 3205 2 is_stmt 1 view .LVU3482
3205:src/keys.c    **** 	return STATE_UNFINISHED;
 11328              		.loc 1 3205 16 is_stmt 0 view .LVU3483
 11329 1208 98F81420 		ldrb	r2, [r8, #20]	@ zero_extendqisi2
 11330 120c 3368     		ldr	r3, [r6]
 11331 120e 6FF3C502 		bfc	r2, #3, #3
 11332 1212 88F81420 		strb	r2, [r8, #20]
3206:src/keys.c    **** }
 11333              		.loc 1 3206 2 is_stmt 1 view .LVU3484
3206:src/keys.c    **** }
 11334              		.loc 1 3206 9 is_stmt 0 view .LVU3485
 11335 1216 3324     		movs	r4, #51
 11336 1218 FEF74FBF 		b	.L799
 11337              	.LVL959:
 11338              	.L989:
3160:src/keys.c    **** 			State2.digval++;
 11339              		.loc 1 3160 3 is_stmt 1 view .LVU3486
3160:src/keys.c    **** 			State2.digval++;
 11340              		.loc 1 3160 13 is_stmt 0 view .LVU3487
 11341 121c B8F80830 		ldrh	r3, [r8, #8]
3160:src/keys.c    **** 			State2.digval++;
 11342              		.loc 1 3160 27 view .LVU3488
 11343 1220 0AF1FF3A 		add	r10, r10, #-1
 11344              	.LVL960:
3160:src/keys.c    **** 			State2.digval++;
 11345              		.loc 1 3160 6 view .LVU3489
 11346 1224 5345     		cmp	r3, r10
 11347 1226 80F28B83 		bge	.L990
3161:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 11348              		.loc 1 3161 4 is_stmt 1 view .LVU3490
3162:src/keys.c    **** 				State2.digval = regX_idx;
 11349              		.loc 1 3162 8 is_stmt 0 view .LVU3491
 11350 122a 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3161:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 11351              		.loc 1 3161 17 view .LVU3492
 11352 122e 0133     		adds	r3, r3, #1
 11353 1230 9CB2     		uxth	r4, r3
 11354              	.LVL961:
3162:src/keys.c    **** 				State2.digval = regX_idx;
ARM GAS  /tmp/ccgiIQCZ.s 			page 322


 11355              		.loc 1 3162 7 view .LVU3493
 11356 1232 D307     		lsls	r3, r2, #31
3161:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 11357              		.loc 1 3161 17 view .LVU3494
 11358 1234 A8F80840 		strh	r4, [r8, #8]	@ movhi
3162:src/keys.c    **** 				State2.digval = regX_idx;
 11359              		.loc 1 3162 4 is_stmt 1 view .LVU3495
3162:src/keys.c    **** 				State2.digval = regX_idx;
 11360              		.loc 1 3162 7 is_stmt 0 view .LVU3496
 11361 1238 E6D4     		bmi	.L979
3162:src/keys.c    **** 				State2.digval = regX_idx;
 11362              		.loc 1 3162 43 view .LVU3497
 11363 123a FFF7FEFF 		bl	global_regs
 11364              	.LVL962:
3162:src/keys.c    **** 				State2.digval = regX_idx;
 11365              		.loc 1 3162 23 view .LVU3498
 11366 123e 8442     		cmp	r4, r0
 11367 1240 E2D1     		bne	.L979
3163:src/keys.c    **** 		}
 11368              		.loc 1 3163 5 is_stmt 1 view .LVU3499
3163:src/keys.c    **** 		}
 11369              		.loc 1 3163 19 is_stmt 0 view .LVU3500
 11370 1242 6423     		movs	r3, #100
 11371 1244 A8F80830 		strh	r3, [r8, #8]	@ movhi
 11372 1248 DEE7     		b	.L979
 11373              	.L1453:
 11374 124a 00BF     		.align	2
 11375              	.L1452:
 11376 124c 00000000 		.word	.LANCHOR6
 11377 1250 00000000 		.word	.LANCHOR5
 11378              	.LVL963:
 11379              	.L993:
3177:src/keys.c    **** 			return STATE_UNFINISHED;
 11380              		.loc 1 3177 3 is_stmt 1 view .LVU3501
3177:src/keys.c    **** 			return STATE_UNFINISHED;
 11381              		.loc 1 3177 7 is_stmt 0 view .LVU3502
 11382 1254 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3177:src/keys.c    **** 			return STATE_UNFINISHED;
 11383              		.loc 1 3177 6 view .LVU3503
 11384 1258 13F02002 		ands	r2, r3, #32
 11385 125c 7FF44CAA 		bne	.L1349
3179:src/keys.c    **** 
 11386              		.loc 1 3179 3 is_stmt 1 view .LVU3504
3201:src/keys.c    **** 	State2.digval = 0;
 11387              		.loc 1 3201 2 view .LVU3505
3201:src/keys.c    **** 	State2.digval = 0;
 11388              		.loc 1 3201 22 is_stmt 0 view .LVU3506
 11389 1260 62F3C303 		bfi	r3, r2, #3, #1
 11390 1264 88F81730 		strb	r3, [r8, #23]
3202:src/keys.c    **** 	State2.digval2 = 0;
 11391              		.loc 1 3202 2 is_stmt 1 view .LVU3507
3202:src/keys.c    **** 	State2.digval2 = 0;
 11392              		.loc 1 3202 16 is_stmt 0 view .LVU3508
 11393 1268 A8F80820 		strh	r2, [r8, #8]	@ movhi
3203:src/keys.c    **** reset_window:
 11394              		.loc 1 3203 2 is_stmt 1 view .LVU3509
3203:src/keys.c    **** reset_window:
ARM GAS  /tmp/ccgiIQCZ.s 			page 323


 11395              		.loc 1 3203 17 is_stmt 0 view .LVU3510
 11396 126c 88F80A20 		strb	r2, [r8, #10]
 11397 1270 CAE7     		b	.L979
 11398              	.L995:
3182:src/keys.c    **** 			State2.disp_as_alpha = 1;
 11399              		.loc 1 3182 3 is_stmt 1 view .LVU3511
3182:src/keys.c    **** 			State2.disp_as_alpha = 1;
 11400              		.loc 1 3182 6 is_stmt 0 view .LVU3512
 11401 1272 B9F1010F 		cmp	r9, #1
 11402 1276 9FD1     		bne	.L996
3183:src/keys.c    **** 			goto reset_window;
 11403              		.loc 1 3183 4 is_stmt 1 view .LVU3513
3183:src/keys.c    **** 			goto reset_window;
 11404              		.loc 1 3183 25 is_stmt 0 view .LVU3514
 11405 1278 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11406 127c 43F00403 		orr	r3, r3, #4
 11407 1280 88F81630 		strb	r3, [r8, #22]
3184:src/keys.c    **** 		}
 11408              		.loc 1 3184 4 is_stmt 1 view .LVU3515
 11409 1284 C0E7     		b	.L979
 11410              	.LVL964:
 11411              	.L895:
3184:src/keys.c    **** 		}
 11412              		.loc 1 3184 4 is_stmt 0 view .LVU3516
 11413              	.LBE1315:
 11414              	.LBE1324:
 11415              	.LBB1325:
 11416              	.LBB1250:
1667:src/keys.c    **** 	
 11417              		.loc 1 1667 2 is_stmt 1 view .LVU3517
1667:src/keys.c    **** 	
 11418              		.loc 1 1667 5 is_stmt 0 view .LVU3518
 11419 1286 BBF1000F 		cmp	fp, #0
 11420 128a 7FF435AA 		bne	.L1349
 11421 128e 3368     		ldr	r3, [r6]
 11422              	.LBE1250:
 11423              	.LBE1325:
 11424              	.LBE1437:
 11425              	.LBE1511:
3405:src/keys.c    ****   if (was_paused && Pause == 0)
 11426              		.loc 1 3405 7 view .LVU3519
 11427 1290 5D46     		mov	r5, fp
 11428              	.LBB1512:
 11429              	.LBB1438:
 11430              	.LBB1326:
 11431              	.LBB1251:
1667:src/keys.c    **** 	
 11432              		.loc 1 1667 31 view .LVU3520
 11433 1292 3324     		movs	r4, #51
 11434              	.LVL965:
1667:src/keys.c    **** 	
 11435              		.loc 1 1667 31 view .LVU3521
 11436 1294 FEF711BF 		b	.L799
 11437              	.LVL966:
 11438              	.L1416:
1667:src/keys.c    **** 	
 11439              		.loc 1 1667 31 view .LVU3522
ARM GAS  /tmp/ccgiIQCZ.s 			page 324


 11440              	.LBE1251:
 11441              	.LBE1326:
 11442              	.LBB1327:
 11443              	.LBB864:
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 11444              		.loc 1 312 74 view .LVU3523
 11445 1298 D8F81420 		ldr	r2, [r8, #20]
 11446 129c DFF8ACC3 		ldr	ip, .L1454+20
 11447 12a0 12EA0C0F 		tst	r2, ip
 11448 12a4 3FF422AA 		beq	.L905
 315:src/keys.c    ****     /*
 11449              		.loc 1 315 3 is_stmt 1 view .LVU3524
 315:src/keys.c    ****     /*
 11450              		.loc 1 315 23 is_stmt 0 view .LVU3525
 11451 12a8 DFF8A4C3 		ldr	ip, .L1454+24
 315:src/keys.c    ****     /*
 11452              		.loc 1 315 6 view .LVU3526
 11453 12ac 12EA0C0F 		tst	r2, ip
 11454 12b0 3FF40BAC 		beq	.L1130
 11455 12b4 4BE5     		b	.L916
 11456              	.LVL967:
 11457              	.L1148:
 11458              	.LBB855:
 371:src/keys.c    **** #ifndef WINGUI
 11459              		.loc 1 371 8 view .LVU3527
 11460 12b6 E04A     		ldr	r2, .L1454
 377:src/keys.c    ****   }
 11461              		.loc 1 377 9 view .LVU3528
 11462 12b8 0C20     		movs	r0, #12
 373:src/keys.c    **** #else
 11463              		.loc 1 373 27 view .LVU3529
 11464 12ba 4FF0010E 		mov	lr, #1
 11465 12be 11E4     		b	.L918
 11466              	.LVL968:
 11467              	.L1396:
 373:src/keys.c    **** #else
 11468              		.loc 1 373 27 view .LVU3530
 11469              	.LBE855:
 11470              	.LBE864:
 11471              	.LBE1327:
 11472              	.LBB1328:
 11473              	.LBB1137:
1717:src/keys.c    **** #endif
 11474              		.loc 1 1717 44 is_stmt 1 view .LVU3531
1717:src/keys.c    **** #endif
 11475              		.loc 1 1717 52 is_stmt 0 view .LVU3532
 11476 12c0 0420     		movs	r0, #4
 11477 12c2 FFF7FEFF 		bl	gtodot_digit
 11478              	.LVL969:
1760:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11479              		.loc 1 1760 2 is_stmt 1 view .LVU3533
 11480              	.LBE1137:
 11481              	.LBE1328:
3281:src/keys.c    **** 
 11482              		.loc 1 3281 10 is_stmt 0 view .LVU3534
 11483 12c6 3324     		movs	r4, #51
 11484              	.LVL970:
ARM GAS  /tmp/ccgiIQCZ.s 			page 325


3281:src/keys.c    **** 
 11485              		.loc 1 3281 10 view .LVU3535
 11486 12c8 3368     		ldr	r3, [r6]
 11487 12ca FEF7F6BE 		b	.L799
 11488              	.LVL971:
 11489              	.L855:
 11490              	.LBB1329:
 11491              	.LBB1157:
1621:src/keys.c    **** #endif
 11492              		.loc 1 1621 4 is_stmt 1 view .LVU3536
1621:src/keys.c    **** #endif
 11493              		.loc 1 1621 18 view .LVU3537
1621:src/keys.c    **** #endif
 11494              		.loc 1 1621 18 is_stmt 0 view .LVU3538
 11495 12ce 8BF0010B 		eor	fp, fp, #1
 11496              	.LVL972:
1621:src/keys.c    **** #endif
 11497              		.loc 1 1621 18 view .LVU3539
 11498 12d2 FFF7D0BB 		b	.L862
 11499              	.LVL973:
 11500              	.L1397:
1621:src/keys.c    **** #endif
 11501              		.loc 1 1621 18 view .LVU3540
 11502              	.LBE1157:
 11503              	.LBE1329:
 11504              	.LBB1330:
 11505              	.LBB1138:
1721:src/keys.c    **** 		goto fin;
 11506              		.loc 1 1721 3 is_stmt 1 view .LVU3541
 11507              	.LBB1131:
 11508              	.LBI1131:
1693:src/keys.c    **** 	const int code = 100 + n;
 11509              		.loc 1 1693 12 view .LVU3542
 11510              	.LBB1132:
1694:src/keys.c    **** 	unsigned int pc = state_pc();
 11511              		.loc 1 1694 2 view .LVU3543
1695:src/keys.c    **** 
 11512              		.loc 1 1695 2 view .LVU3544
1695:src/keys.c    **** 
 11513              		.loc 1 1695 20 is_stmt 0 view .LVU3545
 11514 12d6 DFF864B3 		ldr	fp, .L1454+4
 11515 12da DBF80030 		ldr	r3, [fp]
 11516              	.LVL974:
1695:src/keys.c    **** 
 11517              		.loc 1 1695 15 view .LVU3546
 11518 12de B3F8E007 		ldrh	r0, [r3, #2016]
 11519              	.LVL975:
1697:src/keys.c    **** 		pc = 1;
 11520              		.loc 1 1697 2 is_stmt 1 view .LVU3547
1697:src/keys.c    **** 		pc = 1;
 11521              		.loc 1 1697 5 is_stmt 0 view .LVU3548
 11522 12e2 830B     		lsrs	r3, r0, #14
1698:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
 11523              		.loc 1 1698 6 view .LVU3549
 11524 12e4 032B     		cmp	r3, #3
 11525              	.LVL976:
1699:src/keys.c    **** 	if (pc > 0)
ARM GAS  /tmp/ccgiIQCZ.s 			page 326


 11526              		.loc 1 1699 2 is_stmt 1 view .LVU3550
1699:src/keys.c    **** 	if (pc > 0)
 11527              		.loc 1 1699 7 is_stmt 0 view .LVU3551
 11528 12e6 08BF     		it	eq
 11529 12e8 0120     		moveq	r0, #1
 11530              	.LVL977:
1699:src/keys.c    **** 	if (pc > 0)
 11531              		.loc 1 1699 7 view .LVU3552
 11532 12ea 6431     		adds	r1, r1, #100
 11533              	.LVL978:
1699:src/keys.c    **** 	if (pc > 0)
 11534              		.loc 1 1699 7 view .LVU3553
 11535 12ec 0322     		movs	r2, #3
 11536              	.LVL979:
1699:src/keys.c    **** 	if (pc > 0)
 11537              		.loc 1 1699 7 view .LVU3554
 11538 12ee FFF7FEFF 		bl	find_label_from
 11539              	.LVL980:
1700:src/keys.c    **** 		return pc;
 11540              		.loc 1 1700 2 is_stmt 1 view .LVU3555
1700:src/keys.c    **** 		return pc;
 11541              		.loc 1 1700 5 is_stmt 0 view .LVU3556
 11542 12f2 0028     		cmp	r0, #0
 11543 12f4 7FF47FAB 		bne	.L846
1702:src/keys.c    **** }
 11544              		.loc 1 1702 2 is_stmt 1 view .LVU3557
1702:src/keys.c    **** }
 11545              		.loc 1 1702 9 is_stmt 0 view .LVU3558
 11546 12f8 DBF80030 		ldr	r3, [fp]
 11547 12fc B3F8E007 		ldrh	r0, [r3, #2016]
 11548              	.LVL981:
1702:src/keys.c    **** }
 11549              		.loc 1 1702 9 view .LVU3559
 11550              	.LBE1132:
 11551              	.LBE1131:
1722:src/keys.c    **** 	}
 11552              		.loc 1 1722 3 is_stmt 1 view .LVU3560
 11553 1300 FFF779BB 		b	.L846
 11554              	.LVL982:
 11555              	.L1176:
1722:src/keys.c    **** 	}
 11556              		.loc 1 1722 3 is_stmt 0 view .LVU3561
 11557              	.LBE1138:
 11558              	.LBE1330:
 11559              	.LBB1331:
 11560              	.LBB1120:
2369:src/keys.c    **** 	}
 11561              		.loc 1 2369 18 view .LVU3562
 11562 1304 2724     		movs	r4, #39
 11563              	.LVL983:
2369:src/keys.c    **** 	}
 11564              		.loc 1 2369 47 view .LVU3563
 11565 1306 5444     		add	r4, r4, r10
 11566 1308 FFF754B8 		b	.L834
 11567              	.LVL984:
 11568              	.L1378:
2369:src/keys.c    **** 	}
ARM GAS  /tmp/ccgiIQCZ.s 			page 327


 11569              		.loc 1 2369 47 view .LVU3564
 11570              	.LBE1120:
 11571              	.LBE1331:
3341:src/keys.c    **** 
 11572              		.loc 1 3341 3 is_stmt 1 view .LVU3565
 11573              	.LBB1332:
 11574              	.LBI1332:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 11575              		.loc 1 114 13 view .LVU3566
 11576              	.LBE1332:
 11577              	.LBE1438:
 11578              	.LBE1512:
 115:src/keys.c    **** }
 11579              		.loc 1 115 2 view .LVU3567
 11580              	.LBB1513:
 11581              	.LBB1439:
 11582              	.LBB1339:
 11583              	.LBB1333:
 11584              	.LBI1333:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 11585              		.loc 1 104 20 view .LVU3568
 11586              	.LBB1334:
 105:src/keys.c    **** 	State2.shifts = shift;
 11587              		.loc 1 105 2 view .LVU3569
 11588              	.LBB1335:
 11589              	.LBI1335:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 11590              		.loc 1 96 13 view .LVU3570
 11591              	.LBB1336:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11592              		.loc 1 97 2 view .LVU3571
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11593              		.loc 1 97 18 is_stmt 0 view .LVU3572
 11594 130c FFF7FEFF 		bl	shift_down
 11595              	.LVL985:
  98:src/keys.c    **** }
 11596              		.loc 1 98 2 is_stmt 1 view .LVU3573
  98:src/keys.c    **** }
 11597              		.loc 1 98 52 is_stmt 0 view .LVU3574
 11598 1310 0146     		mov	r1, r0
 11599 1312 08B9     		cbnz	r0, .L999
 11600 1314 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 11601              	.L999:
 11602              	.LVL986:
  98:src/keys.c    **** }
 11603              		.loc 1 98 52 view .LVU3575
 11604              	.LBE1336:
 11605              	.LBE1335:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11606              		.loc 1 106 2 is_stmt 1 view .LVU3576
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11607              		.loc 1 106 16 is_stmt 0 view .LVU3577
 11608 1318 0022     		movs	r2, #0
 11609              	.LBE1334:
 11610              	.LBE1333:
 11611              	.LBE1339:
3341:src/keys.c    **** 
ARM GAS  /tmp/ccgiIQCZ.s 			page 328


 11612              		.loc 1 3341 10 view .LVU3578
 11613 131a 2046     		mov	r0, r4
 11614              	.LBB1340:
 11615              	.LBB1338:
 11616              	.LBB1337:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11617              		.loc 1 106 16 view .LVU3579
 11618 131c 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 11619              		.loc 1 108 2 is_stmt 1 view .LVU3580
 11620              	.LVL987:
 108:src/keys.c    **** }
 11621              		.loc 1 108 2 is_stmt 0 view .LVU3581
 11622              	.LBE1337:
 11623              	.LBE1338:
 11624              	.LBE1340:
3341:src/keys.c    **** 
 11625              		.loc 1 3341 10 view .LVU3582
 11626 1320 FFF7FEFF 		bl	process_catalogue
 11627              	.LVL988:
3341:src/keys.c    **** 
 11628              		.loc 1 3341 10 view .LVU3583
 11629 1324 0446     		mov	r4, r0
 11630 1326 FFF745B8 		b	.L834
 11631              	.LVL989:
 11632              	.L1177:
 11633              	.LBB1341:
 11634              	.LBB1121:
2369:src/keys.c    **** 	}
 11635              		.loc 1 2369 18 view .LVU3584
 11636 132a 1E24     		movs	r4, #30
 11637              	.LVL990:
2369:src/keys.c    **** 	}
 11638              		.loc 1 2369 47 view .LVU3585
 11639 132c 5444     		add	r4, r4, r10
 11640 132e FFF741B8 		b	.L834
 11641              	.LVL991:
 11642              	.L1399:
2369:src/keys.c    **** 	}
 11643              		.loc 1 2369 47 view .LVU3586
 11644              	.LBE1121:
 11645              	.LBE1341:
 11646              	.LBB1342:
 11647              	.LBB1139:
1731:src/keys.c    **** 	}
 11648              		.loc 1 1731 3 is_stmt 1 view .LVU3587
1731:src/keys.c    **** 	}
 11649              		.loc 1 1731 6 is_stmt 0 view .LVU3588
 11650 1332 B8F80800 		ldrh	r0, [r8, #8]
 11651              	.LVL992:
1760:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11652              		.loc 1 1760 2 is_stmt 1 view .LVU3589
 11653 1336 F3E4     		b	.L837
 11654              	.LVL993:
 11655              	.L1374:
1760:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11656              		.loc 1 1760 2 is_stmt 0 view .LVU3590
ARM GAS  /tmp/ccgiIQCZ.s 			page 329


 11657              	.LBE1139:
 11658              	.LBE1342:
 11659              	.LBB1343:
 11660              	.LBB865:
 294:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 11661              		.loc 1 294 27 view .LVU3591
 11662 1338 242C     		cmp	r4, #36
 11663 133a 7EF488AF 		bne	.L923
 11664              	.L1147:
 295:src/keys.c    **** 		if ( (shift == SHIFT_F) && (c == K20) ) {
 11665              		.loc 1 295 11 view .LVU3592
 11666 133e 4FF0160A 		mov	r10, #22
 11667 1342 FFF7D3B9 		b	.L905
 11668              	.LVL994:
 11669              	.L1398:
 295:src/keys.c    **** 		if ( (shift == SHIFT_F) && (c == K20) ) {
 11670              		.loc 1 295 11 view .LVU3593
 11671              	.LBE865:
 11672              	.LBE1343:
 11673              	.LBB1344:
 11674              	.LBB1140:
1726:src/keys.c    **** 		goto fin;
 11675              		.loc 1 1726 3 is_stmt 1 view .LVU3594
1726:src/keys.c    **** 		goto fin;
 11676              		.loc 1 1726 11 is_stmt 0 view .LVU3595
 11677 1346 BD4B     		ldr	r3, .L1454+4
 11678              	.LVL995:
1726:src/keys.c    **** 		goto fin;
 11679              		.loc 1 1726 11 view .LVU3596
 11680 1348 1B68     		ldr	r3, [r3]
1726:src/keys.c    **** 		goto fin;
 11681              		.loc 1 1726 9 view .LVU3597
 11682 134a 5888     		ldrh	r0, [r3, #2]
 11683              	.LVL996:
1727:src/keys.c    **** 	}
 11684              		.loc 1 1727 3 is_stmt 1 view .LVU3598
 11685 134c FFF753BB 		b	.L846
 11686              	.LVL997:
 11687              	.L1412:
1727:src/keys.c    **** 	}
 11688              		.loc 1 1727 3 is_stmt 0 view .LVU3599
 11689              	.LBE1140:
 11690              	.LBE1344:
 11691              	.LBB1345:
 11692              	.LBB1218:
2923:src/keys.c    **** 		return STATE_UNFINISHED;
 11693              		.loc 1 2923 3 is_stmt 1 view .LVU3600
 11694 1350 3368     		ldr	r3, [r6]
 11695              	.LVL998:
2923:src/keys.c    **** 		return STATE_UNFINISHED;
 11696              		.loc 1 2923 17 is_stmt 0 view .LVU3601
 11697 1352 88F80C00 		strb	r0, [r8, #12]
2924:src/keys.c    **** 	} 
 11698              		.loc 1 2924 3 is_stmt 1 view .LVU3602
 11699              	.LBE1218:
 11700              	.LBE1345:
3290:src/keys.c    **** 
ARM GAS  /tmp/ccgiIQCZ.s 			page 330


 11701              		.loc 1 3290 10 is_stmt 0 view .LVU3603
 11702 1356 3324     		movs	r4, #51
 11703              	.LVL999:
 11704              	.LBB1346:
 11705              	.LBB1219:
2924:src/keys.c    **** 	} 
 11706              		.loc 1 2924 10 view .LVU3604
 11707 1358 FEF7AFBE 		b	.L799
 11708              	.LVL1000:
 11709              	.L1379:
2924:src/keys.c    **** 	} 
 11710              		.loc 1 2924 10 view .LVU3605
 11711              	.LBE1219:
 11712              	.LBE1346:
 11713              	.LBB1347:
3347:src/keys.c    **** 		if (! State2.alphas && get_user_flag(T_FLAG)) {
 11714              		.loc 1 3347 3 is_stmt 1 view .LVU3606
 11715              	.LBB1040:
 11716              	.LBI987:
1773:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
 11717              		.loc 1 1773 12 view .LVU3607
 11718              	.LBB1034:
1774:src/keys.c    ****         int op = STATE_UNFINISHED;
 11719              		.loc 1 1774 2 view .LVU3608
1774:src/keys.c    ****         int op = STATE_UNFINISHED;
 11720              		.loc 1 1774 33 is_stmt 0 view .LVU3609
 11721 135c 98F80D30 		ldrb	r3, [r8, #13]	@ zero_extendqisi2
 11722 1360 0093     		str	r3, [sp]
 11723              	.LBB989:
 11724              	.LBB990:
 11725              	.LBB991:
 11726              	.LBB992:
 11727              	.LBB993:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11728              		.loc 1 97 18 view .LVU3610
 11729 1362 FFF7FEFF 		bl	shift_down
 11730              	.LVL1001:
 11731              	.LBE993:
 11732              	.LBE992:
 11733              	.LBE991:
 11734              	.LBE990:
 11735              	.LBE989:
1774:src/keys.c    ****         int op = STATE_UNFINISHED;
 11736              		.loc 1 1774 15 view .LVU3611
 11737 1366 009B     		ldr	r3, [sp]
 11738              	.LVL1002:
1775:src/keys.c    **** 	const enum shifts shift = reset_shift();
 11739              		.loc 1 1775 9 is_stmt 1 view .LVU3612
1776:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
 11740              		.loc 1 1776 2 view .LVU3613
 11741              	.LBB1002:
 11742              	.LBI989:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 11743              		.loc 1 114 13 view .LVU3614
 11744              	.LBE1002:
 11745              	.LBE1034:
 11746              	.LBE1040:
ARM GAS  /tmp/ccgiIQCZ.s 			page 331


 11747              	.LBE1347:
 11748              	.LBE1439:
 11749              	.LBE1513:
 115:src/keys.c    **** }
 11750              		.loc 1 115 2 view .LVU3615
 11751              	.LBB1514:
 11752              	.LBB1440:
 11753              	.LBB1348:
 11754              	.LBB1041:
 11755              	.LBB1035:
 11756              	.LBB1003:
 11757              	.LBB999:
 11758              	.LBI990:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 11759              		.loc 1 104 20 view .LVU3616
 11760              	.LBB996:
 105:src/keys.c    **** 	State2.shifts = shift;
 11761              		.loc 1 105 2 view .LVU3617
 11762              	.LBB995:
 11763              	.LBI992:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 11764              		.loc 1 96 13 view .LVU3618
 11765              	.LBB994:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11766              		.loc 1 97 2 view .LVU3619
  98:src/keys.c    **** }
 11767              		.loc 1 98 2 view .LVU3620
  98:src/keys.c    **** }
 11768              		.loc 1 98 52 is_stmt 0 view .LVU3621
 11769 1368 8246     		mov	r10, r0
 11770 136a 08B9     		cbnz	r0, .L1001
 11771 136c 98F810A0 		ldrb	r10, [r8, #16]	@ zero_extendqisi2
 11772              	.L1001:
 11773              	.LVL1003:
  98:src/keys.c    **** }
 11774              		.loc 1 98 52 view .LVU3622
 11775              	.LBE994:
 11776              	.LBE995:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11777              		.loc 1 106 2 is_stmt 1 view .LVU3623
 11778              	.LBE996:
 11779              	.LBE999:
 11780              	.LBE1003:
 11781              	.LBB1004:
 11782              	.LBB1005:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11783              		.loc 1 485 6 is_stmt 0 view .LVU3624
 11784 1370 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 11785              	.LBE1005:
 11786              	.LBE1004:
 11787              	.LBB1021:
 11788              	.LBB1000:
 11789              	.LBB997:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11790              		.loc 1 106 16 view .LVU3625
 11791 1374 4FF0000E 		mov	lr, #0
 11792              	.LBE997:
ARM GAS  /tmp/ccgiIQCZ.s 			page 332


 11793              	.LBE1000:
 11794              	.LBE1021:
 11795              	.LBB1022:
 11796              	.LBB1016:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11797              		.loc 1 485 5 view .LVU3626
 11798 1378 D106     		lsls	r1, r2, #27
 11799              	.LBE1016:
 11800              	.LBE1022:
 11801              	.LBB1023:
 11802              	.LBB1001:
 11803              	.LBB998:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11804              		.loc 1 106 16 view .LVU3627
 11805 137a 88F810E0 		strb	lr, [r8, #16]
 108:src/keys.c    **** }
 11806              		.loc 1 108 2 is_stmt 1 view .LVU3628
 11807              	.LVL1004:
 108:src/keys.c    **** }
 11808              		.loc 1 108 2 is_stmt 0 view .LVU3629
 11809              	.LBE998:
 11810              	.LBE1001:
 11811              	.LBE1023:
1777:src/keys.c    **** 	State2.alpha_pos = 0;
 11812              		.loc 1 1777 2 is_stmt 1 view .LVU3630
1777:src/keys.c    **** 	State2.alpha_pos = 0;
 11813              		.loc 1 1777 11 is_stmt 0 view .LVU3631
 11814 137e 5046     		mov	r0, r10
 11815              	.LVL1005:
 11816              	.LBB1024:
 11817              	.LBI1004:
 435:src/keys.c    **** {
 11818              		.loc 1 435 12 is_stmt 1 view .LVU3632
 11819              	.LBB1017:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 11820              		.loc 1 437 2 view .LVU3633
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11821              		.loc 1 485 2 view .LVU3634
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11822              		.loc 1 485 5 is_stmt 0 view .LVU3635
 11823 1380 5FD5     		bpl	.L1002
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 11824              		.loc 1 486 3 is_stmt 1 view .LVU3636
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 11825              		.loc 1 486 6 is_stmt 0 view .LVU3637
 11826 1382 BAF1000F 		cmp	r10, #0
 11827 1386 5BD0     		beq	.L1161
 488:src/keys.c    **** 			shift = SHIFT_LC_G;
 11828              		.loc 1 488 8 is_stmt 1 view .LVU3638
 11829              	.LBB1006:
 11830              	.LBB1007:
 143:src/keys.c    **** }
 11831              		.loc 1 143 23 is_stmt 0 view .LVU3639
 11832 1388 AD49     		ldr	r1, .L1454+8
 11833              	.LBE1007:
 11834              	.LBE1006:
 491:src/keys.c    **** }
ARM GAS  /tmp/ccgiIQCZ.s 			page 333


 11835              		.loc 1 491 49 view .LVU3640
 11836 138a AE48     		ldr	r0, .L1454+12
 11837              	.LVL1006:
 11838              	.LBB1012:
 11839              	.LBB1008:
 143:src/keys.c    **** }
 11840              		.loc 1 143 23 view .LVU3641
 11841 138c 11F804C0 		ldrb	ip, [r1, r4]	@ zero_extendqisi2
 11842              	.LBE1008:
 11843              	.LBE1012:
 11844              	.LBE1017:
 11845              	.LBE1024:
1778:src/keys.c    **** 
 11846              		.loc 1 1778 19 view .LVU3642
 11847 1390 88F80DE0 		strb	lr, [r8, #13]
 11848              	.LBB1025:
 11849              	.LBB1018:
 489:src/keys.c    **** 	}
 11850              		.loc 1 489 10 view .LVU3643
 11851 1394 BAF1020F 		cmp	r10, #2
 491:src/keys.c    **** }
 11852              		.loc 1 491 49 view .LVU3644
 11853 1398 4FF0060E 		mov	lr, #6
 11854 139c 0EFB0C0C 		mla	ip, lr, ip, r0
 489:src/keys.c    **** 	}
 11855              		.loc 1 489 10 view .LVU3645
 11856 13a0 14BF     		ite	ne
 11857 13a2 5046     		movne	r0, r10
 11858 13a4 0520     		moveq	r0, #5
 11859              	.LVL1007:
 491:src/keys.c    **** }
 11860              		.loc 1 491 2 is_stmt 1 view .LVU3646
 11861              	.LBB1013:
 11862              	.LBI1006:
 131:src/keys.c    **** {
 11863              		.loc 1 131 12 view .LVU3647
 11864              	.LBB1009:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 11865              		.loc 1 133 2 view .LVU3648
 143:src/keys.c    **** }
 11866              		.loc 1 143 2 view .LVU3649
 143:src/keys.c    **** }
 11867              		.loc 1 143 2 is_stmt 0 view .LVU3650
 11868 13a6 063C     		subs	r4, r4, #6
 11869              	.LVL1008:
 143:src/keys.c    **** }
 11870              		.loc 1 143 2 view .LVU3651
 11871              	.LBE1009:
 11872              	.LBE1013:
 491:src/keys.c    **** }
 11873              		.loc 1 491 49 view .LVU3652
 11874 13a8 1CF80000 		ldrb	r0, [ip, r0]	@ zero_extendqisi2
 11875              	.LVL1009:
 491:src/keys.c    **** }
 11876              		.loc 1 491 49 view .LVU3653
 11877              	.LBE1018:
 11878              	.LBE1025:
ARM GAS  /tmp/ccgiIQCZ.s 			page 334


1778:src/keys.c    **** 
 11879              		.loc 1 1778 2 is_stmt 1 view .LVU3654
1780:src/keys.c    **** 	case K10:	// STO
 11880              		.loc 1 1780 2 view .LVU3655
 11881 13ac 212C     		cmp	r4, #33
 11882 13ae 3FF6F2A8 		bhi	.L1005
 11883 13b2 01A1     		adr	r1, .L1123
 11884 13b4 51F824F0 		ldr	pc, [r1, r4, lsl #2]
 11885              		.p2align 2
 11886              	.L1123:
 11887 13b8 3F1A0000 		.word	.L1014+1
 11888 13bc 1F1A0000 		.word	.L1013+1
 11889 13c0 97050000 		.word	.L1005+1
 11890 13c4 97050000 		.word	.L1005+1
 11891 13c8 97050000 		.word	.L1005+1
 11892 13cc 97050000 		.word	.L1005+1
 11893 13d0 D5190000 		.word	.L1012+1
 11894 13d4 97050000 		.word	.L1005+1
 11895 13d8 97050000 		.word	.L1005+1
 11896 13dc 97050000 		.word	.L1005+1
 11897 13e0 A1190000 		.word	.L1020+1
 11898 13e4 97050000 		.word	.L1005+1
 11899 13e8 EB180000 		.word	.L1010+1
 11900 13ec 97050000 		.word	.L1005+1
 11901 13f0 97050000 		.word	.L1005+1
 11902 13f4 97050000 		.word	.L1005+1
 11903 13f8 97050000 		.word	.L1005+1
 11904 13fc 97050000 		.word	.L1005+1
 11905 1400 911E0000 		.word	.L1009+1
 11906 1404 97050000 		.word	.L1005+1
 11907 1408 97050000 		.word	.L1005+1
 11908 140c 97050000 		.word	.L1005+1
 11909 1410 97050000 		.word	.L1005+1
 11910 1414 97050000 		.word	.L1005+1
 11911 1418 97050000 		.word	.L1005+1
 11912 141c 97050000 		.word	.L1005+1
 11913 1420 97050000 		.word	.L1005+1
 11914 1424 97050000 		.word	.L1005+1
 11915 1428 97050000 		.word	.L1005+1
 11916 142c 97050000 		.word	.L1005+1
 11917 1430 6B1E0000 		.word	.L1008+1
 11918 1434 97050000 		.word	.L1005+1
 11919 1438 97050000 		.word	.L1005+1
 11920 143c 5B1E0000 		.word	.L1006+1
 11921              	.LVL1010:
 11922              		.p2align 1
 11923              	.L1161:
 11924              	.LBB1026:
 11925              	.LBB1019:
 487:src/keys.c    **** 		else if (shift == SHIFT_G)
 11926              		.loc 1 487 10 is_stmt 0 view .LVU3656
 11927 1440 0420     		movs	r0, #4
 11928              	.LVL1011:
 11929              	.L1002:
 491:src/keys.c    **** }
 11930              		.loc 1 491 2 is_stmt 1 view .LVU3657
 11931              	.LBB1014:
ARM GAS  /tmp/ccgiIQCZ.s 			page 335


 131:src/keys.c    **** {
 11932              		.loc 1 131 12 view .LVU3658
 11933              	.LBB1010:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 11934              		.loc 1 133 2 view .LVU3659
 143:src/keys.c    **** }
 11935              		.loc 1 143 2 view .LVU3660
 143:src/keys.c    **** }
 11936              		.loc 1 143 23 is_stmt 0 view .LVU3661
 11937 1442 DFF8FCC1 		ldr	ip, .L1454+8
 11938              	.LBE1010:
 11939              	.LBE1014:
 491:src/keys.c    **** }
 11940              		.loc 1 491 49 view .LVU3662
 11941 1446 7F49     		ldr	r1, .L1454+12
 11942              	.LBB1015:
 11943              	.LBB1011:
 143:src/keys.c    **** }
 11944              		.loc 1 143 23 view .LVU3663
 11945 1448 1CF804C0 		ldrb	ip, [ip, r4]	@ zero_extendqisi2
 11946              	.LBE1011:
 11947              	.LBE1015:
 491:src/keys.c    **** }
 11948              		.loc 1 491 49 view .LVU3664
 11949 144c 4FF0060E 		mov	lr, #6
 11950 1450 0EFB0C1C 		mla	ip, lr, ip, r1
 11951 1454 063C     		subs	r4, r4, #6
 11952              	.LVL1012:
 491:src/keys.c    **** }
 11953              		.loc 1 491 49 view .LVU3665
 11954              	.LBE1019:
 11955              	.LBE1026:
1778:src/keys.c    **** 
 11956              		.loc 1 1778 19 view .LVU3666
 11957 1456 4FF0000E 		mov	lr, #0
 11958              	.LBB1027:
 11959              	.LBB1020:
 491:src/keys.c    **** }
 11960              		.loc 1 491 49 view .LVU3667
 11961 145a 1CF80000 		ldrb	r0, [ip, r0]	@ zero_extendqisi2
 11962              	.LVL1013:
 491:src/keys.c    **** }
 11963              		.loc 1 491 49 view .LVU3668
 11964              	.LBE1020:
 11965              	.LBE1027:
1778:src/keys.c    **** 
 11966              		.loc 1 1778 2 is_stmt 1 view .LVU3669
1778:src/keys.c    **** 
 11967              		.loc 1 1778 19 is_stmt 0 view .LVU3670
 11968 145e 88F80DE0 		strb	lr, [r8, #13]
1780:src/keys.c    **** 	case K10:	// STO
 11969              		.loc 1 1780 2 is_stmt 1 view .LVU3671
 11970 1462 212C     		cmp	r4, #33
 11971 1464 3FF697A8 		bhi	.L1005
 11972 1468 01A1     		adr	r1, .L1007
 11973 146a 51F824F0 		ldr	pc, [r1, r4, lsl #2]
 11974 146e 00BF     		.p2align 2
ARM GAS  /tmp/ccgiIQCZ.s 			page 336


 11975              	.L1007:
 11976 1470 3F1A0000 		.word	.L1014+1
 11977 1474 1F1A0000 		.word	.L1013+1
 11978 1478 97050000 		.word	.L1005+1
 11979 147c 97050000 		.word	.L1005+1
 11980 1480 97050000 		.word	.L1005+1
 11981 1484 97050000 		.word	.L1005+1
 11982 1488 D5190000 		.word	.L1012+1
 11983 148c 97050000 		.word	.L1005+1
 11984 1490 97050000 		.word	.L1005+1
 11985 1494 97050000 		.word	.L1005+1
 11986 1498 99190000 		.word	.L1011+1
 11987 149c 97050000 		.word	.L1005+1
 11988 14a0 EB180000 		.word	.L1010+1
 11989 14a4 97050000 		.word	.L1005+1
 11990 14a8 97050000 		.word	.L1005+1
 11991 14ac 97050000 		.word	.L1005+1
 11992 14b0 97050000 		.word	.L1005+1
 11993 14b4 97050000 		.word	.L1005+1
 11994 14b8 911E0000 		.word	.L1009+1
 11995 14bc 97050000 		.word	.L1005+1
 11996 14c0 97050000 		.word	.L1005+1
 11997 14c4 97050000 		.word	.L1005+1
 11998 14c8 97050000 		.word	.L1005+1
 11999 14cc 97050000 		.word	.L1005+1
 12000 14d0 97050000 		.word	.L1005+1
 12001 14d4 97050000 		.word	.L1005+1
 12002 14d8 97050000 		.word	.L1005+1
 12003 14dc 97050000 		.word	.L1005+1
 12004 14e0 97050000 		.word	.L1005+1
 12005 14e4 97050000 		.word	.L1005+1
 12006 14e8 6B1E0000 		.word	.L1008+1
 12007 14ec 97050000 		.word	.L1005+1
 12008 14f0 97050000 		.word	.L1005+1
 12009 14f4 5B1E0000 		.word	.L1006+1
 12010              	.LVL1014:
 12011              		.p2align 1
 12012              	.L1381:
1780:src/keys.c    **** 	case K10:	// STO
 12013              		.loc 1 1780 2 is_stmt 0 view .LVU3672
 12014              	.LBE1035:
 12015              	.LBE1041:
 12016              	.LBE1348:
3366:src/keys.c    **** 		return process_normal((const keycode)c);
 12017              		.loc 1 3366 4 is_stmt 1 view .LVU3673
3366:src/keys.c    **** 		return process_normal((const keycode)c);
 12018              		.loc 1 3366 11 is_stmt 0 view .LVU3674
 12019 14f8 FFF7FEFF 		bl	process_h_shifted
 12020              	.LVL1015:
 12021 14fc 0446     		mov	r4, r0
 12022 14fe FEF759BF 		b	.L834
 12023              	.LVL1016:
 12024              	.L1417:
 12025              	.LBB1349:
 12026              	.LBB1252:
1663:src/keys.c    **** 	  }
 12027              		.loc 1 1663 6 is_stmt 1 view .LVU3675
ARM GAS  /tmp/ccgiIQCZ.s 			page 337


1663:src/keys.c    **** 	  }
 12028              		.loc 1 1663 6 is_stmt 0 view .LVU3676
 12029              	.LBE1252:
 12030              	.LBE1349:
 12031              	.LBE1440:
 12032              	.LBE1514:
3641:src/keys.c    **** 	NonProgrammable = 0;
 12033              		.loc 1 3641 7 is_stmt 1 view .LVU3677
3641:src/keys.c    **** 	NonProgrammable = 0;
 12034              		.loc 1 3641 11 is_stmt 0 view .LVU3678
 12035 1502 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3641:src/keys.c    **** 	NonProgrammable = 0;
 12036              		.loc 1 3641 10 view .LVU3679
 12037 1506 5C06     		lsls	r4, r3, #25
 12038 1508 40F1E281 		bpl	.L1170
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12039              		.loc 1 3642 2 is_stmt 1 view .LVU3680
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12040              		.loc 1 3642 18 is_stmt 0 view .LVU3681
 12041 150c 4E4B     		ldr	r3, .L1454+16
3643:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12042              		.loc 1 3643 32 view .LVU3682
 12043 150e 40F2CB15 		movw	r5, #459
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12044              		.loc 1 3642 18 view .LVU3683
 12045 1512 C3F800A0 		str	r10, [r3]
3643:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12046              		.loc 1 3643 2 is_stmt 1 view .LVU3684
 12047 1516 FFF742B9 		b	.L1105
 12048              	.LVL1017:
 12049              	.L1400:
 12050              	.LBB1515:
 12051              	.LBB1441:
 12052              	.LBB1350:
 12053              	.LBB1141:
1735:src/keys.c    **** 			goto fin2;
 12054              		.loc 1 1735 3 view .LVU3685
1735:src/keys.c    **** 			goto fin2;
 12055              		.loc 1 1735 13 is_stmt 0 view .LVU3686
 12056 151a 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 12057              	.LVL1018:
1735:src/keys.c    **** 			goto fin2;
 12058              		.loc 1 1735 6 view .LVU3687
 12059 151e 002B     		cmp	r3, #0
 12060 1520 3FF46BAA 		beq	.L850
1738:src/keys.c    **** 			State2.digval /= 10;
 12061              		.loc 1 1738 4 is_stmt 1 view .LVU3688
1738:src/keys.c    **** 			State2.digval /= 10;
 12062              		.loc 1 1738 19 is_stmt 0 view .LVU3689
 12063 1524 013B     		subs	r3, r3, #1
1739:src/keys.c    **** 		}
 12064              		.loc 1 1739 18 view .LVU3690
 12065 1526 B8F80820 		ldrh	r2, [r8, #8]
 12066              	.LVL1019:
1738:src/keys.c    **** 			State2.digval /= 10;
 12067              		.loc 1 1738 19 view .LVU3691
 12068 152a 88F80B30 		strb	r3, [r8, #11]
ARM GAS  /tmp/ccgiIQCZ.s 			page 338


1739:src/keys.c    **** 		}
 12069              		.loc 1 1739 4 is_stmt 1 view .LVU3692
1739:src/keys.c    **** 		}
 12070              		.loc 1 1739 18 is_stmt 0 view .LVU3693
 12071 152e 0A21     		movs	r1, #10
 12072              	.LVL1020:
1739:src/keys.c    **** 		}
 12073              		.loc 1 1739 18 view .LVU3694
 12074 1530 3368     		ldr	r3, [r6]
 12075 1532 B2FBF1F2 		udiv	r2, r2, r1
 12076              	.LBE1141:
 12077              	.LBE1350:
3281:src/keys.c    **** 
 12078              		.loc 1 3281 10 view .LVU3695
 12079 1536 3324     		movs	r4, #51
 12080              	.LVL1021:
 12081              	.LBB1351:
 12082              	.LBB1142:
1739:src/keys.c    **** 		}
 12083              		.loc 1 1739 18 view .LVU3696
 12084 1538 A8F80820 		strh	r2, [r8, #8]	@ movhi
1760:src/keys.c    **** 		rawpc = find_user_pc(pc);
 12085              		.loc 1 1760 2 is_stmt 1 view .LVU3697
 12086 153c FEF7BDBD 		b	.L799
 12087              	.LVL1022:
 12088              	.L1128:
1760:src/keys.c    **** 		rawpc = find_user_pc(pc);
 12089              		.loc 1 1760 2 is_stmt 0 view .LVU3698
 12090              	.LBE1142:
 12091              	.LBE1351:
 12092              	.LBB1352:
 12093              	.LBB962:
1332:src/keys.c    ****      switch (c) {
 12094              		.loc 1 1332 6 is_stmt 1 view .LVU3699
 12095 1540 0020     		movs	r0, #0
 12096 1542 FFF7FEFF 		bl	finish_cpx_entry
 12097              	.LVL1023:
1333:src/keys.c    ****      case (K60):
 12098              		.loc 1 1333 6 view .LVU3700
 12099              	.L1342:
1333:src/keys.c    ****      case (K60):
 12100              		.loc 1 1333 6 is_stmt 0 view .LVU3701
 12101              	.LBE962:
 12102              	.LBE1352:
3361:src/keys.c    **** 	} else {
 12103              		.loc 1 3361 3 is_stmt 1 view .LVU3702
3361:src/keys.c    **** 	} else {
 12104              		.loc 1 3361 10 is_stmt 0 view .LVU3703
 12105 1546 2046     		mov	r0, r4
 12106              	.L1344:
 12107 1548 FFF7FEFF 		bl	process_cmplx
 12108              	.LVL1024:
 12109 154c 0446     		mov	r4, r0
 12110 154e FEF731BF 		b	.L834
 12111              	.LVL1025:
 12112              	.L1405:
 12113              	.LBB1353:
ARM GAS  /tmp/ccgiIQCZ.s 			page 339


 12114              	.LBB1194:
2813:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 12115              		.loc 1 2813 3 is_stmt 1 view .LVU3704
2813:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 12116              		.loc 1 2813 12 is_stmt 0 view .LVU3705
 12117 1552 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
 12118 1556 2046     		mov	r0, r4
 12119 1558 941E     		subs	r4, r2, #2
 12120              	.LVL1026:
2813:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 12121              		.loc 1 2813 12 view .LVU3706
 12122 155a 6242     		rsbs	r2, r4, #0
 12123 155c 6241     		adcs	r2, r2, r4
 12124 155e FFF7FEFF 		bl	process_catalogue
 12125              	.LVL1027:
2814:src/keys.c    **** 			return opcode;
 12126              		.loc 1 2814 6 view .LVU3707
 12127 1562 3328     		cmp	r0, #51
2813:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 12128              		.loc 1 2813 12 view .LVU3708
 12129 1564 0446     		mov	r4, r0
 12130              	.LVL1028:
2814:src/keys.c    **** 			return opcode;
 12131              		.loc 1 2814 3 is_stmt 1 view .LVU3709
2814:src/keys.c    **** 			return opcode;
 12132              		.loc 1 2814 6 is_stmt 0 view .LVU3710
 12133 1566 3EF486AF 		beq	.L1345
2816:src/keys.c    **** 		goto add_char;
 12134              		.loc 1 2816 3 is_stmt 1 view .LVU3711
2816:src/keys.c    **** 		goto add_char;
 12135              		.loc 1 2816 6 is_stmt 0 view .LVU3712
 12136 156a C4B2     		uxtb	r4, r0
 12137              	.LVL1029:
2817:src/keys.c    **** 	}
 12138              		.loc 1 2817 3 is_stmt 1 view .LVU3713
 12139 156c FFF719BB 		b	.L932
 12140              	.LVL1030:
 12141              	.L933:
2832:src/keys.c    **** 			if (State2.numdigit == 0)
 12142              		.loc 1 2832 3 view .LVU3714
2832:src/keys.c    **** 			if (State2.numdigit == 0)
 12143              		.loc 1 2832 6 is_stmt 0 view .LVU3715
 12144 1570 0329     		cmp	r1, #3
 12145 1572 3FF40CAB 		beq	.L939
2833:src/keys.c    **** 				reset_multi();
 12146              		.loc 1 2833 4 is_stmt 1 view .LVU3716
2833:src/keys.c    **** 				reset_multi();
 12147              		.loc 1 2833 14 is_stmt 0 view .LVU3717
 12148 1576 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
2833:src/keys.c    **** 				reset_multi();
 12149              		.loc 1 2833 7 view .LVU3718
 12150 157a 002A     		cmp	r2, #0
 12151 157c 40F0DC84 		bne	.L940
2834:src/keys.c    **** 			else
 12152              		.loc 1 2834 5 is_stmt 1 view .LVU3719
 12153              	.LBB1182:
 12154              	.LBI1182:
ARM GAS  /tmp/ccgiIQCZ.s 			page 340


2799:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 12155              		.loc 1 2799 13 view .LVU3720
 12156              	.LBB1183:
2801:src/keys.c    **** 	if (! State2.alphas )
 12157              		.loc 1 2801 2 view .LVU3721
2801:src/keys.c    **** 	if (! State2.alphas )
 12158              		.loc 1 2801 15 is_stmt 0 view .LVU3722
 12159 1580 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 12160              	.LVL1031:
2802:src/keys.c    **** 		State2.alphashift = 0;
 12161              		.loc 1 2802 6 view .LVU3723
 12162 1584 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2801:src/keys.c    **** 	if (! State2.alphas )
 12163              		.loc 1 2801 15 view .LVU3724
 12164 1588 62F3C301 		bfi	r1, r2, #3, #1
2802:src/keys.c    **** 		State2.alphashift = 0;
 12165              		.loc 1 2802 5 view .LVU3725
 12166 158c 13F00802 		ands	r2, r3, #8
2801:src/keys.c    **** 	if (! State2.alphas )
 12167              		.loc 1 2801 15 view .LVU3726
 12168 1590 88F81510 		strb	r1, [r8, #21]
2802:src/keys.c    **** 		State2.alphashift = 0;
 12169              		.loc 1 2802 2 is_stmt 1 view .LVU3727
2802:src/keys.c    **** 		State2.alphashift = 0;
 12170              		.loc 1 2802 5 is_stmt 0 view .LVU3728
 12171 1594 7FF4B0A8 		bne	.L1349
 12172              	.L943:
 12173              	.LBE1183:
 12174              	.LBE1182:
 12175              	.LBB1184:
 12176              	.LBB1185:
2803:src/keys.c    **** }
 12177              		.loc 1 2803 3 is_stmt 1 view .LVU3729
2803:src/keys.c    **** }
 12178              		.loc 1 2803 21 is_stmt 0 view .LVU3730
 12179 1598 62F30413 		bfi	r3, r2, #4, #1
 12180 159c 88F81630 		strb	r3, [r8, #22]
 12181 15a0 3368     		ldr	r3, [r6]
 12182              	.LBE1185:
 12183              	.LBE1184:
2846:src/keys.c    **** 
 12184              		.loc 1 2846 10 view .LVU3731
 12185 15a2 3324     		movs	r4, #51
 12186              	.LVL1032:
2846:src/keys.c    **** 
 12187              		.loc 1 2846 10 view .LVU3732
 12188 15a4 FEF789BD 		b	.L799
 12189              	.LVL1033:
 12190              	.L1406:
2822:src/keys.c    **** 				break;
 12191              		.loc 1 2822 3 is_stmt 1 view .LVU3733
2822:src/keys.c    **** 				break;
 12192              		.loc 1 2822 6 is_stmt 0 view .LVU3734
 12193 15a8 0029     		cmp	r1, #0
 12194 15aa 7FF4E8AA 		bne	.L935
2824:src/keys.c    **** 		if (State2.numdigit == 0)
 12195              		.loc 1 2824 3 is_stmt 1 view .LVU3735
ARM GAS  /tmp/ccgiIQCZ.s 			page 341


 12196              	.LBB1187:
 12197              	.LBI1187:
2799:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 12198              		.loc 1 2799 13 view .LVU3736
 12199              	.LBB1188:
2801:src/keys.c    **** 	if (! State2.alphas )
 12200              		.loc 1 2801 2 view .LVU3737
2801:src/keys.c    **** 	if (! State2.alphas )
 12201              		.loc 1 2801 15 is_stmt 0 view .LVU3738
 12202 15ae 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2802:src/keys.c    **** 		State2.alphashift = 0;
 12203              		.loc 1 2802 6 view .LVU3739
 12204 15b2 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2801:src/keys.c    **** 	if (! State2.alphas )
 12205              		.loc 1 2801 15 view .LVU3740
 12206 15b6 61F3C302 		bfi	r2, r1, #3, #1
 12207 15ba 88F81520 		strb	r2, [r8, #21]
2802:src/keys.c    **** 		State2.alphashift = 0;
 12208              		.loc 1 2802 2 is_stmt 1 view .LVU3741
2802:src/keys.c    **** 		State2.alphashift = 0;
 12209              		.loc 1 2802 5 is_stmt 0 view .LVU3742
 12210 15be 1A07     		lsls	r2, r3, #28
2803:src/keys.c    **** }
 12211              		.loc 1 2803 3 is_stmt 1 view .LVU3743
 12212              	.LBE1188:
 12213              	.LBE1187:
2825:src/keys.c    **** 			return STATE_UNFINISHED;
 12214              		.loc 1 2825 3 view .LVU3744
 12215              	.LBB1190:
 12216              	.LBB1189:
2803:src/keys.c    **** }
 12217              		.loc 1 2803 21 is_stmt 0 view .LVU3745
 12218 15c0 5CBF     		itt	pl
 12219 15c2 61F30413 		bfipl	r3, r1, #4, #1
 12220 15c6 88F81630 		strbpl	r3, [r8, #22]
 12221              	.LBE1189:
 12222              	.LBE1190:
2825:src/keys.c    **** 			return STATE_UNFINISHED;
 12223              		.loc 1 2825 13 view .LVU3746
 12224 15ca 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
2825:src/keys.c    **** 			return STATE_UNFINISHED;
 12225              		.loc 1 2825 6 view .LVU3747
 12226 15ce 002B     		cmp	r3, #0
 12227 15d0 3FF492A8 		beq	.L1349
2827:src/keys.c    **** 			State2.digval2 = 0;
 12228              		.loc 1 2827 8 is_stmt 1 view .LVU3748
2827:src/keys.c    **** 			State2.digval2 = 0;
 12229              		.loc 1 2827 11 is_stmt 0 view .LVU3749
 12230 15d4 012B     		cmp	r3, #1
2828:src/keys.c    **** 		goto fin;
 12231              		.loc 1 2828 19 view .LVU3750
 12232 15d6 4FF00004 		mov	r4, #0
 12233              	.LVL1034:
2827:src/keys.c    **** 			State2.digval2 = 0;
 12234              		.loc 1 2827 11 view .LVU3751
 12235 15da 7FF4F9AA 		bne	.L938
2828:src/keys.c    **** 		goto fin;
ARM GAS  /tmp/ccgiIQCZ.s 			page 342


 12236              		.loc 1 2828 4 is_stmt 1 view .LVU3752
2828:src/keys.c    **** 		goto fin;
 12237              		.loc 1 2828 19 is_stmt 0 view .LVU3753
 12238 15de 88F80A40 		strb	r4, [r8, #10]
 12239 15e2 FFF7F5BA 		b	.L938
 12240              	.LVL1035:
 12241              	.L934:
2842:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 12242              		.loc 1 2842 3 is_stmt 1 view .LVU3754
2842:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 12243              		.loc 1 2842 6 is_stmt 0 view .LVU3755
 12244 15e6 0129     		cmp	r1, #1
 12245 15e8 00F0BC81 		beq	.L1426
2845:src/keys.c    **** 		return STATE_UNFINISHED;
 12246              		.loc 1 2845 4 is_stmt 1 view .LVU3756
 12247              	.LBB1191:
 12248              	.LBI1184:
2799:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 12249              		.loc 1 2799 13 view .LVU3757
 12250              	.LBB1186:
2801:src/keys.c    **** 	if (! State2.alphas )
 12251              		.loc 1 2801 2 view .LVU3758
2801:src/keys.c    **** 	if (! State2.alphas )
 12252              		.loc 1 2801 15 is_stmt 0 view .LVU3759
 12253 15ec 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2802:src/keys.c    **** 		State2.alphashift = 0;
 12254              		.loc 1 2802 6 view .LVU3760
 12255 15f0 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2801:src/keys.c    **** 	if (! State2.alphas )
 12256              		.loc 1 2801 15 view .LVU3761
 12257 15f4 60F3C302 		bfi	r2, r0, #3, #1
 12258 15f8 88F81520 		strb	r2, [r8, #21]
2802:src/keys.c    **** 		State2.alphashift = 0;
 12259              		.loc 1 2802 2 is_stmt 1 view .LVU3762
2802:src/keys.c    **** 		State2.alphashift = 0;
 12260              		.loc 1 2802 5 is_stmt 0 view .LVU3763
 12261 15fc 13F00802 		ands	r2, r3, #8
 12262 1600 CAD0     		beq	.L943
 12263 1602 FFF779B8 		b	.L1349
 12264              	.LVL1036:
 12265              	.L1153:
2802:src/keys.c    **** 		State2.alphashift = 0;
 12266              		.loc 1 2802 5 view .LVU3764
 12267              	.LBE1186:
 12268              	.LBE1191:
 12269              	.LBE1194:
 12270              	.LBE1353:
 12271              	.LBB1354:
 12272              	.LBB1083:
2992:src/keys.c    **** 	const int opcode = getprog(pc);
 12273              		.loc 1 2992 27 view .LVU3765
 12274 1606 4FF0030A 		mov	r10, #3
 12275 160a 63E4     		b	.L947
 12276              	.LVL1037:
 12277              	.L1413:
2992:src/keys.c    **** 	const int opcode = getprog(pc);
 12278              		.loc 1 2992 27 view .LVU3766
ARM GAS  /tmp/ccgiIQCZ.s 			page 343


 12279              	.LBE1083:
 12280              	.LBE1354:
 12281              	.LBB1355:
 12282              	.LBB1220:
 12283              	.LBB1212:
2931:src/keys.c    **** 		else if (nn != NO_REG)
 12284              		.loc 1 2931 4 is_stmt 1 view .LVU3767
2933:src/keys.c    **** 	}
 12285              		.loc 1 2933 6 is_stmt 0 view .LVU3768
 12286 160c 9A42     		cmp	r2, r3
 12287 160e 08BF     		it	eq
 12288 1610 0A23     		moveq	r3, #10
 12289              	.LVL1038:
2933:src/keys.c    **** 	}
 12290              		.loc 1 2933 6 view .LVU3769
 12291 1612 FFF722BB 		b	.L883
 12292              	.LVL1039:
 12293              	.L1038:
2933:src/keys.c    **** 	}
 12294              		.loc 1 2933 6 view .LVU3770
 12295              	.LBE1212:
 12296              	.LBE1220:
 12297              	.LBE1355:
 12298              	.LBB1356:
 12299              	.LBB963:
1298:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 12300              		.loc 1 1298 4 is_stmt 1 view .LVU3771
1298:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 12301              		.loc 1 1298 7 is_stmt 0 view .LVU3772
 12302 1616 BAF1020F 		cmp	r10, #2
 12303 161a 40F09980 		bne	.L1040
1298:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 12304              		.loc 1 1298 28 view .LVU3773
 12305 161e A01F     		subs	r0, r4, #6
 12306 1620 C0B2     		uxtb	r0, r0
 12307 1622 0228     		cmp	r0, #2
 12308 1624 00F27782 		bhi	.L1041
1299:src/keys.c    ****    }
 12309              		.loc 1 1299 6 is_stmt 1 view .LVU3774
 12310 1628 FFF7FEFF 		bl	convert_regK
 12311              	.LVL1040:
1301:src/keys.c    ****      return process_fg_shifted (c);
 12312              		.loc 1 1301 4 view .LVU3775
 12313              	.L1340:
1301:src/keys.c    ****      return process_fg_shifted (c);
 12314              		.loc 1 1301 4 is_stmt 0 view .LVU3776
 12315              	.LBE963:
 12316              	.LBE1356:
3364:src/keys.c    **** 		if (shift == SHIFT_H)
 12317              		.loc 1 3364 4 is_stmt 1 view .LVU3777
3364:src/keys.c    **** 		if (shift == SHIFT_H)
 12318              		.loc 1 3364 11 is_stmt 0 view .LVU3778
 12319 162c 2046     		mov	r0, r4
 12320 162e FFF7FEFF 		bl	process_fg_shifted
 12321              	.LVL1041:
 12322 1632 0446     		mov	r4, r0
 12323 1634 FEF7BEBE 		b	.L834
ARM GAS  /tmp/ccgiIQCZ.s 			page 344


 12324              	.L1455:
 12325              		.align	2
 12326              	.L1454:
 12327 1638 00000000 		.word	.LANCHOR17
 12328 163c 00000000 		.word	main_ram
 12329 1640 00000000 		.word	.LANCHOR6
 12330 1644 00000000 		.word	.LANCHOR15
 12331 1648 00000000 		.word	NonProgrammable
 12332 164c 000A4000 		.word	4196864
 12333 1650 00080800 		.word	526336
 12334              	.LVL1042:
 12335              	.L1403:
3364:src/keys.c    **** 		if (shift == SHIFT_H)
 12336              		.loc 1 3364 11 view .LVU3779
 12337 1654 0093     		str	r3, [sp]
 12338              	.LBB1357:
 12339              	.LBB866:
 12340              	.LBB856:
 373:src/keys.c    **** #else
 12341              		.loc 1 373 45 view .LVU3780
 12342 1656 FFF7FEFF 		bl	shift_down
 12343              	.LVL1043:
 373:src/keys.c    **** #else
 12344              		.loc 1 373 42 view .LVU3781
 12345 165a 0328     		cmp	r0, #3
 12346 165c 009B     		ldr	r3, [sp]
 12347 165e 00F0FB80 		beq	.L919
 12348 1662 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 371:src/keys.c    **** #ifndef WINGUI
 12349              		.loc 1 371 8 view .LVU3782
 12350 1666 C94A     		ldr	r2, .L1456
 373:src/keys.c    **** #else
 12351              		.loc 1 373 73 view .LVU3783
 12352 1668 D646     		mov	lr, r10
 377:src/keys.c    ****   }
 12353              		.loc 1 377 9 view .LVU3784
 12354 166a 0C20     		movs	r0, #12
 12355 166c FFF73ABA 		b	.L918
 12356              	.LVL1044:
 12357              	.L1423:
 377:src/keys.c    ****   }
 12358              		.loc 1 377 9 view .LVU3785
 12359              	.LBE856:
 12360              	.LBE866:
 12361              	.LBE1357:
 12362              	.LBB1358:
 12363              	.LBB1316:
3139:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 12364              		.loc 1 3139 50 view .LVU3786
 12365 1670 0D2C     		cmp	r4, #13
 12366 1672 7FF472AD 		bne	.L983
3140:src/keys.c    **** 		set_smode(SDISP_SHOW);
 12367              		.loc 1 3140 3 is_stmt 1 view .LVU3787
 12368 1676 B9F1010F 		cmp	r9, #1
 12369 167a 14BF     		ite	ne
 12370 167c 2C20     		movne	r0, #44
 12371              	.LVL1045:
ARM GAS  /tmp/ccgiIQCZ.s 			page 345


3140:src/keys.c    **** 		set_smode(SDISP_SHOW);
 12372              		.loc 1 3140 3 is_stmt 0 view .LVU3788
 12373 167e 2B20     		moveq	r0, #43
 12374 1680 FFF7FEFF 		bl	set_window
 12375              	.LVL1046:
3141:src/keys.c    **** 	}
 12376              		.loc 1 3141 3 is_stmt 1 view .LVU3789
 12377              	.LBB1312:
 12378              	.LBI1312:
 743:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 12379              		.loc 1 743 13 view .LVU3790
 12380              	.LBB1313:
 744:src/keys.c    **** }
 12381              		.loc 1 744 2 view .LVU3791
 744:src/keys.c    **** }
 12382              		.loc 1 744 15 is_stmt 0 view .LVU3792
 12383 1684 98F81120 		ldrb	r2, [r8, #17]	@ zero_extendqisi2
 12384 1688 3368     		ldr	r3, [r6]
 12385 168a 013A     		subs	r2, r2, #1
 12386 168c 18BF     		it	ne
 12387 168e 0122     		movne	r2, #1
 12388 1690 88F81120 		strb	r2, [r8, #17]
 12389              	.LVL1047:
 744:src/keys.c    **** }
 12390              		.loc 1 744 15 view .LVU3793
 12391              	.LBE1313:
 12392              	.LBE1312:
3148:src/keys.c    **** 	case K_DOWN:
 12393              		.loc 1 3148 2 is_stmt 1 view .LVU3794
3148:src/keys.c    **** 	case K_DOWN:
 12394              		.loc 1 3148 2 is_stmt 0 view .LVU3795
 12395              	.LBE1316:
 12396              	.LBE1358:
 12397              	.LBE1441:
 12398              	.LBE1515:
3605:src/keys.c    ****     case STATE_SST:
 12399              		.loc 1 3605 5 is_stmt 1 view .LVU3796
 12400              	.LBB1516:
 12401              	.LBB1442:
 12402              	.LBB1359:
 12403              	.LBB1317:
3199:src/keys.c    **** 	}
 12404              		.loc 1 3199 10 is_stmt 0 view .LVU3797
 12405 1694 3324     		movs	r4, #51
 12406 1696 FEF710BD 		b	.L799
 12407              	.LVL1048:
 12408              	.L1390:
3199:src/keys.c    **** 	}
 12409              		.loc 1 3199 10 view .LVU3798
 12410              	.LBE1317:
 12411              	.LBE1359:
3249:src/keys.c    **** 	CLEAR_REAL;
 12412              		.loc 1 3249 2 is_stmt 1 view .LVU3799
 12413              	.LBB1360:
 12414              	.LBI1360:
1246:src/keys.c    **** 	// called if number entry terminated by EXIT key
 12415              		.loc 1 1246 13 view .LVU3800
ARM GAS  /tmp/ccgiIQCZ.s 			page 346


 12416              	.LBB1361:
1250:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
 12417              		.loc 1 1250 2 view .LVU3801
1250:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
 12418              		.loc 1 1250 5 is_stmt 0 view .LVU3802
 12419 169a 0907     		lsls	r1, r1, #28
 12420 169c 03D4     		bmi	.L814
1250:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
 12421              		.loc 1 1250 21 view .LVU3803
 12422 169e 93F8EB37 		ldrb	r3, [r3, #2027]	@ zero_extendqisi2
1250:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
 12423              		.loc 1 1250 18 view .LVU3804
 12424 16a2 1B07     		lsls	r3, r3, #28
 12425 16a4 2FD5     		bpl	.L815
 12426              	.L814:
1251:src/keys.c    **** 		drop ( OP_DROPXY );
 12427              		.loc 1 1251 2 is_stmt 1 view .LVU3805
1251:src/keys.c    **** 		drop ( OP_DROPXY );
 12428              		.loc 1 1251 5 is_stmt 0 view .LVU3806
 12429 16a6 D407     		lsls	r4, r2, #31
 12430 16a8 40F19980 		bpl	.L816
1252:src/keys.c    **** 		copyreg (get_reg_n(regC_idx), get_reg_n(regJ_idx));
 12431              		.loc 1 1252 3 is_stmt 1 view .LVU3807
 12432 16ac 0F20     		movs	r0, #15
 12433 16ae FFF7FEFF 		bl	drop
 12434              	.LVL1049:
1253:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
 12435              		.loc 1 1253 3 view .LVU3808
 12436 16b2 6A20     		movs	r0, #106
 12437 16b4 FFF7FEFF 		bl	get_reg_n
 12438              	.LVL1050:
 12439 16b8 0446     		mov	r4, r0
1253:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
 12440              		.loc 1 1253 33 is_stmt 0 view .LVU3809
 12441 16ba 6E20     		movs	r0, #110
 12442 16bc FFF7FEFF 		bl	get_reg_n
 12443              	.LVL1051:
 12444 16c0 0146     		mov	r1, r0
1253:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
 12445              		.loc 1 1253 3 view .LVU3810
 12446 16c2 2046     		mov	r0, r4
 12447 16c4 FFF7FEFF 		bl	copyreg
 12448              	.LVL1052:
1254:src/keys.c    **** 	}
 12449              		.loc 1 1254 3 is_stmt 1 view .LVU3811
 12450 16c8 6B20     		movs	r0, #107
 12451              	.L1337:
1258:src/keys.c    **** 	}
 12452              		.loc 1 1258 3 is_stmt 0 view .LVU3812
 12453 16ca FFF7FEFF 		bl	get_reg_n
 12454              	.LVL1053:
 12455 16ce 0446     		mov	r4, r0
1258:src/keys.c    **** 	}
 12456              		.loc 1 1258 33 view .LVU3813
 12457 16d0 6F20     		movs	r0, #111
 12458 16d2 FFF7FEFF 		bl	get_reg_n
 12459              	.LVL1054:
ARM GAS  /tmp/ccgiIQCZ.s 			page 347


 12460 16d6 0146     		mov	r1, r0
1258:src/keys.c    **** 	}
 12461              		.loc 1 1258 3 view .LVU3814
 12462 16d8 2046     		mov	r0, r4
 12463 16da FFF7FEFF 		bl	copyreg
 12464              	.LVL1055:
1260:src/keys.c    **** 	CLEAR_INIT_LIFT;
 12465              		.loc 1 1260 2 is_stmt 1 view .LVU3815
1260:src/keys.c    **** 	CLEAR_INIT_LIFT;
 12466              		.loc 1 1260 22 is_stmt 0 view .LVU3816
 12467 16de DBF80020 		ldr	r2, [fp]
1260:src/keys.c    **** 	CLEAR_INIT_LIFT;
 12468              		.loc 1 1260 20 view .LVU3817
 12469 16e2 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
1260:src/keys.c    **** 	CLEAR_INIT_LIFT;
 12470              		.loc 1 1260 22 view .LVU3818
 12471 16e6 92F8DE37 		ldrb	r3, [r2, #2014]	@ zero_extendqisi2
 12472 16ea C3F30003 		ubfx	r3, r3, #0, #1
1260:src/keys.c    **** 	CLEAR_INIT_LIFT;
 12473              		.loc 1 1260 20 view .LVU3819
 12474 16ee 63F38611 		bfi	r1, r3, #6, #1
 12475 16f2 88F81710 		strb	r1, [r8, #23]
1261:src/keys.c    **** 	CLEAR_POLAR_READY;
 12476              		.loc 1 1261 2 is_stmt 1 view .LVU3820
1262:src/keys.c    **** }
 12477              		.loc 1 1262 2 view .LVU3821
1261:src/keys.c    **** 	CLEAR_POLAR_READY;
 12478              		.loc 1 1261 2 is_stmt 0 view .LVU3822
 12479 16f6 92F8DE37 		ldrb	r3, [r2, #2014]	@ zero_extendqisi2
 12480 16fa 23F01103 		bic	r3, r3, #17
 12481 16fe 43F01003 		orr	r3, r3, #16
 12482 1702 82F8DE37 		strb	r3, [r2, #2014]
 12483              	.L815:
 12484              	.LBE1361:
 12485              	.LBE1360:
3250:src/keys.c    **** 	CLEAR_IMAG;
 12486              		.loc 1 3250 2 is_stmt 1 view .LVU3823
 12487 1706 DBF80030 		ldr	r3, [fp]
 12488 170a 93F8E417 		ldrb	r1, [r3, #2020]	@ zero_extendqisi2
3251:src/keys.c    ****       }
 12489              		.loc 1 3251 2 is_stmt 0 view .LVU3824
 12490 170e 93F8EB27 		ldrb	r2, [r3, #2027]	@ zero_extendqisi2
3250:src/keys.c    **** 	CLEAR_IMAG;
 12491              		.loc 1 3250 2 view .LVU3825
 12492 1712 6FF3C301 		bfc	r1, #3, #1
3251:src/keys.c    ****       }
 12493              		.loc 1 3251 2 view .LVU3826
 12494 1716 6FF3C302 		bfc	r2, #3, #1
3250:src/keys.c    **** 	CLEAR_IMAG;
 12495              		.loc 1 3250 2 view .LVU3827
 12496 171a 83F8E417 		strb	r1, [r3, #2020]
3251:src/keys.c    ****       }
 12497              		.loc 1 3251 2 is_stmt 1 view .LVU3828
 12498 171e 83F8EB27 		strb	r2, [r3, #2027]
 12499 1722 FFF7E8B8 		b	.L813
 12500              	.LVL1056:
 12501              	.L1420:
ARM GAS  /tmp/ccgiIQCZ.s 			page 348


 12502              	.LBB1363:
 12503              	.LBB1318:
3123:src/keys.c    **** 	const int g_max = global_regs();
 12504              		.loc 1 3123 33 is_stmt 0 view .LVU3829
 12505 1726 FFF7FEFF 		bl	local_regs
 12506              	.LVL1057:
 12507 172a 8246     		mov	r10, r0
 12508 172c 05E5     		b	.L975
 12509              	.LVL1058:
 12510              	.L1380:
3123:src/keys.c    **** 	const int g_max = global_regs();
 12511              		.loc 1 3123 33 view .LVU3830
 12512              	.LBE1318:
 12513              	.LBE1363:
3357:src/keys.c    **** 	}
 12514              		.loc 1 3357 3 is_stmt 1 view .LVU3831
 12515              	.LBB1364:
 12516              	.LBI873:
1287:src/keys.c    **** 
 12517              		.loc 1 1287 13 view .LVU3832
 12518              	.LBB964:
1289:src/keys.c    **** 
 12519              		.loc 1 1289 4 view .LVU3833
 12520              	.LBB884:
 12521              	.LBI884:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 12522              		.loc 1 96 13 view .LVU3834
 12523              	.LBB885:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12524              		.loc 1 97 2 view .LVU3835
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12525              		.loc 1 97 18 is_stmt 0 view .LVU3836
 12526 172e FFF7FEFF 		bl	shift_down
 12527              	.LVL1059:
  98:src/keys.c    **** }
 12528              		.loc 1 98 2 is_stmt 1 view .LVU3837
  98:src/keys.c    **** }
 12529              		.loc 1 98 52 is_stmt 0 view .LVU3838
 12530 1732 8246     		mov	r10, r0
 12531 1734 08B9     		cbnz	r0, .L1037
 12532 1736 98F810A0 		ldrb	r10, [r8, #16]	@ zero_extendqisi2
 12533              	.L1037:
 12534              	.LVL1060:
  98:src/keys.c    **** }
 12535              		.loc 1 98 52 view .LVU3839
 12536              	.LBE885:
 12537              	.LBE884:
1293:src/keys.c    ****      return process_h_shifted (c);
 12538              		.loc 1 1293 4 is_stmt 1 view .LVU3840
1293:src/keys.c    ****      return process_h_shifted (c);
 12539              		.loc 1 1293 7 is_stmt 0 view .LVU3841
 12540 173a 042C     		cmp	r4, #4
 12541 173c 3FF66BAF 		bhi	.L1038
1293:src/keys.c    ****      return process_h_shifted (c);
 12542              		.loc 1 1293 19 view .LVU3842
 12543 1740 BAF1030F 		cmp	r10, #3
 12544 1744 00F0CD83 		beq	.L1427
ARM GAS  /tmp/ccgiIQCZ.s 			page 349


1298:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 12545              		.loc 1 1298 4 is_stmt 1 view .LVU3843
1298:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 12546              		.loc 1 1298 7 is_stmt 0 view .LVU3844
 12547 1748 BAF1020F 		cmp	r10, #2
 12548 174c 00F0E381 		beq	.L1041
 12549              	.L1040:
1301:src/keys.c    ****      return process_fg_shifted (c);
 12550              		.loc 1 1301 4 is_stmt 1 view .LVU3845
1301:src/keys.c    ****      return process_fg_shifted (c);
 12551              		.loc 1 1301 7 is_stmt 0 view .LVU3846
 12552 1750 631F     		subs	r3, r4, #5
 12553 1752 032B     		cmp	r3, #3
 12554 1754 00F28981 		bhi	.L1043
1301:src/keys.c    ****      return process_fg_shifted (c);
 12555              		.loc 1 1301 55 view .LVU3847
 12556 1758 0AF1FF33 		add	r3, r10, #-1
1301:src/keys.c    ****      return process_fg_shifted (c);
 12557              		.loc 1 1301 34 view .LVU3848
 12558 175c DBB2     		uxtb	r3, r3
 12559 175e 012B     		cmp	r3, #1
 12560 1760 7FF664AF 		bls	.L1340
 12561              	.L1044:
1331:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
 12562              		.loc 1 1331 4 is_stmt 1 view .LVU3849
1331:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
 12563              		.loc 1 1331 7 is_stmt 0 view .LVU3850
 12564 1764 BAF1000F 		cmp	r10, #0
 12565 1768 40F0DC81 		bne	.L1335
1411:src/keys.c    ****    case (K61):
 12566              		.loc 1 1411 4 is_stmt 1 view .LVU3851
 12567 176c 231F     		subs	r3, r4, #4
 12568 176e 292B     		cmp	r3, #41
 12569 1770 00F27082 		bhi	.L1075
 12570 1774 DFE813F0 		tbh	[pc, r3, lsl #1]
 12571              	.L1077:
 12572 1778 9001     		.2byte	(.L1078-.L1077)/2
 12573 177a 6E02     		.2byte	(.L1075-.L1077)/2
 12574 177c 6E02     		.2byte	(.L1075-.L1077)/2
 12575 177e 6E02     		.2byte	(.L1075-.L1077)/2
 12576 1780 6E02     		.2byte	(.L1075-.L1077)/2
 12577 1782 6E02     		.2byte	(.L1075-.L1077)/2
 12578 1784 6E02     		.2byte	(.L1075-.L1077)/2
 12579 1786 6E02     		.2byte	(.L1075-.L1077)/2
 12580 1788 6E02     		.2byte	(.L1075-.L1077)/2
 12581 178a 6E02     		.2byte	(.L1075-.L1077)/2
 12582 178c 5F02     		.2byte	(.L1080-.L1077)/2
 12583 178e 8601     		.2byte	(.L1079-.L1077)/2
 12584 1790 9001     		.2byte	(.L1078-.L1077)/2
 12585 1792 6E02     		.2byte	(.L1075-.L1077)/2
 12586 1794 6E02     		.2byte	(.L1075-.L1077)/2
 12587 1796 8601     		.2byte	(.L1079-.L1077)/2
 12588 1798 8601     		.2byte	(.L1079-.L1077)/2
 12589 179a 8601     		.2byte	(.L1079-.L1077)/2
 12590 179c 6E02     		.2byte	(.L1075-.L1077)/2
 12591 179e 6E02     		.2byte	(.L1075-.L1077)/2
 12592 17a0 6E02     		.2byte	(.L1075-.L1077)/2
ARM GAS  /tmp/ccgiIQCZ.s 			page 350


 12593 17a2 8601     		.2byte	(.L1079-.L1077)/2
 12594 17a4 8601     		.2byte	(.L1079-.L1077)/2
 12595 17a6 8601     		.2byte	(.L1079-.L1077)/2
 12596 17a8 6E02     		.2byte	(.L1075-.L1077)/2
 12597 17aa 6E02     		.2byte	(.L1075-.L1077)/2
 12598 17ac 6E02     		.2byte	(.L1075-.L1077)/2
 12599 17ae 8601     		.2byte	(.L1079-.L1077)/2
 12600 17b0 8601     		.2byte	(.L1079-.L1077)/2
 12601 17b2 8601     		.2byte	(.L1079-.L1077)/2
 12602 17b4 6E02     		.2byte	(.L1075-.L1077)/2
 12603 17b6 6E02     		.2byte	(.L1075-.L1077)/2
 12604 17b8 6E02     		.2byte	(.L1075-.L1077)/2
 12605 17ba 8601     		.2byte	(.L1079-.L1077)/2
 12606 17bc 8601     		.2byte	(.L1079-.L1077)/2
 12607 17be 6E02     		.2byte	(.L1075-.L1077)/2
 12608 17c0 6E02     		.2byte	(.L1075-.L1077)/2
 12609 17c2 6E02     		.2byte	(.L1075-.L1077)/2
 12610 17c4 6E02     		.2byte	(.L1075-.L1077)/2
 12611 17c6 6E02     		.2byte	(.L1075-.L1077)/2
 12612 17c8 9001     		.2byte	(.L1078-.L1077)/2
 12613 17ca BE01     		.2byte	(.L1076-.L1077)/2
 12614              	.LVL1061:
 12615              		.p2align 1
 12616              	.L1408:
1411:src/keys.c    ****    case (K61):
 12617              		.loc 1 1411 4 is_stmt 0 view .LVU3852
 12618              	.LBE964:
 12619              	.LBE1364:
 12620              	.LBB1365:
 12621              	.LBB1195:
2858:src/keys.c    **** 		State2.numdigit = 1;
 12622              		.loc 1 2858 3 is_stmt 1 view .LVU3853
2859:src/keys.c    **** 		return STATE_UNFINISHED;
 12623              		.loc 1 2859 19 is_stmt 0 view .LVU3854
 12624 17cc 0122     		movs	r2, #1
2858:src/keys.c    **** 		State2.numdigit = 1;
 12625              		.loc 1 2858 17 view .LVU3855
 12626 17ce A8F80840 		strh	r4, [r8, #8]	@ movhi
2859:src/keys.c    **** 		return STATE_UNFINISHED;
 12627              		.loc 1 2859 3 is_stmt 1 view .LVU3856
 12628 17d2 3368     		ldr	r3, [r6]
2859:src/keys.c    **** 		return STATE_UNFINISHED;
 12629              		.loc 1 2859 19 is_stmt 0 view .LVU3857
 12630 17d4 88F80B20 		strb	r2, [r8, #11]
2860:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12631              		.loc 1 2860 3 is_stmt 1 view .LVU3858
2860:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12632              		.loc 1 2860 10 is_stmt 0 view .LVU3859
 12633 17d8 3324     		movs	r4, #51
 12634              	.LVL1062:
2860:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12635              		.loc 1 2860 10 view .LVU3860
 12636 17da FEF76EBC 		b	.L799
 12637              	.L816:
2860:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12638              		.loc 1 2860 10 view .LVU3861
 12639              	.LBE1195:
ARM GAS  /tmp/ccgiIQCZ.s 			page 351


 12640              	.LBE1365:
 12641              	.LBB1366:
 12642              	.LBB1362:
1257:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
 12643              		.loc 1 1257 3 is_stmt 1 view .LVU3862
 12644 17de 6420     		movs	r0, #100
 12645 17e0 FFF7FEFF 		bl	get_reg_n
 12646              	.LVL1063:
 12647 17e4 0446     		mov	r4, r0
1257:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
 12648              		.loc 1 1257 33 is_stmt 0 view .LVU3863
 12649 17e6 6E20     		movs	r0, #110
 12650 17e8 FFF7FEFF 		bl	get_reg_n
 12651              	.LVL1064:
 12652 17ec 0146     		mov	r1, r0
1257:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
 12653              		.loc 1 1257 3 view .LVU3864
 12654 17ee 2046     		mov	r0, r4
 12655 17f0 FFF7FEFF 		bl	copyreg
 12656              	.LVL1065:
1258:src/keys.c    **** 	}
 12657              		.loc 1 1258 3 is_stmt 1 view .LVU3865
 12658 17f4 6520     		movs	r0, #101
 12659 17f6 68E7     		b	.L1337
 12660              	.LVL1066:
 12661              	.L1419:
1258:src/keys.c    **** 	}
 12662              		.loc 1 1258 3 is_stmt 0 view .LVU3866
 12663              	.LBE1362:
 12664              	.LBE1366:
 12665              	.LBB1367:
 12666              	.LBB1084:
3001:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 12667              		.loc 1 3001 3 is_stmt 1 view .LVU3867
3001:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 12668              		.loc 1 3001 8 is_stmt 0 view .LVU3868
 12669 17f8 4FEA8A34 		lsl	r4, r10, #14
 12670              	.LVL1067:
3001:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 12671              		.loc 1 3001 6 view .LVU3869
 12672 17fc 44F00104 		orr	r4, r4, #1
 12673              	.LVL1068:
3002:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 12674              		.loc 1 3002 3 is_stmt 1 view .LVU3870
3002:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 12675              		.loc 1 3002 9 is_stmt 0 view .LVU3871
 12676 1800 2046     		mov	r0, r4
 12677 1802 FFF7FEFF 		bl	is_label_or_end_at
 12678              	.LVL1069:
3002:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 12679              		.loc 1 3002 6 view .LVU3872
 12680 1806 0246     		mov	r2, r0
 12681 1808 0028     		cmp	r0, #0
 12682 180a 00F01483 		beq	.L1428
 12683              	.L951:
3004:src/keys.c    **** 		return STATE_UNFINISHED;
 12684              		.loc 1 3004 3 is_stmt 1 view .LVU3873
ARM GAS  /tmp/ccgiIQCZ.s 			page 352


3004:src/keys.c    **** 		return STATE_UNFINISHED;
 12685              		.loc 1 3004 17 is_stmt 0 view .LVU3874
 12686 180e A8F80840 		strh	r4, [r8, #8]	@ movhi
3005:src/keys.c    **** 	}
 12687              		.loc 1 3005 3 is_stmt 1 view .LVU3875
 12688 1812 3368     		ldr	r3, [r6]
3005:src/keys.c    **** 	}
 12689              		.loc 1 3005 10 is_stmt 0 view .LVU3876
 12690 1814 3324     		movs	r4, #51
 12691              	.LVL1070:
3005:src/keys.c    **** 	}
 12692              		.loc 1 3005 10 view .LVU3877
 12693 1816 FEF750BC 		b	.L799
 12694              	.LVL1071:
 12695              	.L1418:
2994:src/keys.c    **** 	const int direct = State2.runmode;
 12696              		.loc 1 2994 37 view .LVU3878
 12697 181a 5846     		mov	r0, fp
 12698 181c FFF7FEFF 		bl	getprog
 12699              	.LVL1072:
2994:src/keys.c    **** 	const int direct = State2.runmode;
 12700              		.loc 1 2994 63 view .LVU3879
 12701 1820 20F47062 		bic	r2, r0, #3840
 12702 1824 FFF760BB 		b	.L948
 12703              	.LVL1073:
 12704              	.L1422:
2994:src/keys.c    **** 	const int direct = State2.runmode;
 12705              		.loc 1 2994 63 view .LVU3880
 12706              	.LBE1084:
 12707              	.LBE1367:
 12708              	.LBB1368:
 12709              	.LBB1319:
 12710              	.LBB1314:
3133:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12711              		.loc 1 3133 3 is_stmt 1 view .LVU3881
3133:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12712              		.loc 1 3133 19 is_stmt 0 view .LVU3882
 12713 1828 B8F80810 		ldrh	r1, [r8, #8]
3133:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12714              		.loc 1 3133 27 view .LVU3883
 12715 182c 0A23     		movs	r3, #10
3133:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12716              		.loc 1 3133 32 view .LVU3884
 12717 182e 03FB01B2 		mla	r2, r3, r1, fp
3133:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12718              		.loc 1 3133 37 view .LVU3885
 12719 1832 6424     		movs	r4, #100
 12720              	.LVL1074:
3133:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12721              		.loc 1 3133 37 view .LVU3886
 12722 1834 B2FBF4F3 		udiv	r3, r2, r4
 12723 1838 04FB1323 		mls	r3, r4, r3, r2
 12724              	.LVL1075:
3134:src/keys.c    **** 			dv = n;
 12725              		.loc 1 3134 3 is_stmt 1 view .LVU3887
3134:src/keys.c    **** 			dv = n;
 12726              		.loc 1 3134 6 is_stmt 0 view .LVU3888
ARM GAS  /tmp/ccgiIQCZ.s 			page 353


 12727 183c 5345     		cmp	r3, r10
 12728 183e 09DA     		bge	.L981
3134:src/keys.c    **** 			dv = n;
 12729              		.loc 1 3134 21 view .LVU3889
 12730 1840 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3134:src/keys.c    **** 			dv = n;
 12731              		.loc 1 3134 17 view .LVU3890
 12732 1844 D407     		lsls	r4, r2, #31
 12733 1846 3FF5DDAC 		bmi	.L1339
3134:src/keys.c    **** 			dv = n;
 12734              		.loc 1 3134 36 view .LVU3891
 12735 184a 8842     		cmp	r0, r1
 12736 184c 02DD     		ble	.L981
3134:src/keys.c    **** 			dv = n;
 12737              		.loc 1 3134 63 view .LVU3892
 12738 184e 9842     		cmp	r0, r3
 12739 1850 3FF7D8AC 		bgt	.L1339
 12740              	.L981:
3135:src/keys.c    **** 		State2.digval = dv;
 12741              		.loc 1 3135 4 is_stmt 1 view .LVU3893
3135:src/keys.c    **** 		State2.digval = dv;
 12742              		.loc 1 3135 7 is_stmt 0 view .LVU3894
 12743 1854 5B46     		mov	r3, fp
 12744              	.LVL1076:
3136:src/keys.c    **** 		goto reset_window;
 12745              		.loc 1 3136 3 is_stmt 1 view .LVU3895
 12746 1856 D5E4     		b	.L1339
 12747              	.LVL1077:
 12748              	.L919:
3136:src/keys.c    **** 		goto reset_window;
 12749              		.loc 1 3136 3 is_stmt 0 view .LVU3896
 12750 1858 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 12751              	.LBE1314:
 12752              	.LBE1319:
 12753              	.LBE1368:
 12754              	.LBB1369:
 12755              	.LBB867:
 12756              	.LBB857:
 371:src/keys.c    **** #ifndef WINGUI
 12757              		.loc 1 371 8 view .LVU3897
 12758 185c 4B4A     		ldr	r2, .L1456
 377:src/keys.c    ****   }
 12759              		.loc 1 377 9 view .LVU3898
 12760 185e 0C20     		movs	r0, #12
 373:src/keys.c    **** #else
 12761              		.loc 1 373 73 view .LVU3899
 12762 1860 4FF0020E 		mov	lr, #2
 12763 1864 FFF73EB9 		b	.L918
 12764              	.LVL1078:
 12765              	.L1375:
 373:src/keys.c    **** #else
 12766              		.loc 1 373 73 view .LVU3900
 12767              	.LBE857:
 297:src/keys.c    **** 				SET_REAL;
 12768              		.loc 1 297 4 is_stmt 1 view .LVU3901
 297:src/keys.c    **** 				SET_REAL;
 12769              		.loc 1 297 7 is_stmt 0 view .LVU3902
ARM GAS  /tmp/ccgiIQCZ.s 			page 354


 12770 1868 1CF0080F 		tst	ip, #8
 12771 186c 04D1     		bne	.L912
 297:src/keys.c    **** 				SET_REAL;
 12772              		.loc 1 297 21 view .LVU3903
 12773 186e 90F8EB27 		ldrb	r2, [r0, #2027]	@ zero_extendqisi2
 297:src/keys.c    **** 				SET_REAL;
 12774              		.loc 1 297 9 view .LVU3904
 12775 1872 1407     		lsls	r4, r2, #28
 12776              	.LVL1079:
 297:src/keys.c    **** 				SET_REAL;
 12777              		.loc 1 297 9 view .LVU3905
 12778 1874 40F1A380 		bpl	.L1429
 12779              	.L912:
 301:src/keys.c    **** 				CmdLineLength = 0;
 12780              		.loc 1 301 9 is_stmt 1 view .LVU3906
 301:src/keys.c    **** 				CmdLineLength = 0;
 12781              		.loc 1 301 12 is_stmt 0 view .LVU3907
 12782 1878 98F81C30 		ldrb	r3, [r8, #28]	@ zero_extendqisi2
 12783              	.LVL1080:
 301:src/keys.c    **** 				CmdLineLength = 0;
 12784              		.loc 1 301 12 view .LVU3908
 12785 187c 002B     		cmp	r3, #0
 12786 187e 00F09A80 		beq	.L1146
 302:src/keys.c    **** 				CmdLineEex = 0;
 12787              		.loc 1 302 5 is_stmt 1 view .LVU3909
 303:src/keys.c    **** 				CmdLineDot = 0;
 12788              		.loc 1 303 5 view .LVU3910
 304:src/keys.c    **** 			}
 12789              		.loc 1 304 5 view .LVU3911
 302:src/keys.c    **** 				CmdLineEex = 0;
 12790              		.loc 1 302 19 is_stmt 0 view .LVU3912
 12791 1882 0023     		movs	r3, #0
 12792 1884 A8F81C30 		strh	r3, [r8, #28]	@ movhi
 304:src/keys.c    **** 			}
 12793              		.loc 1 304 16 view .LVU3913
 12794 1888 88F81E30 		strb	r3, [r8, #30]
 12795              	.LVL1081:
 304:src/keys.c    **** 			}
 12796              		.loc 1 304 16 view .LVU3914
 12797              	.LBE867:
 12798              	.LBE1369:
3320:src/keys.c    **** 		if (is_bad_cmdline())
 12799              		.loc 1 3320 2 is_stmt 1 view .LVU3915
 12800              	.LBB1370:
 12801              	.LBB868:
 306:src/keys.c    **** 		}
 12802              		.loc 1 306 11 is_stmt 0 view .LVU3916
 12803 188c 4FF0100A 		mov	r10, #16
 12804 1890 FEF72CBF 		b	.L905
 12805              	.LVL1082:
 12806              	.L910:
 287:src/keys.c    **** 					}
 12807              		.loc 1 287 7 is_stmt 1 view .LVU3917
 12808 1894 0120     		movs	r0, #1
 12809 1896 FFF7FEFF 		bl	finish_cpx_entry
 12810              	.LVL1083:
 287:src/keys.c    **** 					}
ARM GAS  /tmp/ccgiIQCZ.s 			page 355


 12811              		.loc 1 287 7 is_stmt 0 view .LVU3918
 12812              	.LBE868:
 12813              	.LBE1370:
3320:src/keys.c    **** 		if (is_bad_cmdline())
 12814              		.loc 1 3320 2 is_stmt 1 view .LVU3919
 12815              	.LBB1371:
 12816              	.LBB869:
 289:src/keys.c    **** 				default:
 12817              		.loc 1 289 13 is_stmt 0 view .LVU3920
 12818 189a 4FF0110A 		mov	r10, #17
 12819 189e FEF725BF 		b	.L905
 12820              	.LVL1084:
 12821              	.L1401:
 289:src/keys.c    **** 				default:
 12822              		.loc 1 289 13 view .LVU3921
 12823              	.LBE869:
 12824              	.LBE1371:
 12825              	.LBB1372:
 12826              	.LBB1143:
1744:src/keys.c    **** 		if (rawpc == 1)
 12827              		.loc 1 1744 3 is_stmt 1 view .LVU3922
1744:src/keys.c    **** 		if (rawpc == 1)
 12828              		.loc 1 1744 11 is_stmt 0 view .LVU3923
 12829 18a2 DFF8F0B0 		ldr	fp, .L1456+8
 12830 18a6 DBF80030 		ldr	r3, [fp]
 12831              	.LVL1085:
1744:src/keys.c    **** 		if (rawpc == 1)
 12832              		.loc 1 1744 9 view .LVU3924
 12833 18aa B3F8E007 		ldrh	r0, [r3, #2016]
 12834              	.LVL1086:
1745:src/keys.c    **** 			rawpc = 0;
 12835              		.loc 1 1745 3 is_stmt 1 view .LVU3925
1746:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
 12836              		.loc 1 1746 10 is_stmt 0 view .LVU3926
 12837 18ae 0128     		cmp	r0, #1
 12838              	.LVL1087:
1747:src/keys.c    **** 		update_program_bounds(1);
 12839              		.loc 1 1747 3 is_stmt 1 view .LVU3927
 12840 18b0 08BF     		it	eq
 12841 18b2 0020     		moveq	r0, #0
 12842              	.LVL1088:
1747:src/keys.c    **** 		update_program_bounds(1);
 12843              		.loc 1 1747 3 is_stmt 0 view .LVU3928
 12844 18b4 0021     		movs	r1, #0
 12845 18b6 FFF7FEFF 		bl	do_dec
 12846              	.LVL1089:
1747:src/keys.c    **** 		update_program_bounds(1);
 12847              		.loc 1 1747 3 view .LVU3929
 12848 18ba FFF7FEFF 		bl	set_pc
 12849              	.LVL1090:
1748:src/keys.c    **** 		rawpc = ProgBegin;
 12850              		.loc 1 1748 3 is_stmt 1 view .LVU3930
 12851 18be 0120     		movs	r0, #1
 12852 18c0 FFF7FEFF 		bl	update_program_bounds
 12853              	.LVL1091:
1749:src/keys.c    **** 		goto fin;
 12854              		.loc 1 1749 3 view .LVU3931
ARM GAS  /tmp/ccgiIQCZ.s 			page 356


1749:src/keys.c    **** 		goto fin;
 12855              		.loc 1 1749 11 is_stmt 0 view .LVU3932
 12856 18c4 DBF80030 		ldr	r3, [fp]
1749:src/keys.c    **** 		goto fin;
 12857              		.loc 1 1749 9 view .LVU3933
 12858 18c8 B3F8EC07 		ldrh	r0, [r3, #2028]
 12859              	.LVL1092:
1750:src/keys.c    **** 	}
 12860              		.loc 1 1750 3 is_stmt 1 view .LVU3934
 12861 18cc FFF793B8 		b	.L846
 12862              	.LVL1093:
 12863              	.L1170:
1750:src/keys.c    **** 	}
 12864              		.loc 1 1750 3 is_stmt 0 view .LVU3935
 12865              	.LBE1143:
 12866              	.LBE1372:
 12867              	.LBB1373:
 12868              	.LBB1253:
1663:src/keys.c    **** 	  }
 12869              		.loc 1 1663 13 view .LVU3936
 12870 18d0 40F2CB14 		movw	r4, #459
 12871              	.LVL1094:
 12872              	.L1048:
1663:src/keys.c    **** 	  }
 12873              		.loc 1 1663 13 view .LVU3937
 12874              	.LBE1253:
 12875              	.LBE1373:
 12876              	.LBE1442:
 12877              	.LBE1516:
3641:src/keys.c    **** 	NonProgrammable = 0;
 12878              		.loc 1 3641 26 view .LVU3938
 12879 18d4 2E4B     		ldr	r3, .L1456+4
 12880 18d6 1A68     		ldr	r2, [r3]
 12881 18d8 7AB3     		cbz	r2, .L1430
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12882              		.loc 1 3642 2 is_stmt 1 view .LVU3939
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12883              		.loc 1 3642 18 is_stmt 0 view .LVU3940
 12884 18da 0022     		movs	r2, #0
3643:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12885              		.loc 1 3643 32 view .LVU3941
 12886 18dc 2546     		mov	r5, r4
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12887              		.loc 1 3642 18 view .LVU3942
 12888 18de 1A60     		str	r2, [r3]
3643:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12889              		.loc 1 3643 2 is_stmt 1 view .LVU3943
 12890 18e0 FEF75DBF 		b	.L1105
 12891              	.LVL1095:
 12892              	.L1424:
 12893              	.LBB1517:
 12894              	.LBB1443:
 12895              	.LBB1374:
 12896              	.LBB1320:
3144:src/keys.c    **** 		goto reset_window;
 12897              		.loc 1 3144 3 view .LVU3944
3144:src/keys.c    **** 		goto reset_window;
ARM GAS  /tmp/ccgiIQCZ.s 			page 357


 12898              		.loc 1 3144 17 is_stmt 0 view .LVU3945
 12899 18e4 A8F808B0 		strh	fp, [r8, #8]	@ movhi
3145:src/keys.c    **** 	}
 12900              		.loc 1 3145 3 is_stmt 1 view .LVU3946
 12901 18e8 8EE4     		b	.L979
 12902              	.LVL1096:
 12903              	.L1010:
3145:src/keys.c    **** 	}
 12904              		.loc 1 3145 3 is_stmt 0 view .LVU3947
 12905              	.LBE1320:
 12906              	.LBE1374:
 12907              	.LBB1375:
 12908              	.LBB1042:
 12909              	.LBB1036:
1823:src/keys.c    **** 	    if ( State2.runmode ) {
 12910              		.loc 1 1823 4 is_stmt 1 view .LVU3948
1823:src/keys.c    **** 	    if ( State2.runmode ) {
 12911              		.loc 1 1823 7 is_stmt 0 view .LVU3949
 12912 18ea BAF1000F 		cmp	r10, #0
 12913 18ee 7EF452AE 		bne	.L1005
1824:src/keys.c    **** 	      // Alpha scroll left
 12914              		.loc 1 1824 6 is_stmt 1 view .LVU3950
1824:src/keys.c    **** 	      // Alpha scroll left
 12915              		.loc 1 1824 9 is_stmt 0 view .LVU3951
 12916 18f2 5106     		lsls	r1, r2, #25
 12917 18f4 7EF5D7AD 		bpl	.L1022
1836:src/keys.c    **** 		alpha_pos += 1;
 12918              		.loc 1 1836 8 is_stmt 1 view .LVU3952
1836:src/keys.c    **** 		alpha_pos += 1;
 12919              		.loc 1 1836 11 is_stmt 0 view .LVU3953
 12920 18f8 002B     		cmp	r3, #0
 12921 18fa 40F0D782 		bne	.L1023
 12922              	.LVL1097:
 12923              	.L1025:
1837:src/keys.c    **** 	      }
 12924              		.loc 1 1837 3 is_stmt 1 view .LVU3954
1837:src/keys.c    **** 	      }
 12925              		.loc 1 1837 13 is_stmt 0 view .LVU3955
 12926 18fe 0133     		adds	r3, r3, #1
 12927 1900 0093     		str	r3, [sp]
 12928              	.LVL1098:
 12929              	.L1024:
1840:src/keys.c    **** #else
 12930              		.loc 1 1840 8 is_stmt 1 view .LVU3956
1840:src/keys.c    **** #else
 12931              		.loc 1 1840 25 is_stmt 0 view .LVU3957
 12932 1902 009B     		ldr	r3, [sp]
 12933 1904 88F80D30 		strb	r3, [r8, #13]
1845:src/keys.c    **** 	    }
 12934              		.loc 1 1845 8 is_stmt 1 view .LVU3958
 12935              	.L1016:
 12936              	.LVL1099:
1845:src/keys.c    **** 	    }
 12937              		.loc 1 1845 8 is_stmt 0 view .LVU3959
 12938              	.LBE1036:
 12939              	.LBE1042:
3348:src/keys.c    **** 			print_tab(0);
ARM GAS  /tmp/ccgiIQCZ.s 			page 358


 12940              		.loc 1 3348 3 is_stmt 1 view .LVU3960
3348:src/keys.c    **** 			print_tab(0);
 12941              		.loc 1 3348 7 is_stmt 0 view .LVU3961
 12942 1908 98F81600 		ldrb	r0, [r8, #22]	@ zero_extendqisi2
3348:src/keys.c    **** 			print_tab(0);
 12943              		.loc 1 3348 6 view .LVU3962
 12944 190c 10F00804 		ands	r4, r0, #8
 12945 1910 7EF4F2AE 		bne	.L1349
3348:src/keys.c    **** 			print_tab(0);
 12946              		.loc 1 3348 26 view .LVU3963
 12947 1914 6720     		movs	r0, #103
 12948 1916 FFF7FEFF 		bl	get_user_flag
 12949              	.LVL1100:
3348:src/keys.c    **** 			print_tab(0);
 12950              		.loc 1 3348 23 view .LVU3964
 12951 191a 0546     		mov	r5, r0
 12952 191c 0028     		cmp	r0, #0
 12953 191e 3EF4EBAE 		beq	.L1349
3349:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
 12954              		.loc 1 3349 4 is_stmt 1 view .LVU3965
 12955 1922 2046     		mov	r0, r4
 12956 1924 FFF7FEFF 		bl	print_tab
 12957              	.LVL1101:
3350:src/keys.c    **** 		}
 12958              		.loc 1 3350 4 view .LVU3966
 12959 1928 C020     		movs	r0, #192
 12960 192a FFF7FEFF 		bl	print_alpha
 12961              	.LVL1102:
3350:src/keys.c    **** 		}
 12962              		.loc 1 3350 4 is_stmt 0 view .LVU3967
 12963              	.LBE1375:
 12964              	.LBE1443:
 12965              	.LBE1517:
3605:src/keys.c    ****     case STATE_SST:
 12966              		.loc 1 3605 5 is_stmt 1 view .LVU3968
 12967              	.LBB1518:
 12968              	.LBB1444:
 12969              	.LBB1376:
3350:src/keys.c    **** 		}
 12970              		.loc 1 3350 4 is_stmt 0 view .LVU3969
 12971 192e 3324     		movs	r4, #51
 12972 1930 FEF765BD 		b	.L1346
 12973              	.LVL1103:
 12974              	.L1171:
3350:src/keys.c    **** 		}
 12975              		.loc 1 3350 4 view .LVU3970
 12976              	.LBE1376:
 12977              	.LBB1377:
 12978              	.LBB1254:
1660:src/keys.c    **** 	  }
 12979              		.loc 1 1660 13 view .LVU3971
 12980 1934 4FF4E574 		mov	r4, #458
 12981 1938 CCE7     		b	.L1048
 12982              	.LVL1104:
 12983              	.L1430:
1660:src/keys.c    **** 	  }
 12984              		.loc 1 1660 13 view .LVU3972
ARM GAS  /tmp/ccgiIQCZ.s 			page 359


 12985 193a 2546     		mov	r5, r4
 12986 193c FEF7D6BD 		b	.L1108
 12987              	.LVL1105:
 12988              	.L990:
1660:src/keys.c    **** 	  }
 12989              		.loc 1 1660 13 view .LVU3973
 12990              	.LBE1254:
 12991              	.LBE1377:
 12992              	.LBB1378:
 12993              	.LBB1321:
3166:src/keys.c    **** 		goto reset_window;
 12994              		.loc 1 3166 4 is_stmt 1 view .LVU3974
3166:src/keys.c    **** 		goto reset_window;
 12995              		.loc 1 3166 18 is_stmt 0 view .LVU3975
 12996 1940 0023     		movs	r3, #0
 12997 1942 A8F80830 		strh	r3, [r8, #8]	@ movhi
 12998 1946 5FE4     		b	.L979
 12999              	.LVL1106:
 13000              	.L870:
3166:src/keys.c    **** 		goto reset_window;
 13001              		.loc 1 3166 18 view .LVU3976
 13002              	.LBE1321:
 13003              	.LBE1378:
 13004              	.LBB1379:
 13005              	.LBB1122:
2367:src/keys.c    **** 		// Special 1
 13006              		.loc 1 2367 7 is_stmt 1 view .LVU3977
2367:src/keys.c    **** 		// Special 1
 13007              		.loc 1 2367 10 is_stmt 0 view .LVU3978
 13008 1948 012B     		cmp	r3, #1
 13009 194a 7FF4C9A9 		bne	.L872
2369:src/keys.c    **** 	}
 13010              		.loc 1 2369 3 is_stmt 1 view .LVU3979
2369:src/keys.c    **** 	}
 13011              		.loc 1 2369 18 is_stmt 0 view .LVU3980
 13012 194e BEF1000F 		cmp	lr, #0
 13013 1952 14BF     		ite	ne
 13014 1954 2724     		movne	r4, #39
 13015              	.LVL1107:
2369:src/keys.c    **** 	}
 13016              		.loc 1 2369 18 view .LVU3981
 13017 1956 1E24     		moveq	r4, #30
2369:src/keys.c    **** 	}
 13018              		.loc 1 2369 47 view .LVU3982
 13019 1958 5444     		add	r4, r4, r10
 13020 195a FEF72BBD 		b	.L834
 13021              	.LVL1108:
 13022              	.L1387:
2369:src/keys.c    **** 	}
 13023              		.loc 1 2369 47 view .LVU3983
 13024 195e 2546     		mov	r5, r4
 13025 1960 FEF7BBBD 		b	.L861
 13026              	.LVL1109:
 13027              	.L1426:
2369:src/keys.c    **** 	}
 13028              		.loc 1 2369 47 view .LVU3984
 13029              	.LBE1122:
ARM GAS  /tmp/ccgiIQCZ.s 			page 360


 13030              	.LBE1379:
 13031              	.LBB1380:
 13032              	.LBB1196:
2843:src/keys.c    **** 		else
 13033              		.loc 1 2843 4 is_stmt 1 view .LVU3985
2843:src/keys.c    **** 		else
 13034              		.loc 1 2843 34 is_stmt 0 view .LVU3986
 13035 1964 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 13036 1968 3368     		ldr	r3, [r6]
 13037 196a C2F30011 		ubfx	r1, r2, #4, #1
 13038              	.LVL1110:
2843:src/keys.c    **** 		else
 13039              		.loc 1 2843 26 view .LVU3987
 13040 196e C1F10101 		rsb	r1, r1, #1
2843:src/keys.c    **** 		else
 13041              		.loc 1 2843 22 view .LVU3988
 13042 1972 61F30412 		bfi	r2, r1, #4, #1
 13043 1976 88F81620 		strb	r2, [r8, #22]
2846:src/keys.c    **** 
 13044              		.loc 1 2846 10 view .LVU3989
 13045 197a 3324     		movs	r4, #51
 13046              	.LVL1111:
2846:src/keys.c    **** 
 13047              		.loc 1 2846 10 view .LVU3990
 13048 197c FEF79DBB 		b	.L799
 13049              	.LVL1112:
 13050              	.L1407:
 13051              	.LBB1192:
 13052              	.LBB1179:
 488:src/keys.c    **** 			shift = SHIFT_LC_G;
 13053              		.loc 1 488 8 is_stmt 1 view .LVU3991
 489:src/keys.c    **** 	}
 13054              		.loc 1 489 10 is_stmt 0 view .LVU3992
 13055 1980 0229     		cmp	r1, #2
 13056 1982 08BF     		it	eq
 13057 1984 0521     		moveq	r1, #5
 13058              	.LVL1113:
 489:src/keys.c    **** 	}
 13059              		.loc 1 489 10 view .LVU3993
 13060 1986 FFF702B9 		b	.L939
 13061              	.L1457:
 13062 198a 00BF     		.align	2
 13063              	.L1456:
 13064 198c 00000000 		.word	.LANCHOR17
 13065 1990 00000000 		.word	NonProgrammable
 13066 1994 00000000 		.word	main_ram
 13067              	.LVL1114:
 13068              	.L1011:
 489:src/keys.c    **** 	}
 13069              		.loc 1 489 10 view .LVU3994
 13070              	.LBE1179:
 13071              	.LBE1192:
 13072              	.LBE1196:
 13073              	.LBE1380:
 13074              	.LBB1381:
 13075              	.LBB1043:
 13076              	.LBB1037:
ARM GAS  /tmp/ccgiIQCZ.s 			page 361


1816:src/keys.c    **** 			return STATE_BACKSPACE;
 13077              		.loc 1 1816 3 is_stmt 1 view .LVU3995
1816:src/keys.c    **** 			return STATE_BACKSPACE;
 13078              		.loc 1 1816 6 is_stmt 0 view .LVU3996
 13079 1998 BAF1000F 		cmp	r10, #0
 13080 199c 3EF4D8AE 		beq	.L1019
 13081              	.LVL1115:
 13082              	.L1020:
1818:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 13083              		.loc 1 1818 3 is_stmt 1 view .LVU3997
1818:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 13084              		.loc 1 1818 6 is_stmt 0 view .LVU3998
 13085 19a0 BAF1030F 		cmp	r10, #3
 13086 19a4 7EF4F7AD 		bne	.L1005
1819:src/keys.c    **** 		break;
 13087              		.loc 1 1819 11 view .LVU3999
 13088 19a8 4FF4BA74 		mov	r4, #372
 13089 19ac FEF7F8BD 		b	.L1021
 13090              	.LVL1116:
 13091              	.L1385:
1819:src/keys.c    **** 		break;
 13092              		.loc 1 1819 11 view .LVU4000
 13093              	.LBE1037:
 13094              	.LBE1043:
 13095              	.LBE1381:
 13096              	.LBE1444:
 13097              	.LBE1518:
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13098              		.loc 1 3642 2 is_stmt 1 view .LVU4001
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13099              		.loc 1 3642 18 is_stmt 0 view .LVU4002
 13100 19b0 1A60     		str	r2, [r3]
3643:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13101              		.loc 1 3643 2 is_stmt 1 view .LVU4003
 13102 19b2 FEF7F4BE 		b	.L1105
 13103              	.LVL1117:
 13104              	.L1146:
 13105              	.LBB1519:
 13106              	.LBB1445:
 13107              	.LBB1382:
 13108              	.LBB870:
 306:src/keys.c    **** 		}
 13109              		.loc 1 306 11 is_stmt 0 view .LVU4004
 13110 19b6 4FF0100A 		mov	r10, #16
 13111 19ba FEF797BE 		b	.L905
 13112              	.LVL1118:
 13113              	.L1429:
 298:src/keys.c    **** 				stack_begin (1);
 13114              		.loc 1 298 5 is_stmt 1 view .LVU4005
 13115 19be 4CF0080C 		orr	ip, ip, #8
 13116 19c2 80F8E4C7 		strb	ip, [r0, #2020]
 299:src/keys.c    **** 			}
 13117              		.loc 1 299 5 view .LVU4006
 13118 19c6 1846     		mov	r0, r3
 13119 19c8 FFF7FEFF 		bl	stack_begin
 13120              	.LVL1119:
 299:src/keys.c    **** 			}
ARM GAS  /tmp/ccgiIQCZ.s 			page 362


 13121              		.loc 1 299 5 is_stmt 0 view .LVU4007
 13122              	.LBE870:
 13123              	.LBE1382:
3320:src/keys.c    **** 		if (is_bad_cmdline())
 13124              		.loc 1 3320 2 is_stmt 1 view .LVU4008
 13125              	.LBB1383:
 13126              	.LBB871:
 306:src/keys.c    **** 		}
 13127              		.loc 1 306 11 is_stmt 0 view .LVU4009
 13128 19cc 4FF0100A 		mov	r10, #16
 13129 19d0 FEF78CBE 		b	.L905
 13130              	.LVL1120:
 13131              	.L1012:
 306:src/keys.c    **** 		}
 13132              		.loc 1 306 11 view .LVU4010
 13133              	.LBE871:
 13134              	.LBE1383:
 13135              	.LBB1384:
 13136              	.LBB1044:
 13137              	.LBB1038:
1799:src/keys.c    **** 			break;
 13138              		.loc 1 1799 3 is_stmt 1 view .LVU4011
1799:src/keys.c    **** 			break;
 13139              		.loc 1 1799 24 is_stmt 0 view .LVU4012
 13140 19d4 AAF10203 		sub	r3, r10, #2
 13141              	.LVL1121:
1799:src/keys.c    **** 			break;
 13142              		.loc 1 1799 6 view .LVU4013
 13143 19d8 DBB2     		uxtb	r3, r3
 13144 19da 012B     		cmp	r3, #1
 13145 19dc 7EF6DBAD 		bls	.L1005
1801:src/keys.c    **** 			State2.multi = 1;
 13146              		.loc 1 1801 3 is_stmt 1 view .LVU4014
1801:src/keys.c    **** 			State2.multi = 1;
 13147              		.loc 1 1801 6 is_stmt 0 view .LVU4015
 13148 19e0 BAF1010F 		cmp	r10, #1
 13149 19e4 02D1     		bne	.L1018
1801:src/keys.c    **** 			State2.multi = 1;
 13150              		.loc 1 1801 24 view .LVU4016
 13151 19e6 12F04002 		ands	r2, r2, #64
 13152 19ea 0CD0     		beq	.L1431
 13153              	.L1018:
1807:src/keys.c    **** 		State2.alphashift = 0;
 13154              		.loc 1 1807 3 is_stmt 1 view .LVU4017
1808:src/keys.c    **** #ifdef DM42
 13155              		.loc 1 1808 3 view .LVU4018
1807:src/keys.c    **** 		State2.alphashift = 0;
 13156              		.loc 1 1807 17 is_stmt 0 view .LVU4019
 13157 19ec 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
1810:src/keys.c    **** 		display_current_menu();
 13158              		.loc 1 1810 3 view .LVU4020
 13159 19f0 4FF0FF30 		mov	r0, #-1
 13160              	.LVL1122:
1807:src/keys.c    **** 		State2.alphashift = 0;
 13161              		.loc 1 1807 17 view .LVU4021
 13162 19f4 23F01803 		bic	r3, r3, #24
 13163 19f8 88F81630 		strb	r3, [r8, #22]
ARM GAS  /tmp/ccgiIQCZ.s 			page 363


1810:src/keys.c    **** 		display_current_menu();
 13164              		.loc 1 1810 3 is_stmt 1 view .LVU4022
 13165 19fc FFF7FEFF 		bl	set_menu
 13166              	.LVL1123:
1811:src/keys.c    **** #endif
 13167              		.loc 1 1811 3 view .LVU4023
 13168 1a00 FFF7FEFF 		bl	display_current_menu
 13169              	.LVL1124:
1813:src/keys.c    **** 
 13170              		.loc 1 1813 3 view .LVU4024
1813:src/keys.c    **** 
 13171              		.loc 1 1813 10 is_stmt 0 view .LVU4025
 13172 1a04 80E7     		b	.L1016
 13173              	.LVL1125:
 13174              	.L1431:
1802:src/keys.c    **** 			State2.numdigit = 0;
 13175              		.loc 1 1802 4 is_stmt 1 view .LVU4026
1802:src/keys.c    **** 			State2.numdigit = 0;
 13176              		.loc 1 1802 17 is_stmt 0 view .LVU4027
 13177 1a06 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
1803:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 13178              		.loc 1 1803 20 view .LVU4028
 13179 1a0a 88F80B20 		strb	r2, [r8, #11]
1802:src/keys.c    **** 			State2.numdigit = 0;
 13180              		.loc 1 1802 17 view .LVU4029
 13181 1a0e 43F00803 		orr	r3, r3, #8
1804:src/keys.c    **** 			return STATE_UNFINISHED;
 13182              		.loc 1 1804 12 view .LVU4030
 13183 1a12 0A22     		movs	r2, #10
1802:src/keys.c    **** 			State2.numdigit = 0;
 13184              		.loc 1 1802 17 view .LVU4031
 13185 1a14 88F81530 		strb	r3, [r8, #21]
1803:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 13186              		.loc 1 1803 4 is_stmt 1 view .LVU4032
1804:src/keys.c    **** 			return STATE_UNFINISHED;
 13187              		.loc 1 1804 4 view .LVU4033
1804:src/keys.c    **** 			return STATE_UNFINISHED;
 13188              		.loc 1 1804 12 is_stmt 0 view .LVU4034
 13189 1a18 88F81F20 		strb	r2, [r8, #31]
1805:src/keys.c    **** 		}
 13190              		.loc 1 1805 4 is_stmt 1 view .LVU4035
1805:src/keys.c    **** 		}
 13191              		.loc 1 1805 11 is_stmt 0 view .LVU4036
 13192 1a1c 74E7     		b	.L1016
 13193              	.LVL1126:
 13194              	.L1013:
1789:src/keys.c    **** 			init_arg(RARG_ARCL);
 13195              		.loc 1 1789 3 is_stmt 1 view .LVU4037
1789:src/keys.c    **** 			init_arg(RARG_ARCL);
 13196              		.loc 1 1789 6 is_stmt 0 view .LVU4038
 13197 1a1e BAF1010F 		cmp	r10, #1
 13198 1a22 19D0     		beq	.L1432
1792:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 13199              		.loc 1 1792 10 is_stmt 1 view .LVU4039
1792:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 13200              		.loc 1 1792 13 is_stmt 0 view .LVU4040
 13201 1a24 BAF1030F 		cmp	r10, #3
ARM GAS  /tmp/ccgiIQCZ.s 			page 364


 13202 1a28 7EF4B5AD 		bne	.L1005
1793:src/keys.c    **** 			return STATE_UNFINISHED;
 13203              		.loc 1 1793 4 is_stmt 1 view .LVU4041
 13204              	.LVL1127:
 13205              	.LBB1028:
 13206              	.LBI1028:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 13207              		.loc 1 552 13 view .LVU4042
 13208              	.LBB1029:
 553:src/keys.c    **** 		return;
 13209              		.loc 1 553 2 view .LVU4043
 553:src/keys.c    **** 		return;
 13210              		.loc 1 553 6 is_stmt 0 view .LVU4044
 13211 1a2c FFF7FEFF 		bl	is_bad_cmdline
 13212              	.LVL1128:
 553:src/keys.c    **** 		return;
 13213              		.loc 1 553 5 view .LVU4045
 13214 1a30 0028     		cmp	r0, #0
 13215 1a32 7FF469AF 		bne	.L1016
 13216 1a36 7320     		movs	r0, #115
 13217 1a38 FFF7FEFF 		bl	init_arg.part.0
 13218              	.LVL1129:
 13219 1a3c 64E7     		b	.L1016
 13220              	.LVL1130:
 13221              	.L1014:
 553:src/keys.c    **** 		return;
 13222              		.loc 1 553 5 view .LVU4046
 13223              	.LBE1029:
 13224              	.LBE1028:
1782:src/keys.c    **** 			init_arg(RARG_ASTO);
 13225              		.loc 1 1782 3 is_stmt 1 view .LVU4047
1782:src/keys.c    **** 			init_arg(RARG_ASTO);
 13226              		.loc 1 1782 6 is_stmt 0 view .LVU4048
 13227 1a3e BAF1010F 		cmp	r10, #1
 13228 1a42 7EF4A8AD 		bne	.L1005
1783:src/keys.c    **** 			return STATE_UNFINISHED;
 13229              		.loc 1 1783 4 is_stmt 1 view .LVU4049
 13230              	.LVL1131:
 13231              	.LBB1030:
 13232              	.LBI1030:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 13233              		.loc 1 552 13 view .LVU4050
 13234              	.LBB1031:
 553:src/keys.c    **** 		return;
 13235              		.loc 1 553 2 view .LVU4051
 553:src/keys.c    **** 		return;
 13236              		.loc 1 553 6 is_stmt 0 view .LVU4052
 13237 1a46 FFF7FEFF 		bl	is_bad_cmdline
 13238              	.LVL1132:
 553:src/keys.c    **** 		return;
 13239              		.loc 1 553 5 view .LVU4053
 13240 1a4a 0028     		cmp	r0, #0
 13241 1a4c 7FF45CAF 		bne	.L1016
 13242 1a50 2620     		movs	r0, #38
 13243 1a52 FFF7FEFF 		bl	init_arg.part.0
 13244              	.LVL1133:
 13245 1a56 57E7     		b	.L1016
ARM GAS  /tmp/ccgiIQCZ.s 			page 365


 13246              	.LVL1134:
 13247              	.L1432:
 553:src/keys.c    **** 		return;
 13248              		.loc 1 553 5 view .LVU4054
 13249              	.LBE1031:
 13250              	.LBE1030:
1790:src/keys.c    **** 			return STATE_UNFINISHED;
 13251              		.loc 1 1790 4 is_stmt 1 view .LVU4055
 13252              	.LBB1032:
 13253              	.LBI1032:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 13254              		.loc 1 552 13 view .LVU4056
 13255              	.LBB1033:
 553:src/keys.c    **** 		return;
 13256              		.loc 1 553 2 view .LVU4057
 553:src/keys.c    **** 		return;
 13257              		.loc 1 553 6 is_stmt 0 view .LVU4058
 13258 1a58 FFF7FEFF 		bl	is_bad_cmdline
 13259              	.LVL1135:
 553:src/keys.c    **** 		return;
 13260              		.loc 1 553 5 view .LVU4059
 13261 1a5c 0028     		cmp	r0, #0
 13262 1a5e 7FF453AF 		bne	.L1016
 13263 1a62 2720     		movs	r0, #39
 13264 1a64 FFF7FEFF 		bl	init_arg.part.0
 13265              	.LVL1136:
 13266 1a68 4EE7     		b	.L1016
 13267              	.LVL1137:
 13268              	.L1043:
 553:src/keys.c    **** 		return;
 13269              		.loc 1 553 5 view .LVU4060
 13270              	.LBE1033:
 13271              	.LBE1032:
 13272              	.LBE1038:
 13273              	.LBE1044:
 13274              	.LBE1384:
 13275              	.LBB1385:
 13276              	.LBB965:
1305:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
 13277              		.loc 1 1305 4 is_stmt 1 view .LVU4061
1305:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
 13278              		.loc 1 1305 7 is_stmt 0 view .LVU4062
 13279 1a6a 0F2C     		cmp	r4, #15
 13280 1a6c 7FF47AAE 		bne	.L1044
1306:src/keys.c    ****        reset_shift();
 13281              		.loc 1 1306 6 is_stmt 1 view .LVU4063
1306:src/keys.c    ****        reset_shift();
 13282              		.loc 1 1306 9 is_stmt 0 view .LVU4064
 13283 1a70 BAF1010F 		cmp	r10, #1
 13284 1a74 26D0     		beq	.L1433
 13285              	.LBB886:
1322:src/keys.c    **** #endif
 13286              		.loc 1 1322 8 is_stmt 1 view .LVU4065
 13287              	.LVL1138:
1324:src/keys.c    **** 	 finish_cpx_entry(1);
 13288              		.loc 1 1324 8 view .LVU4066
1324:src/keys.c    **** 	 finish_cpx_entry(1);
ARM GAS  /tmp/ccgiIQCZ.s 			page 366


 13289              		.loc 1 1324 11 is_stmt 0 view .LVU4067
 13290 1a76 BAF1030F 		cmp	r10, #3
 13291 1a7a 1AD0     		beq	.L1434
 13292              	.LBE886:
1331:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
 13293              		.loc 1 1331 4 is_stmt 1 view .LVU4068
1331:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
 13294              		.loc 1 1331 7 is_stmt 0 view .LVU4069
 13295 1a7c BAF1000F 		cmp	r10, #0
 13296 1a80 7FF45EAD 		bne	.L1128
 13297              	.LVL1139:
 13298              	.L1079:
1424:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 13299              		.loc 1 1424 6 is_stmt 1 view .LVU4070
1424:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 13300              		.loc 1 1424 11 is_stmt 0 view .LVU4071
 13301 1a84 DBF80020 		ldr	r2, [fp]
1424:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 13302              		.loc 1 1424 10 view .LVU4072
 13303 1a88 92F8E437 		ldrb	r3, [r2, #2020]	@ zero_extendqisi2
1424:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 13304              		.loc 1 1424 9 view .LVU4073
 13305 1a8c 1807     		lsls	r0, r3, #28
 13306 1a8e 03D4     		bmi	.L1078
1424:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 13307              		.loc 1 1424 24 view .LVU4074
 13308 1a90 92F8EB17 		ldrb	r1, [r2, #2027]	@ zero_extendqisi2
1424:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 13309              		.loc 1 1424 21 view .LVU4075
 13310 1a94 0907     		lsls	r1, r1, #28
 13311 1a96 02D5     		bpl	.L1435
 13312              	.L1078:
1440:src/keys.c    ****    case (K_CMPLX):
 13313              		.loc 1 1440 6 is_stmt 1 view .LVU4076
1440:src/keys.c    ****    case (K_CMPLX):
 13314              		.loc 1 1440 13 is_stmt 0 view .LVU4077
 13315 1a98 2046     		mov	r0, r4
 13316 1a9a FEF704BC 		b	.L1343
 13317              	.L1435:
1425:src/keys.c    ****        stack_begin (1);
 13318              		.loc 1 1425 8 is_stmt 1 view .LVU4078
 13319 1a9e 43F00803 		orr	r3, r3, #8
1426:src/keys.c    ****      }
 13320              		.loc 1 1426 8 is_stmt 0 view .LVU4079
 13321 1aa2 0120     		movs	r0, #1
1425:src/keys.c    ****        stack_begin (1);
 13322              		.loc 1 1425 8 view .LVU4080
 13323 1aa4 82F8E437 		strb	r3, [r2, #2020]
1426:src/keys.c    ****      }
 13324              		.loc 1 1426 8 is_stmt 1 view .LVU4081
 13325 1aa8 FFF7FEFF 		bl	stack_begin
 13326              	.LVL1140:
1428:src/keys.c    ****    case (K22): // CHS
 13327              		.loc 1 1428 6 view .LVU4082
1440:src/keys.c    ****    case (K_CMPLX):
 13328              		.loc 1 1440 6 view .LVU4083
1440:src/keys.c    ****    case (K_CMPLX):
ARM GAS  /tmp/ccgiIQCZ.s 			page 367


 13329              		.loc 1 1440 13 is_stmt 0 view .LVU4084
 13330 1aac 2046     		mov	r0, r4
 13331 1aae FEF7FABB 		b	.L1343
 13332              	.LVL1141:
 13333              	.L1434:
 13334              	.LBB887:
1325:src/keys.c    **** 	 return process_cmplx(c);
 13335              		.loc 1 1325 3 is_stmt 1 view .LVU4085
 13336 1ab2 0120     		movs	r0, #1
 13337 1ab4 FFF7FEFF 		bl	finish_cpx_entry
 13338              	.LVL1142:
1326:src/keys.c    ****        }
 13339              		.loc 1 1326 3 view .LVU4086
1326:src/keys.c    ****        }
 13340              		.loc 1 1326 10 is_stmt 0 view .LVU4087
 13341 1ab8 2046     		mov	r0, r4
 13342 1aba FFF7FEFF 		bl	process_cmplx
 13343              	.LVL1143:
 13344 1abe 0446     		mov	r4, r0
 13345              	.LVL1144:
1326:src/keys.c    ****        }
 13346              		.loc 1 1326 10 view .LVU4088
 13347 1ac0 FEF778BC 		b	.L834
 13348              	.LVL1145:
 13349              	.L1433:
1326:src/keys.c    ****        }
 13350              		.loc 1 1326 10 view .LVU4089
 13351              	.LBE887:
1307:src/keys.c    ****        if ( CmdLineLength ) {
 13352              		.loc 1 1307 8 is_stmt 1 view .LVU4090
 13353              	.LBB888:
 13354              	.LBI888:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13355              		.loc 1 114 13 view .LVU4091
 13356              	.LBE888:
 13357              	.LBE965:
 13358              	.LBE1385:
 13359              	.LBE1445:
 13360              	.LBE1519:
 115:src/keys.c    **** }
 13361              		.loc 1 115 2 view .LVU4092
 13362              	.LBB1520:
 13363              	.LBB1446:
 13364              	.LBB1386:
 13365              	.LBB966:
 13366              	.LBB895:
 13367              	.LBB889:
 13368              	.LBI889:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13369              		.loc 1 104 20 view .LVU4093
 13370              	.LBB890:
 105:src/keys.c    **** 	State2.shifts = shift;
 13371              		.loc 1 105 2 view .LVU4094
 13372              	.LBB891:
 13373              	.LBI891:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13374              		.loc 1 96 13 view .LVU4095
ARM GAS  /tmp/ccgiIQCZ.s 			page 368


 13375              	.LBB892:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13376              		.loc 1 97 2 view .LVU4096
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13377              		.loc 1 97 18 is_stmt 0 view .LVU4097
 13378 1ac4 FFF7FEFF 		bl	shift_down
 13379              	.LVL1146:
  98:src/keys.c    **** }
 13380              		.loc 1 98 2 is_stmt 1 view .LVU4098
 13381              	.LBE892:
 13382              	.LBE891:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13383              		.loc 1 106 2 view .LVU4099
 13384              	.LBE890:
 13385              	.LBE889:
 13386              	.LBE895:
1308:src/keys.c    **** 	 State2.state_lift = 0;
 13387              		.loc 1 1308 11 is_stmt 0 view .LVU4100
 13388 1ac8 98F81C20 		ldrb	r2, [r8, #28]	@ zero_extendqisi2
 13389              	.LBB896:
 13390              	.LBB894:
 13391              	.LBB893:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13392              		.loc 1 106 16 view .LVU4101
 13393 1acc 0023     		movs	r3, #0
 13394 1ace 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13395              		.loc 1 108 2 is_stmt 1 view .LVU4102
 13396              	.LVL1147:
 108:src/keys.c    **** }
 13397              		.loc 1 108 2 is_stmt 0 view .LVU4103
 13398              	.LBE893:
 13399              	.LBE894:
 13400              	.LBE896:
1308:src/keys.c    **** 	 State2.state_lift = 0;
 13401              		.loc 1 1308 8 is_stmt 1 view .LVU4104
1308:src/keys.c    **** 	 State2.state_lift = 0;
 13402              		.loc 1 1308 11 is_stmt 0 view .LVU4105
 13403 1ad2 002A     		cmp	r2, #0
 13404 1ad4 00F09980 		beq	.L1046
1309:src/keys.c    **** 	 return OP_NIL | OP_PIB;
 13405              		.loc 1 1309 3 is_stmt 1 view .LVU4106
1309:src/keys.c    **** 	 return OP_NIL | OP_PIB;
 13406              		.loc 1 1309 21 is_stmt 0 view .LVU4107
 13407 1ad8 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
 13408              	.LBE966:
 13409              	.LBE1386:
 13410              	.LBE1446:
 13411              	.LBE1520:
3641:src/keys.c    **** 	NonProgrammable = 0;
 13412              		.loc 1 3641 11 view .LVU4108
 13413 1adc 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
 13414              	.LBB1521:
 13415              	.LBB1447:
 13416              	.LBB1387:
 13417              	.LBB967:
1309:src/keys.c    **** 	 return OP_NIL | OP_PIB;
ARM GAS  /tmp/ccgiIQCZ.s 			page 369


 13418              		.loc 1 1309 21 view .LVU4109
 13419 1ae0 63F38612 		bfi	r2, r3, #6, #1
 13420 1ae4 88F81720 		strb	r2, [r8, #23]
1310:src/keys.c    ****        }
 13421              		.loc 1 1310 3 is_stmt 1 view .LVU4110
 13422              	.LVL1148:
1310:src/keys.c    ****        }
 13423              		.loc 1 1310 3 is_stmt 0 view .LVU4111
 13424              	.LBE967:
 13425              	.LBE1387:
 13426              	.LBE1447:
 13427              	.LBE1521:
3641:src/keys.c    **** 	NonProgrammable = 0;
 13428              		.loc 1 3641 7 is_stmt 1 view .LVU4112
3641:src/keys.c    **** 	NonProgrammable = 0;
 13429              		.loc 1 3641 10 is_stmt 0 view .LVU4113
 13430 1ae8 4A06     		lsls	r2, r1, #25
 13431 1aea 00F18880 		bmi	.L1047
 13432              	.LBB1522:
 13433              	.LBB1448:
 13434              	.LBB1388:
 13435              	.LBB968:
1310:src/keys.c    ****        }
 13436              		.loc 1 1310 10 view .LVU4114
 13437 1aee 40F2D114 		movw	r4, #465
 13438 1af2 EFE6     		b	.L1048
 13439              	.LVL1149:
 13440              	.L1076:
1442:src/keys.c    ****        CLEAR_REAL;
 13441              		.loc 1 1442 6 is_stmt 1 view .LVU4115
1442:src/keys.c    ****        CLEAR_REAL;
 13442              		.loc 1 1442 10 is_stmt 0 view .LVU4116
 13443 1af4 DBF80030 		ldr	r3, [fp]
 13444 1af8 93F8E427 		ldrb	r2, [r3, #2020]	@ zero_extendqisi2
1442:src/keys.c    ****        CLEAR_REAL;
 13445              		.loc 1 1442 9 view .LVU4117
 13446 1afc 1007     		lsls	r0, r2, #28
 13447 1afe 5CD4     		bmi	.L1436
1449:src/keys.c    ****        finish_cpx_entry (1);
 13448              		.loc 1 1449 11 is_stmt 1 view .LVU4118
1449:src/keys.c    ****        finish_cpx_entry (1);
 13449              		.loc 1 1449 15 is_stmt 0 view .LVU4119
 13450 1b00 93F8EB27 		ldrb	r2, [r3, #2027]	@ zero_extendqisi2
1449:src/keys.c    ****        finish_cpx_entry (1);
 13451              		.loc 1 1449 14 view .LVU4120
 13452 1b04 1107     		lsls	r1, r2, #28
 13453 1b06 4DD5     		bpl	.L1085
1450:src/keys.c    ****      }
 13454              		.loc 1 1450 8 is_stmt 1 view .LVU4121
 13455 1b08 0120     		movs	r0, #1
 13456 1b0a FFF7FEFF 		bl	finish_cpx_entry
 13457              	.LVL1150:
1456:src/keys.c    ****    default:;
 13458              		.loc 1 1456 13 is_stmt 0 view .LVU4122
 13459 1b0e 3324     		movs	r4, #51
 13460              	.LVL1151:
1456:src/keys.c    ****    default:;
ARM GAS  /tmp/ccgiIQCZ.s 			page 370


 13461              		.loc 1 1456 13 view .LVU4123
 13462 1b10 3368     		ldr	r3, [r6]
 13463 1b12 FEF7D2BA 		b	.L799
 13464              	.LVL1152:
 13465              	.L1041:
1301:src/keys.c    ****      return process_fg_shifted (c);
 13466              		.loc 1 1301 4 is_stmt 1 view .LVU4124
1301:src/keys.c    ****      return process_fg_shifted (c);
 13467              		.loc 1 1301 7 is_stmt 0 view .LVU4125
 13468 1b16 631F     		subs	r3, r4, #5
 13469 1b18 032B     		cmp	r3, #3
 13470 1b1a 7FF687AD 		bls	.L1340
1305:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
 13471              		.loc 1 1305 4 is_stmt 1 view .LVU4126
1305:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
 13472              		.loc 1 1305 7 is_stmt 0 view .LVU4127
 13473 1b1e 0F2C     		cmp	r4, #15
 13474 1b20 3FF40EAD 		beq	.L1128
 13475              	.L1335:
1332:src/keys.c    ****      switch (c) {
 13476              		.loc 1 1332 6 is_stmt 1 view .LVU4128
 13477 1b24 0020     		movs	r0, #0
 13478 1b26 FFF7FEFF 		bl	finish_cpx_entry
 13479              	.LVL1153:
1333:src/keys.c    ****      case (K60):
 13480              		.loc 1 1333 6 view .LVU4129
 13481 1b2a A4F10D03 		sub	r3, r4, #13
 13482 1b2e 192B     		cmp	r3, #25
 13483 1b30 3FF609AD 		bhi	.L1342
 13484 1b34 01A2     		adr	r2, .L1053
 13485 1b36 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 13486 1b3a 00BF     		.p2align 2
 13487              	.L1053:
 13488 1b3c A11C0000 		.word	.L1060+1
 13489 1b40 73070000 		.word	.L1059+1
 13490 1b44 47150000 		.word	.L1342+1
 13491 1b48 7D1D0000 		.word	.L1058+1
 13492 1b4c 47150000 		.word	.L1342+1
 13493 1b50 47150000 		.word	.L1342+1
 13494 1b54 47150000 		.word	.L1342+1
 13495 1b58 47150000 		.word	.L1342+1
 13496 1b5c 47150000 		.word	.L1342+1
 13497 1b60 EF1C0000 		.word	.L1057+1
 13498 1b64 47150000 		.word	.L1342+1
 13499 1b68 311D0000 		.word	.L1056+1
 13500 1b6c 47150000 		.word	.L1342+1
 13501 1b70 47150000 		.word	.L1342+1
 13502 1b74 47150000 		.word	.L1342+1
 13503 1b78 1F1D0000 		.word	.L1055+1
 13504 1b7c 47150000 		.word	.L1342+1
 13505 1b80 47150000 		.word	.L1342+1
 13506 1b84 47150000 		.word	.L1342+1
 13507 1b88 47150000 		.word	.L1342+1
 13508 1b8c 47150000 		.word	.L1342+1
 13509 1b90 47150000 		.word	.L1342+1
 13510 1b94 47150000 		.word	.L1342+1
 13511 1b98 911C0000 		.word	.L1054+1
ARM GAS  /tmp/ccgiIQCZ.s 			page 371


 13512 1b9c 47150000 		.word	.L1342+1
 13513 1ba0 671C0000 		.word	.L1052+1
 13514              		.p2align 1
 13515              	.L1085:
1453:src/keys.c    ****        stack_begin (1);
 13516              		.loc 1 1453 8 view .LVU4130
 13517 1ba4 42F00802 		orr	r2, r2, #8
 13518 1ba8 83F8EB27 		strb	r2, [r3, #2027]
1454:src/keys.c    ****      }
 13519              		.loc 1 1454 8 view .LVU4131
 13520 1bac 0120     		movs	r0, #1
 13521 1bae FFF7FEFF 		bl	stack_begin
 13522              	.LVL1154:
1456:src/keys.c    ****    default:;
 13523              		.loc 1 1456 13 is_stmt 0 view .LVU4132
 13524 1bb2 3324     		movs	r4, #51
 13525              	.LVL1155:
1456:src/keys.c    ****    default:;
 13526              		.loc 1 1456 13 view .LVU4133
 13527 1bb4 3368     		ldr	r3, [r6]
 13528 1bb6 FEF780BA 		b	.L799
 13529              	.LVL1156:
 13530              	.L1436:
1443:src/keys.c    ****        SET_IMAG;
 13531              		.loc 1 1443 8 is_stmt 1 view .LVU4134
1444:src/keys.c    ****        do_command_line();
 13532              		.loc 1 1444 8 is_stmt 0 view .LVU4135
 13533 1bba 93F8EB17 		ldrb	r1, [r3, #2027]	@ zero_extendqisi2
 13534 1bbe 41F00801 		orr	r1, r1, #8
 13535 1bc2 83F8EB17 		strb	r1, [r3, #2027]
 13536              	.LBB897:
 13537              	.LBB898:
1202:src/keys.c    **** 		State2.state_lift = 0;
 13538              		.loc 1 1202 5 view .LVU4136
 13539 1bc6 98F81C10 		ldrb	r1, [r8, #28]	@ zero_extendqisi2
 13540              	.LBE898:
 13541              	.LBE897:
1443:src/keys.c    ****        SET_IMAG;
 13542              		.loc 1 1443 8 view .LVU4137
 13543 1bca 6FF3C302 		bfc	r2, #3, #1
 13544 1bce 83F8E427 		strb	r2, [r3, #2020]
1444:src/keys.c    ****        do_command_line();
 13545              		.loc 1 1444 8 is_stmt 1 view .LVU4138
1445:src/keys.c    ****        State2.state_lift = 0;
 13546              		.loc 1 1445 8 view .LVU4139
 13547              	.LBB901:
 13548              	.LBI897:
1201:src/keys.c    **** 	if (CmdLineLength) {
 13549              		.loc 1 1201 13 view .LVU4140
 13550              	.LBB899:
1202:src/keys.c    **** 		State2.state_lift = 0;
 13551              		.loc 1 1202 2 view .LVU4141
1202:src/keys.c    **** 		State2.state_lift = 0;
 13552              		.loc 1 1202 5 is_stmt 0 view .LVU4142
 13553 1bd2 21BB     		cbnz	r1, .L1437
 13554              	.L1084:
 13555              	.LBE899:
ARM GAS  /tmp/ccgiIQCZ.s 			page 372


 13556              	.LBE901:
1446:src/keys.c    ****        swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 13557              		.loc 1 1446 8 is_stmt 1 view .LVU4143
1446:src/keys.c    ****        swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 13558              		.loc 1 1446 26 is_stmt 0 view .LVU4144
 13559 1bd4 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
1447:src/keys.c    ****      }
 13560              		.loc 1 1447 8 view .LVU4145
 13561 1bd8 6420     		movs	r0, #100
1446:src/keys.c    ****        swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 13562              		.loc 1 1446 26 view .LVU4146
 13563 1bda 6FF38613 		bfc	r3, #6, #1
 13564 1bde 88F81730 		strb	r3, [r8, #23]
1447:src/keys.c    ****      }
 13565              		.loc 1 1447 8 is_stmt 1 view .LVU4147
 13566 1be2 FFF7FEFF 		bl	get_reg_n
 13567              	.LVL1157:
 13568 1be6 0446     		mov	r4, r0
 13569              	.LVL1158:
1447:src/keys.c    ****      }
 13570              		.loc 1 1447 8 is_stmt 0 view .LVU4148
 13571 1be8 6520     		movs	r0, #101
 13572 1bea FFF7FEFF 		bl	get_reg_n
 13573              	.LVL1159:
 13574 1bee 0146     		mov	r1, r0
 13575 1bf0 2046     		mov	r0, r4
 13576 1bf2 FFF7FEFF 		bl	swap_reg
 13577              	.LVL1160:
1456:src/keys.c    ****    default:;
 13578              		.loc 1 1456 13 view .LVU4149
 13579 1bf6 3324     		movs	r4, #51
 13580 1bf8 3368     		ldr	r3, [r6]
 13581 1bfa FEF75EBA 		b	.L799
 13582              	.LVL1161:
 13583              	.L1047:
1456:src/keys.c    ****    default:;
 13584              		.loc 1 1456 13 view .LVU4150
 13585              	.LBE968:
 13586              	.LBE1388:
 13587              	.LBE1448:
 13588              	.LBE1522:
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13589              		.loc 1 3642 2 is_stmt 1 view .LVU4151
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13590              		.loc 1 3642 18 is_stmt 0 view .LVU4152
 13591 1bfe D24A     		ldr	r2, .L1458
3643:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13592              		.loc 1 3643 32 view .LVU4153
 13593 1c00 40F2D115 		movw	r5, #465
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13594              		.loc 1 3642 18 view .LVU4154
 13595 1c04 1360     		str	r3, [r2]
3643:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13596              		.loc 1 3643 2 is_stmt 1 view .LVU4155
 13597 1c06 FEF7CABD 		b	.L1105
 13598              	.LVL1162:
 13599              	.L1046:
ARM GAS  /tmp/ccgiIQCZ.s 			page 373


3641:src/keys.c    **** 	NonProgrammable = 0;
 13600              		.loc 1 3641 7 view .LVU4156
3641:src/keys.c    **** 	NonProgrammable = 0;
 13601              		.loc 1 3641 11 is_stmt 0 view .LVU4157
 13602 1c0a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3641:src/keys.c    **** 	NonProgrammable = 0;
 13603              		.loc 1 3641 10 view .LVU4158
 13604 1c0e 5906     		lsls	r1, r3, #25
 13605 1c10 0ED5     		bpl	.L1172
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13606              		.loc 1 3642 2 is_stmt 1 view .LVU4159
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13607              		.loc 1 3642 18 is_stmt 0 view .LVU4160
 13608 1c12 CD4B     		ldr	r3, .L1458
3643:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13609              		.loc 1 3643 32 view .LVU4161
 13610 1c14 4FF4E875 		mov	r5, #464
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13611              		.loc 1 3642 18 view .LVU4162
 13612 1c18 1A60     		str	r2, [r3]
3643:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13613              		.loc 1 3643 2 is_stmt 1 view .LVU4163
 13614 1c1a FEF7C0BD 		b	.L1105
 13615              	.LVL1163:
 13616              	.L1437:
 13617              	.LBB1523:
 13618              	.LBB1449:
 13619              	.LBB1389:
 13620              	.LBB969:
 13621              	.LBB902:
 13622              	.LBB900:
1203:src/keys.c    **** 		process_cmdline();
 13623              		.loc 1 1203 3 view .LVU4164
1203:src/keys.c    **** 		process_cmdline();
 13624              		.loc 1 1203 21 is_stmt 0 view .LVU4165
 13625 1c1e 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
 13626 1c22 6FF38613 		bfc	r3, #6, #1
 13627 1c26 88F81730 		strb	r3, [r8, #23]
1204:src/keys.c    **** 	}
 13628              		.loc 1 1204 3 is_stmt 1 view .LVU4166
 13629 1c2a FFF7FEFF 		bl	process_cmdline
 13630              	.LVL1164:
 13631 1c2e D1E7     		b	.L1084
 13632              	.LVL1165:
 13633              	.L1172:
1204:src/keys.c    **** 	}
 13634              		.loc 1 1204 3 is_stmt 0 view .LVU4167
 13635              	.LBE900:
 13636              	.LBE902:
1313:src/keys.c    ****        }
 13637              		.loc 1 1313 10 view .LVU4168
 13638 1c30 4FF4E874 		mov	r4, #464
 13639 1c34 4EE6     		b	.L1048
 13640              	.LVL1166:
 13641              	.L1080:
1431:src/keys.c    ****        return process_cmplx(c);
 13642              		.loc 1 1431 6 is_stmt 1 view .LVU4169
ARM GAS  /tmp/ccgiIQCZ.s 			page 374


1431:src/keys.c    ****        return process_cmplx(c);
 13643              		.loc 1 1431 11 is_stmt 0 view .LVU4170
 13644 1c36 DBF80030 		ldr	r3, [fp]
1431:src/keys.c    ****        return process_cmplx(c);
 13645              		.loc 1 1431 10 view .LVU4171
 13646 1c3a 93F8E427 		ldrb	r2, [r3, #2020]	@ zero_extendqisi2
1431:src/keys.c    ****        return process_cmplx(c);
 13647              		.loc 1 1431 9 view .LVU4172
 13648 1c3e 1507     		lsls	r5, r2, #28
1432:src/keys.c    ****      }
 13649              		.loc 1 1432 15 view .LVU4173
 13650 1c40 4FF00E00 		mov	r0, #14
1431:src/keys.c    ****        return process_cmplx(c);
 13651              		.loc 1 1431 9 view .LVU4174
 13652 1c44 3EF52FAB 		bmi	.L1343
1431:src/keys.c    ****        return process_cmplx(c);
 13653              		.loc 1 1431 24 view .LVU4175
 13654 1c48 93F8EB37 		ldrb	r3, [r3, #2027]	@ zero_extendqisi2
1431:src/keys.c    ****        return process_cmplx(c);
 13655              		.loc 1 1431 21 view .LVU4176
 13656 1c4c 1C07     		lsls	r4, r3, #28
 13657              	.LVL1167:
1431:src/keys.c    ****        return process_cmplx(c);
 13658              		.loc 1 1431 21 view .LVU4177
 13659 1c4e 3EF52AAB 		bmi	.L1343
 13660 1c52 79E4     		b	.L1344
 13661              	.LVL1168:
 13662              	.L1075:
1457:src/keys.c    ****    }
 13663              		.loc 1 1457 12 is_stmt 1 view .LVU4178
1459:src/keys.c    ****    return process_cmplx(c);
 13664              		.loc 1 1459 4 view .LVU4179
 13665 1c54 0020     		movs	r0, #0
 13666 1c56 FFF7FEFF 		bl	finish_cpx_entry
 13667              	.LVL1169:
1460:src/keys.c    **** 
 13668              		.loc 1 1460 4 view .LVU4180
1460:src/keys.c    **** 
 13669              		.loc 1 1460 11 is_stmt 0 view .LVU4181
 13670 1c5a 2046     		mov	r0, r4
 13671 1c5c FFF7FEFF 		bl	process_cmplx
 13672              	.LVL1170:
 13673 1c60 0446     		mov	r4, r0
 13674              	.LVL1171:
1460:src/keys.c    **** 
 13675              		.loc 1 1460 11 view .LVU4182
 13676 1c62 FEF7A7BB 		b	.L834
 13677              	.LVL1172:
 13678              	.L1052:
1369:src/keys.c    ****        if (shift == SHIFT_F) {
 13679              		.loc 1 1369 8 is_stmt 1 view .LVU4183
 13680              	.LBB903:
 13681              	.LBI903:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13682              		.loc 1 114 13 view .LVU4184
 13683              	.LBE903:
 13684              	.LBE969:
ARM GAS  /tmp/ccgiIQCZ.s 			page 375


 13685              	.LBE1389:
 13686              	.LBE1449:
 13687              	.LBE1523:
 115:src/keys.c    **** }
 13688              		.loc 1 115 2 view .LVU4185
 13689              	.LBB1524:
 13690              	.LBB1450:
 13691              	.LBB1390:
 13692              	.LBB970:
 13693              	.LBB910:
 13694              	.LBB904:
 13695              	.LBI904:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13696              		.loc 1 104 20 view .LVU4186
 13697              	.LBB905:
 105:src/keys.c    **** 	State2.shifts = shift;
 13698              		.loc 1 105 2 view .LVU4187
 13699              	.LBB906:
 13700              	.LBI906:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13701              		.loc 1 96 13 view .LVU4188
 13702              	.LBB907:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13703              		.loc 1 97 2 view .LVU4189
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13704              		.loc 1 97 18 is_stmt 0 view .LVU4190
 13705 1c66 FFF7FEFF 		bl	shift_down
 13706              	.LVL1173:
  98:src/keys.c    **** }
 13707              		.loc 1 98 2 is_stmt 1 view .LVU4191
 13708              	.LBE907:
 13709              	.LBE906:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13710              		.loc 1 106 2 view .LVU4192
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13711              		.loc 1 106 16 is_stmt 0 view .LVU4193
 13712 1c6a 0023     		movs	r3, #0
 13713              	.LBE905:
 13714              	.LBE904:
 13715              	.LBE910:
1370:src/keys.c    **** 	 return OP_NIL | OP_C_IM;
 13716              		.loc 1 1370 11 view .LVU4194
 13717 1c6c BAF1010F 		cmp	r10, #1
 13718              	.LBB911:
 13719              	.LBB909:
 13720              	.LBB908:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13721              		.loc 1 106 16 view .LVU4195
 13722 1c70 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13723              		.loc 1 108 2 is_stmt 1 view .LVU4196
 13724              	.LVL1174:
 108:src/keys.c    **** }
 13725              		.loc 1 108 2 is_stmt 0 view .LVU4197
 13726              	.LBE908:
 13727              	.LBE909:
 13728              	.LBE911:
ARM GAS  /tmp/ccgiIQCZ.s 			page 376


1370:src/keys.c    **** 	 return OP_NIL | OP_C_IM;
 13729              		.loc 1 1370 8 is_stmt 1 view .LVU4198
1370:src/keys.c    **** 	 return OP_NIL | OP_C_IM;
 13730              		.loc 1 1370 11 is_stmt 0 view .LVU4199
 13731 1c74 00F0B880 		beq	.L1069
1373:src/keys.c    **** 	 return OP_NIL | OP_C_RE;
 13732              		.loc 1 1373 13 is_stmt 1 view .LVU4200
1373:src/keys.c    **** 	 return OP_NIL | OP_C_RE;
 13733              		.loc 1 1373 16 is_stmt 0 view .LVU4201
 13734 1c78 BAF1020F 		cmp	r10, #2
 13735 1c7c 2DD0     		beq	.L1438
 13736              	.LVL1175:
 13737              	.L1065:
1407:src/keys.c    ****      return STATE_UNFINISHED;
 13738              		.loc 1 1407 6 is_stmt 1 view .LVU4202
 13739              	.LBB912:
 13740              	.LBI912:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13741              		.loc 1 114 13 view .LVU4203
 13742              	.LBE912:
 13743              	.LBE970:
 13744              	.LBE1390:
 13745              	.LBE1450:
 13746              	.LBE1524:
 115:src/keys.c    **** }
 13747              		.loc 1 115 2 view .LVU4204
 13748              	.LBB1525:
 13749              	.LBB1451:
 13750              	.LBB1391:
 13751              	.LBB971:
 13752              	.LBB917:
 13753              	.LBB913:
 13754              	.LBI913:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13755              		.loc 1 104 20 view .LVU4205
 13756              	.LBB914:
 105:src/keys.c    **** 	State2.shifts = shift;
 13757              		.loc 1 105 2 view .LVU4206
 13758              	.LBB915:
 13759              	.LBI915:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13760              		.loc 1 96 13 view .LVU4207
 13761              	.LBB916:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13762              		.loc 1 97 2 view .LVU4208
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13763              		.loc 1 97 18 is_stmt 0 view .LVU4209
 13764 1c7e FFF7FEFF 		bl	shift_down
 13765              	.LVL1176:
  98:src/keys.c    **** }
 13766              		.loc 1 98 2 is_stmt 1 view .LVU4210
 13767              	.LBE916:
 13768              	.LBE915:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13769              		.loc 1 106 2 view .LVU4211
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13770              		.loc 1 106 16 is_stmt 0 view .LVU4212
ARM GAS  /tmp/ccgiIQCZ.s 			page 377


 13771 1c82 0022     		movs	r2, #0
 13772 1c84 3368     		ldr	r3, [r6]
 13773 1c86 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 13774              		.loc 1 108 2 is_stmt 1 view .LVU4213
 13775              	.LVL1177:
 108:src/keys.c    **** }
 13776              		.loc 1 108 2 is_stmt 0 view .LVU4214
 13777              	.LBE914:
 13778              	.LBE913:
 13779              	.LBE917:
1408:src/keys.c    ****    }
 13780              		.loc 1 1408 6 is_stmt 1 view .LVU4215
1408:src/keys.c    ****    }
 13781              		.loc 1 1408 13 is_stmt 0 view .LVU4216
 13782 1c8a 3324     		movs	r4, #51
 13783 1c8c FEF715BA 		b	.L799
 13784              	.LVL1178:
 13785              	.L1054:
1335:src/keys.c    ****        if (shift == SHIFT_H) return (OP_NIL | OP_OFF);
 13786              		.loc 1 1335 8 is_stmt 1 view .LVU4217
 13787              	.LBB918:
 13788              	.LBI918:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13789              		.loc 1 114 13 view .LVU4218
 13790              	.LBE918:
 13791              	.LBE971:
 13792              	.LBE1391:
 13793              	.LBE1451:
 13794              	.LBE1525:
 115:src/keys.c    **** }
 13795              		.loc 1 115 2 view .LVU4219
 13796              	.LBB1526:
 13797              	.LBB1452:
 13798              	.LBB1392:
 13799              	.LBB972:
 13800              	.LBB925:
 13801              	.LBB919:
 13802              	.LBI919:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13803              		.loc 1 104 20 view .LVU4220
 13804              	.LBB920:
 105:src/keys.c    **** 	State2.shifts = shift;
 13805              		.loc 1 105 2 view .LVU4221
 13806              	.LBB921:
 13807              	.LBI921:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13808              		.loc 1 96 13 view .LVU4222
 13809              	.LBB922:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13810              		.loc 1 97 2 view .LVU4223
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13811              		.loc 1 97 18 is_stmt 0 view .LVU4224
 13812 1c90 FFF7FEFF 		bl	shift_down
 13813              	.LVL1179:
  98:src/keys.c    **** }
 13814              		.loc 1 98 2 is_stmt 1 view .LVU4225
ARM GAS  /tmp/ccgiIQCZ.s 			page 378


 13815              	.LBE922:
 13816              	.LBE921:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13817              		.loc 1 106 2 view .LVU4226
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13818              		.loc 1 106 16 is_stmt 0 view .LVU4227
 13819 1c94 0023     		movs	r3, #0
 13820              	.LBE920:
 13821              	.LBE919:
 13822              	.LBE925:
1336:src/keys.c    ****      case (K21): // x<->y key
 13823              		.loc 1 1336 11 view .LVU4228
 13824 1c96 BAF1030F 		cmp	r10, #3
 13825              	.LBB926:
 13826              	.LBB924:
 13827              	.LBB923:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13828              		.loc 1 106 16 view .LVU4229
 13829 1c9a 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13830              		.loc 1 108 2 is_stmt 1 view .LVU4230
 13831              	.LVL1180:
 108:src/keys.c    **** }
 13832              		.loc 1 108 2 is_stmt 0 view .LVU4231
 13833              	.LBE923:
 13834              	.LBE924:
 13835              	.LBE926:
1336:src/keys.c    ****      case (K21): // x<->y key
 13836              		.loc 1 1336 8 is_stmt 1 view .LVU4232
1336:src/keys.c    ****      case (K21): // x<->y key
 13837              		.loc 1 1336 11 is_stmt 0 view .LVU4233
 13838 1c9e 11D0     		beq	.L1061
 13839              	.L1060:
1338:src/keys.c    **** 	 return process_fg_shifted(c); // SHOW
 13840              		.loc 1 1338 8 is_stmt 1 view .LVU4234
1338:src/keys.c    **** 	 return process_fg_shifted(c); // SHOW
 13841              		.loc 1 1338 11 is_stmt 0 view .LVU4235
 13842 1ca0 BAF1010F 		cmp	r10, #1
 13843 1ca4 3FF4C2AC 		beq	.L1340
1341:src/keys.c    **** 	 reset_shift();
 13844              		.loc 1 1341 8 is_stmt 1 view .LVU4236
1341:src/keys.c    **** 	 reset_shift();
 13845              		.loc 1 1341 11 is_stmt 0 view .LVU4237
 13846 1ca8 BAF1020F 		cmp	r10, #2
 13847 1cac E7D1     		bne	.L1065
1342:src/keys.c    **** 	 return process_normal(K21); // x<>y
 13848              		.loc 1 1342 3 is_stmt 1 view .LVU4238
 13849              	.LBB927:
 13850              	.LBI927:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13851              		.loc 1 114 13 view .LVU4239
 13852              	.LBE927:
 13853              	.LBE972:
 13854              	.LBE1392:
 13855              	.LBE1452:
 13856              	.LBE1526:
 115:src/keys.c    **** }
ARM GAS  /tmp/ccgiIQCZ.s 			page 379


 13857              		.loc 1 115 2 view .LVU4240
 13858              	.LVL1181:
 13859              	.LBB1527:
 13860              	.LBB1453:
 13861              	.LBB1393:
 13862              	.LBB973:
 13863              	.LBB934:
 13864              	.LBB928:
 13865              	.LBI928:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13866              		.loc 1 104 20 view .LVU4241
 13867              	.LBB929:
 105:src/keys.c    **** 	State2.shifts = shift;
 13868              		.loc 1 105 2 view .LVU4242
 13869              	.LBB930:
 13870              	.LBI930:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13871              		.loc 1 96 13 view .LVU4243
 13872              	.LBB931:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13873              		.loc 1 97 2 view .LVU4244
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13874              		.loc 1 97 18 is_stmt 0 view .LVU4245
 13875 1cae FFF7FEFF 		bl	shift_down
 13876              	.LVL1182:
  98:src/keys.c    **** }
 13877              		.loc 1 98 2 is_stmt 1 view .LVU4246
 13878              	.LBE931:
 13879              	.LBE930:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13880              		.loc 1 106 2 view .LVU4247
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13881              		.loc 1 106 16 is_stmt 0 view .LVU4248
 13882 1cb2 0023     		movs	r3, #0
 13883              	.LBE929:
 13884              	.LBE928:
 13885              	.LBE934:
1343:src/keys.c    ****        }
 13886              		.loc 1 1343 10 view .LVU4249
 13887 1cb4 0D20     		movs	r0, #13
 13888              	.LBB935:
 13889              	.LBB933:
 13890              	.LBB932:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13891              		.loc 1 106 16 view .LVU4250
 13892 1cb6 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13893              		.loc 1 108 2 is_stmt 1 view .LVU4251
 13894              	.LVL1183:
 108:src/keys.c    **** }
 13895              		.loc 1 108 2 is_stmt 0 view .LVU4252
 13896              	.LBE932:
 13897              	.LBE933:
 13898              	.LBE935:
1343:src/keys.c    ****        }
 13899              		.loc 1 1343 3 is_stmt 1 view .LVU4253
1343:src/keys.c    ****        }
ARM GAS  /tmp/ccgiIQCZ.s 			page 380


 13900              		.loc 1 1343 10 is_stmt 0 view .LVU4254
 13901 1cba FFF7FEFF 		bl	process_normal
 13902              	.LVL1184:
 13903 1cbe 0446     		mov	r4, r0
 13904              	.LVL1185:
1343:src/keys.c    ****        }
 13905              		.loc 1 1343 10 view .LVU4255
 13906 1cc0 FEF778BB 		b	.L834
 13907              	.LVL1186:
 13908              	.L1061:
1343:src/keys.c    ****        }
 13909              		.loc 1 1343 10 view .LVU4256
 13910              	.LBE973:
 13911              	.LBE1393:
 13912              	.LBE1453:
 13913              	.LBE1527:
3641:src/keys.c    **** 	NonProgrammable = 0;
 13914              		.loc 1 3641 7 is_stmt 1 view .LVU4257
3641:src/keys.c    **** 	NonProgrammable = 0;
 13915              		.loc 1 3641 11 is_stmt 0 view .LVU4258
 13916 1cc4 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3641:src/keys.c    **** 	NonProgrammable = 0;
 13917              		.loc 1 3641 10 view .LVU4259
 13918 1cc8 5406     		lsls	r4, r2, #25
 13919 1cca 40F19780 		bpl	.L1165
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13920              		.loc 1 3642 2 is_stmt 1 view .LVU4260
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13921              		.loc 1 3642 18 is_stmt 0 view .LVU4261
 13922 1cce 9E4A     		ldr	r2, .L1458
3643:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13923              		.loc 1 3643 32 view .LVU4262
 13924 1cd0 4FF48175 		mov	r5, #258
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13925              		.loc 1 3642 18 view .LVU4263
 13926 1cd4 1360     		str	r3, [r2]
3643:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13927              		.loc 1 3643 2 is_stmt 1 view .LVU4264
 13928 1cd6 FEF762BD 		b	.L1105
 13929              	.LVL1187:
 13930              	.L1438:
3641:src/keys.c    **** 	NonProgrammable = 0;
 13931              		.loc 1 3641 7 view .LVU4265
3641:src/keys.c    **** 	NonProgrammable = 0;
 13932              		.loc 1 3641 11 is_stmt 0 view .LVU4266
 13933 1cda 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3641:src/keys.c    **** 	NonProgrammable = 0;
 13934              		.loc 1 3641 10 view .LVU4267
 13935 1cde 5506     		lsls	r5, r2, #25
 13936 1ce0 6CD5     		bpl	.L1169
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13937              		.loc 1 3642 2 is_stmt 1 view .LVU4268
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13938              		.loc 1 3642 18 is_stmt 0 view .LVU4269
 13939 1ce2 994A     		ldr	r2, .L1458
3643:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13940              		.loc 1 3643 32 view .LVU4270
ARM GAS  /tmp/ccgiIQCZ.s 			page 381


 13941 1ce4 4FF4E775 		mov	r5, #462
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13942              		.loc 1 3642 18 view .LVU4271
 13943 1ce8 1360     		str	r3, [r2]
3643:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13944              		.loc 1 3643 2 is_stmt 1 view .LVU4272
 13945 1cea FEF758BD 		b	.L1105
 13946              	.LVL1188:
 13947              	.L1057:
 13948              	.LBB1528:
 13949              	.LBB1454:
 13950              	.LBB1394:
 13951              	.LBB974:
1385:src/keys.c    ****      case (K34): // divide key
 13952              		.loc 1 1385 8 view .LVU4273
1387:src/keys.c    **** 	 reset_shift();
 13953              		.loc 1 1387 8 view .LVU4274
1387:src/keys.c    **** 	 reset_shift();
 13954              		.loc 1 1387 11 is_stmt 0 view .LVU4275
 13955 1cee BAF1030F 		cmp	r10, #3
 13956 1cf2 05D0     		beq	.L1439
1392:src/keys.c    ****        }
 13957              		.loc 1 1392 3 is_stmt 1 view .LVU4276
1392:src/keys.c    ****        }
 13958              		.loc 1 1392 10 is_stmt 0 view .LVU4277
 13959 1cf4 1620     		movs	r0, #22
 13960 1cf6 FFF7FEFF 		bl	process_cmplx
 13961              	.LVL1189:
 13962 1cfa 0446     		mov	r4, r0
 13963              	.LVL1190:
1392:src/keys.c    ****        }
 13964              		.loc 1 1392 10 view .LVU4278
 13965 1cfc FEF75ABB 		b	.L834
 13966              	.LVL1191:
 13967              	.L1439:
1388:src/keys.c    **** 	 return OP_CDYA | OP_CDOTDIV;
 13968              		.loc 1 1388 3 is_stmt 1 view .LVU4279
 13969              	.LBB936:
 13970              	.LBI936:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13971              		.loc 1 114 13 view .LVU4280
 13972              	.LBE936:
 13973              	.LBE974:
 13974              	.LBE1394:
 13975              	.LBE1454:
 13976              	.LBE1528:
 115:src/keys.c    **** }
 13977              		.loc 1 115 2 view .LVU4281
 13978              	.LBB1529:
 13979              	.LBB1455:
 13980              	.LBB1395:
 13981              	.LBB975:
 13982              	.LBB945:
 13983              	.LBB937:
 13984              	.LBI937:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13985              		.loc 1 104 20 view .LVU4282
ARM GAS  /tmp/ccgiIQCZ.s 			page 382


 13986              	.LBB938:
 105:src/keys.c    **** 	State2.shifts = shift;
 13987              		.loc 1 105 2 view .LVU4283
 13988              	.LBB939:
 13989              	.LBI939:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13990              		.loc 1 96 13 view .LVU4284
 13991              	.LBB940:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13992              		.loc 1 97 2 view .LVU4285
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13993              		.loc 1 97 18 is_stmt 0 view .LVU4286
 13994 1d00 FFF7FEFF 		bl	shift_down
 13995              	.LVL1192:
  98:src/keys.c    **** }
 13996              		.loc 1 98 2 is_stmt 1 view .LVU4287
 13997              	.LBE940:
 13998              	.LBE939:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13999              		.loc 1 106 2 view .LVU4288
 14000              	.LBE938:
 14001              	.LBE937:
 14002              	.LBE945:
 14003              	.LBE975:
 14004              	.LBE1395:
 14005              	.LBE1455:
 14006              	.LBE1529:
3641:src/keys.c    **** 	NonProgrammable = 0;
 14007              		.loc 1 3641 11 is_stmt 0 view .LVU4289
 14008 1d04 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 14009              	.LBB1530:
 14010              	.LBB1456:
 14011              	.LBB1396:
 14012              	.LBB976:
 14013              	.LBB946:
 14014              	.LBB943:
 14015              	.LBB941:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14016              		.loc 1 106 16 view .LVU4290
 14017 1d08 0023     		movs	r3, #0
 14018              	.LBE941:
 14019              	.LBE943:
 14020              	.LBE946:
 14021              	.LBE976:
 14022              	.LBE1396:
 14023              	.LBE1456:
 14024              	.LBE1530:
3641:src/keys.c    **** 	NonProgrammable = 0;
 14025              		.loc 1 3641 10 view .LVU4291
 14026 1d0a 5406     		lsls	r4, r2, #25
 14027              	.LVL1193:
 14028              	.LBB1531:
 14029              	.LBB1457:
 14030              	.LBB1397:
 14031              	.LBB977:
 14032              	.LBB947:
 14033              	.LBB944:
ARM GAS  /tmp/ccgiIQCZ.s 			page 383


 14034              	.LBB942:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14035              		.loc 1 106 16 view .LVU4292
 14036 1d0c 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 14037              		.loc 1 108 2 is_stmt 1 view .LVU4293
 14038              	.LVL1194:
 108:src/keys.c    **** }
 14039              		.loc 1 108 2 is_stmt 0 view .LVU4294
 14040              	.LBE942:
 14041              	.LBE944:
 14042              	.LBE947:
1389:src/keys.c    ****        }
 14043              		.loc 1 1389 3 is_stmt 1 view .LVU4295
1389:src/keys.c    ****        }
 14044              		.loc 1 1389 3 is_stmt 0 view .LVU4296
 14045              	.LBE977:
 14046              	.LBE1397:
 14047              	.LBE1457:
 14048              	.LBE1531:
3641:src/keys.c    **** 	NonProgrammable = 0;
 14049              		.loc 1 3641 7 is_stmt 1 view .LVU4297
3641:src/keys.c    **** 	NonProgrammable = 0;
 14050              		.loc 1 3641 10 is_stmt 0 view .LVU4298
 14051 1d10 61D4     		bmi	.L1074
 14052              	.LBB1532:
 14053              	.LBB1458:
 14054              	.LBB1398:
 14055              	.LBB978:
1389:src/keys.c    ****        }
 14056              		.loc 1 1389 10 view .LVU4299
 14057 1d12 4FF4C664 		mov	r4, #1584
 14058 1d16 DDE5     		b	.L1048
 14059              	.LVL1195:
 14060              	.L1167:
1365:src/keys.c    ****        }
 14061              		.loc 1 1365 10 view .LVU4300
 14062 1d18 40F2CD14 		movw	r4, #461
 14063 1d1c DAE5     		b	.L1048
 14064              	.LVL1196:
 14065              	.L1055:
1378:src/keys.c    **** 	 reset_shift();
 14066              		.loc 1 1378 8 is_stmt 1 view .LVU4301
1378:src/keys.c    **** 	 reset_shift();
 14067              		.loc 1 1378 11 is_stmt 0 view .LVU4302
 14068 1d1e BAF1030F 		cmp	r10, #3
 14069 1d22 14D0     		beq	.L1440
1383:src/keys.c    ****        }
 14070              		.loc 1 1383 3 is_stmt 1 view .LVU4303
1383:src/keys.c    ****        }
 14071              		.loc 1 1383 10 is_stmt 0 view .LVU4304
 14072 1d24 1C20     		movs	r0, #28
 14073 1d26 FFF7FEFF 		bl	process_cmplx
 14074              	.LVL1197:
 14075 1d2a 0446     		mov	r4, r0
 14076              	.LVL1198:
1383:src/keys.c    ****        }
ARM GAS  /tmp/ccgiIQCZ.s 			page 384


 14077              		.loc 1 1383 10 view .LVU4305
 14078 1d2c FEF742BB 		b	.L834
 14079              	.LVL1199:
 14080              	.L1056:
1347:src/keys.c    **** 	 SET_RECTANGULAR_DISPLAY;
 14081              		.loc 1 1347 8 is_stmt 1 view .LVU4306
1347:src/keys.c    **** 	 SET_RECTANGULAR_DISPLAY;
 14082              		.loc 1 1347 11 is_stmt 0 view .LVU4307
 14083 1d30 BAF1010F 		cmp	r10, #1
 14084 1d34 68D0     		beq	.L1441
1350:src/keys.c    **** 	 SET_POLAR_DISPLAY;
 14085              		.loc 1 1350 13 is_stmt 1 view .LVU4308
1350:src/keys.c    **** 	 SET_POLAR_DISPLAY;
 14086              		.loc 1 1350 16 is_stmt 0 view .LVU4309
 14087 1d36 BAF1020F 		cmp	r10, #2
 14088 1d3a 14D0     		beq	.L1442
1355:src/keys.c    **** 	 return process_cmplx (c);
 14089              		.loc 1 1355 13 is_stmt 1 view .LVU4310
1355:src/keys.c    **** 	 return process_cmplx (c);
 14090              		.loc 1 1355 16 is_stmt 0 view .LVU4311
 14091 1d3c BAF1030F 		cmp	r10, #3
 14092 1d40 9DD1     		bne	.L1065
1356:src/keys.c    ****        }
 14093              		.loc 1 1356 3 is_stmt 1 view .LVU4312
1356:src/keys.c    ****        }
 14094              		.loc 1 1356 10 is_stmt 0 view .LVU4313
 14095 1d42 1820     		movs	r0, #24
 14096 1d44 FFF7FEFF 		bl	process_cmplx
 14097              	.LVL1200:
 14098 1d48 0446     		mov	r4, r0
 14099              	.LVL1201:
1356:src/keys.c    ****        }
 14100              		.loc 1 1356 10 view .LVU4314
 14101 1d4a FEF733BB 		b	.L834
 14102              	.LVL1202:
 14103              	.L1440:
1379:src/keys.c    **** 	 return OP_CDYA | OP_CDOT;
 14104              		.loc 1 1379 3 is_stmt 1 view .LVU4315
 14105              	.LBB948:
 14106              	.LBI948:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 14107              		.loc 1 114 13 view .LVU4316
 14108              	.LBE948:
 14109              	.LBE978:
 14110              	.LBE1398:
 14111              	.LBE1458:
 14112              	.LBE1532:
 115:src/keys.c    **** }
 14113              		.loc 1 115 2 view .LVU4317
 14114              	.LBB1533:
 14115              	.LBB1459:
 14116              	.LBB1399:
 14117              	.LBB979:
 14118              	.LBB957:
 14119              	.LBB949:
 14120              	.LBI949:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
ARM GAS  /tmp/ccgiIQCZ.s 			page 385


 14121              		.loc 1 104 20 view .LVU4318
 14122              	.LBB950:
 105:src/keys.c    **** 	State2.shifts = shift;
 14123              		.loc 1 105 2 view .LVU4319
 14124              	.LBB951:
 14125              	.LBI951:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 14126              		.loc 1 96 13 view .LVU4320
 14127              	.LBB952:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14128              		.loc 1 97 2 view .LVU4321
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14129              		.loc 1 97 18 is_stmt 0 view .LVU4322
 14130 1d4e FFF7FEFF 		bl	shift_down
 14131              	.LVL1203:
  98:src/keys.c    **** }
 14132              		.loc 1 98 2 is_stmt 1 view .LVU4323
 14133              	.LBE952:
 14134              	.LBE951:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14135              		.loc 1 106 2 view .LVU4324
 14136              	.LBE950:
 14137              	.LBE949:
 14138              	.LBE957:
 14139              	.LBE979:
 14140              	.LBE1399:
 14141              	.LBE1459:
 14142              	.LBE1533:
3641:src/keys.c    **** 	NonProgrammable = 0;
 14143              		.loc 1 3641 11 is_stmt 0 view .LVU4325
 14144 1d52 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 14145              	.LBB1534:
 14146              	.LBB1460:
 14147              	.LBB1400:
 14148              	.LBB980:
 14149              	.LBB958:
 14150              	.LBB955:
 14151              	.LBB953:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14152              		.loc 1 106 16 view .LVU4326
 14153 1d56 0023     		movs	r3, #0
 14154              	.LBE953:
 14155              	.LBE955:
 14156              	.LBE958:
 14157              	.LBE980:
 14158              	.LBE1400:
 14159              	.LBE1460:
 14160              	.LBE1534:
3641:src/keys.c    **** 	NonProgrammable = 0;
 14161              		.loc 1 3641 10 view .LVU4327
 14162 1d58 5506     		lsls	r5, r2, #25
 14163              	.LBB1535:
 14164              	.LBB1461:
 14165              	.LBB1401:
 14166              	.LBB981:
 14167              	.LBB959:
 14168              	.LBB956:
ARM GAS  /tmp/ccgiIQCZ.s 			page 386


 14169              	.LBB954:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14170              		.loc 1 106 16 view .LVU4328
 14171 1d5a 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 14172              		.loc 1 108 2 is_stmt 1 view .LVU4329
 14173              	.LVL1204:
 108:src/keys.c    **** }
 14174              		.loc 1 108 2 is_stmt 0 view .LVU4330
 14175              	.LBE954:
 14176              	.LBE956:
 14177              	.LBE959:
1380:src/keys.c    ****        }
 14178              		.loc 1 1380 3 is_stmt 1 view .LVU4331
1380:src/keys.c    ****        }
 14179              		.loc 1 1380 3 is_stmt 0 view .LVU4332
 14180              	.LBE981:
 14181              	.LBE1401:
 14182              	.LBE1461:
 14183              	.LBE1535:
3641:src/keys.c    **** 	NonProgrammable = 0;
 14184              		.loc 1 3641 7 is_stmt 1 view .LVU4333
3641:src/keys.c    **** 	NonProgrammable = 0;
 14185              		.loc 1 3641 10 is_stmt 0 view .LVU4334
 14186 1d5e 5CD4     		bmi	.L1072
 14187              	.LBB1536:
 14188              	.LBB1462:
 14189              	.LBB1402:
 14190              	.LBB982:
1380:src/keys.c    ****        }
 14191              		.loc 1 1380 10 view .LVU4335
 14192 1d60 40F22F64 		movw	r4, #1583
 14193 1d64 B6E5     		b	.L1048
 14194              	.LVL1205:
 14195              	.L1442:
1351:src/keys.c    **** 	 CLEAR_POLAR_READY;
 14196              		.loc 1 1351 3 is_stmt 1 view .LVU4336
 14197 1d66 DBF80020 		ldr	r2, [fp]
1352:src/keys.c    **** 	 update_speed(0); // new polar display calculated from keyboard needs a speed boost
 14198              		.loc 1 1352 3 view .LVU4337
1351:src/keys.c    **** 	 CLEAR_POLAR_READY;
 14199              		.loc 1 1351 3 is_stmt 0 view .LVU4338
 14200 1d6a 92F8DE37 		ldrb	r3, [r2, #2014]	@ zero_extendqisi2
 14201 1d6e 23F01803 		bic	r3, r3, #24
 14202 1d72 43F01803 		orr	r3, r3, #24
 14203 1d76 82F8DE37 		strb	r3, [r2, #2014]
1353:src/keys.c    ****        }
 14204              		.loc 1 1353 18 is_stmt 1 view .LVU4339
 14205 1d7a 80E7     		b	.L1065
 14206              	.L1058:
1394:src/keys.c    ****      case (K24): // <- key
 14207              		.loc 1 1394 8 view .LVU4340
1396:src/keys.c    ****        if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real pa
 14208              		.loc 1 1396 8 view .LVU4341
1396:src/keys.c    ****        if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real pa
 14209              		.loc 1 1396 12 is_stmt 0 view .LVU4342
 14210 1d7c DBF80030 		ldr	r3, [fp]
ARM GAS  /tmp/ccgiIQCZ.s 			page 387


 14211 1d80 93F8DE47 		ldrb	r4, [r3, #2014]	@ zero_extendqisi2
 14212              	.LVL1206:
1396:src/keys.c    ****        if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real pa
 14213              		.loc 1 1396 11 view .LVU4343
 14214 1d84 14F00804 		ands	r4, r4, #8
 14215 1d88 7FF479AF 		bne	.L1065
1397:src/keys.c    **** 	 zero_X ();
 14216              		.loc 1 1397 8 is_stmt 1 view .LVU4344
1397:src/keys.c    **** 	 zero_X ();
 14217              		.loc 1 1397 11 is_stmt 0 view .LVU4345
 14218 1d8c BAF1030F 		cmp	r10, #3
 14219 1d90 7FF475AF 		bne	.L1065
1398:src/keys.c    **** 	 State2.state_lift = 0;
 14220              		.loc 1 1398 3 is_stmt 1 view .LVU4346
 14221 1d94 FFF7FEFF 		bl	zero_X
 14222              	.LVL1207:
1399:src/keys.c    **** 	 SET_REAL;
 14223              		.loc 1 1399 3 view .LVU4347
1399:src/keys.c    **** 	 SET_REAL;
 14224              		.loc 1 1399 21 is_stmt 0 view .LVU4348
 14225 1d98 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
1400:src/keys.c    **** 	 stack_begin (0);
 14226              		.loc 1 1400 3 view .LVU4349
 14227 1d9c DBF80020 		ldr	r2, [fp]
1399:src/keys.c    **** 	 SET_REAL;
 14228              		.loc 1 1399 21 view .LVU4350
 14229 1da0 64F38613 		bfi	r3, r4, #6, #1
 14230 1da4 88F81730 		strb	r3, [r8, #23]
1400:src/keys.c    **** 	 stack_begin (0);
 14231              		.loc 1 1400 3 is_stmt 1 view .LVU4351
 14232 1da8 92F8E437 		ldrb	r3, [r2, #2020]	@ zero_extendqisi2
 14233 1dac 43F00803 		orr	r3, r3, #8
1401:src/keys.c    ****        }
 14234              		.loc 1 1401 3 is_stmt 0 view .LVU4352
 14235 1db0 2046     		mov	r0, r4
1400:src/keys.c    **** 	 stack_begin (0);
 14236              		.loc 1 1400 3 view .LVU4353
 14237 1db2 82F8E437 		strb	r3, [r2, #2020]
1401:src/keys.c    ****        }
 14238              		.loc 1 1401 3 is_stmt 1 view .LVU4354
 14239 1db6 FFF7FEFF 		bl	stack_begin
 14240              	.LVL1208:
 14241 1dba 60E7     		b	.L1065
 14242              	.LVL1209:
 14243              	.L1169:
1374:src/keys.c    ****        }
 14244              		.loc 1 1374 10 is_stmt 0 view .LVU4355
 14245 1dbc 4FF4E774 		mov	r4, #462
 14246 1dc0 88E5     		b	.L1048
 14247              	.LVL1210:
 14248              	.L1067:
1374:src/keys.c    ****        }
 14249              		.loc 1 1374 10 view .LVU4356
 14250              	.LBE982:
 14251              	.LBE1402:
 14252              	.LBE1462:
 14253              	.LBE1536:
ARM GAS  /tmp/ccgiIQCZ.s 			page 388


3641:src/keys.c    **** 	NonProgrammable = 0;
 14254              		.loc 1 3641 7 is_stmt 1 view .LVU4357
3641:src/keys.c    **** 	NonProgrammable = 0;
 14255              		.loc 1 3641 11 is_stmt 0 view .LVU4358
 14256 1dc2 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3641:src/keys.c    **** 	NonProgrammable = 0;
 14257              		.loc 1 3641 10 view .LVU4359
 14258 1dc6 5006     		lsls	r0, r2, #25
 14259 1dc8 0BD5     		bpl	.L1166
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14260              		.loc 1 3642 2 is_stmt 1 view .LVU4360
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14261              		.loc 1 3642 18 is_stmt 0 view .LVU4361
 14262 1dca 5F4A     		ldr	r2, .L1458
3643:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14263              		.loc 1 3643 32 view .LVU4362
 14264 1dcc 4FF4E675 		mov	r5, #460
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14265              		.loc 1 3642 18 view .LVU4363
 14266 1dd0 1360     		str	r3, [r2]
3643:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14267              		.loc 1 3643 2 is_stmt 1 view .LVU4364
 14268 1dd2 FEF7E4BC 		b	.L1105
 14269              	.LVL1211:
 14270              	.L1074:
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14271              		.loc 1 3642 2 view .LVU4365
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14272              		.loc 1 3642 18 is_stmt 0 view .LVU4366
 14273 1dd6 5C4A     		ldr	r2, .L1458
3643:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14274              		.loc 1 3643 32 view .LVU4367
 14275 1dd8 4FF4C665 		mov	r5, #1584
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14276              		.loc 1 3642 18 view .LVU4368
 14277 1ddc 1360     		str	r3, [r2]
3643:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14278              		.loc 1 3643 2 is_stmt 1 view .LVU4369
 14279 1dde FEF7DEBC 		b	.L1105
 14280              	.LVL1212:
 14281              	.L1166:
 14282              	.LBB1537:
 14283              	.LBB1463:
 14284              	.LBB1403:
 14285              	.LBB983:
1362:src/keys.c    ****        }
 14286              		.loc 1 1362 10 is_stmt 0 view .LVU4370
 14287 1de2 4FF4E674 		mov	r4, #460
 14288 1de6 75E5     		b	.L1048
 14289              	.LVL1213:
 14290              	.L1069:
1362:src/keys.c    ****        }
 14291              		.loc 1 1362 10 view .LVU4371
 14292              	.LBE983:
 14293              	.LBE1403:
 14294              	.LBE1463:
 14295              	.LBE1537:
ARM GAS  /tmp/ccgiIQCZ.s 			page 389


3641:src/keys.c    **** 	NonProgrammable = 0;
 14296              		.loc 1 3641 7 is_stmt 1 view .LVU4372
3641:src/keys.c    **** 	NonProgrammable = 0;
 14297              		.loc 1 3641 11 is_stmt 0 view .LVU4373
 14298 1de8 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3641:src/keys.c    **** 	NonProgrammable = 0;
 14299              		.loc 1 3641 10 view .LVU4374
 14300 1dec 5206     		lsls	r2, r2, #25
 14301 1dee 08D5     		bpl	.L1168
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14302              		.loc 1 3642 2 is_stmt 1 view .LVU4375
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14303              		.loc 1 3642 18 is_stmt 0 view .LVU4376
 14304 1df0 554A     		ldr	r2, .L1458
3643:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14305              		.loc 1 3643 32 view .LVU4377
 14306 1df2 40F2CF15 		movw	r5, #463
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14307              		.loc 1 3642 18 view .LVU4378
 14308 1df6 1360     		str	r3, [r2]
3643:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14309              		.loc 1 3643 2 is_stmt 1 view .LVU4379
 14310 1df8 FEF7D1BC 		b	.L1105
 14311              	.LVL1214:
 14312              	.L1165:
 14313              	.LBB1538:
 14314              	.LBB1464:
 14315              	.LBB1404:
 14316              	.LBB984:
1336:src/keys.c    ****      case (K21): // x<->y key
 14317              		.loc 1 1336 37 is_stmt 0 view .LVU4380
 14318 1dfc 4FF48174 		mov	r4, #258
 14319 1e00 68E5     		b	.L1048
 14320              	.LVL1215:
 14321              	.L1168:
1371:src/keys.c    ****        }
 14322              		.loc 1 1371 10 view .LVU4381
 14323 1e02 40F2CF14 		movw	r4, #463
 14324 1e06 65E5     		b	.L1048
 14325              	.LVL1216:
 14326              	.L1441:
1348:src/keys.c    ****        }
 14327              		.loc 1 1348 3 is_stmt 1 view .LVU4382
 14328 1e08 DBF80030 		ldr	r3, [fp]
 14329 1e0c 93F8DE27 		ldrb	r2, [r3, #2014]	@ zero_extendqisi2
 14330 1e10 6FF3C302 		bfc	r2, #3, #1
 14331 1e14 83F8DE27 		strb	r2, [r3, #2014]
 14332 1e18 31E7     		b	.L1065
 14333              	.LVL1217:
 14334              	.L1072:
1348:src/keys.c    ****        }
 14335              		.loc 1 1348 3 is_stmt 0 view .LVU4383
 14336              	.LBE984:
 14337              	.LBE1404:
 14338              	.LBE1464:
 14339              	.LBE1538:
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
ARM GAS  /tmp/ccgiIQCZ.s 			page 390


 14340              		.loc 1 3642 2 is_stmt 1 view .LVU4384
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14341              		.loc 1 3642 18 is_stmt 0 view .LVU4385
 14342 1e1a 4B4A     		ldr	r2, .L1458
3643:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14343              		.loc 1 3643 32 view .LVU4386
 14344 1e1c 40F22F65 		movw	r5, #1583
3642:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14345              		.loc 1 3642 18 view .LVU4387
 14346 1e20 1360     		str	r3, [r2]
3643:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14347              		.loc 1 3643 2 is_stmt 1 view .LVU4388
 14348 1e22 FEF7BCBC 		b	.L1105
 14349              	.LVL1218:
 14350              	.L1106:
3641:src/keys.c    **** 	NonProgrammable = 0;
 14351              		.loc 1 3641 26 is_stmt 0 view .LVU4389
 14352 1e26 484A     		ldr	r2, .L1458
 14353 1e28 1368     		ldr	r3, [r2]
 14354 1e2a 2546     		mov	r5, r4
 14355 1e2c 002B     		cmp	r3, #0
 14356 1e2e 7EF4CCAB 		bne	.L1107
3641:src/keys.c    **** 	NonProgrammable = 0;
 14357              		.loc 1 3641 26 view .LVU4390
 14358 1e32 FEF75BBB 		b	.L1108
 14359              	.LVL1219:
 14360              	.L1428:
 14361              	.LBB1539:
 14362              	.LBB1465:
 14363              	.LBB1405:
 14364              	.LBB1085:
3003:src/keys.c    **** 		State2.digval = pc;
 14365              		.loc 1 3003 4 is_stmt 1 view .LVU4391
3003:src/keys.c    **** 		State2.digval = pc;
 14366              		.loc 1 3003 9 is_stmt 0 view .LVU4392
 14367 1e36 2046     		mov	r0, r4
 14368 1e38 0121     		movs	r1, #1
 14369 1e3a FFF7FEFF 		bl	advance_to_next_label
 14370              	.LVL1220:
 14371 1e3e 0446     		mov	r4, r0
 14372              	.LVL1221:
3003:src/keys.c    **** 		State2.digval = pc;
 14373              		.loc 1 3003 9 view .LVU4393
 14374 1e40 E5E4     		b	.L951
 14375              	.LVL1222:
 14376              	.L987:
3003:src/keys.c    **** 		State2.digval = pc;
 14377              		.loc 1 3003 9 view .LVU4394
 14378              	.LBE1085:
 14379              	.LBE1405:
 14380              	.LBB1406:
 14381              	.LBB1322:
3156:src/keys.c    **** 		goto reset_window;
 14382              		.loc 1 3156 4 is_stmt 1 view .LVU4395
3156:src/keys.c    **** 		goto reset_window;
 14383              		.loc 1 3156 24 is_stmt 0 view .LVU4396
 14384 1e42 0AF1FF3A 		add	r10, r10, #-1
ARM GAS  /tmp/ccgiIQCZ.s 			page 391


 14385              	.LVL1223:
3156:src/keys.c    **** 		goto reset_window;
 14386              		.loc 1 3156 18 view .LVU4397
 14387 1e46 A8F808A0 		strh	r10, [r8, #8]	@ movhi
 14388 1e4a FFF7DDB9 		b	.L979
 14389              	.LVL1224:
 14390              	.L1425:
3152:src/keys.c    **** 			--State2.digval;
 14391              		.loc 1 3152 5 is_stmt 1 view .LVU4398
3152:src/keys.c    **** 			--State2.digval;
 14392              		.loc 1 3152 21 is_stmt 0 view .LVU4399
 14393 1e4e FFF7FEFF 		bl	global_regs
 14394              	.LVL1225:
3152:src/keys.c    **** 			--State2.digval;
 14395              		.loc 1 3152 19 view .LVU4400
 14396 1e52 A8F80800 		strh	r0, [r8, #8]	@ movhi
 14397 1e56 FFF7D2B9 		b	.L988
 14398              	.LVL1226:
 14399              	.L1006:
3152:src/keys.c    **** 			--State2.digval;
 14400              		.loc 1 3152 19 view .LVU4401
 14401              	.LBE1322:
 14402              	.LBE1406:
 14403              	.LBB1407:
 14404              	.LBB1045:
 14405              	.LBB1039:
1878:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 14406              		.loc 1 1878 3 is_stmt 1 view .LVU4402
1878:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 14407              		.loc 1 1878 6 is_stmt 0 view .LVU4403
 14408 1e5a BAF1010F 		cmp	r10, #1
 14409 1e5e 7EF49AAB 		bne	.L1005
1879:src/keys.c    **** 		break;
 14410              		.loc 1 1879 11 view .LVU4404
 14411 1e62 40F23B14 		movw	r4, #315
 14412 1e66 FEF79BBB 		b	.L1021
 14413              	.L1008:
1864:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 14414              		.loc 1 1864 3 is_stmt 1 view .LVU4405
1864:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 14415              		.loc 1 1864 6 is_stmt 0 view .LVU4406
 14416 1e6a BAF1010F 		cmp	r10, #1
 14417 1e6e 2DD0     		beq	.L1443
1866:src/keys.c    **** 			return OP_NIL | OP_OFF;
 14418              		.loc 1 1866 8 is_stmt 1 view .LVU4407
1866:src/keys.c    **** 			return OP_NIL | OP_OFF;
 14419              		.loc 1 1866 11 is_stmt 0 view .LVU4408
 14420 1e70 BAF1030F 		cmp	r10, #3
 14421 1e74 26D0     		beq	.L1163
1868:src/keys.c    **** #ifdef DM42
 14422              		.loc 1 1868 8 is_stmt 1 view .LVU4409
1868:src/keys.c    **** #ifdef DM42
 14423              		.loc 1 1868 11 is_stmt 0 view .LVU4410
 14424 1e76 BAF1000F 		cmp	r10, #0
 14425 1e7a 7FF445AD 		bne	.L1016
1870:src/keys.c    **** 		  display_current_menu();
 14426              		.loc 1 1870 5 is_stmt 1 view .LVU4411
ARM GAS  /tmp/ccgiIQCZ.s 			page 392


 14427 1e7e 4FF0FF30 		mov	r0, #-1
 14428              	.LVL1227:
1870:src/keys.c    **** 		  display_current_menu();
 14429              		.loc 1 1870 5 is_stmt 0 view .LVU4412
 14430 1e82 FFF7FEFF 		bl	set_menu
 14431              	.LVL1228:
1871:src/keys.c    **** #endif
 14432              		.loc 1 1871 5 is_stmt 1 view .LVU4413
 14433 1e86 FFF7FEFF 		bl	display_current_menu
 14434              	.LVL1229:
1873:src/keys.c    **** 		}
 14435              		.loc 1 1873 5 view .LVU4414
 14436 1e8a FFF7FEFF 		bl	init_state
 14437              	.LVL1230:
 14438 1e8e 3BE5     		b	.L1016
 14439              	.LVL1231:
 14440              	.L1009:
1852:src/keys.c    **** 	    if ( State2.runmode ) {
 14441              		.loc 1 1852 4 view .LVU4415
1852:src/keys.c    **** 	    if ( State2.runmode ) {
 14442              		.loc 1 1852 7 is_stmt 0 view .LVU4416
 14443 1e90 BAF1000F 		cmp	r10, #0
 14444 1e94 7EF47FAB 		bne	.L1005
1853:src/keys.c    **** 	      // Alpha scroll right
 14445              		.loc 1 1853 6 is_stmt 1 view .LVU4417
1853:src/keys.c    **** 	      // Alpha scroll right
 14446              		.loc 1 1853 9 is_stmt 0 view .LVU4418
 14447 1e98 5406     		lsls	r4, r2, #25
 14448 1e9a 7EF5D7AA 		bpl	.L1026
1855:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
 14449              		.loc 1 1855 8 is_stmt 1 view .LVU4419
1855:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
 14450              		.loc 1 1855 11 is_stmt 0 view .LVU4420
 14451 1e9e 002B     		cmp	r3, #0
 14452 1ea0 3FF432AD 		beq	.L1016
1856:src/keys.c    **** 	      return STATE_UNFINISHED;
 14453              		.loc 1 1856 3 is_stmt 1 view .LVU4421
1856:src/keys.c    **** 	      return STATE_UNFINISHED;
 14454              		.loc 1 1856 31 is_stmt 0 view .LVU4422
 14455 1ea4 013B     		subs	r3, r3, #1
 14456              	.LVL1232:
1856:src/keys.c    **** 	      return STATE_UNFINISHED;
 14457              		.loc 1 1856 20 view .LVU4423
 14458 1ea6 88F80D30 		strb	r3, [r8, #13]
 14459 1eaa 2DE5     		b	.L1016
 14460              	.LVL1233:
 14461              	.L1023:
1856:src/keys.c    **** 	      return STATE_UNFINISHED;
 14462              		.loc 1 1856 20 view .LVU4424
 14463 1eac 0193     		str	r3, [sp, #4]
1836:src/keys.c    **** 		alpha_pos += 1;
 14464              		.loc 1 1836 33 view .LVU4425
 14465 1eae FFF7FEFF 		bl	alen
 14466              	.LVL1234:
1836:src/keys.c    **** 		alpha_pos += 1;
 14467              		.loc 1 1836 41 view .LVU4426
 14468 1eb2 019B     		ldr	r3, [sp, #4]
ARM GAS  /tmp/ccgiIQCZ.s 			page 393


 14469 1eb4 03EB4302 		add	r2, r3, r3, lsl #1
1836:src/keys.c    **** 		alpha_pos += 1;
 14470              		.loc 1 1836 39 view .LVU4427
 14471 1eb8 A0EB4200 		sub	r0, r0, r2, lsl #1
1836:src/keys.c    **** 		alpha_pos += 1;
 14472              		.loc 1 1836 29 view .LVU4428
 14473 1ebc 0B28     		cmp	r0, #11
 14474 1ebe 3FF61EAD 		bhi	.L1025
1836:src/keys.c    **** 		alpha_pos += 1;
 14475              		.loc 1 1836 29 view .LVU4429
 14476 1ec2 1EE5     		b	.L1024
 14477              	.LVL1235:
 14478              	.L1163:
1867:src/keys.c    **** 		else if (shift == SHIFT_N) {
 14479              		.loc 1 1867 11 view .LVU4430
 14480 1ec4 4FF48174 		mov	r4, #258
 14481 1ec8 FEF76ABB 		b	.L1021
 14482              	.L1443:
1865:src/keys.c    **** 		else if (shift == SHIFT_H)
 14483              		.loc 1 1865 4 is_stmt 1 view .LVU4431
1865:src/keys.c    **** 		else if (shift == SHIFT_H)
 14484              		.loc 1 1865 34 is_stmt 0 view .LVU4432
 14485 1ecc 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 14486              	.LVL1236:
1865:src/keys.c    **** 		else if (shift == SHIFT_H)
 14487              		.loc 1 1865 34 view .LVU4433
 14488 1ed0 C3F30012 		ubfx	r2, r3, #4, #1
1865:src/keys.c    **** 		else if (shift == SHIFT_H)
 14489              		.loc 1 1865 26 view .LVU4434
 14490 1ed4 C2F10102 		rsb	r2, r2, #1
1865:src/keys.c    **** 		else if (shift == SHIFT_H)
 14491              		.loc 1 1865 22 view .LVU4435
 14492 1ed8 62F30413 		bfi	r3, r2, #4, #1
 14493 1edc 88F81630 		strb	r3, [r8, #22]
 14494 1ee0 12E5     		b	.L1016
 14495              	.LVL1237:
 14496              	.L1427:
1865:src/keys.c    **** 		else if (shift == SHIFT_H)
 14497              		.loc 1 1865 22 view .LVU4436
 14498              	.LBE1039:
 14499              	.LBE1045:
 14500              	.LBE1407:
 14501              	.LBB1408:
 14502              	.LBB985:
1294:src/keys.c    ****    }
 14503              		.loc 1 1294 6 is_stmt 1 view .LVU4437
1294:src/keys.c    ****    }
 14504              		.loc 1 1294 13 is_stmt 0 view .LVU4438
 14505 1ee2 2046     		mov	r0, r4
 14506 1ee4 FFF7FEFF 		bl	process_h_shifted
 14507              	.LVL1238:
 14508 1ee8 0446     		mov	r4, r0
 14509              	.LVL1239:
1294:src/keys.c    ****    }
 14510              		.loc 1 1294 13 view .LVU4439
 14511 1eea FEF763BA 		b	.L834
 14512              	.LVL1240:
ARM GAS  /tmp/ccgiIQCZ.s 			page 394


 14513              	.L1409:
1294:src/keys.c    ****    }
 14514              		.loc 1 1294 13 view .LVU4440
 14515              	.LBE985:
 14516              	.LBE1408:
 14517              	.LBB1409:
 14518              	.LBB1197:
2862:src/keys.c    **** 		State2.numdigit = 2;
 14519              		.loc 1 2862 3 is_stmt 1 view .LVU4441
2863:src/keys.c    **** 		return STATE_UNFINISHED;
 14520              		.loc 1 2863 19 is_stmt 0 view .LVU4442
 14521 1eee 0222     		movs	r2, #2
2862:src/keys.c    **** 		State2.numdigit = 2;
 14522              		.loc 1 2862 18 view .LVU4443
 14523 1ef0 88F80A40 		strb	r4, [r8, #10]
2863:src/keys.c    **** 		return STATE_UNFINISHED;
 14524              		.loc 1 2863 3 is_stmt 1 view .LVU4444
 14525 1ef4 3368     		ldr	r3, [r6]
2863:src/keys.c    **** 		return STATE_UNFINISHED;
 14526              		.loc 1 2863 19 is_stmt 0 view .LVU4445
 14527 1ef6 88F80B20 		strb	r2, [r8, #11]
2864:src/keys.c    **** 	}
 14528              		.loc 1 2864 3 is_stmt 1 view .LVU4446
2864:src/keys.c    **** 	}
 14529              		.loc 1 2864 10 is_stmt 0 view .LVU4447
 14530 1efa 3324     		movs	r4, #51
 14531              	.LVL1241:
2864:src/keys.c    **** 	}
 14532              		.loc 1 2864 10 view .LVU4448
 14533 1efc FEF7DDB8 		b	.L799
 14534              	.LVL1242:
 14535              	.L1421:
2864:src/keys.c    **** 	}
 14536              		.loc 1 2864 10 view .LVU4449
 14537              	.LBE1197:
 14538              	.LBE1409:
 14539              	.LBB1410:
 14540              	.LBB1323:
3127:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 14541              		.loc 1 3127 3 is_stmt 1 view .LVU4450
3127:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 14542              		.loc 1 3127 7 is_stmt 0 view .LVU4451
 14543 1f00 FFF7FEFF 		bl	local_regs
 14544              	.LVL1243:
3127:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 14545              		.loc 1 3127 6 view .LVU4452
 14546 1f04 68B1     		cbz	r0, .L977
3128:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 14547              		.loc 1 3128 4 is_stmt 1 view .LVU4453
3128:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 14548              		.loc 1 3128 19 is_stmt 0 view .LVU4454
 14549 1f06 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3128:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 14550              		.loc 1 3128 34 view .LVU4455
 14551 1f0a 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
3128:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 14552              		.loc 1 3128 19 view .LVU4456
ARM GAS  /tmp/ccgiIQCZ.s 			page 395


 14553 1f0e 03F00101 		and	r1, r3, #1
3128:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 14554              		.loc 1 3128 34 view .LVU4457
 14555 1f12 0A43     		orrs	r2, r1, r2
 14556 1f14 0CBF     		ite	eq
 14557 1f16 0122     		moveq	r2, #1
 14558 1f18 0022     		movne	r2, #0
3128:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 14559              		.loc 1 3128 17 view .LVU4458
 14560 1f1a 62F30003 		bfi	r3, r2, #0, #1
 14561 1f1e 88F81630 		strb	r3, [r8, #22]
 14562              	.L977:
3129:src/keys.c    **** 		goto reset_window;
 14563              		.loc 1 3129 3 is_stmt 1 view .LVU4459
3129:src/keys.c    **** 		goto reset_window;
 14564              		.loc 1 3129 32 is_stmt 0 view .LVU4460
 14565 1f22 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3129:src/keys.c    **** 		goto reset_window;
 14566              		.loc 1 3129 17 view .LVU4461
 14567 1f26 13F0010F 		tst	r3, #1
 14568 1f2a 14BF     		ite	ne
 14569 1f2c 0023     		movne	r3, #0
 14570 1f2e 6423     		moveq	r3, #100
 14571 1f30 A8F80830 		strh	r3, [r8, #8]	@ movhi
3130:src/keys.c    **** 	}
 14572              		.loc 1 3130 3 is_stmt 1 view .LVU4462
 14573 1f34 FFF768B9 		b	.L979
 14574              	.LVL1244:
 14575              	.L940:
3130:src/keys.c    **** 	}
 14576              		.loc 1 3130 3 is_stmt 0 view .LVU4463
 14577              	.LBE1323:
 14578              	.LBE1410:
 14579              	.LBB1411:
 14580              	.LBB1198:
2836:src/keys.c    **** 			return STATE_UNFINISHED;
 14581              		.loc 1 2836 5 is_stmt 1 view .LVU4464
2836:src/keys.c    **** 			return STATE_UNFINISHED;
 14582              		.loc 1 2836 20 is_stmt 0 view .LVU4465
 14583 1f38 013A     		subs	r2, r2, #1
 14584 1f3a 3368     		ldr	r3, [r6]
 14585 1f3c 88F80B20 		strb	r2, [r8, #11]
2837:src/keys.c    **** 		}
 14586              		.loc 1 2837 11 view .LVU4466
 14587 1f40 3324     		movs	r4, #51
 14588              	.LVL1245:
2837:src/keys.c    **** 		}
 14589              		.loc 1 2837 11 view .LVU4467
 14590 1f42 FEF7BAB8 		b	.L799
 14591              	.L1459:
 14592 1f46 00BF     		.align	2
 14593              	.L1458:
 14594 1f48 00000000 		.word	NonProgrammable
 14595              	.LBE1198:
 14596              	.LBE1411:
 14597              	.LBE1465:
 14598              	.LBE1539:
ARM GAS  /tmp/ccgiIQCZ.s 			page 396


 14599              		.cfi_endproc
 14600              	.LFE63:
 14602              		.section	.text.process_keycode_with_shift,"ax",%progbits
 14603              		.align	1
 14604              		.p2align 2,,3
 14605              		.global	process_keycode_with_shift
 14606              		.syntax unified
 14607              		.thumb
 14608              		.thumb_func
 14609              		.fpu fpv4-sp-d16
 14611              	process_keycode_with_shift:
 14612              	.LFB62:
3377:src/keys.c    ****    if (remapped.key_34s == K_NOP) {
 14613              		.loc 1 3377 61 is_stmt 1 view -0
 14614              		.cfi_startproc
 14615              		@ args = 0, pretend = 0, frame = 8
 14616              		@ frame_needed = 0, uses_anonymous_args = 0
 14617 0000 30B5     		push	{r4, r5, lr}
 14618              		.cfi_def_cfa_offset 12
 14619              		.cfi_offset 4, -12
 14620              		.cfi_offset 5, -8
 14621              		.cfi_offset 14, -4
 14622 0002 83B0     		sub	sp, sp, #12
 14623              		.cfi_def_cfa_offset 24
3377:src/keys.c    ****    if (remapped.key_34s == K_NOP) {
 14624              		.loc 1 3377 61 is_stmt 0 view .LVU4469
 14625 0004 02AB     		add	r3, sp, #8
 14626 0006 03E90300 		stmdb	r3, {r0, r1}
 14627 000a 9DF80040 		ldrb	r4, [sp]	@ zero_extendqisi2
 14628              	.LVL1246:
3378:src/keys.c    ****      WasDataEntry = 0; // makes sure display is updated properly with status messages
 14629              		.loc 1 3378 4 is_stmt 1 view .LVU4470
3378:src/keys.c    ****      WasDataEntry = 0; // makes sure display is updated properly with status messages
 14630              		.loc 1 3378 7 is_stmt 0 view .LVU4471
 14631 000e 2E2C     		cmp	r4, #46
 14632 0010 10D0     		beq	.L1469
3382:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 14633              		.loc 1 3382 4 is_stmt 1 view .LVU4472
3382:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 14634              		.loc 1 3382 7 is_stmt 0 view .LVU4473
 14635 0012 332C     		cmp	r4, #51
 14636 0014 20D0     		beq	.L1470
3391:src/keys.c    ****      nd_opcode = remapped.shift;
 14637              		.loc 1 3391 7 view .LVU4474
 14638 0016 342C     		cmp	r4, #52
 14639 0018 019D     		ldr	r5, [sp, #4]
3391:src/keys.c    ****      nd_opcode = remapped.shift;
 14640              		.loc 1 3391 4 is_stmt 1 view .LVU4475
3391:src/keys.c    ****      nd_opcode = remapped.shift;
 14641              		.loc 1 3391 7 is_stmt 0 view .LVU4476
 14642 001a 10D0     		beq	.L1471
3395:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14643              		.loc 1 3395 9 is_stmt 1 view .LVU4477
3395:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14644              		.loc 1 3395 12 is_stmt 0 view .LVU4478
 14645 001c 002D     		cmp	r5, #0
 14646 001e 03DB     		blt	.L1466
ARM GAS  /tmp/ccgiIQCZ.s 			page 397


3395:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14647              		.loc 1 3395 34 is_stmt 1 discriminator 1 view .LVU4479
 14648              	.LVL1247:
 14649              	.LBB1540:
 14650              	.LBI1540:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14651              		.loc 1 104 20 discriminator 1 view .LVU4480
 14652              	.LBB1541:
 105:src/keys.c    **** 	State2.shifts = shift;
 14653              		.loc 1 105 2 discriminator 1 view .LVU4481
 14654              	.LBB1542:
 14655              	.LBI1542:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 14656              		.loc 1 96 13 discriminator 1 view .LVU4482
 14657              	.LBB1543:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14658              		.loc 1 97 2 discriminator 1 view .LVU4483
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14659              		.loc 1 97 18 is_stmt 0 discriminator 1 view .LVU4484
 14660 0020 FFF7FEFF 		bl	shift_down
 14661              	.LVL1248:
  98:src/keys.c    **** }
 14662              		.loc 1 98 2 is_stmt 1 discriminator 1 view .LVU4485
 14663              	.LBE1543:
 14664              	.LBE1542:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14665              		.loc 1 106 2 discriminator 1 view .LVU4486
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14666              		.loc 1 106 16 is_stmt 0 discriminator 1 view .LVU4487
 14667 0024 1A4B     		ldr	r3, .L1472
 14668              	.LBE1541:
 14669              	.LBE1540:
3395:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14670              		.loc 1 3395 34 discriminator 1 view .LVU4488
 14671 0026 1D74     		strb	r5, [r3, #16]
 14672              	.LBB1545:
 14673              	.LBB1544:
 108:src/keys.c    **** }
 14674              		.loc 1 108 2 is_stmt 1 discriminator 1 view .LVU4489
 14675              	.LVL1249:
 14676              	.L1466:
 108:src/keys.c    **** }
 14677              		.loc 1 108 2 is_stmt 0 discriminator 1 view .LVU4490
 14678              	.LBE1544:
 14679              	.LBE1545:
3396:src/keys.c    ****  }
 14680              		.loc 1 3396 4 is_stmt 1 view .LVU4491
 14681 0028 2046     		mov	r0, r4
3397:src/keys.c    ****  
 14682              		.loc 1 3397 2 is_stmt 0 view .LVU4492
 14683 002a 03B0     		add	sp, sp, #12
 14684              		.cfi_remember_state
 14685              		.cfi_def_cfa_offset 12
 14686              		@ sp needed
 14687 002c BDE83040 		pop	{r4, r5, lr}
 14688              		.cfi_restore 14
 14689              		.cfi_restore 5
ARM GAS  /tmp/ccgiIQCZ.s 			page 398


 14690              		.cfi_restore 4
 14691              		.cfi_def_cfa_offset 0
 14692              	.LVL1250:
3396:src/keys.c    ****  }
 14693              		.loc 1 3396 4 view .LVU4493
 14694 0030 FFF7FEBF 		b	process_keycode
 14695              	.LVL1251:
 14696              	.L1469:
 14697              		.cfi_restore_state
3379:src/keys.c    ****      return;
 14698              		.loc 1 3379 6 is_stmt 1 view .LVU4494
3379:src/keys.c    ****      return;
 14699              		.loc 1 3379 19 is_stmt 0 view .LVU4495
 14700 0034 174B     		ldr	r3, .L1472+4
 14701 0036 0022     		movs	r2, #0
 14702 0038 1A60     		str	r2, [r3]
3380:src/keys.c    ****    }
 14703              		.loc 1 3380 6 is_stmt 1 view .LVU4496
3397:src/keys.c    ****  
 14704              		.loc 1 3397 2 is_stmt 0 view .LVU4497
 14705 003a 03B0     		add	sp, sp, #12
 14706              		.cfi_remember_state
 14707              		.cfi_def_cfa_offset 12
 14708              		@ sp needed
 14709 003c 30BD     		pop	{r4, r5, pc}
 14710              	.LVL1252:
 14711              	.L1471:
 14712              		.cfi_restore_state
3392:src/keys.c    ****      set_shift(SHIFT_N);
 14713              		.loc 1 3392 6 is_stmt 1 view .LVU4498
3392:src/keys.c    ****      set_shift(SHIFT_N);
 14714              		.loc 1 3392 16 is_stmt 0 view .LVU4499
 14715 003e 164B     		ldr	r3, .L1472+8
 14716 0040 1D60     		str	r5, [r3]
3393:src/keys.c    ****    }
 14717              		.loc 1 3393 6 is_stmt 1 view .LVU4500
 14718              	.LVL1253:
 14719              	.LBB1546:
 14720              	.LBI1546:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14721              		.loc 1 104 20 view .LVU4501
 14722              	.LBB1547:
 105:src/keys.c    **** 	State2.shifts = shift;
 14723              		.loc 1 105 2 view .LVU4502
 14724              	.LBB1548:
 14725              	.LBI1548:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 14726              		.loc 1 96 13 view .LVU4503
 14727              	.LBB1549:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14728              		.loc 1 97 2 view .LVU4504
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14729              		.loc 1 97 18 is_stmt 0 view .LVU4505
 14730 0042 FFF7FEFF 		bl	shift_down
 14731              	.LVL1254:
  98:src/keys.c    **** }
 14732              		.loc 1 98 2 is_stmt 1 view .LVU4506
ARM GAS  /tmp/ccgiIQCZ.s 			page 399


 14733              	.LBE1549:
 14734              	.LBE1548:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14735              		.loc 1 106 2 view .LVU4507
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14736              		.loc 1 106 16 is_stmt 0 view .LVU4508
 14737 0046 124B     		ldr	r3, .L1472
 14738 0048 0022     		movs	r2, #0
 14739              	.LBE1547:
 14740              	.LBE1546:
3396:src/keys.c    ****  }
 14741              		.loc 1 3396 4 view .LVU4509
 14742 004a 2046     		mov	r0, r4
 14743              	.LBB1551:
 14744              	.LBB1550:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14745              		.loc 1 106 16 view .LVU4510
 14746 004c 1A74     		strb	r2, [r3, #16]
 108:src/keys.c    **** }
 14747              		.loc 1 108 2 is_stmt 1 view .LVU4511
 14748              	.LVL1255:
 108:src/keys.c    **** }
 14749              		.loc 1 108 2 is_stmt 0 view .LVU4512
 14750              	.LBE1550:
 14751              	.LBE1551:
3396:src/keys.c    ****  }
 14752              		.loc 1 3396 4 is_stmt 1 view .LVU4513
3397:src/keys.c    ****  
 14753              		.loc 1 3397 2 is_stmt 0 view .LVU4514
 14754 004e 03B0     		add	sp, sp, #12
 14755              		.cfi_remember_state
 14756              		.cfi_def_cfa_offset 12
 14757              		@ sp needed
 14758 0050 BDE83040 		pop	{r4, r5, lr}
 14759              		.cfi_restore 14
 14760              		.cfi_restore 5
 14761              		.cfi_restore 4
 14762              		.cfi_def_cfa_offset 0
 14763              	.LVL1256:
3396:src/keys.c    ****  }
 14764              		.loc 1 3396 4 view .LVU4515
 14765 0054 FFF7FEBF 		b	process_keycode
 14766              	.LVL1257:
 14767              	.L1470:
 14768              		.cfi_restore_state
3383:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 14769              		.loc 1 3383 6 is_stmt 1 view .LVU4516
 14770 0058 104B     		ldr	r3, .L1472+12
 14771 005a 41F23010 		movw	r0, #4400
 14772 005e 9847     		blx	r3
 14773              	.LVL1258:
3383:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 14774              		.loc 1 3383 31 view .LVU4517
 14775 0060 0A20     		movs	r0, #10
 14776 0062 0F4B     		ldr	r3, .L1472+16
 14777 0064 9847     		blx	r3
 14778              	.LVL1259:
ARM GAS  /tmp/ccgiIQCZ.s 			page 400


3383:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 14779              		.loc 1 3383 46 view .LVU4518
 14780 0066 0F4B     		ldr	r3, .L1472+20
 14781 0068 9847     		blx	r3
 14782              	.LVL1260:
3384:src/keys.c    ****        // Was error just wait for confirmation
 14783              		.loc 1 3384 6 view .LVU4519
3384:src/keys.c    ****        // Was error just wait for confirmation
 14784              		.loc 1 3384 11 is_stmt 0 view .LVU4520
 14785 006a 0F4B     		ldr	r3, .L1472+24
 14786 006c 0120     		movs	r0, #1
 14787 006e 9847     		blx	r3
 14788              	.LVL1261:
3384:src/keys.c    ****        // Was error just wait for confirmation
 14789              		.loc 1 3384 9 view .LVU4521
 14790 0070 0228     		cmp	r0, #2
 14791 0072 01D1     		bne	.L1464
3386:src/keys.c    ****      }
 14792              		.loc 1 3386 8 is_stmt 1 view .LVU4522
 14793 0074 0D4B     		ldr	r3, .L1472+28
 14794 0076 9847     		blx	r3
 14795              	.LVL1262:
 14796              	.L1464:
3388:src/keys.c    ****      return;
 14797              		.loc 1 3388 6 view .LVU4523
 14798 0078 084B     		ldr	r3, .L1472+12
 14799 007a 42F26020 		movw	r0, #8800
 14800 007e 9847     		blx	r3
 14801              	.LVL1263:
3388:src/keys.c    ****      return;
 14802              		.loc 1 3388 31 view .LVU4524
 14803 0080 074B     		ldr	r3, .L1472+16
 14804 0082 0A20     		movs	r0, #10
 14805 0084 9847     		blx	r3
 14806              	.LVL1264:
3388:src/keys.c    ****      return;
 14807              		.loc 1 3388 46 view .LVU4525
 14808 0086 074B     		ldr	r3, .L1472+20
3397:src/keys.c    ****  
 14809              		.loc 1 3397 2 is_stmt 0 view .LVU4526
 14810 0088 03B0     		add	sp, sp, #12
 14811              		.cfi_def_cfa_offset 12
 14812              		@ sp needed
 14813 008a BDE83040 		pop	{r4, r5, lr}
 14814              		.cfi_restore 14
 14815              		.cfi_restore 5
 14816              		.cfi_restore 4
 14817              		.cfi_def_cfa_offset 0
 14818              	.LVL1265:
3388:src/keys.c    ****      return;
 14819              		.loc 1 3388 46 view .LVU4527
 14820 008e 1847     		bx	r3	@ indirect register sibling call
 14821              	.LVL1266:
 14822              	.L1473:
 14823              		.align	2
 14824              	.L1472:
 14825 0090 00000000 		.word	StateWhileOn
ARM GAS  /tmp/ccgiIQCZ.s 			page 401


 14826 0094 00000000 		.word	WasDataEntry
 14827 0098 00000000 		.word	nd_opcode
 14828 009c F5020008 		.word	134218485
 14829 00a0 05040008 		.word	134218757
 14830 00a4 F9020008 		.word	134218489
 14831 00a8 79030008 		.word	134218617
 14832 00ac 99030008 		.word	134218649
 14833              		.cfi_endproc
 14834              	.LFE62:
 14836              		.comm	nd_opcode,4,4
 14837              		.comm	NonProgrammable,4,4
 14838              		.comm	GoFast,4,4
 14839              		.comm	OpCodeDisplayPending,4,4
 14840              		.comm	OpCode,4,4
 14841              		.comm	WasDataEntry,4,4
 14842              		.section	.bss.was_paused.9961,"aw",%nobits
 14843              		.align	2
 14844              		.set	.LANCHOR18,. + 0
 14847              	was_paused.9961:
 14848 0000 00000000 		.space	4
 14849              		.section	.rodata.alpha_arrows,"a"
 14850              		.align	2
 14853              	alpha_arrows:
 14854 0000 0D0E100F 		.ascii	"\015\016\020\017\003\004\237^\177"
 14854      03049F5E 
 14854      7F
 14855              		.section	.rodata.alpha_catalogue,"a"
 14856              		.align	2
 14859              	alpha_catalogue:
 14860 0000 0D4AC280 		.ascii	"\015J\302\200\236\267J\242~\332\267\255\373\202\341"
 14860      9EB74AA2 
 14860      7EDAB7AD 
 14860      FB82E1
 14861 000f 284AB0   		.ascii	"(J\260"
 14862              		.section	.rodata.alpha_compares,"a"
 14863              		.align	2
 14866              	alpha_compares:
 14867 0000 3C093D1D 		.ascii	"<\011=\035\012>[]{}"
 14867      0A3E5B5D 
 14867      7B7D
 14868              		.section	.rodata.alpha_letters,"a"
 14869              		.align	2
 14870              		.set	.LANCHOR9,. + 0
 14873              	alpha_letters:
 14874 0000 C0C1C2C3 		.ascii	"\300\301\302\303\210\304\305\306\307\204\310\311\312"
 14874      88C4C5C6 
 14874      C784C8C9 
 14874      CA
 14875 000d CB9ECCCD 		.ascii	"\313\236\314\315\316\317\320\321\322\323\324\025\325"
 14875      CECFD0D1 
 14875      D2D3D415 
 14875      D5
 14876 001a D618D8D9 		.ascii	"\326\030\330\331\332\333\334\001\031\002\335\032\336"
 14876      DADBDC01 
 14876      1902DD1A 
 14876      DE
 14877 0027 DF       		.ascii	"\337"
ARM GAS  /tmp/ccgiIQCZ.s 			page 402


 14878              		.section	.rodata.alpha_letters_lower,"a"
 14879              		.align	2
 14880              		.set	.LANCHOR10,. + 0
 14883              	alpha_letters_lower:
 14884 0000 E0E1E2E3 		.ascii	"\340\341\342\343\211\344\345\346\347\205\350\351\352"
 14884      89E4E5E6 
 14884      E785E8E9 
 14884      EA
 14885 000d EB9EECED 		.ascii	"\353\236\354\355\356\357\360\361\362\363\364\026\365"
 14885      EEEFF0F1 
 14885      F2F3F416 
 14885      F5
 14886 001a F618F8F9 		.ascii	"\366\030\370\371\372\373\374\001\031\002\375\032\376"
 14886      FAFBFC01 
 14886      1902FD1A 
 14886      FE
 14887 0027 FF       		.ascii	"\377"
 14888              		.section	.rodata.alpha_subscripts,"a"
 14889              		.align	2
 14892              	alpha_subscripts:
 14893 0000 B805B9BA 		.ascii	"\270\005\271\272\232\200\327\230\273\024\206\274\367"
 14893      9A80D798 
 14893      BB1486BC 
 14893      F7
 14894 000d 1BBDBE93 		.ascii	"\033\275\276\223\277\201\213\234\214\231\235\220\233"
 14894      BF818B9C 
 14894      8C999D90 
 14894      9B
 14895              		.section	.rodata.alpha_symbols,"a"
 14896              		.align	2
 14899              	alpha_symbols:
 14900 0000 2C3A3B27 		.ascii	",:;'\"*@_~%$\014\036\037\216\256\222`#"
 14900      222A405F 
 14900      7E25240C 
 14900      1E1F8EAE 
 14900      926023
 14901              		.section	.rodata.alphamap.9444,"a"
 14902              		.align	2
 14903              		.set	.LANCHOR15,. + 0
 14906              	alphamap.9444:
 14907 0000 41004100 		.ascii	"A\000A\000a\240"
 14907      61A0
 14908 0006 42004200 		.ascii	"B\000B\000b\241"
 14908      62A1
 14909 000c 43008200 		.ascii	"C\000\202\000c\242"
 14909      63A2
 14910 0012 44008300 		.ascii	"D\000\203\000d\243"
 14910      64A3
 14911 0018 450D4500 		.ascii	"E\015E\000e\244"
 14911      65A4
 14912 001e 46009400 		.ascii	"F\000\224\000f\264"
 14912      66B4
 14913 0024 47008200 		.ascii	"G\000\202\000g\242"
 14913      67A2
 14914 002a 48005800 		.ascii	"H\000X\000h\265"
 14914      68B5
 14915 0030 49004900 		.ascii	"I\000I\000i\250"
ARM GAS  /tmp/ccgiIQCZ.s 			page 403


 14915      69A8
 14916 0036 4AAF0000 		.ascii	"J\257\000\000j\000"
 14916      6A00
 14917 003c 4B004B00 		.ascii	"K\000K\000k\251"
 14917      6BA9
 14918 0042 4C008A00 		.ascii	"L\000\212\000l\252"
 14918      6CAA
 14919 0048 00004800 		.ascii	"\000\000H\000\000\246"
 14919      00A6
 14920 004e 4D00AB17 		.ascii	"M\000\253\027m\253"
 14920      6DAB
 14921 0054 4E084E95 		.ascii	"N\010N\225n\254"
 14921      6EAC
 14922 005a 4F0097AF 		.ascii	"O\000\227\257o\267"
 14922      6FB7
 14923 0060 00000000 		.ascii	"\000\000\000\000\000\000"
 14923      0000
 14924 0066 00000000 		.ascii	"\000\000\000\000\000\000"
 14924      0000
 14925 006c 50378F26 		.ascii	"P7\217&p\257"
 14925      70AF
 14926 0072 5138007C 		.ascii	"Q8\000|q\000"
 14926      7100
 14927 0078 5239520B 		.ascii	"R9R\013r\260"
 14927      72B0
 14928 007e 532F915C 		.ascii	"S/\221\\s\261"
 14928      73B1
 14929 0084 00000021 		.ascii	"\000\000\000!\000\000"
 14929      0000
 14930 008a 54345400 		.ascii	"T4T\000t\262"
 14930      74B2
 14931 0090 55350000 		.ascii	"U5\000\000u\000"
 14931      7500
 14932 0096 56360000 		.ascii	"V6\000\000v\000"
 14932      7600
 14933 009c 571C0000 		.ascii	"W\034\000\000w\000"
 14933      7700
 14934 00a2 0000003F 		.ascii	"\000\000\000?\000\000"
 14934      0000
 14935 00a8 58318D00 		.ascii	"X1\215\000x\255"
 14935      78AD
 14936 00ae 59325900 		.ascii	"Y2Y\000y\263"
 14936      79B3
 14937 00b4 5A335A00 		.ascii	"Z3Z\000z\245"
 14937      7AA5
 14938 00ba 2D282900 		.ascii	"-()\000\000\000"
 14938      0000
 14939 00c0 00000000 		.ascii	"\000\000\000\000\000\000"
 14939      0000
 14940 00c6 3A308720 		.ascii	":0\207 ;\247"
 14940      3BA7
 14941 00cc 2E2E9600 		.ascii	"..\226\000.\266"
 14941      2EB6
 14942 00d2 3F212100 		.ascii	"?!!\000?!"
 14942      3F21
 14943 00d8 202B3D06 		.ascii	" +=\006  "
 14943      2020
ARM GAS  /tmp/ccgiIQCZ.s 			page 404


 14944 00de 00000000 		.ascii	"\000\000\000\000\000\000"
 14944      0000
 14945              		.section	.rodata.amap.9435,"a"
 14946              		.align	2
 14947              		.set	.LANCHOR16,. + 0
 14950              	amap.9435:
 14951 0000 04       		.byte	4
 14952 0001 000D00   		.ascii	"\000\015\000"
 14953 0004 05       		.byte	5
 14954 0005 000E09   		.ascii	"\000\016\011"
 14955 0008 2C       		.byte	44
 14956 0009 000D00   		.ascii	"\000\015\000"
 14957 000c 2D       		.byte	45
 14958 000d 000E09   		.ascii	"\000\016\011"
 14959 0010 08       		.byte	8
 14960 0011 00000F   		.ascii	"\000\000\017"
 14961 0014 1F       		.byte	31
 14962 0015 00000C   		.ascii	"\000\000\014"
 14963 0018 21       		.byte	33
 14964 0019 00000A   		.ascii	"\000\000\012"
 14965 001c 26       		.byte	38
 14966 001d 00000B   		.ascii	"\000\000\013"
 14967              		.section	.rodata.catalogue,"a"
 14968              		.align	2
 14971              	catalogue:
 14972 0000 49DC26D8 		.ascii	"I\334&\330\301f\031\224D\242;Y\3074}K3Q\011\217jT\225"
 14972      C1661994 
 14972      44A23B59 
 14972      C7347D4B 
 14972      3351098F 
 14973 0017 299E485A 		.ascii	")\236HZ\244\241\020qS\304\365.t\335G\015\304l37q\220"
 14973      A4A11071 
 14973      53C4F52E 
 14973      74DD470D 
 14973      C46C3337 
 14974 002d 719D2481 		.ascii	"q\235$\201\340n\024\006u\265m\033&m\312vL7-\317Kr\264"
 14974      E06E1406 
 14974      75B56D1B 
 14974      266DCA76 
 14974      4C372DCF 
 14975 0044 4B2AC9B2 		.ascii	"K*\311\262tY50\263D0\243t\031\367D5c\214\244\215\"I"
 14975      74593530 
 14975      B34430A3 
 14975      7419F744 
 14975      35638CA4 
 14976 005b 126730AC 		.ascii	"\022g0\254uY\242\200\236\267J\242~\334\266\255\353~"
 14976      7559A280 
 14976      9EB74AA2 
 14976      7EDCB6AD 
 14976      EB7E
 14977 006d E0B86DB2 		.ascii	"\340\270m\262\204\253m\323\366\355\274n[\2479\227j\021"
 14977      84AB6DD3 
 14977      F6EDBC6E 
 14977      5BA73997 
 14977      6A11
 14978 007f B795C077 		.ascii	"\267\225\300w\330\206\025\277"
 14978      D88615BF 
ARM GAS  /tmp/ccgiIQCZ.s 			page 405


 14979              		.section	.rodata.catalogue_sizes.9758,"a"
 14980              		.align	2
 14981              		.set	.LANCHOR8,. + 0
 14984              	catalogue_sizes.9758:
 14985 0000 006C1A11 		.ascii	"\000l\032\0216=X\202&?\016\023\012\011(\032LLX\016\023"
 14985      363D5882 
 14985      263F0E13 
 14985      0A09281A 
 14985      4C4C580E 
 14986              		.section	.rodata.catalogues.9766,"a"
 14987              		.align	2
 14988              		.set	.LANCHOR12,. + 0
 14991              	catalogues.9766:
 14992 0000 00000000 		.word	0
 14993 0004 00000000 		.word	catalogue
 14994 0008 00000000 		.word	cplx_catalogue
 14995 000c 00000000 		.word	stats_catalogue
 14996 0010 00000000 		.word	prob_catalogue
 14997 0014 00000000 		.word	int_catalogue
 14998 0018 00000000 		.word	prog_catalogue
 14999 001c 00000000 		.word	program_xfcn
 15000 0020 00000000 		.word	test_catalogue
 15001 0024 00000000 		.word	mode_catalogue
 15002 0028 00000000 		.word	alpha_catalogue
 15003 002c 00000000 		.word	alpha_symbols
 15004 0030 00000000 		.word	alpha_compares
 15005 0034 00000000 		.word	alpha_arrows
 15006 0038 00000000 		.word	alpha_letters
 15007 003c 00000000 		.word	alpha_subscripts
 15008 0040 00000000 		.word	0
 15009 0044 00000000 		.word	0
 15010 0048 00000000 		.word	0
 15011 004c 00000000 		.word	sums_catalogue
 15012 0050 00000000 		.word	matrix_catalogue
 15013              		.section	.rodata.cmap.9434,"a"
 15014              		.align	2
 15015              		.set	.LANCHOR17,. + 0
 15018              	cmap.9434:
 15019 0000 04       		.byte	4
 15020 0001 120012   		.ascii	"\022\000\022"
 15021 0004 05       		.byte	5
 15022 0005 090909   		.ascii	"\011\011\011"
 15023 0008 06       		.byte	6
 15024 0009 151515   		.ascii	"\025\025\025"
 15025 000c 0C       		.byte	12
 15026 000d 100011   		.ascii	"\020\000\021"
 15027 0010 19       		.byte	25
 15028 0011 040004   		.ascii	"\004\000\004"
 15029 0014 1A       		.byte	26
 15030 0015 030003   		.ascii	"\003\000\003"
 15031 0018 1B       		.byte	27
 15032 0019 130013   		.ascii	"\023\000\023"
 15033 001c 1C       		.byte	28
 15034 001d 140014   		.ascii	"\024\000\024"
 15035 0020 1E       		.byte	30
 15036 0021 171717   		.ascii	"\027\027\027"
 15037 0024 1F       		.byte	31
ARM GAS  /tmp/ccgiIQCZ.s 			page 406


 15038 0025 080808   		.ascii	"\010\010\010"
 15039 0028 20       		.byte	32
 15040 0029 060606   		.ascii	"\006\006\006"
 15041 002c 21       		.byte	33
 15042 002d 010502   		.ascii	"\001\005\002"
 15043              		.section	.rodata.conv_catalogue,"a"
 15044              		.align	2
 15045              		.set	.LANCHOR11,. + 0
 15048              	conv_catalogue:
 15049 0000 DADB8C8A 		.ascii	"\332\333\214\212+-\3357'913\021\026\005\334\336\031"
 15049      2B2DDD37 
 15049      27393133 
 15049      111605DC 
 15049      DE19
 15050 0012 1D1B1315 		.ascii	"\035\033\023\025\015\017\215\010\217\012*,GCE\027?0"
 15050      0D0F8D08 
 15050      8F0A2A2C 
 15050      47434517 
 15050      3F30
 15051 0024 32340400 		.ascii	"24\004\000\002\006&\" ($5/\001#\020\014\016!\022\024"
 15051      02062622 
 15051      20282435 
 15051      2F012310 
 15051      0C0E2112 
 15052 0039 3B181A1C 		.ascii	";\030\032\034\036).\01168>:<@%\337=\213\216\003\007"
 15052      1E292E09 
 15052      36383E3A 
 15052      3C4025DF 
 15052      3D8B8E03 
 15053 004e 4B49410B 		.ascii	"KIA\013JHFBD\037"
 15053      4A484642 
 15053      441F
 15054              		.section	.rodata.conv_mapping.9805,"a"
 15055              		.align	2
 15056              		.set	.LANCHOR14,. + 0
 15059              	conv_mapping.9805:
 15060 0000 8502     		.short	645
 15061 0002 8402     		.short	644
 15062 0004 8602     		.short	646
 15063 0006 8702     		.short	647
 15064 0008 8202     		.short	642
 15065 000a 8302     		.short	643
 15066 000c 3202     		.short	562
 15067 000e 3302     		.short	563
 15068 0010 3402     		.short	564
 15069 0012 3502     		.short	565
 15070 0014 3602     		.short	566
 15071 0016 3702     		.short	567
 15072              		.section	.rodata.cplx_catalogue,"a"
 15073              		.align	2
 15076              	cplx_catalogue:
 15077 0000 8029BCFE 		.ascii	"\200)\274\376!;\316\341\015\372\200aXZ\211~i\030e\357"
 15077      213BCEE1 
 15077      0DFA8061 
 15077      585A897E 
 15077      691865EF 
 15078 0014 839FB7F5 		.ascii	"\203\237\267\365\377\253\255ZB\030\240_@"
ARM GAS  /tmp/ccgiIQCZ.s 			page 407


 15078      FFABAD5A 
 15078      4218A05F 
 15078      40
 15079              		.section	.rodata.disp.9616,"a"
 15080              		.align	2
 15081              		.set	.LANCHOR21,. + 0
 15084              	disp.9616:
 15085 0000 03       		.byte	3
 15086 0001 02       		.byte	2
 15087 0002 05       		.byte	5
 15088 0003 04       		.byte	4
 15089              		.section	.rodata.int_catalogue,"a"
 15090              		.align	2
 15093              	int_catalogue:
 15094 0000 49F18307 		.ascii	"I\361\203\007\032D]\342Y\335\020\232\254m(D\034V\301"
 15094      1A445DE2 
 15094      59DD109A 
 15094      AC6D2844 
 15094      1C56C1
 15095 0013 C62531EC 		.ascii	"\306%1\354}\265m\030\326\311\312c\035\223\015\313%q"
 15095      7DB56D18 
 15095      D6C9CA63 
 15095      1D930DCB 
 15095      2571
 15096 0025 2C5112C4 		.ascii	",Q\022\304\361\\dhE\261l_4g\303S)&s\012\307V\335*\255"
 15096      F15C6468 
 15096      45B16C5F 
 15096      3467C353 
 15096      2926730A 
 15097 003e CB6ADEB7 		.ascii	"\313j\336\267\356\013\206\333*\323\364m\346y\300"
 15097      EE0B86DB 
 15097      2AD3F46D 
 15097      E679C0
 15098              		.section	.rodata.linear_key_map.9400,"a"
 15099              		.align	2
 15100              		.set	.LANCHOR6,. + 0
 15103              	linear_key_map.9400:
 15104 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\011\012\013\014"
 15104      04050607 
 15104      08090A0B 
 15104      0C
 15105 000d 0D0E0F10 		.ascii	"\015\016\017\020\000\021\022\023\024\025\000\026\027"
 15105      00111213 
 15105      14150016 
 15105      17
 15106 001a 18191A00 		.ascii	"\030\031\032\000\033\034\035\036\037\000 !\"#$%%%%%"
 15106      1B1C1D1E 
 15106      1F002021 
 15106      22232425 
 15106      25252525 
 15107 002e 25       		.ascii	"%"
 15108              		.section	.rodata.linear_key_map.9404,"a"
 15109              		.align	2
 15110              		.set	.LANCHOR1,. + 0
 15113              	linear_key_map.9404:
 15114 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\"\"\"\011\012\013"
 15114      04050607 
ARM GAS  /tmp/ccgiIQCZ.s 			page 408


 15114      08222222 
 15114      090A0B
 15115 000f 0C0D000E 		.ascii	"\014\015\000\016\017\020\021\022\000\023\024\025\026"
 15115      0F101112 
 15115      00131415 
 15115      16
 15116 001c 17001819 		.ascii	"\027\000\030\031\032\033\034\000\035\036\037 !\"\"\""
 15116      1A1B1C00 
 15116      1D1E1F20 
 15116      21222222 
 15117 002c 040522   		.ascii	"\004\005\""
 15118              		.section	.rodata.map.9416,"a"
 15119              		.align	2
 15120              		.set	.LANCHOR5,. + 0
 15123              	map.9416:
 15124 0000 E8E9EAEB 		.ascii	"\350\351\352\353\377\177\177\177mnol\377\377\377\377"
 15124      FF7F7F7F 
 15124      6D6E6F6C 
 15124      FFFFFFFF 
 15125 0010 FF7F0708 		.ascii	"\377\177\007\010\011\177\177\347\005\006\177\177\344"
 15125      097F7FE7 
 15125      05067F7F 
 15125      E4
 15126 001d E5E67FFF 		.ascii	"\345\346\177\377\000\360\177\177\377\377\377\377\377"
 15126      00F07F7F 
 15126      FFFFFFFF 
 15126      FF
 15127 002a FF       		.ascii	"\377"
 15128              		.section	.rodata.matrix_catalogue,"a"
 15129              		.align	2
 15132              	matrix_catalogue:
 15133 0000 699E4364 		.ascii	"i\236Cd\3305\336#m\240u\332\027Y\341v\032V\235\343i"
 15133      D835DE23 
 15133      6DA075DA 
 15133      1759E176 
 15133      1A569DE3 
 15134 0015 1A3688   		.ascii	"\0326\210"
 15135              		.section	.rodata.mode_catalogue,"a"
 15136              		.align	2
 15139              	mode_catalogue:
 15140 0000 2948C290 		.ascii	")H\302\220\213\310\006d\031\007BP\203\250\351\037\210"
 15140      8BC80664 
 15140      19074250 
 15140      83A8E91F 
 15140      88
 15141 0011 01FC7CC1 		.ascii	"\001\374|\301I\204-\012\030\314\362D\234&\306!\224\223"
 15141      49842D0A 
 15141      18CCF244 
 15141      9C26C621 
 15141      9493
 15142 0023 2489A193 		.ascii	"$\211\241\223-!\010<\313)\"\010s \2461\014s$\2471Lb"
 15142      2D21083C 
 15142      CB292208 
 15142      7320A631 
 15142      0C7324A7 
 15143 003a 38CE0E03 		.ascii	"8\316\016\003\234\260\206!H\334D\374>\311\235OE\321"
 15143      9CB08621 
ARM GAS  /tmp/ccgiIQCZ.s 			page 409


 15143      48DC44FC 
 15143      3EC99D4F 
 15143      45D1
 15144 004c 10E434   		.ascii	"\020\3444"
 15145              		.section	.rodata.op_map.9488,"a"
 15146              		.align	2
 15147              		.set	.LANCHOR2,. + 0
 15150              	op_map.9488:
 15151 0000 1500     		.short	21
 15152 0002 0B02     		.short	523
 15153 0004 0003     		.short	768
 15154 0006 0A02     		.short	522
 15155 0008 1300     		.short	19
 15156 000a 1400     		.short	20
 15157 000c 0300     		.short	3
 15158 000e 0A00     		.short	10
 15159 0010 0701     		.short	263
 15160 0012 0000     		.short	0
 15161 0014 6531     		.short	12645
 15162 0016 0300     		.short	3
 15163 0018 0200     		.short	2
 15164 001a 0100     		.short	1
 15165 001c 4400     		.short	68
 15166 001e 0C00     		.short	12
 15167 0020 0D00     		.short	13
 15168 0022 0E00     		.short	14
 15169 0024 0403     		.short	772
 15170 0026 2F00     		.short	47
 15171 0028 0900     		.short	9
 15172 002a 0A00     		.short	10
 15173 002c 0B00     		.short	11
 15174 002e 0303     		.short	771
 15175 0030 2E00     		.short	46
 15176 0032 0600     		.short	6
 15177 0034 0700     		.short	7
 15178 0036 0800     		.short	8
 15179 0038 0203     		.short	770
 15180 003a 3300     		.short	51
 15181 003c 0500     		.short	5
 15182 003e 0400     		.short	4
 15183 0040 3B01     		.short	315
 15184 0042 0103     		.short	769
 15185 0044 0001     		.short	256
 15186              		.section	.rodata.op_map.9511,"a"
 15187              		.align	2
 15188              		.set	.LANCHOR3,. + 0
 15191              	op_map.9511:
 15192 0000 0100     		.short	1
 15193 0002 0000     		.short	0
 15194 0004 20F2     		.short	-3552
 15195 0006 23F2     		.short	-3549
 15196 0008 21F2     		.short	-3551
 15197 000a 24F2     		.short	-3548
 15198 000c 22F2     		.short	-3550
 15199 000e 25F2     		.short	-3547
 15200 0010 47F1     		.short	-3769
 15201 0012 46F1     		.short	-3770
ARM GAS  /tmp/ccgiIQCZ.s 			page 410


 15202 0014 4E01     		.short	334
 15203 0016 4D01     		.short	333
 15204 0018 5C01     		.short	348
 15205 001a 35F1     		.short	-3787
 15206 001c 5B01     		.short	347
 15207 001e 36F1     		.short	-3786
 15208 0020 3301     		.short	307
 15209 0022 37F1     		.short	-3785
 15210 0024 3300     		.short	51
 15211 0026 0C01     		.short	268
 15212 0028 2B00     		.short	43
 15213 002a 2C00     		.short	44
 15214 002c 028B     		.short	-29950
 15215 002e 088B     		.short	-29944
 15216 0030 0A8B     		.short	-29942
 15217 0032 108B     		.short	-29936
 15218 0034 4301     		.short	323
 15219 0036 3D01     		.short	317
 15220 0038 0902     		.short	521
 15221 003a 0802     		.short	520
 15222 003c 1002     		.short	528
 15223 003e 0D02     		.short	525
 15224 0040 0F02     		.short	527
 15225 0042 0E02     		.short	526
 15226 0044 0003     		.short	768
 15227 0046 0803     		.short	776
 15228 0048 0BF2     		.short	-3573
 15229 004a 1603     		.short	790
 15230 004c 1203     		.short	786
 15231 004e 1303     		.short	787
 15232 0050 3DF2     		.short	-3523
 15233 0052 3EF2     		.short	-3522
 15234 0054 24F1     		.short	-3804
 15235 0056 1EF1     		.short	-3810
 15236 0058 75F2     		.short	-3467
 15237 005a 27F1     		.short	-3801
 15238 005c 0A02     		.short	522
 15239 005e 1602     		.short	534
 15240 0060 5100     		.short	81
 15241 0062 5200     		.short	82
 15242 0064 0000     		.short	0
 15243 0066 0100     		.short	1
 15244 0068 48F0     		.short	-4024
 15245 006a 4BF0     		.short	-4021
 15246 006c 47F0     		.short	-4025
 15247 006e 46F0     		.short	-4026
 15248 0070 77F2     		.short	-3465
 15249 0072 78F2     		.short	-3464
 15250 0074 64AB     		.short	-21660
 15251 0076 3300     		.short	51
 15252 0078 0502     		.short	517
 15253 007a 0602     		.short	518
 15254 007c 0402     		.short	516
 15255 007e 0002     		.short	512
 15256 0080 4200     		.short	66
 15257 0082 3801     		.short	312
 15258 0084 3A00     		.short	58
ARM GAS  /tmp/ccgiIQCZ.s 			page 411


 15259 0086 3B00     		.short	59
 15260 0088 0001     		.short	256
 15261 008a 0001     		.short	256
 15262              		.section	.rodata.op_map.9534,"a"
 15263              		.align	2
 15264              		.set	.LANCHOR0,. + 0
 15267              	op_map.9534:
 15268 0000 4C80     		.short	-32692
 15269 0002 4D80     		.short	-32691
 15270 0004 4E80     		.short	-32690
 15271 0006 4F80     		.short	-32689
 15272 0008 3300     		.short	51
 15273 000a 3300     		.short	51
 15274 000c 3300     		.short	51
 15275 000e 2180     		.short	-32735
 15276 0010 0801     		.short	264
 15277 0012 8780     		.short	-32633
 15278 0014 1180     		.short	-32751
 15279 0016 7C02     		.short	636
 15280 0018 6660     		.short	24678
 15281 001a 3F01     		.short	319
 15282 001c 4580     		.short	-32699
 15283 001e 1C03     		.short	796
 15284 0020 1D03     		.short	797
 15285 0022 1E03     		.short	798
 15286 0024 0603     		.short	774
 15287 0026 2F02     		.short	559
 15288 0028 3300     		.short	51
 15289 002a 3300     		.short	51
 15290 002c 3300     		.short	51
 15291 002e 3300     		.short	51
 15292 0030 3300     		.short	51
 15293 0032 3300     		.short	51
 15294 0034 3300     		.short	51
 15295 0036 3300     		.short	51
 15296 0038 1640     		.short	16406
 15297 003a 0201     		.short	258
 15298 003c 6D80     		.short	-32659
 15299 003e 5001     		.short	336
 15300 0040 3300     		.short	51
 15301 0042 1540     		.short	16405
 15302 0044 0001     		.short	256
 15303              		.section	.rodata.op_map.9589,"a"
 15304              		.align	2
 15305              		.set	.LANCHOR7,. + 0
 15308              	op_map.9589:
 15309 0000 0100     		.short	1
 15310 0002 0100     		.short	1
 15311 0004 0000     		.short	0
 15312 0006 0000     		.short	0
 15313 0008 0B05     		.short	1291
 15314 000a 2005     		.short	1312
 15315 000c 2305     		.short	1315
 15316 000e 3300     		.short	51
 15317 0010 0006     		.short	1536
 15318 0012 2105     		.short	1313
 15319 0014 2405     		.short	1316
ARM GAS  /tmp/ccgiIQCZ.s 			page 412


 15320 0016 3300     		.short	51
 15321 0018 0A05     		.short	1290
 15322 001a 2205     		.short	1314
 15323 001c 2505     		.short	1317
 15324 001e 3300     		.short	51
 15325 0020 3300     		.short	51
 15326 0022 4701     		.short	327
 15327 0024 4601     		.short	326
 15328 0026 3300     		.short	51
 15329 0028 3300     		.short	51
 15330 002a 3300     		.short	51
 15331 002c 3300     		.short	51
 15332 002e 3300     		.short	51
 15333 0030 15FF     		.short	-235
 15334 0032 3300     		.short	51
 15335 0034 3300     		.short	51
 15336 0036 3300     		.short	51
 15337 0038 1AFF     		.short	-230
 15338 003a 3300     		.short	51
 15339 003c 3300     		.short	51
 15340 003e 9BFF     		.short	-101
 15341 0040 0901     		.short	265
 15342 0042 3300     		.short	51
 15343 0044 3300     		.short	51
 15344 0046 0A01     		.short	266
 15345 0048 0B01     		.short	267
 15346 004a 3300     		.short	51
 15347 004c 0D01     		.short	269
 15348 004e 0D01     		.short	269
 15349 0050 663F     		.short	16230
 15350 0052 3300     		.short	51
 15351 0054 3300     		.short	51
 15352 0056 1FFF     		.short	-225
 15353 0058 3805     		.short	1336
 15354 005a 3300     		.short	51
 15355 005c 3300     		.short	51
 15356 005e 3905     		.short	1337
 15357 0060 6621     		.short	8550
 15358 0062 3300     		.short	51
 15359 0064 3300     		.short	51
 15360 0066 6621     		.short	8550
 15361 0068 3300     		.short	51
 15362 006a 3300     		.short	51
 15363 006c 3300     		.short	51
 15364 006e 3300     		.short	51
 15365 0070 3300     		.short	51
 15366 0072 0905     		.short	1289
 15367 0074 0805     		.short	1288
 15368 0076 3300     		.short	51
 15369 0078 07A8     		.short	-22521
 15370 007a 1005     		.short	1296
 15371 007c 0D05     		.short	1293
 15372 007e 3300     		.short	51
 15373 0080 08A8     		.short	-22520
 15374 0082 0F05     		.short	1295
 15375 0084 0E05     		.short	1294
 15376 0086 3300     		.short	51
ARM GAS  /tmp/ccgiIQCZ.s 			page 413


 15377 0088 09A8     		.short	-22519
 15378 008a 0006     		.short	1536
 15379 008c 0806     		.short	1544
 15380 008e 3300     		.short	51
 15381 0090 0406     		.short	1540
 15382 0092 0B05     		.short	1291
 15383 0094 1606     		.short	1558
 15384 0096 3300     		.short	51
 15385 0098 3300     		.short	51
 15386 009a 1206     		.short	1554
 15387 009c 1306     		.short	1555
 15388 009e 2F05     		.short	1327
 15389 00a0 04A8     		.short	-22524
 15390 00a2 3300     		.short	51
 15391 00a4 3300     		.short	51
 15392 00a6 3300     		.short	51
 15393 00a8 05A8     		.short	-22523
 15394 00aa 3300     		.short	51
 15395 00ac 3300     		.short	51
 15396 00ae 3300     		.short	51
 15397 00b0 06A8     		.short	-22522
 15398 00b2 3300     		.short	51
 15399 00b4 3300     		.short	51
 15400 00b6 3300     		.short	51
 15401 00b8 0306     		.short	1539
 15402 00ba 0A05     		.short	1290
 15403 00bc 1605     		.short	1302
 15404 00be 1605     		.short	1302
 15405 00c0 3300     		.short	51
 15406 00c2 3300     		.short	51
 15407 00c4 3300     		.short	51
 15408 00c6 3300     		.short	51
 15409 00c8 01A8     		.short	-22527
 15410 00ca 0000     		.short	0
 15411 00cc 0100     		.short	1
 15412 00ce 3300     		.short	51
 15413 00d0 02A8     		.short	-22526
 15414 00d2 3300     		.short	51
 15415 00d4 3300     		.short	51
 15416 00d6 3300     		.short	51
 15417 00d8 03A8     		.short	-22525
 15418 00da 3300     		.short	51
 15419 00dc 3300     		.short	51
 15420 00de 3300     		.short	51
 15421 00e0 0206     		.short	1538
 15422 00e2 3300     		.short	51
 15423 00e4 3300     		.short	51
 15424 00e6 3300     		.short	51
 15425 00e8 3300     		.short	51
 15426 00ea 3300     		.short	51
 15427 00ec 3300     		.short	51
 15428 00ee 0201     		.short	258
 15429 00f0 00A8     		.short	-22528
 15430 00f2 0505     		.short	1285
 15431 00f4 0605     		.short	1286
 15432 00f6 3300     		.short	51
 15433 00f8 B801     		.short	440
ARM GAS  /tmp/ccgiIQCZ.s 			page 414


 15434 00fa 0405     		.short	1284
 15435 00fc 0005     		.short	1280
 15436 00fe 3300     		.short	51
 15437 0100 D801     		.short	472
 15438 0102 3300     		.short	51
 15439 0104 3300     		.short	51
 15440 0106 3300     		.short	51
 15441 0108 0106     		.short	1537
 15442 010a 3300     		.short	51
 15443 010c 3300     		.short	51
 15444 010e 3300     		.short	51
 15445 0110 0001     		.short	256
 15446 0112 0001     		.short	256
 15447 0114 0001     		.short	256
 15448 0116 0001     		.short	256
 15449              		.section	.rodata.op_map.9601,"a"
 15450              		.align	2
 15451              		.set	.LANCHOR19,. + 0
 15454              	op_map.9601:
 15455 0000 2A27     		.ascii	"*'"
 15456 0002 2B28     		.ascii	"+("
 15457 0004 2C29     		.ascii	",)"
 15458              		.section	.rodata.op_map.9615,"a"
 15459              		.align	2
 15460              		.set	.LANCHOR20,. + 0
 15463              	op_map.9615:
 15464 0000 1A02     		.short	538
 15465 0002 7B02     		.short	635
 15466 0004 1B02     		.short	539
 15467 0006 7A02     		.short	634
 15468 0008 1C02     		.short	540
 15469 000a 3300     		.short	51
 15470              		.section	.rodata.op_map2.9512,"a"
 15471              		.align	2
 15472              		.set	.LANCHOR4,. + 0
 15475              	op_map2.9512:
 15476 0000 3300     		.short	51
 15477 0002 3300     		.short	51
 15478 0004 0003     		.short	768
 15479 0006 0A02     		.short	522
 15480              		.section	.rodata.opcode_breaks,"a"
 15481              		.align	2
 15482              		.set	.LANCHOR13,. + 0
 15485              	opcode_breaks:
 15486 0000 34DB9C31 		.ascii	"4\333\2341\014\2341"
 15486      0C9C31
 15487              		.section	.rodata.prob_catalogue,"a"
 15488              		.align	2
 15491              	prob_catalogue:
 15492 0000 5795D5ED 		.ascii	"W\225\325\355_\\\327&\011tV\325\245\351\\U\027\205U"
 15492      5F5CD726 
 15492      097456D5 
 15492      A5E95C55 
 15492      178555
 15493 0013 5659D665 		.ascii	"VY\326e\371h[V\306\001n\\\026\366\005qZ\226\225\375"
 15493      F9685B56 
 15493      C6016E5C 
ARM GAS  /tmp/ccgiIQCZ.s 			page 415


 15493      16F60571 
 15493      5A9695FD 
 15494 0027 6B591635 		.ascii	"kY\0265\365eXV\005\361bTWuISV\025u\345Y]T\265=PS\227"
 15494      F5655856 
 15494      05F16254 
 15494      57754953 
 15494      561575E5 
 15495 0043 60       		.ascii	"`"
 15496              		.section	.rodata.prog_catalogue,"a"
 15497              		.align	2
 15500              	prog_catalogue:
 15501 0000 BB0D1D3C 		.ascii	"\273\015\035<y\035G\201\310t*3\353\324B\274o1\272\267"
 15501      791D4781 
 15501      C8742A33 
 15501      EBD442BC 
 15501      6F31BAB7 
 15502 0014 C20E0BFA 		.ascii	"\302\016\013\372\377\322\264}#K\323t\2232\366\274\257"
 15502      FFD2B47D 
 15502      234BD374 
 15502      9332F6BC 
 15502      AF
 15503 0025 4CBCE239 		.ascii	"L\274\3429\016s\214\350\314M\343w0\015\015\303\224p"
 15503      0E738CE8 
 15503      CC4DE377 
 15503      300D0DC3 
 15503      9470
 15504 0037 39B2EB60 		.ascii	"9\262\353`\337\035\214\321\264\261+\313\"\300\341\272"
 15504      DF1D8CD1 
 15504      B4B12BCB 
 15504      22C0E1BA 
 15505 0047 CD20DED7 		.ascii	"\315 \336\3270,\222\247(\016\214\273\036\310\311J\342"
 15505      302C92A7 
 15505      280E8CBB 
 15505      1EC8C94A 
 15505      E2
 15506 0058 B724CECF 		.ascii	"\267$\316\317}\013F\323\217\015\000\361<\2643\340\364"
 15506      7D0B46D3 
 15506      8F0D00F1 
 15506      3CB433E0 
 15506      F4
 15507 0069 3D4F33DB 		.ascii	"=O3\333A"
 15507      41
 15508              		.section	.rodata.program_xfcn,"a"
 15509              		.align	2
 15512              	program_xfcn:
 15513 0000 49DC26DB 		.ascii	"I\334&\333\0300Y\206g\032DJ#\265\234s]\342Y\335\037"
 15513      18305986 
 15513      671A444A 
 15513      23B59C73 
 15513      5DE259DD 
 15514 0015 52CCD442 		.ascii	"R\314\324Bc\332\225%Jg\222\026\253\033J\021\007\025"
 15514      63DA9525 
 15514      4A679216 
 15514      AB1B4A11 
 15514      0715
 15515 0027 3C4F52E7 		.ascii	"<OR\347M\324p\334F\3033w\031\007\030\224t\222\007\201"
 15515      4DD470DC 
ARM GAS  /tmp/ccgiIQCZ.s 			page 416


 15515      46C33377 
 15515      19071894 
 15515      74920781 
 15516 003b B85019DC 		.ascii	"\270P\031\334{\037m[F5\262f\334\2461\3310\334\267=-"
 15516      7B1F6D5B 
 15516      4635B266 
 15516      DCA631D9 
 15516      30DCB73D 
 15517 0050 CAC95C4B 		.ascii	"\312\311\\K\024D\261<W*\306rl\234hE\223\\X\302\305\363"
 15517      1444B13C 
 15517      572AC672 
 15517      6C9C6845 
 15517      935C58C2 
 15518 0066 4430A374 		.ascii	"D0\243t\031\367D5c\214\244\215\"I\022g0\254uY\242\200"
 15518      19F74435 
 15518      638CA48D 
 15518      22491267 
 15518      30AC7559 
 15519 007c 9EB74AA2 		.ascii	"\236\267J\242~\334\266\255\353~\340\270m\262\204\253"
 15519      7EDCB6AD 
 15519      EB7EE0B8 
 15519      6DB284AB 
 15520 008c 6DD3F6ED 		.ascii	"m\323\366\355\274n[\2479\227j\021\267\231\345p\035\366"
 15520      BC6E5BA7 
 15520      39976A11 
 15520      B799E570 
 15520      1DF6
 15521 009e 21856FDE 		.ascii	"!\205o\336p"
 15521      70
 15522              		.section	.rodata.smap.9436,"a"
 15523              		.align	2
 15524              		.set	.LANCHOR22,. + 0
 15527              	smap.9436:
 15528 0000 00010002 		.ascii	"\000\001\000\002"
 15529              		.section	.rodata.stats_catalogue,"a"
 15530              		.align	2
 15533              	stats_catalogue:
 15534 0000 1805C1A0 		.ascii	"\030\005\301\240]\027\311qXa\026\205\226\014T\027\205"
 15534      5D17C971 
 15534      58611685 
 15534      960C5417 
 15534      85
 15535 0011 514C5761 		.ascii	"QLWa@"
 15535      40
 15536              		.section	.rodata.sums_catalogue,"a"
 15537              		.align	2
 15540              	sums_catalogue:
 15541 0000 1444B134 		.ascii	"\024D\2614J\023\204\301 E\021\004\361\034I\021\205\000"
 15541      4A1384C1 
 15541      20451104 
 15541      F11C4911 
 15541      8500
 15542              		.section	.rodata.test_catalogue,"a"
 15543              		.align	2
 15546              	test_catalogue:
 15547 0000 C771CCE8 		.ascii	"\307q\314\350\353/\313\334+\016\3040\362\363\011\302"
 15547      EB2FCBDC 
ARM GAS  /tmp/ccgiIQCZ.s 			page 417


 15547      2B0EC430 
 15547      F2F309C2 
 15548 0010 F0DC334C 		.ascii	"\360\3343L4\313\274\216\370'M\242\340\276.\215B\344"
 15548      34CBBC8E 
 15548      F8274DA2 
 15548      E0BE2E8D 
 15548      42E4
 15549 0022 D03E6E5B 		.ascii	"\320>n[\230\3255\256K\242\347-\317\240"
 15549      98D535AE 
 15549      4BA2E72D 
 15549      CFA0
 15550              		.text
 15551              	.Letext0:
 15552              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 15553              		.file 3 "dmcp/dmcp.h"
 15554              		.file 4 "src/decNumber/decContext.h"
 15555              		.file 5 "src/decNumber/decNumber.h"
 15556              		.file 6 "src/decNumber/decimal64.h"
 15557              		.file 7 "src/decNumber/decimal128.h"
 15558              		.file 8 "src/xeq.h"
 15559              		.file 9 "src/data.h"
 15560              		.file 10 "src/keys.h"
 15561              		.file 11 "src/menu.h"
 15562              		.file 12 "src/display.h"
 15563              		.file 13 "src/consts.h"
 15564              		.file 14 "src/storage.h"
 15565              		.file 15 "src/stats.h"
 15566              		.file 16 "src/catalogues.h"
 15567              		.file 17 "src/printer.h"
 15568              		.file 18 "src/lcd.h"
 15569              		.file 19 "src/int.h"
 15570              		.file 20 "src/decn.h"
ARM GAS  /tmp/ccgiIQCZ.s 			page 418


DEFINED SYMBOLS
                            *ABS*:0000000000000000 keys.c
     /tmp/ccgiIQCZ.s:18     .text.gtodot_digit:0000000000000000 $t
     /tmp/ccgiIQCZ.s:26     .text.gtodot_digit:0000000000000000 gtodot_digit
     /tmp/ccgiIQCZ.s:110    .text.gtodot_digit:0000000000000054 $d
     /tmp/ccgiIQCZ.s:117    .text.check_f_key:0000000000000000 $t
     /tmp/ccgiIQCZ.s:124    .text.check_f_key:0000000000000000 check_f_key
     /tmp/ccgiIQCZ.s:202    .text.check_f_key:0000000000000038 $d
     /tmp/ccgiIQCZ.s:208    .text.is_label_or_end_at:0000000000000000 $t
     /tmp/ccgiIQCZ.s:215    .text.is_label_or_end_at:0000000000000000 is_label_or_end_at
     /tmp/ccgiIQCZ.s:271    .text.advance_to_next_label:0000000000000000 $t
     /tmp/ccgiIQCZ.s:278    .text.advance_to_next_label:0000000000000000 advance_to_next_label
     /tmp/ccgiIQCZ.s:359    .text.advance_to_next_label:0000000000000048 $d
     /tmp/ccgiIQCZ.s:364    .text.init_cat:0000000000000000 $t
     /tmp/ccgiIQCZ.s:371    .text.init_cat:0000000000000000 init_cat
     /tmp/ccgiIQCZ.s:684    .text.init_cat:00000000000000e4 $d
     /tmp/ccgiIQCZ.s:690    .text.advance_to_previous_label:0000000000000000 $t
     /tmp/ccgiIQCZ.s:697    .text.advance_to_previous_label:0000000000000000 advance_to_previous_label
     /tmp/ccgiIQCZ.s:782    .text.advance_to_previous_label:000000000000004c $d
     /tmp/ccgiIQCZ.s:787    .text.check_confirm.part.0:0000000000000000 $t
     /tmp/ccgiIQCZ.s:794    .text.check_confirm.part.0:0000000000000000 check_confirm.part.0
     /tmp/ccgiIQCZ.s:865    .text.check_confirm.part.0:0000000000000030 $d
                            *COM*:0000000000000004 NonProgrammable
     /tmp/ccgiIQCZ.s:872    .text.init_arg.part.0:0000000000000000 $t
     /tmp/ccgiIQCZ.s:879    .text.init_arg.part.0:0000000000000000 init_arg.part.0
     /tmp/ccgiIQCZ.s:921    .text.init_arg.part.0:0000000000000024 $d
     /tmp/ccgiIQCZ.s:926    .text.reset_arg:0000000000000000 $t
     /tmp/ccgiIQCZ.s:933    .text.reset_arg:0000000000000000 reset_arg
     /tmp/ccgiIQCZ.s:977    .text.reset_arg:0000000000000018 $d
     /tmp/ccgiIQCZ.s:982    .text.arg_eval:0000000000000000 $t
     /tmp/ccgiIQCZ.s:989    .text.arg_eval:0000000000000000 arg_eval
     /tmp/ccgiIQCZ.s:1146   .text.arg_eval:00000000000000a4 $d
     /tmp/ccgiIQCZ.s:1153   .text.arg_digit:0000000000000000 $t
     /tmp/ccgiIQCZ.s:1160   .text.arg_digit:0000000000000000 arg_digit
     /tmp/ccgiIQCZ.s:1419   .text.arg_digit:00000000000000f4 $d
     /tmp/ccgiIQCZ.s:1427   .text.process_arg_shuffle:0000000000000000 $t
     /tmp/ccgiIQCZ.s:1434   .text.process_arg_shuffle:0000000000000000 process_arg_shuffle
     /tmp/ccgiIQCZ.s:1492   .text.process_arg_shuffle:000000000000002c $d
     /tmp/ccgiIQCZ.s:1497   .text.process_h_shifted:0000000000000000 $t
     /tmp/ccgiIQCZ.s:1504   .text.process_h_shifted:0000000000000000 process_h_shifted
     /tmp/ccgiIQCZ.s:1752   .text.process_h_shifted:00000000000000c8 $d
     /tmp/ccgiIQCZ.s:1760   .text.intltr:0000000000000000 $t
     /tmp/ccgiIQCZ.s:1767   .text.intltr:0000000000000000 intltr
     /tmp/ccgiIQCZ.s:1830   .text.intltr:0000000000000030 $d
     /tmp/ccgiIQCZ.s:1836   .text.process_normal:0000000000000000 $t
     /tmp/ccgiIQCZ.s:1843   .text.process_normal:0000000000000000 process_normal
     /tmp/ccgiIQCZ.s:1904   .text.process_normal:0000000000000022 $d
     /tmp/ccgiIQCZ.s:1950   .text.process_normal:000000000000007e $t
     /tmp/ccgiIQCZ.s:1999   .text.process_normal:00000000000000ac $d
     /tmp/ccgiIQCZ.s:2018   .text.process_normal:00000000000000f8 $t
     /tmp/ccgiIQCZ.s:2029   .text.process_normal:0000000000000104 $d
     /tmp/ccgiIQCZ.s:2072   .text.process_normal:00000000000001b0 $t
     /tmp/ccgiIQCZ.s:2273   .text.process_normal:0000000000000264 $d
     /tmp/ccgiIQCZ.s:2282   .text.process_fg_shifted:0000000000000000 $t
     /tmp/ccgiIQCZ.s:2289   .text.process_fg_shifted:0000000000000000 process_fg_shifted
     /tmp/ccgiIQCZ.s:2417   .text.process_fg_shifted:000000000000003e $d
     /tmp/ccgiIQCZ.s:2616   .text.process_fg_shifted:000000000000010c $d
ARM GAS  /tmp/ccgiIQCZ.s 			page 419


     /tmp/ccgiIQCZ.s:2657   .text.process_fg_shifted:00000000000001b0 $t
     /tmp/ccgiIQCZ.s:2853   .text.process_fg_shifted:0000000000000294 $d
     /tmp/ccgiIQCZ.s:2862   .text.set_window:0000000000000000 $t
     /tmp/ccgiIQCZ.s:2869   .text.set_window:0000000000000000 set_window
     /tmp/ccgiIQCZ.s:3016   .text.set_window:000000000000008c $d
     /tmp/ccgiIQCZ.s:3023   .text.arg_storcl:0000000000000000 $t
     /tmp/ccgiIQCZ.s:3030   .text.arg_storcl:0000000000000000 arg_storcl
     /tmp/ccgiIQCZ.s:3146   .text.arg_storcl:0000000000000040 $d
     /tmp/ccgiIQCZ.s:3151   .text.process_arg:0000000000000000 $t
     /tmp/ccgiIQCZ.s:3158   .text.process_arg:0000000000000000 process_arg
     /tmp/ccgiIQCZ.s:3364   .text.process_arg:000000000000008a $d
     /tmp/ccgiIQCZ.s:3368   .text.process_arg:0000000000000090 $t
     /tmp/ccgiIQCZ.s:3457   .text.process_arg:00000000000000f0 $d
     /tmp/ccgiIQCZ.s:3504   .text.process_arg:00000000000001a8 $t
     /tmp/ccgiIQCZ.s:3907   .text.process_arg:000000000000032c $d
     /tmp/ccgiIQCZ.s:3916   .text.process_arg:0000000000000340 $t
     /tmp/ccgiIQCZ.s:4407   .text.process_arg:000000000000054c $d
     /tmp/ccgiIQCZ.s:4412   .text.cur_shift:0000000000000000 $t
     /tmp/ccgiIQCZ.s:4420   .text.cur_shift:0000000000000000 cur_shift
     /tmp/ccgiIQCZ.s:4448   .text.cur_shift:0000000000000010 $d
     /tmp/ccgiIQCZ.s:4453   .text.reset_shift:0000000000000000 $t
     /tmp/ccgiIQCZ.s:4461   .text.reset_shift:0000000000000000 reset_shift
     /tmp/ccgiIQCZ.s:4519   .text.reset_shift:0000000000000014 $d
     /tmp/ccgiIQCZ.s:4524   .text.keycode_to_row_column:0000000000000000 $t
     /tmp/ccgiIQCZ.s:4532   .text.keycode_to_row_column:0000000000000000 keycode_to_row_column
     /tmp/ccgiIQCZ.s:4560   .text.keycode_to_row_column:0000000000000020 $d
     /tmp/ccgiIQCZ.s:4565   .text.row_column_to_keycode:0000000000000000 $t
     /tmp/ccgiIQCZ.s:4573   .text.row_column_to_keycode:0000000000000000 row_column_to_keycode
     /tmp/ccgiIQCZ.s:4631   .text.row_column_to_keycode:000000000000003c $d
     /tmp/ccgiIQCZ.s:4636   .text.keycode_to_digit_or_register:0000000000000000 $t
     /tmp/ccgiIQCZ.s:4644   .text.keycode_to_digit_or_register:0000000000000000 keycode_to_digit_or_register
     /tmp/ccgiIQCZ.s:4680   .text.keycode_to_digit_or_register:000000000000000c $d
     /tmp/ccgiIQCZ.s:4686   .text.init_state:0000000000000000 $t
     /tmp/ccgiIQCZ.s:4694   .text.init_state:0000000000000000 init_state
     /tmp/ccgiIQCZ.s:4810   .text.init_state:0000000000000074 $d
     /tmp/ccgiIQCZ.s:4817   .text.process_cmplx:0000000000000000 $t
     /tmp/ccgiIQCZ.s:4824   .text.process_cmplx:0000000000000000 process_cmplx
     /tmp/ccgiIQCZ.s:5180   .text.process_cmplx:00000000000000c4 $d
     /tmp/ccgiIQCZ.s:5187   .text.soft_init_state:0000000000000000 $t
     /tmp/ccgiIQCZ.s:5195   .text.soft_init_state:0000000000000000 soft_init_state
     /tmp/ccgiIQCZ.s:5310   .text.soft_init_state:0000000000000058 $d
     /tmp/ccgiIQCZ.s:5316   .text.finish_cpx_entry:0000000000000000 $t
     /tmp/ccgiIQCZ.s:5324   .text.finish_cpx_entry:0000000000000000 finish_cpx_entry
     /tmp/ccgiIQCZ.s:5502   .text.finish_cpx_entry:00000000000000c8 $d
     /tmp/ccgiIQCZ.s:5509   .text.stack_begin:0000000000000000 $t
     /tmp/ccgiIQCZ.s:5517   .text.stack_begin:0000000000000000 stack_begin
     /tmp/ccgiIQCZ.s:5657   .text.stack_begin:00000000000000b4 $d
     /tmp/ccgiIQCZ.s:5663   .text.current_catalogue_max:0000000000000000 $t
     /tmp/ccgiIQCZ.s:5671   .text.current_catalogue_max:0000000000000000 current_catalogue_max
     /tmp/ccgiIQCZ.s:5692   .text.current_catalogue_max:000000000000000c $d
     /tmp/ccgiIQCZ.s:5698   .text.current_catalogue:0000000000000000 $t
     /tmp/ccgiIQCZ.s:5706   .text.current_catalogue:0000000000000000 current_catalogue
     /tmp/ccgiIQCZ.s:5962   .text.current_catalogue:00000000000000c8 $d
     /tmp/ccgiIQCZ.s:5972   .text.process_catalogue:0000000000000000 $t
     /tmp/ccgiIQCZ.s:5979   .text.process_catalogue:0000000000000000 process_catalogue
     /tmp/ccgiIQCZ.s:6308   .text.process_catalogue:00000000000000fe $d
     /tmp/ccgiIQCZ.s:6340   .text.process_catalogue:000000000000011e $t
ARM GAS  /tmp/ccgiIQCZ.s 			page 420


     /tmp/ccgiIQCZ.s:6848   .text.process_catalogue:00000000000002dc $d
     /tmp/ccgiIQCZ.s:6869   .text.process_catalogue:00000000000002fc $t
     /tmp/ccgiIQCZ.s:6899   .text.find_pos:0000000000000000 $t
     /tmp/ccgiIQCZ.s:6907   .text.find_pos:0000000000000000 find_pos
     /tmp/ccgiIQCZ.s:7080   .text.find_pos:0000000000000080 $d
     /tmp/ccgiIQCZ.s:7086   .text.get_alpha_state:0000000000000000 $t
     /tmp/ccgiIQCZ.s:7094   .text.get_alpha_state:0000000000000000 get_alpha_state
     /tmp/ccgiIQCZ.s:7126   .text.get_alpha_state:0000000000000020 $d
     /tmp/ccgiIQCZ.s:7132   .rodata.process_keycode.str1.4:0000000000000000 $d
     /tmp/ccgiIQCZ.s:7142   .text.process_keycode:0000000000000000 $t
     /tmp/ccgiIQCZ.s:7150   .text.process_keycode:0000000000000000 process_keycode
     /tmp/ccgiIQCZ.s:7787   .text.process_keycode:00000000000002e8 $d
                            *COM*:0000000000000004 OpCode
                            *COM*:0000000000000004 GoFast
                            *COM*:0000000000000004 OpCodeDisplayPending
                            *COM*:0000000000000004 WasDataEntry
     /tmp/ccgiIQCZ.s:7806   .text.process_keycode:0000000000000324 $t
     /tmp/ccgiIQCZ.s:7946   .text.process_keycode:00000000000003c4 $d
     /tmp/ccgiIQCZ.s:7955   .text.process_keycode:00000000000003e8 $t
     /tmp/ccgiIQCZ.s:8465   .text.process_keycode:0000000000000604 $d
                            *COM*:0000000000000004 nd_opcode
     /tmp/ccgiIQCZ.s:8481   .text.process_keycode:0000000000000638 $t
     /tmp/ccgiIQCZ.s:8525   .text.process_keycode:0000000000000670 $d
     /tmp/ccgiIQCZ.s:8555   .text.process_keycode:00000000000006e8 $t
     /tmp/ccgiIQCZ.s:8862   .text.process_keycode:00000000000007e0 $d
     /tmp/ccgiIQCZ.s:8888   .text.process_keycode:0000000000000848 $t
     /tmp/ccgiIQCZ.s:8930   .text.process_keycode:0000000000000878 $d
     /tmp/ccgiIQCZ.s:8934   .text.process_keycode:0000000000000888 $t
     /tmp/ccgiIQCZ.s:9586   .text.process_keycode:0000000000000af0 $d
     /tmp/ccgiIQCZ.s:9606   .text.process_keycode:0000000000000b2c $t
     /tmp/ccgiIQCZ.s:10658  .text.process_keycode:0000000000000e94 $d
     /tmp/ccgiIQCZ.s:10679  .text.process_keycode:0000000000000ebc $t
     /tmp/ccgiIQCZ.s:10821  .text.process_keycode:0000000000000f30 $d
     /tmp/ccgiIQCZ.s:10856  .text.process_keycode:0000000000000fbc $t
     /tmp/ccgiIQCZ.s:11024  .text.process_keycode:0000000000001078 $d
     /tmp/ccgiIQCZ.s:11044  .text.process_keycode:00000000000010c8 $t
     /tmp/ccgiIQCZ.s:11250  .text.process_keycode:0000000000001170 $d
     /tmp/ccgiIQCZ.s:11268  .text.process_keycode:00000000000011b8 $t
     /tmp/ccgiIQCZ.s:11376  .text.process_keycode:000000000000124c $d
     /tmp/ccgiIQCZ.s:11382  .text.process_keycode:0000000000001254 $t
     /tmp/ccgiIQCZ.s:11887  .text.process_keycode:00000000000013b8 $d
     /tmp/ccgiIQCZ.s:11922  .text.process_keycode:0000000000001440 $t
     /tmp/ccgiIQCZ.s:11976  .text.process_keycode:0000000000001470 $d
     /tmp/ccgiIQCZ.s:12011  .text.process_keycode:00000000000014f8 $t
     /tmp/ccgiIQCZ.s:12327  .text.process_keycode:0000000000001638 $d
     /tmp/ccgiIQCZ.s:12337  .text.process_keycode:0000000000001654 $t
     /tmp/ccgiIQCZ.s:12572  .text.process_keycode:0000000000001778 $d
     /tmp/ccgiIQCZ.s:12615  .text.process_keycode:00000000000017cc $t
     /tmp/ccgiIQCZ.s:13064  .text.process_keycode:000000000000198c $d
     /tmp/ccgiIQCZ.s:13079  .text.process_keycode:0000000000001998 $t
     /tmp/ccgiIQCZ.s:13488  .text.process_keycode:0000000000001b3c $d
     /tmp/ccgiIQCZ.s:13514  .text.process_keycode:0000000000001ba4 $t
     /tmp/ccgiIQCZ.s:14594  .text.process_keycode:0000000000001f48 $d
     /tmp/ccgiIQCZ.s:14603  .text.process_keycode_with_shift:0000000000000000 $t
     /tmp/ccgiIQCZ.s:14611  .text.process_keycode_with_shift:0000000000000000 process_keycode_with_shift
     /tmp/ccgiIQCZ.s:14825  .text.process_keycode_with_shift:0000000000000090 $d
     /tmp/ccgiIQCZ.s:14843  .bss.was_paused.9961:0000000000000000 $d
ARM GAS  /tmp/ccgiIQCZ.s 			page 421


     /tmp/ccgiIQCZ.s:14847  .bss.was_paused.9961:0000000000000000 was_paused.9961
     /tmp/ccgiIQCZ.s:14850  .rodata.alpha_arrows:0000000000000000 $d
     /tmp/ccgiIQCZ.s:14853  .rodata.alpha_arrows:0000000000000000 alpha_arrows
     /tmp/ccgiIQCZ.s:14856  .rodata.alpha_catalogue:0000000000000000 $d
     /tmp/ccgiIQCZ.s:14859  .rodata.alpha_catalogue:0000000000000000 alpha_catalogue
     /tmp/ccgiIQCZ.s:14863  .rodata.alpha_compares:0000000000000000 $d
     /tmp/ccgiIQCZ.s:14866  .rodata.alpha_compares:0000000000000000 alpha_compares
     /tmp/ccgiIQCZ.s:14869  .rodata.alpha_letters:0000000000000000 $d
     /tmp/ccgiIQCZ.s:14873  .rodata.alpha_letters:0000000000000000 alpha_letters
     /tmp/ccgiIQCZ.s:14879  .rodata.alpha_letters_lower:0000000000000000 $d
     /tmp/ccgiIQCZ.s:14883  .rodata.alpha_letters_lower:0000000000000000 alpha_letters_lower
     /tmp/ccgiIQCZ.s:14889  .rodata.alpha_subscripts:0000000000000000 $d
     /tmp/ccgiIQCZ.s:14892  .rodata.alpha_subscripts:0000000000000000 alpha_subscripts
     /tmp/ccgiIQCZ.s:14896  .rodata.alpha_symbols:0000000000000000 $d
     /tmp/ccgiIQCZ.s:14899  .rodata.alpha_symbols:0000000000000000 alpha_symbols
     /tmp/ccgiIQCZ.s:14902  .rodata.alphamap.9444:0000000000000000 $d
     /tmp/ccgiIQCZ.s:14906  .rodata.alphamap.9444:0000000000000000 alphamap.9444
     /tmp/ccgiIQCZ.s:14946  .rodata.amap.9435:0000000000000000 $d
     /tmp/ccgiIQCZ.s:14950  .rodata.amap.9435:0000000000000000 amap.9435
     /tmp/ccgiIQCZ.s:14968  .rodata.catalogue:0000000000000000 $d
     /tmp/ccgiIQCZ.s:14971  .rodata.catalogue:0000000000000000 catalogue
     /tmp/ccgiIQCZ.s:14980  .rodata.catalogue_sizes.9758:0000000000000000 $d
     /tmp/ccgiIQCZ.s:14984  .rodata.catalogue_sizes.9758:0000000000000000 catalogue_sizes.9758
     /tmp/ccgiIQCZ.s:14987  .rodata.catalogues.9766:0000000000000000 $d
     /tmp/ccgiIQCZ.s:14991  .rodata.catalogues.9766:0000000000000000 catalogues.9766
     /tmp/ccgiIQCZ.s:15076  .rodata.cplx_catalogue:0000000000000000 cplx_catalogue
     /tmp/ccgiIQCZ.s:15533  .rodata.stats_catalogue:0000000000000000 stats_catalogue
     /tmp/ccgiIQCZ.s:15491  .rodata.prob_catalogue:0000000000000000 prob_catalogue
     /tmp/ccgiIQCZ.s:15093  .rodata.int_catalogue:0000000000000000 int_catalogue
     /tmp/ccgiIQCZ.s:15500  .rodata.prog_catalogue:0000000000000000 prog_catalogue
     /tmp/ccgiIQCZ.s:15512  .rodata.program_xfcn:0000000000000000 program_xfcn
     /tmp/ccgiIQCZ.s:15546  .rodata.test_catalogue:0000000000000000 test_catalogue
     /tmp/ccgiIQCZ.s:15139  .rodata.mode_catalogue:0000000000000000 mode_catalogue
     /tmp/ccgiIQCZ.s:15540  .rodata.sums_catalogue:0000000000000000 sums_catalogue
     /tmp/ccgiIQCZ.s:15132  .rodata.matrix_catalogue:0000000000000000 matrix_catalogue
     /tmp/ccgiIQCZ.s:15014  .rodata.cmap.9434:0000000000000000 $d
     /tmp/ccgiIQCZ.s:15018  .rodata.cmap.9434:0000000000000000 cmap.9434
     /tmp/ccgiIQCZ.s:15044  .rodata.conv_catalogue:0000000000000000 $d
     /tmp/ccgiIQCZ.s:15048  .rodata.conv_catalogue:0000000000000000 conv_catalogue
     /tmp/ccgiIQCZ.s:15055  .rodata.conv_mapping.9805:0000000000000000 $d
     /tmp/ccgiIQCZ.s:15059  .rodata.conv_mapping.9805:0000000000000000 conv_mapping.9805
     /tmp/ccgiIQCZ.s:15073  .rodata.cplx_catalogue:0000000000000000 $d
     /tmp/ccgiIQCZ.s:15080  .rodata.disp.9616:0000000000000000 $d
     /tmp/ccgiIQCZ.s:15084  .rodata.disp.9616:0000000000000000 disp.9616
     /tmp/ccgiIQCZ.s:15090  .rodata.int_catalogue:0000000000000000 $d
     /tmp/ccgiIQCZ.s:15099  .rodata.linear_key_map.9400:0000000000000000 $d
     /tmp/ccgiIQCZ.s:15103  .rodata.linear_key_map.9400:0000000000000000 linear_key_map.9400
     /tmp/ccgiIQCZ.s:15109  .rodata.linear_key_map.9404:0000000000000000 $d
     /tmp/ccgiIQCZ.s:15113  .rodata.linear_key_map.9404:0000000000000000 linear_key_map.9404
     /tmp/ccgiIQCZ.s:15119  .rodata.map.9416:0000000000000000 $d
     /tmp/ccgiIQCZ.s:15123  .rodata.map.9416:0000000000000000 map.9416
     /tmp/ccgiIQCZ.s:15129  .rodata.matrix_catalogue:0000000000000000 $d
     /tmp/ccgiIQCZ.s:15136  .rodata.mode_catalogue:0000000000000000 $d
     /tmp/ccgiIQCZ.s:15146  .rodata.op_map.9488:0000000000000000 $d
     /tmp/ccgiIQCZ.s:15150  .rodata.op_map.9488:0000000000000000 op_map.9488
     /tmp/ccgiIQCZ.s:15187  .rodata.op_map.9511:0000000000000000 $d
     /tmp/ccgiIQCZ.s:15191  .rodata.op_map.9511:0000000000000000 op_map.9511
ARM GAS  /tmp/ccgiIQCZ.s 			page 422


     /tmp/ccgiIQCZ.s:15263  .rodata.op_map.9534:0000000000000000 $d
     /tmp/ccgiIQCZ.s:15267  .rodata.op_map.9534:0000000000000000 op_map.9534
     /tmp/ccgiIQCZ.s:15304  .rodata.op_map.9589:0000000000000000 $d
     /tmp/ccgiIQCZ.s:15308  .rodata.op_map.9589:0000000000000000 op_map.9589
     /tmp/ccgiIQCZ.s:15450  .rodata.op_map.9601:0000000000000000 $d
     /tmp/ccgiIQCZ.s:15454  .rodata.op_map.9601:0000000000000000 op_map.9601
     /tmp/ccgiIQCZ.s:15459  .rodata.op_map.9615:0000000000000000 $d
     /tmp/ccgiIQCZ.s:15463  .rodata.op_map.9615:0000000000000000 op_map.9615
     /tmp/ccgiIQCZ.s:15471  .rodata.op_map2.9512:0000000000000000 $d
     /tmp/ccgiIQCZ.s:15475  .rodata.op_map2.9512:0000000000000000 op_map2.9512
     /tmp/ccgiIQCZ.s:15481  .rodata.opcode_breaks:0000000000000000 $d
     /tmp/ccgiIQCZ.s:15485  .rodata.opcode_breaks:0000000000000000 opcode_breaks
     /tmp/ccgiIQCZ.s:15488  .rodata.prob_catalogue:0000000000000000 $d
     /tmp/ccgiIQCZ.s:15497  .rodata.prog_catalogue:0000000000000000 $d
     /tmp/ccgiIQCZ.s:15509  .rodata.program_xfcn:0000000000000000 $d
     /tmp/ccgiIQCZ.s:15523  .rodata.smap.9436:0000000000000000 $d
     /tmp/ccgiIQCZ.s:15527  .rodata.smap.9436:0000000000000000 smap.9436
     /tmp/ccgiIQCZ.s:15530  .rodata.stats_catalogue:0000000000000000 $d
     /tmp/ccgiIQCZ.s:15537  .rodata.sums_catalogue:0000000000000000 $d
     /tmp/ccgiIQCZ.s:15543  .rodata.test_catalogue:0000000000000000 $d
     /tmp/ccgiIQCZ.s:2458   .text.process_fg_shifted:0000000000000067 $d
     /tmp/ccgiIQCZ.s:2458   .text.process_fg_shifted:0000000000000068 $t

UNDEFINED SYMBOLS
sizeLIB
main_ram
StateWhileOn
find_label_from
getprog
do_inc
PcWrapped
process_cmdline
shift_down
do_dec
is_bad_cmdline
error_message
argcmds
get_dispmode_digs
num_arg_digits
local_regs_rarg
global_regs_rarg
process_cmdline_set_lift
update_program_bounds
set_pc
int_base
set_menu
display_current_menu
display
is_dblmode
IntMaxWindow
xset
set_lift
ShowRegister
clear_disp
get_reg_n
swap_reg
copyreg
ARM GAS  /tmp/ccgiIQCZ.s 			page 423


op_p2r
RectPolConv
lift
zero_X
zero_Y
remap_chars
catcmd
keyticks
xeq_init_contexts
is_dot
xeq
xeqprog
dot
Pause
JustStopped
Running
ShowRPN
JustDisplayed
DispMsg
xeq_xrom
is_key_pressed
set_running_off
get_user_flag
print_tab
print_alpha
xeq_sst_bst
stoprog
clr_dot
message
find_char
delprog
prt
scopy_char
clpall
clrprog
reset
clrall
TraceBuffer
set_last_menu
find_user_pc
cmdgtocommon
global_regs
convert_regK
drop
local_regs
alen

ARM GAS  /tmp/cc6xzGMw.s 			page 1


   1              		.arch armv7e-m
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"keys.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.gtodot_digit,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	gtodot_digit:
  27              	.LVL0:
  28              	.LFB30:
  29              		.file 1 "src/keys.c"
   1:src/keys.c    **** /* This file is part of 34S.
   2:src/keys.c    ****  * 
   3:src/keys.c    ****  * 34S is free software: you can redistribute it and/or modify
   4:src/keys.c    ****  * it under the terms of the GNU General Public License as published by
   5:src/keys.c    ****  * the Free Software Foundation, either version 3 of the License, or
   6:src/keys.c    ****  * (at your option) any later version.
   7:src/keys.c    ****  * 
   8:src/keys.c    ****  * 34S is distributed in the hope that it will be useful,
   9:src/keys.c    ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:src/keys.c    ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:src/keys.c    ****  * GNU General Public License for more details.
  12:src/keys.c    ****  * 
  13:src/keys.c    ****  * You should have received a copy of the GNU General Public License
  14:src/keys.c    ****  * along with 34S.  If not, see <http://www.gnu.org/licenses/>.
  15:src/keys.c    ****  */
  16:src/keys.c    **** 
  17:src/keys.c    **** 
  18:src/keys.c    **** #ifdef DM42
  19:src/keys.c    **** #include "dmcp.h"
  20:src/keys.c    **** #endif
  21:src/keys.c    **** 
  22:src/keys.c    **** #define DM42SAFE
  23:src/keys.c    **** 
  24:src/keys.c    **** #include "features.h"
  25:src/keys.c    **** #include "xeq.h"
  26:src/keys.c    **** #include "keys.h"
  27:src/keys.c    **** #include "display.h"
  28:src/keys.c    **** #include "lcd.h"
  29:src/keys.c    **** #include "int.h"
ARM GAS  /tmp/cc6xzGMw.s 			page 2


  30:src/keys.c    **** #include "consts.h"
  31:src/keys.c    **** #include "storage.h"
  32:src/keys.c    **** #include "stats.h"
  33:src/keys.c    **** #include "catalogues.h"
  34:src/keys.c    **** #ifndef DM42
  35:src/keys.c    **** #include "printer.h"
  36:src/keys.c    **** #endif
  37:src/keys.c    **** #ifdef INCLUDE_C_LOCK
  38:src/keys.c    **** #include "decn.h"
  39:src/keys.c    **** #endif
  40:src/keys.c    **** #undef DM42SAFE
  41:src/keys.c    **** 
  42:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
  43:src/keys.c    **** extern void changed_catalog_state();
  44:src/keys.c    **** #endif
  45:src/keys.c    **** 
  46:src/keys.c    **** #ifdef INCLUDE_C_LOCK
  47:src/keys.c    **** void finish_cpx_entry ( int );
  48:src/keys.c    **** void stack_begin ( int ); 
  49:src/keys.c    **** static int process_cmplx ( const keycode );
  50:src/keys.c    **** static void stack_restore ( void );
  51:src/keys.c    **** #endif
  52:src/keys.c    **** 
  53:src/keys.c    **** #define STATE_UNFINISHED	(OP_SPEC | OP_UNFINISHED)
  54:src/keys.c    **** #define STATE_BACKSPACE		(OP_SPEC | OP_BACKSPACE)
  55:src/keys.c    **** #define STATE_SST		(OP_SPEC | OP_SST)
  56:src/keys.c    **** #define STATE_BST		(OP_SPEC | OP_BST)
  57:src/keys.c    **** #define STATE_RUNNING		(OP_SPEC | OP_RUNNING)
  58:src/keys.c    **** #define STATE_IGNORE		(OP_SPEC | OP_IGNORE)
  59:src/keys.c    **** #define STATE_WINDOWLEFT	(OP_SPEC | OP_WINDOWLEFT)
  60:src/keys.c    **** #define STATE_WINDOWRIGHT	(OP_SPEC | OP_WINDOWRIGHT)
  61:src/keys.c    **** //#define STATE_SHOW		(OP_SPEC | OP_SHOW)
  62:src/keys.c    **** 
  63:src/keys.c    **** /* Define this if the key codes map rows sequentially */
  64:src/keys.c    **** 
  65:src/keys.c    **** #define TEST_EQ		0
  66:src/keys.c    **** #define TEST_NE		1
  67:src/keys.c    **** #define TEST_LT		2
  68:src/keys.c    **** #define TEST_LE		3
  69:src/keys.c    **** #define TEST_GT		4
  70:src/keys.c    **** #define TEST_GE		5
  71:src/keys.c    **** 
  72:src/keys.c    **** enum confirmations {
  73:src/keys.c    **** 	// Apart from the first of these, these must be in the same
  74:src/keys.c    **** 	// order as the opcodes in xeq.h: OP_CLALL, OP_RESET, OP_CLPROG, OP_CLPALL
  75:src/keys.c    **** 	confirm_none=0, confirm_clall, confirm_reset, confirm_clprog, confirm_clpall
  76:src/keys.c    **** };
  77:src/keys.c    **** 
  78:src/keys.c    **** FLAG WasDataEntry;
  79:src/keys.c    **** 
  80:src/keys.c    **** /* Local data to this module */
  81:src/keys.c    **** unsigned int OpCode;
  82:src/keys.c    **** FLAG OpCodeDisplayPending;
  83:src/keys.c    **** FLAG GoFast;
  84:src/keys.c    **** FLAG NonProgrammable;
  85:src/keys.c    **** 
  86:src/keys.c    **** /*
ARM GAS  /tmp/cc6xzGMw.s 			page 3


  87:src/keys.c    ****  *  Needed before definition
  88:src/keys.c    ****  */ 
  89:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end);
  90:src/keys.c    **** 
  91:src/keys.c    **** unsigned int nd_opcode;
  92:src/keys.c    **** 
  93:src/keys.c    **** /*
  94:src/keys.c    ****  *  Return the shift state
  95:src/keys.c    ****  */
  96:src/keys.c    **** enum shifts cur_shift(void) {
  97:src/keys.c    **** 	enum shifts s = shift_down();
  98:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
  99:src/keys.c    **** }
 100:src/keys.c    **** 
 101:src/keys.c    **** /*
 102:src/keys.c    ****  *  Set new shift state, return previous state
 103:src/keys.c    ****  */
 104:src/keys.c    **** static enum shifts set_shift(enum shifts shift) {
 105:src/keys.c    **** 	enum shifts r = cur_shift();
 106:src/keys.c    **** 	State2.shifts = shift;
 107:src/keys.c    **** 	//	State2.alpha_pos = 0;
 108:src/keys.c    **** 	return r;
 109:src/keys.c    **** }
 110:src/keys.c    **** 
 111:src/keys.c    **** /*
 112:src/keys.c    ****  *  Clear shift state and return previous state
 113:src/keys.c    ****  */
 114:src/keys.c    **** enum shifts reset_shift(void) {
 115:src/keys.c    **** 	return set_shift(SHIFT_N);
 116:src/keys.c    **** }
 117:src/keys.c    **** 
 118:src/keys.c    **** /*
 119:src/keys.c    ****  *  Toggle shift state
 120:src/keys.c    ****  */
 121:src/keys.c    **** static void toggle_shift(enum shifts shift) {
 122:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 123:src/keys.c    **** }
 124:src/keys.c    **** 
 125:src/keys.c    **** 
 126:src/keys.c    **** /*
 127:src/keys.c    ****  * Mapping from the key code to a linear index
 128:src/keys.c    ****  * The trick is to move the shifts and the holes in the map out of the way
 129:src/keys.c    ****  */
 130:src/keys.c    **** #ifdef DM42
 131:src/keys.c    **** static int keycode_to_linear_for_alpha(const keycode c)
 132:src/keys.c    **** {
 133:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 134:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 135:src/keys.c    **** 		 6,  7,  8,  9, 10, 11,   // K10 - K15
 136:src/keys.c    **** 		 12, 13, 14, 15, 16,  0,   // K20 - K24
 137:src/keys.c    **** 		17, 18, 19, 20, 21,  0,   // K30 - K34
 138:src/keys.c    **** 		22, 23, 24, 25, 26,  0,   // K40 - K44
 139:src/keys.c    **** 		27, 28, 29, 30, 31,  0,   // K50 - K54
 140:src/keys.c    **** 		32, 33, 34, 35, 36,       // K60 - K64
 141:src/keys.c    **** 		37, 37, 37, 37, 37, 37       // K_F, G, H, ARROW, CMPLX, NOP
 142:src/keys.c    **** 	};
 143:src/keys.c    **** 	return linear_key_map[c];
ARM GAS  /tmp/cc6xzGMw.s 			page 4


 144:src/keys.c    **** }
 145:src/keys.c    **** 
 146:src/keys.c    **** static int keycode_to_linear(const keycode c)
 147:src/keys.c    **** {
 148:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 149:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 150:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 151:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 152:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 153:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 154:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 155:src/keys.c    **** 		29, 30, 31, 32, 33,       // K60 - K64
 156:src/keys.c    **** 		34, 34, 34,  4,  5, 34,        // K_F, G, H, ARROW, CMPLX, NOP
 157:src/keys.c    **** 	};
 158:src/keys.c    **** 	return linear_key_map[c];
 159:src/keys.c    **** }
 160:src/keys.c    **** #else
 161:src/keys.c    **** static int keycode_to_linear(const keycode c)
 162:src/keys.c    **** {
 163:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 ] = {
 164:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 165:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 166:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 167:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 168:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 169:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 170:src/keys.c    **** 		29, 30, 31, 32, 33        // K60 - K64
 171:src/keys.c    **** 	};
 172:src/keys.c    **** 	return linear_key_map[c];
 173:src/keys.c    **** }
 174:src/keys.c    **** #endif
 175:src/keys.c    **** /*
 176:src/keys.c    ****  * Mapping from the key code to a row column code ('A'=11 to '+'=75)
 177:src/keys.c    ****  * Used in KEY? and for shorthand addressing
 178:src/keys.c    ****  */
 179:src/keys.c    **** int keycode_to_row_column(const int c)
 180:src/keys.c    **** {
 181:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 182:src/keys.c    **** }
 183:src/keys.c    **** 
 184:src/keys.c    **** /*
 185:src/keys.c    ****  * Mapping from a row column code ('A'=11 to '+'=75) to the key code
 186:src/keys.c    ****  * Used in PUTK and KTYPE.
 187:src/keys.c    ****  */
 188:src/keys.c    **** 
 189:src/keys.c    **** int row_column_to_keycode(const int c)
 190:src/keys.c    **** {
 191:src/keys.c    **** 	int row = c / 10 - 1;
 192:src/keys.c    **** 	int col = c % 10 - 1;
 193:src/keys.c    **** 
 194:src/keys.c    **** 	if (row < 0 || row > 6 || col > 5 - (row >= 2))
 195:src/keys.c    **** 		return -1;
 196:src/keys.c    **** 	return row * 6 + col;
 197:src/keys.c    **** }
 198:src/keys.c    **** 
 199:src/keys.c    **** /*
 200:src/keys.c    ****  *  Mapping from a key code to a digit from 0 to 9 or to a register address
ARM GAS  /tmp/cc6xzGMw.s 			page 5


 201:src/keys.c    ****  *  Bit seven is set if the key cannot be used as a label shortcut
 202:src/keys.c    ****  */
 203:src/keys.c    **** // Decision to make here about whether the top row can be used as shortcuts.
 204:src/keys.c    **** // Also, which other keys can / can't be used as shortcuts?
 205:src/keys.c    **** // Registers I, j, K, L will move with the new alpha layout.
 206:src/keys.c    **** 
 207:src/keys.c    **** #define NO_REG 0x7f
 208:src/keys.c    **** #define NO_SHORT 0x80
 209:src/keys.c    **** #ifdef DM42
 210:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 211:src/keys.c    **** {
 212:src/keys.c    ****   static const unsigned char map[] = {
 213:src/keys.c    ****     // K00 - K05
 214:src/keys.c    ****     NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 215:src/keys.c    ****     NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 216:src/keys.c    ****     NO_SHORT | NO_REG,   NO_REG,
 217:src/keys.c    ****     // K10 - K15
 218:src/keys.c    ****     NO_REG, NO_REG, regI_idx, regJ_idx, regK_idx, regL_idx, 
 219:src/keys.c    ****     // K20 - K24
 220:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 221:src/keys.c    ****     // K30 - K34
 222:src/keys.c    ****     NO_REG, 7, 8, 9, NO_REG,
 223:src/keys.c    ****     // K40 - K44
 224:src/keys.c    ****     NO_REG, NO_SHORT | regT_idx, 5, 6, NO_REG,
 225:src/keys.c    ****     // K50 - K54
 226:src/keys.c    ****     NO_REG, NO_SHORT | regX_idx, NO_SHORT | regY_idx, NO_SHORT | regZ_idx, NO_REG,
 227:src/keys.c    ****     // K60 - K64
 228:src/keys.c    ****     NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE, NO_REG, NO_REG,
 229:src/keys.c    ****     // Shifts etc. - K_F, K_G, K_H, K_ARROW, K_CMPLX. K_NOP
 230:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 231:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, 
 232:src/keys.c    ****   };
 233:src/keys.c    **** 
 234:src/keys.c    ****   return (unsigned int) map[keycode_to_linear_for_alpha(c)];
 235:src/keys.c    **** }
 236:src/keys.c    **** #else
 237:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 238:src/keys.c    **** {
 239:src/keys.c    ****   static const unsigned char map[] = {
 240:src/keys.c    **** 		// K00 - K05
 241:src/keys.c    **** 		NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 242:src/keys.c    **** 		NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 243:src/keys.c    **** 		NO_SHORT | NO_REG,   NO_REG,
 244:src/keys.c    **** 		// K10 - K12
 245:src/keys.c    **** 		NO_REG, NO_REG, regI_idx, 
 246:src/keys.c    **** 		// K20 - K24
 247:src/keys.c    **** 		NO_SHORT | NO_REG, regJ_idx, regK_idx, regL_idx, NO_SHORT | NO_REG,
 248:src/keys.c    **** 		// K30 - K34
 249:src/keys.c    **** 		NO_REG, 7, 8, 9, NO_REG,
 250:src/keys.c    **** 		// K40 - K44
 251:src/keys.c    **** 		NO_REG, 4, 5, 6, regT_idx,
 252:src/keys.c    **** 		// K50 - K54
 253:src/keys.c    **** 		NO_REG, 1, 2, 3, NO_REG,
 254:src/keys.c    **** 		// K60 - K63
 255:src/keys.c    **** 		NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE,
 256:src/keys.c    **** 		regY_idx, regZ_idx,
 257:src/keys.c    **** 		// Shifts, etc
ARM GAS  /tmp/cc6xzGMw.s 			page 6


 258:src/keys.c    **** 		NO_REG
 259:src/keys.c    **** 	};
 260:src/keys.c    **** 
 261:src/keys.c    **** 	return (unsigned int) map[keycode_to_linear(c)];
 262:src/keys.c    **** }
 263:src/keys.c    **** #endif
 264:src/keys.c    **** /*
 265:src/keys.c    ****  *  Mapping of a keycode and shift state to a catalogue number
 266:src/keys.c    ****  */
 267:src/keys.c    **** static enum catalogues keycode_to_cat(const keycode c, enum shifts shift)
 268:src/keys.c    **** {
 269:src/keys.c    ****   enum catalogues cat = CATALOGUE_NONE;
 270:src/keys.c    ****   int i, col, max;
 271:src/keys.c    ****   const struct _map {
 272:src/keys.c    ****     unsigned char key, cat[3];
 273:src/keys.c    ****   } *cp;
 274:src/keys.c    **** 
 275:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 276:src/keys.c    **** 	if (C_LOCKED) { // Limited set of catalogues available in complex lock mode - all listed here
 277:src/keys.c    **** 		if (shift == SHIFT_H) {
 278:src/keys.c    **** 			switch (c) {
 279:src/keys.c    **** 				case K53:
 280:src/keys.c    **** 					return CATALOGUE_COMPLEX;
 281:src/keys.c    **** 				case K04:
 282:src/keys.c    **** 					return CATALOGUE_CONV;
 283:src/keys.c    **** 				case K05:
 284:src/keys.c    **** 					return CATALOGUE_MODE;
 285:src/keys.c    **** 				case K20:
 286:src/keys.c    **** 					if ( (REAL_FLAG || IMAG_FLAG) ) { // number being entered
 287:src/keys.c    **** 						finish_cpx_entry(1);
 288:src/keys.c    **** 					}
 289:src/keys.c    **** 					return CATALOGUE_COMPLEX_CONST;
 290:src/keys.c    **** 				default:
 291:src/keys.c    **** 					return CATALOGUE_NONE;
 292:src/keys.c    **** 			}
 293:src/keys.c    **** 		}
 294:src/keys.c    **** 		if ( (shift == SHIFT_G) && (c == K60) )
 295:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 296:src/keys.c    **** 		if ( (shift == SHIFT_F) && (c == K20) ) {
 297:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 298:src/keys.c    **** 				SET_REAL;
 299:src/keys.c    **** 				stack_begin (1);
 300:src/keys.c    **** 			}
 301:src/keys.c    **** 			else if (CmdLineLength) {
 302:src/keys.c    **** 				CmdLineLength = 0;
 303:src/keys.c    **** 				CmdLineEex = 0;
 304:src/keys.c    **** 				CmdLineDot = 0;
 305:src/keys.c    **** 			}
 306:src/keys.c    **** 			return CATALOGUE_CONST;
 307:src/keys.c    **** 		}
 308:src/keys.c    **** 		return CATALOGUE_NONE;
 309:src/keys.c    **** 	}
 310:src/keys.c    **** #endif
 311:src/keys.c    ****   // Common to both alpha mode and normal mode is the programming X.FCN catalogue
 312:src/keys.c    ****   if (c == K53 && shift == SHIFT_H && ! State2.runmode && ! State2.cmplx && ! State2.multi)
 313:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 314:src/keys.c    **** 
ARM GAS  /tmp/cc6xzGMw.s 			page 7


 315:src/keys.c    ****   if (! State2.alphas && ! State2.multi) {
 316:src/keys.c    ****     /*
 317:src/keys.c    ****      *  Normal processing - Not alpha mode
 318:src/keys.c    ****      */
 319:src/keys.c    ****     static const struct _map cmap[] = {
 320:src/keys.c    **** #ifdef DM42
 321:src/keys.c    ****       { K04, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 322:src/keys.c    **** #else
 323:src/keys.c    ****       { K_ARROW, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 324:src/keys.c    **** #endif
 325:src/keys.c    ****       { K05,     { CATALOGUE_MODE,      CATALOGUE_MODE,      CATALOGUE_MODE          } },
 326:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
 327:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_USER          } },
 328:src/keys.c    **** #else
 329:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_LABELS        } },
 330:src/keys.c    **** #endif
 331:src/keys.c    ****       { K20,     { CATALOGUE_CONST,     CATALOGUE_NONE,      CATALOGUE_COMPLEX_CONST } },
 332:src/keys.c    ****       { K41,     { CATALOGUE_PROB,      CATALOGUE_NONE,      CATALOGUE_PROB          } },
 333:src/keys.c    ****       { K42,     { CATALOGUE_STATS,     CATALOGUE_NONE,      CATALOGUE_STATS         } },
 334:src/keys.c    ****       { K43,     { CATALOGUE_SUMS,      CATALOGUE_NONE,      CATALOGUE_SUMS          } },
 335:src/keys.c    ****       { K44,     { CATALOGUE_MATRIX,    CATALOGUE_NONE,      CATALOGUE_MATRIX        } },
 336:src/keys.c    ****       { K50,     { CATALOGUE_STATUS,    CATALOGUE_STATUS,    CATALOGUE_STATUS        } },
 337:src/keys.c    ****       { K51,     { CATALOGUE_TEST,      CATALOGUE_TEST,      CATALOGUE_TEST          } },
 338:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
 339:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_INTERNAL      } },
 340:src/keys.c    **** #else
 341:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_PROG          } },
 342:src/keys.c    **** #endif
 343:src/keys.c    ****       { K53,     { CATALOGUE_NORMAL,    CATALOGUE_INT,       CATALOGUE_COMPLEX       } },
 344:src/keys.c    ****     };
 345:src/keys.c    **** 
 346:src/keys.c    ****     if (c == K60 && shift == SHIFT_G) {
 347:src/keys.c    ****       /*
 348:src/keys.c    ****        *  SHOW starts register browser
 349:src/keys.c    ****        */
 350:src/keys.c    ****       return CATALOGUE_REGISTERS;
 351:src/keys.c    ****     }
 352:src/keys.c    **** #if 0
 353:src/keys.c    ****     // conflicts with c# 002 and c# 003
 354:src/keys.c    ****     if ((c == K52 || c == K53) && shift == SHIFT_N && State2.cmplx && State2.catalogue == CATALOGUE
 355:src/keys.c    ****       /*
 356:src/keys.c    ****        *  Shorthand to complex P.FCN & X.FCN - h may be omitted
 357:src/keys.c    ****        */
 358:src/keys.c    ****       shift = SHIFT_H;
 359:src/keys.c    ****     }
 360:src/keys.c    **** #endif
 361:src/keys.c    ****     if (shift != SHIFT_H) {
 362:src/keys.c    ****       /*
 363:src/keys.c    ****        *  All standard catalogues are on h-shifted keys
 364:src/keys.c    ****        */
 365:src/keys.c    ****       return CATALOGUE_NONE;
 366:src/keys.c    ****     }
 367:src/keys.c    **** 
 368:src/keys.c    ****     /*
 369:src/keys.c    ****      *  Prepare search
 370:src/keys.c    ****      */
 371:src/keys.c    ****     cp = cmap;
ARM GAS  /tmp/cc6xzGMw.s 			page 8


 372:src/keys.c    **** #ifndef WINGUI
 373:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx || shift_down() == SHIFT_H ? 2 : 0;
 374:src/keys.c    **** #else
 375:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx ? 2 : 0;
 376:src/keys.c    **** #endif
 377:src/keys.c    ****     max = sizeof(cmap) / sizeof(cmap[0]);
 378:src/keys.c    ****   }
 379:src/keys.c    ****   else {
 380:src/keys.c    ****     /*
 381:src/keys.c    ****      *  All the alpha catalogues go here
 382:src/keys.c    ****      */
 383:src/keys.c    **** #ifdef DM42
 384:src/keys.c    ****     static const struct _map amap[] = {
 385:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 386:src/keys.c    ****       { K05, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 387:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 388:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 389:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 390:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 391:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 392:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 393:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 394:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 395:src/keys.c    ****     };
 396:src/keys.c    **** #else
 397:src/keys.c    ****     static const struct _map amap[] = {
 398:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 399:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 400:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 401:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 402:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 403:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 404:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 405:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 406:src/keys.c    ****     };
 407:src/keys.c    **** #endif
 408:src/keys.c    ****     static const char smap[] = { 0, 1, 0, 2 }; // Map shifts to columns;
 409:src/keys.c    **** 
 410:src/keys.c    ****     /*
 411:src/keys.c    ****      *  Prepare search
 412:src/keys.c    ****      */
 413:src/keys.c    ****     cp = amap;
 414:src/keys.c    ****     col = smap[shift];
 415:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 416:src/keys.c    ****   }
 417:src/keys.c    **** 
 418:src/keys.c    ****   /*
 419:src/keys.c    ****    *  Search the key in one of the tables
 420:src/keys.c    ****    */
 421:src/keys.c    ****   for (i = 0; i < max; ++i, ++cp) {
 422:src/keys.c    ****     if (cp->key == c) {
 423:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 424:src/keys.c    ****       break;
 425:src/keys.c    ****     }
 426:src/keys.c    ****   }
 427:src/keys.c    ****   if (State2.multi && (cat < CATALOGUE_ALPHA_SYMBOLS || cat > CATALOGUE_ALPHA_SUBSCRIPTS)) {
 428:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
ARM GAS  /tmp/cc6xzGMw.s 			page 9


 429:src/keys.c    ****     cat = CATALOGUE_NONE;
 430:src/keys.c    ****   }
 431:src/keys.c    ****   return cat;
 432:src/keys.c    **** }
 433:src/keys.c    **** 
 434:src/keys.c    **** #ifdef DM42
 435:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 436:src/keys.c    **** {
 437:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 438:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 439:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 440:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 441:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 442:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 443:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 444:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 445:src/keys.c    **** 
 446:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 447:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 448:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 449:src/keys.c    **** 		{ 'J',  0257, 0000, 0000, 'j',  0000,  },  // K13
 450:src/keys.c    **** 		{ 'K',  0000, 'K',  0000, 'k',  0251,  },  // K14
 451:src/keys.c    **** 		{ 'L',  0000, 0212, 0000, 'l',  0252,  },  // K15
 452:src/keys.c    **** 
 453:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 454:src/keys.c    **** 		{ 'M',  0000, 0253, 0027, 'm',  0253,  },  // K21
 455:src/keys.c    **** 		{ 'N',  0010, 'N',  0225, 'n',  0254,  },  // K22
 456:src/keys.c    **** 		{ 'O',  0000, 0227, 0257, 'o',  0267,  },  // K23
 457:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 458:src/keys.c    **** 
 459:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 460:src/keys.c    **** 		{ 'P',  '7',  0217, '&',  'p',  0257,  },  // K31
 461:src/keys.c    **** 		{ 'Q',  '8',  0000, '|',  'q',  0000,  },  // K32
 462:src/keys.c    **** 		{ 'R',  '9',  'R',  0013, 'r',  0260,  },  // K33
 463:src/keys.c    **** 		{ 'S',  '/',  0221, '\\', 's',  0261,  },  // K34
 464:src/keys.c    **** 
 465:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 466:src/keys.c    **** 		{ 'T',  '4',  'T',  0000, 't',  0262,  },  // K41
 467:src/keys.c    **** 		{ 'U',  '5',  0000, 0000, 'u',  0000,  },  // K42
 468:src/keys.c    **** 		{ 'V',  '6',  0000, 0000, 'v',  0000,  },  // K43
 469:src/keys.c    **** 		{ 'W', 0034,  0000, 0000, 'w',  0000,  },  // K44
 470:src/keys.c    **** 
 471:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 472:src/keys.c    **** 		{ 'X',  '1',  0215, 0000, 'x',  0255,  },  // K51
 473:src/keys.c    **** 		{ 'Y',  '2',  'Y',  0000, 'y',  0263,  },  // K52
 474:src/keys.c    **** 		{ 'Z',  '3',  'Z',  0000, 'z',  0245,  },  // K53
 475:src/keys.c    **** 		{ '-',  '(',  ')',  0000, 0000, 0000,  },  // K54
 476:src/keys.c    **** 
 477:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K60
 478:src/keys.c    **** 		{ ':',  '0',  0207, ' ',  ';',  0247,  },  // K61
 479:src/keys.c    **** 		{ '.',  '.',  0226, 0000, '.',  0266,  },  // K62
 480:src/keys.c    **** 		{ '?',  0000, 0041, 0000, '?',  0000,  },  // K63
 481:src/keys.c    **** 		{ ' ',  '+',  '=',  0000, ' ',  ' ',   },  // K64
 482:src/keys.c    **** 
 483:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // shifts etc.
 484:src/keys.c    **** 	};
 485:src/keys.c    **** 	if (State2.alphashift) {
ARM GAS  /tmp/cc6xzGMw.s 			page 10


 486:src/keys.c    **** 		if (shift == SHIFT_N)
 487:src/keys.c    **** 			shift = SHIFT_LC_N;
 488:src/keys.c    **** 		else if (shift == SHIFT_G)
 489:src/keys.c    **** 			shift = SHIFT_LC_G;
 490:src/keys.c    **** 	}
 491:src/keys.c    **** 	return alphamap[keycode_to_linear_for_alpha(c)][shift];
 492:src/keys.c    **** }
 493:src/keys.c    **** #else
 494:src/keys.c    **** /*
 495:src/keys.c    ****  * Mapping from key position to alpha in the four key planes plus
 496:src/keys.c    ****  * the two lower case planes.
 497:src/keys.c    ****  */
 498:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 499:src/keys.c    **** {
 500:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 501:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 502:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 503:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 504:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 505:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 506:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 507:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 508:src/keys.c    **** 
 509:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 510:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 511:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 512:src/keys.c    **** 
 513:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 514:src/keys.c    **** 		{ 'J',  '(',  ')',  0027, 'j',  ')',   },  // K21
 515:src/keys.c    **** 		{ 'K',  0010, 'K',  0225, 'k',  0251,  },  // K22
 516:src/keys.c    **** 		{ 'L',  0000, 0212, 0257, 'l',  0252,  },  // K23
 517:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 518:src/keys.c    **** 
 519:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 520:src/keys.c    **** 		{ 'M',  '7',  'M',  '&',  'm',  0253,  },  // K31
 521:src/keys.c    **** 		{ 'N',  '8',  'N',  '|',  'n',  0254,  },  // K32
 522:src/keys.c    **** 		{ 'O',  '9',  0227, 0013, 'o',  0267,  },  // K33
 523:src/keys.c    **** 		{ 'P',  '/',  0217, '\\', 'p',  0257,  },  // K34
 524:src/keys.c    **** 
 525:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 526:src/keys.c    **** 		{ 'Q',  '4',  0000, 0000, 'q',  0000,  },  // K41
 527:src/keys.c    **** 		{ 'R',  '5',  'R',  0000, 'r',  0260,  },  // K42
 528:src/keys.c    **** 		{ 'S',  '6',  0221, 0000, 's',  0261,  },  // K43
 529:src/keys.c    **** 		{ 'T',  0034, 'T',  0000, 't',  0262,  },  // K44
 530:src/keys.c    **** 
 531:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 532:src/keys.c    **** 		{ '1',  '1',  0207, 0000, '1',  0247,  },  // K51
 533:src/keys.c    **** 		{ 'U',  '2',  0000, 0000, 'u',  0000,  },  // K52
 534:src/keys.c    **** 		{ 'V',  '3',  0000, 0000, 'v',  0000,  },  // K53
 535:src/keys.c    **** 		{ 'W',  0034, 0000, 0000, 'w',  0000,  },  // K54
 536:src/keys.c    **** 
 537:src/keys.c    **** 		{ 0000, 0222, 0000, 0000, 0000, 0000,  },  // K60
 538:src/keys.c    **** 		{ '0',  '0',  0226, ' ',  '0',  0266,  },  // K61
 539:src/keys.c    **** 		{ 'X',  '.',  0215, 0000, 'x',  0255,  },  // K62
 540:src/keys.c    **** 		{ 'Y',  0000, 'Y',  0000, 'y',  0263,  },  // K63
 541:src/keys.c    **** 		{ 'Z',  '+',  'Z',  0000, 'z',  0245,  },  // K64
 542:src/keys.c    **** 	};
ARM GAS  /tmp/cc6xzGMw.s 			page 11


 543:src/keys.c    **** 	if (State2.alphashift) {
 544:src/keys.c    **** 		if (shift == SHIFT_N)
 545:src/keys.c    **** 			shift = SHIFT_LC_N;
 546:src/keys.c    **** 		else if (shift == SHIFT_G)
 547:src/keys.c    **** 			shift = SHIFT_LC_G;
 548:src/keys.c    **** 	}
 549:src/keys.c    **** 	return alphamap[keycode_to_linear(c)][shift];
 550:src/keys.c    **** }
 551:src/keys.c    **** #endif
 552:src/keys.c    **** static void init_arg(const enum rarg base) {
 553:src/keys.c    **** 	if (is_bad_cmdline())
 554:src/keys.c    **** 		return;
 555:src/keys.c    **** 	CmdBase = base;
 556:src/keys.c    **** 	State2.ind = 0;
 557:src/keys.c    **** 	State2.digval = 0;
 558:src/keys.c    **** 	State2.numdigit = 0;
 559:src/keys.c    **** 	State2.rarg = 1;
 560:src/keys.c    **** 	State2.dot = 0;
 561:src/keys.c    **** 	State2.local = 0;
 562:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 563:src/keys.c    **** }
 564:src/keys.c    **** 
 565:src/keys.c    **** static void init_cat(enum catalogues cat) {
 566:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 567:src/keys.c    **** 		// Save last catalogue for a later restore
 568:src/keys.c    **** 		State.last_cat = State2.catalogue;
 569:src/keys.c    **** 		CmdLineLength = 0;
 570:src/keys.c    **** 	}
 571:src/keys.c    **** 	process_cmdline();
 572:src/keys.c    **** 
 573:src/keys.c    **** 	State2.labellist = 0;
 574:src/keys.c    **** 	State2.registerlist = 0;
 575:src/keys.c    **** 	State2.status = 0;
 576:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 577:src/keys.c    **** 
 578:src/keys.c    **** 	switch (cat) {
 579:src/keys.c    **** 	case CATALOGUE_LABELS:
 580:src/keys.c    **** 		// Label browser
 581:src/keys.c    **** 		State2.labellist = 1;
 582:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 583:src/keys.c    **** 		break;
 584:src/keys.c    **** 	
 585:src/keys.c    **** 	case CATALOGUE_REGISTERS:
 586:src/keys.c    **** 		// Register browser
 587:src/keys.c    **** 		State2.registerlist = 1;
 588:src/keys.c    **** 		State2.digval = regX_idx;
 589:src/keys.c    **** 		State2.digval2 = 0;
 590:src/keys.c    **** 		break;
 591:src/keys.c    **** 
 592:src/keys.c    **** 	case CATALOGUE_STATUS:
 593:src/keys.c    **** 		// Flag browser
 594:src/keys.c    **** 		State2.status = 1;
 595:src/keys.c    **** 		break;
 596:src/keys.c    **** 
 597:src/keys.c    **** 	default:
 598:src/keys.c    **** 		// Normal catalogue
 599:src/keys.c    **** 		State2.catalogue = cat;
ARM GAS  /tmp/cc6xzGMw.s 			page 12


 600:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 601:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 602:src/keys.c    **** 			// Different catalogue, reset position
 603:src/keys.c    **** 			State.catpos = 0;
 604:src/keys.c    **** 		}
 605:src/keys.c    **** 	}
 606:src/keys.c    **** 	reset_shift();
 607:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 608:src/keys.c    **** 	changed_catalog_state();
 609:src/keys.c    **** #endif
 610:src/keys.c    **** }
 611:src/keys.c    **** 
 612:src/keys.c    **** /*
 613:src/keys.c    ****  *  Reset the internal state to a sane default
 614:src/keys.c    ****  */
 615:src/keys.c    **** void init_state(void) {
 616:src/keys.c    **** #ifndef REALBUILD
 617:src/keys.c    **** 	unsigned int a = State2.flags;
 618:src/keys.c    **** 	unsigned int b = State2.trace;
 619:src/keys.c    **** #else
 620:src/keys.c    **** 	FLAG t = TestFlag;
 621:src/keys.c    **** #endif
 622:src/keys.c    **** 	int v = Voltage;
 623:src/keys.c    **** 	int k = LastKey;
 624:src/keys.c    **** 
 625:src/keys.c    **** 	CmdBase = 0;
 626:src/keys.c    **** 	// Removed: will clear any locals on power off
 627:src/keys.c    **** 	// clrretstk(0);
 628:src/keys.c    **** 
 629:src/keys.c    **** 	xset(&State2, 0, sizeof(State2));
 630:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 631:src/keys.c    **** 
 632:src/keys.c    **** #ifdef DEFAULT_TO_SSIZE8 							//JM3
 633:src/keys.c    **** 	INIT_8; 								//JM3
 634:src/keys.c    **** 	UState.stack_depth = 1; // set stack size to 8 	//JM3
 635:src/keys.c    **** #endif  									//JM3
 636:src/keys.c    **** 
 637:src/keys.c    **** 
 638:src/keys.c    **** #ifdef DEFAULT_DATE_YMD			//JM5
 639:src/keys.c    **** 	UState.date_mode = 1;		//JM5
 640:src/keys.c    **** #endif							//JM5
 641:src/keys.c    **** 
 642:src/keys.c    **** #ifdef DEFAULT_DATE_MDY			//JM5
 643:src/keys.c    **** 	UState.date_mode = 2;		//JM5
 644:src/keys.c    **** #endif							//JM5
 645:src/keys.c    **** 
 646:src/keys.c    **** #ifdef YREG_ON_BY_DEFAULT
 647:src/keys.c    **** 	UState.show_y = 1;
 648:src/keys.c    **** #endif
 649:src/keys.c    **** 
 650:src/keys.c    **** #ifdef DEFAULT_TO_J
 651:src/keys.c    **** 	SET_CPX_J;
 652:src/keys.c    **** #endif
 653:src/keys.c    **** 
 654:src/keys.c    **** #ifdef DEFAULT_TO_CPX_YES
 655:src/keys.c    **** 	cpx_nop(OP_CYES);
 656:src/keys.c    **** #endif
ARM GAS  /tmp/cc6xzGMw.s 			page 13


 657:src/keys.c    **** 
 658:src/keys.c    **** #ifdef DEFAULT_TO_C_LOCK
 659:src/keys.c    **** 	cpx_nop(OP_CYES);
 660:src/keys.c    **** 	cpx_nop(OP_C_ON);
 661:src/keys.c    **** #endif
 662:src/keys.c    **** #endif
 663:src/keys.c    **** 
 664:src/keys.c    **** 	State2.test = TST_NONE;
 665:src/keys.c    **** 	State2.runmode = 1;
 666:src/keys.c    **** 	update_program_bounds(1);
 667:src/keys.c    **** 	set_lift();
 668:src/keys.c    **** 
 669:src/keys.c    **** 	// Restore stuff that has been moved to State2 for space reasons
 670:src/keys.c    **** 	// but must not be cleared.
 671:src/keys.c    **** 	Voltage = v;
 672:src/keys.c    **** 	LastKey = k;
 673:src/keys.c    **** #ifndef REALBUILD
 674:src/keys.c    **** 	State2.trace = b;
 675:src/keys.c    **** 	State2.flags = a;
 676:src/keys.c    **** #else
 677:src/keys.c    **** 	TestFlag = t;
 678:src/keys.c    **** #endif
 679:src/keys.c    **** 	ShowRegister = regX_idx;
 680:src/keys.c    **** }
 681:src/keys.c    **** 
 682:src/keys.c    **** void soft_init_state(void) {
 683:src/keys.c    **** 	int soft;
 684:src/keys.c    **** 	unsigned int runmode;
 685:src/keys.c    **** 	unsigned int alphas;
 686:src/keys.c    **** 
 687:src/keys.c    **** 	if (CmdLineLength) {
 688:src/keys.c    **** 		CmdLineLength = 0;
 689:src/keys.c    **** 		CmdLineEex = 0;
 690:src/keys.c    **** 		CmdLineDot = 0;
 691:src/keys.c    **** 		return;
 692:src/keys.c    **** 	}
 693:src/keys.c    **** 	soft = State2.multi || State2.rarg || State2.hyp || State2.gtodot || State2.labellist ||
 694:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 695:src/keys.c    **** 	runmode = State2.runmode;
 696:src/keys.c    **** 	alphas = State2.alphas;
 697:src/keys.c    **** 	init_state();
 698:src/keys.c    **** 	if (soft) {
 699:src/keys.c    **** 		State2.runmode = runmode;
 700:src/keys.c    **** 		State2.alphas = alphas;
 701:src/keys.c    **** 	}
 702:src/keys.c    **** }
 703:src/keys.c    **** 
 704:src/keys.c    **** static int check_confirm(int op) {
 705:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 706:src/keys.c    **** 		const int nilop = argKIND(op);
 707:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 708:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 709:src/keys.c    **** 			return STATE_UNFINISHED;
 710:src/keys.c    **** 		}
 711:src/keys.c    **** #ifndef DM42		
 712:src/keys.c    **** 		if ((nilop >= OP_RECV && nilop <= OP_PSTO)
 713:src/keys.c    **** #endif
ARM GAS  /tmp/cc6xzGMw.s 			page 14


 714:src/keys.c    **** #ifdef DM42
 715:src/keys.c    **** 		    if ((nilop >= OP_SAVE && nilop <= OP_PSTO) // no recv in DM42
 716:src/keys.c    **** #endif
 717:src/keys.c    **** #ifdef INFRARED
 718:src/keys.c    **** 			|| nilop == OP_PRINT_PGM
 719:src/keys.c    **** #endif
 720:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
 721:src/keys.c    **** 			|| nilop == OP_STOPWATCH
 722:src/keys.c    **** #endif
 723:src/keys.c    **** 		) {
 724:src/keys.c    **** 			// These commands are not programmable
 725:src/keys.c    **** 			NonProgrammable = 1;
 726:src/keys.c    **** 		}
 727:src/keys.c    **** 	}
 728:src/keys.c    **** 	return op;
 729:src/keys.c    **** }
 730:src/keys.c    **** 
 731:src/keys.c    **** static void set_smode(const enum single_disp d) {
 732:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 733:src/keys.c    **** }
 734:src/keys.c    **** 
 735:src/keys.c    **** static int check_f_key(int n, const int dflt) {
 736:src/keys.c    **** 	const int code = 100 + n;
 737:src/keys.c    **** 	unsigned int pc = state_pc();
 738:src/keys.c    **** 
 739:src/keys.c    **** 	if (State2.runmode) {
 740:src/keys.c    **** 		if (isXROM(pc))
 741:src/keys.c    **** 			pc = 1;
 742:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 743:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 744:src/keys.c    **** 	}
 745:src/keys.c    **** 	return dflt;
 746:src/keys.c    **** }
 747:src/keys.c    **** 
 748:src/keys.c    **** /* Return non-zero if the current mode is integer and we accept letters
 749:src/keys.c    ****  * as digits.
 750:src/keys.c    ****  */
 751:src/keys.c    **** static int intltr(int d) {
 752:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 753:src/keys.c    **** }
 754:src/keys.c    **** 
 755:src/keys.c    **** /*
 756:src/keys.c    ****  *  Process a key code in the unshifted mode.
 757:src/keys.c    ****  */
 758:src/keys.c    **** static int process_normal(const keycode c)
 759:src/keys.c    **** {
 760:src/keys.c    **** 	static const unsigned short int op_map[] = {
 761:src/keys.c    **** 		// Row 1
 762:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS, // A to D
 763:src/keys.c    **** 		OP_MON  | OP_RECIP,
 764:src/keys.c    **** 		OP_DYA  | OP_POW,
 765:src/keys.c    **** 		OP_MON  | OP_SQRT,
 766:src/keys.c    **** 		OP_SPEC | OP_E,		// ->
 767:src/keys.c    **** 		OP_SPEC | OP_F,		// CPX
 768:src/keys.c    **** 		// Row 2
 769:src/keys.c    **** 		RARG_STO,
 770:src/keys.c    **** 		RARG_RCL,
ARM GAS  /tmp/cc6xzGMw.s 			page 15


 771:src/keys.c    **** 		OP_NIL  | OP_RDOWN,
 772:src/keys.c    **** 		// Row 3
 773:src/keys.c    **** 		OP_SPEC | OP_ENTER,
 774:src/keys.c    **** 		RARG(RARG_SWAPX, regY_idx),
 775:src/keys.c    **** 		OP_SPEC | OP_CHS,	// CHS
 776:src/keys.c    **** 		OP_SPEC | OP_EEX,	// EEX
 777:src/keys.c    **** 		OP_SPEC | OP_CLX,	// <-
 778:src/keys.c    **** 		// Row 4
 779:src/keys.c    **** 		RARG_XEQ,
 780:src/keys.c    **** 		OP_SPEC | OP_7,
 781:src/keys.c    **** 		OP_SPEC | OP_8,
 782:src/keys.c    **** 		OP_SPEC | OP_9,
 783:src/keys.c    **** 		OP_DYA  | OP_DIV,
 784:src/keys.c    **** 		// Row 5
 785:src/keys.c    **** 		STATE_BST,
 786:src/keys.c    **** 		OP_SPEC | OP_4,
 787:src/keys.c    **** 		OP_SPEC | OP_5,
 788:src/keys.c    **** 		OP_SPEC | OP_6,
 789:src/keys.c    **** 		OP_DYA  | OP_MUL,
 790:src/keys.c    **** 		// Row 6
 791:src/keys.c    **** 		STATE_SST,		// SST
 792:src/keys.c    **** 		OP_SPEC | OP_1,
 793:src/keys.c    **** 		OP_SPEC | OP_2,
 794:src/keys.c    **** 		OP_SPEC | OP_3,
 795:src/keys.c    **** 		OP_DYA  | OP_SUB,
 796:src/keys.c    **** 		// Row 7
 797:src/keys.c    **** 		STATE_UNFINISHED,	// ON/C
 798:src/keys.c    **** 		OP_SPEC | OP_0,
 799:src/keys.c    **** 		OP_SPEC | OP_DOT,
 800:src/keys.c    **** 		OP_NIL  | OP_RS,	// R/S
 801:src/keys.c    **** 		OP_DYA  | OP_ADD,
 802:src/keys.c    **** #ifdef DM42
 803:src/keys.c    **** 		OP_NIL  | OP_NOP,  // shifts etc.
 804:src/keys.c    **** #endif
 805:src/keys.c    **** 	};
 806:src/keys.c    **** 
 807:src/keys.c    **** 	int lc = keycode_to_linear(c);
 808:src/keys.c    **** 	int op = op_map[lc];
 809:src/keys.c    **** 	
 810:src/keys.c    **** 	// The switch handles all the special cases
 811:src/keys.c    **** #ifdef DM42
 812:src/keys.c    **** 	int op_int;
 813:src/keys.c    **** 	if (UState.intm) {
 814:src/keys.c    **** 	  switch (c) {
 815:src/keys.c    **** 	  case K00:
 816:src/keys.c    **** 	    op = OP_SPEC | OP_A;
 817:src/keys.c    **** 	    if (intltr(10)) {
 818:src/keys.c    **** 	      return op;
 819:src/keys.c    **** 	    }
 820:src/keys.c    **** 	    else {
 821:src/keys.c    **** 	      return check_f_key(0, op);
 822:src/keys.c    **** 	    }
 823:src/keys.c    **** 	  case K01:
 824:src/keys.c    **** 	    op = OP_SPEC | OP_B;
 825:src/keys.c    **** 	    if (intltr(11)) {
 826:src/keys.c    **** 	      return op;
 827:src/keys.c    **** 	    }
ARM GAS  /tmp/cc6xzGMw.s 			page 16


 828:src/keys.c    **** 	    else {
 829:src/keys.c    **** 	      return check_f_key(1, op);
 830:src/keys.c    **** 	    }
 831:src/keys.c    **** 	  case K03:
 832:src/keys.c    **** 	    op_int = OP_SPEC | OP_C;
 833:src/keys.c    **** 	    if (intltr(12)) {
 834:src/keys.c    **** 	      return op_int;
 835:src/keys.c    **** 	    }
 836:src/keys.c    **** 	    else {
 837:src/keys.c    **** 	      return check_f_key(2, op);
 838:src/keys.c    **** 	    }
 839:src/keys.c    **** 	  case K30:
 840:src/keys.c    **** 	    op_int = OP_SPEC | OP_F;
 841:src/keys.c    **** 	    if (intltr(15)) {
 842:src/keys.c    **** 	      return op_int;
 843:src/keys.c    **** 	    }
 844:src/keys.c    **** 	  default:;
 845:src/keys.c    **** 	  }
 846:src/keys.c    **** 	}
 847:src/keys.c    **** #endif  
 848:src/keys.c    **** 
 849:src/keys.c    **** 	switch (c) {
 850:src/keys.c    **** #ifdef DM42
 851:src/keys.c    **** 	case K00:
 852:src/keys.c    **** 		return check_f_key(0, op);
 853:src/keys.c    **** 	case K01:
 854:src/keys.c    **** 		return check_f_key(1, op);
 855:src/keys.c    **** 	case K03:
 856:src/keys.c    **** 		return check_f_key(2, op);
 857:src/keys.c    **** #else
 858:src/keys.c    **** 	case K00:
 859:src/keys.c    **** 	case K01:
 860:src/keys.c    **** 		if (UState.intm)
 861:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 862:src/keys.c    **** 	case K02:
 863:src/keys.c    **** 	case K03:
 864:src/keys.c    **** 		if (intltr(lc + 10)) {
 865:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 866:src/keys.c    **** 			return op;
 867:src/keys.c    **** 		}
 868:src/keys.c    **** 		return check_f_key(lc, op);
 869:src/keys.c    **** #endif		
 870:src/keys.c    **** 	case K_ARROW:
 871:src/keys.c    **** #ifndef DM42
 872:src/keys.c    **** #ifdef INT_MODE_TEMPVIEW
 873:src/keys.c    **** 		if (intltr(14))
 874:src/keys.c    **** 			return op;
 875:src/keys.c    **** #else
 876:src/keys.c    **** 		if (UState.intm)
 877:src/keys.c    **** 			return op;
 878:src/keys.c    **** #endif
 879:src/keys.c    **** #endif		
 880:src/keys.c    **** 		if (is_bad_cmdline())
 881:src/keys.c    **** 			return STATE_UNFINISHED;
 882:src/keys.c    **** 		process_cmdline_set_lift();
 883:src/keys.c    **** 		State2.arrow = 1;
 884:src/keys.c    **** #ifdef DM42
ARM GAS  /tmp/cc6xzGMw.s 			page 17


 885:src/keys.c    **** 		set_menu (9); // arrow menu
 886:src/keys.c    **** 		display_current_menu ();
 887:src/keys.c    **** 		lcd_refresh ();
 888:src/keys.c    **** #else
 889:src/keys.c    **** 		set_shift(SHIFT_G);
 890:src/keys.c    **** #endif
 891:src/keys.c    **** 		break;
 892:src/keys.c    **** 
 893:src/keys.c    **** 	case K_CMPLX:
 894:src/keys.c    **** #ifdef DM42
 895:src/keys.c    **** 	  if (UState.intm)
 896:src/keys.c    **** 	    break; // return nothing
 897:src/keys.c    **** 	  State2.cmplx = 1;
 898:src/keys.c    **** #else
 899:src/keys.c    **** 	  if (UState.intm)
 900:src/keys.c    **** 	    return op;
 901:src/keys.c    **** 	  State2.cmplx = 1;
 902:src/keys.c    **** #endif
 903:src/keys.c    **** 	  break;
 904:src/keys.c    **** 
 905:src/keys.c    **** 	case K24:				// <-
 906:src/keys.c    **** 		if (State2.disp_temp)
 907:src/keys.c    **** 			return STATE_UNFINISHED;
 908:src/keys.c    **** 		if (State2.runmode)
 909:src/keys.c    **** 			return op;
 910:src/keys.c    **** 		return STATE_BACKSPACE;
 911:src/keys.c    **** 
 912:src/keys.c    **** 	case K10:				// STO
 913:src/keys.c    **** 	case K11:				// RCL
 914:src/keys.c    **** 	case K30:				// XEQ
 915:src/keys.c    **** 		init_arg((enum rarg)op);
 916:src/keys.c    **** 		break;
 917:src/keys.c    **** 
 918:src/keys.c    **** 	default:
 919:src/keys.c    **** 		return op;			// Keys handled by table
 920:src/keys.c    **** 	}
 921:src/keys.c    **** 	return STATE_UNFINISHED;
 922:src/keys.c    **** }
 923:src/keys.c    **** 
 924:src/keys.c    **** 
 925:src/keys.c    **** /*
 926:src/keys.c    ****  *  Process a key code after f or g shift
 927:src/keys.c    ****  */
 928:src/keys.c    **** static int process_fg_shifted(const keycode c) {
 929:src/keys.c    **** 
 930:src/keys.c    **** #define NO_INT 0xf000
 931:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 932:src/keys.c    **** 		// Row 1
 933:src/keys.c    **** 		{ 1,                               0                           }, // HYP
 934:src/keys.c    **** 		{ OP_MON | OP_SIN      | NO_INT,   OP_MON | OP_ASIN   | NO_INT },
 935:src/keys.c    **** 		{ OP_MON | OP_COS      | NO_INT,   OP_MON | OP_ACOS   | NO_INT },
 936:src/keys.c    **** 		{ OP_MON | OP_TAN      | NO_INT,   OP_MON | OP_ATAN   | NO_INT },
 937:src/keys.c    **** 		{ OP_NIL | OP_P2R      | NO_INT,   OP_NIL | OP_R2P    | NO_INT },
 938:src/keys.c    **** 		{ OP_NIL | OP_FRACPROPER,	   OP_NIL | OP_FRACIMPROPER    }, // CPX
 939:src/keys.c    **** 		// Row 2
 940:src/keys.c    **** 		{ OP_NIL | OP_HMS,                 OP_NIL | OP_DEG    | NO_INT },
 941:src/keys.c    **** 		{ OP_NIL | OP_FLOAT,               OP_NIL | OP_RAD    | NO_INT },
ARM GAS  /tmp/cc6xzGMw.s 			page 18


 942:src/keys.c    **** 		{ OP_NIL | OP_RANDOM,              OP_NIL | OP_GRAD   | NO_INT },
 943:src/keys.c    **** 		// Row 3
 944:src/keys.c    **** 		{ STATE_UNFINISHED,		   OP_NIL | OP_FILL            }, // ENTER
 945:src/keys.c    **** 		{ STATE_WINDOWLEFT,   		   STATE_WINDOWRIGHT   	       },
 946:src/keys.c    **** 		{ RARG(RARG_BASE, 2),		   RARG(RARG_BASE, 8)          },
 947:src/keys.c    **** 		{ RARG(RARG_BASE, 10),		   RARG(RARG_BASE, 16)         },
 948:src/keys.c    **** 		{ OP_NIL | OP_CLPROG,		   OP_NIL | OP_SIGMACLEAR      },
 949:src/keys.c    **** 		// Row 4
 950:src/keys.c    **** 		{ OP_MON | OP_EXP,                 OP_MON | OP_LN              },
 951:src/keys.c    **** 		{ OP_MON | OP_10POWX,		   OP_MON | OP_LOG             },
 952:src/keys.c    **** 		{ OP_MON | OP_2POWX,		   OP_MON | OP_LG2             },
 953:src/keys.c    **** 		{ OP_DYA | OP_POW,                 OP_DYA | OP_LOGXY           },
 954:src/keys.c    **** 		{ OP_MON | OP_RECIP    | NO_INT,   OP_DYA | OP_PARAL	       },
 955:src/keys.c    **** 		// Row 5
 956:src/keys.c    **** 		{ OP_DYA | OP_COMB,                OP_DYA | OP_PERM            },
 957:src/keys.c    **** 		{ OP_MON | OP_cdf_Q    | NO_INT,   OP_MON | OP_qf_Q   | NO_INT },
 958:src/keys.c    **** 		{ OP_NIL | OP_statMEAN | NO_INT,   OP_NIL | OP_statS  | NO_INT },
 959:src/keys.c    **** 		{ OP_MON | OP_yhat     | NO_INT,   OP_NIL | OP_statR  | NO_INT },
 960:src/keys.c    **** 		{ OP_MON | OP_SQRT,		   OP_MON | OP_SQR             },
 961:src/keys.c    **** 		// Row 6
 962:src/keys.c    **** 		{ RARG_SF,                         RARG_CF                     },
 963:src/keys.c    **** 		{ TST_EQ,                          TST_NE                      }, // tests
 964:src/keys.c    **** 		{ RARG_SOLVE           | NO_INT,   RARG_INTG          | NO_INT },
 965:src/keys.c    **** 		{ RARG_PROD            | NO_INT,   RARG_SUM           | NO_INT },
 966:src/keys.c    **** 		{ OP_MON | OP_PERCNT   | NO_INT,   OP_MON | OP_PERCHG | NO_INT },
 967:src/keys.c    **** 		// Row 7
 968:src/keys.c    **** #ifdef INFRARED
 969:src/keys.c    **** 		{ RARG(RARG_PRINT_REG,regX_idx),   STATE_UNFINISHED	       },
 970:src/keys.c    **** #else
 971:src/keys.c    **** 		{ STATE_UNFINISHED,		   STATE_UNFINISHED	       },
 972:src/keys.c    **** #endif
 973:src/keys.c    **** 		{ OP_MON | OP_ABS,		   OP_MON | OP_RND             },
 974:src/keys.c    **** 		{ OP_MON | OP_TRUNC,		   OP_MON | OP_FRAC            },
 975:src/keys.c    **** 		{ RARG_LBL,			   OP_NIL | OP_RTN             },
 976:src/keys.c    **** 		{ RARG_DSE,			   RARG_ISG                    },
 977:src/keys.c    **** #ifdef DM42
 978:src/keys.c    **** 		{ OP_NIL | OP_NOP,		   OP_NIL |OP_NOP              },
 979:src/keys.c    **** #endif
 980:src/keys.c    **** 	};
 981:src/keys.c    **** 
 982:src/keys.c    **** 	static const unsigned short int op_map2[] = {
 983:src/keys.c    **** 		STATE_UNFINISHED,
 984:src/keys.c    **** 		STATE_UNFINISHED,
 985:src/keys.c    **** 		OP_DYA  | OP_POW,
 986:src/keys.c    **** 		OP_MON  | OP_SQRT
 987:src/keys.c    **** 	};
 988:src/keys.c    **** 
 989:src/keys.c    **** 	enum shifts shift = reset_shift();
 990:src/keys.c    **** 	int lc = keycode_to_linear(c);
 991:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 992:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 993:src/keys.c    **** 	if (no_int)
 994:src/keys.c    **** 		op &= ~NO_INT;
 995:src/keys.c    **** 
 996:src/keys.c    **** 	switch (c) {
 997:src/keys.c    **** 	case K00:
 998:src/keys.c    **** 	  if (! UState.intm) {
ARM GAS  /tmp/cc6xzGMw.s 			page 19


 999:src/keys.c    **** 	    //	    print_debug(100,0);
1000:src/keys.c    **** 	    State2.hyp = 1;
1001:src/keys.c    **** 	    State2.dot = op;
1002:src/keys.c    **** 	    // State2.cmplx = 0;
1003:src/keys.c    **** 	    return STATE_UNFINISHED;
1004:src/keys.c    **** 	  }
1005:src/keys.c    **** 	  // fall through
1006:src/keys.c    **** 	case K01:
1007:src/keys.c    **** #ifdef DM42
1008:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
1009:src/keys.c    **** 	    return check_f_key(lc, op_map2[lc]);
1010:src/keys.c    **** 	  }
1011:src/keys.c    **** 	  break;
1012:src/keys.c    **** #endif
1013:src/keys.c    **** #ifndef DM42
1014:src/keys.c    **** 	case K02:
1015:src/keys.c    **** #endif
1016:src/keys.c    **** 	case K03:
1017:src/keys.c    **** #ifdef DM42
1018:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
1019:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
1020:src/keys.c    **** 		}
1021:src/keys.c    **** 		break;
1022:src/keys.c    **** #else
1023:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
1024:src/keys.c    **** 			return check_f_key(2, op_map2[lc]);
1025:src/keys.c    **** 		}
1026:src/keys.c    **** 		break;
1027:src/keys.c    **** #endif
1028:src/keys.c    **** 	case K20:				// Alpha
1029:src/keys.c    **** 		if (shift == SHIFT_F) {
1030:src/keys.c    **** 			if (is_bad_cmdline())
1031:src/keys.c    **** 				return STATE_UNFINISHED;
1032:src/keys.c    **** 			process_cmdline_set_lift();
1033:src/keys.c    **** 			State2.alphas = 1;
1034:src/keys.c    **** #ifdef DM42
1035:src/keys.c    **** 			set_menu(16);
1036:src/keys.c    **** 			display_current_menu();
1037:src/keys.c    **** #endif
1038:src/keys.c    **** 		}
1039:src/keys.c    **** 		break;
1040:src/keys.c    **** #ifdef DM42
1041:src/keys.c    **** 	case K31:
1042:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(13)) {// Log - so D key
1043:src/keys.c    **** 	    return OP_SPEC | OP_D;
1044:src/keys.c    **** 	  }
1045:src/keys.c    **** 	  break;
1046:src/keys.c    **** 	case K30:
1047:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(14)) {// Ln - so E key
1048:src/keys.c    **** 	    return OP_SPEC | OP_E;
1049:src/keys.c    **** 	  }
1050:src/keys.c    **** 	  break;
1051:src/keys.c    **** #endif
1052:src/keys.c    **** 	case K51:
1053:src/keys.c    **** 		if (is_bad_cmdline())
1054:src/keys.c    **** 			return STATE_UNFINISHED;
1055:src/keys.c    **** 		process_cmdline_set_lift();
ARM GAS  /tmp/cc6xzGMw.s 			page 20


1056:src/keys.c    **** 		State2.test = op;
1057:src/keys.c    **** 		return STATE_UNFINISHED;
1058:src/keys.c    **** 
1059:src/keys.c    **** 	case K50:
1060:src/keys.c    **** #ifndef REALBUILD
1061:src/keys.c    **** 		if (SHIFT_N != shift_down()) {
1062:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
1063:src/keys.c    **** 			return STATE_UNFINISHED;
1064:src/keys.c    **** 		}
1065:src/keys.c    **** #endif
1066:src/keys.c    **** 	case K52:
1067:src/keys.c    **** 	case K53:
1068:src/keys.c    **** 	case K63:
1069:src/keys.c    **** 	case K64:
1070:src/keys.c    **** 		if (op != (OP_NIL | OP_RTN)) {
1071:src/keys.c    **** 			if (! (no_int && UState.intm)) {
1072:src/keys.c    **** 				init_arg((enum rarg) op);
1073:src/keys.c    **** 			}
1074:src/keys.c    **** 			return STATE_UNFINISHED;
1075:src/keys.c    **** 		}
1076:src/keys.c    **** 		break;
1077:src/keys.c    **** 
1078:src/keys.c    **** 	default:
1079:src/keys.c    **** 		break;
1080:src/keys.c    **** 	}
1081:src/keys.c    **** 	if (no_int && UState.intm)
1082:src/keys.c    **** 		return STATE_UNFINISHED;
1083:src/keys.c    **** 
1084:src/keys.c    **** 	return check_confirm(op);
1085:src/keys.c    **** #undef NO_INT
1086:src/keys.c    **** }
1087:src/keys.c    **** 
1088:src/keys.c    **** /*
1089:src/keys.c    ****  *  Process a key code after h shift
1090:src/keys.c    ****  */
1091:src/keys.c    **** static int process_h_shifted(const keycode c) {
1092:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
1093:src/keys.c    **** #define NO_INT   0x4000
1094:src/keys.c    **** 	static const unsigned short int op_map[] = {
1095:src/keys.c    **** 		// Row 1
1096:src/keys.c    **** 		_RARG   | RARG_STD,
1097:src/keys.c    **** 		_RARG   | RARG_FIX,
1098:src/keys.c    **** 		_RARG   | RARG_SCI,
1099:src/keys.c    **** 		_RARG   | RARG_ENG,
1100:src/keys.c    **** 		STATE_UNFINISHED,	// CONV
1101:src/keys.c    **** 		STATE_UNFINISHED,	// MODE
1102:src/keys.c    **** 		// Row 2
1103:src/keys.c    **** 		STATE_UNFINISHED,	// CAT
1104:src/keys.c    **** 		_RARG   | RARG_VIEW,
1105:src/keys.c    **** 		OP_NIL  | OP_RUP,
1106:src/keys.c    **** 		// Row 3
1107:src/keys.c    **** 		_RARG	| RARG_INTNUM,	// CONST, will be emitted in integer mode only
1108:src/keys.c    **** 		_RARG   | RARG_SWAPX,
1109:src/keys.c    **** 		OP_MON  | OP_NOT,
1110:src/keys.c    **** 		CONST(OP_PI) | NO_INT,
1111:src/keys.c    **** 		OP_NIL  | OP_rCLX,
1112:src/keys.c    **** 		// Row 4
ARM GAS  /tmp/cc6xzGMw.s 			page 21


1113:src/keys.c    **** 		_RARG   | RARG_GTO,
1114:src/keys.c    **** 		OP_DYA  | OP_LAND,
1115:src/keys.c    **** 		OP_DYA  | OP_LOR,
1116:src/keys.c    **** 		OP_DYA  | OP_LXOR,
1117:src/keys.c    **** 		OP_DYA  | OP_MOD,
1118:src/keys.c    **** 		// Row 5
1119:src/keys.c    **** 		OP_MON  | OP_FACT,
1120:src/keys.c    **** 		STATE_UNFINISHED,	// PROB
1121:src/keys.c    **** 		STATE_UNFINISHED,	// STAT
1122:src/keys.c    **** 		STATE_UNFINISHED,	// CFIT
1123:src/keys.c    **** 		STATE_UNFINISHED,	// MATRIX
1124:src/keys.c    **** 		// Row 6
1125:src/keys.c    **** 		STATE_UNFINISHED,	// STATUS
1126:src/keys.c    **** 		STATE_UNFINISHED,	// TEST
1127:src/keys.c    **** 		STATE_UNFINISHED,	// P.FCN
1128:src/keys.c    **** 		STATE_UNFINISHED,	// X.FCN
1129:src/keys.c    **** 		OP_SPEC | OP_SIGMAMINUS | NO_INT,
1130:src/keys.c    **** 		// Row 7
1131:src/keys.c    **** 		OP_NIL | OP_OFF,
1132:src/keys.c    **** 		_RARG   | RARG_PAUSE,
1133:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1134:src/keys.c    **** 		OP_NIL  | OP_THOUS_OFF,
1135:src/keys.c    **** #else
1136:src/keys.c    ****  		OP_NIL  | OP_RADCOM,
1137:src/keys.c    **** #endif
1138:src/keys.c    **** 		STATE_UNFINISHED,	// P/R
1139:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS | NO_INT,
1140:src/keys.c    **** #ifdef DM42
1141:src/keys.c    **** 		OP_NIL | OP_NOP,       // shifts etc.
1142:src/keys.c    **** #endif
1143:src/keys.c    **** 	};
1144:src/keys.c    **** 
1145:src/keys.c    **** 	int lc = keycode_to_linear(c);
1146:src/keys.c    **** 	int op = op_map[lc];
1147:src/keys.c    **** 	reset_shift();
1148:src/keys.c    **** 
1149:src/keys.c    **** 	// The switch handles all the special cases
1150:src/keys.c    **** 	switch (c) {
1151:src/keys.c    **** 	case K62:
1152:src/keys.c    **** 		if (UState.intm)
1153:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
1154:src/keys.c    **** 		else
1155:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1156:src/keys.c    **** 			if (UState.nothousands) op = OP_NIL | OP_THOUS_ON;
1157:src/keys.c    **** #else
1158:src/keys.c    **** 			if (UState.fraccomma) op = OP_NIL | OP_RADDOT;
1159:src/keys.c    **** #endif
1160:src/keys.c    **** 		break;
1161:src/keys.c    **** 
1162:src/keys.c    **** 	case K63:					// Program<->Run mode
1163:src/keys.c    **** 		if (is_bad_cmdline())
1164:src/keys.c    **** 			return STATE_UNFINISHED;
1165:src/keys.c    **** 		State2.runmode = 1 - State2.runmode;
1166:src/keys.c    **** 		process_cmdline_set_lift();
1167:src/keys.c    **** 		update_program_bounds(1);
1168:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
1169:src/keys.c    **** 			set_pc(0);
ARM GAS  /tmp/cc6xzGMw.s 			page 22


1170:src/keys.c    **** 		break;
1171:src/keys.c    **** 
1172:src/keys.c    **** 	default:
1173:src/keys.c    **** 		break;
1174:src/keys.c    **** 	}
1175:src/keys.c    **** 
1176:src/keys.c    **** 	if (op != STATE_UNFINISHED) {
1177:src/keys.c    **** 		if (op & _RARG) {
1178:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
1179:src/keys.c    **** 			op = STATE_UNFINISHED;
1180:src/keys.c    **** 		}
1181:src/keys.c    **** 	}
1182:src/keys.c    **** 	return UState.intm && (op & NO_INT) ? STATE_UNFINISHED : op & ~NO_INT;
1183:src/keys.c    **** #undef _RARG
1184:src/keys.c    **** #undef NO_INT
1185:src/keys.c    **** }
1186:src/keys.c    **** #ifdef INCLUDE_C_LOCK
1187:src/keys.c    **** 
1188:src/keys.c    **** // Big section here - lots of functions that help with processing keys in complex lock mode
1189:src/keys.c    **** 
1190:src/keys.c    **** static void do_command_line ( void ) {
1191:src/keys.c    **** 	if (CmdLineLength) {
1192:src/keys.c    **** 		State2.state_lift = 0;
1193:src/keys.c    **** 		process_cmdline();
1194:src/keys.c    **** 	}
1195:src/keys.c    **** }
1196:src/keys.c    **** 
1197:src/keys.c    **** void finish_cpx_entry ( int lift ) {
1198:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
1199:src/keys.c    **** // The argument sets the lift state after entry is finished.
1200:src/keys.c    **** // It also converts entered polar form into rectangular coordinates, if needed.
1201:src/keys.c    **** // Note: does nothing to stack or lift state if number not being entered.
1202:src/keys.c    **** 	if ( !( REAL_FLAG || IMAG_FLAG ) ) return;
1203:src/keys.c    **** 
1204:src/keys.c    **** /*	if (REAL_FLAG) { // real part being entered
1205:src/keys.c    **** 		CLEAR_REAL;
1206:src/keys.c    **** 		do_command_line();
1207:src/keys.c    **** 	}
1208:src/keys.c    **** 	else if (IMAG_FLAG) {
1209:src/keys.c    **** 		CLEAR_IMAG;
1210:src/keys.c    **** 		do_command_line();
1211:src/keys.c    **** 		swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
1212:src/keys.c    **** 	}
1213:src/keys.c    **** */
1214:src/keys.c    **** 	do_command_line();
1215:src/keys.c    **** 	if (IMAG_FLAG) swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
1216:src/keys.c    **** 	CLEAR_REAL;
1217:src/keys.c    **** 	CLEAR_IMAG;
1218:src/keys.c    **** 
1219:src/keys.c    **** 	State2.state_lift = lift;
1220:src/keys.c    **** 
1221:src/keys.c    **** 	if ( POLAR_DISPLAY && POLAR_FORM_NOT_READY ) {
1222:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
1223:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regX_idx));
1224:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
1225:src/keys.c    **** 		//call p2r
1226:src/keys.c    **** 		update_speed(0);
ARM GAS  /tmp/cc6xzGMw.s 			page 23


1227:src/keys.c    **** 		op_p2r(OP_NOP); // x, y now contain rectangular form
1228:src/keys.c    **** #ifdef RP_PREFIX
1229:src/keys.c    **** 		RectPolConv = 1; // stop "y" display
1230:src/keys.c    **** #endif
1231:src/keys.c    **** 		SET_POLAR_READY;
1232:src/keys.c    **** 	}
1233:src/keys.c    **** }
1234:src/keys.c    **** 
1235:src/keys.c    **** static void stack_restore ( void ) { 
1236:src/keys.c    **** 	// called if number entry terminated by EXIT key
1237:src/keys.c    **** 	// uses J and K registers to store the two stack registers displaced by the new entry
1238:src/keys.c    **** 	// tried declaring some static variables to hold the numbers but didn't work on real calculator
1239:src/keys.c    **** 	if ( !REAL_FLAG && !IMAG_FLAG  ) return; // number entry already over; no restore
1240:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
1241:src/keys.c    **** 		drop ( OP_DROPXY );
1242:src/keys.c    **** 		copyreg (get_reg_n(regC_idx), get_reg_n(regJ_idx));
1243:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
1244:src/keys.c    **** 	}
1245:src/keys.c    **** 	else { // X, Y have been overwritten
1246:src/keys.c    **** 		copyreg (get_reg_n(regX_idx), get_reg_n(regJ_idx));
1247:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
1248:src/keys.c    **** 	}
1249:src/keys.c    **** 	State2.state_lift = INIT_LIFT; // restore lift status too
1250:src/keys.c    **** 	CLEAR_INIT_LIFT;
1251:src/keys.c    **** 	CLEAR_POLAR_READY;
1252:src/keys.c    **** }
1253:src/keys.c    **** 
1254:src/keys.c    **** void stack_begin ( int zero_y ) { 
1255:src/keys.c    **** 	// Lifts stack if required and stores displaced registers; 
1256:src/keys.c    **** 	// zeros y if requested. 
1257:src/keys.c    **** 	CLEAR_POLAR_READY;
1258:src/keys.c    **** 	if ( State2.state_lift ){
1259:src/keys.c    **** 		SET_INIT_LIFT;
1260:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regC_idx));
1261:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
1262:src/keys.c    **** 		lift();
1263:src/keys.c    **** 		zero_X();
1264:src/keys.c    **** 		lift();
1265:src/keys.c    **** 		State2.state_lift = 0;
1266:src/keys.c    **** 	}
1267:src/keys.c    **** 	else {
1268:src/keys.c    **** 		CLEAR_INIT_LIFT;
1269:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regX_idx));
1270:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
1271:src/keys.c    **** 		zero_X();
1272:src/keys.c    **** 		if ( zero_y ) zero_Y();
1273:src/keys.c    **** 	}
1274:src/keys.c    **** }
1275:src/keys.c    **** 
1276:src/keys.c    **** static int process_c_lock ( const keycode c ) { // main function - called from process (c) function
1277:src/keys.c    **** 
1278:src/keys.c    **** 	enum shifts shift = cur_shift();
1279:src/keys.c    **** 
1280:src/keys.c    **** // Individual keys needing special treatment
1281:src/keys.c    **** 
1282:src/keys.c    **** 	if ( (c < K05) && shift == SHIFT_H ){ // display modes
1283:src/keys.c    **** 		return process_h_shifted (c);
ARM GAS  /tmp/cc6xzGMw.s 			page 24


1284:src/keys.c    **** 	}
1285:src/keys.c    **** 
1286:src/keys.c    **** 
1287:src/keys.c    **** 	if ( (shift == SHIFT_G) && (c >= K10) && (c <= K12) ) { // angle mode change; needed because other
1288:src/keys.c    **** 		convert_regK ((enum trig_modes) (c-K10));
1289:src/keys.c    **** 	}
1290:src/keys.c    **** 	if ( (c >= K05) && (c <= K12) && (shift == SHIFT_F || shift == SHIFT_G) ) { // Deg, rad, grad, HMS
1291:src/keys.c    **** 		return process_fg_shifted (c);
1292:src/keys.c    **** 	}
1293:src/keys.c    **** 
1294:src/keys.c    **** 	if (c==K23) { // pi key - needs to be separate from what follows as it doesn't want entry complete
1295:src/keys.c    **** 		if (shift == SHIFT_F) { // special pi processing
1296:src/keys.c    **** 			reset_shift();
1297:src/keys.c    **** 			if ( CmdLineLength ) {
1298:src/keys.c    **** 				State2.state_lift = 0;
1299:src/keys.c    **** 				return OP_NIL | OP_PIB;
1300:src/keys.c    **** 			}
1301:src/keys.c    **** 			else {
1302:src/keys.c    **** 				return OP_NIL | OP_PIA;
1303:src/keys.c    **** 			}
1304:src/keys.c    **** 		}
1305:src/keys.c    **** 		else {
1306:src/keys.c    **** #if INCLUDE_EEX_PI == 2
1307:src/keys.c    **** 			const int eex_pi = 1;
1308:src/keys.c    **** #elif INCLUDE_EEX_PI == 1
1309:src/keys.c    **** 			const int eex_pi = get_user_flag(regL_idx);
1310:src/keys.c    **** #else
1311:src/keys.c    **** 			const int eex_pi = 0;
1312:src/keys.c    **** #endif
1313:src/keys.c    **** 			if ( (shift == SHIFT_H) || (eex_pi && (shift == SHIFT_N) && CmdLineLength == 0) ) { // normal pi
1314:src/keys.c    **** 				finish_cpx_entry(1);
1315:src/keys.c    **** 				return process_cmplx(c);
1316:src/keys.c    **** 			}
1317:src/keys.c    **** 		}
1318:src/keys.c    **** 	}
1319:src/keys.c    **** 
1320:src/keys.c    **** 	if (shift != SHIFT_N) { // other shifted keys - special cases first.
1321:src/keys.c    **** 		finish_cpx_entry(0); // finish entry for all of them - no lift
1322:src/keys.c    **** 		switch (c) {
1323:src/keys.c    **** 		case (K60):
1324:src/keys.c    **** 		  reset_shift();
1325:src/keys.c    **** 		  if (shift == SHIFT_H) return (OP_NIL | OP_OFF);
1326:src/keys.c    **** 		case (K21): // x<->y key
1327:src/keys.c    **** 			if (shift == SHIFT_F || shift == SHIFT_G) { // exchanges real and imag parts with either shift
1328:src/keys.c    **** 				reset_shift();
1329:src/keys.c    **** 				CLEAR_POLAR_READY;
1330:src/keys.c    **** 				return RARG(RARG_SWAPX, regY_idx);
1331:src/keys.c    **** 			}
1332:src/keys.c    **** 			else if (shift == SHIFT_H) {
1333:src/keys.c    **** 				return process_cmplx(c); // complex exchange of (x,y) with register
1334:src/keys.c    **** 			}
1335:src/keys.c    **** 			break;
1336:src/keys.c    **** 		case (K40): // up-arrow key
1337:src/keys.c    **** 			if (shift == SHIFT_F) {
1338:src/keys.c    **** 				SET_RECTANGULAR_DISPLAY;
1339:src/keys.c    **** 			}
1340:src/keys.c    **** 			else if (shift == SHIFT_G) {
ARM GAS  /tmp/cc6xzGMw.s 			page 25


1341:src/keys.c    **** 				SET_POLAR_DISPLAY;
1342:src/keys.c    **** 				CLEAR_POLAR_READY;
1343:src/keys.c    **** 				update_speed(0); // new polar display calculated from keyboard needs a speed boost
1344:src/keys.c    **** 			}
1345:src/keys.c    **** 			break;
1346:src/keys.c    **** 		case (K22): // +/- key
1347:src/keys.c    **** 		  reset_shift();
1348:src/keys.c    **** 		  if (shift == SHIFT_F ) {
1349:src/keys.c    **** 		    return OP_NIL | OP_C_MIM;
1350:src/keys.c    **** 		  }
1351:src/keys.c    **** 		  else if (shift == SHIFT_H) {
1352:src/keys.c    **** 		    return OP_NIL | OP_C_MRE;
1353:src/keys.c    **** 		  }
1354:src/keys.c    **** 		  break;
1355:src/keys.c    **** 		case (K62): // IP/FP key
1356:src/keys.c    **** 		  reset_shift();
1357:src/keys.c    **** 		  if (shift == SHIFT_F) {
1358:src/keys.c    **** 		    return OP_NIL | OP_C_IM;
1359:src/keys.c    **** 		  }
1360:src/keys.c    **** 		  else if (shift == SHIFT_G) {
1361:src/keys.c    **** 		    return OP_NIL | OP_C_RE;
1362:src/keys.c    **** 		  }
1363:src/keys.c    **** 		  break;
1364:src/keys.c    **** 		case (K44): // x (times) key
1365:src/keys.c    **** 			if (shift == SHIFT_H) { // real*real + i imag*imag
1366:src/keys.c    **** 				reset_shift();
1367:src/keys.c    **** 				return OP_CDYA | OP_CDOT;
1368:src/keys.c    **** 			}
1369:src/keys.c    **** 			else {
1370:src/keys.c    **** 				return process_cmplx(c);
1371:src/keys.c    **** 			}
1372:src/keys.c    **** 			break;
1373:src/keys.c    **** 		case (K34): // divide key
1374:src/keys.c    **** 			if (shift == SHIFT_H) { // real/real + i imag/imag
1375:src/keys.c    **** 				reset_shift();
1376:src/keys.c    **** 				return OP_CDYA | OP_CDOTDIV;
1377:src/keys.c    **** 			}
1378:src/keys.c    **** 			else {
1379:src/keys.c    **** 				return process_cmplx(c);
1380:src/keys.c    **** 			}
1381:src/keys.c    **** 			break;
1382:src/keys.c    **** 		case (K24): // <- key
1383:src/keys.c    **** 			if (POLAR_DISPLAY) break;
1384:src/keys.c    **** 			if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real part o
1385:src/keys.c    **** 				zero_X ();
1386:src/keys.c    **** 				State2.state_lift = 0;
1387:src/keys.c    **** 				SET_REAL;
1388:src/keys.c    **** 				stack_begin (0);
1389:src/keys.c    **** 			}
1390:src/keys.c    **** 			break;
1391:src/keys.c    **** 		default:
1392:src/keys.c    **** 			return process_cmplx(c); // for shifted keys not listed above
1393:src/keys.c    **** 		}
1394:src/keys.c    **** 		reset_shift(); // for the keys listed above; functions complete
1395:src/keys.c    **** 		return STATE_UNFINISHED;
1396:src/keys.c    **** 	}
1397:src/keys.c    **** 
ARM GAS  /tmp/cc6xzGMw.s 			page 26


1398:src/keys.c    **** 	switch (c) { // non-shifted keys including numbers - in general, keys to be processed normally not
1399:src/keys.c    **** 	case (K61):
1400:src/keys.c    **** 	case (K62):
1401:src/keys.c    **** 	case (K51):
1402:src/keys.c    **** 	case (K52):
1403:src/keys.c    **** 	case (K53):
1404:src/keys.c    **** 	case (K41):
1405:src/keys.c    **** 	case (K42):
1406:src/keys.c    **** 	case (K43):
1407:src/keys.c    **** 	case (K31):
1408:src/keys.c    **** 	case (K32):
1409:src/keys.c    **** 	case (K33):
1410:src/keys.c    **** 	case (K23): // 0.123456789EEX
1411:src/keys.c    **** 		if (!REAL_FLAG && !IMAG_FLAG) {
1412:src/keys.c    **** 			SET_REAL; // start and continuation of real entry
1413:src/keys.c    **** 			stack_begin (1);
1414:src/keys.c    **** 		}
1415:src/keys.c    **** 		return process_normal(c);
1416:src/keys.c    **** 	case (K22): // CHS
1417:src/keys.c    **** //	case (K23): // EEX
1418:src/keys.c    **** 		if (!REAL_FLAG && !IMAG_FLAG) {
1419:src/keys.c    **** 			return process_cmplx(c);
1420:src/keys.c    **** 		}
1421:src/keys.c    **** 		else {
1422:src/keys.c    **** 			return process_normal(c);
1423:src/keys.c    **** 		}
1424:src/keys.c    **** 	case (K24): // backspace
1425:src/keys.c    **** 	case (K04): // arrow
1426:src/keys.c    **** 	case (K_ARROW):
1427:src/keys.c    **** 	  return process_normal(c);
1428:src/keys.c    **** 	case (K_CMPLX):
1429:src/keys.c    **** 		if (REAL_FLAG) { // Something - at least one digit - has been entered; real part now complete
1430:src/keys.c    **** 			CLEAR_REAL;
1431:src/keys.c    **** 			SET_IMAG;
1432:src/keys.c    **** 			do_command_line();
1433:src/keys.c    **** 			State2.state_lift = 0;
1434:src/keys.c    **** 			swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
1435:src/keys.c    **** 		}
1436:src/keys.c    **** 		else if (IMAG_FLAG) { // finishing off imag part; nothing has necessarily been entered
1437:src/keys.c    **** 			finish_cpx_entry (1);
1438:src/keys.c    **** 		}
1439:src/keys.c    **** 		else { // down here we need a part that deals with CPX being pressed without a real part being en
1440:src/keys.c    **** 			SET_IMAG;
1441:src/keys.c    **** 			stack_begin (1);
1442:src/keys.c    **** 		}
1443:src/keys.c    **** 		return STATE_UNFINISHED;
1444:src/keys.c    **** 	default:;
1445:src/keys.c    **** 	}
1446:src/keys.c    **** 	finish_cpx_entry(0);
1447:src/keys.c    **** 	return process_cmplx(c);
1448:src/keys.c    **** 
1449:src/keys.c    **** }
1450:src/keys.c    **** 
1451:src/keys.c    **** #endif
1452:src/keys.c    **** 
1453:src/keys.c    **** /*
1454:src/keys.c    ****  *  Process a key code after CPX
ARM GAS  /tmp/cc6xzGMw.s 			page 27


1455:src/keys.c    ****  */
1456:src/keys.c    **** static int process_cmplx(const keycode c) {
1457:src/keys.c    **** #define _RARG   0xFF00
1458:src/keys.c    **** #define CSWAPXZ RARG(RARG_CSWAPX, regZ_idx)
1459:src/keys.c    **** #define CNUM(n) RARG(RARG_INTNUM_CMPLX, n)
1460:src/keys.c    **** 
1461:src/keys.c    **** 	static const unsigned short int op_map[][4] = {
1462:src/keys.c    **** 		// Row 1
1463:src/keys.c    **** 		{ 1,			1,                   0,                   0		      }, // HYP
1464:src/keys.c    **** 		{ OP_CMON | OP_RECIP,	OP_CMON | OP_SIN,    OP_CMON | OP_ASIN,   STATE_UNFINISHED    },
1465:src/keys.c    **** 		{ OP_CDYA | OP_POW,	OP_CMON | OP_COS,    OP_CMON | OP_ACOS,   STATE_UNFINISHED    },
1466:src/keys.c    **** 		{ OP_CMON | OP_SQRT,	OP_CMON | OP_TAN,    OP_CMON | OP_ATAN,   STATE_UNFINISHED    },
1467:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_NIL | OP_P2R,     OP_NIL | OP_R2P,     STATE_UNFINISHED    },
1468:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    }, // CPX
1469:src/keys.c    **** 		// Row 2
1470:src/keys.c    **** 		{ _RARG | RARG_CSTO,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1471:src/keys.c    **** 		{ _RARG | RARG_CRCL,	STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CVIEW  },
1472:src/keys.c    **** 		{ OP_NIL | OP_CRDOWN,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_CRUP    }, // R^
1473:src/keys.c    **** 		// Row 3
1474:src/keys.c    **** 		{ OP_NIL | OP_CENTER,	STATE_UNFINISHED,    OP_NIL | OP_CFILL,   OP_NIL | OP_CFILL   }, // ENTER
1475:src/keys.c    **** 		{ CSWAPXZ,		STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CSWAPX },
1476:src/keys.c    **** 		{ OP_CMON | OP_CCHS,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_CMON | OP_CCONJ  },
1477:src/keys.c    **** 		{ CONST_CMPLX(OP_PI),	STATE_UNFINISHED,    STATE_UNFINISHED,    CONST_CMPLX(OP_PI)  },
1478:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1479:src/keys.c    **** 		// Row 4
1480:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CMON | OP_EXP,    OP_CMON | OP_LN,     STATE_UNFINISHED    },
1481:src/keys.c    **** 		{ CNUM(7),		OP_CMON | OP_10POWX, OP_CMON | OP_LOG,    STATE_UNFINISHED    },
1482:src/keys.c    **** 		{ CNUM(8),		OP_CMON | OP_2POWX,  OP_CMON | OP_LG2,    STATE_UNFINISHED    },
1483:src/keys.c    **** 		{ CNUM(9),		OP_CDYA | OP_POW,    OP_CDYA | OP_LOGXY,  STATE_UNFINISHED    },
1484:src/keys.c    **** 		{ OP_CDYA | OP_DIV,	OP_CMON | OP_RECIP,  OP_CDYA | OP_PARAL,  STATE_UNFINISHED    },
1485:src/keys.c    **** 		// Row 5
1486:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CDYA | OP_COMB,   OP_CDYA | OP_PERM,   OP_CMON | OP_FACT   },
1487:src/keys.c    **** 		{ CNUM(4),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1488:src/keys.c    **** 		{ CNUM(5),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1489:src/keys.c    **** 		{ CNUM(6),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1490:src/keys.c    **** 		{ OP_CDYA | OP_MUL,	OP_CMON | OP_SQRT,   OP_CMON | OP_SQR,    OP_CMON | OP_SQR    },
1491:src/keys.c    **** 		// Row 6
1492:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1493:src/keys.c    **** 		{ CNUM(1),		TST_EQ,              TST_NE,              STATE_UNFINISHED    }, // tests
1494:src/keys.c    **** 		{ CNUM(2),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1495:src/keys.c    **** 		{ CNUM(3),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1496:src/keys.c    **** 		{ OP_CDYA | OP_SUB,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1497:src/keys.c    **** 		// Row 7
1498:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_OFF     },
1499:src/keys.c    **** 		{ CNUM(0),		OP_CMON | OP_ABS,    OP_CMON | OP_RND,    STATE_UNFINISHED    },
1500:src/keys.c    **** 		{ OP_NIL | OP_cmplxI,	OP_CMON | OP_TRUNC,  OP_CMON | OP_FRAC,   STATE_UNFINISHED    },
1501:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1502:src/keys.c    **** 		{ OP_NIL | OP_STOPWATCH, STATE_UNFINISHED,   STATE_UNFINISHED,    STATE_UNFINISHED    },
1503:src/keys.c    **** #else
1504:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1505:src/keys.c    **** #endif
1506:src/keys.c    **** 		{ OP_CDYA | OP_ADD,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1507:src/keys.c    **** #ifdef DM42
1508:src/keys.c    **** 		{ OP_NIL | OP_NOP,	OP_NIL | OP_NOP,    OP_NIL | OP_NOP,    OP_NIL | OP_NOP    }
1509:src/keys.c    **** #endif
1510:src/keys.c    **** 	};
1511:src/keys.c    **** 
ARM GAS  /tmp/cc6xzGMw.s 			page 28


1512:src/keys.c    **** 	enum shifts shift = reset_shift();
1513:src/keys.c    **** 	int lc = keycode_to_linear(c);
1514:src/keys.c    **** 	int op = op_map[lc][shift];
1515:src/keys.c    **** 	State2.cmplx = 0;
1516:src/keys.c    **** 
1517:src/keys.c    **** 	if ((op & _RARG) == _RARG) {
1518:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
1519:src/keys.c    **** 		return STATE_UNFINISHED;
1520:src/keys.c    **** 	}
1521:src/keys.c    **** 	if (c == K00) {
1522:src/keys.c    **** 		// HYP
1523:src/keys.c    **** 		process_cmdline_set_lift();
1524:src/keys.c    **** 		//		print_debug(100,1);
1525:src/keys.c    **** 		State2.hyp = 1;
1526:src/keys.c    **** 		State2.dot = op;
1527:src/keys.c    **** 		State2.cmplx = 1;
1528:src/keys.c    **** 		return STATE_UNFINISHED;
1529:src/keys.c    **** 	}
1530:src/keys.c    **** 
1531:src/keys.c    **** 	if (shift != SHIFT_N) {
1532:src/keys.c    **** 		switch (c) {
1533:src/keys.c    **** 		case K_CMPLX:
1534:src/keys.c    **** 			set_shift(shift);
1535:src/keys.c    **** 			break;
1536:src/keys.c    **** 
1537:src/keys.c    **** 		case K51:
1538:src/keys.c    **** 			if (op != STATE_UNFINISHED) {
1539:src/keys.c    **** 				if (is_bad_cmdline())
1540:src/keys.c    **** 					return STATE_UNFINISHED;
1541:src/keys.c    **** 				process_cmdline_set_lift();
1542:src/keys.c    **** 				State2.cmplx = 1;
1543:src/keys.c    **** 				State2.test = op;
1544:src/keys.c    **** 			}
1545:src/keys.c    **** 			return STATE_UNFINISHED;
1546:src/keys.c    **** 
1547:src/keys.c    **** 		case K60:
1548:src/keys.c    **** 			init_state();
1549:src/keys.c    **** 			break;
1550:src/keys.c    **** 
1551:src/keys.c    **** 		default:
1552:src/keys.c    **** 			break;
1553:src/keys.c    **** 		}
1554:src/keys.c    **** 	}
1555:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1556:src/keys.c    **** 	return check_confirm(op);
1557:src/keys.c    **** #else
1558:src/keys.c    **** 	return op;
1559:src/keys.c    **** #endif
1560:src/keys.c    **** 
1561:src/keys.c    **** #undef _RARG
1562:src/keys.c    **** #undef CSWAPXZ
1563:src/keys.c    **** #undef CNUM
1564:src/keys.c    **** }
1565:src/keys.c    **** 
1566:src/keys.c    **** 
1567:src/keys.c    **** 
1568:src/keys.c    **** /*
ARM GAS  /tmp/cc6xzGMw.s 			page 29


1569:src/keys.c    ****  * Fairly simple routine for dealing with the HYP prefix.
1570:src/keys.c    ****  * This setting can only be followed by 4, 5, or 6 to specify
1571:src/keys.c    ****  * the function.  The inverse routines use the code too, the State2.dot
1572:src/keys.c    ****  * is 1 for normal and 0 for inverse hyperbolic.  We also have to
1573:src/keys.c    ****  * deal with the complex versions and the handling of that key and
1574:src/keys.c    ****  * the ON key are dealt with by our caller.
1575:src/keys.c    ****  */
1576:src/keys.c    **** static int process_hyp(const keycode c) {
1577:src/keys.c    **** 	static const unsigned char op_map[][2] = {
1578:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
1579:src/keys.c    **** 		{ OP_ACOSH, OP_COSH },
1580:src/keys.c    **** 		{ OP_ATANH, OP_TANH }
1581:src/keys.c    **** 	};
1582:src/keys.c    **** 	int cmplx = State2.cmplx;
1583:src/keys.c    **** 	int f = State2.dot;
1584:src/keys.c    **** 
1585:src/keys.c    **** 	State2.hyp = 0;
1586:src/keys.c    **** 	State2.cmplx = 0;
1587:src/keys.c    **** 	State2.dot = 0;
1588:src/keys.c    **** #ifdef DM42
1589:src/keys.c    **** 	reset_shift();
1590:src/keys.c    **** #endif
1591:src/keys.c    **** 	switch ((int)c) {
1592:src/keys.c    **** 
1593:src/keys.c    **** 	case K01:
1594:src/keys.c    **** 	case K02:
1595:src/keys.c    **** 	case K03:
1596:src/keys.c    **** 		return (cmplx ? OP_CMON : OP_MON) | op_map[c - K01][f];
1597:src/keys.c    **** 
1598:src/keys.c    **** 	case K_CMPLX:
1599:src/keys.c    **** 		cmplx = ! cmplx;
1600:src/keys.c    **** 		goto stay;
1601:src/keys.c    **** 
1602:src/keys.c    **** #ifndef DM42
1603:src/keys.c    **** 	case K_F: 
1604:src/keys.c    **** 	case K_G:
1605:src/keys.c    **** 		f = (c == K_F);
1606:src/keys.c    **** 		// fall through
1607:src/keys.c    **** #else
1608:src/keys.c    **** 	case K_F:
1609:src/keys.c    **** 	  if (c == K_F) f = 1 - f;
1610:src/keys.c    **** #endif
1611:src/keys.c    **** 	stay:
1612:src/keys.c    **** 		// process_cmdline_set_lift();
1613:src/keys.c    **** 	  //	  print_debug(100,2);
1614:src/keys.c    **** 	  
1615:src/keys.c    **** 	  State2.hyp = 1;
1616:src/keys.c    **** 		State2.cmplx = cmplx;
1617:src/keys.c    **** 		State2.dot = f;
1618:src/keys.c    **** 		break;
1619:src/keys.c    **** 
1620:src/keys.c    **** 	default:
1621:src/keys.c    **** 		break;
1622:src/keys.c    **** 	}
1623:src/keys.c    **** 	return STATE_UNFINISHED;
1624:src/keys.c    **** }
1625:src/keys.c    **** 
ARM GAS  /tmp/cc6xzGMw.s 			page 30


1626:src/keys.c    **** 
1627:src/keys.c    **** /*
1628:src/keys.c    ****  *  Process a key code after ->
1629:src/keys.c    ****  */
1630:src/keys.c    **** static int process_arrow(const keycode c) {
1631:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
1632:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
1633:src/keys.c    **** 		{ OP_MON | OP_2RAD,  OP_MON | OP_HMS2 },
1634:src/keys.c    **** 		{ OP_MON | OP_2GRAD, STATE_UNFINISHED }
1635:src/keys.c    **** 	};
1636:src/keys.c    **** 	static const enum single_disp disp[][2] = {
1637:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
1638:src/keys.c    **** 		{ SDISP_HEX, SDISP_DEC }
1639:src/keys.c    **** 	};
1640:src/keys.c    **** 	const int shift = reset_shift();
1641:src/keys.c    **** 	const int f = (shift == SHIFT_F);
1642:src/keys.c    **** 
1643:src/keys.c    **** 	State2.arrow = 0;
1644:src/keys.c    **** #ifdef DM42
1645:src/keys.c    **** 	set_last_menu ();
1646:src/keys.c    **** 	display_current_menu ();
1647:src/keys.c    **** #endif
1648:src/keys.c    **** #ifdef INCLUDE_C_LOCK
1649:src/keys.c    **** 	if (c == K_CMPLX && CPX_ENABLED) { // need this before the SHIFT_N test
1650:src/keys.c    **** 	  if (!C_LOCK_ON) {
1651:src/keys.c    **** 	    set_menu (17);
1652:src/keys.c    **** 	    display_current_menu();
1653:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
1654:src/keys.c    **** 	  }
1655:src/keys.c    **** 	  else {
1656:src/keys.c    **** 	    if (get_last_menu() != 17) {
1657:src/keys.c    **** 	      set_last_menu();
1658:src/keys.c    **** 	    }
1659:src/keys.c    **** 	    else {
1660:src/keys.c    **** 	      set_default_menu();
1661:src/keys.c    **** 	    }
1662:src/keys.c    **** 	    display_current_menu();
1663:src/keys.c    **** 	    return OP_NIL | OP_C_OFF;
1664:src/keys.c    **** 	  }
1665:src/keys.c    **** 	}
1666:src/keys.c    **** #endif
1667:src/keys.c    **** 	if (shift == SHIFT_N) return STATE_UNFINISHED;
1668:src/keys.c    **** 	
1669:src/keys.c    **** 	if (c >= K10 && c <= K12)
1670:src/keys.c    **** 		return op_map[c - K10][f];
1671:src/keys.c    **** 
1672:src/keys.c    **** 	if (c == K22 || c == K23)
1673:src/keys.c    **** 		set_smode(disp[c - K22][f]);
1674:src/keys.c    **** 
1675:src/keys.c    **** 	return STATE_UNFINISHED;
1676:src/keys.c    **** }
1677:src/keys.c    **** 
1678:src/keys.c    **** 
1679:src/keys.c    **** /* Process a GTO . sequence
1680:src/keys.c    ****  */
1681:src/keys.c    **** static int gtodot_digit(const int n) {
  30              		.loc 1 1681 38 view -0
ARM GAS  /tmp/cc6xzGMw.s 			page 31


  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
1682:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  34              		.loc 1 1682 2 view .LVU1
1683:src/keys.c    **** 	const int lib = nLIB(state_pc());
  35              		.loc 1 1683 18 is_stmt 0 view .LVU2
  36 0000 144B     		ldr	r3, .L5
  37 0002 1A68     		ldr	r2, [r3]
1681:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  38              		.loc 1 1681 38 view .LVU3
  39 0004 70B5     		push	{r4, r5, r6, lr}
  40              		.cfi_def_cfa_offset 16
  41              		.cfi_offset 4, -16
  42              		.cfi_offset 5, -12
  43              		.cfi_offset 6, -8
  44              		.cfi_offset 14, -4
1682:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  45              		.loc 1 1682 24 view .LVU4
  46 0006 144E     		ldr	r6, .L5+4
  47              		.loc 1 1683 18 view .LVU5
  48 0008 B2F8E057 		ldrh	r5, [r2, #2016]
1682:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  49              		.loc 1 1682 24 view .LVU6
  50 000c 3389     		ldrh	r3, [r6, #8]
  51              		.loc 1 1683 18 view .LVU7
  52 000e AD0B     		lsrs	r5, r5, #14
1682:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  53              		.loc 1 1682 32 view .LVU8
  54 0010 03EB8303 		add	r3, r3, r3, lsl #2
1681:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  55              		.loc 1 1681 38 view .LVU9
  56 0014 0446     		mov	r4, r0
1684:src/keys.c    **** 
1685:src/keys.c    **** 	if (val > sizeLIB(lib) / 10)
  57              		.loc 1 1685 12 view .LVU10
  58 0016 2846     		mov	r0, r5
  59              	.LVL1:
1682:src/keys.c    **** 	const int lib = nLIB(state_pc());
  60              		.loc 1 1682 12 view .LVU11
  61 0018 04EB4304 		add	r4, r4, r3, lsl #1
  62              	.LVL2:
1683:src/keys.c    **** 
  63              		.loc 1 1683 2 is_stmt 1 view .LVU12
  64              		.loc 1 1685 2 view .LVU13
  65              		.loc 1 1685 12 is_stmt 0 view .LVU14
  66 001c FFF7FEFF 		bl	sizeLIB
  67              	.LVL3:
  68              		.loc 1 1685 25 view .LVU15
  69 0020 0E4A     		ldr	r2, .L5+8
  70 0022 82FB0032 		smull	r3, r2, r2, r0
  71 0026 C317     		asrs	r3, r0, #31
  72 0028 C3EBA203 		rsb	r3, r3, r2, asr #2
  73              		.loc 1 1685 5 view .LVU16
  74 002c A342     		cmp	r3, r4
  75 002e 0FDB     		blt	.L1
1686:src/keys.c    **** 		return val;
ARM GAS  /tmp/cc6xzGMw.s 			page 32


1687:src/keys.c    **** 	if (++State2.numdigit == 3 + (lib & 1))
  76              		.loc 1 1687 2 is_stmt 1 view .LVU17
  77              		.loc 1 1687 6 is_stmt 0 view .LVU18
  78 0030 F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
  79              		.loc 1 1687 29 view .LVU19
  80 0032 15F0010F 		tst	r5, #1
  81              		.loc 1 1687 6 view .LVU20
  82 0036 03F10103 		add	r3, r3, #1
  83 003a DBB2     		uxtb	r3, r3
  84              		.loc 1 1687 29 view .LVU21
  85 003c 0CBF     		ite	eq
  86 003e 0322     		moveq	r2, #3
  87 0040 0422     		movne	r2, #4
  88              		.loc 1 1687 5 view .LVU22
  89 0042 9342     		cmp	r3, r2
1688:src/keys.c    **** 		return val;
1689:src/keys.c    **** 	State2.digval = val;
  90              		.loc 1 1689 2 is_stmt 1 view .LVU23
  91              		.loc 1 1689 16 is_stmt 0 view .LVU24
  92 0044 18BF     		it	ne
  93 0046 3481     		strhne	r4, [r6, #8]	@ movhi
1690:src/keys.c    **** 	return -1;
  94              		.loc 1 1690 2 is_stmt 1 view .LVU25
1687:src/keys.c    **** 		return val;
  95              		.loc 1 1687 5 is_stmt 0 view .LVU26
  96 0048 F372     		strb	r3, [r6, #11]
  97              		.loc 1 1690 9 view .LVU27
  98 004a 18BF     		it	ne
  99 004c 4FF0FF34 		movne	r4, #-1
 100              	.LVL4:
 101              	.L1:
1691:src/keys.c    **** }
 102              		.loc 1 1691 1 view .LVU28
 103 0050 2046     		mov	r0, r4
 104 0052 70BD     		pop	{r4, r5, r6, pc}
 105              	.LVL5:
 106              	.L6:
 107              		.loc 1 1691 1 view .LVU29
 108              		.align	2
 109              	.L5:
 110 0054 00000000 		.word	main_ram
 111 0058 00000000 		.word	StateWhileOn
 112 005c 67666666 		.word	1717986919
 113              		.cfi_endproc
 114              	.LFE30:
 116              		.section	.text.check_f_key,"ax",%progbits
 117              		.align	1
 118              		.p2align 2,,3
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu fpv4-sp-d16
 124              	check_f_key:
 125              	.LVL6:
 126              	.LFB17:
 735:src/keys.c    **** 	const int code = 100 + n;
 127              		.loc 1 735 47 is_stmt 1 view -0
ARM GAS  /tmp/cc6xzGMw.s 			page 33


 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 736:src/keys.c    **** 	unsigned int pc = state_pc();
 131              		.loc 1 736 2 view .LVU31
 735:src/keys.c    **** 	const int code = 100 + n;
 132              		.loc 1 735 47 is_stmt 0 view .LVU32
 133 0000 38B5     		push	{r3, r4, r5, lr}
 134              		.cfi_def_cfa_offset 16
 135              		.cfi_offset 3, -16
 136              		.cfi_offset 4, -12
 137              		.cfi_offset 5, -8
 138              		.cfi_offset 14, -4
 739:src/keys.c    **** 		if (isXROM(pc))
 139              		.loc 1 739 6 view .LVU33
 140 0002 0D4B     		ldr	r3, .L17
 141 0004 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 142              	.LVL7:
 737:src/keys.c    **** 
 143              		.loc 1 737 2 is_stmt 1 view .LVU34
 739:src/keys.c    **** 		if (isXROM(pc))
 144              		.loc 1 739 2 view .LVU35
 739:src/keys.c    **** 		if (isXROM(pc))
 145              		.loc 1 739 5 is_stmt 0 view .LVU36
 146 0006 5B06     		lsls	r3, r3, #25
 735:src/keys.c    **** 	const int code = 100 + n;
 147              		.loc 1 735 47 view .LVU37
 148 0008 0C46     		mov	r4, r1
 739:src/keys.c    **** 		if (isXROM(pc))
 149              		.loc 1 739 5 view .LVU38
 150 000a 0FD5     		bpl	.L11
 737:src/keys.c    **** 
 151              		.loc 1 737 20 view .LVU39
 152 000c 0B4B     		ldr	r3, .L17+4
 153              	.LVL8:
 737:src/keys.c    **** 
 154              		.loc 1 737 20 view .LVU40
 155 000e 1B68     		ldr	r3, [r3]
 156              	.LVL9:
 737:src/keys.c    **** 
 157              		.loc 1 737 15 view .LVU41
 158 0010 B3F8E037 		ldrh	r3, [r3, #2016]
 159              	.LVL10:
 740:src/keys.c    **** 			pc = 1;
 160              		.loc 1 740 3 is_stmt 1 view .LVU42
 740:src/keys.c    **** 			pc = 1;
 161              		.loc 1 740 7 is_stmt 0 view .LVU43
 162 0014 9A0B     		lsrs	r2, r3, #14
 741:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 163              		.loc 1 741 7 view .LVU44
 164 0016 032A     		cmp	r2, #3
 165              	.LVL11:
 742:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 166              		.loc 1 742 3 is_stmt 1 view .LVU45
 736:src/keys.c    **** 	unsigned int pc = state_pc();
 167              		.loc 1 736 12 is_stmt 0 view .LVU46
 168 0018 00F16405 		add	r5, r0, #100
ARM GAS  /tmp/cc6xzGMw.s 			page 34


 169              	.LVL12:
 742:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 170              		.loc 1 742 7 view .LVU47
 171 001c 2946     		mov	r1, r5
 172              	.LVL13:
 742:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 173              		.loc 1 742 7 view .LVU48
 174 001e 14BF     		ite	ne
 175 0020 1846     		movne	r0, r3
 176              	.LVL14:
 742:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 177              		.loc 1 742 7 view .LVU49
 178 0022 0120     		moveq	r0, #1
 179 0024 0222     		movs	r2, #2
 180 0026 FFF7FEFF 		bl	find_label_from
 181              	.LVL15:
 742:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 182              		.loc 1 742 6 view .LVU50
 183 002a 08B9     		cbnz	r0, .L16
 184              	.LVL16:
 185              	.L11:
 745:src/keys.c    **** }
 186              		.loc 1 745 9 view .LVU51
 187 002c 2046     		mov	r0, r4
 746:src/keys.c    **** 
 188              		.loc 1 746 1 view .LVU52
 189 002e 38BD     		pop	{r3, r4, r5, pc}
 190              	.LVL17:
 191              	.L16:
 743:src/keys.c    **** 	}
 192              		.loc 1 743 4 is_stmt 1 view .LVU53
 743:src/keys.c    **** 	}
 193              		.loc 1 743 11 is_stmt 0 view .LVU54
 194 0030 45F4C840 		orr	r0, r5, #25600
 746:src/keys.c    **** 
 195              		.loc 1 746 1 view .LVU55
 196 0034 38BD     		pop	{r3, r4, r5, pc}
 197              	.LVL18:
 198              	.L18:
 746:src/keys.c    **** 
 199              		.loc 1 746 1 view .LVU56
 200 0036 00BF     		.align	2
 201              	.L17:
 202 0038 00000000 		.word	StateWhileOn
 203 003c 00000000 		.word	main_ram
 204              		.cfi_endproc
 205              	.LFE17:
 207              		.section	.text.is_label_or_end_at,"ax",%progbits
 208              		.align	1
 209              		.p2align 2,,3
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 213              		.fpu fpv4-sp-d16
 215              	is_label_or_end_at:
 216              	.LVL19:
 217              	.LFB54:
ARM GAS  /tmp/cc6xzGMw.s 			page 35


1692:src/keys.c    **** 
1693:src/keys.c    **** static int gtodot_fkey(int n) {
1694:src/keys.c    **** 	const int code = 100 + n;
1695:src/keys.c    **** 	unsigned int pc = state_pc();
1696:src/keys.c    **** 
1697:src/keys.c    **** 	if(isXROM(pc))
1698:src/keys.c    **** 		pc = 1;
1699:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
1700:src/keys.c    **** 	if (pc > 0)
1701:src/keys.c    **** 		return pc;
1702:src/keys.c    **** 	return state_pc();
1703:src/keys.c    **** }
1704:src/keys.c    **** 
1705:src/keys.c    **** static int process_gtodot(const keycode c) {
1706:src/keys.c    **** 	int pc = -1;
1707:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
1708:src/keys.c    **** 
1709:src/keys.c    **** 	if (rawpc <= 9) {
1710:src/keys.c    **** 		// Digit 0 - 9
1711:src/keys.c    **** 		pc = gtodot_digit(rawpc);
1712:src/keys.c    **** 	}
1713:src/keys.c    **** #ifdef DM42
1714:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regX_idx) rawpc = gtodot_digit(1); 
1715:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
1716:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
1717:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
1718:src/keys.c    **** #endif
1719:src/keys.c    **** 	else if (c >= K00 && c <= K03) {
1720:src/keys.c    **** 		// A - D
1721:src/keys.c    **** 		rawpc = gtodot_fkey(c - K00);
1722:src/keys.c    **** 		goto fin;
1723:src/keys.c    **** 	}
1724:src/keys.c    **** 	else if (c == K62) {
1725:src/keys.c    **** 		// .
1726:src/keys.c    **** 		rawpc = ProgSize;
1727:src/keys.c    **** 		goto fin;
1728:src/keys.c    **** 	}
1729:src/keys.c    **** 	else if (c == K20) {
1730:src/keys.c    **** 		// ENTER - short circuit processing
1731:src/keys.c    **** 		pc = State2.digval;
1732:src/keys.c    **** 	}
1733:src/keys.c    **** 	else if (c == K24) {
1734:src/keys.c    **** 		// backspace
1735:src/keys.c    **** 		if (State2.numdigit == 0) {
1736:src/keys.c    **** 			goto fin2;
1737:src/keys.c    **** 		} else {
1738:src/keys.c    **** 			State2.numdigit--;
1739:src/keys.c    **** 			State2.digval /= 10;
1740:src/keys.c    **** 		}
1741:src/keys.c    **** 	}
1742:src/keys.c    **** 	else if (c == K_UP) {
1743:src/keys.c    **** 		// up
1744:src/keys.c    **** 		rawpc = state_pc();
1745:src/keys.c    **** 		if (rawpc == 1)
1746:src/keys.c    **** 			rawpc = 0;
1747:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
1748:src/keys.c    **** 		update_program_bounds(1);
ARM GAS  /tmp/cc6xzGMw.s 			page 36


1749:src/keys.c    **** 		rawpc = ProgBegin;
1750:src/keys.c    **** 		goto fin;
1751:src/keys.c    **** 	}
1752:src/keys.c    **** 	else if (c == K_DOWN) {
1753:src/keys.c    **** 		// down
1754:src/keys.c    **** 		update_program_bounds(1);
1755:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
1756:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
1757:src/keys.c    **** 			rawpc = 1;
1758:src/keys.c    **** 		goto fin;
1759:src/keys.c    **** 	}
1760:src/keys.c    **** 	if (pc >= 0) {
1761:src/keys.c    **** 		rawpc = find_user_pc(pc);
1762:src/keys.c    **** fin:		set_pc(rawpc);
1763:src/keys.c    **** fin2:		State2.gtodot = 0;
1764:src/keys.c    **** 		State2.digval = 0;
1765:src/keys.c    **** 		State2.numdigit = 0;
1766:src/keys.c    **** 	}
1767:src/keys.c    **** 	return STATE_UNFINISHED;
1768:src/keys.c    **** }
1769:src/keys.c    **** 
1770:src/keys.c    **** 
1771:src/keys.c    **** /* Process a keystroke in alpha mode
1772:src/keys.c    ****  */
1773:src/keys.c    **** static int process_alpha(const keycode c) {
1774:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
1775:src/keys.c    ****         int op = STATE_UNFINISHED;
1776:src/keys.c    **** 	const enum shifts shift = reset_shift();
1777:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
1778:src/keys.c    **** 	State2.alpha_pos = 0;
1779:src/keys.c    **** 
1780:src/keys.c    **** 	switch (c) {
1781:src/keys.c    **** 	case K10:	// STO
1782:src/keys.c    **** 		if (shift == SHIFT_F) {
1783:src/keys.c    **** 			init_arg(RARG_ASTO);
1784:src/keys.c    **** 			return STATE_UNFINISHED;
1785:src/keys.c    **** 		}
1786:src/keys.c    **** 		break;
1787:src/keys.c    **** 
1788:src/keys.c    **** 	case K11:	// RCL - maybe view
1789:src/keys.c    **** 		if (shift == SHIFT_F) {
1790:src/keys.c    **** 			init_arg(RARG_ARCL);
1791:src/keys.c    **** 			return STATE_UNFINISHED;
1792:src/keys.c    **** 		} else if (shift == SHIFT_H) {
1793:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
1794:src/keys.c    **** 			return STATE_UNFINISHED;
1795:src/keys.c    **** 		}
1796:src/keys.c    **** 		break;
1797:src/keys.c    **** 
1798:src/keys.c    **** 	case K20:	// Enter - maybe exit alpha mode
1799:src/keys.c    **** 		if (shift == SHIFT_G || shift == SHIFT_H)
1800:src/keys.c    **** 			break;
1801:src/keys.c    **** 		if (shift == SHIFT_F && ! State2.runmode) {
1802:src/keys.c    **** 			State2.multi = 1;
1803:src/keys.c    **** 			State2.numdigit = 0;
1804:src/keys.c    **** 			CmdBase = DBL_ALPHA;
1805:src/keys.c    **** 			return STATE_UNFINISHED;
ARM GAS  /tmp/cc6xzGMw.s 			page 37


1806:src/keys.c    **** 		}
1807:src/keys.c    **** 		State2.alphas = 0;
1808:src/keys.c    **** 		State2.alphashift = 0;
1809:src/keys.c    **** #ifdef DM42
1810:src/keys.c    **** 		set_menu(-1);
1811:src/keys.c    **** 		display_current_menu();
1812:src/keys.c    **** #endif
1813:src/keys.c    **** 		return op;
1814:src/keys.c    **** 
1815:src/keys.c    **** 	case K24:	// Clx - backspace, clear Alpha
1816:src/keys.c    **** 		if (shift == SHIFT_N)
1817:src/keys.c    **** 			return STATE_BACKSPACE;
1818:src/keys.c    **** 		if (shift == SHIFT_H)
1819:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
1820:src/keys.c    **** 		break;
1821:src/keys.c    **** 
1822:src/keys.c    **** 	case K_UP:
1823:src/keys.c    **** 	  if (shift == SHIFT_N) {
1824:src/keys.c    **** 	    if ( State2.runmode ) {
1825:src/keys.c    **** 	      // Alpha scroll left
1826:src/keys.c    **** #ifdef DM42
1827:src/keys.c    **** 	      /* 
1828:src/keys.c    **** 	       * The numbers 20 and 12 below should match the same 
1829:src/keys.c    **** 	       * numbers in display.c, lines 2414 and 2416.
1830:src/keys.c    **** 	       */
1831:src/keys.c    **** #ifdef BIGGER_DISPLAY
1832:src/keys.c    **** 	      if ((alpha_pos == 0) || (alen()-6*alpha_pos >= 20)) {
1833:src/keys.c    **** 		alpha_pos += 1;
1834:src/keys.c    **** 	      }
1835:src/keys.c    **** #else
1836:src/keys.c    **** 	      if ((alpha_pos == 0) || (alen()-6*alpha_pos >= 12)) {
1837:src/keys.c    **** 		alpha_pos += 1;
1838:src/keys.c    **** 	      }
1839:src/keys.c    **** #endif
1840:src/keys.c    **** 	      State2.alpha_pos = alpha_pos;
1841:src/keys.c    **** #else
1842:src/keys.c    **** 	      int n = alpha_pos + 1;
1843:src/keys.c    **** 	      State2.alpha_pos = ( n < ( alen() + 5 ) / 6 ) ? n : alpha_pos;
1844:src/keys.c    **** #endif
1845:src/keys.c    **** 	      return STATE_UNFINISHED;
1846:src/keys.c    **** 	    }
1847:src/keys.c    **** 	    return STATE_BST;
1848:src/keys.c    **** 	  }
1849:src/keys.c    **** 	  break;
1850:src/keys.c    **** 
1851:src/keys.c    **** 	case K_DOWN:
1852:src/keys.c    **** 	  if (shift == SHIFT_N) {
1853:src/keys.c    **** 	    if ( State2.runmode ) {
1854:src/keys.c    **** 	      // Alpha scroll right
1855:src/keys.c    **** 	      if (alpha_pos > 0)
1856:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
1857:src/keys.c    **** 	      return STATE_UNFINISHED;
1858:src/keys.c    **** 	    }
1859:src/keys.c    **** 	    return STATE_SST;
1860:src/keys.c    **** 	  }
1861:src/keys.c    **** 	  break;
1862:src/keys.c    **** 
ARM GAS  /tmp/cc6xzGMw.s 			page 38


1863:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
1864:src/keys.c    **** 		if (shift == SHIFT_F)
1865:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
1866:src/keys.c    **** 		else if (shift == SHIFT_H)
1867:src/keys.c    **** 			return OP_NIL | OP_OFF;
1868:src/keys.c    **** 		else if (shift == SHIFT_N) {
1869:src/keys.c    **** #ifdef DM42
1870:src/keys.c    **** 		  set_menu(-1);
1871:src/keys.c    **** 		  display_current_menu();
1872:src/keys.c    **** #endif
1873:src/keys.c    **** 		  init_state();
1874:src/keys.c    **** 		}
1875:src/keys.c    **** 		return STATE_UNFINISHED;
1876:src/keys.c    **** 
1877:src/keys.c    **** 	case K63:
1878:src/keys.c    **** 		if (shift == SHIFT_F)
1879:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
1880:src/keys.c    **** 		break;
1881:src/keys.c    **** 
1882:src/keys.c    **** 	default:
1883:src/keys.c    **** 		break;
1884:src/keys.c    **** 	}
1885:src/keys.c    **** 
1886:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
1887:src/keys.c    **** 	if (ch == 0)
1888:src/keys.c    **** 		return STATE_UNFINISHED;
1889:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
1890:src/keys.c    **** }
1891:src/keys.c    **** 
1892:src/keys.c    **** /*
1893:src/keys.c    ****  *  Code to handle all commands with arguments
1894:src/keys.c    ****  */
1895:src/keys.c    **** static void reset_arg(void) {
1896:src/keys.c    **** 	init_arg((enum rarg) 0);
1897:src/keys.c    **** 	State2.rarg = 0;
1898:src/keys.c    **** }
1899:src/keys.c    **** 
1900:src/keys.c    ****  static int arg_eval(unsigned int val) {
1901:src/keys.c    ****    const unsigned int base = CmdBase;
1902:src/keys.c    ****    int r = RARG(base, val 
1903:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
1904:src/keys.c    **** 		+ (State2.local ? LOCAL_REG_BASE : 0));
1905:src/keys.c    ****    const unsigned int ssize = (! UState.stack_depth || ! State2.runmode ) ? 4 : 8;
1906:src/keys.c    **** 
1907:src/keys.c    ****    if (! State2.ind) {
1908:src/keys.c    ****      /*
1909:src/keys.c    ****       *  Central argument checking for some commands
1910:src/keys.c    ****       */
1911:src/keys.c    **** #ifdef SHOW_COMPLEX_REGS
1912:src/keys.c    ****      if (argcmds[base].cmplx && val > TOPREALREG - 2 ) {
1913:src/keys.c    ****        // remap complex registers cY->T, cZ->A, cT->C
1914:src/keys.c    ****        // 99,   X,   Y,   Z,   T,   A,   B,   C,   D,   L,   I,   J,   K
1915:src/keys.c    ****        static char remap[] = {  0, 100, 102, 104, 106,   0,   0,   0,   0, 108,   0, 110,   0 };
1916:src/keys.c    ****        val = (unsigned int) remap[ val - (TOPREALREG - 1) ];
1917:src/keys.c    ****        if ( val == 0 )
1918:src/keys.c    **** 	 return STATE_UNFINISHED;
1919:src/keys.c    ****        r = RARG(base, val);
ARM GAS  /tmp/cc6xzGMw.s 			page 39


1920:src/keys.c    ****      }
1921:src/keys.c    **** #endif
1922:src/keys.c    **** #ifdef INCLUDE_C_LOCK
1923:src/keys.c    ****      if (argcmds[base].cmplx && (val > (unsigned int)(C_LOCKED ? 0 : TOPREALREG - 2) && (val & 1)))
1924:src/keys.c    ****        if (C_LOCKED) {
1925:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
1926:src/keys.c    **** 	 return STATE_UNFINISHED; // either leaves arg blank (if EXIT pressed) or with one digit in (STO)
1927:src/keys.c    ****        }
1928:src/keys.c    ****        else {
1929:src/keys.c    **** 	 return STATE_UNFINISHED;
1930:src/keys.c    ****        }
1931:src/keys.c    ****      }
1932:src/keys.c    **** #else
1933:src/keys.c    ****      if (argcmds[base].cmplx && (val > TOPREALREG - 2 && (val & 1)))
1934:src/keys.c    ****        // Disallow odd complex register > 98
1935:src/keys.c    ****        return STATE_UNFINISHED;
1936:src/keys.c    **** #endif
1937:src/keys.c    ****      if ((base == RARG_STOSTK || base == RARG_RCLSTK) && (val > TOPREALREG - ssize))
1938:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
1939:src/keys.c    ****        return STATE_UNFINISHED;
1940:src/keys.c    ****    }
1941:src/keys.c    ****    // Build op-code
1942:src/keys.c    ****    reset_arg();
1943:src/keys.c    ****    return r;
1944:src/keys.c    ****  }
1945:src/keys.c    **** 
1946:src/keys.c    **** static int arg_digit(int n) {
1947:src/keys.c    **** 	int lim;
1948:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1949:src/keys.c    **** 	int dispmode = get_dispmode_digs(&lim);
1950:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
1951:src/keys.c    **** #else
1952:src/keys.c    **** 	const unsigned int base = CmdBase;
1953:src/keys.c    **** #endif
1954:src/keys.c    **** 	const unsigned int val = State2.digval * 10 + n;
1955:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
1956:src/keys.c    **** 	
1957:src/keys.c    **** 	if (State2.local) {
1958:src/keys.c    **** 		// Handle local registers and flags
1959:src/keys.c    **** 		lim = MAX_LOCAL_DIRECT - 1;				// default
1960:src/keys.c    **** 		if (State2.runmode) {
1961:src/keys.c    **** 			if (LocalRegs == 0)
1962:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
1963:src/keys.c    **** 			if (is_reg) {
1964:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
1965:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
1966:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
1967:src/keys.c    **** 			}
1968:src/keys.c    **** 		}
1969:src/keys.c    **** 	}
1970:src/keys.c    **** 	else if (is_reg)						// normal register
1971:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
1972:src/keys.c    **** 	else {
1973:src/keys.c    **** 		lim = (int) argcmds[base].lim;				// any other command
1974:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
1975:src/keys.c    **** 			lim = RARG_IND - 1;
1976:src/keys.c    **** 	}
ARM GAS  /tmp/cc6xzGMw.s 			page 40


1977:src/keys.c    **** 	if ((int) val > lim)
1978:src/keys.c    **** 		return STATE_UNFINISHED;
1979:src/keys.c    **** 
1980:src/keys.c    **** 	State2.digval = val;
1981:src/keys.c    **** 	++State2.numdigit;
1982:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
1983:src/keys.c    **** 		int result = arg_eval(val);
1984:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
1985:src/keys.c    **** 			--State2.numdigit;
1986:src/keys.c    **** 			State2.digval /= 10;
1987:src/keys.c    **** 		}
1988:src/keys.c    **** 		return result;
1989:src/keys.c    **** 	}
1990:src/keys.c    **** 	return STATE_UNFINISHED;
1991:src/keys.c    **** }
1992:src/keys.c    **** 
1993:src/keys.c    **** static int arg_fkey(int n) {
1994:src/keys.c    **** 	const unsigned int b = CmdBase;
1995:src/keys.c    **** 
1996:src/keys.c    **** 	if (argcmds[b].label || (b >= RARG_SF && b <= RARG_FCF))
1997:src/keys.c    **** 	{
1998:src/keys.c    **** 		if (State2.ind || State2.numdigit > 0)
1999:src/keys.c    **** 			return STATE_UNFINISHED;
2000:src/keys.c    **** 		if (argcmds[b].lim < 100)
2001:src/keys.c    **** 			return STATE_UNFINISHED;
2002:src/keys.c    **** 		return arg_eval(n + 100);
2003:src/keys.c    **** 	}
2004:src/keys.c    **** 	return STATE_UNFINISHED;
2005:src/keys.c    **** }
2006:src/keys.c    **** 
2007:src/keys.c    **** static int arg_storcl_check(const unsigned int b, const int cmplx) {
2008:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
2009:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || b == RARG_FLRCL ||
2010:src/keys.c    **** 			(cmplx && (b == RARG_CSTO || b == RARG_CRCL || b == RARG_FLCRCL)));
2011:src/keys.c    **** #else
2012:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || (cmplx && (b == RARG_CSTO || b == RARG_CRCL )));
2013:src/keys.c    **** #endif
2014:src/keys.c    **** }
2015:src/keys.c    **** 
2016:src/keys.c    **** static int arg_storcl(const unsigned int n, int cmplx) {
2017:src/keys.c    **** 	unsigned int b = CmdBase;
2018:src/keys.c    **** 
2019:src/keys.c    **** 	if (arg_storcl_check(b, cmplx)) {
2020:src/keys.c    **** 		CmdBase += n;
2021:src/keys.c    **** 		return 1;
2022:src/keys.c    **** 	}
2023:src/keys.c    **** 	/* And we can turn off the operation too */
2024:src/keys.c    **** 	if (b >= n) {
2025:src/keys.c    **** 		b -= n;
2026:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
2027:src/keys.c    **** 			CmdBase = b;
2028:src/keys.c    **** 			return 1;
2029:src/keys.c    **** 		}
2030:src/keys.c    **** 	}
2031:src/keys.c    **** 	return 0;
2032:src/keys.c    **** }
2033:src/keys.c    **** 
ARM GAS  /tmp/cc6xzGMw.s 			page 41


2034:src/keys.c    **** static int process_arg_dot(const unsigned int base) {
2035:src/keys.c    **** 
2036:src/keys.c    **** 	if (State2.numdigit == 0) {
2037:src/keys.c    **** 		// Only valid at beginning of entry
2038:src/keys.c    **** 		if (State2.dot || State2.local) {
2039:src/keys.c    **** 			// '..' or ENTER '.' = X
2040:src/keys.c    **** 			State2.local = 0;
2041:src/keys.c    **** 			return arg_eval(regX_idx);
2042:src/keys.c    **** 		}
2043:src/keys.c    **** 		if (argcmds[base].local || State2.ind) {
2044:src/keys.c    **** 			// local register or flag select
2045:src/keys.c    **** 			State2.local = 1;
2046:src/keys.c    **** 		}
2047:src/keys.c    **** 		else if (base == RARG_GTO || base == RARG_XEQ) {
2048:src/keys.c    **** 			// Special GTO . sequence
2049:src/keys.c    **** 			if (! State2.ind) {
2050:src/keys.c    **** 				State2.gtodot = 1;
2051:src/keys.c    **** 				reset_arg();
2052:src/keys.c    **** 			}
2053:src/keys.c    **** 		}
2054:src/keys.c    **** 	}
2055:src/keys.c    **** 	return STATE_UNFINISHED;
2056:src/keys.c    **** }
2057:src/keys.c    **** 
2058:src/keys.c    **** static int process_arg_shuffle(int r) {
2059:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
2060:src/keys.c    **** 	if (State2.numdigit < 4)
2061:src/keys.c    **** 		return STATE_UNFINISHED;
2062:src/keys.c    **** 	return arg_eval(State2.digval);
2063:src/keys.c    **** }
2064:src/keys.c    **** 
2065:src/keys.c    **** 
2066:src/keys.c    **** static int process_arg(const keycode c) {
2067:src/keys.c    **** 	unsigned int base = CmdBase;
2068:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
2069:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
2070:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
2071:src/keys.c    **** 	const enum shifts shift = reset_shift();
2072:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
2073:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
2074:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
2075:src/keys.c    **** 
2076:src/keys.c    **** 	n &= ~NO_SHORT;
2077:src/keys.c    **** 	if (base >= NUM_RARG) {
2078:src/keys.c    **** 		reset_arg();
2079:src/keys.c    **** 		return STATE_UNFINISHED;
2080:src/keys.c    **** 	}
2081:src/keys.c    **** #ifdef DM42
2082:src/keys.c    **** 	if ( ! shorthand && ! State2.dot && ! State2.shuffle ) {
2083:src/keys.c    **** 	  switch (n) {
2084:src/keys.c    **** 	  case regX_idx:
2085:src/keys.c    **** 	    return arg_digit(1);
2086:src/keys.c    **** 	  case regY_idx:
2087:src/keys.c    **** 	    return arg_digit(2);
2088:src/keys.c    **** 	  case regZ_idx:
2089:src/keys.c    **** 	    return arg_digit(3);
2090:src/keys.c    **** 	  case regT_idx:
ARM GAS  /tmp/cc6xzGMw.s 			page 42


2091:src/keys.c    **** 	    return arg_digit(4);
2092:src/keys.c    **** 	  case 5:
2093:src/keys.c    **** 	  case 6:
2094:src/keys.c    **** 	  case 7:
2095:src/keys.c    **** 	  case 8:
2096:src/keys.c    **** 	  case 9:
2097:src/keys.c    **** 	  case 0:
2098:src/keys.c    **** 	    return arg_digit(n);
2099:src/keys.c    **** 	  }
2100:src/keys.c    **** 	}
2101:src/keys.c    **** #else
2102:src/keys.c    **** 	if (n <= 9 && ! shorthand && ! State2.dot && ! State2.shuffle)
2103:src/keys.c    **** 		return arg_digit(n);
2104:src/keys.c    **** #endif	
2105:src/keys.c    **** 	if (shorthand)
2106:src/keys.c    **** 		// row column shorthand addressing
2107:src/keys.c    **** 		return arg_eval(keycode_to_row_column(c));
2108:src/keys.c    **** 
2109:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
2110:src/keys.c    **** #ifdef DM42
2111:src/keys.c    **** 	if (base == RARG_FIX || base == RARG_SIG || base == RARG_SIG0) {
2112:src/keys.c    **** 		switch ((int)c) {
2113:src/keys.c    **** 		case K_UP:	// up arrow
2114:src/keys.c    **** 		  if (base == RARG_FIX) {
2115:src/keys.c    **** 		    base = RARG_SIG;
2116:src/keys.c    **** 		    break;
2117:src/keys.c    **** 		  }
2118:src/keys.c    **** 		  if (base == RARG_SIG) {
2119:src/keys.c    **** 		    base = RARG_SIG0;
2120:src/keys.c    **** 		    break;
2121:src/keys.c    **** 		  }
2122:src/keys.c    **** 		  if (base == RARG_SIG0) {
2123:src/keys.c    **** 		    base = RARG_FIX;
2124:src/keys.c    **** 		    break;
2125:src/keys.c    **** 		  }
2126:src/keys.c    **** 		case K_DOWN:	// down arrow
2127:src/keys.c    **** 		case K01:	// B
2128:src/keys.c    **** 		  if (base == RARG_FIX) {
2129:src/keys.c    **** 		    base = RARG_SIG0;
2130:src/keys.c    **** 		    break;
2131:src/keys.c    **** 		  }
2132:src/keys.c    **** 		  if (base == RARG_SIG) {
2133:src/keys.c    **** 		    base = RARG_FIX;
2134:src/keys.c    **** 		    break;
2135:src/keys.c    **** 		  }
2136:src/keys.c    **** 		  if (base == RARG_SIG0) {
2137:src/keys.c    **** 		    base = RARG_SIG;
2138:src/keys.c    **** 		    break;
2139:src/keys.c    **** 		  }
2140:src/keys.c    **** 		}
2141:src/keys.c    **** 	}
2142:src/keys.c    **** 		CmdBase = base;
2143:src/keys.c    **** #else
2144:src/keys.c    **** 	if (base >= RARG_FIX && base <= RARG_SIG0) {
2145:src/keys.c    **** 		switch ((int)c) {
2146:src/keys.c    **** 		case K_UP:	// up arrow
2147:src/keys.c    **** 			if (--base < RARG_FIX)
ARM GAS  /tmp/cc6xzGMw.s 			page 43


2148:src/keys.c    **** 				base = RARG_SIG0;
2149:src/keys.c    **** 			break;
2150:src/keys.c    **** 
2151:src/keys.c    **** 		case K_DOWN:	// down arrow
2152:src/keys.c    **** 		case K01:	// B
2153:src/keys.c    **** 			if (++base > RARG_SIG0)
2154:src/keys.c    **** 				base = RARG_FIX;
2155:src/keys.c    **** 			break;
2156:src/keys.c    **** 		}
2157:src/keys.c    **** 		CmdBase = base;
2158:src/keys.c    **** 	}
2159:src/keys.c    **** #endif
2160:src/keys.c    **** #endif
2161:src/keys.c    **** 	/*
2162:src/keys.c    **** 	 *  So far, we've got the digits and some special label addressing keys
2163:src/keys.c    **** 	 *  Handle the rest here.
2164:src/keys.c    **** 	 */
2165:src/keys.c    **** 	switch ((int)c) {
2166:src/keys.c    **** 	case K_F:
2167:src/keys.c    **** 		if (label_addressing)
2168:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
2169:src/keys.c    **** 		break;
2170:src/keys.c    **** 
2171:src/keys.c    **** 	case K_ARROW:		// arrow
2172:src/keys.c    **** 		if (!State2.dot && argcmds[base].indirectokay) {
2173:src/keys.c    **** 			State2.ind = ! State2.ind;
2174:src/keys.c    **** 			if (! stack_reg)
2175:src/keys.c    **** 				State2.dot = 0;
2176:src/keys.c    **** 		}
2177:src/keys.c    **** 		break;
2178:src/keys.c    **** 
2179:src/keys.c    **** 	case K_CMPLX:
2180:src/keys.c    **** 		if (State2.ind || State2.dot)
2181:src/keys.c    **** 			break;
2182:src/keys.c    **** 		if (base == RARG_STO)
2183:src/keys.c    **** 			CmdBase = RARG_STOM;
2184:src/keys.c    **** 		else if (base == RARG_RCL)
2185:src/keys.c    **** 			CmdBase = RARG_RCLM;
2186:src/keys.c    **** 		break;
2187:src/keys.c    **** #ifdef DM42
2188:src/keys.c    **** 	case K41:       // T
2189:src/keys.c    **** 	  if (State2.shuffle)
2190:src/keys.c    **** 	    return process_arg_shuffle(3);
2191:src/keys.c    **** 	case K51:       // X
2192:src/keys.c    **** 	  if (State2.shuffle)
2193:src/keys.c    **** 	    return process_arg_shuffle(0);
2194:src/keys.c    **** 	case K52:	// Y
2195:src/keys.c    **** 	  if (State2.shuffle)
2196:src/keys.c    **** 	    return process_arg_shuffle(1);
2197:src/keys.c    **** 	case K53:       // Z
2198:src/keys.c    **** 	  if (State2.shuffle)
2199:src/keys.c    **** 	    return process_arg_shuffle(2);
2200:src/keys.c    **** #else
2201:src/keys.c    **** 	case K63:	// Y
2202:src/keys.c    **** 	  if (State2.shuffle)
2203:src/keys.c    **** 	    return process_arg_shuffle(1);
2204:src/keys.c    **** #endif
ARM GAS  /tmp/cc6xzGMw.s 			page 44


2205:src/keys.c    **** 	case K00:	// A
2206:src/keys.c    **** 	case K01:	// B
2207:src/keys.c    **** 	case K02:	// C
2208:src/keys.c    **** 	case K03:	// D
2209:src/keys.c    **** #ifdef DM42
2210:src/keys.c    **** 	case K12:	// I (lastY)
2211:src/keys.c    **** 	case K13:	// J
2212:src/keys.c    **** 	case K14:	// K
2213:src/keys.c    **** 	case K15:	// L (lastX)
2214:src/keys.c    **** #else
2215:src/keys.c    **** 	case K12:	// I (lastY)
2216:src/keys.c    **** 	case K21:	// J
2217:src/keys.c    **** 	case K22:	// K
2218:src/keys.c    **** 	case K23:	// L (lastX)
2219:src/keys.c    **** #endif
2220:src/keys.c    **** 	  if (State2.dot || stack_reg)
2221:src/keys.c    **** 			return arg_eval(n);
2222:src/keys.c    **** 		if ( c <= K03 )
2223:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
2224:src/keys.c    **** 		break;
2225:src/keys.c    **** #ifdef DM42
2226:src/keys.c    **** 	case K62:	// '.'
2227:src/keys.c    **** 		return process_arg_dot(base);
2228:src/keys.c    **** 
2229:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
2230:src/keys.c    **** 	case K64:		// plus
2231:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
2232:src/keys.c    **** 			return arg_eval(n);
2233:src/keys.c    **** 		break;
2234:src/keys.c    **** 	case K54:               // minus
2235:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
2236:src/keys.c    **** 			reset_arg();
2237:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
2238:src/keys.c    **** 		}
2239:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
2240:src/keys.c    **** 		break;
2241:src/keys.c    **** 	case K44:		// multiply
2242:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
2243:src/keys.c    **** 			return arg_eval(n);
2244:src/keys.c    **** 		break;
2245:src/keys.c    **** 	case K34:
2246:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
2247:src/keys.c    **** 		break;
2248:src/keys.c    **** #else
2249:src/keys.c    **** 	case K62:	// X, '.'
2250:src/keys.c    **** 		if (State2.shuffle)
2251:src/keys.c    **** 			return process_arg_shuffle(0);
2252:src/keys.c    **** 		return process_arg_dot(base);
2253:src/keys.c    **** 
2254:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
2255:src/keys.c    **** 	case K64:		// Z register
2256:src/keys.c    **** 		if (State2.shuffle)
2257:src/keys.c    **** 			return process_arg_shuffle(2);
2258:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
2259:src/keys.c    **** 			return arg_eval(n);
2260:src/keys.c    **** 		break;
2261:src/keys.c    **** 
ARM GAS  /tmp/cc6xzGMw.s 			page 45


2262:src/keys.c    **** 	case K54:
2263:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
2264:src/keys.c    **** 			reset_arg();
2265:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
2266:src/keys.c    **** 		}
2267:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
2268:src/keys.c    **** 		break;
2269:src/keys.c    **** 
2270:src/keys.c    **** 	case K44:		// T register
2271:src/keys.c    **** 		if (State2.shuffle)
2272:src/keys.c    **** 			return process_arg_shuffle(3);
2273:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
2274:src/keys.c    **** 			return arg_eval(n);
2275:src/keys.c    **** 		break;
2276:src/keys.c    **** 
2277:src/keys.c    **** 	case K34:
2278:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
2279:src/keys.c    **** 		break;
2280:src/keys.c    **** #endif
2281:src/keys.c    **** 	case K_UP:
2282:src/keys.c    **** 		arg_storcl(RARG_STO_MAX - RARG_STO, 0);
2283:src/keys.c    **** 		break;
2284:src/keys.c    **** 
2285:src/keys.c    **** 	case K_DOWN:
2286:src/keys.c    **** 		arg_storcl(RARG_STO_MIN - RARG_STO, 0);
2287:src/keys.c    **** 		break;
2288:src/keys.c    **** 
2289:src/keys.c    **** 	case K20:				// Enter is a short cut finisher but it also changes a few commands if it is first up
2290:src/keys.c    **** 		if (State2.numdigit == 0 && !State2.ind && !State2.dot) {
2291:src/keys.c    **** 			if (argcmds[base].label) {
2292:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
2293:src/keys.c    **** 				State2.multi = 1;
2294:src/keys.c    **** 				State2.alphashift = 0;
2295:src/keys.c    **** 				State2.rarg = 0;
2296:src/keys.c    **** 			} else if (base == RARG_SCI) {
2297:src/keys.c    **** 				reset_arg();
2298:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
2299:src/keys.c    **** 			} else if (base == RARG_ENG) {
2300:src/keys.c    **** 				reset_arg();
2301:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
2302:src/keys.c    **** 			} else if (argcmds[base].stckreg)
2303:src/keys.c    **** 				State2.dot = 1;
2304:src/keys.c    **** 		} else if (State2.numdigit > 0)
2305:src/keys.c    **** 			return arg_eval(State2.digval);
2306:src/keys.c    **** 		else if (stack_reg)
2307:src/keys.c    **** 			State2.dot = 1 - State2.dot;
2308:src/keys.c    **** 		break;
2309:src/keys.c    **** 
2310:src/keys.c    **** 	case K24:	// <-
2311:src/keys.c    **** 		if (State2.numdigit == 0) {
2312:src/keys.c    **** 			if (State2.dot)
2313:src/keys.c    **** 				State2.dot = 0;
2314:src/keys.c    **** 			else if (State2.local)
2315:src/keys.c    **** 				State2.local = 0;
2316:src/keys.c    **** 			else if (State2.ind)
2317:src/keys.c    **** 				State2.ind = 0;
2318:src/keys.c    **** 			else
ARM GAS  /tmp/cc6xzGMw.s 			page 46


2319:src/keys.c    **** 				goto reset;
2320:src/keys.c    **** 		}
2321:src/keys.c    **** 		else {
2322:src/keys.c    **** 			--State2.numdigit;
2323:src/keys.c    **** 			if (State2.shuffle)
2324:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
2325:src/keys.c    **** 			else
2326:src/keys.c    **** 				State2.digval /= 10;
2327:src/keys.c    **** 		}
2328:src/keys.c    **** 		break;
2329:src/keys.c    **** 
2330:src/keys.c    **** 	case K60:
2331:src/keys.c    **** 	reset:
2332:src/keys.c    **** 		reset_arg();
2333:src/keys.c    **** 	default:
2334:src/keys.c    **** 		break;
2335:src/keys.c    **** 	}
2336:src/keys.c    **** 	return STATE_UNFINISHED;
2337:src/keys.c    **** }
2338:src/keys.c    **** 
2339:src/keys.c    **** 
2340:src/keys.c    **** /*
2341:src/keys.c    ****  *  Process arguments to the diverse test commands
2342:src/keys.c    ****  */
2343:src/keys.c    **** static int process_test(const keycode c) {
2344:src/keys.c    **** 	int r = State2.test;
2345:src/keys.c    **** 	int cmpx = State2.cmplx;
2346:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
2347:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
2348:src/keys.c    **** 
2349:src/keys.c    **** 	State2.test = TST_NONE;
2350:src/keys.c    **** 	State2.cmplx = 0;
2351:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
2352:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
2353:src/keys.c    **** 		// Lettered register
2354:src/keys.c    **** 		if (cmpx && (n & 1)) {
2355:src/keys.c    **** 			if (n == regI_idx)
2356:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
2357:src/keys.c    **** 			// Disallow odd complex registers > A
2358:src/keys.c    **** 			goto again;
2359:src/keys.c    **** 		}
2360:src/keys.c    **** 		// Return the command with the register completed
2361:src/keys.c    **** 		return RARG(base, n);
2362:src/keys.c    **** 	}
2363:src/keys.c    **** 	else if ( n == 0 ) {
2364:src/keys.c    **** 		// Special 0
2365:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq0 : OP_Xeq0) + r;
2366:src/keys.c    **** 	}
2367:src/keys.c    **** 	else if ( n == 1 ) {
2368:src/keys.c    **** 		// Special 1
2369:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq1 : OP_Xeq1) + r;
2370:src/keys.c    **** 	}
2371:src/keys.c    **** 	else if ( n <= 9 || c == K_ARROW || c == K62 ) {
2372:src/keys.c    **** 		// digit 2..9, -> or .
2373:src/keys.c    **** 		init_arg((enum rarg)base);
2374:src/keys.c    **** 		return process_arg(c);
2375:src/keys.c    **** 	}
ARM GAS  /tmp/cc6xzGMw.s 			page 47


2376:src/keys.c    **** 
2377:src/keys.c    **** 	switch (c) {
2378:src/keys.c    **** 	case K11:					// tests vs register
2379:src/keys.c    **** 	case K20:
2380:src/keys.c    **** 		init_arg((enum rarg)base);
2381:src/keys.c    **** 		return STATE_UNFINISHED;
2382:src/keys.c    **** 
2383:src/keys.c    **** 	//case K60:
2384:src/keys.c    **** 	case K24:
2385:src/keys.c    **** 		return STATE_UNFINISHED;
2386:src/keys.c    **** 
2387:src/keys.c    **** 	default:
2388:src/keys.c    **** 		break;
2389:src/keys.c    **** 	}
2390:src/keys.c    **** again:
2391:src/keys.c    **** 	State2.test = r;
2392:src/keys.c    **** 	State2.cmplx = cmpx;
2393:src/keys.c    **** 	return STATE_UNFINISHED;
2394:src/keys.c    **** }
2395:src/keys.c    **** 
2396:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2397:src/keys.c    **** /*
2398:src/keys.c    ****  *  Build the user catalogue on the fly in RAM and return the number of entries
2399:src/keys.c    ****  */
2400:src/keys.c    **** #define USER_CAT_MAX 100
2401:src/keys.c    **** s_opcode UserCat[USER_CAT_MAX];
2402:src/keys.c    **** 
2403:src/keys.c    **** static int build_user_cat(void)
2404:src/keys.c    **** {
2405:src/keys.c    **** 	// find the label 'CAT'
2406:src/keys.c    **** 	const int lbl = OP_DBL + (DBL_LBL << DBL_SHIFT) + 'C' + ('A' << 16) + ('T' << 24);
2407:src/keys.c    **** 	unsigned int pc = findmultilbl(lbl, 0);
2408:src/keys.c    **** 	int len = 0;
2409:src/keys.c    **** 	while (pc && len < USER_CAT_MAX) {
2410:src/keys.c    **** 		// do a simnple insert-sort to sort the entries
2411:src/keys.c    **** 		char buf1[16];
2412:src/keys.c    **** 		int i;
2413:src/keys.c    **** 		s_opcode op;
2414:src/keys.c    **** 	next:
2415:src/keys.c    **** 		pc = do_inc(pc, 0);
2416:src/keys.c    **** 		op = (s_opcode) getprog(pc);
2417:src/keys.c    **** 		if (op == (OP_NIL | OP_END))
2418:src/keys.c    **** 			break;
2419:src/keys.c    **** 		if (isDBL(op))
2420:src/keys.c    **** 			continue;
2421:src/keys.c    **** 		if (isRARG(op)) {
2422:src/keys.c    **** 			const s_opcode rarg = RARG_CMD(op);
2423:src/keys.c    **** 			if (rarg != RARG_ALPHA && rarg != RARG_CONV
2424:src/keys.c    **** 			    && rarg != RARG_CONST && rarg != RARG_CONST_CMPLX)
2425:src/keys.c    **** 				op = op & 0xff00;	// remove argument
2426:src/keys.c    **** 		}
2427:src/keys.c    **** 		catcmd(op, buf1);
2428:src/keys.c    **** 		for (i = 0; i < len; ++i) {
2429:src/keys.c    **** 			// Find a position in the table to insert the new entry
2430:src/keys.c    **** 			char buf2[16];
2431:src/keys.c    **** 			const char *p, *q;
2432:src/keys.c    **** 			int diff = 0;
ARM GAS  /tmp/cc6xzGMw.s 			page 48


2433:src/keys.c    **** 			if (op == UserCat[i]) {
2434:src/keys.c    **** 				// duplicate entry - ignore
2435:src/keys.c    **** 				goto next;
2436:src/keys.c    **** 			}
2437:src/keys.c    **** 			p = buf1;
2438:src/keys.c    **** 			if (*p == COMPLEX_PREFIX)
2439:src/keys.c    **** 				++p;
2440:src/keys.c    **** 			q = catcmd(UserCat[i], buf2);
2441:src/keys.c    **** 			if (*q == COMPLEX_PREFIX)
2442:src/keys.c    **** 				++q;
2443:src/keys.c    **** 			diff = 0;
2444:src/keys.c    **** 			while (*p != '\0' && diff == 0) {
2445:src/keys.c    **** 				diff = remap_chars(*q++) - remap_chars(*p++);
2446:src/keys.c    **** 			}
2447:src/keys.c    **** 			if ((diff == 0 && *q == 0) ) {
2448:src/keys.c    **** 				// identical according to sort order, insert after
2449:src/keys.c    **** 				++i;
2450:src/keys.c    **** 				break;
2451:src/keys.c    **** 			}
2452:src/keys.c    **** 			if (diff > 0) {
2453:src/keys.c    **** 				// insert new entry before the one found because this is greater
2454:src/keys.c    **** 				break;
2455:src/keys.c    **** 			}
2456:src/keys.c    **** 		}
2457:src/keys.c    **** 		if (i < len) {
2458:src/keys.c    **** 			// Make room
2459:src/keys.c    **** 			xcopy(UserCat + i + 1, UserCat + i, (len - i) << 1);
2460:src/keys.c    **** 		}
2461:src/keys.c    **** 		UserCat[i] = op;
2462:src/keys.c    **** 		++len;
2463:src/keys.c    **** 	}
2464:src/keys.c    **** 	// return the number of entries
2465:src/keys.c    **** 	return len;
2466:src/keys.c    **** }
2467:src/keys.c    **** #endif
2468:src/keys.c    **** 
2469:src/keys.c    **** /* Return the number of entries in the current catalogue.
2470:src/keys.c    ****  * These are all fixed size known at compile time so a table lookup will
2471:src/keys.c    ****  * likely be the most space efficient method.
2472:src/keys.c    ****  */
2473:src/keys.c    **** int current_catalogue_max(void) {
2474:src/keys.c    **** 	// A quick table of catalogue sizes
2475:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues' 
2476:src/keys.c    **** 	static const unsigned char catalogue_sizes[] = 
2477:src/keys.c    **** 	{
2478:src/keys.c    **** 		0, // NONE
2479:src/keys.c    **** 		SIZE_catalogue,
2480:src/keys.c    **** 		SIZE_cplx_catalogue,
2481:src/keys.c    **** 		SIZE_stats_catalogue,
2482:src/keys.c    **** 		SIZE_prob_catalogue,
2483:src/keys.c    **** 		SIZE_int_catalogue,
2484:src/keys.c    **** 		SIZE_prog_catalogue,
2485:src/keys.c    **** 		SIZE_program_xfcn,
2486:src/keys.c    **** 		SIZE_test_catalogue,
2487:src/keys.c    **** 		SIZE_mode_catalogue,
2488:src/keys.c    **** 		SIZE_alpha_catalogue,
2489:src/keys.c    **** 		SIZE_alpha_symbols,
ARM GAS  /tmp/cc6xzGMw.s 			page 49


2490:src/keys.c    **** 		SIZE_alpha_compares,
2491:src/keys.c    **** 		SIZE_alpha_arrows,
2492:src/keys.c    **** 		SIZE_alpha_letters,
2493:src/keys.c    **** 		SIZE_alpha_subscripts,
2494:src/keys.c    **** 		NUM_CONSTS_CAT,
2495:src/keys.c    **** 		NUM_CONSTS_CAT,
2496:src/keys.c    **** 		SIZE_conv_catalogue,
2497:src/keys.c    **** 		SIZE_sums_catalogue,
2498:src/keys.c    **** 		SIZE_matrix_catalogue,
2499:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2500:src/keys.c    **** 		SIZE_internal_catalogue,
2501:src/keys.c    **** #endif
2502:src/keys.c    **** 	};
2503:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2504:src/keys.c    **** 	const int cat = State2.catalogue;
2505:src/keys.c    **** 	return cat == CATALOGUE_USER ? build_user_cat() : catalogue_sizes[cat];
2506:src/keys.c    **** #else
2507:src/keys.c    **** 	return catalogue_sizes[State2.catalogue];
2508:src/keys.c    **** #endif
2509:src/keys.c    **** }
2510:src/keys.c    **** 
2511:src/keys.c    **** 
2512:src/keys.c    **** /* Look up the character position in the given byte array and
2513:src/keys.c    ****  * build the alpha op-code for it.
2514:src/keys.c    ****  */
2515:src/keys.c    **** static opcode alpha_code(int n, const char tbl[]) {
2516:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
2517:src/keys.c    **** }
2518:src/keys.c    **** 
2519:src/keys.c    **** 
2520:src/keys.c    **** /* Return the opcode for entry n from the current catalogue
2521:src/keys.c    ****  */
2522:src/keys.c    **** opcode current_catalogue(int n) {
2523:src/keys.c    **** 	// A quick table of catalogue tables
2524:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues'
2525:src/keys.c    **** 	static const void *catalogues[] =
2526:src/keys.c    **** 	{
2527:src/keys.c    **** 		NULL, // NONE
2528:src/keys.c    **** 		catalogue,
2529:src/keys.c    **** 		cplx_catalogue,
2530:src/keys.c    **** 		stats_catalogue,
2531:src/keys.c    **** 		prob_catalogue,
2532:src/keys.c    **** 		int_catalogue,
2533:src/keys.c    **** 		prog_catalogue,
2534:src/keys.c    **** 		program_xfcn,
2535:src/keys.c    **** 		test_catalogue,
2536:src/keys.c    **** 		mode_catalogue,
2537:src/keys.c    **** 		alpha_catalogue,
2538:src/keys.c    **** 		alpha_symbols,
2539:src/keys.c    **** 		alpha_compares,
2540:src/keys.c    **** 		alpha_arrows,
2541:src/keys.c    **** 		alpha_letters,
2542:src/keys.c    **** 		alpha_subscripts,
2543:src/keys.c    **** 		NULL,
2544:src/keys.c    **** 		NULL,
2545:src/keys.c    **** 		NULL, //CONV
2546:src/keys.c    **** 		sums_catalogue,
ARM GAS  /tmp/cc6xzGMw.s 			page 50


2547:src/keys.c    **** 		matrix_catalogue,
2548:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2549:src/keys.c    **** 		internal_catalogue,
2550:src/keys.c    **** #endif
2551:src/keys.c    **** 	};
2552:src/keys.c    **** 	const unsigned char *cat;
2553:src/keys.c    **** 	unsigned int c = State2.catalogue;
2554:src/keys.c    **** 	int m, i;
2555:src/keys.c    **** 	unsigned p, q;
2556:src/keys.c    **** 
2557:src/keys.c    **** 	if (c == CATALOGUE_CONST) {
2558:src/keys.c    **** 		if (n == OP_ZERO)
2559:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
2560:src/keys.c    **** 		return CONST(n);
2561:src/keys.c    **** 	}
2562:src/keys.c    **** 	if (c == CATALOGUE_COMPLEX_CONST) {
2563:src/keys.c    **** 		if (n == OP_ZERO)
2564:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
2565:src/keys.c    **** 		return CONST_CMPLX(n);
2566:src/keys.c    **** 	}
2567:src/keys.c    **** 	if (c == CATALOGUE_CONV) {
2568:src/keys.c    **** 		const int cnv = conv_catalogue[n];
2569:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
2570:src/keys.c    **** 			// Monadic conversion routine
2571:src/keys.c    **** 			return OP_MON | (cnv - SIZE_conv_catalogue);
2572:src/keys.c    **** 		else
2573:src/keys.c    **** 			return RARG(RARG_CONV, cnv);
2574:src/keys.c    **** 	}
2575:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2576:src/keys.c    **** 	if (c == CATALOGUE_USER)
2577:src/keys.c    **** 		return build_user_cat() ? UserCat[n] : STATE_IGNORE;
2578:src/keys.c    **** #endif
2579:src/keys.c    **** 
2580:src/keys.c    **** 	if (c == CATALOGUE_ALPHA_LETTERS && State2.alphashift)
2581:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
2582:src/keys.c    **** 	else
2583:src/keys.c    **** 		cat = (const unsigned char *) catalogues[c];
2584:src/keys.c    **** 
2585:src/keys.c    **** 	if (c >= CATALOGUE_ALPHA_SYMBOLS && c <= CATALOGUE_ALPHA_SUBSCRIPTS) {
2586:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
2587:src/keys.c    **** 	}
2588:src/keys.c    **** 	if (c >= sizeof(catalogues) / sizeof(void *))
2589:src/keys.c    **** 		return OP_NIL | OP_NOP;
2590:src/keys.c    **** 
2591:src/keys.c    **** 	/* Unpack the opcode */
2592:src/keys.c    **** 	cat += n + (n >> 2);
2593:src/keys.c    **** 	p = cat[0];
2594:src/keys.c    **** 	q = cat[1];
2595:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
2596:src/keys.c    **** 
2597:src/keys.c    **** 	/* Now figure out which opcode it really is */
2598:src/keys.c    **** 	for (i=0; i<KIND_MAX; i++) {
2599:src/keys.c    **** 		if (m < opcode_breaks[i])
2600:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
2601:src/keys.c    **** 		m -= opcode_breaks[i];
2602:src/keys.c    **** 	}
2603:src/keys.c    **** 	return RARG_BASEOP(m);
ARM GAS  /tmp/cc6xzGMw.s 			page 51


2604:src/keys.c    **** }
2605:src/keys.c    **** 
2606:src/keys.c    **** 
2607:src/keys.c    **** /*
2608:src/keys.c    ****  *  Helper for navigation in alpha catalogues. Some charaters are not allowed
2609:src/keys.c    ****  *  in multi character commands.
2610:src/keys.c    ****  */
2611:src/keys.c    **** static int forbidden_alpha(int pos) {
2612:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
2613:src/keys.c    **** }
2614:src/keys.c    **** 
2615:src/keys.c    **** /*
2616:src/keys.c    ****  *  Catalogue navigation
2617:src/keys.c    ****  */
2618:src/keys.c    ****  static int process_catalogue(const keycode c, const enum shifts shift, const int is_multi) {
2619:src/keys.c    ****    int pos = State.catpos;
2620:src/keys.c    ****    int ch;
2621:src/keys.c    ****    const int ctmax = current_catalogue_max();
2622:src/keys.c    ****    const enum catalogues cat = (enum catalogues) State2.catalogue;
2623:src/keys.c    **** 
2624:src/keys.c    ****    if (shift == SHIFT_N) {
2625:src/keys.c    ****      switch (c) {
2626:src/keys.c    **** #ifdef DM42
2627:src/keys.c    ****      case K05:			// XEQ accepts command
2628:src/keys.c    **** #else	  
2629:src/keys.c    ****      case K30:			// XEQ accepts command
2630:src/keys.c    **** #endif						  
2631:src/keys.c    ****      case K20:			// Enter accepts command
2632:src/keys.c    ****        if (pos < ctmax && !(is_multi && forbidden_alpha(pos))) {
2633:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
2634:src/keys.c    **** 
2635:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2636:src/keys.c    **** 
2637:src/keys.c    **** 	 if (isRARG(op)) {
2638:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
2639:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
2640:src/keys.c    **** 	     return op;
2641:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
2642:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
2643:src/keys.c    **** 	   else
2644:src/keys.c    **** 	     init_arg(RARG_CMD(op));
2645:src/keys.c    **** 	 }
2646:src/keys.c    **** 	 else {
2647:src/keys.c    **** 	   return check_confirm(op);
2648:src/keys.c    **** 	 }
2649:src/keys.c    ****        } else
2650:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2651:src/keys.c    ****        return STATE_UNFINISHED;
2652:src/keys.c    **** 
2653:src/keys.c    ****      case K24:			// backspace
2654:src/keys.c    ****        if (CmdLineLength > 0 && Keyticks < 30) {
2655:src/keys.c    **** 	 if (--CmdLineLength > 0)
2656:src/keys.c    **** 	   goto search;
2657:src/keys.c    **** 	 pos = 0;
2658:src/keys.c    **** 	 goto set_pos;
2659:src/keys.c    ****        } else
2660:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
ARM GAS  /tmp/cc6xzGMw.s 			page 52


2661:src/keys.c    ****        return STATE_UNFINISHED;
2662:src/keys.c    **** 
2663:src/keys.c    ****      case K60:
2664:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2665:src/keys.c    ****        return STATE_UNFINISHED;
2666:src/keys.c    **** 
2667:src/keys.c    ****      case K_UP:
2668:src/keys.c    ****        CmdLineLength = 0;
2669:src/keys.c    ****        if (pos == 0)
2670:src/keys.c    **** 	 goto set_max;
2671:src/keys.c    ****        else
2672:src/keys.c    **** 	 --pos;
2673:src/keys.c    ****        goto set_pos;
2674:src/keys.c    **** 
2675:src/keys.c    ****      case K_DOWN:
2676:src/keys.c    ****        CmdLineLength = 0;
2677:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
2678:src/keys.c    ****        if (pos >= ctmax)
2679:src/keys.c    **** 	 pos = 0;
2680:src/keys.c    ****        goto set_pos;
2681:src/keys.c    **** 
2682:src/keys.c    ****      default:
2683:src/keys.c    ****        break;
2684:src/keys.c    ****      }
2685:src/keys.c    ****    } else if (shift == SHIFT_F) {
2686:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
2687:src/keys.c    ****        /*
2688:src/keys.c    **** 	* f 1/x in conversion catalogue
2689:src/keys.c    **** 	*/
2690:src/keys.c    ****        /* A small table of commands in pairs containing inverse commands.
2691:src/keys.c    **** 	* This table could be unsigned characters only storing the monadic kind.
2692:src/keys.c    **** 	* this saves twelve bytes in the table at a cost of some bytes in the code below.
2693:src/keys.c    **** 	* Not worth it since the maximum saving will be less than twelve bytes.
2694:src/keys.c    **** 	*/
2695:src/keys.c    ****        static const unsigned short int conv_mapping[] = {
2696:src/keys.c    **** 	 OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
2697:src/keys.c    **** 	 OP_MON | OP_DB_PR,	OP_MON | OP_PR_DB,
2698:src/keys.c    **** 	 OP_MON | OP_DEGC_F,	OP_MON | OP_DEGF_C,
2699:src/keys.c    **** 	 OP_MON | OP_DEG2RAD,	OP_MON | OP_RAD2DEG,
2700:src/keys.c    **** 	 OP_MON | OP_DEG2GRD,	OP_MON | OP_GRD2DEG,
2701:src/keys.c    **** 	 OP_MON | OP_RAD2GRD,	OP_MON | OP_GRD2RAD,
2702:src/keys.c    ****        };
2703:src/keys.c    ****        const opcode op = current_catalogue(pos);
2704:src/keys.c    ****        int i;
2705:src/keys.c    **** 
2706:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2707:src/keys.c    ****        if (isRARG(op))
2708:src/keys.c    **** 	 return op ^ 1;
2709:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
2710:src/keys.c    **** 	 if (op == conv_mapping[i])
2711:src/keys.c    **** 	   return conv_mapping[i^1];
2712:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
2713:src/keys.c    ****      }
2714:src/keys.c    ****      else if (c == K60 && (State2.alphas || State2.multi)) {
2715:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
2716:src/keys.c    ****        State2.alphashift = 1 - State2.alphashift;
2717:src/keys.c    ****        return STATE_UNFINISHED;
ARM GAS  /tmp/cc6xzGMw.s 			page 53


2718:src/keys.c    ****      }
2719:src/keys.c    ****    } else if (shift == SHIFT_G) {
2720:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
2721:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2722:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
2723:src/keys.c    ****      }
2724:src/keys.c    ****    }
2725:src/keys.c    **** 
2726:src/keys.c    ****    /* We've got a key press, map it to a character and try to
2727:src/keys.c    ****     * jump to the appropriate catalogue entry.
2728:src/keys.c    ****     */
2729:src/keys.c    ****    ch = remap_chars(keycode_to_alpha(c, shift == SHIFT_G ? SHIFT_LC_G : shift));
2730:src/keys.c    ****    reset_shift();
2731:src/keys.c    ****    if (ch == '\0')
2732:src/keys.c    ****      return STATE_UNFINISHED;
2733:src/keys.c    ****    if (cat > CATALOGUE_ALPHA && cat < CATALOGUE_CONST) {
2734:src/keys.c    ****      // No multi character search in alpha catalogues
2735:src/keys.c    ****      CmdLineLength = 0;
2736:src/keys.c    ****    }
2737:src/keys.c    ****    if (CmdLineLength < 10)
2738:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
2739:src/keys.c    ****    /* Search for the current buffer in the catalogue */
2740:src/keys.c    **** 
2741:src/keys.c    ****  search:
2742:src/keys.c    ****    Cmdline[CmdLineLength] = '\0';
2743:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
2744:src/keys.c    ****      char buf[16];
2745:src/keys.c    ****      const char *cmd = catcmd(current_catalogue(pos), buf);
2746:src/keys.c    ****      int i;
2747:src/keys.c    **** 
2748:src/keys.c    ****      if (*cmd == COMPLEX_PREFIX)
2749:src/keys.c    ****        cmd++;
2750:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
2751:src/keys.c    ****        const int c = remap_chars(cmd[i]);
2752:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
2753:src/keys.c    ****        if (c > cl)
2754:src/keys.c    **** 	 goto set_pos;
2755:src/keys.c    ****        else if (c < cl)
2756:src/keys.c    **** 	 break;
2757:src/keys.c    ****      }
2758:src/keys.c    ****      if (Cmdline[i] == '\0')
2759:src/keys.c    ****        goto set_pos;
2760:src/keys.c    ****    }
2761:src/keys.c    ****  set_max:
2762:src/keys.c    ****    pos = ctmax - 1;
2763:src/keys.c    ****  set_pos:
2764:src/keys.c    ****    while (is_multi && pos && forbidden_alpha(pos))
2765:src/keys.c    ****      --pos;
2766:src/keys.c    ****    State.catpos = pos;
2767:src/keys.c    ****    return STATE_UNFINISHED;
2768:src/keys.c    ****  }
2769:src/keys.c    **** 
2770:src/keys.c    **** #ifndef REALBUILD
2771:src/keys.c    **** int find_pos(const char* text) {
2772:src/keys.c    **** 	int pos;
2773:src/keys.c    **** 	const int ctmax = current_catalogue_max();
2774:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
ARM GAS  /tmp/cc6xzGMw.s 			page 54


2775:src/keys.c    **** 		char buf[16];
2776:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
2777:src/keys.c    **** 		int i;
2778:src/keys.c    **** 
2779:src/keys.c    **** 		if (*cmd == COMPLEX_PREFIX)
2780:src/keys.c    **** 			cmd++;
2781:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
2782:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
2783:src/keys.c    **** 			const int cl = remap_chars(text[i]);
2784:src/keys.c    **** 			if (c > cl)
2785:src/keys.c    **** 				return pos;
2786:src/keys.c    **** 			else if (c < cl)
2787:src/keys.c    **** 				break;
2788:src/keys.c    **** 		}
2789:src/keys.c    **** 		if (text[i] == '\0')
2790:src/keys.c    **** 			return pos;
2791:src/keys.c    **** 	}
2792:src/keys.c    **** 	return pos;
2793:src/keys.c    **** }
2794:src/keys.c    **** 
2795:src/keys.c    **** #endif
2796:src/keys.c    **** 
2797:src/keys.c    **** /* Multi (2) word instruction entry
2798:src/keys.c    ****  */
2799:src/keys.c    **** static void reset_multi(void) {
2800:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
2801:src/keys.c    **** 	State2.multi = 0;
2802:src/keys.c    **** 	if (! State2.alphas )
2803:src/keys.c    **** 		State2.alphashift = 0;
2804:src/keys.c    **** }
2805:src/keys.c    **** 
2806:src/keys.c    **** static int process_multi(const keycode c) {
2807:src/keys.c    **** 	enum shifts shift = reset_shift();
2808:src/keys.c    **** 	unsigned int ch = 0;
2809:src/keys.c    **** 	unsigned int opcode;
2810:src/keys.c    **** 
2811:src/keys.c    **** 	if (State2.catalogue) {
2812:src/keys.c    **** 		// Alpha catalogue from within multi character command
2813:src/keys.c    **** 		opcode = process_catalogue((const keycode)c, shift, State2.numdigit == 2);
2814:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
2815:src/keys.c    **** 			return opcode;
2816:src/keys.c    **** 		ch = (unsigned char) opcode;
2817:src/keys.c    **** 		goto add_char;
2818:src/keys.c    **** 	}
2819:src/keys.c    **** 
2820:src/keys.c    **** 	switch (c) {
2821:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
2822:src/keys.c    **** 		if (shift != SHIFT_N)
2823:src/keys.c    **** 				break;
2824:src/keys.c    **** 		reset_multi();
2825:src/keys.c    **** 		if (State2.numdigit == 0)
2826:src/keys.c    **** 			return STATE_UNFINISHED;
2827:src/keys.c    **** 		else if (State2.numdigit == 1)
2828:src/keys.c    **** 			State2.digval2 = 0;
2829:src/keys.c    **** 		goto fin;
2830:src/keys.c    **** 
2831:src/keys.c    **** 	case K24:	// Clx - backspace, clear alpha
ARM GAS  /tmp/cc6xzGMw.s 			page 55


2832:src/keys.c    **** 		if (shift != SHIFT_H) {
2833:src/keys.c    **** 			if (State2.numdigit == 0)
2834:src/keys.c    **** 				reset_multi();
2835:src/keys.c    **** 			else
2836:src/keys.c    **** 				State2.numdigit--;
2837:src/keys.c    **** 			return STATE_UNFINISHED;
2838:src/keys.c    **** 		}
2839:src/keys.c    **** 		break;
2840:src/keys.c    **** 
2841:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
2842:src/keys.c    **** 		if (shift == SHIFT_F)
2843:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
2844:src/keys.c    **** 		else
2845:src/keys.c    **** 			reset_multi();
2846:src/keys.c    **** 		return STATE_UNFINISHED;
2847:src/keys.c    **** 
2848:src/keys.c    **** 	default:
2849:src/keys.c    **** 		break;
2850:src/keys.c    **** 		}
2851:src/keys.c    **** 
2852:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
2853:src/keys.c    **** 	ch = keycode_to_alpha(c, shift);
2854:src/keys.c    **** 	if (ch == 0)
2855:src/keys.c    **** 		return STATE_UNFINISHED;
2856:src/keys.c    **** add_char:
2857:src/keys.c    **** 	if (State2.numdigit == 0) {
2858:src/keys.c    **** 		State2.digval = ch;
2859:src/keys.c    **** 		State2.numdigit = 1;
2860:src/keys.c    **** 		return STATE_UNFINISHED;
2861:src/keys.c    **** 	} else if (State2.numdigit == 1) {
2862:src/keys.c    **** 		State2.digval2 = ch;
2863:src/keys.c    **** 		State2.numdigit = 2;
2864:src/keys.c    **** 		return STATE_UNFINISHED;
2865:src/keys.c    **** 	}
2866:src/keys.c    **** 	reset_multi();
2867:src/keys.c    **** 
2868:src/keys.c    **** fin:
2869:src/keys.c    **** 	opcode = OP_DBL + (CmdBase << DBL_SHIFT) 
2870:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
2871:src/keys.c    **** 	return opcode;
2872:src/keys.c    **** }
2873:src/keys.c    **** 
2874:src/keys.c    **** 
2875:src/keys.c    **** /* Handle YES/NO confirmations
2876:src/keys.c    ****  */
2877:src/keys.c    **** static int process_confirm(const keycode c) {
2878:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
2879:src/keys.c    **** 	switch (c) {
2880:src/keys.c    **** #ifdef DM42
2881:src/keys.c    **** 	case K52:
2882:src/keys.c    **** #endif
2883:src/keys.c    **** 	case K63:			// Yes
2884:src/keys.c    **** 	  switch (State2.confirm) {
2885:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
2886:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
2887:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
2888:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
ARM GAS  /tmp/cc6xzGMw.s 			page 56


2889:src/keys.c    **** 	  }
2890:src/keys.c    **** 	case K24:
2891:src/keys.c    **** #ifdef DM42
2892:src/keys.c    **** 	case K22:
2893:src/keys.c    **** #else
2894:src/keys.c    **** 	case K32:
2895:src/keys.c    **** #endif
2896:src/keys.c    **** 	  // No
2897:src/keys.c    **** 	  State2.confirm = 0;
2898:src/keys.c    **** 	  State2.digval = 0;
2899:src/keys.c    **** 	  break;
2900:src/keys.c    **** 	default:			// No state change
2901:src/keys.c    **** 	  break;
2902:src/keys.c    **** 	}
2903:src/keys.c    **** 	return STATE_UNFINISHED;
2904:src/keys.c    **** }
2905:src/keys.c    **** 
2906:src/keys.c    **** 
2907:src/keys.c    **** /*
2908:src/keys.c    ****  *  STATUS
2909:src/keys.c    ****  */
2910:src/keys.c    **** static int process_status(const keycode c) {
2911:src/keys.c    **** 	int n = ((int)State2.status) - 3;
2912:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
2913:src/keys.c    **** 
2914:src/keys.c    **** 	if (c == K_UP) {
2915:src/keys.c    **** 		if (--n < -2)
2916:src/keys.c    **** 			n = max;
2917:src/keys.c    **** 	}
2918:src/keys.c    **** 	else if (c == K_DOWN) {
2919:src/keys.c    **** 		if (++n > max)
2920:src/keys.c    **** 			n = -2;
2921:src/keys.c    **** 	}
2922:src/keys.c    **** 	else if (c == K24 /* || c == K60 */) {
2923:src/keys.c    **** 		State2.status = 0;
2924:src/keys.c    **** 		return STATE_UNFINISHED;
2925:src/keys.c    **** 	} 
2926:src/keys.c    **** 	else {
2927:src/keys.c    **** 		int nn = keycode_to_digit_or_register(c) & 0x7f;
2928:src/keys.c    **** 		if (nn <= 9)
2929:src/keys.c    **** 			n = nn;
2930:src/keys.c    **** 		else if (nn == LOCAL_REG_BASE)
2931:src/keys.c    **** 			n = n == max ? 10 : max;
2932:src/keys.c    **** 		else if (nn != NO_REG)
2933:src/keys.c    **** 			n = 10; 
2934:src/keys.c    **** 	}
2935:src/keys.c    **** 	State2.status = n + 3;
2936:src/keys.c    **** 
2937:src/keys.c    **** 	return STATE_UNFINISHED;
2938:src/keys.c    **** }
2939:src/keys.c    **** 
2940:src/keys.c    **** 
2941:src/keys.c    **** /*
2942:src/keys.c    ****  *  CAT helper
2943:src/keys.c    ****  */
2944:src/keys.c    **** static int is_label_or_end_at(unsigned int pc, int search_end) {
 218              		.loc 1 2944 64 is_stmt 1 view -0
ARM GAS  /tmp/cc6xzGMw.s 			page 57


 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
2945:src/keys.c    **** 	const unsigned int op = getprog(pc);
 222              		.loc 1 2945 2 view .LVU58
2944:src/keys.c    **** 	const unsigned int op = getprog(pc);
 223              		.loc 1 2944 64 is_stmt 0 view .LVU59
 224 0000 10B5     		push	{r4, lr}
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 4, -8
 227              		.cfi_offset 14, -4
2944:src/keys.c    **** 	const unsigned int op = getprog(pc);
 228              		.loc 1 2944 64 view .LVU60
 229 0002 0C46     		mov	r4, r1
 230              		.loc 1 2945 26 view .LVU61
 231 0004 FFF7FEFF 		bl	getprog
 232              	.LVL20:
2946:src/keys.c    **** 
2947:src/keys.c    **** 	return op == (OP_NIL | OP_END) || (!search_end && (isDBL(op) && opDBL(op) == DBL_LBL));
 233              		.loc 1 2947 2 is_stmt 1 view .LVU62
 234              		.loc 1 2947 33 is_stmt 0 view .LVU63
 235 0008 B0F59D7F 		cmp	r0, #314
 236 000c 06D0     		beq	.L21
 237              		.loc 1 2947 53 discriminator 3 view .LVU64
 238 000e 00F47043 		and	r3, r0, #61440
 239              		.loc 1 2947 49 discriminator 3 view .LVU65
 240 0012 B3F5704F 		cmp	r3, #61440
 241 0016 03D0     		beq	.L24
 242              		.loc 1 2947 33 view .LVU66
 243 0018 0020     		movs	r0, #0
 244              	.LVL21:
2948:src/keys.c    **** }
 245              		.loc 1 2948 1 view .LVU67
 246 001a 10BD     		pop	{r4, pc}
 247              	.LVL22:
 248              	.L21:
2947:src/keys.c    **** }
 249              		.loc 1 2947 33 view .LVU68
 250 001c 0120     		movs	r0, #1
 251              	.LVL23:
 252              		.loc 1 2948 1 view .LVU69
 253 001e 10BD     		pop	{r4, pc}
 254              	.LVL24:
 255              	.L24:
2947:src/keys.c    **** }
 256              		.loc 1 2947 66 discriminator 5 view .LVU70
 257 0020 C0F30320 		ubfx	r0, r0, #8, #4
 258              	.LVL25:
2947:src/keys.c    **** }
 259              		.loc 1 2947 63 discriminator 5 view .LVU71
 260 0024 50EA0403 		orrs	r3, r0, r4
 261 0028 0CBF     		ite	eq
 262 002a 0120     		moveq	r0, #1
 263 002c 0020     		movne	r0, #0
 264              		.loc 1 2948 1 discriminator 5 view .LVU72
 265 002e 10BD     		pop	{r4, pc}
 266              		.loc 1 2948 1 discriminator 5 view .LVU73
ARM GAS  /tmp/cc6xzGMw.s 			page 58


 267              		.cfi_endproc
 268              	.LFE54:
 270              		.section	.text.advance_to_next_label,"ax",%progbits
 271              		.align	1
 272              		.p2align 2,,3
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv4-sp-d16
 278              	advance_to_next_label:
 279              	.LVL26:
 280              	.LFB55:
2949:src/keys.c    **** 
2950:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end) {
 281              		.loc 1 2950 85 is_stmt 1 view -0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		.loc 1 2950 85 is_stmt 0 view .LVU75
 286 0000 70B5     		push	{r4, r5, r6, lr}
 287              		.cfi_def_cfa_offset 16
 288              		.cfi_offset 4, -16
 289              		.cfi_offset 5, -12
 290              		.cfi_offset 6, -8
 291              		.cfi_offset 14, -4
 292              		.loc 1 2950 85 view .LVU76
 293 0002 0446     		mov	r4, r0
2951:src/keys.c    **** 	do {
 294              		.loc 1 2951 2 is_stmt 1 view .LVU77
2952:src/keys.c    **** 		for (;;) {
 295              		.loc 1 2952 3 view .LVU78
2953:src/keys.c    **** 			if (inc) {
 296              		.loc 1 2953 4 view .LVU79
2950:src/keys.c    **** 	do {
 297              		.loc 1 2950 85 is_stmt 0 view .LVU80
 298 0004 1646     		mov	r6, r2
 299              		.loc 1 2953 7 view .LVU81
 300 0006 21B9     		cbnz	r1, .L29
 301              	.LVL27:
 302              	.L26:
2954:src/keys.c    **** 				pc = do_inc(pc, 0);
2955:src/keys.c    **** 				if (PcWrapped)
2956:src/keys.c    **** 					break;
2957:src/keys.c    **** 			}
2958:src/keys.c    **** 			else
2959:src/keys.c    **** 				inc = 1;
2960:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 303              		.loc 1 2960 4 is_stmt 1 view .LVU82
 304              		.loc 1 2960 8 is_stmt 0 view .LVU83
 305 0008 3146     		mov	r1, r6
 306 000a 2046     		mov	r0, r4
 307              		.loc 1 2960 8 view .LVU84
 308 000c FFF7FEFF 		bl	is_label_or_end_at
 309              	.LVL28:
 310              		.loc 1 2960 7 view .LVU85
 311 0010 B8B9     		cbnz	r0, .L28
 312              	.LVL29:
ARM GAS  /tmp/cc6xzGMw.s 			page 59


 313              	.L29:
 314              		.loc 1 2960 7 view .LVU86
 315 0012 0D4D     		ldr	r5, .L37
 316              	.L30:
2954:src/keys.c    **** 				pc = do_inc(pc, 0);
 317              		.loc 1 2954 5 is_stmt 1 view .LVU87
2954:src/keys.c    **** 				pc = do_inc(pc, 0);
 318              		.loc 1 2954 10 is_stmt 0 view .LVU88
 319 0014 2046     		mov	r0, r4
 320 0016 0021     		movs	r1, #0
 321 0018 FFF7FEFF 		bl	do_inc
 322              	.LVL30:
2955:src/keys.c    **** 					break;
 323              		.loc 1 2955 8 view .LVU89
 324 001c 2B68     		ldr	r3, [r5]
2954:src/keys.c    **** 				pc = do_inc(pc, 0);
 325              		.loc 1 2954 10 view .LVU90
 326 001e 0446     		mov	r4, r0
 327              	.LVL31:
2955:src/keys.c    **** 					break;
 328              		.loc 1 2955 5 is_stmt 1 view .LVU91
2955:src/keys.c    **** 					break;
 329              		.loc 1 2955 8 is_stmt 0 view .LVU92
 330 0020 002B     		cmp	r3, #0
 331 0022 F1D0     		beq	.L26
2961:src/keys.c    **** 				return pc;
2962:src/keys.c    **** 			}
2963:src/keys.c    **** 		}
2964:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) + 1) & 3);
 332              		.loc 1 2964 3 is_stmt 1 view .LVU93
 333              		.loc 1 2964 8 is_stmt 0 view .LVU94
 334 0024 20F47F54 		bic	r4, r0, #16320
 335 0028 24F03F04 		bic	r4, r4, #63
 336 002c 04F58044 		add	r4, r4, #16384
 337 0030 A4B2     		uxth	r4, r4
 338              		.loc 1 2964 6 view .LVU95
 339 0032 44F00104 		orr	r4, r4, #1
 340              	.LVL32:
2965:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 341              		.loc 1 2965 10 is_stmt 1 view .LVU96
 342              		.loc 1 2965 13 is_stmt 0 view .LVU97
 343 0036 2046     		mov	r0, r4
 344 0038 3146     		mov	r1, r6
 345 003a FFF7FEFF 		bl	is_label_or_end_at
 346              	.LVL33:
 347              		.loc 1 2965 2 view .LVU98
 348 003e 0028     		cmp	r0, #0
 349 0040 E8D0     		beq	.L30
 350              	.L28:
2966:src/keys.c    **** 	return pc;
2967:src/keys.c    **** }
 351              		.loc 1 2967 1 view .LVU99
 352 0042 2046     		mov	r0, r4
 353 0044 70BD     		pop	{r4, r5, r6, pc}
 354              	.LVL34:
 355              	.L38:
 356              		.loc 1 2967 1 view .LVU100
ARM GAS  /tmp/cc6xzGMw.s 			page 60


 357 0046 00BF     		.align	2
 358              	.L37:
 359 0048 00000000 		.word	PcWrapped
 360              		.cfi_endproc
 361              	.LFE55:
 363              		.section	.text.init_cat,"ax",%progbits
 364              		.align	1
 365              		.p2align 2,,3
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu fpv4-sp-d16
 371              	init_cat:
 372              	.LVL35:
 373              	.LFB12:
 565:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 374              		.loc 1 565 43 is_stmt 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 378              		.loc 1 566 2 view .LVU102
 565:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 379              		.loc 1 565 43 is_stmt 0 view .LVU103
 380 0000 38B5     		push	{r3, r4, r5, lr}
 381              		.cfi_def_cfa_offset 16
 382              		.cfi_offset 3, -16
 383              		.cfi_offset 4, -12
 384              		.cfi_offset 5, -8
 385              		.cfi_offset 14, -4
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 386              		.loc 1 566 37 view .LVU104
 387 0002 384C     		ldr	r4, .L58
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 388              		.loc 1 566 5 view .LVU105
 389 0004 0546     		mov	r5, r0
 390 0006 D0B9     		cbnz	r0, .L40
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 391              		.loc 1 566 37 discriminator 1 view .LVU106
 392 0008 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 393              		.loc 1 566 28 discriminator 1 view .LVU107
 394 000a 43B1     		cbz	r3, .L41
 568:src/keys.c    **** 		CmdLineLength = 0;
 395              		.loc 1 568 3 is_stmt 1 view .LVU108
 568:src/keys.c    **** 		CmdLineLength = 0;
 396              		.loc 1 568 18 is_stmt 0 view .LVU109
 397 000c 364A     		ldr	r2, .L58+4
 569:src/keys.c    **** 	}
 398              		.loc 1 569 17 view .LVU110
 399 000e 2077     		strb	r0, [r4, #28]
 568:src/keys.c    **** 		CmdLineLength = 0;
 400              		.loc 1 568 18 view .LVU111
 401 0010 1268     		ldr	r2, [r2]
 402 0012 92F8DC17 		ldrb	r1, [r2, #2012]	@ zero_extendqisi2
 403 0016 63F30401 		bfi	r1, r3, #0, #5
 404 001a 82F8DC17 		strb	r1, [r2, #2012]
ARM GAS  /tmp/cc6xzGMw.s 			page 61


 569:src/keys.c    **** 	}
 405              		.loc 1 569 3 is_stmt 1 view .LVU112
 406              	.L41:
 571:src/keys.c    **** 
 407              		.loc 1 571 2 view .LVU113
 408 001e FFF7FEFF 		bl	process_cmdline
 409              	.LVL36:
 573:src/keys.c    **** 	State2.registerlist = 0;
 410              		.loc 1 573 2 view .LVU114
 574:src/keys.c    **** 	State2.status = 0;
 411              		.loc 1 574 2 view .LVU115
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 412              		.loc 1 575 2 view .LVU116
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 413              		.loc 1 600 16 is_stmt 0 view .LVU117
 414 0022 6369     		ldr	r3, [r4, #20]
 415 0024 23F04063 		bic	r3, r3, #201326592
 416 0028 23F40073 		bic	r3, r3, #512
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 417              		.loc 1 575 16 view .LVU118
 418 002c 0022     		movs	r2, #0
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 419              		.loc 1 600 16 view .LVU119
 420 002e 6361     		str	r3, [r4, #20]
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 421              		.loc 1 575 16 view .LVU120
 422 0030 2273     		strb	r2, [r4, #12]
 576:src/keys.c    **** 
 423              		.loc 1 576 2 is_stmt 1 view .LVU121
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 424              		.loc 1 578 2 view .LVU122
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 425              		.loc 1 599 3 view .LVU123
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 426              		.loc 1 599 20 is_stmt 0 view .LVU124
 427 0032 A273     		strb	r2, [r4, #14]
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 428              		.loc 1 600 3 is_stmt 1 view .LVU125
 601:src/keys.c    **** 			// Different catalogue, reset position
 429              		.loc 1 601 3 view .LVU126
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 430              		.loc 1 606 2 view .LVU127
 431              	.LBB301:
 432              	.LBI301:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 433              		.loc 1 114 13 view .LVU128
 434              	.LBE301:
 115:src/keys.c    **** }
 435              		.loc 1 115 2 view .LVU129
 436              	.LVL37:
 437              	.LBB318:
 438              	.LBB302:
 439              	.LBI302:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 440              		.loc 1 104 20 view .LVU130
 441              	.LBB303:
 105:src/keys.c    **** 	State2.shifts = shift;
ARM GAS  /tmp/cc6xzGMw.s 			page 62


 442              		.loc 1 105 2 view .LVU131
 443              	.LBB304:
 444              	.LBI304:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 445              		.loc 1 96 13 view .LVU132
 446              	.LBB305:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 447              		.loc 1 97 2 view .LVU133
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 448              		.loc 1 97 18 is_stmt 0 view .LVU134
 449 0034 FFF7FEFF 		bl	shift_down
 450              	.LVL38:
  98:src/keys.c    **** }
 451              		.loc 1 98 2 is_stmt 1 view .LVU135
 452              	.LBE305:
 453              	.LBE304:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 454              		.loc 1 106 2 view .LVU136
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 455              		.loc 1 106 16 is_stmt 0 view .LVU137
 456 0038 0023     		movs	r3, #0
 457 003a 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 458              		.loc 1 108 2 is_stmt 1 view .LVU138
 459              	.LVL39:
 108:src/keys.c    **** }
 460              		.loc 1 108 2 is_stmt 0 view .LVU139
 461              	.LBE303:
 462              	.LBE302:
 463              	.LBE318:
 610:src/keys.c    **** 
 464              		.loc 1 610 1 view .LVU140
 465 003c 38BD     		pop	{r3, r4, r5, pc}
 466              	.LVL40:
 467              	.L40:
 571:src/keys.c    **** 
 468              		.loc 1 571 2 is_stmt 1 view .LVU141
 469 003e FFF7FEFF 		bl	process_cmdline
 470              	.LVL41:
 573:src/keys.c    **** 	State2.registerlist = 0;
 471              		.loc 1 573 2 view .LVU142
 574:src/keys.c    **** 	State2.status = 0;
 472              		.loc 1 574 2 view .LVU143
 573:src/keys.c    **** 	State2.registerlist = 0;
 473              		.loc 1 573 19 is_stmt 0 view .LVU144
 474 0042 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 475              		.loc 1 575 16 view .LVU145
 476 0044 0022     		movs	r2, #0
 573:src/keys.c    **** 	State2.registerlist = 0;
 477              		.loc 1 573 19 view .LVU146
 478 0046 23F00C03 		bic	r3, r3, #12
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 479              		.loc 1 578 2 view .LVU147
 480 004a 162D     		cmp	r5, #22
 573:src/keys.c    **** 	State2.registerlist = 0;
 481              		.loc 1 573 19 view .LVU148
ARM GAS  /tmp/cc6xzGMw.s 			page 63


 482 004c E375     		strb	r3, [r4, #23]
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 483              		.loc 1 575 2 is_stmt 1 view .LVU149
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 484              		.loc 1 575 16 is_stmt 0 view .LVU150
 485 004e 2273     		strb	r2, [r4, #12]
 576:src/keys.c    **** 
 486              		.loc 1 576 2 is_stmt 1 view .LVU151
 576:src/keys.c    **** 
 487              		.loc 1 576 19 is_stmt 0 view .LVU152
 488 0050 A273     		strb	r2, [r4, #14]
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 489              		.loc 1 578 2 is_stmt 1 view .LVU153
 490 0052 1BD0     		beq	.L42
 491 0054 172D     		cmp	r5, #23
 492 0056 06D1     		bne	.L56
 594:src/keys.c    **** 		break;
 493              		.loc 1 594 3 view .LVU154
 594:src/keys.c    **** 		break;
 494              		.loc 1 594 17 is_stmt 0 view .LVU155
 495 0058 0123     		movs	r3, #1
 496 005a 2373     		strb	r3, [r4, #12]
 595:src/keys.c    **** 
 497              		.loc 1 595 3 is_stmt 1 view .LVU156
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 498              		.loc 1 606 2 view .LVU157
 499              	.LBB319:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 500              		.loc 1 114 13 view .LVU158
 501              	.LBE319:
 115:src/keys.c    **** }
 502              		.loc 1 115 2 view .LVU159
 503              	.LVL42:
 504              	.LBB320:
 505              	.LBB315:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 506              		.loc 1 104 20 view .LVU160
 507              	.LBB312:
 105:src/keys.c    **** 	State2.shifts = shift;
 508              		.loc 1 105 2 view .LVU161
 509              	.LBB309:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 510              		.loc 1 96 13 view .LVU162
 511              	.LBB306:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 512              		.loc 1 97 2 view .LVU163
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 513              		.loc 1 97 18 is_stmt 0 view .LVU164
 514 005c FFF7FEFF 		bl	shift_down
 515              	.LVL43:
  98:src/keys.c    **** }
 516              		.loc 1 98 2 is_stmt 1 view .LVU165
 517              	.LBE306:
 518              	.LBE309:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 519              		.loc 1 106 2 view .LVU166
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
ARM GAS  /tmp/cc6xzGMw.s 			page 64


 520              		.loc 1 106 16 is_stmt 0 view .LVU167
 521 0060 0023     		movs	r3, #0
 522 0062 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 523              		.loc 1 108 2 is_stmt 1 view .LVU168
 524              	.LVL44:
 108:src/keys.c    **** }
 525              		.loc 1 108 2 is_stmt 0 view .LVU169
 526              	.LBE312:
 527              	.LBE315:
 528              	.LBE320:
 610:src/keys.c    **** 
 529              		.loc 1 610 1 view .LVU170
 530 0064 38BD     		pop	{r3, r4, r5, pc}
 531              	.L56:
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 532              		.loc 1 578 2 view .LVU171
 533 0066 152D     		cmp	r5, #21
 534 0068 1CD1     		bne	.L44
 581:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 535              		.loc 1 581 3 is_stmt 1 view .LVU172
 582:src/keys.c    **** 		break;
 536              		.loc 1 582 41 is_stmt 0 view .LVU173
 537 006a 1F49     		ldr	r1, .L58+4
 581:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 538              		.loc 1 581 20 view .LVU174
 539 006c DBB2     		uxtb	r3, r3
 582:src/keys.c    **** 		break;
 540              		.loc 1 582 41 view .LVU175
 541 006e 0968     		ldr	r1, [r1]
 581:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 542              		.loc 1 581 20 view .LVU176
 543 0070 43F00403 		orr	r3, r3, #4
 544 0074 E375     		strb	r3, [r4, #23]
 582:src/keys.c    **** 		break;
 545              		.loc 1 582 3 is_stmt 1 view .LVU177
 582:src/keys.c    **** 		break;
 546              		.loc 1 582 19 is_stmt 0 view .LVU178
 547 0076 B1F8EC07 		ldrh	r0, [r1, #2028]
 548 007a 1146     		mov	r1, r2
 549 007c FFF7FEFF 		bl	advance_to_next_label
 550              	.LVL45:
 582:src/keys.c    **** 		break;
 551              		.loc 1 582 17 view .LVU179
 552 0080 2081     		strh	r0, [r4, #8]	@ movhi
 583:src/keys.c    **** 	
 553              		.loc 1 583 3 is_stmt 1 view .LVU180
 554              	.L45:
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 555              		.loc 1 606 2 view .LVU181
 556              	.LBB321:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 557              		.loc 1 114 13 view .LVU182
 558              	.LBE321:
 115:src/keys.c    **** }
 559              		.loc 1 115 2 view .LVU183
 560              	.LVL46:
ARM GAS  /tmp/cc6xzGMw.s 			page 65


 561              	.LBB322:
 562              	.LBB316:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 563              		.loc 1 104 20 view .LVU184
 564              	.LBB313:
 105:src/keys.c    **** 	State2.shifts = shift;
 565              		.loc 1 105 2 view .LVU185
 566              	.LBB310:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 567              		.loc 1 96 13 view .LVU186
 568              	.LBB307:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 569              		.loc 1 97 2 view .LVU187
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 570              		.loc 1 97 18 is_stmt 0 view .LVU188
 571 0082 FFF7FEFF 		bl	shift_down
 572              	.LVL47:
  98:src/keys.c    **** }
 573              		.loc 1 98 2 is_stmt 1 view .LVU189
 574              	.LBE307:
 575              	.LBE310:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 576              		.loc 1 106 2 view .LVU190
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 577              		.loc 1 106 16 is_stmt 0 view .LVU191
 578 0086 0023     		movs	r3, #0
 579 0088 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 580              		.loc 1 108 2 is_stmt 1 view .LVU192
 581              	.LVL48:
 108:src/keys.c    **** }
 582              		.loc 1 108 2 is_stmt 0 view .LVU193
 583              	.LBE313:
 584              	.LBE316:
 585              	.LBE322:
 610:src/keys.c    **** 
 586              		.loc 1 610 1 view .LVU194
 587 008a 38BD     		pop	{r3, r4, r5, pc}
 588              	.L42:
 587:src/keys.c    **** 		State2.digval = regX_idx;
 589              		.loc 1 587 3 is_stmt 1 view .LVU195
 587:src/keys.c    **** 		State2.digval = regX_idx;
 590              		.loc 1 587 23 is_stmt 0 view .LVU196
 591 008c E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 589:src/keys.c    **** 		break;
 592              		.loc 1 589 18 view .LVU197
 593 008e A272     		strb	r2, [r4, #10]
 587:src/keys.c    **** 		State2.digval = regX_idx;
 594              		.loc 1 587 23 view .LVU198
 595 0090 43F00803 		orr	r3, r3, #8
 588:src/keys.c    **** 		State2.digval2 = 0;
 596              		.loc 1 588 17 view .LVU199
 597 0094 6422     		movs	r2, #100
 587:src/keys.c    **** 		State2.digval = regX_idx;
 598              		.loc 1 587 23 view .LVU200
 599 0096 E375     		strb	r3, [r4, #23]
 588:src/keys.c    **** 		State2.digval2 = 0;
ARM GAS  /tmp/cc6xzGMw.s 			page 66


 600              		.loc 1 588 3 is_stmt 1 view .LVU201
 588:src/keys.c    **** 		State2.digval2 = 0;
 601              		.loc 1 588 17 is_stmt 0 view .LVU202
 602 0098 2281     		strh	r2, [r4, #8]	@ movhi
 589:src/keys.c    **** 		break;
 603              		.loc 1 589 3 is_stmt 1 view .LVU203
 590:src/keys.c    **** 
 604              		.loc 1 590 3 view .LVU204
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 605              		.loc 1 606 2 view .LVU205
 606              	.LBB323:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 607              		.loc 1 114 13 view .LVU206
 608              	.LBE323:
 115:src/keys.c    **** }
 609              		.loc 1 115 2 view .LVU207
 610              	.LVL49:
 611              	.LBB324:
 612              	.LBB317:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 613              		.loc 1 104 20 view .LVU208
 614              	.LBB314:
 105:src/keys.c    **** 	State2.shifts = shift;
 615              		.loc 1 105 2 view .LVU209
 616              	.LBB311:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 617              		.loc 1 96 13 view .LVU210
 618              	.LBB308:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 619              		.loc 1 97 2 view .LVU211
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 620              		.loc 1 97 18 is_stmt 0 view .LVU212
 621 009a FFF7FEFF 		bl	shift_down
 622              	.LVL50:
  98:src/keys.c    **** }
 623              		.loc 1 98 2 is_stmt 1 view .LVU213
 624              	.LBE308:
 625              	.LBE311:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 626              		.loc 1 106 2 view .LVU214
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 627              		.loc 1 106 16 is_stmt 0 view .LVU215
 628 009e 0023     		movs	r3, #0
 629 00a0 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 630              		.loc 1 108 2 is_stmt 1 view .LVU216
 631              	.LVL51:
 108:src/keys.c    **** }
 632              		.loc 1 108 2 is_stmt 0 view .LVU217
 633              	.LBE314:
 634              	.LBE317:
 635              	.LBE324:
 610:src/keys.c    **** 
 636              		.loc 1 610 1 view .LVU218
 637 00a2 38BD     		pop	{r3, r4, r5, pc}
 638              	.L44:
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
ARM GAS  /tmp/cc6xzGMw.s 			page 67


 639              		.loc 1 599 3 is_stmt 1 view .LVU219
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 640              		.loc 1 600 44 is_stmt 0 view .LVU220
 641 00a4 022D     		cmp	r5, #2
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 642              		.loc 1 599 20 view .LVU221
 643 00a6 A573     		strb	r5, [r4, #14]
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 644              		.loc 1 600 3 is_stmt 1 view .LVU222
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 645              		.loc 1 600 44 is_stmt 0 view .LVU223
 646 00a8 12D1     		bne	.L57
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 647              		.loc 1 600 16 view .LVU224
 648 00aa 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 649 00ac 43F00203 		orr	r3, r3, #2
 650 00b0 6375     		strb	r3, [r4, #21]
 601:src/keys.c    **** 			// Different catalogue, reset position
 651              		.loc 1 601 3 is_stmt 1 view .LVU225
 652              	.L49:
 601:src/keys.c    **** 			// Different catalogue, reset position
 653              		.loc 1 601 32 is_stmt 0 discriminator 1 view .LVU226
 654 00b2 0D4B     		ldr	r3, .L58+4
 655 00b4 1A68     		ldr	r2, [r3]
 601:src/keys.c    **** 			// Different catalogue, reset position
 656              		.loc 1 601 37 discriminator 1 view .LVU227
 657 00b6 92F8DC37 		ldrb	r3, [r2, #2012]	@ zero_extendqisi2
 601:src/keys.c    **** 			// Different catalogue, reset position
 658              		.loc 1 601 29 discriminator 1 view .LVU228
 659 00ba 03F01F03 		and	r3, r3, #31
 660 00be AB42     		cmp	r3, r5
 661 00c0 DFD0     		beq	.L45
 603:src/keys.c    **** 		}
 662              		.loc 1 603 4 is_stmt 1 view .LVU229
 603:src/keys.c    **** 		}
 663              		.loc 1 603 17 is_stmt 0 view .LVU230
 664 00c2 B2F8DC37 		ldrh	r3, [r2, #2012]
 665 00c6 6FF34B13 		bfc	r3, #5, #7
 666 00ca A2F8DC37 		strh	r3, [r2, #2012]	@ movhi
 667 00ce D8E7     		b	.L45
 668              	.L57:
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 669              		.loc 1 600 44 view .LVU231
 670 00d0 A5F11101 		sub	r1, r5, #17
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 671              		.loc 1 600 16 view .LVU232
 672 00d4 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 673              		.loc 1 600 44 view .LVU233
 674 00d6 4A42     		rsbs	r2, r1, #0
 675 00d8 4A41     		adcs	r2, r2, r1
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 676              		.loc 1 600 16 view .LVU234
 677 00da 62F34103 		bfi	r3, r2, #1, #1
 678 00de 6375     		strb	r3, [r4, #21]
 601:src/keys.c    **** 			// Different catalogue, reset position
 679              		.loc 1 601 3 is_stmt 1 view .LVU235
ARM GAS  /tmp/cc6xzGMw.s 			page 68


 680 00e0 E7E7     		b	.L49
 681              	.L59:
 682 00e2 00BF     		.align	2
 683              	.L58:
 684 00e4 00000000 		.word	StateWhileOn
 685 00e8 00000000 		.word	main_ram
 686              		.cfi_endproc
 687              	.LFE12:
 689              		.section	.text.advance_to_previous_label,"ax",%progbits
 690              		.align	1
 691              		.p2align 2,,3
 692              		.syntax unified
 693              		.thumb
 694              		.thumb_func
 695              		.fpu fpv4-sp-d16
 697              	advance_to_previous_label:
 698              	.LVL52:
 699              	.LFB56:
2968:src/keys.c    **** 
2969:src/keys.c    **** static unsigned int advance_to_previous_label(unsigned int pc, int search_end) {
 700              		.loc 1 2969 80 view -0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704              		.loc 1 2969 80 is_stmt 0 view .LVU237
 705 0000 70B5     		push	{r4, r5, r6, lr}
 706              		.cfi_def_cfa_offset 16
 707              		.cfi_offset 4, -16
 708              		.cfi_offset 5, -12
 709              		.cfi_offset 6, -8
 710              		.cfi_offset 14, -4
 711 0002 124E     		ldr	r6, .L69
 712              		.loc 1 2969 80 view .LVU238
 713 0004 0446     		mov	r4, r0
 714 0006 0D46     		mov	r5, r1
 715              	.LVL53:
 716              	.L61:
2970:src/keys.c    **** 	do {
 717              		.loc 1 2970 2 is_stmt 1 view .LVU239
2971:src/keys.c    **** 		for (;;) {
 718              		.loc 1 2971 3 view .LVU240
2972:src/keys.c    **** 			pc = do_dec(pc, 0);
 719              		.loc 1 2972 4 view .LVU241
 720              		.loc 1 2972 9 is_stmt 0 view .LVU242
 721 0008 2046     		mov	r0, r4
 722 000a 0021     		movs	r1, #0
 723 000c FFF7FEFF 		bl	do_dec
 724              	.LVL54:
2973:src/keys.c    **** 			if (PcWrapped)
2974:src/keys.c    **** 				break;
2975:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 725              		.loc 1 2975 4 is_stmt 1 view .LVU243
2976:src/keys.c    **** 				return pc;
2977:src/keys.c    **** 			}
2978:src/keys.c    **** 		}
2979:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) - 1) & 3);
 726              		.loc 1 2979 3 view .LVU244
ARM GAS  /tmp/cc6xzGMw.s 			page 69


 727              		.loc 1 2979 8 is_stmt 0 view .LVU245
 728 0010 20F47F53 		bic	r3, r0, #16320
 729 0014 23F03F03 		bic	r3, r3, #63
2973:src/keys.c    **** 			if (PcWrapped)
 730              		.loc 1 2973 7 view .LVU246
 731 0018 3268     		ldr	r2, [r6]
 732              		.loc 1 2979 8 view .LVU247
 733 001a A3F58043 		sub	r3, r3, #16384
2980:src/keys.c    **** 		pc = do_dec(pc, 0);
 734              		.loc 1 2980 8 view .LVU248
 735 001e 0021     		movs	r1, #0
2972:src/keys.c    **** 			if (PcWrapped)
 736              		.loc 1 2972 9 view .LVU249
 737 0020 0446     		mov	r4, r0
 738              	.LVL55:
2973:src/keys.c    **** 				break;
 739              		.loc 1 2973 4 is_stmt 1 view .LVU250
2979:src/keys.c    **** 		pc = do_dec(pc, 0);
 740              		.loc 1 2979 8 is_stmt 0 view .LVU251
 741 0022 9BB2     		uxth	r3, r3
 742              	.LVL56:
 743              		.loc 1 2980 3 is_stmt 1 view .LVU252
2973:src/keys.c    **** 				break;
 744              		.loc 1 2973 7 is_stmt 0 view .LVU253
 745 0024 32B9     		cbnz	r2, .L62
2975:src/keys.c    **** 				return pc;
 746              		.loc 1 2975 8 view .LVU254
 747 0026 2946     		mov	r1, r5
 748 0028 FFF7FEFF 		bl	is_label_or_end_at
 749              	.LVL57:
2975:src/keys.c    **** 				return pc;
 750              		.loc 1 2975 7 view .LVU255
 751 002c 0028     		cmp	r0, #0
 752 002e EBD0     		beq	.L61
2981:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
2982:src/keys.c    **** 	return pc;
2983:src/keys.c    **** }
 753              		.loc 1 2983 1 view .LVU256
 754 0030 2046     		mov	r0, r4
 755 0032 70BD     		pop	{r4, r5, r6, pc}
 756              	.LVL58:
 757              	.L62:
2980:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 758              		.loc 1 2980 8 view .LVU257
 759 0034 43F00100 		orr	r0, r3, #1
 760 0038 FFF7FEFF 		bl	do_dec
 761              	.LVL59:
2981:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 762              		.loc 1 2981 13 view .LVU258
 763 003c 2946     		mov	r1, r5
2980:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 764              		.loc 1 2980 8 view .LVU259
 765 003e 0446     		mov	r4, r0
 766              	.LVL60:
2981:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 767              		.loc 1 2981 10 is_stmt 1 view .LVU260
2981:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
ARM GAS  /tmp/cc6xzGMw.s 			page 70


 768              		.loc 1 2981 13 is_stmt 0 view .LVU261
 769 0040 FFF7FEFF 		bl	is_label_or_end_at
 770              	.LVL61:
2981:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 771              		.loc 1 2981 2 view .LVU262
 772 0044 0028     		cmp	r0, #0
 773 0046 DFD0     		beq	.L61
 774              		.loc 1 2983 1 view .LVU263
 775 0048 2046     		mov	r0, r4
 776 004a 70BD     		pop	{r4, r5, r6, pc}
 777              	.LVL62:
 778              	.L70:
 779              		.loc 1 2983 1 view .LVU264
 780              		.align	2
 781              	.L69:
 782 004c 00000000 		.word	PcWrapped
 783              		.cfi_endproc
 784              	.LFE56:
 786              		.section	.text.check_confirm.part.0,"ax",%progbits
 787              		.align	1
 788              		.p2align 2,,3
 789              		.syntax unified
 790              		.thumb
 791              		.thumb_func
 792              		.fpu fpv4-sp-d16
 794              	check_confirm.part.0:
 795              	.LVL63:
 796              	.LFB64:
 704:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 797              		.loc 1 704 12 is_stmt 1 view -0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801              		@ link register save eliminated.
 802              	.LBB325:
 706:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 803              		.loc 1 706 3 view .LVU266
 707:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 804              		.loc 1 707 3 view .LVU267
 706:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 805              		.loc 1 706 13 is_stmt 0 view .LVU268
 806 0000 C3B2     		uxtb	r3, r0
 707:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 807              		.loc 1 707 25 view .LVU269
 808 0002 A3F14102 		sub	r2, r3, #65
 707:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 809              		.loc 1 707 6 view .LVU270
 810 0006 032A     		cmp	r2, #3
 811 0008 06D9     		bls	.L74
 715:src/keys.c    **** #endif
 812              		.loc 1 715 7 is_stmt 1 view .LVU271
 715:src/keys.c    **** #endif
 813              		.loc 1 715 29 is_stmt 0 view .LVU272
 814 000a AD3B     		subs	r3, r3, #173
 715:src/keys.c    **** #endif
 815              		.loc 1 715 10 view .LVU273
 816 000c 052B     		cmp	r3, #5
ARM GAS  /tmp/cc6xzGMw.s 			page 71


 817 000e 02D8     		bhi	.L73
 725:src/keys.c    **** 		}
 818              		.loc 1 725 4 is_stmt 1 view .LVU274
 725:src/keys.c    **** 		}
 819              		.loc 1 725 20 is_stmt 0 view .LVU275
 820 0010 054B     		ldr	r3, .L75
 821 0012 0122     		movs	r2, #1
 822 0014 1A60     		str	r2, [r3]
 823              	.L73:
 824              	.LBE325:
 729:src/keys.c    **** 
 825              		.loc 1 729 1 view .LVU276
 826 0016 7047     		bx	lr
 827              	.L74:
 828              	.LBB326:
 708:src/keys.c    **** 			return STATE_UNFINISHED;
 829              		.loc 1 708 4 is_stmt 1 view .LVU277
 708:src/keys.c    **** 			return STATE_UNFINISHED;
 830              		.loc 1 708 19 is_stmt 0 view .LVU278
 831 0018 044B     		ldr	r3, .L75+4
 832 001a 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
 708:src/keys.c    **** 			return STATE_UNFINISHED;
 833              		.loc 1 708 35 view .LVU279
 834 001c 4038     		subs	r0, r0, #64
 835              	.LVL64:
 708:src/keys.c    **** 			return STATE_UNFINISHED;
 836              		.loc 1 708 19 view .LVU280
 837 001e 60F30202 		bfi	r2, r0, #0, #3
 838 0022 1A75     		strb	r2, [r3, #20]
 709:src/keys.c    **** 		}
 839              		.loc 1 709 4 is_stmt 1 view .LVU281
 709:src/keys.c    **** 		}
 840              		.loc 1 709 11 is_stmt 0 view .LVU282
 841 0024 3320     		movs	r0, #51
 842              	.LVL65:
 709:src/keys.c    **** 		}
 843              		.loc 1 709 11 view .LVU283
 844 0026 7047     		bx	lr
 845              	.L76:
 846              		.align	2
 847              	.L75:
 848 0028 00000000 		.word	NonProgrammable
 849 002c 00000000 		.word	StateWhileOn
 850              	.LBE326:
 851              		.cfi_endproc
 852              	.LFE64:
 854              		.section	.text.init_arg.part.0,"ax",%progbits
 855              		.align	1
 856              		.p2align 2,,3
 857              		.syntax unified
 858              		.thumb
 859              		.thumb_func
 860              		.fpu fpv4-sp-d16
 862              	init_arg.part.0:
 863              	.LVL66:
 864              	.LFB66:
 552:src/keys.c    **** 	if (is_bad_cmdline())
ARM GAS  /tmp/cc6xzGMw.s 			page 72


 865              		.loc 1 552 13 is_stmt 1 view -0
 866              		.cfi_startproc
 867              		@ args = 0, pretend = 0, frame = 0
 868              		@ frame_needed = 0, uses_anonymous_args = 0
 869              		@ link register save eliminated.
 555:src/keys.c    **** 	State2.ind = 0;
 870              		.loc 1 555 2 view .LVU285
 555:src/keys.c    **** 	State2.ind = 0;
 871              		.loc 1 555 10 is_stmt 0 view .LVU286
 872 0000 084B     		ldr	r3, .L78
 560:src/keys.c    **** 	State2.local = 0;
 873              		.loc 1 560 13 view .LVU287
 874 0002 5969     		ldr	r1, [r3, #20]
 555:src/keys.c    **** 	State2.ind = 0;
 875              		.loc 1 555 10 view .LVU288
 876 0004 D877     		strb	r0, [r3, #31]
 556:src/keys.c    **** 	State2.digval = 0;
 877              		.loc 1 556 2 is_stmt 1 view .LVU289
 557:src/keys.c    **** 	State2.numdigit = 0;
 878              		.loc 1 557 2 view .LVU290
 560:src/keys.c    **** 	State2.local = 0;
 879              		.loc 1 560 13 is_stmt 0 view .LVU291
 880 0006 21F40F11 		bic	r1, r1, #2342912
 881 000a 8628     		cmp	r0, #134
 882 000c 0CBF     		ite	eq
 883 000e 4FF40812 		moveq	r2, #2228224
 884 0012 4FF40012 		movne	r2, #2097152
 885 0016 0A43     		orrs	r2, r2, r1
 557:src/keys.c    **** 	State2.numdigit = 0;
 886              		.loc 1 557 16 view .LVU292
 887 0018 0021     		movs	r1, #0
 560:src/keys.c    **** 	State2.local = 0;
 888              		.loc 1 560 13 view .LVU293
 889 001a 5A61     		str	r2, [r3, #20]
 557:src/keys.c    **** 	State2.numdigit = 0;
 890              		.loc 1 557 16 view .LVU294
 891 001c 1981     		strh	r1, [r3, #8]	@ movhi
 558:src/keys.c    **** 	State2.rarg = 1;
 892              		.loc 1 558 2 is_stmt 1 view .LVU295
 558:src/keys.c    **** 	State2.rarg = 1;
 893              		.loc 1 558 18 is_stmt 0 view .LVU296
 894 001e D972     		strb	r1, [r3, #11]
 559:src/keys.c    **** 	State2.dot = 0;
 895              		.loc 1 559 2 is_stmt 1 view .LVU297
 560:src/keys.c    **** 	State2.local = 0;
 896              		.loc 1 560 2 view .LVU298
 561:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 897              		.loc 1 561 2 view .LVU299
 562:src/keys.c    **** }
 898              		.loc 1 562 2 view .LVU300
 563:src/keys.c    **** 
 899              		.loc 1 563 1 is_stmt 0 view .LVU301
 900 0020 7047     		bx	lr
 901              	.L79:
 902 0022 00BF     		.align	2
 903              	.L78:
 904 0024 00000000 		.word	StateWhileOn
ARM GAS  /tmp/cc6xzGMw.s 			page 73


 905              		.cfi_endproc
 906              	.LFE66:
 908              		.section	.text.reset_arg,"ax",%progbits
 909              		.align	1
 910              		.p2align 2,,3
 911              		.syntax unified
 912              		.thumb
 913              		.thumb_func
 914              		.fpu fpv4-sp-d16
 916              	reset_arg:
 917              	.LFB34:
1895:src/keys.c    **** 	init_arg((enum rarg) 0);
 918              		.loc 1 1895 29 is_stmt 1 view -0
 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 0
 921              		@ frame_needed = 0, uses_anonymous_args = 0
1896:src/keys.c    **** 	State2.rarg = 0;
 922              		.loc 1 1896 2 view .LVU303
 923              	.LVL67:
 924              	.LBB327:
 925              	.LBI327:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 926              		.loc 1 552 13 view .LVU304
 927              	.LBB328:
 553:src/keys.c    **** 		return;
 928              		.loc 1 553 2 view .LVU305
 929              	.LBE328:
 930              	.LBE327:
1895:src/keys.c    **** 	init_arg((enum rarg) 0);
 931              		.loc 1 1895 29 is_stmt 0 view .LVU306
 932 0000 08B5     		push	{r3, lr}
 933              		.cfi_def_cfa_offset 8
 934              		.cfi_offset 3, -8
 935              		.cfi_offset 14, -4
 936              	.LBB330:
 937              	.LBB329:
 553:src/keys.c    **** 		return;
 938              		.loc 1 553 6 view .LVU307
 939 0002 FFF7FEFF 		bl	is_bad_cmdline
 940              	.LVL68:
 553:src/keys.c    **** 		return;
 941              		.loc 1 553 5 view .LVU308
 942 0006 08B9     		cbnz	r0, .L81
 943 0008 FFF7FEFF 		bl	init_arg.part.0
 944              	.LVL69:
 945              	.L81:
 553:src/keys.c    **** 		return;
 946              		.loc 1 553 5 view .LVU309
 947              	.LBE329:
 948              	.LBE330:
1897:src/keys.c    **** }
 949              		.loc 1 1897 2 is_stmt 1 view .LVU310
1897:src/keys.c    **** }
 950              		.loc 1 1897 14 is_stmt 0 view .LVU311
 951 000c 024B     		ldr	r3, .L83
 952 000e 9A7D     		ldrb	r2, [r3, #22]	@ zero_extendqisi2
 953 0010 6FF34512 		bfc	r2, #5, #1
ARM GAS  /tmp/cc6xzGMw.s 			page 74


 954 0014 9A75     		strb	r2, [r3, #22]
1898:src/keys.c    **** 
 955              		.loc 1 1898 1 view .LVU312
 956 0016 08BD     		pop	{r3, pc}
 957              	.L84:
 958              		.align	2
 959              	.L83:
 960 0018 00000000 		.word	StateWhileOn
 961              		.cfi_endproc
 962              	.LFE34:
 964              		.section	.text.arg_eval,"ax",%progbits
 965              		.align	1
 966              		.p2align 2,,3
 967              		.syntax unified
 968              		.thumb
 969              		.thumb_func
 970              		.fpu fpv4-sp-d16
 972              	arg_eval:
 973              	.LVL70:
 974              	.LFB35:
1900:src/keys.c    ****    const unsigned int base = CmdBase;
 975              		.loc 1 1900 40 is_stmt 1 view -0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 0
 978              		@ frame_needed = 0, uses_anonymous_args = 0
1901:src/keys.c    ****    int r = RARG(base, val 
 979              		.loc 1 1901 4 view .LVU314
1900:src/keys.c    ****    const unsigned int base = CmdBase;
 980              		.loc 1 1900 40 is_stmt 0 view .LVU315
 981 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 982              		.cfi_def_cfa_offset 24
 983              		.cfi_offset 3, -24
 984              		.cfi_offset 4, -20
 985              		.cfi_offset 5, -16
 986              		.cfi_offset 6, -12
 987              		.cfi_offset 7, -8
 988              		.cfi_offset 14, -4
1901:src/keys.c    ****    int r = RARG(base, val 
 989              		.loc 1 1901 30 view .LVU316
 990 0002 234B     		ldr	r3, .L109
1902:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 991              		.loc 1 1902 12 view .LVU317
 992 0004 9D7D     		ldrb	r5, [r3, #22]	@ zero_extendqisi2
 993 0006 597D     		ldrb	r1, [r3, #21]	@ zero_extendqisi2
1901:src/keys.c    ****    int r = RARG(base, val 
 994              		.loc 1 1901 23 view .LVU318
 995 0008 DA7F     		ldrb	r2, [r3, #31]	@ zero_extendqisi2
 996              	.LVL71:
1902:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 997              		.loc 1 1902 4 is_stmt 1 view .LVU319
1902:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 998              		.loc 1 1902 12 is_stmt 0 view .LVU320
 999 000a EE07     		lsls	r6, r5, #31
1905:src/keys.c    **** 
 1000              		.loc 1 1905 34 view .LVU321
 1001 000c 214E     		ldr	r6, .L109+4
 1002 000e 3668     		ldr	r6, [r6]
ARM GAS  /tmp/cc6xzGMw.s 			page 75


1902:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1003              		.loc 1 1902 12 view .LVU322
 1004 0010 01F08003 		and	r3, r1, #128
1905:src/keys.c    **** 
 1005              		.loc 1 1905 32 view .LVU323
 1006 0014 96F8EA77 		ldrb	r7, [r6, #2026]	@ zero_extendqisi2
1902:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1007              		.loc 1 1902 12 view .LVU324
 1008 0018 0344     		add	r3, r3, r0
 1009 001a 02F12004 		add	r4, r2, #32
 1010 001e 48BF     		it	mi
 1011 0020 7033     		addmi	r3, r3, #112
 1012 0022 2402     		lsls	r4, r4, #8
1905:src/keys.c    **** 
 1013              		.loc 1 1905 79 view .LVU325
 1014 0024 3F07     		lsls	r7, r7, #28
1902:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1015              		.loc 1 1902 12 view .LVU326
 1016 0026 44EA0304 		orr	r4, r4, r3
 1017              	.LVL72:
1905:src/keys.c    **** 
 1018              		.loc 1 1905 4 is_stmt 1 view .LVU327
1905:src/keys.c    **** 
 1019              		.loc 1 1905 79 is_stmt 0 view .LVU328
 1020 002a 25D5     		bpl	.L92
1905:src/keys.c    **** 
 1021              		.loc 1 1905 79 discriminator 2 view .LVU329
 1022 002c 15F0400F 		tst	r5, #64
 1023 0030 0CBF     		ite	eq
 1024 0032 0425     		moveq	r5, #4
 1025 0034 0825     		movne	r5, #8
 1026              	.L87:
 1027              	.LVL73:
1907:src/keys.c    ****      /*
 1028              		.loc 1 1907 4 is_stmt 1 discriminator 6 view .LVU330
1907:src/keys.c    ****      /*
 1029              		.loc 1 1907 7 is_stmt 0 discriminator 6 view .LVU331
 1030 0036 0B06     		lsls	r3, r1, #24
 1031 0038 1AD4     		bmi	.L88
1923:src/keys.c    ****        if (C_LOCKED) {
 1032              		.loc 1 1923 6 is_stmt 1 view .LVU332
1923:src/keys.c    ****        if (C_LOCKED) {
 1033              		.loc 1 1923 23 is_stmt 0 view .LVU333
 1034 003a 174B     		ldr	r3, .L109+8
 1035 003c 03EB0213 		add	r3, r3, r2, lsl #4
 1036 0040 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
1923:src/keys.c    ****        if (C_LOCKED) {
 1037              		.loc 1 1923 9 view .LVU334
 1038 0042 DF06     		lsls	r7, r3, #27
 1039 0044 10D5     		bpl	.L89
1923:src/keys.c    ****        if (C_LOCKED) {
 1040              		.loc 1 1923 55 discriminator 1 view .LVU335
 1041 0046 96F8AC37 		ldrb	r3, [r6, #1964]	@ zero_extendqisi2
 1042 004a 03F04103 		and	r3, r3, #65
1923:src/keys.c    ****        if (C_LOCKED) {
 1043              		.loc 1 1923 40 discriminator 1 view .LVU336
 1044 004e 412B     		cmp	r3, #65
ARM GAS  /tmp/cc6xzGMw.s 			page 76


 1045 0050 0CBF     		ite	eq
 1046 0052 0021     		moveq	r1, #0
 1047 0054 6221     		movne	r1, #98
1923:src/keys.c    ****        if (C_LOCKED) {
 1048              		.loc 1 1923 30 discriminator 1 view .LVU337
 1049 0056 8142     		cmp	r1, r0
 1050 0058 06D2     		bcs	.L89
1923:src/keys.c    ****        if (C_LOCKED) {
 1051              		.loc 1 1923 86 discriminator 6 view .LVU338
 1052 005a C107     		lsls	r1, r0, #31
 1053 005c 04D5     		bpl	.L89
1924:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
 1054              		.loc 1 1924 8 is_stmt 1 view .LVU339
1924:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
 1055              		.loc 1 1924 11 is_stmt 0 view .LVU340
 1056 005e 412B     		cmp	r3, #65
 1057 0060 11D0     		beq	.L107
 1058              	.LVL74:
 1059              	.L96:
1929:src/keys.c    ****        }
 1060              		.loc 1 1929 10 view .LVU341
 1061 0062 3324     		movs	r4, #51
 1062              	.LVL75:
1944:src/keys.c    **** 
 1063              		.loc 1 1944 2 view .LVU342
 1064 0064 2046     		mov	r0, r4
 1065              	.LVL76:
1944:src/keys.c    **** 
 1066              		.loc 1 1944 2 view .LVU343
 1067 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1068              	.LVL77:
 1069              	.L89:
1937:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1070              		.loc 1 1937 6 is_stmt 1 view .LVU344
1937:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1071              		.loc 1 1937 31 is_stmt 0 view .LVU345
 1072 0068 A2F12203 		sub	r3, r2, #34
1937:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1073              		.loc 1 1937 9 view .LVU346
 1074 006c 012B     		cmp	r3, #1
 1075 006e 05D9     		bls	.L108
 1076              	.LVL78:
 1077              	.L88:
1942:src/keys.c    ****    return r;
 1078              		.loc 1 1942 4 is_stmt 1 view .LVU347
 1079 0070 FFF7FEFF 		bl	reset_arg
 1080              	.LVL79:
1943:src/keys.c    ****  }
 1081              		.loc 1 1943 4 view .LVU348
 1082              	.L85:
1944:src/keys.c    **** 
 1083              		.loc 1 1944 2 is_stmt 0 view .LVU349
 1084 0074 2046     		mov	r0, r4
 1085 0076 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1086              	.LVL80:
 1087              	.L92:
1905:src/keys.c    **** 
ARM GAS  /tmp/cc6xzGMw.s 			page 77


 1088              		.loc 1 1905 79 view .LVU350
 1089 0078 0425     		movs	r5, #4
 1090 007a DCE7     		b	.L87
 1091              	.LVL81:
 1092              	.L108:
1937:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1093              		.loc 1 1937 76 discriminator 1 view .LVU351
 1094 007c C5F16405 		rsb	r5, r5, #100
 1095              	.LVL82:
1937:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1096              		.loc 1 1937 55 discriminator 1 view .LVU352
 1097 0080 8542     		cmp	r5, r0
 1098 0082 F5D2     		bcs	.L88
 1099 0084 EDE7     		b	.L96
 1100              	.LVL83:
 1101              	.L107:
1925:src/keys.c    **** 	 return STATE_UNFINISHED; // either leaves arg blank (if EXIT pressed) or with one digit in (STO)
 1102              		.loc 1 1925 3 is_stmt 1 view .LVU353
 1103 0086 1920     		movs	r0, #25
 1104              	.LVL84:
1925:src/keys.c    **** 	 return STATE_UNFINISHED; // either leaves arg blank (if EXIT pressed) or with one digit in (STO)
 1105              		.loc 1 1925 3 is_stmt 0 view .LVU354
 1106 0088 FFF7FEFF 		bl	error_message
 1107              	.LVL85:
1926:src/keys.c    ****        }
 1108              		.loc 1 1926 3 is_stmt 1 view .LVU355
1926:src/keys.c    ****        }
 1109              		.loc 1 1926 10 is_stmt 0 view .LVU356
 1110 008c 3324     		movs	r4, #51
 1111              	.LVL86:
1926:src/keys.c    ****        }
 1112              		.loc 1 1926 10 view .LVU357
 1113 008e F1E7     		b	.L85
 1114              	.L110:
 1115              		.align	2
 1116              	.L109:
 1117 0090 00000000 		.word	StateWhileOn
 1118 0094 00000000 		.word	main_ram
 1119 0098 00000000 		.word	argcmds
 1120              		.cfi_endproc
 1121              	.LFE35:
 1123              		.section	.text.arg_digit,"ax",%progbits
 1124              		.align	1
 1125              		.p2align 2,,3
 1126              		.syntax unified
 1127              		.thumb
 1128              		.thumb_func
 1129              		.fpu fpv4-sp-d16
 1131              	arg_digit:
 1132              	.LVL87:
 1133              	.LFB36:
1946:src/keys.c    **** 	int lim;
 1134              		.loc 1 1946 29 is_stmt 1 view -0
 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 8
 1137              		@ frame_needed = 0, uses_anonymous_args = 0
1947:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
ARM GAS  /tmp/cc6xzGMw.s 			page 78


 1138              		.loc 1 1947 2 view .LVU359
1949:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1139              		.loc 1 1949 2 view .LVU360
1946:src/keys.c    **** 	int lim;
 1140              		.loc 1 1946 29 is_stmt 0 view .LVU361
 1141 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1142              		.cfi_def_cfa_offset 20
 1143              		.cfi_offset 4, -20
 1144              		.cfi_offset 5, -16
 1145              		.cfi_offset 6, -12
 1146              		.cfi_offset 7, -8
 1147              		.cfi_offset 14, -4
1950:src/keys.c    **** #else
 1148              		.loc 1 1950 29 view .LVU362
 1149 0002 3E4D     		ldr	r5, .L158
1946:src/keys.c    **** 	int lim;
 1150              		.loc 1 1946 29 view .LVU363
 1151 0004 83B0     		sub	sp, sp, #12
 1152              		.cfi_def_cfa_offset 32
1946:src/keys.c    **** 	int lim;
 1153              		.loc 1 1946 29 view .LVU364
 1154 0006 0446     		mov	r4, r0
1949:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1155              		.loc 1 1949 17 view .LVU365
 1156 0008 01A8     		add	r0, sp, #4
 1157              	.LVL88:
1949:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1158              		.loc 1 1949 17 view .LVU366
 1159 000a FFF7FEFF 		bl	get_dispmode_digs
 1160              	.LVL89:
1950:src/keys.c    **** #else
 1161              		.loc 1 1950 29 view .LVU367
 1162 000e A97D     		ldrb	r1, [r5, #22]	@ zero_extendqisi2
 1163              	.LVL90:
1950:src/keys.c    **** #else
 1164              		.loc 1 1950 2 is_stmt 1 view .LVU368
 1165 0010 EE7F     		ldrb	r6, [r5, #31]	@ zero_extendqisi2
1950:src/keys.c    **** #else
 1166              		.loc 1 1950 130 is_stmt 0 view .LVU369
 1167 0012 11F0400C 		ands	ip, r1, #64
 1168 0016 01D0     		beq	.L114
1950:src/keys.c    **** #else
 1169              		.loc 1 1950 44 discriminator 2 view .LVU370
 1170 0018 502E     		cmp	r6, #80
 1171 001a 64D0     		beq	.L154
 1172              	.LVL91:
 1173              	.L114:
1954:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1174              		.loc 1 1954 2 is_stmt 1 discriminator 8 view .LVU371
1955:src/keys.c    **** 	
 1175              		.loc 1 1955 34 is_stmt 0 discriminator 8 view .LVU372
 1176 001c 384A     		ldr	r2, .L158+4
1954:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1177              		.loc 1 1954 33 discriminator 8 view .LVU373
 1178 001e 2B89     		ldrh	r3, [r5, #8]
1955:src/keys.c    **** 	
 1179              		.loc 1 1955 34 discriminator 8 view .LVU374
ARM GAS  /tmp/cc6xzGMw.s 			page 79


 1180 0020 02EB0612 		add	r2, r2, r6, lsl #4
1954:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1181              		.loc 1 1954 41 discriminator 8 view .LVU375
 1182 0024 03EB8303 		add	r3, r3, r3, lsl #2
1955:src/keys.c    **** 	
 1183              		.loc 1 1955 34 discriminator 8 view .LVU376
 1184 0028 5779     		ldrb	r7, [r2, #5]	@ zero_extendqisi2
1954:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1185              		.loc 1 1954 46 discriminator 8 view .LVU377
 1186 002a 04EB4304 		add	r4, r4, r3, lsl #1
 1187              	.LVL92:
1955:src/keys.c    **** 	
 1188              		.loc 1 1955 2 is_stmt 1 discriminator 8 view .LVU378
1955:src/keys.c    **** 	
 1189              		.loc 1 1955 39 is_stmt 0 discriminator 8 view .LVU379
 1190 002e BB07     		lsls	r3, r7, #30
 1191 0030 32D4     		bmi	.L153
1955:src/keys.c    **** 	
 1192              		.loc 1 1955 39 discriminator 2 view .LVU380
 1193 0032 95F91530 		ldrsb	r3, [r5, #21]
 1194 0036 002B     		cmp	r3, #0
 1195 0038 2EDB     		blt	.L153
 1196              	.LVL93:
1957:src/keys.c    **** 		// Handle local registers and flags
 1197              		.loc 1 1957 2 is_stmt 1 view .LVU381
1957:src/keys.c    **** 		// Handle local registers and flags
 1198              		.loc 1 1957 5 is_stmt 0 view .LVU382
 1199 003a C907     		lsls	r1, r1, #31
 1200 003c 4BD5     		bpl	.L120
1959:src/keys.c    **** 		if (State2.runmode) {
 1201              		.loc 1 1959 3 is_stmt 1 view .LVU383
1959:src/keys.c    **** 		if (State2.runmode) {
 1202              		.loc 1 1959 7 is_stmt 0 view .LVU384
 1203 003e 0F23     		movs	r3, #15
 1204 0040 0193     		str	r3, [sp, #4]
1960:src/keys.c    **** 			if (LocalRegs == 0)
 1205              		.loc 1 1960 3 is_stmt 1 view .LVU385
1960:src/keys.c    **** 			if (LocalRegs == 0)
 1206              		.loc 1 1960 6 is_stmt 0 view .LVU386
 1207 0042 BCF1000F 		cmp	ip, #0
 1208 0046 05D0     		beq	.L123
1961:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1209              		.loc 1 1961 4 is_stmt 1 view .LVU387
1961:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1210              		.loc 1 1961 8 is_stmt 0 view .LVU388
 1211 0048 2E4B     		ldr	r3, .L158+8
 1212 004a 1B68     		ldr	r3, [r3]
1961:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1213              		.loc 1 1961 7 view .LVU389
 1214 004c B3F9DE37 		ldrsh	r3, [r3, #2014]
 1215 0050 002B     		cmp	r3, #0
 1216 0052 3DD0     		beq	.L125
 1217              	.LVL94:
 1218              	.L123:
1971:src/keys.c    **** 	else {
 1219              		.loc 1 1971 65 view .LVU390
 1220 0054 0F20     		movs	r0, #15
ARM GAS  /tmp/cc6xzGMw.s 			page 80


 1221              	.L122:
1977:src/keys.c    **** 		return STATE_UNFINISHED;
 1222              		.loc 1 1977 2 is_stmt 1 view .LVU391
1977:src/keys.c    **** 		return STATE_UNFINISHED;
 1223              		.loc 1 1977 5 is_stmt 0 view .LVU392
 1224 0056 8442     		cmp	r4, r0
 1225 0058 3ADC     		bgt	.L125
 1226              	.L157:
1980:src/keys.c    **** 	++State2.numdigit;
 1227              		.loc 1 1980 2 is_stmt 1 view .LVU393
1981:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1228              		.loc 1 1981 2 is_stmt 0 view .LVU394
 1229 005a EF7A     		ldrb	r7, [r5, #11]	@ zero_extendqisi2
1980:src/keys.c    **** 	++State2.numdigit;
 1230              		.loc 1 1980 16 view .LVU395
 1231 005c 2C81     		strh	r4, [r5, #8]	@ movhi
1981:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1232              		.loc 1 1981 2 is_stmt 1 view .LVU396
 1233 005e 0137     		adds	r7, r7, #1
1982:src/keys.c    **** 		int result = arg_eval(val);
 1234              		.loc 1 1982 16 is_stmt 0 view .LVU397
 1235 0060 04EB8403 		add	r3, r4, r4, lsl #2
1981:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1236              		.loc 1 1981 2 view .LVU398
 1237 0064 FFB2     		uxtb	r7, r7
1982:src/keys.c    **** 		int result = arg_eval(val);
 1238              		.loc 1 1982 5 view .LVU399
 1239 0066 B0EB430F 		cmp	r0, r3, lsl #1
1981:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1240              		.loc 1 1981 2 view .LVU400
 1241 006a EF72     		strb	r7, [r5, #11]
1982:src/keys.c    **** 		int result = arg_eval(val);
 1242              		.loc 1 1982 2 is_stmt 1 view .LVU401
1982:src/keys.c    **** 		int result = arg_eval(val);
 1243              		.loc 1 1982 5 is_stmt 0 view .LVU402
 1244 006c 04DB     		blt	.L131
1982:src/keys.c    **** 		int result = arg_eval(val);
 1245              		.loc 1 1982 49 discriminator 1 view .LVU403
 1246 006e 3046     		mov	r0, r6
 1247 0070 FFF7FEFF 		bl	num_arg_digits
 1248              	.LVL95:
1982:src/keys.c    **** 		int result = arg_eval(val);
 1249              		.loc 1 1982 27 discriminator 1 view .LVU404
 1250 0074 8742     		cmp	r7, r0
 1251 0076 2BDB     		blt	.L125
 1252              	.L131:
 1253              	.LBB331:
1983:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1254              		.loc 1 1983 3 is_stmt 1 view .LVU405
1983:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1255              		.loc 1 1983 16 is_stmt 0 view .LVU406
 1256 0078 2046     		mov	r0, r4
 1257 007a FFF7FEFF 		bl	arg_eval
 1258              	.LVL96:
1984:src/keys.c    **** 			--State2.numdigit;
 1259              		.loc 1 1984 3 is_stmt 1 view .LVU407
1984:src/keys.c    **** 			--State2.numdigit;
ARM GAS  /tmp/cc6xzGMw.s 			page 81


 1260              		.loc 1 1984 6 is_stmt 0 view .LVU408
 1261 007e 3328     		cmp	r0, #51
 1262 0080 08D1     		bne	.L111
1985:src/keys.c    **** 			State2.digval /= 10;
 1263              		.loc 1 1985 4 is_stmt 1 view .LVU409
1986:src/keys.c    **** 		}
 1264              		.loc 1 1986 18 is_stmt 0 view .LVU410
 1265 0082 2B89     		ldrh	r3, [r5, #8]
 1266 0084 2049     		ldr	r1, .L158+12
1985:src/keys.c    **** 			State2.digval /= 10;
 1267              		.loc 1 1985 4 view .LVU411
 1268 0086 EA7A     		ldrb	r2, [r5, #11]	@ zero_extendqisi2
1986:src/keys.c    **** 		}
 1269              		.loc 1 1986 18 view .LVU412
 1270 0088 A1FB0313 		umull	r1, r3, r1, r3
 1271 008c DB08     		lsrs	r3, r3, #3
1985:src/keys.c    **** 			State2.digval /= 10;
 1272              		.loc 1 1985 4 view .LVU413
 1273 008e 013A     		subs	r2, r2, #1
1986:src/keys.c    **** 		}
 1274              		.loc 1 1986 18 view .LVU414
 1275 0090 2B81     		strh	r3, [r5, #8]	@ movhi
1985:src/keys.c    **** 			State2.digval /= 10;
 1276              		.loc 1 1985 4 view .LVU415
 1277 0092 EA72     		strb	r2, [r5, #11]
1986:src/keys.c    **** 		}
 1278              		.loc 1 1986 4 is_stmt 1 view .LVU416
 1279              	.L111:
 1280              	.LBE331:
1991:src/keys.c    **** 
 1281              		.loc 1 1991 1 is_stmt 0 view .LVU417
 1282 0094 03B0     		add	sp, sp, #12
 1283              		.cfi_remember_state
 1284              		.cfi_def_cfa_offset 20
 1285              		@ sp needed
 1286 0096 F0BD     		pop	{r4, r5, r6, r7, pc}
 1287              	.LVL97:
 1288              	.L153:
 1289              		.cfi_restore_state
1957:src/keys.c    **** 		// Handle local registers and flags
 1290              		.loc 1 1957 2 is_stmt 1 view .LVU418
1957:src/keys.c    **** 		// Handle local registers and flags
 1291              		.loc 1 1957 5 is_stmt 0 view .LVU419
 1292 0098 C807     		lsls	r0, r1, #31
 1293 009a 12D5     		bpl	.L155
1959:src/keys.c    **** 		if (State2.runmode) {
 1294              		.loc 1 1959 3 is_stmt 1 view .LVU420
1959:src/keys.c    **** 		if (State2.runmode) {
 1295              		.loc 1 1959 7 is_stmt 0 view .LVU421
 1296 009c 0F23     		movs	r3, #15
 1297 009e 0193     		str	r3, [sp, #4]
1960:src/keys.c    **** 			if (LocalRegs == 0)
 1298              		.loc 1 1960 3 is_stmt 1 view .LVU422
1960:src/keys.c    **** 			if (LocalRegs == 0)
 1299              		.loc 1 1960 6 is_stmt 0 view .LVU423
 1300 00a0 BCF1000F 		cmp	ip, #0
 1301 00a4 D6D0     		beq	.L123
ARM GAS  /tmp/cc6xzGMw.s 			page 82


1961:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1302              		.loc 1 1961 4 is_stmt 1 view .LVU424
1961:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1303              		.loc 1 1961 8 is_stmt 0 view .LVU425
 1304 00a6 174B     		ldr	r3, .L158+8
 1305 00a8 1B68     		ldr	r3, [r3]
1961:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1306              		.loc 1 1961 7 view .LVU426
 1307 00aa B3F9DE37 		ldrsh	r3, [r3, #2014]
 1308 00ae 7BB1     		cbz	r3, .L125
1964:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1309              		.loc 1 1964 5 is_stmt 1 view .LVU427
1964:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1310              		.loc 1 1964 11 is_stmt 0 view .LVU428
 1311 00b0 F0B2     		uxtb	r0, r6
 1312 00b2 FFF7FEFF 		bl	local_regs_rarg
 1313              	.LVL98:
1964:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1314              		.loc 1 1964 45 view .LVU429
 1315 00b6 0138     		subs	r0, r0, #1
1965:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1316              		.loc 1 1965 5 is_stmt 1 view .LVU430
1965:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1317              		.loc 1 1965 8 is_stmt 0 view .LVU431
 1318 00b8 0F28     		cmp	r0, #15
 1319 00ba 06DD     		ble	.L152
1966:src/keys.c    **** 			}
 1320              		.loc 1 1966 6 is_stmt 1 view .LVU432
1966:src/keys.c    **** 			}
 1321              		.loc 1 1966 10 is_stmt 0 view .LVU433
 1322 00bc 0F20     		movs	r0, #15
 1323 00be 0190     		str	r0, [sp, #4]
 1324 00c0 C9E7     		b	.L122
 1325              	.L155:
1971:src/keys.c    **** 	else {
 1326              		.loc 1 1971 3 is_stmt 1 view .LVU434
1971:src/keys.c    **** 	else {
 1327              		.loc 1 1971 65 is_stmt 0 view .LVU435
 1328 00c2 BCF1000F 		cmp	ip, #0
 1329 00c6 13D1     		bne	.L156
 1330 00c8 6320     		movs	r0, #99
 1331              	.LVL99:
 1332              	.L152:
1977:src/keys.c    **** 		return STATE_UNFINISHED;
 1333              		.loc 1 1977 5 view .LVU436
 1334 00ca 8442     		cmp	r4, r0
1975:src/keys.c    **** 	}
 1335              		.loc 1 1975 8 view .LVU437
 1336 00cc 0190     		str	r0, [sp, #4]
1977:src/keys.c    **** 		return STATE_UNFINISHED;
 1337              		.loc 1 1977 2 is_stmt 1 view .LVU438
1977:src/keys.c    **** 		return STATE_UNFINISHED;
 1338              		.loc 1 1977 5 is_stmt 0 view .LVU439
 1339 00ce C4DD     		ble	.L157
 1340              	.L125:
1962:src/keys.c    **** 			if (is_reg) {
 1341              		.loc 1 1962 12 view .LVU440
ARM GAS  /tmp/cc6xzGMw.s 			page 83


 1342 00d0 3320     		movs	r0, #51
1991:src/keys.c    **** 
 1343              		.loc 1 1991 1 view .LVU441
 1344 00d2 03B0     		add	sp, sp, #12
 1345              		.cfi_remember_state
 1346              		.cfi_def_cfa_offset 20
 1347              		@ sp needed
 1348 00d4 F0BD     		pop	{r4, r5, r6, r7, pc}
 1349              	.LVL100:
 1350              	.L120:
 1351              		.cfi_restore_state
1970:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
 1352              		.loc 1 1970 7 is_stmt 1 view .LVU442
1973:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1353              		.loc 1 1973 3 view .LVU443
1973:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1354              		.loc 1 1973 9 is_stmt 0 view .LVU444
 1355 00d6 1079     		ldrb	r0, [r2, #4]	@ zero_extendqisi2
1973:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1356              		.loc 1 1973 7 view .LVU445
 1357 00d8 0190     		str	r0, [sp, #4]
1974:src/keys.c    **** 			lim = RARG_IND - 1;
 1358              		.loc 1 1974 3 is_stmt 1 view .LVU446
1974:src/keys.c    **** 			lim = RARG_IND - 1;
 1359              		.loc 1 1974 6 is_stmt 0 view .LVU447
 1360 00da 7F28     		cmp	r0, #127
 1361 00dc BBDD     		ble	.L122
1974:src/keys.c    **** 			lim = RARG_IND - 1;
 1362              		.loc 1 1974 23 discriminator 1 view .LVU448
 1363 00de FB07     		lsls	r3, r7, #31
 1364 00e0 B9D5     		bpl	.L122
1975:src/keys.c    **** 	}
 1365              		.loc 1 1975 4 is_stmt 1 view .LVU449
1975:src/keys.c    **** 	}
 1366              		.loc 1 1975 8 is_stmt 0 view .LVU450
 1367 00e2 7F20     		movs	r0, #127
 1368 00e4 F1E7     		b	.L152
 1369              	.LVL101:
 1370              	.L154:
1950:src/keys.c    **** #else
 1371              		.loc 1 1950 93 discriminator 4 view .LVU451
 1372 00e6 0438     		subs	r0, r0, #4
 1373              	.LVL102:
1950:src/keys.c    **** #else
 1374              		.loc 1 1950 68 discriminator 4 view .LVU452
 1375 00e8 0128     		cmp	r0, #1
1950:src/keys.c    **** #else
 1376              		.loc 1 1950 130 discriminator 4 view .LVU453
 1377 00ea 98BF     		it	ls
 1378 00ec 8D26     		movls	r6, #141
 1379 00ee 95E7     		b	.L114
 1380              	.LVL103:
 1381              	.L156:
1971:src/keys.c    **** 	else {
 1382              		.loc 1 1971 26 discriminator 1 view .LVU454
 1383 00f0 F0B2     		uxtb	r0, r6
 1384 00f2 FFF7FEFF 		bl	global_regs_rarg
ARM GAS  /tmp/cc6xzGMw.s 			page 84


 1385              	.LVL104:
1971:src/keys.c    **** 	else {
 1386              		.loc 1 1971 61 discriminator 1 view .LVU455
 1387 00f6 0138     		subs	r0, r0, #1
 1388 00f8 E7E7     		b	.L152
 1389              	.L159:
 1390 00fa 00BF     		.align	2
 1391              	.L158:
 1392 00fc 00000000 		.word	StateWhileOn
 1393 0100 00000000 		.word	argcmds
 1394 0104 00000000 		.word	main_ram
 1395 0108 CDCCCCCC 		.word	-858993459
 1396              		.cfi_endproc
 1397              	.LFE36:
 1399              		.section	.text.process_arg_shuffle,"ax",%progbits
 1400              		.align	1
 1401              		.p2align 2,,3
 1402              		.syntax unified
 1403              		.thumb
 1404              		.thumb_func
 1405              		.fpu fpv4-sp-d16
 1407              	process_arg_shuffle:
 1408              	.LVL105:
 1409              	.LFB41:
2058:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1410              		.loc 1 2058 39 is_stmt 1 view -0
 1411              		.cfi_startproc
 1412              		@ args = 0, pretend = 0, frame = 0
 1413              		@ frame_needed = 0, uses_anonymous_args = 0
 1414              		@ link register save eliminated.
2059:src/keys.c    **** 	if (State2.numdigit < 4)
 1415              		.loc 1 2059 2 view .LVU457
2058:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1416              		.loc 1 2058 39 is_stmt 0 view .LVU458
 1417 0000 10B4     		push	{r4}
 1418              		.cfi_def_cfa_offset 4
 1419              		.cfi_offset 4, -4
2059:src/keys.c    **** 	if (State2.numdigit < 4)
 1420              		.loc 1 2059 31 view .LVU459
 1421 0002 0A4A     		ldr	r2, .L163
 1422 0004 D37A     		ldrb	r3, [r2, #11]	@ zero_extendqisi2
2059:src/keys.c    **** 	if (State2.numdigit < 4)
 1423              		.loc 1 2059 16 view .LVU460
 1424 0006 1189     		ldrh	r1, [r2, #8]
2059:src/keys.c    **** 	if (State2.numdigit < 4)
 1425              		.loc 1 2059 43 view .LVU461
 1426 0008 5C00     		lsls	r4, r3, #1
2059:src/keys.c    **** 	if (State2.numdigit < 4)
 1427              		.loc 1 2059 21 view .LVU462
 1428 000a A040     		lsls	r0, r0, r4
 1429              	.LVL106:
2059:src/keys.c    **** 	if (State2.numdigit < 4)
 1430              		.loc 1 2059 40 view .LVU463
 1431 000c 0133     		adds	r3, r3, #1
 1432 000e DBB2     		uxtb	r3, r3
2059:src/keys.c    **** 	if (State2.numdigit < 4)
 1433              		.loc 1 2059 16 view .LVU464
ARM GAS  /tmp/cc6xzGMw.s 			page 85


 1434 0010 0844     		add	r0, r0, r1
 1435 0012 80B2     		uxth	r0, r0
2060:src/keys.c    **** 		return STATE_UNFINISHED;
 1436              		.loc 1 2060 5 view .LVU465
 1437 0014 032B     		cmp	r3, #3
2059:src/keys.c    **** 	if (State2.numdigit < 4)
 1438              		.loc 1 2059 40 view .LVU466
 1439 0016 D372     		strb	r3, [r2, #11]
2059:src/keys.c    **** 	if (State2.numdigit < 4)
 1440              		.loc 1 2059 16 view .LVU467
 1441 0018 1081     		strh	r0, [r2, #8]	@ movhi
2060:src/keys.c    **** 		return STATE_UNFINISHED;
 1442              		.loc 1 2060 2 is_stmt 1 view .LVU468
2060:src/keys.c    **** 		return STATE_UNFINISHED;
 1443              		.loc 1 2060 5 is_stmt 0 view .LVU469
 1444 001a 03D9     		bls	.L161
2062:src/keys.c    **** }
 1445              		.loc 1 2062 2 is_stmt 1 view .LVU470
2063:src/keys.c    **** 
 1446              		.loc 1 2063 1 is_stmt 0 view .LVU471
 1447 001c 5DF8044B 		ldr	r4, [sp], #4
 1448              		.cfi_remember_state
 1449              		.cfi_restore 4
 1450              		.cfi_def_cfa_offset 0
2062:src/keys.c    **** }
 1451              		.loc 1 2062 9 view .LVU472
 1452 0020 FFF7FEBF 		b	arg_eval
 1453              	.LVL107:
 1454              	.L161:
 1455              		.cfi_restore_state
2063:src/keys.c    **** 
 1456              		.loc 1 2063 1 view .LVU473
 1457 0024 3320     		movs	r0, #51
 1458 0026 5DF8044B 		ldr	r4, [sp], #4
 1459              		.cfi_restore 4
 1460              		.cfi_def_cfa_offset 0
 1461 002a 7047     		bx	lr
 1462              	.L164:
 1463              		.align	2
 1464              	.L163:
 1465 002c 00000000 		.word	StateWhileOn
 1466              		.cfi_endproc
 1467              	.LFE41:
 1469              		.section	.text.process_h_shifted,"ax",%progbits
 1470              		.align	1
 1471              		.p2align 2,,3
 1472              		.syntax unified
 1473              		.thumb
 1474              		.thumb_func
 1475              		.fpu fpv4-sp-d16
 1477              	process_h_shifted:
 1478              	.LVL108:
 1479              	.LFB21:
1091:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1480              		.loc 1 1091 47 is_stmt 1 view -0
 1481              		.cfi_startproc
 1482              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc6xzGMw.s 			page 86


 1483              		@ frame_needed = 0, uses_anonymous_args = 0
1094:src/keys.c    **** 		// Row 1
 1484              		.loc 1 1094 2 view .LVU475
1145:src/keys.c    **** 	int op = op_map[lc];
 1485              		.loc 1 1145 2 view .LVU476
 1486              	.LBB332:
 1487              	.LBB333:
 158:src/keys.c    **** }
 1488              		.loc 1 158 23 is_stmt 0 view .LVU477
 1489 0000 314A     		ldr	r2, .L196
 1490              	.LBE333:
 1491              	.LBE332:
1146:src/keys.c    **** 	reset_shift();
 1492              		.loc 1 1146 17 view .LVU478
 1493 0002 324B     		ldr	r3, .L196+4
 1494              	.LBB336:
 1495              	.LBB334:
 158:src/keys.c    **** }
 1496              		.loc 1 158 23 view .LVU479
 1497 0004 125C     		ldrb	r2, [r2, r0]	@ zero_extendqisi2
 1498              	.LBE334:
 1499              	.LBE336:
1091:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1500              		.loc 1 1091 47 view .LVU480
 1501 0006 70B5     		push	{r4, r5, r6, lr}
 1502              		.cfi_def_cfa_offset 16
 1503              		.cfi_offset 4, -16
 1504              		.cfi_offset 5, -12
 1505              		.cfi_offset 6, -8
 1506              		.cfi_offset 14, -4
1091:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1507              		.loc 1 1091 47 view .LVU481
 1508 0008 0446     		mov	r4, r0
 1509              	.LVL109:
 1510              	.LBB337:
 1511              	.LBI332:
 146:src/keys.c    **** {
 1512              		.loc 1 146 12 is_stmt 1 view .LVU482
 1513              	.LBB335:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 1514              		.loc 1 148 2 view .LVU483
 158:src/keys.c    **** }
 1515              		.loc 1 158 2 view .LVU484
 158:src/keys.c    **** }
 1516              		.loc 1 158 2 is_stmt 0 view .LVU485
 1517              	.LBE335:
 1518              	.LBE337:
1146:src/keys.c    **** 	reset_shift();
 1519              		.loc 1 1146 2 is_stmt 1 view .LVU486
 1520              	.LBB338:
 1521              	.LBB339:
 1522              	.LBB340:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1523              		.loc 1 106 16 is_stmt 0 view .LVU487
 1524 000a 314E     		ldr	r6, .L196+8
 1525              	.LBE340:
 1526              	.LBE339:
ARM GAS  /tmp/cc6xzGMw.s 			page 87


 1527              	.LBE338:
1146:src/keys.c    **** 	reset_shift();
 1528              		.loc 1 1146 17 view .LVU488
 1529 000c 33F81250 		ldrh	r5, [r3, r2, lsl #1]
 1530              	.LVL110:
1147:src/keys.c    **** 
 1531              		.loc 1 1147 2 is_stmt 1 view .LVU489
 1532              	.LBB347:
 1533              	.LBI338:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 1534              		.loc 1 114 13 view .LVU490
 1535              	.LBE347:
 115:src/keys.c    **** }
 1536              		.loc 1 115 2 view .LVU491
 1537              	.LBB348:
 1538              	.LBB345:
 1539              	.LBI339:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 1540              		.loc 1 104 20 view .LVU492
 1541              	.LBB343:
 105:src/keys.c    **** 	State2.shifts = shift;
 1542              		.loc 1 105 2 view .LVU493
 1543              	.LBB341:
 1544              	.LBI341:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 1545              		.loc 1 96 13 view .LVU494
 1546              	.LBB342:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1547              		.loc 1 97 2 view .LVU495
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1548              		.loc 1 97 18 is_stmt 0 view .LVU496
 1549 0010 FFF7FEFF 		bl	shift_down
 1550              	.LVL111:
  98:src/keys.c    **** }
 1551              		.loc 1 98 2 is_stmt 1 view .LVU497
 1552              	.LBE342:
 1553              	.LBE341:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1554              		.loc 1 106 2 view .LVU498
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1555              		.loc 1 106 16 is_stmt 0 view .LVU499
 1556 0014 0023     		movs	r3, #0
 1557              	.LBE343:
 1558              	.LBE345:
 1559              	.LBE348:
1150:src/keys.c    **** 	case K62:
 1560              		.loc 1 1150 2 view .LVU500
 1561 0016 262C     		cmp	r4, #38
 1562              	.LBB349:
 1563              	.LBB346:
 1564              	.LBB344:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1565              		.loc 1 106 16 view .LVU501
 1566 0018 3374     		strb	r3, [r6, #16]
 108:src/keys.c    **** }
 1567              		.loc 1 108 2 is_stmt 1 view .LVU502
 1568              	.LVL112:
ARM GAS  /tmp/cc6xzGMw.s 			page 88


 108:src/keys.c    **** }
 1569              		.loc 1 108 2 is_stmt 0 view .LVU503
 1570              	.LBE344:
 1571              	.LBE346:
 1572              	.LBE349:
1150:src/keys.c    **** 	case K62:
 1573              		.loc 1 1150 2 is_stmt 1 view .LVU504
 1574 001a 27D0     		beq	.L166
 1575 001c 272C     		cmp	r4, #39
 1576 001e 19D1     		bne	.L168
1163:src/keys.c    **** 			return STATE_UNFINISHED;
 1577              		.loc 1 1163 3 view .LVU505
1163:src/keys.c    **** 			return STATE_UNFINISHED;
 1578              		.loc 1 1163 7 is_stmt 0 view .LVU506
 1579 0020 FFF7FEFF 		bl	is_bad_cmdline
 1580              	.LVL113:
1163:src/keys.c    **** 			return STATE_UNFINISHED;
 1581              		.loc 1 1163 6 view .LVU507
 1582 0024 00BB     		cbnz	r0, .L178
1165:src/keys.c    **** 		process_cmdline_set_lift();
 1583              		.loc 1 1165 3 is_stmt 1 view .LVU508
1165:src/keys.c    **** 		process_cmdline_set_lift();
 1584              		.loc 1 1165 30 is_stmt 0 view .LVU509
 1585 0026 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 1586 0028 C3F38012 		ubfx	r2, r3, #6, #1
1165:src/keys.c    **** 		process_cmdline_set_lift();
 1587              		.loc 1 1165 22 view .LVU510
 1588 002c C2F10102 		rsb	r2, r2, #1
1165:src/keys.c    **** 		process_cmdline_set_lift();
 1589              		.loc 1 1165 18 view .LVU511
 1590 0030 62F38613 		bfi	r3, r2, #6, #1
 1591 0034 B375     		strb	r3, [r6, #22]
1166:src/keys.c    **** 		update_program_bounds(1);
 1592              		.loc 1 1166 3 is_stmt 1 view .LVU512
 1593 0036 FFF7FEFF 		bl	process_cmdline_set_lift
 1594              	.LVL114:
1167:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
 1595              		.loc 1 1167 3 view .LVU513
 1596 003a 0120     		movs	r0, #1
 1597 003c FFF7FEFF 		bl	update_program_bounds
 1598              	.LVL115:
1168:src/keys.c    **** 			set_pc(0);
 1599              		.loc 1 1168 3 view .LVU514
1168:src/keys.c    **** 			set_pc(0);
 1600              		.loc 1 1168 7 is_stmt 0 view .LVU515
 1601 0040 B07D     		ldrb	r0, [r6, #22]	@ zero_extendqisi2
1168:src/keys.c    **** 			set_pc(0);
 1602              		.loc 1 1168 6 view .LVU516
 1603 0042 10F04000 		ands	r0, r0, #64
 1604 0046 05D1     		bne	.L168
1168:src/keys.c    **** 			set_pc(0);
 1605              		.loc 1 1168 27 discriminator 1 view .LVU517
 1606 0048 224B     		ldr	r3, .L196+12
 1607 004a 1B68     		ldr	r3, [r3]
1168:src/keys.c    **** 			set_pc(0);
 1608              		.loc 1 1168 24 discriminator 1 view .LVU518
 1609 004c B3F8E027 		ldrh	r2, [r3, #2016]
ARM GAS  /tmp/cc6xzGMw.s 			page 89


 1610 0050 012A     		cmp	r2, #1
 1611 0052 32D0     		beq	.L192
 1612              	.L168:
1176:src/keys.c    **** 		if (op & _RARG) {
 1613              		.loc 1 1176 2 is_stmt 1 view .LVU519
1176:src/keys.c    **** 		if (op & _RARG) {
 1614              		.loc 1 1176 5 is_stmt 0 view .LVU520
 1615 0054 332D     		cmp	r5, #51
 1616 0056 07D0     		beq	.L178
 1617              	.LVL116:
1177:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1618              		.loc 1 1177 3 is_stmt 1 view .LVU521
1177:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1619              		.loc 1 1177 6 is_stmt 0 view .LVU522
 1620 0058 2804     		lsls	r0, r5, #16
 1621 005a 14D5     		bpl	.L193
 1622              	.L176:
1178:src/keys.c    **** 			op = STATE_UNFINISHED;
 1623              		.loc 1 1178 4 is_stmt 1 view .LVU523
 1624              	.LVL117:
 1625              	.LBB350:
 1626              	.LBI350:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 1627              		.loc 1 552 13 view .LVU524
 1628              	.LBB351:
 553:src/keys.c    **** 		return;
 1629              		.loc 1 553 2 view .LVU525
 553:src/keys.c    **** 		return;
 1630              		.loc 1 553 6 is_stmt 0 view .LVU526
 1631 005c FFF7FEFF 		bl	is_bad_cmdline
 1632              	.LVL118:
 553:src/keys.c    **** 		return;
 1633              		.loc 1 553 5 view .LVU527
 1634 0060 10B9     		cbnz	r0, .L178
 1635 0062 E8B2     		uxtb	r0, r5
 1636 0064 FFF7FEFF 		bl	init_arg.part.0
 1637              	.LVL119:
 1638              	.L178:
 553:src/keys.c    **** 		return;
 1639              		.loc 1 553 5 view .LVU528
 1640              	.LBE351:
 1641              	.LBE350:
1182:src/keys.c    **** #undef _RARG
 1642              		.loc 1 1182 2 is_stmt 1 view .LVU529
1091:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1643              		.loc 1 1091 47 is_stmt 0 view .LVU530
 1644 0068 3320     		movs	r0, #51
1185:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 1645              		.loc 1 1185 1 view .LVU531
 1646 006a 70BD     		pop	{r4, r5, r6, pc}
 1647              	.LVL120:
 1648              	.L166:
1152:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 1649              		.loc 1 1152 3 is_stmt 1 view .LVU532
1152:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 1650              		.loc 1 1152 7 is_stmt 0 view .LVU533
 1651 006c 194B     		ldr	r3, .L196+12
ARM GAS  /tmp/cc6xzGMw.s 			page 90


 1652 006e 1B68     		ldr	r3, [r3]
 1653 0070 93F8E827 		ldrb	r2, [r3, #2024]	@ zero_extendqisi2
1152:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 1654              		.loc 1 1152 6 view .LVU534
 1655 0074 D607     		lsls	r6, r2, #31
 1656 0076 0FD4     		bmi	.L194
1158:src/keys.c    **** #endif
 1657              		.loc 1 1158 4 is_stmt 1 view .LVU535
1158:src/keys.c    **** #endif
 1658              		.loc 1 1158 8 is_stmt 0 view .LVU536
 1659 0078 93F8E737 		ldrb	r3, [r3, #2023]	@ zero_extendqisi2
1158:src/keys.c    **** #endif
 1660              		.loc 1 1158 7 view .LVU537
 1661 007c 9C06     		lsls	r4, r3, #26
 1662 007e 14D5     		bpl	.L195
 1663 0080 40F24F10 		movw	r0, #335
 1664              	.LVL121:
1185:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 1665              		.loc 1 1185 1 view .LVU538
 1666 0084 70BD     		pop	{r4, r5, r6, pc}
 1667              	.L193:
 1668              	.LVL122:
1182:src/keys.c    **** #undef _RARG
 1669              		.loc 1 1182 2 is_stmt 1 view .LVU539
1182:src/keys.c    **** #undef _RARG
 1670              		.loc 1 1182 9 is_stmt 0 view .LVU540
 1671 0086 134B     		ldr	r3, .L196+12
 1672 0088 1B68     		ldr	r3, [r3]
 1673 008a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1182:src/keys.c    **** #undef _RARG
 1674              		.loc 1 1182 57 view .LVU541
 1675 008e D907     		lsls	r1, r3, #31
 1676 0090 10D4     		bmi	.L177
 1677              	.LVL123:
 1678              	.L180:
1182:src/keys.c    **** #undef _RARG
 1679              		.loc 1 1182 57 view .LVU542
 1680 0092 25F48040 		bic	r0, r5, #16384
1185:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 1681              		.loc 1 1185 1 view .LVU543
 1682 0096 70BD     		pop	{r4, r5, r6, pc}
 1683              	.LVL124:
 1684              	.L194:
1153:src/keys.c    **** 		else
 1685              		.loc 1 1153 4 is_stmt 1 view .LVU544
1153:src/keys.c    **** 		else
 1686              		.loc 1 1153 57 is_stmt 0 view .LVU545
 1687 0098 93F9E737 		ldrsb	r3, [r3, #2023]
 1688 009c 002B     		cmp	r3, #0
 1689 009e 40F25315 		movw	r5, #339
 1690              	.LVL125:
1153:src/keys.c    **** 		else
 1691              		.loc 1 1153 57 view .LVU546
 1692 00a2 A8BF     		it	ge
 1693 00a4 4FF4AA75 		movge	r5, #340
 1694 00a8 F3E7     		b	.L180
 1695              	.LVL126:
ARM GAS  /tmp/cc6xzGMw.s 			page 91


 1696              	.L195:
1176:src/keys.c    **** 		if (op & _RARG) {
 1697              		.loc 1 1176 2 is_stmt 1 view .LVU547
1176:src/keys.c    **** 		if (op & _RARG) {
 1698              		.loc 1 1176 5 is_stmt 0 view .LVU548
 1699 00aa 332D     		cmp	r5, #51
 1700 00ac DCD0     		beq	.L178
 1701              	.LVL127:
1177:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1702              		.loc 1 1177 3 is_stmt 1 view .LVU549
1177:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1703              		.loc 1 1177 6 is_stmt 0 view .LVU550
 1704 00ae 2B04     		lsls	r3, r5, #16
 1705 00b0 D4D4     		bmi	.L176
 1706 00b2 EEE7     		b	.L180
 1707              	.LVL128:
 1708              	.L177:
1182:src/keys.c    **** #undef _RARG
 1709              		.loc 1 1182 21 view .LVU551
 1710 00b4 6A04     		lsls	r2, r5, #17
 1711 00b6 D7D4     		bmi	.L178
 1712 00b8 EBE7     		b	.L180
 1713              	.L192:
1168:src/keys.c    **** 			set_pc(0);
 1714              		.loc 1 1168 43 discriminator 2 view .LVU552
 1715 00ba B3F8EE37 		ldrh	r3, [r3, #2030]
 1716 00be 012B     		cmp	r3, #1
 1717 00c0 C8D1     		bne	.L168
1169:src/keys.c    **** 		break;
 1718              		.loc 1 1169 4 is_stmt 1 view .LVU553
 1719 00c2 FFF7FEFF 		bl	set_pc
 1720              	.LVL129:
 1721 00c6 C5E7     		b	.L168
 1722              	.L197:
 1723              		.align	2
 1724              	.L196:
 1725 00c8 00000000 		.word	.LANCHOR1
 1726 00cc 00000000 		.word	.LANCHOR0
 1727 00d0 00000000 		.word	StateWhileOn
 1728 00d4 00000000 		.word	main_ram
 1729              		.cfi_endproc
 1730              	.LFE21:
 1732              		.section	.text.intltr,"ax",%progbits
 1733              		.align	1
 1734              		.p2align 2,,3
 1735              		.syntax unified
 1736              		.thumb
 1737              		.thumb_func
 1738              		.fpu fpv4-sp-d16
 1740              	intltr:
 1741              	.LVL130:
 1742              	.LFB18:
 751:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1743              		.loc 1 751 26 view -0
 1744              		.cfi_startproc
 1745              		@ args = 0, pretend = 0, frame = 0
 1746              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc6xzGMw.s 			page 92


 752:src/keys.c    **** }
 1747              		.loc 1 752 2 view .LVU555
 752:src/keys.c    **** }
 1748              		.loc 1 752 10 is_stmt 0 view .LVU556
 1749 0000 0B4B     		ldr	r3, .L207
 1750 0002 1B68     		ldr	r3, [r3]
 1751 0004 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 752:src/keys.c    **** }
 1752              		.loc 1 752 22 view .LVU557
 1753 0008 13F00103 		ands	r3, r3, #1
 1754 000c 05D0     		beq	.L200
 752:src/keys.c    **** }
 1755              		.loc 1 752 26 discriminator 1 view .LVU558
 1756 000e 094B     		ldr	r3, .L207+4
 1757 0010 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 752:src/keys.c    **** }
 1758              		.loc 1 752 22 discriminator 1 view .LVU559
 1759 0012 5B06     		lsls	r3, r3, #25
 1760 0014 03D4     		bmi	.L206
 752:src/keys.c    **** }
 1761              		.loc 1 752 22 view .LVU560
 1762 0016 0120     		movs	r0, #1
 1763              	.LVL131:
 753:src/keys.c    **** 
 1764              		.loc 1 753 1 view .LVU561
 1765 0018 7047     		bx	lr
 1766              	.LVL132:
 1767              	.L200:
 752:src/keys.c    **** }
 1768              		.loc 1 752 22 view .LVU562
 1769 001a 1846     		mov	r0, r3
 1770              	.LVL133:
 752:src/keys.c    **** }
 1771              		.loc 1 752 22 view .LVU563
 1772 001c 7047     		bx	lr
 1773              	.LVL134:
 1774              	.L206:
 751:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1775              		.loc 1 751 26 view .LVU564
 1776 001e 10B5     		push	{r4, lr}
 1777              		.cfi_def_cfa_offset 8
 1778              		.cfi_offset 4, -8
 1779              		.cfi_offset 14, -4
 1780 0020 0446     		mov	r4, r0
 1781              	.LVL135:
 1782              	.LBB354:
 1783              	.LBI354:
 751:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1784              		.loc 1 751 12 is_stmt 1 view .LVU565
 1785              	.LBB355:
 752:src/keys.c    **** }
 1786              		.loc 1 752 52 is_stmt 0 view .LVU566
 1787 0022 FFF7FEFF 		bl	int_base
 1788              	.LVL136:
 752:src/keys.c    **** }
 1789              		.loc 1 752 43 view .LVU567
 1790 0026 8442     		cmp	r4, r0
ARM GAS  /tmp/cc6xzGMw.s 			page 93


 1791 0028 ACBF     		ite	ge
 1792 002a 0020     		movge	r0, #0
 1793 002c 0120     		movlt	r0, #1
 1794              	.LBE355:
 1795              	.LBE354:
 753:src/keys.c    **** 
 1796              		.loc 1 753 1 view .LVU568
 1797 002e 10BD     		pop	{r4, pc}
 1798              	.LVL137:
 1799              	.L208:
 753:src/keys.c    **** 
 1800              		.loc 1 753 1 view .LVU569
 1801              		.align	2
 1802              	.L207:
 1803 0030 00000000 		.word	main_ram
 1804 0034 00000000 		.word	StateWhileOn
 1805              		.cfi_endproc
 1806              	.LFE18:
 1808              		.section	.text.process_normal,"ax",%progbits
 1809              		.align	1
 1810              		.p2align 2,,3
 1811              		.syntax unified
 1812              		.thumb
 1813              		.thumb_func
 1814              		.fpu fpv4-sp-d16
 1816              	process_normal:
 1817              	.LVL138:
 1818              	.LFB19:
 759:src/keys.c    **** 	static const unsigned short int op_map[] = {
 1819              		.loc 1 759 1 is_stmt 1 view -0
 1820              		.cfi_startproc
 1821              		@ args = 0, pretend = 0, frame = 0
 1822              		@ frame_needed = 0, uses_anonymous_args = 0
 760:src/keys.c    **** 		// Row 1
 1823              		.loc 1 760 2 view .LVU571
 807:src/keys.c    **** 	int op = op_map[lc];
 1824              		.loc 1 807 2 view .LVU572
 1825              	.LBB356:
 1826              	.LBI356:
 146:src/keys.c    **** {
 1827              		.loc 1 146 12 view .LVU573
 1828              	.LBB357:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 1829              		.loc 1 148 2 view .LVU574
 158:src/keys.c    **** }
 1830              		.loc 1 158 2 view .LVU575
 158:src/keys.c    **** }
 1831              		.loc 1 158 2 is_stmt 0 view .LVU576
 1832              	.LBE357:
 1833              	.LBE356:
 808:src/keys.c    **** 	
 1834              		.loc 1 808 2 is_stmt 1 view .LVU577
 813:src/keys.c    **** 	  switch (c) {
 1835              		.loc 1 813 6 is_stmt 0 view .LVU578
 1836 0000 984B     		ldr	r3, .L240
 1837              	.LBB360:
 1838              	.LBB358:
ARM GAS  /tmp/cc6xzGMw.s 			page 94


 158:src/keys.c    **** }
 1839              		.loc 1 158 23 view .LVU579
 1840 0002 994A     		ldr	r2, .L240+4
 1841              	.LBE358:
 1842              	.LBE360:
 813:src/keys.c    **** 	  switch (c) {
 1843              		.loc 1 813 6 view .LVU580
 1844 0004 1B68     		ldr	r3, [r3]
 1845              	.LBB361:
 1846              	.LBB359:
 158:src/keys.c    **** }
 1847              		.loc 1 158 23 view .LVU581
 1848 0006 115C     		ldrb	r1, [r2, r0]	@ zero_extendqisi2
 1849              	.LBE359:
 1850              	.LBE361:
 808:src/keys.c    **** 	
 1851              		.loc 1 808 17 view .LVU582
 1852 0008 984A     		ldr	r2, .L240+8
 813:src/keys.c    **** 	  switch (c) {
 1853              		.loc 1 813 6 view .LVU583
 1854 000a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 759:src/keys.c    **** 	static const unsigned short int op_map[] = {
 1855              		.loc 1 759 1 view .LVU584
 1856 000e 10B5     		push	{r4, lr}
 1857              		.cfi_def_cfa_offset 8
 1858              		.cfi_offset 4, -8
 1859              		.cfi_offset 14, -4
 808:src/keys.c    **** 	
 1860              		.loc 1 808 17 view .LVU585
 1861 0010 32F81140 		ldrh	r4, [r2, r1, lsl #1]
 813:src/keys.c    **** 	  switch (c) {
 1862              		.loc 1 813 5 view .LVU586
 1863 0014 DB07     		lsls	r3, r3, #31
 808:src/keys.c    **** 	
 1864              		.loc 1 808 6 view .LVU587
 1865 0016 2246     		mov	r2, r4
 1866              	.LVL139:
 812:src/keys.c    **** 	if (UState.intm) {
 1867              		.loc 1 812 2 is_stmt 1 view .LVU588
 813:src/keys.c    **** 	  switch (c) {
 1868              		.loc 1 813 2 view .LVU589
 813:src/keys.c    **** 	  switch (c) {
 1869              		.loc 1 813 5 is_stmt 0 view .LVU590
 1870 0018 42D4     		bmi	.L236
 844:src/keys.c    **** 	  }
 1871              		.loc 1 844 12 is_stmt 1 view .LVU591
 849:src/keys.c    **** #ifdef DM42
 1872              		.loc 1 849 2 view .LVU592
 1873 001a 2D28     		cmp	r0, #45
 1874 001c 3ED8     		bhi	.L209
 1875 001e DFE810F0 		tbh	[pc, r0, lsl #1]
 1876              	.L228:
 1877 0022 0801     		.2byte	(.L224-.L228)/2
 1878 0024 0E01     		.2byte	(.L225-.L228)/2
 1879 0026 3D00     		.2byte	(.L209-.L228)/2
 1880 0028 CF00     		.2byte	(.L223-.L228)/2
 1881 002a 3D00     		.2byte	(.L209-.L228)/2
ARM GAS  /tmp/cc6xzGMw.s 			page 95


 1882 002c 3D00     		.2byte	(.L209-.L228)/2
 1883 002e 3400     		.2byte	(.L218-.L228)/2
 1884 0030 3400     		.2byte	(.L218-.L228)/2
 1885 0032 3D00     		.2byte	(.L209-.L228)/2
 1886 0034 3D00     		.2byte	(.L209-.L228)/2
 1887 0036 3D00     		.2byte	(.L209-.L228)/2
 1888 0038 3D00     		.2byte	(.L209-.L228)/2
 1889 003a 3D00     		.2byte	(.L209-.L228)/2
 1890 003c 3D00     		.2byte	(.L209-.L228)/2
 1891 003e 3D00     		.2byte	(.L209-.L228)/2
 1892 0040 3D00     		.2byte	(.L209-.L228)/2
 1893 0042 E900     		.2byte	(.L222-.L228)/2
 1894 0044 3D00     		.2byte	(.L209-.L228)/2
 1895 0046 3400     		.2byte	(.L218-.L228)/2
 1896 0048 3D00     		.2byte	(.L209-.L228)/2
 1897 004a 3D00     		.2byte	(.L209-.L228)/2
 1898 004c 3D00     		.2byte	(.L209-.L228)/2
 1899 004e 3D00     		.2byte	(.L209-.L228)/2
 1900 0050 3D00     		.2byte	(.L209-.L228)/2
 1901 0052 3D00     		.2byte	(.L209-.L228)/2
 1902 0054 3D00     		.2byte	(.L209-.L228)/2
 1903 0056 3D00     		.2byte	(.L209-.L228)/2
 1904 0058 3D00     		.2byte	(.L209-.L228)/2
 1905 005a 3D00     		.2byte	(.L209-.L228)/2
 1906 005c 3D00     		.2byte	(.L209-.L228)/2
 1907 005e 3D00     		.2byte	(.L209-.L228)/2
 1908 0060 3D00     		.2byte	(.L209-.L228)/2
 1909 0062 3D00     		.2byte	(.L209-.L228)/2
 1910 0064 3D00     		.2byte	(.L209-.L228)/2
 1911 0066 3D00     		.2byte	(.L209-.L228)/2
 1912 0068 3D00     		.2byte	(.L209-.L228)/2
 1913 006a 3D00     		.2byte	(.L209-.L228)/2
 1914 006c 3D00     		.2byte	(.L209-.L228)/2
 1915 006e 3D00     		.2byte	(.L209-.L228)/2
 1916 0070 3D00     		.2byte	(.L209-.L228)/2
 1917 0072 3D00     		.2byte	(.L209-.L228)/2
 1918 0074 3D00     		.2byte	(.L209-.L228)/2
 1919 0076 3D00     		.2byte	(.L209-.L228)/2
 1920 0078 3D00     		.2byte	(.L209-.L228)/2
 1921 007a F400     		.2byte	(.L221-.L228)/2
 1922 007c C700     		.2byte	(.L227-.L228)/2
 1923              		.p2align 1
 1924              	.L212:
 840:src/keys.c    **** 	    if (intltr(15)) {
 1925              		.loc 1 840 6 view .LVU593
 1926              	.LVL140:
 841:src/keys.c    **** 	      return op_int;
 1927              		.loc 1 841 6 view .LVU594
 841:src/keys.c    **** 	      return op_int;
 1928              		.loc 1 841 10 is_stmt 0 view .LVU595
 1929 007e 0F20     		movs	r0, #15
 1930              	.LVL141:
 841:src/keys.c    **** 	      return op_int;
 1931              		.loc 1 841 10 view .LVU596
 1932 0080 FFF7FEFF 		bl	intltr
 1933              	.LVL142:
 841:src/keys.c    **** 	      return op_int;
ARM GAS  /tmp/cc6xzGMw.s 			page 96


 1934              		.loc 1 841 9 view .LVU597
 1935 0084 0028     		cmp	r0, #0
 1936 0086 40F0EB80 		bne	.L237
 1937              	.LVL143:
 1938              	.L218:
 915:src/keys.c    **** 		break;
 1939              		.loc 1 915 3 is_stmt 1 view .LVU598
 1940              	.LBB362:
 1941              	.LBI362:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 1942              		.loc 1 552 13 view .LVU599
 1943              	.LBB363:
 553:src/keys.c    **** 		return;
 1944              		.loc 1 553 2 view .LVU600
 553:src/keys.c    **** 		return;
 1945              		.loc 1 553 6 is_stmt 0 view .LVU601
 1946 008a FFF7FEFF 		bl	is_bad_cmdline
 1947              	.LVL144:
 553:src/keys.c    **** 		return;
 1948              		.loc 1 553 5 view .LVU602
 1949 008e 0028     		cmp	r0, #0
 1950 0090 40F09380 		bne	.L235
 1951 0094 E0B2     		uxtb	r0, r4
 1952 0096 FFF7FEFF 		bl	init_arg.part.0
 1953              	.LVL145:
 1954              	.LBE363:
 1955              	.LBE362:
 921:src/keys.c    **** }
 1956              		.loc 1 921 9 view .LVU603
 1957 009a 3322     		movs	r2, #51
 1958              	.LVL146:
 1959              	.L209:
 922:src/keys.c    **** 
 1960              		.loc 1 922 1 view .LVU604
 1961 009c 1046     		mov	r0, r2
 1962 009e 10BD     		pop	{r4, pc}
 1963              	.LVL147:
 1964              	.L236:
 814:src/keys.c    **** 	  case K00:
 1965              		.loc 1 814 4 is_stmt 1 view .LVU605
 1966 00a0 1228     		cmp	r0, #18
 1967 00a2 29D8     		bhi	.L211
 1968 00a4 01A3     		adr	r3, .L213
 1969 00a6 53F820F0 		ldr	pc, [r3, r0, lsl #2]
 1970 00aa 00BF     		.p2align 2
 1971              	.L213:
 1972 00ac E9010000 		.word	.L216+1
 1973 00b0 DB010000 		.word	.L215+1
 1974 00b4 F9000000 		.word	.L211+1
 1975 00b8 CD010000 		.word	.L214+1
 1976 00bc F9000000 		.word	.L211+1
 1977 00c0 F9000000 		.word	.L211+1
 1978 00c4 F9000000 		.word	.L211+1
 1979 00c8 F9000000 		.word	.L211+1
 1980 00cc F9000000 		.word	.L211+1
 1981 00d0 F9000000 		.word	.L211+1
 1982 00d4 F9000000 		.word	.L211+1
ARM GAS  /tmp/cc6xzGMw.s 			page 97


 1983 00d8 F9000000 		.word	.L211+1
 1984 00dc F9000000 		.word	.L211+1
 1985 00e0 F9000000 		.word	.L211+1
 1986 00e4 F9000000 		.word	.L211+1
 1987 00e8 F9000000 		.word	.L211+1
 1988 00ec F9000000 		.word	.L211+1
 1989 00f0 F9000000 		.word	.L211+1
 1990 00f4 7F000000 		.word	.L212+1
 1991              		.p2align 1
 1992              	.L211:
 844:src/keys.c    **** 	  }
 1993              		.loc 1 844 12 view .LVU606
 849:src/keys.c    **** #ifdef DM42
 1994              		.loc 1 849 2 view .LVU607
 1995 00f8 C31E     		subs	r3, r0, #3
 1996 00fa 2A2B     		cmp	r3, #42
 1997 00fc CED8     		bhi	.L209
 1998 00fe 01A1     		adr	r1, .L220
 1999 0100 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 2000              		.p2align 2
 2001              	.L220:
 2002 0104 C1010000 		.word	.L223+1
 2003 0108 9D000000 		.word	.L209+1
 2004 010c 9D000000 		.word	.L209+1
 2005 0110 8B000000 		.word	.L218+1
 2006 0114 8B000000 		.word	.L218+1
 2007 0118 9D000000 		.word	.L209+1
 2008 011c 9D000000 		.word	.L209+1
 2009 0120 9D000000 		.word	.L209+1
 2010 0124 9D000000 		.word	.L209+1
 2011 0128 9D000000 		.word	.L209+1
 2012 012c 9D000000 		.word	.L209+1
 2013 0130 9D000000 		.word	.L209+1
 2014 0134 9D000000 		.word	.L209+1
 2015 0138 F5010000 		.word	.L222+1
 2016 013c 9D000000 		.word	.L209+1
 2017 0140 8B000000 		.word	.L218+1
 2018 0144 9D000000 		.word	.L209+1
 2019 0148 9D000000 		.word	.L209+1
 2020 014c 9D000000 		.word	.L209+1
 2021 0150 9D000000 		.word	.L209+1
 2022 0154 9D000000 		.word	.L209+1
 2023 0158 9D000000 		.word	.L209+1
 2024 015c 9D000000 		.word	.L209+1
 2025 0160 9D000000 		.word	.L209+1
 2026 0164 9D000000 		.word	.L209+1
 2027 0168 9D000000 		.word	.L209+1
 2028 016c 9D000000 		.word	.L209+1
 2029 0170 9D000000 		.word	.L209+1
 2030 0174 9D000000 		.word	.L209+1
 2031 0178 9D000000 		.word	.L209+1
 2032 017c 9D000000 		.word	.L209+1
 2033 0180 9D000000 		.word	.L209+1
 2034 0184 9D000000 		.word	.L209+1
 2035 0188 9D000000 		.word	.L209+1
 2036 018c 9D000000 		.word	.L209+1
 2037 0190 9D000000 		.word	.L209+1
ARM GAS  /tmp/cc6xzGMw.s 			page 98


 2038 0194 9D000000 		.word	.L209+1
 2039 0198 9D000000 		.word	.L209+1
 2040 019c 9D000000 		.word	.L209+1
 2041 01a0 9D000000 		.word	.L209+1
 2042 01a4 9D000000 		.word	.L209+1
 2043 01a8 0B020000 		.word	.L221+1
 2044 01ac BB010000 		.word	.L235+1
 2045              		.p2align 1
 2046              	.L227:
 897:src/keys.c    **** #else
 2047              		.loc 1 897 4 view .LVU608
 897:src/keys.c    **** #else
 2048              		.loc 1 897 17 is_stmt 0 view .LVU609
 2049 01b0 2F4A     		ldr	r2, .L240+12
 2050              	.LVL148:
 897:src/keys.c    **** #else
 2051              		.loc 1 897 17 view .LVU610
 2052 01b2 537D     		ldrb	r3, [r2, #21]	@ zero_extendqisi2
 2053 01b4 43F00203 		orr	r3, r3, #2
 2054 01b8 5375     		strb	r3, [r2, #21]
 2055              	.LVL149:
 2056              	.L235:
 903:src/keys.c    **** 
 2057              		.loc 1 903 4 is_stmt 1 view .LVU611
 921:src/keys.c    **** }
 2058              		.loc 1 921 9 is_stmt 0 view .LVU612
 2059 01ba 3322     		movs	r2, #51
 922:src/keys.c    **** 
 2060              		.loc 1 922 1 view .LVU613
 2061 01bc 1046     		mov	r0, r2
 2062 01be 10BD     		pop	{r4, pc}
 2063              	.LVL150:
 2064              	.L223:
 856:src/keys.c    **** #else
 2065              		.loc 1 856 3 is_stmt 1 view .LVU614
 856:src/keys.c    **** #else
 2066              		.loc 1 856 10 is_stmt 0 view .LVU615
 2067 01c0 2146     		mov	r1, r4
 2068 01c2 0220     		movs	r0, #2
 922:src/keys.c    **** 
 2069              		.loc 1 922 1 view .LVU616
 2070 01c4 BDE81040 		pop	{r4, lr}
 2071              		.cfi_remember_state
 2072              		.cfi_restore 14
 2073              		.cfi_restore 4
 2074              		.cfi_def_cfa_offset 0
 2075              	.LVL151:
 856:src/keys.c    **** #else
 2076              		.loc 1 856 10 view .LVU617
 2077 01c8 FFF7FEBF 		b	check_f_key
 2078              	.LVL152:
 2079              	.L214:
 2080              		.cfi_restore_state
 832:src/keys.c    **** 	    if (intltr(12)) {
 2081              		.loc 1 832 6 is_stmt 1 view .LVU618
 833:src/keys.c    **** 	      return op_int;
 2082              		.loc 1 833 6 view .LVU619
ARM GAS  /tmp/cc6xzGMw.s 			page 99


 833:src/keys.c    **** 	      return op_int;
 2083              		.loc 1 833 10 is_stmt 0 view .LVU620
 2084 01cc 0C20     		movs	r0, #12
 2085              	.LVL153:
 833:src/keys.c    **** 	      return op_int;
 2086              		.loc 1 833 10 view .LVU621
 2087 01ce FFF7FEFF 		bl	intltr
 2088              	.LVL154:
 833:src/keys.c    **** 	      return op_int;
 2089              		.loc 1 833 9 view .LVU622
 2090 01d2 0028     		cmp	r0, #0
 2091 01d4 F4D0     		beq	.L223
 834:src/keys.c    **** 	    }
 2092              		.loc 1 834 15 view .LVU623
 2093 01d6 1122     		movs	r2, #17
 2094 01d8 60E7     		b	.L209
 2095              	.LVL155:
 2096              	.L215:
 824:src/keys.c    **** 	    if (intltr(11)) {
 2097              		.loc 1 824 6 is_stmt 1 view .LVU624
 825:src/keys.c    **** 	      return op;
 2098              		.loc 1 825 6 view .LVU625
 825:src/keys.c    **** 	      return op;
 2099              		.loc 1 825 10 is_stmt 0 view .LVU626
 2100 01da 0B20     		movs	r0, #11
 2101              	.LVL156:
 825:src/keys.c    **** 	      return op;
 2102              		.loc 1 825 10 view .LVU627
 2103 01dc FFF7FEFF 		bl	intltr
 2104              	.LVL157:
 825:src/keys.c    **** 	      return op;
 2105              		.loc 1 825 9 view .LVU628
 2106 01e0 0028     		cmp	r0, #0
 2107 01e2 37D0     		beq	.L238
 826:src/keys.c    **** 	    }
 2108              		.loc 1 826 15 view .LVU629
 2109 01e4 1022     		movs	r2, #16
 2110 01e6 59E7     		b	.L209
 2111              	.LVL158:
 2112              	.L216:
 816:src/keys.c    **** 	    if (intltr(10)) {
 2113              		.loc 1 816 6 is_stmt 1 view .LVU630
 817:src/keys.c    **** 	      return op;
 2114              		.loc 1 817 6 view .LVU631
 817:src/keys.c    **** 	      return op;
 2115              		.loc 1 817 10 is_stmt 0 view .LVU632
 2116 01e8 0A20     		movs	r0, #10
 2117              	.LVL159:
 817:src/keys.c    **** 	      return op;
 2118              		.loc 1 817 10 view .LVU633
 2119 01ea FFF7FEFF 		bl	intltr
 2120              	.LVL160:
 817:src/keys.c    **** 	      return op;
 2121              		.loc 1 817 9 view .LVU634
 2122 01ee 60B3     		cbz	r0, .L239
 818:src/keys.c    **** 	    }
 2123              		.loc 1 818 15 view .LVU635
ARM GAS  /tmp/cc6xzGMw.s 			page 100


 2124 01f0 0F22     		movs	r2, #15
 2125 01f2 53E7     		b	.L209
 2126              	.LVL161:
 2127              	.L222:
 906:src/keys.c    **** 			return STATE_UNFINISHED;
 2128              		.loc 1 906 3 is_stmt 1 view .LVU636
 906:src/keys.c    **** 			return STATE_UNFINISHED;
 2129              		.loc 1 906 7 is_stmt 0 view .LVU637
 2130 01f4 1E4B     		ldr	r3, .L240+12
 2131 01f6 DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 2132              	.LVL162:
 906:src/keys.c    **** 			return STATE_UNFINISHED;
 2133              		.loc 1 906 6 view .LVU638
 2134 01f8 9106     		lsls	r1, r2, #26
 2135 01fa DED4     		bmi	.L235
 908:src/keys.c    **** 			return op;
 2136              		.loc 1 908 3 is_stmt 1 view .LVU639
 908:src/keys.c    **** 			return op;
 2137              		.loc 1 908 7 is_stmt 0 view .LVU640
 2138 01fc 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 910:src/keys.c    **** 
 2139              		.loc 1 910 10 view .LVU641
 2140 01fe 13F0400F 		tst	r3, #64
 2141 0202 14BF     		ite	ne
 2142 0204 2246     		movne	r2, r4
 2143 0206 3022     		moveq	r2, #48
 2144 0208 48E7     		b	.L209
 2145              	.LVL163:
 2146              	.L221:
 880:src/keys.c    **** 			return STATE_UNFINISHED;
 2147              		.loc 1 880 3 is_stmt 1 view .LVU642
 880:src/keys.c    **** 			return STATE_UNFINISHED;
 2148              		.loc 1 880 7 is_stmt 0 view .LVU643
 2149 020a FFF7FEFF 		bl	is_bad_cmdline
 2150              	.LVL164:
 880:src/keys.c    **** 			return STATE_UNFINISHED;
 2151              		.loc 1 880 6 view .LVU644
 2152 020e 0028     		cmp	r0, #0
 2153 0210 D3D1     		bne	.L235
 882:src/keys.c    **** 		State2.arrow = 1;
 2154              		.loc 1 882 3 is_stmt 1 view .LVU645
 2155 0212 FFF7FEFF 		bl	process_cmdline_set_lift
 2156              	.LVL165:
 883:src/keys.c    **** #ifdef DM42
 2157              		.loc 1 883 3 view .LVU646
 883:src/keys.c    **** #ifdef DM42
 2158              		.loc 1 883 16 is_stmt 0 view .LVU647
 2159 0216 164A     		ldr	r2, .L240+12
 2160 0218 537D     		ldrb	r3, [r2, #21]	@ zero_extendqisi2
 2161 021a 43F00403 		orr	r3, r3, #4
 2162 021e 5375     		strb	r3, [r2, #21]
 885:src/keys.c    **** 		display_current_menu ();
 2163              		.loc 1 885 3 is_stmt 1 view .LVU648
 2164 0220 0920     		movs	r0, #9
 2165 0222 FFF7FEFF 		bl	set_menu
 2166              	.LVL166:
 886:src/keys.c    **** 		lcd_refresh ();
ARM GAS  /tmp/cc6xzGMw.s 			page 101


 2167              		.loc 1 886 3 view .LVU649
 2168 0226 FFF7FEFF 		bl	display_current_menu
 2169              	.LVL167:
 887:src/keys.c    **** #else
 2170              		.loc 1 887 3 view .LVU650
 2171 022a 124B     		ldr	r3, .L240+16
 2172 022c 9847     		blx	r3
 2173              	.LVL168:
 891:src/keys.c    **** 
 2174              		.loc 1 891 3 view .LVU651
 921:src/keys.c    **** }
 2175              		.loc 1 921 9 is_stmt 0 view .LVU652
 2176 022e 3322     		movs	r2, #51
 891:src/keys.c    **** 
 2177              		.loc 1 891 3 view .LVU653
 2178 0230 34E7     		b	.L209
 2179              	.LVL169:
 2180              	.L224:
 852:src/keys.c    **** 	case K01:
 2181              		.loc 1 852 3 is_stmt 1 view .LVU654
 852:src/keys.c    **** 	case K01:
 2182              		.loc 1 852 10 is_stmt 0 view .LVU655
 2183 0232 2146     		mov	r1, r4
 2184 0234 0020     		movs	r0, #0
 2185              	.LVL170:
 922:src/keys.c    **** 
 2186              		.loc 1 922 1 view .LVU656
 2187 0236 BDE81040 		pop	{r4, lr}
 2188              		.cfi_remember_state
 2189              		.cfi_restore 14
 2190              		.cfi_restore 4
 2191              		.cfi_def_cfa_offset 0
 852:src/keys.c    **** 	case K01:
 2192              		.loc 1 852 10 view .LVU657
 2193 023a FFF7FEBF 		b	check_f_key
 2194              	.LVL171:
 2195              	.L225:
 2196              		.cfi_restore_state
 854:src/keys.c    **** 	case K03:
 2197              		.loc 1 854 3 is_stmt 1 view .LVU658
 854:src/keys.c    **** 	case K03:
 2198              		.loc 1 854 10 is_stmt 0 view .LVU659
 2199 023e 2146     		mov	r1, r4
 2200 0240 0120     		movs	r0, #1
 2201              	.LVL172:
 922:src/keys.c    **** 
 2202              		.loc 1 922 1 view .LVU660
 2203 0242 BDE81040 		pop	{r4, lr}
 2204              		.cfi_remember_state
 2205              		.cfi_restore 14
 2206              		.cfi_restore 4
 2207              		.cfi_def_cfa_offset 0
 854:src/keys.c    **** 	case K03:
 2208              		.loc 1 854 10 view .LVU661
 2209 0246 FFF7FEBF 		b	check_f_key
 2210              	.LVL173:
 2211              	.L239:
ARM GAS  /tmp/cc6xzGMw.s 			page 102


 2212              		.cfi_restore_state
 821:src/keys.c    **** 	    }
 2213              		.loc 1 821 8 is_stmt 1 view .LVU662
 922:src/keys.c    **** 
 2214              		.loc 1 922 1 is_stmt 0 view .LVU663
 2215 024a BDE81040 		pop	{r4, lr}
 2216              		.cfi_remember_state
 2217              		.cfi_restore 14
 2218              		.cfi_restore 4
 2219              		.cfi_def_cfa_offset 0
 821:src/keys.c    **** 	    }
 2220              		.loc 1 821 15 view .LVU664
 2221 024e 0F21     		movs	r1, #15
 2222 0250 FFF7FEBF 		b	check_f_key
 2223              	.LVL174:
 2224              	.L238:
 2225              		.cfi_restore_state
 829:src/keys.c    **** 	    }
 2226              		.loc 1 829 8 is_stmt 1 view .LVU665
 922:src/keys.c    **** 
 2227              		.loc 1 922 1 is_stmt 0 view .LVU666
 2228 0254 BDE81040 		pop	{r4, lr}
 2229              		.cfi_remember_state
 2230              		.cfi_restore 14
 2231              		.cfi_restore 4
 2232              		.cfi_def_cfa_offset 0
 829:src/keys.c    **** 	    }
 2233              		.loc 1 829 15 view .LVU667
 2234 0258 1021     		movs	r1, #16
 2235 025a 0120     		movs	r0, #1
 2236 025c FFF7FEBF 		b	check_f_key
 2237              	.LVL175:
 2238              	.L237:
 2239              		.cfi_restore_state
 842:src/keys.c    **** 	    }
 2240              		.loc 1 842 15 view .LVU668
 2241 0260 1422     		movs	r2, #20
 2242 0262 1BE7     		b	.L209
 2243              	.L241:
 2244              		.align	2
 2245              	.L240:
 2246 0264 00000000 		.word	main_ram
 2247 0268 00000000 		.word	.LANCHOR1
 2248 026c 00000000 		.word	.LANCHOR2
 2249 0270 00000000 		.word	StateWhileOn
 2250 0274 31020008 		.word	134218289
 2251              		.cfi_endproc
 2252              	.LFE19:
 2254              		.section	.text.process_fg_shifted,"ax",%progbits
 2255              		.align	1
 2256              		.p2align 2,,3
 2257              		.syntax unified
 2258              		.thumb
 2259              		.thumb_func
 2260              		.fpu fpv4-sp-d16
 2262              	process_fg_shifted:
 2263              	.LVL176:
ARM GAS  /tmp/cc6xzGMw.s 			page 103


 2264              	.LFB20:
 928:src/keys.c    **** 
 2265              		.loc 1 928 48 is_stmt 1 view -0
 2266              		.cfi_startproc
 2267              		@ args = 0, pretend = 0, frame = 0
 2268              		@ frame_needed = 0, uses_anonymous_args = 0
 931:src/keys.c    **** 		// Row 1
 2269              		.loc 1 931 2 view .LVU670
 982:src/keys.c    **** 		STATE_UNFINISHED,
 2270              		.loc 1 982 2 view .LVU671
 989:src/keys.c    **** 	int lc = keycode_to_linear(c);
 2271              		.loc 1 989 2 view .LVU672
 2272              	.LBB364:
 2273              	.LBI364:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 2274              		.loc 1 114 13 view .LVU673
 2275              	.LBE364:
 115:src/keys.c    **** }
 2276              		.loc 1 115 2 view .LVU674
 2277              	.LBB381:
 2278              	.LBB365:
 2279              	.LBI365:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 2280              		.loc 1 104 20 view .LVU675
 2281              	.LBB366:
 105:src/keys.c    **** 	State2.shifts = shift;
 2282              		.loc 1 105 2 view .LVU676
 2283              	.LBB367:
 2284              	.LBI367:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 2285              		.loc 1 96 13 view .LVU677
 2286              	.LBB368:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2287              		.loc 1 97 2 view .LVU678
 2288              	.LBE368:
 2289              	.LBE367:
 2290              	.LBE366:
 2291              	.LBE365:
 2292              	.LBE381:
 928:src/keys.c    **** 
 2293              		.loc 1 928 48 is_stmt 0 view .LVU679
 2294 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2295              		.cfi_def_cfa_offset 24
 2296              		.cfi_offset 4, -24
 2297              		.cfi_offset 5, -20
 2298              		.cfi_offset 6, -16
 2299              		.cfi_offset 7, -12
 2300              		.cfi_offset 8, -8
 2301              		.cfi_offset 14, -4
 928:src/keys.c    **** 
 2302              		.loc 1 928 48 view .LVU680
 2303 0004 0446     		mov	r4, r0
 2304              	.LBB382:
 2305              	.LBB377:
 2306              	.LBB373:
 2307              	.LBB371:
 2308              	.LBB369:
ARM GAS  /tmp/cc6xzGMw.s 			page 104


  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2309              		.loc 1 97 18 view .LVU681
 2310 0006 FFF7FEFF 		bl	shift_down
 2311              	.LVL177:
  98:src/keys.c    **** }
 2312              		.loc 1 98 2 is_stmt 1 view .LVU682
  98:src/keys.c    **** }
 2313              		.loc 1 98 52 is_stmt 0 view .LVU683
 2314 000a 0028     		cmp	r0, #0
 2315 000c 72D0     		beq	.L289
 2316 000e DFF89482 		ldr	r8, .L303+16
 2317 0012 0546     		mov	r5, r0
 2318              	.L243:
 2319              	.LVL178:
  98:src/keys.c    **** }
 2320              		.loc 1 98 52 view .LVU684
 2321              	.LBE369:
 2322              	.LBE371:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2323              		.loc 1 106 2 is_stmt 1 view .LVU685
 2324              	.LBE373:
 2325              	.LBE377:
 2326              	.LBE382:
 2327              	.LBB383:
 2328              	.LBB384:
 158:src/keys.c    **** }
 2329              		.loc 1 158 23 is_stmt 0 view .LVU686
 2330 0014 9F4B     		ldr	r3, .L303
 2331              	.LBE384:
 2332              	.LBE383:
 991:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2333              		.loc 1 991 21 view .LVU687
 2334 0016 A049     		ldr	r1, .L303+4
 2335              	.LBB387:
 2336              	.LBB385:
 158:src/keys.c    **** }
 2337              		.loc 1 158 23 view .LVU688
 2338 0018 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 2339              	.LBE385:
 2340              	.LBE387:
 991:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2341              		.loc 1 991 21 view .LVU689
 2342 001a 4300     		lsls	r3, r0, #1
 2343 001c 022D     		cmp	r5, #2
 2344 001e 08BF     		it	eq
 2345 0020 0133     		addeq	r3, r3, #1
 2346              	.LBB388:
 2347              	.LBB378:
 2348              	.LBB374:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2349              		.loc 1 106 16 view .LVU690
 2350 0022 0022     		movs	r2, #0
 2351              	.LBE374:
 2352              	.LBE378:
 2353              	.LBE388:
 991:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2354              		.loc 1 991 21 view .LVU691
ARM GAS  /tmp/cc6xzGMw.s 			page 105


 2355 0024 31F81360 		ldrh	r6, [r1, r3, lsl #1]
 2356              	.LBB389:
 2357              	.LBB379:
 2358              	.LBB375:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2359              		.loc 1 106 16 view .LVU692
 2360 0028 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 2361              		.loc 1 108 2 is_stmt 1 view .LVU693
 2362              	.LVL179:
 108:src/keys.c    **** }
 2363              		.loc 1 108 2 is_stmt 0 view .LVU694
 2364              	.LBE375:
 2365              	.LBE379:
 2366              	.LBE389:
 990:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 2367              		.loc 1 990 2 is_stmt 1 view .LVU695
 2368              	.LBB390:
 2369              	.LBI383:
 146:src/keys.c    **** {
 2370              		.loc 1 146 12 view .LVU696
 2371              	.LBB386:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 2372              		.loc 1 148 2 view .LVU697
 158:src/keys.c    **** }
 2373              		.loc 1 158 2 view .LVU698
 158:src/keys.c    **** }
 2374              		.loc 1 158 2 is_stmt 0 view .LVU699
 2375              	.LBE386:
 2376              	.LBE390:
 991:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2377              		.loc 1 991 2 is_stmt 1 view .LVU700
 992:src/keys.c    **** 	if (no_int)
 2378              		.loc 1 992 2 view .LVU701
 2379 002c 06F47047 		and	r7, r6, #61440
 2380              	.LVL180:
 993:src/keys.c    **** 		op &= ~NO_INT;
 2381              		.loc 1 993 2 view .LVU702
 993:src/keys.c    **** 		op &= ~NO_INT;
 2382              		.loc 1 993 5 is_stmt 0 view .LVU703
 2383 0030 B7F5704F 		cmp	r7, #61440
 2384 0034 63D0     		beq	.L297
 996:src/keys.c    **** 	case K00:
 2385              		.loc 1 996 2 is_stmt 1 view .LVU704
 2386 0036 282C     		cmp	r4, #40
 2387 0038 34D8     		bhi	.L264
 2388 003a DFE804F0 		tbb	[pc, r4]
 2389              	.L265:
 2390 003e D3       		.byte	(.L255-.L265)/2
 2391 003f 39       		.byte	(.L253-.L265)/2
 2392 0040 33       		.byte	(.L264-.L265)/2
 2393 0041 39       		.byte	(.L253-.L265)/2
 2394 0042 33       		.byte	(.L264-.L265)/2
 2395 0043 33       		.byte	(.L264-.L265)/2
 2396 0044 33       		.byte	(.L264-.L265)/2
 2397 0045 33       		.byte	(.L264-.L265)/2
 2398 0046 33       		.byte	(.L264-.L265)/2
ARM GAS  /tmp/cc6xzGMw.s 			page 106


 2399 0047 33       		.byte	(.L264-.L265)/2
 2400 0048 33       		.byte	(.L264-.L265)/2
 2401 0049 33       		.byte	(.L264-.L265)/2
 2402 004a 15       		.byte	(.L252-.L265)/2
 2403 004b 33       		.byte	(.L264-.L265)/2
 2404 004c 33       		.byte	(.L264-.L265)/2
 2405 004d 33       		.byte	(.L264-.L265)/2
 2406 004e 33       		.byte	(.L264-.L265)/2
 2407 004f 33       		.byte	(.L264-.L265)/2
 2408 0050 E0       		.byte	(.L251-.L265)/2
 2409 0051 B9       		.byte	(.L250-.L265)/2
 2410 0052 33       		.byte	(.L264-.L265)/2
 2411 0053 33       		.byte	(.L264-.L265)/2
 2412 0054 33       		.byte	(.L264-.L265)/2
 2413 0055 33       		.byte	(.L264-.L265)/2
 2414 0056 33       		.byte	(.L264-.L265)/2
 2415 0057 33       		.byte	(.L264-.L265)/2
 2416 0058 33       		.byte	(.L264-.L265)/2
 2417 0059 33       		.byte	(.L264-.L265)/2
 2418 005a 33       		.byte	(.L264-.L265)/2
 2419 005b 33       		.byte	(.L264-.L265)/2
 2420 005c 44       		.byte	(.L249-.L265)/2
 2421 005d CB       		.byte	(.L248-.L265)/2
 2422 005e 49       		.byte	(.L246-.L265)/2
 2423 005f 49       		.byte	(.L246-.L265)/2
 2424 0060 33       		.byte	(.L264-.L265)/2
 2425 0061 33       		.byte	(.L264-.L265)/2
 2426 0062 33       		.byte	(.L264-.L265)/2
 2427 0063 33       		.byte	(.L264-.L265)/2
 2428 0064 33       		.byte	(.L264-.L265)/2
 2429 0065 49       		.byte	(.L246-.L265)/2
 2430 0066 49       		.byte	(.L246-.L265)/2
 2431 0067 00       		.p2align 1
 2432              	.L252:
1029:src/keys.c    **** 			if (is_bad_cmdline())
 2433              		.loc 1 1029 3 view .LVU705
1029:src/keys.c    **** 			if (is_bad_cmdline())
 2434              		.loc 1 1029 6 is_stmt 0 view .LVU706
 2435 0068 012D     		cmp	r5, #1
 2436 006a 11D1     		bne	.L258
1030:src/keys.c    **** 				return STATE_UNFINISHED;
 2437              		.loc 1 1030 4 is_stmt 1 view .LVU707
1030:src/keys.c    **** 				return STATE_UNFINISHED;
 2438              		.loc 1 1030 8 is_stmt 0 view .LVU708
 2439 006c FFF7FEFF 		bl	is_bad_cmdline
 2440              	.LVL181:
1030:src/keys.c    **** 				return STATE_UNFINISHED;
 2441              		.loc 1 1030 7 view .LVU709
 2442 0070 0028     		cmp	r0, #0
 2443 0072 40F0B380 		bne	.L291
1032:src/keys.c    **** 			State2.alphas = 1;
 2444              		.loc 1 1032 4 is_stmt 1 view .LVU710
 2445 0076 FFF7FEFF 		bl	process_cmdline_set_lift
 2446              	.LVL182:
1033:src/keys.c    **** #ifdef DM42
 2447              		.loc 1 1033 4 view .LVU711
1033:src/keys.c    **** #ifdef DM42
ARM GAS  /tmp/cc6xzGMw.s 			page 107


 2448              		.loc 1 1033 18 is_stmt 0 view .LVU712
 2449 007a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
1035:src/keys.c    **** 			display_current_menu();
 2450              		.loc 1 1035 4 view .LVU713
 2451 007e 1020     		movs	r0, #16
1033:src/keys.c    **** #ifdef DM42
 2452              		.loc 1 1033 18 view .LVU714
 2453 0080 43F00803 		orr	r3, r3, #8
 2454 0084 88F81630 		strb	r3, [r8, #22]
1035:src/keys.c    **** 			display_current_menu();
 2455              		.loc 1 1035 4 is_stmt 1 view .LVU715
 2456 0088 FFF7FEFF 		bl	set_menu
 2457              	.LVL183:
1036:src/keys.c    **** #endif
 2458              		.loc 1 1036 4 view .LVU716
 2459 008c FFF7FEFF 		bl	display_current_menu
 2460              	.LVL184:
 2461              	.L258:
1081:src/keys.c    **** 		return STATE_UNFINISHED;
 2462              		.loc 1 1081 2 view .LVU717
1081:src/keys.c    **** 		return STATE_UNFINISHED;
 2463              		.loc 1 1081 5 is_stmt 0 view .LVU718
 2464 0090 B7F5704F 		cmp	r7, #61440
 2465 0094 06D1     		bne	.L264
 2466              	.L245:
1081:src/keys.c    **** 		return STATE_UNFINISHED;
 2467              		.loc 1 1081 13 discriminator 1 view .LVU719
 2468 0096 814B     		ldr	r3, .L303+8
 2469 0098 1B68     		ldr	r3, [r3]
 2470 009a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2471 009e DA07     		lsls	r2, r3, #31
 2472 00a0 00F19C80 		bmi	.L291
 2473              	.L264:
1084:src/keys.c    **** #undef NO_INT
 2474              		.loc 1 1084 2 is_stmt 1 view .LVU720
 2475              	.LVL185:
 2476              	.LBB391:
 2477              	.LBI391:
 704:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 2478              		.loc 1 704 12 view .LVU721
 2479              	.LBB392:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 2480              		.loc 1 705 2 view .LVU722
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 2481              		.loc 1 705 6 is_stmt 0 view .LVU723
 2482 00a4 3312     		asrs	r3, r6, #8
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 2483              		.loc 1 705 5 view .LVU724
 2484 00a6 012B     		cmp	r3, #1
 2485 00a8 1FD0     		beq	.L267
 2486              	.LVL186:
 2487              	.L242:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 2488              		.loc 1 705 5 view .LVU725
 2489              	.LBE392:
 2490              	.LBE391:
1086:src/keys.c    **** 
ARM GAS  /tmp/cc6xzGMw.s 			page 108


 2491              		.loc 1 1086 1 view .LVU726
 2492 00aa 3046     		mov	r0, r6
 2493 00ac BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2494              	.LVL187:
 2495              	.L253:
1018:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2496              		.loc 1 1018 4 is_stmt 1 view .LVU727
1018:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2497              		.loc 1 1018 8 is_stmt 0 view .LVU728
 2498 00b0 7A4B     		ldr	r3, .L303+8
 2499 00b2 1B68     		ldr	r3, [r3]
 2500 00b4 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1018:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2501              		.loc 1 1018 7 view .LVU729
 2502 00b8 DB07     		lsls	r3, r3, #31
 2503 00ba 00F19980 		bmi	.L294
1081:src/keys.c    **** 		return STATE_UNFINISHED;
 2504              		.loc 1 1081 2 is_stmt 1 view .LVU730
1081:src/keys.c    **** 		return STATE_UNFINISHED;
 2505              		.loc 1 1081 5 is_stmt 0 view .LVU731
 2506 00be B7F5704F 		cmp	r7, #61440
 2507 00c2 EFD1     		bne	.L264
 2508 00c4 E7E7     		b	.L245
 2509              	.L249:
1061:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 2510              		.loc 1 1061 3 is_stmt 1 view .LVU732
1061:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 2511              		.loc 1 1061 18 is_stmt 0 view .LVU733
 2512 00c6 FFF7FEFF 		bl	shift_down
 2513              	.LVL188:
1061:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 2514              		.loc 1 1061 6 view .LVU734
 2515 00ca 0028     		cmp	r0, #0
 2516 00cc 40F0BA80 		bne	.L298
 2517              	.L246:
1070:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 2518              		.loc 1 1070 3 is_stmt 1 view .LVU735
1070:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 2519              		.loc 1 1070 6 is_stmt 0 view .LVU736
 2520 00d0 B6F59C7F 		cmp	r6, #312
 2521 00d4 40F0A580 		bne	.L299
1081:src/keys.c    **** 		return STATE_UNFINISHED;
 2522              		.loc 1 1081 2 is_stmt 1 view .LVU737
1081:src/keys.c    **** 		return STATE_UNFINISHED;
 2523              		.loc 1 1081 5 is_stmt 0 view .LVU738
 2524 00d8 B7F5704F 		cmp	r7, #61440
 2525 00dc 05D1     		bne	.L267
1081:src/keys.c    **** 		return STATE_UNFINISHED;
 2526              		.loc 1 1081 13 view .LVU739
 2527 00de 6F4B     		ldr	r3, .L303+8
 2528 00e0 1B68     		ldr	r3, [r3]
 2529 00e2 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2530 00e6 DB07     		lsls	r3, r3, #31
 2531 00e8 78D4     		bmi	.L291
 2532              	.LVL189:
 2533              	.L267:
 2534              	.LBB395:
ARM GAS  /tmp/cc6xzGMw.s 			page 109


 2535              	.LBB393:
1081:src/keys.c    **** 		return STATE_UNFINISHED;
 2536              		.loc 1 1081 13 view .LVU740
 2537 00ea 3046     		mov	r0, r6
 2538              	.LBE393:
 2539              	.LBE395:
1086:src/keys.c    **** 
 2540              		.loc 1 1086 1 view .LVU741
 2541 00ec BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 2542              		.cfi_remember_state
 2543              		.cfi_restore 14
 2544              		.cfi_restore 8
 2545              		.cfi_restore 7
 2546              		.cfi_restore 6
 2547              		.cfi_restore 5
 2548              		.cfi_restore 4
 2549              		.cfi_def_cfa_offset 0
 2550              	.LVL190:
 2551              	.LBB396:
 2552              	.LBB394:
1086:src/keys.c    **** 
 2553              		.loc 1 1086 1 view .LVU742
 2554 00f0 FFF7FEBF 		b	check_confirm.part.0
 2555              	.LVL191:
 2556              	.L289:
 2557              		.cfi_restore_state
1086:src/keys.c    **** 
 2558              		.loc 1 1086 1 view .LVU743
 2559              	.LBE394:
 2560              	.LBE396:
 2561              	.LBB397:
 2562              	.LBB380:
 2563              	.LBB376:
 2564              	.LBB372:
 2565              	.LBB370:
  98:src/keys.c    **** }
 2566              		.loc 1 98 52 view .LVU744
 2567 00f4 DFF8AC81 		ldr	r8, .L303+16
 2568 00f8 98F81050 		ldrb	r5, [r8, #16]	@ zero_extendqisi2
 2569 00fc 8AE7     		b	.L243
 2570              	.LVL192:
 2571              	.L297:
  98:src/keys.c    **** }
 2572              		.loc 1 98 52 view .LVU745
 2573              	.LBE370:
 2574              	.LBE372:
 2575              	.LBE376:
 2576              	.LBE380:
 2577              	.LBE397:
 994:src/keys.c    **** 
 2578              		.loc 1 994 3 is_stmt 1 view .LVU746
 994:src/keys.c    **** 
 2579              		.loc 1 994 6 is_stmt 0 view .LVU747
 2580 00fe 26F47046 		bic	r6, r6, #61440
 2581              	.LVL193:
 996:src/keys.c    **** 	case K00:
 2582              		.loc 1 996 2 is_stmt 1 view .LVU748
ARM GAS  /tmp/cc6xzGMw.s 			page 110


 2583 0102 282C     		cmp	r4, #40
 2584 0104 C7D8     		bhi	.L245
 2585 0106 01A3     		adr	r3, .L247
 2586 0108 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 2587              		.p2align 2
 2588              	.L247:
 2589 010c E5010000 		.word	.L255+1
 2590 0110 B1000000 		.word	.L253+1
 2591 0114 97000000 		.word	.L245+1
 2592 0118 B1000000 		.word	.L253+1
 2593 011c 97000000 		.word	.L245+1
 2594 0120 97000000 		.word	.L245+1
 2595 0124 97000000 		.word	.L245+1
 2596 0128 97000000 		.word	.L245+1
 2597 012c 97000000 		.word	.L245+1
 2598 0130 97000000 		.word	.L245+1
 2599 0134 97000000 		.word	.L245+1
 2600 0138 97000000 		.word	.L245+1
 2601 013c 69000000 		.word	.L252+1
 2602 0140 97000000 		.word	.L245+1
 2603 0144 97000000 		.word	.L245+1
 2604 0148 97000000 		.word	.L245+1
 2605 014c 97000000 		.word	.L245+1
 2606 0150 97000000 		.word	.L245+1
 2607 0154 FF010000 		.word	.L251+1
 2608 0158 B1010000 		.word	.L250+1
 2609 015c 97000000 		.word	.L245+1
 2610 0160 97000000 		.word	.L245+1
 2611 0164 97000000 		.word	.L245+1
 2612 0168 97000000 		.word	.L245+1
 2613 016c 97000000 		.word	.L245+1
 2614 0170 97000000 		.word	.L245+1
 2615 0174 97000000 		.word	.L245+1
 2616 0178 97000000 		.word	.L245+1
 2617 017c 97000000 		.word	.L245+1
 2618 0180 97000000 		.word	.L245+1
 2619 0184 C7000000 		.word	.L249+1
 2620 0188 D5010000 		.word	.L248+1
 2621 018c D1000000 		.word	.L246+1
 2622 0190 D1000000 		.word	.L246+1
 2623 0194 97000000 		.word	.L245+1
 2624 0198 97000000 		.word	.L245+1
 2625 019c 97000000 		.word	.L245+1
 2626 01a0 97000000 		.word	.L245+1
 2627 01a4 97000000 		.word	.L245+1
 2628 01a8 D1000000 		.word	.L246+1
 2629 01ac D1000000 		.word	.L246+1
 2630              		.p2align 1
 2631              	.L250:
1042:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2632              		.loc 1 1042 4 view .LVU749
1042:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2633              		.loc 1 1042 7 is_stmt 0 view .LVU750
 2634 01b0 022D     		cmp	r5, #2
 2635 01b2 7FF46DAF 		bne	.L258
1042:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2636              		.loc 1 1042 27 discriminator 1 view .LVU751
ARM GAS  /tmp/cc6xzGMw.s 			page 111


 2637 01b6 394B     		ldr	r3, .L303+8
 2638 01b8 1B68     		ldr	r3, [r3]
 2639 01ba 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2640 01be DC07     		lsls	r4, r3, #31
 2641 01c0 7FF566AF 		bpl	.L258
1042:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2642              		.loc 1 1042 45 discriminator 2 view .LVU752
 2643 01c4 0D20     		movs	r0, #13
 2644              	.LVL194:
1042:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2645              		.loc 1 1042 45 discriminator 2 view .LVU753
 2646 01c6 FFF7FEFF 		bl	intltr
 2647              	.LVL195:
1042:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2648              		.loc 1 1042 42 discriminator 2 view .LVU754
 2649 01ca 0028     		cmp	r0, #0
 2650 01cc 3FF460AF 		beq	.L258
1043:src/keys.c    **** 	  }
 2651              		.loc 1 1043 13 view .LVU755
 2652 01d0 1226     		movs	r6, #18
 2653              	.LVL196:
1043:src/keys.c    **** 	  }
 2654              		.loc 1 1043 13 view .LVU756
 2655 01d2 6AE7     		b	.L242
 2656              	.LVL197:
 2657              	.L248:
1053:src/keys.c    **** 			return STATE_UNFINISHED;
 2658              		.loc 1 1053 3 is_stmt 1 view .LVU757
1053:src/keys.c    **** 			return STATE_UNFINISHED;
 2659              		.loc 1 1053 7 is_stmt 0 view .LVU758
 2660 01d4 FFF7FEFF 		bl	is_bad_cmdline
 2661              	.LVL198:
1053:src/keys.c    **** 			return STATE_UNFINISHED;
 2662              		.loc 1 1053 6 view .LVU759
 2663 01d8 0028     		cmp	r0, #0
 2664 01da 40D0     		beq	.L300
 2665              	.LVL199:
 2666              	.L291:
1074:src/keys.c    **** 		}
 2667              		.loc 1 1074 11 view .LVU760
 2668 01dc 3326     		movs	r6, #51
 2669              	.LVL200:
1086:src/keys.c    **** 
 2670              		.loc 1 1086 1 view .LVU761
 2671 01de 3046     		mov	r0, r6
 2672 01e0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2673              	.LVL201:
 2674              	.L255:
 998:src/keys.c    **** 	    //	    print_debug(100,0);
 2675              		.loc 1 998 4 is_stmt 1 view .LVU762
 998:src/keys.c    **** 	    //	    print_debug(100,0);
 2676              		.loc 1 998 8 is_stmt 0 view .LVU763
 2677 01e4 2D4B     		ldr	r3, .L303+8
 2678 01e6 1B68     		ldr	r3, [r3]
 2679 01e8 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 998:src/keys.c    **** 	    //	    print_debug(100,0);
 2680              		.loc 1 998 7 view .LVU764
ARM GAS  /tmp/cc6xzGMw.s 			page 112


 2681 01ec DA07     		lsls	r2, r3, #31
 2682 01ee 3CD5     		bpl	.L301
 2683              	.L294:
1018:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2684              		.loc 1 1018 20 discriminator 1 view .LVU765
 2685 01f0 012D     		cmp	r5, #1
 2686 01f2 48D0     		beq	.L302
1081:src/keys.c    **** 		return STATE_UNFINISHED;
 2687              		.loc 1 1081 2 is_stmt 1 view .LVU766
1081:src/keys.c    **** 		return STATE_UNFINISHED;
 2688              		.loc 1 1081 5 is_stmt 0 view .LVU767
 2689 01f4 B7F5704F 		cmp	r7, #61440
 2690 01f8 7FF454AF 		bne	.L264
 2691 01fc EEE7     		b	.L291
 2692              	.L251:
1047:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2693              		.loc 1 1047 4 is_stmt 1 view .LVU768
1047:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2694              		.loc 1 1047 7 is_stmt 0 view .LVU769
 2695 01fe 022D     		cmp	r5, #2
 2696 0200 7FF446AF 		bne	.L258
1047:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2697              		.loc 1 1047 27 discriminator 1 view .LVU770
 2698 0204 254B     		ldr	r3, .L303+8
 2699 0206 1B68     		ldr	r3, [r3]
 2700 0208 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2701 020c D807     		lsls	r0, r3, #31
 2702              	.LVL202:
1047:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2703              		.loc 1 1047 27 discriminator 1 view .LVU771
 2704 020e 7FF53FAF 		bpl	.L258
1047:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2705              		.loc 1 1047 45 discriminator 2 view .LVU772
 2706 0212 0E20     		movs	r0, #14
 2707 0214 FFF7FEFF 		bl	intltr
 2708              	.LVL203:
1047:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2709              		.loc 1 1047 42 discriminator 2 view .LVU773
 2710 0218 0028     		cmp	r0, #0
 2711 021a 3FF439AF 		beq	.L258
1048:src/keys.c    **** 	  }
 2712              		.loc 1 1048 13 view .LVU774
 2713 021e 1326     		movs	r6, #19
 2714              	.LVL204:
1048:src/keys.c    **** 	  }
 2715              		.loc 1 1048 13 view .LVU775
 2716 0220 43E7     		b	.L242
 2717              	.LVL205:
 2718              	.L299:
1071:src/keys.c    **** 				init_arg((enum rarg) op);
 2719              		.loc 1 1071 4 is_stmt 1 view .LVU776
1071:src/keys.c    **** 				init_arg((enum rarg) op);
 2720              		.loc 1 1071 7 is_stmt 0 view .LVU777
 2721 0222 B7F5704F 		cmp	r7, #61440
 2722 0226 05D1     		bne	.L263
1071:src/keys.c    **** 				init_arg((enum rarg) op);
 2723              		.loc 1 1071 18 discriminator 1 view .LVU778
ARM GAS  /tmp/cc6xzGMw.s 			page 113


 2724 0228 1C4B     		ldr	r3, .L303+8
 2725 022a 1B68     		ldr	r3, [r3]
 2726 022c 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1071:src/keys.c    **** 				init_arg((enum rarg) op);
 2727              		.loc 1 1071 8 discriminator 1 view .LVU779
 2728 0230 D907     		lsls	r1, r3, #31
 2729 0232 D3D4     		bmi	.L291
 2730              	.L263:
1072:src/keys.c    **** 			}
 2731              		.loc 1 1072 5 is_stmt 1 view .LVU780
 2732              	.LVL206:
 2733              	.LBB398:
 2734              	.LBI398:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 2735              		.loc 1 552 13 view .LVU781
 2736              	.LBB399:
 553:src/keys.c    **** 		return;
 2737              		.loc 1 553 2 view .LVU782
 553:src/keys.c    **** 		return;
 2738              		.loc 1 553 6 is_stmt 0 view .LVU783
 2739 0234 FFF7FEFF 		bl	is_bad_cmdline
 2740              	.LVL207:
 553:src/keys.c    **** 		return;
 2741              		.loc 1 553 5 view .LVU784
 2742 0238 0028     		cmp	r0, #0
 2743 023a CFD1     		bne	.L291
 2744 023c F0B2     		uxtb	r0, r6
 2745 023e FFF7FEFF 		bl	init_arg.part.0
 2746              	.LVL208:
 2747 0242 CBE7     		b	.L291
 2748              	.LVL209:
 2749              	.L298:
 553:src/keys.c    **** 		return;
 2750              		.loc 1 553 5 view .LVU785
 2751              	.LBE399:
 2752              	.LBE398:
1062:src/keys.c    **** 			return STATE_UNFINISHED;
 2753              		.loc 1 1062 4 is_stmt 1 view .LVU786
1062:src/keys.c    **** 			return STATE_UNFINISHED;
 2754              		.loc 1 1062 26 is_stmt 0 view .LVU787
 2755 0244 A5F10105 		sub	r5, #1
 2756              	.LVL210:
1062:src/keys.c    **** 			return STATE_UNFINISHED;
 2757              		.loc 1 1062 17 view .LVU788
 2758 0248 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
1062:src/keys.c    **** 			return STATE_UNFINISHED;
 2759              		.loc 1 1062 26 view .LVU789
 2760 024c B5FA85F5 		clz	r5, r5
 2761 0250 6D09     		lsrs	r5, r5, #5
1062:src/keys.c    **** 			return STATE_UNFINISHED;
 2762              		.loc 1 1062 17 view .LVU790
 2763 0252 65F3C713 		bfi	r3, r5, #7, #1
 2764 0256 88F81730 		strb	r3, [r8, #23]
1063:src/keys.c    **** 		}
 2765              		.loc 1 1063 4 is_stmt 1 view .LVU791
1063:src/keys.c    **** 		}
 2766              		.loc 1 1063 11 is_stmt 0 view .LVU792
ARM GAS  /tmp/cc6xzGMw.s 			page 114


 2767 025a 3326     		movs	r6, #51
 2768              	.LVL211:
1063:src/keys.c    **** 		}
 2769              		.loc 1 1063 11 view .LVU793
 2770 025c 25E7     		b	.L242
 2771              	.LVL212:
 2772              	.L300:
1055:src/keys.c    **** 		State2.test = op;
 2773              		.loc 1 1055 3 is_stmt 1 view .LVU794
 2774 025e FFF7FEFF 		bl	process_cmdline_set_lift
 2775              	.LVL213:
1056:src/keys.c    **** 		return STATE_UNFINISHED;
 2776              		.loc 1 1056 3 view .LVU795
1056:src/keys.c    **** 		return STATE_UNFINISHED;
 2777              		.loc 1 1056 15 is_stmt 0 view .LVU796
 2778 0262 88F80F60 		strb	r6, [r8, #15]
1057:src/keys.c    **** 
 2779              		.loc 1 1057 3 is_stmt 1 view .LVU797
1057:src/keys.c    **** 
 2780              		.loc 1 1057 10 is_stmt 0 view .LVU798
 2781 0266 3326     		movs	r6, #51
 2782              	.LVL214:
1057:src/keys.c    **** 
 2783              		.loc 1 1057 10 view .LVU799
 2784 0268 1FE7     		b	.L242
 2785              	.LVL215:
 2786              	.L301:
1000:src/keys.c    **** 	    State2.dot = op;
 2787              		.loc 1 1000 6 is_stmt 1 view .LVU800
1001:src/keys.c    **** 	    // State2.cmplx = 0;
 2788              		.loc 1 1001 6 view .LVU801
1000:src/keys.c    **** 	    State2.dot = op;
 2789              		.loc 1 1000 17 is_stmt 0 view .LVU802
 2790 026a 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 2791 026e 06F00103 		and	r3, r6, #1
 2792 0272 9B01     		lsls	r3, r3, #6
 2793 0274 43F02003 		orr	r3, r3, #32
 2794 0278 22F06002 		bic	r2, r2, #96
 2795 027c 1343     		orrs	r3, r3, r2
 2796 027e 88F81530 		strb	r3, [r8, #21]
1003:src/keys.c    **** 	  }
 2797              		.loc 1 1003 6 is_stmt 1 view .LVU803
1003:src/keys.c    **** 	  }
 2798              		.loc 1 1003 13 is_stmt 0 view .LVU804
 2799 0282 3326     		movs	r6, #51
 2800              	.LVL216:
1003:src/keys.c    **** 	  }
 2801              		.loc 1 1003 13 view .LVU805
 2802 0284 11E7     		b	.L242
 2803              	.LVL217:
 2804              	.L302:
1019:src/keys.c    **** 		}
 2805              		.loc 1 1019 4 is_stmt 1 view .LVU806
1019:src/keys.c    **** 		}
 2806              		.loc 1 1019 34 is_stmt 0 view .LVU807
 2807 0286 064B     		ldr	r3, .L303+12
1086:src/keys.c    **** 
ARM GAS  /tmp/cc6xzGMw.s 			page 115


 2808              		.loc 1 1086 1 view .LVU808
 2809 0288 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 2810              		.cfi_restore 14
 2811              		.cfi_restore 8
 2812              		.cfi_restore 7
 2813              		.cfi_restore 6
 2814              		.cfi_restore 5
 2815              		.cfi_restore 4
 2816              		.cfi_def_cfa_offset 0
 2817              	.LVL218:
1019:src/keys.c    **** 		}
 2818              		.loc 1 1019 11 view .LVU809
 2819 028c 33F81010 		ldrh	r1, [r3, r0, lsl #1]
 2820 0290 FFF7FEBF 		b	check_f_key
 2821              	.LVL219:
 2822              	.L304:
1019:src/keys.c    **** 		}
 2823              		.loc 1 1019 11 view .LVU810
 2824              		.align	2
 2825              	.L303:
 2826 0294 00000000 		.word	.LANCHOR1
 2827 0298 00000000 		.word	.LANCHOR3
 2828 029c 00000000 		.word	main_ram
 2829 02a0 00000000 		.word	.LANCHOR4
 2830 02a4 00000000 		.word	StateWhileOn
 2831              		.cfi_endproc
 2832              	.LFE20:
 2834              		.section	.text.set_window,"ax",%progbits
 2835              		.align	1
 2836              		.p2align 2,,3
 2837              		.syntax unified
 2838              		.thumb
 2839              		.thumb_func
 2840              		.fpu fpv4-sp-d16
 2842              	set_window:
 2843              	.LVL220:
 2844              	.LFB58:
2984:src/keys.c    **** 
2985:src/keys.c    **** 
2986:src/keys.c    **** /*
2987:src/keys.c    ****  *  CAT command
2988:src/keys.c    ****  */
2989:src/keys.c    **** static int process_labellist(const keycode c) {
2990:src/keys.c    **** 	unsigned int pc = State2.digval;
2991:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
2992:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
2993:src/keys.c    **** 	const int opcode = getprog(pc);
2994:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
2995:src/keys.c    **** 	const int direct = State2.runmode;
2996:src/keys.c    **** 	const enum shifts shift = reset_shift();
2997:src/keys.c    **** 	int op = STATE_UNFINISHED;
2998:src/keys.c    **** 
2999:src/keys.c    **** 	if (n < REGION_XROM) {
3000:src/keys.c    **** 		// Digits take you to that segment
3001:src/keys.c    **** 		pc = addrLIB(1, n);
3002:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
3003:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
ARM GAS  /tmp/cc6xzGMw.s 			page 116


3004:src/keys.c    **** 		State2.digval = pc;
3005:src/keys.c    **** 		return STATE_UNFINISHED;
3006:src/keys.c    **** 	}
3007:src/keys.c    **** 
3008:src/keys.c    **** 	switch (c | (shift << 8)) {
3009:src/keys.c    **** 
3010:src/keys.c    **** 	case K_UP | (SHIFT_F << 8):		// Find first label of previous program
3011:src/keys.c    **** 		pc = advance_to_previous_label(advance_to_previous_label(pc, 1), 1);
3012:src/keys.c    **** 		goto next;
3013:src/keys.c    **** 
3014:src/keys.c    **** 	case K_DOWN | (SHIFT_F << 8):		// Find next program
3015:src/keys.c    **** 		pc = advance_to_next_label(pc, 0, 1);
3016:src/keys.c    **** 	case K_DOWN:				// Find next label
3017:src/keys.c    **** 	next:
3018:src/keys.c    **** 		State2.digval = advance_to_next_label(pc, 1, 0);
3019:src/keys.c    **** 		return STATE_UNFINISHED;
3020:src/keys.c    **** 
3021:src/keys.c    **** 	case K_UP:				// Find previous label
3022:src/keys.c    **** 		State2.digval = advance_to_previous_label(pc, 0);
3023:src/keys.c    **** 		return STATE_UNFINISHED;
3024:src/keys.c    **** 
3025:src/keys.c    **** 	case K24:				// <- exits
3026:src/keys.c    **** 		break;
3027:src/keys.c    **** 
3028:src/keys.c    **** 	case K20:				// ENTER^
3029:src/keys.c    **** 	set_pc_and_exit:
3030:src/keys.c    **** 		set_pc(pc);			// forced branch
3031:src/keys.c    **** 		break;
3032:src/keys.c    **** 
3033:src/keys.c    **** 	case K24 | (SHIFT_F << 8):		// CLP
3034:src/keys.c    **** 		op = (OP_NIL | OP_CLPROG);
3035:src/keys.c    **** 		goto set_pc_and_exit;
3036:src/keys.c    **** 
3037:src/keys.c    **** 	case K10:				// STO
3038:src/keys.c    **** 	case K11:				// RCL
3039:src/keys.c    **** 	  //#ifndef DM42	
3040:src/keys.c    **** 		op = c == K10 ? (OP_NIL | OP_PSTO) : (OP_NIL | OP_PRCL);
3041:src/keys.c    **** 	  //#endif
3042:src/keys.c    **** /* #ifdef DM42 */
3043:src/keys.c    **** /* 	        op = OP_NIL; */
3044:src/keys.c    **** /* #endif	     */
3045:src/keys.c    **** 	  goto set_pc_and_exit;
3046:src/keys.c    **** #ifdef DM42
3047:src/keys.c    **** 	case K05:				// XEQ
3048:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
3049:src/keys.c    **** 		goto xeq_or_gto;
3050:src/keys.c    **** 
3051:src/keys.c    **** 	case K05 | (SHIFT_F << 8):		// GTO
3052:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
3053:src/keys.c    **** 	xeq_or_gto:
3054:src/keys.c    **** 		if (label)
3055:src/keys.c    **** 			break;
3056:src/keys.c    **** 		return STATE_UNFINISHED;
3057:src/keys.c    **** #else
3058:src/keys.c    **** 	case K30:				// XEQ
3059:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
3060:src/keys.c    **** 		goto xeq_or_gto;
ARM GAS  /tmp/cc6xzGMw.s 			page 117


3061:src/keys.c    **** 
3062:src/keys.c    **** 	case K30 | (SHIFT_H << 8):		// GTO
3063:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
3064:src/keys.c    **** 	xeq_or_gto:
3065:src/keys.c    **** 		if (label)
3066:src/keys.c    **** 			break;
3067:src/keys.c    **** 		return STATE_UNFINISHED;
3068:src/keys.c    **** #endif		
3069:src/keys.c    **** 	case K63:				// R/S
3070:src/keys.c    **** 		if (direct && label) {
3071:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
3072:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
3073:src/keys.c    **** 			break;
3074:src/keys.c    **** 		}
3075:src/keys.c    **** 		return STATE_UNFINISHED;
3076:src/keys.c    **** 
3077:src/keys.c    **** 	case K63 | (SHIFT_H << 8):		// P/R
3078:src/keys.c    **** 		State2.runmode = 0;		// switch to program mode
3079:src/keys.c    **** 		goto set_pc_and_exit;
3080:src/keys.c    **** 
3081:src/keys.c    **** 	default:
3082:src/keys.c    **** 		return STATE_UNFINISHED;
3083:src/keys.c    **** 	}
3084:src/keys.c    **** 	State2.digval = 0;
3085:src/keys.c    **** 	State2.labellist = 0;
3086:src/keys.c    **** 	return check_confirm(op);
3087:src/keys.c    **** }
3088:src/keys.c    **** 
3089:src/keys.c    **** 
3090:src/keys.c    **** static void set_window(int c) {
 2845              		.loc 1 3090 31 is_stmt 1 view -0
 2846              		.cfi_startproc
 2847              		@ args = 0, pretend = 0, frame = 0
 2848              		@ frame_needed = 0, uses_anonymous_args = 0
3091:src/keys.c    **** 
3092:src/keys.c    **** 	if (State2.runmode) {
 2849              		.loc 1 3092 2 view .LVU812
3090:src/keys.c    **** 
 2850              		.loc 1 3090 31 is_stmt 0 view .LVU813
 2851 0000 38B5     		push	{r3, r4, r5, lr}
 2852              		.cfi_def_cfa_offset 16
 2853              		.cfi_offset 3, -16
 2854              		.cfi_offset 4, -12
 2855              		.cfi_offset 5, -8
 2856              		.cfi_offset 14, -4
 2857              		.loc 1 3092 6 view .LVU814
 2858 0002 224C     		ldr	r4, .L320
 2859 0004 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 2860              		.loc 1 3092 5 view .LVU815
 2861 0006 5A06     		lsls	r2, r3, #25
 2862 0008 00D4     		bmi	.L317
 2863              	.LVL221:
 2864              	.L305:
3093:src/keys.c    **** 		process_cmdline_set_lift();
3094:src/keys.c    **** 		// Make sure IntMaxWindow is recalculated
3095:src/keys.c    **** 		State2.disp_freeze = 0;
3096:src/keys.c    **** 		display();	
ARM GAS  /tmp/cc6xzGMw.s 			page 118


3097:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
3098:src/keys.c    **** 			if (UState.intm) {
3099:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
3100:src/keys.c    **** 					State2.window--;
3101:src/keys.c    **** 				return;
3102:src/keys.c    **** 			}
3103:src/keys.c    **** 			else 
3104:src/keys.c    **** 				State2.window = is_dblmode();
3105:src/keys.c    **** 		}
3106:src/keys.c    **** 		else {
3107:src/keys.c    **** 			if (UState.intm) {
3108:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
3109:src/keys.c    **** 					State2.window++;
3110:src/keys.c    **** 				return;
3111:src/keys.c    **** 			}
3112:src/keys.c    **** 			else
3113:src/keys.c    **** 				State2.window = 0;
3114:src/keys.c    **** 		}
3115:src/keys.c    **** 		set_smode(SDISP_SHOW);
3116:src/keys.c    **** 	}
3117:src/keys.c    **** }
 2865              		.loc 1 3117 1 view .LVU816
 2866 000a 38BD     		pop	{r3, r4, r5, pc}
 2867              	.LVL222:
 2868              	.L317:
3093:src/keys.c    **** 		process_cmdline_set_lift();
 2869              		.loc 1 3093 3 is_stmt 1 view .LVU817
 2870 000c 0546     		mov	r5, r0
 2871 000e FFF7FEFF 		bl	process_cmdline_set_lift
 2872              	.LVL223:
3095:src/keys.c    **** 		display();	
 2873              		.loc 1 3095 3 view .LVU818
3095:src/keys.c    **** 		display();	
 2874              		.loc 1 3095 22 is_stmt 0 view .LVU819
 2875 0012 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 2876 0014 6FF30413 		bfc	r3, #4, #1
 2877 0018 E375     		strb	r3, [r4, #23]
3096:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
 2878              		.loc 1 3096 3 is_stmt 1 view .LVU820
 2879 001a FFF7FEFF 		bl	display
 2880              	.LVL224:
3097:src/keys.c    **** 			if (UState.intm) {
 2881              		.loc 1 3097 3 view .LVU821
3098:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2882              		.loc 1 3098 8 is_stmt 0 view .LVU822
 2883 001e 1C4B     		ldr	r3, .L320+4
 2884 0020 1B68     		ldr	r3, [r3]
3097:src/keys.c    **** 			if (UState.intm) {
 2885              		.loc 1 3097 6 view .LVU823
 2886 0022 2C2D     		cmp	r5, #44
3098:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2887              		.loc 1 3098 8 view .LVU824
 2888 0024 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
3097:src/keys.c    **** 			if (UState.intm) {
 2889              		.loc 1 3097 6 view .LVU825
 2890 0028 18D0     		beq	.L318
3107:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
ARM GAS  /tmp/cc6xzGMw.s 			page 119


 2891              		.loc 1 3107 4 is_stmt 1 view .LVU826
3107:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 2892              		.loc 1 3107 7 is_stmt 0 view .LVU827
 2893 002a 13F00103 		ands	r3, r3, #1
 2894 002e 09D1     		bne	.L319
3113:src/keys.c    **** 		}
 2895              		.loc 1 3113 5 is_stmt 1 view .LVU828
3113:src/keys.c    **** 		}
 2896              		.loc 1 3113 19 is_stmt 0 view .LVU829
 2897 0030 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 2898 0032 63F3C502 		bfi	r2, r3, #3, #3
 2899 0036 2275     		strb	r2, [r4, #20]
 2900              	.L311:
3115:src/keys.c    **** 	}
 2901              		.loc 1 3115 3 is_stmt 1 view .LVU830
 2902              	.LVL225:
 2903              	.LBB406:
 2904              	.LBI406:
 731:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 2905              		.loc 1 731 13 view .LVU831
 2906              	.LBB407:
 732:src/keys.c    **** }
 2907              		.loc 1 732 2 view .LVU832
 732:src/keys.c    **** }
 2908              		.loc 1 732 15 is_stmt 0 view .LVU833
 2909 0038 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 2910 003a 013B     		subs	r3, r3, #1
 2911 003c 18BF     		it	ne
 2912 003e 0123     		movne	r3, #1
 2913 0040 6374     		strb	r3, [r4, #17]
 2914              	.LVL226:
 732:src/keys.c    **** }
 2915              		.loc 1 732 15 view .LVU834
 2916              	.LBE407:
 2917              	.LBE406:
 2918              		.loc 1 3117 1 view .LVU835
 2919 0042 38BD     		pop	{r3, r4, r5, pc}
 2920              	.LVL227:
 2921              	.L319:
3108:src/keys.c    **** 					State2.window++;
 2922              		.loc 1 3108 5 is_stmt 1 view .LVU836
3108:src/keys.c    **** 					State2.window++;
 2923              		.loc 1 3108 22 is_stmt 0 view .LVU837
 2924 0044 134A     		ldr	r2, .L320+8
3108:src/keys.c    **** 					State2.window++;
 2925              		.loc 1 3108 42 view .LVU838
 2926 0046 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
3108:src/keys.c    **** 					State2.window++;
 2927              		.loc 1 3108 8 view .LVU839
 2928 0048 1168     		ldr	r1, [r2]
3108:src/keys.c    **** 					State2.window++;
 2929              		.loc 1 3108 42 view .LVU840
 2930 004a C3F3C202 		ubfx	r2, r3, #3, #3
3108:src/keys.c    **** 					State2.window++;
 2931              		.loc 1 3108 8 view .LVU841
 2932 004e 8A42     		cmp	r2, r1
 2933 0050 DBDA     		bge	.L305
ARM GAS  /tmp/cc6xzGMw.s 			page 120


3109:src/keys.c    **** 				return;
 2934              		.loc 1 3109 6 is_stmt 1 view .LVU842
3109:src/keys.c    **** 				return;
 2935              		.loc 1 3109 19 is_stmt 0 view .LVU843
 2936 0052 0132     		adds	r2, r2, #1
 2937 0054 62F3C503 		bfi	r3, r2, #3, #3
 2938 0058 2375     		strb	r3, [r4, #20]
 2939              		.loc 1 3117 1 view .LVU844
 2940 005a 38BD     		pop	{r3, r4, r5, pc}
 2941              	.LVL228:
 2942              	.L318:
3098:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2943              		.loc 1 3098 4 is_stmt 1 view .LVU845
3098:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2944              		.loc 1 3098 7 is_stmt 0 view .LVU846
 2945 005c DB07     		lsls	r3, r3, #31
 2946 005e 0ED5     		bpl	.L309
 2947              	.LBB408:
 2948              	.LBI408:
3090:src/keys.c    **** 
 2949              		.loc 1 3090 13 is_stmt 1 view .LVU847
 2950              	.LVL229:
 2951              	.LBB409:
3099:src/keys.c    **** 					State2.window--;
 2952              		.loc 1 3099 5 view .LVU848
3099:src/keys.c    **** 					State2.window--;
 2953              		.loc 1 3099 22 is_stmt 0 view .LVU849
 2954 0060 0C4B     		ldr	r3, .L320+8
3099:src/keys.c    **** 					State2.window--;
 2955              		.loc 1 3099 8 view .LVU850
 2956 0062 1B68     		ldr	r3, [r3]
 2957 0064 002B     		cmp	r3, #0
 2958 0066 D0DD     		ble	.L305
3099:src/keys.c    **** 					State2.window--;
 2959              		.loc 1 3099 43 view .LVU851
 2960 0068 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
3099:src/keys.c    **** 					State2.window--;
 2961              		.loc 1 3099 26 view .LVU852
 2962 006a 13F0380F 		tst	r3, #56
 2963 006e CCD0     		beq	.L305
3100:src/keys.c    **** 				return;
 2964              		.loc 1 3100 6 is_stmt 1 view .LVU853
3100:src/keys.c    **** 				return;
 2965              		.loc 1 3100 12 is_stmt 0 view .LVU854
 2966 0070 C3F3C202 		ubfx	r2, r3, #3, #3
3100:src/keys.c    **** 				return;
 2967              		.loc 1 3100 19 view .LVU855
 2968 0074 0732     		adds	r2, r2, #7
 2969 0076 62F3C503 		bfi	r3, r2, #3, #3
 2970 007a 2375     		strb	r3, [r4, #20]
 2971              	.LBE409:
 2972              	.LBE408:
 2973              		.loc 1 3117 1 view .LVU856
 2974 007c 38BD     		pop	{r3, r4, r5, pc}
 2975              	.LVL230:
 2976              	.L309:
3104:src/keys.c    **** 		}
ARM GAS  /tmp/cc6xzGMw.s 			page 121


 2977              		.loc 1 3104 5 is_stmt 1 view .LVU857
3104:src/keys.c    **** 		}
 2978              		.loc 1 3104 21 is_stmt 0 view .LVU858
 2979 007e FFF7FEFF 		bl	is_dblmode
 2980              	.LVL231:
3104:src/keys.c    **** 		}
 2981              		.loc 1 3104 19 view .LVU859
 2982 0082 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 2983 0084 60F3C503 		bfi	r3, r0, #3, #3
 2984 0088 2375     		strb	r3, [r4, #20]
 2985 008a D5E7     		b	.L311
 2986              	.L321:
 2987              		.align	2
 2988              	.L320:
 2989 008c 00000000 		.word	StateWhileOn
 2990 0090 00000000 		.word	main_ram
 2991 0094 00000000 		.word	IntMaxWindow
 2992              		.cfi_endproc
 2993              	.LFE58:
 2995              		.section	.text.arg_storcl,"ax",%progbits
 2996              		.align	1
 2997              		.p2align 2,,3
 2998              		.syntax unified
 2999              		.thumb
 3000              		.thumb_func
 3001              		.fpu fpv4-sp-d16
 3003              	arg_storcl:
 3004              	.LVL232:
 3005              	.LFB39:
2016:src/keys.c    **** 	unsigned int b = CmdBase;
 3006              		.loc 1 2016 56 is_stmt 1 view -0
 3007              		.cfi_startproc
 3008              		@ args = 0, pretend = 0, frame = 0
 3009              		@ frame_needed = 0, uses_anonymous_args = 0
 3010              		@ link register save eliminated.
2017:src/keys.c    **** 
 3011              		.loc 1 2017 2 view .LVU861
2017:src/keys.c    **** 
 3012              		.loc 1 2017 19 is_stmt 0 view .LVU862
 3013 0000 0F4A     		ldr	r2, .L354
 3014 0002 D37F     		ldrb	r3, [r2, #31]	@ zero_extendqisi2
 3015              	.LVL233:
2019:src/keys.c    **** 		CmdBase += n;
 3016              		.loc 1 2019 2 is_stmt 1 view .LVU863
 3017              	.LBB418:
 3018              	.LBI418:
2007:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3019              		.loc 1 2007 12 view .LVU864
 3020              	.LBB419:
2012:src/keys.c    **** #endif
 3021              		.loc 1 2012 2 view .LVU865
2012:src/keys.c    **** #endif
 3022              		.loc 1 2012 41 is_stmt 0 view .LVU866
 3023 0004 032B     		cmp	r3, #3
 3024 0006 14D0     		beq	.L323
2012:src/keys.c    **** #endif
 3025              		.loc 1 2012 24 view .LVU867
ARM GAS  /tmp/cc6xzGMw.s 			page 122


 3026 0008 0A2B     		cmp	r3, #10
 3027 000a 12D0     		beq	.L323
 3028              	.LVL234:
 3029              	.LBB420:
 3030              	.LBI420:
2007:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3031              		.loc 1 2007 12 is_stmt 1 view .LVU868
 3032              	.LBB421:
2012:src/keys.c    **** #endif
 3033              		.loc 1 2012 41 is_stmt 0 view .LVU869
 3034 000c 19B1     		cbz	r1, .L324
2012:src/keys.c    **** #endif
 3035              		.loc 1 2012 51 view .LVU870
 3036 000e 152B     		cmp	r3, #21
 3037 0010 0FD0     		beq	.L323
2012:src/keys.c    **** #endif
 3038              		.loc 1 2012 70 view .LVU871
 3039 0012 1A2B     		cmp	r3, #26
 3040 0014 0DD0     		beq	.L323
 3041              	.L324:
 3042              	.LVL235:
2012:src/keys.c    **** #endif
 3043              		.loc 1 2012 70 view .LVU872
 3044              	.LBE421:
 3045              	.LBE420:
 3046              	.LBE419:
 3047              	.LBE418:
2024:src/keys.c    **** 		b -= n;
 3048              		.loc 1 2024 2 is_stmt 1 view .LVU873
2024:src/keys.c    **** 		b -= n;
 3049              		.loc 1 2024 5 is_stmt 0 view .LVU874
 3050 0016 8342     		cmp	r3, r0
 3051 0018 09D3     		bcc	.L329
2025:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 3052              		.loc 1 2025 3 is_stmt 1 view .LVU875
2025:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 3053              		.loc 1 2025 5 is_stmt 0 view .LVU876
 3054 001a 1B1A     		subs	r3, r3, r0
 3055              	.LVL236:
2026:src/keys.c    **** 			CmdBase = b;
 3056              		.loc 1 2026 3 is_stmt 1 view .LVU877
 3057              	.LBB422:
 3058              	.LBI422:
2007:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3059              		.loc 1 2007 12 view .LVU878
 3060              	.LBB423:
2012:src/keys.c    **** #endif
 3061              		.loc 1 2012 2 view .LVU879
2012:src/keys.c    **** #endif
 3062              		.loc 1 2012 41 is_stmt 0 view .LVU880
 3063 001c 032B     		cmp	r3, #3
 3064 001e 0CD0     		beq	.L327
2012:src/keys.c    **** #endif
 3065              		.loc 1 2012 24 view .LVU881
 3066 0020 0A2B     		cmp	r3, #10
 3067 0022 0AD0     		beq	.L327
 3068              	.LVL237:
ARM GAS  /tmp/cc6xzGMw.s 			page 123


 3069              	.LBB424:
 3070              	.LBI424:
2007:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3071              		.loc 1 2007 12 is_stmt 1 view .LVU882
 3072              	.LBB425:
2012:src/keys.c    **** #endif
 3073              		.loc 1 2012 41 is_stmt 0 view .LVU883
 3074 0024 19B1     		cbz	r1, .L329
2012:src/keys.c    **** #endif
 3075              		.loc 1 2012 51 view .LVU884
 3076 0026 152B     		cmp	r3, #21
 3077 0028 07D0     		beq	.L327
2012:src/keys.c    **** #endif
 3078              		.loc 1 2012 70 view .LVU885
 3079 002a 1A2B     		cmp	r3, #26
 3080 002c 05D0     		beq	.L327
 3081              	.LVL238:
 3082              	.L329:
2012:src/keys.c    **** #endif
 3083              		.loc 1 2012 70 view .LVU886
 3084              	.LBE425:
 3085              	.LBE424:
 3086              	.LBE423:
 3087              	.LBE422:
2031:src/keys.c    **** }
 3088              		.loc 1 2031 9 view .LVU887
 3089 002e 0020     		movs	r0, #0
 3090              	.LVL239:
2032:src/keys.c    **** 
 3091              		.loc 1 2032 1 view .LVU888
 3092 0030 7047     		bx	lr
 3093              	.LVL240:
 3094              	.L323:
2020:src/keys.c    **** 		return 1;
 3095              		.loc 1 2020 3 is_stmt 1 view .LVU889
2020:src/keys.c    **** 		return 1;
 3096              		.loc 1 2020 11 is_stmt 0 view .LVU890
 3097 0032 1844     		add	r0, r0, r3
 3098              	.LVL241:
2020:src/keys.c    **** 		return 1;
 3099              		.loc 1 2020 11 view .LVU891
 3100 0034 D077     		strb	r0, [r2, #31]
2021:src/keys.c    **** 	}
 3101              		.loc 1 2021 3 is_stmt 1 view .LVU892
2021:src/keys.c    **** 	}
 3102              		.loc 1 2021 10 is_stmt 0 view .LVU893
 3103 0036 0120     		movs	r0, #1
 3104 0038 7047     		bx	lr
 3105              	.LVL242:
 3106              	.L327:
2027:src/keys.c    **** 			return 1;
 3107              		.loc 1 2027 4 is_stmt 1 view .LVU894
2027:src/keys.c    **** 			return 1;
 3108              		.loc 1 2027 12 is_stmt 0 view .LVU895
 3109 003a D377     		strb	r3, [r2, #31]
2028:src/keys.c    **** 		}
 3110              		.loc 1 2028 4 is_stmt 1 view .LVU896
ARM GAS  /tmp/cc6xzGMw.s 			page 124


2028:src/keys.c    **** 		}
 3111              		.loc 1 2028 11 is_stmt 0 view .LVU897
 3112 003c 0120     		movs	r0, #1
 3113              	.LVL243:
2028:src/keys.c    **** 		}
 3114              		.loc 1 2028 11 view .LVU898
 3115 003e 7047     		bx	lr
 3116              	.L355:
 3117              		.align	2
 3118              	.L354:
 3119 0040 00000000 		.word	StateWhileOn
 3120              		.cfi_endproc
 3121              	.LFE39:
 3123              		.section	.text.process_arg,"ax",%progbits
 3124              		.align	1
 3125              		.p2align 2,,3
 3126              		.syntax unified
 3127              		.thumb
 3128              		.thumb_func
 3129              		.fpu fpv4-sp-d16
 3131              	process_arg:
 3132              	.LVL244:
 3133              	.LFB42:
2066:src/keys.c    **** 	unsigned int base = CmdBase;
 3134              		.loc 1 2066 41 is_stmt 1 view -0
 3135              		.cfi_startproc
 3136              		@ args = 0, pretend = 0, frame = 8
 3137              		@ frame_needed = 0, uses_anonymous_args = 0
2067:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3138              		.loc 1 2067 2 view .LVU900
2066:src/keys.c    **** 	unsigned int base = CmdBase;
 3139              		.loc 1 2066 41 is_stmt 0 view .LVU901
 3140 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3141              		.cfi_def_cfa_offset 36
 3142              		.cfi_offset 4, -36
 3143              		.cfi_offset 5, -32
 3144              		.cfi_offset 6, -28
 3145              		.cfi_offset 7, -24
 3146              		.cfi_offset 8, -20
 3147              		.cfi_offset 9, -16
 3148              		.cfi_offset 10, -12
 3149              		.cfi_offset 11, -8
 3150              		.cfi_offset 14, -4
2067:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3151              		.loc 1 2067 22 view .LVU902
 3152 0004 C94C     		ldr	r4, .L500
2069:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3153              		.loc 1 2069 31 view .LVU903
 3154 0006 DFF834A3 		ldr	r10, .L500+16
2067:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3155              		.loc 1 2067 22 view .LVU904
 3156 000a E57F     		ldrb	r5, [r4, #31]	@ zero_extendqisi2
 3157              	.LBB447:
 3158              	.LBB448:
 3159              	.LBB449:
 3160              	.LBB450:
 143:src/keys.c    **** }
ARM GAS  /tmp/cc6xzGMw.s 			page 125


 3161              		.loc 1 143 23 view .LVU905
 3162 000c C84A     		ldr	r2, .L500+4
 3163              	.LBE450:
 3164              	.LBE449:
 234:src/keys.c    **** }
 3165              		.loc 1 234 28 view .LVU906
 3166 000e C94E     		ldr	r6, .L500+8
 3167              	.LBB453:
 3168              	.LBB451:
 143:src/keys.c    **** }
 3169              		.loc 1 143 23 view .LVU907
 3170 0010 125C     		ldrb	r2, [r2, r0]	@ zero_extendqisi2
 3171              	.LBE451:
 3172              	.LBE453:
 3173              	.LBE448:
 3174              	.LBE447:
2070:src/keys.c    **** 	const enum shifts shift = reset_shift();
 3175              		.loc 1 2070 20 view .LVU908
 3176 0012 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 3177              	.LBB457:
 3178              	.LBB455:
 234:src/keys.c    **** }
 3179              		.loc 1 234 28 view .LVU909
 3180 0014 16F80290 		ldrb	r9, [r6, r2]	@ zero_extendqisi2
 3181              	.LBE455:
 3182              	.LBE457:
2069:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3183              		.loc 1 2069 31 view .LVU910
 3184 0018 0AEB0511 		add	r1, r10, r5, lsl #4
2066:src/keys.c    **** 	unsigned int base = CmdBase;
 3185              		.loc 1 2066 41 view .LVU911
 3186 001c 83B0     		sub	sp, sp, #12
 3187              		.cfi_def_cfa_offset 48
2069:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3188              		.loc 1 2069 31 view .LVU912
 3189 001e 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
2067:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3190              		.loc 1 2067 15 view .LVU913
 3191 0020 0095     		str	r5, [sp]
 3192              	.LVL245:
2068:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
 3193              		.loc 1 2068 2 is_stmt 1 view .LVU914
2069:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3194              		.loc 1 2069 40 is_stmt 0 view .LVU915
 3195 0022 4A07     		lsls	r2, r1, #29
 3196 0024 58BF     		it	pl
 3197 0026 94F91580 		ldrsbpl	r8, [r4, #21]
2070:src/keys.c    **** 	const enum shifts shift = reset_shift();
 3198              		.loc 1 2070 20 view .LVU916
 3199 002a 0193     		str	r3, [sp, #4]
2069:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3200              		.loc 1 2069 40 view .LVU917
 3201 002c 54BF     		ite	pl
 3202 002e 4FEAD878 		lsrpl	r8, r8, #31
 3203 0032 4FF00108 		movmi	r8, #1
2066:src/keys.c    **** 	unsigned int base = CmdBase;
 3204              		.loc 1 2066 41 view .LVU918
ARM GAS  /tmp/cc6xzGMw.s 			page 126


 3205 0036 0746     		mov	r7, r0
 3206              	.LVL246:
 3207              	.LBB458:
 3208              	.LBI447:
 210:src/keys.c    **** {
 3209              		.loc 1 210 14 is_stmt 1 view .LVU919
 3210              	.LBB456:
 212:src/keys.c    ****     // K00 - K05
 3211              		.loc 1 212 3 view .LVU920
 234:src/keys.c    **** }
 3212              		.loc 1 234 3 view .LVU921
 3213              	.LBB454:
 3214              	.LBI449:
 131:src/keys.c    **** {
 3215              		.loc 1 131 12 view .LVU922
 3216              	.LBB452:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3217              		.loc 1 133 2 view .LVU923
 143:src/keys.c    **** }
 3218              		.loc 1 143 2 view .LVU924
 143:src/keys.c    **** }
 3219              		.loc 1 143 2 is_stmt 0 view .LVU925
 3220              	.LBE452:
 3221              	.LBE454:
 234:src/keys.c    **** }
 3222              		.loc 1 234 10 view .LVU926
 3223 0038 4E46     		mov	r6, r9
 3224              	.LVL247:
 234:src/keys.c    **** }
 3225              		.loc 1 234 10 view .LVU927
 3226              	.LBE456:
 3227              	.LBE458:
2069:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3228              		.loc 1 2069 2 is_stmt 1 view .LVU928
2070:src/keys.c    **** 	const enum shifts shift = reset_shift();
 3229              		.loc 1 2070 2 view .LVU929
2071:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
 3230              		.loc 1 2071 2 view .LVU930
 3231              	.LBB459:
 3232              	.LBI459:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 3233              		.loc 1 114 13 view .LVU931
 3234              	.LBE459:
 115:src/keys.c    **** }
 3235              		.loc 1 115 2 view .LVU932
 3236              	.LBB472:
 3237              	.LBB460:
 3238              	.LBI460:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 3239              		.loc 1 104 20 view .LVU933
 3240              	.LBB461:
 105:src/keys.c    **** 	State2.shifts = shift;
 3241              		.loc 1 105 2 view .LVU934
 3242              	.LBB462:
 3243              	.LBI462:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 3244              		.loc 1 96 13 view .LVU935
ARM GAS  /tmp/cc6xzGMw.s 			page 127


 3245              	.LBB463:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3246              		.loc 1 97 2 view .LVU936
 3247              	.LBE463:
 3248              	.LBE462:
 3249              	.LBE461:
 3250              	.LBE460:
 3251              	.LBE472:
2069:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3252              		.loc 1 2069 31 is_stmt 0 view .LVU937
 3253 003a 4FEA051B 		lsl	fp, r5, #4
 3254              	.LBB473:
 3255              	.LBB469:
 3256              	.LBB466:
 3257              	.LBB465:
 3258              	.LBB464:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3259              		.loc 1 97 18 view .LVU938
 3260 003e FFF7FEFF 		bl	shift_down
 3261              	.LVL248:
  98:src/keys.c    **** }
 3262              		.loc 1 98 2 is_stmt 1 view .LVU939
  98:src/keys.c    **** }
 3263              		.loc 1 98 52 is_stmt 0 view .LVU940
 3264 0042 00B9     		cbnz	r0, .L358
 3265 0044 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
 3266              	.LVL249:
 3267              	.L358:
  98:src/keys.c    **** }
 3268              		.loc 1 98 52 view .LVU941
 3269              	.LBE464:
 3270              	.LBE465:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3271              		.loc 1 106 2 is_stmt 1 view .LVU942
 3272              	.LBE466:
 3273              	.LBE469:
 3274              	.LBE473:
2072:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3275              		.loc 1 2072 38 is_stmt 0 view .LVU943
 3276 0046 D344     		add	fp, fp, r10
 3277              	.LBB474:
 3278              	.LBB470:
 3279              	.LBB467:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3280              		.loc 1 106 16 view .LVU944
 3281 0048 4FF0000E 		mov	lr, #0
 3282              	.LBE467:
 3283              	.LBE470:
 3284              	.LBE474:
2072:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3285              		.loc 1 2072 38 view .LVU945
 3286 004c 9BF80510 		ldrb	r1, [fp, #5]	@ zero_extendqisi2
 3287              	.LBB475:
 3288              	.LBB471:
 3289              	.LBB468:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3290              		.loc 1 106 16 view .LVU946
ARM GAS  /tmp/cc6xzGMw.s 			page 128


 3291 0050 84F810E0 		strb	lr, [r4, #16]
 108:src/keys.c    **** }
 3292              		.loc 1 108 2 is_stmt 1 view .LVU947
 3293              	.LVL250:
 108:src/keys.c    **** }
 3294              		.loc 1 108 2 is_stmt 0 view .LVU948
 3295              	.LBE468:
 3296              	.LBE471:
 3297              	.LBE475:
2072:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3298              		.loc 1 2072 2 is_stmt 1 view .LVU949
2072:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3299              		.loc 1 2072 61 is_stmt 0 view .LVU950
 3300 0054 8B06     		lsls	r3, r1, #26
 3301 0056 C1F3401C 		ubfx	ip, r1, #5, #1
 3302 005a 19D5     		bpl	.L359
2072:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3303              		.loc 1 2072 61 discriminator 1 view .LVU951
 3304 005c 617D     		ldrb	r1, [r4, #21]	@ zero_extendqisi2
 3305 005e 11F0C00F 		tst	r1, #192
 3306 0062 1FD0     		beq	.L488
 3307              	.LVL251:
2076:src/keys.c    **** 	if (base >= NUM_RARG) {
 3308              		.loc 1 2076 2 is_stmt 1 view .LVU952
2077:src/keys.c    **** 		reset_arg();
 3309              		.loc 1 2077 5 is_stmt 0 view .LVU953
 3310 0064 8E2D     		cmp	r5, #142
2076:src/keys.c    **** 	if (base >= NUM_RARG) {
 3311              		.loc 1 2076 4 view .LVU954
 3312 0066 29F08006 		bic	r6, r9, #128
 3313              	.LVL252:
2077:src/keys.c    **** 		reset_arg();
 3314              		.loc 1 2077 2 is_stmt 1 view .LVU955
2077:src/keys.c    **** 		reset_arg();
 3315              		.loc 1 2077 5 is_stmt 0 view .LVU956
 3316 006a 15D8     		bhi	.L388
2072:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3317              		.loc 1 2072 61 view .LVU957
 3318 006c F446     		mov	ip, lr
 3319              	.L368:
2082:src/keys.c    **** 	  switch (n) {
 3320              		.loc 1 2082 35 discriminator 1 view .LVU958
 3321 006e 6169     		ldr	r1, [r4, #20]
 3322 0070 11F4103F 		tst	r1, #147456
 3323 0074 2ED1     		bne	.L370
2083:src/keys.c    **** 	  case regX_idx:
 3324              		.loc 1 2083 4 is_stmt 1 view .LVU959
 3325 0076 672E     		cmp	r6, #103
 3326 0078 2CD8     		bhi	.L370
2083:src/keys.c    **** 	  case regX_idx:
 3327              		.loc 1 2083 4 is_stmt 0 view .LVU960
 3328 007a 632E     		cmp	r6, #99
 3329 007c 24D9     		bls	.L430
 3330 007e 653E     		subs	r6, r6, #101
 3331              	.LVL253:
2083:src/keys.c    **** 	  case regX_idx:
 3332              		.loc 1 2083 4 view .LVU961
ARM GAS  /tmp/cc6xzGMw.s 			page 129


 3333 0080 022E     		cmp	r6, #2
 3334 0082 00F26082 		bhi	.L373
 3335 0086 DFE816F0 		tbh	[pc, r6, lsl #1]
 3336              	.L375:
 3337 008a 1101     		.2byte	(.L377-.L375)/2
 3338 008c 0B01     		.2byte	(.L376-.L375)/2
 3339 008e 1301     		.2byte	(.L374-.L375)/2
 3340              	.LVL254:
 3341              		.p2align 1
 3342              	.L359:
2076:src/keys.c    **** 	if (base >= NUM_RARG) {
 3343              		.loc 1 2076 2 is_stmt 1 view .LVU962
2077:src/keys.c    **** 		reset_arg();
 3344              		.loc 1 2077 5 is_stmt 0 view .LVU963
 3345 0090 8E2D     		cmp	r5, #142
2076:src/keys.c    **** 	if (base >= NUM_RARG) {
 3346              		.loc 1 2076 4 view .LVU964
 3347 0092 29F08006 		bic	r6, r9, #128
 3348              	.LVL255:
2077:src/keys.c    **** 		reset_arg();
 3349              		.loc 1 2077 2 is_stmt 1 view .LVU965
2077:src/keys.c    **** 		reset_arg();
 3350              		.loc 1 2077 5 is_stmt 0 view .LVU966
 3351 0096 EAD9     		bls	.L368
 3352              	.LVL256:
 3353              	.L388:
2332:src/keys.c    **** 	default:
 3354              		.loc 1 2332 3 is_stmt 1 view .LVU967
 3355 0098 FFF7FEFF 		bl	reset_arg
 3356              	.LVL257:
 3357              	.L481:
2336:src/keys.c    **** }
 3358              		.loc 1 2336 9 is_stmt 0 view .LVU968
 3359 009c 3320     		movs	r0, #51
 3360              	.L356:
2337:src/keys.c    **** 
 3361              		.loc 1 2337 1 view .LVU969
 3362 009e 03B0     		add	sp, sp, #12
 3363              		.cfi_remember_state
 3364              		.cfi_def_cfa_offset 36
 3365              		@ sp needed
 3366 00a0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3367              	.LVL258:
 3368              	.L488:
 3369              		.cfi_restore_state
2073:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 3370              		.loc 1 2073 2 is_stmt 1 view .LVU970
2073:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 3371              		.loc 1 2073 35 is_stmt 0 view .LVU971
 3372 00a4 292F     		cmp	r7, #41
 3373 00a6 00F0C080 		beq	.L361
2074:src/keys.c    **** 
 3374              		.loc 1 2074 11 view .LVU972
 3375 00aa 0128     		cmp	r0, #1
 3376 00ac 00F0D180 		beq	.L362
2074:src/keys.c    **** 
 3377              		.loc 1 2074 32 discriminator 3 view .LVU973
ARM GAS  /tmp/cc6xzGMw.s 			page 130


 3378 00b0 B9F1090F 		cmp	r9, #9
 3379 00b4 00F2B680 		bhi	.L363
 3380              	.LVL259:
2076:src/keys.c    **** 	if (base >= NUM_RARG) {
 3381              		.loc 1 2076 2 is_stmt 1 view .LVU974
2077:src/keys.c    **** 		reset_arg();
 3382              		.loc 1 2077 2 view .LVU975
2077:src/keys.c    **** 		reset_arg();
 3383              		.loc 1 2077 5 is_stmt 0 view .LVU976
 3384 00b8 8E2D     		cmp	r5, #142
 3385 00ba EDD8     		bhi	.L388
2082:src/keys.c    **** 	  switch (n) {
 3386              		.loc 1 2082 35 view .LVU977
 3387 00bc 6169     		ldr	r1, [r4, #20]
 3388 00be 11F4103F 		tst	r1, #147456
2072:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3389              		.loc 1 2072 61 view .LVU978
 3390 00c2 4FF0010C 		mov	ip, #1
2082:src/keys.c    **** 	  switch (n) {
 3391              		.loc 1 2082 35 view .LVU979
 3392 00c6 05D1     		bne	.L370
 3393              	.L430:
2083:src/keys.c    **** 	  case regX_idx:
 3394              		.loc 1 2083 4 view .LVU980
 3395 00c8 16B1     		cbz	r6, .L372
 3396 00ca 721F     		subs	r2, r6, #5
 3397 00cc 042A     		cmp	r2, #4
 3398 00ce 01D8     		bhi	.L370
 3399              	.L372:
2098:src/keys.c    **** 	  }
 3400              		.loc 1 2098 6 is_stmt 1 view .LVU981
2098:src/keys.c    **** 	  }
 3401              		.loc 1 2098 13 is_stmt 0 view .LVU982
 3402 00d0 3046     		mov	r0, r6
 3403              	.LVL260:
2098:src/keys.c    **** 	  }
 3404              		.loc 1 2098 13 view .LVU983
 3405 00d2 E6E0     		b	.L482
 3406              	.LVL261:
 3407              	.L370:
2105:src/keys.c    **** 		// row column shorthand addressing
 3408              		.loc 1 2105 2 is_stmt 1 view .LVU984
2111:src/keys.c    **** 		switch ((int)c) {
 3409              		.loc 1 2111 2 view .LVU985
2111:src/keys.c    **** 		switch ((int)c) {
 3410              		.loc 1 2111 5 is_stmt 0 view .LVU986
 3411 00d4 4D2D     		cmp	r5, #77
 3412 00d6 00F0B180 		beq	.L489
2111:src/keys.c    **** 		switch ((int)c) {
 3413              		.loc 1 2111 23 discriminator 1 view .LVU987
 3414 00da 05F17302 		add	r2, r5, #115
 3415 00de D2B2     		uxtb	r2, r2
 3416 00e0 012A     		cmp	r2, #1
 3417 00e2 61D9     		bls	.L490
 3418              	.LVL262:
 3419              	.L379:
2142:src/keys.c    **** #else
ARM GAS  /tmp/cc6xzGMw.s 			page 131


 3420              		.loc 1 2142 3 is_stmt 1 view .LVU988
2142:src/keys.c    **** #else
 3421              		.loc 1 2142 11 is_stmt 0 view .LVU989
 3422 00e4 E577     		strb	r5, [r4, #31]
2165:src/keys.c    **** 	case K_F:
 3423              		.loc 1 2165 2 is_stmt 1 view .LVU990
 3424 00e6 2D2F     		cmp	r7, #45
 3425 00e8 D8D8     		bhi	.L481
 3426 00ea 01A3     		adr	r3, .L383
 3427 00ec 53F827F0 		ldr	pc, [r3, r7, lsl #2]
 3428              		.p2align 2
 3429              	.L383:
 3430 00f0 C1010000 		.word	.L400+1
 3431 00f4 C1010000 		.word	.L400+1
 3432 00f8 C1010000 		.word	.L400+1
 3433 00fc C1010000 		.word	.L400+1
 3434 0100 9D000000 		.word	.L481+1
 3435 0104 9D000000 		.word	.L481+1
 3436 0108 9D000000 		.word	.L481+1
 3437 010c 9D000000 		.word	.L481+1
 3438 0110 C1010000 		.word	.L400+1
 3439 0114 C1010000 		.word	.L400+1
 3440 0118 C1010000 		.word	.L400+1
 3441 011c C1010000 		.word	.L400+1
 3442 0120 45040000 		.word	.L399+1
 3443 0124 9D000000 		.word	.L481+1
 3444 0128 9D000000 		.word	.L481+1
 3445 012c 9D000000 		.word	.L481+1
 3446 0130 C7020000 		.word	.L398+1
 3447 0134 9D000000 		.word	.L481+1
 3448 0138 19020000 		.word	.L397+1
 3449 013c 9D000000 		.word	.L481+1
 3450 0140 9D000000 		.word	.L481+1
 3451 0144 9D000000 		.word	.L481+1
 3452 0148 F3020000 		.word	.L396+1
 3453 014c 9D000000 		.word	.L481+1
 3454 0150 FF020000 		.word	.L395+1
 3455 0154 0B030000 		.word	.L394+1
 3456 0158 9D000000 		.word	.L481+1
 3457 015c 9D000000 		.word	.L481+1
 3458 0160 81020000 		.word	.L393+1
 3459 0164 9D000000 		.word	.L481+1
 3460 0168 9D000000 		.word	.L481+1
 3461 016c 1F030000 		.word	.L392+1
 3462 0170 4D040000 		.word	.L391+1
 3463 0174 41030000 		.word	.L390+1
 3464 0178 4D030000 		.word	.L389+1
 3465 017c 9D000000 		.word	.L481+1
 3466 0180 99000000 		.word	.L388+1
 3467 0184 9D000000 		.word	.L481+1
 3468 0188 67030000 		.word	.L387+1
 3469 018c 9D000000 		.word	.L481+1
 3470 0190 AD030000 		.word	.L386+1
 3471 0194 CD030000 		.word	.L385+1
 3472 0198 9D000000 		.word	.L481+1
 3473 019c 9D000000 		.word	.L481+1
 3474 01a0 ED030000 		.word	.L384+1
ARM GAS  /tmp/cc6xzGMw.s 			page 132


 3475 01a4 25040000 		.word	.L382+1
 3476              	.LVL263:
 3477              		.p2align 1
 3478              	.L490:
2112:src/keys.c    **** 		case K_UP:	// up arrow
 3479              		.loc 1 2112 3 view .LVU991
 3480 01a8 122F     		cmp	r7, #18
 3481 01aa 2FD0     		beq	.L426
 3482 01ac 182F     		cmp	r7, #24
 3483 01ae 01D0     		beq	.L427
 3484 01b0 012F     		cmp	r7, #1
 3485 01b2 97D1     		bne	.L379
 3486              	.L427:
2128:src/keys.c    **** 		    base = RARG_SIG0;
 3487              		.loc 1 2128 5 view .LVU992
2132:src/keys.c    **** 		    base = RARG_FIX;
 3488              		.loc 1 2132 5 view .LVU993
2132:src/keys.c    **** 		    base = RARG_FIX;
 3489              		.loc 1 2132 8 is_stmt 0 view .LVU994
 3490 01b4 8D2D     		cmp	r5, #141
 3491 01b6 7DD1     		bne	.L491
 3492 01b8 4D23     		movs	r3, #77
 3493 01ba 0093     		str	r3, [sp]
 3494              	.LVL264:
2133:src/keys.c    **** 		    break;
 3495              		.loc 1 2133 12 view .LVU995
 3496 01bc 1D46     		mov	r5, r3
 3497 01be 91E7     		b	.L379
 3498              	.LVL265:
 3499              	.L400:
2220:src/keys.c    **** 			return arg_eval(n);
 3500              		.loc 1 2220 4 is_stmt 1 view .LVU996
2220:src/keys.c    **** 			return arg_eval(n);
 3501              		.loc 1 2220 8 is_stmt 0 view .LVU997
 3502 01c0 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
2220:src/keys.c    **** 			return arg_eval(n);
 3503              		.loc 1 2220 7 view .LVU998
 3504 01c2 5306     		lsls	r3, r2, #25
 3505 01c4 6AD4     		bmi	.L415
2220:src/keys.c    **** 			return arg_eval(n);
 3506              		.loc 1 2220 19 discriminator 1 view .LVU999
 3507 01c6 B8F1000F 		cmp	r8, #0
 3508 01ca 67D1     		bne	.L415
2222:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 3509              		.loc 1 2222 3 is_stmt 1 view .LVU1000
2222:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 3510              		.loc 1 2222 6 is_stmt 0 view .LVU1001
 3511 01cc 032F     		cmp	r7, #3
 3512 01ce 3FF665AF 		bhi	.L481
2223:src/keys.c    **** 		break;
 3513              		.loc 1 2223 4 is_stmt 1 view .LVU1002
 3514              	.LVL266:
 3515              	.LBB476:
 3516              	.LBI476:
1993:src/keys.c    **** 	const unsigned int b = CmdBase;
 3517              		.loc 1 1993 12 view .LVU1003
 3518              	.LBB477:
ARM GAS  /tmp/cc6xzGMw.s 			page 133


1994:src/keys.c    **** 
 3519              		.loc 1 1994 2 view .LVU1004
1996:src/keys.c    **** 	{
 3520              		.loc 1 1996 2 view .LVU1005
1996:src/keys.c    **** 	{
 3521              		.loc 1 1996 16 is_stmt 0 view .LVU1006
 3522 01d2 009B     		ldr	r3, [sp]
 3523 01d4 0AEB0311 		add	r1, r10, r3, lsl #4
 3524 01d8 1801     		lsls	r0, r3, #4
 3525 01da 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
1996:src/keys.c    **** 	{
 3526              		.loc 1 1996 5 view .LVU1007
 3527 01dc 8D06     		lsls	r5, r1, #26
 3528 01de 05D4     		bmi	.L406
1996:src/keys.c    **** 	{
 3529              		.loc 1 1996 40 view .LVU1008
 3530 01e0 A3F15109 		sub	r9, r3, #81
1996:src/keys.c    **** 	{
 3531              		.loc 1 1996 23 view .LVU1009
 3532 01e4 B9F10A0F 		cmp	r9, #10
 3533 01e8 3FF658AF 		bhi	.L481
 3534              	.L406:
1998:src/keys.c    **** 			return STATE_UNFINISHED;
 3535              		.loc 1 1998 3 is_stmt 1 view .LVU1010
1998:src/keys.c    **** 			return STATE_UNFINISHED;
 3536              		.loc 1 1998 6 is_stmt 0 view .LVU1011
 3537 01ec 1106     		lsls	r1, r2, #24
 3538 01ee 3FF555AF 		bmi	.L481
1998:src/keys.c    **** 			return STATE_UNFINISHED;
 3539              		.loc 1 1998 18 view .LVU1012
 3540 01f2 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 3541 01f4 002A     		cmp	r2, #0
 3542 01f6 7FF451AF 		bne	.L481
2000:src/keys.c    **** 			return STATE_UNFINISHED;
 3543              		.loc 1 2000 3 is_stmt 1 view .LVU1013
2000:src/keys.c    **** 			return STATE_UNFINISHED;
 3544              		.loc 1 2000 17 is_stmt 0 view .LVU1014
 3545 01fa 0AEB0003 		add	r3, r10, r0
2000:src/keys.c    **** 			return STATE_UNFINISHED;
 3546              		.loc 1 2000 6 view .LVU1015
 3547 01fe 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3548 0200 632B     		cmp	r3, #99
 3549 0202 7FF64BAF 		bls	.L481
2002:src/keys.c    **** 	}
 3550              		.loc 1 2002 3 is_stmt 1 view .LVU1016
2002:src/keys.c    **** 	}
 3551              		.loc 1 2002 10 is_stmt 0 view .LVU1017
 3552 0206 07F16400 		add	r0, r7, #100
 3553 020a 34E0     		b	.L483
 3554              	.LVL267:
 3555              	.L426:
2002:src/keys.c    **** 	}
 3556              		.loc 1 2002 10 view .LVU1018
 3557              	.LBE477:
 3558              	.LBE476:
2114:src/keys.c    **** 		    base = RARG_SIG;
 3559              		.loc 1 2114 5 is_stmt 1 view .LVU1019
ARM GAS  /tmp/cc6xzGMw.s 			page 134


2118:src/keys.c    **** 		    base = RARG_SIG0;
 3560              		.loc 1 2118 5 view .LVU1020
2118:src/keys.c    **** 		    base = RARG_SIG0;
 3561              		.loc 1 2118 8 is_stmt 0 view .LVU1021
 3562 020c 8D2D     		cmp	r5, #141
 3563 020e 01D0     		beq	.L476
2122:src/keys.c    **** 		    base = RARG_FIX;
 3564              		.loc 1 2122 5 is_stmt 1 view .LVU1022
2122:src/keys.c    **** 		    base = RARG_FIX;
 3565              		.loc 1 2122 8 is_stmt 0 view .LVU1023
 3566 0210 8E2D     		cmp	r5, #142
 3567 0212 56D0     		beq	.L492
 3568              	.L476:
2142:src/keys.c    **** #else
 3569              		.loc 1 2142 3 is_stmt 1 view .LVU1024
2142:src/keys.c    **** #else
 3570              		.loc 1 2142 11 is_stmt 0 view .LVU1025
 3571 0214 8E23     		movs	r3, #142
 3572              	.LVL268:
 3573              	.L480:
2142:src/keys.c    **** #else
 3574              		.loc 1 2142 11 view .LVU1026
 3575 0216 E377     		strb	r3, [r4, #31]
2165:src/keys.c    **** 	case K_F:
 3576              		.loc 1 2165 2 is_stmt 1 view .LVU1027
 3577              	.L397:
2282:src/keys.c    **** 		break;
 3578              		.loc 1 2282 3 view .LVU1028
 3579 0218 0021     		movs	r1, #0
 3580 021a 0620     		movs	r0, #6
 3581              	.LVL269:
2282:src/keys.c    **** 		break;
 3582              		.loc 1 2282 3 is_stmt 0 view .LVU1029
 3583 021c FFF7FEFF 		bl	arg_storcl
 3584              	.LVL270:
2283:src/keys.c    **** 
 3585              		.loc 1 2283 3 is_stmt 1 view .LVU1030
2336:src/keys.c    **** }
 3586              		.loc 1 2336 9 is_stmt 0 view .LVU1031
 3587 0220 3320     		movs	r0, #51
2283:src/keys.c    **** 
 3588              		.loc 1 2283 3 view .LVU1032
 3589 0222 3CE7     		b	.L356
 3590              	.LVL271:
 3591              	.L363:
2074:src/keys.c    **** 
 3592              		.loc 1 2074 42 discriminator 4 view .LVU1033
 3593 0224 19F0800F 		tst	r9, #128
 3594 0228 13D0     		beq	.L362
 3595              	.L361:
 3596              	.LVL272:
2076:src/keys.c    **** 	if (base >= NUM_RARG) {
 3597              		.loc 1 2076 2 is_stmt 1 view .LVU1034
2077:src/keys.c    **** 		reset_arg();
 3598              		.loc 1 2077 5 is_stmt 0 view .LVU1035
 3599 022a 8E2D     		cmp	r5, #142
2076:src/keys.c    **** 	if (base >= NUM_RARG) {
ARM GAS  /tmp/cc6xzGMw.s 			page 135


 3600              		.loc 1 2076 4 view .LVU1036
 3601 022c 29F08006 		bic	r6, r9, #128
 3602              	.LVL273:
2077:src/keys.c    **** 		reset_arg();
 3603              		.loc 1 2077 2 is_stmt 1 view .LVU1037
2072:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3604              		.loc 1 2072 61 is_stmt 0 view .LVU1038
 3605 0230 98BF     		it	ls
 3606 0232 4FF0010C 		movls	ip, #1
2077:src/keys.c    **** 		reset_arg();
 3607              		.loc 1 2077 5 view .LVU1039
 3608 0236 7FF61AAF 		bls	.L368
 3609 023a 2DE7     		b	.L388
 3610              	.L489:
2112:src/keys.c    **** 		case K_UP:	// up arrow
 3611              		.loc 1 2112 3 is_stmt 1 view .LVU1040
 3612 023c 122F     		cmp	r7, #18
 3613 023e 00F00B81 		beq	.L438
 3614 0242 182F     		cmp	r7, #24
 3615 0244 02D0     		beq	.L440
 3616 0246 012F     		cmp	r7, #1
 3617 0248 7FF44CAF 		bne	.L379
 3618              	.L440:
 3619 024c 8E25     		movs	r5, #142
 3620              	.LVL274:
2129:src/keys.c    **** 		    break;
 3621              		.loc 1 2129 12 is_stmt 0 view .LVU1041
 3622 024e 0095     		str	r5, [sp]
 3623 0250 48E7     		b	.L379
 3624              	.LVL275:
 3625              	.L362:
2076:src/keys.c    **** 	if (base >= NUM_RARG) {
 3626              		.loc 1 2076 2 is_stmt 1 view .LVU1042
2077:src/keys.c    **** 		reset_arg();
 3627              		.loc 1 2077 2 view .LVU1043
2077:src/keys.c    **** 		reset_arg();
 3628              		.loc 1 2077 5 is_stmt 0 view .LVU1044
 3629 0252 8E2D     		cmp	r5, #142
 3630 0254 3FF620AF 		bhi	.L388
2105:src/keys.c    **** 		// row column shorthand addressing
 3631              		.loc 1 2105 2 is_stmt 1 view .LVU1045
2107:src/keys.c    **** 
 3632              		.loc 1 2107 3 view .LVU1046
 3633              	.LVL276:
 3634              	.LBB478:
 3635              	.LBI478:
 179:src/keys.c    **** {
 3636              		.loc 1 179 5 view .LVU1047
 3637              	.LBB479:
 181:src/keys.c    **** }
 3638              		.loc 1 181 2 view .LVU1048
 181:src/keys.c    **** }
 3639              		.loc 1 181 18 is_stmt 0 view .LVU1049
 3640 0258 374B     		ldr	r3, .L500+12
 3641 025a A3FB0723 		umull	r2, r3, r3, r7
 181:src/keys.c    **** }
 3642              		.loc 1 181 24 view .LVU1050
ARM GAS  /tmp/cc6xzGMw.s 			page 136


 3643 025e 03F0FC00 		and	r0, r3, #252
 3644              	.LVL277:
 181:src/keys.c    **** }
 3645              		.loc 1 181 24 view .LVU1051
 3646 0262 00EB9300 		add	r0, r0, r3, lsr #2
 181:src/keys.c    **** }
 3647              		.loc 1 181 18 view .LVU1052
 3648 0266 9B08     		lsrs	r3, r3, #2
 181:src/keys.c    **** }
 3649              		.loc 1 181 24 view .LVU1053
 3650 0268 4000     		lsls	r0, r0, #1
 181:src/keys.c    **** }
 3651              		.loc 1 181 33 view .LVU1054
 3652 026a 03EB4303 		add	r3, r3, r3, lsl #1
 181:src/keys.c    **** }
 3653              		.loc 1 181 12 view .LVU1055
 3654 026e 0B30     		adds	r0, r0, #11
 181:src/keys.c    **** }
 3655              		.loc 1 181 33 view .LVU1056
 3656 0270 A7EB4307 		sub	r7, r7, r3, lsl #1
 3657              	.LBE479:
 3658              	.LBE478:
2107:src/keys.c    **** 
 3659              		.loc 1 2107 10 view .LVU1057
 3660 0274 3844     		add	r0, r0, r7
 3661              	.LVL278:
 3662              	.L483:
2337:src/keys.c    **** 
 3663              		.loc 1 2337 1 view .LVU1058
 3664 0276 03B0     		add	sp, sp, #12
 3665              		.cfi_remember_state
 3666              		.cfi_def_cfa_offset 36
 3667              		@ sp needed
 3668 0278 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3669              		.cfi_restore 14
 3670              		.cfi_restore 11
 3671              		.cfi_restore 10
 3672              		.cfi_restore 9
 3673              		.cfi_restore 8
 3674              		.cfi_restore 7
 3675              		.cfi_restore 6
 3676              		.cfi_restore 5
 3677              		.cfi_restore 4
 3678              		.cfi_def_cfa_offset 0
 3679              	.LVL279:
2107:src/keys.c    **** 
 3680              		.loc 1 2107 10 view .LVU1059
 3681 027c FFF7FEBF 		b	arg_eval
 3682              	.LVL280:
 3683              	.L393:
 3684              		.cfi_restore_state
2242:src/keys.c    **** 			return arg_eval(n);
 3685              		.loc 1 2242 3 is_stmt 1 view .LVU1060
2242:src/keys.c    **** 			return arg_eval(n);
 3686              		.loc 1 2242 7 is_stmt 0 view .LVU1061
 3687 0280 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2242:src/keys.c    **** 			return arg_eval(n);
ARM GAS  /tmp/cc6xzGMw.s 			page 137


 3688              		.loc 1 2242 6 view .LVU1062
 3689 0282 5F06     		lsls	r7, r3, #25
 3690 0284 0AD4     		bmi	.L415
2242:src/keys.c    **** 			return arg_eval(n);
 3691              		.loc 1 2242 25 discriminator 1 view .LVU1063
 3692 0286 0121     		movs	r1, #1
 3693 0288 0320     		movs	r0, #3
 3694              	.LVL281:
2242:src/keys.c    **** 			return arg_eval(n);
 3695              		.loc 1 2242 25 discriminator 1 view .LVU1064
 3696 028a FFF7FEFF 		bl	arg_storcl
 3697              	.LVL282:
2242:src/keys.c    **** 			return arg_eval(n);
 3698              		.loc 1 2242 18 discriminator 1 view .LVU1065
 3699 028e 0028     		cmp	r0, #0
 3700 0290 7FF404AF 		bne	.L481
2242:src/keys.c    **** 			return arg_eval(n);
 3701              		.loc 1 2242 63 discriminator 2 view .LVU1066
 3702 0294 B8F1000F 		cmp	r8, #0
 3703 0298 3FF400AF 		beq	.L481
 3704              	.L415:
2243:src/keys.c    **** 		break;
 3705              		.loc 1 2243 4 is_stmt 1 view .LVU1067
2243:src/keys.c    **** 		break;
 3706              		.loc 1 2243 11 is_stmt 0 view .LVU1068
 3707 029c 3046     		mov	r0, r6
 3708 029e EAE7     		b	.L483
 3709              	.LVL283:
 3710              	.L376:
2089:src/keys.c    **** 	  case regT_idx:
 3711              		.loc 1 2089 6 is_stmt 1 view .LVU1069
2089:src/keys.c    **** 	  case regT_idx:
 3712              		.loc 1 2089 13 is_stmt 0 view .LVU1070
 3713 02a0 0320     		movs	r0, #3
 3714              	.LVL284:
 3715              	.L482:
2337:src/keys.c    **** 
 3716              		.loc 1 2337 1 view .LVU1071
 3717 02a2 03B0     		add	sp, sp, #12
 3718              		.cfi_remember_state
 3719              		.cfi_def_cfa_offset 36
 3720              		@ sp needed
 3721 02a4 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3722              		.cfi_restore 14
 3723              		.cfi_restore 11
 3724              		.cfi_restore 10
 3725              		.cfi_restore 9
 3726              		.cfi_restore 8
 3727              		.cfi_restore 7
 3728              		.cfi_restore 6
 3729              		.cfi_restore 5
 3730              		.cfi_restore 4
 3731              		.cfi_def_cfa_offset 0
 3732              	.LVL285:
2087:src/keys.c    **** 	  case regZ_idx:
 3733              		.loc 1 2087 13 view .LVU1072
 3734 02a8 FFF7FEBF 		b	arg_digit
ARM GAS  /tmp/cc6xzGMw.s 			page 138


 3735              	.LVL286:
 3736              	.L377:
 3737              		.cfi_restore_state
2087:src/keys.c    **** 	  case regZ_idx:
 3738              		.loc 1 2087 6 is_stmt 1 view .LVU1073
2087:src/keys.c    **** 	  case regZ_idx:
 3739              		.loc 1 2087 13 is_stmt 0 view .LVU1074
 3740 02ac 0220     		movs	r0, #2
 3741              	.LVL287:
2087:src/keys.c    **** 	  case regZ_idx:
 3742              		.loc 1 2087 13 view .LVU1075
 3743 02ae F8E7     		b	.L482
 3744              	.LVL288:
 3745              	.L374:
2091:src/keys.c    **** 	  case 5:
 3746              		.loc 1 2091 6 is_stmt 1 view .LVU1076
2091:src/keys.c    **** 	  case 5:
 3747              		.loc 1 2091 13 is_stmt 0 view .LVU1077
 3748 02b0 0420     		movs	r0, #4
 3749              	.LVL289:
2091:src/keys.c    **** 	  case 5:
 3750              		.loc 1 2091 13 view .LVU1078
 3751 02b2 F6E7     		b	.L482
 3752              	.LVL290:
 3753              	.L491:
2136:src/keys.c    **** 		    base = RARG_SIG;
 3754              		.loc 1 2136 5 is_stmt 1 view .LVU1079
2136:src/keys.c    **** 		    base = RARG_SIG;
 3755              		.loc 1 2136 8 is_stmt 0 view .LVU1080
 3756 02b4 8E2D     		cmp	r5, #142
 3757 02b6 40F00B81 		bne	.L436
 3758 02ba 8D23     		movs	r3, #141
 3759 02bc 0093     		str	r3, [sp]
 3760              	.LVL291:
2137:src/keys.c    **** 		    break;
 3761              		.loc 1 2137 12 view .LVU1081
 3762 02be 1D46     		mov	r5, r3
 3763 02c0 10E7     		b	.L379
 3764              	.LVL292:
 3765              	.L492:
2137:src/keys.c    **** 		    break;
 3766              		.loc 1 2137 12 view .LVU1082
 3767 02c2 4D23     		movs	r3, #77
 3768 02c4 A7E7     		b	.L480
 3769              	.LVL293:
 3770              	.L398:
2311:src/keys.c    **** 			if (State2.dot)
 3771              		.loc 1 2311 3 is_stmt 1 view .LVU1083
2311:src/keys.c    **** 			if (State2.dot)
 3772              		.loc 1 2311 13 is_stmt 0 view .LVU1084
 3773 02c6 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
2311:src/keys.c    **** 			if (State2.dot)
 3774              		.loc 1 2311 6 view .LVU1085
 3775 02c8 002B     		cmp	r3, #0
 3776 02ca 40F0EC80 		bne	.L422
2312:src/keys.c    **** 				State2.dot = 0;
 3777              		.loc 1 2312 4 is_stmt 1 view .LVU1086
ARM GAS  /tmp/cc6xzGMw.s 			page 139


2312:src/keys.c    **** 				State2.dot = 0;
 3778              		.loc 1 2312 8 is_stmt 0 view .LVU1087
 3779 02ce 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2312:src/keys.c    **** 				State2.dot = 0;
 3780              		.loc 1 2312 7 view .LVU1088
 3781 02d0 13F04001 		ands	r1, r3, #64
 3782 02d4 40F0A080 		bne	.L423
2314:src/keys.c    **** 				State2.local = 0;
 3783              		.loc 1 2314 9 is_stmt 1 view .LVU1089
2314:src/keys.c    **** 				State2.local = 0;
 3784              		.loc 1 2314 13 is_stmt 0 view .LVU1090
 3785 02d8 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2314:src/keys.c    **** 				State2.local = 0;
 3786              		.loc 1 2314 12 view .LVU1091
 3787 02da 12F00100 		ands	r0, r2, #1
 3788              	.LVL294:
2314:src/keys.c    **** 				State2.local = 0;
 3789              		.loc 1 2314 12 view .LVU1092
 3790 02de 40F01181 		bne	.L493
2316:src/keys.c    **** 				State2.ind = 0;
 3791              		.loc 1 2316 9 is_stmt 1 view .LVU1093
2316:src/keys.c    **** 				State2.ind = 0;
 3792              		.loc 1 2316 12 is_stmt 0 view .LVU1094
 3793 02e2 1906     		lsls	r1, r3, #24
 3794 02e4 7FF5D8AE 		bpl	.L388
2317:src/keys.c    **** 			else
 3795              		.loc 1 2317 5 is_stmt 1 view .LVU1095
2317:src/keys.c    **** 			else
 3796              		.loc 1 2317 16 is_stmt 0 view .LVU1096
 3797 02e8 60F3C713 		bfi	r3, r0, #7, #1
 3798 02ec 6375     		strb	r3, [r4, #21]
2336:src/keys.c    **** }
 3799              		.loc 1 2336 9 view .LVU1097
 3800 02ee 3320     		movs	r0, #51
 3801 02f0 D5E6     		b	.L356
 3802              	.LVL295:
 3803              	.L396:
2246:src/keys.c    **** 		break;
 3804              		.loc 1 2246 3 is_stmt 1 view .LVU1098
 3805 02f2 0121     		movs	r1, #1
 3806 02f4 0420     		movs	r0, #4
 3807              	.LVL296:
2246:src/keys.c    **** 		break;
 3808              		.loc 1 2246 3 is_stmt 0 view .LVU1099
 3809 02f6 FFF7FEFF 		bl	arg_storcl
 3810              	.LVL297:
2247:src/keys.c    **** #else
 3811              		.loc 1 2247 3 is_stmt 1 view .LVU1100
2336:src/keys.c    **** }
 3812              		.loc 1 2336 9 is_stmt 0 view .LVU1101
 3813 02fa 3320     		movs	r0, #51
2247:src/keys.c    **** #else
 3814              		.loc 1 2247 3 view .LVU1102
 3815 02fc CFE6     		b	.L356
 3816              	.LVL298:
 3817              	.L395:
2286:src/keys.c    **** 		break;
ARM GAS  /tmp/cc6xzGMw.s 			page 140


 3818              		.loc 1 2286 3 is_stmt 1 view .LVU1103
 3819 02fe 0021     		movs	r1, #0
 3820 0300 0520     		movs	r0, #5
 3821              	.LVL299:
2286:src/keys.c    **** 		break;
 3822              		.loc 1 2286 3 is_stmt 0 view .LVU1104
 3823 0302 FFF7FEFF 		bl	arg_storcl
 3824              	.LVL300:
2287:src/keys.c    **** 
 3825              		.loc 1 2287 3 is_stmt 1 view .LVU1105
2336:src/keys.c    **** }
 3826              		.loc 1 2336 9 is_stmt 0 view .LVU1106
 3827 0306 3320     		movs	r0, #51
2287:src/keys.c    **** 
 3828              		.loc 1 2287 3 view .LVU1107
 3829 0308 C9E6     		b	.L356
 3830              	.LVL301:
 3831              	.L394:
2189:src/keys.c    **** 	    return process_arg_shuffle(3);
 3832              		.loc 1 2189 4 is_stmt 1 view .LVU1108
2189:src/keys.c    **** 	    return process_arg_shuffle(3);
 3833              		.loc 1 2189 8 is_stmt 0 view .LVU1109
 3834 030a A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2189:src/keys.c    **** 	    return process_arg_shuffle(3);
 3835              		.loc 1 2189 7 view .LVU1110
 3836 030c 9507     		lsls	r5, r2, #30
 3837 030e 7FF557AF 		bpl	.L400
2190:src/keys.c    **** 	case K51:       // X
 3838              		.loc 1 2190 6 is_stmt 1 view .LVU1111
2190:src/keys.c    **** 	case K51:       // X
 3839              		.loc 1 2190 13 is_stmt 0 view .LVU1112
 3840 0312 0320     		movs	r0, #3
 3841              	.LVL302:
 3842              	.L484:
2337:src/keys.c    **** 
 3843              		.loc 1 2337 1 view .LVU1113
 3844 0314 03B0     		add	sp, sp, #12
 3845              		.cfi_remember_state
 3846              		.cfi_def_cfa_offset 36
 3847              		@ sp needed
 3848 0316 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3849              		.cfi_restore 14
 3850              		.cfi_restore 11
 3851              		.cfi_restore 10
 3852              		.cfi_restore 9
 3853              		.cfi_restore 8
 3854              		.cfi_restore 7
 3855              		.cfi_restore 6
 3856              		.cfi_restore 5
 3857              		.cfi_restore 4
 3858              		.cfi_def_cfa_offset 0
 3859              	.LVL303:
2199:src/keys.c    **** #else
 3860              		.loc 1 2199 13 view .LVU1114
 3861 031a FFF7FEBF 		b	process_arg_shuffle
 3862              	.LVL304:
 3863              	.L392:
ARM GAS  /tmp/cc6xzGMw.s 			page 141


 3864              		.cfi_restore_state
2192:src/keys.c    **** 	    return process_arg_shuffle(0);
 3865              		.loc 1 2192 4 is_stmt 1 view .LVU1115
2192:src/keys.c    **** 	    return process_arg_shuffle(0);
 3866              		.loc 1 2192 8 is_stmt 0 view .LVU1116
 3867 031e A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2192:src/keys.c    **** 	    return process_arg_shuffle(0);
 3868              		.loc 1 2192 7 view .LVU1117
 3869 0320 9007     		lsls	r0, r2, #30
 3870              	.LVL305:
2192:src/keys.c    **** 	    return process_arg_shuffle(0);
 3871              		.loc 1 2192 7 view .LVU1118
 3872 0322 7FF54DAF 		bpl	.L400
2193:src/keys.c    **** 	case K52:	// Y
 3873              		.loc 1 2193 6 is_stmt 1 view .LVU1119
2193:src/keys.c    **** 	case K52:	// Y
 3874              		.loc 1 2193 13 is_stmt 0 view .LVU1120
 3875 0326 0020     		movs	r0, #0
 3876 0328 F4E7     		b	.L484
 3877              	.L501:
 3878 032a 00BF     		.align	2
 3879              	.L500:
 3880 032c 00000000 		.word	StateWhileOn
 3881 0330 00000000 		.word	.LANCHOR6
 3882 0334 00000000 		.word	.LANCHOR5
 3883 0338 ABAAAAAA 		.word	-1431655765
 3884 033c 00000000 		.word	argcmds
 3885              	.LVL306:
 3886              	.L390:
2198:src/keys.c    **** 	    return process_arg_shuffle(2);
 3887              		.loc 1 2198 4 is_stmt 1 view .LVU1121
2198:src/keys.c    **** 	    return process_arg_shuffle(2);
 3888              		.loc 1 2198 8 is_stmt 0 view .LVU1122
 3889 0340 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2198:src/keys.c    **** 	    return process_arg_shuffle(2);
 3890              		.loc 1 2198 7 view .LVU1123
 3891 0342 9207     		lsls	r2, r2, #30
 3892 0344 7FF53CAF 		bpl	.L400
2199:src/keys.c    **** #else
 3893              		.loc 1 2199 6 is_stmt 1 view .LVU1124
2199:src/keys.c    **** #else
 3894              		.loc 1 2199 13 is_stmt 0 view .LVU1125
 3895 0348 0220     		movs	r0, #2
 3896              	.LVL307:
2199:src/keys.c    **** #else
 3897              		.loc 1 2199 13 view .LVU1126
 3898 034a E3E7     		b	.L484
 3899              	.LVL308:
 3900              	.L389:
2235:src/keys.c    **** 			reset_arg();
 3901              		.loc 1 2235 3 is_stmt 1 view .LVU1127
2235:src/keys.c    **** 			reset_arg();
 3902              		.loc 1 2235 6 is_stmt 0 view .LVU1128
 3903 034c 009B     		ldr	r3, [sp]
 3904 034e 212B     		cmp	r3, #33
 3905 0350 00F0B980 		beq	.L412
2235:src/keys.c    **** 			reset_arg();
ARM GAS  /tmp/cc6xzGMw.s 			page 142


 3906              		.loc 1 2235 25 discriminator 1 view .LVU1129
 3907 0354 732B     		cmp	r3, #115
 3908 0356 00F0B680 		beq	.L412
2239:src/keys.c    **** 		break;
 3909              		.loc 1 2239 3 is_stmt 1 view .LVU1130
 3910 035a 0121     		movs	r1, #1
 3911 035c 0220     		movs	r0, #2
 3912              	.LVL309:
2239:src/keys.c    **** 		break;
 3913              		.loc 1 2239 3 is_stmt 0 view .LVU1131
 3914 035e FFF7FEFF 		bl	arg_storcl
 3915              	.LVL310:
2240:src/keys.c    **** 	case K44:		// multiply
 3916              		.loc 1 2240 3 is_stmt 1 view .LVU1132
2336:src/keys.c    **** }
 3917              		.loc 1 2336 9 is_stmt 0 view .LVU1133
 3918 0362 3320     		movs	r0, #51
2240:src/keys.c    **** 	case K44:		// multiply
 3919              		.loc 1 2240 3 view .LVU1134
 3920 0364 9BE6     		b	.L356
 3921              	.LVL311:
 3922              	.L387:
2227:src/keys.c    **** 
 3923              		.loc 1 2227 3 is_stmt 1 view .LVU1135
 3924              	.LBB480:
 3925              	.LBI480:
2034:src/keys.c    **** 
 3926              		.loc 1 2034 12 view .LVU1136
 3927              	.LBB481:
2036:src/keys.c    **** 		// Only valid at beginning of entry
 3928              		.loc 1 2036 2 view .LVU1137
2036:src/keys.c    **** 		// Only valid at beginning of entry
 3929              		.loc 1 2036 5 is_stmt 0 view .LVU1138
 3930 0366 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 3931 0368 002A     		cmp	r2, #0
 3932 036a 7FF497AE 		bne	.L481
2038:src/keys.c    **** 			// '..' or ENTER '.' = X
 3933              		.loc 1 2038 3 is_stmt 1 view .LVU1139
2038:src/keys.c    **** 			// '..' or ENTER '.' = X
 3934              		.loc 1 2038 6 is_stmt 0 view .LVU1140
 3935 036e 11F4A03F 		tst	r1, #81920
 3936 0372 40F0C180 		bne	.L494
2043:src/keys.c    **** 			// local register or flag select
 3937              		.loc 1 2043 3 is_stmt 1 view .LVU1141
2043:src/keys.c    **** 			// local register or flag select
 3938              		.loc 1 2043 20 is_stmt 0 view .LVU1142
 3939 0376 009B     		ldr	r3, [sp]
 3940 0378 0AEB0313 		add	r3, r10, r3, lsl #4
 3941 037c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
2043:src/keys.c    **** 			// local register or flag select
 3942              		.loc 1 2043 6 view .LVU1143
 3943 037e 1A07     		lsls	r2, r3, #28
 3944 0380 00F1A880 		bmi	.L408
2043:src/keys.c    **** 			// local register or flag select
 3945              		.loc 1 2043 27 view .LVU1144
 3946 0384 94F91530 		ldrsb	r3, [r4, #21]
 3947 0388 002B     		cmp	r3, #0
ARM GAS  /tmp/cc6xzGMw.s 			page 143


 3948 038a C0F2A380 		blt	.L408
2047:src/keys.c    **** 			// Special GTO . sequence
 3949              		.loc 1 2047 8 is_stmt 1 view .LVU1145
2047:src/keys.c    **** 			// Special GTO . sequence
 3950              		.loc 1 2047 29 is_stmt 0 view .LVU1146
 3951 038e 009B     		ldr	r3, [sp]
 3952 0390 A3F14409 		sub	r9, r3, #68
2047:src/keys.c    **** 			// Special GTO . sequence
 3953              		.loc 1 2047 11 view .LVU1147
 3954 0394 B9F1010F 		cmp	r9, #1
 3955 0398 3FF680AE 		bhi	.L481
2049:src/keys.c    **** 				State2.gtodot = 1;
 3956              		.loc 1 2049 4 is_stmt 1 view .LVU1148
2050:src/keys.c    **** 				reset_arg();
 3957              		.loc 1 2050 5 view .LVU1149
2050:src/keys.c    **** 				reset_arg();
 3958              		.loc 1 2050 19 is_stmt 0 view .LVU1150
 3959 039c 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 3960 039e 43F00103 		orr	r3, r3, #1
 3961 03a2 6375     		strb	r3, [r4, #21]
2051:src/keys.c    **** 			}
 3962              		.loc 1 2051 5 is_stmt 1 view .LVU1151
 3963 03a4 FFF7FEFF 		bl	reset_arg
 3964              	.LVL312:
2055:src/keys.c    **** }
 3965              		.loc 1 2055 9 is_stmt 0 view .LVU1152
 3966 03a8 3320     		movs	r0, #51
 3967 03aa 78E6     		b	.L356
 3968              	.LVL313:
 3969              	.L386:
2055:src/keys.c    **** }
 3970              		.loc 1 2055 9 view .LVU1153
 3971              	.LBE481:
 3972              	.LBE480:
2231:src/keys.c    **** 			return arg_eval(n);
 3973              		.loc 1 2231 3 is_stmt 1 view .LVU1154
2231:src/keys.c    **** 			return arg_eval(n);
 3974              		.loc 1 2231 7 is_stmt 0 view .LVU1155
 3975 03ac 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2231:src/keys.c    **** 			return arg_eval(n);
 3976              		.loc 1 2231 6 view .LVU1156
 3977 03ae 5B06     		lsls	r3, r3, #25
 3978 03b0 3FF574AF 		bmi	.L415
2231:src/keys.c    **** 			return arg_eval(n);
 3979              		.loc 1 2231 25 discriminator 1 view .LVU1157
 3980 03b4 0121     		movs	r1, #1
 3981 03b6 0846     		mov	r0, r1
 3982              	.LVL314:
2231:src/keys.c    **** 			return arg_eval(n);
 3983              		.loc 1 2231 25 discriminator 1 view .LVU1158
 3984 03b8 FFF7FEFF 		bl	arg_storcl
 3985              	.LVL315:
2231:src/keys.c    **** 			return arg_eval(n);
 3986              		.loc 1 2231 18 discriminator 1 view .LVU1159
 3987 03bc 0028     		cmp	r0, #0
 3988 03be 7FF46DAE 		bne	.L481
2242:src/keys.c    **** 			return arg_eval(n);
ARM GAS  /tmp/cc6xzGMw.s 			page 144


 3989              		.loc 1 2242 63 view .LVU1160
 3990 03c2 B8F1000F 		cmp	r8, #0
 3991 03c6 3FF469AE 		beq	.L481
 3992 03ca 67E7     		b	.L415
 3993              	.LVL316:
 3994              	.L385:
2167:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 3995              		.loc 1 2167 3 is_stmt 1 view .LVU1161
2167:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 3996              		.loc 1 2167 6 is_stmt 0 view .LVU1162
 3997 03cc BCF1000F 		cmp	ip, #0
 3998 03d0 3FF464AE 		beq	.L481
2168:src/keys.c    **** 		break;
 3999              		.loc 1 2168 4 is_stmt 1 view .LVU1163
 4000              	.LVL317:
 4001              	.LBB484:
 4002              	.LBI484:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 4003              		.loc 1 104 20 view .LVU1164
 4004              	.LBB485:
 105:src/keys.c    **** 	State2.shifts = shift;
 4005              		.loc 1 105 2 view .LVU1165
 4006              	.LBB486:
 4007              	.LBI486:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4008              		.loc 1 96 13 view .LVU1166
 4009              	.LBB487:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4010              		.loc 1 97 2 view .LVU1167
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4011              		.loc 1 97 18 is_stmt 0 view .LVU1168
 4012 03d4 FFF7FEFF 		bl	shift_down
 4013              	.LVL318:
  98:src/keys.c    **** }
 4014              		.loc 1 98 2 is_stmt 1 view .LVU1169
 4015              	.LBE487:
 4016              	.LBE486:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4017              		.loc 1 106 2 view .LVU1170
 4018              	.LBE485:
 4019              	.LBE484:
2168:src/keys.c    **** 		break;
 4020              		.loc 1 2168 4 is_stmt 0 view .LVU1171
 4021 03d8 019B     		ldr	r3, [sp, #4]
 4022 03da B3F1010A 		subs	r10, r3, #1
 4023 03de 18BF     		it	ne
 4024 03e0 4FF0010A 		movne	r10, #1
 4025 03e4 84F810A0 		strb	r10, [r4, #16]
 4026              	.LBB490:
 4027              	.LBB488:
 108:src/keys.c    **** }
 4028              		.loc 1 108 2 is_stmt 1 view .LVU1172
 4029              	.LBE488:
 4030              	.LBE490:
2336:src/keys.c    **** }
 4031              		.loc 1 2336 9 is_stmt 0 view .LVU1173
 4032 03e8 3320     		movs	r0, #51
ARM GAS  /tmp/cc6xzGMw.s 			page 145


 4033              	.LBB491:
 4034              	.LBB489:
 108:src/keys.c    **** }
 4035              		.loc 1 108 9 view .LVU1174
 4036 03ea 58E6     		b	.L356
 4037              	.LVL319:
 4038              	.L384:
 108:src/keys.c    **** }
 4039              		.loc 1 108 9 view .LVU1175
 4040              	.LBE489:
 4041              	.LBE491:
2172:src/keys.c    **** 			State2.ind = ! State2.ind;
 4042              		.loc 1 2172 3 is_stmt 1 view .LVU1176
2172:src/keys.c    **** 			State2.ind = ! State2.ind;
 4043              		.loc 1 2172 7 is_stmt 0 view .LVU1177
 4044 03ec 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
2172:src/keys.c    **** 			State2.ind = ! State2.ind;
 4045              		.loc 1 2172 6 view .LVU1178
 4046 03ee 5706     		lsls	r7, r2, #25
 4047 03f0 3FF554AE 		bmi	.L481
2172:src/keys.c    **** 			State2.ind = ! State2.ind;
 4048              		.loc 1 2172 35 discriminator 1 view .LVU1179
 4049 03f4 009B     		ldr	r3, [sp]
 4050 03f6 0AEB0319 		add	r9, r10, r3, lsl #4
 4051 03fa 99F80530 		ldrb	r3, [r9, #5]	@ zero_extendqisi2
2172:src/keys.c    **** 			State2.ind = ! State2.ind;
 4052              		.loc 1 2172 19 discriminator 1 view .LVU1180
 4053 03fe DE07     		lsls	r6, r3, #31
 4054              	.LVL320:
2172:src/keys.c    **** 			State2.ind = ! State2.ind;
 4055              		.loc 1 2172 19 discriminator 1 view .LVU1181
 4056 0400 7FF54CAE 		bpl	.L481
2173:src/keys.c    **** 			if (! stack_reg)
 4057              		.loc 1 2173 4 is_stmt 1 view .LVU1182
2173:src/keys.c    **** 			if (! stack_reg)
 4058              		.loc 1 2173 17 is_stmt 0 view .LVU1183
 4059 0404 D343     		mvns	r3, r2
 4060 0406 C3F3C013 		ubfx	r3, r3, #7, #1
2173:src/keys.c    **** 			if (! stack_reg)
 4061              		.loc 1 2173 15 view .LVU1184
 4062 040a 63F3C712 		bfi	r2, r3, #7, #1
 4063 040e 6275     		strb	r2, [r4, #21]
2174:src/keys.c    **** 				State2.dot = 0;
 4064              		.loc 1 2174 4 is_stmt 1 view .LVU1185
2174:src/keys.c    **** 				State2.dot = 0;
 4065              		.loc 1 2174 7 is_stmt 0 view .LVU1186
 4066 0410 B8F1000F 		cmp	r8, #0
 4067 0414 7FF442AE 		bne	.L481
 4068              	.L423:
2175:src/keys.c    **** 		}
 4069              		.loc 1 2175 5 is_stmt 1 view .LVU1187
2175:src/keys.c    **** 		}
 4070              		.loc 1 2175 16 is_stmt 0 view .LVU1188
 4071 0418 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 4072 041a 6FF38613 		bfc	r3, #6, #1
 4073 041e 6375     		strb	r3, [r4, #21]
2336:src/keys.c    **** }
ARM GAS  /tmp/cc6xzGMw.s 			page 146


 4074              		.loc 1 2336 9 view .LVU1189
 4075 0420 3320     		movs	r0, #51
 4076              	.LVL321:
2336:src/keys.c    **** }
 4077              		.loc 1 2336 9 view .LVU1190
 4078 0422 3CE6     		b	.L356
 4079              	.LVL322:
 4080              	.L382:
2180:src/keys.c    **** 			break;
 4081              		.loc 1 2180 3 is_stmt 1 view .LVU1191
2180:src/keys.c    **** 			break;
 4082              		.loc 1 2180 18 is_stmt 0 view .LVU1192
 4083 0424 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2180:src/keys.c    **** 			break;
 4084              		.loc 1 2180 6 view .LVU1193
 4085 0426 13F0C00F 		tst	r3, #192
 4086 042a 7FF437AE 		bne	.L481
2182:src/keys.c    **** 			CmdBase = RARG_STOM;
 4087              		.loc 1 2182 3 is_stmt 1 view .LVU1194
2182:src/keys.c    **** 			CmdBase = RARG_STOM;
 4088              		.loc 1 2182 6 is_stmt 0 view .LVU1195
 4089 042e 009B     		ldr	r3, [sp]
 4090 0430 032B     		cmp	r3, #3
 4091 0432 5DD0     		beq	.L495
2184:src/keys.c    **** 			CmdBase = RARG_RCLM;
 4092              		.loc 1 2184 8 is_stmt 1 view .LVU1196
2184:src/keys.c    **** 			CmdBase = RARG_RCLM;
 4093              		.loc 1 2184 11 is_stmt 0 view .LVU1197
 4094 0434 009B     		ldr	r3, [sp]
 4095 0436 0A2B     		cmp	r3, #10
 4096 0438 7FF430AE 		bne	.L481
2185:src/keys.c    **** 		break;
 4097              		.loc 1 2185 4 is_stmt 1 view .LVU1198
2185:src/keys.c    **** 		break;
 4098              		.loc 1 2185 12 is_stmt 0 view .LVU1199
 4099 043c 7823     		movs	r3, #120
 4100 043e E377     		strb	r3, [r4, #31]
2336:src/keys.c    **** }
 4101              		.loc 1 2336 9 view .LVU1200
 4102 0440 3320     		movs	r0, #51
 4103              	.LVL323:
2336:src/keys.c    **** }
 4104              		.loc 1 2336 9 view .LVU1201
 4105 0442 2CE6     		b	.L356
 4106              	.LVL324:
 4107              	.L399:
2290:src/keys.c    **** 			if (argcmds[base].label) {
 4108              		.loc 1 2290 3 is_stmt 1 view .LVU1202
2290:src/keys.c    **** 			if (argcmds[base].label) {
 4109              		.loc 1 2290 6 is_stmt 0 view .LVU1203
 4110 0444 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 4111 0446 4AB1     		cbz	r2, .L496
2304:src/keys.c    **** 			return arg_eval(State2.digval);
 4112              		.loc 1 2304 10 is_stmt 1 view .LVU1204
2305:src/keys.c    **** 		else if (stack_reg)
 4113              		.loc 1 2305 4 view .LVU1205
2305:src/keys.c    **** 		else if (stack_reg)
ARM GAS  /tmp/cc6xzGMw.s 			page 147


 4114              		.loc 1 2305 11 is_stmt 0 view .LVU1206
 4115 0448 2089     		ldrh	r0, [r4, #8]
 4116              	.LVL325:
2305:src/keys.c    **** 		else if (stack_reg)
 4117              		.loc 1 2305 11 view .LVU1207
 4118 044a 14E7     		b	.L483
 4119              	.LVL326:
 4120              	.L391:
2195:src/keys.c    **** 	    return process_arg_shuffle(1);
 4121              		.loc 1 2195 4 is_stmt 1 view .LVU1208
2195:src/keys.c    **** 	    return process_arg_shuffle(1);
 4122              		.loc 1 2195 8 is_stmt 0 view .LVU1209
 4123 044c A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2195:src/keys.c    **** 	    return process_arg_shuffle(1);
 4124              		.loc 1 2195 7 view .LVU1210
 4125 044e 9107     		lsls	r1, r2, #30
 4126 0450 7FF5B6AE 		bpl	.L400
2196:src/keys.c    **** 	case K53:       // Z
 4127              		.loc 1 2196 6 is_stmt 1 view .LVU1211
2196:src/keys.c    **** 	case K53:       // Z
 4128              		.loc 1 2196 13 is_stmt 0 view .LVU1212
 4129 0454 0120     		movs	r0, #1
 4130              	.LVL327:
2196:src/keys.c    **** 	case K53:       // Z
 4131              		.loc 1 2196 13 view .LVU1213
 4132 0456 5DE7     		b	.L484
 4133              	.LVL328:
 4134              	.L438:
2112:src/keys.c    **** 		case K_UP:	// up arrow
 4135              		.loc 1 2112 3 view .LVU1214
 4136 0458 8D23     		movs	r3, #141
 4137              	.LVL329:
2142:src/keys.c    **** #else
 4138              		.loc 1 2142 3 is_stmt 1 view .LVU1215
 4139 045a DCE6     		b	.L480
 4140              	.L496:
2290:src/keys.c    **** 			if (argcmds[base].label) {
 4141              		.loc 1 2290 43 is_stmt 0 discriminator 1 view .LVU1216
 4142 045c 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
 4143 045e 12F0C00F 		tst	r2, #192
 4144 0462 13D1     		bne	.L417
2291:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4145              		.loc 1 2291 4 is_stmt 1 view .LVU1217
2291:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4146              		.loc 1 2291 21 is_stmt 0 view .LVU1218
 4147 0464 009B     		ldr	r3, [sp]
 4148 0466 0AEB0313 		add	r3, r10, r3, lsl #4
 4149 046a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
2291:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4150              		.loc 1 2291 7 view .LVU1219
 4151 046c 9E06     		lsls	r6, r3, #26
 4152              	.LVL330:
2291:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4153              		.loc 1 2291 7 view .LVU1220
 4154 046e 4ED4     		bmi	.L497
2296:src/keys.c    **** 				reset_arg();
 4155              		.loc 1 2296 11 is_stmt 1 view .LVU1221
ARM GAS  /tmp/cc6xzGMw.s 			page 148


2296:src/keys.c    **** 				reset_arg();
 4156              		.loc 1 2296 14 is_stmt 0 view .LVU1222
 4157 0470 0099     		ldr	r1, [sp]
 4158 0472 4E29     		cmp	r1, #78
 4159 0474 5DD0     		beq	.L498
2299:src/keys.c    **** 				reset_arg();
 4160              		.loc 1 2299 11 is_stmt 1 view .LVU1223
2299:src/keys.c    **** 				reset_arg();
 4161              		.loc 1 2299 14 is_stmt 0 view .LVU1224
 4162 0476 0099     		ldr	r1, [sp]
 4163 0478 4F29     		cmp	r1, #79
 4164 047a 5FD0     		beq	.L499
2302:src/keys.c    **** 				State2.dot = 1;
 4165              		.loc 1 2302 11 is_stmt 1 view .LVU1225
2302:src/keys.c    **** 				State2.dot = 1;
 4166              		.loc 1 2302 14 is_stmt 0 view .LVU1226
 4167 047c 5807     		lsls	r0, r3, #29
 4168              	.LVL331:
2302:src/keys.c    **** 				State2.dot = 1;
 4169              		.loc 1 2302 14 view .LVU1227
 4170 047e 7FF50DAE 		bpl	.L481
2303:src/keys.c    **** 		} else if (State2.numdigit > 0)
 4171              		.loc 1 2303 5 is_stmt 1 view .LVU1228
2303:src/keys.c    **** 		} else if (State2.numdigit > 0)
 4172              		.loc 1 2303 16 is_stmt 0 view .LVU1229
 4173 0482 42F04002 		orr	r2, r2, #64
 4174 0486 6275     		strb	r2, [r4, #21]
2336:src/keys.c    **** }
 4175              		.loc 1 2336 9 view .LVU1230
 4176 0488 3320     		movs	r0, #51
 4177 048a 08E6     		b	.L356
 4178              	.LVL332:
 4179              	.L417:
2304:src/keys.c    **** 			return arg_eval(State2.digval);
 4180              		.loc 1 2304 10 is_stmt 1 view .LVU1231
2306:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 4181              		.loc 1 2306 8 view .LVU1232
2306:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 4182              		.loc 1 2306 11 is_stmt 0 view .LVU1233
 4183 048c B8F1000F 		cmp	r8, #0
 4184 0490 3FF404AE 		beq	.L481
2307:src/keys.c    **** 		break;
 4185              		.loc 1 2307 4 is_stmt 1 view .LVU1234
2307:src/keys.c    **** 		break;
 4186              		.loc 1 2307 27 is_stmt 0 view .LVU1235
 4187 0494 C2F38013 		ubfx	r3, r2, #6, #1
2307:src/keys.c    **** 		break;
 4188              		.loc 1 2307 19 view .LVU1236
 4189 0498 C3F10103 		rsb	r3, r3, #1
2307:src/keys.c    **** 		break;
 4190              		.loc 1 2307 15 view .LVU1237
 4191 049c 63F38612 		bfi	r2, r3, #6, #1
 4192 04a0 6275     		strb	r2, [r4, #21]
2336:src/keys.c    **** }
 4193              		.loc 1 2336 9 view .LVU1238
 4194 04a2 3320     		movs	r0, #51
 4195              	.LVL333:
ARM GAS  /tmp/cc6xzGMw.s 			page 149


2336:src/keys.c    **** }
 4196              		.loc 1 2336 9 view .LVU1239
 4197 04a4 FBE5     		b	.L356
 4198              	.LVL334:
 4199              	.L422:
2322:src/keys.c    **** 			if (State2.shuffle)
 4200              		.loc 1 2322 4 is_stmt 1 view .LVU1240
2323:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4201              		.loc 1 2323 8 is_stmt 0 view .LVU1241
 4202 04a6 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2322:src/keys.c    **** 			if (State2.shuffle)
 4203              		.loc 1 2322 4 view .LVU1242
 4204 04a8 013B     		subs	r3, r3, #1
 4205 04aa DBB2     		uxtb	r3, r3
2323:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4206              		.loc 1 2323 7 view .LVU1243
 4207 04ac 9207     		lsls	r2, r2, #30
2322:src/keys.c    **** 			if (State2.shuffle)
 4208              		.loc 1 2322 4 view .LVU1244
 4209 04ae E372     		strb	r3, [r4, #11]
2323:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4210              		.loc 1 2323 4 is_stmt 1 view .LVU1245
2323:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4211              		.loc 1 2323 7 is_stmt 0 view .LVU1246
 4212 04b0 16D5     		bpl	.L425
2324:src/keys.c    **** 			else
 4213              		.loc 1 2324 5 is_stmt 1 view .LVU1247
2324:src/keys.c    **** 			else
 4214              		.loc 1 2324 19 is_stmt 0 view .LVU1248
 4215 04b2 2289     		ldrh	r2, [r4, #8]
2324:src/keys.c    **** 			else
 4216              		.loc 1 2324 46 view .LVU1249
 4217 04b4 5B00     		lsls	r3, r3, #1
2324:src/keys.c    **** 			else
 4218              		.loc 1 2324 26 view .LVU1250
 4219 04b6 0321     		movs	r1, #3
 4220 04b8 01FA03F3 		lsl	r3, r1, r3
2324:src/keys.c    **** 			else
 4221              		.loc 1 2324 19 view .LVU1251
 4222 04bc 22EA0303 		bic	r3, r2, r3
 4223 04c0 2381     		strh	r3, [r4, #8]	@ movhi
2336:src/keys.c    **** }
 4224              		.loc 1 2336 9 view .LVU1252
 4225 04c2 3320     		movs	r0, #51
 4226              	.LVL335:
2336:src/keys.c    **** }
 4227              		.loc 1 2336 9 view .LVU1253
 4228 04c4 EBE5     		b	.L356
 4229              	.LVL336:
 4230              	.L412:
2236:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
 4231              		.loc 1 2236 4 is_stmt 1 view .LVU1254
 4232 04c6 FFF7FEFF 		bl	reset_arg
 4233              	.LVL337:
2237:src/keys.c    **** 		}
 4234              		.loc 1 2237 4 view .LVU1255
2237:src/keys.c    **** 		}
ARM GAS  /tmp/cc6xzGMw.s 			page 150


 4235              		.loc 1 2237 11 is_stmt 0 view .LVU1256
 4236 04ca 40F27510 		movw	r0, #373
 4237 04ce E6E5     		b	.L356
 4238              	.LVL338:
 4239              	.L436:
2237:src/keys.c    **** 		}
 4240              		.loc 1 2237 11 view .LVU1257
 4241 04d0 8E25     		movs	r5, #142
 4242              	.LVL339:
2237:src/keys.c    **** 		}
 4243              		.loc 1 2237 11 view .LVU1258
 4244 04d2 07E6     		b	.L379
 4245              	.LVL340:
 4246              	.L408:
 4247              	.LBB492:
 4248              	.LBB482:
2045:src/keys.c    **** 		}
 4249              		.loc 1 2045 4 is_stmt 1 view .LVU1259
2045:src/keys.c    **** 		}
 4250              		.loc 1 2045 17 is_stmt 0 view .LVU1260
 4251 04d4 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 4252 04d6 43F00103 		orr	r3, r3, #1
 4253 04da A375     		strb	r3, [r4, #22]
2055:src/keys.c    **** }
 4254              		.loc 1 2055 9 view .LVU1261
 4255 04dc 3320     		movs	r0, #51
 4256              	.LVL341:
2045:src/keys.c    **** 		}
 4257              		.loc 1 2045 17 view .LVU1262
 4258 04de DEE5     		b	.L356
 4259              	.LVL342:
 4260              	.L425:
2045:src/keys.c    **** 		}
 4261              		.loc 1 2045 17 view .LVU1263
 4262              	.LBE482:
 4263              	.LBE492:
2326:src/keys.c    **** 		}
 4264              		.loc 1 2326 5 is_stmt 1 view .LVU1264
2326:src/keys.c    **** 		}
 4265              		.loc 1 2326 19 is_stmt 0 view .LVU1265
 4266 04e0 2389     		ldrh	r3, [r4, #8]
 4267 04e2 1A4A     		ldr	r2, .L502
 4268 04e4 A2FB0323 		umull	r2, r3, r2, r3
 4269 04e8 DB08     		lsrs	r3, r3, #3
 4270 04ea 2381     		strh	r3, [r4, #8]	@ movhi
2336:src/keys.c    **** }
 4271              		.loc 1 2336 9 view .LVU1266
 4272 04ec 3320     		movs	r0, #51
 4273              	.LVL343:
2336:src/keys.c    **** }
 4274              		.loc 1 2336 9 view .LVU1267
 4275 04ee D6E5     		b	.L356
 4276              	.LVL344:
 4277              	.L495:
2183:src/keys.c    **** 		else if (base == RARG_RCL)
 4278              		.loc 1 2183 4 is_stmt 1 view .LVU1268
2183:src/keys.c    **** 		else if (base == RARG_RCL)
ARM GAS  /tmp/cc6xzGMw.s 			page 151


 4279              		.loc 1 2183 12 is_stmt 0 view .LVU1269
 4280 04f0 7723     		movs	r3, #119
 4281 04f2 E377     		strb	r3, [r4, #31]
2336:src/keys.c    **** }
 4282              		.loc 1 2336 9 view .LVU1270
 4283 04f4 3320     		movs	r0, #51
 4284              	.LVL345:
2336:src/keys.c    **** }
 4285              		.loc 1 2336 9 view .LVU1271
 4286 04f6 D2E5     		b	.L356
 4287              	.LVL346:
 4288              	.L494:
 4289              	.LBB493:
 4290              	.LBB483:
2040:src/keys.c    **** 			return arg_eval(regX_idx);
 4291              		.loc 1 2040 4 is_stmt 1 view .LVU1272
2040:src/keys.c    **** 			return arg_eval(regX_idx);
 4292              		.loc 1 2040 17 is_stmt 0 view .LVU1273
 4293 04f8 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 4294 04fa 62F30003 		bfi	r3, r2, #0, #1
2041:src/keys.c    **** 		}
 4295              		.loc 1 2041 11 view .LVU1274
 4296 04fe 6420     		movs	r0, #100
 4297              	.LVL347:
2040:src/keys.c    **** 			return arg_eval(regX_idx);
 4298              		.loc 1 2040 17 view .LVU1275
 4299 0500 A375     		strb	r3, [r4, #22]
2041:src/keys.c    **** 		}
 4300              		.loc 1 2041 4 is_stmt 1 view .LVU1276
 4301 0502 B8E6     		b	.L483
 4302              	.L493:
2041:src/keys.c    **** 		}
 4303              		.loc 1 2041 4 is_stmt 0 view .LVU1277
 4304              	.LBE483:
 4305              	.LBE493:
2315:src/keys.c    **** 			else if (State2.ind)
 4306              		.loc 1 2315 5 is_stmt 1 view .LVU1278
2315:src/keys.c    **** 			else if (State2.ind)
 4307              		.loc 1 2315 18 is_stmt 0 view .LVU1279
 4308 0504 61F30002 		bfi	r2, r1, #0, #1
 4309 0508 A275     		strb	r2, [r4, #22]
2336:src/keys.c    **** }
 4310              		.loc 1 2336 9 view .LVU1280
 4311 050a 3320     		movs	r0, #51
 4312 050c C7E5     		b	.L356
 4313              	.LVL348:
 4314              	.L497:
2292:src/keys.c    **** 				State2.multi = 1;
 4315              		.loc 1 2292 5 is_stmt 1 view .LVU1281
 4316              	.LBB494:
 4317              	.LBI494:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 4318              		.loc 1 552 13 view .LVU1282
 4319              	.LBB495:
 553:src/keys.c    **** 		return;
 4320              		.loc 1 553 2 view .LVU1283
 553:src/keys.c    **** 		return;
ARM GAS  /tmp/cc6xzGMw.s 			page 152


 4321              		.loc 1 553 6 is_stmt 0 view .LVU1284
 4322 050e FFF7FEFF 		bl	is_bad_cmdline
 4323              	.LVL349:
 553:src/keys.c    **** 		return;
 4324              		.loc 1 553 5 view .LVU1285
 4325 0512 20B9     		cbnz	r0, .L419
 4326              	.LBE495:
 4327              	.LBE494:
2292:src/keys.c    **** 				State2.multi = 1;
 4328              		.loc 1 2292 31 view .LVU1286
 4329 0514 A5F14200 		sub	r0, r5, #66
 4330              	.LBB497:
 4331              	.LBB496:
 4332 0518 C0B2     		uxtb	r0, r0
 4333 051a FFF7FEFF 		bl	init_arg.part.0
 4334              	.LVL350:
 4335              	.L419:
2292:src/keys.c    **** 				State2.multi = 1;
 4336              		.loc 1 2292 31 view .LVU1287
 4337              	.LBE496:
 4338              	.LBE497:
2293:src/keys.c    **** 				State2.alphashift = 0;
 4339              		.loc 1 2293 5 is_stmt 1 view .LVU1288
2294:src/keys.c    **** 				State2.rarg = 0;
 4340              		.loc 1 2294 5 view .LVU1289
2295:src/keys.c    **** 			} else if (base == RARG_SCI) {
 4341              		.loc 1 2295 5 view .LVU1290
2293:src/keys.c    **** 				State2.alphashift = 0;
 4342              		.loc 1 2293 18 is_stmt 0 view .LVU1291
 4343 051e 6369     		ldr	r3, [r4, #20]
 4344 0520 23F44013 		bic	r3, r3, #3145728
 4345 0524 23F40063 		bic	r3, r3, #2048
 4346 0528 43F40063 		orr	r3, r3, #2048
 4347 052c 6361     		str	r3, [r4, #20]
2336:src/keys.c    **** }
 4348              		.loc 1 2336 9 view .LVU1292
 4349 052e 3320     		movs	r0, #51
 4350 0530 B5E5     		b	.L356
 4351              	.LVL351:
 4352              	.L498:
2297:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
 4353              		.loc 1 2297 5 is_stmt 1 view .LVU1293
 4354 0532 FFF7FEFF 		bl	reset_arg
 4355              	.LVL352:
2298:src/keys.c    **** 			} else if (base == RARG_ENG) {
 4356              		.loc 1 2298 5 view .LVU1294
2298:src/keys.c    **** 			} else if (base == RARG_ENG) {
 4357              		.loc 1 2298 12 is_stmt 0 view .LVU1295
 4358 0536 40F25510 		movw	r0, #341
 4359 053a B0E5     		b	.L356
 4360              	.LVL353:
 4361              	.L499:
2300:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
 4362              		.loc 1 2300 5 is_stmt 1 view .LVU1296
 4363 053c FFF7FEFF 		bl	reset_arg
 4364              	.LVL354:
2301:src/keys.c    **** 			} else if (argcmds[base].stckreg)
ARM GAS  /tmp/cc6xzGMw.s 			page 153


 4365              		.loc 1 2301 5 view .LVU1297
2301:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 4366              		.loc 1 2301 12 is_stmt 0 view .LVU1298
 4367 0540 4FF4AB70 		mov	r0, #342
 4368 0544 ABE5     		b	.L356
 4369              	.LVL355:
 4370              	.L373:
2085:src/keys.c    **** 	  case regY_idx:
 4371              		.loc 1 2085 6 is_stmt 1 view .LVU1299
2085:src/keys.c    **** 	  case regY_idx:
 4372              		.loc 1 2085 13 is_stmt 0 view .LVU1300
 4373 0546 0120     		movs	r0, #1
 4374              	.LVL356:
2085:src/keys.c    **** 	  case regY_idx:
 4375              		.loc 1 2085 13 view .LVU1301
 4376 0548 ABE6     		b	.L482
 4377              	.L503:
 4378 054a 00BF     		.align	2
 4379              	.L502:
 4380 054c CDCCCCCC 		.word	-858993459
 4381              		.cfi_endproc
 4382              	.LFE42:
 4384              		.section	.text.cur_shift,"ax",%progbits
 4385              		.align	1
 4386              		.p2align 2,,3
 4387              		.global	cur_shift
 4388              		.syntax unified
 4389              		.thumb
 4390              		.thumb_func
 4391              		.fpu fpv4-sp-d16
 4393              	cur_shift:
 4394              	.LFB0:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4395              		.loc 1 96 29 is_stmt 1 view -0
 4396              		.cfi_startproc
 4397              		@ args = 0, pretend = 0, frame = 0
 4398              		@ frame_needed = 0, uses_anonymous_args = 0
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4399              		.loc 1 97 2 view .LVU1303
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4400              		.loc 1 96 29 is_stmt 0 view .LVU1304
 4401 0000 08B5     		push	{r3, lr}
 4402              		.cfi_def_cfa_offset 8
 4403              		.cfi_offset 3, -8
 4404              		.cfi_offset 14, -4
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4405              		.loc 1 97 18 view .LVU1305
 4406 0002 FFF7FEFF 		bl	shift_down
 4407              	.LVL357:
  98:src/keys.c    **** }
 4408              		.loc 1 98 2 is_stmt 1 view .LVU1306
  98:src/keys.c    **** }
 4409              		.loc 1 98 52 is_stmt 0 view .LVU1307
 4410 0006 08B9     		cbnz	r0, .L505
  98:src/keys.c    **** }
 4411              		.loc 1 98 52 discriminator 1 view .LVU1308
 4412 0008 014B     		ldr	r3, .L507
ARM GAS  /tmp/cc6xzGMw.s 			page 154


 4413 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 4414              	.LVL358:
 4415              	.L505:
  99:src/keys.c    **** 
 4416              		.loc 1 99 1 discriminator 4 view .LVU1309
 4417 000c 08BD     		pop	{r3, pc}
 4418              	.L508:
 4419 000e 00BF     		.align	2
 4420              	.L507:
 4421 0010 00000000 		.word	StateWhileOn
 4422              		.cfi_endproc
 4423              	.LFE0:
 4425              		.section	.text.reset_shift,"ax",%progbits
 4426              		.align	1
 4427              		.p2align 2,,3
 4428              		.global	reset_shift
 4429              		.syntax unified
 4430              		.thumb
 4431              		.thumb_func
 4432              		.fpu fpv4-sp-d16
 4434              	reset_shift:
 4435              	.LFB2:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 4436              		.loc 1 114 31 is_stmt 1 view -0
 4437              		.cfi_startproc
 4438              		@ args = 0, pretend = 0, frame = 0
 4439              		@ frame_needed = 0, uses_anonymous_args = 0
 115:src/keys.c    **** }
 4440              		.loc 1 115 2 view .LVU1311
 4441              	.LVL359:
 4442              	.LBB498:
 4443              	.LBI498:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 4444              		.loc 1 104 20 view .LVU1312
 4445              	.LBB499:
 105:src/keys.c    **** 	State2.shifts = shift;
 4446              		.loc 1 105 2 view .LVU1313
 4447              	.LBB500:
 4448              	.LBI500:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4449              		.loc 1 96 13 view .LVU1314
 4450              	.LBB501:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4451              		.loc 1 97 2 view .LVU1315
 4452              	.LBE501:
 4453              	.LBE500:
 4454              	.LBE499:
 4455              	.LBE498:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 4456              		.loc 1 114 31 is_stmt 0 view .LVU1316
 4457 0000 08B5     		push	{r3, lr}
 4458              		.cfi_def_cfa_offset 8
 4459              		.cfi_offset 3, -8
 4460              		.cfi_offset 14, -4
 4461              	.LBB505:
 4462              	.LBB504:
 4463              	.LBB503:
ARM GAS  /tmp/cc6xzGMw.s 			page 155


 4464              	.LBB502:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4465              		.loc 1 97 18 view .LVU1317
 4466 0002 FFF7FEFF 		bl	shift_down
 4467              	.LVL360:
  98:src/keys.c    **** }
 4468              		.loc 1 98 2 is_stmt 1 view .LVU1318
  98:src/keys.c    **** }
 4469              		.loc 1 98 52 is_stmt 0 view .LVU1319
 4470 0006 034B     		ldr	r3, .L514
 4471 0008 00B9     		cbnz	r0, .L510
 4472 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 4473              	.LVL361:
 4474              	.L510:
  98:src/keys.c    **** }
 4475              		.loc 1 98 52 view .LVU1320
 4476              	.LBE502:
 4477              	.LBE503:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4478              		.loc 1 106 2 is_stmt 1 view .LVU1321
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4479              		.loc 1 106 16 is_stmt 0 view .LVU1322
 4480 000c 0022     		movs	r2, #0
 4481 000e 1A74     		strb	r2, [r3, #16]
 108:src/keys.c    **** }
 4482              		.loc 1 108 2 is_stmt 1 view .LVU1323
 4483              	.LVL362:
 108:src/keys.c    **** }
 4484              		.loc 1 108 2 is_stmt 0 view .LVU1324
 4485              	.LBE504:
 4486              	.LBE505:
 116:src/keys.c    **** 
 4487              		.loc 1 116 1 view .LVU1325
 4488 0010 08BD     		pop	{r3, pc}
 4489              	.L515:
 4490 0012 00BF     		.align	2
 4491              	.L514:
 4492 0014 00000000 		.word	StateWhileOn
 4493              		.cfi_endproc
 4494              	.LFE2:
 4496              		.section	.text.keycode_to_row_column,"ax",%progbits
 4497              		.align	1
 4498              		.p2align 2,,3
 4499              		.global	keycode_to_row_column
 4500              		.syntax unified
 4501              		.thumb
 4502              		.thumb_func
 4503              		.fpu fpv4-sp-d16
 4505              	keycode_to_row_column:
 4506              	.LVL363:
 4507              	.LFB6:
 180:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 4508              		.loc 1 180 1 is_stmt 1 view -0
 4509              		.cfi_startproc
 4510              		@ args = 0, pretend = 0, frame = 0
 4511              		@ frame_needed = 0, uses_anonymous_args = 0
 4512              		@ link register save eliminated.
ARM GAS  /tmp/cc6xzGMw.s 			page 156


 181:src/keys.c    **** }
 4513              		.loc 1 181 2 view .LVU1327
 181:src/keys.c    **** }
 4514              		.loc 1 181 18 is_stmt 0 view .LVU1328
 4515 0000 074A     		ldr	r2, .L517
 4516 0002 82FB0032 		smull	r3, r2, r2, r0
 4517 0006 A2EBE073 		sub	r3, r2, r0, asr #31
 181:src/keys.c    **** }
 4518              		.loc 1 181 24 view .LVU1329
 4519 000a 03EB8302 		add	r2, r3, r3, lsl #2
 4520 000e 5200     		lsls	r2, r2, #1
 181:src/keys.c    **** }
 4521              		.loc 1 181 33 view .LVU1330
 4522 0010 03EB4303 		add	r3, r3, r3, lsl #1
 4523 0014 A0EB4303 		sub	r3, r0, r3, lsl #1
 181:src/keys.c    **** }
 4524              		.loc 1 181 12 view .LVU1331
 4525 0018 02F10B00 		add	r0, r2, #11
 4526              	.LVL364:
 182:src/keys.c    **** 
 4527              		.loc 1 182 1 view .LVU1332
 4528 001c 1844     		add	r0, r0, r3
 4529 001e 7047     		bx	lr
 4530              	.L518:
 4531              		.align	2
 4532              	.L517:
 4533 0020 ABAAAA2A 		.word	715827883
 4534              		.cfi_endproc
 4535              	.LFE6:
 4537              		.section	.text.row_column_to_keycode,"ax",%progbits
 4538              		.align	1
 4539              		.p2align 2,,3
 4540              		.global	row_column_to_keycode
 4541              		.syntax unified
 4542              		.thumb
 4543              		.thumb_func
 4544              		.fpu fpv4-sp-d16
 4546              	row_column_to_keycode:
 4547              	.LVL365:
 4548              	.LFB7:
 190:src/keys.c    **** 	int row = c / 10 - 1;
 4549              		.loc 1 190 1 is_stmt 1 view -0
 4550              		.cfi_startproc
 4551              		@ args = 0, pretend = 0, frame = 0
 4552              		@ frame_needed = 0, uses_anonymous_args = 0
 4553              		@ link register save eliminated.
 191:src/keys.c    **** 	int col = c % 10 - 1;
 4554              		.loc 1 191 2 view .LVU1334
 191:src/keys.c    **** 	int col = c % 10 - 1;
 4555              		.loc 1 191 14 is_stmt 0 view .LVU1335
 4556 0000 0E4A     		ldr	r2, .L525
 4557 0002 82FB0032 		smull	r3, r2, r2, r0
 4558 0006 C317     		asrs	r3, r0, #31
 4559 0008 C3EBA203 		rsb	r3, r3, r2, asr #2
 192:src/keys.c    **** 
 4560              		.loc 1 192 14 view .LVU1336
 4561 000c 03EB8302 		add	r2, r3, r3, lsl #2
ARM GAS  /tmp/cc6xzGMw.s 			page 157


 191:src/keys.c    **** 	int col = c % 10 - 1;
 4562              		.loc 1 191 6 view .LVU1337
 4563 0010 013B     		subs	r3, r3, #1
 4564              	.LVL366:
 192:src/keys.c    **** 
 4565              		.loc 1 192 2 is_stmt 1 view .LVU1338
 192:src/keys.c    **** 
 4566              		.loc 1 192 14 is_stmt 0 view .LVU1339
 4567 0012 A0EB4200 		sub	r0, r0, r2, lsl #1
 4568              	.LVL367:
 194:src/keys.c    **** 		return -1;
 4569              		.loc 1 194 5 view .LVU1340
 4570 0016 062B     		cmp	r3, #6
 192:src/keys.c    **** 
 4571              		.loc 1 192 6 view .LVU1341
 4572 0018 00F1FF30 		add	r0, r0, #-1
 4573              	.LVL368:
 194:src/keys.c    **** 		return -1;
 4574              		.loc 1 194 2 is_stmt 1 view .LVU1342
 194:src/keys.c    **** 		return -1;
 4575              		.loc 1 194 5 is_stmt 0 view .LVU1343
 4576 001c 0AD8     		bhi	.L524
 194:src/keys.c    **** 		return -1;
 4577              		.loc 1 194 36 discriminator 1 view .LVU1344
 4578 001e 012B     		cmp	r3, #1
 4579 0020 CCBF     		ite	gt
 4580 0022 0422     		movgt	r2, #4
 4581 0024 0522     		movle	r2, #5
 194:src/keys.c    **** 		return -1;
 4582              		.loc 1 194 25 discriminator 1 view .LVU1345
 4583 0026 8242     		cmp	r2, r0
 4584 0028 04DB     		blt	.L524
 196:src/keys.c    **** }
 4585              		.loc 1 196 2 is_stmt 1 view .LVU1346
 196:src/keys.c    **** }
 4586              		.loc 1 196 13 is_stmt 0 view .LVU1347
 4587 002a 03EB4303 		add	r3, r3, r3, lsl #1
 4588              	.LVL369:
 196:src/keys.c    **** }
 4589              		.loc 1 196 17 view .LVU1348
 4590 002e 00EB4300 		add	r0, r0, r3, lsl #1
 4591              	.LVL370:
 196:src/keys.c    **** }
 4592              		.loc 1 196 17 view .LVU1349
 4593 0032 7047     		bx	lr
 4594              	.LVL371:
 4595              	.L524:
 195:src/keys.c    **** 	return row * 6 + col;
 4596              		.loc 1 195 10 view .LVU1350
 4597 0034 4FF0FF30 		mov	r0, #-1
 4598              	.LVL372:
 197:src/keys.c    **** 
 4599              		.loc 1 197 1 view .LVU1351
 4600 0038 7047     		bx	lr
 4601              	.L526:
 4602 003a 00BF     		.align	2
 4603              	.L525:
ARM GAS  /tmp/cc6xzGMw.s 			page 158


 4604 003c 67666666 		.word	1717986919
 4605              		.cfi_endproc
 4606              	.LFE7:
 4608              		.section	.text.keycode_to_digit_or_register,"ax",%progbits
 4609              		.align	1
 4610              		.p2align 2,,3
 4611              		.global	keycode_to_digit_or_register
 4612              		.syntax unified
 4613              		.thumb
 4614              		.thumb_func
 4615              		.fpu fpv4-sp-d16
 4617              	keycode_to_digit_or_register:
 4618              	.LVL373:
 4619              	.LFB8:
 211:src/keys.c    ****   static const unsigned char map[] = {
 4620              		.loc 1 211 1 is_stmt 1 view -0
 4621              		.cfi_startproc
 4622              		@ args = 0, pretend = 0, frame = 0
 4623              		@ frame_needed = 0, uses_anonymous_args = 0
 4624              		@ link register save eliminated.
 212:src/keys.c    ****     // K00 - K05
 4625              		.loc 1 212 3 view .LVU1353
 234:src/keys.c    **** }
 4626              		.loc 1 234 3 view .LVU1354
 4627              	.LBB506:
 4628              	.LBI506:
 131:src/keys.c    **** {
 4629              		.loc 1 131 12 view .LVU1355
 4630              	.LBB507:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 4631              		.loc 1 133 2 view .LVU1356
 143:src/keys.c    **** }
 4632              		.loc 1 143 2 view .LVU1357
 143:src/keys.c    **** }
 4633              		.loc 1 143 23 is_stmt 0 view .LVU1358
 4634 0000 024B     		ldr	r3, .L528
 4635              	.LBE507:
 4636              	.LBE506:
 234:src/keys.c    **** }
 4637              		.loc 1 234 28 view .LVU1359
 4638 0002 034A     		ldr	r2, .L528+4
 4639              	.LBB509:
 4640              	.LBB508:
 143:src/keys.c    **** }
 4641              		.loc 1 143 23 view .LVU1360
 4642 0004 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 4643              	.LBE508:
 4644              	.LBE509:
 235:src/keys.c    **** #else
 4645              		.loc 1 235 1 view .LVU1361
 4646 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 4647              	.LVL374:
 235:src/keys.c    **** #else
 4648              		.loc 1 235 1 view .LVU1362
 4649 0008 7047     		bx	lr
 4650              	.L529:
 4651 000a 00BF     		.align	2
ARM GAS  /tmp/cc6xzGMw.s 			page 159


 4652              	.L528:
 4653 000c 00000000 		.word	.LANCHOR6
 4654 0010 00000000 		.word	.LANCHOR5
 4655              		.cfi_endproc
 4656              	.LFE8:
 4658              		.section	.text.init_state,"ax",%progbits
 4659              		.align	1
 4660              		.p2align 2,,3
 4661              		.global	init_state
 4662              		.syntax unified
 4663              		.thumb
 4664              		.thumb_func
 4665              		.fpu fpv4-sp-d16
 4667              	init_state:
 4668              	.LFB13:
 615:src/keys.c    **** #ifndef REALBUILD
 4669              		.loc 1 615 23 is_stmt 1 view -0
 4670              		.cfi_startproc
 4671              		@ args = 0, pretend = 0, frame = 0
 4672              		@ frame_needed = 0, uses_anonymous_args = 0
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4673              		.loc 1 617 2 view .LVU1364
 615:src/keys.c    **** #ifndef REALBUILD
 4674              		.loc 1 615 23 is_stmt 0 view .LVU1365
 4675 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4676              		.cfi_def_cfa_offset 24
 4677              		.cfi_offset 4, -24
 4678              		.cfi_offset 5, -20
 4679              		.cfi_offset 6, -16
 4680              		.cfi_offset 7, -12
 4681              		.cfi_offset 8, -8
 4682              		.cfi_offset 14, -4
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4683              		.loc 1 617 25 view .LVU1366
 4684 0004 1C4C     		ldr	r4, .L532
 625:src/keys.c    **** 	// Removed: will clear any locals on power off
 4685              		.loc 1 625 10 view .LVU1367
 4686 0006 0021     		movs	r1, #0
 629:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 4687              		.loc 1 629 2 view .LVU1368
 4688 0008 1422     		movs	r2, #20
 4689 000a 04F10800 		add	r0, r4, #8
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4690              		.loc 1 617 25 view .LVU1369
 4691 000e 257E     		ldrb	r5, [r4, #24]	@ zero_extendqisi2
 618:src/keys.c    **** #else
 4692              		.loc 1 618 25 view .LVU1370
 4693 0010 E67D     		ldrb	r6, [r4, #23]	@ zero_extendqisi2
 622:src/keys.c    **** 	int k = LastKey;
 4694              		.loc 1 622 10 view .LVU1371
 4695 0012 A77C     		ldrb	r7, [r4, #18]	@ zero_extendqisi2
 623:src/keys.c    **** 
 4696              		.loc 1 623 10 view .LVU1372
 4697 0014 94F91380 		ldrsb	r8, [r4, #19]
 625:src/keys.c    **** 	// Removed: will clear any locals on power off
 4698              		.loc 1 625 10 view .LVU1373
 4699 0018 E177     		strb	r1, [r4, #31]
ARM GAS  /tmp/cc6xzGMw.s 			page 160


 629:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 4700              		.loc 1 629 2 view .LVU1374
 4701 001a FFF7FEFF 		bl	xset
 4702              	.LVL375:
 633:src/keys.c    **** 	UState.stack_depth = 1; // set stack size to 8 	//JM3
 4703              		.loc 1 633 2 view .LVU1375
 4704 001e 174B     		ldr	r3, .L532+4
 4705 0020 1B68     		ldr	r3, [r3]
 634:src/keys.c    **** #endif  									//JM3
 4706              		.loc 1 634 21 view .LVU1376
 4707 0022 93F8EA17 		ldrb	r1, [r3, #2026]	@ zero_extendqisi2
 633:src/keys.c    **** 	UState.stack_depth = 1; // set stack size to 8 	//JM3
 4708              		.loc 1 633 2 view .LVU1377
 4709 0026 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
 634:src/keys.c    **** #endif  									//JM3
 4710              		.loc 1 634 21 view .LVU1378
 4711 002a 41F00801 		orr	r1, r1, #8
 633:src/keys.c    **** 	UState.stack_depth = 1; // set stack size to 8 	//JM3
 4712              		.loc 1 633 2 view .LVU1379
 4713 002e 42F00802 		orr	r2, r2, #8
 634:src/keys.c    **** #endif  									//JM3
 4714              		.loc 1 634 21 view .LVU1380
 4715 0032 83F8EA17 		strb	r1, [r3, #2026]
 633:src/keys.c    **** 	UState.stack_depth = 1; // set stack size to 8 	//JM3
 4716              		.loc 1 633 2 view .LVU1381
 4717 0036 83F8AC27 		strb	r2, [r3, #1964]
 665:src/keys.c    **** 	update_program_bounds(1);
 4718              		.loc 1 665 17 view .LVU1382
 4719 003a A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 664:src/keys.c    **** 	State2.runmode = 1;
 4720              		.loc 1 664 14 view .LVU1383
 4721 003c 0722     		movs	r2, #7
 665:src/keys.c    **** 	update_program_bounds(1);
 4722              		.loc 1 665 17 view .LVU1384
 4723 003e 43F04003 		orr	r3, r3, #64
 666:src/keys.c    **** 	set_lift();
 4724              		.loc 1 666 2 view .LVU1385
 4725 0042 0120     		movs	r0, #1
 664:src/keys.c    **** 	State2.runmode = 1;
 4726              		.loc 1 664 14 view .LVU1386
 4727 0044 E273     		strb	r2, [r4, #15]
 665:src/keys.c    **** 	update_program_bounds(1);
 4728              		.loc 1 665 17 view .LVU1387
 4729 0046 A375     		strb	r3, [r4, #22]
 666:src/keys.c    **** 	set_lift();
 4730              		.loc 1 666 2 view .LVU1388
 4731 0048 FFF7FEFF 		bl	update_program_bounds
 4732              	.LVL376:
 667:src/keys.c    **** 
 4733              		.loc 1 667 2 view .LVU1389
 4734 004c FFF7FEFF 		bl	set_lift
 4735              	.LVL377:
 674:src/keys.c    **** 	State2.flags = a;
 4736              		.loc 1 674 15 view .LVU1390
 4737 0050 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 675:src/keys.c    **** #else
 4738              		.loc 1 675 15 view .LVU1391
ARM GAS  /tmp/cc6xzGMw.s 			page 161


 4739 0052 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 679:src/keys.c    **** }
 4740              		.loc 1 679 15 view .LVU1392
 4741 0054 0A49     		ldr	r1, .L532+8
 672:src/keys.c    **** #ifndef REALBUILD
 4742              		.loc 1 672 10 view .LVU1393
 4743 0056 84F81380 		strb	r8, [r4, #19]
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4744              		.loc 1 617 25 view .LVU1394
 4745 005a 05F00105 		and	r5, r5, #1
 4746              	.LVL378:
 618:src/keys.c    **** #else
 4747              		.loc 1 618 2 is_stmt 1 view .LVU1395
 618:src/keys.c    **** #else
 4748              		.loc 1 618 25 is_stmt 0 view .LVU1396
 4749 005e F609     		lsrs	r6, r6, #7
 4750              	.LVL379:
 622:src/keys.c    **** 	int k = LastKey;
 4751              		.loc 1 622 2 is_stmt 1 view .LVU1397
 622:src/keys.c    **** 	int k = LastKey;
 4752              		.loc 1 622 10 is_stmt 0 view .LVU1398
 4753 0060 FFB2     		uxtb	r7, r7
 4754              	.LVL380:
 623:src/keys.c    **** 
 4755              		.loc 1 623 2 is_stmt 1 view .LVU1399
 625:src/keys.c    **** 	// Removed: will clear any locals on power off
 4756              		.loc 1 625 2 view .LVU1400
 629:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 4757              		.loc 1 629 2 view .LVU1401
 633:src/keys.c    **** 	UState.stack_depth = 1; // set stack size to 8 	//JM3
 4758              		.loc 1 633 2 view .LVU1402
 634:src/keys.c    **** #endif  									//JM3
 4759              		.loc 1 634 2 view .LVU1403
 664:src/keys.c    **** 	State2.runmode = 1;
 4760              		.loc 1 664 2 view .LVU1404
 665:src/keys.c    **** 	update_program_bounds(1);
 4761              		.loc 1 665 2 view .LVU1405
 666:src/keys.c    **** 	set_lift();
 4762              		.loc 1 666 2 view .LVU1406
 667:src/keys.c    **** 
 4763              		.loc 1 667 2 view .LVU1407
 671:src/keys.c    **** 	LastKey = k;
 4764              		.loc 1 671 2 view .LVU1408
 674:src/keys.c    **** 	State2.flags = a;
 4765              		.loc 1 674 15 is_stmt 0 view .LVU1409
 4766 0062 66F3C712 		bfi	r2, r6, #7, #1
 675:src/keys.c    **** #else
 4767              		.loc 1 675 15 view .LVU1410
 4768 0066 65F30003 		bfi	r3, r5, #0, #1
 679:src/keys.c    **** }
 4769              		.loc 1 679 15 view .LVU1411
 4770 006a 6420     		movs	r0, #100
 674:src/keys.c    **** 	State2.flags = a;
 4771              		.loc 1 674 15 view .LVU1412
 4772 006c E275     		strb	r2, [r4, #23]
 675:src/keys.c    **** #else
 4773              		.loc 1 675 15 view .LVU1413
ARM GAS  /tmp/cc6xzGMw.s 			page 162


 4774 006e 2376     		strb	r3, [r4, #24]
 671:src/keys.c    **** 	LastKey = k;
 4775              		.loc 1 671 10 view .LVU1414
 4776 0070 A774     		strb	r7, [r4, #18]
 672:src/keys.c    **** #ifndef REALBUILD
 4777              		.loc 1 672 2 is_stmt 1 view .LVU1415
 674:src/keys.c    **** 	State2.flags = a;
 4778              		.loc 1 674 2 view .LVU1416
 675:src/keys.c    **** #else
 4779              		.loc 1 675 2 view .LVU1417
 679:src/keys.c    **** }
 4780              		.loc 1 679 2 view .LVU1418
 679:src/keys.c    **** }
 4781              		.loc 1 679 15 is_stmt 0 view .LVU1419
 4782 0072 0860     		str	r0, [r1]
 680:src/keys.c    **** 
 4783              		.loc 1 680 1 view .LVU1420
 4784 0074 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4785              	.LVL381:
 4786              	.L533:
 680:src/keys.c    **** 
 4787              		.loc 1 680 1 view .LVU1421
 4788              		.align	2
 4789              	.L532:
 4790 0078 00000000 		.word	StateWhileOn
 4791 007c 00000000 		.word	main_ram
 4792 0080 00000000 		.word	ShowRegister
 4793              		.cfi_endproc
 4794              	.LFE13:
 4796              		.section	.text.process_cmplx,"ax",%progbits
 4797              		.align	1
 4798              		.p2align 2,,3
 4799              		.syntax unified
 4800              		.thumb
 4801              		.thumb_func
 4802              		.fpu fpv4-sp-d16
 4804              	process_cmplx:
 4805              	.LVL382:
 4806              	.LFB27:
1456:src/keys.c    **** #define _RARG   0xFF00
 4807              		.loc 1 1456 43 is_stmt 1 view -0
 4808              		.cfi_startproc
 4809              		@ args = 0, pretend = 0, frame = 0
 4810              		@ frame_needed = 0, uses_anonymous_args = 0
1461:src/keys.c    **** 		// Row 1
 4811              		.loc 1 1461 2 view .LVU1423
1512:src/keys.c    **** 	int lc = keycode_to_linear(c);
 4812              		.loc 1 1512 2 view .LVU1424
 4813              	.LBB510:
 4814              	.LBI510:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 4815              		.loc 1 114 13 view .LVU1425
 4816              	.LBE510:
 115:src/keys.c    **** }
 4817              		.loc 1 115 2 view .LVU1426
 4818              	.LBB527:
 4819              	.LBB511:
ARM GAS  /tmp/cc6xzGMw.s 			page 163


 4820              	.LBI511:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 4821              		.loc 1 104 20 view .LVU1427
 4822              	.LBB512:
 105:src/keys.c    **** 	State2.shifts = shift;
 4823              		.loc 1 105 2 view .LVU1428
 4824              	.LBB513:
 4825              	.LBI513:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4826              		.loc 1 96 13 view .LVU1429
 4827              	.LBB514:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4828              		.loc 1 97 2 view .LVU1430
 4829              	.LBE514:
 4830              	.LBE513:
 4831              	.LBE512:
 4832              	.LBE511:
 4833              	.LBE527:
1456:src/keys.c    **** #define _RARG   0xFF00
 4834              		.loc 1 1456 43 is_stmt 0 view .LVU1431
 4835 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4836              		.cfi_def_cfa_offset 24
 4837              		.cfi_offset 3, -24
 4838              		.cfi_offset 4, -20
 4839              		.cfi_offset 5, -16
 4840              		.cfi_offset 6, -12
 4841              		.cfi_offset 7, -8
 4842              		.cfi_offset 14, -4
1456:src/keys.c    **** #define _RARG   0xFF00
 4843              		.loc 1 1456 43 view .LVU1432
 4844 0002 0546     		mov	r5, r0
 4845              	.LBB528:
 4846              	.LBB523:
 4847              	.LBB519:
 4848              	.LBB517:
 4849              	.LBB515:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4850              		.loc 1 97 18 view .LVU1433
 4851 0004 FFF7FEFF 		bl	shift_down
 4852              	.LVL383:
  98:src/keys.c    **** }
 4853              		.loc 1 98 2 is_stmt 1 view .LVU1434
  98:src/keys.c    **** }
 4854              		.loc 1 98 52 is_stmt 0 view .LVU1435
 4855 0008 E8B1     		cbz	r0, .L551
 4856 000a 294E     		ldr	r6, .L558
 4857 000c 0446     		mov	r4, r0
 4858              	.L535:
 4859              	.LVL384:
  98:src/keys.c    **** }
 4860              		.loc 1 98 52 view .LVU1436
 4861              	.LBE515:
 4862              	.LBE517:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4863              		.loc 1 106 2 is_stmt 1 view .LVU1437
 4864              	.LBE519:
 4865              	.LBE523:
ARM GAS  /tmp/cc6xzGMw.s 			page 164


 4866              	.LBE528:
 4867              	.LBB529:
 4868              	.LBB530:
 158:src/keys.c    **** }
 4869              		.loc 1 158 23 is_stmt 0 view .LVU1438
 4870 000e 294B     		ldr	r3, .L558+4
 4871              	.LBE530:
 4872              	.LBE529:
1514:src/keys.c    **** 	State2.cmplx = 0;
 4873              		.loc 1 1514 21 view .LVU1439
 4874 0010 2948     		ldr	r0, .L558+8
 4875              	.LBB533:
 4876              	.LBB531:
 158:src/keys.c    **** }
 4877              		.loc 1 158 23 view .LVU1440
 4878 0012 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 4879              	.LBE531:
 4880              	.LBE533:
1515:src/keys.c    **** 
 4881              		.loc 1 1515 15 view .LVU1441
 4882 0014 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
1514:src/keys.c    **** 	State2.cmplx = 0;
 4883              		.loc 1 1514 21 view .LVU1442
 4884 0016 04EB8303 		add	r3, r4, r3, lsl #2
 4885              	.LBB534:
 4886              	.LBB524:
 4887              	.LBB520:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4888              		.loc 1 106 16 view .LVU1443
 4889 001a 0021     		movs	r1, #0
 4890              	.LBE520:
 4891              	.LBE524:
 4892              	.LBE534:
1514:src/keys.c    **** 	State2.cmplx = 0;
 4893              		.loc 1 1514 21 view .LVU1444
 4894 001c 30F81370 		ldrh	r7, [r0, r3, lsl #1]
 4895              	.LBB535:
 4896              	.LBB525:
 4897              	.LBB521:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4898              		.loc 1 106 16 view .LVU1445
 4899 0020 3174     		strb	r1, [r6, #16]
 108:src/keys.c    **** }
 4900              		.loc 1 108 2 is_stmt 1 view .LVU1446
 4901              	.LVL385:
 108:src/keys.c    **** }
 4902              		.loc 1 108 2 is_stmt 0 view .LVU1447
 4903              	.LBE521:
 4904              	.LBE525:
 4905              	.LBE535:
1513:src/keys.c    **** 	int op = op_map[lc][shift];
 4906              		.loc 1 1513 2 is_stmt 1 view .LVU1448
 4907              	.LBB536:
 4908              	.LBI529:
 146:src/keys.c    **** {
 4909              		.loc 1 146 12 view .LVU1449
 4910              	.LBB532:
ARM GAS  /tmp/cc6xzGMw.s 			page 165


 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 4911              		.loc 1 148 2 view .LVU1450
 158:src/keys.c    **** }
 4912              		.loc 1 158 2 view .LVU1451
 158:src/keys.c    **** }
 4913              		.loc 1 158 2 is_stmt 0 view .LVU1452
 4914              	.LBE532:
 4915              	.LBE536:
1514:src/keys.c    **** 	State2.cmplx = 0;
 4916              		.loc 1 1514 2 is_stmt 1 view .LVU1453
1515:src/keys.c    **** 
 4917              		.loc 1 1515 2 view .LVU1454
1517:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4918              		.loc 1 1517 5 is_stmt 0 view .LVU1455
 4919 0022 07F47F43 		and	r3, r7, #65280
1515:src/keys.c    **** 
 4920              		.loc 1 1515 15 view .LVU1456
 4921 0026 61F34102 		bfi	r2, r1, #1, #1
1517:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4922              		.loc 1 1517 5 view .LVU1457
 4923 002a B3F57F4F 		cmp	r3, #65280
1515:src/keys.c    **** 
 4924              		.loc 1 1515 15 view .LVU1458
 4925 002e 7275     		strb	r2, [r6, #21]
1517:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4926              		.loc 1 1517 2 is_stmt 1 view .LVU1459
1517:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4927              		.loc 1 1517 5 is_stmt 0 view .LVU1460
 4928 0030 2CD0     		beq	.L554
1521:src/keys.c    **** 		// HYP
 4929              		.loc 1 1521 2 is_stmt 1 view .LVU1461
1521:src/keys.c    **** 		// HYP
 4930              		.loc 1 1521 5 is_stmt 0 view .LVU1462
 4931 0032 9DB1     		cbz	r5, .L555
1531:src/keys.c    **** 		switch (c) {
 4932              		.loc 1 1531 2 is_stmt 1 view .LVU1463
1531:src/keys.c    **** 		switch (c) {
 4933              		.loc 1 1531 5 is_stmt 0 view .LVU1464
 4934 0034 2CB1     		cbz	r4, .L534
1532:src/keys.c    **** 		case K_CMPLX:
 4935              		.loc 1 1532 3 is_stmt 1 view .LVU1465
 4936 0036 242D     		cmp	r5, #36
 4937 0038 24D0     		beq	.L540
 4938 003a 2D2D     		cmp	r5, #45
 4939 003c 1DD0     		beq	.L541
 4940 003e 1F2D     		cmp	r5, #31
 4941 0040 04D0     		beq	.L556
 4942              	.LVL386:
 4943              	.L534:
1564:src/keys.c    **** 
 4944              		.loc 1 1564 1 is_stmt 0 view .LVU1466
 4945 0042 3846     		mov	r0, r7
 4946 0044 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4947              	.LVL387:
 4948              	.L551:
 4949              	.LBB537:
 4950              	.LBB526:
ARM GAS  /tmp/cc6xzGMw.s 			page 166


 4951              	.LBB522:
 4952              	.LBB518:
 4953              	.LBB516:
  98:src/keys.c    **** }
 4954              		.loc 1 98 52 view .LVU1467
 4955 0046 1A4E     		ldr	r6, .L558
 4956 0048 347C     		ldrb	r4, [r6, #16]	@ zero_extendqisi2
 4957 004a E0E7     		b	.L535
 4958              	.LVL388:
 4959              	.L556:
  98:src/keys.c    **** }
 4960              		.loc 1 98 52 view .LVU1468
 4961              	.LBE516:
 4962              	.LBE518:
 4963              	.LBE522:
 4964              	.LBE526:
 4965              	.LBE537:
1538:src/keys.c    **** 				if (is_bad_cmdline())
 4966              		.loc 1 1538 4 is_stmt 1 view .LVU1469
1538:src/keys.c    **** 				if (is_bad_cmdline())
 4967              		.loc 1 1538 7 is_stmt 0 view .LVU1470
 4968 004c 332F     		cmp	r7, #51
 4969 004e 02D0     		beq	.L553
1539:src/keys.c    **** 					return STATE_UNFINISHED;
 4970              		.loc 1 1539 5 is_stmt 1 view .LVU1471
1539:src/keys.c    **** 					return STATE_UNFINISHED;
 4971              		.loc 1 1539 9 is_stmt 0 view .LVU1472
 4972 0050 FFF7FEFF 		bl	is_bad_cmdline
 4973              	.LVL389:
1539:src/keys.c    **** 					return STATE_UNFINISHED;
 4974              		.loc 1 1539 8 view .LVU1473
 4975 0054 10B3     		cbz	r0, .L557
 4976              	.L553:
1519:src/keys.c    **** 	}
 4977              		.loc 1 1519 10 view .LVU1474
 4978 0056 3327     		movs	r7, #51
 4979              	.LVL390:
1564:src/keys.c    **** 
 4980              		.loc 1 1564 1 view .LVU1475
 4981 0058 3846     		mov	r0, r7
 4982 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4983              	.LVL391:
 4984              	.L555:
1523:src/keys.c    **** 		//		print_debug(100,1);
 4985              		.loc 1 1523 3 is_stmt 1 view .LVU1476
 4986 005c FFF7FEFF 		bl	process_cmdline_set_lift
 4987              	.LVL392:
1525:src/keys.c    **** 		State2.dot = op;
 4988              		.loc 1 1525 3 view .LVU1477
1526:src/keys.c    **** 		State2.cmplx = 1;
 4989              		.loc 1 1526 3 view .LVU1478
1527:src/keys.c    **** 		return STATE_UNFINISHED;
 4990              		.loc 1 1527 3 view .LVU1479
1527:src/keys.c    **** 		return STATE_UNFINISHED;
 4991              		.loc 1 1527 16 is_stmt 0 view .LVU1480
 4992 0060 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
 4993 0062 07F00103 		and	r3, r7, #1
ARM GAS  /tmp/cc6xzGMw.s 			page 167


 4994 0066 9B01     		lsls	r3, r3, #6
 4995 0068 22F06202 		bic	r2, r2, #98
 4996 006c 43F02203 		orr	r3, r3, #34
 4997 0070 1343     		orrs	r3, r3, r2
1528:src/keys.c    **** 	}
 4998              		.loc 1 1528 10 view .LVU1481
 4999 0072 3327     		movs	r7, #51
 5000              	.LVL393:
1527:src/keys.c    **** 		return STATE_UNFINISHED;
 5001              		.loc 1 1527 16 view .LVU1482
 5002 0074 7375     		strb	r3, [r6, #21]
1528:src/keys.c    **** 	}
 5003              		.loc 1 1528 3 is_stmt 1 view .LVU1483
1564:src/keys.c    **** 
 5004              		.loc 1 1564 1 is_stmt 0 view .LVU1484
 5005 0076 3846     		mov	r0, r7
 5006 0078 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5007              	.LVL394:
 5008              	.L541:
1534:src/keys.c    **** 			break;
 5009              		.loc 1 1534 4 is_stmt 1 view .LVU1485
 5010              	.LBB538:
 5011              	.LBI538:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 5012              		.loc 1 104 20 view .LVU1486
 5013              	.LBB539:
 105:src/keys.c    **** 	State2.shifts = shift;
 5014              		.loc 1 105 2 view .LVU1487
 5015              	.LBB540:
 5016              	.LBI540:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 5017              		.loc 1 96 13 view .LVU1488
 5018              	.LBB541:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5019              		.loc 1 97 2 view .LVU1489
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5020              		.loc 1 97 18 is_stmt 0 view .LVU1490
 5021 007a FFF7FEFF 		bl	shift_down
 5022              	.LVL395:
  98:src/keys.c    **** }
 5023              		.loc 1 98 2 is_stmt 1 view .LVU1491
 5024              	.LBE541:
 5025              	.LBE540:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5026              		.loc 1 106 2 view .LVU1492
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5027              		.loc 1 106 16 is_stmt 0 view .LVU1493
 5028 007e 3474     		strb	r4, [r6, #16]
 108:src/keys.c    **** }
 5029              		.loc 1 108 2 is_stmt 1 view .LVU1494
 5030              	.LBE539:
 5031              	.LBE538:
1564:src/keys.c    **** 
 5032              		.loc 1 1564 1 is_stmt 0 view .LVU1495
 5033 0080 3846     		mov	r0, r7
 5034 0082 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5035              	.LVL396:
ARM GAS  /tmp/cc6xzGMw.s 			page 168


 5036              	.L540:
1548:src/keys.c    **** 			break;
 5037              		.loc 1 1548 4 is_stmt 1 view .LVU1496
 5038 0084 FFF7FEFF 		bl	init_state
 5039              	.LVL397:
1549:src/keys.c    **** 
 5040              		.loc 1 1549 4 view .LVU1497
1564:src/keys.c    **** 
 5041              		.loc 1 1564 1 is_stmt 0 view .LVU1498
 5042 0088 3846     		mov	r0, r7
 5043 008a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5044              	.LVL398:
 5045              	.L554:
1518:src/keys.c    **** 		return STATE_UNFINISHED;
 5046              		.loc 1 1518 3 is_stmt 1 view .LVU1499
 5047              	.LBB542:
 5048              	.LBI542:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 5049              		.loc 1 552 13 view .LVU1500
 5050              	.LBB543:
 553:src/keys.c    **** 		return;
 5051              		.loc 1 553 2 view .LVU1501
 553:src/keys.c    **** 		return;
 5052              		.loc 1 553 6 is_stmt 0 view .LVU1502
 5053 008c FFF7FEFF 		bl	is_bad_cmdline
 5054              	.LVL399:
 553:src/keys.c    **** 		return;
 5055              		.loc 1 553 5 view .LVU1503
 5056 0090 0028     		cmp	r0, #0
 5057 0092 E0D1     		bne	.L553
 5058 0094 F8B2     		uxtb	r0, r7
 5059 0096 FFF7FEFF 		bl	init_arg.part.0
 5060              	.LVL400:
 5061 009a DCE7     		b	.L553
 5062              	.LVL401:
 5063              	.L557:
 553:src/keys.c    **** 		return;
 5064              		.loc 1 553 5 view .LVU1504
 5065              	.LBE543:
 5066              	.LBE542:
1541:src/keys.c    **** 				State2.cmplx = 1;
 5067              		.loc 1 1541 5 is_stmt 1 view .LVU1505
 5068 009c FFF7FEFF 		bl	process_cmdline_set_lift
 5069              	.LVL402:
1542:src/keys.c    **** 				State2.test = op;
 5070              		.loc 1 1542 5 view .LVU1506
1542:src/keys.c    **** 				State2.test = op;
 5071              		.loc 1 1542 18 is_stmt 0 view .LVU1507
 5072 00a0 737D     		ldrb	r3, [r6, #21]	@ zero_extendqisi2
1543:src/keys.c    **** 			}
 5073              		.loc 1 1543 17 view .LVU1508
 5074 00a2 F773     		strb	r7, [r6, #15]
1542:src/keys.c    **** 				State2.test = op;
 5075              		.loc 1 1542 18 view .LVU1509
 5076 00a4 43F00203 		orr	r3, r3, #2
 5077 00a8 7375     		strb	r3, [r6, #21]
1543:src/keys.c    **** 			}
ARM GAS  /tmp/cc6xzGMw.s 			page 169


 5078              		.loc 1 1543 5 is_stmt 1 view .LVU1510
1545:src/keys.c    **** 
 5079              		.loc 1 1545 11 is_stmt 0 view .LVU1511
 5080 00aa 3327     		movs	r7, #51
 5081              	.LVL403:
1545:src/keys.c    **** 
 5082              		.loc 1 1545 11 view .LVU1512
 5083 00ac C9E7     		b	.L534
 5084              	.L559:
 5085 00ae 00BF     		.align	2
 5086              	.L558:
 5087 00b0 00000000 		.word	StateWhileOn
 5088 00b4 00000000 		.word	.LANCHOR1
 5089 00b8 00000000 		.word	.LANCHOR7
 5090              		.cfi_endproc
 5091              	.LFE27:
 5093              		.section	.text.soft_init_state,"ax",%progbits
 5094              		.align	1
 5095              		.p2align 2,,3
 5096              		.global	soft_init_state
 5097              		.syntax unified
 5098              		.thumb
 5099              		.thumb_func
 5100              		.fpu fpv4-sp-d16
 5102              	soft_init_state:
 5103              	.LFB14:
 682:src/keys.c    **** 	int soft;
 5104              		.loc 1 682 28 is_stmt 1 view -0
 5105              		.cfi_startproc
 5106              		@ args = 0, pretend = 0, frame = 0
 5107              		@ frame_needed = 0, uses_anonymous_args = 0
 683:src/keys.c    **** 	unsigned int runmode;
 5108              		.loc 1 683 2 view .LVU1514
 684:src/keys.c    **** 	unsigned int alphas;
 5109              		.loc 1 684 2 view .LVU1515
 685:src/keys.c    **** 
 5110              		.loc 1 685 2 view .LVU1516
 687:src/keys.c    **** 		CmdLineLength = 0;
 5111              		.loc 1 687 2 view .LVU1517
 682:src/keys.c    **** 	int soft;
 5112              		.loc 1 682 28 is_stmt 0 view .LVU1518
 5113 0000 38B5     		push	{r3, r4, r5, lr}
 5114              		.cfi_def_cfa_offset 16
 5115              		.cfi_offset 3, -16
 5116              		.cfi_offset 4, -12
 5117              		.cfi_offset 5, -8
 5118              		.cfi_offset 14, -4
 687:src/keys.c    **** 		CmdLineLength = 0;
 5119              		.loc 1 687 6 view .LVU1519
 5120 0002 114C     		ldr	r4, .L567
 687:src/keys.c    **** 		CmdLineLength = 0;
 5121              		.loc 1 687 5 view .LVU1520
 5122 0004 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 5123 0006 D3B9     		cbnz	r3, .L566
 693:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 5124              		.loc 1 693 2 is_stmt 1 view .LVU1521
 694:src/keys.c    **** 	runmode = State2.runmode;
ARM GAS  /tmp/cc6xzGMw.s 			page 170


 5125              		.loc 1 694 17 is_stmt 0 view .LVU1522
 5126 0008 104A     		ldr	r2, .L567+4
 5127 000a 6369     		ldr	r3, [r4, #20]
 694:src/keys.c    **** 	runmode = State2.runmode;
 5128              		.loc 1 694 60 view .LVU1523
 5129 000c 1A42     		tst	r2, r3
 5130 000e 0AD0     		beq	.L563
 5131              	.L564:
 5132              	.LVL404:
 695:src/keys.c    **** 	alphas = State2.alphas;
 5133              		.loc 1 695 2 is_stmt 1 view .LVU1524
 696:src/keys.c    **** 	init_state();
 5134              		.loc 1 696 17 is_stmt 0 view .LVU1525
 5135 0010 A57D     		ldrb	r5, [r4, #22]	@ zero_extendqisi2
 5136              	.LVL405:
 696:src/keys.c    **** 	init_state();
 5137              		.loc 1 696 2 is_stmt 1 view .LVU1526
 697:src/keys.c    **** 	if (soft) {
 5138              		.loc 1 697 2 view .LVU1527
 5139 0012 FFF7FEFF 		bl	init_state
 5140              	.LVL406:
 698:src/keys.c    **** 		State2.runmode = runmode;
 5141              		.loc 1 698 2 view .LVU1528
 699:src/keys.c    **** 		State2.alphas = alphas;
 5142              		.loc 1 699 3 view .LVU1529
 700:src/keys.c    **** 	}
 5143              		.loc 1 700 3 view .LVU1530
 700:src/keys.c    **** 	}
 5144              		.loc 1 700 17 is_stmt 0 view .LVU1531
 5145 0016 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 5146 0018 05F04805 		and	r5, r5, #72
 5147 001c 23F04803 		bic	r3, r3, #72
 5148 0020 2B43     		orrs	r3, r3, r5
 5149 0022 A375     		strb	r3, [r4, #22]
 702:src/keys.c    **** 
 5150              		.loc 1 702 1 view .LVU1532
 5151 0024 38BD     		pop	{r3, r4, r5, pc}
 5152              	.LVL407:
 5153              	.L563:
 694:src/keys.c    **** 	runmode = State2.runmode;
 5154              		.loc 1 694 60 discriminator 2 view .LVU1533
 5155 0026 E368     		ldr	r3, [r4, #12]
 5156 0028 23F47F03 		bic	r3, r3, #16711680
 5157 002c 23F47F43 		bic	r3, r3, #65280
 5158 0030 B3F1E06F 		cmp	r3, #117440512
 5159 0034 ECD1     		bne	.L564
 5160              	.LVL408:
 695:src/keys.c    **** 	alphas = State2.alphas;
 5161              		.loc 1 695 2 is_stmt 1 view .LVU1534
 696:src/keys.c    **** 	init_state();
 5162              		.loc 1 696 2 view .LVU1535
 697:src/keys.c    **** 	if (soft) {
 5163              		.loc 1 697 2 view .LVU1536
 702:src/keys.c    **** 
 5164              		.loc 1 702 1 is_stmt 0 view .LVU1537
 5165 0036 BDE83840 		pop	{r3, r4, r5, lr}
 5166              		.cfi_remember_state
ARM GAS  /tmp/cc6xzGMw.s 			page 171


 5167              		.cfi_restore 14
 5168              		.cfi_restore 5
 5169              		.cfi_restore 4
 5170              		.cfi_restore 3
 5171              		.cfi_def_cfa_offset 0
 697:src/keys.c    **** 	if (soft) {
 5172              		.loc 1 697 2 view .LVU1538
 5173 003a FFF7FEBF 		b	init_state
 5174              	.LVL409:
 5175              	.L566:
 5176              		.cfi_restore_state
 5177              	.LBB546:
 5178              	.LBI546:
 682:src/keys.c    **** 	int soft;
 5179              		.loc 1 682 6 is_stmt 1 view .LVU1539
 5180              	.LBB547:
 688:src/keys.c    **** 		CmdLineEex = 0;
 5181              		.loc 1 688 3 view .LVU1540
 689:src/keys.c    **** 		CmdLineDot = 0;
 5182              		.loc 1 689 3 view .LVU1541
 690:src/keys.c    **** 		return;
 5183              		.loc 1 690 3 view .LVU1542
 688:src/keys.c    **** 		CmdLineEex = 0;
 5184              		.loc 1 688 17 is_stmt 0 view .LVU1543
 5185 003e 0023     		movs	r3, #0
 5186 0040 A383     		strh	r3, [r4, #28]	@ movhi
 690:src/keys.c    **** 		return;
 5187              		.loc 1 690 14 view .LVU1544
 5188 0042 A377     		strb	r3, [r4, #30]
 691:src/keys.c    **** 	}
 5189              		.loc 1 691 3 is_stmt 1 view .LVU1545
 5190              	.LBE547:
 5191              	.LBE546:
 702:src/keys.c    **** 
 5192              		.loc 1 702 1 is_stmt 0 view .LVU1546
 5193 0044 38BD     		pop	{r3, r4, r5, pc}
 5194              	.L568:
 5195 0046 00BF     		.align	2
 5196              	.L567:
 5197 0048 00000000 		.word	StateWhileOn
 5198 004c 002F2004 		.word	69218048
 5199              		.cfi_endproc
 5200              	.LFE14:
 5202              		.section	.text.finish_cpx_entry,"ax",%progbits
 5203              		.align	1
 5204              		.p2align 2,,3
 5205              		.global	finish_cpx_entry
 5206              		.syntax unified
 5207              		.thumb
 5208              		.thumb_func
 5209              		.fpu fpv4-sp-d16
 5211              	finish_cpx_entry:
 5212              	.LVL410:
 5213              	.LFB23:
1197:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5214              		.loc 1 1197 36 is_stmt 1 view -0
 5215              		.cfi_startproc
ARM GAS  /tmp/cc6xzGMw.s 			page 172


 5216              		@ args = 0, pretend = 0, frame = 0
 5217              		@ frame_needed = 0, uses_anonymous_args = 0
1202:src/keys.c    **** 
 5218              		.loc 1 1202 2 view .LVU1548
1197:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5219              		.loc 1 1197 36 is_stmt 0 view .LVU1549
 5220 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5221              		.cfi_def_cfa_offset 24
 5222              		.cfi_offset 3, -24
 5223              		.cfi_offset 4, -20
 5224              		.cfi_offset 5, -16
 5225              		.cfi_offset 6, -12
 5226              		.cfi_offset 7, -8
 5227              		.cfi_offset 14, -4
1202:src/keys.c    **** 
 5228              		.loc 1 1202 10 view .LVU1550
 5229 0002 2E4E     		ldr	r6, .L585
 5230 0004 3368     		ldr	r3, [r6]
1202:src/keys.c    **** 
 5231              		.loc 1 1202 7 view .LVU1551
 5232 0006 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
1202:src/keys.c    **** 
 5233              		.loc 1 1202 5 view .LVU1552
 5234 000a 12F0060F 		tst	r2, #6
 5235 000e 16D0     		beq	.L569
1214:src/keys.c    **** 	if (IMAG_FLAG) swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 5236              		.loc 1 1214 2 is_stmt 1 view .LVU1553
 5237              	.LBB554:
 5238              	.LBI554:
1190:src/keys.c    **** 	if (CmdLineLength) {
 5239              		.loc 1 1190 13 view .LVU1554
 5240              	.LBB555:
1191:src/keys.c    **** 		State2.state_lift = 0;
 5241              		.loc 1 1191 2 view .LVU1555
1191:src/keys.c    **** 		State2.state_lift = 0;
 5242              		.loc 1 1191 6 is_stmt 0 view .LVU1556
 5243 0010 2B4C     		ldr	r4, .L585+4
1191:src/keys.c    **** 		State2.state_lift = 0;
 5244              		.loc 1 1191 5 view .LVU1557
 5245 0012 217F     		ldrb	r1, [r4, #28]	@ zero_extendqisi2
 5246 0014 0546     		mov	r5, r0
 5247 0016 01BB     		cbnz	r1, .L582
 5248              	.LBE555:
 5249              	.LBE554:
1215:src/keys.c    **** 	CLEAR_REAL;
 5250              		.loc 1 1215 2 is_stmt 1 view .LVU1558
1215:src/keys.c    **** 	CLEAR_REAL;
 5251              		.loc 1 1215 5 is_stmt 0 view .LVU1559
 5252 0018 5207     		lsls	r2, r2, #29
 5253 001a 11D4     		bmi	.L583
 5254              	.LVL411:
 5255              	.L573:
1216:src/keys.c    **** 	CLEAR_IMAG;
 5256              		.loc 1 1216 2 is_stmt 1 view .LVU1560
1217:src/keys.c    **** 
 5257              		.loc 1 1217 2 view .LVU1561
1216:src/keys.c    **** 	CLEAR_IMAG;
ARM GAS  /tmp/cc6xzGMw.s 			page 173


 5258              		.loc 1 1216 2 is_stmt 0 view .LVU1562
 5259 001c 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
 5260 0020 22F00602 		bic	r2, r2, #6
 5261 0024 83F8AC27 		strb	r2, [r3, #1964]
1219:src/keys.c    **** 
 5262              		.loc 1 1219 2 is_stmt 1 view .LVU1563
1219:src/keys.c    **** 
 5263              		.loc 1 1219 20 is_stmt 0 view .LVU1564
 5264 0028 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 5265 002a 65F38612 		bfi	r2, r5, #6, #1
 5266              	.LVL412:
1219:src/keys.c    **** 
 5267              		.loc 1 1219 20 view .LVU1565
 5268 002e E275     		strb	r2, [r4, #23]
1221:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
 5269              		.loc 1 1221 2 is_stmt 1 view .LVU1566
1221:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
 5270              		.loc 1 1221 21 is_stmt 0 view .LVU1567
 5271 0030 B3F8AC37 		ldrh	r3, [r3, #1964]
1221:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
 5272              		.loc 1 1221 5 view .LVU1568
 5273 0034 03F4C073 		and	r3, r3, #384
 5274 0038 B3F5C07F 		cmp	r3, #384
 5275 003c 19D0     		beq	.L584
 5276              	.L569:
1233:src/keys.c    **** 
 5277              		.loc 1 1233 1 view .LVU1569
 5278 003e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5279              	.LVL413:
 5280              	.L583:
1215:src/keys.c    **** 	CLEAR_REAL;
 5281              		.loc 1 1215 17 is_stmt 1 discriminator 1 view .LVU1570
 5282 0040 6420     		movs	r0, #100
 5283 0042 FFF7FEFF 		bl	get_reg_n
 5284              	.LVL414:
 5285 0046 0746     		mov	r7, r0
 5286 0048 6520     		movs	r0, #101
 5287 004a FFF7FEFF 		bl	get_reg_n
 5288              	.LVL415:
 5289 004e 0146     		mov	r1, r0
 5290 0050 3846     		mov	r0, r7
 5291 0052 FFF7FEFF 		bl	swap_reg
 5292              	.LVL416:
 5293 0056 3368     		ldr	r3, [r6]
 5294 0058 E0E7     		b	.L573
 5295              	.LVL417:
 5296              	.L582:
 5297              	.LBB557:
 5298              	.LBB556:
1192:src/keys.c    **** 		process_cmdline();
 5299              		.loc 1 1192 3 view .LVU1571
1192:src/keys.c    **** 		process_cmdline();
 5300              		.loc 1 1192 21 is_stmt 0 view .LVU1572
 5301 005a E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 5302 005c 6FF38613 		bfc	r3, #6, #1
 5303 0060 E375     		strb	r3, [r4, #23]
1193:src/keys.c    **** 	}
ARM GAS  /tmp/cc6xzGMw.s 			page 174


 5304              		.loc 1 1193 3 is_stmt 1 view .LVU1573
 5305 0062 FFF7FEFF 		bl	process_cmdline
 5306              	.LVL418:
1193:src/keys.c    **** 	}
 5307              		.loc 1 1193 3 is_stmt 0 view .LVU1574
 5308 0066 3368     		ldr	r3, [r6]
 5309 0068 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
 5310              	.LBE556:
 5311              	.LBE557:
1215:src/keys.c    **** 	CLEAR_REAL;
 5312              		.loc 1 1215 2 is_stmt 1 view .LVU1575
1215:src/keys.c    **** 	CLEAR_REAL;
 5313              		.loc 1 1215 5 is_stmt 0 view .LVU1576
 5314 006c 5207     		lsls	r2, r2, #29
 5315 006e D5D5     		bpl	.L573
 5316 0070 E6E7     		b	.L583
 5317              	.LVL419:
 5318              	.L584:
 5319              	.LBB558:
 5320              	.LBI558:
1197:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5321              		.loc 1 1197 6 is_stmt 1 view .LVU1577
 5322              	.LBB559:
1223:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5323              		.loc 1 1223 3 view .LVU1578
 5324 0072 6E20     		movs	r0, #110
 5325 0074 FFF7FEFF 		bl	get_reg_n
 5326              	.LVL420:
 5327 0078 0446     		mov	r4, r0
1223:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5328              		.loc 1 1223 33 is_stmt 0 view .LVU1579
 5329 007a 6420     		movs	r0, #100
 5330 007c FFF7FEFF 		bl	get_reg_n
 5331              	.LVL421:
 5332 0080 0146     		mov	r1, r0
1223:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5333              		.loc 1 1223 3 view .LVU1580
 5334 0082 2046     		mov	r0, r4
 5335 0084 FFF7FEFF 		bl	copyreg
 5336              	.LVL422:
1224:src/keys.c    **** 		//call p2r
 5337              		.loc 1 1224 3 is_stmt 1 view .LVU1581
 5338 0088 6F20     		movs	r0, #111
 5339 008a FFF7FEFF 		bl	get_reg_n
 5340              	.LVL423:
 5341 008e 0446     		mov	r4, r0
1224:src/keys.c    **** 		//call p2r
 5342              		.loc 1 1224 33 is_stmt 0 view .LVU1582
 5343 0090 6520     		movs	r0, #101
 5344 0092 FFF7FEFF 		bl	get_reg_n
 5345              	.LVL424:
 5346 0096 0146     		mov	r1, r0
1224:src/keys.c    **** 		//call p2r
 5347              		.loc 1 1224 3 view .LVU1583
 5348 0098 2046     		mov	r0, r4
 5349 009a FFF7FEFF 		bl	copyreg
 5350              	.LVL425:
ARM GAS  /tmp/cc6xzGMw.s 			page 175


1226:src/keys.c    **** 		op_p2r(OP_NOP); // x, y now contain rectangular form
 5351              		.loc 1 1226 18 is_stmt 1 view .LVU1584
1227:src/keys.c    **** #ifdef RP_PREFIX
 5352              		.loc 1 1227 3 view .LVU1585
 5353 009e 0020     		movs	r0, #0
 5354 00a0 FFF7FEFF 		bl	op_p2r
 5355              	.LVL426:
1229:src/keys.c    **** #endif
 5356              		.loc 1 1229 3 view .LVU1586
1229:src/keys.c    **** #endif
 5357              		.loc 1 1229 15 is_stmt 0 view .LVU1587
 5358 00a4 074A     		ldr	r2, .L585+8
1231:src/keys.c    **** 	}
 5359              		.loc 1 1231 3 view .LVU1588
 5360 00a6 3368     		ldr	r3, [r6]
1229:src/keys.c    **** #endif
 5361              		.loc 1 1229 15 view .LVU1589
 5362 00a8 0121     		movs	r1, #1
 5363 00aa 1160     		str	r1, [r2]
1231:src/keys.c    **** 	}
 5364              		.loc 1 1231 3 is_stmt 1 view .LVU1590
 5365 00ac 93F8AD27 		ldrb	r2, [r3, #1965]	@ zero_extendqisi2
 5366 00b0 6FF30002 		bfc	r2, #0, #1
 5367 00b4 83F8AD27 		strb	r2, [r3, #1965]
 5368              	.LVL427:
1231:src/keys.c    **** 	}
 5369              		.loc 1 1231 3 is_stmt 0 view .LVU1591
 5370              	.LBE559:
 5371              	.LBE558:
1233:src/keys.c    **** 
 5372              		.loc 1 1233 1 view .LVU1592
 5373 00b8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5374              	.L586:
 5375 00ba 00BF     		.align	2
 5376              	.L585:
 5377 00bc 00000000 		.word	main_ram
 5378 00c0 00000000 		.word	StateWhileOn
 5379 00c4 00000000 		.word	RectPolConv
 5380              		.cfi_endproc
 5381              	.LFE23:
 5383              		.section	.text.stack_begin,"ax",%progbits
 5384              		.align	1
 5385              		.p2align 2,,3
 5386              		.global	stack_begin
 5387              		.syntax unified
 5388              		.thumb
 5389              		.thumb_func
 5390              		.fpu fpv4-sp-d16
 5392              	stack_begin:
 5393              	.LVL428:
 5394              	.LFB25:
1254:src/keys.c    **** 	// Lifts stack if required and stores displaced registers; 
 5395              		.loc 1 1254 33 is_stmt 1 view -0
 5396              		.cfi_startproc
 5397              		@ args = 0, pretend = 0, frame = 0
 5398              		@ frame_needed = 0, uses_anonymous_args = 0
1257:src/keys.c    **** 	if ( State2.state_lift ){
ARM GAS  /tmp/cc6xzGMw.s 			page 176


 5399              		.loc 1 1257 2 view .LVU1594
1254:src/keys.c    **** 	// Lifts stack if required and stores displaced registers; 
 5400              		.loc 1 1254 33 is_stmt 0 view .LVU1595
 5401 0000 38B5     		push	{r3, r4, r5, lr}
 5402              		.cfi_def_cfa_offset 16
 5403              		.cfi_offset 3, -16
 5404              		.cfi_offset 4, -12
 5405              		.cfi_offset 5, -8
 5406              		.cfi_offset 14, -4
1257:src/keys.c    **** 	if ( State2.state_lift ){
 5407              		.loc 1 1257 2 view .LVU1596
 5408 0002 2C4B     		ldr	r3, .L594
1258:src/keys.c    **** 		SET_INIT_LIFT;
 5409              		.loc 1 1258 7 view .LVU1597
 5410 0004 2C4C     		ldr	r4, .L594+4
1257:src/keys.c    **** 	if ( State2.state_lift ){
 5411              		.loc 1 1257 2 view .LVU1598
 5412 0006 1B68     		ldr	r3, [r3]
 5413 0008 93F8AD27 		ldrb	r2, [r3, #1965]	@ zero_extendqisi2
 5414 000c 42F00102 		orr	r2, r2, #1
 5415 0010 83F8AD27 		strb	r2, [r3, #1965]
1258:src/keys.c    **** 		SET_INIT_LIFT;
 5416              		.loc 1 1258 2 is_stmt 1 view .LVU1599
1258:src/keys.c    **** 		SET_INIT_LIFT;
 5417              		.loc 1 1258 7 is_stmt 0 view .LVU1600
 5418 0014 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
1258:src/keys.c    **** 		SET_INIT_LIFT;
 5419              		.loc 1 1258 5 view .LVU1601
 5420 0016 12F04002 		ands	r2, r2, #64
 5421 001a 26D0     		beq	.L588
1259:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regC_idx));
 5422              		.loc 1 1259 3 is_stmt 1 view .LVU1602
 5423 001c 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
 5424 0020 42F01002 		orr	r2, r2, #16
 5425 0024 83F8AC27 		strb	r2, [r3, #1964]
1260:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5426              		.loc 1 1260 3 view .LVU1603
 5427 0028 6E20     		movs	r0, #110
 5428              	.LVL429:
1260:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5429              		.loc 1 1260 3 is_stmt 0 view .LVU1604
 5430 002a FFF7FEFF 		bl	get_reg_n
 5431              	.LVL430:
 5432 002e 0546     		mov	r5, r0
1260:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5433              		.loc 1 1260 33 view .LVU1605
 5434 0030 6A20     		movs	r0, #106
 5435 0032 FFF7FEFF 		bl	get_reg_n
 5436              	.LVL431:
 5437 0036 0146     		mov	r1, r0
1260:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5438              		.loc 1 1260 3 view .LVU1606
 5439 0038 2846     		mov	r0, r5
 5440 003a FFF7FEFF 		bl	copyreg
 5441              	.LVL432:
1261:src/keys.c    **** 		lift();
 5442              		.loc 1 1261 3 is_stmt 1 view .LVU1607
ARM GAS  /tmp/cc6xzGMw.s 			page 177


 5443 003e 6F20     		movs	r0, #111
 5444 0040 FFF7FEFF 		bl	get_reg_n
 5445              	.LVL433:
 5446 0044 0546     		mov	r5, r0
1261:src/keys.c    **** 		lift();
 5447              		.loc 1 1261 33 is_stmt 0 view .LVU1608
 5448 0046 6B20     		movs	r0, #107
 5449 0048 FFF7FEFF 		bl	get_reg_n
 5450              	.LVL434:
 5451 004c 0146     		mov	r1, r0
1261:src/keys.c    **** 		lift();
 5452              		.loc 1 1261 3 view .LVU1609
 5453 004e 2846     		mov	r0, r5
 5454 0050 FFF7FEFF 		bl	copyreg
 5455              	.LVL435:
1262:src/keys.c    **** 		zero_X();
 5456              		.loc 1 1262 3 is_stmt 1 view .LVU1610
 5457 0054 FFF7FEFF 		bl	lift
 5458              	.LVL436:
1263:src/keys.c    **** 		lift();
 5459              		.loc 1 1263 3 view .LVU1611
 5460 0058 FFF7FEFF 		bl	zero_X
 5461              	.LVL437:
1264:src/keys.c    **** 		State2.state_lift = 0;
 5462              		.loc 1 1264 3 view .LVU1612
 5463 005c FFF7FEFF 		bl	lift
 5464              	.LVL438:
1265:src/keys.c    **** 	}
 5465              		.loc 1 1265 3 view .LVU1613
1265:src/keys.c    **** 	}
 5466              		.loc 1 1265 21 is_stmt 0 view .LVU1614
 5467 0060 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 5468 0062 6FF38613 		bfc	r3, #6, #1
 5469 0066 E375     		strb	r3, [r4, #23]
 5470              	.L587:
1274:src/keys.c    **** 
 5471              		.loc 1 1274 1 view .LVU1615
 5472 0068 38BD     		pop	{r3, r4, r5, pc}
 5473              	.LVL439:
 5474              	.L588:
1268:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regX_idx));
 5475              		.loc 1 1268 3 is_stmt 1 view .LVU1616
 5476 006a 93F8AC17 		ldrb	r1, [r3, #1964]	@ zero_extendqisi2
 5477 006e 62F30411 		bfi	r1, r2, #4, #1
 5478 0072 83F8AC17 		strb	r1, [r3, #1964]
1269:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5479              		.loc 1 1269 3 view .LVU1617
 5480 0076 0546     		mov	r5, r0
 5481 0078 6E20     		movs	r0, #110
 5482              	.LVL440:
1269:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5483              		.loc 1 1269 3 is_stmt 0 view .LVU1618
 5484 007a FFF7FEFF 		bl	get_reg_n
 5485              	.LVL441:
 5486 007e 0446     		mov	r4, r0
1269:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5487              		.loc 1 1269 33 view .LVU1619
ARM GAS  /tmp/cc6xzGMw.s 			page 178


 5488 0080 6420     		movs	r0, #100
 5489 0082 FFF7FEFF 		bl	get_reg_n
 5490              	.LVL442:
 5491 0086 0146     		mov	r1, r0
1269:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5492              		.loc 1 1269 3 view .LVU1620
 5493 0088 2046     		mov	r0, r4
 5494 008a FFF7FEFF 		bl	copyreg
 5495              	.LVL443:
1270:src/keys.c    **** 		zero_X();
 5496              		.loc 1 1270 3 is_stmt 1 view .LVU1621
 5497 008e 6F20     		movs	r0, #111
 5498 0090 FFF7FEFF 		bl	get_reg_n
 5499              	.LVL444:
 5500 0094 0446     		mov	r4, r0
1270:src/keys.c    **** 		zero_X();
 5501              		.loc 1 1270 33 is_stmt 0 view .LVU1622
 5502 0096 6520     		movs	r0, #101
 5503 0098 FFF7FEFF 		bl	get_reg_n
 5504              	.LVL445:
 5505 009c 0146     		mov	r1, r0
1270:src/keys.c    **** 		zero_X();
 5506              		.loc 1 1270 3 view .LVU1623
 5507 009e 2046     		mov	r0, r4
 5508 00a0 FFF7FEFF 		bl	copyreg
 5509              	.LVL446:
1271:src/keys.c    **** 		if ( zero_y ) zero_Y();
 5510              		.loc 1 1271 3 is_stmt 1 view .LVU1624
 5511 00a4 FFF7FEFF 		bl	zero_X
 5512              	.LVL447:
1272:src/keys.c    **** 	}
 5513              		.loc 1 1272 3 view .LVU1625
1272:src/keys.c    **** 	}
 5514              		.loc 1 1272 6 is_stmt 0 view .LVU1626
 5515 00a8 002D     		cmp	r5, #0
 5516 00aa DDD0     		beq	.L587
1272:src/keys.c    **** 	}
 5517              		.loc 1 1272 17 is_stmt 1 discriminator 1 view .LVU1627
1274:src/keys.c    **** 
 5518              		.loc 1 1274 1 is_stmt 0 discriminator 1 view .LVU1628
 5519 00ac BDE83840 		pop	{r3, r4, r5, lr}
 5520              		.cfi_restore 14
 5521              		.cfi_restore 5
 5522              		.cfi_restore 4
 5523              		.cfi_restore 3
 5524              		.cfi_def_cfa_offset 0
 5525              	.LVL448:
1272:src/keys.c    **** 	}
 5526              		.loc 1 1272 17 discriminator 1 view .LVU1629
 5527 00b0 FFF7FEBF 		b	zero_Y
 5528              	.LVL449:
 5529              	.L595:
 5530              		.align	2
 5531              	.L594:
 5532 00b4 00000000 		.word	main_ram
 5533 00b8 00000000 		.word	StateWhileOn
 5534              		.cfi_endproc
ARM GAS  /tmp/cc6xzGMw.s 			page 179


 5535              	.LFE25:
 5537              		.section	.text.current_catalogue_max,"ax",%progbits
 5538              		.align	1
 5539              		.p2align 2,,3
 5540              		.global	current_catalogue_max
 5541              		.syntax unified
 5542              		.thumb
 5543              		.thumb_func
 5544              		.fpu fpv4-sp-d16
 5546              	current_catalogue_max:
 5547              	.LFB44:
2473:src/keys.c    **** 	// A quick table of catalogue sizes
 5548              		.loc 1 2473 33 is_stmt 1 view -0
 5549              		.cfi_startproc
 5550              		@ args = 0, pretend = 0, frame = 0
 5551              		@ frame_needed = 0, uses_anonymous_args = 0
 5552              		@ link register save eliminated.
2476:src/keys.c    **** 	{
 5553              		.loc 1 2476 2 view .LVU1631
2507:src/keys.c    **** #endif
 5554              		.loc 1 2507 2 view .LVU1632
2507:src/keys.c    **** #endif
 5555              		.loc 1 2507 31 is_stmt 0 view .LVU1633
 5556 0000 024B     		ldr	r3, .L597
2507:src/keys.c    **** #endif
 5557              		.loc 1 2507 24 view .LVU1634
 5558 0002 034A     		ldr	r2, .L597+4
2507:src/keys.c    **** #endif
 5559              		.loc 1 2507 31 view .LVU1635
 5560 0004 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2509:src/keys.c    **** 
 5561              		.loc 1 2509 1 view .LVU1636
 5562 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 5563 0008 7047     		bx	lr
 5564              	.L598:
 5565 000a 00BF     		.align	2
 5566              	.L597:
 5567 000c 00000000 		.word	StateWhileOn
 5568 0010 00000000 		.word	.LANCHOR8
 5569              		.cfi_endproc
 5570              	.LFE44:
 5572              		.section	.text.current_catalogue,"ax",%progbits
 5573              		.align	1
 5574              		.p2align 2,,3
 5575              		.global	current_catalogue
 5576              		.syntax unified
 5577              		.thumb
 5578              		.thumb_func
 5579              		.fpu fpv4-sp-d16
 5581              	current_catalogue:
 5582              	.LVL450:
 5583              	.LFB46:
2522:src/keys.c    **** 	// A quick table of catalogue tables
 5584              		.loc 1 2522 33 is_stmt 1 view -0
 5585              		.cfi_startproc
 5586              		@ args = 0, pretend = 0, frame = 0
 5587              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc6xzGMw.s 			page 180


 5588              		@ link register save eliminated.
2525:src/keys.c    **** 	{
 5589              		.loc 1 2525 2 view .LVU1638
2552:src/keys.c    **** 	unsigned int c = State2.catalogue;
 5590              		.loc 1 2552 2 view .LVU1639
2553:src/keys.c    **** 	int m, i;
 5591              		.loc 1 2553 2 view .LVU1640
2553:src/keys.c    **** 	int m, i;
 5592              		.loc 1 2553 25 is_stmt 0 view .LVU1641
 5593 0000 314A     		ldr	r2, .L626
2553:src/keys.c    **** 	int m, i;
 5594              		.loc 1 2553 15 view .LVU1642
 5595 0002 937B     		ldrb	r3, [r2, #14]	@ zero_extendqisi2
 5596              	.LVL451:
2554:src/keys.c    **** 	unsigned p, q;
 5597              		.loc 1 2554 2 is_stmt 1 view .LVU1643
2555:src/keys.c    **** 
 5598              		.loc 1 2555 2 view .LVU1644
2557:src/keys.c    **** 		if (n == OP_ZERO)
 5599              		.loc 1 2557 2 view .LVU1645
2557:src/keys.c    **** 		if (n == OP_ZERO)
 5600              		.loc 1 2557 5 is_stmt 0 view .LVU1646
 5601 0004 102B     		cmp	r3, #16
 5602 0006 39D0     		beq	.L620
2562:src/keys.c    **** 		if (n == OP_ZERO)
 5603              		.loc 1 2562 2 is_stmt 1 view .LVU1647
2562:src/keys.c    **** 		if (n == OP_ZERO)
 5604              		.loc 1 2562 5 is_stmt 0 view .LVU1648
 5605 0008 112B     		cmp	r3, #17
 5606 000a 32D0     		beq	.L621
2567:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 5607              		.loc 1 2567 2 is_stmt 1 view .LVU1649
2567:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 5608              		.loc 1 2567 5 is_stmt 0 view .LVU1650
 5609 000c 122B     		cmp	r3, #18
 5610 000e 45D0     		beq	.L622
2580:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 5611              		.loc 1 2580 2 is_stmt 1 view .LVU1651
2580:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 5612              		.loc 1 2580 5 is_stmt 0 view .LVU1652
 5613 0010 0E2B     		cmp	r3, #14
 5614 0012 38D0     		beq	.L623
2583:src/keys.c    **** 
 5615              		.loc 1 2583 3 is_stmt 1 view .LVU1653
2583:src/keys.c    **** 
 5616              		.loc 1 2583 7 is_stmt 0 view .LVU1654
 5617 0014 2D4A     		ldr	r2, .L626+4
2585:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5618              		.loc 1 2585 35 view .LVU1655
 5619 0016 A3F10B01 		sub	r1, r3, #11
2585:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5620              		.loc 1 2585 5 view .LVU1656
 5621 001a 0429     		cmp	r1, #4
2583:src/keys.c    **** 
 5622              		.loc 1 2583 7 view .LVU1657
 5623 001c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 5624              	.LVL452:
ARM GAS  /tmp/cc6xzGMw.s 			page 181


2585:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5625              		.loc 1 2585 2 is_stmt 1 view .LVU1658
2585:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5626              		.loc 1 2585 5 is_stmt 0 view .LVU1659
 5627 0020 38D9     		bls	.L606
2588:src/keys.c    **** 		return OP_NIL | OP_NOP;
 5628              		.loc 1 2588 2 is_stmt 1 view .LVU1660
2588:src/keys.c    **** 		return OP_NIL | OP_NOP;
 5629              		.loc 1 2588 5 is_stmt 0 view .LVU1661
 5630 0022 142B     		cmp	r3, #20
 5631 0024 4DD8     		bhi	.L614
2592:src/keys.c    **** 	p = cat[0];
 5632              		.loc 1 2592 2 is_stmt 1 view .LVU1662
2522:src/keys.c    **** 	// A quick table of catalogue tables
 5633              		.loc 1 2522 33 is_stmt 0 view .LVU1663
 5634 0026 10B4     		push	{r4}
 5635              		.cfi_def_cfa_offset 4
 5636              		.cfi_offset 4, -4
2592:src/keys.c    **** 	p = cat[0];
 5637              		.loc 1 2592 11 view .LVU1664
 5638 0028 00EBA001 		add	r1, r0, r0, asr #2
2592:src/keys.c    **** 	p = cat[0];
 5639              		.loc 1 2592 6 view .LVU1665
 5640 002c 5318     		adds	r3, r2, r1
 5641              	.LVL453:
2593:src/keys.c    **** 	q = cat[1];
 5642              		.loc 1 2593 2 is_stmt 1 view .LVU1666
2594:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 5643              		.loc 1 2594 2 view .LVU1667
2595:src/keys.c    **** 
 5644              		.loc 1 2595 2 view .LVU1668
2595:src/keys.c    **** 
 5645              		.loc 1 2595 35 is_stmt 0 view .LVU1669
 5646 002e 4000     		lsls	r0, r0, #1
 5647              	.LVL454:
2593:src/keys.c    **** 	q = cat[1];
 5648              		.loc 1 2593 4 view .LVU1670
 5649 0030 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 5650              	.LVL455:
2594:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 5651              		.loc 1 2594 4 view .LVU1671
 5652 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5653              	.LVL456:
2594:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 5654              		.loc 1 2594 4 view .LVU1672
 5655 0034 2649     		ldr	r1, .L626+8
 5656              	.LVL457:
2595:src/keys.c    **** 
 5657              		.loc 1 2595 54 view .LVU1673
 5658 0036 C443     		mvns	r4, r0
2595:src/keys.c    **** 
 5659              		.loc 1 2595 35 view .LVU1674
 5660 0038 00F00600 		and	r0, r0, #6
2595:src/keys.c    **** 
 5661              		.loc 1 2595 54 view .LVU1675
 5662 003c 04F00604 		and	r4, r4, #6
2595:src/keys.c    **** 
ARM GAS  /tmp/cc6xzGMw.s 			page 182


 5663              		.loc 1 2595 24 view .LVU1676
 5664 0040 0230     		adds	r0, r0, #2
2595:src/keys.c    **** 
 5665              		.loc 1 2595 48 view .LVU1677
 5666 0042 E340     		lsrs	r3, r3, r4
 5667              	.LVL458:
2595:src/keys.c    **** 
 5668              		.loc 1 2595 18 view .LVU1678
 5669 0044 02FA00F0 		lsl	r0, r2, r0
2595:src/keys.c    **** 
 5670              		.loc 1 2595 43 view .LVU1679
 5671 0048 1843     		orrs	r0, r0, r3
2595:src/keys.c    **** 
 5672              		.loc 1 2595 4 view .LVU1680
 5673 004a C0F30903 		ubfx	r3, r0, #0, #10
 5674              	.LVL459:
2598:src/keys.c    **** 		if (m < opcode_breaks[i])
 5675              		.loc 1 2598 2 is_stmt 1 view .LVU1681
2598:src/keys.c    **** 		if (m < opcode_breaks[i])
 5676              		.loc 1 2598 12 view .LVU1682
2595:src/keys.c    **** 
 5677              		.loc 1 2595 4 is_stmt 0 view .LVU1683
 5678 004e 3422     		movs	r2, #52
 5679              	.LVL460:
2598:src/keys.c    **** 		if (m < opcode_breaks[i])
 5680              		.loc 1 2598 8 view .LVU1684
 5681 0050 0020     		movs	r0, #0
 5682 0052 01E0     		b	.L610
 5683              	.LVL461:
 5684              	.L625:
2598:src/keys.c    **** 		if (m < opcode_breaks[i])
 5685              		.loc 1 2598 8 view .LVU1685
 5686 0054 11F8012B 		ldrb	r2, [r1], #1	@ zero_extendqisi2
 5687              	.LVL462:
 5688              	.L610:
2599:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 5689              		.loc 1 2599 3 is_stmt 1 view .LVU1686
2601:src/keys.c    **** 	}
 5690              		.loc 1 2601 3 view .LVU1687
2599:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 5691              		.loc 1 2599 6 is_stmt 0 view .LVU1688
 5692 0058 9A42     		cmp	r2, r3
 5693 005a 2FDC     		bgt	.L624
2598:src/keys.c    **** 		if (m < opcode_breaks[i])
 5694              		.loc 1 2598 25 discriminator 2 view .LVU1689
 5695 005c 0130     		adds	r0, r0, #1
 5696              	.LVL463:
2598:src/keys.c    **** 		if (m < opcode_breaks[i])
 5697              		.loc 1 2598 2 discriminator 2 view .LVU1690
 5698 005e 0728     		cmp	r0, #7
2601:src/keys.c    **** 	}
 5699              		.loc 1 2601 5 discriminator 2 view .LVU1691
 5700 0060 A3EB0203 		sub	r3, r3, r2
 5701              	.LVL464:
2598:src/keys.c    **** 		if (m < opcode_breaks[i])
 5702              		.loc 1 2598 24 is_stmt 1 discriminator 2 view .LVU1692
2598:src/keys.c    **** 		if (m < opcode_breaks[i])
ARM GAS  /tmp/cc6xzGMw.s 			page 183


 5703              		.loc 1 2598 12 discriminator 2 view .LVU1693
2598:src/keys.c    **** 		if (m < opcode_breaks[i])
 5704              		.loc 1 2598 2 is_stmt 0 discriminator 2 view .LVU1694
 5705 0064 F6D1     		bne	.L625
2603:src/keys.c    **** }
 5706              		.loc 1 2603 2 is_stmt 1 view .LVU1695
2603:src/keys.c    **** }
 5707              		.loc 1 2603 9 is_stmt 0 view .LVU1696
 5708 0066 03F12000 		add	r0, r3, #32
 5709              	.LVL465:
2603:src/keys.c    **** }
 5710              		.loc 1 2603 9 view .LVU1697
 5711 006a 0002     		lsls	r0, r0, #8
 5712              	.L599:
2604:src/keys.c    **** 
 5713              		.loc 1 2604 1 view .LVU1698
 5714 006c 5DF8044B 		ldr	r4, [sp], #4
 5715              		.cfi_restore 4
 5716              		.cfi_def_cfa_offset 0
 5717 0070 7047     		bx	lr
 5718              	.LVL466:
 5719              	.L621:
2563:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 5720              		.loc 1 2563 3 is_stmt 1 view .LVU1699
2563:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 5721              		.loc 1 2563 6 is_stmt 0 view .LVU1700
 5722 0072 4B28     		cmp	r0, #75
 5723 0074 1FD0     		beq	.L612
2565:src/keys.c    **** 	}
 5724              		.loc 1 2565 3 is_stmt 1 view .LVU1701
2565:src/keys.c    **** 	}
 5725              		.loc 1 2565 10 is_stmt 0 view .LVU1702
 5726 0076 40F40450 		orr	r0, r0, #8448
 5727              	.LVL467:
2565:src/keys.c    **** 	}
 5728              		.loc 1 2565 10 view .LVU1703
 5729 007a 7047     		bx	lr
 5730              	.LVL468:
 5731              	.L620:
2558:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 5732              		.loc 1 2558 3 is_stmt 1 view .LVU1704
2558:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 5733              		.loc 1 2558 6 is_stmt 0 view .LVU1705
 5734 007c 4B28     		cmp	r0, #75
 5735 007e 17D0     		beq	.L611
2560:src/keys.c    **** 	}
 5736              		.loc 1 2560 3 is_stmt 1 view .LVU1706
2560:src/keys.c    **** 	}
 5737              		.loc 1 2560 10 is_stmt 0 view .LVU1707
 5738 0080 40F40050 		orr	r0, r0, #8192
 5739              	.LVL469:
2560:src/keys.c    **** 	}
 5740              		.loc 1 2560 10 view .LVU1708
 5741 0084 7047     		bx	lr
 5742              	.LVL470:
 5743              	.L623:
2580:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
ARM GAS  /tmp/cc6xzGMw.s 			page 184


 5744              		.loc 1 2580 35 discriminator 1 view .LVU1709
 5745 0086 917D     		ldrb	r1, [r2, #22]	@ zero_extendqisi2
2581:src/keys.c    **** 	else
 5746              		.loc 1 2581 7 discriminator 1 view .LVU1710
 5747 0088 124B     		ldr	r3, .L626+12
 5748              	.LVL471:
2581:src/keys.c    **** 	else
 5749              		.loc 1 2581 7 discriminator 1 view .LVU1711
 5750 008a 134A     		ldr	r2, .L626+16
 5751              	.LVL472:
2581:src/keys.c    **** 	else
 5752              		.loc 1 2581 7 discriminator 1 view .LVU1712
 5753 008c 11F0100F 		tst	r1, #16
 5754 0090 18BF     		it	ne
 5755 0092 1A46     		movne	r2, r3
 5756              	.L606:
 5757              	.LVL473:
2586:src/keys.c    **** 	}
 5758              		.loc 1 2586 3 is_stmt 1 view .LVU1713
 5759              	.LBB560:
 5760              	.LBI560:
2515:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
 5761              		.loc 1 2515 15 view .LVU1714
 5762              	.LBB561:
2516:src/keys.c    **** }
 5763              		.loc 1 2516 2 view .LVU1715
2516:src/keys.c    **** }
 5764              		.loc 1 2516 9 is_stmt 0 view .LVU1716
 5765 0094 105C     		ldrb	r0, [r2, r0]	@ zero_extendqisi2
 5766              	.LVL474:
2516:src/keys.c    **** }
 5767              		.loc 1 2516 9 view .LVU1717
 5768 0096 40F48840 		orr	r0, r0, #17408
 5769              	.LVL475:
2516:src/keys.c    **** }
 5770              		.loc 1 2516 9 view .LVU1718
 5771              	.LBE561:
 5772              	.LBE560:
2586:src/keys.c    **** 	}
 5773              		.loc 1 2586 10 view .LVU1719
 5774 009a 7047     		bx	lr
 5775              	.LVL476:
 5776              	.L622:
 5777              	.LBB562:
2568:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 5778              		.loc 1 2568 3 is_stmt 1 view .LVU1720
2568:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 5779              		.loc 1 2568 33 is_stmt 0 view .LVU1721
 5780 009c 0F4B     		ldr	r3, .L626+20
 5781              	.LVL477:
2568:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 5782              		.loc 1 2568 13 view .LVU1722
 5783 009e 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 5784              	.LVL478:
2569:src/keys.c    **** 			// Monadic conversion routine
 5785              		.loc 1 2569 3 is_stmt 1 view .LVU1723
2569:src/keys.c    **** 			// Monadic conversion routine
ARM GAS  /tmp/cc6xzGMw.s 			page 185


 5786              		.loc 1 2569 6 is_stmt 0 view .LVU1724
 5787 00a0 5728     		cmp	r0, #87
2571:src/keys.c    **** 		else
 5788              		.loc 1 2571 4 is_stmt 1 view .LVU1725
2571:src/keys.c    **** 		else
 5789              		.loc 1 2571 25 is_stmt 0 view .LVU1726
 5790 00a2 C6BF     		itte	gt
 5791 00a4 5838     		subgt	r0, r0, #88
 5792              	.LVL479:
2571:src/keys.c    **** 		else
 5793              		.loc 1 2571 18 view .LVU1727
 5794 00a6 40F40070 		orrgt	r0, r0, #512
2573:src/keys.c    **** 	}
 5795              		.loc 1 2573 4 is_stmt 1 view .LVU1728
2573:src/keys.c    **** 	}
 5796              		.loc 1 2573 11 is_stmt 0 view .LVU1729
 5797 00aa 40F40C40 		orrle	r0, r0, #35840
 5798 00ae 7047     		bx	lr
 5799              	.LVL480:
 5800              	.L611:
2573:src/keys.c    **** 	}
 5801              		.loc 1 2573 11 view .LVU1730
 5802              	.LBE562:
2559:src/keys.c    **** 		return CONST(n);
 5803              		.loc 1 2559 11 view .LVU1731
 5804 00b0 4FF42740 		mov	r0, #42752
 5805              	.LVL481:
2559:src/keys.c    **** 		return CONST(n);
 5806              		.loc 1 2559 11 view .LVU1732
 5807 00b4 7047     		bx	lr
 5808              	.LVL482:
 5809              	.L612:
2564:src/keys.c    **** 		return CONST_CMPLX(n);
 5810              		.loc 1 2564 11 view .LVU1733
 5811 00b6 4FF42840 		mov	r0, #43008
 5812              	.LVL483:
2564:src/keys.c    **** 		return CONST_CMPLX(n);
 5813              		.loc 1 2564 11 view .LVU1734
 5814 00ba 7047     		bx	lr
 5815              	.LVL484:
 5816              	.L624:
 5817              		.cfi_def_cfa_offset 4
 5818              		.cfi_offset 4, -4
2600:src/keys.c    **** 		m -= opcode_breaks[i];
 5819              		.loc 1 2600 4 is_stmt 1 view .LVU1735
2600:src/keys.c    **** 		m -= opcode_breaks[i];
 5820              		.loc 1 2600 29 is_stmt 0 view .LVU1736
 5821 00bc 03EB0020 		add	r0, r3, r0, lsl #8
 5822              	.LVL485:
2600:src/keys.c    **** 		m -= opcode_breaks[i];
 5823              		.loc 1 2600 29 view .LVU1737
 5824 00c0 D4E7     		b	.L599
 5825              	.LVL486:
 5826              	.L614:
 5827              		.cfi_def_cfa_offset 0
 5828              		.cfi_restore 4
2589:src/keys.c    **** 
ARM GAS  /tmp/cc6xzGMw.s 			page 186


 5829              		.loc 1 2589 10 view .LVU1738
 5830 00c2 4FF48070 		mov	r0, #256
 5831              	.LVL487:
2604:src/keys.c    **** 
 5832              		.loc 1 2604 1 view .LVU1739
 5833 00c6 7047     		bx	lr
 5834              	.L627:
 5835              		.align	2
 5836              	.L626:
 5837 00c8 00000000 		.word	StateWhileOn
 5838 00cc 00000000 		.word	.LANCHOR12
 5839 00d0 01000000 		.word	.LANCHOR13+1
 5840 00d4 00000000 		.word	.LANCHOR10
 5841 00d8 00000000 		.word	.LANCHOR9
 5842 00dc 00000000 		.word	.LANCHOR11
 5843              		.cfi_endproc
 5844              	.LFE46:
 5846              		.section	.text.process_catalogue,"ax",%progbits
 5847              		.align	1
 5848              		.p2align 2,,3
 5849              		.syntax unified
 5850              		.thumb
 5851              		.thumb_func
 5852              		.fpu fpv4-sp-d16
 5854              	process_catalogue:
 5855              	.LVL488:
 5856              	.LFB48:
2618:src/keys.c    ****    int pos = State.catpos;
 5857              		.loc 1 2618 93 is_stmt 1 view -0
 5858              		.cfi_startproc
 5859              		@ args = 0, pretend = 0, frame = 16
 5860              		@ frame_needed = 0, uses_anonymous_args = 0
2618:src/keys.c    ****    int pos = State.catpos;
 5861              		.loc 1 2618 93 is_stmt 0 view .LVU1741
 5862 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5863              		.cfi_def_cfa_offset 36
 5864              		.cfi_offset 4, -36
 5865              		.cfi_offset 5, -32
 5866              		.cfi_offset 6, -28
 5867              		.cfi_offset 7, -24
 5868              		.cfi_offset 8, -20
 5869              		.cfi_offset 9, -16
 5870              		.cfi_offset 10, -12
 5871              		.cfi_offset 11, -8
 5872              		.cfi_offset 14, -4
2619:src/keys.c    ****    int ch;
 5873              		.loc 1 2619 14 view .LVU1742
 5874 0004 DFF8EC92 		ldr	r9, .L742+24
 5875              	.LBB563:
 5876              	.LBB564:
2507:src/keys.c    **** #endif
 5877              		.loc 1 2507 31 view .LVU1743
 5878 0008 B44F     		ldr	r7, .L742
 5879              	.LBE564:
 5880              	.LBE563:
2619:src/keys.c    ****    int ch;
 5881              		.loc 1 2619 14 view .LVU1744
ARM GAS  /tmp/cc6xzGMw.s 			page 187


 5882 000a D9F80040 		ldr	r4, [r9]
 5883              	.LBB569:
 5884              	.LBB565:
2507:src/keys.c    **** #endif
 5885              		.loc 1 2507 31 view .LVU1745
 5886 000e 97F80EA0 		ldrb	r10, [r7, #14]	@ zero_extendqisi2
 5887              	.LBE565:
 5888              	.LBE569:
2619:src/keys.c    ****    int ch;
 5889              		.loc 1 2619 19 view .LVU1746
 5890 0012 B4F8DC57 		ldrh	r5, [r4, #2012]
 5891              	.LBB570:
 5892              	.LBB566:
2507:src/keys.c    **** #endif
 5893              		.loc 1 2507 24 view .LVU1747
 5894 0016 B24B     		ldr	r3, .L742+4
 5895              	.LBE566:
 5896              	.LBE570:
2619:src/keys.c    ****    int ch;
 5897              		.loc 1 2619 4 is_stmt 1 view .LVU1748
2618:src/keys.c    ****    int pos = State.catpos;
 5898              		.loc 1 2618 93 is_stmt 0 view .LVU1749
 5899 0018 85B0     		sub	sp, sp, #20
 5900              		.cfi_def_cfa_offset 56
 5901              	.LBB571:
 5902              	.LBB567:
2507:src/keys.c    **** #endif
 5903              		.loc 1 2507 24 view .LVU1750
 5904 001a 13F80A80 		ldrb	r8, [r3, r10]	@ zero_extendqisi2
 5905              	.LBE567:
 5906              	.LBE571:
2618:src/keys.c    ****    int pos = State.catpos;
 5907              		.loc 1 2618 93 view .LVU1751
 5908 001e 1646     		mov	r6, r2
2619:src/keys.c    ****    int ch;
 5909              		.loc 1 2619 8 view .LVU1752
 5910 0020 C5F34615 		ubfx	r5, r5, #5, #7
 5911              	.LVL489:
2620:src/keys.c    ****    const int ctmax = current_catalogue_max();
 5912              		.loc 1 2620 4 is_stmt 1 view .LVU1753
2621:src/keys.c    ****    const enum catalogues cat = (enum catalogues) State2.catalogue;
 5913              		.loc 1 2621 4 view .LVU1754
 5914              	.LBB572:
 5915              	.LBI563:
2473:src/keys.c    **** 	// A quick table of catalogue sizes
 5916              		.loc 1 2473 5 view .LVU1755
 5917              	.LBB568:
2476:src/keys.c    **** 	{
 5918              		.loc 1 2476 2 view .LVU1756
2507:src/keys.c    **** #endif
 5919              		.loc 1 2507 2 view .LVU1757
2507:src/keys.c    **** #endif
 5920              		.loc 1 2507 2 is_stmt 0 view .LVU1758
 5921              	.LBE568:
 5922              	.LBE572:
2622:src/keys.c    **** 
 5923              		.loc 1 2622 4 is_stmt 1 view .LVU1759
ARM GAS  /tmp/cc6xzGMw.s 			page 188


2624:src/keys.c    ****      switch (c) {
 5924              		.loc 1 2624 4 view .LVU1760
2624:src/keys.c    ****      switch (c) {
 5925              		.loc 1 2624 7 is_stmt 0 view .LVU1761
 5926 0024 0029     		cmp	r1, #0
 5927 0026 65D0     		beq	.L727
2685:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
 5928              		.loc 1 2685 11 is_stmt 1 view .LVU1762
2685:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
 5929              		.loc 1 2685 14 is_stmt 0 view .LVU1763
 5930 0028 0129     		cmp	r1, #1
 5931 002a 00F0ED80 		beq	.L728
2719:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
 5932              		.loc 1 2719 11 is_stmt 1 view .LVU1764
2719:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
 5933              		.loc 1 2719 14 is_stmt 0 view .LVU1765
 5934 002e 0229     		cmp	r1, #2
 5935 0030 00F00B81 		beq	.L729
 5936              	.LVL490:
 5937              	.L664:
 5938              	.LBB573:
 5939              	.LBB574:
 491:src/keys.c    **** }
 5940              		.loc 1 491 2 is_stmt 1 view .LVU1766
 5941              	.LBB575:
 5942              	.LBI575:
 131:src/keys.c    **** {
 5943              		.loc 1 131 12 view .LVU1767
 5944              	.LBB576:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 5945              		.loc 1 133 2 view .LVU1768
 143:src/keys.c    **** }
 5946              		.loc 1 143 2 view .LVU1769
 143:src/keys.c    **** }
 5947              		.loc 1 143 23 is_stmt 0 view .LVU1770
 5948 0034 AB4B     		ldr	r3, .L742+8
 5949              	.LBE576:
 5950              	.LBE575:
 491:src/keys.c    **** }
 5951              		.loc 1 491 49 view .LVU1771
 5952 0036 AC4A     		ldr	r2, .L742+12
 5953              	.LBB578:
 5954              	.LBB577:
 143:src/keys.c    **** }
 5955              		.loc 1 143 23 view .LVU1772
 5956 0038 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 5957              	.LBE577:
 5958              	.LBE578:
 491:src/keys.c    **** }
 5959              		.loc 1 491 49 view .LVU1773
 5960 003a 03EB4303 		add	r3, r3, r3, lsl #1
 5961 003e 02EB4303 		add	r3, r2, r3, lsl #1
 5962              	.LBE574:
 5963              	.LBE573:
 5964              	.LBB582:
 5965              	.LBB583:
 5966              	.LBB584:
ARM GAS  /tmp/cc6xzGMw.s 			page 189


 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5967              		.loc 1 106 16 view .LVU1774
 5968 0042 0025     		movs	r5, #0
 5969              	.LVL491:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5970              		.loc 1 106 16 view .LVU1775
 5971              	.LBE584:
 5972              	.LBE583:
 5973              	.LBE582:
2729:src/keys.c    ****    reset_shift();
 5974              		.loc 1 2729 9 view .LVU1776
 5975 0044 585C     		ldrb	r0, [r3, r1]	@ zero_extendqisi2
 5976              	.LVL492:
2729:src/keys.c    ****    reset_shift();
 5977              		.loc 1 2729 9 view .LVU1777
 5978 0046 FFF7FEFF 		bl	remap_chars
 5979              	.LVL493:
2729:src/keys.c    ****    reset_shift();
 5980              		.loc 1 2729 9 view .LVU1778
 5981 004a 0446     		mov	r4, r0
 5982              	.LVL494:
2730:src/keys.c    ****    if (ch == '\0')
 5983              		.loc 1 2730 4 is_stmt 1 view .LVU1779
 5984              	.LBB589:
 5985              	.LBI582:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 5986              		.loc 1 114 13 view .LVU1780
 5987              	.LBE589:
 115:src/keys.c    **** }
 5988              		.loc 1 115 2 view .LVU1781
 5989              	.LBB590:
 5990              	.LBB588:
 5991              	.LBI583:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 5992              		.loc 1 104 20 view .LVU1782
 5993              	.LBB587:
 105:src/keys.c    **** 	State2.shifts = shift;
 5994              		.loc 1 105 2 view .LVU1783
 5995              	.LBB585:
 5996              	.LBI585:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 5997              		.loc 1 96 13 view .LVU1784
 5998              	.LBB586:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5999              		.loc 1 97 2 view .LVU1785
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 6000              		.loc 1 97 18 is_stmt 0 view .LVU1786
 6001 004c FFF7FEFF 		bl	shift_down
 6002              	.LVL495:
  98:src/keys.c    **** }
 6003              		.loc 1 98 2 is_stmt 1 view .LVU1787
 6004              	.LBE586:
 6005              	.LBE585:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 6006              		.loc 1 106 2 view .LVU1788
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 6007              		.loc 1 106 16 is_stmt 0 view .LVU1789
ARM GAS  /tmp/cc6xzGMw.s 			page 190


 6008 0050 3D74     		strb	r5, [r7, #16]
 108:src/keys.c    **** }
 6009              		.loc 1 108 2 is_stmt 1 view .LVU1790
 6010              	.LVL496:
 108:src/keys.c    **** }
 6011              		.loc 1 108 2 is_stmt 0 view .LVU1791
 6012              	.LBE587:
 6013              	.LBE588:
 6014              	.LBE590:
2731:src/keys.c    ****      return STATE_UNFINISHED;
 6015              		.loc 1 2731 4 is_stmt 1 view .LVU1792
2731:src/keys.c    ****      return STATE_UNFINISHED;
 6016              		.loc 1 2731 7 is_stmt 0 view .LVU1793
 6017 0052 002C     		cmp	r4, #0
 6018 0054 6FD0     		beq	.L726
2733:src/keys.c    ****      // No multi character search in alpha catalogues
 6019              		.loc 1 2733 4 is_stmt 1 view .LVU1794
2733:src/keys.c    ****      // No multi character search in alpha catalogues
 6020              		.loc 1 2733 7 is_stmt 0 view .LVU1795
 6021 0056 AAF10B0A 		sub	r10, r10, #11
 6022              	.LVL497:
2733:src/keys.c    ****      // No multi character search in alpha catalogues
 6023              		.loc 1 2733 7 view .LVU1796
 6024 005a BAF1040F 		cmp	r10, #4
 6025 005e 40F2CB80 		bls	.L678
2737:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6026              		.loc 1 2737 4 is_stmt 1 view .LVU1797
2737:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6027              		.loc 1 2737 8 is_stmt 0 view .LVU1798
 6028 0062 3D7F     		ldrb	r5, [r7, #28]	@ zero_extendqisi2
2737:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6029              		.loc 1 2737 7 view .LVU1799
 6030 0064 092D     		cmp	r5, #9
 6031 0066 40F2C780 		bls	.L678
 6032              	.LVL498:
 6033              	.L646:
2742:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
 6034              		.loc 1 2742 4 is_stmt 1 view .LVU1800
2742:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
 6035              		.loc 1 2742 27 is_stmt 0 view .LVU1801
 6036 006a 7B19     		adds	r3, r7, r5
 6037 006c 0025     		movs	r5, #0
 6038 006e 83F82050 		strb	r5, [r3, #32]
2743:src/keys.c    ****      char buf[16];
 6039              		.loc 1 2743 4 is_stmt 1 view .LVU1802
 6040              	.LVL499:
2743:src/keys.c    ****      char buf[16];
 6041              		.loc 1 2743 18 view .LVU1803
2743:src/keys.c    ****      char buf[16];
 6042              		.loc 1 2743 4 is_stmt 0 view .LVU1804
 6043 0072 B8F1000F 		cmp	r8, #0
 6044 0076 00F0D780 		beq	.L724
 6045              	.LVL500:
 6046              	.L666:
 6047              	.LBB591:
2744:src/keys.c    ****      const char *cmd = catcmd(current_catalogue(pos), buf);
 6048              		.loc 1 2744 6 is_stmt 1 view .LVU1805
ARM GAS  /tmp/cc6xzGMw.s 			page 191


2745:src/keys.c    ****      int i;
 6049              		.loc 1 2745 6 view .LVU1806
2745:src/keys.c    ****      int i;
 6050              		.loc 1 2745 24 is_stmt 0 view .LVU1807
 6051 007a 2846     		mov	r0, r5
 6052 007c FFF7FEFF 		bl	current_catalogue
 6053              	.LVL501:
 6054 0080 6946     		mov	r1, sp
 6055 0082 FFF7FEFF 		bl	catcmd
 6056              	.LVL502:
 6057 0086 0446     		mov	r4, r0
 6058              	.LVL503:
2746:src/keys.c    **** 
 6059              		.loc 1 2746 6 is_stmt 1 view .LVU1808
2748:src/keys.c    ****        cmd++;
 6060              		.loc 1 2748 6 view .LVU1809
2749:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
 6061              		.loc 1 2749 8 view .LVU1810
2748:src/keys.c    ****        cmd++;
 6062              		.loc 1 2748 10 is_stmt 0 view .LVU1811
 6063 0088 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 6064              	.LVL504:
2748:src/keys.c    ****        cmd++;
 6065              		.loc 1 2748 9 view .LVU1812
 6066 008a 1428     		cmp	r0, #20
 6067 008c 04BF     		itt	eq
 6068 008e 6078     		ldrbeq	r0, [r4, #1]	@ zero_extendqisi2
2749:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
 6069              		.loc 1 2749 11 view .LVU1813
 6070 0090 0134     		addeq	r4, r4, #1
 6071              	.LVL505:
2750:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6072              		.loc 1 2750 6 is_stmt 1 view .LVU1814
2750:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6073              		.loc 1 2750 16 view .LVU1815
2750:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6074              		.loc 1 2750 6 is_stmt 0 view .LVU1816
 6075 0092 0028     		cmp	r0, #0
 6076 0094 00F0BF80 		beq	.L668
 6077 0098 DFF85CB2 		ldr	fp, .L742+28
 6078 009c C4F1010A 		rsb	r10, r4, #1
 6079 00a0 06E0     		b	.L671
 6080              	.LVL506:
 6081              	.L731:
 6082              	.LBB592:
2755:src/keys.c    **** 	 break;
 6083              		.loc 1 2755 16 view .LVU1817
 6084 00a2 C0F2BA80 		blt	.L670
 6085              	.LBE592:
2750:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6086              		.loc 1 2750 19 discriminator 2 view .LVU1818
 6087 00a6 14F8010F 		ldrb	r0, [r4, #1]!	@ zero_extendqisi2
 6088              	.LVL507:
2750:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6089              		.loc 1 2750 6 discriminator 2 view .LVU1819
 6090 00aa 0028     		cmp	r0, #0
 6091 00ac 00F0BF80 		beq	.L730
ARM GAS  /tmp/cc6xzGMw.s 			page 192


 6092              	.LVL508:
 6093              	.L671:
 6094              	.LBB593:
2751:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
 6095              		.loc 1 2751 8 is_stmt 1 view .LVU1820
2751:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
 6096              		.loc 1 2751 22 is_stmt 0 view .LVU1821
 6097 00b0 FFF7FEFF 		bl	remap_chars
 6098              	.LVL509:
2755:src/keys.c    **** 	 break;
 6099              		.loc 1 2755 13 is_stmt 1 view .LVU1822
 6100              	.LBE593:
2750:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6101              		.loc 1 2750 32 view .LVU1823
 6102              	.LBB594:
2752:src/keys.c    ****        if (c > cl)
 6103              		.loc 1 2752 8 view .LVU1824
2752:src/keys.c    ****        if (c > cl)
 6104              		.loc 1 2752 46 is_stmt 0 view .LVU1825
 6105 00b4 1BF8013F 		ldrb	r3, [fp, #1]!	@ zero_extendqisi2
 6106              	.LVL510:
2753:src/keys.c    **** 	 goto set_pos;
 6107              		.loc 1 2753 8 is_stmt 1 view .LVU1826
2753:src/keys.c    **** 	 goto set_pos;
 6108              		.loc 1 2753 11 is_stmt 0 view .LVU1827
 6109 00b8 9842     		cmp	r0, r3
 6110 00ba 0AEB0402 		add	r2, r10, r4
 6111              	.LVL511:
2753:src/keys.c    **** 	 goto set_pos;
 6112              		.loc 1 2753 11 view .LVU1828
 6113              	.LBE594:
2750:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6114              		.loc 1 2750 16 is_stmt 1 view .LVU1829
 6115              	.LBB595:
2753:src/keys.c    **** 	 goto set_pos;
 6116              		.loc 1 2753 11 is_stmt 0 view .LVU1830
 6117 00be F0DD     		ble	.L731
 6118              	.LVL512:
 6119              	.L669:
2753:src/keys.c    **** 	 goto set_pos;
 6120              		.loc 1 2753 11 view .LVU1831
 6121 00c0 D9F80040 		ldr	r4, [r9]
 6122              	.L649:
2753:src/keys.c    **** 	 goto set_pos;
 6123              		.loc 1 2753 11 view .LVU1832
 6124              	.LBE595:
 6125              	.LBE591:
2764:src/keys.c    ****      --pos;
 6126              		.loc 1 2764 10 is_stmt 1 view .LVU1833
 6127 00c4 002E     		cmp	r6, #0
 6128 00c6 00F0B680 		beq	.L653
2764:src/keys.c    ****      --pos;
 6129              		.loc 1 2764 20 is_stmt 0 view .LVU1834
 6130 00ca 4DB1     		cbz	r5, .L647
 6131              	.LVL513:
 6132              	.L725:
2764:src/keys.c    ****      --pos;
ARM GAS  /tmp/cc6xzGMw.s 			page 193


 6133              		.loc 1 2764 20 view .LVU1835
 6134 00cc 2846     		mov	r0, r5
 6135 00ce FFF7FEFF 		bl	current_catalogue
 6136              	.LVL514:
2765:src/keys.c    ****    State.catpos = pos;
 6137              		.loc 1 2765 6 is_stmt 1 view .LVU1836
2764:src/keys.c    ****      --pos;
 6138              		.loc 1 2764 10 view .LVU1837
 6139              	.LBB596:
 6140              	.LBI596:
2611:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 6141              		.loc 1 2611 12 view .LVU1838
 6142              	.LBB597:
2612:src/keys.c    **** }
 6143              		.loc 1 2612 2 view .LVU1839
2612:src/keys.c    **** }
 6144              		.loc 1 2612 33 is_stmt 0 view .LVU1840
 6145 00d2 00F0F000 		and	r0, r0, #240
 6146              	.LBE597:
 6147              	.LBE596:
2764:src/keys.c    ****      --pos;
 6148              		.loc 1 2764 27 view .LVU1841
 6149 00d6 F028     		cmp	r0, #240
 6150 00d8 40F0AD80 		bne	.L653
2764:src/keys.c    ****      --pos;
 6151              		.loc 1 2764 20 view .LVU1842
 6152 00dc 013D     		subs	r5, r5, #1
 6153              	.LVL515:
2764:src/keys.c    ****      --pos;
 6154              		.loc 1 2764 20 view .LVU1843
 6155 00de F5D1     		bne	.L725
 6156              	.LVL516:
 6157              	.L647:
2766:src/keys.c    ****    return STATE_UNFINISHED;
 6158              		.loc 1 2766 4 is_stmt 1 view .LVU1844
2766:src/keys.c    ****    return STATE_UNFINISHED;
 6159              		.loc 1 2766 17 is_stmt 0 view .LVU1845
 6160 00e0 B4F8DC37 		ldrh	r3, [r4, #2012]
 6161 00e4 65F34B13 		bfi	r3, r5, #5, #7
 6162 00e8 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2767:src/keys.c    ****  }
 6163              		.loc 1 2767 4 is_stmt 1 view .LVU1846
2767:src/keys.c    ****  }
 6164              		.loc 1 2767 11 is_stmt 0 view .LVU1847
 6165 00ec 3320     		movs	r0, #51
 6166              	.L738:
2768:src/keys.c    **** 
 6167              		.loc 1 2768 2 view .LVU1848
 6168 00ee 05B0     		add	sp, sp, #20
 6169              		.cfi_remember_state
 6170              		.cfi_def_cfa_offset 36
 6171              		@ sp needed
 6172 00f0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6173              	.LVL517:
 6174              	.L727:
 6175              		.cfi_restore_state
2625:src/keys.c    **** #ifdef DM42
ARM GAS  /tmp/cc6xzGMw.s 			page 194


 6176              		.loc 1 2625 6 is_stmt 1 view .LVU1849
 6177 00f4 431F     		subs	r3, r0, #5
 6178 00f6 1F2B     		cmp	r3, #31
 6179 00f8 2FD8     		bhi	.L630
 6180 00fa DFE803F0 		tbb	[pc, r3]
 6181              	.LVL518:
 6182              	.L632:
 6183 00fe 35       		.byte	(.L636-.L632)/2
 6184 00ff 2E       		.byte	(.L630-.L632)/2
 6185 0100 2E       		.byte	(.L630-.L632)/2
 6186 0101 2E       		.byte	(.L630-.L632)/2
 6187 0102 2E       		.byte	(.L630-.L632)/2
 6188 0103 2E       		.byte	(.L630-.L632)/2
 6189 0104 2E       		.byte	(.L630-.L632)/2
 6190 0105 35       		.byte	(.L636-.L632)/2
 6191 0106 2E       		.byte	(.L630-.L632)/2
 6192 0107 2E       		.byte	(.L630-.L632)/2
 6193 0108 2E       		.byte	(.L630-.L632)/2
 6194 0109 20       		.byte	(.L635-.L632)/2
 6195 010a 2E       		.byte	(.L630-.L632)/2
 6196 010b 64       		.byte	(.L634-.L632)/2
 6197 010c 2E       		.byte	(.L630-.L632)/2
 6198 010d 2E       		.byte	(.L630-.L632)/2
 6199 010e 2E       		.byte	(.L630-.L632)/2
 6200 010f 2E       		.byte	(.L630-.L632)/2
 6201 0110 2E       		.byte	(.L630-.L632)/2
 6202 0111 6B       		.byte	(.L633-.L632)/2
 6203 0112 2E       		.byte	(.L630-.L632)/2
 6204 0113 2E       		.byte	(.L630-.L632)/2
 6205 0114 2E       		.byte	(.L630-.L632)/2
 6206 0115 2E       		.byte	(.L630-.L632)/2
 6207 0116 2E       		.byte	(.L630-.L632)/2
 6208 0117 2E       		.byte	(.L630-.L632)/2
 6209 0118 2E       		.byte	(.L630-.L632)/2
 6210 0119 2E       		.byte	(.L630-.L632)/2
 6211 011a 2E       		.byte	(.L630-.L632)/2
 6212 011b 2E       		.byte	(.L630-.L632)/2
 6213 011c 2E       		.byte	(.L630-.L632)/2
 6214 011d 27       		.byte	(.L631-.L632)/2
 6215              		.p2align 1
 6216              	.L737:
2714:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6217              		.loc 1 2714 42 is_stmt 0 discriminator 1 view .LVU1850
 6218 011e 734A     		ldr	r2, .L742+16
 6219              	.LVL519:
2714:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6220              		.loc 1 2714 42 discriminator 1 view .LVU1851
 6221 0120 7B69     		ldr	r3, [r7, #20]
2714:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6222              		.loc 1 2714 24 discriminator 1 view .LVU1852
 6223 0122 1A42     		tst	r2, r3
 6224 0124 75D0     		beq	.L661
2716:src/keys.c    ****        return STATE_UNFINISHED;
 6225              		.loc 1 2716 8 is_stmt 1 view .LVU1853
2716:src/keys.c    ****        return STATE_UNFINISHED;
 6226              		.loc 1 2716 38 is_stmt 0 view .LVU1854
 6227 0126 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  /tmp/cc6xzGMw.s 			page 195


 6228 0128 C3F30012 		ubfx	r2, r3, #4, #1
2716:src/keys.c    ****        return STATE_UNFINISHED;
 6229              		.loc 1 2716 30 view .LVU1855
 6230 012c C2F10102 		rsb	r2, r2, #1
2716:src/keys.c    ****        return STATE_UNFINISHED;
 6231              		.loc 1 2716 26 view .LVU1856
 6232 0130 62F30413 		bfi	r3, r2, #4, #1
 6233 0134 BB75     		strb	r3, [r7, #22]
 6234              	.LVL520:
 6235              	.L726:
2717:src/keys.c    ****      }
 6236              		.loc 1 2717 8 is_stmt 1 view .LVU1857
2717:src/keys.c    ****      }
 6237              		.loc 1 2717 15 is_stmt 0 view .LVU1858
 6238 0136 3320     		movs	r0, #51
 6239              	.L628:
2768:src/keys.c    **** 
 6240              		.loc 1 2768 2 view .LVU1859
 6241 0138 05B0     		add	sp, sp, #20
 6242              		.cfi_remember_state
 6243              		.cfi_def_cfa_offset 36
 6244              		@ sp needed
 6245 013a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6246              	.LVL521:
 6247              	.L635:
 6248              		.cfi_restore_state
2654:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6249              		.loc 1 2654 8 is_stmt 1 view .LVU1860
2654:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6250              		.loc 1 2654 11 is_stmt 0 view .LVU1861
 6251 013e 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 6252 0140 23B1     		cbz	r3, .L631
2654:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6253              		.loc 1 2654 33 discriminator 1 view .LVU1862
 6254 0142 FFF7FEFF 		bl	keyticks
 6255              	.LVL522:
2654:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6256              		.loc 1 2654 30 discriminator 1 view .LVU1863
 6257 0146 1D28     		cmp	r0, #29
 6258 0148 40F39580 		ble	.L732
 6259              	.L631:
2664:src/keys.c    ****        return STATE_UNFINISHED;
 6260              		.loc 1 2664 8 is_stmt 1 view .LVU1864
 6261 014c 0020     		movs	r0, #0
 6262 014e FFF7FEFF 		bl	init_cat
 6263              	.LVL523:
2665:src/keys.c    **** 
 6264              		.loc 1 2665 8 view .LVU1865
2665:src/keys.c    **** 
 6265              		.loc 1 2665 15 is_stmt 0 view .LVU1866
 6266 0152 3320     		movs	r0, #51
2768:src/keys.c    **** 
 6267              		.loc 1 2768 2 view .LVU1867
 6268 0154 05B0     		add	sp, sp, #20
 6269              		.cfi_remember_state
 6270              		.cfi_def_cfa_offset 36
 6271              		@ sp needed
ARM GAS  /tmp/cc6xzGMw.s 			page 196


 6272 0156 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6273              	.LVL524:
 6274              	.L630:
 6275              		.cfi_restore_state
 6276              	.LBB598:
 6277              	.LBI573:
 435:src/keys.c    **** {
 6278              		.loc 1 435 12 is_stmt 1 discriminator 4 view .LVU1868
 6279              	.LBB579:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6280              		.loc 1 437 2 discriminator 4 view .LVU1869
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6281              		.loc 1 485 2 discriminator 4 view .LVU1870
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6282              		.loc 1 485 6 is_stmt 0 discriminator 4 view .LVU1871
 6283 015a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6284              		.loc 1 485 5 discriminator 4 view .LVU1872
 6285 015c 13F0100F 		tst	r3, #16
 6286 0160 14BF     		ite	ne
 6287 0162 0421     		movne	r1, #4
 6288              	.LVL525:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6289              		.loc 1 485 5 discriminator 4 view .LVU1873
 6290 0164 0021     		moveq	r1, #0
 6291 0166 65E7     		b	.L664
 6292              	.LVL526:
 6293              	.L636:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6294              		.loc 1 485 5 discriminator 4 view .LVU1874
 6295              	.LBE579:
 6296              	.LBE598:
2632:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6297              		.loc 1 2632 8 is_stmt 1 view .LVU1875
2632:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6298              		.loc 1 2632 11 is_stmt 0 view .LVU1876
 6299 0168 4545     		cmp	r5, r8
 6300 016a EFDA     		bge	.L631
 6301 016c 2846     		mov	r0, r5
 6302              	.LVL527:
2632:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6303              		.loc 1 2632 24 discriminator 1 view .LVU1877
 6304 016e 002E     		cmp	r6, #0
 6305 0170 00F08D80 		beq	.L733
 6306              	.LVL528:
 6307              	.LBB599:
 6308              	.LBI599:
2611:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 6309              		.loc 1 2611 12 is_stmt 1 view .LVU1878
 6310              	.LBB600:
2612:src/keys.c    **** }
 6311              		.loc 1 2612 2 view .LVU1879
2612:src/keys.c    **** }
 6312              		.loc 1 2612 10 is_stmt 0 view .LVU1880
 6313 0174 FFF7FEFF 		bl	current_catalogue
 6314              	.LVL529:
2612:src/keys.c    **** }
ARM GAS  /tmp/cc6xzGMw.s 			page 197


 6315              		.loc 1 2612 33 view .LVU1881
 6316 0178 00F0F003 		and	r3, r0, #240
 6317              	.LBE600:
 6318              	.LBE599:
2632:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6319              		.loc 1 2632 27 view .LVU1882
 6320 017c F02B     		cmp	r3, #240
 6321              	.LBB602:
 6322              	.LBB601:
2612:src/keys.c    **** }
 6323              		.loc 1 2612 10 view .LVU1883
 6324 017e 0446     		mov	r4, r0
 6325              	.LBE601:
 6326              	.LBE602:
2632:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6327              		.loc 1 2632 27 view .LVU1884
 6328 0180 E4D0     		beq	.L631
 6329              	.L639:
 6330              	.LBB603:
2633:src/keys.c    **** 
 6331              		.loc 1 2633 3 is_stmt 1 view .LVU1885
2635:src/keys.c    **** 
 6332              		.loc 1 2635 3 view .LVU1886
 6333 0182 0020     		movs	r0, #0
 6334 0184 FFF7FEFF 		bl	init_cat
 6335              	.LVL530:
2637:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 6336              		.loc 1 2637 3 view .LVU1887
2637:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 6337              		.loc 1 2637 6 is_stmt 0 view .LVU1888
 6338 0188 14F47043 		ands	r3, r4, #61440
 6339 018c 00F08C80 		beq	.L640
2637:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 6340              		.loc 1 2637 7 discriminator 1 view .LVU1889
 6341 0190 B3F5704F 		cmp	r3, #61440
 6342 0194 00F08880 		beq	.L640
 6343              	.LBB604:
2638:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 6344              		.loc 1 2638 5 is_stmt 1 view .LVU1890
2638:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 6345              		.loc 1 2638 31 is_stmt 0 view .LVU1891
 6346 0198 C4F30723 		ubfx	r3, r4, #8, #8
 6347 019c A3F12005 		sub	r5, r3, #32
 6348              	.LVL531:
2638:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 6349              		.loc 1 2638 31 view .LVU1892
 6350 01a0 EDB2     		uxtb	r5, r5
 6351              	.LVL532:
2639:src/keys.c    **** 	     return op;
 6352              		.loc 1 2639 5 is_stmt 1 view .LVU1893
2639:src/keys.c    **** 	     return op;
 6353              		.loc 1 2639 8 is_stmt 0 view .LVU1894
 6354 01a2 012D     		cmp	r5, #1
 6355 01a4 40F28980 		bls	.L641
2639:src/keys.c    **** 	     return op;
 6356              		.loc 1 2639 56 discriminator 1 view .LVU1895
 6357 01a8 6C2D     		cmp	r5, #108
ARM GAS  /tmp/cc6xzGMw.s 			page 198


 6358 01aa 00F08680 		beq	.L641
2639:src/keys.c    **** 	     return op;
 6359              		.loc 1 2639 77 discriminator 2 view .LVU1896
 6360 01ae 242D     		cmp	r5, #36
 6361 01b0 00F08380 		beq	.L641
2641:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 6362              		.loc 1 2641 5 is_stmt 1 view .LVU1897
2641:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 6363              		.loc 1 2641 30 is_stmt 0 view .LVU1898
 6364 01b4 A5F12D02 		sub	r2, r5, #45
2641:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 6365              		.loc 1 2641 8 view .LVU1899
 6366 01b8 062A     		cmp	r2, #6
 6367 01ba 00F29F80 		bhi	.L644
2642:src/keys.c    **** 	   else
 6368              		.loc 1 2642 7 is_stmt 1 view .LVU1900
2642:src/keys.c    **** 	   else
 6369              		.loc 1 2642 28 is_stmt 0 view .LVU1901
 6370 01be 4D3B     		subs	r3, r3, #77
2642:src/keys.c    **** 	   else
 6371              		.loc 1 2642 19 view .LVU1902
 6372 01c0 FB73     		strb	r3, [r7, #15]
 6373              	.LBE604:
 6374              	.LBE603:
2651:src/keys.c    **** 
 6375              		.loc 1 2651 15 view .LVU1903
 6376 01c2 3320     		movs	r0, #51
 6377              	.LBB614:
 6378              	.LBB607:
 6379 01c4 B8E7     		b	.L628
 6380              	.LVL533:
 6381              	.L634:
2651:src/keys.c    **** 
 6382              		.loc 1 2651 15 view .LVU1904
 6383              	.LBE607:
 6384              	.LBE614:
2668:src/keys.c    ****        if (pos == 0)
 6385              		.loc 1 2668 8 is_stmt 1 view .LVU1905
2668:src/keys.c    ****        if (pos == 0)
 6386              		.loc 1 2668 22 is_stmt 0 view .LVU1906
 6387 01c6 0023     		movs	r3, #0
 6388 01c8 3B77     		strb	r3, [r7, #28]
2669:src/keys.c    **** 	 goto set_max;
 6389              		.loc 1 2669 8 is_stmt 1 view .LVU1907
2669:src/keys.c    **** 	 goto set_max;
 6390              		.loc 1 2669 11 is_stmt 0 view .LVU1908
 6391 01ca 002D     		cmp	r5, #0
 6392 01cc 5DD1     		bne	.L734
 6393              	.LVL534:
 6394              	.L648:
2762:src/keys.c    ****  set_pos:
 6395              		.loc 1 2762 4 is_stmt 1 view .LVU1909
2762:src/keys.c    ****  set_pos:
 6396              		.loc 1 2762 8 is_stmt 0 view .LVU1910
 6397 01ce 08F1FF35 		add	r5, r8, #-1
 6398              	.LVL535:
2762:src/keys.c    ****  set_pos:
ARM GAS  /tmp/cc6xzGMw.s 			page 199


 6399              		.loc 1 2762 8 view .LVU1911
 6400 01d2 77E7     		b	.L649
 6401              	.LVL536:
 6402              	.L633:
2676:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 6403              		.loc 1 2676 8 is_stmt 1 view .LVU1912
2676:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 6404              		.loc 1 2676 22 is_stmt 0 view .LVU1913
 6405 01d4 0023     		movs	r3, #0
 6406 01d6 3B77     		strb	r3, [r7, #28]
2677:src/keys.c    ****        if (pos >= ctmax)
 6407              		.loc 1 2677 8 is_stmt 1 view .LVU1914
2677:src/keys.c    ****        if (pos >= ctmax)
 6408              		.loc 1 2677 14 is_stmt 0 view .LVU1915
 6409 01d8 06E0     		b	.L652
 6410              	.LVL537:
 6411              	.L735:
2677:src/keys.c    ****        if (pos >= ctmax)
 6412              		.loc 1 2677 29 discriminator 1 view .LVU1916
 6413 01da 66B3     		cbz	r6, .L653
 6414              	.LBB615:
 6415              	.LBB616:
2612:src/keys.c    **** }
 6416              		.loc 1 2612 10 view .LVU1917
 6417 01dc FFF7FEFF 		bl	current_catalogue
 6418              	.LVL538:
2612:src/keys.c    **** }
 6419              		.loc 1 2612 33 view .LVU1918
 6420 01e0 00F0F000 		and	r0, r0, #240
 6421              	.LBE616:
 6422              	.LBE615:
2677:src/keys.c    ****        if (pos >= ctmax)
 6423              		.loc 1 2677 41 view .LVU1919
 6424 01e4 F028     		cmp	r0, #240
 6425 01e6 26D1     		bne	.L653
 6426              	.L652:
2677:src/keys.c    ****        if (pos >= ctmax)
 6427              		.loc 1 2677 65 is_stmt 1 discriminator 3 view .LVU1920
2677:src/keys.c    ****        if (pos >= ctmax)
 6428              		.loc 1 2677 14 discriminator 3 view .LVU1921
 6429 01e8 0135     		adds	r5, r5, #1
 6430              	.LVL539:
 6431              	.LBB619:
 6432              	.LBI615:
2611:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 6433              		.loc 1 2611 12 discriminator 3 view .LVU1922
 6434              	.LBB617:
2612:src/keys.c    **** }
 6435              		.loc 1 2612 2 discriminator 3 view .LVU1923
 6436              	.LBE617:
 6437              	.LBE619:
2677:src/keys.c    ****        if (pos >= ctmax)
 6438              		.loc 1 2677 14 is_stmt 0 discriminator 3 view .LVU1924
 6439 01ea A845     		cmp	r8, r5
 6440              	.LBB620:
 6441              	.LBB618:
2612:src/keys.c    **** }
ARM GAS  /tmp/cc6xzGMw.s 			page 200


 6442              		.loc 1 2612 10 discriminator 3 view .LVU1925
 6443 01ec 2846     		mov	r0, r5
 6444              	.LBE618:
 6445              	.LBE620:
2677:src/keys.c    ****        if (pos >= ctmax)
 6446              		.loc 1 2677 14 discriminator 3 view .LVU1926
 6447 01ee F4DC     		bgt	.L735
 6448              	.LVL540:
2764:src/keys.c    ****      --pos;
 6449              		.loc 1 2764 10 is_stmt 1 view .LVU1927
2679:src/keys.c    ****        goto set_pos;
 6450              		.loc 1 2679 7 is_stmt 0 view .LVU1928
 6451 01f0 3546     		mov	r5, r6
 6452              	.LVL541:
2764:src/keys.c    ****      --pos;
 6453              		.loc 1 2764 10 view .LVU1929
 6454 01f2 06B3     		cbz	r6, .L653
 6455              	.LVL542:
2764:src/keys.c    ****      --pos;
 6456              		.loc 1 2764 10 view .LVU1930
 6457 01f4 0025     		movs	r5, #0
 6458              	.LVL543:
2764:src/keys.c    ****      --pos;
 6459              		.loc 1 2764 10 view .LVU1931
 6460 01f6 73E7     		b	.L647
 6461              	.LVL544:
 6462              	.L678:
2737:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6463              		.loc 1 2737 8 view .LVU1932
 6464 01f8 2B46     		mov	r3, r5
2738:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6465              		.loc 1 2738 6 is_stmt 1 view .LVU1933
2738:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6466              		.loc 1 2738 31 is_stmt 0 view .LVU1934
 6467 01fa 3B44     		add	r3, r3, r7
2738:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6468              		.loc 1 2738 27 view .LVU1935
 6469 01fc 0135     		adds	r5, r5, #1
 6470 01fe EDB2     		uxtb	r5, r5
 6471 0200 3D77     		strb	r5, [r7, #28]
2738:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6472              		.loc 1 2738 31 view .LVU1936
 6473 0202 83F82040 		strb	r4, [r3, #32]
 6474 0206 30E7     		b	.L646
 6475              	.LVL545:
 6476              	.L728:
2686:src/keys.c    ****        /*
 6477              		.loc 1 2686 6 is_stmt 1 view .LVU1937
2686:src/keys.c    ****        /*
 6478              		.loc 1 2686 9 is_stmt 0 view .LVU1938
 6479 0208 BAF1120F 		cmp	r10, #18
 6480 020c 21D0     		beq	.L736
 6481              	.L655:
2714:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6482              		.loc 1 2714 11 is_stmt 1 view .LVU1939
2714:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6483              		.loc 1 2714 14 is_stmt 0 view .LVU1940
ARM GAS  /tmp/cc6xzGMw.s 			page 201


 6484 020e 2428     		cmp	r0, #36
 6485 0210 85D0     		beq	.L737
 6486              	.LVL546:
 6487              	.L661:
2729:src/keys.c    ****    reset_shift();
 6488              		.loc 1 2729 4 is_stmt 1 view .LVU1941
 6489              	.LBB621:
 435:src/keys.c    **** {
 6490              		.loc 1 435 12 view .LVU1942
 6491              	.LBB580:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6492              		.loc 1 437 2 view .LVU1943
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6493              		.loc 1 485 2 view .LVU1944
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6494              		.loc 1 485 5 is_stmt 0 view .LVU1945
 6495 0212 0121     		movs	r1, #1
 6496              	.LVL547:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6497              		.loc 1 485 5 view .LVU1946
 6498 0214 0EE7     		b	.L664
 6499              	.LVL548:
 6500              	.L668:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6501              		.loc 1 485 5 view .LVU1947
 6502 0216 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 6503              	.LVL549:
 6504              	.L670:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6505              		.loc 1 485 5 view .LVU1948
 6506              	.LBE580:
 6507              	.LBE621:
 6508              	.LBB622:
2758:src/keys.c    ****        goto set_pos;
 6509              		.loc 1 2758 6 is_stmt 1 view .LVU1949
2758:src/keys.c    ****        goto set_pos;
 6510              		.loc 1 2758 9 is_stmt 0 view .LVU1950
 6511 021a 002B     		cmp	r3, #0
 6512 021c 3FF450AF 		beq	.L669
 6513              	.LBE622:
2743:src/keys.c    ****      char buf[16];
 6514              		.loc 1 2743 31 is_stmt 1 view .LVU1951
 6515 0220 0135     		adds	r5, r5, #1
 6516              	.LVL550:
2743:src/keys.c    ****      char buf[16];
 6517              		.loc 1 2743 18 view .LVU1952
2743:src/keys.c    ****      char buf[16];
 6518              		.loc 1 2743 4 is_stmt 0 view .LVU1953
 6519 0222 A845     		cmp	r8, r5
 6520 0224 7FF429AF 		bne	.L666
 6521              	.LVL551:
 6522              	.L724:
2743:src/keys.c    ****      char buf[16];
 6523              		.loc 1 2743 4 view .LVU1954
 6524 0228 D9F80040 		ldr	r4, [r9]
 6525 022c CFE7     		b	.L648
 6526              	.LVL552:
ARM GAS  /tmp/cc6xzGMw.s 			page 202


 6527              	.L730:
2743:src/keys.c    ****      char buf[16];
 6528              		.loc 1 2743 4 view .LVU1955
 6529 022e 3A44     		add	r2, r2, r7
 6530              	.LVL553:
2743:src/keys.c    ****      char buf[16];
 6531              		.loc 1 2743 4 view .LVU1956
 6532 0230 92F82030 		ldrb	r3, [r2, #32]	@ zero_extendqisi2
 6533              	.LVL554:
2743:src/keys.c    ****      char buf[16];
 6534              		.loc 1 2743 4 view .LVU1957
 6535 0234 F1E7     		b	.L670
 6536              	.LVL555:
 6537              	.L653:
2766:src/keys.c    ****    return STATE_UNFINISHED;
 6538              		.loc 1 2766 17 view .LVU1958
 6539 0236 B4F8DC37 		ldrh	r3, [r4, #2012]
 6540 023a 05F07F05 		and	r5, r5, #127
 6541              	.LVL556:
2766:src/keys.c    ****    return STATE_UNFINISHED;
 6542              		.loc 1 2766 4 is_stmt 1 view .LVU1959
2766:src/keys.c    ****    return STATE_UNFINISHED;
 6543              		.loc 1 2766 17 is_stmt 0 view .LVU1960
 6544 023e 65F34B13 		bfi	r3, r5, #5, #7
 6545 0242 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2767:src/keys.c    ****  }
 6546              		.loc 1 2767 4 is_stmt 1 view .LVU1961
2767:src/keys.c    ****  }
 6547              		.loc 1 2767 11 is_stmt 0 view .LVU1962
 6548 0246 3320     		movs	r0, #51
 6549 0248 51E7     		b	.L738
 6550              	.LVL557:
 6551              	.L729:
2720:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 6552              		.loc 1 2720 6 is_stmt 1 view .LVU1963
2720:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 6553              		.loc 1 2720 9 is_stmt 0 view .LVU1964
 6554 024a 1028     		cmp	r0, #16
 6555 024c 23D0     		beq	.L739
 6556              	.L663:
2729:src/keys.c    ****    reset_shift();
 6557              		.loc 1 2729 4 is_stmt 1 view .LVU1965
 6558              	.LVL558:
 6559              	.LBB623:
 435:src/keys.c    **** {
 6560              		.loc 1 435 12 view .LVU1966
 6561              	.LBB581:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6562              		.loc 1 437 2 view .LVU1967
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6563              		.loc 1 485 2 view .LVU1968
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6564              		.loc 1 485 5 is_stmt 0 view .LVU1969
 6565 024e 0521     		movs	r1, #5
 6566              	.LVL559:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6567              		.loc 1 485 5 view .LVU1970
ARM GAS  /tmp/cc6xzGMw.s 			page 203


 6568 0250 F0E6     		b	.L664
 6569              	.LVL560:
 6570              	.L736:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6571              		.loc 1 485 5 view .LVU1971
 6572              	.LBE581:
 6573              	.LBE623:
2686:src/keys.c    ****        /*
 6574              		.loc 1 2686 32 discriminator 1 view .LVU1972
 6575 0252 0128     		cmp	r0, #1
 6576 0254 DBD1     		bne	.L655
 6577              	.LBB624:
2695:src/keys.c    **** 	 OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
 6578              		.loc 1 2695 8 is_stmt 1 view .LVU1973
2703:src/keys.c    ****        int i;
 6579              		.loc 1 2703 8 view .LVU1974
2703:src/keys.c    ****        int i;
 6580              		.loc 1 2703 26 is_stmt 0 view .LVU1975
 6581 0256 2846     		mov	r0, r5
 6582              	.LVL561:
2703:src/keys.c    ****        int i;
 6583              		.loc 1 2703 26 view .LVU1976
 6584 0258 FFF7FEFF 		bl	current_catalogue
 6585              	.LVL562:
2703:src/keys.c    ****        int i;
 6586              		.loc 1 2703 26 view .LVU1977
 6587 025c 0446     		mov	r4, r0
 6588              	.LVL563:
2704:src/keys.c    **** 
 6589              		.loc 1 2704 8 is_stmt 1 view .LVU1978
2706:src/keys.c    ****        if (isRARG(op))
 6590              		.loc 1 2706 8 view .LVU1979
 6591 025e 0020     		movs	r0, #0
 6592              	.LVL564:
2706:src/keys.c    ****        if (isRARG(op))
 6593              		.loc 1 2706 8 is_stmt 0 view .LVU1980
 6594 0260 FFF7FEFF 		bl	init_cat
 6595              	.LVL565:
2707:src/keys.c    **** 	 return op ^ 1;
 6596              		.loc 1 2707 8 is_stmt 1 view .LVU1981
2707:src/keys.c    **** 	 return op ^ 1;
 6597              		.loc 1 2707 11 is_stmt 0 view .LVU1982
 6598 0264 14F47043 		ands	r3, r4, #61440
 6599 0268 29D0     		beq	.L656
2707:src/keys.c    **** 	 return op ^ 1;
 6600              		.loc 1 2707 12 discriminator 1 view .LVU1983
 6601 026a B3F5704F 		cmp	r3, #61440
 6602 026e 26D0     		beq	.L656
2708:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 6603              		.loc 1 2708 3 is_stmt 1 view .LVU1984
2708:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 6604              		.loc 1 2708 13 is_stmt 0 view .LVU1985
 6605 0270 84F00100 		eor	r0, r4, #1
 6606 0274 60E7     		b	.L628
 6607              	.LVL566:
 6608              	.L732:
2708:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
ARM GAS  /tmp/cc6xzGMw.s 			page 204


 6609              		.loc 1 2708 13 view .LVU1986
 6610              	.LBE624:
2655:src/keys.c    **** 	   goto search;
 6611              		.loc 1 2655 3 is_stmt 1 view .LVU1987
2655:src/keys.c    **** 	   goto search;
 6612              		.loc 1 2655 7 is_stmt 0 view .LVU1988
 6613 0276 3D7F     		ldrb	r5, [r7, #28]	@ zero_extendqisi2
 6614              	.LVL567:
2655:src/keys.c    **** 	   goto search;
 6615              		.loc 1 2655 7 view .LVU1989
 6616 0278 013D     		subs	r5, r5, #1
 6617 027a EDB2     		uxtb	r5, r5
2655:src/keys.c    **** 	   goto search;
 6618              		.loc 1 2655 6 view .LVU1990
 6619 027c 3D77     		strb	r5, [r7, #28]
 6620 027e 002D     		cmp	r5, #0
 6621 0280 7FF4F3AE 		bne	.L646
 6622 0284 D9F80040 		ldr	r4, [r9]
 6623 0288 2AE7     		b	.L647
 6624              	.LVL568:
 6625              	.L734:
2672:src/keys.c    ****        goto set_pos;
 6626              		.loc 1 2672 3 is_stmt 1 view .LVU1991
 6627 028a 013D     		subs	r5, r5, #1
 6628              	.LVL569:
2673:src/keys.c    **** 
 6629              		.loc 1 2673 8 view .LVU1992
 6630 028c 1AE7     		b	.L649
 6631              	.LVL570:
 6632              	.L733:
2673:src/keys.c    **** 
 6633              		.loc 1 2673 8 is_stmt 0 view .LVU1993
 6634 028e FFF7FEFF 		bl	current_catalogue
 6635              	.LVL571:
2673:src/keys.c    **** 
 6636              		.loc 1 2673 8 view .LVU1994
 6637 0292 0446     		mov	r4, r0
 6638 0294 75E7     		b	.L639
 6639              	.LVL572:
 6640              	.L739:
2720:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 6641              		.loc 1 2720 19 discriminator 1 view .LVU1995
 6642 0296 BAF1130F 		cmp	r10, #19
 6643 029a D8D1     		bne	.L663
2721:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
 6644              		.loc 1 2721 8 is_stmt 1 view .LVU1996
 6645 029c 0020     		movs	r0, #0
 6646              	.LVL573:
2721:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
 6647              		.loc 1 2721 8 is_stmt 0 view .LVU1997
 6648 029e FFF7FEFF 		bl	init_cat
 6649              	.LVL574:
2722:src/keys.c    ****      }
 6650              		.loc 1 2722 8 is_stmt 1 view .LVU1998
2722:src/keys.c    ****      }
 6651              		.loc 1 2722 15 is_stmt 0 view .LVU1999
 6652 02a2 40F23D10 		movw	r0, #317
ARM GAS  /tmp/cc6xzGMw.s 			page 205


 6653 02a6 47E7     		b	.L628
 6654              	.L640:
 6655              	.LBB625:
2647:src/keys.c    **** 	 }
 6656              		.loc 1 2647 5 is_stmt 1 view .LVU2000
 6657              	.LBB608:
 6658              	.LBB609:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 6659              		.loc 1 705 5 is_stmt 0 view .LVU2001
 6660 02a8 C4F30723 		ubfx	r3, r4, #8, #8
 6661 02ac 012B     		cmp	r3, #1
 6662              	.LBE609:
 6663              	.LBE608:
2647:src/keys.c    **** 	 }
 6664              		.loc 1 2647 12 view .LVU2002
 6665 02ae 2046     		mov	r0, r4
 6666              	.LVL575:
 6667              	.LBB611:
 6668              	.LBI608:
 704:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 6669              		.loc 1 704 12 is_stmt 1 view .LVU2003
 6670              	.LBB610:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 6671              		.loc 1 705 2 view .LVU2004
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 6672              		.loc 1 705 5 is_stmt 0 view .LVU2005
 6673 02b0 7FF442AF 		bne	.L628
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 6674              		.loc 1 705 5 view .LVU2006
 6675 02b4 FFF7FEFF 		bl	check_confirm.part.0
 6676              	.LVL576:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 6677              		.loc 1 705 5 view .LVU2007
 6678 02b8 3EE7     		b	.L628
 6679              	.LVL577:
 6680              	.L641:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 6681              		.loc 1 705 5 view .LVU2008
 6682              	.LBE610:
 6683              	.LBE611:
 6684              	.LBB612:
2640:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 6685              		.loc 1 2640 7 is_stmt 1 view .LVU2009
2640:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 6686              		.loc 1 2640 14 is_stmt 0 view .LVU2010
 6687 02ba 2046     		mov	r0, r4
 6688 02bc 3CE7     		b	.L628
 6689              	.LVL578:
 6690              	.L656:
2640:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 6691              		.loc 1 2640 14 view .LVU2011
 6692 02be 0C48     		ldr	r0, .L742+20
 6693              	.LBE612:
 6694              	.LBE625:
2618:src/keys.c    ****    int pos = State.catpos;
 6695              		.loc 1 2618 93 view .LVU2012
 6696 02c0 40F28522 		movw	r2, #645
ARM GAS  /tmp/cc6xzGMw.s 			page 206


 6697 02c4 0146     		mov	r1, r0
 6698 02c6 0023     		movs	r3, #0
 6699 02c8 01E0     		b	.L658
 6700              	.LVL579:
 6701              	.L741:
2618:src/keys.c    ****    int pos = State.catpos;
 6702              		.loc 1 2618 93 view .LVU2013
 6703 02ca 31F8022F 		ldrh	r2, [r1, #2]!
 6704              	.LVL580:
 6705              	.L658:
 6706              	.LBB626:
2710:src/keys.c    **** 	   return conv_mapping[i^1];
 6707              		.loc 1 2710 3 is_stmt 1 view .LVU2014
2709:src/keys.c    **** 	 if (op == conv_mapping[i])
 6708              		.loc 1 2709 72 view .LVU2015
2710:src/keys.c    **** 	   return conv_mapping[i^1];
 6709              		.loc 1 2710 6 is_stmt 0 view .LVU2016
 6710 02ce A242     		cmp	r2, r4
 6711 02d0 1ED0     		beq	.L740
2709:src/keys.c    **** 	 if (op == conv_mapping[i])
 6712              		.loc 1 2709 72 discriminator 2 view .LVU2017
 6713 02d2 0133     		adds	r3, r3, #1
 6714              	.LVL581:
2709:src/keys.c    **** 	 if (op == conv_mapping[i])
 6715              		.loc 1 2709 20 is_stmt 1 discriminator 2 view .LVU2018
2709:src/keys.c    **** 	 if (op == conv_mapping[i])
 6716              		.loc 1 2709 8 is_stmt 0 discriminator 2 view .LVU2019
 6717 02d4 0C2B     		cmp	r3, #12
 6718 02d6 F8D1     		bne	.L741
 6719 02d8 2DE7     		b	.L726
 6720              	.L743:
 6721 02da 00BF     		.align	2
 6722              	.L742:
 6723 02dc 00000000 		.word	StateWhileOn
 6724 02e0 00000000 		.word	.LANCHOR8
 6725 02e4 00000000 		.word	.LANCHOR6
 6726 02e8 00000000 		.word	.LANCHOR15
 6727 02ec 00080800 		.word	526336
 6728 02f0 00000000 		.word	.LANCHOR14
 6729 02f4 00000000 		.word	main_ram
 6730 02f8 1F000000 		.word	StateWhileOn+31
 6731              	.LVL582:
 6732              	.L644:
2709:src/keys.c    **** 	 if (op == conv_mapping[i])
 6733              		.loc 1 2709 8 discriminator 2 view .LVU2020
 6734              	.LBE626:
 6735              	.LBB627:
 6736              	.LBB613:
2644:src/keys.c    **** 	 }
 6737              		.loc 1 2644 7 is_stmt 1 view .LVU2021
 6738              	.LBB605:
 6739              	.LBI605:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 6740              		.loc 1 552 13 view .LVU2022
 6741              	.LBB606:
 553:src/keys.c    **** 		return;
 6742              		.loc 1 553 2 view .LVU2023
ARM GAS  /tmp/cc6xzGMw.s 			page 207


 553:src/keys.c    **** 		return;
 6743              		.loc 1 553 6 is_stmt 0 view .LVU2024
 6744 02fc FFF7FEFF 		bl	is_bad_cmdline
 6745              	.LVL583:
 553:src/keys.c    **** 		return;
 6746              		.loc 1 553 5 view .LVU2025
 6747 0300 0028     		cmp	r0, #0
 6748 0302 7FF418AF 		bne	.L726
 6749 0306 2846     		mov	r0, r5
 6750 0308 FFF7FEFF 		bl	init_arg.part.0
 6751              	.LVL584:
 6752              	.LBE606:
 6753              	.LBE605:
 6754              	.LBE613:
 6755              	.LBE627:
2651:src/keys.c    **** 
 6756              		.loc 1 2651 15 view .LVU2026
 6757 030c 3320     		movs	r0, #51
 6758 030e 13E7     		b	.L628
 6759              	.LVL585:
 6760              	.L740:
 6761              	.LBB628:
2711:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 6762              		.loc 1 2711 5 is_stmt 1 view .LVU2027
2711:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 6763              		.loc 1 2711 26 is_stmt 0 view .LVU2028
 6764 0310 83F00103 		eor	r3, r3, #1
 6765              	.LVL586:
2711:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 6766              		.loc 1 2711 24 view .LVU2029
 6767 0314 30F81300 		ldrh	r0, [r0, r3, lsl #1]
 6768 0318 0EE7     		b	.L628
 6769              	.LBE628:
 6770              		.cfi_endproc
 6771              	.LFE48:
 6773              		.section	.text.find_pos,"ax",%progbits
 6774              		.align	1
 6775              		.p2align 2,,3
 6776              		.global	find_pos
 6777              		.syntax unified
 6778              		.thumb
 6779              		.thumb_func
 6780              		.fpu fpv4-sp-d16
 6782              	find_pos:
 6783              	.LVL587:
 6784              	.LFB49:
2771:src/keys.c    **** 	int pos;
 6785              		.loc 1 2771 32 is_stmt 1 view -0
 6786              		.cfi_startproc
 6787              		@ args = 0, pretend = 0, frame = 16
 6788              		@ frame_needed = 0, uses_anonymous_args = 0
2772:src/keys.c    **** 	const int ctmax = current_catalogue_max();
 6789              		.loc 1 2772 2 view .LVU2031
2773:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 6790              		.loc 1 2773 2 view .LVU2032
 6791              	.LBB629:
 6792              	.LBI629:
ARM GAS  /tmp/cc6xzGMw.s 			page 208


2473:src/keys.c    **** 	// A quick table of catalogue sizes
 6793              		.loc 1 2473 5 view .LVU2033
 6794              	.LBB630:
2476:src/keys.c    **** 	{
 6795              		.loc 1 2476 2 view .LVU2034
2507:src/keys.c    **** #endif
 6796              		.loc 1 2507 2 view .LVU2035
 6797              	.LBE630:
 6798              	.LBE629:
2771:src/keys.c    **** 	int pos;
 6799              		.loc 1 2771 32 is_stmt 0 view .LVU2036
 6800 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 6801              		.cfi_def_cfa_offset 32
 6802              		.cfi_offset 4, -32
 6803              		.cfi_offset 5, -28
 6804              		.cfi_offset 6, -24
 6805              		.cfi_offset 7, -20
 6806              		.cfi_offset 8, -16
 6807              		.cfi_offset 9, -12
 6808              		.cfi_offset 10, -8
 6809              		.cfi_offset 14, -4
 6810              	.LBB632:
 6811              	.LBB631:
2507:src/keys.c    **** #endif
 6812              		.loc 1 2507 31 view .LVU2037
 6813 0004 1E4B     		ldr	r3, .L761
2507:src/keys.c    **** #endif
 6814              		.loc 1 2507 24 view .LVU2038
 6815 0006 1F4A     		ldr	r2, .L761+4
2507:src/keys.c    **** #endif
 6816              		.loc 1 2507 31 view .LVU2039
 6817 0008 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2507:src/keys.c    **** #endif
 6818              		.loc 1 2507 24 view .LVU2040
 6819 000a 12F803A0 		ldrb	r10, [r2, r3]	@ zero_extendqisi2
 6820              	.LVL588:
2507:src/keys.c    **** #endif
 6821              		.loc 1 2507 24 view .LVU2041
 6822              	.LBE631:
 6823              	.LBE632:
2774:src/keys.c    **** 		char buf[16];
 6824              		.loc 1 2774 2 is_stmt 1 view .LVU2042
2774:src/keys.c    **** 		char buf[16];
 6825              		.loc 1 2774 16 view .LVU2043
2771:src/keys.c    **** 	int pos;
 6826              		.loc 1 2771 32 is_stmt 0 view .LVU2044
 6827 000e 84B0     		sub	sp, sp, #16
 6828              		.cfi_def_cfa_offset 48
2774:src/keys.c    **** 		char buf[16];
 6829              		.loc 1 2774 2 view .LVU2045
 6830 0010 BAF1000F 		cmp	r10, #0
 6831 0014 32D0     		beq	.L751
 6832 0016 8146     		mov	r9, r0
2774:src/keys.c    **** 		char buf[16];
 6833              		.loc 1 2774 11 view .LVU2046
 6834 0018 4FF00008 		mov	r8, #0
 6835 001c C0F10107 		rsb	r7, r0, #1
ARM GAS  /tmp/cc6xzGMw.s 			page 209


 6836              	.LVL589:
 6837              	.L750:
 6838              	.LBB633:
2775:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
 6839              		.loc 1 2775 3 is_stmt 1 view .LVU2047
2776:src/keys.c    **** 		int i;
 6840              		.loc 1 2776 3 view .LVU2048
2776:src/keys.c    **** 		int i;
 6841              		.loc 1 2776 21 is_stmt 0 view .LVU2049
 6842 0020 4046     		mov	r0, r8
 6843 0022 FFF7FEFF 		bl	current_catalogue
 6844              	.LVL590:
 6845 0026 6946     		mov	r1, sp
 6846 0028 FFF7FEFF 		bl	catcmd
 6847              	.LVL591:
 6848 002c 0646     		mov	r6, r0
 6849              	.LVL592:
2777:src/keys.c    **** 
 6850              		.loc 1 2777 3 is_stmt 1 view .LVU2050
2779:src/keys.c    **** 			cmd++;
 6851              		.loc 1 2779 3 view .LVU2051
2780:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 6852              		.loc 1 2780 4 view .LVU2052
2779:src/keys.c    **** 			cmd++;
 6853              		.loc 1 2779 7 is_stmt 0 view .LVU2053
 6854 002e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 6855              	.LVL593:
2779:src/keys.c    **** 			cmd++;
 6856              		.loc 1 2779 6 view .LVU2054
 6857 0030 1428     		cmp	r0, #20
 6858 0032 04BF     		itt	eq
 6859 0034 7078     		ldrbeq	r0, [r6, #1]	@ zero_extendqisi2
2780:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 6860              		.loc 1 2780 7 view .LVU2055
 6861 0036 0136     		addeq	r6, r6, #1
 6862              	.LVL594:
2781:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6863              		.loc 1 2781 3 is_stmt 1 view .LVU2056
2781:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6864              		.loc 1 2781 13 view .LVU2057
2781:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6865              		.loc 1 2781 3 is_stmt 0 view .LVU2058
 6866 0038 A8B1     		cbz	r0, .L752
 6867 003a 09F1FF33 		add	r3, r9, #-1
 6868 003e 04E0     		b	.L749
 6869              	.LVL595:
 6870              	.L760:
 6871              	.LBB634:
2786:src/keys.c    **** 				break;
 6872              		.loc 1 2786 12 view .LVU2059
 6873 0040 12DB     		blt	.L747
 6874              	.LBE634:
2781:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6875              		.loc 1 2781 16 discriminator 2 view .LVU2060
 6876 0042 16F8010F 		ldrb	r0, [r6, #1]!	@ zero_extendqisi2
 6877              	.LVL596:
2781:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
ARM GAS  /tmp/cc6xzGMw.s 			page 210


 6878              		.loc 1 2781 16 discriminator 2 view .LVU2061
 6879 0046 3C44     		add	r4, r4, r7
2781:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6880              		.loc 1 2781 3 discriminator 2 view .LVU2062
 6881 0048 B0B1     		cbz	r0, .L759
 6882              	.LVL597:
 6883              	.L749:
 6884              	.LBB635:
2782:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 6885              		.loc 1 2782 4 is_stmt 1 view .LVU2063
 6886 004a 5C1C     		adds	r4, r3, #1
2782:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 6887              		.loc 1 2782 18 is_stmt 0 view .LVU2064
 6888 004c FFF7FEFF 		bl	remap_chars
 6889              	.LVL598:
 6890 0050 0546     		mov	r5, r0
2783:src/keys.c    **** 			if (c > cl)
 6891              		.loc 1 2783 19 view .LVU2065
 6892 0052 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 6893              	.LVL599:
2783:src/keys.c    **** 			if (c > cl)
 6894              		.loc 1 2783 4 is_stmt 1 view .LVU2066
2783:src/keys.c    **** 			if (c > cl)
 6895              		.loc 1 2783 19 is_stmt 0 view .LVU2067
 6896 0054 FFF7FEFF 		bl	remap_chars
 6897              	.LVL600:
2786:src/keys.c    **** 				break;
 6898              		.loc 1 2786 9 is_stmt 1 view .LVU2068
 6899              	.LBE635:
2781:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6900              		.loc 1 2781 29 view .LVU2069
2781:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6901              		.loc 1 2781 13 view .LVU2070
 6902              	.LBB636:
2784:src/keys.c    **** 				return pos;
 6903              		.loc 1 2784 4 view .LVU2071
2784:src/keys.c    **** 				return pos;
 6904              		.loc 1 2784 7 is_stmt 0 view .LVU2072
 6905 0058 8542     		cmp	r5, r0
 6906 005a 2346     		mov	r3, r4
 6907 005c F0DD     		ble	.L760
 6908              	.LVL601:
 6909              	.L744:
2784:src/keys.c    **** 				return pos;
 6910              		.loc 1 2784 7 view .LVU2073
 6911              	.LBE636:
 6912              	.LBE633:
2793:src/keys.c    **** 
 6913              		.loc 1 2793 1 view .LVU2074
 6914 005e 4046     		mov	r0, r8
 6915 0060 04B0     		add	sp, sp, #16
 6916              		.cfi_remember_state
 6917              		.cfi_def_cfa_offset 32
 6918              		@ sp needed
 6919 0062 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 6920              	.LVL602:
 6921              	.L752:
ARM GAS  /tmp/cc6xzGMw.s 			page 211


 6922              		.cfi_restore_state
 6923              	.LBB637:
2781:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6924              		.loc 1 2781 3 view .LVU2075
 6925 0066 4C46     		mov	r4, r9
 6926              	.LVL603:
 6927              	.L747:
2789:src/keys.c    **** 			return pos;
 6928              		.loc 1 2789 3 is_stmt 1 view .LVU2076
2789:src/keys.c    **** 			return pos;
 6929              		.loc 1 2789 6 is_stmt 0 view .LVU2077
 6930 0068 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 6931 006a 002B     		cmp	r3, #0
 6932 006c F7D0     		beq	.L744
 6933              	.LBE637:
2774:src/keys.c    **** 		char buf[16];
 6934              		.loc 1 2774 29 is_stmt 1 view .LVU2078
 6935 006e 08F10108 		add	r8, r8, #1
 6936              	.LVL604:
2774:src/keys.c    **** 		char buf[16];
 6937              		.loc 1 2774 16 view .LVU2079
2774:src/keys.c    **** 		char buf[16];
 6938              		.loc 1 2774 2 is_stmt 0 view .LVU2080
 6939 0072 D045     		cmp	r8, r10
 6940 0074 D4D1     		bne	.L750
 6941 0076 F2E7     		b	.L744
 6942              	.LVL605:
 6943              	.L759:
2774:src/keys.c    **** 		char buf[16];
 6944              		.loc 1 2774 2 view .LVU2081
 6945 0078 4C44     		add	r4, r4, r9
 6946 007a F5E7     		b	.L747
 6947              	.LVL606:
 6948              	.L751:
2774:src/keys.c    **** 		char buf[16];
 6949              		.loc 1 2774 11 view .LVU2082
 6950 007c D046     		mov	r8, r10
 6951 007e EEE7     		b	.L744
 6952              	.L762:
 6953              		.align	2
 6954              	.L761:
 6955 0080 00000000 		.word	StateWhileOn
 6956 0084 00000000 		.word	.LANCHOR8
 6957              		.cfi_endproc
 6958              	.LFE49:
 6960              		.section	.text.get_alpha_state,"ax",%progbits
 6961              		.align	1
 6962              		.p2align 2,,3
 6963              		.global	get_alpha_state
 6964              		.syntax unified
 6965              		.thumb
 6966              		.thumb_func
 6967              		.fpu fpv4-sp-d16
 6969              	get_alpha_state:
 6970              	.LFB61:
3118:src/keys.c    **** 
3119:src/keys.c    **** 
ARM GAS  /tmp/cc6xzGMw.s 			page 212


3120:src/keys.c    **** static int process_registerlist(const keycode c) {
3121:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
3122:src/keys.c    **** 	enum shifts shift = reset_shift();
3123:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
3124:src/keys.c    **** 	const int g_max = global_regs();
3125:src/keys.c    **** 
3126:src/keys.c    **** 	if (n == LOCAL_REG_BASE) {	// '.'
3127:src/keys.c    **** 		if (local_regs())
3128:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
3129:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
3130:src/keys.c    **** 		goto reset_window;
3131:src/keys.c    **** 	}
3132:src/keys.c    **** 	else if (n <= 9) {
3133:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
3134:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
3135:src/keys.c    **** 			dv = n;
3136:src/keys.c    **** 		State2.digval = dv;
3137:src/keys.c    **** 		goto reset_window;
3138:src/keys.c    **** 	}
3139:src/keys.c    **** 	else if ((shift == SHIFT_F || shift == SHIFT_G) && c == K21) {  // <( )>
3140:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
3141:src/keys.c    **** 		set_smode(SDISP_SHOW);
3142:src/keys.c    **** 	}
3143:src/keys.c    **** 	else if (n != NO_REG) {
3144:src/keys.c    **** 		State2.digval = n;
3145:src/keys.c    **** 		goto reset_window;
3146:src/keys.c    **** 	}
3147:src/keys.c    **** 
3148:src/keys.c    **** 	switch (c) {
3149:src/keys.c    **** 	case K_DOWN:
3150:src/keys.c    **** 		if (State2.digval > 0) {
3151:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
3152:src/keys.c    **** 				State2.digval = global_regs();
3153:src/keys.c    **** 			--State2.digval;
3154:src/keys.c    **** 		}
3155:src/keys.c    **** 		else
3156:src/keys.c    **** 			State2.digval = max - 1;
3157:src/keys.c    **** 		goto reset_window;
3158:src/keys.c    **** 
3159:src/keys.c    **** 	case K_UP:
3160:src/keys.c    **** 		if (State2.digval < max - 1) {
3161:src/keys.c    **** 			State2.digval++;
3162:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
3163:src/keys.c    **** 				State2.digval = regX_idx;
3164:src/keys.c    **** 		}
3165:src/keys.c    **** 		else	
3166:src/keys.c    **** 			State2.digval = 0;
3167:src/keys.c    **** 		goto reset_window;
3168:src/keys.c    **** 
3169:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
3170:src/keys.c    **** 	case K04:
3171:src/keys.c    **** 		State2.digval2 = ! State2.digval2 && ! State2.local;
3172:src/keys.c    **** 		goto reset_window;
3173:src/keys.c    **** #endif
3174:src/keys.c    **** 
3175:src/keys.c    **** 	case K24:			
3176:src/keys.c    **** 	//case K60:
ARM GAS  /tmp/cc6xzGMw.s 			page 213


3177:src/keys.c    **** 		if (State2.disp_temp)
3178:src/keys.c    **** 			return STATE_UNFINISHED;
3179:src/keys.c    **** 		break;		// Exit doing nothing
3180:src/keys.c    **** 
3181:src/keys.c    **** 	case K20:		// ENTER
3182:src/keys.c    **** 		if (shift == SHIFT_F) {
3183:src/keys.c    **** 			State2.disp_as_alpha = 1;
3184:src/keys.c    **** 			goto reset_window;
3185:src/keys.c    **** 		}
3186:src/keys.c    **** 	case K11:		// RCL
3187:src/keys.c    **** 		if ( shift == SHIFT_N ) {
3188:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
3189:src/keys.c    **** 			n = RARG( State2.digval2 ? RARG_FLRCL : RARG_RCL, State2.digval );
3190:src/keys.c    **** #else
3191:src/keys.c    **** 			n = RARG( RARG_RCL, State2.digval );
3192:src/keys.c    **** #endif
3193:src/keys.c    **** 			State2.registerlist = 0;
3194:src/keys.c    **** 			State2.digval = 0;
3195:src/keys.c    **** 			State2.digval2 = 0;
3196:src/keys.c    **** 			return n;
3197:src/keys.c    **** 		}
3198:src/keys.c    **** 	default:
3199:src/keys.c    **** 		return STATE_UNFINISHED;
3200:src/keys.c    **** 	}
3201:src/keys.c    **** 	State2.registerlist = 0;
3202:src/keys.c    **** 	State2.digval = 0;
3203:src/keys.c    **** 	State2.digval2 = 0;
3204:src/keys.c    **** reset_window:
3205:src/keys.c    **** 	State2.window = 0;
3206:src/keys.c    **** 	return STATE_UNFINISHED;
3207:src/keys.c    **** }
3208:src/keys.c    **** 
3209:src/keys.c    **** 
3210:src/keys.c    **** static int process(const int c) {
3211:src/keys.c    ****   const enum shifts shift = cur_shift();
3212:src/keys.c    ****   enum catalogues cat;
3213:src/keys.c    **** 
3214:src/keys.c    ****   if (Running || Pause) {
3215:src/keys.c    ****     /*
3216:src/keys.c    ****      *  Abort a running program with R/S or EXIT
3217:src/keys.c    ****      */
3218:src/keys.c    ****     if (c == K60 || c == K63) {
3219:src/keys.c    ****       if (Pause && isXROM(state_pc()))
3220:src/keys.c    **** 	set_pc(0);
3221:src/keys.c    ****       Pause = 0;
3222:src/keys.c    ****       xeq_xrom();
3223:src/keys.c    ****       set_running_off();
3224:src/keys.c    ****       DispMsg = "Stopped";
3225:src/keys.c    ****       State2.disp_freeze = 0;
3226:src/keys.c    ****       return STATE_UNFINISHED;
3227:src/keys.c    ****     }
3228:src/keys.c    ****     if ( c != K_HEARTBEAT ) {
3229:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
3230:src/keys.c    ****       Pause = 0;			// leave PSE statement
3231:src/keys.c    ****       GoFast = 1;
3232:src/keys.c    ****     }
3233:src/keys.c    ****     // continue execution if really running, else ignore (PSE)
ARM GAS  /tmp/cc6xzGMw.s 			page 214


3234:src/keys.c    ****     return STATE_RUNNING;
3235:src/keys.c    ****   }
3236:src/keys.c    **** 
3237:src/keys.c    ****   /* Check for ON in the unshifted state -- this is a reset sequence
3238:src/keys.c    ****    * common across all modes.  Shifted modes need to check this themselves
3239:src/keys.c    ****    * if required.
3240:src/keys.c    ****    */
3241:src/keys.c    **** #ifdef DM42
3242:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue && ! State2.arrow && ! State2.alphas)
3243:src/keys.c    **** #else
3244:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue)
3245:src/keys.c    **** #endif
3246:src/keys.c    ****     {
3247:src/keys.c    **** #ifdef INCLUDE_C_LOCK
3248:src/keys.c    ****       if (C_LOCKED) {
3249:src/keys.c    **** 	stack_restore();
3250:src/keys.c    **** 	CLEAR_REAL;
3251:src/keys.c    **** 	CLEAR_IMAG;
3252:src/keys.c    ****       }
3253:src/keys.c    **** #endif
3254:src/keys.c    ****       soft_init_state();
3255:src/keys.c    ****       return STATE_UNFINISHED;
3256:src/keys.c    ****     }
3257:src/keys.c    **** 
3258:src/keys.c    **** #ifndef CONSOLE
3259:src/keys.c    **** 	if (c == K63 && JustStopped) {
3260:src/keys.c    **** 		// Avoid an accidental restart with R/S
3261:src/keys.c    **** 		JustStopped = 0;
3262:src/keys.c    **** 		return STATE_IGNORE;
3263:src/keys.c    **** 	}
3264:src/keys.c    **** #endif
3265:src/keys.c    **** 	/*  Handle the keyboard timeout for catalogue navigation
3266:src/keys.c    **** 	 *  Must be done early in the process to capture the shifts correctly
3267:src/keys.c    **** 	 */
3268:src/keys.c    **** 	if (State2.catalogue && Keyticks > 30)
3269:src/keys.c    **** 		CmdLineLength = 0;
3270:src/keys.c    **** 	/*
3271:src/keys.c    **** 	 *  Process the various cases
3272:src/keys.c    **** 	 *  The handlers in this block here do not handle shifts at all or do it themselves
3273:src/keys.c    **** 	 */
3274:src/keys.c    **** 	if (State2.confirm)
3275:src/keys.c    **** 		return process_confirm((const keycode)c);
3276:src/keys.c    **** 
3277:src/keys.c    **** 	if (State2.rarg)
3278:src/keys.c    **** 		return process_arg((const keycode)c);
3279:src/keys.c    **** 
3280:src/keys.c    **** 	if (State2.gtodot)
3281:src/keys.c    **** 		return process_gtodot((const keycode)c);
3282:src/keys.c    **** 
3283:src/keys.c    **** 	if (State2.hyp)
3284:src/keys.c    **** 		return process_hyp((const keycode)c);
3285:src/keys.c    **** 
3286:src/keys.c    **** 	if (State2.test != TST_NONE)
3287:src/keys.c    **** 		return process_test((const keycode)c);
3288:src/keys.c    **** 
3289:src/keys.c    **** 	if (State2.status)
3290:src/keys.c    **** 		return process_status((const keycode)c);
ARM GAS  /tmp/cc6xzGMw.s 			page 215


3291:src/keys.c    **** 
3292:src/keys.c    **** 	/*
3293:src/keys.c    **** 	 *  Process shift keys directly
3294:src/keys.c    **** 	 */
3295:src/keys.c    **** 	if (c == K_F) {
3296:src/keys.c    **** 		toggle_shift(SHIFT_F);
3297:src/keys.c    **** 		return STATE_UNFINISHED;
3298:src/keys.c    **** 	}
3299:src/keys.c    **** 	if (c == K_G) {
3300:src/keys.c    **** 		toggle_shift(SHIFT_G);
3301:src/keys.c    **** 		return STATE_UNFINISHED;
3302:src/keys.c    **** 	}
3303:src/keys.c    **** 	if (c == K_H) {
3304:src/keys.c    **** 		toggle_shift(SHIFT_H);
3305:src/keys.c    **** 		State2.arrow = 0;
3306:src/keys.c    **** 		return STATE_UNFINISHED;
3307:src/keys.c    **** 	}
3308:src/keys.c    **** 	/*
3309:src/keys.c    **** 	 *  The handlers in this block need to call reset_shift somewhere
3310:src/keys.c    **** 	 */
3311:src/keys.c    **** 	// print_debug (2, c);
3312:src/keys.c    **** 	if (State2.arrow)
3313:src/keys.c    **** 		return process_arrow((const keycode)c);
3314:src/keys.c    **** 
3315:src/keys.c    **** 	/*
3316:src/keys.c    **** 	 * Here the keys are mapped to catalogues
3317:src/keys.c    **** 	 * The position of this code decides where catalogue switching
3318:src/keys.c    **** 	 * works and were not
3319:src/keys.c    **** 	 */
3320:src/keys.c    **** 	cat = keycode_to_cat((keycode)c, shift);
3321:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
3322:src/keys.c    **** 		if (is_bad_cmdline())
3323:src/keys.c    **** 			return STATE_UNFINISHED;
3324:src/keys.c    **** 		init_cat( CATALOGUE_NONE );
3325:src/keys.c    **** 		init_cat( cat );
3326:src/keys.c    **** 		return STATE_UNFINISHED;
3327:src/keys.c    **** 	}
3328:src/keys.c    **** 
3329:src/keys.c    **** 	/*
3330:src/keys.c    **** 	 *  More handlers...
3331:src/keys.c    **** 	 */
3332:src/keys.c    **** 	if (State2.multi)
3333:src/keys.c    **** 		return process_multi((const keycode)c);
3334:src/keys.c    **** 
3335:src/keys.c    **** 	if (State2.labellist)
3336:src/keys.c    **** 		return process_labellist((const keycode)c);
3337:src/keys.c    **** 
3338:src/keys.c    **** 	if (State2.registerlist)
3339:src/keys.c    **** 		return process_registerlist((const keycode)c);
3340:src/keys.c    **** 
3341:src/keys.c    **** 	if (State2.catalogue)
3342:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
3343:src/keys.c    **** 
3344:src/keys.c    **** 	if (State2.alphas) {
3345:src/keys.c    **** #ifndef INFRARED
3346:src/keys.c    **** 		return process_alpha((const keycode)c);
3347:src/keys.c    **** #else
ARM GAS  /tmp/cc6xzGMw.s 			page 216


3348:src/keys.c    **** 		int i = process_alpha((const keycode)c);
3349:src/keys.c    **** 		if (! State2.alphas && get_user_flag(T_FLAG)) {
3350:src/keys.c    **** 			print_tab(0);
3351:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
3352:src/keys.c    **** 		}
3353:src/keys.c    **** 		return i;
3354:src/keys.c    **** #endif
3355:src/keys.c    **** 	}
3356:src/keys.c    **** #ifdef INCLUDE_C_LOCK
3357:src/keys.c    **** 	if (C_LOCKED) {
3358:src/keys.c    **** 		return process_c_lock ((const keycode)c);
3359:src/keys.c    **** 	}
3360:src/keys.c    **** #endif
3361:src/keys.c    **** 	if (State2.cmplx) {
3362:src/keys.c    **** 		return process_cmplx((const keycode)c);
3363:src/keys.c    **** 	} else {
3364:src/keys.c    **** 		if (shift == SHIFT_F || shift == SHIFT_G)
3365:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
3366:src/keys.c    **** 		if (shift == SHIFT_H)
3367:src/keys.c    **** 			return process_h_shifted((const keycode)c);
3368:src/keys.c    **** 		// print_debug (3, c);
3369:src/keys.c    **** 		return process_normal((const keycode)c);
3370:src/keys.c    **** 	}
3371:src/keys.c    **** }
3372:src/keys.c    **** 
3373:src/keys.c    ****  unsigned int get_alpha_state ( void ) {
 6971              		.loc 1 3373 40 is_stmt 1 view -0
 6972              		.cfi_startproc
 6973              		@ args = 0, pretend = 0, frame = 0
 6974              		@ frame_needed = 0, uses_anonymous_args = 0
 6975              		@ link register save eliminated.
3374:src/keys.c    ****    return (State2.alphas || State2.confirm || State2.status || State2.labellist
 6976              		.loc 1 3374 4 view .LVU2084
 6977              		.loc 1 3374 53 is_stmt 0 view .LVU2085
 6978 0000 074B     		ldr	r3, .L768
 6979              		.loc 1 3374 44 view .LVU2086
 6980 0002 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 6981 0004 1AB9     		cbnz	r2, .L766
3375:src/keys.c    **** 	   || State2.rarg || State2.registerlist || State2.multi 
3376:src/keys.c    **** 	   || State2.gtodot || State2.catalogue || (State2.test != TST_NONE));
 6982              		.loc 1 3376 5 discriminator 2 view .LVU2087
 6983 0006 5969     		ldr	r1, [r3, #20]
 6984 0008 064A     		ldr	r2, .L768+4
 6985 000a 0A40     		ands	r2, r2, r1
 6986 000c 0AB1     		cbz	r2, .L767
 6987              	.L766:
 6988 000e 0120     		movs	r0, #1
3377:src/keys.c    ****  }
 6989              		.loc 1 3377 2 view .LVU2088
 6990 0010 7047     		bx	lr
 6991              	.L767:
3376:src/keys.c    ****  }
 6992              		.loc 1 3376 42 discriminator 3 view .LVU2089
 6993 0012 D889     		ldrh	r0, [r3, #14]
 6994 0014 B0F5E060 		subs	r0, r0, #1792
 6995 0018 18BF     		it	ne
 6996 001a 0120     		movne	r0, #1
ARM GAS  /tmp/cc6xzGMw.s 			page 217


 6997 001c 7047     		bx	lr
 6998              	.L769:
 6999 001e 00BF     		.align	2
 7000              	.L768:
 7001 0020 00000000 		.word	StateWhileOn
 7002 0024 0709280C 		.word	203950343
 7003              		.cfi_endproc
 7004              	.LFE61:
 7006              		.section	.rodata.process_keycode.str1.4,"aMS",%progbits,1
 7007              		.align	2
 7008              	.LC0:
 7009 0000 52554E00 		.ascii	"RUN\000"
 7010              		.align	2
 7011              	.LC1:
 7012 0004 4E554C4C 		.ascii	"NULL\000"
 7012      00
 7013 0009 000000   		.align	2
 7014              	.LC2:
 7015 000c 53746F70 		.ascii	"Stopped\000"
 7015      70656400 
 7016              		.section	.text.process_keycode,"ax",%progbits
 7017              		.align	1
 7018              		.p2align 2,,3
 7019              		.global	process_keycode
 7020              		.syntax unified
 7021              		.thumb
 7022              		.thumb_func
 7023              		.fpu fpv4-sp-d16
 7025              	process_keycode:
 7026              	.LVL607:
 7027              	.LFB63:
3378:src/keys.c    **** 
3379:src/keys.c    ****  void process_keycode_with_shift ( struct _ndmap remapped ) {
3380:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
3381:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
3382:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
3383:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
3384:src/keys.c    ****        // Was error just wait for confirmation
3385:src/keys.c    ****        wait_for_key_press();
3386:src/keys.c    ****      }
3387:src/keys.c    ****      start_buzzer_freq(8800); sys_delay(10); stop_buzzer();// End click
3388:src/keys.c    ****      return;
3389:src/keys.c    ****    }
3390:src/keys.c    ****    if (remapped.key_34s == K_OP) {
3391:src/keys.c    ****      nd_opcode = remapped.shift;
3392:src/keys.c    ****      set_shift(SHIFT_N);
3393:src/keys.c    ****    }
3394:src/keys.c    ****    else if (remapped.shift >= 0) set_shift ( remapped.shift );
3395:src/keys.c    ****    process_keycode ( remapped.key_34s );
3396:src/keys.c    ****  }
3397:src/keys.c    ****  
3398:src/keys.c    **** /*
3399:src/keys.c    ****  *  Fed with key codes by the event loop
3400:src/keys.c    ****  */
3401:src/keys.c    **** void process_keycode(int c)
3402:src/keys.c    **** {
 7028              		.loc 1 3402 1 is_stmt 1 view -0
ARM GAS  /tmp/cc6xzGMw.s 			page 218


 7029              		.cfi_startproc
 7030              		@ args = 0, pretend = 0, frame = 8
 7031              		@ frame_needed = 0, uses_anonymous_args = 0
3403:src/keys.c    ****   static int was_paused;
 7032              		.loc 1 3403 3 view .LVU2091
3404:src/keys.c    ****   //volatile int cmdline_empty; // volatile because it's uninitialized in some cases
3405:src/keys.c    ****   int cmdline_empty = 0;        // Visual studio chokes in debug mode over the above
 7033              		.loc 1 3405 3 view .LVU2092
3406:src/keys.c    ****   //print_debug(60,c);
3407:src/keys.c    ****   if (was_paused && Pause == 0)
 7034              		.loc 1 3407 3 view .LVU2093
3402:src/keys.c    ****   static int was_paused;
 7035              		.loc 1 3402 1 is_stmt 0 view .LVU2094
 7036 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7037              		.cfi_def_cfa_offset 36
 7038              		.cfi_offset 4, -36
 7039              		.cfi_offset 5, -32
 7040              		.cfi_offset 6, -28
 7041              		.cfi_offset 7, -24
 7042              		.cfi_offset 8, -20
 7043              		.cfi_offset 9, -16
 7044              		.cfi_offset 10, -12
 7045              		.cfi_offset 11, -8
 7046              		.cfi_offset 14, -4
 7047              		.loc 1 3407 7 view .LVU2095
 7048 0004 B64D     		ldr	r5, .L1404
 7049              		.loc 1 3407 27 view .LVU2096
 7050 0006 B74F     		ldr	r7, .L1404+4
 7051              		.loc 1 3407 6 view .LVU2097
 7052 0008 2B68     		ldr	r3, [r5]
3402:src/keys.c    ****   static int was_paused;
 7053              		.loc 1 3402 1 view .LVU2098
 7054 000a 83B0     		sub	sp, sp, #12
 7055              		.cfi_def_cfa_offset 48
3402:src/keys.c    ****   static int was_paused;
 7056              		.loc 1 3402 1 view .LVU2099
 7057 000c 0446     		mov	r4, r0
 7058              		.loc 1 3407 6 view .LVU2100
 7059 000e 1BB1     		cbz	r3, .L771
 7060              		.loc 1 3407 27 discriminator 1 view .LVU2101
 7061 0010 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7062              		.loc 1 3407 18 discriminator 1 view .LVU2102
 7063 0012 002B     		cmp	r3, #0
 7064 0014 00F0DB81 		beq	.L1316
 7065              	.LVL608:
 7066              	.L771:
3408:src/keys.c    ****     {
3409:src/keys.c    ****     /*
3410:src/keys.c    ****      *  Continue XROM execution after a pause
3411:src/keys.c    ****      */
3412:src/keys.c    ****       xeq_xrom();
3413:src/keys.c    ****     }
3414:src/keys.c    ****   was_paused = Pause;
 7067              		.loc 1 3414 3 is_stmt 1 view .LVU2103
 7068              		.loc 1 3414 14 is_stmt 0 view .LVU2104
 7069 0018 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7070 001a 2B60     		str	r3, [r5]
ARM GAS  /tmp/cc6xzGMw.s 			page 219


3415:src/keys.c    ****   if (c == K_NOP)
 7071              		.loc 1 3415 3 is_stmt 1 view .LVU2105
 7072              		.loc 1 3415 6 is_stmt 0 view .LVU2106
 7073 001c 2E2C     		cmp	r4, #46
 7074 001e 00F09B81 		beq	.L1317
3416:src/keys.c    ****     {
3417:src/keys.c    ****       OpCode = 0;
3418:src/keys.c    ****     }
3419:src/keys.c    ****   else if (c == K_HEARTBEAT)
 7075              		.loc 1 3419 8 is_stmt 1 view .LVU2107
 7076              		.loc 1 3419 11 is_stmt 0 view .LVU2108
 7077 0022 622C     		cmp	r4, #98
 7078 0024 70D0     		beq	.L1318
3420:src/keys.c    ****     {
3421:src/keys.c    ****     /*
3422:src/keys.c    ****      *  Heartbeat processing goes here.
3423:src/keys.c    ****      *  This is totally thread safe!
3424:src/keys.c    ****      */
3425:src/keys.c    ****     if (Keyticks >= 2) {
3426:src/keys.c    ****       /*
3427:src/keys.c    ****        *  Some time has passed after last key press
3428:src/keys.c    ****        */
3429:src/keys.c    ****       if (OpCode != 0) {
3430:src/keys.c    **** 	/*
3431:src/keys.c    **** 	 *  Handle command display and NULL here
3432:src/keys.c    **** 	 */
3433:src/keys.c    **** 	if (OpCodeDisplayPending) {
3434:src/keys.c    **** 	  /*
3435:src/keys.c    **** 	   *  Show command to the user
3436:src/keys.c    **** 	   */
3437:src/keys.c    **** 	  OpCodeDisplayPending = 0;
3438:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
3439:src/keys.c    **** 	    DispMsg = "RUN";
3440:src/keys.c    **** 	  }
3441:src/keys.c    **** 	  else {
3442:src/keys.c    **** 	    scopy_char(TraceBuffer, prt(OpCode, TraceBuffer), '\0');
3443:src/keys.c    **** 	    DispMsg = TraceBuffer;
3444:src/keys.c    **** 	  }
3445:src/keys.c    **** 	  display();
3446:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
3447:src/keys.c    **** 	}
3448:src/keys.c    ****     else if (Keyticks > 12) {
3449:src/keys.c    **** 	  /*
3450:src/keys.c    **** 	   *  Key is too long held down
3451:src/keys.c    **** 	   */
3452:src/keys.c    **** 	  OpCode = 0;
3453:src/keys.c    **** 	  message("NULL", CNULL);
3454:src/keys.c    **** 	  // Force display update on key-up
3455:src/keys.c    **** 	  State2.disp_temp = 0;
3456:src/keys.c    **** 	}
3457:src/keys.c    ****       }
3458:src/keys.c    ****       if (Keyticks > 12 && shift_down() != SHIFT_N) {
3459:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
3460:src/keys.c    **** 	State2.shifts = SHIFT_N;
3461:src/keys.c    ****       }
3462:src/keys.c    ****     }
3463:src/keys.c    **** 
ARM GAS  /tmp/cc6xzGMw.s 			page 220


3464:src/keys.c    ****     /*
3465:src/keys.c    ****      *  Serve the watchdog
3466:src/keys.c    ****      */
3467:src/keys.c    ****     watchdog();
3468:src/keys.c    **** 
3469:src/keys.c    **** #ifndef CONSOLE
3470:src/keys.c    ****     /*
3471:src/keys.c    ****      *  If buffer is empty re-allow R/S to start a program
3472:src/keys.c    ****      */
3473:src/keys.c    ****     if (JustStopped && !is_key_pressed()) {
3474:src/keys.c    ****       JustStopped = 0;
3475:src/keys.c    ****     }
3476:src/keys.c    **** #endif
3477:src/keys.c    **** 
3478:src/keys.c    ****     /*
3479:src/keys.c    ****      *  Do nothing if not running a program
3480:src/keys.c    ****      */
3481:src/keys.c    ****     if (!Running && ! Pause)
3482:src/keys.c    ****       return;
3483:src/keys.c    ****   }
3484:src/keys.c    ****   else {
3485:src/keys.c    ****     /*
3486:src/keys.c    ****      *  Not the heartbeat - prepare for execution of any commands
3487:src/keys.c    ****      */
3488:src/keys.c    ****     xeq_init_contexts();
 7079              		.loc 1 3488 5 is_stmt 1 view .LVU2109
3489:src/keys.c    ****     State2.wascomplex = 0;
 7080              		.loc 1 3489 23 is_stmt 0 view .LVU2110
 7081 0026 DFF8D882 		ldr	r8, .L1404+32
3488:src/keys.c    ****     State2.wascomplex = 0;
 7082              		.loc 1 3488 5 view .LVU2111
 7083 002a FFF7FEFF 		bl	xeq_init_contexts
 7084              	.LVL609:
 7085              		.loc 1 3489 5 is_stmt 1 view .LVU2112
 7086              		.loc 1 3489 23 is_stmt 0 view .LVU2113
 7087 002e 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
3490:src/keys.c    **** 
3491:src/keys.c    ****     if (is_dot(RPN)) {
 7088              		.loc 1 3491 9 view .LVU2114
 7089 0032 8D20     		movs	r0, #141
3489:src/keys.c    **** 
 7090              		.loc 1 3489 23 view .LVU2115
 7091 0034 6FF38713 		bfc	r3, #6, #2
 7092 0038 88F81430 		strb	r3, [r8, #20]
 7093              		.loc 1 3491 5 is_stmt 1 view .LVU2116
 7094              		.loc 1 3491 9 is_stmt 0 view .LVU2117
 7095 003c FFF7FEFF 		bl	is_dot
 7096              	.LVL610:
 7097              		.loc 1 3491 8 view .LVU2118
 7098 0040 0028     		cmp	r0, #0
 7099 0042 40F04F82 		bne	.L1319
 7100              	.L789:
3492:src/keys.c    ****       /*
3493:src/keys.c    ****        * Turn off the RPN annunciator as a visual feedback
3494:src/keys.c    ****        */
3495:src/keys.c    ****       clr_dot(RPN);
3496:src/keys.c    ****       finish_RPN(); // RPN
ARM GAS  /tmp/cc6xzGMw.s 			page 221


3497:src/keys.c    ****     }
3498:src/keys.c    **** 
3499:src/keys.c    **** #ifndef CONSOLE
3500:src/keys.c    ****     /*
3501:src/keys.c    ****      *  Reallow display refresh which is temporarily disabled after a stop
3502:src/keys.c    ****      *  All keys execpt R/S trigger this. The latter will only be reenabled
3503:src/keys.c    ****      *  from the heartbeat after the keybord buffer has become empty to avoid
3504:src/keys.c    ****      *  an accidental restart of the program.
3505:src/keys.c    ****      */
3506:src/keys.c    ****     if (c != K63)
 7101              		.loc 1 3506 5 is_stmt 1 view .LVU2119
 7102              		.loc 1 3506 8 is_stmt 0 view .LVU2120
 7103 0046 272C     		cmp	r4, #39
 7104 0048 00F04982 		beq	.L1320
3507:src/keys.c    ****       JustStopped = 0;
 7105              		.loc 1 3507 7 is_stmt 1 view .LVU2121
 7106              		.loc 1 3507 19 is_stmt 0 view .LVU2122
 7107 004c A64B     		ldr	r3, .L1404+8
 7108 004e 0025     		movs	r5, #0
3508:src/keys.c    **** #endif
3509:src/keys.c    ****   }
3510:src/keys.c    **** 
3511:src/keys.c    ****   /*
3512:src/keys.c    ****    *  Handle key release
3513:src/keys.c    ****    */
3514:src/keys.c    ****   if (c == K_RELEASE)
 7109              		.loc 1 3514 6 view .LVU2123
 7110 0050 632C     		cmp	r4, #99
3507:src/keys.c    ****       JustStopped = 0;
 7111              		.loc 1 3507 19 view .LVU2124
 7112 0052 1D60     		str	r5, [r3]
 7113              		.loc 1 3514 3 is_stmt 1 view .LVU2125
 7114              		.loc 1 3514 6 is_stmt 0 view .LVU2126
 7115 0054 40F08F81 		bne	.L791
3515:src/keys.c    ****     {
3516:src/keys.c    ****       //      print_debug (80,c);
3517:src/keys.c    ****     if (OpCode != 0) {
 7116              		.loc 1 3517 5 is_stmt 1 view .LVU2127
 7117              		.loc 1 3517 16 is_stmt 0 view .LVU2128
 7118 0058 A44A     		ldr	r2, .L1404+12
 7119 005a 1368     		ldr	r3, [r2]
 7120              		.loc 1 3517 8 view .LVU2129
 7121 005c 002B     		cmp	r3, #0
 7122 005e 00F05582 		beq	.L792
3518:src/keys.c    ****       /*
3519:src/keys.c    ****        * Execute the key on release
3520:src/keys.c    ****        */
3521:src/keys.c    ****       GoFast = 1;
 7123              		.loc 1 3521 7 is_stmt 1 view .LVU2130
 7124              		.loc 1 3521 14 is_stmt 0 view .LVU2131
 7125 0062 A349     		ldr	r1, .L1404+16
3522:src/keys.c    ****       c = OpCode;
3523:src/keys.c    ****       //      print_debug(81,c);
3524:src/keys.c    ****       OpCode = 0;
 7126              		.loc 1 3524 14 view .LVU2132
 7127 0064 1560     		str	r5, [r2]
3521:src/keys.c    ****       c = OpCode;
ARM GAS  /tmp/cc6xzGMw.s 			page 222


 7128              		.loc 1 3521 14 view .LVU2133
 7129 0066 0120     		movs	r0, #1
3525:src/keys.c    **** 
3526:src/keys.c    ****       if (c == STATE_SST)
 7130              		.loc 1 3526 10 view .LVU2134
 7131 0068 2E2B     		cmp	r3, #46
3522:src/keys.c    ****       //      print_debug(81,c);
 7132              		.loc 1 3522 9 view .LVU2135
 7133 006a 1C46     		mov	r4, r3
 7134              	.LVL611:
3521:src/keys.c    ****       c = OpCode;
 7135              		.loc 1 3521 14 view .LVU2136
 7136 006c 0860     		str	r0, [r1]
3522:src/keys.c    ****       //      print_debug(81,c);
 7137              		.loc 1 3522 7 is_stmt 1 view .LVU2137
 7138              	.LVL612:
3524:src/keys.c    **** 
 7139              		.loc 1 3524 7 view .LVU2138
 7140              		.loc 1 3526 7 view .LVU2139
 7141              		.loc 1 3526 10 is_stmt 0 view .LVU2140
 7142 006e 00F06182 		beq	.L1321
3527:src/keys.c    **** 	xeq_sst_bst(1);
3528:src/keys.c    ****       else {
3529:src/keys.c    **** 	if (c == (OP_NIL | OP_OFF) || c == (OP_NIL | OP_rCLX) || !is_bad_cmdline()) {
 7143              		.loc 1 3529 2 is_stmt 1 view .LVU2141
 7144              		.loc 1 3529 5 is_stmt 0 view .LVU2142
 7145 0072 B3F5817F 		cmp	r3, #258
 7146 0076 0AD0     		beq	.L798
 7147              		.loc 1 3529 29 discriminator 1 view .LVU2143
 7148 0078 40F23F12 		movw	r2, #319
 7149 007c 9342     		cmp	r3, r2
 7150 007e 06D0     		beq	.L798
 7151 0080 0093     		str	r3, [sp]
 7152              		.loc 1 3529 60 discriminator 2 view .LVU2144
 7153 0082 FFF7FEFF 		bl	is_bad_cmdline
 7154              	.LVL613:
 7155              		.loc 1 3529 56 discriminator 2 view .LVU2145
 7156 0086 009B     		ldr	r3, [sp]
 7157 0088 0028     		cmp	r0, #0
 7158 008a 40F06082 		bne	.L1322
 7159              	.L798:
3530:src/keys.c    **** 	  xeq(c);
 7160              		.loc 1 3530 4 is_stmt 1 view .LVU2146
3531:src/keys.c    **** 	  if (Running || Pause)
 7161              		.loc 1 3531 8 is_stmt 0 view .LVU2147
 7162 008e 994E     		ldr	r6, .L1404+20
3530:src/keys.c    **** 	  xeq(c);
 7163              		.loc 1 3530 4 view .LVU2148
 7164 0090 1846     		mov	r0, r3
 7165 0092 FFF7FEFF 		bl	xeq
 7166              	.LVL614:
 7167              		.loc 1 3531 4 is_stmt 1 view .LVU2149
 7168              		.loc 1 3531 7 is_stmt 0 view .LVU2150
 7169 0096 3368     		ldr	r3, [r6]
 7170 0098 0BB9     		cbnz	r3, .L796
 7171              		.loc 1 3531 16 discriminator 1 view .LVU2151
 7172 009a 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
ARM GAS  /tmp/cc6xzGMw.s 			page 223


 7173 009c 0BB1     		cbz	r3, .L794
 7174              	.L796:
3532:src/keys.c    **** 	    xeqprog();
 7175              		.loc 1 3532 6 is_stmt 1 view .LVU2152
 7176 009e FFF7FEFF 		bl	xeqprog
 7177              	.LVL615:
 7178              	.L794:
3533:src/keys.c    **** 	}
3534:src/keys.c    ****       }
3535:src/keys.c    ****       dot(RPN, ShowRPN);
 7179              		.loc 1 3535 7 view .LVU2153
 7180 00a2 954D     		ldr	r5, .L1404+24
 7181 00a4 8D20     		movs	r0, #141
 7182 00a6 2968     		ldr	r1, [r5]
 7183 00a8 FFF7FEFF 		bl	dot
 7184              	.LVL616:
3536:src/keys.c    ****     }
3537:src/keys.c    ****     else {
3538:src/keys.c    ****       // Ignore key-up if no operation was pending
3539:src/keys.c    ****       dot(RPN, ShowRPN);
3540:src/keys.c    **** #ifndef CONSOLE
3541:src/keys.c    ****       if (! State2.disp_temp ) {
3542:src/keys.c    **** 	if (!WasDataEntry) {
3543:src/keys.c    **** 	  // This will get rid of the last displayed op-code
3544:src/keys.c    **** 	  display();
3545:src/keys.c    **** 	}
3546:src/keys.c    **** 	else {
3547:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3548:src/keys.c    **** 	}
3549:src/keys.c    ****       }
3550:src/keys.c    **** #endif
3551:src/keys.c    ****       return;
3552:src/keys.c    ****     }
3553:src/keys.c    **** 
3554:src/keys.c    ****     /*
3555:src/keys.c    ****      *  Turn on the RPN symbol if desired
3556:src/keys.c    ****      */
3557:src/keys.c    ****     if (ShowRPN) {
 7185              		.loc 1 3557 5 view .LVU2154
 7186              		.loc 1 3557 9 is_stmt 0 view .LVU2155
 7187 00ac 2D68     		ldr	r5, [r5]
 7188              		.loc 1 3557 8 view .LVU2156
 7189 00ae 002D     		cmp	r5, #0
 7190 00b0 40F01E82 		bne	.L800
 7191              	.LVL617:
 7192              	.L1308:
3558:src/keys.c    ****       finish_RPN(); // RPN
3559:src/keys.c    ****     }
3560:src/keys.c    ****   }
3561:src/keys.c    ****   else {
3562:src/keys.c    ****     /*
3563:src/keys.c    ****      *  Decode the key 
3564:src/keys.c    ****      */
3565:src/keys.c    ****     //    print_debug (90, cur_shift());
3566:src/keys.c    ****     WasDataEntry = 0;
3567:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
3568:src/keys.c    **** #ifdef DM42
ARM GAS  /tmp/cc6xzGMw.s 			page 224


3569:src/keys.c    ****     if (c != K_OP) {
3570:src/keys.c    ****       c = process(c);
3571:src/keys.c    ****       //print_debug (91,cur_shift());
3572:src/keys.c    ****       // returns an op-code or state
3573:src/keys.c    ****     }
3574:src/keys.c    ****     else {
3575:src/keys.c    ****       if (isRARG(nd_opcode)) {
3576:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
3577:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
3578:src/keys.c    **** 	  c = nd_opcode;
3579:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
3580:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
3581:src/keys.c    **** 	  c = STATE_UNFINISHED;
3582:src/keys.c    **** 	}
3583:src/keys.c    **** 	else {
3584:src/keys.c    **** 	  init_arg(RARG_CMD(nd_opcode));
3585:src/keys.c    **** 	  c = STATE_UNFINISHED;
3586:src/keys.c    **** 	}
3587:src/keys.c    ****       }
3588:src/keys.c    ****       else {
3589:src/keys.c    **** 	c = check_confirm(nd_opcode);
3590:src/keys.c    ****       }      
3591:src/keys.c    ****     }
3592:src/keys.c    **** #else
3593:src/keys.c    ****     c = process(c);		// returns an op-code or state
3594:src/keys.c    **** #endif
3595:src/keys.c    ****     switch (c) {
3596:src/keys.c    ****     case STATE_SST:
3597:src/keys.c    ****       OpCode = c;
3598:src/keys.c    ****       OpCodeDisplayPending = 0;
3599:src/keys.c    ****       xeq_sst_bst(0);
3600:src/keys.c    ****       break;
 7193              		.loc 1 3600 7 is_stmt 1 view .LVU2157
 7194 00b4 3368     		ldr	r3, [r6]
 7195              	.LVL618:
 7196              	.L801:
3601:src/keys.c    **** 
3602:src/keys.c    ****     case STATE_BST:
3603:src/keys.c    ****       xeq_sst_bst(-1);
3604:src/keys.c    ****       break;
3605:src/keys.c    **** 
3606:src/keys.c    ****     case STATE_BACKSPACE:
3607:src/keys.c    ****       if (! State2.runmode)
3608:src/keys.c    **** 	delprog();
3609:src/keys.c    ****       else if (State2.alphas) {
3610:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
3611:src/keys.c    **** 	if (p > Alpha)
3612:src/keys.c    **** 	  *--p = '\0';
3613:src/keys.c    ****       }
3614:src/keys.c    ****       break;
3615:src/keys.c    **** 
3616:src/keys.c    ****     case STATE_RUNNING:
3617:src/keys.c    ****       xeqprog();  // continue execution
3618:src/keys.c    ****       break;
3619:src/keys.c    **** 
3620:src/keys.c    ****     case STATE_WINDOWRIGHT:
3621:src/keys.c    ****     case STATE_WINDOWLEFT:
ARM GAS  /tmp/cc6xzGMw.s 			page 225


3622:src/keys.c    ****       if (!is_bad_cmdline())
3623:src/keys.c    **** 	set_window(c);
3624:src/keys.c    ****       break;
3625:src/keys.c    **** 
3626:src/keys.c    ****     case STATE_UNFINISHED:
3627:src/keys.c    ****     case STATE_IGNORE:
3628:src/keys.c    ****       break;
3629:src/keys.c    **** 
3630:src/keys.c    ****     default:
3631:src/keys.c    ****       if (State2.runmode || NonProgrammable) {
3632:src/keys.c    **** 	NonProgrammable = 0;
3633:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
3634:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
3635:src/keys.c    **** 	    // Data entry key
3636:src/keys.c    **** #ifndef CONSOLE
3637:src/keys.c    **** 	    WasDataEntry = 1;
3638:src/keys.c    **** #endif
3639:src/keys.c    **** 	    cmdline_empty = (CmdLineLength == 0);
3640:src/keys.c    **** 	    xeq(c);
3641:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
3642:src/keys.c    **** 	  }
3643:src/keys.c    **** 	}
3644:src/keys.c    **** 	else {
3645:src/keys.c    **** 	  // Save the op-code for execution on key-up
3646:src/keys.c    **** 	  //print_debug(70,c);
3647:src/keys.c    **** 	  OpCode = c;
3648:src/keys.c    **** 	  OpCodeDisplayPending = 1;
3649:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3650:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
3651:src/keys.c    **** 	}
3652:src/keys.c    ****       }
3653:src/keys.c    ****       else {
3654:src/keys.c    **** 	stoprog(c);
3655:src/keys.c    ****       }
3656:src/keys.c    ****     }
3657:src/keys.c    ****   }
3658:src/keys.c    ****   if (! Running && ! Pause
 7197              		.loc 1 3658 3 view .LVU2158
 7198              		.loc 1 3658 6 is_stmt 0 view .LVU2159
 7199 00b6 002B     		cmp	r3, #0
 7200 00b8 40F04A81 		bne	.L1315
 7201              	.LVL619:
 7202              	.L821:
 7203              		.loc 1 3658 20 discriminator 1 view .LVU2160
 7204 00bc 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7205              		.loc 1 3658 17 discriminator 1 view .LVU2161
 7206 00be 002B     		cmp	r3, #0
 7207 00c0 40F04681 		bne	.L1315
3659:src/keys.c    **** #ifndef CONSOLE
3660:src/keys.c    ****       && ! JustStopped
 7208              		.loc 1 3660 10 view .LVU2162
 7209 00c4 884B     		ldr	r3, .L1404+8
3661:src/keys.c    **** #endif
3662:src/keys.c    ****       && ! JustDisplayed && c != STATE_IGNORE) {
 7210              		.loc 1 3662 10 view .LVU2163
 7211 00c6 8D4E     		ldr	r6, .L1404+28
 7212 00c8 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc6xzGMw.s 			page 226


 7213 00ca 3268     		ldr	r2, [r6]
 7214              		.loc 1 3662 7 view .LVU2164
 7215 00cc 1343     		orrs	r3, r3, r2
 7216 00ce 16D1     		bne	.L1112
 7217              		.loc 1 3662 26 discriminator 1 view .LVU2165
 7218 00d0 322C     		cmp	r4, #50
 7219 00d2 14D0     		beq	.L1112
 7220              	.LBB821:
3663:src/keys.c    ****     const int orig_WasDataEntry = WasDataEntry;
 7221              		.loc 1 3663 5 is_stmt 1 view .LVU2166
 7222              		.loc 1 3663 15 is_stmt 0 view .LVU2167
 7223 00d4 DFF84092 		ldr	r9, .L1404+56
 7224 00d8 D9F80070 		ldr	r7, [r9]
 7225              	.LVL620:
3664:src/keys.c    **** 
3665:src/keys.c    ****     WasDataEntry &= !(c == (OP_SPEC | OP_ENTER) || cmdline_empty || State2.invalid_disp);
 7226              		.loc 1 3665 5 is_stmt 1 view .LVU2168
 7227              		.loc 1 3665 21 is_stmt 0 view .LVU2169
 7228 00dc 4CB1     		cbz	r4, .L1114
 7229              		.loc 1 3665 49 discriminator 1 view .LVU2170
 7230 00de 002D     		cmp	r5, #0
 7231 00e0 40F0E783 		bne	.L1167
 7232              		.loc 1 3665 66 discriminator 3 view .LVU2171
 7233 00e4 864B     		ldr	r3, .L1404+32
 7234 00e6 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 7235              		.loc 1 3665 21 discriminator 3 view .LVU2172
 7236 00e8 9807     		lsls	r0, r3, #30
 7237 00ea 00F13584 		bmi	.L1168
 7238 00ee 07F00104 		and	r4, r7, #1
 7239              	.LVL621:
 7240              	.L1114:
 7241              		.loc 1 3665 18 discriminator 8 view .LVU2173
 7242 00f2 C9F80040 		str	r4, [r9]
3666:src/keys.c    ****     display();
 7243              		.loc 1 3666 5 is_stmt 1 discriminator 8 view .LVU2174
 7244 00f6 FFF7FEFF 		bl	display
 7245              	.LVL622:
3667:src/keys.c    ****     WasDataEntry = orig_WasDataEntry;
 7246              		.loc 1 3667 5 discriminator 8 view .LVU2175
 7247              		.loc 1 3667 18 is_stmt 0 discriminator 8 view .LVU2176
 7248 00fa C9F80070 		str	r7, [r9]
 7249              	.LVL623:
 7250              	.L1112:
 7251              		.loc 1 3667 18 discriminator 8 view .LVU2177
 7252              	.LBE821:
3668:src/keys.c    ****   }
3669:src/keys.c    **** 
3670:src/keys.c    ****  no_display:
3671:src/keys.c    ****   JustDisplayed = 0;
 7253              		.loc 1 3671 3 is_stmt 1 view .LVU2178
 7254              		.loc 1 3671 17 is_stmt 0 view .LVU2179
 7255 00fe 0023     		movs	r3, #0
 7256 0100 3360     		str	r3, [r6]
3672:src/keys.c    ****   watchdog();
 7257              		.loc 1 3672 13 is_stmt 1 view .LVU2180
 7258              	.L770:
3673:src/keys.c    **** }
ARM GAS  /tmp/cc6xzGMw.s 			page 227


 7259              		.loc 1 3673 1 is_stmt 0 view .LVU2181
 7260 0102 03B0     		add	sp, sp, #12
 7261              		.cfi_remember_state
 7262              		.cfi_def_cfa_offset 36
 7263              		@ sp needed
 7264 0104 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7265              	.LVL624:
 7266              	.L1318:
 7267              		.cfi_restore_state
3425:src/keys.c    ****       /*
 7268              		.loc 1 3425 5 is_stmt 1 view .LVU2182
3425:src/keys.c    ****       /*
 7269              		.loc 1 3425 9 is_stmt 0 view .LVU2183
 7270 0108 FFF7FEFF 		bl	keyticks
 7271              	.LVL625:
3425:src/keys.c    ****       /*
 7272              		.loc 1 3425 8 view .LVU2184
 7273 010c 0128     		cmp	r0, #1
 7274 010e 1BDD     		ble	.L776
3429:src/keys.c    **** 	/*
 7275              		.loc 1 3429 7 is_stmt 1 view .LVU2185
3429:src/keys.c    **** 	/*
 7276              		.loc 1 3429 18 is_stmt 0 view .LVU2186
 7277 0110 764D     		ldr	r5, .L1404+12
 7278 0112 2868     		ldr	r0, [r5]
3429:src/keys.c    **** 	/*
 7279              		.loc 1 3429 10 view .LVU2187
 7280 0114 98B1     		cbz	r0, .L778
3433:src/keys.c    **** 	  /*
 7281              		.loc 1 3433 2 is_stmt 1 view .LVU2188
3433:src/keys.c    **** 	  /*
 7282              		.loc 1 3433 6 is_stmt 0 view .LVU2189
 7283 0116 7B4B     		ldr	r3, .L1404+36
3433:src/keys.c    **** 	  /*
 7284              		.loc 1 3433 5 view .LVU2190
 7285 0118 1E68     		ldr	r6, [r3]
 7286 011a 002E     		cmp	r6, #0
 7287 011c 00F01982 		beq	.L779
3437:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 7288              		.loc 1 3437 4 is_stmt 1 view .LVU2191
3438:src/keys.c    **** 	    DispMsg = "RUN";
 7289              		.loc 1 3438 7 is_stmt 0 view .LVU2192
 7290 0120 40F23B12 		movw	r2, #315
3437:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 7291              		.loc 1 3437 25 view .LVU2193
 7292 0124 0025     		movs	r5, #0
3438:src/keys.c    **** 	    DispMsg = "RUN";
 7293              		.loc 1 3438 7 view .LVU2194
 7294 0126 9042     		cmp	r0, r2
3437:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 7295              		.loc 1 3437 25 view .LVU2195
 7296 0128 1D60     		str	r5, [r3]
3438:src/keys.c    **** 	    DispMsg = "RUN";
 7297              		.loc 1 3438 4 is_stmt 1 view .LVU2196
3438:src/keys.c    **** 	    DispMsg = "RUN";
 7298              		.loc 1 3438 7 is_stmt 0 view .LVU2197
 7299 012a 40F06B82 		bne	.L780
ARM GAS  /tmp/cc6xzGMw.s 			page 228


3439:src/keys.c    **** 	  }
 7300              		.loc 1 3439 6 is_stmt 1 view .LVU2198
3439:src/keys.c    **** 	  }
 7301              		.loc 1 3439 14 is_stmt 0 view .LVU2199
 7302 012e 764B     		ldr	r3, .L1404+40
 7303 0130 764A     		ldr	r2, .L1404+44
 7304 0132 1A60     		str	r2, [r3]
 7305              	.L781:
3445:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
 7306              		.loc 1 3445 4 is_stmt 1 view .LVU2200
 7307 0134 FFF7FEFF 		bl	display
 7308              	.LVL626:
3446:src/keys.c    **** 	}
 7309              		.loc 1 3446 4 view .LVU2201
3446:src/keys.c    **** 	}
 7310              		.loc 1 3446 12 is_stmt 0 view .LVU2202
 7311 0138 6F4B     		ldr	r3, .L1404+24
 7312 013a 0122     		movs	r2, #1
 7313 013c 1A60     		str	r2, [r3]
 7314              	.L778:
3458:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 7315              		.loc 1 3458 7 is_stmt 1 view .LVU2203
3458:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 7316              		.loc 1 3458 11 is_stmt 0 view .LVU2204
 7317 013e FFF7FEFF 		bl	keyticks
 7318              	.LVL627:
3458:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 7319              		.loc 1 3458 10 view .LVU2205
 7320 0142 0C28     		cmp	r0, #12
 7321 0144 00F3FA81 		bgt	.L1323
 7322              	.L776:
3467:src/keys.c    **** 
 7323              		.loc 1 3467 15 is_stmt 1 view .LVU2206
3473:src/keys.c    ****       JustStopped = 0;
 7324              		.loc 1 3473 5 view .LVU2207
3473:src/keys.c    ****       JustStopped = 0;
 7325              		.loc 1 3473 9 is_stmt 0 view .LVU2208
 7326 0148 674D     		ldr	r5, .L1404+8
3473:src/keys.c    ****       JustStopped = 0;
 7327              		.loc 1 3473 8 view .LVU2209
 7328 014a 2B68     		ldr	r3, [r5]
 7329 014c 002B     		cmp	r3, #0
 7330 014e 40F08081 		bne	.L1324
 7331              	.L785:
3481:src/keys.c    ****       return;
 7332              		.loc 1 3481 5 is_stmt 1 view .LVU2210
3481:src/keys.c    ****       return;
 7333              		.loc 1 3481 9 is_stmt 0 view .LVU2211
 7334 0152 684E     		ldr	r6, .L1404+20
 7335 0154 3368     		ldr	r3, [r6]
3481:src/keys.c    ****       return;
 7336              		.loc 1 3481 8 view .LVU2212
 7337 0156 002B     		cmp	r3, #0
 7338 0158 00F05C81 		beq	.L1325
 7339              	.L787:
3514:src/keys.c    ****     {
 7340              		.loc 1 3514 3 is_stmt 1 view .LVU2213
ARM GAS  /tmp/cc6xzGMw.s 			page 229


3566:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7341              		.loc 1 3566 5 view .LVU2214
3567:src/keys.c    **** #ifdef DM42
 7342              		.loc 1 3567 13 is_stmt 0 view .LVU2215
 7343 015c 664A     		ldr	r2, .L1404+24
3566:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7344              		.loc 1 3566 18 view .LVU2216
 7345 015e DFF8B891 		ldr	r9, .L1404+56
3567:src/keys.c    **** #ifdef DM42
 7346              		.loc 1 3567 15 view .LVU2217
 7347 0162 B3FA83F3 		clz	r3, r3
 7348 0166 5B09     		lsrs	r3, r3, #5
3567:src/keys.c    **** #ifdef DM42
 7349              		.loc 1 3567 13 view .LVU2218
 7350 0168 1360     		str	r3, [r2]
3566:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7351              		.loc 1 3566 18 view .LVU2219
 7352 016a 0023     		movs	r3, #0
 7353 016c C9F80030 		str	r3, [r9]
3567:src/keys.c    **** #ifdef DM42
 7354              		.loc 1 3567 5 is_stmt 1 view .LVU2220
3569:src/keys.c    ****       c = process(c);
 7355              		.loc 1 3569 5 view .LVU2221
 7356              	.L773:
3570:src/keys.c    ****       //print_debug (91,cur_shift());
 7357              		.loc 1 3570 7 view .LVU2222
 7358              	.LVL628:
 7359              	.LBB822:
 7360              	.LBI822:
3210:src/keys.c    ****   const enum shifts shift = cur_shift();
 7361              		.loc 1 3210 12 view .LVU2223
 7362              	.LBB823:
3211:src/keys.c    ****   enum catalogues cat;
 7363              		.loc 1 3211 3 view .LVU2224
 7364              	.LBB824:
 7365              	.LBI824:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 7366              		.loc 1 96 13 view .LVU2225
 7367              	.LBB825:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7368              		.loc 1 97 2 view .LVU2226
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7369              		.loc 1 97 18 is_stmt 0 view .LVU2227
 7370 0170 FFF7FEFF 		bl	shift_down
 7371              	.LVL629:
  98:src/keys.c    **** }
 7372              		.loc 1 98 2 is_stmt 1 view .LVU2228
  98:src/keys.c    **** }
 7373              		.loc 1 98 52 is_stmt 0 view .LVU2229
 7374 0174 8346     		mov	fp, r0
 7375 0176 10B9     		cbnz	r0, .L805
 7376 0178 614B     		ldr	r3, .L1404+32
 7377 017a 93F810B0 		ldrb	fp, [r3, #16]	@ zero_extendqisi2
 7378              	.L805:
 7379              	.LVL630:
  98:src/keys.c    **** }
 7380              		.loc 1 98 52 view .LVU2230
ARM GAS  /tmp/cc6xzGMw.s 			page 230


 7381              	.LBE825:
 7382              	.LBE824:
3212:src/keys.c    **** 
 7383              		.loc 1 3212 3 is_stmt 1 view .LVU2231
3214:src/keys.c    ****     /*
 7384              		.loc 1 3214 3 view .LVU2232
3214:src/keys.c    ****     /*
 7385              		.loc 1 3214 7 is_stmt 0 view .LVU2233
 7386 017e 3568     		ldr	r5, [r6]
3214:src/keys.c    ****     /*
 7387              		.loc 1 3214 6 view .LVU2234
 7388 0180 002D     		cmp	r5, #0
 7389 0182 40F0CD80 		bne	.L806
3214:src/keys.c    ****     /*
 7390              		.loc 1 3214 15 view .LVU2235
 7391 0186 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7392 0188 002B     		cmp	r3, #0
 7393 018a 40F0C980 		bne	.L806
3242:src/keys.c    **** #else
 7394              		.loc 1 3242 3 is_stmt 1 view .LVU2236
3242:src/keys.c    **** #else
 7395              		.loc 1 3242 6 is_stmt 0 view .LVU2237
 7396 018e 242C     		cmp	r4, #36
 7397 0190 00F0D782 		beq	.L1326
3259:src/keys.c    **** 		// Avoid an accidental restart with R/S
 7398              		.loc 1 3259 2 is_stmt 1 view .LVU2238
3259:src/keys.c    **** 		// Avoid an accidental restart with R/S
 7399              		.loc 1 3259 5 is_stmt 0 view .LVU2239
 7400 0194 272C     		cmp	r4, #39
 7401 0196 04D1     		bne	.L820
3259:src/keys.c    **** 		// Avoid an accidental restart with R/S
 7402              		.loc 1 3259 15 view .LVU2240
 7403 0198 534B     		ldr	r3, .L1404+8
 7404 019a 1A68     		ldr	r2, [r3]
 7405 019c 002A     		cmp	r2, #0
 7406 019e 40F0C983 		bne	.L1327
 7407              	.L820:
 7408 01a2 DFF85C81 		ldr	r8, .L1404+32
 7409 01a6 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
 7410              	.L813:
3268:src/keys.c    **** 		CmdLineLength = 0;
 7411              		.loc 1 3268 2 is_stmt 1 view .LVU2241
3268:src/keys.c    **** 		CmdLineLength = 0;
 7412              		.loc 1 3268 5 is_stmt 0 view .LVU2242
 7413 01aa 33B1     		cbz	r3, .L823
3268:src/keys.c    **** 		CmdLineLength = 0;
 7414              		.loc 1 3268 26 view .LVU2243
 7415 01ac FFF7FEFF 		bl	keyticks
 7416              	.LVL631:
3268:src/keys.c    **** 		CmdLineLength = 0;
 7417              		.loc 1 3268 23 view .LVU2244
 7418 01b0 1E28     		cmp	r0, #30
3269:src/keys.c    **** 	/*
 7419              		.loc 1 3269 3 is_stmt 1 view .LVU2245
3269:src/keys.c    **** 	/*
 7420              		.loc 1 3269 17 is_stmt 0 view .LVU2246
 7421 01b2 C4BF     		itt	gt
ARM GAS  /tmp/cc6xzGMw.s 			page 231


 7422 01b4 0023     		movgt	r3, #0
 7423 01b6 88F81C30 		strbgt	r3, [r8, #28]
 7424              	.L823:
3274:src/keys.c    **** 		return process_confirm((const keycode)c);
 7425              		.loc 1 3274 2 is_stmt 1 view .LVU2247
3274:src/keys.c    **** 		return process_confirm((const keycode)c);
 7426              		.loc 1 3274 6 is_stmt 0 view .LVU2248
 7427 01ba 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
3274:src/keys.c    **** 		return process_confirm((const keycode)c);
 7428              		.loc 1 3274 5 view .LVU2249
 7429 01be 5A07     		lsls	r2, r3, #29
 7430 01c0 40F05382 		bne	.L1328
3277:src/keys.c    **** 		return process_arg((const keycode)c);
 7431              		.loc 1 3277 2 is_stmt 1 view .LVU2250
3277:src/keys.c    **** 		return process_arg((const keycode)c);
 7432              		.loc 1 3277 6 is_stmt 0 view .LVU2251
 7433 01c4 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
3277:src/keys.c    **** 		return process_arg((const keycode)c);
 7434              		.loc 1 3277 5 view .LVU2252
 7435 01c8 8B06     		lsls	r3, r1, #26
 7436 01ca 00F1DA82 		bmi	.L1329
3280:src/keys.c    **** 		return process_gtodot((const keycode)c);
 7437              		.loc 1 3280 2 is_stmt 1 view .LVU2253
3280:src/keys.c    **** 		return process_gtodot((const keycode)c);
 7438              		.loc 1 3280 6 is_stmt 0 view .LVU2254
 7439 01ce 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
3280:src/keys.c    **** 		return process_gtodot((const keycode)c);
 7440              		.loc 1 3280 5 view .LVU2255
 7441 01d2 12F0010A 		ands	r10, r2, #1
 7442 01d6 40F01883 		bne	.L1330
3283:src/keys.c    **** 		return process_hyp((const keycode)c);
 7443              		.loc 1 3283 2 is_stmt 1 view .LVU2256
3283:src/keys.c    **** 		return process_hyp((const keycode)c);
 7444              		.loc 1 3283 5 is_stmt 0 view .LVU2257
 7445 01da 12F02000 		ands	r0, r2, #32
 7446 01de 40F06A83 		bne	.L1331
3286:src/keys.c    **** 		return process_test((const keycode)c);
 7447              		.loc 1 3286 2 is_stmt 1 view .LVU2258
3286:src/keys.c    **** 		return process_test((const keycode)c);
 7448              		.loc 1 3286 12 is_stmt 0 view .LVU2259
 7449 01e2 98F80F30 		ldrb	r3, [r8, #15]	@ zero_extendqisi2
3286:src/keys.c    **** 		return process_test((const keycode)c);
 7450              		.loc 1 3286 5 view .LVU2260
 7451 01e6 072B     		cmp	r3, #7
 7452 01e8 40F0D482 		bne	.L1332
3289:src/keys.c    **** 		return process_status((const keycode)c);
 7453              		.loc 1 3289 2 is_stmt 1 view .LVU2261
3289:src/keys.c    **** 		return process_status((const keycode)c);
 7454              		.loc 1 3289 12 is_stmt 0 view .LVU2262
 7455 01ec 98F80C10 		ldrb	r1, [r8, #12]	@ zero_extendqisi2
3289:src/keys.c    **** 		return process_status((const keycode)c);
 7456              		.loc 1 3289 5 view .LVU2263
 7457 01f0 0029     		cmp	r1, #0
 7458 01f2 40F0C383 		bne	.L1333
3295:src/keys.c    **** 		toggle_shift(SHIFT_F);
 7459              		.loc 1 3295 2 is_stmt 1 view .LVU2264
3295:src/keys.c    **** 		toggle_shift(SHIFT_F);
ARM GAS  /tmp/cc6xzGMw.s 			page 232


 7460              		.loc 1 3295 5 is_stmt 0 view .LVU2265
 7461 01f6 292C     		cmp	r4, #41
 7462 01f8 00F0CF84 		beq	.L1334
3299:src/keys.c    **** 		toggle_shift(SHIFT_G);
 7463              		.loc 1 3299 2 is_stmt 1 view .LVU2266
3299:src/keys.c    **** 		toggle_shift(SHIFT_G);
 7464              		.loc 1 3299 5 is_stmt 0 view .LVU2267
 7465 01fc 2A2C     		cmp	r4, #42
 7466 01fe 00F0D784 		beq	.L1335
3303:src/keys.c    **** 		toggle_shift(SHIFT_H);
 7467              		.loc 1 3303 2 is_stmt 1 view .LVU2268
3303:src/keys.c    **** 		toggle_shift(SHIFT_H);
 7468              		.loc 1 3303 5 is_stmt 0 view .LVU2269
 7469 0202 2B2C     		cmp	r4, #43
 7470 0204 00F03985 		beq	.L1336
3312:src/keys.c    **** 		return process_arrow((const keycode)c);
 7471              		.loc 1 3312 2 is_stmt 1 view .LVU2270
3312:src/keys.c    **** 		return process_arrow((const keycode)c);
 7472              		.loc 1 3312 5 is_stmt 0 view .LVU2271
 7473 0208 5107     		lsls	r1, r2, #29
 7474 020a 00F1E283 		bmi	.L1337
3320:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 7475              		.loc 1 3320 2 is_stmt 1 view .LVU2272
 7476              	.LBB826:
 7477              	.LBB827:
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7478              		.loc 1 276 6 is_stmt 0 view .LVU2273
 7479 020e DFF80CA1 		ldr	r10, .L1404+60
 7480 0212 DAF80000 		ldr	r0, [r10]
 7481 0216 90F8AC17 		ldrb	r1, [r0, #1964]	@ zero_extendqisi2
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7482              		.loc 1 276 5 view .LVU2274
 7483 021a 01F0410C 		and	ip, r1, #65
 7484 021e BCF1410F 		cmp	ip, #65
 7485              	.LBE827:
 7486              	.LBE826:
3320:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 7487              		.loc 1 3320 8 view .LVU2275
 7488 0222 E4B2     		uxtb	r4, r4
 7489              	.LVL632:
 7490              	.LBB849:
 7491              	.LBI826:
 267:src/keys.c    **** {
 7492              		.loc 1 267 24 is_stmt 1 view .LVU2276
 7493              	.LBB834:
 269:src/keys.c    ****   int i, col, max;
 7494              		.loc 1 269 3 view .LVU2277
 270:src/keys.c    ****   const struct _map {
 7495              		.loc 1 270 3 view .LVU2278
 271:src/keys.c    ****     unsigned char key, cat[3];
 7496              		.loc 1 271 3 view .LVU2279
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7497              		.loc 1 276 2 view .LVU2280
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7498              		.loc 1 276 5 is_stmt 0 view .LVU2281
 7499 0224 00F03582 		beq	.L1338
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
ARM GAS  /tmp/cc6xzGMw.s 			page 233


 7500              		.loc 1 312 3 is_stmt 1 view .LVU2282
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 7501              		.loc 1 312 6 is_stmt 0 view .LVU2283
 7502 0228 212C     		cmp	r4, #33
 7503 022a 00F03585 		beq	.L1339
 315:src/keys.c    ****     /*
 7504              		.loc 1 315 3 is_stmt 1 view .LVU2284
 315:src/keys.c    ****     /*
 7505              		.loc 1 315 23 is_stmt 0 view .LVU2285
 7506 022e 3849     		ldr	r1, .L1404+48
 7507 0230 D8F81430 		ldr	r3, [r8, #20]
 315:src/keys.c    ****     /*
 7508              		.loc 1 315 6 view .LVU2286
 7509 0234 1942     		tst	r1, r3
 7510 0236 40F09D84 		bne	.L920
 7511              	.LBB828:
 319:src/keys.c    **** #ifdef DM42
 7512              		.loc 1 319 5 is_stmt 1 view .LVU2287
 346:src/keys.c    ****       /*
 7513              		.loc 1 346 5 view .LVU2288
 346:src/keys.c    ****       /*
 7514              		.loc 1 346 8 is_stmt 0 view .LVU2289
 7515 023a 242C     		cmp	r4, #36
 7516 023c 03D1     		bne	.L921
 346:src/keys.c    ****       /*
 7517              		.loc 1 346 18 view .LVU2290
 7518 023e BBF1020F 		cmp	fp, #2
 7519 0242 00F0D587 		beq	.L1144
 7520              	.L921:
 361:src/keys.c    ****       /*
 7521              		.loc 1 361 5 is_stmt 1 view .LVU2291
 361:src/keys.c    ****       /*
 7522              		.loc 1 361 8 is_stmt 0 view .LVU2292
 7523 0246 BBF1030F 		cmp	fp, #3
 7524 024a 18D1     		bne	.L927
 7525              	.L1124:
 371:src/keys.c    **** #ifndef WINGUI
 7526              		.loc 1 371 5 is_stmt 1 view .LVU2293
 7527              	.LVL633:
 373:src/keys.c    **** #else
 7528              		.loc 1 373 5 view .LVU2294
 373:src/keys.c    **** #else
 7529              		.loc 1 373 23 is_stmt 0 view .LVU2295
 7530 024c 90F8E837 		ldrb	r3, [r0, #2024]	@ zero_extendqisi2
 373:src/keys.c    **** #else
 7531              		.loc 1 373 27 view .LVU2296
 7532 0250 D807     		lsls	r0, r3, #31
 7533 0252 00F1E387 		bmi	.L1145
 373:src/keys.c    **** #else
 7534              		.loc 1 373 73 view .LVU2297
 7535 0256 12F00203 		ands	r3, r2, #2
 7536 025a 01F0B081 		beq	.L1340
 371:src/keys.c    **** #ifndef WINGUI
 7537              		.loc 1 371 8 view .LVU2298
 7538 025e 2D4B     		ldr	r3, .L1404+52
 377:src/keys.c    ****   }
 7539              		.loc 1 377 9 view .LVU2299
ARM GAS  /tmp/cc6xzGMw.s 			page 234


 7540 0260 0C21     		movs	r1, #12
 373:src/keys.c    **** #else
 7541              		.loc 1 373 73 view .LVU2300
 7542 0262 4FF0020C 		mov	ip, #2
 7543              	.LVL634:
 7544              	.L922:
 373:src/keys.c    **** #else
 7545              		.loc 1 373 73 view .LVU2301
 7546              	.LBE828:
 421:src/keys.c    ****     if (cp->key == c) {
 7547              		.loc 1 421 3 is_stmt 1 view .LVU2302
 421:src/keys.c    ****     if (cp->key == c) {
 7548              		.loc 1 421 15 view .LVU2303
 7549 0266 181F     		subs	r0, r3, #4
 7550 0268 00EB8100 		add	r0, r0, r1, lsl #2
 7551              	.LBB829:
 373:src/keys.c    **** #else
 7552              		.loc 1 373 73 is_stmt 0 view .LVU2304
 7553 026c 0421     		movs	r1, #4
 7554              	.LVL635:
 373:src/keys.c    **** #else
 7555              		.loc 1 373 73 view .LVU2305
 7556 026e 01E0     		b	.L928
 7557              	.LVL636:
 7558              	.L1342:
 373:src/keys.c    **** #else
 7559              		.loc 1 373 73 view .LVU2306
 7560 0270 13F8041F 		ldrb	r1, [r3, #4]!	@ zero_extendqisi2
 7561              	.LVL637:
 7562              	.L928:
 373:src/keys.c    **** #else
 7563              		.loc 1 373 73 view .LVU2307
 7564              	.LBE829:
 422:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 7565              		.loc 1 422 5 is_stmt 1 view .LVU2308
 421:src/keys.c    ****     if (cp->key == c) {
 7566              		.loc 1 421 24 view .LVU2309
 421:src/keys.c    ****     if (cp->key == c) {
 7567              		.loc 1 421 15 view .LVU2310
 422:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 7568              		.loc 1 422 8 is_stmt 0 view .LVU2311
 7569 0274 8C42     		cmp	r4, r1
 7570 0276 00F0A684 		beq	.L1341
 421:src/keys.c    ****     if (cp->key == c) {
 7571              		.loc 1 421 3 view .LVU2312
 7572 027a 8342     		cmp	r3, r0
 7573 027c F8D1     		bne	.L1342
 7574              	.LVL638:
 7575              	.L927:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7576              		.loc 1 427 3 is_stmt 1 view .LVU2313
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7577              		.loc 1 427 6 is_stmt 0 view .LVU2314
 7578 027e 1107     		lsls	r1, r2, #28
 7579 0280 00F1AB84 		bmi	.L933
 7580              	.LVL639:
 7581              	.L931:
ARM GAS  /tmp/cc6xzGMw.s 			page 235


 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7582              		.loc 1 427 6 view .LVU2315
 7583              	.LBE834:
 7584              	.LBE849:
3335:src/keys.c    **** 		return process_labellist((const keycode)c);
 7585              		.loc 1 3335 2 is_stmt 1 view .LVU2316
3335:src/keys.c    **** 		return process_labellist((const keycode)c);
 7586              		.loc 1 3335 6 is_stmt 0 view .LVU2317
 7587 0284 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3335:src/keys.c    **** 		return process_labellist((const keycode)c);
 7588              		.loc 1 3335 5 view .LVU2318
 7589 0288 5907     		lsls	r1, r3, #29
 7590 028a 00F18585 		bmi	.L1343
3338:src/keys.c    **** 		return process_registerlist((const keycode)c);
 7591              		.loc 1 3338 2 is_stmt 1 view .LVU2319
3338:src/keys.c    **** 		return process_registerlist((const keycode)c);
 7592              		.loc 1 3338 5 is_stmt 0 view .LVU2320
 7593 028e 1807     		lsls	r0, r3, #28
 7594 0290 00F1D086 		bmi	.L1344
3341:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 7595              		.loc 1 3341 2 is_stmt 1 view .LVU2321
3341:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 7596              		.loc 1 3341 5 is_stmt 0 view .LVU2322
 7597 0294 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
 7598 0298 002B     		cmp	r3, #0
 7599 029a 40F0AC87 		bne	.L1345
3344:src/keys.c    **** #ifndef INFRARED
 7600              		.loc 1 3344 2 is_stmt 1 view .LVU2323
3344:src/keys.c    **** #ifndef INFRARED
 7601              		.loc 1 3344 6 is_stmt 0 view .LVU2324
 7602 029e 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3344:src/keys.c    **** #ifndef INFRARED
 7603              		.loc 1 3344 5 view .LVU2325
 7604 02a2 1907     		lsls	r1, r3, #28
 7605 02a4 00F1CB87 		bmi	.L1346
3357:src/keys.c    **** 		return process_c_lock ((const keycode)c);
 7606              		.loc 1 3357 2 is_stmt 1 view .LVU2326
3357:src/keys.c    **** 		return process_c_lock ((const keycode)c);
 7607              		.loc 1 3357 6 is_stmt 0 view .LVU2327
 7608 02a8 DAF80030 		ldr	r3, [r10]
 7609 02ac 93F8AC37 		ldrb	r3, [r3, #1964]	@ zero_extendqisi2
3357:src/keys.c    **** 		return process_c_lock ((const keycode)c);
 7610              		.loc 1 3357 5 view .LVU2328
 7611 02b0 03F04103 		and	r3, r3, #65
 7612 02b4 412B     		cmp	r3, #65
 7613 02b6 01F00081 		beq	.L1347
3361:src/keys.c    **** 		return process_cmplx((const keycode)c);
 7614              		.loc 1 3361 2 is_stmt 1 view .LVU2329
3361:src/keys.c    **** 		return process_cmplx((const keycode)c);
 7615              		.loc 1 3361 5 is_stmt 0 view .LVU2330
 7616 02ba 9007     		lsls	r0, r2, #30
 7617 02bc 01F1D180 		bmi	.L1306
3364:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 7618              		.loc 1 3364 3 is_stmt 1 view .LVU2331
3364:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 7619              		.loc 1 3364 24 is_stmt 0 view .LVU2332
 7620 02c0 0BF1FF33 		add	r3, fp, #-1
ARM GAS  /tmp/cc6xzGMw.s 			page 236


3364:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 7621              		.loc 1 3364 6 view .LVU2333
 7622 02c4 DBB2     		uxtb	r3, r3
 7623 02c6 012B     		cmp	r3, #1
 7624 02c8 41F29781 		bls	.L1305
3366:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 7625              		.loc 1 3366 3 is_stmt 1 view .LVU2334
3366:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 7626              		.loc 1 3366 6 is_stmt 0 view .LVU2335
 7627 02cc BBF1030F 		cmp	fp, #3
3367:src/keys.c    **** 		// print_debug (3, c);
 7628              		.loc 1 3367 11 view .LVU2336
 7629 02d0 2046     		mov	r0, r4
3366:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 7630              		.loc 1 3366 6 view .LVU2337
 7631 02d2 01F07A80 		beq	.L1348
 7632              	.LVL640:
 7633              	.L1304:
 7634              	.LBB850:
 7635              	.LBB851:
1427:src/keys.c    **** 	case (K_CMPLX):
 7636              		.loc 1 1427 11 view .LVU2338
 7637 02d6 FFF7FEFF 		bl	process_normal
 7638              	.LVL641:
 7639 02da 0446     		mov	r4, r0
 7640 02dc 80E0     		b	.L835
 7641              	.L1405:
 7642 02de 00BF     		.align	2
 7643              	.L1404:
 7644 02e0 00000000 		.word	.LANCHOR18
 7645 02e4 00000000 		.word	Pause
 7646 02e8 00000000 		.word	JustStopped
 7647 02ec 00000000 		.word	OpCode
 7648 02f0 00000000 		.word	GoFast
 7649 02f4 00000000 		.word	Running
 7650 02f8 00000000 		.word	ShowRPN
 7651 02fc 00000000 		.word	JustDisplayed
 7652 0300 00000000 		.word	StateWhileOn
 7653 0304 00000000 		.word	OpCodeDisplayPending
 7654 0308 00000000 		.word	DispMsg
 7655 030c 00000000 		.word	.LC0
 7656 0310 00080800 		.word	526336
 7657 0314 00000000 		.word	.LANCHOR17
 7658 0318 00000000 		.word	WasDataEntry
 7659 031c 00000000 		.word	main_ram
 7660              	.LVL642:
 7661              	.L806:
1427:src/keys.c    **** 	case (K_CMPLX):
 7662              		.loc 1 1427 11 view .LVU2339
 7663              	.LBE851:
 7664              	.LBE850:
3218:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 7665              		.loc 1 3218 5 is_stmt 1 view .LVU2340
3218:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 7666              		.loc 1 3218 8 is_stmt 0 view .LVU2341
 7667 0320 242C     		cmp	r4, #36
 7668 0322 00F09D80 		beq	.L808
ARM GAS  /tmp/cc6xzGMw.s 			page 237


3218:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 7669              		.loc 1 3218 18 view .LVU2342
 7670 0326 272C     		cmp	r4, #39
 7671 0328 00F09A80 		beq	.L808
3228:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 7672              		.loc 1 3228 5 is_stmt 1 view .LVU2343
3228:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 7673              		.loc 1 3228 8 is_stmt 0 view .LVU2344
 7674 032c 622C     		cmp	r4, #98
 7675 032e 07D0     		beq	.L811
3229:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7676              		.loc 1 3229 7 is_stmt 1 view .LVU2345
3229:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7677              		.loc 1 3229 15 is_stmt 0 view .LVU2346
 7678 0330 BA4B     		ldr	r3, .L1406
3231:src/keys.c    ****     }
 7679              		.loc 1 3231 14 view .LVU2347
 7680 0332 BB4A     		ldr	r2, .L1406+4
3229:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7681              		.loc 1 3229 17 view .LVU2348
 7682 0334 0134     		adds	r4, r4, #1
 7683              	.LVL643:
3231:src/keys.c    ****     }
 7684              		.loc 1 3231 14 view .LVU2349
 7685 0336 0121     		movs	r1, #1
3229:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7686              		.loc 1 3229 15 view .LVU2350
 7687 0338 DC74     		strb	r4, [r3, #19]
3230:src/keys.c    ****       GoFast = 1;
 7688              		.loc 1 3230 7 is_stmt 1 view .LVU2351
3230:src/keys.c    ****       GoFast = 1;
 7689              		.loc 1 3230 13 is_stmt 0 view .LVU2352
 7690 033a 0023     		movs	r3, #0
3231:src/keys.c    ****     }
 7691              		.loc 1 3231 14 view .LVU2353
 7692 033c 1160     		str	r1, [r2]
3230:src/keys.c    ****       GoFast = 1;
 7693              		.loc 1 3230 13 view .LVU2354
 7694 033e 3B70     		strb	r3, [r7]
3231:src/keys.c    ****     }
 7695              		.loc 1 3231 7 is_stmt 1 view .LVU2355
 7696              	.LVL644:
 7697              	.L811:
3231:src/keys.c    ****     }
 7698              		.loc 1 3231 7 is_stmt 0 view .LVU2356
 7699              	.LBE823:
 7700              	.LBE822:
3617:src/keys.c    ****       break;
 7701              		.loc 1 3617 7 is_stmt 1 view .LVU2357
 7702 0340 FFF7FEFF 		bl	xeqprog
 7703              	.LVL645:
3618:src/keys.c    **** 
 7704              		.loc 1 3618 7 view .LVU2358
 7705 0344 3368     		ldr	r3, [r6]
3405:src/keys.c    ****   //print_debug(60,c);
 7706              		.loc 1 3405 7 is_stmt 0 view .LVU2359
 7707 0346 0025     		movs	r5, #0
ARM GAS  /tmp/cc6xzGMw.s 			page 238


3618:src/keys.c    **** 
 7708              		.loc 1 3618 7 view .LVU2360
 7709 0348 3124     		movs	r4, #49
 7710              	.LVL646:
3658:src/keys.c    **** #ifndef CONSOLE
 7711              		.loc 1 3658 3 is_stmt 1 view .LVU2361
3658:src/keys.c    **** #ifndef CONSOLE
 7712              		.loc 1 3658 6 is_stmt 0 view .LVU2362
 7713 034a 002B     		cmp	r3, #0
 7714 034c 3FF4B6AE 		beq	.L821
 7715              	.L1315:
3658:src/keys.c    **** #ifndef CONSOLE
 7716              		.loc 1 3658 6 view .LVU2363
 7717 0350 B44E     		ldr	r6, .L1406+8
3671:src/keys.c    ****   watchdog();
 7718              		.loc 1 3671 3 is_stmt 1 view .LVU2364
3671:src/keys.c    ****   watchdog();
 7719              		.loc 1 3671 17 is_stmt 0 view .LVU2365
 7720 0352 0023     		movs	r3, #0
 7721 0354 3360     		str	r3, [r6]
3672:src/keys.c    **** }
 7722              		.loc 1 3672 13 is_stmt 1 view .LVU2366
 7723 0356 D4E6     		b	.L770
 7724              	.LVL647:
 7725              	.L1317:
3417:src/keys.c    ****     }
 7726              		.loc 1 3417 7 view .LVU2367
3567:src/keys.c    **** #ifdef DM42
 7727              		.loc 1 3567 15 is_stmt 0 view .LVU2368
 7728 0358 B34E     		ldr	r6, .L1406+12
3567:src/keys.c    **** #ifdef DM42
 7729              		.loc 1 3567 13 view .LVU2369
 7730 035a B449     		ldr	r1, .L1406+16
3567:src/keys.c    **** #ifdef DM42
 7731              		.loc 1 3567 15 view .LVU2370
 7732 035c 3368     		ldr	r3, [r6]
3417:src/keys.c    ****     }
 7733              		.loc 1 3417 14 view .LVU2371
 7734 035e B44A     		ldr	r2, .L1406+20
3566:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7735              		.loc 1 3566 18 view .LVU2372
 7736 0360 DFF8E892 		ldr	r9, .L1406+48
3567:src/keys.c    **** #ifdef DM42
 7737              		.loc 1 3567 15 view .LVU2373
 7738 0364 B3FA83F3 		clz	r3, r3
 7739 0368 5B09     		lsrs	r3, r3, #5
3567:src/keys.c    **** #ifdef DM42
 7740              		.loc 1 3567 13 view .LVU2374
 7741 036a 0B60     		str	r3, [r1]
3417:src/keys.c    ****     }
 7742              		.loc 1 3417 14 view .LVU2375
 7743 036c 0023     		movs	r3, #0
 7744 036e 1360     		str	r3, [r2]
3514:src/keys.c    ****     {
 7745              		.loc 1 3514 3 is_stmt 1 view .LVU2376
3566:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7746              		.loc 1 3566 5 view .LVU2377
ARM GAS  /tmp/cc6xzGMw.s 			page 239


3566:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7747              		.loc 1 3566 18 is_stmt 0 view .LVU2378
 7748 0370 C9F80030 		str	r3, [r9]
3567:src/keys.c    **** #ifdef DM42
 7749              		.loc 1 3567 5 is_stmt 1 view .LVU2379
3569:src/keys.c    ****       c = process(c);
 7750              		.loc 1 3569 5 view .LVU2380
 7751 0374 FCE6     		b	.L773
 7752              	.L791:
3569:src/keys.c    ****       c = process(c);
 7753              		.loc 1 3569 5 is_stmt 0 view .LVU2381
 7754 0376 AC4E     		ldr	r6, .L1406+12
3567:src/keys.c    **** #ifdef DM42
 7755              		.loc 1 3567 13 view .LVU2382
 7756 0378 AC49     		ldr	r1, .L1406+16
 7757 037a 3368     		ldr	r3, [r6]
3566:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7758              		.loc 1 3566 5 is_stmt 1 view .LVU2383
3566:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7759              		.loc 1 3566 18 is_stmt 0 view .LVU2384
 7760 037c DFF8CC92 		ldr	r9, .L1406+48
3567:src/keys.c    **** #ifdef DM42
 7761              		.loc 1 3567 15 view .LVU2385
 7762 0380 B3FA83F2 		clz	r2, r3
 7763 0384 5209     		lsrs	r2, r2, #5
3569:src/keys.c    ****       c = process(c);
 7764              		.loc 1 3569 8 view .LVU2386
 7765 0386 342C     		cmp	r4, #52
3567:src/keys.c    **** #ifdef DM42
 7766              		.loc 1 3567 13 view .LVU2387
 7767 0388 0A60     		str	r2, [r1]
3566:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7768              		.loc 1 3566 18 view .LVU2388
 7769 038a C9F80050 		str	r5, [r9]
3567:src/keys.c    **** #ifdef DM42
 7770              		.loc 1 3567 5 is_stmt 1 view .LVU2389
3569:src/keys.c    ****       c = process(c);
 7771              		.loc 1 3569 5 view .LVU2390
3569:src/keys.c    ****       c = process(c);
 7772              		.loc 1 3569 8 is_stmt 0 view .LVU2391
 7773 038e 7FF4EFAE 		bne	.L773
3575:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7774              		.loc 1 3575 7 is_stmt 1 view .LVU2392
3575:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7775              		.loc 1 3575 11 is_stmt 0 view .LVU2393
 7776 0392 A84A     		ldr	r2, .L1406+24
 7777 0394 1068     		ldr	r0, [r2]
3575:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7778              		.loc 1 3575 10 view .LVU2394
 7779 0396 10F47042 		ands	r2, r0, #61440
 7780 039a 1BD0     		beq	.L1091
3575:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7781              		.loc 1 3575 11 discriminator 1 view .LVU2395
 7782 039c B2F5704F 		cmp	r2, #61440
 7783 03a0 00F0AB80 		beq	.L1092
 7784              	.LBB1446:
3576:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
ARM GAS  /tmp/cc6xzGMw.s 			page 240


 7785              		.loc 1 3576 2 is_stmt 1 view .LVU2396
3576:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 7786              		.loc 1 3576 28 is_stmt 0 view .LVU2397
 7787 03a4 C0F30722 		ubfx	r2, r0, #8, #8
 7788 03a8 A2F12004 		sub	r4, r2, #32
 7789              	.LVL648:
3576:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 7790              		.loc 1 3576 28 view .LVU2398
 7791 03ac E4B2     		uxtb	r4, r4
 7792              	.LVL649:
3577:src/keys.c    **** 	  c = nd_opcode;
 7793              		.loc 1 3577 2 is_stmt 1 view .LVU2399
3577:src/keys.c    **** 	  c = nd_opcode;
 7794              		.loc 1 3577 5 is_stmt 0 view .LVU2400
 7795 03ae 012C     		cmp	r4, #1
 7796 03b0 35D9     		bls	.L1093
3577:src/keys.c    **** 	  c = nd_opcode;
 7797              		.loc 1 3577 53 discriminator 1 view .LVU2401
 7798 03b2 6C2C     		cmp	r4, #108
 7799 03b4 33D0     		beq	.L1093
3577:src/keys.c    **** 	  c = nd_opcode;
 7800              		.loc 1 3577 74 discriminator 2 view .LVU2402
 7801 03b6 242C     		cmp	r4, #36
 7802 03b8 31D0     		beq	.L1093
3579:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 7803              		.loc 1 3579 7 is_stmt 1 view .LVU2403
3579:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 7804              		.loc 1 3579 32 is_stmt 0 view .LVU2404
 7805 03ba A4F12D01 		sub	r1, r4, #45
3579:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 7806              		.loc 1 3579 10 view .LVU2405
 7807 03be 0629     		cmp	r1, #6
 7808 03c0 00F26B82 		bhi	.L1095
3580:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7809              		.loc 1 3580 4 is_stmt 1 view .LVU2406
3580:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7810              		.loc 1 3580 25 is_stmt 0 view .LVU2407
 7811 03c4 4D3A     		subs	r2, r2, #77
3580:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7812              		.loc 1 3580 16 view .LVU2408
 7813 03c6 88F80F20 		strb	r2, [r8, #15]
3581:src/keys.c    **** 	}
 7814              		.loc 1 3581 4 is_stmt 1 view .LVU2409
 7815              	.LVL650:
3581:src/keys.c    **** 	}
 7816              		.loc 1 3581 4 is_stmt 0 view .LVU2410
 7817              	.LBE1446:
3595:src/keys.c    ****     case STATE_SST:
 7818              		.loc 1 3595 5 is_stmt 1 view .LVU2411
 7819              	.LBB1449:
3581:src/keys.c    **** 	}
 7820              		.loc 1 3581 6 is_stmt 0 view .LVU2412
 7821 03ca 3324     		movs	r4, #51
 7822              	.LVL651:
3581:src/keys.c    **** 	}
 7823              		.loc 1 3581 6 view .LVU2413
 7824 03cc 73E6     		b	.L801
ARM GAS  /tmp/cc6xzGMw.s 			page 241


 7825              	.LVL652:
 7826              	.L1316:
3581:src/keys.c    **** 	}
 7827              		.loc 1 3581 6 view .LVU2414
 7828              	.LBE1449:
3412:src/keys.c    ****     }
 7829              		.loc 1 3412 7 is_stmt 1 view .LVU2415
 7830 03ce FFF7FEFF 		bl	xeq_xrom
 7831              	.LVL653:
3412:src/keys.c    ****     }
 7832              		.loc 1 3412 7 is_stmt 0 view .LVU2416
 7833 03d2 21E6     		b	.L771
 7834              	.L1091:
3589:src/keys.c    ****       }      
 7835              		.loc 1 3589 2 is_stmt 1 view .LVU2417
 7836              	.LBB1450:
 7837              	.LBB1451:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 7838              		.loc 1 705 5 is_stmt 0 view .LVU2418
 7839 03d4 C0F30723 		ubfx	r3, r0, #8, #8
 7840 03d8 012B     		cmp	r3, #1
 7841              	.LBE1451:
 7842              	.LBE1450:
3589:src/keys.c    ****       }      
 7843              		.loc 1 3589 6 view .LVU2419
 7844 03da 0446     		mov	r4, r0
 7845              	.LVL654:
 7846              	.LBB1455:
 7847              	.LBI1450:
 704:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 7848              		.loc 1 704 12 is_stmt 1 view .LVU2420
 7849              	.LBB1452:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 7850              		.loc 1 705 2 view .LVU2421
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 7851              		.loc 1 705 5 is_stmt 0 view .LVU2422
 7852 03dc 00F09280 		beq	.L1125
 7853              	.LVL655:
 7854              	.L835:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 7855              		.loc 1 705 5 view .LVU2423
 7856              	.LBE1452:
 7857              	.LBE1455:
3595:src/keys.c    ****     case STATE_SST:
 7858              		.loc 1 3595 5 is_stmt 1 view .LVU2424
 7859 03e0 A4F12B03 		sub	r3, r4, #43
 7860 03e4 082B     		cmp	r3, #8
 7861 03e6 00F2C480 		bhi	.L1097
 7862 03ea 01A2     		adr	r2, .L1099
 7863 03ec 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7864              		.p2align 2
 7865              	.L1099:
 7866 03f0 3F040000 		.word	.L1100+1
 7867 03f4 3F040000 		.word	.L1100+1
 7868 03f8 73050000 		.word	.L1097+1
 7869 03fc CB040000 		.word	.L1031+1
 7870 0400 BB040000 		.word	.L1027+1
ARM GAS  /tmp/cc6xzGMw.s 			page 242


 7871 0404 A1040000 		.word	.L1024+1
 7872 0408 41030000 		.word	.L811+1
 7873 040c 39040000 		.word	.L1309+1
 7874 0410 39040000 		.word	.L1309+1
 7875              		.p2align 1
 7876              	.L1325:
3481:src/keys.c    ****       return;
 7877              		.loc 1 3481 21 is_stmt 0 discriminator 1 view .LVU2425
 7878 0414 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
3481:src/keys.c    ****       return;
 7879              		.loc 1 3481 18 discriminator 1 view .LVU2426
 7880 0416 002A     		cmp	r2, #0
 7881 0418 7FF4A0AE 		bne	.L787
 7882 041c 71E6     		b	.L770
 7883              	.LVL656:
 7884              	.L1093:
 7885              	.LBB1456:
3578:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
 7886              		.loc 1 3578 4 is_stmt 1 view .LVU2427
 7887 041e 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
3578:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
 7888              		.loc 1 3578 6 is_stmt 0 view .LVU2428
 7889 0422 0446     		mov	r4, r0
 7890              	.LVL657:
 7891              	.L862:
3578:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
 7892              		.loc 1 3578 6 view .LVU2429
 7893              	.LBE1456:
3631:src/keys.c    **** 	NonProgrammable = 0;
 7894              		.loc 1 3631 7 is_stmt 1 view .LVU2430
3631:src/keys.c    **** 	NonProgrammable = 0;
 7895              		.loc 1 3631 10 is_stmt 0 view .LVU2431
 7896 0424 4A06     		lsls	r2, r1, #25
 7897 0426 00F11C81 		bmi	.L1349
 7898              	.L1120:
3631:src/keys.c    **** 	NonProgrammable = 0;
 7899              		.loc 1 3631 26 view .LVU2432
 7900 042a 834B     		ldr	r3, .L1406+28
 7901 042c 1A68     		ldr	r2, [r3]
 7902 042e 002A     		cmp	r2, #0
 7903 0430 41F0CB81 		bne	.L1350
 7904              	.LVL658:
 7905              	.L1109:
3654:src/keys.c    ****       }
 7906              		.loc 1 3654 2 is_stmt 1 view .LVU2433
 7907 0434 FFF7FEFF 		bl	stoprog
 7908              	.LVL659:
 7909              	.L1309:
 7910 0438 3368     		ldr	r3, [r6]
3405:src/keys.c    ****   //print_debug(60,c);
 7911              		.loc 1 3405 7 is_stmt 0 view .LVU2434
 7912 043a 0025     		movs	r5, #0
 7913 043c 3BE6     		b	.L801
 7914              	.LVL660:
 7915              	.L1100:
3622:src/keys.c    **** 	set_window(c);
 7916              		.loc 1 3622 7 is_stmt 1 view .LVU2435
ARM GAS  /tmp/cc6xzGMw.s 			page 243


3622:src/keys.c    **** 	set_window(c);
 7917              		.loc 1 3622 12 is_stmt 0 view .LVU2436
 7918 043e FFF7FEFF 		bl	is_bad_cmdline
 7919              	.LVL661:
3622:src/keys.c    **** 	set_window(c);
 7920              		.loc 1 3622 10 view .LVU2437
 7921 0442 0546     		mov	r5, r0
 7922 0444 0028     		cmp	r0, #0
 7923 0446 F7D1     		bne	.L1309
3623:src/keys.c    ****       break;
 7924              		.loc 1 3623 2 is_stmt 1 view .LVU2438
 7925 0448 2046     		mov	r0, r4
 7926 044a FFF7FEFF 		bl	set_window
 7927              	.LVL662:
 7928 044e 3368     		ldr	r3, [r6]
 7929 0450 31E6     		b	.L801
 7930              	.L1324:
3473:src/keys.c    ****       JustStopped = 0;
 7931              		.loc 1 3473 25 is_stmt 0 discriminator 1 view .LVU2439
 7932 0452 FFF7FEFF 		bl	is_key_pressed
 7933              	.LVL663:
3473:src/keys.c    ****       JustStopped = 0;
 7934              		.loc 1 3473 21 discriminator 1 view .LVU2440
 7935 0456 0028     		cmp	r0, #0
 7936 0458 7FF47BAE 		bne	.L785
3474:src/keys.c    ****     }
 7937              		.loc 1 3474 7 is_stmt 1 view .LVU2441
3474:src/keys.c    ****     }
 7938              		.loc 1 3474 19 is_stmt 0 view .LVU2442
 7939 045c 2860     		str	r0, [r5]
 7940 045e 78E6     		b	.L785
 7941              	.LVL664:
 7942              	.L808:
 7943              	.LBB1457:
 7944              	.LBB1390:
3219:src/keys.c    **** 	set_pc(0);
 7945              		.loc 1 3219 7 is_stmt 1 view .LVU2443
3219:src/keys.c    **** 	set_pc(0);
 7946              		.loc 1 3219 11 is_stmt 0 view .LVU2444
 7947 0460 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
3219:src/keys.c    **** 	set_pc(0);
 7948              		.loc 1 3219 10 view .LVU2445
 7949 0462 4BB1     		cbz	r3, .L810
3219:src/keys.c    **** 	set_pc(0);
 7950              		.loc 1 3219 20 view .LVU2446
 7951 0464 754B     		ldr	r3, .L1406+32
 7952 0466 1B68     		ldr	r3, [r3]
 7953 0468 B3F8E037 		ldrh	r3, [r3, #2016]
3219:src/keys.c    **** 	set_pc(0);
 7954              		.loc 1 3219 17 view .LVU2447
 7955 046c 9B0B     		lsrs	r3, r3, #14
 7956 046e 032B     		cmp	r3, #3
 7957 0470 02D1     		bne	.L810
3220:src/keys.c    ****       Pause = 0;
 7958              		.loc 1 3220 2 is_stmt 1 view .LVU2448
 7959 0472 0020     		movs	r0, #0
 7960 0474 FFF7FEFF 		bl	set_pc
ARM GAS  /tmp/cc6xzGMw.s 			page 244


 7961              	.LVL665:
 7962              	.L810:
3221:src/keys.c    ****       xeq_xrom();
 7963              		.loc 1 3221 7 view .LVU2449
3221:src/keys.c    ****       xeq_xrom();
 7964              		.loc 1 3221 13 is_stmt 0 view .LVU2450
 7965 0478 0025     		movs	r5, #0
 7966 047a 3D70     		strb	r5, [r7]
3222:src/keys.c    ****       set_running_off();
 7967              		.loc 1 3222 7 is_stmt 1 view .LVU2451
 7968 047c FFF7FEFF 		bl	xeq_xrom
 7969              	.LVL666:
3223:src/keys.c    ****       DispMsg = "Stopped";
 7970              		.loc 1 3223 7 view .LVU2452
 7971 0480 FFF7FEFF 		bl	set_running_off
 7972              	.LVL667:
3224:src/keys.c    ****       State2.disp_freeze = 0;
 7973              		.loc 1 3224 7 view .LVU2453
3225:src/keys.c    ****       return STATE_UNFINISHED;
 7974              		.loc 1 3225 26 is_stmt 0 view .LVU2454
 7975 0484 654A     		ldr	r2, .L1406
3224:src/keys.c    ****       State2.disp_freeze = 0;
 7976              		.loc 1 3224 15 view .LVU2455
 7977 0486 6E48     		ldr	r0, .L1406+36
3225:src/keys.c    ****       return STATE_UNFINISHED;
 7978              		.loc 1 3225 26 view .LVU2456
 7979 0488 D17D     		ldrb	r1, [r2, #23]	@ zero_extendqisi2
3224:src/keys.c    ****       State2.disp_freeze = 0;
 7980              		.loc 1 3224 15 view .LVU2457
 7981 048a 6E4C     		ldr	r4, .L1406+40
 7982              	.LVL668:
3224:src/keys.c    ****       State2.disp_freeze = 0;
 7983              		.loc 1 3224 15 view .LVU2458
 7984 048c 0460     		str	r4, [r0]
3225:src/keys.c    ****       return STATE_UNFINISHED;
 7985              		.loc 1 3225 7 is_stmt 1 view .LVU2459
3225:src/keys.c    ****       return STATE_UNFINISHED;
 7986              		.loc 1 3225 26 is_stmt 0 view .LVU2460
 7987 048e 65F30411 		bfi	r1, r5, #4, #1
 7988 0492 3368     		ldr	r3, [r6]
 7989 0494 D175     		strb	r1, [r2, #23]
3226:src/keys.c    ****     }
 7990              		.loc 1 3226 7 is_stmt 1 view .LVU2461
3226:src/keys.c    ****     }
 7991              		.loc 1 3226 14 is_stmt 0 view .LVU2462
 7992 0496 3324     		movs	r4, #51
 7993 0498 0DE6     		b	.L801
 7994              	.LVL669:
 7995              	.L1015:
 7996              	.LBB967:
 7997              	.LBB968:
1816:src/keys.c    **** 			return STATE_BACKSPACE;
 7998              		.loc 1 1816 3 is_stmt 1 view .LVU2463
1816:src/keys.c    **** 			return STATE_BACKSPACE;
 7999              		.loc 1 1816 6 is_stmt 0 view .LVU2464
 8000 049a 0028     		cmp	r0, #0
 8001 049c 41F0DD83 		bne	.L1025
ARM GAS  /tmp/cc6xzGMw.s 			page 245


 8002              	.LVL670:
 8003              	.L1024:
1816:src/keys.c    **** 			return STATE_BACKSPACE;
 8004              		.loc 1 1816 6 view .LVU2465
 8005              	.LBE968:
 8006              	.LBE967:
 8007              	.LBE1390:
 8008              	.LBE1457:
3607:src/keys.c    **** 	delprog();
 8009              		.loc 1 3607 7 is_stmt 1 view .LVU2466
3607:src/keys.c    **** 	delprog();
 8010              		.loc 1 3607 11 is_stmt 0 view .LVU2467
 8011 04a0 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3607:src/keys.c    **** 	delprog();
 8012              		.loc 1 3607 10 view .LVU2468
 8013 04a4 13F04005 		ands	r5, r3, #64
 8014 04a8 00F0A780 		beq	.L1351
3609:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 8015              		.loc 1 3609 12 is_stmt 1 view .LVU2469
3609:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 8016              		.loc 1 3609 15 is_stmt 0 view .LVU2470
 8017 04ac 13F00805 		ands	r5, r3, #8
 8018 04b0 40F08280 		bne	.L1102
 8019              	.L1310:
 8020 04b4 3368     		ldr	r3, [r6]
 8021              	.LBB1458:
3612:src/keys.c    ****       }
 8022              		.loc 1 3612 9 view .LVU2471
 8023 04b6 3024     		movs	r4, #48
 8024 04b8 FDE5     		b	.L801
 8025              	.L1027:
 8026              	.LBE1458:
3603:src/keys.c    ****       break;
 8027              		.loc 1 3603 7 is_stmt 1 view .LVU2472
 8028 04ba 4FF0FF30 		mov	r0, #-1
 8029 04be FFF7FEFF 		bl	xeq_sst_bst
 8030              	.LVL671:
3604:src/keys.c    **** 
 8031              		.loc 1 3604 7 view .LVU2473
3405:src/keys.c    ****   //print_debug(60,c);
 8032              		.loc 1 3405 7 is_stmt 0 view .LVU2474
 8033 04c2 0025     		movs	r5, #0
 8034 04c4 3368     		ldr	r3, [r6]
3604:src/keys.c    **** 
 8035              		.loc 1 3604 7 view .LVU2475
 8036 04c6 2F24     		movs	r4, #47
 8037 04c8 F5E5     		b	.L801
 8038              	.L1031:
3597:src/keys.c    ****       OpCodeDisplayPending = 0;
 8039              		.loc 1 3597 7 is_stmt 1 view .LVU2476
3597:src/keys.c    ****       OpCodeDisplayPending = 0;
 8040              		.loc 1 3597 14 is_stmt 0 view .LVU2477
 8041 04ca 594A     		ldr	r2, .L1406+20
3598:src/keys.c    ****       xeq_sst_bst(0);
 8042              		.loc 1 3598 28 view .LVU2478
 8043 04cc 5E4B     		ldr	r3, .L1406+44
 8044 04ce 0020     		movs	r0, #0
ARM GAS  /tmp/cc6xzGMw.s 			page 246


3597:src/keys.c    ****       OpCodeDisplayPending = 0;
 8045              		.loc 1 3597 14 view .LVU2479
 8046 04d0 2E24     		movs	r4, #46
 8047 04d2 1460     		str	r4, [r2]
3598:src/keys.c    ****       xeq_sst_bst(0);
 8048              		.loc 1 3598 7 is_stmt 1 view .LVU2480
3598:src/keys.c    ****       xeq_sst_bst(0);
 8049              		.loc 1 3598 28 is_stmt 0 view .LVU2481
 8050 04d4 1860     		str	r0, [r3]
3599:src/keys.c    ****       break;
 8051              		.loc 1 3599 7 is_stmt 1 view .LVU2482
3405:src/keys.c    ****   //print_debug(60,c);
 8052              		.loc 1 3405 7 is_stmt 0 view .LVU2483
 8053 04d6 0546     		mov	r5, r0
3599:src/keys.c    ****       break;
 8054              		.loc 1 3599 7 view .LVU2484
 8055 04d8 FFF7FEFF 		bl	xeq_sst_bst
 8056              	.LVL672:
 8057 04dc EAE5     		b	.L1308
 8058              	.LVL673:
 8059              	.L1320:
3599:src/keys.c    ****       break;
 8060              		.loc 1 3599 7 view .LVU2485
 8061 04de 524E     		ldr	r6, .L1406+12
 8062 04e0 3368     		ldr	r3, [r6]
 8063 04e2 3BE6     		b	.L787
 8064              	.L1319:
3495:src/keys.c    ****       finish_RPN(); // RPN
 8065              		.loc 1 3495 7 is_stmt 1 view .LVU2486
 8066 04e4 8D20     		movs	r0, #141
 8067 04e6 FFF7FEFF 		bl	clr_dot
 8068              	.LVL674:
3496:src/keys.c    ****     }
 8069              		.loc 1 3496 7 view .LVU2487
 8070 04ea FFF7FEFF 		bl	finish_RPN
 8071              	.LVL675:
 8072 04ee AAE5     		b	.L789
 8073              	.L800:
3558:src/keys.c    ****     }
 8074              		.loc 1 3558 7 view .LVU2488
 8075 04f0 FFF7FEFF 		bl	finish_RPN
 8076              	.LVL676:
3405:src/keys.c    ****   //print_debug(60,c);
 8077              		.loc 1 3405 7 is_stmt 0 view .LVU2489
 8078 04f4 0025     		movs	r5, #0
 8079 04f6 3368     		ldr	r3, [r6]
 8080 04f8 DDE5     		b	.L801
 8081              	.L1092:
3589:src/keys.c    ****       }      
 8082              		.loc 1 3589 2 is_stmt 1 view .LVU2490
 8083              	.LBB1459:
 8084              	.LBB1453:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 8085              		.loc 1 705 5 is_stmt 0 view .LVU2491
 8086 04fa C0F30723 		ubfx	r3, r0, #8, #8
 8087 04fe 012B     		cmp	r3, #1
 8088              	.LBE1453:
ARM GAS  /tmp/cc6xzGMw.s 			page 247


 8089              	.LBE1459:
3589:src/keys.c    ****       }      
 8090              		.loc 1 3589 6 view .LVU2492
 8091 0500 0446     		mov	r4, r0
 8092              	.LVL677:
 8093              	.LBB1460:
 704:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8094              		.loc 1 704 12 is_stmt 1 view .LVU2493
 8095              	.LBB1454:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 8096              		.loc 1 705 2 view .LVU2494
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 8097              		.loc 1 705 5 is_stmt 0 view .LVU2495
 8098 0502 6AD1     		bne	.L1352
 8099              	.LVL678:
 8100              	.L1125:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 8101              		.loc 1 705 5 view .LVU2496
 8102 0504 FFF7FEFF 		bl	check_confirm.part.0
 8103              	.LVL679:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 8104              		.loc 1 705 5 view .LVU2497
 8105 0508 0446     		mov	r4, r0
 8106              	.LVL680:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 8107              		.loc 1 705 5 view .LVU2498
 8108 050a 69E7     		b	.L835
 8109              	.LVL681:
 8110              	.L792:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 8111              		.loc 1 705 5 view .LVU2499
 8112              	.LBE1454:
 8113              	.LBE1460:
3539:src/keys.c    **** #ifndef CONSOLE
 8114              		.loc 1 3539 7 is_stmt 1 view .LVU2500
 8115 050c 474B     		ldr	r3, .L1406+16
 8116 050e 8D20     		movs	r0, #141
 8117 0510 1968     		ldr	r1, [r3]
 8118 0512 FFF7FEFF 		bl	dot
 8119              	.LVL682:
3541:src/keys.c    **** 	if (!WasDataEntry) {
 8120              		.loc 1 3541 7 view .LVU2501
3541:src/keys.c    **** 	if (!WasDataEntry) {
 8121              		.loc 1 3541 11 is_stmt 0 view .LVU2502
 8122 0516 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3541:src/keys.c    **** 	if (!WasDataEntry) {
 8123              		.loc 1 3541 10 view .LVU2503
 8124 051a 9806     		lsls	r0, r3, #26
 8125 051c 3FF5F1AD 		bmi	.L770
3542:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 8126              		.loc 1 3542 2 is_stmt 1 view .LVU2504
3542:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 8127              		.loc 1 3542 6 is_stmt 0 view .LVU2505
 8128 0520 4A4B     		ldr	r3, .L1406+48
3542:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 8129              		.loc 1 3542 5 view .LVU2506
 8130 0522 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc6xzGMw.s 			page 248


 8131 0524 002B     		cmp	r3, #0
 8132 0526 40F09780 		bne	.L803
3544:src/keys.c    **** 	}
 8133              		.loc 1 3544 4 is_stmt 1 view .LVU2507
 8134              		.loc 1 3673 1 is_stmt 0 view .LVU2508
 8135 052a 03B0     		add	sp, sp, #12
 8136              		.cfi_remember_state
 8137              		.cfi_def_cfa_offset 36
 8138              		@ sp needed
 8139 052c BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8140              		.cfi_restore 14
 8141              		.cfi_restore 11
 8142              		.cfi_restore 10
 8143              		.cfi_restore 9
 8144              		.cfi_restore 8
 8145              		.cfi_restore 7
 8146              		.cfi_restore 6
 8147              		.cfi_restore 5
 8148              		.cfi_restore 4
 8149              		.cfi_def_cfa_offset 0
 8150              	.LVL683:
3544:src/keys.c    **** 	}
 8151              		.loc 1 3544 4 view .LVU2509
 8152 0530 FFF7FEBF 		b	display
 8153              	.LVL684:
 8154              	.L1321:
 8155              		.cfi_restore_state
3527:src/keys.c    ****       else {
 8156              		.loc 1 3527 2 is_stmt 1 view .LVU2510
 8157 0534 FFF7FEFF 		bl	xeq_sst_bst
 8158              	.LVL685:
3527:src/keys.c    ****       else {
 8159              		.loc 1 3527 2 is_stmt 0 view .LVU2511
 8160 0538 3B4E     		ldr	r6, .L1406+12
 8161 053a B2E5     		b	.L794
 8162              	.L1323:
3458:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 8163              		.loc 1 3458 28 discriminator 1 view .LVU2512
 8164 053c FFF7FEFF 		bl	shift_down
 8165              	.LVL686:
3458:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 8166              		.loc 1 3458 25 discriminator 1 view .LVU2513
 8167 0540 0028     		cmp	r0, #0
 8168 0542 3FF401AE 		beq	.L776
3460:src/keys.c    ****       }
 8169              		.loc 1 3460 2 is_stmt 1 view .LVU2514
3460:src/keys.c    ****       }
 8170              		.loc 1 3460 16 is_stmt 0 view .LVU2515
 8171 0546 354B     		ldr	r3, .L1406
 8172 0548 0022     		movs	r2, #0
 8173 054a 1A74     		strb	r2, [r3, #16]
 8174 054c FCE5     		b	.L776
 8175              	.L1322:
3460:src/keys.c    ****       }
 8176              		.loc 1 3460 16 view .LVU2516
 8177 054e 364E     		ldr	r6, .L1406+12
 8178 0550 A7E5     		b	.L794
ARM GAS  /tmp/cc6xzGMw.s 			page 249


 8179              	.L779:
3448:src/keys.c    **** 	  /*
 8180              		.loc 1 3448 10 is_stmt 1 view .LVU2517
3448:src/keys.c    **** 	  /*
 8181              		.loc 1 3448 14 is_stmt 0 view .LVU2518
 8182 0552 FFF7FEFF 		bl	keyticks
 8183              	.LVL687:
3448:src/keys.c    **** 	  /*
 8184              		.loc 1 3448 13 view .LVU2519
 8185 0556 0C28     		cmp	r0, #12
 8186 0558 7FF7F1AD 		ble	.L778
3452:src/keys.c    **** 	  message("NULL", CNULL);
 8187              		.loc 1 3452 4 is_stmt 1 view .LVU2520
3453:src/keys.c    **** 	  // Force display update on key-up
 8188              		.loc 1 3453 4 is_stmt 0 view .LVU2521
 8189 055c 3C48     		ldr	r0, .L1406+52
3452:src/keys.c    **** 	  message("NULL", CNULL);
 8190              		.loc 1 3452 11 view .LVU2522
 8191 055e 2E60     		str	r6, [r5]
3453:src/keys.c    **** 	  // Force display update on key-up
 8192              		.loc 1 3453 4 is_stmt 1 view .LVU2523
 8193 0560 3146     		mov	r1, r6
 8194 0562 FFF7FEFF 		bl	message
 8195              	.LVL688:
3455:src/keys.c    **** 	}
 8196              		.loc 1 3455 4 view .LVU2524
3455:src/keys.c    **** 	}
 8197              		.loc 1 3455 21 is_stmt 0 view .LVU2525
 8198 0566 2D4B     		ldr	r3, .L1406
 8199 0568 DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 8200 056a 66F34512 		bfi	r2, r6, #5, #1
 8201 056e DA75     		strb	r2, [r3, #23]
 8202 0570 E5E5     		b	.L778
 8203              	.L1097:
3631:src/keys.c    **** 	NonProgrammable = 0;
 8204              		.loc 1 3631 11 view .LVU2526
 8205 0572 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 8206 0576 304A     		ldr	r2, .L1406+28
3631:src/keys.c    **** 	NonProgrammable = 0;
 8207              		.loc 1 3631 10 view .LVU2527
 8208 0578 5D06     		lsls	r5, r3, #25
 8209 057a 2046     		mov	r0, r4
 8210              	.LVL689:
3631:src/keys.c    **** 	NonProgrammable = 0;
 8211              		.loc 1 3631 7 is_stmt 1 view .LVU2528
3631:src/keys.c    **** 	NonProgrammable = 0;
 8212              		.loc 1 3631 10 is_stmt 0 view .LVU2529
 8213 057c 41F1E183 		bpl	.L1295
 8214              	.L1108:
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8215              		.loc 1 3632 2 is_stmt 1 view .LVU2530
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8216              		.loc 1 3632 18 is_stmt 0 view .LVU2531
 8217 0580 0023     		movs	r3, #0
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8218              		.loc 1 3633 5 view .LVU2532
 8219 0582 142C     		cmp	r4, #20
ARM GAS  /tmp/cc6xzGMw.s 			page 250


3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8220              		.loc 1 3632 18 view .LVU2533
 8221 0584 1360     		str	r3, [r2]
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8222              		.loc 1 3633 2 is_stmt 1 view .LVU2534
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8223              		.loc 1 3633 5 is_stmt 0 view .LVU2535
 8224 0586 2FD8     		bhi	.L1106
3634:src/keys.c    **** 	    // Data entry key
 8225              		.loc 1 3634 4 is_stmt 1 view .LVU2536
3634:src/keys.c    **** 	    // Data entry key
 8226              		.loc 1 3634 7 is_stmt 0 view .LVU2537
 8227 0588 24B9     		cbnz	r4, .L1111
3634:src/keys.c    **** 	    // Data entry key
 8228              		.loc 1 3634 38 discriminator 1 view .LVU2538
 8229 058a FFF7FEFF 		bl	is_bad_cmdline
 8230              	.LVL690:
3634:src/keys.c    **** 	    // Data entry key
 8231              		.loc 1 3634 34 discriminator 1 view .LVU2539
 8232 058e 0028     		cmp	r0, #0
 8233 0590 7FF452AF 		bne	.L1309
 8234              	.L1111:
3637:src/keys.c    **** #endif
 8235              		.loc 1 3637 6 is_stmt 1 view .LVU2540
3639:src/keys.c    **** 	    xeq(c);
 8236              		.loc 1 3639 37 is_stmt 0 view .LVU2541
 8237 0594 98F81C50 		ldrb	r5, [r8, #28]	@ zero_extendqisi2
3637:src/keys.c    **** #endif
 8238              		.loc 1 3637 19 view .LVU2542
 8239 0598 0123     		movs	r3, #1
3640:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 8240              		.loc 1 3640 6 view .LVU2543
 8241 059a 2046     		mov	r0, r4
3637:src/keys.c    **** #endif
 8242              		.loc 1 3637 19 view .LVU2544
 8243 059c C9F80030 		str	r3, [r9]
3639:src/keys.c    **** 	    xeq(c);
 8244              		.loc 1 3639 6 is_stmt 1 view .LVU2545
3639:src/keys.c    **** 	    xeq(c);
 8245              		.loc 1 3639 37 is_stmt 0 view .LVU2546
 8246 05a0 B5FA85F5 		clz	r5, r5
3640:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 8247              		.loc 1 3640 6 view .LVU2547
 8248 05a4 FFF7FEFF 		bl	xeq
 8249              	.LVL691:
3641:src/keys.c    **** 	  }
 8250              		.loc 1 3641 38 view .LVU2548
 8251 05a8 98F81C00 		ldrb	r0, [r8, #28]	@ zero_extendqisi2
 8252 05ac 3368     		ldr	r3, [r6]
3639:src/keys.c    **** 	    xeq(c);
 8253              		.loc 1 3639 37 view .LVU2549
 8254 05ae 6D09     		lsrs	r5, r5, #5
 8255              	.LVL692:
3640:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 8256              		.loc 1 3640 6 is_stmt 1 view .LVU2550
3641:src/keys.c    **** 	  }
 8257              		.loc 1 3641 6 view .LVU2551
ARM GAS  /tmp/cc6xzGMw.s 			page 251


3641:src/keys.c    **** 	  }
 8258              		.loc 1 3641 20 is_stmt 0 view .LVU2552
 8259 05b0 0028     		cmp	r0, #0
 8260 05b2 08BF     		it	eq
 8261 05b4 0125     		moveq	r5, #1
 8262              	.LVL693:
3641:src/keys.c    **** 	  }
 8263              		.loc 1 3641 20 view .LVU2553
 8264 05b6 7EE5     		b	.L801
 8265              	.LVL694:
 8266              	.L1102:
 8267              	.LBB1461:
3610:src/keys.c    **** 	if (p > Alpha)
 8268              		.loc 1 3610 2 is_stmt 1 view .LVU2554
3610:src/keys.c    **** 	if (p > Alpha)
 8269              		.loc 1 3610 22 is_stmt 0 view .LVU2555
 8270 05b8 204C     		ldr	r4, .L1406+32
 8271 05ba 2068     		ldr	r0, [r4]
3610:src/keys.c    **** 	if (p > Alpha)
 8272              		.loc 1 3610 12 view .LVU2556
 8273 05bc 0021     		movs	r1, #0
 8274 05be 00F5F660 		add	r0, r0, #1968
 8275 05c2 FFF7FEFF 		bl	find_char
 8276              	.LVL695:
3611:src/keys.c    **** 	  *--p = '\0';
 8277              		.loc 1 3611 8 view .LVU2557
 8278 05c6 2368     		ldr	r3, [r4]
 8279              	.LVL696:
3611:src/keys.c    **** 	  *--p = '\0';
 8280              		.loc 1 3611 2 is_stmt 1 view .LVU2558
3611:src/keys.c    **** 	  *--p = '\0';
 8281              		.loc 1 3611 8 is_stmt 0 view .LVU2559
 8282 05c8 03F5F663 		add	r3, r3, #1968
3611:src/keys.c    **** 	  *--p = '\0';
 8283              		.loc 1 3611 5 view .LVU2560
 8284 05cc 9842     		cmp	r0, r3
 8285 05ce 00F2DD80 		bhi	.L1103
 8286 05d2 3368     		ldr	r3, [r6]
 8287              	.LBE1461:
3405:src/keys.c    ****   //print_debug(60,c);
 8288              		.loc 1 3405 7 view .LVU2561
 8289 05d4 0025     		movs	r5, #0
 8290              	.LBB1462:
3611:src/keys.c    **** 	  *--p = '\0';
 8291              		.loc 1 3611 5 view .LVU2562
 8292 05d6 3024     		movs	r4, #48
 8293 05d8 6DE5     		b	.L801
 8294              	.LVL697:
 8295              	.L1352:
3611:src/keys.c    **** 	  *--p = '\0';
 8296              		.loc 1 3611 5 view .LVU2563
 8297              	.LBE1462:
3631:src/keys.c    **** 	NonProgrammable = 0;
 8298              		.loc 1 3631 7 is_stmt 1 view .LVU2564
3631:src/keys.c    **** 	NonProgrammable = 0;
 8299              		.loc 1 3631 11 is_stmt 0 view .LVU2565
 8300 05da 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
ARM GAS  /tmp/cc6xzGMw.s 			page 252


3631:src/keys.c    **** 	NonProgrammable = 0;
 8301              		.loc 1 3631 10 view .LVU2566
 8302 05de 5B06     		lsls	r3, r3, #25
 8303 05e0 7FF523AF 		bpl	.L1120
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8304              		.loc 1 3632 2 is_stmt 1 view .LVU2567
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8305              		.loc 1 3632 18 is_stmt 0 view .LVU2568
 8306 05e4 144B     		ldr	r3, .L1406+28
 8307 05e6 1D60     		str	r5, [r3]
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8308              		.loc 1 3633 2 is_stmt 1 view .LVU2569
 8309              	.LVL698:
 8310              	.L1106:
3647:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 8311              		.loc 1 3647 4 view .LVU2570
3647:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 8312              		.loc 1 3647 11 is_stmt 0 view .LVU2571
 8313 05e8 114A     		ldr	r2, .L1406+20
3648:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 8314              		.loc 1 3648 25 view .LVU2572
 8315 05ea 174B     		ldr	r3, .L1406+44
3647:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 8316              		.loc 1 3647 11 view .LVU2573
 8317 05ec 1060     		str	r0, [r2]
3648:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 8318              		.loc 1 3648 4 is_stmt 1 view .LVU2574
3648:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 8319              		.loc 1 3648 25 is_stmt 0 view .LVU2575
 8320 05ee 0122     		movs	r2, #1
 8321 05f0 0C4E     		ldr	r6, .L1406+8
 8322 05f2 1A60     		str	r2, [r3]
3649:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
 8323              		.loc 1 3649 4 is_stmt 1 view .LVU2576
 8324 05f4 FFF7FEFF 		bl	finish_RPN
 8325              	.LVL699:
3650:src/keys.c    **** 	}
 8326              		.loc 1 3650 4 view .LVU2577
 8327 05f8 81E5     		b	.L1112
 8328              	.L1351:
3608:src/keys.c    ****       else if (State2.alphas) {
 8329              		.loc 1 3608 2 view .LVU2578
 8330 05fa FFF7FEFF 		bl	delprog
 8331              	.LVL700:
 8332 05fe 3024     		movs	r4, #48
 8333 0600 3368     		ldr	r3, [r6]
 8334 0602 58E5     		b	.L801
 8335              	.LVL701:
 8336              	.L780:
3442:src/keys.c    **** 	    DispMsg = TraceBuffer;
 8337              		.loc 1 3442 6 view .LVU2579
 8338 0604 134E     		ldr	r6, .L1406+56
 8339 0606 3146     		mov	r1, r6
 8340 0608 FFF7FEFF 		bl	prt
 8341              	.LVL702:
 8342 060c 2A46     		mov	r2, r5
 8343 060e 0146     		mov	r1, r0
ARM GAS  /tmp/cc6xzGMw.s 			page 253


 8344 0610 3046     		mov	r0, r6
 8345 0612 FFF7FEFF 		bl	scopy_char
 8346              	.LVL703:
3443:src/keys.c    **** 	  }
 8347              		.loc 1 3443 6 view .LVU2580
3443:src/keys.c    **** 	  }
 8348              		.loc 1 3443 14 is_stmt 0 view .LVU2581
 8349 0616 0A4B     		ldr	r3, .L1406+36
 8350 0618 1E60     		str	r6, [r3]
 8351 061a 8BE5     		b	.L781
 8352              	.L1407:
 8353              		.align	2
 8354              	.L1406:
 8355 061c 00000000 		.word	StateWhileOn
 8356 0620 00000000 		.word	GoFast
 8357 0624 00000000 		.word	JustDisplayed
 8358 0628 00000000 		.word	Running
 8359 062c 00000000 		.word	ShowRPN
 8360 0630 00000000 		.word	OpCode
 8361 0634 00000000 		.word	nd_opcode
 8362 0638 00000000 		.word	NonProgrammable
 8363 063c 00000000 		.word	main_ram
 8364 0640 00000000 		.word	DispMsg
 8365 0644 0C000000 		.word	.LC2
 8366 0648 00000000 		.word	OpCodeDisplayPending
 8367 064c 00000000 		.word	WasDataEntry
 8368 0650 04000000 		.word	.LC1
 8369 0654 00000000 		.word	TraceBuffer
 8370              	.L803:
3547:src/keys.c    **** 	}
 8371              		.loc 1 3547 4 is_stmt 1 view .LVU2582
 8372              		.loc 1 3673 1 is_stmt 0 view .LVU2583
 8373 0658 03B0     		add	sp, sp, #12
 8374              		.cfi_remember_state
 8375              		.cfi_def_cfa_offset 36
 8376              		@ sp needed
 8377 065a BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8378              		.cfi_restore 14
 8379              		.cfi_restore 11
 8380              		.cfi_restore 10
 8381              		.cfi_restore 9
 8382              		.cfi_restore 8
 8383              		.cfi_restore 7
 8384              		.cfi_restore 6
 8385              		.cfi_restore 5
 8386              		.cfi_restore 4
 8387              		.cfi_def_cfa_offset 0
 8388              	.LVL704:
3547:src/keys.c    **** 	}
 8389              		.loc 1 3547 4 view .LVU2584
 8390 065e FFF7FEBF 		b	finish_RPN
 8391              	.LVL705:
 8392              	.L1349:
 8393              		.cfi_restore_state
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8394              		.loc 1 3632 2 is_stmt 1 view .LVU2585
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
ARM GAS  /tmp/cc6xzGMw.s 			page 254


 8395              		.loc 1 3632 18 is_stmt 0 view .LVU2586
 8396 0662 BF4B     		ldr	r3, .L1408
 8397 0664 0022     		movs	r2, #0
 8398 0666 1A60     		str	r2, [r3]
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8399              		.loc 1 3633 2 is_stmt 1 view .LVU2587
 8400 0668 BEE7     		b	.L1106
 8401              	.LVL706:
 8402              	.L1328:
 8403              	.LBB1463:
 8404              	.LBB1391:
3275:src/keys.c    **** 
 8405              		.loc 1 3275 3 view .LVU2588
 8406              	.LBB1030:
 8407              	.LBI1030:
2877:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
 8408              		.loc 1 2877 12 view .LVU2589
 8409              	.LBB1031:
2879:src/keys.c    **** #ifdef DM42
 8410              		.loc 1 2879 2 view .LVU2590
 8411 066a E4B2     		uxtb	r4, r4
 8412              	.LVL707:
2879:src/keys.c    **** #ifdef DM42
 8413              		.loc 1 2879 2 is_stmt 0 view .LVU2591
 8414 066c A4F10E03 		sub	r3, r4, #14
 8415 0670 192B     		cmp	r3, #25
 8416 0672 3AD8     		bhi	.L1313
 8417 0674 DFE803F0 		tbb	[pc, r3]
 8418              	.L827:
 8419 0678 3E       		.byte	(.L828-.L827)/2
 8420 0679 39       		.byte	(.L1313-.L827)/2
 8421 067a 3E       		.byte	(.L828-.L827)/2
 8422 067b 39       		.byte	(.L1313-.L827)/2
 8423 067c 39       		.byte	(.L1313-.L827)/2
 8424 067d 39       		.byte	(.L1313-.L827)/2
 8425 067e 39       		.byte	(.L1313-.L827)/2
 8426 067f 39       		.byte	(.L1313-.L827)/2
 8427 0680 39       		.byte	(.L1313-.L827)/2
 8428 0681 39       		.byte	(.L1313-.L827)/2
 8429 0682 39       		.byte	(.L1313-.L827)/2
 8430 0683 39       		.byte	(.L1313-.L827)/2
 8431 0684 39       		.byte	(.L1313-.L827)/2
 8432 0685 39       		.byte	(.L1313-.L827)/2
 8433 0686 39       		.byte	(.L1313-.L827)/2
 8434 0687 39       		.byte	(.L1313-.L827)/2
 8435 0688 39       		.byte	(.L1313-.L827)/2
 8436 0689 39       		.byte	(.L1313-.L827)/2
 8437 068a 4A       		.byte	(.L826-.L827)/2
 8438 068b 39       		.byte	(.L1313-.L827)/2
 8439 068c 39       		.byte	(.L1313-.L827)/2
 8440 068d 39       		.byte	(.L1313-.L827)/2
 8441 068e 39       		.byte	(.L1313-.L827)/2
 8442 068f 39       		.byte	(.L1313-.L827)/2
 8443 0690 39       		.byte	(.L1313-.L827)/2
 8444 0691 4A       		.byte	(.L826-.L827)/2
 8445              	.LVL708:
 8446              		.p2align 1
ARM GAS  /tmp/cc6xzGMw.s 			page 255


 8447              	.L1338:
2879:src/keys.c    **** #ifdef DM42
 8448              		.loc 1 2879 2 view .LVU2592
 8449              	.LBE1031:
 8450              	.LBE1030:
 8451              	.LBB1034:
 8452              	.LBB835:
 277:src/keys.c    **** 			switch (c) {
 8453              		.loc 1 277 3 is_stmt 1 view .LVU2593
 277:src/keys.c    **** 			switch (c) {
 8454              		.loc 1 277 6 is_stmt 0 view .LVU2594
 8455 0692 BBF1030F 		cmp	fp, #3
 8456 0696 00F01282 		beq	.L1353
 294:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 8457              		.loc 1 294 3 is_stmt 1 view .LVU2595
 294:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 8458              		.loc 1 294 6 is_stmt 0 view .LVU2596
 8459 069a BBF1020F 		cmp	fp, #2
 8460 069e 00F0A485 		beq	.L1354
 296:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 8461              		.loc 1 296 3 is_stmt 1 view .LVU2597
 296:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 8462              		.loc 1 296 6 is_stmt 0 view .LVU2598
 8463 06a2 BBF1010F 		cmp	fp, #1
 8464 06a6 7FF4EAAD 		bne	.L927
 296:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 8465              		.loc 1 296 27 view .LVU2599
 8466 06aa 0C2C     		cmp	r4, #12
 8467 06ac 7FF4E7AD 		bne	.L927
 297:src/keys.c    **** 				SET_REAL;
 8468              		.loc 1 297 4 is_stmt 1 view .LVU2600
 297:src/keys.c    **** 				SET_REAL;
 8469              		.loc 1 297 7 is_stmt 0 view .LVU2601
 8470 06b0 11F0060F 		tst	r1, #6
 8471 06b4 01F04980 		beq	.L1355
 301:src/keys.c    **** 				CmdLineLength = 0;
 8472              		.loc 1 301 9 is_stmt 1 view .LVU2602
 301:src/keys.c    **** 				CmdLineLength = 0;
 8473              		.loc 1 301 12 is_stmt 0 view .LVU2603
 8474 06b8 98F81C30 		ldrb	r3, [r8, #28]	@ zero_extendqisi2
 8475 06bc 002B     		cmp	r3, #0
 8476 06be 01F04180 		beq	.L1143
 302:src/keys.c    **** 				CmdLineEex = 0;
 8477              		.loc 1 302 5 is_stmt 1 view .LVU2604
 303:src/keys.c    **** 				CmdLineDot = 0;
 8478              		.loc 1 303 5 view .LVU2605
 304:src/keys.c    **** 			}
 8479              		.loc 1 304 5 view .LVU2606
 302:src/keys.c    **** 				CmdLineEex = 0;
 8480              		.loc 1 302 19 is_stmt 0 view .LVU2607
 8481 06c2 0023     		movs	r3, #0
 8482 06c4 A8F81C30 		strh	r3, [r8, #28]	@ movhi
 304:src/keys.c    **** 			}
 8483              		.loc 1 304 16 view .LVU2608
 8484 06c8 88F81E30 		strb	r3, [r8, #30]
 8485              	.LVL709:
 304:src/keys.c    **** 			}
ARM GAS  /tmp/cc6xzGMw.s 			page 256


 8486              		.loc 1 304 16 view .LVU2609
 8487              	.LBE835:
 8488              	.LBE1034:
3321:src/keys.c    **** 		if (is_bad_cmdline())
 8489              		.loc 1 3321 2 is_stmt 1 view .LVU2610
 8490              	.LBB1035:
 8491              	.LBB836:
 306:src/keys.c    **** 		}
 8492              		.loc 1 306 11 is_stmt 0 view .LVU2611
 8493 06cc 1023     		movs	r3, #16
 8494              	.LVL710:
 8495              	.L910:
 306:src/keys.c    **** 		}
 8496              		.loc 1 306 11 view .LVU2612
 8497              	.LBE836:
 8498              	.LBE1035:
3322:src/keys.c    **** 			return STATE_UNFINISHED;
 8499              		.loc 1 3322 3 is_stmt 1 view .LVU2613
 8500 06ce 0093     		str	r3, [sp]
3322:src/keys.c    **** 			return STATE_UNFINISHED;
 8501              		.loc 1 3322 7 is_stmt 0 view .LVU2614
 8502 06d0 FFF7FEFF 		bl	is_bad_cmdline
 8503              	.LVL711:
3322:src/keys.c    **** 			return STATE_UNFINISHED;
 8504              		.loc 1 3322 6 view .LVU2615
 8505 06d4 009B     		ldr	r3, [sp]
 8506 06d6 0446     		mov	r4, r0
 8507 06d8 38B9     		cbnz	r0, .L1313
 8508 06da 0093     		str	r3, [sp]
3324:src/keys.c    **** 		init_cat( cat );
 8509              		.loc 1 3324 3 is_stmt 1 view .LVU2616
 8510 06dc FFF7FEFF 		bl	init_cat
 8511              	.LVL712:
3325:src/keys.c    **** 		return STATE_UNFINISHED;
 8512              		.loc 1 3325 3 view .LVU2617
 8513 06e0 009B     		ldr	r3, [sp]
 8514 06e2 1846     		mov	r0, r3
 8515 06e4 FFF7FEFF 		bl	init_cat
 8516              	.LVL713:
3326:src/keys.c    **** 	}
 8517              		.loc 1 3326 3 view .LVU2618
 8518              	.LBE1391:
 8519              	.LBE1463:
3405:src/keys.c    ****   //print_debug(60,c);
 8520              		.loc 1 3405 7 is_stmt 0 view .LVU2619
 8521 06e8 2546     		mov	r5, r4
 8522              	.LVL714:
 8523              	.L1313:
3405:src/keys.c    ****   //print_debug(60,c);
 8524              		.loc 1 3405 7 view .LVU2620
 8525 06ea 3368     		ldr	r3, [r6]
 8526              	.LBB1464:
 8527              	.LBB1392:
3326:src/keys.c    **** 	}
 8528              		.loc 1 3326 10 view .LVU2621
 8529 06ec 3324     		movs	r4, #51
 8530 06ee E2E4     		b	.L801
ARM GAS  /tmp/cc6xzGMw.s 			page 257


 8531              	.LVL715:
 8532              	.L829:
 8533              	.LBB1036:
 8534              	.LBB1032:
2888:src/keys.c    **** 	  }
 8535              		.loc 1 2888 26 is_stmt 1 view .LVU2622
 8536 06f0 FFF7FEFF 		bl	clpall
 8537              	.LVL716:
2888:src/keys.c    **** 	  }
 8538              		.loc 1 2888 36 view .LVU2623
 8539              	.L828:
2897:src/keys.c    **** 	  State2.digval = 0;
 8540              		.loc 1 2897 4 view .LVU2624
2897:src/keys.c    **** 	  State2.digval = 0;
 8541              		.loc 1 2897 19 is_stmt 0 view .LVU2625
 8542 06f4 98F81420 		ldrb	r2, [r8, #20]	@ zero_extendqisi2
 8543 06f8 3368     		ldr	r3, [r6]
 8544 06fa 6FF30202 		bfc	r2, #0, #3
2898:src/keys.c    **** 	  break;
 8545              		.loc 1 2898 18 view .LVU2626
 8546 06fe 0021     		movs	r1, #0
2897:src/keys.c    **** 	  State2.digval = 0;
 8547              		.loc 1 2897 19 view .LVU2627
 8548 0700 88F81420 		strb	r2, [r8, #20]
2898:src/keys.c    **** 	  break;
 8549              		.loc 1 2898 4 is_stmt 1 view .LVU2628
2898:src/keys.c    **** 	  break;
 8550              		.loc 1 2898 18 is_stmt 0 view .LVU2629
 8551 0704 A8F80810 		strh	r1, [r8, #8]	@ movhi
2899:src/keys.c    **** 	default:			// No state change
 8552              		.loc 1 2899 4 is_stmt 1 view .LVU2630
 8553              	.LBE1032:
 8554              	.LBE1036:
3275:src/keys.c    **** 
 8555              		.loc 1 3275 10 is_stmt 0 view .LVU2631
 8556 0708 3324     		movs	r4, #51
 8557              	.LVL717:
 8558              	.LBB1037:
 8559              	.LBB1033:
2899:src/keys.c    **** 	default:			// No state change
 8560              		.loc 1 2899 4 view .LVU2632
 8561 070a D4E4     		b	.L801
 8562              	.LVL718:
 8563              	.L826:
2884:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 8564              		.loc 1 2884 4 is_stmt 1 view .LVU2633
2884:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 8565              		.loc 1 2884 18 is_stmt 0 view .LVU2634
 8566 070c 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
 8567 0710 03F00703 		and	r3, r3, #7
 8568 0714 013B     		subs	r3, r3, #1
 8569 0716 032B     		cmp	r3, #3
 8570 0718 ECD8     		bhi	.L828
 8571 071a 01A2     		adr	r2, .L830
 8572 071c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8573              		.p2align 2
 8574              	.L830:
ARM GAS  /tmp/cc6xzGMw.s 			page 258


 8575 0720 3D070000 		.word	.L833+1
 8576 0724 37070000 		.word	.L832+1
 8577 0728 31070000 		.word	.L831+1
 8578 072c F1060000 		.word	.L829+1
 8579              		.p2align 1
 8580              	.L831:
2887:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 8581              		.loc 1 2887 26 is_stmt 1 view .LVU2635
 8582 0730 FFF7FEFF 		bl	clrprog
 8583              	.LVL719:
2887:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 8584              		.loc 1 2887 37 view .LVU2636
2887:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 8585              		.loc 1 2887 4 is_stmt 0 view .LVU2637
 8586 0734 DEE7     		b	.L828
 8587              	.L832:
2886:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 8588              		.loc 1 2886 25 is_stmt 1 view .LVU2638
 8589 0736 FFF7FEFF 		bl	reset
 8590              	.LVL720:
2886:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 8591              		.loc 1 2886 34 view .LVU2639
2886:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 8592              		.loc 1 2886 4 is_stmt 0 view .LVU2640
 8593 073a DBE7     		b	.L828
 8594              	.L833:
2885:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8595              		.loc 1 2885 25 is_stmt 1 view .LVU2641
 8596 073c FFF7FEFF 		bl	clrall
 8597              	.LVL721:
2885:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8598              		.loc 1 2885 35 view .LVU2642
2885:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8599              		.loc 1 2885 4 is_stmt 0 view .LVU2643
 8600 0740 D8E7     		b	.L828
 8601              	.LVL722:
 8602              	.L1326:
2885:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8603              		.loc 1 2885 4 view .LVU2644
 8604              	.LBE1033:
 8605              	.LBE1037:
3242:src/keys.c    **** #else
 8606              		.loc 1 3242 47 view .LVU2645
 8607 0742 DFF83482 		ldr	r8, .L1408+24
 8608 0746 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
3242:src/keys.c    **** #else
 8609              		.loc 1 3242 36 view .LVU2646
 8610 074a 4BEA0302 		orr	r2, fp, r3
 8611 074e 12F0FF0F 		tst	r2, #255
 8612 0752 7FF42AAD 		bne	.L813
3242:src/keys.c    **** #else
 8613              		.loc 1 3242 76 view .LVU2647
 8614 0756 834A     		ldr	r2, .L1408+4
 8615 0758 D8F81430 		ldr	r3, [r8, #20]
 8616 075c 1A42     		tst	r2, r3
 8617 075e 7FF42CAD 		bne	.L823
3248:src/keys.c    **** 	stack_restore();
ARM GAS  /tmp/cc6xzGMw.s 			page 259


 8618              		.loc 1 3248 7 is_stmt 1 view .LVU2648
3248:src/keys.c    **** 	stack_restore();
 8619              		.loc 1 3248 11 is_stmt 0 view .LVU2649
 8620 0762 DFF80CA2 		ldr	r10, .L1408+16
 8621 0766 DAF80030 		ldr	r3, [r10]
 8622 076a 93F8AC37 		ldrb	r3, [r3, #1964]	@ zero_extendqisi2
3248:src/keys.c    **** 	stack_restore();
 8623              		.loc 1 3248 10 view .LVU2650
 8624 076e 03F04102 		and	r2, r3, #65
 8625 0772 412A     		cmp	r2, #65
 8626 0774 00F02E86 		beq	.L1356
 8627              	.LVL723:
 8628              	.L815:
3254:src/keys.c    ****       return STATE_UNFINISHED;
 8629              		.loc 1 3254 7 is_stmt 1 view .LVU2651
 8630 0778 FFF7FEFF 		bl	soft_init_state
 8631              	.LVL724:
3255:src/keys.c    ****     }
 8632              		.loc 1 3255 7 view .LVU2652
3255:src/keys.c    ****     }
 8633              		.loc 1 3255 14 is_stmt 0 view .LVU2653
 8634 077c 3324     		movs	r4, #51
 8635 077e 3368     		ldr	r3, [r6]
 8636 0780 99E4     		b	.L801
 8637              	.LVL725:
 8638              	.L1329:
3278:src/keys.c    **** 
 8639              		.loc 1 3278 3 is_stmt 1 view .LVU2654
3278:src/keys.c    **** 
 8640              		.loc 1 3278 10 is_stmt 0 view .LVU2655
 8641 0782 E0B2     		uxtb	r0, r4
 8642 0784 FFF7FEFF 		bl	process_arg
 8643              	.LVL726:
 8644 0788 0446     		mov	r4, r0
 8645              	.LVL727:
3278:src/keys.c    **** 
 8646              		.loc 1 3278 10 view .LVU2656
 8647 078a 29E6     		b	.L835
 8648              	.LVL728:
 8649              	.L1103:
3278:src/keys.c    **** 
 8650              		.loc 1 3278 10 view .LVU2657
 8651              	.LBE1392:
 8652              	.LBE1464:
 8653              	.LBB1465:
3612:src/keys.c    ****       }
 8654              		.loc 1 3612 4 is_stmt 1 view .LVU2658
3612:src/keys.c    ****       }
 8655              		.loc 1 3612 9 is_stmt 0 view .LVU2659
 8656 078c 0025     		movs	r5, #0
 8657 078e 00F8015C 		strb	r5, [r0, #-1]
 8658 0792 8FE6     		b	.L1310
 8659              	.LVL729:
 8660              	.L1332:
3612:src/keys.c    ****       }
 8661              		.loc 1 3612 9 view .LVU2660
 8662              	.LBE1465:
ARM GAS  /tmp/cc6xzGMw.s 			page 260


 8663              	.LBB1466:
 8664              	.LBB1393:
3287:src/keys.c    **** 
 8665              		.loc 1 3287 3 is_stmt 1 view .LVU2661
 8666              	.LBB1038:
 8667              	.LBI1038:
2343:src/keys.c    **** 	int r = State2.test;
 8668              		.loc 1 2343 12 view .LVU2662
 8669              	.LBB1039:
2344:src/keys.c    **** 	int cmpx = State2.cmplx;
 8670              		.loc 1 2344 2 view .LVU2663
2345:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 8671              		.loc 1 2345 2 view .LVU2664
 8672              	.LBB1040:
 8673              	.LBB1041:
 8674              	.LBB1042:
 8675              	.LBB1043:
 143:src/keys.c    **** }
 8676              		.loc 1 143 23 is_stmt 0 view .LVU2665
 8677 0794 DFF8D0C1 		ldr	ip, .L1408+8
 8678              	.LBE1043:
 8679              	.LBE1042:
 234:src/keys.c    **** }
 8680              		.loc 1 234 28 view .LVU2666
 8681 0798 DFF8D0E1 		ldr	lr, .L1408+12
 8682              	.LBB1047:
 8683              	.LBB1044:
 143:src/keys.c    **** }
 8684              		.loc 1 143 23 view .LVU2667
 8685 079c E4B2     		uxtb	r4, r4
 8686              	.LVL730:
 143:src/keys.c    **** }
 8687              		.loc 1 143 23 view .LVU2668
 8688              	.LBE1044:
 8689              	.LBE1047:
 8690              	.LBE1041:
 8691              	.LBE1040:
2347:src/keys.c    **** 
 8692              		.loc 1 2347 44 view .LVU2669
 8693 079e 12F0020F 		tst	r2, #2
 8694              	.LBB1052:
 8695              	.LBB1050:
 8696              	.LBB1048:
 8697              	.LBB1045:
 143:src/keys.c    **** }
 8698              		.loc 1 143 23 view .LVU2670
 8699 07a2 1CF804C0 		ldrb	ip, [ip, r4]	@ zero_extendqisi2
 8700              	.LBE1045:
 8701              	.LBE1048:
 234:src/keys.c    **** }
 8702              		.loc 1 234 28 view .LVU2671
 8703 07a6 1EF80CE0 		ldrb	lr, [lr, ip]	@ zero_extendqisi2
 8704              	.LBE1050:
 8705              	.LBE1052:
2345:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 8706              		.loc 1 2345 19 view .LVU2672
 8707 07aa C2F3400B 		ubfx	fp, r2, #1, #1
ARM GAS  /tmp/cc6xzGMw.s 			page 261


 8708              	.LVL731:
2346:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 8709              		.loc 1 2346 2 is_stmt 1 view .LVU2673
 8710              	.LBB1053:
 8711              	.LBI1040:
 210:src/keys.c    **** {
 8712              		.loc 1 210 14 view .LVU2674
 8713              	.LBB1051:
 212:src/keys.c    ****     // K00 - K05
 8714              		.loc 1 212 3 view .LVU2675
 234:src/keys.c    **** }
 8715              		.loc 1 234 3 view .LVU2676
 8716              	.LBB1049:
 8717              	.LBI1042:
 131:src/keys.c    **** {
 8718              		.loc 1 131 12 view .LVU2677
 8719              	.LBB1046:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8720              		.loc 1 133 2 view .LVU2678
 143:src/keys.c    **** }
 8721              		.loc 1 143 2 view .LVU2679
 143:src/keys.c    **** }
 8722              		.loc 1 143 2 is_stmt 0 view .LVU2680
 8723              	.LBE1046:
 8724              	.LBE1049:
 8725              	.LBE1051:
 8726              	.LBE1053:
2346:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 8727              		.loc 1 2346 15 view .LVU2681
 8728 07ae 2EF0800C 		bic	ip, lr, #128
 8729              	.LVL732:
2347:src/keys.c    **** 
 8730              		.loc 1 2347 2 is_stmt 1 view .LVU2682
2347:src/keys.c    **** 
 8731              		.loc 1 2347 44 is_stmt 0 view .LVU2683
 8732 07b2 00F0C380 		beq	.L1357
 8733              	.LVL733:
2349:src/keys.c    **** 	State2.cmplx = 0;
 8734              		.loc 1 2349 2 is_stmt 1 view .LVU2684
2350:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 8735              		.loc 1 2350 15 is_stmt 0 view .LVU2685
 8736 07b6 60F34102 		bfi	r2, r0, #1, #1
2351:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 8737              		.loc 1 2351 5 view .LVU2686
 8738 07ba BCF1640F 		cmp	ip, #100
2349:src/keys.c    **** 	State2.cmplx = 0;
 8739              		.loc 1 2349 14 view .LVU2687
 8740 07be 4FF00700 		mov	r0, #7
2350:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 8741              		.loc 1 2350 15 view .LVU2688
 8742 07c2 88F81520 		strb	r2, [r8, #21]
2349:src/keys.c    **** 	State2.cmplx = 0;
 8743              		.loc 1 2349 14 view .LVU2689
 8744 07c6 88F80F00 		strb	r0, [r8, #15]
2350:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 8745              		.loc 1 2350 2 is_stmt 1 view .LVU2690
2351:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
ARM GAS  /tmp/cc6xzGMw.s 			page 262


 8746              		.loc 1 2351 2 view .LVU2691
2351:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 8747              		.loc 1 2351 5 is_stmt 0 view .LVU2692
 8748 07ca 00F02385 		beq	.L1169
2347:src/keys.c    **** 
 8749              		.loc 1 2347 44 view .LVU2693
 8750 07ce 4FF0340A 		mov	r10, #52
 8751              	.LVL734:
 8752              	.L1128:
2352:src/keys.c    **** 		// Lettered register
 8753              		.loc 1 2352 5 view .LVU2694
 8754 07d2 BCF17F0F 		cmp	ip, #127
2347:src/keys.c    **** 
 8755              		.loc 1 2347 60 view .LVU2695
 8756 07d6 9A44     		add	r10, r10, r3
2352:src/keys.c    **** 		// Lettered register
 8757              		.loc 1 2352 2 is_stmt 1 view .LVU2696
2352:src/keys.c    **** 		// Lettered register
 8758              		.loc 1 2352 5 is_stmt 0 view .LVU2697
 8759 07d8 00F04381 		beq	.L867
 8760              	.LVL735:
2352:src/keys.c    **** 		// Lettered register
 8761              		.loc 1 2352 18 view .LVU2698
 8762 07dc BCF1630F 		cmp	ip, #99
 8763 07e0 40F26281 		bls	.L868
2352:src/keys.c    **** 		// Lettered register
 8764              		.loc 1 2352 37 view .LVU2699
 8765 07e4 BCF16F0F 		cmp	ip, #111
 8766 07e8 00F23B81 		bhi	.L867
2354:src/keys.c    **** 			if (n == regI_idx)
 8767              		.loc 1 2354 3 is_stmt 1 view .LVU2700
2354:src/keys.c    **** 			if (n == regI_idx)
 8768              		.loc 1 2354 6 is_stmt 0 view .LVU2701
 8769 07ec BBF1000F 		cmp	fp, #0
 8770 07f0 00F0A282 		beq	.L869
2354:src/keys.c    **** 			if (n == regI_idx)
 8771              		.loc 1 2354 12 view .LVU2702
 8772 07f4 1EF0010F 		tst	lr, #1
 8773 07f8 00F09E82 		beq	.L869
2355:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 8774              		.loc 1 2355 4 is_stmt 1 view .LVU2703
2355:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 8775              		.loc 1 2355 7 is_stmt 0 view .LVU2704
 8776 07fc BCF16D0F 		cmp	ip, #109
 8777 0800 40F03E81 		bne	.L870
2356:src/keys.c    **** 			// Disallow odd complex registers > A
 8778              		.loc 1 2356 5 is_stmt 1 view .LVU2705
2356:src/keys.c    **** 			// Disallow odd complex registers > A
 8779              		.loc 1 2356 30 is_stmt 0 view .LVU2706
 8780 0804 03F12904 		add	r4, r3, #41
 8781              	.LVL736:
2356:src/keys.c    **** 			// Disallow odd complex registers > A
 8782              		.loc 1 2356 30 view .LVU2707
 8783 0808 EAE5     		b	.L835
 8784              	.LVL737:
 8785              	.L1330:
2356:src/keys.c    **** 			// Disallow odd complex registers > A
ARM GAS  /tmp/cc6xzGMw.s 			page 263


 8786              		.loc 1 2356 30 view .LVU2708
 8787              	.LBE1039:
 8788              	.LBE1038:
3281:src/keys.c    **** 
 8789              		.loc 1 3281 3 is_stmt 1 view .LVU2709
 8790              	.LBB1068:
 8791              	.LBI1068:
1705:src/keys.c    **** 	int pc = -1;
 8792              		.loc 1 1705 12 view .LVU2710
 8793              	.LBB1069:
1706:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
 8794              		.loc 1 1706 2 view .LVU2711
1707:src/keys.c    **** 
 8795              		.loc 1 1707 2 view .LVU2712
 8796              	.LBB1070:
 8797              	.LBI1070:
 210:src/keys.c    **** {
 8798              		.loc 1 210 14 view .LVU2713
 8799              	.LBB1071:
 212:src/keys.c    ****     // K00 - K05
 8800              		.loc 1 212 3 view .LVU2714
 234:src/keys.c    **** }
 8801              		.loc 1 234 3 view .LVU2715
 8802              	.LBB1072:
 8803              	.LBI1072:
 131:src/keys.c    **** {
 8804              		.loc 1 131 12 view .LVU2716
 8805              	.LBB1073:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8806              		.loc 1 133 2 view .LVU2717
 143:src/keys.c    **** }
 8807              		.loc 1 143 2 view .LVU2718
 143:src/keys.c    **** }
 8808              		.loc 1 143 23 is_stmt 0 view .LVU2719
 8809 080a 574B     		ldr	r3, .L1408+8
 8810              	.LBE1073:
 8811              	.LBE1072:
 234:src/keys.c    **** }
 8812              		.loc 1 234 28 view .LVU2720
 8813 080c 574A     		ldr	r2, .L1408+12
 8814 080e E4B2     		uxtb	r4, r4
 8815              	.LVL738:
 8816              	.LBB1075:
 8817              	.LBB1074:
 143:src/keys.c    **** }
 8818              		.loc 1 143 23 view .LVU2721
 8819 0810 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 8820              	.LBE1074:
 8821              	.LBE1075:
 234:src/keys.c    **** }
 8822              		.loc 1 234 28 view .LVU2722
 8823 0812 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 8824              	.LVL739:
 234:src/keys.c    **** }
 8825              		.loc 1 234 28 view .LVU2723
 8826              	.LBE1071:
 8827              	.LBE1070:
ARM GAS  /tmp/cc6xzGMw.s 			page 264


1709:src/keys.c    **** 		// Digit 0 - 9
 8828              		.loc 1 1709 2 is_stmt 1 view .LVU2724
1709:src/keys.c    **** 		// Digit 0 - 9
 8829              		.loc 1 1709 5 is_stmt 0 view .LVU2725
 8830 0814 0928     		cmp	r0, #9
 8831 0816 40F23F81 		bls	.L1358
1714:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8832              		.loc 1 1714 7 is_stmt 1 view .LVU2726
1714:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8833              		.loc 1 1714 18 is_stmt 0 view .LVU2727
 8834 081a 20F08000 		bic	r0, r0, #128
 8835              	.LVL740:
1714:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8836              		.loc 1 1714 10 view .LVU2728
 8837 081e 6428     		cmp	r0, #100
 8838 0820 00F07C82 		beq	.L1359
1715:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 8839              		.loc 1 1715 7 is_stmt 1 view .LVU2729
1715:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 8840              		.loc 1 1715 10 is_stmt 0 view .LVU2730
 8841 0824 6528     		cmp	r0, #101
 8842 0826 00F08082 		beq	.L1360
1716:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 8843              		.loc 1 1716 7 is_stmt 1 view .LVU2731
1716:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 8844              		.loc 1 1716 10 is_stmt 0 view .LVU2732
 8845 082a 6628     		cmp	r0, #102
 8846 082c 00F09E82 		beq	.L1361
1717:src/keys.c    **** #endif
 8847              		.loc 1 1717 7 is_stmt 1 view .LVU2733
1717:src/keys.c    **** #endif
 8848              		.loc 1 1717 10 is_stmt 0 view .LVU2734
 8849 0830 6728     		cmp	r0, #103
 8850 0832 00F09683 		beq	.L1362
1719:src/keys.c    **** 		// A - D
 8851              		.loc 1 1719 7 is_stmt 1 view .LVU2735
1719:src/keys.c    **** 		// A - D
 8852              		.loc 1 1719 10 is_stmt 0 view .LVU2736
 8853 0836 032C     		cmp	r4, #3
 8854 0838 40F2B884 		bls	.L1363
1724:src/keys.c    **** 		// .
 8855              		.loc 1 1724 7 is_stmt 1 view .LVU2737
1724:src/keys.c    **** 		// .
 8856              		.loc 1 1724 10 is_stmt 0 view .LVU2738
 8857 083c 262C     		cmp	r4, #38
 8858 083e 00F0F984 		beq	.L1364
1729:src/keys.c    **** 		// ENTER - short circuit processing
 8859              		.loc 1 1729 7 is_stmt 1 view .LVU2739
1729:src/keys.c    **** 		// ENTER - short circuit processing
 8860              		.loc 1 1729 10 is_stmt 0 view .LVU2740
 8861 0842 0C2C     		cmp	r4, #12
 8862 0844 00F0CA84 		beq	.L1365
1733:src/keys.c    **** 		// backspace
 8863              		.loc 1 1733 7 is_stmt 1 view .LVU2741
1733:src/keys.c    **** 		// backspace
 8864              		.loc 1 1733 10 is_stmt 0 view .LVU2742
 8865 0848 102C     		cmp	r4, #16
ARM GAS  /tmp/cc6xzGMw.s 			page 265


 8866 084a 00F0AB85 		beq	.L1366
1742:src/keys.c    **** 		// up
 8867              		.loc 1 1742 7 is_stmt 1 view .LVU2743
1742:src/keys.c    **** 		// up
 8868              		.loc 1 1742 10 is_stmt 0 view .LVU2744
 8869 084e 122C     		cmp	r4, #18
 8870 0850 00F03087 		beq	.L1367
1752:src/keys.c    **** 		// down
 8871              		.loc 1 1752 7 is_stmt 1 view .LVU2745
1752:src/keys.c    **** 		// down
 8872              		.loc 1 1752 10 is_stmt 0 view .LVU2746
 8873 0854 182C     		cmp	r4, #24
 8874 0856 7FF448AF 		bne	.L1313
1754:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 8875              		.loc 1 1754 3 is_stmt 1 view .LVU2747
1755:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 8876              		.loc 1 1755 18 is_stmt 0 view .LVU2748
 8877 085a 454C     		ldr	r4, .L1408+16
 8878              	.LVL741:
1754:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 8879              		.loc 1 1754 3 view .LVU2749
 8880 085c 0120     		movs	r0, #1
 8881 085e FFF7FEFF 		bl	update_program_bounds
 8882              	.LVL742:
1755:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 8883              		.loc 1 1755 3 is_stmt 1 view .LVU2750
1755:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 8884              		.loc 1 1755 18 is_stmt 0 view .LVU2751
 8885 0862 2368     		ldr	r3, [r4]
1755:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 8886              		.loc 1 1755 11 view .LVU2752
 8887 0864 0021     		movs	r1, #0
 8888 0866 B3F8EE07 		ldrh	r0, [r3, #2030]
 8889 086a FFF7FEFF 		bl	do_inc
 8890              	.LVL743:
1756:src/keys.c    **** 			rawpc = 1;
 8891              		.loc 1 1756 3 is_stmt 1 view .LVU2753
1756:src/keys.c    **** 			rawpc = 1;
 8892              		.loc 1 1756 6 is_stmt 0 view .LVU2754
 8893 086e 20B9     		cbnz	r0, .L847
1756:src/keys.c    **** 			rawpc = 1;
 8894              		.loc 1 1756 21 view .LVU2755
 8895 0870 2368     		ldr	r3, [r4]
1756:src/keys.c    **** 			rawpc = 1;
 8896              		.loc 1 1756 18 view .LVU2756
 8897 0872 5888     		ldrh	r0, [r3, #2]
 8898              	.LVL744:
1756:src/keys.c    **** 			rawpc = 1;
 8899              		.loc 1 1756 18 view .LVU2757
 8900 0874 0038     		subs	r0, r0, #0
 8901 0876 18BF     		it	ne
 8902 0878 0120     		movne	r0, #1
 8903              	.LVL745:
 8904              	.L847:
1762:src/keys.c    **** fin2:		State2.gtodot = 0;
 8905              		.loc 1 1762 7 is_stmt 1 view .LVU2758
 8906 087a FFF7FEFF 		bl	set_pc
ARM GAS  /tmp/cc6xzGMw.s 			page 266


 8907              	.LVL746:
 8908              	.L851:
1763:src/keys.c    **** 		State2.digval = 0;
 8909              		.loc 1 1763 8 view .LVU2759
1763:src/keys.c    **** 		State2.digval = 0;
 8910              		.loc 1 1763 22 is_stmt 0 view .LVU2760
 8911 087e 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 8912 0882 3368     		ldr	r3, [r6]
1764:src/keys.c    **** 		State2.numdigit = 0;
 8913              		.loc 1 1764 17 view .LVU2761
 8914 0884 0022     		movs	r2, #0
1763:src/keys.c    **** 		State2.digval = 0;
 8915              		.loc 1 1763 22 view .LVU2762
 8916 0886 6FF30001 		bfc	r1, #0, #1
 8917 088a 88F81510 		strb	r1, [r8, #21]
1764:src/keys.c    **** 		State2.numdigit = 0;
 8918              		.loc 1 1764 3 is_stmt 1 view .LVU2763
1764:src/keys.c    **** 		State2.numdigit = 0;
 8919              		.loc 1 1764 17 is_stmt 0 view .LVU2764
 8920 088e A8F80820 		strh	r2, [r8, #8]	@ movhi
1765:src/keys.c    **** 	}
 8921              		.loc 1 1765 3 is_stmt 1 view .LVU2765
1765:src/keys.c    **** 	}
 8922              		.loc 1 1765 19 is_stmt 0 view .LVU2766
 8923 0892 88F80B20 		strb	r2, [r8, #11]
 8924              	.LBE1069:
 8925              	.LBE1068:
3281:src/keys.c    **** 
 8926              		.loc 1 3281 10 view .LVU2767
 8927 0896 3324     		movs	r4, #51
 8928 0898 0DE4     		b	.L801
 8929              	.LVL747:
 8930              	.L1095:
3281:src/keys.c    **** 
 8931              		.loc 1 3281 10 view .LVU2768
 8932              	.LBE1393:
 8933              	.LBE1466:
 8934              	.LBB1467:
3584:src/keys.c    **** 	  c = STATE_UNFINISHED;
 8935              		.loc 1 3584 4 is_stmt 1 view .LVU2769
 8936              	.LBB1447:
 8937              	.LBI1447:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 8938              		.loc 1 552 13 view .LVU2770
 8939              	.LBB1448:
 553:src/keys.c    **** 		return;
 8940              		.loc 1 553 2 view .LVU2771
 553:src/keys.c    **** 		return;
 8941              		.loc 1 553 6 is_stmt 0 view .LVU2772
 8942 089a FFF7FEFF 		bl	is_bad_cmdline
 8943              	.LVL748:
 553:src/keys.c    **** 		return;
 8944              		.loc 1 553 5 view .LVU2773
 8945 089e 0546     		mov	r5, r0
 8946 08a0 0028     		cmp	r0, #0
 8947 08a2 40F0D580 		bne	.L1311
 8948 08a6 2046     		mov	r0, r4
ARM GAS  /tmp/cc6xzGMw.s 			page 267


 8949 08a8 FFF7FEFF 		bl	init_arg.part.0
 8950              	.LVL749:
 8951              	.LBE1448:
 8952              	.LBE1447:
3585:src/keys.c    **** 	}
 8953              		.loc 1 3585 6 view .LVU2774
 8954 08ac 3324     		movs	r4, #51
 8955              	.LVL750:
3585:src/keys.c    **** 	}
 8956              		.loc 1 3585 6 view .LVU2775
 8957 08ae 3368     		ldr	r3, [r6]
 8958 08b0 01E4     		b	.L801
 8959              	.LVL751:
 8960              	.L1167:
3585:src/keys.c    **** 	}
 8961              		.loc 1 3585 6 view .LVU2776
 8962              	.LBE1467:
 8963              	.LBB1468:
 8964 08b2 1C46     		mov	r4, r3
 8965              	.LVL752:
3585:src/keys.c    **** 	}
 8966              		.loc 1 3585 6 view .LVU2777
 8967 08b4 1DE4     		b	.L1114
 8968              	.LVL753:
 8969              	.L1331:
3585:src/keys.c    **** 	}
 8970              		.loc 1 3585 6 view .LVU2778
 8971              	.LBE1468:
 8972              	.LBB1469:
 8973              	.LBB1394:
3284:src/keys.c    **** 
 8974              		.loc 1 3284 3 is_stmt 1 view .LVU2779
 8975              	.LBB1088:
 8976              	.LBB1089:
1586:src/keys.c    **** 	State2.dot = 0;
 8977              		.loc 1 1586 15 is_stmt 0 view .LVU2780
 8978 08b6 22F06203 		bic	r3, r2, #98
 8979              	.LBE1089:
 8980              	.LBE1088:
3284:src/keys.c    **** 
 8981              		.loc 1 3284 10 view .LVU2781
 8982 08ba E4B2     		uxtb	r4, r4
 8983              	.LVL754:
 8984              	.LBB1102:
 8985              	.LBI1088:
1576:src/keys.c    **** 	static const unsigned char op_map[][2] = {
 8986              		.loc 1 1576 12 is_stmt 1 view .LVU2782
 8987              	.LBB1099:
1577:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
 8988              		.loc 1 1577 2 view .LVU2783
1582:src/keys.c    **** 	int f = State2.dot;
 8989              		.loc 1 1582 2 view .LVU2784
1586:src/keys.c    **** 	State2.dot = 0;
 8990              		.loc 1 1586 15 is_stmt 0 view .LVU2785
 8991 08bc 88F81530 		strb	r3, [r8, #21]
1582:src/keys.c    **** 	int f = State2.dot;
 8992              		.loc 1 1582 20 view .LVU2786
ARM GAS  /tmp/cc6xzGMw.s 			page 268


 8993 08c0 C2F34009 		ubfx	r9, r2, #1, #1
 8994              	.LVL755:
1583:src/keys.c    **** 
 8995              		.loc 1 1583 2 is_stmt 1 view .LVU2787
1583:src/keys.c    **** 
 8996              		.loc 1 1583 16 is_stmt 0 view .LVU2788
 8997 08c4 C2F3801B 		ubfx	fp, r2, #6, #1
 8998              	.LVL756:
1585:src/keys.c    **** 	State2.cmplx = 0;
 8999              		.loc 1 1585 2 is_stmt 1 view .LVU2789
1586:src/keys.c    **** 	State2.dot = 0;
 9000              		.loc 1 1586 2 view .LVU2790
1587:src/keys.c    **** #ifdef DM42
 9001              		.loc 1 1587 2 view .LVU2791
1589:src/keys.c    **** #endif
 9002              		.loc 1 1589 2 view .LVU2792
 9003              	.LBB1090:
 9004              	.LBI1090:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 9005              		.loc 1 114 13 view .LVU2793
 9006              	.LBE1090:
 9007              	.LBE1099:
 9008              	.LBE1102:
 9009              	.LBE1394:
 9010              	.LBE1469:
 115:src/keys.c    **** }
 9011              		.loc 1 115 2 view .LVU2794
 9012              	.LBB1470:
 9013              	.LBB1395:
 9014              	.LBB1103:
 9015              	.LBB1100:
 9016              	.LBB1097:
 9017              	.LBB1091:
 9018              	.LBI1091:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 9019              		.loc 1 104 20 view .LVU2795
 9020              	.LBB1092:
 105:src/keys.c    **** 	State2.shifts = shift;
 9021              		.loc 1 105 2 view .LVU2796
 9022              	.LBB1093:
 9023              	.LBI1093:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 9024              		.loc 1 96 13 view .LVU2797
 9025              	.LBB1094:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9026              		.loc 1 97 2 view .LVU2798
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9027              		.loc 1 97 18 is_stmt 0 view .LVU2799
 9028 08c8 FFF7FEFF 		bl	shift_down
 9029              	.LVL757:
  98:src/keys.c    **** }
 9030              		.loc 1 98 2 is_stmt 1 view .LVU2800
 9031              	.LBE1094:
 9032              	.LBE1093:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9033              		.loc 1 106 2 view .LVU2801
 9034              	.LBE1092:
ARM GAS  /tmp/cc6xzGMw.s 			page 269


 9035              	.LBE1091:
 9036              	.LBE1097:
1591:src/keys.c    **** 
 9037              		.loc 1 1591 2 is_stmt 0 view .LVU2802
 9038 08cc 292C     		cmp	r4, #41
 9039              	.LBB1098:
 9040              	.LBB1096:
 9041              	.LBB1095:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9042              		.loc 1 106 16 view .LVU2803
 9043 08ce 88F810A0 		strb	r10, [r8, #16]
 108:src/keys.c    **** }
 9044              		.loc 1 108 2 is_stmt 1 view .LVU2804
 9045              	.LVL758:
 108:src/keys.c    **** }
 9046              		.loc 1 108 2 is_stmt 0 view .LVU2805
 9047              	.LBE1095:
 9048              	.LBE1096:
 9049              	.LBE1098:
1591:src/keys.c    **** 
 9050              		.loc 1 1591 2 is_stmt 1 view .LVU2806
 9051 08d2 00F06784 		beq	.L856
 9052 08d6 15D8     		bhi	.L857
 9053 08d8 013C     		subs	r4, r4, #1
 9054              	.LVL759:
1591:src/keys.c    **** 
 9055              		.loc 1 1591 2 is_stmt 0 view .LVU2807
 9056 08da E3B2     		uxtb	r3, r4
 9057 08dc 022B     		cmp	r3, #2
 9058 08de 3FF604AF 		bhi	.L1313
1596:src/keys.c    **** 
 9059              		.loc 1 1596 3 is_stmt 1 view .LVU2808
1596:src/keys.c    **** 
 9060              		.loc 1 1596 54 is_stmt 0 view .LVU2809
 9061 08e2 244B     		ldr	r3, .L1408+20
 9062 08e4 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
 9063 08e8 03EB4404 		add	r4, r3, r4, lsl #1
 9064              	.LVL760:
1596:src/keys.c    **** 
 9065              		.loc 1 1596 27 view .LVU2810
 9066 08ec B9F1000F 		cmp	r9, #0
1596:src/keys.c    **** 
 9067              		.loc 1 1596 54 view .LVU2811
 9068 08f0 14F80B40 		ldrb	r4, [r4, fp]	@ zero_extendqisi2
1596:src/keys.c    **** 
 9069              		.loc 1 1596 27 view .LVU2812
 9070 08f4 14BF     		ite	ne
 9071 08f6 4FF4A063 		movne	r3, #1280
 9072 08fa 4FF40073 		moveq	r3, #512
1596:src/keys.c    **** 
 9073              		.loc 1 1596 37 view .LVU2813
 9074 08fe 1C43     		orrs	r4, r4, r3
 9075 0900 2046     		mov	r0, r4
 9076 0902 8FE5     		b	.L862
 9077              	.LVL761:
 9078              	.L857:
1591:src/keys.c    **** 
ARM GAS  /tmp/cc6xzGMw.s 			page 270


 9079              		.loc 1 1591 2 view .LVU2814
 9080 0904 2D2C     		cmp	r4, #45
 9081 0906 7FF4F0AE 		bne	.L1313
1599:src/keys.c    **** 		goto stay;
 9082              		.loc 1 1599 3 is_stmt 1 view .LVU2815
 9083 090a 89F00109 		eor	r9, r9, #1
 9084              	.LVL762:
1600:src/keys.c    **** 
 9085              		.loc 1 1600 3 view .LVU2816
 9086              	.L863:
1615:src/keys.c    **** 		State2.cmplx = cmplx;
 9087              		.loc 1 1615 4 view .LVU2817
1616:src/keys.c    **** 		State2.dot = f;
 9088              		.loc 1 1616 3 view .LVU2818
1617:src/keys.c    **** 		break;
 9089              		.loc 1 1617 3 view .LVU2819
1616:src/keys.c    **** 		State2.dot = f;
 9090              		.loc 1 1616 16 is_stmt 0 view .LVU2820
 9091 090e 4FEA4902 		lsl	r2, r9, #1
 9092 0912 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 9093 0916 3368     		ldr	r3, [r6]
 9094 0918 42F02002 		orr	r2, r2, #32
 9095 091c 42EA8B12 		orr	r2, r2, fp, lsl #6
 9096 0920 02F06202 		and	r2, r2, #98
 9097 0924 21F06201 		bic	r1, r1, #98
 9098 0928 0A43     		orrs	r2, r2, r1
 9099 092a 88F81520 		strb	r2, [r8, #21]
1618:src/keys.c    **** 
 9100              		.loc 1 1618 3 is_stmt 1 view .LVU2821
1623:src/keys.c    **** }
 9101              		.loc 1 1623 9 is_stmt 0 view .LVU2822
 9102 092e 3324     		movs	r4, #51
 9103              	.LVL763:
1618:src/keys.c    **** 
 9104              		.loc 1 1618 3 view .LVU2823
 9105 0930 FFF7C1BB 		b	.L801
 9106              	.LVL764:
 9107              	.L1327:
1618:src/keys.c    **** 
 9108              		.loc 1 1618 3 view .LVU2824
 9109              	.LBE1100:
 9110              	.LBE1103:
3261:src/keys.c    **** 		return STATE_IGNORE;
 9111              		.loc 1 3261 3 is_stmt 1 view .LVU2825
3261:src/keys.c    **** 		return STATE_IGNORE;
 9112              		.loc 1 3261 15 is_stmt 0 view .LVU2826
 9113 0934 1D60     		str	r5, [r3]
3262:src/keys.c    **** 	}
 9114              		.loc 1 3262 3 is_stmt 1 view .LVU2827
 9115              	.LVL765:
3262:src/keys.c    **** 	}
 9116              		.loc 1 3262 3 is_stmt 0 view .LVU2828
 9117              	.LBE1395:
 9118              	.LBE1470:
3658:src/keys.c    **** #ifndef CONSOLE
 9119              		.loc 1 3658 3 is_stmt 1 view .LVU2829
 9120              	.LBB1471:
ARM GAS  /tmp/cc6xzGMw.s 			page 271


 9121              	.LBB1396:
3262:src/keys.c    **** 	}
 9122              		.loc 1 3262 10 is_stmt 0 view .LVU2830
 9123 0936 3224     		movs	r4, #50
 9124 0938 FFF7C0BB 		b	.L821
 9125              	.LVL766:
 9126              	.L1357:
 9127              	.LBB1104:
 9128              	.LBB1058:
2349:src/keys.c    **** 	State2.cmplx = 0;
 9129              		.loc 1 2349 2 is_stmt 1 view .LVU2831
2350:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9130              		.loc 1 2350 15 is_stmt 0 view .LVU2832
 9131 093c 6BF34102 		bfi	r2, fp, #1, #1
2349:src/keys.c    **** 	State2.cmplx = 0;
 9132              		.loc 1 2349 14 view .LVU2833
 9133 0940 0720     		movs	r0, #7
2351:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9134              		.loc 1 2351 5 view .LVU2834
 9135 0942 BCF1640F 		cmp	ip, #100
2350:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9136              		.loc 1 2350 15 view .LVU2835
 9137 0946 88F81520 		strb	r2, [r8, #21]
2349:src/keys.c    **** 	State2.cmplx = 0;
 9138              		.loc 1 2349 14 view .LVU2836
 9139 094a 88F80F00 		strb	r0, [r8, #15]
2350:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9140              		.loc 1 2350 2 is_stmt 1 view .LVU2837
2351:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9141              		.loc 1 2351 2 view .LVU2838
2351:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9142              		.loc 1 2351 5 is_stmt 0 view .LVU2839
 9143 094e 00F04884 		beq	.L1170
2347:src/keys.c    **** 
 9144              		.loc 1 2347 44 view .LVU2840
 9145 0952 4FF02D0A 		mov	r10, #45
 9146 0956 3CE7     		b	.L1128
 9147              	.LVL767:
 9148              	.L1168:
2347:src/keys.c    **** 
 9149              		.loc 1 2347 44 view .LVU2841
 9150              	.LBE1058:
 9151              	.LBE1104:
 9152              	.LBE1396:
 9153              	.LBE1471:
 9154              	.LBB1472:
 9155 0958 2C46     		mov	r4, r5
 9156              	.LVL768:
2347:src/keys.c    **** 
 9157              		.loc 1 2347 44 view .LVU2842
 9158 095a FFF7CABB 		b	.L1114
 9159              	.L1409:
 9160 095e 00BF     		.align	2
 9161              	.L1408:
 9162 0960 00000000 		.word	NonProgrammable
 9163 0964 00040800 		.word	525312
 9164 0968 00000000 		.word	.LANCHOR6
ARM GAS  /tmp/cc6xzGMw.s 			page 272


 9165 096c 00000000 		.word	.LANCHOR5
 9166 0970 00000000 		.word	main_ram
 9167 0974 00000000 		.word	.LANCHOR19
 9168 0978 00000000 		.word	StateWhileOn
 9169              	.LVL769:
 9170              	.L1333:
2347:src/keys.c    **** 
 9171              		.loc 1 2347 44 view .LVU2843
 9172              	.LBE1472:
 9173              	.LBB1473:
 9174              	.LBB1397:
3290:src/keys.c    **** 
 9175              		.loc 1 3290 3 is_stmt 1 view .LVU2844
 9176              	.LBB1105:
 9177              	.LBB1106:
2912:src/keys.c    **** 
 9178              		.loc 1 2912 12 is_stmt 0 view .LVU2845
 9179 097c CE4B     		ldr	r3, .L1410
 9180 097e 1B68     		ldr	r3, [r3]
2912:src/keys.c    **** 
 9181              		.loc 1 2912 31 view .LVU2846
 9182 0980 B3F9DE37 		ldrsh	r3, [r3, #2014]
 9183              	.LBE1106:
 9184              	.LBE1105:
3290:src/keys.c    **** 
 9185              		.loc 1 3290 10 view .LVU2847
 9186 0984 E4B2     		uxtb	r4, r4
 9187              	.LVL770:
 9188              	.LBB1125:
 9189              	.LBI1105:
2910:src/keys.c    **** 	int n = ((int)State2.status) - 3;
 9190              		.loc 1 2910 12 is_stmt 1 view .LVU2848
 9191              	.LBB1117:
2911:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9192              		.loc 1 2911 2 view .LVU2849
2912:src/keys.c    **** 
 9193              		.loc 1 2912 2 view .LVU2850
2912:src/keys.c    **** 
 9194              		.loc 1 2912 31 is_stmt 0 view .LVU2851
 9195 0986 002B     		cmp	r3, #0
 9196 0988 B4BF     		ite	lt
 9197 098a 0B23     		movlt	r3, #11
 9198 098c 0A23     		movge	r3, #10
 9199              	.LVL771:
2914:src/keys.c    **** 		if (--n < -2)
 9200              		.loc 1 2914 2 is_stmt 1 view .LVU2852
2914:src/keys.c    **** 		if (--n < -2)
 9201              		.loc 1 2914 5 is_stmt 0 view .LVU2853
 9202 098e 122C     		cmp	r4, #18
 9203 0990 00F08D81 		beq	.L1368
2918:src/keys.c    **** 		if (++n > max)
 9204              		.loc 1 2918 7 is_stmt 1 view .LVU2854
2918:src/keys.c    **** 		if (++n > max)
 9205              		.loc 1 2918 10 is_stmt 0 view .LVU2855
 9206 0994 182C     		cmp	r4, #24
 9207 0996 00F0D681 		beq	.L1369
2922:src/keys.c    **** 		State2.status = 0;
ARM GAS  /tmp/cc6xzGMw.s 			page 273


 9208              		.loc 1 2922 7 is_stmt 1 view .LVU2856
2922:src/keys.c    **** 		State2.status = 0;
 9209              		.loc 1 2922 10 is_stmt 0 view .LVU2857
 9210 099a 102C     		cmp	r4, #16
 9211 099c 00F04484 		beq	.L1370
 9212              	.LBB1107:
2927:src/keys.c    **** 		if (nn <= 9)
 9213              		.loc 1 2927 3 is_stmt 1 view .LVU2858
 9214              	.LVL772:
 9215              	.LBB1108:
 9216              	.LBI1108:
 210:src/keys.c    **** {
 9217              		.loc 1 210 14 view .LVU2859
 9218              	.LBB1109:
 212:src/keys.c    ****     // K00 - K05
 9219              		.loc 1 212 3 view .LVU2860
 234:src/keys.c    **** }
 9220              		.loc 1 234 3 view .LVU2861
 9221              	.LBB1110:
 9222              	.LBI1110:
 131:src/keys.c    **** {
 9223              		.loc 1 131 12 view .LVU2862
 9224              	.LBB1111:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9225              		.loc 1 133 2 view .LVU2863
 143:src/keys.c    **** }
 9226              		.loc 1 143 2 view .LVU2864
 143:src/keys.c    **** }
 9227              		.loc 1 143 23 is_stmt 0 view .LVU2865
 9228 09a0 C64A     		ldr	r2, .L1410+4
 9229              	.LBE1111:
 9230              	.LBE1110:
 234:src/keys.c    **** }
 9231              		.loc 1 234 28 view .LVU2866
 9232 09a2 C748     		ldr	r0, .L1410+8
 9233              	.LBB1113:
 9234              	.LBB1112:
 143:src/keys.c    **** }
 9235              		.loc 1 143 23 view .LVU2867
 9236 09a4 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 9237 09a6 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 9238 09a8 02F07F02 		and	r2, r2, #127
 9239              	.LVL773:
 143:src/keys.c    **** }
 9240              		.loc 1 143 23 view .LVU2868
 9241              	.LBE1112:
 9242              	.LBE1113:
 9243              	.LBE1109:
 9244              	.LBE1108:
2928:src/keys.c    **** 			n = nn;
 9245              		.loc 1 2928 3 is_stmt 1 view .LVU2869
2928:src/keys.c    **** 			n = nn;
 9246              		.loc 1 2928 6 is_stmt 0 view .LVU2870
 9247 09ac 092A     		cmp	r2, #9
 9248 09ae 40F2D682 		bls	.L1136
2930:src/keys.c    **** 			n = n == max ? 10 : max;
 9249              		.loc 1 2930 11 view .LVU2871
ARM GAS  /tmp/cc6xzGMw.s 			page 274


 9250 09b2 702A     		cmp	r2, #112
 9251              	.LBE1107:
2911:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9252              		.loc 1 2911 6 view .LVU2872
 9253 09b4 A1F10301 		sub	r1, r1, #3
 9254              	.LVL774:
 9255              	.LBB1114:
2930:src/keys.c    **** 			n = n == max ? 10 : max;
 9256              		.loc 1 2930 8 is_stmt 1 view .LVU2873
2930:src/keys.c    **** 			n = n == max ? 10 : max;
 9257              		.loc 1 2930 11 is_stmt 0 view .LVU2874
 9258 09b8 00F00F86 		beq	.L1371
2932:src/keys.c    **** 			n = 10; 
 9259              		.loc 1 2932 8 is_stmt 1 view .LVU2875
 9260              	.LBE1114:
2911:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9261              		.loc 1 2911 6 is_stmt 0 view .LVU2876
 9262 09bc 7F2A     		cmp	r2, #127
 9263 09be 0CBF     		ite	eq
 9264 09c0 0B46     		moveq	r3, r1
 9265              	.LVL775:
2911:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9266              		.loc 1 2911 6 view .LVU2877
 9267 09c2 0A23     		movne	r3, #10
 9268              	.LVL776:
 9269              	.L884:
2935:src/keys.c    **** 
 9270              		.loc 1 2935 2 is_stmt 1 view .LVU2878
2935:src/keys.c    **** 
 9271              		.loc 1 2935 20 is_stmt 0 view .LVU2879
 9272 09c4 0333     		adds	r3, r3, #3
 9273              	.LVL777:
2935:src/keys.c    **** 
 9274              		.loc 1 2935 16 view .LVU2880
 9275 09c6 88F80C30 		strb	r3, [r8, #12]
2937:src/keys.c    **** }
 9276              		.loc 1 2937 2 is_stmt 1 view .LVU2881
 9277              	.LBE1117:
 9278              	.LBE1125:
3290:src/keys.c    **** 
 9279              		.loc 1 3290 10 is_stmt 0 view .LVU2882
 9280 09ca 3324     		movs	r4, #51
 9281              	.LVL778:
3290:src/keys.c    **** 
 9282              		.loc 1 3290 10 view .LVU2883
 9283 09cc 3368     		ldr	r3, [r6]
 9284              	.LVL779:
 9285              	.LBB1126:
 9286              	.LBB1118:
2937:src/keys.c    **** }
 9287              		.loc 1 2937 9 view .LVU2884
 9288 09ce FFF772BB 		b	.L801
 9289              	.LVL780:
 9290              	.L1337:
2937:src/keys.c    **** }
 9291              		.loc 1 2937 9 view .LVU2885
 9292              	.LBE1118:
ARM GAS  /tmp/cc6xzGMw.s 			page 275


 9293              	.LBE1126:
3313:src/keys.c    **** 
 9294              		.loc 1 3313 3 is_stmt 1 view .LVU2886
 9295              	.LBB1127:
 9296              	.LBB1128:
 9297              	.LBB1129:
 9298              	.LBB1130:
 9299              	.LBB1131:
 9300              	.LBB1132:
 9301              	.LBB1133:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9302              		.loc 1 97 18 is_stmt 0 view .LVU2887
 9303 09d2 FFF7FEFF 		bl	shift_down
 9304              	.LVL781:
 9305              	.LBE1133:
 9306              	.LBE1132:
 9307              	.LBE1131:
 9308              	.LBE1130:
 9309              	.LBE1129:
 9310              	.LBE1128:
 9311              	.LBE1127:
3313:src/keys.c    **** 
 9312              		.loc 1 3313 10 view .LVU2888
 9313 09d6 E4B2     		uxtb	r4, r4
 9314              	.LVL782:
 9315              	.LBB1158:
 9316              	.LBI1127:
1630:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 9317              		.loc 1 1630 12 is_stmt 1 view .LVU2889
 9318              	.LBB1150:
1631:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
 9319              		.loc 1 1631 2 view .LVU2890
1636:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
 9320              		.loc 1 1636 2 view .LVU2891
1640:src/keys.c    **** 	const int f = (shift == SHIFT_F);
 9321              		.loc 1 1640 2 view .LVU2892
 9322              	.LBB1142:
 9323              	.LBI1129:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 9324              		.loc 1 114 13 view .LVU2893
 9325              	.LBE1142:
 9326              	.LBE1150:
 9327              	.LBE1158:
 9328              	.LBE1397:
 9329              	.LBE1473:
 115:src/keys.c    **** }
 9330              		.loc 1 115 2 view .LVU2894
 9331              	.LBB1474:
 9332              	.LBB1398:
 9333              	.LBB1159:
 9334              	.LBB1151:
 9335              	.LBB1143:
 9336              	.LBB1139:
 9337              	.LBI1130:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 9338              		.loc 1 104 20 view .LVU2895
 9339              	.LBB1136:
ARM GAS  /tmp/cc6xzGMw.s 			page 276


 105:src/keys.c    **** 	State2.shifts = shift;
 9340              		.loc 1 105 2 view .LVU2896
 9341              	.LBB1135:
 9342              	.LBI1132:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 9343              		.loc 1 96 13 view .LVU2897
 9344              	.LBB1134:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9345              		.loc 1 97 2 view .LVU2898
  98:src/keys.c    **** }
 9346              		.loc 1 98 2 view .LVU2899
  98:src/keys.c    **** }
 9347              		.loc 1 98 52 is_stmt 0 view .LVU2900
 9348 09d8 8346     		mov	fp, r0
 9349              	.LVL783:
  98:src/keys.c    **** }
 9350              		.loc 1 98 52 view .LVU2901
 9351 09da 08B9     		cbnz	r0, .L894
 9352 09dc 98F810B0 		ldrb	fp, [r8, #16]	@ zero_extendqisi2
 9353              	.L894:
 9354              	.LVL784:
  98:src/keys.c    **** }
 9355              		.loc 1 98 52 view .LVU2902
 9356              	.LBE1134:
 9357              	.LBE1135:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9358              		.loc 1 106 2 is_stmt 1 view .LVU2903
 9359              	.LBE1136:
 9360              	.LBE1139:
 9361              	.LBE1143:
1643:src/keys.c    **** #ifdef DM42
 9362              		.loc 1 1643 15 is_stmt 0 view .LVU2904
 9363 09e0 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 9364              	.LBB1144:
 9365              	.LBB1140:
 9366              	.LBB1137:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9367              		.loc 1 106 16 view .LVU2905
 9368 09e4 0023     		movs	r3, #0
 9369              	.LBE1137:
 9370              	.LBE1140:
 9371              	.LBE1144:
1643:src/keys.c    **** #ifdef DM42
 9372              		.loc 1 1643 15 view .LVU2906
 9373 09e6 63F38202 		bfi	r2, r3, #2, #1
1641:src/keys.c    **** 
 9374              		.loc 1 1641 23 view .LVU2907
 9375 09ea ABF1010A 		sub	r10, fp, #1
1643:src/keys.c    **** #ifdef DM42
 9376              		.loc 1 1643 15 view .LVU2908
 9377 09ee 88F81520 		strb	r2, [r8, #21]
 9378              	.LBB1145:
 9379              	.LBB1141:
 9380              	.LBB1138:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9381              		.loc 1 106 16 view .LVU2909
 9382 09f2 88F81030 		strb	r3, [r8, #16]
ARM GAS  /tmp/cc6xzGMw.s 			page 277


 108:src/keys.c    **** }
 9383              		.loc 1 108 2 is_stmt 1 view .LVU2910
 9384              	.LVL785:
 108:src/keys.c    **** }
 9385              		.loc 1 108 2 is_stmt 0 view .LVU2911
 9386              	.LBE1138:
 9387              	.LBE1141:
 9388              	.LBE1145:
1641:src/keys.c    **** 
 9389              		.loc 1 1641 2 is_stmt 1 view .LVU2912
1641:src/keys.c    **** 
 9390              		.loc 1 1641 23 is_stmt 0 view .LVU2913
 9391 09f6 BAFA8AFA 		clz	r10, r10
1645:src/keys.c    **** 	display_current_menu ();
 9392              		.loc 1 1645 2 view .LVU2914
 9393 09fa FFF7FEFF 		bl	set_last_menu
 9394              	.LVL786:
1646:src/keys.c    **** #endif
 9395              		.loc 1 1646 2 view .LVU2915
 9396 09fe FFF7FEFF 		bl	display_current_menu
 9397              	.LVL787:
1649:src/keys.c    **** 	  if (!C_LOCK_ON) {
 9398              		.loc 1 1649 5 view .LVU2916
 9399 0a02 2D2C     		cmp	r4, #45
1641:src/keys.c    **** 
 9400              		.loc 1 1641 23 view .LVU2917
 9401 0a04 4FEA5A1A 		lsr	r10, r10, #5
 9402              	.LVL788:
1643:src/keys.c    **** #ifdef DM42
 9403              		.loc 1 1643 2 is_stmt 1 view .LVU2918
1645:src/keys.c    **** 	display_current_menu ();
 9404              		.loc 1 1645 2 view .LVU2919
1646:src/keys.c    **** #endif
 9405              		.loc 1 1646 2 view .LVU2920
1649:src/keys.c    **** 	  if (!C_LOCK_ON) {
 9406              		.loc 1 1649 2 view .LVU2921
1649:src/keys.c    **** 	  if (!C_LOCK_ON) {
 9407              		.loc 1 1649 5 is_stmt 0 view .LVU2922
 9408 0a08 00F06881 		beq	.L1372
1667:src/keys.c    **** 	
 9409              		.loc 1 1667 2 is_stmt 1 view .LVU2923
1667:src/keys.c    **** 	
 9410              		.loc 1 1667 5 is_stmt 0 view .LVU2924
 9411 0a0c BBF1000F 		cmp	fp, #0
 9412 0a10 3FF46BAE 		beq	.L1313
1669:src/keys.c    **** 		return op_map[c - K10][f];
 9413              		.loc 1 1669 2 is_stmt 1 view .LVU2925
1669:src/keys.c    **** 		return op_map[c - K10][f];
 9414              		.loc 1 1669 15 is_stmt 0 view .LVU2926
 9415 0a14 A31F     		subs	r3, r4, #6
1669:src/keys.c    **** 		return op_map[c - K10][f];
 9416              		.loc 1 1669 5 view .LVU2927
 9417 0a16 DAB2     		uxtb	r2, r3
 9418 0a18 022A     		cmp	r2, #2
 9419 0a1a 40F29B81 		bls	.L1373
1672:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 9420              		.loc 1 1672 2 is_stmt 1 view .LVU2928
ARM GAS  /tmp/cc6xzGMw.s 			page 278


1672:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 9421              		.loc 1 1672 15 is_stmt 0 view .LVU2929
 9422 0a1e 0E3C     		subs	r4, r4, #14
 9423              	.LVL789:
1672:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 9424              		.loc 1 1672 5 view .LVU2930
 9425 0a20 E3B2     		uxtb	r3, r4
 9426 0a22 012B     		cmp	r3, #1
 9427 0a24 3FF661AE 		bhi	.L1313
1673:src/keys.c    **** 
 9428              		.loc 1 1673 3 is_stmt 1 view .LVU2931
 9429 0a28 A64A     		ldr	r2, .L1410+12
 9430              	.LBB1146:
 9431              	.LBB1147:
 732:src/keys.c    **** }
 9432              		.loc 1 732 15 is_stmt 0 view .LVU2932
 9433 0a2a 98F81110 		ldrb	r1, [r8, #17]	@ zero_extendqisi2
 9434 0a2e 3368     		ldr	r3, [r6]
 9435              	.LBE1147:
 9436              	.LBE1146:
1673:src/keys.c    **** 
 9437              		.loc 1 1673 3 view .LVU2933
 9438 0a30 02EB4402 		add	r2, r2, r4, lsl #1
1675:src/keys.c    **** }
 9439              		.loc 1 1675 9 view .LVU2934
 9440 0a34 3324     		movs	r4, #51
 9441              	.LVL790:
1673:src/keys.c    **** 
 9442              		.loc 1 1673 3 view .LVU2935
 9443 0a36 12F80A20 		ldrb	r2, [r2, r10]	@ zero_extendqisi2
 9444              	.LVL791:
 9445              	.LBB1149:
 9446              	.LBI1146:
 731:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 9447              		.loc 1 731 13 is_stmt 1 view .LVU2936
 9448              	.LBB1148:
 732:src/keys.c    **** }
 9449              		.loc 1 732 2 view .LVU2937
 732:src/keys.c    **** }
 9450              		.loc 1 732 15 is_stmt 0 view .LVU2938
 9451 0a3a 9142     		cmp	r1, r2
 9452 0a3c 08BF     		it	eq
 9453 0a3e 0022     		moveq	r2, #0
 9454              	.LVL792:
 732:src/keys.c    **** }
 9455              		.loc 1 732 15 view .LVU2939
 9456 0a40 88F81120 		strb	r2, [r8, #17]
 733:src/keys.c    **** 
 9457              		.loc 1 733 1 view .LVU2940
 9458 0a44 FFF737BB 		b	.L801
 9459              	.LVL793:
 9460              	.L896:
 733:src/keys.c    **** 
 9461              		.loc 1 733 1 view .LVU2941
 9462              	.LBE1148:
 9463              	.LBE1149:
1667:src/keys.c    **** 	
ARM GAS  /tmp/cc6xzGMw.s 			page 279


 9464              		.loc 1 1667 2 is_stmt 1 view .LVU2942
1667:src/keys.c    **** 	
 9465              		.loc 1 1667 5 is_stmt 0 view .LVU2943
 9466 0a48 BBF1000F 		cmp	fp, #0
 9467 0a4c 7FF44DAE 		bne	.L1313
 9468              	.LVL794:
 9469              	.L1311:
1667:src/keys.c    **** 	
 9470              		.loc 1 1667 5 view .LVU2944
 9471 0a50 3368     		ldr	r3, [r6]
 9472              	.LBE1151:
 9473              	.LBE1159:
 9474              	.LBE1398:
 9475              	.LBE1474:
3405:src/keys.c    ****   //print_debug(60,c);
 9476              		.loc 1 3405 7 view .LVU2945
 9477 0a52 0025     		movs	r5, #0
 9478              	.LBB1475:
3585:src/keys.c    **** 	}
 9479              		.loc 1 3585 6 view .LVU2946
 9480 0a54 3324     		movs	r4, #51
 9481 0a56 FFF72EBB 		b	.L801
 9482              	.LVL795:
 9483              	.L873:
3585:src/keys.c    **** 	}
 9484              		.loc 1 3585 6 view .LVU2947
 9485              	.LBE1475:
 9486              	.LBB1476:
 9487              	.LBB1399:
 9488              	.LBB1160:
 9489              	.LBB1059:
2371:src/keys.c    **** 		// digit 2..9, -> or .
 9490              		.loc 1 2371 7 is_stmt 1 view .LVU2948
2371:src/keys.c    **** 		// digit 2..9, -> or .
 9491              		.loc 1 2371 10 is_stmt 0 view .LVU2949
 9492 0a5a BCF1090F 		cmp	ip, #9
 9493 0a5e 40F29080 		bls	.L875
 9494              	.L867:
2371:src/keys.c    **** 		// digit 2..9, -> or .
 9495              		.loc 1 2371 19 view .LVU2950
 9496 0a62 2C2C     		cmp	r4, #44
 9497 0a64 00F08D80 		beq	.L875
2371:src/keys.c    **** 		// digit 2..9, -> or .
 9498              		.loc 1 2371 35 view .LVU2951
 9499 0a68 262C     		cmp	r4, #38
 9500 0a6a 00F08A80 		beq	.L875
2377:src/keys.c    **** 	case K11:					// tests vs register
 9501              		.loc 1 2377 2 is_stmt 1 view .LVU2952
 9502 0a6e 0C2C     		cmp	r4, #12
 9503 0a70 00F08381 		beq	.L878
 9504 0a74 102C     		cmp	r4, #16
 9505 0a76 3FF438AE 		beq	.L1313
 9506 0a7a 072C     		cmp	r4, #7
 9507 0a7c 00F07D81 		beq	.L878
 9508              	.L870:
2391:src/keys.c    **** 	State2.cmplx = cmpx;
 9509              		.loc 1 2391 2 view .LVU2953
ARM GAS  /tmp/cc6xzGMw.s 			page 280


2392:src/keys.c    **** 	return STATE_UNFINISHED;
 9510              		.loc 1 2392 15 is_stmt 0 view .LVU2954
 9511 0a80 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2391:src/keys.c    **** 	State2.cmplx = cmpx;
 9512              		.loc 1 2391 14 view .LVU2955
 9513 0a84 88F80F30 		strb	r3, [r8, #15]
2392:src/keys.c    **** 	return STATE_UNFINISHED;
 9514              		.loc 1 2392 2 is_stmt 1 view .LVU2956
2392:src/keys.c    **** 	return STATE_UNFINISHED;
 9515              		.loc 1 2392 15 is_stmt 0 view .LVU2957
 9516 0a88 6BF34102 		bfi	r2, fp, #1, #1
 9517 0a8c 3368     		ldr	r3, [r6]
 9518              	.LVL796:
2392:src/keys.c    **** 	return STATE_UNFINISHED;
 9519              		.loc 1 2392 15 view .LVU2958
 9520 0a8e 88F81520 		strb	r2, [r8, #21]
2393:src/keys.c    **** }
 9521              		.loc 1 2393 2 is_stmt 1 view .LVU2959
2393:src/keys.c    **** }
 9522              		.loc 1 2393 9 is_stmt 0 view .LVU2960
 9523 0a92 3324     		movs	r4, #51
 9524              	.LVL797:
2393:src/keys.c    **** }
 9525              		.loc 1 2393 9 view .LVU2961
 9526 0a94 FFF70FBB 		b	.L801
 9527              	.LVL798:
 9528              	.L1358:
2393:src/keys.c    **** }
 9529              		.loc 1 2393 9 view .LVU2962
 9530              	.LBE1059:
 9531              	.LBE1160:
 9532              	.LBB1161:
 9533              	.LBB1078:
1711:src/keys.c    **** 	}
 9534              		.loc 1 1711 3 is_stmt 1 view .LVU2963
1711:src/keys.c    **** 	}
 9535              		.loc 1 1711 8 is_stmt 0 view .LVU2964
 9536 0a98 FFF7FEFF 		bl	gtodot_digit
 9537              	.LVL799:
1760:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9538              		.loc 1 1760 2 is_stmt 1 view .LVU2965
1760:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9539              		.loc 1 1760 5 is_stmt 0 view .LVU2966
 9540 0a9c 0028     		cmp	r0, #0
1760:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9541              		.loc 1 1760 5 view .LVU2967
 9542 0a9e FFF624AE 		blt	.L1313
 9543              	.L838:
1761:src/keys.c    **** fin:		set_pc(rawpc);
 9544              		.loc 1 1761 3 is_stmt 1 view .LVU2968
1761:src/keys.c    **** fin:		set_pc(rawpc);
 9545              		.loc 1 1761 11 is_stmt 0 view .LVU2969
 9546 0aa2 FFF7FEFF 		bl	find_user_pc
 9547              	.LVL800:
1761:src/keys.c    **** fin:		set_pc(rawpc);
 9548              		.loc 1 1761 11 view .LVU2970
 9549 0aa6 E8E6     		b	.L847
ARM GAS  /tmp/cc6xzGMw.s 			page 281


 9550              	.LVL801:
 9551              	.L868:
1761:src/keys.c    **** fin:		set_pc(rawpc);
 9552              		.loc 1 1761 11 view .LVU2971
 9553              	.LBE1078:
 9554              	.LBE1161:
 9555              	.LBB1162:
 9556              	.LBB1060:
2363:src/keys.c    **** 		// Special 0
 9557              		.loc 1 2363 7 is_stmt 1 view .LVU2972
2363:src/keys.c    **** 		// Special 0
 9558              		.loc 1 2363 10 is_stmt 0 view .LVU2973
 9559 0aa8 BCF1000F 		cmp	ip, #0
 9560 0aac 40F07386 		bne	.L871
2365:src/keys.c    **** 	}
 9561              		.loc 1 2365 3 is_stmt 1 view .LVU2974
2365:src/keys.c    **** 	}
 9562              		.loc 1 2365 18 is_stmt 0 view .LVU2975
 9563 0ab0 BBF1000F 		cmp	fp, #0
 9564 0ab4 14BF     		ite	ne
 9565 0ab6 2524     		movne	r4, #37
 9566              	.LVL802:
2365:src/keys.c    **** 	}
 9567              		.loc 1 2365 18 view .LVU2976
 9568 0ab8 1724     		moveq	r4, #23
2365:src/keys.c    **** 	}
 9569              		.loc 1 2365 47 view .LVU2977
 9570 0aba 1C44     		add	r4, r4, r3
 9571 0abc 90E4     		b	.L835
 9572              	.LVL803:
 9573              	.L1353:
2365:src/keys.c    **** 	}
 9574              		.loc 1 2365 47 view .LVU2978
 9575              	.LBE1060:
 9576              	.LBE1162:
 9577              	.LBB1163:
 9578              	.LBB837:
 278:src/keys.c    **** 				case K53:
 9579              		.loc 1 278 4 is_stmt 1 view .LVU2979
 9580 0abe 231F     		subs	r3, r4, #4
 9581 0ac0 1D2B     		cmp	r3, #29
 9582 0ac2 3FF6DCAB 		bhi	.L927
 9583 0ac6 01A0     		adr	r0, .L911
 9584 0ac8 50F823F0 		ldr	pc, [r0, r3, lsl #2]
 9585              		.p2align 2
 9586              	.L911:
 9587 0acc 490B0000 		.word	.L914+1
 9588 0ad0 590B0000 		.word	.L913+1
 9589 0ad4 7F020000 		.word	.L927+1
 9590 0ad8 7F020000 		.word	.L927+1
 9591 0adc 7F020000 		.word	.L927+1
 9592 0ae0 7F020000 		.word	.L927+1
 9593 0ae4 7F020000 		.word	.L927+1
 9594 0ae8 7F020000 		.word	.L927+1
 9595 0aec 4D0B0000 		.word	.L912+1
 9596 0af0 7F020000 		.word	.L927+1
 9597 0af4 7F020000 		.word	.L927+1
ARM GAS  /tmp/cc6xzGMw.s 			page 282


 9598 0af8 7F020000 		.word	.L927+1
 9599 0afc 7F020000 		.word	.L927+1
 9600 0b00 7F020000 		.word	.L927+1
 9601 0b04 7F020000 		.word	.L927+1
 9602 0b08 7F020000 		.word	.L927+1
 9603 0b0c 7F020000 		.word	.L927+1
 9604 0b10 7F020000 		.word	.L927+1
 9605 0b14 7F020000 		.word	.L927+1
 9606 0b18 7F020000 		.word	.L927+1
 9607 0b1c 7F020000 		.word	.L927+1
 9608 0b20 7F020000 		.word	.L927+1
 9609 0b24 7F020000 		.word	.L927+1
 9610 0b28 7F020000 		.word	.L927+1
 9611 0b2c 7F020000 		.word	.L927+1
 9612 0b30 7F020000 		.word	.L927+1
 9613 0b34 7F020000 		.word	.L927+1
 9614 0b38 7F020000 		.word	.L927+1
 9615 0b3c 7F020000 		.word	.L927+1
 9616 0b40 450B0000 		.word	.L1140+1
 9617              		.p2align 1
 9618              	.L1140:
 280:src/keys.c    **** 				case K04:
 9619              		.loc 1 280 13 is_stmt 0 view .LVU2980
 9620 0b44 0223     		movs	r3, #2
 9621 0b46 C2E5     		b	.L910
 9622              	.L914:
 277:src/keys.c    **** 			switch (c) {
 9623              		.loc 1 277 6 view .LVU2981
 9624 0b48 1223     		movs	r3, #18
 9625 0b4a C0E5     		b	.L910
 9626              	.L912:
 286:src/keys.c    **** 						finish_cpx_entry(1);
 9627              		.loc 1 286 6 is_stmt 1 view .LVU2982
 286:src/keys.c    **** 						finish_cpx_entry(1);
 9628              		.loc 1 286 9 is_stmt 0 view .LVU2983
 9629 0b4c 11F0060F 		tst	r1, #6
 9630 0b50 40F0E585 		bne	.L1374
 289:src/keys.c    **** 				default:
 9631              		.loc 1 289 13 view .LVU2984
 9632 0b54 1123     		movs	r3, #17
 9633 0b56 BAE5     		b	.L910
 9634              	.L913:
 284:src/keys.c    **** 				case K20:
 9635              		.loc 1 284 6 is_stmt 1 view .LVU2985
 9636              	.LVL804:
 284:src/keys.c    **** 				case K20:
 9637              		.loc 1 284 6 is_stmt 0 view .LVU2986
 9638              	.LBE837:
 9639              	.LBE1163:
3321:src/keys.c    **** 		if (is_bad_cmdline())
 9640              		.loc 1 3321 2 is_stmt 1 view .LVU2987
 9641              	.LBB1164:
 9642              	.LBB838:
 284:src/keys.c    **** 				case K20:
 9643              		.loc 1 284 13 is_stmt 0 view .LVU2988
 9644 0b58 0923     		movs	r3, #9
 9645 0b5a B8E5     		b	.L910
ARM GAS  /tmp/cc6xzGMw.s 			page 283


 9646              	.LVL805:
 9647              	.L1381:
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 9648              		.loc 1 312 74 view .LVU2989
 9649 0b5c D8F81410 		ldr	r1, [r8, #20]
 9650 0b60 DFF874C1 		ldr	ip, .L1410+32
 9651 0b64 11EA0C0F 		tst	r1, ip
 9652 0b68 3FF4B1AD 		beq	.L910
 315:src/keys.c    ****     /*
 9653              		.loc 1 315 3 is_stmt 1 view .LVU2990
 315:src/keys.c    ****     /*
 9654              		.loc 1 315 23 is_stmt 0 view .LVU2991
 9655 0b6c 564B     		ldr	r3, .L1410+16
 315:src/keys.c    ****     /*
 9656              		.loc 1 315 6 view .LVU2992
 9657 0b6e 1942     		tst	r1, r3
 9658 0b70 3FF46CAB 		beq	.L1124
 9659              	.L920:
 9660              	.LBB830:
 384:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 9661              		.loc 1 384 5 is_stmt 1 view .LVU2993
 408:src/keys.c    **** 
 9662              		.loc 1 408 5 view .LVU2994
 413:src/keys.c    ****     col = smap[shift];
 9663              		.loc 1 413 5 view .LVU2995
 9664              	.LVL806:
 414:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 9665              		.loc 1 414 5 view .LVU2996
 414:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 9666              		.loc 1 414 15 is_stmt 0 view .LVU2997
 9667 0b74 5549     		ldr	r1, .L1410+20
 413:src/keys.c    ****     col = smap[shift];
 9668              		.loc 1 413 8 view .LVU2998
 9669 0b76 564B     		ldr	r3, .L1410+24
 414:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 9670              		.loc 1 414 9 view .LVU2999
 9671 0b78 11F80BC0 		ldrb	ip, [r1, fp]	@ zero_extendqisi2
 9672              	.LVL807:
 415:src/keys.c    ****   }
 9673              		.loc 1 415 5 is_stmt 1 view .LVU3000
 415:src/keys.c    ****   }
 9674              		.loc 1 415 9 is_stmt 0 view .LVU3001
 9675 0b7c 0821     		movs	r1, #8
 9676 0b7e FFF772BB 		b	.L922
 9677              	.LVL808:
 9678              	.L875:
 415:src/keys.c    ****   }
 9679              		.loc 1 415 9 view .LVU3002
 9680              	.LBE830:
 9681              	.LBE838:
 9682              	.LBE1164:
 9683              	.LBB1165:
 9684              	.LBB1061:
2373:src/keys.c    **** 		return process_arg(c);
 9685              		.loc 1 2373 3 is_stmt 1 view .LVU3003
 9686              	.LBB1054:
 9687              	.LBI1054:
ARM GAS  /tmp/cc6xzGMw.s 			page 284


 552:src/keys.c    **** 	if (is_bad_cmdline())
 9688              		.loc 1 552 13 view .LVU3004
 9689              	.LBB1055:
 553:src/keys.c    **** 		return;
 9690              		.loc 1 553 2 view .LVU3005
 553:src/keys.c    **** 		return;
 9691              		.loc 1 553 6 is_stmt 0 view .LVU3006
 9692 0b82 FFF7FEFF 		bl	is_bad_cmdline
 9693              	.LVL809:
 553:src/keys.c    **** 		return;
 9694              		.loc 1 553 5 view .LVU3007
 9695 0b86 18B9     		cbnz	r0, .L877
 9696 0b88 5FFA8AF0 		uxtb	r0, r10
 9697 0b8c FFF7FEFF 		bl	init_arg.part.0
 9698              	.LVL810:
 9699              	.L877:
 553:src/keys.c    **** 		return;
 9700              		.loc 1 553 5 view .LVU3008
 9701              	.LBE1055:
 9702              	.LBE1054:
2374:src/keys.c    **** 	}
 9703              		.loc 1 2374 3 is_stmt 1 view .LVU3009
2374:src/keys.c    **** 	}
 9704              		.loc 1 2374 10 is_stmt 0 view .LVU3010
 9705 0b90 2046     		mov	r0, r4
 9706 0b92 FFF7FEFF 		bl	process_arg
 9707              	.LVL811:
 9708 0b96 0446     		mov	r4, r0
 9709              	.LVL812:
2374:src/keys.c    **** 	}
 9710              		.loc 1 2374 10 view .LVU3011
 9711 0b98 22E4     		b	.L835
 9712              	.LVL813:
 9713              	.L1334:
2374:src/keys.c    **** 	}
 9714              		.loc 1 2374 10 view .LVU3012
 9715              	.LBE1061:
 9716              	.LBE1165:
3296:src/keys.c    **** 		return STATE_UNFINISHED;
 9717              		.loc 1 3296 3 is_stmt 1 view .LVU3013
 9718              	.LBB1166:
 9719              	.LBI1166:
 121:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 9720              		.loc 1 121 13 view .LVU3014
 9721              	.LBB1167:
 122:src/keys.c    **** }
 9722              		.loc 1 122 2 view .LVU3015
 122:src/keys.c    **** }
 9723              		.loc 1 122 16 is_stmt 0 view .LVU3016
 9724 0b9a 98F81020 		ldrb	r2, [r8, #16]	@ zero_extendqisi2
 9725 0b9e 3368     		ldr	r3, [r6]
 9726 0ba0 013A     		subs	r2, r2, #1
 9727 0ba2 18BF     		it	ne
 9728 0ba4 0122     		movne	r2, #1
 9729 0ba6 88F81020 		strb	r2, [r8, #16]
 9730              	.LVL814:
 122:src/keys.c    **** }
ARM GAS  /tmp/cc6xzGMw.s 			page 285


 9731              		.loc 1 122 16 view .LVU3017
 9732              	.LBE1167:
 9733              	.LBE1166:
3297:src/keys.c    **** 	}
 9734              		.loc 1 3297 3 is_stmt 1 view .LVU3018
3297:src/keys.c    **** 	}
 9735              		.loc 1 3297 10 is_stmt 0 view .LVU3019
 9736 0baa 3324     		movs	r4, #51
 9737              	.LVL815:
3297:src/keys.c    **** 	}
 9738              		.loc 1 3297 10 view .LVU3020
 9739 0bac FFF783BA 		b	.L801
 9740              	.LVL816:
 9741              	.L1335:
3300:src/keys.c    **** 		return STATE_UNFINISHED;
 9742              		.loc 1 3300 3 is_stmt 1 view .LVU3021
 9743              	.LBB1168:
 9744              	.LBI1168:
 121:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 9745              		.loc 1 121 13 view .LVU3022
 9746              	.LBB1169:
 122:src/keys.c    **** }
 9747              		.loc 1 122 2 view .LVU3023
 122:src/keys.c    **** }
 9748              		.loc 1 122 16 is_stmt 0 view .LVU3024
 9749 0bb0 98F81020 		ldrb	r2, [r8, #16]	@ zero_extendqisi2
 9750 0bb4 3368     		ldr	r3, [r6]
 9751 0bb6 022A     		cmp	r2, #2
 9752 0bb8 18BF     		it	ne
 9753 0bba 0221     		movne	r1, #2
 9754 0bbc 88F81010 		strb	r1, [r8, #16]
 9755              	.LVL817:
 122:src/keys.c    **** }
 9756              		.loc 1 122 16 view .LVU3025
 9757              	.LBE1169:
 9758              	.LBE1168:
3301:src/keys.c    **** 	}
 9759              		.loc 1 3301 3 is_stmt 1 view .LVU3026
3301:src/keys.c    **** 	}
 9760              		.loc 1 3301 10 is_stmt 0 view .LVU3027
 9761 0bc0 3324     		movs	r4, #51
 9762              	.LVL818:
3301:src/keys.c    **** 	}
 9763              		.loc 1 3301 10 view .LVU3028
 9764 0bc2 FFF778BA 		b	.L801
 9765              	.LVL819:
 9766              	.L1341:
 9767              	.LBB1170:
 9768              	.LBB839:
 423:src/keys.c    ****       break;
 9769              		.loc 1 423 7 is_stmt 1 view .LVU3029
 423:src/keys.c    ****       break;
 9770              		.loc 1 423 11 is_stmt 0 view .LVU3030
 9771 0bc6 6344     		add	r3, r3, ip
 9772              	.LVL820:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9773              		.loc 1 427 6 view .LVU3031
ARM GAS  /tmp/cc6xzGMw.s 			page 286


 9774 0bc8 1107     		lsls	r1, r2, #28
 423:src/keys.c    ****       break;
 9775              		.loc 1 423 11 view .LVU3032
 9776 0bca 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 9777              	.LVL821:
 424:src/keys.c    ****     }
 9778              		.loc 1 424 7 is_stmt 1 view .LVU3033
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9779              		.loc 1 427 3 view .LVU3034
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9780              		.loc 1 427 6 is_stmt 0 view .LVU3035
 9781 0bcc 40F1C980 		bpl	.L1375
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9782              		.loc 1 427 20 view .LVU3036
 9783 0bd0 A3F10B02 		sub	r2, r3, #11
 9784 0bd4 042A     		cmp	r2, #4
 9785 0bd6 7FF67AAD 		bls	.L910
 9786              	.LVL822:
 9787              	.L933:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9788              		.loc 1 427 20 view .LVU3037
 9789              	.LBE839:
 9790              	.LBE1170:
3333:src/keys.c    **** 
 9791              		.loc 1 3333 3 is_stmt 1 view .LVU3038
 9792              	.LBB1171:
 9793              	.LBI1171:
2806:src/keys.c    **** 	enum shifts shift = reset_shift();
 9794              		.loc 1 2806 12 view .LVU3039
 9795              	.LBB1172:
2807:src/keys.c    **** 	unsigned int ch = 0;
 9796              		.loc 1 2807 2 view .LVU3040
 9797              	.LBB1173:
 9798              	.LBI1173:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 9799              		.loc 1 114 13 view .LVU3041
 9800              	.LBE1173:
 9801              	.LBE1172:
 9802              	.LBE1171:
 9803              	.LBE1399:
 9804              	.LBE1476:
 115:src/keys.c    **** }
 9805              		.loc 1 115 2 view .LVU3042
 9806              	.LBB1477:
 9807              	.LBB1400:
 9808              	.LBB1208:
 9809              	.LBB1201:
 9810              	.LBB1180:
 9811              	.LBB1174:
 9812              	.LBI1174:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 9813              		.loc 1 104 20 view .LVU3043
 9814              	.LBB1175:
 105:src/keys.c    **** 	State2.shifts = shift;
 9815              		.loc 1 105 2 view .LVU3044
 9816              	.LBB1176:
 9817              	.LBI1176:
ARM GAS  /tmp/cc6xzGMw.s 			page 287


  96:src/keys.c    **** 	enum shifts s = shift_down();
 9818              		.loc 1 96 13 view .LVU3045
 9819              	.LBB1177:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9820              		.loc 1 97 2 view .LVU3046
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9821              		.loc 1 97 18 is_stmt 0 view .LVU3047
 9822 0bda FFF7FEFF 		bl	shift_down
 9823              	.LVL823:
  98:src/keys.c    **** }
 9824              		.loc 1 98 2 is_stmt 1 view .LVU3048
  98:src/keys.c    **** }
 9825              		.loc 1 98 52 is_stmt 0 view .LVU3049
 9826 0bde 0146     		mov	r1, r0
 9827 0be0 08B9     		cbnz	r0, .L930
 9828 0be2 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 9829              	.L930:
 9830              	.LVL824:
  98:src/keys.c    **** }
 9831              		.loc 1 98 52 view .LVU3050
 9832              	.LBE1177:
 9833              	.LBE1176:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9834              		.loc 1 106 2 is_stmt 1 view .LVU3051
 9835              	.LBE1175:
 9836              	.LBE1174:
 9837              	.LBE1180:
2811:src/keys.c    **** 		// Alpha catalogue from within multi character command
 9838              		.loc 1 2811 5 is_stmt 0 view .LVU3052
 9839 0be6 98F80E00 		ldrb	r0, [r8, #14]	@ zero_extendqisi2
 9840              	.LBB1181:
 9841              	.LBB1179:
 9842              	.LBB1178:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9843              		.loc 1 106 16 view .LVU3053
 9844 0bea 0023     		movs	r3, #0
 9845 0bec 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 9846              		.loc 1 108 2 is_stmt 1 view .LVU3054
 9847              	.LVL825:
 108:src/keys.c    **** }
 9848              		.loc 1 108 2 is_stmt 0 view .LVU3055
 9849              	.LBE1178:
 9850              	.LBE1179:
 9851              	.LBE1181:
2808:src/keys.c    **** 	unsigned int opcode;
 9852              		.loc 1 2808 2 is_stmt 1 view .LVU3056
2809:src/keys.c    **** 
 9853              		.loc 1 2809 2 view .LVU3057
2811:src/keys.c    **** 		// Alpha catalogue from within multi character command
 9854              		.loc 1 2811 2 view .LVU3058
2811:src/keys.c    **** 		// Alpha catalogue from within multi character command
 9855              		.loc 1 2811 5 is_stmt 0 view .LVU3059
 9856 0bf0 0028     		cmp	r0, #0
 9857 0bf2 40F04D84 		bne	.L1376
2820:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
 9858              		.loc 1 2820 2 is_stmt 1 view .LVU3060
ARM GAS  /tmp/cc6xzGMw.s 			page 288


 9859 0bf6 102C     		cmp	r4, #16
 9860 0bf8 00F02285 		beq	.L937
 9861 0bfc 242C     		cmp	r4, #36
 9862 0bfe 00F00285 		beq	.L938
 9863 0c02 0C2C     		cmp	r4, #12
 9864 0c04 00F0BC84 		beq	.L1377
 9865              	.L939:
2853:src/keys.c    **** 	if (ch == 0)
 9866              		.loc 1 2853 2 view .LVU3061
 9867              	.LBB1182:
 9868              	.LBB1183:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 9869              		.loc 1 485 6 is_stmt 0 view .LVU3062
 9870 0c08 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9871              	.LVL826:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 9872              		.loc 1 485 6 view .LVU3063
 9873              	.LBE1183:
 9874              	.LBI1182:
 435:src/keys.c    **** {
 9875              		.loc 1 435 12 is_stmt 1 view .LVU3064
 9876              	.LBB1188:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 9877              		.loc 1 437 2 view .LVU3065
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 9878              		.loc 1 485 2 view .LVU3066
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 9879              		.loc 1 485 5 is_stmt 0 view .LVU3067
 9880 0c0c D806     		lsls	r0, r3, #27
 9881 0c0e 03D5     		bpl	.L943
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 9882              		.loc 1 486 3 is_stmt 1 view .LVU3068
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 9883              		.loc 1 486 6 is_stmt 0 view .LVU3069
 9884 0c10 0029     		cmp	r1, #0
 9885 0c12 40F0CC85 		bne	.L1378
 487:src/keys.c    **** 		else if (shift == SHIFT_G)
 9886              		.loc 1 487 10 view .LVU3070
 9887 0c16 0421     		movs	r1, #4
 9888              	.LVL827:
 9889              	.L943:
 491:src/keys.c    **** }
 9890              		.loc 1 491 2 is_stmt 1 view .LVU3071
 9891              	.LBB1184:
 9892              	.LBI1184:
 131:src/keys.c    **** {
 9893              		.loc 1 131 12 view .LVU3072
 9894              	.LBB1185:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9895              		.loc 1 133 2 view .LVU3073
 143:src/keys.c    **** }
 9896              		.loc 1 143 2 view .LVU3074
 143:src/keys.c    **** }
 9897              		.loc 1 143 23 is_stmt 0 view .LVU3075
 9898 0c18 284B     		ldr	r3, .L1410+4
 9899              	.LBE1185:
 9900              	.LBE1184:
ARM GAS  /tmp/cc6xzGMw.s 			page 289


 491:src/keys.c    **** }
 9901              		.loc 1 491 49 view .LVU3076
 9902 0c1a 2E4A     		ldr	r2, .L1410+28
 9903              	.LBB1187:
 9904              	.LBB1186:
 143:src/keys.c    **** }
 9905              		.loc 1 143 23 view .LVU3077
 9906 0c1c 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 9907              	.LBE1186:
 9908              	.LBE1187:
 491:src/keys.c    **** }
 9909              		.loc 1 491 49 view .LVU3078
 9910 0c1e 0620     		movs	r0, #6
 9911 0c20 00FB0323 		mla	r3, r0, r3, r2
 9912              	.LBE1188:
 9913              	.LBE1182:
2853:src/keys.c    **** 	if (ch == 0)
 9914              		.loc 1 2853 5 view .LVU3079
 9915 0c24 5C5C     		ldrb	r4, [r3, r1]	@ zero_extendqisi2
 9916              	.LVL828:
2854:src/keys.c    **** 		return STATE_UNFINISHED;
 9917              		.loc 1 2854 2 is_stmt 1 view .LVU3080
2854:src/keys.c    **** 		return STATE_UNFINISHED;
 9918              		.loc 1 2854 5 is_stmt 0 view .LVU3081
 9919 0c26 002C     		cmp	r4, #0
 9920 0c28 3FF45FAD 		beq	.L1313
 9921              	.L936:
2857:src/keys.c    **** 		State2.digval = ch;
 9922              		.loc 1 2857 2 is_stmt 1 view .LVU3082
2857:src/keys.c    **** 		State2.digval = ch;
 9923              		.loc 1 2857 12 is_stmt 0 view .LVU3083
 9924 0c2c 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
2857:src/keys.c    **** 		State2.digval = ch;
 9925              		.loc 1 2857 5 view .LVU3084
 9926 0c30 002B     		cmp	r3, #0
 9927 0c32 00F03685 		beq	.L1379
2861:src/keys.c    **** 		State2.digval2 = ch;
 9928              		.loc 1 2861 9 is_stmt 1 view .LVU3085
2861:src/keys.c    **** 		State2.digval2 = ch;
 9929              		.loc 1 2861 12 is_stmt 0 view .LVU3086
 9930 0c36 012B     		cmp	r3, #1
 9931 0c38 00F0BE85 		beq	.L1380
2866:src/keys.c    **** 
 9932              		.loc 1 2866 2 is_stmt 1 view .LVU3087
 9933              	.LBB1190:
 9934              	.LBI1190:
2799:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 9935              		.loc 1 2799 13 view .LVU3088
 9936              	.LBB1191:
2801:src/keys.c    **** 	if (! State2.alphas )
 9937              		.loc 1 2801 2 view .LVU3089
2801:src/keys.c    **** 	if (! State2.alphas )
 9938              		.loc 1 2801 15 is_stmt 0 view .LVU3090
 9939 0c3c 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2802:src/keys.c    **** 		State2.alphashift = 0;
 9940              		.loc 1 2802 6 view .LVU3091
 9941 0c40 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
ARM GAS  /tmp/cc6xzGMw.s 			page 290


2801:src/keys.c    **** 	if (! State2.alphas )
 9942              		.loc 1 2801 15 view .LVU3092
 9943 0c44 6FF3C302 		bfc	r2, #3, #1
 9944 0c48 88F81520 		strb	r2, [r8, #21]
2802:src/keys.c    **** 		State2.alphashift = 0;
 9945              		.loc 1 2802 2 is_stmt 1 view .LVU3093
2802:src/keys.c    **** 		State2.alphashift = 0;
 9946              		.loc 1 2802 5 is_stmt 0 view .LVU3094
 9947 0c4c 13F00802 		ands	r2, r3, #8
2803:src/keys.c    **** }
 9948              		.loc 1 2803 3 is_stmt 1 view .LVU3095
2803:src/keys.c    **** }
 9949              		.loc 1 2803 21 is_stmt 0 view .LVU3096
 9950 0c50 04BF     		itt	eq
 9951 0c52 62F30413 		bfieq	r3, r2, #4, #1
 9952 0c56 88F81630 		strbeq	r3, [r8, #22]
 9953              	.LVL829:
 9954              	.L942:
2803:src/keys.c    **** }
 9955              		.loc 1 2803 21 view .LVU3097
 9956              	.LBE1191:
 9957              	.LBE1190:
2869:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 9958              		.loc 1 2869 2 is_stmt 1 view .LVU3098
2871:src/keys.c    **** }
 9959              		.loc 1 2871 2 view .LVU3099
2869:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 9960              		.loc 1 2869 21 is_stmt 0 view .LVU3100
 9961 0c5a 98F81F30 		ldrb	r3, [r8, #31]	@ zero_extendqisi2
2870:src/keys.c    **** 	return opcode;
 9962              		.loc 1 2870 17 view .LVU3101
 9963 0c5e B8F80810 		ldrh	r1, [r8, #8]
2870:src/keys.c    **** 	return opcode;
 9964              		.loc 1 2870 34 view .LVU3102
 9965 0c62 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
2869:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 9966              		.loc 1 2869 29 view .LVU3103
 9967 0c66 1B02     		lsls	r3, r3, #8
2869:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 9968              		.loc 1 2869 18 view .LVU3104
 9969 0c68 03F57043 		add	r3, r3, #61440
2870:src/keys.c    **** 	return opcode;
 9970              		.loc 1 2870 9 view .LVU3105
 9971 0c6c 0B44     		add	r3, r3, r1
2870:src/keys.c    **** 	return opcode;
 9972              		.loc 1 2870 25 view .LVU3106
 9973 0c6e 03EB0243 		add	r3, r3, r2, lsl #16
2869:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 9974              		.loc 1 2869 9 view .LVU3107
 9975 0c72 03EB0464 		add	r4, r3, r4, lsl #24
 9976              	.LVL830:
2871:src/keys.c    **** }
 9977              		.loc 1 2871 9 view .LVU3108
 9978 0c76 FFF7B3BB 		b	.L835
 9979              	.LVL831:
 9980              	.L1336:
2871:src/keys.c    **** }
ARM GAS  /tmp/cc6xzGMw.s 			page 291


 9981              		.loc 1 2871 9 view .LVU3109
 9982              	.LBE1201:
 9983              	.LBE1208:
3304:src/keys.c    **** 		State2.arrow = 0;
 9984              		.loc 1 3304 3 is_stmt 1 view .LVU3110
 9985              	.LBB1209:
 9986              	.LBI1209:
 121:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 9987              		.loc 1 121 13 view .LVU3111
 9988              	.LBB1210:
 122:src/keys.c    **** }
 9989              		.loc 1 122 2 view .LVU3112
 122:src/keys.c    **** }
 9990              		.loc 1 122 16 is_stmt 0 view .LVU3113
 9991 0c7a 98F81040 		ldrb	r4, [r8, #16]	@ zero_extendqisi2
 9992              	.LVL832:
 122:src/keys.c    **** }
 9993              		.loc 1 122 16 view .LVU3114
 9994 0c7e 3368     		ldr	r3, [r6]
 9995 0c80 032C     		cmp	r4, #3
 9996              	.LBE1210:
 9997              	.LBE1209:
3305:src/keys.c    **** 		return STATE_UNFINISHED;
 9998              		.loc 1 3305 16 view .LVU3115
 9999 0c82 60F38202 		bfi	r2, r0, #2, #1
 10000              	.LBB1213:
 10001              	.LBB1211:
 122:src/keys.c    **** }
 10002              		.loc 1 122 16 view .LVU3116
 10003 0c86 18BF     		it	ne
 10004 0c88 0321     		movne	r1, #3
 10005              	.LBE1211:
 10006              	.LBE1213:
3305:src/keys.c    **** 		return STATE_UNFINISHED;
 10007              		.loc 1 3305 16 view .LVU3117
 10008 0c8a 88F81520 		strb	r2, [r8, #21]
 10009              	.LBB1214:
 10010              	.LBB1212:
 122:src/keys.c    **** }
 10011              		.loc 1 122 16 view .LVU3118
 10012 0c8e 88F81010 		strb	r1, [r8, #16]
 10013              	.LVL833:
 122:src/keys.c    **** }
 10014              		.loc 1 122 16 view .LVU3119
 10015              	.LBE1212:
 10016              	.LBE1214:
3305:src/keys.c    **** 		return STATE_UNFINISHED;
 10017              		.loc 1 3305 3 is_stmt 1 view .LVU3120
3306:src/keys.c    **** 	}
 10018              		.loc 1 3306 3 view .LVU3121
3306:src/keys.c    **** 	}
 10019              		.loc 1 3306 10 is_stmt 0 view .LVU3122
 10020 0c92 3324     		movs	r4, #51
 10021 0c94 FFF70FBA 		b	.L801
 10022              	.LVL834:
 10023              	.L1339:
 10024              	.LBB1215:
ARM GAS  /tmp/cc6xzGMw.s 			page 292


 10025              	.LBB840:
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 10026              		.loc 1 312 16 view .LVU3123
 10027 0c98 BBF1030F 		cmp	fp, #3
 10028 0c9c 3FF45EAF 		beq	.L1381
 315:src/keys.c    ****     /*
 10029              		.loc 1 315 3 is_stmt 1 view .LVU3124
 315:src/keys.c    ****     /*
 10030              		.loc 1 315 23 is_stmt 0 view .LVU3125
 10031 0ca0 0949     		ldr	r1, .L1410+16
 10032 0ca2 D8F81430 		ldr	r3, [r8, #20]
 315:src/keys.c    ****     /*
 10033              		.loc 1 315 6 view .LVU3126
 10034 0ca6 1942     		tst	r1, r3
 10035 0ca8 3FF4E9AA 		beq	.L927
 10036 0cac 62E7     		b	.L920
 10037              	.LVL835:
 10038              	.L1368:
 315:src/keys.c    ****     /*
 10039              		.loc 1 315 6 view .LVU3127
 10040              	.LBE840:
 10041              	.LBE1215:
 10042              	.LBB1216:
 10043              	.LBB1119:
2915:src/keys.c    **** 			n = max;
 10044              		.loc 1 2915 3 is_stmt 1 view .LVU3128
2915:src/keys.c    **** 			n = max;
 10045              		.loc 1 2915 6 is_stmt 0 view .LVU3129
 10046 0cae 0A1F     		subs	r2, r1, #4
 10047              	.LVL836:
2915:src/keys.c    **** 			n = max;
 10048              		.loc 1 2915 6 view .LVU3130
 10049 0cb0 0129     		cmp	r1, #1
 10050 0cb2 18BF     		it	ne
 10051 0cb4 1346     		movne	r3, r2
 10052              	.LVL837:
2915:src/keys.c    **** 			n = max;
 10053              		.loc 1 2915 6 view .LVU3131
 10054 0cb6 85E6     		b	.L884
 10055              	.L1411:
 10056              		.align	2
 10057              	.L1410:
 10058 0cb8 00000000 		.word	main_ram
 10059 0cbc 00000000 		.word	.LANCHOR6
 10060 0cc0 00000000 		.word	.LANCHOR5
 10061 0cc4 00000000 		.word	.LANCHOR21
 10062 0cc8 00080800 		.word	526336
 10063 0ccc 00000000 		.word	.LANCHOR22
 10064 0cd0 00000000 		.word	.LANCHOR16
 10065 0cd4 00000000 		.word	.LANCHOR15
 10066 0cd8 000A4000 		.word	4196864
 10067              	.LVL838:
 10068              	.L1372:
2915:src/keys.c    **** 			n = max;
 10069              		.loc 1 2915 6 view .LVU3132
 10070              	.LBE1119:
 10071              	.LBE1216:
ARM GAS  /tmp/cc6xzGMw.s 			page 293


 10072              	.LBB1217:
 10073              	.LBB1152:
1649:src/keys.c    **** 	  if (!C_LOCK_ON) {
 10074              		.loc 1 1649 19 view .LVU3133
 10075 0cdc D04B     		ldr	r3, .L1412
 10076 0cde 1B68     		ldr	r3, [r3]
 10077 0ce0 93F8AC37 		ldrb	r3, [r3, #1964]	@ zero_extendqisi2
 10078 0ce4 5A06     		lsls	r2, r3, #25
 10079 0ce6 7FF5AFAE 		bpl	.L896
1650:src/keys.c    **** 	    set_menu (17);
 10080              		.loc 1 1650 4 is_stmt 1 view .LVU3134
1650:src/keys.c    **** 	    set_menu (17);
 10081              		.loc 1 1650 7 is_stmt 0 view .LVU3135
 10082 0cea 13F00104 		ands	r4, r3, #1
 10083              	.LVL839:
1650:src/keys.c    **** 	    set_menu (17);
 10084              		.loc 1 1650 7 view .LVU3136
 10085 0cee 40F0BE83 		bne	.L897
1651:src/keys.c    **** 	    display_current_menu();
 10086              		.loc 1 1651 6 is_stmt 1 view .LVU3137
 10087 0cf2 1120     		movs	r0, #17
 10088 0cf4 FFF7FEFF 		bl	set_menu
 10089              	.LVL840:
1652:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
 10090              		.loc 1 1652 6 view .LVU3138
 10091 0cf8 FFF7FEFF 		bl	display_current_menu
 10092              	.LVL841:
1653:src/keys.c    **** 	  }
 10093              		.loc 1 1653 6 view .LVU3139
1653:src/keys.c    **** 	  }
 10094              		.loc 1 1653 6 is_stmt 0 view .LVU3140
 10095              	.LBE1152:
 10096              	.LBE1217:
 10097              	.LBE1400:
 10098              	.LBE1477:
3631:src/keys.c    **** 	NonProgrammable = 0;
 10099              		.loc 1 3631 7 is_stmt 1 view .LVU3141
3631:src/keys.c    **** 	NonProgrammable = 0;
 10100              		.loc 1 3631 11 is_stmt 0 view .LVU3142
 10101 0cfc 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3631:src/keys.c    **** 	NonProgrammable = 0;
 10102              		.loc 1 3631 10 view .LVU3143
 10103 0d00 5D06     		lsls	r5, r3, #25
 10104 0d02 00F1FC84 		bmi	.L898
 10105              	.LBB1478:
 10106              	.LBB1401:
 10107              	.LBB1218:
 10108              	.LBB1153:
1653:src/keys.c    **** 	  }
 10109              		.loc 1 1653 13 view .LVU3144
 10110 0d06 40F2C114 		movw	r4, #449
 10111              	.LVL842:
 10112              	.L899:
1653:src/keys.c    **** 	  }
 10113              		.loc 1 1653 13 view .LVU3145
 10114              	.LBE1153:
 10115              	.LBE1218:
ARM GAS  /tmp/cc6xzGMw.s 			page 294


 10116              	.LBE1401:
 10117              	.LBE1478:
3631:src/keys.c    **** 	NonProgrammable = 0;
 10118              		.loc 1 3631 26 view .LVU3146
 10119 0d0a C64B     		ldr	r3, .L1412+4
 10120 0d0c 1A68     		ldr	r2, [r3]
 10121 0d0e 002A     		cmp	r2, #0
 10122 0d10 00F0F284 		beq	.L1382
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10123              		.loc 1 3632 2 is_stmt 1 view .LVU3147
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10124              		.loc 1 3632 18 is_stmt 0 view .LVU3148
 10125 0d14 0022     		movs	r2, #0
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10126              		.loc 1 3633 32 view .LVU3149
 10127 0d16 2046     		mov	r0, r4
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10128              		.loc 1 3632 18 view .LVU3150
 10129 0d18 1A60     		str	r2, [r3]
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10130              		.loc 1 3633 2 is_stmt 1 view .LVU3151
 10131 0d1a 65E4     		b	.L1106
 10132              	.LVL843:
 10133              	.L1359:
 10134              	.LBB1479:
 10135              	.LBB1402:
 10136              	.LBB1219:
 10137              	.LBB1079:
1714:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 10138              		.loc 1 1714 44 view .LVU3152
1714:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 10139              		.loc 1 1714 52 is_stmt 0 view .LVU3153
 10140 0d1c 0120     		movs	r0, #1
 10141 0d1e FFF7FEFF 		bl	gtodot_digit
 10142              	.LVL844:
1760:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10143              		.loc 1 1760 2 is_stmt 1 view .LVU3154
 10144              	.LBE1079:
 10145              	.LBE1219:
3281:src/keys.c    **** 
 10146              		.loc 1 3281 10 is_stmt 0 view .LVU3155
 10147 0d22 3324     		movs	r4, #51
 10148              	.LVL845:
3281:src/keys.c    **** 
 10149              		.loc 1 3281 10 view .LVU3156
 10150 0d24 3368     		ldr	r3, [r6]
 10151 0d26 FFF7C6B9 		b	.L801
 10152              	.LVL846:
 10153              	.L1360:
 10154              	.LBB1220:
 10155              	.LBB1080:
1715:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 10156              		.loc 1 1715 44 is_stmt 1 view .LVU3157
1715:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 10157              		.loc 1 1715 52 is_stmt 0 view .LVU3158
 10158 0d2a 0220     		movs	r0, #2
 10159 0d2c FFF7FEFF 		bl	gtodot_digit
ARM GAS  /tmp/cc6xzGMw.s 			page 295


 10160              	.LVL847:
1760:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10161              		.loc 1 1760 2 is_stmt 1 view .LVU3159
 10162              	.LBE1080:
 10163              	.LBE1220:
3281:src/keys.c    **** 
 10164              		.loc 1 3281 10 is_stmt 0 view .LVU3160
 10165 0d30 3324     		movs	r4, #51
 10166              	.LVL848:
3281:src/keys.c    **** 
 10167              		.loc 1 3281 10 view .LVU3161
 10168 0d32 3368     		ldr	r3, [r6]
 10169 0d34 FFF7BFB9 		b	.L801
 10170              	.LVL849:
 10171              	.L869:
 10172              	.LBB1221:
 10173              	.LBB1062:
2361:src/keys.c    **** 	}
 10174              		.loc 1 2361 3 is_stmt 1 view .LVU3162
2361:src/keys.c    **** 	}
 10175              		.loc 1 2361 10 is_stmt 0 view .LVU3163
 10176 0d38 0AF12000 		add	r0, r10, #32
 10177 0d3c 4CEA0020 		orr	r0, ip, r0, lsl #8
 10178 0d40 0446     		mov	r4, r0
 10179              	.LVL850:
2361:src/keys.c    **** 	}
 10180              		.loc 1 2361 10 view .LVU3164
 10181 0d42 FFF76FBB 		b	.L862
 10182              	.LVL851:
 10183              	.L1369:
2361:src/keys.c    **** 	}
 10184              		.loc 1 2361 10 view .LVU3165
 10185              	.LBE1062:
 10186              	.LBE1221:
 10187              	.LBB1222:
 10188              	.LBB1120:
2919:src/keys.c    **** 			n = -2;
 10189              		.loc 1 2919 3 is_stmt 1 view .LVU3166
2919:src/keys.c    **** 			n = -2;
 10190              		.loc 1 2919 6 is_stmt 0 view .LVU3167
 10191 0d46 0239     		subs	r1, r1, #2
 10192              	.LVL852:
2920:src/keys.c    **** 	}
 10193              		.loc 1 2920 6 view .LVU3168
 10194 0d48 9942     		cmp	r1, r3
 10195 0d4a D4BF     		ite	le
 10196 0d4c 0B46     		movle	r3, r1
 10197              	.LVL853:
2920:src/keys.c    **** 	}
 10198              		.loc 1 2920 6 view .LVU3169
 10199 0d4e 6FF00103 		mvngt	r3, #1
 10200 0d52 37E6     		b	.L884
 10201              	.LVL854:
 10202              	.L1373:
2920:src/keys.c    **** 	}
 10203              		.loc 1 2920 6 view .LVU3170
 10204              	.LBE1120:
ARM GAS  /tmp/cc6xzGMw.s 			page 296


 10205              	.LBE1222:
 10206              	.LBB1223:
 10207              	.LBB1154:
1670:src/keys.c    **** 
 10208              		.loc 1 1670 3 is_stmt 1 view .LVU3171
1670:src/keys.c    **** 
 10209              		.loc 1 1670 25 is_stmt 0 view .LVU3172
 10210 0d54 B44A     		ldr	r2, .L1412+8
 10211 0d56 0AEB4303 		add	r3, r10, r3, lsl #1
 10212 0d5a 32F81340 		ldrh	r4, [r2, r3, lsl #1]
 10213              	.LVL855:
1670:src/keys.c    **** 
 10214              		.loc 1 1670 25 view .LVU3173
 10215 0d5e FFF73FBB 		b	.L835
 10216              	.LVL856:
 10217              	.L1375:
1670:src/keys.c    **** 
 10218              		.loc 1 1670 25 view .LVU3174
 10219              	.LBE1154:
 10220              	.LBE1223:
3321:src/keys.c    **** 		if (is_bad_cmdline())
 10221              		.loc 1 3321 2 is_stmt 1 view .LVU3175
3321:src/keys.c    **** 		if (is_bad_cmdline())
 10222              		.loc 1 3321 5 is_stmt 0 view .LVU3176
 10223 0d62 002B     		cmp	r3, #0
 10224 0d64 7FF4B3AC 		bne	.L910
 10225 0d68 FFF78CBA 		b	.L931
 10226              	.LVL857:
 10227              	.L1361:
 10228              	.LBB1224:
 10229              	.LBB1081:
1716:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 10230              		.loc 1 1716 44 is_stmt 1 view .LVU3177
1716:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 10231              		.loc 1 1716 52 is_stmt 0 view .LVU3178
 10232 0d6c 0320     		movs	r0, #3
 10233 0d6e FFF7FEFF 		bl	gtodot_digit
 10234              	.LVL858:
1760:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10235              		.loc 1 1760 2 is_stmt 1 view .LVU3179
 10236              	.LBE1081:
 10237              	.LBE1224:
3281:src/keys.c    **** 
 10238              		.loc 1 3281 10 is_stmt 0 view .LVU3180
 10239 0d72 3324     		movs	r4, #51
 10240              	.LVL859:
3281:src/keys.c    **** 
 10241              		.loc 1 3281 10 view .LVU3181
 10242 0d74 3368     		ldr	r3, [r6]
 10243 0d76 FFF79EB9 		b	.L801
 10244              	.LVL860:
 10245              	.L878:
 10246              	.LBB1225:
 10247              	.LBB1063:
2380:src/keys.c    **** 		return STATE_UNFINISHED;
 10248              		.loc 1 2380 3 is_stmt 1 view .LVU3182
 10249              	.LBB1056:
ARM GAS  /tmp/cc6xzGMw.s 			page 297


 10250              	.LBI1056:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 10251              		.loc 1 552 13 view .LVU3183
 10252              	.LBB1057:
 553:src/keys.c    **** 		return;
 10253              		.loc 1 553 2 view .LVU3184
 553:src/keys.c    **** 		return;
 10254              		.loc 1 553 6 is_stmt 0 view .LVU3185
 10255 0d7a FFF7FEFF 		bl	is_bad_cmdline
 10256              	.LVL861:
 553:src/keys.c    **** 		return;
 10257              		.loc 1 553 5 view .LVU3186
 10258 0d7e 0446     		mov	r4, r0
 10259              	.LVL862:
 553:src/keys.c    **** 		return;
 10260              		.loc 1 553 5 view .LVU3187
 10261 0d80 0028     		cmp	r0, #0
 10262 0d82 7FF4B2AC 		bne	.L1313
 10263 0d86 5FFA8AF0 		uxtb	r0, r10
 10264 0d8a FFF7FEFF 		bl	init_arg.part.0
 10265              	.LVL863:
 10266              	.LBE1057:
 10267              	.LBE1056:
 10268              	.LBE1063:
 10269              	.LBE1225:
 10270              	.LBE1402:
 10271              	.LBE1479:
3405:src/keys.c    ****   //print_debug(60,c);
 10272              		.loc 1 3405 7 view .LVU3188
 10273 0d8e 2546     		mov	r5, r4
 10274 0d90 3368     		ldr	r3, [r6]
 10275              	.LBB1480:
 10276              	.LBB1403:
 10277              	.LBB1226:
 10278              	.LBB1064:
2381:src/keys.c    **** 
 10279              		.loc 1 2381 10 view .LVU3189
 10280 0d92 3324     		movs	r4, #51
 10281 0d94 FFF78FB9 		b	.L801
 10282              	.LVL864:
 10283              	.L1343:
2381:src/keys.c    **** 
 10284              		.loc 1 2381 10 view .LVU3190
 10285              	.LBE1064:
 10286              	.LBE1226:
3336:src/keys.c    **** 
 10287              		.loc 1 3336 3 is_stmt 1 view .LVU3191
 10288              	.LBB1227:
 10289              	.LBI1227:
2989:src/keys.c    **** 	unsigned int pc = State2.digval;
 10290              		.loc 1 2989 12 view .LVU3192
 10291              	.LBB1228:
2990:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 10292              		.loc 1 2990 2 view .LVU3193
2992:src/keys.c    **** 	const int opcode = getprog(pc);
 10293              		.loc 1 2992 27 is_stmt 0 view .LVU3194
 10294 0d98 262C     		cmp	r4, #38
ARM GAS  /tmp/cc6xzGMw.s 			page 298


2990:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 10295              		.loc 1 2990 15 view .LVU3195
 10296 0d9a B8F808A0 		ldrh	r10, [r8, #8]
 10297              	.LVL865:
2991:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
 10298              		.loc 1 2991 2 is_stmt 1 view .LVU3196
2992:src/keys.c    **** 	const int opcode = getprog(pc);
 10299              		.loc 1 2992 27 is_stmt 0 view .LVU3197
 10300 0d9e 00F08983 		beq	.L1150
 10301              	.LVL866:
 10302              	.LBB1229:
 10303              	.LBI1229:
 210:src/keys.c    **** {
 10304              		.loc 1 210 14 is_stmt 1 view .LVU3198
 10305              	.LBB1230:
 212:src/keys.c    ****     // K00 - K05
 10306              		.loc 1 212 3 view .LVU3199
 234:src/keys.c    **** }
 10307              		.loc 1 234 3 view .LVU3200
 10308              	.LBB1231:
 10309              	.LBI1231:
 131:src/keys.c    **** {
 10310              		.loc 1 131 12 view .LVU3201
 10311              	.LBB1232:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10312              		.loc 1 133 2 view .LVU3202
 143:src/keys.c    **** }
 10313              		.loc 1 143 2 view .LVU3203
 143:src/keys.c    **** }
 10314              		.loc 1 143 23 is_stmt 0 view .LVU3204
 10315 0da2 A24B     		ldr	r3, .L1412+12
 10316              	.LBE1232:
 10317              	.LBE1231:
 234:src/keys.c    **** }
 10318              		.loc 1 234 28 view .LVU3205
 10319 0da4 A24A     		ldr	r2, .L1412+16
 10320              	.LBB1234:
 10321              	.LBB1233:
 143:src/keys.c    **** }
 10322              		.loc 1 143 23 view .LVU3206
 10323 0da6 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 10324              	.LBE1233:
 10325              	.LBE1234:
 234:src/keys.c    **** }
 10326              		.loc 1 234 10 view .LVU3207
 10327 0da8 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
 10328              	.LVL867:
 234:src/keys.c    **** }
 10329              		.loc 1 234 10 view .LVU3208
 10330              	.LBE1230:
 10331              	.LBE1229:
2992:src/keys.c    **** 	const int opcode = getprog(pc);
 10332              		.loc 1 2992 27 view .LVU3209
 10333 0dac 2BF0800B 		bic	fp, fp, #128
 10334              	.L951:
 10335              	.LVL868:
2993:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
ARM GAS  /tmp/cc6xzGMw.s 			page 299


 10336              		.loc 1 2993 2 is_stmt 1 view .LVU3210
2993:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 10337              		.loc 1 2993 21 is_stmt 0 view .LVU3211
 10338 0db0 5046     		mov	r0, r10
 10339 0db2 FFF7FEFF 		bl	getprog
 10340              	.LVL869:
2994:src/keys.c    **** 	const int direct = State2.runmode;
 10341              		.loc 1 2994 2 is_stmt 1 view .LVU3212
2994:src/keys.c    **** 	const int direct = State2.runmode;
 10342              		.loc 1 2994 20 is_stmt 0 view .LVU3213
 10343 0db6 00F47040 		and	r0, r0, #61440
 10344              	.LVL870:
2994:src/keys.c    **** 	const int direct = State2.runmode;
 10345              		.loc 1 2994 63 view .LVU3214
 10346 0dba B0F5704F 		cmp	r0, #61440
 10347 0dbe 00F0DD84 		beq	.L1383
 10348 0dc2 0022     		movs	r2, #0
 10349              	.L952:
 10350              	.LVL871:
2995:src/keys.c    **** 	const enum shifts shift = reset_shift();
 10351              		.loc 1 2995 2 is_stmt 1 view .LVU3215
2995:src/keys.c    **** 	const enum shifts shift = reset_shift();
 10352              		.loc 1 2995 27 is_stmt 0 view .LVU3216
 10353 0dc4 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10354 0dc8 0192     		str	r2, [sp, #4]
 10355              	.LVL872:
2995:src/keys.c    **** 	const enum shifts shift = reset_shift();
 10356              		.loc 1 2995 27 view .LVU3217
 10357 0dca C3F38013 		ubfx	r3, r3, #6, #1
 10358 0dce 0093     		str	r3, [sp]
 10359              	.LVL873:
2996:src/keys.c    **** 	int op = STATE_UNFINISHED;
 10360              		.loc 1 2996 2 is_stmt 1 view .LVU3218
 10361              	.LBB1235:
 10362              	.LBI1235:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 10363              		.loc 1 114 13 view .LVU3219
 10364              	.LBE1235:
 10365              	.LBE1228:
 10366              	.LBE1227:
 10367              	.LBE1403:
 10368              	.LBE1480:
 115:src/keys.c    **** }
 10369              		.loc 1 115 2 view .LVU3220
 10370              	.LBB1481:
 10371              	.LBB1404:
 10372              	.LBB1259:
 10373              	.LBB1254:
 10374              	.LBB1242:
 10375              	.LBB1236:
 10376              	.LBI1236:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 10377              		.loc 1 104 20 view .LVU3221
 10378              	.LBB1237:
 105:src/keys.c    **** 	State2.shifts = shift;
 10379              		.loc 1 105 2 view .LVU3222
 10380              	.LBB1238:
ARM GAS  /tmp/cc6xzGMw.s 			page 300


 10381              	.LBI1238:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 10382              		.loc 1 96 13 view .LVU3223
 10383              	.LBB1239:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10384              		.loc 1 97 2 view .LVU3224
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10385              		.loc 1 97 18 is_stmt 0 view .LVU3225
 10386 0dd0 FFF7FEFF 		bl	shift_down
 10387              	.LVL874:
  98:src/keys.c    **** }
 10388              		.loc 1 98 2 is_stmt 1 view .LVU3226
  98:src/keys.c    **** }
 10389              		.loc 1 98 52 is_stmt 0 view .LVU3227
 10390 0dd4 019A     		ldr	r2, [sp, #4]
 10391 0dd6 0346     		mov	r3, r0
 10392 0dd8 08B9     		cbnz	r0, .L953
 10393 0dda 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 10394              	.L953:
 10395              	.LVL875:
  98:src/keys.c    **** }
 10396              		.loc 1 98 52 view .LVU3228
 10397              	.LBE1239:
 10398              	.LBE1238:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10399              		.loc 1 106 2 is_stmt 1 view .LVU3229
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10400              		.loc 1 106 16 is_stmt 0 view .LVU3230
 10401 0dde 0021     		movs	r1, #0
 10402              	.LBE1237:
 10403              	.LBE1236:
 10404              	.LBE1242:
2999:src/keys.c    **** 		// Digits take you to that segment
 10405              		.loc 1 2999 5 view .LVU3231
 10406 0de0 BBF1020F 		cmp	fp, #2
 10407              	.LBB1243:
 10408              	.LBB1241:
 10409              	.LBB1240:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10410              		.loc 1 106 16 view .LVU3232
 10411 0de4 88F81010 		strb	r1, [r8, #16]
 108:src/keys.c    **** }
 10412              		.loc 1 108 2 is_stmt 1 view .LVU3233
 10413              	.LVL876:
 108:src/keys.c    **** }
 10414              		.loc 1 108 2 is_stmt 0 view .LVU3234
 10415              	.LBE1240:
 10416              	.LBE1241:
 10417              	.LBE1243:
2997:src/keys.c    **** 
 10418              		.loc 1 2997 2 is_stmt 1 view .LVU3235
2999:src/keys.c    **** 		// Digits take you to that segment
 10419              		.loc 1 2999 2 view .LVU3236
2999:src/keys.c    **** 		// Digits take you to that segment
 10420              		.loc 1 2999 5 is_stmt 0 view .LVU3237
 10421 0de8 40F2B984 		bls	.L1384
3008:src/keys.c    **** 
ARM GAS  /tmp/cc6xzGMw.s 			page 301


 10422              		.loc 1 3008 2 is_stmt 1 view .LVU3238
3008:src/keys.c    **** 
 10423              		.loc 1 3008 12 is_stmt 0 view .LVU3239
 10424 0dec 44EA0323 		orr	r3, r4, r3, lsl #8
 10425              	.LVL877:
3008:src/keys.c    **** 
 10426              		.loc 1 3008 2 view .LVU3240
 10427 0df0 272B     		cmp	r3, #39
 10428 0df2 00F3BD80 		bgt	.L956
 10429 0df6 042B     		cmp	r3, #4
 10430 0df8 7FF777AC 		ble	.L1313
 10431 0dfc 053B     		subs	r3, r3, #5
 10432 0dfe 222B     		cmp	r3, #34
 10433 0e00 3FF673AC 		bhi	.L1313
 10434 0e04 01A1     		adr	r1, .L965
 10435 0e06 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 10436 0e0a 00BF     		.p2align 2
 10437              	.L965:
 10438 0e0c EB0E0000 		.word	.L970+1
 10439 0e10 F70E0000 		.word	.L969+1
 10440 0e14 F70E0000 		.word	.L969+1
 10441 0e18 EB060000 		.word	.L1313+1
 10442 0e1c EB060000 		.word	.L1313+1
 10443 0e20 EB060000 		.word	.L1313+1
 10444 0e24 EB060000 		.word	.L1313+1
 10445 0e28 990E0000 		.word	.L1153+1
 10446 0e2c EB060000 		.word	.L1313+1
 10447 0e30 EB060000 		.word	.L1313+1
 10448 0e34 EB060000 		.word	.L1313+1
 10449 0e38 190F0000 		.word	.L968+1
 10450 0e3c EB060000 		.word	.L1313+1
 10451 0e40 050F0000 		.word	.L967+1
 10452 0e44 EB060000 		.word	.L1313+1
 10453 0e48 EB060000 		.word	.L1313+1
 10454 0e4c EB060000 		.word	.L1313+1
 10455 0e50 EB060000 		.word	.L1313+1
 10456 0e54 EB060000 		.word	.L1313+1
 10457 0e58 D50E0000 		.word	.L966+1
 10458 0e5c EB060000 		.word	.L1313+1
 10459 0e60 EB060000 		.word	.L1313+1
 10460 0e64 EB060000 		.word	.L1313+1
 10461 0e68 EB060000 		.word	.L1313+1
 10462 0e6c EB060000 		.word	.L1313+1
 10463 0e70 EB060000 		.word	.L1313+1
 10464 0e74 EB060000 		.word	.L1313+1
 10465 0e78 EB060000 		.word	.L1313+1
 10466 0e7c EB060000 		.word	.L1313+1
 10467 0e80 EB060000 		.word	.L1313+1
 10468 0e84 EB060000 		.word	.L1313+1
 10469 0e88 EB060000 		.word	.L1313+1
 10470 0e8c EB060000 		.word	.L1313+1
 10471 0e90 EB060000 		.word	.L1313+1
 10472 0e94 330F0000 		.word	.L964+1
 10473              		.p2align 1
 10474              	.L1153:
2997:src/keys.c    **** 
 10475              		.loc 1 2997 6 view .LVU3241
ARM GAS  /tmp/cc6xzGMw.s 			page 302


 10476 0e98 3324     		movs	r4, #51
 10477              	.LVL878:
 10478              	.L962:
3030:src/keys.c    **** 		break;
 10479              		.loc 1 3030 3 is_stmt 1 view .LVU3242
 10480 0e9a 5046     		mov	r0, r10
 10481 0e9c FFF7FEFF 		bl	set_pc
 10482              	.LVL879:
3031:src/keys.c    **** 
 10483              		.loc 1 3031 3 view .LVU3243
 10484              	.L974:
3084:src/keys.c    **** 	State2.labellist = 0;
 10485              		.loc 1 3084 2 view .LVU3244
3085:src/keys.c    **** 	return check_confirm(op);
 10486              		.loc 1 3085 19 is_stmt 0 view .LVU3245
 10487 0ea0 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
3084:src/keys.c    **** 	State2.labellist = 0;
 10488              		.loc 1 3084 16 view .LVU3246
 10489 0ea4 0022     		movs	r2, #0
 10490              	.LBB1244:
 10491              	.LBB1245:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10492              		.loc 1 705 5 view .LVU3247
 10493 0ea6 C4F30723 		ubfx	r3, r4, #8, #8
 10494              	.LBE1245:
 10495              	.LBE1244:
3085:src/keys.c    **** 	return check_confirm(op);
 10496              		.loc 1 3085 19 view .LVU3248
 10497 0eaa 62F38201 		bfi	r1, r2, #2, #1
 10498              	.LBB1250:
 10499              	.LBB1246:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10500              		.loc 1 705 5 view .LVU3249
 10501 0eae 012B     		cmp	r3, #1
 10502              	.LBE1246:
 10503              	.LBE1250:
3085:src/keys.c    **** 	return check_confirm(op);
 10504              		.loc 1 3085 19 view .LVU3250
 10505 0eb0 88F81710 		strb	r1, [r8, #23]
3084:src/keys.c    **** 	State2.labellist = 0;
 10506              		.loc 1 3084 16 view .LVU3251
 10507 0eb4 A8F80820 		strh	r2, [r8, #8]	@ movhi
3085:src/keys.c    **** 	return check_confirm(op);
 10508              		.loc 1 3085 2 is_stmt 1 view .LVU3252
3086:src/keys.c    **** }
 10509              		.loc 1 3086 2 view .LVU3253
 10510              	.LVL880:
 10511              	.LBB1251:
 10512              	.LBI1244:
 704:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10513              		.loc 1 704 12 view .LVU3254
 10514              	.LBB1247:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10515              		.loc 1 705 2 view .LVU3255
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10516              		.loc 1 705 5 is_stmt 0 view .LVU3256
 10517 0eb8 7FF492AA 		bne	.L835
ARM GAS  /tmp/cc6xzGMw.s 			page 303


 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10518              		.loc 1 705 5 view .LVU3257
 10519 0ebc 2046     		mov	r0, r4
 10520 0ebe FFF7FEFF 		bl	check_confirm.part.0
 10521              	.LVL881:
 10522 0ec2 0446     		mov	r4, r0
 10523              	.LVL882:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10524              		.loc 1 705 5 view .LVU3258
 10525 0ec4 FFF78CBA 		b	.L835
 10526              	.LVL883:
 10527              	.L959:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10528              		.loc 1 705 5 view .LVU3259
 10529              	.LBE1247:
 10530              	.LBE1251:
3015:src/keys.c    **** 	case K_DOWN:				// Find next label
 10531              		.loc 1 3015 3 is_stmt 1 view .LVU3260
3015:src/keys.c    **** 	case K_DOWN:				// Find next label
 10532              		.loc 1 3015 8 is_stmt 0 view .LVU3261
 10533 0ec8 5046     		mov	r0, r10
 10534 0eca 0122     		movs	r2, #1
 10535 0ecc 0021     		movs	r1, #0
 10536 0ece FFF7FEFF 		bl	advance_to_next_label
 10537              	.LVL884:
 10538 0ed2 8246     		mov	r10, r0
 10539              	.LVL885:
 10540              	.L966:
3018:src/keys.c    **** 		return STATE_UNFINISHED;
 10541              		.loc 1 3018 3 is_stmt 1 view .LVU3262
3018:src/keys.c    **** 		return STATE_UNFINISHED;
 10542              		.loc 1 3018 19 is_stmt 0 view .LVU3263
 10543 0ed4 5046     		mov	r0, r10
 10544 0ed6 0022     		movs	r2, #0
 10545 0ed8 0121     		movs	r1, #1
 10546 0eda FFF7FEFF 		bl	advance_to_next_label
 10547              	.LVL886:
3019:src/keys.c    **** 
 10548              		.loc 1 3019 10 view .LVU3264
 10549 0ede 3324     		movs	r4, #51
 10550 0ee0 3368     		ldr	r3, [r6]
3018:src/keys.c    **** 		return STATE_UNFINISHED;
 10551              		.loc 1 3018 17 view .LVU3265
 10552 0ee2 A8F80800 		strh	r0, [r8, #8]	@ movhi
3019:src/keys.c    **** 
 10553              		.loc 1 3019 3 is_stmt 1 view .LVU3266
3019:src/keys.c    **** 
 10554              		.loc 1 3019 10 is_stmt 0 view .LVU3267
 10555 0ee6 FFF7E6B8 		b	.L801
 10556              	.LVL887:
 10557              	.L970:
 10558              	.L975:
3048:src/keys.c    **** 		goto xeq_or_gto;
 10559              		.loc 1 3048 3 is_stmt 1 view .LVU3268
3048:src/keys.c    **** 		goto xeq_or_gto;
 10560              		.loc 1 3048 6 is_stmt 0 view .LVU3269
 10561 0eea 02F50074 		add	r4, r2, #512
ARM GAS  /tmp/cc6xzGMw.s 			page 304


 10562              	.LVL888:
3049:src/keys.c    **** 
 10563              		.loc 1 3049 3 is_stmt 1 view .LVU3270
3054:src/keys.c    **** 			break;
 10564              		.loc 1 3054 3 view .LVU3271
3054:src/keys.c    **** 			break;
 10565              		.loc 1 3054 6 is_stmt 0 view .LVU3272
 10566 0eee 002A     		cmp	r2, #0
 10567 0ef0 D6D1     		bne	.L974
 10568 0ef2 FFF7FABB 		b	.L1313
 10569              	.LVL889:
 10570              	.L969:
3040:src/keys.c    **** 	  //#endif
 10571              		.loc 1 3040 3 is_stmt 1 view .LVU3273
3040:src/keys.c    **** 	  //#endif
 10572              		.loc 1 3040 38 is_stmt 0 view .LVU3274
 10573 0ef6 062C     		cmp	r4, #6
 10574 0ef8 40F2B114 		movw	r4, #433
 10575              	.LVL890:
3040:src/keys.c    **** 	  //#endif
 10576              		.loc 1 3040 38 view .LVU3275
 10577 0efc 08BF     		it	eq
 10578 0efe 4FF4D974 		moveq	r4, #434
 10579 0f02 CAE7     		b	.L962
 10580              	.LVL891:
 10581              	.L967:
3022:src/keys.c    **** 		return STATE_UNFINISHED;
 10582              		.loc 1 3022 3 is_stmt 1 view .LVU3276
3022:src/keys.c    **** 		return STATE_UNFINISHED;
 10583              		.loc 1 3022 19 is_stmt 0 view .LVU3277
 10584 0f04 5046     		mov	r0, r10
 10585 0f06 0021     		movs	r1, #0
 10586 0f08 FFF7FEFF 		bl	advance_to_previous_label
 10587              	.LVL892:
3023:src/keys.c    **** 
 10588              		.loc 1 3023 10 view .LVU3278
 10589 0f0c 3324     		movs	r4, #51
 10590              	.LVL893:
3023:src/keys.c    **** 
 10591              		.loc 1 3023 10 view .LVU3279
 10592 0f0e 3368     		ldr	r3, [r6]
3022:src/keys.c    **** 		return STATE_UNFINISHED;
 10593              		.loc 1 3022 17 view .LVU3280
 10594 0f10 A8F80800 		strh	r0, [r8, #8]	@ movhi
3023:src/keys.c    **** 
 10595              		.loc 1 3023 3 is_stmt 1 view .LVU3281
3023:src/keys.c    **** 
 10596              		.loc 1 3023 10 is_stmt 0 view .LVU3282
 10597 0f14 FFF7CFB8 		b	.L801
 10598              	.LVL894:
 10599              	.L968:
3084:src/keys.c    **** 	State2.labellist = 0;
 10600              		.loc 1 3084 2 is_stmt 1 view .LVU3283
3085:src/keys.c    **** 	return check_confirm(op);
 10601              		.loc 1 3085 19 is_stmt 0 view .LVU3284
 10602 0f18 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
 10603 0f1c 3368     		ldr	r3, [r6]
ARM GAS  /tmp/cc6xzGMw.s 			page 305


3084:src/keys.c    **** 	State2.labellist = 0;
 10604              		.loc 1 3084 16 view .LVU3285
 10605 0f1e 0022     		movs	r2, #0
3085:src/keys.c    **** 	return check_confirm(op);
 10606              		.loc 1 3085 19 view .LVU3286
 10607 0f20 62F38201 		bfi	r1, r2, #2, #1
 10608 0f24 88F81710 		strb	r1, [r8, #23]
3084:src/keys.c    **** 	State2.labellist = 0;
 10609              		.loc 1 3084 16 view .LVU3287
 10610 0f28 A8F80820 		strh	r2, [r8, #8]	@ movhi
3085:src/keys.c    **** 	return check_confirm(op);
 10611              		.loc 1 3085 2 is_stmt 1 view .LVU3288
3086:src/keys.c    **** }
 10612              		.loc 1 3086 2 view .LVU3289
 10613              	.LVL895:
 10614              	.LBB1252:
 704:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10615              		.loc 1 704 12 view .LVU3290
 10616              	.LBB1248:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10617              		.loc 1 705 2 view .LVU3291
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10618              		.loc 1 705 2 is_stmt 0 view .LVU3292
 10619              	.LBE1248:
 10620              	.LBE1252:
 10621              	.LBE1254:
 10622              	.LBE1259:
 10623              	.LBE1404:
 10624              	.LBE1481:
3595:src/keys.c    ****     case STATE_SST:
 10625              		.loc 1 3595 5 is_stmt 1 view .LVU3293
 10626              	.LBB1482:
 10627              	.LBB1405:
 10628              	.LBB1260:
 10629              	.LBB1255:
2997:src/keys.c    **** 
 10630              		.loc 1 2997 6 is_stmt 0 view .LVU3294
 10631 0f2c 3324     		movs	r4, #51
 10632 0f2e FFF7C2B8 		b	.L801
 10633              	.LVL896:
 10634              	.L964:
3070:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 10635              		.loc 1 3070 3 is_stmt 1 view .LVU3295
3070:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 10636              		.loc 1 3070 6 is_stmt 0 view .LVU3296
 10637 0f32 009B     		ldr	r3, [sp]
 10638 0f34 002B     		cmp	r3, #0
 10639 0f36 3FF4D8AB 		beq	.L1313
3070:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 10640              		.loc 1 3070 14 view .LVU3297
 10641 0f3a 002A     		cmp	r2, #0
 10642 0f3c 3FF4D5AB 		beq	.L1313
3071:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
 10643              		.loc 1 3071 4 is_stmt 1 view .LVU3298
 10644 0f40 5146     		mov	r1, r10
 10645 0f42 0120     		movs	r0, #1
 10646 0f44 FFF7FEFF 		bl	cmdgtocommon
ARM GAS  /tmp/cc6xzGMw.s 			page 306


 10647              	.LVL897:
3072:src/keys.c    **** 			break;
 10648              		.loc 1 3072 4 view .LVU3299
3073:src/keys.c    **** 		}
 10649              		.loc 1 3073 4 view .LVU3300
3084:src/keys.c    **** 	State2.labellist = 0;
 10650              		.loc 1 3084 2 view .LVU3301
3085:src/keys.c    **** 	return check_confirm(op);
 10651              		.loc 1 3085 19 is_stmt 0 view .LVU3302
 10652 0f48 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
3084:src/keys.c    **** 	State2.labellist = 0;
 10653              		.loc 1 3084 16 view .LVU3303
 10654 0f4c 0023     		movs	r3, #0
3085:src/keys.c    **** 	return check_confirm(op);
 10655              		.loc 1 3085 19 view .LVU3304
 10656 0f4e 63F38202 		bfi	r2, r3, #2, #1
 10657 0f52 88F81720 		strb	r2, [r8, #23]
3084:src/keys.c    **** 	State2.labellist = 0;
 10658              		.loc 1 3084 16 view .LVU3305
 10659 0f56 A8F80830 		strh	r3, [r8, #8]	@ movhi
3085:src/keys.c    **** 	return check_confirm(op);
 10660              		.loc 1 3085 2 is_stmt 1 view .LVU3306
3086:src/keys.c    **** }
 10661              		.loc 1 3086 2 view .LVU3307
 10662              	.LVL898:
 10663              	.LBB1253:
 704:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10664              		.loc 1 704 12 view .LVU3308
 10665              	.LBB1249:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10666              		.loc 1 705 2 view .LVU3309
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10667              		.loc 1 705 2 is_stmt 0 view .LVU3310
 10668              	.LBE1249:
 10669              	.LBE1253:
 10670              	.LBE1255:
 10671              	.LBE1260:
 10672              	.LBE1405:
 10673              	.LBE1482:
3595:src/keys.c    ****     case STATE_SST:
 10674              		.loc 1 3595 5 is_stmt 1 view .LVU3311
 10675 0f5a FFF7F1B9 		b	.L811
 10676              	.LVL899:
 10677              	.L1136:
 10678              	.LBB1483:
 10679              	.LBB1406:
 10680              	.LBB1261:
 10681              	.LBB1121:
 10682              	.LBB1115:
2927:src/keys.c    **** 		if (nn <= 9)
 10683              		.loc 1 2927 7 is_stmt 0 view .LVU3312
 10684 0f5e 1346     		mov	r3, r2
 10685              	.LVL900:
2927:src/keys.c    **** 		if (nn <= 9)
 10686              		.loc 1 2927 7 view .LVU3313
 10687 0f60 30E5     		b	.L884
 10688              	.LVL901:
ARM GAS  /tmp/cc6xzGMw.s 			page 307


 10689              	.L1362:
2927:src/keys.c    **** 		if (nn <= 9)
 10690              		.loc 1 2927 7 view .LVU3314
 10691              	.LBE1115:
 10692              	.LBE1121:
 10693              	.LBE1261:
 10694              	.LBB1262:
 10695              	.LBB1082:
1717:src/keys.c    **** #endif
 10696              		.loc 1 1717 44 is_stmt 1 view .LVU3315
1717:src/keys.c    **** #endif
 10697              		.loc 1 1717 52 is_stmt 0 view .LVU3316
 10698 0f62 0420     		movs	r0, #4
 10699 0f64 FFF7FEFF 		bl	gtodot_digit
 10700              	.LVL902:
1760:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10701              		.loc 1 1760 2 is_stmt 1 view .LVU3317
 10702              	.LBE1082:
 10703              	.LBE1262:
3281:src/keys.c    **** 
 10704              		.loc 1 3281 10 is_stmt 0 view .LVU3318
 10705 0f68 3324     		movs	r4, #51
 10706              	.LVL903:
3281:src/keys.c    **** 
 10707              		.loc 1 3281 10 view .LVU3319
 10708 0f6a 3368     		ldr	r3, [r6]
 10709 0f6c FFF7A3B8 		b	.L801
 10710              	.LVL904:
 10711              	.L956:
 10712              	.LBB1263:
 10713              	.LBB1256:
3008:src/keys.c    **** 
 10714              		.loc 1 3008 2 view .LVU3320
 10715 0f70 B3F58C7F 		cmp	r3, #280
 10716 0f74 47DC     		bgt	.L971
 10717 0f76 B3F5827F 		cmp	r3, #260
 10718 0f7a 7FF7B6AB 		ble	.L1313
 10719 0f7e 6FF48274 		mvn	r4, #260
 10720              	.LVL905:
3008:src/keys.c    **** 
 10721              		.loc 1 3008 2 view .LVU3321
 10722 0f82 2344     		add	r3, r3, r4
 10723 0f84 132B     		cmp	r3, #19
 10724 0f86 3FF6B0AB 		bhi	.L1313
 10725 0f8a 01A1     		adr	r1, .L960
 10726 0f8c 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 10727              		.p2align 2
 10728              	.L960:
 10729 0f90 E70F0000 		.word	.L963+1
 10730 0f94 EB060000 		.word	.L1313+1
 10731 0f98 EB060000 		.word	.L1313+1
 10732 0f9c EB060000 		.word	.L1313+1
 10733 0fa0 EB060000 		.word	.L1313+1
 10734 0fa4 EB060000 		.word	.L1313+1
 10735 0fa8 EB060000 		.word	.L1313+1
 10736 0fac EB060000 		.word	.L1313+1
 10737 0fb0 EB060000 		.word	.L1313+1
ARM GAS  /tmp/cc6xzGMw.s 			page 308


 10738 0fb4 EB060000 		.word	.L1313+1
 10739 0fb8 EB060000 		.word	.L1313+1
 10740 0fbc E10F0000 		.word	.L1152+1
 10741 0fc0 EB060000 		.word	.L1313+1
 10742 0fc4 F50F0000 		.word	.L961+1
 10743 0fc8 EB060000 		.word	.L1313+1
 10744 0fcc EB060000 		.word	.L1313+1
 10745 0fd0 EB060000 		.word	.L1313+1
 10746 0fd4 EB060000 		.word	.L1313+1
 10747 0fd8 EB060000 		.word	.L1313+1
 10748 0fdc C90E0000 		.word	.L959+1
 10749              		.p2align 1
 10750              	.L1152:
 10751 0fe0 40F24314 		movw	r4, #323
 10752 0fe4 59E7     		b	.L962
 10753              	.L963:
3052:src/keys.c    **** 	xeq_or_gto:
 10754              		.loc 1 3052 3 is_stmt 1 view .LVU3322
3052:src/keys.c    **** 	xeq_or_gto:
 10755              		.loc 1 3052 6 is_stmt 0 view .LVU3323
 10756 0fe6 02F54074 		add	r4, r2, #768
 10757              	.LVL906:
3054:src/keys.c    **** 			break;
 10758              		.loc 1 3054 3 is_stmt 1 view .LVU3324
3054:src/keys.c    **** 			break;
 10759              		.loc 1 3054 6 is_stmt 0 view .LVU3325
 10760 0fea 002A     		cmp	r2, #0
 10761 0fec 7FF458AF 		bne	.L974
 10762 0ff0 FFF77BBB 		b	.L1313
 10763              	.LVL907:
 10764              	.L961:
3011:src/keys.c    **** 		goto next;
 10765              		.loc 1 3011 3 is_stmt 1 view .LVU3326
3011:src/keys.c    **** 		goto next;
 10766              		.loc 1 3011 8 is_stmt 0 view .LVU3327
 10767 0ff4 5046     		mov	r0, r10
 10768 0ff6 0121     		movs	r1, #1
 10769 0ff8 FFF7FEFF 		bl	advance_to_previous_label
 10770              	.LVL908:
 10771 0ffc 0121     		movs	r1, #1
 10772 0ffe FFF7FEFF 		bl	advance_to_previous_label
 10773              	.LVL909:
 10774 1002 8246     		mov	r10, r0
 10775              	.LVL910:
3012:src/keys.c    **** 
 10776              		.loc 1 3012 3 is_stmt 1 view .LVU3328
 10777 1004 66E7     		b	.L966
 10778              	.LVL911:
 10779              	.L971:
3008:src/keys.c    **** 
 10780              		.loc 1 3008 2 is_stmt 0 view .LVU3329
 10781 1006 40F22732 		movw	r2, #807
 10782 100a 9342     		cmp	r3, r2
 10783 100c 7FF46DAB 		bne	.L1313
3078:src/keys.c    **** 		goto set_pc_and_exit;
 10784              		.loc 1 3078 3 is_stmt 1 view .LVU3330
3078:src/keys.c    **** 		goto set_pc_and_exit;
ARM GAS  /tmp/cc6xzGMw.s 			page 309


 10785              		.loc 1 3078 18 is_stmt 0 view .LVU3331
 10786 1010 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10787 1014 61F38613 		bfi	r3, r1, #6, #1
 10788 1018 88F81630 		strb	r3, [r8, #22]
3079:src/keys.c    **** 
 10789              		.loc 1 3079 3 is_stmt 1 view .LVU3332
2997:src/keys.c    **** 
 10790              		.loc 1 2997 6 is_stmt 0 view .LVU3333
 10791 101c 3324     		movs	r4, #51
 10792              	.LVL912:
3079:src/keys.c    **** 
 10793              		.loc 1 3079 3 view .LVU3334
 10794 101e 3CE7     		b	.L962
 10795              	.L1413:
 10796              		.align	2
 10797              	.L1412:
 10798 1020 00000000 		.word	main_ram
 10799 1024 00000000 		.word	NonProgrammable
 10800 1028 00000000 		.word	.LANCHOR20
 10801 102c 00000000 		.word	.LANCHOR6
 10802 1030 00000000 		.word	.LANCHOR5
 10803              	.LVL913:
 10804              	.L1344:
3079:src/keys.c    **** 
 10805              		.loc 1 3079 3 view .LVU3335
 10806              	.LBE1256:
 10807              	.LBE1263:
3339:src/keys.c    **** 
 10808              		.loc 1 3339 3 is_stmt 1 view .LVU3336
 10809              	.LBB1264:
 10810              	.LBI1264:
3120:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 10811              		.loc 1 3120 12 view .LVU3337
 10812              	.LBB1265:
3121:src/keys.c    **** 	enum shifts shift = reset_shift();
 10813              		.loc 1 3121 2 view .LVU3338
 10814              	.LBB1266:
 10815              	.LBI1266:
 210:src/keys.c    **** {
 10816              		.loc 1 210 14 view .LVU3339
 10817              	.LBB1267:
 212:src/keys.c    ****     // K00 - K05
 10818              		.loc 1 212 3 view .LVU3340
 234:src/keys.c    **** }
 10819              		.loc 1 234 3 view .LVU3341
 10820              	.LBB1268:
 10821              	.LBI1268:
 131:src/keys.c    **** {
 10822              		.loc 1 131 12 view .LVU3342
 10823              	.LBB1269:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10824              		.loc 1 133 2 view .LVU3343
 143:src/keys.c    **** }
 10825              		.loc 1 143 2 view .LVU3344
 143:src/keys.c    **** }
 10826              		.loc 1 143 23 is_stmt 0 view .LVU3345
 10827 1034 AA4B     		ldr	r3, .L1414
ARM GAS  /tmp/cc6xzGMw.s 			page 310


 10828              	.LBE1269:
 10829              	.LBE1268:
 234:src/keys.c    **** }
 10830              		.loc 1 234 28 view .LVU3346
 10831 1036 AB4A     		ldr	r2, .L1414+4
 10832              	.LBB1271:
 10833              	.LBB1270:
 143:src/keys.c    **** }
 10834              		.loc 1 143 23 view .LVU3347
 10835 1038 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 10836              	.LBE1270:
 10837              	.LBE1271:
 234:src/keys.c    **** }
 10838              		.loc 1 234 10 view .LVU3348
 10839 103a 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
 10840              	.LVL914:
 234:src/keys.c    **** }
 10841              		.loc 1 234 10 view .LVU3349
 10842              	.LBE1267:
 10843              	.LBE1266:
 10844              	.LBB1272:
 10845              	.LBB1273:
 10846              	.LBB1274:
 10847              	.LBB1275:
 10848              	.LBB1276:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10849              		.loc 1 97 18 view .LVU3350
 10850 103e FFF7FEFF 		bl	shift_down
 10851              	.LVL915:
 10852              	.LBE1276:
 10853              	.LBE1275:
 10854              	.LBE1274:
 10855              	.LBE1273:
 10856              	.LBE1272:
3121:src/keys.c    **** 	enum shifts shift = reset_shift();
 10857              		.loc 1 3121 15 view .LVU3351
 10858 1042 2BF0800B 		bic	fp, fp, #128
 10859              	.LVL916:
3122:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
 10860              		.loc 1 3122 2 is_stmt 1 view .LVU3352
 10861              	.LBB1285:
 10862              	.LBI1272:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 10863              		.loc 1 114 13 view .LVU3353
 10864              	.LBE1285:
 10865              	.LBE1265:
 10866              	.LBE1264:
 10867              	.LBE1406:
 10868              	.LBE1483:
 115:src/keys.c    **** }
 10869              		.loc 1 115 2 view .LVU3354
 10870              	.LBB1484:
 10871              	.LBB1407:
 10872              	.LBB1299:
 10873              	.LBB1292:
 10874              	.LBB1286:
 10875              	.LBB1282:
ARM GAS  /tmp/cc6xzGMw.s 			page 311


 10876              	.LBI1273:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 10877              		.loc 1 104 20 view .LVU3355
 10878              	.LBB1279:
 105:src/keys.c    **** 	State2.shifts = shift;
 10879              		.loc 1 105 2 view .LVU3356
 10880              	.LBB1278:
 10881              	.LBI1275:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 10882              		.loc 1 96 13 view .LVU3357
 10883              	.LBB1277:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10884              		.loc 1 97 2 view .LVU3358
  98:src/keys.c    **** }
 10885              		.loc 1 98 2 view .LVU3359
  98:src/keys.c    **** }
 10886              		.loc 1 98 52 is_stmt 0 view .LVU3360
 10887 1046 8146     		mov	r9, r0
 10888 1048 08B9     		cbnz	r0, .L978
 10889 104a 98F81090 		ldrb	r9, [r8, #16]	@ zero_extendqisi2
 10890              	.L978:
 10891              	.LVL917:
  98:src/keys.c    **** }
 10892              		.loc 1 98 52 view .LVU3361
 10893              	.LBE1277:
 10894              	.LBE1278:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10895              		.loc 1 106 2 is_stmt 1 view .LVU3362
 10896              	.LBE1279:
 10897              	.LBE1282:
 10898              	.LBE1286:
3123:src/keys.c    **** 	const int g_max = global_regs();
 10899              		.loc 1 3123 31 is_stmt 0 view .LVU3363
 10900 104e 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10901              	.LBB1287:
 10902              	.LBB1283:
 10903              	.LBB1280:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10904              		.loc 1 106 16 view .LVU3364
 10905 1052 0022     		movs	r2, #0
 10906              	.LBE1280:
 10907              	.LBE1283:
 10908              	.LBE1287:
3123:src/keys.c    **** 	const int g_max = global_regs();
 10909              		.loc 1 3123 46 view .LVU3365
 10910 1054 D907     		lsls	r1, r3, #31
 10911              	.LBB1288:
 10912              	.LBB1284:
 10913              	.LBB1281:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10914              		.loc 1 106 16 view .LVU3366
 10915 1056 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 10916              		.loc 1 108 2 is_stmt 1 view .LVU3367
 10917              	.LVL918:
 108:src/keys.c    **** }
 10918              		.loc 1 108 2 is_stmt 0 view .LVU3368
ARM GAS  /tmp/cc6xzGMw.s 			page 312


 10919              	.LBE1281:
 10920              	.LBE1284:
 10921              	.LBE1288:
3123:src/keys.c    **** 	const int g_max = global_regs();
 10922              		.loc 1 3123 2 is_stmt 1 view .LVU3369
3123:src/keys.c    **** 	const int g_max = global_regs();
 10923              		.loc 1 3123 46 is_stmt 0 view .LVU3370
 10924 105a 00F10683 		bmi	.L1385
 10925 105e 4FF0700A 		mov	r10, #112
 10926              	.L979:
 10927              	.LVL919:
3124:src/keys.c    **** 
 10928              		.loc 1 3124 2 is_stmt 1 view .LVU3371
3124:src/keys.c    **** 
 10929              		.loc 1 3124 20 is_stmt 0 view .LVU3372
 10930 1062 FFF7FEFF 		bl	global_regs
 10931              	.LVL920:
3126:src/keys.c    **** 		if (local_regs())
 10932              		.loc 1 3126 2 is_stmt 1 view .LVU3373
3126:src/keys.c    **** 		if (local_regs())
 10933              		.loc 1 3126 5 is_stmt 0 view .LVU3374
 10934 1066 BBF1700F 		cmp	fp, #112
 10935 106a 00F06C84 		beq	.L1386
3132:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 10936              		.loc 1 3132 7 is_stmt 1 view .LVU3375
3132:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 10937              		.loc 1 3132 10 is_stmt 0 view .LVU3376
 10938 106e BBF1090F 		cmp	fp, #9
 10939 1072 40F2FE82 		bls	.L1387
3139:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 10940              		.loc 1 3139 7 is_stmt 1 view .LVU3377
3139:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 10941              		.loc 1 3139 29 is_stmt 0 view .LVU3378
 10942 1076 09F1FF33 		add	r3, r9, #-1
3139:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 10943              		.loc 1 3139 10 view .LVU3379
 10944 107a DBB2     		uxtb	r3, r3
 10945 107c 012B     		cmp	r3, #1
 10946 107e 40F26A82 		bls	.L1388
 10947              	.L987:
3143:src/keys.c    **** 		State2.digval = n;
 10948              		.loc 1 3143 7 is_stmt 1 view .LVU3380
3143:src/keys.c    **** 		State2.digval = n;
 10949              		.loc 1 3143 10 is_stmt 0 view .LVU3381
 10950 1082 BBF17F0F 		cmp	fp, #127
 10951 1086 40F02C83 		bne	.L1389
3148:src/keys.c    **** 	case K_DOWN:
 10952              		.loc 1 3148 2 is_stmt 1 view .LVU3382
 10953 108a 073C     		subs	r4, r4, #7
 10954              	.LVL921:
3148:src/keys.c    **** 	case K_DOWN:
 10955              		.loc 1 3148 2 is_stmt 0 view .LVU3383
 10956 108c 112C     		cmp	r4, #17
 10957 108e 3FF62CAB 		bhi	.L1313
 10958 1092 01A3     		adr	r3, .L1116
 10959 1094 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 10960              		.p2align 2
ARM GAS  /tmp/cc6xzGMw.s 			page 313


 10961              	.L1116:
 10962 1098 E1100000 		.word	.L1000+1
 10963 109c EB060000 		.word	.L1313+1
 10964 10a0 EB060000 		.word	.L1313+1
 10965 10a4 EB060000 		.word	.L1313+1
 10966 10a8 EB060000 		.word	.L1313+1
 10967 10ac 91110000 		.word	.L999+1
 10968 10b0 EB060000 		.word	.L1313+1
 10969 10b4 EB060000 		.word	.L1313+1
 10970 10b8 EB060000 		.word	.L1313+1
 10971 10bc 73110000 		.word	.L997+1
 10972 10c0 EB060000 		.word	.L1313+1
 10973 10c4 45110000 		.word	.L993+1
 10974 10c8 EB060000 		.word	.L1313+1
 10975 10cc EB060000 		.word	.L1313+1
 10976 10d0 EB060000 		.word	.L1313+1
 10977 10d4 EB060000 		.word	.L1313+1
 10978 10d8 EB060000 		.word	.L1313+1
 10979 10dc 0F110000 		.word	.L990+1
 10980              		.p2align 1
 10981              	.L1000:
3187:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 10982              		.loc 1 3187 3 is_stmt 1 view .LVU3384
3187:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 10983              		.loc 1 3187 6 is_stmt 0 view .LVU3385
 10984 10e0 B9F1000F 		cmp	r9, #0
 10985 10e4 7FF401AB 		bne	.L1313
3191:src/keys.c    **** #endif
 10986              		.loc 1 3191 4 is_stmt 1 view .LVU3386
3191:src/keys.c    **** #endif
 10987              		.loc 1 3191 8 is_stmt 0 view .LVU3387
 10988 10e8 B8F80840 		ldrh	r4, [r8, #8]
 10989              	.LVL922:
3193:src/keys.c    **** 			State2.digval = 0;
 10990              		.loc 1 3193 4 is_stmt 1 view .LVU3388
3193:src/keys.c    **** 			State2.digval = 0;
 10991              		.loc 1 3193 24 is_stmt 0 view .LVU3389
 10992 10ec 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
 10993 10f0 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
3195:src/keys.c    **** 			return n;
 10994              		.loc 1 3195 19 view .LVU3390
 10995 10f4 88F80A90 		strb	r9, [r8, #10]
3196:src/keys.c    **** 		}
 10996              		.loc 1 3196 11 view .LVU3391
 10997 10f8 44F42854 		orr	r4, r4, #10752
 10998              	.LVL923:
3193:src/keys.c    **** 			State2.digval = 0;
 10999              		.loc 1 3193 24 view .LVU3392
 11000 10fc 69F3C303 		bfi	r3, r9, #3, #1
3194:src/keys.c    **** 			State2.digval2 = 0;
 11001              		.loc 1 3194 18 view .LVU3393
 11002 1100 A8F80890 		strh	r9, [r8, #8]	@ movhi
 11003 1104 2046     		mov	r0, r4
 11004              	.LVL924:
3193:src/keys.c    **** 			State2.digval = 0;
 11005              		.loc 1 3193 24 view .LVU3394
 11006 1106 88F81730 		strb	r3, [r8, #23]
ARM GAS  /tmp/cc6xzGMw.s 			page 314


3194:src/keys.c    **** 			State2.digval2 = 0;
 11007              		.loc 1 3194 4 is_stmt 1 view .LVU3395
3195:src/keys.c    **** 			return n;
 11008              		.loc 1 3195 4 view .LVU3396
3196:src/keys.c    **** 		}
 11009              		.loc 1 3196 4 view .LVU3397
3196:src/keys.c    **** 		}
 11010              		.loc 1 3196 11 is_stmt 0 view .LVU3398
 11011 110a FFF78BB9 		b	.L862
 11012              	.LVL925:
 11013              	.L990:
3150:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 11014              		.loc 1 3150 3 is_stmt 1 view .LVU3399
3150:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 11015              		.loc 1 3150 13 is_stmt 0 view .LVU3400
 11016 110e B8F80830 		ldrh	r3, [r8, #8]
3150:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 11017              		.loc 1 3150 6 view .LVU3401
 11018 1112 002B     		cmp	r3, #0
 11019 1114 00F02086 		beq	.L991
3151:src/keys.c    **** 				State2.digval = global_regs();
 11020              		.loc 1 3151 4 is_stmt 1 view .LVU3402
3151:src/keys.c    **** 				State2.digval = global_regs();
 11021              		.loc 1 3151 8 is_stmt 0 view .LVU3403
 11022 1118 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3151:src/keys.c    **** 				State2.digval = global_regs();
 11023              		.loc 1 3151 7 view .LVU3404
 11024 111c D407     		lsls	r4, r2, #31
 11025              	.LVL926:
3151:src/keys.c    **** 				State2.digval = global_regs();
 11026              		.loc 1 3151 7 view .LVU3405
 11027 111e 02D4     		bmi	.L992
3151:src/keys.c    **** 				State2.digval = global_regs();
 11028              		.loc 1 3151 23 view .LVU3406
 11029 1120 642B     		cmp	r3, #100
 11030 1122 00F01F86 		beq	.L1390
 11031              	.LVL927:
 11032              	.L992:
3153:src/keys.c    **** 		}
 11033              		.loc 1 3153 4 is_stmt 1 view .LVU3407
 11034 1126 B8F80830 		ldrh	r3, [r8, #8]
 11035 112a 013B     		subs	r3, r3, #1
 11036              	.L1303:
3153:src/keys.c    **** 		}
 11037              		.loc 1 3153 4 is_stmt 0 view .LVU3408
 11038 112c A8F80830 		strh	r3, [r8, #8]	@ movhi
 11039              	.LVL928:
 11040              	.L983:
3205:src/keys.c    **** 	return STATE_UNFINISHED;
 11041              		.loc 1 3205 2 is_stmt 1 view .LVU3409
3205:src/keys.c    **** 	return STATE_UNFINISHED;
 11042              		.loc 1 3205 16 is_stmt 0 view .LVU3410
 11043 1130 98F81420 		ldrb	r2, [r8, #20]	@ zero_extendqisi2
 11044 1134 3368     		ldr	r3, [r6]
 11045 1136 6FF3C502 		bfc	r2, #3, #3
 11046 113a 88F81420 		strb	r2, [r8, #20]
3206:src/keys.c    **** }
ARM GAS  /tmp/cc6xzGMw.s 			page 315


 11047              		.loc 1 3206 2 is_stmt 1 view .LVU3411
3206:src/keys.c    **** }
 11048              		.loc 1 3206 9 is_stmt 0 view .LVU3412
 11049 113e 3324     		movs	r4, #51
 11050 1140 FEF7B9BF 		b	.L801
 11051              	.LVL929:
 11052              	.L993:
3160:src/keys.c    **** 			State2.digval++;
 11053              		.loc 1 3160 3 is_stmt 1 view .LVU3413
3160:src/keys.c    **** 			State2.digval++;
 11054              		.loc 1 3160 13 is_stmt 0 view .LVU3414
 11055 1144 B8F80830 		ldrh	r3, [r8, #8]
3160:src/keys.c    **** 			State2.digval++;
 11056              		.loc 1 3160 27 view .LVU3415
 11057 1148 0AF1FF3A 		add	r10, r10, #-1
 11058              	.LVL930:
3160:src/keys.c    **** 			State2.digval++;
 11059              		.loc 1 3160 6 view .LVU3416
 11060 114c 5345     		cmp	r3, r10
 11061 114e 80F2FE85 		bge	.L994
3161:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 11062              		.loc 1 3161 4 is_stmt 1 view .LVU3417
3162:src/keys.c    **** 				State2.digval = regX_idx;
 11063              		.loc 1 3162 8 is_stmt 0 view .LVU3418
 11064 1152 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3161:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 11065              		.loc 1 3161 17 view .LVU3419
 11066 1156 0133     		adds	r3, r3, #1
 11067 1158 9CB2     		uxth	r4, r3
 11068              	.LVL931:
3162:src/keys.c    **** 				State2.digval = regX_idx;
 11069              		.loc 1 3162 7 view .LVU3420
 11070 115a D007     		lsls	r0, r2, #31
 11071              	.LVL932:
3161:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 11072              		.loc 1 3161 17 view .LVU3421
 11073 115c A8F80840 		strh	r4, [r8, #8]	@ movhi
3162:src/keys.c    **** 				State2.digval = regX_idx;
 11074              		.loc 1 3162 4 is_stmt 1 view .LVU3422
3162:src/keys.c    **** 				State2.digval = regX_idx;
 11075              		.loc 1 3162 7 is_stmt 0 view .LVU3423
 11076 1160 E6D4     		bmi	.L983
3162:src/keys.c    **** 				State2.digval = regX_idx;
 11077              		.loc 1 3162 43 view .LVU3424
 11078 1162 FFF7FEFF 		bl	global_regs
 11079              	.LVL933:
3162:src/keys.c    **** 				State2.digval = regX_idx;
 11080              		.loc 1 3162 23 view .LVU3425
 11081 1166 8442     		cmp	r4, r0
 11082 1168 E2D1     		bne	.L983
3163:src/keys.c    **** 		}
 11083              		.loc 1 3163 5 is_stmt 1 view .LVU3426
3163:src/keys.c    **** 		}
 11084              		.loc 1 3163 19 is_stmt 0 view .LVU3427
 11085 116a 6423     		movs	r3, #100
 11086 116c A8F80830 		strh	r3, [r8, #8]	@ movhi
 11087 1170 DEE7     		b	.L983
ARM GAS  /tmp/cc6xzGMw.s 			page 316


 11088              	.LVL934:
 11089              	.L997:
3177:src/keys.c    **** 			return STATE_UNFINISHED;
 11090              		.loc 1 3177 3 is_stmt 1 view .LVU3428
3177:src/keys.c    **** 			return STATE_UNFINISHED;
 11091              		.loc 1 3177 7 is_stmt 0 view .LVU3429
 11092 1172 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3177:src/keys.c    **** 			return STATE_UNFINISHED;
 11093              		.loc 1 3177 6 view .LVU3430
 11094 1176 13F02002 		ands	r2, r3, #32
 11095 117a 7FF4B6AA 		bne	.L1313
3179:src/keys.c    **** 
 11096              		.loc 1 3179 3 is_stmt 1 view .LVU3431
3201:src/keys.c    **** 	State2.digval = 0;
 11097              		.loc 1 3201 2 view .LVU3432
3201:src/keys.c    **** 	State2.digval = 0;
 11098              		.loc 1 3201 22 is_stmt 0 view .LVU3433
 11099 117e 62F3C303 		bfi	r3, r2, #3, #1
 11100 1182 88F81730 		strb	r3, [r8, #23]
3202:src/keys.c    **** 	State2.digval2 = 0;
 11101              		.loc 1 3202 2 is_stmt 1 view .LVU3434
3202:src/keys.c    **** 	State2.digval2 = 0;
 11102              		.loc 1 3202 16 is_stmt 0 view .LVU3435
 11103 1186 A8F80820 		strh	r2, [r8, #8]	@ movhi
3203:src/keys.c    **** reset_window:
 11104              		.loc 1 3203 2 is_stmt 1 view .LVU3436
3203:src/keys.c    **** reset_window:
 11105              		.loc 1 3203 17 is_stmt 0 view .LVU3437
 11106 118a 88F80A20 		strb	r2, [r8, #10]
 11107 118e CFE7     		b	.L983
 11108              	.L999:
3182:src/keys.c    **** 			State2.disp_as_alpha = 1;
 11109              		.loc 1 3182 3 is_stmt 1 view .LVU3438
3182:src/keys.c    **** 			State2.disp_as_alpha = 1;
 11110              		.loc 1 3182 6 is_stmt 0 view .LVU3439
 11111 1190 B9F1010F 		cmp	r9, #1
 11112 1194 A4D1     		bne	.L1000
3183:src/keys.c    **** 			goto reset_window;
 11113              		.loc 1 3183 4 is_stmt 1 view .LVU3440
3183:src/keys.c    **** 			goto reset_window;
 11114              		.loc 1 3183 25 is_stmt 0 view .LVU3441
 11115 1196 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11116 119a 43F00403 		orr	r3, r3, #4
 11117 119e 88F81630 		strb	r3, [r8, #22]
3184:src/keys.c    **** 		}
 11118              		.loc 1 3184 4 is_stmt 1 view .LVU3442
 11119 11a2 C5E7     		b	.L983
 11120              	.LVL935:
 11121              	.L856:
3184:src/keys.c    **** 		}
 11122              		.loc 1 3184 4 is_stmt 0 view .LVU3443
 11123              	.LBE1292:
 11124              	.LBE1299:
 11125              	.LBB1300:
 11126              	.LBB1101:
1609:src/keys.c    **** #endif
 11127              		.loc 1 1609 4 is_stmt 1 view .LVU3444
ARM GAS  /tmp/cc6xzGMw.s 			page 317


1609:src/keys.c    **** #endif
 11128              		.loc 1 1609 18 view .LVU3445
1609:src/keys.c    **** #endif
 11129              		.loc 1 1609 18 is_stmt 0 view .LVU3446
 11130 11a4 8BF0010B 		eor	fp, fp, #1
 11131              	.LVL936:
1609:src/keys.c    **** #endif
 11132              		.loc 1 1609 18 view .LVU3447
 11133 11a8 FFF7B1BB 		b	.L863
 11134              	.LVL937:
 11135              	.L1363:
1609:src/keys.c    **** #endif
 11136              		.loc 1 1609 18 view .LVU3448
 11137              	.LBE1101:
 11138              	.LBE1300:
 11139              	.LBB1301:
 11140              	.LBB1083:
1721:src/keys.c    **** 		goto fin;
 11141              		.loc 1 1721 3 is_stmt 1 view .LVU3449
 11142              	.LBB1076:
 11143              	.LBI1076:
1693:src/keys.c    **** 	const int code = 100 + n;
 11144              		.loc 1 1693 12 view .LVU3450
 11145              	.LBB1077:
1694:src/keys.c    **** 	unsigned int pc = state_pc();
 11146              		.loc 1 1694 2 view .LVU3451
1695:src/keys.c    **** 
 11147              		.loc 1 1695 2 view .LVU3452
1695:src/keys.c    **** 
 11148              		.loc 1 1695 20 is_stmt 0 view .LVU3453
 11149 11ac DFF83CA1 		ldr	r10, .L1414+12
 11150 11b0 DAF80030 		ldr	r3, [r10]
 11151              	.LVL938:
1695:src/keys.c    **** 
 11152              		.loc 1 1695 15 view .LVU3454
 11153 11b4 B3F8E007 		ldrh	r0, [r3, #2016]
 11154              	.LVL939:
1697:src/keys.c    **** 		pc = 1;
 11155              		.loc 1 1697 2 is_stmt 1 view .LVU3455
1697:src/keys.c    **** 		pc = 1;
 11156              		.loc 1 1697 5 is_stmt 0 view .LVU3456
 11157 11b8 830B     		lsrs	r3, r0, #14
1698:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
 11158              		.loc 1 1698 6 view .LVU3457
 11159 11ba 032B     		cmp	r3, #3
 11160              	.LVL940:
1699:src/keys.c    **** 	if (pc > 0)
 11161              		.loc 1 1699 2 is_stmt 1 view .LVU3458
1699:src/keys.c    **** 	if (pc > 0)
 11162              		.loc 1 1699 7 is_stmt 0 view .LVU3459
 11163 11bc 08BF     		it	eq
 11164 11be 0120     		moveq	r0, #1
 11165              	.LVL941:
1699:src/keys.c    **** 	if (pc > 0)
 11166              		.loc 1 1699 7 view .LVU3460
 11167 11c0 04F16401 		add	r1, r4, #100
 11168              	.LVL942:
ARM GAS  /tmp/cc6xzGMw.s 			page 318


1699:src/keys.c    **** 	if (pc > 0)
 11169              		.loc 1 1699 7 view .LVU3461
 11170 11c4 0322     		movs	r2, #3
 11171              	.LVL943:
1699:src/keys.c    **** 	if (pc > 0)
 11172              		.loc 1 1699 7 view .LVU3462
 11173 11c6 FFF7FEFF 		bl	find_label_from
 11174              	.LVL944:
1700:src/keys.c    **** 		return pc;
 11175              		.loc 1 1700 2 is_stmt 1 view .LVU3463
1700:src/keys.c    **** 		return pc;
 11176              		.loc 1 1700 5 is_stmt 0 view .LVU3464
 11177 11ca 0028     		cmp	r0, #0
 11178 11cc 7FF455AB 		bne	.L847
1702:src/keys.c    **** }
 11179              		.loc 1 1702 2 is_stmt 1 view .LVU3465
1702:src/keys.c    **** }
 11180              		.loc 1 1702 9 is_stmt 0 view .LVU3466
 11181 11d0 DAF80030 		ldr	r3, [r10]
 11182 11d4 B3F8E007 		ldrh	r0, [r3, #2016]
 11183              	.LVL945:
1702:src/keys.c    **** }
 11184              		.loc 1 1702 9 view .LVU3467
 11185              	.LBE1077:
 11186              	.LBE1076:
1722:src/keys.c    **** 	}
 11187              		.loc 1 1722 3 is_stmt 1 view .LVU3468
 11188 11d8 FFF74FBB 		b	.L847
 11189              	.LVL946:
 11190              	.L1365:
1731:src/keys.c    **** 	}
 11191              		.loc 1 1731 3 view .LVU3469
1731:src/keys.c    **** 	}
 11192              		.loc 1 1731 6 is_stmt 0 view .LVU3470
 11193 11dc B8F80800 		ldrh	r0, [r8, #8]
 11194              	.LVL947:
1760:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11195              		.loc 1 1760 2 is_stmt 1 view .LVU3471
 11196 11e0 5FE4     		b	.L838
 11197              	.LVL948:
 11198              	.L1170:
1760:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11199              		.loc 1 1760 2 is_stmt 0 view .LVU3472
 11200              	.LBE1083:
 11201              	.LBE1301:
 11202              	.LBB1302:
 11203              	.LBB1065:
2369:src/keys.c    **** 	}
 11204              		.loc 1 2369 18 view .LVU3473
 11205 11e2 1E24     		movs	r4, #30
 11206              	.LVL949:
2369:src/keys.c    **** 	}
 11207              		.loc 1 2369 47 view .LVU3474
 11208 11e4 1C44     		add	r4, r4, r3
 11209 11e6 FFF7FBB8 		b	.L835
 11210              	.LVL950:
 11211              	.L1354:
ARM GAS  /tmp/cc6xzGMw.s 			page 319


2369:src/keys.c    **** 	}
 11212              		.loc 1 2369 47 view .LVU3475
 11213              	.LBE1065:
 11214              	.LBE1302:
 11215              	.LBB1303:
 11216              	.LBB841:
 294:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 11217              		.loc 1 294 27 view .LVU3476
 11218 11ea 242C     		cmp	r4, #36
 11219 11ec 7FF447A8 		bne	.L927
 11220              	.L1144:
 295:src/keys.c    **** 		if ( (shift == SHIFT_F) && (c == K20) ) {
 11221              		.loc 1 295 11 view .LVU3477
 11222 11f0 1623     		movs	r3, #22
 11223 11f2 FFF76CBA 		b	.L910
 11224              	.LVL951:
 11225              	.L1345:
 295:src/keys.c    **** 		if ( (shift == SHIFT_F) && (c == K20) ) {
 11226              		.loc 1 295 11 view .LVU3478
 11227              	.LBE841:
 11228              	.LBE1303:
3342:src/keys.c    **** 
 11229              		.loc 1 3342 3 is_stmt 1 view .LVU3479
 11230              	.LBB1304:
 11231              	.LBI1304:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 11232              		.loc 1 114 13 view .LVU3480
 11233              	.LBE1304:
 11234              	.LBE1407:
 11235              	.LBE1484:
 115:src/keys.c    **** }
 11236              		.loc 1 115 2 view .LVU3481
 11237              	.LBB1485:
 11238              	.LBB1408:
 11239              	.LBB1311:
 11240              	.LBB1305:
 11241              	.LBI1305:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 11242              		.loc 1 104 20 view .LVU3482
 11243              	.LBB1306:
 105:src/keys.c    **** 	State2.shifts = shift;
 11244              		.loc 1 105 2 view .LVU3483
 11245              	.LBB1307:
 11246              	.LBI1307:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 11247              		.loc 1 96 13 view .LVU3484
 11248              	.LBB1308:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11249              		.loc 1 97 2 view .LVU3485
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11250              		.loc 1 97 18 is_stmt 0 view .LVU3486
 11251 11f6 FFF7FEFF 		bl	shift_down
 11252              	.LVL952:
  98:src/keys.c    **** }
 11253              		.loc 1 98 2 is_stmt 1 view .LVU3487
  98:src/keys.c    **** }
 11254              		.loc 1 98 52 is_stmt 0 view .LVU3488
ARM GAS  /tmp/cc6xzGMw.s 			page 320


 11255 11fa 0146     		mov	r1, r0
 11256 11fc 08B9     		cbnz	r0, .L1003
 11257 11fe 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 11258              	.L1003:
 11259              	.LVL953:
  98:src/keys.c    **** }
 11260              		.loc 1 98 52 view .LVU3489
 11261              	.LBE1308:
 11262              	.LBE1307:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11263              		.loc 1 106 2 is_stmt 1 view .LVU3490
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11264              		.loc 1 106 16 is_stmt 0 view .LVU3491
 11265 1202 0022     		movs	r2, #0
 11266              	.LBE1306:
 11267              	.LBE1305:
 11268              	.LBE1311:
3342:src/keys.c    **** 
 11269              		.loc 1 3342 10 view .LVU3492
 11270 1204 2046     		mov	r0, r4
 11271              	.LBB1312:
 11272              	.LBB1310:
 11273              	.LBB1309:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11274              		.loc 1 106 16 view .LVU3493
 11275 1206 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 11276              		.loc 1 108 2 is_stmt 1 view .LVU3494
 11277              	.LVL954:
 108:src/keys.c    **** }
 11278              		.loc 1 108 2 is_stmt 0 view .LVU3495
 11279              	.LBE1309:
 11280              	.LBE1310:
 11281              	.LBE1312:
3342:src/keys.c    **** 
 11282              		.loc 1 3342 10 view .LVU3496
 11283 120a FFF7FEFF 		bl	process_catalogue
 11284              	.LVL955:
3342:src/keys.c    **** 
 11285              		.loc 1 3342 10 view .LVU3497
 11286 120e 0446     		mov	r4, r0
 11287 1210 FFF7E6B8 		b	.L835
 11288              	.LVL956:
 11289              	.L1169:
 11290              	.LBB1313:
 11291              	.LBB1066:
2369:src/keys.c    **** 	}
 11292              		.loc 1 2369 18 view .LVU3498
 11293 1214 2724     		movs	r4, #39
 11294              	.LVL957:
2369:src/keys.c    **** 	}
 11295              		.loc 1 2369 47 view .LVU3499
 11296 1216 1C44     		add	r4, r4, r3
 11297 1218 FFF7E2B8 		b	.L835
 11298              	.LVL958:
 11299              	.L1145:
2369:src/keys.c    **** 	}
ARM GAS  /tmp/cc6xzGMw.s 			page 321


 11300              		.loc 1 2369 47 view .LVU3500
 11301              	.LBE1066:
 11302              	.LBE1313:
 11303              	.LBB1314:
 11304              	.LBB842:
 11305              	.LBB831:
 371:src/keys.c    **** #ifndef WINGUI
 11306              		.loc 1 371 8 view .LVU3501
 11307 121c 324B     		ldr	r3, .L1414+8
 377:src/keys.c    ****   }
 11308              		.loc 1 377 9 view .LVU3502
 11309 121e 0C21     		movs	r1, #12
 373:src/keys.c    **** #else
 11310              		.loc 1 373 27 view .LVU3503
 11311 1220 4FF0010C 		mov	ip, #1
 11312 1224 FFF71FB8 		b	.L922
 11313              	.LVL959:
 11314              	.L1370:
 373:src/keys.c    **** #else
 11315              		.loc 1 373 27 view .LVU3504
 11316              	.LBE831:
 11317              	.LBE842:
 11318              	.LBE1314:
 11319              	.LBB1315:
 11320              	.LBB1122:
2923:src/keys.c    **** 		return STATE_UNFINISHED;
 11321              		.loc 1 2923 3 is_stmt 1 view .LVU3505
 11322 1228 3368     		ldr	r3, [r6]
 11323              	.LVL960:
2923:src/keys.c    **** 		return STATE_UNFINISHED;
 11324              		.loc 1 2923 17 is_stmt 0 view .LVU3506
 11325 122a 88F80C00 		strb	r0, [r8, #12]
2924:src/keys.c    **** 	} 
 11326              		.loc 1 2924 3 is_stmt 1 view .LVU3507
 11327              	.LBE1122:
 11328              	.LBE1315:
3290:src/keys.c    **** 
 11329              		.loc 1 3290 10 is_stmt 0 view .LVU3508
 11330 122e 3324     		movs	r4, #51
 11331              	.LVL961:
 11332              	.LBB1316:
 11333              	.LBB1123:
2924:src/keys.c    **** 	} 
 11334              		.loc 1 2924 10 view .LVU3509
 11335 1230 FEF741BF 		b	.L801
 11336              	.LVL962:
 11337              	.L1364:
2924:src/keys.c    **** 	} 
 11338              		.loc 1 2924 10 view .LVU3510
 11339              	.LBE1123:
 11340              	.LBE1316:
 11341              	.LBB1317:
 11342              	.LBB1084:
1726:src/keys.c    **** 		goto fin;
 11343              		.loc 1 1726 3 is_stmt 1 view .LVU3511
1726:src/keys.c    **** 		goto fin;
 11344              		.loc 1 1726 11 is_stmt 0 view .LVU3512
ARM GAS  /tmp/cc6xzGMw.s 			page 322


 11345 1234 2D4B     		ldr	r3, .L1414+12
 11346              	.LVL963:
1726:src/keys.c    **** 		goto fin;
 11347              		.loc 1 1726 11 view .LVU3513
 11348 1236 1B68     		ldr	r3, [r3]
1726:src/keys.c    **** 		goto fin;
 11349              		.loc 1 1726 9 view .LVU3514
 11350 1238 5888     		ldrh	r0, [r3, #2]
 11351              	.LVL964:
1727:src/keys.c    **** 	}
 11352              		.loc 1 1727 3 is_stmt 1 view .LVU3515
 11353 123a FFF71EBB 		b	.L847
 11354              	.LVL965:
 11355              	.L1346:
1727:src/keys.c    **** 	}
 11356              		.loc 1 1727 3 is_stmt 0 view .LVU3516
 11357              	.LBE1084:
 11358              	.LBE1317:
3346:src/keys.c    **** #else
 11359              		.loc 1 3346 3 is_stmt 1 view .LVU3517
 11360              	.LBB1318:
 11361              	.LBI967:
1773:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
 11362              		.loc 1 1773 12 view .LVU3518
 11363              	.LBB1020:
1774:src/keys.c    ****         int op = STATE_UNFINISHED;
 11364              		.loc 1 1774 2 view .LVU3519
1774:src/keys.c    ****         int op = STATE_UNFINISHED;
 11365              		.loc 1 1774 33 is_stmt 0 view .LVU3520
 11366 123e 98F80D90 		ldrb	r9, [r8, #13]	@ zero_extendqisi2
 11367              	.LBB969:
 11368              	.LBB970:
 11369              	.LBB971:
 11370              	.LBB972:
 11371              	.LBB973:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11372              		.loc 1 97 18 view .LVU3521
 11373 1242 FFF7FEFF 		bl	shift_down
 11374              	.LVL966:
 11375              	.LBE973:
 11376              	.LBE972:
 11377              	.LBE971:
 11378              	.LBE970:
 11379              	.LBE969:
1774:src/keys.c    ****         int op = STATE_UNFINISHED;
 11380              		.loc 1 1774 15 view .LVU3522
 11381 1246 CA46     		mov	r10, r9
 11382              	.LVL967:
1775:src/keys.c    **** 	const enum shifts shift = reset_shift();
 11383              		.loc 1 1775 9 is_stmt 1 view .LVU3523
1776:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
 11384              		.loc 1 1776 2 view .LVU3524
 11385              	.LBB982:
 11386              	.LBI969:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 11387              		.loc 1 114 13 view .LVU3525
 11388              	.LBE982:
ARM GAS  /tmp/cc6xzGMw.s 			page 323


 11389              	.LBE1020:
 11390              	.LBE1318:
 11391              	.LBE1408:
 11392              	.LBE1485:
 115:src/keys.c    **** }
 11393              		.loc 1 115 2 view .LVU3526
 11394              	.LBB1486:
 11395              	.LBB1409:
 11396              	.LBB1319:
 11397              	.LBB1021:
 11398              	.LBB983:
 11399              	.LBB979:
 11400              	.LBI970:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 11401              		.loc 1 104 20 view .LVU3527
 11402              	.LBB976:
 105:src/keys.c    **** 	State2.shifts = shift;
 11403              		.loc 1 105 2 view .LVU3528
 11404              	.LBB975:
 11405              	.LBI972:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 11406              		.loc 1 96 13 view .LVU3529
 11407              	.LBB974:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11408              		.loc 1 97 2 view .LVU3530
  98:src/keys.c    **** }
 11409              		.loc 1 98 2 view .LVU3531
  98:src/keys.c    **** }
 11410              		.loc 1 98 52 is_stmt 0 view .LVU3532
 11411 1248 08B9     		cbnz	r0, .L1005
 11412 124a 98F81000 		ldrb	r0, [r8, #16]	@ zero_extendqisi2
 11413              	.LVL968:
 11414              	.L1005:
  98:src/keys.c    **** }
 11415              		.loc 1 98 52 view .LVU3533
 11416              	.LBE974:
 11417              	.LBE975:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11418              		.loc 1 106 2 is_stmt 1 view .LVU3534
 11419              	.LBE976:
 11420              	.LBE979:
 11421              	.LBE983:
 11422              	.LBB984:
 11423              	.LBB985:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11424              		.loc 1 485 6 is_stmt 0 view .LVU3535
 11425 124e 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
 11426              	.LBE985:
 11427              	.LBE984:
 11428              	.LBB1001:
 11429              	.LBB980:
 11430              	.LBB977:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11431              		.loc 1 106 16 view .LVU3536
 11432 1252 4FF0000C 		mov	ip, #0
 11433              	.LBE977:
 11434              	.LBE980:
ARM GAS  /tmp/cc6xzGMw.s 			page 324


 11435              	.LBE1001:
 11436              	.LBB1002:
 11437              	.LBB996:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11438              		.loc 1 485 5 view .LVU3537
 11439 1256 CA06     		lsls	r2, r1, #27
 11440              	.LBE996:
 11441              	.LBE1002:
 11442              	.LBB1003:
 11443              	.LBB981:
 11444              	.LBB978:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11445              		.loc 1 106 16 view .LVU3538
 11446 1258 88F810C0 		strb	ip, [r8, #16]
 108:src/keys.c    **** }
 11447              		.loc 1 108 2 is_stmt 1 view .LVU3539
 11448              	.LVL969:
 108:src/keys.c    **** }
 11449              		.loc 1 108 2 is_stmt 0 view .LVU3540
 11450              	.LBE978:
 11451              	.LBE981:
 11452              	.LBE1003:
1777:src/keys.c    **** 	State2.alpha_pos = 0;
 11453              		.loc 1 1777 2 is_stmt 1 view .LVU3541
1777:src/keys.c    **** 	State2.alpha_pos = 0;
 11454              		.loc 1 1777 11 is_stmt 0 view .LVU3542
 11455 125c 0346     		mov	r3, r0
 11456              	.LVL970:
 11457              	.LBB1004:
 11458              	.LBI984:
 435:src/keys.c    **** {
 11459              		.loc 1 435 12 is_stmt 1 view .LVU3543
 11460              	.LBB997:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 11461              		.loc 1 437 2 view .LVU3544
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11462              		.loc 1 485 2 view .LVU3545
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11463              		.loc 1 485 5 is_stmt 0 view .LVU3546
 11464 125e 4AD5     		bpl	.L1006
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 11465              		.loc 1 486 3 is_stmt 1 view .LVU3547
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 11466              		.loc 1 486 6 is_stmt 0 view .LVU3548
 11467 1260 0028     		cmp	r0, #0
 11468 1262 47D0     		beq	.L1158
 488:src/keys.c    **** 			shift = SHIFT_LC_G;
 11469              		.loc 1 488 8 is_stmt 1 view .LVU3549
 11470              	.LBB986:
 11471              	.LBB987:
 143:src/keys.c    **** }
 11472              		.loc 1 143 23 is_stmt 0 view .LVU3550
 11473 1264 1E4A     		ldr	r2, .L1414
 11474              	.LBE987:
 11475              	.LBE986:
 491:src/keys.c    **** }
 11476              		.loc 1 491 49 view .LVU3551
ARM GAS  /tmp/cc6xzGMw.s 			page 325


 11477 1266 224B     		ldr	r3, .L1414+16
 11478              	.LBB992:
 11479              	.LBB988:
 143:src/keys.c    **** }
 11480              		.loc 1 143 23 view .LVU3552
 11481 1268 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 11482              	.LBE988:
 11483              	.LBE992:
 11484              	.LBE997:
 11485              	.LBE1004:
1778:src/keys.c    **** 
 11486              		.loc 1 1778 19 view .LVU3553
 11487 126a 88F80DC0 		strb	ip, [r8, #13]
 11488              	.LBB1005:
 11489              	.LBB998:
 489:src/keys.c    **** 	}
 11490              		.loc 1 489 10 view .LVU3554
 11491 126e 0228     		cmp	r0, #2
 491:src/keys.c    **** }
 11492              		.loc 1 491 49 view .LVU3555
 11493 1270 4FF0060C 		mov	ip, #6
 11494 1274 0CFB0232 		mla	r2, ip, r2, r3
 489:src/keys.c    **** 	}
 11495              		.loc 1 489 10 view .LVU3556
 11496 1278 14BF     		ite	ne
 11497 127a 0346     		movne	r3, r0
 11498 127c 0523     		moveq	r3, #5
 11499              	.LVL971:
 491:src/keys.c    **** }
 11500              		.loc 1 491 2 is_stmt 1 view .LVU3557
 11501              	.LBB993:
 11502              	.LBI986:
 131:src/keys.c    **** {
 11503              		.loc 1 131 12 view .LVU3558
 11504              	.LBB989:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 11505              		.loc 1 133 2 view .LVU3559
 143:src/keys.c    **** }
 11506              		.loc 1 143 2 view .LVU3560
 143:src/keys.c    **** }
 11507              		.loc 1 143 2 is_stmt 0 view .LVU3561
 11508 127e 063C     		subs	r4, r4, #6
 11509              	.LVL972:
 143:src/keys.c    **** }
 11510              		.loc 1 143 2 view .LVU3562
 11511              	.LBE989:
 11512              	.LBE993:
 491:src/keys.c    **** }
 11513              		.loc 1 491 49 view .LVU3563
 11514 1280 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 11515              	.LVL973:
 491:src/keys.c    **** }
 11516              		.loc 1 491 49 view .LVU3564
 11517              	.LBE998:
 11518              	.LBE1005:
1778:src/keys.c    **** 
 11519              		.loc 1 1778 2 is_stmt 1 view .LVU3565
ARM GAS  /tmp/cc6xzGMw.s 			page 326


1780:src/keys.c    **** 	case K10:	// STO
 11520              		.loc 1 1780 2 view .LVU3566
 11521 1282 212C     		cmp	r4, #33
 11522 1284 23D8     		bhi	.L1009
 11523 1286 DFE814F0 		tbh	[pc, r4, lsl #1]
 11524              	.L1117:
 11525 128a 3005     		.2byte	(.L1018-.L1117)/2
 11526 128c F404     		.2byte	(.L1017-.L1117)/2
 11527 128e 2200     		.2byte	(.L1009-.L1117)/2
 11528 1290 2200     		.2byte	(.L1009-.L1117)/2
 11529 1292 2200     		.2byte	(.L1009-.L1117)/2
 11530 1294 2200     		.2byte	(.L1009-.L1117)/2
 11531 1296 0705     		.2byte	(.L1016-.L1117)/2
 11532 1298 2200     		.2byte	(.L1009-.L1117)/2
 11533 129a 2200     		.2byte	(.L1009-.L1117)/2
 11534 129c 2200     		.2byte	(.L1009-.L1117)/2
 11535 129e E804     		.2byte	(.L1025-.L1117)/2
 11536 12a0 2200     		.2byte	(.L1009-.L1117)/2
 11537 12a2 D704     		.2byte	(.L1014-.L1117)/2
 11538 12a4 2200     		.2byte	(.L1009-.L1117)/2
 11539 12a6 2200     		.2byte	(.L1009-.L1117)/2
 11540 12a8 2200     		.2byte	(.L1009-.L1117)/2
 11541 12aa 2200     		.2byte	(.L1009-.L1117)/2
 11542 12ac 2200     		.2byte	(.L1009-.L1117)/2
 11543 12ae C504     		.2byte	(.L1013-.L1117)/2
 11544 12b0 2200     		.2byte	(.L1009-.L1117)/2
 11545 12b2 2200     		.2byte	(.L1009-.L1117)/2
 11546 12b4 2200     		.2byte	(.L1009-.L1117)/2
 11547 12b6 2200     		.2byte	(.L1009-.L1117)/2
 11548 12b8 2200     		.2byte	(.L1009-.L1117)/2
 11549 12ba 2200     		.2byte	(.L1009-.L1117)/2
 11550 12bc 2200     		.2byte	(.L1009-.L1117)/2
 11551 12be 2200     		.2byte	(.L1009-.L1117)/2
 11552 12c0 2200     		.2byte	(.L1009-.L1117)/2
 11553 12c2 2200     		.2byte	(.L1009-.L1117)/2
 11554 12c4 2200     		.2byte	(.L1009-.L1117)/2
 11555 12c6 AD04     		.2byte	(.L1012-.L1117)/2
 11556 12c8 2200     		.2byte	(.L1009-.L1117)/2
 11557 12ca 2200     		.2byte	(.L1009-.L1117)/2
 11558 12cc A104     		.2byte	(.L1010-.L1117)/2
 11559              	.LVL974:
 11560              		.p2align 1
 11561              	.L1009:
1887:src/keys.c    **** 		return STATE_UNFINISHED;
 11562              		.loc 1 1887 2 view .LVU3567
1887:src/keys.c    **** 		return STATE_UNFINISHED;
 11563              		.loc 1 1887 5 is_stmt 0 view .LVU3568
 11564 12ce 002A     		cmp	r2, #0
 11565 12d0 3FF4BEAB 		beq	.L1311
1889:src/keys.c    **** }
 11566              		.loc 1 1889 2 is_stmt 1 view .LVU3569
1889:src/keys.c    **** }
 11567              		.loc 1 1889 9 is_stmt 0 view .LVU3570
 11568 12d4 42F48844 		orr	r4, r2, #17408
 11569 12d8 2046     		mov	r0, r4
 11570              	.LVL975:
1889:src/keys.c    **** }
ARM GAS  /tmp/cc6xzGMw.s 			page 327


 11571              		.loc 1 1889 9 view .LVU3571
 11572 12da FFF7A3B8 		b	.L862
 11573              	.L1415:
 11574 12de 00BF     		.align	2
 11575              	.L1414:
 11576 12e0 00000000 		.word	.LANCHOR6
 11577 12e4 00000000 		.word	.LANCHOR5
 11578 12e8 00000000 		.word	.LANCHOR17
 11579 12ec 00000000 		.word	main_ram
 11580 12f0 00000000 		.word	.LANCHOR15
 11581              	.LVL976:
 11582              	.L1158:
 11583              	.LBB1006:
 11584              	.LBB999:
 487:src/keys.c    **** 		else if (shift == SHIFT_G)
 11585              		.loc 1 487 10 view .LVU3572
 11586 12f4 0423     		movs	r3, #4
 11587              	.L1006:
 11588              	.LVL977:
 491:src/keys.c    **** }
 11589              		.loc 1 491 2 is_stmt 1 view .LVU3573
 11590              	.LBB994:
 131:src/keys.c    **** {
 11591              		.loc 1 131 12 view .LVU3574
 11592              	.LBB990:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 11593              		.loc 1 133 2 view .LVU3575
 143:src/keys.c    **** }
 11594              		.loc 1 143 2 view .LVU3576
 143:src/keys.c    **** }
 11595              		.loc 1 143 23 is_stmt 0 view .LVU3577
 11596 12f6 CF4A     		ldr	r2, .L1416
 11597              	.LBE990:
 11598              	.LBE994:
 491:src/keys.c    **** }
 11599              		.loc 1 491 49 view .LVU3578
 11600 12f8 DFF840C3 		ldr	ip, .L1416+8
 11601              	.LBB995:
 11602              	.LBB991:
 143:src/keys.c    **** }
 11603              		.loc 1 143 23 view .LVU3579
 11604 12fc 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 11605              	.LBE991:
 11606              	.LBE995:
 491:src/keys.c    **** }
 11607              		.loc 1 491 49 view .LVU3580
 11608 12fe 4FF0060E 		mov	lr, #6
 11609 1302 0EFB02C2 		mla	r2, lr, r2, ip
 11610 1306 063C     		subs	r4, r4, #6
 11611              	.LVL978:
 491:src/keys.c    **** }
 11612              		.loc 1 491 49 view .LVU3581
 11613              	.LBE999:
 11614              	.LBE1006:
1778:src/keys.c    **** 
 11615              		.loc 1 1778 19 view .LVU3582
 11616 1308 4FF0000C 		mov	ip, #0
ARM GAS  /tmp/cc6xzGMw.s 			page 328


 11617              	.LBB1007:
 11618              	.LBB1000:
 491:src/keys.c    **** }
 11619              		.loc 1 491 49 view .LVU3583
 11620 130c D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 11621              	.LVL979:
 491:src/keys.c    **** }
 11622              		.loc 1 491 49 view .LVU3584
 11623              	.LBE1000:
 11624              	.LBE1007:
1778:src/keys.c    **** 
 11625              		.loc 1 1778 2 is_stmt 1 view .LVU3585
1778:src/keys.c    **** 
 11626              		.loc 1 1778 19 is_stmt 0 view .LVU3586
 11627 130e 88F80DC0 		strb	ip, [r8, #13]
1780:src/keys.c    **** 	case K10:	// STO
 11628              		.loc 1 1780 2 is_stmt 1 view .LVU3587
 11629 1312 212C     		cmp	r4, #33
 11630 1314 DBD8     		bhi	.L1009
 11631 1316 01A3     		adr	r3, .L1011
 11632 1318 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 11633              		.p2align 2
 11634              	.L1011:
 11635 131c EB1C0000 		.word	.L1018+1
 11636 1320 731C0000 		.word	.L1017+1
 11637 1324 CF120000 		.word	.L1009+1
 11638 1328 CF120000 		.word	.L1009+1
 11639 132c CF120000 		.word	.L1009+1
 11640 1330 CF120000 		.word	.L1009+1
 11641 1334 991C0000 		.word	.L1016+1
 11642 1338 CF120000 		.word	.L1009+1
 11643 133c CF120000 		.word	.L1009+1
 11644 1340 CF120000 		.word	.L1009+1
 11645 1344 9B040000 		.word	.L1015+1
 11646 1348 CF120000 		.word	.L1009+1
 11647 134c 391C0000 		.word	.L1014+1
 11648 1350 CF120000 		.word	.L1009+1
 11649 1354 CF120000 		.word	.L1009+1
 11650 1358 CF120000 		.word	.L1009+1
 11651 135c CF120000 		.word	.L1009+1
 11652 1360 CF120000 		.word	.L1009+1
 11653 1364 151C0000 		.word	.L1013+1
 11654 1368 CF120000 		.word	.L1009+1
 11655 136c CF120000 		.word	.L1009+1
 11656 1370 CF120000 		.word	.L1009+1
 11657 1374 CF120000 		.word	.L1009+1
 11658 1378 CF120000 		.word	.L1009+1
 11659 137c CF120000 		.word	.L1009+1
 11660 1380 CF120000 		.word	.L1009+1
 11661 1384 CF120000 		.word	.L1009+1
 11662 1388 CF120000 		.word	.L1009+1
 11663 138c CF120000 		.word	.L1009+1
 11664 1390 CF120000 		.word	.L1009+1
 11665 1394 E51B0000 		.word	.L1012+1
 11666 1398 CF120000 		.word	.L1009+1
 11667 139c CF120000 		.word	.L1009+1
 11668 13a0 CD1B0000 		.word	.L1010+1
ARM GAS  /tmp/cc6xzGMw.s 			page 329


 11669              	.LVL980:
 11670              		.p2align 1
 11671              	.L1366:
1780:src/keys.c    **** 	case K10:	// STO
 11672              		.loc 1 1780 2 is_stmt 0 view .LVU3588
 11673              	.LBE1021:
 11674              	.LBE1319:
 11675              	.LBB1320:
 11676              	.LBB1085:
1735:src/keys.c    **** 			goto fin2;
 11677              		.loc 1 1735 3 is_stmt 1 view .LVU3589
1735:src/keys.c    **** 			goto fin2;
 11678              		.loc 1 1735 13 is_stmt 0 view .LVU3590
 11679 13a4 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 11680              	.LVL981:
1735:src/keys.c    **** 			goto fin2;
 11681              		.loc 1 1735 6 view .LVU3591
 11682 13a8 002B     		cmp	r3, #0
 11683 13aa 3FF468AA 		beq	.L851
1738:src/keys.c    **** 			State2.digval /= 10;
 11684              		.loc 1 1738 4 is_stmt 1 view .LVU3592
1738:src/keys.c    **** 			State2.digval /= 10;
 11685              		.loc 1 1738 19 is_stmt 0 view .LVU3593
 11686 13ae 013B     		subs	r3, r3, #1
1739:src/keys.c    **** 		}
 11687              		.loc 1 1739 18 view .LVU3594
 11688 13b0 B8F80820 		ldrh	r2, [r8, #8]
 11689              	.LVL982:
1738:src/keys.c    **** 			State2.digval /= 10;
 11690              		.loc 1 1738 19 view .LVU3595
 11691 13b4 88F80B30 		strb	r3, [r8, #11]
1739:src/keys.c    **** 		}
 11692              		.loc 1 1739 4 is_stmt 1 view .LVU3596
1739:src/keys.c    **** 		}
 11693              		.loc 1 1739 18 is_stmt 0 view .LVU3597
 11694 13b8 0A21     		movs	r1, #10
 11695 13ba 3368     		ldr	r3, [r6]
 11696 13bc B2FBF1F2 		udiv	r2, r2, r1
 11697              	.LBE1085:
 11698              	.LBE1320:
3281:src/keys.c    **** 
 11699              		.loc 1 3281 10 view .LVU3598
 11700 13c0 3324     		movs	r4, #51
 11701              	.LVL983:
 11702              	.LBB1321:
 11703              	.LBB1086:
1739:src/keys.c    **** 		}
 11704              		.loc 1 1739 18 view .LVU3599
 11705 13c2 A8F80820 		strh	r2, [r8, #8]	@ movhi
1760:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11706              		.loc 1 1760 2 is_stmt 1 view .LVU3600
 11707 13c6 FEF776BE 		b	.L801
 11708              	.LVL984:
 11709              	.L1348:
1760:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11710              		.loc 1 1760 2 is_stmt 0 view .LVU3601
 11711              	.LBE1086:
ARM GAS  /tmp/cc6xzGMw.s 			page 330


 11712              	.LBE1321:
3367:src/keys.c    **** 		// print_debug (3, c);
 11713              		.loc 1 3367 4 is_stmt 1 view .LVU3602
3367:src/keys.c    **** 		// print_debug (3, c);
 11714              		.loc 1 3367 11 is_stmt 0 view .LVU3603
 11715 13ca FFF7FEFF 		bl	process_h_shifted
 11716              	.LVL985:
 11717 13ce 0446     		mov	r4, r0
 11718 13d0 FFF706B8 		b	.L835
 11719              	.LVL986:
 11720              	.L1356:
3249:src/keys.c    **** 	CLEAR_REAL;
 11721              		.loc 1 3249 2 is_stmt 1 view .LVU3604
 11722              	.LBB1322:
 11723              	.LBI1322:
1235:src/keys.c    **** 	// called if number entry terminated by EXIT key
 11724              		.loc 1 1235 13 view .LVU3605
 11725              	.LBB1323:
1239:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
 11726              		.loc 1 1239 2 view .LVU3606
1239:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
 11727              		.loc 1 1239 5 is_stmt 0 view .LVU3607
 11728 13d4 13F0060F 		tst	r3, #6
 11729 13d8 2FD0     		beq	.L816
1240:src/keys.c    **** 		drop ( OP_DROPXY );
 11730              		.loc 1 1240 2 is_stmt 1 view .LVU3608
1240:src/keys.c    **** 		drop ( OP_DROPXY );
 11731              		.loc 1 1240 5 is_stmt 0 view .LVU3609
 11732 13da D906     		lsls	r1, r3, #27
 11733 13dc 40F1A581 		bpl	.L817
1241:src/keys.c    **** 		copyreg (get_reg_n(regC_idx), get_reg_n(regJ_idx));
 11734              		.loc 1 1241 3 is_stmt 1 view .LVU3610
 11735 13e0 0F20     		movs	r0, #15
 11736 13e2 FFF7FEFF 		bl	drop
 11737              	.LVL987:
1242:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
 11738              		.loc 1 1242 3 view .LVU3611
 11739 13e6 6A20     		movs	r0, #106
 11740 13e8 FFF7FEFF 		bl	get_reg_n
 11741              	.LVL988:
 11742 13ec 0446     		mov	r4, r0
 11743              	.LVL989:
1242:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
 11744              		.loc 1 1242 33 is_stmt 0 view .LVU3612
 11745 13ee 6E20     		movs	r0, #110
 11746 13f0 FFF7FEFF 		bl	get_reg_n
 11747              	.LVL990:
 11748 13f4 0146     		mov	r1, r0
1242:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
 11749              		.loc 1 1242 3 view .LVU3613
 11750 13f6 2046     		mov	r0, r4
 11751 13f8 FFF7FEFF 		bl	copyreg
 11752              	.LVL991:
1243:src/keys.c    **** 	}
 11753              		.loc 1 1243 3 is_stmt 1 view .LVU3614
 11754 13fc 6B20     		movs	r0, #107
 11755              	.L1301:
ARM GAS  /tmp/cc6xzGMw.s 			page 331


1247:src/keys.c    **** 	}
 11756              		.loc 1 1247 3 is_stmt 0 view .LVU3615
 11757 13fe FFF7FEFF 		bl	get_reg_n
 11758              	.LVL992:
 11759 1402 0446     		mov	r4, r0
1247:src/keys.c    **** 	}
 11760              		.loc 1 1247 33 view .LVU3616
 11761 1404 6F20     		movs	r0, #111
 11762 1406 FFF7FEFF 		bl	get_reg_n
 11763              	.LVL993:
 11764 140a 0146     		mov	r1, r0
1247:src/keys.c    **** 	}
 11765              		.loc 1 1247 3 view .LVU3617
 11766 140c 2046     		mov	r0, r4
 11767 140e FFF7FEFF 		bl	copyreg
 11768              	.LVL994:
1249:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11769              		.loc 1 1249 2 is_stmt 1 view .LVU3618
1249:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11770              		.loc 1 1249 22 is_stmt 0 view .LVU3619
 11771 1412 DAF80020 		ldr	r2, [r10]
1249:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11772              		.loc 1 1249 20 view .LVU3620
 11773 1416 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
1249:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11774              		.loc 1 1249 22 view .LVU3621
 11775 141a 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
 11776 141e C3F30013 		ubfx	r3, r3, #4, #1
1249:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11777              		.loc 1 1249 20 view .LVU3622
 11778 1422 63F38611 		bfi	r1, r3, #6, #1
 11779 1426 88F81710 		strb	r1, [r8, #23]
1250:src/keys.c    **** 	CLEAR_POLAR_READY;
 11780              		.loc 1 1250 2 is_stmt 1 view .LVU3623
1251:src/keys.c    **** }
 11781              		.loc 1 1251 2 view .LVU3624
1250:src/keys.c    **** 	CLEAR_POLAR_READY;
 11782              		.loc 1 1250 2 is_stmt 0 view .LVU3625
 11783 142a B2F8AC37 		ldrh	r3, [r2, #1964]
 11784 142e 23F48873 		bic	r3, r3, #272
 11785 1432 43F48073 		orr	r3, r3, #256
 11786 1436 A2F8AC37 		strh	r3, [r2, #1964]	@ movhi
 11787              	.L816:
 11788              	.LBE1323:
 11789              	.LBE1322:
3250:src/keys.c    **** 	CLEAR_IMAG;
 11790              		.loc 1 3250 2 is_stmt 1 view .LVU3626
 11791 143a DAF80020 		ldr	r2, [r10]
3251:src/keys.c    ****       }
 11792              		.loc 1 3251 2 view .LVU3627
3250:src/keys.c    **** 	CLEAR_IMAG;
 11793              		.loc 1 3250 2 is_stmt 0 view .LVU3628
 11794 143e 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
 11795 1442 23F00603 		bic	r3, r3, #6
 11796 1446 82F8AC37 		strb	r3, [r2, #1964]
 11797 144a FFF795B9 		b	.L815
 11798              	.LVL995:
ARM GAS  /tmp/cc6xzGMw.s 			page 332


 11799              	.L1043:
 11800              	.LBB1325:
 11801              	.LBB937:
1290:src/keys.c    **** 		return process_fg_shifted (c);
 11802              		.loc 1 1290 2 is_stmt 1 view .LVU3629
1290:src/keys.c    **** 		return process_fg_shifted (c);
 11803              		.loc 1 1290 5 is_stmt 0 view .LVU3630
 11804 144e 631F     		subs	r3, r4, #5
 11805 1450 032B     		cmp	r3, #3
 11806 1452 40F2D280 		bls	.L1305
1294:src/keys.c    **** 		if (shift == SHIFT_F) { // special pi processing
 11807              		.loc 1 1294 2 is_stmt 1 view .LVU3631
1294:src/keys.c    **** 		if (shift == SHIFT_F) { // special pi processing
 11808              		.loc 1 1294 5 is_stmt 0 view .LVU3632
 11809 1456 0F2C     		cmp	r4, #15
 11810 1458 40F0FD81 		bne	.L1299
 11811              	.L1122:
 11812              	.LVL996:
1321:src/keys.c    **** 		switch (c) {
 11813              		.loc 1 1321 3 is_stmt 1 view .LVU3633
 11814 145c 0020     		movs	r0, #0
 11815 145e FFF7FEFF 		bl	finish_cpx_entry
 11816              	.LVL997:
1322:src/keys.c    **** 		case (K60):
 11817              		.loc 1 1322 3 view .LVU3634
 11818              	.L1306:
1322:src/keys.c    **** 		case (K60):
 11819              		.loc 1 1322 3 is_stmt 0 view .LVU3635
 11820              	.LBE937:
 11821              	.LBE1325:
3362:src/keys.c    **** 	} else {
 11822              		.loc 1 3362 3 is_stmt 1 view .LVU3636
3362:src/keys.c    **** 	} else {
 11823              		.loc 1 3362 10 is_stmt 0 view .LVU3637
 11824 1462 2046     		mov	r0, r4
 11825              	.L1307:
 11826 1464 FFF7FEFF 		bl	process_cmplx
 11827              	.LVL998:
 11828 1468 0446     		mov	r4, r0
 11829 146a FEF7B9BF 		b	.L835
 11830              	.LVL999:
 11831              	.L897:
 11832              	.LBB1326:
 11833              	.LBB1155:
1656:src/keys.c    **** 	      set_last_menu();
 11834              		.loc 1 1656 6 is_stmt 1 view .LVU3638
1656:src/keys.c    **** 	      set_last_menu();
 11835              		.loc 1 1656 10 is_stmt 0 view .LVU3639
 11836 146e FFF7FEFF 		bl	get_last_menu
 11837              	.LVL1000:
1656:src/keys.c    **** 	      set_last_menu();
 11838              		.loc 1 1656 9 view .LVU3640
 11839 1472 1128     		cmp	r0, #17
 11840 1474 00F05081 		beq	.L900
1657:src/keys.c    **** 	    }
 11841              		.loc 1 1657 8 is_stmt 1 view .LVU3641
 11842 1478 FFF7FEFF 		bl	set_last_menu
ARM GAS  /tmp/cc6xzGMw.s 			page 333


 11843              	.LVL1001:
 11844              	.L901:
1662:src/keys.c    **** 	    return OP_NIL | OP_C_OFF;
 11845              		.loc 1 1662 6 view .LVU3642
 11846 147c FFF7FEFF 		bl	display_current_menu
 11847              	.LVL1002:
1663:src/keys.c    **** 	  }
 11848              		.loc 1 1663 6 view .LVU3643
1663:src/keys.c    **** 	  }
 11849              		.loc 1 1663 6 is_stmt 0 view .LVU3644
 11850              	.LBE1155:
 11851              	.LBE1326:
 11852              	.LBE1409:
 11853              	.LBE1486:
3631:src/keys.c    **** 	NonProgrammable = 0;
 11854              		.loc 1 3631 7 is_stmt 1 view .LVU3645
3631:src/keys.c    **** 	NonProgrammable = 0;
 11855              		.loc 1 3631 11 is_stmt 0 view .LVU3646
 11856 1480 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3631:src/keys.c    **** 	NonProgrammable = 0;
 11857              		.loc 1 3631 10 view .LVU3647
 11858 1484 5C06     		lsls	r4, r3, #25
 11859 1486 00F14081 		bmi	.L902
 11860              	.LBB1487:
 11861              	.LBB1410:
 11862              	.LBB1327:
 11863              	.LBB1156:
1663:src/keys.c    **** 	  }
 11864              		.loc 1 1663 13 view .LVU3648
 11865 148a 4FF4E174 		mov	r4, #450
 11866 148e 3CE4     		b	.L899
 11867              	.LVL1003:
 11868              	.L1376:
1663:src/keys.c    **** 	  }
 11869              		.loc 1 1663 13 view .LVU3649
 11870              	.LBE1156:
 11871              	.LBE1327:
 11872              	.LBB1328:
 11873              	.LBB1202:
2813:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 11874              		.loc 1 2813 3 is_stmt 1 view .LVU3650
2813:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 11875              		.loc 1 2813 12 is_stmt 0 view .LVU3651
 11876 1490 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
 11877 1494 A2F1020C 		sub	ip, r2, #2
 11878 1498 DCF10002 		rsbs	r2, ip, #0
 11879 149c 2046     		mov	r0, r4
 11880 149e 42EB0C02 		adc	r2, r2, ip
 11881 14a2 FFF7FEFF 		bl	process_catalogue
 11882              	.LVL1004:
2814:src/keys.c    **** 			return opcode;
 11883              		.loc 1 2814 6 view .LVU3652
 11884 14a6 3328     		cmp	r0, #51
2813:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 11885              		.loc 1 2813 12 view .LVU3653
 11886 14a8 0446     		mov	r4, r0
 11887              	.LVL1005:
ARM GAS  /tmp/cc6xzGMw.s 			page 334


2814:src/keys.c    **** 			return opcode;
 11888              		.loc 1 2814 3 is_stmt 1 view .LVU3654
2814:src/keys.c    **** 			return opcode;
 11889              		.loc 1 2814 6 is_stmt 0 view .LVU3655
 11890 14aa 3EF403AE 		beq	.L1308
2816:src/keys.c    **** 		goto add_char;
 11891              		.loc 1 2816 3 is_stmt 1 view .LVU3656
2816:src/keys.c    **** 		goto add_char;
 11892              		.loc 1 2816 6 is_stmt 0 view .LVU3657
 11893 14ae C4B2     		uxtb	r4, r0
 11894              	.LVL1006:
2817:src/keys.c    **** 	}
 11895              		.loc 1 2817 3 is_stmt 1 view .LVU3658
 11896 14b0 FFF7BCBB 		b	.L936
 11897              	.LVL1007:
 11898              	.L1150:
2817:src/keys.c    **** 	}
 11899              		.loc 1 2817 3 is_stmt 0 view .LVU3659
 11900              	.LBE1202:
 11901              	.LBE1328:
 11902              	.LBB1329:
 11903              	.LBB1257:
2992:src/keys.c    **** 	const int opcode = getprog(pc);
 11904              		.loc 1 2992 27 view .LVU3660
 11905 14b4 4FF0030B 		mov	fp, #3
 11906              	.LVL1008:
2992:src/keys.c    **** 	const int opcode = getprog(pc);
 11907              		.loc 1 2992 27 view .LVU3661
 11908 14b8 7AE4     		b	.L951
 11909              	.LVL1009:
 11910              	.L1347:
2992:src/keys.c    **** 	const int opcode = getprog(pc);
 11911              		.loc 1 2992 27 view .LVU3662
 11912              	.LBE1257:
 11913              	.LBE1329:
3358:src/keys.c    **** 	}
 11914              		.loc 1 3358 3 is_stmt 1 view .LVU3663
 11915              	.LBB1330:
 11916              	.LBI850:
1276:src/keys.c    **** 
 11917              		.loc 1 1276 12 view .LVU3664
 11918              	.LBB938:
1278:src/keys.c    **** 
 11919              		.loc 1 1278 2 view .LVU3665
 11920              	.LBB852:
 11921              	.LBI852:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 11922              		.loc 1 96 13 view .LVU3666
 11923              	.LBB853:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11924              		.loc 1 97 2 view .LVU3667
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11925              		.loc 1 97 18 is_stmt 0 view .LVU3668
 11926 14ba FFF7FEFF 		bl	shift_down
 11927              	.LVL1010:
  98:src/keys.c    **** }
 11928              		.loc 1 98 2 is_stmt 1 view .LVU3669
ARM GAS  /tmp/cc6xzGMw.s 			page 335


  98:src/keys.c    **** }
 11929              		.loc 1 98 52 is_stmt 0 view .LVU3670
 11930 14be 8346     		mov	fp, r0
 11931              	.LVL1011:
  98:src/keys.c    **** }
 11932              		.loc 1 98 52 view .LVU3671
 11933 14c0 08B9     		cbnz	r0, .L1039
 11934 14c2 98F810B0 		ldrb	fp, [r8, #16]	@ zero_extendqisi2
 11935              	.L1039:
 11936              	.LVL1012:
  98:src/keys.c    **** }
 11937              		.loc 1 98 52 view .LVU3672
 11938              	.LBE853:
 11939              	.LBE852:
1282:src/keys.c    **** 		return process_h_shifted (c);
 11940              		.loc 1 1282 2 is_stmt 1 view .LVU3673
1282:src/keys.c    **** 		return process_h_shifted (c);
 11941              		.loc 1 1282 5 is_stmt 0 view .LVU3674
 11942 14c6 042C     		cmp	r4, #4
 11943 14c8 00F28C80 		bhi	.L1040
1282:src/keys.c    **** 		return process_h_shifted (c);
 11944              		.loc 1 1282 17 view .LVU3675
 11945 14cc BBF1030F 		cmp	fp, #3
 11946 14d0 00F04E84 		beq	.L1391
1287:src/keys.c    **** 		convert_regK ((enum trig_modes) (c-K10));
 11947              		.loc 1 1287 2 is_stmt 1 view .LVU3676
1287:src/keys.c    **** 		convert_regK ((enum trig_modes) (c-K10));
 11948              		.loc 1 1287 5 is_stmt 0 view .LVU3677
 11949 14d4 BBF1020F 		cmp	fp, #2
 11950 14d8 B9D0     		beq	.L1043
 11951              	.L1042:
1290:src/keys.c    **** 		return process_fg_shifted (c);
 11952              		.loc 1 1290 2 is_stmt 1 view .LVU3678
1290:src/keys.c    **** 		return process_fg_shifted (c);
 11953              		.loc 1 1290 5 is_stmt 0 view .LVU3679
 11954 14da 631F     		subs	r3, r4, #5
 11955 14dc 032B     		cmp	r3, #3
 11956 14de 00F29181 		bhi	.L1045
1290:src/keys.c    **** 		return process_fg_shifted (c);
 11957              		.loc 1 1290 53 view .LVU3680
 11958 14e2 0BF1FF33 		add	r3, fp, #-1
1290:src/keys.c    **** 		return process_fg_shifted (c);
 11959              		.loc 1 1290 32 view .LVU3681
 11960 14e6 DBB2     		uxtb	r3, r3
 11961 14e8 012B     		cmp	r3, #1
 11962 14ea 40F28680 		bls	.L1305
 11963              	.L1046:
1320:src/keys.c    **** 		finish_cpx_entry(0); // finish entry for all of them - no lift
 11964              		.loc 1 1320 2 is_stmt 1 view .LVU3682
1320:src/keys.c    **** 		finish_cpx_entry(0); // finish entry for all of them - no lift
 11965              		.loc 1 1320 5 is_stmt 0 view .LVU3683
 11966 14ee BBF1000F 		cmp	fp, #0
 11967 14f2 40F0B081 		bne	.L1299
1398:src/keys.c    **** 	case (K61):
 11968              		.loc 1 1398 2 is_stmt 1 view .LVU3684
 11969 14f6 231F     		subs	r3, r4, #4
 11970 14f8 292B     		cmp	r3, #41
ARM GAS  /tmp/cc6xzGMw.s 			page 336


 11971 14fa 00F2A381 		bhi	.L1077
 11972 14fe DFE813F0 		tbh	[pc, r3, lsl #1]
 11973              	.L1079:
 11974 1502 9E01     		.2byte	(.L1080-.L1079)/2
 11975 1504 A101     		.2byte	(.L1077-.L1079)/2
 11976 1506 A101     		.2byte	(.L1077-.L1079)/2
 11977 1508 A101     		.2byte	(.L1077-.L1079)/2
 11978 150a A101     		.2byte	(.L1077-.L1079)/2
 11979 150c A101     		.2byte	(.L1077-.L1079)/2
 11980 150e A101     		.2byte	(.L1077-.L1079)/2
 11981 1510 A101     		.2byte	(.L1077-.L1079)/2
 11982 1512 A101     		.2byte	(.L1077-.L1079)/2
 11983 1514 A101     		.2byte	(.L1077-.L1079)/2
 11984 1516 7601     		.2byte	(.L1082-.L1079)/2
 11985 1518 9001     		.2byte	(.L1081-.L1079)/2
 11986 151a 9E01     		.2byte	(.L1080-.L1079)/2
 11987 151c A101     		.2byte	(.L1077-.L1079)/2
 11988 151e A101     		.2byte	(.L1077-.L1079)/2
 11989 1520 9001     		.2byte	(.L1081-.L1079)/2
 11990 1522 9001     		.2byte	(.L1081-.L1079)/2
 11991 1524 9001     		.2byte	(.L1081-.L1079)/2
 11992 1526 A101     		.2byte	(.L1077-.L1079)/2
 11993 1528 A101     		.2byte	(.L1077-.L1079)/2
 11994 152a A101     		.2byte	(.L1077-.L1079)/2
 11995 152c 9001     		.2byte	(.L1081-.L1079)/2
 11996 152e 9001     		.2byte	(.L1081-.L1079)/2
 11997 1530 9001     		.2byte	(.L1081-.L1079)/2
 11998 1532 A101     		.2byte	(.L1077-.L1079)/2
 11999 1534 A101     		.2byte	(.L1077-.L1079)/2
 12000 1536 A101     		.2byte	(.L1077-.L1079)/2
 12001 1538 9001     		.2byte	(.L1081-.L1079)/2
 12002 153a 9001     		.2byte	(.L1081-.L1079)/2
 12003 153c 9001     		.2byte	(.L1081-.L1079)/2
 12004 153e A101     		.2byte	(.L1077-.L1079)/2
 12005 1540 A101     		.2byte	(.L1077-.L1079)/2
 12006 1542 A101     		.2byte	(.L1077-.L1079)/2
 12007 1544 9001     		.2byte	(.L1081-.L1079)/2
 12008 1546 9001     		.2byte	(.L1081-.L1079)/2
 12009 1548 A101     		.2byte	(.L1077-.L1079)/2
 12010 154a A101     		.2byte	(.L1077-.L1079)/2
 12011 154c A101     		.2byte	(.L1077-.L1079)/2
 12012 154e A101     		.2byte	(.L1077-.L1079)/2
 12013 1550 A101     		.2byte	(.L1077-.L1079)/2
 12014 1552 9E01     		.2byte	(.L1080-.L1079)/2
 12015 1554 E901     		.2byte	(.L1078-.L1079)/2
 12016              	.LVL1013:
 12017              		.p2align 1
 12018              	.L1388:
1398:src/keys.c    **** 	case (K61):
 12019              		.loc 1 1398 2 is_stmt 0 view .LVU3685
 12020              	.LBE938:
 12021              	.LBE1330:
 12022              	.LBB1331:
 12023              	.LBB1293:
3139:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 12024              		.loc 1 3139 50 view .LVU3686
 12025 1556 0D2C     		cmp	r4, #13
ARM GAS  /tmp/cc6xzGMw.s 			page 337


 12026 1558 7FF493AD 		bne	.L987
3140:src/keys.c    **** 		set_smode(SDISP_SHOW);
 12027              		.loc 1 3140 3 is_stmt 1 view .LVU3687
 12028 155c B9F1010F 		cmp	r9, #1
 12029 1560 14BF     		ite	ne
 12030 1562 2C20     		movne	r0, #44
 12031              	.LVL1014:
3140:src/keys.c    **** 		set_smode(SDISP_SHOW);
 12032              		.loc 1 3140 3 is_stmt 0 view .LVU3688
 12033 1564 2B20     		moveq	r0, #43
 12034 1566 FFF7FEFF 		bl	set_window
 12035              	.LVL1015:
3141:src/keys.c    **** 	}
 12036              		.loc 1 3141 3 is_stmt 1 view .LVU3689
 12037              	.LBB1289:
 12038              	.LBI1289:
 731:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 12039              		.loc 1 731 13 view .LVU3690
 12040              	.LBB1290:
 732:src/keys.c    **** }
 12041              		.loc 1 732 2 view .LVU3691
 732:src/keys.c    **** }
 12042              		.loc 1 732 15 is_stmt 0 view .LVU3692
 12043 156a 98F81120 		ldrb	r2, [r8, #17]	@ zero_extendqisi2
 12044 156e 3368     		ldr	r3, [r6]
 12045 1570 013A     		subs	r2, r2, #1
 12046 1572 18BF     		it	ne
 12047 1574 0122     		movne	r2, #1
 12048 1576 88F81120 		strb	r2, [r8, #17]
 12049              	.LVL1016:
 732:src/keys.c    **** }
 12050              		.loc 1 732 15 view .LVU3693
 12051              	.LBE1290:
 12052              	.LBE1289:
3148:src/keys.c    **** 	case K_DOWN:
 12053              		.loc 1 3148 2 is_stmt 1 view .LVU3694
3148:src/keys.c    **** 	case K_DOWN:
 12054              		.loc 1 3148 2 is_stmt 0 view .LVU3695
 12055              	.LBE1293:
 12056              	.LBE1331:
 12057              	.LBE1410:
 12058              	.LBE1487:
3595:src/keys.c    ****     case STATE_SST:
 12059              		.loc 1 3595 5 is_stmt 1 view .LVU3696
 12060              	.LBB1488:
 12061              	.LBB1411:
 12062              	.LBB1332:
 12063              	.LBB1294:
3199:src/keys.c    **** 	}
 12064              		.loc 1 3199 10 is_stmt 0 view .LVU3697
 12065 157a 3324     		movs	r4, #51
 12066 157c FEF79BBD 		b	.L801
 12067              	.LVL1017:
 12068              	.L1377:
3199:src/keys.c    **** 	}
 12069              		.loc 1 3199 10 view .LVU3698
 12070              	.LBE1294:
ARM GAS  /tmp/cc6xzGMw.s 			page 338


 12071              	.LBE1332:
 12072              	.LBB1333:
 12073              	.LBB1203:
2822:src/keys.c    **** 				break;
 12074              		.loc 1 2822 3 is_stmt 1 view .LVU3699
2822:src/keys.c    **** 				break;
 12075              		.loc 1 2822 6 is_stmt 0 view .LVU3700
 12076 1580 0029     		cmp	r1, #0
 12077 1582 7FF441AB 		bne	.L939
2824:src/keys.c    **** 		if (State2.numdigit == 0)
 12078              		.loc 1 2824 3 is_stmt 1 view .LVU3701
 12079              	.LBB1192:
 12080              	.LBI1192:
2799:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 12081              		.loc 1 2799 13 view .LVU3702
 12082              	.LBB1193:
2801:src/keys.c    **** 	if (! State2.alphas )
 12083              		.loc 1 2801 2 view .LVU3703
2802:src/keys.c    **** 		State2.alphashift = 0;
 12084              		.loc 1 2802 6 is_stmt 0 view .LVU3704
 12085 1586 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2801:src/keys.c    **** 	if (! State2.alphas )
 12086              		.loc 1 2801 15 view .LVU3705
 12087 158a 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2802:src/keys.c    **** 		State2.alphashift = 0;
 12088              		.loc 1 2802 5 view .LVU3706
 12089 158e 1C07     		lsls	r4, r3, #28
 12090              	.LVL1018:
2803:src/keys.c    **** }
 12091              		.loc 1 2803 21 view .LVU3707
 12092 1590 5CBF     		itt	pl
 12093 1592 61F30413 		bfipl	r3, r1, #4, #1
 12094 1596 88F81630 		strbpl	r3, [r8, #22]
 12095              	.LBE1193:
 12096              	.LBE1192:
2825:src/keys.c    **** 			return STATE_UNFINISHED;
 12097              		.loc 1 2825 13 view .LVU3708
 12098 159a 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 12099              	.LBB1195:
 12100              	.LBB1194:
2801:src/keys.c    **** 	if (! State2.alphas )
 12101              		.loc 1 2801 15 view .LVU3709
 12102 159e 61F3C302 		bfi	r2, r1, #3, #1
 12103 15a2 88F81520 		strb	r2, [r8, #21]
2802:src/keys.c    **** 		State2.alphashift = 0;
 12104              		.loc 1 2802 2 is_stmt 1 view .LVU3710
2803:src/keys.c    **** }
 12105              		.loc 1 2803 3 view .LVU3711
 12106              	.LBE1194:
 12107              	.LBE1195:
2825:src/keys.c    **** 			return STATE_UNFINISHED;
 12108              		.loc 1 2825 3 view .LVU3712
2825:src/keys.c    **** 			return STATE_UNFINISHED;
 12109              		.loc 1 2825 6 is_stmt 0 view .LVU3713
 12110 15a6 002B     		cmp	r3, #0
 12111 15a8 3FF49FA8 		beq	.L1313
2827:src/keys.c    **** 			State2.digval2 = 0;
ARM GAS  /tmp/cc6xzGMw.s 			page 339


 12112              		.loc 1 2827 8 is_stmt 1 view .LVU3714
2827:src/keys.c    **** 			State2.digval2 = 0;
 12113              		.loc 1 2827 11 is_stmt 0 view .LVU3715
 12114 15ac 012B     		cmp	r3, #1
2828:src/keys.c    **** 		goto fin;
 12115              		.loc 1 2828 19 view .LVU3716
 12116 15ae 4FF00004 		mov	r4, #0
2827:src/keys.c    **** 			State2.digval2 = 0;
 12117              		.loc 1 2827 11 view .LVU3717
 12118 15b2 7FF452AB 		bne	.L942
2828:src/keys.c    **** 		goto fin;
 12119              		.loc 1 2828 4 is_stmt 1 view .LVU3718
2828:src/keys.c    **** 		goto fin;
 12120              		.loc 1 2828 19 is_stmt 0 view .LVU3719
 12121 15b6 88F80A40 		strb	r4, [r8, #10]
 12122 15ba FFF74EBB 		b	.L942
 12123              	.LVL1019:
 12124              	.L1340:
2828:src/keys.c    **** 		goto fin;
 12125              		.loc 1 2828 19 view .LVU3720
 12126 15be 0093     		str	r3, [sp]
 12127              	.LBE1203:
 12128              	.LBE1333:
 12129              	.LBB1334:
 12130              	.LBB843:
 12131              	.LBB832:
 373:src/keys.c    **** #else
 12132              		.loc 1 373 45 view .LVU3721
 12133 15c0 FFF7FEFF 		bl	shift_down
 12134              	.LVL1020:
 373:src/keys.c    **** #else
 12135              		.loc 1 373 42 view .LVU3722
 12136 15c4 0328     		cmp	r0, #3
 12137 15c6 00F08F80 		beq	.L923
 373:src/keys.c    **** #else
 12138              		.loc 1 373 73 view .LVU3723
 12139 15ca 009B     		ldr	r3, [sp]
 12140 15cc 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 12141 15d0 9C46     		mov	ip, r3
 377:src/keys.c    ****   }
 12142              		.loc 1 377 9 view .LVU3724
 12143 15d2 0C21     		movs	r1, #12
 371:src/keys.c    **** #ifndef WINGUI
 12144              		.loc 1 371 8 view .LVU3725
 12145 15d4 184B     		ldr	r3, .L1416+4
 12146 15d6 FEF746BE 		b	.L922
 12147              	.LVL1021:
 12148              	.L1371:
 371:src/keys.c    **** #ifndef WINGUI
 12149              		.loc 1 371 8 view .LVU3726
 12150              	.LBE832:
 12151              	.LBE843:
 12152              	.LBE1334:
 12153              	.LBB1335:
 12154              	.LBB1124:
 12155              	.LBB1116:
2931:src/keys.c    **** 		else if (nn != NO_REG)
ARM GAS  /tmp/cc6xzGMw.s 			page 340


 12156              		.loc 1 2931 4 is_stmt 1 view .LVU3727
2933:src/keys.c    **** 	}
 12157              		.loc 1 2933 6 is_stmt 0 view .LVU3728
 12158 15da 9942     		cmp	r1, r3
 12159 15dc 08BF     		it	eq
 12160 15de 0A23     		moveq	r3, #10
 12161              	.LVL1022:
2933:src/keys.c    **** 	}
 12162              		.loc 1 2933 6 view .LVU3729
 12163 15e0 FFF7F0B9 		b	.L884
 12164              	.LVL1023:
 12165              	.L1040:
2933:src/keys.c    **** 	}
 12166              		.loc 1 2933 6 view .LVU3730
 12167              	.LBE1116:
 12168              	.LBE1124:
 12169              	.LBE1335:
 12170              	.LBB1336:
 12171              	.LBB939:
1287:src/keys.c    **** 		convert_regK ((enum trig_modes) (c-K10));
 12172              		.loc 1 1287 2 is_stmt 1 view .LVU3731
1287:src/keys.c    **** 		convert_regK ((enum trig_modes) (c-K10));
 12173              		.loc 1 1287 5 is_stmt 0 view .LVU3732
 12174 15e4 BBF1020F 		cmp	fp, #2
 12175 15e8 7FF477AF 		bne	.L1042
1287:src/keys.c    **** 		convert_regK ((enum trig_modes) (c-K10));
 12176              		.loc 1 1287 26 view .LVU3733
 12177 15ec A01F     		subs	r0, r4, #6
 12178 15ee C0B2     		uxtb	r0, r0
 12179 15f0 0228     		cmp	r0, #2
 12180 15f2 3FF62CAF 		bhi	.L1043
1288:src/keys.c    **** 	}
 12181              		.loc 1 1288 3 is_stmt 1 view .LVU3734
 12182 15f6 FFF7FEFF 		bl	convert_regK
 12183              	.LVL1024:
1290:src/keys.c    **** 		return process_fg_shifted (c);
 12184              		.loc 1 1290 2 view .LVU3735
 12185              	.L1305:
1290:src/keys.c    **** 		return process_fg_shifted (c);
 12186              		.loc 1 1290 2 is_stmt 0 view .LVU3736
 12187              	.LBE939:
 12188              	.LBE1336:
3365:src/keys.c    **** 		if (shift == SHIFT_H)
 12189              		.loc 1 3365 4 is_stmt 1 view .LVU3737
3365:src/keys.c    **** 		if (shift == SHIFT_H)
 12190              		.loc 1 3365 11 is_stmt 0 view .LVU3738
 12191 15fa 2046     		mov	r0, r4
 12192 15fc FFF7FEFF 		bl	process_fg_shifted
 12193              	.LVL1025:
 12194 1600 0446     		mov	r4, r0
 12195 1602 FEF7EDBE 		b	.L835
 12196              	.LVL1026:
 12197              	.L938:
 12198              	.LBB1337:
 12199              	.LBB1204:
2842:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 12200              		.loc 1 2842 3 is_stmt 1 view .LVU3739
ARM GAS  /tmp/cc6xzGMw.s 			page 341


2842:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 12201              		.loc 1 2842 6 is_stmt 0 view .LVU3740
 12202 1606 0129     		cmp	r1, #1
 12203 1608 00F0E380 		beq	.L1314
2845:src/keys.c    **** 		return STATE_UNFINISHED;
 12204              		.loc 1 2845 4 is_stmt 1 view .LVU3741
 12205              	.LBB1196:
 12206              	.LBI1196:
2799:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 12207              		.loc 1 2799 13 view .LVU3742
 12208              	.LBB1197:
2801:src/keys.c    **** 	if (! State2.alphas )
 12209              		.loc 1 2801 2 view .LVU3743
2801:src/keys.c    **** 	if (! State2.alphas )
 12210              		.loc 1 2801 15 is_stmt 0 view .LVU3744
 12211 160c 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2802:src/keys.c    **** 		State2.alphashift = 0;
 12212              		.loc 1 2802 6 view .LVU3745
 12213 1610 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2801:src/keys.c    **** 	if (! State2.alphas )
 12214              		.loc 1 2801 15 view .LVU3746
 12215 1614 60F3C302 		bfi	r2, r0, #3, #1
 12216 1618 88F81520 		strb	r2, [r8, #21]
2802:src/keys.c    **** 		State2.alphashift = 0;
 12217              		.loc 1 2802 2 is_stmt 1 view .LVU3747
2802:src/keys.c    **** 		State2.alphashift = 0;
 12218              		.loc 1 2802 5 is_stmt 0 view .LVU3748
 12219 161c 13F00802 		ands	r2, r3, #8
 12220 1620 7FF463A8 		bne	.L1313
 12221              	.LVL1027:
 12222              	.L947:
2803:src/keys.c    **** }
 12223              		.loc 1 2803 3 is_stmt 1 view .LVU3749
2803:src/keys.c    **** }
 12224              		.loc 1 2803 21 is_stmt 0 view .LVU3750
 12225 1624 62F30413 		bfi	r3, r2, #4, #1
 12226 1628 88F81630 		strb	r3, [r8, #22]
 12227 162c 3368     		ldr	r3, [r6]
 12228              	.LBE1197:
 12229              	.LBE1196:
2846:src/keys.c    **** 
 12230              		.loc 1 2846 10 view .LVU3751
 12231 162e 3324     		movs	r4, #51
 12232              	.LVL1028:
2846:src/keys.c    **** 
 12233              		.loc 1 2846 10 view .LVU3752
 12234 1630 FEF741BD 		b	.L801
 12235              	.L1417:
 12236              		.align	2
 12237              	.L1416:
 12238 1634 00000000 		.word	.LANCHOR6
 12239 1638 00000000 		.word	.LANCHOR17
 12240 163c 00000000 		.word	.LANCHOR15
 12241              	.LVL1029:
 12242              	.L937:
2832:src/keys.c    **** 			if (State2.numdigit == 0)
 12243              		.loc 1 2832 3 is_stmt 1 view .LVU3753
ARM GAS  /tmp/cc6xzGMw.s 			page 342


2832:src/keys.c    **** 			if (State2.numdigit == 0)
 12244              		.loc 1 2832 6 is_stmt 0 view .LVU3754
 12245 1640 0329     		cmp	r1, #3
 12246 1642 3FF4E9AA 		beq	.L943
2833:src/keys.c    **** 				reset_multi();
 12247              		.loc 1 2833 4 is_stmt 1 view .LVU3755
2833:src/keys.c    **** 				reset_multi();
 12248              		.loc 1 2833 14 is_stmt 0 view .LVU3756
 12249 1646 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
2833:src/keys.c    **** 				reset_multi();
 12250              		.loc 1 2833 7 view .LVU3757
 12251 164a 002A     		cmp	r2, #0
 12252 164c 40F09781 		bne	.L944
2834:src/keys.c    **** 			else
 12253              		.loc 1 2834 5 is_stmt 1 view .LVU3758
 12254              	.LBB1198:
 12255              	.LBI1198:
2799:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 12256              		.loc 1 2799 13 view .LVU3759
 12257              	.LBB1199:
2801:src/keys.c    **** 	if (! State2.alphas )
 12258              		.loc 1 2801 2 view .LVU3760
2801:src/keys.c    **** 	if (! State2.alphas )
 12259              		.loc 1 2801 15 is_stmt 0 view .LVU3761
 12260 1650 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 12261              	.LVL1030:
2802:src/keys.c    **** 		State2.alphashift = 0;
 12262              		.loc 1 2802 6 view .LVU3762
 12263 1654 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2801:src/keys.c    **** 	if (! State2.alphas )
 12264              		.loc 1 2801 15 view .LVU3763
 12265 1658 62F3C301 		bfi	r1, r2, #3, #1
2802:src/keys.c    **** 		State2.alphashift = 0;
 12266              		.loc 1 2802 5 view .LVU3764
 12267 165c 13F00802 		ands	r2, r3, #8
2801:src/keys.c    **** 	if (! State2.alphas )
 12268              		.loc 1 2801 15 view .LVU3765
 12269 1660 88F81510 		strb	r1, [r8, #21]
2802:src/keys.c    **** 		State2.alphashift = 0;
 12270              		.loc 1 2802 2 is_stmt 1 view .LVU3766
2802:src/keys.c    **** 		State2.alphashift = 0;
 12271              		.loc 1 2802 5 is_stmt 0 view .LVU3767
 12272 1664 DED0     		beq	.L947
 12273 1666 FFF740B8 		b	.L1313
 12274              	.LVL1031:
 12275              	.L1385:
2802:src/keys.c    **** 		State2.alphashift = 0;
 12276              		.loc 1 2802 5 view .LVU3768
 12277              	.LBE1199:
 12278              	.LBE1198:
 12279              	.LBE1204:
 12280              	.LBE1337:
 12281              	.LBB1338:
 12282              	.LBB1295:
3123:src/keys.c    **** 	const int g_max = global_regs();
 12283              		.loc 1 3123 33 view .LVU3769
 12284 166a FFF7FEFF 		bl	local_regs
ARM GAS  /tmp/cc6xzGMw.s 			page 343


 12285              	.LVL1032:
 12286 166e 8246     		mov	r10, r0
 12287 1670 F7E4     		b	.L979
 12288              	.LVL1033:
 12289              	.L1387:
 12290              	.LBB1291:
3133:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12291              		.loc 1 3133 3 is_stmt 1 view .LVU3770
3133:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12292              		.loc 1 3133 19 is_stmt 0 view .LVU3771
 12293 1672 B8F80810 		ldrh	r1, [r8, #8]
3133:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12294              		.loc 1 3133 27 view .LVU3772
 12295 1676 0A23     		movs	r3, #10
3133:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12296              		.loc 1 3133 32 view .LVU3773
 12297 1678 03FB01B2 		mla	r2, r3, r1, fp
3133:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12298              		.loc 1 3133 37 view .LVU3774
 12299 167c 6424     		movs	r4, #100
 12300              	.LVL1034:
3133:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12301              		.loc 1 3133 37 view .LVU3775
 12302 167e B2FBF4F3 		udiv	r3, r2, r4
 12303 1682 04FB1323 		mls	r3, r4, r3, r2
 12304              	.LVL1035:
3134:src/keys.c    **** 			dv = n;
 12305              		.loc 1 3134 3 is_stmt 1 view .LVU3776
3134:src/keys.c    **** 			dv = n;
 12306              		.loc 1 3134 6 is_stmt 0 view .LVU3777
 12307 1686 5345     		cmp	r3, r10
 12308 1688 09DA     		bge	.L985
3134:src/keys.c    **** 			dv = n;
 12309              		.loc 1 3134 21 view .LVU3778
 12310 168a 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3134:src/keys.c    **** 			dv = n;
 12311              		.loc 1 3134 17 view .LVU3779
 12312 168e D207     		lsls	r2, r2, #31
 12313 1690 3FF54CAD 		bmi	.L1303
3134:src/keys.c    **** 			dv = n;
 12314              		.loc 1 3134 36 view .LVU3780
 12315 1694 8842     		cmp	r0, r1
 12316 1696 02DD     		ble	.L985
3134:src/keys.c    **** 			dv = n;
 12317              		.loc 1 3134 63 view .LVU3781
 12318 1698 9842     		cmp	r0, r3
 12319 169a 3FF747AD 		bgt	.L1303
 12320              	.L985:
3135:src/keys.c    **** 		State2.digval = dv;
 12321              		.loc 1 3135 4 is_stmt 1 view .LVU3782
3135:src/keys.c    **** 		State2.digval = dv;
 12322              		.loc 1 3135 7 is_stmt 0 view .LVU3783
 12323 169e 5B46     		mov	r3, fp
 12324              	.LVL1036:
3136:src/keys.c    **** 		goto reset_window;
 12325              		.loc 1 3136 3 is_stmt 1 view .LVU3784
 12326 16a0 44E5     		b	.L1303
ARM GAS  /tmp/cc6xzGMw.s 			page 344


 12327              	.LVL1037:
 12328              	.L1379:
3136:src/keys.c    **** 		goto reset_window;
 12329              		.loc 1 3136 3 is_stmt 0 view .LVU3785
 12330              	.LBE1291:
 12331              	.LBE1295:
 12332              	.LBE1338:
 12333              	.LBB1339:
 12334              	.LBB1205:
2858:src/keys.c    **** 		State2.numdigit = 1;
 12335              		.loc 1 2858 3 is_stmt 1 view .LVU3786
2859:src/keys.c    **** 		return STATE_UNFINISHED;
 12336              		.loc 1 2859 19 is_stmt 0 view .LVU3787
 12337 16a2 0122     		movs	r2, #1
2858:src/keys.c    **** 		State2.numdigit = 1;
 12338              		.loc 1 2858 17 view .LVU3788
 12339 16a4 A8F80840 		strh	r4, [r8, #8]	@ movhi
2859:src/keys.c    **** 		return STATE_UNFINISHED;
 12340              		.loc 1 2859 3 is_stmt 1 view .LVU3789
 12341 16a8 3368     		ldr	r3, [r6]
2859:src/keys.c    **** 		return STATE_UNFINISHED;
 12342              		.loc 1 2859 19 is_stmt 0 view .LVU3790
 12343 16aa 88F80B20 		strb	r2, [r8, #11]
2860:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12344              		.loc 1 2860 3 is_stmt 1 view .LVU3791
2860:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12345              		.loc 1 2860 10 is_stmt 0 view .LVU3792
 12346 16ae 3324     		movs	r4, #51
 12347              	.LVL1038:
2860:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12348              		.loc 1 2860 10 view .LVU3793
 12349 16b0 FEF701BD 		b	.L801
 12350              	.LVL1039:
 12351              	.L1367:
2860:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12352              		.loc 1 2860 10 view .LVU3794
 12353              	.LBE1205:
 12354              	.LBE1339:
 12355              	.LBB1340:
 12356              	.LBB1087:
1744:src/keys.c    **** 		if (rawpc == 1)
 12357              		.loc 1 1744 3 is_stmt 1 view .LVU3795
1744:src/keys.c    **** 		if (rawpc == 1)
 12358              		.loc 1 1744 11 is_stmt 0 view .LVU3796
 12359 16b4 DFF8A8A3 		ldr	r10, .L1418+8
 12360 16b8 DAF80030 		ldr	r3, [r10]
 12361              	.LVL1040:
1744:src/keys.c    **** 		if (rawpc == 1)
 12362              		.loc 1 1744 9 view .LVU3797
 12363 16bc B3F8E007 		ldrh	r0, [r3, #2016]
 12364              	.LVL1041:
1745:src/keys.c    **** 			rawpc = 0;
 12365              		.loc 1 1745 3 is_stmt 1 view .LVU3798
1746:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
 12366              		.loc 1 1746 10 is_stmt 0 view .LVU3799
 12367 16c0 0128     		cmp	r0, #1
 12368              	.LVL1042:
ARM GAS  /tmp/cc6xzGMw.s 			page 345


1747:src/keys.c    **** 		update_program_bounds(1);
 12369              		.loc 1 1747 3 is_stmt 1 view .LVU3800
 12370 16c2 08BF     		it	eq
 12371 16c4 0020     		moveq	r0, #0
 12372              	.LVL1043:
1747:src/keys.c    **** 		update_program_bounds(1);
 12373              		.loc 1 1747 3 is_stmt 0 view .LVU3801
 12374 16c6 0021     		movs	r1, #0
 12375 16c8 FFF7FEFF 		bl	do_dec
 12376              	.LVL1044:
1747:src/keys.c    **** 		update_program_bounds(1);
 12377              		.loc 1 1747 3 view .LVU3802
 12378 16cc FFF7FEFF 		bl	set_pc
 12379              	.LVL1045:
1748:src/keys.c    **** 		rawpc = ProgBegin;
 12380              		.loc 1 1748 3 is_stmt 1 view .LVU3803
 12381 16d0 0120     		movs	r0, #1
 12382 16d2 FFF7FEFF 		bl	update_program_bounds
 12383              	.LVL1046:
1749:src/keys.c    **** 		goto fin;
 12384              		.loc 1 1749 3 view .LVU3804
1749:src/keys.c    **** 		goto fin;
 12385              		.loc 1 1749 11 is_stmt 0 view .LVU3805
 12386 16d6 DAF80030 		ldr	r3, [r10]
1749:src/keys.c    **** 		goto fin;
 12387              		.loc 1 1749 9 view .LVU3806
 12388 16da B3F8EC07 		ldrh	r0, [r3, #2028]
 12389              	.LVL1047:
1750:src/keys.c    **** 	}
 12390              		.loc 1 1750 3 is_stmt 1 view .LVU3807
 12391 16de FFF7CCB8 		b	.L847
 12392              	.LVL1048:
 12393              	.L1389:
1750:src/keys.c    **** 	}
 12394              		.loc 1 1750 3 is_stmt 0 view .LVU3808
 12395              	.LBE1087:
 12396              	.LBE1340:
 12397              	.LBB1341:
 12398              	.LBB1296:
3144:src/keys.c    **** 		goto reset_window;
 12399              		.loc 1 3144 3 is_stmt 1 view .LVU3809
3144:src/keys.c    **** 		goto reset_window;
 12400              		.loc 1 3144 17 is_stmt 0 view .LVU3810
 12401 16e2 A8F808B0 		strh	fp, [r8, #8]	@ movhi
3145:src/keys.c    **** 	}
 12402              		.loc 1 3145 3 is_stmt 1 view .LVU3811
 12403 16e6 23E5     		b	.L983
 12404              	.LVL1049:
 12405              	.L923:
3145:src/keys.c    **** 	}
 12406              		.loc 1 3145 3 is_stmt 0 view .LVU3812
 12407 16e8 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 12408              	.LBE1296:
 12409              	.LBE1341:
 12410              	.LBB1342:
 12411              	.LBB844:
 12412              	.LBB833:
ARM GAS  /tmp/cc6xzGMw.s 			page 346


 371:src/keys.c    **** #ifndef WINGUI
 12413              		.loc 1 371 8 view .LVU3813
 12414 16ec DA4B     		ldr	r3, .L1418
 377:src/keys.c    ****   }
 12415              		.loc 1 377 9 view .LVU3814
 12416 16ee 0C21     		movs	r1, #12
 373:src/keys.c    **** #else
 12417              		.loc 1 373 73 view .LVU3815
 12418 16f0 4FF0020C 		mov	ip, #2
 12419 16f4 FEF7B7BD 		b	.L922
 12420              	.LVL1050:
 12421              	.L1382:
 373:src/keys.c    **** #else
 12422              		.loc 1 373 73 view .LVU3816
 12423 16f8 2046     		mov	r0, r4
 12424 16fa FEF79BBE 		b	.L1109
 12425              	.LVL1051:
 12426              	.L898:
 373:src/keys.c    **** #else
 12427              		.loc 1 373 73 view .LVU3817
 12428              	.LBE833:
 12429              	.LBE844:
 12430              	.LBE1342:
 12431              	.LBE1411:
 12432              	.LBE1488:
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12433              		.loc 1 3632 2 is_stmt 1 view .LVU3818
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12434              		.loc 1 3632 18 is_stmt 0 view .LVU3819
 12435 16fe D74B     		ldr	r3, .L1418+4
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12436              		.loc 1 3633 32 view .LVU3820
 12437 1700 40F2C110 		movw	r0, #449
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12438              		.loc 1 3632 18 view .LVU3821
 12439 1704 1C60     		str	r4, [r3]
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12440              		.loc 1 3633 2 is_stmt 1 view .LVU3822
 12441 1706 FEF76FBF 		b	.L1106
 12442              	.LVL1052:
 12443              	.L902:
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12444              		.loc 1 3632 2 view .LVU3823
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12445              		.loc 1 3632 18 is_stmt 0 view .LVU3824
 12446 170a D44B     		ldr	r3, .L1418+4
 12447 170c 0022     		movs	r2, #0
 12448 170e 1A60     		str	r2, [r3]
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12449              		.loc 1 3633 2 is_stmt 1 view .LVU3825
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12450              		.loc 1 3633 32 is_stmt 0 view .LVU3826
 12451 1710 4FF4E170 		mov	r0, #450
 12452 1714 FEF768BF 		b	.L1106
 12453              	.LVL1053:
 12454              	.L900:
 12455              	.LBB1489:
ARM GAS  /tmp/cc6xzGMw.s 			page 347


 12456              	.LBB1412:
 12457              	.LBB1343:
 12458              	.LBB1157:
1660:src/keys.c    **** 	    }
 12459              		.loc 1 1660 8 is_stmt 1 view .LVU3827
 12460 1718 FFF7FEFF 		bl	set_default_menu
 12461              	.LVL1054:
 12462 171c AEE6     		b	.L901
 12463              	.LVL1055:
 12464              	.L1374:
1660:src/keys.c    **** 	    }
 12465              		.loc 1 1660 8 is_stmt 0 view .LVU3828
 12466              	.LBE1157:
 12467              	.LBE1343:
 12468              	.LBB1344:
 12469              	.LBB845:
 287:src/keys.c    **** 					}
 12470              		.loc 1 287 7 is_stmt 1 view .LVU3829
 12471 171e 0120     		movs	r0, #1
 12472 1720 FFF7FEFF 		bl	finish_cpx_entry
 12473              	.LVL1056:
 287:src/keys.c    **** 					}
 12474              		.loc 1 287 7 is_stmt 0 view .LVU3830
 12475              	.LBE845:
 12476              	.LBE1344:
3321:src/keys.c    **** 		if (is_bad_cmdline())
 12477              		.loc 1 3321 2 is_stmt 1 view .LVU3831
 12478              	.LBB1345:
 12479              	.LBB846:
 289:src/keys.c    **** 				default:
 12480              		.loc 1 289 13 is_stmt 0 view .LVU3832
 12481 1724 1123     		movs	r3, #17
 12482 1726 FEF7D2BF 		b	.L910
 12483              	.LVL1057:
 12484              	.L817:
 289:src/keys.c    **** 				default:
 12485              		.loc 1 289 13 view .LVU3833
 12486              	.LBE846:
 12487              	.LBE1345:
 12488              	.LBB1346:
 12489              	.LBB1324:
1246:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
 12490              		.loc 1 1246 3 is_stmt 1 view .LVU3834
 12491 172a 6420     		movs	r0, #100
 12492 172c FFF7FEFF 		bl	get_reg_n
 12493              	.LVL1058:
 12494 1730 0446     		mov	r4, r0
 12495              	.LVL1059:
1246:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
 12496              		.loc 1 1246 33 is_stmt 0 view .LVU3835
 12497 1732 6E20     		movs	r0, #110
 12498 1734 FFF7FEFF 		bl	get_reg_n
 12499              	.LVL1060:
 12500 1738 0146     		mov	r1, r0
1246:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
 12501              		.loc 1 1246 3 view .LVU3836
 12502 173a 2046     		mov	r0, r4
ARM GAS  /tmp/cc6xzGMw.s 			page 348


 12503 173c FFF7FEFF 		bl	copyreg
 12504              	.LVL1061:
1247:src/keys.c    **** 	}
 12505              		.loc 1 1247 3 is_stmt 1 view .LVU3837
 12506 1740 6520     		movs	r0, #101
 12507 1742 5CE6     		b	.L1301
 12508              	.LVL1062:
 12509              	.L1143:
1247:src/keys.c    **** 	}
 12510              		.loc 1 1247 3 is_stmt 0 view .LVU3838
 12511              	.LBE1324:
 12512              	.LBE1346:
 12513              	.LBB1347:
 12514              	.LBB847:
 306:src/keys.c    **** 		}
 12515              		.loc 1 306 11 view .LVU3839
 12516 1744 1023     		movs	r3, #16
 12517 1746 FEF7C2BF 		b	.L910
 12518              	.L1355:
 298:src/keys.c    **** 				stack_begin (1);
 12519              		.loc 1 298 5 is_stmt 1 view .LVU3840
 12520 174a 41F00201 		orr	r1, r1, #2
 12521 174e 80F8AC17 		strb	r1, [r0, #1964]
 299:src/keys.c    **** 			}
 12522              		.loc 1 299 5 view .LVU3841
 12523 1752 5846     		mov	r0, fp
 12524 1754 FFF7FEFF 		bl	stack_begin
 12525              	.LVL1063:
 299:src/keys.c    **** 			}
 12526              		.loc 1 299 5 is_stmt 0 view .LVU3842
 12527              	.LBE847:
 12528              	.LBE1347:
3321:src/keys.c    **** 		if (is_bad_cmdline())
 12529              		.loc 1 3321 2 is_stmt 1 view .LVU3843
 12530              	.LBB1348:
 12531              	.LBB848:
 306:src/keys.c    **** 		}
 12532              		.loc 1 306 11 is_stmt 0 view .LVU3844
 12533 1758 1023     		movs	r3, #16
 12534 175a FEF7B8BF 		b	.L910
 12535              	.LVL1064:
 12536              	.L1384:
 306:src/keys.c    **** 		}
 12537              		.loc 1 306 11 view .LVU3845
 12538              	.LBE848:
 12539              	.LBE1348:
 12540              	.LBB1349:
 12541              	.LBB1258:
3001:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 12542              		.loc 1 3001 3 is_stmt 1 view .LVU3846
3001:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 12543              		.loc 1 3001 8 is_stmt 0 view .LVU3847
 12544 175e 4FEA8B34 		lsl	r4, fp, #14
 12545              	.LVL1065:
3001:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 12546              		.loc 1 3001 6 view .LVU3848
 12547 1762 44F00104 		orr	r4, r4, #1
ARM GAS  /tmp/cc6xzGMw.s 			page 349


 12548              	.LVL1066:
3002:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 12549              		.loc 1 3002 3 is_stmt 1 view .LVU3849
3002:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 12550              		.loc 1 3002 9 is_stmt 0 view .LVU3850
 12551 1766 2046     		mov	r0, r4
 12552 1768 FFF7FEFF 		bl	is_label_or_end_at
 12553              	.LVL1067:
3002:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 12554              		.loc 1 3002 6 view .LVU3851
 12555 176c 0246     		mov	r2, r0
 12556 176e 60B1     		cbz	r0, .L1392
 12557              	.L955:
3004:src/keys.c    **** 		return STATE_UNFINISHED;
 12558              		.loc 1 3004 3 is_stmt 1 view .LVU3852
3004:src/keys.c    **** 		return STATE_UNFINISHED;
 12559              		.loc 1 3004 17 is_stmt 0 view .LVU3853
 12560 1770 A8F80840 		strh	r4, [r8, #8]	@ movhi
3005:src/keys.c    **** 	}
 12561              		.loc 1 3005 3 is_stmt 1 view .LVU3854
 12562 1774 3368     		ldr	r3, [r6]
3005:src/keys.c    **** 	}
 12563              		.loc 1 3005 10 is_stmt 0 view .LVU3855
 12564 1776 3324     		movs	r4, #51
 12565              	.LVL1068:
3005:src/keys.c    **** 	}
 12566              		.loc 1 3005 10 view .LVU3856
 12567 1778 FEF79DBC 		b	.L801
 12568              	.LVL1069:
 12569              	.L1383:
2994:src/keys.c    **** 	const int direct = State2.runmode;
 12570              		.loc 1 2994 37 view .LVU3857
 12571 177c 5046     		mov	r0, r10
 12572 177e FFF7FEFF 		bl	getprog
 12573              	.LVL1070:
2994:src/keys.c    **** 	const int direct = State2.runmode;
 12574              		.loc 1 2994 63 view .LVU3858
 12575 1782 20F47062 		bic	r2, r0, #3840
 12576 1786 FFF71DBB 		b	.L952
 12577              	.LVL1071:
 12578              	.L1392:
3003:src/keys.c    **** 		State2.digval = pc;
 12579              		.loc 1 3003 4 is_stmt 1 view .LVU3859
3003:src/keys.c    **** 		State2.digval = pc;
 12580              		.loc 1 3003 9 is_stmt 0 view .LVU3860
 12581 178a 2046     		mov	r0, r4
 12582 178c 0121     		movs	r1, #1
 12583 178e FFF7FEFF 		bl	advance_to_next_label
 12584              	.LVL1072:
 12585 1792 0446     		mov	r4, r0
 12586              	.LVL1073:
3003:src/keys.c    **** 		State2.digval = pc;
 12587              		.loc 1 3003 9 view .LVU3861
 12588 1794 ECE7     		b	.L955
 12589              	.LVL1074:
 12590              	.L871:
3003:src/keys.c    **** 		State2.digval = pc;
ARM GAS  /tmp/cc6xzGMw.s 			page 350


 12591              		.loc 1 3003 9 view .LVU3862
 12592              	.LBE1258:
 12593              	.LBE1349:
 12594              	.LBB1350:
 12595              	.LBB1067:
2367:src/keys.c    **** 		// Special 1
 12596              		.loc 1 2367 7 is_stmt 1 view .LVU3863
2367:src/keys.c    **** 		// Special 1
 12597              		.loc 1 2367 10 is_stmt 0 view .LVU3864
 12598 1796 BCF1010F 		cmp	ip, #1
 12599 179a 7FF45EA9 		bne	.L873
2369:src/keys.c    **** 	}
 12600              		.loc 1 2369 3 is_stmt 1 view .LVU3865
2369:src/keys.c    **** 	}
 12601              		.loc 1 2369 18 is_stmt 0 view .LVU3866
 12602 179e BBF1000F 		cmp	fp, #0
 12603 17a2 14BF     		ite	ne
 12604 17a4 2724     		movne	r4, #39
 12605              	.LVL1075:
2369:src/keys.c    **** 	}
 12606              		.loc 1 2369 18 view .LVU3867
 12607 17a6 1E24     		moveq	r4, #30
2369:src/keys.c    **** 	}
 12608              		.loc 1 2369 47 view .LVU3868
 12609 17a8 1C44     		add	r4, r4, r3
 12610 17aa FEF719BE 		b	.L835
 12611              	.LVL1076:
 12612              	.L1378:
2369:src/keys.c    **** 	}
 12613              		.loc 1 2369 47 view .LVU3869
 12614              	.LBE1067:
 12615              	.LBE1350:
 12616              	.LBB1351:
 12617              	.LBB1206:
 12618              	.LBB1200:
 12619              	.LBB1189:
 488:src/keys.c    **** 			shift = SHIFT_LC_G;
 12620              		.loc 1 488 8 is_stmt 1 view .LVU3870
 489:src/keys.c    **** 	}
 12621              		.loc 1 489 10 is_stmt 0 view .LVU3871
 12622 17ae 0229     		cmp	r1, #2
 12623 17b0 08BF     		it	eq
 12624 17b2 0521     		moveq	r1, #5
 12625              	.LVL1077:
 489:src/keys.c    **** 	}
 12626              		.loc 1 489 10 view .LVU3872
 12627 17b4 FFF730BA 		b	.L943
 12628              	.LVL1078:
 12629              	.L1380:
 489:src/keys.c    **** 	}
 12630              		.loc 1 489 10 view .LVU3873
 12631              	.LBE1189:
 12632              	.LBE1200:
2862:src/keys.c    **** 		State2.numdigit = 2;
 12633              		.loc 1 2862 3 is_stmt 1 view .LVU3874
2863:src/keys.c    **** 		return STATE_UNFINISHED;
 12634              		.loc 1 2863 19 is_stmt 0 view .LVU3875
ARM GAS  /tmp/cc6xzGMw.s 			page 351


 12635 17b8 0222     		movs	r2, #2
2862:src/keys.c    **** 		State2.numdigit = 2;
 12636              		.loc 1 2862 18 view .LVU3876
 12637 17ba 88F80A40 		strb	r4, [r8, #10]
2863:src/keys.c    **** 		return STATE_UNFINISHED;
 12638              		.loc 1 2863 3 is_stmt 1 view .LVU3877
 12639 17be 3368     		ldr	r3, [r6]
2863:src/keys.c    **** 		return STATE_UNFINISHED;
 12640              		.loc 1 2863 19 is_stmt 0 view .LVU3878
 12641 17c0 88F80B20 		strb	r2, [r8, #11]
2864:src/keys.c    **** 	}
 12642              		.loc 1 2864 3 is_stmt 1 view .LVU3879
2864:src/keys.c    **** 	}
 12643              		.loc 1 2864 10 is_stmt 0 view .LVU3880
 12644 17c4 3324     		movs	r4, #51
 12645              	.LVL1079:
2864:src/keys.c    **** 	}
 12646              		.loc 1 2864 10 view .LVU3881
 12647 17c6 FEF776BC 		b	.L801
 12648              	.LVL1080:
 12649              	.L1350:
2864:src/keys.c    **** 	}
 12650              		.loc 1 2864 10 view .LVU3882
 12651              	.LBE1206:
 12652              	.LBE1351:
 12653              	.LBE1412:
 12654              	.LBE1489:
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12655              		.loc 1 3632 2 is_stmt 1 view .LVU3883
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12656              		.loc 1 3632 18 is_stmt 0 view .LVU3884
 12657 17ca 0022     		movs	r2, #0
 12658 17cc 1A60     		str	r2, [r3]
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12659              		.loc 1 3633 2 is_stmt 1 view .LVU3885
 12660 17ce FEF70BBF 		b	.L1106
 12661              	.LVL1081:
 12662              	.L1314:
 12663              	.LBB1490:
 12664              	.LBB1413:
 12665              	.LBB1352:
 12666              	.LBB1022:
1865:src/keys.c    **** 		else if (shift == SHIFT_H)
 12667              		.loc 1 1865 4 view .LVU3886
1865:src/keys.c    **** 		else if (shift == SHIFT_H)
 12668              		.loc 1 1865 34 is_stmt 0 view .LVU3887
 12669 17d2 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 12670 17d6 3368     		ldr	r3, [r6]
 12671 17d8 C2F30011 		ubfx	r1, r2, #4, #1
1865:src/keys.c    **** 		else if (shift == SHIFT_H)
 12672              		.loc 1 1865 26 view .LVU3888
 12673 17dc C1F10101 		rsb	r1, r1, #1
1865:src/keys.c    **** 		else if (shift == SHIFT_H)
 12674              		.loc 1 1865 22 view .LVU3889
 12675 17e0 61F30412 		bfi	r2, r1, #4, #1
 12676 17e4 88F81620 		strb	r2, [r8, #22]
1875:src/keys.c    **** 
ARM GAS  /tmp/cc6xzGMw.s 			page 352


 12677              		.loc 1 1875 10 view .LVU3890
 12678 17e8 3324     		movs	r4, #51
 12679 17ea FEF764BC 		b	.L801
 12680              	.LVL1082:
 12681              	.L1082:
1875:src/keys.c    **** 
 12682              		.loc 1 1875 10 view .LVU3891
 12683              	.LBE1022:
 12684              	.LBE1352:
 12685              	.LBB1353:
 12686              	.LBB940:
1418:src/keys.c    **** 			return process_cmplx(c);
 12687              		.loc 1 1418 3 is_stmt 1 view .LVU3892
1418:src/keys.c    **** 			return process_cmplx(c);
 12688              		.loc 1 1418 18 is_stmt 0 view .LVU3893
 12689 17ee DAF80030 		ldr	r3, [r10]
 12690 17f2 93F8AC37 		ldrb	r3, [r3, #1964]	@ zero_extendqisi2
1418:src/keys.c    **** 			return process_cmplx(c);
 12691              		.loc 1 1418 6 view .LVU3894
 12692 17f6 13F0060F 		tst	r3, #6
1419:src/keys.c    **** 		}
 12693              		.loc 1 1419 11 view .LVU3895
 12694 17fa 4FF00E00 		mov	r0, #14
1418:src/keys.c    **** 			return process_cmplx(c);
 12695              		.loc 1 1418 6 view .LVU3896
 12696 17fe 7EF46AAD 		bne	.L1304
 12697 1802 2FE6     		b	.L1307
 12698              	.L1045:
1294:src/keys.c    **** 		if (shift == SHIFT_F) { // special pi processing
 12699              		.loc 1 1294 2 is_stmt 1 view .LVU3897
1294:src/keys.c    **** 		if (shift == SHIFT_F) { // special pi processing
 12700              		.loc 1 1294 5 is_stmt 0 view .LVU3898
 12701 1804 0F2C     		cmp	r4, #15
 12702 1806 7FF472AE 		bne	.L1046
1295:src/keys.c    **** 			reset_shift();
 12703              		.loc 1 1295 3 is_stmt 1 view .LVU3899
1295:src/keys.c    **** 			reset_shift();
 12704              		.loc 1 1295 6 is_stmt 0 view .LVU3900
 12705 180a BBF1010F 		cmp	fp, #1
 12706 180e 00F0BE82 		beq	.L1393
 12707              	.LBB854:
1311:src/keys.c    **** #endif
 12708              		.loc 1 1311 4 is_stmt 1 view .LVU3901
 12709              	.LVL1083:
1313:src/keys.c    **** 				finish_cpx_entry(1);
 12710              		.loc 1 1313 4 view .LVU3902
1313:src/keys.c    **** 				finish_cpx_entry(1);
 12711              		.loc 1 1313 7 is_stmt 0 view .LVU3903
 12712 1812 BBF1030F 		cmp	fp, #3
 12713 1816 00F0B182 		beq	.L1394
 12714              	.LBE854:
1320:src/keys.c    **** 		finish_cpx_entry(0); // finish entry for all of them - no lift
 12715              		.loc 1 1320 2 is_stmt 1 view .LVU3904
1320:src/keys.c    **** 		finish_cpx_entry(0); // finish entry for all of them - no lift
 12716              		.loc 1 1320 5 is_stmt 0 view .LVU3905
 12717 181a BBF1000F 		cmp	fp, #0
 12718 181e 7FF41DAE 		bne	.L1122
ARM GAS  /tmp/cc6xzGMw.s 			page 353


 12719              	.LVL1084:
 12720              	.L1081:
1411:src/keys.c    **** 			SET_REAL; // start and continuation of real entry
 12721              		.loc 1 1411 3 is_stmt 1 view .LVU3906
1411:src/keys.c    **** 			SET_REAL; // start and continuation of real entry
 12722              		.loc 1 1411 8 is_stmt 0 view .LVU3907
 12723 1822 DAF80020 		ldr	r2, [r10]
1411:src/keys.c    **** 			SET_REAL; // start and continuation of real entry
 12724              		.loc 1 1411 18 view .LVU3908
 12725 1826 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
1411:src/keys.c    **** 			SET_REAL; // start and continuation of real entry
 12726              		.loc 1 1411 6 view .LVU3909
 12727 182a 13F0060F 		tst	r3, #6
 12728 182e 06D1     		bne	.L1080
1412:src/keys.c    **** 			stack_begin (1);
 12729              		.loc 1 1412 4 is_stmt 1 view .LVU3910
 12730 1830 43F00203 		orr	r3, r3, #2
 12731 1834 82F8AC37 		strb	r3, [r2, #1964]
1413:src/keys.c    **** 		}
 12732              		.loc 1 1413 4 view .LVU3911
 12733 1838 0120     		movs	r0, #1
 12734 183a FFF7FEFF 		bl	stack_begin
 12735              	.LVL1085:
1415:src/keys.c    **** 	case (K22): // CHS
 12736              		.loc 1 1415 3 view .LVU3912
 12737              	.L1080:
1427:src/keys.c    **** 	case (K_CMPLX):
 12738              		.loc 1 1427 4 view .LVU3913
1427:src/keys.c    **** 	case (K_CMPLX):
 12739              		.loc 1 1427 11 is_stmt 0 view .LVU3914
 12740 183e 2046     		mov	r0, r4
 12741 1840 FEF749BD 		b	.L1304
 12742              	.L1077:
1444:src/keys.c    **** 	}
 12743              		.loc 1 1444 10 is_stmt 1 view .LVU3915
1446:src/keys.c    **** 	return process_cmplx(c);
 12744              		.loc 1 1446 2 view .LVU3916
 12745 1844 0020     		movs	r0, #0
 12746 1846 FFF7FEFF 		bl	finish_cpx_entry
 12747              	.LVL1086:
1447:src/keys.c    **** 
 12748              		.loc 1 1447 2 view .LVU3917
1447:src/keys.c    **** 
 12749              		.loc 1 1447 9 is_stmt 0 view .LVU3918
 12750 184a 2046     		mov	r0, r4
 12751 184c FFF7FEFF 		bl	process_cmplx
 12752              	.LVL1087:
 12753 1850 0446     		mov	r4, r0
 12754              	.LVL1088:
1447:src/keys.c    **** 
 12755              		.loc 1 1447 9 view .LVU3919
 12756 1852 FEF7C5BD 		b	.L835
 12757              	.LVL1089:
 12758              	.L1299:
1321:src/keys.c    **** 		switch (c) {
 12759              		.loc 1 1321 3 is_stmt 1 view .LVU3920
 12760 1856 0020     		movs	r0, #0
ARM GAS  /tmp/cc6xzGMw.s 			page 354


 12761 1858 FFF7FEFF 		bl	finish_cpx_entry
 12762              	.LVL1090:
1322:src/keys.c    **** 		case (K60):
 12763              		.loc 1 1322 3 view .LVU3921
 12764 185c A4F10D03 		sub	r3, r4, #13
 12765 1860 192B     		cmp	r3, #25
 12766 1862 3FF6FEAD 		bhi	.L1306
 12767 1866 01A2     		adr	r2, .L1054
 12768 1868 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 12769              		.p2align 2
 12770              	.L1054:
 12771 186c E51A0000 		.word	.L1061+1
 12772 1870 B91A0000 		.word	.L1060+1
 12773 1874 63140000 		.word	.L1306+1
 12774 1878 651A0000 		.word	.L1059+1
 12775 187c 63140000 		.word	.L1306+1
 12776 1880 63140000 		.word	.L1306+1
 12777 1884 63140000 		.word	.L1306+1
 12778 1888 63140000 		.word	.L1306+1
 12779 188c 63140000 		.word	.L1306+1
 12780 1890 471A0000 		.word	.L1058+1
 12781 1894 63140000 		.word	.L1306+1
 12782 1898 4B1B0000 		.word	.L1057+1
 12783 189c 63140000 		.word	.L1306+1
 12784 18a0 63140000 		.word	.L1306+1
 12785 18a4 63140000 		.word	.L1306+1
 12786 18a8 2D1B0000 		.word	.L1056+1
 12787 18ac 63140000 		.word	.L1306+1
 12788 18b0 63140000 		.word	.L1306+1
 12789 18b4 63140000 		.word	.L1306+1
 12790 18b8 63140000 		.word	.L1306+1
 12791 18bc 63140000 		.word	.L1306+1
 12792 18c0 63140000 		.word	.L1306+1
 12793 18c4 63140000 		.word	.L1306+1
 12794 18c8 C7190000 		.word	.L1055+1
 12795 18cc 63140000 		.word	.L1306+1
 12796 18d0 9F190000 		.word	.L1053+1
 12797              		.p2align 1
 12798              	.L1078:
1429:src/keys.c    **** 			CLEAR_REAL;
 12799              		.loc 1 1429 3 view .LVU3922
1429:src/keys.c    **** 			CLEAR_REAL;
 12800              		.loc 1 1429 7 is_stmt 0 view .LVU3923
 12801 18d4 DAF80020 		ldr	r2, [r10]
 12802 18d8 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
1429:src/keys.c    **** 			CLEAR_REAL;
 12803              		.loc 1 1429 6 view .LVU3924
 12804 18dc 9907     		lsls	r1, r3, #30
 12805 18de 13D4     		bmi	.L1395
1436:src/keys.c    **** 			finish_cpx_entry (1);
 12806              		.loc 1 1436 8 is_stmt 1 view .LVU3925
1436:src/keys.c    **** 			finish_cpx_entry (1);
 12807              		.loc 1 1436 11 is_stmt 0 view .LVU3926
 12808 18e0 5C07     		lsls	r4, r3, #29
 12809              	.LVL1091:
1436:src/keys.c    **** 			finish_cpx_entry (1);
 12810              		.loc 1 1436 11 view .LVU3927
ARM GAS  /tmp/cc6xzGMw.s 			page 355


 12811 18e2 06D5     		bpl	.L1087
1437:src/keys.c    **** 		}
 12812              		.loc 1 1437 4 is_stmt 1 view .LVU3928
 12813 18e4 0120     		movs	r0, #1
 12814 18e6 FFF7FEFF 		bl	finish_cpx_entry
 12815              	.LVL1092:
1443:src/keys.c    **** 	default:;
 12816              		.loc 1 1443 10 is_stmt 0 view .LVU3929
 12817 18ea 3324     		movs	r4, #51
 12818 18ec 3368     		ldr	r3, [r6]
 12819 18ee FEF7E2BB 		b	.L801
 12820              	.L1087:
1440:src/keys.c    **** 			stack_begin (1);
 12821              		.loc 1 1440 4 is_stmt 1 view .LVU3930
 12822 18f2 43F00403 		orr	r3, r3, #4
 12823 18f6 82F8AC37 		strb	r3, [r2, #1964]
1441:src/keys.c    **** 		}
 12824              		.loc 1 1441 4 view .LVU3931
 12825 18fa 0120     		movs	r0, #1
 12826 18fc FFF7FEFF 		bl	stack_begin
 12827              	.LVL1093:
1443:src/keys.c    **** 	default:;
 12828              		.loc 1 1443 10 is_stmt 0 view .LVU3932
 12829 1900 3324     		movs	r4, #51
 12830 1902 3368     		ldr	r3, [r6]
 12831 1904 FEF7D7BB 		b	.L801
 12832              	.LVL1094:
 12833              	.L1395:
1430:src/keys.c    **** 			SET_IMAG;
 12834              		.loc 1 1430 4 is_stmt 1 view .LVU3933
1431:src/keys.c    **** 			do_command_line();
 12835              		.loc 1 1431 4 view .LVU3934
1430:src/keys.c    **** 			SET_IMAG;
 12836              		.loc 1 1430 4 is_stmt 0 view .LVU3935
 12837 1908 23F00603 		bic	r3, r3, #6
 12838              	.LBB855:
 12839              	.LBB856:
1191:src/keys.c    **** 		State2.state_lift = 0;
 12840              		.loc 1 1191 5 view .LVU3936
 12841 190c 98F81C10 		ldrb	r1, [r8, #28]	@ zero_extendqisi2
 12842              	.LBE856:
 12843              	.LBE855:
1430:src/keys.c    **** 			SET_IMAG;
 12844              		.loc 1 1430 4 view .LVU3937
 12845 1910 43F00403 		orr	r3, r3, #4
 12846 1914 82F8AC37 		strb	r3, [r2, #1964]
1432:src/keys.c    **** 			State2.state_lift = 0;
 12847              		.loc 1 1432 4 is_stmt 1 view .LVU3938
 12848              	.LBB859:
 12849              	.LBI855:
1190:src/keys.c    **** 	if (CmdLineLength) {
 12850              		.loc 1 1190 13 view .LVU3939
 12851              	.LBB857:
1191:src/keys.c    **** 		State2.state_lift = 0;
 12852              		.loc 1 1191 2 view .LVU3940
1191:src/keys.c    **** 		State2.state_lift = 0;
 12853              		.loc 1 1191 5 is_stmt 0 view .LVU3941
ARM GAS  /tmp/cc6xzGMw.s 			page 356


 12854 1918 0029     		cmp	r1, #0
 12855 191a 37D1     		bne	.L1396
 12856              	.L1086:
 12857              	.LBE857:
 12858              	.LBE859:
1433:src/keys.c    **** 			swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 12859              		.loc 1 1433 4 is_stmt 1 view .LVU3942
1433:src/keys.c    **** 			swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 12860              		.loc 1 1433 22 is_stmt 0 view .LVU3943
 12861 191c 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
1434:src/keys.c    **** 		}
 12862              		.loc 1 1434 4 view .LVU3944
 12863 1920 6420     		movs	r0, #100
1433:src/keys.c    **** 			swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 12864              		.loc 1 1433 22 view .LVU3945
 12865 1922 6FF38613 		bfc	r3, #6, #1
 12866 1926 88F81730 		strb	r3, [r8, #23]
1434:src/keys.c    **** 		}
 12867              		.loc 1 1434 4 is_stmt 1 view .LVU3946
 12868 192a FFF7FEFF 		bl	get_reg_n
 12869              	.LVL1095:
 12870 192e 0446     		mov	r4, r0
 12871              	.LVL1096:
1434:src/keys.c    **** 		}
 12872              		.loc 1 1434 4 is_stmt 0 view .LVU3947
 12873 1930 6520     		movs	r0, #101
 12874 1932 FFF7FEFF 		bl	get_reg_n
 12875              	.LVL1097:
 12876 1936 0146     		mov	r1, r0
 12877 1938 2046     		mov	r0, r4
 12878 193a FFF7FEFF 		bl	swap_reg
 12879              	.LVL1098:
1443:src/keys.c    **** 	default:;
 12880              		.loc 1 1443 10 view .LVU3948
 12881 193e 3324     		movs	r4, #51
 12882 1940 3368     		ldr	r3, [r6]
 12883 1942 FEF7B8BB 		b	.L801
 12884              	.LVL1099:
 12885              	.L1386:
1443:src/keys.c    **** 	default:;
 12886              		.loc 1 1443 10 view .LVU3949
 12887              	.LBE940:
 12888              	.LBE1353:
 12889              	.LBB1354:
 12890              	.LBB1297:
3127:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 12891              		.loc 1 3127 3 is_stmt 1 view .LVU3950
3127:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 12892              		.loc 1 3127 7 is_stmt 0 view .LVU3951
 12893 1946 FFF7FEFF 		bl	local_regs
 12894              	.LVL1100:
3127:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 12895              		.loc 1 3127 6 view .LVU3952
 12896 194a 68B1     		cbz	r0, .L981
3128:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12897              		.loc 1 3128 4 is_stmt 1 view .LVU3953
3128:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
ARM GAS  /tmp/cc6xzGMw.s 			page 357


 12898              		.loc 1 3128 19 is_stmt 0 view .LVU3954
 12899 194c 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3128:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12900              		.loc 1 3128 34 view .LVU3955
 12901 1950 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
3128:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12902              		.loc 1 3128 19 view .LVU3956
 12903 1954 03F00101 		and	r1, r3, #1
3128:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12904              		.loc 1 3128 34 view .LVU3957
 12905 1958 0A43     		orrs	r2, r1, r2
 12906 195a 0CBF     		ite	eq
 12907 195c 0122     		moveq	r2, #1
 12908 195e 0022     		movne	r2, #0
3128:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12909              		.loc 1 3128 17 view .LVU3958
 12910 1960 62F30003 		bfi	r3, r2, #0, #1
 12911 1964 88F81630 		strb	r3, [r8, #22]
 12912              	.L981:
3129:src/keys.c    **** 		goto reset_window;
 12913              		.loc 1 3129 3 is_stmt 1 view .LVU3959
3129:src/keys.c    **** 		goto reset_window;
 12914              		.loc 1 3129 32 is_stmt 0 view .LVU3960
 12915 1968 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3129:src/keys.c    **** 		goto reset_window;
 12916              		.loc 1 3129 17 view .LVU3961
 12917 196c 13F0010F 		tst	r3, #1
 12918 1970 14BF     		ite	ne
 12919 1972 0023     		movne	r3, #0
 12920 1974 6423     		moveq	r3, #100
 12921 1976 A8F80830 		strh	r3, [r8, #8]	@ movhi
3130:src/keys.c    **** 	}
 12922              		.loc 1 3130 3 is_stmt 1 view .LVU3962
 12923 197a FFF7D9BB 		b	.L983
 12924              	.LVL1101:
 12925              	.L944:
3130:src/keys.c    **** 	}
 12926              		.loc 1 3130 3 is_stmt 0 view .LVU3963
 12927              	.LBE1297:
 12928              	.LBE1354:
 12929              	.LBB1355:
 12930              	.LBB1207:
2836:src/keys.c    **** 			return STATE_UNFINISHED;
 12931              		.loc 1 2836 5 is_stmt 1 view .LVU3964
2836:src/keys.c    **** 			return STATE_UNFINISHED;
 12932              		.loc 1 2836 20 is_stmt 0 view .LVU3965
 12933 197e 013A     		subs	r2, r2, #1
 12934 1980 3368     		ldr	r3, [r6]
 12935 1982 88F80B20 		strb	r2, [r8, #11]
2837:src/keys.c    **** 		}
 12936              		.loc 1 2837 11 view .LVU3966
 12937 1986 3324     		movs	r4, #51
 12938              	.LVL1102:
2837:src/keys.c    **** 		}
 12939              		.loc 1 2837 11 view .LVU3967
 12940 1988 FEF795BB 		b	.L801
 12941              	.LVL1103:
ARM GAS  /tmp/cc6xzGMw.s 			page 358


 12942              	.L1396:
2837:src/keys.c    **** 		}
 12943              		.loc 1 2837 11 view .LVU3968
 12944              	.LBE1207:
 12945              	.LBE1355:
 12946              	.LBB1356:
 12947              	.LBB941:
 12948              	.LBB860:
 12949              	.LBB858:
1192:src/keys.c    **** 		process_cmdline();
 12950              		.loc 1 1192 3 is_stmt 1 view .LVU3969
1192:src/keys.c    **** 		process_cmdline();
 12951              		.loc 1 1192 21 is_stmt 0 view .LVU3970
 12952 198c 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
 12953 1990 6FF38613 		bfc	r3, #6, #1
 12954 1994 88F81730 		strb	r3, [r8, #23]
1193:src/keys.c    **** 	}
 12955              		.loc 1 1193 3 is_stmt 1 view .LVU3971
 12956 1998 FFF7FEFF 		bl	process_cmdline
 12957              	.LVL1104:
 12958 199c BEE7     		b	.L1086
 12959              	.L1053:
1193:src/keys.c    **** 	}
 12960              		.loc 1 1193 3 is_stmt 0 view .LVU3972
 12961              	.LBE858:
 12962              	.LBE860:
1356:src/keys.c    **** 		  if (shift == SHIFT_F) {
 12963              		.loc 1 1356 5 is_stmt 1 view .LVU3973
 12964              	.LBB861:
 12965              	.LBI861:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 12966              		.loc 1 114 13 view .LVU3974
 12967              	.LBE861:
 12968              	.LBE941:
 12969              	.LBE1356:
 12970              	.LBE1413:
 12971              	.LBE1490:
 115:src/keys.c    **** }
 12972              		.loc 1 115 2 view .LVU3975
 12973              	.LVL1105:
 12974              	.LBB1491:
 12975              	.LBB1414:
 12976              	.LBB1357:
 12977              	.LBB942:
 12978              	.LBB868:
 12979              	.LBB862:
 12980              	.LBI862:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 12981              		.loc 1 104 20 view .LVU3976
 12982              	.LBB863:
 105:src/keys.c    **** 	State2.shifts = shift;
 12983              		.loc 1 105 2 view .LVU3977
 12984              	.LBB864:
 12985              	.LBI864:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 12986              		.loc 1 96 13 view .LVU3978
 12987              	.LBB865:
ARM GAS  /tmp/cc6xzGMw.s 			page 359


  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12988              		.loc 1 97 2 view .LVU3979
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12989              		.loc 1 97 18 is_stmt 0 view .LVU3980
 12990 199e FFF7FEFF 		bl	shift_down
 12991              	.LVL1106:
  98:src/keys.c    **** }
 12992              		.loc 1 98 2 is_stmt 1 view .LVU3981
 12993              	.LBE865:
 12994              	.LBE864:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12995              		.loc 1 106 2 view .LVU3982
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12996              		.loc 1 106 16 is_stmt 0 view .LVU3983
 12997 19a2 0023     		movs	r3, #0
 12998              	.LBE863:
 12999              	.LBE862:
 13000              	.LBE868:
1357:src/keys.c    **** 		    return OP_NIL | OP_C_IM;
 13001              		.loc 1 1357 8 view .LVU3984
 13002 19a4 BBF1010F 		cmp	fp, #1
 13003              	.LBB869:
 13004              	.LBB867:
 13005              	.LBB866:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13006              		.loc 1 106 16 view .LVU3985
 13007 19a8 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13008              		.loc 1 108 2 is_stmt 1 view .LVU3986
 13009              	.LVL1107:
 108:src/keys.c    **** }
 13010              		.loc 1 108 2 is_stmt 0 view .LVU3987
 13011              	.LBE866:
 13012              	.LBE867:
 13013              	.LBE869:
1357:src/keys.c    **** 		    return OP_NIL | OP_C_IM;
 13014              		.loc 1 1357 5 is_stmt 1 view .LVU3988
1357:src/keys.c    **** 		    return OP_NIL | OP_C_IM;
 13015              		.loc 1 1357 8 is_stmt 0 view .LVU3989
 13016 19ac 39D0     		beq	.L1071
1360:src/keys.c    **** 		    return OP_NIL | OP_C_RE;
 13017              		.loc 1 1360 10 is_stmt 1 view .LVU3990
1360:src/keys.c    **** 		    return OP_NIL | OP_C_RE;
 13018              		.loc 1 1360 13 is_stmt 0 view .LVU3991
 13019 19ae BBF1020F 		cmp	fp, #2
 13020 19b2 2CD0     		beq	.L1397
 13021              	.L1068:
1394:src/keys.c    **** 		return STATE_UNFINISHED;
 13022              		.loc 1 1394 3 is_stmt 1 view .LVU3992
 13023              	.LBB870:
 13024              	.LBI870:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13025              		.loc 1 114 13 view .LVU3993
 13026              	.LBE870:
 13027              	.LBE942:
 13028              	.LBE1357:
 13029              	.LBE1414:
ARM GAS  /tmp/cc6xzGMw.s 			page 360


 13030              	.LBE1491:
 115:src/keys.c    **** }
 13031              		.loc 1 115 2 view .LVU3994
 13032              	.LVL1108:
 13033              	.LBB1492:
 13034              	.LBB1415:
 13035              	.LBB1358:
 13036              	.LBB943:
 13037              	.LBB875:
 13038              	.LBB871:
 13039              	.LBI871:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13040              		.loc 1 104 20 view .LVU3995
 13041              	.LBB872:
 105:src/keys.c    **** 	State2.shifts = shift;
 13042              		.loc 1 105 2 view .LVU3996
 13043              	.LBB873:
 13044              	.LBI873:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13045              		.loc 1 96 13 view .LVU3997
 13046              	.LBB874:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13047              		.loc 1 97 2 view .LVU3998
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13048              		.loc 1 97 18 is_stmt 0 view .LVU3999
 13049 19b4 FFF7FEFF 		bl	shift_down
 13050              	.LVL1109:
  98:src/keys.c    **** }
 13051              		.loc 1 98 2 is_stmt 1 view .LVU4000
 13052              	.LBE874:
 13053              	.LBE873:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13054              		.loc 1 106 2 view .LVU4001
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13055              		.loc 1 106 16 is_stmt 0 view .LVU4002
 13056 19b8 0022     		movs	r2, #0
 13057 19ba 3368     		ldr	r3, [r6]
 13058 19bc 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 13059              		.loc 1 108 2 is_stmt 1 view .LVU4003
 13060              	.LVL1110:
 108:src/keys.c    **** }
 13061              		.loc 1 108 2 is_stmt 0 view .LVU4004
 13062              	.LBE872:
 13063              	.LBE871:
 13064              	.LBE875:
1395:src/keys.c    **** 	}
 13065              		.loc 1 1395 3 is_stmt 1 view .LVU4005
1395:src/keys.c    **** 	}
 13066              		.loc 1 1395 10 is_stmt 0 view .LVU4006
 13067 19c0 3324     		movs	r4, #51
 13068              	.LVL1111:
1395:src/keys.c    **** 	}
 13069              		.loc 1 1395 10 view .LVU4007
 13070 19c2 FEF778BB 		b	.L801
 13071              	.LVL1112:
 13072              	.L1055:
ARM GAS  /tmp/cc6xzGMw.s 			page 361


1324:src/keys.c    **** 		  if (shift == SHIFT_H) return (OP_NIL | OP_OFF);
 13073              		.loc 1 1324 5 is_stmt 1 view .LVU4008
 13074              	.LBB876:
 13075              	.LBI876:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13076              		.loc 1 114 13 view .LVU4009
 13077              	.LBE876:
 13078              	.LBE943:
 13079              	.LBE1358:
 13080              	.LBE1415:
 13081              	.LBE1492:
 115:src/keys.c    **** }
 13082              		.loc 1 115 2 view .LVU4010
 13083              	.LBB1493:
 13084              	.LBB1416:
 13085              	.LBB1359:
 13086              	.LBB944:
 13087              	.LBB883:
 13088              	.LBB877:
 13089              	.LBI877:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13090              		.loc 1 104 20 view .LVU4011
 13091              	.LBB878:
 105:src/keys.c    **** 	State2.shifts = shift;
 13092              		.loc 1 105 2 view .LVU4012
 13093              	.LBB879:
 13094              	.LBI879:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13095              		.loc 1 96 13 view .LVU4013
 13096              	.LBB880:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13097              		.loc 1 97 2 view .LVU4014
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13098              		.loc 1 97 18 is_stmt 0 view .LVU4015
 13099 19c6 FFF7FEFF 		bl	shift_down
 13100              	.LVL1113:
  98:src/keys.c    **** }
 13101              		.loc 1 98 2 is_stmt 1 view .LVU4016
 13102              	.LBE880:
 13103              	.LBE879:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13104              		.loc 1 106 2 view .LVU4017
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13105              		.loc 1 106 16 is_stmt 0 view .LVU4018
 13106 19ca 0023     		movs	r3, #0
 13107              	.LBE878:
 13108              	.LBE877:
 13109              	.LBE883:
1325:src/keys.c    **** 		case (K21): // x<->y key
 13110              		.loc 1 1325 8 view .LVU4019
 13111 19cc BBF1030F 		cmp	fp, #3
 13112              	.LBB884:
 13113              	.LBB882:
 13114              	.LBB881:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13115              		.loc 1 106 16 view .LVU4020
 13116 19d0 88F81030 		strb	r3, [r8, #16]
ARM GAS  /tmp/cc6xzGMw.s 			page 362


 108:src/keys.c    **** }
 13117              		.loc 1 108 2 is_stmt 1 view .LVU4021
 13118              	.LVL1114:
 108:src/keys.c    **** }
 13119              		.loc 1 108 2 is_stmt 0 view .LVU4022
 13120              	.LBE881:
 13121              	.LBE882:
 13122              	.LBE884:
1325:src/keys.c    **** 		case (K21): // x<->y key
 13123              		.loc 1 1325 5 is_stmt 1 view .LVU4023
1325:src/keys.c    **** 		case (K21): // x<->y key
 13124              		.loc 1 1325 8 is_stmt 0 view .LVU4024
 13125 19d4 00F0D680 		beq	.L1398
1327:src/keys.c    **** 				reset_shift();
 13126              		.loc 1 1327 4 is_stmt 1 view .LVU4025
1327:src/keys.c    **** 				reset_shift();
 13127              		.loc 1 1327 25 is_stmt 0 view .LVU4026
 13128 19d8 0BF1FF33 		add	r3, fp, #-1
1327:src/keys.c    **** 				reset_shift();
 13129              		.loc 1 1327 7 view .LVU4027
 13130 19dc DBB2     		uxtb	r3, r3
 13131 19de 012B     		cmp	r3, #1
 13132 19e0 E8D8     		bhi	.L1068
 13133              	.L1121:
1328:src/keys.c    **** 				CLEAR_POLAR_READY;
 13134              		.loc 1 1328 5 is_stmt 1 view .LVU4028
 13135              	.LBB885:
 13136              	.LBI885:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13137              		.loc 1 114 13 view .LVU4029
 13138              	.LBE885:
 13139              	.LBE944:
 13140              	.LBE1359:
 13141              	.LBE1416:
 13142              	.LBE1493:
 115:src/keys.c    **** }
 13143              		.loc 1 115 2 view .LVU4030
 13144              	.LVL1115:
 13145              	.LBB1494:
 13146              	.LBB1417:
 13147              	.LBB1360:
 13148              	.LBB945:
 13149              	.LBB892:
 13150              	.LBB886:
 13151              	.LBI886:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13152              		.loc 1 104 20 view .LVU4031
 13153              	.LBB887:
 105:src/keys.c    **** 	State2.shifts = shift;
 13154              		.loc 1 105 2 view .LVU4032
 13155              	.LBB888:
 13156              	.LBI888:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13157              		.loc 1 96 13 view .LVU4033
 13158              	.LBB889:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13159              		.loc 1 97 2 view .LVU4034
ARM GAS  /tmp/cc6xzGMw.s 			page 363


  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13160              		.loc 1 97 18 is_stmt 0 view .LVU4035
 13161 19e2 FFF7FEFF 		bl	shift_down
 13162              	.LVL1116:
  98:src/keys.c    **** }
 13163              		.loc 1 98 2 is_stmt 1 view .LVU4036
 13164              	.LBE889:
 13165              	.LBE888:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13166              		.loc 1 106 2 view .LVU4037
 13167              	.LBE887:
 13168              	.LBE886:
 13169              	.LBE892:
1329:src/keys.c    **** 				return RARG(RARG_SWAPX, regY_idx);
 13170              		.loc 1 1329 5 is_stmt 0 view .LVU4038
 13171 19e6 DAF80010 		ldr	r1, [r10]
 13172              	.LBB893:
 13173              	.LBB891:
 13174              	.LBB890:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13175              		.loc 1 106 16 view .LVU4039
 13176 19ea 0022     		movs	r2, #0
 13177 19ec 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 13178              		.loc 1 108 2 is_stmt 1 view .LVU4040
 13179              	.LVL1117:
 108:src/keys.c    **** }
 13180              		.loc 1 108 2 is_stmt 0 view .LVU4041
 13181              	.LBE890:
 13182              	.LBE891:
 13183              	.LBE893:
1329:src/keys.c    **** 				return RARG(RARG_SWAPX, regY_idx);
 13184              		.loc 1 1329 5 is_stmt 1 view .LVU4042
 13185 19f0 91F8AD37 		ldrb	r3, [r1, #1965]	@ zero_extendqisi2
 13186 19f4 43F00103 		orr	r3, r3, #1
 13187 19f8 81F8AD37 		strb	r3, [r1, #1965]
1330:src/keys.c    **** 			}
 13188              		.loc 1 1330 5 view .LVU4043
 13189              	.LVL1118:
1330:src/keys.c    **** 			}
 13190              		.loc 1 1330 5 is_stmt 0 view .LVU4044
 13191              	.LBE945:
 13192              	.LBE1360:
 13193              	.LBE1417:
 13194              	.LBE1494:
3631:src/keys.c    **** 	NonProgrammable = 0;
 13195              		.loc 1 3631 7 is_stmt 1 view .LVU4045
3631:src/keys.c    **** 	NonProgrammable = 0;
 13196              		.loc 1 3631 11 is_stmt 0 view .LVU4046
 13197 19fc 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3631:src/keys.c    **** 	NonProgrammable = 0;
 13198              		.loc 1 3631 10 view .LVU4047
 13199 1a00 5D06     		lsls	r5, r3, #25
 13200 1a02 00F19C80 		bmi	.L1065
 13201              	.LBB1495:
 13202              	.LBB1418:
 13203              	.LBB1361:
ARM GAS  /tmp/cc6xzGMw.s 			page 364


 13204              	.LBB946:
1330:src/keys.c    **** 			}
 13205              		.loc 1 1330 12 view .LVU4048
 13206 1a06 43F26514 		movw	r4, #12645
 13207 1a0a FFF77EB9 		b	.L899
 13208              	.LVL1119:
 13209              	.L1397:
1330:src/keys.c    **** 			}
 13210              		.loc 1 1330 12 view .LVU4049
 13211              	.LBE946:
 13212              	.LBE1361:
 13213              	.LBE1418:
 13214              	.LBE1495:
3631:src/keys.c    **** 	NonProgrammable = 0;
 13215              		.loc 1 3631 7 is_stmt 1 view .LVU4050
3631:src/keys.c    **** 	NonProgrammable = 0;
 13216              		.loc 1 3631 11 is_stmt 0 view .LVU4051
 13217 1a0e 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3631:src/keys.c    **** 	NonProgrammable = 0;
 13218              		.loc 1 3631 10 view .LVU4052
 13219 1a12 5206     		lsls	r2, r2, #25
 13220 1a14 0FD5     		bpl	.L1164
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13221              		.loc 1 3632 2 is_stmt 1 view .LVU4053
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13222              		.loc 1 3632 18 is_stmt 0 view .LVU4054
 13223 1a16 114A     		ldr	r2, .L1418+4
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13224              		.loc 1 3633 32 view .LVU4055
 13225 1a18 40F2C510 		movw	r0, #453
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13226              		.loc 1 3632 18 view .LVU4056
 13227 1a1c 1360     		str	r3, [r2]
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13228              		.loc 1 3633 2 is_stmt 1 view .LVU4057
 13229 1a1e FEF7E3BD 		b	.L1106
 13230              	.LVL1120:
 13231              	.L1071:
3631:src/keys.c    **** 	NonProgrammable = 0;
 13232              		.loc 1 3631 7 view .LVU4058
3631:src/keys.c    **** 	NonProgrammable = 0;
 13233              		.loc 1 3631 11 is_stmt 0 view .LVU4059
 13234 1a22 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3631:src/keys.c    **** 	NonProgrammable = 0;
 13235              		.loc 1 3631 10 view .LVU4060
 13236 1a26 5106     		lsls	r1, r2, #25
 13237 1a28 09D5     		bpl	.L1163
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13238              		.loc 1 3632 2 is_stmt 1 view .LVU4061
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13239              		.loc 1 3632 18 is_stmt 0 view .LVU4062
 13240 1a2a 0C4A     		ldr	r2, .L1418+4
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13241              		.loc 1 3633 32 view .LVU4063
 13242 1a2c 4FF4E370 		mov	r0, #454
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13243              		.loc 1 3632 18 view .LVU4064
ARM GAS  /tmp/cc6xzGMw.s 			page 365


 13244 1a30 1360     		str	r3, [r2]
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13245              		.loc 1 3633 2 is_stmt 1 view .LVU4065
 13246 1a32 FEF7D9BD 		b	.L1106
 13247              	.LVL1121:
 13248              	.L1164:
 13249              	.LBB1496:
 13250              	.LBB1419:
 13251              	.LBB1362:
 13252              	.LBB947:
1361:src/keys.c    **** 		  }
 13253              		.loc 1 1361 14 is_stmt 0 view .LVU4066
 13254 1a36 40F2C514 		movw	r4, #453
 13255 1a3a FFF766B9 		b	.L899
 13256              	.LVL1122:
 13257              	.L1163:
1358:src/keys.c    **** 		  }
 13258              		.loc 1 1358 14 view .LVU4067
 13259 1a3e 4FF4E374 		mov	r4, #454
 13260 1a42 FFF762B9 		b	.L899
 13261              	.LVL1123:
 13262              	.L1058:
1372:src/keys.c    **** 		case (K34): // divide key
 13263              		.loc 1 1372 4 is_stmt 1 view .LVU4068
1374:src/keys.c    **** 				reset_shift();
 13264              		.loc 1 1374 4 view .LVU4069
1374:src/keys.c    **** 				reset_shift();
 13265              		.loc 1 1374 7 is_stmt 0 view .LVU4070
 13266 1a46 BBF1030F 		cmp	fp, #3
 13267 1a4a 28D0     		beq	.L1399
1379:src/keys.c    **** 			}
 13268              		.loc 1 1379 5 is_stmt 1 view .LVU4071
1379:src/keys.c    **** 			}
 13269              		.loc 1 1379 12 is_stmt 0 view .LVU4072
 13270 1a4c 1620     		movs	r0, #22
 13271 1a4e FFF7FEFF 		bl	process_cmplx
 13272              	.LVL1124:
 13273 1a52 0446     		mov	r4, r0
 13274              	.LVL1125:
1379:src/keys.c    **** 			}
 13275              		.loc 1 1379 12 view .LVU4073
 13276 1a54 FEF7C4BC 		b	.L835
 13277              	.L1419:
 13278              		.align	2
 13279              	.L1418:
 13280 1a58 00000000 		.word	.LANCHOR17
 13281 1a5c 00000000 		.word	NonProgrammable
 13282 1a60 00000000 		.word	main_ram
 13283              	.LVL1126:
 13284              	.L1059:
1381:src/keys.c    **** 		case (K24): // <- key
 13285              		.loc 1 1381 4 is_stmt 1 view .LVU4074
1383:src/keys.c    **** 			if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real part o
 13286              		.loc 1 1383 4 view .LVU4075
1383:src/keys.c    **** 			if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real part o
 13287              		.loc 1 1383 8 is_stmt 0 view .LVU4076
 13288 1a64 DAF80030 		ldr	r3, [r10]
ARM GAS  /tmp/cc6xzGMw.s 			page 366


1383:src/keys.c    **** 			if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real part o
 13289              		.loc 1 1383 7 view .LVU4077
 13290 1a68 93F9AC37 		ldrsb	r3, [r3, #1964]
 13291 1a6c 002B     		cmp	r3, #0
 13292 1a6e A1DB     		blt	.L1068
1384:src/keys.c    **** 				zero_X ();
 13293              		.loc 1 1384 4 is_stmt 1 view .LVU4078
1384:src/keys.c    **** 				zero_X ();
 13294              		.loc 1 1384 7 is_stmt 0 view .LVU4079
 13295 1a70 BBF1030F 		cmp	fp, #3
 13296 1a74 9ED1     		bne	.L1068
1385:src/keys.c    **** 				State2.state_lift = 0;
 13297              		.loc 1 1385 5 is_stmt 1 view .LVU4080
 13298 1a76 FFF7FEFF 		bl	zero_X
 13299              	.LVL1127:
1386:src/keys.c    **** 				SET_REAL;
 13300              		.loc 1 1386 5 view .LVU4081
1386:src/keys.c    **** 				SET_REAL;
 13301              		.loc 1 1386 23 is_stmt 0 view .LVU4082
 13302 1a7a 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
1387:src/keys.c    **** 				stack_begin (0);
 13303              		.loc 1 1387 5 view .LVU4083
 13304 1a7e DAF80020 		ldr	r2, [r10]
1386:src/keys.c    **** 				SET_REAL;
 13305              		.loc 1 1386 23 view .LVU4084
 13306 1a82 6FF38613 		bfc	r3, #6, #1
 13307 1a86 88F81730 		strb	r3, [r8, #23]
1387:src/keys.c    **** 				stack_begin (0);
 13308              		.loc 1 1387 5 is_stmt 1 view .LVU4085
 13309 1a8a 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
 13310 1a8e 43F00203 		orr	r3, r3, #2
 13311 1a92 82F8AC37 		strb	r3, [r2, #1964]
1388:src/keys.c    **** 			}
 13312              		.loc 1 1388 5 view .LVU4086
 13313 1a96 0020     		movs	r0, #0
 13314 1a98 FFF7FEFF 		bl	stack_begin
 13315              	.LVL1128:
 13316 1a9c 8AE7     		b	.L1068
 13317              	.L1399:
1375:src/keys.c    **** 				return OP_CDYA | OP_CDOTDIV;
 13318              		.loc 1 1375 5 view .LVU4087
 13319              	.LBB894:
 13320              	.LBI894:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13321              		.loc 1 114 13 view .LVU4088
 13322              	.LBE894:
 13323              	.LBE947:
 13324              	.LBE1362:
 13325              	.LBE1419:
 13326              	.LBE1496:
 115:src/keys.c    **** }
 13327              		.loc 1 115 2 view .LVU4089
 13328              	.LVL1129:
 13329              	.LBB1497:
 13330              	.LBB1420:
 13331              	.LBB1363:
 13332              	.LBB948:
ARM GAS  /tmp/cc6xzGMw.s 			page 367


 13333              	.LBB903:
 13334              	.LBB895:
 13335              	.LBI895:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13336              		.loc 1 104 20 view .LVU4090
 13337              	.LBB896:
 105:src/keys.c    **** 	State2.shifts = shift;
 13338              		.loc 1 105 2 view .LVU4091
 13339              	.LBB897:
 13340              	.LBI897:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13341              		.loc 1 96 13 view .LVU4092
 13342              	.LBB898:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13343              		.loc 1 97 2 view .LVU4093
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13344              		.loc 1 97 18 is_stmt 0 view .LVU4094
 13345 1a9e FFF7FEFF 		bl	shift_down
 13346              	.LVL1130:
  98:src/keys.c    **** }
 13347              		.loc 1 98 2 is_stmt 1 view .LVU4095
 13348              	.LBE898:
 13349              	.LBE897:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13350              		.loc 1 106 2 view .LVU4096
 13351              	.LBE896:
 13352              	.LBE895:
 13353              	.LBE903:
 13354              	.LBE948:
 13355              	.LBE1363:
 13356              	.LBE1420:
 13357              	.LBE1497:
3631:src/keys.c    **** 	NonProgrammable = 0;
 13358              		.loc 1 3631 11 is_stmt 0 view .LVU4097
 13359 1aa2 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 13360              	.LBB1498:
 13361              	.LBB1421:
 13362              	.LBB1364:
 13363              	.LBB949:
 13364              	.LBB904:
 13365              	.LBB901:
 13366              	.LBB899:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13367              		.loc 1 106 16 view .LVU4098
 13368 1aa6 0023     		movs	r3, #0
 13369              	.LBE899:
 13370              	.LBE901:
 13371              	.LBE904:
 13372              	.LBE949:
 13373              	.LBE1364:
 13374              	.LBE1421:
 13375              	.LBE1498:
3631:src/keys.c    **** 	NonProgrammable = 0;
 13376              		.loc 1 3631 10 view .LVU4099
 13377 1aa8 5006     		lsls	r0, r2, #25
 13378              	.LBB1499:
 13379              	.LBB1422:
ARM GAS  /tmp/cc6xzGMw.s 			page 368


 13380              	.LBB1365:
 13381              	.LBB950:
 13382              	.LBB905:
 13383              	.LBB902:
 13384              	.LBB900:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13385              		.loc 1 106 16 view .LVU4100
 13386 1aaa 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13387              		.loc 1 108 2 is_stmt 1 view .LVU4101
 13388              	.LVL1131:
 108:src/keys.c    **** }
 13389              		.loc 1 108 2 is_stmt 0 view .LVU4102
 13390              	.LBE900:
 13391              	.LBE902:
 13392              	.LBE905:
1376:src/keys.c    **** 			}
 13393              		.loc 1 1376 5 is_stmt 1 view .LVU4103
1376:src/keys.c    **** 			}
 13394              		.loc 1 1376 5 is_stmt 0 view .LVU4104
 13395              	.LBE950:
 13396              	.LBE1365:
 13397              	.LBE1422:
 13398              	.LBE1499:
3631:src/keys.c    **** 	NonProgrammable = 0;
 13399              		.loc 1 3631 7 is_stmt 1 view .LVU4105
3631:src/keys.c    **** 	NonProgrammable = 0;
 13400              		.loc 1 3631 10 is_stmt 0 view .LVU4106
 13401 1aae 29D4     		bmi	.L1076
 13402              	.LBB1500:
 13403              	.LBB1423:
 13404              	.LBB1366:
 13405              	.LBB951:
1376:src/keys.c    **** 			}
 13406              		.loc 1 1376 12 view .LVU4107
 13407 1ab0 40F23464 		movw	r4, #1588
 13408 1ab4 FFF729B9 		b	.L899
 13409              	.LVL1132:
 13410              	.L1060:
1347:src/keys.c    **** 		  if (shift == SHIFT_F ) {
 13411              		.loc 1 1347 5 is_stmt 1 view .LVU4108
 13412              	.LBB906:
 13413              	.LBI906:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13414              		.loc 1 114 13 view .LVU4109
 13415              	.LBE906:
 13416              	.LBE951:
 13417              	.LBE1366:
 13418              	.LBE1423:
 13419              	.LBE1500:
 115:src/keys.c    **** }
 13420              		.loc 1 115 2 view .LVU4110
 13421              	.LBB1501:
 13422              	.LBB1424:
 13423              	.LBB1367:
 13424              	.LBB952:
 13425              	.LBB913:
ARM GAS  /tmp/cc6xzGMw.s 			page 369


 13426              	.LBB907:
 13427              	.LBI907:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13428              		.loc 1 104 20 view .LVU4111
 13429              	.LBB908:
 105:src/keys.c    **** 	State2.shifts = shift;
 13430              		.loc 1 105 2 view .LVU4112
 13431              	.LBB909:
 13432              	.LBI909:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13433              		.loc 1 96 13 view .LVU4113
 13434              	.LBB910:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13435              		.loc 1 97 2 view .LVU4114
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13436              		.loc 1 97 18 is_stmt 0 view .LVU4115
 13437 1ab8 FFF7FEFF 		bl	shift_down
 13438              	.LVL1133:
  98:src/keys.c    **** }
 13439              		.loc 1 98 2 is_stmt 1 view .LVU4116
 13440              	.LBE910:
 13441              	.LBE909:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13442              		.loc 1 106 2 view .LVU4117
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13443              		.loc 1 106 16 is_stmt 0 view .LVU4118
 13444 1abc 0023     		movs	r3, #0
 13445              	.LBE908:
 13446              	.LBE907:
 13447              	.LBE913:
1348:src/keys.c    **** 		    return OP_NIL | OP_C_MIM;
 13448              		.loc 1 1348 8 view .LVU4119
 13449 1abe BBF1010F 		cmp	fp, #1
 13450              	.LBB914:
 13451              	.LBB912:
 13452              	.LBB911:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13453              		.loc 1 106 16 view .LVU4120
 13454 1ac2 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13455              		.loc 1 108 2 is_stmt 1 view .LVU4121
 13456              	.LVL1134:
 108:src/keys.c    **** }
 13457              		.loc 1 108 2 is_stmt 0 view .LVU4122
 13458              	.LBE911:
 13459              	.LBE912:
 13460              	.LBE914:
1348:src/keys.c    **** 		    return OP_NIL | OP_C_MIM;
 13461              		.loc 1 1348 5 is_stmt 1 view .LVU4123
1348:src/keys.c    **** 		    return OP_NIL | OP_C_MIM;
 13462              		.loc 1 1348 8 is_stmt 0 view .LVU4124
 13463 1ac6 27D0     		beq	.L1069
1351:src/keys.c    **** 		    return OP_NIL | OP_C_MRE;
 13464              		.loc 1 1351 10 is_stmt 1 view .LVU4125
1351:src/keys.c    **** 		    return OP_NIL | OP_C_MRE;
 13465              		.loc 1 1351 13 is_stmt 0 view .LVU4126
 13466 1ac8 BBF1030F 		cmp	fp, #3
ARM GAS  /tmp/cc6xzGMw.s 			page 370


 13467 1acc 7FF472AF 		bne	.L1068
 13468              	.LVL1135:
1351:src/keys.c    **** 		    return OP_NIL | OP_C_MRE;
 13469              		.loc 1 1351 13 view .LVU4127
 13470              	.LBE952:
 13471              	.LBE1367:
 13472              	.LBE1424:
 13473              	.LBE1501:
3631:src/keys.c    **** 	NonProgrammable = 0;
 13474              		.loc 1 3631 7 is_stmt 1 view .LVU4128
3631:src/keys.c    **** 	NonProgrammable = 0;
 13475              		.loc 1 3631 11 is_stmt 0 view .LVU4129
 13476 1ad0 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3631:src/keys.c    **** 	NonProgrammable = 0;
 13477              		.loc 1 3631 10 view .LVU4130
 13478 1ad4 5006     		lsls	r0, r2, #25
 13479 1ad6 1BD5     		bpl	.L1162
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13480              		.loc 1 3632 2 is_stmt 1 view .LVU4131
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13481              		.loc 1 3632 18 is_stmt 0 view .LVU4132
 13482 1ad8 C24A     		ldr	r2, .L1420
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13483              		.loc 1 3633 32 view .LVU4133
 13484 1ada 4FF4E270 		mov	r0, #452
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13485              		.loc 1 3632 18 view .LVU4134
 13486 1ade 1360     		str	r3, [r2]
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13487              		.loc 1 3633 2 is_stmt 1 view .LVU4135
 13488 1ae0 FEF782BD 		b	.L1106
 13489              	.LVL1136:
 13490              	.L1061:
 13491              	.LBB1502:
 13492              	.LBB1425:
 13493              	.LBB1368:
 13494              	.LBB953:
1327:src/keys.c    **** 				reset_shift();
 13495              		.loc 1 1327 4 view .LVU4136
1327:src/keys.c    **** 				reset_shift();
 13496              		.loc 1 1327 25 is_stmt 0 view .LVU4137
 13497 1ae4 0BF1FF33 		add	r3, fp, #-1
1327:src/keys.c    **** 				reset_shift();
 13498              		.loc 1 1327 7 view .LVU4138
 13499 1ae8 DBB2     		uxtb	r3, r3
 13500 1aea 012B     		cmp	r3, #1
 13501 1aec 7FF679AF 		bls	.L1121
1332:src/keys.c    **** 				return process_cmplx(c); // complex exchange of (x,y) with register
 13502              		.loc 1 1332 9 is_stmt 1 view .LVU4139
1332:src/keys.c    **** 				return process_cmplx(c); // complex exchange of (x,y) with register
 13503              		.loc 1 1332 12 is_stmt 0 view .LVU4140
 13504 1af0 BBF1030F 		cmp	fp, #3
 13505 1af4 7FF45EAF 		bne	.L1068
1333:src/keys.c    **** 			}
 13506              		.loc 1 1333 5 is_stmt 1 view .LVU4141
1333:src/keys.c    **** 			}
 13507              		.loc 1 1333 12 is_stmt 0 view .LVU4142
ARM GAS  /tmp/cc6xzGMw.s 			page 371


 13508 1af8 0D20     		movs	r0, #13
 13509 1afa FFF7FEFF 		bl	process_cmplx
 13510              	.LVL1137:
 13511 1afe 0446     		mov	r4, r0
 13512              	.LVL1138:
1333:src/keys.c    **** 			}
 13513              		.loc 1 1333 12 view .LVU4143
 13514 1b00 FEF76EBC 		b	.L835
 13515              	.LVL1139:
 13516              	.L1076:
1333:src/keys.c    **** 			}
 13517              		.loc 1 1333 12 view .LVU4144
 13518              	.LBE953:
 13519              	.LBE1368:
 13520              	.LBE1425:
 13521              	.LBE1502:
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13522              		.loc 1 3632 2 is_stmt 1 view .LVU4145
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13523              		.loc 1 3632 18 is_stmt 0 view .LVU4146
 13524 1b04 B74A     		ldr	r2, .L1420
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13525              		.loc 1 3633 32 view .LVU4147
 13526 1b06 40F23460 		movw	r0, #1588
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13527              		.loc 1 3632 18 view .LVU4148
 13528 1b0a 1360     		str	r3, [r2]
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13529              		.loc 1 3633 2 is_stmt 1 view .LVU4149
 13530 1b0c FEF76CBD 		b	.L1106
 13531              	.LVL1140:
 13532              	.L1162:
 13533              	.LBB1503:
 13534              	.LBB1426:
 13535              	.LBB1369:
 13536              	.LBB954:
1352:src/keys.c    **** 		  }
 13537              		.loc 1 1352 14 is_stmt 0 view .LVU4150
 13538 1b10 4FF4E274 		mov	r4, #452
 13539 1b14 FFF7F9B8 		b	.L899
 13540              	.LVL1141:
 13541              	.L1069:
1352:src/keys.c    **** 		  }
 13542              		.loc 1 1352 14 view .LVU4151
 13543              	.LBE954:
 13544              	.LBE1369:
 13545              	.LBE1426:
 13546              	.LBE1503:
3631:src/keys.c    **** 	NonProgrammable = 0;
 13547              		.loc 1 3631 7 is_stmt 1 view .LVU4152
3631:src/keys.c    **** 	NonProgrammable = 0;
 13548              		.loc 1 3631 11 is_stmt 0 view .LVU4153
 13549 1b18 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3631:src/keys.c    **** 	NonProgrammable = 0;
 13550              		.loc 1 3631 10 view .LVU4154
 13551 1b1c 5406     		lsls	r4, r2, #25
 13552 1b1e 24D5     		bpl	.L1161
ARM GAS  /tmp/cc6xzGMw.s 			page 372


3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13553              		.loc 1 3632 2 is_stmt 1 view .LVU4155
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13554              		.loc 1 3632 18 is_stmt 0 view .LVU4156
 13555 1b20 B04A     		ldr	r2, .L1420
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13556              		.loc 1 3633 32 view .LVU4157
 13557 1b22 40F2C310 		movw	r0, #451
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13558              		.loc 1 3632 18 view .LVU4158
 13559 1b26 1360     		str	r3, [r2]
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13560              		.loc 1 3633 2 is_stmt 1 view .LVU4159
 13561 1b28 FEF75EBD 		b	.L1106
 13562              	.LVL1142:
 13563              	.L1056:
 13564              	.LBB1504:
 13565              	.LBB1427:
 13566              	.LBB1370:
 13567              	.LBB955:
1365:src/keys.c    **** 				reset_shift();
 13568              		.loc 1 1365 4 view .LVU4160
1365:src/keys.c    **** 				reset_shift();
 13569              		.loc 1 1365 7 is_stmt 0 view .LVU4161
 13570 1b2c BBF1030F 		cmp	fp, #3
 13571 1b30 33D0     		beq	.L1400
1370:src/keys.c    **** 			}
 13572              		.loc 1 1370 5 is_stmt 1 view .LVU4162
1370:src/keys.c    **** 			}
 13573              		.loc 1 1370 12 is_stmt 0 view .LVU4163
 13574 1b32 1C20     		movs	r0, #28
 13575 1b34 FFF7FEFF 		bl	process_cmplx
 13576              	.LVL1143:
 13577 1b38 0446     		mov	r4, r0
 13578              	.LVL1144:
1370:src/keys.c    **** 			}
 13579              		.loc 1 1370 12 view .LVU4164
 13580 1b3a FEF751BC 		b	.L835
 13581              	.LVL1145:
 13582              	.L1065:
1370:src/keys.c    **** 			}
 13583              		.loc 1 1370 12 view .LVU4165
 13584              	.LBE955:
 13585              	.LBE1370:
 13586              	.LBE1427:
 13587              	.LBE1504:
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13588              		.loc 1 3632 2 is_stmt 1 view .LVU4166
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13589              		.loc 1 3632 18 is_stmt 0 view .LVU4167
 13590 1b3e A94B     		ldr	r3, .L1420
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13591              		.loc 1 3633 32 view .LVU4168
 13592 1b40 43F26510 		movw	r0, #12645
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13593              		.loc 1 3632 18 view .LVU4169
 13594 1b44 1A60     		str	r2, [r3]
ARM GAS  /tmp/cc6xzGMw.s 			page 373


3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13595              		.loc 1 3633 2 is_stmt 1 view .LVU4170
 13596 1b46 FEF74FBD 		b	.L1106
 13597              	.LVL1146:
 13598              	.L1057:
 13599              	.LBB1505:
 13600              	.LBB1428:
 13601              	.LBB1371:
 13602              	.LBB956:
1337:src/keys.c    **** 				SET_RECTANGULAR_DISPLAY;
 13603              		.loc 1 1337 4 view .LVU4171
1337:src/keys.c    **** 				SET_RECTANGULAR_DISPLAY;
 13604              		.loc 1 1337 7 is_stmt 0 view .LVU4172
 13605 1b4a BBF1010F 		cmp	fp, #1
 13606 1b4e 10D0     		beq	.L1401
1340:src/keys.c    **** 				SET_POLAR_DISPLAY;
 13607              		.loc 1 1340 9 is_stmt 1 view .LVU4173
1340:src/keys.c    **** 				SET_POLAR_DISPLAY;
 13608              		.loc 1 1340 12 is_stmt 0 view .LVU4174
 13609 1b50 BBF1020F 		cmp	fp, #2
 13610 1b54 7FF42EAF 		bne	.L1068
1341:src/keys.c    **** 				CLEAR_POLAR_READY;
 13611              		.loc 1 1341 5 is_stmt 1 view .LVU4175
 13612 1b58 DAF80020 		ldr	r2, [r10]
1342:src/keys.c    **** 				update_speed(0); // new polar display calculated from keyboard needs a speed boost
 13613              		.loc 1 1342 5 view .LVU4176
1341:src/keys.c    **** 				CLEAR_POLAR_READY;
 13614              		.loc 1 1341 5 is_stmt 0 view .LVU4177
 13615 1b5c B2F8AC37 		ldrh	r3, [r2, #1964]
 13616 1b60 43F4C073 		orr	r3, r3, #384
 13617 1b64 A2F8AC37 		strh	r3, [r2, #1964]	@ movhi
 13618 1b68 24E7     		b	.L1068
 13619              	.LVL1147:
 13620              	.L1161:
1349:src/keys.c    **** 		  }
 13621              		.loc 1 1349 14 view .LVU4178
 13622 1b6a 40F2C314 		movw	r4, #451
 13623 1b6e FFF7CCB8 		b	.L899
 13624              	.LVL1148:
 13625              	.L1401:
1338:src/keys.c    **** 			}
 13626              		.loc 1 1338 5 is_stmt 1 view .LVU4179
 13627 1b72 DAF80030 		ldr	r3, [r10]
 13628 1b76 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
 13629 1b7a 6FF3C712 		bfc	r2, #7, #1
 13630 1b7e 83F8AC27 		strb	r2, [r3, #1964]
 13631 1b82 17E7     		b	.L1068
 13632              	.L1398:
 13633              	.LVL1149:
1338:src/keys.c    **** 			}
 13634              		.loc 1 1338 5 is_stmt 0 view .LVU4180
 13635              	.LBE956:
 13636              	.LBE1371:
 13637              	.LBE1428:
 13638              	.LBE1505:
3631:src/keys.c    **** 	NonProgrammable = 0;
 13639              		.loc 1 3631 7 is_stmt 1 view .LVU4181
ARM GAS  /tmp/cc6xzGMw.s 			page 374


3631:src/keys.c    **** 	NonProgrammable = 0;
 13640              		.loc 1 3631 11 is_stmt 0 view .LVU4182
 13641 1b84 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3631:src/keys.c    **** 	NonProgrammable = 0;
 13642              		.loc 1 3631 10 view .LVU4183
 13643 1b88 5D06     		lsls	r5, r3, #25
 13644 1b8a 15D5     		bpl	.L1107
 13645              	.LVL1150:
 13646              	.L1105:
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13647              		.loc 1 3632 2 is_stmt 1 view .LVU4184
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13648              		.loc 1 3632 18 is_stmt 0 view .LVU4185
 13649 1b8c 954B     		ldr	r3, .L1420
 13650 1b8e 0022     		movs	r2, #0
 13651 1b90 1A60     		str	r2, [r3]
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13652              		.loc 1 3633 2 is_stmt 1 view .LVU4186
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13653              		.loc 1 3633 32 is_stmt 0 view .LVU4187
 13654 1b92 4FF48170 		mov	r0, #258
 13655 1b96 FEF727BD 		b	.L1106
 13656              	.LVL1151:
 13657              	.L1400:
 13658              	.LBB1506:
 13659              	.LBB1429:
 13660              	.LBB1372:
 13661              	.LBB957:
1366:src/keys.c    **** 				return OP_CDYA | OP_CDOT;
 13662              		.loc 1 1366 5 is_stmt 1 view .LVU4188
 13663              	.LBB915:
 13664              	.LBI915:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13665              		.loc 1 114 13 view .LVU4189
 13666              	.LBE915:
 13667              	.LBE957:
 13668              	.LBE1372:
 13669              	.LBE1429:
 13670              	.LBE1506:
 115:src/keys.c    **** }
 13671              		.loc 1 115 2 view .LVU4190
 13672              	.LBB1507:
 13673              	.LBB1430:
 13674              	.LBB1373:
 13675              	.LBB958:
 13676              	.LBB924:
 13677              	.LBB916:
 13678              	.LBI916:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13679              		.loc 1 104 20 view .LVU4191
 13680              	.LBB917:
 105:src/keys.c    **** 	State2.shifts = shift;
 13681              		.loc 1 105 2 view .LVU4192
 13682              	.LBB918:
 13683              	.LBI918:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13684              		.loc 1 96 13 view .LVU4193
ARM GAS  /tmp/cc6xzGMw.s 			page 375


 13685              	.LBB919:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13686              		.loc 1 97 2 view .LVU4194
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13687              		.loc 1 97 18 is_stmt 0 view .LVU4195
 13688 1b9a FFF7FEFF 		bl	shift_down
 13689              	.LVL1152:
  98:src/keys.c    **** }
 13690              		.loc 1 98 2 is_stmt 1 view .LVU4196
 13691              	.LBE919:
 13692              	.LBE918:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13693              		.loc 1 106 2 view .LVU4197
 13694              	.LBE917:
 13695              	.LBE916:
 13696              	.LBE924:
 13697              	.LBE958:
 13698              	.LBE1373:
 13699              	.LBE1430:
 13700              	.LBE1507:
3631:src/keys.c    **** 	NonProgrammable = 0;
 13701              		.loc 1 3631 11 is_stmt 0 view .LVU4198
 13702 1b9e 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 13703              	.LBB1508:
 13704              	.LBB1431:
 13705              	.LBB1374:
 13706              	.LBB959:
 13707              	.LBB925:
 13708              	.LBB922:
 13709              	.LBB920:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13710              		.loc 1 106 16 view .LVU4199
 13711 1ba2 0023     		movs	r3, #0
 13712              	.LBE920:
 13713              	.LBE922:
 13714              	.LBE925:
 13715              	.LBE959:
 13716              	.LBE1374:
 13717              	.LBE1431:
 13718              	.LBE1508:
3631:src/keys.c    **** 	NonProgrammable = 0;
 13719              		.loc 1 3631 10 view .LVU4200
 13720 1ba4 5406     		lsls	r4, r2, #25
 13721              	.LVL1153:
 13722              	.LBB1509:
 13723              	.LBB1432:
 13724              	.LBB1375:
 13725              	.LBB960:
 13726              	.LBB926:
 13727              	.LBB923:
 13728              	.LBB921:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13729              		.loc 1 106 16 view .LVU4201
 13730 1ba6 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13731              		.loc 1 108 2 is_stmt 1 view .LVU4202
 13732              	.LVL1154:
ARM GAS  /tmp/cc6xzGMw.s 			page 376


 108:src/keys.c    **** }
 13733              		.loc 1 108 2 is_stmt 0 view .LVU4203
 13734              	.LBE921:
 13735              	.LBE923:
 13736              	.LBE926:
1367:src/keys.c    **** 			}
 13737              		.loc 1 1367 5 is_stmt 1 view .LVU4204
1367:src/keys.c    **** 			}
 13738              		.loc 1 1367 5 is_stmt 0 view .LVU4205
 13739              	.LBE960:
 13740              	.LBE1375:
 13741              	.LBE1432:
 13742              	.LBE1509:
3631:src/keys.c    **** 	NonProgrammable = 0;
 13743              		.loc 1 3631 7 is_stmt 1 view .LVU4206
3631:src/keys.c    **** 	NonProgrammable = 0;
 13744              		.loc 1 3631 10 is_stmt 0 view .LVU4207
 13745 1baa 09D4     		bmi	.L1074
 13746              	.LBB1510:
 13747              	.LBB1433:
 13748              	.LBB1376:
 13749              	.LBB961:
1367:src/keys.c    **** 			}
 13750              		.loc 1 1367 12 view .LVU4208
 13751 1bac 40F23364 		movw	r4, #1587
 13752 1bb0 FFF7ABB8 		b	.L899
 13753              	.LVL1155:
 13754              	.L1034:
1367:src/keys.c    **** 			}
 13755              		.loc 1 1367 12 view .LVU4209
 13756              	.LBE961:
 13757              	.LBE1376:
 13758              	.LBE1433:
 13759              	.LBE1510:
3631:src/keys.c    **** 	NonProgrammable = 0;
 13760              		.loc 1 3631 7 is_stmt 1 view .LVU4210
3631:src/keys.c    **** 	NonProgrammable = 0;
 13761              		.loc 1 3631 10 is_stmt 0 view .LVU4211
 13762 1bb4 4906     		lsls	r1, r1, #25
 13763 1bb6 E9D4     		bmi	.L1105
 13764              	.LVL1156:
 13765              	.L1107:
 13766              	.LBB1511:
 13767              	.LBB1434:
 13768              	.LBB1377:
 13769              	.LBB1023:
1867:src/keys.c    **** 		else if (shift == SHIFT_N) {
 13770              		.loc 1 1867 11 view .LVU4212
 13771 1bb8 4FF48174 		mov	r4, #258
 13772 1bbc FFF7A5B8 		b	.L899
 13773              	.LVL1157:
 13774              	.L1074:
1867:src/keys.c    **** 		else if (shift == SHIFT_N) {
 13775              		.loc 1 1867 11 view .LVU4213
 13776              	.LBE1023:
 13777              	.LBE1377:
 13778              	.LBE1434:
ARM GAS  /tmp/cc6xzGMw.s 			page 377


 13779              	.LBE1511:
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13780              		.loc 1 3632 2 is_stmt 1 view .LVU4214
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13781              		.loc 1 3632 18 is_stmt 0 view .LVU4215
 13782 1bc0 884A     		ldr	r2, .L1420
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13783              		.loc 1 3633 32 view .LVU4216
 13784 1bc2 40F23360 		movw	r0, #1587
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13785              		.loc 1 3632 18 view .LVU4217
 13786 1bc6 1360     		str	r3, [r2]
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13787              		.loc 1 3633 2 is_stmt 1 view .LVU4218
 13788 1bc8 FEF70EBD 		b	.L1106
 13789              	.LVL1158:
 13790              	.L1010:
 13791              	.LBB1512:
 13792              	.LBB1435:
 13793              	.LBB1378:
 13794              	.LBB1024:
1878:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 13795              		.loc 1 1878 3 view .LVU4219
1878:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 13796              		.loc 1 1878 6 is_stmt 0 view .LVU4220
 13797 1bcc 0128     		cmp	r0, #1
 13798 1bce 7FF47EAB 		bne	.L1009
 13799              	.LVL1159:
1878:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 13800              		.loc 1 1878 6 view .LVU4221
 13801              	.LBE1024:
 13802              	.LBE1378:
 13803              	.LBE1435:
 13804              	.LBE1512:
3631:src/keys.c    **** 	NonProgrammable = 0;
 13805              		.loc 1 3631 7 is_stmt 1 view .LVU4222
3631:src/keys.c    **** 	NonProgrammable = 0;
 13806              		.loc 1 3631 10 is_stmt 0 view .LVU4223
 13807 1bd2 4A06     		lsls	r2, r1, #25
 13808              	.LVL1160:
3631:src/keys.c    **** 	NonProgrammable = 0;
 13809              		.loc 1 3631 10 view .LVU4224
 13810 1bd4 1AD5     		bpl	.L1159
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13811              		.loc 1 3632 2 is_stmt 1 view .LVU4225
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13812              		.loc 1 3632 18 is_stmt 0 view .LVU4226
 13813 1bd6 834B     		ldr	r3, .L1420
 13814 1bd8 0022     		movs	r2, #0
 13815 1bda 1A60     		str	r2, [r3]
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13816              		.loc 1 3633 2 is_stmt 1 view .LVU4227
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13817              		.loc 1 3633 32 is_stmt 0 view .LVU4228
 13818 1bdc 40F23B10 		movw	r0, #315
 13819              	.LVL1161:
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
ARM GAS  /tmp/cc6xzGMw.s 			page 378


 13820              		.loc 1 3633 32 view .LVU4229
 13821 1be0 FEF702BD 		b	.L1106
 13822              	.LVL1162:
 13823              	.L1012:
 13824              	.LBB1513:
 13825              	.LBB1436:
 13826              	.LBB1379:
 13827              	.LBB1025:
1864:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 13828              		.loc 1 1864 3 is_stmt 1 view .LVU4230
1864:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 13829              		.loc 1 1864 6 is_stmt 0 view .LVU4231
 13830 1be4 0128     		cmp	r0, #1
 13831 1be6 3FF4F4AD 		beq	.L1314
1866:src/keys.c    **** 			return OP_NIL | OP_OFF;
 13832              		.loc 1 1866 8 is_stmt 1 view .LVU4232
1866:src/keys.c    **** 			return OP_NIL | OP_OFF;
 13833              		.loc 1 1866 11 is_stmt 0 view .LVU4233
 13834 1bea 0328     		cmp	r0, #3
 13835 1bec E2D0     		beq	.L1034
1868:src/keys.c    **** #ifdef DM42
 13836              		.loc 1 1868 8 is_stmt 1 view .LVU4234
1868:src/keys.c    **** #ifdef DM42
 13837              		.loc 1 1868 11 is_stmt 0 view .LVU4235
 13838 1bee 0028     		cmp	r0, #0
 13839 1bf0 7EF47BAD 		bne	.L1313
1870:src/keys.c    **** 		  display_current_menu();
 13840              		.loc 1 1870 5 is_stmt 1 view .LVU4236
 13841 1bf4 4FF0FF30 		mov	r0, #-1
 13842              	.LVL1163:
1870:src/keys.c    **** 		  display_current_menu();
 13843              		.loc 1 1870 5 is_stmt 0 view .LVU4237
 13844 1bf8 FFF7FEFF 		bl	set_menu
 13845              	.LVL1164:
1871:src/keys.c    **** #endif
 13846              		.loc 1 1871 5 is_stmt 1 view .LVU4238
1875:src/keys.c    **** 
 13847              		.loc 1 1875 10 is_stmt 0 view .LVU4239
 13848 1bfc 3324     		movs	r4, #51
1871:src/keys.c    **** #endif
 13849              		.loc 1 1871 5 view .LVU4240
 13850 1bfe FFF7FEFF 		bl	display_current_menu
 13851              	.LVL1165:
1873:src/keys.c    **** 		}
 13852              		.loc 1 1873 5 is_stmt 1 view .LVU4241
 13853 1c02 FFF7FEFF 		bl	init_state
 13854              	.LVL1166:
 13855 1c06 3368     		ldr	r3, [r6]
 13856 1c08 FEF755BA 		b	.L801
 13857              	.LVL1167:
 13858              	.L1159:
1879:src/keys.c    **** 		break;
 13859              		.loc 1 1879 11 is_stmt 0 view .LVU4242
 13860 1c0c 40F23B14 		movw	r4, #315
 13861 1c10 FFF77BB8 		b	.L899
 13862              	.LVL1168:
 13863              	.L1013:
ARM GAS  /tmp/cc6xzGMw.s 			page 379


1852:src/keys.c    **** 	    if ( State2.runmode ) {
 13864              		.loc 1 1852 4 is_stmt 1 view .LVU4243
1852:src/keys.c    **** 	    if ( State2.runmode ) {
 13865              		.loc 1 1852 7 is_stmt 0 view .LVU4244
 13866 1c14 0028     		cmp	r0, #0
 13867 1c16 7FF45AAB 		bne	.L1009
1853:src/keys.c    **** 	      // Alpha scroll right
 13868              		.loc 1 1853 6 is_stmt 1 view .LVU4245
1853:src/keys.c    **** 	      // Alpha scroll right
 13869              		.loc 1 1853 9 is_stmt 0 view .LVU4246
 13870 1c1a 4906     		lsls	r1, r1, #25
 13871 1c1c 7EF555AC 		bpl	.L1031
1855:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
 13872              		.loc 1 1855 8 is_stmt 1 view .LVU4247
1855:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
 13873              		.loc 1 1855 11 is_stmt 0 view .LVU4248
 13874 1c20 B9F1000F 		cmp	r9, #0
 13875 1c24 3EF461AD 		beq	.L1313
1856:src/keys.c    **** 	      return STATE_UNFINISHED;
 13876              		.loc 1 1856 3 is_stmt 1 view .LVU4249
1856:src/keys.c    **** 	      return STATE_UNFINISHED;
 13877              		.loc 1 1856 31 is_stmt 0 view .LVU4250
 13878 1c28 09F1FF33 		add	r3, r9, #-1
1856:src/keys.c    **** 	      return STATE_UNFINISHED;
 13879              		.loc 1 1856 20 view .LVU4251
 13880 1c2c 88F80D30 		strb	r3, [r8, #13]
1857:src/keys.c    **** 	    }
 13881              		.loc 1 1857 15 view .LVU4252
 13882 1c30 3324     		movs	r4, #51
 13883 1c32 3368     		ldr	r3, [r6]
 13884 1c34 FEF73FBA 		b	.L801
 13885              	.L1014:
1823:src/keys.c    **** 	    if ( State2.runmode ) {
 13886              		.loc 1 1823 4 is_stmt 1 view .LVU4253
1823:src/keys.c    **** 	    if ( State2.runmode ) {
 13887              		.loc 1 1823 7 is_stmt 0 view .LVU4254
 13888 1c38 0028     		cmp	r0, #0
 13889 1c3a 7FF448AB 		bne	.L1009
1824:src/keys.c    **** 	      // Alpha scroll left
 13890              		.loc 1 1824 6 is_stmt 1 view .LVU4255
1824:src/keys.c    **** 	      // Alpha scroll left
 13891              		.loc 1 1824 9 is_stmt 0 view .LVU4256
 13892 1c3e 4806     		lsls	r0, r1, #25
 13893              	.LVL1169:
1824:src/keys.c    **** 	      // Alpha scroll left
 13894              		.loc 1 1824 9 view .LVU4257
 13895 1c40 7EF53BAC 		bpl	.L1027
1832:src/keys.c    **** 		alpha_pos += 1;
 13896              		.loc 1 1832 8 is_stmt 1 view .LVU4258
1832:src/keys.c    **** 		alpha_pos += 1;
 13897              		.loc 1 1832 11 is_stmt 0 view .LVU4259
 13898 1c44 B9F1000F 		cmp	r9, #0
 13899 1c48 64D1     		bne	.L1028
 13900              	.LVL1170:
 13901              	.L1030:
1833:src/keys.c    **** 	      }
 13902              		.loc 1 1833 3 is_stmt 1 view .LVU4260
ARM GAS  /tmp/cc6xzGMw.s 			page 380


1833:src/keys.c    **** 	      }
 13903              		.loc 1 1833 13 is_stmt 0 view .LVU4261
 13904 1c4a 09F1010A 		add	r10, r9, #1
 13905              	.LVL1171:
 13906              	.L1029:
1840:src/keys.c    **** #else
 13907              		.loc 1 1840 8 is_stmt 1 view .LVU4262
 13908 1c4e 3368     		ldr	r3, [r6]
1840:src/keys.c    **** #else
 13909              		.loc 1 1840 25 is_stmt 0 view .LVU4263
 13910 1c50 88F80DA0 		strb	r10, [r8, #13]
1845:src/keys.c    **** 	    }
 13911              		.loc 1 1845 8 is_stmt 1 view .LVU4264
1845:src/keys.c    **** 	    }
 13912              		.loc 1 1845 15 is_stmt 0 view .LVU4265
 13913 1c54 3324     		movs	r4, #51
 13914 1c56 FEF72EBA 		b	.L801
 13915              	.LVL1172:
 13916              	.L1025:
1818:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 13917              		.loc 1 1818 3 is_stmt 1 view .LVU4266
1818:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 13918              		.loc 1 1818 6 is_stmt 0 view .LVU4267
 13919 1c5a 0328     		cmp	r0, #3
 13920 1c5c 7FF437AB 		bne	.L1009
 13921              	.LVL1173:
1818:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 13922              		.loc 1 1818 6 view .LVU4268
 13923              	.LBE1025:
 13924              	.LBE1379:
 13925              	.LBE1436:
 13926              	.LBE1513:
3631:src/keys.c    **** 	NonProgrammable = 0;
 13927              		.loc 1 3631 7 is_stmt 1 view .LVU4269
3631:src/keys.c    **** 	NonProgrammable = 0;
 13928              		.loc 1 3631 10 is_stmt 0 view .LVU4270
 13929 1c60 4B06     		lsls	r3, r1, #25
 13930 1c62 53D5     		bpl	.L1165
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13931              		.loc 1 3632 2 is_stmt 1 view .LVU4271
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13932              		.loc 1 3632 18 is_stmt 0 view .LVU4272
 13933 1c64 5F4B     		ldr	r3, .L1420
 13934 1c66 0022     		movs	r2, #0
 13935              	.LVL1174:
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13936              		.loc 1 3632 18 view .LVU4273
 13937 1c68 1A60     		str	r2, [r3]
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13938              		.loc 1 3633 2 is_stmt 1 view .LVU4274
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13939              		.loc 1 3633 32 is_stmt 0 view .LVU4275
 13940 1c6a 4FF4BA70 		mov	r0, #372
 13941              	.LVL1175:
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13942              		.loc 1 3633 32 view .LVU4276
 13943 1c6e FEF7BBBC 		b	.L1106
ARM GAS  /tmp/cc6xzGMw.s 			page 381


 13944              	.LVL1176:
 13945              	.L1017:
 13946              	.LBB1514:
 13947              	.LBB1437:
 13948              	.LBB1380:
 13949              	.LBB1026:
1789:src/keys.c    **** 			init_arg(RARG_ARCL);
 13950              		.loc 1 1789 3 is_stmt 1 view .LVU4277
1789:src/keys.c    **** 			init_arg(RARG_ARCL);
 13951              		.loc 1 1789 6 is_stmt 0 view .LVU4278
 13952 1c72 0128     		cmp	r0, #1
 13953 1c74 57D0     		beq	.L1402
1792:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 13954              		.loc 1 1792 10 is_stmt 1 view .LVU4279
1792:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 13955              		.loc 1 1792 13 is_stmt 0 view .LVU4280
 13956 1c76 0328     		cmp	r0, #3
 13957 1c78 7FF429AB 		bne	.L1009
1793:src/keys.c    **** 			return STATE_UNFINISHED;
 13958              		.loc 1 1793 4 is_stmt 1 view .LVU4281
 13959              	.LVL1177:
 13960              	.LBB1008:
 13961              	.LBI1008:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 13962              		.loc 1 552 13 view .LVU4282
 13963              	.LBB1009:
 553:src/keys.c    **** 		return;
 13964              		.loc 1 553 2 view .LVU4283
 553:src/keys.c    **** 		return;
 13965              		.loc 1 553 6 is_stmt 0 view .LVU4284
 13966 1c7c FFF7FEFF 		bl	is_bad_cmdline
 13967              	.LVL1178:
 553:src/keys.c    **** 		return;
 13968              		.loc 1 553 5 view .LVU4285
 13969 1c80 0346     		mov	r3, r0
 13970 1c82 0028     		cmp	r0, #0
 13971 1c84 7EF431AD 		bne	.L1313
 13972 1c88 7320     		movs	r0, #115
 13973              	.LBE1009:
 13974              	.LBE1008:
 13975              	.LBE1026:
 13976              	.LBE1380:
 13977              	.LBE1437:
 13978              	.LBE1514:
3405:src/keys.c    ****   //print_debug(60,c);
 13979              		.loc 1 3405 7 view .LVU4286
 13980 1c8a 1D46     		mov	r5, r3
 13981              	.LBB1515:
 13982              	.LBB1438:
 13983              	.LBB1381:
 13984              	.LBB1027:
1794:src/keys.c    **** 		}
 13985              		.loc 1 1794 11 view .LVU4287
 13986 1c8c 3324     		movs	r4, #51
 13987              	.LBB1011:
 13988              	.LBB1010:
 13989 1c8e FFF7FEFF 		bl	init_arg.part.0
ARM GAS  /tmp/cc6xzGMw.s 			page 382


 13990              	.LVL1179:
 13991 1c92 3368     		ldr	r3, [r6]
 13992 1c94 FEF70FBA 		b	.L801
 13993              	.LVL1180:
 13994              	.L1016:
1794:src/keys.c    **** 		}
 13995              		.loc 1 1794 11 view .LVU4288
 13996              	.LBE1010:
 13997              	.LBE1011:
1799:src/keys.c    **** 			break;
 13998              		.loc 1 1799 3 is_stmt 1 view .LVU4289
1799:src/keys.c    **** 			break;
 13999              		.loc 1 1799 24 is_stmt 0 view .LVU4290
 14000 1c98 831E     		subs	r3, r0, #2
1799:src/keys.c    **** 			break;
 14001              		.loc 1 1799 6 view .LVU4291
 14002 1c9a DBB2     		uxtb	r3, r3
 14003 1c9c 012B     		cmp	r3, #1
 14004 1c9e 7FF616AB 		bls	.L1009
1801:src/keys.c    **** 			State2.multi = 1;
 14005              		.loc 1 1801 3 is_stmt 1 view .LVU4292
1801:src/keys.c    **** 			State2.multi = 1;
 14006              		.loc 1 1801 6 is_stmt 0 view .LVU4293
 14007 1ca2 0128     		cmp	r0, #1
 14008 1ca4 02D1     		bne	.L1023
1801:src/keys.c    **** 			State2.multi = 1;
 14009              		.loc 1 1801 24 view .LVU4294
 14010 1ca6 11F04001 		ands	r1, r1, #64
 14011 1caa 0FD0     		beq	.L1403
 14012              	.L1023:
1807:src/keys.c    **** 		State2.alphashift = 0;
 14013              		.loc 1 1807 3 is_stmt 1 view .LVU4295
1808:src/keys.c    **** #ifdef DM42
 14014              		.loc 1 1808 3 view .LVU4296
1807:src/keys.c    **** 		State2.alphashift = 0;
 14015              		.loc 1 1807 17 is_stmt 0 view .LVU4297
 14016 1cac 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
1810:src/keys.c    **** 		display_current_menu();
 14017              		.loc 1 1810 3 view .LVU4298
 14018 1cb0 4FF0FF30 		mov	r0, #-1
 14019              	.LVL1181:
1807:src/keys.c    **** 		State2.alphashift = 0;
 14020              		.loc 1 1807 17 view .LVU4299
 14021 1cb4 23F01803 		bic	r3, r3, #24
 14022 1cb8 88F81630 		strb	r3, [r8, #22]
1810:src/keys.c    **** 		display_current_menu();
 14023              		.loc 1 1810 3 is_stmt 1 view .LVU4300
1813:src/keys.c    **** 
 14024              		.loc 1 1813 10 is_stmt 0 view .LVU4301
 14025 1cbc 3324     		movs	r4, #51
1810:src/keys.c    **** 		display_current_menu();
 14026              		.loc 1 1810 3 view .LVU4302
 14027 1cbe FFF7FEFF 		bl	set_menu
 14028              	.LVL1182:
1811:src/keys.c    **** #endif
 14029              		.loc 1 1811 3 is_stmt 1 view .LVU4303
 14030 1cc2 FFF7FEFF 		bl	display_current_menu
ARM GAS  /tmp/cc6xzGMw.s 			page 383


 14031              	.LVL1183:
1813:src/keys.c    **** 
 14032              		.loc 1 1813 3 view .LVU4304
 14033 1cc6 3368     		ldr	r3, [r6]
1813:src/keys.c    **** 
 14034              		.loc 1 1813 10 is_stmt 0 view .LVU4305
 14035 1cc8 FEF7F5B9 		b	.L801
 14036              	.LVL1184:
 14037              	.L1403:
1802:src/keys.c    **** 			State2.numdigit = 0;
 14038              		.loc 1 1802 4 is_stmt 1 view .LVU4306
1802:src/keys.c    **** 			State2.numdigit = 0;
 14039              		.loc 1 1802 17 is_stmt 0 view .LVU4307
 14040 1ccc 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 14041              	.LVL1185:
1803:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 14042              		.loc 1 1803 20 view .LVU4308
 14043 1cd0 88F80B10 		strb	r1, [r8, #11]
1802:src/keys.c    **** 			State2.numdigit = 0;
 14044              		.loc 1 1802 17 view .LVU4309
 14045 1cd4 42F00802 		orr	r2, r2, #8
1804:src/keys.c    **** 			return STATE_UNFINISHED;
 14046              		.loc 1 1804 12 view .LVU4310
 14047 1cd8 0A21     		movs	r1, #10
 14048 1cda 3368     		ldr	r3, [r6]
 14049 1cdc 88F81F10 		strb	r1, [r8, #31]
1802:src/keys.c    **** 			State2.numdigit = 0;
 14050              		.loc 1 1802 17 view .LVU4311
 14051 1ce0 88F81520 		strb	r2, [r8, #21]
1803:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 14052              		.loc 1 1803 4 is_stmt 1 view .LVU4312
1804:src/keys.c    **** 			return STATE_UNFINISHED;
 14053              		.loc 1 1804 4 view .LVU4313
1805:src/keys.c    **** 		}
 14054              		.loc 1 1805 4 view .LVU4314
1805:src/keys.c    **** 		}
 14055              		.loc 1 1805 11 is_stmt 0 view .LVU4315
 14056 1ce4 3324     		movs	r4, #51
 14057 1ce6 FEF7E6B9 		b	.L801
 14058              	.LVL1186:
 14059              	.L1018:
1782:src/keys.c    **** 			init_arg(RARG_ASTO);
 14060              		.loc 1 1782 3 is_stmt 1 view .LVU4316
1782:src/keys.c    **** 			init_arg(RARG_ASTO);
 14061              		.loc 1 1782 6 is_stmt 0 view .LVU4317
 14062 1cea 0128     		cmp	r0, #1
 14063 1cec 7FF4EFAA 		bne	.L1009
1783:src/keys.c    **** 			return STATE_UNFINISHED;
 14064              		.loc 1 1783 4 is_stmt 1 view .LVU4318
 14065              	.LVL1187:
 14066              	.LBB1012:
 14067              	.LBI1012:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 14068              		.loc 1 552 13 view .LVU4319
 14069              	.LBB1013:
 553:src/keys.c    **** 		return;
 14070              		.loc 1 553 2 view .LVU4320
ARM GAS  /tmp/cc6xzGMw.s 			page 384


 553:src/keys.c    **** 		return;
 14071              		.loc 1 553 6 is_stmt 0 view .LVU4321
 14072 1cf0 FFF7FEFF 		bl	is_bad_cmdline
 14073              	.LVL1188:
 553:src/keys.c    **** 		return;
 14074              		.loc 1 553 5 view .LVU4322
 14075 1cf4 0346     		mov	r3, r0
 14076 1cf6 0028     		cmp	r0, #0
 14077 1cf8 7EF4F7AC 		bne	.L1313
 14078 1cfc 2620     		movs	r0, #38
 14079              	.LBE1013:
 14080              	.LBE1012:
 14081              	.LBE1027:
 14082              	.LBE1381:
 14083              	.LBE1438:
 14084              	.LBE1515:
3405:src/keys.c    ****   //print_debug(60,c);
 14085              		.loc 1 3405 7 view .LVU4323
 14086 1cfe 1D46     		mov	r5, r3
 14087              	.LBB1516:
 14088              	.LBB1439:
 14089              	.LBB1382:
 14090              	.LBB1028:
1784:src/keys.c    **** 		}
 14091              		.loc 1 1784 11 view .LVU4324
 14092 1d00 3324     		movs	r4, #51
 14093              	.LBB1015:
 14094              	.LBB1014:
 14095 1d02 FFF7FEFF 		bl	init_arg.part.0
 14096              	.LVL1189:
 14097 1d06 3368     		ldr	r3, [r6]
 14098 1d08 FEF7D5B9 		b	.L801
 14099              	.LVL1190:
 14100              	.L1165:
1784:src/keys.c    **** 		}
 14101              		.loc 1 1784 11 view .LVU4325
 14102              	.LBE1014:
 14103              	.LBE1015:
1819:src/keys.c    **** 		break;
 14104              		.loc 1 1819 11 view .LVU4326
 14105 1d0c 4FF4BA74 		mov	r4, #372
 14106 1d10 FEF7FBBF 		b	.L899
 14107              	.LVL1191:
 14108              	.L1028:
1832:src/keys.c    **** 		alpha_pos += 1;
 14109              		.loc 1 1832 33 view .LVU4327
 14110 1d14 FFF7FEFF 		bl	alen
 14111              	.LVL1192:
1832:src/keys.c    **** 		alpha_pos += 1;
 14112              		.loc 1 1832 41 view .LVU4328
 14113 1d18 09EB4903 		add	r3, r9, r9, lsl #1
1832:src/keys.c    **** 		alpha_pos += 1;
 14114              		.loc 1 1832 39 view .LVU4329
 14115 1d1c A0EB4300 		sub	r0, r0, r3, lsl #1
1832:src/keys.c    **** 		alpha_pos += 1;
 14116              		.loc 1 1832 29 view .LVU4330
 14117 1d20 1328     		cmp	r0, #19
ARM GAS  /tmp/cc6xzGMw.s 			page 385


 14118 1d22 92D8     		bhi	.L1030
 14119 1d24 93E7     		b	.L1029
 14120              	.LVL1193:
 14121              	.L1402:
1790:src/keys.c    **** 			return STATE_UNFINISHED;
 14122              		.loc 1 1790 4 is_stmt 1 view .LVU4331
 14123              	.LBB1016:
 14124              	.LBI1016:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 14125              		.loc 1 552 13 view .LVU4332
 14126              	.LBB1017:
 553:src/keys.c    **** 		return;
 14127              		.loc 1 553 2 view .LVU4333
 553:src/keys.c    **** 		return;
 14128              		.loc 1 553 6 is_stmt 0 view .LVU4334
 14129 1d26 FFF7FEFF 		bl	is_bad_cmdline
 14130              	.LVL1194:
 553:src/keys.c    **** 		return;
 14131              		.loc 1 553 5 view .LVU4335
 14132 1d2a 0346     		mov	r3, r0
 14133 1d2c 0028     		cmp	r0, #0
 14134 1d2e 7EF4DCAC 		bne	.L1313
 14135 1d32 2720     		movs	r0, #39
 14136              	.LBE1017:
 14137              	.LBE1016:
 14138              	.LBE1028:
 14139              	.LBE1382:
 14140              	.LBE1439:
 14141              	.LBE1516:
3405:src/keys.c    ****   //print_debug(60,c);
 14142              		.loc 1 3405 7 view .LVU4336
 14143 1d34 1D46     		mov	r5, r3
 14144              	.LBB1517:
 14145              	.LBB1440:
 14146              	.LBB1383:
 14147              	.LBB1029:
1791:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 14148              		.loc 1 1791 11 view .LVU4337
 14149 1d36 3324     		movs	r4, #51
 14150              	.LBB1019:
 14151              	.LBB1018:
 14152 1d38 FFF7FEFF 		bl	init_arg.part.0
 14153              	.LVL1195:
 14154 1d3c 3368     		ldr	r3, [r6]
 14155 1d3e FEF7BAB9 		b	.L801
 14156              	.LVL1196:
 14157              	.L1295:
1791:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 14158              		.loc 1 1791 11 view .LVU4338
 14159              	.LBE1018:
 14160              	.LBE1019:
 14161              	.LBE1029:
 14162              	.LBE1383:
 14163              	.LBE1440:
 14164              	.LBE1517:
3631:src/keys.c    **** 	NonProgrammable = 0;
 14165              		.loc 1 3631 26 discriminator 1 view .LVU4339
ARM GAS  /tmp/cc6xzGMw.s 			page 386


 14166 1d42 1368     		ldr	r3, [r2]
 14167 1d44 002B     		cmp	r3, #0
 14168 1d46 7EF41BAC 		bne	.L1108
 14169 1d4a FEF773BB 		b	.L1109
 14170              	.LVL1197:
 14171              	.L994:
 14172              	.LBB1518:
 14173              	.LBB1441:
 14174              	.LBB1384:
 14175              	.LBB1298:
3166:src/keys.c    **** 		goto reset_window;
 14176              		.loc 1 3166 4 is_stmt 1 view .LVU4340
3166:src/keys.c    **** 		goto reset_window;
 14177              		.loc 1 3166 18 is_stmt 0 view .LVU4341
 14178 1d4e 0023     		movs	r3, #0
 14179 1d50 A8F80830 		strh	r3, [r8, #8]	@ movhi
 14180 1d54 FFF7ECB9 		b	.L983
 14181              	.LVL1198:
 14182              	.L991:
3156:src/keys.c    **** 		goto reset_window;
 14183              		.loc 1 3156 4 is_stmt 1 view .LVU4342
3156:src/keys.c    **** 		goto reset_window;
 14184              		.loc 1 3156 24 is_stmt 0 view .LVU4343
 14185 1d58 0AF1FF3A 		add	r10, r10, #-1
 14186              	.LVL1199:
3156:src/keys.c    **** 		goto reset_window;
 14187              		.loc 1 3156 18 view .LVU4344
 14188 1d5c A8F808A0 		strh	r10, [r8, #8]	@ movhi
 14189 1d60 FFF7E6B9 		b	.L983
 14190              	.LVL1200:
 14191              	.L1390:
3152:src/keys.c    **** 			--State2.digval;
 14192              		.loc 1 3152 5 is_stmt 1 view .LVU4345
3152:src/keys.c    **** 			--State2.digval;
 14193              		.loc 1 3152 21 is_stmt 0 view .LVU4346
 14194 1d64 FFF7FEFF 		bl	global_regs
 14195              	.LVL1201:
3152:src/keys.c    **** 			--State2.digval;
 14196              		.loc 1 3152 19 view .LVU4347
 14197 1d68 A8F80800 		strh	r0, [r8, #8]	@ movhi
 14198 1d6c FFF7DBB9 		b	.L992
 14199              	.LVL1202:
 14200              	.L1391:
3152:src/keys.c    **** 			--State2.digval;
 14201              		.loc 1 3152 19 view .LVU4348
 14202              	.LBE1298:
 14203              	.LBE1384:
 14204              	.LBB1385:
 14205              	.LBB962:
1283:src/keys.c    **** 	}
 14206              		.loc 1 1283 3 is_stmt 1 view .LVU4349
1283:src/keys.c    **** 	}
 14207              		.loc 1 1283 10 is_stmt 0 view .LVU4350
 14208 1d70 2046     		mov	r0, r4
 14209 1d72 FFF7FEFF 		bl	process_h_shifted
 14210              	.LVL1203:
 14211 1d76 0446     		mov	r4, r0
ARM GAS  /tmp/cc6xzGMw.s 			page 387


 14212              	.LVL1204:
1283:src/keys.c    **** 	}
 14213              		.loc 1 1283 10 view .LVU4351
 14214 1d78 FEF732BB 		b	.L835
 14215              	.LVL1205:
 14216              	.L1394:
 14217              	.LBB927:
1314:src/keys.c    **** 				return process_cmplx(c);
 14218              		.loc 1 1314 5 is_stmt 1 view .LVU4352
 14219 1d7c 0120     		movs	r0, #1
 14220 1d7e FFF7FEFF 		bl	finish_cpx_entry
 14221              	.LVL1206:
1315:src/keys.c    **** 			}
 14222              		.loc 1 1315 5 view .LVU4353
1315:src/keys.c    **** 			}
 14223              		.loc 1 1315 12 is_stmt 0 view .LVU4354
 14224 1d82 2046     		mov	r0, r4
 14225 1d84 FFF7FEFF 		bl	process_cmplx
 14226              	.LVL1207:
 14227 1d88 0446     		mov	r4, r0
 14228              	.LVL1208:
1315:src/keys.c    **** 			}
 14229              		.loc 1 1315 12 view .LVU4355
 14230 1d8a FEF729BB 		b	.L835
 14231              	.LVL1209:
 14232              	.L1393:
1315:src/keys.c    **** 			}
 14233              		.loc 1 1315 12 view .LVU4356
 14234              	.LBE927:
1296:src/keys.c    **** 			if ( CmdLineLength ) {
 14235              		.loc 1 1296 4 is_stmt 1 view .LVU4357
 14236              	.LBB928:
 14237              	.LBI928:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 14238              		.loc 1 114 13 view .LVU4358
 14239              	.LBE928:
 14240              	.LBE962:
 14241              	.LBE1385:
 14242              	.LBE1441:
 14243              	.LBE1518:
 115:src/keys.c    **** }
 14244              		.loc 1 115 2 view .LVU4359
 14245              	.LBB1519:
 14246              	.LBB1442:
 14247              	.LBB1386:
 14248              	.LBB963:
 14249              	.LBB935:
 14250              	.LBB929:
 14251              	.LBI929:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14252              		.loc 1 104 20 view .LVU4360
 14253              	.LBB930:
 105:src/keys.c    **** 	State2.shifts = shift;
 14254              		.loc 1 105 2 view .LVU4361
 14255              	.LBB931:
 14256              	.LBI931:
  96:src/keys.c    **** 	enum shifts s = shift_down();
ARM GAS  /tmp/cc6xzGMw.s 			page 388


 14257              		.loc 1 96 13 view .LVU4362
 14258              	.LBB932:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14259              		.loc 1 97 2 view .LVU4363
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14260              		.loc 1 97 18 is_stmt 0 view .LVU4364
 14261 1d8e FFF7FEFF 		bl	shift_down
 14262              	.LVL1210:
  98:src/keys.c    **** }
 14263              		.loc 1 98 2 is_stmt 1 view .LVU4365
 14264              	.LBE932:
 14265              	.LBE931:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14266              		.loc 1 106 2 view .LVU4366
 14267              	.LBE930:
 14268              	.LBE929:
 14269              	.LBE935:
1297:src/keys.c    **** 				State2.state_lift = 0;
 14270              		.loc 1 1297 7 is_stmt 0 view .LVU4367
 14271 1d92 98F81C20 		ldrb	r2, [r8, #28]	@ zero_extendqisi2
 14272              	.LBB936:
 14273              	.LBB934:
 14274              	.LBB933:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14275              		.loc 1 106 16 view .LVU4368
 14276 1d96 0023     		movs	r3, #0
 14277 1d98 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 14278              		.loc 1 108 2 is_stmt 1 view .LVU4369
 14279              	.LVL1211:
 108:src/keys.c    **** }
 14280              		.loc 1 108 2 is_stmt 0 view .LVU4370
 14281              	.LBE933:
 14282              	.LBE934:
 14283              	.LBE936:
1297:src/keys.c    **** 				State2.state_lift = 0;
 14284              		.loc 1 1297 4 is_stmt 1 view .LVU4371
1297:src/keys.c    **** 				State2.state_lift = 0;
 14285              		.loc 1 1297 7 is_stmt 0 view .LVU4372
 14286 1d9c 6AB1     		cbz	r2, .L1048
1298:src/keys.c    **** 				return OP_NIL | OP_PIB;
 14287              		.loc 1 1298 5 is_stmt 1 view .LVU4373
1298:src/keys.c    **** 				return OP_NIL | OP_PIB;
 14288              		.loc 1 1298 23 is_stmt 0 view .LVU4374
 14289 1d9e 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
 14290              	.LBE963:
 14291              	.LBE1386:
 14292              	.LBE1442:
 14293              	.LBE1519:
3631:src/keys.c    **** 	NonProgrammable = 0;
 14294              		.loc 1 3631 11 view .LVU4375
 14295 1da2 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
 14296              	.LBB1520:
 14297              	.LBB1443:
 14298              	.LBB1387:
 14299              	.LBB964:
1298:src/keys.c    **** 				return OP_NIL | OP_PIB;
ARM GAS  /tmp/cc6xzGMw.s 			page 389


 14300              		.loc 1 1298 23 view .LVU4376
 14301 1da6 63F38612 		bfi	r2, r3, #6, #1
 14302 1daa 88F81720 		strb	r2, [r8, #23]
1299:src/keys.c    **** 			}
 14303              		.loc 1 1299 5 is_stmt 1 view .LVU4377
 14304              	.LVL1212:
1299:src/keys.c    **** 			}
 14305              		.loc 1 1299 5 is_stmt 0 view .LVU4378
 14306              	.LBE964:
 14307              	.LBE1387:
 14308              	.LBE1443:
 14309              	.LBE1520:
3631:src/keys.c    **** 	NonProgrammable = 0;
 14310              		.loc 1 3631 7 is_stmt 1 view .LVU4379
3631:src/keys.c    **** 	NonProgrammable = 0;
 14311              		.loc 1 3631 10 is_stmt 0 view .LVU4380
 14312 1dae 4A06     		lsls	r2, r1, #25
 14313 1db0 0DD4     		bmi	.L1049
 14314              	.LBB1521:
 14315              	.LBB1444:
 14316              	.LBB1388:
 14317              	.LBB965:
1299:src/keys.c    **** 			}
 14318              		.loc 1 1299 12 view .LVU4381
 14319 1db2 4FF4E474 		mov	r4, #456
 14320 1db6 FEF7A8BF 		b	.L899
 14321              	.LVL1213:
 14322              	.L1048:
1299:src/keys.c    **** 			}
 14323              		.loc 1 1299 12 view .LVU4382
 14324              	.LBE965:
 14325              	.LBE1388:
 14326              	.LBE1444:
 14327              	.LBE1521:
3631:src/keys.c    **** 	NonProgrammable = 0;
 14328              		.loc 1 3631 7 is_stmt 1 view .LVU4383
3631:src/keys.c    **** 	NonProgrammable = 0;
 14329              		.loc 1 3631 11 is_stmt 0 view .LVU4384
 14330 1dba 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3631:src/keys.c    **** 	NonProgrammable = 0;
 14331              		.loc 1 3631 10 view .LVU4385
 14332 1dbe 5B06     		lsls	r3, r3, #25
 14333 1dc0 0BD5     		bpl	.L1160
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14334              		.loc 1 3632 2 is_stmt 1 view .LVU4386
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14335              		.loc 1 3632 18 is_stmt 0 view .LVU4387
 14336 1dc2 084B     		ldr	r3, .L1420
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14337              		.loc 1 3633 32 view .LVU4388
 14338 1dc4 40F2C710 		movw	r0, #455
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14339              		.loc 1 3632 18 view .LVU4389
 14340 1dc8 1A60     		str	r2, [r3]
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14341              		.loc 1 3633 2 is_stmt 1 view .LVU4390
 14342 1dca FEF70DBC 		b	.L1106
ARM GAS  /tmp/cc6xzGMw.s 			page 390


 14343              	.LVL1214:
 14344              	.L1049:
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14345              		.loc 1 3632 2 view .LVU4391
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14346              		.loc 1 3632 18 is_stmt 0 view .LVU4392
 14347 1dce 054A     		ldr	r2, .L1420
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14348              		.loc 1 3633 32 view .LVU4393
 14349 1dd0 4FF4E470 		mov	r0, #456
3632:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14350              		.loc 1 3632 18 view .LVU4394
 14351 1dd4 1360     		str	r3, [r2]
3633:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14352              		.loc 1 3633 2 is_stmt 1 view .LVU4395
 14353 1dd6 FEF707BC 		b	.L1106
 14354              	.LVL1215:
 14355              	.L1160:
 14356              	.LBB1522:
 14357              	.LBB1445:
 14358              	.LBB1389:
 14359              	.LBB966:
1302:src/keys.c    **** 			}
 14360              		.loc 1 1302 12 is_stmt 0 view .LVU4396
 14361 1dda 40F2C714 		movw	r4, #455
 14362 1dde FEF794BF 		b	.L899
 14363              	.L1421:
 14364 1de2 00BF     		.align	2
 14365              	.L1420:
 14366 1de4 00000000 		.word	NonProgrammable
 14367              	.LBE966:
 14368              	.LBE1389:
 14369              	.LBE1445:
 14370              	.LBE1522:
 14371              		.cfi_endproc
 14372              	.LFE63:
 14374              		.section	.text.process_keycode_with_shift,"ax",%progbits
 14375              		.align	1
 14376              		.p2align 2,,3
 14377              		.global	process_keycode_with_shift
 14378              		.syntax unified
 14379              		.thumb
 14380              		.thumb_func
 14381              		.fpu fpv4-sp-d16
 14383              	process_keycode_with_shift:
 14384              	.LFB62:
3379:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 14385              		.loc 1 3379 61 is_stmt 1 view -0
 14386              		.cfi_startproc
 14387              		@ args = 0, pretend = 0, frame = 8
 14388              		@ frame_needed = 0, uses_anonymous_args = 0
 14389 0000 30B5     		push	{r4, r5, lr}
 14390              		.cfi_def_cfa_offset 12
 14391              		.cfi_offset 4, -12
 14392              		.cfi_offset 5, -8
 14393              		.cfi_offset 14, -4
 14394 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/cc6xzGMw.s 			page 391


 14395              		.cfi_def_cfa_offset 24
3379:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 14396              		.loc 1 3379 61 is_stmt 0 view .LVU4398
 14397 0004 02AB     		add	r3, sp, #8
 14398 0006 03E90300 		stmdb	r3, {r0, r1}
 14399 000a 9DF80040 		ldrb	r4, [sp]	@ zero_extendqisi2
 14400              	.LVL1216:
3380:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 14401              		.loc 1 3380 4 is_stmt 1 view .LVU4399
3380:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 14402              		.loc 1 3380 7 is_stmt 0 view .LVU4400
 14403 000e 2E2C     		cmp	r4, #46
 14404 0010 10D0     		beq	.L1422
3381:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 14405              		.loc 1 3381 4 is_stmt 1 view .LVU4401
3381:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 14406              		.loc 1 3381 7 is_stmt 0 view .LVU4402
 14407 0012 332C     		cmp	r4, #51
 14408 0014 1DD0     		beq	.L1429
3390:src/keys.c    ****      nd_opcode = remapped.shift;
 14409              		.loc 1 3390 7 view .LVU4403
 14410 0016 342C     		cmp	r4, #52
 14411 0018 019D     		ldr	r5, [sp, #4]
3390:src/keys.c    ****      nd_opcode = remapped.shift;
 14412              		.loc 1 3390 4 is_stmt 1 view .LVU4404
3390:src/keys.c    ****      nd_opcode = remapped.shift;
 14413              		.loc 1 3390 7 is_stmt 0 view .LVU4405
 14414 001a 0DD0     		beq	.L1430
3394:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14415              		.loc 1 3394 9 is_stmt 1 view .LVU4406
3394:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14416              		.loc 1 3394 12 is_stmt 0 view .LVU4407
 14417 001c 002D     		cmp	r5, #0
 14418 001e 03DB     		blt	.L1427
3394:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14419              		.loc 1 3394 34 is_stmt 1 discriminator 1 view .LVU4408
 14420              	.LVL1217:
 14421              	.LBB1523:
 14422              	.LBI1523:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14423              		.loc 1 104 20 discriminator 1 view .LVU4409
 14424              	.LBB1524:
 105:src/keys.c    **** 	State2.shifts = shift;
 14425              		.loc 1 105 2 discriminator 1 view .LVU4410
 14426              	.LBB1525:
 14427              	.LBI1525:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 14428              		.loc 1 96 13 discriminator 1 view .LVU4411
 14429              	.LBB1526:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14430              		.loc 1 97 2 discriminator 1 view .LVU4412
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14431              		.loc 1 97 18 is_stmt 0 discriminator 1 view .LVU4413
 14432 0020 FFF7FEFF 		bl	shift_down
 14433              	.LVL1218:
  98:src/keys.c    **** }
 14434              		.loc 1 98 2 is_stmt 1 discriminator 1 view .LVU4414
ARM GAS  /tmp/cc6xzGMw.s 			page 392


 14435              	.LBE1526:
 14436              	.LBE1525:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14437              		.loc 1 106 2 discriminator 1 view .LVU4415
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14438              		.loc 1 106 16 is_stmt 0 discriminator 1 view .LVU4416
 14439 0024 194B     		ldr	r3, .L1431
 14440              	.LBE1524:
 14441              	.LBE1523:
3394:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14442              		.loc 1 3394 34 discriminator 1 view .LVU4417
 14443 0026 1D74     		strb	r5, [r3, #16]
 14444              	.LBB1528:
 14445              	.LBB1527:
 108:src/keys.c    **** }
 14446              		.loc 1 108 2 is_stmt 1 discriminator 1 view .LVU4418
 14447              	.LVL1219:
 14448              	.L1427:
 108:src/keys.c    **** }
 14449              		.loc 1 108 2 is_stmt 0 discriminator 1 view .LVU4419
 14450              	.LBE1527:
 14451              	.LBE1528:
3395:src/keys.c    ****  }
 14452              		.loc 1 3395 4 is_stmt 1 view .LVU4420
 14453 0028 2046     		mov	r0, r4
3396:src/keys.c    ****  
 14454              		.loc 1 3396 2 is_stmt 0 view .LVU4421
 14455 002a 03B0     		add	sp, sp, #12
 14456              		.cfi_remember_state
 14457              		.cfi_def_cfa_offset 12
 14458              		@ sp needed
 14459 002c BDE83040 		pop	{r4, r5, lr}
 14460              		.cfi_restore 14
 14461              		.cfi_restore 5
 14462              		.cfi_restore 4
 14463              		.cfi_def_cfa_offset 0
 14464              	.LVL1220:
3395:src/keys.c    ****  }
 14465              		.loc 1 3395 4 view .LVU4422
 14466 0030 FFF7FEBF 		b	process_keycode
 14467              	.LVL1221:
 14468              	.L1422:
 14469              		.cfi_restore_state
3396:src/keys.c    ****  
 14470              		.loc 1 3396 2 view .LVU4423
 14471 0034 03B0     		add	sp, sp, #12
 14472              		.cfi_remember_state
 14473              		.cfi_def_cfa_offset 12
 14474              		@ sp needed
 14475 0036 30BD     		pop	{r4, r5, pc}
 14476              	.LVL1222:
 14477              	.L1430:
 14478              		.cfi_restore_state
3391:src/keys.c    ****      set_shift(SHIFT_N);
 14479              		.loc 1 3391 6 is_stmt 1 view .LVU4424
3391:src/keys.c    ****      set_shift(SHIFT_N);
 14480              		.loc 1 3391 16 is_stmt 0 view .LVU4425
ARM GAS  /tmp/cc6xzGMw.s 			page 393


 14481 0038 154B     		ldr	r3, .L1431+4
 14482 003a 1D60     		str	r5, [r3]
3392:src/keys.c    ****    }
 14483              		.loc 1 3392 6 is_stmt 1 view .LVU4426
 14484              	.LVL1223:
 14485              	.LBB1529:
 14486              	.LBI1529:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14487              		.loc 1 104 20 view .LVU4427
 14488              	.LBB1530:
 105:src/keys.c    **** 	State2.shifts = shift;
 14489              		.loc 1 105 2 view .LVU4428
 14490              	.LBB1531:
 14491              	.LBI1531:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 14492              		.loc 1 96 13 view .LVU4429
 14493              	.LBB1532:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14494              		.loc 1 97 2 view .LVU4430
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14495              		.loc 1 97 18 is_stmt 0 view .LVU4431
 14496 003c FFF7FEFF 		bl	shift_down
 14497              	.LVL1224:
  98:src/keys.c    **** }
 14498              		.loc 1 98 2 is_stmt 1 view .LVU4432
 14499              	.LBE1532:
 14500              	.LBE1531:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14501              		.loc 1 106 2 view .LVU4433
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14502              		.loc 1 106 16 is_stmt 0 view .LVU4434
 14503 0040 124B     		ldr	r3, .L1431
 14504 0042 0022     		movs	r2, #0
 14505              	.LBE1530:
 14506              	.LBE1529:
3395:src/keys.c    ****  }
 14507              		.loc 1 3395 4 view .LVU4435
 14508 0044 2046     		mov	r0, r4
 14509              	.LBB1534:
 14510              	.LBB1533:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14511              		.loc 1 106 16 view .LVU4436
 14512 0046 1A74     		strb	r2, [r3, #16]
 108:src/keys.c    **** }
 14513              		.loc 1 108 2 is_stmt 1 view .LVU4437
 14514              	.LVL1225:
 108:src/keys.c    **** }
 14515              		.loc 1 108 2 is_stmt 0 view .LVU4438
 14516              	.LBE1533:
 14517              	.LBE1534:
3395:src/keys.c    ****  }
 14518              		.loc 1 3395 4 is_stmt 1 view .LVU4439
3396:src/keys.c    ****  
 14519              		.loc 1 3396 2 is_stmt 0 view .LVU4440
 14520 0048 03B0     		add	sp, sp, #12
 14521              		.cfi_remember_state
 14522              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/cc6xzGMw.s 			page 394


 14523              		@ sp needed
 14524 004a BDE83040 		pop	{r4, r5, lr}
 14525              		.cfi_restore 14
 14526              		.cfi_restore 5
 14527              		.cfi_restore 4
 14528              		.cfi_def_cfa_offset 0
 14529              	.LVL1226:
3395:src/keys.c    ****  }
 14530              		.loc 1 3395 4 view .LVU4441
 14531 004e FFF7FEBF 		b	process_keycode
 14532              	.LVL1227:
 14533              	.L1429:
 14534              		.cfi_restore_state
3382:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 14535              		.loc 1 3382 6 is_stmt 1 view .LVU4442
 14536 0052 104B     		ldr	r3, .L1431+8
 14537 0054 41F23010 		movw	r0, #4400
 14538 0058 9847     		blx	r3
 14539              	.LVL1228:
3382:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 14540              		.loc 1 3382 31 view .LVU4443
 14541 005a 0A20     		movs	r0, #10
 14542 005c 0E4B     		ldr	r3, .L1431+12
 14543 005e 9847     		blx	r3
 14544              	.LVL1229:
3382:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 14545              		.loc 1 3382 46 view .LVU4444
 14546 0060 0E4B     		ldr	r3, .L1431+16
 14547 0062 9847     		blx	r3
 14548              	.LVL1230:
3383:src/keys.c    ****        // Was error just wait for confirmation
 14549              		.loc 1 3383 6 view .LVU4445
3383:src/keys.c    ****        // Was error just wait for confirmation
 14550              		.loc 1 3383 11 is_stmt 0 view .LVU4446
 14551 0064 0E4B     		ldr	r3, .L1431+20
 14552 0066 0120     		movs	r0, #1
 14553 0068 9847     		blx	r3
 14554              	.LVL1231:
3383:src/keys.c    ****        // Was error just wait for confirmation
 14555              		.loc 1 3383 9 view .LVU4447
 14556 006a 0228     		cmp	r0, #2
 14557 006c 01D1     		bne	.L1425
3385:src/keys.c    ****      }
 14558              		.loc 1 3385 8 is_stmt 1 view .LVU4448
 14559 006e 0D4B     		ldr	r3, .L1431+24
 14560 0070 9847     		blx	r3
 14561              	.LVL1232:
 14562              	.L1425:
3387:src/keys.c    ****      return;
 14563              		.loc 1 3387 6 view .LVU4449
 14564 0072 084B     		ldr	r3, .L1431+8
 14565 0074 42F26020 		movw	r0, #8800
 14566 0078 9847     		blx	r3
 14567              	.LVL1233:
3387:src/keys.c    ****      return;
 14568              		.loc 1 3387 31 view .LVU4450
 14569 007a 074B     		ldr	r3, .L1431+12
ARM GAS  /tmp/cc6xzGMw.s 			page 395


 14570 007c 0A20     		movs	r0, #10
 14571 007e 9847     		blx	r3
 14572              	.LVL1234:
3387:src/keys.c    ****      return;
 14573              		.loc 1 3387 46 view .LVU4451
 14574 0080 064B     		ldr	r3, .L1431+16
3396:src/keys.c    ****  
 14575              		.loc 1 3396 2 is_stmt 0 view .LVU4452
 14576 0082 03B0     		add	sp, sp, #12
 14577              		.cfi_def_cfa_offset 12
 14578              		@ sp needed
 14579 0084 BDE83040 		pop	{r4, r5, lr}
 14580              		.cfi_restore 14
 14581              		.cfi_restore 5
 14582              		.cfi_restore 4
 14583              		.cfi_def_cfa_offset 0
 14584              	.LVL1235:
3387:src/keys.c    ****      return;
 14585              		.loc 1 3387 46 view .LVU4453
 14586 0088 1847     		bx	r3	@ indirect register sibling call
 14587              	.LVL1236:
 14588              	.L1432:
 14589 008a 00BF     		.align	2
 14590              	.L1431:
 14591 008c 00000000 		.word	StateWhileOn
 14592 0090 00000000 		.word	nd_opcode
 14593 0094 F5020008 		.word	134218485
 14594 0098 05040008 		.word	134218757
 14595 009c F9020008 		.word	134218489
 14596 00a0 79030008 		.word	134218617
 14597 00a4 99030008 		.word	134218649
 14598              		.cfi_endproc
 14599              	.LFE62:
 14601              		.comm	nd_opcode,4,4
 14602              		.comm	NonProgrammable,4,4
 14603              		.comm	GoFast,4,4
 14604              		.comm	OpCodeDisplayPending,4,4
 14605              		.comm	OpCode,4,4
 14606              		.comm	WasDataEntry,4,4
 14607              		.section	.bss.was_paused.9793,"aw",%nobits
 14608              		.align	2
 14609              		.set	.LANCHOR18,. + 0
 14612              	was_paused.9793:
 14613 0000 00000000 		.space	4
 14614              		.section	.rodata.alpha_arrows,"a"
 14615              		.align	2
 14618              	alpha_arrows:
 14619 0000 0D0E100F 		.ascii	"\015\016\020\017\003\004\237^\177"
 14619      03049F5E 
 14619      7F
 14620              		.section	.rodata.alpha_catalogue,"a"
 14621              		.align	2
 14624              	alpha_catalogue:
 14625 0000 0D4AC280 		.ascii	"\015J\302\200\236\265\312\242~\324\266-\233j\333(J\260"
 14625      9EB5CAA2 
 14625      7ED4B62D 
 14625      9B6ADB28 
ARM GAS  /tmp/cc6xzGMw.s 			page 396


 14625      4AB0
 14626              		.section	.rodata.alpha_compares,"a"
 14627              		.align	2
 14630              	alpha_compares:
 14631 0000 3C093D1D 		.ascii	"<\011=\035\012>[]{}"
 14631      0A3E5B5D 
 14631      7B7D
 14632              		.section	.rodata.alpha_letters,"a"
 14633              		.align	2
 14634              		.set	.LANCHOR9,. + 0
 14637              	alpha_letters:
 14638 0000 C0C1C2C3 		.ascii	"\300\301\302\303\210\304\305\306\307\204\310\311\312"
 14638      88C4C5C6 
 14638      C784C8C9 
 14638      CA
 14639 000d CB9ECCCD 		.ascii	"\313\236\314\315\316\317\320\321\322\323\324\025\325"
 14639      CECFD0D1 
 14639      D2D3D415 
 14639      D5
 14640 001a D618D8D9 		.ascii	"\326\030\330\331\332\333\334\001\031\002\335\032\336"
 14640      DADBDC01 
 14640      1902DD1A 
 14640      DE
 14641 0027 DF       		.ascii	"\337"
 14642              		.section	.rodata.alpha_letters_lower,"a"
 14643              		.align	2
 14644              		.set	.LANCHOR10,. + 0
 14647              	alpha_letters_lower:
 14648 0000 E0E1E2E3 		.ascii	"\340\341\342\343\211\344\345\346\347\205\350\351\352"
 14648      89E4E5E6 
 14648      E785E8E9 
 14648      EA
 14649 000d EB9EECED 		.ascii	"\353\236\354\355\356\357\360\361\362\363\364\026\365"
 14649      EEEFF0F1 
 14649      F2F3F416 
 14649      F5
 14650 001a F618F8F9 		.ascii	"\366\030\370\371\372\373\374\001\031\002\375\032\376"
 14650      FAFBFC01 
 14650      1902FD1A 
 14650      FE
 14651 0027 FF       		.ascii	"\377"
 14652              		.section	.rodata.alpha_subscripts,"a"
 14653              		.align	2
 14656              	alpha_subscripts:
 14657 0000 B805B9BA 		.ascii	"\270\005\271\272\232\200\327\230\273\024\206\274\367"
 14657      9A80D798 
 14657      BB1486BC 
 14657      F7
 14658 000d 1BBDBE93 		.ascii	"\033\275\276\223\277\201\213\234\214\231\235\220\233"
 14658      BF818B9C 
 14658      8C999D90 
 14658      9B
 14659              		.section	.rodata.alpha_symbols,"a"
 14660              		.align	2
 14663              	alpha_symbols:
 14664 0000 2C3A3B27 		.ascii	",:;'\"*@_~%$\014\036\037\216\256\222`#"
 14664      222A405F 
ARM GAS  /tmp/cc6xzGMw.s 			page 397


 14664      7E25240C 
 14664      1E1F8EAE 
 14664      926023
 14665              		.section	.rodata.alphamap.9277,"a"
 14666              		.align	2
 14667              		.set	.LANCHOR15,. + 0
 14670              	alphamap.9277:
 14671 0000 41004100 		.ascii	"A\000A\000a\240"
 14671      61A0
 14672 0006 42004200 		.ascii	"B\000B\000b\241"
 14672      62A1
 14673 000c 43008200 		.ascii	"C\000\202\000c\242"
 14673      63A2
 14674 0012 44008300 		.ascii	"D\000\203\000d\243"
 14674      64A3
 14675 0018 450D4500 		.ascii	"E\015E\000e\244"
 14675      65A4
 14676 001e 46009400 		.ascii	"F\000\224\000f\264"
 14676      66B4
 14677 0024 47008200 		.ascii	"G\000\202\000g\242"
 14677      67A2
 14678 002a 48005800 		.ascii	"H\000X\000h\265"
 14678      68B5
 14679 0030 49004900 		.ascii	"I\000I\000i\250"
 14679      69A8
 14680 0036 4AAF0000 		.ascii	"J\257\000\000j\000"
 14680      6A00
 14681 003c 4B004B00 		.ascii	"K\000K\000k\251"
 14681      6BA9
 14682 0042 4C008A00 		.ascii	"L\000\212\000l\252"
 14682      6CAA
 14683 0048 00004800 		.ascii	"\000\000H\000\000\246"
 14683      00A6
 14684 004e 4D00AB17 		.ascii	"M\000\253\027m\253"
 14684      6DAB
 14685 0054 4E084E95 		.ascii	"N\010N\225n\254"
 14685      6EAC
 14686 005a 4F0097AF 		.ascii	"O\000\227\257o\267"
 14686      6FB7
 14687 0060 00000000 		.ascii	"\000\000\000\000\000\000"
 14687      0000
 14688 0066 00000000 		.ascii	"\000\000\000\000\000\000"
 14688      0000
 14689 006c 50378F26 		.ascii	"P7\217&p\257"
 14689      70AF
 14690 0072 5138007C 		.ascii	"Q8\000|q\000"
 14690      7100
 14691 0078 5239520B 		.ascii	"R9R\013r\260"
 14691      72B0
 14692 007e 532F915C 		.ascii	"S/\221\\s\261"
 14692      73B1
 14693 0084 00000021 		.ascii	"\000\000\000!\000\000"
 14693      0000
 14694 008a 54345400 		.ascii	"T4T\000t\262"
 14694      74B2
 14695 0090 55350000 		.ascii	"U5\000\000u\000"
 14695      7500
ARM GAS  /tmp/cc6xzGMw.s 			page 398


 14696 0096 56360000 		.ascii	"V6\000\000v\000"
 14696      7600
 14697 009c 571C0000 		.ascii	"W\034\000\000w\000"
 14697      7700
 14698 00a2 0000003F 		.ascii	"\000\000\000?\000\000"
 14698      0000
 14699 00a8 58318D00 		.ascii	"X1\215\000x\255"
 14699      78AD
 14700 00ae 59325900 		.ascii	"Y2Y\000y\263"
 14700      79B3
 14701 00b4 5A335A00 		.ascii	"Z3Z\000z\245"
 14701      7AA5
 14702 00ba 2D282900 		.ascii	"-()\000\000\000"
 14702      0000
 14703 00c0 00000000 		.ascii	"\000\000\000\000\000\000"
 14703      0000
 14704 00c6 3A308720 		.ascii	":0\207 ;\247"
 14704      3BA7
 14705 00cc 2E2E9600 		.ascii	"..\226\000.\266"
 14705      2EB6
 14706 00d2 3F002100 		.ascii	"?\000!\000?\000"
 14706      3F00
 14707 00d8 202B3D00 		.ascii	" +=\000  "
 14707      2020
 14708 00de 00000000 		.ascii	"\000\000\000\000\000\000"
 14708      0000
 14709              		.section	.rodata.amap.9268,"a"
 14710              		.align	2
 14711              		.set	.LANCHOR16,. + 0
 14714              	amap.9268:
 14715 0000 04       		.byte	4
 14716 0001 000D00   		.ascii	"\000\015\000"
 14717 0004 05       		.byte	5
 14718 0005 000E09   		.ascii	"\000\016\011"
 14719 0008 2C       		.byte	44
 14720 0009 000D00   		.ascii	"\000\015\000"
 14721 000c 2D       		.byte	45
 14722 000d 000E09   		.ascii	"\000\016\011"
 14723 0010 08       		.byte	8
 14724 0011 00000F   		.ascii	"\000\000\017"
 14725 0014 1F       		.byte	31
 14726 0015 00000C   		.ascii	"\000\000\014"
 14727 0018 21       		.byte	33
 14728 0019 00000A   		.ascii	"\000\000\012"
 14729 001c 26       		.byte	38
 14730 001d 00000B   		.ascii	"\000\000\013"
 14731              		.section	.rodata.catalogue,"a"
 14732              		.align	2
 14735              	catalogue:
 14736 0000 465B46A0 		.ascii	"F[F\240\301b\230\264\014\242;X\346\374}G\262\361\011"
 14736      C16298B4 
 14736      0CA23B58 
 14736      E6FC7D47 
 14736      B2F109
 14737 0013 8166D3B4 		.ascii	"\201f\323\264\361\220D\331\304i\002m\322\344\275 q\\"
 14737      F19044D9 
 14737      C469026D 
ARM GAS  /tmp/cc6xzGMw.s 			page 399


 14737      D2E4BD20 
 14737      715C
 14738 0025 66D5B668 		.ascii	"f\325\266h\234\334\265\322s\030'=\270q\021'Y\252L\230"
 14738      9CDCB5D2 
 14738      7318273D 
 14738      B8711127 
 14738      59AA4C98 
 14739 0039 F69DA669 		.ascii	"\366\235\246i\030\326\361\3130\333\327\005\037\311P"
 14739      18D6F1CB 
 14739      30DBD705 
 14739      1FC950
 14740 0048 4C9320C8 		.ascii	"L\223 \310P\204\234\302\313\2127\011\221p\303V\000\312"
 14740      50849CC2 
 14740      CB8A3709 
 14740      9170C356 
 14740      00CA
 14741 005a 45514459 		.ascii	"EQDY\030o\212\307\035\214s\212\002z\327*\211\373Z\324"
 14741      186F8AC7 
 14741      1D8C738A 
 14741      027AD72A 
 14741      89FB5AD4 
 14742 006e B62D9B6A 		.ascii	"\266-\233j\333\265J\022\255\251LZ\326\271\253k\034\006"
 14742      DBB54A12 
 14742      ADA94C5A 
 14742      D6B9AB6B 
 14742      1C06
 14743 0080 259A435D 		.ascii	"%\232C]\266\311\325^\227v\304"
 14743      B6C9D55E 
 14743      9776C4
 14744              		.section	.rodata.catalogue_sizes.9591,"a"
 14745              		.align	2
 14746              		.set	.LANCHOR8,. + 0
 14749              	catalogue_sizes.9591:
 14750 0000 006F1E11 		.ascii	"\000o\036\0216=C\205%8\016\023\012\011(\032LLX\016\023"
 14750      363D4385 
 14750      25380E13 
 14750      0A09281A 
 14750      4C4C580E 
 14751              		.section	.rodata.catalogues.9599,"a"
 14752              		.align	2
 14753              		.set	.LANCHOR12,. + 0
 14756              	catalogues.9599:
 14757 0000 00000000 		.word	0
 14758 0004 00000000 		.word	catalogue
 14759 0008 00000000 		.word	cplx_catalogue
 14760 000c 00000000 		.word	stats_catalogue
 14761 0010 00000000 		.word	prob_catalogue
 14762 0014 00000000 		.word	int_catalogue
 14763 0018 00000000 		.word	prog_catalogue
 14764 001c 00000000 		.word	program_xfcn
 14765 0020 00000000 		.word	test_catalogue
 14766 0024 00000000 		.word	mode_catalogue
 14767 0028 00000000 		.word	alpha_catalogue
 14768 002c 00000000 		.word	alpha_symbols
 14769 0030 00000000 		.word	alpha_compares
 14770 0034 00000000 		.word	alpha_arrows
 14771 0038 00000000 		.word	alpha_letters
ARM GAS  /tmp/cc6xzGMw.s 			page 400


 14772 003c 00000000 		.word	alpha_subscripts
 14773 0040 00000000 		.word	0
 14774 0044 00000000 		.word	0
 14775 0048 00000000 		.word	0
 14776 004c 00000000 		.word	sums_catalogue
 14777 0050 00000000 		.word	matrix_catalogue
 14778              		.section	.rodata.cmap.9267,"a"
 14779              		.align	2
 14780              		.set	.LANCHOR17,. + 0
 14783              	cmap.9267:
 14784 0000 04       		.byte	4
 14785 0001 120012   		.ascii	"\022\000\022"
 14786 0004 05       		.byte	5
 14787 0005 090909   		.ascii	"\011\011\011"
 14788 0008 06       		.byte	6
 14789 0009 151515   		.ascii	"\025\025\025"
 14790 000c 0C       		.byte	12
 14791 000d 100011   		.ascii	"\020\000\021"
 14792 0010 19       		.byte	25
 14793 0011 040004   		.ascii	"\004\000\004"
 14794 0014 1A       		.byte	26
 14795 0015 030003   		.ascii	"\003\000\003"
 14796 0018 1B       		.byte	27
 14797 0019 130013   		.ascii	"\023\000\023"
 14798 001c 1C       		.byte	28
 14799 001d 140014   		.ascii	"\024\000\024"
 14800 0020 1E       		.byte	30
 14801 0021 171717   		.ascii	"\027\027\027"
 14802 0024 1F       		.byte	31
 14803 0025 080808   		.ascii	"\010\010\010"
 14804 0028 20       		.byte	32
 14805 0029 060606   		.ascii	"\006\006\006"
 14806 002c 21       		.byte	33
 14807 002d 010502   		.ascii	"\001\005\002"
 14808              		.section	.rodata.conv_catalogue,"a"
 14809              		.align	2
 14810              		.set	.LANCHOR11,. + 0
 14813              	conv_catalogue:
 14814 0000 DADB8C8A 		.ascii	"\332\333\214\212+-\3357'913\021\026\005\334\336\031"
 14814      2B2DDD37 
 14814      27393133 
 14814      111605DC 
 14814      DE19
 14815 0012 1D1B1315 		.ascii	"\035\033\023\025\015\017\215\010\217\012*,GCE\027?0"
 14815      0D0F8D08 
 14815      8F0A2A2C 
 14815      47434517 
 14815      3F30
 14816 0024 32340400 		.ascii	"24\004\000\002\006&\" ($5/\001#\020\014\016!\022\024"
 14816      02062622 
 14816      20282435 
 14816      2F012310 
 14816      0C0E2112 
 14817 0039 3B181A1C 		.ascii	";\030\032\034\036).\01168>:<@%\337=\213\216\003\007"
 14817      1E292E09 
 14817      36383E3A 
 14817      3C4025DF 
ARM GAS  /tmp/cc6xzGMw.s 			page 401


 14817      3D8B8E03 
 14818 004e 4B49410B 		.ascii	"KIA\013JHFBD\037"
 14818      4A484642 
 14818      441F
 14819              		.section	.rodata.conv_mapping.9638,"a"
 14820              		.align	2
 14821              		.set	.LANCHOR14,. + 0
 14824              	conv_mapping.9638:
 14825 0000 8502     		.short	645
 14826 0002 8402     		.short	644
 14827 0004 8602     		.short	646
 14828 0006 8702     		.short	647
 14829 0008 8202     		.short	642
 14830 000a 8302     		.short	643
 14831 000c 3202     		.short	562
 14832 000e 3302     		.short	563
 14833 0010 3402     		.short	564
 14834 0012 3502     		.short	565
 14835 0014 3602     		.short	566
 14836 0016 3702     		.short	567
 14837              		.section	.rodata.cplx_catalogue,"a"
 14838              		.align	2
 14841              	cplx_catalogue:
 14842 0000 7DA91CE6 		.ascii	"}\251\034\346\027;\316\341\015\360}\340\2702\177\252"
 14842      173BCEE1 
 14842      0DF07DE0 
 14842      B8327FAA 
 14843 0010 AA9AB1EF 		.ascii	"\252\232\261\357\241\340\367\226\004|_7\326\244\252"
 14843      A1E0F796 
 14843      047C5F37 
 14843      D6A4AA
 14844 001f ECFA1A0E 		.ascii	"\354\372\032\016\235\336\240"
 14844      9DDEA0
 14845              		.section	.rodata.disp.9449,"a"
 14846              		.align	2
 14847              		.set	.LANCHOR21,. + 0
 14850              	disp.9449:
 14851 0000 03       		.byte	3
 14852 0001 02       		.byte	2
 14853 0002 05       		.byte	5
 14854 0003 04       		.byte	4
 14855              		.section	.rodata.int_catalogue,"a"
 14856              		.align	2
 14859              	int_catalogue:
 14860 0000 46712307 		.ascii	"Fq#\007\024@\335BY\323\020\231\314U\032@\233v\211\270"
 14860      1440DD42 
 14860      59D31099 
 14860      CC551A40 
 14860      9B7689B8 
 14861 0014 25318C65 		.ascii	"%1\214e\247i\227\366\221\274_\234\263\015\275%p\314"
 14861      A76997F6 
 14861      91BC5F9C 
 14861      B30DBD25 
 14861      70CC
 14862 0026 3904C370 		.ascii	"9\004\303p\374LhB1\014G.dCS)\030o\212\307\036\327*\255"
 14862      FC4C6842 
 14862      310C472E 
ARM GAS  /tmp/cc6xzGMw.s 			page 402


 14862      64435329 
 14862      186F8AC7 
 14863 003e 6B52D8B6 		.ascii	"kR\330\266m\253n\325*\323\0245\334w@"
 14863      6DAB6ED5 
 14863      2AD31435 
 14863      DC7740
 14864              		.section	.rodata.linear_key_map.9233,"a"
 14865              		.align	2
 14866              		.set	.LANCHOR6,. + 0
 14869              	linear_key_map.9233:
 14870 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\011\012\013\014"
 14870      04050607 
 14870      08090A0B 
 14870      0C
 14871 000d 0D0E0F10 		.ascii	"\015\016\017\020\000\021\022\023\024\025\000\026\027"
 14871      00111213 
 14871      14150016 
 14871      17
 14872 001a 18191A00 		.ascii	"\030\031\032\000\033\034\035\036\037\000 !\"#$%%%%%"
 14872      1B1C1D1E 
 14872      1F002021 
 14872      22232425 
 14872      25252525 
 14873 002e 25       		.ascii	"%"
 14874              		.section	.rodata.linear_key_map.9237,"a"
 14875              		.align	2
 14876              		.set	.LANCHOR1,. + 0
 14879              	linear_key_map.9237:
 14880 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\"\"\"\011\012\013"
 14880      04050607 
 14880      08222222 
 14880      090A0B
 14881 000f 0C0D000E 		.ascii	"\014\015\000\016\017\020\021\022\000\023\024\025\026"
 14881      0F101112 
 14881      00131415 
 14881      16
 14882 001c 17001819 		.ascii	"\027\000\030\031\032\033\034\000\035\036\037 !\"\"\""
 14882      1A1B1C00 
 14882      1D1E1F20 
 14882      21222222 
 14883 002c 040522   		.ascii	"\004\005\""
 14884              		.section	.rodata.map.9249,"a"
 14885              		.align	2
 14886              		.set	.LANCHOR5,. + 0
 14889              	map.9249:
 14890 0000 E8E9EAEB 		.ascii	"\350\351\352\353\377\177\177\177mnol\377\377\377\377"
 14890      FF7F7F7F 
 14890      6D6E6F6C 
 14890      FFFFFFFF 
 14891 0010 FF7F0708 		.ascii	"\377\177\007\010\011\177\177\347\005\006\177\177\344"
 14891      097F7FE7 
 14891      05067F7F 
 14891      E4
 14892 001d E5E67FFF 		.ascii	"\345\346\177\377\000\360\177\177\377\377\377\377\377"
 14892      00F07F7F 
 14892      FFFFFFFF 
 14892      FF
ARM GAS  /tmp/cc6xzGMw.s 			page 403


 14893 002a FF       		.ascii	"\377"
 14894              		.section	.rodata.matrix_catalogue,"a"
 14895              		.align	2
 14898              	matrix_catalogue:
 14899 0000 661DA364 		.ascii	"f\035\243d\3305\335\203m\222rY7!\327r\231ve\331e\231"
 14899      D835DD83 
 14899      6D927259 
 14899      3721D772 
 14899      997665D9 
 14900 0016 5650     		.ascii	"VP"
 14901              		.section	.rodata.mode_catalogue,"a"
 14902              		.align	2
 14905              	mode_catalogue:
 14906 0000 2948C290 		.ascii	")H\302\220\213\306\206c\364\376@\017\363\250\351\037"
 14906      8BC68663 
 14906      F4FE400F 
 14906      F3A8E91F 
 14907 0010 8801FC7C 		.ascii	"\210\001\374|\277\311\201\214\317$I\302lb\031I2H\232"
 14907      BFC9818C 
 14907      CF2449C2 
 14907      6C621949 
 14907      32489A
 14908 0023 19327210 		.ascii	"\0312r\020\203\31322 \2072\012c\020\3072Js\024\306#"
 14908      83CB3232 
 14908      2087320A 
 14908      6310C732 
 14908      4A7314C6 
 14909 0038 8CE0E039 		.ascii	"\214\340\3409\311\210b\024\215\302\3173\310\231"
 14909      C9886214 
 14909      8DC2CF33 
 14909      C899
 14910              		.section	.rodata.op_map.9321,"a"
 14911              		.align	2
 14912              		.set	.LANCHOR2,. + 0
 14915              	op_map.9321:
 14916 0000 1500     		.short	21
 14917 0002 0B02     		.short	523
 14918 0004 0003     		.short	768
 14919 0006 0A02     		.short	522
 14920 0008 1300     		.short	19
 14921 000a 1400     		.short	20
 14922 000c 0300     		.short	3
 14923 000e 0A00     		.short	10
 14924 0010 0701     		.short	263
 14925 0012 0000     		.short	0
 14926 0014 6531     		.short	12645
 14927 0016 0300     		.short	3
 14928 0018 0200     		.short	2
 14929 001a 0100     		.short	1
 14930 001c 4400     		.short	68
 14931 001e 0C00     		.short	12
 14932 0020 0D00     		.short	13
 14933 0022 0E00     		.short	14
 14934 0024 0403     		.short	772
 14935 0026 2F00     		.short	47
 14936 0028 0900     		.short	9
 14937 002a 0A00     		.short	10
ARM GAS  /tmp/cc6xzGMw.s 			page 404


 14938 002c 0B00     		.short	11
 14939 002e 0303     		.short	771
 14940 0030 2E00     		.short	46
 14941 0032 0600     		.short	6
 14942 0034 0700     		.short	7
 14943 0036 0800     		.short	8
 14944 0038 0203     		.short	770
 14945 003a 3300     		.short	51
 14946 003c 0500     		.short	5
 14947 003e 0400     		.short	4
 14948 0040 3B01     		.short	315
 14949 0042 0103     		.short	769
 14950 0044 0001     		.short	256
 14951              		.section	.rodata.op_map.9344,"a"
 14952              		.align	2
 14953              		.set	.LANCHOR3,. + 0
 14956              	op_map.9344:
 14957 0000 0100     		.short	1
 14958 0002 0000     		.short	0
 14959 0004 20F2     		.short	-3552
 14960 0006 23F2     		.short	-3549
 14961 0008 21F2     		.short	-3551
 14962 000a 24F2     		.short	-3548
 14963 000c 22F2     		.short	-3550
 14964 000e 25F2     		.short	-3547
 14965 0010 47F1     		.short	-3769
 14966 0012 46F1     		.short	-3770
 14967 0014 4E01     		.short	334
 14968 0016 4D01     		.short	333
 14969 0018 5C01     		.short	348
 14970 001a 35F1     		.short	-3787
 14971 001c 5B01     		.short	347
 14972 001e 36F1     		.short	-3786
 14973 0020 3301     		.short	307
 14974 0022 37F1     		.short	-3785
 14975 0024 3300     		.short	51
 14976 0026 0C01     		.short	268
 14977 0028 2B00     		.short	43
 14978 002a 2C00     		.short	44
 14979 002c 028B     		.short	-29950
 14980 002e 088B     		.short	-29944
 14981 0030 0A8B     		.short	-29942
 14982 0032 108B     		.short	-29936
 14983 0034 4301     		.short	323
 14984 0036 3D01     		.short	317
 14985 0038 0902     		.short	521
 14986 003a 0802     		.short	520
 14987 003c 1002     		.short	528
 14988 003e 0D02     		.short	525
 14989 0040 0F02     		.short	527
 14990 0042 0E02     		.short	526
 14991 0044 0003     		.short	768
 14992 0046 0803     		.short	776
 14993 0048 0BF2     		.short	-3573
 14994 004a 1603     		.short	790
 14995 004c 1203     		.short	786
 14996 004e 1303     		.short	787
ARM GAS  /tmp/cc6xzGMw.s 			page 405


 14997 0050 3DF2     		.short	-3523
 14998 0052 3EF2     		.short	-3522
 14999 0054 24F1     		.short	-3804
 15000 0056 1EF1     		.short	-3810
 15001 0058 75F2     		.short	-3467
 15002 005a 27F1     		.short	-3801
 15003 005c 0A02     		.short	522
 15004 005e 1602     		.short	534
 15005 0060 5100     		.short	81
 15006 0062 5200     		.short	82
 15007 0064 0000     		.short	0
 15008 0066 0100     		.short	1
 15009 0068 48F0     		.short	-4024
 15010 006a 4BF0     		.short	-4021
 15011 006c 47F0     		.short	-4025
 15012 006e 46F0     		.short	-4026
 15013 0070 77F2     		.short	-3465
 15014 0072 78F2     		.short	-3464
 15015 0074 3300     		.short	51
 15016 0076 3300     		.short	51
 15017 0078 0502     		.short	517
 15018 007a 0602     		.short	518
 15019 007c 0402     		.short	516
 15020 007e 0002     		.short	512
 15021 0080 4200     		.short	66
 15022 0082 3801     		.short	312
 15023 0084 3A00     		.short	58
 15024 0086 3B00     		.short	59
 15025 0088 0001     		.short	256
 15026 008a 0001     		.short	256
 15027              		.section	.rodata.op_map.9367,"a"
 15028              		.align	2
 15029              		.set	.LANCHOR0,. + 0
 15032              	op_map.9367:
 15033 0000 4C80     		.short	-32692
 15034 0002 4D80     		.short	-32691
 15035 0004 4E80     		.short	-32690
 15036 0006 4F80     		.short	-32689
 15037 0008 3300     		.short	51
 15038 000a 3300     		.short	51
 15039 000c 3300     		.short	51
 15040 000e 2180     		.short	-32735
 15041 0010 0801     		.short	264
 15042 0012 8780     		.short	-32633
 15043 0014 1180     		.short	-32751
 15044 0016 7C02     		.short	636
 15045 0018 6660     		.short	24678
 15046 001a 3F01     		.short	319
 15047 001c 4580     		.short	-32699
 15048 001e 1C03     		.short	796
 15049 0020 1D03     		.short	797
 15050 0022 1E03     		.short	798
 15051 0024 0603     		.short	774
 15052 0026 2F02     		.short	559
 15053 0028 3300     		.short	51
 15054 002a 3300     		.short	51
 15055 002c 3300     		.short	51
ARM GAS  /tmp/cc6xzGMw.s 			page 406


 15056 002e 3300     		.short	51
 15057 0030 3300     		.short	51
 15058 0032 3300     		.short	51
 15059 0034 3300     		.short	51
 15060 0036 3300     		.short	51
 15061 0038 1640     		.short	16406
 15062 003a 0201     		.short	258
 15063 003c 6D80     		.short	-32659
 15064 003e 5001     		.short	336
 15065 0040 3300     		.short	51
 15066 0042 1540     		.short	16405
 15067 0044 0001     		.short	256
 15068              		.section	.rodata.op_map.9422,"a"
 15069              		.align	2
 15070              		.set	.LANCHOR7,. + 0
 15073              	op_map.9422:
 15074 0000 0100     		.short	1
 15075 0002 0100     		.short	1
 15076 0004 0000     		.short	0
 15077 0006 0000     		.short	0
 15078 0008 0B05     		.short	1291
 15079 000a 2005     		.short	1312
 15080 000c 2305     		.short	1315
 15081 000e 3300     		.short	51
 15082 0010 0006     		.short	1536
 15083 0012 2105     		.short	1313
 15084 0014 2405     		.short	1316
 15085 0016 3300     		.short	51
 15086 0018 0A05     		.short	1290
 15087 001a 2205     		.short	1314
 15088 001c 2505     		.short	1317
 15089 001e 3300     		.short	51
 15090 0020 3300     		.short	51
 15091 0022 4701     		.short	327
 15092 0024 4601     		.short	326
 15093 0026 3300     		.short	51
 15094 0028 3300     		.short	51
 15095 002a 3300     		.short	51
 15096 002c 3300     		.short	51
 15097 002e 3300     		.short	51
 15098 0030 15FF     		.short	-235
 15099 0032 3300     		.short	51
 15100 0034 3300     		.short	51
 15101 0036 3300     		.short	51
 15102 0038 1AFF     		.short	-230
 15103 003a 3300     		.short	51
 15104 003c 3300     		.short	51
 15105 003e 8CFF     		.short	-116
 15106 0040 0901     		.short	265
 15107 0042 3300     		.short	51
 15108 0044 3300     		.short	51
 15109 0046 0A01     		.short	266
 15110 0048 0B01     		.short	267
 15111 004a 3300     		.short	51
 15112 004c 0D01     		.short	269
 15113 004e 0D01     		.short	269
 15114 0050 663F     		.short	16230
ARM GAS  /tmp/cc6xzGMw.s 			page 407


 15115 0052 3300     		.short	51
 15116 0054 3300     		.short	51
 15117 0056 1FFF     		.short	-225
 15118 0058 3805     		.short	1336
 15119 005a 3300     		.short	51
 15120 005c 3300     		.short	51
 15121 005e 3905     		.short	1337
 15122 0060 6621     		.short	8550
 15123 0062 3300     		.short	51
 15124 0064 3300     		.short	51
 15125 0066 6621     		.short	8550
 15126 0068 3300     		.short	51
 15127 006a 3300     		.short	51
 15128 006c 3300     		.short	51
 15129 006e 3300     		.short	51
 15130 0070 3300     		.short	51
 15131 0072 0905     		.short	1289
 15132 0074 0805     		.short	1288
 15133 0076 3300     		.short	51
 15134 0078 07A8     		.short	-22521
 15135 007a 1005     		.short	1296
 15136 007c 0D05     		.short	1293
 15137 007e 3300     		.short	51
 15138 0080 08A8     		.short	-22520
 15139 0082 0F05     		.short	1295
 15140 0084 0E05     		.short	1294
 15141 0086 3300     		.short	51
 15142 0088 09A8     		.short	-22519
 15143 008a 0006     		.short	1536
 15144 008c 0806     		.short	1544
 15145 008e 3300     		.short	51
 15146 0090 0406     		.short	1540
 15147 0092 0B05     		.short	1291
 15148 0094 1606     		.short	1558
 15149 0096 3300     		.short	51
 15150 0098 3300     		.short	51
 15151 009a 1206     		.short	1554
 15152 009c 1306     		.short	1555
 15153 009e 2F05     		.short	1327
 15154 00a0 04A8     		.short	-22524
 15155 00a2 3300     		.short	51
 15156 00a4 3300     		.short	51
 15157 00a6 3300     		.short	51
 15158 00a8 05A8     		.short	-22523
 15159 00aa 3300     		.short	51
 15160 00ac 3300     		.short	51
 15161 00ae 3300     		.short	51
 15162 00b0 06A8     		.short	-22522
 15163 00b2 3300     		.short	51
 15164 00b4 3300     		.short	51
 15165 00b6 3300     		.short	51
 15166 00b8 0306     		.short	1539
 15167 00ba 0A05     		.short	1290
 15168 00bc 1605     		.short	1302
 15169 00be 1605     		.short	1302
 15170 00c0 3300     		.short	51
 15171 00c2 3300     		.short	51
ARM GAS  /tmp/cc6xzGMw.s 			page 408


 15172 00c4 3300     		.short	51
 15173 00c6 3300     		.short	51
 15174 00c8 01A8     		.short	-22527
 15175 00ca 0000     		.short	0
 15176 00cc 0100     		.short	1
 15177 00ce 3300     		.short	51
 15178 00d0 02A8     		.short	-22526
 15179 00d2 3300     		.short	51
 15180 00d4 3300     		.short	51
 15181 00d6 3300     		.short	51
 15182 00d8 03A8     		.short	-22525
 15183 00da 3300     		.short	51
 15184 00dc 3300     		.short	51
 15185 00de 3300     		.short	51
 15186 00e0 0206     		.short	1538
 15187 00e2 3300     		.short	51
 15188 00e4 3300     		.short	51
 15189 00e6 3300     		.short	51
 15190 00e8 3300     		.short	51
 15191 00ea 3300     		.short	51
 15192 00ec 3300     		.short	51
 15193 00ee 0201     		.short	258
 15194 00f0 00A8     		.short	-22528
 15195 00f2 0505     		.short	1285
 15196 00f4 0605     		.short	1286
 15197 00f6 3300     		.short	51
 15198 00f8 B801     		.short	440
 15199 00fa 0405     		.short	1284
 15200 00fc 0005     		.short	1280
 15201 00fe 3300     		.short	51
 15202 0100 3300     		.short	51
 15203 0102 3300     		.short	51
 15204 0104 3300     		.short	51
 15205 0106 3300     		.short	51
 15206 0108 0106     		.short	1537
 15207 010a 3300     		.short	51
 15208 010c 3300     		.short	51
 15209 010e 3300     		.short	51
 15210 0110 0001     		.short	256
 15211 0112 0001     		.short	256
 15212 0114 0001     		.short	256
 15213 0116 0001     		.short	256
 15214              		.section	.rodata.op_map.9434,"a"
 15215              		.align	2
 15216              		.set	.LANCHOR19,. + 0
 15219              	op_map.9434:
 15220 0000 2A27     		.ascii	"*'"
 15221 0002 2B28     		.ascii	"+("
 15222 0004 2C29     		.ascii	",)"
 15223              		.section	.rodata.op_map.9448,"a"
 15224              		.align	2
 15225              		.set	.LANCHOR20,. + 0
 15228              	op_map.9448:
 15229 0000 1A02     		.short	538
 15230 0002 7B02     		.short	635
 15231 0004 1B02     		.short	539
 15232 0006 7A02     		.short	634
ARM GAS  /tmp/cc6xzGMw.s 			page 409


 15233 0008 1C02     		.short	540
 15234 000a 3300     		.short	51
 15235              		.section	.rodata.op_map2.9345,"a"
 15236              		.align	2
 15237              		.set	.LANCHOR4,. + 0
 15240              	op_map2.9345:
 15241 0000 3300     		.short	51
 15242 0002 3300     		.short	51
 15243 0004 0003     		.short	768
 15244 0006 0A02     		.short	522
 15245              		.section	.rodata.opcode_breaks,"a"
 15246              		.align	2
 15247              		.set	.LANCHOR13,. + 0
 15250              	opcode_breaks:
 15251 0000 34CD9C35 		.ascii	"4\315\2345\014\2345"
 15251      0C9C35
 15252              		.section	.rodata.prob_catalogue,"a"
 15253              		.align	2
 15256              	prob_catalogue:
 15257 0000 5414F5B5 		.ascii	"T\024\365\265QYVE\321fST\305\261NQ\226\245\035HVU\205"
 15257      51595645 
 15257      D1665354 
 15257      C5B14E51 
 15257      96A51D48 
 15258 0017 C15A57D5 		.ascii	"\301ZW\325\345\311`X\226\025\315cW\025\265\305]U\225"
 15258      E5C96058 
 15258      9615CD63 
 15258      5715B5C5 
 15258      5D5595
 15259 002a 55BD5754 		.ascii	"U\275WT\325%\271TP\326\225\021ER\224\225\255KY\323\325"
 15259      D525B954 
 15259      50D69511 
 15259      45529495 
 15259      AD4B59D3 
 15260 003f 05425016 		.ascii	"\005BP\026\200"
 15260      80
 15261              		.section	.rodata.prog_catalogue,"a"
 15262              		.align	2
 15265              	prog_catalogue:
 15266 0000 B98D1CE8 		.ascii	"\271\215\034\350y\035G\201\310t*3\213\274B\272\356\321"
 15266      791D4781 
 15266      C8742A33 
 15266      8BBC42BA 
 15266      EED1
 15267 0012 BAB1C08E 		.ascii	"\272\261\300\216\013\342\3713/\013\262\356\312N#\220"
 15267      0BE2F933 
 15267      2F0BB2EE 
 15267      CA4E2390 
 15268 0022 E738CE8C 		.ascii	"\3478\316\214\254\3367r\240\320\3349G\003\233(\264\215"
 15268      ACDE3772 
 15268      A0D0DC39 
 15268      47039B28 
 15268      B48D
 15269 0034 F1D8CD1B 		.ascii	"\361\330\315\033K\022\274\262,\016\033\224\322\015\355"
 15269      4B12BCB2 
 15269      2C0E1B94 
 15269      D20DED
ARM GAS  /tmp/cc6xzGMw.s 			page 410


 15270 0043 1302C32A 		.ascii	"\023\002\303*r \350\313\260l,|\256+q\354\324"
 15270      7220E8CB 
 15270      B06C2C7C 
 15270      AE2B71EC 
 15270      D4
 15271              		.section	.rodata.program_xfcn,"a"
 15272              		.align	2
 15275              	program_xfcn:
 15276 0000 465B46A3 		.ascii	"F[F\243\0220X\246/\024@\312#\265\216o\335BY\323\037"
 15276      123058A6 
 15276      2F1440CA 
 15276      23B58E6F 
 15276      DD4259D3 
 15277 0015 51ECBC42 		.ascii	"Q\354\274B`Y\264\355<d\0216s\025F\220&\335.K\322\007"
 15277      6059B4ED 
 15277      3C641136 
 15277      73154690 
 15277      26DD2E4B 
 15278 002b 15C66D5B 		.ascii	"\025\306m[f\211\315\313]'1\202s\333\202Q\304D\235f\251"
 15278      6689CDCB 
 15278      5D273182 
 15278      73DB8251 
 15278      C4449D66 
 15279 0040 3263F18C 		.ascii	"2c\361\214e\247i\227\366\221\215o\027\347,\303o\\\024"
 15279      65A76997 
 15279      F6918D6F 
 15279      17E72CC3 
 15279      6F5C14
 15280 0053 7F252570 		.ascii	"\177%%p\3149\004\303p\374\223\023\3102\021\241\010I"
 15280      CC3904C3 
 15280      70FC9313 
 15280      C83211A1 
 15280      0849
 15281 0065 F1030B11 		.ascii	"\361\003\013\021\313\2127\011\221p\303V\000\312EQDY"
 15281      CB8A3709 
 15281      9170C356 
 15281      00CA4551 
 15281      4459
 15282 0077 186F8AC7 		.ascii	"\030o\212\307\035\214s\212\002z\327*\211\373Z\324\266"
 15282      1D8C738A 
 15282      027AD72A 
 15282      89FB5AD4 
 15282      B6
 15283 0088 2D9B6ADB 		.ascii	"-\233j\333\265J\022\255\251LZ\326\271\253k\034\006%"
 15283      B54A12AD 
 15283      A94C5AD6 
 15283      B9AB6B1C 
 15283      0625
 15284 009a 9A435DC7 		.ascii	"\232C]\307m\262uW\245\335\261w@"
 15284      6DB27557 
 15284      A5DDB177 
 15284      40
 15285              		.section	.rodata.smap.9269,"a"
 15286              		.align	2
 15287              		.set	.LANCHOR22,. + 0
 15290              	smap.9269:
 15291 0000 00010002 		.ascii	"\000\001\000\002"
ARM GAS  /tmp/cc6xzGMw.s 			page 411


 15292              		.section	.rodata.stats_catalogue,"a"
 15293              		.align	2
 15296              	stats_catalogue:
 15297 0000 1805C1A0 		.ascii	"\030\005\301\240]\027\311qXa\026\205\225\324T\027\205"
 15297      5D17C971 
 15297      58611685 
 15297      95D45417 
 15297      85
 15298 0011 514C575D 		.ascii	"QLW]\300"
 15298      C0
 15299              		.section	.rodata.sums_catalogue,"a"
 15300              		.align	2
 15303              	sums_catalogue:
 15304 0000 1444B134 		.ascii	"\024D\2614J\023\204\301 E\021\004\361\034I\021\205\000"
 15304      4A1384C1 
 15304      20451104 
 15304      F11C4911 
 15304      8500
 15305              		.section	.rodata.test_catalogue,"a"
 15306              		.align	2
 15309              	test_catalogue:
 15310 0000 C5F16CD0 		.ascii	"\305\361l\320\353/\313\334\023\010\302\260\222\363\003"
 15310      EB2FCBDC 
 15310      1308C2B0 
 15310      92F303
 15311 000f C1707C18 		.ascii	"\301p|\030\323.\361\333\310\2356\213\202\370\2725\013"
 15311      D32EF1DB 
 15311      C89D368B 
 15311      82F8BA35 
 15311      0B
 15312 0020 9340F0B7 		.ascii	"\223@\360\267\356\003T\326\267\256+\204\267<@"
 15312      EE0354D6 
 15312      B7AE2B84 
 15312      B73C40
 15313              		.text
 15314              	.Letext0:
 15315              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 15316              		.file 3 "dmcp/dmcp.h"
 15317              		.file 4 "src/decNumber/decContext.h"
 15318              		.file 5 "src/decNumber/decNumber.h"
 15319              		.file 6 "src/decNumber/decimal64.h"
 15320              		.file 7 "src/decNumber/decimal128.h"
 15321              		.file 8 "src/xeq.h"
 15322              		.file 9 "src/data.h"
 15323              		.file 10 "src/keys.h"
 15324              		.file 11 "src/display.h"
 15325              		.file 12 "src/consts.h"
 15326              		.file 13 "src/storage.h"
 15327              		.file 14 "src/stats.h"
 15328              		.file 15 "src/catalogues.h"
 15329              		.file 16 "src/lcd.h"
 15330              		.file 17 "src/int.h"
 15331              		.file 18 "src/decn.h"
ARM GAS  /tmp/cc6xzGMw.s 			page 412


DEFINED SYMBOLS
                            *ABS*:0000000000000000 keys.c
     /tmp/cc6xzGMw.s:18     .text.gtodot_digit:0000000000000000 $t
     /tmp/cc6xzGMw.s:26     .text.gtodot_digit:0000000000000000 gtodot_digit
     /tmp/cc6xzGMw.s:110    .text.gtodot_digit:0000000000000054 $d
     /tmp/cc6xzGMw.s:117    .text.check_f_key:0000000000000000 $t
     /tmp/cc6xzGMw.s:124    .text.check_f_key:0000000000000000 check_f_key
     /tmp/cc6xzGMw.s:202    .text.check_f_key:0000000000000038 $d
     /tmp/cc6xzGMw.s:208    .text.is_label_or_end_at:0000000000000000 $t
     /tmp/cc6xzGMw.s:215    .text.is_label_or_end_at:0000000000000000 is_label_or_end_at
     /tmp/cc6xzGMw.s:271    .text.advance_to_next_label:0000000000000000 $t
     /tmp/cc6xzGMw.s:278    .text.advance_to_next_label:0000000000000000 advance_to_next_label
     /tmp/cc6xzGMw.s:359    .text.advance_to_next_label:0000000000000048 $d
     /tmp/cc6xzGMw.s:364    .text.init_cat:0000000000000000 $t
     /tmp/cc6xzGMw.s:371    .text.init_cat:0000000000000000 init_cat
     /tmp/cc6xzGMw.s:684    .text.init_cat:00000000000000e4 $d
     /tmp/cc6xzGMw.s:690    .text.advance_to_previous_label:0000000000000000 $t
     /tmp/cc6xzGMw.s:697    .text.advance_to_previous_label:0000000000000000 advance_to_previous_label
     /tmp/cc6xzGMw.s:782    .text.advance_to_previous_label:000000000000004c $d
     /tmp/cc6xzGMw.s:787    .text.check_confirm.part.0:0000000000000000 $t
     /tmp/cc6xzGMw.s:794    .text.check_confirm.part.0:0000000000000000 check_confirm.part.0
     /tmp/cc6xzGMw.s:848    .text.check_confirm.part.0:0000000000000028 $d
                            *COM*:0000000000000004 NonProgrammable
     /tmp/cc6xzGMw.s:855    .text.init_arg.part.0:0000000000000000 $t
     /tmp/cc6xzGMw.s:862    .text.init_arg.part.0:0000000000000000 init_arg.part.0
     /tmp/cc6xzGMw.s:904    .text.init_arg.part.0:0000000000000024 $d
     /tmp/cc6xzGMw.s:909    .text.reset_arg:0000000000000000 $t
     /tmp/cc6xzGMw.s:916    .text.reset_arg:0000000000000000 reset_arg
     /tmp/cc6xzGMw.s:960    .text.reset_arg:0000000000000018 $d
     /tmp/cc6xzGMw.s:965    .text.arg_eval:0000000000000000 $t
     /tmp/cc6xzGMw.s:972    .text.arg_eval:0000000000000000 arg_eval
     /tmp/cc6xzGMw.s:1117   .text.arg_eval:0000000000000090 $d
     /tmp/cc6xzGMw.s:1124   .text.arg_digit:0000000000000000 $t
     /tmp/cc6xzGMw.s:1131   .text.arg_digit:0000000000000000 arg_digit
     /tmp/cc6xzGMw.s:1392   .text.arg_digit:00000000000000fc $d
     /tmp/cc6xzGMw.s:1400   .text.process_arg_shuffle:0000000000000000 $t
     /tmp/cc6xzGMw.s:1407   .text.process_arg_shuffle:0000000000000000 process_arg_shuffle
     /tmp/cc6xzGMw.s:1465   .text.process_arg_shuffle:000000000000002c $d
     /tmp/cc6xzGMw.s:1470   .text.process_h_shifted:0000000000000000 $t
     /tmp/cc6xzGMw.s:1477   .text.process_h_shifted:0000000000000000 process_h_shifted
     /tmp/cc6xzGMw.s:1725   .text.process_h_shifted:00000000000000c8 $d
     /tmp/cc6xzGMw.s:1733   .text.intltr:0000000000000000 $t
     /tmp/cc6xzGMw.s:1740   .text.intltr:0000000000000000 intltr
     /tmp/cc6xzGMw.s:1803   .text.intltr:0000000000000030 $d
     /tmp/cc6xzGMw.s:1809   .text.process_normal:0000000000000000 $t
     /tmp/cc6xzGMw.s:1816   .text.process_normal:0000000000000000 process_normal
     /tmp/cc6xzGMw.s:1877   .text.process_normal:0000000000000022 $d
     /tmp/cc6xzGMw.s:1923   .text.process_normal:000000000000007e $t
     /tmp/cc6xzGMw.s:1972   .text.process_normal:00000000000000ac $d
     /tmp/cc6xzGMw.s:1991   .text.process_normal:00000000000000f8 $t
     /tmp/cc6xzGMw.s:2002   .text.process_normal:0000000000000104 $d
     /tmp/cc6xzGMw.s:2045   .text.process_normal:00000000000001b0 $t
     /tmp/cc6xzGMw.s:2246   .text.process_normal:0000000000000264 $d
     /tmp/cc6xzGMw.s:2255   .text.process_fg_shifted:0000000000000000 $t
     /tmp/cc6xzGMw.s:2262   .text.process_fg_shifted:0000000000000000 process_fg_shifted
     /tmp/cc6xzGMw.s:2390   .text.process_fg_shifted:000000000000003e $d
     /tmp/cc6xzGMw.s:2589   .text.process_fg_shifted:000000000000010c $d
ARM GAS  /tmp/cc6xzGMw.s 			page 413


     /tmp/cc6xzGMw.s:2630   .text.process_fg_shifted:00000000000001b0 $t
     /tmp/cc6xzGMw.s:2826   .text.process_fg_shifted:0000000000000294 $d
     /tmp/cc6xzGMw.s:2835   .text.set_window:0000000000000000 $t
     /tmp/cc6xzGMw.s:2842   .text.set_window:0000000000000000 set_window
     /tmp/cc6xzGMw.s:2989   .text.set_window:000000000000008c $d
     /tmp/cc6xzGMw.s:2996   .text.arg_storcl:0000000000000000 $t
     /tmp/cc6xzGMw.s:3003   .text.arg_storcl:0000000000000000 arg_storcl
     /tmp/cc6xzGMw.s:3119   .text.arg_storcl:0000000000000040 $d
     /tmp/cc6xzGMw.s:3124   .text.process_arg:0000000000000000 $t
     /tmp/cc6xzGMw.s:3131   .text.process_arg:0000000000000000 process_arg
     /tmp/cc6xzGMw.s:3337   .text.process_arg:000000000000008a $d
     /tmp/cc6xzGMw.s:3341   .text.process_arg:0000000000000090 $t
     /tmp/cc6xzGMw.s:3430   .text.process_arg:00000000000000f0 $d
     /tmp/cc6xzGMw.s:3477   .text.process_arg:00000000000001a8 $t
     /tmp/cc6xzGMw.s:3880   .text.process_arg:000000000000032c $d
     /tmp/cc6xzGMw.s:3889   .text.process_arg:0000000000000340 $t
     /tmp/cc6xzGMw.s:4380   .text.process_arg:000000000000054c $d
     /tmp/cc6xzGMw.s:4385   .text.cur_shift:0000000000000000 $t
     /tmp/cc6xzGMw.s:4393   .text.cur_shift:0000000000000000 cur_shift
     /tmp/cc6xzGMw.s:4421   .text.cur_shift:0000000000000010 $d
     /tmp/cc6xzGMw.s:4426   .text.reset_shift:0000000000000000 $t
     /tmp/cc6xzGMw.s:4434   .text.reset_shift:0000000000000000 reset_shift
     /tmp/cc6xzGMw.s:4492   .text.reset_shift:0000000000000014 $d
     /tmp/cc6xzGMw.s:4497   .text.keycode_to_row_column:0000000000000000 $t
     /tmp/cc6xzGMw.s:4505   .text.keycode_to_row_column:0000000000000000 keycode_to_row_column
     /tmp/cc6xzGMw.s:4533   .text.keycode_to_row_column:0000000000000020 $d
     /tmp/cc6xzGMw.s:4538   .text.row_column_to_keycode:0000000000000000 $t
     /tmp/cc6xzGMw.s:4546   .text.row_column_to_keycode:0000000000000000 row_column_to_keycode
     /tmp/cc6xzGMw.s:4604   .text.row_column_to_keycode:000000000000003c $d
     /tmp/cc6xzGMw.s:4609   .text.keycode_to_digit_or_register:0000000000000000 $t
     /tmp/cc6xzGMw.s:4617   .text.keycode_to_digit_or_register:0000000000000000 keycode_to_digit_or_register
     /tmp/cc6xzGMw.s:4653   .text.keycode_to_digit_or_register:000000000000000c $d
     /tmp/cc6xzGMw.s:4659   .text.init_state:0000000000000000 $t
     /tmp/cc6xzGMw.s:4667   .text.init_state:0000000000000000 init_state
     /tmp/cc6xzGMw.s:4790   .text.init_state:0000000000000078 $d
     /tmp/cc6xzGMw.s:4797   .text.process_cmplx:0000000000000000 $t
     /tmp/cc6xzGMw.s:4804   .text.process_cmplx:0000000000000000 process_cmplx
     /tmp/cc6xzGMw.s:5087   .text.process_cmplx:00000000000000b0 $d
     /tmp/cc6xzGMw.s:5094   .text.soft_init_state:0000000000000000 $t
     /tmp/cc6xzGMw.s:5102   .text.soft_init_state:0000000000000000 soft_init_state
     /tmp/cc6xzGMw.s:5197   .text.soft_init_state:0000000000000048 $d
     /tmp/cc6xzGMw.s:5203   .text.finish_cpx_entry:0000000000000000 $t
     /tmp/cc6xzGMw.s:5211   .text.finish_cpx_entry:0000000000000000 finish_cpx_entry
     /tmp/cc6xzGMw.s:5377   .text.finish_cpx_entry:00000000000000bc $d
     /tmp/cc6xzGMw.s:5384   .text.stack_begin:0000000000000000 $t
     /tmp/cc6xzGMw.s:5392   .text.stack_begin:0000000000000000 stack_begin
     /tmp/cc6xzGMw.s:5532   .text.stack_begin:00000000000000b4 $d
     /tmp/cc6xzGMw.s:5538   .text.current_catalogue_max:0000000000000000 $t
     /tmp/cc6xzGMw.s:5546   .text.current_catalogue_max:0000000000000000 current_catalogue_max
     /tmp/cc6xzGMw.s:5567   .text.current_catalogue_max:000000000000000c $d
     /tmp/cc6xzGMw.s:5573   .text.current_catalogue:0000000000000000 $t
     /tmp/cc6xzGMw.s:5581   .text.current_catalogue:0000000000000000 current_catalogue
     /tmp/cc6xzGMw.s:5837   .text.current_catalogue:00000000000000c8 $d
     /tmp/cc6xzGMw.s:5847   .text.process_catalogue:0000000000000000 $t
     /tmp/cc6xzGMw.s:5854   .text.process_catalogue:0000000000000000 process_catalogue
     /tmp/cc6xzGMw.s:6183   .text.process_catalogue:00000000000000fe $d
     /tmp/cc6xzGMw.s:6215   .text.process_catalogue:000000000000011e $t
ARM GAS  /tmp/cc6xzGMw.s 			page 414


     /tmp/cc6xzGMw.s:6723   .text.process_catalogue:00000000000002dc $d
     /tmp/cc6xzGMw.s:6744   .text.process_catalogue:00000000000002fc $t
     /tmp/cc6xzGMw.s:6774   .text.find_pos:0000000000000000 $t
     /tmp/cc6xzGMw.s:6782   .text.find_pos:0000000000000000 find_pos
     /tmp/cc6xzGMw.s:6955   .text.find_pos:0000000000000080 $d
     /tmp/cc6xzGMw.s:6961   .text.get_alpha_state:0000000000000000 $t
     /tmp/cc6xzGMw.s:6969   .text.get_alpha_state:0000000000000000 get_alpha_state
     /tmp/cc6xzGMw.s:7001   .text.get_alpha_state:0000000000000020 $d
     /tmp/cc6xzGMw.s:7007   .rodata.process_keycode.str1.4:0000000000000000 $d
     /tmp/cc6xzGMw.s:7017   .text.process_keycode:0000000000000000 $t
     /tmp/cc6xzGMw.s:7025   .text.process_keycode:0000000000000000 process_keycode
     /tmp/cc6xzGMw.s:7644   .text.process_keycode:00000000000002e0 $d
                            *COM*:0000000000000004 OpCode
                            *COM*:0000000000000004 GoFast
                            *COM*:0000000000000004 OpCodeDisplayPending
                            *COM*:0000000000000004 WasDataEntry
     /tmp/cc6xzGMw.s:7667   .text.process_keycode:0000000000000320 $t
     /tmp/cc6xzGMw.s:7866   .text.process_keycode:00000000000003f0 $d
     /tmp/cc6xzGMw.s:7875   .text.process_keycode:0000000000000414 $t
     /tmp/cc6xzGMw.s:8355   .text.process_keycode:000000000000061c $d
                            *COM*:0000000000000004 nd_opcode
     /tmp/cc6xzGMw.s:8373   .text.process_keycode:0000000000000658 $t
     /tmp/cc6xzGMw.s:8419   .text.process_keycode:0000000000000678 $d
     /tmp/cc6xzGMw.s:8446   .text.process_keycode:0000000000000692 $t
     /tmp/cc6xzGMw.s:8575   .text.process_keycode:0000000000000720 $d
     /tmp/cc6xzGMw.s:8579   .text.process_keycode:0000000000000730 $t
     /tmp/cc6xzGMw.s:9162   .text.process_keycode:0000000000000960 $d
     /tmp/cc6xzGMw.s:9179   .text.process_keycode:000000000000097c $t
     /tmp/cc6xzGMw.s:9587   .text.process_keycode:0000000000000acc $d
     /tmp/cc6xzGMw.s:9617   .text.process_keycode:0000000000000b44 $t
     /tmp/cc6xzGMw.s:10058  .text.process_keycode:0000000000000cb8 $d
     /tmp/cc6xzGMw.s:10075  .text.process_keycode:0000000000000cdc $t
     /tmp/cc6xzGMw.s:10438  .text.process_keycode:0000000000000e0c $d
     /tmp/cc6xzGMw.s:10473  .text.process_keycode:0000000000000e98 $t
     /tmp/cc6xzGMw.s:10729  .text.process_keycode:0000000000000f90 $d
     /tmp/cc6xzGMw.s:10749  .text.process_keycode:0000000000000fe0 $t
     /tmp/cc6xzGMw.s:10798  .text.process_keycode:0000000000001020 $d
     /tmp/cc6xzGMw.s:10827  .text.process_keycode:0000000000001034 $t
     /tmp/cc6xzGMw.s:10962  .text.process_keycode:0000000000001098 $d
     /tmp/cc6xzGMw.s:10980  .text.process_keycode:00000000000010e0 $t
     /tmp/cc6xzGMw.s:11525  .text.process_keycode:000000000000128a $d
     /tmp/cc6xzGMw.s:11560  .text.process_keycode:00000000000012ce $t
     /tmp/cc6xzGMw.s:11576  .text.process_keycode:00000000000012e0 $d
     /tmp/cc6xzGMw.s:11586  .text.process_keycode:00000000000012f4 $t
     /tmp/cc6xzGMw.s:11635  .text.process_keycode:000000000000131c $d
     /tmp/cc6xzGMw.s:11670  .text.process_keycode:00000000000013a4 $t
     /tmp/cc6xzGMw.s:11974  .text.process_keycode:0000000000001502 $d
     /tmp/cc6xzGMw.s:12017  .text.process_keycode:0000000000001556 $t
     /tmp/cc6xzGMw.s:12238  .text.process_keycode:0000000000001634 $d
     /tmp/cc6xzGMw.s:12245  .text.process_keycode:0000000000001640 $t
     /tmp/cc6xzGMw.s:12771  .text.process_keycode:000000000000186c $d
     /tmp/cc6xzGMw.s:12797  .text.process_keycode:00000000000018d4 $t
     /tmp/cc6xzGMw.s:13280  .text.process_keycode:0000000000001a58 $d
     /tmp/cc6xzGMw.s:13288  .text.process_keycode:0000000000001a64 $t
     /tmp/cc6xzGMw.s:14366  .text.process_keycode:0000000000001de4 $d
     /tmp/cc6xzGMw.s:14375  .text.process_keycode_with_shift:0000000000000000 $t
     /tmp/cc6xzGMw.s:14383  .text.process_keycode_with_shift:0000000000000000 process_keycode_with_shift
ARM GAS  /tmp/cc6xzGMw.s 			page 415


     /tmp/cc6xzGMw.s:14591  .text.process_keycode_with_shift:000000000000008c $d
     /tmp/cc6xzGMw.s:14608  .bss.was_paused.9793:0000000000000000 $d
     /tmp/cc6xzGMw.s:14612  .bss.was_paused.9793:0000000000000000 was_paused.9793
     /tmp/cc6xzGMw.s:14615  .rodata.alpha_arrows:0000000000000000 $d
     /tmp/cc6xzGMw.s:14618  .rodata.alpha_arrows:0000000000000000 alpha_arrows
     /tmp/cc6xzGMw.s:14621  .rodata.alpha_catalogue:0000000000000000 $d
     /tmp/cc6xzGMw.s:14624  .rodata.alpha_catalogue:0000000000000000 alpha_catalogue
     /tmp/cc6xzGMw.s:14627  .rodata.alpha_compares:0000000000000000 $d
     /tmp/cc6xzGMw.s:14630  .rodata.alpha_compares:0000000000000000 alpha_compares
     /tmp/cc6xzGMw.s:14633  .rodata.alpha_letters:0000000000000000 $d
     /tmp/cc6xzGMw.s:14637  .rodata.alpha_letters:0000000000000000 alpha_letters
     /tmp/cc6xzGMw.s:14643  .rodata.alpha_letters_lower:0000000000000000 $d
     /tmp/cc6xzGMw.s:14647  .rodata.alpha_letters_lower:0000000000000000 alpha_letters_lower
     /tmp/cc6xzGMw.s:14653  .rodata.alpha_subscripts:0000000000000000 $d
     /tmp/cc6xzGMw.s:14656  .rodata.alpha_subscripts:0000000000000000 alpha_subscripts
     /tmp/cc6xzGMw.s:14660  .rodata.alpha_symbols:0000000000000000 $d
     /tmp/cc6xzGMw.s:14663  .rodata.alpha_symbols:0000000000000000 alpha_symbols
     /tmp/cc6xzGMw.s:14666  .rodata.alphamap.9277:0000000000000000 $d
     /tmp/cc6xzGMw.s:14670  .rodata.alphamap.9277:0000000000000000 alphamap.9277
     /tmp/cc6xzGMw.s:14710  .rodata.amap.9268:0000000000000000 $d
     /tmp/cc6xzGMw.s:14714  .rodata.amap.9268:0000000000000000 amap.9268
     /tmp/cc6xzGMw.s:14732  .rodata.catalogue:0000000000000000 $d
     /tmp/cc6xzGMw.s:14735  .rodata.catalogue:0000000000000000 catalogue
     /tmp/cc6xzGMw.s:14745  .rodata.catalogue_sizes.9591:0000000000000000 $d
     /tmp/cc6xzGMw.s:14749  .rodata.catalogue_sizes.9591:0000000000000000 catalogue_sizes.9591
     /tmp/cc6xzGMw.s:14752  .rodata.catalogues.9599:0000000000000000 $d
     /tmp/cc6xzGMw.s:14756  .rodata.catalogues.9599:0000000000000000 catalogues.9599
     /tmp/cc6xzGMw.s:14841  .rodata.cplx_catalogue:0000000000000000 cplx_catalogue
     /tmp/cc6xzGMw.s:15296  .rodata.stats_catalogue:0000000000000000 stats_catalogue
     /tmp/cc6xzGMw.s:15256  .rodata.prob_catalogue:0000000000000000 prob_catalogue
     /tmp/cc6xzGMw.s:14859  .rodata.int_catalogue:0000000000000000 int_catalogue
     /tmp/cc6xzGMw.s:15265  .rodata.prog_catalogue:0000000000000000 prog_catalogue
     /tmp/cc6xzGMw.s:15275  .rodata.program_xfcn:0000000000000000 program_xfcn
     /tmp/cc6xzGMw.s:15309  .rodata.test_catalogue:0000000000000000 test_catalogue
     /tmp/cc6xzGMw.s:14905  .rodata.mode_catalogue:0000000000000000 mode_catalogue
     /tmp/cc6xzGMw.s:15303  .rodata.sums_catalogue:0000000000000000 sums_catalogue
     /tmp/cc6xzGMw.s:14898  .rodata.matrix_catalogue:0000000000000000 matrix_catalogue
     /tmp/cc6xzGMw.s:14779  .rodata.cmap.9267:0000000000000000 $d
     /tmp/cc6xzGMw.s:14783  .rodata.cmap.9267:0000000000000000 cmap.9267
     /tmp/cc6xzGMw.s:14809  .rodata.conv_catalogue:0000000000000000 $d
     /tmp/cc6xzGMw.s:14813  .rodata.conv_catalogue:0000000000000000 conv_catalogue
     /tmp/cc6xzGMw.s:14820  .rodata.conv_mapping.9638:0000000000000000 $d
     /tmp/cc6xzGMw.s:14824  .rodata.conv_mapping.9638:0000000000000000 conv_mapping.9638
     /tmp/cc6xzGMw.s:14838  .rodata.cplx_catalogue:0000000000000000 $d
     /tmp/cc6xzGMw.s:14846  .rodata.disp.9449:0000000000000000 $d
     /tmp/cc6xzGMw.s:14850  .rodata.disp.9449:0000000000000000 disp.9449
     /tmp/cc6xzGMw.s:14856  .rodata.int_catalogue:0000000000000000 $d
     /tmp/cc6xzGMw.s:14865  .rodata.linear_key_map.9233:0000000000000000 $d
     /tmp/cc6xzGMw.s:14869  .rodata.linear_key_map.9233:0000000000000000 linear_key_map.9233
     /tmp/cc6xzGMw.s:14875  .rodata.linear_key_map.9237:0000000000000000 $d
     /tmp/cc6xzGMw.s:14879  .rodata.linear_key_map.9237:0000000000000000 linear_key_map.9237
     /tmp/cc6xzGMw.s:14885  .rodata.map.9249:0000000000000000 $d
     /tmp/cc6xzGMw.s:14889  .rodata.map.9249:0000000000000000 map.9249
     /tmp/cc6xzGMw.s:14895  .rodata.matrix_catalogue:0000000000000000 $d
     /tmp/cc6xzGMw.s:14902  .rodata.mode_catalogue:0000000000000000 $d
     /tmp/cc6xzGMw.s:14911  .rodata.op_map.9321:0000000000000000 $d
     /tmp/cc6xzGMw.s:14915  .rodata.op_map.9321:0000000000000000 op_map.9321
ARM GAS  /tmp/cc6xzGMw.s 			page 416


     /tmp/cc6xzGMw.s:14952  .rodata.op_map.9344:0000000000000000 $d
     /tmp/cc6xzGMw.s:14956  .rodata.op_map.9344:0000000000000000 op_map.9344
     /tmp/cc6xzGMw.s:15028  .rodata.op_map.9367:0000000000000000 $d
     /tmp/cc6xzGMw.s:15032  .rodata.op_map.9367:0000000000000000 op_map.9367
     /tmp/cc6xzGMw.s:15069  .rodata.op_map.9422:0000000000000000 $d
     /tmp/cc6xzGMw.s:15073  .rodata.op_map.9422:0000000000000000 op_map.9422
     /tmp/cc6xzGMw.s:15215  .rodata.op_map.9434:0000000000000000 $d
     /tmp/cc6xzGMw.s:15219  .rodata.op_map.9434:0000000000000000 op_map.9434
     /tmp/cc6xzGMw.s:15224  .rodata.op_map.9448:0000000000000000 $d
     /tmp/cc6xzGMw.s:15228  .rodata.op_map.9448:0000000000000000 op_map.9448
     /tmp/cc6xzGMw.s:15236  .rodata.op_map2.9345:0000000000000000 $d
     /tmp/cc6xzGMw.s:15240  .rodata.op_map2.9345:0000000000000000 op_map2.9345
     /tmp/cc6xzGMw.s:15246  .rodata.opcode_breaks:0000000000000000 $d
     /tmp/cc6xzGMw.s:15250  .rodata.opcode_breaks:0000000000000000 opcode_breaks
     /tmp/cc6xzGMw.s:15253  .rodata.prob_catalogue:0000000000000000 $d
     /tmp/cc6xzGMw.s:15262  .rodata.prog_catalogue:0000000000000000 $d
     /tmp/cc6xzGMw.s:15272  .rodata.program_xfcn:0000000000000000 $d
     /tmp/cc6xzGMw.s:15286  .rodata.smap.9269:0000000000000000 $d
     /tmp/cc6xzGMw.s:15290  .rodata.smap.9269:0000000000000000 smap.9269
     /tmp/cc6xzGMw.s:15293  .rodata.stats_catalogue:0000000000000000 $d
     /tmp/cc6xzGMw.s:15300  .rodata.sums_catalogue:0000000000000000 $d
     /tmp/cc6xzGMw.s:15306  .rodata.test_catalogue:0000000000000000 $d
     /tmp/cc6xzGMw.s:2431   .text.process_fg_shifted:0000000000000067 $d
     /tmp/cc6xzGMw.s:2431   .text.process_fg_shifted:0000000000000068 $t

UNDEFINED SYMBOLS
sizeLIB
main_ram
StateWhileOn
find_label_from
getprog
do_inc
PcWrapped
process_cmdline
shift_down
do_dec
is_bad_cmdline
error_message
argcmds
get_dispmode_digs
num_arg_digits
local_regs_rarg
global_regs_rarg
process_cmdline_set_lift
update_program_bounds
set_pc
int_base
set_menu
display_current_menu
display
is_dblmode
IntMaxWindow
xset
set_lift
ShowRegister
get_reg_n
swap_reg
ARM GAS  /tmp/cc6xzGMw.s 			page 417


copyreg
op_p2r
RectPolConv
lift
zero_X
zero_Y
remap_chars
catcmd
keyticks
xeq_init_contexts
is_dot
xeq
xeqprog
dot
Pause
JustStopped
Running
ShowRPN
JustDisplayed
DispMsg
xeq_xrom
stoprog
is_key_pressed
set_running_off
xeq_sst_bst
clr_dot
finish_RPN
message
find_char
delprog
prt
scopy_char
TraceBuffer
clpall
clrprog
reset
clrall
set_last_menu
find_user_pc
cmdgtocommon
global_regs
drop
get_last_menu
convert_regK
local_regs
set_default_menu
alen

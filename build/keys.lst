ARM GAS  /tmp/ccizbp1a.s 			page 1


   1              		.arch armv7e-m
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"keys.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.gtodot_digit,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	gtodot_digit:
  27              	.LVL0:
  28              	.LFB25:
  29              		.file 1 "src/keys.c"
   1:src/keys.c    **** /* This file is part of 34S.
   2:src/keys.c    ****  * 
   3:src/keys.c    ****  * 34S is free software: you can redistribute it and/or modify
   4:src/keys.c    ****  * it under the terms of the GNU General Public License as published by
   5:src/keys.c    ****  * the Free Software Foundation, either version 3 of the License, or
   6:src/keys.c    ****  * (at your option) any later version.
   7:src/keys.c    ****  * 
   8:src/keys.c    ****  * 34S is distributed in the hope that it will be useful,
   9:src/keys.c    ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:src/keys.c    ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:src/keys.c    ****  * GNU General Public License for more details.
  12:src/keys.c    ****  * 
  13:src/keys.c    ****  * You should have received a copy of the GNU General Public License
  14:src/keys.c    ****  * along with 34S.  If not, see <http://www.gnu.org/licenses/>.
  15:src/keys.c    ****  */
  16:src/keys.c    **** 
  17:src/keys.c    **** 
  18:src/keys.c    **** #ifdef DM42
  19:src/keys.c    **** #include "dmcp.h"
  20:src/keys.c    **** #endif
  21:src/keys.c    **** 
  22:src/keys.c    **** #define DM42SAFE
  23:src/keys.c    **** 
  24:src/keys.c    **** #include "features.h"
  25:src/keys.c    **** #include "xeq.h"
  26:src/keys.c    **** #include "keys.h"
  27:src/keys.c    **** #include "display.h"
  28:src/keys.c    **** #include "lcd.h"
  29:src/keys.c    **** #include "int.h"
ARM GAS  /tmp/ccizbp1a.s 			page 2


  30:src/keys.c    **** #include "consts.h"
  31:src/keys.c    **** #include "storage.h"
  32:src/keys.c    **** #include "stats.h"
  33:src/keys.c    **** #include "catalogues.h"
  34:src/keys.c    **** #ifndef DM42
  35:src/keys.c    **** #include "printer.h"
  36:src/keys.c    **** #endif
  37:src/keys.c    **** #undef DM42SAFE
  38:src/keys.c    **** 
  39:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
  40:src/keys.c    **** extern void changed_catalog_state();
  41:src/keys.c    **** #endif
  42:src/keys.c    **** 
  43:src/keys.c    **** #define STATE_UNFINISHED	(OP_SPEC | OP_UNFINISHED)
  44:src/keys.c    **** #define STATE_BACKSPACE		(OP_SPEC | OP_BACKSPACE)
  45:src/keys.c    **** #define STATE_SST		(OP_SPEC | OP_SST)
  46:src/keys.c    **** #define STATE_BST		(OP_SPEC | OP_BST)
  47:src/keys.c    **** #define STATE_RUNNING		(OP_SPEC | OP_RUNNING)
  48:src/keys.c    **** #define STATE_IGNORE		(OP_SPEC | OP_IGNORE)
  49:src/keys.c    **** #define STATE_WINDOWLEFT	(OP_SPEC | OP_WINDOWLEFT)
  50:src/keys.c    **** #define STATE_WINDOWRIGHT	(OP_SPEC | OP_WINDOWRIGHT)
  51:src/keys.c    **** //#define STATE_SHOW		(OP_SPEC | OP_SHOW)
  52:src/keys.c    **** 
  53:src/keys.c    **** /* Define this if the key codes map rows sequentially */
  54:src/keys.c    **** 
  55:src/keys.c    **** #define TEST_EQ		0
  56:src/keys.c    **** #define TEST_NE		1
  57:src/keys.c    **** #define TEST_LT		2
  58:src/keys.c    **** #define TEST_LE		3
  59:src/keys.c    **** #define TEST_GT		4
  60:src/keys.c    **** #define TEST_GE		5
  61:src/keys.c    **** 
  62:src/keys.c    **** enum confirmations {
  63:src/keys.c    **** 	// Apart from the first of these, these must be in the same
  64:src/keys.c    **** 	// order as the opcodes in xeq.h: OP_CLALL, OP_RESET, OP_CLPROG, OP_CLPALL
  65:src/keys.c    **** 	confirm_none=0, confirm_clall, confirm_reset, confirm_clprog, confirm_clpall
  66:src/keys.c    **** };
  67:src/keys.c    **** 
  68:src/keys.c    **** FLAG WasDataEntry;
  69:src/keys.c    **** 
  70:src/keys.c    **** /* Local data to this module */
  71:src/keys.c    **** unsigned int OpCode;
  72:src/keys.c    **** FLAG OpCodeDisplayPending;
  73:src/keys.c    **** FLAG GoFast;
  74:src/keys.c    **** FLAG NonProgrammable;
  75:src/keys.c    **** 
  76:src/keys.c    **** /*
  77:src/keys.c    ****  *  Needed before definition
  78:src/keys.c    ****  */ 
  79:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end);
  80:src/keys.c    **** 
  81:src/keys.c    **** /*
  82:src/keys.c    ****  *  Return the shift state
  83:src/keys.c    ****  */
  84:src/keys.c    **** enum shifts cur_shift(void) {
  85:src/keys.c    **** 	enum shifts s = shift_down();
  86:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
ARM GAS  /tmp/ccizbp1a.s 			page 3


  87:src/keys.c    **** }
  88:src/keys.c    **** 
  89:src/keys.c    **** /*
  90:src/keys.c    ****  *  Set new shift state, return previous state
  91:src/keys.c    ****  */
  92:src/keys.c    **** static enum shifts set_shift(enum shifts shift) {
  93:src/keys.c    **** 	enum shifts r = cur_shift();
  94:src/keys.c    **** 	State2.shifts = shift;
  95:src/keys.c    **** 	State2.alpha_pos = 0;
  96:src/keys.c    **** 	return r;
  97:src/keys.c    **** }
  98:src/keys.c    **** 
  99:src/keys.c    **** /*
 100:src/keys.c    ****  *  Clear shift state and return previous state
 101:src/keys.c    ****  */
 102:src/keys.c    **** enum shifts reset_shift(void) {
 103:src/keys.c    **** 	return set_shift(SHIFT_N);
 104:src/keys.c    **** }
 105:src/keys.c    **** 
 106:src/keys.c    **** /*
 107:src/keys.c    ****  *  Toggle shift state
 108:src/keys.c    ****  */
 109:src/keys.c    **** static void toggle_shift(enum shifts shift) {
 110:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 111:src/keys.c    **** }
 112:src/keys.c    **** 
 113:src/keys.c    **** 
 114:src/keys.c    **** /*
 115:src/keys.c    ****  * Mapping from the key code to a linear index
 116:src/keys.c    ****  * The trick is to move the shifts and the holes in the map out of the way
 117:src/keys.c    ****  */
 118:src/keys.c    **** #ifdef DM42
 119:src/keys.c    **** static int keycode_to_linear_for_alpha(const keycode c)
 120:src/keys.c    **** {
 121:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 122:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 123:src/keys.c    **** 		 6,  7,  8,  9, 10, 11,   // K10 - K15
 124:src/keys.c    **** 		 12, 13, 14, 15, 16,  0,   // K20 - K24
 125:src/keys.c    **** 		17, 18, 19, 20, 21,  0,   // K30 - K34
 126:src/keys.c    **** 		22, 23, 24, 25, 26,  0,   // K40 - K44
 127:src/keys.c    **** 		27, 28, 29, 30, 31,  0,   // K50 - K54
 128:src/keys.c    **** 		32, 33, 34, 35, 36,       // K60 - K64
 129:src/keys.c    **** 		37, 37, 37, 37, 37, 37       // K_F, G, H, ARROW, CMPLX, NOP
 130:src/keys.c    **** 	};
 131:src/keys.c    **** 	return linear_key_map[c];
 132:src/keys.c    **** }
 133:src/keys.c    **** 
 134:src/keys.c    **** static int keycode_to_linear(const keycode c)
 135:src/keys.c    **** {
 136:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 137:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 138:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 139:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 140:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 141:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 142:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 143:src/keys.c    **** 		29, 30, 31, 32, 33,       // K60 - K64
ARM GAS  /tmp/ccizbp1a.s 			page 4


 144:src/keys.c    **** 		34, 34, 34,  4,  5, 34,        // K_F, G, H, ARROW, CMPLX, NOP
 145:src/keys.c    **** 	};
 146:src/keys.c    **** 	return linear_key_map[c];
 147:src/keys.c    **** }
 148:src/keys.c    **** #else
 149:src/keys.c    **** static int keycode_to_linear(const keycode c)
 150:src/keys.c    **** {
 151:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 ] = {
 152:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 153:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 154:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 155:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 156:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 157:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 158:src/keys.c    **** 		29, 30, 31, 32, 33        // K60 - K64
 159:src/keys.c    **** 	};
 160:src/keys.c    **** 	return linear_key_map[c];
 161:src/keys.c    **** }
 162:src/keys.c    **** #endif
 163:src/keys.c    **** /*
 164:src/keys.c    ****  * Mapping from the key code to a row column code ('A'=11 to '+'=75)
 165:src/keys.c    ****  * Used in KEY? and for shorthand addressing
 166:src/keys.c    ****  */
 167:src/keys.c    **** int keycode_to_row_column(const int c)
 168:src/keys.c    **** {
 169:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 170:src/keys.c    **** }
 171:src/keys.c    **** 
 172:src/keys.c    **** /*
 173:src/keys.c    ****  * Mapping from a row column code ('A'=11 to '+'=75) to the key code
 174:src/keys.c    ****  * Used in PUTK and KTYPE.
 175:src/keys.c    ****  */
 176:src/keys.c    **** 
 177:src/keys.c    **** int row_column_to_keycode(const int c)
 178:src/keys.c    **** {
 179:src/keys.c    **** 	int row = c / 10 - 1;
 180:src/keys.c    **** 	int col = c % 10 - 1;
 181:src/keys.c    **** 
 182:src/keys.c    **** 	if (row < 0 || row > 6 || col > 5 - (row >= 2))
 183:src/keys.c    **** 		return -1;
 184:src/keys.c    **** 	return row * 6 + col;
 185:src/keys.c    **** }
 186:src/keys.c    **** 
 187:src/keys.c    **** /*
 188:src/keys.c    ****  *  Mapping from a key code to a digit from 0 to 9 or to a register address
 189:src/keys.c    ****  *  Bit seven is set if the key cannot be used as a label shortcut
 190:src/keys.c    ****  */
 191:src/keys.c    **** // Decision to make here about whether the top row can be used as shortcuts.
 192:src/keys.c    **** // Also, which other keys can / can't be used as shortcuts?
 193:src/keys.c    **** // Registers I, j, K, L will move with the new alpha layout.
 194:src/keys.c    **** 
 195:src/keys.c    **** #define NO_REG 0x7f
 196:src/keys.c    **** #define NO_SHORT 0x80
 197:src/keys.c    **** #ifdef DM42
 198:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 199:src/keys.c    **** {
 200:src/keys.c    ****   static const unsigned char map[] = {
ARM GAS  /tmp/ccizbp1a.s 			page 5


 201:src/keys.c    ****     // K00 - K05
 202:src/keys.c    ****     NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 203:src/keys.c    ****     NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 204:src/keys.c    ****     NO_SHORT | NO_REG,   NO_REG,
 205:src/keys.c    ****     // K10 - K15
 206:src/keys.c    ****     NO_REG, NO_REG, regI_idx, regJ_idx, regK_idx, regL_idx, 
 207:src/keys.c    ****     // K20 - K24
 208:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 209:src/keys.c    ****     // K30 - K34
 210:src/keys.c    ****     NO_REG, 7, 8, 9, NO_REG,
 211:src/keys.c    ****     // K40 - K44
 212:src/keys.c    ****     NO_REG, NO_SHORT | regT_idx, 5, 6, NO_REG,
 213:src/keys.c    ****     // K50 - K54
 214:src/keys.c    ****     NO_REG, NO_SHORT | regX_idx, NO_SHORT | regY_idx, NO_SHORT | regZ_idx, NO_REG,
 215:src/keys.c    ****     // K60 - K64
 216:src/keys.c    ****     NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE, NO_REG, NO_REG,
 217:src/keys.c    ****     // Shifts
 218:src/keys.c    ****     NO_REG
 219:src/keys.c    ****   };
 220:src/keys.c    **** 
 221:src/keys.c    ****   return (unsigned int) map[keycode_to_linear_for_alpha(c)];
 222:src/keys.c    **** }
 223:src/keys.c    **** #else
 224:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 225:src/keys.c    **** {
 226:src/keys.c    ****   static const unsigned char map[] = {
 227:src/keys.c    **** 		// K00 - K05
 228:src/keys.c    **** 		NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 229:src/keys.c    **** 		NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 230:src/keys.c    **** 		NO_SHORT | NO_REG,   NO_REG,
 231:src/keys.c    **** 		// K10 - K12
 232:src/keys.c    **** 		NO_REG, NO_REG, regI_idx, 
 233:src/keys.c    **** 		// K20 - K24
 234:src/keys.c    **** 		NO_SHORT | NO_REG, regJ_idx, regK_idx, regL_idx, NO_SHORT | NO_REG,
 235:src/keys.c    **** 		// K30 - K34
 236:src/keys.c    **** 		NO_REG, 7, 8, 9, NO_REG,
 237:src/keys.c    **** 		// K40 - K44
 238:src/keys.c    **** 		NO_REG, 4, 5, 6, regT_idx,
 239:src/keys.c    **** 		// K50 - K54
 240:src/keys.c    **** 		NO_REG, 1, 2, 3, NO_REG,
 241:src/keys.c    **** 		// K60 - K63
 242:src/keys.c    **** 		NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE,
 243:src/keys.c    **** 		regY_idx, regZ_idx,
 244:src/keys.c    **** 		// Shifts, etc
 245:src/keys.c    **** 		NO_REG
 246:src/keys.c    **** 	};
 247:src/keys.c    **** 
 248:src/keys.c    **** 	return (unsigned int) map[keycode_to_linear(c)];
 249:src/keys.c    **** }
 250:src/keys.c    **** #endif
 251:src/keys.c    **** /*
 252:src/keys.c    ****  *  Mapping of a keycode and shift state to a catalogue number
 253:src/keys.c    ****  */
 254:src/keys.c    **** static enum catalogues keycode_to_cat(const keycode c, enum shifts shift)
 255:src/keys.c    **** {
 256:src/keys.c    ****   enum catalogues cat = CATALOGUE_NONE;
 257:src/keys.c    ****   int i, col, max;
ARM GAS  /tmp/ccizbp1a.s 			page 6


 258:src/keys.c    ****   const struct _map {
 259:src/keys.c    ****     unsigned char key, cat[3];
 260:src/keys.c    ****   } *cp;
 261:src/keys.c    **** 
 262:src/keys.c    ****   // Common to both alpha mode and normal mode is the programming X.FCN catalogue
 263:src/keys.c    ****   if (c == K53 && shift == SHIFT_H && ! State2.runmode && ! State2.cmplx && ! State2.multi)
 264:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 265:src/keys.c    **** 
 266:src/keys.c    ****   if (! State2.alphas && ! State2.multi) {
 267:src/keys.c    ****     /*
 268:src/keys.c    ****      *  Normal processing - Not alpha mode
 269:src/keys.c    ****      */
 270:src/keys.c    ****     static const struct _map cmap[] = {
 271:src/keys.c    **** #ifdef DM42
 272:src/keys.c    ****       { K04, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 273:src/keys.c    **** #else
 274:src/keys.c    ****       { K_ARROW, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 275:src/keys.c    **** #endif
 276:src/keys.c    ****       { K05,     { CATALOGUE_MODE,      CATALOGUE_MODE,      CATALOGUE_MODE          } },
 277:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
 278:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_USER          } },
 279:src/keys.c    **** #else
 280:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_LABELS        } },
 281:src/keys.c    **** #endif
 282:src/keys.c    ****       { K20,     { CATALOGUE_CONST,     CATALOGUE_NONE,      CATALOGUE_COMPLEX_CONST } },
 283:src/keys.c    ****       { K41,     { CATALOGUE_PROB,      CATALOGUE_NONE,      CATALOGUE_PROB          } },
 284:src/keys.c    ****       { K42,     { CATALOGUE_STATS,     CATALOGUE_NONE,      CATALOGUE_STATS         } },
 285:src/keys.c    ****       { K43,     { CATALOGUE_SUMS,      CATALOGUE_NONE,      CATALOGUE_SUMS          } },
 286:src/keys.c    ****       { K44,     { CATALOGUE_MATRIX,    CATALOGUE_NONE,      CATALOGUE_MATRIX        } },
 287:src/keys.c    ****       { K50,     { CATALOGUE_STATUS,    CATALOGUE_STATUS,    CATALOGUE_STATUS        } },
 288:src/keys.c    ****       { K51,     { CATALOGUE_TEST,      CATALOGUE_TEST,      CATALOGUE_TEST          } },
 289:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
 290:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_INTERNAL      } },
 291:src/keys.c    **** #else
 292:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_PROG          } },
 293:src/keys.c    **** #endif
 294:src/keys.c    ****       { K53,     { CATALOGUE_NORMAL,    CATALOGUE_INT,       CATALOGUE_COMPLEX       } },
 295:src/keys.c    ****     };
 296:src/keys.c    **** 
 297:src/keys.c    ****     if (c == K60 && shift == SHIFT_G) {
 298:src/keys.c    ****       /*
 299:src/keys.c    ****        *  SHOW starts register browser
 300:src/keys.c    ****        */
 301:src/keys.c    ****       return CATALOGUE_REGISTERS;
 302:src/keys.c    ****     }
 303:src/keys.c    **** #if 0
 304:src/keys.c    ****     // conflicts with c# 002 and c# 003
 305:src/keys.c    ****     if ((c == K52 || c == K53) && shift == SHIFT_N && State2.cmplx && State2.catalogue == CATALOGUE
 306:src/keys.c    ****       /*
 307:src/keys.c    ****        *  Shorthand to complex P.FCN & X.FCN - h may be omitted
 308:src/keys.c    ****        */
 309:src/keys.c    ****       shift = SHIFT_H;
 310:src/keys.c    ****     }
 311:src/keys.c    **** #endif
 312:src/keys.c    ****     if (shift != SHIFT_H) {
 313:src/keys.c    ****       /*
 314:src/keys.c    ****        *  All standard catalogues are on h-shifted keys
ARM GAS  /tmp/ccizbp1a.s 			page 7


 315:src/keys.c    ****        */
 316:src/keys.c    ****       return CATALOGUE_NONE;
 317:src/keys.c    ****     }
 318:src/keys.c    **** 
 319:src/keys.c    ****     /*
 320:src/keys.c    ****      *  Prepare search
 321:src/keys.c    ****      */
 322:src/keys.c    ****     cp = cmap;
 323:src/keys.c    **** #ifndef WINGUI
 324:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx || shift_down() == SHIFT_H ? 2 : 0;
 325:src/keys.c    **** #else
 326:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx ? 2 : 0;
 327:src/keys.c    **** #endif
 328:src/keys.c    ****     max = sizeof(cmap) / sizeof(cmap[0]);
 329:src/keys.c    ****   }
 330:src/keys.c    ****   else {
 331:src/keys.c    ****     /*
 332:src/keys.c    ****      *  All the alpha catalogues go here
 333:src/keys.c    ****      */
 334:src/keys.c    **** #ifdef DM42
 335:src/keys.c    ****     static const struct _map amap[] = {
 336:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 337:src/keys.c    ****       { K05, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 338:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 339:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 340:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 341:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 342:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 343:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 344:src/keys.c    ****     };
 345:src/keys.c    **** #else
 346:src/keys.c    ****     static const struct _map amap[] = {
 347:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 348:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 349:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 350:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 351:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 352:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 353:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 354:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 355:src/keys.c    ****     };
 356:src/keys.c    **** #endif
 357:src/keys.c    ****     static const char smap[] = { 0, 1, 0, 2 }; // Map shifts to columns;
 358:src/keys.c    **** 
 359:src/keys.c    ****     /*
 360:src/keys.c    ****      *  Prepare search
 361:src/keys.c    ****      */
 362:src/keys.c    ****     cp = amap;
 363:src/keys.c    ****     col = smap[shift];
 364:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 365:src/keys.c    ****   }
 366:src/keys.c    **** 
 367:src/keys.c    ****   /*
 368:src/keys.c    ****    *  Search the key in one of the tables
 369:src/keys.c    ****    */
 370:src/keys.c    ****   for (i = 0; i < max; ++i, ++cp) {
 371:src/keys.c    ****     if (cp->key == c) {
ARM GAS  /tmp/ccizbp1a.s 			page 8


 372:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 373:src/keys.c    ****       break;
 374:src/keys.c    ****     }
 375:src/keys.c    ****   }
 376:src/keys.c    ****   if (State2.multi && (cat < CATALOGUE_ALPHA_SYMBOLS || cat > CATALOGUE_ALPHA_SUBSCRIPTS)) {
 377:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 378:src/keys.c    ****     cat = CATALOGUE_NONE;
 379:src/keys.c    ****   }
 380:src/keys.c    ****   return cat;
 381:src/keys.c    **** }
 382:src/keys.c    **** 
 383:src/keys.c    **** #ifdef DM42
 384:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 385:src/keys.c    **** {
 386:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 387:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 388:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 389:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 390:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 391:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 392:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 393:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 394:src/keys.c    **** 
 395:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 396:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 397:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 398:src/keys.c    **** 		{ 'J',  0257, 0000, 0000, 'j',  0000,  },  // K13
 399:src/keys.c    **** 		{ 'K',  0000, 'K',  0000, 'k',  0251,  },  // K14
 400:src/keys.c    **** 		{ 'L',  0000, 0212, 0000, 'l',  0252,  },  // K15
 401:src/keys.c    **** 
 402:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 403:src/keys.c    **** 		{ 'M',  0000, 0253, 0027, 'm',  0253,  },  // K21
 404:src/keys.c    **** 		{ 'N',  0010, 'N',  0225, 'n',  0254,  },  // K22
 405:src/keys.c    **** 		{ 'O',  0000, 0227, 0257, 'o',  0267,  },  // K23
 406:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 407:src/keys.c    **** 
 408:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 409:src/keys.c    **** 		{ 'P',  '7',  0217, '&',  'p',  0257,  },  // K31
 410:src/keys.c    **** 		{ 'Q',  '8',  0000, '|',  'q',  0000,  },  // K32
 411:src/keys.c    **** 		{ 'R',  '9',  'R',  0000, 'r',  0260,  },  // K33
 412:src/keys.c    **** 		{ 'S',  '/',  0221, 0000, 's',  0261,  },  // K34
 413:src/keys.c    **** 
 414:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K40
 415:src/keys.c    **** 		{ 'T',  '4',  'T',  0000, 't',  0262,  },  // K41
 416:src/keys.c    **** 		{ 'U',  '5',  0000, 0000, 'u',  0000,  },  // K42
 417:src/keys.c    **** 		{ 'V',  '6',  0000, 0000, 'v',  0000,  },  // K43
 418:src/keys.c    **** 		{ 'W', 0034,  0000, 0000, 'w',  0000,  },  // K44
 419:src/keys.c    **** 
 420:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K50
 421:src/keys.c    **** 		{ 'X',  '1',  0215, 0000, 'x',  0255,  },  // K51
 422:src/keys.c    **** 		{ 'Y',  '2',  'Y',  0000, 'y',  0263,  },  // K52
 423:src/keys.c    **** 		{ 'Z',  '3',  'Z',  0000, 'z',  0245,  },  // K53
 424:src/keys.c    **** 		{ '-',  '(',  ')',  0000, 0000, 0000,  },  // K54
 425:src/keys.c    **** 
 426:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K60
 427:src/keys.c    **** 		{ ':',  '0',  0207, 0000, ';',  0247,  },  // K61
 428:src/keys.c    **** 		{ '.',  '.',  0226, 0000, '.',  0266,  },  // K62
ARM GAS  /tmp/ccizbp1a.s 			page 9


 429:src/keys.c    **** 		{ '?',  0000, 0041, 0000, 0000, 0000,  },  // K63
 430:src/keys.c    **** 		{ ' ',  '+',  '=',  0000, 0000, 0000,  },  // K64
 431:src/keys.c    **** 
 432:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // shifts etc.
 433:src/keys.c    **** 	};
 434:src/keys.c    **** 	if (State2.alphashift) {
 435:src/keys.c    **** 		if (shift == SHIFT_N)
 436:src/keys.c    **** 			shift = SHIFT_LC_N;
 437:src/keys.c    **** 		else if (shift == SHIFT_G)
 438:src/keys.c    **** 			shift = SHIFT_LC_G;
 439:src/keys.c    **** 	}
 440:src/keys.c    **** 	return alphamap[keycode_to_linear_for_alpha(c)][shift];
 441:src/keys.c    **** }
 442:src/keys.c    **** #else
 443:src/keys.c    **** /*
 444:src/keys.c    ****  * Mapping from key position to alpha in the four key planes plus
 445:src/keys.c    ****  * the two lower case planes.
 446:src/keys.c    ****  */
 447:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 448:src/keys.c    **** {
 449:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 450:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 451:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 452:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 453:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 454:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 455:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 456:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 457:src/keys.c    **** 
 458:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 459:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 460:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 461:src/keys.c    **** 
 462:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 463:src/keys.c    **** 		{ 'J',  '(',  ')',  0027, 'j',  ')',   },  // K21
 464:src/keys.c    **** 		{ 'K',  0010, 'K',  0225, 'k',  0251,  },  // K22
 465:src/keys.c    **** 		{ 'L',  0000, 0212, 0257, 'l',  0252,  },  // K23
 466:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 467:src/keys.c    **** 
 468:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 469:src/keys.c    **** 		{ 'M',  '7',  'M',  '&',  'm',  0253,  },  // K31
 470:src/keys.c    **** 		{ 'N',  '8',  'N',  '|',  'n',  0254,  },  // K32
 471:src/keys.c    **** 		{ 'O',  '9',  0227, 0013, 'o',  0267,  },  // K33
 472:src/keys.c    **** 		{ 'P',  '/',  0217, '\\', 'p',  0257,  },  // K34
 473:src/keys.c    **** 
 474:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 475:src/keys.c    **** 		{ 'Q',  '4',  0000, 0000, 'q',  0000,  },  // K41
 476:src/keys.c    **** 		{ 'R',  '5',  'R',  0000, 'r',  0260,  },  // K42
 477:src/keys.c    **** 		{ 'S',  '6',  0221, 0000, 's',  0261,  },  // K43
 478:src/keys.c    **** 		{ 'T',  0034, 'T',  0000, 't',  0262,  },  // K44
 479:src/keys.c    **** 
 480:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 481:src/keys.c    **** 		{ '1',  '1',  0207, 0000, '1',  0247,  },  // K51
 482:src/keys.c    **** 		{ 'U',  '2',  0000, 0000, 'u',  0000,  },  // K52
 483:src/keys.c    **** 		{ 'V',  '3',  0000, 0000, 'v',  0000,  },  // K53
 484:src/keys.c    **** 		{ 'W',  0034, 0000, 0000, 'w',  0000,  },  // K54
 485:src/keys.c    **** 
ARM GAS  /tmp/ccizbp1a.s 			page 10


 486:src/keys.c    **** 		{ 0000, 0222, 0000, 0000, 0000, 0000,  },  // K60
 487:src/keys.c    **** 		{ '0',  '0',  0226, ' ',  '0',  0266,  },  // K61
 488:src/keys.c    **** 		{ 'X',  '.',  0215, 0000, 'x',  0255,  },  // K62
 489:src/keys.c    **** 		{ 'Y',  0000, 'Y',  0000, 'y',  0263,  },  // K63
 490:src/keys.c    **** 		{ 'Z',  '+',  'Z',  0000, 'z',  0245,  },  // K64
 491:src/keys.c    **** 	};
 492:src/keys.c    **** 	if (State2.alphashift) {
 493:src/keys.c    **** 		if (shift == SHIFT_N)
 494:src/keys.c    **** 			shift = SHIFT_LC_N;
 495:src/keys.c    **** 		else if (shift == SHIFT_G)
 496:src/keys.c    **** 			shift = SHIFT_LC_G;
 497:src/keys.c    **** 	}
 498:src/keys.c    **** 	return alphamap[keycode_to_linear(c)][shift];
 499:src/keys.c    **** }
 500:src/keys.c    **** #endif
 501:src/keys.c    **** static void init_arg(const enum rarg base) {
 502:src/keys.c    **** 	if (is_bad_cmdline())
 503:src/keys.c    **** 		return;
 504:src/keys.c    **** 	CmdBase = base;
 505:src/keys.c    **** 	State2.ind = 0;
 506:src/keys.c    **** 	State2.digval = 0;
 507:src/keys.c    **** 	State2.numdigit = 0;
 508:src/keys.c    **** 	State2.rarg = 1;
 509:src/keys.c    **** 	State2.dot = 0;
 510:src/keys.c    **** 	State2.local = 0;
 511:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 512:src/keys.c    **** }
 513:src/keys.c    **** 
 514:src/keys.c    **** static void init_cat(enum catalogues cat) {
 515:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 516:src/keys.c    **** 		// Save last catalogue for a later restore
 517:src/keys.c    **** 		State.last_cat = State2.catalogue;
 518:src/keys.c    **** 		CmdLineLength = 0;
 519:src/keys.c    **** 	}
 520:src/keys.c    **** 	process_cmdline();
 521:src/keys.c    **** 
 522:src/keys.c    **** 	State2.labellist = 0;
 523:src/keys.c    **** 	State2.registerlist = 0;
 524:src/keys.c    **** 	State2.status = 0;
 525:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 526:src/keys.c    **** 
 527:src/keys.c    **** 	switch (cat) {
 528:src/keys.c    **** 	case CATALOGUE_LABELS:
 529:src/keys.c    **** 		// Label browser
 530:src/keys.c    **** 		State2.labellist = 1;
 531:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 532:src/keys.c    **** 		break;
 533:src/keys.c    **** 	
 534:src/keys.c    **** 	case CATALOGUE_REGISTERS:
 535:src/keys.c    **** 		// Register browser
 536:src/keys.c    **** 		State2.registerlist = 1;
 537:src/keys.c    **** 		State2.digval = regX_idx;
 538:src/keys.c    **** 		State2.digval2 = 0;
 539:src/keys.c    **** 		break;
 540:src/keys.c    **** 
 541:src/keys.c    **** 	case CATALOGUE_STATUS:
 542:src/keys.c    **** 		// Flag browser
ARM GAS  /tmp/ccizbp1a.s 			page 11


 543:src/keys.c    **** 		State2.status = 1;
 544:src/keys.c    **** 		break;
 545:src/keys.c    **** 
 546:src/keys.c    **** 	default:
 547:src/keys.c    **** 		// Normal catalogue
 548:src/keys.c    **** 		State2.catalogue = cat;
 549:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 550:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 551:src/keys.c    **** 			// Different catalogue, reset position
 552:src/keys.c    **** 			State.catpos = 0;
 553:src/keys.c    **** 		}
 554:src/keys.c    **** 	}
 555:src/keys.c    **** 	reset_shift();
 556:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 557:src/keys.c    **** 	changed_catalog_state();
 558:src/keys.c    **** #endif
 559:src/keys.c    **** }
 560:src/keys.c    **** 
 561:src/keys.c    **** /*
 562:src/keys.c    ****  *  Reset the internal state to a sane default
 563:src/keys.c    ****  */
 564:src/keys.c    **** void init_state(void) {
 565:src/keys.c    **** #ifndef REALBUILD
 566:src/keys.c    **** 	unsigned int a = State2.flags;
 567:src/keys.c    **** 	unsigned int b = State2.trace;
 568:src/keys.c    **** #else
 569:src/keys.c    **** 	FLAG t = TestFlag;
 570:src/keys.c    **** #endif
 571:src/keys.c    **** 	int v = Voltage;
 572:src/keys.c    **** 	int k = LastKey;
 573:src/keys.c    **** 
 574:src/keys.c    **** 	CmdBase = 0;
 575:src/keys.c    **** 	// Removed: will clear any locals on power off
 576:src/keys.c    **** 	// clrretstk(0);
 577:src/keys.c    **** 
 578:src/keys.c    **** 	xset(&State2, 0, sizeof(State2));
 579:src/keys.c    **** 	State2.test = TST_NONE;
 580:src/keys.c    **** 	State2.runmode = 1;
 581:src/keys.c    **** 	update_program_bounds(1);
 582:src/keys.c    **** 	set_lift();
 583:src/keys.c    **** 
 584:src/keys.c    **** 	// Restore stuff that has been moved to State2 for space reasons
 585:src/keys.c    **** 	// but must not be cleared.
 586:src/keys.c    **** 	Voltage = v;
 587:src/keys.c    **** 	LastKey = k;
 588:src/keys.c    **** #ifndef REALBUILD
 589:src/keys.c    **** 	State2.trace = b;
 590:src/keys.c    **** 	State2.flags = a;
 591:src/keys.c    **** #else
 592:src/keys.c    **** 	TestFlag = t;
 593:src/keys.c    **** #endif
 594:src/keys.c    **** 	ShowRegister = regX_idx;
 595:src/keys.c    **** }
 596:src/keys.c    **** 
 597:src/keys.c    **** void soft_init_state(void) {
 598:src/keys.c    **** 	int soft;
 599:src/keys.c    **** 	unsigned int runmode;
ARM GAS  /tmp/ccizbp1a.s 			page 12


 600:src/keys.c    **** 	unsigned int alphas;
 601:src/keys.c    **** 
 602:src/keys.c    **** 	if (CmdLineLength) {
 603:src/keys.c    **** 		CmdLineLength = 0;
 604:src/keys.c    **** 		CmdLineEex = 0;
 605:src/keys.c    **** 		CmdLineDot = 0;
 606:src/keys.c    **** 		return;
 607:src/keys.c    **** 	}
 608:src/keys.c    **** 	soft = State2.multi || State2.rarg || State2.hyp || State2.gtodot || State2.labellist ||
 609:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 610:src/keys.c    **** 	runmode = State2.runmode;
 611:src/keys.c    **** 	alphas = State2.alphas;
 612:src/keys.c    **** 	init_state();
 613:src/keys.c    **** 	if (soft) {
 614:src/keys.c    **** 		State2.runmode = runmode;
 615:src/keys.c    **** 		State2.alphas = alphas;
 616:src/keys.c    **** 	}
 617:src/keys.c    **** }
 618:src/keys.c    **** 
 619:src/keys.c    **** static int check_confirm(int op) {
 620:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 621:src/keys.c    **** 		const int nilop = argKIND(op);
 622:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 623:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 624:src/keys.c    **** 			return STATE_UNFINISHED;
 625:src/keys.c    **** 		}
 626:src/keys.c    **** #ifndef DM42		
 627:src/keys.c    **** 		if ((nilop >= OP_RECV && nilop <= OP_PSTO)
 628:src/keys.c    **** #endif
 629:src/keys.c    **** #ifdef DM42
 630:src/keys.c    **** 		    if ((nilop >= OP_SAVE && nilop <= OP_PSTO) // no recv in DM42
 631:src/keys.c    **** #endif
 632:src/keys.c    **** #ifdef INFRARED
 633:src/keys.c    **** 			|| nilop == OP_PRINT_PGM
 634:src/keys.c    **** #endif
 635:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
 636:src/keys.c    **** 			|| nilop == OP_STOPWATCH
 637:src/keys.c    **** #endif
 638:src/keys.c    **** 		) {
 639:src/keys.c    **** 			// These commands are not programmable
 640:src/keys.c    **** 			NonProgrammable = 1;
 641:src/keys.c    **** 		}
 642:src/keys.c    **** 	}
 643:src/keys.c    **** 	return op;
 644:src/keys.c    **** }
 645:src/keys.c    **** 
 646:src/keys.c    **** static void set_smode(const enum single_disp d) {
 647:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 648:src/keys.c    **** }
 649:src/keys.c    **** 
 650:src/keys.c    **** static int check_f_key(int n, const int dflt) {
 651:src/keys.c    **** 	const int code = 100 + n;
 652:src/keys.c    **** 	unsigned int pc = state_pc();
 653:src/keys.c    **** 
 654:src/keys.c    **** 	if (State2.runmode) {
 655:src/keys.c    **** 		if (isXROM(pc))
 656:src/keys.c    **** 			pc = 1;
ARM GAS  /tmp/ccizbp1a.s 			page 13


 657:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 658:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 659:src/keys.c    **** 	}
 660:src/keys.c    **** 	return dflt;
 661:src/keys.c    **** }
 662:src/keys.c    **** 
 663:src/keys.c    **** /* Return non-zero if the current mode is integer and we accept letters
 664:src/keys.c    ****  * as digits.
 665:src/keys.c    ****  */
 666:src/keys.c    **** static int intltr(int d) {
 667:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 668:src/keys.c    **** }
 669:src/keys.c    **** 
 670:src/keys.c    **** /*
 671:src/keys.c    ****  *  Process a key code in the unshifted mode.
 672:src/keys.c    ****  */
 673:src/keys.c    **** static int process_normal(const keycode c)
 674:src/keys.c    **** {
 675:src/keys.c    **** 	static const unsigned short int op_map[] = {
 676:src/keys.c    **** 		// Row 1
 677:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS, // A to D
 678:src/keys.c    **** 		OP_MON  | OP_RECIP,
 679:src/keys.c    **** 		OP_DYA  | OP_POW,
 680:src/keys.c    **** 		OP_MON  | OP_SQRT,
 681:src/keys.c    **** 		OP_SPEC | OP_E,		// ->
 682:src/keys.c    **** 		OP_SPEC | OP_F,		// CPX
 683:src/keys.c    **** 		// Row 2
 684:src/keys.c    **** 		RARG_STO,
 685:src/keys.c    **** 		RARG_RCL,
 686:src/keys.c    **** 		OP_NIL  | OP_RDOWN,
 687:src/keys.c    **** 		// Row 3
 688:src/keys.c    **** 		OP_SPEC | OP_ENTER,
 689:src/keys.c    **** 		RARG(RARG_SWAPX, regY_idx),
 690:src/keys.c    **** 		OP_SPEC | OP_CHS,	// CHS
 691:src/keys.c    **** 		OP_SPEC | OP_EEX,	// EEX
 692:src/keys.c    **** 		OP_SPEC | OP_CLX,	// <-
 693:src/keys.c    **** 		// Row 4
 694:src/keys.c    **** 		RARG_XEQ,
 695:src/keys.c    **** 		OP_SPEC | OP_7,
 696:src/keys.c    **** 		OP_SPEC | OP_8,
 697:src/keys.c    **** 		OP_SPEC | OP_9,
 698:src/keys.c    **** 		OP_DYA  | OP_DIV,
 699:src/keys.c    **** 		// Row 5
 700:src/keys.c    **** 		STATE_BST,
 701:src/keys.c    **** 		OP_SPEC | OP_4,
 702:src/keys.c    **** 		OP_SPEC | OP_5,
 703:src/keys.c    **** 		OP_SPEC | OP_6,
 704:src/keys.c    **** 		OP_DYA  | OP_MUL,
 705:src/keys.c    **** 		// Row 6
 706:src/keys.c    **** 		STATE_SST,		// SST
 707:src/keys.c    **** 		OP_SPEC | OP_1,
 708:src/keys.c    **** 		OP_SPEC | OP_2,
 709:src/keys.c    **** 		OP_SPEC | OP_3,
 710:src/keys.c    **** 		OP_DYA  | OP_SUB,
 711:src/keys.c    **** 		// Row 7
 712:src/keys.c    **** 		STATE_UNFINISHED,	// ON/C
 713:src/keys.c    **** 		OP_SPEC | OP_0,
ARM GAS  /tmp/ccizbp1a.s 			page 14


 714:src/keys.c    **** 		OP_SPEC | OP_DOT,
 715:src/keys.c    **** 		OP_NIL  | OP_RS,	// R/S
 716:src/keys.c    **** 		OP_DYA  | OP_ADD,
 717:src/keys.c    **** #ifdef DM42
 718:src/keys.c    **** 		OP_NIL  | OP_NOP,  // shifts etc.
 719:src/keys.c    **** #endif
 720:src/keys.c    **** 	};
 721:src/keys.c    **** 
 722:src/keys.c    **** 	int lc = keycode_to_linear(c);
 723:src/keys.c    **** 	int op = op_map[lc];
 724:src/keys.c    **** 	
 725:src/keys.c    **** 	// The switch handles all the special cases
 726:src/keys.c    **** #ifdef DM42
 727:src/keys.c    **** 	int op_int;
 728:src/keys.c    **** 	if (UState.intm) {
 729:src/keys.c    **** 	  switch (c) {
 730:src/keys.c    **** 	  case K00:
 731:src/keys.c    **** 	    op = OP_SPEC | OP_A;
 732:src/keys.c    **** 	    if (intltr(10)) {
 733:src/keys.c    **** 	      return op;
 734:src/keys.c    **** 	    }
 735:src/keys.c    **** 	    else {
 736:src/keys.c    **** 	      return check_f_key(0, op);
 737:src/keys.c    **** 	    }
 738:src/keys.c    **** 	  case K01:
 739:src/keys.c    **** 	    op = OP_SPEC | OP_B;
 740:src/keys.c    **** 	    if (intltr(11)) {
 741:src/keys.c    **** 	      return op;
 742:src/keys.c    **** 	    }
 743:src/keys.c    **** 	    else {
 744:src/keys.c    **** 	      return check_f_key(1, op);
 745:src/keys.c    **** 	    }
 746:src/keys.c    **** 	  case K03:
 747:src/keys.c    **** 	    op_int = OP_SPEC | OP_C;
 748:src/keys.c    **** 	    if (intltr(12)) {
 749:src/keys.c    **** 	      return op_int;
 750:src/keys.c    **** 	    }
 751:src/keys.c    **** 	    else {
 752:src/keys.c    **** 	      return check_f_key(2, op);
 753:src/keys.c    **** 	    }
 754:src/keys.c    **** 	  case K30:
 755:src/keys.c    **** 	    op_int = OP_SPEC | OP_F;
 756:src/keys.c    **** 	    if (intltr(15)) {
 757:src/keys.c    **** 	      return op_int;
 758:src/keys.c    **** 	    }
 759:src/keys.c    **** 	    else {
 760:src/keys.c    **** 	      return check_f_key(5, op);
 761:src/keys.c    **** 	    }
 762:src/keys.c    **** 	  default:;
 763:src/keys.c    **** 	  }
 764:src/keys.c    **** 	}
 765:src/keys.c    **** #endif  
 766:src/keys.c    **** 
 767:src/keys.c    **** 	switch (c) {
 768:src/keys.c    **** #ifdef DM42
 769:src/keys.c    **** 	case K00:
 770:src/keys.c    **** 		return check_f_key(0, op);
ARM GAS  /tmp/ccizbp1a.s 			page 15


 771:src/keys.c    **** 	case K01:
 772:src/keys.c    **** 		return check_f_key(1, op);
 773:src/keys.c    **** 	case K03:
 774:src/keys.c    **** 		return check_f_key(2, op);
 775:src/keys.c    **** #else
 776:src/keys.c    **** 	case K00:
 777:src/keys.c    **** 	case K01:
 778:src/keys.c    **** 		if (UState.intm)
 779:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 780:src/keys.c    **** 	case K02:
 781:src/keys.c    **** 	case K03:
 782:src/keys.c    **** 		if (intltr(lc + 10)) {
 783:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 784:src/keys.c    **** 			return op;
 785:src/keys.c    **** 		}
 786:src/keys.c    **** 		return check_f_key(lc, op);
 787:src/keys.c    **** #endif		
 788:src/keys.c    **** 	case K_ARROW:
 789:src/keys.c    **** #ifndef DM42
 790:src/keys.c    **** #ifdef INT_MODE_TEMPVIEW
 791:src/keys.c    **** 		if (intltr(14))
 792:src/keys.c    **** 			return op;
 793:src/keys.c    **** #else
 794:src/keys.c    **** 		if (UState.intm)
 795:src/keys.c    **** 			return op;
 796:src/keys.c    **** #endif
 797:src/keys.c    **** #endif		
 798:src/keys.c    **** 		if (is_bad_cmdline())
 799:src/keys.c    **** 			return STATE_UNFINISHED;
 800:src/keys.c    **** 		process_cmdline_set_lift();
 801:src/keys.c    **** 		State2.arrow = 1;
 802:src/keys.c    **** #ifdef DM42
 803:src/keys.c    **** 		set_menu (9);
 804:src/keys.c    **** 		display_current_menu ();
 805:src/keys.c    **** 		lcd_refresh ();
 806:src/keys.c    **** #else
 807:src/keys.c    **** 		set_shift(SHIFT_G);
 808:src/keys.c    **** #endif
 809:src/keys.c    **** 		break;
 810:src/keys.c    **** 
 811:src/keys.c    **** 	case K_CMPLX:
 812:src/keys.c    **** #ifndef DM42
 813:src/keys.c    **** 	  if (UState.intm)
 814:src/keys.c    **** 	    return op;
 815:src/keys.c    **** #endif
 816:src/keys.c    **** 		State2.cmplx = 1;
 817:src/keys.c    **** 		break;
 818:src/keys.c    **** 
 819:src/keys.c    **** 	case K24:				// <-
 820:src/keys.c    **** 		if (State2.disp_temp)
 821:src/keys.c    **** 			return STATE_UNFINISHED;
 822:src/keys.c    **** 		if (State2.runmode)
 823:src/keys.c    **** 			return op;
 824:src/keys.c    **** 		return STATE_BACKSPACE;
 825:src/keys.c    **** 
 826:src/keys.c    **** 	case K10:				// STO
 827:src/keys.c    **** 	case K11:				// RCL
ARM GAS  /tmp/ccizbp1a.s 			page 16


 828:src/keys.c    **** 	case K30:				// XEQ
 829:src/keys.c    **** 		init_arg((enum rarg)op);
 830:src/keys.c    **** 		break;
 831:src/keys.c    **** 
 832:src/keys.c    **** 	default:
 833:src/keys.c    **** 		return op;			// Keys handled by table
 834:src/keys.c    **** 	}
 835:src/keys.c    **** 	return STATE_UNFINISHED;
 836:src/keys.c    **** }
 837:src/keys.c    **** 
 838:src/keys.c    **** 
 839:src/keys.c    **** /*
 840:src/keys.c    ****  *  Process a key code after f or g shift
 841:src/keys.c    ****  */
 842:src/keys.c    **** static int process_fg_shifted(const keycode c) {
 843:src/keys.c    **** 
 844:src/keys.c    **** #define NO_INT 0xf000
 845:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 846:src/keys.c    **** 		// Row 1
 847:src/keys.c    **** 		{ 1,                               0                           }, // HYP
 848:src/keys.c    **** 		{ OP_MON | OP_SIN      | NO_INT,   OP_MON | OP_ASIN   | NO_INT },
 849:src/keys.c    **** 		{ OP_MON | OP_COS      | NO_INT,   OP_MON | OP_ACOS   | NO_INT },
 850:src/keys.c    **** 		{ OP_MON | OP_TAN      | NO_INT,   OP_MON | OP_ATAN   | NO_INT },
 851:src/keys.c    **** 		{ OP_NIL | OP_P2R      | NO_INT,   OP_NIL | OP_R2P    | NO_INT },
 852:src/keys.c    **** 		{ OP_NIL | OP_FRACPROPER,	   OP_NIL | OP_FRACIMPROPER    }, // CPX
 853:src/keys.c    **** 		// Row 2
 854:src/keys.c    **** 		{ OP_NIL | OP_HMS,                 OP_NIL | OP_DEG    | NO_INT },
 855:src/keys.c    **** 		{ OP_NIL | OP_FLOAT,               OP_NIL | OP_RAD    | NO_INT },
 856:src/keys.c    **** 		{ OP_NIL | OP_RANDOM,              OP_NIL | OP_GRAD   | NO_INT },
 857:src/keys.c    **** 		// Row 3
 858:src/keys.c    **** 		{ STATE_UNFINISHED,		   OP_NIL | OP_FILL            }, // ENTER
 859:src/keys.c    **** 		{ STATE_WINDOWLEFT,   		   STATE_WINDOWRIGHT   	       },
 860:src/keys.c    **** 		{ RARG(RARG_BASE, 2),		   RARG(RARG_BASE, 8)          },
 861:src/keys.c    **** 		{ RARG(RARG_BASE, 10),		   RARG(RARG_BASE, 16)         },
 862:src/keys.c    **** 		{ OP_NIL | OP_CLPROG,		   OP_NIL | OP_SIGMACLEAR      },
 863:src/keys.c    **** 		// Row 4
 864:src/keys.c    **** 		{ OP_MON | OP_EXP,                 OP_MON | OP_LN              },
 865:src/keys.c    **** 		{ OP_MON | OP_10POWX,		   OP_MON | OP_LOG             },
 866:src/keys.c    **** 		{ OP_MON | OP_2POWX,		   OP_MON | OP_LG2             },
 867:src/keys.c    **** 		{ OP_DYA | OP_POW,                 OP_DYA | OP_LOGXY           },
 868:src/keys.c    **** 		{ OP_MON | OP_RECIP    | NO_INT,   OP_DYA | OP_PARAL	       },
 869:src/keys.c    **** 		// Row 5
 870:src/keys.c    **** 		{ OP_DYA | OP_COMB,                OP_DYA | OP_PERM            },
 871:src/keys.c    **** 		{ OP_MON | OP_cdf_Q    | NO_INT,   OP_MON | OP_qf_Q   | NO_INT },
 872:src/keys.c    **** 		{ OP_NIL | OP_statMEAN | NO_INT,   OP_NIL | OP_statS  | NO_INT },
 873:src/keys.c    **** 		{ OP_MON | OP_yhat     | NO_INT,   OP_NIL | OP_statR  | NO_INT },
 874:src/keys.c    **** 		{ OP_MON | OP_SQRT,		   OP_MON | OP_SQR             },
 875:src/keys.c    **** 		// Row 6
 876:src/keys.c    **** 		{ RARG_SF,                         RARG_CF                     },
 877:src/keys.c    **** 		{ TST_EQ,                          TST_NE                      }, // tests
 878:src/keys.c    **** 		{ RARG_SOLVE           | NO_INT,   RARG_INTG          | NO_INT },
 879:src/keys.c    **** 		{ RARG_PROD            | NO_INT,   RARG_SUM           | NO_INT },
 880:src/keys.c    **** 		{ OP_MON | OP_PERCNT   | NO_INT,   OP_MON | OP_PERCHG | NO_INT },
 881:src/keys.c    **** 		// Row 7
 882:src/keys.c    **** #ifdef INFRARED
 883:src/keys.c    **** 		{ RARG(RARG_PRINT_REG,regX_idx),   STATE_UNFINISHED	       },
 884:src/keys.c    **** #else
ARM GAS  /tmp/ccizbp1a.s 			page 17


 885:src/keys.c    **** 		{ STATE_UNFINISHED,		   STATE_UNFINISHED	       },
 886:src/keys.c    **** #endif
 887:src/keys.c    **** 		{ OP_MON | OP_ABS,		   OP_MON | OP_RND             },
 888:src/keys.c    **** 		{ OP_MON | OP_TRUNC,		   OP_MON | OP_FRAC            },
 889:src/keys.c    **** 		{ RARG_LBL,			   OP_NIL | OP_RTN             },
 890:src/keys.c    **** 		{ RARG_DSE,			   RARG_ISG                    },
 891:src/keys.c    **** #ifdef DM42
 892:src/keys.c    **** 		{ OP_NIL | OP_NOP,		   OP_NIL |OP_NOP              },
 893:src/keys.c    **** #endif
 894:src/keys.c    **** 	};
 895:src/keys.c    **** 
 896:src/keys.c    **** 	static const unsigned short int op_map2[] = {
 897:src/keys.c    **** 		STATE_UNFINISHED,
 898:src/keys.c    **** 		STATE_UNFINISHED,
 899:src/keys.c    **** 		OP_DYA  | OP_POW,
 900:src/keys.c    **** 		OP_MON  | OP_SQRT
 901:src/keys.c    **** 	};
 902:src/keys.c    **** 
 903:src/keys.c    **** 	enum shifts shift = reset_shift();
 904:src/keys.c    **** 	int lc = keycode_to_linear(c);
 905:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 906:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 907:src/keys.c    **** 	if (no_int)
 908:src/keys.c    **** 		op &= ~NO_INT;
 909:src/keys.c    **** 
 910:src/keys.c    **** 	switch (c) {
 911:src/keys.c    **** 	case K00:
 912:src/keys.c    **** 	  if (! UState.intm) {
 913:src/keys.c    **** 	    State2.hyp = 1;
 914:src/keys.c    **** 	    State2.dot = op;
 915:src/keys.c    **** 	    // State2.cmplx = 0;
 916:src/keys.c    **** 	    return STATE_UNFINISHED;
 917:src/keys.c    **** 	  }
 918:src/keys.c    **** 	  // fall through
 919:src/keys.c    **** 	case K01:
 920:src/keys.c    **** #ifdef DM42
 921:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 922:src/keys.c    **** 	    return check_f_key(lc, op_map2[lc]);
 923:src/keys.c    **** 	  }
 924:src/keys.c    **** 	  break;
 925:src/keys.c    **** #endif
 926:src/keys.c    **** #ifndef DM42
 927:src/keys.c    **** 	case K02:
 928:src/keys.c    **** #endif
 929:src/keys.c    **** 	case K03:
 930:src/keys.c    **** #ifdef DM42
 931:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 932:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 933:src/keys.c    **** 		}
 934:src/keys.c    **** 		break;
 935:src/keys.c    **** #else
 936:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 937:src/keys.c    **** 			return check_f_key(2, op_map2[lc]);
 938:src/keys.c    **** 		}
 939:src/keys.c    **** 		break;
 940:src/keys.c    **** #endif
 941:src/keys.c    **** 	case K20:				// Alpha
ARM GAS  /tmp/ccizbp1a.s 			page 18


 942:src/keys.c    **** 		if (shift == SHIFT_F) {
 943:src/keys.c    **** 			if (is_bad_cmdline())
 944:src/keys.c    **** 				return STATE_UNFINISHED;
 945:src/keys.c    **** 			process_cmdline_set_lift();
 946:src/keys.c    **** 			State2.alphas = 1;
 947:src/keys.c    **** 		}
 948:src/keys.c    **** 		break;
 949:src/keys.c    **** #ifdef DM42
 950:src/keys.c    **** 	case K31:
 951:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(13)) {// Log - so D key
 952:src/keys.c    **** 	    return OP_SPEC | OP_D;
 953:src/keys.c    **** 	  }
 954:src/keys.c    **** 	  break;
 955:src/keys.c    **** 	case K30:
 956:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(14)) {// Ln - so E key
 957:src/keys.c    **** 	    return OP_SPEC | OP_E;
 958:src/keys.c    **** 	  }
 959:src/keys.c    **** 	  break;
 960:src/keys.c    **** #endif
 961:src/keys.c    **** 	case K51:
 962:src/keys.c    **** 		if (is_bad_cmdline())
 963:src/keys.c    **** 			return STATE_UNFINISHED;
 964:src/keys.c    **** 		process_cmdline_set_lift();
 965:src/keys.c    **** 		State2.test = op;
 966:src/keys.c    **** 		return STATE_UNFINISHED;
 967:src/keys.c    **** 
 968:src/keys.c    **** 	case K50:
 969:src/keys.c    **** #ifndef REALBUILD
 970:src/keys.c    **** 		if (SHIFT_N != shift_down()) {
 971:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 973:src/keys.c    **** 		}
 974:src/keys.c    **** #endif
 975:src/keys.c    **** 	case K52:
 976:src/keys.c    **** 	case K53:
 977:src/keys.c    **** 	case K63:
 978:src/keys.c    **** 	case K64:
 979:src/keys.c    **** 		if (op != (OP_NIL | OP_RTN)) {
 980:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 981:src/keys.c    **** 				init_arg((enum rarg) op);
 982:src/keys.c    **** 			}
 983:src/keys.c    **** 			return STATE_UNFINISHED;
 984:src/keys.c    **** 		}
 985:src/keys.c    **** 		break;
 986:src/keys.c    **** 
 987:src/keys.c    **** 	default:
 988:src/keys.c    **** 		break;
 989:src/keys.c    **** 	}
 990:src/keys.c    **** 	if (no_int && UState.intm)
 991:src/keys.c    **** 		return STATE_UNFINISHED;
 992:src/keys.c    **** 
 993:src/keys.c    **** 	return check_confirm(op);
 994:src/keys.c    **** #undef NO_INT
 995:src/keys.c    **** }
 996:src/keys.c    **** 
 997:src/keys.c    **** /*
 998:src/keys.c    ****  *  Process a key code after h shift
ARM GAS  /tmp/ccizbp1a.s 			page 19


 999:src/keys.c    ****  */
1000:src/keys.c    **** static int process_h_shifted(const keycode c) {
1001:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
1002:src/keys.c    **** #define NO_INT   0x4000
1003:src/keys.c    **** 	static const unsigned short int op_map[] = {
1004:src/keys.c    **** 		// Row 1
1005:src/keys.c    **** 		_RARG   | RARG_STD,
1006:src/keys.c    **** 		_RARG   | RARG_FIX,
1007:src/keys.c    **** 		_RARG   | RARG_SCI,
1008:src/keys.c    **** 		_RARG   | RARG_ENG,
1009:src/keys.c    **** 		STATE_UNFINISHED,	// CONV
1010:src/keys.c    **** 		STATE_UNFINISHED,	// MODE
1011:src/keys.c    **** 		// Row 2
1012:src/keys.c    **** 		STATE_UNFINISHED,	// CAT
1013:src/keys.c    **** 		_RARG   | RARG_VIEW,
1014:src/keys.c    **** 		OP_NIL  | OP_RUP,
1015:src/keys.c    **** 		// Row 3
1016:src/keys.c    **** 		_RARG	| RARG_INTNUM,	// CONST, will be emitted in integer mode only
1017:src/keys.c    **** 		_RARG   | RARG_SWAPX,
1018:src/keys.c    **** 		OP_MON  | OP_NOT,
1019:src/keys.c    **** 		CONST(OP_PI) | NO_INT,
1020:src/keys.c    **** 		OP_NIL  | OP_rCLX,
1021:src/keys.c    **** 		// Row 4
1022:src/keys.c    **** 		_RARG   | RARG_GTO,
1023:src/keys.c    **** 		OP_DYA  | OP_LAND,
1024:src/keys.c    **** 		OP_DYA  | OP_LOR,
1025:src/keys.c    **** 		OP_DYA  | OP_LXOR,
1026:src/keys.c    **** 		OP_DYA  | OP_MOD,
1027:src/keys.c    **** 		// Row 5
1028:src/keys.c    **** 		OP_MON  | OP_FACT,
1029:src/keys.c    **** 		STATE_UNFINISHED,	// PROB
1030:src/keys.c    **** 		STATE_UNFINISHED,	// STAT
1031:src/keys.c    **** 		STATE_UNFINISHED,	// CFIT
1032:src/keys.c    **** 		STATE_UNFINISHED,	// MATRIX
1033:src/keys.c    **** 		// Row 6
1034:src/keys.c    **** 		STATE_UNFINISHED,	// STATUS
1035:src/keys.c    **** 		STATE_UNFINISHED,	// TEST
1036:src/keys.c    **** 		STATE_UNFINISHED,	// P.FCN
1037:src/keys.c    **** 		STATE_UNFINISHED,	// X.FCN
1038:src/keys.c    **** 		OP_SPEC | OP_SIGMAMINUS | NO_INT,
1039:src/keys.c    **** 		// Row 7
1040:src/keys.c    **** 		OP_NIL | OP_OFF,
1041:src/keys.c    **** 		_RARG   | RARG_PAUSE,
1042:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1043:src/keys.c    **** 		OP_NIL  | OP_THOUS_OFF,
1044:src/keys.c    **** #else
1045:src/keys.c    ****  		OP_NIL  | OP_RADCOM,
1046:src/keys.c    **** #endif
1047:src/keys.c    **** 		STATE_UNFINISHED,	// P/R
1048:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS | NO_INT,
1049:src/keys.c    **** #ifdef DM42
1050:src/keys.c    **** 		OP_NIL | OP_NOP,       // shifts etc.
1051:src/keys.c    **** #endif
1052:src/keys.c    **** 	};
1053:src/keys.c    **** 
1054:src/keys.c    **** 	int lc = keycode_to_linear(c);
1055:src/keys.c    **** 	int op = op_map[lc];
ARM GAS  /tmp/ccizbp1a.s 			page 20


1056:src/keys.c    **** 	reset_shift();
1057:src/keys.c    **** 
1058:src/keys.c    **** 	// The switch handles all the special cases
1059:src/keys.c    **** 	switch (c) {
1060:src/keys.c    **** 	case K62:
1061:src/keys.c    **** 		if (UState.intm)
1062:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
1063:src/keys.c    **** 		else
1064:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1065:src/keys.c    **** 			if (UState.nothousands) op = OP_NIL | OP_THOUS_ON;
1066:src/keys.c    **** #else
1067:src/keys.c    **** 			if (UState.fraccomma) op = OP_NIL | OP_RADDOT;
1068:src/keys.c    **** #endif
1069:src/keys.c    **** 		break;
1070:src/keys.c    **** 
1071:src/keys.c    **** 	case K63:					// Program<->Run mode
1072:src/keys.c    **** 		if (is_bad_cmdline())
1073:src/keys.c    **** 			return STATE_UNFINISHED;
1074:src/keys.c    **** 		State2.runmode = 1 - State2.runmode;
1075:src/keys.c    **** 		process_cmdline_set_lift();
1076:src/keys.c    **** 		update_program_bounds(1);
1077:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
1078:src/keys.c    **** 			set_pc(0);
1079:src/keys.c    **** 		break;
1080:src/keys.c    **** 
1081:src/keys.c    **** 	default:
1082:src/keys.c    **** 		break;
1083:src/keys.c    **** 	}
1084:src/keys.c    **** 
1085:src/keys.c    **** 	if (op != STATE_UNFINISHED) {
1086:src/keys.c    **** 		if (op & _RARG) {
1087:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
1088:src/keys.c    **** 			op = STATE_UNFINISHED;
1089:src/keys.c    **** 		}
1090:src/keys.c    **** 	}
1091:src/keys.c    **** 	return UState.intm && (op & NO_INT) ? STATE_UNFINISHED : op & ~NO_INT;
1092:src/keys.c    **** #undef _RARG
1093:src/keys.c    **** #undef NO_INT
1094:src/keys.c    **** }
1095:src/keys.c    **** 
1096:src/keys.c    **** /*
1097:src/keys.c    ****  *  Process a key code after CPX
1098:src/keys.c    ****  */
1099:src/keys.c    **** static int process_cmplx(const keycode c) {
1100:src/keys.c    **** #define _RARG   0xFF00
1101:src/keys.c    **** #define CSWAPXZ RARG(RARG_CSWAPX, regZ_idx)
1102:src/keys.c    **** #define CNUM(n) RARG(RARG_INTNUM_CMPLX, n)
1103:src/keys.c    **** 
1104:src/keys.c    **** 	static const unsigned short int op_map[][4] = {
1105:src/keys.c    **** 		// Row 1
1106:src/keys.c    **** 		{ 1,			1,                   0,                   0		      }, // HYP
1107:src/keys.c    **** 		{ OP_CMON | OP_RECIP,	OP_CMON | OP_SIN,    OP_CMON | OP_ASIN,   STATE_UNFINISHED    },
1108:src/keys.c    **** 		{ OP_CDYA | OP_POW,	OP_CMON | OP_COS,    OP_CMON | OP_ACOS,   STATE_UNFINISHED    },
1109:src/keys.c    **** 		{ OP_CMON | OP_SQRT,	OP_CMON | OP_TAN,    OP_CMON | OP_ATAN,   STATE_UNFINISHED    },
1110:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_NIL | OP_P2R,     OP_NIL | OP_R2P,     STATE_UNFINISHED    },
1111:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    }, // CPX
1112:src/keys.c    **** 		// Row 2
ARM GAS  /tmp/ccizbp1a.s 			page 21


1113:src/keys.c    **** 		{ _RARG | RARG_CSTO,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1114:src/keys.c    **** 		{ _RARG | RARG_CRCL,	STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CVIEW  },
1115:src/keys.c    **** 		{ OP_NIL | OP_CRDOWN,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_CRUP    }, // R^
1116:src/keys.c    **** 		// Row 3
1117:src/keys.c    **** 		{ OP_NIL | OP_CENTER,	STATE_UNFINISHED,    OP_NIL | OP_CFILL,   OP_NIL | OP_CFILL   }, // ENTER
1118:src/keys.c    **** 		{ CSWAPXZ,		STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CSWAPX },
1119:src/keys.c    **** 		{ OP_CMON | OP_CCHS,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_CMON | OP_CCONJ  },
1120:src/keys.c    **** 		{ CONST_CMPLX(OP_PI),	STATE_UNFINISHED,    STATE_UNFINISHED,    CONST_CMPLX(OP_PI)  },
1121:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1122:src/keys.c    **** 		// Row 4
1123:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CMON | OP_EXP,    OP_CMON | OP_LN,     STATE_UNFINISHED    },
1124:src/keys.c    **** 		{ CNUM(7),		OP_CMON | OP_10POWX, OP_CMON | OP_LOG,    STATE_UNFINISHED    },
1125:src/keys.c    **** 		{ CNUM(8),		OP_CMON | OP_2POWX,  OP_CMON | OP_LG2,    STATE_UNFINISHED    },
1126:src/keys.c    **** 		{ CNUM(9),		OP_CDYA | OP_POW,    OP_CDYA | OP_LOGXY,  STATE_UNFINISHED    },
1127:src/keys.c    **** 		{ OP_CDYA | OP_DIV,	OP_CMON | OP_RECIP,  OP_CDYA | OP_PARAL,  STATE_UNFINISHED    },
1128:src/keys.c    **** 		// Row 5
1129:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CDYA | OP_COMB,   OP_CDYA | OP_PERM,   OP_CMON | OP_FACT   },
1130:src/keys.c    **** 		{ CNUM(4),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1131:src/keys.c    **** 		{ CNUM(5),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1132:src/keys.c    **** 		{ CNUM(6),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1133:src/keys.c    **** 		{ OP_CDYA | OP_MUL,	OP_CMON | OP_SQRT,   OP_CMON | OP_SQR,    OP_CMON | OP_SQR    },
1134:src/keys.c    **** 		// Row 6
1135:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1136:src/keys.c    **** 		{ CNUM(1),		TST_EQ,              TST_NE,              STATE_UNFINISHED    }, // tests
1137:src/keys.c    **** 		{ CNUM(2),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1138:src/keys.c    **** 		{ CNUM(3),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1139:src/keys.c    **** 		{ OP_CDYA | OP_SUB,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1140:src/keys.c    **** 		// Row 7
1141:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_OFF     },
1142:src/keys.c    **** 		{ CNUM(0),		OP_CMON | OP_ABS,    OP_CMON | OP_RND,    STATE_UNFINISHED    },
1143:src/keys.c    **** 		{ OP_NIL | OP_cmplxI,	OP_CMON | OP_TRUNC,  OP_CMON | OP_FRAC,   STATE_UNFINISHED    },
1144:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1145:src/keys.c    **** 		{ OP_NIL | OP_STOPWATCH, STATE_UNFINISHED,   STATE_UNFINISHED,    STATE_UNFINISHED    },
1146:src/keys.c    **** #else
1147:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1148:src/keys.c    **** #endif
1149:src/keys.c    **** 		{ OP_CDYA | OP_ADD,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1150:src/keys.c    **** #ifdef DM42
1151:src/keys.c    **** 		{ OP_NIL | OP_NOP,	OP_NIL | OP_NOP,    OP_NIL | OP_NOP,    OP_NIL | OP_NOP    }
1152:src/keys.c    **** #endif
1153:src/keys.c    **** 	};
1154:src/keys.c    **** 
1155:src/keys.c    **** 	enum shifts shift = reset_shift();
1156:src/keys.c    **** 	int lc = keycode_to_linear(c);
1157:src/keys.c    **** 	int op = op_map[lc][shift];
1158:src/keys.c    **** 	State2.cmplx = 0;
1159:src/keys.c    **** 
1160:src/keys.c    **** 	if ((op & _RARG) == _RARG) {
1161:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
1162:src/keys.c    **** 		return STATE_UNFINISHED;
1163:src/keys.c    **** 	}
1164:src/keys.c    **** 	if (c == K00) {
1165:src/keys.c    **** 		// HYP
1166:src/keys.c    **** 		process_cmdline_set_lift();
1167:src/keys.c    **** 		State2.hyp = 1;
1168:src/keys.c    **** 		State2.dot = op;
1169:src/keys.c    **** 		State2.cmplx = 1;
ARM GAS  /tmp/ccizbp1a.s 			page 22


1170:src/keys.c    **** 		return STATE_UNFINISHED;
1171:src/keys.c    **** 	}
1172:src/keys.c    **** 
1173:src/keys.c    **** 	if (shift != SHIFT_N) {
1174:src/keys.c    **** 		switch (c) {
1175:src/keys.c    **** 		case K_CMPLX:
1176:src/keys.c    **** 			set_shift(shift);
1177:src/keys.c    **** 			break;
1178:src/keys.c    **** 
1179:src/keys.c    **** 		case K51:
1180:src/keys.c    **** 			if (op != STATE_UNFINISHED) {
1181:src/keys.c    **** 				if (is_bad_cmdline())
1182:src/keys.c    **** 					return STATE_UNFINISHED;
1183:src/keys.c    **** 				process_cmdline_set_lift();
1184:src/keys.c    **** 				State2.cmplx = 1;
1185:src/keys.c    **** 				State2.test = op;
1186:src/keys.c    **** 			}
1187:src/keys.c    **** 			return STATE_UNFINISHED;
1188:src/keys.c    **** 
1189:src/keys.c    **** 		case K60:
1190:src/keys.c    **** 			init_state();
1191:src/keys.c    **** 			break;
1192:src/keys.c    **** 
1193:src/keys.c    **** 		default:
1194:src/keys.c    **** 			break;
1195:src/keys.c    **** 		}
1196:src/keys.c    **** 	}
1197:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1198:src/keys.c    **** 	return check_confirm(op);
1199:src/keys.c    **** #else
1200:src/keys.c    **** 	return op;
1201:src/keys.c    **** #endif
1202:src/keys.c    **** 
1203:src/keys.c    **** #undef _RARG
1204:src/keys.c    **** #undef CSWAPXZ
1205:src/keys.c    **** #undef CNUM
1206:src/keys.c    **** }
1207:src/keys.c    **** 
1208:src/keys.c    **** 
1209:src/keys.c    **** 
1210:src/keys.c    **** /*
1211:src/keys.c    ****  * Fairly simple routine for dealing with the HYP prefix.
1212:src/keys.c    ****  * This setting can only be followed by 4, 5, or 6 to specify
1213:src/keys.c    ****  * the function.  The inverse routines use the code too, the State2.dot
1214:src/keys.c    ****  * is 1 for normal and 0 for inverse hyperbolic.  We also have to
1215:src/keys.c    ****  * deal with the complex versions and the handling of that key and
1216:src/keys.c    ****  * the ON key are dealt with by our caller.
1217:src/keys.c    ****  */
1218:src/keys.c    **** static int process_hyp(const keycode c) {
1219:src/keys.c    **** 	static const unsigned char op_map[][2] = {
1220:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
1221:src/keys.c    **** 		{ OP_ACOSH, OP_COSH },
1222:src/keys.c    **** 		{ OP_ATANH, OP_TANH }
1223:src/keys.c    **** 	};
1224:src/keys.c    **** 	int cmplx = State2.cmplx;
1225:src/keys.c    **** 	int f = State2.dot;
1226:src/keys.c    **** 
ARM GAS  /tmp/ccizbp1a.s 			page 23


1227:src/keys.c    **** 	State2.hyp = 0;
1228:src/keys.c    **** 	State2.cmplx = 0;
1229:src/keys.c    **** 	State2.dot = 0;
1230:src/keys.c    **** #ifdef DM42
1231:src/keys.c    **** 	reset_shift();
1232:src/keys.c    **** #endif
1233:src/keys.c    **** 	switch ((int)c) {
1234:src/keys.c    **** 
1235:src/keys.c    **** 	case K01:
1236:src/keys.c    **** 	case K02:
1237:src/keys.c    **** 	case K03:
1238:src/keys.c    **** 		return (cmplx ? OP_CMON : OP_MON) | op_map[c - K01][f];
1239:src/keys.c    **** 
1240:src/keys.c    **** 	case K_CMPLX:
1241:src/keys.c    **** 		cmplx = ! cmplx;
1242:src/keys.c    **** 		goto stay;
1243:src/keys.c    **** 
1244:src/keys.c    **** 	case K_F: 
1245:src/keys.c    **** 	case K_G:
1246:src/keys.c    **** 		f = (c == K_F);
1247:src/keys.c    **** 		// fall trough
1248:src/keys.c    **** 	stay:
1249:src/keys.c    **** 		// process_cmdline_set_lift();
1250:src/keys.c    **** 		State2.hyp = 1;
1251:src/keys.c    **** 		State2.cmplx = cmplx;
1252:src/keys.c    **** 		State2.dot = f;
1253:src/keys.c    **** 		break;
1254:src/keys.c    **** 
1255:src/keys.c    **** 	default:
1256:src/keys.c    **** 		break;
1257:src/keys.c    **** 	}
1258:src/keys.c    **** 	return STATE_UNFINISHED;
1259:src/keys.c    **** }
1260:src/keys.c    **** 
1261:src/keys.c    **** 
1262:src/keys.c    **** /*
1263:src/keys.c    ****  *  Process a key code after ->
1264:src/keys.c    ****  */
1265:src/keys.c    **** static int process_arrow(const keycode c) {
1266:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
1267:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
1268:src/keys.c    **** 		{ OP_MON | OP_2RAD,  OP_MON | OP_HMS2 },
1269:src/keys.c    **** 		{ OP_MON | OP_2GRAD, STATE_UNFINISHED }
1270:src/keys.c    **** 	};
1271:src/keys.c    **** 	static const enum single_disp disp[][2] = {
1272:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
1273:src/keys.c    **** 		{ SDISP_HEX, SDISP_DEC }
1274:src/keys.c    **** 	};
1275:src/keys.c    **** 	const int shift = reset_shift();
1276:src/keys.c    **** 	const int f = (shift == SHIFT_F);
1277:src/keys.c    **** 
1278:src/keys.c    **** 	State2.arrow = 0;
1279:src/keys.c    **** 	set_last_menu ();
1280:src/keys.c    **** 	display_current_menu ();
1281:src/keys.c    **** 
1282:src/keys.c    **** 	if (shift == SHIFT_N) return STATE_UNFINISHED;
1283:src/keys.c    **** 	
ARM GAS  /tmp/ccizbp1a.s 			page 24


1284:src/keys.c    **** 	if (c >= K10 && c <= K12)
1285:src/keys.c    **** 		return op_map[c - K10][f];
1286:src/keys.c    **** 
1287:src/keys.c    **** 	if (c == K22 || c == K23)
1288:src/keys.c    **** 		set_smode(disp[c - K22][f]);
1289:src/keys.c    **** 
1290:src/keys.c    **** 	return STATE_UNFINISHED;
1291:src/keys.c    **** }
1292:src/keys.c    **** 
1293:src/keys.c    **** 
1294:src/keys.c    **** /* Process a GTO . sequence
1295:src/keys.c    ****  */
1296:src/keys.c    **** static int gtodot_digit(const int n) {
  30              		.loc 1 1296 38 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
1297:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  34              		.loc 1 1297 2 view .LVU1
1298:src/keys.c    **** 	const int lib = nLIB(state_pc());
  35              		.loc 1 1298 18 is_stmt 0 view .LVU2
  36 0000 144B     		ldr	r3, .L5
  37 0002 1A68     		ldr	r2, [r3]
1296:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  38              		.loc 1 1296 38 view .LVU3
  39 0004 70B5     		push	{r4, r5, r6, lr}
  40              		.cfi_def_cfa_offset 16
  41              		.cfi_offset 4, -16
  42              		.cfi_offset 5, -12
  43              		.cfi_offset 6, -8
  44              		.cfi_offset 14, -4
1297:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  45              		.loc 1 1297 24 view .LVU4
  46 0006 144E     		ldr	r6, .L5+4
  47              		.loc 1 1298 18 view .LVU5
  48 0008 B2F8E057 		ldrh	r5, [r2, #2016]
1297:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  49              		.loc 1 1297 24 view .LVU6
  50 000c 3389     		ldrh	r3, [r6, #8]
  51              		.loc 1 1298 18 view .LVU7
  52 000e AD0B     		lsrs	r5, r5, #14
1297:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  53              		.loc 1 1297 32 view .LVU8
  54 0010 03EB8303 		add	r3, r3, r3, lsl #2
1296:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  55              		.loc 1 1296 38 view .LVU9
  56 0014 0446     		mov	r4, r0
1299:src/keys.c    **** 
1300:src/keys.c    **** 	if (val > sizeLIB(lib) / 10)
  57              		.loc 1 1300 12 view .LVU10
  58 0016 2846     		mov	r0, r5
  59              	.LVL1:
1297:src/keys.c    **** 	const int lib = nLIB(state_pc());
  60              		.loc 1 1297 12 view .LVU11
  61 0018 04EB4304 		add	r4, r4, r3, lsl #1
  62              	.LVL2:
1298:src/keys.c    **** 
ARM GAS  /tmp/ccizbp1a.s 			page 25


  63              		.loc 1 1298 2 is_stmt 1 view .LVU12
  64              		.loc 1 1300 2 view .LVU13
  65              		.loc 1 1300 12 is_stmt 0 view .LVU14
  66 001c FFF7FEFF 		bl	sizeLIB
  67              	.LVL3:
  68              		.loc 1 1300 25 view .LVU15
  69 0020 0E4A     		ldr	r2, .L5+8
  70 0022 82FB0032 		smull	r3, r2, r2, r0
  71 0026 C317     		asrs	r3, r0, #31
  72 0028 C3EBA203 		rsb	r3, r3, r2, asr #2
  73              		.loc 1 1300 5 view .LVU16
  74 002c A342     		cmp	r3, r4
  75 002e 0FDB     		blt	.L1
1301:src/keys.c    **** 		return val;
1302:src/keys.c    **** 	if (++State2.numdigit == 3 + (lib & 1))
  76              		.loc 1 1302 2 is_stmt 1 view .LVU17
  77              		.loc 1 1302 6 is_stmt 0 view .LVU18
  78 0030 F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
  79              		.loc 1 1302 29 view .LVU19
  80 0032 15F0010F 		tst	r5, #1
  81              		.loc 1 1302 6 view .LVU20
  82 0036 03F10103 		add	r3, r3, #1
  83 003a DBB2     		uxtb	r3, r3
  84              		.loc 1 1302 29 view .LVU21
  85 003c 0CBF     		ite	eq
  86 003e 0322     		moveq	r2, #3
  87 0040 0422     		movne	r2, #4
  88              		.loc 1 1302 5 view .LVU22
  89 0042 9342     		cmp	r3, r2
1303:src/keys.c    **** 		return val;
1304:src/keys.c    **** 	State2.digval = val;
  90              		.loc 1 1304 2 is_stmt 1 view .LVU23
  91              		.loc 1 1304 16 is_stmt 0 view .LVU24
  92 0044 18BF     		it	ne
  93 0046 3481     		strhne	r4, [r6, #8]	@ movhi
1305:src/keys.c    **** 	return -1;
  94              		.loc 1 1305 2 is_stmt 1 view .LVU25
1302:src/keys.c    **** 		return val;
  95              		.loc 1 1302 5 is_stmt 0 view .LVU26
  96 0048 F372     		strb	r3, [r6, #11]
  97              		.loc 1 1305 9 view .LVU27
  98 004a 18BF     		it	ne
  99 004c 4FF0FF34 		movne	r4, #-1
 100              	.LVL4:
 101              	.L1:
1306:src/keys.c    **** }
 102              		.loc 1 1306 1 view .LVU28
 103 0050 2046     		mov	r0, r4
 104 0052 70BD     		pop	{r4, r5, r6, pc}
 105              	.LVL5:
 106              	.L6:
 107              		.loc 1 1306 1 view .LVU29
 108              		.align	2
 109              	.L5:
 110 0054 00000000 		.word	main_ram
 111 0058 00000000 		.word	StateWhileOn
 112 005c 67666666 		.word	1717986919
ARM GAS  /tmp/ccizbp1a.s 			page 26


 113              		.cfi_endproc
 114              	.LFE25:
 116              		.section	.text.check_f_key,"ax",%progbits
 117              		.align	1
 118              		.p2align 2,,3
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu fpv4-sp-d16
 124              	check_f_key:
 125              	.LVL6:
 126              	.LFB17:
 650:src/keys.c    **** 	const int code = 100 + n;
 127              		.loc 1 650 47 is_stmt 1 view -0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 651:src/keys.c    **** 	unsigned int pc = state_pc();
 131              		.loc 1 651 2 view .LVU31
 650:src/keys.c    **** 	const int code = 100 + n;
 132              		.loc 1 650 47 is_stmt 0 view .LVU32
 133 0000 38B5     		push	{r3, r4, r5, lr}
 134              		.cfi_def_cfa_offset 16
 135              		.cfi_offset 3, -16
 136              		.cfi_offset 4, -12
 137              		.cfi_offset 5, -8
 138              		.cfi_offset 14, -4
 654:src/keys.c    **** 		if (isXROM(pc))
 139              		.loc 1 654 6 view .LVU33
 140 0002 0D4B     		ldr	r3, .L17
 141 0004 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 142              	.LVL7:
 652:src/keys.c    **** 
 143              		.loc 1 652 2 is_stmt 1 view .LVU34
 654:src/keys.c    **** 		if (isXROM(pc))
 144              		.loc 1 654 2 view .LVU35
 654:src/keys.c    **** 		if (isXROM(pc))
 145              		.loc 1 654 5 is_stmt 0 view .LVU36
 146 0006 5B06     		lsls	r3, r3, #25
 650:src/keys.c    **** 	const int code = 100 + n;
 147              		.loc 1 650 47 view .LVU37
 148 0008 0C46     		mov	r4, r1
 654:src/keys.c    **** 		if (isXROM(pc))
 149              		.loc 1 654 5 view .LVU38
 150 000a 0FD5     		bpl	.L11
 652:src/keys.c    **** 
 151              		.loc 1 652 20 view .LVU39
 152 000c 0B4B     		ldr	r3, .L17+4
 153              	.LVL8:
 652:src/keys.c    **** 
 154              		.loc 1 652 20 view .LVU40
 155 000e 1B68     		ldr	r3, [r3]
 156              	.LVL9:
 652:src/keys.c    **** 
 157              		.loc 1 652 15 view .LVU41
 158 0010 B3F8E037 		ldrh	r3, [r3, #2016]
 159              	.LVL10:
ARM GAS  /tmp/ccizbp1a.s 			page 27


 655:src/keys.c    **** 			pc = 1;
 160              		.loc 1 655 3 is_stmt 1 view .LVU42
 655:src/keys.c    **** 			pc = 1;
 161              		.loc 1 655 7 is_stmt 0 view .LVU43
 162 0014 9A0B     		lsrs	r2, r3, #14
 656:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 163              		.loc 1 656 7 view .LVU44
 164 0016 032A     		cmp	r2, #3
 165              	.LVL11:
 657:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 166              		.loc 1 657 3 is_stmt 1 view .LVU45
 651:src/keys.c    **** 	unsigned int pc = state_pc();
 167              		.loc 1 651 12 is_stmt 0 view .LVU46
 168 0018 00F16405 		add	r5, r0, #100
 169              	.LVL12:
 657:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 170              		.loc 1 657 7 view .LVU47
 171 001c 2946     		mov	r1, r5
 172              	.LVL13:
 657:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 173              		.loc 1 657 7 view .LVU48
 174 001e 14BF     		ite	ne
 175 0020 1846     		movne	r0, r3
 176              	.LVL14:
 657:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 177              		.loc 1 657 7 view .LVU49
 178 0022 0120     		moveq	r0, #1
 179 0024 0222     		movs	r2, #2
 180 0026 FFF7FEFF 		bl	find_label_from
 181              	.LVL15:
 657:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 182              		.loc 1 657 6 view .LVU50
 183 002a 08B9     		cbnz	r0, .L16
 184              	.LVL16:
 185              	.L11:
 660:src/keys.c    **** }
 186              		.loc 1 660 9 view .LVU51
 187 002c 2046     		mov	r0, r4
 661:src/keys.c    **** 
 188              		.loc 1 661 1 view .LVU52
 189 002e 38BD     		pop	{r3, r4, r5, pc}
 190              	.LVL17:
 191              	.L16:
 658:src/keys.c    **** 	}
 192              		.loc 1 658 4 is_stmt 1 view .LVU53
 658:src/keys.c    **** 	}
 193              		.loc 1 658 11 is_stmt 0 view .LVU54
 194 0030 45F4C840 		orr	r0, r5, #25600
 661:src/keys.c    **** 
 195              		.loc 1 661 1 view .LVU55
 196 0034 38BD     		pop	{r3, r4, r5, pc}
 197              	.LVL18:
 198              	.L18:
 661:src/keys.c    **** 
 199              		.loc 1 661 1 view .LVU56
 200 0036 00BF     		.align	2
 201              	.L17:
ARM GAS  /tmp/ccizbp1a.s 			page 28


 202 0038 00000000 		.word	StateWhileOn
 203 003c 00000000 		.word	main_ram
 204              		.cfi_endproc
 205              	.LFE17:
 207              		.section	.text.is_label_or_end_at,"ax",%progbits
 208              		.align	1
 209              		.p2align 2,,3
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 213              		.fpu fpv4-sp-d16
 215              	is_label_or_end_at:
 216              	.LVL19:
 217              	.LFB49:
1307:src/keys.c    **** 
1308:src/keys.c    **** static int gtodot_fkey(int n) {
1309:src/keys.c    **** 	const int code = 100 + n;
1310:src/keys.c    **** 	unsigned int pc = state_pc();
1311:src/keys.c    **** 
1312:src/keys.c    **** 	if(isXROM(pc))
1313:src/keys.c    **** 		pc = 1;
1314:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
1315:src/keys.c    **** 	if (pc > 0)
1316:src/keys.c    **** 		return pc;
1317:src/keys.c    **** 	return state_pc();
1318:src/keys.c    **** }
1319:src/keys.c    **** 
1320:src/keys.c    **** static int process_gtodot(const keycode c) {
1321:src/keys.c    **** 	int pc = -1;
1322:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
1323:src/keys.c    **** 
1324:src/keys.c    **** 	if (rawpc <= 9) {
1325:src/keys.c    **** 		// Digit 0 - 9
1326:src/keys.c    **** 		pc = gtodot_digit(rawpc);
1327:src/keys.c    **** 	}
1328:src/keys.c    **** #ifdef DM42
1329:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regX_idx) rawpc = gtodot_digit(1); 
1330:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
1331:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
1332:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
1333:src/keys.c    **** #endif
1334:src/keys.c    **** 	else if (c >= K00 && c <= K03) {
1335:src/keys.c    **** 		// A - D
1336:src/keys.c    **** 		rawpc = gtodot_fkey(c - K00);
1337:src/keys.c    **** 		goto fin;
1338:src/keys.c    **** 	}
1339:src/keys.c    **** 	else if (c == K62) {
1340:src/keys.c    **** 		// .
1341:src/keys.c    **** 		rawpc = ProgSize;
1342:src/keys.c    **** 		goto fin;
1343:src/keys.c    **** 	}
1344:src/keys.c    **** 	else if (c == K20) {
1345:src/keys.c    **** 		// ENTER - short circuit processing
1346:src/keys.c    **** 		pc = State2.digval;
1347:src/keys.c    **** 	}
1348:src/keys.c    **** 	else if (c == K24) {
1349:src/keys.c    **** 		// backspace
ARM GAS  /tmp/ccizbp1a.s 			page 29


1350:src/keys.c    **** 		if (State2.numdigit == 0) {
1351:src/keys.c    **** 			goto fin2;
1352:src/keys.c    **** 		} else {
1353:src/keys.c    **** 			State2.numdigit--;
1354:src/keys.c    **** 			State2.digval /= 10;
1355:src/keys.c    **** 		}
1356:src/keys.c    **** 	}
1357:src/keys.c    **** 	else if (c == K_UP) {
1358:src/keys.c    **** 		// up
1359:src/keys.c    **** 		rawpc = state_pc();
1360:src/keys.c    **** 		if (rawpc == 1)
1361:src/keys.c    **** 			rawpc = 0;
1362:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
1363:src/keys.c    **** 		update_program_bounds(1);
1364:src/keys.c    **** 		rawpc = ProgBegin;
1365:src/keys.c    **** 		goto fin;
1366:src/keys.c    **** 	}
1367:src/keys.c    **** 	else if (c == K_DOWN) {
1368:src/keys.c    **** 		// down
1369:src/keys.c    **** 		update_program_bounds(1);
1370:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
1371:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
1372:src/keys.c    **** 			rawpc = 1;
1373:src/keys.c    **** 		goto fin;
1374:src/keys.c    **** 	}
1375:src/keys.c    **** 	if (pc >= 0) {
1376:src/keys.c    **** 		rawpc = find_user_pc(pc);
1377:src/keys.c    **** fin:		set_pc(rawpc);
1378:src/keys.c    **** fin2:		State2.gtodot = 0;
1379:src/keys.c    **** 		State2.digval = 0;
1380:src/keys.c    **** 		State2.numdigit = 0;
1381:src/keys.c    **** 	}
1382:src/keys.c    **** 	return STATE_UNFINISHED;
1383:src/keys.c    **** }
1384:src/keys.c    **** 
1385:src/keys.c    **** 
1386:src/keys.c    **** /* Process a keystroke in alpha mode
1387:src/keys.c    ****  */
1388:src/keys.c    **** static int process_alpha(const keycode c) {
1389:src/keys.c    **** 	const enum shifts shift = reset_shift();
1390:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
1391:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos, n;
1392:src/keys.c    ****         int op = STATE_UNFINISHED;
1393:src/keys.c    **** 	State2.alpha_pos = 0;
1394:src/keys.c    **** 
1395:src/keys.c    **** 	switch (c) {
1396:src/keys.c    **** 	case K10:	// STO
1397:src/keys.c    **** 		if (shift == SHIFT_F) {
1398:src/keys.c    **** 			init_arg(RARG_ASTO);
1399:src/keys.c    **** 			return STATE_UNFINISHED;
1400:src/keys.c    **** 		}
1401:src/keys.c    **** 		break;
1402:src/keys.c    **** 
1403:src/keys.c    **** 	case K11:	// RCL - maybe view
1404:src/keys.c    **** 		if (shift == SHIFT_F) {
1405:src/keys.c    **** 			init_arg(RARG_ARCL);
1406:src/keys.c    **** 			return STATE_UNFINISHED;
ARM GAS  /tmp/ccizbp1a.s 			page 30


1407:src/keys.c    **** 		} else if (shift == SHIFT_H) {
1408:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
1409:src/keys.c    **** 			return STATE_UNFINISHED;
1410:src/keys.c    **** 		}
1411:src/keys.c    **** 		break;
1412:src/keys.c    **** 
1413:src/keys.c    **** 	case K20:	// Enter - maybe exit alpha mode
1414:src/keys.c    **** 		if (shift == SHIFT_G || shift == SHIFT_H)
1415:src/keys.c    **** 			break;
1416:src/keys.c    **** 		if (shift == SHIFT_F && ! State2.runmode) {
1417:src/keys.c    **** 			State2.multi = 1;
1418:src/keys.c    **** 			State2.numdigit = 0;
1419:src/keys.c    **** 			CmdBase = DBL_ALPHA;
1420:src/keys.c    **** 			return STATE_UNFINISHED;
1421:src/keys.c    **** 		}
1422:src/keys.c    **** 		State2.alphas = 0;
1423:src/keys.c    **** 		State2.alphashift = 0;
1424:src/keys.c    **** 		return op;
1425:src/keys.c    **** 
1426:src/keys.c    **** 	case K24:	// Clx - backspace, clear Alpha
1427:src/keys.c    **** 		if (shift == SHIFT_N)
1428:src/keys.c    **** 			return STATE_BACKSPACE;
1429:src/keys.c    **** 		if (shift == SHIFT_H)
1430:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
1431:src/keys.c    **** 		break;
1432:src/keys.c    **** 
1433:src/keys.c    **** 	case K_UP:
1434:src/keys.c    **** 		if (shift == SHIFT_N) {
1435:src/keys.c    **** 			if ( State2.runmode ) {
1436:src/keys.c    **** 				// Alpha scroll left
1437:src/keys.c    **** 				n = alpha_pos + 1;
1438:src/keys.c    **** 				State2.alpha_pos = ( n < ( alen() + 5 ) / 6 ) ? n : alpha_pos;
1439:src/keys.c    **** 				return STATE_UNFINISHED;
1440:src/keys.c    **** 			}
1441:src/keys.c    **** 			return STATE_BST;
1442:src/keys.c    **** 		}
1443:src/keys.c    **** 		break;
1444:src/keys.c    **** 
1445:src/keys.c    **** 	case K_DOWN:
1446:src/keys.c    **** 		if (shift == SHIFT_N) {
1447:src/keys.c    **** 			if ( State2.runmode ) {
1448:src/keys.c    **** 				// Alpha scroll right
1449:src/keys.c    **** 				if (alpha_pos > 0)
1450:src/keys.c    **** 					State2.alpha_pos = alpha_pos-1;
1451:src/keys.c    **** 				return STATE_UNFINISHED;
1452:src/keys.c    **** 			}
1453:src/keys.c    **** 			return STATE_SST;
1454:src/keys.c    **** 		}
1455:src/keys.c    **** 		break;
1456:src/keys.c    **** 
1457:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
1458:src/keys.c    **** 		if (shift == SHIFT_F)
1459:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
1460:src/keys.c    **** 		else if (shift == SHIFT_H)
1461:src/keys.c    **** 			return OP_NIL | OP_OFF;
1462:src/keys.c    **** 		else if (shift == SHIFT_N)
1463:src/keys.c    **** 			init_state();
ARM GAS  /tmp/ccizbp1a.s 			page 31


1464:src/keys.c    **** 		return STATE_UNFINISHED;
1465:src/keys.c    **** 
1466:src/keys.c    **** 	case K63:
1467:src/keys.c    **** 		if (shift == SHIFT_F)
1468:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
1469:src/keys.c    **** 		break;
1470:src/keys.c    **** 
1471:src/keys.c    **** 	default:
1472:src/keys.c    **** 		break;
1473:src/keys.c    **** 	}
1474:src/keys.c    **** 
1475:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
1476:src/keys.c    **** 	if (ch == 0)
1477:src/keys.c    **** 		return STATE_UNFINISHED;
1478:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
1479:src/keys.c    **** }
1480:src/keys.c    **** 
1481:src/keys.c    **** /*
1482:src/keys.c    ****  *  Code to handle all commands with arguments
1483:src/keys.c    ****  */
1484:src/keys.c    **** static void reset_arg(void) {
1485:src/keys.c    **** 	init_arg((enum rarg) 0);
1486:src/keys.c    **** 	State2.rarg = 0;
1487:src/keys.c    **** }
1488:src/keys.c    **** 
1489:src/keys.c    **** static int arg_eval(unsigned int val) {
1490:src/keys.c    **** 	const unsigned int base = CmdBase;
1491:src/keys.c    **** 	int r = RARG(base, val 
1492:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
1493:src/keys.c    **** 		           + (State2.local ? LOCAL_REG_BASE : 0));
1494:src/keys.c    **** 	const unsigned int ssize = (! UState.stack_depth || ! State2.runmode ) ? 4 : 8;
1495:src/keys.c    **** 
1496:src/keys.c    **** 	if (! State2.ind) {
1497:src/keys.c    **** 		/*
1498:src/keys.c    **** 		 *  Central argument checking for some commands
1499:src/keys.c    **** 		 */
1500:src/keys.c    **** #ifdef SHOW_COMPLEX_REGS
1501:src/keys.c    **** 		if (argcmds[base].cmplx && val > TOPREALREG - 2 ) {
1502:src/keys.c    **** 			// remap complex registers cY->T, cZ->A, cT->C
1503:src/keys.c    **** 			                     // 99,   X,   Y,   Z,   T,   A,   B,   C,   D,   L,   I,   J,   K
1504:src/keys.c    **** 			static char remap[] = {  0, 100, 102, 104, 106,   0,   0,   0,   0, 108,   0, 110,   0 };
1505:src/keys.c    **** 			val = (unsigned int) remap[ val - (TOPREALREG - 1) ];
1506:src/keys.c    **** 			if ( val == 0 )
1507:src/keys.c    **** 				return STATE_UNFINISHED;
1508:src/keys.c    **** 			r = RARG(base, val);
1509:src/keys.c    **** 		}
1510:src/keys.c    **** #else
1511:src/keys.c    **** 		if (argcmds[base].cmplx && (val > TOPREALREG - 2 && (val & 1)))
1512:src/keys.c    **** 			// Disallow odd complex register > 98
1513:src/keys.c    **** 			return STATE_UNFINISHED;
1514:src/keys.c    **** #endif
1515:src/keys.c    **** 		if ((base == RARG_STOSTK || base == RARG_RCLSTK) && (val > TOPREALREG - ssize))
1516:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
1517:src/keys.c    **** 			return STATE_UNFINISHED;
1518:src/keys.c    **** 	}
1519:src/keys.c    **** 	// Build op-code
1520:src/keys.c    **** 	reset_arg();
ARM GAS  /tmp/ccizbp1a.s 			page 32


1521:src/keys.c    **** 	return r;
1522:src/keys.c    **** }
1523:src/keys.c    **** 
1524:src/keys.c    **** static int arg_digit(int n) {
1525:src/keys.c    **** 	int lim;
1526:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1527:src/keys.c    **** 	int dispmode = get_dispmode_digs(&lim);
1528:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
1529:src/keys.c    **** #else
1530:src/keys.c    **** 	const unsigned int base = CmdBase;
1531:src/keys.c    **** #endif
1532:src/keys.c    **** 	const unsigned int val = State2.digval * 10 + n;
1533:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
1534:src/keys.c    **** 	
1535:src/keys.c    **** 	if (State2.local) {
1536:src/keys.c    **** 		// Handle local registers and flags
1537:src/keys.c    **** 		lim = MAX_LOCAL_DIRECT - 1;				// default
1538:src/keys.c    **** 		if (State2.runmode) {
1539:src/keys.c    **** 			if (LocalRegs == 0)
1540:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
1541:src/keys.c    **** 			if (is_reg) {
1542:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
1543:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
1544:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
1545:src/keys.c    **** 			}
1546:src/keys.c    **** 		}
1547:src/keys.c    **** 	}
1548:src/keys.c    **** 	else if (is_reg)						// normal register
1549:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
1550:src/keys.c    **** 	else {
1551:src/keys.c    **** 		lim = (int) argcmds[base].lim;				// any other command
1552:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
1553:src/keys.c    **** 			lim = RARG_IND - 1;
1554:src/keys.c    **** 	}
1555:src/keys.c    **** 	if ((int) val > lim)
1556:src/keys.c    **** 		return STATE_UNFINISHED;
1557:src/keys.c    **** 
1558:src/keys.c    **** 	State2.digval = val;
1559:src/keys.c    **** 	++State2.numdigit;
1560:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
1561:src/keys.c    **** 		int result = arg_eval(val);
1562:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
1563:src/keys.c    **** 			--State2.numdigit;
1564:src/keys.c    **** 			State2.digval /= 10;
1565:src/keys.c    **** 		}
1566:src/keys.c    **** 		return result;
1567:src/keys.c    **** 	}
1568:src/keys.c    **** 	return STATE_UNFINISHED;
1569:src/keys.c    **** }
1570:src/keys.c    **** 
1571:src/keys.c    **** static int arg_fkey(int n) {
1572:src/keys.c    **** 	const unsigned int b = CmdBase;
1573:src/keys.c    **** 
1574:src/keys.c    **** 	if (argcmds[b].label || (b >= RARG_SF && b <= RARG_FCF))
1575:src/keys.c    **** 	{
1576:src/keys.c    **** 		if (State2.ind || State2.numdigit > 0)
1577:src/keys.c    **** 			return STATE_UNFINISHED;
ARM GAS  /tmp/ccizbp1a.s 			page 33


1578:src/keys.c    **** 		if (argcmds[b].lim < 100)
1579:src/keys.c    **** 			return STATE_UNFINISHED;
1580:src/keys.c    **** 		return arg_eval(n + 100);
1581:src/keys.c    **** 	}
1582:src/keys.c    **** 	return STATE_UNFINISHED;
1583:src/keys.c    **** }
1584:src/keys.c    **** 
1585:src/keys.c    **** static int arg_storcl_check(const unsigned int b, const int cmplx) {
1586:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
1587:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || b == RARG_FLRCL ||
1588:src/keys.c    **** 			(cmplx && (b == RARG_CSTO || b == RARG_CRCL || b == RARG_FLCRCL)));
1589:src/keys.c    **** #else
1590:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || (cmplx && (b == RARG_CSTO || b == RARG_CRCL )));
1591:src/keys.c    **** #endif
1592:src/keys.c    **** }
1593:src/keys.c    **** 
1594:src/keys.c    **** static int arg_storcl(const unsigned int n, int cmplx) {
1595:src/keys.c    **** 	unsigned int b = CmdBase;
1596:src/keys.c    **** 
1597:src/keys.c    **** 	if (arg_storcl_check(b, cmplx)) {
1598:src/keys.c    **** 		CmdBase += n;
1599:src/keys.c    **** 		return 1;
1600:src/keys.c    **** 	}
1601:src/keys.c    **** 	/* And we can turn off the operation too */
1602:src/keys.c    **** 	if (b >= n) {
1603:src/keys.c    **** 		b -= n;
1604:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
1605:src/keys.c    **** 			CmdBase = b;
1606:src/keys.c    **** 			return 1;
1607:src/keys.c    **** 		}
1608:src/keys.c    **** 	}
1609:src/keys.c    **** 	return 0;
1610:src/keys.c    **** }
1611:src/keys.c    **** 
1612:src/keys.c    **** static int process_arg_dot(const unsigned int base) {
1613:src/keys.c    **** 
1614:src/keys.c    **** 	if (State2.numdigit == 0) {
1615:src/keys.c    **** 		// Only valid at beginning of entry
1616:src/keys.c    **** 		if (State2.dot || State2.local) {
1617:src/keys.c    **** 			// '..' or ENTER '.' = X
1618:src/keys.c    **** 			State2.local = 0;
1619:src/keys.c    **** 			return arg_eval(regX_idx);
1620:src/keys.c    **** 		}
1621:src/keys.c    **** 		if (argcmds[base].local || State2.ind) {
1622:src/keys.c    **** 			// local register or flag select
1623:src/keys.c    **** 			State2.local = 1;
1624:src/keys.c    **** 		}
1625:src/keys.c    **** 		else if (base == RARG_GTO || base == RARG_XEQ) {
1626:src/keys.c    **** 			// Special GTO . sequence
1627:src/keys.c    **** 			if (! State2.ind) {
1628:src/keys.c    **** 				State2.gtodot = 1;
1629:src/keys.c    **** 				reset_arg();
1630:src/keys.c    **** 			}
1631:src/keys.c    **** 		}
1632:src/keys.c    **** 	}
1633:src/keys.c    **** 	return STATE_UNFINISHED;
1634:src/keys.c    **** }
ARM GAS  /tmp/ccizbp1a.s 			page 34


1635:src/keys.c    **** 
1636:src/keys.c    **** static int process_arg_shuffle(int r) {
1637:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
1638:src/keys.c    **** 	if (State2.numdigit < 4)
1639:src/keys.c    **** 		return STATE_UNFINISHED;
1640:src/keys.c    **** 	return arg_eval(State2.digval);
1641:src/keys.c    **** }
1642:src/keys.c    **** 
1643:src/keys.c    **** 
1644:src/keys.c    **** static int process_arg(const keycode c) {
1645:src/keys.c    **** 	unsigned int base = CmdBase;
1646:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
1647:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
1648:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
1649:src/keys.c    **** 	const enum shifts shift = reset_shift();
1650:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
1651:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
1652:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
1653:src/keys.c    **** 
1654:src/keys.c    **** 	n &= ~NO_SHORT;
1655:src/keys.c    **** 	if (base >= NUM_RARG) {
1656:src/keys.c    **** 		reset_arg();
1657:src/keys.c    **** 		return STATE_UNFINISHED;
1658:src/keys.c    **** 	}
1659:src/keys.c    **** #ifdef DM42
1660:src/keys.c    **** 	if ( ! shorthand && ! State2.dot && ! State2.shuffle ) {
1661:src/keys.c    **** 	  switch (n) {
1662:src/keys.c    **** 	  case regX_idx:
1663:src/keys.c    **** 	    return arg_digit(1);
1664:src/keys.c    **** 	  case regY_idx:
1665:src/keys.c    **** 	    return arg_digit(2);
1666:src/keys.c    **** 	  case regZ_idx:
1667:src/keys.c    **** 	    return arg_digit(3);
1668:src/keys.c    **** 	  case regT_idx:
1669:src/keys.c    **** 	    return arg_digit(4);
1670:src/keys.c    **** 	  case 5:
1671:src/keys.c    **** 	  case 6:
1672:src/keys.c    **** 	  case 7:
1673:src/keys.c    **** 	  case 8:
1674:src/keys.c    **** 	  case 9:
1675:src/keys.c    **** 	  case 0:
1676:src/keys.c    **** 	    return arg_digit(n);
1677:src/keys.c    **** 	  }
1678:src/keys.c    **** 	}
1679:src/keys.c    **** #else
1680:src/keys.c    **** 	if (n <= 9 && ! shorthand && ! State2.dot && ! State2.shuffle)
1681:src/keys.c    **** 		return arg_digit(n);
1682:src/keys.c    **** #endif	
1683:src/keys.c    **** 	if (shorthand)
1684:src/keys.c    **** 		// row column shorthand addressing
1685:src/keys.c    **** 		return arg_eval(keycode_to_row_column(c));
1686:src/keys.c    **** 
1687:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1688:src/keys.c    **** 	if (base >= RARG_FIX && base <= RARG_SIG0) {
1689:src/keys.c    **** 		switch ((int)c) {
1690:src/keys.c    **** 		case K_UP:	// up arrow
1691:src/keys.c    **** 			if (--base < RARG_FIX)
ARM GAS  /tmp/ccizbp1a.s 			page 35


1692:src/keys.c    **** 				base = RARG_SIG0;
1693:src/keys.c    **** 			break;
1694:src/keys.c    **** 
1695:src/keys.c    **** 		case K_DOWN:	// down arrow
1696:src/keys.c    **** 		case K01:	// B
1697:src/keys.c    **** 			if (++base > RARG_SIG0)
1698:src/keys.c    **** 				base = RARG_FIX;
1699:src/keys.c    **** 			break;
1700:src/keys.c    **** 		}
1701:src/keys.c    **** 		CmdBase = base;
1702:src/keys.c    **** 	}
1703:src/keys.c    **** #endif
1704:src/keys.c    **** 	/*
1705:src/keys.c    **** 	 *  So far, we've got the digits and some special label addressing keys
1706:src/keys.c    **** 	 *  Handle the rest here.
1707:src/keys.c    **** 	 */
1708:src/keys.c    **** 	switch ((int)c) {
1709:src/keys.c    **** 	case K_F:
1710:src/keys.c    **** 		if (label_addressing)
1711:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
1712:src/keys.c    **** 		break;
1713:src/keys.c    **** 
1714:src/keys.c    **** 	case K_ARROW:		// arrow
1715:src/keys.c    **** 		if (!State2.dot && argcmds[base].indirectokay) {
1716:src/keys.c    **** 			State2.ind = ! State2.ind;
1717:src/keys.c    **** 			if (! stack_reg)
1718:src/keys.c    **** 				State2.dot = 0;
1719:src/keys.c    **** 		}
1720:src/keys.c    **** 		break;
1721:src/keys.c    **** 
1722:src/keys.c    **** 	case K_CMPLX:
1723:src/keys.c    **** 		if (State2.ind || State2.dot)
1724:src/keys.c    **** 			break;
1725:src/keys.c    **** 		if (base == RARG_STO)
1726:src/keys.c    **** 			CmdBase = RARG_STOM;
1727:src/keys.c    **** 		else if (base == RARG_RCL)
1728:src/keys.c    **** 			CmdBase = RARG_RCLM;
1729:src/keys.c    **** 		break;
1730:src/keys.c    **** #ifdef DM42
1731:src/keys.c    **** 	case K41:       // T
1732:src/keys.c    **** 	  if (State2.shuffle)
1733:src/keys.c    **** 	    return process_arg_shuffle(3);
1734:src/keys.c    **** 	case K51:       // X
1735:src/keys.c    **** 	  if (State2.shuffle)
1736:src/keys.c    **** 	    return process_arg_shuffle(0);
1737:src/keys.c    **** 	case K52:	// Y
1738:src/keys.c    **** 	  if (State2.shuffle)
1739:src/keys.c    **** 	    return process_arg_shuffle(1);
1740:src/keys.c    **** 	case K53:       // Z
1741:src/keys.c    **** 	  if (State2.shuffle)
1742:src/keys.c    **** 	    return process_arg_shuffle(2);
1743:src/keys.c    **** #else
1744:src/keys.c    **** 	case K63:	// Y
1745:src/keys.c    **** 	  if (State2.shuffle)
1746:src/keys.c    **** 	    return process_arg_shuffle(1);
1747:src/keys.c    **** #endif
1748:src/keys.c    **** 	case K00:	// A
ARM GAS  /tmp/ccizbp1a.s 			page 36


1749:src/keys.c    **** 	case K01:	// B
1750:src/keys.c    **** 	case K02:	// C
1751:src/keys.c    **** 	case K03:	// D
1752:src/keys.c    **** #ifdef DM42
1753:src/keys.c    **** 	case K12:	// I (lastY)
1754:src/keys.c    **** 	case K13:	// J
1755:src/keys.c    **** 	case K14:	// K
1756:src/keys.c    **** 	case K15:	// L (lastX)
1757:src/keys.c    **** #else
1758:src/keys.c    **** 	case K12:	// I (lastY)
1759:src/keys.c    **** 	case K21:	// J
1760:src/keys.c    **** 	case K22:	// K
1761:src/keys.c    **** 	case K23:	// L (lastX)
1762:src/keys.c    **** #endif
1763:src/keys.c    **** 	  if (State2.dot || stack_reg)
1764:src/keys.c    **** 			return arg_eval(n);
1765:src/keys.c    **** 		if ( c <= K03 )
1766:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
1767:src/keys.c    **** 		break;
1768:src/keys.c    **** #ifdef DM42
1769:src/keys.c    **** 	case K62:	// '.'
1770:src/keys.c    **** 		return process_arg_dot(base);
1771:src/keys.c    **** 
1772:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
1773:src/keys.c    **** 	case K64:		// plus
1774:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
1775:src/keys.c    **** 			return arg_eval(n);
1776:src/keys.c    **** 		break;
1777:src/keys.c    **** 	case K54:               // minus
1778:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
1779:src/keys.c    **** 			reset_arg();
1780:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
1781:src/keys.c    **** 		}
1782:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
1783:src/keys.c    **** 		break;
1784:src/keys.c    **** 	case K44:		// multiply
1785:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
1786:src/keys.c    **** 			return arg_eval(n);
1787:src/keys.c    **** 		break;
1788:src/keys.c    **** 	case K34:
1789:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
1790:src/keys.c    **** 		break;
1791:src/keys.c    **** #else
1792:src/keys.c    **** 	case K62:	// X, '.'
1793:src/keys.c    **** 		if (State2.shuffle)
1794:src/keys.c    **** 			return process_arg_shuffle(0);
1795:src/keys.c    **** 		return process_arg_dot(base);
1796:src/keys.c    **** 
1797:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
1798:src/keys.c    **** 	case K64:		// Z register
1799:src/keys.c    **** 		if (State2.shuffle)
1800:src/keys.c    **** 			return process_arg_shuffle(2);
1801:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
1802:src/keys.c    **** 			return arg_eval(n);
1803:src/keys.c    **** 		break;
1804:src/keys.c    **** 
1805:src/keys.c    **** 	case K54:
ARM GAS  /tmp/ccizbp1a.s 			page 37


1806:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
1807:src/keys.c    **** 			reset_arg();
1808:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
1809:src/keys.c    **** 		}
1810:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
1811:src/keys.c    **** 		break;
1812:src/keys.c    **** 
1813:src/keys.c    **** 	case K44:		// T register
1814:src/keys.c    **** 		if (State2.shuffle)
1815:src/keys.c    **** 			return process_arg_shuffle(3);
1816:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
1817:src/keys.c    **** 			return arg_eval(n);
1818:src/keys.c    **** 		break;
1819:src/keys.c    **** 
1820:src/keys.c    **** 	case K34:
1821:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
1822:src/keys.c    **** 		break;
1823:src/keys.c    **** #endif
1824:src/keys.c    **** 	case K_UP:
1825:src/keys.c    **** 		arg_storcl(RARG_STO_MAX - RARG_STO, 0);
1826:src/keys.c    **** 		break;
1827:src/keys.c    **** 
1828:src/keys.c    **** 	case K_DOWN:
1829:src/keys.c    **** 		arg_storcl(RARG_STO_MIN - RARG_STO, 0);
1830:src/keys.c    **** 		break;
1831:src/keys.c    **** 
1832:src/keys.c    **** 	case K20:				// Enter is a short cut finisher but it also changes a few commands if it is first up
1833:src/keys.c    **** 		if (State2.numdigit == 0 && !State2.ind && !State2.dot) {
1834:src/keys.c    **** 			if (argcmds[base].label) {
1835:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
1836:src/keys.c    **** 				State2.multi = 1;
1837:src/keys.c    **** 				State2.alphashift = 0;
1838:src/keys.c    **** 				State2.rarg = 0;
1839:src/keys.c    **** 			} else if (base == RARG_SCI) {
1840:src/keys.c    **** 				reset_arg();
1841:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
1842:src/keys.c    **** 			} else if (base == RARG_ENG) {
1843:src/keys.c    **** 				reset_arg();
1844:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
1845:src/keys.c    **** 			} else if (argcmds[base].stckreg)
1846:src/keys.c    **** 				State2.dot = 1;
1847:src/keys.c    **** 		} else if (State2.numdigit > 0)
1848:src/keys.c    **** 			return arg_eval(State2.digval);
1849:src/keys.c    **** 		else if (stack_reg)
1850:src/keys.c    **** 			State2.dot = 1 - State2.dot;
1851:src/keys.c    **** 		break;
1852:src/keys.c    **** 
1853:src/keys.c    **** 	case K24:	// <-
1854:src/keys.c    **** 		if (State2.numdigit == 0) {
1855:src/keys.c    **** 			if (State2.dot)
1856:src/keys.c    **** 				State2.dot = 0;
1857:src/keys.c    **** 			else if (State2.local)
1858:src/keys.c    **** 				State2.local = 0;
1859:src/keys.c    **** 			else if (State2.ind)
1860:src/keys.c    **** 				State2.ind = 0;
1861:src/keys.c    **** 			else
1862:src/keys.c    **** 				goto reset;
ARM GAS  /tmp/ccizbp1a.s 			page 38


1863:src/keys.c    **** 		}
1864:src/keys.c    **** 		else {
1865:src/keys.c    **** 			--State2.numdigit;
1866:src/keys.c    **** 			if (State2.shuffle)
1867:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
1868:src/keys.c    **** 			else
1869:src/keys.c    **** 				State2.digval /= 10;
1870:src/keys.c    **** 		}
1871:src/keys.c    **** 		break;
1872:src/keys.c    **** 
1873:src/keys.c    **** 	case K60:
1874:src/keys.c    **** 	reset:
1875:src/keys.c    **** 		reset_arg();
1876:src/keys.c    **** 	default:
1877:src/keys.c    **** 		break;
1878:src/keys.c    **** 	}
1879:src/keys.c    **** 	return STATE_UNFINISHED;
1880:src/keys.c    **** }
1881:src/keys.c    **** 
1882:src/keys.c    **** 
1883:src/keys.c    **** /*
1884:src/keys.c    ****  *  Process arguments to the diverse test commands
1885:src/keys.c    ****  */
1886:src/keys.c    **** static int process_test(const keycode c) {
1887:src/keys.c    **** 	int r = State2.test;
1888:src/keys.c    **** 	int cmpx = State2.cmplx;
1889:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
1890:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
1891:src/keys.c    **** 
1892:src/keys.c    **** 	State2.test = TST_NONE;
1893:src/keys.c    **** 	State2.cmplx = 0;
1894:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
1895:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
1896:src/keys.c    **** 		// Lettered register
1897:src/keys.c    **** 		if (cmpx && (n & 1)) {
1898:src/keys.c    **** 			if (n == regI_idx)
1899:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
1900:src/keys.c    **** 			// Disallow odd complex registers > A
1901:src/keys.c    **** 			goto again;
1902:src/keys.c    **** 		}
1903:src/keys.c    **** 		// Return the command with the register completed
1904:src/keys.c    **** 		return RARG(base, n);
1905:src/keys.c    **** 	}
1906:src/keys.c    **** 	else if ( n == 0 ) {
1907:src/keys.c    **** 		// Special 0
1908:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq0 : OP_Xeq0) + r;
1909:src/keys.c    **** 	}
1910:src/keys.c    **** 	else if ( n == 1 ) {
1911:src/keys.c    **** 		// Special 1
1912:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq1 : OP_Xeq1) + r;
1913:src/keys.c    **** 	}
1914:src/keys.c    **** 	else if ( n <= 9 || c == K_ARROW || c == K62 ) {
1915:src/keys.c    **** 		// digit 2..9, -> or .
1916:src/keys.c    **** 		init_arg((enum rarg)base);
1917:src/keys.c    **** 		return process_arg(c);
1918:src/keys.c    **** 	}
1919:src/keys.c    **** 
ARM GAS  /tmp/ccizbp1a.s 			page 39


1920:src/keys.c    **** 	switch (c) {
1921:src/keys.c    **** 	case K11:					// tests vs register
1922:src/keys.c    **** 	case K20:
1923:src/keys.c    **** 		init_arg((enum rarg)base);
1924:src/keys.c    **** 		return STATE_UNFINISHED;
1925:src/keys.c    **** 
1926:src/keys.c    **** 	//case K60:
1927:src/keys.c    **** 	case K24:
1928:src/keys.c    **** 		return STATE_UNFINISHED;
1929:src/keys.c    **** 
1930:src/keys.c    **** 	default:
1931:src/keys.c    **** 		break;
1932:src/keys.c    **** 	}
1933:src/keys.c    **** again:
1934:src/keys.c    **** 	State2.test = r;
1935:src/keys.c    **** 	State2.cmplx = cmpx;
1936:src/keys.c    **** 	return STATE_UNFINISHED;
1937:src/keys.c    **** }
1938:src/keys.c    **** 
1939:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
1940:src/keys.c    **** /*
1941:src/keys.c    ****  *  Build the user catalogue on the fly in RAM and return the number of entries
1942:src/keys.c    ****  */
1943:src/keys.c    **** #define USER_CAT_MAX 100
1944:src/keys.c    **** s_opcode UserCat[USER_CAT_MAX];
1945:src/keys.c    **** 
1946:src/keys.c    **** static int build_user_cat(void)
1947:src/keys.c    **** {
1948:src/keys.c    **** 	// find the label 'CAT'
1949:src/keys.c    **** 	const int lbl = OP_DBL + (DBL_LBL << DBL_SHIFT) + 'C' + ('A' << 16) + ('T' << 24);
1950:src/keys.c    **** 	unsigned int pc = findmultilbl(lbl, 0);
1951:src/keys.c    **** 	int len = 0;
1952:src/keys.c    **** 	while (pc && len < USER_CAT_MAX) {
1953:src/keys.c    **** 		// do a simnple insert-sort to sort the entries
1954:src/keys.c    **** 		char buf1[16];
1955:src/keys.c    **** 		int i;
1956:src/keys.c    **** 		s_opcode op;
1957:src/keys.c    **** 	next:
1958:src/keys.c    **** 		pc = do_inc(pc, 0);
1959:src/keys.c    **** 		op = (s_opcode) getprog(pc);
1960:src/keys.c    **** 		if (op == (OP_NIL | OP_END))
1961:src/keys.c    **** 			break;
1962:src/keys.c    **** 		if (isDBL(op))
1963:src/keys.c    **** 			continue;
1964:src/keys.c    **** 		if (isRARG(op)) {
1965:src/keys.c    **** 			const s_opcode rarg = RARG_CMD(op);
1966:src/keys.c    **** 			if (rarg != RARG_ALPHA && rarg != RARG_CONV
1967:src/keys.c    **** 			    && rarg != RARG_CONST && rarg != RARG_CONST_CMPLX)
1968:src/keys.c    **** 				op = op & 0xff00;	// remove argument
1969:src/keys.c    **** 		}
1970:src/keys.c    **** 		catcmd(op, buf1);
1971:src/keys.c    **** 		for (i = 0; i < len; ++i) {
1972:src/keys.c    **** 			// Find a position in the table to insert the new entry
1973:src/keys.c    **** 			char buf2[16];
1974:src/keys.c    **** 			const char *p, *q;
1975:src/keys.c    **** 			int diff = 0;
1976:src/keys.c    **** 			if (op == UserCat[i]) {
ARM GAS  /tmp/ccizbp1a.s 			page 40


1977:src/keys.c    **** 				// duplicate entry - ignore
1978:src/keys.c    **** 				goto next;
1979:src/keys.c    **** 			}
1980:src/keys.c    **** 			p = buf1;
1981:src/keys.c    **** 			if (*p == COMPLEX_PREFIX)
1982:src/keys.c    **** 				++p;
1983:src/keys.c    **** 			q = catcmd(UserCat[i], buf2);
1984:src/keys.c    **** 			if (*q == COMPLEX_PREFIX)
1985:src/keys.c    **** 				++q;
1986:src/keys.c    **** 			diff = 0;
1987:src/keys.c    **** 			while (*p != '\0' && diff == 0) {
1988:src/keys.c    **** 				diff = remap_chars(*q++) - remap_chars(*p++);
1989:src/keys.c    **** 			}
1990:src/keys.c    **** 			if ((diff == 0 && *q == 0) ) {
1991:src/keys.c    **** 				// identical according to sort order, insert after
1992:src/keys.c    **** 				++i;
1993:src/keys.c    **** 				break;
1994:src/keys.c    **** 			}
1995:src/keys.c    **** 			if (diff > 0) {
1996:src/keys.c    **** 				// insert new entry before the one found because this is greater
1997:src/keys.c    **** 				break;
1998:src/keys.c    **** 			}
1999:src/keys.c    **** 		}
2000:src/keys.c    **** 		if (i < len) {
2001:src/keys.c    **** 			// Make room
2002:src/keys.c    **** 			xcopy(UserCat + i + 1, UserCat + i, (len - i) << 1);
2003:src/keys.c    **** 		}
2004:src/keys.c    **** 		UserCat[i] = op;
2005:src/keys.c    **** 		++len;
2006:src/keys.c    **** 	}
2007:src/keys.c    **** 	// return the number of entries
2008:src/keys.c    **** 	return len;
2009:src/keys.c    **** }
2010:src/keys.c    **** #endif
2011:src/keys.c    **** 
2012:src/keys.c    **** /* Return the number of entries in the current catalogue.
2013:src/keys.c    ****  * These are all fixed size known at compile time so a table lookup will
2014:src/keys.c    ****  * likely be the most space efficient method.
2015:src/keys.c    ****  */
2016:src/keys.c    **** int current_catalogue_max(void) {
2017:src/keys.c    **** 	// A quick table of catalogue sizes
2018:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues' 
2019:src/keys.c    **** 	static const unsigned char catalogue_sizes[] = 
2020:src/keys.c    **** 	{
2021:src/keys.c    **** 		0, // NONE
2022:src/keys.c    **** 		SIZE_catalogue,
2023:src/keys.c    **** 		SIZE_cplx_catalogue,
2024:src/keys.c    **** 		SIZE_stats_catalogue,
2025:src/keys.c    **** 		SIZE_prob_catalogue,
2026:src/keys.c    **** 		SIZE_int_catalogue,
2027:src/keys.c    **** 		SIZE_prog_catalogue,
2028:src/keys.c    **** 		SIZE_program_xfcn,
2029:src/keys.c    **** 		SIZE_test_catalogue,
2030:src/keys.c    **** 		SIZE_mode_catalogue,
2031:src/keys.c    **** 		SIZE_alpha_catalogue,
2032:src/keys.c    **** 		SIZE_alpha_symbols,
2033:src/keys.c    **** 		SIZE_alpha_compares,
ARM GAS  /tmp/ccizbp1a.s 			page 41


2034:src/keys.c    **** 		SIZE_alpha_arrows,
2035:src/keys.c    **** 		SIZE_alpha_letters,
2036:src/keys.c    **** 		SIZE_alpha_subscripts,
2037:src/keys.c    **** 		NUM_CONSTS_CAT,
2038:src/keys.c    **** 		NUM_CONSTS_CAT,
2039:src/keys.c    **** 		SIZE_conv_catalogue,
2040:src/keys.c    **** 		SIZE_sums_catalogue,
2041:src/keys.c    **** 		SIZE_matrix_catalogue,
2042:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2043:src/keys.c    **** 		SIZE_internal_catalogue,
2044:src/keys.c    **** #endif
2045:src/keys.c    **** 	};
2046:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2047:src/keys.c    **** 	const int cat = State2.catalogue;
2048:src/keys.c    **** 	return cat == CATALOGUE_USER ? build_user_cat() : catalogue_sizes[cat];
2049:src/keys.c    **** #else
2050:src/keys.c    **** 	return catalogue_sizes[State2.catalogue];
2051:src/keys.c    **** #endif
2052:src/keys.c    **** }
2053:src/keys.c    **** 
2054:src/keys.c    **** 
2055:src/keys.c    **** /* Look up the character position in the given byte array and
2056:src/keys.c    ****  * build the alpha op-code for it.
2057:src/keys.c    ****  */
2058:src/keys.c    **** static opcode alpha_code(int n, const char tbl[]) {
2059:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
2060:src/keys.c    **** }
2061:src/keys.c    **** 
2062:src/keys.c    **** 
2063:src/keys.c    **** /* Return the opcode for entry n from the current catalogue
2064:src/keys.c    ****  */
2065:src/keys.c    **** opcode current_catalogue(int n) {
2066:src/keys.c    **** 	// A quick table of catalogue tables
2067:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues'
2068:src/keys.c    **** 	static const void *catalogues[] =
2069:src/keys.c    **** 	{
2070:src/keys.c    **** 		NULL, // NONE
2071:src/keys.c    **** 		catalogue,
2072:src/keys.c    **** 		cplx_catalogue,
2073:src/keys.c    **** 		stats_catalogue,
2074:src/keys.c    **** 		prob_catalogue,
2075:src/keys.c    **** 		int_catalogue,
2076:src/keys.c    **** 		prog_catalogue,
2077:src/keys.c    **** 		program_xfcn,
2078:src/keys.c    **** 		test_catalogue,
2079:src/keys.c    **** 		mode_catalogue,
2080:src/keys.c    **** 		alpha_catalogue,
2081:src/keys.c    **** 		alpha_symbols,
2082:src/keys.c    **** 		alpha_compares,
2083:src/keys.c    **** 		alpha_arrows,
2084:src/keys.c    **** 		alpha_letters,
2085:src/keys.c    **** 		alpha_subscripts,
2086:src/keys.c    **** 		NULL,
2087:src/keys.c    **** 		NULL,
2088:src/keys.c    **** 		NULL, //CONV
2089:src/keys.c    **** 		sums_catalogue,
2090:src/keys.c    **** 		matrix_catalogue,
ARM GAS  /tmp/ccizbp1a.s 			page 42


2091:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2092:src/keys.c    **** 		internal_catalogue,
2093:src/keys.c    **** #endif
2094:src/keys.c    **** 	};
2095:src/keys.c    **** 	const unsigned char *cat;
2096:src/keys.c    **** 	unsigned int c = State2.catalogue;
2097:src/keys.c    **** 	int m, i;
2098:src/keys.c    **** 	unsigned p, q;
2099:src/keys.c    **** 
2100:src/keys.c    **** 	if (c == CATALOGUE_CONST) {
2101:src/keys.c    **** 		if (n == OP_ZERO)
2102:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
2103:src/keys.c    **** 		return CONST(n);
2104:src/keys.c    **** 	}
2105:src/keys.c    **** 	if (c == CATALOGUE_COMPLEX_CONST) {
2106:src/keys.c    **** 		if (n == OP_ZERO)
2107:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
2108:src/keys.c    **** 		return CONST_CMPLX(n);
2109:src/keys.c    **** 	}
2110:src/keys.c    **** 	if (c == CATALOGUE_CONV) {
2111:src/keys.c    **** 		const int cnv = conv_catalogue[n];
2112:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
2113:src/keys.c    **** 			// Monadic conversion routine
2114:src/keys.c    **** 			return OP_MON | (cnv - SIZE_conv_catalogue);
2115:src/keys.c    **** 		else
2116:src/keys.c    **** 			return RARG(RARG_CONV, cnv);
2117:src/keys.c    **** 	}
2118:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2119:src/keys.c    **** 	if (c == CATALOGUE_USER)
2120:src/keys.c    **** 		return build_user_cat() ? UserCat[n] : STATE_IGNORE;
2121:src/keys.c    **** #endif
2122:src/keys.c    **** 
2123:src/keys.c    **** 	if (c == CATALOGUE_ALPHA_LETTERS && State2.alphashift)
2124:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
2125:src/keys.c    **** 	else
2126:src/keys.c    **** 		cat = (const unsigned char *) catalogues[c];
2127:src/keys.c    **** 
2128:src/keys.c    **** 	if (c >= CATALOGUE_ALPHA_SYMBOLS && c <= CATALOGUE_ALPHA_SUBSCRIPTS) {
2129:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
2130:src/keys.c    **** 	}
2131:src/keys.c    **** 	if (c >= sizeof(catalogues) / sizeof(void *))
2132:src/keys.c    **** 		return OP_NIL | OP_NOP;
2133:src/keys.c    **** 
2134:src/keys.c    **** 	/* Unpack the opcode */
2135:src/keys.c    **** 	cat += n + (n >> 2);
2136:src/keys.c    **** 	p = cat[0];
2137:src/keys.c    **** 	q = cat[1];
2138:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
2139:src/keys.c    **** 
2140:src/keys.c    **** 	/* Now figure out which opcode it really is */
2141:src/keys.c    **** 	for (i=0; i<KIND_MAX; i++) {
2142:src/keys.c    **** 		if (m < opcode_breaks[i])
2143:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
2144:src/keys.c    **** 		m -= opcode_breaks[i];
2145:src/keys.c    **** 	}
2146:src/keys.c    **** 	return RARG_BASEOP(m);
2147:src/keys.c    **** }
ARM GAS  /tmp/ccizbp1a.s 			page 43


2148:src/keys.c    **** 
2149:src/keys.c    **** 
2150:src/keys.c    **** /*
2151:src/keys.c    ****  *  Helper for navigation in alpha catalogues. Some charaters are not allowed
2152:src/keys.c    ****  *  in multi character commands.
2153:src/keys.c    ****  */
2154:src/keys.c    **** static int forbidden_alpha(int pos) {
2155:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
2156:src/keys.c    **** }
2157:src/keys.c    **** 
2158:src/keys.c    **** /*
2159:src/keys.c    ****  *  Catalogue navigation
2160:src/keys.c    ****  */
2161:src/keys.c    **** static int process_catalogue(const keycode c, const enum shifts shift, const int is_multi) {
2162:src/keys.c    **** 	int pos = State.catpos;
2163:src/keys.c    **** 	int ch;
2164:src/keys.c    **** 	const int ctmax = current_catalogue_max();
2165:src/keys.c    **** 	const enum catalogues cat = (enum catalogues) State2.catalogue;
2166:src/keys.c    **** 
2167:src/keys.c    **** 	if (shift == SHIFT_N) {
2168:src/keys.c    **** 		switch (c) {
2169:src/keys.c    **** #ifdef DM42
2170:src/keys.c    **** 		case K05:			// XEQ accepts command
2171:src/keys.c    **** #else	  
2172:src/keys.c    **** 		case K30:			// XEQ accepts command
2173:src/keys.c    **** #endif						  
2174:src/keys.c    **** 		case K20:			// Enter accepts command
2175:src/keys.c    **** 			if (pos < ctmax && !(is_multi && forbidden_alpha(pos))) {
2176:src/keys.c    **** 				const opcode op = current_catalogue(pos);
2177:src/keys.c    **** 
2178:src/keys.c    **** 				init_cat(CATALOGUE_NONE);
2179:src/keys.c    **** 
2180:src/keys.c    **** 				if (isRARG(op)) {
2181:src/keys.c    **** 					const unsigned int rarg = RARG_CMD(op);
2182:src/keys.c    **** 					if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
2183:src/keys.c    **** 						return op;
2184:src/keys.c    **** 					if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
2185:src/keys.c    **** 						State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
2186:src/keys.c    **** 					else
2187:src/keys.c    **** 						init_arg(RARG_CMD(op));
2188:src/keys.c    **** 				}
2189:src/keys.c    **** 				else {
2190:src/keys.c    **** 					return check_confirm(op);
2191:src/keys.c    **** 				}
2192:src/keys.c    **** 			} else
2193:src/keys.c    **** 				init_cat(CATALOGUE_NONE);
2194:src/keys.c    **** 			return STATE_UNFINISHED;
2195:src/keys.c    **** 
2196:src/keys.c    **** 		case K24:			// backspace
2197:src/keys.c    **** #ifdef DM42
2198:src/keys.c    **** 		  if (CmdLineLength > 0 && keyticks() < 30) {
2199:src/keys.c    **** #else
2200:src/keys.c    **** 		    if (CmdLineLength > 0 && Keyticks < 30) {
2201:src/keys.c    **** #endif
2202:src/keys.c    **** 		      if (--CmdLineLength > 0)
2203:src/keys.c    **** 					goto search;
2204:src/keys.c    **** 				pos = 0;
ARM GAS  /tmp/ccizbp1a.s 			page 44


2205:src/keys.c    **** 				goto set_pos;
2206:src/keys.c    **** 			} else
2207:src/keys.c    **** 				init_cat(CATALOGUE_NONE);
2208:src/keys.c    **** 			return STATE_UNFINISHED;
2209:src/keys.c    **** 
2210:src/keys.c    **** 		case K60:
2211:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
2212:src/keys.c    **** 			return STATE_UNFINISHED;
2213:src/keys.c    **** 
2214:src/keys.c    **** 		case K_UP:
2215:src/keys.c    **** 			CmdLineLength = 0;
2216:src/keys.c    **** 			if (pos == 0)
2217:src/keys.c    **** 				goto set_max;
2218:src/keys.c    **** 			else
2219:src/keys.c    **** 				--pos;
2220:src/keys.c    **** 			goto set_pos;
2221:src/keys.c    **** 
2222:src/keys.c    **** 		case K_DOWN:
2223:src/keys.c    **** 			CmdLineLength = 0;
2224:src/keys.c    **** 			while (++pos < ctmax && is_multi && forbidden_alpha(pos));
2225:src/keys.c    **** 			if (pos >= ctmax)
2226:src/keys.c    **** 				pos = 0;
2227:src/keys.c    **** 			goto set_pos;
2228:src/keys.c    **** 
2229:src/keys.c    **** 		default:
2230:src/keys.c    **** 			break;
2231:src/keys.c    **** 		}
2232:src/keys.c    **** 	} else if (shift == SHIFT_F) {
2233:src/keys.c    **** 		if (cat == CATALOGUE_CONV && c == K01) {
2234:src/keys.c    **** 			/*
2235:src/keys.c    **** 			 * f 1/x in conversion catalogue
2236:src/keys.c    **** 			 */
2237:src/keys.c    **** 			/* A small table of commands in pairs containing inverse commands.
2238:src/keys.c    **** 			 * This table could be unsigned characters only storing the monadic kind.
2239:src/keys.c    **** 			 * this saves twelve bytes in the table at a cost of some bytes in the code below.
2240:src/keys.c    **** 			 * Not worth it since the maximum saving will be less than twelve bytes.
2241:src/keys.c    **** 			 */
2242:src/keys.c    **** 			static const unsigned short int conv_mapping[] = {
2243:src/keys.c    **** 				OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
2244:src/keys.c    **** 				OP_MON | OP_DB_PR,	OP_MON | OP_PR_DB,
2245:src/keys.c    **** 				OP_MON | OP_DEGC_F,	OP_MON | OP_DEGF_C,
2246:src/keys.c    **** 				OP_MON | OP_DEG2RAD,	OP_MON | OP_RAD2DEG,
2247:src/keys.c    **** 				OP_MON | OP_DEG2GRD,	OP_MON | OP_GRD2DEG,
2248:src/keys.c    **** 				OP_MON | OP_RAD2GRD,	OP_MON | OP_GRD2RAD,
2249:src/keys.c    **** 			};
2250:src/keys.c    **** 			const opcode op = current_catalogue(pos);
2251:src/keys.c    **** 			int i;
2252:src/keys.c    **** 
2253:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
2254:src/keys.c    **** 			if (isRARG(op))
2255:src/keys.c    **** 				return op ^ 1;
2256:src/keys.c    **** 			for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
2257:src/keys.c    **** 				if (op == conv_mapping[i])
2258:src/keys.c    **** 					return conv_mapping[i^1];
2259:src/keys.c    **** 			return STATE_UNFINISHED;		// Unreached
2260:src/keys.c    **** 		}
2261:src/keys.c    **** 		else if (c == K60 && (State2.alphas || State2.multi)) {
ARM GAS  /tmp/ccizbp1a.s 			page 45


2262:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
2263:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
2264:src/keys.c    **** 			return STATE_UNFINISHED;
2265:src/keys.c    **** 		}
2266:src/keys.c    **** 	} else if (shift == SHIFT_G) {
2267:src/keys.c    **** 		if (c == K24 && cat == CATALOGUE_SUMS) {
2268:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
2269:src/keys.c    **** 			return OP_NIL | OP_SIGMACLEAR;
2270:src/keys.c    **** 		}
2271:src/keys.c    **** 	}
2272:src/keys.c    **** 
2273:src/keys.c    **** 	/* We've got a key press, map it to a character and try to
2274:src/keys.c    **** 	 * jump to the appropriate catalogue entry.
2275:src/keys.c    **** 	 */
2276:src/keys.c    **** 	ch = remap_chars(keycode_to_alpha(c, shift == SHIFT_G ? SHIFT_LC_G : shift));
2277:src/keys.c    **** 	reset_shift();
2278:src/keys.c    **** 	if (ch == '\0')
2279:src/keys.c    **** 		return STATE_UNFINISHED;
2280:src/keys.c    **** 	if (cat > CATALOGUE_ALPHA && cat < CATALOGUE_CONST) {
2281:src/keys.c    **** 		// No multi character search in alpha catalogues
2282:src/keys.c    **** 		CmdLineLength = 0;
2283:src/keys.c    **** 	}
2284:src/keys.c    **** 	if (CmdLineLength < 10)
2285:src/keys.c    **** 		Cmdline[CmdLineLength++] = ch;
2286:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
2287:src/keys.c    **** 
2288:src/keys.c    **** search:
2289:src/keys.c    **** 	Cmdline[CmdLineLength] = '\0';
2290:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
2291:src/keys.c    **** 		char buf[16];
2292:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
2293:src/keys.c    **** 		int i;
2294:src/keys.c    **** 
2295:src/keys.c    **** 		if (*cmd == COMPLEX_PREFIX)
2296:src/keys.c    **** 			cmd++;
2297:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
2298:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
2299:src/keys.c    **** 			const int cl = (unsigned char) Cmdline[i];
2300:src/keys.c    **** 			if (c > cl)
2301:src/keys.c    **** 				goto set_pos;
2302:src/keys.c    **** 			else if (c < cl)
2303:src/keys.c    **** 				break;
2304:src/keys.c    **** 		}
2305:src/keys.c    **** 		if (Cmdline[i] == '\0')
2306:src/keys.c    **** 			goto set_pos;
2307:src/keys.c    **** 	}
2308:src/keys.c    **** set_max:
2309:src/keys.c    **** 	pos = ctmax - 1;
2310:src/keys.c    **** set_pos:
2311:src/keys.c    **** 	while (is_multi && pos && forbidden_alpha(pos))
2312:src/keys.c    **** 		--pos;
2313:src/keys.c    **** 	State.catpos = pos;
2314:src/keys.c    **** 	return STATE_UNFINISHED;
2315:src/keys.c    **** }
2316:src/keys.c    **** 
2317:src/keys.c    **** #ifndef REALBUILD
2318:src/keys.c    **** int find_pos(const char* text) {
ARM GAS  /tmp/ccizbp1a.s 			page 46


2319:src/keys.c    **** 	int pos;
2320:src/keys.c    **** 	const int ctmax = current_catalogue_max();
2321:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
2322:src/keys.c    **** 		char buf[16];
2323:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
2324:src/keys.c    **** 		int i;
2325:src/keys.c    **** 
2326:src/keys.c    **** 		if (*cmd == COMPLEX_PREFIX)
2327:src/keys.c    **** 			cmd++;
2328:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
2329:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
2330:src/keys.c    **** 			const int cl = remap_chars(text[i]);
2331:src/keys.c    **** 			if (c > cl)
2332:src/keys.c    **** 				return pos;
2333:src/keys.c    **** 			else if (c < cl)
2334:src/keys.c    **** 				break;
2335:src/keys.c    **** 		}
2336:src/keys.c    **** 		if (text[i] == '\0')
2337:src/keys.c    **** 			return pos;
2338:src/keys.c    **** 	}
2339:src/keys.c    **** 	return pos;
2340:src/keys.c    **** }
2341:src/keys.c    **** 
2342:src/keys.c    **** #endif
2343:src/keys.c    **** 
2344:src/keys.c    **** /* Multi (2) word instruction entry
2345:src/keys.c    ****  */
2346:src/keys.c    **** static void reset_multi(void) {
2347:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
2348:src/keys.c    **** 	State2.multi = 0;
2349:src/keys.c    **** 	if (! State2.alphas )
2350:src/keys.c    **** 		State2.alphashift = 0;
2351:src/keys.c    **** }
2352:src/keys.c    **** 
2353:src/keys.c    **** static int process_multi(const keycode c) {
2354:src/keys.c    **** 	enum shifts shift = reset_shift();
2355:src/keys.c    **** 	unsigned int ch = 0;
2356:src/keys.c    **** 	unsigned int opcode;
2357:src/keys.c    **** 
2358:src/keys.c    **** 	if (State2.catalogue) {
2359:src/keys.c    **** 		// Alpha catalogue from within multi character command
2360:src/keys.c    **** 		opcode = process_catalogue((const keycode)c, shift, State2.numdigit == 2);
2361:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
2362:src/keys.c    **** 			return opcode;
2363:src/keys.c    **** 		ch = (unsigned char) opcode;
2364:src/keys.c    **** 		goto add_char;
2365:src/keys.c    **** 	}
2366:src/keys.c    **** 
2367:src/keys.c    **** 	switch (c) {
2368:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
2369:src/keys.c    **** 		if (shift != SHIFT_N)
2370:src/keys.c    **** 				break;
2371:src/keys.c    **** 		reset_multi();
2372:src/keys.c    **** 		if (State2.numdigit == 0)
2373:src/keys.c    **** 			return STATE_UNFINISHED;
2374:src/keys.c    **** 		else if (State2.numdigit == 1)
2375:src/keys.c    **** 			State2.digval2 = 0;
ARM GAS  /tmp/ccizbp1a.s 			page 47


2376:src/keys.c    **** 		goto fin;
2377:src/keys.c    **** 
2378:src/keys.c    **** 	case K24:	// Clx - backspace, clear alpha
2379:src/keys.c    **** 		if (shift != SHIFT_H) {
2380:src/keys.c    **** 			if (State2.numdigit == 0)
2381:src/keys.c    **** 				reset_multi();
2382:src/keys.c    **** 			else
2383:src/keys.c    **** 				State2.numdigit--;
2384:src/keys.c    **** 			return STATE_UNFINISHED;
2385:src/keys.c    **** 		}
2386:src/keys.c    **** 		break;
2387:src/keys.c    **** 
2388:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
2389:src/keys.c    **** 		if (shift == SHIFT_F)
2390:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
2391:src/keys.c    **** 		else
2392:src/keys.c    **** 			reset_multi();
2393:src/keys.c    **** 		return STATE_UNFINISHED;
2394:src/keys.c    **** 
2395:src/keys.c    **** 	default:
2396:src/keys.c    **** 		break;
2397:src/keys.c    **** 		}
2398:src/keys.c    **** 
2399:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
2400:src/keys.c    **** 	ch = keycode_to_alpha(c, shift);
2401:src/keys.c    **** 	if (ch == 0)
2402:src/keys.c    **** 		return STATE_UNFINISHED;
2403:src/keys.c    **** add_char:
2404:src/keys.c    **** 	if (State2.numdigit == 0) {
2405:src/keys.c    **** 		State2.digval = ch;
2406:src/keys.c    **** 		State2.numdigit = 1;
2407:src/keys.c    **** 		return STATE_UNFINISHED;
2408:src/keys.c    **** 	} else if (State2.numdigit == 1) {
2409:src/keys.c    **** 		State2.digval2 = ch;
2410:src/keys.c    **** 		State2.numdigit = 2;
2411:src/keys.c    **** 		return STATE_UNFINISHED;
2412:src/keys.c    **** 	}
2413:src/keys.c    **** 	reset_multi();
2414:src/keys.c    **** 
2415:src/keys.c    **** fin:
2416:src/keys.c    **** 	opcode = OP_DBL + (CmdBase << DBL_SHIFT) 
2417:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
2418:src/keys.c    **** 	return opcode;
2419:src/keys.c    **** }
2420:src/keys.c    **** 
2421:src/keys.c    **** 
2422:src/keys.c    **** /* Handle YES/NO confirmations
2423:src/keys.c    ****  */
2424:src/keys.c    **** static int process_confirm(const keycode c) {
2425:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
2426:src/keys.c    **** 	switch (c) {
2427:src/keys.c    **** #ifdef DM42
2428:src/keys.c    **** 	case K52:
2429:src/keys.c    **** #endif
2430:src/keys.c    **** 	case K63:			// Yes
2431:src/keys.c    **** 	  switch (State2.confirm) {
2432:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
ARM GAS  /tmp/ccizbp1a.s 			page 48


2433:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
2434:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
2435:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
2436:src/keys.c    **** 	  }
2437:src/keys.c    **** 	case K24:
2438:src/keys.c    **** #ifdef DM42
2439:src/keys.c    **** 	case K22:
2440:src/keys.c    **** #else
2441:src/keys.c    **** 	case K32:
2442:src/keys.c    **** #endif
2443:src/keys.c    **** 	  // No
2444:src/keys.c    **** 	  State2.confirm = 0;
2445:src/keys.c    **** 	  State2.digval = 0;
2446:src/keys.c    **** 	  break;
2447:src/keys.c    **** 	default:			// No state change
2448:src/keys.c    **** 	  break;
2449:src/keys.c    **** 	}
2450:src/keys.c    **** 	return STATE_UNFINISHED;
2451:src/keys.c    **** }
2452:src/keys.c    **** 
2453:src/keys.c    **** 
2454:src/keys.c    **** /*
2455:src/keys.c    ****  *  STATUS
2456:src/keys.c    ****  */
2457:src/keys.c    **** static int process_status(const keycode c) {
2458:src/keys.c    **** 	int n = ((int)State2.status) - 3;
2459:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
2460:src/keys.c    **** 
2461:src/keys.c    **** 	if (c == K_UP) {
2462:src/keys.c    **** 		if (--n < -2)
2463:src/keys.c    **** 			n = max;
2464:src/keys.c    **** 	}
2465:src/keys.c    **** 	else if (c == K_DOWN) {
2466:src/keys.c    **** 		if (++n > max)
2467:src/keys.c    **** 			n = -2;
2468:src/keys.c    **** 	}
2469:src/keys.c    **** 	else if (c == K24 /* || c == K60 */) {
2470:src/keys.c    **** 		State2.status = 0;
2471:src/keys.c    **** 		return STATE_UNFINISHED;
2472:src/keys.c    **** 	} 
2473:src/keys.c    **** 	else {
2474:src/keys.c    **** 		int nn = keycode_to_digit_or_register(c) & 0x7f;
2475:src/keys.c    **** 		if (nn <= 9)
2476:src/keys.c    **** 			n = nn;
2477:src/keys.c    **** 		else if (nn == LOCAL_REG_BASE)
2478:src/keys.c    **** 			n = n == max ? 10 : max;
2479:src/keys.c    **** 		else if (nn != NO_REG)
2480:src/keys.c    **** 			n = 10; 
2481:src/keys.c    **** 	}
2482:src/keys.c    **** 	State2.status = n + 3;
2483:src/keys.c    **** 
2484:src/keys.c    **** 	return STATE_UNFINISHED;
2485:src/keys.c    **** }
2486:src/keys.c    **** 
2487:src/keys.c    **** 
2488:src/keys.c    **** /*
2489:src/keys.c    ****  *  CAT helper
ARM GAS  /tmp/ccizbp1a.s 			page 49


2490:src/keys.c    ****  */
2491:src/keys.c    **** static int is_label_or_end_at(unsigned int pc, int search_end) {
 218              		.loc 1 2491 64 is_stmt 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
2492:src/keys.c    **** 	const unsigned int op = getprog(pc);
 222              		.loc 1 2492 2 view .LVU58
2491:src/keys.c    **** 	const unsigned int op = getprog(pc);
 223              		.loc 1 2491 64 is_stmt 0 view .LVU59
 224 0000 10B5     		push	{r4, lr}
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 4, -8
 227              		.cfi_offset 14, -4
2491:src/keys.c    **** 	const unsigned int op = getprog(pc);
 228              		.loc 1 2491 64 view .LVU60
 229 0002 0C46     		mov	r4, r1
 230              		.loc 1 2492 26 view .LVU61
 231 0004 FFF7FEFF 		bl	getprog
 232              	.LVL20:
2493:src/keys.c    **** 
2494:src/keys.c    **** 	return op == (OP_NIL | OP_END) || (!search_end && (isDBL(op) && opDBL(op) == DBL_LBL));
 233              		.loc 1 2494 2 is_stmt 1 view .LVU62
 234              		.loc 1 2494 33 is_stmt 0 view .LVU63
 235 0008 B0F59D7F 		cmp	r0, #314
 236 000c 06D0     		beq	.L21
 237              		.loc 1 2494 53 discriminator 3 view .LVU64
 238 000e 00F47043 		and	r3, r0, #61440
 239              		.loc 1 2494 49 discriminator 3 view .LVU65
 240 0012 B3F5704F 		cmp	r3, #61440
 241 0016 03D0     		beq	.L24
 242              		.loc 1 2494 33 view .LVU66
 243 0018 0020     		movs	r0, #0
 244              	.LVL21:
2495:src/keys.c    **** }
 245              		.loc 1 2495 1 view .LVU67
 246 001a 10BD     		pop	{r4, pc}
 247              	.LVL22:
 248              	.L21:
2494:src/keys.c    **** }
 249              		.loc 1 2494 33 view .LVU68
 250 001c 0120     		movs	r0, #1
 251              	.LVL23:
 252              		.loc 1 2495 1 view .LVU69
 253 001e 10BD     		pop	{r4, pc}
 254              	.LVL24:
 255              	.L24:
2494:src/keys.c    **** }
 256              		.loc 1 2494 66 discriminator 5 view .LVU70
 257 0020 C0F30320 		ubfx	r0, r0, #8, #4
 258              	.LVL25:
2494:src/keys.c    **** }
 259              		.loc 1 2494 63 discriminator 5 view .LVU71
 260 0024 50EA0403 		orrs	r3, r0, r4
 261 0028 0CBF     		ite	eq
 262 002a 0120     		moveq	r0, #1
 263 002c 0020     		movne	r0, #0
ARM GAS  /tmp/ccizbp1a.s 			page 50


 264              		.loc 1 2495 1 discriminator 5 view .LVU72
 265 002e 10BD     		pop	{r4, pc}
 266              		.loc 1 2495 1 discriminator 5 view .LVU73
 267              		.cfi_endproc
 268              	.LFE49:
 270              		.section	.text.advance_to_next_label,"ax",%progbits
 271              		.align	1
 272              		.p2align 2,,3
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv4-sp-d16
 278              	advance_to_next_label:
 279              	.LVL26:
 280              	.LFB50:
2496:src/keys.c    **** 
2497:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end) {
 281              		.loc 1 2497 85 is_stmt 1 view -0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		.loc 1 2497 85 is_stmt 0 view .LVU75
 286 0000 70B5     		push	{r4, r5, r6, lr}
 287              		.cfi_def_cfa_offset 16
 288              		.cfi_offset 4, -16
 289              		.cfi_offset 5, -12
 290              		.cfi_offset 6, -8
 291              		.cfi_offset 14, -4
 292              		.loc 1 2497 85 view .LVU76
 293 0002 0446     		mov	r4, r0
2498:src/keys.c    **** 	do {
 294              		.loc 1 2498 2 is_stmt 1 view .LVU77
2499:src/keys.c    **** 		for (;;) {
 295              		.loc 1 2499 3 view .LVU78
2500:src/keys.c    **** 			if (inc) {
 296              		.loc 1 2500 4 view .LVU79
2497:src/keys.c    **** 	do {
 297              		.loc 1 2497 85 is_stmt 0 view .LVU80
 298 0004 1646     		mov	r6, r2
 299              		.loc 1 2500 7 view .LVU81
 300 0006 21B9     		cbnz	r1, .L29
 301              	.LVL27:
 302              	.L26:
2501:src/keys.c    **** 				pc = do_inc(pc, 0);
2502:src/keys.c    **** 				if (PcWrapped)
2503:src/keys.c    **** 					break;
2504:src/keys.c    **** 			}
2505:src/keys.c    **** 			else
2506:src/keys.c    **** 				inc = 1;
2507:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 303              		.loc 1 2507 4 is_stmt 1 view .LVU82
 304              		.loc 1 2507 8 is_stmt 0 view .LVU83
 305 0008 3146     		mov	r1, r6
 306 000a 2046     		mov	r0, r4
 307              		.loc 1 2507 8 view .LVU84
 308 000c FFF7FEFF 		bl	is_label_or_end_at
 309              	.LVL28:
ARM GAS  /tmp/ccizbp1a.s 			page 51


 310              		.loc 1 2507 7 view .LVU85
 311 0010 B8B9     		cbnz	r0, .L28
 312              	.LVL29:
 313              	.L29:
 314              		.loc 1 2507 7 view .LVU86
 315 0012 0D4D     		ldr	r5, .L37
 316              	.L30:
2501:src/keys.c    **** 				pc = do_inc(pc, 0);
 317              		.loc 1 2501 5 is_stmt 1 view .LVU87
2501:src/keys.c    **** 				pc = do_inc(pc, 0);
 318              		.loc 1 2501 10 is_stmt 0 view .LVU88
 319 0014 2046     		mov	r0, r4
 320 0016 0021     		movs	r1, #0
 321 0018 FFF7FEFF 		bl	do_inc
 322              	.LVL30:
2502:src/keys.c    **** 					break;
 323              		.loc 1 2502 8 view .LVU89
 324 001c 2B68     		ldr	r3, [r5]
2501:src/keys.c    **** 				pc = do_inc(pc, 0);
 325              		.loc 1 2501 10 view .LVU90
 326 001e 0446     		mov	r4, r0
 327              	.LVL31:
2502:src/keys.c    **** 					break;
 328              		.loc 1 2502 5 is_stmt 1 view .LVU91
2502:src/keys.c    **** 					break;
 329              		.loc 1 2502 8 is_stmt 0 view .LVU92
 330 0020 002B     		cmp	r3, #0
 331 0022 F1D0     		beq	.L26
2508:src/keys.c    **** 				return pc;
2509:src/keys.c    **** 			}
2510:src/keys.c    **** 		}
2511:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) + 1) & 3);
 332              		.loc 1 2511 3 is_stmt 1 view .LVU93
 333              		.loc 1 2511 8 is_stmt 0 view .LVU94
 334 0024 20F47F54 		bic	r4, r0, #16320
 335 0028 24F03F04 		bic	r4, r4, #63
 336 002c 04F58044 		add	r4, r4, #16384
 337 0030 A4B2     		uxth	r4, r4
 338              		.loc 1 2511 6 view .LVU95
 339 0032 44F00104 		orr	r4, r4, #1
 340              	.LVL32:
2512:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 341              		.loc 1 2512 10 is_stmt 1 view .LVU96
 342              		.loc 1 2512 13 is_stmt 0 view .LVU97
 343 0036 2046     		mov	r0, r4
 344 0038 3146     		mov	r1, r6
 345 003a FFF7FEFF 		bl	is_label_or_end_at
 346              	.LVL33:
 347              		.loc 1 2512 2 view .LVU98
 348 003e 0028     		cmp	r0, #0
 349 0040 E8D0     		beq	.L30
 350              	.L28:
2513:src/keys.c    **** 	return pc;
2514:src/keys.c    **** }
 351              		.loc 1 2514 1 view .LVU99
 352 0042 2046     		mov	r0, r4
 353 0044 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/ccizbp1a.s 			page 52


 354              	.LVL34:
 355              	.L38:
 356              		.loc 1 2514 1 view .LVU100
 357 0046 00BF     		.align	2
 358              	.L37:
 359 0048 00000000 		.word	PcWrapped
 360              		.cfi_endproc
 361              	.LFE50:
 363              		.section	.text.init_cat,"ax",%progbits
 364              		.align	1
 365              		.p2align 2,,3
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu fpv4-sp-d16
 371              	init_cat:
 372              	.LVL35:
 373              	.LFB12:
 514:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 374              		.loc 1 514 43 is_stmt 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 515:src/keys.c    **** 		// Save last catalogue for a later restore
 378              		.loc 1 515 2 view .LVU102
 514:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 379              		.loc 1 514 43 is_stmt 0 view .LVU103
 380 0000 38B5     		push	{r3, r4, r5, lr}
 381              		.cfi_def_cfa_offset 16
 382              		.cfi_offset 3, -16
 383              		.cfi_offset 4, -12
 384              		.cfi_offset 5, -8
 385              		.cfi_offset 14, -4
 515:src/keys.c    **** 		// Save last catalogue for a later restore
 386              		.loc 1 515 37 view .LVU104
 387 0002 3A4C     		ldr	r4, .L58
 515:src/keys.c    **** 		// Save last catalogue for a later restore
 388              		.loc 1 515 5 view .LVU105
 389 0004 0546     		mov	r5, r0
 390 0006 D8B9     		cbnz	r0, .L40
 515:src/keys.c    **** 		// Save last catalogue for a later restore
 391              		.loc 1 515 37 discriminator 1 view .LVU106
 392 0008 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 515:src/keys.c    **** 		// Save last catalogue for a later restore
 393              		.loc 1 515 28 discriminator 1 view .LVU107
 394 000a 43B1     		cbz	r3, .L41
 517:src/keys.c    **** 		CmdLineLength = 0;
 395              		.loc 1 517 3 is_stmt 1 view .LVU108
 517:src/keys.c    **** 		CmdLineLength = 0;
 396              		.loc 1 517 18 is_stmt 0 view .LVU109
 397 000c 384A     		ldr	r2, .L58+4
 518:src/keys.c    **** 	}
 398              		.loc 1 518 17 view .LVU110
 399 000e 2077     		strb	r0, [r4, #28]
 517:src/keys.c    **** 		CmdLineLength = 0;
 400              		.loc 1 517 18 view .LVU111
 401 0010 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccizbp1a.s 			page 53


 402 0012 92F8DC17 		ldrb	r1, [r2, #2012]	@ zero_extendqisi2
 403 0016 63F30401 		bfi	r1, r3, #0, #5
 404 001a 82F8DC17 		strb	r1, [r2, #2012]
 518:src/keys.c    **** 	}
 405              		.loc 1 518 3 is_stmt 1 view .LVU112
 406              	.L41:
 520:src/keys.c    **** 
 407              		.loc 1 520 2 view .LVU113
 408 001e FFF7FEFF 		bl	process_cmdline
 409              	.LVL36:
 522:src/keys.c    **** 	State2.registerlist = 0;
 410              		.loc 1 522 2 view .LVU114
 523:src/keys.c    **** 	State2.status = 0;
 411              		.loc 1 523 2 view .LVU115
 524:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 412              		.loc 1 524 2 view .LVU116
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 413              		.loc 1 549 16 is_stmt 0 view .LVU117
 414 0022 6369     		ldr	r3, [r4, #20]
 415 0024 23F04063 		bic	r3, r3, #201326592
 416 0028 23F40073 		bic	r3, r3, #512
 524:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 417              		.loc 1 524 16 view .LVU118
 418 002c 0022     		movs	r2, #0
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 419              		.loc 1 549 16 view .LVU119
 420 002e 6361     		str	r3, [r4, #20]
 524:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 421              		.loc 1 524 16 view .LVU120
 422 0030 2273     		strb	r2, [r4, #12]
 525:src/keys.c    **** 
 423              		.loc 1 525 2 is_stmt 1 view .LVU121
 527:src/keys.c    **** 	case CATALOGUE_LABELS:
 424              		.loc 1 527 2 view .LVU122
 548:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 425              		.loc 1 548 3 view .LVU123
 548:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 426              		.loc 1 548 20 is_stmt 0 view .LVU124
 427 0032 A273     		strb	r2, [r4, #14]
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 428              		.loc 1 549 3 is_stmt 1 view .LVU125
 550:src/keys.c    **** 			// Different catalogue, reset position
 429              		.loc 1 550 3 view .LVU126
 555:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 430              		.loc 1 555 2 view .LVU127
 431              	.LBB232:
 432              	.LBI232:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 433              		.loc 1 102 13 view .LVU128
 434              	.LBE232:
 103:src/keys.c    **** }
 435              		.loc 1 103 2 view .LVU129
 436              	.LVL37:
 437              	.LBB249:
 438              	.LBB233:
 439              	.LBI233:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
ARM GAS  /tmp/ccizbp1a.s 			page 54


 440              		.loc 1 92 20 view .LVU130
 441              	.LBB234:
  93:src/keys.c    **** 	State2.shifts = shift;
 442              		.loc 1 93 2 view .LVU131
 443              	.LBB235:
 444              	.LBI235:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 445              		.loc 1 84 13 view .LVU132
 446              	.LBB236:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 447              		.loc 1 85 2 view .LVU133
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 448              		.loc 1 85 18 is_stmt 0 view .LVU134
 449 0034 FFF7FEFF 		bl	shift_down
 450              	.LVL38:
  86:src/keys.c    **** }
 451              		.loc 1 86 2 is_stmt 1 view .LVU135
 452              	.LBE236:
 453              	.LBE235:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 454              		.loc 1 94 2 view .LVU136
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 455              		.loc 1 94 16 is_stmt 0 view .LVU137
 456 0038 0023     		movs	r3, #0
 457 003a 2374     		strb	r3, [r4, #16]
  95:src/keys.c    **** 	return r;
 458              		.loc 1 95 2 is_stmt 1 view .LVU138
  95:src/keys.c    **** 	return r;
 459              		.loc 1 95 19 is_stmt 0 view .LVU139
 460 003c 6373     		strb	r3, [r4, #13]
  96:src/keys.c    **** }
 461              		.loc 1 96 2 is_stmt 1 view .LVU140
 462              	.LVL39:
  96:src/keys.c    **** }
 463              		.loc 1 96 2 is_stmt 0 view .LVU141
 464              	.LBE234:
 465              	.LBE233:
 466              	.LBE249:
 559:src/keys.c    **** 
 467              		.loc 1 559 1 view .LVU142
 468 003e 38BD     		pop	{r3, r4, r5, pc}
 469              	.LVL40:
 470              	.L40:
 520:src/keys.c    **** 
 471              		.loc 1 520 2 is_stmt 1 view .LVU143
 472 0040 FFF7FEFF 		bl	process_cmdline
 473              	.LVL41:
 522:src/keys.c    **** 	State2.registerlist = 0;
 474              		.loc 1 522 2 view .LVU144
 523:src/keys.c    **** 	State2.status = 0;
 475              		.loc 1 523 2 view .LVU145
 522:src/keys.c    **** 	State2.registerlist = 0;
 476              		.loc 1 522 19 is_stmt 0 view .LVU146
 477 0044 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 524:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 478              		.loc 1 524 16 view .LVU147
 479 0046 0022     		movs	r2, #0
ARM GAS  /tmp/ccizbp1a.s 			page 55


 522:src/keys.c    **** 	State2.registerlist = 0;
 480              		.loc 1 522 19 view .LVU148
 481 0048 23F00C03 		bic	r3, r3, #12
 527:src/keys.c    **** 	case CATALOGUE_LABELS:
 482              		.loc 1 527 2 view .LVU149
 483 004c 162D     		cmp	r5, #22
 522:src/keys.c    **** 	State2.registerlist = 0;
 484              		.loc 1 522 19 view .LVU150
 485 004e E375     		strb	r3, [r4, #23]
 524:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 486              		.loc 1 524 2 is_stmt 1 view .LVU151
 524:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 487              		.loc 1 524 16 is_stmt 0 view .LVU152
 488 0050 2273     		strb	r2, [r4, #12]
 525:src/keys.c    **** 
 489              		.loc 1 525 2 is_stmt 1 view .LVU153
 525:src/keys.c    **** 
 490              		.loc 1 525 19 is_stmt 0 view .LVU154
 491 0052 A273     		strb	r2, [r4, #14]
 527:src/keys.c    **** 	case CATALOGUE_LABELS:
 492              		.loc 1 527 2 is_stmt 1 view .LVU155
 493 0054 1DD0     		beq	.L42
 494 0056 172D     		cmp	r5, #23
 495 0058 07D1     		bne	.L56
 543:src/keys.c    **** 		break;
 496              		.loc 1 543 3 view .LVU156
 543:src/keys.c    **** 		break;
 497              		.loc 1 543 17 is_stmt 0 view .LVU157
 498 005a 0123     		movs	r3, #1
 499 005c 2373     		strb	r3, [r4, #12]
 544:src/keys.c    **** 
 500              		.loc 1 544 3 is_stmt 1 view .LVU158
 555:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 501              		.loc 1 555 2 view .LVU159
 502              	.LBB250:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 503              		.loc 1 102 13 view .LVU160
 504              	.LBE250:
 103:src/keys.c    **** }
 505              		.loc 1 103 2 view .LVU161
 506              	.LVL42:
 507              	.LBB251:
 508              	.LBB246:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 509              		.loc 1 92 20 view .LVU162
 510              	.LBB243:
  93:src/keys.c    **** 	State2.shifts = shift;
 511              		.loc 1 93 2 view .LVU163
 512              	.LBB240:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 513              		.loc 1 84 13 view .LVU164
 514              	.LBB237:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 515              		.loc 1 85 2 view .LVU165
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 516              		.loc 1 85 18 is_stmt 0 view .LVU166
 517 005e FFF7FEFF 		bl	shift_down
ARM GAS  /tmp/ccizbp1a.s 			page 56


 518              	.LVL43:
  86:src/keys.c    **** }
 519              		.loc 1 86 2 is_stmt 1 view .LVU167
 520              	.LBE237:
 521              	.LBE240:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 522              		.loc 1 94 2 view .LVU168
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 523              		.loc 1 94 16 is_stmt 0 view .LVU169
 524 0062 0023     		movs	r3, #0
 525 0064 2374     		strb	r3, [r4, #16]
  95:src/keys.c    **** 	return r;
 526              		.loc 1 95 2 is_stmt 1 view .LVU170
  95:src/keys.c    **** 	return r;
 527              		.loc 1 95 19 is_stmt 0 view .LVU171
 528 0066 6373     		strb	r3, [r4, #13]
  96:src/keys.c    **** }
 529              		.loc 1 96 2 is_stmt 1 view .LVU172
 530              	.LVL44:
  96:src/keys.c    **** }
 531              		.loc 1 96 2 is_stmt 0 view .LVU173
 532              	.LBE243:
 533              	.LBE246:
 534              	.LBE251:
 559:src/keys.c    **** 
 535              		.loc 1 559 1 view .LVU174
 536 0068 38BD     		pop	{r3, r4, r5, pc}
 537              	.L56:
 527:src/keys.c    **** 	case CATALOGUE_LABELS:
 538              		.loc 1 527 2 view .LVU175
 539 006a 152D     		cmp	r5, #21
 540 006c 1ED1     		bne	.L44
 530:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 541              		.loc 1 530 3 is_stmt 1 view .LVU176
 531:src/keys.c    **** 		break;
 542              		.loc 1 531 41 is_stmt 0 view .LVU177
 543 006e 2049     		ldr	r1, .L58+4
 530:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 544              		.loc 1 530 20 view .LVU178
 545 0070 DBB2     		uxtb	r3, r3
 531:src/keys.c    **** 		break;
 546              		.loc 1 531 41 view .LVU179
 547 0072 0968     		ldr	r1, [r1]
 530:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 548              		.loc 1 530 20 view .LVU180
 549 0074 43F00403 		orr	r3, r3, #4
 550 0078 E375     		strb	r3, [r4, #23]
 531:src/keys.c    **** 		break;
 551              		.loc 1 531 3 is_stmt 1 view .LVU181
 531:src/keys.c    **** 		break;
 552              		.loc 1 531 19 is_stmt 0 view .LVU182
 553 007a B1F8EC07 		ldrh	r0, [r1, #2028]
 554 007e 1146     		mov	r1, r2
 555 0080 FFF7FEFF 		bl	advance_to_next_label
 556              	.LVL45:
 531:src/keys.c    **** 		break;
 557              		.loc 1 531 17 view .LVU183
ARM GAS  /tmp/ccizbp1a.s 			page 57


 558 0084 2081     		strh	r0, [r4, #8]	@ movhi
 532:src/keys.c    **** 	
 559              		.loc 1 532 3 is_stmt 1 view .LVU184
 560              	.L45:
 555:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 561              		.loc 1 555 2 view .LVU185
 562              	.LBB252:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 563              		.loc 1 102 13 view .LVU186
 564              	.LBE252:
 103:src/keys.c    **** }
 565              		.loc 1 103 2 view .LVU187
 566              	.LVL46:
 567              	.LBB253:
 568              	.LBB247:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 569              		.loc 1 92 20 view .LVU188
 570              	.LBB244:
  93:src/keys.c    **** 	State2.shifts = shift;
 571              		.loc 1 93 2 view .LVU189
 572              	.LBB241:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 573              		.loc 1 84 13 view .LVU190
 574              	.LBB238:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 575              		.loc 1 85 2 view .LVU191
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 576              		.loc 1 85 18 is_stmt 0 view .LVU192
 577 0086 FFF7FEFF 		bl	shift_down
 578              	.LVL47:
  86:src/keys.c    **** }
 579              		.loc 1 86 2 is_stmt 1 view .LVU193
 580              	.LBE238:
 581              	.LBE241:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 582              		.loc 1 94 2 view .LVU194
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 583              		.loc 1 94 16 is_stmt 0 view .LVU195
 584 008a 0023     		movs	r3, #0
 585 008c 2374     		strb	r3, [r4, #16]
  95:src/keys.c    **** 	return r;
 586              		.loc 1 95 2 is_stmt 1 view .LVU196
  95:src/keys.c    **** 	return r;
 587              		.loc 1 95 19 is_stmt 0 view .LVU197
 588 008e 6373     		strb	r3, [r4, #13]
  96:src/keys.c    **** }
 589              		.loc 1 96 2 is_stmt 1 view .LVU198
 590              	.LVL48:
  96:src/keys.c    **** }
 591              		.loc 1 96 2 is_stmt 0 view .LVU199
 592              	.LBE244:
 593              	.LBE247:
 594              	.LBE253:
 559:src/keys.c    **** 
 595              		.loc 1 559 1 view .LVU200
 596 0090 38BD     		pop	{r3, r4, r5, pc}
 597              	.L42:
ARM GAS  /tmp/ccizbp1a.s 			page 58


 536:src/keys.c    **** 		State2.digval = regX_idx;
 598              		.loc 1 536 3 is_stmt 1 view .LVU201
 536:src/keys.c    **** 		State2.digval = regX_idx;
 599              		.loc 1 536 23 is_stmt 0 view .LVU202
 600 0092 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 538:src/keys.c    **** 		break;
 601              		.loc 1 538 18 view .LVU203
 602 0094 A272     		strb	r2, [r4, #10]
 536:src/keys.c    **** 		State2.digval = regX_idx;
 603              		.loc 1 536 23 view .LVU204
 604 0096 43F00803 		orr	r3, r3, #8
 537:src/keys.c    **** 		State2.digval2 = 0;
 605              		.loc 1 537 17 view .LVU205
 606 009a 6422     		movs	r2, #100
 536:src/keys.c    **** 		State2.digval = regX_idx;
 607              		.loc 1 536 23 view .LVU206
 608 009c E375     		strb	r3, [r4, #23]
 537:src/keys.c    **** 		State2.digval2 = 0;
 609              		.loc 1 537 3 is_stmt 1 view .LVU207
 537:src/keys.c    **** 		State2.digval2 = 0;
 610              		.loc 1 537 17 is_stmt 0 view .LVU208
 611 009e 2281     		strh	r2, [r4, #8]	@ movhi
 538:src/keys.c    **** 		break;
 612              		.loc 1 538 3 is_stmt 1 view .LVU209
 539:src/keys.c    **** 
 613              		.loc 1 539 3 view .LVU210
 555:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 614              		.loc 1 555 2 view .LVU211
 615              	.LBB254:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 616              		.loc 1 102 13 view .LVU212
 617              	.LBE254:
 103:src/keys.c    **** }
 618              		.loc 1 103 2 view .LVU213
 619              	.LVL49:
 620              	.LBB255:
 621              	.LBB248:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 622              		.loc 1 92 20 view .LVU214
 623              	.LBB245:
  93:src/keys.c    **** 	State2.shifts = shift;
 624              		.loc 1 93 2 view .LVU215
 625              	.LBB242:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 626              		.loc 1 84 13 view .LVU216
 627              	.LBB239:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 628              		.loc 1 85 2 view .LVU217
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 629              		.loc 1 85 18 is_stmt 0 view .LVU218
 630 00a0 FFF7FEFF 		bl	shift_down
 631              	.LVL50:
  86:src/keys.c    **** }
 632              		.loc 1 86 2 is_stmt 1 view .LVU219
 633              	.LBE239:
 634              	.LBE242:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
ARM GAS  /tmp/ccizbp1a.s 			page 59


 635              		.loc 1 94 2 view .LVU220
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 636              		.loc 1 94 16 is_stmt 0 view .LVU221
 637 00a4 0023     		movs	r3, #0
 638 00a6 2374     		strb	r3, [r4, #16]
  95:src/keys.c    **** 	return r;
 639              		.loc 1 95 2 is_stmt 1 view .LVU222
  95:src/keys.c    **** 	return r;
 640              		.loc 1 95 19 is_stmt 0 view .LVU223
 641 00a8 6373     		strb	r3, [r4, #13]
  96:src/keys.c    **** }
 642              		.loc 1 96 2 is_stmt 1 view .LVU224
 643              	.LVL51:
  96:src/keys.c    **** }
 644              		.loc 1 96 2 is_stmt 0 view .LVU225
 645              	.LBE245:
 646              	.LBE248:
 647              	.LBE255:
 559:src/keys.c    **** 
 648              		.loc 1 559 1 view .LVU226
 649 00aa 38BD     		pop	{r3, r4, r5, pc}
 650              	.L44:
 548:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 651              		.loc 1 548 3 is_stmt 1 view .LVU227
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 652              		.loc 1 549 44 is_stmt 0 view .LVU228
 653 00ac 022D     		cmp	r5, #2
 548:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 654              		.loc 1 548 20 view .LVU229
 655 00ae A573     		strb	r5, [r4, #14]
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 656              		.loc 1 549 3 is_stmt 1 view .LVU230
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 657              		.loc 1 549 44 is_stmt 0 view .LVU231
 658 00b0 12D1     		bne	.L57
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 659              		.loc 1 549 16 view .LVU232
 660 00b2 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 661 00b4 43F00203 		orr	r3, r3, #2
 662 00b8 6375     		strb	r3, [r4, #21]
 550:src/keys.c    **** 			// Different catalogue, reset position
 663              		.loc 1 550 3 is_stmt 1 view .LVU233
 664              	.L49:
 550:src/keys.c    **** 			// Different catalogue, reset position
 665              		.loc 1 550 32 is_stmt 0 discriminator 1 view .LVU234
 666 00ba 0D4B     		ldr	r3, .L58+4
 667 00bc 1A68     		ldr	r2, [r3]
 550:src/keys.c    **** 			// Different catalogue, reset position
 668              		.loc 1 550 37 discriminator 1 view .LVU235
 669 00be 92F8DC37 		ldrb	r3, [r2, #2012]	@ zero_extendqisi2
 550:src/keys.c    **** 			// Different catalogue, reset position
 670              		.loc 1 550 29 discriminator 1 view .LVU236
 671 00c2 03F01F03 		and	r3, r3, #31
 672 00c6 AB42     		cmp	r3, r5
 673 00c8 DDD0     		beq	.L45
 552:src/keys.c    **** 		}
 674              		.loc 1 552 4 is_stmt 1 view .LVU237
ARM GAS  /tmp/ccizbp1a.s 			page 60


 552:src/keys.c    **** 		}
 675              		.loc 1 552 17 is_stmt 0 view .LVU238
 676 00ca B2F8DC37 		ldrh	r3, [r2, #2012]
 677 00ce 6FF34B13 		bfc	r3, #5, #7
 678 00d2 A2F8DC37 		strh	r3, [r2, #2012]	@ movhi
 679 00d6 D6E7     		b	.L45
 680              	.L57:
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 681              		.loc 1 549 44 view .LVU239
 682 00d8 A5F11101 		sub	r1, r5, #17
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 683              		.loc 1 549 16 view .LVU240
 684 00dc 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 685              		.loc 1 549 44 view .LVU241
 686 00de 4A42     		rsbs	r2, r1, #0
 687 00e0 4A41     		adcs	r2, r2, r1
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 688              		.loc 1 549 16 view .LVU242
 689 00e2 62F34103 		bfi	r3, r2, #1, #1
 690 00e6 6375     		strb	r3, [r4, #21]
 550:src/keys.c    **** 			// Different catalogue, reset position
 691              		.loc 1 550 3 is_stmt 1 view .LVU243
 692 00e8 E7E7     		b	.L49
 693              	.L59:
 694 00ea 00BF     		.align	2
 695              	.L58:
 696 00ec 00000000 		.word	StateWhileOn
 697 00f0 00000000 		.word	main_ram
 698              		.cfi_endproc
 699              	.LFE12:
 701              		.section	.text.advance_to_previous_label,"ax",%progbits
 702              		.align	1
 703              		.p2align 2,,3
 704              		.syntax unified
 705              		.thumb
 706              		.thumb_func
 707              		.fpu fpv4-sp-d16
 709              	advance_to_previous_label:
 710              	.LVL52:
 711              	.LFB51:
2515:src/keys.c    **** 
2516:src/keys.c    **** static unsigned int advance_to_previous_label(unsigned int pc, int search_end) {
 712              		.loc 1 2516 80 view -0
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 0
 715              		@ frame_needed = 0, uses_anonymous_args = 0
 716              		.loc 1 2516 80 is_stmt 0 view .LVU245
 717 0000 70B5     		push	{r4, r5, r6, lr}
 718              		.cfi_def_cfa_offset 16
 719              		.cfi_offset 4, -16
 720              		.cfi_offset 5, -12
 721              		.cfi_offset 6, -8
 722              		.cfi_offset 14, -4
 723 0002 124E     		ldr	r6, .L69
 724              		.loc 1 2516 80 view .LVU246
 725 0004 0446     		mov	r4, r0
ARM GAS  /tmp/ccizbp1a.s 			page 61


 726 0006 0D46     		mov	r5, r1
 727              	.LVL53:
 728              	.L61:
2517:src/keys.c    **** 	do {
 729              		.loc 1 2517 2 is_stmt 1 view .LVU247
2518:src/keys.c    **** 		for (;;) {
 730              		.loc 1 2518 3 view .LVU248
2519:src/keys.c    **** 			pc = do_dec(pc, 0);
 731              		.loc 1 2519 4 view .LVU249
 732              		.loc 1 2519 9 is_stmt 0 view .LVU250
 733 0008 2046     		mov	r0, r4
 734 000a 0021     		movs	r1, #0
 735 000c FFF7FEFF 		bl	do_dec
 736              	.LVL54:
2520:src/keys.c    **** 			if (PcWrapped)
2521:src/keys.c    **** 				break;
2522:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 737              		.loc 1 2522 4 is_stmt 1 view .LVU251
2523:src/keys.c    **** 				return pc;
2524:src/keys.c    **** 			}
2525:src/keys.c    **** 		}
2526:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) - 1) & 3);
 738              		.loc 1 2526 3 view .LVU252
 739              		.loc 1 2526 8 is_stmt 0 view .LVU253
 740 0010 20F47F53 		bic	r3, r0, #16320
 741 0014 23F03F03 		bic	r3, r3, #63
2520:src/keys.c    **** 			if (PcWrapped)
 742              		.loc 1 2520 7 view .LVU254
 743 0018 3268     		ldr	r2, [r6]
 744              		.loc 1 2526 8 view .LVU255
 745 001a A3F58043 		sub	r3, r3, #16384
2527:src/keys.c    **** 		pc = do_dec(pc, 0);
 746              		.loc 1 2527 8 view .LVU256
 747 001e 0021     		movs	r1, #0
2519:src/keys.c    **** 			if (PcWrapped)
 748              		.loc 1 2519 9 view .LVU257
 749 0020 0446     		mov	r4, r0
 750              	.LVL55:
2520:src/keys.c    **** 				break;
 751              		.loc 1 2520 4 is_stmt 1 view .LVU258
2526:src/keys.c    **** 		pc = do_dec(pc, 0);
 752              		.loc 1 2526 8 is_stmt 0 view .LVU259
 753 0022 9BB2     		uxth	r3, r3
 754              	.LVL56:
 755              		.loc 1 2527 3 is_stmt 1 view .LVU260
2520:src/keys.c    **** 				break;
 756              		.loc 1 2520 7 is_stmt 0 view .LVU261
 757 0024 32B9     		cbnz	r2, .L62
2522:src/keys.c    **** 				return pc;
 758              		.loc 1 2522 8 view .LVU262
 759 0026 2946     		mov	r1, r5
 760 0028 FFF7FEFF 		bl	is_label_or_end_at
 761              	.LVL57:
2522:src/keys.c    **** 				return pc;
 762              		.loc 1 2522 7 view .LVU263
 763 002c 0028     		cmp	r0, #0
 764 002e EBD0     		beq	.L61
ARM GAS  /tmp/ccizbp1a.s 			page 62


2528:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
2529:src/keys.c    **** 	return pc;
2530:src/keys.c    **** }
 765              		.loc 1 2530 1 view .LVU264
 766 0030 2046     		mov	r0, r4
 767 0032 70BD     		pop	{r4, r5, r6, pc}
 768              	.LVL58:
 769              	.L62:
2527:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 770              		.loc 1 2527 8 view .LVU265
 771 0034 43F00100 		orr	r0, r3, #1
 772 0038 FFF7FEFF 		bl	do_dec
 773              	.LVL59:
2528:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 774              		.loc 1 2528 13 view .LVU266
 775 003c 2946     		mov	r1, r5
2527:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 776              		.loc 1 2527 8 view .LVU267
 777 003e 0446     		mov	r4, r0
 778              	.LVL60:
2528:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 779              		.loc 1 2528 10 is_stmt 1 view .LVU268
2528:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 780              		.loc 1 2528 13 is_stmt 0 view .LVU269
 781 0040 FFF7FEFF 		bl	is_label_or_end_at
 782              	.LVL61:
2528:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 783              		.loc 1 2528 2 view .LVU270
 784 0044 0028     		cmp	r0, #0
 785 0046 DFD0     		beq	.L61
 786              		.loc 1 2530 1 view .LVU271
 787 0048 2046     		mov	r0, r4
 788 004a 70BD     		pop	{r4, r5, r6, pc}
 789              	.LVL62:
 790              	.L70:
 791              		.loc 1 2530 1 view .LVU272
 792              		.align	2
 793              	.L69:
 794 004c 00000000 		.word	PcWrapped
 795              		.cfi_endproc
 796              	.LFE51:
 798              		.section	.text.check_confirm.part.0,"ax",%progbits
 799              		.align	1
 800              		.p2align 2,,3
 801              		.syntax unified
 802              		.thumb
 803              		.thumb_func
 804              		.fpu fpv4-sp-d16
 806              	check_confirm.part.0:
 807              	.LVL63:
 808              	.LFB59:
 619:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 809              		.loc 1 619 12 is_stmt 1 view -0
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 0
 812              		@ frame_needed = 0, uses_anonymous_args = 0
 813              		@ link register save eliminated.
ARM GAS  /tmp/ccizbp1a.s 			page 63


 814              	.LBB256:
 621:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 815              		.loc 1 621 3 view .LVU274
 622:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 816              		.loc 1 622 3 view .LVU275
 621:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 817              		.loc 1 621 13 is_stmt 0 view .LVU276
 818 0000 C3B2     		uxtb	r3, r0
 622:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 819              		.loc 1 622 25 view .LVU277
 820 0002 A3F14102 		sub	r2, r3, #65
 622:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 821              		.loc 1 622 6 view .LVU278
 822 0006 032A     		cmp	r2, #3
 823 0008 06D9     		bls	.L74
 630:src/keys.c    **** #endif
 824              		.loc 1 630 7 is_stmt 1 view .LVU279
 630:src/keys.c    **** #endif
 825              		.loc 1 630 29 is_stmt 0 view .LVU280
 826 000a AD3B     		subs	r3, r3, #173
 630:src/keys.c    **** #endif
 827              		.loc 1 630 10 view .LVU281
 828 000c 052B     		cmp	r3, #5
 829 000e 02D8     		bhi	.L73
 640:src/keys.c    **** 		}
 830              		.loc 1 640 4 is_stmt 1 view .LVU282
 640:src/keys.c    **** 		}
 831              		.loc 1 640 20 is_stmt 0 view .LVU283
 832 0010 054B     		ldr	r3, .L75
 833 0012 0122     		movs	r2, #1
 834 0014 1A60     		str	r2, [r3]
 835              	.L73:
 836              	.LBE256:
 644:src/keys.c    **** 
 837              		.loc 1 644 1 view .LVU284
 838 0016 7047     		bx	lr
 839              	.L74:
 840              	.LBB257:
 623:src/keys.c    **** 			return STATE_UNFINISHED;
 841              		.loc 1 623 4 is_stmt 1 view .LVU285
 623:src/keys.c    **** 			return STATE_UNFINISHED;
 842              		.loc 1 623 19 is_stmt 0 view .LVU286
 843 0018 044B     		ldr	r3, .L75+4
 844 001a 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
 623:src/keys.c    **** 			return STATE_UNFINISHED;
 845              		.loc 1 623 35 view .LVU287
 846 001c 4038     		subs	r0, r0, #64
 847              	.LVL64:
 623:src/keys.c    **** 			return STATE_UNFINISHED;
 848              		.loc 1 623 19 view .LVU288
 849 001e 60F30202 		bfi	r2, r0, #0, #3
 850 0022 1A75     		strb	r2, [r3, #20]
 624:src/keys.c    **** 		}
 851              		.loc 1 624 4 is_stmt 1 view .LVU289
 624:src/keys.c    **** 		}
 852              		.loc 1 624 11 is_stmt 0 view .LVU290
 853 0024 3320     		movs	r0, #51
ARM GAS  /tmp/ccizbp1a.s 			page 64


 854              	.LVL65:
 624:src/keys.c    **** 		}
 855              		.loc 1 624 11 view .LVU291
 856 0026 7047     		bx	lr
 857              	.L76:
 858              		.align	2
 859              	.L75:
 860 0028 00000000 		.word	NonProgrammable
 861 002c 00000000 		.word	StateWhileOn
 862              	.LBE257:
 863              		.cfi_endproc
 864              	.LFE59:
 866              		.section	.text.init_arg.part.0,"ax",%progbits
 867              		.align	1
 868              		.p2align 2,,3
 869              		.syntax unified
 870              		.thumb
 871              		.thumb_func
 872              		.fpu fpv4-sp-d16
 874              	init_arg.part.0:
 875              	.LVL66:
 876              	.LFB61:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 877              		.loc 1 501 13 is_stmt 1 view -0
 878              		.cfi_startproc
 879              		@ args = 0, pretend = 0, frame = 0
 880              		@ frame_needed = 0, uses_anonymous_args = 0
 881              		@ link register save eliminated.
 504:src/keys.c    **** 	State2.ind = 0;
 882              		.loc 1 504 2 view .LVU293
 504:src/keys.c    **** 	State2.ind = 0;
 883              		.loc 1 504 10 is_stmt 0 view .LVU294
 884 0000 084B     		ldr	r3, .L78
 509:src/keys.c    **** 	State2.local = 0;
 885              		.loc 1 509 13 view .LVU295
 886 0002 5969     		ldr	r1, [r3, #20]
 504:src/keys.c    **** 	State2.ind = 0;
 887              		.loc 1 504 10 view .LVU296
 888 0004 D877     		strb	r0, [r3, #31]
 505:src/keys.c    **** 	State2.digval = 0;
 889              		.loc 1 505 2 is_stmt 1 view .LVU297
 506:src/keys.c    **** 	State2.numdigit = 0;
 890              		.loc 1 506 2 view .LVU298
 509:src/keys.c    **** 	State2.local = 0;
 891              		.loc 1 509 13 is_stmt 0 view .LVU299
 892 0006 21F40F11 		bic	r1, r1, #2342912
 893 000a 8628     		cmp	r0, #134
 894 000c 0CBF     		ite	eq
 895 000e 4FF40812 		moveq	r2, #2228224
 896 0012 4FF40012 		movne	r2, #2097152
 897 0016 0A43     		orrs	r2, r2, r1
 506:src/keys.c    **** 	State2.numdigit = 0;
 898              		.loc 1 506 16 view .LVU300
 899 0018 0021     		movs	r1, #0
 509:src/keys.c    **** 	State2.local = 0;
 900              		.loc 1 509 13 view .LVU301
 901 001a 5A61     		str	r2, [r3, #20]
ARM GAS  /tmp/ccizbp1a.s 			page 65


 506:src/keys.c    **** 	State2.numdigit = 0;
 902              		.loc 1 506 16 view .LVU302
 903 001c 1981     		strh	r1, [r3, #8]	@ movhi
 507:src/keys.c    **** 	State2.rarg = 1;
 904              		.loc 1 507 2 is_stmt 1 view .LVU303
 507:src/keys.c    **** 	State2.rarg = 1;
 905              		.loc 1 507 18 is_stmt 0 view .LVU304
 906 001e D972     		strb	r1, [r3, #11]
 508:src/keys.c    **** 	State2.dot = 0;
 907              		.loc 1 508 2 is_stmt 1 view .LVU305
 509:src/keys.c    **** 	State2.local = 0;
 908              		.loc 1 509 2 view .LVU306
 510:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 909              		.loc 1 510 2 view .LVU307
 511:src/keys.c    **** }
 910              		.loc 1 511 2 view .LVU308
 512:src/keys.c    **** 
 911              		.loc 1 512 1 is_stmt 0 view .LVU309
 912 0020 7047     		bx	lr
 913              	.L79:
 914 0022 00BF     		.align	2
 915              	.L78:
 916 0024 00000000 		.word	StateWhileOn
 917              		.cfi_endproc
 918              	.LFE61:
 920              		.section	.text.reset_arg,"ax",%progbits
 921              		.align	1
 922              		.p2align 2,,3
 923              		.syntax unified
 924              		.thumb
 925              		.thumb_func
 926              		.fpu fpv4-sp-d16
 928              	reset_arg:
 929              	.LFB29:
1484:src/keys.c    **** 	init_arg((enum rarg) 0);
 930              		.loc 1 1484 29 is_stmt 1 view -0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 0
 933              		@ frame_needed = 0, uses_anonymous_args = 0
1485:src/keys.c    **** 	State2.rarg = 0;
 934              		.loc 1 1485 2 view .LVU311
 935              	.LVL67:
 936              	.LBB258:
 937              	.LBI258:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 938              		.loc 1 501 13 view .LVU312
 939              	.LBB259:
 502:src/keys.c    **** 		return;
 940              		.loc 1 502 2 view .LVU313
 941              	.LBE259:
 942              	.LBE258:
1484:src/keys.c    **** 	init_arg((enum rarg) 0);
 943              		.loc 1 1484 29 is_stmt 0 view .LVU314
 944 0000 08B5     		push	{r3, lr}
 945              		.cfi_def_cfa_offset 8
 946              		.cfi_offset 3, -8
 947              		.cfi_offset 14, -4
ARM GAS  /tmp/ccizbp1a.s 			page 66


 948              	.LBB261:
 949              	.LBB260:
 502:src/keys.c    **** 		return;
 950              		.loc 1 502 6 view .LVU315
 951 0002 FFF7FEFF 		bl	is_bad_cmdline
 952              	.LVL68:
 502:src/keys.c    **** 		return;
 953              		.loc 1 502 5 view .LVU316
 954 0006 08B9     		cbnz	r0, .L81
 955 0008 FFF7FEFF 		bl	init_arg.part.0
 956              	.LVL69:
 957              	.L81:
 502:src/keys.c    **** 		return;
 958              		.loc 1 502 5 view .LVU317
 959              	.LBE260:
 960              	.LBE261:
1486:src/keys.c    **** }
 961              		.loc 1 1486 2 is_stmt 1 view .LVU318
1486:src/keys.c    **** }
 962              		.loc 1 1486 14 is_stmt 0 view .LVU319
 963 000c 024B     		ldr	r3, .L83
 964 000e 9A7D     		ldrb	r2, [r3, #22]	@ zero_extendqisi2
 965 0010 6FF34512 		bfc	r2, #5, #1
 966 0014 9A75     		strb	r2, [r3, #22]
1487:src/keys.c    **** 
 967              		.loc 1 1487 1 view .LVU320
 968 0016 08BD     		pop	{r3, pc}
 969              	.L84:
 970              		.align	2
 971              	.L83:
 972 0018 00000000 		.word	StateWhileOn
 973              		.cfi_endproc
 974              	.LFE29:
 976              		.section	.text.arg_eval,"ax",%progbits
 977              		.align	1
 978              		.p2align 2,,3
 979              		.syntax unified
 980              		.thumb
 981              		.thumb_func
 982              		.fpu fpv4-sp-d16
 984              	arg_eval:
 985              	.LVL70:
 986              	.LFB30:
1489:src/keys.c    **** 	const unsigned int base = CmdBase;
 987              		.loc 1 1489 39 is_stmt 1 view -0
 988              		.cfi_startproc
 989              		@ args = 0, pretend = 0, frame = 0
 990              		@ frame_needed = 0, uses_anonymous_args = 0
1490:src/keys.c    **** 	int r = RARG(base, val 
 991              		.loc 1 1490 2 view .LVU322
1490:src/keys.c    **** 	int r = RARG(base, val 
 992              		.loc 1 1490 28 is_stmt 0 view .LVU323
 993 0000 1C4B     		ldr	r3, .L106
1489:src/keys.c    **** 	const unsigned int base = CmdBase;
 994              		.loc 1 1489 39 view .LVU324
 995 0002 70B5     		push	{r4, r5, r6, lr}
 996              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccizbp1a.s 			page 67


 997              		.cfi_offset 4, -16
 998              		.cfi_offset 5, -12
 999              		.cfi_offset 6, -8
 1000              		.cfi_offset 14, -4
1491:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 1001              		.loc 1 1491 10 view .LVU325
 1002 0004 9D7D     		ldrb	r5, [r3, #22]	@ zero_extendqisi2
 1003 0006 597D     		ldrb	r1, [r3, #21]	@ zero_extendqisi2
1490:src/keys.c    **** 	int r = RARG(base, val 
 1004              		.loc 1 1490 21 view .LVU326
 1005 0008 DA7F     		ldrb	r2, [r3, #31]	@ zero_extendqisi2
 1006              	.LVL71:
1491:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 1007              		.loc 1 1491 2 is_stmt 1 view .LVU327
1491:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 1008              		.loc 1 1491 10 is_stmt 0 view .LVU328
 1009 000a EE07     		lsls	r6, r5, #31
1494:src/keys.c    **** 
 1010              		.loc 1 1494 30 view .LVU329
 1011 000c 1A4E     		ldr	r6, .L106+4
 1012 000e 3668     		ldr	r6, [r6]
1491:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 1013              		.loc 1 1491 10 view .LVU330
 1014 0010 01F08003 		and	r3, r1, #128
 1015 0014 0344     		add	r3, r3, r0
1494:src/keys.c    **** 
 1016              		.loc 1 1494 30 view .LVU331
 1017 0016 96F8EA67 		ldrb	r6, [r6, #2026]	@ zero_extendqisi2
1491:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 1018              		.loc 1 1491 10 view .LVU332
 1019 001a 02F12004 		add	r4, r2, #32
 1020 001e 48BF     		it	mi
 1021 0020 7033     		addmi	r3, r3, #112
 1022 0022 2402     		lsls	r4, r4, #8
 1023 0024 1C43     		orrs	r4, r4, r3
 1024              	.LVL72:
1494:src/keys.c    **** 
 1025              		.loc 1 1494 2 is_stmt 1 view .LVU333
1494:src/keys.c    **** 
 1026              		.loc 1 1494 77 is_stmt 0 view .LVU334
 1027 0026 3307     		lsls	r3, r6, #28
 1028 0028 1DD5     		bpl	.L92
1494:src/keys.c    **** 
 1029              		.loc 1 1494 77 discriminator 2 view .LVU335
 1030 002a 15F0400F 		tst	r5, #64
 1031 002e 0CBF     		ite	eq
 1032 0030 0425     		moveq	r5, #4
 1033 0032 0825     		movne	r5, #8
 1034              	.L87:
 1035              	.LVL73:
1496:src/keys.c    **** 		/*
 1036              		.loc 1 1496 2 is_stmt 1 discriminator 6 view .LVU336
1496:src/keys.c    **** 		/*
 1037              		.loc 1 1496 5 is_stmt 0 discriminator 6 view .LVU337
 1038 0034 0E06     		lsls	r6, r1, #24
 1039 0036 12D4     		bmi	.L88
1511:src/keys.c    **** 			// Disallow odd complex register > 98
ARM GAS  /tmp/ccizbp1a.s 			page 68


 1040              		.loc 1 1511 3 is_stmt 1 view .LVU338
1511:src/keys.c    **** 			// Disallow odd complex register > 98
 1041              		.loc 1 1511 20 is_stmt 0 view .LVU339
 1042 0038 104B     		ldr	r3, .L106+8
 1043 003a 03EB0213 		add	r3, r3, r2, lsl #4
 1044 003e 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
1511:src/keys.c    **** 			// Disallow odd complex register > 98
 1045              		.loc 1 1511 6 view .LVU340
 1046 0040 D906     		lsls	r1, r3, #27
 1047 0042 09D5     		bpl	.L89
1511:src/keys.c    **** 			// Disallow odd complex register > 98
 1048              		.loc 1 1511 27 discriminator 1 view .LVU341
 1049 0044 6228     		cmp	r0, #98
 1050 0046 07D9     		bls	.L89
1511:src/keys.c    **** 			// Disallow odd complex register > 98
 1051              		.loc 1 1511 52 discriminator 2 view .LVU342
 1052 0048 C307     		lsls	r3, r0, #31
 1053 004a 02D4     		bmi	.L96
1515:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1054              		.loc 1 1515 3 is_stmt 1 view .LVU343
1515:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1055              		.loc 1 1515 28 is_stmt 0 view .LVU344
 1056 004c 223A     		subs	r2, r2, #34
 1057              	.LVL74:
1515:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1058              		.loc 1 1515 6 view .LVU345
 1059 004e 012A     		cmp	r2, #1
 1060 0050 05D8     		bhi	.L88
 1061              	.LVL75:
 1062              	.L96:
1513:src/keys.c    **** #endif
 1063              		.loc 1 1513 11 view .LVU346
 1064 0052 3324     		movs	r4, #51
 1065              	.LVL76:
1522:src/keys.c    **** 
 1066              		.loc 1 1522 1 view .LVU347
 1067 0054 2046     		mov	r0, r4
 1068              	.LVL77:
1522:src/keys.c    **** 
 1069              		.loc 1 1522 1 view .LVU348
 1070 0056 70BD     		pop	{r4, r5, r6, pc}
 1071              	.LVL78:
 1072              	.L89:
1515:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1073              		.loc 1 1515 3 is_stmt 1 view .LVU349
1515:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1074              		.loc 1 1515 28 is_stmt 0 view .LVU350
 1075 0058 223A     		subs	r2, r2, #34
 1076              	.LVL79:
1515:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1077              		.loc 1 1515 6 view .LVU351
 1078 005a 012A     		cmp	r2, #1
 1079 005c 05D9     		bls	.L105
 1080              	.LVL80:
 1081              	.L88:
1520:src/keys.c    **** 	return r;
 1082              		.loc 1 1520 2 is_stmt 1 view .LVU352
ARM GAS  /tmp/ccizbp1a.s 			page 69


 1083 005e FFF7FEFF 		bl	reset_arg
 1084              	.LVL81:
1521:src/keys.c    **** }
 1085              		.loc 1 1521 2 view .LVU353
1522:src/keys.c    **** 
 1086              		.loc 1 1522 1 is_stmt 0 view .LVU354
 1087 0062 2046     		mov	r0, r4
 1088 0064 70BD     		pop	{r4, r5, r6, pc}
 1089              	.LVL82:
 1090              	.L92:
1494:src/keys.c    **** 
 1091              		.loc 1 1494 77 view .LVU355
 1092 0066 0425     		movs	r5, #4
 1093 0068 E4E7     		b	.L87
 1094              	.LVL83:
 1095              	.L105:
1515:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1096              		.loc 1 1515 73 discriminator 1 view .LVU356
 1097 006a C5F16405 		rsb	r5, r5, #100
 1098              	.LVL84:
1515:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1099              		.loc 1 1515 52 discriminator 1 view .LVU357
 1100 006e 8542     		cmp	r5, r0
 1101 0070 F5D2     		bcs	.L88
 1102 0072 EEE7     		b	.L96
 1103              	.L107:
 1104              		.align	2
 1105              	.L106:
 1106 0074 00000000 		.word	StateWhileOn
 1107 0078 00000000 		.word	main_ram
 1108 007c 00000000 		.word	argcmds
 1109              		.cfi_endproc
 1110              	.LFE30:
 1112              		.section	.text.process_arg_shuffle,"ax",%progbits
 1113              		.align	1
 1114              		.p2align 2,,3
 1115              		.syntax unified
 1116              		.thumb
 1117              		.thumb_func
 1118              		.fpu fpv4-sp-d16
 1120              	process_arg_shuffle:
 1121              	.LVL85:
 1122              	.LFB36:
1636:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1123              		.loc 1 1636 39 is_stmt 1 view -0
 1124              		.cfi_startproc
 1125              		@ args = 0, pretend = 0, frame = 0
 1126              		@ frame_needed = 0, uses_anonymous_args = 0
 1127              		@ link register save eliminated.
1637:src/keys.c    **** 	if (State2.numdigit < 4)
 1128              		.loc 1 1637 2 view .LVU359
1636:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1129              		.loc 1 1636 39 is_stmt 0 view .LVU360
 1130 0000 10B4     		push	{r4}
 1131              		.cfi_def_cfa_offset 4
 1132              		.cfi_offset 4, -4
1637:src/keys.c    **** 	if (State2.numdigit < 4)
ARM GAS  /tmp/ccizbp1a.s 			page 70


 1133              		.loc 1 1637 31 view .LVU361
 1134 0002 0A4A     		ldr	r2, .L111
 1135 0004 D37A     		ldrb	r3, [r2, #11]	@ zero_extendqisi2
1637:src/keys.c    **** 	if (State2.numdigit < 4)
 1136              		.loc 1 1637 16 view .LVU362
 1137 0006 1189     		ldrh	r1, [r2, #8]
1637:src/keys.c    **** 	if (State2.numdigit < 4)
 1138              		.loc 1 1637 43 view .LVU363
 1139 0008 5C00     		lsls	r4, r3, #1
1637:src/keys.c    **** 	if (State2.numdigit < 4)
 1140              		.loc 1 1637 21 view .LVU364
 1141 000a A040     		lsls	r0, r0, r4
 1142              	.LVL86:
1637:src/keys.c    **** 	if (State2.numdigit < 4)
 1143              		.loc 1 1637 40 view .LVU365
 1144 000c 0133     		adds	r3, r3, #1
 1145 000e DBB2     		uxtb	r3, r3
1637:src/keys.c    **** 	if (State2.numdigit < 4)
 1146              		.loc 1 1637 16 view .LVU366
 1147 0010 0844     		add	r0, r0, r1
 1148 0012 80B2     		uxth	r0, r0
1638:src/keys.c    **** 		return STATE_UNFINISHED;
 1149              		.loc 1 1638 5 view .LVU367
 1150 0014 032B     		cmp	r3, #3
1637:src/keys.c    **** 	if (State2.numdigit < 4)
 1151              		.loc 1 1637 40 view .LVU368
 1152 0016 D372     		strb	r3, [r2, #11]
1637:src/keys.c    **** 	if (State2.numdigit < 4)
 1153              		.loc 1 1637 16 view .LVU369
 1154 0018 1081     		strh	r0, [r2, #8]	@ movhi
1638:src/keys.c    **** 		return STATE_UNFINISHED;
 1155              		.loc 1 1638 2 is_stmt 1 view .LVU370
1638:src/keys.c    **** 		return STATE_UNFINISHED;
 1156              		.loc 1 1638 5 is_stmt 0 view .LVU371
 1157 001a 03D9     		bls	.L109
1640:src/keys.c    **** }
 1158              		.loc 1 1640 2 is_stmt 1 view .LVU372
1641:src/keys.c    **** 
 1159              		.loc 1 1641 1 is_stmt 0 view .LVU373
 1160 001c 5DF8044B 		ldr	r4, [sp], #4
 1161              		.cfi_remember_state
 1162              		.cfi_restore 4
 1163              		.cfi_def_cfa_offset 0
1640:src/keys.c    **** }
 1164              		.loc 1 1640 9 view .LVU374
 1165 0020 FFF7FEBF 		b	arg_eval
 1166              	.LVL87:
 1167              	.L109:
 1168              		.cfi_restore_state
1641:src/keys.c    **** 
 1169              		.loc 1 1641 1 view .LVU375
 1170 0024 3320     		movs	r0, #51
 1171 0026 5DF8044B 		ldr	r4, [sp], #4
 1172              		.cfi_restore 4
 1173              		.cfi_def_cfa_offset 0
 1174 002a 7047     		bx	lr
 1175              	.L112:
ARM GAS  /tmp/ccizbp1a.s 			page 71


 1176              		.align	2
 1177              	.L111:
 1178 002c 00000000 		.word	StateWhileOn
 1179              		.cfi_endproc
 1180              	.LFE36:
 1182              		.section	.text.arg_digit,"ax",%progbits
 1183              		.align	1
 1184              		.p2align 2,,3
 1185              		.syntax unified
 1186              		.thumb
 1187              		.thumb_func
 1188              		.fpu fpv4-sp-d16
 1190              	arg_digit:
 1191              	.LVL88:
 1192              	.LFB31:
1524:src/keys.c    **** 	int lim;
 1193              		.loc 1 1524 29 is_stmt 1 view -0
 1194              		.cfi_startproc
 1195              		@ args = 0, pretend = 0, frame = 0
 1196              		@ frame_needed = 0, uses_anonymous_args = 0
1525:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
 1197              		.loc 1 1525 2 view .LVU377
1530:src/keys.c    **** #endif
 1198              		.loc 1 1530 2 view .LVU378
1524:src/keys.c    **** 	int lim;
 1199              		.loc 1 1524 29 is_stmt 0 view .LVU379
 1200 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1201              		.cfi_def_cfa_offset 24
 1202              		.cfi_offset 3, -24
 1203              		.cfi_offset 4, -20
 1204              		.cfi_offset 5, -16
 1205              		.cfi_offset 6, -12
 1206              		.cfi_offset 7, -8
 1207              		.cfi_offset 14, -4
1530:src/keys.c    **** #endif
 1208              		.loc 1 1530 28 view .LVU380
 1209 0002 314C     		ldr	r4, .L138
1533:src/keys.c    **** 	
 1210              		.loc 1 1533 34 view .LVU381
 1211 0004 314A     		ldr	r2, .L138+4
1530:src/keys.c    **** #endif
 1212              		.loc 1 1530 28 view .LVU382
 1213 0006 E77F     		ldrb	r7, [r4, #31]	@ zero_extendqisi2
 1214              	.LVL89:
1532:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1215              		.loc 1 1532 2 is_stmt 1 view .LVU383
1532:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1216              		.loc 1 1532 33 is_stmt 0 view .LVU384
 1217 0008 2389     		ldrh	r3, [r4, #8]
1533:src/keys.c    **** 	
 1218              		.loc 1 1533 34 view .LVU385
 1219 000a 02EB0712 		add	r2, r2, r7, lsl #4
1532:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1220              		.loc 1 1532 41 view .LVU386
 1221 000e 03EB8303 		add	r3, r3, r3, lsl #2
1533:src/keys.c    **** 	
 1222              		.loc 1 1533 34 view .LVU387
ARM GAS  /tmp/ccizbp1a.s 			page 72


 1223 0012 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
1533:src/keys.c    **** 	
 1224              		.loc 1 1533 39 view .LVU388
 1225 0014 8E07     		lsls	r6, r1, #30
1532:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1226              		.loc 1 1532 46 view .LVU389
 1227 0016 00EB4305 		add	r5, r0, r3, lsl #1
 1228              	.LVL90:
1533:src/keys.c    **** 	
 1229              		.loc 1 1533 2 is_stmt 1 view .LVU390
1533:src/keys.c    **** 	
 1230              		.loc 1 1533 39 is_stmt 0 view .LVU391
 1231 001a C1F34000 		ubfx	r0, r1, #1, #1
 1232              	.LVL91:
1533:src/keys.c    **** 	
 1233              		.loc 1 1533 39 view .LVU392
 1234 001e 32D5     		bpl	.L114
 1235              	.LVL92:
1535:src/keys.c    **** 		// Handle local registers and flags
 1236              		.loc 1 1535 2 is_stmt 1 view .LVU393
1535:src/keys.c    **** 		// Handle local registers and flags
 1237              		.loc 1 1535 6 is_stmt 0 view .LVU394
 1238 0020 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1535:src/keys.c    **** 		// Handle local registers and flags
 1239              		.loc 1 1535 5 view .LVU395
 1240 0022 D907     		lsls	r1, r3, #31
 1241 0024 28D5     		bpl	.L116
 1242              	.L127:
1533:src/keys.c    **** 	
 1243              		.loc 1 1533 39 view .LVU396
 1244 0026 0120     		movs	r0, #1
 1245              	.LVL93:
 1246              	.L115:
1537:src/keys.c    **** 		if (State2.runmode) {
 1247              		.loc 1 1537 3 is_stmt 1 view .LVU397
1538:src/keys.c    **** 			if (LocalRegs == 0)
 1248              		.loc 1 1538 3 view .LVU398
1538:src/keys.c    **** 			if (LocalRegs == 0)
 1249              		.loc 1 1538 6 is_stmt 0 view .LVU399
 1250 0028 5A06     		lsls	r2, r3, #25
 1251 002a 3BD5     		bpl	.L129
1539:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1252              		.loc 1 1539 4 is_stmt 1 view .LVU400
1539:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1253              		.loc 1 1539 8 is_stmt 0 view .LVU401
 1254 002c 284B     		ldr	r3, .L138+8
 1255 002e 1B68     		ldr	r3, [r3]
1539:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1256              		.loc 1 1539 7 view .LVU402
 1257 0030 B3F9DE37 		ldrsh	r3, [r3, #2014]
 1258 0034 2BB3     		cbz	r3, .L122
1541:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
 1259              		.loc 1 1541 4 is_stmt 1 view .LVU403
1541:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
 1260              		.loc 1 1541 7 is_stmt 0 view .LVU404
 1261 0036 A8B3     		cbz	r0, .L129
1542:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
ARM GAS  /tmp/ccizbp1a.s 			page 73


 1262              		.loc 1 1542 5 is_stmt 1 view .LVU405
1542:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1263              		.loc 1 1542 11 is_stmt 0 view .LVU406
 1264 0038 3846     		mov	r0, r7
 1265 003a FFF7FEFF 		bl	local_regs_rarg
 1266              	.LVL94:
1543:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1267              		.loc 1 1543 5 is_stmt 1 view .LVU407
1542:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1268              		.loc 1 1542 9 is_stmt 0 view .LVU408
 1269 003e 0138     		subs	r0, r0, #1
 1270              	.LVL95:
1542:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1271              		.loc 1 1542 9 view .LVU409
 1272 0040 0F28     		cmp	r0, #15
 1273 0042 A8BF     		it	ge
 1274 0044 0F20     		movge	r0, #15
 1275              	.LVL96:
 1276              	.L119:
1555:src/keys.c    **** 		return STATE_UNFINISHED;
 1277              		.loc 1 1555 2 is_stmt 1 view .LVU410
1555:src/keys.c    **** 		return STATE_UNFINISHED;
 1278              		.loc 1 1555 5 is_stmt 0 view .LVU411
 1279 0046 8542     		cmp	r5, r0
 1280 0048 1BDC     		bgt	.L122
 1281              	.L136:
1558:src/keys.c    **** 	++State2.numdigit;
 1282              		.loc 1 1558 2 is_stmt 1 view .LVU412
1559:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1283              		.loc 1 1559 2 is_stmt 0 view .LVU413
 1284 004a E67A     		ldrb	r6, [r4, #11]	@ zero_extendqisi2
1558:src/keys.c    **** 	++State2.numdigit;
 1285              		.loc 1 1558 16 view .LVU414
 1286 004c 2581     		strh	r5, [r4, #8]	@ movhi
1559:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1287              		.loc 1 1559 2 is_stmt 1 view .LVU415
 1288 004e 0136     		adds	r6, r6, #1
1560:src/keys.c    **** 		int result = arg_eval(val);
 1289              		.loc 1 1560 16 is_stmt 0 view .LVU416
 1290 0050 05EB8503 		add	r3, r5, r5, lsl #2
1559:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1291              		.loc 1 1559 2 view .LVU417
 1292 0054 F6B2     		uxtb	r6, r6
1560:src/keys.c    **** 		int result = arg_eval(val);
 1293              		.loc 1 1560 5 view .LVU418
 1294 0056 B0EB430F 		cmp	r0, r3, lsl #1
1559:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1295              		.loc 1 1559 2 view .LVU419
 1296 005a E672     		strb	r6, [r4, #11]
1560:src/keys.c    **** 		int result = arg_eval(val);
 1297              		.loc 1 1560 2 is_stmt 1 view .LVU420
1560:src/keys.c    **** 		int result = arg_eval(val);
 1298              		.loc 1 1560 5 is_stmt 0 view .LVU421
 1299 005c 04DB     		blt	.L125
1560:src/keys.c    **** 		int result = arg_eval(val);
 1300              		.loc 1 1560 49 discriminator 1 view .LVU422
 1301 005e 3846     		mov	r0, r7
ARM GAS  /tmp/ccizbp1a.s 			page 74


 1302              	.LVL97:
1560:src/keys.c    **** 		int result = arg_eval(val);
 1303              		.loc 1 1560 49 discriminator 1 view .LVU423
 1304 0060 FFF7FEFF 		bl	num_arg_digits
 1305              	.LVL98:
1560:src/keys.c    **** 		int result = arg_eval(val);
 1306              		.loc 1 1560 27 discriminator 1 view .LVU424
 1307 0064 8642     		cmp	r6, r0
 1308 0066 0CDB     		blt	.L122
 1309              	.L125:
 1310              	.LBB262:
1561:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1311              		.loc 1 1561 3 is_stmt 1 view .LVU425
1561:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1312              		.loc 1 1561 16 is_stmt 0 view .LVU426
 1313 0068 2846     		mov	r0, r5
 1314 006a FFF7FEFF 		bl	arg_eval
 1315              	.LVL99:
1562:src/keys.c    **** 			--State2.numdigit;
 1316              		.loc 1 1562 3 is_stmt 1 view .LVU427
1562:src/keys.c    **** 			--State2.numdigit;
 1317              		.loc 1 1562 6 is_stmt 0 view .LVU428
 1318 006e 3328     		cmp	r0, #51
 1319 0070 1AD0     		beq	.L134
 1320              	.LBE262:
1569:src/keys.c    **** 
 1321              		.loc 1 1569 1 view .LVU429
 1322 0072 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1323              	.LVL100:
 1324              	.L137:
1535:src/keys.c    **** 		// Handle local registers and flags
 1325              		.loc 1 1535 2 is_stmt 1 view .LVU430
1535:src/keys.c    **** 		// Handle local registers and flags
 1326              		.loc 1 1535 5 is_stmt 0 view .LVU431
 1327 0074 DA07     		lsls	r2, r3, #31
 1328 0076 D6D4     		bmi	.L127
 1329              	.L116:
1549:src/keys.c    **** 	else {
 1330              		.loc 1 1549 3 is_stmt 1 view .LVU432
1549:src/keys.c    **** 	else {
 1331              		.loc 1 1549 65 is_stmt 0 view .LVU433
 1332 0078 5B06     		lsls	r3, r3, #25
 1333 007a 1FD4     		bmi	.L135
 1334 007c 6320     		movs	r0, #99
 1335              	.LVL101:
1555:src/keys.c    **** 		return STATE_UNFINISHED;
 1336              		.loc 1 1555 2 is_stmt 1 view .LVU434
1555:src/keys.c    **** 		return STATE_UNFINISHED;
 1337              		.loc 1 1555 5 is_stmt 0 view .LVU435
 1338 007e 8542     		cmp	r5, r0
 1339 0080 E3DD     		ble	.L136
 1340              	.LVL102:
 1341              	.L122:
1540:src/keys.c    **** 			if (is_reg) {
 1342              		.loc 1 1540 12 view .LVU436
 1343 0082 3320     		movs	r0, #51
1569:src/keys.c    **** 
ARM GAS  /tmp/ccizbp1a.s 			page 75


 1344              		.loc 1 1569 1 view .LVU437
 1345 0084 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1346              	.LVL103:
 1347              	.L114:
1533:src/keys.c    **** 	
 1348              		.loc 1 1533 39 discriminator 2 view .LVU438
 1349 0086 94F91530 		ldrsb	r3, [r4, #21]
 1350 008a 002B     		cmp	r3, #0
1535:src/keys.c    **** 		// Handle local registers and flags
 1351              		.loc 1 1535 6 discriminator 2 view .LVU439
 1352 008c A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1533:src/keys.c    **** 	
 1353              		.loc 1 1533 39 discriminator 2 view .LVU440
 1354 008e F1DB     		blt	.L137
 1355              	.LVL104:
1535:src/keys.c    **** 		// Handle local registers and flags
 1356              		.loc 1 1535 2 is_stmt 1 view .LVU441
1535:src/keys.c    **** 		// Handle local registers and flags
 1357              		.loc 1 1535 5 is_stmt 0 view .LVU442
 1358 0090 DE07     		lsls	r6, r3, #31
 1359 0092 C9D4     		bmi	.L115
1548:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
 1360              		.loc 1 1548 7 is_stmt 1 view .LVU443
1551:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1361              		.loc 1 1551 3 view .LVU444
1551:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1362              		.loc 1 1551 7 is_stmt 0 view .LVU445
 1363 0094 1079     		ldrb	r0, [r2, #4]	@ zero_extendqisi2
 1364              	.LVL105:
1552:src/keys.c    **** 			lim = RARG_IND - 1;
 1365              		.loc 1 1552 3 is_stmt 1 view .LVU446
1552:src/keys.c    **** 			lim = RARG_IND - 1;
 1366              		.loc 1 1552 6 is_stmt 0 view .LVU447
 1367 0096 7F28     		cmp	r0, #127
 1368 0098 D5DD     		ble	.L119
1553:src/keys.c    **** 	}
 1369              		.loc 1 1553 8 discriminator 1 view .LVU448
 1370 009a 11F0010F 		tst	r1, #1
 1371 009e 18BF     		it	ne
 1372 00a0 7F20     		movne	r0, #127
 1373              	.LVL106:
1553:src/keys.c    **** 	}
 1374              		.loc 1 1553 8 discriminator 1 view .LVU449
 1375 00a2 D0E7     		b	.L119
 1376              	.LVL107:
 1377              	.L129:
1537:src/keys.c    **** 		if (State2.runmode) {
 1378              		.loc 1 1537 7 view .LVU450
 1379 00a4 0F20     		movs	r0, #15
 1380 00a6 CEE7     		b	.L119
 1381              	.LVL108:
 1382              	.L134:
 1383              	.LBB263:
1563:src/keys.c    **** 			State2.digval /= 10;
 1384              		.loc 1 1563 4 is_stmt 1 view .LVU451
1564:src/keys.c    **** 		}
 1385              		.loc 1 1564 18 is_stmt 0 view .LVU452
ARM GAS  /tmp/ccizbp1a.s 			page 76


 1386 00a8 2389     		ldrh	r3, [r4, #8]
 1387 00aa 0A49     		ldr	r1, .L138+12
1563:src/keys.c    **** 			State2.digval /= 10;
 1388              		.loc 1 1563 4 view .LVU453
 1389 00ac E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
1564:src/keys.c    **** 		}
 1390              		.loc 1 1564 18 view .LVU454
 1391 00ae A1FB0313 		umull	r1, r3, r1, r3
 1392 00b2 DB08     		lsrs	r3, r3, #3
1563:src/keys.c    **** 			State2.digval /= 10;
 1393              		.loc 1 1563 4 view .LVU455
 1394 00b4 013A     		subs	r2, r2, #1
1564:src/keys.c    **** 		}
 1395              		.loc 1 1564 18 view .LVU456
 1396 00b6 2381     		strh	r3, [r4, #8]	@ movhi
1563:src/keys.c    **** 			State2.digval /= 10;
 1397              		.loc 1 1563 4 view .LVU457
 1398 00b8 E272     		strb	r2, [r4, #11]
1564:src/keys.c    **** 		}
 1399              		.loc 1 1564 4 is_stmt 1 view .LVU458
 1400              	.LBE263:
1569:src/keys.c    **** 
 1401              		.loc 1 1569 1 is_stmt 0 view .LVU459
 1402 00ba F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1403              	.LVL109:
 1404              	.L135:
1549:src/keys.c    **** 	else {
 1405              		.loc 1 1549 26 discriminator 1 view .LVU460
 1406 00bc 3846     		mov	r0, r7
 1407 00be FFF7FEFF 		bl	global_regs_rarg
 1408              	.LVL110:
1549:src/keys.c    **** 	else {
 1409              		.loc 1 1549 61 discriminator 1 view .LVU461
 1410 00c2 0138     		subs	r0, r0, #1
 1411 00c4 BFE7     		b	.L119
 1412              	.L139:
 1413 00c6 00BF     		.align	2
 1414              	.L138:
 1415 00c8 00000000 		.word	StateWhileOn
 1416 00cc 00000000 		.word	argcmds
 1417 00d0 00000000 		.word	main_ram
 1418 00d4 CDCCCCCC 		.word	-858993459
 1419              		.cfi_endproc
 1420              	.LFE31:
 1422              		.section	.text.intltr,"ax",%progbits
 1423              		.align	1
 1424              		.p2align 2,,3
 1425              		.syntax unified
 1426              		.thumb
 1427              		.thumb_func
 1428              		.fpu fpv4-sp-d16
 1430              	intltr:
 1431              	.LVL111:
 1432              	.LFB18:
 666:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1433              		.loc 1 666 26 is_stmt 1 view -0
 1434              		.cfi_startproc
ARM GAS  /tmp/ccizbp1a.s 			page 77


 1435              		@ args = 0, pretend = 0, frame = 0
 1436              		@ frame_needed = 0, uses_anonymous_args = 0
 667:src/keys.c    **** }
 1437              		.loc 1 667 2 view .LVU463
 667:src/keys.c    **** }
 1438              		.loc 1 667 10 is_stmt 0 view .LVU464
 1439 0000 0B4B     		ldr	r3, .L149
 1440 0002 1B68     		ldr	r3, [r3]
 1441 0004 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 667:src/keys.c    **** }
 1442              		.loc 1 667 22 view .LVU465
 1443 0008 13F00103 		ands	r3, r3, #1
 1444 000c 05D0     		beq	.L142
 667:src/keys.c    **** }
 1445              		.loc 1 667 26 discriminator 1 view .LVU466
 1446 000e 094B     		ldr	r3, .L149+4
 1447 0010 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 667:src/keys.c    **** }
 1448              		.loc 1 667 22 discriminator 1 view .LVU467
 1449 0012 5B06     		lsls	r3, r3, #25
 1450 0014 03D4     		bmi	.L148
 667:src/keys.c    **** }
 1451              		.loc 1 667 22 view .LVU468
 1452 0016 0120     		movs	r0, #1
 1453              	.LVL112:
 668:src/keys.c    **** 
 1454              		.loc 1 668 1 view .LVU469
 1455 0018 7047     		bx	lr
 1456              	.LVL113:
 1457              	.L142:
 667:src/keys.c    **** }
 1458              		.loc 1 667 22 view .LVU470
 1459 001a 1846     		mov	r0, r3
 1460              	.LVL114:
 667:src/keys.c    **** }
 1461              		.loc 1 667 22 view .LVU471
 1462 001c 7047     		bx	lr
 1463              	.LVL115:
 1464              	.L148:
 666:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1465              		.loc 1 666 26 view .LVU472
 1466 001e 10B5     		push	{r4, lr}
 1467              		.cfi_def_cfa_offset 8
 1468              		.cfi_offset 4, -8
 1469              		.cfi_offset 14, -4
 1470 0020 0446     		mov	r4, r0
 1471              	.LVL116:
 1472              	.LBB266:
 1473              	.LBI266:
 666:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1474              		.loc 1 666 12 is_stmt 1 view .LVU473
 1475              	.LBB267:
 667:src/keys.c    **** }
 1476              		.loc 1 667 52 is_stmt 0 view .LVU474
 1477 0022 FFF7FEFF 		bl	int_base
 1478              	.LVL117:
 667:src/keys.c    **** }
ARM GAS  /tmp/ccizbp1a.s 			page 78


 1479              		.loc 1 667 43 view .LVU475
 1480 0026 8442     		cmp	r4, r0
 1481 0028 ACBF     		ite	ge
 1482 002a 0020     		movge	r0, #0
 1483 002c 0120     		movlt	r0, #1
 1484              	.LBE267:
 1485              	.LBE266:
 668:src/keys.c    **** 
 1486              		.loc 1 668 1 view .LVU476
 1487 002e 10BD     		pop	{r4, pc}
 1488              	.LVL118:
 1489              	.L150:
 668:src/keys.c    **** 
 1490              		.loc 1 668 1 view .LVU477
 1491              		.align	2
 1492              	.L149:
 1493 0030 00000000 		.word	main_ram
 1494 0034 00000000 		.word	StateWhileOn
 1495              		.cfi_endproc
 1496              	.LFE18:
 1498              		.section	.text.set_window,"ax",%progbits
 1499              		.align	1
 1500              		.p2align 2,,3
 1501              		.syntax unified
 1502              		.thumb
 1503              		.thumb_func
 1504              		.fpu fpv4-sp-d16
 1506              	set_window:
 1507              	.LVL119:
 1508              	.LFB53:
2531:src/keys.c    **** 
2532:src/keys.c    **** 
2533:src/keys.c    **** /*
2534:src/keys.c    ****  *  CAT command
2535:src/keys.c    ****  */
2536:src/keys.c    **** static int process_labellist(const keycode c) {
2537:src/keys.c    **** 	unsigned int pc = State2.digval;
2538:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
2539:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
2540:src/keys.c    **** 	const int opcode = getprog(pc);
2541:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
2542:src/keys.c    **** 	const int direct = State2.runmode;
2543:src/keys.c    **** 	const enum shifts shift = reset_shift();
2544:src/keys.c    **** 	int op = STATE_UNFINISHED;
2545:src/keys.c    **** 
2546:src/keys.c    **** 	if (n < REGION_XROM) {
2547:src/keys.c    **** 		// Digits take you to that segment
2548:src/keys.c    **** 		pc = addrLIB(1, n);
2549:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
2550:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
2551:src/keys.c    **** 		State2.digval = pc;
2552:src/keys.c    **** 		return STATE_UNFINISHED;
2553:src/keys.c    **** 	}
2554:src/keys.c    **** 
2555:src/keys.c    **** 	switch (c | (shift << 8)) {
2556:src/keys.c    **** 
2557:src/keys.c    **** 	case K_UP | (SHIFT_F << 8):		// Find first label of previous program
ARM GAS  /tmp/ccizbp1a.s 			page 79


2558:src/keys.c    **** 		pc = advance_to_previous_label(advance_to_previous_label(pc, 1), 1);
2559:src/keys.c    **** 		goto next;
2560:src/keys.c    **** 
2561:src/keys.c    **** 	case K_DOWN | (SHIFT_F << 8):		// Find next program
2562:src/keys.c    **** 		pc = advance_to_next_label(pc, 0, 1);
2563:src/keys.c    **** 	case K_DOWN:				// Find next label
2564:src/keys.c    **** 	next:
2565:src/keys.c    **** 		State2.digval = advance_to_next_label(pc, 1, 0);
2566:src/keys.c    **** 		return STATE_UNFINISHED;
2567:src/keys.c    **** 
2568:src/keys.c    **** 	case K_UP:				// Find previous label
2569:src/keys.c    **** 		State2.digval = advance_to_previous_label(pc, 0);
2570:src/keys.c    **** 		return STATE_UNFINISHED;
2571:src/keys.c    **** 
2572:src/keys.c    **** 	case K24:				// <- exits
2573:src/keys.c    **** 		break;
2574:src/keys.c    **** 
2575:src/keys.c    **** 	case K20:				// ENTER^
2576:src/keys.c    **** 	set_pc_and_exit:
2577:src/keys.c    **** 		set_pc(pc);			// forced branch
2578:src/keys.c    **** 		break;
2579:src/keys.c    **** 
2580:src/keys.c    **** 	case K24 | (SHIFT_F << 8):		// CLP
2581:src/keys.c    **** 		op = (OP_NIL | OP_CLPROG);
2582:src/keys.c    **** 		goto set_pc_and_exit;
2583:src/keys.c    **** 
2584:src/keys.c    **** 	case K10:				// STO
2585:src/keys.c    **** 	case K11:				// RCL
2586:src/keys.c    **** #ifndef DM42	
2587:src/keys.c    **** 		op = c == K10 ? (OP_NIL | OP_PSTO) : (OP_NIL | OP_PRCL);
2588:src/keys.c    **** #endif
2589:src/keys.c    **** #ifdef DM42
2590:src/keys.c    **** 	        op = OP_NIL;
2591:src/keys.c    **** #endif	    
2592:src/keys.c    **** 	  goto set_pc_and_exit;
2593:src/keys.c    **** #ifdef DM42
2594:src/keys.c    **** 	case K05:				// XEQ
2595:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
2596:src/keys.c    **** 		goto xeq_or_gto;
2597:src/keys.c    **** 
2598:src/keys.c    **** 	case K05 | (SHIFT_F << 8):		// GTO
2599:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
2600:src/keys.c    **** 	xeq_or_gto:
2601:src/keys.c    **** 		if (label)
2602:src/keys.c    **** 			break;
2603:src/keys.c    **** 		return STATE_UNFINISHED;
2604:src/keys.c    **** #else
2605:src/keys.c    **** 	case K30:				// XEQ
2606:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
2607:src/keys.c    **** 		goto xeq_or_gto;
2608:src/keys.c    **** 
2609:src/keys.c    **** 	case K30 | (SHIFT_H << 8):		// GTO
2610:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
2611:src/keys.c    **** 	xeq_or_gto:
2612:src/keys.c    **** 		if (label)
2613:src/keys.c    **** 			break;
2614:src/keys.c    **** 		return STATE_UNFINISHED;
ARM GAS  /tmp/ccizbp1a.s 			page 80


2615:src/keys.c    **** #endif		
2616:src/keys.c    **** 	case K63:				// R/S
2617:src/keys.c    **** 		if (direct && label) {
2618:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
2619:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
2620:src/keys.c    **** 			break;
2621:src/keys.c    **** 		}
2622:src/keys.c    **** 		return STATE_UNFINISHED;
2623:src/keys.c    **** 
2624:src/keys.c    **** 	case K63 | (SHIFT_H << 8):		// P/R
2625:src/keys.c    **** 		State2.runmode = 0;		// switch to program mode
2626:src/keys.c    **** 		goto set_pc_and_exit;
2627:src/keys.c    **** 
2628:src/keys.c    **** 	default:
2629:src/keys.c    **** 		return STATE_UNFINISHED;
2630:src/keys.c    **** 	}
2631:src/keys.c    **** 	State2.digval = 0;
2632:src/keys.c    **** 	State2.labellist = 0;
2633:src/keys.c    **** 	return check_confirm(op);
2634:src/keys.c    **** }
2635:src/keys.c    **** 
2636:src/keys.c    **** 
2637:src/keys.c    **** static void set_window(int c) {
 1509              		.loc 1 2637 31 is_stmt 1 view -0
 1510              		.cfi_startproc
 1511              		@ args = 0, pretend = 0, frame = 0
 1512              		@ frame_needed = 0, uses_anonymous_args = 0
2638:src/keys.c    **** 
2639:src/keys.c    **** 	if (State2.runmode) {
 1513              		.loc 1 2639 2 view .LVU479
2637:src/keys.c    **** 
 1514              		.loc 1 2637 31 is_stmt 0 view .LVU480
 1515 0000 38B5     		push	{r3, r4, r5, lr}
 1516              		.cfi_def_cfa_offset 16
 1517              		.cfi_offset 3, -16
 1518              		.cfi_offset 4, -12
 1519              		.cfi_offset 5, -8
 1520              		.cfi_offset 14, -4
 1521              		.loc 1 2639 6 view .LVU481
 1522 0002 224C     		ldr	r4, .L166
 1523 0004 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 1524              		.loc 1 2639 5 view .LVU482
 1525 0006 5A06     		lsls	r2, r3, #25
 1526 0008 00D4     		bmi	.L163
 1527              	.LVL120:
 1528              	.L151:
2640:src/keys.c    **** 		process_cmdline_set_lift();
2641:src/keys.c    **** 		// Make sure IntMaxWindow is recalculated
2642:src/keys.c    **** 		State2.disp_freeze = 0;
2643:src/keys.c    **** 		display();	
2644:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
2645:src/keys.c    **** 			if (UState.intm) {
2646:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
2647:src/keys.c    **** 					State2.window--;
2648:src/keys.c    **** 				return;
2649:src/keys.c    **** 			}
2650:src/keys.c    **** 			else 
ARM GAS  /tmp/ccizbp1a.s 			page 81


2651:src/keys.c    **** 				State2.window = is_dblmode();
2652:src/keys.c    **** 		}
2653:src/keys.c    **** 		else {
2654:src/keys.c    **** 			if (UState.intm) {
2655:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
2656:src/keys.c    **** 					State2.window++;
2657:src/keys.c    **** 				return;
2658:src/keys.c    **** 			}
2659:src/keys.c    **** 			else
2660:src/keys.c    **** 				State2.window = 0;
2661:src/keys.c    **** 		}
2662:src/keys.c    **** 		set_smode(SDISP_SHOW);
2663:src/keys.c    **** 	}
2664:src/keys.c    **** }
 1529              		.loc 1 2664 1 view .LVU483
 1530 000a 38BD     		pop	{r3, r4, r5, pc}
 1531              	.LVL121:
 1532              	.L163:
2640:src/keys.c    **** 		process_cmdline_set_lift();
 1533              		.loc 1 2640 3 is_stmt 1 view .LVU484
 1534 000c 0546     		mov	r5, r0
 1535 000e FFF7FEFF 		bl	process_cmdline_set_lift
 1536              	.LVL122:
2642:src/keys.c    **** 		display();	
 1537              		.loc 1 2642 3 view .LVU485
2642:src/keys.c    **** 		display();	
 1538              		.loc 1 2642 22 is_stmt 0 view .LVU486
 1539 0012 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 1540 0014 6FF30413 		bfc	r3, #4, #1
 1541 0018 E375     		strb	r3, [r4, #23]
2643:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
 1542              		.loc 1 2643 3 is_stmt 1 view .LVU487
 1543 001a FFF7FEFF 		bl	display
 1544              	.LVL123:
2644:src/keys.c    **** 			if (UState.intm) {
 1545              		.loc 1 2644 3 view .LVU488
2645:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1546              		.loc 1 2645 8 is_stmt 0 view .LVU489
 1547 001e 1C4B     		ldr	r3, .L166+4
 1548 0020 1B68     		ldr	r3, [r3]
2644:src/keys.c    **** 			if (UState.intm) {
 1549              		.loc 1 2644 6 view .LVU490
 1550 0022 2C2D     		cmp	r5, #44
2645:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1551              		.loc 1 2645 8 view .LVU491
 1552 0024 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
2644:src/keys.c    **** 			if (UState.intm) {
 1553              		.loc 1 2644 6 view .LVU492
 1554 0028 18D0     		beq	.L164
2654:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 1555              		.loc 1 2654 4 is_stmt 1 view .LVU493
2654:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 1556              		.loc 1 2654 7 is_stmt 0 view .LVU494
 1557 002a 13F00103 		ands	r3, r3, #1
 1558 002e 09D1     		bne	.L165
2660:src/keys.c    **** 		}
 1559              		.loc 1 2660 5 is_stmt 1 view .LVU495
ARM GAS  /tmp/ccizbp1a.s 			page 82


2660:src/keys.c    **** 		}
 1560              		.loc 1 2660 19 is_stmt 0 view .LVU496
 1561 0030 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 1562 0032 63F3C502 		bfi	r2, r3, #3, #3
 1563 0036 2275     		strb	r2, [r4, #20]
 1564              	.L157:
2662:src/keys.c    **** 	}
 1565              		.loc 1 2662 3 is_stmt 1 view .LVU497
 1566              	.LVL124:
 1567              	.LBB274:
 1568              	.LBI274:
 646:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 1569              		.loc 1 646 13 view .LVU498
 1570              	.LBB275:
 647:src/keys.c    **** }
 1571              		.loc 1 647 2 view .LVU499
 647:src/keys.c    **** }
 1572              		.loc 1 647 15 is_stmt 0 view .LVU500
 1573 0038 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 1574 003a 013B     		subs	r3, r3, #1
 1575 003c 18BF     		it	ne
 1576 003e 0123     		movne	r3, #1
 1577 0040 6374     		strb	r3, [r4, #17]
 1578              	.LVL125:
 647:src/keys.c    **** }
 1579              		.loc 1 647 15 view .LVU501
 1580              	.LBE275:
 1581              	.LBE274:
 1582              		.loc 1 2664 1 view .LVU502
 1583 0042 38BD     		pop	{r3, r4, r5, pc}
 1584              	.LVL126:
 1585              	.L165:
2655:src/keys.c    **** 					State2.window++;
 1586              		.loc 1 2655 5 is_stmt 1 view .LVU503
2655:src/keys.c    **** 					State2.window++;
 1587              		.loc 1 2655 22 is_stmt 0 view .LVU504
 1588 0044 134A     		ldr	r2, .L166+8
2655:src/keys.c    **** 					State2.window++;
 1589              		.loc 1 2655 42 view .LVU505
 1590 0046 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
2655:src/keys.c    **** 					State2.window++;
 1591              		.loc 1 2655 8 view .LVU506
 1592 0048 1168     		ldr	r1, [r2]
2655:src/keys.c    **** 					State2.window++;
 1593              		.loc 1 2655 42 view .LVU507
 1594 004a C3F3C202 		ubfx	r2, r3, #3, #3
2655:src/keys.c    **** 					State2.window++;
 1595              		.loc 1 2655 8 view .LVU508
 1596 004e 8A42     		cmp	r2, r1
 1597 0050 DBDA     		bge	.L151
2656:src/keys.c    **** 				return;
 1598              		.loc 1 2656 6 is_stmt 1 view .LVU509
2656:src/keys.c    **** 				return;
 1599              		.loc 1 2656 19 is_stmt 0 view .LVU510
 1600 0052 0132     		adds	r2, r2, #1
 1601 0054 62F3C503 		bfi	r3, r2, #3, #3
 1602 0058 2375     		strb	r3, [r4, #20]
ARM GAS  /tmp/ccizbp1a.s 			page 83


 1603              		.loc 1 2664 1 view .LVU511
 1604 005a 38BD     		pop	{r3, r4, r5, pc}
 1605              	.LVL127:
 1606              	.L164:
2645:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1607              		.loc 1 2645 4 is_stmt 1 view .LVU512
2645:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1608              		.loc 1 2645 7 is_stmt 0 view .LVU513
 1609 005c DB07     		lsls	r3, r3, #31
 1610 005e 0ED5     		bpl	.L155
 1611              	.LBB276:
 1612              	.LBI276:
2637:src/keys.c    **** 
 1613              		.loc 1 2637 13 is_stmt 1 view .LVU514
 1614              	.LVL128:
 1615              	.LBB277:
2646:src/keys.c    **** 					State2.window--;
 1616              		.loc 1 2646 5 view .LVU515
2646:src/keys.c    **** 					State2.window--;
 1617              		.loc 1 2646 22 is_stmt 0 view .LVU516
 1618 0060 0C4B     		ldr	r3, .L166+8
2646:src/keys.c    **** 					State2.window--;
 1619              		.loc 1 2646 8 view .LVU517
 1620 0062 1B68     		ldr	r3, [r3]
 1621 0064 002B     		cmp	r3, #0
 1622 0066 D0DD     		ble	.L151
2646:src/keys.c    **** 					State2.window--;
 1623              		.loc 1 2646 43 view .LVU518
 1624 0068 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
2646:src/keys.c    **** 					State2.window--;
 1625              		.loc 1 2646 26 view .LVU519
 1626 006a 13F0380F 		tst	r3, #56
 1627 006e CCD0     		beq	.L151
2647:src/keys.c    **** 				return;
 1628              		.loc 1 2647 6 is_stmt 1 view .LVU520
2647:src/keys.c    **** 				return;
 1629              		.loc 1 2647 12 is_stmt 0 view .LVU521
 1630 0070 C3F3C202 		ubfx	r2, r3, #3, #3
2647:src/keys.c    **** 				return;
 1631              		.loc 1 2647 19 view .LVU522
 1632 0074 0732     		adds	r2, r2, #7
 1633 0076 62F3C503 		bfi	r3, r2, #3, #3
 1634 007a 2375     		strb	r3, [r4, #20]
 1635              	.LBE277:
 1636              	.LBE276:
 1637              		.loc 1 2664 1 view .LVU523
 1638 007c 38BD     		pop	{r3, r4, r5, pc}
 1639              	.LVL129:
 1640              	.L155:
2651:src/keys.c    **** 		}
 1641              		.loc 1 2651 5 is_stmt 1 view .LVU524
2651:src/keys.c    **** 		}
 1642              		.loc 1 2651 21 is_stmt 0 view .LVU525
 1643 007e FFF7FEFF 		bl	is_dblmode
 1644              	.LVL130:
2651:src/keys.c    **** 		}
 1645              		.loc 1 2651 19 view .LVU526
ARM GAS  /tmp/ccizbp1a.s 			page 84


 1646 0082 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 1647 0084 60F3C503 		bfi	r3, r0, #3, #3
 1648 0088 2375     		strb	r3, [r4, #20]
 1649 008a D5E7     		b	.L157
 1650              	.L167:
 1651              		.align	2
 1652              	.L166:
 1653 008c 00000000 		.word	StateWhileOn
 1654 0090 00000000 		.word	main_ram
 1655 0094 00000000 		.word	IntMaxWindow
 1656              		.cfi_endproc
 1657              	.LFE53:
 1659              		.section	.text.arg_storcl,"ax",%progbits
 1660              		.align	1
 1661              		.p2align 2,,3
 1662              		.syntax unified
 1663              		.thumb
 1664              		.thumb_func
 1665              		.fpu fpv4-sp-d16
 1667              	arg_storcl:
 1668              	.LVL131:
 1669              	.LFB34:
1594:src/keys.c    **** 	unsigned int b = CmdBase;
 1670              		.loc 1 1594 56 is_stmt 1 view -0
 1671              		.cfi_startproc
 1672              		@ args = 0, pretend = 0, frame = 0
 1673              		@ frame_needed = 0, uses_anonymous_args = 0
 1674              		@ link register save eliminated.
1595:src/keys.c    **** 
 1675              		.loc 1 1595 2 view .LVU528
1595:src/keys.c    **** 
 1676              		.loc 1 1595 19 is_stmt 0 view .LVU529
 1677 0000 0F4A     		ldr	r2, .L200
 1678 0002 D37F     		ldrb	r3, [r2, #31]	@ zero_extendqisi2
 1679              	.LVL132:
1597:src/keys.c    **** 		CmdBase += n;
 1680              		.loc 1 1597 2 is_stmt 1 view .LVU530
 1681              	.LBB286:
 1682              	.LBI286:
1585:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1683              		.loc 1 1585 12 view .LVU531
 1684              	.LBB287:
1590:src/keys.c    **** #endif
 1685              		.loc 1 1590 2 view .LVU532
1590:src/keys.c    **** #endif
 1686              		.loc 1 1590 41 is_stmt 0 view .LVU533
 1687 0004 032B     		cmp	r3, #3
 1688 0006 14D0     		beq	.L169
1590:src/keys.c    **** #endif
 1689              		.loc 1 1590 24 view .LVU534
 1690 0008 0A2B     		cmp	r3, #10
 1691 000a 12D0     		beq	.L169
 1692              	.LVL133:
 1693              	.LBB288:
 1694              	.LBI288:
1585:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1695              		.loc 1 1585 12 is_stmt 1 view .LVU535
ARM GAS  /tmp/ccizbp1a.s 			page 85


 1696              	.LBB289:
1590:src/keys.c    **** #endif
 1697              		.loc 1 1590 41 is_stmt 0 view .LVU536
 1698 000c 19B1     		cbz	r1, .L170
1590:src/keys.c    **** #endif
 1699              		.loc 1 1590 51 view .LVU537
 1700 000e 152B     		cmp	r3, #21
 1701 0010 0FD0     		beq	.L169
1590:src/keys.c    **** #endif
 1702              		.loc 1 1590 70 view .LVU538
 1703 0012 1A2B     		cmp	r3, #26
 1704 0014 0DD0     		beq	.L169
 1705              	.L170:
 1706              	.LVL134:
1590:src/keys.c    **** #endif
 1707              		.loc 1 1590 70 view .LVU539
 1708              	.LBE289:
 1709              	.LBE288:
 1710              	.LBE287:
 1711              	.LBE286:
1602:src/keys.c    **** 		b -= n;
 1712              		.loc 1 1602 2 is_stmt 1 view .LVU540
1602:src/keys.c    **** 		b -= n;
 1713              		.loc 1 1602 5 is_stmt 0 view .LVU541
 1714 0016 8342     		cmp	r3, r0
 1715 0018 09D3     		bcc	.L175
1603:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 1716              		.loc 1 1603 3 is_stmt 1 view .LVU542
1603:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 1717              		.loc 1 1603 5 is_stmt 0 view .LVU543
 1718 001a 1B1A     		subs	r3, r3, r0
 1719              	.LVL135:
1604:src/keys.c    **** 			CmdBase = b;
 1720              		.loc 1 1604 3 is_stmt 1 view .LVU544
 1721              	.LBB290:
 1722              	.LBI290:
1585:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1723              		.loc 1 1585 12 view .LVU545
 1724              	.LBB291:
1590:src/keys.c    **** #endif
 1725              		.loc 1 1590 2 view .LVU546
1590:src/keys.c    **** #endif
 1726              		.loc 1 1590 41 is_stmt 0 view .LVU547
 1727 001c 032B     		cmp	r3, #3
 1728 001e 0CD0     		beq	.L173
1590:src/keys.c    **** #endif
 1729              		.loc 1 1590 24 view .LVU548
 1730 0020 0A2B     		cmp	r3, #10
 1731 0022 0AD0     		beq	.L173
 1732              	.LVL136:
 1733              	.LBB292:
 1734              	.LBI292:
1585:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1735              		.loc 1 1585 12 is_stmt 1 view .LVU549
 1736              	.LBB293:
1590:src/keys.c    **** #endif
 1737              		.loc 1 1590 41 is_stmt 0 view .LVU550
ARM GAS  /tmp/ccizbp1a.s 			page 86


 1738 0024 19B1     		cbz	r1, .L175
1590:src/keys.c    **** #endif
 1739              		.loc 1 1590 51 view .LVU551
 1740 0026 152B     		cmp	r3, #21
 1741 0028 07D0     		beq	.L173
1590:src/keys.c    **** #endif
 1742              		.loc 1 1590 70 view .LVU552
 1743 002a 1A2B     		cmp	r3, #26
 1744 002c 05D0     		beq	.L173
 1745              	.LVL137:
 1746              	.L175:
1590:src/keys.c    **** #endif
 1747              		.loc 1 1590 70 view .LVU553
 1748              	.LBE293:
 1749              	.LBE292:
 1750              	.LBE291:
 1751              	.LBE290:
1609:src/keys.c    **** }
 1752              		.loc 1 1609 9 view .LVU554
 1753 002e 0020     		movs	r0, #0
 1754              	.LVL138:
1610:src/keys.c    **** 
 1755              		.loc 1 1610 1 view .LVU555
 1756 0030 7047     		bx	lr
 1757              	.LVL139:
 1758              	.L169:
1598:src/keys.c    **** 		return 1;
 1759              		.loc 1 1598 3 is_stmt 1 view .LVU556
1598:src/keys.c    **** 		return 1;
 1760              		.loc 1 1598 11 is_stmt 0 view .LVU557
 1761 0032 1844     		add	r0, r0, r3
 1762              	.LVL140:
1598:src/keys.c    **** 		return 1;
 1763              		.loc 1 1598 11 view .LVU558
 1764 0034 D077     		strb	r0, [r2, #31]
1599:src/keys.c    **** 	}
 1765              		.loc 1 1599 3 is_stmt 1 view .LVU559
1599:src/keys.c    **** 	}
 1766              		.loc 1 1599 10 is_stmt 0 view .LVU560
 1767 0036 0120     		movs	r0, #1
 1768 0038 7047     		bx	lr
 1769              	.LVL141:
 1770              	.L173:
1605:src/keys.c    **** 			return 1;
 1771              		.loc 1 1605 4 is_stmt 1 view .LVU561
1605:src/keys.c    **** 			return 1;
 1772              		.loc 1 1605 12 is_stmt 0 view .LVU562
 1773 003a D377     		strb	r3, [r2, #31]
1606:src/keys.c    **** 		}
 1774              		.loc 1 1606 4 is_stmt 1 view .LVU563
1606:src/keys.c    **** 		}
 1775              		.loc 1 1606 11 is_stmt 0 view .LVU564
 1776 003c 0120     		movs	r0, #1
 1777              	.LVL142:
1606:src/keys.c    **** 		}
 1778              		.loc 1 1606 11 view .LVU565
 1779 003e 7047     		bx	lr
ARM GAS  /tmp/ccizbp1a.s 			page 87


 1780              	.L201:
 1781              		.align	2
 1782              	.L200:
 1783 0040 00000000 		.word	StateWhileOn
 1784              		.cfi_endproc
 1785              	.LFE34:
 1787              		.section	.text.process_arg,"ax",%progbits
 1788              		.align	1
 1789              		.p2align 2,,3
 1790              		.syntax unified
 1791              		.thumb
 1792              		.thumb_func
 1793              		.fpu fpv4-sp-d16
 1795              	process_arg:
 1796              	.LVL143:
 1797              	.LFB37:
1644:src/keys.c    **** 	unsigned int base = CmdBase;
 1798              		.loc 1 1644 41 is_stmt 1 view -0
 1799              		.cfi_startproc
 1800              		@ args = 0, pretend = 0, frame = 8
 1801              		@ frame_needed = 0, uses_anonymous_args = 0
1645:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1802              		.loc 1 1645 2 view .LVU567
1644:src/keys.c    **** 	unsigned int base = CmdBase;
 1803              		.loc 1 1644 41 is_stmt 0 view .LVU568
 1804 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1805              		.cfi_def_cfa_offset 36
 1806              		.cfi_offset 4, -36
 1807              		.cfi_offset 5, -32
 1808              		.cfi_offset 6, -28
 1809              		.cfi_offset 7, -24
 1810              		.cfi_offset 8, -20
 1811              		.cfi_offset 9, -16
 1812              		.cfi_offset 10, -12
 1813              		.cfi_offset 11, -8
 1814              		.cfi_offset 14, -4
1645:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1815              		.loc 1 1645 22 view .LVU569
 1816 0004 AC4C     		ldr	r4, .L317
1647:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1817              		.loc 1 1647 31 view .LVU570
 1818 0006 DFF8C0B2 		ldr	fp, .L317+16
1645:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1819              		.loc 1 1645 22 view .LVU571
 1820 000a E77F     		ldrb	r7, [r4, #31]	@ zero_extendqisi2
 1821              	.LVL144:
1646:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
 1822              		.loc 1 1646 2 is_stmt 1 view .LVU572
 1823              	.LBB315:
 1824              	.LBB316:
 1825              	.LBB317:
 1826              	.LBB318:
 131:src/keys.c    **** }
 1827              		.loc 1 131 23 is_stmt 0 view .LVU573
 1828 000c AB4B     		ldr	r3, .L317+4
 1829              	.LBE318:
 1830              	.LBE317:
ARM GAS  /tmp/ccizbp1a.s 			page 88


 221:src/keys.c    **** }
 1831              		.loc 1 221 28 view .LVU574
 1832 000e AC4A     		ldr	r2, .L317+8
 1833              	.LBB321:
 1834              	.LBB319:
 131:src/keys.c    **** }
 1835              		.loc 1 131 23 view .LVU575
 1836 0010 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 1837              	.LBE319:
 1838              	.LBE321:
 1839              	.LBE316:
 1840              	.LBE315:
1647:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1841              		.loc 1 1647 31 view .LVU576
 1842 0012 0BEB0711 		add	r1, fp, r7, lsl #4
1644:src/keys.c    **** 	unsigned int base = CmdBase;
 1843              		.loc 1 1644 41 view .LVU577
 1844 0016 83B0     		sub	sp, sp, #12
 1845              		.cfi_def_cfa_offset 48
1647:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1846              		.loc 1 1647 31 view .LVU578
 1847 0018 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 1848              	.LBB325:
 1849              	.LBB323:
 221:src/keys.c    **** }
 1850              		.loc 1 221 28 view .LVU579
 1851 001a 12F80390 		ldrb	r9, [r2, r3]	@ zero_extendqisi2
 1852              	.LBE323:
 1853              	.LBE325:
1647:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1854              		.loc 1 1647 31 view .LVU580
 1855 001e C1F38003 		ubfx	r3, r1, #2, #1
 1856 0022 0193     		str	r3, [sp, #4]
1647:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1857              		.loc 1 1647 40 view .LVU581
 1858 0024 4B07     		lsls	r3, r1, #29
 1859 0026 58BF     		it	pl
 1860 0028 94F91580 		ldrsbpl	r8, [r4, #21]
1648:src/keys.c    **** 	const enum shifts shift = reset_shift();
 1861              		.loc 1 1648 20 view .LVU582
 1862 002c 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 1863 002e 0093     		str	r3, [sp]
1647:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1864              		.loc 1 1647 40 view .LVU583
 1865 0030 54BF     		ite	pl
 1866 0032 4FEAD878 		lsrpl	r8, r8, #31
 1867 0036 4FF00108 		movmi	r8, #1
1644:src/keys.c    **** 	unsigned int base = CmdBase;
 1868              		.loc 1 1644 41 view .LVU584
 1869 003a 0646     		mov	r6, r0
 1870              	.LVL145:
 1871              	.LBB326:
 1872              	.LBI315:
 198:src/keys.c    **** {
 1873              		.loc 1 198 14 is_stmt 1 view .LVU585
 1874              	.LBB324:
 200:src/keys.c    ****     // K00 - K05
ARM GAS  /tmp/ccizbp1a.s 			page 89


 1875              		.loc 1 200 3 view .LVU586
 221:src/keys.c    **** }
 1876              		.loc 1 221 3 view .LVU587
 1877              	.LBB322:
 1878              	.LBI317:
 119:src/keys.c    **** {
 1879              		.loc 1 119 12 view .LVU588
 1880              	.LBB320:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 1881              		.loc 1 121 2 view .LVU589
 131:src/keys.c    **** }
 1882              		.loc 1 131 2 view .LVU590
 131:src/keys.c    **** }
 1883              		.loc 1 131 2 is_stmt 0 view .LVU591
 1884              	.LBE320:
 1885              	.LBE322:
 221:src/keys.c    **** }
 1886              		.loc 1 221 10 view .LVU592
 1887 003c 4D46     		mov	r5, r9
 1888              	.LVL146:
 221:src/keys.c    **** }
 1889              		.loc 1 221 10 view .LVU593
 1890              	.LBE324:
 1891              	.LBE326:
1647:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1892              		.loc 1 1647 2 is_stmt 1 view .LVU594
1648:src/keys.c    **** 	const enum shifts shift = reset_shift();
 1893              		.loc 1 1648 2 view .LVU595
1649:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
 1894              		.loc 1 1649 2 view .LVU596
 1895              	.LBB327:
 1896              	.LBI327:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 1897              		.loc 1 102 13 view .LVU597
 1898              	.LBE327:
 103:src/keys.c    **** }
 1899              		.loc 1 103 2 view .LVU598
 1900              	.LBB342:
 1901              	.LBB328:
 1902              	.LBI328:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 1903              		.loc 1 92 20 view .LVU599
 1904              	.LBB329:
  93:src/keys.c    **** 	State2.shifts = shift;
 1905              		.loc 1 93 2 view .LVU600
 1906              	.LBB330:
 1907              	.LBI330:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 1908              		.loc 1 84 13 view .LVU601
 1909              	.LBB331:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1910              		.loc 1 85 2 view .LVU602
 1911              	.LBE331:
 1912              	.LBE330:
 1913              	.LBE329:
 1914              	.LBE328:
 1915              	.LBE342:
ARM GAS  /tmp/ccizbp1a.s 			page 90


1647:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1916              		.loc 1 1647 31 is_stmt 0 view .LVU603
 1917 003e 4FEA071A 		lsl	r10, r7, #4
 1918              	.LBB343:
 1919              	.LBB338:
 1920              	.LBB334:
 1921              	.LBB333:
 1922              	.LBB332:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1923              		.loc 1 85 18 view .LVU604
 1924 0042 FFF7FEFF 		bl	shift_down
 1925              	.LVL147:
  86:src/keys.c    **** }
 1926              		.loc 1 86 2 is_stmt 1 view .LVU605
  86:src/keys.c    **** }
 1927              		.loc 1 86 52 is_stmt 0 view .LVU606
 1928 0046 00B9     		cbnz	r0, .L204
 1929 0048 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
 1930              	.LVL148:
 1931              	.L204:
  86:src/keys.c    **** }
 1932              		.loc 1 86 52 view .LVU607
 1933              	.LBE332:
 1934              	.LBE333:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 1935              		.loc 1 94 2 is_stmt 1 view .LVU608
 1936              	.LBE334:
 1937              	.LBE338:
 1938              	.LBE343:
1650:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1939              		.loc 1 1650 38 is_stmt 0 view .LVU609
 1940 004a 0BEB0A01 		add	r1, fp, r10
 1941              	.LBB344:
 1942              	.LBB339:
 1943              	.LBB335:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 1944              		.loc 1 94 16 view .LVU610
 1945 004e 4FF0000C 		mov	ip, #0
 1946              	.LBE335:
 1947              	.LBE339:
 1948              	.LBE344:
1650:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1949              		.loc 1 1650 38 view .LVU611
 1950 0052 91F805E0 		ldrb	lr, [r1, #5]	@ zero_extendqisi2
 1951              	.LBB345:
 1952              	.LBB340:
 1953              	.LBB336:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 1954              		.loc 1 94 16 view .LVU612
 1955 0056 84F810C0 		strb	ip, [r4, #16]
  95:src/keys.c    **** 	return r;
 1956              		.loc 1 95 2 is_stmt 1 view .LVU613
 1957              	.LBE336:
 1958              	.LBE340:
 1959              	.LBE345:
1650:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1960              		.loc 1 1650 61 is_stmt 0 view .LVU614
ARM GAS  /tmp/ccizbp1a.s 			page 91


 1961 005a 1EF0200F 		tst	lr, #32
1650:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1962              		.loc 1 1650 38 view .LVU615
 1963 005e CEF34011 		ubfx	r1, lr, #5, #1
 1964              	.LBB346:
 1965              	.LBB341:
 1966              	.LBB337:
  95:src/keys.c    **** 	return r;
 1967              		.loc 1 95 19 view .LVU616
 1968 0062 84F80DC0 		strb	ip, [r4, #13]
  96:src/keys.c    **** }
 1969              		.loc 1 96 2 is_stmt 1 view .LVU617
 1970              	.LVL149:
  96:src/keys.c    **** }
 1971              		.loc 1 96 2 is_stmt 0 view .LVU618
 1972              	.LBE337:
 1973              	.LBE341:
 1974              	.LBE346:
1650:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1975              		.loc 1 1650 2 is_stmt 1 view .LVU619
1650:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1976              		.loc 1 1650 61 is_stmt 0 view .LVU620
 1977 0066 47D0     		beq	.L205
1650:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1978              		.loc 1 1650 61 discriminator 1 view .LVU621
 1979 0068 94F815E0 		ldrb	lr, [r4, #21]	@ zero_extendqisi2
 1980 006c 1EF0C00F 		tst	lr, #192
 1981 0070 57D1     		bne	.L206
 1982              	.LVL150:
1651:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 1983              		.loc 1 1651 2 is_stmt 1 view .LVU622
1651:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 1984              		.loc 1 1651 35 is_stmt 0 view .LVU623
 1985 0072 292E     		cmp	r6, #41
 1986 0074 7DD0     		beq	.L207
1652:src/keys.c    **** 
 1987              		.loc 1 1652 11 view .LVU624
 1988 0076 0128     		cmp	r0, #1
 1989 0078 00F09280 		beq	.L208
1652:src/keys.c    **** 
 1990              		.loc 1 1652 32 discriminator 3 view .LVU625
 1991 007c B9F1090F 		cmp	r9, #9
 1992 0080 00F28B80 		bhi	.L209
 1993              	.LVL151:
1654:src/keys.c    **** 	if (base >= NUM_RARG) {
 1994              		.loc 1 1654 2 is_stmt 1 view .LVU626
1655:src/keys.c    **** 		reset_arg();
 1995              		.loc 1 1655 2 view .LVU627
1655:src/keys.c    **** 		reset_arg();
 1996              		.loc 1 1655 5 is_stmt 0 view .LVU628
 1997 0084 8C2F     		cmp	r7, #140
 1998 0086 50D8     		bhi	.L266
1660:src/keys.c    **** 	  switch (n) {
 1999              		.loc 1 1660 35 view .LVU629
 2000 0088 6069     		ldr	r0, [r4, #20]
 2001              	.LVL152:
1660:src/keys.c    **** 	  switch (n) {
ARM GAS  /tmp/ccizbp1a.s 			page 92


 2002              		.loc 1 1660 35 view .LVU630
 2003 008a 10F4103F 		tst	r0, #147456
1650:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2004              		.loc 1 1650 61 view .LVU631
 2005 008e 4FF0010C 		mov	ip, #1
1660:src/keys.c    **** 	  switch (n) {
 2006              		.loc 1 1660 35 view .LVU632
 2007 0092 7BD0     		beq	.L270
 2008              	.LVL153:
 2009              	.L217:
1683:src/keys.c    **** 		// row column shorthand addressing
 2010              		.loc 1 1683 2 is_stmt 1 view .LVU633
1708:src/keys.c    **** 	case K_F:
 2011              		.loc 1 1708 2 view .LVU634
 2012 0094 2D2E     		cmp	r6, #45
 2013 0096 4AD8     		bhi	.L304
 2014 0098 DFE816F0 		tbh	[pc, r6, lsl #1]
 2015              	.L268:
 2016 009c 4D00     		.2byte	(.L232-.L268)/2
 2017 009e 4D00     		.2byte	(.L232-.L268)/2
 2018 00a0 4D00     		.2byte	(.L232-.L268)/2
 2019 00a2 4D00     		.2byte	(.L232-.L268)/2
 2020 00a4 4900     		.2byte	(.L304-.L268)/2
 2021 00a6 4900     		.2byte	(.L304-.L268)/2
 2022 00a8 4900     		.2byte	(.L304-.L268)/2
 2023 00aa 4900     		.2byte	(.L304-.L268)/2
 2024 00ac 4D00     		.2byte	(.L232-.L268)/2
 2025 00ae 4D00     		.2byte	(.L232-.L268)/2
 2026 00b0 4D00     		.2byte	(.L232-.L268)/2
 2027 00b2 4D00     		.2byte	(.L232-.L268)/2
 2028 00b4 D700     		.2byte	(.L255-.L268)/2
 2029 00b6 4900     		.2byte	(.L304-.L268)/2
 2030 00b8 4900     		.2byte	(.L304-.L268)/2
 2031 00ba 4900     		.2byte	(.L304-.L268)/2
 2032 00bc 6901     		.2byte	(.L262-.L268)/2
 2033 00be 4900     		.2byte	(.L304-.L268)/2
 2034 00c0 DD00     		.2byte	(.L253-.L268)/2
 2035 00c2 4900     		.2byte	(.L304-.L268)/2
 2036 00c4 4900     		.2byte	(.L304-.L268)/2
 2037 00c6 4900     		.2byte	(.L304-.L268)/2
 2038 00c8 6301     		.2byte	(.L252-.L268)/2
 2039 00ca 4900     		.2byte	(.L304-.L268)/2
 2040 00cc 5701     		.2byte	(.L254-.L268)/2
 2041 00ce 5D01     		.2byte	(.L231-.L268)/2
 2042 00d0 4900     		.2byte	(.L304-.L268)/2
 2043 00d2 4900     		.2byte	(.L304-.L268)/2
 2044 00d4 9800     		.2byte	(.L249-.L268)/2
 2045 00d6 4900     		.2byte	(.L304-.L268)/2
 2046 00d8 4900     		.2byte	(.L304-.L268)/2
 2047 00da 4101     		.2byte	(.L233-.L268)/2
 2048 00dc 4B01     		.2byte	(.L234-.L268)/2
 2049 00de 5101     		.2byte	(.L235-.L268)/2
 2050 00e0 E300     		.2byte	(.L246-.L268)/2
 2051 00e2 4900     		.2byte	(.L304-.L268)/2
 2052 00e4 4700     		.2byte	(.L266-.L268)/2
 2053 00e6 4900     		.2byte	(.L304-.L268)/2
 2054 00e8 EF00     		.2byte	(.L239-.L268)/2
ARM GAS  /tmp/ccizbp1a.s 			page 93


 2055 00ea 4900     		.2byte	(.L304-.L268)/2
 2056 00ec 1801     		.2byte	(.L243-.L268)/2
 2057 00ee B000     		.2byte	(.L225-.L268)/2
 2058 00f0 4900     		.2byte	(.L304-.L268)/2
 2059 00f2 4900     		.2byte	(.L304-.L268)/2
 2060 00f4 2701     		.2byte	(.L227-.L268)/2
 2061 00f6 C800     		.2byte	(.L229-.L268)/2
 2062              	.LVL154:
 2063              		.p2align 1
 2064              	.L205:
1654:src/keys.c    **** 	if (base >= NUM_RARG) {
 2065              		.loc 1 1654 2 view .LVU635
1655:src/keys.c    **** 		reset_arg();
 2066              		.loc 1 1655 5 is_stmt 0 view .LVU636
 2067 00f8 8C2F     		cmp	r7, #140
1654:src/keys.c    **** 	if (base >= NUM_RARG) {
 2068              		.loc 1 1654 4 view .LVU637
 2069 00fa 29F08005 		bic	r5, r9, #128
 2070              	.LVL155:
1655:src/keys.c    **** 		reset_arg();
 2071              		.loc 1 1655 2 is_stmt 1 view .LVU638
1655:src/keys.c    **** 		reset_arg();
 2072              		.loc 1 1655 5 is_stmt 0 view .LVU639
 2073 00fe 14D8     		bhi	.L266
1650:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2074              		.loc 1 1650 61 view .LVU640
 2075 0100 8C46     		mov	ip, r1
 2076              	.L214:
1660:src/keys.c    **** 	  switch (n) {
 2077              		.loc 1 1660 35 discriminator 1 view .LVU641
 2078 0102 6069     		ldr	r0, [r4, #20]
 2079              	.LVL156:
1660:src/keys.c    **** 	  switch (n) {
 2080              		.loc 1 1660 35 discriminator 1 view .LVU642
 2081 0104 10F4103F 		tst	r0, #147456
 2082 0108 C4D1     		bne	.L217
1661:src/keys.c    **** 	  case regX_idx:
 2083              		.loc 1 1661 4 is_stmt 1 view .LVU643
 2084 010a 672D     		cmp	r5, #103
 2085 010c C2D8     		bhi	.L217
 2086              	.LVL157:
 2087              	.L269:
1661:src/keys.c    **** 	  case regX_idx:
 2088              		.loc 1 1661 4 is_stmt 0 view .LVU644
 2089 010e 632D     		cmp	r5, #99
 2090 0110 3CD9     		bls	.L270
 2091 0112 653D     		subs	r5, r5, #101
 2092 0114 022D     		cmp	r5, #2
 2093 0116 00F2AA81 		bhi	.L220
 2094 011a DFE805F0 		tbb	[pc, r5]
 2095              	.L222:
 2096 011e 6B       		.byte	(.L224-.L222)/2
 2097 011f 65       		.byte	(.L223-.L222)/2
 2098 0120 6D       		.byte	(.L221-.L222)/2
 2099              	.LVL158:
 2100 0121 00       		.p2align 1
 2101              	.L206:
ARM GAS  /tmp/ccizbp1a.s 			page 94


1654:src/keys.c    **** 	if (base >= NUM_RARG) {
 2102              		.loc 1 1654 2 is_stmt 1 view .LVU645
1655:src/keys.c    **** 		reset_arg();
 2103              		.loc 1 1655 5 is_stmt 0 view .LVU646
 2104 0122 8C2F     		cmp	r7, #140
1654:src/keys.c    **** 	if (base >= NUM_RARG) {
 2105              		.loc 1 1654 4 view .LVU647
 2106 0124 29F08005 		bic	r5, r9, #128
 2107              	.LVL159:
1655:src/keys.c    **** 		reset_arg();
 2108              		.loc 1 1655 2 is_stmt 1 view .LVU648
1655:src/keys.c    **** 		reset_arg();
 2109              		.loc 1 1655 5 is_stmt 0 view .LVU649
 2110 0128 EBD9     		bls	.L214
 2111              	.LVL160:
 2112              	.L266:
1875:src/keys.c    **** 	default:
 2113              		.loc 1 1875 3 is_stmt 1 view .LVU650
 2114 012a FFF7FEFF 		bl	reset_arg
 2115              	.LVL161:
 2116              	.L304:
1879:src/keys.c    **** }
 2117              		.loc 1 1879 9 is_stmt 0 view .LVU651
 2118 012e 3320     		movs	r0, #51
 2119              	.L202:
1880:src/keys.c    **** 
 2120              		.loc 1 1880 1 view .LVU652
 2121 0130 03B0     		add	sp, sp, #12
 2122              		.cfi_remember_state
 2123              		.cfi_def_cfa_offset 36
 2124              	.LVL162:
1880:src/keys.c    **** 
 2125              		.loc 1 1880 1 view .LVU653
 2126              		@ sp needed
 2127 0132 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2128              	.LVL163:
 2129              	.L232:
 2130              		.cfi_restore_state
1763:src/keys.c    **** 			return arg_eval(n);
 2131              		.loc 1 1763 4 is_stmt 1 view .LVU654
1763:src/keys.c    **** 			return arg_eval(n);
 2132              		.loc 1 1763 8 is_stmt 0 view .LVU655
 2133 0136 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1763:src/keys.c    **** 			return arg_eval(n);
 2134              		.loc 1 1763 7 view .LVU656
 2135 0138 5F06     		lsls	r7, r3, #25
 2136              	.LVL164:
1763:src/keys.c    **** 			return arg_eval(n);
 2137              		.loc 1 1763 7 view .LVU657
 2138 013a 53D4     		bmi	.L251
1763:src/keys.c    **** 			return arg_eval(n);
 2139              		.loc 1 1763 19 discriminator 1 view .LVU658
 2140 013c B8F1000F 		cmp	r8, #0
 2141 0140 50D1     		bne	.L251
1765:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 2142              		.loc 1 1765 3 is_stmt 1 view .LVU659
1765:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
ARM GAS  /tmp/ccizbp1a.s 			page 95


 2143              		.loc 1 1765 6 is_stmt 0 view .LVU660
 2144 0142 032E     		cmp	r6, #3
 2145 0144 F3D8     		bhi	.L304
1766:src/keys.c    **** 		break;
 2146              		.loc 1 1766 4 is_stmt 1 view .LVU661
 2147              	.LVL165:
 2148              	.LBB347:
 2149              	.LBI347:
1571:src/keys.c    **** 	const unsigned int b = CmdBase;
 2150              		.loc 1 1571 12 view .LVU662
 2151              	.LBB348:
1572:src/keys.c    **** 
 2152              		.loc 1 1572 2 view .LVU663
1572:src/keys.c    **** 
 2153              		.loc 1 1572 21 is_stmt 0 view .LVU664
 2154 0146 E27F     		ldrb	r2, [r4, #31]	@ zero_extendqisi2
 2155              	.LVL166:
1574:src/keys.c    **** 	{
 2156              		.loc 1 1574 2 is_stmt 1 view .LVU665
1574:src/keys.c    **** 	{
 2157              		.loc 1 1574 16 is_stmt 0 view .LVU666
 2158 0148 0BEB0210 		add	r0, fp, r2, lsl #4
 2159 014c 1101     		lsls	r1, r2, #4
 2160 014e 4079     		ldrb	r0, [r0, #5]	@ zero_extendqisi2
1574:src/keys.c    **** 	{
 2161              		.loc 1 1574 5 view .LVU667
 2162 0150 8006     		lsls	r0, r0, #26
 2163 0152 02D4     		bmi	.L238
1574:src/keys.c    **** 	{
 2164              		.loc 1 1574 40 view .LVU668
 2165 0154 513A     		subs	r2, r2, #81
 2166              	.LVL167:
1574:src/keys.c    **** 	{
 2167              		.loc 1 1574 23 view .LVU669
 2168 0156 0A2A     		cmp	r2, #10
 2169 0158 E9D8     		bhi	.L304
 2170              	.LVL168:
 2171              	.L238:
1576:src/keys.c    **** 			return STATE_UNFINISHED;
 2172              		.loc 1 1576 3 is_stmt 1 view .LVU670
1576:src/keys.c    **** 			return STATE_UNFINISHED;
 2173              		.loc 1 1576 6 is_stmt 0 view .LVU671
 2174 015a 1F06     		lsls	r7, r3, #24
 2175 015c E7D4     		bmi	.L304
1576:src/keys.c    **** 			return STATE_UNFINISHED;
 2176              		.loc 1 1576 18 view .LVU672
 2177 015e E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 2178 0160 002B     		cmp	r3, #0
 2179 0162 E4D1     		bne	.L304
1578:src/keys.c    **** 			return STATE_UNFINISHED;
 2180              		.loc 1 1578 3 is_stmt 1 view .LVU673
1578:src/keys.c    **** 			return STATE_UNFINISHED;
 2181              		.loc 1 1578 17 is_stmt 0 view .LVU674
 2182 0164 5944     		add	r1, r1, fp
1578:src/keys.c    **** 			return STATE_UNFINISHED;
 2183              		.loc 1 1578 6 view .LVU675
 2184 0166 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
ARM GAS  /tmp/ccizbp1a.s 			page 96


 2185 0168 632B     		cmp	r3, #99
 2186 016a E0D9     		bls	.L304
1580:src/keys.c    **** 	}
 2187              		.loc 1 1580 3 is_stmt 1 view .LVU676
1580:src/keys.c    **** 	}
 2188              		.loc 1 1580 10 is_stmt 0 view .LVU677
 2189 016c 06F16400 		add	r0, r6, #100
 2190 0170 27E0     		b	.L306
 2191              	.LVL169:
 2192              	.L207:
1580:src/keys.c    **** 	}
 2193              		.loc 1 1580 10 view .LVU678
 2194              	.LBE348:
 2195              	.LBE347:
1654:src/keys.c    **** 	if (base >= NUM_RARG) {
 2196              		.loc 1 1654 2 is_stmt 1 view .LVU679
1655:src/keys.c    **** 		reset_arg();
 2197              		.loc 1 1655 2 view .LVU680
1655:src/keys.c    **** 		reset_arg();
 2198              		.loc 1 1655 5 is_stmt 0 view .LVU681
 2199 0172 8C2F     		cmp	r7, #140
 2200 0174 D9D8     		bhi	.L266
1660:src/keys.c    **** 	  switch (n) {
 2201              		.loc 1 1660 35 view .LVU682
 2202 0176 6069     		ldr	r0, [r4, #20]
 2203              	.LVL170:
1660:src/keys.c    **** 	  switch (n) {
 2204              		.loc 1 1660 35 view .LVU683
 2205 0178 10F4103F 		tst	r0, #147456
 2206 017c 41D1     		bne	.L226
1654:src/keys.c    **** 	if (base >= NUM_RARG) {
 2207              		.loc 1 1654 4 view .LVU684
 2208 017e 29F08005 		bic	r5, r9, #128
1661:src/keys.c    **** 	  case regX_idx:
 2209              		.loc 1 1661 4 is_stmt 1 view .LVU685
 2210 0182 672D     		cmp	r5, #103
 2211 0184 3DD8     		bhi	.L226
1650:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2212              		.loc 1 1650 61 is_stmt 0 view .LVU686
 2213 0186 4FF0010C 		mov	ip, #1
 2214 018a C0E7     		b	.L269
 2215              	.LVL171:
 2216              	.L270:
1661:src/keys.c    **** 	  case regX_idx:
 2217              		.loc 1 1661 4 view .LVU687
 2218 018c 1DB1     		cbz	r5, .L219
 2219 018e 6B1F     		subs	r3, r5, #5
 2220 0190 042B     		cmp	r3, #4
 2221 0192 3FF67FAF 		bhi	.L217
 2222              	.L219:
1676:src/keys.c    **** 	  }
 2223              		.loc 1 1676 6 is_stmt 1 view .LVU688
1676:src/keys.c    **** 	  }
 2224              		.loc 1 1676 13 is_stmt 0 view .LVU689
 2225 0196 2846     		mov	r0, r5
 2226 0198 27E0     		b	.L305
 2227              	.LVL172:
ARM GAS  /tmp/ccizbp1a.s 			page 97


 2228              	.L209:
1652:src/keys.c    **** 
 2229              		.loc 1 1652 42 discriminator 4 view .LVU690
 2230 019a 19F0800F 		tst	r9, #128
 2231 019e 3ED1     		bne	.L212
 2232              	.L208:
 2233              	.LVL173:
1654:src/keys.c    **** 	if (base >= NUM_RARG) {
 2234              		.loc 1 1654 2 is_stmt 1 view .LVU691
1655:src/keys.c    **** 		reset_arg();
 2235              		.loc 1 1655 2 view .LVU692
1655:src/keys.c    **** 		reset_arg();
 2236              		.loc 1 1655 5 is_stmt 0 view .LVU693
 2237 01a0 8C2F     		cmp	r7, #140
 2238 01a2 C2D8     		bhi	.L266
1683:src/keys.c    **** 		// row column shorthand addressing
 2239              		.loc 1 1683 2 is_stmt 1 view .LVU694
1685:src/keys.c    **** 
 2240              		.loc 1 1685 3 view .LVU695
 2241              	.LVL174:
 2242              	.LBB349:
 2243              	.LBI349:
 167:src/keys.c    **** {
 2244              		.loc 1 167 5 view .LVU696
 2245              	.LBB350:
 169:src/keys.c    **** }
 2246              		.loc 1 169 2 view .LVU697
 169:src/keys.c    **** }
 2247              		.loc 1 169 18 is_stmt 0 view .LVU698
 2248 01a4 474B     		ldr	r3, .L317+12
 2249 01a6 A3FB0623 		umull	r2, r3, r3, r6
 169:src/keys.c    **** }
 2250              		.loc 1 169 24 view .LVU699
 2251 01aa 03F0FC00 		and	r0, r3, #252
 2252              	.LVL175:
 169:src/keys.c    **** }
 2253              		.loc 1 169 24 view .LVU700
 2254 01ae 00EB9300 		add	r0, r0, r3, lsr #2
 169:src/keys.c    **** }
 2255              		.loc 1 169 18 view .LVU701
 2256 01b2 9B08     		lsrs	r3, r3, #2
 169:src/keys.c    **** }
 2257              		.loc 1 169 24 view .LVU702
 2258 01b4 4000     		lsls	r0, r0, #1
 169:src/keys.c    **** }
 2259              		.loc 1 169 33 view .LVU703
 2260 01b6 03EB4303 		add	r3, r3, r3, lsl #1
 169:src/keys.c    **** }
 2261              		.loc 1 169 12 view .LVU704
 2262 01ba 0B30     		adds	r0, r0, #11
 169:src/keys.c    **** }
 2263              		.loc 1 169 33 view .LVU705
 2264 01bc A6EB4306 		sub	r6, r6, r3, lsl #1
 2265              	.LBE350:
 2266              	.LBE349:
1685:src/keys.c    **** 
 2267              		.loc 1 1685 10 view .LVU706
ARM GAS  /tmp/ccizbp1a.s 			page 98


 2268 01c0 3044     		add	r0, r0, r6
 2269              	.LVL176:
 2270              	.L306:
1880:src/keys.c    **** 
 2271              		.loc 1 1880 1 view .LVU707
 2272 01c2 03B0     		add	sp, sp, #12
 2273              		.cfi_remember_state
 2274              		.cfi_def_cfa_offset 36
 2275              	.LVL177:
1880:src/keys.c    **** 
 2276              		.loc 1 1880 1 view .LVU708
 2277              		@ sp needed
 2278 01c4 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2279              		.cfi_restore 14
 2280              		.cfi_restore 11
 2281              		.cfi_restore 10
 2282              		.cfi_restore 9
 2283              		.cfi_restore 8
 2284              		.cfi_restore 7
 2285              		.cfi_restore 6
 2286              		.cfi_restore 5
 2287              		.cfi_restore 4
 2288              		.cfi_def_cfa_offset 0
 2289              	.LVL178:
1685:src/keys.c    **** 
 2290              		.loc 1 1685 10 view .LVU709
 2291 01c8 FFF7FEBF 		b	arg_eval
 2292              	.LVL179:
 2293              	.L249:
 2294              		.cfi_restore_state
1785:src/keys.c    **** 			return arg_eval(n);
 2295              		.loc 1 1785 3 is_stmt 1 view .LVU710
1785:src/keys.c    **** 			return arg_eval(n);
 2296              		.loc 1 1785 7 is_stmt 0 view .LVU711
 2297 01cc 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1785:src/keys.c    **** 			return arg_eval(n);
 2298              		.loc 1 1785 6 view .LVU712
 2299 01ce 5806     		lsls	r0, r3, #25
 2300 01d0 08D4     		bmi	.L251
1785:src/keys.c    **** 			return arg_eval(n);
 2301              		.loc 1 1785 25 discriminator 1 view .LVU713
 2302 01d2 0121     		movs	r1, #1
 2303 01d4 0320     		movs	r0, #3
 2304 01d6 FFF7FEFF 		bl	arg_storcl
 2305              	.LVL180:
1785:src/keys.c    **** 			return arg_eval(n);
 2306              		.loc 1 1785 18 discriminator 1 view .LVU714
 2307 01da 0028     		cmp	r0, #0
 2308 01dc A7D1     		bne	.L304
1785:src/keys.c    **** 			return arg_eval(n);
 2309              		.loc 1 1785 63 discriminator 2 view .LVU715
 2310 01de B8F1000F 		cmp	r8, #0
 2311 01e2 A4D0     		beq	.L304
 2312              	.LVL181:
 2313              	.L251:
1786:src/keys.c    **** 		break;
 2314              		.loc 1 1786 4 is_stmt 1 view .LVU716
ARM GAS  /tmp/ccizbp1a.s 			page 99


1786:src/keys.c    **** 		break;
 2315              		.loc 1 1786 11 is_stmt 0 view .LVU717
 2316 01e4 2846     		mov	r0, r5
 2317 01e6 ECE7     		b	.L306
 2318              	.LVL182:
 2319              	.L223:
1667:src/keys.c    **** 	  case regT_idx:
 2320              		.loc 1 1667 6 is_stmt 1 view .LVU718
1667:src/keys.c    **** 	  case regT_idx:
 2321              		.loc 1 1667 13 is_stmt 0 view .LVU719
 2322 01e8 0320     		movs	r0, #3
 2323              	.L305:
1880:src/keys.c    **** 
 2324              		.loc 1 1880 1 view .LVU720
 2325 01ea 03B0     		add	sp, sp, #12
 2326              		.cfi_remember_state
 2327              		.cfi_def_cfa_offset 36
 2328              	.LVL183:
1880:src/keys.c    **** 
 2329              		.loc 1 1880 1 view .LVU721
 2330              		@ sp needed
 2331 01ec BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2332              		.cfi_restore 14
 2333              		.cfi_restore 11
 2334              		.cfi_restore 10
 2335              		.cfi_restore 9
 2336              		.cfi_restore 8
 2337              		.cfi_restore 7
 2338              		.cfi_restore 6
 2339              		.cfi_restore 5
 2340              		.cfi_restore 4
 2341              		.cfi_def_cfa_offset 0
 2342              	.LVL184:
1665:src/keys.c    **** 	  case regZ_idx:
 2343              		.loc 1 1665 13 view .LVU722
 2344 01f0 FFF7FEBF 		b	arg_digit
 2345              	.LVL185:
 2346              	.L224:
 2347              		.cfi_restore_state
1665:src/keys.c    **** 	  case regZ_idx:
 2348              		.loc 1 1665 6 is_stmt 1 view .LVU723
1665:src/keys.c    **** 	  case regZ_idx:
 2349              		.loc 1 1665 13 is_stmt 0 view .LVU724
 2350 01f4 0220     		movs	r0, #2
 2351 01f6 F8E7     		b	.L305
 2352              	.L221:
1669:src/keys.c    **** 	  case 5:
 2353              		.loc 1 1669 6 is_stmt 1 view .LVU725
1669:src/keys.c    **** 	  case 5:
 2354              		.loc 1 1669 13 is_stmt 0 view .LVU726
 2355 01f8 0420     		movs	r0, #4
 2356 01fa F6E7     		b	.L305
 2357              	.L225:
1710:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 2358              		.loc 1 1710 3 is_stmt 1 view .LVU727
1710:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 2359              		.loc 1 1710 6 is_stmt 0 view .LVU728
ARM GAS  /tmp/ccizbp1a.s 			page 100


 2360 01fc BCF1000F 		cmp	ip, #0
 2361 0200 95D0     		beq	.L304
 2362              	.L226:
1711:src/keys.c    **** 		break;
 2363              		.loc 1 1711 4 is_stmt 1 view .LVU729
 2364              	.LVL186:
 2365              	.LBB351:
 2366              	.LBI351:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 2367              		.loc 1 92 20 view .LVU730
 2368              	.LBB352:
  93:src/keys.c    **** 	State2.shifts = shift;
 2369              		.loc 1 93 2 view .LVU731
 2370              	.LBB353:
 2371              	.LBI353:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 2372              		.loc 1 84 13 view .LVU732
 2373              	.LBB354:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2374              		.loc 1 85 2 view .LVU733
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2375              		.loc 1 85 18 is_stmt 0 view .LVU734
 2376 0202 FFF7FEFF 		bl	shift_down
 2377              	.LVL187:
  86:src/keys.c    **** }
 2378              		.loc 1 86 2 is_stmt 1 view .LVU735
 2379              	.LBE354:
 2380              	.LBE353:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 2381              		.loc 1 94 2 view .LVU736
 2382              	.LBE352:
 2383              	.LBE351:
1711:src/keys.c    **** 		break;
 2384              		.loc 1 1711 4 is_stmt 0 view .LVU737
 2385 0206 009B     		ldr	r3, [sp]
 2386 0208 B3F10109 		subs	r9, r3, #1
 2387 020c 18BF     		it	ne
 2388 020e 4FF00109 		movne	r9, #1
 2389              	.LBB358:
 2390              	.LBB355:
  95:src/keys.c    **** 	return r;
 2391              		.loc 1 95 19 view .LVU738
 2392 0212 0023     		movs	r3, #0
 2393              	.LBE355:
 2394              	.LBE358:
1711:src/keys.c    **** 		break;
 2395              		.loc 1 1711 4 view .LVU739
 2396 0214 84F81090 		strb	r9, [r4, #16]
 2397              	.LBB359:
 2398              	.LBB356:
  95:src/keys.c    **** 	return r;
 2399              		.loc 1 95 2 is_stmt 1 view .LVU740
  95:src/keys.c    **** 	return r;
 2400              		.loc 1 95 19 is_stmt 0 view .LVU741
 2401 0218 6373     		strb	r3, [r4, #13]
  96:src/keys.c    **** }
 2402              		.loc 1 96 2 is_stmt 1 view .LVU742
ARM GAS  /tmp/ccizbp1a.s 			page 101


 2403              	.LBE356:
 2404              	.LBE359:
1879:src/keys.c    **** }
 2405              		.loc 1 1879 9 is_stmt 0 view .LVU743
 2406 021a 3320     		movs	r0, #51
 2407              	.LBB360:
 2408              	.LBB357:
  96:src/keys.c    **** }
 2409              		.loc 1 96 9 view .LVU744
 2410 021c 88E7     		b	.L202
 2411              	.LVL188:
 2412              	.L212:
  96:src/keys.c    **** }
 2413              		.loc 1 96 9 view .LVU745
 2414              	.LBE357:
 2415              	.LBE360:
1654:src/keys.c    **** 	if (base >= NUM_RARG) {
 2416              		.loc 1 1654 2 is_stmt 1 view .LVU746
1655:src/keys.c    **** 		reset_arg();
 2417              		.loc 1 1655 5 is_stmt 0 view .LVU747
 2418 021e 8C2F     		cmp	r7, #140
1654:src/keys.c    **** 	if (base >= NUM_RARG) {
 2419              		.loc 1 1654 4 view .LVU748
 2420 0220 29F08005 		bic	r5, r9, #128
 2421              	.LVL189:
1655:src/keys.c    **** 		reset_arg();
 2422              		.loc 1 1655 2 is_stmt 1 view .LVU749
1655:src/keys.c    **** 		reset_arg();
 2423              		.loc 1 1655 5 is_stmt 0 view .LVU750
 2424 0224 81D8     		bhi	.L266
1650:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2425              		.loc 1 1650 61 view .LVU751
 2426 0226 4FF0010C 		mov	ip, #1
 2427 022a 6AE7     		b	.L214
 2428              	.LVL190:
 2429              	.L229:
1723:src/keys.c    **** 			break;
 2430              		.loc 1 1723 3 is_stmt 1 view .LVU752
1723:src/keys.c    **** 			break;
 2431              		.loc 1 1723 18 is_stmt 0 view .LVU753
 2432 022c 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1723:src/keys.c    **** 			break;
 2433              		.loc 1 1723 6 view .LVU754
 2434 022e 13F0C00F 		tst	r3, #192
 2435 0232 7FF47CAF 		bne	.L304
1725:src/keys.c    **** 			CmdBase = RARG_STOM;
 2436              		.loc 1 1725 3 is_stmt 1 view .LVU755
1725:src/keys.c    **** 			CmdBase = RARG_STOM;
 2437              		.loc 1 1725 6 is_stmt 0 view .LVU756
 2438 0236 032F     		cmp	r7, #3
 2439 0238 00F0EE80 		beq	.L310
1727:src/keys.c    **** 			CmdBase = RARG_RCLM;
 2440              		.loc 1 1727 8 is_stmt 1 view .LVU757
1727:src/keys.c    **** 			CmdBase = RARG_RCLM;
 2441              		.loc 1 1727 11 is_stmt 0 view .LVU758
 2442 023c 0A2F     		cmp	r7, #10
 2443 023e 7FF476AF 		bne	.L304
ARM GAS  /tmp/ccizbp1a.s 			page 102


1728:src/keys.c    **** 		break;
 2444              		.loc 1 1728 4 is_stmt 1 view .LVU759
1728:src/keys.c    **** 		break;
 2445              		.loc 1 1728 12 is_stmt 0 view .LVU760
 2446 0242 7823     		movs	r3, #120
 2447 0244 E377     		strb	r3, [r4, #31]
1879:src/keys.c    **** }
 2448              		.loc 1 1879 9 view .LVU761
 2449 0246 3320     		movs	r0, #51
 2450 0248 72E7     		b	.L202
 2451              	.L255:
1833:src/keys.c    **** 			if (argcmds[base].label) {
 2452              		.loc 1 1833 3 is_stmt 1 view .LVU762
1833:src/keys.c    **** 			if (argcmds[base].label) {
 2453              		.loc 1 1833 6 is_stmt 0 view .LVU763
 2454 024a E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 2455 024c 002B     		cmp	r3, #0
 2456 024e 00F0A080 		beq	.L311
1847:src/keys.c    **** 			return arg_eval(State2.digval);
 2457              		.loc 1 1847 10 is_stmt 1 view .LVU764
1848:src/keys.c    **** 		else if (stack_reg)
 2458              		.loc 1 1848 4 view .LVU765
1848:src/keys.c    **** 		else if (stack_reg)
 2459              		.loc 1 1848 11 is_stmt 0 view .LVU766
 2460 0252 2089     		ldrh	r0, [r4, #8]
 2461 0254 B5E7     		b	.L306
 2462              	.L253:
1825:src/keys.c    **** 		break;
 2463              		.loc 1 1825 3 is_stmt 1 view .LVU767
 2464 0256 0021     		movs	r1, #0
 2465 0258 0620     		movs	r0, #6
 2466 025a FFF7FEFF 		bl	arg_storcl
 2467              	.LVL191:
1826:src/keys.c    **** 
 2468              		.loc 1 1826 3 view .LVU768
1879:src/keys.c    **** }
 2469              		.loc 1 1879 9 is_stmt 0 view .LVU769
 2470 025e 3320     		movs	r0, #51
1826:src/keys.c    **** 
 2471              		.loc 1 1826 3 view .LVU770
 2472 0260 66E7     		b	.L202
 2473              	.L246:
1778:src/keys.c    **** 			reset_arg();
 2474              		.loc 1 1778 3 is_stmt 1 view .LVU771
1778:src/keys.c    **** 			reset_arg();
 2475              		.loc 1 1778 6 is_stmt 0 view .LVU772
 2476 0262 212F     		cmp	r7, #33
 2477 0264 00F0C580 		beq	.L247
1778:src/keys.c    **** 			reset_arg();
 2478              		.loc 1 1778 25 discriminator 1 view .LVU773
 2479 0268 732F     		cmp	r7, #115
 2480 026a 00F0C280 		beq	.L247
1782:src/keys.c    **** 		break;
 2481              		.loc 1 1782 3 is_stmt 1 view .LVU774
 2482 026e 0121     		movs	r1, #1
 2483 0270 0220     		movs	r0, #2
 2484 0272 FFF7FEFF 		bl	arg_storcl
ARM GAS  /tmp/ccizbp1a.s 			page 103


 2485              	.LVL192:
1783:src/keys.c    **** 	case K44:		// multiply
 2486              		.loc 1 1783 3 view .LVU775
1879:src/keys.c    **** }
 2487              		.loc 1 1879 9 is_stmt 0 view .LVU776
 2488 0276 3320     		movs	r0, #51
1783:src/keys.c    **** 	case K44:		// multiply
 2489              		.loc 1 1783 3 view .LVU777
 2490 0278 5AE7     		b	.L202
 2491              	.L239:
1770:src/keys.c    **** 
 2492              		.loc 1 1770 3 is_stmt 1 view .LVU778
 2493              	.LVL193:
 2494              	.LBB361:
 2495              	.LBI361:
1612:src/keys.c    **** 
 2496              		.loc 1 1612 12 view .LVU779
 2497              	.LBB362:
1614:src/keys.c    **** 		// Only valid at beginning of entry
 2498              		.loc 1 1614 2 view .LVU780
1614:src/keys.c    **** 		// Only valid at beginning of entry
 2499              		.loc 1 1614 5 is_stmt 0 view .LVU781
 2500 027a E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 2501 027c 002B     		cmp	r3, #0
 2502 027e 7FF456AF 		bne	.L304
1616:src/keys.c    **** 			// '..' or ENTER '.' = X
 2503              		.loc 1 1616 3 is_stmt 1 view .LVU782
1616:src/keys.c    **** 			// '..' or ENTER '.' = X
 2504              		.loc 1 1616 6 is_stmt 0 view .LVU783
 2505 0282 10F4A03F 		tst	r0, #81920
 2506 0286 40F0CB80 		bne	.L312
1621:src/keys.c    **** 			// local register or flag select
 2507              		.loc 1 1621 3 is_stmt 1 view .LVU784
1621:src/keys.c    **** 			// local register or flag select
 2508              		.loc 1 1621 20 is_stmt 0 view .LVU785
 2509 028a 0BEB0A02 		add	r2, fp, r10
 2510 028e 5379     		ldrb	r3, [r2, #5]	@ zero_extendqisi2
1621:src/keys.c    **** 			// local register or flag select
 2511              		.loc 1 1621 6 view .LVU786
 2512 0290 1D07     		lsls	r5, r3, #28
 2513 0292 00F1B380 		bmi	.L241
1621:src/keys.c    **** 			// local register or flag select
 2514              		.loc 1 1621 27 view .LVU787
 2515 0296 94F91530 		ldrsb	r3, [r4, #21]
 2516 029a 002B     		cmp	r3, #0
 2517 029c C0F2AE80 		blt	.L241
1625:src/keys.c    **** 			// Special GTO . sequence
 2518              		.loc 1 1625 8 is_stmt 1 view .LVU788
1625:src/keys.c    **** 			// Special GTO . sequence
 2519              		.loc 1 1625 29 is_stmt 0 view .LVU789
 2520 02a0 443F     		subs	r7, r7, #68
 2521              	.LVL194:
1625:src/keys.c    **** 			// Special GTO . sequence
 2522              		.loc 1 1625 11 view .LVU790
 2523 02a2 012F     		cmp	r7, #1
 2524 02a4 3FF643AF 		bhi	.L304
1627:src/keys.c    **** 				State2.gtodot = 1;
ARM GAS  /tmp/ccizbp1a.s 			page 104


 2525              		.loc 1 1627 4 is_stmt 1 view .LVU791
1628:src/keys.c    **** 				reset_arg();
 2526              		.loc 1 1628 5 view .LVU792
1628:src/keys.c    **** 				reset_arg();
 2527              		.loc 1 1628 19 is_stmt 0 view .LVU793
 2528 02a8 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 2529 02aa 43F00103 		orr	r3, r3, #1
 2530 02ae 6375     		strb	r3, [r4, #21]
1629:src/keys.c    **** 			}
 2531              		.loc 1 1629 5 is_stmt 1 view .LVU794
 2532 02b0 FFF7FEFF 		bl	reset_arg
 2533              	.LVL195:
1633:src/keys.c    **** }
 2534              		.loc 1 1633 9 is_stmt 0 view .LVU795
 2535 02b4 3320     		movs	r0, #51
 2536 02b6 3BE7     		b	.L202
 2537              	.L318:
 2538              		.align	2
 2539              	.L317:
 2540 02b8 00000000 		.word	StateWhileOn
 2541 02bc 00000000 		.word	.LANCHOR1
 2542 02c0 00000000 		.word	.LANCHOR0
 2543 02c4 ABAAAAAA 		.word	-1431655765
 2544 02c8 00000000 		.word	argcmds
 2545              	.LVL196:
 2546              	.L243:
1633:src/keys.c    **** }
 2547              		.loc 1 1633 9 view .LVU796
 2548              	.LBE362:
 2549              	.LBE361:
1774:src/keys.c    **** 			return arg_eval(n);
 2550              		.loc 1 1774 3 is_stmt 1 view .LVU797
1774:src/keys.c    **** 			return arg_eval(n);
 2551              		.loc 1 1774 7 is_stmt 0 view .LVU798
 2552 02cc 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1774:src/keys.c    **** 			return arg_eval(n);
 2553              		.loc 1 1774 6 view .LVU799
 2554 02ce 5C06     		lsls	r4, r3, #25
 2555 02d0 88D4     		bmi	.L251
1774:src/keys.c    **** 			return arg_eval(n);
 2556              		.loc 1 1774 25 discriminator 1 view .LVU800
 2557 02d2 0121     		movs	r1, #1
 2558 02d4 0846     		mov	r0, r1
 2559 02d6 FFF7FEFF 		bl	arg_storcl
 2560              	.LVL197:
1774:src/keys.c    **** 			return arg_eval(n);
 2561              		.loc 1 1774 18 discriminator 1 view .LVU801
 2562 02da 0028     		cmp	r0, #0
 2563 02dc 7FF427AF 		bne	.L304
1785:src/keys.c    **** 			return arg_eval(n);
 2564              		.loc 1 1785 63 view .LVU802
 2565 02e0 B8F1000F 		cmp	r8, #0
 2566 02e4 3FF423AF 		beq	.L304
 2567 02e8 7CE7     		b	.L251
 2568              	.L227:
1715:src/keys.c    **** 			State2.ind = ! State2.ind;
 2569              		.loc 1 1715 3 is_stmt 1 view .LVU803
ARM GAS  /tmp/ccizbp1a.s 			page 105


1715:src/keys.c    **** 			State2.ind = ! State2.ind;
 2570              		.loc 1 1715 7 is_stmt 0 view .LVU804
 2571 02ea 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1715:src/keys.c    **** 			State2.ind = ! State2.ind;
 2572              		.loc 1 1715 6 view .LVU805
 2573 02ec 5E06     		lsls	r6, r3, #25
 2574 02ee 3FF51EAF 		bmi	.L304
1715:src/keys.c    **** 			State2.ind = ! State2.ind;
 2575              		.loc 1 1715 35 discriminator 1 view .LVU806
 2576 02f2 D344     		add	fp, fp, r10
 2577 02f4 9BF80520 		ldrb	r2, [fp, #5]	@ zero_extendqisi2
1715:src/keys.c    **** 			State2.ind = ! State2.ind;
 2578              		.loc 1 1715 19 discriminator 1 view .LVU807
 2579 02f8 D507     		lsls	r5, r2, #31
 2580 02fa 7FF518AF 		bpl	.L304
1716:src/keys.c    **** 			if (! stack_reg)
 2581              		.loc 1 1716 4 is_stmt 1 view .LVU808
1716:src/keys.c    **** 			if (! stack_reg)
 2582              		.loc 1 1716 17 is_stmt 0 view .LVU809
 2583 02fe DA43     		mvns	r2, r3
 2584 0300 C2F3C012 		ubfx	r2, r2, #7, #1
1716:src/keys.c    **** 			if (! stack_reg)
 2585              		.loc 1 1716 15 view .LVU810
 2586 0304 62F3C713 		bfi	r3, r2, #7, #1
 2587 0308 6375     		strb	r3, [r4, #21]
1717:src/keys.c    **** 				State2.dot = 0;
 2588              		.loc 1 1717 4 is_stmt 1 view .LVU811
1717:src/keys.c    **** 				State2.dot = 0;
 2589              		.loc 1 1717 7 is_stmt 0 view .LVU812
 2590 030a B8F1000F 		cmp	r8, #0
 2591 030e 7FF40EAF 		bne	.L304
 2592              	.L264:
1718:src/keys.c    **** 		}
 2593              		.loc 1 1718 5 is_stmt 1 view .LVU813
1718:src/keys.c    **** 		}
 2594              		.loc 1 1718 16 is_stmt 0 view .LVU814
 2595 0312 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 2596 0314 6FF38613 		bfc	r3, #6, #1
 2597 0318 6375     		strb	r3, [r4, #21]
1879:src/keys.c    **** }
 2598              		.loc 1 1879 9 view .LVU815
 2599 031a 3320     		movs	r0, #51
 2600 031c 08E7     		b	.L202
 2601              	.L233:
1735:src/keys.c    **** 	    return process_arg_shuffle(0);
 2602              		.loc 1 1735 4 is_stmt 1 view .LVU816
1735:src/keys.c    **** 	    return process_arg_shuffle(0);
 2603              		.loc 1 1735 8 is_stmt 0 view .LVU817
 2604 031e A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1735:src/keys.c    **** 	    return process_arg_shuffle(0);
 2605              		.loc 1 1735 7 view .LVU818
 2606 0320 9907     		lsls	r1, r3, #30
 2607 0322 7FF508AF 		bpl	.L232
1736:src/keys.c    **** 	case K52:	// Y
 2608              		.loc 1 1736 6 is_stmt 1 view .LVU819
1736:src/keys.c    **** 	case K52:	// Y
 2609              		.loc 1 1736 13 is_stmt 0 view .LVU820
ARM GAS  /tmp/ccizbp1a.s 			page 106


 2610 0326 0020     		movs	r0, #0
 2611              	.L307:
1880:src/keys.c    **** 
 2612              		.loc 1 1880 1 view .LVU821
 2613 0328 03B0     		add	sp, sp, #12
 2614              		.cfi_remember_state
 2615              		.cfi_def_cfa_offset 36
 2616              	.LVL198:
1880:src/keys.c    **** 
 2617              		.loc 1 1880 1 view .LVU822
 2618              		@ sp needed
 2619 032a BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2620              		.cfi_restore 14
 2621              		.cfi_restore 11
 2622              		.cfi_restore 10
 2623              		.cfi_restore 9
 2624              		.cfi_restore 8
 2625              		.cfi_restore 7
 2626              		.cfi_restore 6
 2627              		.cfi_restore 5
 2628              		.cfi_restore 4
 2629              		.cfi_def_cfa_offset 0
 2630              	.LVL199:
1742:src/keys.c    **** #else
 2631              		.loc 1 1742 13 view .LVU823
 2632 032e FFF7FEBF 		b	process_arg_shuffle
 2633              	.LVL200:
 2634              	.L234:
 2635              		.cfi_restore_state
1738:src/keys.c    **** 	    return process_arg_shuffle(1);
 2636              		.loc 1 1738 4 is_stmt 1 view .LVU824
1738:src/keys.c    **** 	    return process_arg_shuffle(1);
 2637              		.loc 1 1738 8 is_stmt 0 view .LVU825
 2638 0332 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1738:src/keys.c    **** 	    return process_arg_shuffle(1);
 2639              		.loc 1 1738 7 view .LVU826
 2640 0334 9A07     		lsls	r2, r3, #30
 2641 0336 7FF5FEAE 		bpl	.L232
1739:src/keys.c    **** 	case K53:       // Z
 2642              		.loc 1 1739 6 is_stmt 1 view .LVU827
1739:src/keys.c    **** 	case K53:       // Z
 2643              		.loc 1 1739 13 is_stmt 0 view .LVU828
 2644 033a 0120     		movs	r0, #1
 2645 033c F4E7     		b	.L307
 2646              	.L235:
1741:src/keys.c    **** 	    return process_arg_shuffle(2);
 2647              		.loc 1 1741 4 is_stmt 1 view .LVU829
1741:src/keys.c    **** 	    return process_arg_shuffle(2);
 2648              		.loc 1 1741 8 is_stmt 0 view .LVU830
 2649 033e A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1741:src/keys.c    **** 	    return process_arg_shuffle(2);
 2650              		.loc 1 1741 7 view .LVU831
 2651 0340 9B07     		lsls	r3, r3, #30
 2652 0342 7FF5F8AE 		bpl	.L232
1742:src/keys.c    **** #else
 2653              		.loc 1 1742 6 is_stmt 1 view .LVU832
1742:src/keys.c    **** #else
ARM GAS  /tmp/ccizbp1a.s 			page 107


 2654              		.loc 1 1742 13 is_stmt 0 view .LVU833
 2655 0346 0220     		movs	r0, #2
 2656 0348 EEE7     		b	.L307
 2657              	.L254:
1829:src/keys.c    **** 		break;
 2658              		.loc 1 1829 3 is_stmt 1 view .LVU834
 2659 034a 0021     		movs	r1, #0
 2660 034c 0520     		movs	r0, #5
 2661 034e FFF7FEFF 		bl	arg_storcl
 2662              	.LVL201:
1830:src/keys.c    **** 
 2663              		.loc 1 1830 3 view .LVU835
1879:src/keys.c    **** }
 2664              		.loc 1 1879 9 is_stmt 0 view .LVU836
 2665 0352 3320     		movs	r0, #51
1830:src/keys.c    **** 
 2666              		.loc 1 1830 3 view .LVU837
 2667 0354 ECE6     		b	.L202
 2668              	.L231:
1732:src/keys.c    **** 	    return process_arg_shuffle(3);
 2669              		.loc 1 1732 4 is_stmt 1 view .LVU838
1732:src/keys.c    **** 	    return process_arg_shuffle(3);
 2670              		.loc 1 1732 8 is_stmt 0 view .LVU839
 2671 0356 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1732:src/keys.c    **** 	    return process_arg_shuffle(3);
 2672              		.loc 1 1732 7 view .LVU840
 2673 0358 9807     		lsls	r0, r3, #30
 2674 035a 7FF5ECAE 		bpl	.L232
1733:src/keys.c    **** 	case K51:       // X
 2675              		.loc 1 1733 6 is_stmt 1 view .LVU841
1733:src/keys.c    **** 	case K51:       // X
 2676              		.loc 1 1733 13 is_stmt 0 view .LVU842
 2677 035e 0320     		movs	r0, #3
 2678 0360 E2E7     		b	.L307
 2679              	.L252:
1789:src/keys.c    **** 		break;
 2680              		.loc 1 1789 3 is_stmt 1 view .LVU843
 2681 0362 0121     		movs	r1, #1
 2682 0364 0420     		movs	r0, #4
 2683 0366 FFF7FEFF 		bl	arg_storcl
 2684              	.LVL202:
1790:src/keys.c    **** #else
 2685              		.loc 1 1790 3 view .LVU844
1879:src/keys.c    **** }
 2686              		.loc 1 1879 9 is_stmt 0 view .LVU845
 2687 036a 3320     		movs	r0, #51
1790:src/keys.c    **** #else
 2688              		.loc 1 1790 3 view .LVU846
 2689 036c E0E6     		b	.L202
 2690              	.L262:
1854:src/keys.c    **** 			if (State2.dot)
 2691              		.loc 1 1854 3 is_stmt 1 view .LVU847
1854:src/keys.c    **** 			if (State2.dot)
 2692              		.loc 1 1854 13 is_stmt 0 view .LVU848
 2693 036e E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
1854:src/keys.c    **** 			if (State2.dot)
 2694              		.loc 1 1854 6 view .LVU849
ARM GAS  /tmp/ccizbp1a.s 			page 108


 2695 0370 7BBB     		cbnz	r3, .L263
1855:src/keys.c    **** 				State2.dot = 0;
 2696              		.loc 1 1855 4 is_stmt 1 view .LVU850
1855:src/keys.c    **** 				State2.dot = 0;
 2697              		.loc 1 1855 8 is_stmt 0 view .LVU851
 2698 0372 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1855:src/keys.c    **** 				State2.dot = 0;
 2699              		.loc 1 1855 7 view .LVU852
 2700 0374 13F04001 		ands	r1, r3, #64
 2701 0378 CBD1     		bne	.L264
1857:src/keys.c    **** 				State2.local = 0;
 2702              		.loc 1 1857 9 is_stmt 1 view .LVU853
1857:src/keys.c    **** 				State2.local = 0;
 2703              		.loc 1 1857 13 is_stmt 0 view .LVU854
 2704 037a A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
1857:src/keys.c    **** 				State2.local = 0;
 2705              		.loc 1 1857 12 view .LVU855
 2706 037c 12F00100 		ands	r0, r2, #1
 2707 0380 54D1     		bne	.L313
1859:src/keys.c    **** 				State2.ind = 0;
 2708              		.loc 1 1859 9 is_stmt 1 view .LVU856
1859:src/keys.c    **** 				State2.ind = 0;
 2709              		.loc 1 1859 12 is_stmt 0 view .LVU857
 2710 0382 1906     		lsls	r1, r3, #24
 2711 0384 7FF5D1AE 		bpl	.L266
1860:src/keys.c    **** 			else
 2712              		.loc 1 1860 5 is_stmt 1 view .LVU858
1860:src/keys.c    **** 			else
 2713              		.loc 1 1860 16 is_stmt 0 view .LVU859
 2714 0388 60F3C713 		bfi	r3, r0, #7, #1
 2715 038c 6375     		strb	r3, [r4, #21]
1879:src/keys.c    **** }
 2716              		.loc 1 1879 9 view .LVU860
 2717 038e 3320     		movs	r0, #51
 2718 0390 CEE6     		b	.L202
 2719              	.L311:
1833:src/keys.c    **** 			if (argcmds[base].label) {
 2720              		.loc 1 1833 43 discriminator 1 view .LVU861
 2721 0392 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 2722 0394 13F0C00F 		tst	r3, #192
 2723 0398 0ED1     		bne	.L257
1834:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 2724              		.loc 1 1834 4 is_stmt 1 view .LVU862
1834:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 2725              		.loc 1 1834 7 is_stmt 0 view .LVU863
 2726 039a 0029     		cmp	r1, #0
 2727 039c 4BD1     		bne	.L314
1839:src/keys.c    **** 				reset_arg();
 2728              		.loc 1 1839 11 is_stmt 1 view .LVU864
1839:src/keys.c    **** 				reset_arg();
 2729              		.loc 1 1839 14 is_stmt 0 view .LVU865
 2730 039e 4E2F     		cmp	r7, #78
 2731 03a0 5BD0     		beq	.L315
1842:src/keys.c    **** 				reset_arg();
 2732              		.loc 1 1842 11 is_stmt 1 view .LVU866
1842:src/keys.c    **** 				reset_arg();
 2733              		.loc 1 1842 14 is_stmt 0 view .LVU867
ARM GAS  /tmp/ccizbp1a.s 			page 109


 2734 03a2 4F2F     		cmp	r7, #79
 2735 03a4 5ED0     		beq	.L316
1845:src/keys.c    **** 				State2.dot = 1;
 2736              		.loc 1 1845 11 is_stmt 1 view .LVU868
1845:src/keys.c    **** 				State2.dot = 1;
 2737              		.loc 1 1845 14 is_stmt 0 view .LVU869
 2738 03a6 019A     		ldr	r2, [sp, #4]
 2739 03a8 002A     		cmp	r2, #0
 2740 03aa 3FF4C0AE 		beq	.L304
1846:src/keys.c    **** 		} else if (State2.numdigit > 0)
 2741              		.loc 1 1846 5 is_stmt 1 view .LVU870
1846:src/keys.c    **** 		} else if (State2.numdigit > 0)
 2742              		.loc 1 1846 16 is_stmt 0 view .LVU871
 2743 03ae 43F04003 		orr	r3, r3, #64
 2744 03b2 6375     		strb	r3, [r4, #21]
1879:src/keys.c    **** }
 2745              		.loc 1 1879 9 view .LVU872
 2746 03b4 3320     		movs	r0, #51
 2747 03b6 BBE6     		b	.L202
 2748              	.L257:
1847:src/keys.c    **** 			return arg_eval(State2.digval);
 2749              		.loc 1 1847 10 is_stmt 1 view .LVU873
1849:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 2750              		.loc 1 1849 8 view .LVU874
1849:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 2751              		.loc 1 1849 11 is_stmt 0 view .LVU875
 2752 03b8 B8F1000F 		cmp	r8, #0
 2753 03bc 3FF4B7AE 		beq	.L304
1850:src/keys.c    **** 		break;
 2754              		.loc 1 1850 4 is_stmt 1 view .LVU876
1850:src/keys.c    **** 		break;
 2755              		.loc 1 1850 27 is_stmt 0 view .LVU877
 2756 03c0 C3F38012 		ubfx	r2, r3, #6, #1
1850:src/keys.c    **** 		break;
 2757              		.loc 1 1850 19 view .LVU878
 2758 03c4 C2F10102 		rsb	r2, r2, #1
1850:src/keys.c    **** 		break;
 2759              		.loc 1 1850 15 view .LVU879
 2760 03c8 62F38613 		bfi	r3, r2, #6, #1
 2761 03cc 6375     		strb	r3, [r4, #21]
1879:src/keys.c    **** }
 2762              		.loc 1 1879 9 view .LVU880
 2763 03ce 3320     		movs	r0, #51
 2764 03d0 AEE6     		b	.L202
 2765              	.L263:
1865:src/keys.c    **** 			if (State2.shuffle)
 2766              		.loc 1 1865 4 is_stmt 1 view .LVU881
1866:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2767              		.loc 1 1866 8 is_stmt 0 view .LVU882
 2768 03d2 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
1865:src/keys.c    **** 			if (State2.shuffle)
 2769              		.loc 1 1865 4 view .LVU883
 2770 03d4 013B     		subs	r3, r3, #1
 2771 03d6 DBB2     		uxtb	r3, r3
1866:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2772              		.loc 1 1866 7 view .LVU884
 2773 03d8 9207     		lsls	r2, r2, #30
ARM GAS  /tmp/ccizbp1a.s 			page 110


1865:src/keys.c    **** 			if (State2.shuffle)
 2774              		.loc 1 1865 4 view .LVU885
 2775 03da E372     		strb	r3, [r4, #11]
1866:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2776              		.loc 1 1866 4 is_stmt 1 view .LVU886
1866:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2777              		.loc 1 1866 7 is_stmt 0 view .LVU887
 2778 03dc 14D5     		bpl	.L267
1867:src/keys.c    **** 			else
 2779              		.loc 1 1867 5 is_stmt 1 view .LVU888
1867:src/keys.c    **** 			else
 2780              		.loc 1 1867 19 is_stmt 0 view .LVU889
 2781 03de 2289     		ldrh	r2, [r4, #8]
1867:src/keys.c    **** 			else
 2782              		.loc 1 1867 46 view .LVU890
 2783 03e0 5B00     		lsls	r3, r3, #1
1867:src/keys.c    **** 			else
 2784              		.loc 1 1867 26 view .LVU891
 2785 03e2 0321     		movs	r1, #3
 2786 03e4 01FA03F3 		lsl	r3, r1, r3
1867:src/keys.c    **** 			else
 2787              		.loc 1 1867 19 view .LVU892
 2788 03e8 22EA0303 		bic	r3, r2, r3
 2789 03ec 2381     		strh	r3, [r4, #8]	@ movhi
1879:src/keys.c    **** }
 2790              		.loc 1 1879 9 view .LVU893
 2791 03ee 3320     		movs	r0, #51
 2792 03f0 9EE6     		b	.L202
 2793              	.L247:
1779:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
 2794              		.loc 1 1779 4 is_stmt 1 view .LVU894
 2795 03f2 FFF7FEFF 		bl	reset_arg
 2796              	.LVL203:
1780:src/keys.c    **** 		}
 2797              		.loc 1 1780 4 view .LVU895
1780:src/keys.c    **** 		}
 2798              		.loc 1 1780 11 is_stmt 0 view .LVU896
 2799 03f6 40F27510 		movw	r0, #373
 2800 03fa 99E6     		b	.L202
 2801              	.LVL204:
 2802              	.L241:
 2803              	.LBB365:
 2804              	.LBB363:
1623:src/keys.c    **** 		}
 2805              		.loc 1 1623 4 is_stmt 1 view .LVU897
1623:src/keys.c    **** 		}
 2806              		.loc 1 1623 17 is_stmt 0 view .LVU898
 2807 03fc A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 2808 03fe 43F00103 		orr	r3, r3, #1
 2809 0402 A375     		strb	r3, [r4, #22]
1633:src/keys.c    **** }
 2810              		.loc 1 1633 9 view .LVU899
 2811 0404 3320     		movs	r0, #51
1623:src/keys.c    **** 		}
 2812              		.loc 1 1623 17 view .LVU900
 2813 0406 93E6     		b	.L202
 2814              	.LVL205:
ARM GAS  /tmp/ccizbp1a.s 			page 111


 2815              	.L267:
1623:src/keys.c    **** 		}
 2816              		.loc 1 1623 17 view .LVU901
 2817              	.LBE363:
 2818              	.LBE365:
1869:src/keys.c    **** 		}
 2819              		.loc 1 1869 5 is_stmt 1 view .LVU902
1869:src/keys.c    **** 		}
 2820              		.loc 1 1869 19 is_stmt 0 view .LVU903
 2821 0408 2389     		ldrh	r3, [r4, #8]
 2822 040a 1A4A     		ldr	r2, .L319
 2823 040c A2FB0323 		umull	r2, r3, r2, r3
 2824 0410 DB08     		lsrs	r3, r3, #3
 2825 0412 2381     		strh	r3, [r4, #8]	@ movhi
1879:src/keys.c    **** }
 2826              		.loc 1 1879 9 view .LVU904
 2827 0414 3320     		movs	r0, #51
 2828 0416 8BE6     		b	.L202
 2829              	.L310:
1726:src/keys.c    **** 		else if (base == RARG_RCL)
 2830              		.loc 1 1726 4 is_stmt 1 view .LVU905
1726:src/keys.c    **** 		else if (base == RARG_RCL)
 2831              		.loc 1 1726 12 is_stmt 0 view .LVU906
 2832 0418 7723     		movs	r3, #119
 2833 041a E377     		strb	r3, [r4, #31]
1879:src/keys.c    **** }
 2834              		.loc 1 1879 9 view .LVU907
 2835 041c 3320     		movs	r0, #51
 2836 041e 87E6     		b	.L202
 2837              	.LVL206:
 2838              	.L312:
 2839              	.LBB366:
 2840              	.LBB364:
1618:src/keys.c    **** 			return arg_eval(regX_idx);
 2841              		.loc 1 1618 4 is_stmt 1 view .LVU908
1618:src/keys.c    **** 			return arg_eval(regX_idx);
 2842              		.loc 1 1618 17 is_stmt 0 view .LVU909
 2843 0420 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
 2844 0422 63F30002 		bfi	r2, r3, #0, #1
1619:src/keys.c    **** 		}
 2845              		.loc 1 1619 11 view .LVU910
 2846 0426 6420     		movs	r0, #100
1618:src/keys.c    **** 			return arg_eval(regX_idx);
 2847              		.loc 1 1618 17 view .LVU911
 2848 0428 A275     		strb	r2, [r4, #22]
1619:src/keys.c    **** 		}
 2849              		.loc 1 1619 4 is_stmt 1 view .LVU912
 2850 042a CAE6     		b	.L306
 2851              	.LVL207:
 2852              	.L313:
1619:src/keys.c    **** 		}
 2853              		.loc 1 1619 4 is_stmt 0 view .LVU913
 2854              	.LBE364:
 2855              	.LBE366:
1858:src/keys.c    **** 			else if (State2.ind)
 2856              		.loc 1 1858 5 is_stmt 1 view .LVU914
1858:src/keys.c    **** 			else if (State2.ind)
ARM GAS  /tmp/ccizbp1a.s 			page 112


 2857              		.loc 1 1858 18 is_stmt 0 view .LVU915
 2858 042c 61F30002 		bfi	r2, r1, #0, #1
 2859 0430 A275     		strb	r2, [r4, #22]
1879:src/keys.c    **** }
 2860              		.loc 1 1879 9 view .LVU916
 2861 0432 3320     		movs	r0, #51
 2862 0434 7CE6     		b	.L202
 2863              	.L314:
1835:src/keys.c    **** 				State2.multi = 1;
 2864              		.loc 1 1835 5 is_stmt 1 view .LVU917
 2865              	.LVL208:
 2866              	.LBB367:
 2867              	.LBI367:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 2868              		.loc 1 501 13 view .LVU918
 2869              	.LBB368:
 502:src/keys.c    **** 		return;
 2870              		.loc 1 502 2 view .LVU919
 502:src/keys.c    **** 		return;
 2871              		.loc 1 502 6 is_stmt 0 view .LVU920
 2872 0436 FFF7FEFF 		bl	is_bad_cmdline
 2873              	.LVL209:
 502:src/keys.c    **** 		return;
 2874              		.loc 1 502 5 view .LVU921
 2875 043a 20B9     		cbnz	r0, .L259
 2876              	.LBE368:
 2877              	.LBE367:
1835:src/keys.c    **** 				State2.multi = 1;
 2878              		.loc 1 1835 31 view .LVU922
 2879 043c A7F14200 		sub	r0, r7, #66
 2880              	.LBB370:
 2881              	.LBB369:
 2882 0440 C0B2     		uxtb	r0, r0
 2883 0442 FFF7FEFF 		bl	init_arg.part.0
 2884              	.LVL210:
 2885              	.L259:
1835:src/keys.c    **** 				State2.multi = 1;
 2886              		.loc 1 1835 31 view .LVU923
 2887              	.LBE369:
 2888              	.LBE370:
1836:src/keys.c    **** 				State2.alphashift = 0;
 2889              		.loc 1 1836 5 is_stmt 1 view .LVU924
1837:src/keys.c    **** 				State2.rarg = 0;
 2890              		.loc 1 1837 5 view .LVU925
1838:src/keys.c    **** 			} else if (base == RARG_SCI) {
 2891              		.loc 1 1838 5 view .LVU926
1836:src/keys.c    **** 				State2.alphashift = 0;
 2892              		.loc 1 1836 18 is_stmt 0 view .LVU927
 2893 0446 6369     		ldr	r3, [r4, #20]
 2894 0448 23F44013 		bic	r3, r3, #3145728
 2895 044c 23F40063 		bic	r3, r3, #2048
 2896 0450 43F40063 		orr	r3, r3, #2048
 2897 0454 6361     		str	r3, [r4, #20]
1879:src/keys.c    **** }
 2898              		.loc 1 1879 9 view .LVU928
 2899 0456 3320     		movs	r0, #51
 2900 0458 6AE6     		b	.L202
ARM GAS  /tmp/ccizbp1a.s 			page 113


 2901              	.L315:
1840:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
 2902              		.loc 1 1840 5 is_stmt 1 view .LVU929
 2903 045a FFF7FEFF 		bl	reset_arg
 2904              	.LVL211:
1841:src/keys.c    **** 			} else if (base == RARG_ENG) {
 2905              		.loc 1 1841 5 view .LVU930
1841:src/keys.c    **** 			} else if (base == RARG_ENG) {
 2906              		.loc 1 1841 12 is_stmt 0 view .LVU931
 2907 045e 40F25510 		movw	r0, #341
 2908 0462 65E6     		b	.L202
 2909              	.L316:
1843:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
 2910              		.loc 1 1843 5 is_stmt 1 view .LVU932
 2911 0464 FFF7FEFF 		bl	reset_arg
 2912              	.LVL212:
1844:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 2913              		.loc 1 1844 5 view .LVU933
1844:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 2914              		.loc 1 1844 12 is_stmt 0 view .LVU934
 2915 0468 4FF4AB70 		mov	r0, #342
 2916 046c 60E6     		b	.L202
 2917              	.L220:
1663:src/keys.c    **** 	  case regY_idx:
 2918              		.loc 1 1663 6 is_stmt 1 view .LVU935
1663:src/keys.c    **** 	  case regY_idx:
 2919              		.loc 1 1663 13 is_stmt 0 view .LVU936
 2920 046e 0120     		movs	r0, #1
 2921 0470 BBE6     		b	.L305
 2922              	.L320:
 2923 0472 00BF     		.align	2
 2924              	.L319:
 2925 0474 CDCCCCCC 		.word	-858993459
 2926              		.cfi_endproc
 2927              	.LFE37:
 2929              		.section	.text.cur_shift,"ax",%progbits
 2930              		.align	1
 2931              		.p2align 2,,3
 2932              		.global	cur_shift
 2933              		.syntax unified
 2934              		.thumb
 2935              		.thumb_func
 2936              		.fpu fpv4-sp-d16
 2938              	cur_shift:
 2939              	.LFB0:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 2940              		.loc 1 84 29 is_stmt 1 view -0
 2941              		.cfi_startproc
 2942              		@ args = 0, pretend = 0, frame = 0
 2943              		@ frame_needed = 0, uses_anonymous_args = 0
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2944              		.loc 1 85 2 view .LVU938
  84:src/keys.c    **** 	enum shifts s = shift_down();
 2945              		.loc 1 84 29 is_stmt 0 view .LVU939
 2946 0000 08B5     		push	{r3, lr}
 2947              		.cfi_def_cfa_offset 8
 2948              		.cfi_offset 3, -8
ARM GAS  /tmp/ccizbp1a.s 			page 114


 2949              		.cfi_offset 14, -4
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2950              		.loc 1 85 18 view .LVU940
 2951 0002 FFF7FEFF 		bl	shift_down
 2952              	.LVL213:
  86:src/keys.c    **** }
 2953              		.loc 1 86 2 is_stmt 1 view .LVU941
  86:src/keys.c    **** }
 2954              		.loc 1 86 52 is_stmt 0 view .LVU942
 2955 0006 08B9     		cbnz	r0, .L322
  86:src/keys.c    **** }
 2956              		.loc 1 86 52 discriminator 1 view .LVU943
 2957 0008 014B     		ldr	r3, .L324
 2958 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 2959              	.LVL214:
 2960              	.L322:
  87:src/keys.c    **** 
 2961              		.loc 1 87 1 discriminator 4 view .LVU944
 2962 000c 08BD     		pop	{r3, pc}
 2963              	.L325:
 2964 000e 00BF     		.align	2
 2965              	.L324:
 2966 0010 00000000 		.word	StateWhileOn
 2967              		.cfi_endproc
 2968              	.LFE0:
 2970              		.section	.text.reset_shift,"ax",%progbits
 2971              		.align	1
 2972              		.p2align 2,,3
 2973              		.global	reset_shift
 2974              		.syntax unified
 2975              		.thumb
 2976              		.thumb_func
 2977              		.fpu fpv4-sp-d16
 2979              	reset_shift:
 2980              	.LFB2:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 2981              		.loc 1 102 31 is_stmt 1 view -0
 2982              		.cfi_startproc
 2983              		@ args = 0, pretend = 0, frame = 0
 2984              		@ frame_needed = 0, uses_anonymous_args = 0
 103:src/keys.c    **** }
 2985              		.loc 1 103 2 view .LVU946
 2986              	.LVL215:
 2987              	.LBB371:
 2988              	.LBI371:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 2989              		.loc 1 92 20 view .LVU947
 2990              	.LBB372:
  93:src/keys.c    **** 	State2.shifts = shift;
 2991              		.loc 1 93 2 view .LVU948
 2992              	.LBB373:
 2993              	.LBI373:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 2994              		.loc 1 84 13 view .LVU949
 2995              	.LBB374:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2996              		.loc 1 85 2 view .LVU950
ARM GAS  /tmp/ccizbp1a.s 			page 115


 2997              	.LBE374:
 2998              	.LBE373:
 2999              	.LBE372:
 3000              	.LBE371:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 3001              		.loc 1 102 31 is_stmt 0 view .LVU951
 3002 0000 08B5     		push	{r3, lr}
 3003              		.cfi_def_cfa_offset 8
 3004              		.cfi_offset 3, -8
 3005              		.cfi_offset 14, -4
 3006              	.LBB378:
 3007              	.LBB377:
 3008              	.LBB376:
 3009              	.LBB375:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3010              		.loc 1 85 18 view .LVU952
 3011 0002 FFF7FEFF 		bl	shift_down
 3012              	.LVL216:
  86:src/keys.c    **** }
 3013              		.loc 1 86 2 is_stmt 1 view .LVU953
  86:src/keys.c    **** }
 3014              		.loc 1 86 52 is_stmt 0 view .LVU954
 3015 0006 034B     		ldr	r3, .L331
 3016 0008 00B9     		cbnz	r0, .L327
 3017 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 3018              	.LVL217:
 3019              	.L327:
  86:src/keys.c    **** }
 3020              		.loc 1 86 52 view .LVU955
 3021              	.LBE375:
 3022              	.LBE376:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 3023              		.loc 1 94 2 is_stmt 1 view .LVU956
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 3024              		.loc 1 94 16 is_stmt 0 view .LVU957
 3025 000c 0022     		movs	r2, #0
 3026 000e 1A74     		strb	r2, [r3, #16]
  95:src/keys.c    **** 	return r;
 3027              		.loc 1 95 2 is_stmt 1 view .LVU958
  95:src/keys.c    **** 	return r;
 3028              		.loc 1 95 19 is_stmt 0 view .LVU959
 3029 0010 5A73     		strb	r2, [r3, #13]
  96:src/keys.c    **** }
 3030              		.loc 1 96 2 is_stmt 1 view .LVU960
 3031              	.LVL218:
  96:src/keys.c    **** }
 3032              		.loc 1 96 2 is_stmt 0 view .LVU961
 3033              	.LBE377:
 3034              	.LBE378:
 104:src/keys.c    **** 
 3035              		.loc 1 104 1 view .LVU962
 3036 0012 08BD     		pop	{r3, pc}
 3037              	.L332:
 3038              		.align	2
 3039              	.L331:
 3040 0014 00000000 		.word	StateWhileOn
 3041              		.cfi_endproc
ARM GAS  /tmp/ccizbp1a.s 			page 116


 3042              	.LFE2:
 3044              		.section	.text.keycode_to_row_column,"ax",%progbits
 3045              		.align	1
 3046              		.p2align 2,,3
 3047              		.global	keycode_to_row_column
 3048              		.syntax unified
 3049              		.thumb
 3050              		.thumb_func
 3051              		.fpu fpv4-sp-d16
 3053              	keycode_to_row_column:
 3054              	.LVL219:
 3055              	.LFB6:
 168:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 3056              		.loc 1 168 1 is_stmt 1 view -0
 3057              		.cfi_startproc
 3058              		@ args = 0, pretend = 0, frame = 0
 3059              		@ frame_needed = 0, uses_anonymous_args = 0
 3060              		@ link register save eliminated.
 169:src/keys.c    **** }
 3061              		.loc 1 169 2 view .LVU964
 169:src/keys.c    **** }
 3062              		.loc 1 169 18 is_stmt 0 view .LVU965
 3063 0000 074A     		ldr	r2, .L334
 3064 0002 82FB0032 		smull	r3, r2, r2, r0
 3065 0006 A2EBE073 		sub	r3, r2, r0, asr #31
 169:src/keys.c    **** }
 3066              		.loc 1 169 24 view .LVU966
 3067 000a 03EB8302 		add	r2, r3, r3, lsl #2
 3068 000e 5200     		lsls	r2, r2, #1
 169:src/keys.c    **** }
 3069              		.loc 1 169 33 view .LVU967
 3070 0010 03EB4303 		add	r3, r3, r3, lsl #1
 3071 0014 A0EB4303 		sub	r3, r0, r3, lsl #1
 169:src/keys.c    **** }
 3072              		.loc 1 169 12 view .LVU968
 3073 0018 02F10B00 		add	r0, r2, #11
 3074              	.LVL220:
 170:src/keys.c    **** 
 3075              		.loc 1 170 1 view .LVU969
 3076 001c 1844     		add	r0, r0, r3
 3077 001e 7047     		bx	lr
 3078              	.L335:
 3079              		.align	2
 3080              	.L334:
 3081 0020 ABAAAA2A 		.word	715827883
 3082              		.cfi_endproc
 3083              	.LFE6:
 3085              		.section	.text.row_column_to_keycode,"ax",%progbits
 3086              		.align	1
 3087              		.p2align 2,,3
 3088              		.global	row_column_to_keycode
 3089              		.syntax unified
 3090              		.thumb
 3091              		.thumb_func
 3092              		.fpu fpv4-sp-d16
 3094              	row_column_to_keycode:
 3095              	.LVL221:
ARM GAS  /tmp/ccizbp1a.s 			page 117


 3096              	.LFB7:
 178:src/keys.c    **** 	int row = c / 10 - 1;
 3097              		.loc 1 178 1 is_stmt 1 view -0
 3098              		.cfi_startproc
 3099              		@ args = 0, pretend = 0, frame = 0
 3100              		@ frame_needed = 0, uses_anonymous_args = 0
 3101              		@ link register save eliminated.
 179:src/keys.c    **** 	int col = c % 10 - 1;
 3102              		.loc 1 179 2 view .LVU971
 179:src/keys.c    **** 	int col = c % 10 - 1;
 3103              		.loc 1 179 14 is_stmt 0 view .LVU972
 3104 0000 0E4A     		ldr	r2, .L342
 3105 0002 82FB0032 		smull	r3, r2, r2, r0
 3106 0006 C317     		asrs	r3, r0, #31
 3107 0008 C3EBA203 		rsb	r3, r3, r2, asr #2
 180:src/keys.c    **** 
 3108              		.loc 1 180 14 view .LVU973
 3109 000c 03EB8302 		add	r2, r3, r3, lsl #2
 179:src/keys.c    **** 	int col = c % 10 - 1;
 3110              		.loc 1 179 6 view .LVU974
 3111 0010 013B     		subs	r3, r3, #1
 3112              	.LVL222:
 180:src/keys.c    **** 
 3113              		.loc 1 180 2 is_stmt 1 view .LVU975
 180:src/keys.c    **** 
 3114              		.loc 1 180 14 is_stmt 0 view .LVU976
 3115 0012 A0EB4200 		sub	r0, r0, r2, lsl #1
 3116              	.LVL223:
 182:src/keys.c    **** 		return -1;
 3117              		.loc 1 182 5 view .LVU977
 3118 0016 062B     		cmp	r3, #6
 180:src/keys.c    **** 
 3119              		.loc 1 180 6 view .LVU978
 3120 0018 00F1FF30 		add	r0, r0, #-1
 3121              	.LVL224:
 182:src/keys.c    **** 		return -1;
 3122              		.loc 1 182 2 is_stmt 1 view .LVU979
 182:src/keys.c    **** 		return -1;
 3123              		.loc 1 182 5 is_stmt 0 view .LVU980
 3124 001c 0AD8     		bhi	.L341
 182:src/keys.c    **** 		return -1;
 3125              		.loc 1 182 36 discriminator 1 view .LVU981
 3126 001e 012B     		cmp	r3, #1
 3127 0020 CCBF     		ite	gt
 3128 0022 0422     		movgt	r2, #4
 3129 0024 0522     		movle	r2, #5
 182:src/keys.c    **** 		return -1;
 3130              		.loc 1 182 25 discriminator 1 view .LVU982
 3131 0026 8242     		cmp	r2, r0
 3132 0028 04DB     		blt	.L341
 184:src/keys.c    **** }
 3133              		.loc 1 184 2 is_stmt 1 view .LVU983
 184:src/keys.c    **** }
 3134              		.loc 1 184 13 is_stmt 0 view .LVU984
 3135 002a 03EB4303 		add	r3, r3, r3, lsl #1
 3136              	.LVL225:
 184:src/keys.c    **** }
ARM GAS  /tmp/ccizbp1a.s 			page 118


 3137              		.loc 1 184 17 view .LVU985
 3138 002e 00EB4300 		add	r0, r0, r3, lsl #1
 3139              	.LVL226:
 184:src/keys.c    **** }
 3140              		.loc 1 184 17 view .LVU986
 3141 0032 7047     		bx	lr
 3142              	.LVL227:
 3143              	.L341:
 183:src/keys.c    **** 	return row * 6 + col;
 3144              		.loc 1 183 10 view .LVU987
 3145 0034 4FF0FF30 		mov	r0, #-1
 3146              	.LVL228:
 185:src/keys.c    **** 
 3147              		.loc 1 185 1 view .LVU988
 3148 0038 7047     		bx	lr
 3149              	.L343:
 3150 003a 00BF     		.align	2
 3151              	.L342:
 3152 003c 67666666 		.word	1717986919
 3153              		.cfi_endproc
 3154              	.LFE7:
 3156              		.section	.text.keycode_to_digit_or_register,"ax",%progbits
 3157              		.align	1
 3158              		.p2align 2,,3
 3159              		.global	keycode_to_digit_or_register
 3160              		.syntax unified
 3161              		.thumb
 3162              		.thumb_func
 3163              		.fpu fpv4-sp-d16
 3165              	keycode_to_digit_or_register:
 3166              	.LVL229:
 3167              	.LFB8:
 199:src/keys.c    ****   static const unsigned char map[] = {
 3168              		.loc 1 199 1 is_stmt 1 view -0
 3169              		.cfi_startproc
 3170              		@ args = 0, pretend = 0, frame = 0
 3171              		@ frame_needed = 0, uses_anonymous_args = 0
 3172              		@ link register save eliminated.
 200:src/keys.c    ****     // K00 - K05
 3173              		.loc 1 200 3 view .LVU990
 221:src/keys.c    **** }
 3174              		.loc 1 221 3 view .LVU991
 3175              	.LBB379:
 3176              	.LBI379:
 119:src/keys.c    **** {
 3177              		.loc 1 119 12 view .LVU992
 3178              	.LBB380:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3179              		.loc 1 121 2 view .LVU993
 131:src/keys.c    **** }
 3180              		.loc 1 131 2 view .LVU994
 131:src/keys.c    **** }
 3181              		.loc 1 131 23 is_stmt 0 view .LVU995
 3182 0000 024B     		ldr	r3, .L345
 3183              	.LBE380:
 3184              	.LBE379:
 221:src/keys.c    **** }
ARM GAS  /tmp/ccizbp1a.s 			page 119


 3185              		.loc 1 221 28 view .LVU996
 3186 0002 034A     		ldr	r2, .L345+4
 3187              	.LBB382:
 3188              	.LBB381:
 131:src/keys.c    **** }
 3189              		.loc 1 131 23 view .LVU997
 3190 0004 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 3191              	.LBE381:
 3192              	.LBE382:
 222:src/keys.c    **** #else
 3193              		.loc 1 222 1 view .LVU998
 3194 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 3195              	.LVL230:
 222:src/keys.c    **** #else
 3196              		.loc 1 222 1 view .LVU999
 3197 0008 7047     		bx	lr
 3198              	.L346:
 3199 000a 00BF     		.align	2
 3200              	.L345:
 3201 000c 00000000 		.word	.LANCHOR1
 3202 0010 00000000 		.word	.LANCHOR0
 3203              		.cfi_endproc
 3204              	.LFE8:
 3206              		.section	.text.init_state,"ax",%progbits
 3207              		.align	1
 3208              		.p2align 2,,3
 3209              		.global	init_state
 3210              		.syntax unified
 3211              		.thumb
 3212              		.thumb_func
 3213              		.fpu fpv4-sp-d16
 3215              	init_state:
 3216              	.LFB13:
 564:src/keys.c    **** #ifndef REALBUILD
 3217              		.loc 1 564 23 is_stmt 1 view -0
 3218              		.cfi_startproc
 3219              		@ args = 0, pretend = 0, frame = 0
 3220              		@ frame_needed = 0, uses_anonymous_args = 0
 566:src/keys.c    **** 	unsigned int b = State2.trace;
 3221              		.loc 1 566 2 view .LVU1001
 564:src/keys.c    **** #ifndef REALBUILD
 3222              		.loc 1 564 23 is_stmt 0 view .LVU1002
 3223 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3224              		.cfi_def_cfa_offset 24
 3225              		.cfi_offset 4, -24
 3226              		.cfi_offset 5, -20
 3227              		.cfi_offset 6, -16
 3228              		.cfi_offset 7, -12
 3229              		.cfi_offset 8, -8
 3230              		.cfi_offset 14, -4
 566:src/keys.c    **** 	unsigned int b = State2.trace;
 3231              		.loc 1 566 25 view .LVU1003
 3232 0004 154C     		ldr	r4, .L349
 574:src/keys.c    **** 	// Removed: will clear any locals on power off
 3233              		.loc 1 574 10 view .LVU1004
 3234 0006 0021     		movs	r1, #0
 578:src/keys.c    **** 	State2.test = TST_NONE;
ARM GAS  /tmp/ccizbp1a.s 			page 120


 3235              		.loc 1 578 2 view .LVU1005
 3236 0008 1422     		movs	r2, #20
 3237 000a 04F10800 		add	r0, r4, #8
 574:src/keys.c    **** 	// Removed: will clear any locals on power off
 3238              		.loc 1 574 10 view .LVU1006
 3239 000e E177     		strb	r1, [r4, #31]
 566:src/keys.c    **** 	unsigned int b = State2.trace;
 3240              		.loc 1 566 25 view .LVU1007
 3241 0010 257E     		ldrb	r5, [r4, #24]	@ zero_extendqisi2
 567:src/keys.c    **** #else
 3242              		.loc 1 567 25 view .LVU1008
 3243 0012 E67D     		ldrb	r6, [r4, #23]	@ zero_extendqisi2
 571:src/keys.c    **** 	int k = LastKey;
 3244              		.loc 1 571 10 view .LVU1009
 3245 0014 A77C     		ldrb	r7, [r4, #18]	@ zero_extendqisi2
 572:src/keys.c    **** 
 3246              		.loc 1 572 10 view .LVU1010
 3247 0016 94F91380 		ldrsb	r8, [r4, #19]
 578:src/keys.c    **** 	State2.test = TST_NONE;
 3248              		.loc 1 578 2 view .LVU1011
 3249 001a FFF7FEFF 		bl	xset
 3250              	.LVL231:
 580:src/keys.c    **** 	update_program_bounds(1);
 3251              		.loc 1 580 17 view .LVU1012
 3252 001e A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 579:src/keys.c    **** 	State2.runmode = 1;
 3253              		.loc 1 579 14 view .LVU1013
 3254 0020 0722     		movs	r2, #7
 580:src/keys.c    **** 	update_program_bounds(1);
 3255              		.loc 1 580 17 view .LVU1014
 3256 0022 43F04003 		orr	r3, r3, #64
 581:src/keys.c    **** 	set_lift();
 3257              		.loc 1 581 2 view .LVU1015
 3258 0026 0120     		movs	r0, #1
 579:src/keys.c    **** 	State2.runmode = 1;
 3259              		.loc 1 579 14 view .LVU1016
 3260 0028 E273     		strb	r2, [r4, #15]
 580:src/keys.c    **** 	update_program_bounds(1);
 3261              		.loc 1 580 17 view .LVU1017
 3262 002a A375     		strb	r3, [r4, #22]
 581:src/keys.c    **** 	set_lift();
 3263              		.loc 1 581 2 view .LVU1018
 3264 002c FFF7FEFF 		bl	update_program_bounds
 3265              	.LVL232:
 582:src/keys.c    **** 
 3266              		.loc 1 582 2 view .LVU1019
 3267 0030 FFF7FEFF 		bl	set_lift
 3268              	.LVL233:
 589:src/keys.c    **** 	State2.flags = a;
 3269              		.loc 1 589 15 view .LVU1020
 3270 0034 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 590:src/keys.c    **** #else
 3271              		.loc 1 590 15 view .LVU1021
 3272 0036 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 594:src/keys.c    **** }
 3273              		.loc 1 594 15 view .LVU1022
 3274 0038 0949     		ldr	r1, .L349+4
ARM GAS  /tmp/ccizbp1a.s 			page 121


 587:src/keys.c    **** #ifndef REALBUILD
 3275              		.loc 1 587 10 view .LVU1023
 3276 003a 84F81380 		strb	r8, [r4, #19]
 566:src/keys.c    **** 	unsigned int b = State2.trace;
 3277              		.loc 1 566 25 view .LVU1024
 3278 003e 05F00105 		and	r5, r5, #1
 3279              	.LVL234:
 567:src/keys.c    **** #else
 3280              		.loc 1 567 2 is_stmt 1 view .LVU1025
 567:src/keys.c    **** #else
 3281              		.loc 1 567 25 is_stmt 0 view .LVU1026
 3282 0042 F609     		lsrs	r6, r6, #7
 3283              	.LVL235:
 571:src/keys.c    **** 	int k = LastKey;
 3284              		.loc 1 571 2 is_stmt 1 view .LVU1027
 571:src/keys.c    **** 	int k = LastKey;
 3285              		.loc 1 571 10 is_stmt 0 view .LVU1028
 3286 0044 FFB2     		uxtb	r7, r7
 3287              	.LVL236:
 572:src/keys.c    **** 
 3288              		.loc 1 572 2 is_stmt 1 view .LVU1029
 574:src/keys.c    **** 	// Removed: will clear any locals on power off
 3289              		.loc 1 574 2 view .LVU1030
 578:src/keys.c    **** 	State2.test = TST_NONE;
 3290              		.loc 1 578 2 view .LVU1031
 579:src/keys.c    **** 	State2.runmode = 1;
 3291              		.loc 1 579 2 view .LVU1032
 580:src/keys.c    **** 	update_program_bounds(1);
 3292              		.loc 1 580 2 view .LVU1033
 581:src/keys.c    **** 	set_lift();
 3293              		.loc 1 581 2 view .LVU1034
 582:src/keys.c    **** 
 3294              		.loc 1 582 2 view .LVU1035
 586:src/keys.c    **** 	LastKey = k;
 3295              		.loc 1 586 2 view .LVU1036
 589:src/keys.c    **** 	State2.flags = a;
 3296              		.loc 1 589 15 is_stmt 0 view .LVU1037
 3297 0046 66F3C712 		bfi	r2, r6, #7, #1
 590:src/keys.c    **** #else
 3298              		.loc 1 590 15 view .LVU1038
 3299 004a 65F30003 		bfi	r3, r5, #0, #1
 594:src/keys.c    **** }
 3300              		.loc 1 594 15 view .LVU1039
 3301 004e 6420     		movs	r0, #100
 589:src/keys.c    **** 	State2.flags = a;
 3302              		.loc 1 589 15 view .LVU1040
 3303 0050 E275     		strb	r2, [r4, #23]
 590:src/keys.c    **** #else
 3304              		.loc 1 590 15 view .LVU1041
 3305 0052 2376     		strb	r3, [r4, #24]
 586:src/keys.c    **** 	LastKey = k;
 3306              		.loc 1 586 10 view .LVU1042
 3307 0054 A774     		strb	r7, [r4, #18]
 587:src/keys.c    **** #ifndef REALBUILD
 3308              		.loc 1 587 2 is_stmt 1 view .LVU1043
 589:src/keys.c    **** 	State2.flags = a;
 3309              		.loc 1 589 2 view .LVU1044
ARM GAS  /tmp/ccizbp1a.s 			page 122


 590:src/keys.c    **** #else
 3310              		.loc 1 590 2 view .LVU1045
 594:src/keys.c    **** }
 3311              		.loc 1 594 2 view .LVU1046
 594:src/keys.c    **** }
 3312              		.loc 1 594 15 is_stmt 0 view .LVU1047
 3313 0056 0860     		str	r0, [r1]
 595:src/keys.c    **** 
 3314              		.loc 1 595 1 view .LVU1048
 3315 0058 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3316              	.LVL237:
 3317              	.L350:
 595:src/keys.c    **** 
 3318              		.loc 1 595 1 view .LVU1049
 3319              		.align	2
 3320              	.L349:
 3321 005c 00000000 		.word	StateWhileOn
 3322 0060 00000000 		.word	ShowRegister
 3323              		.cfi_endproc
 3324              	.LFE13:
 3326              		.section	.text.soft_init_state,"ax",%progbits
 3327              		.align	1
 3328              		.p2align 2,,3
 3329              		.global	soft_init_state
 3330              		.syntax unified
 3331              		.thumb
 3332              		.thumb_func
 3333              		.fpu fpv4-sp-d16
 3335              	soft_init_state:
 3336              	.LFB14:
 597:src/keys.c    **** 	int soft;
 3337              		.loc 1 597 28 is_stmt 1 view -0
 3338              		.cfi_startproc
 3339              		@ args = 0, pretend = 0, frame = 0
 3340              		@ frame_needed = 0, uses_anonymous_args = 0
 598:src/keys.c    **** 	unsigned int runmode;
 3341              		.loc 1 598 2 view .LVU1051
 599:src/keys.c    **** 	unsigned int alphas;
 3342              		.loc 1 599 2 view .LVU1052
 600:src/keys.c    **** 
 3343              		.loc 1 600 2 view .LVU1053
 602:src/keys.c    **** 		CmdLineLength = 0;
 3344              		.loc 1 602 2 view .LVU1054
 597:src/keys.c    **** 	int soft;
 3345              		.loc 1 597 28 is_stmt 0 view .LVU1055
 3346 0000 38B5     		push	{r3, r4, r5, lr}
 3347              		.cfi_def_cfa_offset 16
 3348              		.cfi_offset 3, -16
 3349              		.cfi_offset 4, -12
 3350              		.cfi_offset 5, -8
 3351              		.cfi_offset 14, -4
 602:src/keys.c    **** 		CmdLineLength = 0;
 3352              		.loc 1 602 6 view .LVU1056
 3353 0002 114C     		ldr	r4, .L358
 602:src/keys.c    **** 		CmdLineLength = 0;
 3354              		.loc 1 602 5 view .LVU1057
 3355 0004 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
ARM GAS  /tmp/ccizbp1a.s 			page 123


 3356 0006 D3B9     		cbnz	r3, .L357
 608:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 3357              		.loc 1 608 2 is_stmt 1 view .LVU1058
 609:src/keys.c    **** 	runmode = State2.runmode;
 3358              		.loc 1 609 17 is_stmt 0 view .LVU1059
 3359 0008 104A     		ldr	r2, .L358+4
 3360 000a 6369     		ldr	r3, [r4, #20]
 609:src/keys.c    **** 	runmode = State2.runmode;
 3361              		.loc 1 609 60 view .LVU1060
 3362 000c 1A42     		tst	r2, r3
 3363 000e 0AD0     		beq	.L354
 3364              	.L355:
 3365              	.LVL238:
 610:src/keys.c    **** 	alphas = State2.alphas;
 3366              		.loc 1 610 2 is_stmt 1 view .LVU1061
 611:src/keys.c    **** 	init_state();
 3367              		.loc 1 611 17 is_stmt 0 view .LVU1062
 3368 0010 A57D     		ldrb	r5, [r4, #22]	@ zero_extendqisi2
 3369              	.LVL239:
 611:src/keys.c    **** 	init_state();
 3370              		.loc 1 611 2 is_stmt 1 view .LVU1063
 612:src/keys.c    **** 	if (soft) {
 3371              		.loc 1 612 2 view .LVU1064
 3372 0012 FFF7FEFF 		bl	init_state
 3373              	.LVL240:
 613:src/keys.c    **** 		State2.runmode = runmode;
 3374              		.loc 1 613 2 view .LVU1065
 614:src/keys.c    **** 		State2.alphas = alphas;
 3375              		.loc 1 614 3 view .LVU1066
 615:src/keys.c    **** 	}
 3376              		.loc 1 615 3 view .LVU1067
 615:src/keys.c    **** 	}
 3377              		.loc 1 615 17 is_stmt 0 view .LVU1068
 3378 0016 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 3379 0018 05F04805 		and	r5, r5, #72
 3380 001c 23F04803 		bic	r3, r3, #72
 3381 0020 2B43     		orrs	r3, r3, r5
 3382 0022 A375     		strb	r3, [r4, #22]
 617:src/keys.c    **** 
 3383              		.loc 1 617 1 view .LVU1069
 3384 0024 38BD     		pop	{r3, r4, r5, pc}
 3385              	.LVL241:
 3386              	.L354:
 609:src/keys.c    **** 	runmode = State2.runmode;
 3387              		.loc 1 609 60 discriminator 2 view .LVU1070
 3388 0026 E368     		ldr	r3, [r4, #12]
 3389 0028 23F47F03 		bic	r3, r3, #16711680
 3390 002c 23F47F43 		bic	r3, r3, #65280
 3391 0030 B3F1E06F 		cmp	r3, #117440512
 3392 0034 ECD1     		bne	.L355
 3393              	.LVL242:
 610:src/keys.c    **** 	alphas = State2.alphas;
 3394              		.loc 1 610 2 is_stmt 1 view .LVU1071
 611:src/keys.c    **** 	init_state();
 3395              		.loc 1 611 2 view .LVU1072
 612:src/keys.c    **** 	if (soft) {
 3396              		.loc 1 612 2 view .LVU1073
ARM GAS  /tmp/ccizbp1a.s 			page 124


 617:src/keys.c    **** 
 3397              		.loc 1 617 1 is_stmt 0 view .LVU1074
 3398 0036 BDE83840 		pop	{r3, r4, r5, lr}
 3399              		.cfi_remember_state
 3400              		.cfi_restore 14
 3401              		.cfi_restore 5
 3402              		.cfi_restore 4
 3403              		.cfi_restore 3
 3404              		.cfi_def_cfa_offset 0
 612:src/keys.c    **** 	if (soft) {
 3405              		.loc 1 612 2 view .LVU1075
 3406 003a FFF7FEBF 		b	init_state
 3407              	.LVL243:
 3408              	.L357:
 3409              		.cfi_restore_state
 3410              	.LBB385:
 3411              	.LBI385:
 597:src/keys.c    **** 	int soft;
 3412              		.loc 1 597 6 is_stmt 1 view .LVU1076
 3413              	.LBB386:
 603:src/keys.c    **** 		CmdLineEex = 0;
 3414              		.loc 1 603 3 view .LVU1077
 604:src/keys.c    **** 		CmdLineDot = 0;
 3415              		.loc 1 604 3 view .LVU1078
 605:src/keys.c    **** 		return;
 3416              		.loc 1 605 3 view .LVU1079
 603:src/keys.c    **** 		CmdLineEex = 0;
 3417              		.loc 1 603 17 is_stmt 0 view .LVU1080
 3418 003e 0023     		movs	r3, #0
 3419 0040 A383     		strh	r3, [r4, #28]	@ movhi
 605:src/keys.c    **** 		return;
 3420              		.loc 1 605 14 view .LVU1081
 3421 0042 A377     		strb	r3, [r4, #30]
 606:src/keys.c    **** 	}
 3422              		.loc 1 606 3 is_stmt 1 view .LVU1082
 3423              	.LBE386:
 3424              	.LBE385:
 617:src/keys.c    **** 
 3425              		.loc 1 617 1 is_stmt 0 view .LVU1083
 3426 0044 38BD     		pop	{r3, r4, r5, pc}
 3427              	.L359:
 3428 0046 00BF     		.align	2
 3429              	.L358:
 3430 0048 00000000 		.word	StateWhileOn
 3431 004c 002F2004 		.word	69218048
 3432              		.cfi_endproc
 3433              	.LFE14:
 3435              		.section	.text.current_catalogue_max,"ax",%progbits
 3436              		.align	1
 3437              		.p2align 2,,3
 3438              		.global	current_catalogue_max
 3439              		.syntax unified
 3440              		.thumb
 3441              		.thumb_func
 3442              		.fpu fpv4-sp-d16
 3444              	current_catalogue_max:
 3445              	.LFB39:
ARM GAS  /tmp/ccizbp1a.s 			page 125


2016:src/keys.c    **** 	// A quick table of catalogue sizes
 3446              		.loc 1 2016 33 is_stmt 1 view -0
 3447              		.cfi_startproc
 3448              		@ args = 0, pretend = 0, frame = 0
 3449              		@ frame_needed = 0, uses_anonymous_args = 0
 3450              		@ link register save eliminated.
2019:src/keys.c    **** 	{
 3451              		.loc 1 2019 2 view .LVU1085
2050:src/keys.c    **** #endif
 3452              		.loc 1 2050 2 view .LVU1086
2050:src/keys.c    **** #endif
 3453              		.loc 1 2050 31 is_stmt 0 view .LVU1087
 3454 0000 024B     		ldr	r3, .L361
2050:src/keys.c    **** #endif
 3455              		.loc 1 2050 24 view .LVU1088
 3456 0002 034A     		ldr	r2, .L361+4
2050:src/keys.c    **** #endif
 3457              		.loc 1 2050 31 view .LVU1089
 3458 0004 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2052:src/keys.c    **** 
 3459              		.loc 1 2052 1 view .LVU1090
 3460 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 3461 0008 7047     		bx	lr
 3462              	.L362:
 3463 000a 00BF     		.align	2
 3464              	.L361:
 3465 000c 00000000 		.word	StateWhileOn
 3466 0010 00000000 		.word	.LANCHOR2
 3467              		.cfi_endproc
 3468              	.LFE39:
 3470              		.section	.text.current_catalogue,"ax",%progbits
 3471              		.align	1
 3472              		.p2align 2,,3
 3473              		.global	current_catalogue
 3474              		.syntax unified
 3475              		.thumb
 3476              		.thumb_func
 3477              		.fpu fpv4-sp-d16
 3479              	current_catalogue:
 3480              	.LVL244:
 3481              	.LFB41:
2065:src/keys.c    **** 	// A quick table of catalogue tables
 3482              		.loc 1 2065 33 is_stmt 1 view -0
 3483              		.cfi_startproc
 3484              		@ args = 0, pretend = 0, frame = 0
 3485              		@ frame_needed = 0, uses_anonymous_args = 0
 3486              		@ link register save eliminated.
2068:src/keys.c    **** 	{
 3487              		.loc 1 2068 2 view .LVU1092
2095:src/keys.c    **** 	unsigned int c = State2.catalogue;
 3488              		.loc 1 2095 2 view .LVU1093
2096:src/keys.c    **** 	int m, i;
 3489              		.loc 1 2096 2 view .LVU1094
2096:src/keys.c    **** 	int m, i;
 3490              		.loc 1 2096 25 is_stmt 0 view .LVU1095
 3491 0000 314A     		ldr	r2, .L390
2096:src/keys.c    **** 	int m, i;
ARM GAS  /tmp/ccizbp1a.s 			page 126


 3492              		.loc 1 2096 15 view .LVU1096
 3493 0002 937B     		ldrb	r3, [r2, #14]	@ zero_extendqisi2
 3494              	.LVL245:
2097:src/keys.c    **** 	unsigned p, q;
 3495              		.loc 1 2097 2 is_stmt 1 view .LVU1097
2098:src/keys.c    **** 
 3496              		.loc 1 2098 2 view .LVU1098
2100:src/keys.c    **** 		if (n == OP_ZERO)
 3497              		.loc 1 2100 2 view .LVU1099
2100:src/keys.c    **** 		if (n == OP_ZERO)
 3498              		.loc 1 2100 5 is_stmt 0 view .LVU1100
 3499 0004 102B     		cmp	r3, #16
 3500 0006 39D0     		beq	.L384
2105:src/keys.c    **** 		if (n == OP_ZERO)
 3501              		.loc 1 2105 2 is_stmt 1 view .LVU1101
2105:src/keys.c    **** 		if (n == OP_ZERO)
 3502              		.loc 1 2105 5 is_stmt 0 view .LVU1102
 3503 0008 112B     		cmp	r3, #17
 3504 000a 32D0     		beq	.L385
2110:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 3505              		.loc 1 2110 2 is_stmt 1 view .LVU1103
2110:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 3506              		.loc 1 2110 5 is_stmt 0 view .LVU1104
 3507 000c 122B     		cmp	r3, #18
 3508 000e 45D0     		beq	.L386
2123:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 3509              		.loc 1 2123 2 is_stmt 1 view .LVU1105
2123:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 3510              		.loc 1 2123 5 is_stmt 0 view .LVU1106
 3511 0010 0E2B     		cmp	r3, #14
 3512 0012 38D0     		beq	.L387
2126:src/keys.c    **** 
 3513              		.loc 1 2126 3 is_stmt 1 view .LVU1107
2126:src/keys.c    **** 
 3514              		.loc 1 2126 7 is_stmt 0 view .LVU1108
 3515 0014 2D4A     		ldr	r2, .L390+4
2128:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3516              		.loc 1 2128 35 view .LVU1109
 3517 0016 A3F10B01 		sub	r1, r3, #11
2128:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3518              		.loc 1 2128 5 view .LVU1110
 3519 001a 0429     		cmp	r1, #4
2126:src/keys.c    **** 
 3520              		.loc 1 2126 7 view .LVU1111
 3521 001c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 3522              	.LVL246:
2128:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3523              		.loc 1 2128 2 is_stmt 1 view .LVU1112
2128:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3524              		.loc 1 2128 5 is_stmt 0 view .LVU1113
 3525 0020 38D9     		bls	.L370
2131:src/keys.c    **** 		return OP_NIL | OP_NOP;
 3526              		.loc 1 2131 2 is_stmt 1 view .LVU1114
2131:src/keys.c    **** 		return OP_NIL | OP_NOP;
 3527              		.loc 1 2131 5 is_stmt 0 view .LVU1115
 3528 0022 142B     		cmp	r3, #20
 3529 0024 4DD8     		bhi	.L378
ARM GAS  /tmp/ccizbp1a.s 			page 127


2135:src/keys.c    **** 	p = cat[0];
 3530              		.loc 1 2135 2 is_stmt 1 view .LVU1116
2065:src/keys.c    **** 	// A quick table of catalogue tables
 3531              		.loc 1 2065 33 is_stmt 0 view .LVU1117
 3532 0026 10B4     		push	{r4}
 3533              		.cfi_def_cfa_offset 4
 3534              		.cfi_offset 4, -4
2135:src/keys.c    **** 	p = cat[0];
 3535              		.loc 1 2135 11 view .LVU1118
 3536 0028 00EBA001 		add	r1, r0, r0, asr #2
2135:src/keys.c    **** 	p = cat[0];
 3537              		.loc 1 2135 6 view .LVU1119
 3538 002c 5318     		adds	r3, r2, r1
 3539              	.LVL247:
2136:src/keys.c    **** 	q = cat[1];
 3540              		.loc 1 2136 2 is_stmt 1 view .LVU1120
2137:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3541              		.loc 1 2137 2 view .LVU1121
2138:src/keys.c    **** 
 3542              		.loc 1 2138 2 view .LVU1122
2138:src/keys.c    **** 
 3543              		.loc 1 2138 35 is_stmt 0 view .LVU1123
 3544 002e 4000     		lsls	r0, r0, #1
 3545              	.LVL248:
2136:src/keys.c    **** 	q = cat[1];
 3546              		.loc 1 2136 4 view .LVU1124
 3547 0030 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 3548              	.LVL249:
2137:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3549              		.loc 1 2137 4 view .LVU1125
 3550 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3551              	.LVL250:
2137:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3552              		.loc 1 2137 4 view .LVU1126
 3553 0034 2649     		ldr	r1, .L390+8
 3554              	.LVL251:
2138:src/keys.c    **** 
 3555              		.loc 1 2138 54 view .LVU1127
 3556 0036 C443     		mvns	r4, r0
2138:src/keys.c    **** 
 3557              		.loc 1 2138 35 view .LVU1128
 3558 0038 00F00600 		and	r0, r0, #6
2138:src/keys.c    **** 
 3559              		.loc 1 2138 54 view .LVU1129
 3560 003c 04F00604 		and	r4, r4, #6
2138:src/keys.c    **** 
 3561              		.loc 1 2138 24 view .LVU1130
 3562 0040 0230     		adds	r0, r0, #2
2138:src/keys.c    **** 
 3563              		.loc 1 2138 48 view .LVU1131
 3564 0042 E340     		lsrs	r3, r3, r4
 3565              	.LVL252:
2138:src/keys.c    **** 
 3566              		.loc 1 2138 18 view .LVU1132
 3567 0044 02FA00F0 		lsl	r0, r2, r0
2138:src/keys.c    **** 
 3568              		.loc 1 2138 43 view .LVU1133
ARM GAS  /tmp/ccizbp1a.s 			page 128


 3569 0048 1843     		orrs	r0, r0, r3
2138:src/keys.c    **** 
 3570              		.loc 1 2138 4 view .LVU1134
 3571 004a C0F30903 		ubfx	r3, r0, #0, #10
 3572              	.LVL253:
2141:src/keys.c    **** 		if (m < opcode_breaks[i])
 3573              		.loc 1 2141 2 is_stmt 1 view .LVU1135
2141:src/keys.c    **** 		if (m < opcode_breaks[i])
 3574              		.loc 1 2141 12 view .LVU1136
2138:src/keys.c    **** 
 3575              		.loc 1 2138 4 is_stmt 0 view .LVU1137
 3576 004e 3422     		movs	r2, #52
 3577              	.LVL254:
2141:src/keys.c    **** 		if (m < opcode_breaks[i])
 3578              		.loc 1 2141 8 view .LVU1138
 3579 0050 0020     		movs	r0, #0
 3580 0052 01E0     		b	.L374
 3581              	.LVL255:
 3582              	.L389:
2141:src/keys.c    **** 		if (m < opcode_breaks[i])
 3583              		.loc 1 2141 8 view .LVU1139
 3584 0054 11F8012B 		ldrb	r2, [r1], #1	@ zero_extendqisi2
 3585              	.LVL256:
 3586              	.L374:
2142:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 3587              		.loc 1 2142 3 is_stmt 1 view .LVU1140
2144:src/keys.c    **** 	}
 3588              		.loc 1 2144 3 view .LVU1141
2142:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 3589              		.loc 1 2142 6 is_stmt 0 view .LVU1142
 3590 0058 9A42     		cmp	r2, r3
 3591 005a 2FDC     		bgt	.L388
2141:src/keys.c    **** 		if (m < opcode_breaks[i])
 3592              		.loc 1 2141 25 discriminator 2 view .LVU1143
 3593 005c 0130     		adds	r0, r0, #1
 3594              	.LVL257:
2141:src/keys.c    **** 		if (m < opcode_breaks[i])
 3595              		.loc 1 2141 2 discriminator 2 view .LVU1144
 3596 005e 0728     		cmp	r0, #7
2144:src/keys.c    **** 	}
 3597              		.loc 1 2144 5 discriminator 2 view .LVU1145
 3598 0060 A3EB0203 		sub	r3, r3, r2
 3599              	.LVL258:
2141:src/keys.c    **** 		if (m < opcode_breaks[i])
 3600              		.loc 1 2141 24 is_stmt 1 discriminator 2 view .LVU1146
2141:src/keys.c    **** 		if (m < opcode_breaks[i])
 3601              		.loc 1 2141 12 discriminator 2 view .LVU1147
2141:src/keys.c    **** 		if (m < opcode_breaks[i])
 3602              		.loc 1 2141 2 is_stmt 0 discriminator 2 view .LVU1148
 3603 0064 F6D1     		bne	.L389
2146:src/keys.c    **** }
 3604              		.loc 1 2146 2 is_stmt 1 view .LVU1149
2146:src/keys.c    **** }
 3605              		.loc 1 2146 9 is_stmt 0 view .LVU1150
 3606 0066 03F12000 		add	r0, r3, #32
 3607              	.LVL259:
2146:src/keys.c    **** }
ARM GAS  /tmp/ccizbp1a.s 			page 129


 3608              		.loc 1 2146 9 view .LVU1151
 3609 006a 0002     		lsls	r0, r0, #8
 3610              	.L363:
2147:src/keys.c    **** 
 3611              		.loc 1 2147 1 view .LVU1152
 3612 006c 5DF8044B 		ldr	r4, [sp], #4
 3613              		.cfi_restore 4
 3614              		.cfi_def_cfa_offset 0
 3615 0070 7047     		bx	lr
 3616              	.LVL260:
 3617              	.L385:
2106:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 3618              		.loc 1 2106 3 is_stmt 1 view .LVU1153
2106:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 3619              		.loc 1 2106 6 is_stmt 0 view .LVU1154
 3620 0072 4B28     		cmp	r0, #75
 3621 0074 1FD0     		beq	.L376
2108:src/keys.c    **** 	}
 3622              		.loc 1 2108 3 is_stmt 1 view .LVU1155
2108:src/keys.c    **** 	}
 3623              		.loc 1 2108 10 is_stmt 0 view .LVU1156
 3624 0076 40F40450 		orr	r0, r0, #8448
 3625              	.LVL261:
2108:src/keys.c    **** 	}
 3626              		.loc 1 2108 10 view .LVU1157
 3627 007a 7047     		bx	lr
 3628              	.LVL262:
 3629              	.L384:
2101:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 3630              		.loc 1 2101 3 is_stmt 1 view .LVU1158
2101:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 3631              		.loc 1 2101 6 is_stmt 0 view .LVU1159
 3632 007c 4B28     		cmp	r0, #75
 3633 007e 17D0     		beq	.L375
2103:src/keys.c    **** 	}
 3634              		.loc 1 2103 3 is_stmt 1 view .LVU1160
2103:src/keys.c    **** 	}
 3635              		.loc 1 2103 10 is_stmt 0 view .LVU1161
 3636 0080 40F40050 		orr	r0, r0, #8192
 3637              	.LVL263:
2103:src/keys.c    **** 	}
 3638              		.loc 1 2103 10 view .LVU1162
 3639 0084 7047     		bx	lr
 3640              	.LVL264:
 3641              	.L387:
2123:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 3642              		.loc 1 2123 35 discriminator 1 view .LVU1163
 3643 0086 917D     		ldrb	r1, [r2, #22]	@ zero_extendqisi2
2124:src/keys.c    **** 	else
 3644              		.loc 1 2124 7 discriminator 1 view .LVU1164
 3645 0088 124B     		ldr	r3, .L390+12
 3646              	.LVL265:
2124:src/keys.c    **** 	else
 3647              		.loc 1 2124 7 discriminator 1 view .LVU1165
 3648 008a 134A     		ldr	r2, .L390+16
 3649              	.LVL266:
2124:src/keys.c    **** 	else
ARM GAS  /tmp/ccizbp1a.s 			page 130


 3650              		.loc 1 2124 7 discriminator 1 view .LVU1166
 3651 008c 11F0100F 		tst	r1, #16
 3652 0090 18BF     		it	ne
 3653 0092 1A46     		movne	r2, r3
 3654              	.L370:
 3655              	.LVL267:
2129:src/keys.c    **** 	}
 3656              		.loc 1 2129 3 is_stmt 1 view .LVU1167
 3657              	.LBB387:
 3658              	.LBI387:
2058:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
 3659              		.loc 1 2058 15 view .LVU1168
 3660              	.LBB388:
2059:src/keys.c    **** }
 3661              		.loc 1 2059 2 view .LVU1169
2059:src/keys.c    **** }
 3662              		.loc 1 2059 9 is_stmt 0 view .LVU1170
 3663 0094 105C     		ldrb	r0, [r2, r0]	@ zero_extendqisi2
 3664              	.LVL268:
2059:src/keys.c    **** }
 3665              		.loc 1 2059 9 view .LVU1171
 3666 0096 40F48840 		orr	r0, r0, #17408
 3667              	.LVL269:
2059:src/keys.c    **** }
 3668              		.loc 1 2059 9 view .LVU1172
 3669              	.LBE388:
 3670              	.LBE387:
2129:src/keys.c    **** 	}
 3671              		.loc 1 2129 10 view .LVU1173
 3672 009a 7047     		bx	lr
 3673              	.LVL270:
 3674              	.L386:
 3675              	.LBB389:
2111:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3676              		.loc 1 2111 3 is_stmt 1 view .LVU1174
2111:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3677              		.loc 1 2111 33 is_stmt 0 view .LVU1175
 3678 009c 0F4B     		ldr	r3, .L390+20
 3679              	.LVL271:
2111:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3680              		.loc 1 2111 13 view .LVU1176
 3681 009e 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 3682              	.LVL272:
2112:src/keys.c    **** 			// Monadic conversion routine
 3683              		.loc 1 2112 3 is_stmt 1 view .LVU1177
2112:src/keys.c    **** 			// Monadic conversion routine
 3684              		.loc 1 2112 6 is_stmt 0 view .LVU1178
 3685 00a0 5728     		cmp	r0, #87
2114:src/keys.c    **** 		else
 3686              		.loc 1 2114 4 is_stmt 1 view .LVU1179
2114:src/keys.c    **** 		else
 3687              		.loc 1 2114 25 is_stmt 0 view .LVU1180
 3688 00a2 C6BF     		itte	gt
 3689 00a4 5838     		subgt	r0, r0, #88
 3690              	.LVL273:
2114:src/keys.c    **** 		else
 3691              		.loc 1 2114 18 view .LVU1181
ARM GAS  /tmp/ccizbp1a.s 			page 131


 3692 00a6 40F40070 		orrgt	r0, r0, #512
2116:src/keys.c    **** 	}
 3693              		.loc 1 2116 4 is_stmt 1 view .LVU1182
2116:src/keys.c    **** 	}
 3694              		.loc 1 2116 11 is_stmt 0 view .LVU1183
 3695 00aa 40F40C40 		orrle	r0, r0, #35840
 3696 00ae 7047     		bx	lr
 3697              	.LVL274:
 3698              	.L375:
2116:src/keys.c    **** 	}
 3699              		.loc 1 2116 11 view .LVU1184
 3700              	.LBE389:
2102:src/keys.c    **** 		return CONST(n);
 3701              		.loc 1 2102 11 view .LVU1185
 3702 00b0 4FF42740 		mov	r0, #42752
 3703              	.LVL275:
2102:src/keys.c    **** 		return CONST(n);
 3704              		.loc 1 2102 11 view .LVU1186
 3705 00b4 7047     		bx	lr
 3706              	.LVL276:
 3707              	.L376:
2107:src/keys.c    **** 		return CONST_CMPLX(n);
 3708              		.loc 1 2107 11 view .LVU1187
 3709 00b6 4FF42840 		mov	r0, #43008
 3710              	.LVL277:
2107:src/keys.c    **** 		return CONST_CMPLX(n);
 3711              		.loc 1 2107 11 view .LVU1188
 3712 00ba 7047     		bx	lr
 3713              	.LVL278:
 3714              	.L388:
 3715              		.cfi_def_cfa_offset 4
 3716              		.cfi_offset 4, -4
2143:src/keys.c    **** 		m -= opcode_breaks[i];
 3717              		.loc 1 2143 4 is_stmt 1 view .LVU1189
2143:src/keys.c    **** 		m -= opcode_breaks[i];
 3718              		.loc 1 2143 29 is_stmt 0 view .LVU1190
 3719 00bc 03EB0020 		add	r0, r3, r0, lsl #8
 3720              	.LVL279:
2143:src/keys.c    **** 		m -= opcode_breaks[i];
 3721              		.loc 1 2143 29 view .LVU1191
 3722 00c0 D4E7     		b	.L363
 3723              	.LVL280:
 3724              	.L378:
 3725              		.cfi_def_cfa_offset 0
 3726              		.cfi_restore 4
2132:src/keys.c    **** 
 3727              		.loc 1 2132 10 view .LVU1192
 3728 00c2 4FF48070 		mov	r0, #256
 3729              	.LVL281:
2147:src/keys.c    **** 
 3730              		.loc 1 2147 1 view .LVU1193
 3731 00c6 7047     		bx	lr
 3732              	.L391:
 3733              		.align	2
 3734              	.L390:
 3735 00c8 00000000 		.word	StateWhileOn
 3736 00cc 00000000 		.word	.LANCHOR6
ARM GAS  /tmp/ccizbp1a.s 			page 132


 3737 00d0 01000000 		.word	.LANCHOR7+1
 3738 00d4 00000000 		.word	.LANCHOR4
 3739 00d8 00000000 		.word	.LANCHOR3
 3740 00dc 00000000 		.word	.LANCHOR5
 3741              		.cfi_endproc
 3742              	.LFE41:
 3744              		.section	.text.process_catalogue,"ax",%progbits
 3745              		.align	1
 3746              		.p2align 2,,3
 3747              		.syntax unified
 3748              		.thumb
 3749              		.thumb_func
 3750              		.fpu fpv4-sp-d16
 3752              	process_catalogue:
 3753              	.LVL282:
 3754              	.LFB43:
2161:src/keys.c    **** 	int pos = State.catpos;
 3755              		.loc 1 2161 92 is_stmt 1 view -0
 3756              		.cfi_startproc
 3757              		@ args = 0, pretend = 0, frame = 16
 3758              		@ frame_needed = 0, uses_anonymous_args = 0
2161:src/keys.c    **** 	int pos = State.catpos;
 3759              		.loc 1 2161 92 is_stmt 0 view .LVU1195
 3760 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3761              		.cfi_def_cfa_offset 36
 3762              		.cfi_offset 4, -36
 3763              		.cfi_offset 5, -32
 3764              		.cfi_offset 6, -28
 3765              		.cfi_offset 7, -24
 3766              		.cfi_offset 8, -20
 3767              		.cfi_offset 9, -16
 3768              		.cfi_offset 10, -12
 3769              		.cfi_offset 11, -8
 3770              		.cfi_offset 14, -4
2162:src/keys.c    **** 	int ch;
 3771              		.loc 1 2162 12 view .LVU1196
 3772 0004 DFF8EC92 		ldr	r9, .L506+24
 3773              	.LBB390:
 3774              	.LBB391:
2050:src/keys.c    **** #endif
 3775              		.loc 1 2050 31 view .LVU1197
 3776 0008 B44E     		ldr	r6, .L506
 3777              	.LBE391:
 3778              	.LBE390:
2162:src/keys.c    **** 	int ch;
 3779              		.loc 1 2162 12 view .LVU1198
 3780 000a D9F80040 		ldr	r4, [r9]
 3781              	.LBB396:
 3782              	.LBB392:
2050:src/keys.c    **** #endif
 3783              		.loc 1 2050 31 view .LVU1199
 3784 000e 96F80EA0 		ldrb	r10, [r6, #14]	@ zero_extendqisi2
 3785              	.LBE392:
 3786              	.LBE396:
2162:src/keys.c    **** 	int ch;
 3787              		.loc 1 2162 17 view .LVU1200
 3788 0012 B4F8DC57 		ldrh	r5, [r4, #2012]
ARM GAS  /tmp/ccizbp1a.s 			page 133


 3789              	.LBB397:
 3790              	.LBB393:
2050:src/keys.c    **** #endif
 3791              		.loc 1 2050 24 view .LVU1201
 3792 0016 B24B     		ldr	r3, .L506+4
 3793              	.LBE393:
 3794              	.LBE397:
2162:src/keys.c    **** 	int ch;
 3795              		.loc 1 2162 2 is_stmt 1 view .LVU1202
2161:src/keys.c    **** 	int pos = State.catpos;
 3796              		.loc 1 2161 92 is_stmt 0 view .LVU1203
 3797 0018 85B0     		sub	sp, sp, #20
 3798              		.cfi_def_cfa_offset 56
 3799              	.LBB398:
 3800              	.LBB394:
2050:src/keys.c    **** #endif
 3801              		.loc 1 2050 24 view .LVU1204
 3802 001a 13F80A80 		ldrb	r8, [r3, r10]	@ zero_extendqisi2
 3803              	.LBE394:
 3804              	.LBE398:
2161:src/keys.c    **** 	int pos = State.catpos;
 3805              		.loc 1 2161 92 view .LVU1205
 3806 001e 1746     		mov	r7, r2
2162:src/keys.c    **** 	int ch;
 3807              		.loc 1 2162 6 view .LVU1206
 3808 0020 C5F34615 		ubfx	r5, r5, #5, #7
 3809              	.LVL283:
2163:src/keys.c    **** 	const int ctmax = current_catalogue_max();
 3810              		.loc 1 2163 2 is_stmt 1 view .LVU1207
2164:src/keys.c    **** 	const enum catalogues cat = (enum catalogues) State2.catalogue;
 3811              		.loc 1 2164 2 view .LVU1208
 3812              	.LBB399:
 3813              	.LBI390:
2016:src/keys.c    **** 	// A quick table of catalogue sizes
 3814              		.loc 1 2016 5 view .LVU1209
 3815              	.LBB395:
2019:src/keys.c    **** 	{
 3816              		.loc 1 2019 2 view .LVU1210
2050:src/keys.c    **** #endif
 3817              		.loc 1 2050 2 view .LVU1211
2050:src/keys.c    **** #endif
 3818              		.loc 1 2050 2 is_stmt 0 view .LVU1212
 3819              	.LBE395:
 3820              	.LBE399:
2165:src/keys.c    **** 
 3821              		.loc 1 2165 2 is_stmt 1 view .LVU1213
2167:src/keys.c    **** 		switch (c) {
 3822              		.loc 1 2167 2 view .LVU1214
2167:src/keys.c    **** 		switch (c) {
 3823              		.loc 1 2167 5 is_stmt 0 view .LVU1215
 3824 0024 0029     		cmp	r1, #0
 3825 0026 66D0     		beq	.L491
2232:src/keys.c    **** 		if (cat == CATALOGUE_CONV && c == K01) {
 3826              		.loc 1 2232 9 is_stmt 1 view .LVU1216
2232:src/keys.c    **** 		if (cat == CATALOGUE_CONV && c == K01) {
 3827              		.loc 1 2232 12 is_stmt 0 view .LVU1217
 3828 0028 0129     		cmp	r1, #1
ARM GAS  /tmp/ccizbp1a.s 			page 134


 3829 002a 00F0EE80 		beq	.L492
2266:src/keys.c    **** 		if (c == K24 && cat == CATALOGUE_SUMS) {
 3830              		.loc 1 2266 9 is_stmt 1 view .LVU1218
2266:src/keys.c    **** 		if (c == K24 && cat == CATALOGUE_SUMS) {
 3831              		.loc 1 2266 12 is_stmt 0 view .LVU1219
 3832 002e 0229     		cmp	r1, #2
 3833 0030 00F00C81 		beq	.L493
 3834              	.LVL284:
 3835              	.L428:
 3836              	.LBB400:
 3837              	.LBB401:
 440:src/keys.c    **** }
 3838              		.loc 1 440 2 is_stmt 1 view .LVU1220
 3839              	.LBB402:
 3840              	.LBI402:
 119:src/keys.c    **** {
 3841              		.loc 1 119 12 view .LVU1221
 3842              	.LBB403:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3843              		.loc 1 121 2 view .LVU1222
 131:src/keys.c    **** }
 3844              		.loc 1 131 2 view .LVU1223
 131:src/keys.c    **** }
 3845              		.loc 1 131 23 is_stmt 0 view .LVU1224
 3846 0034 AB4B     		ldr	r3, .L506+8
 3847              	.LBE403:
 3848              	.LBE402:
 440:src/keys.c    **** }
 3849              		.loc 1 440 49 view .LVU1225
 3850 0036 AC4A     		ldr	r2, .L506+12
 3851              	.LBB405:
 3852              	.LBB404:
 131:src/keys.c    **** }
 3853              		.loc 1 131 23 view .LVU1226
 3854 0038 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 3855              	.LBE404:
 3856              	.LBE405:
 440:src/keys.c    **** }
 3857              		.loc 1 440 49 view .LVU1227
 3858 003a 03EB4303 		add	r3, r3, r3, lsl #1
 3859 003e 02EB4303 		add	r3, r2, r3, lsl #1
 3860              	.LBE401:
 3861              	.LBE400:
 3862              	.LBB409:
 3863              	.LBB410:
 3864              	.LBB411:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 3865              		.loc 1 94 16 view .LVU1228
 3866 0042 0025     		movs	r5, #0
 3867              	.LVL285:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 3868              		.loc 1 94 16 view .LVU1229
 3869              	.LBE411:
 3870              	.LBE410:
 3871              	.LBE409:
2276:src/keys.c    **** 	reset_shift();
 3872              		.loc 1 2276 7 view .LVU1230
ARM GAS  /tmp/ccizbp1a.s 			page 135


 3873 0044 585C     		ldrb	r0, [r3, r1]	@ zero_extendqisi2
 3874              	.LVL286:
2276:src/keys.c    **** 	reset_shift();
 3875              		.loc 1 2276 7 view .LVU1231
 3876 0046 FFF7FEFF 		bl	remap_chars
 3877              	.LVL287:
2276:src/keys.c    **** 	reset_shift();
 3878              		.loc 1 2276 7 view .LVU1232
 3879 004a 0446     		mov	r4, r0
 3880              	.LVL288:
2277:src/keys.c    **** 	if (ch == '\0')
 3881              		.loc 1 2277 2 is_stmt 1 view .LVU1233
 3882              	.LBB416:
 3883              	.LBI409:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 3884              		.loc 1 102 13 view .LVU1234
 3885              	.LBE416:
 103:src/keys.c    **** }
 3886              		.loc 1 103 2 view .LVU1235
 3887              	.LBB417:
 3888              	.LBB415:
 3889              	.LBI410:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 3890              		.loc 1 92 20 view .LVU1236
 3891              	.LBB414:
  93:src/keys.c    **** 	State2.shifts = shift;
 3892              		.loc 1 93 2 view .LVU1237
 3893              	.LBB412:
 3894              	.LBI412:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 3895              		.loc 1 84 13 view .LVU1238
 3896              	.LBB413:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3897              		.loc 1 85 2 view .LVU1239
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3898              		.loc 1 85 18 is_stmt 0 view .LVU1240
 3899 004c FFF7FEFF 		bl	shift_down
 3900              	.LVL289:
  86:src/keys.c    **** }
 3901              		.loc 1 86 2 is_stmt 1 view .LVU1241
 3902              	.LBE413:
 3903              	.LBE412:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 3904              		.loc 1 94 2 view .LVU1242
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 3905              		.loc 1 94 16 is_stmt 0 view .LVU1243
 3906 0050 3574     		strb	r5, [r6, #16]
  95:src/keys.c    **** 	return r;
 3907              		.loc 1 95 2 is_stmt 1 view .LVU1244
  95:src/keys.c    **** 	return r;
 3908              		.loc 1 95 19 is_stmt 0 view .LVU1245
 3909 0052 7573     		strb	r5, [r6, #13]
  96:src/keys.c    **** }
 3910              		.loc 1 96 2 is_stmt 1 view .LVU1246
 3911              	.LVL290:
  96:src/keys.c    **** }
 3912              		.loc 1 96 2 is_stmt 0 view .LVU1247
ARM GAS  /tmp/ccizbp1a.s 			page 136


 3913              	.LBE414:
 3914              	.LBE415:
 3915              	.LBE417:
2278:src/keys.c    **** 		return STATE_UNFINISHED;
 3916              		.loc 1 2278 2 is_stmt 1 view .LVU1248
2278:src/keys.c    **** 		return STATE_UNFINISHED;
 3917              		.loc 1 2278 5 is_stmt 0 view .LVU1249
 3918 0054 002C     		cmp	r4, #0
 3919 0056 6FD0     		beq	.L490
2280:src/keys.c    **** 		// No multi character search in alpha catalogues
 3920              		.loc 1 2280 2 is_stmt 1 view .LVU1250
2280:src/keys.c    **** 		// No multi character search in alpha catalogues
 3921              		.loc 1 2280 5 is_stmt 0 view .LVU1251
 3922 0058 AAF10B0A 		sub	r10, r10, #11
 3923              	.LVL291:
2280:src/keys.c    **** 		// No multi character search in alpha catalogues
 3924              		.loc 1 2280 5 view .LVU1252
 3925 005c BAF1040F 		cmp	r10, #4
 3926 0060 40F2CB80 		bls	.L442
2284:src/keys.c    **** 		Cmdline[CmdLineLength++] = ch;
 3927              		.loc 1 2284 2 is_stmt 1 view .LVU1253
2284:src/keys.c    **** 		Cmdline[CmdLineLength++] = ch;
 3928              		.loc 1 2284 6 is_stmt 0 view .LVU1254
 3929 0064 357F     		ldrb	r5, [r6, #28]	@ zero_extendqisi2
2284:src/keys.c    **** 		Cmdline[CmdLineLength++] = ch;
 3930              		.loc 1 2284 5 view .LVU1255
 3931 0066 092D     		cmp	r5, #9
 3932 0068 40F2C780 		bls	.L442
 3933              	.LVL292:
 3934              	.L410:
2289:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 3935              		.loc 1 2289 2 is_stmt 1 view .LVU1256
2289:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 3936              		.loc 1 2289 25 is_stmt 0 view .LVU1257
 3937 006c 7319     		adds	r3, r6, r5
 3938 006e 0025     		movs	r5, #0
 3939 0070 83F82050 		strb	r5, [r3, #32]
2290:src/keys.c    **** 		char buf[16];
 3940              		.loc 1 2290 2 is_stmt 1 view .LVU1258
 3941              	.LVL293:
2290:src/keys.c    **** 		char buf[16];
 3942              		.loc 1 2290 16 view .LVU1259
2290:src/keys.c    **** 		char buf[16];
 3943              		.loc 1 2290 2 is_stmt 0 view .LVU1260
 3944 0074 B8F1000F 		cmp	r8, #0
 3945 0078 00F0D780 		beq	.L488
 3946              	.LVL294:
 3947              	.L430:
 3948              	.LBB418:
2291:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
 3949              		.loc 1 2291 3 is_stmt 1 view .LVU1261
2292:src/keys.c    **** 		int i;
 3950              		.loc 1 2292 3 view .LVU1262
2292:src/keys.c    **** 		int i;
 3951              		.loc 1 2292 21 is_stmt 0 view .LVU1263
 3952 007c 2846     		mov	r0, r5
 3953 007e FFF7FEFF 		bl	current_catalogue
ARM GAS  /tmp/ccizbp1a.s 			page 137


 3954              	.LVL295:
 3955 0082 6946     		mov	r1, sp
 3956 0084 FFF7FEFF 		bl	catcmd
 3957              	.LVL296:
 3958 0088 0446     		mov	r4, r0
 3959              	.LVL297:
2293:src/keys.c    **** 
 3960              		.loc 1 2293 3 is_stmt 1 view .LVU1264
2295:src/keys.c    **** 			cmd++;
 3961              		.loc 1 2295 3 view .LVU1265
2296:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 3962              		.loc 1 2296 4 view .LVU1266
2295:src/keys.c    **** 			cmd++;
 3963              		.loc 1 2295 7 is_stmt 0 view .LVU1267
 3964 008a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3965              	.LVL298:
2295:src/keys.c    **** 			cmd++;
 3966              		.loc 1 2295 6 view .LVU1268
 3967 008c 1428     		cmp	r0, #20
 3968 008e 04BF     		itt	eq
 3969 0090 6078     		ldrbeq	r0, [r4, #1]	@ zero_extendqisi2
2296:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 3970              		.loc 1 2296 7 view .LVU1269
 3971 0092 0134     		addeq	r4, r4, #1
 3972              	.LVL299:
2297:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3973              		.loc 1 2297 3 is_stmt 1 view .LVU1270
2297:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3974              		.loc 1 2297 13 view .LVU1271
2297:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3975              		.loc 1 2297 3 is_stmt 0 view .LVU1272
 3976 0094 0028     		cmp	r0, #0
 3977 0096 00F0BF80 		beq	.L432
 3978 009a DFF85CB2 		ldr	fp, .L506+28
 3979 009e C4F1010A 		rsb	r10, r4, #1
 3980 00a2 06E0     		b	.L435
 3981              	.LVL300:
 3982              	.L495:
 3983              	.LBB419:
2302:src/keys.c    **** 				break;
 3984              		.loc 1 2302 12 view .LVU1273
 3985 00a4 C0F2BA80 		blt	.L434
 3986              	.LBE419:
2297:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3987              		.loc 1 2297 16 discriminator 2 view .LVU1274
 3988 00a8 14F8010F 		ldrb	r0, [r4, #1]!	@ zero_extendqisi2
 3989              	.LVL301:
2297:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3990              		.loc 1 2297 3 discriminator 2 view .LVU1275
 3991 00ac 0028     		cmp	r0, #0
 3992 00ae 00F0BF80 		beq	.L494
 3993              	.LVL302:
 3994              	.L435:
 3995              	.LBB420:
2298:src/keys.c    **** 			const int cl = (unsigned char) Cmdline[i];
 3996              		.loc 1 2298 4 is_stmt 1 view .LVU1276
2298:src/keys.c    **** 			const int cl = (unsigned char) Cmdline[i];
ARM GAS  /tmp/ccizbp1a.s 			page 138


 3997              		.loc 1 2298 18 is_stmt 0 view .LVU1277
 3998 00b2 FFF7FEFF 		bl	remap_chars
 3999              	.LVL303:
2302:src/keys.c    **** 				break;
 4000              		.loc 1 2302 9 is_stmt 1 view .LVU1278
 4001              	.LBE420:
2297:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4002              		.loc 1 2297 29 view .LVU1279
 4003              	.LBB421:
2299:src/keys.c    **** 			if (c > cl)
 4004              		.loc 1 2299 4 view .LVU1280
2299:src/keys.c    **** 			if (c > cl)
 4005              		.loc 1 2299 42 is_stmt 0 view .LVU1281
 4006 00b6 1BF8013F 		ldrb	r3, [fp, #1]!	@ zero_extendqisi2
 4007              	.LVL304:
2300:src/keys.c    **** 				goto set_pos;
 4008              		.loc 1 2300 4 is_stmt 1 view .LVU1282
2300:src/keys.c    **** 				goto set_pos;
 4009              		.loc 1 2300 7 is_stmt 0 view .LVU1283
 4010 00ba 9842     		cmp	r0, r3
 4011 00bc 0AEB0402 		add	r2, r10, r4
 4012              	.LVL305:
2300:src/keys.c    **** 				goto set_pos;
 4013              		.loc 1 2300 7 view .LVU1284
 4014              	.LBE421:
2297:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4015              		.loc 1 2297 13 is_stmt 1 view .LVU1285
 4016              	.LBB422:
2300:src/keys.c    **** 				goto set_pos;
 4017              		.loc 1 2300 7 is_stmt 0 view .LVU1286
 4018 00c0 F0DD     		ble	.L495
 4019              	.LVL306:
 4020              	.L433:
2300:src/keys.c    **** 				goto set_pos;
 4021              		.loc 1 2300 7 view .LVU1287
 4022 00c2 D9F80040 		ldr	r4, [r9]
 4023              	.L413:
2300:src/keys.c    **** 				goto set_pos;
 4024              		.loc 1 2300 7 view .LVU1288
 4025              	.LBE422:
 4026              	.LBE418:
2311:src/keys.c    **** 		--pos;
 4027              		.loc 1 2311 8 is_stmt 1 view .LVU1289
 4028 00c6 002F     		cmp	r7, #0
 4029 00c8 00F0B680 		beq	.L417
2311:src/keys.c    **** 		--pos;
 4030              		.loc 1 2311 18 is_stmt 0 view .LVU1290
 4031 00cc 4DB1     		cbz	r5, .L411
 4032              	.LVL307:
 4033              	.L489:
2311:src/keys.c    **** 		--pos;
 4034              		.loc 1 2311 18 view .LVU1291
 4035 00ce 2846     		mov	r0, r5
 4036 00d0 FFF7FEFF 		bl	current_catalogue
 4037              	.LVL308:
2312:src/keys.c    **** 	State.catpos = pos;
 4038              		.loc 1 2312 3 is_stmt 1 view .LVU1292
ARM GAS  /tmp/ccizbp1a.s 			page 139


2311:src/keys.c    **** 		--pos;
 4039              		.loc 1 2311 8 view .LVU1293
 4040              	.LBB423:
 4041              	.LBI423:
2154:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 4042              		.loc 1 2154 12 view .LVU1294
 4043              	.LBB424:
2155:src/keys.c    **** }
 4044              		.loc 1 2155 2 view .LVU1295
2155:src/keys.c    **** }
 4045              		.loc 1 2155 33 is_stmt 0 view .LVU1296
 4046 00d4 00F0F000 		and	r0, r0, #240
 4047              	.LBE424:
 4048              	.LBE423:
2311:src/keys.c    **** 		--pos;
 4049              		.loc 1 2311 25 view .LVU1297
 4050 00d8 F028     		cmp	r0, #240
 4051 00da 40F0AD80 		bne	.L417
2311:src/keys.c    **** 		--pos;
 4052              		.loc 1 2311 18 view .LVU1298
 4053 00de 013D     		subs	r5, r5, #1
 4054              	.LVL309:
2311:src/keys.c    **** 		--pos;
 4055              		.loc 1 2311 18 view .LVU1299
 4056 00e0 F5D1     		bne	.L489
 4057              	.LVL310:
 4058              	.L411:
2313:src/keys.c    **** 	return STATE_UNFINISHED;
 4059              		.loc 1 2313 2 is_stmt 1 view .LVU1300
2313:src/keys.c    **** 	return STATE_UNFINISHED;
 4060              		.loc 1 2313 15 is_stmt 0 view .LVU1301
 4061 00e2 B4F8DC37 		ldrh	r3, [r4, #2012]
 4062 00e6 65F34B13 		bfi	r3, r5, #5, #7
 4063 00ea A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2314:src/keys.c    **** }
 4064              		.loc 1 2314 2 is_stmt 1 view .LVU1302
2314:src/keys.c    **** }
 4065              		.loc 1 2314 9 is_stmt 0 view .LVU1303
 4066 00ee 3320     		movs	r0, #51
 4067              	.L502:
2315:src/keys.c    **** 
 4068              		.loc 1 2315 1 view .LVU1304
 4069 00f0 05B0     		add	sp, sp, #20
 4070              		.cfi_remember_state
 4071              		.cfi_def_cfa_offset 36
 4072              		@ sp needed
 4073 00f2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4074              	.LVL311:
 4075              	.L491:
 4076              		.cfi_restore_state
2168:src/keys.c    **** #ifdef DM42
 4077              		.loc 1 2168 3 is_stmt 1 view .LVU1305
 4078 00f6 431F     		subs	r3, r0, #5
 4079 00f8 1F2B     		cmp	r3, #31
 4080 00fa 2FD8     		bhi	.L394
 4081 00fc DFE803F0 		tbb	[pc, r3]
 4082              	.LVL312:
ARM GAS  /tmp/ccizbp1a.s 			page 140


 4083              	.L396:
 4084 0100 35       		.byte	(.L400-.L396)/2
 4085 0101 2E       		.byte	(.L394-.L396)/2
 4086 0102 2E       		.byte	(.L394-.L396)/2
 4087 0103 2E       		.byte	(.L394-.L396)/2
 4088 0104 2E       		.byte	(.L394-.L396)/2
 4089 0105 2E       		.byte	(.L394-.L396)/2
 4090 0106 2E       		.byte	(.L394-.L396)/2
 4091 0107 35       		.byte	(.L400-.L396)/2
 4092 0108 2E       		.byte	(.L394-.L396)/2
 4093 0109 2E       		.byte	(.L394-.L396)/2
 4094 010a 2E       		.byte	(.L394-.L396)/2
 4095 010b 20       		.byte	(.L399-.L396)/2
 4096 010c 2E       		.byte	(.L394-.L396)/2
 4097 010d 64       		.byte	(.L398-.L396)/2
 4098 010e 2E       		.byte	(.L394-.L396)/2
 4099 010f 2E       		.byte	(.L394-.L396)/2
 4100 0110 2E       		.byte	(.L394-.L396)/2
 4101 0111 2E       		.byte	(.L394-.L396)/2
 4102 0112 2E       		.byte	(.L394-.L396)/2
 4103 0113 6B       		.byte	(.L397-.L396)/2
 4104 0114 2E       		.byte	(.L394-.L396)/2
 4105 0115 2E       		.byte	(.L394-.L396)/2
 4106 0116 2E       		.byte	(.L394-.L396)/2
 4107 0117 2E       		.byte	(.L394-.L396)/2
 4108 0118 2E       		.byte	(.L394-.L396)/2
 4109 0119 2E       		.byte	(.L394-.L396)/2
 4110 011a 2E       		.byte	(.L394-.L396)/2
 4111 011b 2E       		.byte	(.L394-.L396)/2
 4112 011c 2E       		.byte	(.L394-.L396)/2
 4113 011d 2E       		.byte	(.L394-.L396)/2
 4114 011e 2E       		.byte	(.L394-.L396)/2
 4115 011f 27       		.byte	(.L395-.L396)/2
 4116              		.p2align 1
 4117              	.L501:
2261:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 4118              		.loc 1 2261 39 is_stmt 0 discriminator 1 view .LVU1306
 4119 0120 724A     		ldr	r2, .L506+16
 4120              	.LVL313:
2261:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 4121              		.loc 1 2261 39 discriminator 1 view .LVU1307
 4122 0122 7369     		ldr	r3, [r6, #20]
2261:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 4123              		.loc 1 2261 21 discriminator 1 view .LVU1308
 4124 0124 1A42     		tst	r2, r3
 4125 0126 75D0     		beq	.L425
2263:src/keys.c    **** 			return STATE_UNFINISHED;
 4126              		.loc 1 2263 4 is_stmt 1 view .LVU1309
2263:src/keys.c    **** 			return STATE_UNFINISHED;
 4127              		.loc 1 2263 34 is_stmt 0 view .LVU1310
 4128 0128 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 4129 012a C3F30012 		ubfx	r2, r3, #4, #1
2263:src/keys.c    **** 			return STATE_UNFINISHED;
 4130              		.loc 1 2263 26 view .LVU1311
 4131 012e C2F10102 		rsb	r2, r2, #1
2263:src/keys.c    **** 			return STATE_UNFINISHED;
 4132              		.loc 1 2263 22 view .LVU1312
ARM GAS  /tmp/ccizbp1a.s 			page 141


 4133 0132 62F30413 		bfi	r3, r2, #4, #1
 4134 0136 B375     		strb	r3, [r6, #22]
 4135              	.LVL314:
 4136              	.L490:
2264:src/keys.c    **** 		}
 4137              		.loc 1 2264 4 is_stmt 1 view .LVU1313
2264:src/keys.c    **** 		}
 4138              		.loc 1 2264 11 is_stmt 0 view .LVU1314
 4139 0138 3320     		movs	r0, #51
 4140              	.L392:
2315:src/keys.c    **** 
 4141              		.loc 1 2315 1 view .LVU1315
 4142 013a 05B0     		add	sp, sp, #20
 4143              		.cfi_remember_state
 4144              		.cfi_def_cfa_offset 36
 4145              		@ sp needed
 4146 013c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4147              	.LVL315:
 4148              	.L399:
 4149              		.cfi_restore_state
2198:src/keys.c    **** #else
 4150              		.loc 1 2198 5 is_stmt 1 view .LVU1316
2198:src/keys.c    **** #else
 4151              		.loc 1 2198 8 is_stmt 0 view .LVU1317
 4152 0140 337F     		ldrb	r3, [r6, #28]	@ zero_extendqisi2
 4153 0142 23B1     		cbz	r3, .L395
2198:src/keys.c    **** #else
 4154              		.loc 1 2198 30 discriminator 1 view .LVU1318
 4155 0144 FFF7FEFF 		bl	keyticks
 4156              	.LVL316:
2198:src/keys.c    **** #else
 4157              		.loc 1 2198 27 discriminator 1 view .LVU1319
 4158 0148 1D28     		cmp	r0, #29
 4159 014a 40F39580 		ble	.L496
 4160              	.L395:
2211:src/keys.c    **** 			return STATE_UNFINISHED;
 4161              		.loc 1 2211 4 is_stmt 1 view .LVU1320
 4162 014e 0020     		movs	r0, #0
 4163 0150 FFF7FEFF 		bl	init_cat
 4164              	.LVL317:
2212:src/keys.c    **** 
 4165              		.loc 1 2212 4 view .LVU1321
2212:src/keys.c    **** 
 4166              		.loc 1 2212 11 is_stmt 0 view .LVU1322
 4167 0154 3320     		movs	r0, #51
2315:src/keys.c    **** 
 4168              		.loc 1 2315 1 view .LVU1323
 4169 0156 05B0     		add	sp, sp, #20
 4170              		.cfi_remember_state
 4171              		.cfi_def_cfa_offset 36
 4172              		@ sp needed
 4173 0158 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4174              	.LVL318:
 4175              	.L394:
 4176              		.cfi_restore_state
 4177              	.LBB425:
 4178              	.LBI400:
ARM GAS  /tmp/ccizbp1a.s 			page 142


 384:src/keys.c    **** {
 4179              		.loc 1 384 12 is_stmt 1 discriminator 4 view .LVU1324
 4180              	.LBB406:
 386:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4181              		.loc 1 386 2 discriminator 4 view .LVU1325
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4182              		.loc 1 434 2 discriminator 4 view .LVU1326
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4183              		.loc 1 434 6 is_stmt 0 discriminator 4 view .LVU1327
 4184 015c B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4185              		.loc 1 434 5 discriminator 4 view .LVU1328
 4186 015e 13F0100F 		tst	r3, #16
 4187 0162 14BF     		ite	ne
 4188 0164 0421     		movne	r1, #4
 4189              	.LVL319:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4190              		.loc 1 434 5 discriminator 4 view .LVU1329
 4191 0166 0021     		moveq	r1, #0
 4192 0168 64E7     		b	.L428
 4193              	.LVL320:
 4194              	.L400:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4195              		.loc 1 434 5 discriminator 4 view .LVU1330
 4196              	.LBE406:
 4197              	.LBE425:
2175:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 4198              		.loc 1 2175 4 is_stmt 1 view .LVU1331
2175:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 4199              		.loc 1 2175 7 is_stmt 0 view .LVU1332
 4200 016a 4545     		cmp	r5, r8
 4201 016c EFDA     		bge	.L395
 4202 016e 2846     		mov	r0, r5
 4203              	.LVL321:
2175:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 4204              		.loc 1 2175 20 discriminator 1 view .LVU1333
 4205 0170 002F     		cmp	r7, #0
 4206 0172 00F08D80 		beq	.L497
 4207              	.LVL322:
 4208              	.LBB426:
 4209              	.LBI426:
2154:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 4210              		.loc 1 2154 12 is_stmt 1 view .LVU1334
 4211              	.LBB427:
2155:src/keys.c    **** }
 4212              		.loc 1 2155 2 view .LVU1335
2155:src/keys.c    **** }
 4213              		.loc 1 2155 10 is_stmt 0 view .LVU1336
 4214 0176 FFF7FEFF 		bl	current_catalogue
 4215              	.LVL323:
2155:src/keys.c    **** }
 4216              		.loc 1 2155 33 view .LVU1337
 4217 017a 00F0F003 		and	r3, r0, #240
 4218              	.LBE427:
 4219              	.LBE426:
2175:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 4220              		.loc 1 2175 23 view .LVU1338
ARM GAS  /tmp/ccizbp1a.s 			page 143


 4221 017e F02B     		cmp	r3, #240
 4222              	.LBB429:
 4223              	.LBB428:
2155:src/keys.c    **** }
 4224              		.loc 1 2155 10 view .LVU1339
 4225 0180 0446     		mov	r4, r0
 4226              	.LBE428:
 4227              	.LBE429:
2175:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 4228              		.loc 1 2175 23 view .LVU1340
 4229 0182 E4D0     		beq	.L395
 4230              	.L403:
 4231              	.LBB430:
2176:src/keys.c    **** 
 4232              		.loc 1 2176 5 is_stmt 1 view .LVU1341
2178:src/keys.c    **** 
 4233              		.loc 1 2178 5 view .LVU1342
 4234 0184 0020     		movs	r0, #0
 4235 0186 FFF7FEFF 		bl	init_cat
 4236              	.LVL324:
2180:src/keys.c    **** 					const unsigned int rarg = RARG_CMD(op);
 4237              		.loc 1 2180 5 view .LVU1343
2180:src/keys.c    **** 					const unsigned int rarg = RARG_CMD(op);
 4238              		.loc 1 2180 8 is_stmt 0 view .LVU1344
 4239 018a 14F47043 		ands	r3, r4, #61440
 4240 018e 00F08C80 		beq	.L404
2180:src/keys.c    **** 					const unsigned int rarg = RARG_CMD(op);
 4241              		.loc 1 2180 9 discriminator 1 view .LVU1345
 4242 0192 B3F5704F 		cmp	r3, #61440
 4243 0196 00F08880 		beq	.L404
 4244              	.LBB431:
2181:src/keys.c    **** 					if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4245              		.loc 1 2181 6 is_stmt 1 view .LVU1346
2181:src/keys.c    **** 					if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4246              		.loc 1 2181 32 is_stmt 0 view .LVU1347
 4247 019a C4F30723 		ubfx	r3, r4, #8, #8
 4248 019e A3F12005 		sub	r5, r3, #32
 4249              	.LVL325:
2181:src/keys.c    **** 					if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4250              		.loc 1 2181 32 view .LVU1348
 4251 01a2 EDB2     		uxtb	r5, r5
 4252              	.LVL326:
2182:src/keys.c    **** 						return op;
 4253              		.loc 1 2182 6 is_stmt 1 view .LVU1349
2182:src/keys.c    **** 						return op;
 4254              		.loc 1 2182 9 is_stmt 0 view .LVU1350
 4255 01a4 012D     		cmp	r5, #1
 4256 01a6 40F28980 		bls	.L405
2182:src/keys.c    **** 						return op;
 4257              		.loc 1 2182 57 discriminator 1 view .LVU1351
 4258 01aa 6C2D     		cmp	r5, #108
 4259 01ac 00F08680 		beq	.L405
2182:src/keys.c    **** 						return op;
 4260              		.loc 1 2182 78 discriminator 2 view .LVU1352
 4261 01b0 242D     		cmp	r5, #36
 4262 01b2 00F08380 		beq	.L405
2184:src/keys.c    **** 						State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
ARM GAS  /tmp/ccizbp1a.s 			page 144


 4263              		.loc 1 2184 6 is_stmt 1 view .LVU1353
2184:src/keys.c    **** 						State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4264              		.loc 1 2184 31 is_stmt 0 view .LVU1354
 4265 01b6 A5F12D02 		sub	r2, r5, #45
2184:src/keys.c    **** 						State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4266              		.loc 1 2184 9 view .LVU1355
 4267 01ba 062A     		cmp	r2, #6
 4268 01bc 00F29E80 		bhi	.L408
2185:src/keys.c    **** 					else
 4269              		.loc 1 2185 7 is_stmt 1 view .LVU1356
2185:src/keys.c    **** 					else
 4270              		.loc 1 2185 28 is_stmt 0 view .LVU1357
 4271 01c0 4D3B     		subs	r3, r3, #77
2185:src/keys.c    **** 					else
 4272              		.loc 1 2185 19 view .LVU1358
 4273 01c2 F373     		strb	r3, [r6, #15]
 4274              	.LBE431:
 4275              	.LBE430:
2194:src/keys.c    **** 
 4276              		.loc 1 2194 11 view .LVU1359
 4277 01c4 3320     		movs	r0, #51
 4278              	.LBB441:
 4279              	.LBB434:
 4280 01c6 B8E7     		b	.L392
 4281              	.LVL327:
 4282              	.L398:
2194:src/keys.c    **** 
 4283              		.loc 1 2194 11 view .LVU1360
 4284              	.LBE434:
 4285              	.LBE441:
2215:src/keys.c    **** 			if (pos == 0)
 4286              		.loc 1 2215 4 is_stmt 1 view .LVU1361
2215:src/keys.c    **** 			if (pos == 0)
 4287              		.loc 1 2215 18 is_stmt 0 view .LVU1362
 4288 01c8 0023     		movs	r3, #0
 4289 01ca 3377     		strb	r3, [r6, #28]
2216:src/keys.c    **** 				goto set_max;
 4290              		.loc 1 2216 4 is_stmt 1 view .LVU1363
2216:src/keys.c    **** 				goto set_max;
 4291              		.loc 1 2216 7 is_stmt 0 view .LVU1364
 4292 01cc 002D     		cmp	r5, #0
 4293 01ce 5DD1     		bne	.L498
 4294              	.LVL328:
 4295              	.L412:
2309:src/keys.c    **** set_pos:
 4296              		.loc 1 2309 2 is_stmt 1 view .LVU1365
2309:src/keys.c    **** set_pos:
 4297              		.loc 1 2309 6 is_stmt 0 view .LVU1366
 4298 01d0 08F1FF35 		add	r5, r8, #-1
 4299              	.LVL329:
2309:src/keys.c    **** set_pos:
 4300              		.loc 1 2309 6 view .LVU1367
 4301 01d4 77E7     		b	.L413
 4302              	.LVL330:
 4303              	.L397:
2223:src/keys.c    **** 			while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 4304              		.loc 1 2223 4 is_stmt 1 view .LVU1368
ARM GAS  /tmp/ccizbp1a.s 			page 145


2223:src/keys.c    **** 			while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 4305              		.loc 1 2223 18 is_stmt 0 view .LVU1369
 4306 01d6 0023     		movs	r3, #0
 4307 01d8 3377     		strb	r3, [r6, #28]
2224:src/keys.c    **** 			if (pos >= ctmax)
 4308              		.loc 1 2224 4 is_stmt 1 view .LVU1370
2224:src/keys.c    **** 			if (pos >= ctmax)
 4309              		.loc 1 2224 10 is_stmt 0 view .LVU1371
 4310 01da 06E0     		b	.L416
 4311              	.LVL331:
 4312              	.L499:
2224:src/keys.c    **** 			if (pos >= ctmax)
 4313              		.loc 1 2224 25 discriminator 1 view .LVU1372
 4314 01dc 67B3     		cbz	r7, .L417
 4315              	.LBB442:
 4316              	.LBB443:
2155:src/keys.c    **** }
 4317              		.loc 1 2155 10 view .LVU1373
 4318 01de FFF7FEFF 		bl	current_catalogue
 4319              	.LVL332:
2155:src/keys.c    **** }
 4320              		.loc 1 2155 33 view .LVU1374
 4321 01e2 00F0F000 		and	r0, r0, #240
 4322              	.LBE443:
 4323              	.LBE442:
2224:src/keys.c    **** 			if (pos >= ctmax)
 4324              		.loc 1 2224 37 view .LVU1375
 4325 01e6 F028     		cmp	r0, #240
 4326 01e8 26D1     		bne	.L417
 4327              	.L416:
2224:src/keys.c    **** 			if (pos >= ctmax)
 4328              		.loc 1 2224 61 is_stmt 1 discriminator 3 view .LVU1376
2224:src/keys.c    **** 			if (pos >= ctmax)
 4329              		.loc 1 2224 10 discriminator 3 view .LVU1377
 4330 01ea 0135     		adds	r5, r5, #1
 4331              	.LVL333:
 4332              	.LBB446:
 4333              	.LBI442:
2154:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 4334              		.loc 1 2154 12 discriminator 3 view .LVU1378
 4335              	.LBB444:
2155:src/keys.c    **** }
 4336              		.loc 1 2155 2 discriminator 3 view .LVU1379
 4337              	.LBE444:
 4338              	.LBE446:
2224:src/keys.c    **** 			if (pos >= ctmax)
 4339              		.loc 1 2224 10 is_stmt 0 discriminator 3 view .LVU1380
 4340 01ec A845     		cmp	r8, r5
 4341              	.LBB447:
 4342              	.LBB445:
2155:src/keys.c    **** }
 4343              		.loc 1 2155 10 discriminator 3 view .LVU1381
 4344 01ee 2846     		mov	r0, r5
 4345              	.LBE445:
 4346              	.LBE447:
2224:src/keys.c    **** 			if (pos >= ctmax)
 4347              		.loc 1 2224 10 discriminator 3 view .LVU1382
ARM GAS  /tmp/ccizbp1a.s 			page 146


 4348 01f0 F4DC     		bgt	.L499
 4349              	.LVL334:
2311:src/keys.c    **** 		--pos;
 4350              		.loc 1 2311 8 is_stmt 1 view .LVU1383
2226:src/keys.c    **** 			goto set_pos;
 4351              		.loc 1 2226 9 is_stmt 0 view .LVU1384
 4352 01f2 3D46     		mov	r5, r7
 4353              	.LVL335:
2311:src/keys.c    **** 		--pos;
 4354              		.loc 1 2311 8 view .LVU1385
 4355 01f4 07B3     		cbz	r7, .L417
 4356              	.LVL336:
2311:src/keys.c    **** 		--pos;
 4357              		.loc 1 2311 8 view .LVU1386
 4358 01f6 0025     		movs	r5, #0
 4359              	.LVL337:
2311:src/keys.c    **** 		--pos;
 4360              		.loc 1 2311 8 view .LVU1387
 4361 01f8 73E7     		b	.L411
 4362              	.LVL338:
 4363              	.L442:
2284:src/keys.c    **** 		Cmdline[CmdLineLength++] = ch;
 4364              		.loc 1 2284 6 view .LVU1388
 4365 01fa 2B46     		mov	r3, r5
2285:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
 4366              		.loc 1 2285 3 is_stmt 1 view .LVU1389
2285:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
 4367              		.loc 1 2285 28 is_stmt 0 view .LVU1390
 4368 01fc 3344     		add	r3, r3, r6
2285:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
 4369              		.loc 1 2285 24 view .LVU1391
 4370 01fe 0135     		adds	r5, r5, #1
 4371 0200 EDB2     		uxtb	r5, r5
 4372 0202 3577     		strb	r5, [r6, #28]
2285:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
 4373              		.loc 1 2285 28 view .LVU1392
 4374 0204 83F82040 		strb	r4, [r3, #32]
 4375 0208 30E7     		b	.L410
 4376              	.LVL339:
 4377              	.L492:
2233:src/keys.c    **** 			/*
 4378              		.loc 1 2233 3 is_stmt 1 view .LVU1393
2233:src/keys.c    **** 			/*
 4379              		.loc 1 2233 6 is_stmt 0 view .LVU1394
 4380 020a BAF1120F 		cmp	r10, #18
 4381 020e 21D0     		beq	.L500
 4382              	.L419:
2261:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 4383              		.loc 1 2261 8 is_stmt 1 view .LVU1395
2261:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 4384              		.loc 1 2261 11 is_stmt 0 view .LVU1396
 4385 0210 2428     		cmp	r0, #36
 4386 0212 85D0     		beq	.L501
 4387              	.LVL340:
 4388              	.L425:
2276:src/keys.c    **** 	reset_shift();
 4389              		.loc 1 2276 2 is_stmt 1 view .LVU1397
ARM GAS  /tmp/ccizbp1a.s 			page 147


 4390              	.LBB448:
 384:src/keys.c    **** {
 4391              		.loc 1 384 12 view .LVU1398
 4392              	.LBB407:
 386:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4393              		.loc 1 386 2 view .LVU1399
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4394              		.loc 1 434 2 view .LVU1400
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4395              		.loc 1 434 5 is_stmt 0 view .LVU1401
 4396 0214 0121     		movs	r1, #1
 4397              	.LVL341:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4398              		.loc 1 434 5 view .LVU1402
 4399 0216 0DE7     		b	.L428
 4400              	.LVL342:
 4401              	.L432:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4402              		.loc 1 434 5 view .LVU1403
 4403 0218 96F82030 		ldrb	r3, [r6, #32]	@ zero_extendqisi2
 4404              	.LVL343:
 4405              	.L434:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4406              		.loc 1 434 5 view .LVU1404
 4407              	.LBE407:
 4408              	.LBE448:
 4409              	.LBB449:
2305:src/keys.c    **** 			goto set_pos;
 4410              		.loc 1 2305 3 is_stmt 1 view .LVU1405
2305:src/keys.c    **** 			goto set_pos;
 4411              		.loc 1 2305 6 is_stmt 0 view .LVU1406
 4412 021c 002B     		cmp	r3, #0
 4413 021e 3FF450AF 		beq	.L433
 4414              	.LBE449:
2290:src/keys.c    **** 		char buf[16];
 4415              		.loc 1 2290 29 is_stmt 1 view .LVU1407
 4416 0222 0135     		adds	r5, r5, #1
 4417              	.LVL344:
2290:src/keys.c    **** 		char buf[16];
 4418              		.loc 1 2290 16 view .LVU1408
2290:src/keys.c    **** 		char buf[16];
 4419              		.loc 1 2290 2 is_stmt 0 view .LVU1409
 4420 0224 A845     		cmp	r8, r5
 4421 0226 7FF429AF 		bne	.L430
 4422              	.LVL345:
 4423              	.L488:
2290:src/keys.c    **** 		char buf[16];
 4424              		.loc 1 2290 2 view .LVU1410
 4425 022a D9F80040 		ldr	r4, [r9]
 4426 022e CFE7     		b	.L412
 4427              	.LVL346:
 4428              	.L494:
2290:src/keys.c    **** 		char buf[16];
 4429              		.loc 1 2290 2 view .LVU1411
 4430 0230 3244     		add	r2, r2, r6
 4431              	.LVL347:
2290:src/keys.c    **** 		char buf[16];
ARM GAS  /tmp/ccizbp1a.s 			page 148


 4432              		.loc 1 2290 2 view .LVU1412
 4433 0232 92F82030 		ldrb	r3, [r2, #32]	@ zero_extendqisi2
 4434              	.LVL348:
2290:src/keys.c    **** 		char buf[16];
 4435              		.loc 1 2290 2 view .LVU1413
 4436 0236 F1E7     		b	.L434
 4437              	.LVL349:
 4438              	.L417:
2313:src/keys.c    **** 	return STATE_UNFINISHED;
 4439              		.loc 1 2313 15 view .LVU1414
 4440 0238 B4F8DC37 		ldrh	r3, [r4, #2012]
 4441 023c 05F07F05 		and	r5, r5, #127
 4442              	.LVL350:
2313:src/keys.c    **** 	return STATE_UNFINISHED;
 4443              		.loc 1 2313 2 is_stmt 1 view .LVU1415
2313:src/keys.c    **** 	return STATE_UNFINISHED;
 4444              		.loc 1 2313 15 is_stmt 0 view .LVU1416
 4445 0240 65F34B13 		bfi	r3, r5, #5, #7
 4446 0244 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2314:src/keys.c    **** }
 4447              		.loc 1 2314 2 is_stmt 1 view .LVU1417
2314:src/keys.c    **** }
 4448              		.loc 1 2314 9 is_stmt 0 view .LVU1418
 4449 0248 3320     		movs	r0, #51
 4450 024a 51E7     		b	.L502
 4451              	.LVL351:
 4452              	.L493:
2267:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
 4453              		.loc 1 2267 3 is_stmt 1 view .LVU1419
2267:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
 4454              		.loc 1 2267 6 is_stmt 0 view .LVU1420
 4455 024c 1028     		cmp	r0, #16
 4456 024e 23D0     		beq	.L503
 4457              	.L427:
2276:src/keys.c    **** 	reset_shift();
 4458              		.loc 1 2276 2 is_stmt 1 view .LVU1421
 4459              	.LVL352:
 4460              	.LBB450:
 384:src/keys.c    **** {
 4461              		.loc 1 384 12 view .LVU1422
 4462              	.LBB408:
 386:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4463              		.loc 1 386 2 view .LVU1423
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4464              		.loc 1 434 2 view .LVU1424
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4465              		.loc 1 434 5 is_stmt 0 view .LVU1425
 4466 0250 0521     		movs	r1, #5
 4467              	.LVL353:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4468              		.loc 1 434 5 view .LVU1426
 4469 0252 EFE6     		b	.L428
 4470              	.LVL354:
 4471              	.L500:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4472              		.loc 1 434 5 view .LVU1427
 4473              	.LBE408:
ARM GAS  /tmp/ccizbp1a.s 			page 149


 4474              	.LBE450:
2233:src/keys.c    **** 			/*
 4475              		.loc 1 2233 29 discriminator 1 view .LVU1428
 4476 0254 0128     		cmp	r0, #1
 4477 0256 DBD1     		bne	.L419
 4478              	.LBB451:
2242:src/keys.c    **** 				OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
 4479              		.loc 1 2242 4 is_stmt 1 view .LVU1429
2250:src/keys.c    **** 			int i;
 4480              		.loc 1 2250 4 view .LVU1430
2250:src/keys.c    **** 			int i;
 4481              		.loc 1 2250 22 is_stmt 0 view .LVU1431
 4482 0258 2846     		mov	r0, r5
 4483              	.LVL355:
2250:src/keys.c    **** 			int i;
 4484              		.loc 1 2250 22 view .LVU1432
 4485 025a FFF7FEFF 		bl	current_catalogue
 4486              	.LVL356:
2250:src/keys.c    **** 			int i;
 4487              		.loc 1 2250 22 view .LVU1433
 4488 025e 0446     		mov	r4, r0
 4489              	.LVL357:
2251:src/keys.c    **** 
 4490              		.loc 1 2251 4 is_stmt 1 view .LVU1434
2253:src/keys.c    **** 			if (isRARG(op))
 4491              		.loc 1 2253 4 view .LVU1435
 4492 0260 0020     		movs	r0, #0
 4493              	.LVL358:
2253:src/keys.c    **** 			if (isRARG(op))
 4494              		.loc 1 2253 4 is_stmt 0 view .LVU1436
 4495 0262 FFF7FEFF 		bl	init_cat
 4496              	.LVL359:
2254:src/keys.c    **** 				return op ^ 1;
 4497              		.loc 1 2254 4 is_stmt 1 view .LVU1437
2254:src/keys.c    **** 				return op ^ 1;
 4498              		.loc 1 2254 7 is_stmt 0 view .LVU1438
 4499 0266 14F47043 		ands	r3, r4, #61440
 4500 026a 29D0     		beq	.L420
2254:src/keys.c    **** 				return op ^ 1;
 4501              		.loc 1 2254 8 discriminator 1 view .LVU1439
 4502 026c B3F5704F 		cmp	r3, #61440
 4503 0270 26D0     		beq	.L420
2255:src/keys.c    **** 			for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 4504              		.loc 1 2255 5 is_stmt 1 view .LVU1440
2255:src/keys.c    **** 			for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 4505              		.loc 1 2255 15 is_stmt 0 view .LVU1441
 4506 0272 84F00100 		eor	r0, r4, #1
 4507 0276 60E7     		b	.L392
 4508              	.LVL360:
 4509              	.L496:
2255:src/keys.c    **** 			for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 4510              		.loc 1 2255 15 view .LVU1442
 4511              	.LBE451:
2202:src/keys.c    **** 					goto search;
 4512              		.loc 1 2202 9 is_stmt 1 view .LVU1443
2202:src/keys.c    **** 					goto search;
 4513              		.loc 1 2202 13 is_stmt 0 view .LVU1444
ARM GAS  /tmp/ccizbp1a.s 			page 150


 4514 0278 357F     		ldrb	r5, [r6, #28]	@ zero_extendqisi2
 4515              	.LVL361:
2202:src/keys.c    **** 					goto search;
 4516              		.loc 1 2202 13 view .LVU1445
 4517 027a 013D     		subs	r5, r5, #1
 4518 027c EDB2     		uxtb	r5, r5
2202:src/keys.c    **** 					goto search;
 4519              		.loc 1 2202 12 view .LVU1446
 4520 027e 3577     		strb	r5, [r6, #28]
 4521 0280 002D     		cmp	r5, #0
 4522 0282 7FF4F3AE 		bne	.L410
 4523 0286 D9F80040 		ldr	r4, [r9]
 4524 028a 2AE7     		b	.L411
 4525              	.LVL362:
 4526              	.L498:
2219:src/keys.c    **** 			goto set_pos;
 4527              		.loc 1 2219 5 is_stmt 1 view .LVU1447
 4528 028c 013D     		subs	r5, r5, #1
 4529              	.LVL363:
2220:src/keys.c    **** 
 4530              		.loc 1 2220 4 view .LVU1448
 4531 028e 1AE7     		b	.L413
 4532              	.LVL364:
 4533              	.L497:
2220:src/keys.c    **** 
 4534              		.loc 1 2220 4 is_stmt 0 view .LVU1449
 4535 0290 FFF7FEFF 		bl	current_catalogue
 4536              	.LVL365:
2220:src/keys.c    **** 
 4537              		.loc 1 2220 4 view .LVU1450
 4538 0294 0446     		mov	r4, r0
 4539 0296 75E7     		b	.L403
 4540              	.LVL366:
 4541              	.L503:
2267:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
 4542              		.loc 1 2267 16 discriminator 1 view .LVU1451
 4543 0298 BAF1130F 		cmp	r10, #19
 4544 029c D8D1     		bne	.L427
2268:src/keys.c    **** 			return OP_NIL | OP_SIGMACLEAR;
 4545              		.loc 1 2268 4 is_stmt 1 view .LVU1452
 4546 029e 0020     		movs	r0, #0
 4547              	.LVL367:
2268:src/keys.c    **** 			return OP_NIL | OP_SIGMACLEAR;
 4548              		.loc 1 2268 4 is_stmt 0 view .LVU1453
 4549 02a0 FFF7FEFF 		bl	init_cat
 4550              	.LVL368:
2269:src/keys.c    **** 		}
 4551              		.loc 1 2269 4 is_stmt 1 view .LVU1454
2269:src/keys.c    **** 		}
 4552              		.loc 1 2269 11 is_stmt 0 view .LVU1455
 4553 02a4 40F23D10 		movw	r0, #317
 4554 02a8 47E7     		b	.L392
 4555              	.L404:
 4556              	.LBB452:
2190:src/keys.c    **** 				}
 4557              		.loc 1 2190 6 is_stmt 1 view .LVU1456
 4558              	.LBB435:
ARM GAS  /tmp/ccizbp1a.s 			page 151


 4559              	.LBB436:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 4560              		.loc 1 620 5 is_stmt 0 view .LVU1457
 4561 02aa C4F30723 		ubfx	r3, r4, #8, #8
 4562 02ae 012B     		cmp	r3, #1
 4563              	.LBE436:
 4564              	.LBE435:
2190:src/keys.c    **** 				}
 4565              		.loc 1 2190 13 view .LVU1458
 4566 02b0 2046     		mov	r0, r4
 4567              	.LVL369:
 4568              	.LBB438:
 4569              	.LBI435:
 619:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 4570              		.loc 1 619 12 is_stmt 1 view .LVU1459
 4571              	.LBB437:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 4572              		.loc 1 620 2 view .LVU1460
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 4573              		.loc 1 620 5 is_stmt 0 view .LVU1461
 4574 02b2 7FF442AF 		bne	.L392
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 4575              		.loc 1 620 5 view .LVU1462
 4576 02b6 FFF7FEFF 		bl	check_confirm.part.0
 4577              	.LVL370:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 4578              		.loc 1 620 5 view .LVU1463
 4579 02ba 3EE7     		b	.L392
 4580              	.LVL371:
 4581              	.L405:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 4582              		.loc 1 620 5 view .LVU1464
 4583              	.LBE437:
 4584              	.LBE438:
 4585              	.LBB439:
2183:src/keys.c    **** 					if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4586              		.loc 1 2183 7 is_stmt 1 view .LVU1465
2183:src/keys.c    **** 					if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4587              		.loc 1 2183 14 is_stmt 0 view .LVU1466
 4588 02bc 2046     		mov	r0, r4
 4589 02be 3CE7     		b	.L392
 4590              	.LVL372:
 4591              	.L420:
2183:src/keys.c    **** 					if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4592              		.loc 1 2183 14 view .LVU1467
 4593 02c0 0B48     		ldr	r0, .L506+20
 4594              	.LBE439:
 4595              	.LBE452:
2161:src/keys.c    **** 	int pos = State.catpos;
 4596              		.loc 1 2161 92 view .LVU1468
 4597 02c2 40F28522 		movw	r2, #645
 4598 02c6 0146     		mov	r1, r0
 4599 02c8 0023     		movs	r3, #0
 4600 02ca 01E0     		b	.L422
 4601              	.LVL373:
 4602              	.L505:
2161:src/keys.c    **** 	int pos = State.catpos;
ARM GAS  /tmp/ccizbp1a.s 			page 152


 4603              		.loc 1 2161 92 view .LVU1469
 4604 02cc 31F8022F 		ldrh	r2, [r1, #2]!
 4605              	.LVL374:
 4606              	.L422:
 4607              	.LBB453:
2257:src/keys.c    **** 					return conv_mapping[i^1];
 4608              		.loc 1 2257 5 is_stmt 1 view .LVU1470
2256:src/keys.c    **** 				if (op == conv_mapping[i])
 4609              		.loc 1 2256 68 view .LVU1471
2257:src/keys.c    **** 					return conv_mapping[i^1];
 4610              		.loc 1 2257 8 is_stmt 0 view .LVU1472
 4611 02d0 A242     		cmp	r2, r4
 4612 02d2 1DD0     		beq	.L504
2256:src/keys.c    **** 				if (op == conv_mapping[i])
 4613              		.loc 1 2256 68 discriminator 2 view .LVU1473
 4614 02d4 0133     		adds	r3, r3, #1
 4615              	.LVL375:
2256:src/keys.c    **** 				if (op == conv_mapping[i])
 4616              		.loc 1 2256 16 is_stmt 1 discriminator 2 view .LVU1474
2256:src/keys.c    **** 				if (op == conv_mapping[i])
 4617              		.loc 1 2256 4 is_stmt 0 discriminator 2 view .LVU1475
 4618 02d6 0C2B     		cmp	r3, #12
 4619 02d8 F8D1     		bne	.L505
 4620 02da 2DE7     		b	.L490
 4621              	.L507:
 4622              		.align	2
 4623              	.L506:
 4624 02dc 00000000 		.word	StateWhileOn
 4625 02e0 00000000 		.word	.LANCHOR2
 4626 02e4 00000000 		.word	.LANCHOR1
 4627 02e8 00000000 		.word	.LANCHOR9
 4628 02ec 00080800 		.word	526336
 4629 02f0 00000000 		.word	.LANCHOR8
 4630 02f4 00000000 		.word	main_ram
 4631 02f8 1F000000 		.word	StateWhileOn+31
 4632              	.LVL376:
 4633              	.L408:
2256:src/keys.c    **** 				if (op == conv_mapping[i])
 4634              		.loc 1 2256 4 discriminator 2 view .LVU1476
 4635              	.LBE453:
 4636              	.LBB454:
 4637              	.LBB440:
2187:src/keys.c    **** 				}
 4638              		.loc 1 2187 7 is_stmt 1 view .LVU1477
 4639              	.LBB432:
 4640              	.LBI432:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 4641              		.loc 1 501 13 view .LVU1478
 4642              	.LBB433:
 502:src/keys.c    **** 		return;
 4643              		.loc 1 502 2 view .LVU1479
 502:src/keys.c    **** 		return;
 4644              		.loc 1 502 6 is_stmt 0 view .LVU1480
 4645 02fc FFF7FEFF 		bl	is_bad_cmdline
 4646              	.LVL377:
 502:src/keys.c    **** 		return;
 4647              		.loc 1 502 5 view .LVU1481
ARM GAS  /tmp/ccizbp1a.s 			page 153


 4648 0300 0028     		cmp	r0, #0
 4649 0302 7FF419AF 		bne	.L490
 4650 0306 2846     		mov	r0, r5
 4651 0308 FFF7FEFF 		bl	init_arg.part.0
 4652              	.LVL378:
 4653              	.LBE433:
 4654              	.LBE432:
 4655              	.LBE440:
 4656              	.LBE454:
2194:src/keys.c    **** 
 4657              		.loc 1 2194 11 view .LVU1482
 4658 030c 3320     		movs	r0, #51
 4659 030e 14E7     		b	.L392
 4660              	.LVL379:
 4661              	.L504:
 4662              	.LBB455:
2258:src/keys.c    **** 			return STATE_UNFINISHED;		// Unreached
 4663              		.loc 1 2258 6 is_stmt 1 view .LVU1483
2258:src/keys.c    **** 			return STATE_UNFINISHED;		// Unreached
 4664              		.loc 1 2258 27 is_stmt 0 view .LVU1484
 4665 0310 83F00103 		eor	r3, r3, #1
 4666              	.LVL380:
2258:src/keys.c    **** 			return STATE_UNFINISHED;		// Unreached
 4667              		.loc 1 2258 25 view .LVU1485
 4668 0314 30F81300 		ldrh	r0, [r0, r3, lsl #1]
 4669 0318 0FE7     		b	.L392
 4670              	.LBE455:
 4671              		.cfi_endproc
 4672              	.LFE43:
 4674 031a 00BF     		.section	.text.find_pos,"ax",%progbits
 4675              		.align	1
 4676              		.p2align 2,,3
 4677              		.global	find_pos
 4678              		.syntax unified
 4679              		.thumb
 4680              		.thumb_func
 4681              		.fpu fpv4-sp-d16
 4683              	find_pos:
 4684              	.LVL381:
 4685              	.LFB44:
2318:src/keys.c    **** 	int pos;
 4686              		.loc 1 2318 32 is_stmt 1 view -0
 4687              		.cfi_startproc
 4688              		@ args = 0, pretend = 0, frame = 16
 4689              		@ frame_needed = 0, uses_anonymous_args = 0
2319:src/keys.c    **** 	const int ctmax = current_catalogue_max();
 4690              		.loc 1 2319 2 view .LVU1487
2320:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 4691              		.loc 1 2320 2 view .LVU1488
 4692              	.LBB456:
 4693              	.LBI456:
2016:src/keys.c    **** 	// A quick table of catalogue sizes
 4694              		.loc 1 2016 5 view .LVU1489
 4695              	.LBB457:
2019:src/keys.c    **** 	{
 4696              		.loc 1 2019 2 view .LVU1490
2050:src/keys.c    **** #endif
ARM GAS  /tmp/ccizbp1a.s 			page 154


 4697              		.loc 1 2050 2 view .LVU1491
 4698              	.LBE457:
 4699              	.LBE456:
2318:src/keys.c    **** 	int pos;
 4700              		.loc 1 2318 32 is_stmt 0 view .LVU1492
 4701 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 4702              		.cfi_def_cfa_offset 32
 4703              		.cfi_offset 4, -32
 4704              		.cfi_offset 5, -28
 4705              		.cfi_offset 6, -24
 4706              		.cfi_offset 7, -20
 4707              		.cfi_offset 8, -16
 4708              		.cfi_offset 9, -12
 4709              		.cfi_offset 10, -8
 4710              		.cfi_offset 14, -4
 4711              	.LBB459:
 4712              	.LBB458:
2050:src/keys.c    **** #endif
 4713              		.loc 1 2050 31 view .LVU1493
 4714 0004 1E4B     		ldr	r3, .L525
2050:src/keys.c    **** #endif
 4715              		.loc 1 2050 24 view .LVU1494
 4716 0006 1F4A     		ldr	r2, .L525+4
2050:src/keys.c    **** #endif
 4717              		.loc 1 2050 31 view .LVU1495
 4718 0008 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2050:src/keys.c    **** #endif
 4719              		.loc 1 2050 24 view .LVU1496
 4720 000a 12F803A0 		ldrb	r10, [r2, r3]	@ zero_extendqisi2
 4721              	.LVL382:
2050:src/keys.c    **** #endif
 4722              		.loc 1 2050 24 view .LVU1497
 4723              	.LBE458:
 4724              	.LBE459:
2321:src/keys.c    **** 		char buf[16];
 4725              		.loc 1 2321 2 is_stmt 1 view .LVU1498
2321:src/keys.c    **** 		char buf[16];
 4726              		.loc 1 2321 16 view .LVU1499
2318:src/keys.c    **** 	int pos;
 4727              		.loc 1 2318 32 is_stmt 0 view .LVU1500
 4728 000e 84B0     		sub	sp, sp, #16
 4729              		.cfi_def_cfa_offset 48
2321:src/keys.c    **** 		char buf[16];
 4730              		.loc 1 2321 2 view .LVU1501
 4731 0010 BAF1000F 		cmp	r10, #0
 4732 0014 32D0     		beq	.L515
 4733 0016 8146     		mov	r9, r0
2321:src/keys.c    **** 		char buf[16];
 4734              		.loc 1 2321 11 view .LVU1502
 4735 0018 4FF00008 		mov	r8, #0
 4736 001c C0F10107 		rsb	r7, r0, #1
 4737              	.LVL383:
 4738              	.L514:
 4739              	.LBB460:
2322:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
 4740              		.loc 1 2322 3 is_stmt 1 view .LVU1503
2323:src/keys.c    **** 		int i;
ARM GAS  /tmp/ccizbp1a.s 			page 155


 4741              		.loc 1 2323 3 view .LVU1504
2323:src/keys.c    **** 		int i;
 4742              		.loc 1 2323 21 is_stmt 0 view .LVU1505
 4743 0020 4046     		mov	r0, r8
 4744 0022 FFF7FEFF 		bl	current_catalogue
 4745              	.LVL384:
 4746 0026 6946     		mov	r1, sp
 4747 0028 FFF7FEFF 		bl	catcmd
 4748              	.LVL385:
 4749 002c 0646     		mov	r6, r0
 4750              	.LVL386:
2324:src/keys.c    **** 
 4751              		.loc 1 2324 3 is_stmt 1 view .LVU1506
2326:src/keys.c    **** 			cmd++;
 4752              		.loc 1 2326 3 view .LVU1507
2327:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 4753              		.loc 1 2327 4 view .LVU1508
2326:src/keys.c    **** 			cmd++;
 4754              		.loc 1 2326 7 is_stmt 0 view .LVU1509
 4755 002e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4756              	.LVL387:
2326:src/keys.c    **** 			cmd++;
 4757              		.loc 1 2326 6 view .LVU1510
 4758 0030 1428     		cmp	r0, #20
 4759 0032 04BF     		itt	eq
 4760 0034 7078     		ldrbeq	r0, [r6, #1]	@ zero_extendqisi2
2327:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 4761              		.loc 1 2327 7 view .LVU1511
 4762 0036 0136     		addeq	r6, r6, #1
 4763              	.LVL388:
2328:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4764              		.loc 1 2328 3 is_stmt 1 view .LVU1512
2328:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4765              		.loc 1 2328 13 view .LVU1513
2328:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4766              		.loc 1 2328 3 is_stmt 0 view .LVU1514
 4767 0038 A8B1     		cbz	r0, .L516
 4768 003a 09F1FF33 		add	r3, r9, #-1
 4769 003e 04E0     		b	.L513
 4770              	.LVL389:
 4771              	.L524:
 4772              	.LBB461:
2333:src/keys.c    **** 				break;
 4773              		.loc 1 2333 12 view .LVU1515
 4774 0040 12DB     		blt	.L511
 4775              	.LBE461:
2328:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4776              		.loc 1 2328 16 discriminator 2 view .LVU1516
 4777 0042 16F8010F 		ldrb	r0, [r6, #1]!	@ zero_extendqisi2
 4778              	.LVL390:
2328:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4779              		.loc 1 2328 16 discriminator 2 view .LVU1517
 4780 0046 3C44     		add	r4, r4, r7
2328:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4781              		.loc 1 2328 3 discriminator 2 view .LVU1518
 4782 0048 B0B1     		cbz	r0, .L523
 4783              	.LVL391:
ARM GAS  /tmp/ccizbp1a.s 			page 156


 4784              	.L513:
 4785              	.LBB462:
2329:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 4786              		.loc 1 2329 4 is_stmt 1 view .LVU1519
 4787 004a 5C1C     		adds	r4, r3, #1
2329:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 4788              		.loc 1 2329 18 is_stmt 0 view .LVU1520
 4789 004c FFF7FEFF 		bl	remap_chars
 4790              	.LVL392:
 4791 0050 0546     		mov	r5, r0
2330:src/keys.c    **** 			if (c > cl)
 4792              		.loc 1 2330 19 view .LVU1521
 4793 0052 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 4794              	.LVL393:
2330:src/keys.c    **** 			if (c > cl)
 4795              		.loc 1 2330 4 is_stmt 1 view .LVU1522
2330:src/keys.c    **** 			if (c > cl)
 4796              		.loc 1 2330 19 is_stmt 0 view .LVU1523
 4797 0054 FFF7FEFF 		bl	remap_chars
 4798              	.LVL394:
2333:src/keys.c    **** 				break;
 4799              		.loc 1 2333 9 is_stmt 1 view .LVU1524
 4800              	.LBE462:
2328:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4801              		.loc 1 2328 29 view .LVU1525
2328:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4802              		.loc 1 2328 13 view .LVU1526
 4803              	.LBB463:
2331:src/keys.c    **** 				return pos;
 4804              		.loc 1 2331 4 view .LVU1527
2331:src/keys.c    **** 				return pos;
 4805              		.loc 1 2331 7 is_stmt 0 view .LVU1528
 4806 0058 8542     		cmp	r5, r0
 4807 005a 2346     		mov	r3, r4
 4808 005c F0DD     		ble	.L524
 4809              	.LVL395:
 4810              	.L508:
2331:src/keys.c    **** 				return pos;
 4811              		.loc 1 2331 7 view .LVU1529
 4812              	.LBE463:
 4813              	.LBE460:
2340:src/keys.c    **** 
 4814              		.loc 1 2340 1 view .LVU1530
 4815 005e 4046     		mov	r0, r8
 4816 0060 04B0     		add	sp, sp, #16
 4817              		.cfi_remember_state
 4818              		.cfi_def_cfa_offset 32
 4819              		@ sp needed
 4820 0062 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4821              	.LVL396:
 4822              	.L516:
 4823              		.cfi_restore_state
 4824              	.LBB464:
2328:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4825              		.loc 1 2328 3 view .LVU1531
 4826 0066 4C46     		mov	r4, r9
 4827              	.LVL397:
ARM GAS  /tmp/ccizbp1a.s 			page 157


 4828              	.L511:
2336:src/keys.c    **** 			return pos;
 4829              		.loc 1 2336 3 is_stmt 1 view .LVU1532
2336:src/keys.c    **** 			return pos;
 4830              		.loc 1 2336 6 is_stmt 0 view .LVU1533
 4831 0068 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4832 006a 002B     		cmp	r3, #0
 4833 006c F7D0     		beq	.L508
 4834              	.LBE464:
2321:src/keys.c    **** 		char buf[16];
 4835              		.loc 1 2321 29 is_stmt 1 view .LVU1534
 4836 006e 08F10108 		add	r8, r8, #1
 4837              	.LVL398:
2321:src/keys.c    **** 		char buf[16];
 4838              		.loc 1 2321 16 view .LVU1535
2321:src/keys.c    **** 		char buf[16];
 4839              		.loc 1 2321 2 is_stmt 0 view .LVU1536
 4840 0072 D045     		cmp	r8, r10
 4841 0074 D4D1     		bne	.L514
 4842 0076 F2E7     		b	.L508
 4843              	.LVL399:
 4844              	.L523:
2321:src/keys.c    **** 		char buf[16];
 4845              		.loc 1 2321 2 view .LVU1537
 4846 0078 4C44     		add	r4, r4, r9
 4847 007a F5E7     		b	.L511
 4848              	.LVL400:
 4849              	.L515:
2321:src/keys.c    **** 		char buf[16];
 4850              		.loc 1 2321 11 view .LVU1538
 4851 007c D046     		mov	r8, r10
 4852 007e EEE7     		b	.L508
 4853              	.L526:
 4854              		.align	2
 4855              	.L525:
 4856 0080 00000000 		.word	StateWhileOn
 4857 0084 00000000 		.word	.LANCHOR2
 4858              		.cfi_endproc
 4859              	.LFE44:
 4861              		.section	.text.get_alpha_state,"ax",%progbits
 4862              		.align	1
 4863              		.p2align 2,,3
 4864              		.global	get_alpha_state
 4865              		.syntax unified
 4866              		.thumb
 4867              		.thumb_func
 4868              		.fpu fpv4-sp-d16
 4870              	get_alpha_state:
 4871              	.LFB56:
2665:src/keys.c    **** 
2666:src/keys.c    **** 
2667:src/keys.c    **** static int process_registerlist(const keycode c) {
2668:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
2669:src/keys.c    **** 	enum shifts shift = reset_shift();
2670:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
2671:src/keys.c    **** 	const int g_max = global_regs();
2672:src/keys.c    **** 
ARM GAS  /tmp/ccizbp1a.s 			page 158


2673:src/keys.c    **** 	if (n == LOCAL_REG_BASE) {	// '.'
2674:src/keys.c    **** 		if (local_regs())
2675:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
2676:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
2677:src/keys.c    **** 		goto reset_window;
2678:src/keys.c    **** 	}
2679:src/keys.c    **** 	else if (n <= 9) {
2680:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
2681:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
2682:src/keys.c    **** 			dv = n;
2683:src/keys.c    **** 		State2.digval = dv;
2684:src/keys.c    **** 		goto reset_window;
2685:src/keys.c    **** 	}
2686:src/keys.c    **** 	else if ((shift == SHIFT_F || shift == SHIFT_G) && c == K21) {  // <( )>
2687:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
2688:src/keys.c    **** 		set_smode(SDISP_SHOW);
2689:src/keys.c    **** 	}
2690:src/keys.c    **** 	else if (n != NO_REG) {
2691:src/keys.c    **** 		State2.digval = n;
2692:src/keys.c    **** 		goto reset_window;
2693:src/keys.c    **** 	}
2694:src/keys.c    **** 
2695:src/keys.c    **** 	switch (c) {
2696:src/keys.c    **** 	case K_DOWN:
2697:src/keys.c    **** 		if (State2.digval > 0) {
2698:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
2699:src/keys.c    **** 				State2.digval = global_regs();
2700:src/keys.c    **** 			--State2.digval;
2701:src/keys.c    **** 		}
2702:src/keys.c    **** 		else
2703:src/keys.c    **** 			State2.digval = max - 1;
2704:src/keys.c    **** 		goto reset_window;
2705:src/keys.c    **** 
2706:src/keys.c    **** 	case K_UP:
2707:src/keys.c    **** 		if (State2.digval < max - 1) {
2708:src/keys.c    **** 			State2.digval++;
2709:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
2710:src/keys.c    **** 				State2.digval = regX_idx;
2711:src/keys.c    **** 		}
2712:src/keys.c    **** 		else	
2713:src/keys.c    **** 			State2.digval = 0;
2714:src/keys.c    **** 		goto reset_window;
2715:src/keys.c    **** 
2716:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
2717:src/keys.c    **** 	case K04:
2718:src/keys.c    **** 		State2.digval2 = ! State2.digval2 && ! State2.local;
2719:src/keys.c    **** 		goto reset_window;
2720:src/keys.c    **** #endif
2721:src/keys.c    **** 
2722:src/keys.c    **** 	case K24:			
2723:src/keys.c    **** 	//case K60:
2724:src/keys.c    **** 		if (State2.disp_temp)
2725:src/keys.c    **** 			return STATE_UNFINISHED;
2726:src/keys.c    **** 		break;		// Exit doing nothing
2727:src/keys.c    **** 
2728:src/keys.c    **** 	case K20:		// ENTER
2729:src/keys.c    **** 		if (shift == SHIFT_F) {
ARM GAS  /tmp/ccizbp1a.s 			page 159


2730:src/keys.c    **** 			State2.disp_as_alpha = 1;
2731:src/keys.c    **** 			goto reset_window;
2732:src/keys.c    **** 		}
2733:src/keys.c    **** 	case K11:		// RCL
2734:src/keys.c    **** 		if ( shift == SHIFT_N ) {
2735:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
2736:src/keys.c    **** 			n = RARG( State2.digval2 ? RARG_FLRCL : RARG_RCL, State2.digval );
2737:src/keys.c    **** #else
2738:src/keys.c    **** 			n = RARG( RARG_RCL, State2.digval );
2739:src/keys.c    **** #endif
2740:src/keys.c    **** 			State2.registerlist = 0;
2741:src/keys.c    **** 			State2.digval = 0;
2742:src/keys.c    **** 			State2.digval2 = 0;
2743:src/keys.c    **** 			return n;
2744:src/keys.c    **** 		}
2745:src/keys.c    **** 	default:
2746:src/keys.c    **** 		return STATE_UNFINISHED;
2747:src/keys.c    **** 	}
2748:src/keys.c    **** 	State2.registerlist = 0;
2749:src/keys.c    **** 	State2.digval = 0;
2750:src/keys.c    **** 	State2.digval2 = 0;
2751:src/keys.c    **** reset_window:
2752:src/keys.c    **** 	State2.window = 0;
2753:src/keys.c    **** 	return STATE_UNFINISHED;
2754:src/keys.c    **** }
2755:src/keys.c    **** 
2756:src/keys.c    **** 
2757:src/keys.c    **** static int process(const int c) {
2758:src/keys.c    ****   const enum shifts shift = cur_shift();
2759:src/keys.c    ****   enum catalogues cat;
2760:src/keys.c    **** 
2761:src/keys.c    **** #ifdef DM42
2762:src/keys.c    ****   // print_debug (0, c);
2763:src/keys.c    ****   if (Running || PAUSED) {
2764:src/keys.c    ****     /*
2765:src/keys.c    ****      *  Abort a running program with R/S or EXIT
2766:src/keys.c    ****      */
2767:src/keys.c    ****     if (c == K60 || c == K63) {
2768:src/keys.c    ****       if (PAUSED && isXROM(state_pc()))
2769:src/keys.c    **** 	set_pc(0);
2770:src/keys.c    ****       start_pause (0); //end the pause
2771:src/keys.c    ****       xeq_xrom();
2772:src/keys.c    ****       set_running_off();
2773:src/keys.c    ****       DispMsg = "Stopped";
2774:src/keys.c    ****       State2.disp_freeze = 0;
2775:src/keys.c    ****       return STATE_UNFINISHED;
2776:src/keys.c    ****     }
2777:src/keys.c    ****     if ( c != K_HEARTBEAT ) {
2778:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
2779:src/keys.c    ****       start_pause(0);			// leave PSE statement
2780:src/keys.c    ****       GoFast = 1;
2781:src/keys.c    ****     }
2782:src/keys.c    ****     // continue execution if really running, else ignore (PSE)
2783:src/keys.c    ****     return STATE_RUNNING;
2784:src/keys.c    ****   }
2785:src/keys.c    **** #else
2786:src/keys.c    ****   if (Running || Pause) {
ARM GAS  /tmp/ccizbp1a.s 			page 160


2787:src/keys.c    ****     /*
2788:src/keys.c    ****      *  Abort a running program with R/S or EXIT
2789:src/keys.c    ****      */
2790:src/keys.c    ****     if (c == K60 || c == K63) {
2791:src/keys.c    ****       if (Pause && isXROM(state_pc()))
2792:src/keys.c    **** 	set_pc(0);
2793:src/keys.c    ****       Pause = 0;
2794:src/keys.c    ****       xeq_xrom();
2795:src/keys.c    ****       set_running_off();
2796:src/keys.c    ****       DispMsg = "Stopped";
2797:src/keys.c    ****       State2.disp_freeze = 0;
2798:src/keys.c    ****       return STATE_UNFINISHED;
2799:src/keys.c    ****     }
2800:src/keys.c    ****     if ( c != K_HEARTBEAT ) {
2801:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
2802:src/keys.c    ****       Pause = 0;			// leave PSE statement
2803:src/keys.c    ****       GoFast = 1;
2804:src/keys.c    ****     }
2805:src/keys.c    ****     // continue execution if really running, else ignore (PSE)
2806:src/keys.c    ****     return STATE_RUNNING;
2807:src/keys.c    ****   }
2808:src/keys.c    **** #endif
2809:src/keys.c    ****   /* Check for ON in the unshifted state -- this is a reset sequence
2810:src/keys.c    ****    * common across all modes.  Shifted modes need to check this themselves
2811:src/keys.c    ****    * if required.
2812:src/keys.c    ****    */
2813:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue) {
2814:src/keys.c    ****     soft_init_state();
2815:src/keys.c    ****     return STATE_UNFINISHED;
2816:src/keys.c    ****   }
2817:src/keys.c    **** 
2818:src/keys.c    **** #ifndef CONSOLE
2819:src/keys.c    **** 	if (c == K63 && JustStopped) {
2820:src/keys.c    **** 		// Avoid an accidental restart with R/S
2821:src/keys.c    **** 		JustStopped = 0;
2822:src/keys.c    **** 		return STATE_IGNORE;
2823:src/keys.c    **** 	}
2824:src/keys.c    **** #endif
2825:src/keys.c    **** 	/*  Handle the keyboard timeout for catalogue navigation
2826:src/keys.c    **** 	 *  Must be done early in the process to capture the shifts correctly
2827:src/keys.c    **** 	 */
2828:src/keys.c    **** #ifdef DM42
2829:src/keys.c    **** 	if (State2.catalogue && keyticks() > 30)	
2830:src/keys.c    **** #else	
2831:src/keys.c    **** 	if (State2.catalogue && Keyticks > 30)
2832:src/keys.c    **** #endif
2833:src/keys.c    **** 		CmdLineLength = 0;
2834:src/keys.c    **** 	// print_debug (1, c);
2835:src/keys.c    **** 	/*
2836:src/keys.c    **** 	 *  Process the various cases
2837:src/keys.c    **** 	 *  The handlers in this block here do not handle shifts at all or do it themselves
2838:src/keys.c    **** 	 */
2839:src/keys.c    **** 	if (State2.confirm)
2840:src/keys.c    **** 		return process_confirm((const keycode)c);
2841:src/keys.c    **** 
2842:src/keys.c    **** 	if (State2.rarg)
2843:src/keys.c    **** 		return process_arg((const keycode)c);
ARM GAS  /tmp/ccizbp1a.s 			page 161


2844:src/keys.c    **** 
2845:src/keys.c    **** 	if (State2.gtodot)
2846:src/keys.c    **** 		return process_gtodot((const keycode)c);
2847:src/keys.c    **** 
2848:src/keys.c    **** 	if (State2.hyp)
2849:src/keys.c    **** 		return process_hyp((const keycode)c);
2850:src/keys.c    **** 
2851:src/keys.c    **** 	if (State2.test != TST_NONE)
2852:src/keys.c    **** 		return process_test((const keycode)c);
2853:src/keys.c    **** 
2854:src/keys.c    **** 	if (State2.status)
2855:src/keys.c    **** 		return process_status((const keycode)c);
2856:src/keys.c    **** 
2857:src/keys.c    **** 	/*
2858:src/keys.c    **** 	 *  Process shift keys directly
2859:src/keys.c    **** 	 */
2860:src/keys.c    **** 	if (c == K_F) {
2861:src/keys.c    **** 		toggle_shift(SHIFT_F);
2862:src/keys.c    **** 		return STATE_UNFINISHED;
2863:src/keys.c    **** 	}
2864:src/keys.c    **** 	if (c == K_G) {
2865:src/keys.c    **** 		toggle_shift(SHIFT_G);
2866:src/keys.c    **** 		return STATE_UNFINISHED;
2867:src/keys.c    **** 	}
2868:src/keys.c    **** 	if (c == K_H) {
2869:src/keys.c    **** 		toggle_shift(SHIFT_H);
2870:src/keys.c    **** 		State2.arrow = 0;
2871:src/keys.c    **** 		return STATE_UNFINISHED;
2872:src/keys.c    **** 	}
2873:src/keys.c    **** 	/*
2874:src/keys.c    **** 	 *  The handlers in this block need to call reset_shift somewhere
2875:src/keys.c    **** 	 */
2876:src/keys.c    **** 	// print_debug (2, c);
2877:src/keys.c    **** 	if (State2.arrow)
2878:src/keys.c    **** 		return process_arrow((const keycode)c);
2879:src/keys.c    **** 
2880:src/keys.c    **** 	/*
2881:src/keys.c    **** 	 * Here the keys are mapped to catalogues
2882:src/keys.c    **** 	 * The position of this code decides where catalogue switching
2883:src/keys.c    **** 	 * works and were not
2884:src/keys.c    **** 	 */
2885:src/keys.c    **** 	cat = keycode_to_cat((keycode)c, shift);
2886:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
2887:src/keys.c    **** 		if (is_bad_cmdline())
2888:src/keys.c    **** 			return STATE_UNFINISHED;
2889:src/keys.c    **** 		init_cat( CATALOGUE_NONE );
2890:src/keys.c    **** 		init_cat( cat );
2891:src/keys.c    **** 		return STATE_UNFINISHED;
2892:src/keys.c    **** 	}
2893:src/keys.c    **** 
2894:src/keys.c    **** 	/*
2895:src/keys.c    **** 	 *  More handlers...
2896:src/keys.c    **** 	 */
2897:src/keys.c    **** 	if (State2.multi)
2898:src/keys.c    **** 		return process_multi((const keycode)c);
2899:src/keys.c    **** 
2900:src/keys.c    **** 	if (State2.labellist)
ARM GAS  /tmp/ccizbp1a.s 			page 162


2901:src/keys.c    **** 		return process_labellist((const keycode)c);
2902:src/keys.c    **** 
2903:src/keys.c    **** 	if (State2.registerlist)
2904:src/keys.c    **** 		return process_registerlist((const keycode)c);
2905:src/keys.c    **** 
2906:src/keys.c    **** 	if (State2.catalogue)
2907:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
2908:src/keys.c    **** 
2909:src/keys.c    **** 	if (State2.alphas) {
2910:src/keys.c    **** #ifndef INFRARED
2911:src/keys.c    **** 		return process_alpha((const keycode)c);
2912:src/keys.c    **** #else
2913:src/keys.c    **** 		int i = process_alpha((const keycode)c);
2914:src/keys.c    **** 		if (! State2.alphas && get_user_flag(T_FLAG)) {
2915:src/keys.c    **** 			print_tab(0);
2916:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
2917:src/keys.c    **** 		}
2918:src/keys.c    **** 		return i;
2919:src/keys.c    **** #endif
2920:src/keys.c    **** 	}
2921:src/keys.c    **** 
2922:src/keys.c    **** 	if (State2.cmplx) {
2923:src/keys.c    **** 		return process_cmplx((const keycode)c);
2924:src/keys.c    **** 	} else {
2925:src/keys.c    **** 		if (shift == SHIFT_F || shift == SHIFT_G)
2926:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
2927:src/keys.c    **** 		if (shift == SHIFT_H)
2928:src/keys.c    **** 			return process_h_shifted((const keycode)c);
2929:src/keys.c    **** 		// print_debug (3, c);
2930:src/keys.c    **** 		return process_normal((const keycode)c);
2931:src/keys.c    **** 	}
2932:src/keys.c    **** }
2933:src/keys.c    **** 
2934:src/keys.c    ****  unsigned int get_alpha_state ( void ) {
 4872              		.loc 1 2934 40 is_stmt 1 view -0
 4873              		.cfi_startproc
 4874              		@ args = 0, pretend = 0, frame = 0
 4875              		@ frame_needed = 0, uses_anonymous_args = 0
 4876              		@ link register save eliminated.
2935:src/keys.c    ****    return (State2.alphas || State2.confirm || State2.status || State2.labellist
 4877              		.loc 1 2935 4 view .LVU1540
 4878              		.loc 1 2935 53 is_stmt 0 view .LVU1541
 4879 0000 074B     		ldr	r3, .L532
 4880              		.loc 1 2935 44 view .LVU1542
 4881 0002 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 4882 0004 1AB9     		cbnz	r2, .L530
2936:src/keys.c    **** 	   || State2.rarg || State2.registerlist || State2.multi 
2937:src/keys.c    **** 	   || State2.gtodot || State2.catalogue || (State2.test != TST_NONE) );
 4883              		.loc 1 2937 5 discriminator 2 view .LVU1543
 4884 0006 5969     		ldr	r1, [r3, #20]
 4885 0008 064A     		ldr	r2, .L532+4
 4886 000a 0A40     		ands	r2, r2, r1
 4887 000c 0AB1     		cbz	r2, .L531
 4888              	.L530:
 4889 000e 0120     		movs	r0, #1
2938:src/keys.c    ****  }
 4890              		.loc 1 2938 2 view .LVU1544
ARM GAS  /tmp/ccizbp1a.s 			page 163


 4891 0010 7047     		bx	lr
 4892              	.L531:
2937:src/keys.c    ****  }
 4893              		.loc 1 2937 42 discriminator 3 view .LVU1545
 4894 0012 D889     		ldrh	r0, [r3, #14]
 4895 0014 B0F5E060 		subs	r0, r0, #1792
 4896 0018 18BF     		it	ne
 4897 001a 0120     		movne	r0, #1
 4898 001c 7047     		bx	lr
 4899              	.L533:
 4900 001e 00BF     		.align	2
 4901              	.L532:
 4902 0020 00000000 		.word	StateWhileOn
 4903 0024 0709280C 		.word	203950343
 4904              		.cfi_endproc
 4905              	.LFE56:
 4907              		.section	.rodata.process_keycode.str1.4,"aMS",%progbits,1
 4908              		.align	2
 4909              	.LC0:
 4910 0000 52554E00 		.ascii	"RUN\000"
 4911              		.align	2
 4912              	.LC1:
 4913 0004 4E554C4C 		.ascii	"NULL\000"
 4913      00
 4914 0009 000000   		.align	2
 4915              	.LC2:
 4916 000c 53746F70 		.ascii	"Stopped\000"
 4916      70656400 
 4917              		.section	.text.process_keycode,"ax",%progbits
 4918              		.align	1
 4919              		.p2align 2,,3
 4920              		.global	process_keycode
 4921              		.syntax unified
 4922              		.thumb
 4923              		.thumb_func
 4924              		.fpu fpv4-sp-d16
 4926              	process_keycode:
 4927              	.LVL401:
 4928              	.LFB58:
2939:src/keys.c    **** 
2940:src/keys.c    ****  void process_keycode_with_shift ( struct _ndmap remapped ) {
2941:src/keys.c    ****    if (remapped.shift >= 0) set_shift ( remapped.shift );
2942:src/keys.c    ****    process_keycode ( remapped.key_34s );
2943:src/keys.c    ****  }
2944:src/keys.c    ****  
2945:src/keys.c    **** /*
2946:src/keys.c    ****  *  Fed with key codes by the event loop
2947:src/keys.c    ****  */
2948:src/keys.c    **** void process_keycode(int c)
2949:src/keys.c    **** {
 4929              		.loc 1 2949 1 is_stmt 1 view -0
 4930              		.cfi_startproc
 4931              		@ args = 0, pretend = 0, frame = 8
 4932              		@ frame_needed = 0, uses_anonymous_args = 0
2950:src/keys.c    ****   static int was_paused;
 4933              		.loc 1 2950 3 view .LVU1547
2951:src/keys.c    ****   //volatile int cmdline_empty; // volatile because it's uninitialized in some cases
ARM GAS  /tmp/ccizbp1a.s 			page 164


2952:src/keys.c    ****   int cmdline_empty = 0;        // Visual studio chokes in debug mode over the above
 4934              		.loc 1 2952 3 view .LVU1548
2953:src/keys.c    **** #ifdef DM42
2954:src/keys.c    ****   if (was_paused && ! PAUSED) {
 4935              		.loc 1 2954 3 view .LVU1549
2949:src/keys.c    ****   static int was_paused;
 4936              		.loc 1 2949 1 is_stmt 0 view .LVU1550
 4937 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4938              		.cfi_def_cfa_offset 36
 4939              		.cfi_offset 4, -36
 4940              		.cfi_offset 5, -32
 4941              		.cfi_offset 6, -28
 4942              		.cfi_offset 7, -24
 4943              		.cfi_offset 8, -20
 4944              		.cfi_offset 9, -16
 4945              		.cfi_offset 10, -12
 4946              		.cfi_offset 11, -8
 4947              		.cfi_offset 14, -4
 4948              		.loc 1 2954 7 view .LVU1551
 4949 0004 954E     		ldr	r6, .L1141
 4950              		.loc 1 2954 21 view .LVU1552
 4951 0006 964D     		ldr	r5, .L1141+4
 4952              		.loc 1 2954 6 view .LVU1553
 4953 0008 3368     		ldr	r3, [r6]
2949:src/keys.c    ****   static int was_paused;
 4954              		.loc 1 2949 1 view .LVU1554
 4955 000a 83B0     		sub	sp, sp, #12
 4956              		.cfi_def_cfa_offset 48
2949:src/keys.c    ****   static int was_paused;
 4957              		.loc 1 2949 1 view .LVU1555
 4958 000c 0446     		mov	r4, r0
 4959              		.loc 1 2954 6 view .LVU1556
 4960 000e 1BB1     		cbz	r3, .L535
 4961              		.loc 1 2954 21 discriminator 1 view .LVU1557
 4962 0010 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 4963              		.loc 1 2954 18 discriminator 1 view .LVU1558
 4964 0012 002B     		cmp	r3, #0
 4965 0014 00F0E380 		beq	.L1067
 4966              	.LVL402:
 4967              	.L535:
2955:src/keys.c    ****     /*
2956:src/keys.c    ****      *  Continue XROM execution after a pause
2957:src/keys.c    ****      */
2958:src/keys.c    ****     xeq_xrom();
2959:src/keys.c    ****   }
2960:src/keys.c    ****   was_paused = PAUSED;
 4968              		.loc 1 2960 3 is_stmt 1 view .LVU1559
 4969              		.loc 1 2960 14 is_stmt 0 view .LVU1560
 4970 0018 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 4971 001a 3360     		str	r3, [r6]
2961:src/keys.c    **** #else
2962:src/keys.c    ****   if (was_paused && Pause == 0) {
2963:src/keys.c    ****     /*
2964:src/keys.c    ****      *  Continue XROM execution after a pause
2965:src/keys.c    ****      */
2966:src/keys.c    ****     xeq_xrom();
2967:src/keys.c    ****   }
ARM GAS  /tmp/ccizbp1a.s 			page 165


2968:src/keys.c    ****   was_paused = Pause;
2969:src/keys.c    **** #endif
2970:src/keys.c    ****   if (c == K_HEARTBEAT) {
 4972              		.loc 1 2970 3 is_stmt 1 view .LVU1561
 4973              		.loc 1 2970 6 is_stmt 0 view .LVU1562
 4974 001c 622C     		cmp	r4, #98
 4975 001e 00F0AE80 		beq	.L1068
2971:src/keys.c    ****     /*
2972:src/keys.c    ****      *  Heartbeat processing goes here.
2973:src/keys.c    ****      *  This is totally thread safe!
2974:src/keys.c    ****      */
2975:src/keys.c    **** #ifdef DM42
2976:src/keys.c    ****     if (keyticks() >=2 ) {
2977:src/keys.c    **** #else
2978:src/keys.c    ****     if (Keyticks >= 2) {
2979:src/keys.c    **** #endif
2980:src/keys.c    ****       /*
2981:src/keys.c    ****        *  Some time has passed after last key press
2982:src/keys.c    ****        */
2983:src/keys.c    ****       if (OpCode != 0) {
2984:src/keys.c    **** 	/*
2985:src/keys.c    **** 	 *  Handle command display and NULL here
2986:src/keys.c    **** 	 */
2987:src/keys.c    **** 	if (OpCodeDisplayPending) {
2988:src/keys.c    **** 	  /*
2989:src/keys.c    **** 	   *  Show command to the user
2990:src/keys.c    **** 	   */
2991:src/keys.c    **** 	  OpCodeDisplayPending = 0;
2992:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
2993:src/keys.c    **** 	    DispMsg = "RUN";
2994:src/keys.c    **** 	  }
2995:src/keys.c    **** 	  else {
2996:src/keys.c    **** 	    scopy_char(TraceBuffer, prt(OpCode, TraceBuffer), '\0');
2997:src/keys.c    **** 	    DispMsg = TraceBuffer;
2998:src/keys.c    **** 	  }
2999:src/keys.c    **** 	  display();
3000:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
3001:src/keys.c    **** 	}
3002:src/keys.c    **** #ifdef DM42
3003:src/keys.c    ****     else if (keyticks() > 12 ) {
3004:src/keys.c    **** #else
3005:src/keys.c    ****     else if (Keyticks > 12) {
3006:src/keys.c    **** #endif
3007:src/keys.c    **** 	  
3008:src/keys.c    **** 	  /*
3009:src/keys.c    **** 	   *  Key is too long held down
3010:src/keys.c    **** 	   */
3011:src/keys.c    **** 	  OpCode = 0;
3012:src/keys.c    **** 	  message("NULL", CNULL);
3013:src/keys.c    **** 	  // Force display update on key-up
3014:src/keys.c    **** 	  State2.disp_temp = 0;
3015:src/keys.c    **** 	}
3016:src/keys.c    ****       }
3017:src/keys.c    **** #ifdef DM42
3018:src/keys.c    **** 	if (keyticks() > 12 && shift_down() != SHIFT_N) {
3019:src/keys.c    **** #else
3020:src/keys.c    ****       if (Keyticks > 12 && shift_down() != SHIFT_N) {
ARM GAS  /tmp/ccizbp1a.s 			page 166


3021:src/keys.c    **** #endif
3022:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
3023:src/keys.c    **** 	State2.shifts = SHIFT_N;
3024:src/keys.c    ****       }
3025:src/keys.c    ****     }
3026:src/keys.c    **** 
3027:src/keys.c    ****     /*
3028:src/keys.c    ****      *  Serve the watchdog
3029:src/keys.c    ****      */
3030:src/keys.c    ****     watchdog();
3031:src/keys.c    **** 
3032:src/keys.c    **** #ifndef CONSOLE
3033:src/keys.c    ****     /*
3034:src/keys.c    ****      *  If buffer is empty re-allow R/S to start a program
3035:src/keys.c    ****      */
3036:src/keys.c    ****     if (JustStopped && !is_key_pressed()) {
3037:src/keys.c    ****       JustStopped = 0;
3038:src/keys.c    ****     }
3039:src/keys.c    **** #endif
3040:src/keys.c    **** 
3041:src/keys.c    ****     /*
3042:src/keys.c    ****      *  Do nothing if not running a program
3043:src/keys.c    ****      */
3044:src/keys.c    **** #ifdef DM42
3045:src/keys.c    ****     if (!Running && ! PAUSED)
3046:src/keys.c    **** #else
3047:src/keys.c    ****     if (!Running && ! Pause)
3048:src/keys.c    **** #endif
3049:src/keys.c    ****       return;
3050:src/keys.c    ****   }
3051:src/keys.c    ****   else {
3052:src/keys.c    ****     /*
3053:src/keys.c    ****      *  Not the heartbeat - prepare for execution of any commands
3054:src/keys.c    ****      */
3055:src/keys.c    ****     xeq_init_contexts();
 4976              		.loc 1 3055 5 is_stmt 1 view .LVU1563
3056:src/keys.c    ****     State2.wascomplex = 0;
 4977              		.loc 1 3056 23 is_stmt 0 view .LVU1564
 4978 0022 904E     		ldr	r6, .L1141+8
3055:src/keys.c    ****     State2.wascomplex = 0;
 4979              		.loc 1 3055 5 view .LVU1565
 4980 0024 FFF7FEFF 		bl	xeq_init_contexts
 4981              	.LVL403:
 4982              		.loc 1 3056 5 is_stmt 1 view .LVU1566
 4983              		.loc 1 3056 23 is_stmt 0 view .LVU1567
 4984 0028 337D     		ldrb	r3, [r6, #20]	@ zero_extendqisi2
3057:src/keys.c    **** 
3058:src/keys.c    ****     if (is_dot(RPN)) {
 4985              		.loc 1 3058 9 view .LVU1568
 4986 002a 8D20     		movs	r0, #141
3056:src/keys.c    **** 
 4987              		.loc 1 3056 23 view .LVU1569
 4988 002c 6FF38713 		bfc	r3, #6, #2
 4989 0030 3375     		strb	r3, [r6, #20]
 4990              		.loc 1 3058 5 is_stmt 1 view .LVU1570
 4991              		.loc 1 3058 9 is_stmt 0 view .LVU1571
 4992 0032 FFF7FEFF 		bl	is_dot
ARM GAS  /tmp/ccizbp1a.s 			page 167


 4993              	.LVL404:
 4994              		.loc 1 3058 8 view .LVU1572
 4995 0036 0028     		cmp	r0, #0
 4996 0038 40F09880 		bne	.L1069
3059:src/keys.c    ****       /*
3060:src/keys.c    ****        * Turn off the RPN annunciator as a visual feedback
3061:src/keys.c    ****        */
3062:src/keys.c    ****       clr_dot(RPN);
3063:src/keys.c    ****       finish_RPN(); // RPN
3064:src/keys.c    ****     }
3065:src/keys.c    **** 
3066:src/keys.c    **** #ifndef CONSOLE
3067:src/keys.c    ****     /*
3068:src/keys.c    ****      *  Reallow display refresh which is temporarily disabled after a stop
3069:src/keys.c    ****      *  All keys execpt R/S trigger this. The latter will only be reenabled
3070:src/keys.c    ****      *  from the heartbeat after the keybord buffer has become empty to avoid
3071:src/keys.c    ****      *  an accidental restart of the program.
3072:src/keys.c    ****      */
3073:src/keys.c    ****     if (c != K63)
 4997              		.loc 1 3073 5 is_stmt 1 view .LVU1573
 4998              		.loc 1 3073 8 is_stmt 0 view .LVU1574
 4999 003c 272C     		cmp	r4, #39
 5000 003e 3AD0     		beq	.L1047
 5001              	.L552:
3074:src/keys.c    ****       JustStopped = 0;
 5002              		.loc 1 3074 7 is_stmt 1 view .LVU1575
 5003              		.loc 1 3074 19 is_stmt 0 view .LVU1576
 5004 0040 894B     		ldr	r3, .L1141+12
 5005 0042 0022     		movs	r2, #0
3075:src/keys.c    **** #endif
3076:src/keys.c    ****   }
3077:src/keys.c    **** 
3078:src/keys.c    ****   /*
3079:src/keys.c    ****    *  Handle key release
3080:src/keys.c    ****    */
3081:src/keys.c    ****   if (c == K_RELEASE) {
 5006              		.loc 1 3081 6 view .LVU1577
 5007 0044 632C     		cmp	r4, #99
3074:src/keys.c    ****       JustStopped = 0;
 5008              		.loc 1 3074 19 view .LVU1578
 5009 0046 1A60     		str	r2, [r3]
 5010              		.loc 1 3081 3 is_stmt 1 view .LVU1579
 5011              		.loc 1 3081 6 is_stmt 0 view .LVU1580
 5012 0048 35D1     		bne	.L1047
3082:src/keys.c    ****     if (OpCode != 0) {
 5013              		.loc 1 3082 5 is_stmt 1 view .LVU1581
 5014              		.loc 1 3082 16 is_stmt 0 view .LVU1582
 5015 004a 884B     		ldr	r3, .L1141+16
 5016 004c 1C68     		ldr	r4, [r3]
 5017              	.LVL405:
 5018              		.loc 1 3082 8 view .LVU1583
 5019 004e 002C     		cmp	r4, #0
 5020 0050 00F0C681 		beq	.L554
3083:src/keys.c    ****       /*
3084:src/keys.c    ****        * Execute the key on release
3085:src/keys.c    ****        */
3086:src/keys.c    ****       GoFast = 1;
ARM GAS  /tmp/ccizbp1a.s 			page 168


 5021              		.loc 1 3086 7 is_stmt 1 view .LVU1584
 5022              		.loc 1 3086 14 is_stmt 0 view .LVU1585
 5023 0054 8649     		ldr	r1, .L1141+20
3087:src/keys.c    ****       c = OpCode;
3088:src/keys.c    ****       OpCode = 0;
 5024              		.loc 1 3088 14 view .LVU1586
 5025 0056 1A60     		str	r2, [r3]
3086:src/keys.c    ****       c = OpCode;
 5026              		.loc 1 3086 14 view .LVU1587
 5027 0058 0120     		movs	r0, #1
3089:src/keys.c    **** 
3090:src/keys.c    ****       if (c == STATE_SST)
 5028              		.loc 1 3090 10 view .LVU1588
 5029 005a 2E2C     		cmp	r4, #46
3087:src/keys.c    ****       OpCode = 0;
 5030              		.loc 1 3087 9 view .LVU1589
 5031 005c A346     		mov	fp, r4
3086:src/keys.c    ****       c = OpCode;
 5032              		.loc 1 3086 14 view .LVU1590
 5033 005e 0860     		str	r0, [r1]
3087:src/keys.c    ****       OpCode = 0;
 5034              		.loc 1 3087 7 is_stmt 1 view .LVU1591
 5035              	.LVL406:
3088:src/keys.c    **** 
 5036              		.loc 1 3088 7 view .LVU1592
 5037              		.loc 1 3090 7 view .LVU1593
 5038              		.loc 1 3090 10 is_stmt 0 view .LVU1594
 5039 0060 00F0D181 		beq	.L1070
3091:src/keys.c    **** 	xeq_sst_bst(1);
3092:src/keys.c    ****       else {
3093:src/keys.c    **** 	if (c == (OP_NIL | OP_OFF) || c == (OP_NIL | OP_rCLX) || !is_bad_cmdline()) {
 5040              		.loc 1 3093 2 is_stmt 1 view .LVU1595
 5041              		.loc 1 3093 5 is_stmt 0 view .LVU1596
 5042 0064 B4F5817F 		cmp	r4, #258
 5043 0068 04D0     		beq	.L560
 5044              		.loc 1 3093 29 discriminator 1 view .LVU1597
 5045 006a 40F23F13 		movw	r3, #319
 5046 006e 9C42     		cmp	r4, r3
 5047 0070 40F0B880 		bne	.L1071
 5048              	.L560:
3094:src/keys.c    **** 	  xeq(c);
 5049              		.loc 1 3094 4 is_stmt 1 view .LVU1598
3095:src/keys.c    **** #ifdef DM42
3096:src/keys.c    **** 	  if (Running || PAUSED)
 5050              		.loc 1 3096 8 is_stmt 0 view .LVU1599
 5051 0074 7F4F     		ldr	r7, .L1141+24
3094:src/keys.c    **** 	  xeq(c);
 5052              		.loc 1 3094 4 view .LVU1600
 5053 0076 2046     		mov	r0, r4
 5054 0078 FFF7FEFF 		bl	xeq
 5055              	.LVL407:
 5056              		.loc 1 3096 4 is_stmt 1 view .LVU1601
 5057              		.loc 1 3096 7 is_stmt 0 view .LVU1602
 5058 007c 3B68     		ldr	r3, [r7]
 5059 007e 0BB9     		cbnz	r3, .L558
 5060              		.loc 1 3096 16 discriminator 1 view .LVU1603
 5061 0080 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
ARM GAS  /tmp/ccizbp1a.s 			page 169


 5062 0082 0BB1     		cbz	r3, .L556
 5063              	.L558:
3097:src/keys.c    **** #else
3098:src/keys.c    **** 	  if (Running || Pause)
3099:src/keys.c    **** #endif
3100:src/keys.c    **** 	    xeqprog();
 5064              		.loc 1 3100 6 is_stmt 1 view .LVU1604
 5065 0084 FFF7FEFF 		bl	xeqprog
 5066              	.LVL408:
 5067              	.L556:
3101:src/keys.c    **** 	}
3102:src/keys.c    ****       }
3103:src/keys.c    ****       dot(RPN, ShowRPN);
 5068              		.loc 1 3103 7 view .LVU1605
 5069 0088 7B4C     		ldr	r4, .L1141+28
 5070              	.LVL409:
 5071              		.loc 1 3103 7 is_stmt 0 view .LVU1606
 5072 008a 8D20     		movs	r0, #141
 5073 008c 2168     		ldr	r1, [r4]
 5074 008e FFF7FEFF 		bl	dot
 5075              	.LVL410:
3104:src/keys.c    ****     }
3105:src/keys.c    ****     else {
3106:src/keys.c    ****       // Ignore key-up if no operation was pending
3107:src/keys.c    ****       dot(RPN, ShowRPN);
3108:src/keys.c    **** #ifndef CONSOLE
3109:src/keys.c    ****       if (! State2.disp_temp ) {
3110:src/keys.c    **** 	if (!WasDataEntry) {
3111:src/keys.c    **** 	  // This will get rid of the last displayed op-code
3112:src/keys.c    **** 	  display();
3113:src/keys.c    **** 	}
3114:src/keys.c    **** 	else {
3115:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3116:src/keys.c    **** 	}
3117:src/keys.c    ****       }
3118:src/keys.c    **** #endif
3119:src/keys.c    ****       return;
3120:src/keys.c    ****     }
3121:src/keys.c    **** 
3122:src/keys.c    ****     /*
3123:src/keys.c    ****      *  Turn on the RPN symbol if desired
3124:src/keys.c    ****      */
3125:src/keys.c    ****     if (ShowRPN) {
 5076              		.loc 1 3125 5 is_stmt 1 view .LVU1607
 5077              		.loc 1 3125 9 is_stmt 0 view .LVU1608
 5078 0092 D4F80080 		ldr	r8, [r4]
 5079              		.loc 1 3125 8 view .LVU1609
 5080 0096 B8F1000F 		cmp	r8, #0
 5081 009a 3FD0     		beq	.L563
3126:src/keys.c    ****       finish_RPN(); // RPN
 5082              		.loc 1 3126 7 is_stmt 1 view .LVU1610
 5083 009c FFF7FEFF 		bl	finish_RPN
 5084              	.LVL411:
3127:src/keys.c    ****     }
3128:src/keys.c    ****   }
3129:src/keys.c    ****   else {
3130:src/keys.c    ****     /*
ARM GAS  /tmp/ccizbp1a.s 			page 170


3131:src/keys.c    ****      *  Decode the key 
3132:src/keys.c    ****      */
3133:src/keys.c    ****     // print_debug (100, c);
3134:src/keys.c    ****     WasDataEntry = 0;
3135:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
3136:src/keys.c    ****     c = process(c);		// returns an op-code or state
3137:src/keys.c    ****     switch (c) {
3138:src/keys.c    ****     case STATE_SST:
3139:src/keys.c    ****       OpCode = c;
3140:src/keys.c    ****       OpCodeDisplayPending = 0;
3141:src/keys.c    ****       xeq_sst_bst(0);
3142:src/keys.c    ****       break;
3143:src/keys.c    **** 
3144:src/keys.c    ****     case STATE_BST:
3145:src/keys.c    ****       xeq_sst_bst(-1);
3146:src/keys.c    ****       break;
3147:src/keys.c    **** 
3148:src/keys.c    ****     case STATE_BACKSPACE:
3149:src/keys.c    ****       if (! State2.runmode)
3150:src/keys.c    **** 	delprog();
3151:src/keys.c    ****       else if (State2.alphas) {
3152:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
3153:src/keys.c    **** 	if (p > Alpha)
3154:src/keys.c    **** 	  *--p = '\0';
3155:src/keys.c    ****       }
3156:src/keys.c    ****       break;
3157:src/keys.c    **** 
3158:src/keys.c    ****     case STATE_RUNNING:
3159:src/keys.c    ****       xeqprog();  // continue execution
3160:src/keys.c    ****       break;
3161:src/keys.c    **** 
3162:src/keys.c    ****     case STATE_WINDOWRIGHT:
3163:src/keys.c    ****     case STATE_WINDOWLEFT:
3164:src/keys.c    ****       if (!is_bad_cmdline())
3165:src/keys.c    **** 	set_window(c);
3166:src/keys.c    ****       break;
3167:src/keys.c    **** 
3168:src/keys.c    ****     case STATE_UNFINISHED:
3169:src/keys.c    ****     case STATE_IGNORE:
3170:src/keys.c    ****       break;
3171:src/keys.c    **** 
3172:src/keys.c    ****     default:
3173:src/keys.c    ****       if (State2.runmode || NonProgrammable) {
3174:src/keys.c    **** 	NonProgrammable = 0;
3175:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
3176:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
3177:src/keys.c    **** 	    // Data entry key
3178:src/keys.c    **** #ifndef CONSOLE
3179:src/keys.c    **** 	    WasDataEntry = 1;
3180:src/keys.c    **** #endif
3181:src/keys.c    **** 	    cmdline_empty = (CmdLineLength == 0);
3182:src/keys.c    **** 	    xeq(c);
3183:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
3184:src/keys.c    **** 	  }
3185:src/keys.c    **** 	}
3186:src/keys.c    **** 	else {
3187:src/keys.c    **** 	  // Save the op-code for execution on key-up
ARM GAS  /tmp/ccizbp1a.s 			page 171


3188:src/keys.c    **** 	  OpCode = c;
3189:src/keys.c    **** 	  OpCodeDisplayPending = 1;
3190:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3191:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
3192:src/keys.c    **** 	}
3193:src/keys.c    ****       }
3194:src/keys.c    ****       else {
3195:src/keys.c    **** 	stoprog(c);
3196:src/keys.c    ****       }
3197:src/keys.c    ****     }
3198:src/keys.c    ****   }
3199:src/keys.c    **** #ifdef DM42
3200:src/keys.c    ****   if (! Running && ! PAUSED
 5085              		.loc 1 3200 6 is_stmt 0 view .LVU1611
 5086 00a0 3B68     		ldr	r3, [r7]
2952:src/keys.c    **** #ifdef DM42
 5087              		.loc 1 2952 7 view .LVU1612
 5088 00a2 4FF00008 		mov	r8, #0
 5089              	.LVL412:
 5090              		.loc 1 3200 3 is_stmt 1 view .LVU1613
 5091              		.loc 1 3200 6 is_stmt 0 view .LVU1614
 5092 00a6 002B     		cmp	r3, #0
 5093 00a8 3BD0     		beq	.L577
 5094              	.L1061:
 5095              		.loc 1 3200 6 view .LVU1615
 5096 00aa 744C     		ldr	r4, .L1141+32
 5097              	.LVL413:
 5098              	.L834:
3201:src/keys.c    **** #else
3202:src/keys.c    ****   if (! Running && ! Pause
3203:src/keys.c    **** #endif
3204:src/keys.c    **** #ifndef CONSOLE
3205:src/keys.c    ****       && ! JustStopped
3206:src/keys.c    **** #endif
3207:src/keys.c    ****       && ! JustDisplayed && c != STATE_IGNORE) {
3208:src/keys.c    ****     const int orig_WasDataEntry = WasDataEntry;
3209:src/keys.c    **** 
3210:src/keys.c    ****     WasDataEntry &= !(c == (OP_SPEC | OP_ENTER) || cmdline_empty || State2.invalid_disp);
3211:src/keys.c    ****     display();
3212:src/keys.c    ****     WasDataEntry = orig_WasDataEntry;
3213:src/keys.c    ****   }
3214:src/keys.c    **** 
3215:src/keys.c    ****  no_display:
3216:src/keys.c    ****   JustDisplayed = 0;
 5099              		.loc 1 3216 3 is_stmt 1 view .LVU1616
 5100              		.loc 1 3216 17 is_stmt 0 view .LVU1617
 5101 00ac 0023     		movs	r3, #0
 5102 00ae 2360     		str	r3, [r4]
3217:src/keys.c    ****   watchdog();
 5103              		.loc 1 3217 13 is_stmt 1 view .LVU1618
3218:src/keys.c    **** }
 5104              		.loc 1 3218 1 is_stmt 0 view .LVU1619
 5105 00b0 03B0     		add	sp, sp, #12
 5106              		.cfi_remember_state
 5107              		.cfi_def_cfa_offset 36
 5108              		@ sp needed
 5109 00b2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
ARM GAS  /tmp/ccizbp1a.s 			page 172


 5110              	.LVL414:
 5111              	.L1047:
 5112              		.cfi_restore_state
 5113              		.loc 1 3218 1 view .LVU1620
 5114 00b6 6F4F     		ldr	r7, .L1141+24
 5115 00b8 3B68     		ldr	r3, [r7]
 5116              	.L549:
3134:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5117              		.loc 1 3134 5 is_stmt 1 view .LVU1621
3135:src/keys.c    ****     c = process(c);		// returns an op-code or state
 5118              		.loc 1 3135 13 is_stmt 0 view .LVU1622
 5119 00ba 6F49     		ldr	r1, .L1141+28
3134:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5120              		.loc 1 3134 18 view .LVU1623
 5121 00bc DFF8D491 		ldr	r9, .L1141+56
3135:src/keys.c    ****     c = process(c);		// returns an op-code or state
 5122              		.loc 1 3135 15 view .LVU1624
 5123 00c0 B3FA83F3 		clz	r3, r3
 5124 00c4 5B09     		lsrs	r3, r3, #5
3134:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5125              		.loc 1 3134 18 view .LVU1625
 5126 00c6 0022     		movs	r2, #0
3135:src/keys.c    ****     c = process(c);		// returns an op-code or state
 5127              		.loc 1 3135 13 view .LVU1626
 5128 00c8 0B60     		str	r3, [r1]
3134:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5129              		.loc 1 3134 18 view .LVU1627
 5130 00ca C9F80020 		str	r2, [r9]
3135:src/keys.c    ****     c = process(c);		// returns an op-code or state
 5131              		.loc 1 3135 5 is_stmt 1 view .LVU1628
3136:src/keys.c    ****     switch (c) {
 5132              		.loc 1 3136 5 view .LVU1629
 5133              	.LVL415:
 5134              	.LBB639:
 5135              	.LBI639:
2757:src/keys.c    ****   const enum shifts shift = cur_shift();
 5136              		.loc 1 2757 12 view .LVU1630
 5137              	.LBB640:
2758:src/keys.c    ****   enum catalogues cat;
 5138              		.loc 1 2758 3 view .LVU1631
 5139              	.LBB641:
 5140              	.LBI641:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 5141              		.loc 1 84 13 view .LVU1632
 5142              	.LBB642:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5143              		.loc 1 85 2 view .LVU1633
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5144              		.loc 1 85 18 is_stmt 0 view .LVU1634
 5145 00ce FFF7FEFF 		bl	shift_down
 5146              	.LVL416:
  86:src/keys.c    **** }
 5147              		.loc 1 86 2 is_stmt 1 view .LVU1635
  86:src/keys.c    **** }
 5148              		.loc 1 86 52 is_stmt 0 view .LVU1636
 5149 00d2 8246     		mov	r10, r0
 5150 00d4 10B9     		cbnz	r0, .L566
ARM GAS  /tmp/ccizbp1a.s 			page 173


 5151 00d6 634B     		ldr	r3, .L1141+8
 5152 00d8 93F810A0 		ldrb	r10, [r3, #16]	@ zero_extendqisi2
 5153              	.L566:
 5154              	.LVL417:
  86:src/keys.c    **** }
 5155              		.loc 1 86 52 view .LVU1637
 5156              	.LBE642:
 5157              	.LBE641:
2759:src/keys.c    **** 
 5158              		.loc 1 2759 3 is_stmt 1 view .LVU1638
2763:src/keys.c    ****     /*
 5159              		.loc 1 2763 3 view .LVU1639
2763:src/keys.c    ****     /*
 5160              		.loc 1 2763 7 is_stmt 0 view .LVU1640
 5161 00dc D7F80080 		ldr	r8, [r7]
2763:src/keys.c    ****     /*
 5162              		.loc 1 2763 6 view .LVU1641
 5163 00e0 B8F1000F 		cmp	r8, #0
 5164 00e4 03D1     		bne	.L567
2763:src/keys.c    ****     /*
 5165              		.loc 1 2763 15 view .LVU1642
 5166 00e6 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 5167 00e8 002B     		cmp	r3, #0
 5168 00ea 00F08280 		beq	.L568
 5169              	.L567:
2767:src/keys.c    ****       if (PAUSED && isXROM(state_pc()))
 5170              		.loc 1 2767 5 is_stmt 1 view .LVU1643
2767:src/keys.c    ****       if (PAUSED && isXROM(state_pc()))
 5171              		.loc 1 2767 8 is_stmt 0 view .LVU1644
 5172 00ee 242C     		cmp	r4, #36
 5173 00f0 00F08D80 		beq	.L569
2767:src/keys.c    ****       if (PAUSED && isXROM(state_pc()))
 5174              		.loc 1 2767 18 view .LVU1645
 5175 00f4 272C     		cmp	r4, #39
 5176 00f6 00F08A80 		beq	.L569
2777:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 5177              		.loc 1 2777 5 is_stmt 1 view .LVU1646
2777:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 5178              		.loc 1 2777 8 is_stmt 0 view .LVU1647
 5179 00fa 622C     		cmp	r4, #98
 5180 00fc 08D0     		beq	.L572
2778:src/keys.c    ****       start_pause(0);			// leave PSE statement
 5181              		.loc 1 2778 7 is_stmt 1 view .LVU1648
2778:src/keys.c    ****       start_pause(0);			// leave PSE statement
 5182              		.loc 1 2778 15 is_stmt 0 view .LVU1649
 5183 00fe 594B     		ldr	r3, .L1141+8
2778:src/keys.c    ****       start_pause(0);			// leave PSE statement
 5184              		.loc 1 2778 17 view .LVU1650
 5185 0100 0134     		adds	r4, r4, #1
 5186              	.LVL418:
2779:src/keys.c    ****       GoFast = 1;
 5187              		.loc 1 2779 7 view .LVU1651
 5188 0102 0020     		movs	r0, #0
2778:src/keys.c    ****       start_pause(0);			// leave PSE statement
 5189              		.loc 1 2778 15 view .LVU1652
 5190 0104 DC74     		strb	r4, [r3, #19]
2779:src/keys.c    ****       GoFast = 1;
ARM GAS  /tmp/ccizbp1a.s 			page 174


 5191              		.loc 1 2779 7 is_stmt 1 view .LVU1653
 5192 0106 FFF7FEFF 		bl	start_pause
 5193              	.LVL419:
2780:src/keys.c    ****     }
 5194              		.loc 1 2780 7 view .LVU1654
2780:src/keys.c    ****     }
 5195              		.loc 1 2780 14 is_stmt 0 view .LVU1655
 5196 010a 594B     		ldr	r3, .L1141+20
 5197 010c 0122     		movs	r2, #1
 5198 010e 1A60     		str	r2, [r3]
 5199              	.LVL420:
 5200              	.L572:
2780:src/keys.c    ****     }
 5201              		.loc 1 2780 14 view .LVU1656
 5202              	.LBE640:
 5203              	.LBE639:
3159:src/keys.c    ****       break;
 5204              		.loc 1 3159 7 is_stmt 1 view .LVU1657
 5205 0110 FFF7FEFF 		bl	xeqprog
 5206              	.LVL421:
3160:src/keys.c    **** 
 5207              		.loc 1 3160 7 view .LVU1658
2952:src/keys.c    **** #ifdef DM42
 5208              		.loc 1 2952 7 is_stmt 0 view .LVU1659
 5209 0114 4FF00008 		mov	r8, #0
3160:src/keys.c    **** 
 5210              		.loc 1 3160 7 view .LVU1660
 5211 0118 4FF0310B 		mov	fp, #49
 5212              	.LVL422:
 5213              	.L563:
3200:src/keys.c    **** #else
 5214              		.loc 1 3200 3 is_stmt 1 view .LVU1661
3200:src/keys.c    **** #else
 5215              		.loc 1 3200 6 is_stmt 0 view .LVU1662
 5216 011c 3B68     		ldr	r3, [r7]
 5217 011e 002B     		cmp	r3, #0
 5218 0120 C3D1     		bne	.L1061
 5219              	.LVL423:
 5220              	.L577:
3200:src/keys.c    **** #else
 5221              		.loc 1 3200 20 discriminator 1 view .LVU1663
 5222 0122 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
3200:src/keys.c    **** #else
 5223              		.loc 1 3200 17 discriminator 1 view .LVU1664
 5224 0124 002B     		cmp	r3, #0
 5225 0126 C0D1     		bne	.L1061
3205:src/keys.c    **** #endif
 5226              		.loc 1 3205 10 view .LVU1665
 5227 0128 4F4B     		ldr	r3, .L1141+12
3207:src/keys.c    ****     const int orig_WasDataEntry = WasDataEntry;
 5228              		.loc 1 3207 10 view .LVU1666
 5229 012a 544C     		ldr	r4, .L1141+32
 5230 012c 1B68     		ldr	r3, [r3]
 5231 012e 2268     		ldr	r2, [r4]
3207:src/keys.c    ****     const int orig_WasDataEntry = WasDataEntry;
 5232              		.loc 1 3207 7 view .LVU1667
 5233 0130 1343     		orrs	r3, r3, r2
ARM GAS  /tmp/ccizbp1a.s 			page 175


 5234 0132 BBD1     		bne	.L834
3207:src/keys.c    ****     const int orig_WasDataEntry = WasDataEntry;
 5235              		.loc 1 3207 26 discriminator 1 view .LVU1668
 5236 0134 BBF1320F 		cmp	fp, #50
 5237 0138 B8D0     		beq	.L834
 5238              	.LBB1224:
3208:src/keys.c    **** 
 5239              		.loc 1 3208 5 is_stmt 1 view .LVU1669
3208:src/keys.c    **** 
 5240              		.loc 1 3208 15 is_stmt 0 view .LVU1670
 5241 013a DFF85891 		ldr	r9, .L1141+56
 5242 013e D9F80050 		ldr	r5, [r9]
 5243              	.LVL424:
3210:src/keys.c    ****     display();
 5244              		.loc 1 3210 5 is_stmt 1 view .LVU1671
3210:src/keys.c    ****     display();
 5245              		.loc 1 3210 21 is_stmt 0 view .LVU1672
 5246 0142 BBF1000F 		cmp	fp, #0
 5247 0146 0AD0     		beq	.L836
3210:src/keys.c    ****     display();
 5248              		.loc 1 3210 49 discriminator 1 view .LVU1673
 5249 0148 B8F1000F 		cmp	r8, #0
 5250 014c 40F07384 		bne	.L887
3210:src/keys.c    ****     display();
 5251              		.loc 1 3210 66 discriminator 3 view .LVU1674
 5252 0150 444B     		ldr	r3, .L1141+8
 5253 0152 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
3210:src/keys.c    ****     display();
 5254              		.loc 1 3210 21 discriminator 3 view .LVU1675
 5255 0154 9807     		lsls	r0, r3, #30
 5256 0156 00F10A85 		bmi	.L888
 5257 015a 05F0010B 		and	fp, r5, #1
 5258              	.LVL425:
 5259              	.L836:
3210:src/keys.c    ****     display();
 5260              		.loc 1 3210 18 discriminator 8 view .LVU1676
 5261 015e C9F800B0 		str	fp, [r9]
3211:src/keys.c    ****     WasDataEntry = orig_WasDataEntry;
 5262              		.loc 1 3211 5 is_stmt 1 discriminator 8 view .LVU1677
 5263 0162 FFF7FEFF 		bl	display
 5264              	.LVL426:
3212:src/keys.c    ****   }
 5265              		.loc 1 3212 5 discriminator 8 view .LVU1678
3212:src/keys.c    ****   }
 5266              		.loc 1 3212 18 is_stmt 0 discriminator 8 view .LVU1679
 5267 0166 C9F80050 		str	r5, [r9]
 5268 016a 9FE7     		b	.L834
 5269              	.LVL427:
 5270              	.L1069:
3212:src/keys.c    ****   }
 5271              		.loc 1 3212 18 discriminator 8 view .LVU1680
 5272              	.LBE1224:
3062:src/keys.c    ****       finish_RPN(); // RPN
 5273              		.loc 1 3062 7 is_stmt 1 view .LVU1681
 5274 016c 8D20     		movs	r0, #141
 5275 016e FFF7FEFF 		bl	clr_dot
 5276              	.LVL428:
ARM GAS  /tmp/ccizbp1a.s 			page 176


3063:src/keys.c    ****     }
 5277              		.loc 1 3063 7 view .LVU1682
 5278 0172 FFF7FEFF 		bl	finish_RPN
 5279              	.LVL429:
3073:src/keys.c    ****       JustStopped = 0;
 5280              		.loc 1 3073 5 view .LVU1683
3073:src/keys.c    ****       JustStopped = 0;
 5281              		.loc 1 3073 8 is_stmt 0 view .LVU1684
 5282 0176 272C     		cmp	r4, #39
 5283 0178 7FF462AF 		bne	.L552
 5284 017c 9BE7     		b	.L1047
 5285              	.L1068:
2976:src/keys.c    **** #else
 5286              		.loc 1 2976 5 is_stmt 1 view .LVU1685
2976:src/keys.c    **** #else
 5287              		.loc 1 2976 9 is_stmt 0 view .LVU1686
 5288 017e FFF7FEFF 		bl	keyticks
 5289              	.LVL430:
2976:src/keys.c    **** #else
 5290              		.loc 1 2976 8 view .LVU1687
 5291 0182 0128     		cmp	r0, #1
 5292 0184 1ADD     		ble	.L538
2983:src/keys.c    **** 	/*
 5293              		.loc 1 2983 7 is_stmt 1 view .LVU1688
2983:src/keys.c    **** 	/*
 5294              		.loc 1 2983 18 is_stmt 0 view .LVU1689
 5295 0186 394E     		ldr	r6, .L1141+16
 5296 0188 3068     		ldr	r0, [r6]
2983:src/keys.c    **** 	/*
 5297              		.loc 1 2983 10 view .LVU1690
 5298 018a 98B1     		cbz	r0, .L540
2987:src/keys.c    **** 	  /*
 5299              		.loc 1 2987 2 is_stmt 1 view .LVU1691
2987:src/keys.c    **** 	  /*
 5300              		.loc 1 2987 6 is_stmt 0 view .LVU1692
 5301 018c 3C4B     		ldr	r3, .L1141+36
2987:src/keys.c    **** 	  /*
 5302              		.loc 1 2987 5 view .LVU1693
 5303 018e 1F68     		ldr	r7, [r3]
 5304 0190 002F     		cmp	r7, #0
 5305 0192 00F00983 		beq	.L541
2991:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5306              		.loc 1 2991 4 is_stmt 1 view .LVU1694
2992:src/keys.c    **** 	    DispMsg = "RUN";
 5307              		.loc 1 2992 7 is_stmt 0 view .LVU1695
 5308 0196 40F23B12 		movw	r2, #315
2991:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5309              		.loc 1 2991 25 view .LVU1696
 5310 019a 0026     		movs	r6, #0
2992:src/keys.c    **** 	    DispMsg = "RUN";
 5311              		.loc 1 2992 7 view .LVU1697
 5312 019c 9042     		cmp	r0, r2
2991:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5313              		.loc 1 2991 25 view .LVU1698
 5314 019e 1E60     		str	r6, [r3]
2992:src/keys.c    **** 	    DispMsg = "RUN";
 5315              		.loc 1 2992 4 is_stmt 1 view .LVU1699
ARM GAS  /tmp/ccizbp1a.s 			page 177


2992:src/keys.c    **** 	    DispMsg = "RUN";
 5316              		.loc 1 2992 7 is_stmt 0 view .LVU1700
 5317 01a0 40F03581 		bne	.L542
2993:src/keys.c    **** 	  }
 5318              		.loc 1 2993 6 is_stmt 1 view .LVU1701
2993:src/keys.c    **** 	  }
 5319              		.loc 1 2993 14 is_stmt 0 view .LVU1702
 5320 01a4 374B     		ldr	r3, .L1141+40
 5321 01a6 384A     		ldr	r2, .L1141+44
 5322 01a8 1A60     		str	r2, [r3]
 5323              	.L543:
2999:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
 5324              		.loc 1 2999 4 is_stmt 1 view .LVU1703
 5325 01aa FFF7FEFF 		bl	display
 5326              	.LVL431:
3000:src/keys.c    **** 	}
 5327              		.loc 1 3000 4 view .LVU1704
3000:src/keys.c    **** 	}
 5328              		.loc 1 3000 12 is_stmt 0 view .LVU1705
 5329 01ae 324B     		ldr	r3, .L1141+28
 5330 01b0 0122     		movs	r2, #1
 5331 01b2 1A60     		str	r2, [r3]
 5332              	.L540:
3018:src/keys.c    **** #else
 5333              		.loc 1 3018 2 is_stmt 1 view .LVU1706
3018:src/keys.c    **** #else
 5334              		.loc 1 3018 6 is_stmt 0 view .LVU1707
 5335 01b4 FFF7FEFF 		bl	keyticks
 5336              	.LVL432:
3018:src/keys.c    **** #else
 5337              		.loc 1 3018 5 view .LVU1708
 5338 01b8 0C28     		cmp	r0, #12
 5339 01ba 46DC     		bgt	.L1072
 5340              	.L538:
3030:src/keys.c    **** 
 5341              		.loc 1 3030 15 is_stmt 1 view .LVU1709
3036:src/keys.c    ****       JustStopped = 0;
 5342              		.loc 1 3036 5 view .LVU1710
3036:src/keys.c    ****       JustStopped = 0;
 5343              		.loc 1 3036 9 is_stmt 0 view .LVU1711
 5344 01bc 2A4E     		ldr	r6, .L1141+12
3036:src/keys.c    ****       JustStopped = 0;
 5345              		.loc 1 3036 8 view .LVU1712
 5346 01be 3368     		ldr	r3, [r6]
 5347 01c0 002B     		cmp	r3, #0
 5348 01c2 40F00681 		bne	.L1073
 5349              	.L547:
3045:src/keys.c    **** #else
 5350              		.loc 1 3045 5 is_stmt 1 view .LVU1713
3045:src/keys.c    **** #else
 5351              		.loc 1 3045 9 is_stmt 0 view .LVU1714
 5352 01c6 2B4F     		ldr	r7, .L1141+24
 5353 01c8 3B68     		ldr	r3, [r7]
3045:src/keys.c    **** #else
 5354              		.loc 1 3045 8 view .LVU1715
 5355 01ca 002B     		cmp	r3, #0
 5356 01cc 7FF475AF 		bne	.L549
ARM GAS  /tmp/ccizbp1a.s 			page 178


3045:src/keys.c    **** #else
 5357              		.loc 1 3045 21 discriminator 1 view .LVU1716
 5358 01d0 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
3045:src/keys.c    **** #else
 5359              		.loc 1 3045 18 discriminator 1 view .LVU1717
 5360 01d2 002A     		cmp	r2, #0
 5361 01d4 7FF471AF 		bne	.L549
 5362              	.LVL433:
 5363              	.L534:
 5364              		.loc 1 3218 1 view .LVU1718
 5365 01d8 03B0     		add	sp, sp, #12
 5366              		.cfi_remember_state
 5367              		.cfi_def_cfa_offset 36
 5368              		@ sp needed
 5369 01da BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5370              	.LVL434:
 5371              	.L1067:
 5372              		.cfi_restore_state
2958:src/keys.c    ****   }
 5373              		.loc 1 2958 5 is_stmt 1 view .LVU1719
 5374 01de FFF7FEFF 		bl	xeq_xrom
 5375              	.LVL435:
2958:src/keys.c    ****   }
 5376              		.loc 1 2958 5 is_stmt 0 view .LVU1720
 5377 01e2 19E7     		b	.L535
 5378              	.L1071:
3093:src/keys.c    **** 	  xeq(c);
 5379              		.loc 1 3093 60 discriminator 2 view .LVU1721
 5380 01e4 FFF7FEFF 		bl	is_bad_cmdline
 5381              	.LVL436:
3093:src/keys.c    **** 	  xeq(c);
 5382              		.loc 1 3093 56 discriminator 2 view .LVU1722
 5383 01e8 0028     		cmp	r0, #0
 5384 01ea 3FF443AF 		beq	.L560
 5385 01ee 214F     		ldr	r7, .L1141+24
 5386 01f0 4AE7     		b	.L556
 5387              	.LVL437:
 5388              	.L568:
 5389              	.LBB1225:
 5390              	.LBB1170:
2813:src/keys.c    ****     soft_init_state();
 5391              		.loc 1 2813 3 is_stmt 1 view .LVU1723
2813:src/keys.c    ****     soft_init_state();
 5392              		.loc 1 2813 6 is_stmt 0 view .LVU1724
 5393 01f2 242C     		cmp	r4, #36
 5394 01f4 00F06983 		beq	.L1074
2819:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5395              		.loc 1 2819 2 is_stmt 1 view .LVU1725
2819:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5396              		.loc 1 2819 5 is_stmt 0 view .LVU1726
 5397 01f8 272C     		cmp	r4, #39
 5398 01fa 4DD1     		bne	.L576
2819:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5399              		.loc 1 2819 15 view .LVU1727
 5400 01fc 1A4B     		ldr	r3, .L1141+12
 5401 01fe 1A68     		ldr	r2, [r3]
 5402 0200 002A     		cmp	r2, #0
ARM GAS  /tmp/ccizbp1a.s 			page 179


 5403 0202 49D0     		beq	.L576
2821:src/keys.c    **** 		return STATE_IGNORE;
 5404              		.loc 1 2821 3 is_stmt 1 view .LVU1728
2821:src/keys.c    **** 		return STATE_IGNORE;
 5405              		.loc 1 2821 15 is_stmt 0 view .LVU1729
 5406 0204 C3F80080 		str	r8, [r3]
2822:src/keys.c    **** 	}
 5407              		.loc 1 2822 3 is_stmt 1 view .LVU1730
 5408              	.LVL438:
2822:src/keys.c    **** 	}
 5409              		.loc 1 2822 3 is_stmt 0 view .LVU1731
 5410              	.LBE1170:
 5411              	.LBE1225:
3200:src/keys.c    **** #else
 5412              		.loc 1 3200 3 is_stmt 1 view .LVU1732
 5413              	.LBB1226:
 5414              	.LBB1171:
2822:src/keys.c    **** 	}
 5415              		.loc 1 2822 10 is_stmt 0 view .LVU1733
 5416 0208 4FF0320B 		mov	fp, #50
 5417 020c 89E7     		b	.L577
 5418              	.LVL439:
 5419              	.L569:
2768:src/keys.c    **** 	set_pc(0);
 5420              		.loc 1 2768 7 is_stmt 1 view .LVU1734
2768:src/keys.c    **** 	set_pc(0);
 5421              		.loc 1 2768 11 is_stmt 0 view .LVU1735
 5422 020e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
2768:src/keys.c    **** 	set_pc(0);
 5423              		.loc 1 2768 10 view .LVU1736
 5424 0210 3BB1     		cbz	r3, .L571
2768:src/keys.c    **** 	set_pc(0);
 5425              		.loc 1 2768 21 view .LVU1737
 5426 0212 1E4B     		ldr	r3, .L1141+48
 5427 0214 1B68     		ldr	r3, [r3]
 5428 0216 B3F8E037 		ldrh	r3, [r3, #2016]
2768:src/keys.c    **** 	set_pc(0);
 5429              		.loc 1 2768 18 view .LVU1738
 5430 021a 9B0B     		lsrs	r3, r3, #14
 5431 021c 032B     		cmp	r3, #3
 5432 021e 00F06683 		beq	.L1075
 5433              	.L571:
2770:src/keys.c    ****       xeq_xrom();
 5434              		.loc 1 2770 7 is_stmt 1 view .LVU1739
 5435 0222 0020     		movs	r0, #0
 5436 0224 FFF7FEFF 		bl	start_pause
 5437              	.LVL440:
2771:src/keys.c    ****       set_running_off();
 5438              		.loc 1 2771 7 view .LVU1740
 5439 0228 FFF7FEFF 		bl	xeq_xrom
 5440              	.LVL441:
2772:src/keys.c    ****       DispMsg = "Stopped";
 5441              		.loc 1 2772 7 view .LVU1741
 5442 022c FFF7FEFF 		bl	set_running_off
 5443              	.LVL442:
2773:src/keys.c    ****       State2.disp_freeze = 0;
 5444              		.loc 1 2773 7 view .LVU1742
ARM GAS  /tmp/ccizbp1a.s 			page 180


2774:src/keys.c    ****       return STATE_UNFINISHED;
 5445              		.loc 1 2774 26 is_stmt 0 view .LVU1743
 5446 0230 0C4B     		ldr	r3, .L1141+8
2773:src/keys.c    ****       State2.disp_freeze = 0;
 5447              		.loc 1 2773 15 view .LVU1744
 5448 0232 1449     		ldr	r1, .L1141+40
2774:src/keys.c    ****       return STATE_UNFINISHED;
 5449              		.loc 1 2774 26 view .LVU1745
 5450 0234 DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
2773:src/keys.c    ****       State2.disp_freeze = 0;
 5451              		.loc 1 2773 15 view .LVU1746
 5452 0236 1648     		ldr	r0, .L1141+52
 5453 0238 0860     		str	r0, [r1]
2774:src/keys.c    ****       return STATE_UNFINISHED;
 5454              		.loc 1 2774 7 is_stmt 1 view .LVU1747
2774:src/keys.c    ****       return STATE_UNFINISHED;
 5455              		.loc 1 2774 26 is_stmt 0 view .LVU1748
 5456 023a 6FF30412 		bfc	r2, #4, #1
 5457 023e DA75     		strb	r2, [r3, #23]
2775:src/keys.c    ****     }
 5458              		.loc 1 2775 7 is_stmt 1 view .LVU1749
 5459              	.LBE1171:
 5460              	.LBE1226:
2952:src/keys.c    **** #ifdef DM42
 5461              		.loc 1 2952 7 is_stmt 0 view .LVU1750
 5462 0240 4FF00008 		mov	r8, #0
 5463              	.LBB1227:
 5464              	.LBB1172:
2775:src/keys.c    ****     }
 5465              		.loc 1 2775 14 view .LVU1751
 5466 0244 4FF0330B 		mov	fp, #51
 5467 0248 68E7     		b	.L563
 5468              	.LVL443:
 5469              	.L1072:
2775:src/keys.c    ****     }
 5470              		.loc 1 2775 14 view .LVU1752
 5471              	.LBE1172:
 5472              	.LBE1227:
3018:src/keys.c    **** #else
 5473              		.loc 1 3018 25 discriminator 1 view .LVU1753
 5474 024a FFF7FEFF 		bl	shift_down
 5475              	.LVL444:
3018:src/keys.c    **** #else
 5476              		.loc 1 3018 22 discriminator 1 view .LVU1754
 5477 024e 0028     		cmp	r0, #0
 5478 0250 B4D0     		beq	.L538
3023:src/keys.c    ****       }
 5479              		.loc 1 3023 2 is_stmt 1 view .LVU1755
3023:src/keys.c    ****       }
 5480              		.loc 1 3023 16 is_stmt 0 view .LVU1756
 5481 0252 044B     		ldr	r3, .L1141+8
 5482 0254 0022     		movs	r2, #0
 5483 0256 1A74     		strb	r2, [r3, #16]
 5484 0258 B0E7     		b	.L538
 5485              	.L1142:
 5486 025a 00BF     		.align	2
 5487              	.L1141:
ARM GAS  /tmp/ccizbp1a.s 			page 181


 5488 025c 00000000 		.word	.LANCHOR12
 5489 0260 00000000 		.word	Pause
 5490 0264 00000000 		.word	StateWhileOn
 5491 0268 00000000 		.word	JustStopped
 5492 026c 00000000 		.word	OpCode
 5493 0270 00000000 		.word	GoFast
 5494 0274 00000000 		.word	Running
 5495 0278 00000000 		.word	ShowRPN
 5496 027c 00000000 		.word	JustDisplayed
 5497 0280 00000000 		.word	OpCodeDisplayPending
 5498 0284 00000000 		.word	DispMsg
 5499 0288 00000000 		.word	.LC0
 5500 028c 00000000 		.word	main_ram
 5501 0290 0C000000 		.word	.LC2
 5502 0294 00000000 		.word	WasDataEntry
 5503              	.LVL445:
 5504              	.L576:
3023:src/keys.c    ****       }
 5505              		.loc 1 3023 16 view .LVU1757
 5506 0298 8D4E     		ldr	r6, .L1143
 5507 029a B37B     		ldrb	r3, [r6, #14]	@ zero_extendqisi2
 5508              	.L574:
 5509              	.LBB1228:
 5510              	.LBB1173:
2829:src/keys.c    **** #else	
 5511              		.loc 1 2829 2 is_stmt 1 view .LVU1758
2829:src/keys.c    **** #else	
 5512              		.loc 1 2829 5 is_stmt 0 view .LVU1759
 5513 029c 002B     		cmp	r3, #0
 5514 029e 40F07C82 		bne	.L1076
 5515              	.L579:
2839:src/keys.c    **** 		return process_confirm((const keycode)c);
 5516              		.loc 1 2839 2 is_stmt 1 view .LVU1760
2839:src/keys.c    **** 		return process_confirm((const keycode)c);
 5517              		.loc 1 2839 6 is_stmt 0 view .LVU1761
 5518 02a2 337D     		ldrb	r3, [r6, #20]	@ zero_extendqisi2
2839:src/keys.c    **** 		return process_confirm((const keycode)c);
 5519              		.loc 1 2839 5 view .LVU1762
 5520 02a4 5907     		lsls	r1, r3, #29
 5521 02a6 40F09C82 		bne	.L1077
2842:src/keys.c    **** 		return process_arg((const keycode)c);
 5522              		.loc 1 2842 2 is_stmt 1 view .LVU1763
2842:src/keys.c    **** 		return process_arg((const keycode)c);
 5523              		.loc 1 2842 6 is_stmt 0 view .LVU1764
 5524 02aa B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
2842:src/keys.c    **** 		return process_arg((const keycode)c);
 5525              		.loc 1 2842 5 view .LVU1765
 5526 02ac 9A06     		lsls	r2, r3, #26
 5527 02ae 00F11983 		bmi	.L1078
2845:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5528              		.loc 1 2845 2 is_stmt 1 view .LVU1766
2845:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5529              		.loc 1 2845 6 is_stmt 0 view .LVU1767
 5530 02b2 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
2845:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5531              		.loc 1 2845 5 view .LVU1768
 5532 02b4 12F0010B 		ands	fp, r2, #1
ARM GAS  /tmp/ccizbp1a.s 			page 182


 5533 02b8 40F05F83 		bne	.L1079
2848:src/keys.c    **** 		return process_hyp((const keycode)c);
 5534              		.loc 1 2848 2 is_stmt 1 view .LVU1769
2848:src/keys.c    **** 		return process_hyp((const keycode)c);
 5535              		.loc 1 2848 5 is_stmt 0 view .LVU1770
 5536 02bc 12F02001 		ands	r1, r2, #32
 5537 02c0 40F0B180 		bne	.L1080
2851:src/keys.c    **** 		return process_test((const keycode)c);
 5538              		.loc 1 2851 2 is_stmt 1 view .LVU1771
2851:src/keys.c    **** 		return process_test((const keycode)c);
 5539              		.loc 1 2851 12 is_stmt 0 view .LVU1772
 5540 02c4 96F80FB0 		ldrb	fp, [r6, #15]	@ zero_extendqisi2
2851:src/keys.c    **** 		return process_test((const keycode)c);
 5541              		.loc 1 2851 5 view .LVU1773
 5542 02c8 BBF1070F 		cmp	fp, #7
 5543 02cc 40F02383 		bne	.L1081
2854:src/keys.c    **** 		return process_status((const keycode)c);
 5544              		.loc 1 2854 2 is_stmt 1 view .LVU1774
2854:src/keys.c    **** 		return process_status((const keycode)c);
 5545              		.loc 1 2854 12 is_stmt 0 view .LVU1775
 5546 02d0 337B     		ldrb	r3, [r6, #12]	@ zero_extendqisi2
2854:src/keys.c    **** 		return process_status((const keycode)c);
 5547              		.loc 1 2854 5 view .LVU1776
 5548 02d2 002B     		cmp	r3, #0
 5549 02d4 40F0BD83 		bne	.L1082
2860:src/keys.c    **** 		toggle_shift(SHIFT_F);
 5550              		.loc 1 2860 2 is_stmt 1 view .LVU1777
2860:src/keys.c    **** 		toggle_shift(SHIFT_F);
 5551              		.loc 1 2860 5 is_stmt 0 view .LVU1778
 5552 02d8 292C     		cmp	r4, #41
 5553 02da 00F07B84 		beq	.L1083
2864:src/keys.c    **** 		toggle_shift(SHIFT_G);
 5554              		.loc 1 2864 2 is_stmt 1 view .LVU1779
2864:src/keys.c    **** 		toggle_shift(SHIFT_G);
 5555              		.loc 1 2864 5 is_stmt 0 view .LVU1780
 5556 02de 2A2C     		cmp	r4, #42
 5557 02e0 00F08884 		beq	.L1084
2868:src/keys.c    **** 		toggle_shift(SHIFT_H);
 5558              		.loc 1 2868 2 is_stmt 1 view .LVU1781
2868:src/keys.c    **** 		toggle_shift(SHIFT_H);
 5559              		.loc 1 2868 5 is_stmt 0 view .LVU1782
 5560 02e4 2B2C     		cmp	r4, #43
 5561 02e6 00F0A684 		beq	.L1085
2877:src/keys.c    **** 		return process_arrow((const keycode)c);
 5562              		.loc 1 2877 2 is_stmt 1 view .LVU1783
2877:src/keys.c    **** 		return process_arrow((const keycode)c);
 5563              		.loc 1 2877 5 is_stmt 0 view .LVU1784
 5564 02ea 5007     		lsls	r0, r2, #29
 5565 02ec 00F1DB83 		bmi	.L1086
2885:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 5566              		.loc 1 2885 2 is_stmt 1 view .LVU1785
2885:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 5567              		.loc 1 2885 8 is_stmt 0 view .LVU1786
 5568 02f0 E4B2     		uxtb	r4, r4
 5569              	.LVL446:
 5570              	.LBB643:
 5571              	.LBI643:
ARM GAS  /tmp/ccizbp1a.s 			page 183


 254:src/keys.c    **** {
 5572              		.loc 1 254 24 is_stmt 1 view .LVU1787
 5573              	.LBB644:
 256:src/keys.c    ****   int i, col, max;
 5574              		.loc 1 256 3 view .LVU1788
 257:src/keys.c    ****   const struct _map {
 5575              		.loc 1 257 3 view .LVU1789
 258:src/keys.c    ****     unsigned char key, cat[3];
 5576              		.loc 1 258 3 view .LVU1790
 263:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 5577              		.loc 1 263 3 view .LVU1791
 263:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 5578              		.loc 1 263 6 is_stmt 0 view .LVU1792
 5579 02f2 212C     		cmp	r4, #33
 5580 02f4 00F00B84 		beq	.L1087
 266:src/keys.c    ****     /*
 5581              		.loc 1 266 3 is_stmt 1 view .LVU1793
 266:src/keys.c    ****     /*
 5582              		.loc 1 266 23 is_stmt 0 view .LVU1794
 5583 02f8 7649     		ldr	r1, .L1143+4
 5584 02fa 7369     		ldr	r3, [r6, #20]
 266:src/keys.c    ****     /*
 5585              		.loc 1 266 6 view .LVU1795
 5586 02fc 1942     		tst	r1, r3
 5587 02fe 40F00F84 		bne	.L655
 5588              	.LBB645:
 270:src/keys.c    **** #ifdef DM42
 5589              		.loc 1 270 5 is_stmt 1 view .LVU1796
 297:src/keys.c    ****       /*
 5590              		.loc 1 297 5 view .LVU1797
 297:src/keys.c    ****       /*
 5591              		.loc 1 297 8 is_stmt 0 view .LVU1798
 5592 0302 242C     		cmp	r4, #36
 5593 0304 03D1     		bne	.L656
 297:src/keys.c    ****       /*
 5594              		.loc 1 297 18 view .LVU1799
 5595 0306 BAF1020F 		cmp	r10, #2
 5596 030a 01F0DD81 		beq	.L861
 5597              	.L656:
 312:src/keys.c    ****       /*
 5598              		.loc 1 312 5 is_stmt 1 view .LVU1800
 312:src/keys.c    ****       /*
 5599              		.loc 1 312 8 is_stmt 0 view .LVU1801
 5600 030e BAF1030F 		cmp	r10, #3
 5601 0312 1AD1     		bne	.L663
 5602              	.L848:
 322:src/keys.c    **** #ifndef WINGUI
 5603              		.loc 1 322 5 is_stmt 1 view .LVU1802
 5604              	.LVL447:
 324:src/keys.c    **** #else
 5605              		.loc 1 324 5 view .LVU1803
 324:src/keys.c    **** #else
 5606              		.loc 1 324 23 is_stmt 0 view .LVU1804
 5607 0314 704B     		ldr	r3, .L1143+8
 5608 0316 1B68     		ldr	r3, [r3]
 5609 0318 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 324:src/keys.c    **** #else
ARM GAS  /tmp/ccizbp1a.s 			page 184


 5610              		.loc 1 324 27 view .LVU1805
 5611 031c D907     		lsls	r1, r3, #31
 5612 031e 00F1CC84 		bmi	.L862
 324:src/keys.c    **** #else
 5613              		.loc 1 324 73 view .LVU1806
 5614 0322 12F0020B 		ands	fp, r2, #2
 5615 0326 01F05B80 		beq	.L1088
 322:src/keys.c    **** #ifndef WINGUI
 5616              		.loc 1 322 8 view .LVU1807
 5617 032a 6C4B     		ldr	r3, .L1143+12
 328:src/keys.c    ****   }
 5618              		.loc 1 328 9 view .LVU1808
 5619 032c 0C21     		movs	r1, #12
 324:src/keys.c    **** #else
 5620              		.loc 1 324 73 view .LVU1809
 5621 032e 4FF0020C 		mov	ip, #2
 5622              	.LVL448:
 5623              	.L658:
 324:src/keys.c    **** #else
 5624              		.loc 1 324 73 view .LVU1810
 5625              	.LBE645:
 370:src/keys.c    ****     if (cp->key == c) {
 5626              		.loc 1 370 3 is_stmt 1 view .LVU1811
 370:src/keys.c    ****     if (cp->key == c) {
 5627              		.loc 1 370 15 view .LVU1812
 5628 0332 181F     		subs	r0, r3, #4
 5629 0334 00EB8100 		add	r0, r0, r1, lsl #2
 5630              	.LBB646:
 324:src/keys.c    **** #else
 5631              		.loc 1 324 73 is_stmt 0 view .LVU1813
 5632 0338 0421     		movs	r1, #4
 5633              	.LVL449:
 324:src/keys.c    **** #else
 5634              		.loc 1 324 73 view .LVU1814
 5635 033a 01E0     		b	.L664
 5636              	.LVL450:
 5637              	.L1090:
 324:src/keys.c    **** #else
 5638              		.loc 1 324 73 view .LVU1815
 5639 033c 13F8041F 		ldrb	r1, [r3, #4]!	@ zero_extendqisi2
 5640              	.LVL451:
 5641              	.L664:
 324:src/keys.c    **** #else
 5642              		.loc 1 324 73 view .LVU1816
 5643              	.LBE646:
 371:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 5644              		.loc 1 371 5 is_stmt 1 view .LVU1817
 370:src/keys.c    ****     if (cp->key == c) {
 5645              		.loc 1 370 24 view .LVU1818
 370:src/keys.c    ****     if (cp->key == c) {
 5646              		.loc 1 370 15 view .LVU1819
 371:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 5647              		.loc 1 371 8 is_stmt 0 view .LVU1820
 5648 0340 8C42     		cmp	r4, r1
 5649 0342 00F02184 		beq	.L1089
 370:src/keys.c    ****     if (cp->key == c) {
 5650              		.loc 1 370 3 view .LVU1821
ARM GAS  /tmp/ccizbp1a.s 			page 185


 5651 0346 9842     		cmp	r0, r3
 5652 0348 F8D1     		bne	.L1090
 5653              	.LVL452:
 5654              	.L663:
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5655              		.loc 1 376 3 is_stmt 1 view .LVU1822
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5656              		.loc 1 376 6 is_stmt 0 view .LVU1823
 5657 034a 1107     		lsls	r1, r2, #28
 5658 034c 00F1E080 		bmi	.L668
 5659              	.LVL453:
 5660              	.L667:
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5661              		.loc 1 376 6 view .LVU1824
 5662              	.LBE644:
 5663              	.LBE643:
2900:src/keys.c    **** 		return process_labellist((const keycode)c);
 5664              		.loc 1 2900 2 is_stmt 1 view .LVU1825
2900:src/keys.c    **** 		return process_labellist((const keycode)c);
 5665              		.loc 1 2900 6 is_stmt 0 view .LVU1826
 5666 0350 F17D     		ldrb	r1, [r6, #23]	@ zero_extendqisi2
2900:src/keys.c    **** 		return process_labellist((const keycode)c);
 5667              		.loc 1 2900 5 view .LVU1827
 5668 0352 4B07     		lsls	r3, r1, #29
 5669 0354 00F1BE84 		bmi	.L1091
2903:src/keys.c    **** 		return process_registerlist((const keycode)c);
 5670              		.loc 1 2903 2 is_stmt 1 view .LVU1828
2903:src/keys.c    **** 		return process_registerlist((const keycode)c);
 5671              		.loc 1 2903 5 is_stmt 0 view .LVU1829
 5672 0358 0807     		lsls	r0, r1, #28
 5673 035a 00F1F385 		bmi	.L1092
2906:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 5674              		.loc 1 2906 2 is_stmt 1 view .LVU1830
2906:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 5675              		.loc 1 2906 5 is_stmt 0 view .LVU1831
 5676 035e B37B     		ldrb	r3, [r6, #14]	@ zero_extendqisi2
 5677 0360 002B     		cmp	r3, #0
 5678 0362 40F0B686 		bne	.L1093
2909:src/keys.c    **** #ifndef INFRARED
 5679              		.loc 1 2909 2 is_stmt 1 view .LVU1832
2909:src/keys.c    **** #ifndef INFRARED
 5680              		.loc 1 2909 6 is_stmt 0 view .LVU1833
 5681 0366 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
2909:src/keys.c    **** #ifndef INFRARED
 5682              		.loc 1 2909 5 view .LVU1834
 5683 0368 1807     		lsls	r0, r3, #28
 5684 036a 00F1D886 		bmi	.L1094
2922:src/keys.c    **** 		return process_cmplx((const keycode)c);
 5685              		.loc 1 2922 2 is_stmt 1 view .LVU1835
2922:src/keys.c    **** 		return process_cmplx((const keycode)c);
 5686              		.loc 1 2922 5 is_stmt 0 view .LVU1836
 5687 036e 12F0020B 		ands	fp, r2, #2
 5688 0372 40F0E387 		bne	.L1095
2925:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5689              		.loc 1 2925 3 is_stmt 1 view .LVU1837
2925:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5690              		.loc 1 2925 24 is_stmt 0 view .LVU1838
ARM GAS  /tmp/ccizbp1a.s 			page 186


 5691 0376 0AF1FF32 		add	r2, r10, #-1
2925:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5692              		.loc 1 2925 6 view .LVU1839
 5693 037a D2B2     		uxtb	r2, r2
 5694 037c 012A     		cmp	r2, #1
 5695 037e 41F23A80 		bls	.L1096
2927:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 5696              		.loc 1 2927 3 is_stmt 1 view .LVU1840
2927:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 5697              		.loc 1 2927 6 is_stmt 0 view .LVU1841
 5698 0382 BAF1030F 		cmp	r10, #3
 5699 0386 00F03787 		beq	.L1097
2930:src/keys.c    **** 	}
 5700              		.loc 1 2930 3 is_stmt 1 view .LVU1842
 5701              	.LVL454:
 5702              	.LBB658:
 5703              	.LBI658:
 673:src/keys.c    **** {
 5704              		.loc 1 673 12 view .LVU1843
 5705              	.LBB659:
 675:src/keys.c    **** 		// Row 1
 5706              		.loc 1 675 2 view .LVU1844
 722:src/keys.c    **** 	int op = op_map[lc];
 5707              		.loc 1 722 2 view .LVU1845
 5708              	.LBB660:
 5709              	.LBI660:
 134:src/keys.c    **** {
 5710              		.loc 1 134 12 view .LVU1846
 5711              	.LBB661:
 136:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 5712              		.loc 1 136 2 view .LVU1847
 146:src/keys.c    **** }
 5713              		.loc 1 146 2 view .LVU1848
 146:src/keys.c    **** }
 5714              		.loc 1 146 2 is_stmt 0 view .LVU1849
 5715              	.LBE661:
 5716              	.LBE660:
 723:src/keys.c    **** 	
 5717              		.loc 1 723 2 is_stmt 1 view .LVU1850
 728:src/keys.c    **** 	  switch (c) {
 5718              		.loc 1 728 6 is_stmt 0 view .LVU1851
 5719 038a 534A     		ldr	r2, .L1143+8
 5720              	.LBB664:
 5721              	.LBB662:
 146:src/keys.c    **** }
 5722              		.loc 1 146 23 view .LVU1852
 5723 038c 5448     		ldr	r0, .L1143+16
 5724              	.LBE662:
 5725              	.LBE664:
 728:src/keys.c    **** 	  switch (c) {
 5726              		.loc 1 728 6 view .LVU1853
 5727 038e 1268     		ldr	r2, [r2]
 5728              	.LBB665:
 5729              	.LBB663:
 146:src/keys.c    **** }
 5730              		.loc 1 146 23 view .LVU1854
 5731 0390 10F804C0 		ldrb	ip, [r0, r4]	@ zero_extendqisi2
ARM GAS  /tmp/ccizbp1a.s 			page 187


 5732              	.LBE663:
 5733              	.LBE665:
 723:src/keys.c    **** 	
 5734              		.loc 1 723 17 view .LVU1855
 5735 0394 5348     		ldr	r0, .L1143+20
 728:src/keys.c    **** 	  switch (c) {
 5736              		.loc 1 728 6 view .LVU1856
 5737 0396 92F8E827 		ldrb	r2, [r2, #2024]	@ zero_extendqisi2
 723:src/keys.c    **** 	
 5738              		.loc 1 723 17 view .LVU1857
 5739 039a 30F81CA0 		ldrh	r10, [r0, ip, lsl #1]
 5740              	.LVL455:
 728:src/keys.c    **** 	  switch (c) {
 5741              		.loc 1 728 5 view .LVU1858
 5742 039e D007     		lsls	r0, r2, #31
 723:src/keys.c    **** 	
 5743              		.loc 1 723 6 view .LVU1859
 5744 03a0 D346     		mov	fp, r10
 5745              	.LVL456:
 727:src/keys.c    **** 	if (UState.intm) {
 5746              		.loc 1 727 2 is_stmt 1 view .LVU1860
 728:src/keys.c    **** 	  switch (c) {
 5747              		.loc 1 728 2 view .LVU1861
 728:src/keys.c    **** 	  switch (c) {
 5748              		.loc 1 728 5 is_stmt 0 view .LVU1862
 5749 03a2 79D5     		bpl	.L798
 729:src/keys.c    **** 	  case K00:
 5750              		.loc 1 729 4 is_stmt 1 view .LVU1863
 5751 03a4 122C     		cmp	r4, #18
 5752 03a6 77D8     		bhi	.L798
 5753 03a8 DFE814F0 		tbh	[pc, r4, lsl #1]
 5754              	.L800:
 5755 03ac 8D01     		.2byte	(.L803-.L800)/2
 5756 03ae 8101     		.2byte	(.L802-.L800)/2
 5757 03b0 7600     		.2byte	(.L798-.L800)/2
 5758 03b2 6101     		.2byte	(.L801-.L800)/2
 5759 03b4 7600     		.2byte	(.L798-.L800)/2
 5760 03b6 7600     		.2byte	(.L798-.L800)/2
 5761 03b8 7600     		.2byte	(.L798-.L800)/2
 5762 03ba 7600     		.2byte	(.L798-.L800)/2
 5763 03bc 7600     		.2byte	(.L798-.L800)/2
 5764 03be 7600     		.2byte	(.L798-.L800)/2
 5765 03c0 7600     		.2byte	(.L798-.L800)/2
 5766 03c2 7600     		.2byte	(.L798-.L800)/2
 5767 03c4 7600     		.2byte	(.L798-.L800)/2
 5768 03c6 7600     		.2byte	(.L798-.L800)/2
 5769 03c8 7600     		.2byte	(.L798-.L800)/2
 5770 03ca 7600     		.2byte	(.L798-.L800)/2
 5771 03cc 7600     		.2byte	(.L798-.L800)/2
 5772 03ce 7600     		.2byte	(.L798-.L800)/2
 5773 03d0 5501     		.2byte	(.L799-.L800)/2
 5774              	.LVL457:
 5775              		.p2align 1
 5776              	.L1073:
 729:src/keys.c    **** 	  case K00:
 5777              		.loc 1 729 4 is_stmt 0 view .LVU1864
 5778              	.LBE659:
ARM GAS  /tmp/ccizbp1a.s 			page 188


 5779              	.LBE658:
 5780              	.LBE1173:
 5781              	.LBE1228:
3036:src/keys.c    ****       JustStopped = 0;
 5782              		.loc 1 3036 25 discriminator 1 view .LVU1865
 5783 03d2 FFF7FEFF 		bl	is_key_pressed
 5784              	.LVL458:
3036:src/keys.c    ****       JustStopped = 0;
 5785              		.loc 1 3036 21 discriminator 1 view .LVU1866
 5786 03d6 0028     		cmp	r0, #0
 5787 03d8 7FF4F5AE 		bne	.L547
3037:src/keys.c    ****     }
 5788              		.loc 1 3037 7 is_stmt 1 view .LVU1867
3037:src/keys.c    ****     }
 5789              		.loc 1 3037 19 is_stmt 0 view .LVU1868
 5790 03dc 3060     		str	r0, [r6]
 5791 03de F2E6     		b	.L547
 5792              	.LVL459:
 5793              	.L554:
3107:src/keys.c    **** #ifndef CONSOLE
 5794              		.loc 1 3107 7 is_stmt 1 view .LVU1869
 5795 03e0 414B     		ldr	r3, .L1143+24
 5796 03e2 8D20     		movs	r0, #141
 5797 03e4 1968     		ldr	r1, [r3]
 5798 03e6 FFF7FEFF 		bl	dot
 5799              	.LVL460:
3109:src/keys.c    **** 	if (!WasDataEntry) {
 5800              		.loc 1 3109 7 view .LVU1870
3109:src/keys.c    **** 	if (!WasDataEntry) {
 5801              		.loc 1 3109 11 is_stmt 0 view .LVU1871
 5802 03ea F37D     		ldrb	r3, [r6, #23]	@ zero_extendqisi2
3109:src/keys.c    **** 	if (!WasDataEntry) {
 5803              		.loc 1 3109 10 view .LVU1872
 5804 03ec 9806     		lsls	r0, r3, #26
 5805 03ee 3FF5F3AE 		bmi	.L534
3110:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 5806              		.loc 1 3110 2 is_stmt 1 view .LVU1873
3110:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 5807              		.loc 1 3110 6 is_stmt 0 view .LVU1874
 5808 03f2 3E4B     		ldr	r3, .L1143+28
3110:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 5809              		.loc 1 3110 5 view .LVU1875
 5810 03f4 1B68     		ldr	r3, [r3]
 5811 03f6 002B     		cmp	r3, #0
 5812 03f8 40F0EE81 		bne	.L565
3112:src/keys.c    **** 	}
 5813              		.loc 1 3112 4 is_stmt 1 view .LVU1876
 5814              		.loc 1 3218 1 is_stmt 0 view .LVU1877
 5815 03fc 03B0     		add	sp, sp, #12
 5816              		.cfi_remember_state
 5817              		.cfi_def_cfa_offset 36
 5818              		@ sp needed
 5819 03fe BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5820              		.cfi_restore 14
 5821              		.cfi_restore 11
 5822              		.cfi_restore 10
 5823              		.cfi_restore 9
ARM GAS  /tmp/ccizbp1a.s 			page 189


 5824              		.cfi_restore 8
 5825              		.cfi_restore 7
 5826              		.cfi_restore 6
 5827              		.cfi_restore 5
 5828              		.cfi_restore 4
 5829              		.cfi_def_cfa_offset 0
3112:src/keys.c    **** 	}
 5830              		.loc 1 3112 4 view .LVU1878
 5831 0402 FFF7FEBF 		b	display
 5832              	.LVL461:
 5833              	.L1070:
 5834              		.cfi_restore_state
3091:src/keys.c    ****       else {
 5835              		.loc 1 3091 2 is_stmt 1 view .LVU1879
 5836 0406 FFF7FEFF 		bl	xeq_sst_bst
 5837              	.LVL462:
 5838 040a 394F     		ldr	r7, .L1143+32
 5839 040c 3CE6     		b	.L556
 5840              	.L542:
2996:src/keys.c    **** 	    DispMsg = TraceBuffer;
 5841              		.loc 1 2996 6 view .LVU1880
 5842 040e 394F     		ldr	r7, .L1143+36
 5843 0410 3946     		mov	r1, r7
 5844 0412 FFF7FEFF 		bl	prt
 5845              	.LVL463:
 5846 0416 3246     		mov	r2, r6
 5847 0418 0146     		mov	r1, r0
 5848 041a 3846     		mov	r0, r7
 5849 041c FFF7FEFF 		bl	scopy_char
 5850              	.LVL464:
2997:src/keys.c    **** 	  }
 5851              		.loc 1 2997 6 view .LVU1881
2997:src/keys.c    **** 	  }
 5852              		.loc 1 2997 14 is_stmt 0 view .LVU1882
 5853 0420 354B     		ldr	r3, .L1143+40
 5854 0422 1F60     		str	r7, [r3]
 5855 0424 C1E6     		b	.L543
 5856              	.LVL465:
 5857              	.L1080:
 5858              	.LBB1229:
 5859              	.LBB1174:
2849:src/keys.c    **** 
 5860              		.loc 1 2849 3 is_stmt 1 view .LVU1883
 5861              	.LBB681:
 5862              	.LBB682:
1228:src/keys.c    **** 	State2.dot = 0;
 5863              		.loc 1 1228 15 is_stmt 0 view .LVU1884
 5864 0426 22F06203 		bic	r3, r2, #98
 5865              	.LBE682:
 5866              	.LBE681:
2849:src/keys.c    **** 
 5867              		.loc 1 2849 10 view .LVU1885
 5868 042a E4B2     		uxtb	r4, r4
 5869              	.LVL466:
 5870              	.LBB696:
 5871              	.LBI681:
1218:src/keys.c    **** 	static const unsigned char op_map[][2] = {
ARM GAS  /tmp/ccizbp1a.s 			page 190


 5872              		.loc 1 1218 12 is_stmt 1 view .LVU1886
 5873              	.LBB692:
1219:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
 5874              		.loc 1 1219 2 view .LVU1887
1224:src/keys.c    **** 	int f = State2.dot;
 5875              		.loc 1 1224 2 view .LVU1888
1228:src/keys.c    **** 	State2.dot = 0;
 5876              		.loc 1 1228 15 is_stmt 0 view .LVU1889
 5877 042c 7375     		strb	r3, [r6, #21]
1224:src/keys.c    **** 	int f = State2.dot;
 5878              		.loc 1 1224 20 view .LVU1890
 5879 042e C2F3400A 		ubfx	r10, r2, #1, #1
 5880              	.LVL467:
1225:src/keys.c    **** 
 5881              		.loc 1 1225 2 is_stmt 1 view .LVU1891
1225:src/keys.c    **** 
 5882              		.loc 1 1225 16 is_stmt 0 view .LVU1892
 5883 0432 C2F38019 		ubfx	r9, r2, #6, #1
 5884              	.LVL468:
1227:src/keys.c    **** 	State2.cmplx = 0;
 5885              		.loc 1 1227 2 is_stmt 1 view .LVU1893
1228:src/keys.c    **** 	State2.dot = 0;
 5886              		.loc 1 1228 2 view .LVU1894
1229:src/keys.c    **** #ifdef DM42
 5887              		.loc 1 1229 2 view .LVU1895
1231:src/keys.c    **** #endif
 5888              		.loc 1 1231 2 view .LVU1896
 5889              	.LBB683:
 5890              	.LBI683:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 5891              		.loc 1 102 13 view .LVU1897
 5892              	.LBE683:
 5893              	.LBE692:
 5894              	.LBE696:
 5895              	.LBE1174:
 5896              	.LBE1229:
 103:src/keys.c    **** }
 5897              		.loc 1 103 2 view .LVU1898
 5898              	.LBB1230:
 5899              	.LBB1175:
 5900              	.LBB697:
 5901              	.LBB693:
 5902              	.LBB690:
 5903              	.LBB684:
 5904              	.LBI684:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 5905              		.loc 1 92 20 view .LVU1899
 5906              	.LBB685:
  93:src/keys.c    **** 	State2.shifts = shift;
 5907              		.loc 1 93 2 view .LVU1900
 5908              	.LBB686:
 5909              	.LBI686:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 5910              		.loc 1 84 13 view .LVU1901
 5911              	.LBB687:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5912              		.loc 1 85 2 view .LVU1902
ARM GAS  /tmp/ccizbp1a.s 			page 191


  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5913              		.loc 1 85 18 is_stmt 0 view .LVU1903
 5914 0436 FFF7FEFF 		bl	shift_down
 5915              	.LVL469:
  86:src/keys.c    **** }
 5916              		.loc 1 86 2 is_stmt 1 view .LVU1904
 5917              	.LBE687:
 5918              	.LBE686:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 5919              		.loc 1 94 2 view .LVU1905
 5920              	.LBE685:
 5921              	.LBE684:
 5922              	.LBE690:
1233:src/keys.c    **** 
 5923              		.loc 1 1233 2 is_stmt 0 view .LVU1906
 5924 043a 2A2C     		cmp	r4, #42
 5925              	.LBB691:
 5926              	.LBB689:
 5927              	.LBB688:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 5928              		.loc 1 94 16 view .LVU1907
 5929 043c 86F810B0 		strb	fp, [r6, #16]
  95:src/keys.c    **** 	return r;
 5930              		.loc 1 95 2 is_stmt 1 view .LVU1908
  95:src/keys.c    **** 	return r;
 5931              		.loc 1 95 19 is_stmt 0 view .LVU1909
 5932 0440 86F80DB0 		strb	fp, [r6, #13]
  96:src/keys.c    **** }
 5933              		.loc 1 96 2 is_stmt 1 view .LVU1910
 5934              	.LVL470:
  96:src/keys.c    **** }
 5935              		.loc 1 96 2 is_stmt 0 view .LVU1911
 5936              	.LBE688:
 5937              	.LBE689:
 5938              	.LBE691:
1233:src/keys.c    **** 
 5939              		.loc 1 1233 2 is_stmt 1 view .LVU1912
 5940 0444 00F2E182 		bhi	.L613
 5941 0448 282C     		cmp	r4, #40
 5942 044a 00F2CC83 		bhi	.L614
 5943 044e 013C     		subs	r4, r4, #1
 5944              	.LVL471:
1233:src/keys.c    **** 
 5945              		.loc 1 1233 2 is_stmt 0 view .LVU1913
 5946 0450 E3B2     		uxtb	r3, r4
 5947 0452 022B     		cmp	r3, #2
 5948 0454 00F2C380 		bhi	.L1058
1238:src/keys.c    **** 
 5949              		.loc 1 1238 3 is_stmt 1 view .LVU1914
1238:src/keys.c    **** 
 5950              		.loc 1 1238 54 is_stmt 0 view .LVU1915
 5951 0458 284A     		ldr	r2, .L1143+44
 5952 045a B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 5953 045c 02EB4404 		add	r4, r2, r4, lsl #1
 5954              	.LVL472:
1238:src/keys.c    **** 
 5955              		.loc 1 1238 27 view .LVU1916
ARM GAS  /tmp/ccizbp1a.s 			page 192


 5956 0460 BAF1000F 		cmp	r10, #0
1238:src/keys.c    **** 
 5957              		.loc 1 1238 54 view .LVU1917
 5958 0464 14F809B0 		ldrb	fp, [r4, r9]	@ zero_extendqisi2
1238:src/keys.c    **** 
 5959              		.loc 1 1238 27 view .LVU1918
 5960 0468 14BF     		ite	ne
 5961 046a 4FF4A062 		movne	r2, #1280
 5962 046e 4FF40072 		moveq	r2, #512
1238:src/keys.c    **** 
 5963              		.loc 1 1238 37 view .LVU1919
 5964 0472 4BEA020B 		orr	fp, fp, r2
 5965 0476 5846     		mov	r0, fp
 5966              	.LVL473:
 5967              	.L618:
1238:src/keys.c    **** 
 5968              		.loc 1 1238 37 view .LVU1920
 5969              	.LBE693:
 5970              	.LBE697:
 5971              	.LBE1175:
 5972              	.LBE1230:
3173:src/keys.c    **** 	NonProgrammable = 0;
 5973              		.loc 1 3173 7 is_stmt 1 view .LVU1921
3173:src/keys.c    **** 	NonProgrammable = 0;
 5974              		.loc 1 3173 10 is_stmt 0 view .LVU1922
 5975 0478 13F04003 		ands	r3, r3, #64
 5976 047c 00F0D483 		beq	.L1098
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 5977              		.loc 1 3174 2 is_stmt 1 view .LVU1923
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 5978              		.loc 1 3174 18 is_stmt 0 view .LVU1924
 5979 0480 1F4B     		ldr	r3, .L1143+48
 5980 0482 0022     		movs	r2, #0
 5981 0484 1A60     		str	r2, [r3]
3175:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 5982              		.loc 1 3175 2 is_stmt 1 view .LVU1925
 5983              	.LVL474:
 5984              	.L828:
3188:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 5985              		.loc 1 3188 4 view .LVU1926
3188:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 5986              		.loc 1 3188 11 is_stmt 0 view .LVU1927
 5987 0486 1F4A     		ldr	r2, .L1143+52
3189:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 5988              		.loc 1 3189 25 view .LVU1928
 5989 0488 1F4B     		ldr	r3, .L1143+56
3188:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 5990              		.loc 1 3188 11 view .LVU1929
 5991 048a 1060     		str	r0, [r2]
3189:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 5992              		.loc 1 3189 4 is_stmt 1 view .LVU1930
3189:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 5993              		.loc 1 3189 25 is_stmt 0 view .LVU1931
 5994 048c 0122     		movs	r2, #1
 5995 048e 1F4C     		ldr	r4, .L1143+60
 5996 0490 1A60     		str	r2, [r3]
3190:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
ARM GAS  /tmp/ccizbp1a.s 			page 193


 5997              		.loc 1 3190 4 is_stmt 1 view .LVU1932
 5998 0492 FFF7FEFF 		bl	finish_RPN
 5999              	.LVL475:
3191:src/keys.c    **** 	}
 6000              		.loc 1 3191 4 view .LVU1933
 6001 0496 09E6     		b	.L834
 6002              	.LVL476:
 6003              	.L798:
 6004              	.LBB1231:
 6005              	.LBB1176:
 6006              	.LBB698:
 6007              	.LBB668:
 762:src/keys.c    **** 	  }
 6008              		.loc 1 762 12 view .LVU1934
 767:src/keys.c    **** #ifdef DM42
 6009              		.loc 1 767 2 view .LVU1935
 6010 0498 2D2C     		cmp	r4, #45
 6011 049a 7DD8     		bhi	.L592
 6012 049c DFE804F0 		tbb	[pc, r4]
 6013              	.L809:
 6014 04a0 D5       		.byte	(.L815-.L809)/2
 6015 04a1 C9       		.byte	(.L814-.L809)/2
 6016 04a2 7C       		.byte	(.L592-.L809)/2
 6017 04a3 CF       		.byte	(.L813-.L809)/2
 6018 04a4 7C       		.byte	(.L592-.L809)/2
 6019 04a5 7C       		.byte	(.L592-.L809)/2
 6020 04a6 96       		.byte	(.L811-.L809)/2
 6021 04a7 96       		.byte	(.L811-.L809)/2
 6022 04a8 7C       		.byte	(.L592-.L809)/2
 6023 04a9 7C       		.byte	(.L592-.L809)/2
 6024 04aa 7C       		.byte	(.L592-.L809)/2
 6025 04ab 7C       		.byte	(.L592-.L809)/2
 6026 04ac 7C       		.byte	(.L592-.L809)/2
 6027 04ad 7C       		.byte	(.L592-.L809)/2
 6028 04ae 7C       		.byte	(.L592-.L809)/2
 6029 04af 7C       		.byte	(.L592-.L809)/2
 6030 04b0 BF       		.byte	(.L812-.L809)/2
 6031 04b1 7C       		.byte	(.L592-.L809)/2
 6032 04b2 96       		.byte	(.L811-.L809)/2
 6033 04b3 7C       		.byte	(.L592-.L809)/2
 6034 04b4 7C       		.byte	(.L592-.L809)/2
 6035 04b5 7C       		.byte	(.L592-.L809)/2
 6036 04b6 7C       		.byte	(.L592-.L809)/2
 6037 04b7 7C       		.byte	(.L592-.L809)/2
 6038 04b8 7C       		.byte	(.L592-.L809)/2
 6039 04b9 7C       		.byte	(.L592-.L809)/2
 6040 04ba 7C       		.byte	(.L592-.L809)/2
 6041 04bb 7C       		.byte	(.L592-.L809)/2
 6042 04bc 7C       		.byte	(.L592-.L809)/2
 6043 04bd 7C       		.byte	(.L592-.L809)/2
 6044 04be 7C       		.byte	(.L592-.L809)/2
 6045 04bf 7C       		.byte	(.L592-.L809)/2
 6046 04c0 7C       		.byte	(.L592-.L809)/2
 6047 04c1 7C       		.byte	(.L592-.L809)/2
 6048 04c2 7C       		.byte	(.L592-.L809)/2
 6049 04c3 7C       		.byte	(.L592-.L809)/2
 6050 04c4 7C       		.byte	(.L592-.L809)/2
ARM GAS  /tmp/ccizbp1a.s 			page 194


 6051 04c5 7C       		.byte	(.L592-.L809)/2
 6052 04c6 7C       		.byte	(.L592-.L809)/2
 6053 04c7 7C       		.byte	(.L592-.L809)/2
 6054 04c8 7C       		.byte	(.L592-.L809)/2
 6055 04c9 7C       		.byte	(.L592-.L809)/2
 6056 04ca 7C       		.byte	(.L592-.L809)/2
 6057 04cb 7C       		.byte	(.L592-.L809)/2
 6058 04cc A9       		.byte	(.L810-.L809)/2
 6059 04cd A2       		.byte	(.L808-.L809)/2
 6060              		.p2align 1
 6061              	.L1144:
 6062 04ce 00BF     		.align	2
 6063              	.L1143:
 6064 04d0 00000000 		.word	StateWhileOn
 6065 04d4 00080800 		.word	526336
 6066 04d8 00000000 		.word	main_ram
 6067 04dc 00000000 		.word	.LANCHOR11
 6068 04e0 00000000 		.word	.LANCHOR18
 6069 04e4 00000000 		.word	.LANCHOR22
 6070 04e8 00000000 		.word	ShowRPN
 6071 04ec 00000000 		.word	WasDataEntry
 6072 04f0 00000000 		.word	Running
 6073 04f4 00000000 		.word	TraceBuffer
 6074 04f8 00000000 		.word	DispMsg
 6075 04fc 00000000 		.word	.LANCHOR13
 6076 0500 00000000 		.word	NonProgrammable
 6077 0504 00000000 		.word	OpCode
 6078 0508 00000000 		.word	OpCodeDisplayPending
 6079 050c 00000000 		.word	JustDisplayed
 6080              	.LVL477:
 6081              	.L668:
 767:src/keys.c    **** #ifdef DM42
 6082              		.loc 1 767 2 is_stmt 0 view .LVU1936
 6083              	.LBE668:
 6084              	.LBE698:
2898:src/keys.c    **** 
 6085              		.loc 1 2898 3 is_stmt 1 view .LVU1937
 6086              	.LBB699:
 6087              	.LBI699:
2353:src/keys.c    **** 	enum shifts shift = reset_shift();
 6088              		.loc 1 2353 12 view .LVU1938
 6089              	.LBB700:
2354:src/keys.c    **** 	unsigned int ch = 0;
 6090              		.loc 1 2354 2 view .LVU1939
 6091              	.LBB701:
 6092              	.LBI701:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 6093              		.loc 1 102 13 view .LVU1940
 6094              	.LBE701:
 6095              	.LBE700:
 6096              	.LBE699:
 6097              	.LBE1176:
 6098              	.LBE1231:
 103:src/keys.c    **** }
 6099              		.loc 1 103 2 view .LVU1941
 6100              	.LBB1232:
 6101              	.LBB1177:
ARM GAS  /tmp/ccizbp1a.s 			page 195


 6102              	.LBB733:
 6103              	.LBB727:
 6104              	.LBB708:
 6105              	.LBB702:
 6106              	.LBI702:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 6107              		.loc 1 92 20 view .LVU1942
 6108              	.LBB703:
  93:src/keys.c    **** 	State2.shifts = shift;
 6109              		.loc 1 93 2 view .LVU1943
 6110              	.LBB704:
 6111              	.LBI704:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 6112              		.loc 1 84 13 view .LVU1944
 6113              	.LBB705:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 6114              		.loc 1 85 2 view .LVU1945
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 6115              		.loc 1 85 18 is_stmt 0 view .LVU1946
 6116 0510 FFF7FEFF 		bl	shift_down
 6117              	.LVL478:
  86:src/keys.c    **** }
 6118              		.loc 1 86 2 is_stmt 1 view .LVU1947
  86:src/keys.c    **** }
 6119              		.loc 1 86 52 is_stmt 0 view .LVU1948
 6120 0514 0146     		mov	r1, r0
 6121 0516 00B9     		cbnz	r0, .L666
 6122 0518 317C     		ldrb	r1, [r6, #16]	@ zero_extendqisi2
 6123              	.L666:
 6124              	.LVL479:
  86:src/keys.c    **** }
 6125              		.loc 1 86 52 view .LVU1949
 6126              	.LBE705:
 6127              	.LBE704:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 6128              		.loc 1 94 2 is_stmt 1 view .LVU1950
 6129              	.LBE703:
 6130              	.LBE702:
 6131              	.LBE708:
2358:src/keys.c    **** 		// Alpha catalogue from within multi character command
 6132              		.loc 1 2358 5 is_stmt 0 view .LVU1951
 6133 051a B27B     		ldrb	r2, [r6, #14]	@ zero_extendqisi2
 6134              	.LBB709:
 6135              	.LBB707:
 6136              	.LBB706:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 6137              		.loc 1 94 16 view .LVU1952
 6138 051c 0023     		movs	r3, #0
 6139 051e 3374     		strb	r3, [r6, #16]
  95:src/keys.c    **** 	return r;
 6140              		.loc 1 95 2 is_stmt 1 view .LVU1953
  95:src/keys.c    **** 	return r;
 6141              		.loc 1 95 19 is_stmt 0 view .LVU1954
 6142 0520 7373     		strb	r3, [r6, #13]
  96:src/keys.c    **** }
 6143              		.loc 1 96 2 is_stmt 1 view .LVU1955
 6144              	.LVL480:
ARM GAS  /tmp/ccizbp1a.s 			page 196


  96:src/keys.c    **** }
 6145              		.loc 1 96 2 is_stmt 0 view .LVU1956
 6146              	.LBE706:
 6147              	.LBE707:
 6148              	.LBE709:
2355:src/keys.c    **** 	unsigned int opcode;
 6149              		.loc 1 2355 2 is_stmt 1 view .LVU1957
2356:src/keys.c    **** 
 6150              		.loc 1 2356 2 view .LVU1958
2358:src/keys.c    **** 		// Alpha catalogue from within multi character command
 6151              		.loc 1 2358 2 view .LVU1959
2358:src/keys.c    **** 		// Alpha catalogue from within multi character command
 6152              		.loc 1 2358 5 is_stmt 0 view .LVU1960
 6153 0522 002A     		cmp	r2, #0
 6154 0524 40F04F87 		bne	.L1099
2367:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
 6155              		.loc 1 2367 2 is_stmt 1 view .LVU1961
 6156 0528 102C     		cmp	r4, #16
 6157 052a 01F0C180 		beq	.L671
 6158 052e 242C     		cmp	r4, #36
 6159 0530 01F0AE80 		beq	.L672
 6160 0534 0C2C     		cmp	r4, #12
 6161 0536 01F09280 		beq	.L1100
 6162              	.L673:
2400:src/keys.c    **** 	if (ch == 0)
 6163              		.loc 1 2400 2 view .LVU1962
 6164              	.LBB710:
 6165              	.LBB711:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 6166              		.loc 1 434 6 is_stmt 0 view .LVU1963
 6167 053a B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 6168              	.LVL481:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 6169              		.loc 1 434 6 view .LVU1964
 6170              	.LBE711:
 6171              	.LBI710:
 384:src/keys.c    **** {
 6172              		.loc 1 384 12 is_stmt 1 view .LVU1965
 6173              	.LBB716:
 386:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6174              		.loc 1 386 2 view .LVU1966
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 6175              		.loc 1 434 2 view .LVU1967
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 6176              		.loc 1 434 5 is_stmt 0 view .LVU1968
 6177 053c DA06     		lsls	r2, r3, #27
 6178 053e 03D5     		bpl	.L676
 435:src/keys.c    **** 			shift = SHIFT_LC_N;
 6179              		.loc 1 435 3 is_stmt 1 view .LVU1969
 435:src/keys.c    **** 			shift = SHIFT_LC_N;
 6180              		.loc 1 435 6 is_stmt 0 view .LVU1970
 6181 0540 0029     		cmp	r1, #0
 6182 0542 41F0A482 		bne	.L1101
 436:src/keys.c    **** 		else if (shift == SHIFT_G)
 6183              		.loc 1 436 10 view .LVU1971
 6184 0546 0421     		movs	r1, #4
 6185              	.LVL482:
ARM GAS  /tmp/ccizbp1a.s 			page 197


 6186              	.L676:
 440:src/keys.c    **** }
 6187              		.loc 1 440 2 is_stmt 1 view .LVU1972
 6188              	.LBB712:
 6189              	.LBI712:
 119:src/keys.c    **** {
 6190              		.loc 1 119 12 view .LVU1973
 6191              	.LBB713:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 6192              		.loc 1 121 2 view .LVU1974
 131:src/keys.c    **** }
 6193              		.loc 1 131 2 view .LVU1975
 131:src/keys.c    **** }
 6194              		.loc 1 131 23 is_stmt 0 view .LVU1976
 6195 0548 CA4B     		ldr	r3, .L1145
 6196              	.LBE713:
 6197              	.LBE712:
 440:src/keys.c    **** }
 6198              		.loc 1 440 49 view .LVU1977
 6199 054a CB4A     		ldr	r2, .L1145+4
 6200              	.LBB715:
 6201              	.LBB714:
 131:src/keys.c    **** }
 6202              		.loc 1 131 23 view .LVU1978
 6203 054c 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 6204              	.LBE714:
 6205              	.LBE715:
 440:src/keys.c    **** }
 6206              		.loc 1 440 49 view .LVU1979
 6207 054e 0620     		movs	r0, #6
 6208 0550 00FB0323 		mla	r3, r0, r3, r2
 6209              	.LBE716:
 6210              	.LBE710:
2400:src/keys.c    **** 	if (ch == 0)
 6211              		.loc 1 2400 5 view .LVU1980
 6212 0554 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 6213              	.LVL483:
2401:src/keys.c    **** 		return STATE_UNFINISHED;
 6214              		.loc 1 2401 2 is_stmt 1 view .LVU1981
2401:src/keys.c    **** 		return STATE_UNFINISHED;
 6215              		.loc 1 2401 5 is_stmt 0 view .LVU1982
 6216 0556 002B     		cmp	r3, #0
 6217 0558 41D0     		beq	.L1058
 6218              	.L670:
2404:src/keys.c    **** 		State2.digval = ch;
 6219              		.loc 1 2404 2 is_stmt 1 view .LVU1983
2404:src/keys.c    **** 		State2.digval = ch;
 6220              		.loc 1 2404 12 is_stmt 0 view .LVU1984
 6221 055a F27A     		ldrb	r2, [r6, #11]	@ zero_extendqisi2
2404:src/keys.c    **** 		State2.digval = ch;
 6222              		.loc 1 2404 5 view .LVU1985
 6223 055c 002A     		cmp	r2, #0
 6224 055e 01F0B780 		beq	.L1102
2408:src/keys.c    **** 		State2.digval2 = ch;
 6225              		.loc 1 2408 9 is_stmt 1 view .LVU1986
2408:src/keys.c    **** 		State2.digval2 = ch;
 6226              		.loc 1 2408 12 is_stmt 0 view .LVU1987
ARM GAS  /tmp/ccizbp1a.s 			page 198


 6227 0562 012A     		cmp	r2, #1
 6228 0564 01F0BB80 		beq	.L1103
2413:src/keys.c    **** 
 6229              		.loc 1 2413 2 is_stmt 1 view .LVU1988
 6230              	.LBB718:
 6231              	.LBI718:
2346:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 6232              		.loc 1 2346 13 view .LVU1989
 6233              	.LBB719:
2348:src/keys.c    **** 	if (! State2.alphas )
 6234              		.loc 1 2348 2 view .LVU1990
2348:src/keys.c    **** 	if (! State2.alphas )
 6235              		.loc 1 2348 15 is_stmt 0 view .LVU1991
 6236 0568 717D     		ldrb	r1, [r6, #21]	@ zero_extendqisi2
2349:src/keys.c    **** 		State2.alphashift = 0;
 6237              		.loc 1 2349 6 view .LVU1992
 6238 056a B27D     		ldrb	r2, [r6, #22]	@ zero_extendqisi2
2348:src/keys.c    **** 	if (! State2.alphas )
 6239              		.loc 1 2348 15 view .LVU1993
 6240 056c 6FF3C301 		bfc	r1, #3, #1
 6241 0570 7175     		strb	r1, [r6, #21]
2349:src/keys.c    **** 		State2.alphashift = 0;
 6242              		.loc 1 2349 2 is_stmt 1 view .LVU1994
2349:src/keys.c    **** 		State2.alphashift = 0;
 6243              		.loc 1 2349 5 is_stmt 0 view .LVU1995
 6244 0572 12F00801 		ands	r1, r2, #8
2350:src/keys.c    **** }
 6245              		.loc 1 2350 3 is_stmt 1 view .LVU1996
2350:src/keys.c    **** }
 6246              		.loc 1 2350 21 is_stmt 0 view .LVU1997
 6247 0576 04BF     		itt	eq
 6248 0578 61F30412 		bfieq	r2, r1, #4, #1
 6249 057c B275     		strbeq	r2, [r6, #22]
 6250              	.LVL484:
 6251              	.L675:
2350:src/keys.c    **** }
 6252              		.loc 1 2350 21 view .LVU1998
 6253              	.LBE719:
 6254              	.LBE718:
2416:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6255              		.loc 1 2416 2 is_stmt 1 view .LVU1999
2418:src/keys.c    **** }
 6256              		.loc 1 2418 2 view .LVU2000
2416:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6257              		.loc 1 2416 21 is_stmt 0 view .LVU2001
 6258 057e 96F81FB0 		ldrb	fp, [r6, #31]	@ zero_extendqisi2
2417:src/keys.c    **** 	return opcode;
 6259              		.loc 1 2417 17 view .LVU2002
 6260 0582 3189     		ldrh	r1, [r6, #8]
2417:src/keys.c    **** 	return opcode;
 6261              		.loc 1 2417 34 view .LVU2003
 6262 0584 B27A     		ldrb	r2, [r6, #10]	@ zero_extendqisi2
2416:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6263              		.loc 1 2416 29 view .LVU2004
 6264 0586 4FEA0B2B 		lsl	fp, fp, #8
2416:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6265              		.loc 1 2416 18 view .LVU2005
ARM GAS  /tmp/ccizbp1a.s 			page 199


 6266 058a 0BF5704B 		add	fp, fp, #61440
2417:src/keys.c    **** 	return opcode;
 6267              		.loc 1 2417 9 view .LVU2006
 6268 058e 8B44     		add	fp, fp, r1
2417:src/keys.c    **** 	return opcode;
 6269              		.loc 1 2417 25 view .LVU2007
 6270 0590 0BEB024B 		add	fp, fp, r2, lsl #16
2416:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6271              		.loc 1 2416 9 view .LVU2008
 6272 0594 0BEB036B 		add	fp, fp, r3, lsl #24
 6273              	.LVL485:
 6274              	.L592:
2416:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6275              		.loc 1 2416 9 view .LVU2009
 6276              	.LBE727:
 6277              	.LBE733:
 6278              	.LBE1177:
 6279              	.LBE1232:
3137:src/keys.c    ****     case STATE_SST:
 6280              		.loc 1 3137 5 is_stmt 1 view .LVU2010
 6281 0598 ABF12B03 		sub	r3, fp, #43
 6282 059c 082B     		cmp	r3, #8
 6283 059e 00F2CB80 		bhi	.L817
 6284 05a2 01A2     		adr	r2, .L818
 6285 05a4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6286              		.p2align 2
 6287              	.L818:
 6288 05a8 DD060000 		.word	.L823+1
 6289 05ac DD060000 		.word	.L823+1
 6290 05b0 39070000 		.word	.L817+1
 6291 05b4 25070000 		.word	.L753+1
 6292 05b8 0B070000 		.word	.L752+1
 6293 05bc F9060000 		.word	.L749+1
 6294 05c0 11010000 		.word	.L572+1
 6295 05c4 1D010000 		.word	.L563+1
 6296 05c8 1D010000 		.word	.L563+1
 6297              	.LVL486:
 6298              		.p2align 1
 6299              	.L811:
 6300              	.LBB1233:
 6301              	.LBB1178:
 6302              	.LBB734:
 6303              	.LBB669:
 829:src/keys.c    **** 		break;
 6304              		.loc 1 829 3 view .LVU2011
 6305              	.LBB666:
 6306              	.LBI666:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 6307              		.loc 1 501 13 view .LVU2012
 6308              	.LBB667:
 502:src/keys.c    **** 		return;
 6309              		.loc 1 502 2 view .LVU2013
 502:src/keys.c    **** 		return;
 6310              		.loc 1 502 6 is_stmt 0 view .LVU2014
 6311 05cc FFF7FEFF 		bl	is_bad_cmdline
 6312              	.LVL487:
 502:src/keys.c    **** 		return;
ARM GAS  /tmp/ccizbp1a.s 			page 200


 6313              		.loc 1 502 5 view .LVU2015
 6314 05d0 0446     		mov	r4, r0
 6315 05d2 20B9     		cbnz	r0, .L1058
 6316 05d4 5FFA8AF0 		uxtb	r0, r10
 6317 05d8 FFF7FEFF 		bl	init_arg.part.0
 6318              	.LVL488:
 6319              	.LBE667:
 6320              	.LBE666:
 6321              	.LBE669:
 6322              	.LBE734:
 6323              	.LBE1178:
 6324              	.LBE1233:
2952:src/keys.c    **** #ifdef DM42
 6325              		.loc 1 2952 7 view .LVU2016
 6326 05dc A046     		mov	r8, r4
 6327              	.LVL489:
 6328              	.L1058:
 6329              	.LBB1234:
 6330              	.LBB1179:
 6331              	.LBB735:
 6332              	.LBB736:
2753:src/keys.c    **** }
 6333              		.loc 1 2753 2 is_stmt 1 view .LVU2017
2753:src/keys.c    **** }
 6334              		.loc 1 2753 9 is_stmt 0 view .LVU2018
 6335 05de 4FF0330B 		mov	fp, #51
 6336 05e2 9BE5     		b	.L563
 6337              	.LVL490:
 6338              	.L808:
2753:src/keys.c    **** }
 6339              		.loc 1 2753 9 view .LVU2019
 6340              	.LBE736:
 6341              	.LBE735:
 6342              	.LBB768:
 6343              	.LBB670:
 816:src/keys.c    **** 		break;
 6344              		.loc 1 816 3 is_stmt 1 view .LVU2020
 816:src/keys.c    **** 		break;
 6345              		.loc 1 816 16 is_stmt 0 view .LVU2021
 6346 05e4 737D     		ldrb	r3, [r6, #21]	@ zero_extendqisi2
 6347 05e6 43F00203 		orr	r3, r3, #2
 6348 05ea 7375     		strb	r3, [r6, #21]
 817:src/keys.c    **** 
 6349              		.loc 1 817 3 is_stmt 1 view .LVU2022
 835:src/keys.c    **** }
 6350              		.loc 1 835 9 is_stmt 0 view .LVU2023
 6351 05ec 4FF0330B 		mov	fp, #51
 817:src/keys.c    **** 
 6352              		.loc 1 817 3 view .LVU2024
 6353 05f0 94E5     		b	.L563
 6354              	.L810:
 798:src/keys.c    **** 			return STATE_UNFINISHED;
 6355              		.loc 1 798 3 is_stmt 1 view .LVU2025
 798:src/keys.c    **** 			return STATE_UNFINISHED;
 6356              		.loc 1 798 7 is_stmt 0 view .LVU2026
 6357 05f2 FFF7FEFF 		bl	is_bad_cmdline
 6358              	.LVL491:
ARM GAS  /tmp/ccizbp1a.s 			page 201


 798:src/keys.c    **** 			return STATE_UNFINISHED;
 6359              		.loc 1 798 6 view .LVU2027
 6360 05f6 0446     		mov	r4, r0
 6361 05f8 0028     		cmp	r0, #0
 6362 05fa F0D1     		bne	.L1058
 800:src/keys.c    **** 		State2.arrow = 1;
 6363              		.loc 1 800 3 is_stmt 1 view .LVU2028
 6364 05fc FFF7FEFF 		bl	process_cmdline_set_lift
 6365              	.LVL492:
 801:src/keys.c    **** #ifdef DM42
 6366              		.loc 1 801 3 view .LVU2029
 801:src/keys.c    **** #ifdef DM42
 6367              		.loc 1 801 16 is_stmt 0 view .LVU2030
 6368 0600 737D     		ldrb	r3, [r6, #21]	@ zero_extendqisi2
 6369 0602 43F00403 		orr	r3, r3, #4
 803:src/keys.c    **** 		display_current_menu ();
 6370              		.loc 1 803 3 view .LVU2031
 6371 0606 0920     		movs	r0, #9
 801:src/keys.c    **** #ifdef DM42
 6372              		.loc 1 801 16 view .LVU2032
 6373 0608 7375     		strb	r3, [r6, #21]
 803:src/keys.c    **** 		display_current_menu ();
 6374              		.loc 1 803 3 is_stmt 1 view .LVU2033
 6375 060a FFF7FEFF 		bl	set_menu
 6376              	.LVL493:
 804:src/keys.c    **** 		lcd_refresh ();
 6377              		.loc 1 804 3 view .LVU2034
 6378 060e FFF7FEFF 		bl	display_current_menu
 6379              	.LVL494:
 805:src/keys.c    **** #else
 6380              		.loc 1 805 3 view .LVU2035
 6381 0612 9A4B     		ldr	r3, .L1145+8
 6382 0614 9847     		blx	r3
 6383              	.LVL495:
 809:src/keys.c    **** 
 6384              		.loc 1 809 3 view .LVU2036
 6385              	.LBE670:
 6386              	.LBE768:
 6387              	.LBE1179:
 6388              	.LBE1234:
2952:src/keys.c    **** #ifdef DM42
 6389              		.loc 1 2952 7 is_stmt 0 view .LVU2037
 6390 0616 A046     		mov	r8, r4
 6391              	.LBB1235:
 6392              	.LBB1180:
 6393              	.LBB769:
 6394              	.LBB671:
 835:src/keys.c    **** }
 6395              		.loc 1 835 9 view .LVU2038
 6396 0618 4FF0330B 		mov	fp, #51
 809:src/keys.c    **** 
 6397              		.loc 1 809 3 view .LVU2039
 6398 061c 7EE5     		b	.L563
 6399              	.L812:
 820:src/keys.c    **** 			return STATE_UNFINISHED;
 6400              		.loc 1 820 3 is_stmt 1 view .LVU2040
 820:src/keys.c    **** 			return STATE_UNFINISHED;
ARM GAS  /tmp/ccizbp1a.s 			page 202


 6401              		.loc 1 820 6 is_stmt 0 view .LVU2041
 6402 061e 8A06     		lsls	r2, r1, #26
 6403 0620 DDD4     		bmi	.L1058
 822:src/keys.c    **** 			return op;
 6404              		.loc 1 822 3 is_stmt 1 view .LVU2042
 822:src/keys.c    **** 			return op;
 6405              		.loc 1 822 6 is_stmt 0 view .LVU2043
 6406 0622 5B06     		lsls	r3, r3, #25
 6407 0624 00F19C80 		bmi	.L816
 6408              	.LVL496:
 6409              	.L824:
 822:src/keys.c    **** 			return op;
 6410              		.loc 1 822 6 view .LVU2044
 6411              	.LBE671:
 6412              	.LBE769:
 6413              	.LBE1180:
 6414              	.LBE1235:
3150:src/keys.c    ****       else if (State2.alphas) {
 6415              		.loc 1 3150 2 is_stmt 1 view .LVU2045
 6416 0628 FFF7FEFF 		bl	delprog
 6417              	.LVL497:
 6418 062c 4FF0300B 		mov	fp, #48
 6419 0630 74E5     		b	.L563
 6420              	.LVL498:
 6421              	.L814:
 6422              	.LBB1236:
 6423              	.LBB1181:
 6424              	.LBB770:
 6425              	.LBB672:
 772:src/keys.c    **** 	case K03:
 6426              		.loc 1 772 3 view .LVU2046
 772:src/keys.c    **** 	case K03:
 6427              		.loc 1 772 10 is_stmt 0 view .LVU2047
 6428 0632 5146     		mov	r1, r10
 6429 0634 0120     		movs	r0, #1
 6430 0636 FFF7FEFF 		bl	check_f_key
 6431              	.LVL499:
 6432 063a 8346     		mov	fp, r0
 6433 063c ACE7     		b	.L592
 6434              	.L813:
 774:src/keys.c    **** #else
 6435              		.loc 1 774 3 is_stmt 1 view .LVU2048
 774:src/keys.c    **** #else
 6436              		.loc 1 774 10 is_stmt 0 view .LVU2049
 6437 063e 5146     		mov	r1, r10
 6438 0640 0220     		movs	r0, #2
 6439 0642 FFF7FEFF 		bl	check_f_key
 6440              	.LVL500:
 6441 0646 8346     		mov	fp, r0
 6442 0648 A6E7     		b	.L592
 6443              	.L815:
 770:src/keys.c    **** 	case K01:
 6444              		.loc 1 770 3 is_stmt 1 view .LVU2050
 770:src/keys.c    **** 	case K01:
 6445              		.loc 1 770 10 is_stmt 0 view .LVU2051
 6446 064a 5146     		mov	r1, r10
 6447 064c 0020     		movs	r0, #0
ARM GAS  /tmp/ccizbp1a.s 			page 203


 6448 064e FFF7FEFF 		bl	check_f_key
 6449              	.LVL501:
 6450 0652 8346     		mov	fp, r0
 6451 0654 A0E7     		b	.L592
 6452              	.L799:
 755:src/keys.c    **** 	    if (intltr(15)) {
 6453              		.loc 1 755 6 is_stmt 1 view .LVU2052
 6454              	.LVL502:
 756:src/keys.c    **** 	      return op_int;
 6455              		.loc 1 756 6 view .LVU2053
 756:src/keys.c    **** 	      return op_int;
 6456              		.loc 1 756 10 is_stmt 0 view .LVU2054
 6457 0656 0F20     		movs	r0, #15
 6458 0658 FFF7FEFF 		bl	intltr
 6459              	.LVL503:
 756:src/keys.c    **** 	      return op_int;
 6460              		.loc 1 756 9 view .LVU2055
 6461 065c 0028     		cmp	r0, #0
 6462 065e 41F0B180 		bne	.L807
 760:src/keys.c    **** 	    }
 6463              		.loc 1 760 8 is_stmt 1 view .LVU2056
 760:src/keys.c    **** 	    }
 6464              		.loc 1 760 15 is_stmt 0 view .LVU2057
 6465 0662 5146     		mov	r1, r10
 6466 0664 0520     		movs	r0, #5
 6467 0666 FFF7FEFF 		bl	check_f_key
 6468              	.LVL504:
 6469 066a 8346     		mov	fp, r0
 6470 066c 94E7     		b	.L592
 6471              	.LVL505:
 6472              	.L801:
 747:src/keys.c    **** 	    if (intltr(12)) {
 6473              		.loc 1 747 6 is_stmt 1 view .LVU2058
 748:src/keys.c    **** 	      return op_int;
 6474              		.loc 1 748 6 view .LVU2059
 748:src/keys.c    **** 	      return op_int;
 6475              		.loc 1 748 10 is_stmt 0 view .LVU2060
 6476 066e 0C20     		movs	r0, #12
 6477 0670 FFF7FEFF 		bl	intltr
 6478              	.LVL506:
 748:src/keys.c    **** 	      return op_int;
 6479              		.loc 1 748 9 view .LVU2061
 6480 0674 0028     		cmp	r0, #0
 6481 0676 E2D0     		beq	.L813
 6482              	.LVL507:
 748:src/keys.c    **** 	      return op_int;
 6483              		.loc 1 748 9 view .LVU2062
 6484              	.LBE672:
 6485              	.LBE770:
 6486              	.LBE1181:
 6487              	.LBE1236:
3173:src/keys.c    **** 	NonProgrammable = 0;
 6488              		.loc 1 3173 7 is_stmt 1 view .LVU2063
3173:src/keys.c    **** 	NonProgrammable = 0;
 6489              		.loc 1 3173 11 is_stmt 0 view .LVU2064
 6490 0678 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
3173:src/keys.c    **** 	NonProgrammable = 0;
ARM GAS  /tmp/ccizbp1a.s 			page 204


 6491              		.loc 1 3173 10 view .LVU2065
 6492 067a 5806     		lsls	r0, r3, #25
 6493 067c 41F11782 		bpl	.L881
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6494              		.loc 1 3174 2 is_stmt 1 view .LVU2066
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6495              		.loc 1 3174 18 is_stmt 0 view .LVU2067
 6496 0680 7F4B     		ldr	r3, .L1145+12
 6497 0682 0022     		movs	r2, #0
 6498              	.LBB1237:
 6499              	.LBB1182:
 6500              	.LBB771:
 6501              	.LBB673:
 749:src/keys.c    **** 	    }
 6502              		.loc 1 749 15 view .LVU2068
 6503 0684 4FF0110B 		mov	fp, #17
 6504              	.LBE673:
 6505              	.LBE771:
 6506              	.LBE1182:
 6507              	.LBE1237:
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6508              		.loc 1 3174 18 view .LVU2069
 6509 0688 1A60     		str	r2, [r3]
3175:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6510              		.loc 1 3175 2 is_stmt 1 view .LVU2070
3175:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6511              		.loc 1 3175 32 is_stmt 0 view .LVU2071
 6512 068a 5846     		mov	r0, fp
 6513              	.LVL508:
 6514              	.L830:
3179:src/keys.c    **** #endif
 6515              		.loc 1 3179 6 is_stmt 1 view .LVU2072
3181:src/keys.c    **** 	    xeq(c);
 6516              		.loc 1 3181 37 is_stmt 0 view .LVU2073
 6517 068c 96F81C80 		ldrb	r8, [r6, #28]	@ zero_extendqisi2
3179:src/keys.c    **** #endif
 6518              		.loc 1 3179 19 view .LVU2074
 6519 0690 0123     		movs	r3, #1
 6520 0692 C9F80030 		str	r3, [r9]
3181:src/keys.c    **** 	    xeq(c);
 6521              		.loc 1 3181 6 is_stmt 1 view .LVU2075
3181:src/keys.c    **** 	    xeq(c);
 6522              		.loc 1 3181 37 is_stmt 0 view .LVU2076
 6523 0696 B8FA88F8 		clz	r8, r8
3182:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 6524              		.loc 1 3182 6 view .LVU2077
 6525 069a FFF7FEFF 		bl	xeq
 6526              	.LVL509:
3183:src/keys.c    **** 	  }
 6527              		.loc 1 3183 38 view .LVU2078
 6528 069e 337F     		ldrb	r3, [r6, #28]	@ zero_extendqisi2
3181:src/keys.c    **** 	    xeq(c);
 6529              		.loc 1 3181 37 view .LVU2079
 6530 06a0 4FEA5818 		lsr	r8, r8, #5
 6531              	.LVL510:
3182:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 6532              		.loc 1 3182 6 is_stmt 1 view .LVU2080
ARM GAS  /tmp/ccizbp1a.s 			page 205


3183:src/keys.c    **** 	  }
 6533              		.loc 1 3183 6 view .LVU2081
3183:src/keys.c    **** 	  }
 6534              		.loc 1 3183 20 is_stmt 0 view .LVU2082
 6535 06a4 002B     		cmp	r3, #0
 6536 06a6 08BF     		it	eq
 6537 06a8 4FF00108 		moveq	r8, #1
 6538              	.LVL511:
3183:src/keys.c    **** 	  }
 6539              		.loc 1 3183 20 view .LVU2083
 6540 06ac 36E5     		b	.L563
 6541              	.LVL512:
 6542              	.L802:
 6543              	.LBB1238:
 6544              	.LBB1183:
 6545              	.LBB772:
 6546              	.LBB674:
 739:src/keys.c    **** 	    if (intltr(11)) {
 6547              		.loc 1 739 6 is_stmt 1 view .LVU2084
 740:src/keys.c    **** 	      return op;
 6548              		.loc 1 740 6 view .LVU2085
 740:src/keys.c    **** 	      return op;
 6549              		.loc 1 740 10 is_stmt 0 view .LVU2086
 6550 06ae 0B20     		movs	r0, #11
 6551 06b0 FFF7FEFF 		bl	intltr
 6552              	.LVL513:
 740:src/keys.c    **** 	      return op;
 6553              		.loc 1 740 9 view .LVU2087
 6554 06b4 0028     		cmp	r0, #0
 6555 06b6 41F05980 		bne	.L805
 744:src/keys.c    **** 	    }
 6556              		.loc 1 744 8 is_stmt 1 view .LVU2088
 744:src/keys.c    **** 	    }
 6557              		.loc 1 744 15 is_stmt 0 view .LVU2089
 6558 06ba 1021     		movs	r1, #16
 6559 06bc 0120     		movs	r0, #1
 6560 06be FFF7FEFF 		bl	check_f_key
 6561              	.LVL514:
 6562 06c2 8346     		mov	fp, r0
 6563 06c4 68E7     		b	.L592
 6564              	.LVL515:
 6565              	.L803:
 731:src/keys.c    **** 	    if (intltr(10)) {
 6566              		.loc 1 731 6 is_stmt 1 view .LVU2090
 732:src/keys.c    **** 	      return op;
 6567              		.loc 1 732 6 view .LVU2091
 732:src/keys.c    **** 	      return op;
 6568              		.loc 1 732 10 is_stmt 0 view .LVU2092
 6569 06c6 0A20     		movs	r0, #10
 6570 06c8 FFF7FEFF 		bl	intltr
 6571              	.LVL516:
 732:src/keys.c    **** 	      return op;
 6572              		.loc 1 732 9 view .LVU2093
 6573 06cc 0028     		cmp	r0, #0
 6574 06ce 41F04180 		bne	.L804
 736:src/keys.c    **** 	    }
 6575              		.loc 1 736 8 is_stmt 1 view .LVU2094
ARM GAS  /tmp/ccizbp1a.s 			page 206


 736:src/keys.c    **** 	    }
 6576              		.loc 1 736 15 is_stmt 0 view .LVU2095
 6577 06d2 0F21     		movs	r1, #15
 6578 06d4 FFF7FEFF 		bl	check_f_key
 6579              	.LVL517:
 6580 06d8 8346     		mov	fp, r0
 6581 06da 5DE7     		b	.L592
 6582              	.LVL518:
 6583              	.L823:
 736:src/keys.c    **** 	    }
 6584              		.loc 1 736 15 view .LVU2096
 6585              	.LBE674:
 6586              	.LBE772:
 6587              	.LBE1183:
 6588              	.LBE1238:
3164:src/keys.c    **** 	set_window(c);
 6589              		.loc 1 3164 7 is_stmt 1 view .LVU2097
3164:src/keys.c    **** 	set_window(c);
 6590              		.loc 1 3164 12 is_stmt 0 view .LVU2098
 6591 06dc FFF7FEFF 		bl	is_bad_cmdline
 6592              	.LVL519:
3164:src/keys.c    **** 	set_window(c);
 6593              		.loc 1 3164 10 view .LVU2099
 6594 06e0 0346     		mov	r3, r0
 6595 06e2 0028     		cmp	r0, #0
 6596 06e4 7FF41AAD 		bne	.L563
3165:src/keys.c    ****       break;
 6597              		.loc 1 3165 2 is_stmt 1 view .LVU2100
 6598 06e8 5846     		mov	r0, fp
2952:src/keys.c    **** #ifdef DM42
 6599              		.loc 1 2952 7 is_stmt 0 view .LVU2101
 6600 06ea 9846     		mov	r8, r3
3165:src/keys.c    ****       break;
 6601              		.loc 1 3165 2 view .LVU2102
 6602 06ec FFF7FEFF 		bl	set_window
 6603              	.LVL520:
 6604 06f0 14E5     		b	.L563
 6605              	.LVL521:
 6606              	.L743:
 6607              	.LBB1239:
 6608              	.LBB1184:
 6609              	.LBB773:
 6610              	.LBB774:
1427:src/keys.c    **** 			return STATE_BACKSPACE;
 6611              		.loc 1 1427 3 is_stmt 1 view .LVU2103
1427:src/keys.c    **** 			return STATE_BACKSPACE;
 6612              		.loc 1 1427 6 is_stmt 0 view .LVU2104
 6613 06f2 0028     		cmp	r0, #0
 6614 06f4 41F06181 		bne	.L750
 6615              	.LVL522:
 6616              	.L749:
1427:src/keys.c    **** 			return STATE_BACKSPACE;
 6617              		.loc 1 1427 6 view .LVU2105
 6618              	.LBE774:
 6619              	.LBE773:
 6620              	.LBE1184:
 6621              	.LBE1239:
ARM GAS  /tmp/ccizbp1a.s 			page 207


3149:src/keys.c    **** 	delprog();
 6622              		.loc 1 3149 7 is_stmt 1 view .LVU2106
3149:src/keys.c    **** 	delprog();
 6623              		.loc 1 3149 11 is_stmt 0 view .LVU2107
 6624 06f8 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
3149:src/keys.c    **** 	delprog();
 6625              		.loc 1 3149 10 view .LVU2108
 6626 06fa 5C06     		lsls	r4, r3, #25
 6627 06fc 94D5     		bpl	.L824
3151:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 6628              		.loc 1 3151 12 is_stmt 1 view .LVU2109
3151:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 6629              		.loc 1 3151 15 is_stmt 0 view .LVU2110
 6630 06fe 1807     		lsls	r0, r3, #28
 6631 0700 00F1F980 		bmi	.L825
 6632              	.L1053:
 6633              	.LBB1240:
3154:src/keys.c    ****       }
 6634              		.loc 1 3154 9 view .LVU2111
 6635 0704 4FF0300B 		mov	fp, #48
 6636 0708 08E5     		b	.L563
 6637              	.L752:
 6638              	.LBE1240:
3145:src/keys.c    ****       break;
 6639              		.loc 1 3145 7 is_stmt 1 view .LVU2112
 6640 070a 4FF0FF30 		mov	r0, #-1
 6641 070e FFF7FEFF 		bl	xeq_sst_bst
 6642              	.LVL523:
3146:src/keys.c    **** 
 6643              		.loc 1 3146 7 view .LVU2113
 6644 0712 4FF02F0B 		mov	fp, #47
 6645 0716 01E5     		b	.L563
 6646              	.LVL524:
 6647              	.L741:
 6648              	.LBB1241:
 6649              	.LBB1185:
 6650              	.LBB831:
 6651              	.LBB817:
1446:src/keys.c    **** 			if ( State2.runmode ) {
 6652              		.loc 1 1446 3 view .LVU2114
1446:src/keys.c    **** 			if ( State2.runmode ) {
 6653              		.loc 1 1446 6 is_stmt 0 view .LVU2115
 6654 0718 0028     		cmp	r0, #0
 6655 071a 40F06585 		bne	.L737
1447:src/keys.c    **** 				// Alpha scroll right
 6656              		.loc 1 1447 4 is_stmt 1 view .LVU2116
1447:src/keys.c    **** 				// Alpha scroll right
 6657              		.loc 1 1447 7 is_stmt 0 view .LVU2117
 6658 071e 5E06     		lsls	r6, r3, #25
 6659 0720 3FF55DAF 		bmi	.L1058
 6660              	.LVL525:
 6661              	.L753:
1447:src/keys.c    **** 				// Alpha scroll right
 6662              		.loc 1 1447 7 view .LVU2118
 6663              	.LBE817:
 6664              	.LBE831:
 6665              	.LBE1185:
ARM GAS  /tmp/ccizbp1a.s 			page 208


 6666              	.LBE1241:
3139:src/keys.c    ****       OpCodeDisplayPending = 0;
 6667              		.loc 1 3139 7 is_stmt 1 view .LVU2119
3139:src/keys.c    ****       OpCodeDisplayPending = 0;
 6668              		.loc 1 3139 14 is_stmt 0 view .LVU2120
 6669 0724 5749     		ldr	r1, .L1145+16
3140:src/keys.c    ****       xeq_sst_bst(0);
 6670              		.loc 1 3140 28 view .LVU2121
 6671 0726 584A     		ldr	r2, .L1145+20
3139:src/keys.c    ****       OpCodeDisplayPending = 0;
 6672              		.loc 1 3139 14 view .LVU2122
 6673 0728 2E23     		movs	r3, #46
3140:src/keys.c    ****       xeq_sst_bst(0);
 6674              		.loc 1 3140 28 view .LVU2123
 6675 072a 0020     		movs	r0, #0
3139:src/keys.c    ****       OpCodeDisplayPending = 0;
 6676              		.loc 1 3139 14 view .LVU2124
 6677 072c 0B60     		str	r3, [r1]
3140:src/keys.c    ****       xeq_sst_bst(0);
 6678              		.loc 1 3140 7 is_stmt 1 view .LVU2125
3142:src/keys.c    **** 
 6679              		.loc 1 3142 7 is_stmt 0 view .LVU2126
 6680 072e 9B46     		mov	fp, r3
3140:src/keys.c    ****       xeq_sst_bst(0);
 6681              		.loc 1 3140 28 view .LVU2127
 6682 0730 1060     		str	r0, [r2]
3141:src/keys.c    ****       break;
 6683              		.loc 1 3141 7 is_stmt 1 view .LVU2128
 6684 0732 FFF7FEFF 		bl	xeq_sst_bst
 6685              	.LVL526:
3142:src/keys.c    **** 
 6686              		.loc 1 3142 7 view .LVU2129
 6687 0736 F1E4     		b	.L563
 6688              	.LVL527:
 6689              	.L817:
3173:src/keys.c    **** 	NonProgrammable = 0;
 6690              		.loc 1 3173 7 view .LVU2130
3173:src/keys.c    **** 	NonProgrammable = 0;
 6691              		.loc 1 3173 11 is_stmt 0 view .LVU2131
 6692 0738 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
3173:src/keys.c    **** 	NonProgrammable = 0;
 6693              		.loc 1 3173 10 view .LVU2132
 6694 073a 5C06     		lsls	r4, r3, #25
 6695 073c 44D5     		bpl	.L831
 6696 073e 504A     		ldr	r2, .L1145+12
 6697 0740 5846     		mov	r0, fp
 6698              	.LVL528:
 6699              	.L832:
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6700              		.loc 1 3174 2 is_stmt 1 view .LVU2133
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6701              		.loc 1 3174 18 is_stmt 0 view .LVU2134
 6702 0742 0023     		movs	r3, #0
3175:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6703              		.loc 1 3175 5 view .LVU2135
 6704 0744 1428     		cmp	r0, #20
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
ARM GAS  /tmp/ccizbp1a.s 			page 209


 6705              		.loc 1 3174 18 view .LVU2136
 6706 0746 1360     		str	r3, [r2]
3175:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6707              		.loc 1 3175 2 is_stmt 1 view .LVU2137
3175:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6708              		.loc 1 3175 5 is_stmt 0 view .LVU2138
 6709 0748 3FF69DAE 		bhi	.L828
3176:src/keys.c    **** 	    // Data entry key
 6710              		.loc 1 3176 4 is_stmt 1 view .LVU2139
3176:src/keys.c    **** 	    // Data entry key
 6711              		.loc 1 3176 7 is_stmt 0 view .LVU2140
 6712 074c BBF1000F 		cmp	fp, #0
 6713 0750 9CD1     		bne	.L830
3176:src/keys.c    **** 	    // Data entry key
 6714              		.loc 1 3176 38 discriminator 1 view .LVU2141
 6715 0752 FFF7FEFF 		bl	is_bad_cmdline
 6716              	.LVL529:
3176:src/keys.c    **** 	    // Data entry key
 6717              		.loc 1 3176 34 discriminator 1 view .LVU2142
 6718 0756 0028     		cmp	r0, #0
 6719 0758 40F05481 		bne	.L886
3175:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6720              		.loc 1 3175 32 view .LVU2143
 6721 075c 5846     		mov	r0, fp
 6722 075e 95E7     		b	.L830
 6723              	.LVL530:
 6724              	.L816:
3137:src/keys.c    ****     case STATE_SST:
 6725              		.loc 1 3137 5 is_stmt 1 view .LVU2144
 6726 0760 AAF12B03 		sub	r3, r10, #43
 6727 0764 082B     		cmp	r3, #8
 6728 0766 15D8     		bhi	.L844
 6729 0768 01A2     		adr	r2, .L845
 6730 076a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6731 076e 00BF     		.p2align 2
 6732              	.L845:
 6733 0770 DD060000 		.word	.L823+1
 6734 0774 DD060000 		.word	.L823+1
 6735 0778 95070000 		.word	.L844+1
 6736 077c 25070000 		.word	.L753+1
 6737 0780 0B070000 		.word	.L752+1
 6738 0784 F9060000 		.word	.L749+1
 6739 0788 11010000 		.word	.L572+1
 6740 078c 1D010000 		.word	.L563+1
 6741 0790 1D010000 		.word	.L563+1
 6742              		.p2align 1
 6743              	.L844:
 6744 0794 3A4A     		ldr	r2, .L1145+12
 6745 0796 5046     		mov	r0, r10
 6746 0798 D3E7     		b	.L832
 6747              	.LVL531:
 6748              	.L1076:
 6749              	.LBB1242:
 6750              	.LBB1186:
2829:src/keys.c    **** #else	
 6751              		.loc 1 2829 26 is_stmt 0 view .LVU2145
 6752 079a FFF7FEFF 		bl	keyticks
ARM GAS  /tmp/ccizbp1a.s 			page 210


 6753              	.LVL532:
2829:src/keys.c    **** #else	
 6754              		.loc 1 2829 23 view .LVU2146
 6755 079e 1E28     		cmp	r0, #30
2833:src/keys.c    **** 	// print_debug (1, c);
 6756              		.loc 1 2833 3 is_stmt 1 view .LVU2147
2833:src/keys.c    **** 	// print_debug (1, c);
 6757              		.loc 1 2833 17 is_stmt 0 view .LVU2148
 6758 07a0 C4BF     		itt	gt
 6759 07a2 0023     		movgt	r3, #0
 6760 07a4 3377     		strbgt	r3, [r6, #28]
 6761 07a6 7CE5     		b	.L579
 6762              	.LVL533:
 6763              	.L541:
2833:src/keys.c    **** 	// print_debug (1, c);
 6764              		.loc 1 2833 17 view .LVU2149
 6765              	.LBE1186:
 6766              	.LBE1242:
3003:src/keys.c    **** #else
 6767              		.loc 1 3003 10 is_stmt 1 view .LVU2150
3003:src/keys.c    **** #else
 6768              		.loc 1 3003 14 is_stmt 0 view .LVU2151
 6769 07a8 FFF7FEFF 		bl	keyticks
 6770              	.LVL534:
3003:src/keys.c    **** #else
 6771              		.loc 1 3003 13 view .LVU2152
 6772 07ac 0C28     		cmp	r0, #12
 6773 07ae 7FF701AD 		ble	.L540
3011:src/keys.c    **** 	  message("NULL", CNULL);
 6774              		.loc 1 3011 4 is_stmt 1 view .LVU2153
3012:src/keys.c    **** 	  // Force display update on key-up
 6775              		.loc 1 3012 4 is_stmt 0 view .LVU2154
 6776 07b2 3648     		ldr	r0, .L1145+24
3011:src/keys.c    **** 	  message("NULL", CNULL);
 6777              		.loc 1 3011 11 view .LVU2155
 6778 07b4 3760     		str	r7, [r6]
3012:src/keys.c    **** 	  // Force display update on key-up
 6779              		.loc 1 3012 4 is_stmt 1 view .LVU2156
 6780 07b6 3946     		mov	r1, r7
 6781 07b8 FFF7FEFF 		bl	message
 6782              	.LVL535:
3014:src/keys.c    **** 	}
 6783              		.loc 1 3014 4 view .LVU2157
3014:src/keys.c    **** 	}
 6784              		.loc 1 3014 21 is_stmt 0 view .LVU2158
 6785 07bc 344B     		ldr	r3, .L1145+28
 6786 07be DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 6787 07c0 67F34512 		bfi	r2, r7, #5, #1
 6788 07c4 DA75     		strb	r2, [r3, #23]
 6789 07c6 F5E4     		b	.L540
 6790              	.LVL536:
 6791              	.L831:
3173:src/keys.c    **** 	NonProgrammable = 0;
 6792              		.loc 1 3173 26 view .LVU2159
 6793 07c8 2D4A     		ldr	r2, .L1145+12
 6794 07ca 1368     		ldr	r3, [r2]
 6795 07cc 5846     		mov	r0, fp
ARM GAS  /tmp/ccizbp1a.s 			page 211


 6796 07ce 002B     		cmp	r3, #0
 6797 07d0 B7D1     		bne	.L832
 6798              	.LVL537:
 6799              	.L833:
3195:src/keys.c    ****       }
 6800              		.loc 1 3195 2 is_stmt 1 view .LVU2160
 6801 07d2 FFF7FEFF 		bl	stoprog
 6802              	.LVL538:
 6803 07d6 A1E4     		b	.L563
 6804              	.LVL539:
 6805              	.L565:
3115:src/keys.c    **** 	}
 6806              		.loc 1 3115 4 view .LVU2161
 6807              		.loc 1 3218 1 is_stmt 0 view .LVU2162
 6808 07d8 03B0     		add	sp, sp, #12
 6809              		.cfi_remember_state
 6810              		.cfi_def_cfa_offset 36
 6811              		@ sp needed
 6812 07da BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6813              		.cfi_restore 14
 6814              		.cfi_restore 11
 6815              		.cfi_restore 10
 6816              		.cfi_restore 9
 6817              		.cfi_restore 8
 6818              		.cfi_restore 7
 6819              		.cfi_restore 6
 6820              		.cfi_restore 5
 6821              		.cfi_restore 4
 6822              		.cfi_def_cfa_offset 0
3115:src/keys.c    **** 	}
 6823              		.loc 1 3115 4 view .LVU2163
 6824 07de FFF7FEBF 		b	finish_RPN
 6825              	.LVL540:
 6826              	.L1077:
 6827              		.cfi_restore_state
 6828              	.LBB1243:
 6829              	.LBB1187:
2840:src/keys.c    **** 
 6830              		.loc 1 2840 3 is_stmt 1 view .LVU2164
 6831              	.LBB832:
 6832              	.LBI832:
2424:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
 6833              		.loc 1 2424 12 view .LVU2165
 6834              	.LBB833:
2426:src/keys.c    **** #ifdef DM42
 6835              		.loc 1 2426 2 view .LVU2166
 6836 07e2 E4B2     		uxtb	r4, r4
 6837              	.LVL541:
2426:src/keys.c    **** #ifdef DM42
 6838              		.loc 1 2426 2 is_stmt 0 view .LVU2167
 6839 07e4 0E3C     		subs	r4, r4, #14
 6840 07e6 192C     		cmp	r4, #25
 6841 07e8 3FF6F9AE 		bhi	.L1058
 6842 07ec 01A3     		adr	r3, .L584
 6843 07ee 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 6844 07f2 00BF     		.p2align 2
 6845              	.L584:
ARM GAS  /tmp/ccizbp1a.s 			page 212


 6846 07f4 61080000 		.word	.L585+1
 6847 07f8 DF050000 		.word	.L1058+1
 6848 07fc 61080000 		.word	.L585+1
 6849 0800 DF050000 		.word	.L1058+1
 6850 0804 DF050000 		.word	.L1058+1
 6851 0808 DF050000 		.word	.L1058+1
 6852 080c DF050000 		.word	.L1058+1
 6853 0810 DF050000 		.word	.L1058+1
 6854 0814 DF050000 		.word	.L1058+1
 6855 0818 DF050000 		.word	.L1058+1
 6856 081c DF050000 		.word	.L1058+1
 6857 0820 DF050000 		.word	.L1058+1
 6858 0824 DF050000 		.word	.L1058+1
 6859 0828 DF050000 		.word	.L1058+1
 6860 082c DF050000 		.word	.L1058+1
 6861 0830 DF050000 		.word	.L1058+1
 6862 0834 DF050000 		.word	.L1058+1
 6863 0838 DF050000 		.word	.L1058+1
 6864 083c 95080000 		.word	.L583+1
 6865 0840 DF050000 		.word	.L1058+1
 6866 0844 DF050000 		.word	.L1058+1
 6867 0848 DF050000 		.word	.L1058+1
 6868 084c DF050000 		.word	.L1058+1
 6869 0850 DF050000 		.word	.L1058+1
 6870 0854 DF050000 		.word	.L1058+1
 6871 0858 95080000 		.word	.L583+1
 6872              		.p2align 1
 6873              	.L586:
2435:src/keys.c    **** 	  }
 6874              		.loc 1 2435 26 is_stmt 1 view .LVU2168
 6875 085c FFF7FEFF 		bl	clpall
 6876              	.LVL542:
2435:src/keys.c    **** 	  }
 6877              		.loc 1 2435 36 view .LVU2169
 6878              	.L585:
2444:src/keys.c    **** 	  State2.digval = 0;
 6879              		.loc 1 2444 4 view .LVU2170
2444:src/keys.c    **** 	  State2.digval = 0;
 6880              		.loc 1 2444 19 is_stmt 0 view .LVU2171
 6881 0860 337D     		ldrb	r3, [r6, #20]	@ zero_extendqisi2
2445:src/keys.c    **** 	  break;
 6882              		.loc 1 2445 18 view .LVU2172
 6883 0862 0022     		movs	r2, #0
2444:src/keys.c    **** 	  State2.digval = 0;
 6884              		.loc 1 2444 19 view .LVU2173
 6885 0864 6FF30203 		bfc	r3, #0, #3
 6886 0868 3375     		strb	r3, [r6, #20]
2445:src/keys.c    **** 	  break;
 6887              		.loc 1 2445 4 is_stmt 1 view .LVU2174
2445:src/keys.c    **** 	  break;
 6888              		.loc 1 2445 18 is_stmt 0 view .LVU2175
 6889 086a 3281     		strh	r2, [r6, #8]	@ movhi
2446:src/keys.c    **** 	default:			// No state change
 6890              		.loc 1 2446 4 is_stmt 1 view .LVU2176
 6891              	.LBE833:
 6892              	.LBE832:
2840:src/keys.c    **** 
ARM GAS  /tmp/ccizbp1a.s 			page 213


 6893              		.loc 1 2840 10 is_stmt 0 view .LVU2177
 6894 086c 4FF0330B 		mov	fp, #51
 6895              	.LBB835:
 6896              	.LBB834:
2446:src/keys.c    **** 	default:			// No state change
 6897              		.loc 1 2446 4 view .LVU2178
 6898 0870 54E4     		b	.L563
 6899              	.L1146:
 6900 0872 00BF     		.align	2
 6901              	.L1145:
 6902 0874 00000000 		.word	.LANCHOR1
 6903 0878 00000000 		.word	.LANCHOR9
 6904 087c 31020008 		.word	134218289
 6905 0880 00000000 		.word	NonProgrammable
 6906 0884 00000000 		.word	OpCode
 6907 0888 00000000 		.word	OpCodeDisplayPending
 6908 088c 04000000 		.word	.LC1
 6909 0890 00000000 		.word	StateWhileOn
 6910              	.L583:
2431:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 6911              		.loc 1 2431 4 is_stmt 1 view .LVU2179
2431:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 6912              		.loc 1 2431 18 is_stmt 0 view .LVU2180
 6913 0894 337D     		ldrb	r3, [r6, #20]	@ zero_extendqisi2
 6914 0896 03F00703 		and	r3, r3, #7
 6915 089a 013B     		subs	r3, r3, #1
 6916 089c 032B     		cmp	r3, #3
 6917 089e DFD8     		bhi	.L585
 6918 08a0 01A2     		adr	r2, .L587
 6919 08a2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6920 08a6 00BF     		.p2align 2
 6921              	.L587:
 6922 08a8 C5080000 		.word	.L590+1
 6923 08ac BF080000 		.word	.L589+1
 6924 08b0 B9080000 		.word	.L588+1
 6925 08b4 5D080000 		.word	.L586+1
 6926              		.p2align 1
 6927              	.L588:
2434:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 6928              		.loc 1 2434 26 is_stmt 1 view .LVU2181
 6929 08b8 FFF7FEFF 		bl	clrprog
 6930              	.LVL543:
2434:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 6931              		.loc 1 2434 37 view .LVU2182
2434:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 6932              		.loc 1 2434 4 is_stmt 0 view .LVU2183
 6933 08bc D0E7     		b	.L585
 6934              	.L589:
2433:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 6935              		.loc 1 2433 25 is_stmt 1 view .LVU2184
 6936 08be FFF7FEFF 		bl	reset
 6937              	.LVL544:
2433:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 6938              		.loc 1 2433 34 view .LVU2185
2433:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 6939              		.loc 1 2433 4 is_stmt 0 view .LVU2186
 6940 08c2 CDE7     		b	.L585
ARM GAS  /tmp/ccizbp1a.s 			page 214


 6941              	.L590:
2432:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 6942              		.loc 1 2432 25 is_stmt 1 view .LVU2187
 6943 08c4 FFF7FEFF 		bl	clrall
 6944              	.LVL545:
2432:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 6945              		.loc 1 2432 35 view .LVU2188
2432:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 6946              		.loc 1 2432 4 is_stmt 0 view .LVU2189
 6947 08c8 CAE7     		b	.L585
 6948              	.LVL546:
 6949              	.L1074:
2432:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 6950              		.loc 1 2432 4 view .LVU2190
 6951              	.LBE834:
 6952              	.LBE835:
2813:src/keys.c    ****     soft_init_state();
 6953              		.loc 1 2813 47 view .LVU2191
 6954 08ca CF4E     		ldr	r6, .L1147
 6955 08cc B37B     		ldrb	r3, [r6, #14]	@ zero_extendqisi2
2813:src/keys.c    ****     soft_init_state();
 6956              		.loc 1 2813 36 view .LVU2192
 6957 08ce 4AEA0302 		orr	r2, r10, r3
 6958 08d2 12F0FF0F 		tst	r2, #255
 6959 08d6 7FF4E1AC 		bne	.L574
2814:src/keys.c    ****     return STATE_UNFINISHED;
 6960              		.loc 1 2814 5 is_stmt 1 view .LVU2193
 6961 08da FFF7FEFF 		bl	soft_init_state
 6962              	.LVL547:
2815:src/keys.c    ****   }
 6963              		.loc 1 2815 5 view .LVU2194
2815:src/keys.c    ****   }
 6964              		.loc 1 2815 12 is_stmt 0 view .LVU2195
 6965 08de 4FF0330B 		mov	fp, #51
 6966 08e2 1BE4     		b	.L563
 6967              	.L1078:
2843:src/keys.c    **** 
 6968              		.loc 1 2843 3 is_stmt 1 view .LVU2196
2843:src/keys.c    **** 
 6969              		.loc 1 2843 10 is_stmt 0 view .LVU2197
 6970 08e4 E0B2     		uxtb	r0, r4
 6971 08e6 FFF7FEFF 		bl	process_arg
 6972              	.LVL548:
 6973 08ea 8346     		mov	fp, r0
 6974 08ec 54E6     		b	.L592
 6975              	.L1075:
2769:src/keys.c    ****       start_pause (0); //end the pause
 6976              		.loc 1 2769 2 is_stmt 1 view .LVU2198
 6977 08ee 0020     		movs	r0, #0
 6978 08f0 FFF7FEFF 		bl	set_pc
 6979              	.LVL549:
 6980 08f4 95E4     		b	.L571
 6981              	.LVL550:
 6982              	.L825:
2769:src/keys.c    ****       start_pause (0); //end the pause
 6983              		.loc 1 2769 2 is_stmt 0 view .LVU2199
 6984              	.LBE1187:
ARM GAS  /tmp/ccizbp1a.s 			page 215


 6985              	.LBE1243:
 6986              	.LBB1244:
3152:src/keys.c    **** 	if (p > Alpha)
 6987              		.loc 1 3152 2 is_stmt 1 view .LVU2200
3152:src/keys.c    **** 	if (p > Alpha)
 6988              		.loc 1 3152 22 is_stmt 0 view .LVU2201
 6989 08f6 C54C     		ldr	r4, .L1147+4
 6990 08f8 2068     		ldr	r0, [r4]
3152:src/keys.c    **** 	if (p > Alpha)
 6991              		.loc 1 3152 12 view .LVU2202
 6992 08fa 0021     		movs	r1, #0
 6993 08fc 00F5F660 		add	r0, r0, #1968
 6994 0900 FFF7FEFF 		bl	find_char
 6995              	.LVL551:
3153:src/keys.c    **** 	  *--p = '\0';
 6996              		.loc 1 3153 8 view .LVU2203
 6997 0904 2368     		ldr	r3, [r4]
 6998              	.LVL552:
3153:src/keys.c    **** 	  *--p = '\0';
 6999              		.loc 1 3153 2 is_stmt 1 view .LVU2204
3153:src/keys.c    **** 	  *--p = '\0';
 7000              		.loc 1 3153 8 is_stmt 0 view .LVU2205
 7001 0906 03F5F663 		add	r3, r3, #1968
3153:src/keys.c    **** 	  *--p = '\0';
 7002              		.loc 1 3153 5 view .LVU2206
 7003 090a 9842     		cmp	r0, r3
3154:src/keys.c    ****       }
 7004              		.loc 1 3154 4 is_stmt 1 view .LVU2207
 7005              	.LVL553:
3154:src/keys.c    ****       }
 7006              		.loc 1 3154 9 is_stmt 0 view .LVU2208
 7007 090c 84BF     		itt	hi
 7008 090e 0023     		movhi	r3, #0
 7009 0910 00F8013C 		strbhi	r3, [r0, #-1]
 7010 0914 F6E6     		b	.L1053
 7011              	.LVL554:
 7012              	.L1081:
3154:src/keys.c    ****       }
 7013              		.loc 1 3154 9 view .LVU2209
 7014              	.LBE1244:
 7015              	.LBB1245:
 7016              	.LBB1188:
2852:src/keys.c    **** 
 7017              		.loc 1 2852 3 is_stmt 1 view .LVU2210
 7018              	.LBB836:
 7019              	.LBI836:
1886:src/keys.c    **** 	int r = State2.test;
 7020              		.loc 1 1886 12 view .LVU2211
 7021              	.LBB837:
1887:src/keys.c    **** 	int cmpx = State2.cmplx;
 7022              		.loc 1 1887 2 view .LVU2212
1888:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 7023              		.loc 1 1888 2 view .LVU2213
 7024              	.LBB838:
 7025              	.LBB839:
 7026              	.LBB840:
 7027              	.LBB841:
ARM GAS  /tmp/ccizbp1a.s 			page 216


 131:src/keys.c    **** }
 7028              		.loc 1 131 23 is_stmt 0 view .LVU2214
 7029 0916 BE48     		ldr	r0, .L1147+8
 7030              	.LBE841:
 7031              	.LBE840:
 221:src/keys.c    **** }
 7032              		.loc 1 221 28 view .LVU2215
 7033 0918 DFF8F8C2 		ldr	ip, .L1147+12
 7034              	.LBB845:
 7035              	.LBB842:
 131:src/keys.c    **** }
 7036              		.loc 1 131 23 view .LVU2216
 7037 091c E4B2     		uxtb	r4, r4
 7038              	.LVL555:
 131:src/keys.c    **** }
 7039              		.loc 1 131 23 view .LVU2217
 7040              	.LBE842:
 7041              	.LBE845:
 7042              	.LBE839:
 7043              	.LBE838:
1890:src/keys.c    **** 
 7044              		.loc 1 1890 44 view .LVU2218
 7045 091e 12F0020F 		tst	r2, #2
 7046              	.LBB850:
 7047              	.LBB848:
 7048              	.LBB846:
 7049              	.LBB843:
 131:src/keys.c    **** }
 7050              		.loc 1 131 23 view .LVU2219
 7051 0922 005D     		ldrb	r0, [r0, r4]	@ zero_extendqisi2
 7052              	.LBE843:
 7053              	.LBE846:
 221:src/keys.c    **** }
 7054              		.loc 1 221 28 view .LVU2220
 7055 0924 1CF800E0 		ldrb	lr, [ip, r0]	@ zero_extendqisi2
 7056              	.LBE848:
 7057              	.LBE850:
1888:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 7058              		.loc 1 1888 19 view .LVU2221
 7059 0928 C2F3400C 		ubfx	ip, r2, #1, #1
 7060              	.LVL556:
1889:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 7061              		.loc 1 1889 2 is_stmt 1 view .LVU2222
 7062              	.LBB851:
 7063              	.LBI838:
 198:src/keys.c    **** {
 7064              		.loc 1 198 14 view .LVU2223
 7065              	.LBB849:
 200:src/keys.c    ****     // K00 - K05
 7066              		.loc 1 200 3 view .LVU2224
 221:src/keys.c    **** }
 7067              		.loc 1 221 3 view .LVU2225
 7068              	.LBB847:
 7069              	.LBI840:
 119:src/keys.c    **** {
 7070              		.loc 1 119 12 view .LVU2226
 7071              	.LBB844:
ARM GAS  /tmp/ccizbp1a.s 			page 217


 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 7072              		.loc 1 121 2 view .LVU2227
 131:src/keys.c    **** }
 7073              		.loc 1 131 2 view .LVU2228
 131:src/keys.c    **** }
 7074              		.loc 1 131 2 is_stmt 0 view .LVU2229
 7075              	.LBE844:
 7076              	.LBE847:
 7077              	.LBE849:
 7078              	.LBE851:
1889:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 7079              		.loc 1 1889 15 view .LVU2230
 7080 092c 2EF08000 		bic	r0, lr, #128
 7081              	.LVL557:
1890:src/keys.c    **** 
 7082              		.loc 1 1890 2 is_stmt 1 view .LVU2231
1890:src/keys.c    **** 
 7083              		.loc 1 1890 44 is_stmt 0 view .LVU2232
 7084 0930 00F08480 		beq	.L1104
 7085              	.LVL558:
1892:src/keys.c    **** 	State2.cmplx = 0;
 7086              		.loc 1 1892 2 is_stmt 1 view .LVU2233
1893:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7087              		.loc 1 1893 15 is_stmt 0 view .LVU2234
 7088 0934 61F34102 		bfi	r2, r1, #1, #1
1894:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7089              		.loc 1 1894 5 view .LVU2235
 7090 0938 6428     		cmp	r0, #100
1892:src/keys.c    **** 	State2.cmplx = 0;
 7091              		.loc 1 1892 14 view .LVU2236
 7092 093a 4FF00701 		mov	r1, #7
1893:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7093              		.loc 1 1893 15 view .LVU2237
 7094 093e 7275     		strb	r2, [r6, #21]
1892:src/keys.c    **** 	State2.cmplx = 0;
 7095              		.loc 1 1892 14 view .LVU2238
 7096 0940 F173     		strb	r1, [r6, #15]
1893:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7097              		.loc 1 1893 2 is_stmt 1 view .LVU2239
1894:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7098              		.loc 1 1894 2 view .LVU2240
1894:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7099              		.loc 1 1894 5 is_stmt 0 view .LVU2241
 7100 0942 00F0A583 		beq	.L890
1890:src/keys.c    **** 
 7101              		.loc 1 1890 44 view .LVU2242
 7102 0946 4FF0340A 		mov	r10, #52
 7103              	.LVL559:
 7104              	.L850:
1895:src/keys.c    **** 		// Lettered register
 7105              		.loc 1 1895 5 view .LVU2243
 7106 094a 7F28     		cmp	r0, #127
1890:src/keys.c    **** 
 7107              		.loc 1 1890 60 view .LVU2244
 7108 094c DA44     		add	r10, r10, fp
1895:src/keys.c    **** 		// Lettered register
 7109              		.loc 1 1895 2 is_stmt 1 view .LVU2245
ARM GAS  /tmp/ccizbp1a.s 			page 218


1895:src/keys.c    **** 		// Lettered register
 7110              		.loc 1 1895 5 is_stmt 0 view .LVU2246
 7111 094e 00F0EF80 		beq	.L623
 7112              	.LVL560:
1895:src/keys.c    **** 		// Lettered register
 7113              		.loc 1 1895 18 view .LVU2247
 7114 0952 6328     		cmp	r0, #99
 7115 0954 40F20E81 		bls	.L624
1895:src/keys.c    **** 		// Lettered register
 7116              		.loc 1 1895 37 view .LVU2248
 7117 0958 6F28     		cmp	r0, #111
 7118 095a 00F2E980 		bhi	.L623
1897:src/keys.c    **** 			if (n == regI_idx)
 7119              		.loc 1 1897 3 is_stmt 1 view .LVU2249
1897:src/keys.c    **** 			if (n == regI_idx)
 7120              		.loc 1 1897 6 is_stmt 0 view .LVU2250
 7121 095e BCF1000F 		cmp	ip, #0
 7122 0962 00F08C81 		beq	.L625
1897:src/keys.c    **** 			if (n == regI_idx)
 7123              		.loc 1 1897 12 view .LVU2251
 7124 0966 1EF0010F 		tst	lr, #1
 7125 096a 00F08881 		beq	.L625
1898:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 7126              		.loc 1 1898 4 is_stmt 1 view .LVU2252
1898:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 7127              		.loc 1 1898 7 is_stmt 0 view .LVU2253
 7128 096e 6D28     		cmp	r0, #109
 7129 0970 40F0EB80 		bne	.L626
1899:src/keys.c    **** 			// Disallow odd complex registers > A
 7130              		.loc 1 1899 5 is_stmt 1 view .LVU2254
1899:src/keys.c    **** 			// Disallow odd complex registers > A
 7131              		.loc 1 1899 30 is_stmt 0 view .LVU2255
 7132 0974 0BF1290B 		add	fp, fp, #41
 7133              	.LVL561:
1899:src/keys.c    **** 			// Disallow odd complex registers > A
 7134              		.loc 1 1899 30 view .LVU2256
 7135 0978 0EE6     		b	.L592
 7136              	.LVL562:
 7137              	.L1079:
1899:src/keys.c    **** 			// Disallow odd complex registers > A
 7138              		.loc 1 1899 30 view .LVU2257
 7139              	.LBE837:
 7140              	.LBE836:
2846:src/keys.c    **** 
 7141              		.loc 1 2846 3 is_stmt 1 view .LVU2258
 7142              	.LBB861:
 7143              	.LBI861:
1320:src/keys.c    **** 	int pc = -1;
 7144              		.loc 1 1320 12 view .LVU2259
 7145              	.LBB862:
1321:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
 7146              		.loc 1 1321 2 view .LVU2260
1322:src/keys.c    **** 
 7147              		.loc 1 1322 2 view .LVU2261
 7148              	.LBB863:
 7149              	.LBI863:
 198:src/keys.c    **** {
ARM GAS  /tmp/ccizbp1a.s 			page 219


 7150              		.loc 1 198 14 view .LVU2262
 7151              	.LBB864:
 200:src/keys.c    ****     // K00 - K05
 7152              		.loc 1 200 3 view .LVU2263
 221:src/keys.c    **** }
 7153              		.loc 1 221 3 view .LVU2264
 7154              	.LBB865:
 7155              	.LBI865:
 119:src/keys.c    **** {
 7156              		.loc 1 119 12 view .LVU2265
 7157              	.LBB866:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 7158              		.loc 1 121 2 view .LVU2266
 131:src/keys.c    **** }
 7159              		.loc 1 131 2 view .LVU2267
 131:src/keys.c    **** }
 7160              		.loc 1 131 23 is_stmt 0 view .LVU2268
 7161 097a A54B     		ldr	r3, .L1147+8
 7162              	.LBE866:
 7163              	.LBE865:
 221:src/keys.c    **** }
 7164              		.loc 1 221 28 view .LVU2269
 7165 097c A54A     		ldr	r2, .L1147+12
 7166 097e E4B2     		uxtb	r4, r4
 7167              	.LVL563:
 7168              	.LBB868:
 7169              	.LBB867:
 131:src/keys.c    **** }
 7170              		.loc 1 131 23 view .LVU2270
 7171 0980 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 7172              	.LBE867:
 7173              	.LBE868:
 221:src/keys.c    **** }
 7174              		.loc 1 221 28 view .LVU2271
 7175 0982 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 7176              	.LVL564:
 221:src/keys.c    **** }
 7177              		.loc 1 221 28 view .LVU2272
 7178              	.LBE864:
 7179              	.LBE863:
1324:src/keys.c    **** 		// Digit 0 - 9
 7180              		.loc 1 1324 2 is_stmt 1 view .LVU2273
1324:src/keys.c    **** 		// Digit 0 - 9
 7181              		.loc 1 1324 5 is_stmt 0 view .LVU2274
 7182 0984 0928     		cmp	r0, #9
 7183 0986 40F2EA80 		bls	.L1105
1329:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 7184              		.loc 1 1329 7 is_stmt 1 view .LVU2275
1329:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 7185              		.loc 1 1329 18 is_stmt 0 view .LVU2276
 7186 098a 20F08000 		bic	r0, r0, #128
 7187              	.LVL565:
1329:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 7188              		.loc 1 1329 10 view .LVU2277
 7189 098e 6428     		cmp	r0, #100
 7190 0990 00F06281 		beq	.L1106
1330:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
ARM GAS  /tmp/ccizbp1a.s 			page 220


 7191              		.loc 1 1330 7 is_stmt 1 view .LVU2278
1330:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 7192              		.loc 1 1330 10 is_stmt 0 view .LVU2279
 7193 0994 6528     		cmp	r0, #101
 7194 0996 00F06B81 		beq	.L1107
1331:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 7195              		.loc 1 1331 7 is_stmt 1 view .LVU2280
1331:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 7196              		.loc 1 1331 10 is_stmt 0 view .LVU2281
 7197 099a 6628     		cmp	r0, #102
 7198 099c 00F09381 		beq	.L1108
1332:src/keys.c    **** #endif
 7199              		.loc 1 1332 7 is_stmt 1 view .LVU2282
1332:src/keys.c    **** #endif
 7200              		.loc 1 1332 10 is_stmt 0 view .LVU2283
 7201 09a0 6728     		cmp	r0, #103
 7202 09a2 00F06E83 		beq	.L1109
1334:src/keys.c    **** 		// A - D
 7203              		.loc 1 1334 7 is_stmt 1 view .LVU2284
1334:src/keys.c    **** 		// A - D
 7204              		.loc 1 1334 10 is_stmt 0 view .LVU2285
 7205 09a6 032C     		cmp	r4, #3
 7206 09a8 40F27C83 		bls	.L1110
1339:src/keys.c    **** 		// .
 7207              		.loc 1 1339 7 is_stmt 1 view .LVU2286
1339:src/keys.c    **** 		// .
 7208              		.loc 1 1339 10 is_stmt 0 view .LVU2287
 7209 09ac 262C     		cmp	r4, #38
 7210 09ae 00F09E83 		beq	.L1111
1344:src/keys.c    **** 		// ENTER - short circuit processing
 7211              		.loc 1 1344 7 is_stmt 1 view .LVU2288
1344:src/keys.c    **** 		// ENTER - short circuit processing
 7212              		.loc 1 1344 10 is_stmt 0 view .LVU2289
 7213 09b2 0C2C     		cmp	r4, #12
 7214 09b4 00F07483 		beq	.L1112
1348:src/keys.c    **** 		// backspace
 7215              		.loc 1 1348 7 is_stmt 1 view .LVU2290
1348:src/keys.c    **** 		// backspace
 7216              		.loc 1 1348 10 is_stmt 0 view .LVU2291
 7217 09b8 102C     		cmp	r4, #16
 7218 09ba 00F0A183 		beq	.L1113
1357:src/keys.c    **** 		// up
 7219              		.loc 1 1357 7 is_stmt 1 view .LVU2292
1357:src/keys.c    **** 		// up
 7220              		.loc 1 1357 10 is_stmt 0 view .LVU2293
 7221 09be 122C     		cmp	r4, #18
 7222 09c0 00F01D86 		beq	.L1114
1367:src/keys.c    **** 		// down
 7223              		.loc 1 1367 7 is_stmt 1 view .LVU2294
1367:src/keys.c    **** 		// down
 7224              		.loc 1 1367 10 is_stmt 0 view .LVU2295
 7225 09c4 182C     		cmp	r4, #24
 7226 09c6 7FF40AAE 		bne	.L1058
1369:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 7227              		.loc 1 1369 3 is_stmt 1 view .LVU2296
1370:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 7228              		.loc 1 1370 18 is_stmt 0 view .LVU2297
ARM GAS  /tmp/ccizbp1a.s 			page 221


 7229 09ca 904C     		ldr	r4, .L1147+4
1369:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 7230              		.loc 1 1369 3 view .LVU2298
 7231 09cc 0120     		movs	r0, #1
 7232 09ce FFF7FEFF 		bl	update_program_bounds
 7233              	.LVL566:
1370:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 7234              		.loc 1 1370 3 is_stmt 1 view .LVU2299
1370:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 7235              		.loc 1 1370 18 is_stmt 0 view .LVU2300
 7236 09d2 2368     		ldr	r3, [r4]
1370:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 7237              		.loc 1 1370 11 view .LVU2301
 7238 09d4 0021     		movs	r1, #0
 7239 09d6 B3F8EE07 		ldrh	r0, [r3, #2030]
 7240 09da FFF7FEFF 		bl	do_inc
 7241              	.LVL567:
1371:src/keys.c    **** 			rawpc = 1;
 7242              		.loc 1 1371 3 is_stmt 1 view .LVU2302
1371:src/keys.c    **** 			rawpc = 1;
 7243              		.loc 1 1371 6 is_stmt 0 view .LVU2303
 7244 09de 20B9     		cbnz	r0, .L604
1371:src/keys.c    **** 			rawpc = 1;
 7245              		.loc 1 1371 21 view .LVU2304
 7246 09e0 2368     		ldr	r3, [r4]
1371:src/keys.c    **** 			rawpc = 1;
 7247              		.loc 1 1371 18 view .LVU2305
 7248 09e2 5888     		ldrh	r0, [r3, #2]
 7249              	.LVL568:
1371:src/keys.c    **** 			rawpc = 1;
 7250              		.loc 1 1371 18 view .LVU2306
 7251 09e4 0038     		subs	r0, r0, #0
 7252 09e6 18BF     		it	ne
 7253 09e8 0120     		movne	r0, #1
 7254              	.LVL569:
 7255              	.L604:
1377:src/keys.c    **** fin2:		State2.gtodot = 0;
 7256              		.loc 1 1377 7 is_stmt 1 view .LVU2307
 7257 09ea FFF7FEFF 		bl	set_pc
 7258              	.LVL570:
 7259              	.L608:
1378:src/keys.c    **** 		State2.digval = 0;
 7260              		.loc 1 1378 8 view .LVU2308
1378:src/keys.c    **** 		State2.digval = 0;
 7261              		.loc 1 1378 22 is_stmt 0 view .LVU2309
 7262 09ee 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
1379:src/keys.c    **** 		State2.numdigit = 0;
 7263              		.loc 1 1379 17 view .LVU2310
 7264 09f0 0023     		movs	r3, #0
1378:src/keys.c    **** 		State2.digval = 0;
 7265              		.loc 1 1378 22 view .LVU2311
 7266 09f2 6FF30002 		bfc	r2, #0, #1
 7267 09f6 7275     		strb	r2, [r6, #21]
1379:src/keys.c    **** 		State2.numdigit = 0;
 7268              		.loc 1 1379 3 is_stmt 1 view .LVU2312
1379:src/keys.c    **** 		State2.numdigit = 0;
 7269              		.loc 1 1379 17 is_stmt 0 view .LVU2313
ARM GAS  /tmp/ccizbp1a.s 			page 222


 7270 09f8 3381     		strh	r3, [r6, #8]	@ movhi
1380:src/keys.c    **** 	}
 7271              		.loc 1 1380 3 is_stmt 1 view .LVU2314
1380:src/keys.c    **** 	}
 7272              		.loc 1 1380 19 is_stmt 0 view .LVU2315
 7273 09fa F372     		strb	r3, [r6, #11]
 7274              	.LBE862:
 7275              	.LBE861:
2846:src/keys.c    **** 
 7276              		.loc 1 2846 10 view .LVU2316
 7277 09fc 4FF0330B 		mov	fp, #51
 7278 0a00 FFF78CBB 		b	.L563
 7279              	.LVL571:
 7280              	.L886:
2846:src/keys.c    **** 
 7281              		.loc 1 2846 10 view .LVU2317
 7282              	.LBE1188:
 7283              	.LBE1245:
2952:src/keys.c    **** #ifdef DM42
 7284              		.loc 1 2952 7 view .LVU2318
 7285 0a04 D846     		mov	r8, fp
 7286 0a06 FFF789BB 		b	.L563
 7287              	.LVL572:
 7288              	.L613:
 7289              	.LBB1246:
 7290              	.LBB1189:
 7291              	.LBB881:
 7292              	.LBB694:
1233:src/keys.c    **** 
 7293              		.loc 1 1233 2 view .LVU2319
 7294 0a0a 2D2C     		cmp	r4, #45
 7295 0a0c 7FF4E7AD 		bne	.L1058
1241:src/keys.c    **** 		goto stay;
 7296              		.loc 1 1241 3 is_stmt 1 view .LVU2320
 7297 0a10 8AF0010A 		eor	r10, r10, #1
 7298              	.LVL573:
1242:src/keys.c    **** 
 7299              		.loc 1 1242 3 view .LVU2321
 7300              	.L619:
1250:src/keys.c    **** 		State2.cmplx = cmplx;
 7301              		.loc 1 1250 3 view .LVU2322
1251:src/keys.c    **** 		State2.dot = f;
 7302              		.loc 1 1251 3 view .LVU2323
1252:src/keys.c    **** 		break;
 7303              		.loc 1 1252 3 view .LVU2324
1251:src/keys.c    **** 		State2.dot = f;
 7304              		.loc 1 1251 16 is_stmt 0 view .LVU2325
 7305 0a14 4FEA4A03 		lsl	r3, r10, #1
 7306 0a18 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
 7307 0a1a 43F02003 		orr	r3, r3, #32
 7308 0a1e 43EA8913 		orr	r3, r3, r9, lsl #6
 7309 0a22 03F06203 		and	r3, r3, #98
 7310 0a26 22F06202 		bic	r2, r2, #98
 7311 0a2a 1343     		orrs	r3, r3, r2
 7312 0a2c 7375     		strb	r3, [r6, #21]
1253:src/keys.c    **** 
 7313              		.loc 1 1253 3 is_stmt 1 view .LVU2326
ARM GAS  /tmp/ccizbp1a.s 			page 223


1258:src/keys.c    **** }
 7314              		.loc 1 1258 9 is_stmt 0 view .LVU2327
 7315 0a2e 4FF0330B 		mov	fp, #51
1253:src/keys.c    **** 
 7316              		.loc 1 1253 3 view .LVU2328
 7317 0a32 FFF773BB 		b	.L563
 7318              	.LVL574:
 7319              	.L887:
1253:src/keys.c    **** 
 7320              		.loc 1 1253 3 view .LVU2329
 7321              	.LBE694:
 7322              	.LBE881:
 7323              	.LBE1189:
 7324              	.LBE1246:
 7325              	.LBB1247:
 7326 0a36 9B46     		mov	fp, r3
 7327              	.LVL575:
1253:src/keys.c    **** 
 7328              		.loc 1 1253 3 view .LVU2330
 7329 0a38 FFF791BB 		b	.L836
 7330              	.LVL576:
 7331              	.L1104:
1253:src/keys.c    **** 
 7332              		.loc 1 1253 3 view .LVU2331
 7333              	.LBE1247:
 7334              	.LBB1248:
 7335              	.LBB1190:
 7336              	.LBB882:
 7337              	.LBB854:
1892:src/keys.c    **** 	State2.cmplx = 0;
 7338              		.loc 1 1892 2 is_stmt 1 view .LVU2332
1893:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7339              		.loc 1 1893 15 is_stmt 0 view .LVU2333
 7340 0a3c 6CF34102 		bfi	r2, ip, #1, #1
1892:src/keys.c    **** 	State2.cmplx = 0;
 7341              		.loc 1 1892 14 view .LVU2334
 7342 0a40 0721     		movs	r1, #7
1894:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7343              		.loc 1 1894 5 view .LVU2335
 7344 0a42 6428     		cmp	r0, #100
1893:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7345              		.loc 1 1893 15 view .LVU2336
 7346 0a44 7275     		strb	r2, [r6, #21]
1892:src/keys.c    **** 	State2.cmplx = 0;
 7347              		.loc 1 1892 14 view .LVU2337
 7348 0a46 F173     		strb	r1, [r6, #15]
1893:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7349              		.loc 1 1893 2 is_stmt 1 view .LVU2338
1894:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7350              		.loc 1 1894 2 view .LVU2339
1894:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7351              		.loc 1 1894 5 is_stmt 0 view .LVU2340
 7352 0a48 00F02683 		beq	.L889
1890:src/keys.c    **** 
 7353              		.loc 1 1890 44 view .LVU2341
 7354 0a4c 4FF02D0A 		mov	r10, #45
 7355              	.LVL577:
ARM GAS  /tmp/ccizbp1a.s 			page 224


1890:src/keys.c    **** 
 7356              		.loc 1 1890 44 view .LVU2342
 7357 0a50 7BE7     		b	.L850
 7358              	.LVL578:
 7359              	.L1082:
1890:src/keys.c    **** 
 7360              		.loc 1 1890 44 view .LVU2343
 7361              	.LBE854:
 7362              	.LBE882:
2855:src/keys.c    **** 
 7363              		.loc 1 2855 3 is_stmt 1 view .LVU2344
 7364              	.LBB883:
 7365              	.LBB884:
2459:src/keys.c    **** 
 7366              		.loc 1 2459 12 is_stmt 0 view .LVU2345
 7367 0a52 6E4A     		ldr	r2, .L1147+4
 7368 0a54 1268     		ldr	r2, [r2]
2459:src/keys.c    **** 
 7369              		.loc 1 2459 31 view .LVU2346
 7370 0a56 B2F9DE27 		ldrsh	r2, [r2, #2014]
 7371              	.LBE884:
 7372              	.LBE883:
2855:src/keys.c    **** 
 7373              		.loc 1 2855 10 view .LVU2347
 7374 0a5a E4B2     		uxtb	r4, r4
 7375              	.LVL579:
 7376              	.LBB903:
 7377              	.LBI883:
2457:src/keys.c    **** 	int n = ((int)State2.status) - 3;
 7378              		.loc 1 2457 12 is_stmt 1 view .LVU2348
 7379              	.LBB895:
2458:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7380              		.loc 1 2458 2 view .LVU2349
2459:src/keys.c    **** 
 7381              		.loc 1 2459 2 view .LVU2350
2459:src/keys.c    **** 
 7382              		.loc 1 2459 31 is_stmt 0 view .LVU2351
 7383 0a5c 002A     		cmp	r2, #0
 7384 0a5e B4BF     		ite	lt
 7385 0a60 0B22     		movlt	r2, #11
 7386 0a62 0A22     		movge	r2, #10
 7387              	.LVL580:
2461:src/keys.c    **** 		if (--n < -2)
 7388              		.loc 1 2461 2 is_stmt 1 view .LVU2352
2461:src/keys.c    **** 		if (--n < -2)
 7389              		.loc 1 2461 5 is_stmt 0 view .LVU2353
 7390 0a64 122C     		cmp	r4, #18
 7391 0a66 00F0F280 		beq	.L1115
2465:src/keys.c    **** 		if (++n > max)
 7392              		.loc 1 2465 7 is_stmt 1 view .LVU2354
2465:src/keys.c    **** 		if (++n > max)
 7393              		.loc 1 2465 10 is_stmt 0 view .LVU2355
 7394 0a6a 182C     		cmp	r4, #24
 7395 0a6c 00F01481 		beq	.L1116
2469:src/keys.c    **** 		State2.status = 0;
 7396              		.loc 1 2469 7 is_stmt 1 view .LVU2356
2469:src/keys.c    **** 		State2.status = 0;
ARM GAS  /tmp/ccizbp1a.s 			page 225


 7397              		.loc 1 2469 10 is_stmt 0 view .LVU2357
 7398 0a70 102C     		cmp	r4, #16
 7399 0a72 00F04083 		beq	.L1117
 7400              	.LBB885:
2474:src/keys.c    **** 		if (nn <= 9)
 7401              		.loc 1 2474 3 is_stmt 1 view .LVU2358
 7402              	.LVL581:
 7403              	.LBB886:
 7404              	.LBI886:
 198:src/keys.c    **** {
 7405              		.loc 1 198 14 view .LVU2359
 7406              	.LBB887:
 200:src/keys.c    ****     // K00 - K05
 7407              		.loc 1 200 3 view .LVU2360
 221:src/keys.c    **** }
 7408              		.loc 1 221 3 view .LVU2361
 7409              	.LBB888:
 7410              	.LBI888:
 119:src/keys.c    **** {
 7411              		.loc 1 119 12 view .LVU2362
 7412              	.LBB889:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 7413              		.loc 1 121 2 view .LVU2363
 131:src/keys.c    **** }
 7414              		.loc 1 131 2 view .LVU2364
 131:src/keys.c    **** }
 7415              		.loc 1 131 23 is_stmt 0 view .LVU2365
 7416 0a76 6649     		ldr	r1, .L1147+8
 7417              	.LBE889:
 7418              	.LBE888:
 221:src/keys.c    **** }
 7419              		.loc 1 221 28 view .LVU2366
 7420 0a78 6648     		ldr	r0, .L1147+12
 7421              	.LBB891:
 7422              	.LBB890:
 131:src/keys.c    **** }
 7423              		.loc 1 131 23 view .LVU2367
 7424 0a7a 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 7425 0a7c 415C     		ldrb	r1, [r0, r1]	@ zero_extendqisi2
 7426 0a7e 01F07F01 		and	r1, r1, #127
 7427              	.LVL582:
 131:src/keys.c    **** }
 7428              		.loc 1 131 23 view .LVU2368
 7429              	.LBE890:
 7430              	.LBE891:
 7431              	.LBE887:
 7432              	.LBE886:
2475:src/keys.c    **** 			n = nn;
 7433              		.loc 1 2475 3 is_stmt 1 view .LVU2369
2475:src/keys.c    **** 			n = nn;
 7434              		.loc 1 2475 6 is_stmt 0 view .LVU2370
 7435 0a82 0929     		cmp	r1, #9
 7436 0a84 40F24D82 		bls	.L857
2477:src/keys.c    **** 			n = n == max ? 10 : max;
 7437              		.loc 1 2477 11 view .LVU2371
 7438 0a88 7029     		cmp	r1, #112
 7439              	.LBE885:
ARM GAS  /tmp/ccizbp1a.s 			page 226


2458:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7440              		.loc 1 2458 6 view .LVU2372
 7441 0a8a A3F10303 		sub	r3, r3, #3
 7442              	.LVL583:
 7443              	.LBB892:
2477:src/keys.c    **** 			n = n == max ? 10 : max;
 7444              		.loc 1 2477 8 is_stmt 1 view .LVU2373
2477:src/keys.c    **** 			n = n == max ? 10 : max;
 7445              		.loc 1 2477 11 is_stmt 0 view .LVU2374
 7446 0a8e 00F09585 		beq	.L1118
2479:src/keys.c    **** 			n = 10; 
 7447              		.loc 1 2479 8 is_stmt 1 view .LVU2375
 7448              	.LBE892:
2458:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7449              		.loc 1 2458 6 is_stmt 0 view .LVU2376
 7450 0a92 7F29     		cmp	r1, #127
 7451 0a94 0CBF     		ite	eq
 7452 0a96 1A46     		moveq	r2, r3
 7453              	.LVL584:
2458:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7454              		.loc 1 2458 6 view .LVU2377
 7455 0a98 0A22     		movne	r2, #10
 7456              	.LVL585:
 7457              	.L638:
2482:src/keys.c    **** 
 7458              		.loc 1 2482 2 is_stmt 1 view .LVU2378
2482:src/keys.c    **** 
 7459              		.loc 1 2482 20 is_stmt 0 view .LVU2379
 7460 0a9a 0332     		adds	r2, r2, #3
 7461              	.LVL586:
2482:src/keys.c    **** 
 7462              		.loc 1 2482 16 view .LVU2380
 7463 0a9c 3273     		strb	r2, [r6, #12]
2484:src/keys.c    **** }
 7464              		.loc 1 2484 2 is_stmt 1 view .LVU2381
 7465              	.LBE895:
 7466              	.LBE903:
2855:src/keys.c    **** 
 7467              		.loc 1 2855 10 is_stmt 0 view .LVU2382
 7468 0a9e 4FF0330B 		mov	fp, #51
 7469              	.LBB904:
 7470              	.LBB896:
2484:src/keys.c    **** }
 7471              		.loc 1 2484 9 view .LVU2383
 7472 0aa2 FFF73BBB 		b	.L563
 7473              	.LVL587:
 7474              	.L1086:
2484:src/keys.c    **** }
 7475              		.loc 1 2484 9 view .LVU2384
 7476              	.LBE896:
 7477              	.LBE904:
2878:src/keys.c    **** 
 7478              		.loc 1 2878 3 is_stmt 1 view .LVU2385
 7479              	.LBB905:
 7480              	.LBB906:
 7481              	.LBB907:
 7482              	.LBB908:
ARM GAS  /tmp/ccizbp1a.s 			page 227


 7483              	.LBB909:
 7484              	.LBB910:
 7485              	.LBB911:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7486              		.loc 1 85 18 is_stmt 0 view .LVU2386
 7487 0aa6 FFF7FEFF 		bl	shift_down
 7488              	.LVL588:
 7489              	.LBE911:
 7490              	.LBE910:
 7491              	.LBE909:
 7492              	.LBE908:
 7493              	.LBE907:
 7494              	.LBE906:
 7495              	.LBE905:
2878:src/keys.c    **** 
 7496              		.loc 1 2878 10 view .LVU2387
 7497 0aaa E4B2     		uxtb	r4, r4
 7498              	.LVL589:
 7499              	.LBB931:
 7500              	.LBI905:
1265:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 7501              		.loc 1 1265 12 is_stmt 1 view .LVU2388
 7502              	.LBB928:
1266:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
 7503              		.loc 1 1266 2 view .LVU2389
1271:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
 7504              		.loc 1 1271 2 view .LVU2390
1275:src/keys.c    **** 	const int f = (shift == SHIFT_F);
 7505              		.loc 1 1275 2 view .LVU2391
 7506              	.LBB920:
 7507              	.LBI907:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 7508              		.loc 1 102 13 view .LVU2392
 7509              	.LBE920:
 7510              	.LBE928:
 7511              	.LBE931:
 7512              	.LBE1190:
 7513              	.LBE1248:
 103:src/keys.c    **** }
 7514              		.loc 1 103 2 view .LVU2393
 7515              	.LBB1249:
 7516              	.LBB1191:
 7517              	.LBB932:
 7518              	.LBB929:
 7519              	.LBB921:
 7520              	.LBB917:
 7521              	.LBI908:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 7522              		.loc 1 92 20 view .LVU2394
 7523              	.LBB914:
  93:src/keys.c    **** 	State2.shifts = shift;
 7524              		.loc 1 93 2 view .LVU2395
 7525              	.LBB913:
 7526              	.LBI910:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 7527              		.loc 1 84 13 view .LVU2396
 7528              	.LBB912:
ARM GAS  /tmp/ccizbp1a.s 			page 228


  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7529              		.loc 1 85 2 view .LVU2397
  86:src/keys.c    **** }
 7530              		.loc 1 86 2 view .LVU2398
  86:src/keys.c    **** }
 7531              		.loc 1 86 52 is_stmt 0 view .LVU2399
 7532 0aac 8346     		mov	fp, r0
 7533 0aae 08B9     		cbnz	r0, .L648
 7534 0ab0 96F810B0 		ldrb	fp, [r6, #16]	@ zero_extendqisi2
 7535              	.L648:
 7536              	.LVL590:
  86:src/keys.c    **** }
 7537              		.loc 1 86 52 view .LVU2400
 7538              	.LBE912:
 7539              	.LBE913:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 7540              		.loc 1 94 2 is_stmt 1 view .LVU2401
 7541              	.LBE914:
 7542              	.LBE917:
 7543              	.LBE921:
1278:src/keys.c    **** 	set_last_menu ();
 7544              		.loc 1 1278 15 is_stmt 0 view .LVU2402
 7545 0ab4 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
 7546              	.LBB922:
 7547              	.LBB918:
 7548              	.LBB915:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 7549              		.loc 1 94 16 view .LVU2403
 7550 0ab6 0023     		movs	r3, #0
 7551              	.LBE915:
 7552              	.LBE918:
 7553              	.LBE922:
1278:src/keys.c    **** 	set_last_menu ();
 7554              		.loc 1 1278 15 view .LVU2404
 7555 0ab8 63F38202 		bfi	r2, r3, #2, #1
1276:src/keys.c    **** 
 7556              		.loc 1 1276 23 view .LVU2405
 7557 0abc ABF1010A 		sub	r10, fp, #1
 7558              	.LVL591:
1278:src/keys.c    **** 	set_last_menu ();
 7559              		.loc 1 1278 15 view .LVU2406
 7560 0ac0 7275     		strb	r2, [r6, #21]
1276:src/keys.c    **** 
 7561              		.loc 1 1276 23 view .LVU2407
 7562 0ac2 BAFA8AFA 		clz	r10, r10
 7563              	.LBB923:
 7564              	.LBB919:
 7565              	.LBB916:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 7566              		.loc 1 94 16 view .LVU2408
 7567 0ac6 3374     		strb	r3, [r6, #16]
  95:src/keys.c    **** 	return r;
 7568              		.loc 1 95 2 is_stmt 1 view .LVU2409
  95:src/keys.c    **** 	return r;
 7569              		.loc 1 95 19 is_stmt 0 view .LVU2410
 7570 0ac8 7373     		strb	r3, [r6, #13]
  96:src/keys.c    **** }
ARM GAS  /tmp/ccizbp1a.s 			page 229


 7571              		.loc 1 96 2 is_stmt 1 view .LVU2411
 7572              	.LVL592:
  96:src/keys.c    **** }
 7573              		.loc 1 96 2 is_stmt 0 view .LVU2412
 7574              	.LBE916:
 7575              	.LBE919:
 7576              	.LBE923:
1276:src/keys.c    **** 
 7577              		.loc 1 1276 2 is_stmt 1 view .LVU2413
1276:src/keys.c    **** 
 7578              		.loc 1 1276 23 is_stmt 0 view .LVU2414
 7579 0aca 4FEA5A1A 		lsr	r10, r10, #5
 7580              	.LVL593:
1278:src/keys.c    **** 	set_last_menu ();
 7581              		.loc 1 1278 2 is_stmt 1 view .LVU2415
1279:src/keys.c    **** 	display_current_menu ();
 7582              		.loc 1 1279 2 view .LVU2416
 7583 0ace FFF7FEFF 		bl	set_last_menu
 7584              	.LVL594:
1280:src/keys.c    **** 
 7585              		.loc 1 1280 2 view .LVU2417
 7586 0ad2 FFF7FEFF 		bl	display_current_menu
 7587              	.LVL595:
1282:src/keys.c    **** 	
 7588              		.loc 1 1282 2 view .LVU2418
1282:src/keys.c    **** 	
 7589              		.loc 1 1282 5 is_stmt 0 view .LVU2419
 7590 0ad6 BBF1000F 		cmp	fp, #0
 7591 0ada 3FF480AD 		beq	.L1058
1284:src/keys.c    **** 		return op_map[c - K10][f];
 7592              		.loc 1 1284 2 is_stmt 1 view .LVU2420
1284:src/keys.c    **** 		return op_map[c - K10][f];
 7593              		.loc 1 1284 15 is_stmt 0 view .LVU2421
 7594 0ade A31F     		subs	r3, r4, #6
1284:src/keys.c    **** 		return op_map[c - K10][f];
 7595              		.loc 1 1284 5 view .LVU2422
 7596 0ae0 DAB2     		uxtb	r2, r3
 7597 0ae2 022A     		cmp	r2, #2
 7598 0ae4 40F2D280 		bls	.L1119
1287:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7599              		.loc 1 1287 2 is_stmt 1 view .LVU2423
1287:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7600              		.loc 1 1287 15 is_stmt 0 view .LVU2424
 7601 0ae8 0E3C     		subs	r4, r4, #14
 7602              	.LVL596:
1287:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7603              		.loc 1 1287 5 view .LVU2425
 7604 0aea E3B2     		uxtb	r3, r4
 7605 0aec 012B     		cmp	r3, #1
 7606 0aee 3FF676AD 		bhi	.L1058
1288:src/keys.c    **** 
 7607              		.loc 1 1288 3 is_stmt 1 view .LVU2426
 7608 0af2 494B     		ldr	r3, .L1147+16
 7609              	.LBB924:
 7610              	.LBB925:
 647:src/keys.c    **** }
 7611              		.loc 1 647 15 is_stmt 0 view .LVU2427
ARM GAS  /tmp/ccizbp1a.s 			page 230


 7612 0af4 727C     		ldrb	r2, [r6, #17]	@ zero_extendqisi2
 7613              	.LBE925:
 7614              	.LBE924:
1288:src/keys.c    **** 
 7615              		.loc 1 1288 3 view .LVU2428
 7616 0af6 03EB4404 		add	r4, r3, r4, lsl #1
 7617              	.LVL597:
1290:src/keys.c    **** }
 7618              		.loc 1 1290 9 view .LVU2429
 7619 0afa 4FF0330B 		mov	fp, #51
 7620              	.LVL598:
1288:src/keys.c    **** 
 7621              		.loc 1 1288 3 view .LVU2430
 7622 0afe 14F80A30 		ldrb	r3, [r4, r10]	@ zero_extendqisi2
 7623              	.LVL599:
 7624              	.LBB927:
 7625              	.LBI924:
 646:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 7626              		.loc 1 646 13 is_stmt 1 view .LVU2431
 7627              	.LBB926:
 647:src/keys.c    **** }
 7628              		.loc 1 647 2 view .LVU2432
 647:src/keys.c    **** }
 7629              		.loc 1 647 15 is_stmt 0 view .LVU2433
 7630 0b02 9A42     		cmp	r2, r3
 7631 0b04 08BF     		it	eq
 7632 0b06 0023     		moveq	r3, #0
 7633              	.LVL600:
 647:src/keys.c    **** }
 7634              		.loc 1 647 15 view .LVU2434
 7635 0b08 7374     		strb	r3, [r6, #17]
 648:src/keys.c    **** 
 7636              		.loc 1 648 1 view .LVU2435
 7637 0b0a FFF707BB 		b	.L563
 7638              	.LVL601:
 7639              	.L1087:
 648:src/keys.c    **** 
 7640              		.loc 1 648 1 view .LVU2436
 7641              	.LBE926:
 7642              	.LBE927:
 7643              	.LBE929:
 7644              	.LBE932:
 7645              	.LBB933:
 7646              	.LBB652:
 263:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 7647              		.loc 1 263 16 view .LVU2437
 7648 0b0e BAF1030F 		cmp	r10, #3
 7649 0b12 00F0C880 		beq	.L1120
 266:src/keys.c    ****     /*
 7650              		.loc 1 266 3 is_stmt 1 view .LVU2438
 266:src/keys.c    ****     /*
 7651              		.loc 1 266 23 is_stmt 0 view .LVU2439
 7652 0b16 4149     		ldr	r1, .L1147+20
 7653 0b18 7369     		ldr	r3, [r6, #20]
 266:src/keys.c    ****     /*
 7654              		.loc 1 266 6 view .LVU2440
 7655 0b1a 1942     		tst	r1, r3
ARM GAS  /tmp/ccizbp1a.s 			page 231


 7656 0b1c 3FF415AC 		beq	.L663
 7657              	.L655:
 7658              	.LBB647:
 335:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 7659              		.loc 1 335 5 is_stmt 1 view .LVU2441
 357:src/keys.c    **** 
 7660              		.loc 1 357 5 view .LVU2442
 362:src/keys.c    ****     col = smap[shift];
 7661              		.loc 1 362 5 view .LVU2443
 7662              	.LVL602:
 363:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7663              		.loc 1 363 5 view .LVU2444
 363:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7664              		.loc 1 363 15 is_stmt 0 view .LVU2445
 7665 0b20 3F49     		ldr	r1, .L1147+24
 362:src/keys.c    ****     col = smap[shift];
 7666              		.loc 1 362 8 view .LVU2446
 7667 0b22 404B     		ldr	r3, .L1147+28
 363:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7668              		.loc 1 363 9 view .LVU2447
 7669 0b24 11F80AC0 		ldrb	ip, [r1, r10]	@ zero_extendqisi2
 7670              	.LVL603:
 364:src/keys.c    ****   }
 7671              		.loc 1 364 5 is_stmt 1 view .LVU2448
 364:src/keys.c    ****   }
 7672              		.loc 1 364 9 is_stmt 0 view .LVU2449
 7673 0b28 0621     		movs	r1, #6
 7674 0b2a 02E4     		b	.L658
 7675              	.LVL604:
 7676              	.L629:
 364:src/keys.c    ****   }
 7677              		.loc 1 364 9 view .LVU2450
 7678              	.LBE647:
 7679              	.LBE652:
 7680              	.LBE933:
 7681              	.LBB934:
 7682              	.LBB855:
1914:src/keys.c    **** 		// digit 2..9, -> or .
 7683              		.loc 1 1914 7 is_stmt 1 view .LVU2451
1914:src/keys.c    **** 		// digit 2..9, -> or .
 7684              		.loc 1 1914 10 is_stmt 0 view .LVU2452
 7685 0b2c 0928     		cmp	r0, #9
 7686 0b2e 45D9     		bls	.L631
 7687              	.L623:
1914:src/keys.c    **** 		// digit 2..9, -> or .
 7688              		.loc 1 1914 19 view .LVU2453
 7689 0b30 2C2C     		cmp	r4, #44
 7690 0b32 43D0     		beq	.L631
1914:src/keys.c    **** 		// digit 2..9, -> or .
 7691              		.loc 1 1914 35 view .LVU2454
 7692 0b34 262C     		cmp	r4, #38
 7693 0b36 41D0     		beq	.L631
1920:src/keys.c    **** 	case K11:					// tests vs register
 7694              		.loc 1 1920 2 is_stmt 1 view .LVU2455
 7695 0b38 0C2C     		cmp	r4, #12
 7696 0b3a 3FF447AD 		beq	.L811
 7697 0b3e 102C     		cmp	r4, #16
ARM GAS  /tmp/ccizbp1a.s 			page 232


 7698 0b40 3FF44DAD 		beq	.L1058
 7699 0b44 072C     		cmp	r4, #7
 7700 0b46 3FF441AD 		beq	.L811
 7701              	.L626:
1934:src/keys.c    **** 	State2.cmplx = cmpx;
 7702              		.loc 1 1934 2 view .LVU2456
1935:src/keys.c    **** 	return STATE_UNFINISHED;
 7703              		.loc 1 1935 15 is_stmt 0 view .LVU2457
 7704 0b4a 737D     		ldrb	r3, [r6, #21]	@ zero_extendqisi2
1934:src/keys.c    **** 	State2.cmplx = cmpx;
 7705              		.loc 1 1934 14 view .LVU2458
 7706 0b4c 86F80FB0 		strb	fp, [r6, #15]
1935:src/keys.c    **** 	return STATE_UNFINISHED;
 7707              		.loc 1 1935 2 is_stmt 1 view .LVU2459
1935:src/keys.c    **** 	return STATE_UNFINISHED;
 7708              		.loc 1 1935 15 is_stmt 0 view .LVU2460
 7709 0b50 6CF34103 		bfi	r3, ip, #1, #1
 7710 0b54 7375     		strb	r3, [r6, #21]
1936:src/keys.c    **** }
 7711              		.loc 1 1936 2 is_stmt 1 view .LVU2461
1936:src/keys.c    **** }
 7712              		.loc 1 1936 9 is_stmt 0 view .LVU2462
 7713 0b56 4FF0330B 		mov	fp, #51
 7714              	.LVL605:
1936:src/keys.c    **** }
 7715              		.loc 1 1936 9 view .LVU2463
 7716 0b5a FFF7DFBA 		b	.L563
 7717              	.LVL606:
 7718              	.L1105:
1936:src/keys.c    **** }
 7719              		.loc 1 1936 9 view .LVU2464
 7720              	.LBE855:
 7721              	.LBE934:
 7722              	.LBB935:
 7723              	.LBB871:
1326:src/keys.c    **** 	}
 7724              		.loc 1 1326 3 is_stmt 1 view .LVU2465
1326:src/keys.c    **** 	}
 7725              		.loc 1 1326 8 is_stmt 0 view .LVU2466
 7726 0b5e FFF7FEFF 		bl	gtodot_digit
 7727              	.LVL607:
1375:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7728              		.loc 1 1375 2 is_stmt 1 view .LVU2467
1375:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7729              		.loc 1 1375 5 is_stmt 0 view .LVU2468
 7730 0b62 0028     		cmp	r0, #0
1375:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7731              		.loc 1 1375 5 view .LVU2469
 7732 0b64 FFF63BAD 		blt	.L1058
 7733              	.L595:
1376:src/keys.c    **** fin:		set_pc(rawpc);
 7734              		.loc 1 1376 3 is_stmt 1 view .LVU2470
1376:src/keys.c    **** fin:		set_pc(rawpc);
 7735              		.loc 1 1376 11 is_stmt 0 view .LVU2471
 7736 0b68 FFF7FEFF 		bl	find_user_pc
 7737              	.LVL608:
1376:src/keys.c    **** fin:		set_pc(rawpc);
ARM GAS  /tmp/ccizbp1a.s 			page 233


 7738              		.loc 1 1376 11 view .LVU2472
 7739 0b6c 3DE7     		b	.L604
 7740              	.LVL609:
 7741              	.L888:
1376:src/keys.c    **** fin:		set_pc(rawpc);
 7742              		.loc 1 1376 11 view .LVU2473
 7743              	.LBE871:
 7744              	.LBE935:
 7745              	.LBE1191:
 7746              	.LBE1249:
 7747              	.LBB1250:
 7748 0b6e C346     		mov	fp, r8
 7749              	.LVL610:
1376:src/keys.c    **** fin:		set_pc(rawpc);
 7750              		.loc 1 1376 11 view .LVU2474
 7751 0b70 FFF7F5BA 		b	.L836
 7752              	.LVL611:
 7753              	.L624:
1376:src/keys.c    **** fin:		set_pc(rawpc);
 7754              		.loc 1 1376 11 view .LVU2475
 7755              	.LBE1250:
 7756              	.LBB1251:
 7757              	.LBB1192:
 7758              	.LBB936:
 7759              	.LBB856:
1906:src/keys.c    **** 		// Special 0
 7760              		.loc 1 1906 7 is_stmt 1 view .LVU2476
1906:src/keys.c    **** 		// Special 0
 7761              		.loc 1 1906 10 is_stmt 0 view .LVU2477
 7762 0b74 0028     		cmp	r0, #0
 7763 0b76 40F08F87 		bne	.L627
1908:src/keys.c    **** 	}
 7764              		.loc 1 1908 3 is_stmt 1 view .LVU2478
1908:src/keys.c    **** 	}
 7765              		.loc 1 1908 18 is_stmt 0 view .LVU2479
 7766 0b7a BCF1000F 		cmp	ip, #0
 7767 0b7e 14BF     		ite	ne
 7768 0b80 2523     		movne	r3, #37
 7769 0b82 1723     		moveq	r3, #23
1908:src/keys.c    **** 	}
 7770              		.loc 1 1908 47 view .LVU2480
 7771 0b84 9B44     		add	fp, fp, r3
 7772              	.LVL612:
1908:src/keys.c    **** 	}
 7773              		.loc 1 1908 47 view .LVU2481
 7774 0b86 07E5     		b	.L592
 7775              	.LVL613:
 7776              	.L1089:
1908:src/keys.c    **** 	}
 7777              		.loc 1 1908 47 view .LVU2482
 7778              	.LBE856:
 7779              	.LBE936:
 7780              	.LBB937:
 7781              	.LBB653:
 372:src/keys.c    ****       break;
 7782              		.loc 1 372 7 is_stmt 1 view .LVU2483
 372:src/keys.c    ****       break;
ARM GAS  /tmp/ccizbp1a.s 			page 234


 7783              		.loc 1 372 11 is_stmt 0 view .LVU2484
 7784 0b88 6344     		add	r3, r3, ip
 7785              	.LVL614:
 372:src/keys.c    ****       break;
 7786              		.loc 1 372 11 view .LVU2485
 7787 0b8a 93F801B0 		ldrb	fp, [r3, #1]	@ zero_extendqisi2
 7788              	.LVL615:
 373:src/keys.c    ****     }
 7789              		.loc 1 373 7 is_stmt 1 view .LVU2486
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7790              		.loc 1 376 3 view .LVU2487
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7791              		.loc 1 376 6 is_stmt 0 view .LVU2488
 7792 0b8e 1307     		lsls	r3, r2, #28
 7793 0b90 69D5     		bpl	.L1121
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7794              		.loc 1 376 20 view .LVU2489
 7795 0b92 ABF10B03 		sub	r3, fp, #11
 7796 0b96 042B     		cmp	r3, #4
 7797 0b98 3FF6BAAC 		bhi	.L668
 7798              	.LVL616:
 7799              	.L653:
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7800              		.loc 1 376 20 view .LVU2490
 7801              	.LBE653:
 7802              	.LBE937:
2887:src/keys.c    **** 			return STATE_UNFINISHED;
 7803              		.loc 1 2887 3 is_stmt 1 view .LVU2491
2887:src/keys.c    **** 			return STATE_UNFINISHED;
 7804              		.loc 1 2887 7 is_stmt 0 view .LVU2492
 7805 0b9c FFF7FEFF 		bl	is_bad_cmdline
 7806              	.LVL617:
2887:src/keys.c    **** 			return STATE_UNFINISHED;
 7807              		.loc 1 2887 6 view .LVU2493
 7808 0ba0 0446     		mov	r4, r0
 7809 0ba2 0028     		cmp	r0, #0
 7810 0ba4 7FF41BAD 		bne	.L1058
2889:src/keys.c    **** 		init_cat( cat );
 7811              		.loc 1 2889 3 is_stmt 1 view .LVU2494
 7812 0ba8 FFF7FEFF 		bl	init_cat
 7813              	.LVL618:
2890:src/keys.c    **** 		return STATE_UNFINISHED;
 7814              		.loc 1 2890 3 view .LVU2495
 7815 0bac 5846     		mov	r0, fp
 7816 0bae FFF7FEFF 		bl	init_cat
 7817              	.LVL619:
2891:src/keys.c    **** 	}
 7818              		.loc 1 2891 3 view .LVU2496
 7819              	.LBE1192:
 7820              	.LBE1251:
2952:src/keys.c    **** #ifdef DM42
 7821              		.loc 1 2952 7 is_stmt 0 view .LVU2497
 7822 0bb2 A046     		mov	r8, r4
 7823              	.LBB1252:
 7824              	.LBB1193:
2891:src/keys.c    **** 	}
 7825              		.loc 1 2891 10 view .LVU2498
ARM GAS  /tmp/ccizbp1a.s 			page 235


 7826 0bb4 4FF0330B 		mov	fp, #51
 7827 0bb8 FFF7B0BA 		b	.L563
 7828              	.LVL620:
 7829              	.L631:
 7830              	.LBB938:
 7831              	.LBB857:
1916:src/keys.c    **** 		return process_arg(c);
 7832              		.loc 1 1916 3 is_stmt 1 view .LVU2499
 7833              	.LBB852:
 7834              	.LBI852:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 7835              		.loc 1 501 13 view .LVU2500
 7836              	.LBB853:
 502:src/keys.c    **** 		return;
 7837              		.loc 1 502 2 view .LVU2501
 502:src/keys.c    **** 		return;
 7838              		.loc 1 502 6 is_stmt 0 view .LVU2502
 7839 0bbc FFF7FEFF 		bl	is_bad_cmdline
 7840              	.LVL621:
 502:src/keys.c    **** 		return;
 7841              		.loc 1 502 5 view .LVU2503
 7842 0bc0 18B9     		cbnz	r0, .L633
 7843 0bc2 5FFA8AF0 		uxtb	r0, r10
 7844 0bc6 FFF7FEFF 		bl	init_arg.part.0
 7845              	.LVL622:
 7846              	.L633:
 502:src/keys.c    **** 		return;
 7847              		.loc 1 502 5 view .LVU2504
 7848              	.LBE853:
 7849              	.LBE852:
1917:src/keys.c    **** 	}
 7850              		.loc 1 1917 3 is_stmt 1 view .LVU2505
1917:src/keys.c    **** 	}
 7851              		.loc 1 1917 10 is_stmt 0 view .LVU2506
 7852 0bca 2046     		mov	r0, r4
 7853 0bcc FFF7FEFF 		bl	process_arg
 7854              	.LVL623:
 7855 0bd0 8346     		mov	fp, r0
 7856              	.LVL624:
1917:src/keys.c    **** 	}
 7857              		.loc 1 1917 10 view .LVU2507
 7858 0bd2 E1E4     		b	.L592
 7859              	.LVL625:
 7860              	.L1083:
1917:src/keys.c    **** 	}
 7861              		.loc 1 1917 10 view .LVU2508
 7862              	.LBE857:
 7863              	.LBE938:
2861:src/keys.c    **** 		return STATE_UNFINISHED;
 7864              		.loc 1 2861 3 is_stmt 1 view .LVU2509
 7865              	.LBB939:
 7866              	.LBI939:
 109:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 7867              		.loc 1 109 13 view .LVU2510
 7868              	.LBB940:
 110:src/keys.c    **** }
 7869              		.loc 1 110 2 view .LVU2511
ARM GAS  /tmp/ccizbp1a.s 			page 236


 110:src/keys.c    **** }
 7870              		.loc 1 110 16 is_stmt 0 view .LVU2512
 7871 0bd4 337C     		ldrb	r3, [r6, #16]	@ zero_extendqisi2
 7872 0bd6 013B     		subs	r3, r3, #1
 7873 0bd8 18BF     		it	ne
 7874 0bda 0123     		movne	r3, #1
 7875 0bdc 3374     		strb	r3, [r6, #16]
 7876              	.LVL626:
 110:src/keys.c    **** }
 7877              		.loc 1 110 16 view .LVU2513
 7878              	.LBE940:
 7879              	.LBE939:
2862:src/keys.c    **** 	}
 7880              		.loc 1 2862 3 is_stmt 1 view .LVU2514
2862:src/keys.c    **** 	}
 7881              		.loc 1 2862 10 is_stmt 0 view .LVU2515
 7882 0bde 4FF0330B 		mov	fp, #51
 7883 0be2 FFF79BBA 		b	.L563
 7884              	.LVL627:
 7885              	.L614:
 7886              	.LBB941:
 7887              	.LBB695:
1246:src/keys.c    **** 		// fall trough
 7888              		.loc 1 1246 3 is_stmt 1 view .LVU2516
1246:src/keys.c    **** 		// fall trough
 7889              		.loc 1 1246 10 is_stmt 0 view .LVU2517
 7890 0be6 A4F12909 		sub	r9, r4, #41
 7891              	.LVL628:
1246:src/keys.c    **** 		// fall trough
 7892              		.loc 1 1246 10 view .LVU2518
 7893 0bea B9FA89F9 		clz	r9, r9
 7894 0bee 4FEA5919 		lsr	r9, r9, #5
 7895              	.LVL629:
1246:src/keys.c    **** 		// fall trough
 7896              		.loc 1 1246 10 view .LVU2519
 7897 0bf2 0FE7     		b	.L619
 7898              	.LVL630:
 7899              	.L1084:
1246:src/keys.c    **** 		// fall trough
 7900              		.loc 1 1246 10 view .LVU2520
 7901              	.LBE695:
 7902              	.LBE941:
2865:src/keys.c    **** 		return STATE_UNFINISHED;
 7903              		.loc 1 2865 3 is_stmt 1 view .LVU2521
 7904              	.LBB942:
 7905              	.LBI942:
 109:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 7906              		.loc 1 109 13 view .LVU2522
 7907              	.LBB943:
 110:src/keys.c    **** }
 7908              		.loc 1 110 2 view .LVU2523
 110:src/keys.c    **** }
 7909              		.loc 1 110 16 is_stmt 0 view .LVU2524
 7910 0bf4 327C     		ldrb	r2, [r6, #16]	@ zero_extendqisi2
 7911 0bf6 022A     		cmp	r2, #2
 7912 0bf8 18BF     		it	ne
 7913 0bfa 0223     		movne	r3, #2
ARM GAS  /tmp/ccizbp1a.s 			page 237


 7914 0bfc 3374     		strb	r3, [r6, #16]
 7915              	.LVL631:
 110:src/keys.c    **** }
 7916              		.loc 1 110 16 view .LVU2525
 7917              	.LBE943:
 7918              	.LBE942:
2866:src/keys.c    **** 	}
 7919              		.loc 1 2866 3 is_stmt 1 view .LVU2526
2866:src/keys.c    **** 	}
 7920              		.loc 1 2866 10 is_stmt 0 view .LVU2527
 7921 0bfe 4FF0330B 		mov	fp, #51
 7922 0c02 FFF78BBA 		b	.L563
 7923              	.L1148:
 7924 0c06 00BF     		.align	2
 7925              	.L1147:
 7926 0c08 00000000 		.word	StateWhileOn
 7927 0c0c 00000000 		.word	main_ram
 7928 0c10 00000000 		.word	.LANCHOR1
 7929 0c14 00000000 		.word	.LANCHOR0
 7930 0c18 00000000 		.word	.LANCHOR15
 7931 0c1c 00080800 		.word	526336
 7932 0c20 00000000 		.word	.LANCHOR16
 7933 0c24 00000000 		.word	.LANCHOR10
 7934              	.LVL632:
 7935              	.L1098:
2866:src/keys.c    **** 	}
 7936              		.loc 1 2866 10 view .LVU2528
 7937              	.LBE1193:
 7938              	.LBE1252:
3173:src/keys.c    **** 	NonProgrammable = 0;
 7939              		.loc 1 3173 26 view .LVU2529
 7940 0c28 BF4A     		ldr	r2, .L1149
 7941 0c2a 1168     		ldr	r1, [r2]
 7942 0c2c 0029     		cmp	r1, #0
 7943 0c2e 3FF4D0AD 		beq	.L833
 7944              	.LVL633:
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 7945              		.loc 1 3174 2 is_stmt 1 view .LVU2530
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 7946              		.loc 1 3174 18 is_stmt 0 view .LVU2531
 7947 0c32 1360     		str	r3, [r2]
3175:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 7948              		.loc 1 3175 2 is_stmt 1 view .LVU2532
 7949 0c34 27E4     		b	.L828
 7950              	.LVL634:
 7951              	.L1085:
 7952              	.LBB1253:
 7953              	.LBB1194:
2869:src/keys.c    **** 		State2.arrow = 0;
 7954              		.loc 1 2869 3 view .LVU2533
 7955              	.LBB944:
 7956              	.LBI944:
 109:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 7957              		.loc 1 109 13 view .LVU2534
 7958              	.LBB945:
 110:src/keys.c    **** }
 7959              		.loc 1 110 2 view .LVU2535
ARM GAS  /tmp/ccizbp1a.s 			page 238


 110:src/keys.c    **** }
 7960              		.loc 1 110 16 is_stmt 0 view .LVU2536
 7961 0c36 307C     		ldrb	r0, [r6, #16]	@ zero_extendqisi2
 7962 0c38 0328     		cmp	r0, #3
 7963              	.LBE945:
 7964              	.LBE944:
2870:src/keys.c    **** 		return STATE_UNFINISHED;
 7965              		.loc 1 2870 16 view .LVU2537
 7966 0c3a 61F38202 		bfi	r2, r1, #2, #1
 7967              	.LBB948:
 7968              	.LBB946:
 110:src/keys.c    **** }
 7969              		.loc 1 110 16 view .LVU2538
 7970 0c3e 18BF     		it	ne
 7971 0c40 0323     		movne	r3, #3
 7972              	.LBE946:
 7973              	.LBE948:
2870:src/keys.c    **** 		return STATE_UNFINISHED;
 7974              		.loc 1 2870 16 view .LVU2539
 7975 0c42 7275     		strb	r2, [r6, #21]
 7976              	.LBB949:
 7977              	.LBB947:
 110:src/keys.c    **** }
 7978              		.loc 1 110 16 view .LVU2540
 7979 0c44 3374     		strb	r3, [r6, #16]
 7980              	.LVL635:
 110:src/keys.c    **** }
 7981              		.loc 1 110 16 view .LVU2541
 7982              	.LBE947:
 7983              	.LBE949:
2870:src/keys.c    **** 		return STATE_UNFINISHED;
 7984              		.loc 1 2870 3 is_stmt 1 view .LVU2542
2871:src/keys.c    **** 	}
 7985              		.loc 1 2871 3 view .LVU2543
2871:src/keys.c    **** 	}
 7986              		.loc 1 2871 10 is_stmt 0 view .LVU2544
 7987 0c46 4FF0330B 		mov	fp, #51
 7988 0c4a FFF767BA 		b	.L563
 7989              	.LVL636:
 7990              	.L1115:
 7991              	.LBB950:
 7992              	.LBB897:
2462:src/keys.c    **** 			n = max;
 7993              		.loc 1 2462 3 is_stmt 1 view .LVU2545
2462:src/keys.c    **** 			n = max;
 7994              		.loc 1 2462 6 is_stmt 0 view .LVU2546
 7995 0c4e 191F     		subs	r1, r3, #4
 7996              	.LVL637:
2462:src/keys.c    **** 			n = max;
 7997              		.loc 1 2462 6 view .LVU2547
 7998 0c50 012B     		cmp	r3, #1
 7999 0c52 18BF     		it	ne
 8000 0c54 0A46     		movne	r2, r1
 8001              	.LVL638:
2462:src/keys.c    **** 			n = max;
 8002              		.loc 1 2462 6 view .LVU2548
 8003 0c56 20E7     		b	.L638
ARM GAS  /tmp/ccizbp1a.s 			page 239


 8004              	.LVL639:
 8005              	.L1106:
2462:src/keys.c    **** 			n = max;
 8006              		.loc 1 2462 6 view .LVU2549
 8007              	.LBE897:
 8008              	.LBE950:
 8009              	.LBB951:
 8010              	.LBB872:
1329:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8011              		.loc 1 1329 44 is_stmt 1 view .LVU2550
1329:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8012              		.loc 1 1329 52 is_stmt 0 view .LVU2551
 8013 0c58 0120     		movs	r0, #1
 8014 0c5a FFF7FEFF 		bl	gtodot_digit
 8015              	.LVL640:
1375:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8016              		.loc 1 1375 2 is_stmt 1 view .LVU2552
 8017              	.LBE872:
 8018              	.LBE951:
2846:src/keys.c    **** 
 8019              		.loc 1 2846 10 is_stmt 0 view .LVU2553
 8020 0c5e 4FF0330B 		mov	fp, #51
 8021 0c62 FFF75BBA 		b	.L563
 8022              	.LVL641:
 8023              	.L1121:
2886:src/keys.c    **** 		if (is_bad_cmdline())
 8024              		.loc 1 2886 2 is_stmt 1 view .LVU2554
2886:src/keys.c    **** 		if (is_bad_cmdline())
 8025              		.loc 1 2886 5 is_stmt 0 view .LVU2555
 8026 0c66 BBF1000F 		cmp	fp, #0
 8027 0c6a 97D1     		bne	.L653
 8028 0c6c FFF770BB 		b	.L667
 8029              	.LVL642:
 8030              	.L1107:
 8031              	.LBB952:
 8032              	.LBB873:
1330:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 8033              		.loc 1 1330 44 is_stmt 1 view .LVU2556
1330:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 8034              		.loc 1 1330 52 is_stmt 0 view .LVU2557
 8035 0c70 0220     		movs	r0, #2
 8036 0c72 FFF7FEFF 		bl	gtodot_digit
 8037              	.LVL643:
1375:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8038              		.loc 1 1375 2 is_stmt 1 view .LVU2558
 8039              	.LBE873:
 8040              	.LBE952:
2846:src/keys.c    **** 
 8041              		.loc 1 2846 10 is_stmt 0 view .LVU2559
 8042 0c76 4FF0330B 		mov	fp, #51
 8043 0c7a FFF74FBA 		b	.L563
 8044              	.LVL644:
 8045              	.L625:
 8046              	.LBB953:
 8047              	.LBB858:
1904:src/keys.c    **** 	}
 8048              		.loc 1 1904 3 is_stmt 1 view .LVU2560
ARM GAS  /tmp/ccizbp1a.s 			page 240


1904:src/keys.c    **** 	}
 8049              		.loc 1 1904 10 is_stmt 0 view .LVU2561
 8050 0c7e 0AF1200A 		add	r10, r10, #32
 8051 0c82 40EA0A20 		orr	r0, r0, r10, lsl #8
 8052 0c86 8346     		mov	fp, r0
 8053              	.LVL645:
1904:src/keys.c    **** 	}
 8054              		.loc 1 1904 10 view .LVU2562
 8055 0c88 FFF7F6BB 		b	.L618
 8056              	.LVL646:
 8057              	.L1119:
1904:src/keys.c    **** 	}
 8058              		.loc 1 1904 10 view .LVU2563
 8059              	.LBE858:
 8060              	.LBE953:
 8061              	.LBB954:
 8062              	.LBB930:
1285:src/keys.c    **** 
 8063              		.loc 1 1285 3 is_stmt 1 view .LVU2564
1285:src/keys.c    **** 
 8064              		.loc 1 1285 25 is_stmt 0 view .LVU2565
 8065 0c8c A74A     		ldr	r2, .L1149+4
 8066 0c8e 0AEB4303 		add	r3, r10, r3, lsl #1
 8067 0c92 32F813B0 		ldrh	fp, [r2, r3, lsl #1]
 8068              	.LVL647:
1285:src/keys.c    **** 
 8069              		.loc 1 1285 25 view .LVU2566
 8070 0c96 7FE4     		b	.L592
 8071              	.LVL648:
 8072              	.L1116:
1285:src/keys.c    **** 
 8073              		.loc 1 1285 25 view .LVU2567
 8074              	.LBE930:
 8075              	.LBE954:
 8076              	.LBB955:
 8077              	.LBB898:
2466:src/keys.c    **** 			n = -2;
 8078              		.loc 1 2466 3 is_stmt 1 view .LVU2568
2466:src/keys.c    **** 			n = -2;
 8079              		.loc 1 2466 6 is_stmt 0 view .LVU2569
 8080 0c98 023B     		subs	r3, r3, #2
 8081              	.LVL649:
2467:src/keys.c    **** 	}
 8082              		.loc 1 2467 6 view .LVU2570
 8083 0c9a 9342     		cmp	r3, r2
 8084 0c9c D4BF     		ite	le
 8085 0c9e 1A46     		movle	r2, r3
 8086              	.LVL650:
2467:src/keys.c    **** 	}
 8087              		.loc 1 2467 6 view .LVU2571
 8088 0ca0 6FF00102 		mvngt	r2, #1
 8089 0ca4 F9E6     		b	.L638
 8090              	.LVL651:
 8091              	.L1120:
2467:src/keys.c    **** 	}
 8092              		.loc 1 2467 6 view .LVU2572
 8093              	.LBE898:
ARM GAS  /tmp/ccizbp1a.s 			page 241


 8094              	.LBE955:
 8095              	.LBB956:
 8096              	.LBB654:
 263:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 8097              		.loc 1 263 74 view .LVU2573
 8098 0ca6 7369     		ldr	r3, [r6, #20]
 8099 0ca8 A149     		ldr	r1, .L1149+8
 8100 0caa 0B42     		tst	r3, r1
 8101 0cac 3FF476AF 		beq	.L653
 266:src/keys.c    ****     /*
 8102              		.loc 1 266 3 is_stmt 1 view .LVU2574
 266:src/keys.c    ****     /*
 8103              		.loc 1 266 23 is_stmt 0 view .LVU2575
 8104 0cb0 A049     		ldr	r1, .L1149+12
 266:src/keys.c    ****     /*
 8105              		.loc 1 266 6 view .LVU2576
 8106 0cb2 0B42     		tst	r3, r1
 8107 0cb4 3FF42EAB 		beq	.L848
 8108 0cb8 32E7     		b	.L655
 8109              	.LVL652:
 8110              	.L862:
 8111              	.LBB648:
 322:src/keys.c    **** #ifndef WINGUI
 8112              		.loc 1 322 8 view .LVU2577
 8113 0cba 9F4B     		ldr	r3, .L1149+16
 328:src/keys.c    ****   }
 8114              		.loc 1 328 9 view .LVU2578
 8115 0cbc 0C21     		movs	r1, #12
 324:src/keys.c    **** #else
 8116              		.loc 1 324 27 view .LVU2579
 8117 0cbe 4FF0010C 		mov	ip, #1
 8118 0cc2 FFF736BB 		b	.L658
 8119              	.LVL653:
 8120              	.L1108:
 324:src/keys.c    **** #else
 8121              		.loc 1 324 27 view .LVU2580
 8122              	.LBE648:
 8123              	.LBE654:
 8124              	.LBE956:
 8125              	.LBB957:
 8126              	.LBB874:
1331:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 8127              		.loc 1 1331 44 is_stmt 1 view .LVU2581
1331:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 8128              		.loc 1 1331 52 is_stmt 0 view .LVU2582
 8129 0cc6 0320     		movs	r0, #3
 8130 0cc8 FFF7FEFF 		bl	gtodot_digit
 8131              	.LVL654:
1375:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8132              		.loc 1 1375 2 is_stmt 1 view .LVU2583
 8133              	.LBE874:
 8134              	.LBE957:
2846:src/keys.c    **** 
 8135              		.loc 1 2846 10 is_stmt 0 view .LVU2584
 8136 0ccc 4FF0330B 		mov	fp, #51
 8137 0cd0 FFF724BA 		b	.L563
 8138              	.LVL655:
ARM GAS  /tmp/ccizbp1a.s 			page 242


 8139              	.L1091:
2901:src/keys.c    **** 
 8140              		.loc 1 2901 3 is_stmt 1 view .LVU2585
 8141              	.LBB958:
 8142              	.LBI958:
2536:src/keys.c    **** 	unsigned int pc = State2.digval;
 8143              		.loc 1 2536 12 view .LVU2586
 8144              	.LBB959:
2537:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 8145              		.loc 1 2537 2 view .LVU2587
2539:src/keys.c    **** 	const int opcode = getprog(pc);
 8146              		.loc 1 2539 27 is_stmt 0 view .LVU2588
 8147 0cd4 262C     		cmp	r4, #38
2537:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 8148              		.loc 1 2537 15 view .LVU2589
 8149 0cd6 B6F808A0 		ldrh	r10, [r6, #8]
 8150              	.LVL656:
2538:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
 8151              		.loc 1 2538 2 is_stmt 1 view .LVU2590
2539:src/keys.c    **** 	const int opcode = getprog(pc);
 8152              		.loc 1 2539 27 is_stmt 0 view .LVU2591
 8153 0cda 00F07183 		beq	.L867
 8154              	.LVL657:
 8155              	.LBB960:
 8156              	.LBI960:
 198:src/keys.c    **** {
 8157              		.loc 1 198 14 is_stmt 1 view .LVU2592
 8158              	.LBB961:
 200:src/keys.c    ****     // K00 - K05
 8159              		.loc 1 200 3 view .LVU2593
 221:src/keys.c    **** }
 8160              		.loc 1 221 3 view .LVU2594
 8161              	.LBB962:
 8162              	.LBI962:
 119:src/keys.c    **** {
 8163              		.loc 1 119 12 view .LVU2595
 8164              	.LBB963:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8165              		.loc 1 121 2 view .LVU2596
 131:src/keys.c    **** }
 8166              		.loc 1 131 2 view .LVU2597
 131:src/keys.c    **** }
 8167              		.loc 1 131 23 is_stmt 0 view .LVU2598
 8168 0cde 974B     		ldr	r3, .L1149+20
 8169              	.LBE963:
 8170              	.LBE962:
 221:src/keys.c    **** }
 8171              		.loc 1 221 28 view .LVU2599
 8172 0ce0 974A     		ldr	r2, .L1149+24
 8173              	.LBB965:
 8174              	.LBB964:
 131:src/keys.c    **** }
 8175              		.loc 1 131 23 view .LVU2600
 8176 0ce2 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 8177              	.LBE964:
 8178              	.LBE965:
 221:src/keys.c    **** }
ARM GAS  /tmp/ccizbp1a.s 			page 243


 8179              		.loc 1 221 10 view .LVU2601
 8180 0ce4 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
 8181              	.LBE961:
 8182              	.LBE960:
2539:src/keys.c    **** 	const int opcode = getprog(pc);
 8183              		.loc 1 2539 27 view .LVU2602
 8184 0ce8 2BF0800B 		bic	fp, fp, #128
 8185              	.L682:
 8186              	.LVL658:
2540:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 8187              		.loc 1 2540 2 is_stmt 1 view .LVU2603
2540:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 8188              		.loc 1 2540 21 is_stmt 0 view .LVU2604
 8189 0cec 5046     		mov	r0, r10
 8190 0cee FFF7FEFF 		bl	getprog
 8191              	.LVL659:
2541:src/keys.c    **** 	const int direct = State2.runmode;
 8192              		.loc 1 2541 2 is_stmt 1 view .LVU2605
2541:src/keys.c    **** 	const int direct = State2.runmode;
 8193              		.loc 1 2541 20 is_stmt 0 view .LVU2606
 8194 0cf2 00F47040 		and	r0, r0, #61440
 8195              	.LVL660:
2541:src/keys.c    **** 	const int direct = State2.runmode;
 8196              		.loc 1 2541 63 view .LVU2607
 8197 0cf6 B0F5704F 		cmp	r0, #61440
 8198 0cfa 00F06A84 		beq	.L1122
 8199 0cfe 0023     		movs	r3, #0
 8200              	.L683:
 8201              	.LVL661:
2542:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8202              		.loc 1 2542 2 is_stmt 1 view .LVU2608
2542:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8203              		.loc 1 2542 27 is_stmt 0 view .LVU2609
 8204 0d00 B27D     		ldrb	r2, [r6, #22]	@ zero_extendqisi2
 8205 0d02 0193     		str	r3, [sp, #4]
 8206              	.LVL662:
2542:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8207              		.loc 1 2542 27 view .LVU2610
 8208 0d04 C2F38012 		ubfx	r2, r2, #6, #1
 8209 0d08 0092     		str	r2, [sp]
 8210              	.LVL663:
2543:src/keys.c    **** 	int op = STATE_UNFINISHED;
 8211              		.loc 1 2543 2 is_stmt 1 view .LVU2611
 8212              	.LBB966:
 8213              	.LBI966:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 8214              		.loc 1 102 13 view .LVU2612
 8215              	.LBE966:
 8216              	.LBE959:
 8217              	.LBE958:
 8218              	.LBE1194:
 8219              	.LBE1253:
 103:src/keys.c    **** }
 8220              		.loc 1 103 2 view .LVU2613
 8221              	.LBB1254:
 8222              	.LBB1195:
 8223              	.LBB993:
ARM GAS  /tmp/ccizbp1a.s 			page 244


 8224              	.LBB985:
 8225              	.LBB973:
 8226              	.LBB967:
 8227              	.LBI967:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 8228              		.loc 1 92 20 view .LVU2614
 8229              	.LBB968:
  93:src/keys.c    **** 	State2.shifts = shift;
 8230              		.loc 1 93 2 view .LVU2615
 8231              	.LBB969:
 8232              	.LBI969:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 8233              		.loc 1 84 13 view .LVU2616
 8234              	.LBB970:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8235              		.loc 1 85 2 view .LVU2617
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8236              		.loc 1 85 18 is_stmt 0 view .LVU2618
 8237 0d0a FFF7FEFF 		bl	shift_down
 8238              	.LVL664:
  86:src/keys.c    **** }
 8239              		.loc 1 86 2 is_stmt 1 view .LVU2619
  86:src/keys.c    **** }
 8240              		.loc 1 86 52 is_stmt 0 view .LVU2620
 8241 0d0e DDE90023 		ldrd	r2, r3, [sp]
 8242 0d12 00B9     		cbnz	r0, .L684
 8243 0d14 307C     		ldrb	r0, [r6, #16]	@ zero_extendqisi2
 8244              	.LVL665:
 8245              	.L684:
  86:src/keys.c    **** }
 8246              		.loc 1 86 52 view .LVU2621
 8247              	.LBE970:
 8248              	.LBE969:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8249              		.loc 1 94 2 is_stmt 1 view .LVU2622
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8250              		.loc 1 94 16 is_stmt 0 view .LVU2623
 8251 0d16 0021     		movs	r1, #0
 8252              	.LBE968:
 8253              	.LBE967:
 8254              	.LBE973:
2546:src/keys.c    **** 		// Digits take you to that segment
 8255              		.loc 1 2546 5 view .LVU2624
 8256 0d18 BBF1020F 		cmp	fp, #2
 8257              	.LBB974:
 8258              	.LBB972:
 8259              	.LBB971:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8260              		.loc 1 94 16 view .LVU2625
 8261 0d1c 3174     		strb	r1, [r6, #16]
  95:src/keys.c    **** 	return r;
 8262              		.loc 1 95 2 is_stmt 1 view .LVU2626
  95:src/keys.c    **** 	return r;
 8263              		.loc 1 95 19 is_stmt 0 view .LVU2627
 8264 0d1e 7173     		strb	r1, [r6, #13]
  96:src/keys.c    **** }
 8265              		.loc 1 96 2 is_stmt 1 view .LVU2628
ARM GAS  /tmp/ccizbp1a.s 			page 245


 8266              	.LVL666:
  96:src/keys.c    **** }
 8267              		.loc 1 96 2 is_stmt 0 view .LVU2629
 8268              	.LBE971:
 8269              	.LBE972:
 8270              	.LBE974:
2544:src/keys.c    **** 
 8271              		.loc 1 2544 2 is_stmt 1 view .LVU2630
2546:src/keys.c    **** 		// Digits take you to that segment
 8272              		.loc 1 2546 2 view .LVU2631
2546:src/keys.c    **** 		// Digits take you to that segment
 8273              		.loc 1 2546 5 is_stmt 0 view .LVU2632
 8274 0d20 40F20885 		bls	.L1123
2555:src/keys.c    **** 
 8275              		.loc 1 2555 2 is_stmt 1 view .LVU2633
2555:src/keys.c    **** 
 8276              		.loc 1 2555 12 is_stmt 0 view .LVU2634
 8277 0d24 44EA0024 		orr	r4, r4, r0, lsl #8
2555:src/keys.c    **** 
 8278              		.loc 1 2555 2 view .LVU2635
 8279 0d28 272C     		cmp	r4, #39
 8280 0d2a 00F3AE80 		bgt	.L687
 8281 0d2e 042C     		cmp	r4, #4
 8282 0d30 7FF755AC 		ble	.L1058
 8283 0d34 053C     		subs	r4, r4, #5
 8284 0d36 222C     		cmp	r4, #34
 8285 0d38 3FF651AC 		bhi	.L1058
 8286 0d3c 01A1     		adr	r1, .L695
 8287 0d3e 51F824F0 		ldr	pc, [r1, r4, lsl #2]
 8288 0d42 00BF     		.p2align 2
 8289              	.L695:
 8290 0d44 7F0E0000 		.word	.L700+1
 8291 0d48 0F0E0000 		.word	.L870+1
 8292 0d4c 0F0E0000 		.word	.L870+1
 8293 0d50 DF050000 		.word	.L1058+1
 8294 0d54 DF050000 		.word	.L1058+1
 8295 0d58 DF050000 		.word	.L1058+1
 8296 0d5c DF050000 		.word	.L1058+1
 8297 0d60 E30D0000 		.word	.L1049+1
 8298 0d64 DF050000 		.word	.L1058+1
 8299 0d68 DF050000 		.word	.L1058+1
 8300 0d6c DF050000 		.word	.L1058+1
 8301 0d70 6B0E0000 		.word	.L698+1
 8302 0d74 DF050000 		.word	.L1058+1
 8303 0d78 590E0000 		.word	.L697+1
 8304 0d7c DF050000 		.word	.L1058+1
 8305 0d80 DF050000 		.word	.L1058+1
 8306 0d84 DF050000 		.word	.L1058+1
 8307 0d88 DF050000 		.word	.L1058+1
 8308 0d8c DF050000 		.word	.L1058+1
 8309 0d90 210E0000 		.word	.L696+1
 8310 0d94 DF050000 		.word	.L1058+1
 8311 0d98 DF050000 		.word	.L1058+1
 8312 0d9c DF050000 		.word	.L1058+1
 8313 0da0 DF050000 		.word	.L1058+1
 8314 0da4 DF050000 		.word	.L1058+1
 8315 0da8 DF050000 		.word	.L1058+1
ARM GAS  /tmp/ccizbp1a.s 			page 246


 8316 0dac DF050000 		.word	.L1058+1
 8317 0db0 DF050000 		.word	.L1058+1
 8318 0db4 DF050000 		.word	.L1058+1
 8319 0db8 DF050000 		.word	.L1058+1
 8320 0dbc DF050000 		.word	.L1058+1
 8321 0dc0 DF050000 		.word	.L1058+1
 8322 0dc4 DF050000 		.word	.L1058+1
 8323 0dc8 DF050000 		.word	.L1058+1
 8324 0dcc 350E0000 		.word	.L694+1
 8325              		.p2align 1
 8326              	.L701:
 8327 0dd0 40F22733 		movw	r3, #807
 8328 0dd4 9C42     		cmp	r4, r3
 8329 0dd6 7FF402AC 		bne	.L1058
2625:src/keys.c    **** 		goto set_pc_and_exit;
 8330              		.loc 1 2625 3 is_stmt 1 view .LVU2636
2625:src/keys.c    **** 		goto set_pc_and_exit;
 8331              		.loc 1 2625 18 is_stmt 0 view .LVU2637
 8332 0dda B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 8333 0ddc 61F38613 		bfi	r3, r1, #6, #1
 8334 0de0 B375     		strb	r3, [r6, #22]
 8335              	.L1049:
2626:src/keys.c    **** 
 8336              		.loc 1 2626 3 is_stmt 1 view .LVU2638
2544:src/keys.c    **** 
 8337              		.loc 1 2544 6 is_stmt 0 view .LVU2639
 8338 0de2 4FF0330B 		mov	fp, #51
 8339              	.LVL667:
 8340              	.L692:
2577:src/keys.c    **** 		break;
 8341              		.loc 1 2577 3 is_stmt 1 view .LVU2640
 8342 0de6 5046     		mov	r0, r10
 8343              	.LVL668:
2577:src/keys.c    **** 		break;
 8344              		.loc 1 2577 3 is_stmt 0 view .LVU2641
 8345 0de8 FFF7FEFF 		bl	set_pc
 8346              	.LVL669:
2578:src/keys.c    **** 
 8347              		.loc 1 2578 3 is_stmt 1 view .LVU2642
 8348              	.L704:
2631:src/keys.c    **** 	State2.labellist = 0;
 8349              		.loc 1 2631 2 view .LVU2643
2632:src/keys.c    **** 	return check_confirm(op);
 8350              		.loc 1 2632 19 is_stmt 0 view .LVU2644
 8351 0dec F17D     		ldrb	r1, [r6, #23]	@ zero_extendqisi2
2631:src/keys.c    **** 	State2.labellist = 0;
 8352              		.loc 1 2631 16 view .LVU2645
 8353 0dee 0022     		movs	r2, #0
 8354              	.LBB975:
 8355              	.LBB976:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8356              		.loc 1 620 5 view .LVU2646
 8357 0df0 CBF30723 		ubfx	r3, fp, #8, #8
 8358              	.LBE976:
 8359              	.LBE975:
2632:src/keys.c    **** 	return check_confirm(op);
 8360              		.loc 1 2632 19 view .LVU2647
ARM GAS  /tmp/ccizbp1a.s 			page 247


 8361 0df4 62F38201 		bfi	r1, r2, #2, #1
 8362              	.LBB981:
 8363              	.LBB977:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8364              		.loc 1 620 5 view .LVU2648
 8365 0df8 012B     		cmp	r3, #1
 8366              	.LBE977:
 8367              	.LBE981:
2632:src/keys.c    **** 	return check_confirm(op);
 8368              		.loc 1 2632 19 view .LVU2649
 8369 0dfa F175     		strb	r1, [r6, #23]
2631:src/keys.c    **** 	State2.labellist = 0;
 8370              		.loc 1 2631 16 view .LVU2650
 8371 0dfc 3281     		strh	r2, [r6, #8]	@ movhi
2632:src/keys.c    **** 	return check_confirm(op);
 8372              		.loc 1 2632 2 is_stmt 1 view .LVU2651
2633:src/keys.c    **** }
 8373              		.loc 1 2633 2 view .LVU2652
 8374              	.LVL670:
 8375              	.LBB982:
 8376              	.LBI975:
 619:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8377              		.loc 1 619 12 view .LVU2653
 8378              	.LBB978:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8379              		.loc 1 620 2 view .LVU2654
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8380              		.loc 1 620 5 is_stmt 0 view .LVU2655
 8381 0dfe 7FF4CBAB 		bne	.L592
 8382              	.LVL671:
 8383              	.L847:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8384              		.loc 1 620 5 view .LVU2656
 8385              	.LBE978:
 8386              	.LBE982:
 8387              	.LBE985:
 8388              	.LBE993:
 8389              	.LBB994:
 8390              	.LBB995:
 8391              	.LBB996:
 8392              	.LBB997:
 8393 0e02 5846     		mov	r0, fp
 8394 0e04 FFF7FEFF 		bl	check_confirm.part.0
 8395              	.LVL672:
 8396 0e08 8346     		mov	fp, r0
 8397              	.LVL673:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8398              		.loc 1 620 5 view .LVU2657
 8399 0e0a FFF7C5BB 		b	.L592
 8400              	.LVL674:
 8401              	.L870:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8402              		.loc 1 620 5 view .LVU2658
 8403              	.LBE997:
 8404              	.LBE996:
 8405              	.LBE995:
 8406              	.LBE994:
ARM GAS  /tmp/ccizbp1a.s 			page 248


 8407              	.LBB1034:
 8408              	.LBB986:
2590:src/keys.c    **** #endif	    
 8409              		.loc 1 2590 13 view .LVU2659
 8410 0e0e 4FF4807B 		mov	fp, #256
 8411              	.LVL675:
2590:src/keys.c    **** #endif	    
 8412              		.loc 1 2590 13 view .LVU2660
 8413 0e12 E8E7     		b	.L692
 8414              	.LVL676:
 8415              	.L689:
2562:src/keys.c    **** 	case K_DOWN:				// Find next label
 8416              		.loc 1 2562 3 is_stmt 1 view .LVU2661
2562:src/keys.c    **** 	case K_DOWN:				// Find next label
 8417              		.loc 1 2562 8 is_stmt 0 view .LVU2662
 8418 0e14 5046     		mov	r0, r10
 8419              	.LVL677:
2562:src/keys.c    **** 	case K_DOWN:				// Find next label
 8420              		.loc 1 2562 8 view .LVU2663
 8421 0e16 0122     		movs	r2, #1
 8422 0e18 0021     		movs	r1, #0
 8423 0e1a FFF7FEFF 		bl	advance_to_next_label
 8424              	.LVL678:
 8425 0e1e 8246     		mov	r10, r0
 8426              	.LVL679:
 8427              	.L696:
2565:src/keys.c    **** 		return STATE_UNFINISHED;
 8428              		.loc 1 2565 3 is_stmt 1 view .LVU2664
2565:src/keys.c    **** 		return STATE_UNFINISHED;
 8429              		.loc 1 2565 19 is_stmt 0 view .LVU2665
 8430 0e20 5046     		mov	r0, r10
 8431 0e22 0022     		movs	r2, #0
 8432 0e24 0121     		movs	r1, #1
 8433 0e26 FFF7FEFF 		bl	advance_to_next_label
 8434              	.LVL680:
2566:src/keys.c    **** 
 8435              		.loc 1 2566 10 view .LVU2666
 8436 0e2a 4FF0330B 		mov	fp, #51
 8437              	.LVL681:
2565:src/keys.c    **** 		return STATE_UNFINISHED;
 8438              		.loc 1 2565 17 view .LVU2667
 8439 0e2e 3081     		strh	r0, [r6, #8]	@ movhi
2566:src/keys.c    **** 
 8440              		.loc 1 2566 3 is_stmt 1 view .LVU2668
2566:src/keys.c    **** 
 8441              		.loc 1 2566 10 is_stmt 0 view .LVU2669
 8442 0e30 FFF774B9 		b	.L563
 8443              	.LVL682:
 8444              	.L694:
2617:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8445              		.loc 1 2617 3 is_stmt 1 view .LVU2670
2617:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8446              		.loc 1 2617 6 is_stmt 0 view .LVU2671
 8447 0e34 002A     		cmp	r2, #0
 8448 0e36 3FF4D2AB 		beq	.L1058
2617:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8449              		.loc 1 2617 14 view .LVU2672
ARM GAS  /tmp/ccizbp1a.s 			page 249


 8450 0e3a 002B     		cmp	r3, #0
 8451 0e3c 3FF4CFAB 		beq	.L1058
2618:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
 8452              		.loc 1 2618 4 is_stmt 1 view .LVU2673
 8453 0e40 5146     		mov	r1, r10
 8454 0e42 0120     		movs	r0, #1
 8455              	.LVL683:
2618:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
 8456              		.loc 1 2618 4 is_stmt 0 view .LVU2674
 8457 0e44 FFF7FEFF 		bl	cmdgtocommon
 8458              	.LVL684:
2619:src/keys.c    **** 			break;
 8459              		.loc 1 2619 4 is_stmt 1 view .LVU2675
2620:src/keys.c    **** 		}
 8460              		.loc 1 2620 4 view .LVU2676
2631:src/keys.c    **** 	State2.labellist = 0;
 8461              		.loc 1 2631 2 view .LVU2677
2632:src/keys.c    **** 	return check_confirm(op);
 8462              		.loc 1 2632 19 is_stmt 0 view .LVU2678
 8463 0e48 F27D     		ldrb	r2, [r6, #23]	@ zero_extendqisi2
2631:src/keys.c    **** 	State2.labellist = 0;
 8464              		.loc 1 2631 16 view .LVU2679
 8465 0e4a 0023     		movs	r3, #0
2632:src/keys.c    **** 	return check_confirm(op);
 8466              		.loc 1 2632 19 view .LVU2680
 8467 0e4c 63F38202 		bfi	r2, r3, #2, #1
 8468 0e50 F275     		strb	r2, [r6, #23]
2631:src/keys.c    **** 	State2.labellist = 0;
 8469              		.loc 1 2631 16 view .LVU2681
 8470 0e52 3381     		strh	r3, [r6, #8]	@ movhi
2632:src/keys.c    **** 	return check_confirm(op);
 8471              		.loc 1 2632 2 is_stmt 1 view .LVU2682
2633:src/keys.c    **** }
 8472              		.loc 1 2633 2 view .LVU2683
 8473              	.LVL685:
 8474              	.LBB983:
 619:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8475              		.loc 1 619 12 view .LVU2684
 8476              	.LBB979:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8477              		.loc 1 620 2 view .LVU2685
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8478              		.loc 1 620 2 is_stmt 0 view .LVU2686
 8479              	.LBE979:
 8480              	.LBE983:
 8481              	.LBE986:
 8482              	.LBE1034:
 8483              	.LBE1195:
 8484              	.LBE1254:
3137:src/keys.c    ****     case STATE_SST:
 8485              		.loc 1 3137 5 is_stmt 1 view .LVU2687
 8486 0e54 FFF75CB9 		b	.L572
 8487              	.LVL686:
 8488              	.L697:
 8489              	.LBB1255:
 8490              	.LBB1196:
 8491              	.LBB1035:
ARM GAS  /tmp/ccizbp1a.s 			page 250


 8492              	.LBB987:
2569:src/keys.c    **** 		return STATE_UNFINISHED;
 8493              		.loc 1 2569 3 view .LVU2688
2569:src/keys.c    **** 		return STATE_UNFINISHED;
 8494              		.loc 1 2569 19 is_stmt 0 view .LVU2689
 8495 0e58 5046     		mov	r0, r10
 8496              	.LVL687:
2569:src/keys.c    **** 		return STATE_UNFINISHED;
 8497              		.loc 1 2569 19 view .LVU2690
 8498 0e5a 0021     		movs	r1, #0
 8499 0e5c FFF7FEFF 		bl	advance_to_previous_label
 8500              	.LVL688:
2570:src/keys.c    **** 
 8501              		.loc 1 2570 10 view .LVU2691
 8502 0e60 4FF0330B 		mov	fp, #51
 8503              	.LVL689:
2569:src/keys.c    **** 		return STATE_UNFINISHED;
 8504              		.loc 1 2569 17 view .LVU2692
 8505 0e64 3081     		strh	r0, [r6, #8]	@ movhi
2570:src/keys.c    **** 
 8506              		.loc 1 2570 3 is_stmt 1 view .LVU2693
2570:src/keys.c    **** 
 8507              		.loc 1 2570 10 is_stmt 0 view .LVU2694
 8508 0e66 FFF759B9 		b	.L563
 8509              	.LVL690:
 8510              	.L698:
2631:src/keys.c    **** 	State2.labellist = 0;
 8511              		.loc 1 2631 2 is_stmt 1 view .LVU2695
2632:src/keys.c    **** 	return check_confirm(op);
 8512              		.loc 1 2632 19 is_stmt 0 view .LVU2696
 8513 0e6a F27D     		ldrb	r2, [r6, #23]	@ zero_extendqisi2
2631:src/keys.c    **** 	State2.labellist = 0;
 8514              		.loc 1 2631 16 view .LVU2697
 8515 0e6c 0023     		movs	r3, #0
2632:src/keys.c    **** 	return check_confirm(op);
 8516              		.loc 1 2632 19 view .LVU2698
 8517 0e6e 63F38202 		bfi	r2, r3, #2, #1
 8518 0e72 F275     		strb	r2, [r6, #23]
2631:src/keys.c    **** 	State2.labellist = 0;
 8519              		.loc 1 2631 16 view .LVU2699
 8520 0e74 3381     		strh	r3, [r6, #8]	@ movhi
2632:src/keys.c    **** 	return check_confirm(op);
 8521              		.loc 1 2632 2 is_stmt 1 view .LVU2700
2633:src/keys.c    **** }
 8522              		.loc 1 2633 2 view .LVU2701
 8523              	.LVL691:
 8524              	.LBB984:
 619:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8525              		.loc 1 619 12 view .LVU2702
 8526              	.LBB980:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8527              		.loc 1 620 2 view .LVU2703
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8528              		.loc 1 620 2 is_stmt 0 view .LVU2704
 8529              	.LBE980:
 8530              	.LBE984:
 8531              	.LBE987:
ARM GAS  /tmp/ccizbp1a.s 			page 251


 8532              	.LBE1035:
 8533              	.LBE1196:
 8534              	.LBE1255:
3137:src/keys.c    ****     case STATE_SST:
 8535              		.loc 1 3137 5 is_stmt 1 view .LVU2705
 8536              	.LBB1256:
 8537              	.LBB1197:
 8538              	.LBB1036:
 8539              	.LBB988:
2544:src/keys.c    **** 
 8540              		.loc 1 2544 6 is_stmt 0 view .LVU2706
 8541 0e76 4FF0330B 		mov	fp, #51
 8542              	.LVL692:
2544:src/keys.c    **** 
 8543              		.loc 1 2544 6 view .LVU2707
 8544 0e7a FFF74FB9 		b	.L563
 8545              	.LVL693:
 8546              	.L700:
 8547              	.L705:
2595:src/keys.c    **** 		goto xeq_or_gto;
 8548              		.loc 1 2595 3 is_stmt 1 view .LVU2708
2595:src/keys.c    **** 		goto xeq_or_gto;
 8549              		.loc 1 2595 6 is_stmt 0 view .LVU2709
 8550 0e7e 03F5007B 		add	fp, r3, #512
 8551              	.LVL694:
2596:src/keys.c    **** 
 8552              		.loc 1 2596 3 is_stmt 1 view .LVU2710
2601:src/keys.c    **** 			break;
 8553              		.loc 1 2601 3 view .LVU2711
2601:src/keys.c    **** 			break;
 8554              		.loc 1 2601 6 is_stmt 0 view .LVU2712
 8555 0e82 002B     		cmp	r3, #0
 8556 0e84 B2D1     		bne	.L704
 8557 0e86 FFF7AABB 		b	.L1058
 8558              	.LVL695:
 8559              	.L687:
2555:src/keys.c    **** 
 8560              		.loc 1 2555 2 view .LVU2713
 8561 0e8a B4F58C7F 		cmp	r4, #280
 8562 0e8e 9FDC     		bgt	.L701
 8563 0e90 B4F5827F 		cmp	r4, #260
 8564 0e94 7FF7A3AB 		ble	.L1058
 8565 0e98 6FF4827C 		mvn	ip, #260
 8566 0e9c 6444     		add	r4, r4, ip
 8567 0e9e 132C     		cmp	r4, #19
 8568 0ea0 3FF69DAB 		bhi	.L1058
 8569 0ea4 01A2     		adr	r2, .L690
 8570 0ea6 52F824F0 		ldr	pc, [r2, r4, lsl #2]
 8571 0eaa 00BF     		.p2align 2
 8572              	.L690:
 8573 0eac 030F0000 		.word	.L693+1
 8574 0eb0 DF050000 		.word	.L1058+1
 8575 0eb4 DF050000 		.word	.L1058+1
 8576 0eb8 DF050000 		.word	.L1058+1
 8577 0ebc DF050000 		.word	.L1058+1
 8578 0ec0 DF050000 		.word	.L1058+1
 8579 0ec4 DF050000 		.word	.L1058+1
ARM GAS  /tmp/ccizbp1a.s 			page 252


 8580 0ec8 DF050000 		.word	.L1058+1
 8581 0ecc DF050000 		.word	.L1058+1
 8582 0ed0 DF050000 		.word	.L1058+1
 8583 0ed4 DF050000 		.word	.L1058+1
 8584 0ed8 FD0E0000 		.word	.L869+1
 8585 0edc DF050000 		.word	.L1058+1
 8586 0ee0 110F0000 		.word	.L691+1
 8587 0ee4 DF050000 		.word	.L1058+1
 8588 0ee8 DF050000 		.word	.L1058+1
 8589 0eec DF050000 		.word	.L1058+1
 8590 0ef0 DF050000 		.word	.L1058+1
 8591 0ef4 DF050000 		.word	.L1058+1
 8592 0ef8 150E0000 		.word	.L689+1
 8593              		.p2align 1
 8594              	.L869:
 8595 0efc 40F2431B 		movw	fp, #323
 8596              	.LVL696:
2555:src/keys.c    **** 
 8597              		.loc 1 2555 2 view .LVU2714
 8598 0f00 71E7     		b	.L692
 8599              	.LVL697:
 8600              	.L693:
2599:src/keys.c    **** 	xeq_or_gto:
 8601              		.loc 1 2599 3 is_stmt 1 view .LVU2715
2599:src/keys.c    **** 	xeq_or_gto:
 8602              		.loc 1 2599 6 is_stmt 0 view .LVU2716
 8603 0f02 03F5407B 		add	fp, r3, #768
 8604              	.LVL698:
2601:src/keys.c    **** 			break;
 8605              		.loc 1 2601 3 is_stmt 1 view .LVU2717
2601:src/keys.c    **** 			break;
 8606              		.loc 1 2601 6 is_stmt 0 view .LVU2718
 8607 0f06 002B     		cmp	r3, #0
 8608 0f08 7FF470AF 		bne	.L704
 8609 0f0c FFF767BB 		b	.L1058
 8610              	.LVL699:
 8611              	.L691:
2558:src/keys.c    **** 		goto next;
 8612              		.loc 1 2558 3 is_stmt 1 view .LVU2719
2558:src/keys.c    **** 		goto next;
 8613              		.loc 1 2558 8 is_stmt 0 view .LVU2720
 8614 0f10 5046     		mov	r0, r10
 8615              	.LVL700:
2558:src/keys.c    **** 		goto next;
 8616              		.loc 1 2558 8 view .LVU2721
 8617 0f12 0121     		movs	r1, #1
 8618 0f14 FFF7FEFF 		bl	advance_to_previous_label
 8619              	.LVL701:
 8620 0f18 0121     		movs	r1, #1
 8621 0f1a FFF7FEFF 		bl	advance_to_previous_label
 8622              	.LVL702:
 8623 0f1e 8246     		mov	r10, r0
 8624              	.LVL703:
2559:src/keys.c    **** 
 8625              		.loc 1 2559 3 is_stmt 1 view .LVU2722
 8626 0f20 7EE7     		b	.L696
 8627              	.LVL704:
ARM GAS  /tmp/ccizbp1a.s 			page 253


 8628              	.L857:
2559:src/keys.c    **** 
 8629              		.loc 1 2559 3 is_stmt 0 view .LVU2723
 8630              	.LBE988:
 8631              	.LBE1036:
 8632              	.LBB1037:
 8633              	.LBB899:
 8634              	.LBB893:
2474:src/keys.c    **** 		if (nn <= 9)
 8635              		.loc 1 2474 7 view .LVU2724
 8636 0f22 0A46     		mov	r2, r1
 8637              	.LVL705:
2474:src/keys.c    **** 		if (nn <= 9)
 8638              		.loc 1 2474 7 view .LVU2725
 8639 0f24 B9E5     		b	.L638
 8640              	.L1150:
 8641 0f26 00BF     		.align	2
 8642              	.L1149:
 8643 0f28 00000000 		.word	NonProgrammable
 8644 0f2c 00000000 		.word	.LANCHOR14
 8645 0f30 000A4000 		.word	4196864
 8646 0f34 00080800 		.word	526336
 8647 0f38 00000000 		.word	.LANCHOR11
 8648 0f3c 00000000 		.word	.LANCHOR1
 8649 0f40 00000000 		.word	.LANCHOR0
 8650              	.LVL706:
 8651              	.L1092:
2474:src/keys.c    **** 		if (nn <= 9)
 8652              		.loc 1 2474 7 view .LVU2726
 8653              	.LBE893:
 8654              	.LBE899:
 8655              	.LBE1037:
2904:src/keys.c    **** 
 8656              		.loc 1 2904 3 is_stmt 1 view .LVU2727
 8657              	.LBB1038:
 8658              	.LBI735:
2667:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 8659              		.loc 1 2667 12 view .LVU2728
 8660              	.LBB760:
2668:src/keys.c    **** 	enum shifts shift = reset_shift();
 8661              		.loc 1 2668 2 view .LVU2729
 8662              	.LBB737:
 8663              	.LBI737:
 198:src/keys.c    **** {
 8664              		.loc 1 198 14 view .LVU2730
 8665              	.LBB738:
 200:src/keys.c    ****     // K00 - K05
 8666              		.loc 1 200 3 view .LVU2731
 221:src/keys.c    **** }
 8667              		.loc 1 221 3 view .LVU2732
 8668              	.LBB739:
 8669              	.LBI739:
 119:src/keys.c    **** {
 8670              		.loc 1 119 12 view .LVU2733
 8671              	.LBB740:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8672              		.loc 1 121 2 view .LVU2734
ARM GAS  /tmp/ccizbp1a.s 			page 254


 131:src/keys.c    **** }
 8673              		.loc 1 131 2 view .LVU2735
 131:src/keys.c    **** }
 8674              		.loc 1 131 23 is_stmt 0 view .LVU2736
 8675 0f44 CD4B     		ldr	r3, .L1151
 8676              	.LBE740:
 8677              	.LBE739:
 221:src/keys.c    **** }
 8678              		.loc 1 221 28 view .LVU2737
 8679 0f46 CE4A     		ldr	r2, .L1151+4
 8680              	.LBB742:
 8681              	.LBB741:
 131:src/keys.c    **** }
 8682              		.loc 1 131 23 view .LVU2738
 8683 0f48 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 8684              	.LBE741:
 8685              	.LBE742:
 221:src/keys.c    **** }
 8686              		.loc 1 221 10 view .LVU2739
 8687 0f4a 12F803A0 		ldrb	r10, [r2, r3]	@ zero_extendqisi2
 8688              	.LVL707:
 221:src/keys.c    **** }
 8689              		.loc 1 221 10 view .LVU2740
 8690              	.LBE738:
 8691              	.LBE737:
 8692              	.LBB743:
 8693              	.LBB744:
 8694              	.LBB745:
 8695              	.LBB746:
 8696              	.LBB747:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8697              		.loc 1 85 18 view .LVU2741
 8698 0f4e FFF7FEFF 		bl	shift_down
 8699              	.LVL708:
 8700              	.LBE747:
 8701              	.LBE746:
 8702              	.LBE745:
 8703              	.LBE744:
 8704              	.LBE743:
2668:src/keys.c    **** 	enum shifts shift = reset_shift();
 8705              		.loc 1 2668 15 view .LVU2742
 8706 0f52 2AF0800A 		bic	r10, r10, #128
 8707              	.LVL709:
2669:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
 8708              		.loc 1 2669 2 is_stmt 1 view .LVU2743
 8709              	.LBB754:
 8710              	.LBI743:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 8711              		.loc 1 102 13 view .LVU2744
 8712              	.LBE754:
 8713              	.LBE760:
 8714              	.LBE1038:
 8715              	.LBE1197:
 8716              	.LBE1256:
 103:src/keys.c    **** }
 8717              		.loc 1 103 2 view .LVU2745
 8718              	.LBB1257:
ARM GAS  /tmp/ccizbp1a.s 			page 255


 8719              	.LBB1198:
 8720              	.LBB1039:
 8721              	.LBB761:
 8722              	.LBB755:
 8723              	.LBB752:
 8724              	.LBI744:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 8725              		.loc 1 92 20 view .LVU2746
 8726              	.LBB750:
  93:src/keys.c    **** 	State2.shifts = shift;
 8727              		.loc 1 93 2 view .LVU2747
 8728              	.LBB749:
 8729              	.LBI746:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 8730              		.loc 1 84 13 view .LVU2748
 8731              	.LBB748:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8732              		.loc 1 85 2 view .LVU2749
  86:src/keys.c    **** }
 8733              		.loc 1 86 2 view .LVU2750
  86:src/keys.c    **** }
 8734              		.loc 1 86 52 is_stmt 0 view .LVU2751
 8735 0f56 0346     		mov	r3, r0
 8736 0f58 00B9     		cbnz	r0, .L707
 8737 0f5a 337C     		ldrb	r3, [r6, #16]	@ zero_extendqisi2
 8738              	.L707:
 8739              	.LVL710:
  86:src/keys.c    **** }
 8740              		.loc 1 86 52 view .LVU2752
 8741              	.LBE748:
 8742              	.LBE749:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8743              		.loc 1 94 2 is_stmt 1 view .LVU2753
 8744              	.LBE750:
 8745              	.LBE752:
 8746              	.LBE755:
2670:src/keys.c    **** 	const int g_max = global_regs();
 8747              		.loc 1 2670 31 is_stmt 0 view .LVU2754
 8748 0f5c B17D     		ldrb	r1, [r6, #22]	@ zero_extendqisi2
 8749              	.LBB756:
 8750              	.LBB753:
 8751              	.LBB751:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8752              		.loc 1 94 16 view .LVU2755
 8753 0f5e 0022     		movs	r2, #0
 8754 0f60 3274     		strb	r2, [r6, #16]
  95:src/keys.c    **** 	return r;
 8755              		.loc 1 95 2 is_stmt 1 view .LVU2756
  95:src/keys.c    **** 	return r;
 8756              		.loc 1 95 19 is_stmt 0 view .LVU2757
 8757 0f62 7273     		strb	r2, [r6, #13]
  96:src/keys.c    **** }
 8758              		.loc 1 96 2 is_stmt 1 view .LVU2758
 8759              	.LVL711:
  96:src/keys.c    **** }
 8760              		.loc 1 96 2 is_stmt 0 view .LVU2759
 8761              	.LBE751:
ARM GAS  /tmp/ccizbp1a.s 			page 256


 8762              	.LBE753:
 8763              	.LBE756:
2670:src/keys.c    **** 	const int g_max = global_regs();
 8764              		.loc 1 2670 2 is_stmt 1 view .LVU2760
2670:src/keys.c    **** 	const int g_max = global_regs();
 8765              		.loc 1 2670 46 is_stmt 0 view .LVU2761
 8766 0f64 CA07     		lsls	r2, r1, #31
 8767 0f66 00F12E83 		bmi	.L1124
 8768 0f6a 4FF07009 		mov	r9, #112
 8769              	.LVL712:
 8770              	.L708:
2670:src/keys.c    **** 	const int g_max = global_regs();
 8771              		.loc 1 2670 46 view .LVU2762
 8772 0f6e 0093     		str	r3, [sp]
 8773              	.LVL713:
2671:src/keys.c    **** 
 8774              		.loc 1 2671 2 is_stmt 1 view .LVU2763
2671:src/keys.c    **** 
 8775              		.loc 1 2671 20 is_stmt 0 view .LVU2764
 8776 0f70 FFF7FEFF 		bl	global_regs
 8777              	.LVL714:
2673:src/keys.c    **** 		if (local_regs())
 8778              		.loc 1 2673 2 is_stmt 1 view .LVU2765
2673:src/keys.c    **** 		if (local_regs())
 8779              		.loc 1 2673 5 is_stmt 0 view .LVU2766
 8780 0f74 BAF1700F 		cmp	r10, #112
 8781 0f78 009B     		ldr	r3, [sp]
 8782 0f7a 00F0C583 		beq	.L1125
2679:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 8783              		.loc 1 2679 7 is_stmt 1 view .LVU2767
2679:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 8784              		.loc 1 2679 10 is_stmt 0 view .LVU2768
 8785 0f7e BAF1090F 		cmp	r10, #9
 8786 0f82 40F25383 		bls	.L1126
2686:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 8787              		.loc 1 2686 7 is_stmt 1 view .LVU2769
2686:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 8788              		.loc 1 2686 29 is_stmt 0 view .LVU2770
 8789 0f86 5A1E     		subs	r2, r3, #1
2686:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 8790              		.loc 1 2686 10 view .LVU2771
 8791 0f88 D2B2     		uxtb	r2, r2
 8792 0f8a 012A     		cmp	r2, #1
 8793 0f8c 40F20483 		bls	.L1127
 8794              	.L716:
2690:src/keys.c    **** 		State2.digval = n;
 8795              		.loc 1 2690 7 is_stmt 1 view .LVU2772
2690:src/keys.c    **** 		State2.digval = n;
 8796              		.loc 1 2690 10 is_stmt 0 view .LVU2773
 8797 0f90 BAF17F0F 		cmp	r10, #127
 8798 0f94 40F06083 		bne	.L1128
2695:src/keys.c    **** 	case K_DOWN:
 8799              		.loc 1 2695 2 is_stmt 1 view .LVU2774
 8800 0f98 073C     		subs	r4, r4, #7
 8801 0f9a 112C     		cmp	r4, #17
 8802 0f9c 3FF61FAB 		bhi	.L1058
 8803 0fa0 01A2     		adr	r2, .L837
ARM GAS  /tmp/ccizbp1a.s 			page 257


 8804 0fa2 52F824F0 		ldr	pc, [r2, r4, lsl #2]
 8805 0fa6 00BF     		.p2align 2
 8806              	.L837:
 8807 0fa8 53100000 		.word	.L729+1
 8808 0fac DF050000 		.word	.L1058+1
 8809 0fb0 DF050000 		.word	.L1058+1
 8810 0fb4 DF050000 		.word	.L1058+1
 8811 0fb8 DF050000 		.word	.L1058+1
 8812 0fbc 75100000 		.word	.L728+1
 8813 0fc0 DF050000 		.word	.L1058+1
 8814 0fc4 DF050000 		.word	.L1058+1
 8815 0fc8 DF050000 		.word	.L1058+1
 8816 0fcc 3D100000 		.word	.L726+1
 8817 0fd0 DF050000 		.word	.L1058+1
 8818 0fd4 17100000 		.word	.L722+1
 8819 0fd8 DF050000 		.word	.L1058+1
 8820 0fdc DF050000 		.word	.L1058+1
 8821 0fe0 DF050000 		.word	.L1058+1
 8822 0fe4 DF050000 		.word	.L1058+1
 8823 0fe8 DF050000 		.word	.L1058+1
 8824 0fec F10F0000 		.word	.L719+1
 8825              		.p2align 1
 8826              	.L719:
2697:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 8827              		.loc 1 2697 3 view .LVU2775
2697:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 8828              		.loc 1 2697 13 is_stmt 0 view .LVU2776
 8829 0ff0 3389     		ldrh	r3, [r6, #8]
2697:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 8830              		.loc 1 2697 6 view .LVU2777
 8831 0ff2 002B     		cmp	r3, #0
 8832 0ff4 00F0B084 		beq	.L720
2698:src/keys.c    **** 				State2.digval = global_regs();
 8833              		.loc 1 2698 4 is_stmt 1 view .LVU2778
2698:src/keys.c    **** 				State2.digval = global_regs();
 8834              		.loc 1 2698 8 is_stmt 0 view .LVU2779
 8835 0ff8 B27D     		ldrb	r2, [r6, #22]	@ zero_extendqisi2
2698:src/keys.c    **** 				State2.digval = global_regs();
 8836              		.loc 1 2698 7 view .LVU2780
 8837 0ffa D207     		lsls	r2, r2, #31
 8838 0ffc 02D4     		bmi	.L721
2698:src/keys.c    **** 				State2.digval = global_regs();
 8839              		.loc 1 2698 23 view .LVU2781
 8840 0ffe 642B     		cmp	r3, #100
 8841 1000 00F0B084 		beq	.L1129
 8842              	.LVL715:
 8843              	.L721:
2700:src/keys.c    **** 		}
 8844              		.loc 1 2700 4 is_stmt 1 view .LVU2782
 8845 1004 3389     		ldrh	r3, [r6, #8]
 8846 1006 013B     		subs	r3, r3, #1
 8847              	.L1050:
2700:src/keys.c    **** 		}
 8848              		.loc 1 2700 4 is_stmt 0 view .LVU2783
 8849 1008 3381     		strh	r3, [r6, #8]	@ movhi
 8850              	.LVL716:
 8851              	.L712:
ARM GAS  /tmp/ccizbp1a.s 			page 258


2752:src/keys.c    **** 	return STATE_UNFINISHED;
 8852              		.loc 1 2752 2 is_stmt 1 view .LVU2784
2752:src/keys.c    **** 	return STATE_UNFINISHED;
 8853              		.loc 1 2752 16 is_stmt 0 view .LVU2785
 8854 100a 337D     		ldrb	r3, [r6, #20]	@ zero_extendqisi2
 8855 100c 6FF3C503 		bfc	r3, #3, #3
 8856 1010 3375     		strb	r3, [r6, #20]
 8857 1012 FFF7E4BA 		b	.L1058
 8858              	.LVL717:
 8859              	.L722:
2707:src/keys.c    **** 			State2.digval++;
 8860              		.loc 1 2707 3 is_stmt 1 view .LVU2786
2707:src/keys.c    **** 			State2.digval++;
 8861              		.loc 1 2707 13 is_stmt 0 view .LVU2787
 8862 1016 3389     		ldrh	r3, [r6, #8]
2707:src/keys.c    **** 			State2.digval++;
 8863              		.loc 1 2707 27 view .LVU2788
 8864 1018 09F1FF39 		add	r9, r9, #-1
 8865              	.LVL718:
2707:src/keys.c    **** 			State2.digval++;
 8866              		.loc 1 2707 6 view .LVU2789
 8867 101c 4B45     		cmp	r3, r9
 8868 101e 80F29784 		bge	.L723
2708:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 8869              		.loc 1 2708 4 is_stmt 1 view .LVU2790
2709:src/keys.c    **** 				State2.digval = regX_idx;
 8870              		.loc 1 2709 8 is_stmt 0 view .LVU2791
 8871 1022 B27D     		ldrb	r2, [r6, #22]	@ zero_extendqisi2
2708:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 8872              		.loc 1 2708 17 view .LVU2792
 8873 1024 0133     		adds	r3, r3, #1
 8874 1026 9CB2     		uxth	r4, r3
2709:src/keys.c    **** 				State2.digval = regX_idx;
 8875              		.loc 1 2709 7 view .LVU2793
 8876 1028 D307     		lsls	r3, r2, #31
2708:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 8877              		.loc 1 2708 17 view .LVU2794
 8878 102a 3481     		strh	r4, [r6, #8]	@ movhi
2709:src/keys.c    **** 				State2.digval = regX_idx;
 8879              		.loc 1 2709 4 is_stmt 1 view .LVU2795
2709:src/keys.c    **** 				State2.digval = regX_idx;
 8880              		.loc 1 2709 7 is_stmt 0 view .LVU2796
 8881 102c EDD4     		bmi	.L712
2709:src/keys.c    **** 				State2.digval = regX_idx;
 8882              		.loc 1 2709 43 view .LVU2797
 8883 102e FFF7FEFF 		bl	global_regs
 8884              	.LVL719:
2709:src/keys.c    **** 				State2.digval = regX_idx;
 8885              		.loc 1 2709 23 view .LVU2798
 8886 1032 8442     		cmp	r4, r0
 8887 1034 E9D1     		bne	.L712
2710:src/keys.c    **** 		}
 8888              		.loc 1 2710 5 is_stmt 1 view .LVU2799
2710:src/keys.c    **** 		}
 8889              		.loc 1 2710 19 is_stmt 0 view .LVU2800
 8890 1036 6423     		movs	r3, #100
 8891 1038 3381     		strh	r3, [r6, #8]	@ movhi
ARM GAS  /tmp/ccizbp1a.s 			page 259


 8892 103a E6E7     		b	.L712
 8893              	.LVL720:
 8894              	.L726:
2724:src/keys.c    **** 			return STATE_UNFINISHED;
 8895              		.loc 1 2724 3 is_stmt 1 view .LVU2801
2724:src/keys.c    **** 			return STATE_UNFINISHED;
 8896              		.loc 1 2724 7 is_stmt 0 view .LVU2802
 8897 103c F37D     		ldrb	r3, [r6, #23]	@ zero_extendqisi2
2724:src/keys.c    **** 			return STATE_UNFINISHED;
 8898              		.loc 1 2724 6 view .LVU2803
 8899 103e 13F02002 		ands	r2, r3, #32
 8900 1042 7FF4CCAA 		bne	.L1058
2726:src/keys.c    **** 
 8901              		.loc 1 2726 3 is_stmt 1 view .LVU2804
2748:src/keys.c    **** 	State2.digval = 0;
 8902              		.loc 1 2748 2 view .LVU2805
2748:src/keys.c    **** 	State2.digval = 0;
 8903              		.loc 1 2748 22 is_stmt 0 view .LVU2806
 8904 1046 62F3C303 		bfi	r3, r2, #3, #1
 8905 104a F375     		strb	r3, [r6, #23]
2749:src/keys.c    **** 	State2.digval2 = 0;
 8906              		.loc 1 2749 2 is_stmt 1 view .LVU2807
2749:src/keys.c    **** 	State2.digval2 = 0;
 8907              		.loc 1 2749 16 is_stmt 0 view .LVU2808
 8908 104c 3281     		strh	r2, [r6, #8]	@ movhi
2750:src/keys.c    **** reset_window:
 8909              		.loc 1 2750 2 is_stmt 1 view .LVU2809
2750:src/keys.c    **** reset_window:
 8910              		.loc 1 2750 17 is_stmt 0 view .LVU2810
 8911 104e B272     		strb	r2, [r6, #10]
 8912 1050 DBE7     		b	.L712
 8913              	.L729:
2734:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 8914              		.loc 1 2734 3 is_stmt 1 view .LVU2811
2734:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 8915              		.loc 1 2734 6 is_stmt 0 view .LVU2812
 8916 1052 002B     		cmp	r3, #0
 8917 1054 7FF4C3AA 		bne	.L1058
2738:src/keys.c    **** #endif
 8918              		.loc 1 2738 4 is_stmt 1 view .LVU2813
2738:src/keys.c    **** #endif
 8919              		.loc 1 2738 8 is_stmt 0 view .LVU2814
 8920 1058 B6F808B0 		ldrh	fp, [r6, #8]
 8921              	.LVL721:
2740:src/keys.c    **** 			State2.digval = 0;
 8922              		.loc 1 2740 4 is_stmt 1 view .LVU2815
2740:src/keys.c    **** 			State2.digval = 0;
 8923              		.loc 1 2740 24 is_stmt 0 view .LVU2816
 8924 105c F27D     		ldrb	r2, [r6, #23]	@ zero_extendqisi2
2742:src/keys.c    **** 			return n;
 8925              		.loc 1 2742 19 view .LVU2817
 8926 105e B372     		strb	r3, [r6, #10]
2740:src/keys.c    **** 			State2.digval = 0;
 8927              		.loc 1 2740 24 view .LVU2818
 8928 1060 63F3C302 		bfi	r2, r3, #3, #1
2743:src/keys.c    **** 		}
 8929              		.loc 1 2743 11 view .LVU2819
ARM GAS  /tmp/ccizbp1a.s 			page 260


 8930 1064 4BF4285B 		orr	fp, fp, #10752
 8931              	.LVL722:
2741:src/keys.c    **** 			State2.digval2 = 0;
 8932              		.loc 1 2741 18 view .LVU2820
 8933 1068 3381     		strh	r3, [r6, #8]	@ movhi
 8934 106a 5846     		mov	r0, fp
 8935              	.LVL723:
2741:src/keys.c    **** 			State2.digval2 = 0;
 8936              		.loc 1 2741 18 view .LVU2821
 8937 106c B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
2740:src/keys.c    **** 			State2.digval = 0;
 8938              		.loc 1 2740 24 view .LVU2822
 8939 106e F275     		strb	r2, [r6, #23]
2741:src/keys.c    **** 			State2.digval2 = 0;
 8940              		.loc 1 2741 4 is_stmt 1 view .LVU2823
2742:src/keys.c    **** 			return n;
 8941              		.loc 1 2742 4 view .LVU2824
2743:src/keys.c    **** 		}
 8942              		.loc 1 2743 4 view .LVU2825
2743:src/keys.c    **** 		}
 8943              		.loc 1 2743 11 is_stmt 0 view .LVU2826
 8944 1070 FFF702BA 		b	.L618
 8945              	.LVL724:
 8946              	.L728:
2729:src/keys.c    **** 			State2.disp_as_alpha = 1;
 8947              		.loc 1 2729 3 is_stmt 1 view .LVU2827
2729:src/keys.c    **** 			State2.disp_as_alpha = 1;
 8948              		.loc 1 2729 6 is_stmt 0 view .LVU2828
 8949 1074 012B     		cmp	r3, #1
 8950 1076 ECD1     		bne	.L729
2730:src/keys.c    **** 			goto reset_window;
 8951              		.loc 1 2730 4 is_stmt 1 view .LVU2829
2730:src/keys.c    **** 			goto reset_window;
 8952              		.loc 1 2730 25 is_stmt 0 view .LVU2830
 8953 1078 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 8954 107a 43F00403 		orr	r3, r3, #4
 8955 107e B375     		strb	r3, [r6, #22]
2731:src/keys.c    **** 		}
 8956              		.loc 1 2731 4 is_stmt 1 view .LVU2831
 8957 1080 C3E7     		b	.L712
 8958              	.LVL725:
 8959              	.L1109:
2731:src/keys.c    **** 		}
 8960              		.loc 1 2731 4 is_stmt 0 view .LVU2832
 8961              	.LBE761:
 8962              	.LBE1039:
 8963              	.LBB1040:
 8964              	.LBB875:
1332:src/keys.c    **** #endif
 8965              		.loc 1 1332 44 is_stmt 1 view .LVU2833
1332:src/keys.c    **** #endif
 8966              		.loc 1 1332 52 is_stmt 0 view .LVU2834
 8967 1082 0420     		movs	r0, #4
 8968 1084 FFF7FEFF 		bl	gtodot_digit
 8969              	.LVL726:
1375:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8970              		.loc 1 1375 2 is_stmt 1 view .LVU2835
ARM GAS  /tmp/ccizbp1a.s 			page 261


 8971              	.LBE875:
 8972              	.LBE1040:
2846:src/keys.c    **** 
 8973              		.loc 1 2846 10 is_stmt 0 view .LVU2836
 8974 1088 4FF0330B 		mov	fp, #51
 8975 108c FFF746B8 		b	.L563
 8976              	.LVL727:
 8977              	.L890:
 8978              	.LBB1041:
 8979              	.LBB859:
1912:src/keys.c    **** 	}
 8980              		.loc 1 1912 18 view .LVU2837
 8981 1090 2723     		movs	r3, #39
1912:src/keys.c    **** 	}
 8982              		.loc 1 1912 47 view .LVU2838
 8983 1092 9B44     		add	fp, fp, r3
 8984              	.LVL728:
1912:src/keys.c    **** 	}
 8985              		.loc 1 1912 47 view .LVU2839
 8986 1094 FFF780BA 		b	.L592
 8987              	.LVL729:
 8988              	.L889:
1912:src/keys.c    **** 	}
 8989              		.loc 1 1912 18 view .LVU2840
 8990 1098 1E23     		movs	r3, #30
1912:src/keys.c    **** 	}
 8991              		.loc 1 1912 47 view .LVU2841
 8992 109a 9B44     		add	fp, fp, r3
 8993              	.LVL730:
1912:src/keys.c    **** 	}
 8994              		.loc 1 1912 47 view .LVU2842
 8995 109c FFF77CBA 		b	.L592
 8996              	.LVL731:
 8997              	.L1112:
1912:src/keys.c    **** 	}
 8998              		.loc 1 1912 47 view .LVU2843
 8999              	.LBE859:
 9000              	.LBE1041:
 9001              	.LBB1042:
 9002              	.LBB876:
1346:src/keys.c    **** 	}
 9003              		.loc 1 1346 3 is_stmt 1 view .LVU2844
1346:src/keys.c    **** 	}
 9004              		.loc 1 1346 6 is_stmt 0 view .LVU2845
 9005 10a0 3089     		ldrh	r0, [r6, #8]
 9006              	.LVL732:
1375:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9007              		.loc 1 1375 2 is_stmt 1 view .LVU2846
 9008 10a2 61E5     		b	.L595
 9009              	.LVL733:
 9010              	.L1110:
1336:src/keys.c    **** 		goto fin;
 9011              		.loc 1 1336 3 view .LVU2847
 9012              	.LBB869:
 9013              	.LBI869:
1308:src/keys.c    **** 	const int code = 100 + n;
 9014              		.loc 1 1308 12 view .LVU2848
ARM GAS  /tmp/ccizbp1a.s 			page 262


 9015              	.LBB870:
1309:src/keys.c    **** 	unsigned int pc = state_pc();
 9016              		.loc 1 1309 2 view .LVU2849
1310:src/keys.c    **** 
 9017              		.loc 1 1310 2 view .LVU2850
1310:src/keys.c    **** 
 9018              		.loc 1 1310 20 is_stmt 0 view .LVU2851
 9019 10a4 DFF8DC91 		ldr	r9, .L1151+8
 9020 10a8 D9F80030 		ldr	r3, [r9]
 9021              	.LVL734:
1310:src/keys.c    **** 
 9022              		.loc 1 1310 15 view .LVU2852
 9023 10ac B3F8E007 		ldrh	r0, [r3, #2016]
 9024              	.LVL735:
1312:src/keys.c    **** 		pc = 1;
 9025              		.loc 1 1312 2 is_stmt 1 view .LVU2853
1312:src/keys.c    **** 		pc = 1;
 9026              		.loc 1 1312 5 is_stmt 0 view .LVU2854
 9027 10b0 830B     		lsrs	r3, r0, #14
1313:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
 9028              		.loc 1 1313 6 view .LVU2855
 9029 10b2 032B     		cmp	r3, #3
 9030              	.LVL736:
1314:src/keys.c    **** 	if (pc > 0)
 9031              		.loc 1 1314 2 is_stmt 1 view .LVU2856
1314:src/keys.c    **** 	if (pc > 0)
 9032              		.loc 1 1314 7 is_stmt 0 view .LVU2857
 9033 10b4 08BF     		it	eq
 9034 10b6 0120     		moveq	r0, #1
 9035              	.LVL737:
1314:src/keys.c    **** 	if (pc > 0)
 9036              		.loc 1 1314 7 view .LVU2858
 9037 10b8 04F16401 		add	r1, r4, #100
 9038              	.LVL738:
1314:src/keys.c    **** 	if (pc > 0)
 9039              		.loc 1 1314 7 view .LVU2859
 9040 10bc 0322     		movs	r2, #3
 9041              	.LVL739:
1314:src/keys.c    **** 	if (pc > 0)
 9042              		.loc 1 1314 7 view .LVU2860
 9043 10be FFF7FEFF 		bl	find_label_from
 9044              	.LVL740:
1315:src/keys.c    **** 		return pc;
 9045              		.loc 1 1315 2 is_stmt 1 view .LVU2861
1315:src/keys.c    **** 		return pc;
 9046              		.loc 1 1315 5 is_stmt 0 view .LVU2862
 9047 10c2 0028     		cmp	r0, #0
 9048 10c4 7FF491AC 		bne	.L604
1317:src/keys.c    **** }
 9049              		.loc 1 1317 2 is_stmt 1 view .LVU2863
1317:src/keys.c    **** }
 9050              		.loc 1 1317 9 is_stmt 0 view .LVU2864
 9051 10c8 D9F80030 		ldr	r3, [r9]
 9052 10cc B3F8E007 		ldrh	r0, [r3, #2016]
 9053              	.LVL741:
1317:src/keys.c    **** }
 9054              		.loc 1 1317 9 view .LVU2865
ARM GAS  /tmp/ccizbp1a.s 			page 263


 9055              	.LBE870:
 9056              	.LBE869:
1337:src/keys.c    **** 	}
 9057              		.loc 1 1337 3 is_stmt 1 view .LVU2866
 9058 10d0 8BE4     		b	.L604
 9059              	.LVL742:
 9060              	.L1093:
1337:src/keys.c    **** 	}
 9061              		.loc 1 1337 3 is_stmt 0 view .LVU2867
 9062              	.LBE876:
 9063              	.LBE1042:
2907:src/keys.c    **** 
 9064              		.loc 1 2907 3 is_stmt 1 view .LVU2868
 9065              	.LBB1043:
 9066              	.LBI1043:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 9067              		.loc 1 102 13 view .LVU2869
 9068              	.LBE1043:
 9069              	.LBE1198:
 9070              	.LBE1257:
 103:src/keys.c    **** }
 9071              		.loc 1 103 2 view .LVU2870
 9072              	.LBB1258:
 9073              	.LBB1199:
 9074              	.LBB1050:
 9075              	.LBB1044:
 9076              	.LBI1044:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 9077              		.loc 1 92 20 view .LVU2871
 9078              	.LBB1045:
  93:src/keys.c    **** 	State2.shifts = shift;
 9079              		.loc 1 93 2 view .LVU2872
 9080              	.LBB1046:
 9081              	.LBI1046:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 9082              		.loc 1 84 13 view .LVU2873
 9083              	.LBB1047:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9084              		.loc 1 85 2 view .LVU2874
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9085              		.loc 1 85 18 is_stmt 0 view .LVU2875
 9086 10d2 FFF7FEFF 		bl	shift_down
 9087              	.LVL743:
  86:src/keys.c    **** }
 9088              		.loc 1 86 2 is_stmt 1 view .LVU2876
  86:src/keys.c    **** }
 9089              		.loc 1 86 52 is_stmt 0 view .LVU2877
 9090 10d6 0146     		mov	r1, r0
 9091 10d8 00B9     		cbnz	r0, .L731
 9092 10da 317C     		ldrb	r1, [r6, #16]	@ zero_extendqisi2
 9093              	.L731:
 9094              	.LVL744:
  86:src/keys.c    **** }
 9095              		.loc 1 86 52 view .LVU2878
 9096              	.LBE1047:
 9097              	.LBE1046:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
ARM GAS  /tmp/ccizbp1a.s 			page 264


 9098              		.loc 1 94 2 is_stmt 1 view .LVU2879
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9099              		.loc 1 94 16 is_stmt 0 view .LVU2880
 9100 10dc 0022     		movs	r2, #0
 9101              	.LBE1045:
 9102              	.LBE1044:
 9103              	.LBE1050:
2907:src/keys.c    **** 
 9104              		.loc 1 2907 10 view .LVU2881
 9105 10de 2046     		mov	r0, r4
 9106              	.LBB1051:
 9107              	.LBB1049:
 9108              	.LBB1048:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9109              		.loc 1 94 16 view .LVU2882
 9110 10e0 3274     		strb	r2, [r6, #16]
  95:src/keys.c    **** 	return r;
 9111              		.loc 1 95 2 is_stmt 1 view .LVU2883
  95:src/keys.c    **** 	return r;
 9112              		.loc 1 95 19 is_stmt 0 view .LVU2884
 9113 10e2 7273     		strb	r2, [r6, #13]
  96:src/keys.c    **** }
 9114              		.loc 1 96 2 is_stmt 1 view .LVU2885
 9115              	.LVL745:
  96:src/keys.c    **** }
 9116              		.loc 1 96 2 is_stmt 0 view .LVU2886
 9117              	.LBE1048:
 9118              	.LBE1049:
 9119              	.LBE1051:
2907:src/keys.c    **** 
 9120              		.loc 1 2907 10 view .LVU2887
 9121 10e4 FFF7FEFF 		bl	process_catalogue
 9122              	.LVL746:
2907:src/keys.c    **** 
 9123              		.loc 1 2907 10 view .LVU2888
 9124 10e8 8346     		mov	fp, r0
 9125 10ea FFF755BA 		b	.L592
 9126              	.LVL747:
 9127              	.L1111:
 9128              	.LBB1052:
 9129              	.LBB877:
1341:src/keys.c    **** 		goto fin;
 9130              		.loc 1 1341 3 is_stmt 1 view .LVU2889
1341:src/keys.c    **** 		goto fin;
 9131              		.loc 1 1341 11 is_stmt 0 view .LVU2890
 9132 10ee 654B     		ldr	r3, .L1151+8
 9133              	.LVL748:
1341:src/keys.c    **** 		goto fin;
 9134              		.loc 1 1341 11 view .LVU2891
 9135 10f0 1B68     		ldr	r3, [r3]
1341:src/keys.c    **** 		goto fin;
 9136              		.loc 1 1341 9 view .LVU2892
 9137 10f2 5888     		ldrh	r0, [r3, #2]
 9138              	.LVL749:
1342:src/keys.c    **** 	}
 9139              		.loc 1 1342 3 is_stmt 1 view .LVU2893
 9140 10f4 79E4     		b	.L604
ARM GAS  /tmp/ccizbp1a.s 			page 265


 9141              	.LVL750:
 9142              	.L1117:
1342:src/keys.c    **** 	}
 9143              		.loc 1 1342 3 is_stmt 0 view .LVU2894
 9144              	.LBE877:
 9145              	.LBE1052:
 9146              	.LBB1053:
 9147              	.LBB900:
2470:src/keys.c    **** 		return STATE_UNFINISHED;
 9148              		.loc 1 2470 3 is_stmt 1 view .LVU2895
2470:src/keys.c    **** 		return STATE_UNFINISHED;
 9149              		.loc 1 2470 17 is_stmt 0 view .LVU2896
 9150 10f6 3173     		strb	r1, [r6, #12]
2471:src/keys.c    **** 	} 
 9151              		.loc 1 2471 3 is_stmt 1 view .LVU2897
 9152              	.LBE900:
 9153              	.LBE1053:
2855:src/keys.c    **** 
 9154              		.loc 1 2855 10 is_stmt 0 view .LVU2898
 9155 10f8 4FF0330B 		mov	fp, #51
 9156              	.LBB1054:
 9157              	.LBB901:
2471:src/keys.c    **** 	} 
 9158              		.loc 1 2471 10 view .LVU2899
 9159 10fc FFF70EB8 		b	.L563
 9160              	.LVL751:
 9161              	.L1113:
2471:src/keys.c    **** 	} 
 9162              		.loc 1 2471 10 view .LVU2900
 9163              	.LBE901:
 9164              	.LBE1054:
 9165              	.LBB1055:
 9166              	.LBB878:
1350:src/keys.c    **** 			goto fin2;
 9167              		.loc 1 1350 3 is_stmt 1 view .LVU2901
1350:src/keys.c    **** 			goto fin2;
 9168              		.loc 1 1350 13 is_stmt 0 view .LVU2902
 9169 1100 F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
 9170              	.LVL752:
1350:src/keys.c    **** 			goto fin2;
 9171              		.loc 1 1350 6 view .LVU2903
 9172 1102 002B     		cmp	r3, #0
 9173 1104 3FF473AC 		beq	.L608
1353:src/keys.c    **** 			State2.digval /= 10;
 9174              		.loc 1 1353 4 is_stmt 1 view .LVU2904
1353:src/keys.c    **** 			State2.digval /= 10;
 9175              		.loc 1 1353 19 is_stmt 0 view .LVU2905
 9176 1108 013B     		subs	r3, r3, #1
 9177 110a F372     		strb	r3, [r6, #11]
1354:src/keys.c    **** 		}
 9178              		.loc 1 1354 4 is_stmt 1 view .LVU2906
1354:src/keys.c    **** 		}
 9179              		.loc 1 1354 18 is_stmt 0 view .LVU2907
 9180 110c 0A22     		movs	r2, #10
 9181              	.LVL753:
1354:src/keys.c    **** 		}
 9182              		.loc 1 1354 18 view .LVU2908
ARM GAS  /tmp/ccizbp1a.s 			page 266


 9183 110e 3389     		ldrh	r3, [r6, #8]
 9184 1110 B3FBF2F3 		udiv	r3, r3, r2
 9185              	.LBE878:
 9186              	.LBE1055:
2846:src/keys.c    **** 
 9187              		.loc 1 2846 10 view .LVU2909
 9188 1114 4FF0330B 		mov	fp, #51
 9189              	.LBB1056:
 9190              	.LBB879:
1354:src/keys.c    **** 		}
 9191              		.loc 1 1354 18 view .LVU2910
 9192 1118 3381     		strh	r3, [r6, #8]	@ movhi
1375:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9193              		.loc 1 1375 2 is_stmt 1 view .LVU2911
 9194 111a FEF7FFBF 		b	.L563
 9195              	.LVL754:
 9196              	.L1094:
1375:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9197              		.loc 1 1375 2 is_stmt 0 view .LVU2912
 9198              	.LBE879:
 9199              	.LBE1056:
2911:src/keys.c    **** #else
 9200              		.loc 1 2911 3 is_stmt 1 view .LVU2913
 9201              	.LBB1057:
 9202              	.LBI773:
1388:src/keys.c    **** 	const enum shifts shift = reset_shift();
 9203              		.loc 1 1388 12 view .LVU2914
 9204              	.LBB818:
1389:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
 9205              		.loc 1 1389 2 view .LVU2915
 9206              	.LBB775:
 9207              	.LBI775:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 9208              		.loc 1 102 13 view .LVU2916
 9209              	.LBE775:
 9210              	.LBE818:
 9211              	.LBE1057:
 9212              	.LBE1199:
 9213              	.LBE1258:
 103:src/keys.c    **** }
 9214              		.loc 1 103 2 view .LVU2917
 9215              	.LBB1259:
 9216              	.LBB1200:
 9217              	.LBB1058:
 9218              	.LBB819:
 9219              	.LBB784:
 9220              	.LBB776:
 9221              	.LBI776:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 9222              		.loc 1 92 20 view .LVU2918
 9223              	.LBB777:
  93:src/keys.c    **** 	State2.shifts = shift;
 9224              		.loc 1 93 2 view .LVU2919
 9225              	.LBB778:
 9226              	.LBI778:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 9227              		.loc 1 84 13 view .LVU2920
ARM GAS  /tmp/ccizbp1a.s 			page 267


 9228              	.LBB779:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9229              		.loc 1 85 2 view .LVU2921
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9230              		.loc 1 85 18 is_stmt 0 view .LVU2922
 9231 111e FFF7FEFF 		bl	shift_down
 9232              	.LVL755:
  86:src/keys.c    **** }
 9233              		.loc 1 86 2 is_stmt 1 view .LVU2923
  86:src/keys.c    **** }
 9234              		.loc 1 86 52 is_stmt 0 view .LVU2924
 9235 1122 00B9     		cbnz	r0, .L733
 9236 1124 307C     		ldrb	r0, [r6, #16]	@ zero_extendqisi2
 9237              	.LVL756:
 9238              	.L733:
  86:src/keys.c    **** }
 9239              		.loc 1 86 52 view .LVU2925
 9240              	.LBE779:
 9241              	.LBE778:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9242              		.loc 1 94 2 is_stmt 1 view .LVU2926
 9243              	.LBE777:
 9244              	.LBE776:
 9245              	.LBE784:
 9246              	.LBB785:
 9247              	.LBB786:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 9248              		.loc 1 434 6 is_stmt 0 view .LVU2927
 9249 1126 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 9250              	.LBE786:
 9251              	.LBE785:
 9252              	.LBB800:
 9253              	.LBB782:
 9254              	.LBB780:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9255              		.loc 1 94 16 view .LVU2928
 9256 1128 0022     		movs	r2, #0
 9257              	.LBE780:
 9258              	.LBE782:
 9259              	.LBE800:
 9260              	.LBB801:
 9261              	.LBB797:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 9262              		.loc 1 434 5 view .LVU2929
 9263 112a D906     		lsls	r1, r3, #27
 9264              	.LBE797:
 9265              	.LBE801:
 9266              	.LBB802:
 9267              	.LBB783:
 9268              	.LBB781:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9269              		.loc 1 94 16 view .LVU2930
 9270 112c 3274     		strb	r2, [r6, #16]
  95:src/keys.c    **** 	return r;
 9271              		.loc 1 95 2 is_stmt 1 view .LVU2931
  95:src/keys.c    **** 	return r;
 9272              		.loc 1 95 19 is_stmt 0 view .LVU2932
ARM GAS  /tmp/ccizbp1a.s 			page 268


 9273 112e 7273     		strb	r2, [r6, #13]
  96:src/keys.c    **** }
 9274              		.loc 1 96 2 is_stmt 1 view .LVU2933
 9275              	.LVL757:
  96:src/keys.c    **** }
 9276              		.loc 1 96 2 is_stmt 0 view .LVU2934
 9277              	.LBE781:
 9278              	.LBE783:
 9279              	.LBE802:
1390:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos, n;
 9280              		.loc 1 1390 2 is_stmt 1 view .LVU2935
1390:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos, n;
 9281              		.loc 1 1390 11 is_stmt 0 view .LVU2936
 9282 1130 0246     		mov	r2, r0
 9283              	.LVL758:
 9284              	.LBB803:
 9285              	.LBI785:
 384:src/keys.c    **** {
 9286              		.loc 1 384 12 is_stmt 1 view .LVU2937
 9287              	.LBB798:
 386:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 9288              		.loc 1 386 2 view .LVU2938
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 9289              		.loc 1 434 2 view .LVU2939
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 9290              		.loc 1 434 5 is_stmt 0 view .LVU2940
 9291 1132 40F1B080 		bpl	.L734
 435:src/keys.c    **** 			shift = SHIFT_LC_N;
 9292              		.loc 1 435 3 is_stmt 1 view .LVU2941
 435:src/keys.c    **** 			shift = SHIFT_LC_N;
 9293              		.loc 1 435 6 is_stmt 0 view .LVU2942
 9294 1136 0028     		cmp	r0, #0
 9295 1138 00F0AC80 		beq	.L874
 437:src/keys.c    **** 			shift = SHIFT_LC_G;
 9296              		.loc 1 437 8 is_stmt 1 view .LVU2943
 9297              	.LBB787:
 9298              	.LBB788:
 131:src/keys.c    **** }
 9299              		.loc 1 131 23 is_stmt 0 view .LVU2944
 9300 113c 4F49     		ldr	r1, .L1151
 9301              	.LBE788:
 9302              	.LBE787:
 440:src/keys.c    **** }
 9303              		.loc 1 440 49 view .LVU2945
 9304 113e 524A     		ldr	r2, .L1151+12
 9305              	.LBB793:
 9306              	.LBB789:
 131:src/keys.c    **** }
 9307              		.loc 1 131 23 view .LVU2946
 9308 1140 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 9309              	.LBE789:
 9310              	.LBE793:
 438:src/keys.c    **** 	}
 9311              		.loc 1 438 10 view .LVU2947
 9312 1142 0228     		cmp	r0, #2
 440:src/keys.c    **** }
 9313              		.loc 1 440 49 view .LVU2948
ARM GAS  /tmp/ccizbp1a.s 			page 269


 9314 1144 4FF0060C 		mov	ip, #6
 9315 1148 0CFB0121 		mla	r1, ip, r1, r2
 438:src/keys.c    **** 	}
 9316              		.loc 1 438 10 view .LVU2949
 9317 114c 14BF     		ite	ne
 9318 114e 0246     		movne	r2, r0
 9319 1150 0522     		moveq	r2, #5
 9320              	.LVL759:
 440:src/keys.c    **** }
 9321              		.loc 1 440 2 is_stmt 1 view .LVU2950
 9322              	.LBB794:
 9323              	.LBI787:
 119:src/keys.c    **** {
 9324              		.loc 1 119 12 view .LVU2951
 9325              	.LBB790:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9326              		.loc 1 121 2 view .LVU2952
 131:src/keys.c    **** }
 9327              		.loc 1 131 2 view .LVU2953
 131:src/keys.c    **** }
 9328              		.loc 1 131 2 is_stmt 0 view .LVU2954
 9329 1152 063C     		subs	r4, r4, #6
 9330              	.LBE790:
 9331              	.LBE794:
 440:src/keys.c    **** }
 9332              		.loc 1 440 49 view .LVU2955
 9333 1154 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9334              	.LVL760:
 440:src/keys.c    **** }
 9335              		.loc 1 440 49 view .LVU2956
 9336              	.LBE798:
 9337              	.LBE803:
1391:src/keys.c    ****         int op = STATE_UNFINISHED;
 9338              		.loc 1 1391 2 is_stmt 1 view .LVU2957
1392:src/keys.c    **** 	State2.alpha_pos = 0;
 9339              		.loc 1 1392 9 view .LVU2958
1393:src/keys.c    **** 
 9340              		.loc 1 1393 2 view .LVU2959
1395:src/keys.c    **** 	case K10:	// STO
 9341              		.loc 1 1395 2 view .LVU2960
 9342 1156 212C     		cmp	r4, #33
 9343 1158 46D8     		bhi	.L737
 9344 115a 01A1     		adr	r1, .L838
 9345 115c 51F824F0 		ldr	pc, [r1, r4, lsl #2]
 9346              		.p2align 2
 9347              	.L838:
 9348 1160 6D180000 		.word	.L746+1
 9349 1164 45180000 		.word	.L745+1
 9350 1168 E9110000 		.word	.L737+1
 9351 116c E9110000 		.word	.L737+1
 9352 1170 E9110000 		.word	.L737+1
 9353 1174 E9110000 		.word	.L737+1
 9354 1178 DD170000 		.word	.L744+1
 9355 117c E9110000 		.word	.L737+1
 9356 1180 E9110000 		.word	.L737+1
 9357 1184 E9110000 		.word	.L737+1
 9358 1188 BB190000 		.word	.L750+1
ARM GAS  /tmp/ccizbp1a.s 			page 270


 9359 118c E9110000 		.word	.L737+1
 9360 1190 03180000 		.word	.L742+1
 9361 1194 E9110000 		.word	.L737+1
 9362 1198 E9110000 		.word	.L737+1
 9363 119c E9110000 		.word	.L737+1
 9364 11a0 E9110000 		.word	.L737+1
 9365 11a4 E9110000 		.word	.L737+1
 9366 11a8 19070000 		.word	.L741+1
 9367 11ac E9110000 		.word	.L737+1
 9368 11b0 E9110000 		.word	.L737+1
 9369 11b4 E9110000 		.word	.L737+1
 9370 11b8 E9110000 		.word	.L737+1
 9371 11bc E9110000 		.word	.L737+1
 9372 11c0 E9110000 		.word	.L737+1
 9373 11c4 E9110000 		.word	.L737+1
 9374 11c8 E9110000 		.word	.L737+1
 9375 11cc E9110000 		.word	.L737+1
 9376 11d0 E9110000 		.word	.L737+1
 9377 11d4 E9110000 		.word	.L737+1
 9378 11d8 27180000 		.word	.L740+1
 9379 11dc E9110000 		.word	.L737+1
 9380 11e0 E9110000 		.word	.L737+1
 9381 11e4 85170000 		.word	.L738+1
 9382              		.p2align 1
 9383              	.L737:
1476:src/keys.c    **** 		return STATE_UNFINISHED;
 9384              		.loc 1 1476 2 view .LVU2961
1476:src/keys.c    **** 		return STATE_UNFINISHED;
 9385              		.loc 1 1476 5 is_stmt 0 view .LVU2962
 9386 11e8 002A     		cmp	r2, #0
 9387 11ea 3FF4F8A9 		beq	.L1058
1478:src/keys.c    **** }
 9388              		.loc 1 1478 2 is_stmt 1 view .LVU2963
1478:src/keys.c    **** }
 9389              		.loc 1 1478 9 is_stmt 0 view .LVU2964
 9390 11ee 42F4884B 		orr	fp, r2, #17408
 9391 11f2 5846     		mov	r0, fp
 9392              	.LVL761:
1478:src/keys.c    **** }
 9393              		.loc 1 1478 9 view .LVU2965
 9394 11f4 FFF740B9 		b	.L618
 9395              	.LVL762:
 9396              	.L1097:
1478:src/keys.c    **** }
 9397              		.loc 1 1478 9 view .LVU2966
 9398              	.LBE819:
 9399              	.LBE1058:
2928:src/keys.c    **** 		// print_debug (3, c);
 9400              		.loc 1 2928 4 is_stmt 1 view .LVU2967
 9401              	.LBB1059:
 9402              	.LBI1059:
1000:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 9403              		.loc 1 1000 12 view .LVU2968
 9404              	.LBB1060:
1003:src/keys.c    **** 		// Row 1
 9405              		.loc 1 1003 2 view .LVU2969
1054:src/keys.c    **** 	int op = op_map[lc];
ARM GAS  /tmp/ccizbp1a.s 			page 271


 9406              		.loc 1 1054 2 view .LVU2970
 9407              	.LBB1061:
 9408              	.LBI1061:
 134:src/keys.c    **** {
 9409              		.loc 1 134 12 view .LVU2971
 9410              	.LBB1062:
 136:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9411              		.loc 1 136 2 view .LVU2972
 146:src/keys.c    **** }
 9412              		.loc 1 146 2 view .LVU2973
 146:src/keys.c    **** }
 9413              		.loc 1 146 2 is_stmt 0 view .LVU2974
 9414              	.LBE1062:
 9415              	.LBE1061:
1055:src/keys.c    **** 	reset_shift();
 9416              		.loc 1 1055 2 is_stmt 1 view .LVU2975
 9417              	.LBB1065:
 9418              	.LBB1063:
 146:src/keys.c    **** }
 9419              		.loc 1 146 23 is_stmt 0 view .LVU2976
 9420 11f8 244A     		ldr	r2, .L1151+16
 9421              	.LBE1063:
 9422              	.LBE1065:
1055:src/keys.c    **** 	reset_shift();
 9423              		.loc 1 1055 17 view .LVU2977
 9424 11fa 254B     		ldr	r3, .L1151+20
 9425              	.LBB1066:
 9426              	.LBB1064:
 146:src/keys.c    **** }
 9427              		.loc 1 146 23 view .LVU2978
 9428 11fc 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 9429              	.LBE1064:
 9430              	.LBE1066:
1055:src/keys.c    **** 	reset_shift();
 9431              		.loc 1 1055 17 view .LVU2979
 9432 11fe 33F812A0 		ldrh	r10, [r3, r2, lsl #1]
 9433              	.LVL763:
1056:src/keys.c    **** 
 9434              		.loc 1 1056 2 is_stmt 1 view .LVU2980
 9435              	.LBB1067:
 9436              	.LBI1067:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 9437              		.loc 1 102 13 view .LVU2981
 9438              	.LBE1067:
 9439              	.LBE1060:
 9440              	.LBE1059:
 9441              	.LBE1200:
 9442              	.LBE1259:
 103:src/keys.c    **** }
 9443              		.loc 1 103 2 view .LVU2982
 9444              	.LBB1260:
 9445              	.LBB1201:
 9446              	.LBB1083:
 9447              	.LBB1078:
 9448              	.LBB1074:
 9449              	.LBB1068:
 9450              	.LBI1068:
ARM GAS  /tmp/ccizbp1a.s 			page 272


  92:src/keys.c    **** 	enum shifts r = cur_shift();
 9451              		.loc 1 92 20 view .LVU2983
 9452              	.LBB1069:
  93:src/keys.c    **** 	State2.shifts = shift;
 9453              		.loc 1 93 2 view .LVU2984
 9454              	.LBB1070:
 9455              	.LBI1070:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 9456              		.loc 1 84 13 view .LVU2985
 9457              	.LBB1071:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9458              		.loc 1 85 2 view .LVU2986
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9459              		.loc 1 85 18 is_stmt 0 view .LVU2987
 9460 1202 FFF7FEFF 		bl	shift_down
 9461              	.LVL764:
  86:src/keys.c    **** }
 9462              		.loc 1 86 2 is_stmt 1 view .LVU2988
 9463              	.LBE1071:
 9464              	.LBE1070:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9465              		.loc 1 94 2 view .LVU2989
 9466              	.LBE1069:
 9467              	.LBE1068:
 9468              	.LBE1074:
1059:src/keys.c    **** 	case K62:
 9469              		.loc 1 1059 2 is_stmt 0 view .LVU2990
 9470 1206 262C     		cmp	r4, #38
 9471              	.LBB1075:
 9472              	.LBB1073:
 9473              	.LBB1072:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9474              		.loc 1 94 16 view .LVU2991
 9475 1208 86F810B0 		strb	fp, [r6, #16]
  95:src/keys.c    **** 	return r;
 9476              		.loc 1 95 2 is_stmt 1 view .LVU2992
  95:src/keys.c    **** 	return r;
 9477              		.loc 1 95 19 is_stmt 0 view .LVU2993
 9478 120c 86F80DB0 		strb	fp, [r6, #13]
  96:src/keys.c    **** }
 9479              		.loc 1 96 2 is_stmt 1 view .LVU2994
 9480              	.LVL765:
  96:src/keys.c    **** }
 9481              		.loc 1 96 2 is_stmt 0 view .LVU2995
 9482              	.LBE1072:
 9483              	.LBE1073:
 9484              	.LBE1075:
1059:src/keys.c    **** 	case K62:
 9485              		.loc 1 1059 2 is_stmt 1 view .LVU2996
 9486 1210 00F0E681 		beq	.L787
 9487 1214 272C     		cmp	r4, #39
 9488 1216 1CD1     		bne	.L789
1072:src/keys.c    **** 			return STATE_UNFINISHED;
 9489              		.loc 1 1072 3 view .LVU2997
1072:src/keys.c    **** 			return STATE_UNFINISHED;
 9490              		.loc 1 1072 7 is_stmt 0 view .LVU2998
 9491 1218 FFF7FEFF 		bl	is_bad_cmdline
ARM GAS  /tmp/ccizbp1a.s 			page 273


 9492              	.LVL766:
1072:src/keys.c    **** 			return STATE_UNFINISHED;
 9493              		.loc 1 1072 6 view .LVU2999
 9494 121c 0028     		cmp	r0, #0
 9495 121e 7FF4DEA9 		bne	.L1058
1074:src/keys.c    **** 		process_cmdline_set_lift();
 9496              		.loc 1 1074 3 is_stmt 1 view .LVU3000
1074:src/keys.c    **** 		process_cmdline_set_lift();
 9497              		.loc 1 1074 30 is_stmt 0 view .LVU3001
 9498 1222 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 9499 1224 C3F38012 		ubfx	r2, r3, #6, #1
1074:src/keys.c    **** 		process_cmdline_set_lift();
 9500              		.loc 1 1074 22 view .LVU3002
 9501 1228 C2F10102 		rsb	r2, r2, #1
1074:src/keys.c    **** 		process_cmdline_set_lift();
 9502              		.loc 1 1074 18 view .LVU3003
 9503 122c 62F38613 		bfi	r3, r2, #6, #1
 9504 1230 B375     		strb	r3, [r6, #22]
1075:src/keys.c    **** 		update_program_bounds(1);
 9505              		.loc 1 1075 3 is_stmt 1 view .LVU3004
 9506 1232 FFF7FEFF 		bl	process_cmdline_set_lift
 9507              	.LVL767:
1076:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
 9508              		.loc 1 1076 3 view .LVU3005
 9509 1236 0120     		movs	r0, #1
 9510 1238 FFF7FEFF 		bl	update_program_bounds
 9511              	.LVL768:
1077:src/keys.c    **** 			set_pc(0);
 9512              		.loc 1 1077 3 view .LVU3006
1077:src/keys.c    **** 			set_pc(0);
 9513              		.loc 1 1077 7 is_stmt 0 view .LVU3007
 9514 123c B07D     		ldrb	r0, [r6, #22]	@ zero_extendqisi2
1077:src/keys.c    **** 			set_pc(0);
 9515              		.loc 1 1077 6 view .LVU3008
 9516 123e 10F04000 		ands	r0, r0, #64
 9517 1242 06D1     		bne	.L789
1077:src/keys.c    **** 			set_pc(0);
 9518              		.loc 1 1077 27 view .LVU3009
 9519 1244 0F4B     		ldr	r3, .L1151+8
 9520 1246 1B68     		ldr	r3, [r3]
1077:src/keys.c    **** 			set_pc(0);
 9521              		.loc 1 1077 24 view .LVU3010
 9522 1248 B3F8E027 		ldrh	r2, [r3, #2016]
 9523 124c 012A     		cmp	r2, #1
 9524 124e 00F0A383 		beq	.L1130
 9525              	.L789:
1085:src/keys.c    **** 		if (op & _RARG) {
 9526              		.loc 1 1085 5 view .LVU3011
 9527 1252 BAF1330F 		cmp	r10, #51
1055:src/keys.c    **** 	reset_shift();
 9528              		.loc 1 1055 6 view .LVU3012
 9529 1256 D346     		mov	fp, r10
1085:src/keys.c    **** 		if (op & _RARG) {
 9530              		.loc 1 1085 2 is_stmt 1 view .LVU3013
1085:src/keys.c    **** 		if (op & _RARG) {
 9531              		.loc 1 1085 5 is_stmt 0 view .LVU3014
 9532 1258 0AD0     		beq	.L797
ARM GAS  /tmp/ccizbp1a.s 			page 274


 9533              	.LVL769:
1086:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 9534              		.loc 1 1086 3 is_stmt 1 view .LVU3015
1086:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 9535              		.loc 1 1086 6 is_stmt 0 view .LVU3016
 9536 125a 1AF4004F 		tst	r10, #32768
 9537 125e 00F09E82 		beq	.L1131
1087:src/keys.c    **** 			op = STATE_UNFINISHED;
 9538              		.loc 1 1087 4 is_stmt 1 view .LVU3017
 9539              	.LVL770:
 9540              	.LBB1076:
 9541              	.LBI1076:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 9542              		.loc 1 501 13 view .LVU3018
 9543              	.LBB1077:
 502:src/keys.c    **** 		return;
 9544              		.loc 1 502 2 view .LVU3019
 502:src/keys.c    **** 		return;
 9545              		.loc 1 502 6 is_stmt 0 view .LVU3020
 9546 1262 FFF7FEFF 		bl	is_bad_cmdline
 9547              	.LVL771:
 502:src/keys.c    **** 		return;
 9548              		.loc 1 502 5 view .LVU3021
 9549 1266 18B9     		cbnz	r0, .L797
 9550 1268 5FFA8AF0 		uxtb	r0, r10
 9551 126c FFF7FEFF 		bl	init_arg.part.0
 9552              	.LVL772:
 9553              	.L797:
 502:src/keys.c    **** 		return;
 9554              		.loc 1 502 5 view .LVU3022
 9555              	.LBE1077:
 9556              	.LBE1076:
1091:src/keys.c    **** #undef _RARG
 9557              		.loc 1 1091 2 is_stmt 1 view .LVU3023
1067:src/keys.c    **** #endif
 9558              		.loc 1 1067 29 is_stmt 0 view .LVU3024
 9559 1270 4FF0330B 		mov	fp, #51
 9560              	.LVL773:
 9561              	.L792:
1091:src/keys.c    **** #undef _RARG
 9562              		.loc 1 1091 57 view .LVU3025
 9563 1274 2BF4804B 		bic	fp, fp, #16384
 9564 1278 FFF78EB9 		b	.L592
 9565              	.L1152:
 9566              		.align	2
 9567              	.L1151:
 9568 127c 00000000 		.word	.LANCHOR1
 9569 1280 00000000 		.word	.LANCHOR0
 9570 1284 00000000 		.word	main_ram
 9571 1288 00000000 		.word	.LANCHOR9
 9572 128c 00000000 		.word	.LANCHOR18
 9573 1290 00000000 		.word	.LANCHOR21
 9574              	.LVL774:
 9575              	.L874:
1091:src/keys.c    **** #undef _RARG
 9576              		.loc 1 1091 57 view .LVU3026
 9577              	.LBE1078:
ARM GAS  /tmp/ccizbp1a.s 			page 275


 9578              	.LBE1083:
 9579              	.LBB1084:
 9580              	.LBB820:
 9581              	.LBB804:
 9582              	.LBB799:
 436:src/keys.c    **** 		else if (shift == SHIFT_G)
 9583              		.loc 1 436 10 view .LVU3027
 9584 1294 0422     		movs	r2, #4
 9585              	.L734:
 9586              	.LVL775:
 440:src/keys.c    **** }
 9587              		.loc 1 440 2 is_stmt 1 view .LVU3028
 9588              	.LBB795:
 119:src/keys.c    **** {
 9589              		.loc 1 119 12 view .LVU3029
 9590              	.LBB791:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9591              		.loc 1 121 2 view .LVU3030
 131:src/keys.c    **** }
 9592              		.loc 1 131 2 view .LVU3031
 131:src/keys.c    **** }
 9593              		.loc 1 131 23 is_stmt 0 view .LVU3032
 9594 1296 AA49     		ldr	r1, .L1153
 9595              	.LBE791:
 9596              	.LBE795:
 440:src/keys.c    **** }
 9597              		.loc 1 440 49 view .LVU3033
 9598 1298 DFF8BCC2 		ldr	ip, .L1153+24
 9599              	.LBB796:
 9600              	.LBB792:
 131:src/keys.c    **** }
 9601              		.loc 1 131 23 view .LVU3034
 9602 129c 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 9603              	.LBE792:
 9604              	.LBE796:
 440:src/keys.c    **** }
 9605              		.loc 1 440 49 view .LVU3035
 9606 129e 4FF0060E 		mov	lr, #6
 9607 12a2 0EFB01C1 		mla	r1, lr, r1, ip
 9608 12a6 063C     		subs	r4, r4, #6
 9609 12a8 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9610              	.LVL776:
 440:src/keys.c    **** }
 9611              		.loc 1 440 49 view .LVU3036
 9612              	.LBE799:
 9613              	.LBE804:
1391:src/keys.c    ****         int op = STATE_UNFINISHED;
 9614              		.loc 1 1391 2 is_stmt 1 view .LVU3037
1392:src/keys.c    **** 	State2.alpha_pos = 0;
 9615              		.loc 1 1392 9 view .LVU3038
1393:src/keys.c    **** 
 9616              		.loc 1 1393 2 view .LVU3039
1395:src/keys.c    **** 	case K10:	// STO
 9617              		.loc 1 1395 2 view .LVU3040
 9618 12aa 212C     		cmp	r4, #33
 9619 12ac 9CD8     		bhi	.L737
 9620 12ae 01A1     		adr	r1, .L739
ARM GAS  /tmp/ccizbp1a.s 			page 276


 9621 12b0 51F824F0 		ldr	pc, [r1, r4, lsl #2]
 9622              		.p2align 2
 9623              	.L739:
 9624 12b4 6D180000 		.word	.L746+1
 9625 12b8 45180000 		.word	.L745+1
 9626 12bc E9110000 		.word	.L737+1
 9627 12c0 E9110000 		.word	.L737+1
 9628 12c4 E9110000 		.word	.L737+1
 9629 12c8 E9110000 		.word	.L737+1
 9630 12cc DD170000 		.word	.L744+1
 9631 12d0 E9110000 		.word	.L737+1
 9632 12d4 E9110000 		.word	.L737+1
 9633 12d8 E9110000 		.word	.L737+1
 9634 12dc F3060000 		.word	.L743+1
 9635 12e0 E9110000 		.word	.L737+1
 9636 12e4 03180000 		.word	.L742+1
 9637 12e8 E9110000 		.word	.L737+1
 9638 12ec E9110000 		.word	.L737+1
 9639 12f0 E9110000 		.word	.L737+1
 9640 12f4 E9110000 		.word	.L737+1
 9641 12f8 E9110000 		.word	.L737+1
 9642 12fc 19070000 		.word	.L741+1
 9643 1300 E9110000 		.word	.L737+1
 9644 1304 E9110000 		.word	.L737+1
 9645 1308 E9110000 		.word	.L737+1
 9646 130c E9110000 		.word	.L737+1
 9647 1310 E9110000 		.word	.L737+1
 9648 1314 E9110000 		.word	.L737+1
 9649 1318 E9110000 		.word	.L737+1
 9650 131c E9110000 		.word	.L737+1
 9651 1320 E9110000 		.word	.L737+1
 9652 1324 E9110000 		.word	.L737+1
 9653 1328 E9110000 		.word	.L737+1
 9654 132c 27180000 		.word	.L740+1
 9655 1330 E9110000 		.word	.L737+1
 9656 1334 E9110000 		.word	.L737+1
 9657 1338 85170000 		.word	.L738+1
 9658              	.LVL777:
 9659              		.p2align 1
 9660              	.L1095:
1395:src/keys.c    **** 	case K10:	// STO
 9661              		.loc 1 1395 2 is_stmt 0 view .LVU3041
 9662              	.LBE820:
 9663              	.LBE1084:
2923:src/keys.c    **** 	} else {
 9664              		.loc 1 2923 3 is_stmt 1 view .LVU3042
 9665              	.LBB1085:
 9666              	.LBI1085:
1099:src/keys.c    **** #define _RARG   0xFF00
 9667              		.loc 1 1099 12 view .LVU3043
 9668              	.LBB1086:
1104:src/keys.c    **** 		// Row 1
 9669              		.loc 1 1104 2 view .LVU3044
1155:src/keys.c    **** 	int lc = keycode_to_linear(c);
 9670              		.loc 1 1155 2 view .LVU3045
 9671              	.LBB1087:
 9672              	.LBI1087:
ARM GAS  /tmp/ccizbp1a.s 			page 277


 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 9673              		.loc 1 102 13 view .LVU3046
 9674              	.LBE1087:
 9675              	.LBE1086:
 9676              	.LBE1085:
 9677              	.LBE1201:
 9678              	.LBE1260:
 103:src/keys.c    **** }
 9679              		.loc 1 103 2 view .LVU3047
 9680              	.LBB1261:
 9681              	.LBB1202:
 9682              	.LBB1115:
 9683              	.LBB1112:
 9684              	.LBB1098:
 9685              	.LBB1088:
 9686              	.LBI1088:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 9687              		.loc 1 92 20 view .LVU3048
 9688              	.LBB1089:
  93:src/keys.c    **** 	State2.shifts = shift;
 9689              		.loc 1 93 2 view .LVU3049
 9690              	.LBB1090:
 9691              	.LBI1090:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 9692              		.loc 1 84 13 view .LVU3050
 9693              	.LBB1091:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9694              		.loc 1 85 2 view .LVU3051
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9695              		.loc 1 85 18 is_stmt 0 view .LVU3052
 9696 133c FFF7FEFF 		bl	shift_down
 9697              	.LVL778:
  86:src/keys.c    **** }
 9698              		.loc 1 86 2 is_stmt 1 view .LVU3053
  86:src/keys.c    **** }
 9699              		.loc 1 86 52 is_stmt 0 view .LVU3054
 9700 1340 0346     		mov	r3, r0
 9701 1342 00B9     		cbnz	r0, .L758
 9702 1344 337C     		ldrb	r3, [r6, #16]	@ zero_extendqisi2
 9703              	.L758:
 9704              	.LVL779:
  86:src/keys.c    **** }
 9705              		.loc 1 86 52 view .LVU3055
 9706              	.LBE1091:
 9707              	.LBE1090:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9708              		.loc 1 94 2 is_stmt 1 view .LVU3056
 9709              	.LBE1089:
 9710              	.LBE1088:
 9711              	.LBE1098:
 9712              	.LBB1099:
 9713              	.LBB1100:
 146:src/keys.c    **** }
 9714              		.loc 1 146 23 is_stmt 0 view .LVU3057
 9715 1346 7F4A     		ldr	r2, .L1153+4
 9716              	.LBE1100:
 9717              	.LBE1099:
ARM GAS  /tmp/ccizbp1a.s 			page 278


1157:src/keys.c    **** 	State2.cmplx = 0;
 9718              		.loc 1 1157 21 view .LVU3058
 9719 1348 7F48     		ldr	r0, .L1153+8
 9720              	.LBB1103:
 9721              	.LBB1101:
 146:src/keys.c    **** }
 9722              		.loc 1 146 23 view .LVU3059
 9723 134a 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 9724              	.LBE1101:
 9725              	.LBE1103:
1158:src/keys.c    **** 
 9726              		.loc 1 1158 15 view .LVU3060
 9727 134c 717D     		ldrb	r1, [r6, #21]	@ zero_extendqisi2
1157:src/keys.c    **** 	State2.cmplx = 0;
 9728              		.loc 1 1157 21 view .LVU3061
 9729 134e 03EB8202 		add	r2, r3, r2, lsl #2
 9730              	.LBB1104:
 9731              	.LBB1095:
 9732              	.LBB1092:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9733              		.loc 1 94 16 view .LVU3062
 9734 1352 4FF0000A 		mov	r10, #0
 9735              	.LVL780:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9736              		.loc 1 94 16 view .LVU3063
 9737              	.LBE1092:
 9738              	.LBE1095:
 9739              	.LBE1104:
1157:src/keys.c    **** 	State2.cmplx = 0;
 9740              		.loc 1 1157 21 view .LVU3064
 9741 1356 30F812B0 		ldrh	fp, [r0, r2, lsl #1]
 9742              	.LBB1105:
 9743              	.LBB1096:
 9744              	.LBB1093:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9745              		.loc 1 94 16 view .LVU3065
 9746 135a 86F810A0 		strb	r10, [r6, #16]
  95:src/keys.c    **** 	return r;
 9747              		.loc 1 95 2 is_stmt 1 view .LVU3066
 9748              	.LBE1093:
 9749              	.LBE1096:
 9750              	.LBE1105:
1160:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9751              		.loc 1 1160 5 is_stmt 0 view .LVU3067
 9752 135e 0BF47F42 		and	r2, fp, #65280
1158:src/keys.c    **** 
 9753              		.loc 1 1158 15 view .LVU3068
 9754 1362 6AF34101 		bfi	r1, r10, #1, #1
1160:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9755              		.loc 1 1160 5 view .LVU3069
 9756 1366 B2F57F4F 		cmp	r2, #65280
1158:src/keys.c    **** 
 9757              		.loc 1 1158 15 view .LVU3070
 9758 136a 7175     		strb	r1, [r6, #21]
 9759              	.LBB1106:
 9760              	.LBB1097:
 9761              	.LBB1094:
ARM GAS  /tmp/ccizbp1a.s 			page 279


  95:src/keys.c    **** 	return r;
 9762              		.loc 1 95 19 view .LVU3071
 9763 136c 86F80DA0 		strb	r10, [r6, #13]
  96:src/keys.c    **** }
 9764              		.loc 1 96 2 is_stmt 1 view .LVU3072
 9765              	.LVL781:
  96:src/keys.c    **** }
 9766              		.loc 1 96 2 is_stmt 0 view .LVU3073
 9767              	.LBE1094:
 9768              	.LBE1097:
 9769              	.LBE1106:
1156:src/keys.c    **** 	int op = op_map[lc][shift];
 9770              		.loc 1 1156 2 is_stmt 1 view .LVU3074
 9771              	.LBB1107:
 9772              	.LBI1099:
 134:src/keys.c    **** {
 9773              		.loc 1 134 12 view .LVU3075
 9774              	.LBB1102:
 136:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9775              		.loc 1 136 2 view .LVU3076
 146:src/keys.c    **** }
 9776              		.loc 1 146 2 view .LVU3077
 146:src/keys.c    **** }
 9777              		.loc 1 146 2 is_stmt 0 view .LVU3078
 9778              	.LBE1102:
 9779              	.LBE1107:
1157:src/keys.c    **** 	State2.cmplx = 0;
 9780              		.loc 1 1157 2 is_stmt 1 view .LVU3079
1158:src/keys.c    **** 
 9781              		.loc 1 1158 2 view .LVU3080
1160:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9782              		.loc 1 1160 2 view .LVU3081
1160:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9783              		.loc 1 1160 5 is_stmt 0 view .LVU3082
 9784 1370 00F07E83 		beq	.L784
1164:src/keys.c    **** 		// HYP
 9785              		.loc 1 1164 2 is_stmt 1 view .LVU3083
1164:src/keys.c    **** 		// HYP
 9786              		.loc 1 1164 5 is_stmt 0 view .LVU3084
 9787 1374 002C     		cmp	r4, #0
 9788 1376 00F06183 		beq	.L1132
1173:src/keys.c    **** 		switch (c) {
 9789              		.loc 1 1173 2 is_stmt 1 view .LVU3085
1173:src/keys.c    **** 		switch (c) {
 9790              		.loc 1 1173 5 is_stmt 0 view .LVU3086
 9791 137a 002B     		cmp	r3, #0
 9792 137c 3FF40CA9 		beq	.L592
1174:src/keys.c    **** 		case K_CMPLX:
 9793              		.loc 1 1174 3 is_stmt 1 view .LVU3087
 9794 1380 242C     		cmp	r4, #36
 9795 1382 00F05783 		beq	.L761
 9796 1386 2D2C     		cmp	r4, #45
 9797 1388 00F04B83 		beq	.L762
 9798 138c 1F2C     		cmp	r4, #31
 9799 138e 7FF403A9 		bne	.L592
1180:src/keys.c    **** 				if (is_bad_cmdline())
 9800              		.loc 1 1180 4 view .LVU3088
ARM GAS  /tmp/ccizbp1a.s 			page 280


1180:src/keys.c    **** 				if (is_bad_cmdline())
 9801              		.loc 1 1180 7 is_stmt 0 view .LVU3089
 9802 1392 BBF1330F 		cmp	fp, #51
 9803 1396 3FF422A9 		beq	.L1058
1181:src/keys.c    **** 					return STATE_UNFINISHED;
 9804              		.loc 1 1181 5 is_stmt 1 view .LVU3090
1181:src/keys.c    **** 					return STATE_UNFINISHED;
 9805              		.loc 1 1181 9 is_stmt 0 view .LVU3091
 9806 139a FFF7FEFF 		bl	is_bad_cmdline
 9807              	.LVL782:
1181:src/keys.c    **** 					return STATE_UNFINISHED;
 9808              		.loc 1 1181 8 view .LVU3092
 9809 139e 0446     		mov	r4, r0
 9810 13a0 0028     		cmp	r0, #0
 9811 13a2 7FF41CA9 		bne	.L1058
1183:src/keys.c    **** 				State2.cmplx = 1;
 9812              		.loc 1 1183 5 is_stmt 1 view .LVU3093
 9813 13a6 FFF7FEFF 		bl	process_cmdline_set_lift
 9814              	.LVL783:
1184:src/keys.c    **** 				State2.test = op;
 9815              		.loc 1 1184 5 view .LVU3094
1184:src/keys.c    **** 				State2.test = op;
 9816              		.loc 1 1184 18 is_stmt 0 view .LVU3095
 9817 13aa 737D     		ldrb	r3, [r6, #21]	@ zero_extendqisi2
1185:src/keys.c    **** 			}
 9818              		.loc 1 1185 17 view .LVU3096
 9819 13ac 86F80FB0 		strb	fp, [r6, #15]
1184:src/keys.c    **** 				State2.test = op;
 9820              		.loc 1 1184 18 view .LVU3097
 9821 13b0 43F00203 		orr	r3, r3, #2
 9822              	.LBE1112:
 9823              	.LBE1115:
 9824              	.LBE1202:
 9825              	.LBE1261:
2952:src/keys.c    **** #ifdef DM42
 9826              		.loc 1 2952 7 view .LVU3098
 9827 13b4 A046     		mov	r8, r4
 9828              	.LBB1262:
 9829              	.LBB1203:
 9830              	.LBB1116:
 9831              	.LBB1113:
1184:src/keys.c    **** 				State2.test = op;
 9832              		.loc 1 1184 18 view .LVU3099
 9833 13b6 7375     		strb	r3, [r6, #21]
1185:src/keys.c    **** 			}
 9834              		.loc 1 1185 5 is_stmt 1 view .LVU3100
1187:src/keys.c    **** 
 9835              		.loc 1 1187 11 is_stmt 0 view .LVU3101
 9836 13b8 4FF0330B 		mov	fp, #51
 9837              	.LVL784:
1187:src/keys.c    **** 
 9838              		.loc 1 1187 11 view .LVU3102
 9839 13bc FEF7AEBE 		b	.L563
 9840              	.LVL785:
 9841              	.L867:
1187:src/keys.c    **** 
 9842              		.loc 1 1187 11 view .LVU3103
ARM GAS  /tmp/ccizbp1a.s 			page 281


 9843              	.LBE1113:
 9844              	.LBE1116:
 9845              	.LBB1117:
 9846              	.LBB989:
2539:src/keys.c    **** 	const int opcode = getprog(pc);
 9847              		.loc 1 2539 27 view .LVU3104
 9848 13c0 4FF0030B 		mov	fp, #3
 9849 13c4 92E4     		b	.L682
 9850              	.LVL786:
 9851              	.L1099:
2539:src/keys.c    **** 	const int opcode = getprog(pc);
 9852              		.loc 1 2539 27 view .LVU3105
 9853              	.LBE989:
 9854              	.LBE1117:
 9855              	.LBB1118:
 9856              	.LBB728:
2360:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 9857              		.loc 1 2360 3 is_stmt 1 view .LVU3106
2360:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 9858              		.loc 1 2360 12 is_stmt 0 view .LVU3107
 9859 13c6 F27A     		ldrb	r2, [r6, #11]	@ zero_extendqisi2
 9860 13c8 2046     		mov	r0, r4
 9861 13ca 941E     		subs	r4, r2, #2
 9862 13cc 6242     		rsbs	r2, r4, #0
 9863 13ce 6241     		adcs	r2, r2, r4
 9864 13d0 FFF7FEFF 		bl	process_catalogue
 9865              	.LVL787:
2361:src/keys.c    **** 			return opcode;
 9866              		.loc 1 2361 3 is_stmt 1 view .LVU3108
2361:src/keys.c    **** 			return opcode;
 9867              		.loc 1 2361 6 is_stmt 0 view .LVU3109
 9868 13d4 3328     		cmp	r0, #51
 9869 13d6 3FF402A9 		beq	.L1058
2363:src/keys.c    **** 		goto add_char;
 9870              		.loc 1 2363 3 is_stmt 1 view .LVU3110
2363:src/keys.c    **** 		goto add_char;
 9871              		.loc 1 2363 6 is_stmt 0 view .LVU3111
 9872 13da C3B2     		uxtb	r3, r0
 9873              	.LVL788:
2364:src/keys.c    **** 	}
 9874              		.loc 1 2364 3 is_stmt 1 view .LVU3112
 9875 13dc FFF7BDB8 		b	.L670
 9876              	.LVL789:
 9877              	.L1088:
2364:src/keys.c    **** 	}
 9878              		.loc 1 2364 3 is_stmt 0 view .LVU3113
 9879              	.LBE728:
 9880              	.LBE1118:
 9881              	.LBB1119:
 9882              	.LBB655:
 9883              	.LBB649:
 324:src/keys.c    **** #else
 9884              		.loc 1 324 45 view .LVU3114
 9885 13e0 FFF7FEFF 		bl	shift_down
 9886              	.LVL790:
 324:src/keys.c    **** #else
 9887              		.loc 1 324 42 view .LVU3115
ARM GAS  /tmp/ccizbp1a.s 			page 282


 9888 13e4 0328     		cmp	r0, #3
 9889 13e6 00F0E681 		beq	.L659
 9890 13ea 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
 322:src/keys.c    **** #ifndef WINGUI
 9891              		.loc 1 322 8 view .LVU3116
 9892 13ec 574B     		ldr	r3, .L1153+12
 324:src/keys.c    **** #else
 9893              		.loc 1 324 73 view .LVU3117
 9894 13ee DC46     		mov	ip, fp
 328:src/keys.c    ****   }
 9895              		.loc 1 328 9 view .LVU3118
 9896 13f0 0C21     		movs	r1, #12
 9897 13f2 FEF79EBF 		b	.L658
 9898              	.LVL791:
 9899              	.L1096:
 328:src/keys.c    ****   }
 9900              		.loc 1 328 9 view .LVU3119
 9901              	.LBE649:
 9902              	.LBE655:
 9903              	.LBE1119:
2926:src/keys.c    **** 		if (shift == SHIFT_H)
 9904              		.loc 1 2926 4 is_stmt 1 view .LVU3120
 9905              	.LBB1120:
 9906              	.LBI994:
 842:src/keys.c    **** 
 9907              		.loc 1 842 12 view .LVU3121
 9908              	.LBB1023:
 845:src/keys.c    **** 		// Row 1
 9909              		.loc 1 845 2 view .LVU3122
 896:src/keys.c    **** 		STATE_UNFINISHED,
 9910              		.loc 1 896 2 view .LVU3123
 903:src/keys.c    **** 	int lc = keycode_to_linear(c);
 9911              		.loc 1 903 2 view .LVU3124
 9912              	.LBB999:
 9913              	.LBI999:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 9914              		.loc 1 102 13 view .LVU3125
 9915              	.LBE999:
 9916              	.LBE1023:
 9917              	.LBE1120:
 9918              	.LBE1203:
 9919              	.LBE1262:
 103:src/keys.c    **** }
 9920              		.loc 1 103 2 view .LVU3126
 9921              	.LBB1263:
 9922              	.LBB1204:
 9923              	.LBB1121:
 9924              	.LBB1024:
 9925              	.LBB1010:
 9926              	.LBB1000:
 9927              	.LBI1000:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 9928              		.loc 1 92 20 view .LVU3127
 9929              	.LBB1001:
  93:src/keys.c    **** 	State2.shifts = shift;
 9930              		.loc 1 93 2 view .LVU3128
 9931              	.LBB1002:
ARM GAS  /tmp/ccizbp1a.s 			page 283


 9932              	.LBI1002:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 9933              		.loc 1 84 13 view .LVU3129
 9934              	.LBB1003:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9935              		.loc 1 85 2 view .LVU3130
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9936              		.loc 1 85 18 is_stmt 0 view .LVU3131
 9937 13f6 FFF7FEFF 		bl	shift_down
 9938              	.LVL792:
  86:src/keys.c    **** }
 9939              		.loc 1 86 2 is_stmt 1 view .LVU3132
  86:src/keys.c    **** }
 9940              		.loc 1 86 52 is_stmt 0 view .LVU3133
 9941 13fa 0346     		mov	r3, r0
 9942 13fc 00B9     		cbnz	r0, .L765
 9943 13fe 337C     		ldrb	r3, [r6, #16]	@ zero_extendqisi2
 9944              	.L765:
 9945              	.LVL793:
  86:src/keys.c    **** }
 9946              		.loc 1 86 52 view .LVU3134
 9947              	.LBE1003:
 9948              	.LBE1002:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9949              		.loc 1 94 2 is_stmt 1 view .LVU3135
 9950              	.LBE1001:
 9951              	.LBE1000:
 9952              	.LBE1010:
 9953              	.LBB1011:
 9954              	.LBB1012:
 146:src/keys.c    **** }
 9955              		.loc 1 146 23 is_stmt 0 view .LVU3136
 9956 1400 504A     		ldr	r2, .L1153+4
 9957              	.LBE1012:
 9958              	.LBE1011:
 905:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 9959              		.loc 1 905 21 view .LVU3137
 9960 1402 DFF858C1 		ldr	ip, .L1153+28
 9961              	.LBB1015:
 9962              	.LBB1013:
 146:src/keys.c    **** }
 9963              		.loc 1 146 23 view .LVU3138
 9964 1406 105D     		ldrb	r0, [r2, r4]	@ zero_extendqisi2
 9965              	.LBE1013:
 9966              	.LBE1015:
 905:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 9967              		.loc 1 905 21 view .LVU3139
 9968 1408 4200     		lsls	r2, r0, #1
 9969 140a 022B     		cmp	r3, #2
 9970 140c 08BF     		it	eq
 9971 140e 0132     		addeq	r2, r2, #1
 9972              	.LBB1016:
 9973              	.LBB1007:
 9974              	.LBB1004:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9975              		.loc 1 94 16 view .LVU3140
 9976 1410 0021     		movs	r1, #0
ARM GAS  /tmp/ccizbp1a.s 			page 284


 9977              	.LBE1004:
 9978              	.LBE1007:
 9979              	.LBE1016:
 905:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 9980              		.loc 1 905 21 view .LVU3141
 9981 1412 3CF812B0 		ldrh	fp, [ip, r2, lsl #1]
 9982              	.LBB1017:
 9983              	.LBB1008:
 9984              	.LBB1005:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9985              		.loc 1 94 16 view .LVU3142
 9986 1416 3174     		strb	r1, [r6, #16]
  95:src/keys.c    **** 	return r;
 9987              		.loc 1 95 2 is_stmt 1 view .LVU3143
 9988 1418 0BF4704A 		and	r10, fp, #61440
 9989              	.LVL794:
  95:src/keys.c    **** 	return r;
 9990              		.loc 1 95 2 is_stmt 0 view .LVU3144
 9991              	.LBE1005:
 9992              	.LBE1008:
 9993              	.LBE1017:
 907:src/keys.c    **** 		op &= ~NO_INT;
 9994              		.loc 1 907 5 view .LVU3145
 9995 141c BAF5704F 		cmp	r10, #61440
 9996              	.LBB1018:
 9997              	.LBB1009:
 9998              	.LBB1006:
  95:src/keys.c    **** 	return r;
 9999              		.loc 1 95 19 view .LVU3146
 10000 1420 7173     		strb	r1, [r6, #13]
  96:src/keys.c    **** }
 10001              		.loc 1 96 2 is_stmt 1 view .LVU3147
 10002              	.LVL795:
  96:src/keys.c    **** }
 10003              		.loc 1 96 2 is_stmt 0 view .LVU3148
 10004              	.LBE1006:
 10005              	.LBE1009:
 10006              	.LBE1018:
 904:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 10007              		.loc 1 904 2 is_stmt 1 view .LVU3149
 10008              	.LBB1019:
 10009              	.LBI1011:
 134:src/keys.c    **** {
 10010              		.loc 1 134 12 view .LVU3150
 10011              	.LBB1014:
 136:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10012              		.loc 1 136 2 view .LVU3151
 146:src/keys.c    **** }
 10013              		.loc 1 146 2 view .LVU3152
 146:src/keys.c    **** }
 10014              		.loc 1 146 2 is_stmt 0 view .LVU3153
 10015              	.LBE1014:
 10016              	.LBE1019:
 905:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10017              		.loc 1 905 2 is_stmt 1 view .LVU3154
 906:src/keys.c    **** 	if (no_int)
 10018              		.loc 1 906 2 view .LVU3155
ARM GAS  /tmp/ccizbp1a.s 			page 285


 907:src/keys.c    **** 		op &= ~NO_INT;
 10019              		.loc 1 907 2 view .LVU3156
 907:src/keys.c    **** 		op &= ~NO_INT;
 10020              		.loc 1 907 5 is_stmt 0 view .LVU3157
 10021 1422 00F03B82 		beq	.L1133
 910:src/keys.c    **** 	case K00:
 10022              		.loc 1 910 2 is_stmt 1 view .LVU3158
 10023 1426 282C     		cmp	r4, #40
 10024 1428 26D8     		bhi	.L785
 10025 142a DFE804F0 		tbb	[pc, r4]
 10026              	.L839:
 10027 142e 60       		.byte	(.L777-.L839)/2
 10028 142f 15       		.byte	(.L775-.L839)/2
 10029 1430 25       		.byte	(.L785-.L839)/2
 10030 1431 15       		.byte	(.L775-.L839)/2
 10031 1432 25       		.byte	(.L785-.L839)/2
 10032 1433 25       		.byte	(.L785-.L839)/2
 10033 1434 25       		.byte	(.L785-.L839)/2
 10034 1435 25       		.byte	(.L785-.L839)/2
 10035 1436 25       		.byte	(.L785-.L839)/2
 10036 1437 25       		.byte	(.L785-.L839)/2
 10037 1438 25       		.byte	(.L785-.L839)/2
 10038 1439 25       		.byte	(.L785-.L839)/2
 10039 143a 2B       		.byte	(.L774-.L839)/2
 10040 143b 25       		.byte	(.L785-.L839)/2
 10041 143c 25       		.byte	(.L785-.L839)/2
 10042 143d 25       		.byte	(.L785-.L839)/2
 10043 143e 25       		.byte	(.L785-.L839)/2
 10044 143f 25       		.byte	(.L785-.L839)/2
 10045 1440 99       		.byte	(.L773-.L839)/2
 10046 1441 6F       		.byte	(.L772-.L839)/2
 10047 1442 25       		.byte	(.L785-.L839)/2
 10048 1443 25       		.byte	(.L785-.L839)/2
 10049 1444 25       		.byte	(.L785-.L839)/2
 10050 1445 25       		.byte	(.L785-.L839)/2
 10051 1446 25       		.byte	(.L785-.L839)/2
 10052 1447 25       		.byte	(.L785-.L839)/2
 10053 1448 25       		.byte	(.L785-.L839)/2
 10054 1449 25       		.byte	(.L785-.L839)/2
 10055 144a 25       		.byte	(.L785-.L839)/2
 10056 144b 25       		.byte	(.L785-.L839)/2
 10057 144c 48       		.byte	(.L771-.L839)/2
 10058 144d 39       		.byte	(.L770-.L839)/2
 10059 144e 4F       		.byte	(.L768-.L839)/2
 10060 144f 4F       		.byte	(.L768-.L839)/2
 10061 1450 25       		.byte	(.L785-.L839)/2
 10062 1451 25       		.byte	(.L785-.L839)/2
 10063 1452 25       		.byte	(.L785-.L839)/2
 10064 1453 25       		.byte	(.L785-.L839)/2
 10065 1454 25       		.byte	(.L785-.L839)/2
 10066 1455 4F       		.byte	(.L768-.L839)/2
 10067 1456 4F       		.byte	(.L768-.L839)/2
 10068 1457 00       		.p2align 1
 10069              	.L775:
 931:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10070              		.loc 1 931 4 view .LVU3159
 931:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
ARM GAS  /tmp/ccizbp1a.s 			page 286


 10071              		.loc 1 931 8 is_stmt 0 view .LVU3160
 10072 1458 3D4A     		ldr	r2, .L1153+16
 10073 145a 1268     		ldr	r2, [r2]
 10074 145c 92F8E827 		ldrb	r2, [r2, #2024]	@ zero_extendqisi2
 931:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10075              		.loc 1 931 7 view .LVU3161
 10076 1460 D107     		lsls	r1, r2, #31
 10077 1462 4BD4     		bmi	.L1063
 10078              	.LVL796:
 10079              	.L779:
 990:src/keys.c    **** 		return STATE_UNFINISHED;
 10080              		.loc 1 990 2 is_stmt 1 view .LVU3162
 990:src/keys.c    **** 		return STATE_UNFINISHED;
 10081              		.loc 1 990 5 is_stmt 0 view .LVU3163
 10082 1464 BAF5704F 		cmp	r10, #61440
 10083 1468 06D1     		bne	.L785
 10084              	.L767:
 990:src/keys.c    **** 		return STATE_UNFINISHED;
 10085              		.loc 1 990 13 view .LVU3164
 10086 146a 394B     		ldr	r3, .L1153+16
 10087 146c 1B68     		ldr	r3, [r3]
 10088 146e 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10089 1472 D907     		lsls	r1, r3, #31
 10090 1474 3FF5B3A8 		bmi	.L1058
 10091              	.LVL797:
 10092              	.L785:
 993:src/keys.c    **** #undef NO_INT
 10093              		.loc 1 993 2 is_stmt 1 view .LVU3165
 10094              	.LBB1020:
 10095              	.LBI996:
 619:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10096              		.loc 1 619 12 view .LVU3166
 10097              	.LBB998:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 10098              		.loc 1 620 2 view .LVU3167
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 10099              		.loc 1 620 6 is_stmt 0 view .LVU3168
 10100 1478 4FEA2B23 		asr	r3, fp, #8
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 10101              		.loc 1 620 5 view .LVU3169
 10102 147c 012B     		cmp	r3, #1
 10103 147e 7FF48BA8 		bne	.L592
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 10104              		.loc 1 620 5 view .LVU3170
 10105 1482 BEE4     		b	.L847
 10106              	.LVL798:
 10107              	.L774:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 10108              		.loc 1 620 5 view .LVU3171
 10109              	.LBE998:
 10110              	.LBE1020:
 942:src/keys.c    **** 			if (is_bad_cmdline())
 10111              		.loc 1 942 3 is_stmt 1 view .LVU3172
 942:src/keys.c    **** 			if (is_bad_cmdline())
 10112              		.loc 1 942 6 is_stmt 0 view .LVU3173
 10113 1484 012B     		cmp	r3, #1
 10114 1486 EDD1     		bne	.L779
ARM GAS  /tmp/ccizbp1a.s 			page 287


 943:src/keys.c    **** 				return STATE_UNFINISHED;
 10115              		.loc 1 943 4 is_stmt 1 view .LVU3174
 943:src/keys.c    **** 				return STATE_UNFINISHED;
 10116              		.loc 1 943 8 is_stmt 0 view .LVU3175
 10117 1488 FFF7FEFF 		bl	is_bad_cmdline
 10118              	.LVL799:
 943:src/keys.c    **** 				return STATE_UNFINISHED;
 10119              		.loc 1 943 7 view .LVU3176
 10120 148c 0028     		cmp	r0, #0
 10121 148e 7FF4A6A8 		bne	.L1058
 945:src/keys.c    **** 			State2.alphas = 1;
 10122              		.loc 1 945 4 is_stmt 1 view .LVU3177
 10123 1492 FFF7FEFF 		bl	process_cmdline_set_lift
 10124              	.LVL800:
 946:src/keys.c    **** 		}
 10125              		.loc 1 946 4 view .LVU3178
 946:src/keys.c    **** 		}
 10126              		.loc 1 946 18 is_stmt 0 view .LVU3179
 10127 1496 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 10128 1498 43F00803 		orr	r3, r3, #8
 10129 149c B375     		strb	r3, [r6, #22]
 10130 149e E1E7     		b	.L779
 10131              	.LVL801:
 10132              	.L770:
 962:src/keys.c    **** 			return STATE_UNFINISHED;
 10133              		.loc 1 962 3 is_stmt 1 view .LVU3180
 962:src/keys.c    **** 			return STATE_UNFINISHED;
 10134              		.loc 1 962 7 is_stmt 0 view .LVU3181
 10135 14a0 FFF7FEFF 		bl	is_bad_cmdline
 10136              	.LVL802:
 962:src/keys.c    **** 			return STATE_UNFINISHED;
 10137              		.loc 1 962 6 view .LVU3182
 10138 14a4 0446     		mov	r4, r0
 10139              	.LVL803:
 962:src/keys.c    **** 			return STATE_UNFINISHED;
 10140              		.loc 1 962 6 view .LVU3183
 10141 14a6 0028     		cmp	r0, #0
 10142 14a8 7FF499A8 		bne	.L1058
 964:src/keys.c    **** 		State2.test = op;
 10143              		.loc 1 964 3 is_stmt 1 view .LVU3184
 10144 14ac FFF7FEFF 		bl	process_cmdline_set_lift
 10145              	.LVL804:
 965:src/keys.c    **** 		return STATE_UNFINISHED;
 10146              		.loc 1 965 3 view .LVU3185
 10147              	.LBE1024:
 10148              	.LBE1121:
 10149              	.LBE1204:
 10150              	.LBE1263:
2952:src/keys.c    **** #ifdef DM42
 10151              		.loc 1 2952 7 is_stmt 0 view .LVU3186
 10152 14b0 A046     		mov	r8, r4
 10153              	.LBB1264:
 10154              	.LBB1205:
 10155              	.LBB1122:
 10156              	.LBB1025:
 965:src/keys.c    **** 		return STATE_UNFINISHED;
 10157              		.loc 1 965 15 view .LVU3187
ARM GAS  /tmp/ccizbp1a.s 			page 288


 10158 14b2 86F80FB0 		strb	fp, [r6, #15]
 966:src/keys.c    **** 
 10159              		.loc 1 966 3 is_stmt 1 view .LVU3188
 966:src/keys.c    **** 
 10160              		.loc 1 966 10 is_stmt 0 view .LVU3189
 10161 14b6 4FF0330B 		mov	fp, #51
 10162              	.LVL805:
 966:src/keys.c    **** 
 10163              		.loc 1 966 10 view .LVU3190
 10164 14ba FEF72FBE 		b	.L563
 10165              	.LVL806:
 10166              	.L771:
 970:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10167              		.loc 1 970 3 is_stmt 1 view .LVU3191
 10168 14be 0093     		str	r3, [sp]
 970:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10169              		.loc 1 970 18 is_stmt 0 view .LVU3192
 10170 14c0 FFF7FEFF 		bl	shift_down
 10171              	.LVL807:
 970:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10172              		.loc 1 970 6 view .LVU3193
 10173 14c4 009B     		ldr	r3, [sp]
 10174 14c6 0028     		cmp	r0, #0
 10175 14c8 40F01683 		bne	.L1134
 10176              	.L768:
 979:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 10177              		.loc 1 979 3 is_stmt 1 view .LVU3194
 979:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 10178              		.loc 1 979 6 is_stmt 0 view .LVU3195
 10179 14cc BBF59C7F 		cmp	fp, #312
 10180 14d0 40F0C482 		bne	.L1135
 990:src/keys.c    **** 		return STATE_UNFINISHED;
 10181              		.loc 1 990 2 is_stmt 1 view .LVU3196
 990:src/keys.c    **** 		return STATE_UNFINISHED;
 10182              		.loc 1 990 5 is_stmt 0 view .LVU3197
 10183 14d4 BAF5704F 		cmp	r10, #61440
 10184 14d8 7FF493AC 		bne	.L847
 990:src/keys.c    **** 		return STATE_UNFINISHED;
 10185              		.loc 1 990 13 view .LVU3198
 10186 14dc 1C4B     		ldr	r3, .L1153+16
 10187 14de 1B68     		ldr	r3, [r3]
 10188 14e0 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10189 14e4 DB07     		lsls	r3, r3, #31
 10190 14e6 7FF58CAC 		bpl	.L847
 10191 14ea FFF778B8 		b	.L1058
 10192              	.LVL808:
 10193              	.L777:
 912:src/keys.c    **** 	    State2.hyp = 1;
 10194              		.loc 1 912 4 is_stmt 1 view .LVU3199
 912:src/keys.c    **** 	    State2.hyp = 1;
 10195              		.loc 1 912 8 is_stmt 0 view .LVU3200
 10196 14ee 184A     		ldr	r2, .L1153+16
 10197 14f0 1268     		ldr	r2, [r2]
 10198 14f2 92F8E827 		ldrb	r2, [r2, #2024]	@ zero_extendqisi2
 912:src/keys.c    **** 	    State2.hyp = 1;
 10199              		.loc 1 912 7 view .LVU3201
 10200 14f6 D407     		lsls	r4, r2, #31
ARM GAS  /tmp/ccizbp1a.s 			page 289


 10201 14f8 40F1DF82 		bpl	.L1136
 10202              	.L1063:
 931:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10203              		.loc 1 931 20 view .LVU3202
 10204 14fc 012B     		cmp	r3, #1
 10205 14fe 00F0EA82 		beq	.L1137
 990:src/keys.c    **** 		return STATE_UNFINISHED;
 10206              		.loc 1 990 2 is_stmt 1 view .LVU3203
 990:src/keys.c    **** 		return STATE_UNFINISHED;
 10207              		.loc 1 990 5 is_stmt 0 view .LVU3204
 10208 1502 BAF5704F 		cmp	r10, #61440
 10209 1506 B7D1     		bne	.L785
 10210 1508 FFF769B8 		b	.L1058
 10211              	.L772:
 951:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10212              		.loc 1 951 4 is_stmt 1 view .LVU3205
 951:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10213              		.loc 1 951 7 is_stmt 0 view .LVU3206
 10214 150c 022B     		cmp	r3, #2
 10215 150e A9D1     		bne	.L779
 951:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10216              		.loc 1 951 27 view .LVU3207
 10217 1510 0F4B     		ldr	r3, .L1153+16
 10218              	.LVL809:
 951:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10219              		.loc 1 951 27 view .LVU3208
 10220 1512 1B68     		ldr	r3, [r3]
 10221 1514 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10222 1518 DA07     		lsls	r2, r3, #31
 10223 151a A3D5     		bpl	.L779
 951:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10224              		.loc 1 951 45 view .LVU3209
 10225 151c 0D20     		movs	r0, #13
 10226              	.LVL810:
 951:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10227              		.loc 1 951 45 view .LVU3210
 10228 151e FFF7FEFF 		bl	intltr
 10229              	.LVL811:
 951:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10230              		.loc 1 951 42 view .LVU3211
 10231 1522 0028     		cmp	r0, #0
 10232 1524 9ED0     		beq	.L779
 10233              	.LVL812:
 951:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10234              		.loc 1 951 42 view .LVU3212
 10235              	.LBE1025:
 10236              	.LBE1122:
 10237              	.LBE1205:
 10238              	.LBE1264:
3173:src/keys.c    **** 	NonProgrammable = 0;
 10239              		.loc 1 3173 7 is_stmt 1 view .LVU3213
3173:src/keys.c    **** 	NonProgrammable = 0;
 10240              		.loc 1 3173 11 is_stmt 0 view .LVU3214
 10241 1526 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
3173:src/keys.c    **** 	NonProgrammable = 0;
 10242              		.loc 1 3173 10 view .LVU3215
 10243 1528 5A06     		lsls	r2, r3, #25
ARM GAS  /tmp/ccizbp1a.s 			page 290


 10244 152a 40F1DC82 		bpl	.L878
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10245              		.loc 1 3174 2 is_stmt 1 view .LVU3216
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10246              		.loc 1 3174 18 is_stmt 0 view .LVU3217
 10247 152e 094B     		ldr	r3, .L1153+20
 10248 1530 0022     		movs	r2, #0
 10249              	.LBB1265:
 10250              	.LBB1206:
 10251              	.LBB1123:
 10252              	.LBB1026:
 952:src/keys.c    **** 	  }
 10253              		.loc 1 952 13 view .LVU3218
 10254 1532 4FF0120B 		mov	fp, #18
 10255              	.LBE1026:
 10256              	.LBE1123:
 10257              	.LBE1206:
 10258              	.LBE1265:
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10259              		.loc 1 3174 18 view .LVU3219
 10260 1536 1A60     		str	r2, [r3]
3175:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10261              		.loc 1 3175 2 is_stmt 1 view .LVU3220
3175:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10262              		.loc 1 3175 32 is_stmt 0 view .LVU3221
 10263 1538 5846     		mov	r0, fp
 10264 153a FFF7A7B8 		b	.L830
 10265              	.L1154:
 10266 153e 00BF     		.align	2
 10267              	.L1153:
 10268 1540 00000000 		.word	.LANCHOR1
 10269 1544 00000000 		.word	.LANCHOR18
 10270 1548 00000000 		.word	.LANCHOR17
 10271 154c 00000000 		.word	.LANCHOR11
 10272 1550 00000000 		.word	main_ram
 10273 1554 00000000 		.word	NonProgrammable
 10274 1558 00000000 		.word	.LANCHOR9
 10275 155c 00000000 		.word	.LANCHOR19
 10276              	.LVL813:
 10277              	.L773:
 10278              	.LBB1266:
 10279              	.LBB1207:
 10280              	.LBB1124:
 10281              	.LBB1027:
 956:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10282              		.loc 1 956 4 is_stmt 1 view .LVU3222
 956:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10283              		.loc 1 956 7 is_stmt 0 view .LVU3223
 10284 1560 022B     		cmp	r3, #2
 10285 1562 7FF47FAF 		bne	.L779
 956:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10286              		.loc 1 956 27 view .LVU3224
 10287 1566 CA4B     		ldr	r3, .L1155
 10288              	.LVL814:
 956:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10289              		.loc 1 956 27 view .LVU3225
 10290 1568 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccizbp1a.s 			page 291


 10291 156a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10292 156e DB07     		lsls	r3, r3, #31
 10293 1570 7FF578AF 		bpl	.L779
 956:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10294              		.loc 1 956 45 view .LVU3226
 10295 1574 0E20     		movs	r0, #14
 10296              	.LVL815:
 956:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10297              		.loc 1 956 45 view .LVU3227
 10298 1576 FFF7FEFF 		bl	intltr
 10299              	.LVL816:
 956:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10300              		.loc 1 956 42 view .LVU3228
 10301 157a 0028     		cmp	r0, #0
 10302 157c 3FF472AF 		beq	.L779
 10303              	.LVL817:
 956:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10304              		.loc 1 956 42 view .LVU3229
 10305              	.LBE1027:
 10306              	.LBE1124:
 10307              	.LBE1207:
 10308              	.LBE1266:
3173:src/keys.c    **** 	NonProgrammable = 0;
 10309              		.loc 1 3173 7 is_stmt 1 view .LVU3230
3173:src/keys.c    **** 	NonProgrammable = 0;
 10310              		.loc 1 3173 11 is_stmt 0 view .LVU3231
 10311 1580 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
3173:src/keys.c    **** 	NonProgrammable = 0;
 10312              		.loc 1 3173 10 view .LVU3232
 10313 1582 5B06     		lsls	r3, r3, #25
 10314 1584 40F1B282 		bpl	.L879
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10315              		.loc 1 3174 2 is_stmt 1 view .LVU3233
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10316              		.loc 1 3174 18 is_stmt 0 view .LVU3234
 10317 1588 C24B     		ldr	r3, .L1155+4
 10318 158a 0022     		movs	r2, #0
 10319              	.LBB1267:
 10320              	.LBB1208:
 10321              	.LBB1125:
 10322              	.LBB1028:
 957:src/keys.c    **** 	  }
 10323              		.loc 1 957 13 view .LVU3235
 10324 158c 4FF0130B 		mov	fp, #19
 10325              	.LBE1028:
 10326              	.LBE1125:
 10327              	.LBE1208:
 10328              	.LBE1267:
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10329              		.loc 1 3174 18 view .LVU3236
 10330 1590 1A60     		str	r2, [r3]
3175:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10331              		.loc 1 3175 2 is_stmt 1 view .LVU3237
3175:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10332              		.loc 1 3175 32 is_stmt 0 view .LVU3238
 10333 1592 5846     		mov	r0, fp
 10334 1594 FFF77AB8 		b	.L830
ARM GAS  /tmp/ccizbp1a.s 			page 292


 10335              	.LVL818:
 10336              	.L1127:
 10337              	.LBB1268:
 10338              	.LBB1209:
 10339              	.LBB1126:
 10340              	.LBB762:
2686:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 10341              		.loc 1 2686 50 view .LVU3239
 10342 1598 0D2C     		cmp	r4, #13
 10343 159a 7FF4F9AC 		bne	.L716
2687:src/keys.c    **** 		set_smode(SDISP_SHOW);
 10344              		.loc 1 2687 3 is_stmt 1 view .LVU3240
 10345 159e 012B     		cmp	r3, #1
 10346 15a0 14BF     		ite	ne
 10347 15a2 2C20     		movne	r0, #44
 10348              	.LVL819:
2687:src/keys.c    **** 		set_smode(SDISP_SHOW);
 10349              		.loc 1 2687 3 is_stmt 0 view .LVU3241
 10350 15a4 2B20     		moveq	r0, #43
 10351 15a6 FFF7FEFF 		bl	set_window
 10352              	.LVL820:
2688:src/keys.c    **** 	}
 10353              		.loc 1 2688 3 is_stmt 1 view .LVU3242
 10354              	.LBB757:
 10355              	.LBI757:
 646:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 10356              		.loc 1 646 13 view .LVU3243
 10357              	.LBB758:
 647:src/keys.c    **** }
 10358              		.loc 1 647 2 view .LVU3244
 647:src/keys.c    **** }
 10359              		.loc 1 647 15 is_stmt 0 view .LVU3245
 10360 15aa 737C     		ldrb	r3, [r6, #17]	@ zero_extendqisi2
 10361 15ac 013B     		subs	r3, r3, #1
 10362 15ae 18BF     		it	ne
 10363 15b0 0123     		movne	r3, #1
 10364 15b2 7374     		strb	r3, [r6, #17]
 10365              	.LVL821:
 647:src/keys.c    **** }
 10366              		.loc 1 647 15 view .LVU3246
 10367              	.LBE758:
 10368              	.LBE757:
2695:src/keys.c    **** 	case K_DOWN:
 10369              		.loc 1 2695 2 is_stmt 1 view .LVU3247
2695:src/keys.c    **** 	case K_DOWN:
 10370              		.loc 1 2695 2 is_stmt 0 view .LVU3248
 10371              	.LBE762:
 10372              	.LBE1126:
 10373              	.LBE1209:
 10374              	.LBE1268:
3137:src/keys.c    ****     case STATE_SST:
 10375              		.loc 1 3137 5 is_stmt 1 view .LVU3249
 10376              	.LBB1269:
 10377              	.LBB1210:
 10378              	.LBB1127:
 10379              	.LBB763:
2746:src/keys.c    **** 	}
ARM GAS  /tmp/ccizbp1a.s 			page 293


 10380              		.loc 1 2746 10 is_stmt 0 view .LVU3250
 10381 15b4 4FF0330B 		mov	fp, #51
 10382 15b8 FEF7B0BD 		b	.L563
 10383              	.LVL822:
 10384              	.L1118:
2746:src/keys.c    **** 	}
 10385              		.loc 1 2746 10 view .LVU3251
 10386              	.LBE763:
 10387              	.LBE1127:
 10388              	.LBB1128:
 10389              	.LBB902:
 10390              	.LBB894:
2478:src/keys.c    **** 		else if (nn != NO_REG)
 10391              		.loc 1 2478 4 is_stmt 1 view .LVU3252
2480:src/keys.c    **** 	}
 10392              		.loc 1 2480 6 is_stmt 0 view .LVU3253
 10393 15bc 9342     		cmp	r3, r2
 10394 15be 08BF     		it	eq
 10395 15c0 0A22     		moveq	r2, #10
 10396              	.LVL823:
2480:src/keys.c    **** 	}
 10397              		.loc 1 2480 6 view .LVU3254
 10398 15c2 FFF76ABA 		b	.L638
 10399              	.LVL824:
 10400              	.L1124:
2480:src/keys.c    **** 	}
 10401              		.loc 1 2480 6 view .LVU3255
 10402 15c6 0093     		str	r3, [sp]
 10403              	.LBE894:
 10404              	.LBE902:
 10405              	.LBE1128:
 10406              	.LBB1129:
 10407              	.LBB764:
2670:src/keys.c    **** 	const int g_max = global_regs();
 10408              		.loc 1 2670 33 view .LVU3256
 10409 15c8 FFF7FEFF 		bl	local_regs
 10410              	.LVL825:
2670:src/keys.c    **** 	const int g_max = global_regs();
 10411              		.loc 1 2670 33 view .LVU3257
 10412 15cc 009B     		ldr	r3, [sp]
 10413 15ce 8146     		mov	r9, r0
 10414 15d0 CDE4     		b	.L708
 10415              	.LVL826:
 10416              	.L1122:
2670:src/keys.c    **** 	const int g_max = global_regs();
 10417              		.loc 1 2670 33 view .LVU3258
 10418              	.LBE764:
 10419              	.LBE1129:
 10420              	.LBB1130:
 10421              	.LBB990:
2541:src/keys.c    **** 	const int direct = State2.runmode;
 10422              		.loc 1 2541 37 view .LVU3259
 10423 15d2 5046     		mov	r0, r10
 10424 15d4 FFF7FEFF 		bl	getprog
 10425              	.LVL827:
2541:src/keys.c    **** 	const int direct = State2.runmode;
 10426              		.loc 1 2541 63 view .LVU3260
ARM GAS  /tmp/ccizbp1a.s 			page 294


 10427 15d8 20F47063 		bic	r3, r0, #3840
 10428 15dc FFF790BB 		b	.L683
 10429              	.LVL828:
 10430              	.L787:
2541:src/keys.c    **** 	const int direct = State2.runmode;
 10431              		.loc 1 2541 63 view .LVU3261
 10432              	.LBE990:
 10433              	.LBE1130:
 10434              	.LBB1131:
 10435              	.LBB1079:
1061:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 10436              		.loc 1 1061 3 is_stmt 1 view .LVU3262
1061:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 10437              		.loc 1 1061 7 is_stmt 0 view .LVU3263
 10438 15e0 AB4B     		ldr	r3, .L1155
 10439 15e2 1B68     		ldr	r3, [r3]
 10440 15e4 93F8E827 		ldrb	r2, [r3, #2024]	@ zero_extendqisi2
1061:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 10441              		.loc 1 1061 6 view .LVU3264
 10442 15e8 D207     		lsls	r2, r2, #31
 10443 15ea 7FD5     		bpl	.L790
1062:src/keys.c    **** 		else
 10444              		.loc 1 1062 4 is_stmt 1 view .LVU3265
1062:src/keys.c    **** 		else
 10445              		.loc 1 1062 57 is_stmt 0 view .LVU3266
 10446 15ec 93F9E737 		ldrsb	r3, [r3, #2023]
 10447 15f0 002B     		cmp	r3, #0
 10448 15f2 40F2531B 		movw	fp, #339
 10449 15f6 A8BF     		it	ge
 10450 15f8 4FF4AA7B 		movge	fp, #340
 10451 15fc 3AE6     		b	.L792
 10452              	.LVL829:
 10453              	.L1114:
1062:src/keys.c    **** 		else
 10454              		.loc 1 1062 57 view .LVU3267
 10455              	.LBE1079:
 10456              	.LBE1131:
 10457              	.LBB1132:
 10458              	.LBB880:
1359:src/keys.c    **** 		if (rawpc == 1)
 10459              		.loc 1 1359 3 is_stmt 1 view .LVU3268
1359:src/keys.c    **** 		if (rawpc == 1)
 10460              		.loc 1 1359 11 is_stmt 0 view .LVU3269
 10461 15fe DFF89092 		ldr	r9, .L1155
 10462 1602 D9F80030 		ldr	r3, [r9]
 10463              	.LVL830:
1359:src/keys.c    **** 		if (rawpc == 1)
 10464              		.loc 1 1359 9 view .LVU3270
 10465 1606 B3F8E007 		ldrh	r0, [r3, #2016]
 10466              	.LVL831:
1360:src/keys.c    **** 			rawpc = 0;
 10467              		.loc 1 1360 3 is_stmt 1 view .LVU3271
1361:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
 10468              		.loc 1 1361 10 is_stmt 0 view .LVU3272
 10469 160a 0128     		cmp	r0, #1
 10470              	.LVL832:
1362:src/keys.c    **** 		update_program_bounds(1);
ARM GAS  /tmp/ccizbp1a.s 			page 295


 10471              		.loc 1 1362 3 is_stmt 1 view .LVU3273
 10472 160c 08BF     		it	eq
 10473 160e 0020     		moveq	r0, #0
 10474              	.LVL833:
1362:src/keys.c    **** 		update_program_bounds(1);
 10475              		.loc 1 1362 3 is_stmt 0 view .LVU3274
 10476 1610 0021     		movs	r1, #0
 10477 1612 FFF7FEFF 		bl	do_dec
 10478              	.LVL834:
1362:src/keys.c    **** 		update_program_bounds(1);
 10479              		.loc 1 1362 3 view .LVU3275
 10480 1616 FFF7FEFF 		bl	set_pc
 10481              	.LVL835:
1363:src/keys.c    **** 		rawpc = ProgBegin;
 10482              		.loc 1 1363 3 is_stmt 1 view .LVU3276
 10483 161a 0120     		movs	r0, #1
 10484 161c FFF7FEFF 		bl	update_program_bounds
 10485              	.LVL836:
1364:src/keys.c    **** 		goto fin;
 10486              		.loc 1 1364 3 view .LVU3277
1364:src/keys.c    **** 		goto fin;
 10487              		.loc 1 1364 11 is_stmt 0 view .LVU3278
 10488 1620 D9F80030 		ldr	r3, [r9]
1364:src/keys.c    **** 		goto fin;
 10489              		.loc 1 1364 9 view .LVU3279
 10490 1624 B3F8EC07 		ldrh	r0, [r3, #2028]
 10491              	.LVL837:
1365:src/keys.c    **** 	}
 10492              		.loc 1 1365 3 is_stmt 1 view .LVU3280
 10493 1628 FFF7DFB9 		b	.L604
 10494              	.LVL838:
 10495              	.L1126:
1365:src/keys.c    **** 	}
 10496              		.loc 1 1365 3 is_stmt 0 view .LVU3281
 10497              	.LBE880:
 10498              	.LBE1132:
 10499              	.LBB1133:
 10500              	.LBB765:
 10501              	.LBB759:
2680:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10502              		.loc 1 2680 3 is_stmt 1 view .LVU3282
2680:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10503              		.loc 1 2680 19 is_stmt 0 view .LVU3283
 10504 162c 3189     		ldrh	r1, [r6, #8]
2680:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10505              		.loc 1 2680 27 view .LVU3284
 10506 162e 0A23     		movs	r3, #10
2680:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10507              		.loc 1 2680 32 view .LVU3285
 10508 1630 03FB01A2 		mla	r2, r3, r1, r10
2680:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10509              		.loc 1 2680 37 view .LVU3286
 10510 1634 6424     		movs	r4, #100
 10511 1636 B2FBF4F3 		udiv	r3, r2, r4
 10512 163a 04FB1323 		mls	r3, r4, r3, r2
 10513              	.LVL839:
2681:src/keys.c    **** 			dv = n;
ARM GAS  /tmp/ccizbp1a.s 			page 296


 10514              		.loc 1 2681 3 is_stmt 1 view .LVU3287
2681:src/keys.c    **** 			dv = n;
 10515              		.loc 1 2681 6 is_stmt 0 view .LVU3288
 10516 163e 4B45     		cmp	r3, r9
 10517 1640 08DA     		bge	.L714
2681:src/keys.c    **** 			dv = n;
 10518              		.loc 1 2681 21 view .LVU3289
 10519 1642 B27D     		ldrb	r2, [r6, #22]	@ zero_extendqisi2
2681:src/keys.c    **** 			dv = n;
 10520              		.loc 1 2681 17 view .LVU3290
 10521 1644 D407     		lsls	r4, r2, #31
 10522 1646 3FF5DFAC 		bmi	.L1050
2681:src/keys.c    **** 			dv = n;
 10523              		.loc 1 2681 36 view .LVU3291
 10524 164a 8842     		cmp	r0, r1
 10525 164c 02DD     		ble	.L714
2681:src/keys.c    **** 			dv = n;
 10526              		.loc 1 2681 63 view .LVU3292
 10527 164e 9842     		cmp	r0, r3
 10528 1650 3FF7DAAC 		bgt	.L1050
 10529              	.L714:
2682:src/keys.c    **** 		State2.digval = dv;
 10530              		.loc 1 2682 4 is_stmt 1 view .LVU3293
2682:src/keys.c    **** 		State2.digval = dv;
 10531              		.loc 1 2682 7 is_stmt 0 view .LVU3294
 10532 1654 5346     		mov	r3, r10
 10533              	.LVL840:
2683:src/keys.c    **** 		goto reset_window;
 10534              		.loc 1 2683 3 is_stmt 1 view .LVU3295
 10535 1656 D7E4     		b	.L1050
 10536              	.LVL841:
 10537              	.L1128:
2683:src/keys.c    **** 		goto reset_window;
 10538              		.loc 1 2683 3 is_stmt 0 view .LVU3296
 10539              	.LBE759:
2691:src/keys.c    **** 		goto reset_window;
 10540              		.loc 1 2691 3 is_stmt 1 view .LVU3297
2691:src/keys.c    **** 		goto reset_window;
 10541              		.loc 1 2691 17 is_stmt 0 view .LVU3298
 10542 1658 A6F808A0 		strh	r10, [r6, #8]	@ movhi
2692:src/keys.c    **** 	}
 10543              		.loc 1 2692 3 is_stmt 1 view .LVU3299
 10544 165c D5E4     		b	.L712
 10545              	.LVL842:
 10546              	.L1100:
2692:src/keys.c    **** 	}
 10547              		.loc 1 2692 3 is_stmt 0 view .LVU3300
 10548              	.LBE765:
 10549              	.LBE1133:
 10550              	.LBB1134:
 10551              	.LBB729:
2369:src/keys.c    **** 				break;
 10552              		.loc 1 2369 3 is_stmt 1 view .LVU3301
2369:src/keys.c    **** 				break;
 10553              		.loc 1 2369 6 is_stmt 0 view .LVU3302
 10554 165e 0029     		cmp	r1, #0
 10555 1660 7EF46BAF 		bne	.L673
ARM GAS  /tmp/ccizbp1a.s 			page 297


2371:src/keys.c    **** 		if (State2.numdigit == 0)
 10556              		.loc 1 2371 3 is_stmt 1 view .LVU3303
 10557              	.LBB720:
 10558              	.LBI720:
2346:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 10559              		.loc 1 2346 13 view .LVU3304
 10560              	.LBB721:
2348:src/keys.c    **** 	if (! State2.alphas )
 10561              		.loc 1 2348 2 view .LVU3305
2349:src/keys.c    **** 		State2.alphashift = 0;
 10562              		.loc 1 2349 6 is_stmt 0 view .LVU3306
 10563 1664 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
2348:src/keys.c    **** 	if (! State2.alphas )
 10564              		.loc 1 2348 15 view .LVU3307
 10565 1666 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
2349:src/keys.c    **** 		State2.alphashift = 0;
 10566              		.loc 1 2349 5 view .LVU3308
 10567 1668 1807     		lsls	r0, r3, #28
2350:src/keys.c    **** }
 10568              		.loc 1 2350 21 view .LVU3309
 10569 166a 5CBF     		itt	pl
 10570 166c 61F30413 		bfipl	r3, r1, #4, #1
 10571 1670 B375     		strbpl	r3, [r6, #22]
 10572              	.LBE721:
 10573              	.LBE720:
2372:src/keys.c    **** 			return STATE_UNFINISHED;
 10574              		.loc 1 2372 13 view .LVU3310
 10575 1672 F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
 10576              	.LBB723:
 10577              	.LBB722:
2348:src/keys.c    **** 	if (! State2.alphas )
 10578              		.loc 1 2348 15 view .LVU3311
 10579 1674 61F3C302 		bfi	r2, r1, #3, #1
 10580 1678 7275     		strb	r2, [r6, #21]
2349:src/keys.c    **** 		State2.alphashift = 0;
 10581              		.loc 1 2349 2 is_stmt 1 view .LVU3312
2350:src/keys.c    **** }
 10582              		.loc 1 2350 3 view .LVU3313
 10583              	.LBE722:
 10584              	.LBE723:
2372:src/keys.c    **** 			return STATE_UNFINISHED;
 10585              		.loc 1 2372 3 view .LVU3314
2372:src/keys.c    **** 			return STATE_UNFINISHED;
 10586              		.loc 1 2372 6 is_stmt 0 view .LVU3315
 10587 167a 002B     		cmp	r3, #0
 10588 167c 3EF4AFAF 		beq	.L1058
2374:src/keys.c    **** 			State2.digval2 = 0;
 10589              		.loc 1 2374 8 is_stmt 1 view .LVU3316
2374:src/keys.c    **** 			State2.digval2 = 0;
 10590              		.loc 1 2374 11 is_stmt 0 view .LVU3317
 10591 1680 012B     		cmp	r3, #1
2375:src/keys.c    **** 		goto fin;
 10592              		.loc 1 2375 19 view .LVU3318
 10593 1682 4FF00003 		mov	r3, #0
2374:src/keys.c    **** 			State2.digval2 = 0;
 10594              		.loc 1 2374 11 view .LVU3319
 10595 1686 7EF47AAF 		bne	.L675
ARM GAS  /tmp/ccizbp1a.s 			page 298


2375:src/keys.c    **** 		goto fin;
 10596              		.loc 1 2375 4 is_stmt 1 view .LVU3320
2375:src/keys.c    **** 		goto fin;
 10597              		.loc 1 2375 19 is_stmt 0 view .LVU3321
 10598 168a B372     		strb	r3, [r6, #10]
 10599 168c FEF777BF 		b	.L675
 10600              	.L672:
2389:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 10601              		.loc 1 2389 3 is_stmt 1 view .LVU3322
2389:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 10602              		.loc 1 2389 6 is_stmt 0 view .LVU3323
 10603 1690 0129     		cmp	r1, #1
 10604 1692 33D0     		beq	.L1060
 10605              	.L678:
2381:src/keys.c    **** 			else
 10606              		.loc 1 2381 5 is_stmt 1 view .LVU3324
 10607              	.LBB724:
 10608              	.LBI724:
2346:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 10609              		.loc 1 2346 13 view .LVU3325
 10610              	.LBB725:
2348:src/keys.c    **** 	if (! State2.alphas )
 10611              		.loc 1 2348 2 view .LVU3326
2348:src/keys.c    **** 	if (! State2.alphas )
 10612              		.loc 1 2348 15 is_stmt 0 view .LVU3327
 10613 1694 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
2349:src/keys.c    **** 		State2.alphashift = 0;
 10614              		.loc 1 2349 6 view .LVU3328
 10615 1696 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
2348:src/keys.c    **** 	if (! State2.alphas )
 10616              		.loc 1 2348 15 view .LVU3329
 10617 1698 6FF3C302 		bfc	r2, #3, #1
 10618 169c 7275     		strb	r2, [r6, #21]
2349:src/keys.c    **** 		State2.alphashift = 0;
 10619              		.loc 1 2349 2 is_stmt 1 view .LVU3330
2349:src/keys.c    **** 		State2.alphashift = 0;
 10620              		.loc 1 2349 5 is_stmt 0 view .LVU3331
 10621 169e 13F00802 		ands	r2, r3, #8
 10622 16a2 7EF49CAF 		bne	.L1058
 10623              	.LVL843:
 10624              	.L1056:
2349:src/keys.c    **** 		State2.alphashift = 0;
 10625              		.loc 1 2349 5 view .LVU3332
 10626              	.LBE725:
 10627              	.LBE724:
2390:src/keys.c    **** 		else
 10628              		.loc 1 2390 22 view .LVU3333
 10629 16a6 62F30413 		bfi	r3, r2, #4, #1
 10630 16aa B375     		strb	r3, [r6, #22]
 10631 16ac FEF797BF 		b	.L1058
 10632              	.LVL844:
 10633              	.L671:
2379:src/keys.c    **** 			if (State2.numdigit == 0)
 10634              		.loc 1 2379 3 is_stmt 1 view .LVU3334
2379:src/keys.c    **** 			if (State2.numdigit == 0)
 10635              		.loc 1 2379 6 is_stmt 0 view .LVU3335
 10636 16b0 0329     		cmp	r1, #3
ARM GAS  /tmp/ccizbp1a.s 			page 299


 10637 16b2 3EF449AF 		beq	.L676
2380:src/keys.c    **** 				reset_multi();
 10638              		.loc 1 2380 4 is_stmt 1 view .LVU3336
2380:src/keys.c    **** 				reset_multi();
 10639              		.loc 1 2380 14 is_stmt 0 view .LVU3337
 10640 16b6 F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
2380:src/keys.c    **** 				reset_multi();
 10641              		.loc 1 2380 7 view .LVU3338
 10642 16b8 002B     		cmp	r3, #0
 10643 16ba EBD0     		beq	.L678
2383:src/keys.c    **** 			return STATE_UNFINISHED;
 10644              		.loc 1 2383 5 is_stmt 1 view .LVU3339
2383:src/keys.c    **** 			return STATE_UNFINISHED;
 10645              		.loc 1 2383 20 is_stmt 0 view .LVU3340
 10646 16bc 013B     		subs	r3, r3, #1
 10647 16be F372     		strb	r3, [r6, #11]
2384:src/keys.c    **** 		}
 10648              		.loc 1 2384 11 view .LVU3341
 10649 16c0 4FF0330B 		mov	fp, #51
 10650 16c4 FEF72ABD 		b	.L563
 10651              	.LVL845:
 10652              	.L861:
2384:src/keys.c    **** 		}
 10653              		.loc 1 2384 11 view .LVU3342
 10654              	.LBE729:
 10655              	.LBE1134:
 10656              	.LBB1135:
 10657              	.LBB656:
 10658              	.LBB650:
 301:src/keys.c    ****     }
 10659              		.loc 1 301 14 view .LVU3343
 10660 16c8 4FF0160B 		mov	fp, #22
 10661 16cc FFF766BA 		b	.L653
 10662              	.LVL846:
 10663              	.L1102:
 301:src/keys.c    ****     }
 10664              		.loc 1 301 14 view .LVU3344
 10665              	.LBE650:
 10666              	.LBE656:
 10667              	.LBE1135:
 10668              	.LBB1136:
 10669              	.LBB730:
2405:src/keys.c    **** 		State2.numdigit = 1;
 10670              		.loc 1 2405 3 is_stmt 1 view .LVU3345
2406:src/keys.c    **** 		return STATE_UNFINISHED;
 10671              		.loc 1 2406 19 is_stmt 0 view .LVU3346
 10672 16d0 0122     		movs	r2, #1
2405:src/keys.c    **** 		State2.numdigit = 1;
 10673              		.loc 1 2405 17 view .LVU3347
 10674 16d2 3381     		strh	r3, [r6, #8]	@ movhi
2406:src/keys.c    **** 		return STATE_UNFINISHED;
 10675              		.loc 1 2406 3 is_stmt 1 view .LVU3348
2406:src/keys.c    **** 		return STATE_UNFINISHED;
 10676              		.loc 1 2406 19 is_stmt 0 view .LVU3349
 10677 16d4 F272     		strb	r2, [r6, #11]
2407:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 10678              		.loc 1 2407 3 is_stmt 1 view .LVU3350
ARM GAS  /tmp/ccizbp1a.s 			page 300


2407:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 10679              		.loc 1 2407 10 is_stmt 0 view .LVU3351
 10680 16d6 4FF0330B 		mov	fp, #51
 10681 16da FEF71FBD 		b	.L563
 10682              	.L1103:
2409:src/keys.c    **** 		State2.numdigit = 2;
 10683              		.loc 1 2409 3 is_stmt 1 view .LVU3352
2410:src/keys.c    **** 		return STATE_UNFINISHED;
 10684              		.loc 1 2410 19 is_stmt 0 view .LVU3353
 10685 16de 0222     		movs	r2, #2
2409:src/keys.c    **** 		State2.numdigit = 2;
 10686              		.loc 1 2409 18 view .LVU3354
 10687 16e0 B372     		strb	r3, [r6, #10]
2410:src/keys.c    **** 		return STATE_UNFINISHED;
 10688              		.loc 1 2410 3 is_stmt 1 view .LVU3355
2410:src/keys.c    **** 		return STATE_UNFINISHED;
 10689              		.loc 1 2410 19 is_stmt 0 view .LVU3356
 10690 16e2 F272     		strb	r2, [r6, #11]
2411:src/keys.c    **** 	}
 10691              		.loc 1 2411 3 is_stmt 1 view .LVU3357
2411:src/keys.c    **** 	}
 10692              		.loc 1 2411 10 is_stmt 0 view .LVU3358
 10693 16e4 4FF0330B 		mov	fp, #51
 10694 16e8 FEF718BD 		b	.L563
 10695              	.LVL847:
 10696              	.L790:
2411:src/keys.c    **** 	}
 10697              		.loc 1 2411 10 view .LVU3359
 10698              	.LBE730:
 10699              	.LBE1136:
 10700              	.LBB1137:
 10701              	.LBB1080:
1067:src/keys.c    **** #endif
 10702              		.loc 1 1067 4 is_stmt 1 view .LVU3360
1067:src/keys.c    **** #endif
 10703              		.loc 1 1067 8 is_stmt 0 view .LVU3361
 10704 16ec 93F8E737 		ldrb	r3, [r3, #2023]	@ zero_extendqisi2
1067:src/keys.c    **** #endif
 10705              		.loc 1 1067 7 view .LVU3362
 10706 16f0 9B06     		lsls	r3, r3, #26
 10707 16f2 7FF5AEAD 		bpl	.L789
1067:src/keys.c    **** #endif
 10708              		.loc 1 1067 29 view .LVU3363
 10709 16f6 40F24F1B 		movw	fp, #335
 10710 16fa BBE5     		b	.L792
 10711              	.LVL848:
 10712              	.L1060:
1067:src/keys.c    **** #endif
 10713              		.loc 1 1067 29 view .LVU3364
 10714              	.LBE1080:
 10715              	.LBE1137:
 10716              	.LBB1138:
 10717              	.LBB731:
2390:src/keys.c    **** 		else
 10718              		.loc 1 2390 4 is_stmt 1 view .LVU3365
2390:src/keys.c    **** 		else
 10719              		.loc 1 2390 34 is_stmt 0 view .LVU3366
ARM GAS  /tmp/ccizbp1a.s 			page 301


 10720 16fc B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 10721 16fe C3F30012 		ubfx	r2, r3, #4, #1
2390:src/keys.c    **** 		else
 10722              		.loc 1 2390 26 view .LVU3367
 10723 1702 C2F10102 		rsb	r2, r2, #1
 10724 1706 CEE7     		b	.L1056
 10725              	.LVL849:
 10726              	.L1125:
2390:src/keys.c    **** 		else
 10727              		.loc 1 2390 26 view .LVU3368
 10728              	.LBE731:
 10729              	.LBE1138:
 10730              	.LBB1139:
 10731              	.LBB766:
2674:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 10732              		.loc 1 2674 3 is_stmt 1 view .LVU3369
2674:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 10733              		.loc 1 2674 7 is_stmt 0 view .LVU3370
 10734 1708 FFF7FEFF 		bl	local_regs
 10735              	.LVL850:
2674:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 10736              		.loc 1 2674 6 view .LVU3371
 10737 170c 50B1     		cbz	r0, .L710
2675:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 10738              		.loc 1 2675 4 is_stmt 1 view .LVU3372
2675:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 10739              		.loc 1 2675 19 is_stmt 0 view .LVU3373
 10740 170e B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
2675:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 10741              		.loc 1 2675 34 view .LVU3374
 10742 1710 B27A     		ldrb	r2, [r6, #10]	@ zero_extendqisi2
2675:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 10743              		.loc 1 2675 19 view .LVU3375
 10744 1712 03F00101 		and	r1, r3, #1
2675:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 10745              		.loc 1 2675 34 view .LVU3376
 10746 1716 0A43     		orrs	r2, r1, r2
 10747 1718 0CBF     		ite	eq
 10748 171a 0122     		moveq	r2, #1
 10749 171c 0022     		movne	r2, #0
2675:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 10750              		.loc 1 2675 17 view .LVU3377
 10751 171e 62F30003 		bfi	r3, r2, #0, #1
 10752 1722 B375     		strb	r3, [r6, #22]
 10753              	.L710:
2676:src/keys.c    **** 		goto reset_window;
 10754              		.loc 1 2676 3 is_stmt 1 view .LVU3378
2676:src/keys.c    **** 		goto reset_window;
 10755              		.loc 1 2676 32 is_stmt 0 view .LVU3379
 10756 1724 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
2676:src/keys.c    **** 		goto reset_window;
 10757              		.loc 1 2676 17 view .LVU3380
 10758 1726 13F0010F 		tst	r3, #1
 10759 172a 14BF     		ite	ne
 10760 172c 0023     		movne	r3, #0
 10761 172e 6423     		moveq	r3, #100
 10762 1730 3381     		strh	r3, [r6, #8]	@ movhi
ARM GAS  /tmp/ccizbp1a.s 			page 302


2677:src/keys.c    **** 	}
 10763              		.loc 1 2677 3 is_stmt 1 view .LVU3381
 10764 1732 6AE4     		b	.L712
 10765              	.LVL851:
 10766              	.L1123:
2677:src/keys.c    **** 	}
 10767              		.loc 1 2677 3 is_stmt 0 view .LVU3382
 10768              	.LBE766:
 10769              	.LBE1139:
 10770              	.LBB1140:
 10771              	.LBB991:
2548:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 10772              		.loc 1 2548 3 is_stmt 1 view .LVU3383
2548:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 10773              		.loc 1 2548 8 is_stmt 0 view .LVU3384
 10774 1734 4FEA8B34 		lsl	r4, fp, #14
2548:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 10775              		.loc 1 2548 6 view .LVU3385
 10776 1738 44F00104 		orr	r4, r4, #1
 10777              	.LVL852:
2549:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 10778              		.loc 1 2549 3 is_stmt 1 view .LVU3386
2549:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 10779              		.loc 1 2549 9 is_stmt 0 view .LVU3387
 10780 173c 2046     		mov	r0, r4
 10781              	.LVL853:
2549:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 10782              		.loc 1 2549 9 view .LVU3388
 10783 173e FFF7FEFF 		bl	is_label_or_end_at
 10784              	.LVL854:
2549:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 10785              		.loc 1 2549 6 view .LVU3389
 10786 1742 0246     		mov	r2, r0
 10787 1744 0028     		cmp	r0, #0
 10788 1746 00F02F81 		beq	.L1138
 10789              	.L686:
2551:src/keys.c    **** 		return STATE_UNFINISHED;
 10790              		.loc 1 2551 3 is_stmt 1 view .LVU3390
2551:src/keys.c    **** 		return STATE_UNFINISHED;
 10791              		.loc 1 2551 17 is_stmt 0 view .LVU3391
 10792 174a 3481     		strh	r4, [r6, #8]	@ movhi
2552:src/keys.c    **** 	}
 10793              		.loc 1 2552 3 is_stmt 1 view .LVU3392
2552:src/keys.c    **** 	}
 10794              		.loc 1 2552 10 is_stmt 0 view .LVU3393
 10795 174c 4FF0330B 		mov	fp, #51
 10796              	.LVL855:
2552:src/keys.c    **** 	}
 10797              		.loc 1 2552 10 view .LVU3394
 10798 1750 FEF7E4BC 		b	.L563
 10799              	.LVL856:
 10800              	.L804:
2552:src/keys.c    **** 	}
 10801              		.loc 1 2552 10 view .LVU3395
 10802              	.LBE991:
 10803              	.LBE1140:
 10804              	.LBE1210:
ARM GAS  /tmp/ccizbp1a.s 			page 303


 10805              	.LBE1269:
3173:src/keys.c    **** 	NonProgrammable = 0;
 10806              		.loc 1 3173 7 is_stmt 1 view .LVU3396
3173:src/keys.c    **** 	NonProgrammable = 0;
 10807              		.loc 1 3173 11 is_stmt 0 view .LVU3397
 10808 1754 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
3173:src/keys.c    **** 	NonProgrammable = 0;
 10809              		.loc 1 3173 10 view .LVU3398
 10810 1756 5A06     		lsls	r2, r3, #25
 10811 1758 40F1AC81 		bpl	.L883
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10812              		.loc 1 3174 2 is_stmt 1 view .LVU3399
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10813              		.loc 1 3174 18 is_stmt 0 view .LVU3400
 10814 175c 4D4B     		ldr	r3, .L1155+4
 10815 175e 0022     		movs	r2, #0
 10816              	.LBB1270:
 10817              	.LBB1211:
 10818              	.LBB1141:
 10819              	.LBB675:
 733:src/keys.c    **** 	    }
 10820              		.loc 1 733 15 view .LVU3401
 10821 1760 4FF00F0B 		mov	fp, #15
 10822              	.LBE675:
 10823              	.LBE1141:
 10824              	.LBE1211:
 10825              	.LBE1270:
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10826              		.loc 1 3174 18 view .LVU3402
 10827 1764 1A60     		str	r2, [r3]
3175:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10828              		.loc 1 3175 2 is_stmt 1 view .LVU3403
3175:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10829              		.loc 1 3175 32 is_stmt 0 view .LVU3404
 10830 1766 5846     		mov	r0, fp
 10831 1768 FEF790BF 		b	.L830
 10832              	.LVL857:
 10833              	.L805:
3173:src/keys.c    **** 	NonProgrammable = 0;
 10834              		.loc 1 3173 7 is_stmt 1 view .LVU3405
3173:src/keys.c    **** 	NonProgrammable = 0;
 10835              		.loc 1 3173 11 is_stmt 0 view .LVU3406
 10836 176c B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
3173:src/keys.c    **** 	NonProgrammable = 0;
 10837              		.loc 1 3173 10 view .LVU3407
 10838 176e 5C06     		lsls	r4, r3, #25
 10839 1770 40F10881 		bpl	.L880
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10840              		.loc 1 3174 2 is_stmt 1 view .LVU3408
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10841              		.loc 1 3174 18 is_stmt 0 view .LVU3409
 10842 1774 474B     		ldr	r3, .L1155+4
 10843 1776 0022     		movs	r2, #0
 10844              	.LBB1271:
 10845              	.LBB1212:
 10846              	.LBB1142:
 10847              	.LBB676:
ARM GAS  /tmp/ccizbp1a.s 			page 304


 741:src/keys.c    **** 	    }
 10848              		.loc 1 741 15 view .LVU3410
 10849 1778 4FF0100B 		mov	fp, #16
 10850              	.LBE676:
 10851              	.LBE1142:
 10852              	.LBE1212:
 10853              	.LBE1271:
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10854              		.loc 1 3174 18 view .LVU3411
 10855 177c 1A60     		str	r2, [r3]
3175:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10856              		.loc 1 3175 2 is_stmt 1 view .LVU3412
3175:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10857              		.loc 1 3175 32 is_stmt 0 view .LVU3413
 10858 177e 5846     		mov	r0, fp
 10859 1780 FEF784BF 		b	.L830
 10860              	.LVL858:
 10861              	.L738:
 10862              	.LBB1272:
 10863              	.LBB1213:
 10864              	.LBB1143:
 10865              	.LBB821:
1467:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 10866              		.loc 1 1467 3 is_stmt 1 view .LVU3414
1467:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 10867              		.loc 1 1467 6 is_stmt 0 view .LVU3415
 10868 1784 0128     		cmp	r0, #1
 10869 1786 7FF42FAD 		bne	.L737
 10870              	.LVL859:
1467:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 10871              		.loc 1 1467 6 view .LVU3416
 10872              	.LBE821:
 10873              	.LBE1143:
 10874              	.LBE1213:
 10875              	.LBE1272:
3173:src/keys.c    **** 	NonProgrammable = 0;
 10876              		.loc 1 3173 7 is_stmt 1 view .LVU3417
3173:src/keys.c    **** 	NonProgrammable = 0;
 10877              		.loc 1 3173 10 is_stmt 0 view .LVU3418
 10878 178a 5906     		lsls	r1, r3, #25
 10879 178c 40F1B181 		bpl	.L877
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10880              		.loc 1 3174 2 is_stmt 1 view .LVU3419
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10881              		.loc 1 3174 18 is_stmt 0 view .LVU3420
 10882 1790 404B     		ldr	r3, .L1155+4
 10883 1792 0022     		movs	r2, #0
 10884              	.LVL860:
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10885              		.loc 1 3174 18 view .LVU3421
 10886 1794 1A60     		str	r2, [r3]
3175:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10887              		.loc 1 3175 2 is_stmt 1 view .LVU3422
3175:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10888              		.loc 1 3175 32 is_stmt 0 view .LVU3423
 10889 1796 40F23B10 		movw	r0, #315
 10890              	.LVL861:
ARM GAS  /tmp/ccizbp1a.s 			page 305


3175:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10891              		.loc 1 3175 32 view .LVU3424
 10892 179a FEF774BE 		b	.L828
 10893              	.LVL862:
 10894              	.L1131:
 10895              	.LBB1273:
 10896              	.LBB1214:
 10897              	.LBB1144:
 10898              	.LBB1081:
1091:src/keys.c    **** #undef _RARG
 10899              		.loc 1 1091 2 is_stmt 1 view .LVU3425
1091:src/keys.c    **** #undef _RARG
 10900              		.loc 1 1091 9 is_stmt 0 view .LVU3426
 10901 179e 3C4B     		ldr	r3, .L1155
 10902 17a0 1B68     		ldr	r3, [r3]
 10903 17a2 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1091:src/keys.c    **** #undef _RARG
 10904              		.loc 1 1091 57 view .LVU3427
 10905 17a6 DC07     		lsls	r4, r3, #31
 10906 17a8 7FF564AD 		bpl	.L792
 10907              	.LVL863:
1091:src/keys.c    **** #undef _RARG
 10908              		.loc 1 1091 21 view .LVU3428
 10909 17ac 1AF4804F 		tst	r10, #16384
 10910 17b0 7EF415AF 		bne	.L1058
 10911 17b4 5EE5     		b	.L792
 10912              	.LVL864:
 10913              	.L659:
1091:src/keys.c    **** #undef _RARG
 10914              		.loc 1 1091 21 view .LVU3429
 10915 17b6 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
 10916              	.LBE1081:
 10917              	.LBE1144:
 10918              	.LBB1145:
 10919              	.LBB657:
 10920              	.LBB651:
 322:src/keys.c    **** #ifndef WINGUI
 10921              		.loc 1 322 8 view .LVU3430
 10922 17b8 374B     		ldr	r3, .L1155+8
 328:src/keys.c    ****   }
 10923              		.loc 1 328 9 view .LVU3431
 10924 17ba 0C21     		movs	r1, #12
 324:src/keys.c    **** #else
 10925              		.loc 1 324 73 view .LVU3432
 10926 17bc 4FF0020C 		mov	ip, #2
 10927 17c0 FEF7B7BD 		b	.L658
 10928              	.LVL865:
 10929              	.L807:
 324:src/keys.c    **** #else
 10930              		.loc 1 324 73 view .LVU3433
 10931              	.LBE651:
 10932              	.LBE657:
 10933              	.LBE1145:
 10934              	.LBE1214:
 10935              	.LBE1273:
3173:src/keys.c    **** 	NonProgrammable = 0;
 10936              		.loc 1 3173 7 is_stmt 1 view .LVU3434
ARM GAS  /tmp/ccizbp1a.s 			page 306


3173:src/keys.c    **** 	NonProgrammable = 0;
 10937              		.loc 1 3173 11 is_stmt 0 view .LVU3435
 10938 17c4 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
3173:src/keys.c    **** 	NonProgrammable = 0;
 10939              		.loc 1 3173 10 view .LVU3436
 10940 17c6 5906     		lsls	r1, r3, #25
 10941 17c8 40F10381 		bpl	.L882
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10942              		.loc 1 3174 2 is_stmt 1 view .LVU3437
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10943              		.loc 1 3174 18 is_stmt 0 view .LVU3438
 10944 17cc 314B     		ldr	r3, .L1155+4
 10945 17ce 0022     		movs	r2, #0
 10946              	.LBB1274:
 10947              	.LBB1215:
 10948              	.LBB1146:
 10949              	.LBB677:
 757:src/keys.c    **** 	    }
 10950              		.loc 1 757 15 view .LVU3439
 10951 17d0 4FF0140B 		mov	fp, #20
 10952              	.LBE677:
 10953              	.LBE1146:
 10954              	.LBE1215:
 10955              	.LBE1274:
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10956              		.loc 1 3174 18 view .LVU3440
 10957 17d4 1A60     		str	r2, [r3]
3175:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10958              		.loc 1 3175 2 is_stmt 1 view .LVU3441
3175:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10959              		.loc 1 3175 32 is_stmt 0 view .LVU3442
 10960 17d6 5846     		mov	r0, fp
 10961 17d8 FEF758BF 		b	.L830
 10962              	.LVL866:
 10963              	.L744:
 10964              	.LBB1275:
 10965              	.LBB1216:
 10966              	.LBB1147:
 10967              	.LBB822:
1414:src/keys.c    **** 			break;
 10968              		.loc 1 1414 3 is_stmt 1 view .LVU3443
1414:src/keys.c    **** 			break;
 10969              		.loc 1 1414 24 is_stmt 0 view .LVU3444
 10970 17dc 811E     		subs	r1, r0, #2
1414:src/keys.c    **** 			break;
 10971              		.loc 1 1414 6 view .LVU3445
 10972 17de C9B2     		uxtb	r1, r1
 10973 17e0 0129     		cmp	r1, #1
 10974 17e2 7FF601AD 		bls	.L737
1416:src/keys.c    **** 			State2.multi = 1;
 10975              		.loc 1 1416 3 is_stmt 1 view .LVU3446
1416:src/keys.c    **** 			State2.multi = 1;
 10976              		.loc 1 1416 6 is_stmt 0 view .LVU3447
 10977 17e6 0128     		cmp	r0, #1
 10978 17e8 03D1     		bne	.L748
1416:src/keys.c    **** 			State2.multi = 1;
 10979              		.loc 1 1416 24 view .LVU3448
ARM GAS  /tmp/ccizbp1a.s 			page 307


 10980 17ea 13F04002 		ands	r2, r3, #64
 10981              	.LVL867:
1416:src/keys.c    **** 			State2.multi = 1;
 10982              		.loc 1 1416 24 view .LVU3449
 10983 17ee 00F0BE80 		beq	.L1139
 10984              	.L748:
1422:src/keys.c    **** 		State2.alphashift = 0;
 10985              		.loc 1 1422 3 is_stmt 1 view .LVU3450
1423:src/keys.c    **** 		return op;
 10986              		.loc 1 1423 3 view .LVU3451
1422:src/keys.c    **** 		State2.alphashift = 0;
 10987              		.loc 1 1422 17 is_stmt 0 view .LVU3452
 10988 17f2 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 10989 17f4 23F01803 		bic	r3, r3, #24
 10990 17f8 B375     		strb	r3, [r6, #22]
1424:src/keys.c    **** 
 10991              		.loc 1 1424 3 is_stmt 1 view .LVU3453
1424:src/keys.c    **** 
 10992              		.loc 1 1424 10 is_stmt 0 view .LVU3454
 10993 17fa 4FF0330B 		mov	fp, #51
 10994 17fe FEF78DBC 		b	.L563
 10995              	.LVL868:
 10996              	.L742:
1434:src/keys.c    **** 			if ( State2.runmode ) {
 10997              		.loc 1 1434 3 is_stmt 1 view .LVU3455
1434:src/keys.c    **** 			if ( State2.runmode ) {
 10998              		.loc 1 1434 6 is_stmt 0 view .LVU3456
 10999 1802 0028     		cmp	r0, #0
 11000 1804 7FF4F0AC 		bne	.L737
1435:src/keys.c    **** 				// Alpha scroll left
 11001              		.loc 1 1435 4 is_stmt 1 view .LVU3457
1435:src/keys.c    **** 				// Alpha scroll left
 11002              		.loc 1 1435 7 is_stmt 0 view .LVU3458
 11003 1808 5B06     		lsls	r3, r3, #25
 11004 180a 7EF57EAF 		bpl	.L752
1437:src/keys.c    **** 				State2.alpha_pos = ( n < ( alen() + 5 ) / 6 ) ? n : alpha_pos;
 11005              		.loc 1 1437 5 is_stmt 1 view .LVU3459
 11006              	.LVL869:
1438:src/keys.c    **** 				return STATE_UNFINISHED;
 11007              		.loc 1 1438 5 view .LVU3460
1438:src/keys.c    **** 				return STATE_UNFINISHED;
 11008              		.loc 1 1438 32 is_stmt 0 view .LVU3461
 11009 180e FFF7FEFF 		bl	alen
 11010              	.LVL870:
1438:src/keys.c    **** 				return STATE_UNFINISHED;
 11011              		.loc 1 1438 39 view .LVU3462
 11012 1812 0530     		adds	r0, r0, #5
1438:src/keys.c    **** 				return STATE_UNFINISHED;
 11013              		.loc 1 1438 22 view .LVU3463
 11014 1814 0B28     		cmp	r0, #11
 11015 1816 94BF     		ite	ls
 11016 1818 0023     		movls	r3, #0
 11017 181a 0123     		movhi	r3, #1
 11018 181c 7373     		strb	r3, [r6, #13]
1439:src/keys.c    **** 			}
 11019              		.loc 1 1439 5 is_stmt 1 view .LVU3464
1439:src/keys.c    **** 			}
ARM GAS  /tmp/ccizbp1a.s 			page 308


 11020              		.loc 1 1439 12 is_stmt 0 view .LVU3465
 11021 181e 4FF0330B 		mov	fp, #51
 11022 1822 FEF77BBC 		b	.L563
 11023              	.LVL871:
 11024              	.L740:
1458:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 11025              		.loc 1 1458 3 is_stmt 1 view .LVU3466
1458:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 11026              		.loc 1 1458 6 is_stmt 0 view .LVU3467
 11027 1826 0128     		cmp	r0, #1
 11028 1828 3FF468AF 		beq	.L1060
1460:src/keys.c    **** 			return OP_NIL | OP_OFF;
 11029              		.loc 1 1460 8 is_stmt 1 view .LVU3468
1460:src/keys.c    **** 			return OP_NIL | OP_OFF;
 11030              		.loc 1 1460 11 is_stmt 0 view .LVU3469
 11031 182c 0328     		cmp	r0, #3
 11032 182e 00F0DE80 		beq	.L755
1462:src/keys.c    **** 			init_state();
 11033              		.loc 1 1462 8 is_stmt 1 view .LVU3470
1462:src/keys.c    **** 			init_state();
 11034              		.loc 1 1462 11 is_stmt 0 view .LVU3471
 11035 1832 0028     		cmp	r0, #0
 11036 1834 7EF4D3AE 		bne	.L1058
1463:src/keys.c    **** 		return STATE_UNFINISHED;
 11037              		.loc 1 1463 4 is_stmt 1 view .LVU3472
 11038 1838 FFF7FEFF 		bl	init_state
 11039              	.LVL872:
1464:src/keys.c    **** 
 11040              		.loc 1 1464 10 is_stmt 0 view .LVU3473
 11041 183c 4FF0330B 		mov	fp, #51
 11042 1840 FEF76CBC 		b	.L563
 11043              	.LVL873:
 11044              	.L745:
1404:src/keys.c    **** 			init_arg(RARG_ARCL);
 11045              		.loc 1 1404 3 is_stmt 1 view .LVU3474
1404:src/keys.c    **** 			init_arg(RARG_ARCL);
 11046              		.loc 1 1404 6 is_stmt 0 view .LVU3475
 11047 1844 0128     		cmp	r0, #1
 11048 1846 00F0DB80 		beq	.L1140
1407:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 11049              		.loc 1 1407 10 is_stmt 1 view .LVU3476
1407:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 11050              		.loc 1 1407 13 is_stmt 0 view .LVU3477
 11051 184a 0328     		cmp	r0, #3
 11052 184c 7FF4CCAC 		bne	.L737
1408:src/keys.c    **** 			return STATE_UNFINISHED;
 11053              		.loc 1 1408 4 is_stmt 1 view .LVU3478
 11054              	.LVL874:
 11055              	.LBB805:
 11056              	.LBI805:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 11057              		.loc 1 501 13 view .LVU3479
 11058              	.LBB806:
 502:src/keys.c    **** 		return;
 11059              		.loc 1 502 2 view .LVU3480
 502:src/keys.c    **** 		return;
 11060              		.loc 1 502 6 is_stmt 0 view .LVU3481
ARM GAS  /tmp/ccizbp1a.s 			page 309


 11061 1850 FFF7FEFF 		bl	is_bad_cmdline
 11062              	.LVL875:
 502:src/keys.c    **** 		return;
 11063              		.loc 1 502 5 view .LVU3482
 11064 1854 0346     		mov	r3, r0
 11065 1856 0028     		cmp	r0, #0
 11066 1858 7EF4C1AE 		bne	.L1058
 11067 185c 7320     		movs	r0, #115
 11068              	.LBE806:
 11069              	.LBE805:
 11070              	.LBE822:
 11071              	.LBE1147:
 11072              	.LBE1216:
 11073              	.LBE1275:
2952:src/keys.c    **** #ifdef DM42
 11074              		.loc 1 2952 7 view .LVU3483
 11075 185e 9846     		mov	r8, r3
 11076              	.LBB1276:
 11077              	.LBB1217:
 11078              	.LBB1148:
 11079              	.LBB823:
1409:src/keys.c    **** 		}
 11080              		.loc 1 1409 11 view .LVU3484
 11081 1860 4FF0330B 		mov	fp, #51
 11082              	.LBB808:
 11083              	.LBB807:
 11084 1864 FFF7FEFF 		bl	init_arg.part.0
 11085              	.LVL876:
 11086 1868 FEF758BC 		b	.L563
 11087              	.LVL877:
 11088              	.L746:
1409:src/keys.c    **** 		}
 11089              		.loc 1 1409 11 view .LVU3485
 11090              	.LBE807:
 11091              	.LBE808:
1397:src/keys.c    **** 			init_arg(RARG_ASTO);
 11092              		.loc 1 1397 3 is_stmt 1 view .LVU3486
1397:src/keys.c    **** 			init_arg(RARG_ASTO);
 11093              		.loc 1 1397 6 is_stmt 0 view .LVU3487
 11094 186c 0128     		cmp	r0, #1
 11095 186e 7FF4BBAC 		bne	.L737
1398:src/keys.c    **** 			return STATE_UNFINISHED;
 11096              		.loc 1 1398 4 is_stmt 1 view .LVU3488
 11097              	.LVL878:
 11098              	.LBB809:
 11099              	.LBI809:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 11100              		.loc 1 501 13 view .LVU3489
 11101              	.LBB810:
 502:src/keys.c    **** 		return;
 11102              		.loc 1 502 2 view .LVU3490
 502:src/keys.c    **** 		return;
 11103              		.loc 1 502 6 is_stmt 0 view .LVU3491
 11104 1872 FFF7FEFF 		bl	is_bad_cmdline
 11105              	.LVL879:
 502:src/keys.c    **** 		return;
 11106              		.loc 1 502 5 view .LVU3492
ARM GAS  /tmp/ccizbp1a.s 			page 310


 11107 1876 0346     		mov	r3, r0
 11108 1878 0028     		cmp	r0, #0
 11109 187a 7EF4B0AE 		bne	.L1058
 11110 187e 2620     		movs	r0, #38
 11111              	.LBE810:
 11112              	.LBE809:
 11113              	.LBE823:
 11114              	.LBE1148:
 11115              	.LBE1217:
 11116              	.LBE1276:
2952:src/keys.c    **** #ifdef DM42
 11117              		.loc 1 2952 7 view .LVU3493
 11118 1880 9846     		mov	r8, r3
 11119              	.LBB1277:
 11120              	.LBB1218:
 11121              	.LBB1149:
 11122              	.LBB824:
1399:src/keys.c    **** 		}
 11123              		.loc 1 1399 11 view .LVU3494
 11124 1882 4FF0330B 		mov	fp, #51
 11125              	.LBB812:
 11126              	.LBB811:
 11127 1886 FFF7FEFF 		bl	init_arg.part.0
 11128              	.LVL880:
 11129 188a FEF747BC 		b	.L563
 11130              	.L1156:
 11131 188e 00BF     		.align	2
 11132              	.L1155:
 11133 1890 00000000 		.word	main_ram
 11134 1894 00000000 		.word	NonProgrammable
 11135 1898 00000000 		.word	.LANCHOR11
 11136              	.LVL881:
 11137              	.L1133:
1399:src/keys.c    **** 		}
 11138              		.loc 1 1399 11 view .LVU3495
 11139              	.LBE811:
 11140              	.LBE812:
 11141              	.LBE824:
 11142              	.LBE1149:
 11143              	.LBB1150:
 11144              	.LBB1029:
 908:src/keys.c    **** 
 11145              		.loc 1 908 3 is_stmt 1 view .LVU3496
 908:src/keys.c    **** 
 11146              		.loc 1 908 6 is_stmt 0 view .LVU3497
 11147 189c 2BF4704B 		bic	fp, fp, #61440
 11148              	.LVL882:
 910:src/keys.c    **** 	case K00:
 11149              		.loc 1 910 2 is_stmt 1 view .LVU3498
 11150 18a0 282C     		cmp	r4, #40
 11151 18a2 3FF6E2AD 		bhi	.L767
 11152 18a6 01A2     		adr	r2, .L769
 11153 18a8 52F824F0 		ldr	pc, [r2, r4, lsl #2]
 11154              		.p2align 2
 11155              	.L769:
 11156 18ac EF140000 		.word	.L777+1
 11157 18b0 59140000 		.word	.L775+1
ARM GAS  /tmp/ccizbp1a.s 			page 311


 11158 18b4 6B140000 		.word	.L767+1
 11159 18b8 59140000 		.word	.L775+1
 11160 18bc 6B140000 		.word	.L767+1
 11161 18c0 6B140000 		.word	.L767+1
 11162 18c4 6B140000 		.word	.L767+1
 11163 18c8 6B140000 		.word	.L767+1
 11164 18cc 6B140000 		.word	.L767+1
 11165 18d0 6B140000 		.word	.L767+1
 11166 18d4 6B140000 		.word	.L767+1
 11167 18d8 6B140000 		.word	.L767+1
 11168 18dc 85140000 		.word	.L774+1
 11169 18e0 6B140000 		.word	.L767+1
 11170 18e4 6B140000 		.word	.L767+1
 11171 18e8 6B140000 		.word	.L767+1
 11172 18ec 6B140000 		.word	.L767+1
 11173 18f0 6B140000 		.word	.L767+1
 11174 18f4 61150000 		.word	.L773+1
 11175 18f8 0D150000 		.word	.L772+1
 11176 18fc 6B140000 		.word	.L767+1
 11177 1900 6B140000 		.word	.L767+1
 11178 1904 6B140000 		.word	.L767+1
 11179 1908 6B140000 		.word	.L767+1
 11180 190c 6B140000 		.word	.L767+1
 11181 1910 6B140000 		.word	.L767+1
 11182 1914 6B140000 		.word	.L767+1
 11183 1918 6B140000 		.word	.L767+1
 11184 191c 6B140000 		.word	.L767+1
 11185 1920 6B140000 		.word	.L767+1
 11186 1924 BF140000 		.word	.L771+1
 11187 1928 A1140000 		.word	.L770+1
 11188 192c CD140000 		.word	.L768+1
 11189 1930 CD140000 		.word	.L768+1
 11190 1934 6B140000 		.word	.L767+1
 11191 1938 6B140000 		.word	.L767+1
 11192 193c 6B140000 		.word	.L767+1
 11193 1940 6B140000 		.word	.L767+1
 11194 1944 6B140000 		.word	.L767+1
 11195 1948 CD140000 		.word	.L768+1
 11196 194c CD140000 		.word	.L768+1
 11197              	.LVL883:
 11198              		.p2align 1
 11199              	.L723:
 910:src/keys.c    **** 	case K00:
 11200              		.loc 1 910 2 is_stmt 0 view .LVU3499
 11201              	.LBE1029:
 11202              	.LBE1150:
 11203              	.LBB1151:
 11204              	.LBB767:
2713:src/keys.c    **** 		goto reset_window;
 11205              		.loc 1 2713 4 is_stmt 1 view .LVU3500
2713:src/keys.c    **** 		goto reset_window;
 11206              		.loc 1 2713 18 is_stmt 0 view .LVU3501
 11207 1950 0023     		movs	r3, #0
 11208 1952 3381     		strh	r3, [r6, #8]	@ movhi
 11209 1954 FFF759BB 		b	.L712
 11210              	.LVL884:
 11211              	.L720:
ARM GAS  /tmp/ccizbp1a.s 			page 312


2703:src/keys.c    **** 		goto reset_window;
 11212              		.loc 1 2703 4 is_stmt 1 view .LVU3502
2703:src/keys.c    **** 		goto reset_window;
 11213              		.loc 1 2703 24 is_stmt 0 view .LVU3503
 11214 1958 09F1FF39 		add	r9, r9, #-1
 11215              	.LVL885:
2703:src/keys.c    **** 		goto reset_window;
 11216              		.loc 1 2703 18 view .LVU3504
 11217 195c A6F80890 		strh	r9, [r6, #8]	@ movhi
 11218 1960 FFF753BB 		b	.L712
 11219              	.LVL886:
 11220              	.L1129:
2699:src/keys.c    **** 			--State2.digval;
 11221              		.loc 1 2699 5 is_stmt 1 view .LVU3505
2699:src/keys.c    **** 			--State2.digval;
 11222              		.loc 1 2699 21 is_stmt 0 view .LVU3506
 11223 1964 FFF7FEFF 		bl	global_regs
 11224              	.LVL887:
2699:src/keys.c    **** 			--State2.digval;
 11225              		.loc 1 2699 19 view .LVU3507
 11226 1968 3081     		strh	r0, [r6, #8]	@ movhi
 11227 196a FFF74BBB 		b	.L721
 11228              	.LVL888:
 11229              	.L1139:
2699:src/keys.c    **** 			--State2.digval;
 11230              		.loc 1 2699 19 view .LVU3508
 11231              	.LBE767:
 11232              	.LBE1151:
 11233              	.LBB1152:
 11234              	.LBB825:
1417:src/keys.c    **** 			State2.numdigit = 0;
 11235              		.loc 1 1417 4 is_stmt 1 view .LVU3509
1417:src/keys.c    **** 			State2.numdigit = 0;
 11236              		.loc 1 1417 17 is_stmt 0 view .LVU3510
 11237 196e 737D     		ldrb	r3, [r6, #21]	@ zero_extendqisi2
1418:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 11238              		.loc 1 1418 20 view .LVU3511
 11239 1970 F272     		strb	r2, [r6, #11]
1417:src/keys.c    **** 			State2.numdigit = 0;
 11240              		.loc 1 1417 17 view .LVU3512
 11241 1972 43F00803 		orr	r3, r3, #8
1419:src/keys.c    **** 			return STATE_UNFINISHED;
 11242              		.loc 1 1419 12 view .LVU3513
 11243 1976 0A22     		movs	r2, #10
1417:src/keys.c    **** 			State2.numdigit = 0;
 11244              		.loc 1 1417 17 view .LVU3514
 11245 1978 7375     		strb	r3, [r6, #21]
1418:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 11246              		.loc 1 1418 4 is_stmt 1 view .LVU3515
1419:src/keys.c    **** 			return STATE_UNFINISHED;
 11247              		.loc 1 1419 4 view .LVU3516
1419:src/keys.c    **** 			return STATE_UNFINISHED;
 11248              		.loc 1 1419 12 is_stmt 0 view .LVU3517
 11249 197a F277     		strb	r2, [r6, #31]
1420:src/keys.c    **** 		}
 11250              		.loc 1 1420 4 is_stmt 1 view .LVU3518
1420:src/keys.c    **** 		}
ARM GAS  /tmp/ccizbp1a.s 			page 313


 11251              		.loc 1 1420 11 is_stmt 0 view .LVU3519
 11252 197c 4FF0330B 		mov	fp, #51
 11253 1980 FEF7CCBB 		b	.L563
 11254              	.LVL889:
 11255              	.L880:
1420:src/keys.c    **** 		}
 11256              		.loc 1 1420 11 view .LVU3520
 11257              	.LBE825:
 11258              	.LBE1152:
 11259              	.LBB1153:
 11260              	.LBB678:
 741:src/keys.c    **** 	    }
 11261              		.loc 1 741 15 view .LVU3521
 11262 1984 4FF0100B 		mov	fp, #16
 11263              	.LVL890:
 11264              	.L829:
 741:src/keys.c    **** 	    }
 11265              		.loc 1 741 15 view .LVU3522
 11266              	.LBE678:
 11267              	.LBE1153:
 11268              	.LBE1218:
 11269              	.LBE1277:
3173:src/keys.c    **** 	NonProgrammable = 0;
 11270              		.loc 1 3173 26 view .LVU3523
 11271 1988 614B     		ldr	r3, .L1157
 11272 198a 1A68     		ldr	r2, [r3]
 11273 198c 92B1     		cbz	r2, .L1052
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11274              		.loc 1 3174 2 is_stmt 1 view .LVU3524
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11275              		.loc 1 3174 18 is_stmt 0 view .LVU3525
 11276 198e 0022     		movs	r2, #0
 11277 1990 1A60     		str	r2, [r3]
3175:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11278              		.loc 1 3175 2 is_stmt 1 view .LVU3526
3175:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11279              		.loc 1 3175 32 is_stmt 0 view .LVU3527
 11280 1992 5846     		mov	r0, fp
 11281 1994 FEF77ABE 		b	.L830
 11282              	.LVL891:
 11283              	.L1130:
 11284              	.LBB1278:
 11285              	.LBB1219:
 11286              	.LBB1154:
 11287              	.LBB1082:
1077:src/keys.c    **** 			set_pc(0);
 11288              		.loc 1 1077 43 view .LVU3528
 11289 1998 B3F8EE37 		ldrh	r3, [r3, #2030]
 11290 199c 012B     		cmp	r3, #1
 11291 199e 7FF458AC 		bne	.L789
1078:src/keys.c    **** 		break;
 11292              		.loc 1 1078 4 is_stmt 1 view .LVU3529
 11293 19a2 FFF7FEFF 		bl	set_pc
 11294              	.LVL892:
 11295 19a6 54E4     		b	.L789
 11296              	.LVL893:
 11297              	.L1138:
ARM GAS  /tmp/ccizbp1a.s 			page 314


1078:src/keys.c    **** 		break;
 11298              		.loc 1 1078 4 is_stmt 0 view .LVU3530
 11299              	.LBE1082:
 11300              	.LBE1154:
 11301              	.LBB1155:
 11302              	.LBB992:
2550:src/keys.c    **** 		State2.digval = pc;
 11303              		.loc 1 2550 4 is_stmt 1 view .LVU3531
2550:src/keys.c    **** 		State2.digval = pc;
 11304              		.loc 1 2550 9 is_stmt 0 view .LVU3532
 11305 19a8 2046     		mov	r0, r4
 11306 19aa 0121     		movs	r1, #1
 11307 19ac FFF7FEFF 		bl	advance_to_next_label
 11308              	.LVL894:
 11309 19b0 0446     		mov	r4, r0
 11310              	.LVL895:
2550:src/keys.c    **** 		State2.digval = pc;
 11311              		.loc 1 2550 9 view .LVU3533
 11312 19b2 CAE6     		b	.L686
 11313              	.LVL896:
 11314              	.L1052:
2550:src/keys.c    **** 		State2.digval = pc;
 11315              		.loc 1 2550 9 view .LVU3534
 11316 19b4 5846     		mov	r0, fp
 11317 19b6 FEF70CBF 		b	.L833
 11318              	.LVL897:
 11319              	.L750:
2550:src/keys.c    **** 		State2.digval = pc;
 11320              		.loc 1 2550 9 view .LVU3535
 11321              	.LBE992:
 11322              	.LBE1155:
 11323              	.LBB1156:
 11324              	.LBB826:
1429:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11325              		.loc 1 1429 3 is_stmt 1 view .LVU3536
1429:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11326              		.loc 1 1429 6 is_stmt 0 view .LVU3537
 11327 19ba 0328     		cmp	r0, #3
 11328 19bc 7FF414AC 		bne	.L737
 11329              	.LVL898:
1429:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11330              		.loc 1 1429 6 view .LVU3538
 11331              	.LBE826:
 11332              	.LBE1156:
 11333              	.LBE1219:
 11334              	.LBE1278:
3173:src/keys.c    **** 	NonProgrammable = 0;
 11335              		.loc 1 3173 7 is_stmt 1 view .LVU3539
3173:src/keys.c    **** 	NonProgrammable = 0;
 11336              		.loc 1 3173 10 is_stmt 0 view .LVU3540
 11337 19c0 5B06     		lsls	r3, r3, #25
 11338 19c2 09D5     		bpl	.L884
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11339              		.loc 1 3174 2 is_stmt 1 view .LVU3541
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11340              		.loc 1 3174 18 is_stmt 0 view .LVU3542
 11341 19c4 524B     		ldr	r3, .L1157
ARM GAS  /tmp/ccizbp1a.s 			page 315


 11342 19c6 0022     		movs	r2, #0
 11343              	.LVL899:
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11344              		.loc 1 3174 18 view .LVU3543
 11345 19c8 1A60     		str	r2, [r3]
3175:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11346              		.loc 1 3175 2 is_stmt 1 view .LVU3544
3175:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11347              		.loc 1 3175 32 is_stmt 0 view .LVU3545
 11348 19ca 4FF4BA70 		mov	r0, #372
 11349              	.LVL900:
3175:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11350              		.loc 1 3175 32 view .LVU3546
 11351 19ce FEF75ABD 		b	.L828
 11352              	.LVL901:
 11353              	.L882:
 11354              	.LBB1279:
 11355              	.LBB1220:
 11356              	.LBB1157:
 11357              	.LBB679:
 757:src/keys.c    **** 	    }
 11358              		.loc 1 757 15 view .LVU3547
 11359 19d2 4FF0140B 		mov	fp, #20
 11360 19d6 D7E7     		b	.L829
 11361              	.LVL902:
 11362              	.L884:
 757:src/keys.c    **** 	    }
 11363              		.loc 1 757 15 view .LVU3548
 11364              	.LBE679:
 11365              	.LBE1157:
 11366              	.LBB1158:
 11367              	.LBB827:
1430:src/keys.c    **** 		break;
 11368              		.loc 1 1430 11 view .LVU3549
 11369 19d8 4FF4BA7B 		mov	fp, #372
 11370              	.LVL903:
 11371              	.L827:
1430:src/keys.c    **** 		break;
 11372              		.loc 1 1430 11 view .LVU3550
 11373              	.LBE827:
 11374              	.LBE1158:
 11375              	.LBE1220:
 11376              	.LBE1279:
3173:src/keys.c    **** 	NonProgrammable = 0;
 11377              		.loc 1 3173 26 view .LVU3551
 11378 19dc 4C4B     		ldr	r3, .L1157
 11379 19de 1A68     		ldr	r2, [r3]
 11380              	.LVL904:
3173:src/keys.c    **** 	NonProgrammable = 0;
 11381              		.loc 1 3173 26 view .LVU3552
 11382 19e0 002A     		cmp	r2, #0
 11383 19e2 E7D0     		beq	.L1052
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11384              		.loc 1 3174 2 is_stmt 1 view .LVU3553
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11385              		.loc 1 3174 18 is_stmt 0 view .LVU3554
 11386 19e4 0022     		movs	r2, #0
ARM GAS  /tmp/ccizbp1a.s 			page 316


3175:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11387              		.loc 1 3175 32 view .LVU3555
 11388 19e6 5846     		mov	r0, fp
 11389              	.LVL905:
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11390              		.loc 1 3174 18 view .LVU3556
 11391 19e8 1A60     		str	r2, [r3]
3175:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11392              		.loc 1 3175 2 is_stmt 1 view .LVU3557
 11393 19ea FEF74CBD 		b	.L828
 11394              	.LVL906:
 11395              	.L755:
3173:src/keys.c    **** 	NonProgrammable = 0;
 11396              		.loc 1 3173 7 view .LVU3558
3173:src/keys.c    **** 	NonProgrammable = 0;
 11397              		.loc 1 3173 10 is_stmt 0 view .LVU3559
 11398 19ee 5E06     		lsls	r6, r3, #25
 11399 19f0 14D5     		bpl	.L885
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11400              		.loc 1 3174 2 is_stmt 1 view .LVU3560
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11401              		.loc 1 3174 18 is_stmt 0 view .LVU3561
 11402 19f2 474B     		ldr	r3, .L1157
 11403 19f4 0022     		movs	r2, #0
 11404              	.LVL907:
3174:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11405              		.loc 1 3174 18 view .LVU3562
 11406 19f6 1A60     		str	r2, [r3]
3175:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11407              		.loc 1 3175 2 is_stmt 1 view .LVU3563
3175:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11408              		.loc 1 3175 32 is_stmt 0 view .LVU3564
 11409 19f8 4FF48170 		mov	r0, #258
 11410              	.LVL908:
3175:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11411              		.loc 1 3175 32 view .LVU3565
 11412 19fc FEF743BD 		b	.L828
 11413              	.LVL909:
 11414              	.L1140:
 11415              	.LBB1280:
 11416              	.LBB1221:
 11417              	.LBB1159:
 11418              	.LBB828:
1405:src/keys.c    **** 			return STATE_UNFINISHED;
 11419              		.loc 1 1405 4 is_stmt 1 view .LVU3566
 11420              	.LBB813:
 11421              	.LBI813:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 11422              		.loc 1 501 13 view .LVU3567
 11423              	.LBB814:
 502:src/keys.c    **** 		return;
 11424              		.loc 1 502 2 view .LVU3568
 502:src/keys.c    **** 		return;
 11425              		.loc 1 502 6 is_stmt 0 view .LVU3569
 11426 1a00 FFF7FEFF 		bl	is_bad_cmdline
 11427              	.LVL910:
 502:src/keys.c    **** 		return;
ARM GAS  /tmp/ccizbp1a.s 			page 317


 11428              		.loc 1 502 5 view .LVU3570
 11429 1a04 0346     		mov	r3, r0
 11430 1a06 0028     		cmp	r0, #0
 11431 1a08 7EF4E9AD 		bne	.L1058
 11432 1a0c 2720     		movs	r0, #39
 11433              	.LBE814:
 11434              	.LBE813:
 11435              	.LBE828:
 11436              	.LBE1159:
 11437              	.LBE1221:
 11438              	.LBE1280:
2952:src/keys.c    **** #ifdef DM42
 11439              		.loc 1 2952 7 view .LVU3571
 11440 1a0e 9846     		mov	r8, r3
 11441              	.LBB1281:
 11442              	.LBB1222:
 11443              	.LBB1160:
 11444              	.LBB829:
1406:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 11445              		.loc 1 1406 11 view .LVU3572
 11446 1a10 4FF0330B 		mov	fp, #51
 11447              	.LBB816:
 11448              	.LBB815:
 11449 1a14 FFF7FEFF 		bl	init_arg.part.0
 11450              	.LVL911:
 11451 1a18 FEF780BB 		b	.L563
 11452              	.LVL912:
 11453              	.L885:
1406:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 11454              		.loc 1 1406 11 view .LVU3573
 11455              	.LBE815:
 11456              	.LBE816:
1461:src/keys.c    **** 		else if (shift == SHIFT_N)
 11457              		.loc 1 1461 11 view .LVU3574
 11458 1a1c 4FF4817B 		mov	fp, #258
 11459 1a20 DCE7     		b	.L827
 11460              	.LVL913:
 11461              	.L762:
1461:src/keys.c    **** 		else if (shift == SHIFT_N)
 11462              		.loc 1 1461 11 view .LVU3575
 11463 1a22 0093     		str	r3, [sp]
 11464              	.LBE829:
 11465              	.LBE1160:
 11466              	.LBB1161:
 11467              	.LBB1114:
1176:src/keys.c    **** 			break;
 11468              		.loc 1 1176 4 is_stmt 1 view .LVU3576
 11469              	.LVL914:
 11470              	.LBB1108:
 11471              	.LBI1108:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 11472              		.loc 1 92 20 view .LVU3577
 11473              	.LBB1109:
  93:src/keys.c    **** 	State2.shifts = shift;
 11474              		.loc 1 93 2 view .LVU3578
 11475              	.LBB1110:
 11476              	.LBI1110:
ARM GAS  /tmp/ccizbp1a.s 			page 318


  84:src/keys.c    **** 	enum shifts s = shift_down();
 11477              		.loc 1 84 13 view .LVU3579
 11478              	.LBB1111:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11479              		.loc 1 85 2 view .LVU3580
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11480              		.loc 1 85 18 is_stmt 0 view .LVU3581
 11481 1a24 FFF7FEFF 		bl	shift_down
 11482              	.LVL915:
  86:src/keys.c    **** }
 11483              		.loc 1 86 2 is_stmt 1 view .LVU3582
 11484              	.LBE1111:
 11485              	.LBE1110:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 11486              		.loc 1 94 2 view .LVU3583
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 11487              		.loc 1 94 16 is_stmt 0 view .LVU3584
 11488 1a28 009B     		ldr	r3, [sp]
 11489 1a2a 3374     		strb	r3, [r6, #16]
  95:src/keys.c    **** 	return r;
 11490              		.loc 1 95 2 is_stmt 1 view .LVU3585
  95:src/keys.c    **** 	return r;
 11491              		.loc 1 95 19 is_stmt 0 view .LVU3586
 11492 1a2c 86F80DA0 		strb	r10, [r6, #13]
  96:src/keys.c    **** }
 11493              		.loc 1 96 2 is_stmt 1 view .LVU3587
  96:src/keys.c    **** }
 11494              		.loc 1 96 9 is_stmt 0 view .LVU3588
 11495 1a30 FEF7B2BD 		b	.L592
 11496              	.LVL916:
 11497              	.L761:
  96:src/keys.c    **** }
 11498              		.loc 1 96 9 view .LVU3589
 11499              	.LBE1109:
 11500              	.LBE1108:
1190:src/keys.c    **** 			break;
 11501              		.loc 1 1190 4 is_stmt 1 view .LVU3590
 11502 1a34 FFF7FEFF 		bl	init_state
 11503              	.LVL917:
1191:src/keys.c    **** 
 11504              		.loc 1 1191 4 view .LVU3591
 11505 1a38 FEF7AEBD 		b	.L592
 11506              	.LVL918:
 11507              	.L1132:
1166:src/keys.c    **** 		State2.hyp = 1;
 11508              		.loc 1 1166 3 view .LVU3592
 11509 1a3c FFF7FEFF 		bl	process_cmdline_set_lift
 11510              	.LVL919:
1167:src/keys.c    **** 		State2.dot = op;
 11511              		.loc 1 1167 3 view .LVU3593
1168:src/keys.c    **** 		State2.cmplx = 1;
 11512              		.loc 1 1168 3 view .LVU3594
1169:src/keys.c    **** 		return STATE_UNFINISHED;
 11513              		.loc 1 1169 3 view .LVU3595
1169:src/keys.c    **** 		return STATE_UNFINISHED;
 11514              		.loc 1 1169 16 is_stmt 0 view .LVU3596
 11515 1a40 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
ARM GAS  /tmp/ccizbp1a.s 			page 319


 11516 1a42 0BF00103 		and	r3, fp, #1
 11517 1a46 9B01     		lsls	r3, r3, #6
 11518 1a48 43F02203 		orr	r3, r3, #34
 11519 1a4c 22F06202 		bic	r2, r2, #98
 11520 1a50 1343     		orrs	r3, r3, r2
 11521 1a52 7375     		strb	r3, [r6, #21]
1170:src/keys.c    **** 	}
 11522              		.loc 1 1170 3 is_stmt 1 view .LVU3597
1170:src/keys.c    **** 	}
 11523              		.loc 1 1170 10 is_stmt 0 view .LVU3598
 11524 1a54 4FF0330B 		mov	fp, #51
 11525              	.LVL920:
1170:src/keys.c    **** 	}
 11526              		.loc 1 1170 10 view .LVU3599
 11527 1a58 FEF760BB 		b	.L563
 11528              	.LVL921:
 11529              	.L1135:
1170:src/keys.c    **** 	}
 11530              		.loc 1 1170 10 view .LVU3600
 11531              	.LBE1114:
 11532              	.LBE1161:
 11533              	.LBB1162:
 11534              	.LBB1030:
 980:src/keys.c    **** 				init_arg((enum rarg) op);
 11535              		.loc 1 980 4 is_stmt 1 view .LVU3601
 980:src/keys.c    **** 				init_arg((enum rarg) op);
 11536              		.loc 1 980 7 is_stmt 0 view .LVU3602
 11537 1a5c BAF5704F 		cmp	r10, #61440
 11538 1a60 06D1     		bne	.L784
 980:src/keys.c    **** 				init_arg((enum rarg) op);
 11539              		.loc 1 980 18 view .LVU3603
 11540 1a62 2C4B     		ldr	r3, .L1157+4
 11541 1a64 1B68     		ldr	r3, [r3]
 11542 1a66 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 980:src/keys.c    **** 				init_arg((enum rarg) op);
 11543              		.loc 1 980 8 view .LVU3604
 11544 1a6a D807     		lsls	r0, r3, #31
 11545 1a6c 3EF5B7AD 		bmi	.L1058
 11546              	.LVL922:
 11547              	.L784:
 981:src/keys.c    **** 			}
 11548              		.loc 1 981 5 is_stmt 1 view .LVU3605
 11549              	.LBB1021:
 11550              	.LBI1021:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 11551              		.loc 1 501 13 view .LVU3606
 11552              	.LBB1022:
 502:src/keys.c    **** 		return;
 11553              		.loc 1 502 2 view .LVU3607
 502:src/keys.c    **** 		return;
 11554              		.loc 1 502 6 is_stmt 0 view .LVU3608
 11555 1a70 FFF7FEFF 		bl	is_bad_cmdline
 11556              	.LVL923:
 502:src/keys.c    **** 		return;
 11557              		.loc 1 502 5 view .LVU3609
 11558 1a74 0446     		mov	r4, r0
 11559 1a76 0028     		cmp	r0, #0
ARM GAS  /tmp/ccizbp1a.s 			page 320


 11560 1a78 7EF4B1AD 		bne	.L1058
 11561 1a7c 5FFA8BF0 		uxtb	r0, fp
 11562 1a80 FFF7FEFF 		bl	init_arg.part.0
 11563              	.LVL924:
 11564              	.LBE1022:
 11565              	.LBE1021:
 11566              	.LBE1030:
 11567              	.LBE1162:
 11568              	.LBE1222:
 11569              	.LBE1281:
2952:src/keys.c    **** #ifdef DM42
 11570              		.loc 1 2952 7 view .LVU3610
 11571 1a84 A046     		mov	r8, r4
 11572              	.LBB1282:
 11573              	.LBB1223:
 11574              	.LBB1163:
 11575              	.LBB1031:
 983:src/keys.c    **** 		}
 11576              		.loc 1 983 11 view .LVU3611
 11577 1a86 4FF0330B 		mov	fp, #51
 11578              	.LVL925:
 983:src/keys.c    **** 		}
 11579              		.loc 1 983 11 view .LVU3612
 11580 1a8a FEF747BB 		b	.L563
 11581              	.LVL926:
 11582              	.L1101:
 983:src/keys.c    **** 		}
 11583              		.loc 1 983 11 view .LVU3613
 11584              	.LBE1031:
 11585              	.LBE1163:
 11586              	.LBB1164:
 11587              	.LBB732:
 11588              	.LBB726:
 11589              	.LBB717:
 437:src/keys.c    **** 			shift = SHIFT_LC_G;
 11590              		.loc 1 437 8 is_stmt 1 view .LVU3614
 438:src/keys.c    **** 	}
 11591              		.loc 1 438 10 is_stmt 0 view .LVU3615
 11592 1a8e 0229     		cmp	r1, #2
 11593 1a90 08BF     		it	eq
 11594 1a92 0521     		moveq	r1, #5
 11595              	.LVL927:
 438:src/keys.c    **** 	}
 11596              		.loc 1 438 10 view .LVU3616
 11597 1a94 FEF758BD 		b	.L676
 11598              	.LVL928:
 11599              	.L627:
 438:src/keys.c    **** 	}
 11600              		.loc 1 438 10 view .LVU3617
 11601              	.LBE717:
 11602              	.LBE726:
 11603              	.LBE732:
 11604              	.LBE1164:
 11605              	.LBB1165:
 11606              	.LBB860:
1910:src/keys.c    **** 		// Special 1
 11607              		.loc 1 1910 7 is_stmt 1 view .LVU3618
ARM GAS  /tmp/ccizbp1a.s 			page 321


1910:src/keys.c    **** 		// Special 1
 11608              		.loc 1 1910 10 is_stmt 0 view .LVU3619
 11609 1a98 0128     		cmp	r0, #1
 11610 1a9a 7FF447A8 		bne	.L629
1912:src/keys.c    **** 	}
 11611              		.loc 1 1912 3 is_stmt 1 view .LVU3620
1912:src/keys.c    **** 	}
 11612              		.loc 1 1912 18 is_stmt 0 view .LVU3621
 11613 1a9e BCF1000F 		cmp	ip, #0
 11614 1aa2 14BF     		ite	ne
 11615 1aa4 2723     		movne	r3, #39
 11616 1aa6 1E23     		moveq	r3, #30
1912:src/keys.c    **** 	}
 11617              		.loc 1 1912 47 view .LVU3622
 11618 1aa8 9B44     		add	fp, fp, r3
 11619              	.LVL929:
1912:src/keys.c    **** 	}
 11620              		.loc 1 1912 47 view .LVU3623
 11621 1aaa FEF775BD 		b	.L592
 11622              	.LVL930:
 11623              	.L881:
1912:src/keys.c    **** 	}
 11624              		.loc 1 1912 47 view .LVU3624
 11625              	.LBE860:
 11626              	.LBE1165:
 11627              	.LBB1166:
 11628              	.LBB680:
 749:src/keys.c    **** 	    }
 11629              		.loc 1 749 15 view .LVU3625
 11630 1aae 4FF0110B 		mov	fp, #17
 11631 1ab2 69E7     		b	.L829
 11632              	.LVL931:
 11633              	.L883:
 733:src/keys.c    **** 	    }
 11634              		.loc 1 733 15 view .LVU3626
 11635 1ab4 4FF00F0B 		mov	fp, #15
 11636 1ab8 66E7     		b	.L829
 11637              	.LVL932:
 11638              	.L1136:
 733:src/keys.c    **** 	    }
 11639              		.loc 1 733 15 view .LVU3627
 11640              	.LBE680:
 11641              	.LBE1166:
 11642              	.LBB1167:
 11643              	.LBB1032:
 913:src/keys.c    **** 	    State2.dot = op;
 11644              		.loc 1 913 6 is_stmt 1 view .LVU3628
 914:src/keys.c    **** 	    // State2.cmplx = 0;
 11645              		.loc 1 914 6 view .LVU3629
 913:src/keys.c    **** 	    State2.dot = op;
 11646              		.loc 1 913 17 is_stmt 0 view .LVU3630
 11647 1aba 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
 11648 1abc 0BF00103 		and	r3, fp, #1
 11649              	.LVL933:
 913:src/keys.c    **** 	    State2.dot = op;
 11650              		.loc 1 913 17 view .LVU3631
 11651 1ac0 9B01     		lsls	r3, r3, #6
ARM GAS  /tmp/ccizbp1a.s 			page 322


 11652 1ac2 43F02003 		orr	r3, r3, #32
 11653 1ac6 22F06002 		bic	r2, r2, #96
 11654 1aca 1343     		orrs	r3, r3, r2
 11655 1acc 7375     		strb	r3, [r6, #21]
 916:src/keys.c    **** 	  }
 11656              		.loc 1 916 6 is_stmt 1 view .LVU3632
 916:src/keys.c    **** 	  }
 11657              		.loc 1 916 13 is_stmt 0 view .LVU3633
 11658 1ace 4FF0330B 		mov	fp, #51
 11659              	.LVL934:
 916:src/keys.c    **** 	  }
 11660              		.loc 1 916 13 view .LVU3634
 11661 1ad2 FEF723BB 		b	.L563
 11662              	.LVL935:
 11663              	.L1137:
 932:src/keys.c    **** 		}
 11664              		.loc 1 932 4 is_stmt 1 view .LVU3635
 932:src/keys.c    **** 		}
 11665              		.loc 1 932 34 is_stmt 0 view .LVU3636
 11666 1ad6 104B     		ldr	r3, .L1157+8
 11667              	.LVL936:
 932:src/keys.c    **** 		}
 11668              		.loc 1 932 11 view .LVU3637
 11669 1ad8 33F81010 		ldrh	r1, [r3, r0, lsl #1]
 11670 1adc FFF7FEFF 		bl	check_f_key
 11671              	.LVL937:
 932:src/keys.c    **** 		}
 11672              		.loc 1 932 11 view .LVU3638
 11673 1ae0 8346     		mov	fp, r0
 11674              	.LVL938:
 932:src/keys.c    **** 		}
 11675              		.loc 1 932 11 view .LVU3639
 11676 1ae2 FEF759BD 		b	.L592
 11677              	.LVL939:
 11678              	.L878:
 952:src/keys.c    **** 	  }
 11679              		.loc 1 952 13 view .LVU3640
 11680 1ae6 4FF0120B 		mov	fp, #18
 11681 1aea 4DE7     		b	.L829
 11682              	.LVL940:
 11683              	.L879:
 957:src/keys.c    **** 	  }
 11684              		.loc 1 957 13 view .LVU3641
 11685 1aec 4FF0130B 		mov	fp, #19
 11686 1af0 4AE7     		b	.L829
 11687              	.LVL941:
 11688              	.L877:
 957:src/keys.c    **** 	  }
 11689              		.loc 1 957 13 view .LVU3642
 11690              	.LBE1032:
 11691              	.LBE1167:
 11692              	.LBB1168:
 11693              	.LBB830:
1468:src/keys.c    **** 		break;
 11694              		.loc 1 1468 11 view .LVU3643
 11695 1af2 40F23B1B 		movw	fp, #315
 11696 1af6 71E7     		b	.L827
ARM GAS  /tmp/ccizbp1a.s 			page 323


 11697              	.LVL942:
 11698              	.L1134:
1468:src/keys.c    **** 		break;
 11699              		.loc 1 1468 11 view .LVU3644
 11700              	.LBE830:
 11701              	.LBE1168:
 11702              	.LBB1169:
 11703              	.LBB1033:
 971:src/keys.c    **** 			return STATE_UNFINISHED;
 11704              		.loc 1 971 4 is_stmt 1 view .LVU3645
 971:src/keys.c    **** 			return STATE_UNFINISHED;
 11705              		.loc 1 971 26 is_stmt 0 view .LVU3646
 11706 1af8 5C1E     		subs	r4, r3, #1
 11707              	.LVL943:
 971:src/keys.c    **** 			return STATE_UNFINISHED;
 11708              		.loc 1 971 17 view .LVU3647
 11709 1afa F27D     		ldrb	r2, [r6, #23]	@ zero_extendqisi2
 971:src/keys.c    **** 			return STATE_UNFINISHED;
 11710              		.loc 1 971 26 view .LVU3648
 11711 1afc 6342     		rsbs	r3, r4, #0
 11712 1afe 6341     		adcs	r3, r3, r4
 971:src/keys.c    **** 			return STATE_UNFINISHED;
 11713              		.loc 1 971 17 view .LVU3649
 11714 1b00 63F3C712 		bfi	r2, r3, #7, #1
 11715 1b04 F275     		strb	r2, [r6, #23]
 972:src/keys.c    **** 		}
 11716              		.loc 1 972 4 is_stmt 1 view .LVU3650
 972:src/keys.c    **** 		}
 11717              		.loc 1 972 11 is_stmt 0 view .LVU3651
 11718 1b06 4FF0330B 		mov	fp, #51
 11719              	.LVL944:
 972:src/keys.c    **** 		}
 11720              		.loc 1 972 11 view .LVU3652
 11721 1b0a FEF707BB 		b	.L563
 11722              	.L1158:
 11723 1b0e 00BF     		.align	2
 11724              	.L1157:
 11725 1b10 00000000 		.word	NonProgrammable
 11726 1b14 00000000 		.word	main_ram
 11727 1b18 00000000 		.word	.LANCHOR20
 11728              	.LBE1033:
 11729              	.LBE1169:
 11730              	.LBE1223:
 11731              	.LBE1282:
 11732              		.cfi_endproc
 11733              	.LFE58:
 11735              		.section	.text.process_keycode_with_shift,"ax",%progbits
 11736              		.align	1
 11737              		.p2align 2,,3
 11738              		.global	process_keycode_with_shift
 11739              		.syntax unified
 11740              		.thumb
 11741              		.thumb_func
 11742              		.fpu fpv4-sp-d16
 11744              	process_keycode_with_shift:
 11745              	.LFB57:
2940:src/keys.c    ****    if (remapped.shift >= 0) set_shift ( remapped.shift );
ARM GAS  /tmp/ccizbp1a.s 			page 324


 11746              		.loc 1 2940 61 is_stmt 1 view -0
 11747              		.cfi_startproc
 11748              		@ args = 0, pretend = 0, frame = 8
 11749              		@ frame_needed = 0, uses_anonymous_args = 0
 11750 0000 10B5     		push	{r4, lr}
 11751              		.cfi_def_cfa_offset 8
 11752              		.cfi_offset 4, -8
 11753              		.cfi_offset 14, -4
 11754 0002 82B0     		sub	sp, sp, #8
 11755              		.cfi_def_cfa_offset 16
2940:src/keys.c    ****    if (remapped.shift >= 0) set_shift ( remapped.shift );
 11756              		.loc 1 2940 61 is_stmt 0 view .LVU3654
 11757 0004 02AB     		add	r3, sp, #8
 11758 0006 03E90300 		stmdb	r3, {r0, r1}
 11759 000a 019C     		ldr	r4, [sp, #4]
 11760              	.LVL945:
2941:src/keys.c    ****    process_keycode ( remapped.key_34s );
 11761              		.loc 1 2941 4 is_stmt 1 view .LVU3655
2941:src/keys.c    ****    process_keycode ( remapped.key_34s );
 11762              		.loc 1 2941 7 is_stmt 0 view .LVU3656
 11763 000c 002C     		cmp	r4, #0
 11764 000e 05DB     		blt	.L1160
2941:src/keys.c    ****    process_keycode ( remapped.key_34s );
 11765              		.loc 1 2941 29 is_stmt 1 discriminator 1 view .LVU3657
 11766              	.LVL946:
 11767              	.LBB1283:
 11768              	.LBI1283:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 11769              		.loc 1 92 20 discriminator 1 view .LVU3658
 11770              	.LBB1284:
  93:src/keys.c    **** 	State2.shifts = shift;
 11771              		.loc 1 93 2 discriminator 1 view .LVU3659
 11772              	.LBB1285:
 11773              	.LBI1285:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 11774              		.loc 1 84 13 discriminator 1 view .LVU3660
 11775              	.LBB1286:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11776              		.loc 1 85 2 discriminator 1 view .LVU3661
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11777              		.loc 1 85 18 is_stmt 0 discriminator 1 view .LVU3662
 11778 0010 FFF7FEFF 		bl	shift_down
 11779              	.LVL947:
  86:src/keys.c    **** }
 11780              		.loc 1 86 2 is_stmt 1 discriminator 1 view .LVU3663
 11781              	.LBE1286:
 11782              	.LBE1285:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 11783              		.loc 1 94 2 discriminator 1 view .LVU3664
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 11784              		.loc 1 94 16 is_stmt 0 discriminator 1 view .LVU3665
 11785 0014 054B     		ldr	r3, .L1162
  95:src/keys.c    **** 	return r;
 11786              		.loc 1 95 19 discriminator 1 view .LVU3666
 11787 0016 0022     		movs	r2, #0
 11788              	.LBE1284:
 11789              	.LBE1283:
ARM GAS  /tmp/ccizbp1a.s 			page 325


2941:src/keys.c    ****    process_keycode ( remapped.key_34s );
 11790              		.loc 1 2941 29 discriminator 1 view .LVU3667
 11791 0018 1C74     		strb	r4, [r3, #16]
 11792              	.LBB1288:
 11793              	.LBB1287:
  95:src/keys.c    **** 	return r;
 11794              		.loc 1 95 2 is_stmt 1 discriminator 1 view .LVU3668
  95:src/keys.c    **** 	return r;
 11795              		.loc 1 95 19 is_stmt 0 discriminator 1 view .LVU3669
 11796 001a 5A73     		strb	r2, [r3, #13]
  96:src/keys.c    **** }
 11797              		.loc 1 96 2 is_stmt 1 discriminator 1 view .LVU3670
 11798              	.LVL948:
 11799              	.L1160:
  96:src/keys.c    **** }
 11800              		.loc 1 96 2 is_stmt 0 discriminator 1 view .LVU3671
 11801              	.LBE1287:
 11802              	.LBE1288:
2942:src/keys.c    ****  }
 11803              		.loc 1 2942 4 is_stmt 1 view .LVU3672
 11804 001c 9DF80000 		ldrb	r0, [sp]	@ zero_extendqisi2
2943:src/keys.c    ****  
 11805              		.loc 1 2943 2 is_stmt 0 view .LVU3673
 11806 0020 02B0     		add	sp, sp, #8
 11807              		.cfi_def_cfa_offset 8
 11808              		@ sp needed
 11809 0022 BDE81040 		pop	{r4, lr}
 11810              		.cfi_restore 14
 11811              		.cfi_restore 4
 11812              		.cfi_def_cfa_offset 0
 11813              	.LVL949:
2942:src/keys.c    ****  }
 11814              		.loc 1 2942 4 view .LVU3674
 11815 0026 FFF7FEBF 		b	process_keycode
 11816              	.LVL950:
 11817              	.L1163:
 11818 002a 00BF     		.align	2
 11819              	.L1162:
 11820 002c 00000000 		.word	StateWhileOn
 11821              		.cfi_endproc
 11822              	.LFE57:
 11824              		.comm	NonProgrammable,4,4
 11825              		.comm	GoFast,4,4
 11826              		.comm	OpCodeDisplayPending,4,4
 11827              		.comm	OpCode,4,4
 11828              		.comm	WasDataEntry,4,4
 11829              		.section	.bss.was_paused.9653,"aw",%nobits
 11830              		.align	2
 11831              		.set	.LANCHOR12,. + 0
 11834              	was_paused.9653:
 11835 0000 00000000 		.space	4
 11836              		.section	.rodata.alpha_arrows,"a"
 11837              		.align	2
 11840              	alpha_arrows:
 11841 0000 0D0E100F 		.ascii	"\015\016\020\017\003\004\237^\177"
 11841      03049F5E 
 11841      7F
ARM GAS  /tmp/ccizbp1a.s 			page 326


 11842              		.section	.rodata.alpha_catalogue,"a"
 11843              		.align	2
 11846              	alpha_catalogue:
 11847 0000 0D4AC280 		.ascii	"\015J\302\200\236\256\012\242~\265\256k\252\356\274"
 11847      9EAE0AA2 
 11847      7EB5AE6B 
 11847      AAEEBC
 11848 000f 284AB0   		.ascii	"(J\260"
 11849              		.section	.rodata.alpha_compares,"a"
 11850              		.align	2
 11853              	alpha_compares:
 11854 0000 3C093D1D 		.ascii	"<\011=\035\012>[]{}"
 11854      0A3E5B5D 
 11854      7B7D
 11855              		.section	.rodata.alpha_letters,"a"
 11856              		.align	2
 11857              		.set	.LANCHOR3,. + 0
 11860              	alpha_letters:
 11861 0000 C0C1C2C3 		.ascii	"\300\301\302\303\210\304\305\306\307\204\310\311\312"
 11861      88C4C5C6 
 11861      C784C8C9 
 11861      CA
 11862 000d CB9ECCCD 		.ascii	"\313\236\314\315\316\317\320\321\322\323\324\025\325"
 11862      CECFD0D1 
 11862      D2D3D415 
 11862      D5
 11863 001a D618D8D9 		.ascii	"\326\030\330\331\332\333\334\001\031\002\335\032\336"
 11863      DADBDC01 
 11863      1902DD1A 
 11863      DE
 11864 0027 DF       		.ascii	"\337"
 11865              		.section	.rodata.alpha_letters_lower,"a"
 11866              		.align	2
 11867              		.set	.LANCHOR4,. + 0
 11870              	alpha_letters_lower:
 11871 0000 E0E1E2E3 		.ascii	"\340\341\342\343\211\344\345\346\347\205\350\351\352"
 11871      89E4E5E6 
 11871      E785E8E9 
 11871      EA
 11872 000d EB9EECED 		.ascii	"\353\236\354\355\356\357\360\361\362\363\364\026\365"
 11872      EEEFF0F1 
 11872      F2F3F416 
 11872      F5
 11873 001a F618F8F9 		.ascii	"\366\030\370\371\372\373\374\001\031\002\375\032\376"
 11873      FAFBFC01 
 11873      1902FD1A 
 11873      FE
 11874 0027 FF       		.ascii	"\377"
 11875              		.section	.rodata.alpha_subscripts,"a"
 11876              		.align	2
 11879              	alpha_subscripts:
 11880 0000 B805B9BA 		.ascii	"\270\005\271\272\232\200\327\230\273\024\206\274\367"
 11880      9A80D798 
 11880      BB1486BC 
 11880      F7
 11881 000d 1BBDBE93 		.ascii	"\033\275\276\223\277\201\213\234\214\231\235\220\233"
 11881      BF818B9C 
ARM GAS  /tmp/ccizbp1a.s 			page 327


 11881      8C999D90 
 11881      9B
 11882              		.section	.rodata.alpha_symbols,"a"
 11883              		.align	2
 11886              	alpha_symbols:
 11887 0000 2C3A3B27 		.ascii	",:;'\"*@_~%$\014\036\037\216\256\222`#"
 11887      222A405F 
 11887      7E25240C 
 11887      1E1F8EAE 
 11887      926023
 11888              		.section	.rodata.alphamap.9185,"a"
 11889              		.align	2
 11890              		.set	.LANCHOR9,. + 0
 11893              	alphamap.9185:
 11894 0000 41004100 		.ascii	"A\000A\000a\240"
 11894      61A0
 11895 0006 42004200 		.ascii	"B\000B\000b\241"
 11895      62A1
 11896 000c 43008200 		.ascii	"C\000\202\000c\242"
 11896      63A2
 11897 0012 44008300 		.ascii	"D\000\203\000d\243"
 11897      64A3
 11898 0018 450D4500 		.ascii	"E\015E\000e\244"
 11898      65A4
 11899 001e 46009400 		.ascii	"F\000\224\000f\264"
 11899      66B4
 11900 0024 47008200 		.ascii	"G\000\202\000g\242"
 11900      67A2
 11901 002a 48005800 		.ascii	"H\000X\000h\265"
 11901      68B5
 11902 0030 49004900 		.ascii	"I\000I\000i\250"
 11902      69A8
 11903 0036 4AAF0000 		.ascii	"J\257\000\000j\000"
 11903      6A00
 11904 003c 4B004B00 		.ascii	"K\000K\000k\251"
 11904      6BA9
 11905 0042 4C008A00 		.ascii	"L\000\212\000l\252"
 11905      6CAA
 11906 0048 00004800 		.ascii	"\000\000H\000\000\246"
 11906      00A6
 11907 004e 4D00AB17 		.ascii	"M\000\253\027m\253"
 11907      6DAB
 11908 0054 4E084E95 		.ascii	"N\010N\225n\254"
 11908      6EAC
 11909 005a 4F0097AF 		.ascii	"O\000\227\257o\267"
 11909      6FB7
 11910 0060 00000000 		.ascii	"\000\000\000\000\000\000"
 11910      0000
 11911 0066 00000000 		.ascii	"\000\000\000\000\000\000"
 11911      0000
 11912 006c 50378F26 		.ascii	"P7\217&p\257"
 11912      70AF
 11913 0072 5138007C 		.ascii	"Q8\000|q\000"
 11913      7100
 11914 0078 52395200 		.ascii	"R9R\000r\260"
 11914      72B0
 11915 007e 532F9100 		.ascii	"S/\221\000s\261"
ARM GAS  /tmp/ccizbp1a.s 			page 328


 11915      73B1
 11916 0084 00000000 		.ascii	"\000\000\000\000\000\000"
 11916      0000
 11917 008a 54345400 		.ascii	"T4T\000t\262"
 11917      74B2
 11918 0090 55350000 		.ascii	"U5\000\000u\000"
 11918      7500
 11919 0096 56360000 		.ascii	"V6\000\000v\000"
 11919      7600
 11920 009c 571C0000 		.ascii	"W\034\000\000w\000"
 11920      7700
 11921 00a2 00000000 		.ascii	"\000\000\000\000\000\000"
 11921      0000
 11922 00a8 58318D00 		.ascii	"X1\215\000x\255"
 11922      78AD
 11923 00ae 59325900 		.ascii	"Y2Y\000y\263"
 11923      79B3
 11924 00b4 5A335A00 		.ascii	"Z3Z\000z\245"
 11924      7AA5
 11925 00ba 2D282900 		.ascii	"-()\000\000\000"
 11925      0000
 11926 00c0 00000000 		.ascii	"\000\000\000\000\000\000"
 11926      0000
 11927 00c6 3A308700 		.ascii	":0\207\000;\247"
 11927      3BA7
 11928 00cc 2E2E9600 		.ascii	"..\226\000.\266"
 11928      2EB6
 11929 00d2 3F002100 		.ascii	"?\000!\000\000\000"
 11929      0000
 11930 00d8 202B3D00 		.ascii	" +=\000\000\000"
 11930      0000
 11931 00de 00000000 		.ascii	"\000\000\000\000\000\000"
 11931      0000
 11932              		.section	.rodata.amap.9176,"a"
 11933              		.align	2
 11934              		.set	.LANCHOR10,. + 0
 11937              	amap.9176:
 11938 0000 04       		.byte	4
 11939 0001 000D00   		.ascii	"\000\015\000"
 11940 0004 05       		.byte	5
 11941 0005 000E09   		.ascii	"\000\016\011"
 11942 0008 08       		.byte	8
 11943 0009 00000F   		.ascii	"\000\000\017"
 11944 000c 1F       		.byte	31
 11945 000d 00000C   		.ascii	"\000\000\014"
 11946 0010 21       		.byte	33
 11947 0011 00000A   		.ascii	"\000\000\012"
 11948 0014 26       		.byte	38
 11949 0015 00000B   		.ascii	"\000\000\013"
 11950              		.section	.rodata.catalogue,"a"
 11951              		.align	2
 11954              	catalogue:
 11955 0000 431A4660 		.ascii	"C\032F`\301_W\343\330\242;X\026\274}Dq\001\011tK\222"
 11955      C15F57E3 
 11955      D8A23B58 
 11955      16BC7D44 
 11955      71010974 
ARM GAS  /tmp/ccizbp1a.s 			page 329


 11956 0016 F60D0643 		.ascii	"\366\015\006COV\235!H\2216\325\266iZfK\016o\027V\241"
 11956      4F569D21 
 11956      489136D5 
 11956      B6695A66 
 11956      4B0E6F17 
 11957 002c B4415C06 		.ascii	"\264A\\\006i%`\231vY\224`\032\306\354\303k[\024K\006"
 11957      69256099 
 11957      76599460 
 11957      1AC6ECC3 
 11957      6B5B144B 
 11958 0041 3DF05C07 		.ascii	"=\360\\\007\002>\321\243\013\017(\333&\021\263\015W"
 11958      023ED1A3 
 11958      0B0F28DB 
 11958      2611B30D 
 11958      57
 11959 0052 33290841 		.ascii	"3)\010A\320\224-\256+\033u\374\240'\253\202\250\237"
 11959      D0942DAE 
 11959      2B1B75FC 
 11959      A027AB82 
 11959      A89F
 11960 0064 ADEB5AE6 		.ascii	"\255\353Z\346\272\256\353\312\330\241*\331\224\221\235"
 11960      BAAEEBCA 
 11960      D8A12AD9 
 11960      94919D
 11961 0073 6799B671 		.ascii	"g\231\266q\260_\020\007\025\242o\326\325\251\241"
 11961      B05F1007 
 11961      15A26FD6 
 11961      D5A9A1
 11962              		.section	.rodata.catalogue_sizes.9451,"a"
 11963              		.align	2
 11964              		.set	.LANCHOR2,. + 0
 11967              	catalogue_sizes.9451:
 11968 0000 00681911 		.ascii	"\000h\031\0216<C~%4\016\023\012\011(\032LLX\016\023"
 11968      363C437E 
 11968      25340E13 
 11968      0A09281A 
 11968      4C4C580E 
 11969              		.section	.rodata.catalogues.9459,"a"
 11970              		.align	2
 11971              		.set	.LANCHOR6,. + 0
 11974              	catalogues.9459:
 11975 0000 00000000 		.word	0
 11976 0004 00000000 		.word	catalogue
 11977 0008 00000000 		.word	cplx_catalogue
 11978 000c 00000000 		.word	stats_catalogue
 11979 0010 00000000 		.word	prob_catalogue
 11980 0014 00000000 		.word	int_catalogue
 11981 0018 00000000 		.word	prog_catalogue
 11982 001c 00000000 		.word	program_xfcn
 11983 0020 00000000 		.word	test_catalogue
 11984 0024 00000000 		.word	mode_catalogue
 11985 0028 00000000 		.word	alpha_catalogue
 11986 002c 00000000 		.word	alpha_symbols
 11987 0030 00000000 		.word	alpha_compares
 11988 0034 00000000 		.word	alpha_arrows
 11989 0038 00000000 		.word	alpha_letters
 11990 003c 00000000 		.word	alpha_subscripts
ARM GAS  /tmp/ccizbp1a.s 			page 330


 11991 0040 00000000 		.word	0
 11992 0044 00000000 		.word	0
 11993 0048 00000000 		.word	0
 11994 004c 00000000 		.word	sums_catalogue
 11995 0050 00000000 		.word	matrix_catalogue
 11996              		.section	.rodata.cmap.9175,"a"
 11997              		.align	2
 11998              		.set	.LANCHOR11,. + 0
 12001              	cmap.9175:
 12002 0000 04       		.byte	4
 12003 0001 120012   		.ascii	"\022\000\022"
 12004 0004 05       		.byte	5
 12005 0005 090909   		.ascii	"\011\011\011"
 12006 0008 06       		.byte	6
 12007 0009 151515   		.ascii	"\025\025\025"
 12008 000c 0C       		.byte	12
 12009 000d 100011   		.ascii	"\020\000\021"
 12010 0010 19       		.byte	25
 12011 0011 040004   		.ascii	"\004\000\004"
 12012 0014 1A       		.byte	26
 12013 0015 030003   		.ascii	"\003\000\003"
 12014 0018 1B       		.byte	27
 12015 0019 130013   		.ascii	"\023\000\023"
 12016 001c 1C       		.byte	28
 12017 001d 140014   		.ascii	"\024\000\024"
 12018 0020 1E       		.byte	30
 12019 0021 171717   		.ascii	"\027\027\027"
 12020 0024 1F       		.byte	31
 12021 0025 080808   		.ascii	"\010\010\010"
 12022 0028 20       		.byte	32
 12023 0029 060606   		.ascii	"\006\006\006"
 12024 002c 21       		.byte	33
 12025 002d 010502   		.ascii	"\001\005\002"
 12026              		.section	.rodata.conv_catalogue,"a"
 12027              		.align	2
 12028              		.set	.LANCHOR5,. + 0
 12031              	conv_catalogue:
 12032 0000 DADB8C8A 		.ascii	"\332\333\214\212+-\3357'913\021\026\005\334\336\031"
 12032      2B2DDD37 
 12032      27393133 
 12032      111605DC 
 12032      DE19
 12033 0012 1D1B1315 		.ascii	"\035\033\023\025\015\017\215\010\217\012*,GCE\027?0"
 12033      0D0F8D08 
 12033      8F0A2A2C 
 12033      47434517 
 12033      3F30
 12034 0024 32340400 		.ascii	"24\004\000\002\006&\" ($5/\001#\020\014\016!\022\024"
 12034      02062622 
 12034      20282435 
 12034      2F012310 
 12034      0C0E2112 
 12035 0039 3B181A1C 		.ascii	";\030\032\034\036).\01168>:<@%\337=\213\216\003\007"
 12035      1E292E09 
 12035      36383E3A 
 12035      3C4025DF 
 12035      3D8B8E03 
ARM GAS  /tmp/ccizbp1a.s 			page 331


 12036 004e 4B49410B 		.ascii	"KIA\013JHFBD\037"
 12036      4A484642 
 12036      441F
 12037              		.section	.rodata.conv_mapping.9498,"a"
 12038              		.align	2
 12039              		.set	.LANCHOR8,. + 0
 12042              	conv_mapping.9498:
 12043 0000 8502     		.short	645
 12044 0002 8402     		.short	644
 12045 0004 8602     		.short	646
 12046 0006 8702     		.short	647
 12047 0008 8202     		.short	642
 12048 000a 8302     		.short	643
 12049 000c 3202     		.short	562
 12050 000e 3302     		.short	563
 12051 0010 3402     		.short	564
 12052 0012 3502     		.short	565
 12053 0014 3602     		.short	566
 12054 0016 3702     		.short	567
 12055              		.section	.rodata.cplx_catalogue,"a"
 12056              		.align	2
 12059              	cplx_catalogue:
 12060 0000 78278C6A 		.ascii	"x'\214j\001;\316\341\015\332x_W\332fvf\347\345\317{"
 12060      013BCEE1 
 12060      0DDA785F 
 12060      57DA6676 
 12060      66E7E5CF 
 12061 0015 9DB775DF 		.ascii	"\235\267u\337\242\353\011\265\370u\000"
 12061      A2EB09B5 
 12061      F87500
 12062              		.section	.rodata.disp.9313,"a"
 12063              		.align	2
 12064              		.set	.LANCHOR15,. + 0
 12067              	disp.9313:
 12068 0000 03       		.byte	3
 12069 0001 02       		.byte	2
 12070 0002 05       		.byte	5
 12071 0003 04       		.byte	4
 12072              		.section	.rodata.int_catalogue,"a"
 12073              		.align	2
 12076              	int_catalogue:
 12077 0000 432F3306 		.ascii	"C/3\006\365=\233\342Y\275\020\257d4\365i\331&\240\224"
 12077      F53D9BE2 
 12077      59BD10AF 
 12077      6434F569 
 12077      D926A094 
 12078 0014 BE6FA65D 		.ascii	"\276o\246]\226\\\231F\261qn\3146\264\225\273n\363\336"
 12078      965C9946 
 12078      B1716ECC 
 12078      36B495BB 
 12078      6EF3DE
 12079 0027 EEBC2F41 		.ascii	"\356\274/A\240\373\274o,=\204\015L\244-\256+\033z\340"
 12079      A0FBBC6F 
 12079      2C3D840D 
 12079      4CA42DAE 
 12079      2B1B7AE0 
 12080 003b AAADEB5A 		.ascii	"\252\255\353Z\346\272\256\353\312\330\253I\020\007\031"
ARM GAS  /tmp/ccizbp1a.s 			page 332


 12080      E6BAAEEB 
 12080      CAD8AB49 
 12080      100719
 12081 004a C7       		.ascii	"\307"
 12082              		.section	.rodata.linear_key_map.9146,"a"
 12083              		.align	2
 12084              		.set	.LANCHOR1,. + 0
 12087              	linear_key_map.9146:
 12088 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\011\012\013\014"
 12088      04050607 
 12088      08090A0B 
 12088      0C
 12089 000d 0D0E0F10 		.ascii	"\015\016\017\020\000\021\022\023\024\025\000\026\027"
 12089      00111213 
 12089      14150016 
 12089      17
 12090 001a 18191A00 		.ascii	"\030\031\032\000\033\034\035\036\037\000 !\"#$%%%%%"
 12090      1B1C1D1E 
 12090      1F002021 
 12090      22232425 
 12090      25252525 
 12091 002e 25       		.ascii	"%"
 12092              		.section	.rodata.linear_key_map.9150,"a"
 12093              		.align	2
 12094              		.set	.LANCHOR18,. + 0
 12097              	linear_key_map.9150:
 12098 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\"\"\"\011\012\013"
 12098      04050607 
 12098      08222222 
 12098      090A0B
 12099 000f 0C0D000E 		.ascii	"\014\015\000\016\017\020\021\022\000\023\024\025\026"
 12099      0F101112 
 12099      00131415 
 12099      16
 12100 001c 17001819 		.ascii	"\027\000\030\031\032\033\034\000\035\036\037 !\"\"\""
 12100      1A1B1C00 
 12100      1D1E1F20 
 12100      21222222 
 12101 002c 040522   		.ascii	"\004\005\""
 12102              		.section	.rodata.map.9162,"a"
 12103              		.align	2
 12104              		.set	.LANCHOR0,. + 0
 12107              	map.9162:
 12108 0000 E8E9EAEB 		.ascii	"\350\351\352\353\377\177\177\177mnol\377\377\377\377"
 12108      FF7F7F7F 
 12108      6D6E6F6C 
 12108      FFFFFFFF 
 12109 0010 FF7F0708 		.ascii	"\377\177\007\010\011\177\177\347\005\006\177\177\344"
 12109      097F7FE7 
 12109      05067F7F 
 12109      E4
 12110 001d E5E67FFF 		.ascii	"\345\346\177\377\000\360\177\177\177"
 12110      00F07F7F 
 12110      7F
 12111              		.section	.rodata.matrix_catalogue,"a"
 12112              		.align	2
 12115              	matrix_catalogue:
ARM GAS  /tmp/ccizbp1a.s 			page 333


 12116 0000 62DC4364 		.ascii	"b\334Cd\3305\334#m\205nXf\341\301n\230\2461\303bX\206"
 12116      D835DC23 
 12116      6D856E58 
 12116      66E1C16E 
 12116      98A631C3 
 12117 0017 1C       		.ascii	"\034"
 12118              		.section	.rodata.mode_catalogue,"a"
 12119              		.align	2
 12122              	mode_catalogue:
 12123 0000 2948C290 		.ascii	")H\302\220\213\276\306c\250\351\037\210\001\374|\270"
 12123      8BBEC663 
 12123      A8E91F88 
 12123      01FC7CB8 
 12124 0010 09818CCF 		.ascii	"\011\201\214\317$I\302lb\031I2H\232\0310\202\020\203"
 12124      2449C26C 
 12124      62194932 
 12124      489A1930 
 12124      821083
 12125 0023 C3704220 		.ascii	"\303pB \2072\012c\020\3072Js\024\306#\214\340\3409\301"
 12125      87320A63 
 12125      10C7324A 
 12125      7314C623 
 12125      8CE0E039 
 12126 0038 C862148D 		.ascii	"\310b\024\215\273\0173\310\231"
 12126      BB0F33C8 
 12126      99
 12127              		.section	.rodata.op_map.9229,"a"
 12128              		.align	2
 12129              		.set	.LANCHOR22,. + 0
 12132              	op_map.9229:
 12133 0000 1500     		.short	21
 12134 0002 0B02     		.short	523
 12135 0004 0003     		.short	768
 12136 0006 0A02     		.short	522
 12137 0008 1300     		.short	19
 12138 000a 1400     		.short	20
 12139 000c 0300     		.short	3
 12140 000e 0A00     		.short	10
 12141 0010 0701     		.short	263
 12142 0012 0000     		.short	0
 12143 0014 6531     		.short	12645
 12144 0016 0300     		.short	3
 12145 0018 0200     		.short	2
 12146 001a 0100     		.short	1
 12147 001c 4400     		.short	68
 12148 001e 0C00     		.short	12
 12149 0020 0D00     		.short	13
 12150 0022 0E00     		.short	14
 12151 0024 0403     		.short	772
 12152 0026 2F00     		.short	47
 12153 0028 0900     		.short	9
 12154 002a 0A00     		.short	10
 12155 002c 0B00     		.short	11
 12156 002e 0303     		.short	771
 12157 0030 2E00     		.short	46
 12158 0032 0600     		.short	6
 12159 0034 0700     		.short	7
ARM GAS  /tmp/ccizbp1a.s 			page 334


 12160 0036 0800     		.short	8
 12161 0038 0203     		.short	770
 12162 003a 3300     		.short	51
 12163 003c 0500     		.short	5
 12164 003e 0400     		.short	4
 12165 0040 3B01     		.short	315
 12166 0042 0103     		.short	769
 12167 0044 0001     		.short	256
 12168              		.section	.rodata.op_map.9252,"a"
 12169              		.align	2
 12170              		.set	.LANCHOR19,. + 0
 12173              	op_map.9252:
 12174 0000 0100     		.short	1
 12175 0002 0000     		.short	0
 12176 0004 20F2     		.short	-3552
 12177 0006 23F2     		.short	-3549
 12178 0008 21F2     		.short	-3551
 12179 000a 24F2     		.short	-3548
 12180 000c 22F2     		.short	-3550
 12181 000e 25F2     		.short	-3547
 12182 0010 47F1     		.short	-3769
 12183 0012 46F1     		.short	-3770
 12184 0014 4E01     		.short	334
 12185 0016 4D01     		.short	333
 12186 0018 5C01     		.short	348
 12187 001a 35F1     		.short	-3787
 12188 001c 5B01     		.short	347
 12189 001e 36F1     		.short	-3786
 12190 0020 3301     		.short	307
 12191 0022 37F1     		.short	-3785
 12192 0024 3300     		.short	51
 12193 0026 0C01     		.short	268
 12194 0028 2B00     		.short	43
 12195 002a 2C00     		.short	44
 12196 002c 028B     		.short	-29950
 12197 002e 088B     		.short	-29944
 12198 0030 0A8B     		.short	-29942
 12199 0032 108B     		.short	-29936
 12200 0034 4301     		.short	323
 12201 0036 3D01     		.short	317
 12202 0038 0902     		.short	521
 12203 003a 0802     		.short	520
 12204 003c 1002     		.short	528
 12205 003e 0D02     		.short	525
 12206 0040 0F02     		.short	527
 12207 0042 0E02     		.short	526
 12208 0044 0003     		.short	768
 12209 0046 0803     		.short	776
 12210 0048 0BF2     		.short	-3573
 12211 004a 1603     		.short	790
 12212 004c 1203     		.short	786
 12213 004e 1303     		.short	787
 12214 0050 3DF2     		.short	-3523
 12215 0052 3EF2     		.short	-3522
 12216 0054 24F1     		.short	-3804
 12217 0056 1EF1     		.short	-3810
 12218 0058 75F2     		.short	-3467
ARM GAS  /tmp/ccizbp1a.s 			page 335


 12219 005a 27F1     		.short	-3801
 12220 005c 0A02     		.short	522
 12221 005e 1602     		.short	534
 12222 0060 5100     		.short	81
 12223 0062 5200     		.short	82
 12224 0064 0000     		.short	0
 12225 0066 0100     		.short	1
 12226 0068 48F0     		.short	-4024
 12227 006a 4BF0     		.short	-4021
 12228 006c 47F0     		.short	-4025
 12229 006e 46F0     		.short	-4026
 12230 0070 77F2     		.short	-3465
 12231 0072 78F2     		.short	-3464
 12232 0074 3300     		.short	51
 12233 0076 3300     		.short	51
 12234 0078 0502     		.short	517
 12235 007a 0602     		.short	518
 12236 007c 0402     		.short	516
 12237 007e 0002     		.short	512
 12238 0080 4200     		.short	66
 12239 0082 3801     		.short	312
 12240 0084 3A00     		.short	58
 12241 0086 3B00     		.short	59
 12242 0088 0001     		.short	256
 12243 008a 0001     		.short	256
 12244              		.section	.rodata.op_map.9275,"a"
 12245              		.align	2
 12246              		.set	.LANCHOR21,. + 0
 12249              	op_map.9275:
 12250 0000 4C80     		.short	-32692
 12251 0002 4D80     		.short	-32691
 12252 0004 4E80     		.short	-32690
 12253 0006 4F80     		.short	-32689
 12254 0008 3300     		.short	51
 12255 000a 3300     		.short	51
 12256 000c 3300     		.short	51
 12257 000e 2180     		.short	-32735
 12258 0010 0801     		.short	264
 12259 0012 8780     		.short	-32633
 12260 0014 1180     		.short	-32751
 12261 0016 7C02     		.short	636
 12262 0018 5560     		.short	24661
 12263 001a 3F01     		.short	319
 12264 001c 4580     		.short	-32699
 12265 001e 1C03     		.short	796
 12266 0020 1D03     		.short	797
 12267 0022 1E03     		.short	798
 12268 0024 0603     		.short	774
 12269 0026 2F02     		.short	559
 12270 0028 3300     		.short	51
 12271 002a 3300     		.short	51
 12272 002c 3300     		.short	51
 12273 002e 3300     		.short	51
 12274 0030 3300     		.short	51
 12275 0032 3300     		.short	51
 12276 0034 3300     		.short	51
 12277 0036 3300     		.short	51
ARM GAS  /tmp/ccizbp1a.s 			page 336


 12278 0038 1640     		.short	16406
 12279 003a 0201     		.short	258
 12280 003c 6D80     		.short	-32659
 12281 003e 5001     		.short	336
 12282 0040 3300     		.short	51
 12283 0042 1540     		.short	16405
 12284 0044 0001     		.short	256
 12285              		.section	.rodata.op_map.9285,"a"
 12286              		.align	2
 12287              		.set	.LANCHOR17,. + 0
 12290              	op_map.9285:
 12291 0000 0100     		.short	1
 12292 0002 0100     		.short	1
 12293 0004 0000     		.short	0
 12294 0006 0000     		.short	0
 12295 0008 0B05     		.short	1291
 12296 000a 2005     		.short	1312
 12297 000c 2305     		.short	1315
 12298 000e 3300     		.short	51
 12299 0010 0006     		.short	1536
 12300 0012 2105     		.short	1313
 12301 0014 2405     		.short	1316
 12302 0016 3300     		.short	51
 12303 0018 0A05     		.short	1290
 12304 001a 2205     		.short	1314
 12305 001c 2505     		.short	1317
 12306 001e 3300     		.short	51
 12307 0020 3300     		.short	51
 12308 0022 4701     		.short	327
 12309 0024 4601     		.short	326
 12310 0026 3300     		.short	51
 12311 0028 3300     		.short	51
 12312 002a 3300     		.short	51
 12313 002c 3300     		.short	51
 12314 002e 3300     		.short	51
 12315 0030 15FF     		.short	-235
 12316 0032 3300     		.short	51
 12317 0034 3300     		.short	51
 12318 0036 3300     		.short	51
 12319 0038 1AFF     		.short	-230
 12320 003a 3300     		.short	51
 12321 003c 3300     		.short	51
 12322 003e 8CFF     		.short	-116
 12323 0040 0901     		.short	265
 12324 0042 3300     		.short	51
 12325 0044 3300     		.short	51
 12326 0046 0A01     		.short	266
 12327 0048 0B01     		.short	267
 12328 004a 3300     		.short	51
 12329 004c 0D01     		.short	269
 12330 004e 0D01     		.short	269
 12331 0050 663F     		.short	16230
 12332 0052 3300     		.short	51
 12333 0054 3300     		.short	51
 12334 0056 1FFF     		.short	-225
 12335 0058 3805     		.short	1336
 12336 005a 3300     		.short	51
ARM GAS  /tmp/ccizbp1a.s 			page 337


 12337 005c 3300     		.short	51
 12338 005e 3905     		.short	1337
 12339 0060 5521     		.short	8533
 12340 0062 3300     		.short	51
 12341 0064 3300     		.short	51
 12342 0066 5521     		.short	8533
 12343 0068 3300     		.short	51
 12344 006a 3300     		.short	51
 12345 006c 3300     		.short	51
 12346 006e 3300     		.short	51
 12347 0070 3300     		.short	51
 12348 0072 0905     		.short	1289
 12349 0074 0805     		.short	1288
 12350 0076 3300     		.short	51
 12351 0078 07A8     		.short	-22521
 12352 007a 1005     		.short	1296
 12353 007c 0D05     		.short	1293
 12354 007e 3300     		.short	51
 12355 0080 08A8     		.short	-22520
 12356 0082 0F05     		.short	1295
 12357 0084 0E05     		.short	1294
 12358 0086 3300     		.short	51
 12359 0088 09A8     		.short	-22519
 12360 008a 0006     		.short	1536
 12361 008c 0806     		.short	1544
 12362 008e 3300     		.short	51
 12363 0090 0406     		.short	1540
 12364 0092 0B05     		.short	1291
 12365 0094 1606     		.short	1558
 12366 0096 3300     		.short	51
 12367 0098 3300     		.short	51
 12368 009a 1206     		.short	1554
 12369 009c 1306     		.short	1555
 12370 009e 2F05     		.short	1327
 12371 00a0 04A8     		.short	-22524
 12372 00a2 3300     		.short	51
 12373 00a4 3300     		.short	51
 12374 00a6 3300     		.short	51
 12375 00a8 05A8     		.short	-22523
 12376 00aa 3300     		.short	51
 12377 00ac 3300     		.short	51
 12378 00ae 3300     		.short	51
 12379 00b0 06A8     		.short	-22522
 12380 00b2 3300     		.short	51
 12381 00b4 3300     		.short	51
 12382 00b6 3300     		.short	51
 12383 00b8 0306     		.short	1539
 12384 00ba 0A05     		.short	1290
 12385 00bc 1605     		.short	1302
 12386 00be 1605     		.short	1302
 12387 00c0 3300     		.short	51
 12388 00c2 3300     		.short	51
 12389 00c4 3300     		.short	51
 12390 00c6 3300     		.short	51
 12391 00c8 01A8     		.short	-22527
 12392 00ca 0000     		.short	0
 12393 00cc 0100     		.short	1
ARM GAS  /tmp/ccizbp1a.s 			page 338


 12394 00ce 3300     		.short	51
 12395 00d0 02A8     		.short	-22526
 12396 00d2 3300     		.short	51
 12397 00d4 3300     		.short	51
 12398 00d6 3300     		.short	51
 12399 00d8 03A8     		.short	-22525
 12400 00da 3300     		.short	51
 12401 00dc 3300     		.short	51
 12402 00de 3300     		.short	51
 12403 00e0 0206     		.short	1538
 12404 00e2 3300     		.short	51
 12405 00e4 3300     		.short	51
 12406 00e6 3300     		.short	51
 12407 00e8 3300     		.short	51
 12408 00ea 3300     		.short	51
 12409 00ec 3300     		.short	51
 12410 00ee 0201     		.short	258
 12411 00f0 00A8     		.short	-22528
 12412 00f2 0505     		.short	1285
 12413 00f4 0605     		.short	1286
 12414 00f6 3300     		.short	51
 12415 00f8 B801     		.short	440
 12416 00fa 0405     		.short	1284
 12417 00fc 0005     		.short	1280
 12418 00fe 3300     		.short	51
 12419 0100 3300     		.short	51
 12420 0102 3300     		.short	51
 12421 0104 3300     		.short	51
 12422 0106 3300     		.short	51
 12423 0108 0106     		.short	1537
 12424 010a 3300     		.short	51
 12425 010c 3300     		.short	51
 12426 010e 3300     		.short	51
 12427 0110 0001     		.short	256
 12428 0112 0001     		.short	256
 12429 0114 0001     		.short	256
 12430 0116 0001     		.short	256
 12431              		.section	.rodata.op_map.9297,"a"
 12432              		.align	2
 12433              		.set	.LANCHOR13,. + 0
 12436              	op_map.9297:
 12437 0000 2A27     		.ascii	"*'"
 12438 0002 2B28     		.ascii	"+("
 12439 0004 2C29     		.ascii	",)"
 12440              		.section	.rodata.op_map.9312,"a"
 12441              		.align	2
 12442              		.set	.LANCHOR14,. + 0
 12445              	op_map.9312:
 12446 0000 1A02     		.short	538
 12447 0002 7B02     		.short	635
 12448 0004 1B02     		.short	539
 12449 0006 7A02     		.short	634
 12450 0008 1C02     		.short	540
 12451 000a 3300     		.short	51
 12452              		.section	.rodata.op_map2.9253,"a"
 12453              		.align	2
 12454              		.set	.LANCHOR20,. + 0
ARM GAS  /tmp/ccizbp1a.s 			page 339


 12457              	op_map2.9253:
 12458 0000 3300     		.short	51
 12459 0002 3300     		.short	51
 12460 0004 0003     		.short	768
 12461 0006 0A02     		.short	522
 12462              		.section	.rodata.opcode_breaks,"a"
 12463              		.align	2
 12464              		.set	.LANCHOR7,. + 0
 12467              	opcode_breaks:
 12468 0000 34C0992F 		.ascii	"4\300\231/\014\231/"
 12468      0C992F
 12469              		.section	.rodata.prob_catalogue,"a"
 12470              		.align	2
 12473              	prob_catalogue:
 12474 0000 50D42581 		.ascii	"P\324%\201DV\025u\235YP\023\365}ANU\324\351;S\024\265"
 12474      44561575 
 12474      9D595013 
 12474      F57D414E 
 12474      55D4E93B 
 12475 0017 8D4D5495 		.ascii	"\215MT\225\025\225SUUE\231VS\324\345\221PRT\205\211"
 12475      15955355 
 12475      55459956 
 12475      53D4E591 
 12475      50525485 
 12476 002c 4A519455 		.ascii	"JQ\224U\205GM\225\304\3358OS\305y>V\223\004\3215L\325"
 12476      85474D95 
 12476      C4DD384F 
 12476      53C5793E 
 12476      569304D1 
 12477 0043 B0       		.ascii	"\260"
 12478              		.section	.rodata.prog_catalogue,"a"
 12479              		.align	2
 12482              	prog_catalogue:
 12483 0000 B1CD1C6C 		.ascii	"\261\315\034ly\035G\201\310t*1\233@B\263,\341\272\222"
 12483      791D4781 
 12483      C8742A31 
 12483      9B4042B3 
 12483      2CE1BA92 
 12484 0014 B8CE0B66 		.ascii	"\270\316\013f\3323-\0336\317\302\216#\220\3478\316\214"
 12484      DA332D1B 
 12484      36CFC28E 
 12484      2390E738 
 12484      CE8C
 12485 0026 30DE3770 		.ascii	"0\3367p\260\320\3349G\003\233\011\254\315\361\330\315"
 12485      B0D0DC39 
 12485      47039B09 
 12485      ACCDF1D8 
 12485      CD
 12486 0037 1B4B12BC 		.ascii	"\033K\022\274\262,\016\033\030\322\015\353#\002\244"
 12486      B22C0E1B 
 12486      18D20DEB 
 12486      2302A4
 12487 0046 2A7030E8 		.ascii	"*p0\350\313\250\252<\000\256+o\374X"
 12487      CBA8AA3C 
 12487      00AE2B6F 
 12487      FC58
 12488              		.section	.rodata.program_xfcn,"a"
ARM GAS  /tmp/ccizbp1a.s 			page 340


 12489              		.align	2
 12492              	program_xfcn:
 12493 0000 431A4662 		.ascii	"C\032Fb\3630W\325\372\365=\212#\265\201k\333\342Y\275"
 12493      F33057D5 
 12493      FAF53D8A 
 12493      23B5816B 
 12493      DBE259BD 
 12494 0014 1F511C40 		.ascii	"\037Q\034@B]\022\344\275\203A\257d4\365i\322\024\211"
 12494      425D12E4 
 12494      BD8341AF 
 12494      6434F569 
 12494      D21489
 12495 0027 136D5B66 		.ascii	"\023m[f\225\246d\260\346\361uj\011F\321\005p\031\244"
 12495      95A664B0 
 12495      E6F1756A 
 12495      0946D105 
 12495      7019A4
 12496 003a 9582BE6F 		.ascii	"\225\202\276o\246]\226\\\231F\001\254\\[\263\015\255"
 12496      A65D965C 
 12496      994601AC 
 12496      5C5BB30D 
 12496      AD
 12497 004b 6C512C18 		.ascii	"lQ,\030\225\273n\363\336\356\2740[\323\001\300\206\203"
 12497      95BB6EF3 
 12497      DEEEBC30 
 12497      5BD301C0 
 12497      8683
 12498 005d ED1ABC4C 		.ascii	"\355\032\274L+\313\017(\333&\021\263\015W3)\010A\320"
 12498      2BCB0F28 
 12498      DB2611B3 
 12498      0D573329 
 12498      0841D0
 12499 0070 942DAE2B 		.ascii	"\224-\256+\033u\374\240'\253\202\250\237\255\353Z\346"
 12499      1B75FCA0 
 12499      27AB82A8 
 12499      9FADEB5A 
 12499      E6
 12500 0081 BAAEEBCA 		.ascii	"\272\256\353\312\330\241*\331\224\221\235g\231\266q"
 12500      D8A12AD9 
 12500      94919D67 
 12500      99B671
 12501 0090 B05F1007 		.ascii	"\260_\020\007\031\305h\233\365\265jh\\p"
 12501      19C5689B 
 12501      F5B56A68 
 12501      5C70
 12502              		.section	.rodata.smap.9177,"a"
 12503              		.align	2
 12504              		.set	.LANCHOR16,. + 0
 12507              	smap.9177:
 12508 0000 00010002 		.ascii	"\000\001\000\002"
 12509              		.section	.rodata.stats_catalogue,"a"
 12510              		.align	2
 12513              	stats_catalogue:
 12514 0000 1805C1A0 		.ascii	"\030\005\301\240]\027\311qXa\026\205\225\240T\027\205"
 12514      5D17C971 
 12514      58611685 
 12514      95A05417 
ARM GAS  /tmp/ccizbp1a.s 			page 341


 12514      85
 12515 0011 514C575A 		.ascii	"QLWZ\200"
 12515      80
 12516              		.section	.rodata.sums_catalogue,"a"
 12517              		.align	2
 12520              	sums_catalogue:
 12521 0000 1444B134 		.ascii	"\024D\2614J\023\204\301 E\021\004\361\034I\021\205\000"
 12521      4A1384C1 
 12521      20451104 
 12521      F11C4911 
 12521      8500
 12522              		.section	.rodata.test_catalogue,"a"
 12523              		.align	2
 12526              	test_catalogue:
 12527 0000 BE2F7C54 		.ascii	"\276/|T\353/\313\333\226\351\272\356\242\362\344\271"
 12527      EB2FCBDB 
 12527      96E9BAEE 
 12527      A2F2E4B9 
 12528 0010 AE8B9CD3 		.ascii	"\256\213\234\323.\357\353L\2356\213\202\370\2725\013"
 12528      2EEFEB4C 
 12528      9D368B82 
 12528      F8BA350B 
 12529 0020 9340F0B0 		.ascii	"\223@\360\260,\023T\326\257\354;\010\267<@"
 12529      2C1354D6 
 12529      AFEC3B08 
 12529      B73C40
 12530              		.text
 12531              	.Letext0:
 12532              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 12533              		.file 3 "dmcp/dmcp.h"
 12534              		.file 4 "src/decNumber/decContext.h"
 12535              		.file 5 "src/decNumber/decNumber.h"
 12536              		.file 6 "src/decNumber/decimal64.h"
 12537              		.file 7 "src/decNumber/decimal128.h"
 12538              		.file 8 "src/xeq.h"
 12539              		.file 9 "src/data.h"
 12540              		.file 10 "src/keys.h"
 12541              		.file 11 "src/display.h"
 12542              		.file 12 "src/consts.h"
 12543              		.file 13 "src/storage.h"
 12544              		.file 14 "src/stats.h"
 12545              		.file 15 "src/catalogues.h"
 12546              		.file 16 "src/lcd.h"
 12547              		.file 17 "src/int.h"
ARM GAS  /tmp/ccizbp1a.s 			page 342


DEFINED SYMBOLS
                            *ABS*:0000000000000000 keys.c
     /tmp/ccizbp1a.s:18     .text.gtodot_digit:0000000000000000 $t
     /tmp/ccizbp1a.s:26     .text.gtodot_digit:0000000000000000 gtodot_digit
     /tmp/ccizbp1a.s:110    .text.gtodot_digit:0000000000000054 $d
     /tmp/ccizbp1a.s:117    .text.check_f_key:0000000000000000 $t
     /tmp/ccizbp1a.s:124    .text.check_f_key:0000000000000000 check_f_key
     /tmp/ccizbp1a.s:202    .text.check_f_key:0000000000000038 $d
     /tmp/ccizbp1a.s:208    .text.is_label_or_end_at:0000000000000000 $t
     /tmp/ccizbp1a.s:215    .text.is_label_or_end_at:0000000000000000 is_label_or_end_at
     /tmp/ccizbp1a.s:271    .text.advance_to_next_label:0000000000000000 $t
     /tmp/ccizbp1a.s:278    .text.advance_to_next_label:0000000000000000 advance_to_next_label
     /tmp/ccizbp1a.s:359    .text.advance_to_next_label:0000000000000048 $d
     /tmp/ccizbp1a.s:364    .text.init_cat:0000000000000000 $t
     /tmp/ccizbp1a.s:371    .text.init_cat:0000000000000000 init_cat
     /tmp/ccizbp1a.s:696    .text.init_cat:00000000000000ec $d
     /tmp/ccizbp1a.s:702    .text.advance_to_previous_label:0000000000000000 $t
     /tmp/ccizbp1a.s:709    .text.advance_to_previous_label:0000000000000000 advance_to_previous_label
     /tmp/ccizbp1a.s:794    .text.advance_to_previous_label:000000000000004c $d
     /tmp/ccizbp1a.s:799    .text.check_confirm.part.0:0000000000000000 $t
     /tmp/ccizbp1a.s:806    .text.check_confirm.part.0:0000000000000000 check_confirm.part.0
     /tmp/ccizbp1a.s:860    .text.check_confirm.part.0:0000000000000028 $d
                            *COM*:0000000000000004 NonProgrammable
     /tmp/ccizbp1a.s:867    .text.init_arg.part.0:0000000000000000 $t
     /tmp/ccizbp1a.s:874    .text.init_arg.part.0:0000000000000000 init_arg.part.0
     /tmp/ccizbp1a.s:916    .text.init_arg.part.0:0000000000000024 $d
     /tmp/ccizbp1a.s:921    .text.reset_arg:0000000000000000 $t
     /tmp/ccizbp1a.s:928    .text.reset_arg:0000000000000000 reset_arg
     /tmp/ccizbp1a.s:972    .text.reset_arg:0000000000000018 $d
     /tmp/ccizbp1a.s:977    .text.arg_eval:0000000000000000 $t
     /tmp/ccizbp1a.s:984    .text.arg_eval:0000000000000000 arg_eval
     /tmp/ccizbp1a.s:1106   .text.arg_eval:0000000000000074 $d
     /tmp/ccizbp1a.s:1113   .text.process_arg_shuffle:0000000000000000 $t
     /tmp/ccizbp1a.s:1120   .text.process_arg_shuffle:0000000000000000 process_arg_shuffle
     /tmp/ccizbp1a.s:1178   .text.process_arg_shuffle:000000000000002c $d
     /tmp/ccizbp1a.s:1183   .text.arg_digit:0000000000000000 $t
     /tmp/ccizbp1a.s:1190   .text.arg_digit:0000000000000000 arg_digit
     /tmp/ccizbp1a.s:1415   .text.arg_digit:00000000000000c8 $d
     /tmp/ccizbp1a.s:1423   .text.intltr:0000000000000000 $t
     /tmp/ccizbp1a.s:1430   .text.intltr:0000000000000000 intltr
     /tmp/ccizbp1a.s:1493   .text.intltr:0000000000000030 $d
     /tmp/ccizbp1a.s:1499   .text.set_window:0000000000000000 $t
     /tmp/ccizbp1a.s:1506   .text.set_window:0000000000000000 set_window
     /tmp/ccizbp1a.s:1653   .text.set_window:000000000000008c $d
     /tmp/ccizbp1a.s:1660   .text.arg_storcl:0000000000000000 $t
     /tmp/ccizbp1a.s:1667   .text.arg_storcl:0000000000000000 arg_storcl
     /tmp/ccizbp1a.s:1783   .text.arg_storcl:0000000000000040 $d
     /tmp/ccizbp1a.s:1788   .text.process_arg:0000000000000000 $t
     /tmp/ccizbp1a.s:1795   .text.process_arg:0000000000000000 process_arg
     /tmp/ccizbp1a.s:2016   .text.process_arg:000000000000009c $d
     /tmp/ccizbp1a.s:2063   .text.process_arg:00000000000000f8 $t
     /tmp/ccizbp1a.s:2096   .text.process_arg:000000000000011e $d
     /tmp/ccizbp1a.s:2540   .text.process_arg:00000000000002b8 $d
     /tmp/ccizbp1a.s:2552   .text.process_arg:00000000000002cc $t
     /tmp/ccizbp1a.s:2925   .text.process_arg:0000000000000474 $d
     /tmp/ccizbp1a.s:2930   .text.cur_shift:0000000000000000 $t
     /tmp/ccizbp1a.s:2938   .text.cur_shift:0000000000000000 cur_shift
ARM GAS  /tmp/ccizbp1a.s 			page 343


     /tmp/ccizbp1a.s:2966   .text.cur_shift:0000000000000010 $d
     /tmp/ccizbp1a.s:2971   .text.reset_shift:0000000000000000 $t
     /tmp/ccizbp1a.s:2979   .text.reset_shift:0000000000000000 reset_shift
     /tmp/ccizbp1a.s:3040   .text.reset_shift:0000000000000014 $d
     /tmp/ccizbp1a.s:3045   .text.keycode_to_row_column:0000000000000000 $t
     /tmp/ccizbp1a.s:3053   .text.keycode_to_row_column:0000000000000000 keycode_to_row_column
     /tmp/ccizbp1a.s:3081   .text.keycode_to_row_column:0000000000000020 $d
     /tmp/ccizbp1a.s:3086   .text.row_column_to_keycode:0000000000000000 $t
     /tmp/ccizbp1a.s:3094   .text.row_column_to_keycode:0000000000000000 row_column_to_keycode
     /tmp/ccizbp1a.s:3152   .text.row_column_to_keycode:000000000000003c $d
     /tmp/ccizbp1a.s:3157   .text.keycode_to_digit_or_register:0000000000000000 $t
     /tmp/ccizbp1a.s:3165   .text.keycode_to_digit_or_register:0000000000000000 keycode_to_digit_or_register
     /tmp/ccizbp1a.s:3201   .text.keycode_to_digit_or_register:000000000000000c $d
     /tmp/ccizbp1a.s:3207   .text.init_state:0000000000000000 $t
     /tmp/ccizbp1a.s:3215   .text.init_state:0000000000000000 init_state
     /tmp/ccizbp1a.s:3321   .text.init_state:000000000000005c $d
     /tmp/ccizbp1a.s:3327   .text.soft_init_state:0000000000000000 $t
     /tmp/ccizbp1a.s:3335   .text.soft_init_state:0000000000000000 soft_init_state
     /tmp/ccizbp1a.s:3430   .text.soft_init_state:0000000000000048 $d
     /tmp/ccizbp1a.s:3436   .text.current_catalogue_max:0000000000000000 $t
     /tmp/ccizbp1a.s:3444   .text.current_catalogue_max:0000000000000000 current_catalogue_max
     /tmp/ccizbp1a.s:3465   .text.current_catalogue_max:000000000000000c $d
     /tmp/ccizbp1a.s:3471   .text.current_catalogue:0000000000000000 $t
     /tmp/ccizbp1a.s:3479   .text.current_catalogue:0000000000000000 current_catalogue
     /tmp/ccizbp1a.s:3735   .text.current_catalogue:00000000000000c8 $d
     /tmp/ccizbp1a.s:3745   .text.process_catalogue:0000000000000000 $t
     /tmp/ccizbp1a.s:3752   .text.process_catalogue:0000000000000000 process_catalogue
     /tmp/ccizbp1a.s:4084   .text.process_catalogue:0000000000000100 $d
     /tmp/ccizbp1a.s:4116   .text.process_catalogue:0000000000000120 $t
     /tmp/ccizbp1a.s:4624   .text.process_catalogue:00000000000002dc $d
     /tmp/ccizbp1a.s:4645   .text.process_catalogue:00000000000002fc $t
     /tmp/ccizbp1a.s:4675   .text.find_pos:0000000000000000 $t
     /tmp/ccizbp1a.s:4683   .text.find_pos:0000000000000000 find_pos
     /tmp/ccizbp1a.s:4856   .text.find_pos:0000000000000080 $d
     /tmp/ccizbp1a.s:4862   .text.get_alpha_state:0000000000000000 $t
     /tmp/ccizbp1a.s:4870   .text.get_alpha_state:0000000000000000 get_alpha_state
     /tmp/ccizbp1a.s:4902   .text.get_alpha_state:0000000000000020 $d
     /tmp/ccizbp1a.s:4908   .rodata.process_keycode.str1.4:0000000000000000 $d
     /tmp/ccizbp1a.s:4918   .text.process_keycode:0000000000000000 $t
     /tmp/ccizbp1a.s:4926   .text.process_keycode:0000000000000000 process_keycode
     /tmp/ccizbp1a.s:5488   .text.process_keycode:000000000000025c $d
                            *COM*:0000000000000004 OpCode
                            *COM*:0000000000000004 GoFast
                            *COM*:0000000000000004 OpCodeDisplayPending
                            *COM*:0000000000000004 WasDataEntry
     /tmp/ccizbp1a.s:5506   .text.process_keycode:0000000000000298 $t
     /tmp/ccizbp1a.s:5755   .text.process_keycode:00000000000003ac $d
     /tmp/ccizbp1a.s:5775   .text.process_keycode:00000000000003d2 $t
     /tmp/ccizbp1a.s:6014   .text.process_keycode:00000000000004a0 $d
     /tmp/ccizbp1a.s:6060   .text.process_keycode:00000000000004ce $t
     /tmp/ccizbp1a.s:6064   .text.process_keycode:00000000000004d0 $d
     /tmp/ccizbp1a.s:6116   .text.process_keycode:0000000000000510 $t
     /tmp/ccizbp1a.s:6288   .text.process_keycode:00000000000005a8 $d
     /tmp/ccizbp1a.s:6298   .text.process_keycode:00000000000005cc $t
     /tmp/ccizbp1a.s:6733   .text.process_keycode:0000000000000770 $d
     /tmp/ccizbp1a.s:6742   .text.process_keycode:0000000000000794 $t
     /tmp/ccizbp1a.s:6846   .text.process_keycode:00000000000007f4 $d
ARM GAS  /tmp/ccizbp1a.s 			page 344


     /tmp/ccizbp1a.s:6872   .text.process_keycode:000000000000085c $t
     /tmp/ccizbp1a.s:6902   .text.process_keycode:0000000000000874 $d
     /tmp/ccizbp1a.s:6913   .text.process_keycode:0000000000000894 $t
     /tmp/ccizbp1a.s:6922   .text.process_keycode:00000000000008a8 $d
     /tmp/ccizbp1a.s:6926   .text.process_keycode:00000000000008b8 $t
     /tmp/ccizbp1a.s:7926   .text.process_keycode:0000000000000c08 $d
     /tmp/ccizbp1a.s:7940   .text.process_keycode:0000000000000c28 $t
     /tmp/ccizbp1a.s:8290   .text.process_keycode:0000000000000d44 $d
     /tmp/ccizbp1a.s:8325   .text.process_keycode:0000000000000dd0 $t
     /tmp/ccizbp1a.s:8573   .text.process_keycode:0000000000000eac $d
     /tmp/ccizbp1a.s:8593   .text.process_keycode:0000000000000efc $t
     /tmp/ccizbp1a.s:8643   .text.process_keycode:0000000000000f28 $d
     /tmp/ccizbp1a.s:8675   .text.process_keycode:0000000000000f44 $t
     /tmp/ccizbp1a.s:8807   .text.process_keycode:0000000000000fa8 $d
     /tmp/ccizbp1a.s:8825   .text.process_keycode:0000000000000ff0 $t
     /tmp/ccizbp1a.s:9348   .text.process_keycode:0000000000001160 $d
     /tmp/ccizbp1a.s:9382   .text.process_keycode:00000000000011e8 $t
     /tmp/ccizbp1a.s:9568   .text.process_keycode:000000000000127c $d
     /tmp/ccizbp1a.s:9584   .text.process_keycode:0000000000001294 $t
     /tmp/ccizbp1a.s:9624   .text.process_keycode:00000000000012b4 $d
     /tmp/ccizbp1a.s:9659   .text.process_keycode:000000000000133c $t
     /tmp/ccizbp1a.s:10027  .text.process_keycode:000000000000142e $d
     /tmp/ccizbp1a.s:10268  .text.process_keycode:0000000000001540 $d
     /tmp/ccizbp1a.s:10284  .text.process_keycode:0000000000001560 $t
     /tmp/ccizbp1a.s:11133  .text.process_keycode:0000000000001890 $d
     /tmp/ccizbp1a.s:11147  .text.process_keycode:000000000000189c $t
     /tmp/ccizbp1a.s:11156  .text.process_keycode:00000000000018ac $d
     /tmp/ccizbp1a.s:11198  .text.process_keycode:0000000000001950 $t
     /tmp/ccizbp1a.s:11725  .text.process_keycode:0000000000001b10 $d
     /tmp/ccizbp1a.s:11736  .text.process_keycode_with_shift:0000000000000000 $t
     /tmp/ccizbp1a.s:11744  .text.process_keycode_with_shift:0000000000000000 process_keycode_with_shift
     /tmp/ccizbp1a.s:11820  .text.process_keycode_with_shift:000000000000002c $d
     /tmp/ccizbp1a.s:11830  .bss.was_paused.9653:0000000000000000 $d
     /tmp/ccizbp1a.s:11834  .bss.was_paused.9653:0000000000000000 was_paused.9653
     /tmp/ccizbp1a.s:11837  .rodata.alpha_arrows:0000000000000000 $d
     /tmp/ccizbp1a.s:11840  .rodata.alpha_arrows:0000000000000000 alpha_arrows
     /tmp/ccizbp1a.s:11843  .rodata.alpha_catalogue:0000000000000000 $d
     /tmp/ccizbp1a.s:11846  .rodata.alpha_catalogue:0000000000000000 alpha_catalogue
     /tmp/ccizbp1a.s:11850  .rodata.alpha_compares:0000000000000000 $d
     /tmp/ccizbp1a.s:11853  .rodata.alpha_compares:0000000000000000 alpha_compares
     /tmp/ccizbp1a.s:11856  .rodata.alpha_letters:0000000000000000 $d
     /tmp/ccizbp1a.s:11860  .rodata.alpha_letters:0000000000000000 alpha_letters
     /tmp/ccizbp1a.s:11866  .rodata.alpha_letters_lower:0000000000000000 $d
     /tmp/ccizbp1a.s:11870  .rodata.alpha_letters_lower:0000000000000000 alpha_letters_lower
     /tmp/ccizbp1a.s:11876  .rodata.alpha_subscripts:0000000000000000 $d
     /tmp/ccizbp1a.s:11879  .rodata.alpha_subscripts:0000000000000000 alpha_subscripts
     /tmp/ccizbp1a.s:11883  .rodata.alpha_symbols:0000000000000000 $d
     /tmp/ccizbp1a.s:11886  .rodata.alpha_symbols:0000000000000000 alpha_symbols
     /tmp/ccizbp1a.s:11889  .rodata.alphamap.9185:0000000000000000 $d
     /tmp/ccizbp1a.s:11893  .rodata.alphamap.9185:0000000000000000 alphamap.9185
     /tmp/ccizbp1a.s:11933  .rodata.amap.9176:0000000000000000 $d
     /tmp/ccizbp1a.s:11937  .rodata.amap.9176:0000000000000000 amap.9176
     /tmp/ccizbp1a.s:11951  .rodata.catalogue:0000000000000000 $d
     /tmp/ccizbp1a.s:11954  .rodata.catalogue:0000000000000000 catalogue
     /tmp/ccizbp1a.s:11963  .rodata.catalogue_sizes.9451:0000000000000000 $d
     /tmp/ccizbp1a.s:11967  .rodata.catalogue_sizes.9451:0000000000000000 catalogue_sizes.9451
     /tmp/ccizbp1a.s:11970  .rodata.catalogues.9459:0000000000000000 $d
ARM GAS  /tmp/ccizbp1a.s 			page 345


     /tmp/ccizbp1a.s:11974  .rodata.catalogues.9459:0000000000000000 catalogues.9459
     /tmp/ccizbp1a.s:12059  .rodata.cplx_catalogue:0000000000000000 cplx_catalogue
     /tmp/ccizbp1a.s:12513  .rodata.stats_catalogue:0000000000000000 stats_catalogue
     /tmp/ccizbp1a.s:12473  .rodata.prob_catalogue:0000000000000000 prob_catalogue
     /tmp/ccizbp1a.s:12076  .rodata.int_catalogue:0000000000000000 int_catalogue
     /tmp/ccizbp1a.s:12482  .rodata.prog_catalogue:0000000000000000 prog_catalogue
     /tmp/ccizbp1a.s:12492  .rodata.program_xfcn:0000000000000000 program_xfcn
     /tmp/ccizbp1a.s:12526  .rodata.test_catalogue:0000000000000000 test_catalogue
     /tmp/ccizbp1a.s:12122  .rodata.mode_catalogue:0000000000000000 mode_catalogue
     /tmp/ccizbp1a.s:12520  .rodata.sums_catalogue:0000000000000000 sums_catalogue
     /tmp/ccizbp1a.s:12115  .rodata.matrix_catalogue:0000000000000000 matrix_catalogue
     /tmp/ccizbp1a.s:11997  .rodata.cmap.9175:0000000000000000 $d
     /tmp/ccizbp1a.s:12001  .rodata.cmap.9175:0000000000000000 cmap.9175
     /tmp/ccizbp1a.s:12027  .rodata.conv_catalogue:0000000000000000 $d
     /tmp/ccizbp1a.s:12031  .rodata.conv_catalogue:0000000000000000 conv_catalogue
     /tmp/ccizbp1a.s:12038  .rodata.conv_mapping.9498:0000000000000000 $d
     /tmp/ccizbp1a.s:12042  .rodata.conv_mapping.9498:0000000000000000 conv_mapping.9498
     /tmp/ccizbp1a.s:12056  .rodata.cplx_catalogue:0000000000000000 $d
     /tmp/ccizbp1a.s:12063  .rodata.disp.9313:0000000000000000 $d
     /tmp/ccizbp1a.s:12067  .rodata.disp.9313:0000000000000000 disp.9313
     /tmp/ccizbp1a.s:12073  .rodata.int_catalogue:0000000000000000 $d
     /tmp/ccizbp1a.s:12083  .rodata.linear_key_map.9146:0000000000000000 $d
     /tmp/ccizbp1a.s:12087  .rodata.linear_key_map.9146:0000000000000000 linear_key_map.9146
     /tmp/ccizbp1a.s:12093  .rodata.linear_key_map.9150:0000000000000000 $d
     /tmp/ccizbp1a.s:12097  .rodata.linear_key_map.9150:0000000000000000 linear_key_map.9150
     /tmp/ccizbp1a.s:12103  .rodata.map.9162:0000000000000000 $d
     /tmp/ccizbp1a.s:12107  .rodata.map.9162:0000000000000000 map.9162
     /tmp/ccizbp1a.s:12112  .rodata.matrix_catalogue:0000000000000000 $d
     /tmp/ccizbp1a.s:12119  .rodata.mode_catalogue:0000000000000000 $d
     /tmp/ccizbp1a.s:12128  .rodata.op_map.9229:0000000000000000 $d
     /tmp/ccizbp1a.s:12132  .rodata.op_map.9229:0000000000000000 op_map.9229
     /tmp/ccizbp1a.s:12169  .rodata.op_map.9252:0000000000000000 $d
     /tmp/ccizbp1a.s:12173  .rodata.op_map.9252:0000000000000000 op_map.9252
     /tmp/ccizbp1a.s:12245  .rodata.op_map.9275:0000000000000000 $d
     /tmp/ccizbp1a.s:12249  .rodata.op_map.9275:0000000000000000 op_map.9275
     /tmp/ccizbp1a.s:12286  .rodata.op_map.9285:0000000000000000 $d
     /tmp/ccizbp1a.s:12290  .rodata.op_map.9285:0000000000000000 op_map.9285
     /tmp/ccizbp1a.s:12432  .rodata.op_map.9297:0000000000000000 $d
     /tmp/ccizbp1a.s:12436  .rodata.op_map.9297:0000000000000000 op_map.9297
     /tmp/ccizbp1a.s:12441  .rodata.op_map.9312:0000000000000000 $d
     /tmp/ccizbp1a.s:12445  .rodata.op_map.9312:0000000000000000 op_map.9312
     /tmp/ccizbp1a.s:12453  .rodata.op_map2.9253:0000000000000000 $d
     /tmp/ccizbp1a.s:12457  .rodata.op_map2.9253:0000000000000000 op_map2.9253
     /tmp/ccizbp1a.s:12463  .rodata.opcode_breaks:0000000000000000 $d
     /tmp/ccizbp1a.s:12467  .rodata.opcode_breaks:0000000000000000 opcode_breaks
     /tmp/ccizbp1a.s:12470  .rodata.prob_catalogue:0000000000000000 $d
     /tmp/ccizbp1a.s:12479  .rodata.prog_catalogue:0000000000000000 $d
     /tmp/ccizbp1a.s:12489  .rodata.program_xfcn:0000000000000000 $d
     /tmp/ccizbp1a.s:12503  .rodata.smap.9177:0000000000000000 $d
     /tmp/ccizbp1a.s:12507  .rodata.smap.9177:0000000000000000 smap.9177
     /tmp/ccizbp1a.s:12510  .rodata.stats_catalogue:0000000000000000 $d
     /tmp/ccizbp1a.s:12517  .rodata.sums_catalogue:0000000000000000 $d
     /tmp/ccizbp1a.s:12523  .rodata.test_catalogue:0000000000000000 $d
     /tmp/ccizbp1a.s:2100   .text.process_arg:0000000000000121 $d
     /tmp/ccizbp1a.s:2100   .text.process_arg:0000000000000122 $t
     /tmp/ccizbp1a.s:10068  .text.process_keycode:0000000000001457 $d
     /tmp/ccizbp1a.s:10068  .text.process_keycode:0000000000001458 $t
ARM GAS  /tmp/ccizbp1a.s 			page 346



UNDEFINED SYMBOLS
sizeLIB
main_ram
StateWhileOn
find_label_from
getprog
do_inc
PcWrapped
process_cmdline
shift_down
do_dec
is_bad_cmdline
argcmds
local_regs_rarg
num_arg_digits
global_regs_rarg
int_base
process_cmdline_set_lift
display
is_dblmode
IntMaxWindow
xset
update_program_bounds
set_lift
ShowRegister
remap_chars
catcmd
keyticks
xeq_init_contexts
is_dot
xeq
xeqprog
dot
finish_RPN
start_pause
clr_dot
xeq_xrom
set_running_off
Pause
JustStopped
Running
ShowRPN
JustDisplayed
DispMsg
is_key_pressed
xeq_sst_bst
prt
scopy_char
TraceBuffer
set_menu
display_current_menu
delprog
message
stoprog
clpall
clrprog
ARM GAS  /tmp/ccizbp1a.s 			page 347


reset
clrall
set_pc
find_char
set_last_menu
find_user_pc
cmdgtocommon
global_regs
local_regs
alen

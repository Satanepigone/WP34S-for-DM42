ARM GAS  /tmp/ccK8gYGY.s 			page 1


   1              		.arch armv7e-m
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"keys.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.gtodot_digit,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	gtodot_digit:
  27              	.LVL0:
  28              	.LFB30:
  29              		.file 1 "src/keys.c"
   1:src/keys.c    **** /* This file is part of 34S.
   2:src/keys.c    ****  * 
   3:src/keys.c    ****  * 34S is free software: you can redistribute it and/or modify
   4:src/keys.c    ****  * it under the terms of the GNU General Public License as published by
   5:src/keys.c    ****  * the Free Software Foundation, either version 3 of the License, or
   6:src/keys.c    ****  * (at your option) any later version.
   7:src/keys.c    ****  * 
   8:src/keys.c    ****  * 34S is distributed in the hope that it will be useful,
   9:src/keys.c    ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:src/keys.c    ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:src/keys.c    ****  * GNU General Public License for more details.
  12:src/keys.c    ****  * 
  13:src/keys.c    ****  * You should have received a copy of the GNU General Public License
  14:src/keys.c    ****  * along with 34S.  If not, see <http://www.gnu.org/licenses/>.
  15:src/keys.c    ****  */
  16:src/keys.c    **** 
  17:src/keys.c    **** 
  18:src/keys.c    **** #ifdef DM42
  19:src/keys.c    **** #include "dmcp.h"
  20:src/keys.c    **** #endif
  21:src/keys.c    **** 
  22:src/keys.c    **** #define DM42SAFE
  23:src/keys.c    **** 
  24:src/keys.c    **** #include "features.h"
  25:src/keys.c    **** #include "xeq.h"
  26:src/keys.c    **** #include "keys.h"
  27:src/keys.c    **** #include "display.h"
  28:src/keys.c    **** #include "lcd.h"
  29:src/keys.c    **** #include "int.h"
ARM GAS  /tmp/ccK8gYGY.s 			page 2


  30:src/keys.c    **** #include "consts.h"
  31:src/keys.c    **** #include "storage.h"
  32:src/keys.c    **** #include "stats.h"
  33:src/keys.c    **** #include "catalogues.h"
  34:src/keys.c    **** #ifndef DM42
  35:src/keys.c    **** #include "printer.h"
  36:src/keys.c    **** #endif
  37:src/keys.c    **** #ifdef INCLUDE_C_LOCK
  38:src/keys.c    **** #include "decn.h"
  39:src/keys.c    **** #endif
  40:src/keys.c    **** #undef DM42SAFE
  41:src/keys.c    **** 
  42:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
  43:src/keys.c    **** extern void changed_catalog_state();
  44:src/keys.c    **** #endif
  45:src/keys.c    **** 
  46:src/keys.c    **** #ifdef INCLUDE_C_LOCK
  47:src/keys.c    **** void finish_cpx_entry ( int );
  48:src/keys.c    **** void stack_begin ( int ); 
  49:src/keys.c    **** static int process_cmplx ( const keycode );
  50:src/keys.c    **** static void stack_restore ( void );
  51:src/keys.c    **** #endif
  52:src/keys.c    **** 
  53:src/keys.c    **** #define STATE_UNFINISHED	(OP_SPEC | OP_UNFINISHED)
  54:src/keys.c    **** #define STATE_BACKSPACE		(OP_SPEC | OP_BACKSPACE)
  55:src/keys.c    **** #define STATE_SST		(OP_SPEC | OP_SST)
  56:src/keys.c    **** #define STATE_BST		(OP_SPEC | OP_BST)
  57:src/keys.c    **** #define STATE_RUNNING		(OP_SPEC | OP_RUNNING)
  58:src/keys.c    **** #define STATE_IGNORE		(OP_SPEC | OP_IGNORE)
  59:src/keys.c    **** #define STATE_WINDOWLEFT	(OP_SPEC | OP_WINDOWLEFT)
  60:src/keys.c    **** #define STATE_WINDOWRIGHT	(OP_SPEC | OP_WINDOWRIGHT)
  61:src/keys.c    **** //#define STATE_SHOW		(OP_SPEC | OP_SHOW)
  62:src/keys.c    **** 
  63:src/keys.c    **** /* Define this if the key codes map rows sequentially */
  64:src/keys.c    **** 
  65:src/keys.c    **** #define TEST_EQ		0
  66:src/keys.c    **** #define TEST_NE		1
  67:src/keys.c    **** #define TEST_LT		2
  68:src/keys.c    **** #define TEST_LE		3
  69:src/keys.c    **** #define TEST_GT		4
  70:src/keys.c    **** #define TEST_GE		5
  71:src/keys.c    **** 
  72:src/keys.c    **** enum confirmations {
  73:src/keys.c    **** 	// Apart from the first of these, these must be in the same
  74:src/keys.c    **** 	// order as the opcodes in xeq.h: OP_CLALL, OP_RESET, OP_CLPROG, OP_CLPALL
  75:src/keys.c    **** 	confirm_none=0, confirm_clall, confirm_reset, confirm_clprog, confirm_clpall
  76:src/keys.c    **** };
  77:src/keys.c    **** 
  78:src/keys.c    **** FLAG WasDataEntry;
  79:src/keys.c    **** 
  80:src/keys.c    **** /* Local data to this module */
  81:src/keys.c    **** unsigned int OpCode;
  82:src/keys.c    **** FLAG OpCodeDisplayPending;
  83:src/keys.c    **** FLAG GoFast;
  84:src/keys.c    **** FLAG NonProgrammable;
  85:src/keys.c    **** 
  86:src/keys.c    **** /*
ARM GAS  /tmp/ccK8gYGY.s 			page 3


  87:src/keys.c    ****  *  Needed before definition
  88:src/keys.c    ****  */ 
  89:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end);
  90:src/keys.c    **** 
  91:src/keys.c    **** unsigned int nd_opcode;
  92:src/keys.c    **** 
  93:src/keys.c    **** /*
  94:src/keys.c    ****  *  Return the shift state
  95:src/keys.c    ****  */
  96:src/keys.c    **** enum shifts cur_shift(void) {
  97:src/keys.c    **** 	enum shifts s = shift_down();
  98:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
  99:src/keys.c    **** }
 100:src/keys.c    **** 
 101:src/keys.c    **** /*
 102:src/keys.c    ****  *  Set new shift state, return previous state
 103:src/keys.c    ****  */
 104:src/keys.c    **** static enum shifts set_shift(enum shifts shift) {
 105:src/keys.c    **** 	enum shifts r = cur_shift();
 106:src/keys.c    **** 	State2.shifts = shift;
 107:src/keys.c    **** 	//	State2.alpha_pos = 0;
 108:src/keys.c    **** 	return r;
 109:src/keys.c    **** }
 110:src/keys.c    **** 
 111:src/keys.c    **** /*
 112:src/keys.c    ****  *  Clear shift state and return previous state
 113:src/keys.c    ****  */
 114:src/keys.c    **** enum shifts reset_shift(void) {
 115:src/keys.c    **** 	return set_shift(SHIFT_N);
 116:src/keys.c    **** }
 117:src/keys.c    **** 
 118:src/keys.c    **** /*
 119:src/keys.c    ****  *  Toggle shift state
 120:src/keys.c    ****  */
 121:src/keys.c    **** static void toggle_shift(enum shifts shift) {
 122:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 123:src/keys.c    **** }
 124:src/keys.c    **** 
 125:src/keys.c    **** 
 126:src/keys.c    **** /*
 127:src/keys.c    ****  * Mapping from the key code to a linear index
 128:src/keys.c    ****  * The trick is to move the shifts and the holes in the map out of the way
 129:src/keys.c    ****  */
 130:src/keys.c    **** #ifdef DM42
 131:src/keys.c    **** static int keycode_to_linear_for_alpha(const keycode c)
 132:src/keys.c    **** {
 133:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 134:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 135:src/keys.c    **** 		 6,  7,  8,  9, 10, 11,   // K10 - K15
 136:src/keys.c    **** 		 12, 13, 14, 15, 16,  0,   // K20 - K24
 137:src/keys.c    **** 		17, 18, 19, 20, 21,  0,   // K30 - K34
 138:src/keys.c    **** 		22, 23, 24, 25, 26,  0,   // K40 - K44
 139:src/keys.c    **** 		27, 28, 29, 30, 31,  0,   // K50 - K54
 140:src/keys.c    **** 		32, 33, 34, 35, 36,       // K60 - K64
 141:src/keys.c    **** 		37, 37, 37, 37, 37, 37       // K_F, G, H, ARROW, CMPLX, NOP
 142:src/keys.c    **** 	};
 143:src/keys.c    **** 	return linear_key_map[c];
ARM GAS  /tmp/ccK8gYGY.s 			page 4


 144:src/keys.c    **** }
 145:src/keys.c    **** 
 146:src/keys.c    **** static int keycode_to_linear(const keycode c)
 147:src/keys.c    **** {
 148:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 149:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 150:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 151:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 152:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 153:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 154:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 155:src/keys.c    **** 		29, 30, 31, 32, 33,       // K60 - K64
 156:src/keys.c    **** 		34, 34, 34,  4,  5, 34,        // K_F, G, H, ARROW, CMPLX, NOP
 157:src/keys.c    **** 	};
 158:src/keys.c    **** 	return linear_key_map[c];
 159:src/keys.c    **** }
 160:src/keys.c    **** #else
 161:src/keys.c    **** static int keycode_to_linear(const keycode c)
 162:src/keys.c    **** {
 163:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 ] = {
 164:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 165:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 166:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 167:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 168:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 169:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 170:src/keys.c    **** 		29, 30, 31, 32, 33        // K60 - K64
 171:src/keys.c    **** 	};
 172:src/keys.c    **** 	return linear_key_map[c];
 173:src/keys.c    **** }
 174:src/keys.c    **** #endif
 175:src/keys.c    **** /*
 176:src/keys.c    ****  * Mapping from the key code to a row column code ('A'=11 to '+'=75)
 177:src/keys.c    ****  * Used in KEY? and for shorthand addressing
 178:src/keys.c    ****  */
 179:src/keys.c    **** int keycode_to_row_column(const int c)
 180:src/keys.c    **** {
 181:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 182:src/keys.c    **** }
 183:src/keys.c    **** 
 184:src/keys.c    **** /*
 185:src/keys.c    ****  * Mapping from a row column code ('A'=11 to '+'=75) to the key code
 186:src/keys.c    ****  * Used in PUTK and KTYPE.
 187:src/keys.c    ****  */
 188:src/keys.c    **** 
 189:src/keys.c    **** int row_column_to_keycode(const int c)
 190:src/keys.c    **** {
 191:src/keys.c    **** 	int row = c / 10 - 1;
 192:src/keys.c    **** 	int col = c % 10 - 1;
 193:src/keys.c    **** 
 194:src/keys.c    **** 	if (row < 0 || row > 6 || col > 5 - (row >= 2))
 195:src/keys.c    **** 		return -1;
 196:src/keys.c    **** 	return row * 6 + col;
 197:src/keys.c    **** }
 198:src/keys.c    **** 
 199:src/keys.c    **** /*
 200:src/keys.c    ****  *  Mapping from a key code to a digit from 0 to 9 or to a register address
ARM GAS  /tmp/ccK8gYGY.s 			page 5


 201:src/keys.c    ****  *  Bit seven is set if the key cannot be used as a label shortcut
 202:src/keys.c    ****  */
 203:src/keys.c    **** // Decision to make here about whether the top row can be used as shortcuts.
 204:src/keys.c    **** // Also, which other keys can / can't be used as shortcuts?
 205:src/keys.c    **** // Registers I, j, K, L will move with the new alpha layout.
 206:src/keys.c    **** 
 207:src/keys.c    **** #define NO_REG 0x7f
 208:src/keys.c    **** #define NO_SHORT 0x80
 209:src/keys.c    **** #ifdef DM42
 210:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 211:src/keys.c    **** {
 212:src/keys.c    ****   static const unsigned char map[] = {
 213:src/keys.c    ****     // K00 - K05
 214:src/keys.c    ****     NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 215:src/keys.c    ****     NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 216:src/keys.c    ****     NO_SHORT | NO_REG,   NO_REG,
 217:src/keys.c    ****     // K10 - K15
 218:src/keys.c    ****     NO_REG, NO_REG, regI_idx, regJ_idx, regK_idx, regL_idx, 
 219:src/keys.c    ****     // K20 - K24
 220:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 221:src/keys.c    ****     // K30 - K34
 222:src/keys.c    ****     NO_REG, 7, 8, 9, NO_REG,
 223:src/keys.c    ****     // K40 - K44
 224:src/keys.c    ****     NO_REG, NO_SHORT | regT_idx, 5, 6, NO_REG,
 225:src/keys.c    ****     // K50 - K54
 226:src/keys.c    ****     NO_REG, NO_SHORT | regX_idx, NO_SHORT | regY_idx, NO_SHORT | regZ_idx, NO_REG,
 227:src/keys.c    ****     // K60 - K64
 228:src/keys.c    ****     NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE, NO_REG, NO_REG,
 229:src/keys.c    ****     // Shifts etc. - K_F, K_G, K_H, K_ARROW, K_CMPLX. K_NOP
 230:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 231:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, 
 232:src/keys.c    ****   };
 233:src/keys.c    **** 
 234:src/keys.c    ****   return (unsigned int) map[keycode_to_linear_for_alpha(c)];
 235:src/keys.c    **** }
 236:src/keys.c    **** #else
 237:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 238:src/keys.c    **** {
 239:src/keys.c    ****   static const unsigned char map[] = {
 240:src/keys.c    **** 		// K00 - K05
 241:src/keys.c    **** 		NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 242:src/keys.c    **** 		NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 243:src/keys.c    **** 		NO_SHORT | NO_REG,   NO_REG,
 244:src/keys.c    **** 		// K10 - K12
 245:src/keys.c    **** 		NO_REG, NO_REG, regI_idx, 
 246:src/keys.c    **** 		// K20 - K24
 247:src/keys.c    **** 		NO_SHORT | NO_REG, regJ_idx, regK_idx, regL_idx, NO_SHORT | NO_REG,
 248:src/keys.c    **** 		// K30 - K34
 249:src/keys.c    **** 		NO_REG, 7, 8, 9, NO_REG,
 250:src/keys.c    **** 		// K40 - K44
 251:src/keys.c    **** 		NO_REG, 4, 5, 6, regT_idx,
 252:src/keys.c    **** 		// K50 - K54
 253:src/keys.c    **** 		NO_REG, 1, 2, 3, NO_REG,
 254:src/keys.c    **** 		// K60 - K63
 255:src/keys.c    **** 		NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE,
 256:src/keys.c    **** 		regY_idx, regZ_idx,
 257:src/keys.c    **** 		// Shifts, etc
ARM GAS  /tmp/ccK8gYGY.s 			page 6


 258:src/keys.c    **** 		NO_REG
 259:src/keys.c    **** 	};
 260:src/keys.c    **** 
 261:src/keys.c    **** 	return (unsigned int) map[keycode_to_linear(c)];
 262:src/keys.c    **** }
 263:src/keys.c    **** #endif
 264:src/keys.c    **** /*
 265:src/keys.c    ****  *  Mapping of a keycode and shift state to a catalogue number
 266:src/keys.c    ****  */
 267:src/keys.c    **** static enum catalogues keycode_to_cat(const keycode c, enum shifts shift)
 268:src/keys.c    **** {
 269:src/keys.c    ****   enum catalogues cat = CATALOGUE_NONE;
 270:src/keys.c    ****   int i, col, max;
 271:src/keys.c    ****   const struct _map {
 272:src/keys.c    ****     unsigned char key, cat[3];
 273:src/keys.c    ****   } *cp;
 274:src/keys.c    **** 
 275:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 276:src/keys.c    **** 	if (C_LOCKED) { // Limited set of catalogues available in complex lock mode - all listed here
 277:src/keys.c    **** 		if (shift == SHIFT_H) {
 278:src/keys.c    **** 			switch (c) {
 279:src/keys.c    **** 				case K53:
 280:src/keys.c    **** 					return CATALOGUE_COMPLEX;
 281:src/keys.c    **** 				case K04:
 282:src/keys.c    **** 					return CATALOGUE_CONV;
 283:src/keys.c    **** 				case K05:
 284:src/keys.c    **** 					return CATALOGUE_MODE;
 285:src/keys.c    **** 				case K20:
 286:src/keys.c    **** 					if ( (REAL_FLAG || IMAG_FLAG) ) { // number being entered
 287:src/keys.c    **** 						finish_cpx_entry(1);
 288:src/keys.c    **** 					}
 289:src/keys.c    **** 					return CATALOGUE_COMPLEX_CONST;
 290:src/keys.c    **** 				default:
 291:src/keys.c    **** 					return CATALOGUE_NONE;
 292:src/keys.c    **** 			}
 293:src/keys.c    **** 		}
 294:src/keys.c    **** 		if ( (shift == SHIFT_G) && (c == K60) )
 295:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 296:src/keys.c    **** 		if ( (shift == SHIFT_F) && (c == K20) ) {
 297:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 298:src/keys.c    **** 				SET_REAL;
 299:src/keys.c    **** 				stack_begin (1);
 300:src/keys.c    **** 			}
 301:src/keys.c    **** 			else if (CmdLineLength) {
 302:src/keys.c    **** 				CmdLineLength = 0;
 303:src/keys.c    **** 				CmdLineEex = 0;
 304:src/keys.c    **** 				CmdLineDot = 0;
 305:src/keys.c    **** 			}
 306:src/keys.c    **** 			return CATALOGUE_CONST;
 307:src/keys.c    **** 		}
 308:src/keys.c    **** 		return CATALOGUE_NONE;
 309:src/keys.c    **** 	}
 310:src/keys.c    **** #endif
 311:src/keys.c    ****   // Common to both alpha mode and normal mode is the programming X.FCN catalogue
 312:src/keys.c    ****   if (c == K53 && shift == SHIFT_H && ! State2.runmode && ! State2.cmplx && ! State2.multi)
 313:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 314:src/keys.c    **** 
ARM GAS  /tmp/ccK8gYGY.s 			page 7


 315:src/keys.c    ****   if (! State2.alphas && ! State2.multi) {
 316:src/keys.c    ****     /*
 317:src/keys.c    ****      *  Normal processing - Not alpha mode
 318:src/keys.c    ****      */
 319:src/keys.c    ****     static const struct _map cmap[] = {
 320:src/keys.c    **** #ifdef DM42
 321:src/keys.c    ****       { K04, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 322:src/keys.c    **** #else
 323:src/keys.c    ****       { K_ARROW, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 324:src/keys.c    **** #endif
 325:src/keys.c    ****       { K05,     { CATALOGUE_MODE,      CATALOGUE_MODE,      CATALOGUE_MODE          } },
 326:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
 327:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_USER          } },
 328:src/keys.c    **** #else
 329:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_LABELS        } },
 330:src/keys.c    **** #endif
 331:src/keys.c    ****       { K20,     { CATALOGUE_CONST,     CATALOGUE_NONE,      CATALOGUE_COMPLEX_CONST } },
 332:src/keys.c    ****       { K41,     { CATALOGUE_PROB,      CATALOGUE_NONE,      CATALOGUE_PROB          } },
 333:src/keys.c    ****       { K42,     { CATALOGUE_STATS,     CATALOGUE_NONE,      CATALOGUE_STATS         } },
 334:src/keys.c    ****       { K43,     { CATALOGUE_SUMS,      CATALOGUE_NONE,      CATALOGUE_SUMS          } },
 335:src/keys.c    ****       { K44,     { CATALOGUE_MATRIX,    CATALOGUE_NONE,      CATALOGUE_MATRIX        } },
 336:src/keys.c    ****       { K50,     { CATALOGUE_STATUS,    CATALOGUE_STATUS,    CATALOGUE_STATUS        } },
 337:src/keys.c    ****       { K51,     { CATALOGUE_TEST,      CATALOGUE_TEST,      CATALOGUE_TEST          } },
 338:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
 339:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_INTERNAL      } },
 340:src/keys.c    **** #else
 341:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_PROG          } },
 342:src/keys.c    **** #endif
 343:src/keys.c    ****       { K53,     { CATALOGUE_NORMAL,    CATALOGUE_INT,       CATALOGUE_COMPLEX       } },
 344:src/keys.c    ****     };
 345:src/keys.c    **** 
 346:src/keys.c    ****     if (c == K60 && shift == SHIFT_G) {
 347:src/keys.c    ****       /*
 348:src/keys.c    ****        *  SHOW starts register browser
 349:src/keys.c    ****        */
 350:src/keys.c    ****       return CATALOGUE_REGISTERS;
 351:src/keys.c    ****     }
 352:src/keys.c    **** #if 0
 353:src/keys.c    ****     // conflicts with c# 002 and c# 003
 354:src/keys.c    ****     if ((c == K52 || c == K53) && shift == SHIFT_N && State2.cmplx && State2.catalogue == CATALOGUE
 355:src/keys.c    ****       /*
 356:src/keys.c    ****        *  Shorthand to complex P.FCN & X.FCN - h may be omitted
 357:src/keys.c    ****        */
 358:src/keys.c    ****       shift = SHIFT_H;
 359:src/keys.c    ****     }
 360:src/keys.c    **** #endif
 361:src/keys.c    ****     if (shift != SHIFT_H) {
 362:src/keys.c    ****       /*
 363:src/keys.c    ****        *  All standard catalogues are on h-shifted keys
 364:src/keys.c    ****        */
 365:src/keys.c    ****       return CATALOGUE_NONE;
 366:src/keys.c    ****     }
 367:src/keys.c    **** 
 368:src/keys.c    ****     /*
 369:src/keys.c    ****      *  Prepare search
 370:src/keys.c    ****      */
 371:src/keys.c    ****     cp = cmap;
ARM GAS  /tmp/ccK8gYGY.s 			page 8


 372:src/keys.c    **** #ifndef WINGUI
 373:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx || shift_down() == SHIFT_H ? 2 : 0;
 374:src/keys.c    **** #else
 375:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx ? 2 : 0;
 376:src/keys.c    **** #endif
 377:src/keys.c    ****     max = sizeof(cmap) / sizeof(cmap[0]);
 378:src/keys.c    ****   }
 379:src/keys.c    ****   else {
 380:src/keys.c    ****     /*
 381:src/keys.c    ****      *  All the alpha catalogues go here
 382:src/keys.c    ****      */
 383:src/keys.c    **** #ifdef DM42
 384:src/keys.c    ****     static const struct _map amap[] = {
 385:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 386:src/keys.c    ****       { K05, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 387:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 388:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 389:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 390:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 391:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 392:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 393:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 394:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 395:src/keys.c    ****     };
 396:src/keys.c    **** #else
 397:src/keys.c    ****     static const struct _map amap[] = {
 398:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 399:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 400:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 401:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 402:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 403:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 404:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 405:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 406:src/keys.c    ****     };
 407:src/keys.c    **** #endif
 408:src/keys.c    ****     static const char smap[] = { 0, 1, 0, 2 }; // Map shifts to columns;
 409:src/keys.c    **** 
 410:src/keys.c    ****     /*
 411:src/keys.c    ****      *  Prepare search
 412:src/keys.c    ****      */
 413:src/keys.c    ****     cp = amap;
 414:src/keys.c    ****     col = smap[shift];
 415:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 416:src/keys.c    ****   }
 417:src/keys.c    **** 
 418:src/keys.c    ****   /*
 419:src/keys.c    ****    *  Search the key in one of the tables
 420:src/keys.c    ****    */
 421:src/keys.c    ****   for (i = 0; i < max; ++i, ++cp) {
 422:src/keys.c    ****     if (cp->key == c) {
 423:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 424:src/keys.c    ****       break;
 425:src/keys.c    ****     }
 426:src/keys.c    ****   }
 427:src/keys.c    ****   if (State2.multi && (cat < CATALOGUE_ALPHA_SYMBOLS || cat > CATALOGUE_ALPHA_SUBSCRIPTS)) {
 428:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
ARM GAS  /tmp/ccK8gYGY.s 			page 9


 429:src/keys.c    ****     cat = CATALOGUE_NONE;
 430:src/keys.c    ****   }
 431:src/keys.c    ****   return cat;
 432:src/keys.c    **** }
 433:src/keys.c    **** 
 434:src/keys.c    **** #ifdef DM42
 435:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 436:src/keys.c    **** {
 437:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 438:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 439:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 440:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 441:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 442:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 443:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 444:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 445:src/keys.c    **** 
 446:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 447:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 448:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 449:src/keys.c    **** 		{ 'J',  0257, 0000, 0000, 'j',  0000,  },  // K13
 450:src/keys.c    **** 		{ 'K',  0000, 'K',  0000, 'k',  0251,  },  // K14
 451:src/keys.c    **** 		{ 'L',  0000, 0212, 0000, 'l',  0252,  },  // K15
 452:src/keys.c    **** 
 453:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 454:src/keys.c    **** 		{ 'M',  0000, 0253, 0027, 'm',  0253,  },  // K21
 455:src/keys.c    **** 		{ 'N',  0010, 'N',  0225, 'n',  0254,  },  // K22
 456:src/keys.c    **** 		{ 'O',  0000, 0227, 0257, 'o',  0267,  },  // K23
 457:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 458:src/keys.c    **** 
 459:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 460:src/keys.c    **** 		{ 'P',  '7',  0217, '&',  'p',  0257,  },  // K31
 461:src/keys.c    **** 		{ 'Q',  '8',  0000, '|',  'q',  0000,  },  // K32
 462:src/keys.c    **** 		{ 'R',  '9',  'R',  0013, 'r',  0260,  },  // K33
 463:src/keys.c    **** 		{ 'S',  '/',  0221, '\\', 's',  0261,  },  // K34
 464:src/keys.c    **** 
 465:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 466:src/keys.c    **** 		{ 'T',  '4',  'T',  0000, 't',  0262,  },  // K41
 467:src/keys.c    **** 		{ 'U',  '5',  0000, 0000, 'u',  0000,  },  // K42
 468:src/keys.c    **** 		{ 'V',  '6',  0000, 0000, 'v',  0000,  },  // K43
 469:src/keys.c    **** 		{ 'W', 0034,  0000, 0000, 'w',  0000,  },  // K44
 470:src/keys.c    **** 
 471:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 472:src/keys.c    **** 		{ 'X',  '1',  0215, 0000, 'x',  0255,  },  // K51
 473:src/keys.c    **** 		{ 'Y',  '2',  'Y',  0000, 'y',  0263,  },  // K52
 474:src/keys.c    **** 		{ 'Z',  '3',  'Z',  0000, 'z',  0245,  },  // K53
 475:src/keys.c    **** 		{ '-',  '(',  ')',  0000, 0000, 0000,  },  // K54
 476:src/keys.c    **** 
 477:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K60
 478:src/keys.c    **** 		{ ':',  '0',  0207, ' ',  ';',  0247,  },  // K61
 479:src/keys.c    **** 		{ '.',  '.',  0226, 0000, '.',  0266,  },  // K62
 480:src/keys.c    **** 		{ '?',  0000, 0041, 0000, '?',  0000,  },  // K63
 481:src/keys.c    **** 		{ ' ',  '+',  '=',  0000, ' ',  ' ',   },  // K64
 482:src/keys.c    **** 
 483:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // shifts etc.
 484:src/keys.c    **** 	};
 485:src/keys.c    **** 	if (State2.alphashift) {
ARM GAS  /tmp/ccK8gYGY.s 			page 10


 486:src/keys.c    **** 		if (shift == SHIFT_N)
 487:src/keys.c    **** 			shift = SHIFT_LC_N;
 488:src/keys.c    **** 		else if (shift == SHIFT_G)
 489:src/keys.c    **** 			shift = SHIFT_LC_G;
 490:src/keys.c    **** 	}
 491:src/keys.c    **** 	return alphamap[keycode_to_linear_for_alpha(c)][shift];
 492:src/keys.c    **** }
 493:src/keys.c    **** #else
 494:src/keys.c    **** /*
 495:src/keys.c    ****  * Mapping from key position to alpha in the four key planes plus
 496:src/keys.c    ****  * the two lower case planes.
 497:src/keys.c    ****  */
 498:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 499:src/keys.c    **** {
 500:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 501:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 502:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 503:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 504:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 505:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 506:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 507:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 508:src/keys.c    **** 
 509:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 510:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 511:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 512:src/keys.c    **** 
 513:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 514:src/keys.c    **** 		{ 'J',  '(',  ')',  0027, 'j',  ')',   },  // K21
 515:src/keys.c    **** 		{ 'K',  0010, 'K',  0225, 'k',  0251,  },  // K22
 516:src/keys.c    **** 		{ 'L',  0000, 0212, 0257, 'l',  0252,  },  // K23
 517:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 518:src/keys.c    **** 
 519:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 520:src/keys.c    **** 		{ 'M',  '7',  'M',  '&',  'm',  0253,  },  // K31
 521:src/keys.c    **** 		{ 'N',  '8',  'N',  '|',  'n',  0254,  },  // K32
 522:src/keys.c    **** 		{ 'O',  '9',  0227, 0013, 'o',  0267,  },  // K33
 523:src/keys.c    **** 		{ 'P',  '/',  0217, '\\', 'p',  0257,  },  // K34
 524:src/keys.c    **** 
 525:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 526:src/keys.c    **** 		{ 'Q',  '4',  0000, 0000, 'q',  0000,  },  // K41
 527:src/keys.c    **** 		{ 'R',  '5',  'R',  0000, 'r',  0260,  },  // K42
 528:src/keys.c    **** 		{ 'S',  '6',  0221, 0000, 's',  0261,  },  // K43
 529:src/keys.c    **** 		{ 'T',  0034, 'T',  0000, 't',  0262,  },  // K44
 530:src/keys.c    **** 
 531:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 532:src/keys.c    **** 		{ '1',  '1',  0207, 0000, '1',  0247,  },  // K51
 533:src/keys.c    **** 		{ 'U',  '2',  0000, 0000, 'u',  0000,  },  // K52
 534:src/keys.c    **** 		{ 'V',  '3',  0000, 0000, 'v',  0000,  },  // K53
 535:src/keys.c    **** 		{ 'W',  0034, 0000, 0000, 'w',  0000,  },  // K54
 536:src/keys.c    **** 
 537:src/keys.c    **** 		{ 0000, 0222, 0000, 0000, 0000, 0000,  },  // K60
 538:src/keys.c    **** 		{ '0',  '0',  0226, ' ',  '0',  0266,  },  // K61
 539:src/keys.c    **** 		{ 'X',  '.',  0215, 0000, 'x',  0255,  },  // K62
 540:src/keys.c    **** 		{ 'Y',  0000, 'Y',  0000, 'y',  0263,  },  // K63
 541:src/keys.c    **** 		{ 'Z',  '+',  'Z',  0000, 'z',  0245,  },  // K64
 542:src/keys.c    **** 	};
ARM GAS  /tmp/ccK8gYGY.s 			page 11


 543:src/keys.c    **** 	if (State2.alphashift) {
 544:src/keys.c    **** 		if (shift == SHIFT_N)
 545:src/keys.c    **** 			shift = SHIFT_LC_N;
 546:src/keys.c    **** 		else if (shift == SHIFT_G)
 547:src/keys.c    **** 			shift = SHIFT_LC_G;
 548:src/keys.c    **** 	}
 549:src/keys.c    **** 	return alphamap[keycode_to_linear(c)][shift];
 550:src/keys.c    **** }
 551:src/keys.c    **** #endif
 552:src/keys.c    **** static void init_arg(const enum rarg base) {
 553:src/keys.c    **** 	if (is_bad_cmdline())
 554:src/keys.c    **** 		return;
 555:src/keys.c    **** 	CmdBase = base;
 556:src/keys.c    **** 	State2.ind = 0;
 557:src/keys.c    **** 	State2.digval = 0;
 558:src/keys.c    **** 	State2.numdigit = 0;
 559:src/keys.c    **** 	State2.rarg = 1;
 560:src/keys.c    **** 	State2.dot = 0;
 561:src/keys.c    **** 	State2.local = 0;
 562:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 563:src/keys.c    **** }
 564:src/keys.c    **** 
 565:src/keys.c    **** static void init_cat(enum catalogues cat) {
 566:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 567:src/keys.c    **** 		// Save last catalogue for a later restore
 568:src/keys.c    **** 		State.last_cat = State2.catalogue;
 569:src/keys.c    **** 		CmdLineLength = 0;
 570:src/keys.c    **** 	}
 571:src/keys.c    **** 	process_cmdline();
 572:src/keys.c    **** 
 573:src/keys.c    **** 	State2.labellist = 0;
 574:src/keys.c    **** 	State2.registerlist = 0;
 575:src/keys.c    **** 	State2.status = 0;
 576:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 577:src/keys.c    **** 
 578:src/keys.c    **** 	switch (cat) {
 579:src/keys.c    **** 	case CATALOGUE_LABELS:
 580:src/keys.c    **** 		// Label browser
 581:src/keys.c    **** 		State2.labellist = 1;
 582:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 583:src/keys.c    **** 		break;
 584:src/keys.c    **** 	
 585:src/keys.c    **** 	case CATALOGUE_REGISTERS:
 586:src/keys.c    **** 		// Register browser
 587:src/keys.c    **** 		State2.registerlist = 1;
 588:src/keys.c    **** 		State2.digval = regX_idx;
 589:src/keys.c    **** 		State2.digval2 = 0;
 590:src/keys.c    **** 		break;
 591:src/keys.c    **** 
 592:src/keys.c    **** 	case CATALOGUE_STATUS:
 593:src/keys.c    **** 		// Flag browser
 594:src/keys.c    **** 		State2.status = 1;
 595:src/keys.c    **** 		break;
 596:src/keys.c    **** 
 597:src/keys.c    **** 	default:
 598:src/keys.c    **** 		// Normal catalogue
 599:src/keys.c    **** 		State2.catalogue = cat;
ARM GAS  /tmp/ccK8gYGY.s 			page 12


 600:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 601:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 602:src/keys.c    **** 			// Different catalogue, reset position
 603:src/keys.c    **** 			State.catpos = 0;
 604:src/keys.c    **** 		}
 605:src/keys.c    **** 	}
 606:src/keys.c    **** 	reset_shift();
 607:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 608:src/keys.c    **** 	changed_catalog_state();
 609:src/keys.c    **** #endif
 610:src/keys.c    **** }
 611:src/keys.c    **** 
 612:src/keys.c    **** /*
 613:src/keys.c    ****  *  Reset the internal state to a sane default
 614:src/keys.c    ****  */
 615:src/keys.c    **** void init_state(void) {
 616:src/keys.c    **** #ifndef REALBUILD
 617:src/keys.c    **** 	unsigned int a = State2.flags;
 618:src/keys.c    **** 	unsigned int b = State2.trace;
 619:src/keys.c    **** #else
 620:src/keys.c    **** 	FLAG t = TestFlag;
 621:src/keys.c    **** #endif
 622:src/keys.c    **** 	int v = Voltage;
 623:src/keys.c    **** 	int k = LastKey;
 624:src/keys.c    **** 
 625:src/keys.c    **** 	CmdBase = 0;
 626:src/keys.c    **** 	// Removed: will clear any locals on power off
 627:src/keys.c    **** 	// clrretstk(0);
 628:src/keys.c    **** 
 629:src/keys.c    **** 	xset(&State2, 0, sizeof(State2));
 630:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 631:src/keys.c    **** 
 632:src/keys.c    **** #ifdef DEFAULT_TO_SSIZE8 							//JM3
 633:src/keys.c    **** 	INIT_8; 								//JM3
 634:src/keys.c    **** 	UState.stack_depth = 1; // set stack size to 8 	//JM3
 635:src/keys.c    **** #endif  									//JM3
 636:src/keys.c    **** 
 637:src/keys.c    **** #ifdef DEFAULT_DATE_YMD			//JM5
 638:src/keys.c    **** 	UState.date_mode = 1;		//JM5
 639:src/keys.c    **** #endif							//JM5
 640:src/keys.c    **** 
 641:src/keys.c    **** #ifdef DEFAULT_DATE_MDY			//JM5
 642:src/keys.c    **** 	UState.date_mode = 2;		//JM5
 643:src/keys.c    **** #endif							//JM5
 644:src/keys.c    **** 
 645:src/keys.c    **** #ifdef YREG_ON_BY_DEFAULT
 646:src/keys.c    **** 	UState.show_y = 1;
 647:src/keys.c    **** #endif
 648:src/keys.c    **** 
 649:src/keys.c    **** #ifdef DEFAULT_TO_J
 650:src/keys.c    **** 	SET_CPX_J;
 651:src/keys.c    **** #endif
 652:src/keys.c    **** 
 653:src/keys.c    **** #ifdef DEFAULT_TO_CPX_YES
 654:src/keys.c    **** 	cpx_nop(OP_CYES);
 655:src/keys.c    **** #endif
 656:src/keys.c    **** 
ARM GAS  /tmp/ccK8gYGY.s 			page 13


 657:src/keys.c    **** #ifdef DEFAULT_TO_C_LOCK
 658:src/keys.c    **** 	cpx_nop(OP_CYES);
 659:src/keys.c    **** 	cpx_nop(OP_C_ON);
 660:src/keys.c    **** #endif
 661:src/keys.c    **** 
 662:src/keys.c    **** #ifdef ENTRY_RPN
 663:src/keys.c    **** 
 664:src/keys.c    **** #ifdef DEFAULT_TO_ENTRY_RPN
 665:src/keys.c    **** 	ENTRY_RPN_ON;
 666:src/keys.c    **** #else
 667:src/keys.c    **** 	ENTRY_RPN_OFF;
 668:src/keys.c    **** #endif
 669:src/keys.c    **** 
 670:src/keys.c    **** #endif
 671:src/keys.c    **** 	
 672:src/keys.c    **** #endif
 673:src/keys.c    **** 
 674:src/keys.c    **** 	State2.test = TST_NONE;
 675:src/keys.c    **** 	State2.runmode = 1;
 676:src/keys.c    **** 	update_program_bounds(1);
 677:src/keys.c    **** 	set_lift();
 678:src/keys.c    **** 
 679:src/keys.c    **** 	// Restore stuff that has been moved to State2 for space reasons
 680:src/keys.c    **** 	// but must not be cleared.
 681:src/keys.c    **** 	Voltage = v;
 682:src/keys.c    **** 	LastKey = k;
 683:src/keys.c    **** #ifndef REALBUILD
 684:src/keys.c    **** 	State2.trace = b;
 685:src/keys.c    **** 	State2.flags = a;
 686:src/keys.c    **** #else
 687:src/keys.c    **** 	TestFlag = t;
 688:src/keys.c    **** #endif
 689:src/keys.c    **** 	ShowRegister = regX_idx;
 690:src/keys.c    **** }
 691:src/keys.c    **** 
 692:src/keys.c    **** void soft_init_state(void) {
 693:src/keys.c    **** 	int soft;
 694:src/keys.c    **** 	unsigned int runmode;
 695:src/keys.c    **** 	unsigned int alphas;
 696:src/keys.c    **** 
 697:src/keys.c    **** 	if (CmdLineLength) {
 698:src/keys.c    **** 		CmdLineLength = 0;
 699:src/keys.c    **** 		CmdLineEex = 0;
 700:src/keys.c    **** 		CmdLineDot = 0;
 701:src/keys.c    **** 		return;
 702:src/keys.c    **** 	}
 703:src/keys.c    **** 	soft = State2.multi || State2.rarg || State2.hyp || State2.gtodot || State2.labellist ||
 704:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 705:src/keys.c    **** 	runmode = State2.runmode;
 706:src/keys.c    **** 	alphas = State2.alphas;
 707:src/keys.c    **** 	init_state();
 708:src/keys.c    **** 	if (soft) {
 709:src/keys.c    **** 		State2.runmode = runmode;
 710:src/keys.c    **** 		State2.alphas = alphas;
 711:src/keys.c    **** 	}
 712:src/keys.c    **** }
 713:src/keys.c    **** 
ARM GAS  /tmp/ccK8gYGY.s 			page 14


 714:src/keys.c    **** static int check_confirm(int op) {
 715:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 716:src/keys.c    **** 		const int nilop = argKIND(op);
 717:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 718:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 719:src/keys.c    **** 			return STATE_UNFINISHED;
 720:src/keys.c    **** 		}
 721:src/keys.c    **** #ifndef DM42		
 722:src/keys.c    **** 		if ((nilop >= OP_RECV && nilop <= OP_PSTO)
 723:src/keys.c    **** #endif
 724:src/keys.c    **** #ifdef DM42
 725:src/keys.c    **** 		    if ((nilop >= OP_SAVE && nilop <= OP_PSTO) // no recv in DM42
 726:src/keys.c    **** #endif
 727:src/keys.c    **** #ifdef INFRARED
 728:src/keys.c    **** 			|| nilop == OP_PRINT_PGM
 729:src/keys.c    **** #endif
 730:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
 731:src/keys.c    **** 			|| nilop == OP_STOPWATCH
 732:src/keys.c    **** #endif
 733:src/keys.c    **** 		) {
 734:src/keys.c    **** 			// These commands are not programmable
 735:src/keys.c    **** 			NonProgrammable = 1;
 736:src/keys.c    **** 		}
 737:src/keys.c    **** 	}
 738:src/keys.c    **** 	return op;
 739:src/keys.c    **** }
 740:src/keys.c    **** 
 741:src/keys.c    **** static void set_smode(const enum single_disp d) {
 742:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 743:src/keys.c    **** }
 744:src/keys.c    **** 
 745:src/keys.c    **** static int check_f_key(int n, const int dflt) {
 746:src/keys.c    **** 	const int code = 100 + n;
 747:src/keys.c    **** 	unsigned int pc = state_pc();
 748:src/keys.c    **** 
 749:src/keys.c    **** 	if (State2.runmode) {
 750:src/keys.c    **** 		if (isXROM(pc))
 751:src/keys.c    **** 			pc = 1;
 752:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 753:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 754:src/keys.c    **** 	}
 755:src/keys.c    **** 	return dflt;
 756:src/keys.c    **** }
 757:src/keys.c    **** 
 758:src/keys.c    **** /* Return non-zero if the current mode is integer and we accept letters
 759:src/keys.c    ****  * as digits.
 760:src/keys.c    ****  */
 761:src/keys.c    **** static int intltr(int d) {
 762:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 763:src/keys.c    **** }
 764:src/keys.c    **** 
 765:src/keys.c    **** /*
 766:src/keys.c    ****  *  Process a key code in the unshifted mode.
 767:src/keys.c    ****  */
 768:src/keys.c    **** static int process_normal(const keycode c)
 769:src/keys.c    **** {
 770:src/keys.c    **** 	static const unsigned short int op_map[] = {
ARM GAS  /tmp/ccK8gYGY.s 			page 15


 771:src/keys.c    **** 		// Row 1
 772:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS, // A to D
 773:src/keys.c    **** 		OP_MON  | OP_RECIP,
 774:src/keys.c    **** 		OP_DYA  | OP_POW,
 775:src/keys.c    **** 		OP_MON  | OP_SQRT,
 776:src/keys.c    **** 		OP_SPEC | OP_E,		// ->
 777:src/keys.c    **** 		OP_SPEC | OP_F,		// CPX
 778:src/keys.c    **** 		// Row 2
 779:src/keys.c    **** 		RARG_STO,
 780:src/keys.c    **** 		RARG_RCL,
 781:src/keys.c    **** 		OP_NIL  | OP_RDOWN,
 782:src/keys.c    **** 		// Row 3
 783:src/keys.c    **** 		OP_SPEC | OP_ENTER,
 784:src/keys.c    **** 		RARG(RARG_SWAPX, regY_idx),
 785:src/keys.c    **** 		OP_SPEC | OP_CHS,	// CHS
 786:src/keys.c    **** 		OP_SPEC | OP_EEX,	// EEX
 787:src/keys.c    **** 		OP_SPEC | OP_CLX,	// <-
 788:src/keys.c    **** 		// Row 4
 789:src/keys.c    **** 		RARG_XEQ,
 790:src/keys.c    **** 		OP_SPEC | OP_7,
 791:src/keys.c    **** 		OP_SPEC | OP_8,
 792:src/keys.c    **** 		OP_SPEC | OP_9,
 793:src/keys.c    **** 		OP_DYA  | OP_DIV,
 794:src/keys.c    **** 		// Row 5
 795:src/keys.c    **** 		STATE_BST,
 796:src/keys.c    **** 		OP_SPEC | OP_4,
 797:src/keys.c    **** 		OP_SPEC | OP_5,
 798:src/keys.c    **** 		OP_SPEC | OP_6,
 799:src/keys.c    **** 		OP_DYA  | OP_MUL,
 800:src/keys.c    **** 		// Row 6
 801:src/keys.c    **** 		STATE_SST,		// SST
 802:src/keys.c    **** 		OP_SPEC | OP_1,
 803:src/keys.c    **** 		OP_SPEC | OP_2,
 804:src/keys.c    **** 		OP_SPEC | OP_3,
 805:src/keys.c    **** 		OP_DYA  | OP_SUB,
 806:src/keys.c    **** 		// Row 7
 807:src/keys.c    **** 		STATE_UNFINISHED,	// ON/C
 808:src/keys.c    **** 		OP_SPEC | OP_0,
 809:src/keys.c    **** 		OP_SPEC | OP_DOT,
 810:src/keys.c    **** 		OP_NIL  | OP_RS,	// R/S
 811:src/keys.c    **** 		OP_DYA  | OP_ADD,
 812:src/keys.c    **** #ifdef DM42
 813:src/keys.c    **** 		OP_NIL  | OP_NOP,  // shifts etc.
 814:src/keys.c    **** #endif
 815:src/keys.c    **** 	};
 816:src/keys.c    **** 
 817:src/keys.c    **** 	int lc = keycode_to_linear(c);
 818:src/keys.c    **** 	int op = op_map[lc];
 819:src/keys.c    **** 	
 820:src/keys.c    **** 	// The switch handles all the special cases
 821:src/keys.c    **** #ifdef DM42
 822:src/keys.c    **** 	int op_int;
 823:src/keys.c    **** 	if (UState.intm) {
 824:src/keys.c    **** 	  switch (c) {
 825:src/keys.c    **** 	  case K00:
 826:src/keys.c    **** 	    op = OP_SPEC | OP_A;
 827:src/keys.c    **** 	    if (intltr(10)) {
ARM GAS  /tmp/ccK8gYGY.s 			page 16


 828:src/keys.c    **** 	      return op;
 829:src/keys.c    **** 	    }
 830:src/keys.c    **** 	    else {
 831:src/keys.c    **** 	      return check_f_key(0, op);
 832:src/keys.c    **** 	    }
 833:src/keys.c    **** 	  case K01:
 834:src/keys.c    **** 	    op = OP_SPEC | OP_B;
 835:src/keys.c    **** 	    if (intltr(11)) {
 836:src/keys.c    **** 	      return op;
 837:src/keys.c    **** 	    }
 838:src/keys.c    **** 	    else {
 839:src/keys.c    **** 	      return check_f_key(1, op);
 840:src/keys.c    **** 	    }
 841:src/keys.c    **** 	  case K03:
 842:src/keys.c    **** 	    op_int = OP_SPEC | OP_C;
 843:src/keys.c    **** 	    if (intltr(12)) {
 844:src/keys.c    **** 	      return op_int;
 845:src/keys.c    **** 	    }
 846:src/keys.c    **** 	    else {
 847:src/keys.c    **** 	      return check_f_key(2, op);
 848:src/keys.c    **** 	    }
 849:src/keys.c    **** 	  case K30:
 850:src/keys.c    **** 	    op_int = OP_SPEC | OP_F;
 851:src/keys.c    **** 	    if (intltr(15)) {
 852:src/keys.c    **** 	      return op_int;
 853:src/keys.c    **** 	    }
 854:src/keys.c    **** 	  default:;
 855:src/keys.c    **** 	  }
 856:src/keys.c    **** 	}
 857:src/keys.c    **** #endif  
 858:src/keys.c    **** 
 859:src/keys.c    **** 	switch (c) {
 860:src/keys.c    **** #ifdef DM42
 861:src/keys.c    **** 	case K00:
 862:src/keys.c    **** 		return check_f_key(0, op);
 863:src/keys.c    **** 	case K01:
 864:src/keys.c    **** 		return check_f_key(1, op);
 865:src/keys.c    **** 	case K03:
 866:src/keys.c    **** 		return check_f_key(2, op);
 867:src/keys.c    **** #else
 868:src/keys.c    **** 	case K00:
 869:src/keys.c    **** 	case K01:
 870:src/keys.c    **** 		if (UState.intm)
 871:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 872:src/keys.c    **** 	case K02:
 873:src/keys.c    **** 	case K03:
 874:src/keys.c    **** 		if (intltr(lc + 10)) {
 875:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 876:src/keys.c    **** 			return op;
 877:src/keys.c    **** 		}
 878:src/keys.c    **** 		return check_f_key(lc, op);
 879:src/keys.c    **** #endif		
 880:src/keys.c    **** 	case K_ARROW:
 881:src/keys.c    **** #ifndef DM42
 882:src/keys.c    **** #ifdef INT_MODE_TEMPVIEW
 883:src/keys.c    **** 		if (intltr(14))
 884:src/keys.c    **** 			return op;
ARM GAS  /tmp/ccK8gYGY.s 			page 17


 885:src/keys.c    **** #else
 886:src/keys.c    **** 		if (UState.intm)
 887:src/keys.c    **** 			return op;
 888:src/keys.c    **** #endif
 889:src/keys.c    **** #endif		
 890:src/keys.c    **** 		if (is_bad_cmdline())
 891:src/keys.c    **** 			return STATE_UNFINISHED;
 892:src/keys.c    **** 		process_cmdline_set_lift();
 893:src/keys.c    **** 		State2.arrow = 1;
 894:src/keys.c    **** #ifdef DM42
 895:src/keys.c    **** 		set_menu (M_Arrow); // arrow menu
 896:src/keys.c    **** 		display_current_menu ();
 897:src/keys.c    **** 		lcd_refresh ();
 898:src/keys.c    **** #else
 899:src/keys.c    **** 		set_shift(SHIFT_G);
 900:src/keys.c    **** #endif
 901:src/keys.c    **** 		break;
 902:src/keys.c    **** 
 903:src/keys.c    **** 	case K_CMPLX:
 904:src/keys.c    **** #ifdef DM42
 905:src/keys.c    **** 	  if (UState.intm)
 906:src/keys.c    **** 	    break; // return nothing
 907:src/keys.c    **** 	  State2.cmplx = 1;
 908:src/keys.c    **** #else
 909:src/keys.c    **** 	  if (UState.intm)
 910:src/keys.c    **** 	    return op;
 911:src/keys.c    **** 	  State2.cmplx = 1;
 912:src/keys.c    **** #endif
 913:src/keys.c    **** 	  break;
 914:src/keys.c    **** 
 915:src/keys.c    **** 	case K24:				// <-
 916:src/keys.c    **** 		if (State2.disp_temp)
 917:src/keys.c    **** 			return STATE_UNFINISHED;
 918:src/keys.c    **** 		if (State2.runmode)
 919:src/keys.c    **** 			return op;
 920:src/keys.c    **** 		return STATE_BACKSPACE;
 921:src/keys.c    **** 
 922:src/keys.c    **** 	case K10:				// STO
 923:src/keys.c    **** 	case K11:				// RCL
 924:src/keys.c    **** 	case K30:				// XEQ
 925:src/keys.c    **** 		init_arg((enum rarg)op);
 926:src/keys.c    **** 		break;
 927:src/keys.c    **** 
 928:src/keys.c    **** 	default:
 929:src/keys.c    **** 		return op;			// Keys handled by table
 930:src/keys.c    **** 	}
 931:src/keys.c    **** 	return STATE_UNFINISHED;
 932:src/keys.c    **** }
 933:src/keys.c    **** 
 934:src/keys.c    **** 
 935:src/keys.c    **** /*
 936:src/keys.c    ****  *  Process a key code after f or g shift
 937:src/keys.c    ****  */
 938:src/keys.c    **** static int process_fg_shifted(const keycode c) {
 939:src/keys.c    **** 
 940:src/keys.c    **** #define NO_INT 0xf000
 941:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
ARM GAS  /tmp/ccK8gYGY.s 			page 18


 942:src/keys.c    **** 		// Row 1
 943:src/keys.c    **** 		{ 1,                               0                           }, // HYP
 944:src/keys.c    **** 		{ OP_MON | OP_SIN      | NO_INT,   OP_MON | OP_ASIN   | NO_INT },
 945:src/keys.c    **** 		{ OP_MON | OP_COS      | NO_INT,   OP_MON | OP_ACOS   | NO_INT },
 946:src/keys.c    **** 		{ OP_MON | OP_TAN      | NO_INT,   OP_MON | OP_ATAN   | NO_INT },
 947:src/keys.c    **** 		{ OP_NIL | OP_P2R      | NO_INT,   OP_NIL | OP_R2P    | NO_INT },
 948:src/keys.c    **** 		{ OP_NIL | OP_FRACPROPER,	   OP_NIL | OP_FRACIMPROPER    }, // CPX
 949:src/keys.c    **** 		// Row 2
 950:src/keys.c    **** 		{ OP_NIL | OP_HMS,                 OP_NIL | OP_DEG    | NO_INT },
 951:src/keys.c    **** 		{ OP_NIL | OP_FLOAT,               OP_NIL | OP_RAD    | NO_INT },
 952:src/keys.c    **** 		{ OP_NIL | OP_RANDOM,              OP_NIL | OP_GRAD   | NO_INT },
 953:src/keys.c    **** 		// Row 3
 954:src/keys.c    **** 		{ STATE_UNFINISHED,		   OP_NIL | OP_FILL            }, // ENTER
 955:src/keys.c    **** 		{ STATE_WINDOWLEFT,   		   STATE_WINDOWRIGHT   	       },
 956:src/keys.c    **** 		{ RARG(RARG_BASE, 2),		   RARG(RARG_BASE, 8)          },
 957:src/keys.c    **** 		{ RARG(RARG_BASE, 10),		   RARG(RARG_BASE, 16)         },
 958:src/keys.c    **** 		{ OP_NIL | OP_CLPROG,		   OP_NIL | OP_SIGMACLEAR      },
 959:src/keys.c    **** 		// Row 4
 960:src/keys.c    **** 		{ OP_MON | OP_EXP,                 OP_MON | OP_LN              },
 961:src/keys.c    **** 		{ OP_MON | OP_10POWX,		   OP_MON | OP_LOG             },
 962:src/keys.c    **** 		{ OP_MON | OP_2POWX,		   OP_MON | OP_LG2             },
 963:src/keys.c    **** 		{ OP_DYA | OP_POW,                 OP_DYA | OP_LOGXY           },
 964:src/keys.c    **** 		{ OP_MON | OP_RECIP    | NO_INT,   OP_DYA | OP_PARAL	       },
 965:src/keys.c    **** 		// Row 5
 966:src/keys.c    **** 		{ OP_DYA | OP_COMB,                OP_DYA | OP_PERM            },
 967:src/keys.c    **** 		{ OP_MON | OP_cdf_Q    | NO_INT,   OP_MON | OP_qf_Q   | NO_INT },
 968:src/keys.c    **** 		{ OP_NIL | OP_statMEAN | NO_INT,   OP_NIL | OP_statS  | NO_INT },
 969:src/keys.c    **** 		{ OP_MON | OP_yhat     | NO_INT,   OP_NIL | OP_statR  | NO_INT },
 970:src/keys.c    **** 		{ OP_MON | OP_SQRT,		   OP_MON | OP_SQR             },
 971:src/keys.c    **** 		// Row 6
 972:src/keys.c    **** 		{ RARG_SF,                         RARG_CF                     },
 973:src/keys.c    **** 		{ TST_EQ,                          TST_NE                      }, // tests
 974:src/keys.c    **** 		{ RARG_SOLVE           | NO_INT,   RARG_INTG          | NO_INT },
 975:src/keys.c    **** 		{ RARG_PROD            | NO_INT,   RARG_SUM           | NO_INT },
 976:src/keys.c    **** 		{ OP_MON | OP_PERCNT   | NO_INT,   OP_MON | OP_PERCHG | NO_INT },
 977:src/keys.c    **** 		// Row 7
 978:src/keys.c    **** #ifdef INFRARED
 979:src/keys.c    **** 		{ RARG(RARG_PRINT_REG,regX_idx),   STATE_UNFINISHED	       },
 980:src/keys.c    **** #else
 981:src/keys.c    **** 		{ STATE_UNFINISHED,		   STATE_UNFINISHED	       },
 982:src/keys.c    **** #endif
 983:src/keys.c    **** 		{ OP_MON | OP_ABS,		   OP_MON | OP_RND             },
 984:src/keys.c    **** 		{ OP_MON | OP_TRUNC,		   OP_MON | OP_FRAC            },
 985:src/keys.c    **** 		{ RARG_LBL,			   OP_NIL | OP_RTN             },
 986:src/keys.c    **** 		{ RARG_DSE,			   RARG_ISG                    },
 987:src/keys.c    **** #ifdef DM42
 988:src/keys.c    **** 		{ OP_NIL | OP_NOP,		   OP_NIL |OP_NOP              },
 989:src/keys.c    **** #endif
 990:src/keys.c    **** 	};
 991:src/keys.c    **** 
 992:src/keys.c    **** 	static const unsigned short int op_map2[] = {
 993:src/keys.c    **** 		STATE_UNFINISHED,
 994:src/keys.c    **** 		STATE_UNFINISHED,
 995:src/keys.c    **** 		OP_DYA  | OP_POW,
 996:src/keys.c    **** 		OP_MON  | OP_SQRT
 997:src/keys.c    **** 	};
 998:src/keys.c    **** 
ARM GAS  /tmp/ccK8gYGY.s 			page 19


 999:src/keys.c    **** 	enum shifts shift = reset_shift();
1000:src/keys.c    **** 	int lc = keycode_to_linear(c);
1001:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
1002:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
1003:src/keys.c    **** 	if (no_int)
1004:src/keys.c    **** 		op &= ~NO_INT;
1005:src/keys.c    **** 
1006:src/keys.c    **** 	switch (c) {
1007:src/keys.c    **** 	case K00:
1008:src/keys.c    **** 	  if (! UState.intm) {
1009:src/keys.c    **** 	    //	    print_debug(100,0);
1010:src/keys.c    **** 	    State2.hyp = 1;
1011:src/keys.c    **** 	    State2.dot = op;
1012:src/keys.c    **** 	    // State2.cmplx = 0;
1013:src/keys.c    **** 	    return STATE_UNFINISHED;
1014:src/keys.c    **** 	  }
1015:src/keys.c    **** 	  // fall through
1016:src/keys.c    **** 	case K01:
1017:src/keys.c    **** #ifdef DM42
1018:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
1019:src/keys.c    **** 	    return check_f_key(lc, op_map2[lc]);
1020:src/keys.c    **** 	  }
1021:src/keys.c    **** 	  break;
1022:src/keys.c    **** #endif
1023:src/keys.c    **** #ifndef DM42
1024:src/keys.c    **** 	case K02:
1025:src/keys.c    **** #endif
1026:src/keys.c    **** 	case K03:
1027:src/keys.c    **** #ifdef DM42
1028:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
1029:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
1030:src/keys.c    **** 		}
1031:src/keys.c    **** 		break;
1032:src/keys.c    **** #else
1033:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
1034:src/keys.c    **** 			return check_f_key(2, op_map2[lc]);
1035:src/keys.c    **** 		}
1036:src/keys.c    **** 		break;
1037:src/keys.c    **** #endif
1038:src/keys.c    **** 	case K20:				// Alpha
1039:src/keys.c    **** 		if (shift == SHIFT_F) {
1040:src/keys.c    **** 			if (is_bad_cmdline())
1041:src/keys.c    **** 				return STATE_UNFINISHED;
1042:src/keys.c    **** 			process_cmdline_set_lift();
1043:src/keys.c    **** 			State2.alphas = 1;
1044:src/keys.c    **** #ifdef DM42
1045:src/keys.c    **** 			set_menu(M_Alpha);
1046:src/keys.c    **** 			display_current_menu();
1047:src/keys.c    **** #endif
1048:src/keys.c    **** 		}
1049:src/keys.c    **** 		break;
1050:src/keys.c    **** #ifdef DM42
1051:src/keys.c    **** 	case K31:
1052:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(13)) {// Log - so D key
1053:src/keys.c    **** 	    return OP_SPEC | OP_D;
1054:src/keys.c    **** 	  }
1055:src/keys.c    **** 	  break;
ARM GAS  /tmp/ccK8gYGY.s 			page 20


1056:src/keys.c    **** 	case K30:
1057:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(14)) {// Ln - so E key
1058:src/keys.c    **** 	    return OP_SPEC | OP_E;
1059:src/keys.c    **** 	  }
1060:src/keys.c    **** 	  break;
1061:src/keys.c    **** #endif
1062:src/keys.c    **** 	case K51:
1063:src/keys.c    **** 		if (is_bad_cmdline())
1064:src/keys.c    **** 			return STATE_UNFINISHED;
1065:src/keys.c    **** 		process_cmdline_set_lift();
1066:src/keys.c    **** 		State2.test = op;
1067:src/keys.c    **** 		return STATE_UNFINISHED;
1068:src/keys.c    **** 
1069:src/keys.c    **** 	case K50:
1070:src/keys.c    **** #ifndef REALBUILD
1071:src/keys.c    **** 		if (SHIFT_N != shift_down()) {
1072:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
1073:src/keys.c    **** 			return STATE_UNFINISHED;
1074:src/keys.c    **** 		}
1075:src/keys.c    **** #endif
1076:src/keys.c    **** 	case K52:
1077:src/keys.c    **** 	case K53:
1078:src/keys.c    **** 	case K63:
1079:src/keys.c    **** 	case K64:
1080:src/keys.c    **** 		if (op != (OP_NIL | OP_RTN)) {
1081:src/keys.c    **** 			if (! (no_int && UState.intm)) {
1082:src/keys.c    **** 				init_arg((enum rarg) op);
1083:src/keys.c    **** 			}
1084:src/keys.c    **** 			return STATE_UNFINISHED;
1085:src/keys.c    **** 		}
1086:src/keys.c    **** 		break;
1087:src/keys.c    **** 
1088:src/keys.c    **** 	default:
1089:src/keys.c    **** 		break;
1090:src/keys.c    **** 	}
1091:src/keys.c    **** 	if (no_int && UState.intm)
1092:src/keys.c    **** 		return STATE_UNFINISHED;
1093:src/keys.c    **** 
1094:src/keys.c    **** 	return check_confirm(op);
1095:src/keys.c    **** #undef NO_INT
1096:src/keys.c    **** }
1097:src/keys.c    **** 
1098:src/keys.c    **** /*
1099:src/keys.c    ****  *  Process a key code after h shift
1100:src/keys.c    ****  */
1101:src/keys.c    **** static int process_h_shifted(const keycode c) {
1102:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
1103:src/keys.c    **** #define NO_INT   0x4000
1104:src/keys.c    **** 	static const unsigned short int op_map[] = {
1105:src/keys.c    **** 		// Row 1
1106:src/keys.c    **** 		_RARG   | RARG_STD,
1107:src/keys.c    **** 		_RARG   | RARG_FIX,
1108:src/keys.c    **** 		_RARG   | RARG_SCI,
1109:src/keys.c    **** 		_RARG   | RARG_ENG,
1110:src/keys.c    **** 		STATE_UNFINISHED,	// CONV
1111:src/keys.c    **** 		STATE_UNFINISHED,	// MODE
1112:src/keys.c    **** 		// Row 2
ARM GAS  /tmp/ccK8gYGY.s 			page 21


1113:src/keys.c    **** 		STATE_UNFINISHED,	// CAT
1114:src/keys.c    **** 		_RARG   | RARG_VIEW,
1115:src/keys.c    **** 		OP_NIL  | OP_RUP,
1116:src/keys.c    **** 		// Row 3
1117:src/keys.c    **** 		_RARG	| RARG_INTNUM,	// CONST, will be emitted in integer mode only
1118:src/keys.c    **** 		_RARG   | RARG_SWAPX,
1119:src/keys.c    **** 		OP_MON  | OP_NOT,
1120:src/keys.c    **** 		CONST(OP_PI) | NO_INT,
1121:src/keys.c    **** 		OP_NIL  | OP_rCLX,
1122:src/keys.c    **** 		// Row 4
1123:src/keys.c    **** 		_RARG   | RARG_GTO,
1124:src/keys.c    **** 		OP_DYA  | OP_LAND,
1125:src/keys.c    **** 		OP_DYA  | OP_LOR,
1126:src/keys.c    **** 		OP_DYA  | OP_LXOR,
1127:src/keys.c    **** 		OP_DYA  | OP_MOD,
1128:src/keys.c    **** 		// Row 5
1129:src/keys.c    **** 		OP_MON  | OP_FACT,
1130:src/keys.c    **** 		STATE_UNFINISHED,	// PROB
1131:src/keys.c    **** 		STATE_UNFINISHED,	// STAT
1132:src/keys.c    **** 		STATE_UNFINISHED,	// CFIT
1133:src/keys.c    **** 		STATE_UNFINISHED,	// MATRIX
1134:src/keys.c    **** 		// Row 6
1135:src/keys.c    **** 		STATE_UNFINISHED,	// STATUS
1136:src/keys.c    **** 		STATE_UNFINISHED,	// TEST
1137:src/keys.c    **** 		STATE_UNFINISHED,	// P.FCN
1138:src/keys.c    **** 		STATE_UNFINISHED,	// X.FCN
1139:src/keys.c    **** 		OP_SPEC | OP_SIGMAMINUS | NO_INT,
1140:src/keys.c    **** 		// Row 7
1141:src/keys.c    **** 		OP_NIL | OP_OFF,
1142:src/keys.c    **** 		_RARG   | RARG_PAUSE,
1143:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1144:src/keys.c    **** 		OP_NIL  | OP_THOUS_OFF,
1145:src/keys.c    **** #else
1146:src/keys.c    ****  		OP_NIL  | OP_RADCOM,
1147:src/keys.c    **** #endif
1148:src/keys.c    **** 		STATE_UNFINISHED,	// P/R
1149:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS | NO_INT,
1150:src/keys.c    **** #ifdef DM42
1151:src/keys.c    **** 		OP_NIL | OP_NOP,       // shifts etc.
1152:src/keys.c    **** #endif
1153:src/keys.c    **** 	};
1154:src/keys.c    **** 
1155:src/keys.c    **** 	int lc = keycode_to_linear(c);
1156:src/keys.c    **** 	int op = op_map[lc];
1157:src/keys.c    **** 	reset_shift();
1158:src/keys.c    **** 
1159:src/keys.c    **** 	// The switch handles all the special cases
1160:src/keys.c    **** 	switch (c) {
1161:src/keys.c    **** 	case K62:
1162:src/keys.c    **** 		if (UState.intm)
1163:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
1164:src/keys.c    **** 		else
1165:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1166:src/keys.c    **** 			if (UState.nothousands) op = OP_NIL | OP_THOUS_ON;
1167:src/keys.c    **** #else
1168:src/keys.c    **** 			if (UState.fraccomma) op = OP_NIL | OP_RADDOT;
1169:src/keys.c    **** #endif
ARM GAS  /tmp/ccK8gYGY.s 			page 22


1170:src/keys.c    **** 		break;
1171:src/keys.c    **** 
1172:src/keys.c    **** 	case K63:					// Program<->Run mode
1173:src/keys.c    **** 		if (is_bad_cmdline())
1174:src/keys.c    **** 			return STATE_UNFINISHED;
1175:src/keys.c    **** 		State2.runmode = 1 - State2.runmode;
1176:src/keys.c    **** 		process_cmdline_set_lift();
1177:src/keys.c    **** 		update_program_bounds(1);
1178:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
1179:src/keys.c    **** 			set_pc(0);
1180:src/keys.c    **** 		break;
1181:src/keys.c    **** 
1182:src/keys.c    **** 	default:
1183:src/keys.c    **** 		break;
1184:src/keys.c    **** 	}
1185:src/keys.c    **** 
1186:src/keys.c    **** 	if (op != STATE_UNFINISHED) {
1187:src/keys.c    **** 		if (op & _RARG) {
1188:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
1189:src/keys.c    **** 			op = STATE_UNFINISHED;
1190:src/keys.c    **** 		}
1191:src/keys.c    **** 	}
1192:src/keys.c    **** 	return UState.intm && (op & NO_INT) ? STATE_UNFINISHED : op & ~NO_INT;
1193:src/keys.c    **** #undef _RARG
1194:src/keys.c    **** #undef NO_INT
1195:src/keys.c    **** }
1196:src/keys.c    **** #ifdef INCLUDE_C_LOCK
1197:src/keys.c    **** 
1198:src/keys.c    **** // Big section here - lots of functions that help with processing keys in complex lock mode
1199:src/keys.c    **** 
1200:src/keys.c    **** static void do_command_line ( void ) {
1201:src/keys.c    **** 	if (CmdLineLength) {
1202:src/keys.c    **** 		State2.state_lift = 0;
1203:src/keys.c    **** 		process_cmdline();
1204:src/keys.c    **** 	}
1205:src/keys.c    **** }
1206:src/keys.c    **** 
1207:src/keys.c    **** void finish_cpx_entry ( int lift ) {
1208:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
1209:src/keys.c    **** // The argument sets the lift state after entry is finished.
1210:src/keys.c    **** // It also converts entered polar form into rectangular coordinates, if needed.
1211:src/keys.c    **** // Note: does nothing to stack or lift state if number not being entered.
1212:src/keys.c    **** 	if ( !( REAL_FLAG || IMAG_FLAG ) ) return;
1213:src/keys.c    **** 
1214:src/keys.c    **** /*	if (REAL_FLAG) { // real part being entered
1215:src/keys.c    **** 		CLEAR_REAL;
1216:src/keys.c    **** 		do_command_line();
1217:src/keys.c    **** 	}
1218:src/keys.c    **** 	else if (IMAG_FLAG) {
1219:src/keys.c    **** 		CLEAR_IMAG;
1220:src/keys.c    **** 		do_command_line();
1221:src/keys.c    **** 		swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
1222:src/keys.c    **** 	}
1223:src/keys.c    **** */
1224:src/keys.c    **** 	do_command_line();
1225:src/keys.c    **** 	if (IMAG_FLAG) swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
1226:src/keys.c    **** 	CLEAR_REAL;
ARM GAS  /tmp/ccK8gYGY.s 			page 23


1227:src/keys.c    **** 	CLEAR_IMAG;
1228:src/keys.c    **** 
1229:src/keys.c    **** 	State2.state_lift = lift;
1230:src/keys.c    **** 
1231:src/keys.c    **** 	if ( POLAR_DISPLAY && POLAR_FORM_NOT_READY ) {
1232:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
1233:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regX_idx));
1234:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
1235:src/keys.c    **** 		//call p2r
1236:src/keys.c    **** 		update_speed(0);
1237:src/keys.c    **** 		op_p2r(OP_NOP); // x, y now contain rectangular form
1238:src/keys.c    **** #ifdef RP_PREFIX
1239:src/keys.c    **** 		RectPolConv = 1; // stop "y" display
1240:src/keys.c    **** #endif
1241:src/keys.c    **** 		SET_POLAR_READY;
1242:src/keys.c    **** 	}
1243:src/keys.c    **** }
1244:src/keys.c    **** 
1245:src/keys.c    **** static void stack_restore ( void ) { 
1246:src/keys.c    **** 	// called if number entry terminated by EXIT key
1247:src/keys.c    **** 	// uses J and K registers to store the two stack registers displaced by the new entry
1248:src/keys.c    **** 	// tried declaring some static variables to hold the numbers but didn't work on real calculator
1249:src/keys.c    **** 	if ( !REAL_FLAG && !IMAG_FLAG  ) return; // number entry already over; no restore
1250:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
1251:src/keys.c    **** 		drop ( OP_DROPXY );
1252:src/keys.c    **** 		copyreg (get_reg_n(regC_idx), get_reg_n(regJ_idx));
1253:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
1254:src/keys.c    **** 	}
1255:src/keys.c    **** 	else { // X, Y have been overwritten
1256:src/keys.c    **** 		copyreg (get_reg_n(regX_idx), get_reg_n(regJ_idx));
1257:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
1258:src/keys.c    **** 	}
1259:src/keys.c    **** 	State2.state_lift = INIT_LIFT; // restore lift status too
1260:src/keys.c    **** 	CLEAR_INIT_LIFT;
1261:src/keys.c    **** 	CLEAR_POLAR_READY;
1262:src/keys.c    **** }
1263:src/keys.c    **** 
1264:src/keys.c    **** void stack_begin ( int zero_y ) { 
1265:src/keys.c    **** 	// Lifts stack if required and stores displaced registers; 
1266:src/keys.c    **** 	// zeros y if requested. 
1267:src/keys.c    **** 	CLEAR_POLAR_READY;
1268:src/keys.c    **** 	if ( State2.state_lift ){
1269:src/keys.c    **** 		SET_INIT_LIFT;
1270:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regC_idx));
1271:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
1272:src/keys.c    **** 		lift();
1273:src/keys.c    **** 		zero_X();
1274:src/keys.c    **** 		lift();
1275:src/keys.c    **** 		State2.state_lift = 0;
1276:src/keys.c    **** 	}
1277:src/keys.c    **** 	else {
1278:src/keys.c    **** 		CLEAR_INIT_LIFT;
1279:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regX_idx));
1280:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
1281:src/keys.c    **** 		zero_X();
1282:src/keys.c    **** 		if ( zero_y ) zero_Y();
1283:src/keys.c    **** 	}
ARM GAS  /tmp/ccK8gYGY.s 			page 24


1284:src/keys.c    **** }
1285:src/keys.c    **** 
1286:src/keys.c    ****  static int process_c_lock ( const keycode c ) { // main function - called from process (c) functio
1287:src/keys.c    **** 
1288:src/keys.c    ****    enum shifts shift = cur_shift();
1289:src/keys.c    **** 
1290:src/keys.c    ****    // Individual keys needing special treatment
1291:src/keys.c    **** 
1292:src/keys.c    ****    if ( (c < K05) && shift == SHIFT_H ){ // display modes
1293:src/keys.c    ****      return process_h_shifted (c);
1294:src/keys.c    ****    }
1295:src/keys.c    **** 
1296:src/keys.c    **** 
1297:src/keys.c    ****    if ( (shift == SHIFT_G) && (c >= K10) && (c <= K12) ) { // angle mode change; needed because oth
1298:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
1299:src/keys.c    ****    }
1300:src/keys.c    ****    if ( (c >= K05) && (c <= K12) && (shift == SHIFT_F || shift == SHIFT_G) ) { // Deg, rad, grad, H
1301:src/keys.c    ****      return process_fg_shifted (c);
1302:src/keys.c    ****    }
1303:src/keys.c    **** 
1304:src/keys.c    ****    if (c==K23) { // pi key - needs to be separate from what follows as it doesn't want entry comple
1305:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
1306:src/keys.c    ****        reset_shift();
1307:src/keys.c    ****        if ( CmdLineLength ) {
1308:src/keys.c    **** 	 State2.state_lift = 0;
1309:src/keys.c    **** 	 return OP_NIL | OP_PIB;
1310:src/keys.c    ****        }
1311:src/keys.c    ****        else {
1312:src/keys.c    **** 	 return OP_NIL | OP_PIA;
1313:src/keys.c    ****        }
1314:src/keys.c    ****      }
1315:src/keys.c    ****      else {
1316:src/keys.c    **** #if INCLUDE_EEX_PI == 2
1317:src/keys.c    ****        const int eex_pi = 1;
1318:src/keys.c    **** #elif INCLUDE_EEX_PI == 1
1319:src/keys.c    ****        const int eex_pi = get_user_flag(regL_idx);
1320:src/keys.c    **** #else
1321:src/keys.c    ****        const int eex_pi = 0;
1322:src/keys.c    **** #endif
1323:src/keys.c    ****        if ( (shift == SHIFT_H) || (eex_pi && (shift == SHIFT_N) && CmdLineLength == 0) ) { // norma
1324:src/keys.c    **** 	 finish_cpx_entry(1);
1325:src/keys.c    **** 	 return process_cmplx(c);
1326:src/keys.c    ****        }
1327:src/keys.c    ****      }
1328:src/keys.c    ****    }
1329:src/keys.c    **** 
1330:src/keys.c    ****    if (shift != SHIFT_N) { // other shifted keys - special cases first.
1331:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
1332:src/keys.c    ****      switch (c) {
1333:src/keys.c    ****      case (K60):
1334:src/keys.c    ****        reset_shift();
1335:src/keys.c    ****        if (shift == SHIFT_H) return (OP_NIL | OP_OFF);
1336:src/keys.c    ****      case (K21): // x<->y key
1337:src/keys.c    ****        if (shift == SHIFT_F || shift == SHIFT_G) { // exchanges real and imag parts with either shi
1338:src/keys.c    **** 	 reset_shift();
1339:src/keys.c    **** 	 CLEAR_POLAR_READY;
1340:src/keys.c    **** 	 return RARG(RARG_SWAPX, regY_idx);
ARM GAS  /tmp/ccK8gYGY.s 			page 25


1341:src/keys.c    ****        }
1342:src/keys.c    ****        else if (shift == SHIFT_H) {
1343:src/keys.c    **** 	 return process_cmplx(c); // complex exchange of (x,y) with register
1344:src/keys.c    ****        }
1345:src/keys.c    ****        break;
1346:src/keys.c    ****      case (K40): // up-arrow key
1347:src/keys.c    ****        if (shift == SHIFT_F) {
1348:src/keys.c    **** 	 SET_RECTANGULAR_DISPLAY;
1349:src/keys.c    ****        }
1350:src/keys.c    ****        else if (shift == SHIFT_G) {
1351:src/keys.c    **** 	 SET_POLAR_DISPLAY;
1352:src/keys.c    **** 	 CLEAR_POLAR_READY;
1353:src/keys.c    **** 	 update_speed(0); // new polar display calculated from keyboard needs a speed boost
1354:src/keys.c    ****        }
1355:src/keys.c    ****        else if (shift == SHIFT_H) { // ND addition on DM42 - should work on ordinary calculator too
1356:src/keys.c    **** 	 return process_cmplx (c);
1357:src/keys.c    ****        }
1358:src/keys.c    ****        break;
1359:src/keys.c    ****      case (K22): // +/- key
1360:src/keys.c    ****        reset_shift();
1361:src/keys.c    ****        if (shift == SHIFT_F ) {
1362:src/keys.c    **** 	 return OP_NIL | OP_C_MIM;
1363:src/keys.c    ****        }
1364:src/keys.c    ****        else if (shift == SHIFT_H) {
1365:src/keys.c    **** 	 return OP_NIL | OP_C_MRE;
1366:src/keys.c    ****        }
1367:src/keys.c    ****        break;
1368:src/keys.c    ****      case (K62): // IP/FP key
1369:src/keys.c    ****        reset_shift();
1370:src/keys.c    ****        if (shift == SHIFT_F) {
1371:src/keys.c    **** 	 return OP_NIL | OP_C_IM;
1372:src/keys.c    ****        }
1373:src/keys.c    ****        else if (shift == SHIFT_G) {
1374:src/keys.c    **** 	 return OP_NIL | OP_C_RE;
1375:src/keys.c    ****        }
1376:src/keys.c    ****        break;
1377:src/keys.c    ****      case (K44): // x (times) key
1378:src/keys.c    ****        if (shift == SHIFT_H) { // real*real + i imag*imag
1379:src/keys.c    **** 	 reset_shift();
1380:src/keys.c    **** 	 return OP_CDYA | OP_CDOT;
1381:src/keys.c    ****        }
1382:src/keys.c    ****        else {
1383:src/keys.c    **** 	 return process_cmplx(c);
1384:src/keys.c    ****        }
1385:src/keys.c    ****        break;
1386:src/keys.c    ****      case (K34): // divide key
1387:src/keys.c    ****        if (shift == SHIFT_H) { // real/real + i imag/imag
1388:src/keys.c    **** 	 reset_shift();
1389:src/keys.c    **** 	 return OP_CDYA | OP_CDOTDIV;
1390:src/keys.c    ****        }
1391:src/keys.c    ****        else {
1392:src/keys.c    **** 	 return process_cmplx(c);
1393:src/keys.c    ****        }
1394:src/keys.c    ****        break;
1395:src/keys.c    ****      case (K24): // <- key
1396:src/keys.c    ****        if (POLAR_DISPLAY) break;
1397:src/keys.c    ****        if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real pa
ARM GAS  /tmp/ccK8gYGY.s 			page 26


1398:src/keys.c    **** 	 zero_X ();
1399:src/keys.c    **** 	 State2.state_lift = 0;
1400:src/keys.c    **** 	 SET_REAL;
1401:src/keys.c    **** 	 stack_begin (0);
1402:src/keys.c    ****        }
1403:src/keys.c    ****        break;
1404:src/keys.c    ****      default:
1405:src/keys.c    ****        return process_cmplx(c); // for shifted keys not listed above
1406:src/keys.c    ****      }
1407:src/keys.c    ****      reset_shift(); // for the keys listed above; functions complete
1408:src/keys.c    ****      return STATE_UNFINISHED;
1409:src/keys.c    ****    }
1410:src/keys.c    **** 
1411:src/keys.c    ****    switch (c) { // non-shifted keys including numbers - in general, keys to be processed normally n
1412:src/keys.c    ****    case (K61):
1413:src/keys.c    ****    case (K62):
1414:src/keys.c    ****    case (K51):
1415:src/keys.c    ****    case (K52):
1416:src/keys.c    ****    case (K53):
1417:src/keys.c    ****    case (K41):
1418:src/keys.c    ****    case (K42):
1419:src/keys.c    ****    case (K43):
1420:src/keys.c    ****    case (K31):
1421:src/keys.c    ****    case (K32):
1422:src/keys.c    ****    case (K33):
1423:src/keys.c    ****    case (K23): // 0.123456789EEX
1424:src/keys.c    ****      if (!REAL_FLAG && !IMAG_FLAG) {
1425:src/keys.c    ****        SET_REAL; // start and continuation of real entry
1426:src/keys.c    ****        stack_begin (1);
1427:src/keys.c    ****      }
1428:src/keys.c    ****      return process_normal(c);
1429:src/keys.c    ****    case (K22): // CHS
1430:src/keys.c    ****      //	case (K23): // EEX
1431:src/keys.c    ****      if (!REAL_FLAG && !IMAG_FLAG) {
1432:src/keys.c    ****        return process_cmplx(c);
1433:src/keys.c    ****      }
1434:src/keys.c    ****      else {
1435:src/keys.c    ****        return process_normal(c);
1436:src/keys.c    ****      }
1437:src/keys.c    ****    case (K24): // backspace
1438:src/keys.c    ****    case (K04): // arrow
1439:src/keys.c    ****    case (K_ARROW):
1440:src/keys.c    ****      return process_normal(c);
1441:src/keys.c    ****    case (K_CMPLX):
1442:src/keys.c    ****      if (REAL_FLAG) { // Something - at least one digit - has been entered; real part now complete
1443:src/keys.c    ****        CLEAR_REAL;
1444:src/keys.c    ****        SET_IMAG;
1445:src/keys.c    ****        do_command_line();
1446:src/keys.c    ****        State2.state_lift = 0;
1447:src/keys.c    ****        swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
1448:src/keys.c    ****      }
1449:src/keys.c    ****      else if (IMAG_FLAG) { // finishing off imag part; nothing has necessarily been entered
1450:src/keys.c    ****        finish_cpx_entry (1);
1451:src/keys.c    ****      }
1452:src/keys.c    ****      else { // down here we need a part that deals with CPX being pressed without a real part being
1453:src/keys.c    ****        SET_IMAG;
1454:src/keys.c    ****        stack_begin (1);
ARM GAS  /tmp/ccK8gYGY.s 			page 27


1455:src/keys.c    ****      }
1456:src/keys.c    ****      return STATE_UNFINISHED;
1457:src/keys.c    ****    default:;
1458:src/keys.c    ****    }
1459:src/keys.c    ****    finish_cpx_entry(0);
1460:src/keys.c    ****    return process_cmplx(c);
1461:src/keys.c    **** 
1462:src/keys.c    ****  }
1463:src/keys.c    **** 
1464:src/keys.c    **** #endif
1465:src/keys.c    **** 
1466:src/keys.c    **** /*
1467:src/keys.c    ****  *  Process a key code after CPX
1468:src/keys.c    ****  */
1469:src/keys.c    **** static int process_cmplx(const keycode c) {
1470:src/keys.c    **** #define _RARG   0xFF00
1471:src/keys.c    **** #define CSWAPXZ RARG(RARG_CSWAPX, regZ_idx)
1472:src/keys.c    **** #define CNUM(n) RARG(RARG_INTNUM_CMPLX, n)
1473:src/keys.c    **** 
1474:src/keys.c    **** 	static const unsigned short int op_map[][4] = {
1475:src/keys.c    **** 		// Row 1
1476:src/keys.c    **** 		{ 1,			1,                   0,                   0		      }, // HYP
1477:src/keys.c    **** 		{ OP_CMON | OP_RECIP,	OP_CMON | OP_SIN,    OP_CMON | OP_ASIN,   STATE_UNFINISHED    },
1478:src/keys.c    **** 		{ OP_CDYA | OP_POW,	OP_CMON | OP_COS,    OP_CMON | OP_ACOS,   STATE_UNFINISHED    },
1479:src/keys.c    **** 		{ OP_CMON | OP_SQRT,	OP_CMON | OP_TAN,    OP_CMON | OP_ATAN,   STATE_UNFINISHED    },
1480:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_NIL | OP_P2R,     OP_NIL | OP_R2P,     STATE_UNFINISHED    },
1481:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    }, // CPX
1482:src/keys.c    **** 		// Row 2
1483:src/keys.c    **** 		{ _RARG | RARG_CSTO,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1484:src/keys.c    **** 		{ _RARG | RARG_CRCL,	STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CVIEW  },
1485:src/keys.c    **** 		{ OP_NIL | OP_CRDOWN,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_CRUP    }, // R^
1486:src/keys.c    **** 		// Row 3
1487:src/keys.c    **** 		{ OP_NIL | OP_CENTER,	STATE_UNFINISHED,    OP_NIL | OP_CFILL,   OP_NIL | OP_CFILL   }, // ENTER
1488:src/keys.c    **** 		{ CSWAPXZ,		STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CSWAPX },
1489:src/keys.c    **** 		{ OP_CMON | OP_CCHS,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_CMON | OP_CCONJ  },
1490:src/keys.c    **** 		{ CONST_CMPLX(OP_PI),	STATE_UNFINISHED,    STATE_UNFINISHED,    CONST_CMPLX(OP_PI)  },
1491:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1492:src/keys.c    **** 		// Row 4
1493:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CMON | OP_EXP,    OP_CMON | OP_LN,     STATE_UNFINISHED    },
1494:src/keys.c    **** 		{ CNUM(7),		OP_CMON | OP_10POWX, OP_CMON | OP_LOG,    STATE_UNFINISHED    },
1495:src/keys.c    **** 		{ CNUM(8),		OP_CMON | OP_2POWX,  OP_CMON | OP_LG2,    STATE_UNFINISHED    },
1496:src/keys.c    **** 		{ CNUM(9),		OP_CDYA | OP_POW,    OP_CDYA | OP_LOGXY,  STATE_UNFINISHED    },
1497:src/keys.c    **** 		{ OP_CDYA | OP_DIV,	OP_CMON | OP_RECIP,  OP_CDYA | OP_PARAL,  STATE_UNFINISHED    },
1498:src/keys.c    **** 		// Row 5
1499:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CDYA | OP_COMB,   OP_CDYA | OP_PERM,   OP_CMON | OP_FACT   },
1500:src/keys.c    **** 		{ CNUM(4),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1501:src/keys.c    **** 		{ CNUM(5),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1502:src/keys.c    **** 		{ CNUM(6),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1503:src/keys.c    **** 		{ OP_CDYA | OP_MUL,	OP_CMON | OP_SQRT,   OP_CMON | OP_SQR,    OP_CMON | OP_SQR    },
1504:src/keys.c    **** 		// Row 6
1505:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1506:src/keys.c    **** 		{ CNUM(1),		TST_EQ,              TST_NE,              STATE_UNFINISHED    }, // tests
1507:src/keys.c    **** 		{ CNUM(2),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1508:src/keys.c    **** 		{ CNUM(3),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1509:src/keys.c    **** 		{ OP_CDYA | OP_SUB,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1510:src/keys.c    **** 		// Row 7
1511:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_OFF     },
ARM GAS  /tmp/ccK8gYGY.s 			page 28


1512:src/keys.c    **** 		{ CNUM(0),		OP_CMON | OP_ABS,    OP_CMON | OP_RND,    STATE_UNFINISHED    },
1513:src/keys.c    **** 		{ OP_NIL | OP_cmplxI,	OP_CMON | OP_TRUNC,  OP_CMON | OP_FRAC,   STATE_UNFINISHED    },
1514:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1515:src/keys.c    **** 		{ OP_NIL | OP_STOPWATCH, STATE_UNFINISHED,   STATE_UNFINISHED,    STATE_UNFINISHED    },
1516:src/keys.c    **** #else
1517:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1518:src/keys.c    **** #endif
1519:src/keys.c    **** 		{ OP_CDYA | OP_ADD,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1520:src/keys.c    **** #ifdef DM42
1521:src/keys.c    **** 		{ OP_NIL | OP_NOP,	OP_NIL | OP_NOP,    OP_NIL | OP_NOP,    OP_NIL | OP_NOP    }
1522:src/keys.c    **** #endif
1523:src/keys.c    **** 	};
1524:src/keys.c    **** 
1525:src/keys.c    **** 	enum shifts shift = reset_shift();
1526:src/keys.c    **** 	int lc = keycode_to_linear(c);
1527:src/keys.c    **** 	int op = op_map[lc][shift];
1528:src/keys.c    **** 	State2.cmplx = 0;
1529:src/keys.c    **** 
1530:src/keys.c    **** 	if ((op & _RARG) == _RARG) {
1531:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
1532:src/keys.c    **** 		return STATE_UNFINISHED;
1533:src/keys.c    **** 	}
1534:src/keys.c    **** 	if (c == K00) {
1535:src/keys.c    **** 		// HYP
1536:src/keys.c    **** 		process_cmdline_set_lift();
1537:src/keys.c    **** 		//		print_debug(100,1);
1538:src/keys.c    **** 		State2.hyp = 1;
1539:src/keys.c    **** 		State2.dot = op;
1540:src/keys.c    **** 		State2.cmplx = 1;
1541:src/keys.c    **** 		return STATE_UNFINISHED;
1542:src/keys.c    **** 	}
1543:src/keys.c    **** 
1544:src/keys.c    **** 	if (shift != SHIFT_N) {
1545:src/keys.c    **** 		switch (c) {
1546:src/keys.c    **** 		case K_CMPLX:
1547:src/keys.c    **** 			set_shift(shift);
1548:src/keys.c    **** 			break;
1549:src/keys.c    **** 
1550:src/keys.c    **** 		case K51:
1551:src/keys.c    **** 			if (op != STATE_UNFINISHED) {
1552:src/keys.c    **** 				if (is_bad_cmdline())
1553:src/keys.c    **** 					return STATE_UNFINISHED;
1554:src/keys.c    **** 				process_cmdline_set_lift();
1555:src/keys.c    **** 				State2.cmplx = 1;
1556:src/keys.c    **** 				State2.test = op;
1557:src/keys.c    **** 			}
1558:src/keys.c    **** 			return STATE_UNFINISHED;
1559:src/keys.c    **** 
1560:src/keys.c    **** 		case K60:
1561:src/keys.c    **** 			init_state();
1562:src/keys.c    **** 			break;
1563:src/keys.c    **** 
1564:src/keys.c    **** 		default:
1565:src/keys.c    **** 			break;
1566:src/keys.c    **** 		}
1567:src/keys.c    **** 	}
1568:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
ARM GAS  /tmp/ccK8gYGY.s 			page 29


1569:src/keys.c    **** 	return check_confirm(op);
1570:src/keys.c    **** #else
1571:src/keys.c    **** 	return op;
1572:src/keys.c    **** #endif
1573:src/keys.c    **** 
1574:src/keys.c    **** #undef _RARG
1575:src/keys.c    **** #undef CSWAPXZ
1576:src/keys.c    **** #undef CNUM
1577:src/keys.c    **** }
1578:src/keys.c    **** 
1579:src/keys.c    **** 
1580:src/keys.c    **** 
1581:src/keys.c    **** /*
1582:src/keys.c    ****  * Fairly simple routine for dealing with the HYP prefix.
1583:src/keys.c    ****  * This setting can only be followed by 4, 5, or 6 to specify
1584:src/keys.c    ****  * the function.  The inverse routines use the code too, the State2.dot
1585:src/keys.c    ****  * is 1 for normal and 0 for inverse hyperbolic.  We also have to
1586:src/keys.c    ****  * deal with the complex versions and the handling of that key and
1587:src/keys.c    ****  * the ON key are dealt with by our caller.
1588:src/keys.c    ****  */
1589:src/keys.c    **** static int process_hyp(const keycode c) {
1590:src/keys.c    **** 	static const unsigned char op_map[][2] = {
1591:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
1592:src/keys.c    **** 		{ OP_ACOSH, OP_COSH },
1593:src/keys.c    **** 		{ OP_ATANH, OP_TANH }
1594:src/keys.c    **** 	};
1595:src/keys.c    **** 	int cmplx = State2.cmplx;
1596:src/keys.c    **** 	int f = State2.dot;
1597:src/keys.c    **** 
1598:src/keys.c    **** 	State2.hyp = 0;
1599:src/keys.c    **** 	State2.cmplx = 0;
1600:src/keys.c    **** 	State2.dot = 0;
1601:src/keys.c    **** #ifdef DM42
1602:src/keys.c    **** 	reset_shift();
1603:src/keys.c    **** #endif
1604:src/keys.c    **** 	switch ((int)c) {
1605:src/keys.c    **** 
1606:src/keys.c    **** 	case K01:
1607:src/keys.c    **** 	case K02:
1608:src/keys.c    **** 	case K03:
1609:src/keys.c    **** 		return (cmplx ? OP_CMON : OP_MON) | op_map[c - K01][f];
1610:src/keys.c    **** 
1611:src/keys.c    **** 	case K_CMPLX:
1612:src/keys.c    **** 		cmplx = ! cmplx;
1613:src/keys.c    **** 		goto stay;
1614:src/keys.c    **** 
1615:src/keys.c    **** #ifndef DM42
1616:src/keys.c    **** 	case K_F: 
1617:src/keys.c    **** 	case K_G:
1618:src/keys.c    **** 		f = (c == K_F);
1619:src/keys.c    **** 		// fall through
1620:src/keys.c    **** #else
1621:src/keys.c    **** 	case K_F:
1622:src/keys.c    **** 	  if (c == K_F) f = 1 - f;
1623:src/keys.c    **** #endif
1624:src/keys.c    **** 	stay:
1625:src/keys.c    **** 		// process_cmdline_set_lift();
ARM GAS  /tmp/ccK8gYGY.s 			page 30


1626:src/keys.c    **** 	  //	  print_debug(100,2);
1627:src/keys.c    **** 	  
1628:src/keys.c    **** 	  State2.hyp = 1;
1629:src/keys.c    **** 		State2.cmplx = cmplx;
1630:src/keys.c    **** 		State2.dot = f;
1631:src/keys.c    **** 		break;
1632:src/keys.c    **** 
1633:src/keys.c    **** 	default:
1634:src/keys.c    **** 		break;
1635:src/keys.c    **** 	}
1636:src/keys.c    **** 	return STATE_UNFINISHED;
1637:src/keys.c    **** }
1638:src/keys.c    **** 
1639:src/keys.c    **** 
1640:src/keys.c    **** /*
1641:src/keys.c    ****  *  Process a key code after ->
1642:src/keys.c    ****  */
1643:src/keys.c    **** static int process_arrow(const keycode c) {
1644:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
1645:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
1646:src/keys.c    **** 		{ OP_MON | OP_2RAD,  OP_MON | OP_HMS2 },
1647:src/keys.c    **** 		{ OP_MON | OP_2GRAD, STATE_UNFINISHED }
1648:src/keys.c    **** 	};
1649:src/keys.c    **** 	static const enum single_disp disp[][2] = {
1650:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
1651:src/keys.c    **** 		{ SDISP_HEX, SDISP_DEC }
1652:src/keys.c    **** 	};
1653:src/keys.c    **** 	const int shift = reset_shift();
1654:src/keys.c    **** 	const int f = (shift == SHIFT_F);
1655:src/keys.c    **** 
1656:src/keys.c    **** 	State2.arrow = 0;
1657:src/keys.c    **** #ifdef DM42
1658:src/keys.c    **** 	set_last_menu ();
1659:src/keys.c    **** 	display_current_menu ();
1660:src/keys.c    **** #endif
1661:src/keys.c    **** #ifdef INCLUDE_C_LOCK
1662:src/keys.c    **** 	if (c == K_CMPLX && CPX_ENABLED) { // need this before the SHIFT_N test
1663:src/keys.c    **** 	  if (!C_LOCK_ON) {
1664:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
1665:src/keys.c    **** 	  }
1666:src/keys.c    **** 	  else {
1667:src/keys.c    **** 	    return OP_NIL | OP_C_OFF;
1668:src/keys.c    **** 	  }
1669:src/keys.c    **** 	}
1670:src/keys.c    **** #endif
1671:src/keys.c    **** 	if (shift == SHIFT_N) return STATE_UNFINISHED;
1672:src/keys.c    **** 	
1673:src/keys.c    **** 	if (c >= K10 && c <= K12)
1674:src/keys.c    **** 		return op_map[c - K10][f];
1675:src/keys.c    **** 
1676:src/keys.c    **** 	if (c == K22 || c == K23)
1677:src/keys.c    **** 		set_smode(disp[c - K22][f]);
1678:src/keys.c    **** 
1679:src/keys.c    **** 	return STATE_UNFINISHED;
1680:src/keys.c    **** }
1681:src/keys.c    **** 
1682:src/keys.c    **** 
ARM GAS  /tmp/ccK8gYGY.s 			page 31


1683:src/keys.c    **** /* Process a GTO . sequence
1684:src/keys.c    ****  */
1685:src/keys.c    **** static int gtodot_digit(const int n) {
  30              		.loc 1 1685 38 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
1686:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  34              		.loc 1 1686 2 view .LVU1
1687:src/keys.c    **** 	const int lib = nLIB(state_pc());
  35              		.loc 1 1687 18 is_stmt 0 view .LVU2
  36 0000 144B     		ldr	r3, .L5
  37 0002 1A68     		ldr	r2, [r3]
1685:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  38              		.loc 1 1685 38 view .LVU3
  39 0004 70B5     		push	{r4, r5, r6, lr}
  40              		.cfi_def_cfa_offset 16
  41              		.cfi_offset 4, -16
  42              		.cfi_offset 5, -12
  43              		.cfi_offset 6, -8
  44              		.cfi_offset 14, -4
1686:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  45              		.loc 1 1686 24 view .LVU4
  46 0006 144E     		ldr	r6, .L5+4
  47              		.loc 1 1687 18 view .LVU5
  48 0008 B2F8E057 		ldrh	r5, [r2, #2016]
1686:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  49              		.loc 1 1686 24 view .LVU6
  50 000c 3389     		ldrh	r3, [r6, #8]
  51              		.loc 1 1687 18 view .LVU7
  52 000e AD0B     		lsrs	r5, r5, #14
1686:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  53              		.loc 1 1686 32 view .LVU8
  54 0010 03EB8303 		add	r3, r3, r3, lsl #2
1685:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  55              		.loc 1 1685 38 view .LVU9
  56 0014 0446     		mov	r4, r0
1688:src/keys.c    **** 
1689:src/keys.c    **** 	if (val > sizeLIB(lib) / 10)
  57              		.loc 1 1689 12 view .LVU10
  58 0016 2846     		mov	r0, r5
  59              	.LVL1:
1686:src/keys.c    **** 	const int lib = nLIB(state_pc());
  60              		.loc 1 1686 12 view .LVU11
  61 0018 04EB4304 		add	r4, r4, r3, lsl #1
  62              	.LVL2:
1687:src/keys.c    **** 
  63              		.loc 1 1687 2 is_stmt 1 view .LVU12
  64              		.loc 1 1689 2 view .LVU13
  65              		.loc 1 1689 12 is_stmt 0 view .LVU14
  66 001c FFF7FEFF 		bl	sizeLIB
  67              	.LVL3:
  68              		.loc 1 1689 25 view .LVU15
  69 0020 0E4A     		ldr	r2, .L5+8
  70 0022 82FB0032 		smull	r3, r2, r2, r0
  71 0026 C317     		asrs	r3, r0, #31
  72 0028 C3EBA203 		rsb	r3, r3, r2, asr #2
ARM GAS  /tmp/ccK8gYGY.s 			page 32


  73              		.loc 1 1689 5 view .LVU16
  74 002c A342     		cmp	r3, r4
  75 002e 0FDB     		blt	.L1
1690:src/keys.c    **** 		return val;
1691:src/keys.c    **** 	if (++State2.numdigit == 3 + (lib & 1))
  76              		.loc 1 1691 2 is_stmt 1 view .LVU17
  77              		.loc 1 1691 6 is_stmt 0 view .LVU18
  78 0030 F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
  79              		.loc 1 1691 29 view .LVU19
  80 0032 15F0010F 		tst	r5, #1
  81              		.loc 1 1691 6 view .LVU20
  82 0036 03F10103 		add	r3, r3, #1
  83 003a DBB2     		uxtb	r3, r3
  84              		.loc 1 1691 29 view .LVU21
  85 003c 0CBF     		ite	eq
  86 003e 0322     		moveq	r2, #3
  87 0040 0422     		movne	r2, #4
  88              		.loc 1 1691 5 view .LVU22
  89 0042 9342     		cmp	r3, r2
1692:src/keys.c    **** 		return val;
1693:src/keys.c    **** 	State2.digval = val;
  90              		.loc 1 1693 2 is_stmt 1 view .LVU23
  91              		.loc 1 1693 16 is_stmt 0 view .LVU24
  92 0044 18BF     		it	ne
  93 0046 3481     		strhne	r4, [r6, #8]	@ movhi
1694:src/keys.c    **** 	return -1;
  94              		.loc 1 1694 2 is_stmt 1 view .LVU25
1691:src/keys.c    **** 		return val;
  95              		.loc 1 1691 5 is_stmt 0 view .LVU26
  96 0048 F372     		strb	r3, [r6, #11]
  97              		.loc 1 1694 9 view .LVU27
  98 004a 18BF     		it	ne
  99 004c 4FF0FF34 		movne	r4, #-1
 100              	.LVL4:
 101              	.L1:
1695:src/keys.c    **** }
 102              		.loc 1 1695 1 view .LVU28
 103 0050 2046     		mov	r0, r4
 104 0052 70BD     		pop	{r4, r5, r6, pc}
 105              	.LVL5:
 106              	.L6:
 107              		.loc 1 1695 1 view .LVU29
 108              		.align	2
 109              	.L5:
 110 0054 00000000 		.word	main_ram
 111 0058 00000000 		.word	StateWhileOn
 112 005c 67666666 		.word	1717986919
 113              		.cfi_endproc
 114              	.LFE30:
 116              		.section	.text.check_f_key,"ax",%progbits
 117              		.align	1
 118              		.p2align 2,,3
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu fpv4-sp-d16
 124              	check_f_key:
ARM GAS  /tmp/ccK8gYGY.s 			page 33


 125              	.LVL6:
 126              	.LFB17:
 745:src/keys.c    **** 	const int code = 100 + n;
 127              		.loc 1 745 47 is_stmt 1 view -0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 746:src/keys.c    **** 	unsigned int pc = state_pc();
 131              		.loc 1 746 2 view .LVU31
 745:src/keys.c    **** 	const int code = 100 + n;
 132              		.loc 1 745 47 is_stmt 0 view .LVU32
 133 0000 38B5     		push	{r3, r4, r5, lr}
 134              		.cfi_def_cfa_offset 16
 135              		.cfi_offset 3, -16
 136              		.cfi_offset 4, -12
 137              		.cfi_offset 5, -8
 138              		.cfi_offset 14, -4
 749:src/keys.c    **** 		if (isXROM(pc))
 139              		.loc 1 749 6 view .LVU33
 140 0002 0D4B     		ldr	r3, .L17
 141 0004 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 142              	.LVL7:
 747:src/keys.c    **** 
 143              		.loc 1 747 2 is_stmt 1 view .LVU34
 749:src/keys.c    **** 		if (isXROM(pc))
 144              		.loc 1 749 2 view .LVU35
 749:src/keys.c    **** 		if (isXROM(pc))
 145              		.loc 1 749 5 is_stmt 0 view .LVU36
 146 0006 5B06     		lsls	r3, r3, #25
 745:src/keys.c    **** 	const int code = 100 + n;
 147              		.loc 1 745 47 view .LVU37
 148 0008 0C46     		mov	r4, r1
 749:src/keys.c    **** 		if (isXROM(pc))
 149              		.loc 1 749 5 view .LVU38
 150 000a 0FD5     		bpl	.L11
 747:src/keys.c    **** 
 151              		.loc 1 747 20 view .LVU39
 152 000c 0B4B     		ldr	r3, .L17+4
 153              	.LVL8:
 747:src/keys.c    **** 
 154              		.loc 1 747 20 view .LVU40
 155 000e 1B68     		ldr	r3, [r3]
 156              	.LVL9:
 747:src/keys.c    **** 
 157              		.loc 1 747 15 view .LVU41
 158 0010 B3F8E037 		ldrh	r3, [r3, #2016]
 159              	.LVL10:
 750:src/keys.c    **** 			pc = 1;
 160              		.loc 1 750 3 is_stmt 1 view .LVU42
 750:src/keys.c    **** 			pc = 1;
 161              		.loc 1 750 7 is_stmt 0 view .LVU43
 162 0014 9A0B     		lsrs	r2, r3, #14
 751:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 163              		.loc 1 751 7 view .LVU44
 164 0016 032A     		cmp	r2, #3
 165              	.LVL11:
 752:src/keys.c    **** 			return RARG(RARG_XEQ, code);
ARM GAS  /tmp/ccK8gYGY.s 			page 34


 166              		.loc 1 752 3 is_stmt 1 view .LVU45
 746:src/keys.c    **** 	unsigned int pc = state_pc();
 167              		.loc 1 746 12 is_stmt 0 view .LVU46
 168 0018 00F16405 		add	r5, r0, #100
 169              	.LVL12:
 752:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 170              		.loc 1 752 7 view .LVU47
 171 001c 2946     		mov	r1, r5
 172              	.LVL13:
 752:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 173              		.loc 1 752 7 view .LVU48
 174 001e 14BF     		ite	ne
 175 0020 1846     		movne	r0, r3
 176              	.LVL14:
 752:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 177              		.loc 1 752 7 view .LVU49
 178 0022 0120     		moveq	r0, #1
 179 0024 0222     		movs	r2, #2
 180 0026 FFF7FEFF 		bl	find_label_from
 181              	.LVL15:
 752:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 182              		.loc 1 752 6 view .LVU50
 183 002a 08B9     		cbnz	r0, .L16
 184              	.LVL16:
 185              	.L11:
 755:src/keys.c    **** }
 186              		.loc 1 755 9 view .LVU51
 187 002c 2046     		mov	r0, r4
 756:src/keys.c    **** 
 188              		.loc 1 756 1 view .LVU52
 189 002e 38BD     		pop	{r3, r4, r5, pc}
 190              	.LVL17:
 191              	.L16:
 753:src/keys.c    **** 	}
 192              		.loc 1 753 4 is_stmt 1 view .LVU53
 753:src/keys.c    **** 	}
 193              		.loc 1 753 11 is_stmt 0 view .LVU54
 194 0030 45F4C840 		orr	r0, r5, #25600
 756:src/keys.c    **** 
 195              		.loc 1 756 1 view .LVU55
 196 0034 38BD     		pop	{r3, r4, r5, pc}
 197              	.LVL18:
 198              	.L18:
 756:src/keys.c    **** 
 199              		.loc 1 756 1 view .LVU56
 200 0036 00BF     		.align	2
 201              	.L17:
 202 0038 00000000 		.word	StateWhileOn
 203 003c 00000000 		.word	main_ram
 204              		.cfi_endproc
 205              	.LFE17:
 207              		.section	.text.is_label_or_end_at,"ax",%progbits
 208              		.align	1
 209              		.p2align 2,,3
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
ARM GAS  /tmp/ccK8gYGY.s 			page 35


 213              		.fpu fpv4-sp-d16
 215              	is_label_or_end_at:
 216              	.LVL19:
 217              	.LFB54:
1696:src/keys.c    **** 
1697:src/keys.c    **** static int gtodot_fkey(int n) {
1698:src/keys.c    **** 	const int code = 100 + n;
1699:src/keys.c    **** 	unsigned int pc = state_pc();
1700:src/keys.c    **** 
1701:src/keys.c    **** 	if(isXROM(pc))
1702:src/keys.c    **** 		pc = 1;
1703:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
1704:src/keys.c    **** 	if (pc > 0)
1705:src/keys.c    **** 		return pc;
1706:src/keys.c    **** 	return state_pc();
1707:src/keys.c    **** }
1708:src/keys.c    **** 
1709:src/keys.c    **** static int process_gtodot(const keycode c) {
1710:src/keys.c    **** 	int pc = -1;
1711:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
1712:src/keys.c    **** 
1713:src/keys.c    **** 	if (rawpc <= 9) {
1714:src/keys.c    **** 		// Digit 0 - 9
1715:src/keys.c    **** 		pc = gtodot_digit(rawpc);
1716:src/keys.c    **** 	}
1717:src/keys.c    **** #ifdef DM42
1718:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regX_idx) rawpc = gtodot_digit(1); 
1719:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
1720:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
1721:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
1722:src/keys.c    **** #endif
1723:src/keys.c    **** 	else if (c >= K00 && c <= K03) {
1724:src/keys.c    **** 		// A - D
1725:src/keys.c    **** 		rawpc = gtodot_fkey(c - K00);
1726:src/keys.c    **** 		goto fin;
1727:src/keys.c    **** 	}
1728:src/keys.c    **** 	else if (c == K62) {
1729:src/keys.c    **** 		// .
1730:src/keys.c    **** 		rawpc = ProgSize;
1731:src/keys.c    **** 		goto fin;
1732:src/keys.c    **** 	}
1733:src/keys.c    **** 	else if (c == K20) {
1734:src/keys.c    **** 		// ENTER - short circuit processing
1735:src/keys.c    **** 		pc = State2.digval;
1736:src/keys.c    **** 	}
1737:src/keys.c    **** 	else if (c == K24) {
1738:src/keys.c    **** 		// backspace
1739:src/keys.c    **** 		if (State2.numdigit == 0) {
1740:src/keys.c    **** 			goto fin2;
1741:src/keys.c    **** 		} else {
1742:src/keys.c    **** 			State2.numdigit--;
1743:src/keys.c    **** 			State2.digval /= 10;
1744:src/keys.c    **** 		}
1745:src/keys.c    **** 	}
1746:src/keys.c    **** 	else if (c == K_UP) {
1747:src/keys.c    **** 		// up
1748:src/keys.c    **** 		rawpc = state_pc();
ARM GAS  /tmp/ccK8gYGY.s 			page 36


1749:src/keys.c    **** 		if (rawpc == 1)
1750:src/keys.c    **** 			rawpc = 0;
1751:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
1752:src/keys.c    **** 		update_program_bounds(1);
1753:src/keys.c    **** 		rawpc = ProgBegin;
1754:src/keys.c    **** 		goto fin;
1755:src/keys.c    **** 	}
1756:src/keys.c    **** 	else if (c == K_DOWN) {
1757:src/keys.c    **** 		// down
1758:src/keys.c    **** 		update_program_bounds(1);
1759:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
1760:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
1761:src/keys.c    **** 			rawpc = 1;
1762:src/keys.c    **** 		goto fin;
1763:src/keys.c    **** 	}
1764:src/keys.c    **** 	if (pc >= 0) {
1765:src/keys.c    **** 		rawpc = find_user_pc(pc);
1766:src/keys.c    **** fin:		set_pc(rawpc);
1767:src/keys.c    **** fin2:		State2.gtodot = 0;
1768:src/keys.c    **** 		State2.digval = 0;
1769:src/keys.c    **** 		State2.numdigit = 0;
1770:src/keys.c    **** 	}
1771:src/keys.c    **** 	return STATE_UNFINISHED;
1772:src/keys.c    **** }
1773:src/keys.c    **** 
1774:src/keys.c    **** 
1775:src/keys.c    **** /* Process a keystroke in alpha mode
1776:src/keys.c    ****  */
1777:src/keys.c    **** static int process_alpha(const keycode c) {
1778:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
1779:src/keys.c    ****         int op = STATE_UNFINISHED;
1780:src/keys.c    **** 	const enum shifts shift = reset_shift();
1781:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
1782:src/keys.c    **** 	State2.alpha_pos = 0;
1783:src/keys.c    **** 
1784:src/keys.c    **** 	switch (c) {
1785:src/keys.c    **** 	case K10:	// STO
1786:src/keys.c    **** 		if (shift == SHIFT_F) {
1787:src/keys.c    **** 			init_arg(RARG_ASTO);
1788:src/keys.c    **** 			return STATE_UNFINISHED;
1789:src/keys.c    **** 		}
1790:src/keys.c    **** 		break;
1791:src/keys.c    **** 
1792:src/keys.c    **** 	case K11:	// RCL - maybe view
1793:src/keys.c    **** 		if (shift == SHIFT_F) {
1794:src/keys.c    **** 			init_arg(RARG_ARCL);
1795:src/keys.c    **** 			return STATE_UNFINISHED;
1796:src/keys.c    **** 		} else if (shift == SHIFT_H) {
1797:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
1798:src/keys.c    **** 			return STATE_UNFINISHED;
1799:src/keys.c    **** 		}
1800:src/keys.c    **** 		break;
1801:src/keys.c    **** 
1802:src/keys.c    **** 	case K20:	// Enter - maybe exit alpha mode
1803:src/keys.c    **** 		if (shift == SHIFT_G || shift == SHIFT_H)
1804:src/keys.c    **** 			break;
1805:src/keys.c    **** 		if (shift == SHIFT_F && ! State2.runmode) {
ARM GAS  /tmp/ccK8gYGY.s 			page 37


1806:src/keys.c    **** 			State2.multi = 1;
1807:src/keys.c    **** 			State2.numdigit = 0;
1808:src/keys.c    **** 			CmdBase = DBL_ALPHA;
1809:src/keys.c    **** 			return STATE_UNFINISHED;
1810:src/keys.c    **** 		}
1811:src/keys.c    **** 		State2.alphas = 0;
1812:src/keys.c    **** 		State2.alphashift = 0;
1813:src/keys.c    **** #ifdef DM42
1814:src/keys.c    **** 		set_menu(M_Last);
1815:src/keys.c    **** 		display_current_menu();
1816:src/keys.c    **** #endif
1817:src/keys.c    **** 		return op;
1818:src/keys.c    **** 
1819:src/keys.c    **** 	case K24:	// Clx - backspace, clear Alpha
1820:src/keys.c    **** 		if (shift == SHIFT_N)
1821:src/keys.c    **** 			return STATE_BACKSPACE;
1822:src/keys.c    **** 		if (shift == SHIFT_H)
1823:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
1824:src/keys.c    **** 		break;
1825:src/keys.c    **** 
1826:src/keys.c    **** 	case K_UP:
1827:src/keys.c    **** 	  if (shift == SHIFT_N) {
1828:src/keys.c    **** 	    if ( State2.runmode ) {
1829:src/keys.c    **** 	      // Alpha scroll left
1830:src/keys.c    **** #ifdef DM42
1831:src/keys.c    **** 	      /* 
1832:src/keys.c    **** 	       * The numbers 20 and 12 below should match the same 
1833:src/keys.c    **** 	       * numbers in display.c, lines 2414 and 2416.
1834:src/keys.c    **** 	       */
1835:src/keys.c    **** #ifdef BIGGER_DISPLAY
1836:src/keys.c    **** 	      if ((alpha_pos == 0) || (alen()-6*alpha_pos >= 20)) {
1837:src/keys.c    **** 		alpha_pos += 1;
1838:src/keys.c    **** 	      }
1839:src/keys.c    **** #else
1840:src/keys.c    **** 	      if ((alpha_pos == 0) || (alen()-6*alpha_pos >= 12)) {
1841:src/keys.c    **** 		alpha_pos += 1;
1842:src/keys.c    **** 	      }
1843:src/keys.c    **** #endif
1844:src/keys.c    **** 	      State2.alpha_pos = alpha_pos;
1845:src/keys.c    **** #else
1846:src/keys.c    **** 	      int n = alpha_pos + 1;
1847:src/keys.c    **** 	      State2.alpha_pos = ( n < ( alen() + 5 ) / 6 ) ? n : alpha_pos;
1848:src/keys.c    **** #endif
1849:src/keys.c    **** 	      return STATE_UNFINISHED;
1850:src/keys.c    **** 	    }
1851:src/keys.c    **** 	    return STATE_BST;
1852:src/keys.c    **** 	  }
1853:src/keys.c    **** 	  break;
1854:src/keys.c    **** 
1855:src/keys.c    **** 	case K_DOWN:
1856:src/keys.c    **** 	  if (shift == SHIFT_N) {
1857:src/keys.c    **** 	    if ( State2.runmode ) {
1858:src/keys.c    **** 	      // Alpha scroll right
1859:src/keys.c    **** 	      if (alpha_pos > 0)
1860:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
1861:src/keys.c    **** 	      return STATE_UNFINISHED;
1862:src/keys.c    **** 	    }
ARM GAS  /tmp/ccK8gYGY.s 			page 38


1863:src/keys.c    **** 	    return STATE_SST;
1864:src/keys.c    **** 	  }
1865:src/keys.c    **** 	  break;
1866:src/keys.c    **** 
1867:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
1868:src/keys.c    **** 		if (shift == SHIFT_F)
1869:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
1870:src/keys.c    **** 		else if (shift == SHIFT_H)
1871:src/keys.c    **** 			return OP_NIL | OP_OFF;
1872:src/keys.c    **** 		else if (shift == SHIFT_N) {
1873:src/keys.c    **** #ifdef DM42
1874:src/keys.c    **** 		  set_menu(M_Last);
1875:src/keys.c    **** 		  display_current_menu();
1876:src/keys.c    **** #endif
1877:src/keys.c    **** 		  init_state();
1878:src/keys.c    **** 		}
1879:src/keys.c    **** 		return STATE_UNFINISHED;
1880:src/keys.c    **** 
1881:src/keys.c    **** 	case K63:
1882:src/keys.c    **** 		if (shift == SHIFT_F)
1883:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
1884:src/keys.c    **** 		break;
1885:src/keys.c    **** 
1886:src/keys.c    **** 	default:
1887:src/keys.c    **** 		break;
1888:src/keys.c    **** 	}
1889:src/keys.c    **** 
1890:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
1891:src/keys.c    **** 	if (ch == 0)
1892:src/keys.c    **** 		return STATE_UNFINISHED;
1893:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
1894:src/keys.c    **** }
1895:src/keys.c    **** 
1896:src/keys.c    **** /*
1897:src/keys.c    ****  *  Code to handle all commands with arguments
1898:src/keys.c    ****  */
1899:src/keys.c    **** static void reset_arg(void) {
1900:src/keys.c    **** 	init_arg((enum rarg) 0);
1901:src/keys.c    **** 	State2.rarg = 0;
1902:src/keys.c    **** }
1903:src/keys.c    **** 
1904:src/keys.c    ****  static int arg_eval(unsigned int val) {
1905:src/keys.c    ****    const unsigned int base = CmdBase;
1906:src/keys.c    ****    int r = RARG(base, val 
1907:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
1908:src/keys.c    **** 		+ (State2.local ? LOCAL_REG_BASE : 0));
1909:src/keys.c    ****    const unsigned int ssize = (! UState.stack_depth || ! State2.runmode ) ? 4 : 8;
1910:src/keys.c    **** 
1911:src/keys.c    ****    if (! State2.ind) {
1912:src/keys.c    ****      /*
1913:src/keys.c    ****       *  Central argument checking for some commands
1914:src/keys.c    ****       */
1915:src/keys.c    **** #ifdef SHOW_COMPLEX_REGS
1916:src/keys.c    ****      if (argcmds[base].cmplx && val > TOPREALREG - 2 ) {
1917:src/keys.c    ****        // remap complex registers cY->T, cZ->A, cT->C
1918:src/keys.c    ****        // 99,   X,   Y,   Z,   T,   A,   B,   C,   D,   L,   I,   J,   K
1919:src/keys.c    ****        static char remap[] = {  0, 100, 102, 104, 106,   0,   0,   0,   0, 108,   0, 110,   0 };
ARM GAS  /tmp/ccK8gYGY.s 			page 39


1920:src/keys.c    ****        val = (unsigned int) remap[ val - (TOPREALREG - 1) ];
1921:src/keys.c    ****        if ( val == 0 )
1922:src/keys.c    **** 	 return STATE_UNFINISHED;
1923:src/keys.c    ****        r = RARG(base, val);
1924:src/keys.c    ****      }
1925:src/keys.c    **** #endif
1926:src/keys.c    **** #ifdef INCLUDE_C_LOCK
1927:src/keys.c    ****      if (argcmds[base].cmplx && (val > (unsigned int)(C_LOCKED ? 0 : TOPREALREG - 2) && (val & 1)))
1928:src/keys.c    ****        if (C_LOCKED) {
1929:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
1930:src/keys.c    **** 	 return STATE_UNFINISHED; // either leaves arg blank (if EXIT pressed) or with one digit in (STO)
1931:src/keys.c    ****        }
1932:src/keys.c    ****        else {
1933:src/keys.c    **** 	 return STATE_UNFINISHED;
1934:src/keys.c    ****        }
1935:src/keys.c    ****      }
1936:src/keys.c    **** #else
1937:src/keys.c    ****      if (argcmds[base].cmplx && (val > TOPREALREG - 2 && (val & 1)))
1938:src/keys.c    ****        // Disallow odd complex register > 98
1939:src/keys.c    ****        return STATE_UNFINISHED;
1940:src/keys.c    **** #endif
1941:src/keys.c    ****      if ((base == RARG_STOSTK || base == RARG_RCLSTK) && (val > TOPREALREG - ssize))
1942:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
1943:src/keys.c    ****        return STATE_UNFINISHED;
1944:src/keys.c    ****    }
1945:src/keys.c    ****    // Build op-code
1946:src/keys.c    ****    reset_arg();
1947:src/keys.c    ****    return r;
1948:src/keys.c    ****  }
1949:src/keys.c    **** 
1950:src/keys.c    **** static int arg_digit(int n) {
1951:src/keys.c    **** 	int lim;
1952:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1953:src/keys.c    **** 	int dispmode = get_dispmode_digs(&lim);
1954:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
1955:src/keys.c    **** #else
1956:src/keys.c    **** 	const unsigned int base = CmdBase;
1957:src/keys.c    **** #endif
1958:src/keys.c    **** 	const unsigned int val = State2.digval * 10 + n;
1959:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
1960:src/keys.c    **** 	
1961:src/keys.c    **** 	if (State2.local) {
1962:src/keys.c    **** 		// Handle local registers and flags
1963:src/keys.c    **** 		lim = MAX_LOCAL_DIRECT - 1;				// default
1964:src/keys.c    **** 		if (State2.runmode) {
1965:src/keys.c    **** 			if (LocalRegs == 0)
1966:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
1967:src/keys.c    **** 			if (is_reg) {
1968:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
1969:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
1970:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
1971:src/keys.c    **** 			}
1972:src/keys.c    **** 		}
1973:src/keys.c    **** 	}
1974:src/keys.c    **** 	else if (is_reg)						// normal register
1975:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
1976:src/keys.c    **** 	else {
ARM GAS  /tmp/ccK8gYGY.s 			page 40


1977:src/keys.c    **** 		lim = (int) argcmds[base].lim;				// any other command
1978:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
1979:src/keys.c    **** 			lim = RARG_IND - 1;
1980:src/keys.c    **** 	}
1981:src/keys.c    **** 	if ((int) val > lim)
1982:src/keys.c    **** 		return STATE_UNFINISHED;
1983:src/keys.c    **** 
1984:src/keys.c    **** 	State2.digval = val;
1985:src/keys.c    **** 	++State2.numdigit;
1986:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
1987:src/keys.c    **** 		int result = arg_eval(val);
1988:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
1989:src/keys.c    **** 			--State2.numdigit;
1990:src/keys.c    **** 			State2.digval /= 10;
1991:src/keys.c    **** 		}
1992:src/keys.c    **** 		return result;
1993:src/keys.c    **** 	}
1994:src/keys.c    **** 	return STATE_UNFINISHED;
1995:src/keys.c    **** }
1996:src/keys.c    **** 
1997:src/keys.c    **** static int arg_fkey(int n) {
1998:src/keys.c    **** 	const unsigned int b = CmdBase;
1999:src/keys.c    **** 
2000:src/keys.c    **** 	if (argcmds[b].label || (b >= RARG_SF && b <= RARG_FCF))
2001:src/keys.c    **** 	{
2002:src/keys.c    **** 		if (State2.ind || State2.numdigit > 0)
2003:src/keys.c    **** 			return STATE_UNFINISHED;
2004:src/keys.c    **** 		if (argcmds[b].lim < 100)
2005:src/keys.c    **** 			return STATE_UNFINISHED;
2006:src/keys.c    **** 		return arg_eval(n + 100);
2007:src/keys.c    **** 	}
2008:src/keys.c    **** 	return STATE_UNFINISHED;
2009:src/keys.c    **** }
2010:src/keys.c    **** 
2011:src/keys.c    **** static int arg_storcl_check(const unsigned int b, const int cmplx) {
2012:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
2013:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || b == RARG_FLRCL ||
2014:src/keys.c    **** 			(cmplx && (b == RARG_CSTO || b == RARG_CRCL || b == RARG_FLCRCL)));
2015:src/keys.c    **** #else
2016:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || (cmplx && (b == RARG_CSTO || b == RARG_CRCL )));
2017:src/keys.c    **** #endif
2018:src/keys.c    **** }
2019:src/keys.c    **** 
2020:src/keys.c    **** static int arg_storcl(const unsigned int n, int cmplx) {
2021:src/keys.c    **** 	unsigned int b = CmdBase;
2022:src/keys.c    **** 
2023:src/keys.c    **** 	if (arg_storcl_check(b, cmplx)) {
2024:src/keys.c    **** 		CmdBase += n;
2025:src/keys.c    **** 		return 1;
2026:src/keys.c    **** 	}
2027:src/keys.c    **** 	/* And we can turn off the operation too */
2028:src/keys.c    **** 	if (b >= n) {
2029:src/keys.c    **** 		b -= n;
2030:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
2031:src/keys.c    **** 			CmdBase = b;
2032:src/keys.c    **** 			return 1;
2033:src/keys.c    **** 		}
ARM GAS  /tmp/ccK8gYGY.s 			page 41


2034:src/keys.c    **** 	}
2035:src/keys.c    **** 	return 0;
2036:src/keys.c    **** }
2037:src/keys.c    **** 
2038:src/keys.c    **** static int process_arg_dot(const unsigned int base) {
2039:src/keys.c    **** 
2040:src/keys.c    **** 	if (State2.numdigit == 0) {
2041:src/keys.c    **** 		// Only valid at beginning of entry
2042:src/keys.c    **** 		if (State2.dot || State2.local) {
2043:src/keys.c    **** 			// '..' or ENTER '.' = X
2044:src/keys.c    **** 			State2.local = 0;
2045:src/keys.c    **** 			return arg_eval(regX_idx);
2046:src/keys.c    **** 		}
2047:src/keys.c    **** 		if (argcmds[base].local || State2.ind) {
2048:src/keys.c    **** 			// local register or flag select
2049:src/keys.c    **** 			State2.local = 1;
2050:src/keys.c    **** 		}
2051:src/keys.c    **** 		else if (base == RARG_GTO || base == RARG_XEQ) {
2052:src/keys.c    **** 			// Special GTO . sequence
2053:src/keys.c    **** 			if (! State2.ind) {
2054:src/keys.c    **** 				State2.gtodot = 1;
2055:src/keys.c    **** 				reset_arg();
2056:src/keys.c    **** 			}
2057:src/keys.c    **** 		}
2058:src/keys.c    **** 	}
2059:src/keys.c    **** 	return STATE_UNFINISHED;
2060:src/keys.c    **** }
2061:src/keys.c    **** 
2062:src/keys.c    **** static int process_arg_shuffle(int r) {
2063:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
2064:src/keys.c    **** 	if (State2.numdigit < 4)
2065:src/keys.c    **** 		return STATE_UNFINISHED;
2066:src/keys.c    **** 	return arg_eval(State2.digval);
2067:src/keys.c    **** }
2068:src/keys.c    **** 
2069:src/keys.c    **** 
2070:src/keys.c    **** static int process_arg(const keycode c) {
2071:src/keys.c    **** 	unsigned int base = CmdBase;
2072:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
2073:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
2074:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
2075:src/keys.c    **** 	const enum shifts shift = reset_shift();
2076:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
2077:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
2078:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
2079:src/keys.c    **** 
2080:src/keys.c    **** 	n &= ~NO_SHORT;
2081:src/keys.c    **** 	if (base >= NUM_RARG) {
2082:src/keys.c    **** 		reset_arg();
2083:src/keys.c    **** 		return STATE_UNFINISHED;
2084:src/keys.c    **** 	}
2085:src/keys.c    **** #ifdef DM42
2086:src/keys.c    **** 	if ( ! shorthand && ! State2.dot && ! State2.shuffle ) {
2087:src/keys.c    **** 	  switch (n) {
2088:src/keys.c    **** 	  case regX_idx:
2089:src/keys.c    **** 	    return arg_digit(1);
2090:src/keys.c    **** 	  case regY_idx:
ARM GAS  /tmp/ccK8gYGY.s 			page 42


2091:src/keys.c    **** 	    return arg_digit(2);
2092:src/keys.c    **** 	  case regZ_idx:
2093:src/keys.c    **** 	    return arg_digit(3);
2094:src/keys.c    **** 	  case regT_idx:
2095:src/keys.c    **** 	    return arg_digit(4);
2096:src/keys.c    **** 	  case 5:
2097:src/keys.c    **** 	  case 6:
2098:src/keys.c    **** 	  case 7:
2099:src/keys.c    **** 	  case 8:
2100:src/keys.c    **** 	  case 9:
2101:src/keys.c    **** 	  case 0:
2102:src/keys.c    **** 	    return arg_digit(n);
2103:src/keys.c    **** 	  }
2104:src/keys.c    **** 	}
2105:src/keys.c    **** #else
2106:src/keys.c    **** 	if (n <= 9 && ! shorthand && ! State2.dot && ! State2.shuffle)
2107:src/keys.c    **** 		return arg_digit(n);
2108:src/keys.c    **** #endif	
2109:src/keys.c    **** 	if (shorthand)
2110:src/keys.c    **** 		// row column shorthand addressing
2111:src/keys.c    **** 		return arg_eval(keycode_to_row_column(c));
2112:src/keys.c    **** 
2113:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
2114:src/keys.c    **** #ifdef DM42
2115:src/keys.c    **** 	if (base == RARG_FIX || base == RARG_SIG || base == RARG_SIG0) {
2116:src/keys.c    **** 		switch ((int)c) {
2117:src/keys.c    **** 		case K_UP:	// up arrow
2118:src/keys.c    **** 		  if (base == RARG_FIX) {
2119:src/keys.c    **** 		    base = RARG_SIG;
2120:src/keys.c    **** 		    break;
2121:src/keys.c    **** 		  }
2122:src/keys.c    **** 		  if (base == RARG_SIG) {
2123:src/keys.c    **** 		    base = RARG_SIG0;
2124:src/keys.c    **** 		    break;
2125:src/keys.c    **** 		  }
2126:src/keys.c    **** 		  if (base == RARG_SIG0) {
2127:src/keys.c    **** 		    base = RARG_FIX;
2128:src/keys.c    **** 		    break;
2129:src/keys.c    **** 		  }
2130:src/keys.c    **** 		case K_DOWN:	// down arrow
2131:src/keys.c    **** 		case K01:	// B
2132:src/keys.c    **** 		  if (base == RARG_FIX) {
2133:src/keys.c    **** 		    base = RARG_SIG0;
2134:src/keys.c    **** 		    break;
2135:src/keys.c    **** 		  }
2136:src/keys.c    **** 		  if (base == RARG_SIG) {
2137:src/keys.c    **** 		    base = RARG_FIX;
2138:src/keys.c    **** 		    break;
2139:src/keys.c    **** 		  }
2140:src/keys.c    **** 		  if (base == RARG_SIG0) {
2141:src/keys.c    **** 		    base = RARG_SIG;
2142:src/keys.c    **** 		    break;
2143:src/keys.c    **** 		  }
2144:src/keys.c    **** 		}
2145:src/keys.c    **** 	}
2146:src/keys.c    **** 		CmdBase = base;
2147:src/keys.c    **** #else
ARM GAS  /tmp/ccK8gYGY.s 			page 43


2148:src/keys.c    **** 	if (base >= RARG_FIX && base <= RARG_SIG0) {
2149:src/keys.c    **** 		switch ((int)c) {
2150:src/keys.c    **** 		case K_UP:	// up arrow
2151:src/keys.c    **** 			if (--base < RARG_FIX)
2152:src/keys.c    **** 				base = RARG_SIG0;
2153:src/keys.c    **** 			break;
2154:src/keys.c    **** 
2155:src/keys.c    **** 		case K_DOWN:	// down arrow
2156:src/keys.c    **** 		case K01:	// B
2157:src/keys.c    **** 			if (++base > RARG_SIG0)
2158:src/keys.c    **** 				base = RARG_FIX;
2159:src/keys.c    **** 			break;
2160:src/keys.c    **** 		}
2161:src/keys.c    **** 		CmdBase = base;
2162:src/keys.c    **** 	}
2163:src/keys.c    **** #endif
2164:src/keys.c    **** #endif
2165:src/keys.c    **** 	/*
2166:src/keys.c    **** 	 *  So far, we've got the digits and some special label addressing keys
2167:src/keys.c    **** 	 *  Handle the rest here.
2168:src/keys.c    **** 	 */
2169:src/keys.c    **** 	switch ((int)c) {
2170:src/keys.c    **** 	case K_F:
2171:src/keys.c    **** 		if (label_addressing)
2172:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
2173:src/keys.c    **** 		break;
2174:src/keys.c    **** 
2175:src/keys.c    **** 	case K_ARROW:		// arrow
2176:src/keys.c    **** 		if (!State2.dot && argcmds[base].indirectokay) {
2177:src/keys.c    **** 			State2.ind = ! State2.ind;
2178:src/keys.c    **** 			if (! stack_reg)
2179:src/keys.c    **** 				State2.dot = 0;
2180:src/keys.c    **** 		}
2181:src/keys.c    **** 		break;
2182:src/keys.c    **** 
2183:src/keys.c    **** 	case K_CMPLX:
2184:src/keys.c    **** 		if (State2.ind || State2.dot)
2185:src/keys.c    **** 			break;
2186:src/keys.c    **** 		if (base == RARG_STO)
2187:src/keys.c    **** 			CmdBase = RARG_STOM;
2188:src/keys.c    **** 		else if (base == RARG_RCL)
2189:src/keys.c    **** 			CmdBase = RARG_RCLM;
2190:src/keys.c    **** 		break;
2191:src/keys.c    **** #ifdef DM42
2192:src/keys.c    **** 	case K41:       // T
2193:src/keys.c    **** 	  if (State2.shuffle)
2194:src/keys.c    **** 	    return process_arg_shuffle(3);
2195:src/keys.c    **** 	case K51:       // X
2196:src/keys.c    **** 	  if (State2.shuffle)
2197:src/keys.c    **** 	    return process_arg_shuffle(0);
2198:src/keys.c    **** 	case K52:	// Y
2199:src/keys.c    **** 	  if (State2.shuffle)
2200:src/keys.c    **** 	    return process_arg_shuffle(1);
2201:src/keys.c    **** 	case K53:       // Z
2202:src/keys.c    **** 	  if (State2.shuffle)
2203:src/keys.c    **** 	    return process_arg_shuffle(2);
2204:src/keys.c    **** #else
ARM GAS  /tmp/ccK8gYGY.s 			page 44


2205:src/keys.c    **** 	case K63:	// Y
2206:src/keys.c    **** 	  if (State2.shuffle)
2207:src/keys.c    **** 	    return process_arg_shuffle(1);
2208:src/keys.c    **** #endif
2209:src/keys.c    **** 	case K00:	// A
2210:src/keys.c    **** 	case K01:	// B
2211:src/keys.c    **** 	case K02:	// C
2212:src/keys.c    **** 	case K03:	// D
2213:src/keys.c    **** #ifdef DM42
2214:src/keys.c    **** 	case K12:	// I (lastY)
2215:src/keys.c    **** 	case K13:	// J
2216:src/keys.c    **** 	case K14:	// K
2217:src/keys.c    **** 	case K15:	// L (lastX)
2218:src/keys.c    **** #else
2219:src/keys.c    **** 	case K12:	// I (lastY)
2220:src/keys.c    **** 	case K21:	// J
2221:src/keys.c    **** 	case K22:	// K
2222:src/keys.c    **** 	case K23:	// L (lastX)
2223:src/keys.c    **** #endif
2224:src/keys.c    **** 	  if (State2.dot || stack_reg)
2225:src/keys.c    **** 			return arg_eval(n);
2226:src/keys.c    **** 		if ( c <= K03 )
2227:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
2228:src/keys.c    **** 		break;
2229:src/keys.c    **** #ifdef DM42
2230:src/keys.c    **** 	case K62:	// '.'
2231:src/keys.c    **** 		return process_arg_dot(base);
2232:src/keys.c    **** 
2233:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
2234:src/keys.c    **** 	case K64:		// plus
2235:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
2236:src/keys.c    **** 			return arg_eval(n);
2237:src/keys.c    **** 		break;
2238:src/keys.c    **** 	case K54:               // minus
2239:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
2240:src/keys.c    **** 			reset_arg();
2241:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
2242:src/keys.c    **** 		}
2243:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
2244:src/keys.c    **** 		break;
2245:src/keys.c    **** 	case K44:		// multiply
2246:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
2247:src/keys.c    **** 			return arg_eval(n);
2248:src/keys.c    **** 		break;
2249:src/keys.c    **** 	case K34:
2250:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
2251:src/keys.c    **** 		break;
2252:src/keys.c    **** #else
2253:src/keys.c    **** 	case K62:	// X, '.'
2254:src/keys.c    **** 		if (State2.shuffle)
2255:src/keys.c    **** 			return process_arg_shuffle(0);
2256:src/keys.c    **** 		return process_arg_dot(base);
2257:src/keys.c    **** 
2258:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
2259:src/keys.c    **** 	case K64:		// Z register
2260:src/keys.c    **** 		if (State2.shuffle)
2261:src/keys.c    **** 			return process_arg_shuffle(2);
ARM GAS  /tmp/ccK8gYGY.s 			page 45


2262:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
2263:src/keys.c    **** 			return arg_eval(n);
2264:src/keys.c    **** 		break;
2265:src/keys.c    **** 
2266:src/keys.c    **** 	case K54:
2267:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
2268:src/keys.c    **** 			reset_arg();
2269:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
2270:src/keys.c    **** 		}
2271:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
2272:src/keys.c    **** 		break;
2273:src/keys.c    **** 
2274:src/keys.c    **** 	case K44:		// T register
2275:src/keys.c    **** 		if (State2.shuffle)
2276:src/keys.c    **** 			return process_arg_shuffle(3);
2277:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
2278:src/keys.c    **** 			return arg_eval(n);
2279:src/keys.c    **** 		break;
2280:src/keys.c    **** 
2281:src/keys.c    **** 	case K34:
2282:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
2283:src/keys.c    **** 		break;
2284:src/keys.c    **** #endif
2285:src/keys.c    **** 	case K_UP:
2286:src/keys.c    **** 		arg_storcl(RARG_STO_MAX - RARG_STO, 0);
2287:src/keys.c    **** 		break;
2288:src/keys.c    **** 
2289:src/keys.c    **** 	case K_DOWN:
2290:src/keys.c    **** 		arg_storcl(RARG_STO_MIN - RARG_STO, 0);
2291:src/keys.c    **** 		break;
2292:src/keys.c    **** 
2293:src/keys.c    **** 	case K20:				// Enter is a short cut finisher but it also changes a few commands if it is first up
2294:src/keys.c    **** 		if (State2.numdigit == 0 && !State2.ind && !State2.dot) {
2295:src/keys.c    **** 			if (argcmds[base].label) {
2296:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
2297:src/keys.c    **** 				State2.multi = 1;
2298:src/keys.c    **** 				State2.alphashift = 0;
2299:src/keys.c    **** 				State2.rarg = 0;
2300:src/keys.c    **** 			} else if (base == RARG_SCI) {
2301:src/keys.c    **** 				reset_arg();
2302:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
2303:src/keys.c    **** 			} else if (base == RARG_ENG) {
2304:src/keys.c    **** 				reset_arg();
2305:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
2306:src/keys.c    **** 			} else if (argcmds[base].stckreg)
2307:src/keys.c    **** 				State2.dot = 1;
2308:src/keys.c    **** 		} else if (State2.numdigit > 0)
2309:src/keys.c    **** 			return arg_eval(State2.digval);
2310:src/keys.c    **** 		else if (stack_reg)
2311:src/keys.c    **** 			State2.dot = 1 - State2.dot;
2312:src/keys.c    **** 		break;
2313:src/keys.c    **** 
2314:src/keys.c    **** 	case K24:	// <-
2315:src/keys.c    **** 		if (State2.numdigit == 0) {
2316:src/keys.c    **** 			if (State2.dot)
2317:src/keys.c    **** 				State2.dot = 0;
2318:src/keys.c    **** 			else if (State2.local)
ARM GAS  /tmp/ccK8gYGY.s 			page 46


2319:src/keys.c    **** 				State2.local = 0;
2320:src/keys.c    **** 			else if (State2.ind)
2321:src/keys.c    **** 				State2.ind = 0;
2322:src/keys.c    **** 			else
2323:src/keys.c    **** 				goto reset;
2324:src/keys.c    **** 		}
2325:src/keys.c    **** 		else {
2326:src/keys.c    **** 			--State2.numdigit;
2327:src/keys.c    **** 			if (State2.shuffle)
2328:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
2329:src/keys.c    **** 			else
2330:src/keys.c    **** 				State2.digval /= 10;
2331:src/keys.c    **** 		}
2332:src/keys.c    **** 		break;
2333:src/keys.c    **** 
2334:src/keys.c    **** 	case K60:
2335:src/keys.c    **** 	reset:
2336:src/keys.c    **** 		reset_arg();
2337:src/keys.c    **** 	default:
2338:src/keys.c    **** 		break;
2339:src/keys.c    **** 	}
2340:src/keys.c    **** 	return STATE_UNFINISHED;
2341:src/keys.c    **** }
2342:src/keys.c    **** 
2343:src/keys.c    **** 
2344:src/keys.c    **** /*
2345:src/keys.c    ****  *  Process arguments to the diverse test commands
2346:src/keys.c    ****  */
2347:src/keys.c    **** static int process_test(const keycode c) {
2348:src/keys.c    **** 	int r = State2.test;
2349:src/keys.c    **** 	int cmpx = State2.cmplx;
2350:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
2351:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
2352:src/keys.c    **** 
2353:src/keys.c    **** 	State2.test = TST_NONE;
2354:src/keys.c    **** 	State2.cmplx = 0;
2355:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
2356:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
2357:src/keys.c    **** 		// Lettered register
2358:src/keys.c    **** 		if (cmpx && (n & 1)) {
2359:src/keys.c    **** 			if (n == regI_idx)
2360:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
2361:src/keys.c    **** 			// Disallow odd complex registers > A
2362:src/keys.c    **** 			goto again;
2363:src/keys.c    **** 		}
2364:src/keys.c    **** 		// Return the command with the register completed
2365:src/keys.c    **** 		return RARG(base, n);
2366:src/keys.c    **** 	}
2367:src/keys.c    **** 	else if ( n == 0 ) {
2368:src/keys.c    **** 		// Special 0
2369:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq0 : OP_Xeq0) + r;
2370:src/keys.c    **** 	}
2371:src/keys.c    **** 	else if ( n == 1 ) {
2372:src/keys.c    **** 		// Special 1
2373:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq1 : OP_Xeq1) + r;
2374:src/keys.c    **** 	}
2375:src/keys.c    **** 	else if ( n <= 9 || c == K_ARROW || c == K62 ) {
ARM GAS  /tmp/ccK8gYGY.s 			page 47


2376:src/keys.c    **** 		// digit 2..9, -> or .
2377:src/keys.c    **** 		init_arg((enum rarg)base);
2378:src/keys.c    **** 		return process_arg(c);
2379:src/keys.c    **** 	}
2380:src/keys.c    **** 
2381:src/keys.c    **** 	switch (c) {
2382:src/keys.c    **** 	case K11:					// tests vs register
2383:src/keys.c    **** 	case K20:
2384:src/keys.c    **** 		init_arg((enum rarg)base);
2385:src/keys.c    **** 		return STATE_UNFINISHED;
2386:src/keys.c    **** 
2387:src/keys.c    **** 	//case K60:
2388:src/keys.c    **** 	case K24:
2389:src/keys.c    **** 		return STATE_UNFINISHED;
2390:src/keys.c    **** 
2391:src/keys.c    **** 	default:
2392:src/keys.c    **** 		break;
2393:src/keys.c    **** 	}
2394:src/keys.c    **** again:
2395:src/keys.c    **** 	State2.test = r;
2396:src/keys.c    **** 	State2.cmplx = cmpx;
2397:src/keys.c    **** 	return STATE_UNFINISHED;
2398:src/keys.c    **** }
2399:src/keys.c    **** 
2400:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2401:src/keys.c    **** /*
2402:src/keys.c    ****  *  Build the user catalogue on the fly in RAM and return the number of entries
2403:src/keys.c    ****  */
2404:src/keys.c    **** #define USER_CAT_MAX 100
2405:src/keys.c    **** s_opcode UserCat[USER_CAT_MAX];
2406:src/keys.c    **** 
2407:src/keys.c    **** static int build_user_cat(void)
2408:src/keys.c    **** {
2409:src/keys.c    **** 	// find the label 'CAT'
2410:src/keys.c    **** 	const int lbl = OP_DBL + (DBL_LBL << DBL_SHIFT) + 'C' + ('A' << 16) + ('T' << 24);
2411:src/keys.c    **** 	unsigned int pc = findmultilbl(lbl, 0);
2412:src/keys.c    **** 	int len = 0;
2413:src/keys.c    **** 	while (pc && len < USER_CAT_MAX) {
2414:src/keys.c    **** 		// do a simnple insert-sort to sort the entries
2415:src/keys.c    **** 		char buf1[16];
2416:src/keys.c    **** 		int i;
2417:src/keys.c    **** 		s_opcode op;
2418:src/keys.c    **** 	next:
2419:src/keys.c    **** 		pc = do_inc(pc, 0);
2420:src/keys.c    **** 		op = (s_opcode) getprog(pc);
2421:src/keys.c    **** 		if (op == (OP_NIL | OP_END))
2422:src/keys.c    **** 			break;
2423:src/keys.c    **** 		if (isDBL(op))
2424:src/keys.c    **** 			continue;
2425:src/keys.c    **** 		if (isRARG(op)) {
2426:src/keys.c    **** 			const s_opcode rarg = RARG_CMD(op);
2427:src/keys.c    **** 			if (rarg != RARG_ALPHA && rarg != RARG_CONV
2428:src/keys.c    **** 			    && rarg != RARG_CONST && rarg != RARG_CONST_CMPLX)
2429:src/keys.c    **** 				op = op & 0xff00;	// remove argument
2430:src/keys.c    **** 		}
2431:src/keys.c    **** 		catcmd(op, buf1);
2432:src/keys.c    **** 		for (i = 0; i < len; ++i) {
ARM GAS  /tmp/ccK8gYGY.s 			page 48


2433:src/keys.c    **** 			// Find a position in the table to insert the new entry
2434:src/keys.c    **** 			char buf2[16];
2435:src/keys.c    **** 			const char *p, *q;
2436:src/keys.c    **** 			int diff = 0;
2437:src/keys.c    **** 			if (op == UserCat[i]) {
2438:src/keys.c    **** 				// duplicate entry - ignore
2439:src/keys.c    **** 				goto next;
2440:src/keys.c    **** 			}
2441:src/keys.c    **** 			p = buf1;
2442:src/keys.c    **** 			if (*p == COMPLEX_PREFIX)
2443:src/keys.c    **** 				++p;
2444:src/keys.c    **** 			q = catcmd(UserCat[i], buf2);
2445:src/keys.c    **** 			if (*q == COMPLEX_PREFIX)
2446:src/keys.c    **** 				++q;
2447:src/keys.c    **** 			diff = 0;
2448:src/keys.c    **** 			while (*p != '\0' && diff == 0) {
2449:src/keys.c    **** 				diff = remap_chars(*q++) - remap_chars(*p++);
2450:src/keys.c    **** 			}
2451:src/keys.c    **** 			if ((diff == 0 && *q == 0) ) {
2452:src/keys.c    **** 				// identical according to sort order, insert after
2453:src/keys.c    **** 				++i;
2454:src/keys.c    **** 				break;
2455:src/keys.c    **** 			}
2456:src/keys.c    **** 			if (diff > 0) {
2457:src/keys.c    **** 				// insert new entry before the one found because this is greater
2458:src/keys.c    **** 				break;
2459:src/keys.c    **** 			}
2460:src/keys.c    **** 		}
2461:src/keys.c    **** 		if (i < len) {
2462:src/keys.c    **** 			// Make room
2463:src/keys.c    **** 			xcopy(UserCat + i + 1, UserCat + i, (len - i) << 1);
2464:src/keys.c    **** 		}
2465:src/keys.c    **** 		UserCat[i] = op;
2466:src/keys.c    **** 		++len;
2467:src/keys.c    **** 	}
2468:src/keys.c    **** 	// return the number of entries
2469:src/keys.c    **** 	return len;
2470:src/keys.c    **** }
2471:src/keys.c    **** #endif
2472:src/keys.c    **** 
2473:src/keys.c    **** /* Return the number of entries in the current catalogue.
2474:src/keys.c    ****  * These are all fixed size known at compile time so a table lookup will
2475:src/keys.c    ****  * likely be the most space efficient method.
2476:src/keys.c    ****  */
2477:src/keys.c    **** int current_catalogue_max(void) {
2478:src/keys.c    **** 	// A quick table of catalogue sizes
2479:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues' 
2480:src/keys.c    **** 	static const unsigned char catalogue_sizes[] = 
2481:src/keys.c    **** 	{
2482:src/keys.c    **** 		0, // NONE
2483:src/keys.c    **** 		SIZE_catalogue,
2484:src/keys.c    **** 		SIZE_cplx_catalogue,
2485:src/keys.c    **** 		SIZE_stats_catalogue,
2486:src/keys.c    **** 		SIZE_prob_catalogue,
2487:src/keys.c    **** 		SIZE_int_catalogue,
2488:src/keys.c    **** 		SIZE_prog_catalogue,
2489:src/keys.c    **** 		SIZE_program_xfcn,
ARM GAS  /tmp/ccK8gYGY.s 			page 49


2490:src/keys.c    **** 		SIZE_test_catalogue,
2491:src/keys.c    **** 		SIZE_mode_catalogue,
2492:src/keys.c    **** 		SIZE_alpha_catalogue,
2493:src/keys.c    **** 		SIZE_alpha_symbols,
2494:src/keys.c    **** 		SIZE_alpha_compares,
2495:src/keys.c    **** 		SIZE_alpha_arrows,
2496:src/keys.c    **** 		SIZE_alpha_letters,
2497:src/keys.c    **** 		SIZE_alpha_subscripts,
2498:src/keys.c    **** 		NUM_CONSTS_CAT,
2499:src/keys.c    **** 		NUM_CONSTS_CAT,
2500:src/keys.c    **** 		SIZE_conv_catalogue,
2501:src/keys.c    **** 		SIZE_sums_catalogue,
2502:src/keys.c    **** 		SIZE_matrix_catalogue,
2503:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2504:src/keys.c    **** 		SIZE_internal_catalogue,
2505:src/keys.c    **** #endif
2506:src/keys.c    **** 	};
2507:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2508:src/keys.c    **** 	const int cat = State2.catalogue;
2509:src/keys.c    **** 	return cat == CATALOGUE_USER ? build_user_cat() : catalogue_sizes[cat];
2510:src/keys.c    **** #else
2511:src/keys.c    **** 	return catalogue_sizes[State2.catalogue];
2512:src/keys.c    **** #endif
2513:src/keys.c    **** }
2514:src/keys.c    **** 
2515:src/keys.c    **** 
2516:src/keys.c    **** /* Look up the character position in the given byte array and
2517:src/keys.c    ****  * build the alpha op-code for it.
2518:src/keys.c    ****  */
2519:src/keys.c    **** static opcode alpha_code(int n, const char tbl[]) {
2520:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
2521:src/keys.c    **** }
2522:src/keys.c    **** 
2523:src/keys.c    **** 
2524:src/keys.c    **** /* Return the opcode for entry n from the current catalogue
2525:src/keys.c    ****  */
2526:src/keys.c    **** opcode current_catalogue(int n) {
2527:src/keys.c    **** 	// A quick table of catalogue tables
2528:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues'
2529:src/keys.c    **** 	static const void *catalogues[] =
2530:src/keys.c    **** 	{
2531:src/keys.c    **** 		NULL, // NONE
2532:src/keys.c    **** 		catalogue,
2533:src/keys.c    **** 		cplx_catalogue,
2534:src/keys.c    **** 		stats_catalogue,
2535:src/keys.c    **** 		prob_catalogue,
2536:src/keys.c    **** 		int_catalogue,
2537:src/keys.c    **** 		prog_catalogue,
2538:src/keys.c    **** 		program_xfcn,
2539:src/keys.c    **** 		test_catalogue,
2540:src/keys.c    **** 		mode_catalogue,
2541:src/keys.c    **** 		alpha_catalogue,
2542:src/keys.c    **** 		alpha_symbols,
2543:src/keys.c    **** 		alpha_compares,
2544:src/keys.c    **** 		alpha_arrows,
2545:src/keys.c    **** 		alpha_letters,
2546:src/keys.c    **** 		alpha_subscripts,
ARM GAS  /tmp/ccK8gYGY.s 			page 50


2547:src/keys.c    **** 		NULL,
2548:src/keys.c    **** 		NULL,
2549:src/keys.c    **** 		NULL, //CONV
2550:src/keys.c    **** 		sums_catalogue,
2551:src/keys.c    **** 		matrix_catalogue,
2552:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2553:src/keys.c    **** 		internal_catalogue,
2554:src/keys.c    **** #endif
2555:src/keys.c    **** 	};
2556:src/keys.c    **** 	const unsigned char *cat;
2557:src/keys.c    **** 	unsigned int c = State2.catalogue;
2558:src/keys.c    **** 	int m, i;
2559:src/keys.c    **** 	unsigned p, q;
2560:src/keys.c    **** 
2561:src/keys.c    **** 	if (c == CATALOGUE_CONST) {
2562:src/keys.c    **** 		if (n == OP_ZERO)
2563:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
2564:src/keys.c    **** 		return CONST(n);
2565:src/keys.c    **** 	}
2566:src/keys.c    **** 	if (c == CATALOGUE_COMPLEX_CONST) {
2567:src/keys.c    **** 		if (n == OP_ZERO)
2568:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
2569:src/keys.c    **** 		return CONST_CMPLX(n);
2570:src/keys.c    **** 	}
2571:src/keys.c    **** 	if (c == CATALOGUE_CONV) {
2572:src/keys.c    **** 		const int cnv = conv_catalogue[n];
2573:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
2574:src/keys.c    **** 			// Monadic conversion routine
2575:src/keys.c    **** 			return OP_MON | (cnv - SIZE_conv_catalogue);
2576:src/keys.c    **** 		else
2577:src/keys.c    **** 			return RARG(RARG_CONV, cnv);
2578:src/keys.c    **** 	}
2579:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2580:src/keys.c    **** 	if (c == CATALOGUE_USER)
2581:src/keys.c    **** 		return build_user_cat() ? UserCat[n] : STATE_IGNORE;
2582:src/keys.c    **** #endif
2583:src/keys.c    **** 
2584:src/keys.c    **** 	if (c == CATALOGUE_ALPHA_LETTERS && State2.alphashift)
2585:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
2586:src/keys.c    **** 	else
2587:src/keys.c    **** 		cat = (const unsigned char *) catalogues[c];
2588:src/keys.c    **** 
2589:src/keys.c    **** 	if (c >= CATALOGUE_ALPHA_SYMBOLS && c <= CATALOGUE_ALPHA_SUBSCRIPTS) {
2590:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
2591:src/keys.c    **** 	}
2592:src/keys.c    **** 	if (c >= sizeof(catalogues) / sizeof(void *))
2593:src/keys.c    **** 		return OP_NIL | OP_NOP;
2594:src/keys.c    **** 
2595:src/keys.c    **** 	/* Unpack the opcode */
2596:src/keys.c    **** 	cat += n + (n >> 2);
2597:src/keys.c    **** 	p = cat[0];
2598:src/keys.c    **** 	q = cat[1];
2599:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
2600:src/keys.c    **** 
2601:src/keys.c    **** 	/* Now figure out which opcode it really is */
2602:src/keys.c    **** 	for (i=0; i<KIND_MAX; i++) {
2603:src/keys.c    **** 		if (m < opcode_breaks[i])
ARM GAS  /tmp/ccK8gYGY.s 			page 51


2604:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
2605:src/keys.c    **** 		m -= opcode_breaks[i];
2606:src/keys.c    **** 	}
2607:src/keys.c    **** 	return RARG_BASEOP(m);
2608:src/keys.c    **** }
2609:src/keys.c    **** 
2610:src/keys.c    **** 
2611:src/keys.c    **** /*
2612:src/keys.c    ****  *  Helper for navigation in alpha catalogues. Some charaters are not allowed
2613:src/keys.c    ****  *  in multi character commands.
2614:src/keys.c    ****  */
2615:src/keys.c    **** static int forbidden_alpha(int pos) {
2616:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
2617:src/keys.c    **** }
2618:src/keys.c    **** 
2619:src/keys.c    **** /*
2620:src/keys.c    ****  *  Catalogue navigation
2621:src/keys.c    ****  */
2622:src/keys.c    ****  static int process_catalogue(const keycode c, const enum shifts shift, const int is_multi) {
2623:src/keys.c    ****    int pos = State.catpos;
2624:src/keys.c    ****    int ch;
2625:src/keys.c    ****    const int ctmax = current_catalogue_max();
2626:src/keys.c    ****    const enum catalogues cat = (enum catalogues) State2.catalogue;
2627:src/keys.c    **** 
2628:src/keys.c    ****    if (shift == SHIFT_N) {
2629:src/keys.c    ****      switch (c) {
2630:src/keys.c    **** #ifdef DM42
2631:src/keys.c    ****      case K05:			// XEQ accepts command
2632:src/keys.c    **** #else	  
2633:src/keys.c    ****      case K30:			// XEQ accepts command
2634:src/keys.c    **** #endif						  
2635:src/keys.c    ****      case K20:			// Enter accepts command
2636:src/keys.c    ****        if (pos < ctmax && !(is_multi && forbidden_alpha(pos))) {
2637:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
2638:src/keys.c    **** 
2639:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2640:src/keys.c    **** 
2641:src/keys.c    **** 	 if (isRARG(op)) {
2642:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
2643:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
2644:src/keys.c    **** 	     return op;
2645:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
2646:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
2647:src/keys.c    **** 	   else
2648:src/keys.c    **** 	     init_arg(RARG_CMD(op));
2649:src/keys.c    **** 	 }
2650:src/keys.c    **** 	 else {
2651:src/keys.c    **** 	   return check_confirm(op);
2652:src/keys.c    **** 	 }
2653:src/keys.c    ****        } else
2654:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2655:src/keys.c    ****        return STATE_UNFINISHED;
2656:src/keys.c    **** 
2657:src/keys.c    ****      case K24:			// backspace
2658:src/keys.c    ****        if (CmdLineLength > 0 && Keyticks < 30) {
2659:src/keys.c    **** 	 if (--CmdLineLength > 0)
2660:src/keys.c    **** 	   goto search;
ARM GAS  /tmp/ccK8gYGY.s 			page 52


2661:src/keys.c    **** 	 pos = 0;
2662:src/keys.c    **** 	 goto set_pos;
2663:src/keys.c    ****        } else
2664:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2665:src/keys.c    ****        return STATE_UNFINISHED;
2666:src/keys.c    **** 
2667:src/keys.c    ****      case K60:
2668:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2669:src/keys.c    ****        return STATE_UNFINISHED;
2670:src/keys.c    **** 
2671:src/keys.c    ****      case K_UP:
2672:src/keys.c    ****        CmdLineLength = 0;
2673:src/keys.c    ****        if (pos == 0)
2674:src/keys.c    **** 	 goto set_max;
2675:src/keys.c    ****        else
2676:src/keys.c    **** 	 --pos;
2677:src/keys.c    ****        goto set_pos;
2678:src/keys.c    **** 
2679:src/keys.c    ****      case K_DOWN:
2680:src/keys.c    ****        CmdLineLength = 0;
2681:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
2682:src/keys.c    ****        if (pos >= ctmax)
2683:src/keys.c    **** 	 pos = 0;
2684:src/keys.c    ****        goto set_pos;
2685:src/keys.c    **** 
2686:src/keys.c    ****      default:
2687:src/keys.c    ****        break;
2688:src/keys.c    ****      }
2689:src/keys.c    ****    } else if (shift == SHIFT_F) {
2690:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
2691:src/keys.c    ****        /*
2692:src/keys.c    **** 	* f 1/x in conversion catalogue
2693:src/keys.c    **** 	*/
2694:src/keys.c    ****        /* A small table of commands in pairs containing inverse commands.
2695:src/keys.c    **** 	* This table could be unsigned characters only storing the monadic kind.
2696:src/keys.c    **** 	* this saves twelve bytes in the table at a cost of some bytes in the code below.
2697:src/keys.c    **** 	* Not worth it since the maximum saving will be less than twelve bytes.
2698:src/keys.c    **** 	*/
2699:src/keys.c    ****        static const unsigned short int conv_mapping[] = {
2700:src/keys.c    **** 	 OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
2701:src/keys.c    **** 	 OP_MON | OP_DB_PR,	OP_MON | OP_PR_DB,
2702:src/keys.c    **** 	 OP_MON | OP_DEGC_F,	OP_MON | OP_DEGF_C,
2703:src/keys.c    **** 	 OP_MON | OP_DEG2RAD,	OP_MON | OP_RAD2DEG,
2704:src/keys.c    **** 	 OP_MON | OP_DEG2GRD,	OP_MON | OP_GRD2DEG,
2705:src/keys.c    **** 	 OP_MON | OP_RAD2GRD,	OP_MON | OP_GRD2RAD,
2706:src/keys.c    ****        };
2707:src/keys.c    ****        const opcode op = current_catalogue(pos);
2708:src/keys.c    ****        int i;
2709:src/keys.c    **** 
2710:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2711:src/keys.c    ****        if (isRARG(op))
2712:src/keys.c    **** 	 return op ^ 1;
2713:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
2714:src/keys.c    **** 	 if (op == conv_mapping[i])
2715:src/keys.c    **** 	   return conv_mapping[i^1];
2716:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
2717:src/keys.c    ****      }
ARM GAS  /tmp/ccK8gYGY.s 			page 53


2718:src/keys.c    ****      else if (c == K60 && (State2.alphas || State2.multi)) {
2719:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
2720:src/keys.c    ****        State2.alphashift = 1 - State2.alphashift;
2721:src/keys.c    ****        return STATE_UNFINISHED;
2722:src/keys.c    ****      }
2723:src/keys.c    ****    } else if (shift == SHIFT_G) {
2724:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
2725:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2726:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
2727:src/keys.c    ****      }
2728:src/keys.c    ****    }
2729:src/keys.c    **** 
2730:src/keys.c    ****    /* We've got a key press, map it to a character and try to
2731:src/keys.c    ****     * jump to the appropriate catalogue entry.
2732:src/keys.c    ****     */
2733:src/keys.c    ****    ch = remap_chars(keycode_to_alpha(c, shift == SHIFT_G ? SHIFT_LC_G : shift));
2734:src/keys.c    ****    reset_shift();
2735:src/keys.c    ****    if (ch == '\0')
2736:src/keys.c    ****      return STATE_UNFINISHED;
2737:src/keys.c    ****    if (cat > CATALOGUE_ALPHA && cat < CATALOGUE_CONST) {
2738:src/keys.c    ****      // No multi character search in alpha catalogues
2739:src/keys.c    ****      CmdLineLength = 0;
2740:src/keys.c    ****    }
2741:src/keys.c    ****    if (CmdLineLength < 10)
2742:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
2743:src/keys.c    ****    /* Search for the current buffer in the catalogue */
2744:src/keys.c    **** 
2745:src/keys.c    ****  search:
2746:src/keys.c    ****    Cmdline[CmdLineLength] = '\0';
2747:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
2748:src/keys.c    ****      char buf[16];
2749:src/keys.c    ****      const char *cmd = catcmd(current_catalogue(pos), buf);
2750:src/keys.c    ****      int i;
2751:src/keys.c    **** 
2752:src/keys.c    ****      if (*cmd == COMPLEX_PREFIX)
2753:src/keys.c    ****        cmd++;
2754:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
2755:src/keys.c    ****        const int c = remap_chars(cmd[i]);
2756:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
2757:src/keys.c    ****        if (c > cl)
2758:src/keys.c    **** 	 goto set_pos;
2759:src/keys.c    ****        else if (c < cl)
2760:src/keys.c    **** 	 break;
2761:src/keys.c    ****      }
2762:src/keys.c    ****      if (Cmdline[i] == '\0')
2763:src/keys.c    ****        goto set_pos;
2764:src/keys.c    ****    }
2765:src/keys.c    ****  set_max:
2766:src/keys.c    ****    pos = ctmax - 1;
2767:src/keys.c    ****  set_pos:
2768:src/keys.c    ****    while (is_multi && pos && forbidden_alpha(pos))
2769:src/keys.c    ****      --pos;
2770:src/keys.c    ****    State.catpos = pos;
2771:src/keys.c    ****    return STATE_UNFINISHED;
2772:src/keys.c    ****  }
2773:src/keys.c    **** 
2774:src/keys.c    **** #ifndef REALBUILD
ARM GAS  /tmp/ccK8gYGY.s 			page 54


2775:src/keys.c    **** int find_pos(const char* text) {
2776:src/keys.c    **** 	int pos;
2777:src/keys.c    **** 	const int ctmax = current_catalogue_max();
2778:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
2779:src/keys.c    **** 		char buf[16];
2780:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
2781:src/keys.c    **** 		int i;
2782:src/keys.c    **** 
2783:src/keys.c    **** 		if (*cmd == COMPLEX_PREFIX)
2784:src/keys.c    **** 			cmd++;
2785:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
2786:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
2787:src/keys.c    **** 			const int cl = remap_chars(text[i]);
2788:src/keys.c    **** 			if (c > cl)
2789:src/keys.c    **** 				return pos;
2790:src/keys.c    **** 			else if (c < cl)
2791:src/keys.c    **** 				break;
2792:src/keys.c    **** 		}
2793:src/keys.c    **** 		if (text[i] == '\0')
2794:src/keys.c    **** 			return pos;
2795:src/keys.c    **** 	}
2796:src/keys.c    **** 	return pos;
2797:src/keys.c    **** }
2798:src/keys.c    **** 
2799:src/keys.c    **** #endif
2800:src/keys.c    **** 
2801:src/keys.c    **** /* Multi (2) word instruction entry
2802:src/keys.c    ****  */
2803:src/keys.c    **** static void reset_multi(void) {
2804:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
2805:src/keys.c    **** 	State2.multi = 0;
2806:src/keys.c    **** 	if (! State2.alphas )
2807:src/keys.c    **** 		State2.alphashift = 0;
2808:src/keys.c    **** }
2809:src/keys.c    **** 
2810:src/keys.c    **** static int process_multi(const keycode c) {
2811:src/keys.c    **** 	enum shifts shift = reset_shift();
2812:src/keys.c    **** 	unsigned int ch = 0;
2813:src/keys.c    **** 	unsigned int opcode;
2814:src/keys.c    **** 
2815:src/keys.c    **** 	if (State2.catalogue) {
2816:src/keys.c    **** 		// Alpha catalogue from within multi character command
2817:src/keys.c    **** 		opcode = process_catalogue((const keycode)c, shift, State2.numdigit == 2);
2818:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
2819:src/keys.c    **** 			return opcode;
2820:src/keys.c    **** 		ch = (unsigned char) opcode;
2821:src/keys.c    **** 		goto add_char;
2822:src/keys.c    **** 	}
2823:src/keys.c    **** 
2824:src/keys.c    **** 	switch (c) {
2825:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
2826:src/keys.c    **** 		if (shift != SHIFT_N)
2827:src/keys.c    **** 				break;
2828:src/keys.c    **** 		reset_multi();
2829:src/keys.c    **** 		if (State2.numdigit == 0)
2830:src/keys.c    **** 			return STATE_UNFINISHED;
2831:src/keys.c    **** 		else if (State2.numdigit == 1)
ARM GAS  /tmp/ccK8gYGY.s 			page 55


2832:src/keys.c    **** 			State2.digval2 = 0;
2833:src/keys.c    **** 		goto fin;
2834:src/keys.c    **** 
2835:src/keys.c    **** 	case K24:	// Clx - backspace, clear alpha
2836:src/keys.c    **** 		if (shift != SHIFT_H) {
2837:src/keys.c    **** 			if (State2.numdigit == 0)
2838:src/keys.c    **** 				reset_multi();
2839:src/keys.c    **** 			else
2840:src/keys.c    **** 				State2.numdigit--;
2841:src/keys.c    **** 			return STATE_UNFINISHED;
2842:src/keys.c    **** 		}
2843:src/keys.c    **** 		break;
2844:src/keys.c    **** 
2845:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
2846:src/keys.c    **** 		if (shift == SHIFT_F)
2847:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
2848:src/keys.c    **** 		else
2849:src/keys.c    **** 			reset_multi();
2850:src/keys.c    **** 		return STATE_UNFINISHED;
2851:src/keys.c    **** 
2852:src/keys.c    **** 	default:
2853:src/keys.c    **** 		break;
2854:src/keys.c    **** 		}
2855:src/keys.c    **** 
2856:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
2857:src/keys.c    **** 	ch = keycode_to_alpha(c, shift);
2858:src/keys.c    **** 	if (ch == 0)
2859:src/keys.c    **** 		return STATE_UNFINISHED;
2860:src/keys.c    **** add_char:
2861:src/keys.c    **** 	if (State2.numdigit == 0) {
2862:src/keys.c    **** 		State2.digval = ch;
2863:src/keys.c    **** 		State2.numdigit = 1;
2864:src/keys.c    **** 		return STATE_UNFINISHED;
2865:src/keys.c    **** 	} else if (State2.numdigit == 1) {
2866:src/keys.c    **** 		State2.digval2 = ch;
2867:src/keys.c    **** 		State2.numdigit = 2;
2868:src/keys.c    **** 		return STATE_UNFINISHED;
2869:src/keys.c    **** 	}
2870:src/keys.c    **** 	reset_multi();
2871:src/keys.c    **** 
2872:src/keys.c    **** fin:
2873:src/keys.c    **** 	opcode = OP_DBL + (CmdBase << DBL_SHIFT) 
2874:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
2875:src/keys.c    **** 	return opcode;
2876:src/keys.c    **** }
2877:src/keys.c    **** 
2878:src/keys.c    **** 
2879:src/keys.c    **** /* Handle YES/NO confirmations
2880:src/keys.c    ****  */
2881:src/keys.c    **** static int process_confirm(const keycode c) {
2882:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
2883:src/keys.c    **** 	switch (c) {
2884:src/keys.c    **** #ifdef DM42
2885:src/keys.c    **** 	case K52:
2886:src/keys.c    **** #endif
2887:src/keys.c    **** 	case K63:			// Yes
2888:src/keys.c    **** 	  switch (State2.confirm) {
ARM GAS  /tmp/ccK8gYGY.s 			page 56


2889:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
2890:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
2891:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
2892:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
2893:src/keys.c    **** 	  }
2894:src/keys.c    **** 	case K24:
2895:src/keys.c    **** #ifdef DM42
2896:src/keys.c    **** 	case K22:
2897:src/keys.c    **** #else
2898:src/keys.c    **** 	case K32:
2899:src/keys.c    **** #endif
2900:src/keys.c    **** 	  // No
2901:src/keys.c    **** 	  State2.confirm = 0;
2902:src/keys.c    **** 	  State2.digval = 0;
2903:src/keys.c    **** 	  break;
2904:src/keys.c    **** 	default:			// No state change
2905:src/keys.c    **** 	  break;
2906:src/keys.c    **** 	}
2907:src/keys.c    **** 	return STATE_UNFINISHED;
2908:src/keys.c    **** }
2909:src/keys.c    **** 
2910:src/keys.c    **** 
2911:src/keys.c    **** /*
2912:src/keys.c    ****  *  STATUS
2913:src/keys.c    ****  */
2914:src/keys.c    **** static int process_status(const keycode c) {
2915:src/keys.c    **** 	int n = ((int)State2.status) - 3;
2916:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
2917:src/keys.c    **** 
2918:src/keys.c    **** 	if (c == K_UP) {
2919:src/keys.c    **** 		if (--n < -2)
2920:src/keys.c    **** 			n = max;
2921:src/keys.c    **** 	}
2922:src/keys.c    **** 	else if (c == K_DOWN) {
2923:src/keys.c    **** 		if (++n > max)
2924:src/keys.c    **** 			n = -2;
2925:src/keys.c    **** 	}
2926:src/keys.c    **** 	else if (c == K24 /* || c == K60 */) {
2927:src/keys.c    **** 		State2.status = 0;
2928:src/keys.c    **** 		return STATE_UNFINISHED;
2929:src/keys.c    **** 	} 
2930:src/keys.c    **** 	else {
2931:src/keys.c    **** 		int nn = keycode_to_digit_or_register(c) & 0x7f;
2932:src/keys.c    **** 		if (nn <= 9)
2933:src/keys.c    **** 			n = nn;
2934:src/keys.c    **** 		else if (nn == LOCAL_REG_BASE)
2935:src/keys.c    **** 			n = n == max ? 10 : max;
2936:src/keys.c    **** 		else if (nn != NO_REG)
2937:src/keys.c    **** 			n = 10; 
2938:src/keys.c    **** 	}
2939:src/keys.c    **** 	State2.status = n + 3;
2940:src/keys.c    **** 
2941:src/keys.c    **** 	return STATE_UNFINISHED;
2942:src/keys.c    **** }
2943:src/keys.c    **** 
2944:src/keys.c    **** 
2945:src/keys.c    **** /*
ARM GAS  /tmp/ccK8gYGY.s 			page 57


2946:src/keys.c    ****  *  CAT helper
2947:src/keys.c    ****  */
2948:src/keys.c    **** static int is_label_or_end_at(unsigned int pc, int search_end) {
 218              		.loc 1 2948 64 is_stmt 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
2949:src/keys.c    **** 	const unsigned int op = getprog(pc);
 222              		.loc 1 2949 2 view .LVU58
2948:src/keys.c    **** 	const unsigned int op = getprog(pc);
 223              		.loc 1 2948 64 is_stmt 0 view .LVU59
 224 0000 10B5     		push	{r4, lr}
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 4, -8
 227              		.cfi_offset 14, -4
2948:src/keys.c    **** 	const unsigned int op = getprog(pc);
 228              		.loc 1 2948 64 view .LVU60
 229 0002 0C46     		mov	r4, r1
 230              		.loc 1 2949 26 view .LVU61
 231 0004 FFF7FEFF 		bl	getprog
 232              	.LVL20:
2950:src/keys.c    **** 
2951:src/keys.c    **** 	return op == (OP_NIL | OP_END) || (!search_end && (isDBL(op) && opDBL(op) == DBL_LBL));
 233              		.loc 1 2951 2 is_stmt 1 view .LVU62
 234              		.loc 1 2951 33 is_stmt 0 view .LVU63
 235 0008 B0F59D7F 		cmp	r0, #314
 236 000c 06D0     		beq	.L21
 237              		.loc 1 2951 53 discriminator 3 view .LVU64
 238 000e 00F47043 		and	r3, r0, #61440
 239              		.loc 1 2951 49 discriminator 3 view .LVU65
 240 0012 B3F5704F 		cmp	r3, #61440
 241 0016 03D0     		beq	.L24
 242              		.loc 1 2951 33 view .LVU66
 243 0018 0020     		movs	r0, #0
 244              	.LVL21:
2952:src/keys.c    **** }
 245              		.loc 1 2952 1 view .LVU67
 246 001a 10BD     		pop	{r4, pc}
 247              	.LVL22:
 248              	.L21:
2951:src/keys.c    **** }
 249              		.loc 1 2951 33 view .LVU68
 250 001c 0120     		movs	r0, #1
 251              	.LVL23:
 252              		.loc 1 2952 1 view .LVU69
 253 001e 10BD     		pop	{r4, pc}
 254              	.LVL24:
 255              	.L24:
2951:src/keys.c    **** }
 256              		.loc 1 2951 66 discriminator 5 view .LVU70
 257 0020 C0F30320 		ubfx	r0, r0, #8, #4
 258              	.LVL25:
2951:src/keys.c    **** }
 259              		.loc 1 2951 63 discriminator 5 view .LVU71
 260 0024 50EA0403 		orrs	r3, r0, r4
 261 0028 0CBF     		ite	eq
 262 002a 0120     		moveq	r0, #1
ARM GAS  /tmp/ccK8gYGY.s 			page 58


 263 002c 0020     		movne	r0, #0
 264              		.loc 1 2952 1 discriminator 5 view .LVU72
 265 002e 10BD     		pop	{r4, pc}
 266              		.loc 1 2952 1 discriminator 5 view .LVU73
 267              		.cfi_endproc
 268              	.LFE54:
 270              		.section	.text.advance_to_next_label,"ax",%progbits
 271              		.align	1
 272              		.p2align 2,,3
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv4-sp-d16
 278              	advance_to_next_label:
 279              	.LVL26:
 280              	.LFB55:
2953:src/keys.c    **** 
2954:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end) {
 281              		.loc 1 2954 85 is_stmt 1 view -0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		.loc 1 2954 85 is_stmt 0 view .LVU75
 286 0000 70B5     		push	{r4, r5, r6, lr}
 287              		.cfi_def_cfa_offset 16
 288              		.cfi_offset 4, -16
 289              		.cfi_offset 5, -12
 290              		.cfi_offset 6, -8
 291              		.cfi_offset 14, -4
 292              		.loc 1 2954 85 view .LVU76
 293 0002 0446     		mov	r4, r0
2955:src/keys.c    **** 	do {
 294              		.loc 1 2955 2 is_stmt 1 view .LVU77
2956:src/keys.c    **** 		for (;;) {
 295              		.loc 1 2956 3 view .LVU78
2957:src/keys.c    **** 			if (inc) {
 296              		.loc 1 2957 4 view .LVU79
2954:src/keys.c    **** 	do {
 297              		.loc 1 2954 85 is_stmt 0 view .LVU80
 298 0004 1646     		mov	r6, r2
 299              		.loc 1 2957 7 view .LVU81
 300 0006 21B9     		cbnz	r1, .L29
 301              	.LVL27:
 302              	.L26:
2958:src/keys.c    **** 				pc = do_inc(pc, 0);
2959:src/keys.c    **** 				if (PcWrapped)
2960:src/keys.c    **** 					break;
2961:src/keys.c    **** 			}
2962:src/keys.c    **** 			else
2963:src/keys.c    **** 				inc = 1;
2964:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 303              		.loc 1 2964 4 is_stmt 1 view .LVU82
 304              		.loc 1 2964 8 is_stmt 0 view .LVU83
 305 0008 3146     		mov	r1, r6
 306 000a 2046     		mov	r0, r4
 307              		.loc 1 2964 8 view .LVU84
 308 000c FFF7FEFF 		bl	is_label_or_end_at
ARM GAS  /tmp/ccK8gYGY.s 			page 59


 309              	.LVL28:
 310              		.loc 1 2964 7 view .LVU85
 311 0010 B8B9     		cbnz	r0, .L28
 312              	.LVL29:
 313              	.L29:
 314              		.loc 1 2964 7 view .LVU86
 315 0012 0D4D     		ldr	r5, .L37
 316              	.L30:
2958:src/keys.c    **** 				pc = do_inc(pc, 0);
 317              		.loc 1 2958 5 is_stmt 1 view .LVU87
2958:src/keys.c    **** 				pc = do_inc(pc, 0);
 318              		.loc 1 2958 10 is_stmt 0 view .LVU88
 319 0014 2046     		mov	r0, r4
 320 0016 0021     		movs	r1, #0
 321 0018 FFF7FEFF 		bl	do_inc
 322              	.LVL30:
2959:src/keys.c    **** 					break;
 323              		.loc 1 2959 8 view .LVU89
 324 001c 2B68     		ldr	r3, [r5]
2958:src/keys.c    **** 				pc = do_inc(pc, 0);
 325              		.loc 1 2958 10 view .LVU90
 326 001e 0446     		mov	r4, r0
 327              	.LVL31:
2959:src/keys.c    **** 					break;
 328              		.loc 1 2959 5 is_stmt 1 view .LVU91
2959:src/keys.c    **** 					break;
 329              		.loc 1 2959 8 is_stmt 0 view .LVU92
 330 0020 002B     		cmp	r3, #0
 331 0022 F1D0     		beq	.L26
2965:src/keys.c    **** 				return pc;
2966:src/keys.c    **** 			}
2967:src/keys.c    **** 		}
2968:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) + 1) & 3);
 332              		.loc 1 2968 3 is_stmt 1 view .LVU93
 333              		.loc 1 2968 8 is_stmt 0 view .LVU94
 334 0024 20F47F54 		bic	r4, r0, #16320
 335 0028 24F03F04 		bic	r4, r4, #63
 336 002c 04F58044 		add	r4, r4, #16384
 337 0030 A4B2     		uxth	r4, r4
 338              		.loc 1 2968 6 view .LVU95
 339 0032 44F00104 		orr	r4, r4, #1
 340              	.LVL32:
2969:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 341              		.loc 1 2969 10 is_stmt 1 view .LVU96
 342              		.loc 1 2969 13 is_stmt 0 view .LVU97
 343 0036 2046     		mov	r0, r4
 344 0038 3146     		mov	r1, r6
 345 003a FFF7FEFF 		bl	is_label_or_end_at
 346              	.LVL33:
 347              		.loc 1 2969 2 view .LVU98
 348 003e 0028     		cmp	r0, #0
 349 0040 E8D0     		beq	.L30
 350              	.L28:
2970:src/keys.c    **** 	return pc;
2971:src/keys.c    **** }
 351              		.loc 1 2971 1 view .LVU99
 352 0042 2046     		mov	r0, r4
ARM GAS  /tmp/ccK8gYGY.s 			page 60


 353 0044 70BD     		pop	{r4, r5, r6, pc}
 354              	.LVL34:
 355              	.L38:
 356              		.loc 1 2971 1 view .LVU100
 357 0046 00BF     		.align	2
 358              	.L37:
 359 0048 00000000 		.word	PcWrapped
 360              		.cfi_endproc
 361              	.LFE55:
 363              		.section	.text.init_cat,"ax",%progbits
 364              		.align	1
 365              		.p2align 2,,3
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu fpv4-sp-d16
 371              	init_cat:
 372              	.LVL35:
 373              	.LFB12:
 565:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 374              		.loc 1 565 43 is_stmt 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 378              		.loc 1 566 2 view .LVU102
 565:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 379              		.loc 1 565 43 is_stmt 0 view .LVU103
 380 0000 38B5     		push	{r3, r4, r5, lr}
 381              		.cfi_def_cfa_offset 16
 382              		.cfi_offset 3, -16
 383              		.cfi_offset 4, -12
 384              		.cfi_offset 5, -8
 385              		.cfi_offset 14, -4
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 386              		.loc 1 566 37 view .LVU104
 387 0002 384C     		ldr	r4, .L58
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 388              		.loc 1 566 5 view .LVU105
 389 0004 0546     		mov	r5, r0
 390 0006 D0B9     		cbnz	r0, .L40
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 391              		.loc 1 566 37 discriminator 1 view .LVU106
 392 0008 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 393              		.loc 1 566 28 discriminator 1 view .LVU107
 394 000a 43B1     		cbz	r3, .L41
 568:src/keys.c    **** 		CmdLineLength = 0;
 395              		.loc 1 568 3 is_stmt 1 view .LVU108
 568:src/keys.c    **** 		CmdLineLength = 0;
 396              		.loc 1 568 18 is_stmt 0 view .LVU109
 397 000c 364A     		ldr	r2, .L58+4
 569:src/keys.c    **** 	}
 398              		.loc 1 569 17 view .LVU110
 399 000e 2077     		strb	r0, [r4, #28]
 568:src/keys.c    **** 		CmdLineLength = 0;
 400              		.loc 1 568 18 view .LVU111
ARM GAS  /tmp/ccK8gYGY.s 			page 61


 401 0010 1268     		ldr	r2, [r2]
 402 0012 92F8DC17 		ldrb	r1, [r2, #2012]	@ zero_extendqisi2
 403 0016 63F30401 		bfi	r1, r3, #0, #5
 404 001a 82F8DC17 		strb	r1, [r2, #2012]
 569:src/keys.c    **** 	}
 405              		.loc 1 569 3 is_stmt 1 view .LVU112
 406              	.L41:
 571:src/keys.c    **** 
 407              		.loc 1 571 2 view .LVU113
 408 001e FFF7FEFF 		bl	process_cmdline
 409              	.LVL36:
 573:src/keys.c    **** 	State2.registerlist = 0;
 410              		.loc 1 573 2 view .LVU114
 574:src/keys.c    **** 	State2.status = 0;
 411              		.loc 1 574 2 view .LVU115
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 412              		.loc 1 575 2 view .LVU116
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 413              		.loc 1 600 16 is_stmt 0 view .LVU117
 414 0022 6369     		ldr	r3, [r4, #20]
 415 0024 23F04063 		bic	r3, r3, #201326592
 416 0028 23F40073 		bic	r3, r3, #512
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 417              		.loc 1 575 16 view .LVU118
 418 002c 0022     		movs	r2, #0
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 419              		.loc 1 600 16 view .LVU119
 420 002e 6361     		str	r3, [r4, #20]
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 421              		.loc 1 575 16 view .LVU120
 422 0030 2273     		strb	r2, [r4, #12]
 576:src/keys.c    **** 
 423              		.loc 1 576 2 is_stmt 1 view .LVU121
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 424              		.loc 1 578 2 view .LVU122
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 425              		.loc 1 599 3 view .LVU123
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 426              		.loc 1 599 20 is_stmt 0 view .LVU124
 427 0032 A273     		strb	r2, [r4, #14]
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 428              		.loc 1 600 3 is_stmt 1 view .LVU125
 601:src/keys.c    **** 			// Different catalogue, reset position
 429              		.loc 1 601 3 view .LVU126
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 430              		.loc 1 606 2 view .LVU127
 431              	.LBB304:
 432              	.LBI304:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 433              		.loc 1 114 13 view .LVU128
 434              	.LBE304:
 115:src/keys.c    **** }
 435              		.loc 1 115 2 view .LVU129
 436              	.LVL37:
 437              	.LBB321:
 438              	.LBB305:
 439              	.LBI305:
ARM GAS  /tmp/ccK8gYGY.s 			page 62


 104:src/keys.c    **** 	enum shifts r = cur_shift();
 440              		.loc 1 104 20 view .LVU130
 441              	.LBB306:
 105:src/keys.c    **** 	State2.shifts = shift;
 442              		.loc 1 105 2 view .LVU131
 443              	.LBB307:
 444              	.LBI307:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 445              		.loc 1 96 13 view .LVU132
 446              	.LBB308:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 447              		.loc 1 97 2 view .LVU133
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 448              		.loc 1 97 18 is_stmt 0 view .LVU134
 449 0034 FFF7FEFF 		bl	shift_down
 450              	.LVL38:
  98:src/keys.c    **** }
 451              		.loc 1 98 2 is_stmt 1 view .LVU135
 452              	.LBE308:
 453              	.LBE307:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 454              		.loc 1 106 2 view .LVU136
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 455              		.loc 1 106 16 is_stmt 0 view .LVU137
 456 0038 0023     		movs	r3, #0
 457 003a 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 458              		.loc 1 108 2 is_stmt 1 view .LVU138
 459              	.LVL39:
 108:src/keys.c    **** }
 460              		.loc 1 108 2 is_stmt 0 view .LVU139
 461              	.LBE306:
 462              	.LBE305:
 463              	.LBE321:
 610:src/keys.c    **** 
 464              		.loc 1 610 1 view .LVU140
 465 003c 38BD     		pop	{r3, r4, r5, pc}
 466              	.LVL40:
 467              	.L40:
 571:src/keys.c    **** 
 468              		.loc 1 571 2 is_stmt 1 view .LVU141
 469 003e FFF7FEFF 		bl	process_cmdline
 470              	.LVL41:
 573:src/keys.c    **** 	State2.registerlist = 0;
 471              		.loc 1 573 2 view .LVU142
 574:src/keys.c    **** 	State2.status = 0;
 472              		.loc 1 574 2 view .LVU143
 573:src/keys.c    **** 	State2.registerlist = 0;
 473              		.loc 1 573 19 is_stmt 0 view .LVU144
 474 0042 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 475              		.loc 1 575 16 view .LVU145
 476 0044 0022     		movs	r2, #0
 573:src/keys.c    **** 	State2.registerlist = 0;
 477              		.loc 1 573 19 view .LVU146
 478 0046 23F00C03 		bic	r3, r3, #12
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
ARM GAS  /tmp/ccK8gYGY.s 			page 63


 479              		.loc 1 578 2 view .LVU147
 480 004a 162D     		cmp	r5, #22
 573:src/keys.c    **** 	State2.registerlist = 0;
 481              		.loc 1 573 19 view .LVU148
 482 004c E375     		strb	r3, [r4, #23]
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 483              		.loc 1 575 2 is_stmt 1 view .LVU149
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 484              		.loc 1 575 16 is_stmt 0 view .LVU150
 485 004e 2273     		strb	r2, [r4, #12]
 576:src/keys.c    **** 
 486              		.loc 1 576 2 is_stmt 1 view .LVU151
 576:src/keys.c    **** 
 487              		.loc 1 576 19 is_stmt 0 view .LVU152
 488 0050 A273     		strb	r2, [r4, #14]
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 489              		.loc 1 578 2 is_stmt 1 view .LVU153
 490 0052 1BD0     		beq	.L42
 491 0054 172D     		cmp	r5, #23
 492 0056 06D1     		bne	.L56
 594:src/keys.c    **** 		break;
 493              		.loc 1 594 3 view .LVU154
 594:src/keys.c    **** 		break;
 494              		.loc 1 594 17 is_stmt 0 view .LVU155
 495 0058 0123     		movs	r3, #1
 496 005a 2373     		strb	r3, [r4, #12]
 595:src/keys.c    **** 
 497              		.loc 1 595 3 is_stmt 1 view .LVU156
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 498              		.loc 1 606 2 view .LVU157
 499              	.LBB322:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 500              		.loc 1 114 13 view .LVU158
 501              	.LBE322:
 115:src/keys.c    **** }
 502              		.loc 1 115 2 view .LVU159
 503              	.LVL42:
 504              	.LBB323:
 505              	.LBB318:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 506              		.loc 1 104 20 view .LVU160
 507              	.LBB315:
 105:src/keys.c    **** 	State2.shifts = shift;
 508              		.loc 1 105 2 view .LVU161
 509              	.LBB312:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 510              		.loc 1 96 13 view .LVU162
 511              	.LBB309:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 512              		.loc 1 97 2 view .LVU163
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 513              		.loc 1 97 18 is_stmt 0 view .LVU164
 514 005c FFF7FEFF 		bl	shift_down
 515              	.LVL43:
  98:src/keys.c    **** }
 516              		.loc 1 98 2 is_stmt 1 view .LVU165
 517              	.LBE309:
ARM GAS  /tmp/ccK8gYGY.s 			page 64


 518              	.LBE312:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 519              		.loc 1 106 2 view .LVU166
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 520              		.loc 1 106 16 is_stmt 0 view .LVU167
 521 0060 0023     		movs	r3, #0
 522 0062 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 523              		.loc 1 108 2 is_stmt 1 view .LVU168
 524              	.LVL44:
 108:src/keys.c    **** }
 525              		.loc 1 108 2 is_stmt 0 view .LVU169
 526              	.LBE315:
 527              	.LBE318:
 528              	.LBE323:
 610:src/keys.c    **** 
 529              		.loc 1 610 1 view .LVU170
 530 0064 38BD     		pop	{r3, r4, r5, pc}
 531              	.L56:
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 532              		.loc 1 578 2 view .LVU171
 533 0066 152D     		cmp	r5, #21
 534 0068 1CD1     		bne	.L44
 581:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 535              		.loc 1 581 3 is_stmt 1 view .LVU172
 582:src/keys.c    **** 		break;
 536              		.loc 1 582 41 is_stmt 0 view .LVU173
 537 006a 1F49     		ldr	r1, .L58+4
 581:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 538              		.loc 1 581 20 view .LVU174
 539 006c DBB2     		uxtb	r3, r3
 582:src/keys.c    **** 		break;
 540              		.loc 1 582 41 view .LVU175
 541 006e 0968     		ldr	r1, [r1]
 581:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 542              		.loc 1 581 20 view .LVU176
 543 0070 43F00403 		orr	r3, r3, #4
 544 0074 E375     		strb	r3, [r4, #23]
 582:src/keys.c    **** 		break;
 545              		.loc 1 582 3 is_stmt 1 view .LVU177
 582:src/keys.c    **** 		break;
 546              		.loc 1 582 19 is_stmt 0 view .LVU178
 547 0076 B1F8EC07 		ldrh	r0, [r1, #2028]
 548 007a 1146     		mov	r1, r2
 549 007c FFF7FEFF 		bl	advance_to_next_label
 550              	.LVL45:
 582:src/keys.c    **** 		break;
 551              		.loc 1 582 17 view .LVU179
 552 0080 2081     		strh	r0, [r4, #8]	@ movhi
 583:src/keys.c    **** 	
 553              		.loc 1 583 3 is_stmt 1 view .LVU180
 554              	.L45:
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 555              		.loc 1 606 2 view .LVU181
 556              	.LBB324:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 557              		.loc 1 114 13 view .LVU182
ARM GAS  /tmp/ccK8gYGY.s 			page 65


 558              	.LBE324:
 115:src/keys.c    **** }
 559              		.loc 1 115 2 view .LVU183
 560              	.LVL46:
 561              	.LBB325:
 562              	.LBB319:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 563              		.loc 1 104 20 view .LVU184
 564              	.LBB316:
 105:src/keys.c    **** 	State2.shifts = shift;
 565              		.loc 1 105 2 view .LVU185
 566              	.LBB313:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 567              		.loc 1 96 13 view .LVU186
 568              	.LBB310:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 569              		.loc 1 97 2 view .LVU187
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 570              		.loc 1 97 18 is_stmt 0 view .LVU188
 571 0082 FFF7FEFF 		bl	shift_down
 572              	.LVL47:
  98:src/keys.c    **** }
 573              		.loc 1 98 2 is_stmt 1 view .LVU189
 574              	.LBE310:
 575              	.LBE313:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 576              		.loc 1 106 2 view .LVU190
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 577              		.loc 1 106 16 is_stmt 0 view .LVU191
 578 0086 0023     		movs	r3, #0
 579 0088 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 580              		.loc 1 108 2 is_stmt 1 view .LVU192
 581              	.LVL48:
 108:src/keys.c    **** }
 582              		.loc 1 108 2 is_stmt 0 view .LVU193
 583              	.LBE316:
 584              	.LBE319:
 585              	.LBE325:
 610:src/keys.c    **** 
 586              		.loc 1 610 1 view .LVU194
 587 008a 38BD     		pop	{r3, r4, r5, pc}
 588              	.L42:
 587:src/keys.c    **** 		State2.digval = regX_idx;
 589              		.loc 1 587 3 is_stmt 1 view .LVU195
 587:src/keys.c    **** 		State2.digval = regX_idx;
 590              		.loc 1 587 23 is_stmt 0 view .LVU196
 591 008c E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 589:src/keys.c    **** 		break;
 592              		.loc 1 589 18 view .LVU197
 593 008e A272     		strb	r2, [r4, #10]
 587:src/keys.c    **** 		State2.digval = regX_idx;
 594              		.loc 1 587 23 view .LVU198
 595 0090 43F00803 		orr	r3, r3, #8
 588:src/keys.c    **** 		State2.digval2 = 0;
 596              		.loc 1 588 17 view .LVU199
 597 0094 6422     		movs	r2, #100
ARM GAS  /tmp/ccK8gYGY.s 			page 66


 587:src/keys.c    **** 		State2.digval = regX_idx;
 598              		.loc 1 587 23 view .LVU200
 599 0096 E375     		strb	r3, [r4, #23]
 588:src/keys.c    **** 		State2.digval2 = 0;
 600              		.loc 1 588 3 is_stmt 1 view .LVU201
 588:src/keys.c    **** 		State2.digval2 = 0;
 601              		.loc 1 588 17 is_stmt 0 view .LVU202
 602 0098 2281     		strh	r2, [r4, #8]	@ movhi
 589:src/keys.c    **** 		break;
 603              		.loc 1 589 3 is_stmt 1 view .LVU203
 590:src/keys.c    **** 
 604              		.loc 1 590 3 view .LVU204
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 605              		.loc 1 606 2 view .LVU205
 606              	.LBB326:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 607              		.loc 1 114 13 view .LVU206
 608              	.LBE326:
 115:src/keys.c    **** }
 609              		.loc 1 115 2 view .LVU207
 610              	.LVL49:
 611              	.LBB327:
 612              	.LBB320:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 613              		.loc 1 104 20 view .LVU208
 614              	.LBB317:
 105:src/keys.c    **** 	State2.shifts = shift;
 615              		.loc 1 105 2 view .LVU209
 616              	.LBB314:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 617              		.loc 1 96 13 view .LVU210
 618              	.LBB311:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 619              		.loc 1 97 2 view .LVU211
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 620              		.loc 1 97 18 is_stmt 0 view .LVU212
 621 009a FFF7FEFF 		bl	shift_down
 622              	.LVL50:
  98:src/keys.c    **** }
 623              		.loc 1 98 2 is_stmt 1 view .LVU213
 624              	.LBE311:
 625              	.LBE314:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 626              		.loc 1 106 2 view .LVU214
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 627              		.loc 1 106 16 is_stmt 0 view .LVU215
 628 009e 0023     		movs	r3, #0
 629 00a0 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 630              		.loc 1 108 2 is_stmt 1 view .LVU216
 631              	.LVL51:
 108:src/keys.c    **** }
 632              		.loc 1 108 2 is_stmt 0 view .LVU217
 633              	.LBE317:
 634              	.LBE320:
 635              	.LBE327:
 610:src/keys.c    **** 
ARM GAS  /tmp/ccK8gYGY.s 			page 67


 636              		.loc 1 610 1 view .LVU218
 637 00a2 38BD     		pop	{r3, r4, r5, pc}
 638              	.L44:
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 639              		.loc 1 599 3 is_stmt 1 view .LVU219
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 640              		.loc 1 600 44 is_stmt 0 view .LVU220
 641 00a4 022D     		cmp	r5, #2
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 642              		.loc 1 599 20 view .LVU221
 643 00a6 A573     		strb	r5, [r4, #14]
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 644              		.loc 1 600 3 is_stmt 1 view .LVU222
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 645              		.loc 1 600 44 is_stmt 0 view .LVU223
 646 00a8 12D1     		bne	.L57
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 647              		.loc 1 600 16 view .LVU224
 648 00aa 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 649 00ac 43F00203 		orr	r3, r3, #2
 650 00b0 6375     		strb	r3, [r4, #21]
 601:src/keys.c    **** 			// Different catalogue, reset position
 651              		.loc 1 601 3 is_stmt 1 view .LVU225
 652              	.L49:
 601:src/keys.c    **** 			// Different catalogue, reset position
 653              		.loc 1 601 32 is_stmt 0 discriminator 1 view .LVU226
 654 00b2 0D4B     		ldr	r3, .L58+4
 655 00b4 1A68     		ldr	r2, [r3]
 601:src/keys.c    **** 			// Different catalogue, reset position
 656              		.loc 1 601 37 discriminator 1 view .LVU227
 657 00b6 92F8DC37 		ldrb	r3, [r2, #2012]	@ zero_extendqisi2
 601:src/keys.c    **** 			// Different catalogue, reset position
 658              		.loc 1 601 29 discriminator 1 view .LVU228
 659 00ba 03F01F03 		and	r3, r3, #31
 660 00be AB42     		cmp	r3, r5
 661 00c0 DFD0     		beq	.L45
 603:src/keys.c    **** 		}
 662              		.loc 1 603 4 is_stmt 1 view .LVU229
 603:src/keys.c    **** 		}
 663              		.loc 1 603 17 is_stmt 0 view .LVU230
 664 00c2 B2F8DC37 		ldrh	r3, [r2, #2012]
 665 00c6 6FF34B13 		bfc	r3, #5, #7
 666 00ca A2F8DC37 		strh	r3, [r2, #2012]	@ movhi
 667 00ce D8E7     		b	.L45
 668              	.L57:
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 669              		.loc 1 600 44 view .LVU231
 670 00d0 A5F11101 		sub	r1, r5, #17
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 671              		.loc 1 600 16 view .LVU232
 672 00d4 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 673              		.loc 1 600 44 view .LVU233
 674 00d6 4A42     		rsbs	r2, r1, #0
 675 00d8 4A41     		adcs	r2, r2, r1
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 676              		.loc 1 600 16 view .LVU234
ARM GAS  /tmp/ccK8gYGY.s 			page 68


 677 00da 62F34103 		bfi	r3, r2, #1, #1
 678 00de 6375     		strb	r3, [r4, #21]
 601:src/keys.c    **** 			// Different catalogue, reset position
 679              		.loc 1 601 3 is_stmt 1 view .LVU235
 680 00e0 E7E7     		b	.L49
 681              	.L59:
 682 00e2 00BF     		.align	2
 683              	.L58:
 684 00e4 00000000 		.word	StateWhileOn
 685 00e8 00000000 		.word	main_ram
 686              		.cfi_endproc
 687              	.LFE12:
 689              		.section	.text.advance_to_previous_label,"ax",%progbits
 690              		.align	1
 691              		.p2align 2,,3
 692              		.syntax unified
 693              		.thumb
 694              		.thumb_func
 695              		.fpu fpv4-sp-d16
 697              	advance_to_previous_label:
 698              	.LVL52:
 699              	.LFB56:
2972:src/keys.c    **** 
2973:src/keys.c    **** static unsigned int advance_to_previous_label(unsigned int pc, int search_end) {
 700              		.loc 1 2973 80 view -0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704              		.loc 1 2973 80 is_stmt 0 view .LVU237
 705 0000 70B5     		push	{r4, r5, r6, lr}
 706              		.cfi_def_cfa_offset 16
 707              		.cfi_offset 4, -16
 708              		.cfi_offset 5, -12
 709              		.cfi_offset 6, -8
 710              		.cfi_offset 14, -4
 711 0002 124E     		ldr	r6, .L69
 712              		.loc 1 2973 80 view .LVU238
 713 0004 0446     		mov	r4, r0
 714 0006 0D46     		mov	r5, r1
 715              	.LVL53:
 716              	.L61:
2974:src/keys.c    **** 	do {
 717              		.loc 1 2974 2 is_stmt 1 view .LVU239
2975:src/keys.c    **** 		for (;;) {
 718              		.loc 1 2975 3 view .LVU240
2976:src/keys.c    **** 			pc = do_dec(pc, 0);
 719              		.loc 1 2976 4 view .LVU241
 720              		.loc 1 2976 9 is_stmt 0 view .LVU242
 721 0008 2046     		mov	r0, r4
 722 000a 0021     		movs	r1, #0
 723 000c FFF7FEFF 		bl	do_dec
 724              	.LVL54:
2977:src/keys.c    **** 			if (PcWrapped)
2978:src/keys.c    **** 				break;
2979:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 725              		.loc 1 2979 4 is_stmt 1 view .LVU243
2980:src/keys.c    **** 				return pc;
ARM GAS  /tmp/ccK8gYGY.s 			page 69


2981:src/keys.c    **** 			}
2982:src/keys.c    **** 		}
2983:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) - 1) & 3);
 726              		.loc 1 2983 3 view .LVU244
 727              		.loc 1 2983 8 is_stmt 0 view .LVU245
 728 0010 20F47F53 		bic	r3, r0, #16320
 729 0014 23F03F03 		bic	r3, r3, #63
2977:src/keys.c    **** 			if (PcWrapped)
 730              		.loc 1 2977 7 view .LVU246
 731 0018 3268     		ldr	r2, [r6]
 732              		.loc 1 2983 8 view .LVU247
 733 001a A3F58043 		sub	r3, r3, #16384
2984:src/keys.c    **** 		pc = do_dec(pc, 0);
 734              		.loc 1 2984 8 view .LVU248
 735 001e 0021     		movs	r1, #0
2976:src/keys.c    **** 			if (PcWrapped)
 736              		.loc 1 2976 9 view .LVU249
 737 0020 0446     		mov	r4, r0
 738              	.LVL55:
2977:src/keys.c    **** 				break;
 739              		.loc 1 2977 4 is_stmt 1 view .LVU250
2983:src/keys.c    **** 		pc = do_dec(pc, 0);
 740              		.loc 1 2983 8 is_stmt 0 view .LVU251
 741 0022 9BB2     		uxth	r3, r3
 742              	.LVL56:
 743              		.loc 1 2984 3 is_stmt 1 view .LVU252
2977:src/keys.c    **** 				break;
 744              		.loc 1 2977 7 is_stmt 0 view .LVU253
 745 0024 32B9     		cbnz	r2, .L62
2979:src/keys.c    **** 				return pc;
 746              		.loc 1 2979 8 view .LVU254
 747 0026 2946     		mov	r1, r5
 748 0028 FFF7FEFF 		bl	is_label_or_end_at
 749              	.LVL57:
2979:src/keys.c    **** 				return pc;
 750              		.loc 1 2979 7 view .LVU255
 751 002c 0028     		cmp	r0, #0
 752 002e EBD0     		beq	.L61
2985:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
2986:src/keys.c    **** 	return pc;
2987:src/keys.c    **** }
 753              		.loc 1 2987 1 view .LVU256
 754 0030 2046     		mov	r0, r4
 755 0032 70BD     		pop	{r4, r5, r6, pc}
 756              	.LVL58:
 757              	.L62:
2984:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 758              		.loc 1 2984 8 view .LVU257
 759 0034 43F00100 		orr	r0, r3, #1
 760 0038 FFF7FEFF 		bl	do_dec
 761              	.LVL59:
2985:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 762              		.loc 1 2985 13 view .LVU258
 763 003c 2946     		mov	r1, r5
2984:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 764              		.loc 1 2984 8 view .LVU259
 765 003e 0446     		mov	r4, r0
ARM GAS  /tmp/ccK8gYGY.s 			page 70


 766              	.LVL60:
2985:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 767              		.loc 1 2985 10 is_stmt 1 view .LVU260
2985:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 768              		.loc 1 2985 13 is_stmt 0 view .LVU261
 769 0040 FFF7FEFF 		bl	is_label_or_end_at
 770              	.LVL61:
2985:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 771              		.loc 1 2985 2 view .LVU262
 772 0044 0028     		cmp	r0, #0
 773 0046 DFD0     		beq	.L61
 774              		.loc 1 2987 1 view .LVU263
 775 0048 2046     		mov	r0, r4
 776 004a 70BD     		pop	{r4, r5, r6, pc}
 777              	.LVL62:
 778              	.L70:
 779              		.loc 1 2987 1 view .LVU264
 780              		.align	2
 781              	.L69:
 782 004c 00000000 		.word	PcWrapped
 783              		.cfi_endproc
 784              	.LFE56:
 786              		.section	.text.check_confirm.part.0,"ax",%progbits
 787              		.align	1
 788              		.p2align 2,,3
 789              		.syntax unified
 790              		.thumb
 791              		.thumb_func
 792              		.fpu fpv4-sp-d16
 794              	check_confirm.part.0:
 795              	.LVL63:
 796              	.LFB64:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 797              		.loc 1 714 12 is_stmt 1 view -0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801              		@ link register save eliminated.
 802              	.LBB328:
 716:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 803              		.loc 1 716 3 view .LVU266
 716:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 804              		.loc 1 716 13 is_stmt 0 view .LVU267
 805 0000 C3B2     		uxtb	r3, r0
 806              	.LVL64:
 717:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 807              		.loc 1 717 3 is_stmt 1 view .LVU268
 717:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 808              		.loc 1 717 25 is_stmt 0 view .LVU269
 809 0002 A3F14102 		sub	r2, r3, #65
 717:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 810              		.loc 1 717 6 view .LVU270
 811 0006 032A     		cmp	r2, #3
 812 0008 0AD9     		bls	.L76
 725:src/keys.c    **** #endif
 813              		.loc 1 725 7 is_stmt 1 view .LVU271
 725:src/keys.c    **** #endif
ARM GAS  /tmp/ccK8gYGY.s 			page 71


 814              		.loc 1 725 29 is_stmt 0 view .LVU272
 815 000a A3F1AD02 		sub	r2, r3, #173
 725:src/keys.c    **** #endif
 816              		.loc 1 725 10 view .LVU273
 817 000e 052A     		cmp	r2, #5
 818 0010 03D8     		bhi	.L77
 819              	.L74:
 735:src/keys.c    **** 		}
 820              		.loc 1 735 4 is_stmt 1 view .LVU274
 735:src/keys.c    **** 		}
 821              		.loc 1 735 20 is_stmt 0 view .LVU275
 822 0012 074B     		ldr	r3, .L78
 823              	.LVL65:
 735:src/keys.c    **** 		}
 824              		.loc 1 735 20 view .LVU276
 825 0014 0122     		movs	r2, #1
 826              	.LVL66:
 735:src/keys.c    **** 		}
 827              		.loc 1 735 20 view .LVU277
 828 0016 1A60     		str	r2, [r3]
 829              	.LBE328:
 739:src/keys.c    **** 
 830              		.loc 1 739 1 view .LVU278
 831 0018 7047     		bx	lr
 832              	.LVL67:
 833              	.L77:
 834              	.LBB329:
 731:src/keys.c    **** #endif
 835              		.loc 1 731 4 view .LVU279
 836 001a CF2B     		cmp	r3, #207
 837 001c F9D0     		beq	.L74
 838              	.LBE329:
 739:src/keys.c    **** 
 839              		.loc 1 739 1 view .LVU280
 840 001e 7047     		bx	lr
 841              	.L76:
 842              	.LBB330:
 718:src/keys.c    **** 			return STATE_UNFINISHED;
 843              		.loc 1 718 4 is_stmt 1 view .LVU281
 718:src/keys.c    **** 			return STATE_UNFINISHED;
 844              		.loc 1 718 19 is_stmt 0 view .LVU282
 845 0020 044B     		ldr	r3, .L78+4
 846              	.LVL68:
 718:src/keys.c    **** 			return STATE_UNFINISHED;
 847              		.loc 1 718 19 view .LVU283
 848 0022 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
 849              	.LVL69:
 718:src/keys.c    **** 			return STATE_UNFINISHED;
 850              		.loc 1 718 35 view .LVU284
 851 0024 4038     		subs	r0, r0, #64
 852              	.LVL70:
 718:src/keys.c    **** 			return STATE_UNFINISHED;
 853              		.loc 1 718 19 view .LVU285
 854 0026 60F30202 		bfi	r2, r0, #0, #3
 855 002a 1A75     		strb	r2, [r3, #20]
 719:src/keys.c    **** 		}
 856              		.loc 1 719 4 is_stmt 1 view .LVU286
ARM GAS  /tmp/ccK8gYGY.s 			page 72


 719:src/keys.c    **** 		}
 857              		.loc 1 719 11 is_stmt 0 view .LVU287
 858 002c 3320     		movs	r0, #51
 859              	.LVL71:
 719:src/keys.c    **** 		}
 860              		.loc 1 719 11 view .LVU288
 861 002e 7047     		bx	lr
 862              	.L79:
 863              		.align	2
 864              	.L78:
 865 0030 00000000 		.word	NonProgrammable
 866 0034 00000000 		.word	StateWhileOn
 867              	.LBE330:
 868              		.cfi_endproc
 869              	.LFE64:
 871              		.section	.text.init_arg.part.0,"ax",%progbits
 872              		.align	1
 873              		.p2align 2,,3
 874              		.syntax unified
 875              		.thumb
 876              		.thumb_func
 877              		.fpu fpv4-sp-d16
 879              	init_arg.part.0:
 880              	.LVL72:
 881              	.LFB66:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 882              		.loc 1 552 13 is_stmt 1 view -0
 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 0
 885              		@ frame_needed = 0, uses_anonymous_args = 0
 886              		@ link register save eliminated.
 555:src/keys.c    **** 	State2.ind = 0;
 887              		.loc 1 555 2 view .LVU290
 555:src/keys.c    **** 	State2.ind = 0;
 888              		.loc 1 555 10 is_stmt 0 view .LVU291
 889 0000 084B     		ldr	r3, .L81
 560:src/keys.c    **** 	State2.local = 0;
 890              		.loc 1 560 13 view .LVU292
 891 0002 5969     		ldr	r1, [r3, #20]
 555:src/keys.c    **** 	State2.ind = 0;
 892              		.loc 1 555 10 view .LVU293
 893 0004 D877     		strb	r0, [r3, #31]
 556:src/keys.c    **** 	State2.digval = 0;
 894              		.loc 1 556 2 is_stmt 1 view .LVU294
 557:src/keys.c    **** 	State2.numdigit = 0;
 895              		.loc 1 557 2 view .LVU295
 560:src/keys.c    **** 	State2.local = 0;
 896              		.loc 1 560 13 is_stmt 0 view .LVU296
 897 0006 21F40F11 		bic	r1, r1, #2342912
 898 000a 8628     		cmp	r0, #134
 899 000c 0CBF     		ite	eq
 900 000e 4FF40812 		moveq	r2, #2228224
 901 0012 4FF40012 		movne	r2, #2097152
 902 0016 0A43     		orrs	r2, r2, r1
 557:src/keys.c    **** 	State2.numdigit = 0;
 903              		.loc 1 557 16 view .LVU297
 904 0018 0021     		movs	r1, #0
ARM GAS  /tmp/ccK8gYGY.s 			page 73


 560:src/keys.c    **** 	State2.local = 0;
 905              		.loc 1 560 13 view .LVU298
 906 001a 5A61     		str	r2, [r3, #20]
 557:src/keys.c    **** 	State2.numdigit = 0;
 907              		.loc 1 557 16 view .LVU299
 908 001c 1981     		strh	r1, [r3, #8]	@ movhi
 558:src/keys.c    **** 	State2.rarg = 1;
 909              		.loc 1 558 2 is_stmt 1 view .LVU300
 558:src/keys.c    **** 	State2.rarg = 1;
 910              		.loc 1 558 18 is_stmt 0 view .LVU301
 911 001e D972     		strb	r1, [r3, #11]
 559:src/keys.c    **** 	State2.dot = 0;
 912              		.loc 1 559 2 is_stmt 1 view .LVU302
 560:src/keys.c    **** 	State2.local = 0;
 913              		.loc 1 560 2 view .LVU303
 561:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 914              		.loc 1 561 2 view .LVU304
 562:src/keys.c    **** }
 915              		.loc 1 562 2 view .LVU305
 563:src/keys.c    **** 
 916              		.loc 1 563 1 is_stmt 0 view .LVU306
 917 0020 7047     		bx	lr
 918              	.L82:
 919 0022 00BF     		.align	2
 920              	.L81:
 921 0024 00000000 		.word	StateWhileOn
 922              		.cfi_endproc
 923              	.LFE66:
 925              		.section	.text.reset_arg,"ax",%progbits
 926              		.align	1
 927              		.p2align 2,,3
 928              		.syntax unified
 929              		.thumb
 930              		.thumb_func
 931              		.fpu fpv4-sp-d16
 933              	reset_arg:
 934              	.LFB34:
1899:src/keys.c    **** 	init_arg((enum rarg) 0);
 935              		.loc 1 1899 29 is_stmt 1 view -0
 936              		.cfi_startproc
 937              		@ args = 0, pretend = 0, frame = 0
 938              		@ frame_needed = 0, uses_anonymous_args = 0
1900:src/keys.c    **** 	State2.rarg = 0;
 939              		.loc 1 1900 2 view .LVU308
 940              	.LVL73:
 941              	.LBB331:
 942              	.LBI331:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 943              		.loc 1 552 13 view .LVU309
 944              	.LBB332:
 553:src/keys.c    **** 		return;
 945              		.loc 1 553 2 view .LVU310
 946              	.LBE332:
 947              	.LBE331:
1899:src/keys.c    **** 	init_arg((enum rarg) 0);
 948              		.loc 1 1899 29 is_stmt 0 view .LVU311
 949 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccK8gYGY.s 			page 74


 950              		.cfi_def_cfa_offset 8
 951              		.cfi_offset 3, -8
 952              		.cfi_offset 14, -4
 953              	.LBB334:
 954              	.LBB333:
 553:src/keys.c    **** 		return;
 955              		.loc 1 553 6 view .LVU312
 956 0002 FFF7FEFF 		bl	is_bad_cmdline
 957              	.LVL74:
 553:src/keys.c    **** 		return;
 958              		.loc 1 553 5 view .LVU313
 959 0006 08B9     		cbnz	r0, .L84
 960 0008 FFF7FEFF 		bl	init_arg.part.0
 961              	.LVL75:
 962              	.L84:
 553:src/keys.c    **** 		return;
 963              		.loc 1 553 5 view .LVU314
 964              	.LBE333:
 965              	.LBE334:
1901:src/keys.c    **** }
 966              		.loc 1 1901 2 is_stmt 1 view .LVU315
1901:src/keys.c    **** }
 967              		.loc 1 1901 14 is_stmt 0 view .LVU316
 968 000c 024B     		ldr	r3, .L86
 969 000e 9A7D     		ldrb	r2, [r3, #22]	@ zero_extendqisi2
 970 0010 6FF34512 		bfc	r2, #5, #1
 971 0014 9A75     		strb	r2, [r3, #22]
1902:src/keys.c    **** 
 972              		.loc 1 1902 1 view .LVU317
 973 0016 08BD     		pop	{r3, pc}
 974              	.L87:
 975              		.align	2
 976              	.L86:
 977 0018 00000000 		.word	StateWhileOn
 978              		.cfi_endproc
 979              	.LFE34:
 981              		.section	.text.arg_eval,"ax",%progbits
 982              		.align	1
 983              		.p2align 2,,3
 984              		.syntax unified
 985              		.thumb
 986              		.thumb_func
 987              		.fpu fpv4-sp-d16
 989              	arg_eval:
 990              	.LVL76:
 991              	.LFB35:
1904:src/keys.c    ****    const unsigned int base = CmdBase;
 992              		.loc 1 1904 40 is_stmt 1 view -0
 993              		.cfi_startproc
 994              		@ args = 0, pretend = 0, frame = 0
 995              		@ frame_needed = 0, uses_anonymous_args = 0
1905:src/keys.c    ****    int r = RARG(base, val 
 996              		.loc 1 1905 4 view .LVU319
1904:src/keys.c    ****    const unsigned int base = CmdBase;
 997              		.loc 1 1904 40 is_stmt 0 view .LVU320
 998 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 999              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccK8gYGY.s 			page 75


 1000              		.cfi_offset 3, -24
 1001              		.cfi_offset 4, -20
 1002              		.cfi_offset 5, -16
 1003              		.cfi_offset 6, -12
 1004              		.cfi_offset 7, -8
 1005              		.cfi_offset 14, -4
1905:src/keys.c    ****    int r = RARG(base, val 
 1006              		.loc 1 1905 30 view .LVU321
 1007 0002 234B     		ldr	r3, .L112
1906:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1008              		.loc 1 1906 12 view .LVU322
 1009 0004 9D7D     		ldrb	r5, [r3, #22]	@ zero_extendqisi2
 1010 0006 597D     		ldrb	r1, [r3, #21]	@ zero_extendqisi2
1905:src/keys.c    ****    int r = RARG(base, val 
 1011              		.loc 1 1905 23 view .LVU323
 1012 0008 DA7F     		ldrb	r2, [r3, #31]	@ zero_extendqisi2
 1013              	.LVL77:
1906:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1014              		.loc 1 1906 4 is_stmt 1 view .LVU324
1906:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1015              		.loc 1 1906 12 is_stmt 0 view .LVU325
 1016 000a EE07     		lsls	r6, r5, #31
1909:src/keys.c    **** 
 1017              		.loc 1 1909 34 view .LVU326
 1018 000c 214E     		ldr	r6, .L112+4
 1019 000e 3668     		ldr	r6, [r6]
1906:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1020              		.loc 1 1906 12 view .LVU327
 1021 0010 01F08003 		and	r3, r1, #128
1909:src/keys.c    **** 
 1022              		.loc 1 1909 32 view .LVU328
 1023 0014 96F8EA77 		ldrb	r7, [r6, #2026]	@ zero_extendqisi2
1906:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1024              		.loc 1 1906 12 view .LVU329
 1025 0018 0344     		add	r3, r3, r0
 1026 001a 02F12004 		add	r4, r2, #32
 1027 001e 48BF     		it	mi
 1028 0020 7033     		addmi	r3, r3, #112
 1029 0022 2402     		lsls	r4, r4, #8
1909:src/keys.c    **** 
 1030              		.loc 1 1909 79 view .LVU330
 1031 0024 3F07     		lsls	r7, r7, #28
1906:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1032              		.loc 1 1906 12 view .LVU331
 1033 0026 44EA0304 		orr	r4, r4, r3
 1034              	.LVL78:
1909:src/keys.c    **** 
 1035              		.loc 1 1909 4 is_stmt 1 view .LVU332
1909:src/keys.c    **** 
 1036              		.loc 1 1909 79 is_stmt 0 view .LVU333
 1037 002a 25D5     		bpl	.L95
1909:src/keys.c    **** 
 1038              		.loc 1 1909 79 discriminator 2 view .LVU334
 1039 002c 15F0400F 		tst	r5, #64
 1040 0030 0CBF     		ite	eq
 1041 0032 0425     		moveq	r5, #4
 1042 0034 0825     		movne	r5, #8
ARM GAS  /tmp/ccK8gYGY.s 			page 76


 1043              	.L90:
 1044              	.LVL79:
1911:src/keys.c    ****      /*
 1045              		.loc 1 1911 4 is_stmt 1 discriminator 6 view .LVU335
1911:src/keys.c    ****      /*
 1046              		.loc 1 1911 7 is_stmt 0 discriminator 6 view .LVU336
 1047 0036 0B06     		lsls	r3, r1, #24
 1048 0038 1AD4     		bmi	.L91
1927:src/keys.c    ****        if (C_LOCKED) {
 1049              		.loc 1 1927 6 is_stmt 1 view .LVU337
1927:src/keys.c    ****        if (C_LOCKED) {
 1050              		.loc 1 1927 23 is_stmt 0 view .LVU338
 1051 003a 174B     		ldr	r3, .L112+8
 1052 003c 03EB0213 		add	r3, r3, r2, lsl #4
 1053 0040 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
1927:src/keys.c    ****        if (C_LOCKED) {
 1054              		.loc 1 1927 9 view .LVU339
 1055 0042 DF06     		lsls	r7, r3, #27
 1056 0044 10D5     		bpl	.L92
1927:src/keys.c    ****        if (C_LOCKED) {
 1057              		.loc 1 1927 55 discriminator 1 view .LVU340
 1058 0046 96F8AC37 		ldrb	r3, [r6, #1964]	@ zero_extendqisi2
 1059 004a 03F04103 		and	r3, r3, #65
1927:src/keys.c    ****        if (C_LOCKED) {
 1060              		.loc 1 1927 40 discriminator 1 view .LVU341
 1061 004e 412B     		cmp	r3, #65
 1062 0050 0CBF     		ite	eq
 1063 0052 0021     		moveq	r1, #0
 1064 0054 6221     		movne	r1, #98
1927:src/keys.c    ****        if (C_LOCKED) {
 1065              		.loc 1 1927 30 discriminator 1 view .LVU342
 1066 0056 8142     		cmp	r1, r0
 1067 0058 06D2     		bcs	.L92
1927:src/keys.c    ****        if (C_LOCKED) {
 1068              		.loc 1 1927 86 discriminator 6 view .LVU343
 1069 005a C107     		lsls	r1, r0, #31
 1070 005c 04D5     		bpl	.L92
1928:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
 1071              		.loc 1 1928 8 is_stmt 1 view .LVU344
1928:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
 1072              		.loc 1 1928 11 is_stmt 0 view .LVU345
 1073 005e 412B     		cmp	r3, #65
 1074 0060 11D0     		beq	.L110
 1075              	.LVL80:
 1076              	.L99:
1933:src/keys.c    ****        }
 1077              		.loc 1 1933 10 view .LVU346
 1078 0062 3324     		movs	r4, #51
 1079              	.LVL81:
1948:src/keys.c    **** 
 1080              		.loc 1 1948 2 view .LVU347
 1081 0064 2046     		mov	r0, r4
 1082              	.LVL82:
1948:src/keys.c    **** 
 1083              		.loc 1 1948 2 view .LVU348
 1084 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1085              	.LVL83:
ARM GAS  /tmp/ccK8gYGY.s 			page 77


 1086              	.L92:
1941:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1087              		.loc 1 1941 6 is_stmt 1 view .LVU349
1941:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1088              		.loc 1 1941 31 is_stmt 0 view .LVU350
 1089 0068 A2F12203 		sub	r3, r2, #34
1941:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1090              		.loc 1 1941 9 view .LVU351
 1091 006c 012B     		cmp	r3, #1
 1092 006e 05D9     		bls	.L111
 1093              	.LVL84:
 1094              	.L91:
1946:src/keys.c    ****    return r;
 1095              		.loc 1 1946 4 is_stmt 1 view .LVU352
 1096 0070 FFF7FEFF 		bl	reset_arg
 1097              	.LVL85:
1947:src/keys.c    ****  }
 1098              		.loc 1 1947 4 view .LVU353
 1099              	.L88:
1948:src/keys.c    **** 
 1100              		.loc 1 1948 2 is_stmt 0 view .LVU354
 1101 0074 2046     		mov	r0, r4
 1102 0076 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1103              	.LVL86:
 1104              	.L95:
1909:src/keys.c    **** 
 1105              		.loc 1 1909 79 view .LVU355
 1106 0078 0425     		movs	r5, #4
 1107 007a DCE7     		b	.L90
 1108              	.LVL87:
 1109              	.L111:
1941:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1110              		.loc 1 1941 76 discriminator 1 view .LVU356
 1111 007c C5F16405 		rsb	r5, r5, #100
 1112              	.LVL88:
1941:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1113              		.loc 1 1941 55 discriminator 1 view .LVU357
 1114 0080 8542     		cmp	r5, r0
 1115 0082 F5D2     		bcs	.L91
 1116 0084 EDE7     		b	.L99
 1117              	.LVL89:
 1118              	.L110:
1929:src/keys.c    **** 	 return STATE_UNFINISHED; // either leaves arg blank (if EXIT pressed) or with one digit in (STO)
 1119              		.loc 1 1929 3 is_stmt 1 view .LVU358
 1120 0086 1920     		movs	r0, #25
 1121              	.LVL90:
1929:src/keys.c    **** 	 return STATE_UNFINISHED; // either leaves arg blank (if EXIT pressed) or with one digit in (STO)
 1122              		.loc 1 1929 3 is_stmt 0 view .LVU359
 1123 0088 FFF7FEFF 		bl	error_message
 1124              	.LVL91:
1930:src/keys.c    ****        }
 1125              		.loc 1 1930 3 is_stmt 1 view .LVU360
1930:src/keys.c    ****        }
 1126              		.loc 1 1930 10 is_stmt 0 view .LVU361
 1127 008c 3324     		movs	r4, #51
 1128              	.LVL92:
1930:src/keys.c    ****        }
ARM GAS  /tmp/ccK8gYGY.s 			page 78


 1129              		.loc 1 1930 10 view .LVU362
 1130 008e F1E7     		b	.L88
 1131              	.L113:
 1132              		.align	2
 1133              	.L112:
 1134 0090 00000000 		.word	StateWhileOn
 1135 0094 00000000 		.word	main_ram
 1136 0098 00000000 		.word	argcmds
 1137              		.cfi_endproc
 1138              	.LFE35:
 1140              		.section	.text.arg_digit,"ax",%progbits
 1141              		.align	1
 1142              		.p2align 2,,3
 1143              		.syntax unified
 1144              		.thumb
 1145              		.thumb_func
 1146              		.fpu fpv4-sp-d16
 1148              	arg_digit:
 1149              	.LVL93:
 1150              	.LFB36:
1950:src/keys.c    **** 	int lim;
 1151              		.loc 1 1950 29 is_stmt 1 view -0
 1152              		.cfi_startproc
 1153              		@ args = 0, pretend = 0, frame = 8
 1154              		@ frame_needed = 0, uses_anonymous_args = 0
1951:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
 1155              		.loc 1 1951 2 view .LVU364
1953:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1156              		.loc 1 1953 2 view .LVU365
1950:src/keys.c    **** 	int lim;
 1157              		.loc 1 1950 29 is_stmt 0 view .LVU366
 1158 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1159              		.cfi_def_cfa_offset 20
 1160              		.cfi_offset 4, -20
 1161              		.cfi_offset 5, -16
 1162              		.cfi_offset 6, -12
 1163              		.cfi_offset 7, -8
 1164              		.cfi_offset 14, -4
1954:src/keys.c    **** #else
 1165              		.loc 1 1954 29 view .LVU367
 1166 0002 3E4D     		ldr	r5, .L161
1950:src/keys.c    **** 	int lim;
 1167              		.loc 1 1950 29 view .LVU368
 1168 0004 83B0     		sub	sp, sp, #12
 1169              		.cfi_def_cfa_offset 32
1950:src/keys.c    **** 	int lim;
 1170              		.loc 1 1950 29 view .LVU369
 1171 0006 0446     		mov	r4, r0
1953:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1172              		.loc 1 1953 17 view .LVU370
 1173 0008 01A8     		add	r0, sp, #4
 1174              	.LVL94:
1953:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1175              		.loc 1 1953 17 view .LVU371
 1176 000a FFF7FEFF 		bl	get_dispmode_digs
 1177              	.LVL95:
1954:src/keys.c    **** #else
ARM GAS  /tmp/ccK8gYGY.s 			page 79


 1178              		.loc 1 1954 29 view .LVU372
 1179 000e A97D     		ldrb	r1, [r5, #22]	@ zero_extendqisi2
 1180              	.LVL96:
1954:src/keys.c    **** #else
 1181              		.loc 1 1954 2 is_stmt 1 view .LVU373
 1182 0010 EE7F     		ldrb	r6, [r5, #31]	@ zero_extendqisi2
1954:src/keys.c    **** #else
 1183              		.loc 1 1954 130 is_stmt 0 view .LVU374
 1184 0012 11F0400C 		ands	ip, r1, #64
 1185 0016 01D0     		beq	.L117
1954:src/keys.c    **** #else
 1186              		.loc 1 1954 44 discriminator 2 view .LVU375
 1187 0018 502E     		cmp	r6, #80
 1188 001a 64D0     		beq	.L157
 1189              	.LVL97:
 1190              	.L117:
1958:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1191              		.loc 1 1958 2 is_stmt 1 discriminator 8 view .LVU376
1959:src/keys.c    **** 	
 1192              		.loc 1 1959 34 is_stmt 0 discriminator 8 view .LVU377
 1193 001c 384A     		ldr	r2, .L161+4
1958:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1194              		.loc 1 1958 33 discriminator 8 view .LVU378
 1195 001e 2B89     		ldrh	r3, [r5, #8]
1959:src/keys.c    **** 	
 1196              		.loc 1 1959 34 discriminator 8 view .LVU379
 1197 0020 02EB0612 		add	r2, r2, r6, lsl #4
1958:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1198              		.loc 1 1958 41 discriminator 8 view .LVU380
 1199 0024 03EB8303 		add	r3, r3, r3, lsl #2
1959:src/keys.c    **** 	
 1200              		.loc 1 1959 34 discriminator 8 view .LVU381
 1201 0028 5779     		ldrb	r7, [r2, #5]	@ zero_extendqisi2
1958:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1202              		.loc 1 1958 46 discriminator 8 view .LVU382
 1203 002a 04EB4304 		add	r4, r4, r3, lsl #1
 1204              	.LVL98:
1959:src/keys.c    **** 	
 1205              		.loc 1 1959 2 is_stmt 1 discriminator 8 view .LVU383
1959:src/keys.c    **** 	
 1206              		.loc 1 1959 39 is_stmt 0 discriminator 8 view .LVU384
 1207 002e BB07     		lsls	r3, r7, #30
 1208 0030 32D4     		bmi	.L156
1959:src/keys.c    **** 	
 1209              		.loc 1 1959 39 discriminator 2 view .LVU385
 1210 0032 95F91530 		ldrsb	r3, [r5, #21]
 1211 0036 002B     		cmp	r3, #0
 1212 0038 2EDB     		blt	.L156
 1213              	.LVL99:
1961:src/keys.c    **** 		// Handle local registers and flags
 1214              		.loc 1 1961 2 is_stmt 1 view .LVU386
1961:src/keys.c    **** 		// Handle local registers and flags
 1215              		.loc 1 1961 5 is_stmt 0 view .LVU387
 1216 003a C907     		lsls	r1, r1, #31
 1217 003c 4BD5     		bpl	.L123
1963:src/keys.c    **** 		if (State2.runmode) {
 1218              		.loc 1 1963 3 is_stmt 1 view .LVU388
ARM GAS  /tmp/ccK8gYGY.s 			page 80


1963:src/keys.c    **** 		if (State2.runmode) {
 1219              		.loc 1 1963 7 is_stmt 0 view .LVU389
 1220 003e 0F23     		movs	r3, #15
 1221 0040 0193     		str	r3, [sp, #4]
1964:src/keys.c    **** 			if (LocalRegs == 0)
 1222              		.loc 1 1964 3 is_stmt 1 view .LVU390
1964:src/keys.c    **** 			if (LocalRegs == 0)
 1223              		.loc 1 1964 6 is_stmt 0 view .LVU391
 1224 0042 BCF1000F 		cmp	ip, #0
 1225 0046 05D0     		beq	.L126
1965:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1226              		.loc 1 1965 4 is_stmt 1 view .LVU392
1965:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1227              		.loc 1 1965 8 is_stmt 0 view .LVU393
 1228 0048 2E4B     		ldr	r3, .L161+8
 1229 004a 1B68     		ldr	r3, [r3]
1965:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1230              		.loc 1 1965 7 view .LVU394
 1231 004c B3F9DE37 		ldrsh	r3, [r3, #2014]
 1232 0050 002B     		cmp	r3, #0
 1233 0052 3DD0     		beq	.L128
 1234              	.LVL100:
 1235              	.L126:
1975:src/keys.c    **** 	else {
 1236              		.loc 1 1975 65 view .LVU395
 1237 0054 0F20     		movs	r0, #15
 1238              	.L125:
1981:src/keys.c    **** 		return STATE_UNFINISHED;
 1239              		.loc 1 1981 2 is_stmt 1 view .LVU396
1981:src/keys.c    **** 		return STATE_UNFINISHED;
 1240              		.loc 1 1981 5 is_stmt 0 view .LVU397
 1241 0056 8442     		cmp	r4, r0
 1242 0058 3ADC     		bgt	.L128
 1243              	.L160:
1984:src/keys.c    **** 	++State2.numdigit;
 1244              		.loc 1 1984 2 is_stmt 1 view .LVU398
1985:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1245              		.loc 1 1985 2 is_stmt 0 view .LVU399
 1246 005a EF7A     		ldrb	r7, [r5, #11]	@ zero_extendqisi2
1984:src/keys.c    **** 	++State2.numdigit;
 1247              		.loc 1 1984 16 view .LVU400
 1248 005c 2C81     		strh	r4, [r5, #8]	@ movhi
1985:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1249              		.loc 1 1985 2 is_stmt 1 view .LVU401
 1250 005e 0137     		adds	r7, r7, #1
1986:src/keys.c    **** 		int result = arg_eval(val);
 1251              		.loc 1 1986 16 is_stmt 0 view .LVU402
 1252 0060 04EB8403 		add	r3, r4, r4, lsl #2
1985:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1253              		.loc 1 1985 2 view .LVU403
 1254 0064 FFB2     		uxtb	r7, r7
1986:src/keys.c    **** 		int result = arg_eval(val);
 1255              		.loc 1 1986 5 view .LVU404
 1256 0066 B0EB430F 		cmp	r0, r3, lsl #1
1985:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1257              		.loc 1 1985 2 view .LVU405
 1258 006a EF72     		strb	r7, [r5, #11]
ARM GAS  /tmp/ccK8gYGY.s 			page 81


1986:src/keys.c    **** 		int result = arg_eval(val);
 1259              		.loc 1 1986 2 is_stmt 1 view .LVU406
1986:src/keys.c    **** 		int result = arg_eval(val);
 1260              		.loc 1 1986 5 is_stmt 0 view .LVU407
 1261 006c 04DB     		blt	.L134
1986:src/keys.c    **** 		int result = arg_eval(val);
 1262              		.loc 1 1986 49 discriminator 1 view .LVU408
 1263 006e 3046     		mov	r0, r6
 1264 0070 FFF7FEFF 		bl	num_arg_digits
 1265              	.LVL101:
1986:src/keys.c    **** 		int result = arg_eval(val);
 1266              		.loc 1 1986 27 discriminator 1 view .LVU409
 1267 0074 8742     		cmp	r7, r0
 1268 0076 2BDB     		blt	.L128
 1269              	.L134:
 1270              	.LBB335:
1987:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1271              		.loc 1 1987 3 is_stmt 1 view .LVU410
1987:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1272              		.loc 1 1987 16 is_stmt 0 view .LVU411
 1273 0078 2046     		mov	r0, r4
 1274 007a FFF7FEFF 		bl	arg_eval
 1275              	.LVL102:
1988:src/keys.c    **** 			--State2.numdigit;
 1276              		.loc 1 1988 3 is_stmt 1 view .LVU412
1988:src/keys.c    **** 			--State2.numdigit;
 1277              		.loc 1 1988 6 is_stmt 0 view .LVU413
 1278 007e 3328     		cmp	r0, #51
 1279 0080 08D1     		bne	.L114
1989:src/keys.c    **** 			State2.digval /= 10;
 1280              		.loc 1 1989 4 is_stmt 1 view .LVU414
1990:src/keys.c    **** 		}
 1281              		.loc 1 1990 18 is_stmt 0 view .LVU415
 1282 0082 2B89     		ldrh	r3, [r5, #8]
 1283 0084 2049     		ldr	r1, .L161+12
1989:src/keys.c    **** 			State2.digval /= 10;
 1284              		.loc 1 1989 4 view .LVU416
 1285 0086 EA7A     		ldrb	r2, [r5, #11]	@ zero_extendqisi2
1990:src/keys.c    **** 		}
 1286              		.loc 1 1990 18 view .LVU417
 1287 0088 A1FB0313 		umull	r1, r3, r1, r3
 1288 008c DB08     		lsrs	r3, r3, #3
1989:src/keys.c    **** 			State2.digval /= 10;
 1289              		.loc 1 1989 4 view .LVU418
 1290 008e 013A     		subs	r2, r2, #1
1990:src/keys.c    **** 		}
 1291              		.loc 1 1990 18 view .LVU419
 1292 0090 2B81     		strh	r3, [r5, #8]	@ movhi
1989:src/keys.c    **** 			State2.digval /= 10;
 1293              		.loc 1 1989 4 view .LVU420
 1294 0092 EA72     		strb	r2, [r5, #11]
1990:src/keys.c    **** 		}
 1295              		.loc 1 1990 4 is_stmt 1 view .LVU421
 1296              	.L114:
 1297              	.LBE335:
1995:src/keys.c    **** 
 1298              		.loc 1 1995 1 is_stmt 0 view .LVU422
ARM GAS  /tmp/ccK8gYGY.s 			page 82


 1299 0094 03B0     		add	sp, sp, #12
 1300              		.cfi_remember_state
 1301              		.cfi_def_cfa_offset 20
 1302              		@ sp needed
 1303 0096 F0BD     		pop	{r4, r5, r6, r7, pc}
 1304              	.LVL103:
 1305              	.L156:
 1306              		.cfi_restore_state
1961:src/keys.c    **** 		// Handle local registers and flags
 1307              		.loc 1 1961 2 is_stmt 1 view .LVU423
1961:src/keys.c    **** 		// Handle local registers and flags
 1308              		.loc 1 1961 5 is_stmt 0 view .LVU424
 1309 0098 C807     		lsls	r0, r1, #31
 1310 009a 12D5     		bpl	.L158
1963:src/keys.c    **** 		if (State2.runmode) {
 1311              		.loc 1 1963 3 is_stmt 1 view .LVU425
1963:src/keys.c    **** 		if (State2.runmode) {
 1312              		.loc 1 1963 7 is_stmt 0 view .LVU426
 1313 009c 0F23     		movs	r3, #15
 1314 009e 0193     		str	r3, [sp, #4]
1964:src/keys.c    **** 			if (LocalRegs == 0)
 1315              		.loc 1 1964 3 is_stmt 1 view .LVU427
1964:src/keys.c    **** 			if (LocalRegs == 0)
 1316              		.loc 1 1964 6 is_stmt 0 view .LVU428
 1317 00a0 BCF1000F 		cmp	ip, #0
 1318 00a4 D6D0     		beq	.L126
1965:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1319              		.loc 1 1965 4 is_stmt 1 view .LVU429
1965:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1320              		.loc 1 1965 8 is_stmt 0 view .LVU430
 1321 00a6 174B     		ldr	r3, .L161+8
 1322 00a8 1B68     		ldr	r3, [r3]
1965:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1323              		.loc 1 1965 7 view .LVU431
 1324 00aa B3F9DE37 		ldrsh	r3, [r3, #2014]
 1325 00ae 7BB1     		cbz	r3, .L128
1968:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1326              		.loc 1 1968 5 is_stmt 1 view .LVU432
1968:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1327              		.loc 1 1968 11 is_stmt 0 view .LVU433
 1328 00b0 F0B2     		uxtb	r0, r6
 1329 00b2 FFF7FEFF 		bl	local_regs_rarg
 1330              	.LVL104:
1968:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1331              		.loc 1 1968 45 view .LVU434
 1332 00b6 0138     		subs	r0, r0, #1
1969:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1333              		.loc 1 1969 5 is_stmt 1 view .LVU435
1969:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1334              		.loc 1 1969 8 is_stmt 0 view .LVU436
 1335 00b8 0F28     		cmp	r0, #15
 1336 00ba 06DD     		ble	.L155
1970:src/keys.c    **** 			}
 1337              		.loc 1 1970 6 is_stmt 1 view .LVU437
1970:src/keys.c    **** 			}
 1338              		.loc 1 1970 10 is_stmt 0 view .LVU438
 1339 00bc 0F20     		movs	r0, #15
ARM GAS  /tmp/ccK8gYGY.s 			page 83


 1340 00be 0190     		str	r0, [sp, #4]
 1341 00c0 C9E7     		b	.L125
 1342              	.L158:
1975:src/keys.c    **** 	else {
 1343              		.loc 1 1975 3 is_stmt 1 view .LVU439
1975:src/keys.c    **** 	else {
 1344              		.loc 1 1975 65 is_stmt 0 view .LVU440
 1345 00c2 BCF1000F 		cmp	ip, #0
 1346 00c6 13D1     		bne	.L159
 1347 00c8 6320     		movs	r0, #99
 1348              	.LVL105:
 1349              	.L155:
1981:src/keys.c    **** 		return STATE_UNFINISHED;
 1350              		.loc 1 1981 5 view .LVU441
 1351 00ca 8442     		cmp	r4, r0
1979:src/keys.c    **** 	}
 1352              		.loc 1 1979 8 view .LVU442
 1353 00cc 0190     		str	r0, [sp, #4]
1981:src/keys.c    **** 		return STATE_UNFINISHED;
 1354              		.loc 1 1981 2 is_stmt 1 view .LVU443
1981:src/keys.c    **** 		return STATE_UNFINISHED;
 1355              		.loc 1 1981 5 is_stmt 0 view .LVU444
 1356 00ce C4DD     		ble	.L160
 1357              	.L128:
1966:src/keys.c    **** 			if (is_reg) {
 1358              		.loc 1 1966 12 view .LVU445
 1359 00d0 3320     		movs	r0, #51
1995:src/keys.c    **** 
 1360              		.loc 1 1995 1 view .LVU446
 1361 00d2 03B0     		add	sp, sp, #12
 1362              		.cfi_remember_state
 1363              		.cfi_def_cfa_offset 20
 1364              		@ sp needed
 1365 00d4 F0BD     		pop	{r4, r5, r6, r7, pc}
 1366              	.LVL106:
 1367              	.L123:
 1368              		.cfi_restore_state
1974:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
 1369              		.loc 1 1974 7 is_stmt 1 view .LVU447
1977:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1370              		.loc 1 1977 3 view .LVU448
1977:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1371              		.loc 1 1977 9 is_stmt 0 view .LVU449
 1372 00d6 1079     		ldrb	r0, [r2, #4]	@ zero_extendqisi2
1977:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1373              		.loc 1 1977 7 view .LVU450
 1374 00d8 0190     		str	r0, [sp, #4]
1978:src/keys.c    **** 			lim = RARG_IND - 1;
 1375              		.loc 1 1978 3 is_stmt 1 view .LVU451
1978:src/keys.c    **** 			lim = RARG_IND - 1;
 1376              		.loc 1 1978 6 is_stmt 0 view .LVU452
 1377 00da 7F28     		cmp	r0, #127
 1378 00dc BBDD     		ble	.L125
1978:src/keys.c    **** 			lim = RARG_IND - 1;
 1379              		.loc 1 1978 23 discriminator 1 view .LVU453
 1380 00de FB07     		lsls	r3, r7, #31
 1381 00e0 B9D5     		bpl	.L125
ARM GAS  /tmp/ccK8gYGY.s 			page 84


1979:src/keys.c    **** 	}
 1382              		.loc 1 1979 4 is_stmt 1 view .LVU454
1979:src/keys.c    **** 	}
 1383              		.loc 1 1979 8 is_stmt 0 view .LVU455
 1384 00e2 7F20     		movs	r0, #127
 1385 00e4 F1E7     		b	.L155
 1386              	.LVL107:
 1387              	.L157:
1954:src/keys.c    **** #else
 1388              		.loc 1 1954 93 discriminator 4 view .LVU456
 1389 00e6 0438     		subs	r0, r0, #4
 1390              	.LVL108:
1954:src/keys.c    **** #else
 1391              		.loc 1 1954 68 discriminator 4 view .LVU457
 1392 00e8 0128     		cmp	r0, #1
1954:src/keys.c    **** #else
 1393              		.loc 1 1954 130 discriminator 4 view .LVU458
 1394 00ea 98BF     		it	ls
 1395 00ec 8D26     		movls	r6, #141
 1396 00ee 95E7     		b	.L117
 1397              	.LVL109:
 1398              	.L159:
1975:src/keys.c    **** 	else {
 1399              		.loc 1 1975 26 discriminator 1 view .LVU459
 1400 00f0 F0B2     		uxtb	r0, r6
 1401 00f2 FFF7FEFF 		bl	global_regs_rarg
 1402              	.LVL110:
1975:src/keys.c    **** 	else {
 1403              		.loc 1 1975 61 discriminator 1 view .LVU460
 1404 00f6 0138     		subs	r0, r0, #1
 1405 00f8 E7E7     		b	.L155
 1406              	.L162:
 1407 00fa 00BF     		.align	2
 1408              	.L161:
 1409 00fc 00000000 		.word	StateWhileOn
 1410 0100 00000000 		.word	argcmds
 1411 0104 00000000 		.word	main_ram
 1412 0108 CDCCCCCC 		.word	-858993459
 1413              		.cfi_endproc
 1414              	.LFE36:
 1416              		.section	.text.process_arg_shuffle,"ax",%progbits
 1417              		.align	1
 1418              		.p2align 2,,3
 1419              		.syntax unified
 1420              		.thumb
 1421              		.thumb_func
 1422              		.fpu fpv4-sp-d16
 1424              	process_arg_shuffle:
 1425              	.LVL111:
 1426              	.LFB41:
2062:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1427              		.loc 1 2062 39 is_stmt 1 view -0
 1428              		.cfi_startproc
 1429              		@ args = 0, pretend = 0, frame = 0
 1430              		@ frame_needed = 0, uses_anonymous_args = 0
 1431              		@ link register save eliminated.
2063:src/keys.c    **** 	if (State2.numdigit < 4)
ARM GAS  /tmp/ccK8gYGY.s 			page 85


 1432              		.loc 1 2063 2 view .LVU462
2062:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1433              		.loc 1 2062 39 is_stmt 0 view .LVU463
 1434 0000 10B4     		push	{r4}
 1435              		.cfi_def_cfa_offset 4
 1436              		.cfi_offset 4, -4
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1437              		.loc 1 2063 31 view .LVU464
 1438 0002 0A4A     		ldr	r2, .L166
 1439 0004 D37A     		ldrb	r3, [r2, #11]	@ zero_extendqisi2
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1440              		.loc 1 2063 16 view .LVU465
 1441 0006 1189     		ldrh	r1, [r2, #8]
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1442              		.loc 1 2063 43 view .LVU466
 1443 0008 5C00     		lsls	r4, r3, #1
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1444              		.loc 1 2063 21 view .LVU467
 1445 000a A040     		lsls	r0, r0, r4
 1446              	.LVL112:
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1447              		.loc 1 2063 40 view .LVU468
 1448 000c 0133     		adds	r3, r3, #1
 1449 000e DBB2     		uxtb	r3, r3
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1450              		.loc 1 2063 16 view .LVU469
 1451 0010 0844     		add	r0, r0, r1
 1452 0012 80B2     		uxth	r0, r0
2064:src/keys.c    **** 		return STATE_UNFINISHED;
 1453              		.loc 1 2064 5 view .LVU470
 1454 0014 032B     		cmp	r3, #3
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1455              		.loc 1 2063 40 view .LVU471
 1456 0016 D372     		strb	r3, [r2, #11]
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1457              		.loc 1 2063 16 view .LVU472
 1458 0018 1081     		strh	r0, [r2, #8]	@ movhi
2064:src/keys.c    **** 		return STATE_UNFINISHED;
 1459              		.loc 1 2064 2 is_stmt 1 view .LVU473
2064:src/keys.c    **** 		return STATE_UNFINISHED;
 1460              		.loc 1 2064 5 is_stmt 0 view .LVU474
 1461 001a 03D9     		bls	.L164
2066:src/keys.c    **** }
 1462              		.loc 1 2066 2 is_stmt 1 view .LVU475
2067:src/keys.c    **** 
 1463              		.loc 1 2067 1 is_stmt 0 view .LVU476
 1464 001c 5DF8044B 		ldr	r4, [sp], #4
 1465              		.cfi_remember_state
 1466              		.cfi_restore 4
 1467              		.cfi_def_cfa_offset 0
2066:src/keys.c    **** }
 1468              		.loc 1 2066 9 view .LVU477
 1469 0020 FFF7FEBF 		b	arg_eval
 1470              	.LVL113:
 1471              	.L164:
 1472              		.cfi_restore_state
2067:src/keys.c    **** 
ARM GAS  /tmp/ccK8gYGY.s 			page 86


 1473              		.loc 1 2067 1 view .LVU478
 1474 0024 3320     		movs	r0, #51
 1475 0026 5DF8044B 		ldr	r4, [sp], #4
 1476              		.cfi_restore 4
 1477              		.cfi_def_cfa_offset 0
 1478 002a 7047     		bx	lr
 1479              	.L167:
 1480              		.align	2
 1481              	.L166:
 1482 002c 00000000 		.word	StateWhileOn
 1483              		.cfi_endproc
 1484              	.LFE41:
 1486              		.section	.text.process_h_shifted,"ax",%progbits
 1487              		.align	1
 1488              		.p2align 2,,3
 1489              		.syntax unified
 1490              		.thumb
 1491              		.thumb_func
 1492              		.fpu fpv4-sp-d16
 1494              	process_h_shifted:
 1495              	.LVL114:
 1496              	.LFB21:
1101:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1497              		.loc 1 1101 47 is_stmt 1 view -0
 1498              		.cfi_startproc
 1499              		@ args = 0, pretend = 0, frame = 0
 1500              		@ frame_needed = 0, uses_anonymous_args = 0
1104:src/keys.c    **** 		// Row 1
 1501              		.loc 1 1104 2 view .LVU480
1155:src/keys.c    **** 	int op = op_map[lc];
 1502              		.loc 1 1155 2 view .LVU481
 1503              	.LBB336:
 1504              	.LBB337:
 158:src/keys.c    **** }
 1505              		.loc 1 158 23 is_stmt 0 view .LVU482
 1506 0000 314A     		ldr	r2, .L199
 1507              	.LBE337:
 1508              	.LBE336:
1156:src/keys.c    **** 	reset_shift();
 1509              		.loc 1 1156 17 view .LVU483
 1510 0002 324B     		ldr	r3, .L199+4
 1511              	.LBB340:
 1512              	.LBB338:
 158:src/keys.c    **** }
 1513              		.loc 1 158 23 view .LVU484
 1514 0004 125C     		ldrb	r2, [r2, r0]	@ zero_extendqisi2
 1515              	.LBE338:
 1516              	.LBE340:
1101:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1517              		.loc 1 1101 47 view .LVU485
 1518 0006 70B5     		push	{r4, r5, r6, lr}
 1519              		.cfi_def_cfa_offset 16
 1520              		.cfi_offset 4, -16
 1521              		.cfi_offset 5, -12
 1522              		.cfi_offset 6, -8
 1523              		.cfi_offset 14, -4
1101:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
ARM GAS  /tmp/ccK8gYGY.s 			page 87


 1524              		.loc 1 1101 47 view .LVU486
 1525 0008 0446     		mov	r4, r0
 1526              	.LVL115:
 1527              	.LBB341:
 1528              	.LBI336:
 146:src/keys.c    **** {
 1529              		.loc 1 146 12 is_stmt 1 view .LVU487
 1530              	.LBB339:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 1531              		.loc 1 148 2 view .LVU488
 158:src/keys.c    **** }
 1532              		.loc 1 158 2 view .LVU489
 158:src/keys.c    **** }
 1533              		.loc 1 158 2 is_stmt 0 view .LVU490
 1534              	.LBE339:
 1535              	.LBE341:
1156:src/keys.c    **** 	reset_shift();
 1536              		.loc 1 1156 2 is_stmt 1 view .LVU491
 1537              	.LBB342:
 1538              	.LBB343:
 1539              	.LBB344:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1540              		.loc 1 106 16 is_stmt 0 view .LVU492
 1541 000a 314E     		ldr	r6, .L199+8
 1542              	.LBE344:
 1543              	.LBE343:
 1544              	.LBE342:
1156:src/keys.c    **** 	reset_shift();
 1545              		.loc 1 1156 17 view .LVU493
 1546 000c 33F81250 		ldrh	r5, [r3, r2, lsl #1]
 1547              	.LVL116:
1157:src/keys.c    **** 
 1548              		.loc 1 1157 2 is_stmt 1 view .LVU494
 1549              	.LBB351:
 1550              	.LBI342:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 1551              		.loc 1 114 13 view .LVU495
 1552              	.LBE351:
 115:src/keys.c    **** }
 1553              		.loc 1 115 2 view .LVU496
 1554              	.LBB352:
 1555              	.LBB349:
 1556              	.LBI343:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 1557              		.loc 1 104 20 view .LVU497
 1558              	.LBB347:
 105:src/keys.c    **** 	State2.shifts = shift;
 1559              		.loc 1 105 2 view .LVU498
 1560              	.LBB345:
 1561              	.LBI345:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 1562              		.loc 1 96 13 view .LVU499
 1563              	.LBB346:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1564              		.loc 1 97 2 view .LVU500
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1565              		.loc 1 97 18 is_stmt 0 view .LVU501
ARM GAS  /tmp/ccK8gYGY.s 			page 88


 1566 0010 FFF7FEFF 		bl	shift_down
 1567              	.LVL117:
  98:src/keys.c    **** }
 1568              		.loc 1 98 2 is_stmt 1 view .LVU502
 1569              	.LBE346:
 1570              	.LBE345:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1571              		.loc 1 106 2 view .LVU503
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1572              		.loc 1 106 16 is_stmt 0 view .LVU504
 1573 0014 0023     		movs	r3, #0
 1574              	.LBE347:
 1575              	.LBE349:
 1576              	.LBE352:
1160:src/keys.c    **** 	case K62:
 1577              		.loc 1 1160 2 view .LVU505
 1578 0016 262C     		cmp	r4, #38
 1579              	.LBB353:
 1580              	.LBB350:
 1581              	.LBB348:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1582              		.loc 1 106 16 view .LVU506
 1583 0018 3374     		strb	r3, [r6, #16]
 108:src/keys.c    **** }
 1584              		.loc 1 108 2 is_stmt 1 view .LVU507
 1585              	.LVL118:
 108:src/keys.c    **** }
 1586              		.loc 1 108 2 is_stmt 0 view .LVU508
 1587              	.LBE348:
 1588              	.LBE350:
 1589              	.LBE353:
1160:src/keys.c    **** 	case K62:
 1590              		.loc 1 1160 2 is_stmt 1 view .LVU509
 1591 001a 27D0     		beq	.L169
 1592 001c 272C     		cmp	r4, #39
 1593 001e 19D1     		bne	.L171
1173:src/keys.c    **** 			return STATE_UNFINISHED;
 1594              		.loc 1 1173 3 view .LVU510
1173:src/keys.c    **** 			return STATE_UNFINISHED;
 1595              		.loc 1 1173 7 is_stmt 0 view .LVU511
 1596 0020 FFF7FEFF 		bl	is_bad_cmdline
 1597              	.LVL119:
1173:src/keys.c    **** 			return STATE_UNFINISHED;
 1598              		.loc 1 1173 6 view .LVU512
 1599 0024 00BB     		cbnz	r0, .L181
1175:src/keys.c    **** 		process_cmdline_set_lift();
 1600              		.loc 1 1175 3 is_stmt 1 view .LVU513
1175:src/keys.c    **** 		process_cmdline_set_lift();
 1601              		.loc 1 1175 30 is_stmt 0 view .LVU514
 1602 0026 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 1603 0028 C3F38012 		ubfx	r2, r3, #6, #1
1175:src/keys.c    **** 		process_cmdline_set_lift();
 1604              		.loc 1 1175 22 view .LVU515
 1605 002c C2F10102 		rsb	r2, r2, #1
1175:src/keys.c    **** 		process_cmdline_set_lift();
 1606              		.loc 1 1175 18 view .LVU516
 1607 0030 62F38613 		bfi	r3, r2, #6, #1
ARM GAS  /tmp/ccK8gYGY.s 			page 89


 1608 0034 B375     		strb	r3, [r6, #22]
1176:src/keys.c    **** 		update_program_bounds(1);
 1609              		.loc 1 1176 3 is_stmt 1 view .LVU517
 1610 0036 FFF7FEFF 		bl	process_cmdline_set_lift
 1611              	.LVL120:
1177:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
 1612              		.loc 1 1177 3 view .LVU518
 1613 003a 0120     		movs	r0, #1
 1614 003c FFF7FEFF 		bl	update_program_bounds
 1615              	.LVL121:
1178:src/keys.c    **** 			set_pc(0);
 1616              		.loc 1 1178 3 view .LVU519
1178:src/keys.c    **** 			set_pc(0);
 1617              		.loc 1 1178 7 is_stmt 0 view .LVU520
 1618 0040 B07D     		ldrb	r0, [r6, #22]	@ zero_extendqisi2
1178:src/keys.c    **** 			set_pc(0);
 1619              		.loc 1 1178 6 view .LVU521
 1620 0042 10F04000 		ands	r0, r0, #64
 1621 0046 05D1     		bne	.L171
1178:src/keys.c    **** 			set_pc(0);
 1622              		.loc 1 1178 27 discriminator 1 view .LVU522
 1623 0048 224B     		ldr	r3, .L199+12
 1624 004a 1B68     		ldr	r3, [r3]
1178:src/keys.c    **** 			set_pc(0);
 1625              		.loc 1 1178 24 discriminator 1 view .LVU523
 1626 004c B3F8E027 		ldrh	r2, [r3, #2016]
 1627 0050 012A     		cmp	r2, #1
 1628 0052 32D0     		beq	.L195
 1629              	.L171:
1186:src/keys.c    **** 		if (op & _RARG) {
 1630              		.loc 1 1186 2 is_stmt 1 view .LVU524
1186:src/keys.c    **** 		if (op & _RARG) {
 1631              		.loc 1 1186 5 is_stmt 0 view .LVU525
 1632 0054 332D     		cmp	r5, #51
 1633 0056 07D0     		beq	.L181
 1634              	.LVL122:
1187:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1635              		.loc 1 1187 3 is_stmt 1 view .LVU526
1187:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1636              		.loc 1 1187 6 is_stmt 0 view .LVU527
 1637 0058 2804     		lsls	r0, r5, #16
 1638 005a 14D5     		bpl	.L196
 1639              	.L179:
1188:src/keys.c    **** 			op = STATE_UNFINISHED;
 1640              		.loc 1 1188 4 is_stmt 1 view .LVU528
 1641              	.LVL123:
 1642              	.LBB354:
 1643              	.LBI354:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 1644              		.loc 1 552 13 view .LVU529
 1645              	.LBB355:
 553:src/keys.c    **** 		return;
 1646              		.loc 1 553 2 view .LVU530
 553:src/keys.c    **** 		return;
 1647              		.loc 1 553 6 is_stmt 0 view .LVU531
 1648 005c FFF7FEFF 		bl	is_bad_cmdline
 1649              	.LVL124:
ARM GAS  /tmp/ccK8gYGY.s 			page 90


 553:src/keys.c    **** 		return;
 1650              		.loc 1 553 5 view .LVU532
 1651 0060 10B9     		cbnz	r0, .L181
 1652 0062 E8B2     		uxtb	r0, r5
 1653 0064 FFF7FEFF 		bl	init_arg.part.0
 1654              	.LVL125:
 1655              	.L181:
 553:src/keys.c    **** 		return;
 1656              		.loc 1 553 5 view .LVU533
 1657              	.LBE355:
 1658              	.LBE354:
1192:src/keys.c    **** #undef _RARG
 1659              		.loc 1 1192 2 is_stmt 1 view .LVU534
1101:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1660              		.loc 1 1101 47 is_stmt 0 view .LVU535
 1661 0068 3320     		movs	r0, #51
1195:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 1662              		.loc 1 1195 1 view .LVU536
 1663 006a 70BD     		pop	{r4, r5, r6, pc}
 1664              	.LVL126:
 1665              	.L169:
1162:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 1666              		.loc 1 1162 3 is_stmt 1 view .LVU537
1162:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 1667              		.loc 1 1162 7 is_stmt 0 view .LVU538
 1668 006c 194B     		ldr	r3, .L199+12
 1669 006e 1B68     		ldr	r3, [r3]
 1670 0070 93F8E827 		ldrb	r2, [r3, #2024]	@ zero_extendqisi2
1162:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 1671              		.loc 1 1162 6 view .LVU539
 1672 0074 D607     		lsls	r6, r2, #31
 1673 0076 0FD4     		bmi	.L197
1168:src/keys.c    **** #endif
 1674              		.loc 1 1168 4 is_stmt 1 view .LVU540
1168:src/keys.c    **** #endif
 1675              		.loc 1 1168 8 is_stmt 0 view .LVU541
 1676 0078 93F8E737 		ldrb	r3, [r3, #2023]	@ zero_extendqisi2
1168:src/keys.c    **** #endif
 1677              		.loc 1 1168 7 view .LVU542
 1678 007c 9C06     		lsls	r4, r3, #26
 1679 007e 14D5     		bpl	.L198
 1680 0080 40F24F10 		movw	r0, #335
 1681              	.LVL127:
1195:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 1682              		.loc 1 1195 1 view .LVU543
 1683 0084 70BD     		pop	{r4, r5, r6, pc}
 1684              	.L196:
 1685              	.LVL128:
1192:src/keys.c    **** #undef _RARG
 1686              		.loc 1 1192 2 is_stmt 1 view .LVU544
1192:src/keys.c    **** #undef _RARG
 1687              		.loc 1 1192 9 is_stmt 0 view .LVU545
 1688 0086 134B     		ldr	r3, .L199+12
 1689 0088 1B68     		ldr	r3, [r3]
 1690 008a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1192:src/keys.c    **** #undef _RARG
 1691              		.loc 1 1192 57 view .LVU546
ARM GAS  /tmp/ccK8gYGY.s 			page 91


 1692 008e D907     		lsls	r1, r3, #31
 1693 0090 10D4     		bmi	.L180
 1694              	.LVL129:
 1695              	.L183:
1192:src/keys.c    **** #undef _RARG
 1696              		.loc 1 1192 57 view .LVU547
 1697 0092 25F48040 		bic	r0, r5, #16384
1195:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 1698              		.loc 1 1195 1 view .LVU548
 1699 0096 70BD     		pop	{r4, r5, r6, pc}
 1700              	.LVL130:
 1701              	.L197:
1163:src/keys.c    **** 		else
 1702              		.loc 1 1163 4 is_stmt 1 view .LVU549
1163:src/keys.c    **** 		else
 1703              		.loc 1 1163 57 is_stmt 0 view .LVU550
 1704 0098 93F9E737 		ldrsb	r3, [r3, #2023]
 1705 009c 002B     		cmp	r3, #0
 1706 009e 40F25315 		movw	r5, #339
 1707              	.LVL131:
1163:src/keys.c    **** 		else
 1708              		.loc 1 1163 57 view .LVU551
 1709 00a2 A8BF     		it	ge
 1710 00a4 4FF4AA75 		movge	r5, #340
 1711 00a8 F3E7     		b	.L183
 1712              	.LVL132:
 1713              	.L198:
1186:src/keys.c    **** 		if (op & _RARG) {
 1714              		.loc 1 1186 2 is_stmt 1 view .LVU552
1186:src/keys.c    **** 		if (op & _RARG) {
 1715              		.loc 1 1186 5 is_stmt 0 view .LVU553
 1716 00aa 332D     		cmp	r5, #51
 1717 00ac DCD0     		beq	.L181
 1718              	.LVL133:
1187:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1719              		.loc 1 1187 3 is_stmt 1 view .LVU554
1187:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1720              		.loc 1 1187 6 is_stmt 0 view .LVU555
 1721 00ae 2B04     		lsls	r3, r5, #16
 1722 00b0 D4D4     		bmi	.L179
 1723 00b2 EEE7     		b	.L183
 1724              	.LVL134:
 1725              	.L180:
1192:src/keys.c    **** #undef _RARG
 1726              		.loc 1 1192 21 view .LVU556
 1727 00b4 6A04     		lsls	r2, r5, #17
 1728 00b6 D7D4     		bmi	.L181
 1729 00b8 EBE7     		b	.L183
 1730              	.L195:
1178:src/keys.c    **** 			set_pc(0);
 1731              		.loc 1 1178 43 discriminator 2 view .LVU557
 1732 00ba B3F8EE37 		ldrh	r3, [r3, #2030]
 1733 00be 012B     		cmp	r3, #1
 1734 00c0 C8D1     		bne	.L171
1179:src/keys.c    **** 		break;
 1735              		.loc 1 1179 4 is_stmt 1 view .LVU558
 1736 00c2 FFF7FEFF 		bl	set_pc
ARM GAS  /tmp/ccK8gYGY.s 			page 92


 1737              	.LVL135:
 1738 00c6 C5E7     		b	.L171
 1739              	.L200:
 1740              		.align	2
 1741              	.L199:
 1742 00c8 00000000 		.word	.LANCHOR1
 1743 00cc 00000000 		.word	.LANCHOR0
 1744 00d0 00000000 		.word	StateWhileOn
 1745 00d4 00000000 		.word	main_ram
 1746              		.cfi_endproc
 1747              	.LFE21:
 1749              		.section	.text.intltr,"ax",%progbits
 1750              		.align	1
 1751              		.p2align 2,,3
 1752              		.syntax unified
 1753              		.thumb
 1754              		.thumb_func
 1755              		.fpu fpv4-sp-d16
 1757              	intltr:
 1758              	.LVL136:
 1759              	.LFB18:
 761:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1760              		.loc 1 761 26 view -0
 1761              		.cfi_startproc
 1762              		@ args = 0, pretend = 0, frame = 0
 1763              		@ frame_needed = 0, uses_anonymous_args = 0
 762:src/keys.c    **** }
 1764              		.loc 1 762 2 view .LVU560
 762:src/keys.c    **** }
 1765              		.loc 1 762 10 is_stmt 0 view .LVU561
 1766 0000 0B4B     		ldr	r3, .L210
 1767 0002 1B68     		ldr	r3, [r3]
 1768 0004 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 762:src/keys.c    **** }
 1769              		.loc 1 762 22 view .LVU562
 1770 0008 13F00103 		ands	r3, r3, #1
 1771 000c 05D0     		beq	.L203
 762:src/keys.c    **** }
 1772              		.loc 1 762 26 discriminator 1 view .LVU563
 1773 000e 094B     		ldr	r3, .L210+4
 1774 0010 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 762:src/keys.c    **** }
 1775              		.loc 1 762 22 discriminator 1 view .LVU564
 1776 0012 5B06     		lsls	r3, r3, #25
 1777 0014 03D4     		bmi	.L209
 762:src/keys.c    **** }
 1778              		.loc 1 762 22 view .LVU565
 1779 0016 0120     		movs	r0, #1
 1780              	.LVL137:
 763:src/keys.c    **** 
 1781              		.loc 1 763 1 view .LVU566
 1782 0018 7047     		bx	lr
 1783              	.LVL138:
 1784              	.L203:
 762:src/keys.c    **** }
 1785              		.loc 1 762 22 view .LVU567
 1786 001a 1846     		mov	r0, r3
ARM GAS  /tmp/ccK8gYGY.s 			page 93


 1787              	.LVL139:
 762:src/keys.c    **** }
 1788              		.loc 1 762 22 view .LVU568
 1789 001c 7047     		bx	lr
 1790              	.LVL140:
 1791              	.L209:
 761:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1792              		.loc 1 761 26 view .LVU569
 1793 001e 10B5     		push	{r4, lr}
 1794              		.cfi_def_cfa_offset 8
 1795              		.cfi_offset 4, -8
 1796              		.cfi_offset 14, -4
 1797 0020 0446     		mov	r4, r0
 1798              	.LVL141:
 1799              	.LBB358:
 1800              	.LBI358:
 761:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1801              		.loc 1 761 12 is_stmt 1 view .LVU570
 1802              	.LBB359:
 762:src/keys.c    **** }
 1803              		.loc 1 762 52 is_stmt 0 view .LVU571
 1804 0022 FFF7FEFF 		bl	int_base
 1805              	.LVL142:
 762:src/keys.c    **** }
 1806              		.loc 1 762 43 view .LVU572
 1807 0026 8442     		cmp	r4, r0
 1808 0028 ACBF     		ite	ge
 1809 002a 0020     		movge	r0, #0
 1810 002c 0120     		movlt	r0, #1
 1811              	.LBE359:
 1812              	.LBE358:
 763:src/keys.c    **** 
 1813              		.loc 1 763 1 view .LVU573
 1814 002e 10BD     		pop	{r4, pc}
 1815              	.LVL143:
 1816              	.L211:
 763:src/keys.c    **** 
 1817              		.loc 1 763 1 view .LVU574
 1818              		.align	2
 1819              	.L210:
 1820 0030 00000000 		.word	main_ram
 1821 0034 00000000 		.word	StateWhileOn
 1822              		.cfi_endproc
 1823              	.LFE18:
 1825              		.section	.text.process_normal,"ax",%progbits
 1826              		.align	1
 1827              		.p2align 2,,3
 1828              		.syntax unified
 1829              		.thumb
 1830              		.thumb_func
 1831              		.fpu fpv4-sp-d16
 1833              	process_normal:
 1834              	.LVL144:
 1835              	.LFB19:
 769:src/keys.c    **** 	static const unsigned short int op_map[] = {
 1836              		.loc 1 769 1 is_stmt 1 view -0
 1837              		.cfi_startproc
ARM GAS  /tmp/ccK8gYGY.s 			page 94


 1838              		@ args = 0, pretend = 0, frame = 0
 1839              		@ frame_needed = 0, uses_anonymous_args = 0
 770:src/keys.c    **** 		// Row 1
 1840              		.loc 1 770 2 view .LVU576
 817:src/keys.c    **** 	int op = op_map[lc];
 1841              		.loc 1 817 2 view .LVU577
 1842              	.LBB360:
 1843              	.LBI360:
 146:src/keys.c    **** {
 1844              		.loc 1 146 12 view .LVU578
 1845              	.LBB361:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 1846              		.loc 1 148 2 view .LVU579
 158:src/keys.c    **** }
 1847              		.loc 1 158 2 view .LVU580
 158:src/keys.c    **** }
 1848              		.loc 1 158 2 is_stmt 0 view .LVU581
 1849              	.LBE361:
 1850              	.LBE360:
 818:src/keys.c    **** 	
 1851              		.loc 1 818 2 is_stmt 1 view .LVU582
 823:src/keys.c    **** 	  switch (c) {
 1852              		.loc 1 823 6 is_stmt 0 view .LVU583
 1853 0000 984B     		ldr	r3, .L243
 1854              	.LBB364:
 1855              	.LBB362:
 158:src/keys.c    **** }
 1856              		.loc 1 158 23 view .LVU584
 1857 0002 994A     		ldr	r2, .L243+4
 1858              	.LBE362:
 1859              	.LBE364:
 823:src/keys.c    **** 	  switch (c) {
 1860              		.loc 1 823 6 view .LVU585
 1861 0004 1B68     		ldr	r3, [r3]
 1862              	.LBB365:
 1863              	.LBB363:
 158:src/keys.c    **** }
 1864              		.loc 1 158 23 view .LVU586
 1865 0006 115C     		ldrb	r1, [r2, r0]	@ zero_extendqisi2
 1866              	.LBE363:
 1867              	.LBE365:
 818:src/keys.c    **** 	
 1868              		.loc 1 818 17 view .LVU587
 1869 0008 984A     		ldr	r2, .L243+8
 823:src/keys.c    **** 	  switch (c) {
 1870              		.loc 1 823 6 view .LVU588
 1871 000a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 769:src/keys.c    **** 	static const unsigned short int op_map[] = {
 1872              		.loc 1 769 1 view .LVU589
 1873 000e 10B5     		push	{r4, lr}
 1874              		.cfi_def_cfa_offset 8
 1875              		.cfi_offset 4, -8
 1876              		.cfi_offset 14, -4
 818:src/keys.c    **** 	
 1877              		.loc 1 818 17 view .LVU590
 1878 0010 32F81140 		ldrh	r4, [r2, r1, lsl #1]
 823:src/keys.c    **** 	  switch (c) {
ARM GAS  /tmp/ccK8gYGY.s 			page 95


 1879              		.loc 1 823 5 view .LVU591
 1880 0014 DB07     		lsls	r3, r3, #31
 818:src/keys.c    **** 	
 1881              		.loc 1 818 6 view .LVU592
 1882 0016 2246     		mov	r2, r4
 1883              	.LVL145:
 822:src/keys.c    **** 	if (UState.intm) {
 1884              		.loc 1 822 2 is_stmt 1 view .LVU593
 823:src/keys.c    **** 	  switch (c) {
 1885              		.loc 1 823 2 view .LVU594
 823:src/keys.c    **** 	  switch (c) {
 1886              		.loc 1 823 5 is_stmt 0 view .LVU595
 1887 0018 42D4     		bmi	.L239
 854:src/keys.c    **** 	  }
 1888              		.loc 1 854 12 is_stmt 1 view .LVU596
 859:src/keys.c    **** #ifdef DM42
 1889              		.loc 1 859 2 view .LVU597
 1890 001a 2D28     		cmp	r0, #45
 1891 001c 3ED8     		bhi	.L212
 1892 001e DFE810F0 		tbh	[pc, r0, lsl #1]
 1893              	.L231:
 1894 0022 0801     		.2byte	(.L227-.L231)/2
 1895 0024 0E01     		.2byte	(.L228-.L231)/2
 1896 0026 3D00     		.2byte	(.L212-.L231)/2
 1897 0028 CF00     		.2byte	(.L226-.L231)/2
 1898 002a 3D00     		.2byte	(.L212-.L231)/2
 1899 002c 3D00     		.2byte	(.L212-.L231)/2
 1900 002e 3400     		.2byte	(.L221-.L231)/2
 1901 0030 3400     		.2byte	(.L221-.L231)/2
 1902 0032 3D00     		.2byte	(.L212-.L231)/2
 1903 0034 3D00     		.2byte	(.L212-.L231)/2
 1904 0036 3D00     		.2byte	(.L212-.L231)/2
 1905 0038 3D00     		.2byte	(.L212-.L231)/2
 1906 003a 3D00     		.2byte	(.L212-.L231)/2
 1907 003c 3D00     		.2byte	(.L212-.L231)/2
 1908 003e 3D00     		.2byte	(.L212-.L231)/2
 1909 0040 3D00     		.2byte	(.L212-.L231)/2
 1910 0042 E900     		.2byte	(.L225-.L231)/2
 1911 0044 3D00     		.2byte	(.L212-.L231)/2
 1912 0046 3400     		.2byte	(.L221-.L231)/2
 1913 0048 3D00     		.2byte	(.L212-.L231)/2
 1914 004a 3D00     		.2byte	(.L212-.L231)/2
 1915 004c 3D00     		.2byte	(.L212-.L231)/2
 1916 004e 3D00     		.2byte	(.L212-.L231)/2
 1917 0050 3D00     		.2byte	(.L212-.L231)/2
 1918 0052 3D00     		.2byte	(.L212-.L231)/2
 1919 0054 3D00     		.2byte	(.L212-.L231)/2
 1920 0056 3D00     		.2byte	(.L212-.L231)/2
 1921 0058 3D00     		.2byte	(.L212-.L231)/2
 1922 005a 3D00     		.2byte	(.L212-.L231)/2
 1923 005c 3D00     		.2byte	(.L212-.L231)/2
 1924 005e 3D00     		.2byte	(.L212-.L231)/2
 1925 0060 3D00     		.2byte	(.L212-.L231)/2
 1926 0062 3D00     		.2byte	(.L212-.L231)/2
 1927 0064 3D00     		.2byte	(.L212-.L231)/2
 1928 0066 3D00     		.2byte	(.L212-.L231)/2
 1929 0068 3D00     		.2byte	(.L212-.L231)/2
ARM GAS  /tmp/ccK8gYGY.s 			page 96


 1930 006a 3D00     		.2byte	(.L212-.L231)/2
 1931 006c 3D00     		.2byte	(.L212-.L231)/2
 1932 006e 3D00     		.2byte	(.L212-.L231)/2
 1933 0070 3D00     		.2byte	(.L212-.L231)/2
 1934 0072 3D00     		.2byte	(.L212-.L231)/2
 1935 0074 3D00     		.2byte	(.L212-.L231)/2
 1936 0076 3D00     		.2byte	(.L212-.L231)/2
 1937 0078 3D00     		.2byte	(.L212-.L231)/2
 1938 007a F400     		.2byte	(.L224-.L231)/2
 1939 007c C700     		.2byte	(.L230-.L231)/2
 1940              		.p2align 1
 1941              	.L215:
 850:src/keys.c    **** 	    if (intltr(15)) {
 1942              		.loc 1 850 6 view .LVU598
 1943              	.LVL146:
 851:src/keys.c    **** 	      return op_int;
 1944              		.loc 1 851 6 view .LVU599
 851:src/keys.c    **** 	      return op_int;
 1945              		.loc 1 851 10 is_stmt 0 view .LVU600
 1946 007e 0F20     		movs	r0, #15
 1947              	.LVL147:
 851:src/keys.c    **** 	      return op_int;
 1948              		.loc 1 851 10 view .LVU601
 1949 0080 FFF7FEFF 		bl	intltr
 1950              	.LVL148:
 851:src/keys.c    **** 	      return op_int;
 1951              		.loc 1 851 9 view .LVU602
 1952 0084 0028     		cmp	r0, #0
 1953 0086 40F0EB80 		bne	.L240
 1954              	.LVL149:
 1955              	.L221:
 925:src/keys.c    **** 		break;
 1956              		.loc 1 925 3 is_stmt 1 view .LVU603
 1957              	.LBB366:
 1958              	.LBI366:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 1959              		.loc 1 552 13 view .LVU604
 1960              	.LBB367:
 553:src/keys.c    **** 		return;
 1961              		.loc 1 553 2 view .LVU605
 553:src/keys.c    **** 		return;
 1962              		.loc 1 553 6 is_stmt 0 view .LVU606
 1963 008a FFF7FEFF 		bl	is_bad_cmdline
 1964              	.LVL150:
 553:src/keys.c    **** 		return;
 1965              		.loc 1 553 5 view .LVU607
 1966 008e 0028     		cmp	r0, #0
 1967 0090 40F09380 		bne	.L238
 1968 0094 E0B2     		uxtb	r0, r4
 1969 0096 FFF7FEFF 		bl	init_arg.part.0
 1970              	.LVL151:
 1971              	.LBE367:
 1972              	.LBE366:
 931:src/keys.c    **** }
 1973              		.loc 1 931 9 view .LVU608
 1974 009a 3322     		movs	r2, #51
 1975              	.LVL152:
ARM GAS  /tmp/ccK8gYGY.s 			page 97


 1976              	.L212:
 932:src/keys.c    **** 
 1977              		.loc 1 932 1 view .LVU609
 1978 009c 1046     		mov	r0, r2
 1979 009e 10BD     		pop	{r4, pc}
 1980              	.LVL153:
 1981              	.L239:
 824:src/keys.c    **** 	  case K00:
 1982              		.loc 1 824 4 is_stmt 1 view .LVU610
 1983 00a0 1228     		cmp	r0, #18
 1984 00a2 29D8     		bhi	.L214
 1985 00a4 01A3     		adr	r3, .L216
 1986 00a6 53F820F0 		ldr	pc, [r3, r0, lsl #2]
 1987 00aa 00BF     		.p2align 2
 1988              	.L216:
 1989 00ac E9010000 		.word	.L219+1
 1990 00b0 DB010000 		.word	.L218+1
 1991 00b4 F9000000 		.word	.L214+1
 1992 00b8 CD010000 		.word	.L217+1
 1993 00bc F9000000 		.word	.L214+1
 1994 00c0 F9000000 		.word	.L214+1
 1995 00c4 F9000000 		.word	.L214+1
 1996 00c8 F9000000 		.word	.L214+1
 1997 00cc F9000000 		.word	.L214+1
 1998 00d0 F9000000 		.word	.L214+1
 1999 00d4 F9000000 		.word	.L214+1
 2000 00d8 F9000000 		.word	.L214+1
 2001 00dc F9000000 		.word	.L214+1
 2002 00e0 F9000000 		.word	.L214+1
 2003 00e4 F9000000 		.word	.L214+1
 2004 00e8 F9000000 		.word	.L214+1
 2005 00ec F9000000 		.word	.L214+1
 2006 00f0 F9000000 		.word	.L214+1
 2007 00f4 7F000000 		.word	.L215+1
 2008              		.p2align 1
 2009              	.L214:
 854:src/keys.c    **** 	  }
 2010              		.loc 1 854 12 view .LVU611
 859:src/keys.c    **** #ifdef DM42
 2011              		.loc 1 859 2 view .LVU612
 2012 00f8 C31E     		subs	r3, r0, #3
 2013 00fa 2A2B     		cmp	r3, #42
 2014 00fc CED8     		bhi	.L212
 2015 00fe 01A1     		adr	r1, .L223
 2016 0100 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 2017              		.p2align 2
 2018              	.L223:
 2019 0104 C1010000 		.word	.L226+1
 2020 0108 9D000000 		.word	.L212+1
 2021 010c 9D000000 		.word	.L212+1
 2022 0110 8B000000 		.word	.L221+1
 2023 0114 8B000000 		.word	.L221+1
 2024 0118 9D000000 		.word	.L212+1
 2025 011c 9D000000 		.word	.L212+1
 2026 0120 9D000000 		.word	.L212+1
 2027 0124 9D000000 		.word	.L212+1
 2028 0128 9D000000 		.word	.L212+1
ARM GAS  /tmp/ccK8gYGY.s 			page 98


 2029 012c 9D000000 		.word	.L212+1
 2030 0130 9D000000 		.word	.L212+1
 2031 0134 9D000000 		.word	.L212+1
 2032 0138 F5010000 		.word	.L225+1
 2033 013c 9D000000 		.word	.L212+1
 2034 0140 8B000000 		.word	.L221+1
 2035 0144 9D000000 		.word	.L212+1
 2036 0148 9D000000 		.word	.L212+1
 2037 014c 9D000000 		.word	.L212+1
 2038 0150 9D000000 		.word	.L212+1
 2039 0154 9D000000 		.word	.L212+1
 2040 0158 9D000000 		.word	.L212+1
 2041 015c 9D000000 		.word	.L212+1
 2042 0160 9D000000 		.word	.L212+1
 2043 0164 9D000000 		.word	.L212+1
 2044 0168 9D000000 		.word	.L212+1
 2045 016c 9D000000 		.word	.L212+1
 2046 0170 9D000000 		.word	.L212+1
 2047 0174 9D000000 		.word	.L212+1
 2048 0178 9D000000 		.word	.L212+1
 2049 017c 9D000000 		.word	.L212+1
 2050 0180 9D000000 		.word	.L212+1
 2051 0184 9D000000 		.word	.L212+1
 2052 0188 9D000000 		.word	.L212+1
 2053 018c 9D000000 		.word	.L212+1
 2054 0190 9D000000 		.word	.L212+1
 2055 0194 9D000000 		.word	.L212+1
 2056 0198 9D000000 		.word	.L212+1
 2057 019c 9D000000 		.word	.L212+1
 2058 01a0 9D000000 		.word	.L212+1
 2059 01a4 9D000000 		.word	.L212+1
 2060 01a8 0B020000 		.word	.L224+1
 2061 01ac BB010000 		.word	.L238+1
 2062              		.p2align 1
 2063              	.L230:
 907:src/keys.c    **** #else
 2064              		.loc 1 907 4 view .LVU613
 907:src/keys.c    **** #else
 2065              		.loc 1 907 17 is_stmt 0 view .LVU614
 2066 01b0 2F4A     		ldr	r2, .L243+12
 2067              	.LVL154:
 907:src/keys.c    **** #else
 2068              		.loc 1 907 17 view .LVU615
 2069 01b2 537D     		ldrb	r3, [r2, #21]	@ zero_extendqisi2
 2070 01b4 43F00203 		orr	r3, r3, #2
 2071 01b8 5375     		strb	r3, [r2, #21]
 2072              	.LVL155:
 2073              	.L238:
 913:src/keys.c    **** 
 2074              		.loc 1 913 4 is_stmt 1 view .LVU616
 931:src/keys.c    **** }
 2075              		.loc 1 931 9 is_stmt 0 view .LVU617
 2076 01ba 3322     		movs	r2, #51
 932:src/keys.c    **** 
 2077              		.loc 1 932 1 view .LVU618
 2078 01bc 1046     		mov	r0, r2
 2079 01be 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccK8gYGY.s 			page 99


 2080              	.LVL156:
 2081              	.L226:
 866:src/keys.c    **** #else
 2082              		.loc 1 866 3 is_stmt 1 view .LVU619
 866:src/keys.c    **** #else
 2083              		.loc 1 866 10 is_stmt 0 view .LVU620
 2084 01c0 2146     		mov	r1, r4
 2085 01c2 0220     		movs	r0, #2
 932:src/keys.c    **** 
 2086              		.loc 1 932 1 view .LVU621
 2087 01c4 BDE81040 		pop	{r4, lr}
 2088              		.cfi_remember_state
 2089              		.cfi_restore 14
 2090              		.cfi_restore 4
 2091              		.cfi_def_cfa_offset 0
 2092              	.LVL157:
 866:src/keys.c    **** #else
 2093              		.loc 1 866 10 view .LVU622
 2094 01c8 FFF7FEBF 		b	check_f_key
 2095              	.LVL158:
 2096              	.L217:
 2097              		.cfi_restore_state
 842:src/keys.c    **** 	    if (intltr(12)) {
 2098              		.loc 1 842 6 is_stmt 1 view .LVU623
 843:src/keys.c    **** 	      return op_int;
 2099              		.loc 1 843 6 view .LVU624
 843:src/keys.c    **** 	      return op_int;
 2100              		.loc 1 843 10 is_stmt 0 view .LVU625
 2101 01cc 0C20     		movs	r0, #12
 2102              	.LVL159:
 843:src/keys.c    **** 	      return op_int;
 2103              		.loc 1 843 10 view .LVU626
 2104 01ce FFF7FEFF 		bl	intltr
 2105              	.LVL160:
 843:src/keys.c    **** 	      return op_int;
 2106              		.loc 1 843 9 view .LVU627
 2107 01d2 0028     		cmp	r0, #0
 2108 01d4 F4D0     		beq	.L226
 844:src/keys.c    **** 	    }
 2109              		.loc 1 844 15 view .LVU628
 2110 01d6 1122     		movs	r2, #17
 2111 01d8 60E7     		b	.L212
 2112              	.LVL161:
 2113              	.L218:
 834:src/keys.c    **** 	    if (intltr(11)) {
 2114              		.loc 1 834 6 is_stmt 1 view .LVU629
 835:src/keys.c    **** 	      return op;
 2115              		.loc 1 835 6 view .LVU630
 835:src/keys.c    **** 	      return op;
 2116              		.loc 1 835 10 is_stmt 0 view .LVU631
 2117 01da 0B20     		movs	r0, #11
 2118              	.LVL162:
 835:src/keys.c    **** 	      return op;
 2119              		.loc 1 835 10 view .LVU632
 2120 01dc FFF7FEFF 		bl	intltr
 2121              	.LVL163:
 835:src/keys.c    **** 	      return op;
ARM GAS  /tmp/ccK8gYGY.s 			page 100


 2122              		.loc 1 835 9 view .LVU633
 2123 01e0 0028     		cmp	r0, #0
 2124 01e2 37D0     		beq	.L241
 836:src/keys.c    **** 	    }
 2125              		.loc 1 836 15 view .LVU634
 2126 01e4 1022     		movs	r2, #16
 2127 01e6 59E7     		b	.L212
 2128              	.LVL164:
 2129              	.L219:
 826:src/keys.c    **** 	    if (intltr(10)) {
 2130              		.loc 1 826 6 is_stmt 1 view .LVU635
 827:src/keys.c    **** 	      return op;
 2131              		.loc 1 827 6 view .LVU636
 827:src/keys.c    **** 	      return op;
 2132              		.loc 1 827 10 is_stmt 0 view .LVU637
 2133 01e8 0A20     		movs	r0, #10
 2134              	.LVL165:
 827:src/keys.c    **** 	      return op;
 2135              		.loc 1 827 10 view .LVU638
 2136 01ea FFF7FEFF 		bl	intltr
 2137              	.LVL166:
 827:src/keys.c    **** 	      return op;
 2138              		.loc 1 827 9 view .LVU639
 2139 01ee 60B3     		cbz	r0, .L242
 828:src/keys.c    **** 	    }
 2140              		.loc 1 828 15 view .LVU640
 2141 01f0 0F22     		movs	r2, #15
 2142 01f2 53E7     		b	.L212
 2143              	.LVL167:
 2144              	.L225:
 916:src/keys.c    **** 			return STATE_UNFINISHED;
 2145              		.loc 1 916 3 is_stmt 1 view .LVU641
 916:src/keys.c    **** 			return STATE_UNFINISHED;
 2146              		.loc 1 916 7 is_stmt 0 view .LVU642
 2147 01f4 1E4B     		ldr	r3, .L243+12
 2148 01f6 DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 2149              	.LVL168:
 916:src/keys.c    **** 			return STATE_UNFINISHED;
 2150              		.loc 1 916 6 view .LVU643
 2151 01f8 9106     		lsls	r1, r2, #26
 2152 01fa DED4     		bmi	.L238
 918:src/keys.c    **** 			return op;
 2153              		.loc 1 918 3 is_stmt 1 view .LVU644
 918:src/keys.c    **** 			return op;
 2154              		.loc 1 918 7 is_stmt 0 view .LVU645
 2155 01fc 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 920:src/keys.c    **** 
 2156              		.loc 1 920 10 view .LVU646
 2157 01fe 13F0400F 		tst	r3, #64
 2158 0202 14BF     		ite	ne
 2159 0204 2246     		movne	r2, r4
 2160 0206 3022     		moveq	r2, #48
 2161 0208 48E7     		b	.L212
 2162              	.LVL169:
 2163              	.L224:
 890:src/keys.c    **** 			return STATE_UNFINISHED;
 2164              		.loc 1 890 3 is_stmt 1 view .LVU647
ARM GAS  /tmp/ccK8gYGY.s 			page 101


 890:src/keys.c    **** 			return STATE_UNFINISHED;
 2165              		.loc 1 890 7 is_stmt 0 view .LVU648
 2166 020a FFF7FEFF 		bl	is_bad_cmdline
 2167              	.LVL170:
 890:src/keys.c    **** 			return STATE_UNFINISHED;
 2168              		.loc 1 890 6 view .LVU649
 2169 020e 0028     		cmp	r0, #0
 2170 0210 D3D1     		bne	.L238
 892:src/keys.c    **** 		State2.arrow = 1;
 2171              		.loc 1 892 3 is_stmt 1 view .LVU650
 2172 0212 FFF7FEFF 		bl	process_cmdline_set_lift
 2173              	.LVL171:
 893:src/keys.c    **** #ifdef DM42
 2174              		.loc 1 893 3 view .LVU651
 893:src/keys.c    **** #ifdef DM42
 2175              		.loc 1 893 16 is_stmt 0 view .LVU652
 2176 0216 164A     		ldr	r2, .L243+12
 2177 0218 537D     		ldrb	r3, [r2, #21]	@ zero_extendqisi2
 2178 021a 43F00403 		orr	r3, r3, #4
 2179 021e 5375     		strb	r3, [r2, #21]
 895:src/keys.c    **** 		display_current_menu ();
 2180              		.loc 1 895 3 is_stmt 1 view .LVU653
 2181 0220 0920     		movs	r0, #9
 2182 0222 FFF7FEFF 		bl	set_menu
 2183              	.LVL172:
 896:src/keys.c    **** 		lcd_refresh ();
 2184              		.loc 1 896 3 view .LVU654
 2185 0226 FFF7FEFF 		bl	display_current_menu
 2186              	.LVL173:
 897:src/keys.c    **** #else
 2187              		.loc 1 897 3 view .LVU655
 2188 022a 124B     		ldr	r3, .L243+16
 2189 022c 9847     		blx	r3
 2190              	.LVL174:
 901:src/keys.c    **** 
 2191              		.loc 1 901 3 view .LVU656
 931:src/keys.c    **** }
 2192              		.loc 1 931 9 is_stmt 0 view .LVU657
 2193 022e 3322     		movs	r2, #51
 901:src/keys.c    **** 
 2194              		.loc 1 901 3 view .LVU658
 2195 0230 34E7     		b	.L212
 2196              	.LVL175:
 2197              	.L227:
 862:src/keys.c    **** 	case K01:
 2198              		.loc 1 862 3 is_stmt 1 view .LVU659
 862:src/keys.c    **** 	case K01:
 2199              		.loc 1 862 10 is_stmt 0 view .LVU660
 2200 0232 2146     		mov	r1, r4
 2201 0234 0020     		movs	r0, #0
 2202              	.LVL176:
 932:src/keys.c    **** 
 2203              		.loc 1 932 1 view .LVU661
 2204 0236 BDE81040 		pop	{r4, lr}
 2205              		.cfi_remember_state
 2206              		.cfi_restore 14
 2207              		.cfi_restore 4
ARM GAS  /tmp/ccK8gYGY.s 			page 102


 2208              		.cfi_def_cfa_offset 0
 862:src/keys.c    **** 	case K01:
 2209              		.loc 1 862 10 view .LVU662
 2210 023a FFF7FEBF 		b	check_f_key
 2211              	.LVL177:
 2212              	.L228:
 2213              		.cfi_restore_state
 864:src/keys.c    **** 	case K03:
 2214              		.loc 1 864 3 is_stmt 1 view .LVU663
 864:src/keys.c    **** 	case K03:
 2215              		.loc 1 864 10 is_stmt 0 view .LVU664
 2216 023e 2146     		mov	r1, r4
 2217 0240 0120     		movs	r0, #1
 2218              	.LVL178:
 932:src/keys.c    **** 
 2219              		.loc 1 932 1 view .LVU665
 2220 0242 BDE81040 		pop	{r4, lr}
 2221              		.cfi_remember_state
 2222              		.cfi_restore 14
 2223              		.cfi_restore 4
 2224              		.cfi_def_cfa_offset 0
 864:src/keys.c    **** 	case K03:
 2225              		.loc 1 864 10 view .LVU666
 2226 0246 FFF7FEBF 		b	check_f_key
 2227              	.LVL179:
 2228              	.L242:
 2229              		.cfi_restore_state
 831:src/keys.c    **** 	    }
 2230              		.loc 1 831 8 is_stmt 1 view .LVU667
 932:src/keys.c    **** 
 2231              		.loc 1 932 1 is_stmt 0 view .LVU668
 2232 024a BDE81040 		pop	{r4, lr}
 2233              		.cfi_remember_state
 2234              		.cfi_restore 14
 2235              		.cfi_restore 4
 2236              		.cfi_def_cfa_offset 0
 831:src/keys.c    **** 	    }
 2237              		.loc 1 831 15 view .LVU669
 2238 024e 0F21     		movs	r1, #15
 2239 0250 FFF7FEBF 		b	check_f_key
 2240              	.LVL180:
 2241              	.L241:
 2242              		.cfi_restore_state
 839:src/keys.c    **** 	    }
 2243              		.loc 1 839 8 is_stmt 1 view .LVU670
 932:src/keys.c    **** 
 2244              		.loc 1 932 1 is_stmt 0 view .LVU671
 2245 0254 BDE81040 		pop	{r4, lr}
 2246              		.cfi_remember_state
 2247              		.cfi_restore 14
 2248              		.cfi_restore 4
 2249              		.cfi_def_cfa_offset 0
 839:src/keys.c    **** 	    }
 2250              		.loc 1 839 15 view .LVU672
 2251 0258 1021     		movs	r1, #16
 2252 025a 0120     		movs	r0, #1
 2253 025c FFF7FEBF 		b	check_f_key
ARM GAS  /tmp/ccK8gYGY.s 			page 103


 2254              	.LVL181:
 2255              	.L240:
 2256              		.cfi_restore_state
 852:src/keys.c    **** 	    }
 2257              		.loc 1 852 15 view .LVU673
 2258 0260 1422     		movs	r2, #20
 2259 0262 1BE7     		b	.L212
 2260              	.L244:
 2261              		.align	2
 2262              	.L243:
 2263 0264 00000000 		.word	main_ram
 2264 0268 00000000 		.word	.LANCHOR1
 2265 026c 00000000 		.word	.LANCHOR2
 2266 0270 00000000 		.word	StateWhileOn
 2267 0274 31020008 		.word	134218289
 2268              		.cfi_endproc
 2269              	.LFE19:
 2271              		.section	.text.process_fg_shifted,"ax",%progbits
 2272              		.align	1
 2273              		.p2align 2,,3
 2274              		.syntax unified
 2275              		.thumb
 2276              		.thumb_func
 2277              		.fpu fpv4-sp-d16
 2279              	process_fg_shifted:
 2280              	.LVL182:
 2281              	.LFB20:
 938:src/keys.c    **** 
 2282              		.loc 1 938 48 is_stmt 1 view -0
 2283              		.cfi_startproc
 2284              		@ args = 0, pretend = 0, frame = 0
 2285              		@ frame_needed = 0, uses_anonymous_args = 0
 941:src/keys.c    **** 		// Row 1
 2286              		.loc 1 941 2 view .LVU675
 992:src/keys.c    **** 		STATE_UNFINISHED,
 2287              		.loc 1 992 2 view .LVU676
 999:src/keys.c    **** 	int lc = keycode_to_linear(c);
 2288              		.loc 1 999 2 view .LVU677
 2289              	.LBB368:
 2290              	.LBI368:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 2291              		.loc 1 114 13 view .LVU678
 2292              	.LBE368:
 115:src/keys.c    **** }
 2293              		.loc 1 115 2 view .LVU679
 2294              	.LBB385:
 2295              	.LBB369:
 2296              	.LBI369:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 2297              		.loc 1 104 20 view .LVU680
 2298              	.LBB370:
 105:src/keys.c    **** 	State2.shifts = shift;
 2299              		.loc 1 105 2 view .LVU681
 2300              	.LBB371:
 2301              	.LBI371:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 2302              		.loc 1 96 13 view .LVU682
ARM GAS  /tmp/ccK8gYGY.s 			page 104


 2303              	.LBB372:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2304              		.loc 1 97 2 view .LVU683
 2305              	.LBE372:
 2306              	.LBE371:
 2307              	.LBE370:
 2308              	.LBE369:
 2309              	.LBE385:
 938:src/keys.c    **** 
 2310              		.loc 1 938 48 is_stmt 0 view .LVU684
 2311 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2312              		.cfi_def_cfa_offset 24
 2313              		.cfi_offset 4, -24
 2314              		.cfi_offset 5, -20
 2315              		.cfi_offset 6, -16
 2316              		.cfi_offset 7, -12
 2317              		.cfi_offset 8, -8
 2318              		.cfi_offset 14, -4
 938:src/keys.c    **** 
 2319              		.loc 1 938 48 view .LVU685
 2320 0004 0446     		mov	r4, r0
 2321              	.LBB386:
 2322              	.LBB381:
 2323              	.LBB377:
 2324              	.LBB375:
 2325              	.LBB373:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2326              		.loc 1 97 18 view .LVU686
 2327 0006 FFF7FEFF 		bl	shift_down
 2328              	.LVL183:
  98:src/keys.c    **** }
 2329              		.loc 1 98 2 is_stmt 1 view .LVU687
  98:src/keys.c    **** }
 2330              		.loc 1 98 52 is_stmt 0 view .LVU688
 2331 000a 0028     		cmp	r0, #0
 2332 000c 72D0     		beq	.L292
 2333 000e DFF89482 		ldr	r8, .L306+16
 2334 0012 0546     		mov	r5, r0
 2335              	.L246:
 2336              	.LVL184:
  98:src/keys.c    **** }
 2337              		.loc 1 98 52 view .LVU689
 2338              	.LBE373:
 2339              	.LBE375:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2340              		.loc 1 106 2 is_stmt 1 view .LVU690
 2341              	.LBE377:
 2342              	.LBE381:
 2343              	.LBE386:
 2344              	.LBB387:
 2345              	.LBB388:
 158:src/keys.c    **** }
 2346              		.loc 1 158 23 is_stmt 0 view .LVU691
 2347 0014 9F4B     		ldr	r3, .L306
 2348              	.LBE388:
 2349              	.LBE387:
1001:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
ARM GAS  /tmp/ccK8gYGY.s 			page 105


 2350              		.loc 1 1001 21 view .LVU692
 2351 0016 A049     		ldr	r1, .L306+4
 2352              	.LBB391:
 2353              	.LBB389:
 158:src/keys.c    **** }
 2354              		.loc 1 158 23 view .LVU693
 2355 0018 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 2356              	.LBE389:
 2357              	.LBE391:
1001:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2358              		.loc 1 1001 21 view .LVU694
 2359 001a 4300     		lsls	r3, r0, #1
 2360 001c 022D     		cmp	r5, #2
 2361 001e 08BF     		it	eq
 2362 0020 0133     		addeq	r3, r3, #1
 2363              	.LBB392:
 2364              	.LBB382:
 2365              	.LBB378:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2366              		.loc 1 106 16 view .LVU695
 2367 0022 0022     		movs	r2, #0
 2368              	.LBE378:
 2369              	.LBE382:
 2370              	.LBE392:
1001:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2371              		.loc 1 1001 21 view .LVU696
 2372 0024 31F81360 		ldrh	r6, [r1, r3, lsl #1]
 2373              	.LBB393:
 2374              	.LBB383:
 2375              	.LBB379:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2376              		.loc 1 106 16 view .LVU697
 2377 0028 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 2378              		.loc 1 108 2 is_stmt 1 view .LVU698
 2379              	.LVL185:
 108:src/keys.c    **** }
 2380              		.loc 1 108 2 is_stmt 0 view .LVU699
 2381              	.LBE379:
 2382              	.LBE383:
 2383              	.LBE393:
1000:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 2384              		.loc 1 1000 2 is_stmt 1 view .LVU700
 2385              	.LBB394:
 2386              	.LBI387:
 146:src/keys.c    **** {
 2387              		.loc 1 146 12 view .LVU701
 2388              	.LBB390:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 2389              		.loc 1 148 2 view .LVU702
 158:src/keys.c    **** }
 2390              		.loc 1 158 2 view .LVU703
 158:src/keys.c    **** }
 2391              		.loc 1 158 2 is_stmt 0 view .LVU704
 2392              	.LBE390:
 2393              	.LBE394:
1001:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
ARM GAS  /tmp/ccK8gYGY.s 			page 106


 2394              		.loc 1 1001 2 is_stmt 1 view .LVU705
1002:src/keys.c    **** 	if (no_int)
 2395              		.loc 1 1002 2 view .LVU706
 2396 002c 06F47047 		and	r7, r6, #61440
 2397              	.LVL186:
1003:src/keys.c    **** 		op &= ~NO_INT;
 2398              		.loc 1 1003 2 view .LVU707
1003:src/keys.c    **** 		op &= ~NO_INT;
 2399              		.loc 1 1003 5 is_stmt 0 view .LVU708
 2400 0030 B7F5704F 		cmp	r7, #61440
 2401 0034 63D0     		beq	.L300
1006:src/keys.c    **** 	case K00:
 2402              		.loc 1 1006 2 is_stmt 1 view .LVU709
 2403 0036 282C     		cmp	r4, #40
 2404 0038 34D8     		bhi	.L267
 2405 003a DFE804F0 		tbb	[pc, r4]
 2406              	.L268:
 2407 003e D3       		.byte	(.L258-.L268)/2
 2408 003f 39       		.byte	(.L256-.L268)/2
 2409 0040 33       		.byte	(.L267-.L268)/2
 2410 0041 39       		.byte	(.L256-.L268)/2
 2411 0042 33       		.byte	(.L267-.L268)/2
 2412 0043 33       		.byte	(.L267-.L268)/2
 2413 0044 33       		.byte	(.L267-.L268)/2
 2414 0045 33       		.byte	(.L267-.L268)/2
 2415 0046 33       		.byte	(.L267-.L268)/2
 2416 0047 33       		.byte	(.L267-.L268)/2
 2417 0048 33       		.byte	(.L267-.L268)/2
 2418 0049 33       		.byte	(.L267-.L268)/2
 2419 004a 15       		.byte	(.L255-.L268)/2
 2420 004b 33       		.byte	(.L267-.L268)/2
 2421 004c 33       		.byte	(.L267-.L268)/2
 2422 004d 33       		.byte	(.L267-.L268)/2
 2423 004e 33       		.byte	(.L267-.L268)/2
 2424 004f 33       		.byte	(.L267-.L268)/2
 2425 0050 E0       		.byte	(.L254-.L268)/2
 2426 0051 B9       		.byte	(.L253-.L268)/2
 2427 0052 33       		.byte	(.L267-.L268)/2
 2428 0053 33       		.byte	(.L267-.L268)/2
 2429 0054 33       		.byte	(.L267-.L268)/2
 2430 0055 33       		.byte	(.L267-.L268)/2
 2431 0056 33       		.byte	(.L267-.L268)/2
 2432 0057 33       		.byte	(.L267-.L268)/2
 2433 0058 33       		.byte	(.L267-.L268)/2
 2434 0059 33       		.byte	(.L267-.L268)/2
 2435 005a 33       		.byte	(.L267-.L268)/2
 2436 005b 33       		.byte	(.L267-.L268)/2
 2437 005c 44       		.byte	(.L252-.L268)/2
 2438 005d CB       		.byte	(.L251-.L268)/2
 2439 005e 49       		.byte	(.L249-.L268)/2
 2440 005f 49       		.byte	(.L249-.L268)/2
 2441 0060 33       		.byte	(.L267-.L268)/2
 2442 0061 33       		.byte	(.L267-.L268)/2
 2443 0062 33       		.byte	(.L267-.L268)/2
 2444 0063 33       		.byte	(.L267-.L268)/2
 2445 0064 33       		.byte	(.L267-.L268)/2
 2446 0065 49       		.byte	(.L249-.L268)/2
ARM GAS  /tmp/ccK8gYGY.s 			page 107


 2447 0066 49       		.byte	(.L249-.L268)/2
 2448 0067 00       		.p2align 1
 2449              	.L255:
1039:src/keys.c    **** 			if (is_bad_cmdline())
 2450              		.loc 1 1039 3 view .LVU710
1039:src/keys.c    **** 			if (is_bad_cmdline())
 2451              		.loc 1 1039 6 is_stmt 0 view .LVU711
 2452 0068 012D     		cmp	r5, #1
 2453 006a 11D1     		bne	.L261
1040:src/keys.c    **** 				return STATE_UNFINISHED;
 2454              		.loc 1 1040 4 is_stmt 1 view .LVU712
1040:src/keys.c    **** 				return STATE_UNFINISHED;
 2455              		.loc 1 1040 8 is_stmt 0 view .LVU713
 2456 006c FFF7FEFF 		bl	is_bad_cmdline
 2457              	.LVL187:
1040:src/keys.c    **** 				return STATE_UNFINISHED;
 2458              		.loc 1 1040 7 view .LVU714
 2459 0070 0028     		cmp	r0, #0
 2460 0072 40F0B380 		bne	.L294
1042:src/keys.c    **** 			State2.alphas = 1;
 2461              		.loc 1 1042 4 is_stmt 1 view .LVU715
 2462 0076 FFF7FEFF 		bl	process_cmdline_set_lift
 2463              	.LVL188:
1043:src/keys.c    **** #ifdef DM42
 2464              		.loc 1 1043 4 view .LVU716
1043:src/keys.c    **** #ifdef DM42
 2465              		.loc 1 1043 18 is_stmt 0 view .LVU717
 2466 007a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
1045:src/keys.c    **** 			display_current_menu();
 2467              		.loc 1 1045 4 view .LVU718
 2468 007e 1020     		movs	r0, #16
1043:src/keys.c    **** #ifdef DM42
 2469              		.loc 1 1043 18 view .LVU719
 2470 0080 43F00803 		orr	r3, r3, #8
 2471 0084 88F81630 		strb	r3, [r8, #22]
1045:src/keys.c    **** 			display_current_menu();
 2472              		.loc 1 1045 4 is_stmt 1 view .LVU720
 2473 0088 FFF7FEFF 		bl	set_menu
 2474              	.LVL189:
1046:src/keys.c    **** #endif
 2475              		.loc 1 1046 4 view .LVU721
 2476 008c FFF7FEFF 		bl	display_current_menu
 2477              	.LVL190:
 2478              	.L261:
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2479              		.loc 1 1091 2 view .LVU722
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2480              		.loc 1 1091 5 is_stmt 0 view .LVU723
 2481 0090 B7F5704F 		cmp	r7, #61440
 2482 0094 06D1     		bne	.L267
 2483              	.L248:
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2484              		.loc 1 1091 13 discriminator 1 view .LVU724
 2485 0096 814B     		ldr	r3, .L306+8
 2486 0098 1B68     		ldr	r3, [r3]
 2487 009a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2488 009e DA07     		lsls	r2, r3, #31
ARM GAS  /tmp/ccK8gYGY.s 			page 108


 2489 00a0 00F19C80 		bmi	.L294
 2490              	.L267:
1094:src/keys.c    **** #undef NO_INT
 2491              		.loc 1 1094 2 is_stmt 1 view .LVU725
 2492              	.LVL191:
 2493              	.LBB395:
 2494              	.LBI395:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 2495              		.loc 1 714 12 view .LVU726
 2496              	.LBB396:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 2497              		.loc 1 715 2 view .LVU727
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 2498              		.loc 1 715 6 is_stmt 0 view .LVU728
 2499 00a4 3312     		asrs	r3, r6, #8
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 2500              		.loc 1 715 5 view .LVU729
 2501 00a6 012B     		cmp	r3, #1
 2502 00a8 1FD0     		beq	.L270
 2503              	.LVL192:
 2504              	.L245:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 2505              		.loc 1 715 5 view .LVU730
 2506              	.LBE396:
 2507              	.LBE395:
1096:src/keys.c    **** 
 2508              		.loc 1 1096 1 view .LVU731
 2509 00aa 3046     		mov	r0, r6
 2510 00ac BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2511              	.LVL193:
 2512              	.L256:
1028:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2513              		.loc 1 1028 4 is_stmt 1 view .LVU732
1028:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2514              		.loc 1 1028 8 is_stmt 0 view .LVU733
 2515 00b0 7A4B     		ldr	r3, .L306+8
 2516 00b2 1B68     		ldr	r3, [r3]
 2517 00b4 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1028:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2518              		.loc 1 1028 7 view .LVU734
 2519 00b8 DB07     		lsls	r3, r3, #31
 2520 00ba 00F19980 		bmi	.L297
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2521              		.loc 1 1091 2 is_stmt 1 view .LVU735
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2522              		.loc 1 1091 5 is_stmt 0 view .LVU736
 2523 00be B7F5704F 		cmp	r7, #61440
 2524 00c2 EFD1     		bne	.L267
 2525 00c4 E7E7     		b	.L248
 2526              	.L252:
1071:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 2527              		.loc 1 1071 3 is_stmt 1 view .LVU737
1071:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 2528              		.loc 1 1071 18 is_stmt 0 view .LVU738
 2529 00c6 FFF7FEFF 		bl	shift_down
 2530              	.LVL194:
1071:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
ARM GAS  /tmp/ccK8gYGY.s 			page 109


 2531              		.loc 1 1071 6 view .LVU739
 2532 00ca 0028     		cmp	r0, #0
 2533 00cc 40F0BA80 		bne	.L301
 2534              	.L249:
1080:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 2535              		.loc 1 1080 3 is_stmt 1 view .LVU740
1080:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 2536              		.loc 1 1080 6 is_stmt 0 view .LVU741
 2537 00d0 B6F59C7F 		cmp	r6, #312
 2538 00d4 40F0A580 		bne	.L302
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2539              		.loc 1 1091 2 is_stmt 1 view .LVU742
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2540              		.loc 1 1091 5 is_stmt 0 view .LVU743
 2541 00d8 B7F5704F 		cmp	r7, #61440
 2542 00dc 05D1     		bne	.L270
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2543              		.loc 1 1091 13 view .LVU744
 2544 00de 6F4B     		ldr	r3, .L306+8
 2545 00e0 1B68     		ldr	r3, [r3]
 2546 00e2 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2547 00e6 DB07     		lsls	r3, r3, #31
 2548 00e8 78D4     		bmi	.L294
 2549              	.LVL195:
 2550              	.L270:
 2551              	.LBB399:
 2552              	.LBB397:
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2553              		.loc 1 1091 13 view .LVU745
 2554 00ea 3046     		mov	r0, r6
 2555              	.LBE397:
 2556              	.LBE399:
1096:src/keys.c    **** 
 2557              		.loc 1 1096 1 view .LVU746
 2558 00ec BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 2559              		.cfi_remember_state
 2560              		.cfi_restore 14
 2561              		.cfi_restore 8
 2562              		.cfi_restore 7
 2563              		.cfi_restore 6
 2564              		.cfi_restore 5
 2565              		.cfi_restore 4
 2566              		.cfi_def_cfa_offset 0
 2567              	.LVL196:
 2568              	.LBB400:
 2569              	.LBB398:
1096:src/keys.c    **** 
 2570              		.loc 1 1096 1 view .LVU747
 2571 00f0 FFF7FEBF 		b	check_confirm.part.0
 2572              	.LVL197:
 2573              	.L292:
 2574              		.cfi_restore_state
1096:src/keys.c    **** 
 2575              		.loc 1 1096 1 view .LVU748
 2576              	.LBE398:
 2577              	.LBE400:
 2578              	.LBB401:
ARM GAS  /tmp/ccK8gYGY.s 			page 110


 2579              	.LBB384:
 2580              	.LBB380:
 2581              	.LBB376:
 2582              	.LBB374:
  98:src/keys.c    **** }
 2583              		.loc 1 98 52 view .LVU749
 2584 00f4 DFF8AC81 		ldr	r8, .L306+16
 2585 00f8 98F81050 		ldrb	r5, [r8, #16]	@ zero_extendqisi2
 2586 00fc 8AE7     		b	.L246
 2587              	.LVL198:
 2588              	.L300:
  98:src/keys.c    **** }
 2589              		.loc 1 98 52 view .LVU750
 2590              	.LBE374:
 2591              	.LBE376:
 2592              	.LBE380:
 2593              	.LBE384:
 2594              	.LBE401:
1004:src/keys.c    **** 
 2595              		.loc 1 1004 3 is_stmt 1 view .LVU751
1004:src/keys.c    **** 
 2596              		.loc 1 1004 6 is_stmt 0 view .LVU752
 2597 00fe 26F47046 		bic	r6, r6, #61440
 2598              	.LVL199:
1006:src/keys.c    **** 	case K00:
 2599              		.loc 1 1006 2 is_stmt 1 view .LVU753
 2600 0102 282C     		cmp	r4, #40
 2601 0104 C7D8     		bhi	.L248
 2602 0106 01A3     		adr	r3, .L250
 2603 0108 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 2604              		.p2align 2
 2605              	.L250:
 2606 010c E5010000 		.word	.L258+1
 2607 0110 B1000000 		.word	.L256+1
 2608 0114 97000000 		.word	.L248+1
 2609 0118 B1000000 		.word	.L256+1
 2610 011c 97000000 		.word	.L248+1
 2611 0120 97000000 		.word	.L248+1
 2612 0124 97000000 		.word	.L248+1
 2613 0128 97000000 		.word	.L248+1
 2614 012c 97000000 		.word	.L248+1
 2615 0130 97000000 		.word	.L248+1
 2616 0134 97000000 		.word	.L248+1
 2617 0138 97000000 		.word	.L248+1
 2618 013c 69000000 		.word	.L255+1
 2619 0140 97000000 		.word	.L248+1
 2620 0144 97000000 		.word	.L248+1
 2621 0148 97000000 		.word	.L248+1
 2622 014c 97000000 		.word	.L248+1
 2623 0150 97000000 		.word	.L248+1
 2624 0154 FF010000 		.word	.L254+1
 2625 0158 B1010000 		.word	.L253+1
 2626 015c 97000000 		.word	.L248+1
 2627 0160 97000000 		.word	.L248+1
 2628 0164 97000000 		.word	.L248+1
 2629 0168 97000000 		.word	.L248+1
 2630 016c 97000000 		.word	.L248+1
ARM GAS  /tmp/ccK8gYGY.s 			page 111


 2631 0170 97000000 		.word	.L248+1
 2632 0174 97000000 		.word	.L248+1
 2633 0178 97000000 		.word	.L248+1
 2634 017c 97000000 		.word	.L248+1
 2635 0180 97000000 		.word	.L248+1
 2636 0184 C7000000 		.word	.L252+1
 2637 0188 D5010000 		.word	.L251+1
 2638 018c D1000000 		.word	.L249+1
 2639 0190 D1000000 		.word	.L249+1
 2640 0194 97000000 		.word	.L248+1
 2641 0198 97000000 		.word	.L248+1
 2642 019c 97000000 		.word	.L248+1
 2643 01a0 97000000 		.word	.L248+1
 2644 01a4 97000000 		.word	.L248+1
 2645 01a8 D1000000 		.word	.L249+1
 2646 01ac D1000000 		.word	.L249+1
 2647              		.p2align 1
 2648              	.L253:
1052:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2649              		.loc 1 1052 4 view .LVU754
1052:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2650              		.loc 1 1052 7 is_stmt 0 view .LVU755
 2651 01b0 022D     		cmp	r5, #2
 2652 01b2 7FF46DAF 		bne	.L261
1052:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2653              		.loc 1 1052 27 discriminator 1 view .LVU756
 2654 01b6 394B     		ldr	r3, .L306+8
 2655 01b8 1B68     		ldr	r3, [r3]
 2656 01ba 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2657 01be DC07     		lsls	r4, r3, #31
 2658 01c0 7FF566AF 		bpl	.L261
1052:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2659              		.loc 1 1052 45 discriminator 2 view .LVU757
 2660 01c4 0D20     		movs	r0, #13
 2661              	.LVL200:
1052:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2662              		.loc 1 1052 45 discriminator 2 view .LVU758
 2663 01c6 FFF7FEFF 		bl	intltr
 2664              	.LVL201:
1052:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2665              		.loc 1 1052 42 discriminator 2 view .LVU759
 2666 01ca 0028     		cmp	r0, #0
 2667 01cc 3FF460AF 		beq	.L261
1053:src/keys.c    **** 	  }
 2668              		.loc 1 1053 13 view .LVU760
 2669 01d0 1226     		movs	r6, #18
 2670              	.LVL202:
1053:src/keys.c    **** 	  }
 2671              		.loc 1 1053 13 view .LVU761
 2672 01d2 6AE7     		b	.L245
 2673              	.LVL203:
 2674              	.L251:
1063:src/keys.c    **** 			return STATE_UNFINISHED;
 2675              		.loc 1 1063 3 is_stmt 1 view .LVU762
1063:src/keys.c    **** 			return STATE_UNFINISHED;
 2676              		.loc 1 1063 7 is_stmt 0 view .LVU763
 2677 01d4 FFF7FEFF 		bl	is_bad_cmdline
ARM GAS  /tmp/ccK8gYGY.s 			page 112


 2678              	.LVL204:
1063:src/keys.c    **** 			return STATE_UNFINISHED;
 2679              		.loc 1 1063 6 view .LVU764
 2680 01d8 0028     		cmp	r0, #0
 2681 01da 40D0     		beq	.L303
 2682              	.LVL205:
 2683              	.L294:
1084:src/keys.c    **** 		}
 2684              		.loc 1 1084 11 view .LVU765
 2685 01dc 3326     		movs	r6, #51
 2686              	.LVL206:
1096:src/keys.c    **** 
 2687              		.loc 1 1096 1 view .LVU766
 2688 01de 3046     		mov	r0, r6
 2689 01e0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2690              	.LVL207:
 2691              	.L258:
1008:src/keys.c    **** 	    //	    print_debug(100,0);
 2692              		.loc 1 1008 4 is_stmt 1 view .LVU767
1008:src/keys.c    **** 	    //	    print_debug(100,0);
 2693              		.loc 1 1008 8 is_stmt 0 view .LVU768
 2694 01e4 2D4B     		ldr	r3, .L306+8
 2695 01e6 1B68     		ldr	r3, [r3]
 2696 01e8 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1008:src/keys.c    **** 	    //	    print_debug(100,0);
 2697              		.loc 1 1008 7 view .LVU769
 2698 01ec DA07     		lsls	r2, r3, #31
 2699 01ee 3CD5     		bpl	.L304
 2700              	.L297:
1028:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2701              		.loc 1 1028 20 discriminator 1 view .LVU770
 2702 01f0 012D     		cmp	r5, #1
 2703 01f2 48D0     		beq	.L305
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2704              		.loc 1 1091 2 is_stmt 1 view .LVU771
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2705              		.loc 1 1091 5 is_stmt 0 view .LVU772
 2706 01f4 B7F5704F 		cmp	r7, #61440
 2707 01f8 7FF454AF 		bne	.L267
 2708 01fc EEE7     		b	.L294
 2709              	.L254:
1057:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2710              		.loc 1 1057 4 is_stmt 1 view .LVU773
1057:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2711              		.loc 1 1057 7 is_stmt 0 view .LVU774
 2712 01fe 022D     		cmp	r5, #2
 2713 0200 7FF446AF 		bne	.L261
1057:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2714              		.loc 1 1057 27 discriminator 1 view .LVU775
 2715 0204 254B     		ldr	r3, .L306+8
 2716 0206 1B68     		ldr	r3, [r3]
 2717 0208 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2718 020c D807     		lsls	r0, r3, #31
 2719              	.LVL208:
1057:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2720              		.loc 1 1057 27 discriminator 1 view .LVU776
 2721 020e 7FF53FAF 		bpl	.L261
ARM GAS  /tmp/ccK8gYGY.s 			page 113


1057:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2722              		.loc 1 1057 45 discriminator 2 view .LVU777
 2723 0212 0E20     		movs	r0, #14
 2724 0214 FFF7FEFF 		bl	intltr
 2725              	.LVL209:
1057:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2726              		.loc 1 1057 42 discriminator 2 view .LVU778
 2727 0218 0028     		cmp	r0, #0
 2728 021a 3FF439AF 		beq	.L261
1058:src/keys.c    **** 	  }
 2729              		.loc 1 1058 13 view .LVU779
 2730 021e 1326     		movs	r6, #19
 2731              	.LVL210:
1058:src/keys.c    **** 	  }
 2732              		.loc 1 1058 13 view .LVU780
 2733 0220 43E7     		b	.L245
 2734              	.LVL211:
 2735              	.L302:
1081:src/keys.c    **** 				init_arg((enum rarg) op);
 2736              		.loc 1 1081 4 is_stmt 1 view .LVU781
1081:src/keys.c    **** 				init_arg((enum rarg) op);
 2737              		.loc 1 1081 7 is_stmt 0 view .LVU782
 2738 0222 B7F5704F 		cmp	r7, #61440
 2739 0226 05D1     		bne	.L266
1081:src/keys.c    **** 				init_arg((enum rarg) op);
 2740              		.loc 1 1081 18 discriminator 1 view .LVU783
 2741 0228 1C4B     		ldr	r3, .L306+8
 2742 022a 1B68     		ldr	r3, [r3]
 2743 022c 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1081:src/keys.c    **** 				init_arg((enum rarg) op);
 2744              		.loc 1 1081 8 discriminator 1 view .LVU784
 2745 0230 D907     		lsls	r1, r3, #31
 2746 0232 D3D4     		bmi	.L294
 2747              	.L266:
1082:src/keys.c    **** 			}
 2748              		.loc 1 1082 5 is_stmt 1 view .LVU785
 2749              	.LVL212:
 2750              	.LBB402:
 2751              	.LBI402:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 2752              		.loc 1 552 13 view .LVU786
 2753              	.LBB403:
 553:src/keys.c    **** 		return;
 2754              		.loc 1 553 2 view .LVU787
 553:src/keys.c    **** 		return;
 2755              		.loc 1 553 6 is_stmt 0 view .LVU788
 2756 0234 FFF7FEFF 		bl	is_bad_cmdline
 2757              	.LVL213:
 553:src/keys.c    **** 		return;
 2758              		.loc 1 553 5 view .LVU789
 2759 0238 0028     		cmp	r0, #0
 2760 023a CFD1     		bne	.L294
 2761 023c F0B2     		uxtb	r0, r6
 2762 023e FFF7FEFF 		bl	init_arg.part.0
 2763              	.LVL214:
 2764 0242 CBE7     		b	.L294
 2765              	.LVL215:
ARM GAS  /tmp/ccK8gYGY.s 			page 114


 2766              	.L301:
 553:src/keys.c    **** 		return;
 2767              		.loc 1 553 5 view .LVU790
 2768              	.LBE403:
 2769              	.LBE402:
1072:src/keys.c    **** 			return STATE_UNFINISHED;
 2770              		.loc 1 1072 4 is_stmt 1 view .LVU791
1072:src/keys.c    **** 			return STATE_UNFINISHED;
 2771              		.loc 1 1072 26 is_stmt 0 view .LVU792
 2772 0244 A5F10105 		sub	r5, #1
 2773              	.LVL216:
1072:src/keys.c    **** 			return STATE_UNFINISHED;
 2774              		.loc 1 1072 17 view .LVU793
 2775 0248 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
1072:src/keys.c    **** 			return STATE_UNFINISHED;
 2776              		.loc 1 1072 26 view .LVU794
 2777 024c B5FA85F5 		clz	r5, r5
 2778 0250 6D09     		lsrs	r5, r5, #5
1072:src/keys.c    **** 			return STATE_UNFINISHED;
 2779              		.loc 1 1072 17 view .LVU795
 2780 0252 65F3C713 		bfi	r3, r5, #7, #1
 2781 0256 88F81730 		strb	r3, [r8, #23]
1073:src/keys.c    **** 		}
 2782              		.loc 1 1073 4 is_stmt 1 view .LVU796
1073:src/keys.c    **** 		}
 2783              		.loc 1 1073 11 is_stmt 0 view .LVU797
 2784 025a 3326     		movs	r6, #51
 2785              	.LVL217:
1073:src/keys.c    **** 		}
 2786              		.loc 1 1073 11 view .LVU798
 2787 025c 25E7     		b	.L245
 2788              	.LVL218:
 2789              	.L303:
1065:src/keys.c    **** 		State2.test = op;
 2790              		.loc 1 1065 3 is_stmt 1 view .LVU799
 2791 025e FFF7FEFF 		bl	process_cmdline_set_lift
 2792              	.LVL219:
1066:src/keys.c    **** 		return STATE_UNFINISHED;
 2793              		.loc 1 1066 3 view .LVU800
1066:src/keys.c    **** 		return STATE_UNFINISHED;
 2794              		.loc 1 1066 15 is_stmt 0 view .LVU801
 2795 0262 88F80F60 		strb	r6, [r8, #15]
1067:src/keys.c    **** 
 2796              		.loc 1 1067 3 is_stmt 1 view .LVU802
1067:src/keys.c    **** 
 2797              		.loc 1 1067 10 is_stmt 0 view .LVU803
 2798 0266 3326     		movs	r6, #51
 2799              	.LVL220:
1067:src/keys.c    **** 
 2800              		.loc 1 1067 10 view .LVU804
 2801 0268 1FE7     		b	.L245
 2802              	.LVL221:
 2803              	.L304:
1010:src/keys.c    **** 	    State2.dot = op;
 2804              		.loc 1 1010 6 is_stmt 1 view .LVU805
1011:src/keys.c    **** 	    // State2.cmplx = 0;
 2805              		.loc 1 1011 6 view .LVU806
ARM GAS  /tmp/ccK8gYGY.s 			page 115


1010:src/keys.c    **** 	    State2.dot = op;
 2806              		.loc 1 1010 17 is_stmt 0 view .LVU807
 2807 026a 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 2808 026e 06F00103 		and	r3, r6, #1
 2809 0272 9B01     		lsls	r3, r3, #6
 2810 0274 43F02003 		orr	r3, r3, #32
 2811 0278 22F06002 		bic	r2, r2, #96
 2812 027c 1343     		orrs	r3, r3, r2
 2813 027e 88F81530 		strb	r3, [r8, #21]
1013:src/keys.c    **** 	  }
 2814              		.loc 1 1013 6 is_stmt 1 view .LVU808
1013:src/keys.c    **** 	  }
 2815              		.loc 1 1013 13 is_stmt 0 view .LVU809
 2816 0282 3326     		movs	r6, #51
 2817              	.LVL222:
1013:src/keys.c    **** 	  }
 2818              		.loc 1 1013 13 view .LVU810
 2819 0284 11E7     		b	.L245
 2820              	.LVL223:
 2821              	.L305:
1029:src/keys.c    **** 		}
 2822              		.loc 1 1029 4 is_stmt 1 view .LVU811
1029:src/keys.c    **** 		}
 2823              		.loc 1 1029 34 is_stmt 0 view .LVU812
 2824 0286 064B     		ldr	r3, .L306+12
1096:src/keys.c    **** 
 2825              		.loc 1 1096 1 view .LVU813
 2826 0288 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 2827              		.cfi_restore 14
 2828              		.cfi_restore 8
 2829              		.cfi_restore 7
 2830              		.cfi_restore 6
 2831              		.cfi_restore 5
 2832              		.cfi_restore 4
 2833              		.cfi_def_cfa_offset 0
 2834              	.LVL224:
1029:src/keys.c    **** 		}
 2835              		.loc 1 1029 11 view .LVU814
 2836 028c 33F81010 		ldrh	r1, [r3, r0, lsl #1]
 2837 0290 FFF7FEBF 		b	check_f_key
 2838              	.LVL225:
 2839              	.L307:
1029:src/keys.c    **** 		}
 2840              		.loc 1 1029 11 view .LVU815
 2841              		.align	2
 2842              	.L306:
 2843 0294 00000000 		.word	.LANCHOR1
 2844 0298 00000000 		.word	.LANCHOR3
 2845 029c 00000000 		.word	main_ram
 2846 02a0 00000000 		.word	.LANCHOR4
 2847 02a4 00000000 		.word	StateWhileOn
 2848              		.cfi_endproc
 2849              	.LFE20:
 2851              		.section	.text.set_window,"ax",%progbits
 2852              		.align	1
 2853              		.p2align 2,,3
 2854              		.syntax unified
ARM GAS  /tmp/ccK8gYGY.s 			page 116


 2855              		.thumb
 2856              		.thumb_func
 2857              		.fpu fpv4-sp-d16
 2859              	set_window:
 2860              	.LVL226:
 2861              	.LFB58:
2988:src/keys.c    **** 
2989:src/keys.c    **** 
2990:src/keys.c    **** /*
2991:src/keys.c    ****  *  CAT command
2992:src/keys.c    ****  */
2993:src/keys.c    **** static int process_labellist(const keycode c) {
2994:src/keys.c    **** 	unsigned int pc = State2.digval;
2995:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
2996:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
2997:src/keys.c    **** 	const int opcode = getprog(pc);
2998:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
2999:src/keys.c    **** 	const int direct = State2.runmode;
3000:src/keys.c    **** 	const enum shifts shift = reset_shift();
3001:src/keys.c    **** 	int op = STATE_UNFINISHED;
3002:src/keys.c    **** 
3003:src/keys.c    **** 	if (n < REGION_XROM) {
3004:src/keys.c    **** 		// Digits take you to that segment
3005:src/keys.c    **** 		pc = addrLIB(1, n);
3006:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
3007:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
3008:src/keys.c    **** 		State2.digval = pc;
3009:src/keys.c    **** 		return STATE_UNFINISHED;
3010:src/keys.c    **** 	}
3011:src/keys.c    **** 
3012:src/keys.c    **** 	switch (c | (shift << 8)) {
3013:src/keys.c    **** 
3014:src/keys.c    **** 	case K_UP | (SHIFT_F << 8):		// Find first label of previous program
3015:src/keys.c    **** 		pc = advance_to_previous_label(advance_to_previous_label(pc, 1), 1);
3016:src/keys.c    **** 		goto next;
3017:src/keys.c    **** 
3018:src/keys.c    **** 	case K_DOWN | (SHIFT_F << 8):		// Find next program
3019:src/keys.c    **** 		pc = advance_to_next_label(pc, 0, 1);
3020:src/keys.c    **** 	case K_DOWN:				// Find next label
3021:src/keys.c    **** 	next:
3022:src/keys.c    **** 		State2.digval = advance_to_next_label(pc, 1, 0);
3023:src/keys.c    **** 		return STATE_UNFINISHED;
3024:src/keys.c    **** 
3025:src/keys.c    **** 	case K_UP:				// Find previous label
3026:src/keys.c    **** 		State2.digval = advance_to_previous_label(pc, 0);
3027:src/keys.c    **** 		return STATE_UNFINISHED;
3028:src/keys.c    **** 
3029:src/keys.c    **** 	case K24:				// <- exits
3030:src/keys.c    **** 		break;
3031:src/keys.c    **** 
3032:src/keys.c    **** 	case K20:				// ENTER^
3033:src/keys.c    **** 	set_pc_and_exit:
3034:src/keys.c    **** 		set_pc(pc);			// forced branch
3035:src/keys.c    **** 		break;
3036:src/keys.c    **** 
3037:src/keys.c    **** 	case K24 | (SHIFT_F << 8):		// CLP
3038:src/keys.c    **** 		op = (OP_NIL | OP_CLPROG);
ARM GAS  /tmp/ccK8gYGY.s 			page 117


3039:src/keys.c    **** 		goto set_pc_and_exit;
3040:src/keys.c    **** 
3041:src/keys.c    **** 	case K10:				// STO
3042:src/keys.c    **** 	case K11:				// RCL
3043:src/keys.c    **** 	  //#ifndef DM42	
3044:src/keys.c    **** 		op = c == K10 ? (OP_NIL | OP_PSTO) : (OP_NIL | OP_PRCL);
3045:src/keys.c    **** 	  //#endif
3046:src/keys.c    **** /* #ifdef DM42 */
3047:src/keys.c    **** /* 	        op = OP_NIL; */
3048:src/keys.c    **** /* #endif	     */
3049:src/keys.c    **** 	  goto set_pc_and_exit;
3050:src/keys.c    **** #ifdef DM42
3051:src/keys.c    **** 	case K05:				// XEQ
3052:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
3053:src/keys.c    **** 		goto xeq_or_gto;
3054:src/keys.c    **** 
3055:src/keys.c    **** 	case K05 | (SHIFT_F << 8):		// GTO
3056:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
3057:src/keys.c    **** 	xeq_or_gto:
3058:src/keys.c    **** 		if (label)
3059:src/keys.c    **** 			break;
3060:src/keys.c    **** 		return STATE_UNFINISHED;
3061:src/keys.c    **** #else
3062:src/keys.c    **** 	case K30:				// XEQ
3063:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
3064:src/keys.c    **** 		goto xeq_or_gto;
3065:src/keys.c    **** 
3066:src/keys.c    **** 	case K30 | (SHIFT_H << 8):		// GTO
3067:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
3068:src/keys.c    **** 	xeq_or_gto:
3069:src/keys.c    **** 		if (label)
3070:src/keys.c    **** 			break;
3071:src/keys.c    **** 		return STATE_UNFINISHED;
3072:src/keys.c    **** #endif		
3073:src/keys.c    **** 	case K63:				// R/S
3074:src/keys.c    **** 		if (direct && label) {
3075:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
3076:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
3077:src/keys.c    **** 			break;
3078:src/keys.c    **** 		}
3079:src/keys.c    **** 		return STATE_UNFINISHED;
3080:src/keys.c    **** 
3081:src/keys.c    **** 	case K63 | (SHIFT_H << 8):		// P/R
3082:src/keys.c    **** 		State2.runmode = 0;		// switch to program mode
3083:src/keys.c    **** 		goto set_pc_and_exit;
3084:src/keys.c    **** 
3085:src/keys.c    **** 	default:
3086:src/keys.c    **** 		return STATE_UNFINISHED;
3087:src/keys.c    **** 	}
3088:src/keys.c    **** 	State2.digval = 0;
3089:src/keys.c    **** 	State2.labellist = 0;
3090:src/keys.c    **** 	return check_confirm(op);
3091:src/keys.c    **** }
3092:src/keys.c    **** 
3093:src/keys.c    **** 
3094:src/keys.c    **** static void set_window(int c) {
 2862              		.loc 1 3094 31 is_stmt 1 view -0
ARM GAS  /tmp/ccK8gYGY.s 			page 118


 2863              		.cfi_startproc
 2864              		@ args = 0, pretend = 0, frame = 0
 2865              		@ frame_needed = 0, uses_anonymous_args = 0
3095:src/keys.c    **** 
3096:src/keys.c    **** 	if (State2.runmode) {
 2866              		.loc 1 3096 2 view .LVU817
3094:src/keys.c    **** 
 2867              		.loc 1 3094 31 is_stmt 0 view .LVU818
 2868 0000 38B5     		push	{r3, r4, r5, lr}
 2869              		.cfi_def_cfa_offset 16
 2870              		.cfi_offset 3, -16
 2871              		.cfi_offset 4, -12
 2872              		.cfi_offset 5, -8
 2873              		.cfi_offset 14, -4
 2874              		.loc 1 3096 6 view .LVU819
 2875 0002 224C     		ldr	r4, .L323
 2876 0004 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 2877              		.loc 1 3096 5 view .LVU820
 2878 0006 5A06     		lsls	r2, r3, #25
 2879 0008 00D4     		bmi	.L320
 2880              	.LVL227:
 2881              	.L308:
3097:src/keys.c    **** 		process_cmdline_set_lift();
3098:src/keys.c    **** 		// Make sure IntMaxWindow is recalculated
3099:src/keys.c    **** 		State2.disp_freeze = 0;
3100:src/keys.c    **** 		display();	
3101:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
3102:src/keys.c    **** 			if (UState.intm) {
3103:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
3104:src/keys.c    **** 					State2.window--;
3105:src/keys.c    **** 				return;
3106:src/keys.c    **** 			}
3107:src/keys.c    **** 			else 
3108:src/keys.c    **** 				State2.window = is_dblmode();
3109:src/keys.c    **** 		}
3110:src/keys.c    **** 		else {
3111:src/keys.c    **** 			if (UState.intm) {
3112:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
3113:src/keys.c    **** 					State2.window++;
3114:src/keys.c    **** 				return;
3115:src/keys.c    **** 			}
3116:src/keys.c    **** 			else
3117:src/keys.c    **** 				State2.window = 0;
3118:src/keys.c    **** 		}
3119:src/keys.c    **** 		set_smode(SDISP_SHOW);
3120:src/keys.c    **** 	}
3121:src/keys.c    **** }
 2882              		.loc 1 3121 1 view .LVU821
 2883 000a 38BD     		pop	{r3, r4, r5, pc}
 2884              	.LVL228:
 2885              	.L320:
3097:src/keys.c    **** 		process_cmdline_set_lift();
 2886              		.loc 1 3097 3 is_stmt 1 view .LVU822
 2887 000c 0546     		mov	r5, r0
 2888 000e FFF7FEFF 		bl	process_cmdline_set_lift
 2889              	.LVL229:
3099:src/keys.c    **** 		display();	
ARM GAS  /tmp/ccK8gYGY.s 			page 119


 2890              		.loc 1 3099 3 view .LVU823
3099:src/keys.c    **** 		display();	
 2891              		.loc 1 3099 22 is_stmt 0 view .LVU824
 2892 0012 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 2893 0014 6FF30413 		bfc	r3, #4, #1
 2894 0018 E375     		strb	r3, [r4, #23]
3100:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
 2895              		.loc 1 3100 3 is_stmt 1 view .LVU825
 2896 001a FFF7FEFF 		bl	display
 2897              	.LVL230:
3101:src/keys.c    **** 			if (UState.intm) {
 2898              		.loc 1 3101 3 view .LVU826
3102:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2899              		.loc 1 3102 8 is_stmt 0 view .LVU827
 2900 001e 1C4B     		ldr	r3, .L323+4
 2901 0020 1B68     		ldr	r3, [r3]
3101:src/keys.c    **** 			if (UState.intm) {
 2902              		.loc 1 3101 6 view .LVU828
 2903 0022 2C2D     		cmp	r5, #44
3102:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2904              		.loc 1 3102 8 view .LVU829
 2905 0024 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
3101:src/keys.c    **** 			if (UState.intm) {
 2906              		.loc 1 3101 6 view .LVU830
 2907 0028 18D0     		beq	.L321
3111:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 2908              		.loc 1 3111 4 is_stmt 1 view .LVU831
3111:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 2909              		.loc 1 3111 7 is_stmt 0 view .LVU832
 2910 002a 13F00103 		ands	r3, r3, #1
 2911 002e 09D1     		bne	.L322
3117:src/keys.c    **** 		}
 2912              		.loc 1 3117 5 is_stmt 1 view .LVU833
3117:src/keys.c    **** 		}
 2913              		.loc 1 3117 19 is_stmt 0 view .LVU834
 2914 0030 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 2915 0032 63F3C502 		bfi	r2, r3, #3, #3
 2916 0036 2275     		strb	r2, [r4, #20]
 2917              	.L314:
3119:src/keys.c    **** 	}
 2918              		.loc 1 3119 3 is_stmt 1 view .LVU835
 2919              	.LVL231:
 2920              	.LBB410:
 2921              	.LBI410:
 741:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 2922              		.loc 1 741 13 view .LVU836
 2923              	.LBB411:
 742:src/keys.c    **** }
 2924              		.loc 1 742 2 view .LVU837
 742:src/keys.c    **** }
 2925              		.loc 1 742 15 is_stmt 0 view .LVU838
 2926 0038 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 2927 003a 013B     		subs	r3, r3, #1
 2928 003c 18BF     		it	ne
 2929 003e 0123     		movne	r3, #1
 2930 0040 6374     		strb	r3, [r4, #17]
 2931              	.LVL232:
ARM GAS  /tmp/ccK8gYGY.s 			page 120


 742:src/keys.c    **** }
 2932              		.loc 1 742 15 view .LVU839
 2933              	.LBE411:
 2934              	.LBE410:
 2935              		.loc 1 3121 1 view .LVU840
 2936 0042 38BD     		pop	{r3, r4, r5, pc}
 2937              	.LVL233:
 2938              	.L322:
3112:src/keys.c    **** 					State2.window++;
 2939              		.loc 1 3112 5 is_stmt 1 view .LVU841
3112:src/keys.c    **** 					State2.window++;
 2940              		.loc 1 3112 22 is_stmt 0 view .LVU842
 2941 0044 134A     		ldr	r2, .L323+8
3112:src/keys.c    **** 					State2.window++;
 2942              		.loc 1 3112 42 view .LVU843
 2943 0046 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
3112:src/keys.c    **** 					State2.window++;
 2944              		.loc 1 3112 8 view .LVU844
 2945 0048 1168     		ldr	r1, [r2]
3112:src/keys.c    **** 					State2.window++;
 2946              		.loc 1 3112 42 view .LVU845
 2947 004a C3F3C202 		ubfx	r2, r3, #3, #3
3112:src/keys.c    **** 					State2.window++;
 2948              		.loc 1 3112 8 view .LVU846
 2949 004e 8A42     		cmp	r2, r1
 2950 0050 DBDA     		bge	.L308
3113:src/keys.c    **** 				return;
 2951              		.loc 1 3113 6 is_stmt 1 view .LVU847
3113:src/keys.c    **** 				return;
 2952              		.loc 1 3113 19 is_stmt 0 view .LVU848
 2953 0052 0132     		adds	r2, r2, #1
 2954 0054 62F3C503 		bfi	r3, r2, #3, #3
 2955 0058 2375     		strb	r3, [r4, #20]
 2956              		.loc 1 3121 1 view .LVU849
 2957 005a 38BD     		pop	{r3, r4, r5, pc}
 2958              	.LVL234:
 2959              	.L321:
3102:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2960              		.loc 1 3102 4 is_stmt 1 view .LVU850
3102:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2961              		.loc 1 3102 7 is_stmt 0 view .LVU851
 2962 005c DB07     		lsls	r3, r3, #31
 2963 005e 0ED5     		bpl	.L312
 2964              	.LBB412:
 2965              	.LBI412:
3094:src/keys.c    **** 
 2966              		.loc 1 3094 13 is_stmt 1 view .LVU852
 2967              	.LVL235:
 2968              	.LBB413:
3103:src/keys.c    **** 					State2.window--;
 2969              		.loc 1 3103 5 view .LVU853
3103:src/keys.c    **** 					State2.window--;
 2970              		.loc 1 3103 22 is_stmt 0 view .LVU854
 2971 0060 0C4B     		ldr	r3, .L323+8
3103:src/keys.c    **** 					State2.window--;
 2972              		.loc 1 3103 8 view .LVU855
 2973 0062 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccK8gYGY.s 			page 121


 2974 0064 002B     		cmp	r3, #0
 2975 0066 D0DD     		ble	.L308
3103:src/keys.c    **** 					State2.window--;
 2976              		.loc 1 3103 43 view .LVU856
 2977 0068 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
3103:src/keys.c    **** 					State2.window--;
 2978              		.loc 1 3103 26 view .LVU857
 2979 006a 13F0380F 		tst	r3, #56
 2980 006e CCD0     		beq	.L308
3104:src/keys.c    **** 				return;
 2981              		.loc 1 3104 6 is_stmt 1 view .LVU858
3104:src/keys.c    **** 				return;
 2982              		.loc 1 3104 12 is_stmt 0 view .LVU859
 2983 0070 C3F3C202 		ubfx	r2, r3, #3, #3
3104:src/keys.c    **** 				return;
 2984              		.loc 1 3104 19 view .LVU860
 2985 0074 0732     		adds	r2, r2, #7
 2986 0076 62F3C503 		bfi	r3, r2, #3, #3
 2987 007a 2375     		strb	r3, [r4, #20]
 2988              	.LBE413:
 2989              	.LBE412:
 2990              		.loc 1 3121 1 view .LVU861
 2991 007c 38BD     		pop	{r3, r4, r5, pc}
 2992              	.LVL236:
 2993              	.L312:
3108:src/keys.c    **** 		}
 2994              		.loc 1 3108 5 is_stmt 1 view .LVU862
3108:src/keys.c    **** 		}
 2995              		.loc 1 3108 21 is_stmt 0 view .LVU863
 2996 007e FFF7FEFF 		bl	is_dblmode
 2997              	.LVL237:
3108:src/keys.c    **** 		}
 2998              		.loc 1 3108 19 view .LVU864
 2999 0082 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 3000 0084 60F3C503 		bfi	r3, r0, #3, #3
 3001 0088 2375     		strb	r3, [r4, #20]
 3002 008a D5E7     		b	.L314
 3003              	.L324:
 3004              		.align	2
 3005              	.L323:
 3006 008c 00000000 		.word	StateWhileOn
 3007 0090 00000000 		.word	main_ram
 3008 0094 00000000 		.word	IntMaxWindow
 3009              		.cfi_endproc
 3010              	.LFE58:
 3012              		.section	.text.arg_storcl,"ax",%progbits
 3013              		.align	1
 3014              		.p2align 2,,3
 3015              		.syntax unified
 3016              		.thumb
 3017              		.thumb_func
 3018              		.fpu fpv4-sp-d16
 3020              	arg_storcl:
 3021              	.LVL238:
 3022              	.LFB39:
2020:src/keys.c    **** 	unsigned int b = CmdBase;
 3023              		.loc 1 2020 56 is_stmt 1 view -0
ARM GAS  /tmp/ccK8gYGY.s 			page 122


 3024              		.cfi_startproc
 3025              		@ args = 0, pretend = 0, frame = 0
 3026              		@ frame_needed = 0, uses_anonymous_args = 0
 3027              		@ link register save eliminated.
2021:src/keys.c    **** 
 3028              		.loc 1 2021 2 view .LVU866
2021:src/keys.c    **** 
 3029              		.loc 1 2021 19 is_stmt 0 view .LVU867
 3030 0000 0F4A     		ldr	r2, .L357
 3031 0002 D37F     		ldrb	r3, [r2, #31]	@ zero_extendqisi2
 3032              	.LVL239:
2023:src/keys.c    **** 		CmdBase += n;
 3033              		.loc 1 2023 2 is_stmt 1 view .LVU868
 3034              	.LBB422:
 3035              	.LBI422:
2011:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3036              		.loc 1 2011 12 view .LVU869
 3037              	.LBB423:
2016:src/keys.c    **** #endif
 3038              		.loc 1 2016 2 view .LVU870
2016:src/keys.c    **** #endif
 3039              		.loc 1 2016 41 is_stmt 0 view .LVU871
 3040 0004 032B     		cmp	r3, #3
 3041 0006 14D0     		beq	.L326
2016:src/keys.c    **** #endif
 3042              		.loc 1 2016 24 view .LVU872
 3043 0008 0A2B     		cmp	r3, #10
 3044 000a 12D0     		beq	.L326
 3045              	.LVL240:
 3046              	.LBB424:
 3047              	.LBI424:
2011:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3048              		.loc 1 2011 12 is_stmt 1 view .LVU873
 3049              	.LBB425:
2016:src/keys.c    **** #endif
 3050              		.loc 1 2016 41 is_stmt 0 view .LVU874
 3051 000c 19B1     		cbz	r1, .L327
2016:src/keys.c    **** #endif
 3052              		.loc 1 2016 51 view .LVU875
 3053 000e 152B     		cmp	r3, #21
 3054 0010 0FD0     		beq	.L326
2016:src/keys.c    **** #endif
 3055              		.loc 1 2016 70 view .LVU876
 3056 0012 1A2B     		cmp	r3, #26
 3057 0014 0DD0     		beq	.L326
 3058              	.L327:
 3059              	.LVL241:
2016:src/keys.c    **** #endif
 3060              		.loc 1 2016 70 view .LVU877
 3061              	.LBE425:
 3062              	.LBE424:
 3063              	.LBE423:
 3064              	.LBE422:
2028:src/keys.c    **** 		b -= n;
 3065              		.loc 1 2028 2 is_stmt 1 view .LVU878
2028:src/keys.c    **** 		b -= n;
 3066              		.loc 1 2028 5 is_stmt 0 view .LVU879
ARM GAS  /tmp/ccK8gYGY.s 			page 123


 3067 0016 8342     		cmp	r3, r0
 3068 0018 09D3     		bcc	.L332
2029:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 3069              		.loc 1 2029 3 is_stmt 1 view .LVU880
2029:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 3070              		.loc 1 2029 5 is_stmt 0 view .LVU881
 3071 001a 1B1A     		subs	r3, r3, r0
 3072              	.LVL242:
2030:src/keys.c    **** 			CmdBase = b;
 3073              		.loc 1 2030 3 is_stmt 1 view .LVU882
 3074              	.LBB426:
 3075              	.LBI426:
2011:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3076              		.loc 1 2011 12 view .LVU883
 3077              	.LBB427:
2016:src/keys.c    **** #endif
 3078              		.loc 1 2016 2 view .LVU884
2016:src/keys.c    **** #endif
 3079              		.loc 1 2016 41 is_stmt 0 view .LVU885
 3080 001c 032B     		cmp	r3, #3
 3081 001e 0CD0     		beq	.L330
2016:src/keys.c    **** #endif
 3082              		.loc 1 2016 24 view .LVU886
 3083 0020 0A2B     		cmp	r3, #10
 3084 0022 0AD0     		beq	.L330
 3085              	.LVL243:
 3086              	.LBB428:
 3087              	.LBI428:
2011:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3088              		.loc 1 2011 12 is_stmt 1 view .LVU887
 3089              	.LBB429:
2016:src/keys.c    **** #endif
 3090              		.loc 1 2016 41 is_stmt 0 view .LVU888
 3091 0024 19B1     		cbz	r1, .L332
2016:src/keys.c    **** #endif
 3092              		.loc 1 2016 51 view .LVU889
 3093 0026 152B     		cmp	r3, #21
 3094 0028 07D0     		beq	.L330
2016:src/keys.c    **** #endif
 3095              		.loc 1 2016 70 view .LVU890
 3096 002a 1A2B     		cmp	r3, #26
 3097 002c 05D0     		beq	.L330
 3098              	.LVL244:
 3099              	.L332:
2016:src/keys.c    **** #endif
 3100              		.loc 1 2016 70 view .LVU891
 3101              	.LBE429:
 3102              	.LBE428:
 3103              	.LBE427:
 3104              	.LBE426:
2035:src/keys.c    **** }
 3105              		.loc 1 2035 9 view .LVU892
 3106 002e 0020     		movs	r0, #0
 3107              	.LVL245:
2036:src/keys.c    **** 
 3108              		.loc 1 2036 1 view .LVU893
 3109 0030 7047     		bx	lr
ARM GAS  /tmp/ccK8gYGY.s 			page 124


 3110              	.LVL246:
 3111              	.L326:
2024:src/keys.c    **** 		return 1;
 3112              		.loc 1 2024 3 is_stmt 1 view .LVU894
2024:src/keys.c    **** 		return 1;
 3113              		.loc 1 2024 11 is_stmt 0 view .LVU895
 3114 0032 1844     		add	r0, r0, r3
 3115              	.LVL247:
2024:src/keys.c    **** 		return 1;
 3116              		.loc 1 2024 11 view .LVU896
 3117 0034 D077     		strb	r0, [r2, #31]
2025:src/keys.c    **** 	}
 3118              		.loc 1 2025 3 is_stmt 1 view .LVU897
2025:src/keys.c    **** 	}
 3119              		.loc 1 2025 10 is_stmt 0 view .LVU898
 3120 0036 0120     		movs	r0, #1
 3121 0038 7047     		bx	lr
 3122              	.LVL248:
 3123              	.L330:
2031:src/keys.c    **** 			return 1;
 3124              		.loc 1 2031 4 is_stmt 1 view .LVU899
2031:src/keys.c    **** 			return 1;
 3125              		.loc 1 2031 12 is_stmt 0 view .LVU900
 3126 003a D377     		strb	r3, [r2, #31]
2032:src/keys.c    **** 		}
 3127              		.loc 1 2032 4 is_stmt 1 view .LVU901
2032:src/keys.c    **** 		}
 3128              		.loc 1 2032 11 is_stmt 0 view .LVU902
 3129 003c 0120     		movs	r0, #1
 3130              	.LVL249:
2032:src/keys.c    **** 		}
 3131              		.loc 1 2032 11 view .LVU903
 3132 003e 7047     		bx	lr
 3133              	.L358:
 3134              		.align	2
 3135              	.L357:
 3136 0040 00000000 		.word	StateWhileOn
 3137              		.cfi_endproc
 3138              	.LFE39:
 3140              		.section	.text.process_arg,"ax",%progbits
 3141              		.align	1
 3142              		.p2align 2,,3
 3143              		.syntax unified
 3144              		.thumb
 3145              		.thumb_func
 3146              		.fpu fpv4-sp-d16
 3148              	process_arg:
 3149              	.LVL250:
 3150              	.LFB42:
2070:src/keys.c    **** 	unsigned int base = CmdBase;
 3151              		.loc 1 2070 41 is_stmt 1 view -0
 3152              		.cfi_startproc
 3153              		@ args = 0, pretend = 0, frame = 8
 3154              		@ frame_needed = 0, uses_anonymous_args = 0
2071:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3155              		.loc 1 2071 2 view .LVU905
2070:src/keys.c    **** 	unsigned int base = CmdBase;
ARM GAS  /tmp/ccK8gYGY.s 			page 125


 3156              		.loc 1 2070 41 is_stmt 0 view .LVU906
 3157 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3158              		.cfi_def_cfa_offset 36
 3159              		.cfi_offset 4, -36
 3160              		.cfi_offset 5, -32
 3161              		.cfi_offset 6, -28
 3162              		.cfi_offset 7, -24
 3163              		.cfi_offset 8, -20
 3164              		.cfi_offset 9, -16
 3165              		.cfi_offset 10, -12
 3166              		.cfi_offset 11, -8
 3167              		.cfi_offset 14, -4
2071:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3168              		.loc 1 2071 22 view .LVU907
 3169 0004 C94C     		ldr	r4, .L503
2073:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3170              		.loc 1 2073 31 view .LVU908
 3171 0006 DFF834A3 		ldr	r10, .L503+16
2071:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3172              		.loc 1 2071 22 view .LVU909
 3173 000a E57F     		ldrb	r5, [r4, #31]	@ zero_extendqisi2
 3174              	.LBB451:
 3175              	.LBB452:
 3176              	.LBB453:
 3177              	.LBB454:
 143:src/keys.c    **** }
 3178              		.loc 1 143 23 view .LVU910
 3179 000c C84A     		ldr	r2, .L503+4
 3180              	.LBE454:
 3181              	.LBE453:
 234:src/keys.c    **** }
 3182              		.loc 1 234 28 view .LVU911
 3183 000e C94E     		ldr	r6, .L503+8
 3184              	.LBB457:
 3185              	.LBB455:
 143:src/keys.c    **** }
 3186              		.loc 1 143 23 view .LVU912
 3187 0010 125C     		ldrb	r2, [r2, r0]	@ zero_extendqisi2
 3188              	.LBE455:
 3189              	.LBE457:
 3190              	.LBE452:
 3191              	.LBE451:
2074:src/keys.c    **** 	const enum shifts shift = reset_shift();
 3192              		.loc 1 2074 20 view .LVU913
 3193 0012 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 3194              	.LBB461:
 3195              	.LBB459:
 234:src/keys.c    **** }
 3196              		.loc 1 234 28 view .LVU914
 3197 0014 16F80290 		ldrb	r9, [r6, r2]	@ zero_extendqisi2
 3198              	.LBE459:
 3199              	.LBE461:
2073:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3200              		.loc 1 2073 31 view .LVU915
 3201 0018 0AEB0511 		add	r1, r10, r5, lsl #4
2070:src/keys.c    **** 	unsigned int base = CmdBase;
 3202              		.loc 1 2070 41 view .LVU916
ARM GAS  /tmp/ccK8gYGY.s 			page 126


 3203 001c 83B0     		sub	sp, sp, #12
 3204              		.cfi_def_cfa_offset 48
2073:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3205              		.loc 1 2073 31 view .LVU917
 3206 001e 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
2071:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3207              		.loc 1 2071 15 view .LVU918
 3208 0020 0095     		str	r5, [sp]
 3209              	.LVL251:
2072:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
 3210              		.loc 1 2072 2 is_stmt 1 view .LVU919
2073:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3211              		.loc 1 2073 40 is_stmt 0 view .LVU920
 3212 0022 4A07     		lsls	r2, r1, #29
 3213 0024 58BF     		it	pl
 3214 0026 94F91580 		ldrsbpl	r8, [r4, #21]
2074:src/keys.c    **** 	const enum shifts shift = reset_shift();
 3215              		.loc 1 2074 20 view .LVU921
 3216 002a 0193     		str	r3, [sp, #4]
2073:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3217              		.loc 1 2073 40 view .LVU922
 3218 002c 54BF     		ite	pl
 3219 002e 4FEAD878 		lsrpl	r8, r8, #31
 3220 0032 4FF00108 		movmi	r8, #1
2070:src/keys.c    **** 	unsigned int base = CmdBase;
 3221              		.loc 1 2070 41 view .LVU923
 3222 0036 0746     		mov	r7, r0
 3223              	.LVL252:
 3224              	.LBB462:
 3225              	.LBI451:
 210:src/keys.c    **** {
 3226              		.loc 1 210 14 is_stmt 1 view .LVU924
 3227              	.LBB460:
 212:src/keys.c    ****     // K00 - K05
 3228              		.loc 1 212 3 view .LVU925
 234:src/keys.c    **** }
 3229              		.loc 1 234 3 view .LVU926
 3230              	.LBB458:
 3231              	.LBI453:
 131:src/keys.c    **** {
 3232              		.loc 1 131 12 view .LVU927
 3233              	.LBB456:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3234              		.loc 1 133 2 view .LVU928
 143:src/keys.c    **** }
 3235              		.loc 1 143 2 view .LVU929
 143:src/keys.c    **** }
 3236              		.loc 1 143 2 is_stmt 0 view .LVU930
 3237              	.LBE456:
 3238              	.LBE458:
 234:src/keys.c    **** }
 3239              		.loc 1 234 10 view .LVU931
 3240 0038 4E46     		mov	r6, r9
 3241              	.LVL253:
 234:src/keys.c    **** }
 3242              		.loc 1 234 10 view .LVU932
 3243              	.LBE460:
ARM GAS  /tmp/ccK8gYGY.s 			page 127


 3244              	.LBE462:
2073:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3245              		.loc 1 2073 2 is_stmt 1 view .LVU933
2074:src/keys.c    **** 	const enum shifts shift = reset_shift();
 3246              		.loc 1 2074 2 view .LVU934
2075:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
 3247              		.loc 1 2075 2 view .LVU935
 3248              	.LBB463:
 3249              	.LBI463:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 3250              		.loc 1 114 13 view .LVU936
 3251              	.LBE463:
 115:src/keys.c    **** }
 3252              		.loc 1 115 2 view .LVU937
 3253              	.LBB476:
 3254              	.LBB464:
 3255              	.LBI464:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 3256              		.loc 1 104 20 view .LVU938
 3257              	.LBB465:
 105:src/keys.c    **** 	State2.shifts = shift;
 3258              		.loc 1 105 2 view .LVU939
 3259              	.LBB466:
 3260              	.LBI466:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 3261              		.loc 1 96 13 view .LVU940
 3262              	.LBB467:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3263              		.loc 1 97 2 view .LVU941
 3264              	.LBE467:
 3265              	.LBE466:
 3266              	.LBE465:
 3267              	.LBE464:
 3268              	.LBE476:
2073:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3269              		.loc 1 2073 31 is_stmt 0 view .LVU942
 3270 003a 4FEA051B 		lsl	fp, r5, #4
 3271              	.LBB477:
 3272              	.LBB473:
 3273              	.LBB470:
 3274              	.LBB469:
 3275              	.LBB468:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3276              		.loc 1 97 18 view .LVU943
 3277 003e FFF7FEFF 		bl	shift_down
 3278              	.LVL254:
  98:src/keys.c    **** }
 3279              		.loc 1 98 2 is_stmt 1 view .LVU944
  98:src/keys.c    **** }
 3280              		.loc 1 98 52 is_stmt 0 view .LVU945
 3281 0042 00B9     		cbnz	r0, .L361
 3282 0044 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
 3283              	.LVL255:
 3284              	.L361:
  98:src/keys.c    **** }
 3285              		.loc 1 98 52 view .LVU946
 3286              	.LBE468:
ARM GAS  /tmp/ccK8gYGY.s 			page 128


 3287              	.LBE469:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3288              		.loc 1 106 2 is_stmt 1 view .LVU947
 3289              	.LBE470:
 3290              	.LBE473:
 3291              	.LBE477:
2076:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3292              		.loc 1 2076 38 is_stmt 0 view .LVU948
 3293 0046 D344     		add	fp, fp, r10
 3294              	.LBB478:
 3295              	.LBB474:
 3296              	.LBB471:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3297              		.loc 1 106 16 view .LVU949
 3298 0048 4FF0000E 		mov	lr, #0
 3299              	.LBE471:
 3300              	.LBE474:
 3301              	.LBE478:
2076:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3302              		.loc 1 2076 38 view .LVU950
 3303 004c 9BF80510 		ldrb	r1, [fp, #5]	@ zero_extendqisi2
 3304              	.LBB479:
 3305              	.LBB475:
 3306              	.LBB472:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3307              		.loc 1 106 16 view .LVU951
 3308 0050 84F810E0 		strb	lr, [r4, #16]
 108:src/keys.c    **** }
 3309              		.loc 1 108 2 is_stmt 1 view .LVU952
 3310              	.LVL256:
 108:src/keys.c    **** }
 3311              		.loc 1 108 2 is_stmt 0 view .LVU953
 3312              	.LBE472:
 3313              	.LBE475:
 3314              	.LBE479:
2076:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3315              		.loc 1 2076 2 is_stmt 1 view .LVU954
2076:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3316              		.loc 1 2076 61 is_stmt 0 view .LVU955
 3317 0054 8B06     		lsls	r3, r1, #26
 3318 0056 C1F3401C 		ubfx	ip, r1, #5, #1
 3319 005a 19D5     		bpl	.L362
2076:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3320              		.loc 1 2076 61 discriminator 1 view .LVU956
 3321 005c 617D     		ldrb	r1, [r4, #21]	@ zero_extendqisi2
 3322 005e 11F0C00F 		tst	r1, #192
 3323 0062 1FD0     		beq	.L491
 3324              	.LVL257:
2080:src/keys.c    **** 	if (base >= NUM_RARG) {
 3325              		.loc 1 2080 2 is_stmt 1 view .LVU957
2081:src/keys.c    **** 		reset_arg();
 3326              		.loc 1 2081 5 is_stmt 0 view .LVU958
 3327 0064 8E2D     		cmp	r5, #142
2080:src/keys.c    **** 	if (base >= NUM_RARG) {
 3328              		.loc 1 2080 4 view .LVU959
 3329 0066 29F08006 		bic	r6, r9, #128
 3330              	.LVL258:
ARM GAS  /tmp/ccK8gYGY.s 			page 129


2081:src/keys.c    **** 		reset_arg();
 3331              		.loc 1 2081 2 is_stmt 1 view .LVU960
2081:src/keys.c    **** 		reset_arg();
 3332              		.loc 1 2081 5 is_stmt 0 view .LVU961
 3333 006a 15D8     		bhi	.L391
2076:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3334              		.loc 1 2076 61 view .LVU962
 3335 006c F446     		mov	ip, lr
 3336              	.L371:
2086:src/keys.c    **** 	  switch (n) {
 3337              		.loc 1 2086 35 discriminator 1 view .LVU963
 3338 006e 6169     		ldr	r1, [r4, #20]
 3339 0070 11F4103F 		tst	r1, #147456
 3340 0074 2ED1     		bne	.L373
2087:src/keys.c    **** 	  case regX_idx:
 3341              		.loc 1 2087 4 is_stmt 1 view .LVU964
 3342 0076 672E     		cmp	r6, #103
 3343 0078 2CD8     		bhi	.L373
2087:src/keys.c    **** 	  case regX_idx:
 3344              		.loc 1 2087 4 is_stmt 0 view .LVU965
 3345 007a 632E     		cmp	r6, #99
 3346 007c 24D9     		bls	.L433
 3347 007e 653E     		subs	r6, r6, #101
 3348              	.LVL259:
2087:src/keys.c    **** 	  case regX_idx:
 3349              		.loc 1 2087 4 view .LVU966
 3350 0080 022E     		cmp	r6, #2
 3351 0082 00F26082 		bhi	.L376
 3352 0086 DFE816F0 		tbh	[pc, r6, lsl #1]
 3353              	.L378:
 3354 008a 1101     		.2byte	(.L380-.L378)/2
 3355 008c 0B01     		.2byte	(.L379-.L378)/2
 3356 008e 1301     		.2byte	(.L377-.L378)/2
 3357              	.LVL260:
 3358              		.p2align 1
 3359              	.L362:
2080:src/keys.c    **** 	if (base >= NUM_RARG) {
 3360              		.loc 1 2080 2 is_stmt 1 view .LVU967
2081:src/keys.c    **** 		reset_arg();
 3361              		.loc 1 2081 5 is_stmt 0 view .LVU968
 3362 0090 8E2D     		cmp	r5, #142
2080:src/keys.c    **** 	if (base >= NUM_RARG) {
 3363              		.loc 1 2080 4 view .LVU969
 3364 0092 29F08006 		bic	r6, r9, #128
 3365              	.LVL261:
2081:src/keys.c    **** 		reset_arg();
 3366              		.loc 1 2081 2 is_stmt 1 view .LVU970
2081:src/keys.c    **** 		reset_arg();
 3367              		.loc 1 2081 5 is_stmt 0 view .LVU971
 3368 0096 EAD9     		bls	.L371
 3369              	.LVL262:
 3370              	.L391:
2336:src/keys.c    **** 	default:
 3371              		.loc 1 2336 3 is_stmt 1 view .LVU972
 3372 0098 FFF7FEFF 		bl	reset_arg
 3373              	.LVL263:
 3374              	.L484:
ARM GAS  /tmp/ccK8gYGY.s 			page 130


2340:src/keys.c    **** }
 3375              		.loc 1 2340 9 is_stmt 0 view .LVU973
 3376 009c 3320     		movs	r0, #51
 3377              	.L359:
2341:src/keys.c    **** 
 3378              		.loc 1 2341 1 view .LVU974
 3379 009e 03B0     		add	sp, sp, #12
 3380              		.cfi_remember_state
 3381              		.cfi_def_cfa_offset 36
 3382              		@ sp needed
 3383 00a0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3384              	.LVL264:
 3385              	.L491:
 3386              		.cfi_restore_state
2077:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 3387              		.loc 1 2077 2 is_stmt 1 view .LVU975
2077:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 3388              		.loc 1 2077 35 is_stmt 0 view .LVU976
 3389 00a4 292F     		cmp	r7, #41
 3390 00a6 00F0C080 		beq	.L364
2078:src/keys.c    **** 
 3391              		.loc 1 2078 11 view .LVU977
 3392 00aa 0128     		cmp	r0, #1
 3393 00ac 00F0D180 		beq	.L365
2078:src/keys.c    **** 
 3394              		.loc 1 2078 32 discriminator 3 view .LVU978
 3395 00b0 B9F1090F 		cmp	r9, #9
 3396 00b4 00F2B680 		bhi	.L366
 3397              	.LVL265:
2080:src/keys.c    **** 	if (base >= NUM_RARG) {
 3398              		.loc 1 2080 2 is_stmt 1 view .LVU979
2081:src/keys.c    **** 		reset_arg();
 3399              		.loc 1 2081 2 view .LVU980
2081:src/keys.c    **** 		reset_arg();
 3400              		.loc 1 2081 5 is_stmt 0 view .LVU981
 3401 00b8 8E2D     		cmp	r5, #142
 3402 00ba EDD8     		bhi	.L391
2086:src/keys.c    **** 	  switch (n) {
 3403              		.loc 1 2086 35 view .LVU982
 3404 00bc 6169     		ldr	r1, [r4, #20]
 3405 00be 11F4103F 		tst	r1, #147456
2076:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3406              		.loc 1 2076 61 view .LVU983
 3407 00c2 4FF0010C 		mov	ip, #1
2086:src/keys.c    **** 	  switch (n) {
 3408              		.loc 1 2086 35 view .LVU984
 3409 00c6 05D1     		bne	.L373
 3410              	.L433:
2087:src/keys.c    **** 	  case regX_idx:
 3411              		.loc 1 2087 4 view .LVU985
 3412 00c8 16B1     		cbz	r6, .L375
 3413 00ca 721F     		subs	r2, r6, #5
 3414 00cc 042A     		cmp	r2, #4
 3415 00ce 01D8     		bhi	.L373
 3416              	.L375:
2102:src/keys.c    **** 	  }
 3417              		.loc 1 2102 6 is_stmt 1 view .LVU986
ARM GAS  /tmp/ccK8gYGY.s 			page 131


2102:src/keys.c    **** 	  }
 3418              		.loc 1 2102 13 is_stmt 0 view .LVU987
 3419 00d0 3046     		mov	r0, r6
 3420              	.LVL266:
2102:src/keys.c    **** 	  }
 3421              		.loc 1 2102 13 view .LVU988
 3422 00d2 E6E0     		b	.L485
 3423              	.LVL267:
 3424              	.L373:
2109:src/keys.c    **** 		// row column shorthand addressing
 3425              		.loc 1 2109 2 is_stmt 1 view .LVU989
2115:src/keys.c    **** 		switch ((int)c) {
 3426              		.loc 1 2115 2 view .LVU990
2115:src/keys.c    **** 		switch ((int)c) {
 3427              		.loc 1 2115 5 is_stmt 0 view .LVU991
 3428 00d4 4D2D     		cmp	r5, #77
 3429 00d6 00F0B180 		beq	.L492
2115:src/keys.c    **** 		switch ((int)c) {
 3430              		.loc 1 2115 23 discriminator 1 view .LVU992
 3431 00da 05F17302 		add	r2, r5, #115
 3432 00de D2B2     		uxtb	r2, r2
 3433 00e0 012A     		cmp	r2, #1
 3434 00e2 61D9     		bls	.L493
 3435              	.LVL268:
 3436              	.L382:
2146:src/keys.c    **** #else
 3437              		.loc 1 2146 3 is_stmt 1 view .LVU993
2146:src/keys.c    **** #else
 3438              		.loc 1 2146 11 is_stmt 0 view .LVU994
 3439 00e4 E577     		strb	r5, [r4, #31]
2169:src/keys.c    **** 	case K_F:
 3440              		.loc 1 2169 2 is_stmt 1 view .LVU995
 3441 00e6 2D2F     		cmp	r7, #45
 3442 00e8 D8D8     		bhi	.L484
 3443 00ea 01A3     		adr	r3, .L386
 3444 00ec 53F827F0 		ldr	pc, [r3, r7, lsl #2]
 3445              		.p2align 2
 3446              	.L386:
 3447 00f0 C1010000 		.word	.L403+1
 3448 00f4 C1010000 		.word	.L403+1
 3449 00f8 C1010000 		.word	.L403+1
 3450 00fc C1010000 		.word	.L403+1
 3451 0100 9D000000 		.word	.L484+1
 3452 0104 9D000000 		.word	.L484+1
 3453 0108 9D000000 		.word	.L484+1
 3454 010c 9D000000 		.word	.L484+1
 3455 0110 C1010000 		.word	.L403+1
 3456 0114 C1010000 		.word	.L403+1
 3457 0118 C1010000 		.word	.L403+1
 3458 011c C1010000 		.word	.L403+1
 3459 0120 45040000 		.word	.L402+1
 3460 0124 9D000000 		.word	.L484+1
 3461 0128 9D000000 		.word	.L484+1
 3462 012c 9D000000 		.word	.L484+1
 3463 0130 C7020000 		.word	.L401+1
 3464 0134 9D000000 		.word	.L484+1
 3465 0138 19020000 		.word	.L400+1
ARM GAS  /tmp/ccK8gYGY.s 			page 132


 3466 013c 9D000000 		.word	.L484+1
 3467 0140 9D000000 		.word	.L484+1
 3468 0144 9D000000 		.word	.L484+1
 3469 0148 F3020000 		.word	.L399+1
 3470 014c 9D000000 		.word	.L484+1
 3471 0150 FF020000 		.word	.L398+1
 3472 0154 0B030000 		.word	.L397+1
 3473 0158 9D000000 		.word	.L484+1
 3474 015c 9D000000 		.word	.L484+1
 3475 0160 81020000 		.word	.L396+1
 3476 0164 9D000000 		.word	.L484+1
 3477 0168 9D000000 		.word	.L484+1
 3478 016c 1F030000 		.word	.L395+1
 3479 0170 4D040000 		.word	.L394+1
 3480 0174 41030000 		.word	.L393+1
 3481 0178 4D030000 		.word	.L392+1
 3482 017c 9D000000 		.word	.L484+1
 3483 0180 99000000 		.word	.L391+1
 3484 0184 9D000000 		.word	.L484+1
 3485 0188 67030000 		.word	.L390+1
 3486 018c 9D000000 		.word	.L484+1
 3487 0190 AD030000 		.word	.L389+1
 3488 0194 CD030000 		.word	.L388+1
 3489 0198 9D000000 		.word	.L484+1
 3490 019c 9D000000 		.word	.L484+1
 3491 01a0 ED030000 		.word	.L387+1
 3492 01a4 25040000 		.word	.L385+1
 3493              	.LVL269:
 3494              		.p2align 1
 3495              	.L493:
2116:src/keys.c    **** 		case K_UP:	// up arrow
 3496              		.loc 1 2116 3 view .LVU996
 3497 01a8 122F     		cmp	r7, #18
 3498 01aa 2FD0     		beq	.L429
 3499 01ac 182F     		cmp	r7, #24
 3500 01ae 01D0     		beq	.L430
 3501 01b0 012F     		cmp	r7, #1
 3502 01b2 97D1     		bne	.L382
 3503              	.L430:
2132:src/keys.c    **** 		    base = RARG_SIG0;
 3504              		.loc 1 2132 5 view .LVU997
2136:src/keys.c    **** 		    base = RARG_FIX;
 3505              		.loc 1 2136 5 view .LVU998
2136:src/keys.c    **** 		    base = RARG_FIX;
 3506              		.loc 1 2136 8 is_stmt 0 view .LVU999
 3507 01b4 8D2D     		cmp	r5, #141
 3508 01b6 7DD1     		bne	.L494
 3509 01b8 4D23     		movs	r3, #77
 3510 01ba 0093     		str	r3, [sp]
 3511              	.LVL270:
2137:src/keys.c    **** 		    break;
 3512              		.loc 1 2137 12 view .LVU1000
 3513 01bc 1D46     		mov	r5, r3
 3514 01be 91E7     		b	.L382
 3515              	.LVL271:
 3516              	.L403:
2224:src/keys.c    **** 			return arg_eval(n);
ARM GAS  /tmp/ccK8gYGY.s 			page 133


 3517              		.loc 1 2224 4 is_stmt 1 view .LVU1001
2224:src/keys.c    **** 			return arg_eval(n);
 3518              		.loc 1 2224 8 is_stmt 0 view .LVU1002
 3519 01c0 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
2224:src/keys.c    **** 			return arg_eval(n);
 3520              		.loc 1 2224 7 view .LVU1003
 3521 01c2 5306     		lsls	r3, r2, #25
 3522 01c4 6AD4     		bmi	.L418
2224:src/keys.c    **** 			return arg_eval(n);
 3523              		.loc 1 2224 19 discriminator 1 view .LVU1004
 3524 01c6 B8F1000F 		cmp	r8, #0
 3525 01ca 67D1     		bne	.L418
2226:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 3526              		.loc 1 2226 3 is_stmt 1 view .LVU1005
2226:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 3527              		.loc 1 2226 6 is_stmt 0 view .LVU1006
 3528 01cc 032F     		cmp	r7, #3
 3529 01ce 3FF665AF 		bhi	.L484
2227:src/keys.c    **** 		break;
 3530              		.loc 1 2227 4 is_stmt 1 view .LVU1007
 3531              	.LVL272:
 3532              	.LBB480:
 3533              	.LBI480:
1997:src/keys.c    **** 	const unsigned int b = CmdBase;
 3534              		.loc 1 1997 12 view .LVU1008
 3535              	.LBB481:
1998:src/keys.c    **** 
 3536              		.loc 1 1998 2 view .LVU1009
2000:src/keys.c    **** 	{
 3537              		.loc 1 2000 2 view .LVU1010
2000:src/keys.c    **** 	{
 3538              		.loc 1 2000 16 is_stmt 0 view .LVU1011
 3539 01d2 009B     		ldr	r3, [sp]
 3540 01d4 0AEB0311 		add	r1, r10, r3, lsl #4
 3541 01d8 1801     		lsls	r0, r3, #4
 3542 01da 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
2000:src/keys.c    **** 	{
 3543              		.loc 1 2000 5 view .LVU1012
 3544 01dc 8D06     		lsls	r5, r1, #26
 3545 01de 05D4     		bmi	.L409
2000:src/keys.c    **** 	{
 3546              		.loc 1 2000 40 view .LVU1013
 3547 01e0 A3F15109 		sub	r9, r3, #81
2000:src/keys.c    **** 	{
 3548              		.loc 1 2000 23 view .LVU1014
 3549 01e4 B9F10A0F 		cmp	r9, #10
 3550 01e8 3FF658AF 		bhi	.L484
 3551              	.L409:
2002:src/keys.c    **** 			return STATE_UNFINISHED;
 3552              		.loc 1 2002 3 is_stmt 1 view .LVU1015
2002:src/keys.c    **** 			return STATE_UNFINISHED;
 3553              		.loc 1 2002 6 is_stmt 0 view .LVU1016
 3554 01ec 1106     		lsls	r1, r2, #24
 3555 01ee 3FF555AF 		bmi	.L484
2002:src/keys.c    **** 			return STATE_UNFINISHED;
 3556              		.loc 1 2002 18 view .LVU1017
 3557 01f2 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
ARM GAS  /tmp/ccK8gYGY.s 			page 134


 3558 01f4 002A     		cmp	r2, #0
 3559 01f6 7FF451AF 		bne	.L484
2004:src/keys.c    **** 			return STATE_UNFINISHED;
 3560              		.loc 1 2004 3 is_stmt 1 view .LVU1018
2004:src/keys.c    **** 			return STATE_UNFINISHED;
 3561              		.loc 1 2004 17 is_stmt 0 view .LVU1019
 3562 01fa 0AEB0003 		add	r3, r10, r0
2004:src/keys.c    **** 			return STATE_UNFINISHED;
 3563              		.loc 1 2004 6 view .LVU1020
 3564 01fe 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3565 0200 632B     		cmp	r3, #99
 3566 0202 7FF64BAF 		bls	.L484
2006:src/keys.c    **** 	}
 3567              		.loc 1 2006 3 is_stmt 1 view .LVU1021
2006:src/keys.c    **** 	}
 3568              		.loc 1 2006 10 is_stmt 0 view .LVU1022
 3569 0206 07F16400 		add	r0, r7, #100
 3570 020a 34E0     		b	.L486
 3571              	.LVL273:
 3572              	.L429:
2006:src/keys.c    **** 	}
 3573              		.loc 1 2006 10 view .LVU1023
 3574              	.LBE481:
 3575              	.LBE480:
2118:src/keys.c    **** 		    base = RARG_SIG;
 3576              		.loc 1 2118 5 is_stmt 1 view .LVU1024
2122:src/keys.c    **** 		    base = RARG_SIG0;
 3577              		.loc 1 2122 5 view .LVU1025
2122:src/keys.c    **** 		    base = RARG_SIG0;
 3578              		.loc 1 2122 8 is_stmt 0 view .LVU1026
 3579 020c 8D2D     		cmp	r5, #141
 3580 020e 01D0     		beq	.L479
2126:src/keys.c    **** 		    base = RARG_FIX;
 3581              		.loc 1 2126 5 is_stmt 1 view .LVU1027
2126:src/keys.c    **** 		    base = RARG_FIX;
 3582              		.loc 1 2126 8 is_stmt 0 view .LVU1028
 3583 0210 8E2D     		cmp	r5, #142
 3584 0212 56D0     		beq	.L495
 3585              	.L479:
2146:src/keys.c    **** #else
 3586              		.loc 1 2146 3 is_stmt 1 view .LVU1029
2146:src/keys.c    **** #else
 3587              		.loc 1 2146 11 is_stmt 0 view .LVU1030
 3588 0214 8E23     		movs	r3, #142
 3589              	.LVL274:
 3590              	.L483:
2146:src/keys.c    **** #else
 3591              		.loc 1 2146 11 view .LVU1031
 3592 0216 E377     		strb	r3, [r4, #31]
2169:src/keys.c    **** 	case K_F:
 3593              		.loc 1 2169 2 is_stmt 1 view .LVU1032
 3594              	.L400:
2286:src/keys.c    **** 		break;
 3595              		.loc 1 2286 3 view .LVU1033
 3596 0218 0021     		movs	r1, #0
 3597 021a 0620     		movs	r0, #6
 3598              	.LVL275:
ARM GAS  /tmp/ccK8gYGY.s 			page 135


2286:src/keys.c    **** 		break;
 3599              		.loc 1 2286 3 is_stmt 0 view .LVU1034
 3600 021c FFF7FEFF 		bl	arg_storcl
 3601              	.LVL276:
2287:src/keys.c    **** 
 3602              		.loc 1 2287 3 is_stmt 1 view .LVU1035
2340:src/keys.c    **** }
 3603              		.loc 1 2340 9 is_stmt 0 view .LVU1036
 3604 0220 3320     		movs	r0, #51
2287:src/keys.c    **** 
 3605              		.loc 1 2287 3 view .LVU1037
 3606 0222 3CE7     		b	.L359
 3607              	.LVL277:
 3608              	.L366:
2078:src/keys.c    **** 
 3609              		.loc 1 2078 42 discriminator 4 view .LVU1038
 3610 0224 19F0800F 		tst	r9, #128
 3611 0228 13D0     		beq	.L365
 3612              	.L364:
 3613              	.LVL278:
2080:src/keys.c    **** 	if (base >= NUM_RARG) {
 3614              		.loc 1 2080 2 is_stmt 1 view .LVU1039
2081:src/keys.c    **** 		reset_arg();
 3615              		.loc 1 2081 5 is_stmt 0 view .LVU1040
 3616 022a 8E2D     		cmp	r5, #142
2080:src/keys.c    **** 	if (base >= NUM_RARG) {
 3617              		.loc 1 2080 4 view .LVU1041
 3618 022c 29F08006 		bic	r6, r9, #128
 3619              	.LVL279:
2081:src/keys.c    **** 		reset_arg();
 3620              		.loc 1 2081 2 is_stmt 1 view .LVU1042
2076:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3621              		.loc 1 2076 61 is_stmt 0 view .LVU1043
 3622 0230 98BF     		it	ls
 3623 0232 4FF0010C 		movls	ip, #1
2081:src/keys.c    **** 		reset_arg();
 3624              		.loc 1 2081 5 view .LVU1044
 3625 0236 7FF61AAF 		bls	.L371
 3626 023a 2DE7     		b	.L391
 3627              	.L492:
2116:src/keys.c    **** 		case K_UP:	// up arrow
 3628              		.loc 1 2116 3 is_stmt 1 view .LVU1045
 3629 023c 122F     		cmp	r7, #18
 3630 023e 00F00B81 		beq	.L441
 3631 0242 182F     		cmp	r7, #24
 3632 0244 02D0     		beq	.L443
 3633 0246 012F     		cmp	r7, #1
 3634 0248 7FF44CAF 		bne	.L382
 3635              	.L443:
 3636 024c 8E25     		movs	r5, #142
 3637              	.LVL280:
2133:src/keys.c    **** 		    break;
 3638              		.loc 1 2133 12 is_stmt 0 view .LVU1046
 3639 024e 0095     		str	r5, [sp]
 3640 0250 48E7     		b	.L382
 3641              	.LVL281:
 3642              	.L365:
ARM GAS  /tmp/ccK8gYGY.s 			page 136


2080:src/keys.c    **** 	if (base >= NUM_RARG) {
 3643              		.loc 1 2080 2 is_stmt 1 view .LVU1047
2081:src/keys.c    **** 		reset_arg();
 3644              		.loc 1 2081 2 view .LVU1048
2081:src/keys.c    **** 		reset_arg();
 3645              		.loc 1 2081 5 is_stmt 0 view .LVU1049
 3646 0252 8E2D     		cmp	r5, #142
 3647 0254 3FF620AF 		bhi	.L391
2109:src/keys.c    **** 		// row column shorthand addressing
 3648              		.loc 1 2109 2 is_stmt 1 view .LVU1050
2111:src/keys.c    **** 
 3649              		.loc 1 2111 3 view .LVU1051
 3650              	.LVL282:
 3651              	.LBB482:
 3652              	.LBI482:
 179:src/keys.c    **** {
 3653              		.loc 1 179 5 view .LVU1052
 3654              	.LBB483:
 181:src/keys.c    **** }
 3655              		.loc 1 181 2 view .LVU1053
 181:src/keys.c    **** }
 3656              		.loc 1 181 18 is_stmt 0 view .LVU1054
 3657 0258 374B     		ldr	r3, .L503+12
 3658 025a A3FB0723 		umull	r2, r3, r3, r7
 181:src/keys.c    **** }
 3659              		.loc 1 181 24 view .LVU1055
 3660 025e 03F0FC00 		and	r0, r3, #252
 3661              	.LVL283:
 181:src/keys.c    **** }
 3662              		.loc 1 181 24 view .LVU1056
 3663 0262 00EB9300 		add	r0, r0, r3, lsr #2
 181:src/keys.c    **** }
 3664              		.loc 1 181 18 view .LVU1057
 3665 0266 9B08     		lsrs	r3, r3, #2
 181:src/keys.c    **** }
 3666              		.loc 1 181 24 view .LVU1058
 3667 0268 4000     		lsls	r0, r0, #1
 181:src/keys.c    **** }
 3668              		.loc 1 181 33 view .LVU1059
 3669 026a 03EB4303 		add	r3, r3, r3, lsl #1
 181:src/keys.c    **** }
 3670              		.loc 1 181 12 view .LVU1060
 3671 026e 0B30     		adds	r0, r0, #11
 181:src/keys.c    **** }
 3672              		.loc 1 181 33 view .LVU1061
 3673 0270 A7EB4307 		sub	r7, r7, r3, lsl #1
 3674              	.LBE483:
 3675              	.LBE482:
2111:src/keys.c    **** 
 3676              		.loc 1 2111 10 view .LVU1062
 3677 0274 3844     		add	r0, r0, r7
 3678              	.LVL284:
 3679              	.L486:
2341:src/keys.c    **** 
 3680              		.loc 1 2341 1 view .LVU1063
 3681 0276 03B0     		add	sp, sp, #12
 3682              		.cfi_remember_state
ARM GAS  /tmp/ccK8gYGY.s 			page 137


 3683              		.cfi_def_cfa_offset 36
 3684              		@ sp needed
 3685 0278 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3686              		.cfi_restore 14
 3687              		.cfi_restore 11
 3688              		.cfi_restore 10
 3689              		.cfi_restore 9
 3690              		.cfi_restore 8
 3691              		.cfi_restore 7
 3692              		.cfi_restore 6
 3693              		.cfi_restore 5
 3694              		.cfi_restore 4
 3695              		.cfi_def_cfa_offset 0
 3696              	.LVL285:
2111:src/keys.c    **** 
 3697              		.loc 1 2111 10 view .LVU1064
 3698 027c FFF7FEBF 		b	arg_eval
 3699              	.LVL286:
 3700              	.L396:
 3701              		.cfi_restore_state
2246:src/keys.c    **** 			return arg_eval(n);
 3702              		.loc 1 2246 3 is_stmt 1 view .LVU1065
2246:src/keys.c    **** 			return arg_eval(n);
 3703              		.loc 1 2246 7 is_stmt 0 view .LVU1066
 3704 0280 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2246:src/keys.c    **** 			return arg_eval(n);
 3705              		.loc 1 2246 6 view .LVU1067
 3706 0282 5F06     		lsls	r7, r3, #25
 3707 0284 0AD4     		bmi	.L418
2246:src/keys.c    **** 			return arg_eval(n);
 3708              		.loc 1 2246 25 discriminator 1 view .LVU1068
 3709 0286 0121     		movs	r1, #1
 3710 0288 0320     		movs	r0, #3
 3711              	.LVL287:
2246:src/keys.c    **** 			return arg_eval(n);
 3712              		.loc 1 2246 25 discriminator 1 view .LVU1069
 3713 028a FFF7FEFF 		bl	arg_storcl
 3714              	.LVL288:
2246:src/keys.c    **** 			return arg_eval(n);
 3715              		.loc 1 2246 18 discriminator 1 view .LVU1070
 3716 028e 0028     		cmp	r0, #0
 3717 0290 7FF404AF 		bne	.L484
2246:src/keys.c    **** 			return arg_eval(n);
 3718              		.loc 1 2246 63 discriminator 2 view .LVU1071
 3719 0294 B8F1000F 		cmp	r8, #0
 3720 0298 3FF400AF 		beq	.L484
 3721              	.L418:
2247:src/keys.c    **** 		break;
 3722              		.loc 1 2247 4 is_stmt 1 view .LVU1072
2247:src/keys.c    **** 		break;
 3723              		.loc 1 2247 11 is_stmt 0 view .LVU1073
 3724 029c 3046     		mov	r0, r6
 3725 029e EAE7     		b	.L486
 3726              	.LVL289:
 3727              	.L379:
2093:src/keys.c    **** 	  case regT_idx:
 3728              		.loc 1 2093 6 is_stmt 1 view .LVU1074
ARM GAS  /tmp/ccK8gYGY.s 			page 138


2093:src/keys.c    **** 	  case regT_idx:
 3729              		.loc 1 2093 13 is_stmt 0 view .LVU1075
 3730 02a0 0320     		movs	r0, #3
 3731              	.LVL290:
 3732              	.L485:
2341:src/keys.c    **** 
 3733              		.loc 1 2341 1 view .LVU1076
 3734 02a2 03B0     		add	sp, sp, #12
 3735              		.cfi_remember_state
 3736              		.cfi_def_cfa_offset 36
 3737              		@ sp needed
 3738 02a4 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3739              		.cfi_restore 14
 3740              		.cfi_restore 11
 3741              		.cfi_restore 10
 3742              		.cfi_restore 9
 3743              		.cfi_restore 8
 3744              		.cfi_restore 7
 3745              		.cfi_restore 6
 3746              		.cfi_restore 5
 3747              		.cfi_restore 4
 3748              		.cfi_def_cfa_offset 0
 3749              	.LVL291:
2091:src/keys.c    **** 	  case regZ_idx:
 3750              		.loc 1 2091 13 view .LVU1077
 3751 02a8 FFF7FEBF 		b	arg_digit
 3752              	.LVL292:
 3753              	.L380:
 3754              		.cfi_restore_state
2091:src/keys.c    **** 	  case regZ_idx:
 3755              		.loc 1 2091 6 is_stmt 1 view .LVU1078
2091:src/keys.c    **** 	  case regZ_idx:
 3756              		.loc 1 2091 13 is_stmt 0 view .LVU1079
 3757 02ac 0220     		movs	r0, #2
 3758              	.LVL293:
2091:src/keys.c    **** 	  case regZ_idx:
 3759              		.loc 1 2091 13 view .LVU1080
 3760 02ae F8E7     		b	.L485
 3761              	.LVL294:
 3762              	.L377:
2095:src/keys.c    **** 	  case 5:
 3763              		.loc 1 2095 6 is_stmt 1 view .LVU1081
2095:src/keys.c    **** 	  case 5:
 3764              		.loc 1 2095 13 is_stmt 0 view .LVU1082
 3765 02b0 0420     		movs	r0, #4
 3766              	.LVL295:
2095:src/keys.c    **** 	  case 5:
 3767              		.loc 1 2095 13 view .LVU1083
 3768 02b2 F6E7     		b	.L485
 3769              	.LVL296:
 3770              	.L494:
2140:src/keys.c    **** 		    base = RARG_SIG;
 3771              		.loc 1 2140 5 is_stmt 1 view .LVU1084
2140:src/keys.c    **** 		    base = RARG_SIG;
 3772              		.loc 1 2140 8 is_stmt 0 view .LVU1085
 3773 02b4 8E2D     		cmp	r5, #142
 3774 02b6 40F00B81 		bne	.L439
ARM GAS  /tmp/ccK8gYGY.s 			page 139


 3775 02ba 8D23     		movs	r3, #141
 3776 02bc 0093     		str	r3, [sp]
 3777              	.LVL297:
2141:src/keys.c    **** 		    break;
 3778              		.loc 1 2141 12 view .LVU1086
 3779 02be 1D46     		mov	r5, r3
 3780 02c0 10E7     		b	.L382
 3781              	.LVL298:
 3782              	.L495:
2141:src/keys.c    **** 		    break;
 3783              		.loc 1 2141 12 view .LVU1087
 3784 02c2 4D23     		movs	r3, #77
 3785 02c4 A7E7     		b	.L483
 3786              	.LVL299:
 3787              	.L401:
2315:src/keys.c    **** 			if (State2.dot)
 3788              		.loc 1 2315 3 is_stmt 1 view .LVU1088
2315:src/keys.c    **** 			if (State2.dot)
 3789              		.loc 1 2315 13 is_stmt 0 view .LVU1089
 3790 02c6 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
2315:src/keys.c    **** 			if (State2.dot)
 3791              		.loc 1 2315 6 view .LVU1090
 3792 02c8 002B     		cmp	r3, #0
 3793 02ca 40F0EC80 		bne	.L425
2316:src/keys.c    **** 				State2.dot = 0;
 3794              		.loc 1 2316 4 is_stmt 1 view .LVU1091
2316:src/keys.c    **** 				State2.dot = 0;
 3795              		.loc 1 2316 8 is_stmt 0 view .LVU1092
 3796 02ce 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2316:src/keys.c    **** 				State2.dot = 0;
 3797              		.loc 1 2316 7 view .LVU1093
 3798 02d0 13F04001 		ands	r1, r3, #64
 3799 02d4 40F0A080 		bne	.L426
2318:src/keys.c    **** 				State2.local = 0;
 3800              		.loc 1 2318 9 is_stmt 1 view .LVU1094
2318:src/keys.c    **** 				State2.local = 0;
 3801              		.loc 1 2318 13 is_stmt 0 view .LVU1095
 3802 02d8 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2318:src/keys.c    **** 				State2.local = 0;
 3803              		.loc 1 2318 12 view .LVU1096
 3804 02da 12F00100 		ands	r0, r2, #1
 3805              	.LVL300:
2318:src/keys.c    **** 				State2.local = 0;
 3806              		.loc 1 2318 12 view .LVU1097
 3807 02de 40F01181 		bne	.L496
2320:src/keys.c    **** 				State2.ind = 0;
 3808              		.loc 1 2320 9 is_stmt 1 view .LVU1098
2320:src/keys.c    **** 				State2.ind = 0;
 3809              		.loc 1 2320 12 is_stmt 0 view .LVU1099
 3810 02e2 1906     		lsls	r1, r3, #24
 3811 02e4 7FF5D8AE 		bpl	.L391
2321:src/keys.c    **** 			else
 3812              		.loc 1 2321 5 is_stmt 1 view .LVU1100
2321:src/keys.c    **** 			else
 3813              		.loc 1 2321 16 is_stmt 0 view .LVU1101
 3814 02e8 60F3C713 		bfi	r3, r0, #7, #1
 3815 02ec 6375     		strb	r3, [r4, #21]
ARM GAS  /tmp/ccK8gYGY.s 			page 140


2340:src/keys.c    **** }
 3816              		.loc 1 2340 9 view .LVU1102
 3817 02ee 3320     		movs	r0, #51
 3818 02f0 D5E6     		b	.L359
 3819              	.LVL301:
 3820              	.L399:
2250:src/keys.c    **** 		break;
 3821              		.loc 1 2250 3 is_stmt 1 view .LVU1103
 3822 02f2 0121     		movs	r1, #1
 3823 02f4 0420     		movs	r0, #4
 3824              	.LVL302:
2250:src/keys.c    **** 		break;
 3825              		.loc 1 2250 3 is_stmt 0 view .LVU1104
 3826 02f6 FFF7FEFF 		bl	arg_storcl
 3827              	.LVL303:
2251:src/keys.c    **** #else
 3828              		.loc 1 2251 3 is_stmt 1 view .LVU1105
2340:src/keys.c    **** }
 3829              		.loc 1 2340 9 is_stmt 0 view .LVU1106
 3830 02fa 3320     		movs	r0, #51
2251:src/keys.c    **** #else
 3831              		.loc 1 2251 3 view .LVU1107
 3832 02fc CFE6     		b	.L359
 3833              	.LVL304:
 3834              	.L398:
2290:src/keys.c    **** 		break;
 3835              		.loc 1 2290 3 is_stmt 1 view .LVU1108
 3836 02fe 0021     		movs	r1, #0
 3837 0300 0520     		movs	r0, #5
 3838              	.LVL305:
2290:src/keys.c    **** 		break;
 3839              		.loc 1 2290 3 is_stmt 0 view .LVU1109
 3840 0302 FFF7FEFF 		bl	arg_storcl
 3841              	.LVL306:
2291:src/keys.c    **** 
 3842              		.loc 1 2291 3 is_stmt 1 view .LVU1110
2340:src/keys.c    **** }
 3843              		.loc 1 2340 9 is_stmt 0 view .LVU1111
 3844 0306 3320     		movs	r0, #51
2291:src/keys.c    **** 
 3845              		.loc 1 2291 3 view .LVU1112
 3846 0308 C9E6     		b	.L359
 3847              	.LVL307:
 3848              	.L397:
2193:src/keys.c    **** 	    return process_arg_shuffle(3);
 3849              		.loc 1 2193 4 is_stmt 1 view .LVU1113
2193:src/keys.c    **** 	    return process_arg_shuffle(3);
 3850              		.loc 1 2193 8 is_stmt 0 view .LVU1114
 3851 030a A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2193:src/keys.c    **** 	    return process_arg_shuffle(3);
 3852              		.loc 1 2193 7 view .LVU1115
 3853 030c 9507     		lsls	r5, r2, #30
 3854 030e 7FF557AF 		bpl	.L403
2194:src/keys.c    **** 	case K51:       // X
 3855              		.loc 1 2194 6 is_stmt 1 view .LVU1116
2194:src/keys.c    **** 	case K51:       // X
 3856              		.loc 1 2194 13 is_stmt 0 view .LVU1117
ARM GAS  /tmp/ccK8gYGY.s 			page 141


 3857 0312 0320     		movs	r0, #3
 3858              	.LVL308:
 3859              	.L487:
2341:src/keys.c    **** 
 3860              		.loc 1 2341 1 view .LVU1118
 3861 0314 03B0     		add	sp, sp, #12
 3862              		.cfi_remember_state
 3863              		.cfi_def_cfa_offset 36
 3864              		@ sp needed
 3865 0316 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3866              		.cfi_restore 14
 3867              		.cfi_restore 11
 3868              		.cfi_restore 10
 3869              		.cfi_restore 9
 3870              		.cfi_restore 8
 3871              		.cfi_restore 7
 3872              		.cfi_restore 6
 3873              		.cfi_restore 5
 3874              		.cfi_restore 4
 3875              		.cfi_def_cfa_offset 0
 3876              	.LVL309:
2203:src/keys.c    **** #else
 3877              		.loc 1 2203 13 view .LVU1119
 3878 031a FFF7FEBF 		b	process_arg_shuffle
 3879              	.LVL310:
 3880              	.L395:
 3881              		.cfi_restore_state
2196:src/keys.c    **** 	    return process_arg_shuffle(0);
 3882              		.loc 1 2196 4 is_stmt 1 view .LVU1120
2196:src/keys.c    **** 	    return process_arg_shuffle(0);
 3883              		.loc 1 2196 8 is_stmt 0 view .LVU1121
 3884 031e A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2196:src/keys.c    **** 	    return process_arg_shuffle(0);
 3885              		.loc 1 2196 7 view .LVU1122
 3886 0320 9007     		lsls	r0, r2, #30
 3887              	.LVL311:
2196:src/keys.c    **** 	    return process_arg_shuffle(0);
 3888              		.loc 1 2196 7 view .LVU1123
 3889 0322 7FF54DAF 		bpl	.L403
2197:src/keys.c    **** 	case K52:	// Y
 3890              		.loc 1 2197 6 is_stmt 1 view .LVU1124
2197:src/keys.c    **** 	case K52:	// Y
 3891              		.loc 1 2197 13 is_stmt 0 view .LVU1125
 3892 0326 0020     		movs	r0, #0
 3893 0328 F4E7     		b	.L487
 3894              	.L504:
 3895 032a 00BF     		.align	2
 3896              	.L503:
 3897 032c 00000000 		.word	StateWhileOn
 3898 0330 00000000 		.word	.LANCHOR6
 3899 0334 00000000 		.word	.LANCHOR5
 3900 0338 ABAAAAAA 		.word	-1431655765
 3901 033c 00000000 		.word	argcmds
 3902              	.LVL312:
 3903              	.L393:
2202:src/keys.c    **** 	    return process_arg_shuffle(2);
 3904              		.loc 1 2202 4 is_stmt 1 view .LVU1126
ARM GAS  /tmp/ccK8gYGY.s 			page 142


2202:src/keys.c    **** 	    return process_arg_shuffle(2);
 3905              		.loc 1 2202 8 is_stmt 0 view .LVU1127
 3906 0340 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2202:src/keys.c    **** 	    return process_arg_shuffle(2);
 3907              		.loc 1 2202 7 view .LVU1128
 3908 0342 9207     		lsls	r2, r2, #30
 3909 0344 7FF53CAF 		bpl	.L403
2203:src/keys.c    **** #else
 3910              		.loc 1 2203 6 is_stmt 1 view .LVU1129
2203:src/keys.c    **** #else
 3911              		.loc 1 2203 13 is_stmt 0 view .LVU1130
 3912 0348 0220     		movs	r0, #2
 3913              	.LVL313:
2203:src/keys.c    **** #else
 3914              		.loc 1 2203 13 view .LVU1131
 3915 034a E3E7     		b	.L487
 3916              	.LVL314:
 3917              	.L392:
2239:src/keys.c    **** 			reset_arg();
 3918              		.loc 1 2239 3 is_stmt 1 view .LVU1132
2239:src/keys.c    **** 			reset_arg();
 3919              		.loc 1 2239 6 is_stmt 0 view .LVU1133
 3920 034c 009B     		ldr	r3, [sp]
 3921 034e 212B     		cmp	r3, #33
 3922 0350 00F0B980 		beq	.L415
2239:src/keys.c    **** 			reset_arg();
 3923              		.loc 1 2239 25 discriminator 1 view .LVU1134
 3924 0354 732B     		cmp	r3, #115
 3925 0356 00F0B680 		beq	.L415
2243:src/keys.c    **** 		break;
 3926              		.loc 1 2243 3 is_stmt 1 view .LVU1135
 3927 035a 0121     		movs	r1, #1
 3928 035c 0220     		movs	r0, #2
 3929              	.LVL315:
2243:src/keys.c    **** 		break;
 3930              		.loc 1 2243 3 is_stmt 0 view .LVU1136
 3931 035e FFF7FEFF 		bl	arg_storcl
 3932              	.LVL316:
2244:src/keys.c    **** 	case K44:		// multiply
 3933              		.loc 1 2244 3 is_stmt 1 view .LVU1137
2340:src/keys.c    **** }
 3934              		.loc 1 2340 9 is_stmt 0 view .LVU1138
 3935 0362 3320     		movs	r0, #51
2244:src/keys.c    **** 	case K44:		// multiply
 3936              		.loc 1 2244 3 view .LVU1139
 3937 0364 9BE6     		b	.L359
 3938              	.LVL317:
 3939              	.L390:
2231:src/keys.c    **** 
 3940              		.loc 1 2231 3 is_stmt 1 view .LVU1140
 3941              	.LBB484:
 3942              	.LBI484:
2038:src/keys.c    **** 
 3943              		.loc 1 2038 12 view .LVU1141
 3944              	.LBB485:
2040:src/keys.c    **** 		// Only valid at beginning of entry
 3945              		.loc 1 2040 2 view .LVU1142
ARM GAS  /tmp/ccK8gYGY.s 			page 143


2040:src/keys.c    **** 		// Only valid at beginning of entry
 3946              		.loc 1 2040 5 is_stmt 0 view .LVU1143
 3947 0366 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 3948 0368 002A     		cmp	r2, #0
 3949 036a 7FF497AE 		bne	.L484
2042:src/keys.c    **** 			// '..' or ENTER '.' = X
 3950              		.loc 1 2042 3 is_stmt 1 view .LVU1144
2042:src/keys.c    **** 			// '..' or ENTER '.' = X
 3951              		.loc 1 2042 6 is_stmt 0 view .LVU1145
 3952 036e 11F4A03F 		tst	r1, #81920
 3953 0372 40F0C180 		bne	.L497
2047:src/keys.c    **** 			// local register or flag select
 3954              		.loc 1 2047 3 is_stmt 1 view .LVU1146
2047:src/keys.c    **** 			// local register or flag select
 3955              		.loc 1 2047 20 is_stmt 0 view .LVU1147
 3956 0376 009B     		ldr	r3, [sp]
 3957 0378 0AEB0313 		add	r3, r10, r3, lsl #4
 3958 037c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
2047:src/keys.c    **** 			// local register or flag select
 3959              		.loc 1 2047 6 view .LVU1148
 3960 037e 1A07     		lsls	r2, r3, #28
 3961 0380 00F1A880 		bmi	.L411
2047:src/keys.c    **** 			// local register or flag select
 3962              		.loc 1 2047 27 view .LVU1149
 3963 0384 94F91530 		ldrsb	r3, [r4, #21]
 3964 0388 002B     		cmp	r3, #0
 3965 038a C0F2A380 		blt	.L411
2051:src/keys.c    **** 			// Special GTO . sequence
 3966              		.loc 1 2051 8 is_stmt 1 view .LVU1150
2051:src/keys.c    **** 			// Special GTO . sequence
 3967              		.loc 1 2051 29 is_stmt 0 view .LVU1151
 3968 038e 009B     		ldr	r3, [sp]
 3969 0390 A3F14409 		sub	r9, r3, #68
2051:src/keys.c    **** 			// Special GTO . sequence
 3970              		.loc 1 2051 11 view .LVU1152
 3971 0394 B9F1010F 		cmp	r9, #1
 3972 0398 3FF680AE 		bhi	.L484
2053:src/keys.c    **** 				State2.gtodot = 1;
 3973              		.loc 1 2053 4 is_stmt 1 view .LVU1153
2054:src/keys.c    **** 				reset_arg();
 3974              		.loc 1 2054 5 view .LVU1154
2054:src/keys.c    **** 				reset_arg();
 3975              		.loc 1 2054 19 is_stmt 0 view .LVU1155
 3976 039c 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 3977 039e 43F00103 		orr	r3, r3, #1
 3978 03a2 6375     		strb	r3, [r4, #21]
2055:src/keys.c    **** 			}
 3979              		.loc 1 2055 5 is_stmt 1 view .LVU1156
 3980 03a4 FFF7FEFF 		bl	reset_arg
 3981              	.LVL318:
2059:src/keys.c    **** }
 3982              		.loc 1 2059 9 is_stmt 0 view .LVU1157
 3983 03a8 3320     		movs	r0, #51
 3984 03aa 78E6     		b	.L359
 3985              	.LVL319:
 3986              	.L389:
2059:src/keys.c    **** }
ARM GAS  /tmp/ccK8gYGY.s 			page 144


 3987              		.loc 1 2059 9 view .LVU1158
 3988              	.LBE485:
 3989              	.LBE484:
2235:src/keys.c    **** 			return arg_eval(n);
 3990              		.loc 1 2235 3 is_stmt 1 view .LVU1159
2235:src/keys.c    **** 			return arg_eval(n);
 3991              		.loc 1 2235 7 is_stmt 0 view .LVU1160
 3992 03ac 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2235:src/keys.c    **** 			return arg_eval(n);
 3993              		.loc 1 2235 6 view .LVU1161
 3994 03ae 5B06     		lsls	r3, r3, #25
 3995 03b0 3FF574AF 		bmi	.L418
2235:src/keys.c    **** 			return arg_eval(n);
 3996              		.loc 1 2235 25 discriminator 1 view .LVU1162
 3997 03b4 0121     		movs	r1, #1
 3998 03b6 0846     		mov	r0, r1
 3999              	.LVL320:
2235:src/keys.c    **** 			return arg_eval(n);
 4000              		.loc 1 2235 25 discriminator 1 view .LVU1163
 4001 03b8 FFF7FEFF 		bl	arg_storcl
 4002              	.LVL321:
2235:src/keys.c    **** 			return arg_eval(n);
 4003              		.loc 1 2235 18 discriminator 1 view .LVU1164
 4004 03bc 0028     		cmp	r0, #0
 4005 03be 7FF46DAE 		bne	.L484
2246:src/keys.c    **** 			return arg_eval(n);
 4006              		.loc 1 2246 63 view .LVU1165
 4007 03c2 B8F1000F 		cmp	r8, #0
 4008 03c6 3FF469AE 		beq	.L484
 4009 03ca 67E7     		b	.L418
 4010              	.LVL322:
 4011              	.L388:
2171:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 4012              		.loc 1 2171 3 is_stmt 1 view .LVU1166
2171:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 4013              		.loc 1 2171 6 is_stmt 0 view .LVU1167
 4014 03cc BCF1000F 		cmp	ip, #0
 4015 03d0 3FF464AE 		beq	.L484
2172:src/keys.c    **** 		break;
 4016              		.loc 1 2172 4 is_stmt 1 view .LVU1168
 4017              	.LVL323:
 4018              	.LBB488:
 4019              	.LBI488:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 4020              		.loc 1 104 20 view .LVU1169
 4021              	.LBB489:
 105:src/keys.c    **** 	State2.shifts = shift;
 4022              		.loc 1 105 2 view .LVU1170
 4023              	.LBB490:
 4024              	.LBI490:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4025              		.loc 1 96 13 view .LVU1171
 4026              	.LBB491:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4027              		.loc 1 97 2 view .LVU1172
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4028              		.loc 1 97 18 is_stmt 0 view .LVU1173
ARM GAS  /tmp/ccK8gYGY.s 			page 145


 4029 03d4 FFF7FEFF 		bl	shift_down
 4030              	.LVL324:
  98:src/keys.c    **** }
 4031              		.loc 1 98 2 is_stmt 1 view .LVU1174
 4032              	.LBE491:
 4033              	.LBE490:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4034              		.loc 1 106 2 view .LVU1175
 4035              	.LBE489:
 4036              	.LBE488:
2172:src/keys.c    **** 		break;
 4037              		.loc 1 2172 4 is_stmt 0 view .LVU1176
 4038 03d8 019B     		ldr	r3, [sp, #4]
 4039 03da B3F1010A 		subs	r10, r3, #1
 4040 03de 18BF     		it	ne
 4041 03e0 4FF0010A 		movne	r10, #1
 4042 03e4 84F810A0 		strb	r10, [r4, #16]
 4043              	.LBB494:
 4044              	.LBB492:
 108:src/keys.c    **** }
 4045              		.loc 1 108 2 is_stmt 1 view .LVU1177
 4046              	.LBE492:
 4047              	.LBE494:
2340:src/keys.c    **** }
 4048              		.loc 1 2340 9 is_stmt 0 view .LVU1178
 4049 03e8 3320     		movs	r0, #51
 4050              	.LBB495:
 4051              	.LBB493:
 108:src/keys.c    **** }
 4052              		.loc 1 108 9 view .LVU1179
 4053 03ea 58E6     		b	.L359
 4054              	.LVL325:
 4055              	.L387:
 108:src/keys.c    **** }
 4056              		.loc 1 108 9 view .LVU1180
 4057              	.LBE493:
 4058              	.LBE495:
2176:src/keys.c    **** 			State2.ind = ! State2.ind;
 4059              		.loc 1 2176 3 is_stmt 1 view .LVU1181
2176:src/keys.c    **** 			State2.ind = ! State2.ind;
 4060              		.loc 1 2176 7 is_stmt 0 view .LVU1182
 4061 03ec 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
2176:src/keys.c    **** 			State2.ind = ! State2.ind;
 4062              		.loc 1 2176 6 view .LVU1183
 4063 03ee 5706     		lsls	r7, r2, #25
 4064 03f0 3FF554AE 		bmi	.L484
2176:src/keys.c    **** 			State2.ind = ! State2.ind;
 4065              		.loc 1 2176 35 discriminator 1 view .LVU1184
 4066 03f4 009B     		ldr	r3, [sp]
 4067 03f6 0AEB0319 		add	r9, r10, r3, lsl #4
 4068 03fa 99F80530 		ldrb	r3, [r9, #5]	@ zero_extendqisi2
2176:src/keys.c    **** 			State2.ind = ! State2.ind;
 4069              		.loc 1 2176 19 discriminator 1 view .LVU1185
 4070 03fe DE07     		lsls	r6, r3, #31
 4071              	.LVL326:
2176:src/keys.c    **** 			State2.ind = ! State2.ind;
 4072              		.loc 1 2176 19 discriminator 1 view .LVU1186
ARM GAS  /tmp/ccK8gYGY.s 			page 146


 4073 0400 7FF54CAE 		bpl	.L484
2177:src/keys.c    **** 			if (! stack_reg)
 4074              		.loc 1 2177 4 is_stmt 1 view .LVU1187
2177:src/keys.c    **** 			if (! stack_reg)
 4075              		.loc 1 2177 17 is_stmt 0 view .LVU1188
 4076 0404 D343     		mvns	r3, r2
 4077 0406 C3F3C013 		ubfx	r3, r3, #7, #1
2177:src/keys.c    **** 			if (! stack_reg)
 4078              		.loc 1 2177 15 view .LVU1189
 4079 040a 63F3C712 		bfi	r2, r3, #7, #1
 4080 040e 6275     		strb	r2, [r4, #21]
2178:src/keys.c    **** 				State2.dot = 0;
 4081              		.loc 1 2178 4 is_stmt 1 view .LVU1190
2178:src/keys.c    **** 				State2.dot = 0;
 4082              		.loc 1 2178 7 is_stmt 0 view .LVU1191
 4083 0410 B8F1000F 		cmp	r8, #0
 4084 0414 7FF442AE 		bne	.L484
 4085              	.L426:
2179:src/keys.c    **** 		}
 4086              		.loc 1 2179 5 is_stmt 1 view .LVU1192
2179:src/keys.c    **** 		}
 4087              		.loc 1 2179 16 is_stmt 0 view .LVU1193
 4088 0418 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 4089 041a 6FF38613 		bfc	r3, #6, #1
 4090 041e 6375     		strb	r3, [r4, #21]
2340:src/keys.c    **** }
 4091              		.loc 1 2340 9 view .LVU1194
 4092 0420 3320     		movs	r0, #51
 4093              	.LVL327:
2340:src/keys.c    **** }
 4094              		.loc 1 2340 9 view .LVU1195
 4095 0422 3CE6     		b	.L359
 4096              	.LVL328:
 4097              	.L385:
2184:src/keys.c    **** 			break;
 4098              		.loc 1 2184 3 is_stmt 1 view .LVU1196
2184:src/keys.c    **** 			break;
 4099              		.loc 1 2184 18 is_stmt 0 view .LVU1197
 4100 0424 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2184:src/keys.c    **** 			break;
 4101              		.loc 1 2184 6 view .LVU1198
 4102 0426 13F0C00F 		tst	r3, #192
 4103 042a 7FF437AE 		bne	.L484
2186:src/keys.c    **** 			CmdBase = RARG_STOM;
 4104              		.loc 1 2186 3 is_stmt 1 view .LVU1199
2186:src/keys.c    **** 			CmdBase = RARG_STOM;
 4105              		.loc 1 2186 6 is_stmt 0 view .LVU1200
 4106 042e 009B     		ldr	r3, [sp]
 4107 0430 032B     		cmp	r3, #3
 4108 0432 5DD0     		beq	.L498
2188:src/keys.c    **** 			CmdBase = RARG_RCLM;
 4109              		.loc 1 2188 8 is_stmt 1 view .LVU1201
2188:src/keys.c    **** 			CmdBase = RARG_RCLM;
 4110              		.loc 1 2188 11 is_stmt 0 view .LVU1202
 4111 0434 009B     		ldr	r3, [sp]
 4112 0436 0A2B     		cmp	r3, #10
 4113 0438 7FF430AE 		bne	.L484
ARM GAS  /tmp/ccK8gYGY.s 			page 147


2189:src/keys.c    **** 		break;
 4114              		.loc 1 2189 4 is_stmt 1 view .LVU1203
2189:src/keys.c    **** 		break;
 4115              		.loc 1 2189 12 is_stmt 0 view .LVU1204
 4116 043c 7823     		movs	r3, #120
 4117 043e E377     		strb	r3, [r4, #31]
2340:src/keys.c    **** }
 4118              		.loc 1 2340 9 view .LVU1205
 4119 0440 3320     		movs	r0, #51
 4120              	.LVL329:
2340:src/keys.c    **** }
 4121              		.loc 1 2340 9 view .LVU1206
 4122 0442 2CE6     		b	.L359
 4123              	.LVL330:
 4124              	.L402:
2294:src/keys.c    **** 			if (argcmds[base].label) {
 4125              		.loc 1 2294 3 is_stmt 1 view .LVU1207
2294:src/keys.c    **** 			if (argcmds[base].label) {
 4126              		.loc 1 2294 6 is_stmt 0 view .LVU1208
 4127 0444 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 4128 0446 4AB1     		cbz	r2, .L499
2308:src/keys.c    **** 			return arg_eval(State2.digval);
 4129              		.loc 1 2308 10 is_stmt 1 view .LVU1209
2309:src/keys.c    **** 		else if (stack_reg)
 4130              		.loc 1 2309 4 view .LVU1210
2309:src/keys.c    **** 		else if (stack_reg)
 4131              		.loc 1 2309 11 is_stmt 0 view .LVU1211
 4132 0448 2089     		ldrh	r0, [r4, #8]
 4133              	.LVL331:
2309:src/keys.c    **** 		else if (stack_reg)
 4134              		.loc 1 2309 11 view .LVU1212
 4135 044a 14E7     		b	.L486
 4136              	.LVL332:
 4137              	.L394:
2199:src/keys.c    **** 	    return process_arg_shuffle(1);
 4138              		.loc 1 2199 4 is_stmt 1 view .LVU1213
2199:src/keys.c    **** 	    return process_arg_shuffle(1);
 4139              		.loc 1 2199 8 is_stmt 0 view .LVU1214
 4140 044c A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2199:src/keys.c    **** 	    return process_arg_shuffle(1);
 4141              		.loc 1 2199 7 view .LVU1215
 4142 044e 9107     		lsls	r1, r2, #30
 4143 0450 7FF5B6AE 		bpl	.L403
2200:src/keys.c    **** 	case K53:       // Z
 4144              		.loc 1 2200 6 is_stmt 1 view .LVU1216
2200:src/keys.c    **** 	case K53:       // Z
 4145              		.loc 1 2200 13 is_stmt 0 view .LVU1217
 4146 0454 0120     		movs	r0, #1
 4147              	.LVL333:
2200:src/keys.c    **** 	case K53:       // Z
 4148              		.loc 1 2200 13 view .LVU1218
 4149 0456 5DE7     		b	.L487
 4150              	.LVL334:
 4151              	.L441:
2116:src/keys.c    **** 		case K_UP:	// up arrow
 4152              		.loc 1 2116 3 view .LVU1219
 4153 0458 8D23     		movs	r3, #141
ARM GAS  /tmp/ccK8gYGY.s 			page 148


 4154              	.LVL335:
2146:src/keys.c    **** #else
 4155              		.loc 1 2146 3 is_stmt 1 view .LVU1220
 4156 045a DCE6     		b	.L483
 4157              	.L499:
2294:src/keys.c    **** 			if (argcmds[base].label) {
 4158              		.loc 1 2294 43 is_stmt 0 discriminator 1 view .LVU1221
 4159 045c 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
 4160 045e 12F0C00F 		tst	r2, #192
 4161 0462 13D1     		bne	.L420
2295:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4162              		.loc 1 2295 4 is_stmt 1 view .LVU1222
2295:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4163              		.loc 1 2295 21 is_stmt 0 view .LVU1223
 4164 0464 009B     		ldr	r3, [sp]
 4165 0466 0AEB0313 		add	r3, r10, r3, lsl #4
 4166 046a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
2295:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4167              		.loc 1 2295 7 view .LVU1224
 4168 046c 9E06     		lsls	r6, r3, #26
 4169              	.LVL336:
2295:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4170              		.loc 1 2295 7 view .LVU1225
 4171 046e 4ED4     		bmi	.L500
2300:src/keys.c    **** 				reset_arg();
 4172              		.loc 1 2300 11 is_stmt 1 view .LVU1226
2300:src/keys.c    **** 				reset_arg();
 4173              		.loc 1 2300 14 is_stmt 0 view .LVU1227
 4174 0470 0099     		ldr	r1, [sp]
 4175 0472 4E29     		cmp	r1, #78
 4176 0474 5DD0     		beq	.L501
2303:src/keys.c    **** 				reset_arg();
 4177              		.loc 1 2303 11 is_stmt 1 view .LVU1228
2303:src/keys.c    **** 				reset_arg();
 4178              		.loc 1 2303 14 is_stmt 0 view .LVU1229
 4179 0476 0099     		ldr	r1, [sp]
 4180 0478 4F29     		cmp	r1, #79
 4181 047a 5FD0     		beq	.L502
2306:src/keys.c    **** 				State2.dot = 1;
 4182              		.loc 1 2306 11 is_stmt 1 view .LVU1230
2306:src/keys.c    **** 				State2.dot = 1;
 4183              		.loc 1 2306 14 is_stmt 0 view .LVU1231
 4184 047c 5807     		lsls	r0, r3, #29
 4185              	.LVL337:
2306:src/keys.c    **** 				State2.dot = 1;
 4186              		.loc 1 2306 14 view .LVU1232
 4187 047e 7FF50DAE 		bpl	.L484
2307:src/keys.c    **** 		} else if (State2.numdigit > 0)
 4188              		.loc 1 2307 5 is_stmt 1 view .LVU1233
2307:src/keys.c    **** 		} else if (State2.numdigit > 0)
 4189              		.loc 1 2307 16 is_stmt 0 view .LVU1234
 4190 0482 42F04002 		orr	r2, r2, #64
 4191 0486 6275     		strb	r2, [r4, #21]
2340:src/keys.c    **** }
 4192              		.loc 1 2340 9 view .LVU1235
 4193 0488 3320     		movs	r0, #51
 4194 048a 08E6     		b	.L359
ARM GAS  /tmp/ccK8gYGY.s 			page 149


 4195              	.LVL338:
 4196              	.L420:
2308:src/keys.c    **** 			return arg_eval(State2.digval);
 4197              		.loc 1 2308 10 is_stmt 1 view .LVU1236
2310:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 4198              		.loc 1 2310 8 view .LVU1237
2310:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 4199              		.loc 1 2310 11 is_stmt 0 view .LVU1238
 4200 048c B8F1000F 		cmp	r8, #0
 4201 0490 3FF404AE 		beq	.L484
2311:src/keys.c    **** 		break;
 4202              		.loc 1 2311 4 is_stmt 1 view .LVU1239
2311:src/keys.c    **** 		break;
 4203              		.loc 1 2311 27 is_stmt 0 view .LVU1240
 4204 0494 C2F38013 		ubfx	r3, r2, #6, #1
2311:src/keys.c    **** 		break;
 4205              		.loc 1 2311 19 view .LVU1241
 4206 0498 C3F10103 		rsb	r3, r3, #1
2311:src/keys.c    **** 		break;
 4207              		.loc 1 2311 15 view .LVU1242
 4208 049c 63F38612 		bfi	r2, r3, #6, #1
 4209 04a0 6275     		strb	r2, [r4, #21]
2340:src/keys.c    **** }
 4210              		.loc 1 2340 9 view .LVU1243
 4211 04a2 3320     		movs	r0, #51
 4212              	.LVL339:
2340:src/keys.c    **** }
 4213              		.loc 1 2340 9 view .LVU1244
 4214 04a4 FBE5     		b	.L359
 4215              	.LVL340:
 4216              	.L425:
2326:src/keys.c    **** 			if (State2.shuffle)
 4217              		.loc 1 2326 4 is_stmt 1 view .LVU1245
2327:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4218              		.loc 1 2327 8 is_stmt 0 view .LVU1246
 4219 04a6 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2326:src/keys.c    **** 			if (State2.shuffle)
 4220              		.loc 1 2326 4 view .LVU1247
 4221 04a8 013B     		subs	r3, r3, #1
 4222 04aa DBB2     		uxtb	r3, r3
2327:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4223              		.loc 1 2327 7 view .LVU1248
 4224 04ac 9207     		lsls	r2, r2, #30
2326:src/keys.c    **** 			if (State2.shuffle)
 4225              		.loc 1 2326 4 view .LVU1249
 4226 04ae E372     		strb	r3, [r4, #11]
2327:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4227              		.loc 1 2327 4 is_stmt 1 view .LVU1250
2327:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4228              		.loc 1 2327 7 is_stmt 0 view .LVU1251
 4229 04b0 16D5     		bpl	.L428
2328:src/keys.c    **** 			else
 4230              		.loc 1 2328 5 is_stmt 1 view .LVU1252
2328:src/keys.c    **** 			else
 4231              		.loc 1 2328 19 is_stmt 0 view .LVU1253
 4232 04b2 2289     		ldrh	r2, [r4, #8]
2328:src/keys.c    **** 			else
ARM GAS  /tmp/ccK8gYGY.s 			page 150


 4233              		.loc 1 2328 46 view .LVU1254
 4234 04b4 5B00     		lsls	r3, r3, #1
2328:src/keys.c    **** 			else
 4235              		.loc 1 2328 26 view .LVU1255
 4236 04b6 0321     		movs	r1, #3
 4237 04b8 01FA03F3 		lsl	r3, r1, r3
2328:src/keys.c    **** 			else
 4238              		.loc 1 2328 19 view .LVU1256
 4239 04bc 22EA0303 		bic	r3, r2, r3
 4240 04c0 2381     		strh	r3, [r4, #8]	@ movhi
2340:src/keys.c    **** }
 4241              		.loc 1 2340 9 view .LVU1257
 4242 04c2 3320     		movs	r0, #51
 4243              	.LVL341:
2340:src/keys.c    **** }
 4244              		.loc 1 2340 9 view .LVU1258
 4245 04c4 EBE5     		b	.L359
 4246              	.LVL342:
 4247              	.L415:
2240:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
 4248              		.loc 1 2240 4 is_stmt 1 view .LVU1259
 4249 04c6 FFF7FEFF 		bl	reset_arg
 4250              	.LVL343:
2241:src/keys.c    **** 		}
 4251              		.loc 1 2241 4 view .LVU1260
2241:src/keys.c    **** 		}
 4252              		.loc 1 2241 11 is_stmt 0 view .LVU1261
 4253 04ca 40F27510 		movw	r0, #373
 4254 04ce E6E5     		b	.L359
 4255              	.LVL344:
 4256              	.L439:
2241:src/keys.c    **** 		}
 4257              		.loc 1 2241 11 view .LVU1262
 4258 04d0 8E25     		movs	r5, #142
 4259              	.LVL345:
2241:src/keys.c    **** 		}
 4260              		.loc 1 2241 11 view .LVU1263
 4261 04d2 07E6     		b	.L382
 4262              	.LVL346:
 4263              	.L411:
 4264              	.LBB496:
 4265              	.LBB486:
2049:src/keys.c    **** 		}
 4266              		.loc 1 2049 4 is_stmt 1 view .LVU1264
2049:src/keys.c    **** 		}
 4267              		.loc 1 2049 17 is_stmt 0 view .LVU1265
 4268 04d4 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 4269 04d6 43F00103 		orr	r3, r3, #1
 4270 04da A375     		strb	r3, [r4, #22]
2059:src/keys.c    **** }
 4271              		.loc 1 2059 9 view .LVU1266
 4272 04dc 3320     		movs	r0, #51
 4273              	.LVL347:
2049:src/keys.c    **** 		}
 4274              		.loc 1 2049 17 view .LVU1267
 4275 04de DEE5     		b	.L359
 4276              	.LVL348:
ARM GAS  /tmp/ccK8gYGY.s 			page 151


 4277              	.L428:
2049:src/keys.c    **** 		}
 4278              		.loc 1 2049 17 view .LVU1268
 4279              	.LBE486:
 4280              	.LBE496:
2330:src/keys.c    **** 		}
 4281              		.loc 1 2330 5 is_stmt 1 view .LVU1269
2330:src/keys.c    **** 		}
 4282              		.loc 1 2330 19 is_stmt 0 view .LVU1270
 4283 04e0 2389     		ldrh	r3, [r4, #8]
 4284 04e2 1A4A     		ldr	r2, .L505
 4285 04e4 A2FB0323 		umull	r2, r3, r2, r3
 4286 04e8 DB08     		lsrs	r3, r3, #3
 4287 04ea 2381     		strh	r3, [r4, #8]	@ movhi
2340:src/keys.c    **** }
 4288              		.loc 1 2340 9 view .LVU1271
 4289 04ec 3320     		movs	r0, #51
 4290              	.LVL349:
2340:src/keys.c    **** }
 4291              		.loc 1 2340 9 view .LVU1272
 4292 04ee D6E5     		b	.L359
 4293              	.LVL350:
 4294              	.L498:
2187:src/keys.c    **** 		else if (base == RARG_RCL)
 4295              		.loc 1 2187 4 is_stmt 1 view .LVU1273
2187:src/keys.c    **** 		else if (base == RARG_RCL)
 4296              		.loc 1 2187 12 is_stmt 0 view .LVU1274
 4297 04f0 7723     		movs	r3, #119
 4298 04f2 E377     		strb	r3, [r4, #31]
2340:src/keys.c    **** }
 4299              		.loc 1 2340 9 view .LVU1275
 4300 04f4 3320     		movs	r0, #51
 4301              	.LVL351:
2340:src/keys.c    **** }
 4302              		.loc 1 2340 9 view .LVU1276
 4303 04f6 D2E5     		b	.L359
 4304              	.LVL352:
 4305              	.L497:
 4306              	.LBB497:
 4307              	.LBB487:
2044:src/keys.c    **** 			return arg_eval(regX_idx);
 4308              		.loc 1 2044 4 is_stmt 1 view .LVU1277
2044:src/keys.c    **** 			return arg_eval(regX_idx);
 4309              		.loc 1 2044 17 is_stmt 0 view .LVU1278
 4310 04f8 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 4311 04fa 62F30003 		bfi	r3, r2, #0, #1
2045:src/keys.c    **** 		}
 4312              		.loc 1 2045 11 view .LVU1279
 4313 04fe 6420     		movs	r0, #100
 4314              	.LVL353:
2044:src/keys.c    **** 			return arg_eval(regX_idx);
 4315              		.loc 1 2044 17 view .LVU1280
 4316 0500 A375     		strb	r3, [r4, #22]
2045:src/keys.c    **** 		}
 4317              		.loc 1 2045 4 is_stmt 1 view .LVU1281
 4318 0502 B8E6     		b	.L486
 4319              	.L496:
ARM GAS  /tmp/ccK8gYGY.s 			page 152


2045:src/keys.c    **** 		}
 4320              		.loc 1 2045 4 is_stmt 0 view .LVU1282
 4321              	.LBE487:
 4322              	.LBE497:
2319:src/keys.c    **** 			else if (State2.ind)
 4323              		.loc 1 2319 5 is_stmt 1 view .LVU1283
2319:src/keys.c    **** 			else if (State2.ind)
 4324              		.loc 1 2319 18 is_stmt 0 view .LVU1284
 4325 0504 61F30002 		bfi	r2, r1, #0, #1
 4326 0508 A275     		strb	r2, [r4, #22]
2340:src/keys.c    **** }
 4327              		.loc 1 2340 9 view .LVU1285
 4328 050a 3320     		movs	r0, #51
 4329 050c C7E5     		b	.L359
 4330              	.LVL354:
 4331              	.L500:
2296:src/keys.c    **** 				State2.multi = 1;
 4332              		.loc 1 2296 5 is_stmt 1 view .LVU1286
 4333              	.LBB498:
 4334              	.LBI498:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 4335              		.loc 1 552 13 view .LVU1287
 4336              	.LBB499:
 553:src/keys.c    **** 		return;
 4337              		.loc 1 553 2 view .LVU1288
 553:src/keys.c    **** 		return;
 4338              		.loc 1 553 6 is_stmt 0 view .LVU1289
 4339 050e FFF7FEFF 		bl	is_bad_cmdline
 4340              	.LVL355:
 553:src/keys.c    **** 		return;
 4341              		.loc 1 553 5 view .LVU1290
 4342 0512 20B9     		cbnz	r0, .L422
 4343              	.LBE499:
 4344              	.LBE498:
2296:src/keys.c    **** 				State2.multi = 1;
 4345              		.loc 1 2296 31 view .LVU1291
 4346 0514 A5F14200 		sub	r0, r5, #66
 4347              	.LBB501:
 4348              	.LBB500:
 4349 0518 C0B2     		uxtb	r0, r0
 4350 051a FFF7FEFF 		bl	init_arg.part.0
 4351              	.LVL356:
 4352              	.L422:
2296:src/keys.c    **** 				State2.multi = 1;
 4353              		.loc 1 2296 31 view .LVU1292
 4354              	.LBE500:
 4355              	.LBE501:
2297:src/keys.c    **** 				State2.alphashift = 0;
 4356              		.loc 1 2297 5 is_stmt 1 view .LVU1293
2298:src/keys.c    **** 				State2.rarg = 0;
 4357              		.loc 1 2298 5 view .LVU1294
2299:src/keys.c    **** 			} else if (base == RARG_SCI) {
 4358              		.loc 1 2299 5 view .LVU1295
2297:src/keys.c    **** 				State2.alphashift = 0;
 4359              		.loc 1 2297 18 is_stmt 0 view .LVU1296
 4360 051e 6369     		ldr	r3, [r4, #20]
 4361 0520 23F44013 		bic	r3, r3, #3145728
ARM GAS  /tmp/ccK8gYGY.s 			page 153


 4362 0524 23F40063 		bic	r3, r3, #2048
 4363 0528 43F40063 		orr	r3, r3, #2048
 4364 052c 6361     		str	r3, [r4, #20]
2340:src/keys.c    **** }
 4365              		.loc 1 2340 9 view .LVU1297
 4366 052e 3320     		movs	r0, #51
 4367 0530 B5E5     		b	.L359
 4368              	.LVL357:
 4369              	.L501:
2301:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
 4370              		.loc 1 2301 5 is_stmt 1 view .LVU1298
 4371 0532 FFF7FEFF 		bl	reset_arg
 4372              	.LVL358:
2302:src/keys.c    **** 			} else if (base == RARG_ENG) {
 4373              		.loc 1 2302 5 view .LVU1299
2302:src/keys.c    **** 			} else if (base == RARG_ENG) {
 4374              		.loc 1 2302 12 is_stmt 0 view .LVU1300
 4375 0536 40F25510 		movw	r0, #341
 4376 053a B0E5     		b	.L359
 4377              	.LVL359:
 4378              	.L502:
2304:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
 4379              		.loc 1 2304 5 is_stmt 1 view .LVU1301
 4380 053c FFF7FEFF 		bl	reset_arg
 4381              	.LVL360:
2305:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 4382              		.loc 1 2305 5 view .LVU1302
2305:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 4383              		.loc 1 2305 12 is_stmt 0 view .LVU1303
 4384 0540 4FF4AB70 		mov	r0, #342
 4385 0544 ABE5     		b	.L359
 4386              	.LVL361:
 4387              	.L376:
2089:src/keys.c    **** 	  case regY_idx:
 4388              		.loc 1 2089 6 is_stmt 1 view .LVU1304
2089:src/keys.c    **** 	  case regY_idx:
 4389              		.loc 1 2089 13 is_stmt 0 view .LVU1305
 4390 0546 0120     		movs	r0, #1
 4391              	.LVL362:
2089:src/keys.c    **** 	  case regY_idx:
 4392              		.loc 1 2089 13 view .LVU1306
 4393 0548 ABE6     		b	.L485
 4394              	.L506:
 4395 054a 00BF     		.align	2
 4396              	.L505:
 4397 054c CDCCCCCC 		.word	-858993459
 4398              		.cfi_endproc
 4399              	.LFE42:
 4401              		.section	.text.cur_shift,"ax",%progbits
 4402              		.align	1
 4403              		.p2align 2,,3
 4404              		.global	cur_shift
 4405              		.syntax unified
 4406              		.thumb
 4407              		.thumb_func
 4408              		.fpu fpv4-sp-d16
 4410              	cur_shift:
ARM GAS  /tmp/ccK8gYGY.s 			page 154


 4411              	.LFB0:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4412              		.loc 1 96 29 is_stmt 1 view -0
 4413              		.cfi_startproc
 4414              		@ args = 0, pretend = 0, frame = 0
 4415              		@ frame_needed = 0, uses_anonymous_args = 0
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4416              		.loc 1 97 2 view .LVU1308
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4417              		.loc 1 96 29 is_stmt 0 view .LVU1309
 4418 0000 08B5     		push	{r3, lr}
 4419              		.cfi_def_cfa_offset 8
 4420              		.cfi_offset 3, -8
 4421              		.cfi_offset 14, -4
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4422              		.loc 1 97 18 view .LVU1310
 4423 0002 FFF7FEFF 		bl	shift_down
 4424              	.LVL363:
  98:src/keys.c    **** }
 4425              		.loc 1 98 2 is_stmt 1 view .LVU1311
  98:src/keys.c    **** }
 4426              		.loc 1 98 52 is_stmt 0 view .LVU1312
 4427 0006 08B9     		cbnz	r0, .L508
  98:src/keys.c    **** }
 4428              		.loc 1 98 52 discriminator 1 view .LVU1313
 4429 0008 014B     		ldr	r3, .L510
 4430 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 4431              	.LVL364:
 4432              	.L508:
  99:src/keys.c    **** 
 4433              		.loc 1 99 1 discriminator 4 view .LVU1314
 4434 000c 08BD     		pop	{r3, pc}
 4435              	.L511:
 4436 000e 00BF     		.align	2
 4437              	.L510:
 4438 0010 00000000 		.word	StateWhileOn
 4439              		.cfi_endproc
 4440              	.LFE0:
 4442              		.section	.text.reset_shift,"ax",%progbits
 4443              		.align	1
 4444              		.p2align 2,,3
 4445              		.global	reset_shift
 4446              		.syntax unified
 4447              		.thumb
 4448              		.thumb_func
 4449              		.fpu fpv4-sp-d16
 4451              	reset_shift:
 4452              	.LFB2:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 4453              		.loc 1 114 31 is_stmt 1 view -0
 4454              		.cfi_startproc
 4455              		@ args = 0, pretend = 0, frame = 0
 4456              		@ frame_needed = 0, uses_anonymous_args = 0
 115:src/keys.c    **** }
 4457              		.loc 1 115 2 view .LVU1316
 4458              	.LVL365:
 4459              	.LBB502:
ARM GAS  /tmp/ccK8gYGY.s 			page 155


 4460              	.LBI502:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 4461              		.loc 1 104 20 view .LVU1317
 4462              	.LBB503:
 105:src/keys.c    **** 	State2.shifts = shift;
 4463              		.loc 1 105 2 view .LVU1318
 4464              	.LBB504:
 4465              	.LBI504:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4466              		.loc 1 96 13 view .LVU1319
 4467              	.LBB505:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4468              		.loc 1 97 2 view .LVU1320
 4469              	.LBE505:
 4470              	.LBE504:
 4471              	.LBE503:
 4472              	.LBE502:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 4473              		.loc 1 114 31 is_stmt 0 view .LVU1321
 4474 0000 08B5     		push	{r3, lr}
 4475              		.cfi_def_cfa_offset 8
 4476              		.cfi_offset 3, -8
 4477              		.cfi_offset 14, -4
 4478              	.LBB509:
 4479              	.LBB508:
 4480              	.LBB507:
 4481              	.LBB506:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4482              		.loc 1 97 18 view .LVU1322
 4483 0002 FFF7FEFF 		bl	shift_down
 4484              	.LVL366:
  98:src/keys.c    **** }
 4485              		.loc 1 98 2 is_stmt 1 view .LVU1323
  98:src/keys.c    **** }
 4486              		.loc 1 98 52 is_stmt 0 view .LVU1324
 4487 0006 034B     		ldr	r3, .L517
 4488 0008 00B9     		cbnz	r0, .L513
 4489 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 4490              	.LVL367:
 4491              	.L513:
  98:src/keys.c    **** }
 4492              		.loc 1 98 52 view .LVU1325
 4493              	.LBE506:
 4494              	.LBE507:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4495              		.loc 1 106 2 is_stmt 1 view .LVU1326
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4496              		.loc 1 106 16 is_stmt 0 view .LVU1327
 4497 000c 0022     		movs	r2, #0
 4498 000e 1A74     		strb	r2, [r3, #16]
 108:src/keys.c    **** }
 4499              		.loc 1 108 2 is_stmt 1 view .LVU1328
 4500              	.LVL368:
 108:src/keys.c    **** }
 4501              		.loc 1 108 2 is_stmt 0 view .LVU1329
 4502              	.LBE508:
 4503              	.LBE509:
ARM GAS  /tmp/ccK8gYGY.s 			page 156


 116:src/keys.c    **** 
 4504              		.loc 1 116 1 view .LVU1330
 4505 0010 08BD     		pop	{r3, pc}
 4506              	.L518:
 4507 0012 00BF     		.align	2
 4508              	.L517:
 4509 0014 00000000 		.word	StateWhileOn
 4510              		.cfi_endproc
 4511              	.LFE2:
 4513              		.section	.text.keycode_to_row_column,"ax",%progbits
 4514              		.align	1
 4515              		.p2align 2,,3
 4516              		.global	keycode_to_row_column
 4517              		.syntax unified
 4518              		.thumb
 4519              		.thumb_func
 4520              		.fpu fpv4-sp-d16
 4522              	keycode_to_row_column:
 4523              	.LVL369:
 4524              	.LFB6:
 180:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 4525              		.loc 1 180 1 is_stmt 1 view -0
 4526              		.cfi_startproc
 4527              		@ args = 0, pretend = 0, frame = 0
 4528              		@ frame_needed = 0, uses_anonymous_args = 0
 4529              		@ link register save eliminated.
 181:src/keys.c    **** }
 4530              		.loc 1 181 2 view .LVU1332
 181:src/keys.c    **** }
 4531              		.loc 1 181 18 is_stmt 0 view .LVU1333
 4532 0000 074A     		ldr	r2, .L520
 4533 0002 82FB0032 		smull	r3, r2, r2, r0
 4534 0006 A2EBE073 		sub	r3, r2, r0, asr #31
 181:src/keys.c    **** }
 4535              		.loc 1 181 24 view .LVU1334
 4536 000a 03EB8302 		add	r2, r3, r3, lsl #2
 4537 000e 5200     		lsls	r2, r2, #1
 181:src/keys.c    **** }
 4538              		.loc 1 181 33 view .LVU1335
 4539 0010 03EB4303 		add	r3, r3, r3, lsl #1
 4540 0014 A0EB4303 		sub	r3, r0, r3, lsl #1
 181:src/keys.c    **** }
 4541              		.loc 1 181 12 view .LVU1336
 4542 0018 02F10B00 		add	r0, r2, #11
 4543              	.LVL370:
 182:src/keys.c    **** 
 4544              		.loc 1 182 1 view .LVU1337
 4545 001c 1844     		add	r0, r0, r3
 4546 001e 7047     		bx	lr
 4547              	.L521:
 4548              		.align	2
 4549              	.L520:
 4550 0020 ABAAAA2A 		.word	715827883
 4551              		.cfi_endproc
 4552              	.LFE6:
 4554              		.section	.text.row_column_to_keycode,"ax",%progbits
 4555              		.align	1
ARM GAS  /tmp/ccK8gYGY.s 			page 157


 4556              		.p2align 2,,3
 4557              		.global	row_column_to_keycode
 4558              		.syntax unified
 4559              		.thumb
 4560              		.thumb_func
 4561              		.fpu fpv4-sp-d16
 4563              	row_column_to_keycode:
 4564              	.LVL371:
 4565              	.LFB7:
 190:src/keys.c    **** 	int row = c / 10 - 1;
 4566              		.loc 1 190 1 is_stmt 1 view -0
 4567              		.cfi_startproc
 4568              		@ args = 0, pretend = 0, frame = 0
 4569              		@ frame_needed = 0, uses_anonymous_args = 0
 4570              		@ link register save eliminated.
 191:src/keys.c    **** 	int col = c % 10 - 1;
 4571              		.loc 1 191 2 view .LVU1339
 191:src/keys.c    **** 	int col = c % 10 - 1;
 4572              		.loc 1 191 14 is_stmt 0 view .LVU1340
 4573 0000 0E4A     		ldr	r2, .L528
 4574 0002 82FB0032 		smull	r3, r2, r2, r0
 4575 0006 C317     		asrs	r3, r0, #31
 4576 0008 C3EBA203 		rsb	r3, r3, r2, asr #2
 192:src/keys.c    **** 
 4577              		.loc 1 192 14 view .LVU1341
 4578 000c 03EB8302 		add	r2, r3, r3, lsl #2
 191:src/keys.c    **** 	int col = c % 10 - 1;
 4579              		.loc 1 191 6 view .LVU1342
 4580 0010 013B     		subs	r3, r3, #1
 4581              	.LVL372:
 192:src/keys.c    **** 
 4582              		.loc 1 192 2 is_stmt 1 view .LVU1343
 192:src/keys.c    **** 
 4583              		.loc 1 192 14 is_stmt 0 view .LVU1344
 4584 0012 A0EB4200 		sub	r0, r0, r2, lsl #1
 4585              	.LVL373:
 194:src/keys.c    **** 		return -1;
 4586              		.loc 1 194 5 view .LVU1345
 4587 0016 062B     		cmp	r3, #6
 192:src/keys.c    **** 
 4588              		.loc 1 192 6 view .LVU1346
 4589 0018 00F1FF30 		add	r0, r0, #-1
 4590              	.LVL374:
 194:src/keys.c    **** 		return -1;
 4591              		.loc 1 194 2 is_stmt 1 view .LVU1347
 194:src/keys.c    **** 		return -1;
 4592              		.loc 1 194 5 is_stmt 0 view .LVU1348
 4593 001c 0AD8     		bhi	.L527
 194:src/keys.c    **** 		return -1;
 4594              		.loc 1 194 36 discriminator 1 view .LVU1349
 4595 001e 012B     		cmp	r3, #1
 4596 0020 CCBF     		ite	gt
 4597 0022 0422     		movgt	r2, #4
 4598 0024 0522     		movle	r2, #5
 194:src/keys.c    **** 		return -1;
 4599              		.loc 1 194 25 discriminator 1 view .LVU1350
 4600 0026 8242     		cmp	r2, r0
ARM GAS  /tmp/ccK8gYGY.s 			page 158


 4601 0028 04DB     		blt	.L527
 196:src/keys.c    **** }
 4602              		.loc 1 196 2 is_stmt 1 view .LVU1351
 196:src/keys.c    **** }
 4603              		.loc 1 196 13 is_stmt 0 view .LVU1352
 4604 002a 03EB4303 		add	r3, r3, r3, lsl #1
 4605              	.LVL375:
 196:src/keys.c    **** }
 4606              		.loc 1 196 17 view .LVU1353
 4607 002e 00EB4300 		add	r0, r0, r3, lsl #1
 4608              	.LVL376:
 196:src/keys.c    **** }
 4609              		.loc 1 196 17 view .LVU1354
 4610 0032 7047     		bx	lr
 4611              	.LVL377:
 4612              	.L527:
 195:src/keys.c    **** 	return row * 6 + col;
 4613              		.loc 1 195 10 view .LVU1355
 4614 0034 4FF0FF30 		mov	r0, #-1
 4615              	.LVL378:
 197:src/keys.c    **** 
 4616              		.loc 1 197 1 view .LVU1356
 4617 0038 7047     		bx	lr
 4618              	.L529:
 4619 003a 00BF     		.align	2
 4620              	.L528:
 4621 003c 67666666 		.word	1717986919
 4622              		.cfi_endproc
 4623              	.LFE7:
 4625              		.section	.text.keycode_to_digit_or_register,"ax",%progbits
 4626              		.align	1
 4627              		.p2align 2,,3
 4628              		.global	keycode_to_digit_or_register
 4629              		.syntax unified
 4630              		.thumb
 4631              		.thumb_func
 4632              		.fpu fpv4-sp-d16
 4634              	keycode_to_digit_or_register:
 4635              	.LVL379:
 4636              	.LFB8:
 211:src/keys.c    ****   static const unsigned char map[] = {
 4637              		.loc 1 211 1 is_stmt 1 view -0
 4638              		.cfi_startproc
 4639              		@ args = 0, pretend = 0, frame = 0
 4640              		@ frame_needed = 0, uses_anonymous_args = 0
 4641              		@ link register save eliminated.
 212:src/keys.c    ****     // K00 - K05
 4642              		.loc 1 212 3 view .LVU1358
 234:src/keys.c    **** }
 4643              		.loc 1 234 3 view .LVU1359
 4644              	.LBB510:
 4645              	.LBI510:
 131:src/keys.c    **** {
 4646              		.loc 1 131 12 view .LVU1360
 4647              	.LBB511:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 4648              		.loc 1 133 2 view .LVU1361
ARM GAS  /tmp/ccK8gYGY.s 			page 159


 143:src/keys.c    **** }
 4649              		.loc 1 143 2 view .LVU1362
 143:src/keys.c    **** }
 4650              		.loc 1 143 23 is_stmt 0 view .LVU1363
 4651 0000 024B     		ldr	r3, .L531
 4652              	.LBE511:
 4653              	.LBE510:
 234:src/keys.c    **** }
 4654              		.loc 1 234 28 view .LVU1364
 4655 0002 034A     		ldr	r2, .L531+4
 4656              	.LBB513:
 4657              	.LBB512:
 143:src/keys.c    **** }
 4658              		.loc 1 143 23 view .LVU1365
 4659 0004 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 4660              	.LBE512:
 4661              	.LBE513:
 235:src/keys.c    **** #else
 4662              		.loc 1 235 1 view .LVU1366
 4663 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 4664              	.LVL380:
 235:src/keys.c    **** #else
 4665              		.loc 1 235 1 view .LVU1367
 4666 0008 7047     		bx	lr
 4667              	.L532:
 4668 000a 00BF     		.align	2
 4669              	.L531:
 4670 000c 00000000 		.word	.LANCHOR6
 4671 0010 00000000 		.word	.LANCHOR5
 4672              		.cfi_endproc
 4673              	.LFE8:
 4675              		.section	.text.init_state,"ax",%progbits
 4676              		.align	1
 4677              		.p2align 2,,3
 4678              		.global	init_state
 4679              		.syntax unified
 4680              		.thumb
 4681              		.thumb_func
 4682              		.fpu fpv4-sp-d16
 4684              	init_state:
 4685              	.LFB13:
 615:src/keys.c    **** #ifndef REALBUILD
 4686              		.loc 1 615 23 is_stmt 1 view -0
 4687              		.cfi_startproc
 4688              		@ args = 0, pretend = 0, frame = 0
 4689              		@ frame_needed = 0, uses_anonymous_args = 0
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4690              		.loc 1 617 2 view .LVU1369
 615:src/keys.c    **** #ifndef REALBUILD
 4691              		.loc 1 615 23 is_stmt 0 view .LVU1370
 4692 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 4693              		.cfi_def_cfa_offset 32
 4694              		.cfi_offset 3, -32
 4695              		.cfi_offset 4, -28
 4696              		.cfi_offset 5, -24
 4697              		.cfi_offset 6, -20
 4698              		.cfi_offset 7, -16
ARM GAS  /tmp/ccK8gYGY.s 			page 160


 4699              		.cfi_offset 8, -12
 4700              		.cfi_offset 9, -8
 4701              		.cfi_offset 14, -4
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4702              		.loc 1 617 25 view .LVU1371
 4703 0004 1B4C     		ldr	r4, .L535
 625:src/keys.c    **** 	// Removed: will clear any locals on power off
 4704              		.loc 1 625 10 view .LVU1372
 4705 0006 4FF00008 		mov	r8, #0
 629:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 4706              		.loc 1 629 2 view .LVU1373
 4707 000a 4146     		mov	r1, r8
 4708 000c 1422     		movs	r2, #20
 4709 000e 04F10800 		add	r0, r4, #8
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4710              		.loc 1 617 25 view .LVU1374
 4711 0012 257E     		ldrb	r5, [r4, #24]	@ zero_extendqisi2
 618:src/keys.c    **** #else
 4712              		.loc 1 618 25 view .LVU1375
 4713 0014 E67D     		ldrb	r6, [r4, #23]	@ zero_extendqisi2
 622:src/keys.c    **** 	int k = LastKey;
 4714              		.loc 1 622 10 view .LVU1376
 4715 0016 A77C     		ldrb	r7, [r4, #18]	@ zero_extendqisi2
 623:src/keys.c    **** 
 4716              		.loc 1 623 10 view .LVU1377
 4717 0018 94F91390 		ldrsb	r9, [r4, #19]
 625:src/keys.c    **** 	// Removed: will clear any locals on power off
 4718              		.loc 1 625 10 view .LVU1378
 4719 001c 84F81F80 		strb	r8, [r4, #31]
 629:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 4720              		.loc 1 629 2 view .LVU1379
 4721 0020 FFF7FEFF 		bl	xset
 4722              	.LVL381:
 667:src/keys.c    **** #endif
 4723              		.loc 1 667 2 view .LVU1380
 4724 0024 144B     		ldr	r3, .L535+4
 4725 0026 1B68     		ldr	r3, [r3]
 4726 0028 93F8AD27 		ldrb	r2, [r3, #1965]	@ zero_extendqisi2
 4727 002c 68F34102 		bfi	r2, r8, #1, #1
 4728 0030 83F8AD27 		strb	r2, [r3, #1965]
 675:src/keys.c    **** 	update_program_bounds(1);
 4729              		.loc 1 675 17 view .LVU1381
 4730 0034 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 674:src/keys.c    **** 	State2.runmode = 1;
 4731              		.loc 1 674 14 view .LVU1382
 4732 0036 0722     		movs	r2, #7
 675:src/keys.c    **** 	update_program_bounds(1);
 4733              		.loc 1 675 17 view .LVU1383
 4734 0038 43F04003 		orr	r3, r3, #64
 676:src/keys.c    **** 	set_lift();
 4735              		.loc 1 676 2 view .LVU1384
 4736 003c 0120     		movs	r0, #1
 674:src/keys.c    **** 	State2.runmode = 1;
 4737              		.loc 1 674 14 view .LVU1385
 4738 003e E273     		strb	r2, [r4, #15]
 675:src/keys.c    **** 	update_program_bounds(1);
 4739              		.loc 1 675 17 view .LVU1386
ARM GAS  /tmp/ccK8gYGY.s 			page 161


 4740 0040 A375     		strb	r3, [r4, #22]
 676:src/keys.c    **** 	set_lift();
 4741              		.loc 1 676 2 view .LVU1387
 4742 0042 FFF7FEFF 		bl	update_program_bounds
 4743              	.LVL382:
 677:src/keys.c    **** 
 4744              		.loc 1 677 2 view .LVU1388
 4745 0046 FFF7FEFF 		bl	set_lift
 4746              	.LVL383:
 684:src/keys.c    **** 	State2.flags = a;
 4747              		.loc 1 684 15 view .LVU1389
 4748 004a E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 685:src/keys.c    **** #else
 4749              		.loc 1 685 15 view .LVU1390
 4750 004c 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 689:src/keys.c    **** }
 4751              		.loc 1 689 15 view .LVU1391
 4752 004e 0B49     		ldr	r1, .L535+8
 682:src/keys.c    **** #ifndef REALBUILD
 4753              		.loc 1 682 10 view .LVU1392
 4754 0050 84F81390 		strb	r9, [r4, #19]
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4755              		.loc 1 617 25 view .LVU1393
 4756 0054 05F00105 		and	r5, r5, #1
 4757              	.LVL384:
 618:src/keys.c    **** #else
 4758              		.loc 1 618 2 is_stmt 1 view .LVU1394
 618:src/keys.c    **** #else
 4759              		.loc 1 618 25 is_stmt 0 view .LVU1395
 4760 0058 F609     		lsrs	r6, r6, #7
 4761              	.LVL385:
 622:src/keys.c    **** 	int k = LastKey;
 4762              		.loc 1 622 2 is_stmt 1 view .LVU1396
 622:src/keys.c    **** 	int k = LastKey;
 4763              		.loc 1 622 10 is_stmt 0 view .LVU1397
 4764 005a FFB2     		uxtb	r7, r7
 4765              	.LVL386:
 623:src/keys.c    **** 
 4766              		.loc 1 623 2 is_stmt 1 view .LVU1398
 625:src/keys.c    **** 	// Removed: will clear any locals on power off
 4767              		.loc 1 625 2 view .LVU1399
 629:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 4768              		.loc 1 629 2 view .LVU1400
 667:src/keys.c    **** #endif
 4769              		.loc 1 667 2 view .LVU1401
 674:src/keys.c    **** 	State2.runmode = 1;
 4770              		.loc 1 674 2 view .LVU1402
 675:src/keys.c    **** 	update_program_bounds(1);
 4771              		.loc 1 675 2 view .LVU1403
 676:src/keys.c    **** 	set_lift();
 4772              		.loc 1 676 2 view .LVU1404
 677:src/keys.c    **** 
 4773              		.loc 1 677 2 view .LVU1405
 681:src/keys.c    **** 	LastKey = k;
 4774              		.loc 1 681 2 view .LVU1406
 684:src/keys.c    **** 	State2.flags = a;
 4775              		.loc 1 684 15 is_stmt 0 view .LVU1407
ARM GAS  /tmp/ccK8gYGY.s 			page 162


 4776 005c 66F3C712 		bfi	r2, r6, #7, #1
 685:src/keys.c    **** #else
 4777              		.loc 1 685 15 view .LVU1408
 4778 0060 65F30003 		bfi	r3, r5, #0, #1
 689:src/keys.c    **** }
 4779              		.loc 1 689 15 view .LVU1409
 4780 0064 6420     		movs	r0, #100
 684:src/keys.c    **** 	State2.flags = a;
 4781              		.loc 1 684 15 view .LVU1410
 4782 0066 E275     		strb	r2, [r4, #23]
 685:src/keys.c    **** #else
 4783              		.loc 1 685 15 view .LVU1411
 4784 0068 2376     		strb	r3, [r4, #24]
 681:src/keys.c    **** 	LastKey = k;
 4785              		.loc 1 681 10 view .LVU1412
 4786 006a A774     		strb	r7, [r4, #18]
 682:src/keys.c    **** #ifndef REALBUILD
 4787              		.loc 1 682 2 is_stmt 1 view .LVU1413
 684:src/keys.c    **** 	State2.flags = a;
 4788              		.loc 1 684 2 view .LVU1414
 685:src/keys.c    **** #else
 4789              		.loc 1 685 2 view .LVU1415
 689:src/keys.c    **** }
 4790              		.loc 1 689 2 view .LVU1416
 689:src/keys.c    **** }
 4791              		.loc 1 689 15 is_stmt 0 view .LVU1417
 4792 006c 0860     		str	r0, [r1]
 690:src/keys.c    **** 
 4793              		.loc 1 690 1 view .LVU1418
 4794 006e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4795              	.LVL387:
 4796              	.L536:
 690:src/keys.c    **** 
 4797              		.loc 1 690 1 view .LVU1419
 4798 0072 00BF     		.align	2
 4799              	.L535:
 4800 0074 00000000 		.word	StateWhileOn
 4801 0078 00000000 		.word	main_ram
 4802 007c 00000000 		.word	ShowRegister
 4803              		.cfi_endproc
 4804              	.LFE13:
 4806              		.section	.text.process_cmplx,"ax",%progbits
 4807              		.align	1
 4808              		.p2align 2,,3
 4809              		.syntax unified
 4810              		.thumb
 4811              		.thumb_func
 4812              		.fpu fpv4-sp-d16
 4814              	process_cmplx:
 4815              	.LVL388:
 4816              	.LFB27:
1469:src/keys.c    **** #define _RARG   0xFF00
 4817              		.loc 1 1469 43 is_stmt 1 view -0
 4818              		.cfi_startproc
 4819              		@ args = 0, pretend = 0, frame = 0
 4820              		@ frame_needed = 0, uses_anonymous_args = 0
1474:src/keys.c    **** 		// Row 1
ARM GAS  /tmp/ccK8gYGY.s 			page 163


 4821              		.loc 1 1474 2 view .LVU1421
1525:src/keys.c    **** 	int lc = keycode_to_linear(c);
 4822              		.loc 1 1525 2 view .LVU1422
 4823              	.LBB514:
 4824              	.LBI514:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 4825              		.loc 1 114 13 view .LVU1423
 4826              	.LBE514:
 115:src/keys.c    **** }
 4827              		.loc 1 115 2 view .LVU1424
 4828              	.LBB531:
 4829              	.LBB515:
 4830              	.LBI515:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 4831              		.loc 1 104 20 view .LVU1425
 4832              	.LBB516:
 105:src/keys.c    **** 	State2.shifts = shift;
 4833              		.loc 1 105 2 view .LVU1426
 4834              	.LBB517:
 4835              	.LBI517:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4836              		.loc 1 96 13 view .LVU1427
 4837              	.LBB518:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4838              		.loc 1 97 2 view .LVU1428
 4839              	.LBE518:
 4840              	.LBE517:
 4841              	.LBE516:
 4842              	.LBE515:
 4843              	.LBE531:
1469:src/keys.c    **** #define _RARG   0xFF00
 4844              		.loc 1 1469 43 is_stmt 0 view .LVU1429
 4845 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4846              		.cfi_def_cfa_offset 24
 4847              		.cfi_offset 3, -24
 4848              		.cfi_offset 4, -20
 4849              		.cfi_offset 5, -16
 4850              		.cfi_offset 6, -12
 4851              		.cfi_offset 7, -8
 4852              		.cfi_offset 14, -4
1469:src/keys.c    **** #define _RARG   0xFF00
 4853              		.loc 1 1469 43 view .LVU1430
 4854 0002 0546     		mov	r5, r0
 4855              	.LBB532:
 4856              	.LBB527:
 4857              	.LBB523:
 4858              	.LBB521:
 4859              	.LBB519:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4860              		.loc 1 97 18 view .LVU1431
 4861 0004 FFF7FEFF 		bl	shift_down
 4862              	.LVL389:
  98:src/keys.c    **** }
 4863              		.loc 1 98 2 is_stmt 1 view .LVU1432
  98:src/keys.c    **** }
 4864              		.loc 1 98 52 is_stmt 0 view .LVU1433
 4865 0008 00B3     		cbz	r0, .L555
ARM GAS  /tmp/ccK8gYGY.s 			page 164


 4866 000a 2E4F     		ldr	r7, .L563
 4867 000c 0446     		mov	r4, r0
 4868              	.L538:
 4869              	.LVL390:
  98:src/keys.c    **** }
 4870              		.loc 1 98 52 view .LVU1434
 4871              	.LBE519:
 4872              	.LBE521:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4873              		.loc 1 106 2 is_stmt 1 view .LVU1435
 4874              	.LBE523:
 4875              	.LBE527:
 4876              	.LBE532:
 4877              	.LBB533:
 4878              	.LBB534:
 158:src/keys.c    **** }
 4879              		.loc 1 158 23 is_stmt 0 view .LVU1436
 4880 000e 2E4B     		ldr	r3, .L563+4
 4881              	.LBE534:
 4882              	.LBE533:
1527:src/keys.c    **** 	State2.cmplx = 0;
 4883              		.loc 1 1527 21 view .LVU1437
 4884 0010 2E48     		ldr	r0, .L563+8
 4885              	.LBB537:
 4886              	.LBB535:
 158:src/keys.c    **** }
 4887              		.loc 1 158 23 view .LVU1438
 4888 0012 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 4889              	.LBE535:
 4890              	.LBE537:
1528:src/keys.c    **** 
 4891              		.loc 1 1528 15 view .LVU1439
 4892 0014 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
1527:src/keys.c    **** 	State2.cmplx = 0;
 4893              		.loc 1 1527 21 view .LVU1440
 4894 0016 04EB8303 		add	r3, r4, r3, lsl #2
 4895              	.LBB538:
 4896              	.LBB528:
 4897              	.LBB524:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4898              		.loc 1 106 16 view .LVU1441
 4899 001a 0021     		movs	r1, #0
 4900              	.LBE524:
 4901              	.LBE528:
 4902              	.LBE538:
1527:src/keys.c    **** 	State2.cmplx = 0;
 4903              		.loc 1 1527 21 view .LVU1442
 4904 001c 30F81360 		ldrh	r6, [r0, r3, lsl #1]
 4905              	.LBB539:
 4906              	.LBB529:
 4907              	.LBB525:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4908              		.loc 1 106 16 view .LVU1443
 4909 0020 3974     		strb	r1, [r7, #16]
 108:src/keys.c    **** }
 4910              		.loc 1 108 2 is_stmt 1 view .LVU1444
 4911              	.LVL391:
ARM GAS  /tmp/ccK8gYGY.s 			page 165


 108:src/keys.c    **** }
 4912              		.loc 1 108 2 is_stmt 0 view .LVU1445
 4913              	.LBE525:
 4914              	.LBE529:
 4915              	.LBE539:
1526:src/keys.c    **** 	int op = op_map[lc][shift];
 4916              		.loc 1 1526 2 is_stmt 1 view .LVU1446
 4917              	.LBB540:
 4918              	.LBI533:
 146:src/keys.c    **** {
 4919              		.loc 1 146 12 view .LVU1447
 4920              	.LBB536:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 4921              		.loc 1 148 2 view .LVU1448
 158:src/keys.c    **** }
 4922              		.loc 1 158 2 view .LVU1449
 158:src/keys.c    **** }
 4923              		.loc 1 158 2 is_stmt 0 view .LVU1450
 4924              	.LBE536:
 4925              	.LBE540:
1527:src/keys.c    **** 	State2.cmplx = 0;
 4926              		.loc 1 1527 2 is_stmt 1 view .LVU1451
1528:src/keys.c    **** 
 4927              		.loc 1 1528 2 view .LVU1452
1530:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4928              		.loc 1 1530 5 is_stmt 0 view .LVU1453
 4929 0022 06F47F43 		and	r3, r6, #65280
1528:src/keys.c    **** 
 4930              		.loc 1 1528 15 view .LVU1454
 4931 0026 61F34102 		bfi	r2, r1, #1, #1
1530:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4932              		.loc 1 1530 5 view .LVU1455
 4933 002a B3F57F4F 		cmp	r3, #65280
1528:src/keys.c    **** 
 4934              		.loc 1 1528 15 view .LVU1456
 4935 002e 7A75     		strb	r2, [r7, #21]
1530:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4936              		.loc 1 1530 2 is_stmt 1 view .LVU1457
1530:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4937              		.loc 1 1530 5 is_stmt 0 view .LVU1458
 4938 0030 36D0     		beq	.L558
1534:src/keys.c    **** 		// HYP
 4939              		.loc 1 1534 2 is_stmt 1 view .LVU1459
1534:src/keys.c    **** 		// HYP
 4940              		.loc 1 1534 5 is_stmt 0 view .LVU1460
 4941 0032 DDB1     		cbz	r5, .L559
1544:src/keys.c    **** 		switch (c) {
 4942              		.loc 1 1544 2 is_stmt 1 view .LVU1461
1544:src/keys.c    **** 		switch (c) {
 4943              		.loc 1 1544 5 is_stmt 0 view .LVU1462
 4944 0034 2CB1     		cbz	r4, .L543
1545:src/keys.c    **** 		case K_CMPLX:
 4945              		.loc 1 1545 3 is_stmt 1 view .LVU1463
 4946 0036 242D     		cmp	r5, #36
 4947 0038 2CD0     		beq	.L544
 4948 003a 2D2D     		cmp	r5, #45
 4949 003c 23D0     		beq	.L545
ARM GAS  /tmp/ccK8gYGY.s 			page 166


 4950 003e 1F2D     		cmp	r5, #31
 4951 0040 0CD0     		beq	.L560
 4952              	.L543:
1569:src/keys.c    **** #else
 4953              		.loc 1 1569 2 view .LVU1464
 4954              	.LVL392:
 4955              	.LBB541:
 4956              	.LBI541:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 4957              		.loc 1 714 12 view .LVU1465
 4958              	.LBB542:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 4959              		.loc 1 715 2 view .LVU1466
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 4960              		.loc 1 715 6 is_stmt 0 view .LVU1467
 4961 0042 3312     		asrs	r3, r6, #8
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 4962              		.loc 1 715 5 view .LVU1468
 4963 0044 012B     		cmp	r3, #1
 4964 0046 04D0     		beq	.L561
 4965              	.LVL393:
 4966              	.L537:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 4967              		.loc 1 715 5 view .LVU1469
 4968              	.LBE542:
 4969              	.LBE541:
1577:src/keys.c    **** 
 4970              		.loc 1 1577 1 view .LVU1470
 4971 0048 3046     		mov	r0, r6
 4972 004a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4973              	.LVL394:
 4974              	.L555:
 4975              	.LBB548:
 4976              	.LBB530:
 4977              	.LBB526:
 4978              	.LBB522:
 4979              	.LBB520:
  98:src/keys.c    **** }
 4980              		.loc 1 98 52 view .LVU1471
 4981 004c 1D4F     		ldr	r7, .L563
 4982 004e 3C7C     		ldrb	r4, [r7, #16]	@ zero_extendqisi2
 4983 0050 DDE7     		b	.L538
 4984              	.LVL395:
 4985              	.L561:
  98:src/keys.c    **** }
 4986              		.loc 1 98 52 view .LVU1472
 4987              	.LBE520:
 4988              	.LBE522:
 4989              	.LBE526:
 4990              	.LBE530:
 4991              	.LBE548:
 4992              	.LBB549:
 4993              	.LBB543:
 4994 0052 3046     		mov	r0, r6
 4995              	.LBE543:
 4996              	.LBE549:
1577:src/keys.c    **** 
ARM GAS  /tmp/ccK8gYGY.s 			page 167


 4997              		.loc 1 1577 1 view .LVU1473
 4998 0054 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 4999              		.cfi_remember_state
 5000              		.cfi_restore 14
 5001              		.cfi_restore 7
 5002              		.cfi_restore 6
 5003              		.cfi_restore 5
 5004              		.cfi_restore 4
 5005              		.cfi_restore 3
 5006              		.cfi_def_cfa_offset 0
 5007              	.LVL396:
 5008              	.LBB550:
 5009              	.LBB544:
1577:src/keys.c    **** 
 5010              		.loc 1 1577 1 view .LVU1474
 5011 0058 FFF7FEBF 		b	check_confirm.part.0
 5012              	.LVL397:
 5013              	.L560:
 5014              		.cfi_restore_state
1577:src/keys.c    **** 
 5015              		.loc 1 1577 1 view .LVU1475
 5016              	.LBE544:
 5017              	.LBE550:
1551:src/keys.c    **** 				if (is_bad_cmdline())
 5018              		.loc 1 1551 4 is_stmt 1 view .LVU1476
1551:src/keys.c    **** 				if (is_bad_cmdline())
 5019              		.loc 1 1551 7 is_stmt 0 view .LVU1477
 5020 005c 332E     		cmp	r6, #51
 5021 005e 02D0     		beq	.L557
1552:src/keys.c    **** 					return STATE_UNFINISHED;
 5022              		.loc 1 1552 5 is_stmt 1 view .LVU1478
1552:src/keys.c    **** 					return STATE_UNFINISHED;
 5023              		.loc 1 1552 9 is_stmt 0 view .LVU1479
 5024 0060 FFF7FEFF 		bl	is_bad_cmdline
 5025              	.LVL398:
1552:src/keys.c    **** 					return STATE_UNFINISHED;
 5026              		.loc 1 1552 8 view .LVU1480
 5027 0064 28B3     		cbz	r0, .L562
 5028              	.L557:
1541:src/keys.c    **** 	}
 5029              		.loc 1 1541 3 is_stmt 1 view .LVU1481
1541:src/keys.c    **** 	}
 5030              		.loc 1 1541 10 is_stmt 0 view .LVU1482
 5031 0066 3326     		movs	r6, #51
 5032              	.LVL399:
1577:src/keys.c    **** 
 5033              		.loc 1 1577 1 view .LVU1483
 5034 0068 3046     		mov	r0, r6
 5035 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5036              	.LVL400:
 5037              	.L559:
1536:src/keys.c    **** 		//		print_debug(100,1);
 5038              		.loc 1 1536 3 is_stmt 1 view .LVU1484
 5039 006c FFF7FEFF 		bl	process_cmdline_set_lift
 5040              	.LVL401:
1538:src/keys.c    **** 		State2.dot = op;
 5041              		.loc 1 1538 3 view .LVU1485
ARM GAS  /tmp/ccK8gYGY.s 			page 168


1539:src/keys.c    **** 		State2.cmplx = 1;
 5042              		.loc 1 1539 3 view .LVU1486
1540:src/keys.c    **** 		return STATE_UNFINISHED;
 5043              		.loc 1 1540 3 view .LVU1487
1540:src/keys.c    **** 		return STATE_UNFINISHED;
 5044              		.loc 1 1540 16 is_stmt 0 view .LVU1488
 5045 0070 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 5046 0072 06F00103 		and	r3, r6, #1
 5047 0076 9B01     		lsls	r3, r3, #6
 5048 0078 43F02203 		orr	r3, r3, #34
 5049 007c 22F06202 		bic	r2, r2, #98
 5050 0080 1343     		orrs	r3, r3, r2
 5051 0082 7B75     		strb	r3, [r7, #21]
 5052 0084 EFE7     		b	.L557
 5053              	.L545:
1547:src/keys.c    **** 			break;
 5054              		.loc 1 1547 4 is_stmt 1 view .LVU1489
 5055              	.LVL402:
 5056              	.LBB551:
 5057              	.LBI551:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 5058              		.loc 1 104 20 view .LVU1490
 5059              	.LBB552:
 105:src/keys.c    **** 	State2.shifts = shift;
 5060              		.loc 1 105 2 view .LVU1491
 5061              	.LBB553:
 5062              	.LBI553:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 5063              		.loc 1 96 13 view .LVU1492
 5064              	.LBB554:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5065              		.loc 1 97 2 view .LVU1493
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5066              		.loc 1 97 18 is_stmt 0 view .LVU1494
 5067 0086 FFF7FEFF 		bl	shift_down
 5068              	.LVL403:
  98:src/keys.c    **** }
 5069              		.loc 1 98 2 is_stmt 1 view .LVU1495
 5070              	.LBE554:
 5071              	.LBE553:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5072              		.loc 1 106 2 view .LVU1496
 5073              	.LBE552:
 5074              	.LBE551:
 5075              	.LBB556:
 5076              	.LBB545:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5077              		.loc 1 715 6 is_stmt 0 view .LVU1497
 5078 008a 3312     		asrs	r3, r6, #8
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5079              		.loc 1 715 5 view .LVU1498
 5080 008c 012B     		cmp	r3, #1
 5081              	.LBE545:
 5082              	.LBE556:
 5083              	.LBB557:
 5084              	.LBB555:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
ARM GAS  /tmp/ccK8gYGY.s 			page 169


 5085              		.loc 1 106 16 view .LVU1499
 5086 008e 3C74     		strb	r4, [r7, #16]
 108:src/keys.c    **** }
 5087              		.loc 1 108 2 is_stmt 1 view .LVU1500
 5088              	.LVL404:
 108:src/keys.c    **** }
 5089              		.loc 1 108 2 is_stmt 0 view .LVU1501
 5090              	.LBE555:
 5091              	.LBE557:
1569:src/keys.c    **** #else
 5092              		.loc 1 1569 2 is_stmt 1 view .LVU1502
 5093              	.LBB558:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 5094              		.loc 1 714 12 view .LVU1503
 5095              	.LBB546:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5096              		.loc 1 715 2 view .LVU1504
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5097              		.loc 1 715 5 is_stmt 0 view .LVU1505
 5098 0090 DAD1     		bne	.L537
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5099              		.loc 1 715 5 view .LVU1506
 5100 0092 DEE7     		b	.L561
 5101              	.LVL405:
 5102              	.L544:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5103              		.loc 1 715 5 view .LVU1507
 5104              	.LBE546:
 5105              	.LBE558:
1561:src/keys.c    **** 			break;
 5106              		.loc 1 1561 4 is_stmt 1 view .LVU1508
 5107 0094 FFF7FEFF 		bl	init_state
 5108              	.LVL406:
1562:src/keys.c    **** 
 5109              		.loc 1 1562 4 view .LVU1509
1569:src/keys.c    **** #else
 5110              		.loc 1 1569 2 view .LVU1510
 5111              	.LBB559:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 5112              		.loc 1 714 12 view .LVU1511
 5113              	.LBB547:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5114              		.loc 1 715 2 view .LVU1512
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5115              		.loc 1 715 6 is_stmt 0 view .LVU1513
 5116 0098 3312     		asrs	r3, r6, #8
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5117              		.loc 1 715 5 view .LVU1514
 5118 009a 012B     		cmp	r3, #1
 5119 009c D4D1     		bne	.L537
 5120 009e D8E7     		b	.L561
 5121              	.LVL407:
 5122              	.L558:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5123              		.loc 1 715 5 view .LVU1515
 5124              	.LBE547:
 5125              	.LBE559:
ARM GAS  /tmp/ccK8gYGY.s 			page 170


1531:src/keys.c    **** 		return STATE_UNFINISHED;
 5126              		.loc 1 1531 3 is_stmt 1 view .LVU1516
 5127              	.LBB560:
 5128              	.LBI560:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 5129              		.loc 1 552 13 view .LVU1517
 5130              	.LBB561:
 553:src/keys.c    **** 		return;
 5131              		.loc 1 553 2 view .LVU1518
 553:src/keys.c    **** 		return;
 5132              		.loc 1 553 6 is_stmt 0 view .LVU1519
 5133 00a0 FFF7FEFF 		bl	is_bad_cmdline
 5134              	.LVL408:
 553:src/keys.c    **** 		return;
 5135              		.loc 1 553 5 view .LVU1520
 5136 00a4 0028     		cmp	r0, #0
 5137 00a6 DED1     		bne	.L557
 5138 00a8 F0B2     		uxtb	r0, r6
 5139 00aa FFF7FEFF 		bl	init_arg.part.0
 5140              	.LVL409:
 5141              	.LBE561:
 5142              	.LBE560:
1532:src/keys.c    **** 	}
 5143              		.loc 1 1532 10 view .LVU1521
 5144 00ae 3326     		movs	r6, #51
 5145              	.LVL410:
1532:src/keys.c    **** 	}
 5146              		.loc 1 1532 10 view .LVU1522
 5147 00b0 CAE7     		b	.L537
 5148              	.LVL411:
 5149              	.L562:
1554:src/keys.c    **** 				State2.cmplx = 1;
 5150              		.loc 1 1554 5 is_stmt 1 view .LVU1523
 5151 00b2 FFF7FEFF 		bl	process_cmdline_set_lift
 5152              	.LVL412:
1555:src/keys.c    **** 				State2.test = op;
 5153              		.loc 1 1555 5 view .LVU1524
1555:src/keys.c    **** 				State2.test = op;
 5154              		.loc 1 1555 18 is_stmt 0 view .LVU1525
 5155 00b6 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
1556:src/keys.c    **** 			}
 5156              		.loc 1 1556 17 view .LVU1526
 5157 00b8 FE73     		strb	r6, [r7, #15]
1555:src/keys.c    **** 				State2.test = op;
 5158              		.loc 1 1555 18 view .LVU1527
 5159 00ba 43F00203 		orr	r3, r3, #2
 5160 00be 7B75     		strb	r3, [r7, #21]
1556:src/keys.c    **** 			}
 5161              		.loc 1 1556 5 is_stmt 1 view .LVU1528
1558:src/keys.c    **** 
 5162              		.loc 1 1558 11 is_stmt 0 view .LVU1529
 5163 00c0 3326     		movs	r6, #51
 5164              	.LVL413:
1558:src/keys.c    **** 
 5165              		.loc 1 1558 11 view .LVU1530
 5166 00c2 C1E7     		b	.L537
 5167              	.L564:
ARM GAS  /tmp/ccK8gYGY.s 			page 171


 5168              		.align	2
 5169              	.L563:
 5170 00c4 00000000 		.word	StateWhileOn
 5171 00c8 00000000 		.word	.LANCHOR1
 5172 00cc 00000000 		.word	.LANCHOR7
 5173              		.cfi_endproc
 5174              	.LFE27:
 5176              		.section	.text.soft_init_state,"ax",%progbits
 5177              		.align	1
 5178              		.p2align 2,,3
 5179              		.global	soft_init_state
 5180              		.syntax unified
 5181              		.thumb
 5182              		.thumb_func
 5183              		.fpu fpv4-sp-d16
 5185              	soft_init_state:
 5186              	.LFB14:
 692:src/keys.c    **** 	int soft;
 5187              		.loc 1 692 28 is_stmt 1 view -0
 5188              		.cfi_startproc
 5189              		@ args = 0, pretend = 0, frame = 0
 5190              		@ frame_needed = 0, uses_anonymous_args = 0
 693:src/keys.c    **** 	unsigned int runmode;
 5191              		.loc 1 693 2 view .LVU1532
 694:src/keys.c    **** 	unsigned int alphas;
 5192              		.loc 1 694 2 view .LVU1533
 695:src/keys.c    **** 
 5193              		.loc 1 695 2 view .LVU1534
 697:src/keys.c    **** 		CmdLineLength = 0;
 5194              		.loc 1 697 2 view .LVU1535
 692:src/keys.c    **** 	int soft;
 5195              		.loc 1 692 28 is_stmt 0 view .LVU1536
 5196 0000 38B5     		push	{r3, r4, r5, lr}
 5197              		.cfi_def_cfa_offset 16
 5198              		.cfi_offset 3, -16
 5199              		.cfi_offset 4, -12
 5200              		.cfi_offset 5, -8
 5201              		.cfi_offset 14, -4
 697:src/keys.c    **** 		CmdLineLength = 0;
 5202              		.loc 1 697 6 view .LVU1537
 5203 0002 114C     		ldr	r4, .L572
 697:src/keys.c    **** 		CmdLineLength = 0;
 5204              		.loc 1 697 5 view .LVU1538
 5205 0004 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 5206 0006 D3B9     		cbnz	r3, .L571
 703:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 5207              		.loc 1 703 2 is_stmt 1 view .LVU1539
 704:src/keys.c    **** 	runmode = State2.runmode;
 5208              		.loc 1 704 17 is_stmt 0 view .LVU1540
 5209 0008 104A     		ldr	r2, .L572+4
 5210 000a 6369     		ldr	r3, [r4, #20]
 704:src/keys.c    **** 	runmode = State2.runmode;
 5211              		.loc 1 704 60 view .LVU1541
 5212 000c 1A42     		tst	r2, r3
 5213 000e 0AD0     		beq	.L568
 5214              	.L569:
 5215              	.LVL414:
ARM GAS  /tmp/ccK8gYGY.s 			page 172


 705:src/keys.c    **** 	alphas = State2.alphas;
 5216              		.loc 1 705 2 is_stmt 1 view .LVU1542
 706:src/keys.c    **** 	init_state();
 5217              		.loc 1 706 17 is_stmt 0 view .LVU1543
 5218 0010 A57D     		ldrb	r5, [r4, #22]	@ zero_extendqisi2
 5219              	.LVL415:
 706:src/keys.c    **** 	init_state();
 5220              		.loc 1 706 2 is_stmt 1 view .LVU1544
 707:src/keys.c    **** 	if (soft) {
 5221              		.loc 1 707 2 view .LVU1545
 5222 0012 FFF7FEFF 		bl	init_state
 5223              	.LVL416:
 708:src/keys.c    **** 		State2.runmode = runmode;
 5224              		.loc 1 708 2 view .LVU1546
 709:src/keys.c    **** 		State2.alphas = alphas;
 5225              		.loc 1 709 3 view .LVU1547
 710:src/keys.c    **** 	}
 5226              		.loc 1 710 3 view .LVU1548
 710:src/keys.c    **** 	}
 5227              		.loc 1 710 17 is_stmt 0 view .LVU1549
 5228 0016 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 5229 0018 05F04805 		and	r5, r5, #72
 5230 001c 23F04803 		bic	r3, r3, #72
 5231 0020 2B43     		orrs	r3, r3, r5
 5232 0022 A375     		strb	r3, [r4, #22]
 712:src/keys.c    **** 
 5233              		.loc 1 712 1 view .LVU1550
 5234 0024 38BD     		pop	{r3, r4, r5, pc}
 5235              	.LVL417:
 5236              	.L568:
 704:src/keys.c    **** 	runmode = State2.runmode;
 5237              		.loc 1 704 60 discriminator 2 view .LVU1551
 5238 0026 E368     		ldr	r3, [r4, #12]
 5239 0028 23F47F03 		bic	r3, r3, #16711680
 5240 002c 23F47F43 		bic	r3, r3, #65280
 5241 0030 B3F1E06F 		cmp	r3, #117440512
 5242 0034 ECD1     		bne	.L569
 5243              	.LVL418:
 705:src/keys.c    **** 	alphas = State2.alphas;
 5244              		.loc 1 705 2 is_stmt 1 view .LVU1552
 706:src/keys.c    **** 	init_state();
 5245              		.loc 1 706 2 view .LVU1553
 707:src/keys.c    **** 	if (soft) {
 5246              		.loc 1 707 2 view .LVU1554
 712:src/keys.c    **** 
 5247              		.loc 1 712 1 is_stmt 0 view .LVU1555
 5248 0036 BDE83840 		pop	{r3, r4, r5, lr}
 5249              		.cfi_remember_state
 5250              		.cfi_restore 14
 5251              		.cfi_restore 5
 5252              		.cfi_restore 4
 5253              		.cfi_restore 3
 5254              		.cfi_def_cfa_offset 0
 707:src/keys.c    **** 	if (soft) {
 5255              		.loc 1 707 2 view .LVU1556
 5256 003a FFF7FEBF 		b	init_state
 5257              	.LVL419:
ARM GAS  /tmp/ccK8gYGY.s 			page 173


 5258              	.L571:
 5259              		.cfi_restore_state
 5260              	.LBB564:
 5261              	.LBI564:
 692:src/keys.c    **** 	int soft;
 5262              		.loc 1 692 6 is_stmt 1 view .LVU1557
 5263              	.LBB565:
 698:src/keys.c    **** 		CmdLineEex = 0;
 5264              		.loc 1 698 3 view .LVU1558
 699:src/keys.c    **** 		CmdLineDot = 0;
 5265              		.loc 1 699 3 view .LVU1559
 700:src/keys.c    **** 		return;
 5266              		.loc 1 700 3 view .LVU1560
 698:src/keys.c    **** 		CmdLineEex = 0;
 5267              		.loc 1 698 17 is_stmt 0 view .LVU1561
 5268 003e 0023     		movs	r3, #0
 5269 0040 A383     		strh	r3, [r4, #28]	@ movhi
 700:src/keys.c    **** 		return;
 5270              		.loc 1 700 14 view .LVU1562
 5271 0042 A377     		strb	r3, [r4, #30]
 701:src/keys.c    **** 	}
 5272              		.loc 1 701 3 is_stmt 1 view .LVU1563
 5273              	.LBE565:
 5274              	.LBE564:
 712:src/keys.c    **** 
 5275              		.loc 1 712 1 is_stmt 0 view .LVU1564
 5276 0044 38BD     		pop	{r3, r4, r5, pc}
 5277              	.L573:
 5278 0046 00BF     		.align	2
 5279              	.L572:
 5280 0048 00000000 		.word	StateWhileOn
 5281 004c 002F2004 		.word	69218048
 5282              		.cfi_endproc
 5283              	.LFE14:
 5285              		.section	.text.finish_cpx_entry,"ax",%progbits
 5286              		.align	1
 5287              		.p2align 2,,3
 5288              		.global	finish_cpx_entry
 5289              		.syntax unified
 5290              		.thumb
 5291              		.thumb_func
 5292              		.fpu fpv4-sp-d16
 5294              	finish_cpx_entry:
 5295              	.LVL420:
 5296              	.LFB23:
1207:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5297              		.loc 1 1207 36 is_stmt 1 view -0
 5298              		.cfi_startproc
 5299              		@ args = 0, pretend = 0, frame = 0
 5300              		@ frame_needed = 0, uses_anonymous_args = 0
1212:src/keys.c    **** 
 5301              		.loc 1 1212 2 view .LVU1566
1207:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5302              		.loc 1 1207 36 is_stmt 0 view .LVU1567
 5303 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5304              		.cfi_def_cfa_offset 24
 5305              		.cfi_offset 3, -24
ARM GAS  /tmp/ccK8gYGY.s 			page 174


 5306              		.cfi_offset 4, -20
 5307              		.cfi_offset 5, -16
 5308              		.cfi_offset 6, -12
 5309              		.cfi_offset 7, -8
 5310              		.cfi_offset 14, -4
1212:src/keys.c    **** 
 5311              		.loc 1 1212 10 view .LVU1568
 5312 0002 2E4E     		ldr	r6, .L590
 5313 0004 3368     		ldr	r3, [r6]
1212:src/keys.c    **** 
 5314              		.loc 1 1212 7 view .LVU1569
 5315 0006 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
1212:src/keys.c    **** 
 5316              		.loc 1 1212 5 view .LVU1570
 5317 000a 12F0060F 		tst	r2, #6
 5318 000e 16D0     		beq	.L574
1224:src/keys.c    **** 	if (IMAG_FLAG) swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 5319              		.loc 1 1224 2 is_stmt 1 view .LVU1571
 5320              	.LBB572:
 5321              	.LBI572:
1200:src/keys.c    **** 	if (CmdLineLength) {
 5322              		.loc 1 1200 13 view .LVU1572
 5323              	.LBB573:
1201:src/keys.c    **** 		State2.state_lift = 0;
 5324              		.loc 1 1201 2 view .LVU1573
1201:src/keys.c    **** 		State2.state_lift = 0;
 5325              		.loc 1 1201 6 is_stmt 0 view .LVU1574
 5326 0010 2B4C     		ldr	r4, .L590+4
1201:src/keys.c    **** 		State2.state_lift = 0;
 5327              		.loc 1 1201 5 view .LVU1575
 5328 0012 217F     		ldrb	r1, [r4, #28]	@ zero_extendqisi2
 5329 0014 0546     		mov	r5, r0
 5330 0016 01BB     		cbnz	r1, .L587
 5331              	.LBE573:
 5332              	.LBE572:
1225:src/keys.c    **** 	CLEAR_REAL;
 5333              		.loc 1 1225 2 is_stmt 1 view .LVU1576
1225:src/keys.c    **** 	CLEAR_REAL;
 5334              		.loc 1 1225 5 is_stmt 0 view .LVU1577
 5335 0018 5207     		lsls	r2, r2, #29
 5336 001a 11D4     		bmi	.L588
 5337              	.LVL421:
 5338              	.L578:
1226:src/keys.c    **** 	CLEAR_IMAG;
 5339              		.loc 1 1226 2 is_stmt 1 view .LVU1578
1227:src/keys.c    **** 
 5340              		.loc 1 1227 2 view .LVU1579
1226:src/keys.c    **** 	CLEAR_IMAG;
 5341              		.loc 1 1226 2 is_stmt 0 view .LVU1580
 5342 001c 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
 5343 0020 22F00602 		bic	r2, r2, #6
 5344 0024 83F8AC27 		strb	r2, [r3, #1964]
1229:src/keys.c    **** 
 5345              		.loc 1 1229 2 is_stmt 1 view .LVU1581
1229:src/keys.c    **** 
 5346              		.loc 1 1229 20 is_stmt 0 view .LVU1582
 5347 0028 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
ARM GAS  /tmp/ccK8gYGY.s 			page 175


 5348 002a 65F38612 		bfi	r2, r5, #6, #1
 5349              	.LVL422:
1229:src/keys.c    **** 
 5350              		.loc 1 1229 20 view .LVU1583
 5351 002e E275     		strb	r2, [r4, #23]
1231:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
 5352              		.loc 1 1231 2 is_stmt 1 view .LVU1584
1231:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
 5353              		.loc 1 1231 21 is_stmt 0 view .LVU1585
 5354 0030 B3F8AC37 		ldrh	r3, [r3, #1964]
1231:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
 5355              		.loc 1 1231 5 view .LVU1586
 5356 0034 03F4C073 		and	r3, r3, #384
 5357 0038 B3F5C07F 		cmp	r3, #384
 5358 003c 19D0     		beq	.L589
 5359              	.L574:
1243:src/keys.c    **** 
 5360              		.loc 1 1243 1 view .LVU1587
 5361 003e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5362              	.LVL423:
 5363              	.L588:
1225:src/keys.c    **** 	CLEAR_REAL;
 5364              		.loc 1 1225 17 is_stmt 1 discriminator 1 view .LVU1588
 5365 0040 6420     		movs	r0, #100
 5366 0042 FFF7FEFF 		bl	get_reg_n
 5367              	.LVL424:
 5368 0046 0746     		mov	r7, r0
 5369 0048 6520     		movs	r0, #101
 5370 004a FFF7FEFF 		bl	get_reg_n
 5371              	.LVL425:
 5372 004e 0146     		mov	r1, r0
 5373 0050 3846     		mov	r0, r7
 5374 0052 FFF7FEFF 		bl	swap_reg
 5375              	.LVL426:
 5376 0056 3368     		ldr	r3, [r6]
 5377 0058 E0E7     		b	.L578
 5378              	.LVL427:
 5379              	.L587:
 5380              	.LBB575:
 5381              	.LBB574:
1202:src/keys.c    **** 		process_cmdline();
 5382              		.loc 1 1202 3 view .LVU1589
1202:src/keys.c    **** 		process_cmdline();
 5383              		.loc 1 1202 21 is_stmt 0 view .LVU1590
 5384 005a E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 5385 005c 6FF38613 		bfc	r3, #6, #1
 5386 0060 E375     		strb	r3, [r4, #23]
1203:src/keys.c    **** 	}
 5387              		.loc 1 1203 3 is_stmt 1 view .LVU1591
 5388 0062 FFF7FEFF 		bl	process_cmdline
 5389              	.LVL428:
1203:src/keys.c    **** 	}
 5390              		.loc 1 1203 3 is_stmt 0 view .LVU1592
 5391 0066 3368     		ldr	r3, [r6]
 5392 0068 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
 5393              	.LBE574:
 5394              	.LBE575:
ARM GAS  /tmp/ccK8gYGY.s 			page 176


1225:src/keys.c    **** 	CLEAR_REAL;
 5395              		.loc 1 1225 2 is_stmt 1 view .LVU1593
1225:src/keys.c    **** 	CLEAR_REAL;
 5396              		.loc 1 1225 5 is_stmt 0 view .LVU1594
 5397 006c 5207     		lsls	r2, r2, #29
 5398 006e D5D5     		bpl	.L578
 5399 0070 E6E7     		b	.L588
 5400              	.LVL429:
 5401              	.L589:
 5402              	.LBB576:
 5403              	.LBI576:
1207:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5404              		.loc 1 1207 6 is_stmt 1 view .LVU1595
 5405              	.LBB577:
1233:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5406              		.loc 1 1233 3 view .LVU1596
 5407 0072 6E20     		movs	r0, #110
 5408 0074 FFF7FEFF 		bl	get_reg_n
 5409              	.LVL430:
 5410 0078 0446     		mov	r4, r0
1233:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5411              		.loc 1 1233 33 is_stmt 0 view .LVU1597
 5412 007a 6420     		movs	r0, #100
 5413 007c FFF7FEFF 		bl	get_reg_n
 5414              	.LVL431:
 5415 0080 0146     		mov	r1, r0
1233:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5416              		.loc 1 1233 3 view .LVU1598
 5417 0082 2046     		mov	r0, r4
 5418 0084 FFF7FEFF 		bl	copyreg
 5419              	.LVL432:
1234:src/keys.c    **** 		//call p2r
 5420              		.loc 1 1234 3 is_stmt 1 view .LVU1599
 5421 0088 6F20     		movs	r0, #111
 5422 008a FFF7FEFF 		bl	get_reg_n
 5423              	.LVL433:
 5424 008e 0446     		mov	r4, r0
1234:src/keys.c    **** 		//call p2r
 5425              		.loc 1 1234 33 is_stmt 0 view .LVU1600
 5426 0090 6520     		movs	r0, #101
 5427 0092 FFF7FEFF 		bl	get_reg_n
 5428              	.LVL434:
 5429 0096 0146     		mov	r1, r0
1234:src/keys.c    **** 		//call p2r
 5430              		.loc 1 1234 3 view .LVU1601
 5431 0098 2046     		mov	r0, r4
 5432 009a FFF7FEFF 		bl	copyreg
 5433              	.LVL435:
1236:src/keys.c    **** 		op_p2r(OP_NOP); // x, y now contain rectangular form
 5434              		.loc 1 1236 18 is_stmt 1 view .LVU1602
1237:src/keys.c    **** #ifdef RP_PREFIX
 5435              		.loc 1 1237 3 view .LVU1603
 5436 009e 0020     		movs	r0, #0
 5437 00a0 FFF7FEFF 		bl	op_p2r
 5438              	.LVL436:
1239:src/keys.c    **** #endif
 5439              		.loc 1 1239 3 view .LVU1604
ARM GAS  /tmp/ccK8gYGY.s 			page 177


1239:src/keys.c    **** #endif
 5440              		.loc 1 1239 15 is_stmt 0 view .LVU1605
 5441 00a4 074A     		ldr	r2, .L590+8
1241:src/keys.c    **** 	}
 5442              		.loc 1 1241 3 view .LVU1606
 5443 00a6 3368     		ldr	r3, [r6]
1239:src/keys.c    **** #endif
 5444              		.loc 1 1239 15 view .LVU1607
 5445 00a8 0121     		movs	r1, #1
 5446 00aa 1160     		str	r1, [r2]
1241:src/keys.c    **** 	}
 5447              		.loc 1 1241 3 is_stmt 1 view .LVU1608
 5448 00ac 93F8AD27 		ldrb	r2, [r3, #1965]	@ zero_extendqisi2
 5449 00b0 6FF30002 		bfc	r2, #0, #1
 5450 00b4 83F8AD27 		strb	r2, [r3, #1965]
 5451              	.LVL437:
1241:src/keys.c    **** 	}
 5452              		.loc 1 1241 3 is_stmt 0 view .LVU1609
 5453              	.LBE577:
 5454              	.LBE576:
1243:src/keys.c    **** 
 5455              		.loc 1 1243 1 view .LVU1610
 5456 00b8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5457              	.L591:
 5458 00ba 00BF     		.align	2
 5459              	.L590:
 5460 00bc 00000000 		.word	main_ram
 5461 00c0 00000000 		.word	StateWhileOn
 5462 00c4 00000000 		.word	RectPolConv
 5463              		.cfi_endproc
 5464              	.LFE23:
 5466              		.section	.text.stack_begin,"ax",%progbits
 5467              		.align	1
 5468              		.p2align 2,,3
 5469              		.global	stack_begin
 5470              		.syntax unified
 5471              		.thumb
 5472              		.thumb_func
 5473              		.fpu fpv4-sp-d16
 5475              	stack_begin:
 5476              	.LVL438:
 5477              	.LFB25:
1264:src/keys.c    **** 	// Lifts stack if required and stores displaced registers; 
 5478              		.loc 1 1264 33 is_stmt 1 view -0
 5479              		.cfi_startproc
 5480              		@ args = 0, pretend = 0, frame = 0
 5481              		@ frame_needed = 0, uses_anonymous_args = 0
1267:src/keys.c    **** 	if ( State2.state_lift ){
 5482              		.loc 1 1267 2 view .LVU1612
1264:src/keys.c    **** 	// Lifts stack if required and stores displaced registers; 
 5483              		.loc 1 1264 33 is_stmt 0 view .LVU1613
 5484 0000 38B5     		push	{r3, r4, r5, lr}
 5485              		.cfi_def_cfa_offset 16
 5486              		.cfi_offset 3, -16
 5487              		.cfi_offset 4, -12
 5488              		.cfi_offset 5, -8
 5489              		.cfi_offset 14, -4
ARM GAS  /tmp/ccK8gYGY.s 			page 178


1267:src/keys.c    **** 	if ( State2.state_lift ){
 5490              		.loc 1 1267 2 view .LVU1614
 5491 0002 2C4B     		ldr	r3, .L599
1268:src/keys.c    **** 		SET_INIT_LIFT;
 5492              		.loc 1 1268 7 view .LVU1615
 5493 0004 2C4C     		ldr	r4, .L599+4
1267:src/keys.c    **** 	if ( State2.state_lift ){
 5494              		.loc 1 1267 2 view .LVU1616
 5495 0006 1B68     		ldr	r3, [r3]
 5496 0008 93F8AD27 		ldrb	r2, [r3, #1965]	@ zero_extendqisi2
 5497 000c 42F00102 		orr	r2, r2, #1
 5498 0010 83F8AD27 		strb	r2, [r3, #1965]
1268:src/keys.c    **** 		SET_INIT_LIFT;
 5499              		.loc 1 1268 2 is_stmt 1 view .LVU1617
1268:src/keys.c    **** 		SET_INIT_LIFT;
 5500              		.loc 1 1268 7 is_stmt 0 view .LVU1618
 5501 0014 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
1268:src/keys.c    **** 		SET_INIT_LIFT;
 5502              		.loc 1 1268 5 view .LVU1619
 5503 0016 12F04002 		ands	r2, r2, #64
 5504 001a 26D0     		beq	.L593
1269:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regC_idx));
 5505              		.loc 1 1269 3 is_stmt 1 view .LVU1620
 5506 001c 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
 5507 0020 42F01002 		orr	r2, r2, #16
 5508 0024 83F8AC27 		strb	r2, [r3, #1964]
1270:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5509              		.loc 1 1270 3 view .LVU1621
 5510 0028 6E20     		movs	r0, #110
 5511              	.LVL439:
1270:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5512              		.loc 1 1270 3 is_stmt 0 view .LVU1622
 5513 002a FFF7FEFF 		bl	get_reg_n
 5514              	.LVL440:
 5515 002e 0546     		mov	r5, r0
1270:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5516              		.loc 1 1270 33 view .LVU1623
 5517 0030 6A20     		movs	r0, #106
 5518 0032 FFF7FEFF 		bl	get_reg_n
 5519              	.LVL441:
 5520 0036 0146     		mov	r1, r0
1270:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5521              		.loc 1 1270 3 view .LVU1624
 5522 0038 2846     		mov	r0, r5
 5523 003a FFF7FEFF 		bl	copyreg
 5524              	.LVL442:
1271:src/keys.c    **** 		lift();
 5525              		.loc 1 1271 3 is_stmt 1 view .LVU1625
 5526 003e 6F20     		movs	r0, #111
 5527 0040 FFF7FEFF 		bl	get_reg_n
 5528              	.LVL443:
 5529 0044 0546     		mov	r5, r0
1271:src/keys.c    **** 		lift();
 5530              		.loc 1 1271 33 is_stmt 0 view .LVU1626
 5531 0046 6B20     		movs	r0, #107
 5532 0048 FFF7FEFF 		bl	get_reg_n
 5533              	.LVL444:
ARM GAS  /tmp/ccK8gYGY.s 			page 179


 5534 004c 0146     		mov	r1, r0
1271:src/keys.c    **** 		lift();
 5535              		.loc 1 1271 3 view .LVU1627
 5536 004e 2846     		mov	r0, r5
 5537 0050 FFF7FEFF 		bl	copyreg
 5538              	.LVL445:
1272:src/keys.c    **** 		zero_X();
 5539              		.loc 1 1272 3 is_stmt 1 view .LVU1628
 5540 0054 FFF7FEFF 		bl	lift
 5541              	.LVL446:
1273:src/keys.c    **** 		lift();
 5542              		.loc 1 1273 3 view .LVU1629
 5543 0058 FFF7FEFF 		bl	zero_X
 5544              	.LVL447:
1274:src/keys.c    **** 		State2.state_lift = 0;
 5545              		.loc 1 1274 3 view .LVU1630
 5546 005c FFF7FEFF 		bl	lift
 5547              	.LVL448:
1275:src/keys.c    **** 	}
 5548              		.loc 1 1275 3 view .LVU1631
1275:src/keys.c    **** 	}
 5549              		.loc 1 1275 21 is_stmt 0 view .LVU1632
 5550 0060 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 5551 0062 6FF38613 		bfc	r3, #6, #1
 5552 0066 E375     		strb	r3, [r4, #23]
 5553              	.L592:
1284:src/keys.c    **** 
 5554              		.loc 1 1284 1 view .LVU1633
 5555 0068 38BD     		pop	{r3, r4, r5, pc}
 5556              	.LVL449:
 5557              	.L593:
1278:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regX_idx));
 5558              		.loc 1 1278 3 is_stmt 1 view .LVU1634
 5559 006a 93F8AC17 		ldrb	r1, [r3, #1964]	@ zero_extendqisi2
 5560 006e 62F30411 		bfi	r1, r2, #4, #1
 5561 0072 83F8AC17 		strb	r1, [r3, #1964]
1279:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5562              		.loc 1 1279 3 view .LVU1635
 5563 0076 0546     		mov	r5, r0
 5564 0078 6E20     		movs	r0, #110
 5565              	.LVL450:
1279:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5566              		.loc 1 1279 3 is_stmt 0 view .LVU1636
 5567 007a FFF7FEFF 		bl	get_reg_n
 5568              	.LVL451:
 5569 007e 0446     		mov	r4, r0
1279:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5570              		.loc 1 1279 33 view .LVU1637
 5571 0080 6420     		movs	r0, #100
 5572 0082 FFF7FEFF 		bl	get_reg_n
 5573              	.LVL452:
 5574 0086 0146     		mov	r1, r0
1279:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5575              		.loc 1 1279 3 view .LVU1638
 5576 0088 2046     		mov	r0, r4
 5577 008a FFF7FEFF 		bl	copyreg
 5578              	.LVL453:
ARM GAS  /tmp/ccK8gYGY.s 			page 180


1280:src/keys.c    **** 		zero_X();
 5579              		.loc 1 1280 3 is_stmt 1 view .LVU1639
 5580 008e 6F20     		movs	r0, #111
 5581 0090 FFF7FEFF 		bl	get_reg_n
 5582              	.LVL454:
 5583 0094 0446     		mov	r4, r0
1280:src/keys.c    **** 		zero_X();
 5584              		.loc 1 1280 33 is_stmt 0 view .LVU1640
 5585 0096 6520     		movs	r0, #101
 5586 0098 FFF7FEFF 		bl	get_reg_n
 5587              	.LVL455:
 5588 009c 0146     		mov	r1, r0
1280:src/keys.c    **** 		zero_X();
 5589              		.loc 1 1280 3 view .LVU1641
 5590 009e 2046     		mov	r0, r4
 5591 00a0 FFF7FEFF 		bl	copyreg
 5592              	.LVL456:
1281:src/keys.c    **** 		if ( zero_y ) zero_Y();
 5593              		.loc 1 1281 3 is_stmt 1 view .LVU1642
 5594 00a4 FFF7FEFF 		bl	zero_X
 5595              	.LVL457:
1282:src/keys.c    **** 	}
 5596              		.loc 1 1282 3 view .LVU1643
1282:src/keys.c    **** 	}
 5597              		.loc 1 1282 6 is_stmt 0 view .LVU1644
 5598 00a8 002D     		cmp	r5, #0
 5599 00aa DDD0     		beq	.L592
1282:src/keys.c    **** 	}
 5600              		.loc 1 1282 17 is_stmt 1 discriminator 1 view .LVU1645
1284:src/keys.c    **** 
 5601              		.loc 1 1284 1 is_stmt 0 discriminator 1 view .LVU1646
 5602 00ac BDE83840 		pop	{r3, r4, r5, lr}
 5603              		.cfi_restore 14
 5604              		.cfi_restore 5
 5605              		.cfi_restore 4
 5606              		.cfi_restore 3
 5607              		.cfi_def_cfa_offset 0
 5608              	.LVL458:
1282:src/keys.c    **** 	}
 5609              		.loc 1 1282 17 discriminator 1 view .LVU1647
 5610 00b0 FFF7FEBF 		b	zero_Y
 5611              	.LVL459:
 5612              	.L600:
 5613              		.align	2
 5614              	.L599:
 5615 00b4 00000000 		.word	main_ram
 5616 00b8 00000000 		.word	StateWhileOn
 5617              		.cfi_endproc
 5618              	.LFE25:
 5620              		.section	.text.current_catalogue_max,"ax",%progbits
 5621              		.align	1
 5622              		.p2align 2,,3
 5623              		.global	current_catalogue_max
 5624              		.syntax unified
 5625              		.thumb
 5626              		.thumb_func
 5627              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccK8gYGY.s 			page 181


 5629              	current_catalogue_max:
 5630              	.LFB44:
2477:src/keys.c    **** 	// A quick table of catalogue sizes
 5631              		.loc 1 2477 33 is_stmt 1 view -0
 5632              		.cfi_startproc
 5633              		@ args = 0, pretend = 0, frame = 0
 5634              		@ frame_needed = 0, uses_anonymous_args = 0
 5635              		@ link register save eliminated.
2480:src/keys.c    **** 	{
 5636              		.loc 1 2480 2 view .LVU1649
2511:src/keys.c    **** #endif
 5637              		.loc 1 2511 2 view .LVU1650
2511:src/keys.c    **** #endif
 5638              		.loc 1 2511 31 is_stmt 0 view .LVU1651
 5639 0000 024B     		ldr	r3, .L602
2511:src/keys.c    **** #endif
 5640              		.loc 1 2511 24 view .LVU1652
 5641 0002 034A     		ldr	r2, .L602+4
2511:src/keys.c    **** #endif
 5642              		.loc 1 2511 31 view .LVU1653
 5643 0004 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2513:src/keys.c    **** 
 5644              		.loc 1 2513 1 view .LVU1654
 5645 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 5646 0008 7047     		bx	lr
 5647              	.L603:
 5648 000a 00BF     		.align	2
 5649              	.L602:
 5650 000c 00000000 		.word	StateWhileOn
 5651 0010 00000000 		.word	.LANCHOR8
 5652              		.cfi_endproc
 5653              	.LFE44:
 5655              		.section	.text.current_catalogue,"ax",%progbits
 5656              		.align	1
 5657              		.p2align 2,,3
 5658              		.global	current_catalogue
 5659              		.syntax unified
 5660              		.thumb
 5661              		.thumb_func
 5662              		.fpu fpv4-sp-d16
 5664              	current_catalogue:
 5665              	.LVL460:
 5666              	.LFB46:
2526:src/keys.c    **** 	// A quick table of catalogue tables
 5667              		.loc 1 2526 33 is_stmt 1 view -0
 5668              		.cfi_startproc
 5669              		@ args = 0, pretend = 0, frame = 0
 5670              		@ frame_needed = 0, uses_anonymous_args = 0
 5671              		@ link register save eliminated.
2529:src/keys.c    **** 	{
 5672              		.loc 1 2529 2 view .LVU1656
2556:src/keys.c    **** 	unsigned int c = State2.catalogue;
 5673              		.loc 1 2556 2 view .LVU1657
2557:src/keys.c    **** 	int m, i;
 5674              		.loc 1 2557 2 view .LVU1658
2557:src/keys.c    **** 	int m, i;
 5675              		.loc 1 2557 25 is_stmt 0 view .LVU1659
ARM GAS  /tmp/ccK8gYGY.s 			page 182


 5676 0000 314A     		ldr	r2, .L631
2557:src/keys.c    **** 	int m, i;
 5677              		.loc 1 2557 15 view .LVU1660
 5678 0002 937B     		ldrb	r3, [r2, #14]	@ zero_extendqisi2
 5679              	.LVL461:
2558:src/keys.c    **** 	unsigned p, q;
 5680              		.loc 1 2558 2 is_stmt 1 view .LVU1661
2559:src/keys.c    **** 
 5681              		.loc 1 2559 2 view .LVU1662
2561:src/keys.c    **** 		if (n == OP_ZERO)
 5682              		.loc 1 2561 2 view .LVU1663
2561:src/keys.c    **** 		if (n == OP_ZERO)
 5683              		.loc 1 2561 5 is_stmt 0 view .LVU1664
 5684 0004 102B     		cmp	r3, #16
 5685 0006 39D0     		beq	.L625
2566:src/keys.c    **** 		if (n == OP_ZERO)
 5686              		.loc 1 2566 2 is_stmt 1 view .LVU1665
2566:src/keys.c    **** 		if (n == OP_ZERO)
 5687              		.loc 1 2566 5 is_stmt 0 view .LVU1666
 5688 0008 112B     		cmp	r3, #17
 5689 000a 32D0     		beq	.L626
2571:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 5690              		.loc 1 2571 2 is_stmt 1 view .LVU1667
2571:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 5691              		.loc 1 2571 5 is_stmt 0 view .LVU1668
 5692 000c 122B     		cmp	r3, #18
 5693 000e 45D0     		beq	.L627
2584:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 5694              		.loc 1 2584 2 is_stmt 1 view .LVU1669
2584:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 5695              		.loc 1 2584 5 is_stmt 0 view .LVU1670
 5696 0010 0E2B     		cmp	r3, #14
 5697 0012 38D0     		beq	.L628
2587:src/keys.c    **** 
 5698              		.loc 1 2587 3 is_stmt 1 view .LVU1671
2587:src/keys.c    **** 
 5699              		.loc 1 2587 7 is_stmt 0 view .LVU1672
 5700 0014 2D4A     		ldr	r2, .L631+4
2589:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5701              		.loc 1 2589 35 view .LVU1673
 5702 0016 A3F10B01 		sub	r1, r3, #11
2589:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5703              		.loc 1 2589 5 view .LVU1674
 5704 001a 0429     		cmp	r1, #4
2587:src/keys.c    **** 
 5705              		.loc 1 2587 7 view .LVU1675
 5706 001c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 5707              	.LVL462:
2589:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5708              		.loc 1 2589 2 is_stmt 1 view .LVU1676
2589:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5709              		.loc 1 2589 5 is_stmt 0 view .LVU1677
 5710 0020 38D9     		bls	.L611
2592:src/keys.c    **** 		return OP_NIL | OP_NOP;
 5711              		.loc 1 2592 2 is_stmt 1 view .LVU1678
2592:src/keys.c    **** 		return OP_NIL | OP_NOP;
 5712              		.loc 1 2592 5 is_stmt 0 view .LVU1679
ARM GAS  /tmp/ccK8gYGY.s 			page 183


 5713 0022 142B     		cmp	r3, #20
 5714 0024 4DD8     		bhi	.L619
2596:src/keys.c    **** 	p = cat[0];
 5715              		.loc 1 2596 2 is_stmt 1 view .LVU1680
2526:src/keys.c    **** 	// A quick table of catalogue tables
 5716              		.loc 1 2526 33 is_stmt 0 view .LVU1681
 5717 0026 10B4     		push	{r4}
 5718              		.cfi_def_cfa_offset 4
 5719              		.cfi_offset 4, -4
2596:src/keys.c    **** 	p = cat[0];
 5720              		.loc 1 2596 11 view .LVU1682
 5721 0028 00EBA001 		add	r1, r0, r0, asr #2
2596:src/keys.c    **** 	p = cat[0];
 5722              		.loc 1 2596 6 view .LVU1683
 5723 002c 5318     		adds	r3, r2, r1
 5724              	.LVL463:
2597:src/keys.c    **** 	q = cat[1];
 5725              		.loc 1 2597 2 is_stmt 1 view .LVU1684
2598:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 5726              		.loc 1 2598 2 view .LVU1685
2599:src/keys.c    **** 
 5727              		.loc 1 2599 2 view .LVU1686
2599:src/keys.c    **** 
 5728              		.loc 1 2599 35 is_stmt 0 view .LVU1687
 5729 002e 4000     		lsls	r0, r0, #1
 5730              	.LVL464:
2597:src/keys.c    **** 	q = cat[1];
 5731              		.loc 1 2597 4 view .LVU1688
 5732 0030 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 5733              	.LVL465:
2598:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 5734              		.loc 1 2598 4 view .LVU1689
 5735 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5736              	.LVL466:
2598:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 5737              		.loc 1 2598 4 view .LVU1690
 5738 0034 2649     		ldr	r1, .L631+8
 5739              	.LVL467:
2599:src/keys.c    **** 
 5740              		.loc 1 2599 54 view .LVU1691
 5741 0036 C443     		mvns	r4, r0
2599:src/keys.c    **** 
 5742              		.loc 1 2599 35 view .LVU1692
 5743 0038 00F00600 		and	r0, r0, #6
2599:src/keys.c    **** 
 5744              		.loc 1 2599 54 view .LVU1693
 5745 003c 04F00604 		and	r4, r4, #6
2599:src/keys.c    **** 
 5746              		.loc 1 2599 24 view .LVU1694
 5747 0040 0230     		adds	r0, r0, #2
2599:src/keys.c    **** 
 5748              		.loc 1 2599 48 view .LVU1695
 5749 0042 E340     		lsrs	r3, r3, r4
 5750              	.LVL468:
2599:src/keys.c    **** 
 5751              		.loc 1 2599 18 view .LVU1696
 5752 0044 02FA00F0 		lsl	r0, r2, r0
ARM GAS  /tmp/ccK8gYGY.s 			page 184


2599:src/keys.c    **** 
 5753              		.loc 1 2599 43 view .LVU1697
 5754 0048 1843     		orrs	r0, r0, r3
2599:src/keys.c    **** 
 5755              		.loc 1 2599 4 view .LVU1698
 5756 004a C0F30903 		ubfx	r3, r0, #0, #10
 5757              	.LVL469:
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5758              		.loc 1 2602 2 is_stmt 1 view .LVU1699
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5759              		.loc 1 2602 12 view .LVU1700
2599:src/keys.c    **** 
 5760              		.loc 1 2599 4 is_stmt 0 view .LVU1701
 5761 004e 3422     		movs	r2, #52
 5762              	.LVL470:
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5763              		.loc 1 2602 8 view .LVU1702
 5764 0050 0020     		movs	r0, #0
 5765 0052 01E0     		b	.L615
 5766              	.LVL471:
 5767              	.L630:
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5768              		.loc 1 2602 8 view .LVU1703
 5769 0054 11F8012B 		ldrb	r2, [r1], #1	@ zero_extendqisi2
 5770              	.LVL472:
 5771              	.L615:
2603:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 5772              		.loc 1 2603 3 is_stmt 1 view .LVU1704
2605:src/keys.c    **** 	}
 5773              		.loc 1 2605 3 view .LVU1705
2603:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 5774              		.loc 1 2603 6 is_stmt 0 view .LVU1706
 5775 0058 9A42     		cmp	r2, r3
 5776 005a 2FDC     		bgt	.L629
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5777              		.loc 1 2602 25 discriminator 2 view .LVU1707
 5778 005c 0130     		adds	r0, r0, #1
 5779              	.LVL473:
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5780              		.loc 1 2602 2 discriminator 2 view .LVU1708
 5781 005e 0728     		cmp	r0, #7
2605:src/keys.c    **** 	}
 5782              		.loc 1 2605 5 discriminator 2 view .LVU1709
 5783 0060 A3EB0203 		sub	r3, r3, r2
 5784              	.LVL474:
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5785              		.loc 1 2602 24 is_stmt 1 discriminator 2 view .LVU1710
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5786              		.loc 1 2602 12 discriminator 2 view .LVU1711
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5787              		.loc 1 2602 2 is_stmt 0 discriminator 2 view .LVU1712
 5788 0064 F6D1     		bne	.L630
2607:src/keys.c    **** }
 5789              		.loc 1 2607 2 is_stmt 1 view .LVU1713
2607:src/keys.c    **** }
 5790              		.loc 1 2607 9 is_stmt 0 view .LVU1714
 5791 0066 03F12000 		add	r0, r3, #32
ARM GAS  /tmp/ccK8gYGY.s 			page 185


 5792              	.LVL475:
2607:src/keys.c    **** }
 5793              		.loc 1 2607 9 view .LVU1715
 5794 006a 0002     		lsls	r0, r0, #8
 5795              	.L604:
2608:src/keys.c    **** 
 5796              		.loc 1 2608 1 view .LVU1716
 5797 006c 5DF8044B 		ldr	r4, [sp], #4
 5798              		.cfi_restore 4
 5799              		.cfi_def_cfa_offset 0
 5800 0070 7047     		bx	lr
 5801              	.LVL476:
 5802              	.L626:
2567:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 5803              		.loc 1 2567 3 is_stmt 1 view .LVU1717
2567:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 5804              		.loc 1 2567 6 is_stmt 0 view .LVU1718
 5805 0072 4B28     		cmp	r0, #75
 5806 0074 1FD0     		beq	.L617
2569:src/keys.c    **** 	}
 5807              		.loc 1 2569 3 is_stmt 1 view .LVU1719
2569:src/keys.c    **** 	}
 5808              		.loc 1 2569 10 is_stmt 0 view .LVU1720
 5809 0076 40F40450 		orr	r0, r0, #8448
 5810              	.LVL477:
2569:src/keys.c    **** 	}
 5811              		.loc 1 2569 10 view .LVU1721
 5812 007a 7047     		bx	lr
 5813              	.LVL478:
 5814              	.L625:
2562:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 5815              		.loc 1 2562 3 is_stmt 1 view .LVU1722
2562:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 5816              		.loc 1 2562 6 is_stmt 0 view .LVU1723
 5817 007c 4B28     		cmp	r0, #75
 5818 007e 17D0     		beq	.L616
2564:src/keys.c    **** 	}
 5819              		.loc 1 2564 3 is_stmt 1 view .LVU1724
2564:src/keys.c    **** 	}
 5820              		.loc 1 2564 10 is_stmt 0 view .LVU1725
 5821 0080 40F40050 		orr	r0, r0, #8192
 5822              	.LVL479:
2564:src/keys.c    **** 	}
 5823              		.loc 1 2564 10 view .LVU1726
 5824 0084 7047     		bx	lr
 5825              	.LVL480:
 5826              	.L628:
2584:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 5827              		.loc 1 2584 35 discriminator 1 view .LVU1727
 5828 0086 917D     		ldrb	r1, [r2, #22]	@ zero_extendqisi2
2585:src/keys.c    **** 	else
 5829              		.loc 1 2585 7 discriminator 1 view .LVU1728
 5830 0088 124B     		ldr	r3, .L631+12
 5831              	.LVL481:
2585:src/keys.c    **** 	else
 5832              		.loc 1 2585 7 discriminator 1 view .LVU1729
 5833 008a 134A     		ldr	r2, .L631+16
ARM GAS  /tmp/ccK8gYGY.s 			page 186


 5834              	.LVL482:
2585:src/keys.c    **** 	else
 5835              		.loc 1 2585 7 discriminator 1 view .LVU1730
 5836 008c 11F0100F 		tst	r1, #16
 5837 0090 18BF     		it	ne
 5838 0092 1A46     		movne	r2, r3
 5839              	.L611:
 5840              	.LVL483:
2590:src/keys.c    **** 	}
 5841              		.loc 1 2590 3 is_stmt 1 view .LVU1731
 5842              	.LBB578:
 5843              	.LBI578:
2519:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
 5844              		.loc 1 2519 15 view .LVU1732
 5845              	.LBB579:
2520:src/keys.c    **** }
 5846              		.loc 1 2520 2 view .LVU1733
2520:src/keys.c    **** }
 5847              		.loc 1 2520 9 is_stmt 0 view .LVU1734
 5848 0094 105C     		ldrb	r0, [r2, r0]	@ zero_extendqisi2
 5849              	.LVL484:
2520:src/keys.c    **** }
 5850              		.loc 1 2520 9 view .LVU1735
 5851 0096 40F48840 		orr	r0, r0, #17408
 5852              	.LVL485:
2520:src/keys.c    **** }
 5853              		.loc 1 2520 9 view .LVU1736
 5854              	.LBE579:
 5855              	.LBE578:
2590:src/keys.c    **** 	}
 5856              		.loc 1 2590 10 view .LVU1737
 5857 009a 7047     		bx	lr
 5858              	.LVL486:
 5859              	.L627:
 5860              	.LBB580:
2572:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 5861              		.loc 1 2572 3 is_stmt 1 view .LVU1738
2572:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 5862              		.loc 1 2572 33 is_stmt 0 view .LVU1739
 5863 009c 0F4B     		ldr	r3, .L631+20
 5864              	.LVL487:
2572:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 5865              		.loc 1 2572 13 view .LVU1740
 5866 009e 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 5867              	.LVL488:
2573:src/keys.c    **** 			// Monadic conversion routine
 5868              		.loc 1 2573 3 is_stmt 1 view .LVU1741
2573:src/keys.c    **** 			// Monadic conversion routine
 5869              		.loc 1 2573 6 is_stmt 0 view .LVU1742
 5870 00a0 5728     		cmp	r0, #87
2575:src/keys.c    **** 		else
 5871              		.loc 1 2575 4 is_stmt 1 view .LVU1743
2575:src/keys.c    **** 		else
 5872              		.loc 1 2575 25 is_stmt 0 view .LVU1744
 5873 00a2 C6BF     		itte	gt
 5874 00a4 5838     		subgt	r0, r0, #88
 5875              	.LVL489:
ARM GAS  /tmp/ccK8gYGY.s 			page 187


2575:src/keys.c    **** 		else
 5876              		.loc 1 2575 18 view .LVU1745
 5877 00a6 40F40070 		orrgt	r0, r0, #512
2577:src/keys.c    **** 	}
 5878              		.loc 1 2577 4 is_stmt 1 view .LVU1746
2577:src/keys.c    **** 	}
 5879              		.loc 1 2577 11 is_stmt 0 view .LVU1747
 5880 00aa 40F40C40 		orrle	r0, r0, #35840
 5881 00ae 7047     		bx	lr
 5882              	.LVL490:
 5883              	.L616:
2577:src/keys.c    **** 	}
 5884              		.loc 1 2577 11 view .LVU1748
 5885              	.LBE580:
2563:src/keys.c    **** 		return CONST(n);
 5886              		.loc 1 2563 11 view .LVU1749
 5887 00b0 4FF42740 		mov	r0, #42752
 5888              	.LVL491:
2563:src/keys.c    **** 		return CONST(n);
 5889              		.loc 1 2563 11 view .LVU1750
 5890 00b4 7047     		bx	lr
 5891              	.LVL492:
 5892              	.L617:
2568:src/keys.c    **** 		return CONST_CMPLX(n);
 5893              		.loc 1 2568 11 view .LVU1751
 5894 00b6 4FF42840 		mov	r0, #43008
 5895              	.LVL493:
2568:src/keys.c    **** 		return CONST_CMPLX(n);
 5896              		.loc 1 2568 11 view .LVU1752
 5897 00ba 7047     		bx	lr
 5898              	.LVL494:
 5899              	.L629:
 5900              		.cfi_def_cfa_offset 4
 5901              		.cfi_offset 4, -4
2604:src/keys.c    **** 		m -= opcode_breaks[i];
 5902              		.loc 1 2604 4 is_stmt 1 view .LVU1753
2604:src/keys.c    **** 		m -= opcode_breaks[i];
 5903              		.loc 1 2604 29 is_stmt 0 view .LVU1754
 5904 00bc 03EB0020 		add	r0, r3, r0, lsl #8
 5905              	.LVL495:
2604:src/keys.c    **** 		m -= opcode_breaks[i];
 5906              		.loc 1 2604 29 view .LVU1755
 5907 00c0 D4E7     		b	.L604
 5908              	.LVL496:
 5909              	.L619:
 5910              		.cfi_def_cfa_offset 0
 5911              		.cfi_restore 4
2593:src/keys.c    **** 
 5912              		.loc 1 2593 10 view .LVU1756
 5913 00c2 4FF48070 		mov	r0, #256
 5914              	.LVL497:
2608:src/keys.c    **** 
 5915              		.loc 1 2608 1 view .LVU1757
 5916 00c6 7047     		bx	lr
 5917              	.L632:
 5918              		.align	2
 5919              	.L631:
ARM GAS  /tmp/ccK8gYGY.s 			page 188


 5920 00c8 00000000 		.word	StateWhileOn
 5921 00cc 00000000 		.word	.LANCHOR12
 5922 00d0 01000000 		.word	.LANCHOR13+1
 5923 00d4 00000000 		.word	.LANCHOR10
 5924 00d8 00000000 		.word	.LANCHOR9
 5925 00dc 00000000 		.word	.LANCHOR11
 5926              		.cfi_endproc
 5927              	.LFE46:
 5929              		.section	.text.process_catalogue,"ax",%progbits
 5930              		.align	1
 5931              		.p2align 2,,3
 5932              		.syntax unified
 5933              		.thumb
 5934              		.thumb_func
 5935              		.fpu fpv4-sp-d16
 5937              	process_catalogue:
 5938              	.LVL498:
 5939              	.LFB48:
2622:src/keys.c    ****    int pos = State.catpos;
 5940              		.loc 1 2622 93 is_stmt 1 view -0
 5941              		.cfi_startproc
 5942              		@ args = 0, pretend = 0, frame = 16
 5943              		@ frame_needed = 0, uses_anonymous_args = 0
2622:src/keys.c    ****    int pos = State.catpos;
 5944              		.loc 1 2622 93 is_stmt 0 view .LVU1759
 5945 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5946              		.cfi_def_cfa_offset 36
 5947              		.cfi_offset 4, -36
 5948              		.cfi_offset 5, -32
 5949              		.cfi_offset 6, -28
 5950              		.cfi_offset 7, -24
 5951              		.cfi_offset 8, -20
 5952              		.cfi_offset 9, -16
 5953              		.cfi_offset 10, -12
 5954              		.cfi_offset 11, -8
 5955              		.cfi_offset 14, -4
2623:src/keys.c    ****    int ch;
 5956              		.loc 1 2623 14 view .LVU1760
 5957 0004 DFF8EC92 		ldr	r9, .L747+24
 5958              	.LBB581:
 5959              	.LBB582:
2511:src/keys.c    **** #endif
 5960              		.loc 1 2511 31 view .LVU1761
 5961 0008 B44F     		ldr	r7, .L747
 5962              	.LBE582:
 5963              	.LBE581:
2623:src/keys.c    ****    int ch;
 5964              		.loc 1 2623 14 view .LVU1762
 5965 000a D9F80040 		ldr	r4, [r9]
 5966              	.LBB587:
 5967              	.LBB583:
2511:src/keys.c    **** #endif
 5968              		.loc 1 2511 31 view .LVU1763
 5969 000e 97F80EA0 		ldrb	r10, [r7, #14]	@ zero_extendqisi2
 5970              	.LBE583:
 5971              	.LBE587:
2623:src/keys.c    ****    int ch;
ARM GAS  /tmp/ccK8gYGY.s 			page 189


 5972              		.loc 1 2623 19 view .LVU1764
 5973 0012 B4F8DC57 		ldrh	r5, [r4, #2012]
 5974              	.LBB588:
 5975              	.LBB584:
2511:src/keys.c    **** #endif
 5976              		.loc 1 2511 24 view .LVU1765
 5977 0016 B24B     		ldr	r3, .L747+4
 5978              	.LBE584:
 5979              	.LBE588:
2623:src/keys.c    ****    int ch;
 5980              		.loc 1 2623 4 is_stmt 1 view .LVU1766
2622:src/keys.c    ****    int pos = State.catpos;
 5981              		.loc 1 2622 93 is_stmt 0 view .LVU1767
 5982 0018 85B0     		sub	sp, sp, #20
 5983              		.cfi_def_cfa_offset 56
 5984              	.LBB589:
 5985              	.LBB585:
2511:src/keys.c    **** #endif
 5986              		.loc 1 2511 24 view .LVU1768
 5987 001a 13F80A80 		ldrb	r8, [r3, r10]	@ zero_extendqisi2
 5988              	.LBE585:
 5989              	.LBE589:
2622:src/keys.c    ****    int pos = State.catpos;
 5990              		.loc 1 2622 93 view .LVU1769
 5991 001e 1646     		mov	r6, r2
2623:src/keys.c    ****    int ch;
 5992              		.loc 1 2623 8 view .LVU1770
 5993 0020 C5F34615 		ubfx	r5, r5, #5, #7
 5994              	.LVL499:
2624:src/keys.c    ****    const int ctmax = current_catalogue_max();
 5995              		.loc 1 2624 4 is_stmt 1 view .LVU1771
2625:src/keys.c    ****    const enum catalogues cat = (enum catalogues) State2.catalogue;
 5996              		.loc 1 2625 4 view .LVU1772
 5997              	.LBB590:
 5998              	.LBI581:
2477:src/keys.c    **** 	// A quick table of catalogue sizes
 5999              		.loc 1 2477 5 view .LVU1773
 6000              	.LBB586:
2480:src/keys.c    **** 	{
 6001              		.loc 1 2480 2 view .LVU1774
2511:src/keys.c    **** #endif
 6002              		.loc 1 2511 2 view .LVU1775
2511:src/keys.c    **** #endif
 6003              		.loc 1 2511 2 is_stmt 0 view .LVU1776
 6004              	.LBE586:
 6005              	.LBE590:
2626:src/keys.c    **** 
 6006              		.loc 1 2626 4 is_stmt 1 view .LVU1777
2628:src/keys.c    ****      switch (c) {
 6007              		.loc 1 2628 4 view .LVU1778
2628:src/keys.c    ****      switch (c) {
 6008              		.loc 1 2628 7 is_stmt 0 view .LVU1779
 6009 0024 0029     		cmp	r1, #0
 6010 0026 65D0     		beq	.L732
2689:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
 6011              		.loc 1 2689 11 is_stmt 1 view .LVU1780
2689:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
ARM GAS  /tmp/ccK8gYGY.s 			page 190


 6012              		.loc 1 2689 14 is_stmt 0 view .LVU1781
 6013 0028 0129     		cmp	r1, #1
 6014 002a 00F0ED80 		beq	.L733
2723:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
 6015              		.loc 1 2723 11 is_stmt 1 view .LVU1782
2723:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
 6016              		.loc 1 2723 14 is_stmt 0 view .LVU1783
 6017 002e 0229     		cmp	r1, #2
 6018 0030 00F00B81 		beq	.L734
 6019              	.LVL500:
 6020              	.L669:
 6021              	.LBB591:
 6022              	.LBB592:
 491:src/keys.c    **** }
 6023              		.loc 1 491 2 is_stmt 1 view .LVU1784
 6024              	.LBB593:
 6025              	.LBI593:
 131:src/keys.c    **** {
 6026              		.loc 1 131 12 view .LVU1785
 6027              	.LBB594:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 6028              		.loc 1 133 2 view .LVU1786
 143:src/keys.c    **** }
 6029              		.loc 1 143 2 view .LVU1787
 143:src/keys.c    **** }
 6030              		.loc 1 143 23 is_stmt 0 view .LVU1788
 6031 0034 AB4B     		ldr	r3, .L747+8
 6032              	.LBE594:
 6033              	.LBE593:
 491:src/keys.c    **** }
 6034              		.loc 1 491 49 view .LVU1789
 6035 0036 AC4A     		ldr	r2, .L747+12
 6036              	.LBB596:
 6037              	.LBB595:
 143:src/keys.c    **** }
 6038              		.loc 1 143 23 view .LVU1790
 6039 0038 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 6040              	.LBE595:
 6041              	.LBE596:
 491:src/keys.c    **** }
 6042              		.loc 1 491 49 view .LVU1791
 6043 003a 03EB4303 		add	r3, r3, r3, lsl #1
 6044 003e 02EB4303 		add	r3, r2, r3, lsl #1
 6045              	.LBE592:
 6046              	.LBE591:
 6047              	.LBB600:
 6048              	.LBB601:
 6049              	.LBB602:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 6050              		.loc 1 106 16 view .LVU1792
 6051 0042 0025     		movs	r5, #0
 6052              	.LVL501:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 6053              		.loc 1 106 16 view .LVU1793
 6054              	.LBE602:
 6055              	.LBE601:
 6056              	.LBE600:
ARM GAS  /tmp/ccK8gYGY.s 			page 191


2733:src/keys.c    ****    reset_shift();
 6057              		.loc 1 2733 9 view .LVU1794
 6058 0044 585C     		ldrb	r0, [r3, r1]	@ zero_extendqisi2
 6059              	.LVL502:
2733:src/keys.c    ****    reset_shift();
 6060              		.loc 1 2733 9 view .LVU1795
 6061 0046 FFF7FEFF 		bl	remap_chars
 6062              	.LVL503:
2733:src/keys.c    ****    reset_shift();
 6063              		.loc 1 2733 9 view .LVU1796
 6064 004a 0446     		mov	r4, r0
 6065              	.LVL504:
2734:src/keys.c    ****    if (ch == '\0')
 6066              		.loc 1 2734 4 is_stmt 1 view .LVU1797
 6067              	.LBB607:
 6068              	.LBI600:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 6069              		.loc 1 114 13 view .LVU1798
 6070              	.LBE607:
 115:src/keys.c    **** }
 6071              		.loc 1 115 2 view .LVU1799
 6072              	.LBB608:
 6073              	.LBB606:
 6074              	.LBI601:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 6075              		.loc 1 104 20 view .LVU1800
 6076              	.LBB605:
 105:src/keys.c    **** 	State2.shifts = shift;
 6077              		.loc 1 105 2 view .LVU1801
 6078              	.LBB603:
 6079              	.LBI603:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 6080              		.loc 1 96 13 view .LVU1802
 6081              	.LBB604:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 6082              		.loc 1 97 2 view .LVU1803
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 6083              		.loc 1 97 18 is_stmt 0 view .LVU1804
 6084 004c FFF7FEFF 		bl	shift_down
 6085              	.LVL505:
  98:src/keys.c    **** }
 6086              		.loc 1 98 2 is_stmt 1 view .LVU1805
 6087              	.LBE604:
 6088              	.LBE603:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 6089              		.loc 1 106 2 view .LVU1806
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 6090              		.loc 1 106 16 is_stmt 0 view .LVU1807
 6091 0050 3D74     		strb	r5, [r7, #16]
 108:src/keys.c    **** }
 6092              		.loc 1 108 2 is_stmt 1 view .LVU1808
 6093              	.LVL506:
 108:src/keys.c    **** }
 6094              		.loc 1 108 2 is_stmt 0 view .LVU1809
 6095              	.LBE605:
 6096              	.LBE606:
 6097              	.LBE608:
ARM GAS  /tmp/ccK8gYGY.s 			page 192


2735:src/keys.c    ****      return STATE_UNFINISHED;
 6098              		.loc 1 2735 4 is_stmt 1 view .LVU1810
2735:src/keys.c    ****      return STATE_UNFINISHED;
 6099              		.loc 1 2735 7 is_stmt 0 view .LVU1811
 6100 0052 002C     		cmp	r4, #0
 6101 0054 6FD0     		beq	.L731
2737:src/keys.c    ****      // No multi character search in alpha catalogues
 6102              		.loc 1 2737 4 is_stmt 1 view .LVU1812
2737:src/keys.c    ****      // No multi character search in alpha catalogues
 6103              		.loc 1 2737 7 is_stmt 0 view .LVU1813
 6104 0056 AAF10B0A 		sub	r10, r10, #11
 6105              	.LVL507:
2737:src/keys.c    ****      // No multi character search in alpha catalogues
 6106              		.loc 1 2737 7 view .LVU1814
 6107 005a BAF1040F 		cmp	r10, #4
 6108 005e 40F2CB80 		bls	.L683
2741:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6109              		.loc 1 2741 4 is_stmt 1 view .LVU1815
2741:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6110              		.loc 1 2741 8 is_stmt 0 view .LVU1816
 6111 0062 3D7F     		ldrb	r5, [r7, #28]	@ zero_extendqisi2
2741:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6112              		.loc 1 2741 7 view .LVU1817
 6113 0064 092D     		cmp	r5, #9
 6114 0066 40F2C780 		bls	.L683
 6115              	.LVL508:
 6116              	.L651:
2746:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
 6117              		.loc 1 2746 4 is_stmt 1 view .LVU1818
2746:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
 6118              		.loc 1 2746 27 is_stmt 0 view .LVU1819
 6119 006a 7B19     		adds	r3, r7, r5
 6120 006c 0025     		movs	r5, #0
 6121 006e 83F82050 		strb	r5, [r3, #32]
2747:src/keys.c    ****      char buf[16];
 6122              		.loc 1 2747 4 is_stmt 1 view .LVU1820
 6123              	.LVL509:
2747:src/keys.c    ****      char buf[16];
 6124              		.loc 1 2747 18 view .LVU1821
2747:src/keys.c    ****      char buf[16];
 6125              		.loc 1 2747 4 is_stmt 0 view .LVU1822
 6126 0072 B8F1000F 		cmp	r8, #0
 6127 0076 00F0D780 		beq	.L729
 6128              	.LVL510:
 6129              	.L671:
 6130              	.LBB609:
2748:src/keys.c    ****      const char *cmd = catcmd(current_catalogue(pos), buf);
 6131              		.loc 1 2748 6 is_stmt 1 view .LVU1823
2749:src/keys.c    ****      int i;
 6132              		.loc 1 2749 6 view .LVU1824
2749:src/keys.c    ****      int i;
 6133              		.loc 1 2749 24 is_stmt 0 view .LVU1825
 6134 007a 2846     		mov	r0, r5
 6135 007c FFF7FEFF 		bl	current_catalogue
 6136              	.LVL511:
 6137 0080 6946     		mov	r1, sp
 6138 0082 FFF7FEFF 		bl	catcmd
ARM GAS  /tmp/ccK8gYGY.s 			page 193


 6139              	.LVL512:
 6140 0086 0446     		mov	r4, r0
 6141              	.LVL513:
2750:src/keys.c    **** 
 6142              		.loc 1 2750 6 is_stmt 1 view .LVU1826
2752:src/keys.c    ****        cmd++;
 6143              		.loc 1 2752 6 view .LVU1827
2753:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
 6144              		.loc 1 2753 8 view .LVU1828
2752:src/keys.c    ****        cmd++;
 6145              		.loc 1 2752 10 is_stmt 0 view .LVU1829
 6146 0088 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 6147              	.LVL514:
2752:src/keys.c    ****        cmd++;
 6148              		.loc 1 2752 9 view .LVU1830
 6149 008a 1428     		cmp	r0, #20
 6150 008c 04BF     		itt	eq
 6151 008e 6078     		ldrbeq	r0, [r4, #1]	@ zero_extendqisi2
2753:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
 6152              		.loc 1 2753 11 view .LVU1831
 6153 0090 0134     		addeq	r4, r4, #1
 6154              	.LVL515:
2754:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6155              		.loc 1 2754 6 is_stmt 1 view .LVU1832
2754:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6156              		.loc 1 2754 16 view .LVU1833
2754:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6157              		.loc 1 2754 6 is_stmt 0 view .LVU1834
 6158 0092 0028     		cmp	r0, #0
 6159 0094 00F0BF80 		beq	.L673
 6160 0098 DFF85CB2 		ldr	fp, .L747+28
 6161 009c C4F1010A 		rsb	r10, r4, #1
 6162 00a0 06E0     		b	.L676
 6163              	.LVL516:
 6164              	.L736:
 6165              	.LBB610:
2759:src/keys.c    **** 	 break;
 6166              		.loc 1 2759 16 view .LVU1835
 6167 00a2 C0F2BA80 		blt	.L675
 6168              	.LBE610:
2754:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6169              		.loc 1 2754 19 discriminator 2 view .LVU1836
 6170 00a6 14F8010F 		ldrb	r0, [r4, #1]!	@ zero_extendqisi2
 6171              	.LVL517:
2754:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6172              		.loc 1 2754 6 discriminator 2 view .LVU1837
 6173 00aa 0028     		cmp	r0, #0
 6174 00ac 00F0BF80 		beq	.L735
 6175              	.LVL518:
 6176              	.L676:
 6177              	.LBB611:
2755:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
 6178              		.loc 1 2755 8 is_stmt 1 view .LVU1838
2755:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
 6179              		.loc 1 2755 22 is_stmt 0 view .LVU1839
 6180 00b0 FFF7FEFF 		bl	remap_chars
 6181              	.LVL519:
ARM GAS  /tmp/ccK8gYGY.s 			page 194


2759:src/keys.c    **** 	 break;
 6182              		.loc 1 2759 13 is_stmt 1 view .LVU1840
 6183              	.LBE611:
2754:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6184              		.loc 1 2754 32 view .LVU1841
 6185              	.LBB612:
2756:src/keys.c    ****        if (c > cl)
 6186              		.loc 1 2756 8 view .LVU1842
2756:src/keys.c    ****        if (c > cl)
 6187              		.loc 1 2756 46 is_stmt 0 view .LVU1843
 6188 00b4 1BF8013F 		ldrb	r3, [fp, #1]!	@ zero_extendqisi2
 6189              	.LVL520:
2757:src/keys.c    **** 	 goto set_pos;
 6190              		.loc 1 2757 8 is_stmt 1 view .LVU1844
2757:src/keys.c    **** 	 goto set_pos;
 6191              		.loc 1 2757 11 is_stmt 0 view .LVU1845
 6192 00b8 9842     		cmp	r0, r3
 6193 00ba 0AEB0402 		add	r2, r10, r4
 6194              	.LVL521:
2757:src/keys.c    **** 	 goto set_pos;
 6195              		.loc 1 2757 11 view .LVU1846
 6196              	.LBE612:
2754:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6197              		.loc 1 2754 16 is_stmt 1 view .LVU1847
 6198              	.LBB613:
2757:src/keys.c    **** 	 goto set_pos;
 6199              		.loc 1 2757 11 is_stmt 0 view .LVU1848
 6200 00be F0DD     		ble	.L736
 6201              	.LVL522:
 6202              	.L674:
2757:src/keys.c    **** 	 goto set_pos;
 6203              		.loc 1 2757 11 view .LVU1849
 6204 00c0 D9F80040 		ldr	r4, [r9]
 6205              	.L654:
2757:src/keys.c    **** 	 goto set_pos;
 6206              		.loc 1 2757 11 view .LVU1850
 6207              	.LBE613:
 6208              	.LBE609:
2768:src/keys.c    ****      --pos;
 6209              		.loc 1 2768 10 is_stmt 1 view .LVU1851
 6210 00c4 002E     		cmp	r6, #0
 6211 00c6 00F0B680 		beq	.L658
2768:src/keys.c    ****      --pos;
 6212              		.loc 1 2768 20 is_stmt 0 view .LVU1852
 6213 00ca 4DB1     		cbz	r5, .L652
 6214              	.LVL523:
 6215              	.L730:
2768:src/keys.c    ****      --pos;
 6216              		.loc 1 2768 20 view .LVU1853
 6217 00cc 2846     		mov	r0, r5
 6218 00ce FFF7FEFF 		bl	current_catalogue
 6219              	.LVL524:
2769:src/keys.c    ****    State.catpos = pos;
 6220              		.loc 1 2769 6 is_stmt 1 view .LVU1854
2768:src/keys.c    ****      --pos;
 6221              		.loc 1 2768 10 view .LVU1855
 6222              	.LBB614:
ARM GAS  /tmp/ccK8gYGY.s 			page 195


 6223              	.LBI614:
2615:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 6224              		.loc 1 2615 12 view .LVU1856
 6225              	.LBB615:
2616:src/keys.c    **** }
 6226              		.loc 1 2616 2 view .LVU1857
2616:src/keys.c    **** }
 6227              		.loc 1 2616 33 is_stmt 0 view .LVU1858
 6228 00d2 00F0F000 		and	r0, r0, #240
 6229              	.LBE615:
 6230              	.LBE614:
2768:src/keys.c    ****      --pos;
 6231              		.loc 1 2768 27 view .LVU1859
 6232 00d6 F028     		cmp	r0, #240
 6233 00d8 40F0AD80 		bne	.L658
2768:src/keys.c    ****      --pos;
 6234              		.loc 1 2768 20 view .LVU1860
 6235 00dc 013D     		subs	r5, r5, #1
 6236              	.LVL525:
2768:src/keys.c    ****      --pos;
 6237              		.loc 1 2768 20 view .LVU1861
 6238 00de F5D1     		bne	.L730
 6239              	.LVL526:
 6240              	.L652:
2770:src/keys.c    ****    return STATE_UNFINISHED;
 6241              		.loc 1 2770 4 is_stmt 1 view .LVU1862
2770:src/keys.c    ****    return STATE_UNFINISHED;
 6242              		.loc 1 2770 17 is_stmt 0 view .LVU1863
 6243 00e0 B4F8DC37 		ldrh	r3, [r4, #2012]
 6244 00e4 65F34B13 		bfi	r3, r5, #5, #7
 6245 00e8 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2771:src/keys.c    ****  }
 6246              		.loc 1 2771 4 is_stmt 1 view .LVU1864
2771:src/keys.c    ****  }
 6247              		.loc 1 2771 11 is_stmt 0 view .LVU1865
 6248 00ec 3320     		movs	r0, #51
 6249              	.L743:
2772:src/keys.c    **** 
 6250              		.loc 1 2772 2 view .LVU1866
 6251 00ee 05B0     		add	sp, sp, #20
 6252              		.cfi_remember_state
 6253              		.cfi_def_cfa_offset 36
 6254              		@ sp needed
 6255 00f0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6256              	.LVL527:
 6257              	.L732:
 6258              		.cfi_restore_state
2629:src/keys.c    **** #ifdef DM42
 6259              		.loc 1 2629 6 is_stmt 1 view .LVU1867
 6260 00f4 431F     		subs	r3, r0, #5
 6261 00f6 1F2B     		cmp	r3, #31
 6262 00f8 2FD8     		bhi	.L635
 6263 00fa DFE803F0 		tbb	[pc, r3]
 6264              	.LVL528:
 6265              	.L637:
 6266 00fe 35       		.byte	(.L641-.L637)/2
 6267 00ff 2E       		.byte	(.L635-.L637)/2
ARM GAS  /tmp/ccK8gYGY.s 			page 196


 6268 0100 2E       		.byte	(.L635-.L637)/2
 6269 0101 2E       		.byte	(.L635-.L637)/2
 6270 0102 2E       		.byte	(.L635-.L637)/2
 6271 0103 2E       		.byte	(.L635-.L637)/2
 6272 0104 2E       		.byte	(.L635-.L637)/2
 6273 0105 35       		.byte	(.L641-.L637)/2
 6274 0106 2E       		.byte	(.L635-.L637)/2
 6275 0107 2E       		.byte	(.L635-.L637)/2
 6276 0108 2E       		.byte	(.L635-.L637)/2
 6277 0109 20       		.byte	(.L640-.L637)/2
 6278 010a 2E       		.byte	(.L635-.L637)/2
 6279 010b 64       		.byte	(.L639-.L637)/2
 6280 010c 2E       		.byte	(.L635-.L637)/2
 6281 010d 2E       		.byte	(.L635-.L637)/2
 6282 010e 2E       		.byte	(.L635-.L637)/2
 6283 010f 2E       		.byte	(.L635-.L637)/2
 6284 0110 2E       		.byte	(.L635-.L637)/2
 6285 0111 6B       		.byte	(.L638-.L637)/2
 6286 0112 2E       		.byte	(.L635-.L637)/2
 6287 0113 2E       		.byte	(.L635-.L637)/2
 6288 0114 2E       		.byte	(.L635-.L637)/2
 6289 0115 2E       		.byte	(.L635-.L637)/2
 6290 0116 2E       		.byte	(.L635-.L637)/2
 6291 0117 2E       		.byte	(.L635-.L637)/2
 6292 0118 2E       		.byte	(.L635-.L637)/2
 6293 0119 2E       		.byte	(.L635-.L637)/2
 6294 011a 2E       		.byte	(.L635-.L637)/2
 6295 011b 2E       		.byte	(.L635-.L637)/2
 6296 011c 2E       		.byte	(.L635-.L637)/2
 6297 011d 27       		.byte	(.L636-.L637)/2
 6298              		.p2align 1
 6299              	.L742:
2718:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6300              		.loc 1 2718 42 is_stmt 0 discriminator 1 view .LVU1868
 6301 011e 734A     		ldr	r2, .L747+16
 6302              	.LVL529:
2718:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6303              		.loc 1 2718 42 discriminator 1 view .LVU1869
 6304 0120 7B69     		ldr	r3, [r7, #20]
2718:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6305              		.loc 1 2718 24 discriminator 1 view .LVU1870
 6306 0122 1A42     		tst	r2, r3
 6307 0124 75D0     		beq	.L666
2720:src/keys.c    ****        return STATE_UNFINISHED;
 6308              		.loc 1 2720 8 is_stmt 1 view .LVU1871
2720:src/keys.c    ****        return STATE_UNFINISHED;
 6309              		.loc 1 2720 38 is_stmt 0 view .LVU1872
 6310 0126 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 6311 0128 C3F30012 		ubfx	r2, r3, #4, #1
2720:src/keys.c    ****        return STATE_UNFINISHED;
 6312              		.loc 1 2720 30 view .LVU1873
 6313 012c C2F10102 		rsb	r2, r2, #1
2720:src/keys.c    ****        return STATE_UNFINISHED;
 6314              		.loc 1 2720 26 view .LVU1874
 6315 0130 62F30413 		bfi	r3, r2, #4, #1
 6316 0134 BB75     		strb	r3, [r7, #22]
 6317              	.LVL530:
ARM GAS  /tmp/ccK8gYGY.s 			page 197


 6318              	.L731:
2721:src/keys.c    ****      }
 6319              		.loc 1 2721 8 is_stmt 1 view .LVU1875
2721:src/keys.c    ****      }
 6320              		.loc 1 2721 15 is_stmt 0 view .LVU1876
 6321 0136 3320     		movs	r0, #51
 6322              	.L633:
2772:src/keys.c    **** 
 6323              		.loc 1 2772 2 view .LVU1877
 6324 0138 05B0     		add	sp, sp, #20
 6325              		.cfi_remember_state
 6326              		.cfi_def_cfa_offset 36
 6327              		@ sp needed
 6328 013a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6329              	.LVL531:
 6330              	.L640:
 6331              		.cfi_restore_state
2658:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6332              		.loc 1 2658 8 is_stmt 1 view .LVU1878
2658:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6333              		.loc 1 2658 11 is_stmt 0 view .LVU1879
 6334 013e 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 6335 0140 23B1     		cbz	r3, .L636
2658:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6336              		.loc 1 2658 33 discriminator 1 view .LVU1880
 6337 0142 FFF7FEFF 		bl	keyticks
 6338              	.LVL532:
2658:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6339              		.loc 1 2658 30 discriminator 1 view .LVU1881
 6340 0146 1D28     		cmp	r0, #29
 6341 0148 40F39580 		ble	.L737
 6342              	.L636:
2668:src/keys.c    ****        return STATE_UNFINISHED;
 6343              		.loc 1 2668 8 is_stmt 1 view .LVU1882
 6344 014c 0020     		movs	r0, #0
 6345 014e FFF7FEFF 		bl	init_cat
 6346              	.LVL533:
2669:src/keys.c    **** 
 6347              		.loc 1 2669 8 view .LVU1883
2669:src/keys.c    **** 
 6348              		.loc 1 2669 15 is_stmt 0 view .LVU1884
 6349 0152 3320     		movs	r0, #51
2772:src/keys.c    **** 
 6350              		.loc 1 2772 2 view .LVU1885
 6351 0154 05B0     		add	sp, sp, #20
 6352              		.cfi_remember_state
 6353              		.cfi_def_cfa_offset 36
 6354              		@ sp needed
 6355 0156 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6356              	.LVL534:
 6357              	.L635:
 6358              		.cfi_restore_state
 6359              	.LBB616:
 6360              	.LBI591:
 435:src/keys.c    **** {
 6361              		.loc 1 435 12 is_stmt 1 discriminator 4 view .LVU1886
 6362              	.LBB597:
ARM GAS  /tmp/ccK8gYGY.s 			page 198


 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6363              		.loc 1 437 2 discriminator 4 view .LVU1887
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6364              		.loc 1 485 2 discriminator 4 view .LVU1888
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6365              		.loc 1 485 6 is_stmt 0 discriminator 4 view .LVU1889
 6366 015a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6367              		.loc 1 485 5 discriminator 4 view .LVU1890
 6368 015c 13F0100F 		tst	r3, #16
 6369 0160 14BF     		ite	ne
 6370 0162 0421     		movne	r1, #4
 6371              	.LVL535:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6372              		.loc 1 485 5 discriminator 4 view .LVU1891
 6373 0164 0021     		moveq	r1, #0
 6374 0166 65E7     		b	.L669
 6375              	.LVL536:
 6376              	.L641:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6377              		.loc 1 485 5 discriminator 4 view .LVU1892
 6378              	.LBE597:
 6379              	.LBE616:
2636:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6380              		.loc 1 2636 8 is_stmt 1 view .LVU1893
2636:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6381              		.loc 1 2636 11 is_stmt 0 view .LVU1894
 6382 0168 4545     		cmp	r5, r8
 6383 016a EFDA     		bge	.L636
 6384 016c 2846     		mov	r0, r5
 6385              	.LVL537:
2636:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6386              		.loc 1 2636 24 discriminator 1 view .LVU1895
 6387 016e 002E     		cmp	r6, #0
 6388 0170 00F08D80 		beq	.L738
 6389              	.LVL538:
 6390              	.LBB617:
 6391              	.LBI617:
2615:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 6392              		.loc 1 2615 12 is_stmt 1 view .LVU1896
 6393              	.LBB618:
2616:src/keys.c    **** }
 6394              		.loc 1 2616 2 view .LVU1897
2616:src/keys.c    **** }
 6395              		.loc 1 2616 10 is_stmt 0 view .LVU1898
 6396 0174 FFF7FEFF 		bl	current_catalogue
 6397              	.LVL539:
2616:src/keys.c    **** }
 6398              		.loc 1 2616 33 view .LVU1899
 6399 0178 00F0F003 		and	r3, r0, #240
 6400              	.LBE618:
 6401              	.LBE617:
2636:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6402              		.loc 1 2636 27 view .LVU1900
 6403 017c F02B     		cmp	r3, #240
 6404              	.LBB620:
 6405              	.LBB619:
ARM GAS  /tmp/ccK8gYGY.s 			page 199


2616:src/keys.c    **** }
 6406              		.loc 1 2616 10 view .LVU1901
 6407 017e 0446     		mov	r4, r0
 6408              	.LBE619:
 6409              	.LBE620:
2636:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6410              		.loc 1 2636 27 view .LVU1902
 6411 0180 E4D0     		beq	.L636
 6412              	.L644:
 6413              	.LBB621:
2637:src/keys.c    **** 
 6414              		.loc 1 2637 3 is_stmt 1 view .LVU1903
2639:src/keys.c    **** 
 6415              		.loc 1 2639 3 view .LVU1904
 6416 0182 0020     		movs	r0, #0
 6417 0184 FFF7FEFF 		bl	init_cat
 6418              	.LVL540:
2641:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 6419              		.loc 1 2641 3 view .LVU1905
2641:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 6420              		.loc 1 2641 6 is_stmt 0 view .LVU1906
 6421 0188 14F47043 		ands	r3, r4, #61440
 6422 018c 00F08C80 		beq	.L645
2641:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 6423              		.loc 1 2641 7 discriminator 1 view .LVU1907
 6424 0190 B3F5704F 		cmp	r3, #61440
 6425 0194 00F08880 		beq	.L645
 6426              	.LBB622:
2642:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 6427              		.loc 1 2642 5 is_stmt 1 view .LVU1908
2642:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 6428              		.loc 1 2642 31 is_stmt 0 view .LVU1909
 6429 0198 C4F30723 		ubfx	r3, r4, #8, #8
 6430 019c A3F12005 		sub	r5, r3, #32
 6431              	.LVL541:
2642:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 6432              		.loc 1 2642 31 view .LVU1910
 6433 01a0 EDB2     		uxtb	r5, r5
 6434              	.LVL542:
2643:src/keys.c    **** 	     return op;
 6435              		.loc 1 2643 5 is_stmt 1 view .LVU1911
2643:src/keys.c    **** 	     return op;
 6436              		.loc 1 2643 8 is_stmt 0 view .LVU1912
 6437 01a2 012D     		cmp	r5, #1
 6438 01a4 40F28980 		bls	.L646
2643:src/keys.c    **** 	     return op;
 6439              		.loc 1 2643 56 discriminator 1 view .LVU1913
 6440 01a8 6C2D     		cmp	r5, #108
 6441 01aa 00F08680 		beq	.L646
2643:src/keys.c    **** 	     return op;
 6442              		.loc 1 2643 77 discriminator 2 view .LVU1914
 6443 01ae 242D     		cmp	r5, #36
 6444 01b0 00F08380 		beq	.L646
2645:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 6445              		.loc 1 2645 5 is_stmt 1 view .LVU1915
2645:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 6446              		.loc 1 2645 30 is_stmt 0 view .LVU1916
ARM GAS  /tmp/ccK8gYGY.s 			page 200


 6447 01b4 A5F12D02 		sub	r2, r5, #45
2645:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 6448              		.loc 1 2645 8 view .LVU1917
 6449 01b8 062A     		cmp	r2, #6
 6450 01ba 00F29F80 		bhi	.L649
2646:src/keys.c    **** 	   else
 6451              		.loc 1 2646 7 is_stmt 1 view .LVU1918
2646:src/keys.c    **** 	   else
 6452              		.loc 1 2646 28 is_stmt 0 view .LVU1919
 6453 01be 4D3B     		subs	r3, r3, #77
2646:src/keys.c    **** 	   else
 6454              		.loc 1 2646 19 view .LVU1920
 6455 01c0 FB73     		strb	r3, [r7, #15]
 6456              	.LBE622:
 6457              	.LBE621:
2655:src/keys.c    **** 
 6458              		.loc 1 2655 15 view .LVU1921
 6459 01c2 3320     		movs	r0, #51
 6460              	.LBB632:
 6461              	.LBB625:
 6462 01c4 B8E7     		b	.L633
 6463              	.LVL543:
 6464              	.L639:
2655:src/keys.c    **** 
 6465              		.loc 1 2655 15 view .LVU1922
 6466              	.LBE625:
 6467              	.LBE632:
2672:src/keys.c    ****        if (pos == 0)
 6468              		.loc 1 2672 8 is_stmt 1 view .LVU1923
2672:src/keys.c    ****        if (pos == 0)
 6469              		.loc 1 2672 22 is_stmt 0 view .LVU1924
 6470 01c6 0023     		movs	r3, #0
 6471 01c8 3B77     		strb	r3, [r7, #28]
2673:src/keys.c    **** 	 goto set_max;
 6472              		.loc 1 2673 8 is_stmt 1 view .LVU1925
2673:src/keys.c    **** 	 goto set_max;
 6473              		.loc 1 2673 11 is_stmt 0 view .LVU1926
 6474 01ca 002D     		cmp	r5, #0
 6475 01cc 5DD1     		bne	.L739
 6476              	.LVL544:
 6477              	.L653:
2766:src/keys.c    ****  set_pos:
 6478              		.loc 1 2766 4 is_stmt 1 view .LVU1927
2766:src/keys.c    ****  set_pos:
 6479              		.loc 1 2766 8 is_stmt 0 view .LVU1928
 6480 01ce 08F1FF35 		add	r5, r8, #-1
 6481              	.LVL545:
2766:src/keys.c    ****  set_pos:
 6482              		.loc 1 2766 8 view .LVU1929
 6483 01d2 77E7     		b	.L654
 6484              	.LVL546:
 6485              	.L638:
2680:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 6486              		.loc 1 2680 8 is_stmt 1 view .LVU1930
2680:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 6487              		.loc 1 2680 22 is_stmt 0 view .LVU1931
 6488 01d4 0023     		movs	r3, #0
ARM GAS  /tmp/ccK8gYGY.s 			page 201


 6489 01d6 3B77     		strb	r3, [r7, #28]
2681:src/keys.c    ****        if (pos >= ctmax)
 6490              		.loc 1 2681 8 is_stmt 1 view .LVU1932
2681:src/keys.c    ****        if (pos >= ctmax)
 6491              		.loc 1 2681 14 is_stmt 0 view .LVU1933
 6492 01d8 06E0     		b	.L657
 6493              	.LVL547:
 6494              	.L740:
2681:src/keys.c    ****        if (pos >= ctmax)
 6495              		.loc 1 2681 29 discriminator 1 view .LVU1934
 6496 01da 66B3     		cbz	r6, .L658
 6497              	.LBB633:
 6498              	.LBB634:
2616:src/keys.c    **** }
 6499              		.loc 1 2616 10 view .LVU1935
 6500 01dc FFF7FEFF 		bl	current_catalogue
 6501              	.LVL548:
2616:src/keys.c    **** }
 6502              		.loc 1 2616 33 view .LVU1936
 6503 01e0 00F0F000 		and	r0, r0, #240
 6504              	.LBE634:
 6505              	.LBE633:
2681:src/keys.c    ****        if (pos >= ctmax)
 6506              		.loc 1 2681 41 view .LVU1937
 6507 01e4 F028     		cmp	r0, #240
 6508 01e6 26D1     		bne	.L658
 6509              	.L657:
2681:src/keys.c    ****        if (pos >= ctmax)
 6510              		.loc 1 2681 65 is_stmt 1 discriminator 3 view .LVU1938
2681:src/keys.c    ****        if (pos >= ctmax)
 6511              		.loc 1 2681 14 discriminator 3 view .LVU1939
 6512 01e8 0135     		adds	r5, r5, #1
 6513              	.LVL549:
 6514              	.LBB637:
 6515              	.LBI633:
2615:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 6516              		.loc 1 2615 12 discriminator 3 view .LVU1940
 6517              	.LBB635:
2616:src/keys.c    **** }
 6518              		.loc 1 2616 2 discriminator 3 view .LVU1941
 6519              	.LBE635:
 6520              	.LBE637:
2681:src/keys.c    ****        if (pos >= ctmax)
 6521              		.loc 1 2681 14 is_stmt 0 discriminator 3 view .LVU1942
 6522 01ea A845     		cmp	r8, r5
 6523              	.LBB638:
 6524              	.LBB636:
2616:src/keys.c    **** }
 6525              		.loc 1 2616 10 discriminator 3 view .LVU1943
 6526 01ec 2846     		mov	r0, r5
 6527              	.LBE636:
 6528              	.LBE638:
2681:src/keys.c    ****        if (pos >= ctmax)
 6529              		.loc 1 2681 14 discriminator 3 view .LVU1944
 6530 01ee F4DC     		bgt	.L740
 6531              	.LVL550:
2768:src/keys.c    ****      --pos;
ARM GAS  /tmp/ccK8gYGY.s 			page 202


 6532              		.loc 1 2768 10 is_stmt 1 view .LVU1945
2683:src/keys.c    ****        goto set_pos;
 6533              		.loc 1 2683 7 is_stmt 0 view .LVU1946
 6534 01f0 3546     		mov	r5, r6
 6535              	.LVL551:
2768:src/keys.c    ****      --pos;
 6536              		.loc 1 2768 10 view .LVU1947
 6537 01f2 06B3     		cbz	r6, .L658
 6538              	.LVL552:
2768:src/keys.c    ****      --pos;
 6539              		.loc 1 2768 10 view .LVU1948
 6540 01f4 0025     		movs	r5, #0
 6541              	.LVL553:
2768:src/keys.c    ****      --pos;
 6542              		.loc 1 2768 10 view .LVU1949
 6543 01f6 73E7     		b	.L652
 6544              	.LVL554:
 6545              	.L683:
2741:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6546              		.loc 1 2741 8 view .LVU1950
 6547 01f8 2B46     		mov	r3, r5
2742:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6548              		.loc 1 2742 6 is_stmt 1 view .LVU1951
2742:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6549              		.loc 1 2742 31 is_stmt 0 view .LVU1952
 6550 01fa 3B44     		add	r3, r3, r7
2742:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6551              		.loc 1 2742 27 view .LVU1953
 6552 01fc 0135     		adds	r5, r5, #1
 6553 01fe EDB2     		uxtb	r5, r5
 6554 0200 3D77     		strb	r5, [r7, #28]
2742:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6555              		.loc 1 2742 31 view .LVU1954
 6556 0202 83F82040 		strb	r4, [r3, #32]
 6557 0206 30E7     		b	.L651
 6558              	.LVL555:
 6559              	.L733:
2690:src/keys.c    ****        /*
 6560              		.loc 1 2690 6 is_stmt 1 view .LVU1955
2690:src/keys.c    ****        /*
 6561              		.loc 1 2690 9 is_stmt 0 view .LVU1956
 6562 0208 BAF1120F 		cmp	r10, #18
 6563 020c 21D0     		beq	.L741
 6564              	.L660:
2718:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6565              		.loc 1 2718 11 is_stmt 1 view .LVU1957
2718:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6566              		.loc 1 2718 14 is_stmt 0 view .LVU1958
 6567 020e 2428     		cmp	r0, #36
 6568 0210 85D0     		beq	.L742
 6569              	.LVL556:
 6570              	.L666:
2733:src/keys.c    ****    reset_shift();
 6571              		.loc 1 2733 4 is_stmt 1 view .LVU1959
 6572              	.LBB639:
 435:src/keys.c    **** {
 6573              		.loc 1 435 12 view .LVU1960
ARM GAS  /tmp/ccK8gYGY.s 			page 203


 6574              	.LBB598:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6575              		.loc 1 437 2 view .LVU1961
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6576              		.loc 1 485 2 view .LVU1962
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6577              		.loc 1 485 5 is_stmt 0 view .LVU1963
 6578 0212 0121     		movs	r1, #1
 6579              	.LVL557:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6580              		.loc 1 485 5 view .LVU1964
 6581 0214 0EE7     		b	.L669
 6582              	.LVL558:
 6583              	.L673:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6584              		.loc 1 485 5 view .LVU1965
 6585 0216 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 6586              	.LVL559:
 6587              	.L675:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6588              		.loc 1 485 5 view .LVU1966
 6589              	.LBE598:
 6590              	.LBE639:
 6591              	.LBB640:
2762:src/keys.c    ****        goto set_pos;
 6592              		.loc 1 2762 6 is_stmt 1 view .LVU1967
2762:src/keys.c    ****        goto set_pos;
 6593              		.loc 1 2762 9 is_stmt 0 view .LVU1968
 6594 021a 002B     		cmp	r3, #0
 6595 021c 3FF450AF 		beq	.L674
 6596              	.LBE640:
2747:src/keys.c    ****      char buf[16];
 6597              		.loc 1 2747 31 is_stmt 1 view .LVU1969
 6598 0220 0135     		adds	r5, r5, #1
 6599              	.LVL560:
2747:src/keys.c    ****      char buf[16];
 6600              		.loc 1 2747 18 view .LVU1970
2747:src/keys.c    ****      char buf[16];
 6601              		.loc 1 2747 4 is_stmt 0 view .LVU1971
 6602 0222 A845     		cmp	r8, r5
 6603 0224 7FF429AF 		bne	.L671
 6604              	.LVL561:
 6605              	.L729:
2747:src/keys.c    ****      char buf[16];
 6606              		.loc 1 2747 4 view .LVU1972
 6607 0228 D9F80040 		ldr	r4, [r9]
 6608 022c CFE7     		b	.L653
 6609              	.LVL562:
 6610              	.L735:
2747:src/keys.c    ****      char buf[16];
 6611              		.loc 1 2747 4 view .LVU1973
 6612 022e 3A44     		add	r2, r2, r7
 6613              	.LVL563:
2747:src/keys.c    ****      char buf[16];
 6614              		.loc 1 2747 4 view .LVU1974
 6615 0230 92F82030 		ldrb	r3, [r2, #32]	@ zero_extendqisi2
 6616              	.LVL564:
ARM GAS  /tmp/ccK8gYGY.s 			page 204


2747:src/keys.c    ****      char buf[16];
 6617              		.loc 1 2747 4 view .LVU1975
 6618 0234 F1E7     		b	.L675
 6619              	.LVL565:
 6620              	.L658:
2770:src/keys.c    ****    return STATE_UNFINISHED;
 6621              		.loc 1 2770 17 view .LVU1976
 6622 0236 B4F8DC37 		ldrh	r3, [r4, #2012]
 6623 023a 05F07F05 		and	r5, r5, #127
 6624              	.LVL566:
2770:src/keys.c    ****    return STATE_UNFINISHED;
 6625              		.loc 1 2770 4 is_stmt 1 view .LVU1977
2770:src/keys.c    ****    return STATE_UNFINISHED;
 6626              		.loc 1 2770 17 is_stmt 0 view .LVU1978
 6627 023e 65F34B13 		bfi	r3, r5, #5, #7
 6628 0242 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2771:src/keys.c    ****  }
 6629              		.loc 1 2771 4 is_stmt 1 view .LVU1979
2771:src/keys.c    ****  }
 6630              		.loc 1 2771 11 is_stmt 0 view .LVU1980
 6631 0246 3320     		movs	r0, #51
 6632 0248 51E7     		b	.L743
 6633              	.LVL567:
 6634              	.L734:
2724:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 6635              		.loc 1 2724 6 is_stmt 1 view .LVU1981
2724:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 6636              		.loc 1 2724 9 is_stmt 0 view .LVU1982
 6637 024a 1028     		cmp	r0, #16
 6638 024c 23D0     		beq	.L744
 6639              	.L668:
2733:src/keys.c    ****    reset_shift();
 6640              		.loc 1 2733 4 is_stmt 1 view .LVU1983
 6641              	.LVL568:
 6642              	.LBB641:
 435:src/keys.c    **** {
 6643              		.loc 1 435 12 view .LVU1984
 6644              	.LBB599:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6645              		.loc 1 437 2 view .LVU1985
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6646              		.loc 1 485 2 view .LVU1986
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6647              		.loc 1 485 5 is_stmt 0 view .LVU1987
 6648 024e 0521     		movs	r1, #5
 6649              	.LVL569:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6650              		.loc 1 485 5 view .LVU1988
 6651 0250 F0E6     		b	.L669
 6652              	.LVL570:
 6653              	.L741:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6654              		.loc 1 485 5 view .LVU1989
 6655              	.LBE599:
 6656              	.LBE641:
2690:src/keys.c    ****        /*
 6657              		.loc 1 2690 32 discriminator 1 view .LVU1990
ARM GAS  /tmp/ccK8gYGY.s 			page 205


 6658 0252 0128     		cmp	r0, #1
 6659 0254 DBD1     		bne	.L660
 6660              	.LBB642:
2699:src/keys.c    **** 	 OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
 6661              		.loc 1 2699 8 is_stmt 1 view .LVU1991
2707:src/keys.c    ****        int i;
 6662              		.loc 1 2707 8 view .LVU1992
2707:src/keys.c    ****        int i;
 6663              		.loc 1 2707 26 is_stmt 0 view .LVU1993
 6664 0256 2846     		mov	r0, r5
 6665              	.LVL571:
2707:src/keys.c    ****        int i;
 6666              		.loc 1 2707 26 view .LVU1994
 6667 0258 FFF7FEFF 		bl	current_catalogue
 6668              	.LVL572:
2707:src/keys.c    ****        int i;
 6669              		.loc 1 2707 26 view .LVU1995
 6670 025c 0446     		mov	r4, r0
 6671              	.LVL573:
2708:src/keys.c    **** 
 6672              		.loc 1 2708 8 is_stmt 1 view .LVU1996
2710:src/keys.c    ****        if (isRARG(op))
 6673              		.loc 1 2710 8 view .LVU1997
 6674 025e 0020     		movs	r0, #0
 6675              	.LVL574:
2710:src/keys.c    ****        if (isRARG(op))
 6676              		.loc 1 2710 8 is_stmt 0 view .LVU1998
 6677 0260 FFF7FEFF 		bl	init_cat
 6678              	.LVL575:
2711:src/keys.c    **** 	 return op ^ 1;
 6679              		.loc 1 2711 8 is_stmt 1 view .LVU1999
2711:src/keys.c    **** 	 return op ^ 1;
 6680              		.loc 1 2711 11 is_stmt 0 view .LVU2000
 6681 0264 14F47043 		ands	r3, r4, #61440
 6682 0268 29D0     		beq	.L661
2711:src/keys.c    **** 	 return op ^ 1;
 6683              		.loc 1 2711 12 discriminator 1 view .LVU2001
 6684 026a B3F5704F 		cmp	r3, #61440
 6685 026e 26D0     		beq	.L661
2712:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 6686              		.loc 1 2712 3 is_stmt 1 view .LVU2002
2712:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 6687              		.loc 1 2712 13 is_stmt 0 view .LVU2003
 6688 0270 84F00100 		eor	r0, r4, #1
 6689 0274 60E7     		b	.L633
 6690              	.LVL576:
 6691              	.L737:
2712:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 6692              		.loc 1 2712 13 view .LVU2004
 6693              	.LBE642:
2659:src/keys.c    **** 	   goto search;
 6694              		.loc 1 2659 3 is_stmt 1 view .LVU2005
2659:src/keys.c    **** 	   goto search;
 6695              		.loc 1 2659 7 is_stmt 0 view .LVU2006
 6696 0276 3D7F     		ldrb	r5, [r7, #28]	@ zero_extendqisi2
 6697              	.LVL577:
2659:src/keys.c    **** 	   goto search;
ARM GAS  /tmp/ccK8gYGY.s 			page 206


 6698              		.loc 1 2659 7 view .LVU2007
 6699 0278 013D     		subs	r5, r5, #1
 6700 027a EDB2     		uxtb	r5, r5
2659:src/keys.c    **** 	   goto search;
 6701              		.loc 1 2659 6 view .LVU2008
 6702 027c 3D77     		strb	r5, [r7, #28]
 6703 027e 002D     		cmp	r5, #0
 6704 0280 7FF4F3AE 		bne	.L651
 6705 0284 D9F80040 		ldr	r4, [r9]
 6706 0288 2AE7     		b	.L652
 6707              	.LVL578:
 6708              	.L739:
2676:src/keys.c    ****        goto set_pos;
 6709              		.loc 1 2676 3 is_stmt 1 view .LVU2009
 6710 028a 013D     		subs	r5, r5, #1
 6711              	.LVL579:
2677:src/keys.c    **** 
 6712              		.loc 1 2677 8 view .LVU2010
 6713 028c 1AE7     		b	.L654
 6714              	.LVL580:
 6715              	.L738:
2677:src/keys.c    **** 
 6716              		.loc 1 2677 8 is_stmt 0 view .LVU2011
 6717 028e FFF7FEFF 		bl	current_catalogue
 6718              	.LVL581:
2677:src/keys.c    **** 
 6719              		.loc 1 2677 8 view .LVU2012
 6720 0292 0446     		mov	r4, r0
 6721 0294 75E7     		b	.L644
 6722              	.LVL582:
 6723              	.L744:
2724:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 6724              		.loc 1 2724 19 discriminator 1 view .LVU2013
 6725 0296 BAF1130F 		cmp	r10, #19
 6726 029a D8D1     		bne	.L668
2725:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
 6727              		.loc 1 2725 8 is_stmt 1 view .LVU2014
 6728 029c 0020     		movs	r0, #0
 6729              	.LVL583:
2725:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
 6730              		.loc 1 2725 8 is_stmt 0 view .LVU2015
 6731 029e FFF7FEFF 		bl	init_cat
 6732              	.LVL584:
2726:src/keys.c    ****      }
 6733              		.loc 1 2726 8 is_stmt 1 view .LVU2016
2726:src/keys.c    ****      }
 6734              		.loc 1 2726 15 is_stmt 0 view .LVU2017
 6735 02a2 40F23D10 		movw	r0, #317
 6736 02a6 47E7     		b	.L633
 6737              	.L645:
 6738              	.LBB643:
2651:src/keys.c    **** 	 }
 6739              		.loc 1 2651 5 is_stmt 1 view .LVU2018
 6740              	.LBB626:
 6741              	.LBB627:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 6742              		.loc 1 715 5 is_stmt 0 view .LVU2019
ARM GAS  /tmp/ccK8gYGY.s 			page 207


 6743 02a8 C4F30723 		ubfx	r3, r4, #8, #8
 6744 02ac 012B     		cmp	r3, #1
 6745              	.LBE627:
 6746              	.LBE626:
2651:src/keys.c    **** 	 }
 6747              		.loc 1 2651 12 view .LVU2020
 6748 02ae 2046     		mov	r0, r4
 6749              	.LVL585:
 6750              	.LBB629:
 6751              	.LBI626:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 6752              		.loc 1 714 12 is_stmt 1 view .LVU2021
 6753              	.LBB628:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 6754              		.loc 1 715 2 view .LVU2022
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 6755              		.loc 1 715 5 is_stmt 0 view .LVU2023
 6756 02b0 7FF442AF 		bne	.L633
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 6757              		.loc 1 715 5 view .LVU2024
 6758 02b4 FFF7FEFF 		bl	check_confirm.part.0
 6759              	.LVL586:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 6760              		.loc 1 715 5 view .LVU2025
 6761 02b8 3EE7     		b	.L633
 6762              	.LVL587:
 6763              	.L646:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 6764              		.loc 1 715 5 view .LVU2026
 6765              	.LBE628:
 6766              	.LBE629:
 6767              	.LBB630:
2644:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 6768              		.loc 1 2644 7 is_stmt 1 view .LVU2027
2644:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 6769              		.loc 1 2644 14 is_stmt 0 view .LVU2028
 6770 02ba 2046     		mov	r0, r4
 6771 02bc 3CE7     		b	.L633
 6772              	.LVL588:
 6773              	.L661:
2644:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 6774              		.loc 1 2644 14 view .LVU2029
 6775 02be 0C48     		ldr	r0, .L747+20
 6776              	.LBE630:
 6777              	.LBE643:
2622:src/keys.c    ****    int pos = State.catpos;
 6778              		.loc 1 2622 93 view .LVU2030
 6779 02c0 40F28522 		movw	r2, #645
 6780 02c4 0146     		mov	r1, r0
 6781 02c6 0023     		movs	r3, #0
 6782 02c8 01E0     		b	.L663
 6783              	.LVL589:
 6784              	.L746:
2622:src/keys.c    ****    int pos = State.catpos;
 6785              		.loc 1 2622 93 view .LVU2031
 6786 02ca 31F8022F 		ldrh	r2, [r1, #2]!
 6787              	.LVL590:
ARM GAS  /tmp/ccK8gYGY.s 			page 208


 6788              	.L663:
 6789              	.LBB644:
2714:src/keys.c    **** 	   return conv_mapping[i^1];
 6790              		.loc 1 2714 3 is_stmt 1 view .LVU2032
2713:src/keys.c    **** 	 if (op == conv_mapping[i])
 6791              		.loc 1 2713 72 view .LVU2033
2714:src/keys.c    **** 	   return conv_mapping[i^1];
 6792              		.loc 1 2714 6 is_stmt 0 view .LVU2034
 6793 02ce A242     		cmp	r2, r4
 6794 02d0 1ED0     		beq	.L745
2713:src/keys.c    **** 	 if (op == conv_mapping[i])
 6795              		.loc 1 2713 72 discriminator 2 view .LVU2035
 6796 02d2 0133     		adds	r3, r3, #1
 6797              	.LVL591:
2713:src/keys.c    **** 	 if (op == conv_mapping[i])
 6798              		.loc 1 2713 20 is_stmt 1 discriminator 2 view .LVU2036
2713:src/keys.c    **** 	 if (op == conv_mapping[i])
 6799              		.loc 1 2713 8 is_stmt 0 discriminator 2 view .LVU2037
 6800 02d4 0C2B     		cmp	r3, #12
 6801 02d6 F8D1     		bne	.L746
 6802 02d8 2DE7     		b	.L731
 6803              	.L748:
 6804 02da 00BF     		.align	2
 6805              	.L747:
 6806 02dc 00000000 		.word	StateWhileOn
 6807 02e0 00000000 		.word	.LANCHOR8
 6808 02e4 00000000 		.word	.LANCHOR6
 6809 02e8 00000000 		.word	.LANCHOR15
 6810 02ec 00080800 		.word	526336
 6811 02f0 00000000 		.word	.LANCHOR14
 6812 02f4 00000000 		.word	main_ram
 6813 02f8 1F000000 		.word	StateWhileOn+31
 6814              	.LVL592:
 6815              	.L649:
2713:src/keys.c    **** 	 if (op == conv_mapping[i])
 6816              		.loc 1 2713 8 discriminator 2 view .LVU2038
 6817              	.LBE644:
 6818              	.LBB645:
 6819              	.LBB631:
2648:src/keys.c    **** 	 }
 6820              		.loc 1 2648 7 is_stmt 1 view .LVU2039
 6821              	.LBB623:
 6822              	.LBI623:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 6823              		.loc 1 552 13 view .LVU2040
 6824              	.LBB624:
 553:src/keys.c    **** 		return;
 6825              		.loc 1 553 2 view .LVU2041
 553:src/keys.c    **** 		return;
 6826              		.loc 1 553 6 is_stmt 0 view .LVU2042
 6827 02fc FFF7FEFF 		bl	is_bad_cmdline
 6828              	.LVL593:
 553:src/keys.c    **** 		return;
 6829              		.loc 1 553 5 view .LVU2043
 6830 0300 0028     		cmp	r0, #0
 6831 0302 7FF418AF 		bne	.L731
 6832 0306 2846     		mov	r0, r5
ARM GAS  /tmp/ccK8gYGY.s 			page 209


 6833 0308 FFF7FEFF 		bl	init_arg.part.0
 6834              	.LVL594:
 6835              	.LBE624:
 6836              	.LBE623:
 6837              	.LBE631:
 6838              	.LBE645:
2655:src/keys.c    **** 
 6839              		.loc 1 2655 15 view .LVU2044
 6840 030c 3320     		movs	r0, #51
 6841 030e 13E7     		b	.L633
 6842              	.LVL595:
 6843              	.L745:
 6844              	.LBB646:
2715:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 6845              		.loc 1 2715 5 is_stmt 1 view .LVU2045
2715:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 6846              		.loc 1 2715 26 is_stmt 0 view .LVU2046
 6847 0310 83F00103 		eor	r3, r3, #1
 6848              	.LVL596:
2715:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 6849              		.loc 1 2715 24 view .LVU2047
 6850 0314 30F81300 		ldrh	r0, [r0, r3, lsl #1]
 6851 0318 0EE7     		b	.L633
 6852              	.LBE646:
 6853              		.cfi_endproc
 6854              	.LFE48:
 6856              		.section	.text.find_pos,"ax",%progbits
 6857              		.align	1
 6858              		.p2align 2,,3
 6859              		.global	find_pos
 6860              		.syntax unified
 6861              		.thumb
 6862              		.thumb_func
 6863              		.fpu fpv4-sp-d16
 6865              	find_pos:
 6866              	.LVL597:
 6867              	.LFB49:
2775:src/keys.c    **** 	int pos;
 6868              		.loc 1 2775 32 is_stmt 1 view -0
 6869              		.cfi_startproc
 6870              		@ args = 0, pretend = 0, frame = 16
 6871              		@ frame_needed = 0, uses_anonymous_args = 0
2776:src/keys.c    **** 	const int ctmax = current_catalogue_max();
 6872              		.loc 1 2776 2 view .LVU2049
2777:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 6873              		.loc 1 2777 2 view .LVU2050
 6874              	.LBB647:
 6875              	.LBI647:
2477:src/keys.c    **** 	// A quick table of catalogue sizes
 6876              		.loc 1 2477 5 view .LVU2051
 6877              	.LBB648:
2480:src/keys.c    **** 	{
 6878              		.loc 1 2480 2 view .LVU2052
2511:src/keys.c    **** #endif
 6879              		.loc 1 2511 2 view .LVU2053
 6880              	.LBE648:
 6881              	.LBE647:
ARM GAS  /tmp/ccK8gYGY.s 			page 210


2775:src/keys.c    **** 	int pos;
 6882              		.loc 1 2775 32 is_stmt 0 view .LVU2054
 6883 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 6884              		.cfi_def_cfa_offset 32
 6885              		.cfi_offset 4, -32
 6886              		.cfi_offset 5, -28
 6887              		.cfi_offset 6, -24
 6888              		.cfi_offset 7, -20
 6889              		.cfi_offset 8, -16
 6890              		.cfi_offset 9, -12
 6891              		.cfi_offset 10, -8
 6892              		.cfi_offset 14, -4
 6893              	.LBB650:
 6894              	.LBB649:
2511:src/keys.c    **** #endif
 6895              		.loc 1 2511 31 view .LVU2055
 6896 0004 1E4B     		ldr	r3, .L766
2511:src/keys.c    **** #endif
 6897              		.loc 1 2511 24 view .LVU2056
 6898 0006 1F4A     		ldr	r2, .L766+4
2511:src/keys.c    **** #endif
 6899              		.loc 1 2511 31 view .LVU2057
 6900 0008 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2511:src/keys.c    **** #endif
 6901              		.loc 1 2511 24 view .LVU2058
 6902 000a 12F803A0 		ldrb	r10, [r2, r3]	@ zero_extendqisi2
 6903              	.LVL598:
2511:src/keys.c    **** #endif
 6904              		.loc 1 2511 24 view .LVU2059
 6905              	.LBE649:
 6906              	.LBE650:
2778:src/keys.c    **** 		char buf[16];
 6907              		.loc 1 2778 2 is_stmt 1 view .LVU2060
2778:src/keys.c    **** 		char buf[16];
 6908              		.loc 1 2778 16 view .LVU2061
2775:src/keys.c    **** 	int pos;
 6909              		.loc 1 2775 32 is_stmt 0 view .LVU2062
 6910 000e 84B0     		sub	sp, sp, #16
 6911              		.cfi_def_cfa_offset 48
2778:src/keys.c    **** 		char buf[16];
 6912              		.loc 1 2778 2 view .LVU2063
 6913 0010 BAF1000F 		cmp	r10, #0
 6914 0014 32D0     		beq	.L756
 6915 0016 8146     		mov	r9, r0
2778:src/keys.c    **** 		char buf[16];
 6916              		.loc 1 2778 11 view .LVU2064
 6917 0018 4FF00008 		mov	r8, #0
 6918 001c C0F10107 		rsb	r7, r0, #1
 6919              	.LVL599:
 6920              	.L755:
 6921              	.LBB651:
2779:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
 6922              		.loc 1 2779 3 is_stmt 1 view .LVU2065
2780:src/keys.c    **** 		int i;
 6923              		.loc 1 2780 3 view .LVU2066
2780:src/keys.c    **** 		int i;
 6924              		.loc 1 2780 21 is_stmt 0 view .LVU2067
ARM GAS  /tmp/ccK8gYGY.s 			page 211


 6925 0020 4046     		mov	r0, r8
 6926 0022 FFF7FEFF 		bl	current_catalogue
 6927              	.LVL600:
 6928 0026 6946     		mov	r1, sp
 6929 0028 FFF7FEFF 		bl	catcmd
 6930              	.LVL601:
 6931 002c 0646     		mov	r6, r0
 6932              	.LVL602:
2781:src/keys.c    **** 
 6933              		.loc 1 2781 3 is_stmt 1 view .LVU2068
2783:src/keys.c    **** 			cmd++;
 6934              		.loc 1 2783 3 view .LVU2069
2784:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 6935              		.loc 1 2784 4 view .LVU2070
2783:src/keys.c    **** 			cmd++;
 6936              		.loc 1 2783 7 is_stmt 0 view .LVU2071
 6937 002e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 6938              	.LVL603:
2783:src/keys.c    **** 			cmd++;
 6939              		.loc 1 2783 6 view .LVU2072
 6940 0030 1428     		cmp	r0, #20
 6941 0032 04BF     		itt	eq
 6942 0034 7078     		ldrbeq	r0, [r6, #1]	@ zero_extendqisi2
2784:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 6943              		.loc 1 2784 7 view .LVU2073
 6944 0036 0136     		addeq	r6, r6, #1
 6945              	.LVL604:
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6946              		.loc 1 2785 3 is_stmt 1 view .LVU2074
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6947              		.loc 1 2785 13 view .LVU2075
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6948              		.loc 1 2785 3 is_stmt 0 view .LVU2076
 6949 0038 A8B1     		cbz	r0, .L757
 6950 003a 09F1FF33 		add	r3, r9, #-1
 6951 003e 04E0     		b	.L754
 6952              	.LVL605:
 6953              	.L765:
 6954              	.LBB652:
2790:src/keys.c    **** 				break;
 6955              		.loc 1 2790 12 view .LVU2077
 6956 0040 12DB     		blt	.L752
 6957              	.LBE652:
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6958              		.loc 1 2785 16 discriminator 2 view .LVU2078
 6959 0042 16F8010F 		ldrb	r0, [r6, #1]!	@ zero_extendqisi2
 6960              	.LVL606:
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6961              		.loc 1 2785 16 discriminator 2 view .LVU2079
 6962 0046 3C44     		add	r4, r4, r7
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6963              		.loc 1 2785 3 discriminator 2 view .LVU2080
 6964 0048 B0B1     		cbz	r0, .L764
 6965              	.LVL607:
 6966              	.L754:
 6967              	.LBB653:
2786:src/keys.c    **** 			const int cl = remap_chars(text[i]);
ARM GAS  /tmp/ccK8gYGY.s 			page 212


 6968              		.loc 1 2786 4 is_stmt 1 view .LVU2081
 6969 004a 5C1C     		adds	r4, r3, #1
2786:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 6970              		.loc 1 2786 18 is_stmt 0 view .LVU2082
 6971 004c FFF7FEFF 		bl	remap_chars
 6972              	.LVL608:
 6973 0050 0546     		mov	r5, r0
2787:src/keys.c    **** 			if (c > cl)
 6974              		.loc 1 2787 19 view .LVU2083
 6975 0052 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 6976              	.LVL609:
2787:src/keys.c    **** 			if (c > cl)
 6977              		.loc 1 2787 4 is_stmt 1 view .LVU2084
2787:src/keys.c    **** 			if (c > cl)
 6978              		.loc 1 2787 19 is_stmt 0 view .LVU2085
 6979 0054 FFF7FEFF 		bl	remap_chars
 6980              	.LVL610:
2790:src/keys.c    **** 				break;
 6981              		.loc 1 2790 9 is_stmt 1 view .LVU2086
 6982              	.LBE653:
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6983              		.loc 1 2785 29 view .LVU2087
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6984              		.loc 1 2785 13 view .LVU2088
 6985              	.LBB654:
2788:src/keys.c    **** 				return pos;
 6986              		.loc 1 2788 4 view .LVU2089
2788:src/keys.c    **** 				return pos;
 6987              		.loc 1 2788 7 is_stmt 0 view .LVU2090
 6988 0058 8542     		cmp	r5, r0
 6989 005a 2346     		mov	r3, r4
 6990 005c F0DD     		ble	.L765
 6991              	.LVL611:
 6992              	.L749:
2788:src/keys.c    **** 				return pos;
 6993              		.loc 1 2788 7 view .LVU2091
 6994              	.LBE654:
 6995              	.LBE651:
2797:src/keys.c    **** 
 6996              		.loc 1 2797 1 view .LVU2092
 6997 005e 4046     		mov	r0, r8
 6998 0060 04B0     		add	sp, sp, #16
 6999              		.cfi_remember_state
 7000              		.cfi_def_cfa_offset 32
 7001              		@ sp needed
 7002 0062 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 7003              	.LVL612:
 7004              	.L757:
 7005              		.cfi_restore_state
 7006              	.LBB655:
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 7007              		.loc 1 2785 3 view .LVU2093
 7008 0066 4C46     		mov	r4, r9
 7009              	.LVL613:
 7010              	.L752:
2793:src/keys.c    **** 			return pos;
 7011              		.loc 1 2793 3 is_stmt 1 view .LVU2094
ARM GAS  /tmp/ccK8gYGY.s 			page 213


2793:src/keys.c    **** 			return pos;
 7012              		.loc 1 2793 6 is_stmt 0 view .LVU2095
 7013 0068 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 7014 006a 002B     		cmp	r3, #0
 7015 006c F7D0     		beq	.L749
 7016              	.LBE655:
2778:src/keys.c    **** 		char buf[16];
 7017              		.loc 1 2778 29 is_stmt 1 view .LVU2096
 7018 006e 08F10108 		add	r8, r8, #1
 7019              	.LVL614:
2778:src/keys.c    **** 		char buf[16];
 7020              		.loc 1 2778 16 view .LVU2097
2778:src/keys.c    **** 		char buf[16];
 7021              		.loc 1 2778 2 is_stmt 0 view .LVU2098
 7022 0072 D045     		cmp	r8, r10
 7023 0074 D4D1     		bne	.L755
 7024 0076 F2E7     		b	.L749
 7025              	.LVL615:
 7026              	.L764:
2778:src/keys.c    **** 		char buf[16];
 7027              		.loc 1 2778 2 view .LVU2099
 7028 0078 4C44     		add	r4, r4, r9
 7029 007a F5E7     		b	.L752
 7030              	.LVL616:
 7031              	.L756:
2778:src/keys.c    **** 		char buf[16];
 7032              		.loc 1 2778 11 view .LVU2100
 7033 007c D046     		mov	r8, r10
 7034 007e EEE7     		b	.L749
 7035              	.L767:
 7036              		.align	2
 7037              	.L766:
 7038 0080 00000000 		.word	StateWhileOn
 7039 0084 00000000 		.word	.LANCHOR8
 7040              		.cfi_endproc
 7041              	.LFE49:
 7043              		.section	.text.get_alpha_state,"ax",%progbits
 7044              		.align	1
 7045              		.p2align 2,,3
 7046              		.global	get_alpha_state
 7047              		.syntax unified
 7048              		.thumb
 7049              		.thumb_func
 7050              		.fpu fpv4-sp-d16
 7052              	get_alpha_state:
 7053              	.LFB61:
3122:src/keys.c    **** 
3123:src/keys.c    **** 
3124:src/keys.c    **** static int process_registerlist(const keycode c) {
3125:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
3126:src/keys.c    **** 	enum shifts shift = reset_shift();
3127:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
3128:src/keys.c    **** 	const int g_max = global_regs();
3129:src/keys.c    **** 
3130:src/keys.c    **** 	if (n == LOCAL_REG_BASE) {	// '.'
3131:src/keys.c    **** 		if (local_regs())
3132:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
ARM GAS  /tmp/ccK8gYGY.s 			page 214


3133:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
3134:src/keys.c    **** 		goto reset_window;
3135:src/keys.c    **** 	}
3136:src/keys.c    **** 	else if (n <= 9) {
3137:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
3138:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
3139:src/keys.c    **** 			dv = n;
3140:src/keys.c    **** 		State2.digval = dv;
3141:src/keys.c    **** 		goto reset_window;
3142:src/keys.c    **** 	}
3143:src/keys.c    **** 	else if ((shift == SHIFT_F || shift == SHIFT_G) && c == K21) {  // <( )>
3144:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
3145:src/keys.c    **** 		set_smode(SDISP_SHOW);
3146:src/keys.c    **** 	}
3147:src/keys.c    **** 	else if (n != NO_REG) {
3148:src/keys.c    **** 		State2.digval = n;
3149:src/keys.c    **** 		goto reset_window;
3150:src/keys.c    **** 	}
3151:src/keys.c    **** 
3152:src/keys.c    **** 	switch (c) {
3153:src/keys.c    **** 	case K_DOWN:
3154:src/keys.c    **** 		if (State2.digval > 0) {
3155:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
3156:src/keys.c    **** 				State2.digval = global_regs();
3157:src/keys.c    **** 			--State2.digval;
3158:src/keys.c    **** 		}
3159:src/keys.c    **** 		else
3160:src/keys.c    **** 			State2.digval = max - 1;
3161:src/keys.c    **** 		goto reset_window;
3162:src/keys.c    **** 
3163:src/keys.c    **** 	case K_UP:
3164:src/keys.c    **** 		if (State2.digval < max - 1) {
3165:src/keys.c    **** 			State2.digval++;
3166:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
3167:src/keys.c    **** 				State2.digval = regX_idx;
3168:src/keys.c    **** 		}
3169:src/keys.c    **** 		else	
3170:src/keys.c    **** 			State2.digval = 0;
3171:src/keys.c    **** 		goto reset_window;
3172:src/keys.c    **** 
3173:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
3174:src/keys.c    **** 	case K04:
3175:src/keys.c    **** 		State2.digval2 = ! State2.digval2 && ! State2.local;
3176:src/keys.c    **** 		goto reset_window;
3177:src/keys.c    **** #endif
3178:src/keys.c    **** 
3179:src/keys.c    **** 	case K24:			
3180:src/keys.c    **** 	//case K60:
3181:src/keys.c    **** 		if (State2.disp_temp)
3182:src/keys.c    **** 			return STATE_UNFINISHED;
3183:src/keys.c    **** 		break;		// Exit doing nothing
3184:src/keys.c    **** 
3185:src/keys.c    **** 	case K20:		// ENTER
3186:src/keys.c    **** 		if (shift == SHIFT_F) {
3187:src/keys.c    **** 			State2.disp_as_alpha = 1;
3188:src/keys.c    **** 			goto reset_window;
3189:src/keys.c    **** 		}
ARM GAS  /tmp/ccK8gYGY.s 			page 215


3190:src/keys.c    **** 	case K11:		// RCL
3191:src/keys.c    **** 		if ( shift == SHIFT_N ) {
3192:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
3193:src/keys.c    **** 			n = RARG( State2.digval2 ? RARG_FLRCL : RARG_RCL, State2.digval );
3194:src/keys.c    **** #else
3195:src/keys.c    **** 			n = RARG( RARG_RCL, State2.digval );
3196:src/keys.c    **** #endif
3197:src/keys.c    **** 			State2.registerlist = 0;
3198:src/keys.c    **** 			State2.digval = 0;
3199:src/keys.c    **** 			State2.digval2 = 0;
3200:src/keys.c    **** 			return n;
3201:src/keys.c    **** 		}
3202:src/keys.c    **** 	default:
3203:src/keys.c    **** 		return STATE_UNFINISHED;
3204:src/keys.c    **** 	}
3205:src/keys.c    **** 	State2.registerlist = 0;
3206:src/keys.c    **** 	State2.digval = 0;
3207:src/keys.c    **** 	State2.digval2 = 0;
3208:src/keys.c    **** reset_window:
3209:src/keys.c    **** 	State2.window = 0;
3210:src/keys.c    **** 	return STATE_UNFINISHED;
3211:src/keys.c    **** }
3212:src/keys.c    **** 
3213:src/keys.c    **** 
3214:src/keys.c    **** static int process(const int c) {
3215:src/keys.c    ****   const enum shifts shift = cur_shift();
3216:src/keys.c    ****   enum catalogues cat;
3217:src/keys.c    **** 
3218:src/keys.c    ****   if (Running || Pause) {
3219:src/keys.c    ****     /*
3220:src/keys.c    ****      *  Abort a running program with R/S or EXIT
3221:src/keys.c    ****      */
3222:src/keys.c    ****     if (c == K60 || c == K63) {
3223:src/keys.c    ****       if (Pause && isXROM(state_pc()))
3224:src/keys.c    **** 	set_pc(0);
3225:src/keys.c    ****       Pause = 0;
3226:src/keys.c    ****       xeq_xrom();
3227:src/keys.c    ****       set_running_off();
3228:src/keys.c    ****       DispMsg = "Stopped";
3229:src/keys.c    ****       State2.disp_freeze = 0;
3230:src/keys.c    ****       return STATE_UNFINISHED;
3231:src/keys.c    ****     }
3232:src/keys.c    ****     if ( c != K_HEARTBEAT ) {
3233:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
3234:src/keys.c    ****       Pause = 0;			// leave PSE statement
3235:src/keys.c    ****       GoFast = 1;
3236:src/keys.c    ****     }
3237:src/keys.c    ****     // continue execution if really running, else ignore (PSE)
3238:src/keys.c    ****     return STATE_RUNNING;
3239:src/keys.c    ****   }
3240:src/keys.c    **** 
3241:src/keys.c    ****   /* Check for ON in the unshifted state -- this is a reset sequence
3242:src/keys.c    ****    * common across all modes.  Shifted modes need to check this themselves
3243:src/keys.c    ****    * if required.
3244:src/keys.c    ****    */
3245:src/keys.c    **** #ifdef DM42
3246:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue && ! State2.arrow && ! State2.alphas)
ARM GAS  /tmp/ccK8gYGY.s 			page 216


3247:src/keys.c    **** #else
3248:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue)
3249:src/keys.c    **** #endif
3250:src/keys.c    ****     {
3251:src/keys.c    **** #ifdef INCLUDE_C_LOCK
3252:src/keys.c    ****       if (C_LOCKED) {
3253:src/keys.c    **** 	stack_restore();
3254:src/keys.c    **** 	CLEAR_REAL;
3255:src/keys.c    **** 	CLEAR_IMAG;
3256:src/keys.c    ****       }
3257:src/keys.c    **** #endif
3258:src/keys.c    ****       soft_init_state();
3259:src/keys.c    ****       return STATE_UNFINISHED;
3260:src/keys.c    ****     }
3261:src/keys.c    **** 
3262:src/keys.c    **** #ifndef CONSOLE
3263:src/keys.c    **** 	if (c == K63 && JustStopped) {
3264:src/keys.c    **** 		// Avoid an accidental restart with R/S
3265:src/keys.c    **** 		JustStopped = 0;
3266:src/keys.c    **** 		return STATE_IGNORE;
3267:src/keys.c    **** 	}
3268:src/keys.c    **** #endif
3269:src/keys.c    **** 	/*  Handle the keyboard timeout for catalogue navigation
3270:src/keys.c    **** 	 *  Must be done early in the process to capture the shifts correctly
3271:src/keys.c    **** 	 */
3272:src/keys.c    **** 	if (State2.catalogue && Keyticks > 30)
3273:src/keys.c    **** 		CmdLineLength = 0;
3274:src/keys.c    **** 	/*
3275:src/keys.c    **** 	 *  Process the various cases
3276:src/keys.c    **** 	 *  The handlers in this block here do not handle shifts at all or do it themselves
3277:src/keys.c    **** 	 */
3278:src/keys.c    **** 	if (State2.confirm)
3279:src/keys.c    **** 		return process_confirm((const keycode)c);
3280:src/keys.c    **** 
3281:src/keys.c    **** 	if (State2.rarg)
3282:src/keys.c    **** 		return process_arg((const keycode)c);
3283:src/keys.c    **** 
3284:src/keys.c    **** 	if (State2.gtodot)
3285:src/keys.c    **** 		return process_gtodot((const keycode)c);
3286:src/keys.c    **** 
3287:src/keys.c    **** 	if (State2.hyp)
3288:src/keys.c    **** 		return process_hyp((const keycode)c);
3289:src/keys.c    **** 
3290:src/keys.c    **** 	if (State2.test != TST_NONE)
3291:src/keys.c    **** 		return process_test((const keycode)c);
3292:src/keys.c    **** 
3293:src/keys.c    **** 	if (State2.status)
3294:src/keys.c    **** 		return process_status((const keycode)c);
3295:src/keys.c    **** 
3296:src/keys.c    **** 	/*
3297:src/keys.c    **** 	 *  Process shift keys directly
3298:src/keys.c    **** 	 */
3299:src/keys.c    **** 	if (c == K_F) {
3300:src/keys.c    **** 		toggle_shift(SHIFT_F);
3301:src/keys.c    **** 		return STATE_UNFINISHED;
3302:src/keys.c    **** 	}
3303:src/keys.c    **** 	if (c == K_G) {
ARM GAS  /tmp/ccK8gYGY.s 			page 217


3304:src/keys.c    **** 		toggle_shift(SHIFT_G);
3305:src/keys.c    **** 		return STATE_UNFINISHED;
3306:src/keys.c    **** 	}
3307:src/keys.c    **** 	if (c == K_H) {
3308:src/keys.c    **** 		toggle_shift(SHIFT_H);
3309:src/keys.c    **** 		State2.arrow = 0;
3310:src/keys.c    **** 		return STATE_UNFINISHED;
3311:src/keys.c    **** 	}
3312:src/keys.c    **** 	/*
3313:src/keys.c    **** 	 *  The handlers in this block need to call reset_shift somewhere
3314:src/keys.c    **** 	 */
3315:src/keys.c    **** 	// print_debug (2, c);
3316:src/keys.c    **** 	if (State2.arrow)
3317:src/keys.c    **** 		return process_arrow((const keycode)c);
3318:src/keys.c    **** 
3319:src/keys.c    **** 	/*
3320:src/keys.c    **** 	 * Here the keys are mapped to catalogues
3321:src/keys.c    **** 	 * The position of this code decides where catalogue switching
3322:src/keys.c    **** 	 * works and were not
3323:src/keys.c    **** 	 */
3324:src/keys.c    **** 	cat = keycode_to_cat((keycode)c, shift);
3325:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
3326:src/keys.c    **** 		if (is_bad_cmdline())
3327:src/keys.c    **** 			return STATE_UNFINISHED;
3328:src/keys.c    **** 		init_cat( CATALOGUE_NONE );
3329:src/keys.c    **** 		init_cat( cat );
3330:src/keys.c    **** 		return STATE_UNFINISHED;
3331:src/keys.c    **** 	}
3332:src/keys.c    **** 
3333:src/keys.c    **** 	/*
3334:src/keys.c    **** 	 *  More handlers...
3335:src/keys.c    **** 	 */
3336:src/keys.c    **** 	if (State2.multi)
3337:src/keys.c    **** 		return process_multi((const keycode)c);
3338:src/keys.c    **** 
3339:src/keys.c    **** 	if (State2.labellist)
3340:src/keys.c    **** 		return process_labellist((const keycode)c);
3341:src/keys.c    **** 
3342:src/keys.c    **** 	if (State2.registerlist)
3343:src/keys.c    **** 		return process_registerlist((const keycode)c);
3344:src/keys.c    **** 
3345:src/keys.c    **** 	if (State2.catalogue)
3346:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
3347:src/keys.c    **** 
3348:src/keys.c    **** 	if (State2.alphas) {
3349:src/keys.c    **** #ifndef INFRARED
3350:src/keys.c    **** 		return process_alpha((const keycode)c);
3351:src/keys.c    **** #else
3352:src/keys.c    **** 		int i = process_alpha((const keycode)c);
3353:src/keys.c    **** 		if (! State2.alphas && get_user_flag(T_FLAG)) {
3354:src/keys.c    **** 			print_tab(0);
3355:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
3356:src/keys.c    **** 		}
3357:src/keys.c    **** 		return i;
3358:src/keys.c    **** #endif
3359:src/keys.c    **** 	}
3360:src/keys.c    **** #ifdef INCLUDE_C_LOCK
ARM GAS  /tmp/ccK8gYGY.s 			page 218


3361:src/keys.c    **** 	if (C_LOCKED) {
3362:src/keys.c    **** 		return process_c_lock ((const keycode)c);
3363:src/keys.c    **** 	}
3364:src/keys.c    **** #endif
3365:src/keys.c    **** 	if (State2.cmplx) {
3366:src/keys.c    **** 		return process_cmplx((const keycode)c);
3367:src/keys.c    **** 	} else {
3368:src/keys.c    **** 		if (shift == SHIFT_F || shift == SHIFT_G)
3369:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
3370:src/keys.c    **** 		if (shift == SHIFT_H)
3371:src/keys.c    **** 			return process_h_shifted((const keycode)c);
3372:src/keys.c    **** 		// print_debug (3, c);
3373:src/keys.c    **** 		return process_normal((const keycode)c);
3374:src/keys.c    **** 	}
3375:src/keys.c    **** }
3376:src/keys.c    **** 
3377:src/keys.c    ****  unsigned int get_alpha_state ( void ) {
 7054              		.loc 1 3377 40 is_stmt 1 view -0
 7055              		.cfi_startproc
 7056              		@ args = 0, pretend = 0, frame = 0
 7057              		@ frame_needed = 0, uses_anonymous_args = 0
 7058              		@ link register save eliminated.
3378:src/keys.c    ****    return (State2.alphas || State2.confirm || State2.status || State2.labellist
 7059              		.loc 1 3378 4 view .LVU2102
 7060              		.loc 1 3378 53 is_stmt 0 view .LVU2103
 7061 0000 074B     		ldr	r3, .L773
 7062              		.loc 1 3378 44 view .LVU2104
 7063 0002 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 7064 0004 1AB9     		cbnz	r2, .L771
3379:src/keys.c    **** 	   || State2.rarg || State2.registerlist || State2.multi 
3380:src/keys.c    **** 	   || State2.gtodot || State2.catalogue || (State2.test != TST_NONE));
 7065              		.loc 1 3380 5 discriminator 2 view .LVU2105
 7066 0006 5969     		ldr	r1, [r3, #20]
 7067 0008 064A     		ldr	r2, .L773+4
 7068 000a 0A40     		ands	r2, r2, r1
 7069 000c 0AB1     		cbz	r2, .L772
 7070              	.L771:
 7071 000e 0120     		movs	r0, #1
3381:src/keys.c    ****  }
 7072              		.loc 1 3381 2 view .LVU2106
 7073 0010 7047     		bx	lr
 7074              	.L772:
3380:src/keys.c    ****  }
 7075              		.loc 1 3380 42 discriminator 3 view .LVU2107
 7076 0012 D889     		ldrh	r0, [r3, #14]
 7077 0014 B0F5E060 		subs	r0, r0, #1792
 7078 0018 18BF     		it	ne
 7079 001a 0120     		movne	r0, #1
 7080 001c 7047     		bx	lr
 7081              	.L774:
 7082 001e 00BF     		.align	2
 7083              	.L773:
 7084 0020 00000000 		.word	StateWhileOn
 7085 0024 0709280C 		.word	203950343
 7086              		.cfi_endproc
 7087              	.LFE61:
 7089              		.section	.rodata.process_keycode.str1.4,"aMS",%progbits,1
ARM GAS  /tmp/ccK8gYGY.s 			page 219


 7090              		.align	2
 7091              	.LC0:
 7092 0000 52554E00 		.ascii	"RUN\000"
 7093              		.align	2
 7094              	.LC1:
 7095 0004 4E554C4C 		.ascii	"NULL\000"
 7095      00
 7096 0009 000000   		.align	2
 7097              	.LC2:
 7098 000c 53746F70 		.ascii	"Stopped\000"
 7098      70656400 
 7099              		.section	.text.process_keycode,"ax",%progbits
 7100              		.align	1
 7101              		.p2align 2,,3
 7102              		.global	process_keycode
 7103              		.syntax unified
 7104              		.thumb
 7105              		.thumb_func
 7106              		.fpu fpv4-sp-d16
 7108              	process_keycode:
 7109              	.LVL617:
 7110              	.LFB63:
3382:src/keys.c    **** 
3383:src/keys.c    ****  void process_keycode_with_shift ( struct _ndmap remapped ) {
3384:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
3385:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
3386:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
3387:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
3388:src/keys.c    ****        // Was error just wait for confirmation
3389:src/keys.c    ****        wait_for_key_press();
3390:src/keys.c    ****      }
3391:src/keys.c    ****      start_buzzer_freq(8800); sys_delay(10); stop_buzzer();// End click
3392:src/keys.c    ****      return;
3393:src/keys.c    ****    }
3394:src/keys.c    ****    if (remapped.key_34s == K_OP) {
3395:src/keys.c    ****      nd_opcode = remapped.shift;
3396:src/keys.c    ****      set_shift(SHIFT_N);
3397:src/keys.c    ****    }
3398:src/keys.c    ****    else if (remapped.shift >= 0) set_shift ( remapped.shift );
3399:src/keys.c    ****    process_keycode ( remapped.key_34s );
3400:src/keys.c    ****  }
3401:src/keys.c    ****  
3402:src/keys.c    **** /*
3403:src/keys.c    ****  *  Fed with key codes by the event loop
3404:src/keys.c    ****  */
3405:src/keys.c    **** void process_keycode(int c)
3406:src/keys.c    **** {
 7111              		.loc 1 3406 1 is_stmt 1 view -0
 7112              		.cfi_startproc
 7113              		@ args = 0, pretend = 0, frame = 8
 7114              		@ frame_needed = 0, uses_anonymous_args = 0
3407:src/keys.c    ****   static int was_paused;
 7115              		.loc 1 3407 3 view .LVU2109
3408:src/keys.c    ****   //volatile int cmdline_empty; // volatile because it's uninitialized in some cases
3409:src/keys.c    ****   int cmdline_empty = 0;        // Visual studio chokes in debug mode over the above
 7116              		.loc 1 3409 3 view .LVU2110
3410:src/keys.c    ****   //print_debug(60,c);
ARM GAS  /tmp/ccK8gYGY.s 			page 220


3411:src/keys.c    ****   if (was_paused && Pause == 0)
 7117              		.loc 1 3411 3 view .LVU2111
3406:src/keys.c    ****   static int was_paused;
 7118              		.loc 1 3406 1 is_stmt 0 view .LVU2112
 7119 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7120              		.cfi_def_cfa_offset 36
 7121              		.cfi_offset 4, -36
 7122              		.cfi_offset 5, -32
 7123              		.cfi_offset 6, -28
 7124              		.cfi_offset 7, -24
 7125              		.cfi_offset 8, -20
 7126              		.cfi_offset 9, -16
 7127              		.cfi_offset 10, -12
 7128              		.cfi_offset 11, -8
 7129              		.cfi_offset 14, -4
 7130              		.loc 1 3411 7 view .LVU2113
 7131 0004 B64D     		ldr	r5, .L1406
 7132              		.loc 1 3411 27 view .LVU2114
 7133 0006 B74F     		ldr	r7, .L1406+4
 7134              		.loc 1 3411 6 view .LVU2115
 7135 0008 2B68     		ldr	r3, [r5]
3406:src/keys.c    ****   static int was_paused;
 7136              		.loc 1 3406 1 view .LVU2116
 7137 000a 83B0     		sub	sp, sp, #12
 7138              		.cfi_def_cfa_offset 48
3406:src/keys.c    ****   static int was_paused;
 7139              		.loc 1 3406 1 view .LVU2117
 7140 000c 0446     		mov	r4, r0
 7141              		.loc 1 3411 6 view .LVU2118
 7142 000e 1BB1     		cbz	r3, .L776
 7143              		.loc 1 3411 27 discriminator 1 view .LVU2119
 7144 0010 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7145              		.loc 1 3411 18 discriminator 1 view .LVU2120
 7146 0012 002B     		cmp	r3, #0
 7147 0014 00F0DB81 		beq	.L1317
 7148              	.LVL618:
 7149              	.L776:
3412:src/keys.c    ****     {
3413:src/keys.c    ****     /*
3414:src/keys.c    ****      *  Continue XROM execution after a pause
3415:src/keys.c    ****      */
3416:src/keys.c    ****       xeq_xrom();
3417:src/keys.c    ****     }
3418:src/keys.c    ****   was_paused = Pause;
 7150              		.loc 1 3418 3 is_stmt 1 view .LVU2121
 7151              		.loc 1 3418 14 is_stmt 0 view .LVU2122
 7152 0018 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7153 001a 2B60     		str	r3, [r5]
3419:src/keys.c    ****   if (c == K_NOP)
 7154              		.loc 1 3419 3 is_stmt 1 view .LVU2123
 7155              		.loc 1 3419 6 is_stmt 0 view .LVU2124
 7156 001c 2E2C     		cmp	r4, #46
 7157 001e 00F09B81 		beq	.L1318
3420:src/keys.c    ****     {
3421:src/keys.c    ****       OpCode = 0;
3422:src/keys.c    ****     }
3423:src/keys.c    ****   else if (c == K_HEARTBEAT)
ARM GAS  /tmp/ccK8gYGY.s 			page 221


 7158              		.loc 1 3423 8 is_stmt 1 view .LVU2125
 7159              		.loc 1 3423 11 is_stmt 0 view .LVU2126
 7160 0022 622C     		cmp	r4, #98
 7161 0024 70D0     		beq	.L1319
3424:src/keys.c    ****     {
3425:src/keys.c    ****     /*
3426:src/keys.c    ****      *  Heartbeat processing goes here.
3427:src/keys.c    ****      *  This is totally thread safe!
3428:src/keys.c    ****      */
3429:src/keys.c    ****     if (Keyticks >= 2) {
3430:src/keys.c    ****       /*
3431:src/keys.c    ****        *  Some time has passed after last key press
3432:src/keys.c    ****        */
3433:src/keys.c    ****       if (OpCode != 0) {
3434:src/keys.c    **** 	/*
3435:src/keys.c    **** 	 *  Handle command display and NULL here
3436:src/keys.c    **** 	 */
3437:src/keys.c    **** 	if (OpCodeDisplayPending) {
3438:src/keys.c    **** 	  /*
3439:src/keys.c    **** 	   *  Show command to the user
3440:src/keys.c    **** 	   */
3441:src/keys.c    **** 	  OpCodeDisplayPending = 0;
3442:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
3443:src/keys.c    **** 	    DispMsg = "RUN";
3444:src/keys.c    **** 	  }
3445:src/keys.c    **** 	  else {
3446:src/keys.c    **** 	    scopy_char(TraceBuffer, prt(OpCode, TraceBuffer), '\0');
3447:src/keys.c    **** 	    DispMsg = TraceBuffer;
3448:src/keys.c    **** 	  }
3449:src/keys.c    **** 	  display();
3450:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
3451:src/keys.c    **** 	}
3452:src/keys.c    ****     else if (Keyticks > 12) {
3453:src/keys.c    **** 	  /*
3454:src/keys.c    **** 	   *  Key is too long held down
3455:src/keys.c    **** 	   */
3456:src/keys.c    **** 	  OpCode = 0;
3457:src/keys.c    **** 	  message("NULL", CNULL);
3458:src/keys.c    **** 	  // Force display update on key-up
3459:src/keys.c    **** 	  State2.disp_temp = 0;
3460:src/keys.c    **** 	}
3461:src/keys.c    ****       }
3462:src/keys.c    ****       if (Keyticks > 12 && shift_down() != SHIFT_N) {
3463:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
3464:src/keys.c    **** 	State2.shifts = SHIFT_N;
3465:src/keys.c    ****       }
3466:src/keys.c    ****     }
3467:src/keys.c    **** 
3468:src/keys.c    ****     /*
3469:src/keys.c    ****      *  Serve the watchdog
3470:src/keys.c    ****      */
3471:src/keys.c    ****     watchdog();
3472:src/keys.c    **** 
3473:src/keys.c    **** #ifndef CONSOLE
3474:src/keys.c    ****     /*
3475:src/keys.c    ****      *  If buffer is empty re-allow R/S to start a program
3476:src/keys.c    ****      */
ARM GAS  /tmp/ccK8gYGY.s 			page 222


3477:src/keys.c    ****     if (JustStopped && !is_key_pressed()) {
3478:src/keys.c    ****       JustStopped = 0;
3479:src/keys.c    ****     }
3480:src/keys.c    **** #endif
3481:src/keys.c    **** 
3482:src/keys.c    ****     /*
3483:src/keys.c    ****      *  Do nothing if not running a program
3484:src/keys.c    ****      */
3485:src/keys.c    ****     if (!Running && ! Pause)
3486:src/keys.c    ****       return;
3487:src/keys.c    ****   }
3488:src/keys.c    ****   else {
3489:src/keys.c    ****     /*
3490:src/keys.c    ****      *  Not the heartbeat - prepare for execution of any commands
3491:src/keys.c    ****      */
3492:src/keys.c    ****     xeq_init_contexts();
 7162              		.loc 1 3492 5 is_stmt 1 view .LVU2127
3493:src/keys.c    ****     State2.wascomplex = 0;
 7163              		.loc 1 3493 23 is_stmt 0 view .LVU2128
 7164 0026 DFF8D882 		ldr	r8, .L1406+32
3492:src/keys.c    ****     State2.wascomplex = 0;
 7165              		.loc 1 3492 5 view .LVU2129
 7166 002a FFF7FEFF 		bl	xeq_init_contexts
 7167              	.LVL619:
 7168              		.loc 1 3493 5 is_stmt 1 view .LVU2130
 7169              		.loc 1 3493 23 is_stmt 0 view .LVU2131
 7170 002e 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
3494:src/keys.c    **** 
3495:src/keys.c    ****     if (is_dot(RPN)) {
 7171              		.loc 1 3495 9 view .LVU2132
 7172 0032 8D20     		movs	r0, #141
3493:src/keys.c    **** 
 7173              		.loc 1 3493 23 view .LVU2133
 7174 0034 6FF38713 		bfc	r3, #6, #2
 7175 0038 88F81430 		strb	r3, [r8, #20]
 7176              		.loc 1 3495 5 is_stmt 1 view .LVU2134
 7177              		.loc 1 3495 9 is_stmt 0 view .LVU2135
 7178 003c FFF7FEFF 		bl	is_dot
 7179              	.LVL620:
 7180              		.loc 1 3495 8 view .LVU2136
 7181 0040 0028     		cmp	r0, #0
 7182 0042 40F04C82 		bne	.L1320
 7183              	.L794:
3496:src/keys.c    ****       /*
3497:src/keys.c    ****        * Turn off the RPN annunciator as a visual feedback
3498:src/keys.c    ****        */
3499:src/keys.c    ****       clr_dot(RPN);
3500:src/keys.c    ****       finish_RPN(); // RPN
3501:src/keys.c    ****     }
3502:src/keys.c    **** 
3503:src/keys.c    **** #ifndef CONSOLE
3504:src/keys.c    ****     /*
3505:src/keys.c    ****      *  Reallow display refresh which is temporarily disabled after a stop
3506:src/keys.c    ****      *  All keys execpt R/S trigger this. The latter will only be reenabled
3507:src/keys.c    ****      *  from the heartbeat after the keybord buffer has become empty to avoid
3508:src/keys.c    ****      *  an accidental restart of the program.
3509:src/keys.c    ****      */
ARM GAS  /tmp/ccK8gYGY.s 			page 223


3510:src/keys.c    ****     if (c != K63)
 7184              		.loc 1 3510 5 is_stmt 1 view .LVU2137
 7185              		.loc 1 3510 8 is_stmt 0 view .LVU2138
 7186 0046 272C     		cmp	r4, #39
 7187 0048 00F04682 		beq	.L1321
3511:src/keys.c    ****       JustStopped = 0;
 7188              		.loc 1 3511 7 is_stmt 1 view .LVU2139
 7189              		.loc 1 3511 19 is_stmt 0 view .LVU2140
 7190 004c A64B     		ldr	r3, .L1406+8
 7191 004e 0025     		movs	r5, #0
3512:src/keys.c    **** #endif
3513:src/keys.c    ****   }
3514:src/keys.c    **** 
3515:src/keys.c    ****   /*
3516:src/keys.c    ****    *  Handle key release
3517:src/keys.c    ****    */
3518:src/keys.c    ****   if (c == K_RELEASE)
 7192              		.loc 1 3518 6 view .LVU2141
 7193 0050 632C     		cmp	r4, #99
3511:src/keys.c    ****       JustStopped = 0;
 7194              		.loc 1 3511 19 view .LVU2142
 7195 0052 1D60     		str	r5, [r3]
 7196              		.loc 1 3518 3 is_stmt 1 view .LVU2143
 7197              		.loc 1 3518 6 is_stmt 0 view .LVU2144
 7198 0054 40F08F81 		bne	.L796
3519:src/keys.c    ****     {
3520:src/keys.c    ****       //      print_debug (80,c);
3521:src/keys.c    ****     if (OpCode != 0) {
 7199              		.loc 1 3521 5 is_stmt 1 view .LVU2145
 7200              		.loc 1 3521 16 is_stmt 0 view .LVU2146
 7201 0058 A44A     		ldr	r2, .L1406+12
 7202 005a 1368     		ldr	r3, [r2]
 7203              		.loc 1 3521 8 view .LVU2147
 7204 005c 002B     		cmp	r3, #0
 7205 005e 00F05282 		beq	.L797
3522:src/keys.c    ****       /*
3523:src/keys.c    ****        * Execute the key on release
3524:src/keys.c    ****        */
3525:src/keys.c    ****       GoFast = 1;
 7206              		.loc 1 3525 7 is_stmt 1 view .LVU2148
 7207              		.loc 1 3525 14 is_stmt 0 view .LVU2149
 7208 0062 A349     		ldr	r1, .L1406+16
3526:src/keys.c    ****       c = OpCode;
3527:src/keys.c    ****       //      print_debug(81,c);
3528:src/keys.c    ****       OpCode = 0;
 7209              		.loc 1 3528 14 view .LVU2150
 7210 0064 1560     		str	r5, [r2]
3525:src/keys.c    ****       c = OpCode;
 7211              		.loc 1 3525 14 view .LVU2151
 7212 0066 0120     		movs	r0, #1
3529:src/keys.c    **** 
3530:src/keys.c    ****       if (c == STATE_SST)
 7213              		.loc 1 3530 10 view .LVU2152
 7214 0068 2E2B     		cmp	r3, #46
3526:src/keys.c    ****       //      print_debug(81,c);
 7215              		.loc 1 3526 9 view .LVU2153
 7216 006a 1C46     		mov	r4, r3
ARM GAS  /tmp/ccK8gYGY.s 			page 224


 7217              	.LVL621:
3525:src/keys.c    ****       c = OpCode;
 7218              		.loc 1 3525 14 view .LVU2154
 7219 006c 0860     		str	r0, [r1]
3526:src/keys.c    ****       //      print_debug(81,c);
 7220              		.loc 1 3526 7 is_stmt 1 view .LVU2155
 7221              	.LVL622:
3528:src/keys.c    **** 
 7222              		.loc 1 3528 7 view .LVU2156
 7223              		.loc 1 3530 7 view .LVU2157
 7224              		.loc 1 3530 10 is_stmt 0 view .LVU2158
 7225 006e 00F05D82 		beq	.L1322
3531:src/keys.c    **** 	xeq_sst_bst(1);
3532:src/keys.c    ****       else {
3533:src/keys.c    **** 	if (c == (OP_NIL | OP_OFF) || c == (OP_NIL | OP_rCLX) || !is_bad_cmdline()) {
 7226              		.loc 1 3533 2 is_stmt 1 view .LVU2159
 7227              		.loc 1 3533 5 is_stmt 0 view .LVU2160
 7228 0072 B3F5817F 		cmp	r3, #258
 7229 0076 0AD0     		beq	.L803
 7230              		.loc 1 3533 29 discriminator 1 view .LVU2161
 7231 0078 40F23F12 		movw	r2, #319
 7232 007c 9342     		cmp	r3, r2
 7233 007e 06D0     		beq	.L803
 7234 0080 0093     		str	r3, [sp]
 7235              		.loc 1 3533 60 discriminator 2 view .LVU2162
 7236 0082 FFF7FEFF 		bl	is_bad_cmdline
 7237              	.LVL623:
 7238              		.loc 1 3533 56 discriminator 2 view .LVU2163
 7239 0086 009B     		ldr	r3, [sp]
 7240 0088 0028     		cmp	r0, #0
 7241 008a 40F05C82 		bne	.L1323
 7242              	.L803:
3534:src/keys.c    **** 	  xeq(c);
 7243              		.loc 1 3534 4 is_stmt 1 view .LVU2164
3535:src/keys.c    **** 	  if (Running || Pause)
 7244              		.loc 1 3535 8 is_stmt 0 view .LVU2165
 7245 008e 994E     		ldr	r6, .L1406+20
3534:src/keys.c    **** 	  xeq(c);
 7246              		.loc 1 3534 4 view .LVU2166
 7247 0090 1846     		mov	r0, r3
 7248 0092 FFF7FEFF 		bl	xeq
 7249              	.LVL624:
 7250              		.loc 1 3535 4 is_stmt 1 view .LVU2167
 7251              		.loc 1 3535 7 is_stmt 0 view .LVU2168
 7252 0096 3368     		ldr	r3, [r6]
 7253 0098 0BB9     		cbnz	r3, .L801
 7254              		.loc 1 3535 16 discriminator 1 view .LVU2169
 7255 009a 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7256 009c 0BB1     		cbz	r3, .L799
 7257              	.L801:
3536:src/keys.c    **** 	    xeqprog();
 7258              		.loc 1 3536 6 is_stmt 1 view .LVU2170
 7259 009e FFF7FEFF 		bl	xeqprog
 7260              	.LVL625:
 7261              	.L799:
3537:src/keys.c    **** 	}
3538:src/keys.c    ****       }
ARM GAS  /tmp/ccK8gYGY.s 			page 225


3539:src/keys.c    ****       dot(RPN, ShowRPN);
 7262              		.loc 1 3539 7 view .LVU2171
 7263 00a2 954D     		ldr	r5, .L1406+24
 7264 00a4 8D20     		movs	r0, #141
 7265 00a6 2968     		ldr	r1, [r5]
 7266 00a8 FFF7FEFF 		bl	dot
 7267              	.LVL626:
3540:src/keys.c    ****     }
3541:src/keys.c    ****     else {
3542:src/keys.c    ****       // Ignore key-up if no operation was pending
3543:src/keys.c    ****       dot(RPN, ShowRPN);
3544:src/keys.c    **** #ifndef CONSOLE
3545:src/keys.c    ****       if (! State2.disp_temp ) {
3546:src/keys.c    **** 	if (!WasDataEntry) {
3547:src/keys.c    **** 	  // This will get rid of the last displayed op-code
3548:src/keys.c    **** 	  display();
3549:src/keys.c    **** 	}
3550:src/keys.c    **** 	else {
3551:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3552:src/keys.c    **** 	}
3553:src/keys.c    ****       }
3554:src/keys.c    **** #endif
3555:src/keys.c    ****       return;
3556:src/keys.c    ****     }
3557:src/keys.c    **** 
3558:src/keys.c    ****     /*
3559:src/keys.c    ****      *  Turn on the RPN symbol if desired
3560:src/keys.c    ****      */
3561:src/keys.c    ****     if (ShowRPN) {
 7268              		.loc 1 3561 5 view .LVU2172
 7269              		.loc 1 3561 9 is_stmt 0 view .LVU2173
 7270 00ac 2D68     		ldr	r5, [r5]
 7271              		.loc 1 3561 8 view .LVU2174
 7272 00ae 002D     		cmp	r5, #0
 7273 00b0 40F01B82 		bne	.L805
 7274              	.LVL627:
 7275              	.L1309:
3562:src/keys.c    ****       finish_RPN(); // RPN
3563:src/keys.c    ****     }
3564:src/keys.c    ****   }
3565:src/keys.c    ****   else {
3566:src/keys.c    ****     /*
3567:src/keys.c    ****      *  Decode the key 
3568:src/keys.c    ****      */
3569:src/keys.c    ****     //    print_debug (90, cur_shift());
3570:src/keys.c    ****     WasDataEntry = 0;
3571:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
3572:src/keys.c    **** #ifdef DM42
3573:src/keys.c    ****     if (c != K_OP) {
3574:src/keys.c    ****       c = process(c);
3575:src/keys.c    ****       //print_debug (91,cur_shift());
3576:src/keys.c    ****       // returns an op-code or state
3577:src/keys.c    ****     }
3578:src/keys.c    ****     else {
3579:src/keys.c    ****       if (isRARG(nd_opcode)) {
3580:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
3581:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
ARM GAS  /tmp/ccK8gYGY.s 			page 226


3582:src/keys.c    **** 	  c = nd_opcode;
3583:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
3584:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
3585:src/keys.c    **** 	  c = STATE_UNFINISHED;
3586:src/keys.c    **** 	}
3587:src/keys.c    **** 	else {
3588:src/keys.c    **** 	  init_arg(RARG_CMD(nd_opcode));
3589:src/keys.c    **** 	  c = STATE_UNFINISHED;
3590:src/keys.c    **** 	}
3591:src/keys.c    ****       }
3592:src/keys.c    ****       else {
3593:src/keys.c    **** 	c = check_confirm(nd_opcode);
3594:src/keys.c    ****       }      
3595:src/keys.c    ****     }
3596:src/keys.c    **** #else
3597:src/keys.c    ****     c = process(c);		// returns an op-code or state
3598:src/keys.c    **** #endif
3599:src/keys.c    ****     switch (c) {
3600:src/keys.c    ****     case STATE_SST:
3601:src/keys.c    ****       OpCode = c;
3602:src/keys.c    ****       OpCodeDisplayPending = 0;
3603:src/keys.c    ****       xeq_sst_bst(0);
3604:src/keys.c    ****       break;
 7276              		.loc 1 3604 7 is_stmt 1 view .LVU2175
 7277 00b4 3368     		ldr	r3, [r6]
 7278              	.LVL628:
 7279              	.L806:
3605:src/keys.c    **** 
3606:src/keys.c    ****     case STATE_BST:
3607:src/keys.c    ****       xeq_sst_bst(-1);
3608:src/keys.c    ****       break;
3609:src/keys.c    **** 
3610:src/keys.c    ****     case STATE_BACKSPACE:
3611:src/keys.c    ****       if (! State2.runmode)
3612:src/keys.c    **** 	delprog();
3613:src/keys.c    ****       else if (State2.alphas) {
3614:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
3615:src/keys.c    **** 	if (p > Alpha)
3616:src/keys.c    **** 	  *--p = '\0';
3617:src/keys.c    ****       }
3618:src/keys.c    ****       break;
3619:src/keys.c    **** 
3620:src/keys.c    ****     case STATE_RUNNING:
3621:src/keys.c    ****       xeqprog();  // continue execution
3622:src/keys.c    ****       break;
3623:src/keys.c    **** 
3624:src/keys.c    ****     case STATE_WINDOWRIGHT:
3625:src/keys.c    ****     case STATE_WINDOWLEFT:
3626:src/keys.c    ****       if (!is_bad_cmdline())
3627:src/keys.c    **** 	set_window(c);
3628:src/keys.c    ****       break;
3629:src/keys.c    **** 
3630:src/keys.c    ****     case STATE_UNFINISHED:
3631:src/keys.c    ****     case STATE_IGNORE:
3632:src/keys.c    ****       break;
3633:src/keys.c    **** 
3634:src/keys.c    ****     default:
ARM GAS  /tmp/ccK8gYGY.s 			page 227


3635:src/keys.c    ****       if (State2.runmode || NonProgrammable) {
3636:src/keys.c    **** 	NonProgrammable = 0;
3637:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
3638:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
3639:src/keys.c    **** 	    // Data entry key
3640:src/keys.c    **** #ifndef CONSOLE
3641:src/keys.c    **** 	    WasDataEntry = 1;
3642:src/keys.c    **** #endif
3643:src/keys.c    **** 	    cmdline_empty = (CmdLineLength == 0);
3644:src/keys.c    **** 	    xeq(c);
3645:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
3646:src/keys.c    **** 	  }
3647:src/keys.c    **** 	}
3648:src/keys.c    **** 	else {
3649:src/keys.c    **** 	  // Save the op-code for execution on key-up
3650:src/keys.c    **** 	  //print_debug(70,c);
3651:src/keys.c    **** 	  OpCode = c;
3652:src/keys.c    **** 	  OpCodeDisplayPending = 1;
3653:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3654:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
3655:src/keys.c    **** 	}
3656:src/keys.c    ****       }
3657:src/keys.c    ****       else {
3658:src/keys.c    **** 	stoprog(c);
3659:src/keys.c    ****       }
3660:src/keys.c    ****     }
3661:src/keys.c    ****   }
3662:src/keys.c    ****   if (! Running && ! Pause
 7280              		.loc 1 3662 3 view .LVU2176
 7281              		.loc 1 3662 6 is_stmt 0 view .LVU2177
 7282 00b6 002B     		cmp	r3, #0
 7283 00b8 40F04A81 		bne	.L1316
 7284              	.LVL629:
 7285              	.L826:
 7286              		.loc 1 3662 20 discriminator 1 view .LVU2178
 7287 00bc 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7288              		.loc 1 3662 17 discriminator 1 view .LVU2179
 7289 00be 002B     		cmp	r3, #0
 7290 00c0 40F04681 		bne	.L1316
3663:src/keys.c    **** #ifndef CONSOLE
3664:src/keys.c    ****       && ! JustStopped
 7291              		.loc 1 3664 10 view .LVU2180
 7292 00c4 884B     		ldr	r3, .L1406+8
3665:src/keys.c    **** #endif
3666:src/keys.c    ****       && ! JustDisplayed && c != STATE_IGNORE) {
 7293              		.loc 1 3666 10 view .LVU2181
 7294 00c6 8D4E     		ldr	r6, .L1406+28
 7295 00c8 1B68     		ldr	r3, [r3]
 7296 00ca 3268     		ldr	r2, [r6]
 7297              		.loc 1 3666 7 view .LVU2182
 7298 00cc 1343     		orrs	r3, r3, r2
 7299 00ce 16D1     		bne	.L1113
 7300              		.loc 1 3666 26 discriminator 1 view .LVU2183
 7301 00d0 322C     		cmp	r4, #50
 7302 00d2 14D0     		beq	.L1113
 7303              	.LBB839:
3667:src/keys.c    ****     const int orig_WasDataEntry = WasDataEntry;
ARM GAS  /tmp/ccK8gYGY.s 			page 228


 7304              		.loc 1 3667 5 is_stmt 1 view .LVU2184
 7305              		.loc 1 3667 15 is_stmt 0 view .LVU2185
 7306 00d4 DFF84092 		ldr	r9, .L1406+56
 7307 00d8 D9F80070 		ldr	r7, [r9]
 7308              	.LVL630:
3668:src/keys.c    **** 
3669:src/keys.c    ****     WasDataEntry &= !(c == (OP_SPEC | OP_ENTER) || cmdline_empty || State2.invalid_disp);
 7309              		.loc 1 3669 5 is_stmt 1 view .LVU2186
 7310              		.loc 1 3669 21 is_stmt 0 view .LVU2187
 7311 00dc 4CB1     		cbz	r4, .L1115
 7312              		.loc 1 3669 49 discriminator 1 view .LVU2188
 7313 00de 002D     		cmp	r5, #0
 7314 00e0 40F0E583 		bne	.L1168
 7315              		.loc 1 3669 66 discriminator 3 view .LVU2189
 7316 00e4 864B     		ldr	r3, .L1406+32
 7317 00e6 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 7318              		.loc 1 3669 21 discriminator 3 view .LVU2190
 7319 00e8 9807     		lsls	r0, r3, #30
 7320 00ea 00F13384 		bmi	.L1169
 7321 00ee 07F00104 		and	r4, r7, #1
 7322              	.LVL631:
 7323              	.L1115:
 7324              		.loc 1 3669 18 discriminator 8 view .LVU2191
 7325 00f2 C9F80040 		str	r4, [r9]
3670:src/keys.c    ****     display();
 7326              		.loc 1 3670 5 is_stmt 1 discriminator 8 view .LVU2192
 7327 00f6 FFF7FEFF 		bl	display
 7328              	.LVL632:
3671:src/keys.c    ****     WasDataEntry = orig_WasDataEntry;
 7329              		.loc 1 3671 5 discriminator 8 view .LVU2193
 7330              		.loc 1 3671 18 is_stmt 0 discriminator 8 view .LVU2194
 7331 00fa C9F80070 		str	r7, [r9]
 7332              	.LVL633:
 7333              	.L1113:
 7334              		.loc 1 3671 18 discriminator 8 view .LVU2195
 7335              	.LBE839:
3672:src/keys.c    ****   }
3673:src/keys.c    **** 
3674:src/keys.c    ****  no_display:
3675:src/keys.c    ****   JustDisplayed = 0;
 7336              		.loc 1 3675 3 is_stmt 1 view .LVU2196
 7337              		.loc 1 3675 17 is_stmt 0 view .LVU2197
 7338 00fe 0023     		movs	r3, #0
 7339 0100 3360     		str	r3, [r6]
3676:src/keys.c    ****   watchdog();
 7340              		.loc 1 3676 13 is_stmt 1 view .LVU2198
 7341              	.L775:
3677:src/keys.c    **** }
 7342              		.loc 1 3677 1 is_stmt 0 view .LVU2199
 7343 0102 03B0     		add	sp, sp, #12
 7344              		.cfi_remember_state
 7345              		.cfi_def_cfa_offset 36
 7346              		@ sp needed
 7347 0104 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7348              	.LVL634:
 7349              	.L1319:
 7350              		.cfi_restore_state
ARM GAS  /tmp/ccK8gYGY.s 			page 229


3429:src/keys.c    ****       /*
 7351              		.loc 1 3429 5 is_stmt 1 view .LVU2200
3429:src/keys.c    ****       /*
 7352              		.loc 1 3429 9 is_stmt 0 view .LVU2201
 7353 0108 FFF7FEFF 		bl	keyticks
 7354              	.LVL635:
3429:src/keys.c    ****       /*
 7355              		.loc 1 3429 8 view .LVU2202
 7356 010c 0128     		cmp	r0, #1
 7357 010e 1BDD     		ble	.L781
3433:src/keys.c    **** 	/*
 7358              		.loc 1 3433 7 is_stmt 1 view .LVU2203
3433:src/keys.c    **** 	/*
 7359              		.loc 1 3433 18 is_stmt 0 view .LVU2204
 7360 0110 764D     		ldr	r5, .L1406+12
 7361 0112 2868     		ldr	r0, [r5]
3433:src/keys.c    **** 	/*
 7362              		.loc 1 3433 10 view .LVU2205
 7363 0114 98B1     		cbz	r0, .L783
3437:src/keys.c    **** 	  /*
 7364              		.loc 1 3437 2 is_stmt 1 view .LVU2206
3437:src/keys.c    **** 	  /*
 7365              		.loc 1 3437 6 is_stmt 0 view .LVU2207
 7366 0116 7B4B     		ldr	r3, .L1406+36
3437:src/keys.c    **** 	  /*
 7367              		.loc 1 3437 5 view .LVU2208
 7368 0118 1E68     		ldr	r6, [r3]
 7369 011a 002E     		cmp	r6, #0
 7370 011c 00F01582 		beq	.L784
3441:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 7371              		.loc 1 3441 4 is_stmt 1 view .LVU2209
3442:src/keys.c    **** 	    DispMsg = "RUN";
 7372              		.loc 1 3442 7 is_stmt 0 view .LVU2210
 7373 0120 40F23B12 		movw	r2, #315
3441:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 7374              		.loc 1 3441 25 view .LVU2211
 7375 0124 0025     		movs	r5, #0
3442:src/keys.c    **** 	    DispMsg = "RUN";
 7376              		.loc 1 3442 7 view .LVU2212
 7377 0126 9042     		cmp	r0, r2
3441:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 7378              		.loc 1 3441 25 view .LVU2213
 7379 0128 1D60     		str	r5, [r3]
3442:src/keys.c    **** 	    DispMsg = "RUN";
 7380              		.loc 1 3442 4 is_stmt 1 view .LVU2214
3442:src/keys.c    **** 	    DispMsg = "RUN";
 7381              		.loc 1 3442 7 is_stmt 0 view .LVU2215
 7382 012a 40F05F82 		bne	.L785
3443:src/keys.c    **** 	  }
 7383              		.loc 1 3443 6 is_stmt 1 view .LVU2216
3443:src/keys.c    **** 	  }
 7384              		.loc 1 3443 14 is_stmt 0 view .LVU2217
 7385 012e 764B     		ldr	r3, .L1406+40
 7386 0130 764A     		ldr	r2, .L1406+44
 7387 0132 1A60     		str	r2, [r3]
 7388              	.L786:
3449:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
ARM GAS  /tmp/ccK8gYGY.s 			page 230


 7389              		.loc 1 3449 4 is_stmt 1 view .LVU2218
 7390 0134 FFF7FEFF 		bl	display
 7391              	.LVL636:
3450:src/keys.c    **** 	}
 7392              		.loc 1 3450 4 view .LVU2219
3450:src/keys.c    **** 	}
 7393              		.loc 1 3450 12 is_stmt 0 view .LVU2220
 7394 0138 6F4B     		ldr	r3, .L1406+24
 7395 013a 0122     		movs	r2, #1
 7396 013c 1A60     		str	r2, [r3]
 7397              	.L783:
3462:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 7398              		.loc 1 3462 7 is_stmt 1 view .LVU2221
3462:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 7399              		.loc 1 3462 11 is_stmt 0 view .LVU2222
 7400 013e FFF7FEFF 		bl	keyticks
 7401              	.LVL637:
3462:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 7402              		.loc 1 3462 10 view .LVU2223
 7403 0142 0C28     		cmp	r0, #12
 7404 0144 00F3F681 		bgt	.L1324
 7405              	.L781:
3471:src/keys.c    **** 
 7406              		.loc 1 3471 15 is_stmt 1 view .LVU2224
3477:src/keys.c    ****       JustStopped = 0;
 7407              		.loc 1 3477 5 view .LVU2225
3477:src/keys.c    ****       JustStopped = 0;
 7408              		.loc 1 3477 9 is_stmt 0 view .LVU2226
 7409 0148 674D     		ldr	r5, .L1406+8
3477:src/keys.c    ****       JustStopped = 0;
 7410              		.loc 1 3477 8 view .LVU2227
 7411 014a 2B68     		ldr	r3, [r5]
 7412 014c 002B     		cmp	r3, #0
 7413 014e 40F08081 		bne	.L1325
 7414              	.L790:
3485:src/keys.c    ****       return;
 7415              		.loc 1 3485 5 is_stmt 1 view .LVU2228
3485:src/keys.c    ****       return;
 7416              		.loc 1 3485 9 is_stmt 0 view .LVU2229
 7417 0152 684E     		ldr	r6, .L1406+20
 7418 0154 3368     		ldr	r3, [r6]
3485:src/keys.c    ****       return;
 7419              		.loc 1 3485 8 view .LVU2230
 7420 0156 002B     		cmp	r3, #0
 7421 0158 00F05C81 		beq	.L1326
 7422              	.L792:
3518:src/keys.c    ****     {
 7423              		.loc 1 3518 3 is_stmt 1 view .LVU2231
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7424              		.loc 1 3570 5 view .LVU2232
3571:src/keys.c    **** #ifdef DM42
 7425              		.loc 1 3571 13 is_stmt 0 view .LVU2233
 7426 015c 664A     		ldr	r2, .L1406+24
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7427              		.loc 1 3570 18 view .LVU2234
 7428 015e DFF8B891 		ldr	r9, .L1406+56
3571:src/keys.c    **** #ifdef DM42
ARM GAS  /tmp/ccK8gYGY.s 			page 231


 7429              		.loc 1 3571 15 view .LVU2235
 7430 0162 B3FA83F3 		clz	r3, r3
 7431 0166 5B09     		lsrs	r3, r3, #5
3571:src/keys.c    **** #ifdef DM42
 7432              		.loc 1 3571 13 view .LVU2236
 7433 0168 1360     		str	r3, [r2]
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7434              		.loc 1 3570 18 view .LVU2237
 7435 016a 0023     		movs	r3, #0
 7436 016c C9F80030 		str	r3, [r9]
3571:src/keys.c    **** #ifdef DM42
 7437              		.loc 1 3571 5 is_stmt 1 view .LVU2238
3573:src/keys.c    ****       c = process(c);
 7438              		.loc 1 3573 5 view .LVU2239
 7439              	.L778:
3574:src/keys.c    ****       //print_debug (91,cur_shift());
 7440              		.loc 1 3574 7 view .LVU2240
 7441              	.LVL638:
 7442              	.LBB840:
 7443              	.LBI840:
3214:src/keys.c    ****   const enum shifts shift = cur_shift();
 7444              		.loc 1 3214 12 view .LVU2241
 7445              	.LBB841:
3215:src/keys.c    ****   enum catalogues cat;
 7446              		.loc 1 3215 3 view .LVU2242
 7447              	.LBB842:
 7448              	.LBI842:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 7449              		.loc 1 96 13 view .LVU2243
 7450              	.LBB843:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7451              		.loc 1 97 2 view .LVU2244
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7452              		.loc 1 97 18 is_stmt 0 view .LVU2245
 7453 0170 FFF7FEFF 		bl	shift_down
 7454              	.LVL639:
  98:src/keys.c    **** }
 7455              		.loc 1 98 2 is_stmt 1 view .LVU2246
  98:src/keys.c    **** }
 7456              		.loc 1 98 52 is_stmt 0 view .LVU2247
 7457 0174 8346     		mov	fp, r0
 7458 0176 10B9     		cbnz	r0, .L810
 7459 0178 614B     		ldr	r3, .L1406+32
 7460 017a 93F810B0 		ldrb	fp, [r3, #16]	@ zero_extendqisi2
 7461              	.L810:
 7462              	.LVL640:
  98:src/keys.c    **** }
 7463              		.loc 1 98 52 view .LVU2248
 7464              	.LBE843:
 7465              	.LBE842:
3216:src/keys.c    **** 
 7466              		.loc 1 3216 3 is_stmt 1 view .LVU2249
3218:src/keys.c    ****     /*
 7467              		.loc 1 3218 3 view .LVU2250
3218:src/keys.c    ****     /*
 7468              		.loc 1 3218 7 is_stmt 0 view .LVU2251
 7469 017e 3568     		ldr	r5, [r6]
ARM GAS  /tmp/ccK8gYGY.s 			page 232


3218:src/keys.c    ****     /*
 7470              		.loc 1 3218 6 view .LVU2252
 7471 0180 002D     		cmp	r5, #0
 7472 0182 40F0CD80 		bne	.L811
3218:src/keys.c    ****     /*
 7473              		.loc 1 3218 15 view .LVU2253
 7474 0186 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7475 0188 002B     		cmp	r3, #0
 7476 018a 40F0C980 		bne	.L811
3246:src/keys.c    **** #else
 7477              		.loc 1 3246 3 is_stmt 1 view .LVU2254
3246:src/keys.c    **** #else
 7478              		.loc 1 3246 6 is_stmt 0 view .LVU2255
 7479 018e 242C     		cmp	r4, #36
 7480 0190 00F0D582 		beq	.L1327
3263:src/keys.c    **** 		// Avoid an accidental restart with R/S
 7481              		.loc 1 3263 2 is_stmt 1 view .LVU2256
3263:src/keys.c    **** 		// Avoid an accidental restart with R/S
 7482              		.loc 1 3263 5 is_stmt 0 view .LVU2257
 7483 0194 272C     		cmp	r4, #39
 7484 0196 04D1     		bne	.L825
3263:src/keys.c    **** 		// Avoid an accidental restart with R/S
 7485              		.loc 1 3263 15 view .LVU2258
 7486 0198 534B     		ldr	r3, .L1406+8
 7487 019a 1A68     		ldr	r2, [r3]
 7488 019c 002A     		cmp	r2, #0
 7489 019e 40F0C783 		bne	.L1328
 7490              	.L825:
 7491 01a2 DFF85C81 		ldr	r8, .L1406+32
 7492 01a6 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
 7493              	.L818:
3272:src/keys.c    **** 		CmdLineLength = 0;
 7494              		.loc 1 3272 2 is_stmt 1 view .LVU2259
3272:src/keys.c    **** 		CmdLineLength = 0;
 7495              		.loc 1 3272 5 is_stmt 0 view .LVU2260
 7496 01aa 33B1     		cbz	r3, .L828
3272:src/keys.c    **** 		CmdLineLength = 0;
 7497              		.loc 1 3272 26 view .LVU2261
 7498 01ac FFF7FEFF 		bl	keyticks
 7499              	.LVL641:
3272:src/keys.c    **** 		CmdLineLength = 0;
 7500              		.loc 1 3272 23 view .LVU2262
 7501 01b0 1E28     		cmp	r0, #30
3273:src/keys.c    **** 	/*
 7502              		.loc 1 3273 3 is_stmt 1 view .LVU2263
3273:src/keys.c    **** 	/*
 7503              		.loc 1 3273 17 is_stmt 0 view .LVU2264
 7504 01b2 C4BF     		itt	gt
 7505 01b4 0023     		movgt	r3, #0
 7506 01b6 88F81C30 		strbgt	r3, [r8, #28]
 7507              	.L828:
3278:src/keys.c    **** 		return process_confirm((const keycode)c);
 7508              		.loc 1 3278 2 is_stmt 1 view .LVU2265
3278:src/keys.c    **** 		return process_confirm((const keycode)c);
 7509              		.loc 1 3278 6 is_stmt 0 view .LVU2266
 7510 01ba 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
3278:src/keys.c    **** 		return process_confirm((const keycode)c);
ARM GAS  /tmp/ccK8gYGY.s 			page 233


 7511              		.loc 1 3278 5 view .LVU2267
 7512 01be 5A07     		lsls	r2, r3, #29
 7513 01c0 40F05082 		bne	.L1329
3281:src/keys.c    **** 		return process_arg((const keycode)c);
 7514              		.loc 1 3281 2 is_stmt 1 view .LVU2268
3281:src/keys.c    **** 		return process_arg((const keycode)c);
 7515              		.loc 1 3281 6 is_stmt 0 view .LVU2269
 7516 01c4 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
3281:src/keys.c    **** 		return process_arg((const keycode)c);
 7517              		.loc 1 3281 5 view .LVU2270
 7518 01c8 8B06     		lsls	r3, r1, #26
 7519 01ca 00F1D882 		bmi	.L1330
3284:src/keys.c    **** 		return process_gtodot((const keycode)c);
 7520              		.loc 1 3284 2 is_stmt 1 view .LVU2271
3284:src/keys.c    **** 		return process_gtodot((const keycode)c);
 7521              		.loc 1 3284 6 is_stmt 0 view .LVU2272
 7522 01ce 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
3284:src/keys.c    **** 		return process_gtodot((const keycode)c);
 7523              		.loc 1 3284 5 view .LVU2273
 7524 01d2 12F0010A 		ands	r10, r2, #1
 7525 01d6 40F01683 		bne	.L1331
3287:src/keys.c    **** 		return process_hyp((const keycode)c);
 7526              		.loc 1 3287 2 is_stmt 1 view .LVU2274
3287:src/keys.c    **** 		return process_hyp((const keycode)c);
 7527              		.loc 1 3287 5 is_stmt 0 view .LVU2275
 7528 01da 12F02000 		ands	r0, r2, #32
 7529 01de 40F06883 		bne	.L1332
3290:src/keys.c    **** 		return process_test((const keycode)c);
 7530              		.loc 1 3290 2 is_stmt 1 view .LVU2276
3290:src/keys.c    **** 		return process_test((const keycode)c);
 7531              		.loc 1 3290 12 is_stmt 0 view .LVU2277
 7532 01e2 98F80F30 		ldrb	r3, [r8, #15]	@ zero_extendqisi2
3290:src/keys.c    **** 		return process_test((const keycode)c);
 7533              		.loc 1 3290 5 view .LVU2278
 7534 01e6 072B     		cmp	r3, #7
 7535 01e8 40F0D282 		bne	.L1333
3293:src/keys.c    **** 		return process_status((const keycode)c);
 7536              		.loc 1 3293 2 is_stmt 1 view .LVU2279
3293:src/keys.c    **** 		return process_status((const keycode)c);
 7537              		.loc 1 3293 12 is_stmt 0 view .LVU2280
 7538 01ec 98F80C10 		ldrb	r1, [r8, #12]	@ zero_extendqisi2
3293:src/keys.c    **** 		return process_status((const keycode)c);
 7539              		.loc 1 3293 5 view .LVU2281
 7540 01f0 0029     		cmp	r1, #0
 7541 01f2 40F0C783 		bne	.L1334
3299:src/keys.c    **** 		toggle_shift(SHIFT_F);
 7542              		.loc 1 3299 2 is_stmt 1 view .LVU2282
3299:src/keys.c    **** 		toggle_shift(SHIFT_F);
 7543              		.loc 1 3299 5 is_stmt 0 view .LVU2283
 7544 01f6 292C     		cmp	r4, #41
 7545 01f8 00F0D384 		beq	.L1335
3303:src/keys.c    **** 		toggle_shift(SHIFT_G);
 7546              		.loc 1 3303 2 is_stmt 1 view .LVU2284
3303:src/keys.c    **** 		toggle_shift(SHIFT_G);
 7547              		.loc 1 3303 5 is_stmt 0 view .LVU2285
 7548 01fc 2A2C     		cmp	r4, #42
 7549 01fe 00F0DB84 		beq	.L1336
ARM GAS  /tmp/ccK8gYGY.s 			page 234


3307:src/keys.c    **** 		toggle_shift(SHIFT_H);
 7550              		.loc 1 3307 2 is_stmt 1 view .LVU2286
3307:src/keys.c    **** 		toggle_shift(SHIFT_H);
 7551              		.loc 1 3307 5 is_stmt 0 view .LVU2287
 7552 0202 2B2C     		cmp	r4, #43
 7553 0204 00F03D85 		beq	.L1337
3316:src/keys.c    **** 		return process_arrow((const keycode)c);
 7554              		.loc 1 3316 2 is_stmt 1 view .LVU2288
3316:src/keys.c    **** 		return process_arrow((const keycode)c);
 7555              		.loc 1 3316 5 is_stmt 0 view .LVU2289
 7556 0208 5107     		lsls	r1, r2, #29
 7557 020a 00F1E683 		bmi	.L1338
3324:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 7558              		.loc 1 3324 2 is_stmt 1 view .LVU2290
 7559              	.LBB844:
 7560              	.LBB845:
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7561              		.loc 1 276 6 is_stmt 0 view .LVU2291
 7562 020e DFF80CA1 		ldr	r10, .L1406+60
 7563 0212 DAF80000 		ldr	r0, [r10]
 7564 0216 90F8AC17 		ldrb	r1, [r0, #1964]	@ zero_extendqisi2
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7565              		.loc 1 276 5 view .LVU2292
 7566 021a 01F0410C 		and	ip, r1, #65
 7567 021e BCF1410F 		cmp	ip, #65
 7568              	.LBE845:
 7569              	.LBE844:
3324:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 7570              		.loc 1 3324 8 view .LVU2293
 7571 0222 E4B2     		uxtb	r4, r4
 7572              	.LVL642:
 7573              	.LBB867:
 7574              	.LBI844:
 267:src/keys.c    **** {
 7575              		.loc 1 267 24 is_stmt 1 view .LVU2294
 7576              	.LBB852:
 269:src/keys.c    ****   int i, col, max;
 7577              		.loc 1 269 3 view .LVU2295
 270:src/keys.c    ****   const struct _map {
 7578              		.loc 1 270 3 view .LVU2296
 271:src/keys.c    ****     unsigned char key, cat[3];
 7579              		.loc 1 271 3 view .LVU2297
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7580              		.loc 1 276 2 view .LVU2298
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7581              		.loc 1 276 5 is_stmt 0 view .LVU2299
 7582 0224 00F03282 		beq	.L1339
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 7583              		.loc 1 312 3 is_stmt 1 view .LVU2300
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 7584              		.loc 1 312 6 is_stmt 0 view .LVU2301
 7585 0228 212C     		cmp	r4, #33
 7586 022a 00F03985 		beq	.L1340
 315:src/keys.c    ****     /*
 7587              		.loc 1 315 3 is_stmt 1 view .LVU2302
 315:src/keys.c    ****     /*
 7588              		.loc 1 315 23 is_stmt 0 view .LVU2303
ARM GAS  /tmp/ccK8gYGY.s 			page 235


 7589 022e 3849     		ldr	r1, .L1406+48
 7590 0230 D8F81430 		ldr	r3, [r8, #20]
 315:src/keys.c    ****     /*
 7591              		.loc 1 315 6 view .LVU2304
 7592 0234 1942     		tst	r1, r3
 7593 0236 40F0A184 		bne	.L919
 7594              	.LBB846:
 319:src/keys.c    **** #ifdef DM42
 7595              		.loc 1 319 5 is_stmt 1 view .LVU2305
 346:src/keys.c    ****       /*
 7596              		.loc 1 346 5 view .LVU2306
 346:src/keys.c    ****       /*
 7597              		.loc 1 346 8 is_stmt 0 view .LVU2307
 7598 023a 242C     		cmp	r4, #36
 7599 023c 03D1     		bne	.L920
 346:src/keys.c    ****       /*
 7600              		.loc 1 346 18 view .LVU2308
 7601 023e BBF1020F 		cmp	fp, #2
 7602 0242 00F0DE87 		beq	.L1145
 7603              	.L920:
 361:src/keys.c    ****       /*
 7604              		.loc 1 361 5 is_stmt 1 view .LVU2309
 361:src/keys.c    ****       /*
 7605              		.loc 1 361 8 is_stmt 0 view .LVU2310
 7606 0246 BBF1030F 		cmp	fp, #3
 7607 024a 18D1     		bne	.L926
 7608              	.L1125:
 371:src/keys.c    **** #ifndef WINGUI
 7609              		.loc 1 371 5 is_stmt 1 view .LVU2311
 7610              	.LVL643:
 373:src/keys.c    **** #else
 7611              		.loc 1 373 5 view .LVU2312
 373:src/keys.c    **** #else
 7612              		.loc 1 373 23 is_stmt 0 view .LVU2313
 7613 024c 90F8E837 		ldrb	r3, [r0, #2024]	@ zero_extendqisi2
 373:src/keys.c    **** #else
 7614              		.loc 1 373 27 view .LVU2314
 7615 0250 D807     		lsls	r0, r3, #31
 7616 0252 00F1B687 		bmi	.L1146
 373:src/keys.c    **** #else
 7617              		.loc 1 373 73 view .LVU2315
 7618 0256 12F00203 		ands	r3, r2, #2
 7619 025a 01F01E81 		beq	.L1341
 371:src/keys.c    **** #ifndef WINGUI
 7620              		.loc 1 371 8 view .LVU2316
 7621 025e 2D4B     		ldr	r3, .L1406+52
 377:src/keys.c    ****   }
 7622              		.loc 1 377 9 view .LVU2317
 7623 0260 0C21     		movs	r1, #12
 373:src/keys.c    **** #else
 7624              		.loc 1 373 73 view .LVU2318
 7625 0262 4FF0020C 		mov	ip, #2
 7626              	.LVL644:
 7627              	.L921:
 373:src/keys.c    **** #else
 7628              		.loc 1 373 73 view .LVU2319
 7629              	.LBE846:
ARM GAS  /tmp/ccK8gYGY.s 			page 236


 421:src/keys.c    ****     if (cp->key == c) {
 7630              		.loc 1 421 3 is_stmt 1 view .LVU2320
 421:src/keys.c    ****     if (cp->key == c) {
 7631              		.loc 1 421 15 view .LVU2321
 7632 0266 181F     		subs	r0, r3, #4
 7633 0268 00EB8100 		add	r0, r0, r1, lsl #2
 7634              	.LBB847:
 373:src/keys.c    **** #else
 7635              		.loc 1 373 73 is_stmt 0 view .LVU2322
 7636 026c 0421     		movs	r1, #4
 7637              	.LVL645:
 373:src/keys.c    **** #else
 7638              		.loc 1 373 73 view .LVU2323
 7639 026e 01E0     		b	.L927
 7640              	.LVL646:
 7641              	.L1343:
 373:src/keys.c    **** #else
 7642              		.loc 1 373 73 view .LVU2324
 7643 0270 13F8041F 		ldrb	r1, [r3, #4]!	@ zero_extendqisi2
 7644              	.LVL647:
 7645              	.L927:
 373:src/keys.c    **** #else
 7646              		.loc 1 373 73 view .LVU2325
 7647              	.LBE847:
 422:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 7648              		.loc 1 422 5 is_stmt 1 view .LVU2326
 421:src/keys.c    ****     if (cp->key == c) {
 7649              		.loc 1 421 24 view .LVU2327
 421:src/keys.c    ****     if (cp->key == c) {
 7650              		.loc 1 421 15 view .LVU2328
 422:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 7651              		.loc 1 422 8 is_stmt 0 view .LVU2329
 7652 0274 8C42     		cmp	r4, r1
 7653 0276 00F0AA84 		beq	.L1342
 421:src/keys.c    ****     if (cp->key == c) {
 7654              		.loc 1 421 3 view .LVU2330
 7655 027a 8342     		cmp	r3, r0
 7656 027c F8D1     		bne	.L1343
 7657              	.LVL648:
 7658              	.L926:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7659              		.loc 1 427 3 is_stmt 1 view .LVU2331
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7660              		.loc 1 427 6 is_stmt 0 view .LVU2332
 7661 027e 1107     		lsls	r1, r2, #28
 7662 0280 00F1AF84 		bmi	.L932
 7663              	.LVL649:
 7664              	.L930:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7665              		.loc 1 427 6 view .LVU2333
 7666              	.LBE852:
 7667              	.LBE867:
3339:src/keys.c    **** 		return process_labellist((const keycode)c);
 7668              		.loc 1 3339 2 is_stmt 1 view .LVU2334
3339:src/keys.c    **** 		return process_labellist((const keycode)c);
 7669              		.loc 1 3339 6 is_stmt 0 view .LVU2335
 7670 0284 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
ARM GAS  /tmp/ccK8gYGY.s 			page 237


3339:src/keys.c    **** 		return process_labellist((const keycode)c);
 7671              		.loc 1 3339 5 view .LVU2336
 7672 0288 5907     		lsls	r1, r3, #29
 7673 028a 00F16C85 		bmi	.L1344
3342:src/keys.c    **** 		return process_registerlist((const keycode)c);
 7674              		.loc 1 3342 2 is_stmt 1 view .LVU2337
3342:src/keys.c    **** 		return process_registerlist((const keycode)c);
 7675              		.loc 1 3342 5 is_stmt 0 view .LVU2338
 7676 028e 1807     		lsls	r0, r3, #28
 7677 0290 00F1B286 		bmi	.L1345
3345:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 7678              		.loc 1 3345 2 is_stmt 1 view .LVU2339
3345:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 7679              		.loc 1 3345 5 is_stmt 0 view .LVU2340
 7680 0294 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
 7681 0298 002B     		cmp	r3, #0
 7682 029a 40F09887 		bne	.L1346
3348:src/keys.c    **** #ifndef INFRARED
 7683              		.loc 1 3348 2 is_stmt 1 view .LVU2341
3348:src/keys.c    **** #ifndef INFRARED
 7684              		.loc 1 3348 6 is_stmt 0 view .LVU2342
 7685 029e 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3348:src/keys.c    **** #ifndef INFRARED
 7686              		.loc 1 3348 5 view .LVU2343
 7687 02a2 1907     		lsls	r1, r3, #28
 7688 02a4 00F1B687 		bmi	.L1347
3361:src/keys.c    **** 		return process_c_lock ((const keycode)c);
 7689              		.loc 1 3361 2 is_stmt 1 view .LVU2344
3361:src/keys.c    **** 		return process_c_lock ((const keycode)c);
 7690              		.loc 1 3361 6 is_stmt 0 view .LVU2345
 7691 02a8 DAF80030 		ldr	r3, [r10]
 7692 02ac 93F8AC37 		ldrb	r3, [r3, #1964]	@ zero_extendqisi2
3361:src/keys.c    **** 		return process_c_lock ((const keycode)c);
 7693              		.loc 1 3361 5 view .LVU2346
 7694 02b0 03F04103 		and	r3, r3, #65
 7695 02b4 412B     		cmp	r3, #65
 7696 02b6 01F06081 		beq	.L1348
3365:src/keys.c    **** 		return process_cmplx((const keycode)c);
 7697              		.loc 1 3365 2 is_stmt 1 view .LVU2347
3365:src/keys.c    **** 		return process_cmplx((const keycode)c);
 7698              		.loc 1 3365 5 is_stmt 0 view .LVU2348
 7699 02ba 9507     		lsls	r5, r2, #30
 7700 02bc 01F10980 		bmi	.L1308
3368:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 7701              		.loc 1 3368 3 is_stmt 1 view .LVU2349
3368:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 7702              		.loc 1 3368 24 is_stmt 0 view .LVU2350
 7703 02c0 0BF1FF33 		add	r3, fp, #-1
3368:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 7704              		.loc 1 3368 6 view .LVU2351
 7705 02c4 DBB2     		uxtb	r3, r3
 7706 02c6 012B     		cmp	r3, #1
 7707 02c8 41F20481 		bls	.L1306
3370:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 7708              		.loc 1 3370 3 is_stmt 1 view .LVU2352
3370:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 7709              		.loc 1 3370 6 is_stmt 0 view .LVU2353
ARM GAS  /tmp/ccK8gYGY.s 			page 238


 7710 02cc BBF1030F 		cmp	fp, #3
3371:src/keys.c    **** 		// print_debug (3, c);
 7711              		.loc 1 3371 11 view .LVU2354
 7712 02d0 2046     		mov	r0, r4
3370:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 7713              		.loc 1 3370 6 view .LVU2355
 7714 02d2 01F08180 		beq	.L1349
 7715              	.LVL650:
 7716              	.L1305:
 7717              	.LBB868:
 7718              	.LBB869:
1440:src/keys.c    ****    case (K_CMPLX):
 7719              		.loc 1 1440 13 view .LVU2356
 7720 02d6 FFF7FEFF 		bl	process_normal
 7721              	.LVL651:
 7722 02da 0446     		mov	r4, r0
 7723 02dc 80E0     		b	.L840
 7724              	.L1407:
 7725 02de 00BF     		.align	2
 7726              	.L1406:
 7727 02e0 00000000 		.word	.LANCHOR18
 7728 02e4 00000000 		.word	Pause
 7729 02e8 00000000 		.word	JustStopped
 7730 02ec 00000000 		.word	OpCode
 7731 02f0 00000000 		.word	GoFast
 7732 02f4 00000000 		.word	Running
 7733 02f8 00000000 		.word	ShowRPN
 7734 02fc 00000000 		.word	JustDisplayed
 7735 0300 00000000 		.word	StateWhileOn
 7736 0304 00000000 		.word	OpCodeDisplayPending
 7737 0308 00000000 		.word	DispMsg
 7738 030c 00000000 		.word	.LC0
 7739 0310 00080800 		.word	526336
 7740 0314 00000000 		.word	.LANCHOR17
 7741 0318 00000000 		.word	WasDataEntry
 7742 031c 00000000 		.word	main_ram
 7743              	.LVL652:
 7744              	.L811:
1440:src/keys.c    ****    case (K_CMPLX):
 7745              		.loc 1 1440 13 view .LVU2357
 7746              	.LBE869:
 7747              	.LBE868:
3222:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 7748              		.loc 1 3222 5 is_stmt 1 view .LVU2358
3222:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 7749              		.loc 1 3222 8 is_stmt 0 view .LVU2359
 7750 0320 242C     		cmp	r4, #36
 7751 0322 00F09D80 		beq	.L813
3222:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 7752              		.loc 1 3222 18 view .LVU2360
 7753 0326 272C     		cmp	r4, #39
 7754 0328 00F09A80 		beq	.L813
3232:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 7755              		.loc 1 3232 5 is_stmt 1 view .LVU2361
3232:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 7756              		.loc 1 3232 8 is_stmt 0 view .LVU2362
 7757 032c 622C     		cmp	r4, #98
ARM GAS  /tmp/ccK8gYGY.s 			page 239


 7758 032e 07D0     		beq	.L816
3233:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7759              		.loc 1 3233 7 is_stmt 1 view .LVU2363
3233:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7760              		.loc 1 3233 15 is_stmt 0 view .LVU2364
 7761 0330 B74B     		ldr	r3, .L1408
3235:src/keys.c    ****     }
 7762              		.loc 1 3235 14 view .LVU2365
 7763 0332 B84A     		ldr	r2, .L1408+4
3233:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7764              		.loc 1 3233 17 view .LVU2366
 7765 0334 0134     		adds	r4, r4, #1
 7766              	.LVL653:
3235:src/keys.c    ****     }
 7767              		.loc 1 3235 14 view .LVU2367
 7768 0336 0121     		movs	r1, #1
3233:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7769              		.loc 1 3233 15 view .LVU2368
 7770 0338 DC74     		strb	r4, [r3, #19]
3234:src/keys.c    ****       GoFast = 1;
 7771              		.loc 1 3234 7 is_stmt 1 view .LVU2369
3234:src/keys.c    ****       GoFast = 1;
 7772              		.loc 1 3234 13 is_stmt 0 view .LVU2370
 7773 033a 0023     		movs	r3, #0
3235:src/keys.c    ****     }
 7774              		.loc 1 3235 14 view .LVU2371
 7775 033c 1160     		str	r1, [r2]
3234:src/keys.c    ****       GoFast = 1;
 7776              		.loc 1 3234 13 view .LVU2372
 7777 033e 3B70     		strb	r3, [r7]
3235:src/keys.c    ****     }
 7778              		.loc 1 3235 7 is_stmt 1 view .LVU2373
 7779              	.LVL654:
 7780              	.L816:
3235:src/keys.c    ****     }
 7781              		.loc 1 3235 7 is_stmt 0 view .LVU2374
 7782              	.LBE841:
 7783              	.LBE840:
3621:src/keys.c    ****       break;
 7784              		.loc 1 3621 7 is_stmt 1 view .LVU2375
 7785 0340 FFF7FEFF 		bl	xeqprog
 7786              	.LVL655:
3622:src/keys.c    **** 
 7787              		.loc 1 3622 7 view .LVU2376
 7788 0344 3368     		ldr	r3, [r6]
3409:src/keys.c    ****   //print_debug(60,c);
 7789              		.loc 1 3409 7 is_stmt 0 view .LVU2377
 7790 0346 0025     		movs	r5, #0
3622:src/keys.c    **** 
 7791              		.loc 1 3622 7 view .LVU2378
 7792 0348 3124     		movs	r4, #49
 7793              	.LVL656:
3662:src/keys.c    **** #ifndef CONSOLE
 7794              		.loc 1 3662 3 is_stmt 1 view .LVU2379
3662:src/keys.c    **** #ifndef CONSOLE
 7795              		.loc 1 3662 6 is_stmt 0 view .LVU2380
 7796 034a 002B     		cmp	r3, #0
ARM GAS  /tmp/ccK8gYGY.s 			page 240


 7797 034c 3FF4B6AE 		beq	.L826
 7798              	.L1316:
3662:src/keys.c    **** #ifndef CONSOLE
 7799              		.loc 1 3662 6 view .LVU2381
 7800 0350 B14E     		ldr	r6, .L1408+8
3675:src/keys.c    ****   watchdog();
 7801              		.loc 1 3675 3 is_stmt 1 view .LVU2382
3675:src/keys.c    ****   watchdog();
 7802              		.loc 1 3675 17 is_stmt 0 view .LVU2383
 7803 0352 0023     		movs	r3, #0
 7804 0354 3360     		str	r3, [r6]
3676:src/keys.c    **** }
 7805              		.loc 1 3676 13 is_stmt 1 view .LVU2384
 7806 0356 D4E6     		b	.L775
 7807              	.LVL657:
 7808              	.L1318:
3421:src/keys.c    ****     }
 7809              		.loc 1 3421 7 view .LVU2385
3571:src/keys.c    **** #ifdef DM42
 7810              		.loc 1 3571 15 is_stmt 0 view .LVU2386
 7811 0358 B04E     		ldr	r6, .L1408+12
3571:src/keys.c    **** #ifdef DM42
 7812              		.loc 1 3571 13 view .LVU2387
 7813 035a B149     		ldr	r1, .L1408+16
3571:src/keys.c    **** #ifdef DM42
 7814              		.loc 1 3571 15 view .LVU2388
 7815 035c 3368     		ldr	r3, [r6]
3421:src/keys.c    ****     }
 7816              		.loc 1 3421 14 view .LVU2389
 7817 035e B14A     		ldr	r2, .L1408+20
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7818              		.loc 1 3570 18 view .LVU2390
 7819 0360 DFF8DC92 		ldr	r9, .L1408+48
3571:src/keys.c    **** #ifdef DM42
 7820              		.loc 1 3571 15 view .LVU2391
 7821 0364 B3FA83F3 		clz	r3, r3
 7822 0368 5B09     		lsrs	r3, r3, #5
3571:src/keys.c    **** #ifdef DM42
 7823              		.loc 1 3571 13 view .LVU2392
 7824 036a 0B60     		str	r3, [r1]
3421:src/keys.c    ****     }
 7825              		.loc 1 3421 14 view .LVU2393
 7826 036c 0023     		movs	r3, #0
 7827 036e 1360     		str	r3, [r2]
3518:src/keys.c    ****     {
 7828              		.loc 1 3518 3 is_stmt 1 view .LVU2394
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7829              		.loc 1 3570 5 view .LVU2395
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7830              		.loc 1 3570 18 is_stmt 0 view .LVU2396
 7831 0370 C9F80030 		str	r3, [r9]
3571:src/keys.c    **** #ifdef DM42
 7832              		.loc 1 3571 5 is_stmt 1 view .LVU2397
3573:src/keys.c    ****       c = process(c);
 7833              		.loc 1 3573 5 view .LVU2398
 7834 0374 FCE6     		b	.L778
 7835              	.L796:
ARM GAS  /tmp/ccK8gYGY.s 			page 241


3573:src/keys.c    ****       c = process(c);
 7836              		.loc 1 3573 5 is_stmt 0 view .LVU2399
 7837 0376 A94E     		ldr	r6, .L1408+12
3571:src/keys.c    **** #ifdef DM42
 7838              		.loc 1 3571 13 view .LVU2400
 7839 0378 A949     		ldr	r1, .L1408+16
 7840 037a 3368     		ldr	r3, [r6]
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7841              		.loc 1 3570 5 is_stmt 1 view .LVU2401
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7842              		.loc 1 3570 18 is_stmt 0 view .LVU2402
 7843 037c DFF8C092 		ldr	r9, .L1408+48
3571:src/keys.c    **** #ifdef DM42
 7844              		.loc 1 3571 15 view .LVU2403
 7845 0380 B3FA83F2 		clz	r2, r3
 7846 0384 5209     		lsrs	r2, r2, #5
3573:src/keys.c    ****       c = process(c);
 7847              		.loc 1 3573 8 view .LVU2404
 7848 0386 342C     		cmp	r4, #52
3571:src/keys.c    **** #ifdef DM42
 7849              		.loc 1 3571 13 view .LVU2405
 7850 0388 0A60     		str	r2, [r1]
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7851              		.loc 1 3570 18 view .LVU2406
 7852 038a C9F80050 		str	r5, [r9]
3571:src/keys.c    **** #ifdef DM42
 7853              		.loc 1 3571 5 is_stmt 1 view .LVU2407
3573:src/keys.c    ****       c = process(c);
 7854              		.loc 1 3573 5 view .LVU2408
3573:src/keys.c    ****       c = process(c);
 7855              		.loc 1 3573 8 is_stmt 0 view .LVU2409
 7856 038e 7FF4EFAE 		bne	.L778
3579:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7857              		.loc 1 3579 7 is_stmt 1 view .LVU2410
3579:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7858              		.loc 1 3579 11 is_stmt 0 view .LVU2411
 7859 0392 A54A     		ldr	r2, .L1408+24
 7860 0394 1068     		ldr	r0, [r2]
3579:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7861              		.loc 1 3579 10 view .LVU2412
 7862 0396 10F47042 		ands	r2, r0, #61440
 7863 039a 1BD0     		beq	.L1092
3579:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7864              		.loc 1 3579 11 discriminator 1 view .LVU2413
 7865 039c B2F5704F 		cmp	r2, #61440
 7866 03a0 00F0A880 		beq	.L1093
 7867              	.LBB1464:
3580:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 7868              		.loc 1 3580 2 is_stmt 1 view .LVU2414
3580:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 7869              		.loc 1 3580 28 is_stmt 0 view .LVU2415
 7870 03a4 C0F30722 		ubfx	r2, r0, #8, #8
 7871 03a8 A2F12004 		sub	r4, r2, #32
 7872              	.LVL658:
3580:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 7873              		.loc 1 3580 28 view .LVU2416
 7874 03ac E4B2     		uxtb	r4, r4
ARM GAS  /tmp/ccK8gYGY.s 			page 242


 7875              	.LVL659:
3581:src/keys.c    **** 	  c = nd_opcode;
 7876              		.loc 1 3581 2 is_stmt 1 view .LVU2417
3581:src/keys.c    **** 	  c = nd_opcode;
 7877              		.loc 1 3581 5 is_stmt 0 view .LVU2418
 7878 03ae 012C     		cmp	r4, #1
 7879 03b0 35D9     		bls	.L1094
3581:src/keys.c    **** 	  c = nd_opcode;
 7880              		.loc 1 3581 53 discriminator 1 view .LVU2419
 7881 03b2 6C2C     		cmp	r4, #108
 7882 03b4 33D0     		beq	.L1094
3581:src/keys.c    **** 	  c = nd_opcode;
 7883              		.loc 1 3581 74 discriminator 2 view .LVU2420
 7884 03b6 242C     		cmp	r4, #36
 7885 03b8 31D0     		beq	.L1094
3583:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 7886              		.loc 1 3583 7 is_stmt 1 view .LVU2421
3583:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 7887              		.loc 1 3583 32 is_stmt 0 view .LVU2422
 7888 03ba A4F12D01 		sub	r1, r4, #45
3583:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 7889              		.loc 1 3583 10 view .LVU2423
 7890 03be 0629     		cmp	r1, #6
 7891 03c0 00F26982 		bhi	.L1096
3584:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7892              		.loc 1 3584 4 is_stmt 1 view .LVU2424
3584:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7893              		.loc 1 3584 25 is_stmt 0 view .LVU2425
 7894 03c4 4D3A     		subs	r2, r2, #77
3584:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7895              		.loc 1 3584 16 view .LVU2426
 7896 03c6 88F80F20 		strb	r2, [r8, #15]
3585:src/keys.c    **** 	}
 7897              		.loc 1 3585 4 is_stmt 1 view .LVU2427
 7898              	.LVL660:
3585:src/keys.c    **** 	}
 7899              		.loc 1 3585 4 is_stmt 0 view .LVU2428
 7900              	.LBE1464:
3599:src/keys.c    ****     case STATE_SST:
 7901              		.loc 1 3599 5 is_stmt 1 view .LVU2429
 7902              	.LBB1467:
3585:src/keys.c    **** 	}
 7903              		.loc 1 3585 6 is_stmt 0 view .LVU2430
 7904 03ca 3324     		movs	r4, #51
 7905              	.LVL661:
3585:src/keys.c    **** 	}
 7906              		.loc 1 3585 6 view .LVU2431
 7907 03cc 73E6     		b	.L806
 7908              	.LVL662:
 7909              	.L1317:
3585:src/keys.c    **** 	}
 7910              		.loc 1 3585 6 view .LVU2432
 7911              	.LBE1467:
3416:src/keys.c    ****     }
 7912              		.loc 1 3416 7 is_stmt 1 view .LVU2433
 7913 03ce FFF7FEFF 		bl	xeq_xrom
 7914              	.LVL663:
ARM GAS  /tmp/ccK8gYGY.s 			page 243


3416:src/keys.c    ****     }
 7915              		.loc 1 3416 7 is_stmt 0 view .LVU2434
 7916 03d2 21E6     		b	.L776
 7917              	.L1092:
3593:src/keys.c    ****       }      
 7918              		.loc 1 3593 2 is_stmt 1 view .LVU2435
 7919              	.LBB1468:
 7920              	.LBB1469:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 7921              		.loc 1 715 5 is_stmt 0 view .LVU2436
 7922 03d4 C0F30723 		ubfx	r3, r0, #8, #8
 7923 03d8 012B     		cmp	r3, #1
 7924              	.LBE1469:
 7925              	.LBE1468:
3593:src/keys.c    ****       }      
 7926              		.loc 1 3593 6 view .LVU2437
 7927 03da 0446     		mov	r4, r0
 7928              	.LVL664:
 7929              	.LBB1473:
 7930              	.LBI1468:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 7931              		.loc 1 714 12 is_stmt 1 view .LVU2438
 7932              	.LBB1470:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 7933              		.loc 1 715 2 view .LVU2439
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 7934              		.loc 1 715 5 is_stmt 0 view .LVU2440
 7935 03dc 00F08F80 		beq	.L1126
 7936              	.LVL665:
 7937              	.L840:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 7938              		.loc 1 715 5 view .LVU2441
 7939              	.LBE1470:
 7940              	.LBE1473:
3599:src/keys.c    ****     case STATE_SST:
 7941              		.loc 1 3599 5 is_stmt 1 view .LVU2442
 7942 03e0 A4F12B03 		sub	r3, r4, #43
 7943 03e4 082B     		cmp	r3, #8
 7944 03e6 00F2C080 		bhi	.L1098
 7945 03ea 01A2     		adr	r2, .L1100
 7946 03ec 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7947              		.p2align 2
 7948              	.L1100:
 7949 03f0 3F040000 		.word	.L1101+1
 7950 03f4 3F040000 		.word	.L1101+1
 7951 03f8 6B050000 		.word	.L1098+1
 7952 03fc C5040000 		.word	.L1030+1
 7953 0400 B5040000 		.word	.L1026+1
 7954 0404 9B040000 		.word	.L1023+1
 7955 0408 41030000 		.word	.L816+1
 7956 040c 39040000 		.word	.L1310+1
 7957 0410 39040000 		.word	.L1310+1
 7958              		.p2align 1
 7959              	.L1326:
3485:src/keys.c    ****       return;
 7960              		.loc 1 3485 21 is_stmt 0 discriminator 1 view .LVU2443
 7961 0414 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
ARM GAS  /tmp/ccK8gYGY.s 			page 244


3485:src/keys.c    ****       return;
 7962              		.loc 1 3485 18 discriminator 1 view .LVU2444
 7963 0416 002A     		cmp	r2, #0
 7964 0418 7FF4A0AE 		bne	.L792
 7965 041c 71E6     		b	.L775
 7966              	.LVL666:
 7967              	.L1094:
 7968              	.LBB1474:
3582:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
 7969              		.loc 1 3582 4 is_stmt 1 view .LVU2445
 7970 041e 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
3582:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
 7971              		.loc 1 3582 6 is_stmt 0 view .LVU2446
 7972 0422 0446     		mov	r4, r0
 7973              	.LVL667:
 7974              	.L867:
3582:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
 7975              		.loc 1 3582 6 view .LVU2447
 7976              	.LBE1474:
3635:src/keys.c    **** 	NonProgrammable = 0;
 7977              		.loc 1 3635 7 is_stmt 1 view .LVU2448
3635:src/keys.c    **** 	NonProgrammable = 0;
 7978              		.loc 1 3635 10 is_stmt 0 view .LVU2449
 7979 0424 4A06     		lsls	r2, r1, #25
 7980 0426 00F11181 		bmi	.L1350
 7981              	.L1121:
3635:src/keys.c    **** 	NonProgrammable = 0;
 7982              		.loc 1 3635 26 view .LVU2450
 7983 042a 804B     		ldr	r3, .L1408+28
 7984 042c 1A68     		ldr	r2, [r3]
 7985 042e 002A     		cmp	r2, #0
 7986 0430 41F0A381 		bne	.L1351
 7987              	.LVL668:
 7988              	.L1110:
3658:src/keys.c    ****       }
 7989              		.loc 1 3658 2 is_stmt 1 view .LVU2451
 7990 0434 FFF7FEFF 		bl	stoprog
 7991              	.LVL669:
 7992              	.L1310:
 7993 0438 3368     		ldr	r3, [r6]
3409:src/keys.c    ****   //print_debug(60,c);
 7994              		.loc 1 3409 7 is_stmt 0 view .LVU2452
 7995 043a 0025     		movs	r5, #0
 7996 043c 3BE6     		b	.L806
 7997              	.LVL670:
 7998              	.L1101:
3626:src/keys.c    **** 	set_window(c);
 7999              		.loc 1 3626 7 is_stmt 1 view .LVU2453
3626:src/keys.c    **** 	set_window(c);
 8000              		.loc 1 3626 12 is_stmt 0 view .LVU2454
 8001 043e FFF7FEFF 		bl	is_bad_cmdline
 8002              	.LVL671:
3626:src/keys.c    **** 	set_window(c);
 8003              		.loc 1 3626 10 view .LVU2455
 8004 0442 0546     		mov	r5, r0
 8005 0444 0028     		cmp	r0, #0
 8006 0446 F7D1     		bne	.L1310
ARM GAS  /tmp/ccK8gYGY.s 			page 245


3627:src/keys.c    ****       break;
 8007              		.loc 1 3627 2 is_stmt 1 view .LVU2456
 8008 0448 2046     		mov	r0, r4
 8009 044a FFF7FEFF 		bl	set_window
 8010              	.LVL672:
 8011 044e 3368     		ldr	r3, [r6]
 8012 0450 31E6     		b	.L806
 8013              	.L1325:
3477:src/keys.c    ****       JustStopped = 0;
 8014              		.loc 1 3477 25 is_stmt 0 discriminator 1 view .LVU2457
 8015 0452 FFF7FEFF 		bl	is_key_pressed
 8016              	.LVL673:
3477:src/keys.c    ****       JustStopped = 0;
 8017              		.loc 1 3477 21 discriminator 1 view .LVU2458
 8018 0456 0028     		cmp	r0, #0
 8019 0458 7FF47BAE 		bne	.L790
3478:src/keys.c    ****     }
 8020              		.loc 1 3478 7 is_stmt 1 view .LVU2459
3478:src/keys.c    ****     }
 8021              		.loc 1 3478 19 is_stmt 0 view .LVU2460
 8022 045c 2860     		str	r0, [r5]
 8023 045e 78E6     		b	.L790
 8024              	.LVL674:
 8025              	.L813:
 8026              	.LBB1475:
 8027              	.LBB1412:
3223:src/keys.c    **** 	set_pc(0);
 8028              		.loc 1 3223 7 is_stmt 1 view .LVU2461
3223:src/keys.c    **** 	set_pc(0);
 8029              		.loc 1 3223 11 is_stmt 0 view .LVU2462
 8030 0460 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
3223:src/keys.c    **** 	set_pc(0);
 8031              		.loc 1 3223 10 view .LVU2463
 8032 0462 4BB1     		cbz	r3, .L815
3223:src/keys.c    **** 	set_pc(0);
 8033              		.loc 1 3223 20 view .LVU2464
 8034 0464 724B     		ldr	r3, .L1408+32
 8035 0466 1B68     		ldr	r3, [r3]
 8036 0468 B3F8E037 		ldrh	r3, [r3, #2016]
3223:src/keys.c    **** 	set_pc(0);
 8037              		.loc 1 3223 17 view .LVU2465
 8038 046c 9B0B     		lsrs	r3, r3, #14
 8039 046e 032B     		cmp	r3, #3
 8040 0470 02D1     		bne	.L815
3224:src/keys.c    ****       Pause = 0;
 8041              		.loc 1 3224 2 is_stmt 1 view .LVU2466
 8042 0472 0020     		movs	r0, #0
 8043 0474 FFF7FEFF 		bl	set_pc
 8044              	.LVL675:
 8045              	.L815:
3225:src/keys.c    ****       xeq_xrom();
 8046              		.loc 1 3225 7 view .LVU2467
3225:src/keys.c    ****       xeq_xrom();
 8047              		.loc 1 3225 13 is_stmt 0 view .LVU2468
 8048 0478 0025     		movs	r5, #0
 8049 047a 3D70     		strb	r5, [r7]
3226:src/keys.c    ****       set_running_off();
ARM GAS  /tmp/ccK8gYGY.s 			page 246


 8050              		.loc 1 3226 7 is_stmt 1 view .LVU2469
 8051 047c FFF7FEFF 		bl	xeq_xrom
 8052              	.LVL676:
3227:src/keys.c    ****       DispMsg = "Stopped";
 8053              		.loc 1 3227 7 view .LVU2470
 8054 0480 FFF7FEFF 		bl	set_running_off
 8055              	.LVL677:
3228:src/keys.c    ****       State2.disp_freeze = 0;
 8056              		.loc 1 3228 7 view .LVU2471
3229:src/keys.c    ****       return STATE_UNFINISHED;
 8057              		.loc 1 3229 26 is_stmt 0 view .LVU2472
 8058 0484 624A     		ldr	r2, .L1408
3228:src/keys.c    ****       State2.disp_freeze = 0;
 8059              		.loc 1 3228 15 view .LVU2473
 8060 0486 6B48     		ldr	r0, .L1408+36
3229:src/keys.c    ****       return STATE_UNFINISHED;
 8061              		.loc 1 3229 26 view .LVU2474
 8062 0488 D17D     		ldrb	r1, [r2, #23]	@ zero_extendqisi2
3228:src/keys.c    ****       State2.disp_freeze = 0;
 8063              		.loc 1 3228 15 view .LVU2475
 8064 048a 6B4C     		ldr	r4, .L1408+40
 8065              	.LVL678:
3228:src/keys.c    ****       State2.disp_freeze = 0;
 8066              		.loc 1 3228 15 view .LVU2476
 8067 048c 0460     		str	r4, [r0]
3229:src/keys.c    ****       return STATE_UNFINISHED;
 8068              		.loc 1 3229 7 is_stmt 1 view .LVU2477
3229:src/keys.c    ****       return STATE_UNFINISHED;
 8069              		.loc 1 3229 26 is_stmt 0 view .LVU2478
 8070 048e 65F30411 		bfi	r1, r5, #4, #1
 8071 0492 3368     		ldr	r3, [r6]
 8072 0494 D175     		strb	r1, [r2, #23]
3230:src/keys.c    ****     }
 8073              		.loc 1 3230 7 is_stmt 1 view .LVU2479
3230:src/keys.c    ****     }
 8074              		.loc 1 3230 14 is_stmt 0 view .LVU2480
 8075 0496 3324     		movs	r4, #51
 8076 0498 0DE6     		b	.L806
 8077              	.LVL679:
 8078              	.L1023:
3230:src/keys.c    ****     }
 8079              		.loc 1 3230 14 view .LVU2481
 8080              	.LBE1412:
 8081              	.LBE1475:
3611:src/keys.c    **** 	delprog();
 8082              		.loc 1 3611 7 is_stmt 1 view .LVU2482
3611:src/keys.c    **** 	delprog();
 8083              		.loc 1 3611 11 is_stmt 0 view .LVU2483
 8084 049a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3611:src/keys.c    **** 	delprog();
 8085              		.loc 1 3611 10 view .LVU2484
 8086 049e 13F04005 		ands	r5, r3, #64
 8087 04a2 00F09E80 		beq	.L1352
3613:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 8088              		.loc 1 3613 12 is_stmt 1 view .LVU2485
3613:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 8089              		.loc 1 3613 15 is_stmt 0 view .LVU2486
ARM GAS  /tmp/ccK8gYGY.s 			page 247


 8090 04a6 13F00805 		ands	r5, r3, #8
 8091 04aa 40F08180 		bne	.L1103
 8092              	.L1311:
 8093 04ae 3368     		ldr	r3, [r6]
 8094              	.LBB1476:
3616:src/keys.c    ****       }
 8095              		.loc 1 3616 9 view .LVU2487
 8096 04b0 3024     		movs	r4, #48
 8097 04b2 00E6     		b	.L806
 8098              	.L1026:
 8099              	.LBE1476:
3607:src/keys.c    ****       break;
 8100              		.loc 1 3607 7 is_stmt 1 view .LVU2488
 8101 04b4 4FF0FF30 		mov	r0, #-1
 8102 04b8 FFF7FEFF 		bl	xeq_sst_bst
 8103              	.LVL680:
3608:src/keys.c    **** 
 8104              		.loc 1 3608 7 view .LVU2489
3409:src/keys.c    ****   //print_debug(60,c);
 8105              		.loc 1 3409 7 is_stmt 0 view .LVU2490
 8106 04bc 0025     		movs	r5, #0
 8107 04be 3368     		ldr	r3, [r6]
3608:src/keys.c    **** 
 8108              		.loc 1 3608 7 view .LVU2491
 8109 04c0 2F24     		movs	r4, #47
 8110 04c2 F8E5     		b	.L806
 8111              	.L1030:
3601:src/keys.c    ****       OpCodeDisplayPending = 0;
 8112              		.loc 1 3601 7 is_stmt 1 view .LVU2492
3601:src/keys.c    ****       OpCodeDisplayPending = 0;
 8113              		.loc 1 3601 14 is_stmt 0 view .LVU2493
 8114 04c4 574A     		ldr	r2, .L1408+20
3602:src/keys.c    ****       xeq_sst_bst(0);
 8115              		.loc 1 3602 28 view .LVU2494
 8116 04c6 5D4B     		ldr	r3, .L1408+44
 8117 04c8 0020     		movs	r0, #0
3601:src/keys.c    ****       OpCodeDisplayPending = 0;
 8118              		.loc 1 3601 14 view .LVU2495
 8119 04ca 2E24     		movs	r4, #46
 8120 04cc 1460     		str	r4, [r2]
3602:src/keys.c    ****       xeq_sst_bst(0);
 8121              		.loc 1 3602 7 is_stmt 1 view .LVU2496
3602:src/keys.c    ****       xeq_sst_bst(0);
 8122              		.loc 1 3602 28 is_stmt 0 view .LVU2497
 8123 04ce 1860     		str	r0, [r3]
3603:src/keys.c    ****       break;
 8124              		.loc 1 3603 7 is_stmt 1 view .LVU2498
3409:src/keys.c    ****   //print_debug(60,c);
 8125              		.loc 1 3409 7 is_stmt 0 view .LVU2499
 8126 04d0 0546     		mov	r5, r0
3603:src/keys.c    ****       break;
 8127              		.loc 1 3603 7 view .LVU2500
 8128 04d2 FFF7FEFF 		bl	xeq_sst_bst
 8129              	.LVL681:
 8130 04d6 EDE5     		b	.L1309
 8131              	.LVL682:
 8132              	.L1321:
ARM GAS  /tmp/ccK8gYGY.s 			page 248


3603:src/keys.c    ****       break;
 8133              		.loc 1 3603 7 view .LVU2501
 8134 04d8 504E     		ldr	r6, .L1408+12
 8135 04da 3368     		ldr	r3, [r6]
 8136 04dc 3EE6     		b	.L792
 8137              	.L1320:
3499:src/keys.c    ****       finish_RPN(); // RPN
 8138              		.loc 1 3499 7 is_stmt 1 view .LVU2502
 8139 04de 8D20     		movs	r0, #141
 8140 04e0 FFF7FEFF 		bl	clr_dot
 8141              	.LVL683:
3500:src/keys.c    ****     }
 8142              		.loc 1 3500 7 view .LVU2503
 8143 04e4 FFF7FEFF 		bl	finish_RPN
 8144              	.LVL684:
 8145 04e8 ADE5     		b	.L794
 8146              	.L805:
3562:src/keys.c    ****     }
 8147              		.loc 1 3562 7 view .LVU2504
 8148 04ea FFF7FEFF 		bl	finish_RPN
 8149              	.LVL685:
3409:src/keys.c    ****   //print_debug(60,c);
 8150              		.loc 1 3409 7 is_stmt 0 view .LVU2505
 8151 04ee 0025     		movs	r5, #0
 8152 04f0 3368     		ldr	r3, [r6]
 8153 04f2 E0E5     		b	.L806
 8154              	.L1093:
3593:src/keys.c    ****       }      
 8155              		.loc 1 3593 2 is_stmt 1 view .LVU2506
 8156              	.LBB1477:
 8157              	.LBB1471:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 8158              		.loc 1 715 5 is_stmt 0 view .LVU2507
 8159 04f4 C0F30723 		ubfx	r3, r0, #8, #8
 8160 04f8 012B     		cmp	r3, #1
 8161              	.LBE1471:
 8162              	.LBE1477:
3593:src/keys.c    ****       }      
 8163              		.loc 1 3593 6 view .LVU2508
 8164 04fa 0446     		mov	r4, r0
 8165              	.LVL686:
 8166              	.LBB1478:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8167              		.loc 1 714 12 is_stmt 1 view .LVU2509
 8168              	.LBB1472:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 8169              		.loc 1 715 2 view .LVU2510
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 8170              		.loc 1 715 5 is_stmt 0 view .LVU2511
 8171 04fc 69D1     		bne	.L1353
 8172              	.LVL687:
 8173              	.L1126:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 8174              		.loc 1 715 5 view .LVU2512
 8175 04fe FFF7FEFF 		bl	check_confirm.part.0
 8176              	.LVL688:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
ARM GAS  /tmp/ccK8gYGY.s 			page 249


 8177              		.loc 1 715 5 view .LVU2513
 8178 0502 0446     		mov	r4, r0
 8179              	.LVL689:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 8180              		.loc 1 715 5 view .LVU2514
 8181 0504 6CE7     		b	.L840
 8182              	.LVL690:
 8183              	.L797:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 8184              		.loc 1 715 5 view .LVU2515
 8185              	.LBE1472:
 8186              	.LBE1478:
3543:src/keys.c    **** #ifndef CONSOLE
 8187              		.loc 1 3543 7 is_stmt 1 view .LVU2516
 8188 0506 464B     		ldr	r3, .L1408+16
 8189 0508 8D20     		movs	r0, #141
 8190 050a 1968     		ldr	r1, [r3]
 8191 050c FFF7FEFF 		bl	dot
 8192              	.LVL691:
3545:src/keys.c    **** 	if (!WasDataEntry) {
 8193              		.loc 1 3545 7 view .LVU2517
3545:src/keys.c    **** 	if (!WasDataEntry) {
 8194              		.loc 1 3545 11 is_stmt 0 view .LVU2518
 8195 0510 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3545:src/keys.c    **** 	if (!WasDataEntry) {
 8196              		.loc 1 3545 10 view .LVU2519
 8197 0514 9806     		lsls	r0, r3, #26
 8198 0516 3FF5F4AD 		bmi	.L775
3546:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 8199              		.loc 1 3546 2 is_stmt 1 view .LVU2520
3546:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 8200              		.loc 1 3546 6 is_stmt 0 view .LVU2521
 8201 051a 494B     		ldr	r3, .L1408+48
3546:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 8202              		.loc 1 3546 5 view .LVU2522
 8203 051c 1B68     		ldr	r3, [r3]
 8204 051e 002B     		cmp	r3, #0
 8205 0520 70D1     		bne	.L808
3548:src/keys.c    **** 	}
 8206              		.loc 1 3548 4 is_stmt 1 view .LVU2523
 8207              		.loc 1 3677 1 is_stmt 0 view .LVU2524
 8208 0522 03B0     		add	sp, sp, #12
 8209              		.cfi_remember_state
 8210              		.cfi_def_cfa_offset 36
 8211              		@ sp needed
 8212 0524 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8213              		.cfi_restore 14
 8214              		.cfi_restore 11
 8215              		.cfi_restore 10
 8216              		.cfi_restore 9
 8217              		.cfi_restore 8
 8218              		.cfi_restore 7
 8219              		.cfi_restore 6
 8220              		.cfi_restore 5
 8221              		.cfi_restore 4
 8222              		.cfi_def_cfa_offset 0
 8223              	.LVL692:
ARM GAS  /tmp/ccK8gYGY.s 			page 250


3548:src/keys.c    **** 	}
 8224              		.loc 1 3548 4 view .LVU2525
 8225 0528 FFF7FEBF 		b	display
 8226              	.LVL693:
 8227              	.L1322:
 8228              		.cfi_restore_state
3531:src/keys.c    ****       else {
 8229              		.loc 1 3531 2 is_stmt 1 view .LVU2526
 8230 052c FFF7FEFF 		bl	xeq_sst_bst
 8231              	.LVL694:
3531:src/keys.c    ****       else {
 8232              		.loc 1 3531 2 is_stmt 0 view .LVU2527
 8233 0530 3A4E     		ldr	r6, .L1408+12
 8234 0532 B6E5     		b	.L799
 8235              	.L1324:
3462:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 8236              		.loc 1 3462 28 discriminator 1 view .LVU2528
 8237 0534 FFF7FEFF 		bl	shift_down
 8238              	.LVL695:
3462:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 8239              		.loc 1 3462 25 discriminator 1 view .LVU2529
 8240 0538 0028     		cmp	r0, #0
 8241 053a 3FF405AE 		beq	.L781
3464:src/keys.c    ****       }
 8242              		.loc 1 3464 2 is_stmt 1 view .LVU2530
3464:src/keys.c    ****       }
 8243              		.loc 1 3464 16 is_stmt 0 view .LVU2531
 8244 053e 344B     		ldr	r3, .L1408
 8245 0540 0022     		movs	r2, #0
 8246 0542 1A74     		strb	r2, [r3, #16]
 8247 0544 00E6     		b	.L781
 8248              	.L1323:
3464:src/keys.c    ****       }
 8249              		.loc 1 3464 16 view .LVU2532
 8250 0546 354E     		ldr	r6, .L1408+12
 8251 0548 ABE5     		b	.L799
 8252              	.L784:
3452:src/keys.c    **** 	  /*
 8253              		.loc 1 3452 10 is_stmt 1 view .LVU2533
3452:src/keys.c    **** 	  /*
 8254              		.loc 1 3452 14 is_stmt 0 view .LVU2534
 8255 054a FFF7FEFF 		bl	keyticks
 8256              	.LVL696:
3452:src/keys.c    **** 	  /*
 8257              		.loc 1 3452 13 view .LVU2535
 8258 054e 0C28     		cmp	r0, #12
 8259 0550 7FF7F5AD 		ble	.L783
3456:src/keys.c    **** 	  message("NULL", CNULL);
 8260              		.loc 1 3456 4 is_stmt 1 view .LVU2536
3457:src/keys.c    **** 	  // Force display update on key-up
 8261              		.loc 1 3457 4 is_stmt 0 view .LVU2537
 8262 0554 3B48     		ldr	r0, .L1408+52
3456:src/keys.c    **** 	  message("NULL", CNULL);
 8263              		.loc 1 3456 11 view .LVU2538
 8264 0556 2E60     		str	r6, [r5]
3457:src/keys.c    **** 	  // Force display update on key-up
 8265              		.loc 1 3457 4 is_stmt 1 view .LVU2539
ARM GAS  /tmp/ccK8gYGY.s 			page 251


 8266 0558 3146     		mov	r1, r6
 8267 055a FFF7FEFF 		bl	message
 8268              	.LVL697:
3459:src/keys.c    **** 	}
 8269              		.loc 1 3459 4 view .LVU2540
3459:src/keys.c    **** 	}
 8270              		.loc 1 3459 21 is_stmt 0 view .LVU2541
 8271 055e 2C4B     		ldr	r3, .L1408
 8272 0560 DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 8273 0562 66F34512 		bfi	r2, r6, #5, #1
 8274 0566 DA75     		strb	r2, [r3, #23]
 8275 0568 E9E5     		b	.L783
 8276              	.L1098:
3635:src/keys.c    **** 	NonProgrammable = 0;
 8277              		.loc 1 3635 11 view .LVU2542
 8278 056a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 8279 056e 2F4A     		ldr	r2, .L1408+28
3635:src/keys.c    **** 	NonProgrammable = 0;
 8280              		.loc 1 3635 10 view .LVU2543
 8281 0570 5D06     		lsls	r5, r3, #25
 8282 0572 2046     		mov	r0, r4
 8283              	.LVL698:
3635:src/keys.c    **** 	NonProgrammable = 0;
 8284              		.loc 1 3635 7 is_stmt 1 view .LVU2544
3635:src/keys.c    **** 	NonProgrammable = 0;
 8285              		.loc 1 3635 10 is_stmt 0 view .LVU2545
 8286 0574 41F1CD80 		bpl	.L1296
 8287              	.L1109:
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8288              		.loc 1 3636 2 is_stmt 1 view .LVU2546
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8289              		.loc 1 3636 18 is_stmt 0 view .LVU2547
 8290 0578 0023     		movs	r3, #0
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8291              		.loc 1 3637 5 view .LVU2548
 8292 057a 142C     		cmp	r4, #20
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8293              		.loc 1 3636 18 view .LVU2549
 8294 057c 1360     		str	r3, [r2]
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8295              		.loc 1 3637 2 is_stmt 1 view .LVU2550
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8296              		.loc 1 3637 5 is_stmt 0 view .LVU2551
 8297 057e 68D8     		bhi	.L1106
3638:src/keys.c    **** 	    // Data entry key
 8298              		.loc 1 3638 4 is_stmt 1 view .LVU2552
3638:src/keys.c    **** 	    // Data entry key
 8299              		.loc 1 3638 7 is_stmt 0 view .LVU2553
 8300 0580 24B9     		cbnz	r4, .L1112
3638:src/keys.c    **** 	    // Data entry key
 8301              		.loc 1 3638 38 discriminator 1 view .LVU2554
 8302 0582 FFF7FEFF 		bl	is_bad_cmdline
 8303              	.LVL699:
3638:src/keys.c    **** 	    // Data entry key
 8304              		.loc 1 3638 34 discriminator 1 view .LVU2555
 8305 0586 0028     		cmp	r0, #0
 8306 0588 7FF456AF 		bne	.L1310
ARM GAS  /tmp/ccK8gYGY.s 			page 252


 8307              	.L1112:
3641:src/keys.c    **** #endif
 8308              		.loc 1 3641 6 is_stmt 1 view .LVU2556
3643:src/keys.c    **** 	    xeq(c);
 8309              		.loc 1 3643 37 is_stmt 0 view .LVU2557
 8310 058c 98F81C50 		ldrb	r5, [r8, #28]	@ zero_extendqisi2
3641:src/keys.c    **** #endif
 8311              		.loc 1 3641 19 view .LVU2558
 8312 0590 0123     		movs	r3, #1
3644:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 8313              		.loc 1 3644 6 view .LVU2559
 8314 0592 2046     		mov	r0, r4
3641:src/keys.c    **** #endif
 8315              		.loc 1 3641 19 view .LVU2560
 8316 0594 C9F80030 		str	r3, [r9]
3643:src/keys.c    **** 	    xeq(c);
 8317              		.loc 1 3643 6 is_stmt 1 view .LVU2561
3643:src/keys.c    **** 	    xeq(c);
 8318              		.loc 1 3643 37 is_stmt 0 view .LVU2562
 8319 0598 B5FA85F5 		clz	r5, r5
3644:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 8320              		.loc 1 3644 6 view .LVU2563
 8321 059c FFF7FEFF 		bl	xeq
 8322              	.LVL700:
3645:src/keys.c    **** 	  }
 8323              		.loc 1 3645 38 view .LVU2564
 8324 05a0 98F81C00 		ldrb	r0, [r8, #28]	@ zero_extendqisi2
 8325 05a4 3368     		ldr	r3, [r6]
3643:src/keys.c    **** 	    xeq(c);
 8326              		.loc 1 3643 37 view .LVU2565
 8327 05a6 6D09     		lsrs	r5, r5, #5
 8328              	.LVL701:
3644:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 8329              		.loc 1 3644 6 is_stmt 1 view .LVU2566
3645:src/keys.c    **** 	  }
 8330              		.loc 1 3645 6 view .LVU2567
3645:src/keys.c    **** 	  }
 8331              		.loc 1 3645 20 is_stmt 0 view .LVU2568
 8332 05a8 0028     		cmp	r0, #0
 8333 05aa 08BF     		it	eq
 8334 05ac 0125     		moveq	r5, #1
 8335              	.LVL702:
3645:src/keys.c    **** 	  }
 8336              		.loc 1 3645 20 view .LVU2569
 8337 05ae 82E5     		b	.L806
 8338              	.LVL703:
 8339              	.L1103:
 8340              	.LBB1479:
3614:src/keys.c    **** 	if (p > Alpha)
 8341              		.loc 1 3614 2 is_stmt 1 view .LVU2570
3614:src/keys.c    **** 	if (p > Alpha)
 8342              		.loc 1 3614 22 is_stmt 0 view .LVU2571
 8343 05b0 1F4C     		ldr	r4, .L1408+32
 8344 05b2 2068     		ldr	r0, [r4]
3614:src/keys.c    **** 	if (p > Alpha)
 8345              		.loc 1 3614 12 view .LVU2572
 8346 05b4 0021     		movs	r1, #0
ARM GAS  /tmp/ccK8gYGY.s 			page 253


 8347 05b6 00F5F660 		add	r0, r0, #1968
 8348 05ba FFF7FEFF 		bl	find_char
 8349              	.LVL704:
3615:src/keys.c    **** 	  *--p = '\0';
 8350              		.loc 1 3615 8 view .LVU2573
 8351 05be 2368     		ldr	r3, [r4]
 8352              	.LVL705:
3615:src/keys.c    **** 	  *--p = '\0';
 8353              		.loc 1 3615 2 is_stmt 1 view .LVU2574
3615:src/keys.c    **** 	  *--p = '\0';
 8354              		.loc 1 3615 8 is_stmt 0 view .LVU2575
 8355 05c0 03F5F663 		add	r3, r3, #1968
3615:src/keys.c    **** 	  *--p = '\0';
 8356              		.loc 1 3615 5 view .LVU2576
 8357 05c4 9842     		cmp	r0, r3
 8358 05c6 00F2DF80 		bhi	.L1104
 8359 05ca 3368     		ldr	r3, [r6]
 8360              	.LBE1479:
3409:src/keys.c    ****   //print_debug(60,c);
 8361              		.loc 1 3409 7 view .LVU2577
 8362 05cc 0025     		movs	r5, #0
 8363              	.LBB1480:
3615:src/keys.c    **** 	  *--p = '\0';
 8364              		.loc 1 3615 5 view .LVU2578
 8365 05ce 3024     		movs	r4, #48
 8366 05d0 71E5     		b	.L806
 8367              	.LVL706:
 8368              	.L1353:
3615:src/keys.c    **** 	  *--p = '\0';
 8369              		.loc 1 3615 5 view .LVU2579
 8370              	.LBE1480:
3635:src/keys.c    **** 	NonProgrammable = 0;
 8371              		.loc 1 3635 7 is_stmt 1 view .LVU2580
3635:src/keys.c    **** 	NonProgrammable = 0;
 8372              		.loc 1 3635 11 is_stmt 0 view .LVU2581
 8373 05d2 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3635:src/keys.c    **** 	NonProgrammable = 0;
 8374              		.loc 1 3635 10 view .LVU2582
 8375 05d6 5B06     		lsls	r3, r3, #25
 8376 05d8 7FF527AF 		bpl	.L1121
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8377              		.loc 1 3636 2 is_stmt 1 view .LVU2583
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8378              		.loc 1 3636 18 is_stmt 0 view .LVU2584
 8379 05dc 134B     		ldr	r3, .L1408+28
 8380 05de 1D60     		str	r5, [r3]
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8381              		.loc 1 3637 2 is_stmt 1 view .LVU2585
 8382 05e0 37E0     		b	.L1106
 8383              	.LVL707:
 8384              	.L1352:
3612:src/keys.c    ****       else if (State2.alphas) {
 8385              		.loc 1 3612 2 view .LVU2586
 8386 05e2 FFF7FEFF 		bl	delprog
 8387              	.LVL708:
 8388 05e6 3024     		movs	r4, #48
 8389 05e8 3368     		ldr	r3, [r6]
ARM GAS  /tmp/ccK8gYGY.s 			page 254


 8390 05ea 64E5     		b	.L806
 8391              	.LVL709:
 8392              	.L785:
3446:src/keys.c    **** 	    DispMsg = TraceBuffer;
 8393              		.loc 1 3446 6 view .LVU2587
 8394 05ec 164E     		ldr	r6, .L1408+56
 8395 05ee 3146     		mov	r1, r6
 8396 05f0 FFF7FEFF 		bl	prt
 8397              	.LVL710:
 8398 05f4 2A46     		mov	r2, r5
 8399 05f6 0146     		mov	r1, r0
 8400 05f8 3046     		mov	r0, r6
 8401 05fa FFF7FEFF 		bl	scopy_char
 8402              	.LVL711:
3447:src/keys.c    **** 	  }
 8403              		.loc 1 3447 6 view .LVU2588
3447:src/keys.c    **** 	  }
 8404              		.loc 1 3447 14 is_stmt 0 view .LVU2589
 8405 05fe 0D4B     		ldr	r3, .L1408+36
 8406 0600 1E60     		str	r6, [r3]
 8407 0602 97E5     		b	.L786
 8408              	.L808:
3551:src/keys.c    **** 	}
 8409              		.loc 1 3551 4 is_stmt 1 view .LVU2590
 8410              		.loc 1 3677 1 is_stmt 0 view .LVU2591
 8411 0604 03B0     		add	sp, sp, #12
 8412              		.cfi_remember_state
 8413              		.cfi_def_cfa_offset 36
 8414              		@ sp needed
 8415 0606 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8416              		.cfi_restore 14
 8417              		.cfi_restore 11
 8418              		.cfi_restore 10
 8419              		.cfi_restore 9
 8420              		.cfi_restore 8
 8421              		.cfi_restore 7
 8422              		.cfi_restore 6
 8423              		.cfi_restore 5
 8424              		.cfi_restore 4
 8425              		.cfi_def_cfa_offset 0
 8426              	.LVL712:
3551:src/keys.c    **** 	}
 8427              		.loc 1 3551 4 view .LVU2592
 8428 060a FFF7FEBF 		b	finish_RPN
 8429              	.LVL713:
 8430              	.L1409:
 8431 060e 00BF     		.align	2
 8432              	.L1408:
 8433 0610 00000000 		.word	StateWhileOn
 8434 0614 00000000 		.word	GoFast
 8435 0618 00000000 		.word	JustDisplayed
 8436 061c 00000000 		.word	Running
 8437 0620 00000000 		.word	ShowRPN
 8438 0624 00000000 		.word	OpCode
 8439 0628 00000000 		.word	nd_opcode
 8440 062c 00000000 		.word	NonProgrammable
 8441 0630 00000000 		.word	main_ram
ARM GAS  /tmp/ccK8gYGY.s 			page 255


 8442 0634 00000000 		.word	DispMsg
 8443 0638 0C000000 		.word	.LC2
 8444 063c 00000000 		.word	OpCodeDisplayPending
 8445 0640 00000000 		.word	WasDataEntry
 8446 0644 04000000 		.word	.LC1
 8447 0648 00000000 		.word	TraceBuffer
 8448              	.LVL714:
 8449              	.L1350:
 8450              		.cfi_restore_state
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8451              		.loc 1 3636 2 is_stmt 1 view .LVU2593
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8452              		.loc 1 3636 18 is_stmt 0 view .LVU2594
 8453 064c C34B     		ldr	r3, .L1410
 8454 064e 0022     		movs	r2, #0
 8455 0650 1A60     		str	r2, [r3]
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8456              		.loc 1 3637 2 is_stmt 1 view .LVU2595
 8457              	.LVL715:
 8458              	.L1106:
3651:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 8459              		.loc 1 3651 4 view .LVU2596
3651:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 8460              		.loc 1 3651 11 is_stmt 0 view .LVU2597
 8461 0652 C34A     		ldr	r2, .L1410+4
3652:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 8462              		.loc 1 3652 25 view .LVU2598
 8463 0654 C34B     		ldr	r3, .L1410+8
3651:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 8464              		.loc 1 3651 11 view .LVU2599
 8465 0656 1060     		str	r0, [r2]
3652:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 8466              		.loc 1 3652 4 is_stmt 1 view .LVU2600
3652:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 8467              		.loc 1 3652 25 is_stmt 0 view .LVU2601
 8468 0658 0122     		movs	r2, #1
 8469 065a C34E     		ldr	r6, .L1410+12
 8470 065c 1A60     		str	r2, [r3]
3653:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
 8471              		.loc 1 3653 4 is_stmt 1 view .LVU2602
 8472 065e FFF7FEFF 		bl	finish_RPN
 8473              	.LVL716:
3654:src/keys.c    **** 	}
 8474              		.loc 1 3654 4 view .LVU2603
 8475 0662 4CE5     		b	.L1113
 8476              	.LVL717:
 8477              	.L1329:
 8478              	.LBB1481:
 8479              	.LBB1413:
3279:src/keys.c    **** 
 8480              		.loc 1 3279 3 view .LVU2604
 8481              	.LBB986:
 8482              	.LBI986:
2881:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
 8483              		.loc 1 2881 12 view .LVU2605
 8484              	.LBB987:
2883:src/keys.c    **** #ifdef DM42
ARM GAS  /tmp/ccK8gYGY.s 			page 256


 8485              		.loc 1 2883 2 view .LVU2606
 8486 0664 E4B2     		uxtb	r4, r4
 8487              	.LVL718:
2883:src/keys.c    **** #ifdef DM42
 8488              		.loc 1 2883 2 is_stmt 0 view .LVU2607
 8489 0666 A4F10E03 		sub	r3, r4, #14
 8490 066a 192B     		cmp	r3, #25
 8491 066c 3AD8     		bhi	.L1314
 8492 066e DFE803F0 		tbb	[pc, r3]
 8493              	.L832:
 8494 0672 3E       		.byte	(.L833-.L832)/2
 8495 0673 39       		.byte	(.L1314-.L832)/2
 8496 0674 3E       		.byte	(.L833-.L832)/2
 8497 0675 39       		.byte	(.L1314-.L832)/2
 8498 0676 39       		.byte	(.L1314-.L832)/2
 8499 0677 39       		.byte	(.L1314-.L832)/2
 8500 0678 39       		.byte	(.L1314-.L832)/2
 8501 0679 39       		.byte	(.L1314-.L832)/2
 8502 067a 39       		.byte	(.L1314-.L832)/2
 8503 067b 39       		.byte	(.L1314-.L832)/2
 8504 067c 39       		.byte	(.L1314-.L832)/2
 8505 067d 39       		.byte	(.L1314-.L832)/2
 8506 067e 39       		.byte	(.L1314-.L832)/2
 8507 067f 39       		.byte	(.L1314-.L832)/2
 8508 0680 39       		.byte	(.L1314-.L832)/2
 8509 0681 39       		.byte	(.L1314-.L832)/2
 8510 0682 39       		.byte	(.L1314-.L832)/2
 8511 0683 39       		.byte	(.L1314-.L832)/2
 8512 0684 4A       		.byte	(.L831-.L832)/2
 8513 0685 39       		.byte	(.L1314-.L832)/2
 8514 0686 39       		.byte	(.L1314-.L832)/2
 8515 0687 39       		.byte	(.L1314-.L832)/2
 8516 0688 39       		.byte	(.L1314-.L832)/2
 8517 0689 39       		.byte	(.L1314-.L832)/2
 8518 068a 39       		.byte	(.L1314-.L832)/2
 8519 068b 4A       		.byte	(.L831-.L832)/2
 8520              	.LVL719:
 8521              		.p2align 1
 8522              	.L1339:
2883:src/keys.c    **** #ifdef DM42
 8523              		.loc 1 2883 2 view .LVU2608
 8524              	.LBE987:
 8525              	.LBE986:
 8526              	.LBB990:
 8527              	.LBB853:
 277:src/keys.c    **** 			switch (c) {
 8528              		.loc 1 277 3 is_stmt 1 view .LVU2609
 277:src/keys.c    **** 			switch (c) {
 8529              		.loc 1 277 6 is_stmt 0 view .LVU2610
 8530 068c BBF1030F 		cmp	fp, #3
 8531 0690 00F01982 		beq	.L1354
 294:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 8532              		.loc 1 294 3 is_stmt 1 view .LVU2611
 294:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 8533              		.loc 1 294 6 is_stmt 0 view .LVU2612
 8534 0694 BBF1020F 		cmp	fp, #2
 8535 0698 00F0B085 		beq	.L1355
ARM GAS  /tmp/ccK8gYGY.s 			page 257


 296:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 8536              		.loc 1 296 3 is_stmt 1 view .LVU2613
 296:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 8537              		.loc 1 296 6 is_stmt 0 view .LVU2614
 8538 069c BBF1010F 		cmp	fp, #1
 8539 06a0 7FF4EDAD 		bne	.L926
 296:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 8540              		.loc 1 296 27 view .LVU2615
 8541 06a4 0C2C     		cmp	r4, #12
 8542 06a6 7FF4EAAD 		bne	.L926
 297:src/keys.c    **** 				SET_REAL;
 8543              		.loc 1 297 4 is_stmt 1 view .LVU2616
 297:src/keys.c    **** 				SET_REAL;
 8544              		.loc 1 297 7 is_stmt 0 view .LVU2617
 8545 06aa 11F0060F 		tst	r1, #6
 8546 06ae 01F02680 		beq	.L1356
 301:src/keys.c    **** 				CmdLineLength = 0;
 8547              		.loc 1 301 9 is_stmt 1 view .LVU2618
 301:src/keys.c    **** 				CmdLineLength = 0;
 8548              		.loc 1 301 12 is_stmt 0 view .LVU2619
 8549 06b2 98F81C30 		ldrb	r3, [r8, #28]	@ zero_extendqisi2
 8550 06b6 002B     		cmp	r3, #0
 8551 06b8 00F0D787 		beq	.L1144
 302:src/keys.c    **** 				CmdLineEex = 0;
 8552              		.loc 1 302 5 is_stmt 1 view .LVU2620
 303:src/keys.c    **** 				CmdLineDot = 0;
 8553              		.loc 1 303 5 view .LVU2621
 304:src/keys.c    **** 			}
 8554              		.loc 1 304 5 view .LVU2622
 302:src/keys.c    **** 				CmdLineEex = 0;
 8555              		.loc 1 302 19 is_stmt 0 view .LVU2623
 8556 06bc 0023     		movs	r3, #0
 8557 06be A8F81C30 		strh	r3, [r8, #28]	@ movhi
 304:src/keys.c    **** 			}
 8558              		.loc 1 304 16 view .LVU2624
 8559 06c2 88F81E30 		strb	r3, [r8, #30]
 8560              	.LVL720:
 304:src/keys.c    **** 			}
 8561              		.loc 1 304 16 view .LVU2625
 8562              	.LBE853:
 8563              	.LBE990:
3325:src/keys.c    **** 		if (is_bad_cmdline())
 8564              		.loc 1 3325 2 is_stmt 1 view .LVU2626
 8565              	.LBB991:
 8566              	.LBB854:
 306:src/keys.c    **** 		}
 8567              		.loc 1 306 11 is_stmt 0 view .LVU2627
 8568 06c6 1023     		movs	r3, #16
 8569              	.LVL721:
 8570              	.L909:
 306:src/keys.c    **** 		}
 8571              		.loc 1 306 11 view .LVU2628
 8572              	.LBE854:
 8573              	.LBE991:
3326:src/keys.c    **** 			return STATE_UNFINISHED;
 8574              		.loc 1 3326 3 is_stmt 1 view .LVU2629
 8575 06c8 0093     		str	r3, [sp]
ARM GAS  /tmp/ccK8gYGY.s 			page 258


3326:src/keys.c    **** 			return STATE_UNFINISHED;
 8576              		.loc 1 3326 7 is_stmt 0 view .LVU2630
 8577 06ca FFF7FEFF 		bl	is_bad_cmdline
 8578              	.LVL722:
3326:src/keys.c    **** 			return STATE_UNFINISHED;
 8579              		.loc 1 3326 6 view .LVU2631
 8580 06ce 009B     		ldr	r3, [sp]
 8581 06d0 0446     		mov	r4, r0
 8582 06d2 38B9     		cbnz	r0, .L1314
 8583 06d4 0093     		str	r3, [sp]
3328:src/keys.c    **** 		init_cat( cat );
 8584              		.loc 1 3328 3 is_stmt 1 view .LVU2632
 8585 06d6 FFF7FEFF 		bl	init_cat
 8586              	.LVL723:
3329:src/keys.c    **** 		return STATE_UNFINISHED;
 8587              		.loc 1 3329 3 view .LVU2633
 8588 06da 009B     		ldr	r3, [sp]
 8589 06dc 1846     		mov	r0, r3
 8590 06de FFF7FEFF 		bl	init_cat
 8591              	.LVL724:
3330:src/keys.c    **** 	}
 8592              		.loc 1 3330 3 view .LVU2634
 8593              	.LBE1413:
 8594              	.LBE1481:
3409:src/keys.c    ****   //print_debug(60,c);
 8595              		.loc 1 3409 7 is_stmt 0 view .LVU2635
 8596 06e2 2546     		mov	r5, r4
 8597              	.LVL725:
 8598              	.L1314:
3409:src/keys.c    ****   //print_debug(60,c);
 8599              		.loc 1 3409 7 view .LVU2636
 8600 06e4 3368     		ldr	r3, [r6]
 8601              	.LBB1482:
 8602              	.LBB1414:
3330:src/keys.c    **** 	}
 8603              		.loc 1 3330 10 view .LVU2637
 8604 06e6 3324     		movs	r4, #51
 8605 06e8 E5E4     		b	.L806
 8606              	.LVL726:
 8607              	.L834:
 8608              	.LBB992:
 8609              	.LBB988:
2892:src/keys.c    **** 	  }
 8610              		.loc 1 2892 26 is_stmt 1 view .LVU2638
 8611 06ea FFF7FEFF 		bl	clpall
 8612              	.LVL727:
2892:src/keys.c    **** 	  }
 8613              		.loc 1 2892 36 view .LVU2639
 8614              	.L833:
2901:src/keys.c    **** 	  State2.digval = 0;
 8615              		.loc 1 2901 4 view .LVU2640
2901:src/keys.c    **** 	  State2.digval = 0;
 8616              		.loc 1 2901 19 is_stmt 0 view .LVU2641
 8617 06ee 98F81420 		ldrb	r2, [r8, #20]	@ zero_extendqisi2
 8618 06f2 3368     		ldr	r3, [r6]
 8619 06f4 6FF30202 		bfc	r2, #0, #3
2902:src/keys.c    **** 	  break;
ARM GAS  /tmp/ccK8gYGY.s 			page 259


 8620              		.loc 1 2902 18 view .LVU2642
 8621 06f8 0021     		movs	r1, #0
2901:src/keys.c    **** 	  State2.digval = 0;
 8622              		.loc 1 2901 19 view .LVU2643
 8623 06fa 88F81420 		strb	r2, [r8, #20]
2902:src/keys.c    **** 	  break;
 8624              		.loc 1 2902 4 is_stmt 1 view .LVU2644
2902:src/keys.c    **** 	  break;
 8625              		.loc 1 2902 18 is_stmt 0 view .LVU2645
 8626 06fe A8F80810 		strh	r1, [r8, #8]	@ movhi
2903:src/keys.c    **** 	default:			// No state change
 8627              		.loc 1 2903 4 is_stmt 1 view .LVU2646
 8628              	.LBE988:
 8629              	.LBE992:
3279:src/keys.c    **** 
 8630              		.loc 1 3279 10 is_stmt 0 view .LVU2647
 8631 0702 3324     		movs	r4, #51
 8632              	.LVL728:
 8633              	.LBB993:
 8634              	.LBB989:
2903:src/keys.c    **** 	default:			// No state change
 8635              		.loc 1 2903 4 view .LVU2648
 8636 0704 D7E4     		b	.L806
 8637              	.LVL729:
 8638              	.L831:
2888:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 8639              		.loc 1 2888 4 is_stmt 1 view .LVU2649
2888:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 8640              		.loc 1 2888 18 is_stmt 0 view .LVU2650
 8641 0706 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
 8642 070a 03F00703 		and	r3, r3, #7
 8643 070e 013B     		subs	r3, r3, #1
 8644 0710 032B     		cmp	r3, #3
 8645 0712 ECD8     		bhi	.L833
 8646 0714 01A2     		adr	r2, .L835
 8647 0716 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8648 071a 00BF     		.p2align 2
 8649              	.L835:
 8650 071c 39070000 		.word	.L838+1
 8651 0720 33070000 		.word	.L837+1
 8652 0724 2D070000 		.word	.L836+1
 8653 0728 EB060000 		.word	.L834+1
 8654              		.p2align 1
 8655              	.L836:
2891:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 8656              		.loc 1 2891 26 is_stmt 1 view .LVU2651
 8657 072c FFF7FEFF 		bl	clrprog
 8658              	.LVL730:
2891:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 8659              		.loc 1 2891 37 view .LVU2652
2891:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 8660              		.loc 1 2891 4 is_stmt 0 view .LVU2653
 8661 0730 DDE7     		b	.L833
 8662              	.L837:
2890:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 8663              		.loc 1 2890 25 is_stmt 1 view .LVU2654
 8664 0732 FFF7FEFF 		bl	reset
ARM GAS  /tmp/ccK8gYGY.s 			page 260


 8665              	.LVL731:
2890:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 8666              		.loc 1 2890 34 view .LVU2655
2890:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 8667              		.loc 1 2890 4 is_stmt 0 view .LVU2656
 8668 0736 DAE7     		b	.L833
 8669              	.L838:
2889:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8670              		.loc 1 2889 25 is_stmt 1 view .LVU2657
 8671 0738 FFF7FEFF 		bl	clrall
 8672              	.LVL732:
2889:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8673              		.loc 1 2889 35 view .LVU2658
2889:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8674              		.loc 1 2889 4 is_stmt 0 view .LVU2659
 8675 073c D7E7     		b	.L833
 8676              	.LVL733:
 8677              	.L1327:
2889:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8678              		.loc 1 2889 4 view .LVU2660
 8679              	.LBE989:
 8680              	.LBE993:
3246:src/keys.c    **** #else
 8681              		.loc 1 3246 47 view .LVU2661
 8682 073e DFF84082 		ldr	r8, .L1410+36
 8683 0742 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
3246:src/keys.c    **** #else
 8684              		.loc 1 3246 36 view .LVU2662
 8685 0746 4BEA0302 		orr	r2, fp, r3
 8686 074a 12F0FF0F 		tst	r2, #255
 8687 074e 7FF42CAD 		bne	.L818
3246:src/keys.c    **** #else
 8688              		.loc 1 3246 76 view .LVU2663
 8689 0752 864A     		ldr	r2, .L1410+16
 8690 0754 D8F81430 		ldr	r3, [r8, #20]
 8691 0758 1A42     		tst	r2, r3
 8692 075a 7FF42EAD 		bne	.L828
3252:src/keys.c    **** 	stack_restore();
 8693              		.loc 1 3252 7 is_stmt 1 view .LVU2664
3252:src/keys.c    **** 	stack_restore();
 8694              		.loc 1 3252 11 is_stmt 0 view .LVU2665
 8695 075e DFF818A2 		ldr	r10, .L1410+28
 8696 0762 DAF80030 		ldr	r3, [r10]
 8697 0766 93F8AC37 		ldrb	r3, [r3, #1964]	@ zero_extendqisi2
3252:src/keys.c    **** 	stack_restore();
 8698              		.loc 1 3252 10 view .LVU2666
 8699 076a 03F04102 		and	r2, r3, #65
 8700 076e 412A     		cmp	r2, #65
 8701 0770 00F03786 		beq	.L1357
 8702              	.LVL734:
 8703              	.L820:
3258:src/keys.c    ****       return STATE_UNFINISHED;
 8704              		.loc 1 3258 7 is_stmt 1 view .LVU2667
 8705 0774 FFF7FEFF 		bl	soft_init_state
 8706              	.LVL735:
3259:src/keys.c    ****     }
 8707              		.loc 1 3259 7 view .LVU2668
ARM GAS  /tmp/ccK8gYGY.s 			page 261


3259:src/keys.c    ****     }
 8708              		.loc 1 3259 14 is_stmt 0 view .LVU2669
 8709 0778 3324     		movs	r4, #51
 8710 077a 3368     		ldr	r3, [r6]
 8711 077c 9BE4     		b	.L806
 8712              	.LVL736:
 8713              	.L1330:
3282:src/keys.c    **** 
 8714              		.loc 1 3282 3 is_stmt 1 view .LVU2670
3282:src/keys.c    **** 
 8715              		.loc 1 3282 10 is_stmt 0 view .LVU2671
 8716 077e E0B2     		uxtb	r0, r4
 8717 0780 FFF7FEFF 		bl	process_arg
 8718              	.LVL737:
 8719 0784 0446     		mov	r4, r0
 8720              	.LVL738:
3282:src/keys.c    **** 
 8721              		.loc 1 3282 10 view .LVU2672
 8722 0786 2BE6     		b	.L840
 8723              	.LVL739:
 8724              	.L1104:
3282:src/keys.c    **** 
 8725              		.loc 1 3282 10 view .LVU2673
 8726              	.LBE1414:
 8727              	.LBE1482:
 8728              	.LBB1483:
3616:src/keys.c    ****       }
 8729              		.loc 1 3616 4 is_stmt 1 view .LVU2674
3616:src/keys.c    ****       }
 8730              		.loc 1 3616 9 is_stmt 0 view .LVU2675
 8731 0788 0025     		movs	r5, #0
 8732 078a 00F8015C 		strb	r5, [r0, #-1]
 8733 078e 8EE6     		b	.L1311
 8734              	.LVL740:
 8735              	.L1333:
3616:src/keys.c    ****       }
 8736              		.loc 1 3616 9 view .LVU2676
 8737              	.LBE1483:
 8738              	.LBB1484:
 8739              	.LBB1415:
3291:src/keys.c    **** 
 8740              		.loc 1 3291 3 is_stmt 1 view .LVU2677
 8741              	.LBB994:
 8742              	.LBI994:
2347:src/keys.c    **** 	int r = State2.test;
 8743              		.loc 1 2347 12 view .LVU2678
 8744              	.LBB995:
2348:src/keys.c    **** 	int cmpx = State2.cmplx;
 8745              		.loc 1 2348 2 view .LVU2679
2349:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 8746              		.loc 1 2349 2 view .LVU2680
 8747              	.LBB996:
 8748              	.LBB997:
 8749              	.LBB998:
 8750              	.LBB999:
 143:src/keys.c    **** }
 8751              		.loc 1 143 23 is_stmt 0 view .LVU2681
ARM GAS  /tmp/ccK8gYGY.s 			page 262


 8752 0790 DFF8DCC1 		ldr	ip, .L1410+20
 8753              	.LBE999:
 8754              	.LBE998:
 234:src/keys.c    **** }
 8755              		.loc 1 234 28 view .LVU2682
 8756 0794 DFF8DCE1 		ldr	lr, .L1410+24
 8757              	.LBB1003:
 8758              	.LBB1000:
 143:src/keys.c    **** }
 8759              		.loc 1 143 23 view .LVU2683
 8760 0798 E4B2     		uxtb	r4, r4
 8761              	.LVL741:
 143:src/keys.c    **** }
 8762              		.loc 1 143 23 view .LVU2684
 8763              	.LBE1000:
 8764              	.LBE1003:
 8765              	.LBE997:
 8766              	.LBE996:
2351:src/keys.c    **** 
 8767              		.loc 1 2351 44 view .LVU2685
 8768 079a 12F0020F 		tst	r2, #2
 8769              	.LBB1008:
 8770              	.LBB1006:
 8771              	.LBB1004:
 8772              	.LBB1001:
 143:src/keys.c    **** }
 8773              		.loc 1 143 23 view .LVU2686
 8774 079e 1CF804C0 		ldrb	ip, [ip, r4]	@ zero_extendqisi2
 8775              	.LBE1001:
 8776              	.LBE1004:
 234:src/keys.c    **** }
 8777              		.loc 1 234 28 view .LVU2687
 8778 07a2 1EF80CE0 		ldrb	lr, [lr, ip]	@ zero_extendqisi2
 8779              	.LBE1006:
 8780              	.LBE1008:
2349:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 8781              		.loc 1 2349 19 view .LVU2688
 8782 07a6 C2F3400B 		ubfx	fp, r2, #1, #1
 8783              	.LVL742:
2350:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 8784              		.loc 1 2350 2 is_stmt 1 view .LVU2689
 8785              	.LBB1009:
 8786              	.LBI996:
 210:src/keys.c    **** {
 8787              		.loc 1 210 14 view .LVU2690
 8788              	.LBB1007:
 212:src/keys.c    ****     // K00 - K05
 8789              		.loc 1 212 3 view .LVU2691
 234:src/keys.c    **** }
 8790              		.loc 1 234 3 view .LVU2692
 8791              	.LBB1005:
 8792              	.LBI998:
 131:src/keys.c    **** {
 8793              		.loc 1 131 12 view .LVU2693
 8794              	.LBB1002:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8795              		.loc 1 133 2 view .LVU2694
ARM GAS  /tmp/ccK8gYGY.s 			page 263


 143:src/keys.c    **** }
 8796              		.loc 1 143 2 view .LVU2695
 143:src/keys.c    **** }
 8797              		.loc 1 143 2 is_stmt 0 view .LVU2696
 8798              	.LBE1002:
 8799              	.LBE1005:
 8800              	.LBE1007:
 8801              	.LBE1009:
2350:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 8802              		.loc 1 2350 15 view .LVU2697
 8803 07aa 2EF0800C 		bic	ip, lr, #128
 8804              	.LVL743:
2351:src/keys.c    **** 
 8805              		.loc 1 2351 2 is_stmt 1 view .LVU2698
2351:src/keys.c    **** 
 8806              		.loc 1 2351 44 is_stmt 0 view .LVU2699
 8807 07ae 00F0C380 		beq	.L1358
 8808              	.LVL744:
2353:src/keys.c    **** 	State2.cmplx = 0;
 8809              		.loc 1 2353 2 is_stmt 1 view .LVU2700
2354:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 8810              		.loc 1 2354 15 is_stmt 0 view .LVU2701
 8811 07b2 60F34102 		bfi	r2, r0, #1, #1
2355:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 8812              		.loc 1 2355 5 view .LVU2702
 8813 07b6 BCF1640F 		cmp	ip, #100
2353:src/keys.c    **** 	State2.cmplx = 0;
 8814              		.loc 1 2353 14 view .LVU2703
 8815 07ba 4FF00700 		mov	r0, #7
2354:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 8816              		.loc 1 2354 15 view .LVU2704
 8817 07be 88F81520 		strb	r2, [r8, #21]
2353:src/keys.c    **** 	State2.cmplx = 0;
 8818              		.loc 1 2353 14 view .LVU2705
 8819 07c2 88F80F00 		strb	r0, [r8, #15]
2354:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 8820              		.loc 1 2354 2 is_stmt 1 view .LVU2706
2355:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 8821              		.loc 1 2355 2 view .LVU2707
2355:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 8822              		.loc 1 2355 5 is_stmt 0 view .LVU2708
 8823 07c6 00F01185 		beq	.L1170
2351:src/keys.c    **** 
 8824              		.loc 1 2351 44 view .LVU2709
 8825 07ca 4FF0340A 		mov	r10, #52
 8826              	.LVL745:
 8827              	.L1129:
2356:src/keys.c    **** 		// Lettered register
 8828              		.loc 1 2356 5 view .LVU2710
 8829 07ce BCF17F0F 		cmp	ip, #127
2351:src/keys.c    **** 
 8830              		.loc 1 2351 60 view .LVU2711
 8831 07d2 9A44     		add	r10, r10, r3
2356:src/keys.c    **** 		// Lettered register
 8832              		.loc 1 2356 2 is_stmt 1 view .LVU2712
2356:src/keys.c    **** 		// Lettered register
 8833              		.loc 1 2356 5 is_stmt 0 view .LVU2713
ARM GAS  /tmp/ccK8gYGY.s 			page 264


 8834 07d4 00F04981 		beq	.L872
 8835              	.LVL746:
2356:src/keys.c    **** 		// Lettered register
 8836              		.loc 1 2356 18 view .LVU2714
 8837 07d8 BCF1630F 		cmp	ip, #99
 8838 07dc 40F26881 		bls	.L873
2356:src/keys.c    **** 		// Lettered register
 8839              		.loc 1 2356 37 view .LVU2715
 8840 07e0 BCF16F0F 		cmp	ip, #111
 8841 07e4 00F24181 		bhi	.L872
2358:src/keys.c    **** 			if (n == regI_idx)
 8842              		.loc 1 2358 3 is_stmt 1 view .LVU2716
2358:src/keys.c    **** 			if (n == regI_idx)
 8843              		.loc 1 2358 6 is_stmt 0 view .LVU2717
 8844 07e8 BBF1000F 		cmp	fp, #0
 8845 07ec 00F09182 		beq	.L874
2358:src/keys.c    **** 			if (n == regI_idx)
 8846              		.loc 1 2358 12 view .LVU2718
 8847 07f0 1EF0010F 		tst	lr, #1
 8848 07f4 00F08D82 		beq	.L874
2359:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 8849              		.loc 1 2359 4 is_stmt 1 view .LVU2719
2359:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 8850              		.loc 1 2359 7 is_stmt 0 view .LVU2720
 8851 07f8 BCF16D0F 		cmp	ip, #109
 8852 07fc 40F04481 		bne	.L875
2360:src/keys.c    **** 			// Disallow odd complex registers > A
 8853              		.loc 1 2360 5 is_stmt 1 view .LVU2721
2360:src/keys.c    **** 			// Disallow odd complex registers > A
 8854              		.loc 1 2360 30 is_stmt 0 view .LVU2722
 8855 0800 03F12904 		add	r4, r3, #41
 8856              	.LVL747:
2360:src/keys.c    **** 			// Disallow odd complex registers > A
 8857              		.loc 1 2360 30 view .LVU2723
 8858 0804 ECE5     		b	.L840
 8859              	.LVL748:
 8860              	.L1331:
2360:src/keys.c    **** 			// Disallow odd complex registers > A
 8861              		.loc 1 2360 30 view .LVU2724
 8862              	.LBE995:
 8863              	.LBE994:
3285:src/keys.c    **** 
 8864              		.loc 1 3285 3 is_stmt 1 view .LVU2725
 8865              	.LBB1023:
 8866              	.LBI1023:
1709:src/keys.c    **** 	int pc = -1;
 8867              		.loc 1 1709 12 view .LVU2726
 8868              	.LBB1024:
1710:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
 8869              		.loc 1 1710 2 view .LVU2727
1711:src/keys.c    **** 
 8870              		.loc 1 1711 2 view .LVU2728
 8871              	.LBB1025:
 8872              	.LBI1025:
 210:src/keys.c    **** {
 8873              		.loc 1 210 14 view .LVU2729
 8874              	.LBB1026:
ARM GAS  /tmp/ccK8gYGY.s 			page 265


 212:src/keys.c    ****     // K00 - K05
 8875              		.loc 1 212 3 view .LVU2730
 234:src/keys.c    **** }
 8876              		.loc 1 234 3 view .LVU2731
 8877              	.LBB1027:
 8878              	.LBI1027:
 131:src/keys.c    **** {
 8879              		.loc 1 131 12 view .LVU2732
 8880              	.LBB1028:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8881              		.loc 1 133 2 view .LVU2733
 143:src/keys.c    **** }
 8882              		.loc 1 143 2 view .LVU2734
 143:src/keys.c    **** }
 8883              		.loc 1 143 23 is_stmt 0 view .LVU2735
 8884 0806 5A4B     		ldr	r3, .L1410+20
 8885              	.LBE1028:
 8886              	.LBE1027:
 234:src/keys.c    **** }
 8887              		.loc 1 234 28 view .LVU2736
 8888 0808 5A4A     		ldr	r2, .L1410+24
 8889 080a E4B2     		uxtb	r4, r4
 8890              	.LVL749:
 8891              	.LBB1030:
 8892              	.LBB1029:
 143:src/keys.c    **** }
 8893              		.loc 1 143 23 view .LVU2737
 8894 080c 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 8895              	.LBE1029:
 8896              	.LBE1030:
 234:src/keys.c    **** }
 8897              		.loc 1 234 28 view .LVU2738
 8898 080e D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 8899              	.LVL750:
 234:src/keys.c    **** }
 8900              		.loc 1 234 28 view .LVU2739
 8901              	.LBE1026:
 8902              	.LBE1025:
1713:src/keys.c    **** 		// Digit 0 - 9
 8903              		.loc 1 1713 2 is_stmt 1 view .LVU2740
1713:src/keys.c    **** 		// Digit 0 - 9
 8904              		.loc 1 1713 5 is_stmt 0 view .LVU2741
 8905 0810 0928     		cmp	r0, #9
 8906 0812 40F24581 		bls	.L1359
1718:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8907              		.loc 1 1718 7 is_stmt 1 view .LVU2742
1718:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8908              		.loc 1 1718 18 is_stmt 0 view .LVU2743
 8909 0816 20F08000 		bic	r0, r0, #128
 8910              	.LVL751:
1718:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8911              		.loc 1 1718 10 view .LVU2744
 8912 081a 6428     		cmp	r0, #100
 8913 081c 00F07282 		beq	.L1360
1719:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 8914              		.loc 1 1719 7 is_stmt 1 view .LVU2745
1719:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
ARM GAS  /tmp/ccK8gYGY.s 			page 266


 8915              		.loc 1 1719 10 is_stmt 0 view .LVU2746
 8916 0820 6528     		cmp	r0, #101
 8917 0822 00F07D82 		beq	.L1361
1720:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 8918              		.loc 1 1720 7 is_stmt 1 view .LVU2747
1720:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 8919              		.loc 1 1720 10 is_stmt 0 view .LVU2748
 8920 0826 6628     		cmp	r0, #102
 8921 0828 00F08882 		beq	.L1362
1721:src/keys.c    **** #endif
 8922              		.loc 1 1721 7 is_stmt 1 view .LVU2749
1721:src/keys.c    **** #endif
 8923              		.loc 1 1721 10 is_stmt 0 view .LVU2750
 8924 082c 6728     		cmp	r0, #103
 8925 082e 00F0A684 		beq	.L1363
1723:src/keys.c    **** 		// A - D
 8926              		.loc 1 1723 7 is_stmt 1 view .LVU2751
1723:src/keys.c    **** 		// A - D
 8927              		.loc 1 1723 10 is_stmt 0 view .LVU2752
 8928 0832 032C     		cmp	r4, #3
 8929 0834 40F2AA84 		bls	.L1364
1728:src/keys.c    **** 		// .
 8930              		.loc 1 1728 7 is_stmt 1 view .LVU2753
1728:src/keys.c    **** 		// .
 8931              		.loc 1 1728 10 is_stmt 0 view .LVU2754
 8932 0838 262C     		cmp	r4, #38
 8933 083a 00F03B85 		beq	.L1365
1733:src/keys.c    **** 		// ENTER - short circuit processing
 8934              		.loc 1 1733 7 is_stmt 1 view .LVU2755
1733:src/keys.c    **** 		// ENTER - short circuit processing
 8935              		.loc 1 1733 10 is_stmt 0 view .LVU2756
 8936 083e 0C2C     		cmp	r4, #12
 8937 0840 00F0BC84 		beq	.L1366
1737:src/keys.c    **** 		// backspace
 8938              		.loc 1 1737 7 is_stmt 1 view .LVU2757
1737:src/keys.c    **** 		// backspace
 8939              		.loc 1 1737 10 is_stmt 0 view .LVU2758
 8940 0844 102C     		cmp	r4, #16
 8941 0846 00F0A385 		beq	.L1367
1746:src/keys.c    **** 		// up
 8942              		.loc 1 1746 7 is_stmt 1 view .LVU2759
1746:src/keys.c    **** 		// up
 8943              		.loc 1 1746 10 is_stmt 0 view .LVU2760
 8944 084a 122C     		cmp	r4, #18
 8945 084c 00F0F686 		beq	.L1368
1756:src/keys.c    **** 		// down
 8946              		.loc 1 1756 7 is_stmt 1 view .LVU2761
1756:src/keys.c    **** 		// down
 8947              		.loc 1 1756 10 is_stmt 0 view .LVU2762
 8948 0850 182C     		cmp	r4, #24
 8949 0852 7FF447AF 		bne	.L1314
1758:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 8950              		.loc 1 1758 3 is_stmt 1 view .LVU2763
1759:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 8951              		.loc 1 1759 18 is_stmt 0 view .LVU2764
 8952 0856 484C     		ldr	r4, .L1410+28
 8953              	.LVL752:
ARM GAS  /tmp/ccK8gYGY.s 			page 267


1758:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 8954              		.loc 1 1758 3 view .LVU2765
 8955 0858 0120     		movs	r0, #1
 8956 085a FFF7FEFF 		bl	update_program_bounds
 8957              	.LVL753:
1759:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 8958              		.loc 1 1759 3 is_stmt 1 view .LVU2766
1759:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 8959              		.loc 1 1759 18 is_stmt 0 view .LVU2767
 8960 085e 2368     		ldr	r3, [r4]
1759:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 8961              		.loc 1 1759 11 view .LVU2768
 8962 0860 0021     		movs	r1, #0
 8963 0862 B3F8EE07 		ldrh	r0, [r3, #2030]
 8964 0866 FFF7FEFF 		bl	do_inc
 8965              	.LVL754:
1760:src/keys.c    **** 			rawpc = 1;
 8966              		.loc 1 1760 3 is_stmt 1 view .LVU2769
1760:src/keys.c    **** 			rawpc = 1;
 8967              		.loc 1 1760 6 is_stmt 0 view .LVU2770
 8968 086a 20B9     		cbnz	r0, .L852
1760:src/keys.c    **** 			rawpc = 1;
 8969              		.loc 1 1760 21 view .LVU2771
 8970 086c 2368     		ldr	r3, [r4]
1760:src/keys.c    **** 			rawpc = 1;
 8971              		.loc 1 1760 18 view .LVU2772
 8972 086e 5888     		ldrh	r0, [r3, #2]
 8973              	.LVL755:
1760:src/keys.c    **** 			rawpc = 1;
 8974              		.loc 1 1760 18 view .LVU2773
 8975 0870 0038     		subs	r0, r0, #0
 8976 0872 18BF     		it	ne
 8977 0874 0120     		movne	r0, #1
 8978              	.LVL756:
 8979              	.L852:
1766:src/keys.c    **** fin2:		State2.gtodot = 0;
 8980              		.loc 1 1766 7 is_stmt 1 view .LVU2774
 8981 0876 FFF7FEFF 		bl	set_pc
 8982              	.LVL757:
 8983              	.L856:
1767:src/keys.c    **** 		State2.digval = 0;
 8984              		.loc 1 1767 8 view .LVU2775
1767:src/keys.c    **** 		State2.digval = 0;
 8985              		.loc 1 1767 22 is_stmt 0 view .LVU2776
 8986 087a 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 8987 087e 3368     		ldr	r3, [r6]
1768:src/keys.c    **** 		State2.numdigit = 0;
 8988              		.loc 1 1768 17 view .LVU2777
 8989 0880 0022     		movs	r2, #0
1767:src/keys.c    **** 		State2.digval = 0;
 8990              		.loc 1 1767 22 view .LVU2778
 8991 0882 6FF30001 		bfc	r1, #0, #1
 8992 0886 88F81510 		strb	r1, [r8, #21]
1768:src/keys.c    **** 		State2.numdigit = 0;
 8993              		.loc 1 1768 3 is_stmt 1 view .LVU2779
1768:src/keys.c    **** 		State2.numdigit = 0;
 8994              		.loc 1 1768 17 is_stmt 0 view .LVU2780
ARM GAS  /tmp/ccK8gYGY.s 			page 268


 8995 088a A8F80820 		strh	r2, [r8, #8]	@ movhi
1769:src/keys.c    **** 	}
 8996              		.loc 1 1769 3 is_stmt 1 view .LVU2781
1769:src/keys.c    **** 	}
 8997              		.loc 1 1769 19 is_stmt 0 view .LVU2782
 8998 088e 88F80B20 		strb	r2, [r8, #11]
 8999              	.LBE1024:
 9000              	.LBE1023:
3285:src/keys.c    **** 
 9001              		.loc 1 3285 10 view .LVU2783
 9002 0892 3324     		movs	r4, #51
 9003 0894 0FE4     		b	.L806
 9004              	.LVL758:
 9005              	.L1096:
3285:src/keys.c    **** 
 9006              		.loc 1 3285 10 view .LVU2784
 9007              	.LBE1415:
 9008              	.LBE1484:
 9009              	.LBB1485:
3588:src/keys.c    **** 	  c = STATE_UNFINISHED;
 9010              		.loc 1 3588 4 is_stmt 1 view .LVU2785
 9011              	.LBB1465:
 9012              	.LBI1465:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 9013              		.loc 1 552 13 view .LVU2786
 9014              	.LBB1466:
 553:src/keys.c    **** 		return;
 9015              		.loc 1 553 2 view .LVU2787
 553:src/keys.c    **** 		return;
 9016              		.loc 1 553 6 is_stmt 0 view .LVU2788
 9017 0896 FFF7FEFF 		bl	is_bad_cmdline
 9018              	.LVL759:
 553:src/keys.c    **** 		return;
 9019              		.loc 1 553 5 view .LVU2789
 9020 089a 0546     		mov	r5, r0
 9021 089c 0028     		cmp	r0, #0
 9022 089e 40F0DB80 		bne	.L1312
 9023 08a2 2046     		mov	r0, r4
 9024 08a4 FFF7FEFF 		bl	init_arg.part.0
 9025              	.LVL760:
 9026              	.LBE1466:
 9027              	.LBE1465:
3589:src/keys.c    **** 	}
 9028              		.loc 1 3589 6 view .LVU2790
 9029 08a8 3324     		movs	r4, #51
 9030              	.LVL761:
3589:src/keys.c    **** 	}
 9031              		.loc 1 3589 6 view .LVU2791
 9032 08aa 3368     		ldr	r3, [r6]
 9033 08ac 03E4     		b	.L806
 9034              	.LVL762:
 9035              	.L1168:
3589:src/keys.c    **** 	}
 9036              		.loc 1 3589 6 view .LVU2792
 9037              	.LBE1485:
 9038              	.LBB1486:
 9039 08ae 1C46     		mov	r4, r3
ARM GAS  /tmp/ccK8gYGY.s 			page 269


 9040              	.LVL763:
3589:src/keys.c    **** 	}
 9041              		.loc 1 3589 6 view .LVU2793
 9042 08b0 1FE4     		b	.L1115
 9043              	.LVL764:
 9044              	.L1332:
3589:src/keys.c    **** 	}
 9045              		.loc 1 3589 6 view .LVU2794
 9046              	.LBE1486:
 9047              	.LBB1487:
 9048              	.LBB1416:
3288:src/keys.c    **** 
 9049              		.loc 1 3288 3 is_stmt 1 view .LVU2795
 9050              	.LBB1043:
 9051              	.LBB1044:
1599:src/keys.c    **** 	State2.dot = 0;
 9052              		.loc 1 1599 15 is_stmt 0 view .LVU2796
 9053 08b2 22F06203 		bic	r3, r2, #98
 9054              	.LBE1044:
 9055              	.LBE1043:
3288:src/keys.c    **** 
 9056              		.loc 1 3288 10 view .LVU2797
 9057 08b6 E4B2     		uxtb	r4, r4
 9058              	.LVL765:
 9059              	.LBB1057:
 9060              	.LBI1043:
1589:src/keys.c    **** 	static const unsigned char op_map[][2] = {
 9061              		.loc 1 1589 12 is_stmt 1 view .LVU2798
 9062              	.LBB1054:
1590:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
 9063              		.loc 1 1590 2 view .LVU2799
1595:src/keys.c    **** 	int f = State2.dot;
 9064              		.loc 1 1595 2 view .LVU2800
1599:src/keys.c    **** 	State2.dot = 0;
 9065              		.loc 1 1599 15 is_stmt 0 view .LVU2801
 9066 08b8 88F81530 		strb	r3, [r8, #21]
1595:src/keys.c    **** 	int f = State2.dot;
 9067              		.loc 1 1595 20 view .LVU2802
 9068 08bc C2F34009 		ubfx	r9, r2, #1, #1
 9069              	.LVL766:
1596:src/keys.c    **** 
 9070              		.loc 1 1596 2 is_stmt 1 view .LVU2803
1596:src/keys.c    **** 
 9071              		.loc 1 1596 16 is_stmt 0 view .LVU2804
 9072 08c0 C2F3801B 		ubfx	fp, r2, #6, #1
 9073              	.LVL767:
1598:src/keys.c    **** 	State2.cmplx = 0;
 9074              		.loc 1 1598 2 is_stmt 1 view .LVU2805
1599:src/keys.c    **** 	State2.dot = 0;
 9075              		.loc 1 1599 2 view .LVU2806
1600:src/keys.c    **** #ifdef DM42
 9076              		.loc 1 1600 2 view .LVU2807
1602:src/keys.c    **** #endif
 9077              		.loc 1 1602 2 view .LVU2808
 9078              	.LBB1045:
 9079              	.LBI1045:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
ARM GAS  /tmp/ccK8gYGY.s 			page 270


 9080              		.loc 1 114 13 view .LVU2809
 9081              	.LBE1045:
 9082              	.LBE1054:
 9083              	.LBE1057:
 9084              	.LBE1416:
 9085              	.LBE1487:
 115:src/keys.c    **** }
 9086              		.loc 1 115 2 view .LVU2810
 9087              	.LBB1488:
 9088              	.LBB1417:
 9089              	.LBB1058:
 9090              	.LBB1055:
 9091              	.LBB1052:
 9092              	.LBB1046:
 9093              	.LBI1046:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 9094              		.loc 1 104 20 view .LVU2811
 9095              	.LBB1047:
 105:src/keys.c    **** 	State2.shifts = shift;
 9096              		.loc 1 105 2 view .LVU2812
 9097              	.LBB1048:
 9098              	.LBI1048:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 9099              		.loc 1 96 13 view .LVU2813
 9100              	.LBB1049:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9101              		.loc 1 97 2 view .LVU2814
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9102              		.loc 1 97 18 is_stmt 0 view .LVU2815
 9103 08c4 FFF7FEFF 		bl	shift_down
 9104              	.LVL768:
  98:src/keys.c    **** }
 9105              		.loc 1 98 2 is_stmt 1 view .LVU2816
 9106              	.LBE1049:
 9107              	.LBE1048:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9108              		.loc 1 106 2 view .LVU2817
 9109              	.LBE1047:
 9110              	.LBE1046:
 9111              	.LBE1052:
1604:src/keys.c    **** 
 9112              		.loc 1 1604 2 is_stmt 0 view .LVU2818
 9113 08c8 292C     		cmp	r4, #41
 9114              	.LBB1053:
 9115              	.LBB1051:
 9116              	.LBB1050:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9117              		.loc 1 106 16 view .LVU2819
 9118 08ca 88F810A0 		strb	r10, [r8, #16]
 108:src/keys.c    **** }
 9119              		.loc 1 108 2 is_stmt 1 view .LVU2820
 9120              	.LVL769:
 108:src/keys.c    **** }
 9121              		.loc 1 108 2 is_stmt 0 view .LVU2821
 9122              	.LBE1050:
 9123              	.LBE1051:
 9124              	.LBE1053:
ARM GAS  /tmp/ccK8gYGY.s 			page 271


1604:src/keys.c    **** 
 9125              		.loc 1 1604 2 is_stmt 1 view .LVU2822
 9126 08ce 00F05284 		beq	.L861
 9127 08d2 15D8     		bhi	.L862
 9128 08d4 013C     		subs	r4, r4, #1
 9129              	.LVL770:
1604:src/keys.c    **** 
 9130              		.loc 1 1604 2 is_stmt 0 view .LVU2823
 9131 08d6 E3B2     		uxtb	r3, r4
 9132 08d8 022B     		cmp	r3, #2
 9133 08da 3FF603AF 		bhi	.L1314
1609:src/keys.c    **** 
 9134              		.loc 1 1609 3 is_stmt 1 view .LVU2824
1609:src/keys.c    **** 
 9135              		.loc 1 1609 54 is_stmt 0 view .LVU2825
 9136 08de 274B     		ldr	r3, .L1410+32
 9137 08e0 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
 9138 08e4 03EB4404 		add	r4, r3, r4, lsl #1
 9139              	.LVL771:
1609:src/keys.c    **** 
 9140              		.loc 1 1609 27 view .LVU2826
 9141 08e8 B9F1000F 		cmp	r9, #0
1609:src/keys.c    **** 
 9142              		.loc 1 1609 54 view .LVU2827
 9143 08ec 14F80B40 		ldrb	r4, [r4, fp]	@ zero_extendqisi2
1609:src/keys.c    **** 
 9144              		.loc 1 1609 27 view .LVU2828
 9145 08f0 14BF     		ite	ne
 9146 08f2 4FF4A063 		movne	r3, #1280
 9147 08f6 4FF40073 		moveq	r3, #512
1609:src/keys.c    **** 
 9148              		.loc 1 1609 37 view .LVU2829
 9149 08fa 1C43     		orrs	r4, r4, r3
 9150 08fc 2046     		mov	r0, r4
 9151 08fe 91E5     		b	.L867
 9152              	.LVL772:
 9153              	.L862:
1604:src/keys.c    **** 
 9154              		.loc 1 1604 2 view .LVU2830
 9155 0900 2D2C     		cmp	r4, #45
 9156 0902 7FF4EFAE 		bne	.L1314
1612:src/keys.c    **** 		goto stay;
 9157              		.loc 1 1612 3 is_stmt 1 view .LVU2831
 9158 0906 89F00109 		eor	r9, r9, #1
 9159              	.LVL773:
1613:src/keys.c    **** 
 9160              		.loc 1 1613 3 view .LVU2832
 9161              	.L868:
1628:src/keys.c    **** 		State2.cmplx = cmplx;
 9162              		.loc 1 1628 4 view .LVU2833
1629:src/keys.c    **** 		State2.dot = f;
 9163              		.loc 1 1629 3 view .LVU2834
1630:src/keys.c    **** 		break;
 9164              		.loc 1 1630 3 view .LVU2835
1629:src/keys.c    **** 		State2.dot = f;
 9165              		.loc 1 1629 16 is_stmt 0 view .LVU2836
 9166 090a 4FEA4902 		lsl	r2, r9, #1
ARM GAS  /tmp/ccK8gYGY.s 			page 272


 9167 090e 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 9168 0912 3368     		ldr	r3, [r6]
 9169 0914 42F02002 		orr	r2, r2, #32
 9170 0918 42EA8B12 		orr	r2, r2, fp, lsl #6
 9171 091c 02F06202 		and	r2, r2, #98
 9172 0920 21F06201 		bic	r1, r1, #98
 9173 0924 0A43     		orrs	r2, r2, r1
 9174 0926 88F81520 		strb	r2, [r8, #21]
1631:src/keys.c    **** 
 9175              		.loc 1 1631 3 is_stmt 1 view .LVU2837
1636:src/keys.c    **** }
 9176              		.loc 1 1636 9 is_stmt 0 view .LVU2838
 9177 092a 3324     		movs	r4, #51
 9178              	.LVL774:
1631:src/keys.c    **** 
 9179              		.loc 1 1631 3 view .LVU2839
 9180 092c FFF7C3BB 		b	.L806
 9181              	.LVL775:
 9182              	.L1328:
1631:src/keys.c    **** 
 9183              		.loc 1 1631 3 view .LVU2840
 9184              	.LBE1055:
 9185              	.LBE1058:
3265:src/keys.c    **** 		return STATE_IGNORE;
 9186              		.loc 1 3265 3 is_stmt 1 view .LVU2841
3265:src/keys.c    **** 		return STATE_IGNORE;
 9187              		.loc 1 3265 15 is_stmt 0 view .LVU2842
 9188 0930 1D60     		str	r5, [r3]
3266:src/keys.c    **** 	}
 9189              		.loc 1 3266 3 is_stmt 1 view .LVU2843
 9190              	.LVL776:
3266:src/keys.c    **** 	}
 9191              		.loc 1 3266 3 is_stmt 0 view .LVU2844
 9192              	.LBE1417:
 9193              	.LBE1488:
3662:src/keys.c    **** #ifndef CONSOLE
 9194              		.loc 1 3662 3 is_stmt 1 view .LVU2845
 9195              	.LBB1489:
 9196              	.LBB1418:
3266:src/keys.c    **** 	}
 9197              		.loc 1 3266 10 is_stmt 0 view .LVU2846
 9198 0932 3224     		movs	r4, #50
 9199 0934 FFF7C2BB 		b	.L826
 9200              	.LVL777:
 9201              	.L1358:
 9202              	.LBB1059:
 9203              	.LBB1014:
2353:src/keys.c    **** 	State2.cmplx = 0;
 9204              		.loc 1 2353 2 is_stmt 1 view .LVU2847
2354:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9205              		.loc 1 2354 15 is_stmt 0 view .LVU2848
 9206 0938 6BF34102 		bfi	r2, fp, #1, #1
2353:src/keys.c    **** 	State2.cmplx = 0;
 9207              		.loc 1 2353 14 view .LVU2849
 9208 093c 0720     		movs	r0, #7
2355:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9209              		.loc 1 2355 5 view .LVU2850
ARM GAS  /tmp/ccK8gYGY.s 			page 273


 9210 093e BCF1640F 		cmp	ip, #100
2354:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9211              		.loc 1 2354 15 view .LVU2851
 9212 0942 88F81520 		strb	r2, [r8, #21]
2353:src/keys.c    **** 	State2.cmplx = 0;
 9213              		.loc 1 2353 14 view .LVU2852
 9214 0946 88F80F00 		strb	r0, [r8, #15]
2354:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9215              		.loc 1 2354 2 is_stmt 1 view .LVU2853
2355:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9216              		.loc 1 2355 2 view .LVU2854
2355:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9217              		.loc 1 2355 5 is_stmt 0 view .LVU2855
 9218 094a 00F05384 		beq	.L1171
2351:src/keys.c    **** 
 9219              		.loc 1 2351 44 view .LVU2856
 9220 094e 4FF02D0A 		mov	r10, #45
 9221 0952 3CE7     		b	.L1129
 9222              	.LVL778:
 9223              	.L1169:
2351:src/keys.c    **** 
 9224              		.loc 1 2351 44 view .LVU2857
 9225              	.LBE1014:
 9226              	.LBE1059:
 9227              	.LBE1418:
 9228              	.LBE1489:
 9229              	.LBB1490:
 9230 0954 2C46     		mov	r4, r5
 9231              	.LVL779:
2351:src/keys.c    **** 
 9232              		.loc 1 2351 44 view .LVU2858
 9233 0956 FFF7CCBB 		b	.L1115
 9234              	.L1411:
 9235 095a 00BF     		.align	2
 9236              	.L1410:
 9237 095c 00000000 		.word	NonProgrammable
 9238 0960 00000000 		.word	OpCode
 9239 0964 00000000 		.word	OpCodeDisplayPending
 9240 0968 00000000 		.word	JustDisplayed
 9241 096c 00040800 		.word	525312
 9242 0970 00000000 		.word	.LANCHOR6
 9243 0974 00000000 		.word	.LANCHOR5
 9244 0978 00000000 		.word	main_ram
 9245 097c 00000000 		.word	.LANCHOR19
 9246 0980 00000000 		.word	StateWhileOn
 9247              	.LVL780:
 9248              	.L1334:
2351:src/keys.c    **** 
 9249              		.loc 1 2351 44 view .LVU2859
 9250              	.LBE1490:
 9251              	.LBB1491:
 9252              	.LBB1419:
3294:src/keys.c    **** 
 9253              		.loc 1 3294 3 is_stmt 1 view .LVU2860
 9254              	.LBB1060:
 9255              	.LBB1061:
2916:src/keys.c    **** 
ARM GAS  /tmp/ccK8gYGY.s 			page 274


 9256              		.loc 1 2916 12 is_stmt 0 view .LVU2861
 9257 0984 D64B     		ldr	r3, .L1412
 9258 0986 1B68     		ldr	r3, [r3]
2916:src/keys.c    **** 
 9259              		.loc 1 2916 31 view .LVU2862
 9260 0988 B3F9DE37 		ldrsh	r3, [r3, #2014]
 9261              	.LBE1061:
 9262              	.LBE1060:
3294:src/keys.c    **** 
 9263              		.loc 1 3294 10 view .LVU2863
 9264 098c E4B2     		uxtb	r4, r4
 9265              	.LVL781:
 9266              	.LBB1080:
 9267              	.LBI1060:
2914:src/keys.c    **** 	int n = ((int)State2.status) - 3;
 9268              		.loc 1 2914 12 is_stmt 1 view .LVU2864
 9269              	.LBB1072:
2915:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9270              		.loc 1 2915 2 view .LVU2865
2916:src/keys.c    **** 
 9271              		.loc 1 2916 2 view .LVU2866
2916:src/keys.c    **** 
 9272              		.loc 1 2916 31 is_stmt 0 view .LVU2867
 9273 098e 002B     		cmp	r3, #0
 9274 0990 B4BF     		ite	lt
 9275 0992 0B23     		movlt	r3, #11
 9276 0994 0A23     		movge	r3, #10
 9277              	.LVL782:
2918:src/keys.c    **** 		if (--n < -2)
 9278              		.loc 1 2918 2 is_stmt 1 view .LVU2868
2918:src/keys.c    **** 		if (--n < -2)
 9279              		.loc 1 2918 5 is_stmt 0 view .LVU2869
 9280 0996 122C     		cmp	r4, #18
 9281 0998 00F08D81 		beq	.L1369
2922:src/keys.c    **** 		if (++n > max)
 9282              		.loc 1 2922 7 is_stmt 1 view .LVU2870
2922:src/keys.c    **** 		if (++n > max)
 9283              		.loc 1 2922 10 is_stmt 0 view .LVU2871
 9284 099c 182C     		cmp	r4, #24
 9285 099e 00F0C681 		beq	.L1370
2926:src/keys.c    **** 		State2.status = 0;
 9286              		.loc 1 2926 7 is_stmt 1 view .LVU2872
2926:src/keys.c    **** 		State2.status = 0;
 9287              		.loc 1 2926 10 is_stmt 0 view .LVU2873
 9288 09a2 102C     		cmp	r4, #16
 9289 09a4 00F03084 		beq	.L1371
 9290              	.LBB1062:
2931:src/keys.c    **** 		if (nn <= 9)
 9291              		.loc 1 2931 3 is_stmt 1 view .LVU2874
 9292              	.LVL783:
 9293              	.LBB1063:
 9294              	.LBI1063:
 210:src/keys.c    **** {
 9295              		.loc 1 210 14 view .LVU2875
 9296              	.LBB1064:
 212:src/keys.c    ****     // K00 - K05
 9297              		.loc 1 212 3 view .LVU2876
ARM GAS  /tmp/ccK8gYGY.s 			page 275


 234:src/keys.c    **** }
 9298              		.loc 1 234 3 view .LVU2877
 9299              	.LBB1065:
 9300              	.LBI1065:
 131:src/keys.c    **** {
 9301              		.loc 1 131 12 view .LVU2878
 9302              	.LBB1066:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9303              		.loc 1 133 2 view .LVU2879
 143:src/keys.c    **** }
 9304              		.loc 1 143 2 view .LVU2880
 143:src/keys.c    **** }
 9305              		.loc 1 143 23 is_stmt 0 view .LVU2881
 9306 09a8 CE4A     		ldr	r2, .L1412+4
 9307              	.LBE1066:
 9308              	.LBE1065:
 234:src/keys.c    **** }
 9309              		.loc 1 234 28 view .LVU2882
 9310 09aa CF48     		ldr	r0, .L1412+8
 9311              	.LBB1068:
 9312              	.LBB1067:
 143:src/keys.c    **** }
 9313              		.loc 1 143 23 view .LVU2883
 9314 09ac 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 9315 09ae 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 9316 09b0 02F07F02 		and	r2, r2, #127
 9317              	.LVL784:
 143:src/keys.c    **** }
 9318              		.loc 1 143 23 view .LVU2884
 9319              	.LBE1067:
 9320              	.LBE1068:
 9321              	.LBE1064:
 9322              	.LBE1063:
2932:src/keys.c    **** 			n = nn;
 9323              		.loc 1 2932 3 is_stmt 1 view .LVU2885
2932:src/keys.c    **** 			n = nn;
 9324              		.loc 1 2932 6 is_stmt 0 view .LVU2886
 9325 09b4 092A     		cmp	r2, #9
 9326 09b6 40F2D481 		bls	.L1137
2934:src/keys.c    **** 			n = n == max ? 10 : max;
 9327              		.loc 1 2934 11 view .LVU2887
 9328 09ba 702A     		cmp	r2, #112
 9329              	.LBE1062:
2915:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9330              		.loc 1 2915 6 view .LVU2888
 9331 09bc A1F10301 		sub	r1, r1, #3
 9332              	.LVL785:
 9333              	.LBB1069:
2934:src/keys.c    **** 			n = n == max ? 10 : max;
 9334              		.loc 1 2934 8 is_stmt 1 view .LVU2889
2934:src/keys.c    **** 			n = n == max ? 10 : max;
 9335              		.loc 1 2934 11 is_stmt 0 view .LVU2890
 9336 09c0 00F07985 		beq	.L1372
2936:src/keys.c    **** 			n = 10; 
 9337              		.loc 1 2936 8 is_stmt 1 view .LVU2891
 9338              	.LBE1069:
2915:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
ARM GAS  /tmp/ccK8gYGY.s 			page 276


 9339              		.loc 1 2915 6 is_stmt 0 view .LVU2892
 9340 09c4 7F2A     		cmp	r2, #127
 9341 09c6 0CBF     		ite	eq
 9342 09c8 0B46     		moveq	r3, r1
 9343              	.LVL786:
2915:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9344              		.loc 1 2915 6 view .LVU2893
 9345 09ca 0A23     		movne	r3, #10
 9346              	.LVL787:
 9347              	.L889:
2939:src/keys.c    **** 
 9348              		.loc 1 2939 2 is_stmt 1 view .LVU2894
2939:src/keys.c    **** 
 9349              		.loc 1 2939 20 is_stmt 0 view .LVU2895
 9350 09cc 0333     		adds	r3, r3, #3
 9351              	.LVL788:
2939:src/keys.c    **** 
 9352              		.loc 1 2939 16 view .LVU2896
 9353 09ce 88F80C30 		strb	r3, [r8, #12]
2941:src/keys.c    **** }
 9354              		.loc 1 2941 2 is_stmt 1 view .LVU2897
 9355              	.LBE1072:
 9356              	.LBE1080:
3294:src/keys.c    **** 
 9357              		.loc 1 3294 10 is_stmt 0 view .LVU2898
 9358 09d2 3324     		movs	r4, #51
 9359              	.LVL789:
3294:src/keys.c    **** 
 9360              		.loc 1 3294 10 view .LVU2899
 9361 09d4 3368     		ldr	r3, [r6]
 9362              	.LVL790:
 9363              	.LBB1081:
 9364              	.LBB1073:
2941:src/keys.c    **** }
 9365              		.loc 1 2941 9 view .LVU2900
 9366 09d6 FFF76EBB 		b	.L806
 9367              	.LVL791:
 9368              	.L1338:
2941:src/keys.c    **** }
 9369              		.loc 1 2941 9 view .LVU2901
 9370              	.LBE1073:
 9371              	.LBE1081:
3317:src/keys.c    **** 
 9372              		.loc 1 3317 3 is_stmt 1 view .LVU2902
 9373              	.LBB1082:
 9374              	.LBB1083:
 9375              	.LBB1084:
 9376              	.LBB1085:
 9377              	.LBB1086:
 9378              	.LBB1087:
 9379              	.LBB1088:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9380              		.loc 1 97 18 is_stmt 0 view .LVU2903
 9381 09da FFF7FEFF 		bl	shift_down
 9382              	.LVL792:
 9383              	.LBE1088:
 9384              	.LBE1087:
ARM GAS  /tmp/ccK8gYGY.s 			page 277


 9385              	.LBE1086:
 9386              	.LBE1085:
 9387              	.LBE1084:
 9388              	.LBE1083:
 9389              	.LBE1082:
3317:src/keys.c    **** 
 9390              		.loc 1 3317 10 view .LVU2904
 9391 09de E4B2     		uxtb	r4, r4
 9392              	.LVL793:
 9393              	.LBB1109:
 9394              	.LBI1082:
1643:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 9395              		.loc 1 1643 12 is_stmt 1 view .LVU2905
 9396              	.LBB1105:
1644:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
 9397              		.loc 1 1644 2 view .LVU2906
1649:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
 9398              		.loc 1 1649 2 view .LVU2907
1653:src/keys.c    **** 	const int f = (shift == SHIFT_F);
 9399              		.loc 1 1653 2 view .LVU2908
 9400              	.LBB1097:
 9401              	.LBI1084:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 9402              		.loc 1 114 13 view .LVU2909
 9403              	.LBE1097:
 9404              	.LBE1105:
 9405              	.LBE1109:
 9406              	.LBE1419:
 9407              	.LBE1491:
 115:src/keys.c    **** }
 9408              		.loc 1 115 2 view .LVU2910
 9409              	.LBB1492:
 9410              	.LBB1420:
 9411              	.LBB1110:
 9412              	.LBB1106:
 9413              	.LBB1098:
 9414              	.LBB1094:
 9415              	.LBI1085:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 9416              		.loc 1 104 20 view .LVU2911
 9417              	.LBB1091:
 105:src/keys.c    **** 	State2.shifts = shift;
 9418              		.loc 1 105 2 view .LVU2912
 9419              	.LBB1090:
 9420              	.LBI1087:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 9421              		.loc 1 96 13 view .LVU2913
 9422              	.LBB1089:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9423              		.loc 1 97 2 view .LVU2914
  98:src/keys.c    **** }
 9424              		.loc 1 98 2 view .LVU2915
  98:src/keys.c    **** }
 9425              		.loc 1 98 52 is_stmt 0 view .LVU2916
 9426 09e0 8346     		mov	fp, r0
 9427              	.LVL794:
  98:src/keys.c    **** }
ARM GAS  /tmp/ccK8gYGY.s 			page 278


 9428              		.loc 1 98 52 view .LVU2917
 9429 09e2 08B9     		cbnz	r0, .L899
 9430 09e4 98F810B0 		ldrb	fp, [r8, #16]	@ zero_extendqisi2
 9431              	.L899:
 9432              	.LVL795:
  98:src/keys.c    **** }
 9433              		.loc 1 98 52 view .LVU2918
 9434              	.LBE1089:
 9435              	.LBE1090:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9436              		.loc 1 106 2 is_stmt 1 view .LVU2919
 9437              	.LBE1091:
 9438              	.LBE1094:
 9439              	.LBE1098:
1656:src/keys.c    **** #ifdef DM42
 9440              		.loc 1 1656 15 is_stmt 0 view .LVU2920
 9441 09e8 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 9442              	.LBB1099:
 9443              	.LBB1095:
 9444              	.LBB1092:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9445              		.loc 1 106 16 view .LVU2921
 9446 09ec 0023     		movs	r3, #0
 9447              	.LBE1092:
 9448              	.LBE1095:
 9449              	.LBE1099:
1656:src/keys.c    **** #ifdef DM42
 9450              		.loc 1 1656 15 view .LVU2922
 9451 09ee 63F38202 		bfi	r2, r3, #2, #1
1654:src/keys.c    **** 
 9452              		.loc 1 1654 23 view .LVU2923
 9453 09f2 ABF1010A 		sub	r10, fp, #1
1656:src/keys.c    **** #ifdef DM42
 9454              		.loc 1 1656 15 view .LVU2924
 9455 09f6 88F81520 		strb	r2, [r8, #21]
 9456              	.LBB1100:
 9457              	.LBB1096:
 9458              	.LBB1093:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9459              		.loc 1 106 16 view .LVU2925
 9460 09fa 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 9461              		.loc 1 108 2 is_stmt 1 view .LVU2926
 9462              	.LVL796:
 108:src/keys.c    **** }
 9463              		.loc 1 108 2 is_stmt 0 view .LVU2927
 9464              	.LBE1093:
 9465              	.LBE1096:
 9466              	.LBE1100:
1654:src/keys.c    **** 
 9467              		.loc 1 1654 2 is_stmt 1 view .LVU2928
1654:src/keys.c    **** 
 9468              		.loc 1 1654 23 is_stmt 0 view .LVU2929
 9469 09fe BAFA8AFA 		clz	r10, r10
1658:src/keys.c    **** 	display_current_menu ();
 9470              		.loc 1 1658 2 view .LVU2930
 9471 0a02 FFF7FEFF 		bl	set_last_menu
ARM GAS  /tmp/ccK8gYGY.s 			page 279


 9472              	.LVL797:
1659:src/keys.c    **** #endif
 9473              		.loc 1 1659 2 view .LVU2931
 9474 0a06 FFF7FEFF 		bl	display_current_menu
 9475              	.LVL798:
1662:src/keys.c    **** 	  if (!C_LOCK_ON) {
 9476              		.loc 1 1662 5 view .LVU2932
 9477 0a0a 2D2C     		cmp	r4, #45
1654:src/keys.c    **** 
 9478              		.loc 1 1654 23 view .LVU2933
 9479 0a0c 4FEA5A1A 		lsr	r10, r10, #5
 9480              	.LVL799:
1656:src/keys.c    **** #ifdef DM42
 9481              		.loc 1 1656 2 is_stmt 1 view .LVU2934
1658:src/keys.c    **** 	display_current_menu ();
 9482              		.loc 1 1658 2 view .LVU2935
1659:src/keys.c    **** #endif
 9483              		.loc 1 1659 2 view .LVU2936
1662:src/keys.c    **** 	  if (!C_LOCK_ON) {
 9484              		.loc 1 1662 2 view .LVU2937
1662:src/keys.c    **** 	  if (!C_LOCK_ON) {
 9485              		.loc 1 1662 5 is_stmt 0 view .LVU2938
 9486 0a10 00F05681 		beq	.L1373
1671:src/keys.c    **** 	
 9487              		.loc 1 1671 2 is_stmt 1 view .LVU2939
1671:src/keys.c    **** 	
 9488              		.loc 1 1671 5 is_stmt 0 view .LVU2940
 9489 0a14 BBF1000F 		cmp	fp, #0
 9490 0a18 3FF464AE 		beq	.L1314
1673:src/keys.c    **** 		return op_map[c - K10][f];
 9491              		.loc 1 1673 2 is_stmt 1 view .LVU2941
1673:src/keys.c    **** 		return op_map[c - K10][f];
 9492              		.loc 1 1673 15 is_stmt 0 view .LVU2942
 9493 0a1c A31F     		subs	r3, r4, #6
1673:src/keys.c    **** 		return op_map[c - K10][f];
 9494              		.loc 1 1673 5 view .LVU2943
 9495 0a1e DAB2     		uxtb	r2, r3
 9496 0a20 022A     		cmp	r2, #2
 9497 0a22 40F29281 		bls	.L1374
1676:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 9498              		.loc 1 1676 2 is_stmt 1 view .LVU2944
1676:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 9499              		.loc 1 1676 15 is_stmt 0 view .LVU2945
 9500 0a26 0E3C     		subs	r4, r4, #14
 9501              	.LVL800:
1676:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 9502              		.loc 1 1676 5 view .LVU2946
 9503 0a28 E3B2     		uxtb	r3, r4
 9504 0a2a 012B     		cmp	r3, #1
 9505 0a2c 3FF65AAE 		bhi	.L1314
1677:src/keys.c    **** 
 9506              		.loc 1 1677 3 is_stmt 1 view .LVU2947
 9507 0a30 AE4A     		ldr	r2, .L1412+12
 9508              	.LBB1101:
 9509              	.LBB1102:
 742:src/keys.c    **** }
 9510              		.loc 1 742 15 is_stmt 0 view .LVU2948
ARM GAS  /tmp/ccK8gYGY.s 			page 280


 9511 0a32 98F81110 		ldrb	r1, [r8, #17]	@ zero_extendqisi2
 9512 0a36 3368     		ldr	r3, [r6]
 9513              	.LBE1102:
 9514              	.LBE1101:
1677:src/keys.c    **** 
 9515              		.loc 1 1677 3 view .LVU2949
 9516 0a38 02EB4402 		add	r2, r2, r4, lsl #1
1679:src/keys.c    **** }
 9517              		.loc 1 1679 9 view .LVU2950
 9518 0a3c 3324     		movs	r4, #51
 9519              	.LVL801:
1677:src/keys.c    **** 
 9520              		.loc 1 1677 3 view .LVU2951
 9521 0a3e 12F80A20 		ldrb	r2, [r2, r10]	@ zero_extendqisi2
 9522              	.LVL802:
 9523              	.LBB1104:
 9524              	.LBI1101:
 741:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 9525              		.loc 1 741 13 is_stmt 1 view .LVU2952
 9526              	.LBB1103:
 742:src/keys.c    **** }
 9527              		.loc 1 742 2 view .LVU2953
 742:src/keys.c    **** }
 9528              		.loc 1 742 15 is_stmt 0 view .LVU2954
 9529 0a42 9142     		cmp	r1, r2
 9530 0a44 08BF     		it	eq
 9531 0a46 0022     		moveq	r2, #0
 9532              	.LVL803:
 742:src/keys.c    **** }
 9533              		.loc 1 742 15 view .LVU2955
 9534 0a48 88F81120 		strb	r2, [r8, #17]
 743:src/keys.c    **** 
 9535              		.loc 1 743 1 view .LVU2956
 9536 0a4c FFF733BB 		b	.L806
 9537              	.L901:
 743:src/keys.c    **** 
 9538              		.loc 1 743 1 view .LVU2957
 9539              	.LBE1103:
 9540              	.LBE1104:
1671:src/keys.c    **** 	
 9541              		.loc 1 1671 2 is_stmt 1 view .LVU2958
1671:src/keys.c    **** 	
 9542              		.loc 1 1671 5 is_stmt 0 view .LVU2959
 9543 0a50 BBF1000F 		cmp	fp, #0
 9544 0a54 7FF446AE 		bne	.L1314
 9545              	.LVL804:
 9546              	.L1312:
1671:src/keys.c    **** 	
 9547              		.loc 1 1671 5 view .LVU2960
 9548 0a58 3368     		ldr	r3, [r6]
 9549              	.LBE1106:
 9550              	.LBE1110:
 9551              	.LBE1420:
 9552              	.LBE1492:
3409:src/keys.c    ****   //print_debug(60,c);
 9553              		.loc 1 3409 7 view .LVU2961
 9554 0a5a 0025     		movs	r5, #0
ARM GAS  /tmp/ccK8gYGY.s 			page 281


 9555              	.LBB1493:
3589:src/keys.c    **** 	}
 9556              		.loc 1 3589 6 view .LVU2962
 9557 0a5c 3324     		movs	r4, #51
 9558 0a5e FFF72ABB 		b	.L806
 9559              	.LVL805:
 9560              	.L878:
3589:src/keys.c    **** 	}
 9561              		.loc 1 3589 6 view .LVU2963
 9562              	.LBE1493:
 9563              	.LBB1494:
 9564              	.LBB1421:
 9565              	.LBB1111:
 9566              	.LBB1015:
2375:src/keys.c    **** 		// digit 2..9, -> or .
 9567              		.loc 1 2375 7 is_stmt 1 view .LVU2964
2375:src/keys.c    **** 		// digit 2..9, -> or .
 9568              		.loc 1 2375 10 is_stmt 0 view .LVU2965
 9569 0a62 BCF1090F 		cmp	ip, #9
 9570 0a66 40F29080 		bls	.L880
 9571              	.L872:
2375:src/keys.c    **** 		// digit 2..9, -> or .
 9572              		.loc 1 2375 19 view .LVU2966
 9573 0a6a 2C2C     		cmp	r4, #44
 9574 0a6c 00F08D80 		beq	.L880
2375:src/keys.c    **** 		// digit 2..9, -> or .
 9575              		.loc 1 2375 35 view .LVU2967
 9576 0a70 262C     		cmp	r4, #38
 9577 0a72 00F08A80 		beq	.L880
2381:src/keys.c    **** 	case K11:					// tests vs register
 9578              		.loc 1 2381 2 is_stmt 1 view .LVU2968
 9579 0a76 0C2C     		cmp	r4, #12
 9580 0a78 00F05782 		beq	.L883
 9581 0a7c 102C     		cmp	r4, #16
 9582 0a7e 3FF431AE 		beq	.L1314
 9583 0a82 072C     		cmp	r4, #7
 9584 0a84 00F05182 		beq	.L883
 9585              	.L875:
2395:src/keys.c    **** 	State2.cmplx = cmpx;
 9586              		.loc 1 2395 2 view .LVU2969
2396:src/keys.c    **** 	return STATE_UNFINISHED;
 9587              		.loc 1 2396 15 is_stmt 0 view .LVU2970
 9588 0a88 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2395:src/keys.c    **** 	State2.cmplx = cmpx;
 9589              		.loc 1 2395 14 view .LVU2971
 9590 0a8c 88F80F30 		strb	r3, [r8, #15]
2396:src/keys.c    **** 	return STATE_UNFINISHED;
 9591              		.loc 1 2396 2 is_stmt 1 view .LVU2972
2396:src/keys.c    **** 	return STATE_UNFINISHED;
 9592              		.loc 1 2396 15 is_stmt 0 view .LVU2973
 9593 0a90 6BF34102 		bfi	r2, fp, #1, #1
 9594 0a94 3368     		ldr	r3, [r6]
 9595              	.LVL806:
2396:src/keys.c    **** 	return STATE_UNFINISHED;
 9596              		.loc 1 2396 15 view .LVU2974
 9597 0a96 88F81520 		strb	r2, [r8, #21]
2397:src/keys.c    **** }
ARM GAS  /tmp/ccK8gYGY.s 			page 282


 9598              		.loc 1 2397 2 is_stmt 1 view .LVU2975
2397:src/keys.c    **** }
 9599              		.loc 1 2397 9 is_stmt 0 view .LVU2976
 9600 0a9a 3324     		movs	r4, #51
 9601              	.LVL807:
2397:src/keys.c    **** }
 9602              		.loc 1 2397 9 view .LVU2977
 9603 0a9c FFF70BBB 		b	.L806
 9604              	.LVL808:
 9605              	.L1359:
2397:src/keys.c    **** }
 9606              		.loc 1 2397 9 view .LVU2978
 9607              	.LBE1015:
 9608              	.LBE1111:
 9609              	.LBB1112:
 9610              	.LBB1033:
1715:src/keys.c    **** 	}
 9611              		.loc 1 1715 3 is_stmt 1 view .LVU2979
1715:src/keys.c    **** 	}
 9612              		.loc 1 1715 8 is_stmt 0 view .LVU2980
 9613 0aa0 FFF7FEFF 		bl	gtodot_digit
 9614              	.LVL809:
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9615              		.loc 1 1764 2 is_stmt 1 view .LVU2981
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9616              		.loc 1 1764 5 is_stmt 0 view .LVU2982
 9617 0aa4 0028     		cmp	r0, #0
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9618              		.loc 1 1764 5 view .LVU2983
 9619 0aa6 FFF61DAE 		blt	.L1314
 9620              	.L843:
1765:src/keys.c    **** fin:		set_pc(rawpc);
 9621              		.loc 1 1765 3 is_stmt 1 view .LVU2984
1765:src/keys.c    **** fin:		set_pc(rawpc);
 9622              		.loc 1 1765 11 is_stmt 0 view .LVU2985
 9623 0aaa FFF7FEFF 		bl	find_user_pc
 9624              	.LVL810:
1765:src/keys.c    **** fin:		set_pc(rawpc);
 9625              		.loc 1 1765 11 view .LVU2986
 9626 0aae E2E6     		b	.L852
 9627              	.LVL811:
 9628              	.L873:
1765:src/keys.c    **** fin:		set_pc(rawpc);
 9629              		.loc 1 1765 11 view .LVU2987
 9630              	.LBE1033:
 9631              	.LBE1112:
 9632              	.LBB1113:
 9633              	.LBB1016:
2367:src/keys.c    **** 		// Special 0
 9634              		.loc 1 2367 7 is_stmt 1 view .LVU2988
2367:src/keys.c    **** 		// Special 0
 9635              		.loc 1 2367 10 is_stmt 0 view .LVU2989
 9636 0ab0 BCF1000F 		cmp	ip, #0
 9637 0ab4 40F07086 		bne	.L876
2369:src/keys.c    **** 	}
 9638              		.loc 1 2369 3 is_stmt 1 view .LVU2990
2369:src/keys.c    **** 	}
ARM GAS  /tmp/ccK8gYGY.s 			page 283


 9639              		.loc 1 2369 18 is_stmt 0 view .LVU2991
 9640 0ab8 BBF1000F 		cmp	fp, #0
 9641 0abc 14BF     		ite	ne
 9642 0abe 2524     		movne	r4, #37
 9643              	.LVL812:
2369:src/keys.c    **** 	}
 9644              		.loc 1 2369 18 view .LVU2992
 9645 0ac0 1724     		moveq	r4, #23
2369:src/keys.c    **** 	}
 9646              		.loc 1 2369 47 view .LVU2993
 9647 0ac2 1C44     		add	r4, r4, r3
 9648 0ac4 8CE4     		b	.L840
 9649              	.LVL813:
 9650              	.L1354:
2369:src/keys.c    **** 	}
 9651              		.loc 1 2369 47 view .LVU2994
 9652              	.LBE1016:
 9653              	.LBE1113:
 9654              	.LBB1114:
 9655              	.LBB855:
 278:src/keys.c    **** 				case K53:
 9656              		.loc 1 278 4 is_stmt 1 view .LVU2995
 9657 0ac6 231F     		subs	r3, r4, #4
 9658 0ac8 1D2B     		cmp	r3, #29
 9659 0aca 3FF6D8AB 		bhi	.L926
 9660 0ace 01A0     		adr	r0, .L910
 9661 0ad0 50F823F0 		ldr	pc, [r0, r3, lsl #2]
 9662              		.p2align 2
 9663              	.L910:
 9664 0ad4 510B0000 		.word	.L913+1
 9665 0ad8 610B0000 		.word	.L912+1
 9666 0adc 7F020000 		.word	.L926+1
 9667 0ae0 7F020000 		.word	.L926+1
 9668 0ae4 7F020000 		.word	.L926+1
 9669 0ae8 7F020000 		.word	.L926+1
 9670 0aec 7F020000 		.word	.L926+1
 9671 0af0 7F020000 		.word	.L926+1
 9672 0af4 550B0000 		.word	.L911+1
 9673 0af8 7F020000 		.word	.L926+1
 9674 0afc 7F020000 		.word	.L926+1
 9675 0b00 7F020000 		.word	.L926+1
 9676 0b04 7F020000 		.word	.L926+1
 9677 0b08 7F020000 		.word	.L926+1
 9678 0b0c 7F020000 		.word	.L926+1
 9679 0b10 7F020000 		.word	.L926+1
 9680 0b14 7F020000 		.word	.L926+1
 9681 0b18 7F020000 		.word	.L926+1
 9682 0b1c 7F020000 		.word	.L926+1
 9683 0b20 7F020000 		.word	.L926+1
 9684 0b24 7F020000 		.word	.L926+1
 9685 0b28 7F020000 		.word	.L926+1
 9686 0b2c 7F020000 		.word	.L926+1
 9687 0b30 7F020000 		.word	.L926+1
 9688 0b34 7F020000 		.word	.L926+1
 9689 0b38 7F020000 		.word	.L926+1
 9690 0b3c 7F020000 		.word	.L926+1
 9691 0b40 7F020000 		.word	.L926+1
ARM GAS  /tmp/ccK8gYGY.s 			page 284


 9692 0b44 7F020000 		.word	.L926+1
 9693 0b48 4D0B0000 		.word	.L1141+1
 9694              		.p2align 1
 9695              	.L1141:
 280:src/keys.c    **** 				case K04:
 9696              		.loc 1 280 13 is_stmt 0 view .LVU2996
 9697 0b4c 0223     		movs	r3, #2
 9698 0b4e BBE5     		b	.L909
 9699              	.L913:
 277:src/keys.c    **** 			switch (c) {
 9700              		.loc 1 277 6 view .LVU2997
 9701 0b50 1223     		movs	r3, #18
 9702 0b52 B9E5     		b	.L909
 9703              	.L911:
 286:src/keys.c    **** 						finish_cpx_entry(1);
 9704              		.loc 1 286 6 is_stmt 1 view .LVU2998
 286:src/keys.c    **** 						finish_cpx_entry(1);
 9705              		.loc 1 286 9 is_stmt 0 view .LVU2999
 9706 0b54 11F0060F 		tst	r1, #6
 9707 0b58 40F0CB85 		bne	.L1375
 289:src/keys.c    **** 				default:
 9708              		.loc 1 289 13 view .LVU3000
 9709 0b5c 1123     		movs	r3, #17
 9710 0b5e B3E5     		b	.L909
 9711              	.L912:
 284:src/keys.c    **** 				case K20:
 9712              		.loc 1 284 6 is_stmt 1 view .LVU3001
 9713              	.LVL814:
 284:src/keys.c    **** 				case K20:
 9714              		.loc 1 284 6 is_stmt 0 view .LVU3002
 9715              	.LBE855:
 9716              	.LBE1114:
3325:src/keys.c    **** 		if (is_bad_cmdline())
 9717              		.loc 1 3325 2 is_stmt 1 view .LVU3003
 9718              	.LBB1115:
 9719              	.LBB856:
 284:src/keys.c    **** 				case K20:
 9720              		.loc 1 284 13 is_stmt 0 view .LVU3004
 9721 0b60 0923     		movs	r3, #9
 9722 0b62 B1E5     		b	.L909
 9723              	.LVL815:
 9724              	.L1382:
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 9725              		.loc 1 312 74 view .LVU3005
 9726 0b64 D8F81410 		ldr	r1, [r8, #20]
 9727 0b68 DFF894C1 		ldr	ip, .L1412+32
 9728 0b6c 11EA0C0F 		tst	r1, ip
 9729 0b70 3FF4AAAD 		beq	.L909
 315:src/keys.c    ****     /*
 9730              		.loc 1 315 3 is_stmt 1 view .LVU3006
 315:src/keys.c    ****     /*
 9731              		.loc 1 315 23 is_stmt 0 view .LVU3007
 9732 0b74 5E4B     		ldr	r3, .L1412+16
 315:src/keys.c    ****     /*
 9733              		.loc 1 315 6 view .LVU3008
 9734 0b76 1942     		tst	r1, r3
 9735 0b78 3FF468AB 		beq	.L1125
ARM GAS  /tmp/ccK8gYGY.s 			page 285


 9736              	.L919:
 9737              	.LBB848:
 384:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 9738              		.loc 1 384 5 is_stmt 1 view .LVU3009
 408:src/keys.c    **** 
 9739              		.loc 1 408 5 view .LVU3010
 413:src/keys.c    ****     col = smap[shift];
 9740              		.loc 1 413 5 view .LVU3011
 9741              	.LVL816:
 414:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 9742              		.loc 1 414 5 view .LVU3012
 414:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 9743              		.loc 1 414 15 is_stmt 0 view .LVU3013
 9744 0b7c 5D49     		ldr	r1, .L1412+20
 413:src/keys.c    ****     col = smap[shift];
 9745              		.loc 1 413 8 view .LVU3014
 9746 0b7e 5E4B     		ldr	r3, .L1412+24
 414:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 9747              		.loc 1 414 9 view .LVU3015
 9748 0b80 11F80BC0 		ldrb	ip, [r1, fp]	@ zero_extendqisi2
 9749              	.LVL817:
 415:src/keys.c    ****   }
 9750              		.loc 1 415 5 is_stmt 1 view .LVU3016
 415:src/keys.c    ****   }
 9751              		.loc 1 415 9 is_stmt 0 view .LVU3017
 9752 0b84 0821     		movs	r1, #8
 9753 0b86 FFF76EBB 		b	.L921
 9754              	.LVL818:
 9755              	.L880:
 415:src/keys.c    ****   }
 9756              		.loc 1 415 9 view .LVU3018
 9757              	.LBE848:
 9758              	.LBE856:
 9759              	.LBE1115:
 9760              	.LBB1116:
 9761              	.LBB1017:
2377:src/keys.c    **** 		return process_arg(c);
 9762              		.loc 1 2377 3 is_stmt 1 view .LVU3019
 9763              	.LBB1010:
 9764              	.LBI1010:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 9765              		.loc 1 552 13 view .LVU3020
 9766              	.LBB1011:
 553:src/keys.c    **** 		return;
 9767              		.loc 1 553 2 view .LVU3021
 553:src/keys.c    **** 		return;
 9768              		.loc 1 553 6 is_stmt 0 view .LVU3022
 9769 0b8a FFF7FEFF 		bl	is_bad_cmdline
 9770              	.LVL819:
 553:src/keys.c    **** 		return;
 9771              		.loc 1 553 5 view .LVU3023
 9772 0b8e 18B9     		cbnz	r0, .L882
 9773 0b90 5FFA8AF0 		uxtb	r0, r10
 9774 0b94 FFF7FEFF 		bl	init_arg.part.0
 9775              	.LVL820:
 9776              	.L882:
 553:src/keys.c    **** 		return;
ARM GAS  /tmp/ccK8gYGY.s 			page 286


 9777              		.loc 1 553 5 view .LVU3024
 9778              	.LBE1011:
 9779              	.LBE1010:
2378:src/keys.c    **** 	}
 9780              		.loc 1 2378 3 is_stmt 1 view .LVU3025
2378:src/keys.c    **** 	}
 9781              		.loc 1 2378 10 is_stmt 0 view .LVU3026
 9782 0b98 2046     		mov	r0, r4
 9783 0b9a FFF7FEFF 		bl	process_arg
 9784              	.LVL821:
 9785 0b9e 0446     		mov	r4, r0
 9786              	.LVL822:
2378:src/keys.c    **** 	}
 9787              		.loc 1 2378 10 view .LVU3027
 9788 0ba0 1EE4     		b	.L840
 9789              	.LVL823:
 9790              	.L1335:
2378:src/keys.c    **** 	}
 9791              		.loc 1 2378 10 view .LVU3028
 9792              	.LBE1017:
 9793              	.LBE1116:
3300:src/keys.c    **** 		return STATE_UNFINISHED;
 9794              		.loc 1 3300 3 is_stmt 1 view .LVU3029
 9795              	.LBB1117:
 9796              	.LBI1117:
 121:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 9797              		.loc 1 121 13 view .LVU3030
 9798              	.LBB1118:
 122:src/keys.c    **** }
 9799              		.loc 1 122 2 view .LVU3031
 122:src/keys.c    **** }
 9800              		.loc 1 122 16 is_stmt 0 view .LVU3032
 9801 0ba2 98F81020 		ldrb	r2, [r8, #16]	@ zero_extendqisi2
 9802 0ba6 3368     		ldr	r3, [r6]
 9803 0ba8 013A     		subs	r2, r2, #1
 9804 0baa 18BF     		it	ne
 9805 0bac 0122     		movne	r2, #1
 9806 0bae 88F81020 		strb	r2, [r8, #16]
 9807              	.LVL824:
 122:src/keys.c    **** }
 9808              		.loc 1 122 16 view .LVU3033
 9809              	.LBE1118:
 9810              	.LBE1117:
3301:src/keys.c    **** 	}
 9811              		.loc 1 3301 3 is_stmt 1 view .LVU3034
3301:src/keys.c    **** 	}
 9812              		.loc 1 3301 10 is_stmt 0 view .LVU3035
 9813 0bb2 3324     		movs	r4, #51
 9814              	.LVL825:
3301:src/keys.c    **** 	}
 9815              		.loc 1 3301 10 view .LVU3036
 9816 0bb4 FFF77FBA 		b	.L806
 9817              	.LVL826:
 9818              	.L1336:
3304:src/keys.c    **** 		return STATE_UNFINISHED;
 9819              		.loc 1 3304 3 is_stmt 1 view .LVU3037
 9820              	.LBB1119:
ARM GAS  /tmp/ccK8gYGY.s 			page 287


 9821              	.LBI1119:
 121:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 9822              		.loc 1 121 13 view .LVU3038
 9823              	.LBB1120:
 122:src/keys.c    **** }
 9824              		.loc 1 122 2 view .LVU3039
 122:src/keys.c    **** }
 9825              		.loc 1 122 16 is_stmt 0 view .LVU3040
 9826 0bb8 98F81020 		ldrb	r2, [r8, #16]	@ zero_extendqisi2
 9827 0bbc 3368     		ldr	r3, [r6]
 9828 0bbe 022A     		cmp	r2, #2
 9829 0bc0 18BF     		it	ne
 9830 0bc2 0221     		movne	r1, #2
 9831 0bc4 88F81010 		strb	r1, [r8, #16]
 9832              	.LVL827:
 122:src/keys.c    **** }
 9833              		.loc 1 122 16 view .LVU3041
 9834              	.LBE1120:
 9835              	.LBE1119:
3305:src/keys.c    **** 	}
 9836              		.loc 1 3305 3 is_stmt 1 view .LVU3042
3305:src/keys.c    **** 	}
 9837              		.loc 1 3305 10 is_stmt 0 view .LVU3043
 9838 0bc8 3324     		movs	r4, #51
 9839              	.LVL828:
3305:src/keys.c    **** 	}
 9840              		.loc 1 3305 10 view .LVU3044
 9841 0bca FFF774BA 		b	.L806
 9842              	.LVL829:
 9843              	.L1342:
 9844              	.LBB1121:
 9845              	.LBB857:
 423:src/keys.c    ****       break;
 9846              		.loc 1 423 7 is_stmt 1 view .LVU3045
 423:src/keys.c    ****       break;
 9847              		.loc 1 423 11 is_stmt 0 view .LVU3046
 9848 0bce 6344     		add	r3, r3, ip
 9849              	.LVL830:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9850              		.loc 1 427 6 view .LVU3047
 9851 0bd0 1107     		lsls	r1, r2, #28
 423:src/keys.c    ****       break;
 9852              		.loc 1 423 11 view .LVU3048
 9853 0bd2 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 9854              	.LVL831:
 424:src/keys.c    ****     }
 9855              		.loc 1 424 7 is_stmt 1 view .LVU3049
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9856              		.loc 1 427 3 view .LVU3050
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9857              		.loc 1 427 6 is_stmt 0 view .LVU3051
 9858 0bd4 40F1C080 		bpl	.L1376
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9859              		.loc 1 427 20 view .LVU3052
 9860 0bd8 A3F10B02 		sub	r2, r3, #11
 9861 0bdc 042A     		cmp	r2, #4
 9862 0bde 7FF673AD 		bls	.L909
ARM GAS  /tmp/ccK8gYGY.s 			page 288


 9863              	.LVL832:
 9864              	.L932:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9865              		.loc 1 427 20 view .LVU3053
 9866              	.LBE857:
 9867              	.LBE1121:
3337:src/keys.c    **** 
 9868              		.loc 1 3337 3 is_stmt 1 view .LVU3054
 9869              	.LBB1122:
 9870              	.LBI1122:
2810:src/keys.c    **** 	enum shifts shift = reset_shift();
 9871              		.loc 1 2810 12 view .LVU3055
 9872              	.LBB1123:
2811:src/keys.c    **** 	unsigned int ch = 0;
 9873              		.loc 1 2811 2 view .LVU3056
 9874              	.LBB1124:
 9875              	.LBI1124:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 9876              		.loc 1 114 13 view .LVU3057
 9877              	.LBE1124:
 9878              	.LBE1123:
 9879              	.LBE1122:
 9880              	.LBE1421:
 9881              	.LBE1494:
 115:src/keys.c    **** }
 9882              		.loc 1 115 2 view .LVU3058
 9883              	.LBB1495:
 9884              	.LBB1422:
 9885              	.LBB1160:
 9886              	.LBB1152:
 9887              	.LBB1131:
 9888              	.LBB1125:
 9889              	.LBI1125:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 9890              		.loc 1 104 20 view .LVU3059
 9891              	.LBB1126:
 105:src/keys.c    **** 	State2.shifts = shift;
 9892              		.loc 1 105 2 view .LVU3060
 9893              	.LBB1127:
 9894              	.LBI1127:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 9895              		.loc 1 96 13 view .LVU3061
 9896              	.LBB1128:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9897              		.loc 1 97 2 view .LVU3062
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9898              		.loc 1 97 18 is_stmt 0 view .LVU3063
 9899 0be2 FFF7FEFF 		bl	shift_down
 9900              	.LVL833:
  98:src/keys.c    **** }
 9901              		.loc 1 98 2 is_stmt 1 view .LVU3064
  98:src/keys.c    **** }
 9902              		.loc 1 98 52 is_stmt 0 view .LVU3065
 9903 0be6 0146     		mov	r1, r0
 9904 0be8 08B9     		cbnz	r0, .L929
 9905 0bea 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 9906              	.L929:
ARM GAS  /tmp/ccK8gYGY.s 			page 289


 9907              	.LVL834:
  98:src/keys.c    **** }
 9908              		.loc 1 98 52 view .LVU3066
 9909              	.LBE1128:
 9910              	.LBE1127:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9911              		.loc 1 106 2 is_stmt 1 view .LVU3067
 9912              	.LBE1126:
 9913              	.LBE1125:
 9914              	.LBE1131:
2815:src/keys.c    **** 		// Alpha catalogue from within multi character command
 9915              		.loc 1 2815 5 is_stmt 0 view .LVU3068
 9916 0bee 98F80E00 		ldrb	r0, [r8, #14]	@ zero_extendqisi2
 9917              	.LBB1132:
 9918              	.LBB1130:
 9919              	.LBB1129:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9920              		.loc 1 106 16 view .LVU3069
 9921 0bf2 0023     		movs	r3, #0
 9922 0bf4 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 9923              		.loc 1 108 2 is_stmt 1 view .LVU3070
 9924              	.LVL835:
 108:src/keys.c    **** }
 9925              		.loc 1 108 2 is_stmt 0 view .LVU3071
 9926              	.LBE1129:
 9927              	.LBE1130:
 9928              	.LBE1132:
2812:src/keys.c    **** 	unsigned int opcode;
 9929              		.loc 1 2812 2 is_stmt 1 view .LVU3072
2813:src/keys.c    **** 
 9930              		.loc 1 2813 2 view .LVU3073
2815:src/keys.c    **** 		// Alpha catalogue from within multi character command
 9931              		.loc 1 2815 2 view .LVU3074
2815:src/keys.c    **** 		// Alpha catalogue from within multi character command
 9932              		.loc 1 2815 5 is_stmt 0 view .LVU3075
 9933 0bf8 0028     		cmp	r0, #0
 9934 0bfa 40F0DC83 		bne	.L1377
2824:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
 9935              		.loc 1 2824 2 is_stmt 1 view .LVU3076
 9936 0bfe 102C     		cmp	r4, #16
 9937 0c00 00F0A684 		beq	.L936
 9938 0c04 242C     		cmp	r4, #36
 9939 0c06 00F08C84 		beq	.L937
 9940 0c0a 0C2C     		cmp	r4, #12
 9941 0c0c 00F02684 		beq	.L1378
 9942              	.L938:
2857:src/keys.c    **** 	if (ch == 0)
 9943              		.loc 1 2857 2 view .LVU3077
 9944              	.LBB1133:
 9945              	.LBB1134:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 9946              		.loc 1 485 6 is_stmt 0 view .LVU3078
 9947 0c10 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9948              	.LVL836:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 9949              		.loc 1 485 6 view .LVU3079
ARM GAS  /tmp/ccK8gYGY.s 			page 290


 9950              	.LBE1134:
 9951              	.LBI1133:
 435:src/keys.c    **** {
 9952              		.loc 1 435 12 is_stmt 1 view .LVU3080
 9953              	.LBB1139:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 9954              		.loc 1 437 2 view .LVU3081
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 9955              		.loc 1 485 2 view .LVU3082
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 9956              		.loc 1 485 5 is_stmt 0 view .LVU3083
 9957 0c14 D806     		lsls	r0, r3, #27
 9958 0c16 03D5     		bpl	.L942
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 9959              		.loc 1 486 3 is_stmt 1 view .LVU3084
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 9960              		.loc 1 486 6 is_stmt 0 view .LVU3085
 9961 0c18 0029     		cmp	r1, #0
 9962 0c1a 41F00E80 		bne	.L1379
 487:src/keys.c    **** 		else if (shift == SHIFT_G)
 9963              		.loc 1 487 10 view .LVU3086
 9964 0c1e 0421     		movs	r1, #4
 9965              	.LVL837:
 9966              	.L942:
 491:src/keys.c    **** }
 9967              		.loc 1 491 2 is_stmt 1 view .LVU3087
 9968              	.LBB1135:
 9969              	.LBI1135:
 131:src/keys.c    **** {
 9970              		.loc 1 131 12 view .LVU3088
 9971              	.LBB1136:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9972              		.loc 1 133 2 view .LVU3089
 143:src/keys.c    **** }
 9973              		.loc 1 143 2 view .LVU3090
 143:src/keys.c    **** }
 9974              		.loc 1 143 23 is_stmt 0 view .LVU3091
 9975 0c20 304B     		ldr	r3, .L1412+4
 9976              	.LBE1136:
 9977              	.LBE1135:
 491:src/keys.c    **** }
 9978              		.loc 1 491 49 view .LVU3092
 9979 0c22 364A     		ldr	r2, .L1412+28
 9980              	.LBB1138:
 9981              	.LBB1137:
 143:src/keys.c    **** }
 9982              		.loc 1 143 23 view .LVU3093
 9983 0c24 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 9984              	.LBE1137:
 9985              	.LBE1138:
 491:src/keys.c    **** }
 9986              		.loc 1 491 49 view .LVU3094
 9987 0c26 0620     		movs	r0, #6
 9988 0c28 00FB0323 		mla	r3, r0, r3, r2
 9989              	.LBE1139:
 9990              	.LBE1133:
2857:src/keys.c    **** 	if (ch == 0)
ARM GAS  /tmp/ccK8gYGY.s 			page 291


 9991              		.loc 1 2857 5 view .LVU3095
 9992 0c2c 5C5C     		ldrb	r4, [r3, r1]	@ zero_extendqisi2
 9993              	.LVL838:
2858:src/keys.c    **** 		return STATE_UNFINISHED;
 9994              		.loc 1 2858 2 is_stmt 1 view .LVU3096
2858:src/keys.c    **** 		return STATE_UNFINISHED;
 9995              		.loc 1 2858 5 is_stmt 0 view .LVU3097
 9996 0c2e 002C     		cmp	r4, #0
 9997 0c30 3FF458AD 		beq	.L1314
 9998              	.L935:
2861:src/keys.c    **** 		State2.digval = ch;
 9999              		.loc 1 2861 2 is_stmt 1 view .LVU3098
2861:src/keys.c    **** 		State2.digval = ch;
 10000              		.loc 1 2861 12 is_stmt 0 view .LVU3099
 10001 0c34 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
2861:src/keys.c    **** 		State2.digval = ch;
 10002              		.loc 1 2861 5 view .LVU3100
 10003 0c38 002B     		cmp	r3, #0
 10004 0c3a 00F0F684 		beq	.L1380
2865:src/keys.c    **** 		State2.digval2 = ch;
 10005              		.loc 1 2865 9 is_stmt 1 view .LVU3101
2865:src/keys.c    **** 		State2.digval2 = ch;
 10006              		.loc 1 2865 12 is_stmt 0 view .LVU3102
 10007 0c3e 012B     		cmp	r3, #1
 10008 0c40 01F05780 		beq	.L1381
2870:src/keys.c    **** 
 10009              		.loc 1 2870 2 is_stmt 1 view .LVU3103
 10010              	.LBB1141:
 10011              	.LBI1141:
2803:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 10012              		.loc 1 2803 13 view .LVU3104
 10013              	.LBB1142:
2805:src/keys.c    **** 	if (! State2.alphas )
 10014              		.loc 1 2805 2 view .LVU3105
2805:src/keys.c    **** 	if (! State2.alphas )
 10015              		.loc 1 2805 15 is_stmt 0 view .LVU3106
 10016 0c44 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2806:src/keys.c    **** 		State2.alphashift = 0;
 10017              		.loc 1 2806 6 view .LVU3107
 10018 0c48 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2805:src/keys.c    **** 	if (! State2.alphas )
 10019              		.loc 1 2805 15 view .LVU3108
 10020 0c4c 6FF3C302 		bfc	r2, #3, #1
 10021 0c50 88F81520 		strb	r2, [r8, #21]
2806:src/keys.c    **** 		State2.alphashift = 0;
 10022              		.loc 1 2806 2 is_stmt 1 view .LVU3109
2806:src/keys.c    **** 		State2.alphashift = 0;
 10023              		.loc 1 2806 5 is_stmt 0 view .LVU3110
 10024 0c54 13F00802 		ands	r2, r3, #8
2807:src/keys.c    **** }
 10025              		.loc 1 2807 3 is_stmt 1 view .LVU3111
2807:src/keys.c    **** }
 10026              		.loc 1 2807 21 is_stmt 0 view .LVU3112
 10027 0c58 04BF     		itt	eq
 10028 0c5a 62F30413 		bfieq	r3, r2, #4, #1
 10029 0c5e 88F81630 		strbeq	r3, [r8, #22]
 10030              	.LVL839:
ARM GAS  /tmp/ccK8gYGY.s 			page 292


 10031              	.L941:
2807:src/keys.c    **** }
 10032              		.loc 1 2807 21 view .LVU3113
 10033              	.LBE1142:
 10034              	.LBE1141:
2873:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 10035              		.loc 1 2873 2 is_stmt 1 view .LVU3114
2875:src/keys.c    **** }
 10036              		.loc 1 2875 2 view .LVU3115
2873:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 10037              		.loc 1 2873 21 is_stmt 0 view .LVU3116
 10038 0c62 98F81F30 		ldrb	r3, [r8, #31]	@ zero_extendqisi2
2874:src/keys.c    **** 	return opcode;
 10039              		.loc 1 2874 17 view .LVU3117
 10040 0c66 B8F80810 		ldrh	r1, [r8, #8]
2874:src/keys.c    **** 	return opcode;
 10041              		.loc 1 2874 34 view .LVU3118
 10042 0c6a 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
2873:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 10043              		.loc 1 2873 29 view .LVU3119
 10044 0c6e 1B02     		lsls	r3, r3, #8
2873:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 10045              		.loc 1 2873 18 view .LVU3120
 10046 0c70 03F57043 		add	r3, r3, #61440
2874:src/keys.c    **** 	return opcode;
 10047              		.loc 1 2874 9 view .LVU3121
 10048 0c74 0B44     		add	r3, r3, r1
2874:src/keys.c    **** 	return opcode;
 10049              		.loc 1 2874 25 view .LVU3122
 10050 0c76 03EB0243 		add	r3, r3, r2, lsl #16
2873:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 10051              		.loc 1 2873 9 view .LVU3123
 10052 0c7a 03EB0464 		add	r4, r3, r4, lsl #24
 10053              	.LVL840:
2875:src/keys.c    **** }
 10054              		.loc 1 2875 9 view .LVU3124
 10055 0c7e FFF7AFBB 		b	.L840
 10056              	.LVL841:
 10057              	.L1337:
2875:src/keys.c    **** }
 10058              		.loc 1 2875 9 view .LVU3125
 10059              	.LBE1152:
 10060              	.LBE1160:
3308:src/keys.c    **** 		State2.arrow = 0;
 10061              		.loc 1 3308 3 is_stmt 1 view .LVU3126
 10062              	.LBB1161:
 10063              	.LBI1161:
 121:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 10064              		.loc 1 121 13 view .LVU3127
 10065              	.LBB1162:
 122:src/keys.c    **** }
 10066              		.loc 1 122 2 view .LVU3128
 122:src/keys.c    **** }
 10067              		.loc 1 122 16 is_stmt 0 view .LVU3129
 10068 0c82 98F81040 		ldrb	r4, [r8, #16]	@ zero_extendqisi2
 10069              	.LVL842:
 122:src/keys.c    **** }
ARM GAS  /tmp/ccK8gYGY.s 			page 293


 10070              		.loc 1 122 16 view .LVU3130
 10071 0c86 3368     		ldr	r3, [r6]
 10072 0c88 032C     		cmp	r4, #3
 10073              	.LBE1162:
 10074              	.LBE1161:
3309:src/keys.c    **** 		return STATE_UNFINISHED;
 10075              		.loc 1 3309 16 view .LVU3131
 10076 0c8a 60F38202 		bfi	r2, r0, #2, #1
 10077              	.LBB1165:
 10078              	.LBB1163:
 122:src/keys.c    **** }
 10079              		.loc 1 122 16 view .LVU3132
 10080 0c8e 18BF     		it	ne
 10081 0c90 0321     		movne	r1, #3
 10082              	.LBE1163:
 10083              	.LBE1165:
3309:src/keys.c    **** 		return STATE_UNFINISHED;
 10084              		.loc 1 3309 16 view .LVU3133
 10085 0c92 88F81520 		strb	r2, [r8, #21]
 10086              	.LBB1166:
 10087              	.LBB1164:
 122:src/keys.c    **** }
 10088              		.loc 1 122 16 view .LVU3134
 10089 0c96 88F81010 		strb	r1, [r8, #16]
 10090              	.LVL843:
 122:src/keys.c    **** }
 10091              		.loc 1 122 16 view .LVU3135
 10092              	.LBE1164:
 10093              	.LBE1166:
3309:src/keys.c    **** 		return STATE_UNFINISHED;
 10094              		.loc 1 3309 3 is_stmt 1 view .LVU3136
3310:src/keys.c    **** 	}
 10095              		.loc 1 3310 3 view .LVU3137
3310:src/keys.c    **** 	}
 10096              		.loc 1 3310 10 is_stmt 0 view .LVU3138
 10097 0c9a 3324     		movs	r4, #51
 10098 0c9c FFF70BBA 		b	.L806
 10099              	.LVL844:
 10100              	.L1340:
 10101              	.LBB1167:
 10102              	.LBB858:
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 10103              		.loc 1 312 16 view .LVU3139
 10104 0ca0 BBF1030F 		cmp	fp, #3
 10105 0ca4 3FF45EAF 		beq	.L1382
 315:src/keys.c    ****     /*
 10106              		.loc 1 315 3 is_stmt 1 view .LVU3140
 315:src/keys.c    ****     /*
 10107              		.loc 1 315 23 is_stmt 0 view .LVU3141
 10108 0ca8 1149     		ldr	r1, .L1412+16
 10109 0caa D8F81430 		ldr	r3, [r8, #20]
 315:src/keys.c    ****     /*
 10110              		.loc 1 315 6 view .LVU3142
 10111 0cae 1942     		tst	r1, r3
 10112 0cb0 3FF4E5AA 		beq	.L926
 10113 0cb4 62E7     		b	.L919
 10114              	.LVL845:
ARM GAS  /tmp/ccK8gYGY.s 			page 294


 10115              	.L1369:
 315:src/keys.c    ****     /*
 10116              		.loc 1 315 6 view .LVU3143
 10117              	.LBE858:
 10118              	.LBE1167:
 10119              	.LBB1168:
 10120              	.LBB1074:
2919:src/keys.c    **** 			n = max;
 10121              		.loc 1 2919 3 is_stmt 1 view .LVU3144
2919:src/keys.c    **** 			n = max;
 10122              		.loc 1 2919 6 is_stmt 0 view .LVU3145
 10123 0cb6 0A1F     		subs	r2, r1, #4
 10124              	.LVL846:
2919:src/keys.c    **** 			n = max;
 10125              		.loc 1 2919 6 view .LVU3146
 10126 0cb8 0129     		cmp	r1, #1
 10127 0cba 18BF     		it	ne
 10128 0cbc 1346     		movne	r3, r2
 10129              	.LVL847:
2919:src/keys.c    **** 			n = max;
 10130              		.loc 1 2919 6 view .LVU3147
 10131 0cbe 85E6     		b	.L889
 10132              	.LVL848:
 10133              	.L1373:
2919:src/keys.c    **** 			n = max;
 10134              		.loc 1 2919 6 view .LVU3148
 10135              	.LBE1074:
 10136              	.LBE1168:
 10137              	.LBB1169:
 10138              	.LBB1107:
1662:src/keys.c    **** 	  if (!C_LOCK_ON) {
 10139              		.loc 1 1662 19 view .LVU3149
 10140 0cc0 074B     		ldr	r3, .L1412
 10141 0cc2 1B68     		ldr	r3, [r3]
 10142 0cc4 93F8AC37 		ldrb	r3, [r3, #1964]	@ zero_extendqisi2
 10143 0cc8 5C06     		lsls	r4, r3, #25
 10144              	.LVL849:
1662:src/keys.c    **** 	  if (!C_LOCK_ON) {
 10145              		.loc 1 1662 19 view .LVU3150
 10146 0cca 7FF5C1AE 		bpl	.L901
1663:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
 10147              		.loc 1 1663 4 is_stmt 1 view .LVU3151
1663:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
 10148              		.loc 1 1663 7 is_stmt 0 view .LVU3152
 10149 0cce 03F00103 		and	r3, r3, #1
 10150 0cd2 03F2C114 		addw	r4, r3, #449
 10151 0cd6 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
 10152 0cda 2046     		mov	r0, r4
 10153 0cdc FFF7A2BB 		b	.L867
 10154              	.L1413:
 10155              		.align	2
 10156              	.L1412:
 10157 0ce0 00000000 		.word	main_ram
 10158 0ce4 00000000 		.word	.LANCHOR6
 10159 0ce8 00000000 		.word	.LANCHOR5
 10160 0cec 00000000 		.word	.LANCHOR21
 10161 0cf0 00080800 		.word	526336
ARM GAS  /tmp/ccK8gYGY.s 			page 295


 10162 0cf4 00000000 		.word	.LANCHOR22
 10163 0cf8 00000000 		.word	.LANCHOR16
 10164 0cfc 00000000 		.word	.LANCHOR15
 10165 0d00 000A4000 		.word	4196864
 10166              	.LVL850:
 10167              	.L1360:
1663:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
 10168              		.loc 1 1663 7 view .LVU3153
 10169              	.LBE1107:
 10170              	.LBE1169:
 10171              	.LBB1170:
 10172              	.LBB1034:
1718:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 10173              		.loc 1 1718 44 is_stmt 1 view .LVU3154
1718:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 10174              		.loc 1 1718 52 is_stmt 0 view .LVU3155
 10175 0d04 0120     		movs	r0, #1
 10176 0d06 FFF7FEFF 		bl	gtodot_digit
 10177              	.LVL851:
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10178              		.loc 1 1764 2 is_stmt 1 view .LVU3156
 10179              	.LBE1034:
 10180              	.LBE1170:
3285:src/keys.c    **** 
 10181              		.loc 1 3285 10 is_stmt 0 view .LVU3157
 10182 0d0a 3324     		movs	r4, #51
 10183              	.LVL852:
3285:src/keys.c    **** 
 10184              		.loc 1 3285 10 view .LVU3158
 10185 0d0c 3368     		ldr	r3, [r6]
 10186 0d0e FFF7D2B9 		b	.L806
 10187              	.LVL853:
 10188              	.L874:
 10189              	.LBB1171:
 10190              	.LBB1018:
2365:src/keys.c    **** 	}
 10191              		.loc 1 2365 3 is_stmt 1 view .LVU3159
2365:src/keys.c    **** 	}
 10192              		.loc 1 2365 10 is_stmt 0 view .LVU3160
 10193 0d12 0AF12000 		add	r0, r10, #32
 10194 0d16 4CEA0020 		orr	r0, ip, r0, lsl #8
 10195 0d1a 0446     		mov	r4, r0
 10196              	.LVL854:
2365:src/keys.c    **** 	}
 10197              		.loc 1 2365 10 view .LVU3161
 10198 0d1c FFF782BB 		b	.L867
 10199              	.LVL855:
 10200              	.L1361:
2365:src/keys.c    **** 	}
 10201              		.loc 1 2365 10 view .LVU3162
 10202              	.LBE1018:
 10203              	.LBE1171:
 10204              	.LBB1172:
 10205              	.LBB1035:
1719:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 10206              		.loc 1 1719 44 is_stmt 1 view .LVU3163
1719:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
ARM GAS  /tmp/ccK8gYGY.s 			page 296


 10207              		.loc 1 1719 52 is_stmt 0 view .LVU3164
 10208 0d20 0220     		movs	r0, #2
 10209 0d22 FFF7FEFF 		bl	gtodot_digit
 10210              	.LVL856:
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10211              		.loc 1 1764 2 is_stmt 1 view .LVU3165
 10212              	.LBE1035:
 10213              	.LBE1172:
3285:src/keys.c    **** 
 10214              		.loc 1 3285 10 is_stmt 0 view .LVU3166
 10215 0d26 3324     		movs	r4, #51
 10216              	.LVL857:
3285:src/keys.c    **** 
 10217              		.loc 1 3285 10 view .LVU3167
 10218 0d28 3368     		ldr	r3, [r6]
 10219 0d2a FFF7C4B9 		b	.L806
 10220              	.LVL858:
 10221              	.L1370:
 10222              	.LBB1173:
 10223              	.LBB1075:
2923:src/keys.c    **** 			n = -2;
 10224              		.loc 1 2923 3 is_stmt 1 view .LVU3168
2923:src/keys.c    **** 			n = -2;
 10225              		.loc 1 2923 6 is_stmt 0 view .LVU3169
 10226 0d2e 0239     		subs	r1, r1, #2
 10227              	.LVL859:
2924:src/keys.c    **** 	}
 10228              		.loc 1 2924 6 view .LVU3170
 10229 0d30 9942     		cmp	r1, r3
 10230 0d32 D4BF     		ite	le
 10231 0d34 0B46     		movle	r3, r1
 10232              	.LVL860:
2924:src/keys.c    **** 	}
 10233              		.loc 1 2924 6 view .LVU3171
 10234 0d36 6FF00103 		mvngt	r3, #1
 10235 0d3a 47E6     		b	.L889
 10236              	.LVL861:
 10237              	.L1362:
2924:src/keys.c    **** 	}
 10238              		.loc 1 2924 6 view .LVU3172
 10239              	.LBE1075:
 10240              	.LBE1173:
 10241              	.LBB1174:
 10242              	.LBB1036:
1720:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 10243              		.loc 1 1720 44 is_stmt 1 view .LVU3173
1720:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 10244              		.loc 1 1720 52 is_stmt 0 view .LVU3174
 10245 0d3c 0320     		movs	r0, #3
 10246 0d3e FFF7FEFF 		bl	gtodot_digit
 10247              	.LVL862:
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10248              		.loc 1 1764 2 is_stmt 1 view .LVU3175
 10249              	.LBE1036:
 10250              	.LBE1174:
3285:src/keys.c    **** 
 10251              		.loc 1 3285 10 is_stmt 0 view .LVU3176
ARM GAS  /tmp/ccK8gYGY.s 			page 297


 10252 0d42 3324     		movs	r4, #51
 10253              	.LVL863:
3285:src/keys.c    **** 
 10254              		.loc 1 3285 10 view .LVU3177
 10255 0d44 3368     		ldr	r3, [r6]
 10256 0d46 FFF7B6B9 		b	.L806
 10257              	.LVL864:
 10258              	.L1374:
 10259              	.LBB1175:
 10260              	.LBB1108:
1674:src/keys.c    **** 
 10261              		.loc 1 1674 3 is_stmt 1 view .LVU3178
1674:src/keys.c    **** 
 10262              		.loc 1 1674 25 is_stmt 0 view .LVU3179
 10263 0d4a E24A     		ldr	r2, .L1414
 10264 0d4c 0AEB4303 		add	r3, r10, r3, lsl #1
 10265 0d50 32F81340 		ldrh	r4, [r2, r3, lsl #1]
 10266              	.LVL865:
1674:src/keys.c    **** 
 10267              		.loc 1 1674 25 view .LVU3180
 10268 0d54 FFF744BB 		b	.L840
 10269              	.LVL866:
 10270              	.L1376:
1674:src/keys.c    **** 
 10271              		.loc 1 1674 25 view .LVU3181
 10272              	.LBE1108:
 10273              	.LBE1175:
3325:src/keys.c    **** 		if (is_bad_cmdline())
 10274              		.loc 1 3325 2 is_stmt 1 view .LVU3182
3325:src/keys.c    **** 		if (is_bad_cmdline())
 10275              		.loc 1 3325 5 is_stmt 0 view .LVU3183
 10276 0d58 002B     		cmp	r3, #0
 10277 0d5a 7FF4B5AC 		bne	.L909
 10278 0d5e FFF791BA 		b	.L930
 10279              	.LVL867:
 10280              	.L1137:
 10281              	.LBB1176:
 10282              	.LBB1076:
 10283              	.LBB1070:
2931:src/keys.c    **** 		if (nn <= 9)
 10284              		.loc 1 2931 7 view .LVU3184
 10285 0d62 1346     		mov	r3, r2
 10286              	.LVL868:
2931:src/keys.c    **** 		if (nn <= 9)
 10287              		.loc 1 2931 7 view .LVU3185
 10288 0d64 32E6     		b	.L889
 10289              	.LVL869:
 10290              	.L1344:
2931:src/keys.c    **** 		if (nn <= 9)
 10291              		.loc 1 2931 7 view .LVU3186
 10292              	.LBE1070:
 10293              	.LBE1076:
 10294              	.LBE1176:
3340:src/keys.c    **** 
 10295              		.loc 1 3340 3 is_stmt 1 view .LVU3187
 10296              	.LBB1177:
 10297              	.LBI1177:
ARM GAS  /tmp/ccK8gYGY.s 			page 298


2993:src/keys.c    **** 	unsigned int pc = State2.digval;
 10298              		.loc 1 2993 12 view .LVU3188
 10299              	.LBB1178:
2994:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 10300              		.loc 1 2994 2 view .LVU3189
2996:src/keys.c    **** 	const int opcode = getprog(pc);
 10301              		.loc 1 2996 27 is_stmt 0 view .LVU3190
 10302 0d66 262C     		cmp	r4, #38
2994:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 10303              		.loc 1 2994 15 view .LVU3191
 10304 0d68 B8F808A0 		ldrh	r10, [r8, #8]
 10305              	.LVL870:
2995:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
 10306              		.loc 1 2995 2 is_stmt 1 view .LVU3192
2996:src/keys.c    **** 	const int opcode = getprog(pc);
 10307              		.loc 1 2996 27 is_stmt 0 view .LVU3193
 10308 0d6c 00F05284 		beq	.L1151
 10309              	.LVL871:
 10310              	.LBB1179:
 10311              	.LBI1179:
 210:src/keys.c    **** {
 10312              		.loc 1 210 14 is_stmt 1 view .LVU3194
 10313              	.LBB1180:
 212:src/keys.c    ****     // K00 - K05
 10314              		.loc 1 212 3 view .LVU3195
 234:src/keys.c    **** }
 10315              		.loc 1 234 3 view .LVU3196
 10316              	.LBB1181:
 10317              	.LBI1181:
 131:src/keys.c    **** {
 10318              		.loc 1 131 12 view .LVU3197
 10319              	.LBB1182:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10320              		.loc 1 133 2 view .LVU3198
 143:src/keys.c    **** }
 10321              		.loc 1 143 2 view .LVU3199
 143:src/keys.c    **** }
 10322              		.loc 1 143 23 is_stmt 0 view .LVU3200
 10323 0d70 D94B     		ldr	r3, .L1414+4
 10324              	.LBE1182:
 10325              	.LBE1181:
 234:src/keys.c    **** }
 10326              		.loc 1 234 28 view .LVU3201
 10327 0d72 DA4A     		ldr	r2, .L1414+8
 10328              	.LBB1184:
 10329              	.LBB1183:
 143:src/keys.c    **** }
 10330              		.loc 1 143 23 view .LVU3202
 10331 0d74 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 10332              	.LBE1183:
 10333              	.LBE1184:
 234:src/keys.c    **** }
 10334              		.loc 1 234 10 view .LVU3203
 10335 0d76 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
 10336              	.LVL872:
 234:src/keys.c    **** }
 10337              		.loc 1 234 10 view .LVU3204
ARM GAS  /tmp/ccK8gYGY.s 			page 299


 10338              	.LBE1180:
 10339              	.LBE1179:
2996:src/keys.c    **** 	const int opcode = getprog(pc);
 10340              		.loc 1 2996 27 view .LVU3205
 10341 0d7a 2BF0800B 		bic	fp, fp, #128
 10342              	.L950:
 10343              	.LVL873:
2997:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 10344              		.loc 1 2997 2 is_stmt 1 view .LVU3206
2997:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 10345              		.loc 1 2997 21 is_stmt 0 view .LVU3207
 10346 0d7e 5046     		mov	r0, r10
 10347 0d80 FFF7FEFF 		bl	getprog
 10348              	.LVL874:
2998:src/keys.c    **** 	const int direct = State2.runmode;
 10349              		.loc 1 2998 2 is_stmt 1 view .LVU3208
2998:src/keys.c    **** 	const int direct = State2.runmode;
 10350              		.loc 1 2998 20 is_stmt 0 view .LVU3209
 10351 0d84 00F47040 		and	r0, r0, #61440
 10352              	.LVL875:
2998:src/keys.c    **** 	const int direct = State2.runmode;
 10353              		.loc 1 2998 63 view .LVU3210
 10354 0d88 B0F5704F 		cmp	r0, #61440
 10355 0d8c 00F04684 		beq	.L1383
 10356 0d90 0022     		movs	r2, #0
 10357              	.L951:
 10358              	.LVL876:
2999:src/keys.c    **** 	const enum shifts shift = reset_shift();
 10359              		.loc 1 2999 2 is_stmt 1 view .LVU3211
2999:src/keys.c    **** 	const enum shifts shift = reset_shift();
 10360              		.loc 1 2999 27 is_stmt 0 view .LVU3212
 10361 0d92 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10362 0d96 0192     		str	r2, [sp, #4]
 10363              	.LVL877:
2999:src/keys.c    **** 	const enum shifts shift = reset_shift();
 10364              		.loc 1 2999 27 view .LVU3213
 10365 0d98 C3F38013 		ubfx	r3, r3, #6, #1
 10366 0d9c 0093     		str	r3, [sp]
 10367              	.LVL878:
3000:src/keys.c    **** 	int op = STATE_UNFINISHED;
 10368              		.loc 1 3000 2 is_stmt 1 view .LVU3214
 10369              	.LBB1185:
 10370              	.LBI1185:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 10371              		.loc 1 114 13 view .LVU3215
 10372              	.LBE1185:
 10373              	.LBE1178:
 10374              	.LBE1177:
 10375              	.LBE1422:
 10376              	.LBE1495:
 115:src/keys.c    **** }
 10377              		.loc 1 115 2 view .LVU3216
 10378              	.LBB1496:
 10379              	.LBB1423:
 10380              	.LBB1211:
 10381              	.LBB1204:
 10382              	.LBB1192:
ARM GAS  /tmp/ccK8gYGY.s 			page 300


 10383              	.LBB1186:
 10384              	.LBI1186:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 10385              		.loc 1 104 20 view .LVU3217
 10386              	.LBB1187:
 105:src/keys.c    **** 	State2.shifts = shift;
 10387              		.loc 1 105 2 view .LVU3218
 10388              	.LBB1188:
 10389              	.LBI1188:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 10390              		.loc 1 96 13 view .LVU3219
 10391              	.LBB1189:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10392              		.loc 1 97 2 view .LVU3220
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10393              		.loc 1 97 18 is_stmt 0 view .LVU3221
 10394 0d9e FFF7FEFF 		bl	shift_down
 10395              	.LVL879:
  98:src/keys.c    **** }
 10396              		.loc 1 98 2 is_stmt 1 view .LVU3222
  98:src/keys.c    **** }
 10397              		.loc 1 98 52 is_stmt 0 view .LVU3223
 10398 0da2 019A     		ldr	r2, [sp, #4]
 10399 0da4 0346     		mov	r3, r0
 10400 0da6 08B9     		cbnz	r0, .L952
 10401 0da8 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 10402              	.L952:
 10403              	.LVL880:
  98:src/keys.c    **** }
 10404              		.loc 1 98 52 view .LVU3224
 10405              	.LBE1189:
 10406              	.LBE1188:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10407              		.loc 1 106 2 is_stmt 1 view .LVU3225
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10408              		.loc 1 106 16 is_stmt 0 view .LVU3226
 10409 0dac 0021     		movs	r1, #0
 10410              	.LBE1187:
 10411              	.LBE1186:
 10412              	.LBE1192:
3003:src/keys.c    **** 		// Digits take you to that segment
 10413              		.loc 1 3003 5 view .LVU3227
 10414 0dae BBF1020F 		cmp	fp, #2
 10415              	.LBB1193:
 10416              	.LBB1191:
 10417              	.LBB1190:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10418              		.loc 1 106 16 view .LVU3228
 10419 0db2 88F81010 		strb	r1, [r8, #16]
 108:src/keys.c    **** }
 10420              		.loc 1 108 2 is_stmt 1 view .LVU3229
 10421              	.LVL881:
 108:src/keys.c    **** }
 10422              		.loc 1 108 2 is_stmt 0 view .LVU3230
 10423              	.LBE1190:
 10424              	.LBE1191:
 10425              	.LBE1193:
ARM GAS  /tmp/ccK8gYGY.s 			page 301


3001:src/keys.c    **** 
 10426              		.loc 1 3001 2 is_stmt 1 view .LVU3231
3003:src/keys.c    **** 		// Digits take you to that segment
 10427              		.loc 1 3003 2 view .LVU3232
3003:src/keys.c    **** 		// Digits take you to that segment
 10428              		.loc 1 3003 5 is_stmt 0 view .LVU3233
 10429 0db6 40F28B84 		bls	.L1384
3012:src/keys.c    **** 
 10430              		.loc 1 3012 2 is_stmt 1 view .LVU3234
3012:src/keys.c    **** 
 10431              		.loc 1 3012 12 is_stmt 0 view .LVU3235
 10432 0dba 44EA0323 		orr	r3, r4, r3, lsl #8
 10433              	.LVL882:
3012:src/keys.c    **** 
 10434              		.loc 1 3012 2 view .LVU3236
 10435 0dbe 272B     		cmp	r3, #39
 10436 0dc0 00F3C280 		bgt	.L955
 10437 0dc4 042B     		cmp	r3, #4
 10438 0dc6 7FF78DAC 		ble	.L1314
 10439 0dca 053B     		subs	r3, r3, #5
 10440 0dcc 222B     		cmp	r3, #34
 10441 0dce 3FF689AC 		bhi	.L1314
 10442 0dd2 01A1     		adr	r1, .L964
 10443 0dd4 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 10444              		.p2align 2
 10445              	.L964:
 10446 0dd8 F10E0000 		.word	.L969+1
 10447 0ddc E30E0000 		.word	.L968+1
 10448 0de0 E30E0000 		.word	.L968+1
 10449 0de4 E5060000 		.word	.L1314+1
 10450 0de8 E5060000 		.word	.L1314+1
 10451 0dec E5060000 		.word	.L1314+1
 10452 0df0 E5060000 		.word	.L1314+1
 10453 0df4 650E0000 		.word	.L1154+1
 10454 0df8 E5060000 		.word	.L1314+1
 10455 0dfc E5060000 		.word	.L1314+1
 10456 0e00 E5060000 		.word	.L1314+1
 10457 0e04 110F0000 		.word	.L967+1
 10458 0e08 E5060000 		.word	.L1314+1
 10459 0e0c FD0E0000 		.word	.L966+1
 10460 0e10 E5060000 		.word	.L1314+1
 10461 0e14 E5060000 		.word	.L1314+1
 10462 0e18 E5060000 		.word	.L1314+1
 10463 0e1c E5060000 		.word	.L1314+1
 10464 0e20 E5060000 		.word	.L1314+1
 10465 0e24 A10E0000 		.word	.L965+1
 10466 0e28 E5060000 		.word	.L1314+1
 10467 0e2c E5060000 		.word	.L1314+1
 10468 0e30 E5060000 		.word	.L1314+1
 10469 0e34 E5060000 		.word	.L1314+1
 10470 0e38 E5060000 		.word	.L1314+1
 10471 0e3c E5060000 		.word	.L1314+1
 10472 0e40 E5060000 		.word	.L1314+1
 10473 0e44 E5060000 		.word	.L1314+1
 10474 0e48 E5060000 		.word	.L1314+1
 10475 0e4c E5060000 		.word	.L1314+1
 10476 0e50 E5060000 		.word	.L1314+1
ARM GAS  /tmp/ccK8gYGY.s 			page 302


 10477 0e54 E5060000 		.word	.L1314+1
 10478 0e58 E5060000 		.word	.L1314+1
 10479 0e5c E5060000 		.word	.L1314+1
 10480 0e60 B70E0000 		.word	.L963+1
 10481              		.p2align 1
 10482              	.L1154:
3001:src/keys.c    **** 
 10483              		.loc 1 3001 6 view .LVU3237
 10484 0e64 3324     		movs	r4, #51
 10485              	.LVL883:
 10486              	.L961:
3034:src/keys.c    **** 		break;
 10487              		.loc 1 3034 3 is_stmt 1 view .LVU3238
 10488 0e66 5046     		mov	r0, r10
 10489 0e68 FFF7FEFF 		bl	set_pc
 10490              	.LVL884:
3035:src/keys.c    **** 
 10491              		.loc 1 3035 3 view .LVU3239
 10492              	.L973:
3088:src/keys.c    **** 	State2.labellist = 0;
 10493              		.loc 1 3088 2 view .LVU3240
3089:src/keys.c    **** 	return check_confirm(op);
 10494              		.loc 1 3089 19 is_stmt 0 view .LVU3241
 10495 0e6c 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
3088:src/keys.c    **** 	State2.labellist = 0;
 10496              		.loc 1 3088 16 view .LVU3242
 10497 0e70 0022     		movs	r2, #0
 10498              	.LBB1194:
 10499              	.LBB1195:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 10500              		.loc 1 715 5 view .LVU3243
 10501 0e72 C4F30723 		ubfx	r3, r4, #8, #8
 10502              	.LBE1195:
 10503              	.LBE1194:
3089:src/keys.c    **** 	return check_confirm(op);
 10504              		.loc 1 3089 19 view .LVU3244
 10505 0e76 62F38201 		bfi	r1, r2, #2, #1
 10506              	.LBB1200:
 10507              	.LBB1196:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 10508              		.loc 1 715 5 view .LVU3245
 10509 0e7a 012B     		cmp	r3, #1
 10510              	.LBE1196:
 10511              	.LBE1200:
3089:src/keys.c    **** 	return check_confirm(op);
 10512              		.loc 1 3089 19 view .LVU3246
 10513 0e7c 88F81710 		strb	r1, [r8, #23]
3088:src/keys.c    **** 	State2.labellist = 0;
 10514              		.loc 1 3088 16 view .LVU3247
 10515 0e80 A8F80820 		strh	r2, [r8, #8]	@ movhi
3089:src/keys.c    **** 	return check_confirm(op);
 10516              		.loc 1 3089 2 is_stmt 1 view .LVU3248
3090:src/keys.c    **** }
 10517              		.loc 1 3090 2 view .LVU3249
 10518              	.LVL885:
 10519              	.LBB1201:
 10520              	.LBI1194:
ARM GAS  /tmp/ccK8gYGY.s 			page 303


 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10521              		.loc 1 714 12 view .LVU3250
 10522              	.LBB1197:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 10523              		.loc 1 715 2 view .LVU3251
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 10524              		.loc 1 715 5 is_stmt 0 view .LVU3252
 10525 0e84 7FF4ACAA 		bne	.L840
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 10526              		.loc 1 715 5 view .LVU3253
 10527 0e88 2046     		mov	r0, r4
 10528 0e8a FFF7FEFF 		bl	check_confirm.part.0
 10529              	.LVL886:
 10530 0e8e 0446     		mov	r4, r0
 10531              	.LVL887:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 10532              		.loc 1 715 5 view .LVU3254
 10533 0e90 FFF7A6BA 		b	.L840
 10534              	.LVL888:
 10535              	.L958:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 10536              		.loc 1 715 5 view .LVU3255
 10537              	.LBE1197:
 10538              	.LBE1201:
3019:src/keys.c    **** 	case K_DOWN:				// Find next label
 10539              		.loc 1 3019 3 is_stmt 1 view .LVU3256
3019:src/keys.c    **** 	case K_DOWN:				// Find next label
 10540              		.loc 1 3019 8 is_stmt 0 view .LVU3257
 10541 0e94 5046     		mov	r0, r10
 10542 0e96 0122     		movs	r2, #1
 10543 0e98 0021     		movs	r1, #0
 10544 0e9a FFF7FEFF 		bl	advance_to_next_label
 10545              	.LVL889:
 10546 0e9e 8246     		mov	r10, r0
 10547              	.LVL890:
 10548              	.L965:
3022:src/keys.c    **** 		return STATE_UNFINISHED;
 10549              		.loc 1 3022 3 is_stmt 1 view .LVU3258
3022:src/keys.c    **** 		return STATE_UNFINISHED;
 10550              		.loc 1 3022 19 is_stmt 0 view .LVU3259
 10551 0ea0 5046     		mov	r0, r10
 10552 0ea2 0022     		movs	r2, #0
 10553 0ea4 0121     		movs	r1, #1
 10554 0ea6 FFF7FEFF 		bl	advance_to_next_label
 10555              	.LVL891:
3023:src/keys.c    **** 
 10556              		.loc 1 3023 10 view .LVU3260
 10557 0eaa 3324     		movs	r4, #51
 10558 0eac 3368     		ldr	r3, [r6]
3022:src/keys.c    **** 		return STATE_UNFINISHED;
 10559              		.loc 1 3022 17 view .LVU3261
 10560 0eae A8F80800 		strh	r0, [r8, #8]	@ movhi
3023:src/keys.c    **** 
 10561              		.loc 1 3023 3 is_stmt 1 view .LVU3262
3023:src/keys.c    **** 
 10562              		.loc 1 3023 10 is_stmt 0 view .LVU3263
 10563 0eb2 FFF700B9 		b	.L806
ARM GAS  /tmp/ccK8gYGY.s 			page 304


 10564              	.LVL892:
 10565              	.L963:
3074:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 10566              		.loc 1 3074 3 is_stmt 1 view .LVU3264
3074:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 10567              		.loc 1 3074 6 is_stmt 0 view .LVU3265
 10568 0eb6 009B     		ldr	r3, [sp]
 10569 0eb8 002B     		cmp	r3, #0
 10570 0eba 3FF413AC 		beq	.L1314
3074:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 10571              		.loc 1 3074 14 view .LVU3266
 10572 0ebe 002A     		cmp	r2, #0
 10573 0ec0 3FF410AC 		beq	.L1314
3075:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
 10574              		.loc 1 3075 4 is_stmt 1 view .LVU3267
 10575 0ec4 5146     		mov	r1, r10
 10576 0ec6 0120     		movs	r0, #1
 10577 0ec8 FFF7FEFF 		bl	cmdgtocommon
 10578              	.LVL893:
3076:src/keys.c    **** 			break;
 10579              		.loc 1 3076 4 view .LVU3268
3077:src/keys.c    **** 		}
 10580              		.loc 1 3077 4 view .LVU3269
3088:src/keys.c    **** 	State2.labellist = 0;
 10581              		.loc 1 3088 2 view .LVU3270
3089:src/keys.c    **** 	return check_confirm(op);
 10582              		.loc 1 3089 19 is_stmt 0 view .LVU3271
 10583 0ecc 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
3088:src/keys.c    **** 	State2.labellist = 0;
 10584              		.loc 1 3088 16 view .LVU3272
 10585 0ed0 0023     		movs	r3, #0
3089:src/keys.c    **** 	return check_confirm(op);
 10586              		.loc 1 3089 19 view .LVU3273
 10587 0ed2 63F38202 		bfi	r2, r3, #2, #1
 10588 0ed6 88F81720 		strb	r2, [r8, #23]
3088:src/keys.c    **** 	State2.labellist = 0;
 10589              		.loc 1 3088 16 view .LVU3274
 10590 0eda A8F80830 		strh	r3, [r8, #8]	@ movhi
3089:src/keys.c    **** 	return check_confirm(op);
 10591              		.loc 1 3089 2 is_stmt 1 view .LVU3275
3090:src/keys.c    **** }
 10592              		.loc 1 3090 2 view .LVU3276
 10593              	.LVL894:
 10594              	.LBB1202:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10595              		.loc 1 714 12 view .LVU3277
 10596              	.LBB1198:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 10597              		.loc 1 715 2 view .LVU3278
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 10598              		.loc 1 715 2 is_stmt 0 view .LVU3279
 10599              	.LBE1198:
 10600              	.LBE1202:
 10601              	.LBE1204:
 10602              	.LBE1211:
 10603              	.LBE1423:
 10604              	.LBE1496:
ARM GAS  /tmp/ccK8gYGY.s 			page 305


3599:src/keys.c    ****     case STATE_SST:
 10605              		.loc 1 3599 5 is_stmt 1 view .LVU3280
 10606 0ede FFF72FBA 		b	.L816
 10607              	.LVL895:
 10608              	.L968:
 10609              	.LBB1497:
 10610              	.LBB1424:
 10611              	.LBB1212:
 10612              	.LBB1205:
3044:src/keys.c    **** 	  //#endif
 10613              		.loc 1 3044 3 view .LVU3281
3044:src/keys.c    **** 	  //#endif
 10614              		.loc 1 3044 38 is_stmt 0 view .LVU3282
 10615 0ee2 062C     		cmp	r4, #6
 10616 0ee4 40F2B114 		movw	r4, #433
 10617              	.LVL896:
3044:src/keys.c    **** 	  //#endif
 10618              		.loc 1 3044 38 view .LVU3283
 10619 0ee8 08BF     		it	eq
 10620 0eea 4FF4D974 		moveq	r4, #434
 10621 0eee BAE7     		b	.L961
 10622              	.LVL897:
 10623              	.L969:
 10624              	.L974:
3052:src/keys.c    **** 		goto xeq_or_gto;
 10625              		.loc 1 3052 3 is_stmt 1 view .LVU3284
3052:src/keys.c    **** 		goto xeq_or_gto;
 10626              		.loc 1 3052 6 is_stmt 0 view .LVU3285
 10627 0ef0 02F50074 		add	r4, r2, #512
 10628              	.LVL898:
3053:src/keys.c    **** 
 10629              		.loc 1 3053 3 is_stmt 1 view .LVU3286
3058:src/keys.c    **** 			break;
 10630              		.loc 1 3058 3 view .LVU3287
3058:src/keys.c    **** 			break;
 10631              		.loc 1 3058 6 is_stmt 0 view .LVU3288
 10632 0ef4 002A     		cmp	r2, #0
 10633 0ef6 B9D1     		bne	.L973
 10634 0ef8 FFF7F4BB 		b	.L1314
 10635              	.LVL899:
 10636              	.L966:
3026:src/keys.c    **** 		return STATE_UNFINISHED;
 10637              		.loc 1 3026 3 is_stmt 1 view .LVU3289
3026:src/keys.c    **** 		return STATE_UNFINISHED;
 10638              		.loc 1 3026 19 is_stmt 0 view .LVU3290
 10639 0efc 5046     		mov	r0, r10
 10640 0efe 0021     		movs	r1, #0
 10641 0f00 FFF7FEFF 		bl	advance_to_previous_label
 10642              	.LVL900:
3027:src/keys.c    **** 
 10643              		.loc 1 3027 10 view .LVU3291
 10644 0f04 3324     		movs	r4, #51
 10645              	.LVL901:
3027:src/keys.c    **** 
 10646              		.loc 1 3027 10 view .LVU3292
 10647 0f06 3368     		ldr	r3, [r6]
3026:src/keys.c    **** 		return STATE_UNFINISHED;
ARM GAS  /tmp/ccK8gYGY.s 			page 306


 10648              		.loc 1 3026 17 view .LVU3293
 10649 0f08 A8F80800 		strh	r0, [r8, #8]	@ movhi
3027:src/keys.c    **** 
 10650              		.loc 1 3027 3 is_stmt 1 view .LVU3294
3027:src/keys.c    **** 
 10651              		.loc 1 3027 10 is_stmt 0 view .LVU3295
 10652 0f0c FFF7D3B8 		b	.L806
 10653              	.LVL902:
 10654              	.L967:
3088:src/keys.c    **** 	State2.labellist = 0;
 10655              		.loc 1 3088 2 is_stmt 1 view .LVU3296
3089:src/keys.c    **** 	return check_confirm(op);
 10656              		.loc 1 3089 19 is_stmt 0 view .LVU3297
 10657 0f10 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
 10658 0f14 3368     		ldr	r3, [r6]
3088:src/keys.c    **** 	State2.labellist = 0;
 10659              		.loc 1 3088 16 view .LVU3298
 10660 0f16 0022     		movs	r2, #0
3089:src/keys.c    **** 	return check_confirm(op);
 10661              		.loc 1 3089 19 view .LVU3299
 10662 0f18 62F38201 		bfi	r1, r2, #2, #1
 10663 0f1c 88F81710 		strb	r1, [r8, #23]
3088:src/keys.c    **** 	State2.labellist = 0;
 10664              		.loc 1 3088 16 view .LVU3300
 10665 0f20 A8F80820 		strh	r2, [r8, #8]	@ movhi
3089:src/keys.c    **** 	return check_confirm(op);
 10666              		.loc 1 3089 2 is_stmt 1 view .LVU3301
3090:src/keys.c    **** }
 10667              		.loc 1 3090 2 view .LVU3302
 10668              	.LVL903:
 10669              	.LBB1203:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10670              		.loc 1 714 12 view .LVU3303
 10671              	.LBB1199:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 10672              		.loc 1 715 2 view .LVU3304
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 10673              		.loc 1 715 2 is_stmt 0 view .LVU3305
 10674              	.LBE1199:
 10675              	.LBE1203:
 10676              	.LBE1205:
 10677              	.LBE1212:
 10678              	.LBE1424:
 10679              	.LBE1497:
3599:src/keys.c    ****     case STATE_SST:
 10680              		.loc 1 3599 5 is_stmt 1 view .LVU3306
 10681              	.LBB1498:
 10682              	.LBB1425:
 10683              	.LBB1213:
 10684              	.LBB1206:
3001:src/keys.c    **** 
 10685              		.loc 1 3001 6 is_stmt 0 view .LVU3307
 10686 0f24 3324     		movs	r4, #51
 10687 0f26 FFF7C6B8 		b	.L806
 10688              	.LVL904:
 10689              	.L883:
3001:src/keys.c    **** 
ARM GAS  /tmp/ccK8gYGY.s 			page 307


 10690              		.loc 1 3001 6 view .LVU3308
 10691              	.LBE1206:
 10692              	.LBE1213:
 10693              	.LBB1214:
 10694              	.LBB1019:
2384:src/keys.c    **** 		return STATE_UNFINISHED;
 10695              		.loc 1 2384 3 is_stmt 1 view .LVU3309
 10696              	.LBB1012:
 10697              	.LBI1012:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 10698              		.loc 1 552 13 view .LVU3310
 10699              	.LBB1013:
 553:src/keys.c    **** 		return;
 10700              		.loc 1 553 2 view .LVU3311
 553:src/keys.c    **** 		return;
 10701              		.loc 1 553 6 is_stmt 0 view .LVU3312
 10702 0f2a FFF7FEFF 		bl	is_bad_cmdline
 10703              	.LVL905:
 553:src/keys.c    **** 		return;
 10704              		.loc 1 553 5 view .LVU3313
 10705 0f2e 0446     		mov	r4, r0
 10706              	.LVL906:
 553:src/keys.c    **** 		return;
 10707              		.loc 1 553 5 view .LVU3314
 10708 0f30 0028     		cmp	r0, #0
 10709 0f32 7FF4D7AB 		bne	.L1314
 10710 0f36 5FFA8AF0 		uxtb	r0, r10
 10711 0f3a FFF7FEFF 		bl	init_arg.part.0
 10712              	.LVL907:
 10713              	.LBE1013:
 10714              	.LBE1012:
 10715              	.LBE1019:
 10716              	.LBE1214:
 10717              	.LBE1425:
 10718              	.LBE1498:
3409:src/keys.c    ****   //print_debug(60,c);
 10719              		.loc 1 3409 7 view .LVU3315
 10720 0f3e 2546     		mov	r5, r4
 10721 0f40 3368     		ldr	r3, [r6]
 10722              	.LBB1499:
 10723              	.LBB1426:
 10724              	.LBB1215:
 10725              	.LBB1020:
2385:src/keys.c    **** 
 10726              		.loc 1 2385 10 view .LVU3316
 10727 0f42 3324     		movs	r4, #51
 10728 0f44 FFF7B7B8 		b	.L806
 10729              	.LVL908:
 10730              	.L955:
2385:src/keys.c    **** 
 10731              		.loc 1 2385 10 view .LVU3317
 10732              	.LBE1020:
 10733              	.LBE1215:
 10734              	.LBB1216:
 10735              	.LBB1207:
3012:src/keys.c    **** 
 10736              		.loc 1 3012 2 view .LVU3318
ARM GAS  /tmp/ccK8gYGY.s 			page 308


 10737 0f48 B3F58C7F 		cmp	r3, #280
 10738 0f4c 47DC     		bgt	.L970
 10739 0f4e B3F5827F 		cmp	r3, #260
 10740 0f52 7FF7C7AB 		ble	.L1314
 10741 0f56 6FF48274 		mvn	r4, #260
 10742              	.LVL909:
3012:src/keys.c    **** 
 10743              		.loc 1 3012 2 view .LVU3319
 10744 0f5a 2344     		add	r3, r3, r4
 10745 0f5c 132B     		cmp	r3, #19
 10746 0f5e 3FF6C1AB 		bhi	.L1314
 10747 0f62 01A1     		adr	r1, .L959
 10748 0f64 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 10749              		.p2align 2
 10750              	.L959:
 10751 0f68 BF0F0000 		.word	.L962+1
 10752 0f6c E5060000 		.word	.L1314+1
 10753 0f70 E5060000 		.word	.L1314+1
 10754 0f74 E5060000 		.word	.L1314+1
 10755 0f78 E5060000 		.word	.L1314+1
 10756 0f7c E5060000 		.word	.L1314+1
 10757 0f80 E5060000 		.word	.L1314+1
 10758 0f84 E5060000 		.word	.L1314+1
 10759 0f88 E5060000 		.word	.L1314+1
 10760 0f8c E5060000 		.word	.L1314+1
 10761 0f90 E5060000 		.word	.L1314+1
 10762 0f94 B90F0000 		.word	.L1153+1
 10763 0f98 E5060000 		.word	.L1314+1
 10764 0f9c CD0F0000 		.word	.L960+1
 10765 0fa0 E5060000 		.word	.L1314+1
 10766 0fa4 E5060000 		.word	.L1314+1
 10767 0fa8 E5060000 		.word	.L1314+1
 10768 0fac E5060000 		.word	.L1314+1
 10769 0fb0 E5060000 		.word	.L1314+1
 10770 0fb4 950E0000 		.word	.L958+1
 10771              		.p2align 1
 10772              	.L1153:
 10773 0fb8 40F24314 		movw	r4, #323
 10774 0fbc 53E7     		b	.L961
 10775              	.L962:
3056:src/keys.c    **** 	xeq_or_gto:
 10776              		.loc 1 3056 3 is_stmt 1 view .LVU3320
3056:src/keys.c    **** 	xeq_or_gto:
 10777              		.loc 1 3056 6 is_stmt 0 view .LVU3321
 10778 0fbe 02F54074 		add	r4, r2, #768
 10779              	.LVL910:
3058:src/keys.c    **** 			break;
 10780              		.loc 1 3058 3 is_stmt 1 view .LVU3322
3058:src/keys.c    **** 			break;
 10781              		.loc 1 3058 6 is_stmt 0 view .LVU3323
 10782 0fc2 002A     		cmp	r2, #0
 10783 0fc4 7FF452AF 		bne	.L973
 10784 0fc8 FFF78CBB 		b	.L1314
 10785              	.LVL911:
 10786              	.L960:
3015:src/keys.c    **** 		goto next;
 10787              		.loc 1 3015 3 is_stmt 1 view .LVU3324
ARM GAS  /tmp/ccK8gYGY.s 			page 309


3015:src/keys.c    **** 		goto next;
 10788              		.loc 1 3015 8 is_stmt 0 view .LVU3325
 10789 0fcc 5046     		mov	r0, r10
 10790 0fce 0121     		movs	r1, #1
 10791 0fd0 FFF7FEFF 		bl	advance_to_previous_label
 10792              	.LVL912:
 10793 0fd4 0121     		movs	r1, #1
 10794 0fd6 FFF7FEFF 		bl	advance_to_previous_label
 10795              	.LVL913:
 10796 0fda 8246     		mov	r10, r0
 10797              	.LVL914:
3016:src/keys.c    **** 
 10798              		.loc 1 3016 3 is_stmt 1 view .LVU3326
 10799 0fdc 60E7     		b	.L965
 10800              	.LVL915:
 10801              	.L970:
3012:src/keys.c    **** 
 10802              		.loc 1 3012 2 is_stmt 0 view .LVU3327
 10803 0fde 40F22732 		movw	r2, #807
 10804 0fe2 9342     		cmp	r3, r2
 10805 0fe4 7FF47EAB 		bne	.L1314
3082:src/keys.c    **** 		goto set_pc_and_exit;
 10806              		.loc 1 3082 3 is_stmt 1 view .LVU3328
3082:src/keys.c    **** 		goto set_pc_and_exit;
 10807              		.loc 1 3082 18 is_stmt 0 view .LVU3329
 10808 0fe8 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10809 0fec 61F38613 		bfi	r3, r1, #6, #1
 10810 0ff0 88F81630 		strb	r3, [r8, #22]
3083:src/keys.c    **** 
 10811              		.loc 1 3083 3 is_stmt 1 view .LVU3330
3001:src/keys.c    **** 
 10812              		.loc 1 3001 6 is_stmt 0 view .LVU3331
 10813 0ff4 3324     		movs	r4, #51
 10814              	.LVL916:
3083:src/keys.c    **** 
 10815              		.loc 1 3083 3 view .LVU3332
 10816 0ff6 36E7     		b	.L961
 10817              	.LVL917:
 10818              	.L1345:
3083:src/keys.c    **** 
 10819              		.loc 1 3083 3 view .LVU3333
 10820              	.LBE1207:
 10821              	.LBE1216:
3343:src/keys.c    **** 
 10822              		.loc 1 3343 3 is_stmt 1 view .LVU3334
 10823              	.LBB1217:
 10824              	.LBI1217:
3124:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 10825              		.loc 1 3124 12 view .LVU3335
 10826              	.LBB1218:
3125:src/keys.c    **** 	enum shifts shift = reset_shift();
 10827              		.loc 1 3125 2 view .LVU3336
 10828              	.LBB1219:
 10829              	.LBI1219:
 210:src/keys.c    **** {
 10830              		.loc 1 210 14 view .LVU3337
 10831              	.LBB1220:
ARM GAS  /tmp/ccK8gYGY.s 			page 310


 212:src/keys.c    ****     // K00 - K05
 10832              		.loc 1 212 3 view .LVU3338
 234:src/keys.c    **** }
 10833              		.loc 1 234 3 view .LVU3339
 10834              	.LBB1221:
 10835              	.LBI1221:
 131:src/keys.c    **** {
 10836              		.loc 1 131 12 view .LVU3340
 10837              	.LBB1222:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10838              		.loc 1 133 2 view .LVU3341
 143:src/keys.c    **** }
 10839              		.loc 1 143 2 view .LVU3342
 143:src/keys.c    **** }
 10840              		.loc 1 143 23 is_stmt 0 view .LVU3343
 10841 0ff8 374B     		ldr	r3, .L1414+4
 10842              	.LBE1222:
 10843              	.LBE1221:
 234:src/keys.c    **** }
 10844              		.loc 1 234 28 view .LVU3344
 10845 0ffa 384A     		ldr	r2, .L1414+8
 10846              	.LBB1224:
 10847              	.LBB1223:
 143:src/keys.c    **** }
 10848              		.loc 1 143 23 view .LVU3345
 10849 0ffc 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 10850              	.LBE1223:
 10851              	.LBE1224:
 234:src/keys.c    **** }
 10852              		.loc 1 234 10 view .LVU3346
 10853 0ffe 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
 10854              	.LVL918:
 234:src/keys.c    **** }
 10855              		.loc 1 234 10 view .LVU3347
 10856              	.LBE1220:
 10857              	.LBE1219:
 10858              	.LBB1225:
 10859              	.LBB1226:
 10860              	.LBB1227:
 10861              	.LBB1228:
 10862              	.LBB1229:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10863              		.loc 1 97 18 view .LVU3348
 10864 1002 FFF7FEFF 		bl	shift_down
 10865              	.LVL919:
 10866              	.LBE1229:
 10867              	.LBE1228:
 10868              	.LBE1227:
 10869              	.LBE1226:
 10870              	.LBE1225:
3125:src/keys.c    **** 	enum shifts shift = reset_shift();
 10871              		.loc 1 3125 15 view .LVU3349
 10872 1006 2BF0800B 		bic	fp, fp, #128
 10873              	.LVL920:
3126:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
 10874              		.loc 1 3126 2 is_stmt 1 view .LVU3350
 10875              	.LBB1238:
ARM GAS  /tmp/ccK8gYGY.s 			page 311


 10876              	.LBI1225:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 10877              		.loc 1 114 13 view .LVU3351
 10878              	.LBE1238:
 10879              	.LBE1218:
 10880              	.LBE1217:
 10881              	.LBE1426:
 10882              	.LBE1499:
 115:src/keys.c    **** }
 10883              		.loc 1 115 2 view .LVU3352
 10884              	.LBB1500:
 10885              	.LBB1427:
 10886              	.LBB1253:
 10887              	.LBB1245:
 10888              	.LBB1239:
 10889              	.LBB1235:
 10890              	.LBI1226:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 10891              		.loc 1 104 20 view .LVU3353
 10892              	.LBB1232:
 105:src/keys.c    **** 	State2.shifts = shift;
 10893              		.loc 1 105 2 view .LVU3354
 10894              	.LBB1231:
 10895              	.LBI1228:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 10896              		.loc 1 96 13 view .LVU3355
 10897              	.LBB1230:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10898              		.loc 1 97 2 view .LVU3356
  98:src/keys.c    **** }
 10899              		.loc 1 98 2 view .LVU3357
  98:src/keys.c    **** }
 10900              		.loc 1 98 52 is_stmt 0 view .LVU3358
 10901 100a 8146     		mov	r9, r0
 10902 100c 08B9     		cbnz	r0, .L977
 10903 100e 98F81090 		ldrb	r9, [r8, #16]	@ zero_extendqisi2
 10904              	.L977:
 10905              	.LVL921:
  98:src/keys.c    **** }
 10906              		.loc 1 98 52 view .LVU3359
 10907              	.LBE1230:
 10908              	.LBE1231:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10909              		.loc 1 106 2 is_stmt 1 view .LVU3360
 10910              	.LBE1232:
 10911              	.LBE1235:
 10912              	.LBE1239:
3127:src/keys.c    **** 	const int g_max = global_regs();
 10913              		.loc 1 3127 31 is_stmt 0 view .LVU3361
 10914 1012 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10915              	.LBB1240:
 10916              	.LBB1236:
 10917              	.LBB1233:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10918              		.loc 1 106 16 view .LVU3362
 10919 1016 0022     		movs	r2, #0
 10920              	.LBE1233:
ARM GAS  /tmp/ccK8gYGY.s 			page 312


 10921              	.LBE1236:
 10922              	.LBE1240:
3127:src/keys.c    **** 	const int g_max = global_regs();
 10923              		.loc 1 3127 46 view .LVU3363
 10924 1018 D907     		lsls	r1, r3, #31
 10925              	.LBB1241:
 10926              	.LBB1237:
 10927              	.LBB1234:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10928              		.loc 1 106 16 view .LVU3364
 10929 101a 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 10930              		.loc 1 108 2 is_stmt 1 view .LVU3365
 10931              	.LVL922:
 108:src/keys.c    **** }
 10932              		.loc 1 108 2 is_stmt 0 view .LVU3366
 10933              	.LBE1234:
 10934              	.LBE1237:
 10935              	.LBE1241:
3127:src/keys.c    **** 	const int g_max = global_regs();
 10936              		.loc 1 3127 2 is_stmt 1 view .LVU3367
3127:src/keys.c    **** 	const int g_max = global_regs();
 10937              		.loc 1 3127 46 is_stmt 0 view .LVU3368
 10938 101e 00F15F82 		bmi	.L1385
 10939 1022 4FF0700A 		mov	r10, #112
 10940              	.L978:
 10941              	.LVL923:
3128:src/keys.c    **** 
 10942              		.loc 1 3128 2 is_stmt 1 view .LVU3369
3128:src/keys.c    **** 
 10943              		.loc 1 3128 20 is_stmt 0 view .LVU3370
 10944 1026 FFF7FEFF 		bl	global_regs
 10945              	.LVL924:
3130:src/keys.c    **** 		if (local_regs())
 10946              		.loc 1 3130 2 is_stmt 1 view .LVU3371
3130:src/keys.c    **** 		if (local_regs())
 10947              		.loc 1 3130 5 is_stmt 0 view .LVU3372
 10948 102a BBF1700F 		cmp	fp, #112
 10949 102e 00F07683 		beq	.L1386
3136:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 10950              		.loc 1 3136 7 is_stmt 1 view .LVU3373
3136:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 10951              		.loc 1 3136 10 is_stmt 0 view .LVU3374
 10952 1032 BBF1090F 		cmp	fp, #9
 10953 1036 40F23383 		bls	.L1387
3143:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 10954              		.loc 1 3143 7 is_stmt 1 view .LVU3375
3143:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 10955              		.loc 1 3143 29 is_stmt 0 view .LVU3376
 10956 103a 09F1FF33 		add	r3, r9, #-1
3143:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 10957              		.loc 1 3143 10 view .LVU3377
 10958 103e DBB2     		uxtb	r3, r3
 10959 1040 012B     		cmp	r3, #1
 10960 1042 40F25982 		bls	.L1388
 10961              	.L986:
3147:src/keys.c    **** 		State2.digval = n;
ARM GAS  /tmp/ccK8gYGY.s 			page 313


 10962              		.loc 1 3147 7 is_stmt 1 view .LVU3378
3147:src/keys.c    **** 		State2.digval = n;
 10963              		.loc 1 3147 10 is_stmt 0 view .LVU3379
 10964 1046 BBF17F0F 		cmp	fp, #127
 10965 104a 40F01183 		bne	.L1389
3152:src/keys.c    **** 	case K_DOWN:
 10966              		.loc 1 3152 2 is_stmt 1 view .LVU3380
 10967 104e 073C     		subs	r4, r4, #7
 10968              	.LVL925:
3152:src/keys.c    **** 	case K_DOWN:
 10969              		.loc 1 3152 2 is_stmt 0 view .LVU3381
 10970 1050 112C     		cmp	r4, #17
 10971 1052 3FF647AB 		bhi	.L1314
 10972 1056 01A3     		adr	r3, .L1117
 10973 1058 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 10974              		.p2align 2
 10975              	.L1117:
 10976 105c A5100000 		.word	.L999+1
 10977 1060 E5060000 		.word	.L1314+1
 10978 1064 E5060000 		.word	.L1314+1
 10979 1068 E5060000 		.word	.L1314+1
 10980 106c E5060000 		.word	.L1314+1
 10981 1070 63110000 		.word	.L998+1
 10982 1074 E5060000 		.word	.L1314+1
 10983 1078 E5060000 		.word	.L1314+1
 10984 107c E5060000 		.word	.L1314+1
 10985 1080 45110000 		.word	.L996+1
 10986 1084 E5060000 		.word	.L1314+1
 10987 1088 17110000 		.word	.L992+1
 10988 108c E5060000 		.word	.L1314+1
 10989 1090 E5060000 		.word	.L1314+1
 10990 1094 E5060000 		.word	.L1314+1
 10991 1098 E5060000 		.word	.L1314+1
 10992 109c E5060000 		.word	.L1314+1
 10993 10a0 E1100000 		.word	.L989+1
 10994              		.p2align 1
 10995              	.L999:
3191:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 10996              		.loc 1 3191 3 is_stmt 1 view .LVU3382
3191:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 10997              		.loc 1 3191 6 is_stmt 0 view .LVU3383
 10998 10a4 B9F1000F 		cmp	r9, #0
 10999 10a8 7FF41CAB 		bne	.L1314
3195:src/keys.c    **** #endif
 11000              		.loc 1 3195 4 is_stmt 1 view .LVU3384
3195:src/keys.c    **** #endif
 11001              		.loc 1 3195 8 is_stmt 0 view .LVU3385
 11002 10ac B8F80840 		ldrh	r4, [r8, #8]
 11003              	.LVL926:
3197:src/keys.c    **** 			State2.digval = 0;
 11004              		.loc 1 3197 4 is_stmt 1 view .LVU3386
3197:src/keys.c    **** 			State2.digval = 0;
 11005              		.loc 1 3197 24 is_stmt 0 view .LVU3387
 11006 10b0 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
 11007 10b4 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
3199:src/keys.c    **** 			return n;
 11008              		.loc 1 3199 19 view .LVU3388
ARM GAS  /tmp/ccK8gYGY.s 			page 314


 11009 10b8 88F80A90 		strb	r9, [r8, #10]
3200:src/keys.c    **** 		}
 11010              		.loc 1 3200 11 view .LVU3389
 11011 10bc 44F42854 		orr	r4, r4, #10752
 11012              	.LVL927:
3197:src/keys.c    **** 			State2.digval = 0;
 11013              		.loc 1 3197 24 view .LVU3390
 11014 10c0 69F3C303 		bfi	r3, r9, #3, #1
3198:src/keys.c    **** 			State2.digval2 = 0;
 11015              		.loc 1 3198 18 view .LVU3391
 11016 10c4 A8F80890 		strh	r9, [r8, #8]	@ movhi
 11017 10c8 2046     		mov	r0, r4
 11018              	.LVL928:
3197:src/keys.c    **** 			State2.digval = 0;
 11019              		.loc 1 3197 24 view .LVU3392
 11020 10ca 88F81730 		strb	r3, [r8, #23]
3198:src/keys.c    **** 			State2.digval2 = 0;
 11021              		.loc 1 3198 4 is_stmt 1 view .LVU3393
3199:src/keys.c    **** 			return n;
 11022              		.loc 1 3199 4 view .LVU3394
3200:src/keys.c    **** 		}
 11023              		.loc 1 3200 4 view .LVU3395
3200:src/keys.c    **** 		}
 11024              		.loc 1 3200 11 is_stmt 0 view .LVU3396
 11025 10ce FFF7A9B9 		b	.L867
 11026              	.L1415:
 11027 10d2 00BF     		.align	2
 11028              	.L1414:
 11029 10d4 00000000 		.word	.LANCHOR20
 11030 10d8 00000000 		.word	.LANCHOR6
 11031 10dc 00000000 		.word	.LANCHOR5
 11032              	.LVL929:
 11033              	.L989:
3154:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 11034              		.loc 1 3154 3 is_stmt 1 view .LVU3397
3154:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 11035              		.loc 1 3154 13 is_stmt 0 view .LVU3398
 11036 10e0 B8F80830 		ldrh	r3, [r8, #8]
3154:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 11037              		.loc 1 3154 6 view .LVU3399
 11038 10e4 002B     		cmp	r3, #0
 11039 10e6 00F0F885 		beq	.L990
3155:src/keys.c    **** 				State2.digval = global_regs();
 11040              		.loc 1 3155 4 is_stmt 1 view .LVU3400
3155:src/keys.c    **** 				State2.digval = global_regs();
 11041              		.loc 1 3155 8 is_stmt 0 view .LVU3401
 11042 10ea 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3155:src/keys.c    **** 				State2.digval = global_regs();
 11043              		.loc 1 3155 7 view .LVU3402
 11044 10ee D407     		lsls	r4, r2, #31
 11045              	.LVL930:
3155:src/keys.c    **** 				State2.digval = global_regs();
 11046              		.loc 1 3155 7 view .LVU3403
 11047 10f0 02D4     		bmi	.L991
3155:src/keys.c    **** 				State2.digval = global_regs();
 11048              		.loc 1 3155 23 view .LVU3404
 11049 10f2 642B     		cmp	r3, #100
ARM GAS  /tmp/ccK8gYGY.s 			page 315


 11050 10f4 00F0F785 		beq	.L1390
 11051              	.LVL931:
 11052              	.L991:
3157:src/keys.c    **** 		}
 11053              		.loc 1 3157 4 is_stmt 1 view .LVU3405
 11054 10f8 B8F80830 		ldrh	r3, [r8, #8]
 11055 10fc 013B     		subs	r3, r3, #1
 11056              	.L1304:
3157:src/keys.c    **** 		}
 11057              		.loc 1 3157 4 is_stmt 0 view .LVU3406
 11058 10fe A8F80830 		strh	r3, [r8, #8]	@ movhi
 11059              	.LVL932:
 11060              	.L982:
3209:src/keys.c    **** 	return STATE_UNFINISHED;
 11061              		.loc 1 3209 2 is_stmt 1 view .LVU3407
3209:src/keys.c    **** 	return STATE_UNFINISHED;
 11062              		.loc 1 3209 16 is_stmt 0 view .LVU3408
 11063 1102 98F81420 		ldrb	r2, [r8, #20]	@ zero_extendqisi2
 11064 1106 3368     		ldr	r3, [r6]
 11065 1108 6FF3C502 		bfc	r2, #3, #3
 11066 110c 88F81420 		strb	r2, [r8, #20]
3210:src/keys.c    **** }
 11067              		.loc 1 3210 2 is_stmt 1 view .LVU3409
3210:src/keys.c    **** }
 11068              		.loc 1 3210 9 is_stmt 0 view .LVU3410
 11069 1110 3324     		movs	r4, #51
 11070 1112 FEF7D0BF 		b	.L806
 11071              	.LVL933:
 11072              	.L992:
3164:src/keys.c    **** 			State2.digval++;
 11073              		.loc 1 3164 3 is_stmt 1 view .LVU3411
3164:src/keys.c    **** 			State2.digval++;
 11074              		.loc 1 3164 13 is_stmt 0 view .LVU3412
 11075 1116 B8F80830 		ldrh	r3, [r8, #8]
3164:src/keys.c    **** 			State2.digval++;
 11076              		.loc 1 3164 27 view .LVU3413
 11077 111a 0AF1FF3A 		add	r10, r10, #-1
 11078              	.LVL934:
3164:src/keys.c    **** 			State2.digval++;
 11079              		.loc 1 3164 6 view .LVU3414
 11080 111e 5345     		cmp	r3, r10
 11081 1120 80F22783 		bge	.L993
3165:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 11082              		.loc 1 3165 4 is_stmt 1 view .LVU3415
3166:src/keys.c    **** 				State2.digval = regX_idx;
 11083              		.loc 1 3166 8 is_stmt 0 view .LVU3416
 11084 1124 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3165:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 11085              		.loc 1 3165 17 view .LVU3417
 11086 1128 0133     		adds	r3, r3, #1
 11087 112a 9CB2     		uxth	r4, r3
 11088              	.LVL935:
3166:src/keys.c    **** 				State2.digval = regX_idx;
 11089              		.loc 1 3166 7 view .LVU3418
 11090 112c D007     		lsls	r0, r2, #31
 11091              	.LVL936:
3165:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
ARM GAS  /tmp/ccK8gYGY.s 			page 316


 11092              		.loc 1 3165 17 view .LVU3419
 11093 112e A8F80840 		strh	r4, [r8, #8]	@ movhi
3166:src/keys.c    **** 				State2.digval = regX_idx;
 11094              		.loc 1 3166 4 is_stmt 1 view .LVU3420
3166:src/keys.c    **** 				State2.digval = regX_idx;
 11095              		.loc 1 3166 7 is_stmt 0 view .LVU3421
 11096 1132 E6D4     		bmi	.L982
3166:src/keys.c    **** 				State2.digval = regX_idx;
 11097              		.loc 1 3166 43 view .LVU3422
 11098 1134 FFF7FEFF 		bl	global_regs
 11099              	.LVL937:
3166:src/keys.c    **** 				State2.digval = regX_idx;
 11100              		.loc 1 3166 23 view .LVU3423
 11101 1138 8442     		cmp	r4, r0
 11102 113a E2D1     		bne	.L982
3167:src/keys.c    **** 		}
 11103              		.loc 1 3167 5 is_stmt 1 view .LVU3424
3167:src/keys.c    **** 		}
 11104              		.loc 1 3167 19 is_stmt 0 view .LVU3425
 11105 113c 6423     		movs	r3, #100
 11106 113e A8F80830 		strh	r3, [r8, #8]	@ movhi
 11107 1142 DEE7     		b	.L982
 11108              	.LVL938:
 11109              	.L996:
3181:src/keys.c    **** 			return STATE_UNFINISHED;
 11110              		.loc 1 3181 3 is_stmt 1 view .LVU3426
3181:src/keys.c    **** 			return STATE_UNFINISHED;
 11111              		.loc 1 3181 7 is_stmt 0 view .LVU3427
 11112 1144 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3181:src/keys.c    **** 			return STATE_UNFINISHED;
 11113              		.loc 1 3181 6 view .LVU3428
 11114 1148 13F02002 		ands	r2, r3, #32
 11115 114c 7FF4CAAA 		bne	.L1314
3183:src/keys.c    **** 
 11116              		.loc 1 3183 3 is_stmt 1 view .LVU3429
3205:src/keys.c    **** 	State2.digval = 0;
 11117              		.loc 1 3205 2 view .LVU3430
3205:src/keys.c    **** 	State2.digval = 0;
 11118              		.loc 1 3205 22 is_stmt 0 view .LVU3431
 11119 1150 62F3C303 		bfi	r3, r2, #3, #1
 11120 1154 88F81730 		strb	r3, [r8, #23]
3206:src/keys.c    **** 	State2.digval2 = 0;
 11121              		.loc 1 3206 2 is_stmt 1 view .LVU3432
3206:src/keys.c    **** 	State2.digval2 = 0;
 11122              		.loc 1 3206 16 is_stmt 0 view .LVU3433
 11123 1158 A8F80820 		strh	r2, [r8, #8]	@ movhi
3207:src/keys.c    **** reset_window:
 11124              		.loc 1 3207 2 is_stmt 1 view .LVU3434
3207:src/keys.c    **** reset_window:
 11125              		.loc 1 3207 17 is_stmt 0 view .LVU3435
 11126 115c 88F80A20 		strb	r2, [r8, #10]
 11127 1160 CFE7     		b	.L982
 11128              	.L998:
3186:src/keys.c    **** 			State2.disp_as_alpha = 1;
 11129              		.loc 1 3186 3 is_stmt 1 view .LVU3436
3186:src/keys.c    **** 			State2.disp_as_alpha = 1;
 11130              		.loc 1 3186 6 is_stmt 0 view .LVU3437
ARM GAS  /tmp/ccK8gYGY.s 			page 317


 11131 1162 B9F1010F 		cmp	r9, #1
 11132 1166 9DD1     		bne	.L999
3187:src/keys.c    **** 			goto reset_window;
 11133              		.loc 1 3187 4 is_stmt 1 view .LVU3438
3187:src/keys.c    **** 			goto reset_window;
 11134              		.loc 1 3187 25 is_stmt 0 view .LVU3439
 11135 1168 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11136 116c 43F00403 		orr	r3, r3, #4
 11137 1170 88F81630 		strb	r3, [r8, #22]
3188:src/keys.c    **** 		}
 11138              		.loc 1 3188 4 is_stmt 1 view .LVU3440
 11139 1174 C5E7     		b	.L982
 11140              	.LVL939:
 11141              	.L861:
3188:src/keys.c    **** 		}
 11142              		.loc 1 3188 4 is_stmt 0 view .LVU3441
 11143              	.LBE1245:
 11144              	.LBE1253:
 11145              	.LBB1254:
 11146              	.LBB1056:
1622:src/keys.c    **** #endif
 11147              		.loc 1 1622 4 is_stmt 1 view .LVU3442
1622:src/keys.c    **** #endif
 11148              		.loc 1 1622 18 view .LVU3443
1622:src/keys.c    **** #endif
 11149              		.loc 1 1622 18 is_stmt 0 view .LVU3444
 11150 1176 8BF0010B 		eor	fp, fp, #1
 11151              	.LVL940:
1622:src/keys.c    **** #endif
 11152              		.loc 1 1622 18 view .LVU3445
 11153 117a FFF7C6BB 		b	.L868
 11154              	.LVL941:
 11155              	.L1363:
1622:src/keys.c    **** #endif
 11156              		.loc 1 1622 18 view .LVU3446
 11157              	.LBE1056:
 11158              	.LBE1254:
 11159              	.LBB1255:
 11160              	.LBB1037:
1721:src/keys.c    **** #endif
 11161              		.loc 1 1721 44 is_stmt 1 view .LVU3447
1721:src/keys.c    **** #endif
 11162              		.loc 1 1721 52 is_stmt 0 view .LVU3448
 11163 117e 0420     		movs	r0, #4
 11164 1180 FFF7FEFF 		bl	gtodot_digit
 11165              	.LVL942:
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11166              		.loc 1 1764 2 is_stmt 1 view .LVU3449
 11167              	.LBE1037:
 11168              	.LBE1255:
3285:src/keys.c    **** 
 11169              		.loc 1 3285 10 is_stmt 0 view .LVU3450
 11170 1184 3324     		movs	r4, #51
 11171              	.LVL943:
3285:src/keys.c    **** 
 11172              		.loc 1 3285 10 view .LVU3451
 11173 1186 3368     		ldr	r3, [r6]
ARM GAS  /tmp/ccK8gYGY.s 			page 318


 11174 1188 FEF795BF 		b	.L806
 11175              	.LVL944:
 11176              	.L1364:
 11177              	.LBB1256:
 11178              	.LBB1038:
1725:src/keys.c    **** 		goto fin;
 11179              		.loc 1 1725 3 is_stmt 1 view .LVU3452
 11180              	.LBB1031:
 11181              	.LBI1031:
1697:src/keys.c    **** 	const int code = 100 + n;
 11182              		.loc 1 1697 12 view .LVU3453
 11183              	.LBB1032:
1698:src/keys.c    **** 	unsigned int pc = state_pc();
 11184              		.loc 1 1698 2 view .LVU3454
1699:src/keys.c    **** 
 11185              		.loc 1 1699 2 view .LVU3455
1699:src/keys.c    **** 
 11186              		.loc 1 1699 20 is_stmt 0 view .LVU3456
 11187 118c DFF864A3 		ldr	r10, .L1416+12
 11188 1190 DAF80030 		ldr	r3, [r10]
 11189              	.LVL945:
1699:src/keys.c    **** 
 11190              		.loc 1 1699 15 view .LVU3457
 11191 1194 B3F8E007 		ldrh	r0, [r3, #2016]
 11192              	.LVL946:
1701:src/keys.c    **** 		pc = 1;
 11193              		.loc 1 1701 2 is_stmt 1 view .LVU3458
1701:src/keys.c    **** 		pc = 1;
 11194              		.loc 1 1701 5 is_stmt 0 view .LVU3459
 11195 1198 830B     		lsrs	r3, r0, #14
1702:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
 11196              		.loc 1 1702 6 view .LVU3460
 11197 119a 032B     		cmp	r3, #3
 11198              	.LVL947:
1703:src/keys.c    **** 	if (pc > 0)
 11199              		.loc 1 1703 2 is_stmt 1 view .LVU3461
1703:src/keys.c    **** 	if (pc > 0)
 11200              		.loc 1 1703 7 is_stmt 0 view .LVU3462
 11201 119c 08BF     		it	eq
 11202 119e 0120     		moveq	r0, #1
 11203              	.LVL948:
1703:src/keys.c    **** 	if (pc > 0)
 11204              		.loc 1 1703 7 view .LVU3463
 11205 11a0 04F16401 		add	r1, r4, #100
 11206              	.LVL949:
1703:src/keys.c    **** 	if (pc > 0)
 11207              		.loc 1 1703 7 view .LVU3464
 11208 11a4 0322     		movs	r2, #3
 11209              	.LVL950:
1703:src/keys.c    **** 	if (pc > 0)
 11210              		.loc 1 1703 7 view .LVU3465
 11211 11a6 FFF7FEFF 		bl	find_label_from
 11212              	.LVL951:
1704:src/keys.c    **** 		return pc;
 11213              		.loc 1 1704 2 is_stmt 1 view .LVU3466
1704:src/keys.c    **** 		return pc;
 11214              		.loc 1 1704 5 is_stmt 0 view .LVU3467
ARM GAS  /tmp/ccK8gYGY.s 			page 319


 11215 11aa 0028     		cmp	r0, #0
 11216 11ac 7FF463AB 		bne	.L852
1706:src/keys.c    **** }
 11217              		.loc 1 1706 2 is_stmt 1 view .LVU3468
1706:src/keys.c    **** }
 11218              		.loc 1 1706 9 is_stmt 0 view .LVU3469
 11219 11b0 DAF80030 		ldr	r3, [r10]
 11220 11b4 B3F8E007 		ldrh	r0, [r3, #2016]
 11221              	.LVL952:
1706:src/keys.c    **** }
 11222              		.loc 1 1706 9 view .LVU3470
 11223              	.LBE1032:
 11224              	.LBE1031:
1726:src/keys.c    **** 	}
 11225              		.loc 1 1726 3 is_stmt 1 view .LVU3471
 11226 11b8 FFF75DBB 		b	.L852
 11227              	.LVL953:
 11228              	.L1366:
1735:src/keys.c    **** 	}
 11229              		.loc 1 1735 3 view .LVU3472
1735:src/keys.c    **** 	}
 11230              		.loc 1 1735 6 is_stmt 0 view .LVU3473
 11231 11bc B8F80800 		ldrh	r0, [r8, #8]
 11232              	.LVL954:
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11233              		.loc 1 1764 2 is_stmt 1 view .LVU3474
 11234 11c0 73E4     		b	.L843
 11235              	.LVL955:
 11236              	.L1146:
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11237              		.loc 1 1764 2 is_stmt 0 view .LVU3475
 11238              	.LBE1038:
 11239              	.LBE1256:
 11240              	.LBB1257:
 11241              	.LBB859:
 11242              	.LBB849:
 371:src/keys.c    **** #ifndef WINGUI
 11243              		.loc 1 371 8 view .LVU3476
 11244 11c2 C94B     		ldr	r3, .L1416
 377:src/keys.c    ****   }
 11245              		.loc 1 377 9 view .LVU3477
 11246 11c4 0C21     		movs	r1, #12
 373:src/keys.c    **** #else
 11247              		.loc 1 373 27 view .LVU3478
 11248 11c6 4FF0010C 		mov	ip, #1
 11249 11ca FFF74CB8 		b	.L921
 11250              	.LVL956:
 11251              	.L1346:
 373:src/keys.c    **** #else
 11252              		.loc 1 373 27 view .LVU3479
 11253              	.LBE849:
 11254              	.LBE859:
 11255              	.LBE1257:
3346:src/keys.c    **** 
 11256              		.loc 1 3346 3 is_stmt 1 view .LVU3480
 11257              	.LBB1258:
 11258              	.LBI1258:
ARM GAS  /tmp/ccK8gYGY.s 			page 320


 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 11259              		.loc 1 114 13 view .LVU3481
 11260              	.LBE1258:
 11261              	.LBE1427:
 11262              	.LBE1500:
 115:src/keys.c    **** }
 11263              		.loc 1 115 2 view .LVU3482
 11264              	.LBB1501:
 11265              	.LBB1428:
 11266              	.LBB1265:
 11267              	.LBB1259:
 11268              	.LBI1259:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 11269              		.loc 1 104 20 view .LVU3483
 11270              	.LBB1260:
 105:src/keys.c    **** 	State2.shifts = shift;
 11271              		.loc 1 105 2 view .LVU3484
 11272              	.LBB1261:
 11273              	.LBI1261:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 11274              		.loc 1 96 13 view .LVU3485
 11275              	.LBB1262:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11276              		.loc 1 97 2 view .LVU3486
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11277              		.loc 1 97 18 is_stmt 0 view .LVU3487
 11278 11ce FFF7FEFF 		bl	shift_down
 11279              	.LVL957:
  98:src/keys.c    **** }
 11280              		.loc 1 98 2 is_stmt 1 view .LVU3488
  98:src/keys.c    **** }
 11281              		.loc 1 98 52 is_stmt 0 view .LVU3489
 11282 11d2 0146     		mov	r1, r0
 11283 11d4 08B9     		cbnz	r0, .L1002
 11284 11d6 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 11285              	.L1002:
 11286              	.LVL958:
  98:src/keys.c    **** }
 11287              		.loc 1 98 52 view .LVU3490
 11288              	.LBE1262:
 11289              	.LBE1261:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11290              		.loc 1 106 2 is_stmt 1 view .LVU3491
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11291              		.loc 1 106 16 is_stmt 0 view .LVU3492
 11292 11da 0022     		movs	r2, #0
 11293              	.LBE1260:
 11294              	.LBE1259:
 11295              	.LBE1265:
3346:src/keys.c    **** 
 11296              		.loc 1 3346 10 view .LVU3493
 11297 11dc 2046     		mov	r0, r4
 11298              	.LBB1266:
 11299              	.LBB1264:
 11300              	.LBB1263:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11301              		.loc 1 106 16 view .LVU3494
ARM GAS  /tmp/ccK8gYGY.s 			page 321


 11302 11de 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 11303              		.loc 1 108 2 is_stmt 1 view .LVU3495
 11304              	.LVL959:
 108:src/keys.c    **** }
 11305              		.loc 1 108 2 is_stmt 0 view .LVU3496
 11306              	.LBE1263:
 11307              	.LBE1264:
 11308              	.LBE1266:
3346:src/keys.c    **** 
 11309              		.loc 1 3346 10 view .LVU3497
 11310 11e2 FFF7FEFF 		bl	process_catalogue
 11311              	.LVL960:
3346:src/keys.c    **** 
 11312              		.loc 1 3346 10 view .LVU3498
 11313 11e6 0446     		mov	r4, r0
 11314 11e8 FFF7FAB8 		b	.L840
 11315              	.LVL961:
 11316              	.L1170:
 11317              	.LBB1267:
 11318              	.LBB1021:
2373:src/keys.c    **** 	}
 11319              		.loc 1 2373 18 view .LVU3499
 11320 11ec 2724     		movs	r4, #39
 11321              	.LVL962:
2373:src/keys.c    **** 	}
 11322              		.loc 1 2373 47 view .LVU3500
 11323 11ee 1C44     		add	r4, r4, r3
 11324 11f0 FFF7F6B8 		b	.L840
 11325              	.LVL963:
 11326              	.L1171:
2373:src/keys.c    **** 	}
 11327              		.loc 1 2373 18 view .LVU3501
 11328 11f4 1E24     		movs	r4, #30
 11329              	.LVL964:
2373:src/keys.c    **** 	}
 11330              		.loc 1 2373 47 view .LVU3502
 11331 11f6 1C44     		add	r4, r4, r3
 11332 11f8 FFF7F2B8 		b	.L840
 11333              	.LVL965:
 11334              	.L1355:
2373:src/keys.c    **** 	}
 11335              		.loc 1 2373 47 view .LVU3503
 11336              	.LBE1021:
 11337              	.LBE1267:
 11338              	.LBB1268:
 11339              	.LBB860:
 294:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 11340              		.loc 1 294 27 view .LVU3504
 11341 11fc 242C     		cmp	r4, #36
 11342 11fe 7FF43EA8 		bne	.L926
 11343              	.L1145:
 295:src/keys.c    **** 		if ( (shift == SHIFT_F) && (c == K20) ) {
 11344              		.loc 1 295 11 view .LVU3505
 11345 1202 1623     		movs	r3, #22
 11346 1204 FFF760BA 		b	.L909
 11347              	.LVL966:
ARM GAS  /tmp/ccK8gYGY.s 			page 322


 11348              	.L1371:
 295:src/keys.c    **** 		if ( (shift == SHIFT_F) && (c == K20) ) {
 11349              		.loc 1 295 11 view .LVU3506
 11350              	.LBE860:
 11351              	.LBE1268:
 11352              	.LBB1269:
 11353              	.LBB1077:
2927:src/keys.c    **** 		return STATE_UNFINISHED;
 11354              		.loc 1 2927 3 is_stmt 1 view .LVU3507
 11355 1208 3368     		ldr	r3, [r6]
 11356              	.LVL967:
2927:src/keys.c    **** 		return STATE_UNFINISHED;
 11357              		.loc 1 2927 17 is_stmt 0 view .LVU3508
 11358 120a 88F80C00 		strb	r0, [r8, #12]
2928:src/keys.c    **** 	} 
 11359              		.loc 1 2928 3 is_stmt 1 view .LVU3509
 11360              	.LBE1077:
 11361              	.LBE1269:
3294:src/keys.c    **** 
 11362              		.loc 1 3294 10 is_stmt 0 view .LVU3510
 11363 120e 3324     		movs	r4, #51
 11364              	.LVL968:
 11365              	.LBB1270:
 11366              	.LBB1078:
2928:src/keys.c    **** 	} 
 11367              		.loc 1 2928 10 view .LVU3511
 11368 1210 FEF751BF 		b	.L806
 11369              	.LVL969:
 11370              	.L1347:
2928:src/keys.c    **** 	} 
 11371              		.loc 1 2928 10 view .LVU3512
 11372              	.LBE1078:
 11373              	.LBE1270:
3350:src/keys.c    **** #else
 11374              		.loc 1 3350 3 is_stmt 1 view .LVU3513
 11375              	.LBB1271:
 11376              	.LBI1271:
1777:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
 11377              		.loc 1 1777 12 view .LVU3514
 11378              	.LBB1272:
1778:src/keys.c    ****         int op = STATE_UNFINISHED;
 11379              		.loc 1 1778 2 view .LVU3515
1778:src/keys.c    ****         int op = STATE_UNFINISHED;
 11380              		.loc 1 1778 33 is_stmt 0 view .LVU3516
 11381 1214 98F80D90 		ldrb	r9, [r8, #13]	@ zero_extendqisi2
 11382              	.LBB1273:
 11383              	.LBB1274:
 11384              	.LBB1275:
 11385              	.LBB1276:
 11386              	.LBB1277:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11387              		.loc 1 97 18 view .LVU3517
 11388 1218 FFF7FEFF 		bl	shift_down
 11389              	.LVL970:
 11390              	.LBE1277:
 11391              	.LBE1276:
 11392              	.LBE1275:
ARM GAS  /tmp/ccK8gYGY.s 			page 323


 11393              	.LBE1274:
 11394              	.LBE1273:
1778:src/keys.c    ****         int op = STATE_UNFINISHED;
 11395              		.loc 1 1778 15 view .LVU3518
 11396 121c CA46     		mov	r10, r9
 11397              	.LVL971:
1779:src/keys.c    **** 	const enum shifts shift = reset_shift();
 11398              		.loc 1 1779 9 is_stmt 1 view .LVU3519
1780:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
 11399              		.loc 1 1780 2 view .LVU3520
 11400              	.LBB1286:
 11401              	.LBI1273:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 11402              		.loc 1 114 13 view .LVU3521
 11403              	.LBE1286:
 11404              	.LBE1272:
 11405              	.LBE1271:
 11406              	.LBE1428:
 11407              	.LBE1501:
 115:src/keys.c    **** }
 11408              		.loc 1 115 2 view .LVU3522
 11409              	.LBB1502:
 11410              	.LBB1429:
 11411              	.LBB1336:
 11412              	.LBB1324:
 11413              	.LBB1287:
 11414              	.LBB1283:
 11415              	.LBI1274:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 11416              		.loc 1 104 20 view .LVU3523
 11417              	.LBB1280:
 105:src/keys.c    **** 	State2.shifts = shift;
 11418              		.loc 1 105 2 view .LVU3524
 11419              	.LBB1279:
 11420              	.LBI1276:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 11421              		.loc 1 96 13 view .LVU3525
 11422              	.LBB1278:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11423              		.loc 1 97 2 view .LVU3526
  98:src/keys.c    **** }
 11424              		.loc 1 98 2 view .LVU3527
  98:src/keys.c    **** }
 11425              		.loc 1 98 52 is_stmt 0 view .LVU3528
 11426 121e 08B9     		cbnz	r0, .L1004
 11427 1220 98F81000 		ldrb	r0, [r8, #16]	@ zero_extendqisi2
 11428              	.LVL972:
 11429              	.L1004:
  98:src/keys.c    **** }
 11430              		.loc 1 98 52 view .LVU3529
 11431              	.LBE1278:
 11432              	.LBE1279:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11433              		.loc 1 106 2 is_stmt 1 view .LVU3530
 11434              	.LBE1280:
 11435              	.LBE1283:
 11436              	.LBE1287:
ARM GAS  /tmp/ccK8gYGY.s 			page 324


 11437              	.LBB1288:
 11438              	.LBB1289:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11439              		.loc 1 485 6 is_stmt 0 view .LVU3531
 11440 1224 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
 11441              	.LBE1289:
 11442              	.LBE1288:
 11443              	.LBB1305:
 11444              	.LBB1284:
 11445              	.LBB1281:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11446              		.loc 1 106 16 view .LVU3532
 11447 1228 4FF0000C 		mov	ip, #0
 11448              	.LBE1281:
 11449              	.LBE1284:
 11450              	.LBE1305:
 11451              	.LBB1306:
 11452              	.LBB1300:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11453              		.loc 1 485 5 view .LVU3533
 11454 122c CA06     		lsls	r2, r1, #27
 11455              	.LBE1300:
 11456              	.LBE1306:
 11457              	.LBB1307:
 11458              	.LBB1285:
 11459              	.LBB1282:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11460              		.loc 1 106 16 view .LVU3534
 11461 122e 88F810C0 		strb	ip, [r8, #16]
 108:src/keys.c    **** }
 11462              		.loc 1 108 2 is_stmt 1 view .LVU3535
 11463              	.LVL973:
 108:src/keys.c    **** }
 11464              		.loc 1 108 2 is_stmt 0 view .LVU3536
 11465              	.LBE1282:
 11466              	.LBE1285:
 11467              	.LBE1307:
1781:src/keys.c    **** 	State2.alpha_pos = 0;
 11468              		.loc 1 1781 2 is_stmt 1 view .LVU3537
1781:src/keys.c    **** 	State2.alpha_pos = 0;
 11469              		.loc 1 1781 11 is_stmt 0 view .LVU3538
 11470 1232 0346     		mov	r3, r0
 11471              	.LVL974:
 11472              	.LBB1308:
 11473              	.LBI1288:
 435:src/keys.c    **** {
 11474              		.loc 1 435 12 is_stmt 1 view .LVU3539
 11475              	.LBB1301:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 11476              		.loc 1 437 2 view .LVU3540
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11477              		.loc 1 485 2 view .LVU3541
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11478              		.loc 1 485 5 is_stmt 0 view .LVU3542
 11479 1234 54D5     		bpl	.L1005
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 11480              		.loc 1 486 3 is_stmt 1 view .LVU3543
ARM GAS  /tmp/ccK8gYGY.s 			page 325


 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 11481              		.loc 1 486 6 is_stmt 0 view .LVU3544
 11482 1236 0028     		cmp	r0, #0
 11483 1238 51D0     		beq	.L1159
 488:src/keys.c    **** 			shift = SHIFT_LC_G;
 11484              		.loc 1 488 8 is_stmt 1 view .LVU3545
 11485              	.LBB1290:
 11486              	.LBB1291:
 143:src/keys.c    **** }
 11487              		.loc 1 143 23 is_stmt 0 view .LVU3546
 11488 123a AC4A     		ldr	r2, .L1416+4
 11489              	.LBE1291:
 11490              	.LBE1290:
 491:src/keys.c    **** }
 11491              		.loc 1 491 49 view .LVU3547
 11492 123c AC4B     		ldr	r3, .L1416+8
 11493              	.LBB1296:
 11494              	.LBB1292:
 143:src/keys.c    **** }
 11495              		.loc 1 143 23 view .LVU3548
 11496 123e 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 11497              	.LBE1292:
 11498              	.LBE1296:
 11499              	.LBE1301:
 11500              	.LBE1308:
1782:src/keys.c    **** 
 11501              		.loc 1 1782 19 view .LVU3549
 11502 1240 88F80DC0 		strb	ip, [r8, #13]
 11503              	.LBB1309:
 11504              	.LBB1302:
 489:src/keys.c    **** 	}
 11505              		.loc 1 489 10 view .LVU3550
 11506 1244 0228     		cmp	r0, #2
 491:src/keys.c    **** }
 11507              		.loc 1 491 49 view .LVU3551
 11508 1246 4FF0060C 		mov	ip, #6
 11509 124a 0CFB0232 		mla	r2, ip, r2, r3
 489:src/keys.c    **** 	}
 11510              		.loc 1 489 10 view .LVU3552
 11511 124e 14BF     		ite	ne
 11512 1250 0346     		movne	r3, r0
 11513 1252 0523     		moveq	r3, #5
 11514              	.LVL975:
 491:src/keys.c    **** }
 11515              		.loc 1 491 2 is_stmt 1 view .LVU3553
 11516              	.LBB1297:
 11517              	.LBI1290:
 131:src/keys.c    **** {
 11518              		.loc 1 131 12 view .LVU3554
 11519              	.LBB1293:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 11520              		.loc 1 133 2 view .LVU3555
 143:src/keys.c    **** }
 11521              		.loc 1 143 2 view .LVU3556
 143:src/keys.c    **** }
 11522              		.loc 1 143 2 is_stmt 0 view .LVU3557
 11523 1254 063C     		subs	r4, r4, #6
ARM GAS  /tmp/ccK8gYGY.s 			page 326


 11524              	.LVL976:
 143:src/keys.c    **** }
 11525              		.loc 1 143 2 view .LVU3558
 11526              	.LBE1293:
 11527              	.LBE1297:
 491:src/keys.c    **** }
 11528              		.loc 1 491 49 view .LVU3559
 11529 1256 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 11530              	.LVL977:
 491:src/keys.c    **** }
 11531              		.loc 1 491 49 view .LVU3560
 11532              	.LBE1302:
 11533              	.LBE1309:
1782:src/keys.c    **** 
 11534              		.loc 1 1782 2 is_stmt 1 view .LVU3561
1784:src/keys.c    **** 	case K10:	// STO
 11535              		.loc 1 1784 2 view .LVU3562
 11536 1258 212C     		cmp	r4, #33
 11537 125a 23D8     		bhi	.L1008
 11538 125c DFE814F0 		tbh	[pc, r4, lsl #1]
 11539              	.L1118:
 11540 1260 E402     		.2byte	(.L1017-.L1118)/2
 11541 1262 A802     		.2byte	(.L1016-.L1118)/2
 11542 1264 2200     		.2byte	(.L1008-.L1118)/2
 11543 1266 2200     		.2byte	(.L1008-.L1118)/2
 11544 1268 2200     		.2byte	(.L1008-.L1118)/2
 11545 126a 2200     		.2byte	(.L1008-.L1118)/2
 11546 126c BB02     		.2byte	(.L1015-.L1118)/2
 11547 126e 2200     		.2byte	(.L1008-.L1118)/2
 11548 1270 2200     		.2byte	(.L1008-.L1118)/2
 11549 1272 2200     		.2byte	(.L1008-.L1118)/2
 11550 1274 7D02     		.2byte	(.L1024-.L1118)/2
 11551 1276 2200     		.2byte	(.L1008-.L1118)/2
 11552 1278 2C05     		.2byte	(.L1013-.L1118)/2
 11553 127a 2200     		.2byte	(.L1008-.L1118)/2
 11554 127c 2200     		.2byte	(.L1008-.L1118)/2
 11555 127e 2200     		.2byte	(.L1008-.L1118)/2
 11556 1280 2200     		.2byte	(.L1008-.L1118)/2
 11557 1282 2200     		.2byte	(.L1008-.L1118)/2
 11558 1284 1A05     		.2byte	(.L1012-.L1118)/2
 11559 1286 2200     		.2byte	(.L1008-.L1118)/2
 11560 1288 2200     		.2byte	(.L1008-.L1118)/2
 11561 128a 2200     		.2byte	(.L1008-.L1118)/2
 11562 128c 2200     		.2byte	(.L1008-.L1118)/2
 11563 128e 2200     		.2byte	(.L1008-.L1118)/2
 11564 1290 2200     		.2byte	(.L1008-.L1118)/2
 11565 1292 2200     		.2byte	(.L1008-.L1118)/2
 11566 1294 2200     		.2byte	(.L1008-.L1118)/2
 11567 1296 2200     		.2byte	(.L1008-.L1118)/2
 11568 1298 2200     		.2byte	(.L1008-.L1118)/2
 11569 129a 2200     		.2byte	(.L1008-.L1118)/2
 11570 129c 0405     		.2byte	(.L1011-.L1118)/2
 11571 129e 2200     		.2byte	(.L1008-.L1118)/2
 11572 12a0 2200     		.2byte	(.L1008-.L1118)/2
 11573 12a2 F804     		.2byte	(.L1009-.L1118)/2
 11574              	.LVL978:
 11575              		.p2align 1
ARM GAS  /tmp/ccK8gYGY.s 			page 327


 11576              	.L1008:
1891:src/keys.c    **** 		return STATE_UNFINISHED;
 11577              		.loc 1 1891 2 view .LVU3563
1891:src/keys.c    **** 		return STATE_UNFINISHED;
 11578              		.loc 1 1891 5 is_stmt 0 view .LVU3564
 11579 12a4 002A     		cmp	r2, #0
 11580 12a6 3FF4D7AB 		beq	.L1312
1893:src/keys.c    **** }
 11581              		.loc 1 1893 2 is_stmt 1 view .LVU3565
1893:src/keys.c    **** }
 11582              		.loc 1 1893 9 is_stmt 0 view .LVU3566
 11583 12aa 42F48844 		orr	r4, r2, #17408
 11584 12ae 2046     		mov	r0, r4
 11585              	.LVL979:
1893:src/keys.c    **** }
 11586              		.loc 1 1893 9 view .LVU3567
 11587 12b0 FFF7B8B8 		b	.L867
 11588              	.LVL980:
 11589              	.L1365:
1893:src/keys.c    **** }
 11590              		.loc 1 1893 9 view .LVU3568
 11591              	.LBE1324:
 11592              	.LBE1336:
 11593              	.LBB1337:
 11594              	.LBB1039:
1730:src/keys.c    **** 		goto fin;
 11595              		.loc 1 1730 3 is_stmt 1 view .LVU3569
1730:src/keys.c    **** 		goto fin;
 11596              		.loc 1 1730 11 is_stmt 0 view .LVU3570
 11597 12b4 8F4B     		ldr	r3, .L1416+12
 11598              	.LVL981:
1730:src/keys.c    **** 		goto fin;
 11599              		.loc 1 1730 11 view .LVU3571
 11600 12b6 1B68     		ldr	r3, [r3]
1730:src/keys.c    **** 		goto fin;
 11601              		.loc 1 1730 9 view .LVU3572
 11602 12b8 5888     		ldrh	r0, [r3, #2]
 11603              	.LVL982:
1731:src/keys.c    **** 	}
 11604              		.loc 1 1731 3 is_stmt 1 view .LVU3573
 11605 12ba FFF7DCBA 		b	.L852
 11606              	.LVL983:
 11607              	.L1042:
1731:src/keys.c    **** 	}
 11608              		.loc 1 1731 3 is_stmt 0 view .LVU3574
 11609              	.LBE1039:
 11610              	.LBE1337:
 11611              	.LBB1338:
 11612              	.LBB955:
1300:src/keys.c    ****      return process_fg_shifted (c);
 11613              		.loc 1 1300 4 is_stmt 1 view .LVU3575
1300:src/keys.c    ****      return process_fg_shifted (c);
 11614              		.loc 1 1300 7 is_stmt 0 view .LVU3576
 11615 12be 631F     		subs	r3, r4, #5
 11616 12c0 032B     		cmp	r3, #3
 11617 12c2 40F20781 		bls	.L1306
1304:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
ARM GAS  /tmp/ccK8gYGY.s 			page 328


 11618              		.loc 1 1304 4 is_stmt 1 view .LVU3577
1304:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
 11619              		.loc 1 1304 7 is_stmt 0 view .LVU3578
 11620 12c6 0F2C     		cmp	r4, #15
 11621 12c8 40F00483 		bne	.L1300
 11622              	.L1123:
 11623              	.LVL984:
1331:src/keys.c    ****      switch (c) {
 11624              		.loc 1 1331 6 is_stmt 1 view .LVU3579
 11625 12cc 0020     		movs	r0, #0
 11626 12ce FFF7FEFF 		bl	finish_cpx_entry
 11627              	.LVL985:
1332:src/keys.c    ****      case (K60):
 11628              		.loc 1 1332 6 view .LVU3580
 11629              	.L1308:
1332:src/keys.c    ****      case (K60):
 11630              		.loc 1 1332 6 is_stmt 0 view .LVU3581
 11631              	.LBE955:
 11632              	.LBE1338:
3366:src/keys.c    **** 	} else {
 11633              		.loc 1 3366 3 is_stmt 1 view .LVU3582
3366:src/keys.c    **** 	} else {
 11634              		.loc 1 3366 10 is_stmt 0 view .LVU3583
 11635 12d2 2046     		mov	r0, r4
 11636              	.L1307:
 11637 12d4 FFF7FEFF 		bl	process_cmplx
 11638              	.LVL986:
 11639 12d8 0446     		mov	r4, r0
 11640 12da FFF781B8 		b	.L840
 11641              	.LVL987:
 11642              	.L1159:
 11643              	.LBB1339:
 11644              	.LBB1325:
 11645              	.LBB1310:
 11646              	.LBB1303:
 487:src/keys.c    **** 		else if (shift == SHIFT_G)
 11647              		.loc 1 487 10 view .LVU3584
 11648 12de 0423     		movs	r3, #4
 11649              	.L1005:
 11650              	.LVL988:
 491:src/keys.c    **** }
 11651              		.loc 1 491 2 is_stmt 1 view .LVU3585
 11652              	.LBB1298:
 131:src/keys.c    **** {
 11653              		.loc 1 131 12 view .LVU3586
 11654              	.LBB1294:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 11655              		.loc 1 133 2 view .LVU3587
 143:src/keys.c    **** }
 11656              		.loc 1 143 2 view .LVU3588
 143:src/keys.c    **** }
 11657              		.loc 1 143 23 is_stmt 0 view .LVU3589
 11658 12e0 824A     		ldr	r2, .L1416+4
 11659              	.LBE1294:
 11660              	.LBE1298:
 491:src/keys.c    **** }
 11661              		.loc 1 491 49 view .LVU3590
ARM GAS  /tmp/ccK8gYGY.s 			page 329


 11662 12e2 DFF80CC2 		ldr	ip, .L1416+8
 11663              	.LBB1299:
 11664              	.LBB1295:
 143:src/keys.c    **** }
 11665              		.loc 1 143 23 view .LVU3591
 11666 12e6 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 11667              	.LBE1295:
 11668              	.LBE1299:
 491:src/keys.c    **** }
 11669              		.loc 1 491 49 view .LVU3592
 11670 12e8 4FF0060E 		mov	lr, #6
 11671 12ec 0EFB02C2 		mla	r2, lr, r2, ip
 11672 12f0 063C     		subs	r4, r4, #6
 11673              	.LVL989:
 491:src/keys.c    **** }
 11674              		.loc 1 491 49 view .LVU3593
 11675              	.LBE1303:
 11676              	.LBE1310:
1782:src/keys.c    **** 
 11677              		.loc 1 1782 19 view .LVU3594
 11678 12f2 4FF0000C 		mov	ip, #0
 11679              	.LBB1311:
 11680              	.LBB1304:
 491:src/keys.c    **** }
 11681              		.loc 1 491 49 view .LVU3595
 11682 12f6 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 11683              	.LVL990:
 491:src/keys.c    **** }
 11684              		.loc 1 491 49 view .LVU3596
 11685              	.LBE1304:
 11686              	.LBE1311:
1782:src/keys.c    **** 
 11687              		.loc 1 1782 2 is_stmt 1 view .LVU3597
1782:src/keys.c    **** 
 11688              		.loc 1 1782 19 is_stmt 0 view .LVU3598
 11689 12f8 88F80DC0 		strb	ip, [r8, #13]
1784:src/keys.c    **** 	case K10:	// STO
 11690              		.loc 1 1784 2 is_stmt 1 view .LVU3599
 11691 12fc 212C     		cmp	r4, #33
 11692 12fe D1D8     		bhi	.L1008
 11693 1300 01A3     		adr	r3, .L1010
 11694 1302 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 11695 1306 00BF     		.p2align 2
 11696              	.L1010:
 11697 1308 29180000 		.word	.L1017+1
 11698 130c B1170000 		.word	.L1016+1
 11699 1310 A5120000 		.word	.L1008+1
 11700 1314 A5120000 		.word	.L1008+1
 11701 1318 A5120000 		.word	.L1008+1
 11702 131c A5120000 		.word	.L1008+1
 11703 1320 D7170000 		.word	.L1015+1
 11704 1324 A5120000 		.word	.L1008+1
 11705 1328 A5120000 		.word	.L1008+1
 11706 132c A5120000 		.word	.L1008+1
 11707 1330 55170000 		.word	.L1014+1
 11708 1334 A5120000 		.word	.L1008+1
 11709 1338 B91C0000 		.word	.L1013+1
ARM GAS  /tmp/ccK8gYGY.s 			page 330


 11710 133c A5120000 		.word	.L1008+1
 11711 1340 A5120000 		.word	.L1008+1
 11712 1344 A5120000 		.word	.L1008+1
 11713 1348 A5120000 		.word	.L1008+1
 11714 134c A5120000 		.word	.L1008+1
 11715 1350 951C0000 		.word	.L1012+1
 11716 1354 A5120000 		.word	.L1008+1
 11717 1358 A5120000 		.word	.L1008+1
 11718 135c A5120000 		.word	.L1008+1
 11719 1360 A5120000 		.word	.L1008+1
 11720 1364 A5120000 		.word	.L1008+1
 11721 1368 A5120000 		.word	.L1008+1
 11722 136c A5120000 		.word	.L1008+1
 11723 1370 A5120000 		.word	.L1008+1
 11724 1374 A5120000 		.word	.L1008+1
 11725 1378 A5120000 		.word	.L1008+1
 11726 137c A5120000 		.word	.L1008+1
 11727 1380 691C0000 		.word	.L1011+1
 11728 1384 A5120000 		.word	.L1008+1
 11729 1388 A5120000 		.word	.L1008+1
 11730 138c 511C0000 		.word	.L1009+1
 11731              	.LVL991:
 11732              		.p2align 1
 11733              	.L1367:
1784:src/keys.c    **** 	case K10:	// STO
 11734              		.loc 1 1784 2 is_stmt 0 view .LVU3600
 11735              	.LBE1325:
 11736              	.LBE1339:
 11737              	.LBB1340:
 11738              	.LBB1040:
1739:src/keys.c    **** 			goto fin2;
 11739              		.loc 1 1739 3 is_stmt 1 view .LVU3601
1739:src/keys.c    **** 			goto fin2;
 11740              		.loc 1 1739 13 is_stmt 0 view .LVU3602
 11741 1390 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 11742              	.LVL992:
1739:src/keys.c    **** 			goto fin2;
 11743              		.loc 1 1739 6 view .LVU3603
 11744 1394 002B     		cmp	r3, #0
 11745 1396 3FF470AA 		beq	.L856
1742:src/keys.c    **** 			State2.digval /= 10;
 11746              		.loc 1 1742 4 is_stmt 1 view .LVU3604
1742:src/keys.c    **** 			State2.digval /= 10;
 11747              		.loc 1 1742 19 is_stmt 0 view .LVU3605
 11748 139a 013B     		subs	r3, r3, #1
1743:src/keys.c    **** 		}
 11749              		.loc 1 1743 18 view .LVU3606
 11750 139c B8F80820 		ldrh	r2, [r8, #8]
 11751              	.LVL993:
1742:src/keys.c    **** 			State2.digval /= 10;
 11752              		.loc 1 1742 19 view .LVU3607
 11753 13a0 88F80B30 		strb	r3, [r8, #11]
1743:src/keys.c    **** 		}
 11754              		.loc 1 1743 4 is_stmt 1 view .LVU3608
1743:src/keys.c    **** 		}
 11755              		.loc 1 1743 18 is_stmt 0 view .LVU3609
 11756 13a4 0A21     		movs	r1, #10
ARM GAS  /tmp/ccK8gYGY.s 			page 331


 11757 13a6 3368     		ldr	r3, [r6]
 11758 13a8 B2FBF1F2 		udiv	r2, r2, r1
 11759              	.LBE1040:
 11760              	.LBE1340:
3285:src/keys.c    **** 
 11761              		.loc 1 3285 10 view .LVU3610
 11762 13ac 3324     		movs	r4, #51
 11763              	.LVL994:
 11764              	.LBB1341:
 11765              	.LBB1041:
1743:src/keys.c    **** 		}
 11766              		.loc 1 1743 18 view .LVU3611
 11767 13ae A8F80820 		strh	r2, [r8, #8]	@ movhi
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11768              		.loc 1 1764 2 is_stmt 1 view .LVU3612
 11769 13b2 FEF780BE 		b	.L806
 11770              	.LVL995:
 11771              	.L1377:
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11772              		.loc 1 1764 2 is_stmt 0 view .LVU3613
 11773              	.LBE1041:
 11774              	.LBE1341:
 11775              	.LBB1342:
 11776              	.LBB1153:
2817:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 11777              		.loc 1 2817 3 is_stmt 1 view .LVU3614
2817:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 11778              		.loc 1 2817 12 is_stmt 0 view .LVU3615
 11779 13b6 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
 11780 13ba A2F1020C 		sub	ip, r2, #2
 11781 13be DCF10002 		rsbs	r2, ip, #0
 11782 13c2 2046     		mov	r0, r4
 11783 13c4 42EB0C02 		adc	r2, r2, ip
 11784 13c8 FFF7FEFF 		bl	process_catalogue
 11785              	.LVL996:
2818:src/keys.c    **** 			return opcode;
 11786              		.loc 1 2818 6 view .LVU3616
 11787 13cc 3328     		cmp	r0, #51
2817:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 11788              		.loc 1 2817 12 view .LVU3617
 11789 13ce 0446     		mov	r4, r0
 11790              	.LVL997:
2818:src/keys.c    **** 			return opcode;
 11791              		.loc 1 2818 3 is_stmt 1 view .LVU3618
2818:src/keys.c    **** 			return opcode;
 11792              		.loc 1 2818 6 is_stmt 0 view .LVU3619
 11793 13d0 3EF470AE 		beq	.L1309
2820:src/keys.c    **** 		goto add_char;
 11794              		.loc 1 2820 3 is_stmt 1 view .LVU3620
2820:src/keys.c    **** 		goto add_char;
 11795              		.loc 1 2820 6 is_stmt 0 view .LVU3621
 11796 13d4 C4B2     		uxtb	r4, r0
 11797              	.LVL998:
2821:src/keys.c    **** 	}
 11798              		.loc 1 2821 3 is_stmt 1 view .LVU3622
 11799 13d6 2DE4     		b	.L935
 11800              	.LVL999:
ARM GAS  /tmp/ccK8gYGY.s 			page 332


 11801              	.L1349:
2821:src/keys.c    **** 	}
 11802              		.loc 1 2821 3 is_stmt 0 view .LVU3623
 11803              	.LBE1153:
 11804              	.LBE1342:
3371:src/keys.c    **** 		// print_debug (3, c);
 11805              		.loc 1 3371 4 is_stmt 1 view .LVU3624
3371:src/keys.c    **** 		// print_debug (3, c);
 11806              		.loc 1 3371 11 is_stmt 0 view .LVU3625
 11807 13d8 FFF7FEFF 		bl	process_h_shifted
 11808              	.LVL1000:
 11809 13dc 0446     		mov	r4, r0
 11810 13de FEF7FFBF 		b	.L840
 11811              	.LVL1001:
 11812              	.L1357:
3253:src/keys.c    **** 	CLEAR_REAL;
 11813              		.loc 1 3253 2 is_stmt 1 view .LVU3626
 11814              	.LBB1343:
 11815              	.LBI1343:
1245:src/keys.c    **** 	// called if number entry terminated by EXIT key
 11816              		.loc 1 1245 13 view .LVU3627
 11817              	.LBB1344:
1249:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
 11818              		.loc 1 1249 2 view .LVU3628
1249:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
 11819              		.loc 1 1249 5 is_stmt 0 view .LVU3629
 11820 13e2 13F0060F 		tst	r3, #6
 11821 13e6 2FD0     		beq	.L821
1250:src/keys.c    **** 		drop ( OP_DROPXY );
 11822              		.loc 1 1250 2 is_stmt 1 view .LVU3630
1250:src/keys.c    **** 		drop ( OP_DROPXY );
 11823              		.loc 1 1250 5 is_stmt 0 view .LVU3631
 11824 13e8 D906     		lsls	r1, r3, #27
 11825 13ea 40F14C81 		bpl	.L822
1251:src/keys.c    **** 		copyreg (get_reg_n(regC_idx), get_reg_n(regJ_idx));
 11826              		.loc 1 1251 3 is_stmt 1 view .LVU3632
 11827 13ee 0F20     		movs	r0, #15
 11828 13f0 FFF7FEFF 		bl	drop
 11829              	.LVL1002:
1252:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
 11830              		.loc 1 1252 3 view .LVU3633
 11831 13f4 6A20     		movs	r0, #106
 11832 13f6 FFF7FEFF 		bl	get_reg_n
 11833              	.LVL1003:
 11834 13fa 0446     		mov	r4, r0
 11835              	.LVL1004:
1252:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
 11836              		.loc 1 1252 33 is_stmt 0 view .LVU3634
 11837 13fc 6E20     		movs	r0, #110
 11838 13fe FFF7FEFF 		bl	get_reg_n
 11839              	.LVL1005:
 11840 1402 0146     		mov	r1, r0
1252:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
 11841              		.loc 1 1252 3 view .LVU3635
 11842 1404 2046     		mov	r0, r4
 11843 1406 FFF7FEFF 		bl	copyreg
 11844              	.LVL1006:
ARM GAS  /tmp/ccK8gYGY.s 			page 333


1253:src/keys.c    **** 	}
 11845              		.loc 1 1253 3 is_stmt 1 view .LVU3636
 11846 140a 6B20     		movs	r0, #107
 11847              	.L1302:
1257:src/keys.c    **** 	}
 11848              		.loc 1 1257 3 is_stmt 0 view .LVU3637
 11849 140c FFF7FEFF 		bl	get_reg_n
 11850              	.LVL1007:
 11851 1410 0446     		mov	r4, r0
1257:src/keys.c    **** 	}
 11852              		.loc 1 1257 33 view .LVU3638
 11853 1412 6F20     		movs	r0, #111
 11854 1414 FFF7FEFF 		bl	get_reg_n
 11855              	.LVL1008:
 11856 1418 0146     		mov	r1, r0
1257:src/keys.c    **** 	}
 11857              		.loc 1 1257 3 view .LVU3639
 11858 141a 2046     		mov	r0, r4
 11859 141c FFF7FEFF 		bl	copyreg
 11860              	.LVL1009:
1259:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11861              		.loc 1 1259 2 is_stmt 1 view .LVU3640
1259:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11862              		.loc 1 1259 22 is_stmt 0 view .LVU3641
 11863 1420 DAF80020 		ldr	r2, [r10]
1259:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11864              		.loc 1 1259 20 view .LVU3642
 11865 1424 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
1259:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11866              		.loc 1 1259 22 view .LVU3643
 11867 1428 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
 11868 142c C3F30013 		ubfx	r3, r3, #4, #1
1259:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11869              		.loc 1 1259 20 view .LVU3644
 11870 1430 63F38611 		bfi	r1, r3, #6, #1
 11871 1434 88F81710 		strb	r1, [r8, #23]
1260:src/keys.c    **** 	CLEAR_POLAR_READY;
 11872              		.loc 1 1260 2 is_stmt 1 view .LVU3645
1261:src/keys.c    **** }
 11873              		.loc 1 1261 2 view .LVU3646
1260:src/keys.c    **** 	CLEAR_POLAR_READY;
 11874              		.loc 1 1260 2 is_stmt 0 view .LVU3647
 11875 1438 B2F8AC37 		ldrh	r3, [r2, #1964]
 11876 143c 23F48873 		bic	r3, r3, #272
 11877 1440 43F48073 		orr	r3, r3, #256
 11878 1444 A2F8AC37 		strh	r3, [r2, #1964]	@ movhi
 11879              	.L821:
 11880              	.LBE1344:
 11881              	.LBE1343:
3254:src/keys.c    **** 	CLEAR_IMAG;
 11882              		.loc 1 3254 2 is_stmt 1 view .LVU3648
 11883 1448 DAF80020 		ldr	r2, [r10]
3255:src/keys.c    ****       }
 11884              		.loc 1 3255 2 view .LVU3649
3254:src/keys.c    **** 	CLEAR_IMAG;
 11885              		.loc 1 3254 2 is_stmt 0 view .LVU3650
 11886 144c 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
ARM GAS  /tmp/ccK8gYGY.s 			page 334


 11887 1450 23F00603 		bic	r3, r3, #6
 11888 1454 82F8AC37 		strb	r3, [r2, #1964]
 11889 1458 FFF78CB9 		b	.L820
 11890              	.LVL1010:
 11891              	.L1378:
 11892              	.LBB1346:
 11893              	.LBB1154:
2826:src/keys.c    **** 				break;
 11894              		.loc 1 2826 3 is_stmt 1 view .LVU3651
2826:src/keys.c    **** 				break;
 11895              		.loc 1 2826 6 is_stmt 0 view .LVU3652
 11896 145c 0029     		cmp	r1, #0
 11897 145e 7FF4D7AB 		bne	.L938
2828:src/keys.c    **** 		if (State2.numdigit == 0)
 11898              		.loc 1 2828 3 is_stmt 1 view .LVU3653
 11899              	.LBB1143:
 11900              	.LBI1143:
2803:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 11901              		.loc 1 2803 13 view .LVU3654
 11902              	.LBB1144:
2805:src/keys.c    **** 	if (! State2.alphas )
 11903              		.loc 1 2805 2 view .LVU3655
2806:src/keys.c    **** 		State2.alphashift = 0;
 11904              		.loc 1 2806 6 is_stmt 0 view .LVU3656
 11905 1462 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2805:src/keys.c    **** 	if (! State2.alphas )
 11906              		.loc 1 2805 15 view .LVU3657
 11907 1466 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2806:src/keys.c    **** 		State2.alphashift = 0;
 11908              		.loc 1 2806 5 view .LVU3658
 11909 146a 1C07     		lsls	r4, r3, #28
 11910              	.LVL1011:
2807:src/keys.c    **** }
 11911              		.loc 1 2807 21 view .LVU3659
 11912 146c 5CBF     		itt	pl
 11913 146e 61F30413 		bfipl	r3, r1, #4, #1
 11914 1472 88F81630 		strbpl	r3, [r8, #22]
 11915              	.LBE1144:
 11916              	.LBE1143:
2829:src/keys.c    **** 			return STATE_UNFINISHED;
 11917              		.loc 1 2829 13 view .LVU3660
 11918 1476 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 11919              	.LBB1146:
 11920              	.LBB1145:
2805:src/keys.c    **** 	if (! State2.alphas )
 11921              		.loc 1 2805 15 view .LVU3661
 11922 147a 61F3C302 		bfi	r2, r1, #3, #1
 11923 147e 88F81520 		strb	r2, [r8, #21]
2806:src/keys.c    **** 		State2.alphashift = 0;
 11924              		.loc 1 2806 2 is_stmt 1 view .LVU3662
2807:src/keys.c    **** }
 11925              		.loc 1 2807 3 view .LVU3663
 11926              	.LBE1145:
 11927              	.LBE1146:
2829:src/keys.c    **** 			return STATE_UNFINISHED;
 11928              		.loc 1 2829 3 view .LVU3664
2829:src/keys.c    **** 			return STATE_UNFINISHED;
ARM GAS  /tmp/ccK8gYGY.s 			page 335


 11929              		.loc 1 2829 6 is_stmt 0 view .LVU3665
 11930 1482 002B     		cmp	r3, #0
 11931 1484 3FF42EA9 		beq	.L1314
2831:src/keys.c    **** 			State2.digval2 = 0;
 11932              		.loc 1 2831 8 is_stmt 1 view .LVU3666
2831:src/keys.c    **** 			State2.digval2 = 0;
 11933              		.loc 1 2831 11 is_stmt 0 view .LVU3667
 11934 1488 012B     		cmp	r3, #1
2832:src/keys.c    **** 		goto fin;
 11935              		.loc 1 2832 19 view .LVU3668
 11936 148a 4FF00004 		mov	r4, #0
2831:src/keys.c    **** 			State2.digval2 = 0;
 11937              		.loc 1 2831 11 view .LVU3669
 11938 148e 7FF4E8AB 		bne	.L941
2832:src/keys.c    **** 		goto fin;
 11939              		.loc 1 2832 4 is_stmt 1 view .LVU3670
2832:src/keys.c    **** 		goto fin;
 11940              		.loc 1 2832 19 is_stmt 0 view .LVU3671
 11941 1492 88F80A40 		strb	r4, [r8, #10]
 11942 1496 FFF7E4BB 		b	.L941
 11943              	.LVL1012:
 11944              	.L1341:
2832:src/keys.c    **** 		goto fin;
 11945              		.loc 1 2832 19 view .LVU3672
 11946 149a 0093     		str	r3, [sp]
 11947              	.LBE1154:
 11948              	.LBE1346:
 11949              	.LBB1347:
 11950              	.LBB861:
 11951              	.LBB850:
 373:src/keys.c    **** #else
 11952              		.loc 1 373 45 view .LVU3673
 11953 149c FFF7FEFF 		bl	shift_down
 11954              	.LVL1013:
 373:src/keys.c    **** #else
 11955              		.loc 1 373 42 view .LVU3674
 11956 14a0 0328     		cmp	r0, #3
 11957 14a2 00F0E880 		beq	.L922
 373:src/keys.c    **** #else
 11958              		.loc 1 373 73 view .LVU3675
 11959 14a6 009B     		ldr	r3, [sp]
 11960 14a8 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 11961 14ac 9C46     		mov	ip, r3
 377:src/keys.c    ****   }
 11962              		.loc 1 377 9 view .LVU3676
 11963 14ae 0C21     		movs	r1, #12
 371:src/keys.c    **** #ifndef WINGUI
 11964              		.loc 1 371 8 view .LVU3677
 11965 14b0 0D4B     		ldr	r3, .L1416
 11966 14b2 FEF7D8BE 		b	.L921
 11967              	.LVL1014:
 11968              	.L1372:
 371:src/keys.c    **** #ifndef WINGUI
 11969              		.loc 1 371 8 view .LVU3678
 11970              	.LBE850:
 11971              	.LBE861:
 11972              	.LBE1347:
ARM GAS  /tmp/ccK8gYGY.s 			page 336


 11973              	.LBB1348:
 11974              	.LBB1079:
 11975              	.LBB1071:
2935:src/keys.c    **** 		else if (nn != NO_REG)
 11976              		.loc 1 2935 4 is_stmt 1 view .LVU3679
2937:src/keys.c    **** 	}
 11977              		.loc 1 2937 6 is_stmt 0 view .LVU3680
 11978 14b6 9942     		cmp	r1, r3
 11979 14b8 08BF     		it	eq
 11980 14ba 0A23     		moveq	r3, #10
 11981              	.LVL1015:
2937:src/keys.c    **** 	}
 11982              		.loc 1 2937 6 view .LVU3681
 11983 14bc FFF786BA 		b	.L889
 11984              	.LVL1016:
 11985              	.L1039:
2937:src/keys.c    **** 	}
 11986              		.loc 1 2937 6 view .LVU3682
 11987              	.LBE1071:
 11988              	.LBE1079:
 11989              	.LBE1348:
 11990              	.LBB1349:
 11991              	.LBB956:
1297:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 11992              		.loc 1 1297 4 is_stmt 1 view .LVU3683
1297:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 11993              		.loc 1 1297 7 is_stmt 0 view .LVU3684
 11994 14c0 BBF1020F 		cmp	fp, #2
 11995 14c4 69D1     		bne	.L1041
1297:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 11996              		.loc 1 1297 28 view .LVU3685
 11997 14c6 A01F     		subs	r0, r4, #6
 11998 14c8 C0B2     		uxtb	r0, r0
 11999 14ca 0228     		cmp	r0, #2
 12000 14cc 3FF6F7AE 		bhi	.L1042
1298:src/keys.c    ****    }
 12001              		.loc 1 1298 6 is_stmt 1 view .LVU3686
 12002 14d0 FFF7FEFF 		bl	convert_regK
 12003              	.LVL1017:
1300:src/keys.c    ****      return process_fg_shifted (c);
 12004              		.loc 1 1300 4 view .LVU3687
 12005              	.L1306:
1300:src/keys.c    ****      return process_fg_shifted (c);
 12006              		.loc 1 1300 4 is_stmt 0 view .LVU3688
 12007              	.LBE956:
 12008              	.LBE1349:
3369:src/keys.c    **** 		if (shift == SHIFT_H)
 12009              		.loc 1 3369 4 is_stmt 1 view .LVU3689
3369:src/keys.c    **** 		if (shift == SHIFT_H)
 12010              		.loc 1 3369 11 is_stmt 0 view .LVU3690
 12011 14d4 2046     		mov	r0, r4
 12012 14d6 FFF7FEFF 		bl	process_fg_shifted
 12013              	.LVL1018:
 12014 14da 0446     		mov	r4, r0
 12015 14dc FEF780BF 		b	.L840
 12016              	.LVL1019:
 12017              	.L1385:
ARM GAS  /tmp/ccK8gYGY.s 			page 337


 12018              	.LBB1350:
 12019              	.LBB1246:
3127:src/keys.c    **** 	const int g_max = global_regs();
 12020              		.loc 1 3127 33 view .LVU3691
 12021 14e0 FFF7FEFF 		bl	local_regs
 12022              	.LVL1020:
 12023 14e4 8246     		mov	r10, r0
 12024 14e6 9EE5     		b	.L978
 12025              	.L1417:
 12026              		.align	2
 12027              	.L1416:
 12028 14e8 00000000 		.word	.LANCHOR17
 12029 14ec 00000000 		.word	.LANCHOR6
 12030 14f0 00000000 		.word	.LANCHOR15
 12031 14f4 00000000 		.word	main_ram
 12032              	.LVL1021:
 12033              	.L1388:
3143:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 12034              		.loc 1 3143 50 view .LVU3692
 12035 14f8 0D2C     		cmp	r4, #13
 12036 14fa 7FF4A4AD 		bne	.L986
3144:src/keys.c    **** 		set_smode(SDISP_SHOW);
 12037              		.loc 1 3144 3 is_stmt 1 view .LVU3693
 12038 14fe B9F1010F 		cmp	r9, #1
 12039 1502 14BF     		ite	ne
 12040 1504 2C20     		movne	r0, #44
 12041              	.LVL1022:
3144:src/keys.c    **** 		set_smode(SDISP_SHOW);
 12042              		.loc 1 3144 3 is_stmt 0 view .LVU3694
 12043 1506 2B20     		moveq	r0, #43
 12044 1508 FFF7FEFF 		bl	set_window
 12045              	.LVL1023:
3145:src/keys.c    **** 	}
 12046              		.loc 1 3145 3 is_stmt 1 view .LVU3695
 12047              	.LBB1242:
 12048              	.LBI1242:
 741:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 12049              		.loc 1 741 13 view .LVU3696
 12050              	.LBB1243:
 742:src/keys.c    **** }
 12051              		.loc 1 742 2 view .LVU3697
 742:src/keys.c    **** }
 12052              		.loc 1 742 15 is_stmt 0 view .LVU3698
 12053 150c 98F81120 		ldrb	r2, [r8, #17]	@ zero_extendqisi2
 12054 1510 3368     		ldr	r3, [r6]
 12055 1512 013A     		subs	r2, r2, #1
 12056 1514 18BF     		it	ne
 12057 1516 0122     		movne	r2, #1
 12058 1518 88F81120 		strb	r2, [r8, #17]
 12059              	.LVL1024:
 742:src/keys.c    **** }
 12060              		.loc 1 742 15 view .LVU3699
 12061              	.LBE1243:
 12062              	.LBE1242:
3152:src/keys.c    **** 	case K_DOWN:
 12063              		.loc 1 3152 2 is_stmt 1 view .LVU3700
3152:src/keys.c    **** 	case K_DOWN:
ARM GAS  /tmp/ccK8gYGY.s 			page 338


 12064              		.loc 1 3152 2 is_stmt 0 view .LVU3701
 12065              	.LBE1246:
 12066              	.LBE1350:
 12067              	.LBE1429:
 12068              	.LBE1502:
3599:src/keys.c    ****     case STATE_SST:
 12069              		.loc 1 3599 5 is_stmt 1 view .LVU3702
 12070              	.LBB1503:
 12071              	.LBB1430:
 12072              	.LBB1351:
 12073              	.LBB1247:
3203:src/keys.c    **** 	}
 12074              		.loc 1 3203 10 is_stmt 0 view .LVU3703
 12075 151c 3324     		movs	r4, #51
 12076 151e FEF7CABD 		b	.L806
 12077              	.LVL1025:
 12078              	.L937:
3203:src/keys.c    **** 	}
 12079              		.loc 1 3203 10 view .LVU3704
 12080              	.LBE1247:
 12081              	.LBE1351:
 12082              	.LBB1352:
 12083              	.LBB1155:
2846:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 12084              		.loc 1 2846 3 is_stmt 1 view .LVU3705
2846:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 12085              		.loc 1 2846 6 is_stmt 0 view .LVU3706
 12086 1522 0129     		cmp	r1, #1
 12087 1524 00F07B83 		beq	.L1315
2849:src/keys.c    **** 		return STATE_UNFINISHED;
 12088              		.loc 1 2849 4 is_stmt 1 view .LVU3707
 12089              	.LBB1147:
 12090              	.LBI1147:
2803:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 12091              		.loc 1 2803 13 view .LVU3708
 12092              	.LBB1148:
2805:src/keys.c    **** 	if (! State2.alphas )
 12093              		.loc 1 2805 2 view .LVU3709
2805:src/keys.c    **** 	if (! State2.alphas )
 12094              		.loc 1 2805 15 is_stmt 0 view .LVU3710
 12095 1528 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2806:src/keys.c    **** 		State2.alphashift = 0;
 12096              		.loc 1 2806 6 view .LVU3711
 12097 152c 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2805:src/keys.c    **** 	if (! State2.alphas )
 12098              		.loc 1 2805 15 view .LVU3712
 12099 1530 60F3C302 		bfi	r2, r0, #3, #1
 12100 1534 88F81520 		strb	r2, [r8, #21]
2806:src/keys.c    **** 		State2.alphashift = 0;
 12101              		.loc 1 2806 2 is_stmt 1 view .LVU3713
2806:src/keys.c    **** 		State2.alphashift = 0;
 12102              		.loc 1 2806 5 is_stmt 0 view .LVU3714
 12103 1538 13F00802 		ands	r2, r3, #8
 12104 153c 7FF4D2A8 		bne	.L1314
 12105              	.LVL1026:
 12106              	.L946:
2807:src/keys.c    **** }
ARM GAS  /tmp/ccK8gYGY.s 			page 339


 12107              		.loc 1 2807 3 is_stmt 1 view .LVU3715
2807:src/keys.c    **** }
 12108              		.loc 1 2807 21 is_stmt 0 view .LVU3716
 12109 1540 62F30413 		bfi	r3, r2, #4, #1
 12110 1544 88F81630 		strb	r3, [r8, #22]
 12111 1548 3368     		ldr	r3, [r6]
 12112              	.LBE1148:
 12113              	.LBE1147:
2850:src/keys.c    **** 
 12114              		.loc 1 2850 10 view .LVU3717
 12115 154a 3324     		movs	r4, #51
 12116              	.LVL1027:
2850:src/keys.c    **** 
 12117              		.loc 1 2850 10 view .LVU3718
 12118 154c FEF7B3BD 		b	.L806
 12119              	.LVL1028:
 12120              	.L936:
2836:src/keys.c    **** 			if (State2.numdigit == 0)
 12121              		.loc 1 2836 3 is_stmt 1 view .LVU3719
2836:src/keys.c    **** 			if (State2.numdigit == 0)
 12122              		.loc 1 2836 6 is_stmt 0 view .LVU3720
 12123 1550 0329     		cmp	r1, #3
 12124 1552 3FF465AB 		beq	.L942
2837:src/keys.c    **** 				reset_multi();
 12125              		.loc 1 2837 4 is_stmt 1 view .LVU3721
2837:src/keys.c    **** 				reset_multi();
 12126              		.loc 1 2837 14 is_stmt 0 view .LVU3722
 12127 1556 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
2837:src/keys.c    **** 				reset_multi();
 12128              		.loc 1 2837 7 view .LVU3723
 12129 155a 002A     		cmp	r2, #0
 12130 155c 40F03282 		bne	.L943
2838:src/keys.c    **** 			else
 12131              		.loc 1 2838 5 is_stmt 1 view .LVU3724
 12132              	.LBB1149:
 12133              	.LBI1149:
2803:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 12134              		.loc 1 2803 13 view .LVU3725
 12135              	.LBB1150:
2805:src/keys.c    **** 	if (! State2.alphas )
 12136              		.loc 1 2805 2 view .LVU3726
2805:src/keys.c    **** 	if (! State2.alphas )
 12137              		.loc 1 2805 15 is_stmt 0 view .LVU3727
 12138 1560 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 12139              	.LVL1029:
2806:src/keys.c    **** 		State2.alphashift = 0;
 12140              		.loc 1 2806 6 view .LVU3728
 12141 1564 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2805:src/keys.c    **** 	if (! State2.alphas )
 12142              		.loc 1 2805 15 view .LVU3729
 12143 1568 62F3C301 		bfi	r1, r2, #3, #1
2806:src/keys.c    **** 		State2.alphashift = 0;
 12144              		.loc 1 2806 5 view .LVU3730
 12145 156c 13F00802 		ands	r2, r3, #8
2805:src/keys.c    **** 	if (! State2.alphas )
 12146              		.loc 1 2805 15 view .LVU3731
 12147 1570 88F81510 		strb	r1, [r8, #21]
ARM GAS  /tmp/ccK8gYGY.s 			page 340


2806:src/keys.c    **** 		State2.alphashift = 0;
 12148              		.loc 1 2806 2 is_stmt 1 view .LVU3732
2806:src/keys.c    **** 		State2.alphashift = 0;
 12149              		.loc 1 2806 5 is_stmt 0 view .LVU3733
 12150 1574 E4D0     		beq	.L946
 12151 1576 FFF7B5B8 		b	.L1314
 12152              	.LVL1030:
 12153              	.L1348:
2806:src/keys.c    **** 		State2.alphashift = 0;
 12154              		.loc 1 2806 5 view .LVU3734
 12155              	.LBE1150:
 12156              	.LBE1149:
 12157              	.LBE1155:
 12158              	.LBE1352:
3362:src/keys.c    **** 	}
 12159              		.loc 1 3362 3 is_stmt 1 view .LVU3735
 12160              	.LBB1353:
 12161              	.LBI868:
1286:src/keys.c    **** 
 12162              		.loc 1 1286 13 view .LVU3736
 12163              	.LBB957:
1288:src/keys.c    **** 
 12164              		.loc 1 1288 4 view .LVU3737
 12165              	.LBB870:
 12166              	.LBI870:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 12167              		.loc 1 96 13 view .LVU3738
 12168              	.LBB871:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12169              		.loc 1 97 2 view .LVU3739
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12170              		.loc 1 97 18 is_stmt 0 view .LVU3740
 12171 157a FFF7FEFF 		bl	shift_down
 12172              	.LVL1031:
  98:src/keys.c    **** }
 12173              		.loc 1 98 2 is_stmt 1 view .LVU3741
  98:src/keys.c    **** }
 12174              		.loc 1 98 52 is_stmt 0 view .LVU3742
 12175 157e 8346     		mov	fp, r0
 12176              	.LVL1032:
  98:src/keys.c    **** }
 12177              		.loc 1 98 52 view .LVU3743
 12178 1580 08B9     		cbnz	r0, .L1038
 12179 1582 98F810B0 		ldrb	fp, [r8, #16]	@ zero_extendqisi2
 12180              	.L1038:
 12181              	.LVL1033:
  98:src/keys.c    **** }
 12182              		.loc 1 98 52 view .LVU3744
 12183              	.LBE871:
 12184              	.LBE870:
1292:src/keys.c    ****      return process_h_shifted (c);
 12185              		.loc 1 1292 4 is_stmt 1 view .LVU3745
1292:src/keys.c    ****      return process_h_shifted (c);
 12186              		.loc 1 1292 7 is_stmt 0 view .LVU3746
 12187 1586 042C     		cmp	r4, #4
 12188 1588 9AD8     		bhi	.L1039
1292:src/keys.c    ****      return process_h_shifted (c);
ARM GAS  /tmp/ccK8gYGY.s 			page 341


 12189              		.loc 1 1292 19 view .LVU3747
 12190 158a BBF1030F 		cmp	fp, #3
 12191 158e 00F05983 		beq	.L1391
1297:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 12192              		.loc 1 1297 4 is_stmt 1 view .LVU3748
1297:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 12193              		.loc 1 1297 7 is_stmt 0 view .LVU3749
 12194 1592 BBF1020F 		cmp	fp, #2
 12195 1596 3FF492AE 		beq	.L1042
 12196              	.L1041:
1300:src/keys.c    ****      return process_fg_shifted (c);
 12197              		.loc 1 1300 4 is_stmt 1 view .LVU3750
1300:src/keys.c    ****      return process_fg_shifted (c);
 12198              		.loc 1 1300 7 is_stmt 0 view .LVU3751
 12199 159a 631F     		subs	r3, r4, #5
 12200 159c 032B     		cmp	r3, #3
 12201 159e 00F27081 		bhi	.L1044
1300:src/keys.c    ****      return process_fg_shifted (c);
 12202              		.loc 1 1300 55 view .LVU3752
 12203 15a2 0BF1FF33 		add	r3, fp, #-1
1300:src/keys.c    ****      return process_fg_shifted (c);
 12204              		.loc 1 1300 34 view .LVU3753
 12205 15a6 DBB2     		uxtb	r3, r3
 12206 15a8 012B     		cmp	r3, #1
 12207 15aa 93D9     		bls	.L1306
 12208              	.L1045:
1330:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
 12209              		.loc 1 1330 4 is_stmt 1 view .LVU3754
1330:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
 12210              		.loc 1 1330 7 is_stmt 0 view .LVU3755
 12211 15ac BBF1000F 		cmp	fp, #0
 12212 15b0 40F09081 		bne	.L1300
1411:src/keys.c    ****    case (K61):
 12213              		.loc 1 1411 4 is_stmt 1 view .LVU3756
 12214 15b4 231F     		subs	r3, r4, #4
 12215 15b6 292B     		cmp	r3, #41
 12216 15b8 00F28381 		bhi	.L1078
 12217 15bc DFE813F0 		tbh	[pc, r3, lsl #1]
 12218              	.L1080:
 12219 15c0 7E01     		.2byte	(.L1081-.L1080)/2
 12220 15c2 8101     		.2byte	(.L1078-.L1080)/2
 12221 15c4 8101     		.2byte	(.L1078-.L1080)/2
 12222 15c6 8101     		.2byte	(.L1078-.L1080)/2
 12223 15c8 8101     		.2byte	(.L1078-.L1080)/2
 12224 15ca 8101     		.2byte	(.L1078-.L1080)/2
 12225 15cc 8101     		.2byte	(.L1078-.L1080)/2
 12226 15ce 8101     		.2byte	(.L1078-.L1080)/2
 12227 15d0 8101     		.2byte	(.L1078-.L1080)/2
 12228 15d2 8101     		.2byte	(.L1078-.L1080)/2
 12229 15d4 5601     		.2byte	(.L1083-.L1080)/2
 12230 15d6 7001     		.2byte	(.L1082-.L1080)/2
 12231 15d8 7E01     		.2byte	(.L1081-.L1080)/2
 12232 15da 8101     		.2byte	(.L1078-.L1080)/2
 12233 15dc 8101     		.2byte	(.L1078-.L1080)/2
 12234 15de 7001     		.2byte	(.L1082-.L1080)/2
 12235 15e0 7001     		.2byte	(.L1082-.L1080)/2
 12236 15e2 7001     		.2byte	(.L1082-.L1080)/2
ARM GAS  /tmp/ccK8gYGY.s 			page 342


 12237 15e4 8101     		.2byte	(.L1078-.L1080)/2
 12238 15e6 8101     		.2byte	(.L1078-.L1080)/2
 12239 15e8 8101     		.2byte	(.L1078-.L1080)/2
 12240 15ea 7001     		.2byte	(.L1082-.L1080)/2
 12241 15ec 7001     		.2byte	(.L1082-.L1080)/2
 12242 15ee 7001     		.2byte	(.L1082-.L1080)/2
 12243 15f0 8101     		.2byte	(.L1078-.L1080)/2
 12244 15f2 8101     		.2byte	(.L1078-.L1080)/2
 12245 15f4 8101     		.2byte	(.L1078-.L1080)/2
 12246 15f6 7001     		.2byte	(.L1082-.L1080)/2
 12247 15f8 7001     		.2byte	(.L1082-.L1080)/2
 12248 15fa 7001     		.2byte	(.L1082-.L1080)/2
 12249 15fc 8101     		.2byte	(.L1078-.L1080)/2
 12250 15fe 8101     		.2byte	(.L1078-.L1080)/2
 12251 1600 8101     		.2byte	(.L1078-.L1080)/2
 12252 1602 7001     		.2byte	(.L1082-.L1080)/2
 12253 1604 7001     		.2byte	(.L1082-.L1080)/2
 12254 1606 8101     		.2byte	(.L1078-.L1080)/2
 12255 1608 8101     		.2byte	(.L1078-.L1080)/2
 12256 160a 8101     		.2byte	(.L1078-.L1080)/2
 12257 160c 8101     		.2byte	(.L1078-.L1080)/2
 12258 160e 8101     		.2byte	(.L1078-.L1080)/2
 12259 1610 7E01     		.2byte	(.L1081-.L1080)/2
 12260 1612 CA01     		.2byte	(.L1079-.L1080)/2
 12261              	.LVL1034:
 12262              		.p2align 1
 12263              	.L1151:
1411:src/keys.c    ****    case (K61):
 12264              		.loc 1 1411 4 is_stmt 0 view .LVU3757
 12265              	.LBE957:
 12266              	.LBE1353:
 12267              	.LBB1354:
 12268              	.LBB1208:
2996:src/keys.c    **** 	const int opcode = getprog(pc);
 12269              		.loc 1 2996 27 view .LVU3758
 12270 1614 4FF0030B 		mov	fp, #3
 12271              	.LVL1035:
2996:src/keys.c    **** 	const int opcode = getprog(pc);
 12272              		.loc 1 2996 27 view .LVU3759
 12273 1618 FFF7B1BB 		b	.L950
 12274              	.LVL1036:
 12275              	.L1383:
2998:src/keys.c    **** 	const int direct = State2.runmode;
 12276              		.loc 1 2998 37 view .LVU3760
 12277 161c 5046     		mov	r0, r10
 12278 161e FFF7FEFF 		bl	getprog
 12279              	.LVL1037:
2998:src/keys.c    **** 	const int direct = State2.runmode;
 12280              		.loc 1 2998 63 view .LVU3761
 12281 1622 20F47062 		bic	r2, r0, #3840
 12282 1626 FFF7B4BB 		b	.L951
 12283              	.LVL1038:
 12284              	.L1380:
2998:src/keys.c    **** 	const int direct = State2.runmode;
 12285              		.loc 1 2998 63 view .LVU3762
 12286              	.LBE1208:
 12287              	.LBE1354:
ARM GAS  /tmp/ccK8gYGY.s 			page 343


 12288              	.LBB1355:
 12289              	.LBB1156:
2862:src/keys.c    **** 		State2.numdigit = 1;
 12290              		.loc 1 2862 3 is_stmt 1 view .LVU3763
2863:src/keys.c    **** 		return STATE_UNFINISHED;
 12291              		.loc 1 2863 19 is_stmt 0 view .LVU3764
 12292 162a 0122     		movs	r2, #1
2862:src/keys.c    **** 		State2.numdigit = 1;
 12293              		.loc 1 2862 17 view .LVU3765
 12294 162c A8F80840 		strh	r4, [r8, #8]	@ movhi
2863:src/keys.c    **** 		return STATE_UNFINISHED;
 12295              		.loc 1 2863 3 is_stmt 1 view .LVU3766
 12296 1630 3368     		ldr	r3, [r6]
2863:src/keys.c    **** 		return STATE_UNFINISHED;
 12297              		.loc 1 2863 19 is_stmt 0 view .LVU3767
 12298 1632 88F80B20 		strb	r2, [r8, #11]
2864:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12299              		.loc 1 2864 3 is_stmt 1 view .LVU3768
2864:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12300              		.loc 1 2864 10 is_stmt 0 view .LVU3769
 12301 1636 3324     		movs	r4, #51
 12302              	.LVL1039:
2864:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12303              		.loc 1 2864 10 view .LVU3770
 12304 1638 FEF73DBD 		b	.L806
 12305              	.LVL1040:
 12306              	.L1368:
2864:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12307              		.loc 1 2864 10 view .LVU3771
 12308              	.LBE1156:
 12309              	.LBE1355:
 12310              	.LBB1356:
 12311              	.LBB1042:
1748:src/keys.c    **** 		if (rawpc == 1)
 12312              		.loc 1 1748 3 is_stmt 1 view .LVU3772
1748:src/keys.c    **** 		if (rawpc == 1)
 12313              		.loc 1 1748 11 is_stmt 0 view .LVU3773
 12314 163c DFF8B8A3 		ldr	r10, .L1418+8
 12315 1640 DAF80030 		ldr	r3, [r10]
 12316              	.LVL1041:
1748:src/keys.c    **** 		if (rawpc == 1)
 12317              		.loc 1 1748 9 view .LVU3774
 12318 1644 B3F8E007 		ldrh	r0, [r3, #2016]
 12319              	.LVL1042:
1749:src/keys.c    **** 			rawpc = 0;
 12320              		.loc 1 1749 3 is_stmt 1 view .LVU3775
1750:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
 12321              		.loc 1 1750 10 is_stmt 0 view .LVU3776
 12322 1648 0128     		cmp	r0, #1
 12323              	.LVL1043:
1751:src/keys.c    **** 		update_program_bounds(1);
 12324              		.loc 1 1751 3 is_stmt 1 view .LVU3777
 12325 164a 08BF     		it	eq
 12326 164c 0020     		moveq	r0, #0
 12327              	.LVL1044:
1751:src/keys.c    **** 		update_program_bounds(1);
 12328              		.loc 1 1751 3 is_stmt 0 view .LVU3778
ARM GAS  /tmp/ccK8gYGY.s 			page 344


 12329 164e 0021     		movs	r1, #0
 12330 1650 FFF7FEFF 		bl	do_dec
 12331              	.LVL1045:
1751:src/keys.c    **** 		update_program_bounds(1);
 12332              		.loc 1 1751 3 view .LVU3779
 12333 1654 FFF7FEFF 		bl	set_pc
 12334              	.LVL1046:
1752:src/keys.c    **** 		rawpc = ProgBegin;
 12335              		.loc 1 1752 3 is_stmt 1 view .LVU3780
 12336 1658 0120     		movs	r0, #1
 12337 165a FFF7FEFF 		bl	update_program_bounds
 12338              	.LVL1047:
1753:src/keys.c    **** 		goto fin;
 12339              		.loc 1 1753 3 view .LVU3781
1753:src/keys.c    **** 		goto fin;
 12340              		.loc 1 1753 11 is_stmt 0 view .LVU3782
 12341 165e DAF80030 		ldr	r3, [r10]
1753:src/keys.c    **** 		goto fin;
 12342              		.loc 1 1753 9 view .LVU3783
 12343 1662 B3F8EC07 		ldrh	r0, [r3, #2028]
 12344              	.LVL1048:
1754:src/keys.c    **** 	}
 12345              		.loc 1 1754 3 is_stmt 1 view .LVU3784
 12346 1666 FFF706B9 		b	.L852
 12347              	.LVL1049:
 12348              	.L1144:
1754:src/keys.c    **** 	}
 12349              		.loc 1 1754 3 is_stmt 0 view .LVU3785
 12350              	.LBE1042:
 12351              	.LBE1356:
 12352              	.LBB1357:
 12353              	.LBB862:
 306:src/keys.c    **** 		}
 12354              		.loc 1 306 11 view .LVU3786
 12355 166a 1023     		movs	r3, #16
 12356 166c FFF72CB8 		b	.L909
 12357              	.LVL1050:
 12358              	.L1389:
 306:src/keys.c    **** 		}
 12359              		.loc 1 306 11 view .LVU3787
 12360              	.LBE862:
 12361              	.LBE1357:
 12362              	.LBB1358:
 12363              	.LBB1248:
3148:src/keys.c    **** 		goto reset_window;
 12364              		.loc 1 3148 3 is_stmt 1 view .LVU3788
3148:src/keys.c    **** 		goto reset_window;
 12365              		.loc 1 3148 17 is_stmt 0 view .LVU3789
 12366 1670 A8F808B0 		strh	fp, [r8, #8]	@ movhi
3149:src/keys.c    **** 	}
 12367              		.loc 1 3149 3 is_stmt 1 view .LVU3790
 12368 1674 45E5     		b	.L982
 12369              	.LVL1051:
 12370              	.L922:
3149:src/keys.c    **** 	}
 12371              		.loc 1 3149 3 is_stmt 0 view .LVU3791
 12372 1676 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
ARM GAS  /tmp/ccK8gYGY.s 			page 345


 12373              	.LBE1248:
 12374              	.LBE1358:
 12375              	.LBB1359:
 12376              	.LBB863:
 12377              	.LBB851:
 371:src/keys.c    **** #ifndef WINGUI
 12378              		.loc 1 371 8 view .LVU3792
 12379 167a DD4B     		ldr	r3, .L1418
 377:src/keys.c    ****   }
 12380              		.loc 1 377 9 view .LVU3793
 12381 167c 0C21     		movs	r1, #12
 373:src/keys.c    **** #else
 12382              		.loc 1 373 73 view .LVU3794
 12383 167e 4FF0020C 		mov	ip, #2
 12384 1682 FEF7F0BD 		b	.L921
 12385              	.LVL1052:
 12386              	.L822:
 373:src/keys.c    **** #else
 12387              		.loc 1 373 73 view .LVU3795
 12388              	.LBE851:
 12389              	.LBE863:
 12390              	.LBE1359:
 12391              	.LBB1360:
 12392              	.LBB1345:
1256:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
 12393              		.loc 1 1256 3 is_stmt 1 view .LVU3796
 12394 1686 6420     		movs	r0, #100
 12395 1688 FFF7FEFF 		bl	get_reg_n
 12396              	.LVL1053:
 12397 168c 0446     		mov	r4, r0
 12398              	.LVL1054:
1256:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
 12399              		.loc 1 1256 33 is_stmt 0 view .LVU3797
 12400 168e 6E20     		movs	r0, #110
 12401 1690 FFF7FEFF 		bl	get_reg_n
 12402              	.LVL1055:
 12403 1694 0146     		mov	r1, r0
1256:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
 12404              		.loc 1 1256 3 view .LVU3798
 12405 1696 2046     		mov	r0, r4
 12406 1698 FFF7FEFF 		bl	copyreg
 12407              	.LVL1056:
1257:src/keys.c    **** 	}
 12408              		.loc 1 1257 3 is_stmt 1 view .LVU3799
 12409 169c 6520     		movs	r0, #101
 12410 169e B5E6     		b	.L1302
 12411              	.LVL1057:
 12412              	.L1387:
1257:src/keys.c    **** 	}
 12413              		.loc 1 1257 3 is_stmt 0 view .LVU3800
 12414              	.LBE1345:
 12415              	.LBE1360:
 12416              	.LBB1361:
 12417              	.LBB1249:
 12418              	.LBB1244:
3137:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12419              		.loc 1 3137 3 is_stmt 1 view .LVU3801
ARM GAS  /tmp/ccK8gYGY.s 			page 346


3137:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12420              		.loc 1 3137 19 is_stmt 0 view .LVU3802
 12421 16a0 B8F80810 		ldrh	r1, [r8, #8]
3137:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12422              		.loc 1 3137 27 view .LVU3803
 12423 16a4 0A23     		movs	r3, #10
3137:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12424              		.loc 1 3137 32 view .LVU3804
 12425 16a6 03FB01B2 		mla	r2, r3, r1, fp
3137:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12426              		.loc 1 3137 37 view .LVU3805
 12427 16aa 6424     		movs	r4, #100
 12428              	.LVL1058:
3137:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12429              		.loc 1 3137 37 view .LVU3806
 12430 16ac B2FBF4F3 		udiv	r3, r2, r4
 12431 16b0 04FB1323 		mls	r3, r4, r3, r2
 12432              	.LVL1059:
3138:src/keys.c    **** 			dv = n;
 12433              		.loc 1 3138 3 is_stmt 1 view .LVU3807
3138:src/keys.c    **** 			dv = n;
 12434              		.loc 1 3138 6 is_stmt 0 view .LVU3808
 12435 16b4 5345     		cmp	r3, r10
 12436 16b6 09DA     		bge	.L984
3138:src/keys.c    **** 			dv = n;
 12437              		.loc 1 3138 21 view .LVU3809
 12438 16b8 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3138:src/keys.c    **** 			dv = n;
 12439              		.loc 1 3138 17 view .LVU3810
 12440 16bc D207     		lsls	r2, r2, #31
 12441 16be 3FF51EAD 		bmi	.L1304
3138:src/keys.c    **** 			dv = n;
 12442              		.loc 1 3138 36 view .LVU3811
 12443 16c2 8842     		cmp	r0, r1
 12444 16c4 02DD     		ble	.L984
3138:src/keys.c    **** 			dv = n;
 12445              		.loc 1 3138 63 view .LVU3812
 12446 16c6 9842     		cmp	r0, r3
 12447 16c8 3FF719AD 		bgt	.L1304
 12448              	.L984:
3139:src/keys.c    **** 		State2.digval = dv;
 12449              		.loc 1 3139 4 is_stmt 1 view .LVU3813
3139:src/keys.c    **** 		State2.digval = dv;
 12450              		.loc 1 3139 7 is_stmt 0 view .LVU3814
 12451 16cc 5B46     		mov	r3, fp
 12452              	.LVL1060:
3140:src/keys.c    **** 		goto reset_window;
 12453              		.loc 1 3140 3 is_stmt 1 view .LVU3815
 12454 16ce 16E5     		b	.L1304
 12455              	.LVL1061:
 12456              	.L1384:
3140:src/keys.c    **** 		goto reset_window;
 12457              		.loc 1 3140 3 is_stmt 0 view .LVU3816
 12458              	.LBE1244:
 12459              	.LBE1249:
 12460              	.LBE1361:
 12461              	.LBB1362:
ARM GAS  /tmp/ccK8gYGY.s 			page 347


 12462              	.LBB1209:
3005:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 12463              		.loc 1 3005 3 is_stmt 1 view .LVU3817
3005:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 12464              		.loc 1 3005 8 is_stmt 0 view .LVU3818
 12465 16d0 4FEA8B34 		lsl	r4, fp, #14
 12466              	.LVL1062:
3005:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 12467              		.loc 1 3005 6 view .LVU3819
 12468 16d4 44F00104 		orr	r4, r4, #1
 12469              	.LVL1063:
3006:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 12470              		.loc 1 3006 3 is_stmt 1 view .LVU3820
3006:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 12471              		.loc 1 3006 9 is_stmt 0 view .LVU3821
 12472 16d8 2046     		mov	r0, r4
 12473 16da FFF7FEFF 		bl	is_label_or_end_at
 12474              	.LVL1064:
3006:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 12475              		.loc 1 3006 6 view .LVU3822
 12476 16de 0246     		mov	r2, r0
 12477 16e0 0028     		cmp	r0, #0
 12478 16e2 00F07681 		beq	.L1392
 12479              	.L954:
3008:src/keys.c    **** 		return STATE_UNFINISHED;
 12480              		.loc 1 3008 3 is_stmt 1 view .LVU3823
3008:src/keys.c    **** 		return STATE_UNFINISHED;
 12481              		.loc 1 3008 17 is_stmt 0 view .LVU3824
 12482 16e6 A8F80840 		strh	r4, [r8, #8]	@ movhi
3009:src/keys.c    **** 	}
 12483              		.loc 1 3009 3 is_stmt 1 view .LVU3825
 12484 16ea 3368     		ldr	r3, [r6]
3009:src/keys.c    **** 	}
 12485              		.loc 1 3009 10 is_stmt 0 view .LVU3826
 12486 16ec 3324     		movs	r4, #51
 12487              	.LVL1065:
3009:src/keys.c    **** 	}
 12488              		.loc 1 3009 10 view .LVU3827
 12489 16ee FEF7E2BC 		b	.L806
 12490              	.LVL1066:
 12491              	.L1375:
3009:src/keys.c    **** 	}
 12492              		.loc 1 3009 10 view .LVU3828
 12493              	.LBE1209:
 12494              	.LBE1362:
 12495              	.LBB1363:
 12496              	.LBB864:
 287:src/keys.c    **** 					}
 12497              		.loc 1 287 7 is_stmt 1 view .LVU3829
 12498 16f2 0120     		movs	r0, #1
 12499 16f4 FFF7FEFF 		bl	finish_cpx_entry
 12500              	.LVL1067:
 287:src/keys.c    **** 					}
 12501              		.loc 1 287 7 is_stmt 0 view .LVU3830
 12502              	.LBE864:
 12503              	.LBE1363:
3325:src/keys.c    **** 		if (is_bad_cmdline())
ARM GAS  /tmp/ccK8gYGY.s 			page 348


 12504              		.loc 1 3325 2 is_stmt 1 view .LVU3831
 12505              	.LBB1364:
 12506              	.LBB865:
 289:src/keys.c    **** 				default:
 12507              		.loc 1 289 13 is_stmt 0 view .LVU3832
 12508 16f8 1123     		movs	r3, #17
 12509 16fa FEF7E5BF 		b	.L909
 12510              	.LVL1068:
 12511              	.L1356:
 298:src/keys.c    **** 				stack_begin (1);
 12512              		.loc 1 298 5 is_stmt 1 view .LVU3833
 12513 16fe 41F00201 		orr	r1, r1, #2
 12514 1702 80F8AC17 		strb	r1, [r0, #1964]
 299:src/keys.c    **** 			}
 12515              		.loc 1 299 5 view .LVU3834
 12516 1706 5846     		mov	r0, fp
 12517 1708 FFF7FEFF 		bl	stack_begin
 12518              	.LVL1069:
 299:src/keys.c    **** 			}
 12519              		.loc 1 299 5 is_stmt 0 view .LVU3835
 12520              	.LBE865:
 12521              	.LBE1364:
3325:src/keys.c    **** 		if (is_bad_cmdline())
 12522              		.loc 1 3325 2 is_stmt 1 view .LVU3836
 12523              	.LBB1365:
 12524              	.LBB866:
 306:src/keys.c    **** 		}
 12525              		.loc 1 306 11 is_stmt 0 view .LVU3837
 12526 170c 1023     		movs	r3, #16
 12527 170e FEF7DBBF 		b	.L909
 12528              	.LVL1070:
 12529              	.L1296:
 306:src/keys.c    **** 		}
 12530              		.loc 1 306 11 view .LVU3838
 12531              	.LBE866:
 12532              	.LBE1365:
 12533              	.LBE1430:
 12534              	.LBE1503:
3635:src/keys.c    **** 	NonProgrammable = 0;
 12535              		.loc 1 3635 26 discriminator 1 view .LVU3839
 12536 1712 1368     		ldr	r3, [r2]
 12537 1714 002B     		cmp	r3, #0
 12538 1716 7EF42FAF 		bne	.L1109
 12539 171a FEF78BBE 		b	.L1110
 12540              	.LVL1071:
 12541              	.L1386:
 12542              	.LBB1504:
 12543              	.LBB1431:
 12544              	.LBB1366:
 12545              	.LBB1250:
3131:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 12546              		.loc 1 3131 3 is_stmt 1 view .LVU3840
3131:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 12547              		.loc 1 3131 7 is_stmt 0 view .LVU3841
 12548 171e FFF7FEFF 		bl	local_regs
 12549              	.LVL1072:
3131:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
ARM GAS  /tmp/ccK8gYGY.s 			page 349


 12550              		.loc 1 3131 6 view .LVU3842
 12551 1722 68B1     		cbz	r0, .L980
3132:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12552              		.loc 1 3132 4 is_stmt 1 view .LVU3843
3132:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12553              		.loc 1 3132 19 is_stmt 0 view .LVU3844
 12554 1724 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3132:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12555              		.loc 1 3132 34 view .LVU3845
 12556 1728 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
3132:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12557              		.loc 1 3132 19 view .LVU3846
 12558 172c 03F00101 		and	r1, r3, #1
3132:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12559              		.loc 1 3132 34 view .LVU3847
 12560 1730 0A43     		orrs	r2, r1, r2
 12561 1732 0CBF     		ite	eq
 12562 1734 0122     		moveq	r2, #1
 12563 1736 0022     		movne	r2, #0
3132:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12564              		.loc 1 3132 17 view .LVU3848
 12565 1738 62F30003 		bfi	r3, r2, #0, #1
 12566 173c 88F81630 		strb	r3, [r8, #22]
 12567              	.L980:
3133:src/keys.c    **** 		goto reset_window;
 12568              		.loc 1 3133 3 is_stmt 1 view .LVU3849
3133:src/keys.c    **** 		goto reset_window;
 12569              		.loc 1 3133 32 is_stmt 0 view .LVU3850
 12570 1740 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3133:src/keys.c    **** 		goto reset_window;
 12571              		.loc 1 3133 17 view .LVU3851
 12572 1744 13F0010F 		tst	r3, #1
 12573 1748 14BF     		ite	ne
 12574 174a 0023     		movne	r3, #0
 12575 174c 6423     		moveq	r3, #100
 12576 174e A8F80830 		strh	r3, [r8, #8]	@ movhi
3134:src/keys.c    **** 	}
 12577              		.loc 1 3134 3 is_stmt 1 view .LVU3852
 12578 1752 D6E4     		b	.L982
 12579              	.LVL1073:
 12580              	.L1014:
3134:src/keys.c    **** 	}
 12581              		.loc 1 3134 3 is_stmt 0 view .LVU3853
 12582              	.LBE1250:
 12583              	.LBE1366:
 12584              	.LBB1367:
 12585              	.LBB1326:
1820:src/keys.c    **** 			return STATE_BACKSPACE;
 12586              		.loc 1 1820 3 is_stmt 1 view .LVU3854
1820:src/keys.c    **** 			return STATE_BACKSPACE;
 12587              		.loc 1 1820 6 is_stmt 0 view .LVU3855
 12588 1754 0028     		cmp	r0, #0
 12589 1756 3EF4A0AE 		beq	.L1023
 12590              	.LVL1074:
 12591              	.L1024:
1822:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 12592              		.loc 1 1822 3 is_stmt 1 view .LVU3856
ARM GAS  /tmp/ccK8gYGY.s 			page 350


1822:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 12593              		.loc 1 1822 6 is_stmt 0 view .LVU3857
 12594 175a 0328     		cmp	r0, #3
 12595 175c 7FF4A2AD 		bne	.L1008
 12596              	.LVL1075:
1822:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 12597              		.loc 1 1822 6 view .LVU3858
 12598              	.LBE1326:
 12599              	.LBE1367:
 12600              	.LBE1431:
 12601              	.LBE1504:
3635:src/keys.c    **** 	NonProgrammable = 0;
 12602              		.loc 1 3635 7 is_stmt 1 view .LVU3859
3635:src/keys.c    **** 	NonProgrammable = 0;
 12603              		.loc 1 3635 10 is_stmt 0 view .LVU3860
 12604 1760 4A06     		lsls	r2, r1, #25
 12605              	.LVL1076:
3635:src/keys.c    **** 	NonProgrammable = 0;
 12606              		.loc 1 3635 10 view .LVU3861
 12607 1762 0ED5     		bpl	.L1166
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12608              		.loc 1 3636 2 is_stmt 1 view .LVU3862
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12609              		.loc 1 3636 18 is_stmt 0 view .LVU3863
 12610 1764 A34B     		ldr	r3, .L1418+4
 12611 1766 0022     		movs	r2, #0
 12612 1768 1A60     		str	r2, [r3]
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12613              		.loc 1 3637 2 is_stmt 1 view .LVU3864
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12614              		.loc 1 3637 32 is_stmt 0 view .LVU3865
 12615 176a 4FF4BA70 		mov	r0, #372
 12616              	.LVL1077:
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12617              		.loc 1 3637 32 view .LVU3866
 12618 176e FEF770BF 		b	.L1106
 12619              	.LVL1078:
 12620              	.L993:
 12621              	.LBB1505:
 12622              	.LBB1432:
 12623              	.LBB1368:
 12624              	.LBB1251:
3170:src/keys.c    **** 		goto reset_window;
 12625              		.loc 1 3170 4 is_stmt 1 view .LVU3867
3170:src/keys.c    **** 		goto reset_window;
 12626              		.loc 1 3170 18 is_stmt 0 view .LVU3868
 12627 1772 0023     		movs	r3, #0
 12628 1774 A8F80830 		strh	r3, [r8, #8]	@ movhi
 12629 1778 C3E4     		b	.L982
 12630              	.LVL1079:
 12631              	.L1351:
3170:src/keys.c    **** 		goto reset_window;
 12632              		.loc 1 3170 18 view .LVU3869
 12633              	.LBE1251:
 12634              	.LBE1368:
 12635              	.LBE1432:
 12636              	.LBE1505:
ARM GAS  /tmp/ccK8gYGY.s 			page 351


3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12637              		.loc 1 3636 2 is_stmt 1 view .LVU3870
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12638              		.loc 1 3636 18 is_stmt 0 view .LVU3871
 12639 177a 0022     		movs	r2, #0
 12640 177c 1A60     		str	r2, [r3]
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12641              		.loc 1 3637 2 is_stmt 1 view .LVU3872
 12642 177e FEF768BF 		b	.L1106
 12643              	.LVL1080:
 12644              	.L1166:
 12645              	.LBB1506:
 12646              	.LBB1433:
 12647              	.LBB1369:
 12648              	.LBB1327:
1823:src/keys.c    **** 		break;
 12649              		.loc 1 1823 11 is_stmt 0 view .LVU3873
 12650 1782 4FF4BA74 		mov	r4, #372
 12651              	.LVL1081:
 12652              	.L1049:
1823:src/keys.c    **** 		break;
 12653              		.loc 1 1823 11 view .LVU3874
 12654              	.LBE1327:
 12655              	.LBE1369:
 12656              	.LBE1433:
 12657              	.LBE1506:
3635:src/keys.c    **** 	NonProgrammable = 0;
 12658              		.loc 1 3635 26 view .LVU3875
 12659 1786 9B4B     		ldr	r3, .L1418+4
 12660 1788 1A68     		ldr	r2, [r3]
 12661 178a 002A     		cmp	r2, #0
 12662 178c 5DD0     		beq	.L1393
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12663              		.loc 1 3636 2 is_stmt 1 view .LVU3876
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12664              		.loc 1 3636 18 is_stmt 0 view .LVU3877
 12665 178e 0022     		movs	r2, #0
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12666              		.loc 1 3637 32 view .LVU3878
 12667 1790 2046     		mov	r0, r4
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12668              		.loc 1 3636 18 view .LVU3879
 12669 1792 1A60     		str	r2, [r3]
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12670              		.loc 1 3637 2 is_stmt 1 view .LVU3880
 12671 1794 FEF75DBF 		b	.L1106
 12672              	.LVL1082:
 12673              	.L876:
 12674              	.LBB1507:
 12675              	.LBB1434:
 12676              	.LBB1370:
 12677              	.LBB1022:
2371:src/keys.c    **** 		// Special 1
 12678              		.loc 1 2371 7 view .LVU3881
2371:src/keys.c    **** 		// Special 1
 12679              		.loc 1 2371 10 is_stmt 0 view .LVU3882
 12680 1798 BCF1010F 		cmp	ip, #1
ARM GAS  /tmp/ccK8gYGY.s 			page 352


 12681 179c 7FF461A9 		bne	.L878
2373:src/keys.c    **** 	}
 12682              		.loc 1 2373 3 is_stmt 1 view .LVU3883
2373:src/keys.c    **** 	}
 12683              		.loc 1 2373 18 is_stmt 0 view .LVU3884
 12684 17a0 BBF1000F 		cmp	fp, #0
 12685 17a4 14BF     		ite	ne
 12686 17a6 2724     		movne	r4, #39
 12687              	.LVL1083:
2373:src/keys.c    **** 	}
 12688              		.loc 1 2373 18 view .LVU3885
 12689 17a8 1E24     		moveq	r4, #30
2373:src/keys.c    **** 	}
 12690              		.loc 1 2373 47 view .LVU3886
 12691 17aa 1C44     		add	r4, r4, r3
 12692 17ac FEF718BE 		b	.L840
 12693              	.LVL1084:
 12694              	.L1016:
2373:src/keys.c    **** 	}
 12695              		.loc 1 2373 47 view .LVU3887
 12696              	.LBE1022:
 12697              	.LBE1370:
 12698              	.LBB1371:
 12699              	.LBB1328:
1793:src/keys.c    **** 			init_arg(RARG_ARCL);
 12700              		.loc 1 1793 3 is_stmt 1 view .LVU3888
1793:src/keys.c    **** 			init_arg(RARG_ARCL);
 12701              		.loc 1 1793 6 is_stmt 0 view .LVU3889
 12702 17b0 0128     		cmp	r0, #1
 12703 17b2 4DD0     		beq	.L1394
1796:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 12704              		.loc 1 1796 10 is_stmt 1 view .LVU3890
1796:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 12705              		.loc 1 1796 13 is_stmt 0 view .LVU3891
 12706 17b4 0328     		cmp	r0, #3
 12707 17b6 7FF475AD 		bne	.L1008
1797:src/keys.c    **** 			return STATE_UNFINISHED;
 12708              		.loc 1 1797 4 is_stmt 1 view .LVU3892
 12709              	.LVL1085:
 12710              	.LBB1312:
 12711              	.LBI1312:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 12712              		.loc 1 552 13 view .LVU3893
 12713              	.LBB1313:
 553:src/keys.c    **** 		return;
 12714              		.loc 1 553 2 view .LVU3894
 553:src/keys.c    **** 		return;
 12715              		.loc 1 553 6 is_stmt 0 view .LVU3895
 12716 17ba FFF7FEFF 		bl	is_bad_cmdline
 12717              	.LVL1086:
 553:src/keys.c    **** 		return;
 12718              		.loc 1 553 5 view .LVU3896
 12719 17be 0346     		mov	r3, r0
 12720 17c0 0028     		cmp	r0, #0
 12721 17c2 7EF48FAF 		bne	.L1314
 12722 17c6 7320     		movs	r0, #115
 12723              	.LBE1313:
ARM GAS  /tmp/ccK8gYGY.s 			page 353


 12724              	.LBE1312:
 12725              	.LBE1328:
 12726              	.LBE1371:
 12727              	.LBE1434:
 12728              	.LBE1507:
3409:src/keys.c    ****   //print_debug(60,c);
 12729              		.loc 1 3409 7 view .LVU3897
 12730 17c8 1D46     		mov	r5, r3
 12731              	.LBB1508:
 12732              	.LBB1435:
 12733              	.LBB1372:
 12734              	.LBB1329:
1798:src/keys.c    **** 		}
 12735              		.loc 1 1798 11 view .LVU3898
 12736 17ca 3324     		movs	r4, #51
 12737              	.LBB1315:
 12738              	.LBB1314:
 12739 17cc FFF7FEFF 		bl	init_arg.part.0
 12740              	.LVL1087:
 12741 17d0 3368     		ldr	r3, [r6]
 12742 17d2 FEF770BC 		b	.L806
 12743              	.LVL1088:
 12744              	.L1015:
1798:src/keys.c    **** 		}
 12745              		.loc 1 1798 11 view .LVU3899
 12746              	.LBE1314:
 12747              	.LBE1315:
1803:src/keys.c    **** 			break;
 12748              		.loc 1 1803 3 is_stmt 1 view .LVU3900
1803:src/keys.c    **** 			break;
 12749              		.loc 1 1803 24 is_stmt 0 view .LVU3901
 12750 17d6 831E     		subs	r3, r0, #2
1803:src/keys.c    **** 			break;
 12751              		.loc 1 1803 6 view .LVU3902
 12752 17d8 DBB2     		uxtb	r3, r3
 12753 17da 012B     		cmp	r3, #1
 12754 17dc 7FF662AD 		bls	.L1008
1805:src/keys.c    **** 			State2.multi = 1;
 12755              		.loc 1 1805 3 is_stmt 1 view .LVU3903
1805:src/keys.c    **** 			State2.multi = 1;
 12756              		.loc 1 1805 6 is_stmt 0 view .LVU3904
 12757 17e0 0128     		cmp	r0, #1
 12758 17e2 02D1     		bne	.L1022
1805:src/keys.c    **** 			State2.multi = 1;
 12759              		.loc 1 1805 24 view .LVU3905
 12760 17e4 11F04001 		ands	r1, r1, #64
 12761 17e8 0FD0     		beq	.L1395
 12762              	.L1022:
1811:src/keys.c    **** 		State2.alphashift = 0;
 12763              		.loc 1 1811 3 is_stmt 1 view .LVU3906
1812:src/keys.c    **** #ifdef DM42
 12764              		.loc 1 1812 3 view .LVU3907
1811:src/keys.c    **** 		State2.alphashift = 0;
 12765              		.loc 1 1811 17 is_stmt 0 view .LVU3908
 12766 17ea 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
1814:src/keys.c    **** 		display_current_menu();
 12767              		.loc 1 1814 3 view .LVU3909
ARM GAS  /tmp/ccK8gYGY.s 			page 354


 12768 17ee 4FF0FF30 		mov	r0, #-1
 12769              	.LVL1089:
1811:src/keys.c    **** 		State2.alphashift = 0;
 12770              		.loc 1 1811 17 view .LVU3910
 12771 17f2 23F01803 		bic	r3, r3, #24
 12772 17f6 88F81630 		strb	r3, [r8, #22]
1814:src/keys.c    **** 		display_current_menu();
 12773              		.loc 1 1814 3 is_stmt 1 view .LVU3911
1817:src/keys.c    **** 
 12774              		.loc 1 1817 10 is_stmt 0 view .LVU3912
 12775 17fa 3324     		movs	r4, #51
1814:src/keys.c    **** 		display_current_menu();
 12776              		.loc 1 1814 3 view .LVU3913
 12777 17fc FFF7FEFF 		bl	set_menu
 12778              	.LVL1090:
1815:src/keys.c    **** #endif
 12779              		.loc 1 1815 3 is_stmt 1 view .LVU3914
 12780 1800 FFF7FEFF 		bl	display_current_menu
 12781              	.LVL1091:
1817:src/keys.c    **** 
 12782              		.loc 1 1817 3 view .LVU3915
 12783 1804 3368     		ldr	r3, [r6]
1817:src/keys.c    **** 
 12784              		.loc 1 1817 10 is_stmt 0 view .LVU3916
 12785 1806 FEF756BC 		b	.L806
 12786              	.LVL1092:
 12787              	.L1395:
1806:src/keys.c    **** 			State2.numdigit = 0;
 12788              		.loc 1 1806 4 is_stmt 1 view .LVU3917
1806:src/keys.c    **** 			State2.numdigit = 0;
 12789              		.loc 1 1806 17 is_stmt 0 view .LVU3918
 12790 180a 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 12791              	.LVL1093:
1807:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 12792              		.loc 1 1807 20 view .LVU3919
 12793 180e 88F80B10 		strb	r1, [r8, #11]
1806:src/keys.c    **** 			State2.numdigit = 0;
 12794              		.loc 1 1806 17 view .LVU3920
 12795 1812 42F00802 		orr	r2, r2, #8
1808:src/keys.c    **** 			return STATE_UNFINISHED;
 12796              		.loc 1 1808 12 view .LVU3921
 12797 1816 0A21     		movs	r1, #10
 12798 1818 3368     		ldr	r3, [r6]
 12799 181a 88F81F10 		strb	r1, [r8, #31]
1806:src/keys.c    **** 			State2.numdigit = 0;
 12800              		.loc 1 1806 17 view .LVU3922
 12801 181e 88F81520 		strb	r2, [r8, #21]
1807:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 12802              		.loc 1 1807 4 is_stmt 1 view .LVU3923
1808:src/keys.c    **** 			return STATE_UNFINISHED;
 12803              		.loc 1 1808 4 view .LVU3924
1809:src/keys.c    **** 		}
 12804              		.loc 1 1809 4 view .LVU3925
1809:src/keys.c    **** 		}
 12805              		.loc 1 1809 11 is_stmt 0 view .LVU3926
 12806 1822 3324     		movs	r4, #51
 12807 1824 FEF747BC 		b	.L806
ARM GAS  /tmp/ccK8gYGY.s 			page 355


 12808              	.LVL1094:
 12809              	.L1017:
1786:src/keys.c    **** 			init_arg(RARG_ASTO);
 12810              		.loc 1 1786 3 is_stmt 1 view .LVU3927
1786:src/keys.c    **** 			init_arg(RARG_ASTO);
 12811              		.loc 1 1786 6 is_stmt 0 view .LVU3928
 12812 1828 0128     		cmp	r0, #1
 12813 182a 7FF43BAD 		bne	.L1008
1787:src/keys.c    **** 			return STATE_UNFINISHED;
 12814              		.loc 1 1787 4 is_stmt 1 view .LVU3929
 12815              	.LVL1095:
 12816              	.LBB1316:
 12817              	.LBI1316:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 12818              		.loc 1 552 13 view .LVU3930
 12819              	.LBB1317:
 553:src/keys.c    **** 		return;
 12820              		.loc 1 553 2 view .LVU3931
 553:src/keys.c    **** 		return;
 12821              		.loc 1 553 6 is_stmt 0 view .LVU3932
 12822 182e FFF7FEFF 		bl	is_bad_cmdline
 12823              	.LVL1096:
 553:src/keys.c    **** 		return;
 12824              		.loc 1 553 5 view .LVU3933
 12825 1832 0346     		mov	r3, r0
 12826 1834 0028     		cmp	r0, #0
 12827 1836 7EF455AF 		bne	.L1314
 12828 183a 2620     		movs	r0, #38
 12829              	.LBE1317:
 12830              	.LBE1316:
 12831              	.LBE1329:
 12832              	.LBE1372:
 12833              	.LBE1435:
 12834              	.LBE1508:
3409:src/keys.c    ****   //print_debug(60,c);
 12835              		.loc 1 3409 7 view .LVU3934
 12836 183c 1D46     		mov	r5, r3
 12837              	.LBB1509:
 12838              	.LBB1436:
 12839              	.LBB1373:
 12840              	.LBB1330:
1788:src/keys.c    **** 		}
 12841              		.loc 1 1788 11 view .LVU3935
 12842 183e 3324     		movs	r4, #51
 12843              	.LBB1319:
 12844              	.LBB1318:
 12845 1840 FFF7FEFF 		bl	init_arg.part.0
 12846              	.LVL1097:
 12847 1844 3368     		ldr	r3, [r6]
 12848 1846 FEF736BC 		b	.L806
 12849              	.LVL1098:
 12850              	.L1393:
1788:src/keys.c    **** 		}
 12851              		.loc 1 1788 11 view .LVU3936
 12852 184a 2046     		mov	r0, r4
 12853 184c FEF7F2BD 		b	.L1110
 12854              	.LVL1099:
ARM GAS  /tmp/ccK8gYGY.s 			page 356


 12855              	.L1394:
1788:src/keys.c    **** 		}
 12856              		.loc 1 1788 11 view .LVU3937
 12857              	.LBE1318:
 12858              	.LBE1319:
1794:src/keys.c    **** 			return STATE_UNFINISHED;
 12859              		.loc 1 1794 4 is_stmt 1 view .LVU3938
 12860              	.LBB1320:
 12861              	.LBI1320:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 12862              		.loc 1 552 13 view .LVU3939
 12863              	.LBB1321:
 553:src/keys.c    **** 		return;
 12864              		.loc 1 553 2 view .LVU3940
 553:src/keys.c    **** 		return;
 12865              		.loc 1 553 6 is_stmt 0 view .LVU3941
 12866 1850 FFF7FEFF 		bl	is_bad_cmdline
 12867              	.LVL1100:
 553:src/keys.c    **** 		return;
 12868              		.loc 1 553 5 view .LVU3942
 12869 1854 0346     		mov	r3, r0
 12870 1856 0028     		cmp	r0, #0
 12871 1858 7EF444AF 		bne	.L1314
 12872 185c 2720     		movs	r0, #39
 12873              	.LBE1321:
 12874              	.LBE1320:
 12875              	.LBE1330:
 12876              	.LBE1373:
 12877              	.LBE1436:
 12878              	.LBE1509:
3409:src/keys.c    ****   //print_debug(60,c);
 12879              		.loc 1 3409 7 view .LVU3943
 12880 185e 1D46     		mov	r5, r3
 12881              	.LBB1510:
 12882              	.LBB1437:
 12883              	.LBB1374:
 12884              	.LBB1331:
1795:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 12885              		.loc 1 1795 11 view .LVU3944
 12886 1860 3324     		movs	r4, #51
 12887              	.LBB1323:
 12888              	.LBB1322:
 12889 1862 FFF7FEFF 		bl	init_arg.part.0
 12890              	.LVL1101:
 12891 1866 3368     		ldr	r3, [r6]
 12892 1868 FEF725BC 		b	.L806
 12893              	.LVL1102:
 12894              	.L1083:
1795:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 12895              		.loc 1 1795 11 view .LVU3945
 12896              	.LBE1322:
 12897              	.LBE1323:
 12898              	.LBE1331:
 12899              	.LBE1374:
 12900              	.LBB1375:
 12901              	.LBB958:
1431:src/keys.c    ****        return process_cmplx(c);
ARM GAS  /tmp/ccK8gYGY.s 			page 357


 12902              		.loc 1 1431 6 is_stmt 1 view .LVU3946
1431:src/keys.c    ****        return process_cmplx(c);
 12903              		.loc 1 1431 21 is_stmt 0 view .LVU3947
 12904 186c DAF80030 		ldr	r3, [r10]
 12905 1870 93F8AC37 		ldrb	r3, [r3, #1964]	@ zero_extendqisi2
1431:src/keys.c    ****        return process_cmplx(c);
 12906              		.loc 1 1431 9 view .LVU3948
 12907 1874 13F0060F 		tst	r3, #6
1432:src/keys.c    ****      }
 12908              		.loc 1 1432 15 view .LVU3949
 12909 1878 4FF00E00 		mov	r0, #14
1431:src/keys.c    ****        return process_cmplx(c);
 12910              		.loc 1 1431 9 view .LVU3950
 12911 187c 7EF42BAD 		bne	.L1305
 12912 1880 28E5     		b	.L1307
 12913              	.L1044:
1304:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
 12914              		.loc 1 1304 4 is_stmt 1 view .LVU3951
1304:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
 12915              		.loc 1 1304 7 is_stmt 0 view .LVU3952
 12916 1882 0F2C     		cmp	r4, #15
 12917 1884 7FF492AE 		bne	.L1045
1305:src/keys.c    ****        reset_shift();
 12918              		.loc 1 1305 6 is_stmt 1 view .LVU3953
1305:src/keys.c    ****        reset_shift();
 12919              		.loc 1 1305 9 is_stmt 0 view .LVU3954
 12920 1888 BBF1010F 		cmp	fp, #1
 12921 188c 00F04C82 		beq	.L1396
 12922              	.LBB872:
1321:src/keys.c    **** #endif
 12923              		.loc 1 1321 8 is_stmt 1 view .LVU3955
 12924              	.LVL1103:
1323:src/keys.c    **** 	 finish_cpx_entry(1);
 12925              		.loc 1 1323 8 view .LVU3956
1323:src/keys.c    **** 	 finish_cpx_entry(1);
 12926              		.loc 1 1323 11 is_stmt 0 view .LVU3957
 12927 1890 BBF1030F 		cmp	fp, #3
 12928 1894 00F03F82 		beq	.L1397
 12929              	.LBE872:
1330:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
 12930              		.loc 1 1330 4 is_stmt 1 view .LVU3958
1330:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
 12931              		.loc 1 1330 7 is_stmt 0 view .LVU3959
 12932 1898 BBF1000F 		cmp	fp, #0
 12933 189c 7FF416AD 		bne	.L1123
 12934              	.LVL1104:
 12935              	.L1082:
1424:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 12936              		.loc 1 1424 6 is_stmt 1 view .LVU3960
1424:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 12937              		.loc 1 1424 11 is_stmt 0 view .LVU3961
 12938 18a0 DAF80020 		ldr	r2, [r10]
1424:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 12939              		.loc 1 1424 21 view .LVU3962
 12940 18a4 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
1424:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 12941              		.loc 1 1424 9 view .LVU3963
ARM GAS  /tmp/ccK8gYGY.s 			page 358


 12942 18a8 13F0060F 		tst	r3, #6
 12943 18ac 06D1     		bne	.L1081
1425:src/keys.c    ****        stack_begin (1);
 12944              		.loc 1 1425 8 is_stmt 1 view .LVU3964
 12945 18ae 43F00203 		orr	r3, r3, #2
 12946 18b2 82F8AC37 		strb	r3, [r2, #1964]
1426:src/keys.c    ****      }
 12947              		.loc 1 1426 8 view .LVU3965
 12948 18b6 0120     		movs	r0, #1
 12949 18b8 FFF7FEFF 		bl	stack_begin
 12950              	.LVL1105:
1428:src/keys.c    ****    case (K22): // CHS
 12951              		.loc 1 1428 6 view .LVU3966
 12952              	.L1081:
1440:src/keys.c    ****    case (K_CMPLX):
 12953              		.loc 1 1440 6 view .LVU3967
1440:src/keys.c    ****    case (K_CMPLX):
 12954              		.loc 1 1440 13 is_stmt 0 view .LVU3968
 12955 18bc 2046     		mov	r0, r4
 12956 18be FEF70ABD 		b	.L1305
 12957              	.L1078:
1457:src/keys.c    ****    }
 12958              		.loc 1 1457 12 is_stmt 1 view .LVU3969
1459:src/keys.c    ****    return process_cmplx(c);
 12959              		.loc 1 1459 4 view .LVU3970
 12960 18c2 0020     		movs	r0, #0
 12961 18c4 FFF7FEFF 		bl	finish_cpx_entry
 12962              	.LVL1106:
1460:src/keys.c    **** 
 12963              		.loc 1 1460 4 view .LVU3971
1460:src/keys.c    **** 
 12964              		.loc 1 1460 11 is_stmt 0 view .LVU3972
 12965 18c8 2046     		mov	r0, r4
 12966 18ca FFF7FEFF 		bl	process_cmplx
 12967              	.LVL1107:
 12968 18ce 0446     		mov	r4, r0
 12969              	.LVL1108:
1460:src/keys.c    **** 
 12970              		.loc 1 1460 11 view .LVU3973
 12971 18d0 FEF786BD 		b	.L840
 12972              	.LVL1109:
 12973              	.L1300:
1331:src/keys.c    ****      switch (c) {
 12974              		.loc 1 1331 6 is_stmt 1 view .LVU3974
 12975 18d4 0020     		movs	r0, #0
 12976 18d6 FFF7FEFF 		bl	finish_cpx_entry
 12977              	.LVL1110:
1332:src/keys.c    ****      case (K60):
 12978              		.loc 1 1332 6 view .LVU3975
 12979 18da A4F10D03 		sub	r3, r4, #13
 12980 18de 192B     		cmp	r3, #25
 12981 18e0 3FF6F7AC 		bhi	.L1308
 12982 18e4 01A2     		adr	r2, .L1054
 12983 18e6 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 12984 18ea 00BF     		.p2align 2
 12985              	.L1054:
 12986 18ec 2F1B0000 		.word	.L1061+1
ARM GAS  /tmp/ccK8gYGY.s 			page 359


 12987 18f0 031B0000 		.word	.L1060+1
 12988 18f4 D3120000 		.word	.L1308+1
 12989 18f8 B11A0000 		.word	.L1059+1
 12990 18fc D3120000 		.word	.L1308+1
 12991 1900 D3120000 		.word	.L1308+1
 12992 1904 D3120000 		.word	.L1308+1
 12993 1908 D3120000 		.word	.L1308+1
 12994 190c D3120000 		.word	.L1308+1
 12995 1910 9F1A0000 		.word	.L1058+1
 12996 1914 D3120000 		.word	.L1308+1
 12997 1918 911B0000 		.word	.L1057+1
 12998 191c D3120000 		.word	.L1308+1
 12999 1920 D3120000 		.word	.L1308+1
 13000 1924 D3120000 		.word	.L1308+1
 13001 1928 731B0000 		.word	.L1056+1
 13002 192c D3120000 		.word	.L1308+1
 13003 1930 D3120000 		.word	.L1308+1
 13004 1934 D3120000 		.word	.L1308+1
 13005 1938 D3120000 		.word	.L1308+1
 13006 193c D3120000 		.word	.L1308+1
 13007 1940 D3120000 		.word	.L1308+1
 13008 1944 D3120000 		.word	.L1308+1
 13009 1948 251A0000 		.word	.L1055+1
 13010 194c D3120000 		.word	.L1308+1
 13011 1950 FD190000 		.word	.L1053+1
 13012              		.p2align 1
 13013              	.L1079:
1442:src/keys.c    ****        CLEAR_REAL;
 13014              		.loc 1 1442 6 view .LVU3976
1442:src/keys.c    ****        CLEAR_REAL;
 13015              		.loc 1 1442 10 is_stmt 0 view .LVU3977
 13016 1954 DAF80020 		ldr	r2, [r10]
 13017 1958 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
1442:src/keys.c    ****        CLEAR_REAL;
 13018              		.loc 1 1442 9 view .LVU3978
 13019 195c 9807     		lsls	r0, r3, #30
 13020 195e 13D4     		bmi	.L1398
1449:src/keys.c    ****        finish_cpx_entry (1);
 13021              		.loc 1 1449 11 is_stmt 1 view .LVU3979
1449:src/keys.c    ****        finish_cpx_entry (1);
 13022              		.loc 1 1449 14 is_stmt 0 view .LVU3980
 13023 1960 5907     		lsls	r1, r3, #29
 13024 1962 06D5     		bpl	.L1088
1450:src/keys.c    ****      }
 13025              		.loc 1 1450 8 is_stmt 1 view .LVU3981
 13026 1964 0120     		movs	r0, #1
 13027 1966 FFF7FEFF 		bl	finish_cpx_entry
 13028              	.LVL1111:
1456:src/keys.c    ****    default:;
 13029              		.loc 1 1456 13 is_stmt 0 view .LVU3982
 13030 196a 3324     		movs	r4, #51
 13031              	.LVL1112:
1456:src/keys.c    ****    default:;
 13032              		.loc 1 1456 13 view .LVU3983
 13033 196c 3368     		ldr	r3, [r6]
 13034 196e FEF7A2BB 		b	.L806
 13035              	.LVL1113:
ARM GAS  /tmp/ccK8gYGY.s 			page 360


 13036              	.L1088:
1453:src/keys.c    ****        stack_begin (1);
 13037              		.loc 1 1453 8 is_stmt 1 view .LVU3984
 13038 1972 43F00403 		orr	r3, r3, #4
 13039 1976 82F8AC37 		strb	r3, [r2, #1964]
1454:src/keys.c    ****      }
 13040              		.loc 1 1454 8 view .LVU3985
 13041 197a 0120     		movs	r0, #1
 13042 197c FFF7FEFF 		bl	stack_begin
 13043              	.LVL1114:
1456:src/keys.c    ****    default:;
 13044              		.loc 1 1456 13 is_stmt 0 view .LVU3986
 13045 1980 3324     		movs	r4, #51
 13046              	.LVL1115:
1456:src/keys.c    ****    default:;
 13047              		.loc 1 1456 13 view .LVU3987
 13048 1982 3368     		ldr	r3, [r6]
 13049 1984 FEF797BB 		b	.L806
 13050              	.LVL1116:
 13051              	.L1398:
1443:src/keys.c    ****        SET_IMAG;
 13052              		.loc 1 1443 8 is_stmt 1 view .LVU3988
1444:src/keys.c    ****        do_command_line();
 13053              		.loc 1 1444 8 view .LVU3989
1443:src/keys.c    ****        SET_IMAG;
 13054              		.loc 1 1443 8 is_stmt 0 view .LVU3990
 13055 1988 23F00603 		bic	r3, r3, #6
 13056              	.LBB873:
 13057              	.LBB874:
1201:src/keys.c    **** 		State2.state_lift = 0;
 13058              		.loc 1 1201 5 view .LVU3991
 13059 198c 98F81C10 		ldrb	r1, [r8, #28]	@ zero_extendqisi2
 13060              	.LBE874:
 13061              	.LBE873:
1443:src/keys.c    ****        SET_IMAG;
 13062              		.loc 1 1443 8 view .LVU3992
 13063 1990 43F00403 		orr	r3, r3, #4
 13064 1994 82F8AC37 		strb	r3, [r2, #1964]
1445:src/keys.c    ****        State2.state_lift = 0;
 13065              		.loc 1 1445 8 is_stmt 1 view .LVU3993
 13066              	.LBB877:
 13067              	.LBI873:
1200:src/keys.c    **** 	if (CmdLineLength) {
 13068              		.loc 1 1200 13 view .LVU3994
 13069              	.LBB875:
1201:src/keys.c    **** 		State2.state_lift = 0;
 13070              		.loc 1 1201 2 view .LVU3995
1201:src/keys.c    **** 		State2.state_lift = 0;
 13071              		.loc 1 1201 5 is_stmt 0 view .LVU3996
 13072 1998 09BB     		cbnz	r1, .L1399
 13073              	.L1087:
 13074              	.LBE875:
 13075              	.LBE877:
1446:src/keys.c    ****        swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 13076              		.loc 1 1446 8 is_stmt 1 view .LVU3997
1446:src/keys.c    ****        swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 13077              		.loc 1 1446 26 is_stmt 0 view .LVU3998
ARM GAS  /tmp/ccK8gYGY.s 			page 361


 13078 199a 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
1447:src/keys.c    ****      }
 13079              		.loc 1 1447 8 view .LVU3999
 13080 199e 6420     		movs	r0, #100
1446:src/keys.c    ****        swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 13081              		.loc 1 1446 26 view .LVU4000
 13082 19a0 6FF38613 		bfc	r3, #6, #1
 13083 19a4 88F81730 		strb	r3, [r8, #23]
1447:src/keys.c    ****      }
 13084              		.loc 1 1447 8 is_stmt 1 view .LVU4001
 13085 19a8 FFF7FEFF 		bl	get_reg_n
 13086              	.LVL1117:
 13087 19ac 0446     		mov	r4, r0
 13088              	.LVL1118:
1447:src/keys.c    ****      }
 13089              		.loc 1 1447 8 is_stmt 0 view .LVU4002
 13090 19ae 6520     		movs	r0, #101
 13091 19b0 FFF7FEFF 		bl	get_reg_n
 13092              	.LVL1119:
 13093 19b4 0146     		mov	r1, r0
 13094 19b6 2046     		mov	r0, r4
 13095 19b8 FFF7FEFF 		bl	swap_reg
 13096              	.LVL1120:
1456:src/keys.c    ****    default:;
 13097              		.loc 1 1456 13 view .LVU4003
 13098 19bc 3324     		movs	r4, #51
 13099 19be 3368     		ldr	r3, [r6]
 13100 19c0 FEF779BB 		b	.L806
 13101              	.LVL1121:
 13102              	.L943:
1456:src/keys.c    ****    default:;
 13103              		.loc 1 1456 13 view .LVU4004
 13104              	.LBE958:
 13105              	.LBE1375:
 13106              	.LBB1376:
 13107              	.LBB1157:
2840:src/keys.c    **** 			return STATE_UNFINISHED;
 13108              		.loc 1 2840 5 is_stmt 1 view .LVU4005
2840:src/keys.c    **** 			return STATE_UNFINISHED;
 13109              		.loc 1 2840 20 is_stmt 0 view .LVU4006
 13110 19c4 013A     		subs	r2, r2, #1
 13111 19c6 3368     		ldr	r3, [r6]
 13112 19c8 88F80B20 		strb	r2, [r8, #11]
2841:src/keys.c    **** 		}
 13113              		.loc 1 2841 11 view .LVU4007
 13114 19cc 3324     		movs	r4, #51
 13115              	.LVL1122:
2841:src/keys.c    **** 		}
 13116              		.loc 1 2841 11 view .LVU4008
 13117 19ce FEF772BB 		b	.L806
 13118              	.LVL1123:
 13119              	.L1392:
2841:src/keys.c    **** 		}
 13120              		.loc 1 2841 11 view .LVU4009
 13121              	.LBE1157:
 13122              	.LBE1376:
 13123              	.LBB1377:
ARM GAS  /tmp/ccK8gYGY.s 			page 362


 13124              	.LBB1210:
3007:src/keys.c    **** 		State2.digval = pc;
 13125              		.loc 1 3007 4 is_stmt 1 view .LVU4010
3007:src/keys.c    **** 		State2.digval = pc;
 13126              		.loc 1 3007 9 is_stmt 0 view .LVU4011
 13127 19d2 2046     		mov	r0, r4
 13128 19d4 0121     		movs	r1, #1
 13129 19d6 FFF7FEFF 		bl	advance_to_next_label
 13130              	.LVL1124:
 13131 19da 0446     		mov	r4, r0
 13132              	.LVL1125:
3007:src/keys.c    **** 		State2.digval = pc;
 13133              		.loc 1 3007 9 view .LVU4012
 13134 19dc 83E6     		b	.L954
 13135              	.LVL1126:
 13136              	.L1399:
3007:src/keys.c    **** 		State2.digval = pc;
 13137              		.loc 1 3007 9 view .LVU4013
 13138              	.LBE1210:
 13139              	.LBE1377:
 13140              	.LBB1378:
 13141              	.LBB959:
 13142              	.LBB878:
 13143              	.LBB876:
1202:src/keys.c    **** 		process_cmdline();
 13144              		.loc 1 1202 3 is_stmt 1 view .LVU4014
1202:src/keys.c    **** 		process_cmdline();
 13145              		.loc 1 1202 21 is_stmt 0 view .LVU4015
 13146 19de 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
 13147 19e2 6FF38613 		bfc	r3, #6, #1
 13148 19e6 88F81730 		strb	r3, [r8, #23]
1203:src/keys.c    **** 	}
 13149              		.loc 1 1203 3 is_stmt 1 view .LVU4016
 13150 19ea FFF7FEFF 		bl	process_cmdline
 13151              	.LVL1127:
 13152 19ee D4E7     		b	.L1087
 13153              	.L1419:
 13154              		.align	2
 13155              	.L1418:
 13156 19f0 00000000 		.word	.LANCHOR17
 13157 19f4 00000000 		.word	NonProgrammable
 13158 19f8 00000000 		.word	main_ram
 13159              	.L1053:
1203:src/keys.c    **** 	}
 13160              		.loc 1 1203 3 is_stmt 0 view .LVU4017
 13161              	.LBE876:
 13162              	.LBE878:
1369:src/keys.c    ****        if (shift == SHIFT_F) {
 13163              		.loc 1 1369 8 is_stmt 1 view .LVU4018
 13164              	.LBB879:
 13165              	.LBI879:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13166              		.loc 1 114 13 view .LVU4019
 13167              	.LBE879:
 13168              	.LBE959:
 13169              	.LBE1378:
 13170              	.LBE1437:
ARM GAS  /tmp/ccK8gYGY.s 			page 363


 13171              	.LBE1510:
 115:src/keys.c    **** }
 13172              		.loc 1 115 2 view .LVU4020
 13173              	.LVL1128:
 13174              	.LBB1511:
 13175              	.LBB1438:
 13176              	.LBB1379:
 13177              	.LBB960:
 13178              	.LBB886:
 13179              	.LBB880:
 13180              	.LBI880:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13181              		.loc 1 104 20 view .LVU4021
 13182              	.LBB881:
 105:src/keys.c    **** 	State2.shifts = shift;
 13183              		.loc 1 105 2 view .LVU4022
 13184              	.LBB882:
 13185              	.LBI882:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13186              		.loc 1 96 13 view .LVU4023
 13187              	.LBB883:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13188              		.loc 1 97 2 view .LVU4024
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13189              		.loc 1 97 18 is_stmt 0 view .LVU4025
 13190 19fc FFF7FEFF 		bl	shift_down
 13191              	.LVL1129:
  98:src/keys.c    **** }
 13192              		.loc 1 98 2 is_stmt 1 view .LVU4026
 13193              	.LBE883:
 13194              	.LBE882:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13195              		.loc 1 106 2 view .LVU4027
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13196              		.loc 1 106 16 is_stmt 0 view .LVU4028
 13197 1a00 0023     		movs	r3, #0
 13198              	.LBE881:
 13199              	.LBE880:
 13200              	.LBE886:
1370:src/keys.c    **** 	 return OP_NIL | OP_C_IM;
 13201              		.loc 1 1370 11 view .LVU4029
 13202 1a02 BBF1010F 		cmp	fp, #1
 13203              	.LBB887:
 13204              	.LBB885:
 13205              	.LBB884:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13206              		.loc 1 106 16 view .LVU4030
 13207 1a06 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13208              		.loc 1 108 2 is_stmt 1 view .LVU4031
 13209              	.LVL1130:
 108:src/keys.c    **** }
 13210              		.loc 1 108 2 is_stmt 0 view .LVU4032
 13211              	.LBE884:
 13212              	.LBE885:
 13213              	.LBE887:
1370:src/keys.c    **** 	 return OP_NIL | OP_C_IM;
ARM GAS  /tmp/ccK8gYGY.s 			page 364


 13214              		.loc 1 1370 8 is_stmt 1 view .LVU4033
1370:src/keys.c    **** 	 return OP_NIL | OP_C_IM;
 13215              		.loc 1 1370 11 is_stmt 0 view .LVU4034
 13216 1a0a 38D0     		beq	.L1072
1373:src/keys.c    **** 	 return OP_NIL | OP_C_RE;
 13217              		.loc 1 1373 13 is_stmt 1 view .LVU4035
1373:src/keys.c    **** 	 return OP_NIL | OP_C_RE;
 13218              		.loc 1 1373 16 is_stmt 0 view .LVU4036
 13219 1a0c BBF1020F 		cmp	fp, #2
 13220 1a10 2BD0     		beq	.L1400
 13221              	.L1068:
1407:src/keys.c    ****      return STATE_UNFINISHED;
 13222              		.loc 1 1407 6 is_stmt 1 view .LVU4037
 13223              	.LBB888:
 13224              	.LBI888:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13225              		.loc 1 114 13 view .LVU4038
 13226              	.LBE888:
 13227              	.LBE960:
 13228              	.LBE1379:
 13229              	.LBE1438:
 13230              	.LBE1511:
 115:src/keys.c    **** }
 13231              		.loc 1 115 2 view .LVU4039
 13232              	.LVL1131:
 13233              	.LBB1512:
 13234              	.LBB1439:
 13235              	.LBB1380:
 13236              	.LBB961:
 13237              	.LBB893:
 13238              	.LBB889:
 13239              	.LBI889:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13240              		.loc 1 104 20 view .LVU4040
 13241              	.LBB890:
 105:src/keys.c    **** 	State2.shifts = shift;
 13242              		.loc 1 105 2 view .LVU4041
 13243              	.LBB891:
 13244              	.LBI891:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13245              		.loc 1 96 13 view .LVU4042
 13246              	.LBB892:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13247              		.loc 1 97 2 view .LVU4043
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13248              		.loc 1 97 18 is_stmt 0 view .LVU4044
 13249 1a12 FFF7FEFF 		bl	shift_down
 13250              	.LVL1132:
  98:src/keys.c    **** }
 13251              		.loc 1 98 2 is_stmt 1 view .LVU4045
 13252              	.LBE892:
 13253              	.LBE891:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13254              		.loc 1 106 2 view .LVU4046
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13255              		.loc 1 106 16 is_stmt 0 view .LVU4047
 13256 1a16 0022     		movs	r2, #0
ARM GAS  /tmp/ccK8gYGY.s 			page 365


 13257 1a18 3368     		ldr	r3, [r6]
 13258 1a1a 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 13259              		.loc 1 108 2 is_stmt 1 view .LVU4048
 13260              	.LVL1133:
 108:src/keys.c    **** }
 13261              		.loc 1 108 2 is_stmt 0 view .LVU4049
 13262              	.LBE890:
 13263              	.LBE889:
 13264              	.LBE893:
1408:src/keys.c    ****    }
 13265              		.loc 1 1408 6 is_stmt 1 view .LVU4050
1408:src/keys.c    ****    }
 13266              		.loc 1 1408 13 is_stmt 0 view .LVU4051
 13267 1a1e 3324     		movs	r4, #51
 13268              	.LVL1134:
1408:src/keys.c    ****    }
 13269              		.loc 1 1408 13 view .LVU4052
 13270 1a20 FEF749BB 		b	.L806
 13271              	.LVL1135:
 13272              	.L1055:
1334:src/keys.c    ****        if (shift == SHIFT_H) return (OP_NIL | OP_OFF);
 13273              		.loc 1 1334 8 is_stmt 1 view .LVU4053
 13274              	.LBB894:
 13275              	.LBI894:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13276              		.loc 1 114 13 view .LVU4054
 13277              	.LBE894:
 13278              	.LBE961:
 13279              	.LBE1380:
 13280              	.LBE1439:
 13281              	.LBE1512:
 115:src/keys.c    **** }
 13282              		.loc 1 115 2 view .LVU4055
 13283              	.LBB1513:
 13284              	.LBB1440:
 13285              	.LBB1381:
 13286              	.LBB962:
 13287              	.LBB901:
 13288              	.LBB895:
 13289              	.LBI895:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13290              		.loc 1 104 20 view .LVU4056
 13291              	.LBB896:
 105:src/keys.c    **** 	State2.shifts = shift;
 13292              		.loc 1 105 2 view .LVU4057
 13293              	.LBB897:
 13294              	.LBI897:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13295              		.loc 1 96 13 view .LVU4058
 13296              	.LBB898:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13297              		.loc 1 97 2 view .LVU4059
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13298              		.loc 1 97 18 is_stmt 0 view .LVU4060
 13299 1a24 FFF7FEFF 		bl	shift_down
 13300              	.LVL1136:
ARM GAS  /tmp/ccK8gYGY.s 			page 366


  98:src/keys.c    **** }
 13301              		.loc 1 98 2 is_stmt 1 view .LVU4061
 13302              	.LBE898:
 13303              	.LBE897:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13304              		.loc 1 106 2 view .LVU4062
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13305              		.loc 1 106 16 is_stmt 0 view .LVU4063
 13306 1a28 0023     		movs	r3, #0
 13307              	.LBE896:
 13308              	.LBE895:
 13309              	.LBE901:
1335:src/keys.c    ****      case (K21): // x<->y key
 13310              		.loc 1 1335 11 view .LVU4064
 13311 1a2a BBF1030F 		cmp	fp, #3
 13312              	.LBB902:
 13313              	.LBB900:
 13314              	.LBB899:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13315              		.loc 1 106 16 view .LVU4065
 13316 1a2e 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13317              		.loc 1 108 2 is_stmt 1 view .LVU4066
 13318              	.LVL1137:
 108:src/keys.c    **** }
 13319              		.loc 1 108 2 is_stmt 0 view .LVU4067
 13320              	.LBE899:
 13321              	.LBE900:
 13322              	.LBE902:
1335:src/keys.c    ****      case (K21): // x<->y key
 13323              		.loc 1 1335 8 is_stmt 1 view .LVU4068
1335:src/keys.c    ****      case (K21): // x<->y key
 13324              		.loc 1 1335 11 is_stmt 0 view .LVU4069
 13325 1a32 00F0D280 		beq	.L1401
1337:src/keys.c    **** 	 reset_shift();
 13326              		.loc 1 1337 8 is_stmt 1 view .LVU4070
1337:src/keys.c    **** 	 reset_shift();
 13327              		.loc 1 1337 29 is_stmt 0 view .LVU4071
 13328 1a36 0BF1FF33 		add	r3, fp, #-1
1337:src/keys.c    **** 	 reset_shift();
 13329              		.loc 1 1337 11 view .LVU4072
 13330 1a3a DBB2     		uxtb	r3, r3
 13331 1a3c 012B     		cmp	r3, #1
 13332 1a3e E8D8     		bhi	.L1068
 13333              	.L1122:
1338:src/keys.c    **** 	 CLEAR_POLAR_READY;
 13334              		.loc 1 1338 3 is_stmt 1 view .LVU4073
 13335              	.LBB903:
 13336              	.LBI903:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13337              		.loc 1 114 13 view .LVU4074
 13338              	.LBE903:
 13339              	.LBE962:
 13340              	.LBE1381:
 13341              	.LBE1440:
 13342              	.LBE1513:
 115:src/keys.c    **** }
ARM GAS  /tmp/ccK8gYGY.s 			page 367


 13343              		.loc 1 115 2 view .LVU4075
 13344              	.LVL1138:
 13345              	.LBB1514:
 13346              	.LBB1441:
 13347              	.LBB1382:
 13348              	.LBB963:
 13349              	.LBB910:
 13350              	.LBB904:
 13351              	.LBI904:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13352              		.loc 1 104 20 view .LVU4076
 13353              	.LBB905:
 105:src/keys.c    **** 	State2.shifts = shift;
 13354              		.loc 1 105 2 view .LVU4077
 13355              	.LBB906:
 13356              	.LBI906:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13357              		.loc 1 96 13 view .LVU4078
 13358              	.LBB907:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13359              		.loc 1 97 2 view .LVU4079
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13360              		.loc 1 97 18 is_stmt 0 view .LVU4080
 13361 1a40 FFF7FEFF 		bl	shift_down
 13362              	.LVL1139:
  98:src/keys.c    **** }
 13363              		.loc 1 98 2 is_stmt 1 view .LVU4081
 13364              	.LBE907:
 13365              	.LBE906:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13366              		.loc 1 106 2 view .LVU4082
 13367              	.LBE905:
 13368              	.LBE904:
 13369              	.LBE910:
1339:src/keys.c    **** 	 return RARG(RARG_SWAPX, regY_idx);
 13370              		.loc 1 1339 3 is_stmt 0 view .LVU4083
 13371 1a44 DAF80010 		ldr	r1, [r10]
 13372              	.LBB911:
 13373              	.LBB909:
 13374              	.LBB908:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13375              		.loc 1 106 16 view .LVU4084
 13376 1a48 0022     		movs	r2, #0
 13377 1a4a 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 13378              		.loc 1 108 2 is_stmt 1 view .LVU4085
 13379              	.LVL1140:
 108:src/keys.c    **** }
 13380              		.loc 1 108 2 is_stmt 0 view .LVU4086
 13381              	.LBE908:
 13382              	.LBE909:
 13383              	.LBE911:
1339:src/keys.c    **** 	 return RARG(RARG_SWAPX, regY_idx);
 13384              		.loc 1 1339 3 is_stmt 1 view .LVU4087
 13385 1a4e 91F8AD37 		ldrb	r3, [r1, #1965]	@ zero_extendqisi2
 13386 1a52 43F00103 		orr	r3, r3, #1
 13387 1a56 81F8AD37 		strb	r3, [r1, #1965]
ARM GAS  /tmp/ccK8gYGY.s 			page 368


1340:src/keys.c    ****        }
 13388              		.loc 1 1340 3 view .LVU4088
 13389              	.LVL1141:
1340:src/keys.c    ****        }
 13390              		.loc 1 1340 3 is_stmt 0 view .LVU4089
 13391              	.LBE963:
 13392              	.LBE1382:
 13393              	.LBE1441:
 13394              	.LBE1514:
3635:src/keys.c    **** 	NonProgrammable = 0;
 13395              		.loc 1 3635 7 is_stmt 1 view .LVU4090
3635:src/keys.c    **** 	NonProgrammable = 0;
 13396              		.loc 1 3635 11 is_stmt 0 view .LVU4091
 13397 1a5a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3635:src/keys.c    **** 	NonProgrammable = 0;
 13398              		.loc 1 3635 10 view .LVU4092
 13399 1a5e 5B06     		lsls	r3, r3, #25
 13400 1a60 00F19080 		bmi	.L1065
 13401              	.LBB1515:
 13402              	.LBB1442:
 13403              	.LBB1383:
 13404              	.LBB964:
1340:src/keys.c    ****        }
 13405              		.loc 1 1340 10 view .LVU4093
 13406 1a64 43F26514 		movw	r4, #12645
 13407 1a68 8DE6     		b	.L1049
 13408              	.LVL1142:
 13409              	.L1400:
1340:src/keys.c    ****        }
 13410              		.loc 1 1340 10 view .LVU4094
 13411              	.LBE964:
 13412              	.LBE1383:
 13413              	.LBE1442:
 13414              	.LBE1515:
3635:src/keys.c    **** 	NonProgrammable = 0;
 13415              		.loc 1 3635 7 is_stmt 1 view .LVU4095
3635:src/keys.c    **** 	NonProgrammable = 0;
 13416              		.loc 1 3635 11 is_stmt 0 view .LVU4096
 13417 1a6a 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3635:src/keys.c    **** 	NonProgrammable = 0;
 13418              		.loc 1 3635 10 view .LVU4097
 13419 1a6e 5106     		lsls	r1, r2, #25
 13420 1a70 0FD5     		bpl	.L1165
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13421              		.loc 1 3636 2 is_stmt 1 view .LVU4098
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13422              		.loc 1 3636 18 is_stmt 0 view .LVU4099
 13423 1a72 C14A     		ldr	r2, .L1420
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13424              		.loc 1 3637 32 view .LVU4100
 13425 1a74 40F2C510 		movw	r0, #453
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13426              		.loc 1 3636 18 view .LVU4101
 13427 1a78 1360     		str	r3, [r2]
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13428              		.loc 1 3637 2 is_stmt 1 view .LVU4102
 13429 1a7a FEF7EABD 		b	.L1106
ARM GAS  /tmp/ccK8gYGY.s 			page 369


 13430              	.LVL1143:
 13431              	.L1072:
3635:src/keys.c    **** 	NonProgrammable = 0;
 13432              		.loc 1 3635 7 view .LVU4103
3635:src/keys.c    **** 	NonProgrammable = 0;
 13433              		.loc 1 3635 11 is_stmt 0 view .LVU4104
 13434 1a7e 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3635:src/keys.c    **** 	NonProgrammable = 0;
 13435              		.loc 1 3635 10 view .LVU4105
 13436 1a82 5006     		lsls	r0, r2, #25
 13437 1a84 08D5     		bpl	.L1164
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13438              		.loc 1 3636 2 is_stmt 1 view .LVU4106
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13439              		.loc 1 3636 18 is_stmt 0 view .LVU4107
 13440 1a86 BC4A     		ldr	r2, .L1420
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13441              		.loc 1 3637 32 view .LVU4108
 13442 1a88 4FF4E370 		mov	r0, #454
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13443              		.loc 1 3636 18 view .LVU4109
 13444 1a8c 1360     		str	r3, [r2]
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13445              		.loc 1 3637 2 is_stmt 1 view .LVU4110
 13446 1a8e FEF7E0BD 		b	.L1106
 13447              	.LVL1144:
 13448              	.L1165:
 13449              	.LBB1516:
 13450              	.LBB1443:
 13451              	.LBB1384:
 13452              	.LBB965:
1374:src/keys.c    ****        }
 13453              		.loc 1 1374 10 is_stmt 0 view .LVU4111
 13454 1a92 40F2C514 		movw	r4, #453
 13455 1a96 76E6     		b	.L1049
 13456              	.LVL1145:
 13457              	.L1164:
1371:src/keys.c    ****        }
 13458              		.loc 1 1371 10 view .LVU4112
 13459 1a98 4FF4E374 		mov	r4, #454
 13460 1a9c 73E6     		b	.L1049
 13461              	.LVL1146:
 13462              	.L1058:
1385:src/keys.c    ****      case (K34): // divide key
 13463              		.loc 1 1385 8 is_stmt 1 view .LVU4113
1387:src/keys.c    **** 	 reset_shift();
 13464              		.loc 1 1387 8 view .LVU4114
1387:src/keys.c    **** 	 reset_shift();
 13465              		.loc 1 1387 11 is_stmt 0 view .LVU4115
 13466 1a9e BBF1030F 		cmp	fp, #3
 13467 1aa2 22D0     		beq	.L1402
1392:src/keys.c    ****        }
 13468              		.loc 1 1392 3 is_stmt 1 view .LVU4116
1392:src/keys.c    ****        }
 13469              		.loc 1 1392 10 is_stmt 0 view .LVU4117
 13470 1aa4 1620     		movs	r0, #22
 13471 1aa6 FFF7FEFF 		bl	process_cmplx
ARM GAS  /tmp/ccK8gYGY.s 			page 370


 13472              	.LVL1147:
 13473 1aaa 0446     		mov	r4, r0
 13474              	.LVL1148:
1392:src/keys.c    ****        }
 13475              		.loc 1 1392 10 view .LVU4118
 13476 1aac FEF798BC 		b	.L840
 13477              	.LVL1149:
 13478              	.L1059:
1394:src/keys.c    ****      case (K24): // <- key
 13479              		.loc 1 1394 8 is_stmt 1 view .LVU4119
1396:src/keys.c    ****        if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real pa
 13480              		.loc 1 1396 8 view .LVU4120
1396:src/keys.c    ****        if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real pa
 13481              		.loc 1 1396 12 is_stmt 0 view .LVU4121
 13482 1ab0 DAF80030 		ldr	r3, [r10]
1396:src/keys.c    ****        if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real pa
 13483              		.loc 1 1396 11 view .LVU4122
 13484 1ab4 93F9AC37 		ldrsb	r3, [r3, #1964]
 13485 1ab8 002B     		cmp	r3, #0
 13486 1aba AADB     		blt	.L1068
1397:src/keys.c    **** 	 zero_X ();
 13487              		.loc 1 1397 8 is_stmt 1 view .LVU4123
1397:src/keys.c    **** 	 zero_X ();
 13488              		.loc 1 1397 11 is_stmt 0 view .LVU4124
 13489 1abc BBF1030F 		cmp	fp, #3
 13490 1ac0 A7D1     		bne	.L1068
1398:src/keys.c    **** 	 State2.state_lift = 0;
 13491              		.loc 1 1398 3 is_stmt 1 view .LVU4125
 13492 1ac2 FFF7FEFF 		bl	zero_X
 13493              	.LVL1150:
1399:src/keys.c    **** 	 SET_REAL;
 13494              		.loc 1 1399 3 view .LVU4126
1399:src/keys.c    **** 	 SET_REAL;
 13495              		.loc 1 1399 21 is_stmt 0 view .LVU4127
 13496 1ac6 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
1400:src/keys.c    **** 	 stack_begin (0);
 13497              		.loc 1 1400 3 view .LVU4128
 13498 1aca DAF80020 		ldr	r2, [r10]
1399:src/keys.c    **** 	 SET_REAL;
 13499              		.loc 1 1399 21 view .LVU4129
 13500 1ace 6FF38613 		bfc	r3, #6, #1
 13501 1ad2 88F81730 		strb	r3, [r8, #23]
1400:src/keys.c    **** 	 stack_begin (0);
 13502              		.loc 1 1400 3 is_stmt 1 view .LVU4130
 13503 1ad6 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
 13504 1ada 43F00203 		orr	r3, r3, #2
 13505 1ade 82F8AC37 		strb	r3, [r2, #1964]
1401:src/keys.c    ****        }
 13506              		.loc 1 1401 3 view .LVU4131
 13507 1ae2 0020     		movs	r0, #0
 13508 1ae4 FFF7FEFF 		bl	stack_begin
 13509              	.LVL1151:
 13510 1ae8 93E7     		b	.L1068
 13511              	.L1402:
1388:src/keys.c    **** 	 return OP_CDYA | OP_CDOTDIV;
 13512              		.loc 1 1388 3 view .LVU4132
 13513              	.LBB912:
ARM GAS  /tmp/ccK8gYGY.s 			page 371


 13514              	.LBI912:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13515              		.loc 1 114 13 view .LVU4133
 13516              	.LBE912:
 13517              	.LBE965:
 13518              	.LBE1384:
 13519              	.LBE1443:
 13520              	.LBE1516:
 115:src/keys.c    **** }
 13521              		.loc 1 115 2 view .LVU4134
 13522              	.LVL1152:
 13523              	.LBB1517:
 13524              	.LBB1444:
 13525              	.LBB1385:
 13526              	.LBB966:
 13527              	.LBB921:
 13528              	.LBB913:
 13529              	.LBI913:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13530              		.loc 1 104 20 view .LVU4135
 13531              	.LBB914:
 105:src/keys.c    **** 	State2.shifts = shift;
 13532              		.loc 1 105 2 view .LVU4136
 13533              	.LBB915:
 13534              	.LBI915:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13535              		.loc 1 96 13 view .LVU4137
 13536              	.LBB916:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13537              		.loc 1 97 2 view .LVU4138
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13538              		.loc 1 97 18 is_stmt 0 view .LVU4139
 13539 1aea FFF7FEFF 		bl	shift_down
 13540              	.LVL1153:
  98:src/keys.c    **** }
 13541              		.loc 1 98 2 is_stmt 1 view .LVU4140
 13542              	.LBE916:
 13543              	.LBE915:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13544              		.loc 1 106 2 view .LVU4141
 13545              	.LBE914:
 13546              	.LBE913:
 13547              	.LBE921:
 13548              	.LBE966:
 13549              	.LBE1385:
 13550              	.LBE1444:
 13551              	.LBE1517:
3635:src/keys.c    **** 	NonProgrammable = 0;
 13552              		.loc 1 3635 11 is_stmt 0 view .LVU4142
 13553 1aee 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 13554              	.LBB1518:
 13555              	.LBB1445:
 13556              	.LBB1386:
 13557              	.LBB967:
 13558              	.LBB922:
 13559              	.LBB919:
 13560              	.LBB917:
ARM GAS  /tmp/ccK8gYGY.s 			page 372


 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13561              		.loc 1 106 16 view .LVU4143
 13562 1af2 0023     		movs	r3, #0
 13563              	.LBE917:
 13564              	.LBE919:
 13565              	.LBE922:
 13566              	.LBE967:
 13567              	.LBE1386:
 13568              	.LBE1445:
 13569              	.LBE1518:
3635:src/keys.c    **** 	NonProgrammable = 0;
 13570              		.loc 1 3635 10 view .LVU4144
 13571 1af4 5406     		lsls	r4, r2, #25
 13572              	.LVL1154:
 13573              	.LBB1519:
 13574              	.LBB1446:
 13575              	.LBB1387:
 13576              	.LBB968:
 13577              	.LBB923:
 13578              	.LBB920:
 13579              	.LBB918:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13580              		.loc 1 106 16 view .LVU4145
 13581 1af6 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13582              		.loc 1 108 2 is_stmt 1 view .LVU4146
 13583              	.LVL1155:
 108:src/keys.c    **** }
 13584              		.loc 1 108 2 is_stmt 0 view .LVU4147
 13585              	.LBE918:
 13586              	.LBE920:
 13587              	.LBE923:
1389:src/keys.c    ****        }
 13588              		.loc 1 1389 3 is_stmt 1 view .LVU4148
1389:src/keys.c    ****        }
 13589              		.loc 1 1389 3 is_stmt 0 view .LVU4149
 13590              	.LBE968:
 13591              	.LBE1387:
 13592              	.LBE1446:
 13593              	.LBE1519:
3635:src/keys.c    **** 	NonProgrammable = 0;
 13594              		.loc 1 3635 7 is_stmt 1 view .LVU4150
3635:src/keys.c    **** 	NonProgrammable = 0;
 13595              		.loc 1 3635 10 is_stmt 0 view .LVU4151
 13596 1afa 27D4     		bmi	.L1077
 13597              	.LBB1520:
 13598              	.LBB1447:
 13599              	.LBB1388:
 13600              	.LBB969:
1389:src/keys.c    ****        }
 13601              		.loc 1 1389 10 view .LVU4152
 13602 1afc 40F23464 		movw	r4, #1588
 13603 1b00 41E6     		b	.L1049
 13604              	.LVL1156:
 13605              	.L1060:
1360:src/keys.c    ****        if (shift == SHIFT_F ) {
 13606              		.loc 1 1360 8 is_stmt 1 view .LVU4153
ARM GAS  /tmp/ccK8gYGY.s 			page 373


 13607              	.LBB924:
 13608              	.LBI924:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13609              		.loc 1 114 13 view .LVU4154
 13610              	.LBE924:
 13611              	.LBE969:
 13612              	.LBE1388:
 13613              	.LBE1447:
 13614              	.LBE1520:
 115:src/keys.c    **** }
 13615              		.loc 1 115 2 view .LVU4155
 13616              	.LBB1521:
 13617              	.LBB1448:
 13618              	.LBB1389:
 13619              	.LBB970:
 13620              	.LBB931:
 13621              	.LBB925:
 13622              	.LBI925:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13623              		.loc 1 104 20 view .LVU4156
 13624              	.LBB926:
 105:src/keys.c    **** 	State2.shifts = shift;
 13625              		.loc 1 105 2 view .LVU4157
 13626              	.LBB927:
 13627              	.LBI927:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13628              		.loc 1 96 13 view .LVU4158
 13629              	.LBB928:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13630              		.loc 1 97 2 view .LVU4159
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13631              		.loc 1 97 18 is_stmt 0 view .LVU4160
 13632 1b02 FFF7FEFF 		bl	shift_down
 13633              	.LVL1157:
  98:src/keys.c    **** }
 13634              		.loc 1 98 2 is_stmt 1 view .LVU4161
 13635              	.LBE928:
 13636              	.LBE927:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13637              		.loc 1 106 2 view .LVU4162
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13638              		.loc 1 106 16 is_stmt 0 view .LVU4163
 13639 1b06 0023     		movs	r3, #0
 13640              	.LBE926:
 13641              	.LBE925:
 13642              	.LBE931:
1361:src/keys.c    **** 	 return OP_NIL | OP_C_MIM;
 13643              		.loc 1 1361 11 view .LVU4164
 13644 1b08 BBF1010F 		cmp	fp, #1
 13645              	.LBB932:
 13646              	.LBB930:
 13647              	.LBB929:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13648              		.loc 1 106 16 view .LVU4165
 13649 1b0c 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13650              		.loc 1 108 2 is_stmt 1 view .LVU4166
ARM GAS  /tmp/ccK8gYGY.s 			page 374


 13651              	.LVL1158:
 108:src/keys.c    **** }
 13652              		.loc 1 108 2 is_stmt 0 view .LVU4167
 13653              	.LBE929:
 13654              	.LBE930:
 13655              	.LBE932:
1361:src/keys.c    **** 	 return OP_NIL | OP_C_MIM;
 13656              		.loc 1 1361 8 is_stmt 1 view .LVU4168
1361:src/keys.c    **** 	 return OP_NIL | OP_C_MIM;
 13657              		.loc 1 1361 11 is_stmt 0 view .LVU4169
 13658 1b10 25D0     		beq	.L1070
1364:src/keys.c    **** 	 return OP_NIL | OP_C_MRE;
 13659              		.loc 1 1364 13 is_stmt 1 view .LVU4170
1364:src/keys.c    **** 	 return OP_NIL | OP_C_MRE;
 13660              		.loc 1 1364 16 is_stmt 0 view .LVU4171
 13661 1b12 BBF1030F 		cmp	fp, #3
 13662 1b16 7FF47CAF 		bne	.L1068
 13663              	.LVL1159:
1364:src/keys.c    **** 	 return OP_NIL | OP_C_MRE;
 13664              		.loc 1 1364 16 view .LVU4172
 13665              	.LBE970:
 13666              	.LBE1389:
 13667              	.LBE1448:
 13668              	.LBE1521:
3635:src/keys.c    **** 	NonProgrammable = 0;
 13669              		.loc 1 3635 7 is_stmt 1 view .LVU4173
3635:src/keys.c    **** 	NonProgrammable = 0;
 13670              		.loc 1 3635 11 is_stmt 0 view .LVU4174
 13671 1b1a 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3635:src/keys.c    **** 	NonProgrammable = 0;
 13672              		.loc 1 3635 10 view .LVU4175
 13673 1b1e 5406     		lsls	r4, r2, #25
 13674 1b20 1AD5     		bpl	.L1163
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13675              		.loc 1 3636 2 is_stmt 1 view .LVU4176
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13676              		.loc 1 3636 18 is_stmt 0 view .LVU4177
 13677 1b22 954A     		ldr	r2, .L1420
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13678              		.loc 1 3637 32 view .LVU4178
 13679 1b24 4FF4E270 		mov	r0, #452
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13680              		.loc 1 3636 18 view .LVU4179
 13681 1b28 1360     		str	r3, [r2]
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13682              		.loc 1 3637 2 is_stmt 1 view .LVU4180
 13683 1b2a FEF792BD 		b	.L1106
 13684              	.LVL1160:
 13685              	.L1061:
 13686              	.LBB1522:
 13687              	.LBB1449:
 13688              	.LBB1390:
 13689              	.LBB971:
1337:src/keys.c    **** 	 reset_shift();
 13690              		.loc 1 1337 8 view .LVU4181
1337:src/keys.c    **** 	 reset_shift();
 13691              		.loc 1 1337 29 is_stmt 0 view .LVU4182
ARM GAS  /tmp/ccK8gYGY.s 			page 375


 13692 1b2e 0BF1FF33 		add	r3, fp, #-1
1337:src/keys.c    **** 	 reset_shift();
 13693              		.loc 1 1337 11 view .LVU4183
 13694 1b32 DBB2     		uxtb	r3, r3
 13695 1b34 012B     		cmp	r3, #1
 13696 1b36 83D9     		bls	.L1122
1342:src/keys.c    **** 	 return process_cmplx(c); // complex exchange of (x,y) with register
 13697              		.loc 1 1342 13 is_stmt 1 view .LVU4184
1342:src/keys.c    **** 	 return process_cmplx(c); // complex exchange of (x,y) with register
 13698              		.loc 1 1342 16 is_stmt 0 view .LVU4185
 13699 1b38 BBF1030F 		cmp	fp, #3
 13700 1b3c 7FF469AF 		bne	.L1068
1343:src/keys.c    ****        }
 13701              		.loc 1 1343 3 is_stmt 1 view .LVU4186
1343:src/keys.c    ****        }
 13702              		.loc 1 1343 10 is_stmt 0 view .LVU4187
 13703 1b40 0D20     		movs	r0, #13
 13704 1b42 FFF7FEFF 		bl	process_cmplx
 13705              	.LVL1161:
 13706 1b46 0446     		mov	r4, r0
 13707              	.LVL1162:
1343:src/keys.c    ****        }
 13708              		.loc 1 1343 10 view .LVU4188
 13709 1b48 FEF74ABC 		b	.L840
 13710              	.LVL1163:
 13711              	.L1077:
1343:src/keys.c    ****        }
 13712              		.loc 1 1343 10 view .LVU4189
 13713              	.LBE971:
 13714              	.LBE1390:
 13715              	.LBE1449:
 13716              	.LBE1522:
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13717              		.loc 1 3636 2 is_stmt 1 view .LVU4190
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13718              		.loc 1 3636 18 is_stmt 0 view .LVU4191
 13719 1b4c 8A4A     		ldr	r2, .L1420
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13720              		.loc 1 3637 32 view .LVU4192
 13721 1b4e 40F23460 		movw	r0, #1588
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13722              		.loc 1 3636 18 view .LVU4193
 13723 1b52 1360     		str	r3, [r2]
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13724              		.loc 1 3637 2 is_stmt 1 view .LVU4194
 13725 1b54 FEF77DBD 		b	.L1106
 13726              	.LVL1164:
 13727              	.L1163:
 13728              	.LBB1523:
 13729              	.LBB1450:
 13730              	.LBB1391:
 13731              	.LBB972:
1365:src/keys.c    ****        }
 13732              		.loc 1 1365 10 is_stmt 0 view .LVU4195
 13733 1b58 4FF4E274 		mov	r4, #452
 13734 1b5c 13E6     		b	.L1049
 13735              	.LVL1165:
ARM GAS  /tmp/ccK8gYGY.s 			page 376


 13736              	.L1070:
1365:src/keys.c    ****        }
 13737              		.loc 1 1365 10 view .LVU4196
 13738              	.LBE972:
 13739              	.LBE1391:
 13740              	.LBE1450:
 13741              	.LBE1523:
3635:src/keys.c    **** 	NonProgrammable = 0;
 13742              		.loc 1 3635 7 is_stmt 1 view .LVU4197
3635:src/keys.c    **** 	NonProgrammable = 0;
 13743              		.loc 1 3635 11 is_stmt 0 view .LVU4198
 13744 1b5e 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3635:src/keys.c    **** 	NonProgrammable = 0;
 13745              		.loc 1 3635 10 view .LVU4199
 13746 1b62 5506     		lsls	r5, r2, #25
 13747 1b64 24D5     		bpl	.L1162
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13748              		.loc 1 3636 2 is_stmt 1 view .LVU4200
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13749              		.loc 1 3636 18 is_stmt 0 view .LVU4201
 13750 1b66 844A     		ldr	r2, .L1420
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13751              		.loc 1 3637 32 view .LVU4202
 13752 1b68 40F2C310 		movw	r0, #451
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13753              		.loc 1 3636 18 view .LVU4203
 13754 1b6c 1360     		str	r3, [r2]
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13755              		.loc 1 3637 2 is_stmt 1 view .LVU4204
 13756 1b6e FEF770BD 		b	.L1106
 13757              	.LVL1166:
 13758              	.L1056:
 13759              	.LBB1524:
 13760              	.LBB1451:
 13761              	.LBB1392:
 13762              	.LBB973:
1378:src/keys.c    **** 	 reset_shift();
 13763              		.loc 1 1378 8 view .LVU4205
1378:src/keys.c    **** 	 reset_shift();
 13764              		.loc 1 1378 11 is_stmt 0 view .LVU4206
 13765 1b72 BBF1030F 		cmp	fp, #3
 13766 1b76 37D0     		beq	.L1403
1383:src/keys.c    ****        }
 13767              		.loc 1 1383 3 is_stmt 1 view .LVU4207
1383:src/keys.c    ****        }
 13768              		.loc 1 1383 10 is_stmt 0 view .LVU4208
 13769 1b78 1C20     		movs	r0, #28
 13770 1b7a FFF7FEFF 		bl	process_cmplx
 13771              	.LVL1167:
 13772 1b7e 0446     		mov	r4, r0
 13773              	.LVL1168:
1383:src/keys.c    ****        }
 13774              		.loc 1 1383 10 view .LVU4209
 13775 1b80 FEF72EBC 		b	.L840
 13776              	.LVL1169:
 13777              	.L1065:
1383:src/keys.c    ****        }
ARM GAS  /tmp/ccK8gYGY.s 			page 377


 13778              		.loc 1 1383 10 view .LVU4210
 13779              	.LBE973:
 13780              	.LBE1392:
 13781              	.LBE1451:
 13782              	.LBE1524:
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13783              		.loc 1 3636 2 is_stmt 1 view .LVU4211
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13784              		.loc 1 3636 18 is_stmt 0 view .LVU4212
 13785 1b84 7C4B     		ldr	r3, .L1420
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13786              		.loc 1 3637 32 view .LVU4213
 13787 1b86 43F26510 		movw	r0, #12645
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13788              		.loc 1 3636 18 view .LVU4214
 13789 1b8a 1A60     		str	r2, [r3]
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13790              		.loc 1 3637 2 is_stmt 1 view .LVU4215
 13791 1b8c FEF761BD 		b	.L1106
 13792              	.LVL1170:
 13793              	.L1057:
 13794              	.LBB1525:
 13795              	.LBB1452:
 13796              	.LBB1393:
 13797              	.LBB974:
1347:src/keys.c    **** 	 SET_RECTANGULAR_DISPLAY;
 13798              		.loc 1 1347 8 view .LVU4216
1347:src/keys.c    **** 	 SET_RECTANGULAR_DISPLAY;
 13799              		.loc 1 1347 11 is_stmt 0 view .LVU4217
 13800 1b90 BBF1010F 		cmp	fp, #1
 13801 1b94 18D0     		beq	.L1404
1350:src/keys.c    **** 	 SET_POLAR_DISPLAY;
 13802              		.loc 1 1350 13 is_stmt 1 view .LVU4218
1350:src/keys.c    **** 	 SET_POLAR_DISPLAY;
 13803              		.loc 1 1350 16 is_stmt 0 view .LVU4219
 13804 1b96 BBF1020F 		cmp	fp, #2
 13805 1b9a 0CD0     		beq	.L1405
1355:src/keys.c    **** 	 return process_cmplx (c);
 13806              		.loc 1 1355 13 is_stmt 1 view .LVU4220
1355:src/keys.c    **** 	 return process_cmplx (c);
 13807              		.loc 1 1355 16 is_stmt 0 view .LVU4221
 13808 1b9c BBF1030F 		cmp	fp, #3
 13809 1ba0 7FF437AF 		bne	.L1068
1356:src/keys.c    ****        }
 13810              		.loc 1 1356 3 is_stmt 1 view .LVU4222
1356:src/keys.c    ****        }
 13811              		.loc 1 1356 10 is_stmt 0 view .LVU4223
 13812 1ba4 1820     		movs	r0, #24
 13813 1ba6 FFF7FEFF 		bl	process_cmplx
 13814              	.LVL1171:
 13815 1baa 0446     		mov	r4, r0
 13816              	.LVL1172:
1356:src/keys.c    ****        }
 13817              		.loc 1 1356 10 view .LVU4224
 13818 1bac FEF718BC 		b	.L840
 13819              	.LVL1173:
 13820              	.L1162:
ARM GAS  /tmp/ccK8gYGY.s 			page 378


1362:src/keys.c    ****        }
 13821              		.loc 1 1362 10 view .LVU4225
 13822 1bb0 40F2C314 		movw	r4, #451
 13823 1bb4 E7E5     		b	.L1049
 13824              	.LVL1174:
 13825              	.L1405:
1351:src/keys.c    **** 	 CLEAR_POLAR_READY;
 13826              		.loc 1 1351 3 is_stmt 1 view .LVU4226
 13827 1bb6 DAF80020 		ldr	r2, [r10]
1352:src/keys.c    **** 	 update_speed(0); // new polar display calculated from keyboard needs a speed boost
 13828              		.loc 1 1352 3 view .LVU4227
1351:src/keys.c    **** 	 CLEAR_POLAR_READY;
 13829              		.loc 1 1351 3 is_stmt 0 view .LVU4228
 13830 1bba B2F8AC37 		ldrh	r3, [r2, #1964]
 13831 1bbe 43F4C073 		orr	r3, r3, #384
 13832 1bc2 A2F8AC37 		strh	r3, [r2, #1964]	@ movhi
1353:src/keys.c    ****        }
 13833              		.loc 1 1353 18 is_stmt 1 view .LVU4229
 13834 1bc6 24E7     		b	.L1068
 13835              	.L1404:
1348:src/keys.c    ****        }
 13836              		.loc 1 1348 3 view .LVU4230
 13837 1bc8 DAF80030 		ldr	r3, [r10]
 13838 1bcc 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
 13839 1bd0 6FF3C712 		bfc	r2, #7, #1
 13840 1bd4 83F8AC27 		strb	r2, [r3, #1964]
 13841 1bd8 1BE7     		b	.L1068
 13842              	.L1401:
 13843              	.LVL1175:
1348:src/keys.c    ****        }
 13844              		.loc 1 1348 3 is_stmt 0 view .LVU4231
 13845              	.LBE974:
 13846              	.LBE1393:
 13847              	.LBE1452:
 13848              	.LBE1525:
3635:src/keys.c    **** 	NonProgrammable = 0;
 13849              		.loc 1 3635 7 is_stmt 1 view .LVU4232
3635:src/keys.c    **** 	NonProgrammable = 0;
 13850              		.loc 1 3635 11 is_stmt 0 view .LVU4233
 13851 1bda 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3635:src/keys.c    **** 	NonProgrammable = 0;
 13852              		.loc 1 3635 10 view .LVU4234
 13853 1bde 5B06     		lsls	r3, r3, #25
 13854 1be0 10D4     		bmi	.L1107
 13855              	.LVL1176:
 13856              	.L1108:
 13857              	.LBB1526:
 13858              	.LBB1453:
 13859              	.LBB1394:
 13860              	.LBB975:
1335:src/keys.c    ****      case (K21): // x<->y key
 13861              		.loc 1 1335 37 view .LVU4235
 13862 1be2 4FF48174 		mov	r4, #258
 13863 1be6 CEE5     		b	.L1049
 13864              	.LVL1177:
 13865              	.L1403:
1379:src/keys.c    **** 	 return OP_CDYA | OP_CDOT;
ARM GAS  /tmp/ccK8gYGY.s 			page 379


 13866              		.loc 1 1379 3 is_stmt 1 view .LVU4236
 13867              	.LBB933:
 13868              	.LBI933:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13869              		.loc 1 114 13 view .LVU4237
 13870              	.LBE933:
 13871              	.LBE975:
 13872              	.LBE1394:
 13873              	.LBE1453:
 13874              	.LBE1526:
 115:src/keys.c    **** }
 13875              		.loc 1 115 2 view .LVU4238
 13876              	.LBB1527:
 13877              	.LBB1454:
 13878              	.LBB1395:
 13879              	.LBB976:
 13880              	.LBB942:
 13881              	.LBB934:
 13882              	.LBI934:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13883              		.loc 1 104 20 view .LVU4239
 13884              	.LBB935:
 105:src/keys.c    **** 	State2.shifts = shift;
 13885              		.loc 1 105 2 view .LVU4240
 13886              	.LBB936:
 13887              	.LBI936:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13888              		.loc 1 96 13 view .LVU4241
 13889              	.LBB937:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13890              		.loc 1 97 2 view .LVU4242
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13891              		.loc 1 97 18 is_stmt 0 view .LVU4243
 13892 1be8 FFF7FEFF 		bl	shift_down
 13893              	.LVL1178:
  98:src/keys.c    **** }
 13894              		.loc 1 98 2 is_stmt 1 view .LVU4244
 13895              	.LBE937:
 13896              	.LBE936:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13897              		.loc 1 106 2 view .LVU4245
 13898              	.LBE935:
 13899              	.LBE934:
 13900              	.LBE942:
 13901              	.LBE976:
 13902              	.LBE1395:
 13903              	.LBE1454:
 13904              	.LBE1527:
3635:src/keys.c    **** 	NonProgrammable = 0;
 13905              		.loc 1 3635 11 is_stmt 0 view .LVU4246
 13906 1bec 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 13907              	.LBB1528:
 13908              	.LBB1455:
 13909              	.LBB1396:
 13910              	.LBB977:
 13911              	.LBB943:
 13912              	.LBB940:
ARM GAS  /tmp/ccK8gYGY.s 			page 380


 13913              	.LBB938:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13914              		.loc 1 106 16 view .LVU4247
 13915 1bf0 0023     		movs	r3, #0
 13916              	.LBE938:
 13917              	.LBE940:
 13918              	.LBE943:
 13919              	.LBE977:
 13920              	.LBE1396:
 13921              	.LBE1455:
 13922              	.LBE1528:
3635:src/keys.c    **** 	NonProgrammable = 0;
 13923              		.loc 1 3635 10 view .LVU4248
 13924 1bf2 5506     		lsls	r5, r2, #25
 13925              	.LBB1529:
 13926              	.LBB1456:
 13927              	.LBB1397:
 13928              	.LBB978:
 13929              	.LBB944:
 13930              	.LBB941:
 13931              	.LBB939:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13932              		.loc 1 106 16 view .LVU4249
 13933 1bf4 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13934              		.loc 1 108 2 is_stmt 1 view .LVU4250
 13935              	.LVL1179:
 108:src/keys.c    **** }
 13936              		.loc 1 108 2 is_stmt 0 view .LVU4251
 13937              	.LBE939:
 13938              	.LBE941:
 13939              	.LBE944:
1380:src/keys.c    ****        }
 13940              		.loc 1 1380 3 is_stmt 1 view .LVU4252
1380:src/keys.c    ****        }
 13941              		.loc 1 1380 3 is_stmt 0 view .LVU4253
 13942              	.LBE978:
 13943              	.LBE1397:
 13944              	.LBE1456:
 13945              	.LBE1529:
3635:src/keys.c    **** 	NonProgrammable = 0;
 13946              		.loc 1 3635 7 is_stmt 1 view .LVU4254
3635:src/keys.c    **** 	NonProgrammable = 0;
 13947              		.loc 1 3635 10 is_stmt 0 view .LVU4255
 13948 1bf8 0BD4     		bmi	.L1075
 13949              	.LBB1530:
 13950              	.LBB1457:
 13951              	.LBB1398:
 13952              	.LBB979:
1380:src/keys.c    ****        }
 13953              		.loc 1 1380 10 view .LVU4256
 13954 1bfa 40F23364 		movw	r4, #1587
 13955 1bfe C2E5     		b	.L1049
 13956              	.LVL1180:
 13957              	.L1033:
1380:src/keys.c    ****        }
 13958              		.loc 1 1380 10 view .LVU4257
ARM GAS  /tmp/ccK8gYGY.s 			page 381


 13959              	.LBE979:
 13960              	.LBE1398:
 13961              	.LBE1457:
 13962              	.LBE1530:
3635:src/keys.c    **** 	NonProgrammable = 0;
 13963              		.loc 1 3635 7 is_stmt 1 view .LVU4258
3635:src/keys.c    **** 	NonProgrammable = 0;
 13964              		.loc 1 3635 10 is_stmt 0 view .LVU4259
 13965 1c00 4B06     		lsls	r3, r1, #25
 13966 1c02 EED5     		bpl	.L1108
 13967              	.LVL1181:
 13968              	.L1107:
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13969              		.loc 1 3636 2 is_stmt 1 view .LVU4260
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13970              		.loc 1 3636 18 is_stmt 0 view .LVU4261
 13971 1c04 5C4B     		ldr	r3, .L1420
 13972 1c06 0022     		movs	r2, #0
 13973 1c08 1A60     		str	r2, [r3]
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13974              		.loc 1 3637 2 is_stmt 1 view .LVU4262
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13975              		.loc 1 3637 32 is_stmt 0 view .LVU4263
 13976 1c0a 4FF48170 		mov	r0, #258
 13977 1c0e FEF720BD 		b	.L1106
 13978              	.LVL1182:
 13979              	.L1075:
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13980              		.loc 1 3636 2 is_stmt 1 view .LVU4264
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13981              		.loc 1 3636 18 is_stmt 0 view .LVU4265
 13982 1c12 594A     		ldr	r2, .L1420
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13983              		.loc 1 3637 32 view .LVU4266
 13984 1c14 40F23360 		movw	r0, #1587
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13985              		.loc 1 3636 18 view .LVU4267
 13986 1c18 1360     		str	r3, [r2]
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13987              		.loc 1 3637 2 is_stmt 1 view .LVU4268
 13988 1c1a FEF71ABD 		b	.L1106
 13989              	.LVL1183:
 13990              	.L1315:
 13991              	.LBB1531:
 13992              	.LBB1458:
 13993              	.LBB1399:
 13994              	.LBB1332:
1869:src/keys.c    **** 		else if (shift == SHIFT_H)
 13995              		.loc 1 1869 4 view .LVU4269
1869:src/keys.c    **** 		else if (shift == SHIFT_H)
 13996              		.loc 1 1869 34 is_stmt 0 view .LVU4270
 13997 1c1e 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 13998 1c22 3368     		ldr	r3, [r6]
 13999 1c24 C2F30011 		ubfx	r1, r2, #4, #1
1869:src/keys.c    **** 		else if (shift == SHIFT_H)
 14000              		.loc 1 1869 26 view .LVU4271
 14001 1c28 C1F10101 		rsb	r1, r1, #1
ARM GAS  /tmp/ccK8gYGY.s 			page 382


1869:src/keys.c    **** 		else if (shift == SHIFT_H)
 14002              		.loc 1 1869 22 view .LVU4272
 14003 1c2c 61F30412 		bfi	r2, r1, #4, #1
 14004 1c30 88F81620 		strb	r2, [r8, #22]
1879:src/keys.c    **** 
 14005              		.loc 1 1879 10 view .LVU4273
 14006 1c34 3324     		movs	r4, #51
 14007 1c36 FEF73EBA 		b	.L806
 14008              	.LVL1184:
 14009              	.L1379:
1879:src/keys.c    **** 
 14010              		.loc 1 1879 10 view .LVU4274
 14011              	.LBE1332:
 14012              	.LBE1399:
 14013              	.LBB1400:
 14014              	.LBB1158:
 14015              	.LBB1151:
 14016              	.LBB1140:
 488:src/keys.c    **** 			shift = SHIFT_LC_G;
 14017              		.loc 1 488 8 is_stmt 1 view .LVU4275
 489:src/keys.c    **** 	}
 14018              		.loc 1 489 10 is_stmt 0 view .LVU4276
 14019 1c3a 0229     		cmp	r1, #2
 14020 1c3c 08BF     		it	eq
 14021 1c3e 0521     		moveq	r1, #5
 14022              	.LVL1185:
 489:src/keys.c    **** 	}
 14023              		.loc 1 489 10 view .LVU4277
 14024 1c40 FEF7EEBF 		b	.L942
 14025              	.LVL1186:
 14026              	.L1391:
 489:src/keys.c    **** 	}
 14027              		.loc 1 489 10 view .LVU4278
 14028              	.LBE1140:
 14029              	.LBE1151:
 14030              	.LBE1158:
 14031              	.LBE1400:
 14032              	.LBB1401:
 14033              	.LBB980:
1293:src/keys.c    ****    }
 14034              		.loc 1 1293 6 is_stmt 1 view .LVU4279
1293:src/keys.c    ****    }
 14035              		.loc 1 1293 13 is_stmt 0 view .LVU4280
 14036 1c44 2046     		mov	r0, r4
 14037 1c46 FFF7FEFF 		bl	process_h_shifted
 14038              	.LVL1187:
 14039 1c4a 0446     		mov	r4, r0
 14040              	.LVL1188:
1293:src/keys.c    ****    }
 14041              		.loc 1 1293 13 view .LVU4281
 14042 1c4c FEF7C8BB 		b	.L840
 14043              	.LVL1189:
 14044              	.L1009:
1293:src/keys.c    ****    }
 14045              		.loc 1 1293 13 view .LVU4282
 14046              	.LBE980:
 14047              	.LBE1401:
ARM GAS  /tmp/ccK8gYGY.s 			page 383


 14048              	.LBB1402:
 14049              	.LBB1333:
1882:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 14050              		.loc 1 1882 3 is_stmt 1 view .LVU4283
1882:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 14051              		.loc 1 1882 6 is_stmt 0 view .LVU4284
 14052 1c50 0128     		cmp	r0, #1
 14053 1c52 7FF427AB 		bne	.L1008
 14054              	.LVL1190:
1882:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 14055              		.loc 1 1882 6 view .LVU4285
 14056              	.LBE1333:
 14057              	.LBE1402:
 14058              	.LBE1458:
 14059              	.LBE1531:
3635:src/keys.c    **** 	NonProgrammable = 0;
 14060              		.loc 1 3635 7 is_stmt 1 view .LVU4286
3635:src/keys.c    **** 	NonProgrammable = 0;
 14061              		.loc 1 3635 10 is_stmt 0 view .LVU4287
 14062 1c56 4806     		lsls	r0, r1, #25
 14063              	.LVL1191:
3635:src/keys.c    **** 	NonProgrammable = 0;
 14064              		.loc 1 3635 10 view .LVU4288
 14065 1c58 19D5     		bpl	.L1160
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14066              		.loc 1 3636 2 is_stmt 1 view .LVU4289
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14067              		.loc 1 3636 18 is_stmt 0 view .LVU4290
 14068 1c5a 474B     		ldr	r3, .L1420
 14069 1c5c 0022     		movs	r2, #0
 14070              	.LVL1192:
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14071              		.loc 1 3636 18 view .LVU4291
 14072 1c5e 1A60     		str	r2, [r3]
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14073              		.loc 1 3637 2 is_stmt 1 view .LVU4292
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14074              		.loc 1 3637 32 is_stmt 0 view .LVU4293
 14075 1c60 40F23B10 		movw	r0, #315
 14076 1c64 FEF7F5BC 		b	.L1106
 14077              	.LVL1193:
 14078              	.L1011:
 14079              	.LBB1532:
 14080              	.LBB1459:
 14081              	.LBB1403:
 14082              	.LBB1334:
1868:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 14083              		.loc 1 1868 3 is_stmt 1 view .LVU4294
1868:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 14084              		.loc 1 1868 6 is_stmt 0 view .LVU4295
 14085 1c68 0128     		cmp	r0, #1
 14086 1c6a D8D0     		beq	.L1315
1870:src/keys.c    **** 			return OP_NIL | OP_OFF;
 14087              		.loc 1 1870 8 is_stmt 1 view .LVU4296
1870:src/keys.c    **** 			return OP_NIL | OP_OFF;
 14088              		.loc 1 1870 11 is_stmt 0 view .LVU4297
 14089 1c6c 0328     		cmp	r0, #3
ARM GAS  /tmp/ccK8gYGY.s 			page 384


 14090 1c6e C7D0     		beq	.L1033
1872:src/keys.c    **** #ifdef DM42
 14091              		.loc 1 1872 8 is_stmt 1 view .LVU4298
1872:src/keys.c    **** #ifdef DM42
 14092              		.loc 1 1872 11 is_stmt 0 view .LVU4299
 14093 1c70 0028     		cmp	r0, #0
 14094 1c72 7EF437AD 		bne	.L1314
1874:src/keys.c    **** 		  display_current_menu();
 14095              		.loc 1 1874 5 is_stmt 1 view .LVU4300
 14096 1c76 4FF0FF30 		mov	r0, #-1
 14097              	.LVL1194:
1874:src/keys.c    **** 		  display_current_menu();
 14098              		.loc 1 1874 5 is_stmt 0 view .LVU4301
 14099 1c7a FFF7FEFF 		bl	set_menu
 14100              	.LVL1195:
1875:src/keys.c    **** #endif
 14101              		.loc 1 1875 5 is_stmt 1 view .LVU4302
1879:src/keys.c    **** 
 14102              		.loc 1 1879 10 is_stmt 0 view .LVU4303
 14103 1c7e 3324     		movs	r4, #51
1875:src/keys.c    **** #endif
 14104              		.loc 1 1875 5 view .LVU4304
 14105 1c80 FFF7FEFF 		bl	display_current_menu
 14106              	.LVL1196:
1877:src/keys.c    **** 		}
 14107              		.loc 1 1877 5 is_stmt 1 view .LVU4305
 14108 1c84 FFF7FEFF 		bl	init_state
 14109              	.LVL1197:
 14110 1c88 3368     		ldr	r3, [r6]
 14111 1c8a FEF714BA 		b	.L806
 14112              	.LVL1198:
 14113              	.L1160:
1883:src/keys.c    **** 		break;
 14114              		.loc 1 1883 11 is_stmt 0 view .LVU4306
 14115 1c8e 40F23B14 		movw	r4, #315
 14116 1c92 78E5     		b	.L1049
 14117              	.LVL1199:
 14118              	.L1012:
1856:src/keys.c    **** 	    if ( State2.runmode ) {
 14119              		.loc 1 1856 4 is_stmt 1 view .LVU4307
1856:src/keys.c    **** 	    if ( State2.runmode ) {
 14120              		.loc 1 1856 7 is_stmt 0 view .LVU4308
 14121 1c94 0028     		cmp	r0, #0
 14122 1c96 7FF405AB 		bne	.L1008
1857:src/keys.c    **** 	      // Alpha scroll right
 14123              		.loc 1 1857 6 is_stmt 1 view .LVU4309
1857:src/keys.c    **** 	      // Alpha scroll right
 14124              		.loc 1 1857 9 is_stmt 0 view .LVU4310
 14125 1c9a 4906     		lsls	r1, r1, #25
 14126 1c9c 7EF512AC 		bpl	.L1030
1859:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
 14127              		.loc 1 1859 8 is_stmt 1 view .LVU4311
1859:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
 14128              		.loc 1 1859 11 is_stmt 0 view .LVU4312
 14129 1ca0 B9F1000F 		cmp	r9, #0
 14130 1ca4 3EF41EAD 		beq	.L1314
1860:src/keys.c    **** 	      return STATE_UNFINISHED;
ARM GAS  /tmp/ccK8gYGY.s 			page 385


 14131              		.loc 1 1860 3 is_stmt 1 view .LVU4313
1860:src/keys.c    **** 	      return STATE_UNFINISHED;
 14132              		.loc 1 1860 31 is_stmt 0 view .LVU4314
 14133 1ca8 09F1FF33 		add	r3, r9, #-1
1860:src/keys.c    **** 	      return STATE_UNFINISHED;
 14134              		.loc 1 1860 20 view .LVU4315
 14135 1cac 88F80D30 		strb	r3, [r8, #13]
1861:src/keys.c    **** 	    }
 14136              		.loc 1 1861 15 view .LVU4316
 14137 1cb0 3324     		movs	r4, #51
 14138 1cb2 3368     		ldr	r3, [r6]
 14139 1cb4 FEF7FFB9 		b	.L806
 14140              	.L1013:
1827:src/keys.c    **** 	    if ( State2.runmode ) {
 14141              		.loc 1 1827 4 is_stmt 1 view .LVU4317
1827:src/keys.c    **** 	    if ( State2.runmode ) {
 14142              		.loc 1 1827 7 is_stmt 0 view .LVU4318
 14143 1cb8 0028     		cmp	r0, #0
 14144 1cba 7FF4F3AA 		bne	.L1008
1828:src/keys.c    **** 	      // Alpha scroll left
 14145              		.loc 1 1828 6 is_stmt 1 view .LVU4319
1828:src/keys.c    **** 	      // Alpha scroll left
 14146              		.loc 1 1828 9 is_stmt 0 view .LVU4320
 14147 1cbe 4806     		lsls	r0, r1, #25
 14148              	.LVL1200:
1828:src/keys.c    **** 	      // Alpha scroll left
 14149              		.loc 1 1828 9 view .LVU4321
 14150 1cc0 7EF5F8AB 		bpl	.L1026
1836:src/keys.c    **** 		alpha_pos += 1;
 14151              		.loc 1 1836 8 is_stmt 1 view .LVU4322
1836:src/keys.c    **** 		alpha_pos += 1;
 14152              		.loc 1 1836 11 is_stmt 0 view .LVU4323
 14153 1cc4 B9F1000F 		cmp	r9, #0
 14154 1cc8 1CD1     		bne	.L1027
 14155              	.LVL1201:
 14156              	.L1029:
1837:src/keys.c    **** 	      }
 14157              		.loc 1 1837 3 is_stmt 1 view .LVU4324
1837:src/keys.c    **** 	      }
 14158              		.loc 1 1837 13 is_stmt 0 view .LVU4325
 14159 1cca 09F1010A 		add	r10, r9, #1
 14160              	.LVL1202:
 14161              	.L1028:
1844:src/keys.c    **** #else
 14162              		.loc 1 1844 8 is_stmt 1 view .LVU4326
 14163 1cce 3368     		ldr	r3, [r6]
1844:src/keys.c    **** #else
 14164              		.loc 1 1844 25 is_stmt 0 view .LVU4327
 14165 1cd0 88F80DA0 		strb	r10, [r8, #13]
1849:src/keys.c    **** 	    }
 14166              		.loc 1 1849 8 is_stmt 1 view .LVU4328
1849:src/keys.c    **** 	    }
 14167              		.loc 1 1849 15 is_stmt 0 view .LVU4329
 14168 1cd4 3324     		movs	r4, #51
 14169 1cd6 FEF7EEB9 		b	.L806
 14170              	.LVL1203:
 14171              	.L990:
ARM GAS  /tmp/ccK8gYGY.s 			page 386


1849:src/keys.c    **** 	    }
 14172              		.loc 1 1849 15 view .LVU4330
 14173              	.LBE1334:
 14174              	.LBE1403:
 14175              	.LBB1404:
 14176              	.LBB1252:
3160:src/keys.c    **** 		goto reset_window;
 14177              		.loc 1 3160 4 is_stmt 1 view .LVU4331
3160:src/keys.c    **** 		goto reset_window;
 14178              		.loc 1 3160 24 is_stmt 0 view .LVU4332
 14179 1cda 0AF1FF3A 		add	r10, r10, #-1
 14180              	.LVL1204:
3160:src/keys.c    **** 		goto reset_window;
 14181              		.loc 1 3160 18 view .LVU4333
 14182 1cde A8F808A0 		strh	r10, [r8, #8]	@ movhi
 14183 1ce2 FFF70EBA 		b	.L982
 14184              	.LVL1205:
 14185              	.L1390:
3156:src/keys.c    **** 			--State2.digval;
 14186              		.loc 1 3156 5 is_stmt 1 view .LVU4334
3156:src/keys.c    **** 			--State2.digval;
 14187              		.loc 1 3156 21 is_stmt 0 view .LVU4335
 14188 1ce6 FFF7FEFF 		bl	global_regs
 14189              	.LVL1206:
3156:src/keys.c    **** 			--State2.digval;
 14190              		.loc 1 3156 19 view .LVU4336
 14191 1cea A8F80800 		strh	r0, [r8, #8]	@ movhi
 14192 1cee FFF703BA 		b	.L991
 14193              	.LVL1207:
 14194              	.L1381:
3156:src/keys.c    **** 			--State2.digval;
 14195              		.loc 1 3156 19 view .LVU4337
 14196              	.LBE1252:
 14197              	.LBE1404:
 14198              	.LBB1405:
 14199              	.LBB1159:
2866:src/keys.c    **** 		State2.numdigit = 2;
 14200              		.loc 1 2866 3 is_stmt 1 view .LVU4338
2867:src/keys.c    **** 		return STATE_UNFINISHED;
 14201              		.loc 1 2867 19 is_stmt 0 view .LVU4339
 14202 1cf2 0222     		movs	r2, #2
2866:src/keys.c    **** 		State2.numdigit = 2;
 14203              		.loc 1 2866 18 view .LVU4340
 14204 1cf4 88F80A40 		strb	r4, [r8, #10]
2867:src/keys.c    **** 		return STATE_UNFINISHED;
 14205              		.loc 1 2867 3 is_stmt 1 view .LVU4341
 14206 1cf8 3368     		ldr	r3, [r6]
2867:src/keys.c    **** 		return STATE_UNFINISHED;
 14207              		.loc 1 2867 19 is_stmt 0 view .LVU4342
 14208 1cfa 88F80B20 		strb	r2, [r8, #11]
2868:src/keys.c    **** 	}
 14209              		.loc 1 2868 3 is_stmt 1 view .LVU4343
2868:src/keys.c    **** 	}
 14210              		.loc 1 2868 10 is_stmt 0 view .LVU4344
 14211 1cfe 3324     		movs	r4, #51
 14212              	.LVL1208:
2868:src/keys.c    **** 	}
ARM GAS  /tmp/ccK8gYGY.s 			page 387


 14213              		.loc 1 2868 10 view .LVU4345
 14214 1d00 FEF7D9B9 		b	.L806
 14215              	.LVL1209:
 14216              	.L1027:
2868:src/keys.c    **** 	}
 14217              		.loc 1 2868 10 view .LVU4346
 14218              	.LBE1159:
 14219              	.LBE1405:
 14220              	.LBB1406:
 14221              	.LBB1335:
1836:src/keys.c    **** 		alpha_pos += 1;
 14222              		.loc 1 1836 33 view .LVU4347
 14223 1d04 FFF7FEFF 		bl	alen
 14224              	.LVL1210:
1836:src/keys.c    **** 		alpha_pos += 1;
 14225              		.loc 1 1836 41 view .LVU4348
 14226 1d08 09EB4903 		add	r3, r9, r9, lsl #1
1836:src/keys.c    **** 		alpha_pos += 1;
 14227              		.loc 1 1836 39 view .LVU4349
 14228 1d0c A0EB4300 		sub	r0, r0, r3, lsl #1
1836:src/keys.c    **** 		alpha_pos += 1;
 14229              		.loc 1 1836 29 view .LVU4350
 14230 1d10 1328     		cmp	r0, #19
 14231 1d12 DAD8     		bhi	.L1029
 14232 1d14 DBE7     		b	.L1028
 14233              	.LVL1211:
 14234              	.L1397:
1836:src/keys.c    **** 		alpha_pos += 1;
 14235              		.loc 1 1836 29 view .LVU4351
 14236              	.LBE1335:
 14237              	.LBE1406:
 14238              	.LBB1407:
 14239              	.LBB981:
 14240              	.LBB945:
1324:src/keys.c    **** 	 return process_cmplx(c);
 14241              		.loc 1 1324 3 is_stmt 1 view .LVU4352
 14242 1d16 0120     		movs	r0, #1
 14243 1d18 FFF7FEFF 		bl	finish_cpx_entry
 14244              	.LVL1212:
1325:src/keys.c    ****        }
 14245              		.loc 1 1325 3 view .LVU4353
1325:src/keys.c    ****        }
 14246              		.loc 1 1325 10 is_stmt 0 view .LVU4354
 14247 1d1c 2046     		mov	r0, r4
 14248 1d1e FFF7FEFF 		bl	process_cmplx
 14249              	.LVL1213:
 14250 1d22 0446     		mov	r4, r0
 14251              	.LVL1214:
1325:src/keys.c    ****        }
 14252              		.loc 1 1325 10 view .LVU4355
 14253 1d24 FEF75CBB 		b	.L840
 14254              	.LVL1215:
 14255              	.L1396:
1325:src/keys.c    ****        }
 14256              		.loc 1 1325 10 view .LVU4356
 14257              	.LBE945:
1306:src/keys.c    ****        if ( CmdLineLength ) {
ARM GAS  /tmp/ccK8gYGY.s 			page 388


 14258              		.loc 1 1306 8 is_stmt 1 view .LVU4357
 14259              	.LBB946:
 14260              	.LBI946:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 14261              		.loc 1 114 13 view .LVU4358
 14262              	.LBE946:
 14263              	.LBE981:
 14264              	.LBE1407:
 14265              	.LBE1459:
 14266              	.LBE1532:
 115:src/keys.c    **** }
 14267              		.loc 1 115 2 view .LVU4359
 14268              	.LBB1533:
 14269              	.LBB1460:
 14270              	.LBB1408:
 14271              	.LBB982:
 14272              	.LBB953:
 14273              	.LBB947:
 14274              	.LBI947:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14275              		.loc 1 104 20 view .LVU4360
 14276              	.LBB948:
 105:src/keys.c    **** 	State2.shifts = shift;
 14277              		.loc 1 105 2 view .LVU4361
 14278              	.LBB949:
 14279              	.LBI949:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 14280              		.loc 1 96 13 view .LVU4362
 14281              	.LBB950:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14282              		.loc 1 97 2 view .LVU4363
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14283              		.loc 1 97 18 is_stmt 0 view .LVU4364
 14284 1d28 FFF7FEFF 		bl	shift_down
 14285              	.LVL1216:
  98:src/keys.c    **** }
 14286              		.loc 1 98 2 is_stmt 1 view .LVU4365
 14287              	.LBE950:
 14288              	.LBE949:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14289              		.loc 1 106 2 view .LVU4366
 14290              	.LBE948:
 14291              	.LBE947:
 14292              	.LBE953:
1307:src/keys.c    **** 	 State2.state_lift = 0;
 14293              		.loc 1 1307 11 is_stmt 0 view .LVU4367
 14294 1d2c 98F81C20 		ldrb	r2, [r8, #28]	@ zero_extendqisi2
 14295              	.LBB954:
 14296              	.LBB952:
 14297              	.LBB951:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14298              		.loc 1 106 16 view .LVU4368
 14299 1d30 0023     		movs	r3, #0
 14300 1d32 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 14301              		.loc 1 108 2 is_stmt 1 view .LVU4369
 14302              	.LVL1217:
ARM GAS  /tmp/ccK8gYGY.s 			page 389


 108:src/keys.c    **** }
 14303              		.loc 1 108 2 is_stmt 0 view .LVU4370
 14304              	.LBE951:
 14305              	.LBE952:
 14306              	.LBE954:
1307:src/keys.c    **** 	 State2.state_lift = 0;
 14307              		.loc 1 1307 8 is_stmt 1 view .LVU4371
1307:src/keys.c    **** 	 State2.state_lift = 0;
 14308              		.loc 1 1307 11 is_stmt 0 view .LVU4372
 14309 1d36 62B1     		cbz	r2, .L1047
1308:src/keys.c    **** 	 return OP_NIL | OP_PIB;
 14310              		.loc 1 1308 3 is_stmt 1 view .LVU4373
1308:src/keys.c    **** 	 return OP_NIL | OP_PIB;
 14311              		.loc 1 1308 21 is_stmt 0 view .LVU4374
 14312 1d38 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
 14313              	.LBE982:
 14314              	.LBE1408:
 14315              	.LBE1460:
 14316              	.LBE1533:
3635:src/keys.c    **** 	NonProgrammable = 0;
 14317              		.loc 1 3635 11 view .LVU4375
 14318 1d3c 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
 14319              	.LBB1534:
 14320              	.LBB1461:
 14321              	.LBB1409:
 14322              	.LBB983:
1308:src/keys.c    **** 	 return OP_NIL | OP_PIB;
 14323              		.loc 1 1308 21 view .LVU4376
 14324 1d40 63F38612 		bfi	r2, r3, #6, #1
 14325 1d44 88F81720 		strb	r2, [r8, #23]
1309:src/keys.c    ****        }
 14326              		.loc 1 1309 3 is_stmt 1 view .LVU4377
 14327              	.LVL1218:
1309:src/keys.c    ****        }
 14328              		.loc 1 1309 3 is_stmt 0 view .LVU4378
 14329              	.LBE983:
 14330              	.LBE1409:
 14331              	.LBE1461:
 14332              	.LBE1534:
3635:src/keys.c    **** 	NonProgrammable = 0;
 14333              		.loc 1 3635 7 is_stmt 1 view .LVU4379
3635:src/keys.c    **** 	NonProgrammable = 0;
 14334              		.loc 1 3635 10 is_stmt 0 view .LVU4380
 14335 1d48 4A06     		lsls	r2, r1, #25
 14336 1d4a 0CD4     		bmi	.L1048
 14337              	.LBB1535:
 14338              	.LBB1462:
 14339              	.LBB1410:
 14340              	.LBB984:
1309:src/keys.c    ****        }
 14341              		.loc 1 1309 10 view .LVU4381
 14342 1d4c 4FF4E474 		mov	r4, #456
 14343 1d50 19E5     		b	.L1049
 14344              	.LVL1219:
 14345              	.L1047:
1309:src/keys.c    ****        }
 14346              		.loc 1 1309 10 view .LVU4382
ARM GAS  /tmp/ccK8gYGY.s 			page 390


 14347              	.LBE984:
 14348              	.LBE1410:
 14349              	.LBE1462:
 14350              	.LBE1535:
3635:src/keys.c    **** 	NonProgrammable = 0;
 14351              		.loc 1 3635 7 is_stmt 1 view .LVU4383
3635:src/keys.c    **** 	NonProgrammable = 0;
 14352              		.loc 1 3635 11 is_stmt 0 view .LVU4384
 14353 1d52 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3635:src/keys.c    **** 	NonProgrammable = 0;
 14354              		.loc 1 3635 10 view .LVU4385
 14355 1d56 5906     		lsls	r1, r3, #25
 14356 1d58 0BD5     		bpl	.L1161
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14357              		.loc 1 3636 2 is_stmt 1 view .LVU4386
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14358              		.loc 1 3636 18 is_stmt 0 view .LVU4387
 14359 1d5a 074B     		ldr	r3, .L1420
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14360              		.loc 1 3637 32 view .LVU4388
 14361 1d5c 40F2C710 		movw	r0, #455
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14362              		.loc 1 3636 18 view .LVU4389
 14363 1d60 1A60     		str	r2, [r3]
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14364              		.loc 1 3637 2 is_stmt 1 view .LVU4390
 14365 1d62 FEF776BC 		b	.L1106
 14366              	.LVL1220:
 14367              	.L1048:
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14368              		.loc 1 3636 2 view .LVU4391
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14369              		.loc 1 3636 18 is_stmt 0 view .LVU4392
 14370 1d66 044A     		ldr	r2, .L1420
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14371              		.loc 1 3637 32 view .LVU4393
 14372 1d68 4FF4E470 		mov	r0, #456
3636:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14373              		.loc 1 3636 18 view .LVU4394
 14374 1d6c 1360     		str	r3, [r2]
3637:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14375              		.loc 1 3637 2 is_stmt 1 view .LVU4395
 14376 1d6e FEF770BC 		b	.L1106
 14377              	.LVL1221:
 14378              	.L1161:
 14379              	.LBB1536:
 14380              	.LBB1463:
 14381              	.LBB1411:
 14382              	.LBB985:
1312:src/keys.c    ****        }
 14383              		.loc 1 1312 10 is_stmt 0 view .LVU4396
 14384 1d72 40F2C714 		movw	r4, #455
 14385 1d76 06E5     		b	.L1049
 14386              	.L1421:
 14387              		.align	2
 14388              	.L1420:
 14389 1d78 00000000 		.word	NonProgrammable
ARM GAS  /tmp/ccK8gYGY.s 			page 391


 14390              	.LBE985:
 14391              	.LBE1411:
 14392              	.LBE1463:
 14393              	.LBE1536:
 14394              		.cfi_endproc
 14395              	.LFE63:
 14397              		.section	.text.process_keycode_with_shift,"ax",%progbits
 14398              		.align	1
 14399              		.p2align 2,,3
 14400              		.global	process_keycode_with_shift
 14401              		.syntax unified
 14402              		.thumb
 14403              		.thumb_func
 14404              		.fpu fpv4-sp-d16
 14406              	process_keycode_with_shift:
 14407              	.LFB62:
3383:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 14408              		.loc 1 3383 61 is_stmt 1 view -0
 14409              		.cfi_startproc
 14410              		@ args = 0, pretend = 0, frame = 8
 14411              		@ frame_needed = 0, uses_anonymous_args = 0
 14412 0000 30B5     		push	{r4, r5, lr}
 14413              		.cfi_def_cfa_offset 12
 14414              		.cfi_offset 4, -12
 14415              		.cfi_offset 5, -8
 14416              		.cfi_offset 14, -4
 14417 0002 83B0     		sub	sp, sp, #12
 14418              		.cfi_def_cfa_offset 24
3383:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 14419              		.loc 1 3383 61 is_stmt 0 view .LVU4398
 14420 0004 02AB     		add	r3, sp, #8
 14421 0006 03E90300 		stmdb	r3, {r0, r1}
 14422 000a 9DF80040 		ldrb	r4, [sp]	@ zero_extendqisi2
 14423              	.LVL1222:
3384:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 14424              		.loc 1 3384 4 is_stmt 1 view .LVU4399
3384:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 14425              		.loc 1 3384 7 is_stmt 0 view .LVU4400
 14426 000e 2E2C     		cmp	r4, #46
 14427 0010 10D0     		beq	.L1422
3385:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 14428              		.loc 1 3385 4 is_stmt 1 view .LVU4401
3385:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 14429              		.loc 1 3385 7 is_stmt 0 view .LVU4402
 14430 0012 332C     		cmp	r4, #51
 14431 0014 1DD0     		beq	.L1429
3394:src/keys.c    ****      nd_opcode = remapped.shift;
 14432              		.loc 1 3394 7 view .LVU4403
 14433 0016 342C     		cmp	r4, #52
 14434 0018 019D     		ldr	r5, [sp, #4]
3394:src/keys.c    ****      nd_opcode = remapped.shift;
 14435              		.loc 1 3394 4 is_stmt 1 view .LVU4404
3394:src/keys.c    ****      nd_opcode = remapped.shift;
 14436              		.loc 1 3394 7 is_stmt 0 view .LVU4405
 14437 001a 0DD0     		beq	.L1430
3398:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14438              		.loc 1 3398 9 is_stmt 1 view .LVU4406
ARM GAS  /tmp/ccK8gYGY.s 			page 392


3398:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14439              		.loc 1 3398 12 is_stmt 0 view .LVU4407
 14440 001c 002D     		cmp	r5, #0
 14441 001e 03DB     		blt	.L1427
3398:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14442              		.loc 1 3398 34 is_stmt 1 discriminator 1 view .LVU4408
 14443              	.LVL1223:
 14444              	.LBB1537:
 14445              	.LBI1537:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14446              		.loc 1 104 20 discriminator 1 view .LVU4409
 14447              	.LBB1538:
 105:src/keys.c    **** 	State2.shifts = shift;
 14448              		.loc 1 105 2 discriminator 1 view .LVU4410
 14449              	.LBB1539:
 14450              	.LBI1539:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 14451              		.loc 1 96 13 discriminator 1 view .LVU4411
 14452              	.LBB1540:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14453              		.loc 1 97 2 discriminator 1 view .LVU4412
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14454              		.loc 1 97 18 is_stmt 0 discriminator 1 view .LVU4413
 14455 0020 FFF7FEFF 		bl	shift_down
 14456              	.LVL1224:
  98:src/keys.c    **** }
 14457              		.loc 1 98 2 is_stmt 1 discriminator 1 view .LVU4414
 14458              	.LBE1540:
 14459              	.LBE1539:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14460              		.loc 1 106 2 discriminator 1 view .LVU4415
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14461              		.loc 1 106 16 is_stmt 0 discriminator 1 view .LVU4416
 14462 0024 194B     		ldr	r3, .L1431
 14463              	.LBE1538:
 14464              	.LBE1537:
3398:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14465              		.loc 1 3398 34 discriminator 1 view .LVU4417
 14466 0026 1D74     		strb	r5, [r3, #16]
 14467              	.LBB1542:
 14468              	.LBB1541:
 108:src/keys.c    **** }
 14469              		.loc 1 108 2 is_stmt 1 discriminator 1 view .LVU4418
 14470              	.LVL1225:
 14471              	.L1427:
 108:src/keys.c    **** }
 14472              		.loc 1 108 2 is_stmt 0 discriminator 1 view .LVU4419
 14473              	.LBE1541:
 14474              	.LBE1542:
3399:src/keys.c    ****  }
 14475              		.loc 1 3399 4 is_stmt 1 view .LVU4420
 14476 0028 2046     		mov	r0, r4
3400:src/keys.c    ****  
 14477              		.loc 1 3400 2 is_stmt 0 view .LVU4421
 14478 002a 03B0     		add	sp, sp, #12
 14479              		.cfi_remember_state
 14480              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccK8gYGY.s 			page 393


 14481              		@ sp needed
 14482 002c BDE83040 		pop	{r4, r5, lr}
 14483              		.cfi_restore 14
 14484              		.cfi_restore 5
 14485              		.cfi_restore 4
 14486              		.cfi_def_cfa_offset 0
 14487              	.LVL1226:
3399:src/keys.c    ****  }
 14488              		.loc 1 3399 4 view .LVU4422
 14489 0030 FFF7FEBF 		b	process_keycode
 14490              	.LVL1227:
 14491              	.L1422:
 14492              		.cfi_restore_state
3400:src/keys.c    ****  
 14493              		.loc 1 3400 2 view .LVU4423
 14494 0034 03B0     		add	sp, sp, #12
 14495              		.cfi_remember_state
 14496              		.cfi_def_cfa_offset 12
 14497              		@ sp needed
 14498 0036 30BD     		pop	{r4, r5, pc}
 14499              	.LVL1228:
 14500              	.L1430:
 14501              		.cfi_restore_state
3395:src/keys.c    ****      set_shift(SHIFT_N);
 14502              		.loc 1 3395 6 is_stmt 1 view .LVU4424
3395:src/keys.c    ****      set_shift(SHIFT_N);
 14503              		.loc 1 3395 16 is_stmt 0 view .LVU4425
 14504 0038 154B     		ldr	r3, .L1431+4
 14505 003a 1D60     		str	r5, [r3]
3396:src/keys.c    ****    }
 14506              		.loc 1 3396 6 is_stmt 1 view .LVU4426
 14507              	.LVL1229:
 14508              	.LBB1543:
 14509              	.LBI1543:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14510              		.loc 1 104 20 view .LVU4427
 14511              	.LBB1544:
 105:src/keys.c    **** 	State2.shifts = shift;
 14512              		.loc 1 105 2 view .LVU4428
 14513              	.LBB1545:
 14514              	.LBI1545:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 14515              		.loc 1 96 13 view .LVU4429
 14516              	.LBB1546:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14517              		.loc 1 97 2 view .LVU4430
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14518              		.loc 1 97 18 is_stmt 0 view .LVU4431
 14519 003c FFF7FEFF 		bl	shift_down
 14520              	.LVL1230:
  98:src/keys.c    **** }
 14521              		.loc 1 98 2 is_stmt 1 view .LVU4432
 14522              	.LBE1546:
 14523              	.LBE1545:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14524              		.loc 1 106 2 view .LVU4433
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
ARM GAS  /tmp/ccK8gYGY.s 			page 394


 14525              		.loc 1 106 16 is_stmt 0 view .LVU4434
 14526 0040 124B     		ldr	r3, .L1431
 14527 0042 0022     		movs	r2, #0
 14528              	.LBE1544:
 14529              	.LBE1543:
3399:src/keys.c    ****  }
 14530              		.loc 1 3399 4 view .LVU4435
 14531 0044 2046     		mov	r0, r4
 14532              	.LBB1548:
 14533              	.LBB1547:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14534              		.loc 1 106 16 view .LVU4436
 14535 0046 1A74     		strb	r2, [r3, #16]
 108:src/keys.c    **** }
 14536              		.loc 1 108 2 is_stmt 1 view .LVU4437
 14537              	.LVL1231:
 108:src/keys.c    **** }
 14538              		.loc 1 108 2 is_stmt 0 view .LVU4438
 14539              	.LBE1547:
 14540              	.LBE1548:
3399:src/keys.c    ****  }
 14541              		.loc 1 3399 4 is_stmt 1 view .LVU4439
3400:src/keys.c    ****  
 14542              		.loc 1 3400 2 is_stmt 0 view .LVU4440
 14543 0048 03B0     		add	sp, sp, #12
 14544              		.cfi_remember_state
 14545              		.cfi_def_cfa_offset 12
 14546              		@ sp needed
 14547 004a BDE83040 		pop	{r4, r5, lr}
 14548              		.cfi_restore 14
 14549              		.cfi_restore 5
 14550              		.cfi_restore 4
 14551              		.cfi_def_cfa_offset 0
 14552              	.LVL1232:
3399:src/keys.c    ****  }
 14553              		.loc 1 3399 4 view .LVU4441
 14554 004e FFF7FEBF 		b	process_keycode
 14555              	.LVL1233:
 14556              	.L1429:
 14557              		.cfi_restore_state
3386:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 14558              		.loc 1 3386 6 is_stmt 1 view .LVU4442
 14559 0052 104B     		ldr	r3, .L1431+8
 14560 0054 41F23010 		movw	r0, #4400
 14561 0058 9847     		blx	r3
 14562              	.LVL1234:
3386:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 14563              		.loc 1 3386 31 view .LVU4443
 14564 005a 0A20     		movs	r0, #10
 14565 005c 0E4B     		ldr	r3, .L1431+12
 14566 005e 9847     		blx	r3
 14567              	.LVL1235:
3386:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 14568              		.loc 1 3386 46 view .LVU4444
 14569 0060 0E4B     		ldr	r3, .L1431+16
 14570 0062 9847     		blx	r3
 14571              	.LVL1236:
ARM GAS  /tmp/ccK8gYGY.s 			page 395


3387:src/keys.c    ****        // Was error just wait for confirmation
 14572              		.loc 1 3387 6 view .LVU4445
3387:src/keys.c    ****        // Was error just wait for confirmation
 14573              		.loc 1 3387 11 is_stmt 0 view .LVU4446
 14574 0064 0E4B     		ldr	r3, .L1431+20
 14575 0066 0120     		movs	r0, #1
 14576 0068 9847     		blx	r3
 14577              	.LVL1237:
3387:src/keys.c    ****        // Was error just wait for confirmation
 14578              		.loc 1 3387 9 view .LVU4447
 14579 006a 0228     		cmp	r0, #2
 14580 006c 01D1     		bne	.L1425
3389:src/keys.c    ****      }
 14581              		.loc 1 3389 8 is_stmt 1 view .LVU4448
 14582 006e 0D4B     		ldr	r3, .L1431+24
 14583 0070 9847     		blx	r3
 14584              	.LVL1238:
 14585              	.L1425:
3391:src/keys.c    ****      return;
 14586              		.loc 1 3391 6 view .LVU4449
 14587 0072 084B     		ldr	r3, .L1431+8
 14588 0074 42F26020 		movw	r0, #8800
 14589 0078 9847     		blx	r3
 14590              	.LVL1239:
3391:src/keys.c    ****      return;
 14591              		.loc 1 3391 31 view .LVU4450
 14592 007a 074B     		ldr	r3, .L1431+12
 14593 007c 0A20     		movs	r0, #10
 14594 007e 9847     		blx	r3
 14595              	.LVL1240:
3391:src/keys.c    ****      return;
 14596              		.loc 1 3391 46 view .LVU4451
 14597 0080 064B     		ldr	r3, .L1431+16
3400:src/keys.c    ****  
 14598              		.loc 1 3400 2 is_stmt 0 view .LVU4452
 14599 0082 03B0     		add	sp, sp, #12
 14600              		.cfi_def_cfa_offset 12
 14601              		@ sp needed
 14602 0084 BDE83040 		pop	{r4, r5, lr}
 14603              		.cfi_restore 14
 14604              		.cfi_restore 5
 14605              		.cfi_restore 4
 14606              		.cfi_def_cfa_offset 0
 14607              	.LVL1241:
3391:src/keys.c    ****      return;
 14608              		.loc 1 3391 46 view .LVU4453
 14609 0088 1847     		bx	r3	@ indirect register sibling call
 14610              	.LVL1242:
 14611              	.L1432:
 14612 008a 00BF     		.align	2
 14613              	.L1431:
 14614 008c 00000000 		.word	StateWhileOn
 14615 0090 00000000 		.word	nd_opcode
 14616 0094 F5020008 		.word	134218485
 14617 0098 05040008 		.word	134218757
 14618 009c F9020008 		.word	134218489
 14619 00a0 79030008 		.word	134218617
ARM GAS  /tmp/ccK8gYGY.s 			page 396


 14620 00a4 99030008 		.word	134218649
 14621              		.cfi_endproc
 14622              	.LFE62:
 14624              		.comm	nd_opcode,4,4
 14625              		.comm	NonProgrammable,4,4
 14626              		.comm	GoFast,4,4
 14627              		.comm	OpCodeDisplayPending,4,4
 14628              		.comm	OpCode,4,4
 14629              		.comm	WasDataEntry,4,4
 14630              		.section	.bss.was_paused.9859,"aw",%nobits
 14631              		.align	2
 14632              		.set	.LANCHOR18,. + 0
 14635              	was_paused.9859:
 14636 0000 00000000 		.space	4
 14637              		.section	.rodata.alpha_arrows,"a"
 14638              		.align	2
 14641              	alpha_arrows:
 14642 0000 0D0E100F 		.ascii	"\015\016\020\017\003\004\237^\177"
 14642      03049F5E 
 14642      7F
 14643              		.section	.rodata.alpha_catalogue,"a"
 14644              		.align	2
 14647              	alpha_catalogue:
 14648 0000 0D4AC280 		.ascii	"\015J\302\200\236\266\212\242~\327\266\355\313v\336"
 14648      9EB68AA2 
 14648      7ED7B6ED 
 14648      CB76DE
 14649 000f 284AB0   		.ascii	"(J\260"
 14650              		.section	.rodata.alpha_compares,"a"
 14651              		.align	2
 14654              	alpha_compares:
 14655 0000 3C093D1D 		.ascii	"<\011=\035\012>[]{}"
 14655      0A3E5B5D 
 14655      7B7D
 14656              		.section	.rodata.alpha_letters,"a"
 14657              		.align	2
 14658              		.set	.LANCHOR9,. + 0
 14661              	alpha_letters:
 14662 0000 C0C1C2C3 		.ascii	"\300\301\302\303\210\304\305\306\307\204\310\311\312"
 14662      88C4C5C6 
 14662      C784C8C9 
 14662      CA
 14663 000d CB9ECCCD 		.ascii	"\313\236\314\315\316\317\320\321\322\323\324\025\325"
 14663      CECFD0D1 
 14663      D2D3D415 
 14663      D5
 14664 001a D618D8D9 		.ascii	"\326\030\330\331\332\333\334\001\031\002\335\032\336"
 14664      DADBDC01 
 14664      1902DD1A 
 14664      DE
 14665 0027 DF       		.ascii	"\337"
 14666              		.section	.rodata.alpha_letters_lower,"a"
 14667              		.align	2
 14668              		.set	.LANCHOR10,. + 0
 14671              	alpha_letters_lower:
 14672 0000 E0E1E2E3 		.ascii	"\340\341\342\343\211\344\345\346\347\205\350\351\352"
 14672      89E4E5E6 
ARM GAS  /tmp/ccK8gYGY.s 			page 397


 14672      E785E8E9 
 14672      EA
 14673 000d EB9EECED 		.ascii	"\353\236\354\355\356\357\360\361\362\363\364\026\365"
 14673      EEEFF0F1 
 14673      F2F3F416 
 14673      F5
 14674 001a F618F8F9 		.ascii	"\366\030\370\371\372\373\374\001\031\002\375\032\376"
 14674      FAFBFC01 
 14674      1902FD1A 
 14674      FE
 14675 0027 FF       		.ascii	"\377"
 14676              		.section	.rodata.alpha_subscripts,"a"
 14677              		.align	2
 14680              	alpha_subscripts:
 14681 0000 B805B9BA 		.ascii	"\270\005\271\272\232\200\327\230\273\024\206\274\367"
 14681      9A80D798 
 14681      BB1486BC 
 14681      F7
 14682 000d 1BBDBE93 		.ascii	"\033\275\276\223\277\201\213\234\214\231\235\220\233"
 14682      BF818B9C 
 14682      8C999D90 
 14682      9B
 14683              		.section	.rodata.alpha_symbols,"a"
 14684              		.align	2
 14687              	alpha_symbols:
 14688 0000 2C3A3B27 		.ascii	",:;'\"*@_~%$\014\036\037\216\256\222`#"
 14688      222A405F 
 14688      7E25240C 
 14688      1E1F8EAE 
 14688      926023
 14689              		.section	.rodata.alphamap.9343,"a"
 14690              		.align	2
 14691              		.set	.LANCHOR15,. + 0
 14694              	alphamap.9343:
 14695 0000 41004100 		.ascii	"A\000A\000a\240"
 14695      61A0
 14696 0006 42004200 		.ascii	"B\000B\000b\241"
 14696      62A1
 14697 000c 43008200 		.ascii	"C\000\202\000c\242"
 14697      63A2
 14698 0012 44008300 		.ascii	"D\000\203\000d\243"
 14698      64A3
 14699 0018 450D4500 		.ascii	"E\015E\000e\244"
 14699      65A4
 14700 001e 46009400 		.ascii	"F\000\224\000f\264"
 14700      66B4
 14701 0024 47008200 		.ascii	"G\000\202\000g\242"
 14701      67A2
 14702 002a 48005800 		.ascii	"H\000X\000h\265"
 14702      68B5
 14703 0030 49004900 		.ascii	"I\000I\000i\250"
 14703      69A8
 14704 0036 4AAF0000 		.ascii	"J\257\000\000j\000"
 14704      6A00
 14705 003c 4B004B00 		.ascii	"K\000K\000k\251"
 14705      6BA9
 14706 0042 4C008A00 		.ascii	"L\000\212\000l\252"
ARM GAS  /tmp/ccK8gYGY.s 			page 398


 14706      6CAA
 14707 0048 00004800 		.ascii	"\000\000H\000\000\246"
 14707      00A6
 14708 004e 4D00AB17 		.ascii	"M\000\253\027m\253"
 14708      6DAB
 14709 0054 4E084E95 		.ascii	"N\010N\225n\254"
 14709      6EAC
 14710 005a 4F0097AF 		.ascii	"O\000\227\257o\267"
 14710      6FB7
 14711 0060 00000000 		.ascii	"\000\000\000\000\000\000"
 14711      0000
 14712 0066 00000000 		.ascii	"\000\000\000\000\000\000"
 14712      0000
 14713 006c 50378F26 		.ascii	"P7\217&p\257"
 14713      70AF
 14714 0072 5138007C 		.ascii	"Q8\000|q\000"
 14714      7100
 14715 0078 5239520B 		.ascii	"R9R\013r\260"
 14715      72B0
 14716 007e 532F915C 		.ascii	"S/\221\\s\261"
 14716      73B1
 14717 0084 00000021 		.ascii	"\000\000\000!\000\000"
 14717      0000
 14718 008a 54345400 		.ascii	"T4T\000t\262"
 14718      74B2
 14719 0090 55350000 		.ascii	"U5\000\000u\000"
 14719      7500
 14720 0096 56360000 		.ascii	"V6\000\000v\000"
 14720      7600
 14721 009c 571C0000 		.ascii	"W\034\000\000w\000"
 14721      7700
 14722 00a2 0000003F 		.ascii	"\000\000\000?\000\000"
 14722      0000
 14723 00a8 58318D00 		.ascii	"X1\215\000x\255"
 14723      78AD
 14724 00ae 59325900 		.ascii	"Y2Y\000y\263"
 14724      79B3
 14725 00b4 5A335A00 		.ascii	"Z3Z\000z\245"
 14725      7AA5
 14726 00ba 2D282900 		.ascii	"-()\000\000\000"
 14726      0000
 14727 00c0 00000000 		.ascii	"\000\000\000\000\000\000"
 14727      0000
 14728 00c6 3A308720 		.ascii	":0\207 ;\247"
 14728      3BA7
 14729 00cc 2E2E9600 		.ascii	"..\226\000.\266"
 14729      2EB6
 14730 00d2 3F002100 		.ascii	"?\000!\000?\000"
 14730      3F00
 14731 00d8 202B3D00 		.ascii	" +=\000  "
 14731      2020
 14732 00de 00000000 		.ascii	"\000\000\000\000\000\000"
 14732      0000
 14733              		.section	.rodata.amap.9334,"a"
 14734              		.align	2
 14735              		.set	.LANCHOR16,. + 0
 14738              	amap.9334:
ARM GAS  /tmp/ccK8gYGY.s 			page 399


 14739 0000 04       		.byte	4
 14740 0001 000D00   		.ascii	"\000\015\000"
 14741 0004 05       		.byte	5
 14742 0005 000E09   		.ascii	"\000\016\011"
 14743 0008 2C       		.byte	44
 14744 0009 000D00   		.ascii	"\000\015\000"
 14745 000c 2D       		.byte	45
 14746 000d 000E09   		.ascii	"\000\016\011"
 14747 0010 08       		.byte	8
 14748 0011 00000F   		.ascii	"\000\000\017"
 14749 0014 1F       		.byte	31
 14750 0015 00000C   		.ascii	"\000\000\014"
 14751 0018 21       		.byte	33
 14752 0019 00000A   		.ascii	"\000\000\012"
 14753 001c 26       		.byte	38
 14754 001d 00000B   		.ascii	"\000\000\013"
 14755              		.section	.rodata.catalogue,"a"
 14756              		.align	2
 14759              	catalogue:
 14760 0000 471B76AC 		.ascii	"G\033v\254\301cX\344\030\242;Y\027\010}Hs!\011\204g"
 14760      C16358E4 
 14760      18A23B59 
 14760      17087D48 
 14760      73210984 
 14761 0015 93E4FD93 		.ascii	"\223\344\375\223E\231\364u\005n\223\024\311#r\034\226"
 14761      4599F475 
 14761      056E9314 
 14761      C923721C 
 14761      96
 14762 0026 E1B9695D 		.ascii	"\341\271i]\014\301\325s\330WI\273q\321We\255MY&\251"
 14762      0CC1D573 
 14762      D85749BB 
 14762      71D15765 
 14762      AD4D5926 
 14763 003b A969D906 		.ascii	"\251i\331\006\375\3160\334\007\021\"\312\020|\237#\311"
 14763      FDCE30DC 
 14763      071122CA 
 14763      107C9F23 
 14763      C9
 14764 004c 10B4A8C2 		.ascii	"\020\264\250\302\314P2\215\305e\034`\325\2032\221\204"
 14764      CC50328D 
 14764      C5651C60 
 14764      D5833291 
 14764      84
 14765 005d 5D1946DC 		.ascii	"]\031F\334\022\261\312c\335\022\200\236\266\212\242"
 14765      12B1CA63 
 14765      DD12809E 
 14765      B68AA2
 14766 006c 7ED9B5ED 		.ascii	"~\331\265\355\273r\335\267\255\202\204\253k\023F\301"
 14766      BB72DDB7 
 14766      AD8284AB 
 14766      6B1346C1 
 14767 007c B16B9AF7 		.ascii	"\261k\232\367\015\214gQ\007y\265v\027\325\351\264"
 14767      0D8C6751 
 14767      0779B576 
 14767      17D5E9B4 
 14768              		.section	.rodata.catalogue_sizes.9657,"a"
ARM GAS  /tmp/ccK8gYGY.s 			page 400


 14769              		.align	2
 14770              		.set	.LANCHOR8,. + 0
 14773              	catalogue_sizes.9657:
 14774 0000 00701E11 		.ascii	"\000p\036\0216=C\205%:\016\023\012\011(\032LLX\016\023"
 14774      363D4385 
 14774      253A0E13 
 14774      0A09281A 
 14774      4C4C580E 
 14775              		.section	.rodata.catalogues.9665,"a"
 14776              		.align	2
 14777              		.set	.LANCHOR12,. + 0
 14780              	catalogues.9665:
 14781 0000 00000000 		.word	0
 14782 0004 00000000 		.word	catalogue
 14783 0008 00000000 		.word	cplx_catalogue
 14784 000c 00000000 		.word	stats_catalogue
 14785 0010 00000000 		.word	prob_catalogue
 14786 0014 00000000 		.word	int_catalogue
 14787 0018 00000000 		.word	prog_catalogue
 14788 001c 00000000 		.word	program_xfcn
 14789 0020 00000000 		.word	test_catalogue
 14790 0024 00000000 		.word	mode_catalogue
 14791 0028 00000000 		.word	alpha_catalogue
 14792 002c 00000000 		.word	alpha_symbols
 14793 0030 00000000 		.word	alpha_compares
 14794 0034 00000000 		.word	alpha_arrows
 14795 0038 00000000 		.word	alpha_letters
 14796 003c 00000000 		.word	alpha_subscripts
 14797 0040 00000000 		.word	0
 14798 0044 00000000 		.word	0
 14799 0048 00000000 		.word	0
 14800 004c 00000000 		.word	sums_catalogue
 14801 0050 00000000 		.word	matrix_catalogue
 14802              		.section	.rodata.cmap.9333,"a"
 14803              		.align	2
 14804              		.set	.LANCHOR17,. + 0
 14807              	cmap.9333:
 14808 0000 04       		.byte	4
 14809 0001 120012   		.ascii	"\022\000\022"
 14810 0004 05       		.byte	5
 14811 0005 090909   		.ascii	"\011\011\011"
 14812 0008 06       		.byte	6
 14813 0009 151515   		.ascii	"\025\025\025"
 14814 000c 0C       		.byte	12
 14815 000d 100011   		.ascii	"\020\000\021"
 14816 0010 19       		.byte	25
 14817 0011 040004   		.ascii	"\004\000\004"
 14818 0014 1A       		.byte	26
 14819 0015 030003   		.ascii	"\003\000\003"
 14820 0018 1B       		.byte	27
 14821 0019 130013   		.ascii	"\023\000\023"
 14822 001c 1C       		.byte	28
 14823 001d 140014   		.ascii	"\024\000\024"
 14824 0020 1E       		.byte	30
 14825 0021 171717   		.ascii	"\027\027\027"
 14826 0024 1F       		.byte	31
 14827 0025 080808   		.ascii	"\010\010\010"
ARM GAS  /tmp/ccK8gYGY.s 			page 401


 14828 0028 20       		.byte	32
 14829 0029 060606   		.ascii	"\006\006\006"
 14830 002c 21       		.byte	33
 14831 002d 010502   		.ascii	"\001\005\002"
 14832              		.section	.rodata.conv_catalogue,"a"
 14833              		.align	2
 14834              		.set	.LANCHOR11,. + 0
 14837              	conv_catalogue:
 14838 0000 DADB8C8A 		.ascii	"\332\333\214\212+-\3357'913\021\026\005\334\336\031"
 14838      2B2DDD37 
 14838      27393133 
 14838      111605DC 
 14838      DE19
 14839 0012 1D1B1315 		.ascii	"\035\033\023\025\015\017\215\010\217\012*,GCE\027?0"
 14839      0D0F8D08 
 14839      8F0A2A2C 
 14839      47434517 
 14839      3F30
 14840 0024 32340400 		.ascii	"24\004\000\002\006&\" ($5/\001#\020\014\016!\022\024"
 14840      02062622 
 14840      20282435 
 14840      2F012310 
 14840      0C0E2112 
 14841 0039 3B181A1C 		.ascii	";\030\032\034\036).\01168>:<@%\337=\213\216\003\007"
 14841      1E292E09 
 14841      36383E3A 
 14841      3C4025DF 
 14841      3D8B8E03 
 14842 004e 4B49410B 		.ascii	"KIA\013JHFBD\037"
 14842      4A484642 
 14842      441F
 14843              		.section	.rodata.conv_mapping.9704,"a"
 14844              		.align	2
 14845              		.set	.LANCHOR14,. + 0
 14848              	conv_mapping.9704:
 14849 0000 8502     		.short	645
 14850 0002 8402     		.short	644
 14851 0004 8602     		.short	646
 14852 0006 8702     		.short	647
 14853 0008 8202     		.short	642
 14854 000a 8302     		.short	643
 14855 000c 3202     		.short	562
 14856 000e 3302     		.short	563
 14857 0010 3402     		.short	564
 14858 0012 3502     		.short	565
 14859 0014 3602     		.short	566
 14860 0016 3702     		.short	567
 14861              		.section	.rodata.cplx_catalogue,"a"
 14862              		.align	2
 14865              	cplx_catalogue:
 14866 0000 7E694CF2 		.ascii	"~iL\362\032;\316\341\015\363~\240\350>\202\253j\312"
 14866      1A3BCEE1 
 14866      0DF37EA0 
 14866      E83E82AB 
 14866      6ACA
 14867 0012 BDF2A2A1 		.ascii	"\275\362\242\241'\242\007}\037g\342\247\253\255*&\021"
 14867      27A2077D 
ARM GAS  /tmp/ccK8gYGY.s 			page 402


 14867      1F67E2A7 
 14867      ABAD2A26 
 14867      11
 14868 0023 9E9ED0   		.ascii	"\236\236\320"
 14869              		.section	.rodata.disp.9515,"a"
 14870              		.align	2
 14871              		.set	.LANCHOR21,. + 0
 14874              	disp.9515:
 14875 0000 03       		.byte	3
 14876 0001 02       		.byte	2
 14877 0002 05       		.byte	5
 14878 0003 04       		.byte	4
 14879              		.section	.rodata.int_catalogue,"a"
 14880              		.align	2
 14883              	int_catalogue:
 14884 0000 47315307 		.ascii	"G1S\007\027A\235rY\326\020\231\374a\035A[\246\225\273"
 14884      17419D72 
 14884      59D61099 
 14884      FC611D41 
 14884      5BA695BB 
 14885 0014 2531BC71 		.ascii	"%1\274q\252jX&\235\277`\\\343\015\300%p\374E\007\304"
 14885      AA6A5826 
 14885      9DBF605C 
 14885      E30DC025 
 14885      70FC4507 
 14886 0029 312C5868 		.ascii	"1,XhB\361<S1e\003S)\033pJ\307*\332*\255\233^\333\267"
 14886      42F13C53 
 14886      31650353 
 14886      291B704A 
 14886      C72ADA2A 
 14887 0042 2DDB7AD8 		.ascii	"-\333z\330*\323DA\337x\000"
 14887      2AD34441 
 14887      DF7800
 14888              		.section	.rodata.linear_key_map.9299,"a"
 14889              		.align	2
 14890              		.set	.LANCHOR6,. + 0
 14893              	linear_key_map.9299:
 14894 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\011\012\013\014"
 14894      04050607 
 14894      08090A0B 
 14894      0C
 14895 000d 0D0E0F10 		.ascii	"\015\016\017\020\000\021\022\023\024\025\000\026\027"
 14895      00111213 
 14895      14150016 
 14895      17
 14896 001a 18191A00 		.ascii	"\030\031\032\000\033\034\035\036\037\000 !\"#$%%%%%"
 14896      1B1C1D1E 
 14896      1F002021 
 14896      22232425 
 14896      25252525 
 14897 002e 25       		.ascii	"%"
 14898              		.section	.rodata.linear_key_map.9303,"a"
 14899              		.align	2
 14900              		.set	.LANCHOR1,. + 0
 14903              	linear_key_map.9303:
 14904 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\"\"\"\011\012\013"
 14904      04050607 
ARM GAS  /tmp/ccK8gYGY.s 			page 403


 14904      08222222 
 14904      090A0B
 14905 000f 0C0D000E 		.ascii	"\014\015\000\016\017\020\021\022\000\023\024\025\026"
 14905      0F101112 
 14905      00131415 
 14905      16
 14906 001c 17001819 		.ascii	"\027\000\030\031\032\033\034\000\035\036\037 !\"\"\""
 14906      1A1B1C00 
 14906      1D1E1F20 
 14906      21222222 
 14907 002c 040522   		.ascii	"\004\005\""
 14908              		.section	.rodata.map.9315,"a"
 14909              		.align	2
 14910              		.set	.LANCHOR5,. + 0
 14913              	map.9315:
 14914 0000 E8E9EAEB 		.ascii	"\350\351\352\353\377\177\177\177mnol\377\377\377\377"
 14914      FF7F7F7F 
 14914      6D6E6F6C 
 14914      FFFFFFFF 
 14915 0010 FF7F0708 		.ascii	"\377\177\007\010\011\177\177\347\005\006\177\177\344"
 14915      097F7FE7 
 14915      05067F7F 
 14915      E4
 14916 001d E5E67FFF 		.ascii	"\345\346\177\377\000\360\177\177\377\377\377\377\377"
 14916      00F07F7F 
 14916      FFFFFFFF 
 14916      FF
 14917 002a FF       		.ascii	"\377"
 14918              		.section	.rodata.matrix_catalogue,"a"
 14919              		.align	2
 14922              	matrix_catalogue:
 14923 0000 66DDD364 		.ascii	"f\335\323d\3305\335\263m\225s\031g-\332sY\246q\334f"
 14923      D835DDB3 
 14923      6D957319 
 14923      672DDA73 
 14923      59A671DC 
 14924 0015 59865C   		.ascii	"Y\206\\"
 14925              		.section	.rodata.mode_catalogue,"a"
 14926              		.align	2
 14929              	mode_catalogue:
 14930 0000 2948C290 		.ascii	")H\302\220\213\307Fc\364\376@\017\363\250\351\037\210"
 14930      8BC74663 
 14930      F4FE400F 
 14930      F3A8E91F 
 14930      88
 14931 0011 01FC7CC0 		.ascii	"\001\374|\300\211\204\011\001\030\314\362D\234&\306"
 14931      89840901 
 14931      18CCF244 
 14931      9C26C6
 14932 0020 21949324 		.ascii	"!\224\223$\211\241\223*!\010<\277&\"\010s \2461\014"
 14932      89A1932A 
 14932      21083CBF 
 14932      26220873 
 14932      20A6310C 
 14933 0034 7324A731 		.ascii	"s$\2471Lb8\316\016\003\234\244\206!H\3348\363<\211\220"
 14933      4C6238CE 
 14933      0E039CA4 
ARM GAS  /tmp/ccK8gYGY.s 			page 404


 14933      862148DC 
 14933      38F33C89 
 14934              		.section	.rodata.op_map.9387,"a"
 14935              		.align	2
 14936              		.set	.LANCHOR2,. + 0
 14939              	op_map.9387:
 14940 0000 1500     		.short	21
 14941 0002 0B02     		.short	523
 14942 0004 0003     		.short	768
 14943 0006 0A02     		.short	522
 14944 0008 1300     		.short	19
 14945 000a 1400     		.short	20
 14946 000c 0300     		.short	3
 14947 000e 0A00     		.short	10
 14948 0010 0701     		.short	263
 14949 0012 0000     		.short	0
 14950 0014 6531     		.short	12645
 14951 0016 0300     		.short	3
 14952 0018 0200     		.short	2
 14953 001a 0100     		.short	1
 14954 001c 4400     		.short	68
 14955 001e 0C00     		.short	12
 14956 0020 0D00     		.short	13
 14957 0022 0E00     		.short	14
 14958 0024 0403     		.short	772
 14959 0026 2F00     		.short	47
 14960 0028 0900     		.short	9
 14961 002a 0A00     		.short	10
 14962 002c 0B00     		.short	11
 14963 002e 0303     		.short	771
 14964 0030 2E00     		.short	46
 14965 0032 0600     		.short	6
 14966 0034 0700     		.short	7
 14967 0036 0800     		.short	8
 14968 0038 0203     		.short	770
 14969 003a 3300     		.short	51
 14970 003c 0500     		.short	5
 14971 003e 0400     		.short	4
 14972 0040 3B01     		.short	315
 14973 0042 0103     		.short	769
 14974 0044 0001     		.short	256
 14975              		.section	.rodata.op_map.9410,"a"
 14976              		.align	2
 14977              		.set	.LANCHOR3,. + 0
 14980              	op_map.9410:
 14981 0000 0100     		.short	1
 14982 0002 0000     		.short	0
 14983 0004 20F2     		.short	-3552
 14984 0006 23F2     		.short	-3549
 14985 0008 21F2     		.short	-3551
 14986 000a 24F2     		.short	-3548
 14987 000c 22F2     		.short	-3550
 14988 000e 25F2     		.short	-3547
 14989 0010 47F1     		.short	-3769
 14990 0012 46F1     		.short	-3770
 14991 0014 4E01     		.short	334
 14992 0016 4D01     		.short	333
ARM GAS  /tmp/ccK8gYGY.s 			page 405


 14993 0018 5C01     		.short	348
 14994 001a 35F1     		.short	-3787
 14995 001c 5B01     		.short	347
 14996 001e 36F1     		.short	-3786
 14997 0020 3301     		.short	307
 14998 0022 37F1     		.short	-3785
 14999 0024 3300     		.short	51
 15000 0026 0C01     		.short	268
 15001 0028 2B00     		.short	43
 15002 002a 2C00     		.short	44
 15003 002c 028B     		.short	-29950
 15004 002e 088B     		.short	-29944
 15005 0030 0A8B     		.short	-29942
 15006 0032 108B     		.short	-29936
 15007 0034 4301     		.short	323
 15008 0036 3D01     		.short	317
 15009 0038 0902     		.short	521
 15010 003a 0802     		.short	520
 15011 003c 1002     		.short	528
 15012 003e 0D02     		.short	525
 15013 0040 0F02     		.short	527
 15014 0042 0E02     		.short	526
 15015 0044 0003     		.short	768
 15016 0046 0803     		.short	776
 15017 0048 0BF2     		.short	-3573
 15018 004a 1603     		.short	790
 15019 004c 1203     		.short	786
 15020 004e 1303     		.short	787
 15021 0050 3DF2     		.short	-3523
 15022 0052 3EF2     		.short	-3522
 15023 0054 24F1     		.short	-3804
 15024 0056 1EF1     		.short	-3810
 15025 0058 75F2     		.short	-3467
 15026 005a 27F1     		.short	-3801
 15027 005c 0A02     		.short	522
 15028 005e 1602     		.short	534
 15029 0060 5100     		.short	81
 15030 0062 5200     		.short	82
 15031 0064 0000     		.short	0
 15032 0066 0100     		.short	1
 15033 0068 48F0     		.short	-4024
 15034 006a 4BF0     		.short	-4021
 15035 006c 47F0     		.short	-4025
 15036 006e 46F0     		.short	-4026
 15037 0070 77F2     		.short	-3465
 15038 0072 78F2     		.short	-3464
 15039 0074 3300     		.short	51
 15040 0076 3300     		.short	51
 15041 0078 0502     		.short	517
 15042 007a 0602     		.short	518
 15043 007c 0402     		.short	516
 15044 007e 0002     		.short	512
 15045 0080 4200     		.short	66
 15046 0082 3801     		.short	312
 15047 0084 3A00     		.short	58
 15048 0086 3B00     		.short	59
 15049 0088 0001     		.short	256
ARM GAS  /tmp/ccK8gYGY.s 			page 406


 15050 008a 0001     		.short	256
 15051              		.section	.rodata.op_map.9433,"a"
 15052              		.align	2
 15053              		.set	.LANCHOR0,. + 0
 15056              	op_map.9433:
 15057 0000 4C80     		.short	-32692
 15058 0002 4D80     		.short	-32691
 15059 0004 4E80     		.short	-32690
 15060 0006 4F80     		.short	-32689
 15061 0008 3300     		.short	51
 15062 000a 3300     		.short	51
 15063 000c 3300     		.short	51
 15064 000e 2180     		.short	-32735
 15065 0010 0801     		.short	264
 15066 0012 8780     		.short	-32633
 15067 0014 1180     		.short	-32751
 15068 0016 7C02     		.short	636
 15069 0018 6660     		.short	24678
 15070 001a 3F01     		.short	319
 15071 001c 4580     		.short	-32699
 15072 001e 1C03     		.short	796
 15073 0020 1D03     		.short	797
 15074 0022 1E03     		.short	798
 15075 0024 0603     		.short	774
 15076 0026 2F02     		.short	559
 15077 0028 3300     		.short	51
 15078 002a 3300     		.short	51
 15079 002c 3300     		.short	51
 15080 002e 3300     		.short	51
 15081 0030 3300     		.short	51
 15082 0032 3300     		.short	51
 15083 0034 3300     		.short	51
 15084 0036 3300     		.short	51
 15085 0038 1640     		.short	16406
 15086 003a 0201     		.short	258
 15087 003c 6D80     		.short	-32659
 15088 003e 5001     		.short	336
 15089 0040 3300     		.short	51
 15090 0042 1540     		.short	16405
 15091 0044 0001     		.short	256
 15092              		.section	.rodata.op_map.9488,"a"
 15093              		.align	2
 15094              		.set	.LANCHOR7,. + 0
 15097              	op_map.9488:
 15098 0000 0100     		.short	1
 15099 0002 0100     		.short	1
 15100 0004 0000     		.short	0
 15101 0006 0000     		.short	0
 15102 0008 0B05     		.short	1291
 15103 000a 2005     		.short	1312
 15104 000c 2305     		.short	1315
 15105 000e 3300     		.short	51
 15106 0010 0006     		.short	1536
 15107 0012 2105     		.short	1313
 15108 0014 2405     		.short	1316
 15109 0016 3300     		.short	51
 15110 0018 0A05     		.short	1290
ARM GAS  /tmp/ccK8gYGY.s 			page 407


 15111 001a 2205     		.short	1314
 15112 001c 2505     		.short	1317
 15113 001e 3300     		.short	51
 15114 0020 3300     		.short	51
 15115 0022 4701     		.short	327
 15116 0024 4601     		.short	326
 15117 0026 3300     		.short	51
 15118 0028 3300     		.short	51
 15119 002a 3300     		.short	51
 15120 002c 3300     		.short	51
 15121 002e 3300     		.short	51
 15122 0030 15FF     		.short	-235
 15123 0032 3300     		.short	51
 15124 0034 3300     		.short	51
 15125 0036 3300     		.short	51
 15126 0038 1AFF     		.short	-230
 15127 003a 3300     		.short	51
 15128 003c 3300     		.short	51
 15129 003e 8CFF     		.short	-116
 15130 0040 0901     		.short	265
 15131 0042 3300     		.short	51
 15132 0044 3300     		.short	51
 15133 0046 0A01     		.short	266
 15134 0048 0B01     		.short	267
 15135 004a 3300     		.short	51
 15136 004c 0D01     		.short	269
 15137 004e 0D01     		.short	269
 15138 0050 663F     		.short	16230
 15139 0052 3300     		.short	51
 15140 0054 3300     		.short	51
 15141 0056 1FFF     		.short	-225
 15142 0058 3805     		.short	1336
 15143 005a 3300     		.short	51
 15144 005c 3300     		.short	51
 15145 005e 3905     		.short	1337
 15146 0060 6621     		.short	8550
 15147 0062 3300     		.short	51
 15148 0064 3300     		.short	51
 15149 0066 6621     		.short	8550
 15150 0068 3300     		.short	51
 15151 006a 3300     		.short	51
 15152 006c 3300     		.short	51
 15153 006e 3300     		.short	51
 15154 0070 3300     		.short	51
 15155 0072 0905     		.short	1289
 15156 0074 0805     		.short	1288
 15157 0076 3300     		.short	51
 15158 0078 07A8     		.short	-22521
 15159 007a 1005     		.short	1296
 15160 007c 0D05     		.short	1293
 15161 007e 3300     		.short	51
 15162 0080 08A8     		.short	-22520
 15163 0082 0F05     		.short	1295
 15164 0084 0E05     		.short	1294
 15165 0086 3300     		.short	51
 15166 0088 09A8     		.short	-22519
 15167 008a 0006     		.short	1536
ARM GAS  /tmp/ccK8gYGY.s 			page 408


 15168 008c 0806     		.short	1544
 15169 008e 3300     		.short	51
 15170 0090 0406     		.short	1540
 15171 0092 0B05     		.short	1291
 15172 0094 1606     		.short	1558
 15173 0096 3300     		.short	51
 15174 0098 3300     		.short	51
 15175 009a 1206     		.short	1554
 15176 009c 1306     		.short	1555
 15177 009e 2F05     		.short	1327
 15178 00a0 04A8     		.short	-22524
 15179 00a2 3300     		.short	51
 15180 00a4 3300     		.short	51
 15181 00a6 3300     		.short	51
 15182 00a8 05A8     		.short	-22523
 15183 00aa 3300     		.short	51
 15184 00ac 3300     		.short	51
 15185 00ae 3300     		.short	51
 15186 00b0 06A8     		.short	-22522
 15187 00b2 3300     		.short	51
 15188 00b4 3300     		.short	51
 15189 00b6 3300     		.short	51
 15190 00b8 0306     		.short	1539
 15191 00ba 0A05     		.short	1290
 15192 00bc 1605     		.short	1302
 15193 00be 1605     		.short	1302
 15194 00c0 3300     		.short	51
 15195 00c2 3300     		.short	51
 15196 00c4 3300     		.short	51
 15197 00c6 3300     		.short	51
 15198 00c8 01A8     		.short	-22527
 15199 00ca 0000     		.short	0
 15200 00cc 0100     		.short	1
 15201 00ce 3300     		.short	51
 15202 00d0 02A8     		.short	-22526
 15203 00d2 3300     		.short	51
 15204 00d4 3300     		.short	51
 15205 00d6 3300     		.short	51
 15206 00d8 03A8     		.short	-22525
 15207 00da 3300     		.short	51
 15208 00dc 3300     		.short	51
 15209 00de 3300     		.short	51
 15210 00e0 0206     		.short	1538
 15211 00e2 3300     		.short	51
 15212 00e4 3300     		.short	51
 15213 00e6 3300     		.short	51
 15214 00e8 3300     		.short	51
 15215 00ea 3300     		.short	51
 15216 00ec 3300     		.short	51
 15217 00ee 0201     		.short	258
 15218 00f0 00A8     		.short	-22528
 15219 00f2 0505     		.short	1285
 15220 00f4 0605     		.short	1286
 15221 00f6 3300     		.short	51
 15222 00f8 B801     		.short	440
 15223 00fa 0405     		.short	1284
 15224 00fc 0005     		.short	1280
ARM GAS  /tmp/ccK8gYGY.s 			page 409


 15225 00fe 3300     		.short	51
 15226 0100 CF01     		.short	463
 15227 0102 3300     		.short	51
 15228 0104 3300     		.short	51
 15229 0106 3300     		.short	51
 15230 0108 0106     		.short	1537
 15231 010a 3300     		.short	51
 15232 010c 3300     		.short	51
 15233 010e 3300     		.short	51
 15234 0110 0001     		.short	256
 15235 0112 0001     		.short	256
 15236 0114 0001     		.short	256
 15237 0116 0001     		.short	256
 15238              		.section	.rodata.op_map.9500,"a"
 15239              		.align	2
 15240              		.set	.LANCHOR19,. + 0
 15243              	op_map.9500:
 15244 0000 2A27     		.ascii	"*'"
 15245 0002 2B28     		.ascii	"+("
 15246 0004 2C29     		.ascii	",)"
 15247              		.section	.rodata.op_map.9514,"a"
 15248              		.align	2
 15249              		.set	.LANCHOR20,. + 0
 15252              	op_map.9514:
 15253 0000 1A02     		.short	538
 15254 0002 7B02     		.short	635
 15255 0004 1B02     		.short	539
 15256 0006 7A02     		.short	634
 15257 0008 1C02     		.short	540
 15258 000a 3300     		.short	51
 15259              		.section	.rodata.op_map2.9411,"a"
 15260              		.align	2
 15261              		.set	.LANCHOR4,. + 0
 15264              	op_map2.9411:
 15265 0000 3300     		.short	51
 15266 0002 3300     		.short	51
 15267 0004 0003     		.short	768
 15268 0006 0A02     		.short	522
 15269              		.section	.rodata.opcode_breaks,"a"
 15270              		.align	2
 15271              		.set	.LANCHOR13,. + 0
 15274              	opcode_breaks:
 15275 0000 34D09C35 		.ascii	"4\320\2345\014\2345"
 15275      0C9C35
 15276              		.section	.rodata.prob_catalogue,"a"
 15277              		.align	2
 15280              	prob_catalogue:
 15281 0000 54D525C1 		.ascii	"T\325%\301TZ\026u\335iT\024\365\275QRV\325)KW\025\265"
 15281      545A1675 
 15281      DD695414 
 15281      F5BD5152 
 15281      56D5294B 
 15282 0017 CD5D5896 		.ascii	"\315]X\226\025\325cYVE\331fW\325\345\321`VU\205\311"
 15282      15D56359 
 15282      5645D966 
 15282      57D5E5D1 
 15282      60565585 
ARM GAS  /tmp/ccK8gYGY.s 			page 410


 15283 002c 5A559555 		.ascii	"ZU\225U\305WQ\226\305\035HST\305\271NZ\224\005\021E"
 15283      C5575196 
 15283      C51D4853 
 15283      54C5B94E 
 15283      5A940511 
 15284 0041 50D6B0   		.ascii	"P\326\260"
 15285              		.section	.rodata.prog_catalogue,"a"
 15286              		.align	2
 15289              	prog_catalogue:
 15290 0000 BA4D1CF4 		.ascii	"\272M\034\364y\035G\201\310t*3\273\310B\273\257\001"
 15290      791D4781 
 15290      C8742A33 
 15290      BBC842BB 
 15290      AF01
 15291 0012 BAB4C14E 		.ascii	"\272\264\301N\013\356\3743/;\276\361\313\016#\220\347"
 15291      0BEEFC33 
 15291      2F3BBEF1 
 15291      CB0E2390 
 15291      E7
 15292 0023 38CE8CB8 		.ascii	"8\316\214\270\3367r\320\320\3349G\003\233+\265M\361"
 15292      DE3772D0 
 15292      D0DC3947 
 15292      039B2BB5 
 15292      4DF1
 15293 0035 D8CD1B4B 		.ascii	"\330\315\033K\022\274\262,\016\033\240\322\015\355C"
 15293      12BCB22C 
 15293      0E1BA0D2 
 15293      0DED43
 15294 0044 02C62A72 		.ascii	"\002\306*rP\350\313\261,\\\210\256+r\034\340"
 15294      50E8CBB1 
 15294      2C5C88AE 
 15294      2B721CE0 
 15295              		.section	.rodata.program_xfcn,"a"
 15296              		.align	2
 15299              	program_xfcn:
 15300 0000 471B76AF 		.ascii	"G\033v\257\0250X\326;\027A\212#\265\221p\235rY\326\037"
 15300      153058D6 
 15300      3B17418A 
 15300      23B59170 
 15300      9D7259D6 
 15301 0015 521CC842 		.ascii	"R\034\310Ba\031\344\371?d\321f\177\030GPV\3511L\222"
 15301      6119E4F9 
 15301      3F64D166 
 15301      7F184750 
 15301      56E9314C 
 15302 002a 3721C96E 		.ascii	"7!\311n\033\226\225\320\314\035W=\205t\233\262Q\307"
 15302      1B9695D0 
 15302      CC1D573D 
 15302      85749BB2 
 15302      51C7
 15303 003c 455D96B5 		.ascii	"E]\226\2655d\261\274q\252jX&\235\220o\330\0278\303p"
 15303      3564B1BC 
 15303      71AA6A58 
 15303      269D906F 
 15303      D81738C3 
 15304 0051 1C448B28 		.ascii	"\034D\213(%p\374E\007\3041,\237\026\310\362A\241\013"
 15304      2570FC45 
ARM GAS  /tmp/ccK8gYGY.s 			page 411


 15304      07C4312C 
 15304      9F16C8F2 
 15304      41A10B
 15305 0064 4AB1330B 		.ascii	"J\2613\013\024\314J7\025\224q\203V\014\312F\021te\033"
 15305      14CC4A37 
 15305      15947183 
 15305      560CCA46 
 15305      1174651B 
 15306 0078 704AC729 		.ascii	"pJ\307)\217tJ\002z\332*\211\373f\327\266\355\313v\336"
 15306      8F744A02 
 15306      7ADA2A89 
 15306      FB66D7B6 
 15306      EDCB76DE 
 15307 008c B60A12AD 		.ascii	"\266\012\022\255\254M\033\006\305\256k\33461\235D\035"
 15307      AC4D1B06 
 15307      C5AE6BDC 
 15307      36319D44 
 15307      1D
 15308 009d F779B576 		.ascii	"\367y\265v\027\325\351\264x\000"
 15308      17D5E9B4 
 15308      7800
 15309              		.section	.rodata.smap.9335,"a"
 15310              		.align	2
 15311              		.set	.LANCHOR22,. + 0
 15314              	smap.9335:
 15315 0000 00010002 		.ascii	"\000\001\000\002"
 15316              		.section	.rodata.stats_catalogue,"a"
 15317              		.align	2
 15320              	stats_catalogue:
 15321 0000 1805C1A0 		.ascii	"\030\005\301\240]\027\311qXa\026\205\225\340T\027\205"
 15321      5D17C971 
 15321      58611685 
 15321      95E05417 
 15321      85
 15322 0011 514C575E 		.ascii	"QLW^\200"
 15322      80
 15323              		.section	.rodata.sums_catalogue,"a"
 15324              		.align	2
 15327              	sums_catalogue:
 15328 0000 1444B134 		.ascii	"\024D\2614J\023\204\301 E\021\004\361\034I\021\205\000"
 15328      4A1384C1 
 15328      20451104 
 15328      F11C4911 
 15328      8500
 15329              		.section	.rodata.test_catalogue,"a"
 15330              		.align	2
 15333              	test_catalogue:
 15334 0000 C6B19CDC 		.ascii	"\306\261\234\334\353/\313\334\037\013\303p\302\363\006"
 15334      EB2FCBDC 
 15334      1F0BC370 
 15334      C2F306
 15335 000f C230AC24 		.ascii	"\3020\254$\323.\362\013\324\2356\213\202\370\2725\013"
 15335      D32EF20B 
 15335      D49D368B 
 15335      82F8BA35 
 15335      0B
 15336 0020 9340F0B8 		.ascii	"\223@\360\270\2563T\326\270n[\220\267<@"
ARM GAS  /tmp/ccK8gYGY.s 			page 412


 15336      AE3354D6 
 15336      B86E5B90 
 15336      B73C40
 15337              		.text
 15338              	.Letext0:
 15339              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 15340              		.file 3 "dmcp/dmcp.h"
 15341              		.file 4 "src/decNumber/decContext.h"
 15342              		.file 5 "src/decNumber/decNumber.h"
 15343              		.file 6 "src/decNumber/decimal64.h"
 15344              		.file 7 "src/decNumber/decimal128.h"
 15345              		.file 8 "src/xeq.h"
 15346              		.file 9 "src/data.h"
 15347              		.file 10 "src/keys.h"
 15348              		.file 11 "src/menu.h"
 15349              		.file 12 "src/display.h"
 15350              		.file 13 "src/consts.h"
 15351              		.file 14 "src/storage.h"
 15352              		.file 15 "src/stats.h"
 15353              		.file 16 "src/catalogues.h"
 15354              		.file 17 "src/lcd.h"
 15355              		.file 18 "src/int.h"
 15356              		.file 19 "src/decn.h"
ARM GAS  /tmp/ccK8gYGY.s 			page 413


DEFINED SYMBOLS
                            *ABS*:0000000000000000 keys.c
     /tmp/ccK8gYGY.s:18     .text.gtodot_digit:0000000000000000 $t
     /tmp/ccK8gYGY.s:26     .text.gtodot_digit:0000000000000000 gtodot_digit
     /tmp/ccK8gYGY.s:110    .text.gtodot_digit:0000000000000054 $d
     /tmp/ccK8gYGY.s:117    .text.check_f_key:0000000000000000 $t
     /tmp/ccK8gYGY.s:124    .text.check_f_key:0000000000000000 check_f_key
     /tmp/ccK8gYGY.s:202    .text.check_f_key:0000000000000038 $d
     /tmp/ccK8gYGY.s:208    .text.is_label_or_end_at:0000000000000000 $t
     /tmp/ccK8gYGY.s:215    .text.is_label_or_end_at:0000000000000000 is_label_or_end_at
     /tmp/ccK8gYGY.s:271    .text.advance_to_next_label:0000000000000000 $t
     /tmp/ccK8gYGY.s:278    .text.advance_to_next_label:0000000000000000 advance_to_next_label
     /tmp/ccK8gYGY.s:359    .text.advance_to_next_label:0000000000000048 $d
     /tmp/ccK8gYGY.s:364    .text.init_cat:0000000000000000 $t
     /tmp/ccK8gYGY.s:371    .text.init_cat:0000000000000000 init_cat
     /tmp/ccK8gYGY.s:684    .text.init_cat:00000000000000e4 $d
     /tmp/ccK8gYGY.s:690    .text.advance_to_previous_label:0000000000000000 $t
     /tmp/ccK8gYGY.s:697    .text.advance_to_previous_label:0000000000000000 advance_to_previous_label
     /tmp/ccK8gYGY.s:782    .text.advance_to_previous_label:000000000000004c $d
     /tmp/ccK8gYGY.s:787    .text.check_confirm.part.0:0000000000000000 $t
     /tmp/ccK8gYGY.s:794    .text.check_confirm.part.0:0000000000000000 check_confirm.part.0
     /tmp/ccK8gYGY.s:865    .text.check_confirm.part.0:0000000000000030 $d
                            *COM*:0000000000000004 NonProgrammable
     /tmp/ccK8gYGY.s:872    .text.init_arg.part.0:0000000000000000 $t
     /tmp/ccK8gYGY.s:879    .text.init_arg.part.0:0000000000000000 init_arg.part.0
     /tmp/ccK8gYGY.s:921    .text.init_arg.part.0:0000000000000024 $d
     /tmp/ccK8gYGY.s:926    .text.reset_arg:0000000000000000 $t
     /tmp/ccK8gYGY.s:933    .text.reset_arg:0000000000000000 reset_arg
     /tmp/ccK8gYGY.s:977    .text.reset_arg:0000000000000018 $d
     /tmp/ccK8gYGY.s:982    .text.arg_eval:0000000000000000 $t
     /tmp/ccK8gYGY.s:989    .text.arg_eval:0000000000000000 arg_eval
     /tmp/ccK8gYGY.s:1134   .text.arg_eval:0000000000000090 $d
     /tmp/ccK8gYGY.s:1141   .text.arg_digit:0000000000000000 $t
     /tmp/ccK8gYGY.s:1148   .text.arg_digit:0000000000000000 arg_digit
     /tmp/ccK8gYGY.s:1409   .text.arg_digit:00000000000000fc $d
     /tmp/ccK8gYGY.s:1417   .text.process_arg_shuffle:0000000000000000 $t
     /tmp/ccK8gYGY.s:1424   .text.process_arg_shuffle:0000000000000000 process_arg_shuffle
     /tmp/ccK8gYGY.s:1482   .text.process_arg_shuffle:000000000000002c $d
     /tmp/ccK8gYGY.s:1487   .text.process_h_shifted:0000000000000000 $t
     /tmp/ccK8gYGY.s:1494   .text.process_h_shifted:0000000000000000 process_h_shifted
     /tmp/ccK8gYGY.s:1742   .text.process_h_shifted:00000000000000c8 $d
     /tmp/ccK8gYGY.s:1750   .text.intltr:0000000000000000 $t
     /tmp/ccK8gYGY.s:1757   .text.intltr:0000000000000000 intltr
     /tmp/ccK8gYGY.s:1820   .text.intltr:0000000000000030 $d
     /tmp/ccK8gYGY.s:1826   .text.process_normal:0000000000000000 $t
     /tmp/ccK8gYGY.s:1833   .text.process_normal:0000000000000000 process_normal
     /tmp/ccK8gYGY.s:1894   .text.process_normal:0000000000000022 $d
     /tmp/ccK8gYGY.s:1940   .text.process_normal:000000000000007e $t
     /tmp/ccK8gYGY.s:1989   .text.process_normal:00000000000000ac $d
     /tmp/ccK8gYGY.s:2008   .text.process_normal:00000000000000f8 $t
     /tmp/ccK8gYGY.s:2019   .text.process_normal:0000000000000104 $d
     /tmp/ccK8gYGY.s:2062   .text.process_normal:00000000000001b0 $t
     /tmp/ccK8gYGY.s:2263   .text.process_normal:0000000000000264 $d
     /tmp/ccK8gYGY.s:2272   .text.process_fg_shifted:0000000000000000 $t
     /tmp/ccK8gYGY.s:2279   .text.process_fg_shifted:0000000000000000 process_fg_shifted
     /tmp/ccK8gYGY.s:2407   .text.process_fg_shifted:000000000000003e $d
     /tmp/ccK8gYGY.s:2606   .text.process_fg_shifted:000000000000010c $d
ARM GAS  /tmp/ccK8gYGY.s 			page 414


     /tmp/ccK8gYGY.s:2647   .text.process_fg_shifted:00000000000001b0 $t
     /tmp/ccK8gYGY.s:2843   .text.process_fg_shifted:0000000000000294 $d
     /tmp/ccK8gYGY.s:2852   .text.set_window:0000000000000000 $t
     /tmp/ccK8gYGY.s:2859   .text.set_window:0000000000000000 set_window
     /tmp/ccK8gYGY.s:3006   .text.set_window:000000000000008c $d
     /tmp/ccK8gYGY.s:3013   .text.arg_storcl:0000000000000000 $t
     /tmp/ccK8gYGY.s:3020   .text.arg_storcl:0000000000000000 arg_storcl
     /tmp/ccK8gYGY.s:3136   .text.arg_storcl:0000000000000040 $d
     /tmp/ccK8gYGY.s:3141   .text.process_arg:0000000000000000 $t
     /tmp/ccK8gYGY.s:3148   .text.process_arg:0000000000000000 process_arg
     /tmp/ccK8gYGY.s:3354   .text.process_arg:000000000000008a $d
     /tmp/ccK8gYGY.s:3358   .text.process_arg:0000000000000090 $t
     /tmp/ccK8gYGY.s:3447   .text.process_arg:00000000000000f0 $d
     /tmp/ccK8gYGY.s:3494   .text.process_arg:00000000000001a8 $t
     /tmp/ccK8gYGY.s:3897   .text.process_arg:000000000000032c $d
     /tmp/ccK8gYGY.s:3906   .text.process_arg:0000000000000340 $t
     /tmp/ccK8gYGY.s:4397   .text.process_arg:000000000000054c $d
     /tmp/ccK8gYGY.s:4402   .text.cur_shift:0000000000000000 $t
     /tmp/ccK8gYGY.s:4410   .text.cur_shift:0000000000000000 cur_shift
     /tmp/ccK8gYGY.s:4438   .text.cur_shift:0000000000000010 $d
     /tmp/ccK8gYGY.s:4443   .text.reset_shift:0000000000000000 $t
     /tmp/ccK8gYGY.s:4451   .text.reset_shift:0000000000000000 reset_shift
     /tmp/ccK8gYGY.s:4509   .text.reset_shift:0000000000000014 $d
     /tmp/ccK8gYGY.s:4514   .text.keycode_to_row_column:0000000000000000 $t
     /tmp/ccK8gYGY.s:4522   .text.keycode_to_row_column:0000000000000000 keycode_to_row_column
     /tmp/ccK8gYGY.s:4550   .text.keycode_to_row_column:0000000000000020 $d
     /tmp/ccK8gYGY.s:4555   .text.row_column_to_keycode:0000000000000000 $t
     /tmp/ccK8gYGY.s:4563   .text.row_column_to_keycode:0000000000000000 row_column_to_keycode
     /tmp/ccK8gYGY.s:4621   .text.row_column_to_keycode:000000000000003c $d
     /tmp/ccK8gYGY.s:4626   .text.keycode_to_digit_or_register:0000000000000000 $t
     /tmp/ccK8gYGY.s:4634   .text.keycode_to_digit_or_register:0000000000000000 keycode_to_digit_or_register
     /tmp/ccK8gYGY.s:4670   .text.keycode_to_digit_or_register:000000000000000c $d
     /tmp/ccK8gYGY.s:4676   .text.init_state:0000000000000000 $t
     /tmp/ccK8gYGY.s:4684   .text.init_state:0000000000000000 init_state
     /tmp/ccK8gYGY.s:4800   .text.init_state:0000000000000074 $d
     /tmp/ccK8gYGY.s:4807   .text.process_cmplx:0000000000000000 $t
     /tmp/ccK8gYGY.s:4814   .text.process_cmplx:0000000000000000 process_cmplx
     /tmp/ccK8gYGY.s:5170   .text.process_cmplx:00000000000000c4 $d
     /tmp/ccK8gYGY.s:5177   .text.soft_init_state:0000000000000000 $t
     /tmp/ccK8gYGY.s:5185   .text.soft_init_state:0000000000000000 soft_init_state
     /tmp/ccK8gYGY.s:5280   .text.soft_init_state:0000000000000048 $d
     /tmp/ccK8gYGY.s:5286   .text.finish_cpx_entry:0000000000000000 $t
     /tmp/ccK8gYGY.s:5294   .text.finish_cpx_entry:0000000000000000 finish_cpx_entry
     /tmp/ccK8gYGY.s:5460   .text.finish_cpx_entry:00000000000000bc $d
     /tmp/ccK8gYGY.s:5467   .text.stack_begin:0000000000000000 $t
     /tmp/ccK8gYGY.s:5475   .text.stack_begin:0000000000000000 stack_begin
     /tmp/ccK8gYGY.s:5615   .text.stack_begin:00000000000000b4 $d
     /tmp/ccK8gYGY.s:5621   .text.current_catalogue_max:0000000000000000 $t
     /tmp/ccK8gYGY.s:5629   .text.current_catalogue_max:0000000000000000 current_catalogue_max
     /tmp/ccK8gYGY.s:5650   .text.current_catalogue_max:000000000000000c $d
     /tmp/ccK8gYGY.s:5656   .text.current_catalogue:0000000000000000 $t
     /tmp/ccK8gYGY.s:5664   .text.current_catalogue:0000000000000000 current_catalogue
     /tmp/ccK8gYGY.s:5920   .text.current_catalogue:00000000000000c8 $d
     /tmp/ccK8gYGY.s:5930   .text.process_catalogue:0000000000000000 $t
     /tmp/ccK8gYGY.s:5937   .text.process_catalogue:0000000000000000 process_catalogue
     /tmp/ccK8gYGY.s:6266   .text.process_catalogue:00000000000000fe $d
     /tmp/ccK8gYGY.s:6298   .text.process_catalogue:000000000000011e $t
ARM GAS  /tmp/ccK8gYGY.s 			page 415


     /tmp/ccK8gYGY.s:6806   .text.process_catalogue:00000000000002dc $d
     /tmp/ccK8gYGY.s:6827   .text.process_catalogue:00000000000002fc $t
     /tmp/ccK8gYGY.s:6857   .text.find_pos:0000000000000000 $t
     /tmp/ccK8gYGY.s:6865   .text.find_pos:0000000000000000 find_pos
     /tmp/ccK8gYGY.s:7038   .text.find_pos:0000000000000080 $d
     /tmp/ccK8gYGY.s:7044   .text.get_alpha_state:0000000000000000 $t
     /tmp/ccK8gYGY.s:7052   .text.get_alpha_state:0000000000000000 get_alpha_state
     /tmp/ccK8gYGY.s:7084   .text.get_alpha_state:0000000000000020 $d
     /tmp/ccK8gYGY.s:7090   .rodata.process_keycode.str1.4:0000000000000000 $d
     /tmp/ccK8gYGY.s:7100   .text.process_keycode:0000000000000000 $t
     /tmp/ccK8gYGY.s:7108   .text.process_keycode:0000000000000000 process_keycode
     /tmp/ccK8gYGY.s:7727   .text.process_keycode:00000000000002e0 $d
                            *COM*:0000000000000004 OpCode
                            *COM*:0000000000000004 GoFast
                            *COM*:0000000000000004 OpCodeDisplayPending
                            *COM*:0000000000000004 WasDataEntry
     /tmp/ccK8gYGY.s:7750   .text.process_keycode:0000000000000320 $t
     /tmp/ccK8gYGY.s:7949   .text.process_keycode:00000000000003f0 $d
     /tmp/ccK8gYGY.s:7958   .text.process_keycode:0000000000000414 $t
     /tmp/ccK8gYGY.s:8433   .text.process_keycode:0000000000000610 $d
                            *COM*:0000000000000004 nd_opcode
     /tmp/ccK8gYGY.s:8453   .text.process_keycode:000000000000064c $t
     /tmp/ccK8gYGY.s:8494   .text.process_keycode:0000000000000672 $d
     /tmp/ccK8gYGY.s:8521   .text.process_keycode:000000000000068c $t
     /tmp/ccK8gYGY.s:8650   .text.process_keycode:000000000000071c $d
     /tmp/ccK8gYGY.s:8654   .text.process_keycode:000000000000072c $t
     /tmp/ccK8gYGY.s:9237   .text.process_keycode:000000000000095c $d
     /tmp/ccK8gYGY.s:9257   .text.process_keycode:0000000000000984 $t
     /tmp/ccK8gYGY.s:9664   .text.process_keycode:0000000000000ad4 $d
     /tmp/ccK8gYGY.s:9694   .text.process_keycode:0000000000000b4c $t
     /tmp/ccK8gYGY.s:10157  .text.process_keycode:0000000000000ce0 $d
     /tmp/ccK8gYGY.s:10175  .text.process_keycode:0000000000000d04 $t
     /tmp/ccK8gYGY.s:10446  .text.process_keycode:0000000000000dd8 $d
     /tmp/ccK8gYGY.s:10481  .text.process_keycode:0000000000000e64 $t
     /tmp/ccK8gYGY.s:10751  .text.process_keycode:0000000000000f68 $d
     /tmp/ccK8gYGY.s:10771  .text.process_keycode:0000000000000fb8 $t
     /tmp/ccK8gYGY.s:10976  .text.process_keycode:000000000000105c $d
     /tmp/ccK8gYGY.s:10994  .text.process_keycode:00000000000010a4 $t
     /tmp/ccK8gYGY.s:11029  .text.process_keycode:00000000000010d4 $d
     /tmp/ccK8gYGY.s:11036  .text.process_keycode:00000000000010e0 $t
     /tmp/ccK8gYGY.s:11540  .text.process_keycode:0000000000001260 $d
     /tmp/ccK8gYGY.s:11575  .text.process_keycode:00000000000012a4 $t
     /tmp/ccK8gYGY.s:11697  .text.process_keycode:0000000000001308 $d
     /tmp/ccK8gYGY.s:11732  .text.process_keycode:0000000000001390 $t
     /tmp/ccK8gYGY.s:12028  .text.process_keycode:00000000000014e8 $d
     /tmp/ccK8gYGY.s:12035  .text.process_keycode:00000000000014f8 $t
     /tmp/ccK8gYGY.s:12219  .text.process_keycode:00000000000015c0 $d
     /tmp/ccK8gYGY.s:12262  .text.process_keycode:0000000000001614 $t
     /tmp/ccK8gYGY.s:12986  .text.process_keycode:00000000000018ec $d
     /tmp/ccK8gYGY.s:13012  .text.process_keycode:0000000000001954 $t
     /tmp/ccK8gYGY.s:13156  .text.process_keycode:00000000000019f0 $d
     /tmp/ccK8gYGY.s:13190  .text.process_keycode:00000000000019fc $t
     /tmp/ccK8gYGY.s:14389  .text.process_keycode:0000000000001d78 $d
     /tmp/ccK8gYGY.s:14398  .text.process_keycode_with_shift:0000000000000000 $t
     /tmp/ccK8gYGY.s:14406  .text.process_keycode_with_shift:0000000000000000 process_keycode_with_shift
     /tmp/ccK8gYGY.s:14614  .text.process_keycode_with_shift:000000000000008c $d
     /tmp/ccK8gYGY.s:14631  .bss.was_paused.9859:0000000000000000 $d
ARM GAS  /tmp/ccK8gYGY.s 			page 416


     /tmp/ccK8gYGY.s:14635  .bss.was_paused.9859:0000000000000000 was_paused.9859
     /tmp/ccK8gYGY.s:14638  .rodata.alpha_arrows:0000000000000000 $d
     /tmp/ccK8gYGY.s:14641  .rodata.alpha_arrows:0000000000000000 alpha_arrows
     /tmp/ccK8gYGY.s:14644  .rodata.alpha_catalogue:0000000000000000 $d
     /tmp/ccK8gYGY.s:14647  .rodata.alpha_catalogue:0000000000000000 alpha_catalogue
     /tmp/ccK8gYGY.s:14651  .rodata.alpha_compares:0000000000000000 $d
     /tmp/ccK8gYGY.s:14654  .rodata.alpha_compares:0000000000000000 alpha_compares
     /tmp/ccK8gYGY.s:14657  .rodata.alpha_letters:0000000000000000 $d
     /tmp/ccK8gYGY.s:14661  .rodata.alpha_letters:0000000000000000 alpha_letters
     /tmp/ccK8gYGY.s:14667  .rodata.alpha_letters_lower:0000000000000000 $d
     /tmp/ccK8gYGY.s:14671  .rodata.alpha_letters_lower:0000000000000000 alpha_letters_lower
     /tmp/ccK8gYGY.s:14677  .rodata.alpha_subscripts:0000000000000000 $d
     /tmp/ccK8gYGY.s:14680  .rodata.alpha_subscripts:0000000000000000 alpha_subscripts
     /tmp/ccK8gYGY.s:14684  .rodata.alpha_symbols:0000000000000000 $d
     /tmp/ccK8gYGY.s:14687  .rodata.alpha_symbols:0000000000000000 alpha_symbols
     /tmp/ccK8gYGY.s:14690  .rodata.alphamap.9343:0000000000000000 $d
     /tmp/ccK8gYGY.s:14694  .rodata.alphamap.9343:0000000000000000 alphamap.9343
     /tmp/ccK8gYGY.s:14734  .rodata.amap.9334:0000000000000000 $d
     /tmp/ccK8gYGY.s:14738  .rodata.amap.9334:0000000000000000 amap.9334
     /tmp/ccK8gYGY.s:14756  .rodata.catalogue:0000000000000000 $d
     /tmp/ccK8gYGY.s:14759  .rodata.catalogue:0000000000000000 catalogue
     /tmp/ccK8gYGY.s:14769  .rodata.catalogue_sizes.9657:0000000000000000 $d
     /tmp/ccK8gYGY.s:14773  .rodata.catalogue_sizes.9657:0000000000000000 catalogue_sizes.9657
     /tmp/ccK8gYGY.s:14776  .rodata.catalogues.9665:0000000000000000 $d
     /tmp/ccK8gYGY.s:14780  .rodata.catalogues.9665:0000000000000000 catalogues.9665
     /tmp/ccK8gYGY.s:14865  .rodata.cplx_catalogue:0000000000000000 cplx_catalogue
     /tmp/ccK8gYGY.s:15320  .rodata.stats_catalogue:0000000000000000 stats_catalogue
     /tmp/ccK8gYGY.s:15280  .rodata.prob_catalogue:0000000000000000 prob_catalogue
     /tmp/ccK8gYGY.s:14883  .rodata.int_catalogue:0000000000000000 int_catalogue
     /tmp/ccK8gYGY.s:15289  .rodata.prog_catalogue:0000000000000000 prog_catalogue
     /tmp/ccK8gYGY.s:15299  .rodata.program_xfcn:0000000000000000 program_xfcn
     /tmp/ccK8gYGY.s:15333  .rodata.test_catalogue:0000000000000000 test_catalogue
     /tmp/ccK8gYGY.s:14929  .rodata.mode_catalogue:0000000000000000 mode_catalogue
     /tmp/ccK8gYGY.s:15327  .rodata.sums_catalogue:0000000000000000 sums_catalogue
     /tmp/ccK8gYGY.s:14922  .rodata.matrix_catalogue:0000000000000000 matrix_catalogue
     /tmp/ccK8gYGY.s:14803  .rodata.cmap.9333:0000000000000000 $d
     /tmp/ccK8gYGY.s:14807  .rodata.cmap.9333:0000000000000000 cmap.9333
     /tmp/ccK8gYGY.s:14833  .rodata.conv_catalogue:0000000000000000 $d
     /tmp/ccK8gYGY.s:14837  .rodata.conv_catalogue:0000000000000000 conv_catalogue
     /tmp/ccK8gYGY.s:14844  .rodata.conv_mapping.9704:0000000000000000 $d
     /tmp/ccK8gYGY.s:14848  .rodata.conv_mapping.9704:0000000000000000 conv_mapping.9704
     /tmp/ccK8gYGY.s:14862  .rodata.cplx_catalogue:0000000000000000 $d
     /tmp/ccK8gYGY.s:14870  .rodata.disp.9515:0000000000000000 $d
     /tmp/ccK8gYGY.s:14874  .rodata.disp.9515:0000000000000000 disp.9515
     /tmp/ccK8gYGY.s:14880  .rodata.int_catalogue:0000000000000000 $d
     /tmp/ccK8gYGY.s:14889  .rodata.linear_key_map.9299:0000000000000000 $d
     /tmp/ccK8gYGY.s:14893  .rodata.linear_key_map.9299:0000000000000000 linear_key_map.9299
     /tmp/ccK8gYGY.s:14899  .rodata.linear_key_map.9303:0000000000000000 $d
     /tmp/ccK8gYGY.s:14903  .rodata.linear_key_map.9303:0000000000000000 linear_key_map.9303
     /tmp/ccK8gYGY.s:14909  .rodata.map.9315:0000000000000000 $d
     /tmp/ccK8gYGY.s:14913  .rodata.map.9315:0000000000000000 map.9315
     /tmp/ccK8gYGY.s:14919  .rodata.matrix_catalogue:0000000000000000 $d
     /tmp/ccK8gYGY.s:14926  .rodata.mode_catalogue:0000000000000000 $d
     /tmp/ccK8gYGY.s:14935  .rodata.op_map.9387:0000000000000000 $d
     /tmp/ccK8gYGY.s:14939  .rodata.op_map.9387:0000000000000000 op_map.9387
     /tmp/ccK8gYGY.s:14976  .rodata.op_map.9410:0000000000000000 $d
     /tmp/ccK8gYGY.s:14980  .rodata.op_map.9410:0000000000000000 op_map.9410
ARM GAS  /tmp/ccK8gYGY.s 			page 417


     /tmp/ccK8gYGY.s:15052  .rodata.op_map.9433:0000000000000000 $d
     /tmp/ccK8gYGY.s:15056  .rodata.op_map.9433:0000000000000000 op_map.9433
     /tmp/ccK8gYGY.s:15093  .rodata.op_map.9488:0000000000000000 $d
     /tmp/ccK8gYGY.s:15097  .rodata.op_map.9488:0000000000000000 op_map.9488
     /tmp/ccK8gYGY.s:15239  .rodata.op_map.9500:0000000000000000 $d
     /tmp/ccK8gYGY.s:15243  .rodata.op_map.9500:0000000000000000 op_map.9500
     /tmp/ccK8gYGY.s:15248  .rodata.op_map.9514:0000000000000000 $d
     /tmp/ccK8gYGY.s:15252  .rodata.op_map.9514:0000000000000000 op_map.9514
     /tmp/ccK8gYGY.s:15260  .rodata.op_map2.9411:0000000000000000 $d
     /tmp/ccK8gYGY.s:15264  .rodata.op_map2.9411:0000000000000000 op_map2.9411
     /tmp/ccK8gYGY.s:15270  .rodata.opcode_breaks:0000000000000000 $d
     /tmp/ccK8gYGY.s:15274  .rodata.opcode_breaks:0000000000000000 opcode_breaks
     /tmp/ccK8gYGY.s:15277  .rodata.prob_catalogue:0000000000000000 $d
     /tmp/ccK8gYGY.s:15286  .rodata.prog_catalogue:0000000000000000 $d
     /tmp/ccK8gYGY.s:15296  .rodata.program_xfcn:0000000000000000 $d
     /tmp/ccK8gYGY.s:15310  .rodata.smap.9335:0000000000000000 $d
     /tmp/ccK8gYGY.s:15314  .rodata.smap.9335:0000000000000000 smap.9335
     /tmp/ccK8gYGY.s:15317  .rodata.stats_catalogue:0000000000000000 $d
     /tmp/ccK8gYGY.s:15324  .rodata.sums_catalogue:0000000000000000 $d
     /tmp/ccK8gYGY.s:15330  .rodata.test_catalogue:0000000000000000 $d
     /tmp/ccK8gYGY.s:2448   .text.process_fg_shifted:0000000000000067 $d
     /tmp/ccK8gYGY.s:2448   .text.process_fg_shifted:0000000000000068 $t

UNDEFINED SYMBOLS
sizeLIB
main_ram
StateWhileOn
find_label_from
getprog
do_inc
PcWrapped
process_cmdline
shift_down
do_dec
is_bad_cmdline
error_message
argcmds
get_dispmode_digs
num_arg_digits
local_regs_rarg
global_regs_rarg
process_cmdline_set_lift
update_program_bounds
set_pc
int_base
set_menu
display_current_menu
display
is_dblmode
IntMaxWindow
xset
set_lift
ShowRegister
get_reg_n
swap_reg
copyreg
op_p2r
ARM GAS  /tmp/ccK8gYGY.s 			page 418


RectPolConv
lift
zero_X
zero_Y
remap_chars
catcmd
keyticks
xeq_init_contexts
is_dot
xeq
xeqprog
dot
Pause
JustStopped
Running
ShowRPN
JustDisplayed
DispMsg
xeq_xrom
stoprog
is_key_pressed
set_running_off
xeq_sst_bst
clr_dot
finish_RPN
message
find_char
delprog
prt
scopy_char
TraceBuffer
clpall
clrprog
reset
clrall
set_last_menu
find_user_pc
cmdgtocommon
global_regs
drop
convert_regK
local_regs
alen

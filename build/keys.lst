ARM GAS  /tmp/cc8lpfL1.s 			page 1


   1              		.arch armv7e-m
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"keys.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.gtodot_digit,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	gtodot_digit:
  27              	.LVL0:
  28              	.LFB30:
  29              		.file 1 "src/keys.c"
   1:src/keys.c    **** /* This file is part of 34S.
   2:src/keys.c    ****  * 
   3:src/keys.c    ****  * 34S is free software: you can redistribute it and/or modify
   4:src/keys.c    ****  * it under the terms of the GNU General Public License as published by
   5:src/keys.c    ****  * the Free Software Foundation, either version 3 of the License, or
   6:src/keys.c    ****  * (at your option) any later version.
   7:src/keys.c    ****  * 
   8:src/keys.c    ****  * 34S is distributed in the hope that it will be useful,
   9:src/keys.c    ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:src/keys.c    ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:src/keys.c    ****  * GNU General Public License for more details.
  12:src/keys.c    ****  * 
  13:src/keys.c    ****  * You should have received a copy of the GNU General Public License
  14:src/keys.c    ****  * along with 34S.  If not, see <http://www.gnu.org/licenses/>.
  15:src/keys.c    ****  */
  16:src/keys.c    **** 
  17:src/keys.c    **** 
  18:src/keys.c    **** #ifdef DM42
  19:src/keys.c    **** #include "dmcp.h"
  20:src/keys.c    **** #endif
  21:src/keys.c    **** 
  22:src/keys.c    **** #define DM42SAFE
  23:src/keys.c    **** 
  24:src/keys.c    **** #include "features.h"
  25:src/keys.c    **** #include "xeq.h"
  26:src/keys.c    **** #include "keys.h"
  27:src/keys.c    **** #include "display.h"
  28:src/keys.c    **** #include "lcd.h"
  29:src/keys.c    **** #include "int.h"
ARM GAS  /tmp/cc8lpfL1.s 			page 2


  30:src/keys.c    **** #include "consts.h"
  31:src/keys.c    **** #include "storage.h"
  32:src/keys.c    **** #include "stats.h"
  33:src/keys.c    **** #include "catalogues.h"
  34:src/keys.c    **** #ifndef DM42
  35:src/keys.c    **** #include "printer.h"
  36:src/keys.c    **** #endif
  37:src/keys.c    **** #ifdef INCLUDE_C_LOCK
  38:src/keys.c    **** #include "decn.h"
  39:src/keys.c    **** #endif
  40:src/keys.c    **** #undef DM42SAFE
  41:src/keys.c    **** 
  42:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
  43:src/keys.c    **** extern void changed_catalog_state();
  44:src/keys.c    **** #endif
  45:src/keys.c    **** 
  46:src/keys.c    **** #ifdef INCLUDE_C_LOCK
  47:src/keys.c    **** void finish_cpx_entry ( int );
  48:src/keys.c    **** void stack_begin ( int ); 
  49:src/keys.c    **** static int process_cmplx ( const keycode );
  50:src/keys.c    **** static void stack_restore ( void );
  51:src/keys.c    **** #endif
  52:src/keys.c    **** 
  53:src/keys.c    **** #define STATE_UNFINISHED	(OP_SPEC | OP_UNFINISHED)
  54:src/keys.c    **** #define STATE_BACKSPACE		(OP_SPEC | OP_BACKSPACE)
  55:src/keys.c    **** #define STATE_SST		(OP_SPEC | OP_SST)
  56:src/keys.c    **** #define STATE_BST		(OP_SPEC | OP_BST)
  57:src/keys.c    **** #define STATE_RUNNING		(OP_SPEC | OP_RUNNING)
  58:src/keys.c    **** #define STATE_IGNORE		(OP_SPEC | OP_IGNORE)
  59:src/keys.c    **** #define STATE_WINDOWLEFT	(OP_SPEC | OP_WINDOWLEFT)
  60:src/keys.c    **** #define STATE_WINDOWRIGHT	(OP_SPEC | OP_WINDOWRIGHT)
  61:src/keys.c    **** //#define STATE_SHOW		(OP_SPEC | OP_SHOW)
  62:src/keys.c    **** 
  63:src/keys.c    **** /* Define this if the key codes map rows sequentially */
  64:src/keys.c    **** 
  65:src/keys.c    **** #define TEST_EQ		0
  66:src/keys.c    **** #define TEST_NE		1
  67:src/keys.c    **** #define TEST_LT		2
  68:src/keys.c    **** #define TEST_LE		3
  69:src/keys.c    **** #define TEST_GT		4
  70:src/keys.c    **** #define TEST_GE		5
  71:src/keys.c    **** 
  72:src/keys.c    **** enum confirmations {
  73:src/keys.c    **** 	// Apart from the first of these, these must be in the same
  74:src/keys.c    **** 	// order as the opcodes in xeq.h: OP_CLALL, OP_RESET, OP_CLPROG, OP_CLPALL
  75:src/keys.c    **** 	confirm_none=0, confirm_clall, confirm_reset, confirm_clprog, confirm_clpall
  76:src/keys.c    **** };
  77:src/keys.c    **** 
  78:src/keys.c    **** FLAG WasDataEntry;
  79:src/keys.c    **** 
  80:src/keys.c    **** /* Local data to this module */
  81:src/keys.c    **** unsigned int OpCode;
  82:src/keys.c    **** FLAG OpCodeDisplayPending;
  83:src/keys.c    **** FLAG GoFast;
  84:src/keys.c    **** FLAG NonProgrammable;
  85:src/keys.c    **** 
  86:src/keys.c    **** /*
ARM GAS  /tmp/cc8lpfL1.s 			page 3


  87:src/keys.c    ****  *  Needed before definition
  88:src/keys.c    ****  */ 
  89:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end);
  90:src/keys.c    **** 
  91:src/keys.c    **** unsigned int nd_opcode;
  92:src/keys.c    **** 
  93:src/keys.c    **** /*
  94:src/keys.c    ****  *  Return the shift state
  95:src/keys.c    ****  */
  96:src/keys.c    **** enum shifts cur_shift(void) {
  97:src/keys.c    **** 	enum shifts s = shift_down();
  98:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
  99:src/keys.c    **** }
 100:src/keys.c    **** 
 101:src/keys.c    **** /*
 102:src/keys.c    ****  *  Set new shift state, return previous state
 103:src/keys.c    ****  */
 104:src/keys.c    **** static enum shifts set_shift(enum shifts shift) {
 105:src/keys.c    **** 	enum shifts r = cur_shift();
 106:src/keys.c    **** 	State2.shifts = shift;
 107:src/keys.c    **** 	//	State2.alpha_pos = 0;
 108:src/keys.c    **** 	return r;
 109:src/keys.c    **** }
 110:src/keys.c    **** 
 111:src/keys.c    **** /*
 112:src/keys.c    ****  *  Clear shift state and return previous state
 113:src/keys.c    ****  */
 114:src/keys.c    **** enum shifts reset_shift(void) {
 115:src/keys.c    **** 	return set_shift(SHIFT_N);
 116:src/keys.c    **** }
 117:src/keys.c    **** 
 118:src/keys.c    **** /*
 119:src/keys.c    ****  *  Toggle shift state
 120:src/keys.c    ****  */
 121:src/keys.c    **** static void toggle_shift(enum shifts shift) {
 122:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 123:src/keys.c    **** }
 124:src/keys.c    **** 
 125:src/keys.c    **** 
 126:src/keys.c    **** /*
 127:src/keys.c    ****  * Mapping from the key code to a linear index
 128:src/keys.c    ****  * The trick is to move the shifts and the holes in the map out of the way
 129:src/keys.c    ****  */
 130:src/keys.c    **** #ifdef DM42
 131:src/keys.c    **** static int keycode_to_linear_for_alpha(const keycode c)
 132:src/keys.c    **** {
 133:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 134:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 135:src/keys.c    **** 		 6,  7,  8,  9, 10, 11,   // K10 - K15
 136:src/keys.c    **** 		 12, 13, 14, 15, 16,  0,   // K20 - K24
 137:src/keys.c    **** 		17, 18, 19, 20, 21,  0,   // K30 - K34
 138:src/keys.c    **** 		22, 23, 24, 25, 26,  0,   // K40 - K44
 139:src/keys.c    **** 		27, 28, 29, 30, 31,  0,   // K50 - K54
 140:src/keys.c    **** 		32, 33, 34, 35, 36,       // K60 - K64
 141:src/keys.c    **** 		37, 37, 37, 37, 37, 37       // K_F, G, H, ARROW, CMPLX, NOP
 142:src/keys.c    **** 	};
 143:src/keys.c    **** 	return linear_key_map[c];
ARM GAS  /tmp/cc8lpfL1.s 			page 4


 144:src/keys.c    **** }
 145:src/keys.c    **** 
 146:src/keys.c    **** static int keycode_to_linear(const keycode c)
 147:src/keys.c    **** {
 148:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 149:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 150:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 151:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 152:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 153:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 154:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 155:src/keys.c    **** 		29, 30, 31, 32, 33,       // K60 - K64
 156:src/keys.c    **** 		34, 34, 34,  4,  5, 34,        // K_F, G, H, ARROW, CMPLX, NOP
 157:src/keys.c    **** 	};
 158:src/keys.c    **** 	return linear_key_map[c];
 159:src/keys.c    **** }
 160:src/keys.c    **** #else
 161:src/keys.c    **** static int keycode_to_linear(const keycode c)
 162:src/keys.c    **** {
 163:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 ] = {
 164:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 165:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 166:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 167:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 168:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 169:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 170:src/keys.c    **** 		29, 30, 31, 32, 33        // K60 - K64
 171:src/keys.c    **** 	};
 172:src/keys.c    **** 	return linear_key_map[c];
 173:src/keys.c    **** }
 174:src/keys.c    **** #endif
 175:src/keys.c    **** /*
 176:src/keys.c    ****  * Mapping from the key code to a row column code ('A'=11 to '+'=75)
 177:src/keys.c    ****  * Used in KEY? and for shorthand addressing
 178:src/keys.c    ****  */
 179:src/keys.c    **** int keycode_to_row_column(const int c)
 180:src/keys.c    **** {
 181:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 182:src/keys.c    **** }
 183:src/keys.c    **** 
 184:src/keys.c    **** /*
 185:src/keys.c    ****  * Mapping from a row column code ('A'=11 to '+'=75) to the key code
 186:src/keys.c    ****  * Used in PUTK and KTYPE.
 187:src/keys.c    ****  */
 188:src/keys.c    **** 
 189:src/keys.c    **** int row_column_to_keycode(const int c)
 190:src/keys.c    **** {
 191:src/keys.c    **** 	int row = c / 10 - 1;
 192:src/keys.c    **** 	int col = c % 10 - 1;
 193:src/keys.c    **** 
 194:src/keys.c    **** 	if (row < 0 || row > 6 || col > 5 - (row >= 2))
 195:src/keys.c    **** 		return -1;
 196:src/keys.c    **** 	return row * 6 + col;
 197:src/keys.c    **** }
 198:src/keys.c    **** 
 199:src/keys.c    **** /*
 200:src/keys.c    ****  *  Mapping from a key code to a digit from 0 to 9 or to a register address
ARM GAS  /tmp/cc8lpfL1.s 			page 5


 201:src/keys.c    ****  *  Bit seven is set if the key cannot be used as a label shortcut
 202:src/keys.c    ****  */
 203:src/keys.c    **** // Decision to make here about whether the top row can be used as shortcuts.
 204:src/keys.c    **** // Also, which other keys can / can't be used as shortcuts?
 205:src/keys.c    **** // Registers I, j, K, L will move with the new alpha layout.
 206:src/keys.c    **** 
 207:src/keys.c    **** #define NO_REG 0x7f
 208:src/keys.c    **** #define NO_SHORT 0x80
 209:src/keys.c    **** #ifdef DM42
 210:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 211:src/keys.c    **** {
 212:src/keys.c    ****   static const unsigned char map[] = {
 213:src/keys.c    ****     // K00 - K05
 214:src/keys.c    ****     NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 215:src/keys.c    ****     NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 216:src/keys.c    ****     NO_SHORT | NO_REG,   NO_REG,
 217:src/keys.c    ****     // K10 - K15
 218:src/keys.c    ****     NO_REG, NO_REG, regI_idx, regJ_idx, regK_idx, regL_idx, 
 219:src/keys.c    ****     // K20 - K24
 220:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 221:src/keys.c    ****     // K30 - K34
 222:src/keys.c    ****     NO_REG, 7, 8, 9, NO_REG,
 223:src/keys.c    ****     // K40 - K44
 224:src/keys.c    ****     NO_REG, NO_SHORT | regT_idx, 5, 6, NO_REG,
 225:src/keys.c    ****     // K50 - K54
 226:src/keys.c    ****     NO_REG, NO_SHORT | regX_idx, NO_SHORT | regY_idx, NO_SHORT | regZ_idx, NO_REG,
 227:src/keys.c    ****     // K60 - K64
 228:src/keys.c    ****     NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE, NO_REG, NO_REG,
 229:src/keys.c    ****     // Shifts etc. - K_F, K_G, K_H, K_ARROW, K_CMPLX. K_NOP
 230:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 231:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, 
 232:src/keys.c    ****   };
 233:src/keys.c    **** 
 234:src/keys.c    ****   return (unsigned int) map[keycode_to_linear_for_alpha(c)];
 235:src/keys.c    **** }
 236:src/keys.c    **** #else
 237:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 238:src/keys.c    **** {
 239:src/keys.c    ****   static const unsigned char map[] = {
 240:src/keys.c    **** 		// K00 - K05
 241:src/keys.c    **** 		NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 242:src/keys.c    **** 		NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 243:src/keys.c    **** 		NO_SHORT | NO_REG,   NO_REG,
 244:src/keys.c    **** 		// K10 - K12
 245:src/keys.c    **** 		NO_REG, NO_REG, regI_idx, 
 246:src/keys.c    **** 		// K20 - K24
 247:src/keys.c    **** 		NO_SHORT | NO_REG, regJ_idx, regK_idx, regL_idx, NO_SHORT | NO_REG,
 248:src/keys.c    **** 		// K30 - K34
 249:src/keys.c    **** 		NO_REG, 7, 8, 9, NO_REG,
 250:src/keys.c    **** 		// K40 - K44
 251:src/keys.c    **** 		NO_REG, 4, 5, 6, regT_idx,
 252:src/keys.c    **** 		// K50 - K54
 253:src/keys.c    **** 		NO_REG, 1, 2, 3, NO_REG,
 254:src/keys.c    **** 		// K60 - K63
 255:src/keys.c    **** 		NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE,
 256:src/keys.c    **** 		regY_idx, regZ_idx,
 257:src/keys.c    **** 		// Shifts, etc
ARM GAS  /tmp/cc8lpfL1.s 			page 6


 258:src/keys.c    **** 		NO_REG
 259:src/keys.c    **** 	};
 260:src/keys.c    **** 
 261:src/keys.c    **** 	return (unsigned int) map[keycode_to_linear(c)];
 262:src/keys.c    **** }
 263:src/keys.c    **** #endif
 264:src/keys.c    **** /*
 265:src/keys.c    ****  *  Mapping of a keycode and shift state to a catalogue number
 266:src/keys.c    ****  */
 267:src/keys.c    **** static enum catalogues keycode_to_cat(const keycode c, enum shifts shift)
 268:src/keys.c    **** {
 269:src/keys.c    ****   enum catalogues cat = CATALOGUE_NONE;
 270:src/keys.c    ****   int i, col, max;
 271:src/keys.c    ****   const struct _map {
 272:src/keys.c    ****     unsigned char key, cat[3];
 273:src/keys.c    ****   } *cp;
 274:src/keys.c    **** 
 275:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 276:src/keys.c    **** 	if (C_LOCKED) { // Limited set of catalogues available in complex lock mode - all listed here
 277:src/keys.c    **** 		if (shift == SHIFT_H) {
 278:src/keys.c    **** 			switch (c) {
 279:src/keys.c    **** 				case K53:
 280:src/keys.c    **** 					return CATALOGUE_COMPLEX;
 281:src/keys.c    **** 				case K04:
 282:src/keys.c    **** 					return CATALOGUE_CONV;
 283:src/keys.c    **** 				case K05:
 284:src/keys.c    **** 					return CATALOGUE_MODE;
 285:src/keys.c    **** 				case K20:
 286:src/keys.c    **** 					if ( (REAL_FLAG || IMAG_FLAG) ) { // number being entered
 287:src/keys.c    **** 						finish_cpx_entry(1);
 288:src/keys.c    **** 					}
 289:src/keys.c    **** 					return CATALOGUE_COMPLEX_CONST;
 290:src/keys.c    **** 				default:
 291:src/keys.c    **** 					return CATALOGUE_NONE;
 292:src/keys.c    **** 			}
 293:src/keys.c    **** 		}
 294:src/keys.c    **** 		if ( (shift == SHIFT_G) && (c == K60) )
 295:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 296:src/keys.c    **** 		if ( (shift == SHIFT_F) && (c == K20) ) {
 297:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 298:src/keys.c    **** 				SET_REAL;
 299:src/keys.c    **** 				stack_begin (1);
 300:src/keys.c    **** 			}
 301:src/keys.c    **** 			else if (CmdLineLength) {
 302:src/keys.c    **** 				CmdLineLength = 0;
 303:src/keys.c    **** 				CmdLineEex = 0;
 304:src/keys.c    **** 				CmdLineDot = 0;
 305:src/keys.c    **** 			}
 306:src/keys.c    **** 			return CATALOGUE_CONST;
 307:src/keys.c    **** 		}
 308:src/keys.c    **** 		return CATALOGUE_NONE;
 309:src/keys.c    **** 	}
 310:src/keys.c    **** #endif
 311:src/keys.c    ****   // Common to both alpha mode and normal mode is the programming X.FCN catalogue
 312:src/keys.c    ****   if (c == K53 && shift == SHIFT_H && ! State2.runmode && ! State2.cmplx && ! State2.multi)
 313:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 314:src/keys.c    **** 
ARM GAS  /tmp/cc8lpfL1.s 			page 7


 315:src/keys.c    ****   if (! State2.alphas && ! State2.multi) {
 316:src/keys.c    ****     /*
 317:src/keys.c    ****      *  Normal processing - Not alpha mode
 318:src/keys.c    ****      */
 319:src/keys.c    ****     static const struct _map cmap[] = {
 320:src/keys.c    **** #ifdef DM42
 321:src/keys.c    ****       { K04, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 322:src/keys.c    **** #else
 323:src/keys.c    ****       { K_ARROW, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 324:src/keys.c    **** #endif
 325:src/keys.c    ****       { K05,     { CATALOGUE_MODE,      CATALOGUE_MODE,      CATALOGUE_MODE          } },
 326:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
 327:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_USER          } },
 328:src/keys.c    **** #else
 329:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_LABELS        } },
 330:src/keys.c    **** #endif
 331:src/keys.c    ****       { K20,     { CATALOGUE_CONST,     CATALOGUE_NONE,      CATALOGUE_COMPLEX_CONST } },
 332:src/keys.c    ****       { K41,     { CATALOGUE_PROB,      CATALOGUE_NONE,      CATALOGUE_PROB          } },
 333:src/keys.c    ****       { K42,     { CATALOGUE_STATS,     CATALOGUE_NONE,      CATALOGUE_STATS         } },
 334:src/keys.c    ****       { K43,     { CATALOGUE_SUMS,      CATALOGUE_NONE,      CATALOGUE_SUMS          } },
 335:src/keys.c    ****       { K44,     { CATALOGUE_MATRIX,    CATALOGUE_NONE,      CATALOGUE_MATRIX        } },
 336:src/keys.c    ****       { K50,     { CATALOGUE_STATUS,    CATALOGUE_STATUS,    CATALOGUE_STATUS        } },
 337:src/keys.c    ****       { K51,     { CATALOGUE_TEST,      CATALOGUE_TEST,      CATALOGUE_TEST          } },
 338:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
 339:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_INTERNAL      } },
 340:src/keys.c    **** #else
 341:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_PROG          } },
 342:src/keys.c    **** #endif
 343:src/keys.c    ****       { K53,     { CATALOGUE_NORMAL,    CATALOGUE_INT,       CATALOGUE_COMPLEX       } },
 344:src/keys.c    ****     };
 345:src/keys.c    **** 
 346:src/keys.c    ****     if (c == K60 && shift == SHIFT_G) {
 347:src/keys.c    ****       /*
 348:src/keys.c    ****        *  SHOW starts register browser
 349:src/keys.c    ****        */
 350:src/keys.c    ****       return CATALOGUE_REGISTERS;
 351:src/keys.c    ****     }
 352:src/keys.c    **** #if 0
 353:src/keys.c    ****     // conflicts with c# 002 and c# 003
 354:src/keys.c    ****     if ((c == K52 || c == K53) && shift == SHIFT_N && State2.cmplx && State2.catalogue == CATALOGUE
 355:src/keys.c    ****       /*
 356:src/keys.c    ****        *  Shorthand to complex P.FCN & X.FCN - h may be omitted
 357:src/keys.c    ****        */
 358:src/keys.c    ****       shift = SHIFT_H;
 359:src/keys.c    ****     }
 360:src/keys.c    **** #endif
 361:src/keys.c    ****     if (shift != SHIFT_H) {
 362:src/keys.c    ****       /*
 363:src/keys.c    ****        *  All standard catalogues are on h-shifted keys
 364:src/keys.c    ****        */
 365:src/keys.c    ****       return CATALOGUE_NONE;
 366:src/keys.c    ****     }
 367:src/keys.c    **** 
 368:src/keys.c    ****     /*
 369:src/keys.c    ****      *  Prepare search
 370:src/keys.c    ****      */
 371:src/keys.c    ****     cp = cmap;
ARM GAS  /tmp/cc8lpfL1.s 			page 8


 372:src/keys.c    **** #ifndef WINGUI
 373:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx || shift_down() == SHIFT_H ? 2 : 0;
 374:src/keys.c    **** #else
 375:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx ? 2 : 0;
 376:src/keys.c    **** #endif
 377:src/keys.c    ****     max = sizeof(cmap) / sizeof(cmap[0]);
 378:src/keys.c    ****   }
 379:src/keys.c    ****   else {
 380:src/keys.c    ****     /*
 381:src/keys.c    ****      *  All the alpha catalogues go here
 382:src/keys.c    ****      */
 383:src/keys.c    **** #ifdef DM42
 384:src/keys.c    ****     static const struct _map amap[] = {
 385:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 386:src/keys.c    ****       { K05, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 387:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 388:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 389:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 390:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 391:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 392:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 393:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 394:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 395:src/keys.c    ****     };
 396:src/keys.c    **** #else
 397:src/keys.c    ****     static const struct _map amap[] = {
 398:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 399:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 400:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 401:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 402:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 403:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 404:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 405:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 406:src/keys.c    ****     };
 407:src/keys.c    **** #endif
 408:src/keys.c    ****     static const char smap[] = { 0, 1, 0, 2 }; // Map shifts to columns;
 409:src/keys.c    **** 
 410:src/keys.c    ****     /*
 411:src/keys.c    ****      *  Prepare search
 412:src/keys.c    ****      */
 413:src/keys.c    ****     cp = amap;
 414:src/keys.c    ****     col = smap[shift];
 415:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 416:src/keys.c    ****   }
 417:src/keys.c    **** 
 418:src/keys.c    ****   /*
 419:src/keys.c    ****    *  Search the key in one of the tables
 420:src/keys.c    ****    */
 421:src/keys.c    ****   for (i = 0; i < max; ++i, ++cp) {
 422:src/keys.c    ****     if (cp->key == c) {
 423:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 424:src/keys.c    ****       break;
 425:src/keys.c    ****     }
 426:src/keys.c    ****   }
 427:src/keys.c    ****   if (State2.multi && (cat < CATALOGUE_ALPHA_SYMBOLS || cat > CATALOGUE_ALPHA_SUBSCRIPTS)) {
 428:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
ARM GAS  /tmp/cc8lpfL1.s 			page 9


 429:src/keys.c    ****     cat = CATALOGUE_NONE;
 430:src/keys.c    ****   }
 431:src/keys.c    ****   return cat;
 432:src/keys.c    **** }
 433:src/keys.c    **** 
 434:src/keys.c    **** #ifdef DM42
 435:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 436:src/keys.c    **** {
 437:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 438:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 439:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 440:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 441:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 442:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 443:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 444:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 445:src/keys.c    **** 
 446:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 447:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 448:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 449:src/keys.c    **** 		{ 'J',  0257, 0000, 0000, 'j',  0000,  },  // K13
 450:src/keys.c    **** 		{ 'K',  0000, 'K',  0000, 'k',  0251,  },  // K14
 451:src/keys.c    **** 		{ 'L',  0000, 0212, 0000, 'l',  0252,  },  // K15
 452:src/keys.c    **** 
 453:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 454:src/keys.c    **** 		{ 'M',  0000, 0253, 0027, 'm',  0253,  },  // K21
 455:src/keys.c    **** 		{ 'N',  0010, 'N',  0225, 'n',  0254,  },  // K22
 456:src/keys.c    **** 		{ 'O',  0000, 0227, 0257, 'o',  0267,  },  // K23
 457:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 458:src/keys.c    **** 
 459:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 460:src/keys.c    **** 		{ 'P',  '7',  0217, '&',  'p',  0257,  },  // K31
 461:src/keys.c    **** 		{ 'Q',  '8',  0000, '|',  'q',  0000,  },  // K32
 462:src/keys.c    **** 		{ 'R',  '9',  'R',  0013, 'r',  0260,  },  // K33
 463:src/keys.c    **** 		{ 'S',  '/',  0221, '\\', 's',  0261,  },  // K34
 464:src/keys.c    **** 
 465:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 466:src/keys.c    **** 		{ 'T',  '4',  'T',  0000, 't',  0262,  },  // K41
 467:src/keys.c    **** 		{ 'U',  '5',  0000, 0000, 'u',  0000,  },  // K42
 468:src/keys.c    **** 		{ 'V',  '6',  0000, 0000, 'v',  0000,  },  // K43
 469:src/keys.c    **** 		{ 'W', 0034,  0000, 0000, 'w',  0000,  },  // K44
 470:src/keys.c    **** 
 471:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 472:src/keys.c    **** 		{ 'X',  '1',  0215, 0000, 'x',  0255,  },  // K51
 473:src/keys.c    **** 		{ 'Y',  '2',  'Y',  0000, 'y',  0263,  },  // K52
 474:src/keys.c    **** 		{ 'Z',  '3',  'Z',  0000, 'z',  0245,  },  // K53
 475:src/keys.c    **** 		{ '-',  '(',  ')',  0000, 0000, 0000,  },  // K54
 476:src/keys.c    **** 
 477:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K60
 478:src/keys.c    **** 		{ ':',  '0',  0207, ' ',  ';',  0247,  },  // K61
 479:src/keys.c    **** 		{ '.',  '.',  0226, 0000, '.',  0266,  },  // K62
 480:src/keys.c    **** 		{ '?',  '!',  0041, 0000, '?',  '!',  },  // K63
 481:src/keys.c    **** 		{ ' ',  '+',  '=',  0006, ' ',  ' ',   },  // K64
 482:src/keys.c    **** 
 483:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // shifts etc.
 484:src/keys.c    **** 	};
 485:src/keys.c    **** 	if (State2.alphashift) {
ARM GAS  /tmp/cc8lpfL1.s 			page 10


 486:src/keys.c    **** 		if (shift == SHIFT_N)
 487:src/keys.c    **** 			shift = SHIFT_LC_N;
 488:src/keys.c    **** 		else if (shift == SHIFT_G)
 489:src/keys.c    **** 			shift = SHIFT_LC_G;
 490:src/keys.c    **** 	}
 491:src/keys.c    **** 	return alphamap[keycode_to_linear_for_alpha(c)][shift];
 492:src/keys.c    **** }
 493:src/keys.c    **** #else
 494:src/keys.c    **** /*
 495:src/keys.c    ****  * Mapping from key position to alpha in the four key planes plus
 496:src/keys.c    ****  * the two lower case planes.
 497:src/keys.c    ****  */
 498:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 499:src/keys.c    **** {
 500:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 501:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 502:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 503:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 504:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 505:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 506:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 507:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 508:src/keys.c    **** 
 509:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 510:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 511:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 512:src/keys.c    **** 
 513:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 514:src/keys.c    **** 		{ 'J',  '(',  ')',  0027, 'j',  ')',   },  // K21
 515:src/keys.c    **** 		{ 'K',  0010, 'K',  0225, 'k',  0251,  },  // K22
 516:src/keys.c    **** 		{ 'L',  0000, 0212, 0257, 'l',  0252,  },  // K23
 517:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 518:src/keys.c    **** 
 519:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 520:src/keys.c    **** 		{ 'M',  '7',  'M',  '&',  'm',  0253,  },  // K31
 521:src/keys.c    **** 		{ 'N',  '8',  'N',  '|',  'n',  0254,  },  // K32
 522:src/keys.c    **** 		{ 'O',  '9',  0227, 0013, 'o',  0267,  },  // K33
 523:src/keys.c    **** 		{ 'P',  '/',  0217, '\\', 'p',  0257,  },  // K34
 524:src/keys.c    **** 
 525:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 526:src/keys.c    **** 		{ 'Q',  '4',  0000, 0000, 'q',  0000,  },  // K41
 527:src/keys.c    **** 		{ 'R',  '5',  'R',  0000, 'r',  0260,  },  // K42
 528:src/keys.c    **** 		{ 'S',  '6',  0221, 0000, 's',  0261,  },  // K43
 529:src/keys.c    **** 		{ 'T',  0034, 'T',  0000, 't',  0262,  },  // K44
 530:src/keys.c    **** 
 531:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 532:src/keys.c    **** 		{ '1',  '1',  0207, 0000, '1',  0247,  },  // K51
 533:src/keys.c    **** 		{ 'U',  '2',  0000, 0000, 'u',  0000,  },  // K52
 534:src/keys.c    **** 		{ 'V',  '3',  0000, 0000, 'v',  0000,  },  // K53
 535:src/keys.c    **** 		{ 'W',  0034, 0000, 0000, 'w',  0000,  },  // K54
 536:src/keys.c    **** 
 537:src/keys.c    **** 		{ 0000, 0222, 0000, 0000, 0000, 0000,  },  // K60
 538:src/keys.c    **** 		{ '0',  '0',  0226, ' ',  '0',  0266,  },  // K61
 539:src/keys.c    **** 		{ 'X',  '.',  0215, 0000, 'x',  0255,  },  // K62
 540:src/keys.c    **** 		{ 'Y',  0000, 'Y',  0000, 'y',  0263,  },  // K63
 541:src/keys.c    **** 		{ 'Z',  '+',  'Z',  0000, 'z',  0245,  },  // K64
 542:src/keys.c    **** 	};
ARM GAS  /tmp/cc8lpfL1.s 			page 11


 543:src/keys.c    **** 	if (State2.alphashift) {
 544:src/keys.c    **** 		if (shift == SHIFT_N)
 545:src/keys.c    **** 			shift = SHIFT_LC_N;
 546:src/keys.c    **** 		else if (shift == SHIFT_G)
 547:src/keys.c    **** 			shift = SHIFT_LC_G;
 548:src/keys.c    **** 	}
 549:src/keys.c    **** 	return alphamap[keycode_to_linear(c)][shift];
 550:src/keys.c    **** }
 551:src/keys.c    **** #endif
 552:src/keys.c    **** static void init_arg(const enum rarg base) {
 553:src/keys.c    **** 	if (is_bad_cmdline())
 554:src/keys.c    **** 		return;
 555:src/keys.c    **** 	CmdBase = base;
 556:src/keys.c    **** 	State2.ind = 0;
 557:src/keys.c    **** 	State2.digval = 0;
 558:src/keys.c    **** 	State2.numdigit = 0;
 559:src/keys.c    **** 	State2.rarg = 1;
 560:src/keys.c    **** 	State2.dot = 0;
 561:src/keys.c    **** 	State2.local = 0;
 562:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 563:src/keys.c    **** }
 564:src/keys.c    **** 
 565:src/keys.c    **** static void init_cat(enum catalogues cat) {
 566:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 567:src/keys.c    **** 		// Save last catalogue for a later restore
 568:src/keys.c    **** 		State.last_cat = State2.catalogue;
 569:src/keys.c    **** 		CmdLineLength = 0;
 570:src/keys.c    **** 	}
 571:src/keys.c    **** 	process_cmdline();
 572:src/keys.c    **** 
 573:src/keys.c    **** 	State2.labellist = 0;
 574:src/keys.c    **** 	State2.registerlist = 0;
 575:src/keys.c    **** 	State2.status = 0;
 576:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 577:src/keys.c    **** 
 578:src/keys.c    **** 	switch (cat) {
 579:src/keys.c    **** 	case CATALOGUE_LABELS:
 580:src/keys.c    **** 		// Label browser
 581:src/keys.c    **** 		State2.labellist = 1;
 582:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 583:src/keys.c    **** 		break;
 584:src/keys.c    **** 	
 585:src/keys.c    **** 	case CATALOGUE_REGISTERS:
 586:src/keys.c    **** 		// Register browser
 587:src/keys.c    **** 		State2.registerlist = 1;
 588:src/keys.c    **** 		State2.digval = regX_idx;
 589:src/keys.c    **** 		State2.digval2 = 0;
 590:src/keys.c    **** 		break;
 591:src/keys.c    **** 
 592:src/keys.c    **** 	case CATALOGUE_STATUS:
 593:src/keys.c    **** 		// Flag browser
 594:src/keys.c    **** 		State2.status = 1;
 595:src/keys.c    **** 		break;
 596:src/keys.c    **** 
 597:src/keys.c    **** 	default:
 598:src/keys.c    **** 		// Normal catalogue
 599:src/keys.c    **** 		State2.catalogue = cat;
ARM GAS  /tmp/cc8lpfL1.s 			page 12


 600:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 601:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 602:src/keys.c    **** 			// Different catalogue, reset position
 603:src/keys.c    **** 			State.catpos = 0;
 604:src/keys.c    **** 		}
 605:src/keys.c    **** 	}
 606:src/keys.c    **** 	reset_shift();
 607:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 608:src/keys.c    **** 	changed_catalog_state();
 609:src/keys.c    **** #endif
 610:src/keys.c    **** }
 611:src/keys.c    **** 
 612:src/keys.c    **** /*
 613:src/keys.c    ****  *  Reset the internal state to a sane default
 614:src/keys.c    ****  */
 615:src/keys.c    **** void init_state(void) {
 616:src/keys.c    **** #ifndef REALBUILD
 617:src/keys.c    **** 	unsigned int a = State2.flags;
 618:src/keys.c    **** 	unsigned int b = State2.trace;
 619:src/keys.c    **** #else
 620:src/keys.c    **** 	FLAG t = TestFlag;
 621:src/keys.c    **** #endif
 622:src/keys.c    **** 	int v = Voltage;
 623:src/keys.c    **** 	int k = LastKey;
 624:src/keys.c    **** 
 625:src/keys.c    **** 	CmdBase = 0;
 626:src/keys.c    **** 	// Removed: will clear any locals on power off
 627:src/keys.c    **** 	// clrretstk(0);
 628:src/keys.c    **** 
 629:src/keys.c    **** 	xset(&State2, 0, sizeof(State2));
 630:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 631:src/keys.c    **** 
 632:src/keys.c    **** #ifdef DEFAULT_TO_SSIZE8 							//JM3
 633:src/keys.c    **** 	INIT_8; 								//JM3
 634:src/keys.c    **** 	UState.stack_depth = 1; // set stack size to 8 	//JM3
 635:src/keys.c    **** #endif  									//JM3
 636:src/keys.c    **** 
 637:src/keys.c    **** #ifdef DEFAULT_DATE_YMD			//JM5
 638:src/keys.c    **** 	UState.date_mode = 1;		//JM5
 639:src/keys.c    **** #endif							//JM5
 640:src/keys.c    **** 
 641:src/keys.c    **** #ifdef DEFAULT_DATE_MDY			//JM5
 642:src/keys.c    **** 	UState.date_mode = 2;		//JM5
 643:src/keys.c    **** #endif							//JM5
 644:src/keys.c    **** 
 645:src/keys.c    **** #ifdef YREG_ON_BY_DEFAULT
 646:src/keys.c    **** 	UState.show_y = 1;
 647:src/keys.c    **** #endif
 648:src/keys.c    **** 
 649:src/keys.c    **** #ifdef DEFAULT_TO_J
 650:src/keys.c    **** 	SET_CPX_J;
 651:src/keys.c    **** #endif
 652:src/keys.c    **** 
 653:src/keys.c    **** #ifdef DEFAULT_TO_CPX_YES
 654:src/keys.c    **** 	cpx_nop(OP_CYES);
 655:src/keys.c    **** #endif
 656:src/keys.c    **** 
ARM GAS  /tmp/cc8lpfL1.s 			page 13


 657:src/keys.c    **** #ifdef DEFAULT_TO_C_LOCK
 658:src/keys.c    **** 	cpx_nop(OP_CYES);
 659:src/keys.c    **** 	cpx_nop(OP_C_ON);
 660:src/keys.c    **** #endif
 661:src/keys.c    **** 
 662:src/keys.c    **** #ifdef ENTRY_RPN
 663:src/keys.c    **** 
 664:src/keys.c    **** #ifdef DEFAULT_TO_ENTRY_RPN
 665:src/keys.c    **** 	ENTRY_RPN_ON;
 666:src/keys.c    **** #else
 667:src/keys.c    **** 	ENTRY_RPN_OFF;
 668:src/keys.c    **** #endif
 669:src/keys.c    **** 
 670:src/keys.c    **** #endif
 671:src/keys.c    **** 	
 672:src/keys.c    **** #endif
 673:src/keys.c    **** 
 674:src/keys.c    **** 	State2.test = TST_NONE;
 675:src/keys.c    **** 	State2.runmode = 1;
 676:src/keys.c    **** 	update_program_bounds(1);
 677:src/keys.c    **** 	set_lift();
 678:src/keys.c    **** 
 679:src/keys.c    **** 	// Restore stuff that has been moved to State2 for space reasons
 680:src/keys.c    **** 	// but must not be cleared.
 681:src/keys.c    **** 	Voltage = v;
 682:src/keys.c    **** 	LastKey = k;
 683:src/keys.c    **** #ifndef REALBUILD
 684:src/keys.c    **** 	State2.trace = b;
 685:src/keys.c    **** 	State2.flags = a;
 686:src/keys.c    **** #else
 687:src/keys.c    **** 	TestFlag = t;
 688:src/keys.c    **** #endif
 689:src/keys.c    **** 	ShowRegister = regX_idx;
 690:src/keys.c    **** }
 691:src/keys.c    **** 
 692:src/keys.c    **** void soft_init_state(void) {
 693:src/keys.c    **** 	int soft;
 694:src/keys.c    **** 	unsigned int runmode;
 695:src/keys.c    **** 	unsigned int alphas;
 696:src/keys.c    **** 
 697:src/keys.c    **** 	if (CmdLineLength) {
 698:src/keys.c    **** 		CmdLineLength = 0;
 699:src/keys.c    **** 		CmdLineEex = 0;
 700:src/keys.c    **** 		CmdLineDot = 0;
 701:src/keys.c    **** 		return;
 702:src/keys.c    **** 	}
 703:src/keys.c    **** 	soft = State2.multi || State2.rarg || State2.hyp || State2.gtodot || State2.labellist ||
 704:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 705:src/keys.c    **** 	runmode = State2.runmode;
 706:src/keys.c    **** 	alphas = State2.alphas;
 707:src/keys.c    **** 	init_state();
 708:src/keys.c    **** 	if (soft) {
 709:src/keys.c    **** 		State2.runmode = runmode;
 710:src/keys.c    **** 		State2.alphas = alphas;
 711:src/keys.c    **** 	}
 712:src/keys.c    **** }
 713:src/keys.c    **** 
ARM GAS  /tmp/cc8lpfL1.s 			page 14


 714:src/keys.c    **** static int check_confirm(int op) {
 715:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 716:src/keys.c    **** 		const int nilop = argKIND(op);
 717:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 718:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 719:src/keys.c    **** 			return STATE_UNFINISHED;
 720:src/keys.c    **** 		}
 721:src/keys.c    **** #ifndef DM42		
 722:src/keys.c    **** 		if ((nilop >= OP_RECV && nilop <= OP_PSTO)
 723:src/keys.c    **** #endif
 724:src/keys.c    **** #ifdef DM42
 725:src/keys.c    **** 		    if ((nilop >= OP_SAVE && nilop <= OP_PSTO) // no recv in DM42
 726:src/keys.c    **** #endif
 727:src/keys.c    **** #ifdef INFRARED
 728:src/keys.c    **** 			|| nilop == OP_PRINT_PGM
 729:src/keys.c    **** #endif
 730:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
 731:src/keys.c    **** //			|| nilop == OP_STOPWATCH // so it can go in a user menu
 732:src/keys.c    **** #endif
 733:src/keys.c    **** 		) {
 734:src/keys.c    **** 			// These commands are not programmable
 735:src/keys.c    **** 			NonProgrammable = 1;
 736:src/keys.c    **** 		}
 737:src/keys.c    **** 	}
 738:src/keys.c    **** 	return op;
 739:src/keys.c    **** }
 740:src/keys.c    **** 
 741:src/keys.c    **** static void set_smode(const enum single_disp d) {
 742:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 743:src/keys.c    **** }
 744:src/keys.c    **** 
 745:src/keys.c    **** static int check_f_key(int n, const int dflt) {
 746:src/keys.c    **** 	const int code = 100 + n;
 747:src/keys.c    **** 	unsigned int pc = state_pc();
 748:src/keys.c    **** 
 749:src/keys.c    **** 	if (State2.runmode) {
 750:src/keys.c    **** 		if (isXROM(pc))
 751:src/keys.c    **** 			pc = 1;
 752:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 753:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 754:src/keys.c    **** 	}
 755:src/keys.c    **** 	return dflt;
 756:src/keys.c    **** }
 757:src/keys.c    **** 
 758:src/keys.c    **** /* Return non-zero if the current mode is integer and we accept letters
 759:src/keys.c    ****  * as digits.
 760:src/keys.c    ****  */
 761:src/keys.c    **** static int intltr(int d) {
 762:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 763:src/keys.c    **** }
 764:src/keys.c    **** 
 765:src/keys.c    **** /*
 766:src/keys.c    ****  *  Process a key code in the unshifted mode.
 767:src/keys.c    ****  */
 768:src/keys.c    **** static int process_normal(const keycode c)
 769:src/keys.c    **** {
 770:src/keys.c    **** 	static const unsigned short int op_map[] = {
ARM GAS  /tmp/cc8lpfL1.s 			page 15


 771:src/keys.c    **** 		// Row 1
 772:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS, // A to D
 773:src/keys.c    **** 		OP_MON  | OP_RECIP,
 774:src/keys.c    **** 		OP_DYA  | OP_POW,
 775:src/keys.c    **** 		OP_MON  | OP_SQRT,
 776:src/keys.c    **** 		OP_SPEC | OP_E,		// ->
 777:src/keys.c    **** 		OP_SPEC | OP_F,		// CPX
 778:src/keys.c    **** 		// Row 2
 779:src/keys.c    **** 		RARG_STO,
 780:src/keys.c    **** 		RARG_RCL,
 781:src/keys.c    **** 		OP_NIL  | OP_RDOWN,
 782:src/keys.c    **** 		// Row 3
 783:src/keys.c    **** 		OP_SPEC | OP_ENTER,
 784:src/keys.c    **** 		RARG(RARG_SWAPX, regY_idx),
 785:src/keys.c    **** 		OP_SPEC | OP_CHS,	// CHS
 786:src/keys.c    **** 		OP_SPEC | OP_EEX,	// EEX
 787:src/keys.c    **** 		OP_SPEC | OP_CLX,	// <-
 788:src/keys.c    **** 		// Row 4
 789:src/keys.c    **** 		RARG_XEQ,
 790:src/keys.c    **** 		OP_SPEC | OP_7,
 791:src/keys.c    **** 		OP_SPEC | OP_8,
 792:src/keys.c    **** 		OP_SPEC | OP_9,
 793:src/keys.c    **** 		OP_DYA  | OP_DIV,
 794:src/keys.c    **** 		// Row 5
 795:src/keys.c    **** 		STATE_BST,
 796:src/keys.c    **** 		OP_SPEC | OP_4,
 797:src/keys.c    **** 		OP_SPEC | OP_5,
 798:src/keys.c    **** 		OP_SPEC | OP_6,
 799:src/keys.c    **** 		OP_DYA  | OP_MUL,
 800:src/keys.c    **** 		// Row 6
 801:src/keys.c    **** 		STATE_SST,		// SST
 802:src/keys.c    **** 		OP_SPEC | OP_1,
 803:src/keys.c    **** 		OP_SPEC | OP_2,
 804:src/keys.c    **** 		OP_SPEC | OP_3,
 805:src/keys.c    **** 		OP_DYA  | OP_SUB,
 806:src/keys.c    **** 		// Row 7
 807:src/keys.c    **** 		STATE_UNFINISHED,	// ON/C
 808:src/keys.c    **** 		OP_SPEC | OP_0,
 809:src/keys.c    **** 		OP_SPEC | OP_DOT,
 810:src/keys.c    **** 		OP_NIL  | OP_RS,	// R/S
 811:src/keys.c    **** 		OP_DYA  | OP_ADD,
 812:src/keys.c    **** #ifdef DM42
 813:src/keys.c    **** 		OP_NIL  | OP_NOP,  // shifts etc.
 814:src/keys.c    **** #endif
 815:src/keys.c    **** 	};
 816:src/keys.c    **** 
 817:src/keys.c    **** 	int lc = keycode_to_linear(c);
 818:src/keys.c    **** 	int op = op_map[lc];
 819:src/keys.c    **** 	
 820:src/keys.c    **** 	// The switch handles all the special cases
 821:src/keys.c    **** #ifdef DM42
 822:src/keys.c    **** 	int op_int;
 823:src/keys.c    **** 	if (UState.intm) {
 824:src/keys.c    **** 	  switch (c) {
 825:src/keys.c    **** 	  case K00:
 826:src/keys.c    **** 	    op = OP_SPEC | OP_A;
 827:src/keys.c    **** 	    if (intltr(10)) {
ARM GAS  /tmp/cc8lpfL1.s 			page 16


 828:src/keys.c    **** 	      return op;
 829:src/keys.c    **** 	    }
 830:src/keys.c    **** 	    else {
 831:src/keys.c    **** 	      return check_f_key(0, op);
 832:src/keys.c    **** 	    }
 833:src/keys.c    **** 	  case K01:
 834:src/keys.c    **** 	    op = OP_SPEC | OP_B;
 835:src/keys.c    **** 	    if (intltr(11)) {
 836:src/keys.c    **** 	      return op;
 837:src/keys.c    **** 	    }
 838:src/keys.c    **** 	    else {
 839:src/keys.c    **** 	      return check_f_key(1, op);
 840:src/keys.c    **** 	    }
 841:src/keys.c    **** 	  case K03:
 842:src/keys.c    **** 	    op_int = OP_SPEC | OP_C;
 843:src/keys.c    **** 	    if (intltr(12)) {
 844:src/keys.c    **** 	      return op_int;
 845:src/keys.c    **** 	    }
 846:src/keys.c    **** 	    else {
 847:src/keys.c    **** 	      return check_f_key(2, op);
 848:src/keys.c    **** 	    }
 849:src/keys.c    **** 	  case K30:
 850:src/keys.c    **** 	    op_int = OP_SPEC | OP_F;
 851:src/keys.c    **** 	    if (intltr(15)) {
 852:src/keys.c    **** 	      return op_int;
 853:src/keys.c    **** 	    }
 854:src/keys.c    **** 	  default:;
 855:src/keys.c    **** 	  }
 856:src/keys.c    **** 	}
 857:src/keys.c    **** #endif  
 858:src/keys.c    **** 
 859:src/keys.c    **** 	switch (c) {
 860:src/keys.c    **** #ifdef DM42
 861:src/keys.c    **** 	case K00:
 862:src/keys.c    **** 		return check_f_key(0, op);
 863:src/keys.c    **** 	case K01:
 864:src/keys.c    **** 		return check_f_key(1, op);
 865:src/keys.c    **** 	case K03:
 866:src/keys.c    **** 		return check_f_key(2, op);
 867:src/keys.c    **** #else
 868:src/keys.c    **** 	case K00:
 869:src/keys.c    **** 	case K01:
 870:src/keys.c    **** 		if (UState.intm)
 871:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 872:src/keys.c    **** 	case K02:
 873:src/keys.c    **** 	case K03:
 874:src/keys.c    **** 		if (intltr(lc + 10)) {
 875:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 876:src/keys.c    **** 			return op;
 877:src/keys.c    **** 		}
 878:src/keys.c    **** 		return check_f_key(lc, op);
 879:src/keys.c    **** #endif		
 880:src/keys.c    **** 	case K_ARROW:
 881:src/keys.c    **** #ifndef DM42
 882:src/keys.c    **** #ifdef INT_MODE_TEMPVIEW
 883:src/keys.c    **** 		if (intltr(14))
 884:src/keys.c    **** 			return op;
ARM GAS  /tmp/cc8lpfL1.s 			page 17


 885:src/keys.c    **** #else
 886:src/keys.c    **** 		if (UState.intm)
 887:src/keys.c    **** 			return op;
 888:src/keys.c    **** #endif
 889:src/keys.c    **** #endif		
 890:src/keys.c    **** 		if (is_bad_cmdline())
 891:src/keys.c    **** 			return STATE_UNFINISHED;
 892:src/keys.c    **** 		process_cmdline_set_lift();
 893:src/keys.c    **** 		State2.arrow = 1;
 894:src/keys.c    **** #ifdef DM42
 895:src/keys.c    **** 		set_menu (M_Arrow); // arrow menu
 896:src/keys.c    **** 		display_current_menu ();
 897:src/keys.c    **** 		lcd_refresh ();
 898:src/keys.c    **** #else
 899:src/keys.c    **** 		set_shift(SHIFT_G);
 900:src/keys.c    **** #endif
 901:src/keys.c    **** 		break;
 902:src/keys.c    **** 
 903:src/keys.c    **** 	case K_CMPLX:
 904:src/keys.c    **** #ifdef DM42
 905:src/keys.c    **** 	  if (UState.intm)
 906:src/keys.c    **** 	    break; // return nothing
 907:src/keys.c    **** 	  State2.cmplx = 1;
 908:src/keys.c    **** #else
 909:src/keys.c    **** 	  if (UState.intm)
 910:src/keys.c    **** 	    return op;
 911:src/keys.c    **** 	  State2.cmplx = 1;
 912:src/keys.c    **** #endif
 913:src/keys.c    **** 	  break;
 914:src/keys.c    **** 
 915:src/keys.c    **** 	case K24:				// <-
 916:src/keys.c    **** 		if (State2.disp_temp)
 917:src/keys.c    **** 			return STATE_UNFINISHED;
 918:src/keys.c    **** 		if (State2.runmode)
 919:src/keys.c    **** 			return op;
 920:src/keys.c    **** 		return STATE_BACKSPACE;
 921:src/keys.c    **** 
 922:src/keys.c    **** 	case K10:				// STO
 923:src/keys.c    **** 	case K11:				// RCL
 924:src/keys.c    **** 	case K30:				// XEQ
 925:src/keys.c    **** 		init_arg((enum rarg)op);
 926:src/keys.c    **** 		break;
 927:src/keys.c    **** 
 928:src/keys.c    **** 	default:
 929:src/keys.c    **** 		return op;			// Keys handled by table
 930:src/keys.c    **** 	}
 931:src/keys.c    **** 	return STATE_UNFINISHED;
 932:src/keys.c    **** }
 933:src/keys.c    **** 
 934:src/keys.c    **** 
 935:src/keys.c    **** /*
 936:src/keys.c    ****  *  Process a key code after f or g shift
 937:src/keys.c    ****  */
 938:src/keys.c    **** static int process_fg_shifted(const keycode c) {
 939:src/keys.c    **** 
 940:src/keys.c    **** #define NO_INT 0xf000
 941:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
ARM GAS  /tmp/cc8lpfL1.s 			page 18


 942:src/keys.c    **** 		// Row 1
 943:src/keys.c    **** 		{ 1,                               0                           }, // HYP
 944:src/keys.c    **** 		{ OP_MON | OP_SIN      | NO_INT,   OP_MON | OP_ASIN   | NO_INT },
 945:src/keys.c    **** 		{ OP_MON | OP_COS      | NO_INT,   OP_MON | OP_ACOS   | NO_INT },
 946:src/keys.c    **** 		{ OP_MON | OP_TAN      | NO_INT,   OP_MON | OP_ATAN   | NO_INT },
 947:src/keys.c    **** 		{ OP_NIL | OP_P2R      | NO_INT,   OP_NIL | OP_R2P    | NO_INT },
 948:src/keys.c    **** 		{ OP_NIL | OP_FRACPROPER,	   OP_NIL | OP_FRACIMPROPER    }, // CPX
 949:src/keys.c    **** 		// Row 2
 950:src/keys.c    **** 		{ OP_NIL | OP_HMS,                 OP_NIL | OP_DEG    | NO_INT },
 951:src/keys.c    **** 		{ OP_NIL | OP_FLOAT,               OP_NIL | OP_RAD    | NO_INT },
 952:src/keys.c    **** 		{ OP_NIL | OP_RANDOM,              OP_NIL | OP_GRAD   | NO_INT },
 953:src/keys.c    **** 		// Row 3
 954:src/keys.c    **** 		{ STATE_UNFINISHED,		   OP_NIL | OP_FILL            }, // ENTER
 955:src/keys.c    **** 		{ STATE_WINDOWLEFT,   		   STATE_WINDOWRIGHT   	       },
 956:src/keys.c    **** 		{ RARG(RARG_BASE, 2),		   RARG(RARG_BASE, 8)          },
 957:src/keys.c    **** 		{ RARG(RARG_BASE, 10),		   RARG(RARG_BASE, 16)         },
 958:src/keys.c    **** 		{ OP_NIL | OP_CLPROG,		   OP_NIL | OP_SIGMACLEAR      },
 959:src/keys.c    **** 		// Row 4
 960:src/keys.c    **** 		{ OP_MON | OP_EXP,                 OP_MON | OP_LN              },
 961:src/keys.c    **** 		{ OP_MON | OP_10POWX,		   OP_MON | OP_LOG             },
 962:src/keys.c    **** 		{ OP_MON | OP_2POWX,		   OP_MON | OP_LG2             },
 963:src/keys.c    **** 		{ OP_DYA | OP_POW,                 OP_DYA | OP_LOGXY           },
 964:src/keys.c    **** 		{ OP_MON | OP_RECIP    | NO_INT,   OP_DYA | OP_PARAL	       },
 965:src/keys.c    **** 		// Row 5
 966:src/keys.c    **** 		{ OP_DYA | OP_COMB,                OP_DYA | OP_PERM            },
 967:src/keys.c    **** 		{ OP_MON | OP_cdf_Q    | NO_INT,   OP_MON | OP_qf_Q   | NO_INT },
 968:src/keys.c    **** 		{ OP_NIL | OP_statMEAN | NO_INT,   OP_NIL | OP_statS  | NO_INT },
 969:src/keys.c    **** 		{ OP_MON | OP_yhat     | NO_INT,   OP_NIL | OP_statR  | NO_INT },
 970:src/keys.c    **** 		{ OP_MON | OP_SQRT,		   OP_MON | OP_SQR             },
 971:src/keys.c    **** 		// Row 6
 972:src/keys.c    **** 		{ RARG_SF,                         RARG_CF                     },
 973:src/keys.c    **** 		{ TST_EQ,                          TST_NE                      }, // tests
 974:src/keys.c    **** 		{ RARG_SOLVE           | NO_INT,   RARG_INTG          | NO_INT },
 975:src/keys.c    **** 		{ RARG_PROD            | NO_INT,   RARG_SUM           | NO_INT },
 976:src/keys.c    **** 		{ OP_MON | OP_PERCNT   | NO_INT,   OP_MON | OP_PERCHG | NO_INT },
 977:src/keys.c    **** 		// Row 7
 978:src/keys.c    **** #ifdef INFRARED
 979:src/keys.c    **** 		{ RARG(RARG_PRINT_REG,regX_idx),   STATE_UNFINISHED	       },
 980:src/keys.c    **** #else
 981:src/keys.c    **** 		{ STATE_UNFINISHED,		   STATE_UNFINISHED	       },
 982:src/keys.c    **** #endif
 983:src/keys.c    **** 		{ OP_MON | OP_ABS,		   OP_MON | OP_RND             },
 984:src/keys.c    **** 		{ OP_MON | OP_TRUNC,		   OP_MON | OP_FRAC            },
 985:src/keys.c    **** 		{ RARG_LBL,			   OP_NIL | OP_RTN             },
 986:src/keys.c    **** 		{ RARG_DSE,			   RARG_ISG                    },
 987:src/keys.c    **** #ifdef DM42
 988:src/keys.c    **** 		{ OP_NIL | OP_NOP,		   OP_NIL |OP_NOP              },
 989:src/keys.c    **** #endif
 990:src/keys.c    **** 	};
 991:src/keys.c    **** 
 992:src/keys.c    **** 	static const unsigned short int op_map2[] = {
 993:src/keys.c    **** 		STATE_UNFINISHED,
 994:src/keys.c    **** 		STATE_UNFINISHED,
 995:src/keys.c    **** 		OP_DYA  | OP_POW,
 996:src/keys.c    **** 		OP_MON  | OP_SQRT
 997:src/keys.c    **** 	};
 998:src/keys.c    **** 
ARM GAS  /tmp/cc8lpfL1.s 			page 19


 999:src/keys.c    **** 	enum shifts shift = reset_shift();
1000:src/keys.c    **** 	int lc = keycode_to_linear(c);
1001:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
1002:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
1003:src/keys.c    **** 	if (no_int)
1004:src/keys.c    **** 		op &= ~NO_INT;
1005:src/keys.c    **** 
1006:src/keys.c    **** 	switch (c) {
1007:src/keys.c    **** 	case K00:
1008:src/keys.c    **** 	  if (! UState.intm) {
1009:src/keys.c    **** 	    //	    print_debug(100,0);
1010:src/keys.c    **** 	    State2.hyp = 1;
1011:src/keys.c    **** 	    State2.dot = op;
1012:src/keys.c    **** 	    // State2.cmplx = 0;
1013:src/keys.c    **** 	    return STATE_UNFINISHED;
1014:src/keys.c    **** 	  }
1015:src/keys.c    **** 	  // fall through
1016:src/keys.c    **** 	case K01:
1017:src/keys.c    **** #ifdef DM42
1018:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
1019:src/keys.c    **** 	    return check_f_key(lc, op_map2[lc]);
1020:src/keys.c    **** 	  }
1021:src/keys.c    **** 	  break;
1022:src/keys.c    **** #endif
1023:src/keys.c    **** #ifndef DM42
1024:src/keys.c    **** 	case K02:
1025:src/keys.c    **** #endif
1026:src/keys.c    **** 	case K03:
1027:src/keys.c    **** #ifdef DM42
1028:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
1029:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
1030:src/keys.c    **** 		}
1031:src/keys.c    **** 		break;
1032:src/keys.c    **** #else
1033:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
1034:src/keys.c    **** 			return check_f_key(2, op_map2[lc]);
1035:src/keys.c    **** 		}
1036:src/keys.c    **** 		break;
1037:src/keys.c    **** #endif
1038:src/keys.c    **** 	case K20:				// Alpha
1039:src/keys.c    **** 		if (shift == SHIFT_F) {
1040:src/keys.c    **** 			if (is_bad_cmdline())
1041:src/keys.c    **** 				return STATE_UNFINISHED;
1042:src/keys.c    **** 			process_cmdline_set_lift();
1043:src/keys.c    **** 			State2.alphas = 1;
1044:src/keys.c    **** #ifdef DM42
1045:src/keys.c    **** 			set_menu(M_Alpha);
1046:src/keys.c    **** 			display_current_menu();
1047:src/keys.c    **** #endif
1048:src/keys.c    **** 		}
1049:src/keys.c    **** 		break;
1050:src/keys.c    **** #ifdef DM42
1051:src/keys.c    **** 	case K31:
1052:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(13)) {// Log - so D key
1053:src/keys.c    **** 	    return OP_SPEC | OP_D;
1054:src/keys.c    **** 	  }
1055:src/keys.c    **** 	  break;
ARM GAS  /tmp/cc8lpfL1.s 			page 20


1056:src/keys.c    **** 	case K30:
1057:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(14)) {// Ln - so E key
1058:src/keys.c    **** 	    return OP_SPEC | OP_E;
1059:src/keys.c    **** 	  }
1060:src/keys.c    **** 	  break;
1061:src/keys.c    **** #endif
1062:src/keys.c    **** 	case K51:
1063:src/keys.c    **** 		if (is_bad_cmdline())
1064:src/keys.c    **** 			return STATE_UNFINISHED;
1065:src/keys.c    **** 		process_cmdline_set_lift();
1066:src/keys.c    **** 		State2.test = op;
1067:src/keys.c    **** 		return STATE_UNFINISHED;
1068:src/keys.c    **** 
1069:src/keys.c    **** 	case K50:
1070:src/keys.c    **** #ifndef REALBUILD
1071:src/keys.c    **** 		if (SHIFT_N != shift_down()) {
1072:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
1073:src/keys.c    **** 			return STATE_UNFINISHED;
1074:src/keys.c    **** 		}
1075:src/keys.c    **** #endif
1076:src/keys.c    **** 	case K52:
1077:src/keys.c    **** 	case K53:
1078:src/keys.c    **** 	case K63:
1079:src/keys.c    **** 	case K64:
1080:src/keys.c    **** 		if (op != (OP_NIL | OP_RTN)) {
1081:src/keys.c    **** 			if (! (no_int && UState.intm)) {
1082:src/keys.c    **** 				init_arg((enum rarg) op);
1083:src/keys.c    **** 			}
1084:src/keys.c    **** 			return STATE_UNFINISHED;
1085:src/keys.c    **** 		}
1086:src/keys.c    **** 		break;
1087:src/keys.c    **** 
1088:src/keys.c    **** 	default:
1089:src/keys.c    **** 		break;
1090:src/keys.c    **** 	}
1091:src/keys.c    **** 	if (no_int && UState.intm)
1092:src/keys.c    **** 		return STATE_UNFINISHED;
1093:src/keys.c    **** 
1094:src/keys.c    **** 	return check_confirm(op);
1095:src/keys.c    **** #undef NO_INT
1096:src/keys.c    **** }
1097:src/keys.c    **** 
1098:src/keys.c    **** /*
1099:src/keys.c    ****  *  Process a key code after h shift
1100:src/keys.c    ****  */
1101:src/keys.c    **** static int process_h_shifted(const keycode c) {
1102:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
1103:src/keys.c    **** #define NO_INT   0x4000
1104:src/keys.c    **** 	static const unsigned short int op_map[] = {
1105:src/keys.c    **** 		// Row 1
1106:src/keys.c    **** 		_RARG   | RARG_STD,
1107:src/keys.c    **** 		_RARG   | RARG_FIX,
1108:src/keys.c    **** 		_RARG   | RARG_SCI,
1109:src/keys.c    **** 		_RARG   | RARG_ENG,
1110:src/keys.c    **** 		STATE_UNFINISHED,	// CONV
1111:src/keys.c    **** 		STATE_UNFINISHED,	// MODE
1112:src/keys.c    **** 		// Row 2
ARM GAS  /tmp/cc8lpfL1.s 			page 21


1113:src/keys.c    **** 		STATE_UNFINISHED,	// CAT
1114:src/keys.c    **** 		_RARG   | RARG_VIEW,
1115:src/keys.c    **** 		OP_NIL  | OP_RUP,
1116:src/keys.c    **** 		// Row 3
1117:src/keys.c    **** 		_RARG	| RARG_INTNUM,	// CONST, will be emitted in integer mode only
1118:src/keys.c    **** 		_RARG   | RARG_SWAPX,
1119:src/keys.c    **** 		OP_MON  | OP_NOT,
1120:src/keys.c    **** 		CONST(OP_PI) | NO_INT,
1121:src/keys.c    **** 		OP_NIL  | OP_rCLX,
1122:src/keys.c    **** 		// Row 4
1123:src/keys.c    **** 		_RARG   | RARG_GTO,
1124:src/keys.c    **** 		OP_DYA  | OP_LAND,
1125:src/keys.c    **** 		OP_DYA  | OP_LOR,
1126:src/keys.c    **** 		OP_DYA  | OP_LXOR,
1127:src/keys.c    **** 		OP_DYA  | OP_MOD,
1128:src/keys.c    **** 		// Row 5
1129:src/keys.c    **** 		OP_MON  | OP_FACT,
1130:src/keys.c    **** 		STATE_UNFINISHED,	// PROB
1131:src/keys.c    **** 		STATE_UNFINISHED,	// STAT
1132:src/keys.c    **** 		STATE_UNFINISHED,	// CFIT
1133:src/keys.c    **** 		STATE_UNFINISHED,	// MATRIX
1134:src/keys.c    **** 		// Row 6
1135:src/keys.c    **** 		STATE_UNFINISHED,	// STATUS
1136:src/keys.c    **** 		STATE_UNFINISHED,	// TEST
1137:src/keys.c    **** 		STATE_UNFINISHED,	// P.FCN
1138:src/keys.c    **** 		STATE_UNFINISHED,	// X.FCN
1139:src/keys.c    **** 		OP_SPEC | OP_SIGMAMINUS | NO_INT,
1140:src/keys.c    **** 		// Row 7
1141:src/keys.c    **** 		OP_NIL | OP_OFF,
1142:src/keys.c    **** 		_RARG   | RARG_PAUSE,
1143:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1144:src/keys.c    **** 		OP_NIL  | OP_THOUS_OFF,
1145:src/keys.c    **** #else
1146:src/keys.c    ****  		OP_NIL  | OP_RADCOM,
1147:src/keys.c    **** #endif
1148:src/keys.c    **** 		STATE_UNFINISHED,	// P/R
1149:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS | NO_INT,
1150:src/keys.c    **** #ifdef DM42
1151:src/keys.c    **** 		OP_NIL | OP_NOP,       // shifts etc.
1152:src/keys.c    **** #endif
1153:src/keys.c    **** 	};
1154:src/keys.c    **** 
1155:src/keys.c    **** 	int lc = keycode_to_linear(c);
1156:src/keys.c    **** 	int op = op_map[lc];
1157:src/keys.c    **** 	reset_shift();
1158:src/keys.c    **** 
1159:src/keys.c    **** 	// The switch handles all the special cases
1160:src/keys.c    **** 	switch (c) {
1161:src/keys.c    **** 	case K62:
1162:src/keys.c    **** 		if (UState.intm)
1163:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
1164:src/keys.c    **** 		else
1165:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1166:src/keys.c    **** 			if (UState.nothousands) op = OP_NIL | OP_THOUS_ON;
1167:src/keys.c    **** #else
1168:src/keys.c    **** 			if (UState.fraccomma) op = OP_NIL | OP_RADDOT;
1169:src/keys.c    **** #endif
ARM GAS  /tmp/cc8lpfL1.s 			page 22


1170:src/keys.c    **** 		break;
1171:src/keys.c    **** 
1172:src/keys.c    **** 	case K63:					// Program<->Run mode
1173:src/keys.c    **** 		if (is_bad_cmdline())
1174:src/keys.c    **** 			return STATE_UNFINISHED;
1175:src/keys.c    **** 		State2.runmode = 1 - State2.runmode;
1176:src/keys.c    **** 		process_cmdline_set_lift();
1177:src/keys.c    **** 		update_program_bounds(1);
1178:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
1179:src/keys.c    **** 			set_pc(0);
1180:src/keys.c    **** 		break;
1181:src/keys.c    **** 
1182:src/keys.c    **** 	default:
1183:src/keys.c    **** 		break;
1184:src/keys.c    **** 	}
1185:src/keys.c    **** 
1186:src/keys.c    **** 	if (op != STATE_UNFINISHED) {
1187:src/keys.c    **** 		if (op & _RARG) {
1188:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
1189:src/keys.c    **** 			op = STATE_UNFINISHED;
1190:src/keys.c    **** 		}
1191:src/keys.c    **** 	}
1192:src/keys.c    **** 	return UState.intm && (op & NO_INT) ? STATE_UNFINISHED : op & ~NO_INT;
1193:src/keys.c    **** #undef _RARG
1194:src/keys.c    **** #undef NO_INT
1195:src/keys.c    **** }
1196:src/keys.c    **** #ifdef INCLUDE_C_LOCK
1197:src/keys.c    **** 
1198:src/keys.c    **** // Big section here - lots of functions that help with processing keys in complex lock mode
1199:src/keys.c    **** 
1200:src/keys.c    **** static void do_command_line ( void ) {
1201:src/keys.c    **** 	if (CmdLineLength) {
1202:src/keys.c    **** 		State2.state_lift = 0;
1203:src/keys.c    **** 		process_cmdline();
1204:src/keys.c    **** 	}
1205:src/keys.c    **** }
1206:src/keys.c    **** 
1207:src/keys.c    **** void finish_cpx_entry ( int lift ) {
1208:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
1209:src/keys.c    **** // The argument sets the lift state after entry is finished.
1210:src/keys.c    **** // It also converts entered polar form into rectangular coordinates, if needed.
1211:src/keys.c    **** // Note: does nothing to stack or lift state if number not being entered.
1212:src/keys.c    **** 	if ( !( REAL_FLAG || IMAG_FLAG ) ) return;
1213:src/keys.c    **** 
1214:src/keys.c    **** /*	if (REAL_FLAG) { // real part being entered
1215:src/keys.c    **** 		CLEAR_REAL;
1216:src/keys.c    **** 		do_command_line();
1217:src/keys.c    **** 	}
1218:src/keys.c    **** 	else if (IMAG_FLAG) {
1219:src/keys.c    **** 		CLEAR_IMAG;
1220:src/keys.c    **** 		do_command_line();
1221:src/keys.c    **** 		swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
1222:src/keys.c    **** 	}
1223:src/keys.c    **** */
1224:src/keys.c    **** 	do_command_line();
1225:src/keys.c    **** 	if (IMAG_FLAG) swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
1226:src/keys.c    **** 	CLEAR_REAL;
ARM GAS  /tmp/cc8lpfL1.s 			page 23


1227:src/keys.c    **** 	CLEAR_IMAG;
1228:src/keys.c    **** 
1229:src/keys.c    **** 	State2.state_lift = lift;
1230:src/keys.c    **** 
1231:src/keys.c    **** 	if ( POLAR_DISPLAY && POLAR_FORM_NOT_READY ) {
1232:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
1233:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regX_idx));
1234:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
1235:src/keys.c    **** 		//call p2r
1236:src/keys.c    **** 		update_speed(0);
1237:src/keys.c    **** 		op_p2r(OP_NOP); // x, y now contain rectangular form
1238:src/keys.c    **** #ifdef RP_PREFIX
1239:src/keys.c    **** 		RectPolConv = 1; // stop "y" display
1240:src/keys.c    **** #endif
1241:src/keys.c    **** 		SET_POLAR_READY;
1242:src/keys.c    **** 	}
1243:src/keys.c    **** }
1244:src/keys.c    **** 
1245:src/keys.c    **** static void stack_restore ( void ) { 
1246:src/keys.c    **** 	// called if number entry terminated by EXIT key
1247:src/keys.c    **** 	// uses J and K registers to store the two stack registers displaced by the new entry
1248:src/keys.c    **** 	// tried declaring some static variables to hold the numbers but didn't work on real calculator
1249:src/keys.c    **** 	if ( !REAL_FLAG && !IMAG_FLAG  ) return; // number entry already over; no restore
1250:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
1251:src/keys.c    **** 		drop ( OP_DROPXY );
1252:src/keys.c    **** 		copyreg (get_reg_n(regC_idx), get_reg_n(regJ_idx));
1253:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
1254:src/keys.c    **** 	}
1255:src/keys.c    **** 	else { // X, Y have been overwritten
1256:src/keys.c    **** 		copyreg (get_reg_n(regX_idx), get_reg_n(regJ_idx));
1257:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
1258:src/keys.c    **** 	}
1259:src/keys.c    **** 	State2.state_lift = INIT_LIFT; // restore lift status too
1260:src/keys.c    **** 	CLEAR_INIT_LIFT;
1261:src/keys.c    **** 	CLEAR_POLAR_READY;
1262:src/keys.c    **** }
1263:src/keys.c    **** 
1264:src/keys.c    **** void stack_begin ( int zero_y ) { 
1265:src/keys.c    **** 	// Lifts stack if required and stores displaced registers; 
1266:src/keys.c    **** 	// zeros y if requested. 
1267:src/keys.c    **** 	CLEAR_POLAR_READY;
1268:src/keys.c    **** 	if ( State2.state_lift ){
1269:src/keys.c    **** 		SET_INIT_LIFT;
1270:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regC_idx));
1271:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
1272:src/keys.c    **** 		lift();
1273:src/keys.c    **** 		zero_X();
1274:src/keys.c    **** 		lift();
1275:src/keys.c    **** 		State2.state_lift = 0;
1276:src/keys.c    **** 	}
1277:src/keys.c    **** 	else {
1278:src/keys.c    **** 		CLEAR_INIT_LIFT;
1279:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regX_idx));
1280:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
1281:src/keys.c    **** 		zero_X();
1282:src/keys.c    **** 		if ( zero_y ) zero_Y();
1283:src/keys.c    **** 	}
ARM GAS  /tmp/cc8lpfL1.s 			page 24


1284:src/keys.c    **** }
1285:src/keys.c    **** 
1286:src/keys.c    ****  static int process_c_lock ( const keycode c ) { // main function - called from process (c) functio
1287:src/keys.c    **** 
1288:src/keys.c    ****    enum shifts shift = cur_shift();
1289:src/keys.c    **** 
1290:src/keys.c    ****    // Individual keys needing special treatment
1291:src/keys.c    **** 
1292:src/keys.c    ****    if ( (c < K05) && shift == SHIFT_H ){ // display modes
1293:src/keys.c    ****      return process_h_shifted (c);
1294:src/keys.c    ****    }
1295:src/keys.c    **** 
1296:src/keys.c    **** 
1297:src/keys.c    ****    if ( (shift == SHIFT_G) && (c >= K10) && (c <= K12) ) { // angle mode change; needed because oth
1298:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
1299:src/keys.c    ****    }
1300:src/keys.c    ****    if ( (c >= K05) && (c <= K12) && (shift == SHIFT_F || shift == SHIFT_G) ) { // Deg, rad, grad, H
1301:src/keys.c    ****      return process_fg_shifted (c);
1302:src/keys.c    ****    }
1303:src/keys.c    **** 
1304:src/keys.c    ****    if (c==K23) { // pi key - needs to be separate from what follows as it doesn't want entry comple
1305:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
1306:src/keys.c    ****        reset_shift();
1307:src/keys.c    ****        if ( CmdLineLength ) {
1308:src/keys.c    **** 	 State2.state_lift = 0;
1309:src/keys.c    **** 	 return OP_NIL | OP_PIB;
1310:src/keys.c    ****        }
1311:src/keys.c    ****        else {
1312:src/keys.c    **** 	 return OP_NIL | OP_PIA;
1313:src/keys.c    ****        }
1314:src/keys.c    ****      }
1315:src/keys.c    ****      else {
1316:src/keys.c    **** #if INCLUDE_EEX_PI == 2
1317:src/keys.c    ****        const int eex_pi = 1;
1318:src/keys.c    **** #elif INCLUDE_EEX_PI == 1
1319:src/keys.c    ****        const int eex_pi = get_user_flag(regL_idx);
1320:src/keys.c    **** #else
1321:src/keys.c    ****        const int eex_pi = 0;
1322:src/keys.c    **** #endif
1323:src/keys.c    ****        if ( (shift == SHIFT_H) || (eex_pi && (shift == SHIFT_N) && CmdLineLength == 0) ) { // norma
1324:src/keys.c    **** 	 finish_cpx_entry(1);
1325:src/keys.c    **** 	 return process_cmplx(c);
1326:src/keys.c    ****        }
1327:src/keys.c    ****      }
1328:src/keys.c    ****    }
1329:src/keys.c    **** 
1330:src/keys.c    ****    if (shift != SHIFT_N) { // other shifted keys - special cases first.
1331:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
1332:src/keys.c    ****      switch (c) {
1333:src/keys.c    ****      case (K60):
1334:src/keys.c    ****        reset_shift();
1335:src/keys.c    ****        if (shift == SHIFT_H) return (OP_NIL | OP_OFF);
1336:src/keys.c    ****      case (K21): // x<->y key
1337:src/keys.c    ****        if (shift == SHIFT_F || shift == SHIFT_G) { // exchanges real and imag parts with either shi
1338:src/keys.c    **** 	 reset_shift();
1339:src/keys.c    **** 	 CLEAR_POLAR_READY;
1340:src/keys.c    **** 	 return RARG(RARG_SWAPX, regY_idx);
ARM GAS  /tmp/cc8lpfL1.s 			page 25


1341:src/keys.c    ****        }
1342:src/keys.c    ****        else if (shift == SHIFT_H) {
1343:src/keys.c    **** 	 return process_cmplx(c); // complex exchange of (x,y) with register
1344:src/keys.c    ****        }
1345:src/keys.c    ****        break;
1346:src/keys.c    ****      case (K40): // up-arrow key
1347:src/keys.c    ****        if (shift == SHIFT_F) {
1348:src/keys.c    **** 	 SET_RECTANGULAR_DISPLAY;
1349:src/keys.c    ****        }
1350:src/keys.c    ****        else if (shift == SHIFT_G) {
1351:src/keys.c    **** 	 SET_POLAR_DISPLAY;
1352:src/keys.c    **** 	 CLEAR_POLAR_READY;
1353:src/keys.c    **** 	 update_speed(0); // new polar display calculated from keyboard needs a speed boost
1354:src/keys.c    ****        }
1355:src/keys.c    ****        else if (shift == SHIFT_H) { // ND addition on DM42 - should work on ordinary calculator too
1356:src/keys.c    **** 	 return process_cmplx (c);
1357:src/keys.c    ****        }
1358:src/keys.c    ****        break;
1359:src/keys.c    ****      case (K22): // +/- key
1360:src/keys.c    ****        reset_shift();
1361:src/keys.c    ****        if (shift == SHIFT_F ) {
1362:src/keys.c    **** 	 return OP_NIL | OP_C_MIM;
1363:src/keys.c    ****        }
1364:src/keys.c    ****        else if (shift == SHIFT_H) {
1365:src/keys.c    **** 	 return OP_NIL | OP_C_MRE;
1366:src/keys.c    ****        }
1367:src/keys.c    ****        break;
1368:src/keys.c    ****      case (K62): // IP/FP key
1369:src/keys.c    ****        reset_shift();
1370:src/keys.c    ****        if (shift == SHIFT_F) {
1371:src/keys.c    **** 	 return OP_NIL | OP_C_IM;
1372:src/keys.c    ****        }
1373:src/keys.c    ****        else if (shift == SHIFT_G) {
1374:src/keys.c    **** 	 return OP_NIL | OP_C_RE;
1375:src/keys.c    ****        }
1376:src/keys.c    ****        break;
1377:src/keys.c    ****      case (K44): // x (times) key
1378:src/keys.c    ****        if (shift == SHIFT_H) { // real*real + i imag*imag
1379:src/keys.c    **** 	 reset_shift();
1380:src/keys.c    **** 	 return OP_CDYA | OP_CDOT;
1381:src/keys.c    ****        }
1382:src/keys.c    ****        else {
1383:src/keys.c    **** 	 return process_cmplx(c);
1384:src/keys.c    ****        }
1385:src/keys.c    ****        break;
1386:src/keys.c    ****      case (K34): // divide key
1387:src/keys.c    ****        if (shift == SHIFT_H) { // real/real + i imag/imag
1388:src/keys.c    **** 	 reset_shift();
1389:src/keys.c    **** 	 return OP_CDYA | OP_CDOTDIV;
1390:src/keys.c    ****        }
1391:src/keys.c    ****        else {
1392:src/keys.c    **** 	 return process_cmplx(c);
1393:src/keys.c    ****        }
1394:src/keys.c    ****        break;
1395:src/keys.c    ****      case (K24): // <- key
1396:src/keys.c    ****        if (POLAR_DISPLAY) break;
1397:src/keys.c    ****        if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real pa
ARM GAS  /tmp/cc8lpfL1.s 			page 26


1398:src/keys.c    **** 	 zero_X ();
1399:src/keys.c    **** 	 State2.state_lift = 0;
1400:src/keys.c    **** 	 SET_REAL;
1401:src/keys.c    **** 	 stack_begin (0);
1402:src/keys.c    ****        }
1403:src/keys.c    ****        break;
1404:src/keys.c    ****      default:
1405:src/keys.c    ****        return process_cmplx(c); // for shifted keys not listed above
1406:src/keys.c    ****      }
1407:src/keys.c    ****      reset_shift(); // for the keys listed above; functions complete
1408:src/keys.c    ****      return STATE_UNFINISHED;
1409:src/keys.c    ****    }
1410:src/keys.c    **** 
1411:src/keys.c    ****    switch (c) { // non-shifted keys including numbers - in general, keys to be processed normally n
1412:src/keys.c    ****    case (K61):
1413:src/keys.c    ****    case (K62):
1414:src/keys.c    ****    case (K51):
1415:src/keys.c    ****    case (K52):
1416:src/keys.c    ****    case (K53):
1417:src/keys.c    ****    case (K41):
1418:src/keys.c    ****    case (K42):
1419:src/keys.c    ****    case (K43):
1420:src/keys.c    ****    case (K31):
1421:src/keys.c    ****    case (K32):
1422:src/keys.c    ****    case (K33):
1423:src/keys.c    ****    case (K23): // 0.123456789EEX
1424:src/keys.c    ****      if (!REAL_FLAG && !IMAG_FLAG) {
1425:src/keys.c    ****        SET_REAL; // start and continuation of real entry
1426:src/keys.c    ****        stack_begin (1);
1427:src/keys.c    ****      }
1428:src/keys.c    ****      return process_normal(c);
1429:src/keys.c    ****    case (K22): // CHS
1430:src/keys.c    ****      //	case (K23): // EEX
1431:src/keys.c    ****      if (!REAL_FLAG && !IMAG_FLAG) {
1432:src/keys.c    ****        return process_cmplx(c);
1433:src/keys.c    ****      }
1434:src/keys.c    ****      else {
1435:src/keys.c    ****        return process_normal(c);
1436:src/keys.c    ****      }
1437:src/keys.c    ****    case (K24): // backspace
1438:src/keys.c    ****    case (K04): // arrow
1439:src/keys.c    ****    case (K_ARROW):
1440:src/keys.c    ****      return process_normal(c);
1441:src/keys.c    ****    case (K_CMPLX):
1442:src/keys.c    ****      if (REAL_FLAG) { // Something - at least one digit - has been entered; real part now complete
1443:src/keys.c    ****        CLEAR_REAL;
1444:src/keys.c    ****        SET_IMAG;
1445:src/keys.c    ****        do_command_line();
1446:src/keys.c    ****        State2.state_lift = 0;
1447:src/keys.c    ****        swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
1448:src/keys.c    ****      }
1449:src/keys.c    ****      else if (IMAG_FLAG) { // finishing off imag part; nothing has necessarily been entered
1450:src/keys.c    ****        finish_cpx_entry (1);
1451:src/keys.c    ****      }
1452:src/keys.c    ****      else { // down here we need a part that deals with CPX being pressed without a real part being
1453:src/keys.c    ****        SET_IMAG;
1454:src/keys.c    ****        stack_begin (1);
ARM GAS  /tmp/cc8lpfL1.s 			page 27


1455:src/keys.c    ****      }
1456:src/keys.c    ****      return STATE_UNFINISHED;
1457:src/keys.c    ****    default:;
1458:src/keys.c    ****    }
1459:src/keys.c    ****    finish_cpx_entry(0);
1460:src/keys.c    ****    return process_cmplx(c);
1461:src/keys.c    **** 
1462:src/keys.c    ****  }
1463:src/keys.c    **** 
1464:src/keys.c    **** #endif
1465:src/keys.c    **** 
1466:src/keys.c    **** /*
1467:src/keys.c    ****  *  Process a key code after CPX
1468:src/keys.c    ****  */
1469:src/keys.c    **** static int process_cmplx(const keycode c) {
1470:src/keys.c    **** #define _RARG   0xFF00
1471:src/keys.c    **** #define CSWAPXZ RARG(RARG_CSWAPX, regZ_idx)
1472:src/keys.c    **** #define CNUM(n) RARG(RARG_INTNUM_CMPLX, n)
1473:src/keys.c    **** 
1474:src/keys.c    **** 	static const unsigned short int op_map[][4] = {
1475:src/keys.c    **** 		// Row 1
1476:src/keys.c    **** 		{ 1,			1,                   0,                   0		      }, // HYP
1477:src/keys.c    **** 		{ OP_CMON | OP_RECIP,	OP_CMON | OP_SIN,    OP_CMON | OP_ASIN,   STATE_UNFINISHED    },
1478:src/keys.c    **** 		{ OP_CDYA | OP_POW,	OP_CMON | OP_COS,    OP_CMON | OP_ACOS,   STATE_UNFINISHED    },
1479:src/keys.c    **** 		{ OP_CMON | OP_SQRT,	OP_CMON | OP_TAN,    OP_CMON | OP_ATAN,   STATE_UNFINISHED    },
1480:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_NIL | OP_P2R,     OP_NIL | OP_R2P,     STATE_UNFINISHED    },
1481:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    }, // CPX
1482:src/keys.c    **** 		// Row 2
1483:src/keys.c    **** 		{ _RARG | RARG_CSTO,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1484:src/keys.c    **** 		{ _RARG | RARG_CRCL,	STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CVIEW  },
1485:src/keys.c    **** 		{ OP_NIL | OP_CRDOWN,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_CRUP    }, // R^
1486:src/keys.c    **** 		// Row 3
1487:src/keys.c    **** 		{ OP_NIL | OP_CENTER,	STATE_UNFINISHED,    OP_NIL | OP_CFILL,   OP_NIL | OP_CFILL   }, // ENTER
1488:src/keys.c    **** 		{ CSWAPXZ,		STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CSWAPX },
1489:src/keys.c    **** 		{ OP_CMON | OP_CCHS,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_CMON | OP_CCONJ  },
1490:src/keys.c    **** 		{ CONST_CMPLX(OP_PI),	STATE_UNFINISHED,    STATE_UNFINISHED,    CONST_CMPLX(OP_PI)  },
1491:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1492:src/keys.c    **** 		// Row 4
1493:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CMON | OP_EXP,    OP_CMON | OP_LN,     STATE_UNFINISHED    },
1494:src/keys.c    **** 		{ CNUM(7),		OP_CMON | OP_10POWX, OP_CMON | OP_LOG,    STATE_UNFINISHED    },
1495:src/keys.c    **** 		{ CNUM(8),		OP_CMON | OP_2POWX,  OP_CMON | OP_LG2,    STATE_UNFINISHED    },
1496:src/keys.c    **** 		{ CNUM(9),		OP_CDYA | OP_POW,    OP_CDYA | OP_LOGXY,  STATE_UNFINISHED    },
1497:src/keys.c    **** 		{ OP_CDYA | OP_DIV,	OP_CMON | OP_RECIP,  OP_CDYA | OP_PARAL,  STATE_UNFINISHED    },
1498:src/keys.c    **** 		// Row 5
1499:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CDYA | OP_COMB,   OP_CDYA | OP_PERM,   OP_CMON | OP_FACT   },
1500:src/keys.c    **** 		{ CNUM(4),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1501:src/keys.c    **** 		{ CNUM(5),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1502:src/keys.c    **** 		{ CNUM(6),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1503:src/keys.c    **** 		{ OP_CDYA | OP_MUL,	OP_CMON | OP_SQRT,   OP_CMON | OP_SQR,    OP_CMON | OP_SQR    },
1504:src/keys.c    **** 		// Row 6
1505:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1506:src/keys.c    **** 		{ CNUM(1),		TST_EQ,              TST_NE,              STATE_UNFINISHED    }, // tests
1507:src/keys.c    **** 		{ CNUM(2),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1508:src/keys.c    **** 		{ CNUM(3),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1509:src/keys.c    **** 		{ OP_CDYA | OP_SUB,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1510:src/keys.c    **** 		// Row 7
1511:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_OFF     },
ARM GAS  /tmp/cc8lpfL1.s 			page 28


1512:src/keys.c    **** 		{ CNUM(0),		OP_CMON | OP_ABS,    OP_CMON | OP_RND,    STATE_UNFINISHED    },
1513:src/keys.c    **** 		{ OP_NIL | OP_cmplxI,	OP_CMON | OP_TRUNC,  OP_CMON | OP_FRAC,   STATE_UNFINISHED    },
1514:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1515:src/keys.c    **** 		{ OP_NIL | OP_STOPWATCH, STATE_UNFINISHED,   STATE_UNFINISHED,    STATE_UNFINISHED    },
1516:src/keys.c    **** #else
1517:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1518:src/keys.c    **** #endif
1519:src/keys.c    **** 		{ OP_CDYA | OP_ADD,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1520:src/keys.c    **** #ifdef DM42
1521:src/keys.c    **** 		{ OP_NIL | OP_NOP,	OP_NIL | OP_NOP,    OP_NIL | OP_NOP,    OP_NIL | OP_NOP    }
1522:src/keys.c    **** #endif
1523:src/keys.c    **** 	};
1524:src/keys.c    **** 
1525:src/keys.c    **** 	enum shifts shift = reset_shift();
1526:src/keys.c    **** 	int lc = keycode_to_linear(c);
1527:src/keys.c    **** 	int op = op_map[lc][shift];
1528:src/keys.c    **** 	State2.cmplx = 0;
1529:src/keys.c    **** 
1530:src/keys.c    **** 	if ((op & _RARG) == _RARG) {
1531:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
1532:src/keys.c    **** 		return STATE_UNFINISHED;
1533:src/keys.c    **** 	}
1534:src/keys.c    **** 	if (c == K00) {
1535:src/keys.c    **** 		// HYP
1536:src/keys.c    **** 		process_cmdline_set_lift();
1537:src/keys.c    **** 		//		print_debug(100,1);
1538:src/keys.c    **** 		State2.hyp = 1;
1539:src/keys.c    **** 		State2.dot = op;
1540:src/keys.c    **** 		State2.cmplx = 1;
1541:src/keys.c    **** 		return STATE_UNFINISHED;
1542:src/keys.c    **** 	}
1543:src/keys.c    **** 
1544:src/keys.c    **** 	if (shift != SHIFT_N) {
1545:src/keys.c    **** 		switch (c) {
1546:src/keys.c    **** 		case K_CMPLX:
1547:src/keys.c    **** 			set_shift(shift);
1548:src/keys.c    **** 			break;
1549:src/keys.c    **** 
1550:src/keys.c    **** 		case K51:
1551:src/keys.c    **** 			if (op != STATE_UNFINISHED) {
1552:src/keys.c    **** 				if (is_bad_cmdline())
1553:src/keys.c    **** 					return STATE_UNFINISHED;
1554:src/keys.c    **** 				process_cmdline_set_lift();
1555:src/keys.c    **** 				State2.cmplx = 1;
1556:src/keys.c    **** 				State2.test = op;
1557:src/keys.c    **** 			}
1558:src/keys.c    **** 			return STATE_UNFINISHED;
1559:src/keys.c    **** 
1560:src/keys.c    **** 		case K60:
1561:src/keys.c    **** 			init_state();
1562:src/keys.c    **** 			break;
1563:src/keys.c    **** 
1564:src/keys.c    **** 		default:
1565:src/keys.c    **** 			break;
1566:src/keys.c    **** 		}
1567:src/keys.c    **** 	}
1568:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
ARM GAS  /tmp/cc8lpfL1.s 			page 29


1569:src/keys.c    **** 	return check_confirm(op);
1570:src/keys.c    **** #else
1571:src/keys.c    **** 	return op;
1572:src/keys.c    **** #endif
1573:src/keys.c    **** 
1574:src/keys.c    **** #undef _RARG
1575:src/keys.c    **** #undef CSWAPXZ
1576:src/keys.c    **** #undef CNUM
1577:src/keys.c    **** }
1578:src/keys.c    **** 
1579:src/keys.c    **** 
1580:src/keys.c    **** 
1581:src/keys.c    **** /*
1582:src/keys.c    ****  * Fairly simple routine for dealing with the HYP prefix.
1583:src/keys.c    ****  * This setting can only be followed by 4, 5, or 6 to specify
1584:src/keys.c    ****  * the function.  The inverse routines use the code too, the State2.dot
1585:src/keys.c    ****  * is 1 for normal and 0 for inverse hyperbolic.  We also have to
1586:src/keys.c    ****  * deal with the complex versions and the handling of that key and
1587:src/keys.c    ****  * the ON key are dealt with by our caller.
1588:src/keys.c    ****  */
1589:src/keys.c    **** static int process_hyp(const keycode c) {
1590:src/keys.c    **** 	static const unsigned char op_map[][2] = {
1591:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
1592:src/keys.c    **** 		{ OP_ACOSH, OP_COSH },
1593:src/keys.c    **** 		{ OP_ATANH, OP_TANH }
1594:src/keys.c    **** 	};
1595:src/keys.c    **** 	int cmplx = State2.cmplx;
1596:src/keys.c    **** 	int f = State2.dot;
1597:src/keys.c    **** 
1598:src/keys.c    **** 	State2.hyp = 0;
1599:src/keys.c    **** 	State2.cmplx = 0;
1600:src/keys.c    **** 	State2.dot = 0;
1601:src/keys.c    **** #ifdef DM42
1602:src/keys.c    **** 	reset_shift();
1603:src/keys.c    **** #endif
1604:src/keys.c    **** 	switch ((int)c) {
1605:src/keys.c    **** 
1606:src/keys.c    **** 	case K01:
1607:src/keys.c    **** 	case K02:
1608:src/keys.c    **** 	case K03:
1609:src/keys.c    **** 		return (cmplx ? OP_CMON : OP_MON) | op_map[c - K01][f];
1610:src/keys.c    **** 
1611:src/keys.c    **** 	case K_CMPLX:
1612:src/keys.c    **** 		cmplx = ! cmplx;
1613:src/keys.c    **** 		goto stay;
1614:src/keys.c    **** 
1615:src/keys.c    **** #ifndef DM42
1616:src/keys.c    **** 	case K_F: 
1617:src/keys.c    **** 	case K_G:
1618:src/keys.c    **** 		f = (c == K_F);
1619:src/keys.c    **** 		// fall through
1620:src/keys.c    **** #else
1621:src/keys.c    **** 	case K_F:
1622:src/keys.c    **** 	  if (c == K_F) f = 1 - f;
1623:src/keys.c    **** #endif
1624:src/keys.c    **** 	stay:
1625:src/keys.c    **** 		// process_cmdline_set_lift();
ARM GAS  /tmp/cc8lpfL1.s 			page 30


1626:src/keys.c    **** 	  //	  print_debug(100,2);
1627:src/keys.c    **** 	  
1628:src/keys.c    **** 	  State2.hyp = 1;
1629:src/keys.c    **** 		State2.cmplx = cmplx;
1630:src/keys.c    **** 		State2.dot = f;
1631:src/keys.c    **** 		break;
1632:src/keys.c    **** 
1633:src/keys.c    **** 	default:
1634:src/keys.c    **** 		break;
1635:src/keys.c    **** 	}
1636:src/keys.c    **** 	return STATE_UNFINISHED;
1637:src/keys.c    **** }
1638:src/keys.c    **** 
1639:src/keys.c    **** 
1640:src/keys.c    **** /*
1641:src/keys.c    ****  *  Process a key code after ->
1642:src/keys.c    ****  */
1643:src/keys.c    **** static int process_arrow(const keycode c) {
1644:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
1645:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
1646:src/keys.c    **** 		{ OP_MON | OP_2RAD,  OP_MON | OP_HMS2 },
1647:src/keys.c    **** 		{ OP_MON | OP_2GRAD, STATE_UNFINISHED }
1648:src/keys.c    **** 	};
1649:src/keys.c    **** 	static const enum single_disp disp[][2] = {
1650:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
1651:src/keys.c    **** 		{ SDISP_HEX, SDISP_DEC }
1652:src/keys.c    **** 	};
1653:src/keys.c    **** 	const int shift = reset_shift();
1654:src/keys.c    **** 	const int f = (shift == SHIFT_F);
1655:src/keys.c    **** 
1656:src/keys.c    **** 	State2.arrow = 0;
1657:src/keys.c    **** #ifdef DM42
1658:src/keys.c    **** 	set_last_menu ();
1659:src/keys.c    **** 	display_current_menu ();
1660:src/keys.c    **** #endif
1661:src/keys.c    **** #ifdef INCLUDE_C_LOCK
1662:src/keys.c    **** 	if (c == K_CMPLX && CPX_ENABLED) { // need this before the SHIFT_N test
1663:src/keys.c    **** 	  if (!C_LOCK_ON) {
1664:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
1665:src/keys.c    **** 	  }
1666:src/keys.c    **** 	  else {
1667:src/keys.c    **** 	    return OP_NIL | OP_C_OFF;
1668:src/keys.c    **** 	  }
1669:src/keys.c    **** 	}
1670:src/keys.c    **** #endif
1671:src/keys.c    **** 	if (shift == SHIFT_N) return STATE_UNFINISHED;
1672:src/keys.c    **** 	
1673:src/keys.c    **** 	if (c >= K10 && c <= K12)
1674:src/keys.c    **** 		return op_map[c - K10][f];
1675:src/keys.c    **** 
1676:src/keys.c    **** 	if (c == K22 || c == K23)
1677:src/keys.c    **** 		set_smode(disp[c - K22][f]);
1678:src/keys.c    **** 
1679:src/keys.c    **** 	return STATE_UNFINISHED;
1680:src/keys.c    **** }
1681:src/keys.c    **** 
1682:src/keys.c    **** 
ARM GAS  /tmp/cc8lpfL1.s 			page 31


1683:src/keys.c    **** /* Process a GTO . sequence
1684:src/keys.c    ****  */
1685:src/keys.c    **** static int gtodot_digit(const int n) {
  30              		.loc 1 1685 38 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
1686:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  34              		.loc 1 1686 2 view .LVU1
1687:src/keys.c    **** 	const int lib = nLIB(state_pc());
  35              		.loc 1 1687 18 is_stmt 0 view .LVU2
  36 0000 144B     		ldr	r3, .L5
  37 0002 1A68     		ldr	r2, [r3]
1685:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  38              		.loc 1 1685 38 view .LVU3
  39 0004 70B5     		push	{r4, r5, r6, lr}
  40              		.cfi_def_cfa_offset 16
  41              		.cfi_offset 4, -16
  42              		.cfi_offset 5, -12
  43              		.cfi_offset 6, -8
  44              		.cfi_offset 14, -4
1686:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  45              		.loc 1 1686 24 view .LVU4
  46 0006 144E     		ldr	r6, .L5+4
  47              		.loc 1 1687 18 view .LVU5
  48 0008 B2F8E057 		ldrh	r5, [r2, #2016]
1686:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  49              		.loc 1 1686 24 view .LVU6
  50 000c 3389     		ldrh	r3, [r6, #8]
  51              		.loc 1 1687 18 view .LVU7
  52 000e AD0B     		lsrs	r5, r5, #14
1686:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  53              		.loc 1 1686 32 view .LVU8
  54 0010 03EB8303 		add	r3, r3, r3, lsl #2
1685:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  55              		.loc 1 1685 38 view .LVU9
  56 0014 0446     		mov	r4, r0
1688:src/keys.c    **** 
1689:src/keys.c    **** 	if (val > sizeLIB(lib) / 10)
  57              		.loc 1 1689 12 view .LVU10
  58 0016 2846     		mov	r0, r5
  59              	.LVL1:
1686:src/keys.c    **** 	const int lib = nLIB(state_pc());
  60              		.loc 1 1686 12 view .LVU11
  61 0018 04EB4304 		add	r4, r4, r3, lsl #1
  62              	.LVL2:
1687:src/keys.c    **** 
  63              		.loc 1 1687 2 is_stmt 1 view .LVU12
  64              		.loc 1 1689 2 view .LVU13
  65              		.loc 1 1689 12 is_stmt 0 view .LVU14
  66 001c FFF7FEFF 		bl	sizeLIB
  67              	.LVL3:
  68              		.loc 1 1689 25 view .LVU15
  69 0020 0E4A     		ldr	r2, .L5+8
  70 0022 82FB0032 		smull	r3, r2, r2, r0
  71 0026 C317     		asrs	r3, r0, #31
  72 0028 C3EBA203 		rsb	r3, r3, r2, asr #2
ARM GAS  /tmp/cc8lpfL1.s 			page 32


  73              		.loc 1 1689 5 view .LVU16
  74 002c A342     		cmp	r3, r4
  75 002e 0FDB     		blt	.L1
1690:src/keys.c    **** 		return val;
1691:src/keys.c    **** 	if (++State2.numdigit == 3 + (lib & 1))
  76              		.loc 1 1691 2 is_stmt 1 view .LVU17
  77              		.loc 1 1691 6 is_stmt 0 view .LVU18
  78 0030 F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
  79              		.loc 1 1691 29 view .LVU19
  80 0032 15F0010F 		tst	r5, #1
  81              		.loc 1 1691 6 view .LVU20
  82 0036 03F10103 		add	r3, r3, #1
  83 003a DBB2     		uxtb	r3, r3
  84              		.loc 1 1691 29 view .LVU21
  85 003c 0CBF     		ite	eq
  86 003e 0322     		moveq	r2, #3
  87 0040 0422     		movne	r2, #4
  88              		.loc 1 1691 5 view .LVU22
  89 0042 9342     		cmp	r3, r2
1692:src/keys.c    **** 		return val;
1693:src/keys.c    **** 	State2.digval = val;
  90              		.loc 1 1693 2 is_stmt 1 view .LVU23
  91              		.loc 1 1693 16 is_stmt 0 view .LVU24
  92 0044 18BF     		it	ne
  93 0046 3481     		strhne	r4, [r6, #8]	@ movhi
1694:src/keys.c    **** 	return -1;
  94              		.loc 1 1694 2 is_stmt 1 view .LVU25
1691:src/keys.c    **** 		return val;
  95              		.loc 1 1691 5 is_stmt 0 view .LVU26
  96 0048 F372     		strb	r3, [r6, #11]
  97              		.loc 1 1694 9 view .LVU27
  98 004a 18BF     		it	ne
  99 004c 4FF0FF34 		movne	r4, #-1
 100              	.LVL4:
 101              	.L1:
1695:src/keys.c    **** }
 102              		.loc 1 1695 1 view .LVU28
 103 0050 2046     		mov	r0, r4
 104 0052 70BD     		pop	{r4, r5, r6, pc}
 105              	.LVL5:
 106              	.L6:
 107              		.loc 1 1695 1 view .LVU29
 108              		.align	2
 109              	.L5:
 110 0054 00000000 		.word	main_ram
 111 0058 00000000 		.word	StateWhileOn
 112 005c 67666666 		.word	1717986919
 113              		.cfi_endproc
 114              	.LFE30:
 116              		.section	.text.check_f_key,"ax",%progbits
 117              		.align	1
 118              		.p2align 2,,3
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu fpv4-sp-d16
 124              	check_f_key:
ARM GAS  /tmp/cc8lpfL1.s 			page 33


 125              	.LVL6:
 126              	.LFB17:
 745:src/keys.c    **** 	const int code = 100 + n;
 127              		.loc 1 745 47 is_stmt 1 view -0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 746:src/keys.c    **** 	unsigned int pc = state_pc();
 131              		.loc 1 746 2 view .LVU31
 745:src/keys.c    **** 	const int code = 100 + n;
 132              		.loc 1 745 47 is_stmt 0 view .LVU32
 133 0000 38B5     		push	{r3, r4, r5, lr}
 134              		.cfi_def_cfa_offset 16
 135              		.cfi_offset 3, -16
 136              		.cfi_offset 4, -12
 137              		.cfi_offset 5, -8
 138              		.cfi_offset 14, -4
 749:src/keys.c    **** 		if (isXROM(pc))
 139              		.loc 1 749 6 view .LVU33
 140 0002 0D4B     		ldr	r3, .L17
 141 0004 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 142              	.LVL7:
 747:src/keys.c    **** 
 143              		.loc 1 747 2 is_stmt 1 view .LVU34
 749:src/keys.c    **** 		if (isXROM(pc))
 144              		.loc 1 749 2 view .LVU35
 749:src/keys.c    **** 		if (isXROM(pc))
 145              		.loc 1 749 5 is_stmt 0 view .LVU36
 146 0006 5B06     		lsls	r3, r3, #25
 745:src/keys.c    **** 	const int code = 100 + n;
 147              		.loc 1 745 47 view .LVU37
 148 0008 0C46     		mov	r4, r1
 749:src/keys.c    **** 		if (isXROM(pc))
 149              		.loc 1 749 5 view .LVU38
 150 000a 0FD5     		bpl	.L11
 747:src/keys.c    **** 
 151              		.loc 1 747 20 view .LVU39
 152 000c 0B4B     		ldr	r3, .L17+4
 153              	.LVL8:
 747:src/keys.c    **** 
 154              		.loc 1 747 20 view .LVU40
 155 000e 1B68     		ldr	r3, [r3]
 156              	.LVL9:
 747:src/keys.c    **** 
 157              		.loc 1 747 15 view .LVU41
 158 0010 B3F8E037 		ldrh	r3, [r3, #2016]
 159              	.LVL10:
 750:src/keys.c    **** 			pc = 1;
 160              		.loc 1 750 3 is_stmt 1 view .LVU42
 750:src/keys.c    **** 			pc = 1;
 161              		.loc 1 750 7 is_stmt 0 view .LVU43
 162 0014 9A0B     		lsrs	r2, r3, #14
 751:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 163              		.loc 1 751 7 view .LVU44
 164 0016 032A     		cmp	r2, #3
 165              	.LVL11:
 752:src/keys.c    **** 			return RARG(RARG_XEQ, code);
ARM GAS  /tmp/cc8lpfL1.s 			page 34


 166              		.loc 1 752 3 is_stmt 1 view .LVU45
 746:src/keys.c    **** 	unsigned int pc = state_pc();
 167              		.loc 1 746 12 is_stmt 0 view .LVU46
 168 0018 00F16405 		add	r5, r0, #100
 169              	.LVL12:
 752:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 170              		.loc 1 752 7 view .LVU47
 171 001c 2946     		mov	r1, r5
 172              	.LVL13:
 752:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 173              		.loc 1 752 7 view .LVU48
 174 001e 14BF     		ite	ne
 175 0020 1846     		movne	r0, r3
 176              	.LVL14:
 752:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 177              		.loc 1 752 7 view .LVU49
 178 0022 0120     		moveq	r0, #1
 179 0024 0222     		movs	r2, #2
 180 0026 FFF7FEFF 		bl	find_label_from
 181              	.LVL15:
 752:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 182              		.loc 1 752 6 view .LVU50
 183 002a 08B9     		cbnz	r0, .L16
 184              	.LVL16:
 185              	.L11:
 755:src/keys.c    **** }
 186              		.loc 1 755 9 view .LVU51
 187 002c 2046     		mov	r0, r4
 756:src/keys.c    **** 
 188              		.loc 1 756 1 view .LVU52
 189 002e 38BD     		pop	{r3, r4, r5, pc}
 190              	.LVL17:
 191              	.L16:
 753:src/keys.c    **** 	}
 192              		.loc 1 753 4 is_stmt 1 view .LVU53
 753:src/keys.c    **** 	}
 193              		.loc 1 753 11 is_stmt 0 view .LVU54
 194 0030 45F4C840 		orr	r0, r5, #25600
 756:src/keys.c    **** 
 195              		.loc 1 756 1 view .LVU55
 196 0034 38BD     		pop	{r3, r4, r5, pc}
 197              	.LVL18:
 198              	.L18:
 756:src/keys.c    **** 
 199              		.loc 1 756 1 view .LVU56
 200 0036 00BF     		.align	2
 201              	.L17:
 202 0038 00000000 		.word	StateWhileOn
 203 003c 00000000 		.word	main_ram
 204              		.cfi_endproc
 205              	.LFE17:
 207              		.section	.text.is_label_or_end_at,"ax",%progbits
 208              		.align	1
 209              		.p2align 2,,3
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
ARM GAS  /tmp/cc8lpfL1.s 			page 35


 213              		.fpu fpv4-sp-d16
 215              	is_label_or_end_at:
 216              	.LVL19:
 217              	.LFB54:
1696:src/keys.c    **** 
1697:src/keys.c    **** static int gtodot_fkey(int n) {
1698:src/keys.c    **** 	const int code = 100 + n;
1699:src/keys.c    **** 	unsigned int pc = state_pc();
1700:src/keys.c    **** 
1701:src/keys.c    **** 	if(isXROM(pc))
1702:src/keys.c    **** 		pc = 1;
1703:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
1704:src/keys.c    **** 	if (pc > 0)
1705:src/keys.c    **** 		return pc;
1706:src/keys.c    **** 	return state_pc();
1707:src/keys.c    **** }
1708:src/keys.c    **** 
1709:src/keys.c    **** static int process_gtodot(const keycode c) {
1710:src/keys.c    **** 	int pc = -1;
1711:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
1712:src/keys.c    **** 
1713:src/keys.c    **** 	if (rawpc <= 9) {
1714:src/keys.c    **** 		// Digit 0 - 9
1715:src/keys.c    **** 		pc = gtodot_digit(rawpc);
1716:src/keys.c    **** 	}
1717:src/keys.c    **** #ifdef DM42
1718:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regX_idx) rawpc = gtodot_digit(1); 
1719:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
1720:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
1721:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
1722:src/keys.c    **** #endif
1723:src/keys.c    **** 	else if (c >= K00 && c <= K03) {
1724:src/keys.c    **** 		// A - D
1725:src/keys.c    **** 		rawpc = gtodot_fkey(c - K00);
1726:src/keys.c    **** 		goto fin;
1727:src/keys.c    **** 	}
1728:src/keys.c    **** 	else if (c == K62) {
1729:src/keys.c    **** 		// .
1730:src/keys.c    **** 		rawpc = ProgSize;
1731:src/keys.c    **** 		goto fin;
1732:src/keys.c    **** 	}
1733:src/keys.c    **** 	else if (c == K20) {
1734:src/keys.c    **** 		// ENTER - short circuit processing
1735:src/keys.c    **** 		pc = State2.digval;
1736:src/keys.c    **** 	}
1737:src/keys.c    **** 	else if (c == K24) {
1738:src/keys.c    **** 		// backspace
1739:src/keys.c    **** 		if (State2.numdigit == 0) {
1740:src/keys.c    **** 			goto fin2;
1741:src/keys.c    **** 		} else {
1742:src/keys.c    **** 			State2.numdigit--;
1743:src/keys.c    **** 			State2.digval /= 10;
1744:src/keys.c    **** 		}
1745:src/keys.c    **** 	}
1746:src/keys.c    **** 	else if (c == K_UP) {
1747:src/keys.c    **** 		// up
1748:src/keys.c    **** 		rawpc = state_pc();
ARM GAS  /tmp/cc8lpfL1.s 			page 36


1749:src/keys.c    **** 		if (rawpc == 1)
1750:src/keys.c    **** 			rawpc = 0;
1751:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
1752:src/keys.c    **** 		update_program_bounds(1);
1753:src/keys.c    **** 		rawpc = ProgBegin;
1754:src/keys.c    **** 		goto fin;
1755:src/keys.c    **** 	}
1756:src/keys.c    **** 	else if (c == K_DOWN) {
1757:src/keys.c    **** 		// down
1758:src/keys.c    **** 		update_program_bounds(1);
1759:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
1760:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
1761:src/keys.c    **** 			rawpc = 1;
1762:src/keys.c    **** 		goto fin;
1763:src/keys.c    **** 	}
1764:src/keys.c    **** 	if (pc >= 0) {
1765:src/keys.c    **** 		rawpc = find_user_pc(pc);
1766:src/keys.c    **** fin:		set_pc(rawpc);
1767:src/keys.c    **** fin2:		State2.gtodot = 0;
1768:src/keys.c    **** 		State2.digval = 0;
1769:src/keys.c    **** 		State2.numdigit = 0;
1770:src/keys.c    **** 	}
1771:src/keys.c    **** 	return STATE_UNFINISHED;
1772:src/keys.c    **** }
1773:src/keys.c    **** 
1774:src/keys.c    **** 
1775:src/keys.c    **** /* Process a keystroke in alpha mode
1776:src/keys.c    ****  */
1777:src/keys.c    **** static int process_alpha(const keycode c) {
1778:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
1779:src/keys.c    ****         int op = STATE_UNFINISHED;
1780:src/keys.c    **** 	const enum shifts shift = reset_shift();
1781:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
1782:src/keys.c    **** 	State2.alpha_pos = 0;
1783:src/keys.c    **** 
1784:src/keys.c    **** 	switch (c) {
1785:src/keys.c    **** 	case K10:	// STO
1786:src/keys.c    **** 		if (shift == SHIFT_F) {
1787:src/keys.c    **** 			init_arg(RARG_ASTO);
1788:src/keys.c    **** 			return STATE_UNFINISHED;
1789:src/keys.c    **** 		}
1790:src/keys.c    **** 		break;
1791:src/keys.c    **** 
1792:src/keys.c    **** 	case K11:	// RCL - maybe view
1793:src/keys.c    **** 		if (shift == SHIFT_F) {
1794:src/keys.c    **** 			init_arg(RARG_ARCL);
1795:src/keys.c    **** 			return STATE_UNFINISHED;
1796:src/keys.c    **** 		} else if (shift == SHIFT_H) {
1797:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
1798:src/keys.c    **** 			return STATE_UNFINISHED;
1799:src/keys.c    **** 		}
1800:src/keys.c    **** 		break;
1801:src/keys.c    **** 
1802:src/keys.c    **** 	case K20:	// Enter - maybe exit alpha mode
1803:src/keys.c    **** 		if (shift == SHIFT_G || shift == SHIFT_H)
1804:src/keys.c    **** 			break;
1805:src/keys.c    **** 		if (shift == SHIFT_F && ! State2.runmode) {
ARM GAS  /tmp/cc8lpfL1.s 			page 37


1806:src/keys.c    **** 			State2.multi = 1;
1807:src/keys.c    **** 			State2.numdigit = 0;
1808:src/keys.c    **** 			CmdBase = DBL_ALPHA;
1809:src/keys.c    **** 			return STATE_UNFINISHED;
1810:src/keys.c    **** 		}
1811:src/keys.c    **** 		State2.alphas = 0;
1812:src/keys.c    **** 		State2.alphashift = 0;
1813:src/keys.c    **** #ifdef DM42
1814:src/keys.c    **** 		set_menu(M_Last);
1815:src/keys.c    **** 		display_current_menu();
1816:src/keys.c    **** #endif
1817:src/keys.c    **** 		return op;
1818:src/keys.c    **** 
1819:src/keys.c    **** 	case K24:	// Clx - backspace, clear Alpha
1820:src/keys.c    **** 		if (shift == SHIFT_N)
1821:src/keys.c    **** 			return STATE_BACKSPACE;
1822:src/keys.c    **** 		if (shift == SHIFT_H)
1823:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
1824:src/keys.c    **** 		break;
1825:src/keys.c    **** 
1826:src/keys.c    **** 	case K_UP:
1827:src/keys.c    **** 	  if (shift == SHIFT_N) {
1828:src/keys.c    **** 	    if ( State2.runmode ) {
1829:src/keys.c    **** 	      // Alpha scroll left
1830:src/keys.c    **** #ifdef DM42
1831:src/keys.c    **** 	      /* 
1832:src/keys.c    **** 	       * The numbers 20 and 12 below should match the same 
1833:src/keys.c    **** 	       * numbers in display.c, lines 2414 and 2416.
1834:src/keys.c    **** 	       */
1835:src/keys.c    **** #ifdef BIGGER_DISPLAY
1836:src/keys.c    **** 	      if ((alpha_pos == 0) || (alen()-6*alpha_pos >= 20)) {
1837:src/keys.c    **** 		alpha_pos += 1;
1838:src/keys.c    **** 	      }
1839:src/keys.c    **** #else
1840:src/keys.c    **** 	      if ((alpha_pos == 0) || (alen()-6*alpha_pos >= 12)) {
1841:src/keys.c    **** 		alpha_pos += 1;
1842:src/keys.c    **** 	      }
1843:src/keys.c    **** #endif
1844:src/keys.c    **** 	      State2.alpha_pos = alpha_pos;
1845:src/keys.c    **** #else
1846:src/keys.c    **** 	      int n = alpha_pos + 1;
1847:src/keys.c    **** 	      State2.alpha_pos = ( n < ( alen() + 5 ) / 6 ) ? n : alpha_pos;
1848:src/keys.c    **** #endif
1849:src/keys.c    **** 	      return STATE_UNFINISHED;
1850:src/keys.c    **** 	    }
1851:src/keys.c    **** 	    return STATE_BST;
1852:src/keys.c    **** 	  }
1853:src/keys.c    **** 	  break;
1854:src/keys.c    **** 
1855:src/keys.c    **** 	case K_DOWN:
1856:src/keys.c    **** 	  if (shift == SHIFT_N) {
1857:src/keys.c    **** 	    if ( State2.runmode ) {
1858:src/keys.c    **** 	      // Alpha scroll right
1859:src/keys.c    **** 	      if (alpha_pos > 0)
1860:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
1861:src/keys.c    **** 	      return STATE_UNFINISHED;
1862:src/keys.c    **** 	    }
ARM GAS  /tmp/cc8lpfL1.s 			page 38


1863:src/keys.c    **** 	    return STATE_SST;
1864:src/keys.c    **** 	  }
1865:src/keys.c    **** 	  break;
1866:src/keys.c    **** 
1867:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
1868:src/keys.c    **** 		if (shift == SHIFT_F)
1869:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
1870:src/keys.c    **** 		else if (shift == SHIFT_H)
1871:src/keys.c    **** 			return OP_NIL | OP_OFF;
1872:src/keys.c    **** 		else if (shift == SHIFT_N) {
1873:src/keys.c    **** #ifdef DM42
1874:src/keys.c    **** 		  set_menu(M_Last);
1875:src/keys.c    **** 		  display_current_menu();
1876:src/keys.c    **** #endif
1877:src/keys.c    **** 		  init_state();
1878:src/keys.c    **** 		}
1879:src/keys.c    **** 		return STATE_UNFINISHED;
1880:src/keys.c    **** 
1881:src/keys.c    **** 	case K63:
1882:src/keys.c    **** 		if (shift == SHIFT_F)
1883:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
1884:src/keys.c    **** 		break;
1885:src/keys.c    **** 
1886:src/keys.c    **** 	default:
1887:src/keys.c    **** 		break;
1888:src/keys.c    **** 	}
1889:src/keys.c    **** 
1890:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
1891:src/keys.c    **** 	if (ch == 0)
1892:src/keys.c    **** 		return STATE_UNFINISHED;
1893:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
1894:src/keys.c    **** }
1895:src/keys.c    **** 
1896:src/keys.c    **** /*
1897:src/keys.c    ****  *  Code to handle all commands with arguments
1898:src/keys.c    ****  */
1899:src/keys.c    **** static void reset_arg(void) {
1900:src/keys.c    **** 	init_arg((enum rarg) 0);
1901:src/keys.c    **** 	State2.rarg = 0;
1902:src/keys.c    **** }
1903:src/keys.c    **** 
1904:src/keys.c    ****  static int arg_eval(unsigned int val) {
1905:src/keys.c    ****    const unsigned int base = CmdBase;
1906:src/keys.c    ****    int r = RARG(base, val 
1907:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
1908:src/keys.c    **** 		+ (State2.local ? LOCAL_REG_BASE : 0));
1909:src/keys.c    ****    const unsigned int ssize = (! UState.stack_depth || ! State2.runmode ) ? 4 : 8;
1910:src/keys.c    **** 
1911:src/keys.c    ****    if (! State2.ind) {
1912:src/keys.c    ****      /*
1913:src/keys.c    ****       *  Central argument checking for some commands
1914:src/keys.c    ****       */
1915:src/keys.c    **** #ifdef SHOW_COMPLEX_REGS
1916:src/keys.c    ****      if (argcmds[base].cmplx && val > TOPREALREG - 2 ) {
1917:src/keys.c    ****        // remap complex registers cY->T, cZ->A, cT->C
1918:src/keys.c    ****        // 99,   X,   Y,   Z,   T,   A,   B,   C,   D,   L,   I,   J,   K
1919:src/keys.c    ****        static char remap[] = {  0, 100, 102, 104, 106,   0,   0,   0,   0, 108,   0, 110,   0 };
ARM GAS  /tmp/cc8lpfL1.s 			page 39


1920:src/keys.c    ****        val = (unsigned int) remap[ val - (TOPREALREG - 1) ];
1921:src/keys.c    ****        if ( val == 0 )
1922:src/keys.c    **** 	 return STATE_UNFINISHED;
1923:src/keys.c    ****        r = RARG(base, val);
1924:src/keys.c    ****      }
1925:src/keys.c    **** #endif
1926:src/keys.c    **** #ifdef INCLUDE_C_LOCK
1927:src/keys.c    ****      if (argcmds[base].cmplx && (val > (unsigned int)(C_LOCKED ? 0 : TOPREALREG - 2) && (val & 1)))
1928:src/keys.c    ****        if (C_LOCKED) {
1929:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
1930:src/keys.c    **** 	 return STATE_UNFINISHED; // either leaves arg blank (if EXIT pressed) or with one digit in (STO)
1931:src/keys.c    ****        }
1932:src/keys.c    ****        else {
1933:src/keys.c    **** 	 return STATE_UNFINISHED;
1934:src/keys.c    ****        }
1935:src/keys.c    ****      }
1936:src/keys.c    **** #else
1937:src/keys.c    ****      if (argcmds[base].cmplx && (val > TOPREALREG - 2 && (val & 1)))
1938:src/keys.c    ****        // Disallow odd complex register > 98
1939:src/keys.c    ****        return STATE_UNFINISHED;
1940:src/keys.c    **** #endif
1941:src/keys.c    ****      if ((base == RARG_STOSTK || base == RARG_RCLSTK) && (val > TOPREALREG - ssize))
1942:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
1943:src/keys.c    ****        return STATE_UNFINISHED;
1944:src/keys.c    ****    }
1945:src/keys.c    ****    // Build op-code
1946:src/keys.c    ****    reset_arg();
1947:src/keys.c    ****    return r;
1948:src/keys.c    ****  }
1949:src/keys.c    **** 
1950:src/keys.c    **** static int arg_digit(int n) {
1951:src/keys.c    **** 	int lim;
1952:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1953:src/keys.c    **** 	int dispmode = get_dispmode_digs(&lim);
1954:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
1955:src/keys.c    **** #else
1956:src/keys.c    **** 	const unsigned int base = CmdBase;
1957:src/keys.c    **** #endif
1958:src/keys.c    **** 	const unsigned int val = State2.digval * 10 + n;
1959:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
1960:src/keys.c    **** 	
1961:src/keys.c    **** 	if (State2.local) {
1962:src/keys.c    **** 		// Handle local registers and flags
1963:src/keys.c    **** 		lim = MAX_LOCAL_DIRECT - 1;				// default
1964:src/keys.c    **** 		if (State2.runmode) {
1965:src/keys.c    **** 			if (LocalRegs == 0)
1966:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
1967:src/keys.c    **** 			if (is_reg) {
1968:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
1969:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
1970:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
1971:src/keys.c    **** 			}
1972:src/keys.c    **** 		}
1973:src/keys.c    **** 	}
1974:src/keys.c    **** 	else if (is_reg)						// normal register
1975:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
1976:src/keys.c    **** 	else {
ARM GAS  /tmp/cc8lpfL1.s 			page 40


1977:src/keys.c    **** 		lim = (int) argcmds[base].lim;				// any other command
1978:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
1979:src/keys.c    **** 			lim = RARG_IND - 1;
1980:src/keys.c    **** 	}
1981:src/keys.c    **** 	if ((int) val > lim)
1982:src/keys.c    **** 		return STATE_UNFINISHED;
1983:src/keys.c    **** 
1984:src/keys.c    **** 	State2.digval = val;
1985:src/keys.c    **** 	++State2.numdigit;
1986:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
1987:src/keys.c    **** 		int result = arg_eval(val);
1988:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
1989:src/keys.c    **** 			--State2.numdigit;
1990:src/keys.c    **** 			State2.digval /= 10;
1991:src/keys.c    **** 		}
1992:src/keys.c    **** 		return result;
1993:src/keys.c    **** 	}
1994:src/keys.c    **** 	return STATE_UNFINISHED;
1995:src/keys.c    **** }
1996:src/keys.c    **** 
1997:src/keys.c    **** static int arg_fkey(int n) {
1998:src/keys.c    **** 	const unsigned int b = CmdBase;
1999:src/keys.c    **** 
2000:src/keys.c    **** 	if (argcmds[b].label || (b >= RARG_SF && b <= RARG_FCF))
2001:src/keys.c    **** 	{
2002:src/keys.c    **** 		if (State2.ind || State2.numdigit > 0)
2003:src/keys.c    **** 			return STATE_UNFINISHED;
2004:src/keys.c    **** 		if (argcmds[b].lim < 100)
2005:src/keys.c    **** 			return STATE_UNFINISHED;
2006:src/keys.c    **** 		return arg_eval(n + 100);
2007:src/keys.c    **** 	}
2008:src/keys.c    **** 	return STATE_UNFINISHED;
2009:src/keys.c    **** }
2010:src/keys.c    **** 
2011:src/keys.c    **** static int arg_storcl_check(const unsigned int b, const int cmplx) {
2012:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
2013:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || b == RARG_FLRCL ||
2014:src/keys.c    **** 			(cmplx && (b == RARG_CSTO || b == RARG_CRCL || b == RARG_FLCRCL)));
2015:src/keys.c    **** #else
2016:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || (cmplx && (b == RARG_CSTO || b == RARG_CRCL )));
2017:src/keys.c    **** #endif
2018:src/keys.c    **** }
2019:src/keys.c    **** 
2020:src/keys.c    **** static int arg_storcl(const unsigned int n, int cmplx) {
2021:src/keys.c    **** 	unsigned int b = CmdBase;
2022:src/keys.c    **** 
2023:src/keys.c    **** 	if (arg_storcl_check(b, cmplx)) {
2024:src/keys.c    **** 		CmdBase += n;
2025:src/keys.c    **** 		return 1;
2026:src/keys.c    **** 	}
2027:src/keys.c    **** 	/* And we can turn off the operation too */
2028:src/keys.c    **** 	if (b >= n) {
2029:src/keys.c    **** 		b -= n;
2030:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
2031:src/keys.c    **** 			CmdBase = b;
2032:src/keys.c    **** 			return 1;
2033:src/keys.c    **** 		}
ARM GAS  /tmp/cc8lpfL1.s 			page 41


2034:src/keys.c    **** 	}
2035:src/keys.c    **** 	return 0;
2036:src/keys.c    **** }
2037:src/keys.c    **** 
2038:src/keys.c    **** static int process_arg_dot(const unsigned int base) {
2039:src/keys.c    **** 
2040:src/keys.c    **** 	if (State2.numdigit == 0) {
2041:src/keys.c    **** 		// Only valid at beginning of entry
2042:src/keys.c    **** 		if (State2.dot || State2.local) {
2043:src/keys.c    **** 			// '..' or ENTER '.' = X
2044:src/keys.c    **** 			State2.local = 0;
2045:src/keys.c    **** 			return arg_eval(regX_idx);
2046:src/keys.c    **** 		}
2047:src/keys.c    **** 		if (argcmds[base].local || State2.ind) {
2048:src/keys.c    **** 			// local register or flag select
2049:src/keys.c    **** 			State2.local = 1;
2050:src/keys.c    **** 		}
2051:src/keys.c    **** 		else if (base == RARG_GTO || base == RARG_XEQ) {
2052:src/keys.c    **** 			// Special GTO . sequence
2053:src/keys.c    **** 			if (! State2.ind) {
2054:src/keys.c    **** 				State2.gtodot = 1;
2055:src/keys.c    **** 				reset_arg();
2056:src/keys.c    **** 			}
2057:src/keys.c    **** 		}
2058:src/keys.c    **** 	}
2059:src/keys.c    **** 	return STATE_UNFINISHED;
2060:src/keys.c    **** }
2061:src/keys.c    **** 
2062:src/keys.c    **** static int process_arg_shuffle(int r) {
2063:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
2064:src/keys.c    **** 	if (State2.numdigit < 4)
2065:src/keys.c    **** 		return STATE_UNFINISHED;
2066:src/keys.c    **** 	return arg_eval(State2.digval);
2067:src/keys.c    **** }
2068:src/keys.c    **** 
2069:src/keys.c    **** 
2070:src/keys.c    **** static int process_arg(const keycode c) {
2071:src/keys.c    **** 	unsigned int base = CmdBase;
2072:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
2073:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
2074:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
2075:src/keys.c    **** 	const enum shifts shift = reset_shift();
2076:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
2077:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
2078:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
2079:src/keys.c    **** 
2080:src/keys.c    **** 	n &= ~NO_SHORT;
2081:src/keys.c    **** 	if (base >= NUM_RARG) {
2082:src/keys.c    **** 		reset_arg();
2083:src/keys.c    **** 		return STATE_UNFINISHED;
2084:src/keys.c    **** 	}
2085:src/keys.c    **** #ifdef DM42
2086:src/keys.c    **** 	if ( ! shorthand && ! State2.dot && ! State2.shuffle ) {
2087:src/keys.c    **** 	  switch (n) {
2088:src/keys.c    **** 	  case regX_idx:
2089:src/keys.c    **** 	    return arg_digit(1);
2090:src/keys.c    **** 	  case regY_idx:
ARM GAS  /tmp/cc8lpfL1.s 			page 42


2091:src/keys.c    **** 	    return arg_digit(2);
2092:src/keys.c    **** 	  case regZ_idx:
2093:src/keys.c    **** 	    return arg_digit(3);
2094:src/keys.c    **** 	  case regT_idx:
2095:src/keys.c    **** 	    return arg_digit(4);
2096:src/keys.c    **** 	  case 5:
2097:src/keys.c    **** 	  case 6:
2098:src/keys.c    **** 	  case 7:
2099:src/keys.c    **** 	  case 8:
2100:src/keys.c    **** 	  case 9:
2101:src/keys.c    **** 	  case 0:
2102:src/keys.c    **** 	    return arg_digit(n);
2103:src/keys.c    **** 	  }
2104:src/keys.c    **** 	}
2105:src/keys.c    **** #else
2106:src/keys.c    **** 	if (n <= 9 && ! shorthand && ! State2.dot && ! State2.shuffle)
2107:src/keys.c    **** 		return arg_digit(n);
2108:src/keys.c    **** #endif	
2109:src/keys.c    **** 	if (shorthand)
2110:src/keys.c    **** 		// row column shorthand addressing
2111:src/keys.c    **** 		return arg_eval(keycode_to_row_column(c));
2112:src/keys.c    **** 
2113:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
2114:src/keys.c    **** #ifdef DM42
2115:src/keys.c    **** 	if (base == RARG_FIX || base == RARG_SIG || base == RARG_SIG0) {
2116:src/keys.c    **** 		switch ((int)c) {
2117:src/keys.c    **** 		case K_UP:	// up arrow
2118:src/keys.c    **** 		  if (base == RARG_FIX) {
2119:src/keys.c    **** 		    base = RARG_SIG;
2120:src/keys.c    **** 		    break;
2121:src/keys.c    **** 		  }
2122:src/keys.c    **** 		  if (base == RARG_SIG) {
2123:src/keys.c    **** 		    base = RARG_SIG0;
2124:src/keys.c    **** 		    break;
2125:src/keys.c    **** 		  }
2126:src/keys.c    **** 		  if (base == RARG_SIG0) {
2127:src/keys.c    **** 		    base = RARG_FIX;
2128:src/keys.c    **** 		    break;
2129:src/keys.c    **** 		  }
2130:src/keys.c    **** 		case K_DOWN:	// down arrow
2131:src/keys.c    **** 		case K01:	// B
2132:src/keys.c    **** 		  if (base == RARG_FIX) {
2133:src/keys.c    **** 		    base = RARG_SIG0;
2134:src/keys.c    **** 		    break;
2135:src/keys.c    **** 		  }
2136:src/keys.c    **** 		  if (base == RARG_SIG) {
2137:src/keys.c    **** 		    base = RARG_FIX;
2138:src/keys.c    **** 		    break;
2139:src/keys.c    **** 		  }
2140:src/keys.c    **** 		  if (base == RARG_SIG0) {
2141:src/keys.c    **** 		    base = RARG_SIG;
2142:src/keys.c    **** 		    break;
2143:src/keys.c    **** 		  }
2144:src/keys.c    **** 		}
2145:src/keys.c    **** 	}
2146:src/keys.c    **** 		CmdBase = base;
2147:src/keys.c    **** #else
ARM GAS  /tmp/cc8lpfL1.s 			page 43


2148:src/keys.c    **** 	if (base >= RARG_FIX && base <= RARG_SIG0) {
2149:src/keys.c    **** 		switch ((int)c) {
2150:src/keys.c    **** 		case K_UP:	// up arrow
2151:src/keys.c    **** 			if (--base < RARG_FIX)
2152:src/keys.c    **** 				base = RARG_SIG0;
2153:src/keys.c    **** 			break;
2154:src/keys.c    **** 
2155:src/keys.c    **** 		case K_DOWN:	// down arrow
2156:src/keys.c    **** 		case K01:	// B
2157:src/keys.c    **** 			if (++base > RARG_SIG0)
2158:src/keys.c    **** 				base = RARG_FIX;
2159:src/keys.c    **** 			break;
2160:src/keys.c    **** 		}
2161:src/keys.c    **** 		CmdBase = base;
2162:src/keys.c    **** 	}
2163:src/keys.c    **** #endif
2164:src/keys.c    **** #endif
2165:src/keys.c    **** 	/*
2166:src/keys.c    **** 	 *  So far, we've got the digits and some special label addressing keys
2167:src/keys.c    **** 	 *  Handle the rest here.
2168:src/keys.c    **** 	 */
2169:src/keys.c    **** 	switch ((int)c) {
2170:src/keys.c    **** 	case K_F:
2171:src/keys.c    **** 		if (label_addressing)
2172:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
2173:src/keys.c    **** 		break;
2174:src/keys.c    **** 
2175:src/keys.c    **** 	case K_ARROW:		// arrow
2176:src/keys.c    **** 		if (!State2.dot && argcmds[base].indirectokay) {
2177:src/keys.c    **** 			State2.ind = ! State2.ind;
2178:src/keys.c    **** 			if (! stack_reg)
2179:src/keys.c    **** 				State2.dot = 0;
2180:src/keys.c    **** 		}
2181:src/keys.c    **** 		break;
2182:src/keys.c    **** 
2183:src/keys.c    **** 	case K_CMPLX:
2184:src/keys.c    **** 		if (State2.ind || State2.dot)
2185:src/keys.c    **** 			break;
2186:src/keys.c    **** 		if (base == RARG_STO)
2187:src/keys.c    **** 			CmdBase = RARG_STOM;
2188:src/keys.c    **** 		else if (base == RARG_RCL)
2189:src/keys.c    **** 			CmdBase = RARG_RCLM;
2190:src/keys.c    **** 		break;
2191:src/keys.c    **** #ifdef DM42
2192:src/keys.c    **** 	case K41:       // T
2193:src/keys.c    **** 	  if (State2.shuffle)
2194:src/keys.c    **** 	    return process_arg_shuffle(3);
2195:src/keys.c    **** 	case K51:       // X
2196:src/keys.c    **** 	  if (State2.shuffle)
2197:src/keys.c    **** 	    return process_arg_shuffle(0);
2198:src/keys.c    **** 	case K52:	// Y
2199:src/keys.c    **** 	  if (State2.shuffle)
2200:src/keys.c    **** 	    return process_arg_shuffle(1);
2201:src/keys.c    **** 	case K53:       // Z
2202:src/keys.c    **** 	  if (State2.shuffle)
2203:src/keys.c    **** 	    return process_arg_shuffle(2);
2204:src/keys.c    **** #else
ARM GAS  /tmp/cc8lpfL1.s 			page 44


2205:src/keys.c    **** 	case K63:	// Y
2206:src/keys.c    **** 	  if (State2.shuffle)
2207:src/keys.c    **** 	    return process_arg_shuffle(1);
2208:src/keys.c    **** #endif
2209:src/keys.c    **** 	case K00:	// A
2210:src/keys.c    **** 	case K01:	// B
2211:src/keys.c    **** 	case K02:	// C
2212:src/keys.c    **** 	case K03:	// D
2213:src/keys.c    **** #ifdef DM42
2214:src/keys.c    **** 	case K12:	// I (lastY)
2215:src/keys.c    **** 	case K13:	// J
2216:src/keys.c    **** 	case K14:	// K
2217:src/keys.c    **** 	case K15:	// L (lastX)
2218:src/keys.c    **** #else
2219:src/keys.c    **** 	case K12:	// I (lastY)
2220:src/keys.c    **** 	case K21:	// J
2221:src/keys.c    **** 	case K22:	// K
2222:src/keys.c    **** 	case K23:	// L (lastX)
2223:src/keys.c    **** #endif
2224:src/keys.c    **** 	  if (State2.dot || stack_reg)
2225:src/keys.c    **** 			return arg_eval(n);
2226:src/keys.c    **** 		if ( c <= K03 )
2227:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
2228:src/keys.c    **** 		break;
2229:src/keys.c    **** #ifdef DM42
2230:src/keys.c    **** 	case K62:	// '.'
2231:src/keys.c    **** 		return process_arg_dot(base);
2232:src/keys.c    **** 
2233:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
2234:src/keys.c    **** 	case K64:		// plus
2235:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
2236:src/keys.c    **** 			return arg_eval(n);
2237:src/keys.c    **** 		break;
2238:src/keys.c    **** 	case K54:               // minus
2239:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
2240:src/keys.c    **** 			reset_arg();
2241:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
2242:src/keys.c    **** 		}
2243:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
2244:src/keys.c    **** 		break;
2245:src/keys.c    **** 	case K44:		// multiply
2246:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
2247:src/keys.c    **** 			return arg_eval(n);
2248:src/keys.c    **** 		break;
2249:src/keys.c    **** 	case K34:
2250:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
2251:src/keys.c    **** 		break;
2252:src/keys.c    **** #else
2253:src/keys.c    **** 	case K62:	// X, '.'
2254:src/keys.c    **** 		if (State2.shuffle)
2255:src/keys.c    **** 			return process_arg_shuffle(0);
2256:src/keys.c    **** 		return process_arg_dot(base);
2257:src/keys.c    **** 
2258:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
2259:src/keys.c    **** 	case K64:		// Z register
2260:src/keys.c    **** 		if (State2.shuffle)
2261:src/keys.c    **** 			return process_arg_shuffle(2);
ARM GAS  /tmp/cc8lpfL1.s 			page 45


2262:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
2263:src/keys.c    **** 			return arg_eval(n);
2264:src/keys.c    **** 		break;
2265:src/keys.c    **** 
2266:src/keys.c    **** 	case K54:
2267:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
2268:src/keys.c    **** 			reset_arg();
2269:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
2270:src/keys.c    **** 		}
2271:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
2272:src/keys.c    **** 		break;
2273:src/keys.c    **** 
2274:src/keys.c    **** 	case K44:		// T register
2275:src/keys.c    **** 		if (State2.shuffle)
2276:src/keys.c    **** 			return process_arg_shuffle(3);
2277:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
2278:src/keys.c    **** 			return arg_eval(n);
2279:src/keys.c    **** 		break;
2280:src/keys.c    **** 
2281:src/keys.c    **** 	case K34:
2282:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
2283:src/keys.c    **** 		break;
2284:src/keys.c    **** #endif
2285:src/keys.c    **** 	case K_UP:
2286:src/keys.c    **** 		arg_storcl(RARG_STO_MAX - RARG_STO, 0);
2287:src/keys.c    **** 		break;
2288:src/keys.c    **** 
2289:src/keys.c    **** 	case K_DOWN:
2290:src/keys.c    **** 		arg_storcl(RARG_STO_MIN - RARG_STO, 0);
2291:src/keys.c    **** 		break;
2292:src/keys.c    **** 
2293:src/keys.c    **** 	case K20:				// Enter is a short cut finisher but it also changes a few commands if it is first up
2294:src/keys.c    **** 		if (State2.numdigit == 0 && !State2.ind && !State2.dot) {
2295:src/keys.c    **** 			if (argcmds[base].label) {
2296:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
2297:src/keys.c    **** 				State2.multi = 1;
2298:src/keys.c    **** 				State2.alphashift = 0;
2299:src/keys.c    **** 				State2.rarg = 0;
2300:src/keys.c    **** 			} else if (base == RARG_SCI) {
2301:src/keys.c    **** 				reset_arg();
2302:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
2303:src/keys.c    **** 			} else if (base == RARG_ENG) {
2304:src/keys.c    **** 				reset_arg();
2305:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
2306:src/keys.c    **** 			} else if (argcmds[base].stckreg)
2307:src/keys.c    **** 				State2.dot = 1;
2308:src/keys.c    **** 		} else if (State2.numdigit > 0)
2309:src/keys.c    **** 			return arg_eval(State2.digval);
2310:src/keys.c    **** 		else if (stack_reg)
2311:src/keys.c    **** 			State2.dot = 1 - State2.dot;
2312:src/keys.c    **** 		break;
2313:src/keys.c    **** 
2314:src/keys.c    **** 	case K24:	// <-
2315:src/keys.c    **** 		if (State2.numdigit == 0) {
2316:src/keys.c    **** 			if (State2.dot)
2317:src/keys.c    **** 				State2.dot = 0;
2318:src/keys.c    **** 			else if (State2.local)
ARM GAS  /tmp/cc8lpfL1.s 			page 46


2319:src/keys.c    **** 				State2.local = 0;
2320:src/keys.c    **** 			else if (State2.ind)
2321:src/keys.c    **** 				State2.ind = 0;
2322:src/keys.c    **** 			else
2323:src/keys.c    **** 				goto reset;
2324:src/keys.c    **** 		}
2325:src/keys.c    **** 		else {
2326:src/keys.c    **** 			--State2.numdigit;
2327:src/keys.c    **** 			if (State2.shuffle)
2328:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
2329:src/keys.c    **** 			else
2330:src/keys.c    **** 				State2.digval /= 10;
2331:src/keys.c    **** 		}
2332:src/keys.c    **** 		break;
2333:src/keys.c    **** 
2334:src/keys.c    **** 	case K60:
2335:src/keys.c    **** 	reset:
2336:src/keys.c    **** 		reset_arg();
2337:src/keys.c    **** 	default:
2338:src/keys.c    **** 		break;
2339:src/keys.c    **** 	}
2340:src/keys.c    **** 	return STATE_UNFINISHED;
2341:src/keys.c    **** }
2342:src/keys.c    **** 
2343:src/keys.c    **** 
2344:src/keys.c    **** /*
2345:src/keys.c    ****  *  Process arguments to the diverse test commands
2346:src/keys.c    ****  */
2347:src/keys.c    **** static int process_test(const keycode c) {
2348:src/keys.c    **** 	int r = State2.test;
2349:src/keys.c    **** 	int cmpx = State2.cmplx;
2350:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
2351:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
2352:src/keys.c    **** 
2353:src/keys.c    **** 	State2.test = TST_NONE;
2354:src/keys.c    **** 	State2.cmplx = 0;
2355:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
2356:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
2357:src/keys.c    **** 		// Lettered register
2358:src/keys.c    **** 		if (cmpx && (n & 1)) {
2359:src/keys.c    **** 			if (n == regI_idx)
2360:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
2361:src/keys.c    **** 			// Disallow odd complex registers > A
2362:src/keys.c    **** 			goto again;
2363:src/keys.c    **** 		}
2364:src/keys.c    **** 		// Return the command with the register completed
2365:src/keys.c    **** 		return RARG(base, n);
2366:src/keys.c    **** 	}
2367:src/keys.c    **** 	else if ( n == 0 ) {
2368:src/keys.c    **** 		// Special 0
2369:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq0 : OP_Xeq0) + r;
2370:src/keys.c    **** 	}
2371:src/keys.c    **** 	else if ( n == 1 ) {
2372:src/keys.c    **** 		// Special 1
2373:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq1 : OP_Xeq1) + r;
2374:src/keys.c    **** 	}
2375:src/keys.c    **** 	else if ( n <= 9 || c == K_ARROW || c == K62 ) {
ARM GAS  /tmp/cc8lpfL1.s 			page 47


2376:src/keys.c    **** 		// digit 2..9, -> or .
2377:src/keys.c    **** 		init_arg((enum rarg)base);
2378:src/keys.c    **** 		return process_arg(c);
2379:src/keys.c    **** 	}
2380:src/keys.c    **** 
2381:src/keys.c    **** 	switch (c) {
2382:src/keys.c    **** 	case K11:					// tests vs register
2383:src/keys.c    **** 	case K20:
2384:src/keys.c    **** 		init_arg((enum rarg)base);
2385:src/keys.c    **** 		return STATE_UNFINISHED;
2386:src/keys.c    **** 
2387:src/keys.c    **** 	//case K60:
2388:src/keys.c    **** 	case K24:
2389:src/keys.c    **** 		return STATE_UNFINISHED;
2390:src/keys.c    **** 
2391:src/keys.c    **** 	default:
2392:src/keys.c    **** 		break;
2393:src/keys.c    **** 	}
2394:src/keys.c    **** again:
2395:src/keys.c    **** 	State2.test = r;
2396:src/keys.c    **** 	State2.cmplx = cmpx;
2397:src/keys.c    **** 	return STATE_UNFINISHED;
2398:src/keys.c    **** }
2399:src/keys.c    **** 
2400:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2401:src/keys.c    **** /*
2402:src/keys.c    ****  *  Build the user catalogue on the fly in RAM and return the number of entries
2403:src/keys.c    ****  */
2404:src/keys.c    **** #define USER_CAT_MAX 100
2405:src/keys.c    **** s_opcode UserCat[USER_CAT_MAX];
2406:src/keys.c    **** 
2407:src/keys.c    **** static int build_user_cat(void)
2408:src/keys.c    **** {
2409:src/keys.c    **** 	// find the label 'CAT'
2410:src/keys.c    **** 	const int lbl = OP_DBL + (DBL_LBL << DBL_SHIFT) + 'C' + ('A' << 16) + ('T' << 24);
2411:src/keys.c    **** 	unsigned int pc = findmultilbl(lbl, 0);
2412:src/keys.c    **** 	int len = 0;
2413:src/keys.c    **** 	while (pc && len < USER_CAT_MAX) {
2414:src/keys.c    **** 		// do a simnple insert-sort to sort the entries
2415:src/keys.c    **** 		char buf1[16];
2416:src/keys.c    **** 		int i;
2417:src/keys.c    **** 		s_opcode op;
2418:src/keys.c    **** 	next:
2419:src/keys.c    **** 		pc = do_inc(pc, 0);
2420:src/keys.c    **** 		op = (s_opcode) getprog(pc);
2421:src/keys.c    **** 		if (op == (OP_NIL | OP_END))
2422:src/keys.c    **** 			break;
2423:src/keys.c    **** 		if (isDBL(op))
2424:src/keys.c    **** 			continue;
2425:src/keys.c    **** 		if (isRARG(op)) {
2426:src/keys.c    **** 			const s_opcode rarg = RARG_CMD(op);
2427:src/keys.c    **** 			if (rarg != RARG_ALPHA && rarg != RARG_CONV
2428:src/keys.c    **** 			    && rarg != RARG_CONST && rarg != RARG_CONST_CMPLX)
2429:src/keys.c    **** 				op = op & 0xff00;	// remove argument
2430:src/keys.c    **** 		}
2431:src/keys.c    **** 		catcmd(op, buf1);
2432:src/keys.c    **** 		for (i = 0; i < len; ++i) {
ARM GAS  /tmp/cc8lpfL1.s 			page 48


2433:src/keys.c    **** 			// Find a position in the table to insert the new entry
2434:src/keys.c    **** 			char buf2[16];
2435:src/keys.c    **** 			const char *p, *q;
2436:src/keys.c    **** 			int diff = 0;
2437:src/keys.c    **** 			if (op == UserCat[i]) {
2438:src/keys.c    **** 				// duplicate entry - ignore
2439:src/keys.c    **** 				goto next;
2440:src/keys.c    **** 			}
2441:src/keys.c    **** 			p = buf1;
2442:src/keys.c    **** 			if (*p == COMPLEX_PREFIX)
2443:src/keys.c    **** 				++p;
2444:src/keys.c    **** 			q = catcmd(UserCat[i], buf2);
2445:src/keys.c    **** 			if (*q == COMPLEX_PREFIX)
2446:src/keys.c    **** 				++q;
2447:src/keys.c    **** 			diff = 0;
2448:src/keys.c    **** 			while (*p != '\0' && diff == 0) {
2449:src/keys.c    **** 				diff = remap_chars(*q++) - remap_chars(*p++);
2450:src/keys.c    **** 			}
2451:src/keys.c    **** 			if ((diff == 0 && *q == 0) ) {
2452:src/keys.c    **** 				// identical according to sort order, insert after
2453:src/keys.c    **** 				++i;
2454:src/keys.c    **** 				break;
2455:src/keys.c    **** 			}
2456:src/keys.c    **** 			if (diff > 0) {
2457:src/keys.c    **** 				// insert new entry before the one found because this is greater
2458:src/keys.c    **** 				break;
2459:src/keys.c    **** 			}
2460:src/keys.c    **** 		}
2461:src/keys.c    **** 		if (i < len) {
2462:src/keys.c    **** 			// Make room
2463:src/keys.c    **** 			xcopy(UserCat + i + 1, UserCat + i, (len - i) << 1);
2464:src/keys.c    **** 		}
2465:src/keys.c    **** 		UserCat[i] = op;
2466:src/keys.c    **** 		++len;
2467:src/keys.c    **** 	}
2468:src/keys.c    **** 	// return the number of entries
2469:src/keys.c    **** 	return len;
2470:src/keys.c    **** }
2471:src/keys.c    **** #endif
2472:src/keys.c    **** 
2473:src/keys.c    **** /* Return the number of entries in the current catalogue.
2474:src/keys.c    ****  * These are all fixed size known at compile time so a table lookup will
2475:src/keys.c    ****  * likely be the most space efficient method.
2476:src/keys.c    ****  */
2477:src/keys.c    **** int current_catalogue_max(void) {
2478:src/keys.c    **** 	// A quick table of catalogue sizes
2479:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues' 
2480:src/keys.c    **** 	static const unsigned char catalogue_sizes[] = 
2481:src/keys.c    **** 	{
2482:src/keys.c    **** 		0, // NONE
2483:src/keys.c    **** 		SIZE_catalogue,
2484:src/keys.c    **** 		SIZE_cplx_catalogue,
2485:src/keys.c    **** 		SIZE_stats_catalogue,
2486:src/keys.c    **** 		SIZE_prob_catalogue,
2487:src/keys.c    **** 		SIZE_int_catalogue,
2488:src/keys.c    **** 		SIZE_prog_catalogue,
2489:src/keys.c    **** 		SIZE_program_xfcn,
ARM GAS  /tmp/cc8lpfL1.s 			page 49


2490:src/keys.c    **** 		SIZE_test_catalogue,
2491:src/keys.c    **** 		SIZE_mode_catalogue,
2492:src/keys.c    **** 		SIZE_alpha_catalogue,
2493:src/keys.c    **** 		SIZE_alpha_symbols,
2494:src/keys.c    **** 		SIZE_alpha_compares,
2495:src/keys.c    **** 		SIZE_alpha_arrows,
2496:src/keys.c    **** 		SIZE_alpha_letters,
2497:src/keys.c    **** 		SIZE_alpha_subscripts,
2498:src/keys.c    **** 		NUM_CONSTS_CAT,
2499:src/keys.c    **** 		NUM_CONSTS_CAT,
2500:src/keys.c    **** 		SIZE_conv_catalogue,
2501:src/keys.c    **** 		SIZE_sums_catalogue,
2502:src/keys.c    **** 		SIZE_matrix_catalogue,
2503:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2504:src/keys.c    **** 		SIZE_internal_catalogue,
2505:src/keys.c    **** #endif
2506:src/keys.c    **** 	};
2507:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2508:src/keys.c    **** 	const int cat = State2.catalogue;
2509:src/keys.c    **** 	return cat == CATALOGUE_USER ? build_user_cat() : catalogue_sizes[cat];
2510:src/keys.c    **** #else
2511:src/keys.c    **** 	return catalogue_sizes[State2.catalogue];
2512:src/keys.c    **** #endif
2513:src/keys.c    **** }
2514:src/keys.c    **** 
2515:src/keys.c    **** 
2516:src/keys.c    **** /* Look up the character position in the given byte array and
2517:src/keys.c    ****  * build the alpha op-code for it.
2518:src/keys.c    ****  */
2519:src/keys.c    **** static opcode alpha_code(int n, const char tbl[]) {
2520:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
2521:src/keys.c    **** }
2522:src/keys.c    **** 
2523:src/keys.c    **** 
2524:src/keys.c    **** /* Return the opcode for entry n from the current catalogue
2525:src/keys.c    ****  */
2526:src/keys.c    **** opcode current_catalogue(int n) {
2527:src/keys.c    **** 	// A quick table of catalogue tables
2528:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues'
2529:src/keys.c    **** 	static const void *catalogues[] =
2530:src/keys.c    **** 	{
2531:src/keys.c    **** 		NULL, // NONE
2532:src/keys.c    **** 		catalogue,
2533:src/keys.c    **** 		cplx_catalogue,
2534:src/keys.c    **** 		stats_catalogue,
2535:src/keys.c    **** 		prob_catalogue,
2536:src/keys.c    **** 		int_catalogue,
2537:src/keys.c    **** 		prog_catalogue,
2538:src/keys.c    **** 		program_xfcn,
2539:src/keys.c    **** 		test_catalogue,
2540:src/keys.c    **** 		mode_catalogue,
2541:src/keys.c    **** 		alpha_catalogue,
2542:src/keys.c    **** 		alpha_symbols,
2543:src/keys.c    **** 		alpha_compares,
2544:src/keys.c    **** 		alpha_arrows,
2545:src/keys.c    **** 		alpha_letters,
2546:src/keys.c    **** 		alpha_subscripts,
ARM GAS  /tmp/cc8lpfL1.s 			page 50


2547:src/keys.c    **** 		NULL,
2548:src/keys.c    **** 		NULL,
2549:src/keys.c    **** 		NULL, //CONV
2550:src/keys.c    **** 		sums_catalogue,
2551:src/keys.c    **** 		matrix_catalogue,
2552:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2553:src/keys.c    **** 		internal_catalogue,
2554:src/keys.c    **** #endif
2555:src/keys.c    **** 	};
2556:src/keys.c    **** 	const unsigned char *cat;
2557:src/keys.c    **** 	unsigned int c = State2.catalogue;
2558:src/keys.c    **** 	int m, i;
2559:src/keys.c    **** 	unsigned p, q;
2560:src/keys.c    **** 
2561:src/keys.c    **** 	if (c == CATALOGUE_CONST) {
2562:src/keys.c    **** 		if (n == OP_ZERO)
2563:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
2564:src/keys.c    **** 		return CONST(n);
2565:src/keys.c    **** 	}
2566:src/keys.c    **** 	if (c == CATALOGUE_COMPLEX_CONST) {
2567:src/keys.c    **** 		if (n == OP_ZERO)
2568:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
2569:src/keys.c    **** 		return CONST_CMPLX(n);
2570:src/keys.c    **** 	}
2571:src/keys.c    **** 	if (c == CATALOGUE_CONV) {
2572:src/keys.c    **** 		const int cnv = conv_catalogue[n];
2573:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
2574:src/keys.c    **** 			// Monadic conversion routine
2575:src/keys.c    **** 			return OP_MON | (cnv - SIZE_conv_catalogue);
2576:src/keys.c    **** 		else
2577:src/keys.c    **** 			return RARG(RARG_CONV, cnv);
2578:src/keys.c    **** 	}
2579:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2580:src/keys.c    **** 	if (c == CATALOGUE_USER)
2581:src/keys.c    **** 		return build_user_cat() ? UserCat[n] : STATE_IGNORE;
2582:src/keys.c    **** #endif
2583:src/keys.c    **** 
2584:src/keys.c    **** 	if (c == CATALOGUE_ALPHA_LETTERS && State2.alphashift)
2585:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
2586:src/keys.c    **** 	else
2587:src/keys.c    **** 		cat = (const unsigned char *) catalogues[c];
2588:src/keys.c    **** 
2589:src/keys.c    **** 	if (c >= CATALOGUE_ALPHA_SYMBOLS && c <= CATALOGUE_ALPHA_SUBSCRIPTS) {
2590:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
2591:src/keys.c    **** 	}
2592:src/keys.c    **** 	if (c >= sizeof(catalogues) / sizeof(void *))
2593:src/keys.c    **** 		return OP_NIL | OP_NOP;
2594:src/keys.c    **** 
2595:src/keys.c    **** 	/* Unpack the opcode */
2596:src/keys.c    **** 	cat += n + (n >> 2);
2597:src/keys.c    **** 	p = cat[0];
2598:src/keys.c    **** 	q = cat[1];
2599:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
2600:src/keys.c    **** 
2601:src/keys.c    **** 	/* Now figure out which opcode it really is */
2602:src/keys.c    **** 	for (i=0; i<KIND_MAX; i++) {
2603:src/keys.c    **** 		if (m < opcode_breaks[i])
ARM GAS  /tmp/cc8lpfL1.s 			page 51


2604:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
2605:src/keys.c    **** 		m -= opcode_breaks[i];
2606:src/keys.c    **** 	}
2607:src/keys.c    **** 	return RARG_BASEOP(m);
2608:src/keys.c    **** }
2609:src/keys.c    **** 
2610:src/keys.c    **** 
2611:src/keys.c    **** /*
2612:src/keys.c    ****  *  Helper for navigation in alpha catalogues. Some charaters are not allowed
2613:src/keys.c    ****  *  in multi character commands.
2614:src/keys.c    ****  */
2615:src/keys.c    **** static int forbidden_alpha(int pos) {
2616:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
2617:src/keys.c    **** }
2618:src/keys.c    **** 
2619:src/keys.c    **** /*
2620:src/keys.c    ****  *  Catalogue navigation
2621:src/keys.c    ****  */
2622:src/keys.c    ****  static int process_catalogue(const keycode c, const enum shifts shift, const int is_multi) {
2623:src/keys.c    ****    int pos = State.catpos;
2624:src/keys.c    ****    int ch;
2625:src/keys.c    ****    const int ctmax = current_catalogue_max();
2626:src/keys.c    ****    const enum catalogues cat = (enum catalogues) State2.catalogue;
2627:src/keys.c    **** 
2628:src/keys.c    ****    if (shift == SHIFT_N) {
2629:src/keys.c    ****      switch (c) {
2630:src/keys.c    **** #ifdef DM42
2631:src/keys.c    ****      case K05:			// XEQ accepts command
2632:src/keys.c    **** #else	  
2633:src/keys.c    ****      case K30:			// XEQ accepts command
2634:src/keys.c    **** #endif						  
2635:src/keys.c    ****      case K20:			// Enter accepts command
2636:src/keys.c    ****        if (pos < ctmax && !(is_multi && forbidden_alpha(pos))) {
2637:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
2638:src/keys.c    **** 
2639:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2640:src/keys.c    **** 
2641:src/keys.c    **** 	 if (isRARG(op)) {
2642:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
2643:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
2644:src/keys.c    **** 	     return op;
2645:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
2646:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
2647:src/keys.c    **** 	   else
2648:src/keys.c    **** 	     init_arg(RARG_CMD(op));
2649:src/keys.c    **** 	 }
2650:src/keys.c    **** 	 else {
2651:src/keys.c    **** 	   return check_confirm(op);
2652:src/keys.c    **** 	 }
2653:src/keys.c    ****        } else
2654:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2655:src/keys.c    ****        return STATE_UNFINISHED;
2656:src/keys.c    **** 
2657:src/keys.c    ****      case K24:			// backspace
2658:src/keys.c    ****        if (CmdLineLength > 0 && Keyticks < 30) {
2659:src/keys.c    **** 	 if (--CmdLineLength > 0)
2660:src/keys.c    **** 	   goto search;
ARM GAS  /tmp/cc8lpfL1.s 			page 52


2661:src/keys.c    **** 	 pos = 0;
2662:src/keys.c    **** 	 goto set_pos;
2663:src/keys.c    ****        } else
2664:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2665:src/keys.c    ****        return STATE_UNFINISHED;
2666:src/keys.c    **** 
2667:src/keys.c    ****      case K60:
2668:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2669:src/keys.c    ****        return STATE_UNFINISHED;
2670:src/keys.c    **** 
2671:src/keys.c    ****      case K_UP:
2672:src/keys.c    ****        CmdLineLength = 0;
2673:src/keys.c    ****        if (pos == 0)
2674:src/keys.c    **** 	 goto set_max;
2675:src/keys.c    ****        else
2676:src/keys.c    **** 	 --pos;
2677:src/keys.c    ****        goto set_pos;
2678:src/keys.c    **** 
2679:src/keys.c    ****      case K_DOWN:
2680:src/keys.c    ****        CmdLineLength = 0;
2681:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
2682:src/keys.c    ****        if (pos >= ctmax)
2683:src/keys.c    **** 	 pos = 0;
2684:src/keys.c    ****        goto set_pos;
2685:src/keys.c    **** 
2686:src/keys.c    ****      default:
2687:src/keys.c    ****        break;
2688:src/keys.c    ****      }
2689:src/keys.c    ****    } else if (shift == SHIFT_F) {
2690:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
2691:src/keys.c    ****        /*
2692:src/keys.c    **** 	* f 1/x in conversion catalogue
2693:src/keys.c    **** 	*/
2694:src/keys.c    ****        /* A small table of commands in pairs containing inverse commands.
2695:src/keys.c    **** 	* This table could be unsigned characters only storing the monadic kind.
2696:src/keys.c    **** 	* this saves twelve bytes in the table at a cost of some bytes in the code below.
2697:src/keys.c    **** 	* Not worth it since the maximum saving will be less than twelve bytes.
2698:src/keys.c    **** 	*/
2699:src/keys.c    ****        static const unsigned short int conv_mapping[] = {
2700:src/keys.c    **** 	 OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
2701:src/keys.c    **** 	 OP_MON | OP_DB_PR,	OP_MON | OP_PR_DB,
2702:src/keys.c    **** 	 OP_MON | OP_DEGC_F,	OP_MON | OP_DEGF_C,
2703:src/keys.c    **** 	 OP_MON | OP_DEG2RAD,	OP_MON | OP_RAD2DEG,
2704:src/keys.c    **** 	 OP_MON | OP_DEG2GRD,	OP_MON | OP_GRD2DEG,
2705:src/keys.c    **** 	 OP_MON | OP_RAD2GRD,	OP_MON | OP_GRD2RAD,
2706:src/keys.c    ****        };
2707:src/keys.c    ****        const opcode op = current_catalogue(pos);
2708:src/keys.c    ****        int i;
2709:src/keys.c    **** 
2710:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2711:src/keys.c    ****        if (isRARG(op))
2712:src/keys.c    **** 	 return op ^ 1;
2713:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
2714:src/keys.c    **** 	 if (op == conv_mapping[i])
2715:src/keys.c    **** 	   return conv_mapping[i^1];
2716:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
2717:src/keys.c    ****      }
ARM GAS  /tmp/cc8lpfL1.s 			page 53


2718:src/keys.c    ****      else if (c == K60 && (State2.alphas || State2.multi)) {
2719:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
2720:src/keys.c    ****        State2.alphashift = 1 - State2.alphashift;
2721:src/keys.c    ****        return STATE_UNFINISHED;
2722:src/keys.c    ****      }
2723:src/keys.c    ****    } else if (shift == SHIFT_G) {
2724:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
2725:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2726:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
2727:src/keys.c    ****      }
2728:src/keys.c    ****    }
2729:src/keys.c    **** 
2730:src/keys.c    ****    /* We've got a key press, map it to a character and try to
2731:src/keys.c    ****     * jump to the appropriate catalogue entry.
2732:src/keys.c    ****     */
2733:src/keys.c    ****    ch = remap_chars(keycode_to_alpha(c, shift == SHIFT_G ? SHIFT_LC_G : shift));
2734:src/keys.c    ****    reset_shift();
2735:src/keys.c    ****    if (ch == '\0')
2736:src/keys.c    ****      return STATE_UNFINISHED;
2737:src/keys.c    ****    if (cat > CATALOGUE_ALPHA && cat < CATALOGUE_CONST) {
2738:src/keys.c    ****      // No multi character search in alpha catalogues
2739:src/keys.c    ****      CmdLineLength = 0;
2740:src/keys.c    ****    }
2741:src/keys.c    ****    if (CmdLineLength < 10)
2742:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
2743:src/keys.c    ****    /* Search for the current buffer in the catalogue */
2744:src/keys.c    **** 
2745:src/keys.c    ****  search:
2746:src/keys.c    ****    Cmdline[CmdLineLength] = '\0';
2747:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
2748:src/keys.c    ****      char buf[16];
2749:src/keys.c    ****      const char *cmd = catcmd(current_catalogue(pos), buf);
2750:src/keys.c    ****      int i;
2751:src/keys.c    **** 
2752:src/keys.c    ****      if (*cmd == COMPLEX_PREFIX)
2753:src/keys.c    ****        cmd++;
2754:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
2755:src/keys.c    ****        const int c = remap_chars(cmd[i]);
2756:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
2757:src/keys.c    ****        if (c > cl)
2758:src/keys.c    **** 	 goto set_pos;
2759:src/keys.c    ****        else if (c < cl)
2760:src/keys.c    **** 	 break;
2761:src/keys.c    ****      }
2762:src/keys.c    ****      if (Cmdline[i] == '\0')
2763:src/keys.c    ****        goto set_pos;
2764:src/keys.c    ****    }
2765:src/keys.c    ****  set_max:
2766:src/keys.c    ****    pos = ctmax - 1;
2767:src/keys.c    ****  set_pos:
2768:src/keys.c    ****    while (is_multi && pos && forbidden_alpha(pos))
2769:src/keys.c    ****      --pos;
2770:src/keys.c    ****    State.catpos = pos;
2771:src/keys.c    ****    return STATE_UNFINISHED;
2772:src/keys.c    ****  }
2773:src/keys.c    **** 
2774:src/keys.c    **** #ifndef REALBUILD
ARM GAS  /tmp/cc8lpfL1.s 			page 54


2775:src/keys.c    **** int find_pos(const char* text) {
2776:src/keys.c    **** 	int pos;
2777:src/keys.c    **** 	const int ctmax = current_catalogue_max();
2778:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
2779:src/keys.c    **** 		char buf[16];
2780:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
2781:src/keys.c    **** 		int i;
2782:src/keys.c    **** 
2783:src/keys.c    **** 		if (*cmd == COMPLEX_PREFIX)
2784:src/keys.c    **** 			cmd++;
2785:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
2786:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
2787:src/keys.c    **** 			const int cl = remap_chars(text[i]);
2788:src/keys.c    **** 			if (c > cl)
2789:src/keys.c    **** 				return pos;
2790:src/keys.c    **** 			else if (c < cl)
2791:src/keys.c    **** 				break;
2792:src/keys.c    **** 		}
2793:src/keys.c    **** 		if (text[i] == '\0')
2794:src/keys.c    **** 			return pos;
2795:src/keys.c    **** 	}
2796:src/keys.c    **** 	return pos;
2797:src/keys.c    **** }
2798:src/keys.c    **** 
2799:src/keys.c    **** #endif
2800:src/keys.c    **** 
2801:src/keys.c    **** /* Multi (2) word instruction entry
2802:src/keys.c    ****  */
2803:src/keys.c    **** static void reset_multi(void) {
2804:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
2805:src/keys.c    **** 	State2.multi = 0;
2806:src/keys.c    **** 	if (! State2.alphas )
2807:src/keys.c    **** 		State2.alphashift = 0;
2808:src/keys.c    **** }
2809:src/keys.c    **** 
2810:src/keys.c    **** static int process_multi(const keycode c) {
2811:src/keys.c    **** 	enum shifts shift = reset_shift();
2812:src/keys.c    **** 	unsigned int ch = 0;
2813:src/keys.c    **** 	unsigned int opcode;
2814:src/keys.c    **** 
2815:src/keys.c    **** 	if (State2.catalogue) {
2816:src/keys.c    **** 		// Alpha catalogue from within multi character command
2817:src/keys.c    **** 		opcode = process_catalogue((const keycode)c, shift, State2.numdigit == 2);
2818:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
2819:src/keys.c    **** 			return opcode;
2820:src/keys.c    **** 		ch = (unsigned char) opcode;
2821:src/keys.c    **** 		goto add_char;
2822:src/keys.c    **** 	}
2823:src/keys.c    **** 
2824:src/keys.c    **** 	switch (c) {
2825:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
2826:src/keys.c    **** 		if (shift != SHIFT_N)
2827:src/keys.c    **** 				break;
2828:src/keys.c    **** 		reset_multi();
2829:src/keys.c    **** 		if (State2.numdigit == 0)
2830:src/keys.c    **** 			return STATE_UNFINISHED;
2831:src/keys.c    **** 		else if (State2.numdigit == 1)
ARM GAS  /tmp/cc8lpfL1.s 			page 55


2832:src/keys.c    **** 			State2.digval2 = 0;
2833:src/keys.c    **** 		goto fin;
2834:src/keys.c    **** 
2835:src/keys.c    **** 	case K24:	// Clx - backspace, clear alpha
2836:src/keys.c    **** 		if (shift != SHIFT_H) {
2837:src/keys.c    **** 			if (State2.numdigit == 0)
2838:src/keys.c    **** 				reset_multi();
2839:src/keys.c    **** 			else
2840:src/keys.c    **** 				State2.numdigit--;
2841:src/keys.c    **** 			return STATE_UNFINISHED;
2842:src/keys.c    **** 		}
2843:src/keys.c    **** 		break;
2844:src/keys.c    **** 
2845:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
2846:src/keys.c    **** 		if (shift == SHIFT_F)
2847:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
2848:src/keys.c    **** 		else
2849:src/keys.c    **** 			reset_multi();
2850:src/keys.c    **** 		return STATE_UNFINISHED;
2851:src/keys.c    **** 
2852:src/keys.c    **** 	default:
2853:src/keys.c    **** 		break;
2854:src/keys.c    **** 		}
2855:src/keys.c    **** 
2856:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
2857:src/keys.c    **** 	ch = keycode_to_alpha(c, shift);
2858:src/keys.c    **** 	if (ch == 0)
2859:src/keys.c    **** 		return STATE_UNFINISHED;
2860:src/keys.c    **** add_char:
2861:src/keys.c    **** 	if (State2.numdigit == 0) {
2862:src/keys.c    **** 		State2.digval = ch;
2863:src/keys.c    **** 		State2.numdigit = 1;
2864:src/keys.c    **** 		return STATE_UNFINISHED;
2865:src/keys.c    **** 	} else if (State2.numdigit == 1) {
2866:src/keys.c    **** 		State2.digval2 = ch;
2867:src/keys.c    **** 		State2.numdigit = 2;
2868:src/keys.c    **** 		return STATE_UNFINISHED;
2869:src/keys.c    **** 	}
2870:src/keys.c    **** 	reset_multi();
2871:src/keys.c    **** 
2872:src/keys.c    **** fin:
2873:src/keys.c    **** 	opcode = OP_DBL + (CmdBase << DBL_SHIFT) 
2874:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
2875:src/keys.c    **** 	return opcode;
2876:src/keys.c    **** }
2877:src/keys.c    **** 
2878:src/keys.c    **** 
2879:src/keys.c    **** /* Handle YES/NO confirmations
2880:src/keys.c    ****  */
2881:src/keys.c    **** static int process_confirm(const keycode c) {
2882:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
2883:src/keys.c    **** 	switch (c) {
2884:src/keys.c    **** #ifdef DM42
2885:src/keys.c    **** 	case K52:
2886:src/keys.c    **** #endif
2887:src/keys.c    **** 	case K63:			// Yes
2888:src/keys.c    **** 	  switch (State2.confirm) {
ARM GAS  /tmp/cc8lpfL1.s 			page 56


2889:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
2890:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
2891:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
2892:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
2893:src/keys.c    **** 	  }
2894:src/keys.c    **** 	case K24:
2895:src/keys.c    **** #ifdef DM42
2896:src/keys.c    **** 	case K22:
2897:src/keys.c    **** #else
2898:src/keys.c    **** 	case K32:
2899:src/keys.c    **** #endif
2900:src/keys.c    **** 	  // No
2901:src/keys.c    **** 	  State2.confirm = 0;
2902:src/keys.c    **** 	  State2.digval = 0;
2903:src/keys.c    **** 	  break;
2904:src/keys.c    **** 	default:			// No state change
2905:src/keys.c    **** 	  break;
2906:src/keys.c    **** 	}
2907:src/keys.c    **** 	return STATE_UNFINISHED;
2908:src/keys.c    **** }
2909:src/keys.c    **** 
2910:src/keys.c    **** 
2911:src/keys.c    **** /*
2912:src/keys.c    ****  *  STATUS
2913:src/keys.c    ****  */
2914:src/keys.c    **** static int process_status(const keycode c) {
2915:src/keys.c    **** 	int n = ((int)State2.status) - 3;
2916:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
2917:src/keys.c    **** 
2918:src/keys.c    **** 	if (c == K_UP) {
2919:src/keys.c    **** 		if (--n < -2)
2920:src/keys.c    **** 			n = max;
2921:src/keys.c    **** 	}
2922:src/keys.c    **** 	else if (c == K_DOWN) {
2923:src/keys.c    **** 		if (++n > max)
2924:src/keys.c    **** 			n = -2;
2925:src/keys.c    **** 	}
2926:src/keys.c    **** 	else if (c == K24 /* || c == K60 */) {
2927:src/keys.c    **** 		State2.status = 0;
2928:src/keys.c    **** 		return STATE_UNFINISHED;
2929:src/keys.c    **** 	} 
2930:src/keys.c    **** 	else {
2931:src/keys.c    **** 		int nn = keycode_to_digit_or_register(c) & 0x7f;
2932:src/keys.c    **** 		if (nn <= 9)
2933:src/keys.c    **** 			n = nn;
2934:src/keys.c    **** 		else if (nn == LOCAL_REG_BASE)
2935:src/keys.c    **** 			n = n == max ? 10 : max;
2936:src/keys.c    **** 		else if (nn != NO_REG)
2937:src/keys.c    **** 			n = 10; 
2938:src/keys.c    **** 	}
2939:src/keys.c    **** 	State2.status = n + 3;
2940:src/keys.c    **** 
2941:src/keys.c    **** 	return STATE_UNFINISHED;
2942:src/keys.c    **** }
2943:src/keys.c    **** 
2944:src/keys.c    **** 
2945:src/keys.c    **** /*
ARM GAS  /tmp/cc8lpfL1.s 			page 57


2946:src/keys.c    ****  *  CAT helper
2947:src/keys.c    ****  */
2948:src/keys.c    **** static int is_label_or_end_at(unsigned int pc, int search_end) {
 218              		.loc 1 2948 64 is_stmt 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
2949:src/keys.c    **** 	const unsigned int op = getprog(pc);
 222              		.loc 1 2949 2 view .LVU58
2948:src/keys.c    **** 	const unsigned int op = getprog(pc);
 223              		.loc 1 2948 64 is_stmt 0 view .LVU59
 224 0000 10B5     		push	{r4, lr}
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 4, -8
 227              		.cfi_offset 14, -4
2948:src/keys.c    **** 	const unsigned int op = getprog(pc);
 228              		.loc 1 2948 64 view .LVU60
 229 0002 0C46     		mov	r4, r1
 230              		.loc 1 2949 26 view .LVU61
 231 0004 FFF7FEFF 		bl	getprog
 232              	.LVL20:
2950:src/keys.c    **** 
2951:src/keys.c    **** 	return op == (OP_NIL | OP_END) || (!search_end && (isDBL(op) && opDBL(op) == DBL_LBL));
 233              		.loc 1 2951 2 is_stmt 1 view .LVU62
 234              		.loc 1 2951 33 is_stmt 0 view .LVU63
 235 0008 B0F59D7F 		cmp	r0, #314
 236 000c 06D0     		beq	.L21
 237              		.loc 1 2951 53 discriminator 3 view .LVU64
 238 000e 00F47043 		and	r3, r0, #61440
 239              		.loc 1 2951 49 discriminator 3 view .LVU65
 240 0012 B3F5704F 		cmp	r3, #61440
 241 0016 03D0     		beq	.L24
 242              		.loc 1 2951 33 view .LVU66
 243 0018 0020     		movs	r0, #0
 244              	.LVL21:
2952:src/keys.c    **** }
 245              		.loc 1 2952 1 view .LVU67
 246 001a 10BD     		pop	{r4, pc}
 247              	.LVL22:
 248              	.L21:
2951:src/keys.c    **** }
 249              		.loc 1 2951 33 view .LVU68
 250 001c 0120     		movs	r0, #1
 251              	.LVL23:
 252              		.loc 1 2952 1 view .LVU69
 253 001e 10BD     		pop	{r4, pc}
 254              	.LVL24:
 255              	.L24:
2951:src/keys.c    **** }
 256              		.loc 1 2951 66 discriminator 5 view .LVU70
 257 0020 C0F30320 		ubfx	r0, r0, #8, #4
 258              	.LVL25:
2951:src/keys.c    **** }
 259              		.loc 1 2951 63 discriminator 5 view .LVU71
 260 0024 50EA0403 		orrs	r3, r0, r4
 261 0028 0CBF     		ite	eq
 262 002a 0120     		moveq	r0, #1
ARM GAS  /tmp/cc8lpfL1.s 			page 58


 263 002c 0020     		movne	r0, #0
 264              		.loc 1 2952 1 discriminator 5 view .LVU72
 265 002e 10BD     		pop	{r4, pc}
 266              		.loc 1 2952 1 discriminator 5 view .LVU73
 267              		.cfi_endproc
 268              	.LFE54:
 270              		.section	.text.advance_to_next_label,"ax",%progbits
 271              		.align	1
 272              		.p2align 2,,3
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv4-sp-d16
 278              	advance_to_next_label:
 279              	.LVL26:
 280              	.LFB55:
2953:src/keys.c    **** 
2954:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end) {
 281              		.loc 1 2954 85 is_stmt 1 view -0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		.loc 1 2954 85 is_stmt 0 view .LVU75
 286 0000 70B5     		push	{r4, r5, r6, lr}
 287              		.cfi_def_cfa_offset 16
 288              		.cfi_offset 4, -16
 289              		.cfi_offset 5, -12
 290              		.cfi_offset 6, -8
 291              		.cfi_offset 14, -4
 292              		.loc 1 2954 85 view .LVU76
 293 0002 0446     		mov	r4, r0
2955:src/keys.c    **** 	do {
 294              		.loc 1 2955 2 is_stmt 1 view .LVU77
2956:src/keys.c    **** 		for (;;) {
 295              		.loc 1 2956 3 view .LVU78
2957:src/keys.c    **** 			if (inc) {
 296              		.loc 1 2957 4 view .LVU79
2954:src/keys.c    **** 	do {
 297              		.loc 1 2954 85 is_stmt 0 view .LVU80
 298 0004 1646     		mov	r6, r2
 299              		.loc 1 2957 7 view .LVU81
 300 0006 21B9     		cbnz	r1, .L29
 301              	.LVL27:
 302              	.L26:
2958:src/keys.c    **** 				pc = do_inc(pc, 0);
2959:src/keys.c    **** 				if (PcWrapped)
2960:src/keys.c    **** 					break;
2961:src/keys.c    **** 			}
2962:src/keys.c    **** 			else
2963:src/keys.c    **** 				inc = 1;
2964:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 303              		.loc 1 2964 4 is_stmt 1 view .LVU82
 304              		.loc 1 2964 8 is_stmt 0 view .LVU83
 305 0008 3146     		mov	r1, r6
 306 000a 2046     		mov	r0, r4
 307              		.loc 1 2964 8 view .LVU84
 308 000c FFF7FEFF 		bl	is_label_or_end_at
ARM GAS  /tmp/cc8lpfL1.s 			page 59


 309              	.LVL28:
 310              		.loc 1 2964 7 view .LVU85
 311 0010 B8B9     		cbnz	r0, .L28
 312              	.LVL29:
 313              	.L29:
 314              		.loc 1 2964 7 view .LVU86
 315 0012 0D4D     		ldr	r5, .L37
 316              	.L30:
2958:src/keys.c    **** 				pc = do_inc(pc, 0);
 317              		.loc 1 2958 5 is_stmt 1 view .LVU87
2958:src/keys.c    **** 				pc = do_inc(pc, 0);
 318              		.loc 1 2958 10 is_stmt 0 view .LVU88
 319 0014 2046     		mov	r0, r4
 320 0016 0021     		movs	r1, #0
 321 0018 FFF7FEFF 		bl	do_inc
 322              	.LVL30:
2959:src/keys.c    **** 					break;
 323              		.loc 1 2959 8 view .LVU89
 324 001c 2B68     		ldr	r3, [r5]
2958:src/keys.c    **** 				pc = do_inc(pc, 0);
 325              		.loc 1 2958 10 view .LVU90
 326 001e 0446     		mov	r4, r0
 327              	.LVL31:
2959:src/keys.c    **** 					break;
 328              		.loc 1 2959 5 is_stmt 1 view .LVU91
2959:src/keys.c    **** 					break;
 329              		.loc 1 2959 8 is_stmt 0 view .LVU92
 330 0020 002B     		cmp	r3, #0
 331 0022 F1D0     		beq	.L26
2965:src/keys.c    **** 				return pc;
2966:src/keys.c    **** 			}
2967:src/keys.c    **** 		}
2968:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) + 1) & 3);
 332              		.loc 1 2968 3 is_stmt 1 view .LVU93
 333              		.loc 1 2968 8 is_stmt 0 view .LVU94
 334 0024 20F47F54 		bic	r4, r0, #16320
 335 0028 24F03F04 		bic	r4, r4, #63
 336 002c 04F58044 		add	r4, r4, #16384
 337 0030 A4B2     		uxth	r4, r4
 338              		.loc 1 2968 6 view .LVU95
 339 0032 44F00104 		orr	r4, r4, #1
 340              	.LVL32:
2969:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 341              		.loc 1 2969 10 is_stmt 1 view .LVU96
 342              		.loc 1 2969 13 is_stmt 0 view .LVU97
 343 0036 2046     		mov	r0, r4
 344 0038 3146     		mov	r1, r6
 345 003a FFF7FEFF 		bl	is_label_or_end_at
 346              	.LVL33:
 347              		.loc 1 2969 2 view .LVU98
 348 003e 0028     		cmp	r0, #0
 349 0040 E8D0     		beq	.L30
 350              	.L28:
2970:src/keys.c    **** 	return pc;
2971:src/keys.c    **** }
 351              		.loc 1 2971 1 view .LVU99
 352 0042 2046     		mov	r0, r4
ARM GAS  /tmp/cc8lpfL1.s 			page 60


 353 0044 70BD     		pop	{r4, r5, r6, pc}
 354              	.LVL34:
 355              	.L38:
 356              		.loc 1 2971 1 view .LVU100
 357 0046 00BF     		.align	2
 358              	.L37:
 359 0048 00000000 		.word	PcWrapped
 360              		.cfi_endproc
 361              	.LFE55:
 363              		.section	.text.init_cat,"ax",%progbits
 364              		.align	1
 365              		.p2align 2,,3
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu fpv4-sp-d16
 371              	init_cat:
 372              	.LVL35:
 373              	.LFB12:
 565:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 374              		.loc 1 565 43 is_stmt 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 378              		.loc 1 566 2 view .LVU102
 565:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 379              		.loc 1 565 43 is_stmt 0 view .LVU103
 380 0000 38B5     		push	{r3, r4, r5, lr}
 381              		.cfi_def_cfa_offset 16
 382              		.cfi_offset 3, -16
 383              		.cfi_offset 4, -12
 384              		.cfi_offset 5, -8
 385              		.cfi_offset 14, -4
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 386              		.loc 1 566 37 view .LVU104
 387 0002 384C     		ldr	r4, .L58
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 388              		.loc 1 566 5 view .LVU105
 389 0004 0546     		mov	r5, r0
 390 0006 D0B9     		cbnz	r0, .L40
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 391              		.loc 1 566 37 discriminator 1 view .LVU106
 392 0008 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 393              		.loc 1 566 28 discriminator 1 view .LVU107
 394 000a 43B1     		cbz	r3, .L41
 568:src/keys.c    **** 		CmdLineLength = 0;
 395              		.loc 1 568 3 is_stmt 1 view .LVU108
 568:src/keys.c    **** 		CmdLineLength = 0;
 396              		.loc 1 568 18 is_stmt 0 view .LVU109
 397 000c 364A     		ldr	r2, .L58+4
 569:src/keys.c    **** 	}
 398              		.loc 1 569 17 view .LVU110
 399 000e 2077     		strb	r0, [r4, #28]
 568:src/keys.c    **** 		CmdLineLength = 0;
 400              		.loc 1 568 18 view .LVU111
ARM GAS  /tmp/cc8lpfL1.s 			page 61


 401 0010 1268     		ldr	r2, [r2]
 402 0012 92F8DC17 		ldrb	r1, [r2, #2012]	@ zero_extendqisi2
 403 0016 63F30401 		bfi	r1, r3, #0, #5
 404 001a 82F8DC17 		strb	r1, [r2, #2012]
 569:src/keys.c    **** 	}
 405              		.loc 1 569 3 is_stmt 1 view .LVU112
 406              	.L41:
 571:src/keys.c    **** 
 407              		.loc 1 571 2 view .LVU113
 408 001e FFF7FEFF 		bl	process_cmdline
 409              	.LVL36:
 573:src/keys.c    **** 	State2.registerlist = 0;
 410              		.loc 1 573 2 view .LVU114
 574:src/keys.c    **** 	State2.status = 0;
 411              		.loc 1 574 2 view .LVU115
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 412              		.loc 1 575 2 view .LVU116
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 413              		.loc 1 600 16 is_stmt 0 view .LVU117
 414 0022 6369     		ldr	r3, [r4, #20]
 415 0024 23F04063 		bic	r3, r3, #201326592
 416 0028 23F40073 		bic	r3, r3, #512
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 417              		.loc 1 575 16 view .LVU118
 418 002c 0022     		movs	r2, #0
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 419              		.loc 1 600 16 view .LVU119
 420 002e 6361     		str	r3, [r4, #20]
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 421              		.loc 1 575 16 view .LVU120
 422 0030 2273     		strb	r2, [r4, #12]
 576:src/keys.c    **** 
 423              		.loc 1 576 2 is_stmt 1 view .LVU121
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 424              		.loc 1 578 2 view .LVU122
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 425              		.loc 1 599 3 view .LVU123
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 426              		.loc 1 599 20 is_stmt 0 view .LVU124
 427 0032 A273     		strb	r2, [r4, #14]
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 428              		.loc 1 600 3 is_stmt 1 view .LVU125
 601:src/keys.c    **** 			// Different catalogue, reset position
 429              		.loc 1 601 3 view .LVU126
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 430              		.loc 1 606 2 view .LVU127
 431              	.LBB306:
 432              	.LBI306:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 433              		.loc 1 114 13 view .LVU128
 434              	.LBE306:
 115:src/keys.c    **** }
 435              		.loc 1 115 2 view .LVU129
 436              	.LVL37:
 437              	.LBB323:
 438              	.LBB307:
 439              	.LBI307:
ARM GAS  /tmp/cc8lpfL1.s 			page 62


 104:src/keys.c    **** 	enum shifts r = cur_shift();
 440              		.loc 1 104 20 view .LVU130
 441              	.LBB308:
 105:src/keys.c    **** 	State2.shifts = shift;
 442              		.loc 1 105 2 view .LVU131
 443              	.LBB309:
 444              	.LBI309:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 445              		.loc 1 96 13 view .LVU132
 446              	.LBB310:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 447              		.loc 1 97 2 view .LVU133
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 448              		.loc 1 97 18 is_stmt 0 view .LVU134
 449 0034 FFF7FEFF 		bl	shift_down
 450              	.LVL38:
  98:src/keys.c    **** }
 451              		.loc 1 98 2 is_stmt 1 view .LVU135
 452              	.LBE310:
 453              	.LBE309:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 454              		.loc 1 106 2 view .LVU136
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 455              		.loc 1 106 16 is_stmt 0 view .LVU137
 456 0038 0023     		movs	r3, #0
 457 003a 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 458              		.loc 1 108 2 is_stmt 1 view .LVU138
 459              	.LVL39:
 108:src/keys.c    **** }
 460              		.loc 1 108 2 is_stmt 0 view .LVU139
 461              	.LBE308:
 462              	.LBE307:
 463              	.LBE323:
 610:src/keys.c    **** 
 464              		.loc 1 610 1 view .LVU140
 465 003c 38BD     		pop	{r3, r4, r5, pc}
 466              	.LVL40:
 467              	.L40:
 571:src/keys.c    **** 
 468              		.loc 1 571 2 is_stmt 1 view .LVU141
 469 003e FFF7FEFF 		bl	process_cmdline
 470              	.LVL41:
 573:src/keys.c    **** 	State2.registerlist = 0;
 471              		.loc 1 573 2 view .LVU142
 574:src/keys.c    **** 	State2.status = 0;
 472              		.loc 1 574 2 view .LVU143
 573:src/keys.c    **** 	State2.registerlist = 0;
 473              		.loc 1 573 19 is_stmt 0 view .LVU144
 474 0042 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 475              		.loc 1 575 16 view .LVU145
 476 0044 0022     		movs	r2, #0
 573:src/keys.c    **** 	State2.registerlist = 0;
 477              		.loc 1 573 19 view .LVU146
 478 0046 23F00C03 		bic	r3, r3, #12
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
ARM GAS  /tmp/cc8lpfL1.s 			page 63


 479              		.loc 1 578 2 view .LVU147
 480 004a 162D     		cmp	r5, #22
 573:src/keys.c    **** 	State2.registerlist = 0;
 481              		.loc 1 573 19 view .LVU148
 482 004c E375     		strb	r3, [r4, #23]
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 483              		.loc 1 575 2 is_stmt 1 view .LVU149
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 484              		.loc 1 575 16 is_stmt 0 view .LVU150
 485 004e 2273     		strb	r2, [r4, #12]
 576:src/keys.c    **** 
 486              		.loc 1 576 2 is_stmt 1 view .LVU151
 576:src/keys.c    **** 
 487              		.loc 1 576 19 is_stmt 0 view .LVU152
 488 0050 A273     		strb	r2, [r4, #14]
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 489              		.loc 1 578 2 is_stmt 1 view .LVU153
 490 0052 1BD0     		beq	.L42
 491 0054 172D     		cmp	r5, #23
 492 0056 06D1     		bne	.L56
 594:src/keys.c    **** 		break;
 493              		.loc 1 594 3 view .LVU154
 594:src/keys.c    **** 		break;
 494              		.loc 1 594 17 is_stmt 0 view .LVU155
 495 0058 0123     		movs	r3, #1
 496 005a 2373     		strb	r3, [r4, #12]
 595:src/keys.c    **** 
 497              		.loc 1 595 3 is_stmt 1 view .LVU156
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 498              		.loc 1 606 2 view .LVU157
 499              	.LBB324:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 500              		.loc 1 114 13 view .LVU158
 501              	.LBE324:
 115:src/keys.c    **** }
 502              		.loc 1 115 2 view .LVU159
 503              	.LVL42:
 504              	.LBB325:
 505              	.LBB320:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 506              		.loc 1 104 20 view .LVU160
 507              	.LBB317:
 105:src/keys.c    **** 	State2.shifts = shift;
 508              		.loc 1 105 2 view .LVU161
 509              	.LBB314:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 510              		.loc 1 96 13 view .LVU162
 511              	.LBB311:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 512              		.loc 1 97 2 view .LVU163
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 513              		.loc 1 97 18 is_stmt 0 view .LVU164
 514 005c FFF7FEFF 		bl	shift_down
 515              	.LVL43:
  98:src/keys.c    **** }
 516              		.loc 1 98 2 is_stmt 1 view .LVU165
 517              	.LBE311:
ARM GAS  /tmp/cc8lpfL1.s 			page 64


 518              	.LBE314:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 519              		.loc 1 106 2 view .LVU166
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 520              		.loc 1 106 16 is_stmt 0 view .LVU167
 521 0060 0023     		movs	r3, #0
 522 0062 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 523              		.loc 1 108 2 is_stmt 1 view .LVU168
 524              	.LVL44:
 108:src/keys.c    **** }
 525              		.loc 1 108 2 is_stmt 0 view .LVU169
 526              	.LBE317:
 527              	.LBE320:
 528              	.LBE325:
 610:src/keys.c    **** 
 529              		.loc 1 610 1 view .LVU170
 530 0064 38BD     		pop	{r3, r4, r5, pc}
 531              	.L56:
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 532              		.loc 1 578 2 view .LVU171
 533 0066 152D     		cmp	r5, #21
 534 0068 1CD1     		bne	.L44
 581:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 535              		.loc 1 581 3 is_stmt 1 view .LVU172
 582:src/keys.c    **** 		break;
 536              		.loc 1 582 41 is_stmt 0 view .LVU173
 537 006a 1F49     		ldr	r1, .L58+4
 581:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 538              		.loc 1 581 20 view .LVU174
 539 006c DBB2     		uxtb	r3, r3
 582:src/keys.c    **** 		break;
 540              		.loc 1 582 41 view .LVU175
 541 006e 0968     		ldr	r1, [r1]
 581:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 542              		.loc 1 581 20 view .LVU176
 543 0070 43F00403 		orr	r3, r3, #4
 544 0074 E375     		strb	r3, [r4, #23]
 582:src/keys.c    **** 		break;
 545              		.loc 1 582 3 is_stmt 1 view .LVU177
 582:src/keys.c    **** 		break;
 546              		.loc 1 582 19 is_stmt 0 view .LVU178
 547 0076 B1F8EC07 		ldrh	r0, [r1, #2028]
 548 007a 1146     		mov	r1, r2
 549 007c FFF7FEFF 		bl	advance_to_next_label
 550              	.LVL45:
 582:src/keys.c    **** 		break;
 551              		.loc 1 582 17 view .LVU179
 552 0080 2081     		strh	r0, [r4, #8]	@ movhi
 583:src/keys.c    **** 	
 553              		.loc 1 583 3 is_stmt 1 view .LVU180
 554              	.L45:
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 555              		.loc 1 606 2 view .LVU181
 556              	.LBB326:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 557              		.loc 1 114 13 view .LVU182
ARM GAS  /tmp/cc8lpfL1.s 			page 65


 558              	.LBE326:
 115:src/keys.c    **** }
 559              		.loc 1 115 2 view .LVU183
 560              	.LVL46:
 561              	.LBB327:
 562              	.LBB321:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 563              		.loc 1 104 20 view .LVU184
 564              	.LBB318:
 105:src/keys.c    **** 	State2.shifts = shift;
 565              		.loc 1 105 2 view .LVU185
 566              	.LBB315:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 567              		.loc 1 96 13 view .LVU186
 568              	.LBB312:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 569              		.loc 1 97 2 view .LVU187
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 570              		.loc 1 97 18 is_stmt 0 view .LVU188
 571 0082 FFF7FEFF 		bl	shift_down
 572              	.LVL47:
  98:src/keys.c    **** }
 573              		.loc 1 98 2 is_stmt 1 view .LVU189
 574              	.LBE312:
 575              	.LBE315:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 576              		.loc 1 106 2 view .LVU190
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 577              		.loc 1 106 16 is_stmt 0 view .LVU191
 578 0086 0023     		movs	r3, #0
 579 0088 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 580              		.loc 1 108 2 is_stmt 1 view .LVU192
 581              	.LVL48:
 108:src/keys.c    **** }
 582              		.loc 1 108 2 is_stmt 0 view .LVU193
 583              	.LBE318:
 584              	.LBE321:
 585              	.LBE327:
 610:src/keys.c    **** 
 586              		.loc 1 610 1 view .LVU194
 587 008a 38BD     		pop	{r3, r4, r5, pc}
 588              	.L42:
 587:src/keys.c    **** 		State2.digval = regX_idx;
 589              		.loc 1 587 3 is_stmt 1 view .LVU195
 587:src/keys.c    **** 		State2.digval = regX_idx;
 590              		.loc 1 587 23 is_stmt 0 view .LVU196
 591 008c E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 589:src/keys.c    **** 		break;
 592              		.loc 1 589 18 view .LVU197
 593 008e A272     		strb	r2, [r4, #10]
 587:src/keys.c    **** 		State2.digval = regX_idx;
 594              		.loc 1 587 23 view .LVU198
 595 0090 43F00803 		orr	r3, r3, #8
 588:src/keys.c    **** 		State2.digval2 = 0;
 596              		.loc 1 588 17 view .LVU199
 597 0094 6422     		movs	r2, #100
ARM GAS  /tmp/cc8lpfL1.s 			page 66


 587:src/keys.c    **** 		State2.digval = regX_idx;
 598              		.loc 1 587 23 view .LVU200
 599 0096 E375     		strb	r3, [r4, #23]
 588:src/keys.c    **** 		State2.digval2 = 0;
 600              		.loc 1 588 3 is_stmt 1 view .LVU201
 588:src/keys.c    **** 		State2.digval2 = 0;
 601              		.loc 1 588 17 is_stmt 0 view .LVU202
 602 0098 2281     		strh	r2, [r4, #8]	@ movhi
 589:src/keys.c    **** 		break;
 603              		.loc 1 589 3 is_stmt 1 view .LVU203
 590:src/keys.c    **** 
 604              		.loc 1 590 3 view .LVU204
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 605              		.loc 1 606 2 view .LVU205
 606              	.LBB328:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 607              		.loc 1 114 13 view .LVU206
 608              	.LBE328:
 115:src/keys.c    **** }
 609              		.loc 1 115 2 view .LVU207
 610              	.LVL49:
 611              	.LBB329:
 612              	.LBB322:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 613              		.loc 1 104 20 view .LVU208
 614              	.LBB319:
 105:src/keys.c    **** 	State2.shifts = shift;
 615              		.loc 1 105 2 view .LVU209
 616              	.LBB316:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 617              		.loc 1 96 13 view .LVU210
 618              	.LBB313:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 619              		.loc 1 97 2 view .LVU211
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 620              		.loc 1 97 18 is_stmt 0 view .LVU212
 621 009a FFF7FEFF 		bl	shift_down
 622              	.LVL50:
  98:src/keys.c    **** }
 623              		.loc 1 98 2 is_stmt 1 view .LVU213
 624              	.LBE313:
 625              	.LBE316:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 626              		.loc 1 106 2 view .LVU214
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 627              		.loc 1 106 16 is_stmt 0 view .LVU215
 628 009e 0023     		movs	r3, #0
 629 00a0 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 630              		.loc 1 108 2 is_stmt 1 view .LVU216
 631              	.LVL51:
 108:src/keys.c    **** }
 632              		.loc 1 108 2 is_stmt 0 view .LVU217
 633              	.LBE319:
 634              	.LBE322:
 635              	.LBE329:
 610:src/keys.c    **** 
ARM GAS  /tmp/cc8lpfL1.s 			page 67


 636              		.loc 1 610 1 view .LVU218
 637 00a2 38BD     		pop	{r3, r4, r5, pc}
 638              	.L44:
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 639              		.loc 1 599 3 is_stmt 1 view .LVU219
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 640              		.loc 1 600 44 is_stmt 0 view .LVU220
 641 00a4 022D     		cmp	r5, #2
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 642              		.loc 1 599 20 view .LVU221
 643 00a6 A573     		strb	r5, [r4, #14]
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 644              		.loc 1 600 3 is_stmt 1 view .LVU222
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 645              		.loc 1 600 44 is_stmt 0 view .LVU223
 646 00a8 12D1     		bne	.L57
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 647              		.loc 1 600 16 view .LVU224
 648 00aa 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 649 00ac 43F00203 		orr	r3, r3, #2
 650 00b0 6375     		strb	r3, [r4, #21]
 601:src/keys.c    **** 			// Different catalogue, reset position
 651              		.loc 1 601 3 is_stmt 1 view .LVU225
 652              	.L49:
 601:src/keys.c    **** 			// Different catalogue, reset position
 653              		.loc 1 601 32 is_stmt 0 discriminator 1 view .LVU226
 654 00b2 0D4B     		ldr	r3, .L58+4
 655 00b4 1A68     		ldr	r2, [r3]
 601:src/keys.c    **** 			// Different catalogue, reset position
 656              		.loc 1 601 37 discriminator 1 view .LVU227
 657 00b6 92F8DC37 		ldrb	r3, [r2, #2012]	@ zero_extendqisi2
 601:src/keys.c    **** 			// Different catalogue, reset position
 658              		.loc 1 601 29 discriminator 1 view .LVU228
 659 00ba 03F01F03 		and	r3, r3, #31
 660 00be AB42     		cmp	r3, r5
 661 00c0 DFD0     		beq	.L45
 603:src/keys.c    **** 		}
 662              		.loc 1 603 4 is_stmt 1 view .LVU229
 603:src/keys.c    **** 		}
 663              		.loc 1 603 17 is_stmt 0 view .LVU230
 664 00c2 B2F8DC37 		ldrh	r3, [r2, #2012]
 665 00c6 6FF34B13 		bfc	r3, #5, #7
 666 00ca A2F8DC37 		strh	r3, [r2, #2012]	@ movhi
 667 00ce D8E7     		b	.L45
 668              	.L57:
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 669              		.loc 1 600 44 view .LVU231
 670 00d0 A5F11101 		sub	r1, r5, #17
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 671              		.loc 1 600 16 view .LVU232
 672 00d4 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 673              		.loc 1 600 44 view .LVU233
 674 00d6 4A42     		rsbs	r2, r1, #0
 675 00d8 4A41     		adcs	r2, r2, r1
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 676              		.loc 1 600 16 view .LVU234
ARM GAS  /tmp/cc8lpfL1.s 			page 68


 677 00da 62F34103 		bfi	r3, r2, #1, #1
 678 00de 6375     		strb	r3, [r4, #21]
 601:src/keys.c    **** 			// Different catalogue, reset position
 679              		.loc 1 601 3 is_stmt 1 view .LVU235
 680 00e0 E7E7     		b	.L49
 681              	.L59:
 682 00e2 00BF     		.align	2
 683              	.L58:
 684 00e4 00000000 		.word	StateWhileOn
 685 00e8 00000000 		.word	main_ram
 686              		.cfi_endproc
 687              	.LFE12:
 689              		.section	.text.advance_to_previous_label,"ax",%progbits
 690              		.align	1
 691              		.p2align 2,,3
 692              		.syntax unified
 693              		.thumb
 694              		.thumb_func
 695              		.fpu fpv4-sp-d16
 697              	advance_to_previous_label:
 698              	.LVL52:
 699              	.LFB56:
2972:src/keys.c    **** 
2973:src/keys.c    **** static unsigned int advance_to_previous_label(unsigned int pc, int search_end) {
 700              		.loc 1 2973 80 view -0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704              		.loc 1 2973 80 is_stmt 0 view .LVU237
 705 0000 70B5     		push	{r4, r5, r6, lr}
 706              		.cfi_def_cfa_offset 16
 707              		.cfi_offset 4, -16
 708              		.cfi_offset 5, -12
 709              		.cfi_offset 6, -8
 710              		.cfi_offset 14, -4
 711 0002 124E     		ldr	r6, .L69
 712              		.loc 1 2973 80 view .LVU238
 713 0004 0446     		mov	r4, r0
 714 0006 0D46     		mov	r5, r1
 715              	.LVL53:
 716              	.L61:
2974:src/keys.c    **** 	do {
 717              		.loc 1 2974 2 is_stmt 1 view .LVU239
2975:src/keys.c    **** 		for (;;) {
 718              		.loc 1 2975 3 view .LVU240
2976:src/keys.c    **** 			pc = do_dec(pc, 0);
 719              		.loc 1 2976 4 view .LVU241
 720              		.loc 1 2976 9 is_stmt 0 view .LVU242
 721 0008 2046     		mov	r0, r4
 722 000a 0021     		movs	r1, #0
 723 000c FFF7FEFF 		bl	do_dec
 724              	.LVL54:
2977:src/keys.c    **** 			if (PcWrapped)
2978:src/keys.c    **** 				break;
2979:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 725              		.loc 1 2979 4 is_stmt 1 view .LVU243
2980:src/keys.c    **** 				return pc;
ARM GAS  /tmp/cc8lpfL1.s 			page 69


2981:src/keys.c    **** 			}
2982:src/keys.c    **** 		}
2983:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) - 1) & 3);
 726              		.loc 1 2983 3 view .LVU244
 727              		.loc 1 2983 8 is_stmt 0 view .LVU245
 728 0010 20F47F53 		bic	r3, r0, #16320
 729 0014 23F03F03 		bic	r3, r3, #63
2977:src/keys.c    **** 			if (PcWrapped)
 730              		.loc 1 2977 7 view .LVU246
 731 0018 3268     		ldr	r2, [r6]
 732              		.loc 1 2983 8 view .LVU247
 733 001a A3F58043 		sub	r3, r3, #16384
2984:src/keys.c    **** 		pc = do_dec(pc, 0);
 734              		.loc 1 2984 8 view .LVU248
 735 001e 0021     		movs	r1, #0
2976:src/keys.c    **** 			if (PcWrapped)
 736              		.loc 1 2976 9 view .LVU249
 737 0020 0446     		mov	r4, r0
 738              	.LVL55:
2977:src/keys.c    **** 				break;
 739              		.loc 1 2977 4 is_stmt 1 view .LVU250
2983:src/keys.c    **** 		pc = do_dec(pc, 0);
 740              		.loc 1 2983 8 is_stmt 0 view .LVU251
 741 0022 9BB2     		uxth	r3, r3
 742              	.LVL56:
 743              		.loc 1 2984 3 is_stmt 1 view .LVU252
2977:src/keys.c    **** 				break;
 744              		.loc 1 2977 7 is_stmt 0 view .LVU253
 745 0024 32B9     		cbnz	r2, .L62
2979:src/keys.c    **** 				return pc;
 746              		.loc 1 2979 8 view .LVU254
 747 0026 2946     		mov	r1, r5
 748 0028 FFF7FEFF 		bl	is_label_or_end_at
 749              	.LVL57:
2979:src/keys.c    **** 				return pc;
 750              		.loc 1 2979 7 view .LVU255
 751 002c 0028     		cmp	r0, #0
 752 002e EBD0     		beq	.L61
2985:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
2986:src/keys.c    **** 	return pc;
2987:src/keys.c    **** }
 753              		.loc 1 2987 1 view .LVU256
 754 0030 2046     		mov	r0, r4
 755 0032 70BD     		pop	{r4, r5, r6, pc}
 756              	.LVL58:
 757              	.L62:
2984:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 758              		.loc 1 2984 8 view .LVU257
 759 0034 43F00100 		orr	r0, r3, #1
 760 0038 FFF7FEFF 		bl	do_dec
 761              	.LVL59:
2985:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 762              		.loc 1 2985 13 view .LVU258
 763 003c 2946     		mov	r1, r5
2984:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 764              		.loc 1 2984 8 view .LVU259
 765 003e 0446     		mov	r4, r0
ARM GAS  /tmp/cc8lpfL1.s 			page 70


 766              	.LVL60:
2985:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 767              		.loc 1 2985 10 is_stmt 1 view .LVU260
2985:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 768              		.loc 1 2985 13 is_stmt 0 view .LVU261
 769 0040 FFF7FEFF 		bl	is_label_or_end_at
 770              	.LVL61:
2985:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 771              		.loc 1 2985 2 view .LVU262
 772 0044 0028     		cmp	r0, #0
 773 0046 DFD0     		beq	.L61
 774              		.loc 1 2987 1 view .LVU263
 775 0048 2046     		mov	r0, r4
 776 004a 70BD     		pop	{r4, r5, r6, pc}
 777              	.LVL62:
 778              	.L70:
 779              		.loc 1 2987 1 view .LVU264
 780              		.align	2
 781              	.L69:
 782 004c 00000000 		.word	PcWrapped
 783              		.cfi_endproc
 784              	.LFE56:
 786              		.section	.text.check_confirm.part.0,"ax",%progbits
 787              		.align	1
 788              		.p2align 2,,3
 789              		.syntax unified
 790              		.thumb
 791              		.thumb_func
 792              		.fpu fpv4-sp-d16
 794              	check_confirm.part.0:
 795              	.LVL63:
 796              	.LFB64:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 797              		.loc 1 714 12 is_stmt 1 view -0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801              		@ link register save eliminated.
 802              	.LBB330:
 716:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 803              		.loc 1 716 3 view .LVU266
 717:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 804              		.loc 1 717 3 view .LVU267
 716:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 805              		.loc 1 716 13 is_stmt 0 view .LVU268
 806 0000 C3B2     		uxtb	r3, r0
 717:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 807              		.loc 1 717 25 view .LVU269
 808 0002 A3F14102 		sub	r2, r3, #65
 717:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 809              		.loc 1 717 6 view .LVU270
 810 0006 032A     		cmp	r2, #3
 811 0008 06D9     		bls	.L74
 725:src/keys.c    **** #endif
 812              		.loc 1 725 7 is_stmt 1 view .LVU271
 725:src/keys.c    **** #endif
 813              		.loc 1 725 29 is_stmt 0 view .LVU272
ARM GAS  /tmp/cc8lpfL1.s 			page 71


 814 000a AD3B     		subs	r3, r3, #173
 725:src/keys.c    **** #endif
 815              		.loc 1 725 10 view .LVU273
 816 000c 052B     		cmp	r3, #5
 817 000e 02D8     		bhi	.L73
 735:src/keys.c    **** 		}
 818              		.loc 1 735 4 is_stmt 1 view .LVU274
 735:src/keys.c    **** 		}
 819              		.loc 1 735 20 is_stmt 0 view .LVU275
 820 0010 054B     		ldr	r3, .L75
 821 0012 0122     		movs	r2, #1
 822 0014 1A60     		str	r2, [r3]
 823              	.L73:
 824              	.LBE330:
 739:src/keys.c    **** 
 825              		.loc 1 739 1 view .LVU276
 826 0016 7047     		bx	lr
 827              	.L74:
 828              	.LBB331:
 718:src/keys.c    **** 			return STATE_UNFINISHED;
 829              		.loc 1 718 4 is_stmt 1 view .LVU277
 718:src/keys.c    **** 			return STATE_UNFINISHED;
 830              		.loc 1 718 19 is_stmt 0 view .LVU278
 831 0018 044B     		ldr	r3, .L75+4
 832 001a 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
 718:src/keys.c    **** 			return STATE_UNFINISHED;
 833              		.loc 1 718 35 view .LVU279
 834 001c 4038     		subs	r0, r0, #64
 835              	.LVL64:
 718:src/keys.c    **** 			return STATE_UNFINISHED;
 836              		.loc 1 718 19 view .LVU280
 837 001e 60F30202 		bfi	r2, r0, #0, #3
 838 0022 1A75     		strb	r2, [r3, #20]
 719:src/keys.c    **** 		}
 839              		.loc 1 719 4 is_stmt 1 view .LVU281
 719:src/keys.c    **** 		}
 840              		.loc 1 719 11 is_stmt 0 view .LVU282
 841 0024 3320     		movs	r0, #51
 842              	.LVL65:
 719:src/keys.c    **** 		}
 843              		.loc 1 719 11 view .LVU283
 844 0026 7047     		bx	lr
 845              	.L76:
 846              		.align	2
 847              	.L75:
 848 0028 00000000 		.word	NonProgrammable
 849 002c 00000000 		.word	StateWhileOn
 850              	.LBE331:
 851              		.cfi_endproc
 852              	.LFE64:
 854              		.section	.text.init_arg.part.0,"ax",%progbits
 855              		.align	1
 856              		.p2align 2,,3
 857              		.syntax unified
 858              		.thumb
 859              		.thumb_func
 860              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cc8lpfL1.s 			page 72


 862              	init_arg.part.0:
 863              	.LVL66:
 864              	.LFB66:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 865              		.loc 1 552 13 is_stmt 1 view -0
 866              		.cfi_startproc
 867              		@ args = 0, pretend = 0, frame = 0
 868              		@ frame_needed = 0, uses_anonymous_args = 0
 869              		@ link register save eliminated.
 555:src/keys.c    **** 	State2.ind = 0;
 870              		.loc 1 555 2 view .LVU285
 555:src/keys.c    **** 	State2.ind = 0;
 871              		.loc 1 555 10 is_stmt 0 view .LVU286
 872 0000 084B     		ldr	r3, .L78
 560:src/keys.c    **** 	State2.local = 0;
 873              		.loc 1 560 13 view .LVU287
 874 0002 5969     		ldr	r1, [r3, #20]
 555:src/keys.c    **** 	State2.ind = 0;
 875              		.loc 1 555 10 view .LVU288
 876 0004 D877     		strb	r0, [r3, #31]
 556:src/keys.c    **** 	State2.digval = 0;
 877              		.loc 1 556 2 is_stmt 1 view .LVU289
 557:src/keys.c    **** 	State2.numdigit = 0;
 878              		.loc 1 557 2 view .LVU290
 560:src/keys.c    **** 	State2.local = 0;
 879              		.loc 1 560 13 is_stmt 0 view .LVU291
 880 0006 21F40F11 		bic	r1, r1, #2342912
 881 000a 8628     		cmp	r0, #134
 882 000c 0CBF     		ite	eq
 883 000e 4FF40812 		moveq	r2, #2228224
 884 0012 4FF40012 		movne	r2, #2097152
 885 0016 0A43     		orrs	r2, r2, r1
 557:src/keys.c    **** 	State2.numdigit = 0;
 886              		.loc 1 557 16 view .LVU292
 887 0018 0021     		movs	r1, #0
 560:src/keys.c    **** 	State2.local = 0;
 888              		.loc 1 560 13 view .LVU293
 889 001a 5A61     		str	r2, [r3, #20]
 557:src/keys.c    **** 	State2.numdigit = 0;
 890              		.loc 1 557 16 view .LVU294
 891 001c 1981     		strh	r1, [r3, #8]	@ movhi
 558:src/keys.c    **** 	State2.rarg = 1;
 892              		.loc 1 558 2 is_stmt 1 view .LVU295
 558:src/keys.c    **** 	State2.rarg = 1;
 893              		.loc 1 558 18 is_stmt 0 view .LVU296
 894 001e D972     		strb	r1, [r3, #11]
 559:src/keys.c    **** 	State2.dot = 0;
 895              		.loc 1 559 2 is_stmt 1 view .LVU297
 560:src/keys.c    **** 	State2.local = 0;
 896              		.loc 1 560 2 view .LVU298
 561:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 897              		.loc 1 561 2 view .LVU299
 562:src/keys.c    **** }
 898              		.loc 1 562 2 view .LVU300
 563:src/keys.c    **** 
 899              		.loc 1 563 1 is_stmt 0 view .LVU301
 900 0020 7047     		bx	lr
ARM GAS  /tmp/cc8lpfL1.s 			page 73


 901              	.L79:
 902 0022 00BF     		.align	2
 903              	.L78:
 904 0024 00000000 		.word	StateWhileOn
 905              		.cfi_endproc
 906              	.LFE66:
 908              		.section	.text.reset_arg,"ax",%progbits
 909              		.align	1
 910              		.p2align 2,,3
 911              		.syntax unified
 912              		.thumb
 913              		.thumb_func
 914              		.fpu fpv4-sp-d16
 916              	reset_arg:
 917              	.LFB34:
1899:src/keys.c    **** 	init_arg((enum rarg) 0);
 918              		.loc 1 1899 29 is_stmt 1 view -0
 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 0
 921              		@ frame_needed = 0, uses_anonymous_args = 0
1900:src/keys.c    **** 	State2.rarg = 0;
 922              		.loc 1 1900 2 view .LVU303
 923              	.LVL67:
 924              	.LBB332:
 925              	.LBI332:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 926              		.loc 1 552 13 view .LVU304
 927              	.LBB333:
 553:src/keys.c    **** 		return;
 928              		.loc 1 553 2 view .LVU305
 929              	.LBE333:
 930              	.LBE332:
1899:src/keys.c    **** 	init_arg((enum rarg) 0);
 931              		.loc 1 1899 29 is_stmt 0 view .LVU306
 932 0000 08B5     		push	{r3, lr}
 933              		.cfi_def_cfa_offset 8
 934              		.cfi_offset 3, -8
 935              		.cfi_offset 14, -4
 936              	.LBB335:
 937              	.LBB334:
 553:src/keys.c    **** 		return;
 938              		.loc 1 553 6 view .LVU307
 939 0002 FFF7FEFF 		bl	is_bad_cmdline
 940              	.LVL68:
 553:src/keys.c    **** 		return;
 941              		.loc 1 553 5 view .LVU308
 942 0006 08B9     		cbnz	r0, .L81
 943 0008 FFF7FEFF 		bl	init_arg.part.0
 944              	.LVL69:
 945              	.L81:
 553:src/keys.c    **** 		return;
 946              		.loc 1 553 5 view .LVU309
 947              	.LBE334:
 948              	.LBE335:
1901:src/keys.c    **** }
 949              		.loc 1 1901 2 is_stmt 1 view .LVU310
1901:src/keys.c    **** }
ARM GAS  /tmp/cc8lpfL1.s 			page 74


 950              		.loc 1 1901 14 is_stmt 0 view .LVU311
 951 000c 024B     		ldr	r3, .L83
 952 000e 9A7D     		ldrb	r2, [r3, #22]	@ zero_extendqisi2
 953 0010 6FF34512 		bfc	r2, #5, #1
 954 0014 9A75     		strb	r2, [r3, #22]
1902:src/keys.c    **** 
 955              		.loc 1 1902 1 view .LVU312
 956 0016 08BD     		pop	{r3, pc}
 957              	.L84:
 958              		.align	2
 959              	.L83:
 960 0018 00000000 		.word	StateWhileOn
 961              		.cfi_endproc
 962              	.LFE34:
 964              		.section	.text.arg_eval,"ax",%progbits
 965              		.align	1
 966              		.p2align 2,,3
 967              		.syntax unified
 968              		.thumb
 969              		.thumb_func
 970              		.fpu fpv4-sp-d16
 972              	arg_eval:
 973              	.LVL70:
 974              	.LFB35:
1904:src/keys.c    ****    const unsigned int base = CmdBase;
 975              		.loc 1 1904 40 is_stmt 1 view -0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 0
 978              		@ frame_needed = 0, uses_anonymous_args = 0
1905:src/keys.c    ****    int r = RARG(base, val 
 979              		.loc 1 1905 4 view .LVU314
1904:src/keys.c    ****    const unsigned int base = CmdBase;
 980              		.loc 1 1904 40 is_stmt 0 view .LVU315
 981 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 982              		.cfi_def_cfa_offset 24
 983              		.cfi_offset 3, -24
 984              		.cfi_offset 4, -20
 985              		.cfi_offset 5, -16
 986              		.cfi_offset 6, -12
 987              		.cfi_offset 7, -8
 988              		.cfi_offset 14, -4
1905:src/keys.c    ****    int r = RARG(base, val 
 989              		.loc 1 1905 30 view .LVU316
 990 0002 234B     		ldr	r3, .L109
1906:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 991              		.loc 1 1906 12 view .LVU317
 992 0004 9D7D     		ldrb	r5, [r3, #22]	@ zero_extendqisi2
 993 0006 597D     		ldrb	r1, [r3, #21]	@ zero_extendqisi2
1905:src/keys.c    ****    int r = RARG(base, val 
 994              		.loc 1 1905 23 view .LVU318
 995 0008 DA7F     		ldrb	r2, [r3, #31]	@ zero_extendqisi2
 996              	.LVL71:
1906:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 997              		.loc 1 1906 4 is_stmt 1 view .LVU319
1906:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 998              		.loc 1 1906 12 is_stmt 0 view .LVU320
 999 000a EE07     		lsls	r6, r5, #31
ARM GAS  /tmp/cc8lpfL1.s 			page 75


1909:src/keys.c    **** 
 1000              		.loc 1 1909 34 view .LVU321
 1001 000c 214E     		ldr	r6, .L109+4
 1002 000e 3668     		ldr	r6, [r6]
1906:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1003              		.loc 1 1906 12 view .LVU322
 1004 0010 01F08003 		and	r3, r1, #128
1909:src/keys.c    **** 
 1005              		.loc 1 1909 32 view .LVU323
 1006 0014 96F8EA77 		ldrb	r7, [r6, #2026]	@ zero_extendqisi2
1906:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1007              		.loc 1 1906 12 view .LVU324
 1008 0018 0344     		add	r3, r3, r0
 1009 001a 02F12004 		add	r4, r2, #32
 1010 001e 48BF     		it	mi
 1011 0020 7033     		addmi	r3, r3, #112
 1012 0022 2402     		lsls	r4, r4, #8
1909:src/keys.c    **** 
 1013              		.loc 1 1909 79 view .LVU325
 1014 0024 3F07     		lsls	r7, r7, #28
1906:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1015              		.loc 1 1906 12 view .LVU326
 1016 0026 44EA0304 		orr	r4, r4, r3
 1017              	.LVL72:
1909:src/keys.c    **** 
 1018              		.loc 1 1909 4 is_stmt 1 view .LVU327
1909:src/keys.c    **** 
 1019              		.loc 1 1909 79 is_stmt 0 view .LVU328
 1020 002a 25D5     		bpl	.L92
1909:src/keys.c    **** 
 1021              		.loc 1 1909 79 discriminator 2 view .LVU329
 1022 002c 15F0400F 		tst	r5, #64
 1023 0030 0CBF     		ite	eq
 1024 0032 0425     		moveq	r5, #4
 1025 0034 0825     		movne	r5, #8
 1026              	.L87:
 1027              	.LVL73:
1911:src/keys.c    ****      /*
 1028              		.loc 1 1911 4 is_stmt 1 discriminator 6 view .LVU330
1911:src/keys.c    ****      /*
 1029              		.loc 1 1911 7 is_stmt 0 discriminator 6 view .LVU331
 1030 0036 0B06     		lsls	r3, r1, #24
 1031 0038 1AD4     		bmi	.L88
1927:src/keys.c    ****        if (C_LOCKED) {
 1032              		.loc 1 1927 6 is_stmt 1 view .LVU332
1927:src/keys.c    ****        if (C_LOCKED) {
 1033              		.loc 1 1927 23 is_stmt 0 view .LVU333
 1034 003a 174B     		ldr	r3, .L109+8
 1035 003c 03EB0213 		add	r3, r3, r2, lsl #4
 1036 0040 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
1927:src/keys.c    ****        if (C_LOCKED) {
 1037              		.loc 1 1927 9 view .LVU334
 1038 0042 DF06     		lsls	r7, r3, #27
 1039 0044 10D5     		bpl	.L89
1927:src/keys.c    ****        if (C_LOCKED) {
 1040              		.loc 1 1927 55 discriminator 1 view .LVU335
 1041 0046 96F8AC37 		ldrb	r3, [r6, #1964]	@ zero_extendqisi2
ARM GAS  /tmp/cc8lpfL1.s 			page 76


 1042 004a 03F04103 		and	r3, r3, #65
1927:src/keys.c    ****        if (C_LOCKED) {
 1043              		.loc 1 1927 40 discriminator 1 view .LVU336
 1044 004e 412B     		cmp	r3, #65
 1045 0050 0CBF     		ite	eq
 1046 0052 0021     		moveq	r1, #0
 1047 0054 6221     		movne	r1, #98
1927:src/keys.c    ****        if (C_LOCKED) {
 1048              		.loc 1 1927 30 discriminator 1 view .LVU337
 1049 0056 8142     		cmp	r1, r0
 1050 0058 06D2     		bcs	.L89
1927:src/keys.c    ****        if (C_LOCKED) {
 1051              		.loc 1 1927 86 discriminator 6 view .LVU338
 1052 005a C107     		lsls	r1, r0, #31
 1053 005c 04D5     		bpl	.L89
1928:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
 1054              		.loc 1 1928 8 is_stmt 1 view .LVU339
1928:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
 1055              		.loc 1 1928 11 is_stmt 0 view .LVU340
 1056 005e 412B     		cmp	r3, #65
 1057 0060 11D0     		beq	.L107
 1058              	.LVL74:
 1059              	.L96:
1933:src/keys.c    ****        }
 1060              		.loc 1 1933 10 view .LVU341
 1061 0062 3324     		movs	r4, #51
 1062              	.LVL75:
1948:src/keys.c    **** 
 1063              		.loc 1 1948 2 view .LVU342
 1064 0064 2046     		mov	r0, r4
 1065              	.LVL76:
1948:src/keys.c    **** 
 1066              		.loc 1 1948 2 view .LVU343
 1067 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1068              	.LVL77:
 1069              	.L89:
1941:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1070              		.loc 1 1941 6 is_stmt 1 view .LVU344
1941:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1071              		.loc 1 1941 31 is_stmt 0 view .LVU345
 1072 0068 A2F12203 		sub	r3, r2, #34
1941:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1073              		.loc 1 1941 9 view .LVU346
 1074 006c 012B     		cmp	r3, #1
 1075 006e 05D9     		bls	.L108
 1076              	.LVL78:
 1077              	.L88:
1946:src/keys.c    ****    return r;
 1078              		.loc 1 1946 4 is_stmt 1 view .LVU347
 1079 0070 FFF7FEFF 		bl	reset_arg
 1080              	.LVL79:
1947:src/keys.c    ****  }
 1081              		.loc 1 1947 4 view .LVU348
 1082              	.L85:
1948:src/keys.c    **** 
 1083              		.loc 1 1948 2 is_stmt 0 view .LVU349
 1084 0074 2046     		mov	r0, r4
ARM GAS  /tmp/cc8lpfL1.s 			page 77


 1085 0076 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1086              	.LVL80:
 1087              	.L92:
1909:src/keys.c    **** 
 1088              		.loc 1 1909 79 view .LVU350
 1089 0078 0425     		movs	r5, #4
 1090 007a DCE7     		b	.L87
 1091              	.LVL81:
 1092              	.L108:
1941:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1093              		.loc 1 1941 76 discriminator 1 view .LVU351
 1094 007c C5F16405 		rsb	r5, r5, #100
 1095              	.LVL82:
1941:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1096              		.loc 1 1941 55 discriminator 1 view .LVU352
 1097 0080 8542     		cmp	r5, r0
 1098 0082 F5D2     		bcs	.L88
 1099 0084 EDE7     		b	.L96
 1100              	.LVL83:
 1101              	.L107:
1929:src/keys.c    **** 	 return STATE_UNFINISHED; // either leaves arg blank (if EXIT pressed) or with one digit in (STO)
 1102              		.loc 1 1929 3 is_stmt 1 view .LVU353
 1103 0086 1920     		movs	r0, #25
 1104              	.LVL84:
1929:src/keys.c    **** 	 return STATE_UNFINISHED; // either leaves arg blank (if EXIT pressed) or with one digit in (STO)
 1105              		.loc 1 1929 3 is_stmt 0 view .LVU354
 1106 0088 FFF7FEFF 		bl	error_message
 1107              	.LVL85:
1930:src/keys.c    ****        }
 1108              		.loc 1 1930 3 is_stmt 1 view .LVU355
1930:src/keys.c    ****        }
 1109              		.loc 1 1930 10 is_stmt 0 view .LVU356
 1110 008c 3324     		movs	r4, #51
 1111              	.LVL86:
1930:src/keys.c    ****        }
 1112              		.loc 1 1930 10 view .LVU357
 1113 008e F1E7     		b	.L85
 1114              	.L110:
 1115              		.align	2
 1116              	.L109:
 1117 0090 00000000 		.word	StateWhileOn
 1118 0094 00000000 		.word	main_ram
 1119 0098 00000000 		.word	argcmds
 1120              		.cfi_endproc
 1121              	.LFE35:
 1123              		.section	.text.arg_digit,"ax",%progbits
 1124              		.align	1
 1125              		.p2align 2,,3
 1126              		.syntax unified
 1127              		.thumb
 1128              		.thumb_func
 1129              		.fpu fpv4-sp-d16
 1131              	arg_digit:
 1132              	.LVL87:
 1133              	.LFB36:
1950:src/keys.c    **** 	int lim;
 1134              		.loc 1 1950 29 is_stmt 1 view -0
ARM GAS  /tmp/cc8lpfL1.s 			page 78


 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 8
 1137              		@ frame_needed = 0, uses_anonymous_args = 0
1951:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
 1138              		.loc 1 1951 2 view .LVU359
1953:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1139              		.loc 1 1953 2 view .LVU360
1950:src/keys.c    **** 	int lim;
 1140              		.loc 1 1950 29 is_stmt 0 view .LVU361
 1141 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1142              		.cfi_def_cfa_offset 20
 1143              		.cfi_offset 4, -20
 1144              		.cfi_offset 5, -16
 1145              		.cfi_offset 6, -12
 1146              		.cfi_offset 7, -8
 1147              		.cfi_offset 14, -4
1954:src/keys.c    **** #else
 1148              		.loc 1 1954 29 view .LVU362
 1149 0002 3E4D     		ldr	r5, .L158
1950:src/keys.c    **** 	int lim;
 1150              		.loc 1 1950 29 view .LVU363
 1151 0004 83B0     		sub	sp, sp, #12
 1152              		.cfi_def_cfa_offset 32
1950:src/keys.c    **** 	int lim;
 1153              		.loc 1 1950 29 view .LVU364
 1154 0006 0446     		mov	r4, r0
1953:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1155              		.loc 1 1953 17 view .LVU365
 1156 0008 01A8     		add	r0, sp, #4
 1157              	.LVL88:
1953:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1158              		.loc 1 1953 17 view .LVU366
 1159 000a FFF7FEFF 		bl	get_dispmode_digs
 1160              	.LVL89:
1954:src/keys.c    **** #else
 1161              		.loc 1 1954 29 view .LVU367
 1162 000e A97D     		ldrb	r1, [r5, #22]	@ zero_extendqisi2
 1163              	.LVL90:
1954:src/keys.c    **** #else
 1164              		.loc 1 1954 2 is_stmt 1 view .LVU368
 1165 0010 EE7F     		ldrb	r6, [r5, #31]	@ zero_extendqisi2
1954:src/keys.c    **** #else
 1166              		.loc 1 1954 130 is_stmt 0 view .LVU369
 1167 0012 11F0400C 		ands	ip, r1, #64
 1168 0016 01D0     		beq	.L114
1954:src/keys.c    **** #else
 1169              		.loc 1 1954 44 discriminator 2 view .LVU370
 1170 0018 502E     		cmp	r6, #80
 1171 001a 64D0     		beq	.L154
 1172              	.LVL91:
 1173              	.L114:
1958:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1174              		.loc 1 1958 2 is_stmt 1 discriminator 8 view .LVU371
1959:src/keys.c    **** 	
 1175              		.loc 1 1959 34 is_stmt 0 discriminator 8 view .LVU372
 1176 001c 384A     		ldr	r2, .L158+4
1958:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
ARM GAS  /tmp/cc8lpfL1.s 			page 79


 1177              		.loc 1 1958 33 discriminator 8 view .LVU373
 1178 001e 2B89     		ldrh	r3, [r5, #8]
1959:src/keys.c    **** 	
 1179              		.loc 1 1959 34 discriminator 8 view .LVU374
 1180 0020 02EB0612 		add	r2, r2, r6, lsl #4
1958:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1181              		.loc 1 1958 41 discriminator 8 view .LVU375
 1182 0024 03EB8303 		add	r3, r3, r3, lsl #2
1959:src/keys.c    **** 	
 1183              		.loc 1 1959 34 discriminator 8 view .LVU376
 1184 0028 5779     		ldrb	r7, [r2, #5]	@ zero_extendqisi2
1958:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1185              		.loc 1 1958 46 discriminator 8 view .LVU377
 1186 002a 04EB4304 		add	r4, r4, r3, lsl #1
 1187              	.LVL92:
1959:src/keys.c    **** 	
 1188              		.loc 1 1959 2 is_stmt 1 discriminator 8 view .LVU378
1959:src/keys.c    **** 	
 1189              		.loc 1 1959 39 is_stmt 0 discriminator 8 view .LVU379
 1190 002e BB07     		lsls	r3, r7, #30
 1191 0030 32D4     		bmi	.L153
1959:src/keys.c    **** 	
 1192              		.loc 1 1959 39 discriminator 2 view .LVU380
 1193 0032 95F91530 		ldrsb	r3, [r5, #21]
 1194 0036 002B     		cmp	r3, #0
 1195 0038 2EDB     		blt	.L153
 1196              	.LVL93:
1961:src/keys.c    **** 		// Handle local registers and flags
 1197              		.loc 1 1961 2 is_stmt 1 view .LVU381
1961:src/keys.c    **** 		// Handle local registers and flags
 1198              		.loc 1 1961 5 is_stmt 0 view .LVU382
 1199 003a C907     		lsls	r1, r1, #31
 1200 003c 4BD5     		bpl	.L120
1963:src/keys.c    **** 		if (State2.runmode) {
 1201              		.loc 1 1963 3 is_stmt 1 view .LVU383
1963:src/keys.c    **** 		if (State2.runmode) {
 1202              		.loc 1 1963 7 is_stmt 0 view .LVU384
 1203 003e 0F23     		movs	r3, #15
 1204 0040 0193     		str	r3, [sp, #4]
1964:src/keys.c    **** 			if (LocalRegs == 0)
 1205              		.loc 1 1964 3 is_stmt 1 view .LVU385
1964:src/keys.c    **** 			if (LocalRegs == 0)
 1206              		.loc 1 1964 6 is_stmt 0 view .LVU386
 1207 0042 BCF1000F 		cmp	ip, #0
 1208 0046 05D0     		beq	.L123
1965:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1209              		.loc 1 1965 4 is_stmt 1 view .LVU387
1965:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1210              		.loc 1 1965 8 is_stmt 0 view .LVU388
 1211 0048 2E4B     		ldr	r3, .L158+8
 1212 004a 1B68     		ldr	r3, [r3]
1965:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1213              		.loc 1 1965 7 view .LVU389
 1214 004c B3F9DE37 		ldrsh	r3, [r3, #2014]
 1215 0050 002B     		cmp	r3, #0
 1216 0052 3DD0     		beq	.L125
 1217              	.LVL94:
ARM GAS  /tmp/cc8lpfL1.s 			page 80


 1218              	.L123:
1975:src/keys.c    **** 	else {
 1219              		.loc 1 1975 65 view .LVU390
 1220 0054 0F20     		movs	r0, #15
 1221              	.L122:
1981:src/keys.c    **** 		return STATE_UNFINISHED;
 1222              		.loc 1 1981 2 is_stmt 1 view .LVU391
1981:src/keys.c    **** 		return STATE_UNFINISHED;
 1223              		.loc 1 1981 5 is_stmt 0 view .LVU392
 1224 0056 8442     		cmp	r4, r0
 1225 0058 3ADC     		bgt	.L125
 1226              	.L157:
1984:src/keys.c    **** 	++State2.numdigit;
 1227              		.loc 1 1984 2 is_stmt 1 view .LVU393
1985:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1228              		.loc 1 1985 2 is_stmt 0 view .LVU394
 1229 005a EF7A     		ldrb	r7, [r5, #11]	@ zero_extendqisi2
1984:src/keys.c    **** 	++State2.numdigit;
 1230              		.loc 1 1984 16 view .LVU395
 1231 005c 2C81     		strh	r4, [r5, #8]	@ movhi
1985:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1232              		.loc 1 1985 2 is_stmt 1 view .LVU396
 1233 005e 0137     		adds	r7, r7, #1
1986:src/keys.c    **** 		int result = arg_eval(val);
 1234              		.loc 1 1986 16 is_stmt 0 view .LVU397
 1235 0060 04EB8403 		add	r3, r4, r4, lsl #2
1985:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1236              		.loc 1 1985 2 view .LVU398
 1237 0064 FFB2     		uxtb	r7, r7
1986:src/keys.c    **** 		int result = arg_eval(val);
 1238              		.loc 1 1986 5 view .LVU399
 1239 0066 B0EB430F 		cmp	r0, r3, lsl #1
1985:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1240              		.loc 1 1985 2 view .LVU400
 1241 006a EF72     		strb	r7, [r5, #11]
1986:src/keys.c    **** 		int result = arg_eval(val);
 1242              		.loc 1 1986 2 is_stmt 1 view .LVU401
1986:src/keys.c    **** 		int result = arg_eval(val);
 1243              		.loc 1 1986 5 is_stmt 0 view .LVU402
 1244 006c 04DB     		blt	.L131
1986:src/keys.c    **** 		int result = arg_eval(val);
 1245              		.loc 1 1986 49 discriminator 1 view .LVU403
 1246 006e 3046     		mov	r0, r6
 1247 0070 FFF7FEFF 		bl	num_arg_digits
 1248              	.LVL95:
1986:src/keys.c    **** 		int result = arg_eval(val);
 1249              		.loc 1 1986 27 discriminator 1 view .LVU404
 1250 0074 8742     		cmp	r7, r0
 1251 0076 2BDB     		blt	.L125
 1252              	.L131:
 1253              	.LBB336:
1987:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1254              		.loc 1 1987 3 is_stmt 1 view .LVU405
1987:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1255              		.loc 1 1987 16 is_stmt 0 view .LVU406
 1256 0078 2046     		mov	r0, r4
 1257 007a FFF7FEFF 		bl	arg_eval
ARM GAS  /tmp/cc8lpfL1.s 			page 81


 1258              	.LVL96:
1988:src/keys.c    **** 			--State2.numdigit;
 1259              		.loc 1 1988 3 is_stmt 1 view .LVU407
1988:src/keys.c    **** 			--State2.numdigit;
 1260              		.loc 1 1988 6 is_stmt 0 view .LVU408
 1261 007e 3328     		cmp	r0, #51
 1262 0080 08D1     		bne	.L111
1989:src/keys.c    **** 			State2.digval /= 10;
 1263              		.loc 1 1989 4 is_stmt 1 view .LVU409
1990:src/keys.c    **** 		}
 1264              		.loc 1 1990 18 is_stmt 0 view .LVU410
 1265 0082 2B89     		ldrh	r3, [r5, #8]
 1266 0084 2049     		ldr	r1, .L158+12
1989:src/keys.c    **** 			State2.digval /= 10;
 1267              		.loc 1 1989 4 view .LVU411
 1268 0086 EA7A     		ldrb	r2, [r5, #11]	@ zero_extendqisi2
1990:src/keys.c    **** 		}
 1269              		.loc 1 1990 18 view .LVU412
 1270 0088 A1FB0313 		umull	r1, r3, r1, r3
 1271 008c DB08     		lsrs	r3, r3, #3
1989:src/keys.c    **** 			State2.digval /= 10;
 1272              		.loc 1 1989 4 view .LVU413
 1273 008e 013A     		subs	r2, r2, #1
1990:src/keys.c    **** 		}
 1274              		.loc 1 1990 18 view .LVU414
 1275 0090 2B81     		strh	r3, [r5, #8]	@ movhi
1989:src/keys.c    **** 			State2.digval /= 10;
 1276              		.loc 1 1989 4 view .LVU415
 1277 0092 EA72     		strb	r2, [r5, #11]
1990:src/keys.c    **** 		}
 1278              		.loc 1 1990 4 is_stmt 1 view .LVU416
 1279              	.L111:
 1280              	.LBE336:
1995:src/keys.c    **** 
 1281              		.loc 1 1995 1 is_stmt 0 view .LVU417
 1282 0094 03B0     		add	sp, sp, #12
 1283              		.cfi_remember_state
 1284              		.cfi_def_cfa_offset 20
 1285              		@ sp needed
 1286 0096 F0BD     		pop	{r4, r5, r6, r7, pc}
 1287              	.LVL97:
 1288              	.L153:
 1289              		.cfi_restore_state
1961:src/keys.c    **** 		// Handle local registers and flags
 1290              		.loc 1 1961 2 is_stmt 1 view .LVU418
1961:src/keys.c    **** 		// Handle local registers and flags
 1291              		.loc 1 1961 5 is_stmt 0 view .LVU419
 1292 0098 C807     		lsls	r0, r1, #31
 1293 009a 12D5     		bpl	.L155
1963:src/keys.c    **** 		if (State2.runmode) {
 1294              		.loc 1 1963 3 is_stmt 1 view .LVU420
1963:src/keys.c    **** 		if (State2.runmode) {
 1295              		.loc 1 1963 7 is_stmt 0 view .LVU421
 1296 009c 0F23     		movs	r3, #15
 1297 009e 0193     		str	r3, [sp, #4]
1964:src/keys.c    **** 			if (LocalRegs == 0)
 1298              		.loc 1 1964 3 is_stmt 1 view .LVU422
ARM GAS  /tmp/cc8lpfL1.s 			page 82


1964:src/keys.c    **** 			if (LocalRegs == 0)
 1299              		.loc 1 1964 6 is_stmt 0 view .LVU423
 1300 00a0 BCF1000F 		cmp	ip, #0
 1301 00a4 D6D0     		beq	.L123
1965:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1302              		.loc 1 1965 4 is_stmt 1 view .LVU424
1965:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1303              		.loc 1 1965 8 is_stmt 0 view .LVU425
 1304 00a6 174B     		ldr	r3, .L158+8
 1305 00a8 1B68     		ldr	r3, [r3]
1965:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1306              		.loc 1 1965 7 view .LVU426
 1307 00aa B3F9DE37 		ldrsh	r3, [r3, #2014]
 1308 00ae 7BB1     		cbz	r3, .L125
1968:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1309              		.loc 1 1968 5 is_stmt 1 view .LVU427
1968:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1310              		.loc 1 1968 11 is_stmt 0 view .LVU428
 1311 00b0 F0B2     		uxtb	r0, r6
 1312 00b2 FFF7FEFF 		bl	local_regs_rarg
 1313              	.LVL98:
1968:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1314              		.loc 1 1968 45 view .LVU429
 1315 00b6 0138     		subs	r0, r0, #1
1969:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1316              		.loc 1 1969 5 is_stmt 1 view .LVU430
1969:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1317              		.loc 1 1969 8 is_stmt 0 view .LVU431
 1318 00b8 0F28     		cmp	r0, #15
 1319 00ba 06DD     		ble	.L152
1970:src/keys.c    **** 			}
 1320              		.loc 1 1970 6 is_stmt 1 view .LVU432
1970:src/keys.c    **** 			}
 1321              		.loc 1 1970 10 is_stmt 0 view .LVU433
 1322 00bc 0F20     		movs	r0, #15
 1323 00be 0190     		str	r0, [sp, #4]
 1324 00c0 C9E7     		b	.L122
 1325              	.L155:
1975:src/keys.c    **** 	else {
 1326              		.loc 1 1975 3 is_stmt 1 view .LVU434
1975:src/keys.c    **** 	else {
 1327              		.loc 1 1975 65 is_stmt 0 view .LVU435
 1328 00c2 BCF1000F 		cmp	ip, #0
 1329 00c6 13D1     		bne	.L156
 1330 00c8 6320     		movs	r0, #99
 1331              	.LVL99:
 1332              	.L152:
1981:src/keys.c    **** 		return STATE_UNFINISHED;
 1333              		.loc 1 1981 5 view .LVU436
 1334 00ca 8442     		cmp	r4, r0
1979:src/keys.c    **** 	}
 1335              		.loc 1 1979 8 view .LVU437
 1336 00cc 0190     		str	r0, [sp, #4]
1981:src/keys.c    **** 		return STATE_UNFINISHED;
 1337              		.loc 1 1981 2 is_stmt 1 view .LVU438
1981:src/keys.c    **** 		return STATE_UNFINISHED;
 1338              		.loc 1 1981 5 is_stmt 0 view .LVU439
ARM GAS  /tmp/cc8lpfL1.s 			page 83


 1339 00ce C4DD     		ble	.L157
 1340              	.L125:
1966:src/keys.c    **** 			if (is_reg) {
 1341              		.loc 1 1966 12 view .LVU440
 1342 00d0 3320     		movs	r0, #51
1995:src/keys.c    **** 
 1343              		.loc 1 1995 1 view .LVU441
 1344 00d2 03B0     		add	sp, sp, #12
 1345              		.cfi_remember_state
 1346              		.cfi_def_cfa_offset 20
 1347              		@ sp needed
 1348 00d4 F0BD     		pop	{r4, r5, r6, r7, pc}
 1349              	.LVL100:
 1350              	.L120:
 1351              		.cfi_restore_state
1974:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
 1352              		.loc 1 1974 7 is_stmt 1 view .LVU442
1977:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1353              		.loc 1 1977 3 view .LVU443
1977:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1354              		.loc 1 1977 9 is_stmt 0 view .LVU444
 1355 00d6 1079     		ldrb	r0, [r2, #4]	@ zero_extendqisi2
1977:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1356              		.loc 1 1977 7 view .LVU445
 1357 00d8 0190     		str	r0, [sp, #4]
1978:src/keys.c    **** 			lim = RARG_IND - 1;
 1358              		.loc 1 1978 3 is_stmt 1 view .LVU446
1978:src/keys.c    **** 			lim = RARG_IND - 1;
 1359              		.loc 1 1978 6 is_stmt 0 view .LVU447
 1360 00da 7F28     		cmp	r0, #127
 1361 00dc BBDD     		ble	.L122
1978:src/keys.c    **** 			lim = RARG_IND - 1;
 1362              		.loc 1 1978 23 discriminator 1 view .LVU448
 1363 00de FB07     		lsls	r3, r7, #31
 1364 00e0 B9D5     		bpl	.L122
1979:src/keys.c    **** 	}
 1365              		.loc 1 1979 4 is_stmt 1 view .LVU449
1979:src/keys.c    **** 	}
 1366              		.loc 1 1979 8 is_stmt 0 view .LVU450
 1367 00e2 7F20     		movs	r0, #127
 1368 00e4 F1E7     		b	.L152
 1369              	.LVL101:
 1370              	.L154:
1954:src/keys.c    **** #else
 1371              		.loc 1 1954 93 discriminator 4 view .LVU451
 1372 00e6 0438     		subs	r0, r0, #4
 1373              	.LVL102:
1954:src/keys.c    **** #else
 1374              		.loc 1 1954 68 discriminator 4 view .LVU452
 1375 00e8 0128     		cmp	r0, #1
1954:src/keys.c    **** #else
 1376              		.loc 1 1954 130 discriminator 4 view .LVU453
 1377 00ea 98BF     		it	ls
 1378 00ec 8D26     		movls	r6, #141
 1379 00ee 95E7     		b	.L114
 1380              	.LVL103:
 1381              	.L156:
ARM GAS  /tmp/cc8lpfL1.s 			page 84


1975:src/keys.c    **** 	else {
 1382              		.loc 1 1975 26 discriminator 1 view .LVU454
 1383 00f0 F0B2     		uxtb	r0, r6
 1384 00f2 FFF7FEFF 		bl	global_regs_rarg
 1385              	.LVL104:
1975:src/keys.c    **** 	else {
 1386              		.loc 1 1975 61 discriminator 1 view .LVU455
 1387 00f6 0138     		subs	r0, r0, #1
 1388 00f8 E7E7     		b	.L152
 1389              	.L159:
 1390 00fa 00BF     		.align	2
 1391              	.L158:
 1392 00fc 00000000 		.word	StateWhileOn
 1393 0100 00000000 		.word	argcmds
 1394 0104 00000000 		.word	main_ram
 1395 0108 CDCCCCCC 		.word	-858993459
 1396              		.cfi_endproc
 1397              	.LFE36:
 1399              		.section	.text.process_arg_shuffle,"ax",%progbits
 1400              		.align	1
 1401              		.p2align 2,,3
 1402              		.syntax unified
 1403              		.thumb
 1404              		.thumb_func
 1405              		.fpu fpv4-sp-d16
 1407              	process_arg_shuffle:
 1408              	.LVL105:
 1409              	.LFB41:
2062:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1410              		.loc 1 2062 39 is_stmt 1 view -0
 1411              		.cfi_startproc
 1412              		@ args = 0, pretend = 0, frame = 0
 1413              		@ frame_needed = 0, uses_anonymous_args = 0
 1414              		@ link register save eliminated.
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1415              		.loc 1 2063 2 view .LVU457
2062:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1416              		.loc 1 2062 39 is_stmt 0 view .LVU458
 1417 0000 10B4     		push	{r4}
 1418              		.cfi_def_cfa_offset 4
 1419              		.cfi_offset 4, -4
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1420              		.loc 1 2063 31 view .LVU459
 1421 0002 0A4A     		ldr	r2, .L163
 1422 0004 D37A     		ldrb	r3, [r2, #11]	@ zero_extendqisi2
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1423              		.loc 1 2063 16 view .LVU460
 1424 0006 1189     		ldrh	r1, [r2, #8]
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1425              		.loc 1 2063 43 view .LVU461
 1426 0008 5C00     		lsls	r4, r3, #1
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1427              		.loc 1 2063 21 view .LVU462
 1428 000a A040     		lsls	r0, r0, r4
 1429              	.LVL106:
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1430              		.loc 1 2063 40 view .LVU463
ARM GAS  /tmp/cc8lpfL1.s 			page 85


 1431 000c 0133     		adds	r3, r3, #1
 1432 000e DBB2     		uxtb	r3, r3
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1433              		.loc 1 2063 16 view .LVU464
 1434 0010 0844     		add	r0, r0, r1
 1435 0012 80B2     		uxth	r0, r0
2064:src/keys.c    **** 		return STATE_UNFINISHED;
 1436              		.loc 1 2064 5 view .LVU465
 1437 0014 032B     		cmp	r3, #3
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1438              		.loc 1 2063 40 view .LVU466
 1439 0016 D372     		strb	r3, [r2, #11]
2063:src/keys.c    **** 	if (State2.numdigit < 4)
 1440              		.loc 1 2063 16 view .LVU467
 1441 0018 1081     		strh	r0, [r2, #8]	@ movhi
2064:src/keys.c    **** 		return STATE_UNFINISHED;
 1442              		.loc 1 2064 2 is_stmt 1 view .LVU468
2064:src/keys.c    **** 		return STATE_UNFINISHED;
 1443              		.loc 1 2064 5 is_stmt 0 view .LVU469
 1444 001a 03D9     		bls	.L161
2066:src/keys.c    **** }
 1445              		.loc 1 2066 2 is_stmt 1 view .LVU470
2067:src/keys.c    **** 
 1446              		.loc 1 2067 1 is_stmt 0 view .LVU471
 1447 001c 5DF8044B 		ldr	r4, [sp], #4
 1448              		.cfi_remember_state
 1449              		.cfi_restore 4
 1450              		.cfi_def_cfa_offset 0
2066:src/keys.c    **** }
 1451              		.loc 1 2066 9 view .LVU472
 1452 0020 FFF7FEBF 		b	arg_eval
 1453              	.LVL107:
 1454              	.L161:
 1455              		.cfi_restore_state
2067:src/keys.c    **** 
 1456              		.loc 1 2067 1 view .LVU473
 1457 0024 3320     		movs	r0, #51
 1458 0026 5DF8044B 		ldr	r4, [sp], #4
 1459              		.cfi_restore 4
 1460              		.cfi_def_cfa_offset 0
 1461 002a 7047     		bx	lr
 1462              	.L164:
 1463              		.align	2
 1464              	.L163:
 1465 002c 00000000 		.word	StateWhileOn
 1466              		.cfi_endproc
 1467              	.LFE41:
 1469              		.section	.text.process_h_shifted,"ax",%progbits
 1470              		.align	1
 1471              		.p2align 2,,3
 1472              		.syntax unified
 1473              		.thumb
 1474              		.thumb_func
 1475              		.fpu fpv4-sp-d16
 1477              	process_h_shifted:
 1478              	.LVL108:
 1479              	.LFB21:
ARM GAS  /tmp/cc8lpfL1.s 			page 86


1101:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1480              		.loc 1 1101 47 is_stmt 1 view -0
 1481              		.cfi_startproc
 1482              		@ args = 0, pretend = 0, frame = 0
 1483              		@ frame_needed = 0, uses_anonymous_args = 0
1104:src/keys.c    **** 		// Row 1
 1484              		.loc 1 1104 2 view .LVU475
1155:src/keys.c    **** 	int op = op_map[lc];
 1485              		.loc 1 1155 2 view .LVU476
 1486              	.LBB337:
 1487              	.LBB338:
 158:src/keys.c    **** }
 1488              		.loc 1 158 23 is_stmt 0 view .LVU477
 1489 0000 314A     		ldr	r2, .L196
 1490              	.LBE338:
 1491              	.LBE337:
1156:src/keys.c    **** 	reset_shift();
 1492              		.loc 1 1156 17 view .LVU478
 1493 0002 324B     		ldr	r3, .L196+4
 1494              	.LBB341:
 1495              	.LBB339:
 158:src/keys.c    **** }
 1496              		.loc 1 158 23 view .LVU479
 1497 0004 125C     		ldrb	r2, [r2, r0]	@ zero_extendqisi2
 1498              	.LBE339:
 1499              	.LBE341:
1101:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1500              		.loc 1 1101 47 view .LVU480
 1501 0006 70B5     		push	{r4, r5, r6, lr}
 1502              		.cfi_def_cfa_offset 16
 1503              		.cfi_offset 4, -16
 1504              		.cfi_offset 5, -12
 1505              		.cfi_offset 6, -8
 1506              		.cfi_offset 14, -4
1101:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1507              		.loc 1 1101 47 view .LVU481
 1508 0008 0446     		mov	r4, r0
 1509              	.LVL109:
 1510              	.LBB342:
 1511              	.LBI337:
 146:src/keys.c    **** {
 1512              		.loc 1 146 12 is_stmt 1 view .LVU482
 1513              	.LBB340:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 1514              		.loc 1 148 2 view .LVU483
 158:src/keys.c    **** }
 1515              		.loc 1 158 2 view .LVU484
 158:src/keys.c    **** }
 1516              		.loc 1 158 2 is_stmt 0 view .LVU485
 1517              	.LBE340:
 1518              	.LBE342:
1156:src/keys.c    **** 	reset_shift();
 1519              		.loc 1 1156 2 is_stmt 1 view .LVU486
 1520              	.LBB343:
 1521              	.LBB344:
 1522              	.LBB345:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
ARM GAS  /tmp/cc8lpfL1.s 			page 87


 1523              		.loc 1 106 16 is_stmt 0 view .LVU487
 1524 000a 314E     		ldr	r6, .L196+8
 1525              	.LBE345:
 1526              	.LBE344:
 1527              	.LBE343:
1156:src/keys.c    **** 	reset_shift();
 1528              		.loc 1 1156 17 view .LVU488
 1529 000c 33F81250 		ldrh	r5, [r3, r2, lsl #1]
 1530              	.LVL110:
1157:src/keys.c    **** 
 1531              		.loc 1 1157 2 is_stmt 1 view .LVU489
 1532              	.LBB352:
 1533              	.LBI343:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 1534              		.loc 1 114 13 view .LVU490
 1535              	.LBE352:
 115:src/keys.c    **** }
 1536              		.loc 1 115 2 view .LVU491
 1537              	.LBB353:
 1538              	.LBB350:
 1539              	.LBI344:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 1540              		.loc 1 104 20 view .LVU492
 1541              	.LBB348:
 105:src/keys.c    **** 	State2.shifts = shift;
 1542              		.loc 1 105 2 view .LVU493
 1543              	.LBB346:
 1544              	.LBI346:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 1545              		.loc 1 96 13 view .LVU494
 1546              	.LBB347:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1547              		.loc 1 97 2 view .LVU495
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1548              		.loc 1 97 18 is_stmt 0 view .LVU496
 1549 0010 FFF7FEFF 		bl	shift_down
 1550              	.LVL111:
  98:src/keys.c    **** }
 1551              		.loc 1 98 2 is_stmt 1 view .LVU497
 1552              	.LBE347:
 1553              	.LBE346:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1554              		.loc 1 106 2 view .LVU498
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1555              		.loc 1 106 16 is_stmt 0 view .LVU499
 1556 0014 0023     		movs	r3, #0
 1557              	.LBE348:
 1558              	.LBE350:
 1559              	.LBE353:
1160:src/keys.c    **** 	case K62:
 1560              		.loc 1 1160 2 view .LVU500
 1561 0016 262C     		cmp	r4, #38
 1562              	.LBB354:
 1563              	.LBB351:
 1564              	.LBB349:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1565              		.loc 1 106 16 view .LVU501
ARM GAS  /tmp/cc8lpfL1.s 			page 88


 1566 0018 3374     		strb	r3, [r6, #16]
 108:src/keys.c    **** }
 1567              		.loc 1 108 2 is_stmt 1 view .LVU502
 1568              	.LVL112:
 108:src/keys.c    **** }
 1569              		.loc 1 108 2 is_stmt 0 view .LVU503
 1570              	.LBE349:
 1571              	.LBE351:
 1572              	.LBE354:
1160:src/keys.c    **** 	case K62:
 1573              		.loc 1 1160 2 is_stmt 1 view .LVU504
 1574 001a 27D0     		beq	.L166
 1575 001c 272C     		cmp	r4, #39
 1576 001e 19D1     		bne	.L168
1173:src/keys.c    **** 			return STATE_UNFINISHED;
 1577              		.loc 1 1173 3 view .LVU505
1173:src/keys.c    **** 			return STATE_UNFINISHED;
 1578              		.loc 1 1173 7 is_stmt 0 view .LVU506
 1579 0020 FFF7FEFF 		bl	is_bad_cmdline
 1580              	.LVL113:
1173:src/keys.c    **** 			return STATE_UNFINISHED;
 1581              		.loc 1 1173 6 view .LVU507
 1582 0024 00BB     		cbnz	r0, .L178
1175:src/keys.c    **** 		process_cmdline_set_lift();
 1583              		.loc 1 1175 3 is_stmt 1 view .LVU508
1175:src/keys.c    **** 		process_cmdline_set_lift();
 1584              		.loc 1 1175 30 is_stmt 0 view .LVU509
 1585 0026 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 1586 0028 C3F38012 		ubfx	r2, r3, #6, #1
1175:src/keys.c    **** 		process_cmdline_set_lift();
 1587              		.loc 1 1175 22 view .LVU510
 1588 002c C2F10102 		rsb	r2, r2, #1
1175:src/keys.c    **** 		process_cmdline_set_lift();
 1589              		.loc 1 1175 18 view .LVU511
 1590 0030 62F38613 		bfi	r3, r2, #6, #1
 1591 0034 B375     		strb	r3, [r6, #22]
1176:src/keys.c    **** 		update_program_bounds(1);
 1592              		.loc 1 1176 3 is_stmt 1 view .LVU512
 1593 0036 FFF7FEFF 		bl	process_cmdline_set_lift
 1594              	.LVL114:
1177:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
 1595              		.loc 1 1177 3 view .LVU513
 1596 003a 0120     		movs	r0, #1
 1597 003c FFF7FEFF 		bl	update_program_bounds
 1598              	.LVL115:
1178:src/keys.c    **** 			set_pc(0);
 1599              		.loc 1 1178 3 view .LVU514
1178:src/keys.c    **** 			set_pc(0);
 1600              		.loc 1 1178 7 is_stmt 0 view .LVU515
 1601 0040 B07D     		ldrb	r0, [r6, #22]	@ zero_extendqisi2
1178:src/keys.c    **** 			set_pc(0);
 1602              		.loc 1 1178 6 view .LVU516
 1603 0042 10F04000 		ands	r0, r0, #64
 1604 0046 05D1     		bne	.L168
1178:src/keys.c    **** 			set_pc(0);
 1605              		.loc 1 1178 27 discriminator 1 view .LVU517
 1606 0048 224B     		ldr	r3, .L196+12
ARM GAS  /tmp/cc8lpfL1.s 			page 89


 1607 004a 1B68     		ldr	r3, [r3]
1178:src/keys.c    **** 			set_pc(0);
 1608              		.loc 1 1178 24 discriminator 1 view .LVU518
 1609 004c B3F8E027 		ldrh	r2, [r3, #2016]
 1610 0050 012A     		cmp	r2, #1
 1611 0052 32D0     		beq	.L192
 1612              	.L168:
1186:src/keys.c    **** 		if (op & _RARG) {
 1613              		.loc 1 1186 2 is_stmt 1 view .LVU519
1186:src/keys.c    **** 		if (op & _RARG) {
 1614              		.loc 1 1186 5 is_stmt 0 view .LVU520
 1615 0054 332D     		cmp	r5, #51
 1616 0056 07D0     		beq	.L178
 1617              	.LVL116:
1187:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1618              		.loc 1 1187 3 is_stmt 1 view .LVU521
1187:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1619              		.loc 1 1187 6 is_stmt 0 view .LVU522
 1620 0058 2804     		lsls	r0, r5, #16
 1621 005a 14D5     		bpl	.L193
 1622              	.L176:
1188:src/keys.c    **** 			op = STATE_UNFINISHED;
 1623              		.loc 1 1188 4 is_stmt 1 view .LVU523
 1624              	.LVL117:
 1625              	.LBB355:
 1626              	.LBI355:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 1627              		.loc 1 552 13 view .LVU524
 1628              	.LBB356:
 553:src/keys.c    **** 		return;
 1629              		.loc 1 553 2 view .LVU525
 553:src/keys.c    **** 		return;
 1630              		.loc 1 553 6 is_stmt 0 view .LVU526
 1631 005c FFF7FEFF 		bl	is_bad_cmdline
 1632              	.LVL118:
 553:src/keys.c    **** 		return;
 1633              		.loc 1 553 5 view .LVU527
 1634 0060 10B9     		cbnz	r0, .L178
 1635 0062 E8B2     		uxtb	r0, r5
 1636 0064 FFF7FEFF 		bl	init_arg.part.0
 1637              	.LVL119:
 1638              	.L178:
 553:src/keys.c    **** 		return;
 1639              		.loc 1 553 5 view .LVU528
 1640              	.LBE356:
 1641              	.LBE355:
1192:src/keys.c    **** #undef _RARG
 1642              		.loc 1 1192 2 is_stmt 1 view .LVU529
1101:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1643              		.loc 1 1101 47 is_stmt 0 view .LVU530
 1644 0068 3320     		movs	r0, #51
1195:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 1645              		.loc 1 1195 1 view .LVU531
 1646 006a 70BD     		pop	{r4, r5, r6, pc}
 1647              	.LVL120:
 1648              	.L166:
1162:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
ARM GAS  /tmp/cc8lpfL1.s 			page 90


 1649              		.loc 1 1162 3 is_stmt 1 view .LVU532
1162:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 1650              		.loc 1 1162 7 is_stmt 0 view .LVU533
 1651 006c 194B     		ldr	r3, .L196+12
 1652 006e 1B68     		ldr	r3, [r3]
 1653 0070 93F8E827 		ldrb	r2, [r3, #2024]	@ zero_extendqisi2
1162:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 1654              		.loc 1 1162 6 view .LVU534
 1655 0074 D607     		lsls	r6, r2, #31
 1656 0076 0FD4     		bmi	.L194
1168:src/keys.c    **** #endif
 1657              		.loc 1 1168 4 is_stmt 1 view .LVU535
1168:src/keys.c    **** #endif
 1658              		.loc 1 1168 8 is_stmt 0 view .LVU536
 1659 0078 93F8E737 		ldrb	r3, [r3, #2023]	@ zero_extendqisi2
1168:src/keys.c    **** #endif
 1660              		.loc 1 1168 7 view .LVU537
 1661 007c 9C06     		lsls	r4, r3, #26
 1662 007e 14D5     		bpl	.L195
 1663 0080 40F24F10 		movw	r0, #335
 1664              	.LVL121:
1195:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 1665              		.loc 1 1195 1 view .LVU538
 1666 0084 70BD     		pop	{r4, r5, r6, pc}
 1667              	.L193:
 1668              	.LVL122:
1192:src/keys.c    **** #undef _RARG
 1669              		.loc 1 1192 2 is_stmt 1 view .LVU539
1192:src/keys.c    **** #undef _RARG
 1670              		.loc 1 1192 9 is_stmt 0 view .LVU540
 1671 0086 134B     		ldr	r3, .L196+12
 1672 0088 1B68     		ldr	r3, [r3]
 1673 008a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1192:src/keys.c    **** #undef _RARG
 1674              		.loc 1 1192 57 view .LVU541
 1675 008e D907     		lsls	r1, r3, #31
 1676 0090 10D4     		bmi	.L177
 1677              	.LVL123:
 1678              	.L180:
1192:src/keys.c    **** #undef _RARG
 1679              		.loc 1 1192 57 view .LVU542
 1680 0092 25F48040 		bic	r0, r5, #16384
1195:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 1681              		.loc 1 1195 1 view .LVU543
 1682 0096 70BD     		pop	{r4, r5, r6, pc}
 1683              	.LVL124:
 1684              	.L194:
1163:src/keys.c    **** 		else
 1685              		.loc 1 1163 4 is_stmt 1 view .LVU544
1163:src/keys.c    **** 		else
 1686              		.loc 1 1163 57 is_stmt 0 view .LVU545
 1687 0098 93F9E737 		ldrsb	r3, [r3, #2023]
 1688 009c 002B     		cmp	r3, #0
 1689 009e 40F25315 		movw	r5, #339
 1690              	.LVL125:
1163:src/keys.c    **** 		else
 1691              		.loc 1 1163 57 view .LVU546
ARM GAS  /tmp/cc8lpfL1.s 			page 91


 1692 00a2 A8BF     		it	ge
 1693 00a4 4FF4AA75 		movge	r5, #340
 1694 00a8 F3E7     		b	.L180
 1695              	.LVL126:
 1696              	.L195:
1186:src/keys.c    **** 		if (op & _RARG) {
 1697              		.loc 1 1186 2 is_stmt 1 view .LVU547
1186:src/keys.c    **** 		if (op & _RARG) {
 1698              		.loc 1 1186 5 is_stmt 0 view .LVU548
 1699 00aa 332D     		cmp	r5, #51
 1700 00ac DCD0     		beq	.L178
 1701              	.LVL127:
1187:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1702              		.loc 1 1187 3 is_stmt 1 view .LVU549
1187:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1703              		.loc 1 1187 6 is_stmt 0 view .LVU550
 1704 00ae 2B04     		lsls	r3, r5, #16
 1705 00b0 D4D4     		bmi	.L176
 1706 00b2 EEE7     		b	.L180
 1707              	.LVL128:
 1708              	.L177:
1192:src/keys.c    **** #undef _RARG
 1709              		.loc 1 1192 21 view .LVU551
 1710 00b4 6A04     		lsls	r2, r5, #17
 1711 00b6 D7D4     		bmi	.L178
 1712 00b8 EBE7     		b	.L180
 1713              	.L192:
1178:src/keys.c    **** 			set_pc(0);
 1714              		.loc 1 1178 43 discriminator 2 view .LVU552
 1715 00ba B3F8EE37 		ldrh	r3, [r3, #2030]
 1716 00be 012B     		cmp	r3, #1
 1717 00c0 C8D1     		bne	.L168
1179:src/keys.c    **** 		break;
 1718              		.loc 1 1179 4 is_stmt 1 view .LVU553
 1719 00c2 FFF7FEFF 		bl	set_pc
 1720              	.LVL129:
 1721 00c6 C5E7     		b	.L168
 1722              	.L197:
 1723              		.align	2
 1724              	.L196:
 1725 00c8 00000000 		.word	.LANCHOR1
 1726 00cc 00000000 		.word	.LANCHOR0
 1727 00d0 00000000 		.word	StateWhileOn
 1728 00d4 00000000 		.word	main_ram
 1729              		.cfi_endproc
 1730              	.LFE21:
 1732              		.section	.text.intltr,"ax",%progbits
 1733              		.align	1
 1734              		.p2align 2,,3
 1735              		.syntax unified
 1736              		.thumb
 1737              		.thumb_func
 1738              		.fpu fpv4-sp-d16
 1740              	intltr:
 1741              	.LVL130:
 1742              	.LFB18:
 761:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
ARM GAS  /tmp/cc8lpfL1.s 			page 92


 1743              		.loc 1 761 26 view -0
 1744              		.cfi_startproc
 1745              		@ args = 0, pretend = 0, frame = 0
 1746              		@ frame_needed = 0, uses_anonymous_args = 0
 762:src/keys.c    **** }
 1747              		.loc 1 762 2 view .LVU555
 762:src/keys.c    **** }
 1748              		.loc 1 762 10 is_stmt 0 view .LVU556
 1749 0000 0B4B     		ldr	r3, .L207
 1750 0002 1B68     		ldr	r3, [r3]
 1751 0004 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 762:src/keys.c    **** }
 1752              		.loc 1 762 22 view .LVU557
 1753 0008 13F00103 		ands	r3, r3, #1
 1754 000c 05D0     		beq	.L200
 762:src/keys.c    **** }
 1755              		.loc 1 762 26 discriminator 1 view .LVU558
 1756 000e 094B     		ldr	r3, .L207+4
 1757 0010 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 762:src/keys.c    **** }
 1758              		.loc 1 762 22 discriminator 1 view .LVU559
 1759 0012 5B06     		lsls	r3, r3, #25
 1760 0014 03D4     		bmi	.L206
 762:src/keys.c    **** }
 1761              		.loc 1 762 22 view .LVU560
 1762 0016 0120     		movs	r0, #1
 1763              	.LVL131:
 763:src/keys.c    **** 
 1764              		.loc 1 763 1 view .LVU561
 1765 0018 7047     		bx	lr
 1766              	.LVL132:
 1767              	.L200:
 762:src/keys.c    **** }
 1768              		.loc 1 762 22 view .LVU562
 1769 001a 1846     		mov	r0, r3
 1770              	.LVL133:
 762:src/keys.c    **** }
 1771              		.loc 1 762 22 view .LVU563
 1772 001c 7047     		bx	lr
 1773              	.LVL134:
 1774              	.L206:
 761:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1775              		.loc 1 761 26 view .LVU564
 1776 001e 10B5     		push	{r4, lr}
 1777              		.cfi_def_cfa_offset 8
 1778              		.cfi_offset 4, -8
 1779              		.cfi_offset 14, -4
 1780 0020 0446     		mov	r4, r0
 1781              	.LVL135:
 1782              	.LBB359:
 1783              	.LBI359:
 761:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1784              		.loc 1 761 12 is_stmt 1 view .LVU565
 1785              	.LBB360:
 762:src/keys.c    **** }
 1786              		.loc 1 762 52 is_stmt 0 view .LVU566
 1787 0022 FFF7FEFF 		bl	int_base
ARM GAS  /tmp/cc8lpfL1.s 			page 93


 1788              	.LVL136:
 762:src/keys.c    **** }
 1789              		.loc 1 762 43 view .LVU567
 1790 0026 8442     		cmp	r4, r0
 1791 0028 ACBF     		ite	ge
 1792 002a 0020     		movge	r0, #0
 1793 002c 0120     		movlt	r0, #1
 1794              	.LBE360:
 1795              	.LBE359:
 763:src/keys.c    **** 
 1796              		.loc 1 763 1 view .LVU568
 1797 002e 10BD     		pop	{r4, pc}
 1798              	.LVL137:
 1799              	.L208:
 763:src/keys.c    **** 
 1800              		.loc 1 763 1 view .LVU569
 1801              		.align	2
 1802              	.L207:
 1803 0030 00000000 		.word	main_ram
 1804 0034 00000000 		.word	StateWhileOn
 1805              		.cfi_endproc
 1806              	.LFE18:
 1808              		.section	.text.process_normal,"ax",%progbits
 1809              		.align	1
 1810              		.p2align 2,,3
 1811              		.syntax unified
 1812              		.thumb
 1813              		.thumb_func
 1814              		.fpu fpv4-sp-d16
 1816              	process_normal:
 1817              	.LVL138:
 1818              	.LFB19:
 769:src/keys.c    **** 	static const unsigned short int op_map[] = {
 1819              		.loc 1 769 1 is_stmt 1 view -0
 1820              		.cfi_startproc
 1821              		@ args = 0, pretend = 0, frame = 0
 1822              		@ frame_needed = 0, uses_anonymous_args = 0
 770:src/keys.c    **** 		// Row 1
 1823              		.loc 1 770 2 view .LVU571
 817:src/keys.c    **** 	int op = op_map[lc];
 1824              		.loc 1 817 2 view .LVU572
 1825              	.LBB361:
 1826              	.LBI361:
 146:src/keys.c    **** {
 1827              		.loc 1 146 12 view .LVU573
 1828              	.LBB362:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 1829              		.loc 1 148 2 view .LVU574
 158:src/keys.c    **** }
 1830              		.loc 1 158 2 view .LVU575
 158:src/keys.c    **** }
 1831              		.loc 1 158 2 is_stmt 0 view .LVU576
 1832              	.LBE362:
 1833              	.LBE361:
 818:src/keys.c    **** 	
 1834              		.loc 1 818 2 is_stmt 1 view .LVU577
 823:src/keys.c    **** 	  switch (c) {
ARM GAS  /tmp/cc8lpfL1.s 			page 94


 1835              		.loc 1 823 6 is_stmt 0 view .LVU578
 1836 0000 984B     		ldr	r3, .L240
 1837              	.LBB365:
 1838              	.LBB363:
 158:src/keys.c    **** }
 1839              		.loc 1 158 23 view .LVU579
 1840 0002 994A     		ldr	r2, .L240+4
 1841              	.LBE363:
 1842              	.LBE365:
 823:src/keys.c    **** 	  switch (c) {
 1843              		.loc 1 823 6 view .LVU580
 1844 0004 1B68     		ldr	r3, [r3]
 1845              	.LBB366:
 1846              	.LBB364:
 158:src/keys.c    **** }
 1847              		.loc 1 158 23 view .LVU581
 1848 0006 115C     		ldrb	r1, [r2, r0]	@ zero_extendqisi2
 1849              	.LBE364:
 1850              	.LBE366:
 818:src/keys.c    **** 	
 1851              		.loc 1 818 17 view .LVU582
 1852 0008 984A     		ldr	r2, .L240+8
 823:src/keys.c    **** 	  switch (c) {
 1853              		.loc 1 823 6 view .LVU583
 1854 000a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 769:src/keys.c    **** 	static const unsigned short int op_map[] = {
 1855              		.loc 1 769 1 view .LVU584
 1856 000e 10B5     		push	{r4, lr}
 1857              		.cfi_def_cfa_offset 8
 1858              		.cfi_offset 4, -8
 1859              		.cfi_offset 14, -4
 818:src/keys.c    **** 	
 1860              		.loc 1 818 17 view .LVU585
 1861 0010 32F81140 		ldrh	r4, [r2, r1, lsl #1]
 823:src/keys.c    **** 	  switch (c) {
 1862              		.loc 1 823 5 view .LVU586
 1863 0014 DB07     		lsls	r3, r3, #31
 818:src/keys.c    **** 	
 1864              		.loc 1 818 6 view .LVU587
 1865 0016 2246     		mov	r2, r4
 1866              	.LVL139:
 822:src/keys.c    **** 	if (UState.intm) {
 1867              		.loc 1 822 2 is_stmt 1 view .LVU588
 823:src/keys.c    **** 	  switch (c) {
 1868              		.loc 1 823 2 view .LVU589
 823:src/keys.c    **** 	  switch (c) {
 1869              		.loc 1 823 5 is_stmt 0 view .LVU590
 1870 0018 42D4     		bmi	.L236
 854:src/keys.c    **** 	  }
 1871              		.loc 1 854 12 is_stmt 1 view .LVU591
 859:src/keys.c    **** #ifdef DM42
 1872              		.loc 1 859 2 view .LVU592
 1873 001a 2D28     		cmp	r0, #45
 1874 001c 3ED8     		bhi	.L209
 1875 001e DFE810F0 		tbh	[pc, r0, lsl #1]
 1876              	.L228:
 1877 0022 0801     		.2byte	(.L224-.L228)/2
ARM GAS  /tmp/cc8lpfL1.s 			page 95


 1878 0024 0E01     		.2byte	(.L225-.L228)/2
 1879 0026 3D00     		.2byte	(.L209-.L228)/2
 1880 0028 CF00     		.2byte	(.L223-.L228)/2
 1881 002a 3D00     		.2byte	(.L209-.L228)/2
 1882 002c 3D00     		.2byte	(.L209-.L228)/2
 1883 002e 3400     		.2byte	(.L218-.L228)/2
 1884 0030 3400     		.2byte	(.L218-.L228)/2
 1885 0032 3D00     		.2byte	(.L209-.L228)/2
 1886 0034 3D00     		.2byte	(.L209-.L228)/2
 1887 0036 3D00     		.2byte	(.L209-.L228)/2
 1888 0038 3D00     		.2byte	(.L209-.L228)/2
 1889 003a 3D00     		.2byte	(.L209-.L228)/2
 1890 003c 3D00     		.2byte	(.L209-.L228)/2
 1891 003e 3D00     		.2byte	(.L209-.L228)/2
 1892 0040 3D00     		.2byte	(.L209-.L228)/2
 1893 0042 E900     		.2byte	(.L222-.L228)/2
 1894 0044 3D00     		.2byte	(.L209-.L228)/2
 1895 0046 3400     		.2byte	(.L218-.L228)/2
 1896 0048 3D00     		.2byte	(.L209-.L228)/2
 1897 004a 3D00     		.2byte	(.L209-.L228)/2
 1898 004c 3D00     		.2byte	(.L209-.L228)/2
 1899 004e 3D00     		.2byte	(.L209-.L228)/2
 1900 0050 3D00     		.2byte	(.L209-.L228)/2
 1901 0052 3D00     		.2byte	(.L209-.L228)/2
 1902 0054 3D00     		.2byte	(.L209-.L228)/2
 1903 0056 3D00     		.2byte	(.L209-.L228)/2
 1904 0058 3D00     		.2byte	(.L209-.L228)/2
 1905 005a 3D00     		.2byte	(.L209-.L228)/2
 1906 005c 3D00     		.2byte	(.L209-.L228)/2
 1907 005e 3D00     		.2byte	(.L209-.L228)/2
 1908 0060 3D00     		.2byte	(.L209-.L228)/2
 1909 0062 3D00     		.2byte	(.L209-.L228)/2
 1910 0064 3D00     		.2byte	(.L209-.L228)/2
 1911 0066 3D00     		.2byte	(.L209-.L228)/2
 1912 0068 3D00     		.2byte	(.L209-.L228)/2
 1913 006a 3D00     		.2byte	(.L209-.L228)/2
 1914 006c 3D00     		.2byte	(.L209-.L228)/2
 1915 006e 3D00     		.2byte	(.L209-.L228)/2
 1916 0070 3D00     		.2byte	(.L209-.L228)/2
 1917 0072 3D00     		.2byte	(.L209-.L228)/2
 1918 0074 3D00     		.2byte	(.L209-.L228)/2
 1919 0076 3D00     		.2byte	(.L209-.L228)/2
 1920 0078 3D00     		.2byte	(.L209-.L228)/2
 1921 007a F400     		.2byte	(.L221-.L228)/2
 1922 007c C700     		.2byte	(.L227-.L228)/2
 1923              		.p2align 1
 1924              	.L212:
 850:src/keys.c    **** 	    if (intltr(15)) {
 1925              		.loc 1 850 6 view .LVU593
 1926              	.LVL140:
 851:src/keys.c    **** 	      return op_int;
 1927              		.loc 1 851 6 view .LVU594
 851:src/keys.c    **** 	      return op_int;
 1928              		.loc 1 851 10 is_stmt 0 view .LVU595
 1929 007e 0F20     		movs	r0, #15
 1930              	.LVL141:
 851:src/keys.c    **** 	      return op_int;
ARM GAS  /tmp/cc8lpfL1.s 			page 96


 1931              		.loc 1 851 10 view .LVU596
 1932 0080 FFF7FEFF 		bl	intltr
 1933              	.LVL142:
 851:src/keys.c    **** 	      return op_int;
 1934              		.loc 1 851 9 view .LVU597
 1935 0084 0028     		cmp	r0, #0
 1936 0086 40F0EB80 		bne	.L237
 1937              	.LVL143:
 1938              	.L218:
 925:src/keys.c    **** 		break;
 1939              		.loc 1 925 3 is_stmt 1 view .LVU598
 1940              	.LBB367:
 1941              	.LBI367:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 1942              		.loc 1 552 13 view .LVU599
 1943              	.LBB368:
 553:src/keys.c    **** 		return;
 1944              		.loc 1 553 2 view .LVU600
 553:src/keys.c    **** 		return;
 1945              		.loc 1 553 6 is_stmt 0 view .LVU601
 1946 008a FFF7FEFF 		bl	is_bad_cmdline
 1947              	.LVL144:
 553:src/keys.c    **** 		return;
 1948              		.loc 1 553 5 view .LVU602
 1949 008e 0028     		cmp	r0, #0
 1950 0090 40F09380 		bne	.L235
 1951 0094 E0B2     		uxtb	r0, r4
 1952 0096 FFF7FEFF 		bl	init_arg.part.0
 1953              	.LVL145:
 1954              	.LBE368:
 1955              	.LBE367:
 931:src/keys.c    **** }
 1956              		.loc 1 931 9 view .LVU603
 1957 009a 3322     		movs	r2, #51
 1958              	.LVL146:
 1959              	.L209:
 932:src/keys.c    **** 
 1960              		.loc 1 932 1 view .LVU604
 1961 009c 1046     		mov	r0, r2
 1962 009e 10BD     		pop	{r4, pc}
 1963              	.LVL147:
 1964              	.L236:
 824:src/keys.c    **** 	  case K00:
 1965              		.loc 1 824 4 is_stmt 1 view .LVU605
 1966 00a0 1228     		cmp	r0, #18
 1967 00a2 29D8     		bhi	.L211
 1968 00a4 01A3     		adr	r3, .L213
 1969 00a6 53F820F0 		ldr	pc, [r3, r0, lsl #2]
 1970 00aa 00BF     		.p2align 2
 1971              	.L213:
 1972 00ac E9010000 		.word	.L216+1
 1973 00b0 DB010000 		.word	.L215+1
 1974 00b4 F9000000 		.word	.L211+1
 1975 00b8 CD010000 		.word	.L214+1
 1976 00bc F9000000 		.word	.L211+1
 1977 00c0 F9000000 		.word	.L211+1
 1978 00c4 F9000000 		.word	.L211+1
ARM GAS  /tmp/cc8lpfL1.s 			page 97


 1979 00c8 F9000000 		.word	.L211+1
 1980 00cc F9000000 		.word	.L211+1
 1981 00d0 F9000000 		.word	.L211+1
 1982 00d4 F9000000 		.word	.L211+1
 1983 00d8 F9000000 		.word	.L211+1
 1984 00dc F9000000 		.word	.L211+1
 1985 00e0 F9000000 		.word	.L211+1
 1986 00e4 F9000000 		.word	.L211+1
 1987 00e8 F9000000 		.word	.L211+1
 1988 00ec F9000000 		.word	.L211+1
 1989 00f0 F9000000 		.word	.L211+1
 1990 00f4 7F000000 		.word	.L212+1
 1991              		.p2align 1
 1992              	.L211:
 854:src/keys.c    **** 	  }
 1993              		.loc 1 854 12 view .LVU606
 859:src/keys.c    **** #ifdef DM42
 1994              		.loc 1 859 2 view .LVU607
 1995 00f8 C31E     		subs	r3, r0, #3
 1996 00fa 2A2B     		cmp	r3, #42
 1997 00fc CED8     		bhi	.L209
 1998 00fe 01A1     		adr	r1, .L220
 1999 0100 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 2000              		.p2align 2
 2001              	.L220:
 2002 0104 C1010000 		.word	.L223+1
 2003 0108 9D000000 		.word	.L209+1
 2004 010c 9D000000 		.word	.L209+1
 2005 0110 8B000000 		.word	.L218+1
 2006 0114 8B000000 		.word	.L218+1
 2007 0118 9D000000 		.word	.L209+1
 2008 011c 9D000000 		.word	.L209+1
 2009 0120 9D000000 		.word	.L209+1
 2010 0124 9D000000 		.word	.L209+1
 2011 0128 9D000000 		.word	.L209+1
 2012 012c 9D000000 		.word	.L209+1
 2013 0130 9D000000 		.word	.L209+1
 2014 0134 9D000000 		.word	.L209+1
 2015 0138 F5010000 		.word	.L222+1
 2016 013c 9D000000 		.word	.L209+1
 2017 0140 8B000000 		.word	.L218+1
 2018 0144 9D000000 		.word	.L209+1
 2019 0148 9D000000 		.word	.L209+1
 2020 014c 9D000000 		.word	.L209+1
 2021 0150 9D000000 		.word	.L209+1
 2022 0154 9D000000 		.word	.L209+1
 2023 0158 9D000000 		.word	.L209+1
 2024 015c 9D000000 		.word	.L209+1
 2025 0160 9D000000 		.word	.L209+1
 2026 0164 9D000000 		.word	.L209+1
 2027 0168 9D000000 		.word	.L209+1
 2028 016c 9D000000 		.word	.L209+1
 2029 0170 9D000000 		.word	.L209+1
 2030 0174 9D000000 		.word	.L209+1
 2031 0178 9D000000 		.word	.L209+1
 2032 017c 9D000000 		.word	.L209+1
 2033 0180 9D000000 		.word	.L209+1
ARM GAS  /tmp/cc8lpfL1.s 			page 98


 2034 0184 9D000000 		.word	.L209+1
 2035 0188 9D000000 		.word	.L209+1
 2036 018c 9D000000 		.word	.L209+1
 2037 0190 9D000000 		.word	.L209+1
 2038 0194 9D000000 		.word	.L209+1
 2039 0198 9D000000 		.word	.L209+1
 2040 019c 9D000000 		.word	.L209+1
 2041 01a0 9D000000 		.word	.L209+1
 2042 01a4 9D000000 		.word	.L209+1
 2043 01a8 0B020000 		.word	.L221+1
 2044 01ac BB010000 		.word	.L235+1
 2045              		.p2align 1
 2046              	.L227:
 907:src/keys.c    **** #else
 2047              		.loc 1 907 4 view .LVU608
 907:src/keys.c    **** #else
 2048              		.loc 1 907 17 is_stmt 0 view .LVU609
 2049 01b0 2F4A     		ldr	r2, .L240+12
 2050              	.LVL148:
 907:src/keys.c    **** #else
 2051              		.loc 1 907 17 view .LVU610
 2052 01b2 537D     		ldrb	r3, [r2, #21]	@ zero_extendqisi2
 2053 01b4 43F00203 		orr	r3, r3, #2
 2054 01b8 5375     		strb	r3, [r2, #21]
 2055              	.LVL149:
 2056              	.L235:
 913:src/keys.c    **** 
 2057              		.loc 1 913 4 is_stmt 1 view .LVU611
 931:src/keys.c    **** }
 2058              		.loc 1 931 9 is_stmt 0 view .LVU612
 2059 01ba 3322     		movs	r2, #51
 932:src/keys.c    **** 
 2060              		.loc 1 932 1 view .LVU613
 2061 01bc 1046     		mov	r0, r2
 2062 01be 10BD     		pop	{r4, pc}
 2063              	.LVL150:
 2064              	.L223:
 866:src/keys.c    **** #else
 2065              		.loc 1 866 3 is_stmt 1 view .LVU614
 866:src/keys.c    **** #else
 2066              		.loc 1 866 10 is_stmt 0 view .LVU615
 2067 01c0 2146     		mov	r1, r4
 2068 01c2 0220     		movs	r0, #2
 932:src/keys.c    **** 
 2069              		.loc 1 932 1 view .LVU616
 2070 01c4 BDE81040 		pop	{r4, lr}
 2071              		.cfi_remember_state
 2072              		.cfi_restore 14
 2073              		.cfi_restore 4
 2074              		.cfi_def_cfa_offset 0
 2075              	.LVL151:
 866:src/keys.c    **** #else
 2076              		.loc 1 866 10 view .LVU617
 2077 01c8 FFF7FEBF 		b	check_f_key
 2078              	.LVL152:
 2079              	.L214:
 2080              		.cfi_restore_state
ARM GAS  /tmp/cc8lpfL1.s 			page 99


 842:src/keys.c    **** 	    if (intltr(12)) {
 2081              		.loc 1 842 6 is_stmt 1 view .LVU618
 843:src/keys.c    **** 	      return op_int;
 2082              		.loc 1 843 6 view .LVU619
 843:src/keys.c    **** 	      return op_int;
 2083              		.loc 1 843 10 is_stmt 0 view .LVU620
 2084 01cc 0C20     		movs	r0, #12
 2085              	.LVL153:
 843:src/keys.c    **** 	      return op_int;
 2086              		.loc 1 843 10 view .LVU621
 2087 01ce FFF7FEFF 		bl	intltr
 2088              	.LVL154:
 843:src/keys.c    **** 	      return op_int;
 2089              		.loc 1 843 9 view .LVU622
 2090 01d2 0028     		cmp	r0, #0
 2091 01d4 F4D0     		beq	.L223
 844:src/keys.c    **** 	    }
 2092              		.loc 1 844 15 view .LVU623
 2093 01d6 1122     		movs	r2, #17
 2094 01d8 60E7     		b	.L209
 2095              	.LVL155:
 2096              	.L215:
 834:src/keys.c    **** 	    if (intltr(11)) {
 2097              		.loc 1 834 6 is_stmt 1 view .LVU624
 835:src/keys.c    **** 	      return op;
 2098              		.loc 1 835 6 view .LVU625
 835:src/keys.c    **** 	      return op;
 2099              		.loc 1 835 10 is_stmt 0 view .LVU626
 2100 01da 0B20     		movs	r0, #11
 2101              	.LVL156:
 835:src/keys.c    **** 	      return op;
 2102              		.loc 1 835 10 view .LVU627
 2103 01dc FFF7FEFF 		bl	intltr
 2104              	.LVL157:
 835:src/keys.c    **** 	      return op;
 2105              		.loc 1 835 9 view .LVU628
 2106 01e0 0028     		cmp	r0, #0
 2107 01e2 37D0     		beq	.L238
 836:src/keys.c    **** 	    }
 2108              		.loc 1 836 15 view .LVU629
 2109 01e4 1022     		movs	r2, #16
 2110 01e6 59E7     		b	.L209
 2111              	.LVL158:
 2112              	.L216:
 826:src/keys.c    **** 	    if (intltr(10)) {
 2113              		.loc 1 826 6 is_stmt 1 view .LVU630
 827:src/keys.c    **** 	      return op;
 2114              		.loc 1 827 6 view .LVU631
 827:src/keys.c    **** 	      return op;
 2115              		.loc 1 827 10 is_stmt 0 view .LVU632
 2116 01e8 0A20     		movs	r0, #10
 2117              	.LVL159:
 827:src/keys.c    **** 	      return op;
 2118              		.loc 1 827 10 view .LVU633
 2119 01ea FFF7FEFF 		bl	intltr
 2120              	.LVL160:
 827:src/keys.c    **** 	      return op;
ARM GAS  /tmp/cc8lpfL1.s 			page 100


 2121              		.loc 1 827 9 view .LVU634
 2122 01ee 60B3     		cbz	r0, .L239
 828:src/keys.c    **** 	    }
 2123              		.loc 1 828 15 view .LVU635
 2124 01f0 0F22     		movs	r2, #15
 2125 01f2 53E7     		b	.L209
 2126              	.LVL161:
 2127              	.L222:
 916:src/keys.c    **** 			return STATE_UNFINISHED;
 2128              		.loc 1 916 3 is_stmt 1 view .LVU636
 916:src/keys.c    **** 			return STATE_UNFINISHED;
 2129              		.loc 1 916 7 is_stmt 0 view .LVU637
 2130 01f4 1E4B     		ldr	r3, .L240+12
 2131 01f6 DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 2132              	.LVL162:
 916:src/keys.c    **** 			return STATE_UNFINISHED;
 2133              		.loc 1 916 6 view .LVU638
 2134 01f8 9106     		lsls	r1, r2, #26
 2135 01fa DED4     		bmi	.L235
 918:src/keys.c    **** 			return op;
 2136              		.loc 1 918 3 is_stmt 1 view .LVU639
 918:src/keys.c    **** 			return op;
 2137              		.loc 1 918 7 is_stmt 0 view .LVU640
 2138 01fc 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 920:src/keys.c    **** 
 2139              		.loc 1 920 10 view .LVU641
 2140 01fe 13F0400F 		tst	r3, #64
 2141 0202 14BF     		ite	ne
 2142 0204 2246     		movne	r2, r4
 2143 0206 3022     		moveq	r2, #48
 2144 0208 48E7     		b	.L209
 2145              	.LVL163:
 2146              	.L221:
 890:src/keys.c    **** 			return STATE_UNFINISHED;
 2147              		.loc 1 890 3 is_stmt 1 view .LVU642
 890:src/keys.c    **** 			return STATE_UNFINISHED;
 2148              		.loc 1 890 7 is_stmt 0 view .LVU643
 2149 020a FFF7FEFF 		bl	is_bad_cmdline
 2150              	.LVL164:
 890:src/keys.c    **** 			return STATE_UNFINISHED;
 2151              		.loc 1 890 6 view .LVU644
 2152 020e 0028     		cmp	r0, #0
 2153 0210 D3D1     		bne	.L235
 892:src/keys.c    **** 		State2.arrow = 1;
 2154              		.loc 1 892 3 is_stmt 1 view .LVU645
 2155 0212 FFF7FEFF 		bl	process_cmdline_set_lift
 2156              	.LVL165:
 893:src/keys.c    **** #ifdef DM42
 2157              		.loc 1 893 3 view .LVU646
 893:src/keys.c    **** #ifdef DM42
 2158              		.loc 1 893 16 is_stmt 0 view .LVU647
 2159 0216 164A     		ldr	r2, .L240+12
 2160 0218 537D     		ldrb	r3, [r2, #21]	@ zero_extendqisi2
 2161 021a 43F00403 		orr	r3, r3, #4
 2162 021e 5375     		strb	r3, [r2, #21]
 895:src/keys.c    **** 		display_current_menu ();
 2163              		.loc 1 895 3 is_stmt 1 view .LVU648
ARM GAS  /tmp/cc8lpfL1.s 			page 101


 2164 0220 0920     		movs	r0, #9
 2165 0222 FFF7FEFF 		bl	set_menu
 2166              	.LVL166:
 896:src/keys.c    **** 		lcd_refresh ();
 2167              		.loc 1 896 3 view .LVU649
 2168 0226 FFF7FEFF 		bl	display_current_menu
 2169              	.LVL167:
 897:src/keys.c    **** #else
 2170              		.loc 1 897 3 view .LVU650
 2171 022a 124B     		ldr	r3, .L240+16
 2172 022c 9847     		blx	r3
 2173              	.LVL168:
 901:src/keys.c    **** 
 2174              		.loc 1 901 3 view .LVU651
 931:src/keys.c    **** }
 2175              		.loc 1 931 9 is_stmt 0 view .LVU652
 2176 022e 3322     		movs	r2, #51
 901:src/keys.c    **** 
 2177              		.loc 1 901 3 view .LVU653
 2178 0230 34E7     		b	.L209
 2179              	.LVL169:
 2180              	.L224:
 862:src/keys.c    **** 	case K01:
 2181              		.loc 1 862 3 is_stmt 1 view .LVU654
 862:src/keys.c    **** 	case K01:
 2182              		.loc 1 862 10 is_stmt 0 view .LVU655
 2183 0232 2146     		mov	r1, r4
 2184 0234 0020     		movs	r0, #0
 2185              	.LVL170:
 932:src/keys.c    **** 
 2186              		.loc 1 932 1 view .LVU656
 2187 0236 BDE81040 		pop	{r4, lr}
 2188              		.cfi_remember_state
 2189              		.cfi_restore 14
 2190              		.cfi_restore 4
 2191              		.cfi_def_cfa_offset 0
 862:src/keys.c    **** 	case K01:
 2192              		.loc 1 862 10 view .LVU657
 2193 023a FFF7FEBF 		b	check_f_key
 2194              	.LVL171:
 2195              	.L225:
 2196              		.cfi_restore_state
 864:src/keys.c    **** 	case K03:
 2197              		.loc 1 864 3 is_stmt 1 view .LVU658
 864:src/keys.c    **** 	case K03:
 2198              		.loc 1 864 10 is_stmt 0 view .LVU659
 2199 023e 2146     		mov	r1, r4
 2200 0240 0120     		movs	r0, #1
 2201              	.LVL172:
 932:src/keys.c    **** 
 2202              		.loc 1 932 1 view .LVU660
 2203 0242 BDE81040 		pop	{r4, lr}
 2204              		.cfi_remember_state
 2205              		.cfi_restore 14
 2206              		.cfi_restore 4
 2207              		.cfi_def_cfa_offset 0
 864:src/keys.c    **** 	case K03:
ARM GAS  /tmp/cc8lpfL1.s 			page 102


 2208              		.loc 1 864 10 view .LVU661
 2209 0246 FFF7FEBF 		b	check_f_key
 2210              	.LVL173:
 2211              	.L239:
 2212              		.cfi_restore_state
 831:src/keys.c    **** 	    }
 2213              		.loc 1 831 8 is_stmt 1 view .LVU662
 932:src/keys.c    **** 
 2214              		.loc 1 932 1 is_stmt 0 view .LVU663
 2215 024a BDE81040 		pop	{r4, lr}
 2216              		.cfi_remember_state
 2217              		.cfi_restore 14
 2218              		.cfi_restore 4
 2219              		.cfi_def_cfa_offset 0
 831:src/keys.c    **** 	    }
 2220              		.loc 1 831 15 view .LVU664
 2221 024e 0F21     		movs	r1, #15
 2222 0250 FFF7FEBF 		b	check_f_key
 2223              	.LVL174:
 2224              	.L238:
 2225              		.cfi_restore_state
 839:src/keys.c    **** 	    }
 2226              		.loc 1 839 8 is_stmt 1 view .LVU665
 932:src/keys.c    **** 
 2227              		.loc 1 932 1 is_stmt 0 view .LVU666
 2228 0254 BDE81040 		pop	{r4, lr}
 2229              		.cfi_remember_state
 2230              		.cfi_restore 14
 2231              		.cfi_restore 4
 2232              		.cfi_def_cfa_offset 0
 839:src/keys.c    **** 	    }
 2233              		.loc 1 839 15 view .LVU667
 2234 0258 1021     		movs	r1, #16
 2235 025a 0120     		movs	r0, #1
 2236 025c FFF7FEBF 		b	check_f_key
 2237              	.LVL175:
 2238              	.L237:
 2239              		.cfi_restore_state
 852:src/keys.c    **** 	    }
 2240              		.loc 1 852 15 view .LVU668
 2241 0260 1422     		movs	r2, #20
 2242 0262 1BE7     		b	.L209
 2243              	.L241:
 2244              		.align	2
 2245              	.L240:
 2246 0264 00000000 		.word	main_ram
 2247 0268 00000000 		.word	.LANCHOR1
 2248 026c 00000000 		.word	.LANCHOR2
 2249 0270 00000000 		.word	StateWhileOn
 2250 0274 31020008 		.word	134218289
 2251              		.cfi_endproc
 2252              	.LFE19:
 2254              		.section	.text.process_fg_shifted,"ax",%progbits
 2255              		.align	1
 2256              		.p2align 2,,3
 2257              		.syntax unified
 2258              		.thumb
ARM GAS  /tmp/cc8lpfL1.s 			page 103


 2259              		.thumb_func
 2260              		.fpu fpv4-sp-d16
 2262              	process_fg_shifted:
 2263              	.LVL176:
 2264              	.LFB20:
 938:src/keys.c    **** 
 2265              		.loc 1 938 48 is_stmt 1 view -0
 2266              		.cfi_startproc
 2267              		@ args = 0, pretend = 0, frame = 0
 2268              		@ frame_needed = 0, uses_anonymous_args = 0
 941:src/keys.c    **** 		// Row 1
 2269              		.loc 1 941 2 view .LVU670
 992:src/keys.c    **** 		STATE_UNFINISHED,
 2270              		.loc 1 992 2 view .LVU671
 999:src/keys.c    **** 	int lc = keycode_to_linear(c);
 2271              		.loc 1 999 2 view .LVU672
 2272              	.LBB369:
 2273              	.LBI369:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 2274              		.loc 1 114 13 view .LVU673
 2275              	.LBE369:
 115:src/keys.c    **** }
 2276              		.loc 1 115 2 view .LVU674
 2277              	.LBB386:
 2278              	.LBB370:
 2279              	.LBI370:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 2280              		.loc 1 104 20 view .LVU675
 2281              	.LBB371:
 105:src/keys.c    **** 	State2.shifts = shift;
 2282              		.loc 1 105 2 view .LVU676
 2283              	.LBB372:
 2284              	.LBI372:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 2285              		.loc 1 96 13 view .LVU677
 2286              	.LBB373:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2287              		.loc 1 97 2 view .LVU678
 2288              	.LBE373:
 2289              	.LBE372:
 2290              	.LBE371:
 2291              	.LBE370:
 2292              	.LBE386:
 938:src/keys.c    **** 
 2293              		.loc 1 938 48 is_stmt 0 view .LVU679
 2294 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2295              		.cfi_def_cfa_offset 24
 2296              		.cfi_offset 4, -24
 2297              		.cfi_offset 5, -20
 2298              		.cfi_offset 6, -16
 2299              		.cfi_offset 7, -12
 2300              		.cfi_offset 8, -8
 2301              		.cfi_offset 14, -4
 938:src/keys.c    **** 
 2302              		.loc 1 938 48 view .LVU680
 2303 0004 0446     		mov	r4, r0
 2304              	.LBB387:
ARM GAS  /tmp/cc8lpfL1.s 			page 104


 2305              	.LBB382:
 2306              	.LBB378:
 2307              	.LBB376:
 2308              	.LBB374:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2309              		.loc 1 97 18 view .LVU681
 2310 0006 FFF7FEFF 		bl	shift_down
 2311              	.LVL177:
  98:src/keys.c    **** }
 2312              		.loc 1 98 2 is_stmt 1 view .LVU682
  98:src/keys.c    **** }
 2313              		.loc 1 98 52 is_stmt 0 view .LVU683
 2314 000a 0028     		cmp	r0, #0
 2315 000c 72D0     		beq	.L289
 2316 000e DFF89482 		ldr	r8, .L303+16
 2317 0012 0546     		mov	r5, r0
 2318              	.L243:
 2319              	.LVL178:
  98:src/keys.c    **** }
 2320              		.loc 1 98 52 view .LVU684
 2321              	.LBE374:
 2322              	.LBE376:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2323              		.loc 1 106 2 is_stmt 1 view .LVU685
 2324              	.LBE378:
 2325              	.LBE382:
 2326              	.LBE387:
 2327              	.LBB388:
 2328              	.LBB389:
 158:src/keys.c    **** }
 2329              		.loc 1 158 23 is_stmt 0 view .LVU686
 2330 0014 9F4B     		ldr	r3, .L303
 2331              	.LBE389:
 2332              	.LBE388:
1001:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2333              		.loc 1 1001 21 view .LVU687
 2334 0016 A049     		ldr	r1, .L303+4
 2335              	.LBB392:
 2336              	.LBB390:
 158:src/keys.c    **** }
 2337              		.loc 1 158 23 view .LVU688
 2338 0018 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 2339              	.LBE390:
 2340              	.LBE392:
1001:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2341              		.loc 1 1001 21 view .LVU689
 2342 001a 4300     		lsls	r3, r0, #1
 2343 001c 022D     		cmp	r5, #2
 2344 001e 08BF     		it	eq
 2345 0020 0133     		addeq	r3, r3, #1
 2346              	.LBB393:
 2347              	.LBB383:
 2348              	.LBB379:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2349              		.loc 1 106 16 view .LVU690
 2350 0022 0022     		movs	r2, #0
 2351              	.LBE379:
ARM GAS  /tmp/cc8lpfL1.s 			page 105


 2352              	.LBE383:
 2353              	.LBE393:
1001:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2354              		.loc 1 1001 21 view .LVU691
 2355 0024 31F81360 		ldrh	r6, [r1, r3, lsl #1]
 2356              	.LBB394:
 2357              	.LBB384:
 2358              	.LBB380:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2359              		.loc 1 106 16 view .LVU692
 2360 0028 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 2361              		.loc 1 108 2 is_stmt 1 view .LVU693
 2362              	.LVL179:
 108:src/keys.c    **** }
 2363              		.loc 1 108 2 is_stmt 0 view .LVU694
 2364              	.LBE380:
 2365              	.LBE384:
 2366              	.LBE394:
1000:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 2367              		.loc 1 1000 2 is_stmt 1 view .LVU695
 2368              	.LBB395:
 2369              	.LBI388:
 146:src/keys.c    **** {
 2370              		.loc 1 146 12 view .LVU696
 2371              	.LBB391:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 2372              		.loc 1 148 2 view .LVU697
 158:src/keys.c    **** }
 2373              		.loc 1 158 2 view .LVU698
 158:src/keys.c    **** }
 2374              		.loc 1 158 2 is_stmt 0 view .LVU699
 2375              	.LBE391:
 2376              	.LBE395:
1001:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2377              		.loc 1 1001 2 is_stmt 1 view .LVU700
1002:src/keys.c    **** 	if (no_int)
 2378              		.loc 1 1002 2 view .LVU701
 2379 002c 06F47047 		and	r7, r6, #61440
 2380              	.LVL180:
1003:src/keys.c    **** 		op &= ~NO_INT;
 2381              		.loc 1 1003 2 view .LVU702
1003:src/keys.c    **** 		op &= ~NO_INT;
 2382              		.loc 1 1003 5 is_stmt 0 view .LVU703
 2383 0030 B7F5704F 		cmp	r7, #61440
 2384 0034 63D0     		beq	.L297
1006:src/keys.c    **** 	case K00:
 2385              		.loc 1 1006 2 is_stmt 1 view .LVU704
 2386 0036 282C     		cmp	r4, #40
 2387 0038 34D8     		bhi	.L264
 2388 003a DFE804F0 		tbb	[pc, r4]
 2389              	.L265:
 2390 003e D3       		.byte	(.L255-.L265)/2
 2391 003f 39       		.byte	(.L253-.L265)/2
 2392 0040 33       		.byte	(.L264-.L265)/2
 2393 0041 39       		.byte	(.L253-.L265)/2
 2394 0042 33       		.byte	(.L264-.L265)/2
ARM GAS  /tmp/cc8lpfL1.s 			page 106


 2395 0043 33       		.byte	(.L264-.L265)/2
 2396 0044 33       		.byte	(.L264-.L265)/2
 2397 0045 33       		.byte	(.L264-.L265)/2
 2398 0046 33       		.byte	(.L264-.L265)/2
 2399 0047 33       		.byte	(.L264-.L265)/2
 2400 0048 33       		.byte	(.L264-.L265)/2
 2401 0049 33       		.byte	(.L264-.L265)/2
 2402 004a 15       		.byte	(.L252-.L265)/2
 2403 004b 33       		.byte	(.L264-.L265)/2
 2404 004c 33       		.byte	(.L264-.L265)/2
 2405 004d 33       		.byte	(.L264-.L265)/2
 2406 004e 33       		.byte	(.L264-.L265)/2
 2407 004f 33       		.byte	(.L264-.L265)/2
 2408 0050 E0       		.byte	(.L251-.L265)/2
 2409 0051 B9       		.byte	(.L250-.L265)/2
 2410 0052 33       		.byte	(.L264-.L265)/2
 2411 0053 33       		.byte	(.L264-.L265)/2
 2412 0054 33       		.byte	(.L264-.L265)/2
 2413 0055 33       		.byte	(.L264-.L265)/2
 2414 0056 33       		.byte	(.L264-.L265)/2
 2415 0057 33       		.byte	(.L264-.L265)/2
 2416 0058 33       		.byte	(.L264-.L265)/2
 2417 0059 33       		.byte	(.L264-.L265)/2
 2418 005a 33       		.byte	(.L264-.L265)/2
 2419 005b 33       		.byte	(.L264-.L265)/2
 2420 005c 44       		.byte	(.L249-.L265)/2
 2421 005d CB       		.byte	(.L248-.L265)/2
 2422 005e 49       		.byte	(.L246-.L265)/2
 2423 005f 49       		.byte	(.L246-.L265)/2
 2424 0060 33       		.byte	(.L264-.L265)/2
 2425 0061 33       		.byte	(.L264-.L265)/2
 2426 0062 33       		.byte	(.L264-.L265)/2
 2427 0063 33       		.byte	(.L264-.L265)/2
 2428 0064 33       		.byte	(.L264-.L265)/2
 2429 0065 49       		.byte	(.L246-.L265)/2
 2430 0066 49       		.byte	(.L246-.L265)/2
 2431 0067 00       		.p2align 1
 2432              	.L252:
1039:src/keys.c    **** 			if (is_bad_cmdline())
 2433              		.loc 1 1039 3 view .LVU705
1039:src/keys.c    **** 			if (is_bad_cmdline())
 2434              		.loc 1 1039 6 is_stmt 0 view .LVU706
 2435 0068 012D     		cmp	r5, #1
 2436 006a 11D1     		bne	.L258
1040:src/keys.c    **** 				return STATE_UNFINISHED;
 2437              		.loc 1 1040 4 is_stmt 1 view .LVU707
1040:src/keys.c    **** 				return STATE_UNFINISHED;
 2438              		.loc 1 1040 8 is_stmt 0 view .LVU708
 2439 006c FFF7FEFF 		bl	is_bad_cmdline
 2440              	.LVL181:
1040:src/keys.c    **** 				return STATE_UNFINISHED;
 2441              		.loc 1 1040 7 view .LVU709
 2442 0070 0028     		cmp	r0, #0
 2443 0072 40F0B380 		bne	.L291
1042:src/keys.c    **** 			State2.alphas = 1;
 2444              		.loc 1 1042 4 is_stmt 1 view .LVU710
 2445 0076 FFF7FEFF 		bl	process_cmdline_set_lift
ARM GAS  /tmp/cc8lpfL1.s 			page 107


 2446              	.LVL182:
1043:src/keys.c    **** #ifdef DM42
 2447              		.loc 1 1043 4 view .LVU711
1043:src/keys.c    **** #ifdef DM42
 2448              		.loc 1 1043 18 is_stmt 0 view .LVU712
 2449 007a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
1045:src/keys.c    **** 			display_current_menu();
 2450              		.loc 1 1045 4 view .LVU713
 2451 007e 1020     		movs	r0, #16
1043:src/keys.c    **** #ifdef DM42
 2452              		.loc 1 1043 18 view .LVU714
 2453 0080 43F00803 		orr	r3, r3, #8
 2454 0084 88F81630 		strb	r3, [r8, #22]
1045:src/keys.c    **** 			display_current_menu();
 2455              		.loc 1 1045 4 is_stmt 1 view .LVU715
 2456 0088 FFF7FEFF 		bl	set_menu
 2457              	.LVL183:
1046:src/keys.c    **** #endif
 2458              		.loc 1 1046 4 view .LVU716
 2459 008c FFF7FEFF 		bl	display_current_menu
 2460              	.LVL184:
 2461              	.L258:
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2462              		.loc 1 1091 2 view .LVU717
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2463              		.loc 1 1091 5 is_stmt 0 view .LVU718
 2464 0090 B7F5704F 		cmp	r7, #61440
 2465 0094 06D1     		bne	.L264
 2466              	.L245:
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2467              		.loc 1 1091 13 discriminator 1 view .LVU719
 2468 0096 814B     		ldr	r3, .L303+8
 2469 0098 1B68     		ldr	r3, [r3]
 2470 009a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2471 009e DA07     		lsls	r2, r3, #31
 2472 00a0 00F19C80 		bmi	.L291
 2473              	.L264:
1094:src/keys.c    **** #undef NO_INT
 2474              		.loc 1 1094 2 is_stmt 1 view .LVU720
 2475              	.LVL185:
 2476              	.LBB396:
 2477              	.LBI396:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 2478              		.loc 1 714 12 view .LVU721
 2479              	.LBB397:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 2480              		.loc 1 715 2 view .LVU722
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 2481              		.loc 1 715 6 is_stmt 0 view .LVU723
 2482 00a4 3312     		asrs	r3, r6, #8
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 2483              		.loc 1 715 5 view .LVU724
 2484 00a6 012B     		cmp	r3, #1
 2485 00a8 1FD0     		beq	.L267
 2486              	.LVL186:
 2487              	.L242:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
ARM GAS  /tmp/cc8lpfL1.s 			page 108


 2488              		.loc 1 715 5 view .LVU725
 2489              	.LBE397:
 2490              	.LBE396:
1096:src/keys.c    **** 
 2491              		.loc 1 1096 1 view .LVU726
 2492 00aa 3046     		mov	r0, r6
 2493 00ac BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2494              	.LVL187:
 2495              	.L253:
1028:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2496              		.loc 1 1028 4 is_stmt 1 view .LVU727
1028:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2497              		.loc 1 1028 8 is_stmt 0 view .LVU728
 2498 00b0 7A4B     		ldr	r3, .L303+8
 2499 00b2 1B68     		ldr	r3, [r3]
 2500 00b4 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1028:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2501              		.loc 1 1028 7 view .LVU729
 2502 00b8 DB07     		lsls	r3, r3, #31
 2503 00ba 00F19980 		bmi	.L294
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2504              		.loc 1 1091 2 is_stmt 1 view .LVU730
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2505              		.loc 1 1091 5 is_stmt 0 view .LVU731
 2506 00be B7F5704F 		cmp	r7, #61440
 2507 00c2 EFD1     		bne	.L264
 2508 00c4 E7E7     		b	.L245
 2509              	.L249:
1071:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 2510              		.loc 1 1071 3 is_stmt 1 view .LVU732
1071:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 2511              		.loc 1 1071 18 is_stmt 0 view .LVU733
 2512 00c6 FFF7FEFF 		bl	shift_down
 2513              	.LVL188:
1071:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 2514              		.loc 1 1071 6 view .LVU734
 2515 00ca 0028     		cmp	r0, #0
 2516 00cc 40F0BA80 		bne	.L298
 2517              	.L246:
1080:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 2518              		.loc 1 1080 3 is_stmt 1 view .LVU735
1080:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 2519              		.loc 1 1080 6 is_stmt 0 view .LVU736
 2520 00d0 B6F59C7F 		cmp	r6, #312
 2521 00d4 40F0A580 		bne	.L299
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2522              		.loc 1 1091 2 is_stmt 1 view .LVU737
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2523              		.loc 1 1091 5 is_stmt 0 view .LVU738
 2524 00d8 B7F5704F 		cmp	r7, #61440
 2525 00dc 05D1     		bne	.L267
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2526              		.loc 1 1091 13 view .LVU739
 2527 00de 6F4B     		ldr	r3, .L303+8
 2528 00e0 1B68     		ldr	r3, [r3]
 2529 00e2 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2530 00e6 DB07     		lsls	r3, r3, #31
ARM GAS  /tmp/cc8lpfL1.s 			page 109


 2531 00e8 78D4     		bmi	.L291
 2532              	.LVL189:
 2533              	.L267:
 2534              	.LBB400:
 2535              	.LBB398:
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2536              		.loc 1 1091 13 view .LVU740
 2537 00ea 3046     		mov	r0, r6
 2538              	.LBE398:
 2539              	.LBE400:
1096:src/keys.c    **** 
 2540              		.loc 1 1096 1 view .LVU741
 2541 00ec BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 2542              		.cfi_remember_state
 2543              		.cfi_restore 14
 2544              		.cfi_restore 8
 2545              		.cfi_restore 7
 2546              		.cfi_restore 6
 2547              		.cfi_restore 5
 2548              		.cfi_restore 4
 2549              		.cfi_def_cfa_offset 0
 2550              	.LVL190:
 2551              	.LBB401:
 2552              	.LBB399:
1096:src/keys.c    **** 
 2553              		.loc 1 1096 1 view .LVU742
 2554 00f0 FFF7FEBF 		b	check_confirm.part.0
 2555              	.LVL191:
 2556              	.L289:
 2557              		.cfi_restore_state
1096:src/keys.c    **** 
 2558              		.loc 1 1096 1 view .LVU743
 2559              	.LBE399:
 2560              	.LBE401:
 2561              	.LBB402:
 2562              	.LBB385:
 2563              	.LBB381:
 2564              	.LBB377:
 2565              	.LBB375:
  98:src/keys.c    **** }
 2566              		.loc 1 98 52 view .LVU744
 2567 00f4 DFF8AC81 		ldr	r8, .L303+16
 2568 00f8 98F81050 		ldrb	r5, [r8, #16]	@ zero_extendqisi2
 2569 00fc 8AE7     		b	.L243
 2570              	.LVL192:
 2571              	.L297:
  98:src/keys.c    **** }
 2572              		.loc 1 98 52 view .LVU745
 2573              	.LBE375:
 2574              	.LBE377:
 2575              	.LBE381:
 2576              	.LBE385:
 2577              	.LBE402:
1004:src/keys.c    **** 
 2578              		.loc 1 1004 3 is_stmt 1 view .LVU746
1004:src/keys.c    **** 
 2579              		.loc 1 1004 6 is_stmt 0 view .LVU747
ARM GAS  /tmp/cc8lpfL1.s 			page 110


 2580 00fe 26F47046 		bic	r6, r6, #61440
 2581              	.LVL193:
1006:src/keys.c    **** 	case K00:
 2582              		.loc 1 1006 2 is_stmt 1 view .LVU748
 2583 0102 282C     		cmp	r4, #40
 2584 0104 C7D8     		bhi	.L245
 2585 0106 01A3     		adr	r3, .L247
 2586 0108 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 2587              		.p2align 2
 2588              	.L247:
 2589 010c E5010000 		.word	.L255+1
 2590 0110 B1000000 		.word	.L253+1
 2591 0114 97000000 		.word	.L245+1
 2592 0118 B1000000 		.word	.L253+1
 2593 011c 97000000 		.word	.L245+1
 2594 0120 97000000 		.word	.L245+1
 2595 0124 97000000 		.word	.L245+1
 2596 0128 97000000 		.word	.L245+1
 2597 012c 97000000 		.word	.L245+1
 2598 0130 97000000 		.word	.L245+1
 2599 0134 97000000 		.word	.L245+1
 2600 0138 97000000 		.word	.L245+1
 2601 013c 69000000 		.word	.L252+1
 2602 0140 97000000 		.word	.L245+1
 2603 0144 97000000 		.word	.L245+1
 2604 0148 97000000 		.word	.L245+1
 2605 014c 97000000 		.word	.L245+1
 2606 0150 97000000 		.word	.L245+1
 2607 0154 FF010000 		.word	.L251+1
 2608 0158 B1010000 		.word	.L250+1
 2609 015c 97000000 		.word	.L245+1
 2610 0160 97000000 		.word	.L245+1
 2611 0164 97000000 		.word	.L245+1
 2612 0168 97000000 		.word	.L245+1
 2613 016c 97000000 		.word	.L245+1
 2614 0170 97000000 		.word	.L245+1
 2615 0174 97000000 		.word	.L245+1
 2616 0178 97000000 		.word	.L245+1
 2617 017c 97000000 		.word	.L245+1
 2618 0180 97000000 		.word	.L245+1
 2619 0184 C7000000 		.word	.L249+1
 2620 0188 D5010000 		.word	.L248+1
 2621 018c D1000000 		.word	.L246+1
 2622 0190 D1000000 		.word	.L246+1
 2623 0194 97000000 		.word	.L245+1
 2624 0198 97000000 		.word	.L245+1
 2625 019c 97000000 		.word	.L245+1
 2626 01a0 97000000 		.word	.L245+1
 2627 01a4 97000000 		.word	.L245+1
 2628 01a8 D1000000 		.word	.L246+1
 2629 01ac D1000000 		.word	.L246+1
 2630              		.p2align 1
 2631              	.L250:
1052:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2632              		.loc 1 1052 4 view .LVU749
1052:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2633              		.loc 1 1052 7 is_stmt 0 view .LVU750
ARM GAS  /tmp/cc8lpfL1.s 			page 111


 2634 01b0 022D     		cmp	r5, #2
 2635 01b2 7FF46DAF 		bne	.L258
1052:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2636              		.loc 1 1052 27 discriminator 1 view .LVU751
 2637 01b6 394B     		ldr	r3, .L303+8
 2638 01b8 1B68     		ldr	r3, [r3]
 2639 01ba 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2640 01be DC07     		lsls	r4, r3, #31
 2641 01c0 7FF566AF 		bpl	.L258
1052:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2642              		.loc 1 1052 45 discriminator 2 view .LVU752
 2643 01c4 0D20     		movs	r0, #13
 2644              	.LVL194:
1052:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2645              		.loc 1 1052 45 discriminator 2 view .LVU753
 2646 01c6 FFF7FEFF 		bl	intltr
 2647              	.LVL195:
1052:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2648              		.loc 1 1052 42 discriminator 2 view .LVU754
 2649 01ca 0028     		cmp	r0, #0
 2650 01cc 3FF460AF 		beq	.L258
1053:src/keys.c    **** 	  }
 2651              		.loc 1 1053 13 view .LVU755
 2652 01d0 1226     		movs	r6, #18
 2653              	.LVL196:
1053:src/keys.c    **** 	  }
 2654              		.loc 1 1053 13 view .LVU756
 2655 01d2 6AE7     		b	.L242
 2656              	.LVL197:
 2657              	.L248:
1063:src/keys.c    **** 			return STATE_UNFINISHED;
 2658              		.loc 1 1063 3 is_stmt 1 view .LVU757
1063:src/keys.c    **** 			return STATE_UNFINISHED;
 2659              		.loc 1 1063 7 is_stmt 0 view .LVU758
 2660 01d4 FFF7FEFF 		bl	is_bad_cmdline
 2661              	.LVL198:
1063:src/keys.c    **** 			return STATE_UNFINISHED;
 2662              		.loc 1 1063 6 view .LVU759
 2663 01d8 0028     		cmp	r0, #0
 2664 01da 40D0     		beq	.L300
 2665              	.LVL199:
 2666              	.L291:
1084:src/keys.c    **** 		}
 2667              		.loc 1 1084 11 view .LVU760
 2668 01dc 3326     		movs	r6, #51
 2669              	.LVL200:
1096:src/keys.c    **** 
 2670              		.loc 1 1096 1 view .LVU761
 2671 01de 3046     		mov	r0, r6
 2672 01e0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2673              	.LVL201:
 2674              	.L255:
1008:src/keys.c    **** 	    //	    print_debug(100,0);
 2675              		.loc 1 1008 4 is_stmt 1 view .LVU762
1008:src/keys.c    **** 	    //	    print_debug(100,0);
 2676              		.loc 1 1008 8 is_stmt 0 view .LVU763
 2677 01e4 2D4B     		ldr	r3, .L303+8
ARM GAS  /tmp/cc8lpfL1.s 			page 112


 2678 01e6 1B68     		ldr	r3, [r3]
 2679 01e8 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1008:src/keys.c    **** 	    //	    print_debug(100,0);
 2680              		.loc 1 1008 7 view .LVU764
 2681 01ec DA07     		lsls	r2, r3, #31
 2682 01ee 3CD5     		bpl	.L301
 2683              	.L294:
1028:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2684              		.loc 1 1028 20 discriminator 1 view .LVU765
 2685 01f0 012D     		cmp	r5, #1
 2686 01f2 48D0     		beq	.L302
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2687              		.loc 1 1091 2 is_stmt 1 view .LVU766
1091:src/keys.c    **** 		return STATE_UNFINISHED;
 2688              		.loc 1 1091 5 is_stmt 0 view .LVU767
 2689 01f4 B7F5704F 		cmp	r7, #61440
 2690 01f8 7FF454AF 		bne	.L264
 2691 01fc EEE7     		b	.L291
 2692              	.L251:
1057:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2693              		.loc 1 1057 4 is_stmt 1 view .LVU768
1057:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2694              		.loc 1 1057 7 is_stmt 0 view .LVU769
 2695 01fe 022D     		cmp	r5, #2
 2696 0200 7FF446AF 		bne	.L258
1057:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2697              		.loc 1 1057 27 discriminator 1 view .LVU770
 2698 0204 254B     		ldr	r3, .L303+8
 2699 0206 1B68     		ldr	r3, [r3]
 2700 0208 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2701 020c D807     		lsls	r0, r3, #31
 2702              	.LVL202:
1057:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2703              		.loc 1 1057 27 discriminator 1 view .LVU771
 2704 020e 7FF53FAF 		bpl	.L258
1057:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2705              		.loc 1 1057 45 discriminator 2 view .LVU772
 2706 0212 0E20     		movs	r0, #14
 2707 0214 FFF7FEFF 		bl	intltr
 2708              	.LVL203:
1057:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2709              		.loc 1 1057 42 discriminator 2 view .LVU773
 2710 0218 0028     		cmp	r0, #0
 2711 021a 3FF439AF 		beq	.L258
1058:src/keys.c    **** 	  }
 2712              		.loc 1 1058 13 view .LVU774
 2713 021e 1326     		movs	r6, #19
 2714              	.LVL204:
1058:src/keys.c    **** 	  }
 2715              		.loc 1 1058 13 view .LVU775
 2716 0220 43E7     		b	.L242
 2717              	.LVL205:
 2718              	.L299:
1081:src/keys.c    **** 				init_arg((enum rarg) op);
 2719              		.loc 1 1081 4 is_stmt 1 view .LVU776
1081:src/keys.c    **** 				init_arg((enum rarg) op);
 2720              		.loc 1 1081 7 is_stmt 0 view .LVU777
ARM GAS  /tmp/cc8lpfL1.s 			page 113


 2721 0222 B7F5704F 		cmp	r7, #61440
 2722 0226 05D1     		bne	.L263
1081:src/keys.c    **** 				init_arg((enum rarg) op);
 2723              		.loc 1 1081 18 discriminator 1 view .LVU778
 2724 0228 1C4B     		ldr	r3, .L303+8
 2725 022a 1B68     		ldr	r3, [r3]
 2726 022c 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1081:src/keys.c    **** 				init_arg((enum rarg) op);
 2727              		.loc 1 1081 8 discriminator 1 view .LVU779
 2728 0230 D907     		lsls	r1, r3, #31
 2729 0232 D3D4     		bmi	.L291
 2730              	.L263:
1082:src/keys.c    **** 			}
 2731              		.loc 1 1082 5 is_stmt 1 view .LVU780
 2732              	.LVL206:
 2733              	.LBB403:
 2734              	.LBI403:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 2735              		.loc 1 552 13 view .LVU781
 2736              	.LBB404:
 553:src/keys.c    **** 		return;
 2737              		.loc 1 553 2 view .LVU782
 553:src/keys.c    **** 		return;
 2738              		.loc 1 553 6 is_stmt 0 view .LVU783
 2739 0234 FFF7FEFF 		bl	is_bad_cmdline
 2740              	.LVL207:
 553:src/keys.c    **** 		return;
 2741              		.loc 1 553 5 view .LVU784
 2742 0238 0028     		cmp	r0, #0
 2743 023a CFD1     		bne	.L291
 2744 023c F0B2     		uxtb	r0, r6
 2745 023e FFF7FEFF 		bl	init_arg.part.0
 2746              	.LVL208:
 2747 0242 CBE7     		b	.L291
 2748              	.LVL209:
 2749              	.L298:
 553:src/keys.c    **** 		return;
 2750              		.loc 1 553 5 view .LVU785
 2751              	.LBE404:
 2752              	.LBE403:
1072:src/keys.c    **** 			return STATE_UNFINISHED;
 2753              		.loc 1 1072 4 is_stmt 1 view .LVU786
1072:src/keys.c    **** 			return STATE_UNFINISHED;
 2754              		.loc 1 1072 26 is_stmt 0 view .LVU787
 2755 0244 A5F10105 		sub	r5, #1
 2756              	.LVL210:
1072:src/keys.c    **** 			return STATE_UNFINISHED;
 2757              		.loc 1 1072 17 view .LVU788
 2758 0248 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
1072:src/keys.c    **** 			return STATE_UNFINISHED;
 2759              		.loc 1 1072 26 view .LVU789
 2760 024c B5FA85F5 		clz	r5, r5
 2761 0250 6D09     		lsrs	r5, r5, #5
1072:src/keys.c    **** 			return STATE_UNFINISHED;
 2762              		.loc 1 1072 17 view .LVU790
 2763 0252 65F3C713 		bfi	r3, r5, #7, #1
 2764 0256 88F81730 		strb	r3, [r8, #23]
ARM GAS  /tmp/cc8lpfL1.s 			page 114


1073:src/keys.c    **** 		}
 2765              		.loc 1 1073 4 is_stmt 1 view .LVU791
1073:src/keys.c    **** 		}
 2766              		.loc 1 1073 11 is_stmt 0 view .LVU792
 2767 025a 3326     		movs	r6, #51
 2768              	.LVL211:
1073:src/keys.c    **** 		}
 2769              		.loc 1 1073 11 view .LVU793
 2770 025c 25E7     		b	.L242
 2771              	.LVL212:
 2772              	.L300:
1065:src/keys.c    **** 		State2.test = op;
 2773              		.loc 1 1065 3 is_stmt 1 view .LVU794
 2774 025e FFF7FEFF 		bl	process_cmdline_set_lift
 2775              	.LVL213:
1066:src/keys.c    **** 		return STATE_UNFINISHED;
 2776              		.loc 1 1066 3 view .LVU795
1066:src/keys.c    **** 		return STATE_UNFINISHED;
 2777              		.loc 1 1066 15 is_stmt 0 view .LVU796
 2778 0262 88F80F60 		strb	r6, [r8, #15]
1067:src/keys.c    **** 
 2779              		.loc 1 1067 3 is_stmt 1 view .LVU797
1067:src/keys.c    **** 
 2780              		.loc 1 1067 10 is_stmt 0 view .LVU798
 2781 0266 3326     		movs	r6, #51
 2782              	.LVL214:
1067:src/keys.c    **** 
 2783              		.loc 1 1067 10 view .LVU799
 2784 0268 1FE7     		b	.L242
 2785              	.LVL215:
 2786              	.L301:
1010:src/keys.c    **** 	    State2.dot = op;
 2787              		.loc 1 1010 6 is_stmt 1 view .LVU800
1011:src/keys.c    **** 	    // State2.cmplx = 0;
 2788              		.loc 1 1011 6 view .LVU801
1010:src/keys.c    **** 	    State2.dot = op;
 2789              		.loc 1 1010 17 is_stmt 0 view .LVU802
 2790 026a 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 2791 026e 06F00103 		and	r3, r6, #1
 2792 0272 9B01     		lsls	r3, r3, #6
 2793 0274 43F02003 		orr	r3, r3, #32
 2794 0278 22F06002 		bic	r2, r2, #96
 2795 027c 1343     		orrs	r3, r3, r2
 2796 027e 88F81530 		strb	r3, [r8, #21]
1013:src/keys.c    **** 	  }
 2797              		.loc 1 1013 6 is_stmt 1 view .LVU803
1013:src/keys.c    **** 	  }
 2798              		.loc 1 1013 13 is_stmt 0 view .LVU804
 2799 0282 3326     		movs	r6, #51
 2800              	.LVL216:
1013:src/keys.c    **** 	  }
 2801              		.loc 1 1013 13 view .LVU805
 2802 0284 11E7     		b	.L242
 2803              	.LVL217:
 2804              	.L302:
1029:src/keys.c    **** 		}
 2805              		.loc 1 1029 4 is_stmt 1 view .LVU806
ARM GAS  /tmp/cc8lpfL1.s 			page 115


1029:src/keys.c    **** 		}
 2806              		.loc 1 1029 34 is_stmt 0 view .LVU807
 2807 0286 064B     		ldr	r3, .L303+12
1096:src/keys.c    **** 
 2808              		.loc 1 1096 1 view .LVU808
 2809 0288 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 2810              		.cfi_restore 14
 2811              		.cfi_restore 8
 2812              		.cfi_restore 7
 2813              		.cfi_restore 6
 2814              		.cfi_restore 5
 2815              		.cfi_restore 4
 2816              		.cfi_def_cfa_offset 0
 2817              	.LVL218:
1029:src/keys.c    **** 		}
 2818              		.loc 1 1029 11 view .LVU809
 2819 028c 33F81010 		ldrh	r1, [r3, r0, lsl #1]
 2820 0290 FFF7FEBF 		b	check_f_key
 2821              	.LVL219:
 2822              	.L304:
1029:src/keys.c    **** 		}
 2823              		.loc 1 1029 11 view .LVU810
 2824              		.align	2
 2825              	.L303:
 2826 0294 00000000 		.word	.LANCHOR1
 2827 0298 00000000 		.word	.LANCHOR3
 2828 029c 00000000 		.word	main_ram
 2829 02a0 00000000 		.word	.LANCHOR4
 2830 02a4 00000000 		.word	StateWhileOn
 2831              		.cfi_endproc
 2832              	.LFE20:
 2834              		.section	.text.set_window,"ax",%progbits
 2835              		.align	1
 2836              		.p2align 2,,3
 2837              		.syntax unified
 2838              		.thumb
 2839              		.thumb_func
 2840              		.fpu fpv4-sp-d16
 2842              	set_window:
 2843              	.LVL220:
 2844              	.LFB58:
2988:src/keys.c    **** 
2989:src/keys.c    **** 
2990:src/keys.c    **** /*
2991:src/keys.c    ****  *  CAT command
2992:src/keys.c    ****  */
2993:src/keys.c    **** static int process_labellist(const keycode c) {
2994:src/keys.c    **** 	unsigned int pc = State2.digval;
2995:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
2996:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
2997:src/keys.c    **** 	const int opcode = getprog(pc);
2998:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
2999:src/keys.c    **** 	const int direct = State2.runmode;
3000:src/keys.c    **** 	const enum shifts shift = reset_shift();
3001:src/keys.c    **** 	int op = STATE_UNFINISHED;
3002:src/keys.c    **** 
3003:src/keys.c    **** 	if (n < REGION_XROM) {
ARM GAS  /tmp/cc8lpfL1.s 			page 116


3004:src/keys.c    **** 		// Digits take you to that segment
3005:src/keys.c    **** 		pc = addrLIB(1, n);
3006:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
3007:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
3008:src/keys.c    **** 		State2.digval = pc;
3009:src/keys.c    **** 		return STATE_UNFINISHED;
3010:src/keys.c    **** 	}
3011:src/keys.c    **** 
3012:src/keys.c    **** 	switch (c | (shift << 8)) {
3013:src/keys.c    **** 
3014:src/keys.c    **** 	case K_UP | (SHIFT_F << 8):		// Find first label of previous program
3015:src/keys.c    **** 		pc = advance_to_previous_label(advance_to_previous_label(pc, 1), 1);
3016:src/keys.c    **** 		goto next;
3017:src/keys.c    **** 
3018:src/keys.c    **** 	case K_DOWN | (SHIFT_F << 8):		// Find next program
3019:src/keys.c    **** 		pc = advance_to_next_label(pc, 0, 1);
3020:src/keys.c    **** 	case K_DOWN:				// Find next label
3021:src/keys.c    **** 	next:
3022:src/keys.c    **** 		State2.digval = advance_to_next_label(pc, 1, 0);
3023:src/keys.c    **** 		return STATE_UNFINISHED;
3024:src/keys.c    **** 
3025:src/keys.c    **** 	case K_UP:				// Find previous label
3026:src/keys.c    **** 		State2.digval = advance_to_previous_label(pc, 0);
3027:src/keys.c    **** 		return STATE_UNFINISHED;
3028:src/keys.c    **** 
3029:src/keys.c    **** 	case K24:				// <- exits
3030:src/keys.c    **** 		break;
3031:src/keys.c    **** 
3032:src/keys.c    **** 	case K20:				// ENTER^
3033:src/keys.c    **** 	set_pc_and_exit:
3034:src/keys.c    **** 		set_pc(pc);			// forced branch
3035:src/keys.c    **** 		break;
3036:src/keys.c    **** 
3037:src/keys.c    **** 	case K24 | (SHIFT_F << 8):		// CLP
3038:src/keys.c    **** 		op = (OP_NIL | OP_CLPROG);
3039:src/keys.c    **** 		goto set_pc_and_exit;
3040:src/keys.c    **** 
3041:src/keys.c    **** 	case K10:				// STO
3042:src/keys.c    **** 	case K11:				// RCL
3043:src/keys.c    **** 	  //#ifndef DM42	
3044:src/keys.c    **** 		op = c == K10 ? (OP_NIL | OP_PSTO) : (OP_NIL | OP_PRCL);
3045:src/keys.c    **** 	  //#endif
3046:src/keys.c    **** /* #ifdef DM42 */
3047:src/keys.c    **** /* 	        op = OP_NIL; */
3048:src/keys.c    **** /* #endif	     */
3049:src/keys.c    **** 	  goto set_pc_and_exit;
3050:src/keys.c    **** #ifdef DM42
3051:src/keys.c    **** 	case K05:				// XEQ
3052:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
3053:src/keys.c    **** 		goto xeq_or_gto;
3054:src/keys.c    **** 
3055:src/keys.c    **** 	case K05 | (SHIFT_F << 8):		// GTO
3056:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
3057:src/keys.c    **** 	xeq_or_gto:
3058:src/keys.c    **** 		if (label)
3059:src/keys.c    **** 			break;
3060:src/keys.c    **** 		return STATE_UNFINISHED;
ARM GAS  /tmp/cc8lpfL1.s 			page 117


3061:src/keys.c    **** #else
3062:src/keys.c    **** 	case K30:				// XEQ
3063:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
3064:src/keys.c    **** 		goto xeq_or_gto;
3065:src/keys.c    **** 
3066:src/keys.c    **** 	case K30 | (SHIFT_H << 8):		// GTO
3067:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
3068:src/keys.c    **** 	xeq_or_gto:
3069:src/keys.c    **** 		if (label)
3070:src/keys.c    **** 			break;
3071:src/keys.c    **** 		return STATE_UNFINISHED;
3072:src/keys.c    **** #endif		
3073:src/keys.c    **** 	case K63:				// R/S
3074:src/keys.c    **** 		if (direct && label) {
3075:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
3076:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
3077:src/keys.c    **** 			break;
3078:src/keys.c    **** 		}
3079:src/keys.c    **** 		return STATE_UNFINISHED;
3080:src/keys.c    **** 
3081:src/keys.c    **** 	case K63 | (SHIFT_H << 8):		// P/R
3082:src/keys.c    **** 		State2.runmode = 0;		// switch to program mode
3083:src/keys.c    **** 		goto set_pc_and_exit;
3084:src/keys.c    **** 
3085:src/keys.c    **** 	default:
3086:src/keys.c    **** 		return STATE_UNFINISHED;
3087:src/keys.c    **** 	}
3088:src/keys.c    **** 	State2.digval = 0;
3089:src/keys.c    **** 	State2.labellist = 0;
3090:src/keys.c    **** 	return check_confirm(op);
3091:src/keys.c    **** }
3092:src/keys.c    **** 
3093:src/keys.c    **** 
3094:src/keys.c    **** static void set_window(int c) {
 2845              		.loc 1 3094 31 is_stmt 1 view -0
 2846              		.cfi_startproc
 2847              		@ args = 0, pretend = 0, frame = 0
 2848              		@ frame_needed = 0, uses_anonymous_args = 0
3095:src/keys.c    **** 
3096:src/keys.c    **** 	if (State2.runmode) {
 2849              		.loc 1 3096 2 view .LVU812
3094:src/keys.c    **** 
 2850              		.loc 1 3094 31 is_stmt 0 view .LVU813
 2851 0000 38B5     		push	{r3, r4, r5, lr}
 2852              		.cfi_def_cfa_offset 16
 2853              		.cfi_offset 3, -16
 2854              		.cfi_offset 4, -12
 2855              		.cfi_offset 5, -8
 2856              		.cfi_offset 14, -4
 2857              		.loc 1 3096 6 view .LVU814
 2858 0002 224C     		ldr	r4, .L320
 2859 0004 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 2860              		.loc 1 3096 5 view .LVU815
 2861 0006 5A06     		lsls	r2, r3, #25
 2862 0008 00D4     		bmi	.L317
 2863              	.LVL221:
 2864              	.L305:
ARM GAS  /tmp/cc8lpfL1.s 			page 118


3097:src/keys.c    **** 		process_cmdline_set_lift();
3098:src/keys.c    **** 		// Make sure IntMaxWindow is recalculated
3099:src/keys.c    **** 		State2.disp_freeze = 0;
3100:src/keys.c    **** 		display();	
3101:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
3102:src/keys.c    **** 			if (UState.intm) {
3103:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
3104:src/keys.c    **** 					State2.window--;
3105:src/keys.c    **** 				return;
3106:src/keys.c    **** 			}
3107:src/keys.c    **** 			else 
3108:src/keys.c    **** 				State2.window = is_dblmode();
3109:src/keys.c    **** 		}
3110:src/keys.c    **** 		else {
3111:src/keys.c    **** 			if (UState.intm) {
3112:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
3113:src/keys.c    **** 					State2.window++;
3114:src/keys.c    **** 				return;
3115:src/keys.c    **** 			}
3116:src/keys.c    **** 			else
3117:src/keys.c    **** 				State2.window = 0;
3118:src/keys.c    **** 		}
3119:src/keys.c    **** 		set_smode(SDISP_SHOW);
3120:src/keys.c    **** 	}
3121:src/keys.c    **** }
 2865              		.loc 1 3121 1 view .LVU816
 2866 000a 38BD     		pop	{r3, r4, r5, pc}
 2867              	.LVL222:
 2868              	.L317:
3097:src/keys.c    **** 		process_cmdline_set_lift();
 2869              		.loc 1 3097 3 is_stmt 1 view .LVU817
 2870 000c 0546     		mov	r5, r0
 2871 000e FFF7FEFF 		bl	process_cmdline_set_lift
 2872              	.LVL223:
3099:src/keys.c    **** 		display();	
 2873              		.loc 1 3099 3 view .LVU818
3099:src/keys.c    **** 		display();	
 2874              		.loc 1 3099 22 is_stmt 0 view .LVU819
 2875 0012 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 2876 0014 6FF30413 		bfc	r3, #4, #1
 2877 0018 E375     		strb	r3, [r4, #23]
3100:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
 2878              		.loc 1 3100 3 is_stmt 1 view .LVU820
 2879 001a FFF7FEFF 		bl	display
 2880              	.LVL224:
3101:src/keys.c    **** 			if (UState.intm) {
 2881              		.loc 1 3101 3 view .LVU821
3102:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2882              		.loc 1 3102 8 is_stmt 0 view .LVU822
 2883 001e 1C4B     		ldr	r3, .L320+4
 2884 0020 1B68     		ldr	r3, [r3]
3101:src/keys.c    **** 			if (UState.intm) {
 2885              		.loc 1 3101 6 view .LVU823
 2886 0022 2C2D     		cmp	r5, #44
3102:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2887              		.loc 1 3102 8 view .LVU824
 2888 0024 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
ARM GAS  /tmp/cc8lpfL1.s 			page 119


3101:src/keys.c    **** 			if (UState.intm) {
 2889              		.loc 1 3101 6 view .LVU825
 2890 0028 18D0     		beq	.L318
3111:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 2891              		.loc 1 3111 4 is_stmt 1 view .LVU826
3111:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 2892              		.loc 1 3111 7 is_stmt 0 view .LVU827
 2893 002a 13F00103 		ands	r3, r3, #1
 2894 002e 09D1     		bne	.L319
3117:src/keys.c    **** 		}
 2895              		.loc 1 3117 5 is_stmt 1 view .LVU828
3117:src/keys.c    **** 		}
 2896              		.loc 1 3117 19 is_stmt 0 view .LVU829
 2897 0030 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 2898 0032 63F3C502 		bfi	r2, r3, #3, #3
 2899 0036 2275     		strb	r2, [r4, #20]
 2900              	.L311:
3119:src/keys.c    **** 	}
 2901              		.loc 1 3119 3 is_stmt 1 view .LVU830
 2902              	.LVL225:
 2903              	.LBB411:
 2904              	.LBI411:
 741:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 2905              		.loc 1 741 13 view .LVU831
 2906              	.LBB412:
 742:src/keys.c    **** }
 2907              		.loc 1 742 2 view .LVU832
 742:src/keys.c    **** }
 2908              		.loc 1 742 15 is_stmt 0 view .LVU833
 2909 0038 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 2910 003a 013B     		subs	r3, r3, #1
 2911 003c 18BF     		it	ne
 2912 003e 0123     		movne	r3, #1
 2913 0040 6374     		strb	r3, [r4, #17]
 2914              	.LVL226:
 742:src/keys.c    **** }
 2915              		.loc 1 742 15 view .LVU834
 2916              	.LBE412:
 2917              	.LBE411:
 2918              		.loc 1 3121 1 view .LVU835
 2919 0042 38BD     		pop	{r3, r4, r5, pc}
 2920              	.LVL227:
 2921              	.L319:
3112:src/keys.c    **** 					State2.window++;
 2922              		.loc 1 3112 5 is_stmt 1 view .LVU836
3112:src/keys.c    **** 					State2.window++;
 2923              		.loc 1 3112 22 is_stmt 0 view .LVU837
 2924 0044 134A     		ldr	r2, .L320+8
3112:src/keys.c    **** 					State2.window++;
 2925              		.loc 1 3112 42 view .LVU838
 2926 0046 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
3112:src/keys.c    **** 					State2.window++;
 2927              		.loc 1 3112 8 view .LVU839
 2928 0048 1168     		ldr	r1, [r2]
3112:src/keys.c    **** 					State2.window++;
 2929              		.loc 1 3112 42 view .LVU840
 2930 004a C3F3C202 		ubfx	r2, r3, #3, #3
ARM GAS  /tmp/cc8lpfL1.s 			page 120


3112:src/keys.c    **** 					State2.window++;
 2931              		.loc 1 3112 8 view .LVU841
 2932 004e 8A42     		cmp	r2, r1
 2933 0050 DBDA     		bge	.L305
3113:src/keys.c    **** 				return;
 2934              		.loc 1 3113 6 is_stmt 1 view .LVU842
3113:src/keys.c    **** 				return;
 2935              		.loc 1 3113 19 is_stmt 0 view .LVU843
 2936 0052 0132     		adds	r2, r2, #1
 2937 0054 62F3C503 		bfi	r3, r2, #3, #3
 2938 0058 2375     		strb	r3, [r4, #20]
 2939              		.loc 1 3121 1 view .LVU844
 2940 005a 38BD     		pop	{r3, r4, r5, pc}
 2941              	.LVL228:
 2942              	.L318:
3102:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2943              		.loc 1 3102 4 is_stmt 1 view .LVU845
3102:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2944              		.loc 1 3102 7 is_stmt 0 view .LVU846
 2945 005c DB07     		lsls	r3, r3, #31
 2946 005e 0ED5     		bpl	.L309
 2947              	.LBB413:
 2948              	.LBI413:
3094:src/keys.c    **** 
 2949              		.loc 1 3094 13 is_stmt 1 view .LVU847
 2950              	.LVL229:
 2951              	.LBB414:
3103:src/keys.c    **** 					State2.window--;
 2952              		.loc 1 3103 5 view .LVU848
3103:src/keys.c    **** 					State2.window--;
 2953              		.loc 1 3103 22 is_stmt 0 view .LVU849
 2954 0060 0C4B     		ldr	r3, .L320+8
3103:src/keys.c    **** 					State2.window--;
 2955              		.loc 1 3103 8 view .LVU850
 2956 0062 1B68     		ldr	r3, [r3]
 2957 0064 002B     		cmp	r3, #0
 2958 0066 D0DD     		ble	.L305
3103:src/keys.c    **** 					State2.window--;
 2959              		.loc 1 3103 43 view .LVU851
 2960 0068 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
3103:src/keys.c    **** 					State2.window--;
 2961              		.loc 1 3103 26 view .LVU852
 2962 006a 13F0380F 		tst	r3, #56
 2963 006e CCD0     		beq	.L305
3104:src/keys.c    **** 				return;
 2964              		.loc 1 3104 6 is_stmt 1 view .LVU853
3104:src/keys.c    **** 				return;
 2965              		.loc 1 3104 12 is_stmt 0 view .LVU854
 2966 0070 C3F3C202 		ubfx	r2, r3, #3, #3
3104:src/keys.c    **** 				return;
 2967              		.loc 1 3104 19 view .LVU855
 2968 0074 0732     		adds	r2, r2, #7
 2969 0076 62F3C503 		bfi	r3, r2, #3, #3
 2970 007a 2375     		strb	r3, [r4, #20]
 2971              	.LBE414:
 2972              	.LBE413:
 2973              		.loc 1 3121 1 view .LVU856
ARM GAS  /tmp/cc8lpfL1.s 			page 121


 2974 007c 38BD     		pop	{r3, r4, r5, pc}
 2975              	.LVL230:
 2976              	.L309:
3108:src/keys.c    **** 		}
 2977              		.loc 1 3108 5 is_stmt 1 view .LVU857
3108:src/keys.c    **** 		}
 2978              		.loc 1 3108 21 is_stmt 0 view .LVU858
 2979 007e FFF7FEFF 		bl	is_dblmode
 2980              	.LVL231:
3108:src/keys.c    **** 		}
 2981              		.loc 1 3108 19 view .LVU859
 2982 0082 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 2983 0084 60F3C503 		bfi	r3, r0, #3, #3
 2984 0088 2375     		strb	r3, [r4, #20]
 2985 008a D5E7     		b	.L311
 2986              	.L321:
 2987              		.align	2
 2988              	.L320:
 2989 008c 00000000 		.word	StateWhileOn
 2990 0090 00000000 		.word	main_ram
 2991 0094 00000000 		.word	IntMaxWindow
 2992              		.cfi_endproc
 2993              	.LFE58:
 2995              		.section	.text.arg_storcl,"ax",%progbits
 2996              		.align	1
 2997              		.p2align 2,,3
 2998              		.syntax unified
 2999              		.thumb
 3000              		.thumb_func
 3001              		.fpu fpv4-sp-d16
 3003              	arg_storcl:
 3004              	.LVL232:
 3005              	.LFB39:
2020:src/keys.c    **** 	unsigned int b = CmdBase;
 3006              		.loc 1 2020 56 is_stmt 1 view -0
 3007              		.cfi_startproc
 3008              		@ args = 0, pretend = 0, frame = 0
 3009              		@ frame_needed = 0, uses_anonymous_args = 0
 3010              		@ link register save eliminated.
2021:src/keys.c    **** 
 3011              		.loc 1 2021 2 view .LVU861
2021:src/keys.c    **** 
 3012              		.loc 1 2021 19 is_stmt 0 view .LVU862
 3013 0000 0F4A     		ldr	r2, .L354
 3014 0002 D37F     		ldrb	r3, [r2, #31]	@ zero_extendqisi2
 3015              	.LVL233:
2023:src/keys.c    **** 		CmdBase += n;
 3016              		.loc 1 2023 2 is_stmt 1 view .LVU863
 3017              	.LBB423:
 3018              	.LBI423:
2011:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3019              		.loc 1 2011 12 view .LVU864
 3020              	.LBB424:
2016:src/keys.c    **** #endif
 3021              		.loc 1 2016 2 view .LVU865
2016:src/keys.c    **** #endif
 3022              		.loc 1 2016 41 is_stmt 0 view .LVU866
ARM GAS  /tmp/cc8lpfL1.s 			page 122


 3023 0004 032B     		cmp	r3, #3
 3024 0006 14D0     		beq	.L323
2016:src/keys.c    **** #endif
 3025              		.loc 1 2016 24 view .LVU867
 3026 0008 0A2B     		cmp	r3, #10
 3027 000a 12D0     		beq	.L323
 3028              	.LVL234:
 3029              	.LBB425:
 3030              	.LBI425:
2011:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3031              		.loc 1 2011 12 is_stmt 1 view .LVU868
 3032              	.LBB426:
2016:src/keys.c    **** #endif
 3033              		.loc 1 2016 41 is_stmt 0 view .LVU869
 3034 000c 19B1     		cbz	r1, .L324
2016:src/keys.c    **** #endif
 3035              		.loc 1 2016 51 view .LVU870
 3036 000e 152B     		cmp	r3, #21
 3037 0010 0FD0     		beq	.L323
2016:src/keys.c    **** #endif
 3038              		.loc 1 2016 70 view .LVU871
 3039 0012 1A2B     		cmp	r3, #26
 3040 0014 0DD0     		beq	.L323
 3041              	.L324:
 3042              	.LVL235:
2016:src/keys.c    **** #endif
 3043              		.loc 1 2016 70 view .LVU872
 3044              	.LBE426:
 3045              	.LBE425:
 3046              	.LBE424:
 3047              	.LBE423:
2028:src/keys.c    **** 		b -= n;
 3048              		.loc 1 2028 2 is_stmt 1 view .LVU873
2028:src/keys.c    **** 		b -= n;
 3049              		.loc 1 2028 5 is_stmt 0 view .LVU874
 3050 0016 8342     		cmp	r3, r0
 3051 0018 09D3     		bcc	.L329
2029:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 3052              		.loc 1 2029 3 is_stmt 1 view .LVU875
2029:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 3053              		.loc 1 2029 5 is_stmt 0 view .LVU876
 3054 001a 1B1A     		subs	r3, r3, r0
 3055              	.LVL236:
2030:src/keys.c    **** 			CmdBase = b;
 3056              		.loc 1 2030 3 is_stmt 1 view .LVU877
 3057              	.LBB427:
 3058              	.LBI427:
2011:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3059              		.loc 1 2011 12 view .LVU878
 3060              	.LBB428:
2016:src/keys.c    **** #endif
 3061              		.loc 1 2016 2 view .LVU879
2016:src/keys.c    **** #endif
 3062              		.loc 1 2016 41 is_stmt 0 view .LVU880
 3063 001c 032B     		cmp	r3, #3
 3064 001e 0CD0     		beq	.L327
2016:src/keys.c    **** #endif
ARM GAS  /tmp/cc8lpfL1.s 			page 123


 3065              		.loc 1 2016 24 view .LVU881
 3066 0020 0A2B     		cmp	r3, #10
 3067 0022 0AD0     		beq	.L327
 3068              	.LVL237:
 3069              	.LBB429:
 3070              	.LBI429:
2011:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3071              		.loc 1 2011 12 is_stmt 1 view .LVU882
 3072              	.LBB430:
2016:src/keys.c    **** #endif
 3073              		.loc 1 2016 41 is_stmt 0 view .LVU883
 3074 0024 19B1     		cbz	r1, .L329
2016:src/keys.c    **** #endif
 3075              		.loc 1 2016 51 view .LVU884
 3076 0026 152B     		cmp	r3, #21
 3077 0028 07D0     		beq	.L327
2016:src/keys.c    **** #endif
 3078              		.loc 1 2016 70 view .LVU885
 3079 002a 1A2B     		cmp	r3, #26
 3080 002c 05D0     		beq	.L327
 3081              	.LVL238:
 3082              	.L329:
2016:src/keys.c    **** #endif
 3083              		.loc 1 2016 70 view .LVU886
 3084              	.LBE430:
 3085              	.LBE429:
 3086              	.LBE428:
 3087              	.LBE427:
2035:src/keys.c    **** }
 3088              		.loc 1 2035 9 view .LVU887
 3089 002e 0020     		movs	r0, #0
 3090              	.LVL239:
2036:src/keys.c    **** 
 3091              		.loc 1 2036 1 view .LVU888
 3092 0030 7047     		bx	lr
 3093              	.LVL240:
 3094              	.L323:
2024:src/keys.c    **** 		return 1;
 3095              		.loc 1 2024 3 is_stmt 1 view .LVU889
2024:src/keys.c    **** 		return 1;
 3096              		.loc 1 2024 11 is_stmt 0 view .LVU890
 3097 0032 1844     		add	r0, r0, r3
 3098              	.LVL241:
2024:src/keys.c    **** 		return 1;
 3099              		.loc 1 2024 11 view .LVU891
 3100 0034 D077     		strb	r0, [r2, #31]
2025:src/keys.c    **** 	}
 3101              		.loc 1 2025 3 is_stmt 1 view .LVU892
2025:src/keys.c    **** 	}
 3102              		.loc 1 2025 10 is_stmt 0 view .LVU893
 3103 0036 0120     		movs	r0, #1
 3104 0038 7047     		bx	lr
 3105              	.LVL242:
 3106              	.L327:
2031:src/keys.c    **** 			return 1;
 3107              		.loc 1 2031 4 is_stmt 1 view .LVU894
2031:src/keys.c    **** 			return 1;
ARM GAS  /tmp/cc8lpfL1.s 			page 124


 3108              		.loc 1 2031 12 is_stmt 0 view .LVU895
 3109 003a D377     		strb	r3, [r2, #31]
2032:src/keys.c    **** 		}
 3110              		.loc 1 2032 4 is_stmt 1 view .LVU896
2032:src/keys.c    **** 		}
 3111              		.loc 1 2032 11 is_stmt 0 view .LVU897
 3112 003c 0120     		movs	r0, #1
 3113              	.LVL243:
2032:src/keys.c    **** 		}
 3114              		.loc 1 2032 11 view .LVU898
 3115 003e 7047     		bx	lr
 3116              	.L355:
 3117              		.align	2
 3118              	.L354:
 3119 0040 00000000 		.word	StateWhileOn
 3120              		.cfi_endproc
 3121              	.LFE39:
 3123              		.section	.text.process_arg,"ax",%progbits
 3124              		.align	1
 3125              		.p2align 2,,3
 3126              		.syntax unified
 3127              		.thumb
 3128              		.thumb_func
 3129              		.fpu fpv4-sp-d16
 3131              	process_arg:
 3132              	.LVL244:
 3133              	.LFB42:
2070:src/keys.c    **** 	unsigned int base = CmdBase;
 3134              		.loc 1 2070 41 is_stmt 1 view -0
 3135              		.cfi_startproc
 3136              		@ args = 0, pretend = 0, frame = 8
 3137              		@ frame_needed = 0, uses_anonymous_args = 0
2071:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3138              		.loc 1 2071 2 view .LVU900
2070:src/keys.c    **** 	unsigned int base = CmdBase;
 3139              		.loc 1 2070 41 is_stmt 0 view .LVU901
 3140 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3141              		.cfi_def_cfa_offset 36
 3142              		.cfi_offset 4, -36
 3143              		.cfi_offset 5, -32
 3144              		.cfi_offset 6, -28
 3145              		.cfi_offset 7, -24
 3146              		.cfi_offset 8, -20
 3147              		.cfi_offset 9, -16
 3148              		.cfi_offset 10, -12
 3149              		.cfi_offset 11, -8
 3150              		.cfi_offset 14, -4
2071:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3151              		.loc 1 2071 22 view .LVU902
 3152 0004 C94C     		ldr	r4, .L500
2073:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3153              		.loc 1 2073 31 view .LVU903
 3154 0006 DFF834A3 		ldr	r10, .L500+16
2071:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3155              		.loc 1 2071 22 view .LVU904
 3156 000a E57F     		ldrb	r5, [r4, #31]	@ zero_extendqisi2
 3157              	.LBB452:
ARM GAS  /tmp/cc8lpfL1.s 			page 125


 3158              	.LBB453:
 3159              	.LBB454:
 3160              	.LBB455:
 143:src/keys.c    **** }
 3161              		.loc 1 143 23 view .LVU905
 3162 000c C84A     		ldr	r2, .L500+4
 3163              	.LBE455:
 3164              	.LBE454:
 234:src/keys.c    **** }
 3165              		.loc 1 234 28 view .LVU906
 3166 000e C94E     		ldr	r6, .L500+8
 3167              	.LBB458:
 3168              	.LBB456:
 143:src/keys.c    **** }
 3169              		.loc 1 143 23 view .LVU907
 3170 0010 125C     		ldrb	r2, [r2, r0]	@ zero_extendqisi2
 3171              	.LBE456:
 3172              	.LBE458:
 3173              	.LBE453:
 3174              	.LBE452:
2074:src/keys.c    **** 	const enum shifts shift = reset_shift();
 3175              		.loc 1 2074 20 view .LVU908
 3176 0012 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 3177              	.LBB462:
 3178              	.LBB460:
 234:src/keys.c    **** }
 3179              		.loc 1 234 28 view .LVU909
 3180 0014 16F80290 		ldrb	r9, [r6, r2]	@ zero_extendqisi2
 3181              	.LBE460:
 3182              	.LBE462:
2073:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3183              		.loc 1 2073 31 view .LVU910
 3184 0018 0AEB0511 		add	r1, r10, r5, lsl #4
2070:src/keys.c    **** 	unsigned int base = CmdBase;
 3185              		.loc 1 2070 41 view .LVU911
 3186 001c 83B0     		sub	sp, sp, #12
 3187              		.cfi_def_cfa_offset 48
2073:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3188              		.loc 1 2073 31 view .LVU912
 3189 001e 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
2071:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3190              		.loc 1 2071 15 view .LVU913
 3191 0020 0095     		str	r5, [sp]
 3192              	.LVL245:
2072:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
 3193              		.loc 1 2072 2 is_stmt 1 view .LVU914
2073:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3194              		.loc 1 2073 40 is_stmt 0 view .LVU915
 3195 0022 4A07     		lsls	r2, r1, #29
 3196 0024 58BF     		it	pl
 3197 0026 94F91580 		ldrsbpl	r8, [r4, #21]
2074:src/keys.c    **** 	const enum shifts shift = reset_shift();
 3198              		.loc 1 2074 20 view .LVU916
 3199 002a 0193     		str	r3, [sp, #4]
2073:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3200              		.loc 1 2073 40 view .LVU917
 3201 002c 54BF     		ite	pl
ARM GAS  /tmp/cc8lpfL1.s 			page 126


 3202 002e 4FEAD878 		lsrpl	r8, r8, #31
 3203 0032 4FF00108 		movmi	r8, #1
2070:src/keys.c    **** 	unsigned int base = CmdBase;
 3204              		.loc 1 2070 41 view .LVU918
 3205 0036 0746     		mov	r7, r0
 3206              	.LVL246:
 3207              	.LBB463:
 3208              	.LBI452:
 210:src/keys.c    **** {
 3209              		.loc 1 210 14 is_stmt 1 view .LVU919
 3210              	.LBB461:
 212:src/keys.c    ****     // K00 - K05
 3211              		.loc 1 212 3 view .LVU920
 234:src/keys.c    **** }
 3212              		.loc 1 234 3 view .LVU921
 3213              	.LBB459:
 3214              	.LBI454:
 131:src/keys.c    **** {
 3215              		.loc 1 131 12 view .LVU922
 3216              	.LBB457:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3217              		.loc 1 133 2 view .LVU923
 143:src/keys.c    **** }
 3218              		.loc 1 143 2 view .LVU924
 143:src/keys.c    **** }
 3219              		.loc 1 143 2 is_stmt 0 view .LVU925
 3220              	.LBE457:
 3221              	.LBE459:
 234:src/keys.c    **** }
 3222              		.loc 1 234 10 view .LVU926
 3223 0038 4E46     		mov	r6, r9
 3224              	.LVL247:
 234:src/keys.c    **** }
 3225              		.loc 1 234 10 view .LVU927
 3226              	.LBE461:
 3227              	.LBE463:
2073:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3228              		.loc 1 2073 2 is_stmt 1 view .LVU928
2074:src/keys.c    **** 	const enum shifts shift = reset_shift();
 3229              		.loc 1 2074 2 view .LVU929
2075:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
 3230              		.loc 1 2075 2 view .LVU930
 3231              	.LBB464:
 3232              	.LBI464:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 3233              		.loc 1 114 13 view .LVU931
 3234              	.LBE464:
 115:src/keys.c    **** }
 3235              		.loc 1 115 2 view .LVU932
 3236              	.LBB477:
 3237              	.LBB465:
 3238              	.LBI465:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 3239              		.loc 1 104 20 view .LVU933
 3240              	.LBB466:
 105:src/keys.c    **** 	State2.shifts = shift;
 3241              		.loc 1 105 2 view .LVU934
ARM GAS  /tmp/cc8lpfL1.s 			page 127


 3242              	.LBB467:
 3243              	.LBI467:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 3244              		.loc 1 96 13 view .LVU935
 3245              	.LBB468:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3246              		.loc 1 97 2 view .LVU936
 3247              	.LBE468:
 3248              	.LBE467:
 3249              	.LBE466:
 3250              	.LBE465:
 3251              	.LBE477:
2073:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3252              		.loc 1 2073 31 is_stmt 0 view .LVU937
 3253 003a 4FEA051B 		lsl	fp, r5, #4
 3254              	.LBB478:
 3255              	.LBB474:
 3256              	.LBB471:
 3257              	.LBB470:
 3258              	.LBB469:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3259              		.loc 1 97 18 view .LVU938
 3260 003e FFF7FEFF 		bl	shift_down
 3261              	.LVL248:
  98:src/keys.c    **** }
 3262              		.loc 1 98 2 is_stmt 1 view .LVU939
  98:src/keys.c    **** }
 3263              		.loc 1 98 52 is_stmt 0 view .LVU940
 3264 0042 00B9     		cbnz	r0, .L358
 3265 0044 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
 3266              	.LVL249:
 3267              	.L358:
  98:src/keys.c    **** }
 3268              		.loc 1 98 52 view .LVU941
 3269              	.LBE469:
 3270              	.LBE470:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3271              		.loc 1 106 2 is_stmt 1 view .LVU942
 3272              	.LBE471:
 3273              	.LBE474:
 3274              	.LBE478:
2076:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3275              		.loc 1 2076 38 is_stmt 0 view .LVU943
 3276 0046 D344     		add	fp, fp, r10
 3277              	.LBB479:
 3278              	.LBB475:
 3279              	.LBB472:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3280              		.loc 1 106 16 view .LVU944
 3281 0048 4FF0000E 		mov	lr, #0
 3282              	.LBE472:
 3283              	.LBE475:
 3284              	.LBE479:
2076:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3285              		.loc 1 2076 38 view .LVU945
 3286 004c 9BF80510 		ldrb	r1, [fp, #5]	@ zero_extendqisi2
 3287              	.LBB480:
ARM GAS  /tmp/cc8lpfL1.s 			page 128


 3288              	.LBB476:
 3289              	.LBB473:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3290              		.loc 1 106 16 view .LVU946
 3291 0050 84F810E0 		strb	lr, [r4, #16]
 108:src/keys.c    **** }
 3292              		.loc 1 108 2 is_stmt 1 view .LVU947
 3293              	.LVL250:
 108:src/keys.c    **** }
 3294              		.loc 1 108 2 is_stmt 0 view .LVU948
 3295              	.LBE473:
 3296              	.LBE476:
 3297              	.LBE480:
2076:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3298              		.loc 1 2076 2 is_stmt 1 view .LVU949
2076:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3299              		.loc 1 2076 61 is_stmt 0 view .LVU950
 3300 0054 8B06     		lsls	r3, r1, #26
 3301 0056 C1F3401C 		ubfx	ip, r1, #5, #1
 3302 005a 19D5     		bpl	.L359
2076:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3303              		.loc 1 2076 61 discriminator 1 view .LVU951
 3304 005c 617D     		ldrb	r1, [r4, #21]	@ zero_extendqisi2
 3305 005e 11F0C00F 		tst	r1, #192
 3306 0062 1FD0     		beq	.L488
 3307              	.LVL251:
2080:src/keys.c    **** 	if (base >= NUM_RARG) {
 3308              		.loc 1 2080 2 is_stmt 1 view .LVU952
2081:src/keys.c    **** 		reset_arg();
 3309              		.loc 1 2081 5 is_stmt 0 view .LVU953
 3310 0064 8E2D     		cmp	r5, #142
2080:src/keys.c    **** 	if (base >= NUM_RARG) {
 3311              		.loc 1 2080 4 view .LVU954
 3312 0066 29F08006 		bic	r6, r9, #128
 3313              	.LVL252:
2081:src/keys.c    **** 		reset_arg();
 3314              		.loc 1 2081 2 is_stmt 1 view .LVU955
2081:src/keys.c    **** 		reset_arg();
 3315              		.loc 1 2081 5 is_stmt 0 view .LVU956
 3316 006a 15D8     		bhi	.L388
2076:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3317              		.loc 1 2076 61 view .LVU957
 3318 006c F446     		mov	ip, lr
 3319              	.L368:
2086:src/keys.c    **** 	  switch (n) {
 3320              		.loc 1 2086 35 discriminator 1 view .LVU958
 3321 006e 6169     		ldr	r1, [r4, #20]
 3322 0070 11F4103F 		tst	r1, #147456
 3323 0074 2ED1     		bne	.L370
2087:src/keys.c    **** 	  case regX_idx:
 3324              		.loc 1 2087 4 is_stmt 1 view .LVU959
 3325 0076 672E     		cmp	r6, #103
 3326 0078 2CD8     		bhi	.L370
2087:src/keys.c    **** 	  case regX_idx:
 3327              		.loc 1 2087 4 is_stmt 0 view .LVU960
 3328 007a 632E     		cmp	r6, #99
 3329 007c 24D9     		bls	.L430
ARM GAS  /tmp/cc8lpfL1.s 			page 129


 3330 007e 653E     		subs	r6, r6, #101
 3331              	.LVL253:
2087:src/keys.c    **** 	  case regX_idx:
 3332              		.loc 1 2087 4 view .LVU961
 3333 0080 022E     		cmp	r6, #2
 3334 0082 00F26082 		bhi	.L373
 3335 0086 DFE816F0 		tbh	[pc, r6, lsl #1]
 3336              	.L375:
 3337 008a 1101     		.2byte	(.L377-.L375)/2
 3338 008c 0B01     		.2byte	(.L376-.L375)/2
 3339 008e 1301     		.2byte	(.L374-.L375)/2
 3340              	.LVL254:
 3341              		.p2align 1
 3342              	.L359:
2080:src/keys.c    **** 	if (base >= NUM_RARG) {
 3343              		.loc 1 2080 2 is_stmt 1 view .LVU962
2081:src/keys.c    **** 		reset_arg();
 3344              		.loc 1 2081 5 is_stmt 0 view .LVU963
 3345 0090 8E2D     		cmp	r5, #142
2080:src/keys.c    **** 	if (base >= NUM_RARG) {
 3346              		.loc 1 2080 4 view .LVU964
 3347 0092 29F08006 		bic	r6, r9, #128
 3348              	.LVL255:
2081:src/keys.c    **** 		reset_arg();
 3349              		.loc 1 2081 2 is_stmt 1 view .LVU965
2081:src/keys.c    **** 		reset_arg();
 3350              		.loc 1 2081 5 is_stmt 0 view .LVU966
 3351 0096 EAD9     		bls	.L368
 3352              	.LVL256:
 3353              	.L388:
2336:src/keys.c    **** 	default:
 3354              		.loc 1 2336 3 is_stmt 1 view .LVU967
 3355 0098 FFF7FEFF 		bl	reset_arg
 3356              	.LVL257:
 3357              	.L481:
2340:src/keys.c    **** }
 3358              		.loc 1 2340 9 is_stmt 0 view .LVU968
 3359 009c 3320     		movs	r0, #51
 3360              	.L356:
2341:src/keys.c    **** 
 3361              		.loc 1 2341 1 view .LVU969
 3362 009e 03B0     		add	sp, sp, #12
 3363              		.cfi_remember_state
 3364              		.cfi_def_cfa_offset 36
 3365              		@ sp needed
 3366 00a0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3367              	.LVL258:
 3368              	.L488:
 3369              		.cfi_restore_state
2077:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 3370              		.loc 1 2077 2 is_stmt 1 view .LVU970
2077:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 3371              		.loc 1 2077 35 is_stmt 0 view .LVU971
 3372 00a4 292F     		cmp	r7, #41
 3373 00a6 00F0C080 		beq	.L361
2078:src/keys.c    **** 
 3374              		.loc 1 2078 11 view .LVU972
ARM GAS  /tmp/cc8lpfL1.s 			page 130


 3375 00aa 0128     		cmp	r0, #1
 3376 00ac 00F0D180 		beq	.L362
2078:src/keys.c    **** 
 3377              		.loc 1 2078 32 discriminator 3 view .LVU973
 3378 00b0 B9F1090F 		cmp	r9, #9
 3379 00b4 00F2B680 		bhi	.L363
 3380              	.LVL259:
2080:src/keys.c    **** 	if (base >= NUM_RARG) {
 3381              		.loc 1 2080 2 is_stmt 1 view .LVU974
2081:src/keys.c    **** 		reset_arg();
 3382              		.loc 1 2081 2 view .LVU975
2081:src/keys.c    **** 		reset_arg();
 3383              		.loc 1 2081 5 is_stmt 0 view .LVU976
 3384 00b8 8E2D     		cmp	r5, #142
 3385 00ba EDD8     		bhi	.L388
2086:src/keys.c    **** 	  switch (n) {
 3386              		.loc 1 2086 35 view .LVU977
 3387 00bc 6169     		ldr	r1, [r4, #20]
 3388 00be 11F4103F 		tst	r1, #147456
2076:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3389              		.loc 1 2076 61 view .LVU978
 3390 00c2 4FF0010C 		mov	ip, #1
2086:src/keys.c    **** 	  switch (n) {
 3391              		.loc 1 2086 35 view .LVU979
 3392 00c6 05D1     		bne	.L370
 3393              	.L430:
2087:src/keys.c    **** 	  case regX_idx:
 3394              		.loc 1 2087 4 view .LVU980
 3395 00c8 16B1     		cbz	r6, .L372
 3396 00ca 721F     		subs	r2, r6, #5
 3397 00cc 042A     		cmp	r2, #4
 3398 00ce 01D8     		bhi	.L370
 3399              	.L372:
2102:src/keys.c    **** 	  }
 3400              		.loc 1 2102 6 is_stmt 1 view .LVU981
2102:src/keys.c    **** 	  }
 3401              		.loc 1 2102 13 is_stmt 0 view .LVU982
 3402 00d0 3046     		mov	r0, r6
 3403              	.LVL260:
2102:src/keys.c    **** 	  }
 3404              		.loc 1 2102 13 view .LVU983
 3405 00d2 E6E0     		b	.L482
 3406              	.LVL261:
 3407              	.L370:
2109:src/keys.c    **** 		// row column shorthand addressing
 3408              		.loc 1 2109 2 is_stmt 1 view .LVU984
2115:src/keys.c    **** 		switch ((int)c) {
 3409              		.loc 1 2115 2 view .LVU985
2115:src/keys.c    **** 		switch ((int)c) {
 3410              		.loc 1 2115 5 is_stmt 0 view .LVU986
 3411 00d4 4D2D     		cmp	r5, #77
 3412 00d6 00F0B180 		beq	.L489
2115:src/keys.c    **** 		switch ((int)c) {
 3413              		.loc 1 2115 23 discriminator 1 view .LVU987
 3414 00da 05F17302 		add	r2, r5, #115
 3415 00de D2B2     		uxtb	r2, r2
 3416 00e0 012A     		cmp	r2, #1
ARM GAS  /tmp/cc8lpfL1.s 			page 131


 3417 00e2 61D9     		bls	.L490
 3418              	.LVL262:
 3419              	.L379:
2146:src/keys.c    **** #else
 3420              		.loc 1 2146 3 is_stmt 1 view .LVU988
2146:src/keys.c    **** #else
 3421              		.loc 1 2146 11 is_stmt 0 view .LVU989
 3422 00e4 E577     		strb	r5, [r4, #31]
2169:src/keys.c    **** 	case K_F:
 3423              		.loc 1 2169 2 is_stmt 1 view .LVU990
 3424 00e6 2D2F     		cmp	r7, #45
 3425 00e8 D8D8     		bhi	.L481
 3426 00ea 01A3     		adr	r3, .L383
 3427 00ec 53F827F0 		ldr	pc, [r3, r7, lsl #2]
 3428              		.p2align 2
 3429              	.L383:
 3430 00f0 C1010000 		.word	.L400+1
 3431 00f4 C1010000 		.word	.L400+1
 3432 00f8 C1010000 		.word	.L400+1
 3433 00fc C1010000 		.word	.L400+1
 3434 0100 9D000000 		.word	.L481+1
 3435 0104 9D000000 		.word	.L481+1
 3436 0108 9D000000 		.word	.L481+1
 3437 010c 9D000000 		.word	.L481+1
 3438 0110 C1010000 		.word	.L400+1
 3439 0114 C1010000 		.word	.L400+1
 3440 0118 C1010000 		.word	.L400+1
 3441 011c C1010000 		.word	.L400+1
 3442 0120 45040000 		.word	.L399+1
 3443 0124 9D000000 		.word	.L481+1
 3444 0128 9D000000 		.word	.L481+1
 3445 012c 9D000000 		.word	.L481+1
 3446 0130 C7020000 		.word	.L398+1
 3447 0134 9D000000 		.word	.L481+1
 3448 0138 19020000 		.word	.L397+1
 3449 013c 9D000000 		.word	.L481+1
 3450 0140 9D000000 		.word	.L481+1
 3451 0144 9D000000 		.word	.L481+1
 3452 0148 F3020000 		.word	.L396+1
 3453 014c 9D000000 		.word	.L481+1
 3454 0150 FF020000 		.word	.L395+1
 3455 0154 0B030000 		.word	.L394+1
 3456 0158 9D000000 		.word	.L481+1
 3457 015c 9D000000 		.word	.L481+1
 3458 0160 81020000 		.word	.L393+1
 3459 0164 9D000000 		.word	.L481+1
 3460 0168 9D000000 		.word	.L481+1
 3461 016c 1F030000 		.word	.L392+1
 3462 0170 4D040000 		.word	.L391+1
 3463 0174 41030000 		.word	.L390+1
 3464 0178 4D030000 		.word	.L389+1
 3465 017c 9D000000 		.word	.L481+1
 3466 0180 99000000 		.word	.L388+1
 3467 0184 9D000000 		.word	.L481+1
 3468 0188 67030000 		.word	.L387+1
 3469 018c 9D000000 		.word	.L481+1
 3470 0190 AD030000 		.word	.L386+1
ARM GAS  /tmp/cc8lpfL1.s 			page 132


 3471 0194 CD030000 		.word	.L385+1
 3472 0198 9D000000 		.word	.L481+1
 3473 019c 9D000000 		.word	.L481+1
 3474 01a0 ED030000 		.word	.L384+1
 3475 01a4 25040000 		.word	.L382+1
 3476              	.LVL263:
 3477              		.p2align 1
 3478              	.L490:
2116:src/keys.c    **** 		case K_UP:	// up arrow
 3479              		.loc 1 2116 3 view .LVU991
 3480 01a8 122F     		cmp	r7, #18
 3481 01aa 2FD0     		beq	.L426
 3482 01ac 182F     		cmp	r7, #24
 3483 01ae 01D0     		beq	.L427
 3484 01b0 012F     		cmp	r7, #1
 3485 01b2 97D1     		bne	.L379
 3486              	.L427:
2132:src/keys.c    **** 		    base = RARG_SIG0;
 3487              		.loc 1 2132 5 view .LVU992
2136:src/keys.c    **** 		    base = RARG_FIX;
 3488              		.loc 1 2136 5 view .LVU993
2136:src/keys.c    **** 		    base = RARG_FIX;
 3489              		.loc 1 2136 8 is_stmt 0 view .LVU994
 3490 01b4 8D2D     		cmp	r5, #141
 3491 01b6 7DD1     		bne	.L491
 3492 01b8 4D23     		movs	r3, #77
 3493 01ba 0093     		str	r3, [sp]
 3494              	.LVL264:
2137:src/keys.c    **** 		    break;
 3495              		.loc 1 2137 12 view .LVU995
 3496 01bc 1D46     		mov	r5, r3
 3497 01be 91E7     		b	.L379
 3498              	.LVL265:
 3499              	.L400:
2224:src/keys.c    **** 			return arg_eval(n);
 3500              		.loc 1 2224 4 is_stmt 1 view .LVU996
2224:src/keys.c    **** 			return arg_eval(n);
 3501              		.loc 1 2224 8 is_stmt 0 view .LVU997
 3502 01c0 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
2224:src/keys.c    **** 			return arg_eval(n);
 3503              		.loc 1 2224 7 view .LVU998
 3504 01c2 5306     		lsls	r3, r2, #25
 3505 01c4 6AD4     		bmi	.L415
2224:src/keys.c    **** 			return arg_eval(n);
 3506              		.loc 1 2224 19 discriminator 1 view .LVU999
 3507 01c6 B8F1000F 		cmp	r8, #0
 3508 01ca 67D1     		bne	.L415
2226:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 3509              		.loc 1 2226 3 is_stmt 1 view .LVU1000
2226:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 3510              		.loc 1 2226 6 is_stmt 0 view .LVU1001
 3511 01cc 032F     		cmp	r7, #3
 3512 01ce 3FF665AF 		bhi	.L481
2227:src/keys.c    **** 		break;
 3513              		.loc 1 2227 4 is_stmt 1 view .LVU1002
 3514              	.LVL266:
 3515              	.LBB481:
ARM GAS  /tmp/cc8lpfL1.s 			page 133


 3516              	.LBI481:
1997:src/keys.c    **** 	const unsigned int b = CmdBase;
 3517              		.loc 1 1997 12 view .LVU1003
 3518              	.LBB482:
1998:src/keys.c    **** 
 3519              		.loc 1 1998 2 view .LVU1004
2000:src/keys.c    **** 	{
 3520              		.loc 1 2000 2 view .LVU1005
2000:src/keys.c    **** 	{
 3521              		.loc 1 2000 16 is_stmt 0 view .LVU1006
 3522 01d2 009B     		ldr	r3, [sp]
 3523 01d4 0AEB0311 		add	r1, r10, r3, lsl #4
 3524 01d8 1801     		lsls	r0, r3, #4
 3525 01da 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
2000:src/keys.c    **** 	{
 3526              		.loc 1 2000 5 view .LVU1007
 3527 01dc 8D06     		lsls	r5, r1, #26
 3528 01de 05D4     		bmi	.L406
2000:src/keys.c    **** 	{
 3529              		.loc 1 2000 40 view .LVU1008
 3530 01e0 A3F15109 		sub	r9, r3, #81
2000:src/keys.c    **** 	{
 3531              		.loc 1 2000 23 view .LVU1009
 3532 01e4 B9F10A0F 		cmp	r9, #10
 3533 01e8 3FF658AF 		bhi	.L481
 3534              	.L406:
2002:src/keys.c    **** 			return STATE_UNFINISHED;
 3535              		.loc 1 2002 3 is_stmt 1 view .LVU1010
2002:src/keys.c    **** 			return STATE_UNFINISHED;
 3536              		.loc 1 2002 6 is_stmt 0 view .LVU1011
 3537 01ec 1106     		lsls	r1, r2, #24
 3538 01ee 3FF555AF 		bmi	.L481
2002:src/keys.c    **** 			return STATE_UNFINISHED;
 3539              		.loc 1 2002 18 view .LVU1012
 3540 01f2 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 3541 01f4 002A     		cmp	r2, #0
 3542 01f6 7FF451AF 		bne	.L481
2004:src/keys.c    **** 			return STATE_UNFINISHED;
 3543              		.loc 1 2004 3 is_stmt 1 view .LVU1013
2004:src/keys.c    **** 			return STATE_UNFINISHED;
 3544              		.loc 1 2004 17 is_stmt 0 view .LVU1014
 3545 01fa 0AEB0003 		add	r3, r10, r0
2004:src/keys.c    **** 			return STATE_UNFINISHED;
 3546              		.loc 1 2004 6 view .LVU1015
 3547 01fe 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3548 0200 632B     		cmp	r3, #99
 3549 0202 7FF64BAF 		bls	.L481
2006:src/keys.c    **** 	}
 3550              		.loc 1 2006 3 is_stmt 1 view .LVU1016
2006:src/keys.c    **** 	}
 3551              		.loc 1 2006 10 is_stmt 0 view .LVU1017
 3552 0206 07F16400 		add	r0, r7, #100
 3553 020a 34E0     		b	.L483
 3554              	.LVL267:
 3555              	.L426:
2006:src/keys.c    **** 	}
 3556              		.loc 1 2006 10 view .LVU1018
ARM GAS  /tmp/cc8lpfL1.s 			page 134


 3557              	.LBE482:
 3558              	.LBE481:
2118:src/keys.c    **** 		    base = RARG_SIG;
 3559              		.loc 1 2118 5 is_stmt 1 view .LVU1019
2122:src/keys.c    **** 		    base = RARG_SIG0;
 3560              		.loc 1 2122 5 view .LVU1020
2122:src/keys.c    **** 		    base = RARG_SIG0;
 3561              		.loc 1 2122 8 is_stmt 0 view .LVU1021
 3562 020c 8D2D     		cmp	r5, #141
 3563 020e 01D0     		beq	.L476
2126:src/keys.c    **** 		    base = RARG_FIX;
 3564              		.loc 1 2126 5 is_stmt 1 view .LVU1022
2126:src/keys.c    **** 		    base = RARG_FIX;
 3565              		.loc 1 2126 8 is_stmt 0 view .LVU1023
 3566 0210 8E2D     		cmp	r5, #142
 3567 0212 56D0     		beq	.L492
 3568              	.L476:
2146:src/keys.c    **** #else
 3569              		.loc 1 2146 3 is_stmt 1 view .LVU1024
2146:src/keys.c    **** #else
 3570              		.loc 1 2146 11 is_stmt 0 view .LVU1025
 3571 0214 8E23     		movs	r3, #142
 3572              	.LVL268:
 3573              	.L480:
2146:src/keys.c    **** #else
 3574              		.loc 1 2146 11 view .LVU1026
 3575 0216 E377     		strb	r3, [r4, #31]
2169:src/keys.c    **** 	case K_F:
 3576              		.loc 1 2169 2 is_stmt 1 view .LVU1027
 3577              	.L397:
2286:src/keys.c    **** 		break;
 3578              		.loc 1 2286 3 view .LVU1028
 3579 0218 0021     		movs	r1, #0
 3580 021a 0620     		movs	r0, #6
 3581              	.LVL269:
2286:src/keys.c    **** 		break;
 3582              		.loc 1 2286 3 is_stmt 0 view .LVU1029
 3583 021c FFF7FEFF 		bl	arg_storcl
 3584              	.LVL270:
2287:src/keys.c    **** 
 3585              		.loc 1 2287 3 is_stmt 1 view .LVU1030
2340:src/keys.c    **** }
 3586              		.loc 1 2340 9 is_stmt 0 view .LVU1031
 3587 0220 3320     		movs	r0, #51
2287:src/keys.c    **** 
 3588              		.loc 1 2287 3 view .LVU1032
 3589 0222 3CE7     		b	.L356
 3590              	.LVL271:
 3591              	.L363:
2078:src/keys.c    **** 
 3592              		.loc 1 2078 42 discriminator 4 view .LVU1033
 3593 0224 19F0800F 		tst	r9, #128
 3594 0228 13D0     		beq	.L362
 3595              	.L361:
 3596              	.LVL272:
2080:src/keys.c    **** 	if (base >= NUM_RARG) {
 3597              		.loc 1 2080 2 is_stmt 1 view .LVU1034
ARM GAS  /tmp/cc8lpfL1.s 			page 135


2081:src/keys.c    **** 		reset_arg();
 3598              		.loc 1 2081 5 is_stmt 0 view .LVU1035
 3599 022a 8E2D     		cmp	r5, #142
2080:src/keys.c    **** 	if (base >= NUM_RARG) {
 3600              		.loc 1 2080 4 view .LVU1036
 3601 022c 29F08006 		bic	r6, r9, #128
 3602              	.LVL273:
2081:src/keys.c    **** 		reset_arg();
 3603              		.loc 1 2081 2 is_stmt 1 view .LVU1037
2076:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3604              		.loc 1 2076 61 is_stmt 0 view .LVU1038
 3605 0230 98BF     		it	ls
 3606 0232 4FF0010C 		movls	ip, #1
2081:src/keys.c    **** 		reset_arg();
 3607              		.loc 1 2081 5 view .LVU1039
 3608 0236 7FF61AAF 		bls	.L368
 3609 023a 2DE7     		b	.L388
 3610              	.L489:
2116:src/keys.c    **** 		case K_UP:	// up arrow
 3611              		.loc 1 2116 3 is_stmt 1 view .LVU1040
 3612 023c 122F     		cmp	r7, #18
 3613 023e 00F00B81 		beq	.L438
 3614 0242 182F     		cmp	r7, #24
 3615 0244 02D0     		beq	.L440
 3616 0246 012F     		cmp	r7, #1
 3617 0248 7FF44CAF 		bne	.L379
 3618              	.L440:
 3619 024c 8E25     		movs	r5, #142
 3620              	.LVL274:
2133:src/keys.c    **** 		    break;
 3621              		.loc 1 2133 12 is_stmt 0 view .LVU1041
 3622 024e 0095     		str	r5, [sp]
 3623 0250 48E7     		b	.L379
 3624              	.LVL275:
 3625              	.L362:
2080:src/keys.c    **** 	if (base >= NUM_RARG) {
 3626              		.loc 1 2080 2 is_stmt 1 view .LVU1042
2081:src/keys.c    **** 		reset_arg();
 3627              		.loc 1 2081 2 view .LVU1043
2081:src/keys.c    **** 		reset_arg();
 3628              		.loc 1 2081 5 is_stmt 0 view .LVU1044
 3629 0252 8E2D     		cmp	r5, #142
 3630 0254 3FF620AF 		bhi	.L388
2109:src/keys.c    **** 		// row column shorthand addressing
 3631              		.loc 1 2109 2 is_stmt 1 view .LVU1045
2111:src/keys.c    **** 
 3632              		.loc 1 2111 3 view .LVU1046
 3633              	.LVL276:
 3634              	.LBB483:
 3635              	.LBI483:
 179:src/keys.c    **** {
 3636              		.loc 1 179 5 view .LVU1047
 3637              	.LBB484:
 181:src/keys.c    **** }
 3638              		.loc 1 181 2 view .LVU1048
 181:src/keys.c    **** }
 3639              		.loc 1 181 18 is_stmt 0 view .LVU1049
ARM GAS  /tmp/cc8lpfL1.s 			page 136


 3640 0258 374B     		ldr	r3, .L500+12
 3641 025a A3FB0723 		umull	r2, r3, r3, r7
 181:src/keys.c    **** }
 3642              		.loc 1 181 24 view .LVU1050
 3643 025e 03F0FC00 		and	r0, r3, #252
 3644              	.LVL277:
 181:src/keys.c    **** }
 3645              		.loc 1 181 24 view .LVU1051
 3646 0262 00EB9300 		add	r0, r0, r3, lsr #2
 181:src/keys.c    **** }
 3647              		.loc 1 181 18 view .LVU1052
 3648 0266 9B08     		lsrs	r3, r3, #2
 181:src/keys.c    **** }
 3649              		.loc 1 181 24 view .LVU1053
 3650 0268 4000     		lsls	r0, r0, #1
 181:src/keys.c    **** }
 3651              		.loc 1 181 33 view .LVU1054
 3652 026a 03EB4303 		add	r3, r3, r3, lsl #1
 181:src/keys.c    **** }
 3653              		.loc 1 181 12 view .LVU1055
 3654 026e 0B30     		adds	r0, r0, #11
 181:src/keys.c    **** }
 3655              		.loc 1 181 33 view .LVU1056
 3656 0270 A7EB4307 		sub	r7, r7, r3, lsl #1
 3657              	.LBE484:
 3658              	.LBE483:
2111:src/keys.c    **** 
 3659              		.loc 1 2111 10 view .LVU1057
 3660 0274 3844     		add	r0, r0, r7
 3661              	.LVL278:
 3662              	.L483:
2341:src/keys.c    **** 
 3663              		.loc 1 2341 1 view .LVU1058
 3664 0276 03B0     		add	sp, sp, #12
 3665              		.cfi_remember_state
 3666              		.cfi_def_cfa_offset 36
 3667              		@ sp needed
 3668 0278 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3669              		.cfi_restore 14
 3670              		.cfi_restore 11
 3671              		.cfi_restore 10
 3672              		.cfi_restore 9
 3673              		.cfi_restore 8
 3674              		.cfi_restore 7
 3675              		.cfi_restore 6
 3676              		.cfi_restore 5
 3677              		.cfi_restore 4
 3678              		.cfi_def_cfa_offset 0
 3679              	.LVL279:
2111:src/keys.c    **** 
 3680              		.loc 1 2111 10 view .LVU1059
 3681 027c FFF7FEBF 		b	arg_eval
 3682              	.LVL280:
 3683              	.L393:
 3684              		.cfi_restore_state
2246:src/keys.c    **** 			return arg_eval(n);
 3685              		.loc 1 2246 3 is_stmt 1 view .LVU1060
ARM GAS  /tmp/cc8lpfL1.s 			page 137


2246:src/keys.c    **** 			return arg_eval(n);
 3686              		.loc 1 2246 7 is_stmt 0 view .LVU1061
 3687 0280 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2246:src/keys.c    **** 			return arg_eval(n);
 3688              		.loc 1 2246 6 view .LVU1062
 3689 0282 5F06     		lsls	r7, r3, #25
 3690 0284 0AD4     		bmi	.L415
2246:src/keys.c    **** 			return arg_eval(n);
 3691              		.loc 1 2246 25 discriminator 1 view .LVU1063
 3692 0286 0121     		movs	r1, #1
 3693 0288 0320     		movs	r0, #3
 3694              	.LVL281:
2246:src/keys.c    **** 			return arg_eval(n);
 3695              		.loc 1 2246 25 discriminator 1 view .LVU1064
 3696 028a FFF7FEFF 		bl	arg_storcl
 3697              	.LVL282:
2246:src/keys.c    **** 			return arg_eval(n);
 3698              		.loc 1 2246 18 discriminator 1 view .LVU1065
 3699 028e 0028     		cmp	r0, #0
 3700 0290 7FF404AF 		bne	.L481
2246:src/keys.c    **** 			return arg_eval(n);
 3701              		.loc 1 2246 63 discriminator 2 view .LVU1066
 3702 0294 B8F1000F 		cmp	r8, #0
 3703 0298 3FF400AF 		beq	.L481
 3704              	.L415:
2247:src/keys.c    **** 		break;
 3705              		.loc 1 2247 4 is_stmt 1 view .LVU1067
2247:src/keys.c    **** 		break;
 3706              		.loc 1 2247 11 is_stmt 0 view .LVU1068
 3707 029c 3046     		mov	r0, r6
 3708 029e EAE7     		b	.L483
 3709              	.LVL283:
 3710              	.L376:
2093:src/keys.c    **** 	  case regT_idx:
 3711              		.loc 1 2093 6 is_stmt 1 view .LVU1069
2093:src/keys.c    **** 	  case regT_idx:
 3712              		.loc 1 2093 13 is_stmt 0 view .LVU1070
 3713 02a0 0320     		movs	r0, #3
 3714              	.LVL284:
 3715              	.L482:
2341:src/keys.c    **** 
 3716              		.loc 1 2341 1 view .LVU1071
 3717 02a2 03B0     		add	sp, sp, #12
 3718              		.cfi_remember_state
 3719              		.cfi_def_cfa_offset 36
 3720              		@ sp needed
 3721 02a4 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3722              		.cfi_restore 14
 3723              		.cfi_restore 11
 3724              		.cfi_restore 10
 3725              		.cfi_restore 9
 3726              		.cfi_restore 8
 3727              		.cfi_restore 7
 3728              		.cfi_restore 6
 3729              		.cfi_restore 5
 3730              		.cfi_restore 4
 3731              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/cc8lpfL1.s 			page 138


 3732              	.LVL285:
2091:src/keys.c    **** 	  case regZ_idx:
 3733              		.loc 1 2091 13 view .LVU1072
 3734 02a8 FFF7FEBF 		b	arg_digit
 3735              	.LVL286:
 3736              	.L377:
 3737              		.cfi_restore_state
2091:src/keys.c    **** 	  case regZ_idx:
 3738              		.loc 1 2091 6 is_stmt 1 view .LVU1073
2091:src/keys.c    **** 	  case regZ_idx:
 3739              		.loc 1 2091 13 is_stmt 0 view .LVU1074
 3740 02ac 0220     		movs	r0, #2
 3741              	.LVL287:
2091:src/keys.c    **** 	  case regZ_idx:
 3742              		.loc 1 2091 13 view .LVU1075
 3743 02ae F8E7     		b	.L482
 3744              	.LVL288:
 3745              	.L374:
2095:src/keys.c    **** 	  case 5:
 3746              		.loc 1 2095 6 is_stmt 1 view .LVU1076
2095:src/keys.c    **** 	  case 5:
 3747              		.loc 1 2095 13 is_stmt 0 view .LVU1077
 3748 02b0 0420     		movs	r0, #4
 3749              	.LVL289:
2095:src/keys.c    **** 	  case 5:
 3750              		.loc 1 2095 13 view .LVU1078
 3751 02b2 F6E7     		b	.L482
 3752              	.LVL290:
 3753              	.L491:
2140:src/keys.c    **** 		    base = RARG_SIG;
 3754              		.loc 1 2140 5 is_stmt 1 view .LVU1079
2140:src/keys.c    **** 		    base = RARG_SIG;
 3755              		.loc 1 2140 8 is_stmt 0 view .LVU1080
 3756 02b4 8E2D     		cmp	r5, #142
 3757 02b6 40F00B81 		bne	.L436
 3758 02ba 8D23     		movs	r3, #141
 3759 02bc 0093     		str	r3, [sp]
 3760              	.LVL291:
2141:src/keys.c    **** 		    break;
 3761              		.loc 1 2141 12 view .LVU1081
 3762 02be 1D46     		mov	r5, r3
 3763 02c0 10E7     		b	.L379
 3764              	.LVL292:
 3765              	.L492:
2141:src/keys.c    **** 		    break;
 3766              		.loc 1 2141 12 view .LVU1082
 3767 02c2 4D23     		movs	r3, #77
 3768 02c4 A7E7     		b	.L480
 3769              	.LVL293:
 3770              	.L398:
2315:src/keys.c    **** 			if (State2.dot)
 3771              		.loc 1 2315 3 is_stmt 1 view .LVU1083
2315:src/keys.c    **** 			if (State2.dot)
 3772              		.loc 1 2315 13 is_stmt 0 view .LVU1084
 3773 02c6 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
2315:src/keys.c    **** 			if (State2.dot)
 3774              		.loc 1 2315 6 view .LVU1085
ARM GAS  /tmp/cc8lpfL1.s 			page 139


 3775 02c8 002B     		cmp	r3, #0
 3776 02ca 40F0EC80 		bne	.L422
2316:src/keys.c    **** 				State2.dot = 0;
 3777              		.loc 1 2316 4 is_stmt 1 view .LVU1086
2316:src/keys.c    **** 				State2.dot = 0;
 3778              		.loc 1 2316 8 is_stmt 0 view .LVU1087
 3779 02ce 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2316:src/keys.c    **** 				State2.dot = 0;
 3780              		.loc 1 2316 7 view .LVU1088
 3781 02d0 13F04001 		ands	r1, r3, #64
 3782 02d4 40F0A080 		bne	.L423
2318:src/keys.c    **** 				State2.local = 0;
 3783              		.loc 1 2318 9 is_stmt 1 view .LVU1089
2318:src/keys.c    **** 				State2.local = 0;
 3784              		.loc 1 2318 13 is_stmt 0 view .LVU1090
 3785 02d8 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2318:src/keys.c    **** 				State2.local = 0;
 3786              		.loc 1 2318 12 view .LVU1091
 3787 02da 12F00100 		ands	r0, r2, #1
 3788              	.LVL294:
2318:src/keys.c    **** 				State2.local = 0;
 3789              		.loc 1 2318 12 view .LVU1092
 3790 02de 40F01181 		bne	.L493
2320:src/keys.c    **** 				State2.ind = 0;
 3791              		.loc 1 2320 9 is_stmt 1 view .LVU1093
2320:src/keys.c    **** 				State2.ind = 0;
 3792              		.loc 1 2320 12 is_stmt 0 view .LVU1094
 3793 02e2 1906     		lsls	r1, r3, #24
 3794 02e4 7FF5D8AE 		bpl	.L388
2321:src/keys.c    **** 			else
 3795              		.loc 1 2321 5 is_stmt 1 view .LVU1095
2321:src/keys.c    **** 			else
 3796              		.loc 1 2321 16 is_stmt 0 view .LVU1096
 3797 02e8 60F3C713 		bfi	r3, r0, #7, #1
 3798 02ec 6375     		strb	r3, [r4, #21]
2340:src/keys.c    **** }
 3799              		.loc 1 2340 9 view .LVU1097
 3800 02ee 3320     		movs	r0, #51
 3801 02f0 D5E6     		b	.L356
 3802              	.LVL295:
 3803              	.L396:
2250:src/keys.c    **** 		break;
 3804              		.loc 1 2250 3 is_stmt 1 view .LVU1098
 3805 02f2 0121     		movs	r1, #1
 3806 02f4 0420     		movs	r0, #4
 3807              	.LVL296:
2250:src/keys.c    **** 		break;
 3808              		.loc 1 2250 3 is_stmt 0 view .LVU1099
 3809 02f6 FFF7FEFF 		bl	arg_storcl
 3810              	.LVL297:
2251:src/keys.c    **** #else
 3811              		.loc 1 2251 3 is_stmt 1 view .LVU1100
2340:src/keys.c    **** }
 3812              		.loc 1 2340 9 is_stmt 0 view .LVU1101
 3813 02fa 3320     		movs	r0, #51
2251:src/keys.c    **** #else
 3814              		.loc 1 2251 3 view .LVU1102
ARM GAS  /tmp/cc8lpfL1.s 			page 140


 3815 02fc CFE6     		b	.L356
 3816              	.LVL298:
 3817              	.L395:
2290:src/keys.c    **** 		break;
 3818              		.loc 1 2290 3 is_stmt 1 view .LVU1103
 3819 02fe 0021     		movs	r1, #0
 3820 0300 0520     		movs	r0, #5
 3821              	.LVL299:
2290:src/keys.c    **** 		break;
 3822              		.loc 1 2290 3 is_stmt 0 view .LVU1104
 3823 0302 FFF7FEFF 		bl	arg_storcl
 3824              	.LVL300:
2291:src/keys.c    **** 
 3825              		.loc 1 2291 3 is_stmt 1 view .LVU1105
2340:src/keys.c    **** }
 3826              		.loc 1 2340 9 is_stmt 0 view .LVU1106
 3827 0306 3320     		movs	r0, #51
2291:src/keys.c    **** 
 3828              		.loc 1 2291 3 view .LVU1107
 3829 0308 C9E6     		b	.L356
 3830              	.LVL301:
 3831              	.L394:
2193:src/keys.c    **** 	    return process_arg_shuffle(3);
 3832              		.loc 1 2193 4 is_stmt 1 view .LVU1108
2193:src/keys.c    **** 	    return process_arg_shuffle(3);
 3833              		.loc 1 2193 8 is_stmt 0 view .LVU1109
 3834 030a A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2193:src/keys.c    **** 	    return process_arg_shuffle(3);
 3835              		.loc 1 2193 7 view .LVU1110
 3836 030c 9507     		lsls	r5, r2, #30
 3837 030e 7FF557AF 		bpl	.L400
2194:src/keys.c    **** 	case K51:       // X
 3838              		.loc 1 2194 6 is_stmt 1 view .LVU1111
2194:src/keys.c    **** 	case K51:       // X
 3839              		.loc 1 2194 13 is_stmt 0 view .LVU1112
 3840 0312 0320     		movs	r0, #3
 3841              	.LVL302:
 3842              	.L484:
2341:src/keys.c    **** 
 3843              		.loc 1 2341 1 view .LVU1113
 3844 0314 03B0     		add	sp, sp, #12
 3845              		.cfi_remember_state
 3846              		.cfi_def_cfa_offset 36
 3847              		@ sp needed
 3848 0316 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3849              		.cfi_restore 14
 3850              		.cfi_restore 11
 3851              		.cfi_restore 10
 3852              		.cfi_restore 9
 3853              		.cfi_restore 8
 3854              		.cfi_restore 7
 3855              		.cfi_restore 6
 3856              		.cfi_restore 5
 3857              		.cfi_restore 4
 3858              		.cfi_def_cfa_offset 0
 3859              	.LVL303:
2203:src/keys.c    **** #else
ARM GAS  /tmp/cc8lpfL1.s 			page 141


 3860              		.loc 1 2203 13 view .LVU1114
 3861 031a FFF7FEBF 		b	process_arg_shuffle
 3862              	.LVL304:
 3863              	.L392:
 3864              		.cfi_restore_state
2196:src/keys.c    **** 	    return process_arg_shuffle(0);
 3865              		.loc 1 2196 4 is_stmt 1 view .LVU1115
2196:src/keys.c    **** 	    return process_arg_shuffle(0);
 3866              		.loc 1 2196 8 is_stmt 0 view .LVU1116
 3867 031e A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2196:src/keys.c    **** 	    return process_arg_shuffle(0);
 3868              		.loc 1 2196 7 view .LVU1117
 3869 0320 9007     		lsls	r0, r2, #30
 3870              	.LVL305:
2196:src/keys.c    **** 	    return process_arg_shuffle(0);
 3871              		.loc 1 2196 7 view .LVU1118
 3872 0322 7FF54DAF 		bpl	.L400
2197:src/keys.c    **** 	case K52:	// Y
 3873              		.loc 1 2197 6 is_stmt 1 view .LVU1119
2197:src/keys.c    **** 	case K52:	// Y
 3874              		.loc 1 2197 13 is_stmt 0 view .LVU1120
 3875 0326 0020     		movs	r0, #0
 3876 0328 F4E7     		b	.L484
 3877              	.L501:
 3878 032a 00BF     		.align	2
 3879              	.L500:
 3880 032c 00000000 		.word	StateWhileOn
 3881 0330 00000000 		.word	.LANCHOR6
 3882 0334 00000000 		.word	.LANCHOR5
 3883 0338 ABAAAAAA 		.word	-1431655765
 3884 033c 00000000 		.word	argcmds
 3885              	.LVL306:
 3886              	.L390:
2202:src/keys.c    **** 	    return process_arg_shuffle(2);
 3887              		.loc 1 2202 4 is_stmt 1 view .LVU1121
2202:src/keys.c    **** 	    return process_arg_shuffle(2);
 3888              		.loc 1 2202 8 is_stmt 0 view .LVU1122
 3889 0340 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2202:src/keys.c    **** 	    return process_arg_shuffle(2);
 3890              		.loc 1 2202 7 view .LVU1123
 3891 0342 9207     		lsls	r2, r2, #30
 3892 0344 7FF53CAF 		bpl	.L400
2203:src/keys.c    **** #else
 3893              		.loc 1 2203 6 is_stmt 1 view .LVU1124
2203:src/keys.c    **** #else
 3894              		.loc 1 2203 13 is_stmt 0 view .LVU1125
 3895 0348 0220     		movs	r0, #2
 3896              	.LVL307:
2203:src/keys.c    **** #else
 3897              		.loc 1 2203 13 view .LVU1126
 3898 034a E3E7     		b	.L484
 3899              	.LVL308:
 3900              	.L389:
2239:src/keys.c    **** 			reset_arg();
 3901              		.loc 1 2239 3 is_stmt 1 view .LVU1127
2239:src/keys.c    **** 			reset_arg();
 3902              		.loc 1 2239 6 is_stmt 0 view .LVU1128
ARM GAS  /tmp/cc8lpfL1.s 			page 142


 3903 034c 009B     		ldr	r3, [sp]
 3904 034e 212B     		cmp	r3, #33
 3905 0350 00F0B980 		beq	.L412
2239:src/keys.c    **** 			reset_arg();
 3906              		.loc 1 2239 25 discriminator 1 view .LVU1129
 3907 0354 732B     		cmp	r3, #115
 3908 0356 00F0B680 		beq	.L412
2243:src/keys.c    **** 		break;
 3909              		.loc 1 2243 3 is_stmt 1 view .LVU1130
 3910 035a 0121     		movs	r1, #1
 3911 035c 0220     		movs	r0, #2
 3912              	.LVL309:
2243:src/keys.c    **** 		break;
 3913              		.loc 1 2243 3 is_stmt 0 view .LVU1131
 3914 035e FFF7FEFF 		bl	arg_storcl
 3915              	.LVL310:
2244:src/keys.c    **** 	case K44:		// multiply
 3916              		.loc 1 2244 3 is_stmt 1 view .LVU1132
2340:src/keys.c    **** }
 3917              		.loc 1 2340 9 is_stmt 0 view .LVU1133
 3918 0362 3320     		movs	r0, #51
2244:src/keys.c    **** 	case K44:		// multiply
 3919              		.loc 1 2244 3 view .LVU1134
 3920 0364 9BE6     		b	.L356
 3921              	.LVL311:
 3922              	.L387:
2231:src/keys.c    **** 
 3923              		.loc 1 2231 3 is_stmt 1 view .LVU1135
 3924              	.LBB485:
 3925              	.LBI485:
2038:src/keys.c    **** 
 3926              		.loc 1 2038 12 view .LVU1136
 3927              	.LBB486:
2040:src/keys.c    **** 		// Only valid at beginning of entry
 3928              		.loc 1 2040 2 view .LVU1137
2040:src/keys.c    **** 		// Only valid at beginning of entry
 3929              		.loc 1 2040 5 is_stmt 0 view .LVU1138
 3930 0366 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 3931 0368 002A     		cmp	r2, #0
 3932 036a 7FF497AE 		bne	.L481
2042:src/keys.c    **** 			// '..' or ENTER '.' = X
 3933              		.loc 1 2042 3 is_stmt 1 view .LVU1139
2042:src/keys.c    **** 			// '..' or ENTER '.' = X
 3934              		.loc 1 2042 6 is_stmt 0 view .LVU1140
 3935 036e 11F4A03F 		tst	r1, #81920
 3936 0372 40F0C180 		bne	.L494
2047:src/keys.c    **** 			// local register or flag select
 3937              		.loc 1 2047 3 is_stmt 1 view .LVU1141
2047:src/keys.c    **** 			// local register or flag select
 3938              		.loc 1 2047 20 is_stmt 0 view .LVU1142
 3939 0376 009B     		ldr	r3, [sp]
 3940 0378 0AEB0313 		add	r3, r10, r3, lsl #4
 3941 037c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
2047:src/keys.c    **** 			// local register or flag select
 3942              		.loc 1 2047 6 view .LVU1143
 3943 037e 1A07     		lsls	r2, r3, #28
 3944 0380 00F1A880 		bmi	.L408
ARM GAS  /tmp/cc8lpfL1.s 			page 143


2047:src/keys.c    **** 			// local register or flag select
 3945              		.loc 1 2047 27 view .LVU1144
 3946 0384 94F91530 		ldrsb	r3, [r4, #21]
 3947 0388 002B     		cmp	r3, #0
 3948 038a C0F2A380 		blt	.L408
2051:src/keys.c    **** 			// Special GTO . sequence
 3949              		.loc 1 2051 8 is_stmt 1 view .LVU1145
2051:src/keys.c    **** 			// Special GTO . sequence
 3950              		.loc 1 2051 29 is_stmt 0 view .LVU1146
 3951 038e 009B     		ldr	r3, [sp]
 3952 0390 A3F14409 		sub	r9, r3, #68
2051:src/keys.c    **** 			// Special GTO . sequence
 3953              		.loc 1 2051 11 view .LVU1147
 3954 0394 B9F1010F 		cmp	r9, #1
 3955 0398 3FF680AE 		bhi	.L481
2053:src/keys.c    **** 				State2.gtodot = 1;
 3956              		.loc 1 2053 4 is_stmt 1 view .LVU1148
2054:src/keys.c    **** 				reset_arg();
 3957              		.loc 1 2054 5 view .LVU1149
2054:src/keys.c    **** 				reset_arg();
 3958              		.loc 1 2054 19 is_stmt 0 view .LVU1150
 3959 039c 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 3960 039e 43F00103 		orr	r3, r3, #1
 3961 03a2 6375     		strb	r3, [r4, #21]
2055:src/keys.c    **** 			}
 3962              		.loc 1 2055 5 is_stmt 1 view .LVU1151
 3963 03a4 FFF7FEFF 		bl	reset_arg
 3964              	.LVL312:
2059:src/keys.c    **** }
 3965              		.loc 1 2059 9 is_stmt 0 view .LVU1152
 3966 03a8 3320     		movs	r0, #51
 3967 03aa 78E6     		b	.L356
 3968              	.LVL313:
 3969              	.L386:
2059:src/keys.c    **** }
 3970              		.loc 1 2059 9 view .LVU1153
 3971              	.LBE486:
 3972              	.LBE485:
2235:src/keys.c    **** 			return arg_eval(n);
 3973              		.loc 1 2235 3 is_stmt 1 view .LVU1154
2235:src/keys.c    **** 			return arg_eval(n);
 3974              		.loc 1 2235 7 is_stmt 0 view .LVU1155
 3975 03ac 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2235:src/keys.c    **** 			return arg_eval(n);
 3976              		.loc 1 2235 6 view .LVU1156
 3977 03ae 5B06     		lsls	r3, r3, #25
 3978 03b0 3FF574AF 		bmi	.L415
2235:src/keys.c    **** 			return arg_eval(n);
 3979              		.loc 1 2235 25 discriminator 1 view .LVU1157
 3980 03b4 0121     		movs	r1, #1
 3981 03b6 0846     		mov	r0, r1
 3982              	.LVL314:
2235:src/keys.c    **** 			return arg_eval(n);
 3983              		.loc 1 2235 25 discriminator 1 view .LVU1158
 3984 03b8 FFF7FEFF 		bl	arg_storcl
 3985              	.LVL315:
2235:src/keys.c    **** 			return arg_eval(n);
ARM GAS  /tmp/cc8lpfL1.s 			page 144


 3986              		.loc 1 2235 18 discriminator 1 view .LVU1159
 3987 03bc 0028     		cmp	r0, #0
 3988 03be 7FF46DAE 		bne	.L481
2246:src/keys.c    **** 			return arg_eval(n);
 3989              		.loc 1 2246 63 view .LVU1160
 3990 03c2 B8F1000F 		cmp	r8, #0
 3991 03c6 3FF469AE 		beq	.L481
 3992 03ca 67E7     		b	.L415
 3993              	.LVL316:
 3994              	.L385:
2171:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 3995              		.loc 1 2171 3 is_stmt 1 view .LVU1161
2171:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 3996              		.loc 1 2171 6 is_stmt 0 view .LVU1162
 3997 03cc BCF1000F 		cmp	ip, #0
 3998 03d0 3FF464AE 		beq	.L481
2172:src/keys.c    **** 		break;
 3999              		.loc 1 2172 4 is_stmt 1 view .LVU1163
 4000              	.LVL317:
 4001              	.LBB489:
 4002              	.LBI489:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 4003              		.loc 1 104 20 view .LVU1164
 4004              	.LBB490:
 105:src/keys.c    **** 	State2.shifts = shift;
 4005              		.loc 1 105 2 view .LVU1165
 4006              	.LBB491:
 4007              	.LBI491:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4008              		.loc 1 96 13 view .LVU1166
 4009              	.LBB492:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4010              		.loc 1 97 2 view .LVU1167
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4011              		.loc 1 97 18 is_stmt 0 view .LVU1168
 4012 03d4 FFF7FEFF 		bl	shift_down
 4013              	.LVL318:
  98:src/keys.c    **** }
 4014              		.loc 1 98 2 is_stmt 1 view .LVU1169
 4015              	.LBE492:
 4016              	.LBE491:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4017              		.loc 1 106 2 view .LVU1170
 4018              	.LBE490:
 4019              	.LBE489:
2172:src/keys.c    **** 		break;
 4020              		.loc 1 2172 4 is_stmt 0 view .LVU1171
 4021 03d8 019B     		ldr	r3, [sp, #4]
 4022 03da B3F1010A 		subs	r10, r3, #1
 4023 03de 18BF     		it	ne
 4024 03e0 4FF0010A 		movne	r10, #1
 4025 03e4 84F810A0 		strb	r10, [r4, #16]
 4026              	.LBB495:
 4027              	.LBB493:
 108:src/keys.c    **** }
 4028              		.loc 1 108 2 is_stmt 1 view .LVU1172
 4029              	.LBE493:
ARM GAS  /tmp/cc8lpfL1.s 			page 145


 4030              	.LBE495:
2340:src/keys.c    **** }
 4031              		.loc 1 2340 9 is_stmt 0 view .LVU1173
 4032 03e8 3320     		movs	r0, #51
 4033              	.LBB496:
 4034              	.LBB494:
 108:src/keys.c    **** }
 4035              		.loc 1 108 9 view .LVU1174
 4036 03ea 58E6     		b	.L356
 4037              	.LVL319:
 4038              	.L384:
 108:src/keys.c    **** }
 4039              		.loc 1 108 9 view .LVU1175
 4040              	.LBE494:
 4041              	.LBE496:
2176:src/keys.c    **** 			State2.ind = ! State2.ind;
 4042              		.loc 1 2176 3 is_stmt 1 view .LVU1176
2176:src/keys.c    **** 			State2.ind = ! State2.ind;
 4043              		.loc 1 2176 7 is_stmt 0 view .LVU1177
 4044 03ec 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
2176:src/keys.c    **** 			State2.ind = ! State2.ind;
 4045              		.loc 1 2176 6 view .LVU1178
 4046 03ee 5706     		lsls	r7, r2, #25
 4047 03f0 3FF554AE 		bmi	.L481
2176:src/keys.c    **** 			State2.ind = ! State2.ind;
 4048              		.loc 1 2176 35 discriminator 1 view .LVU1179
 4049 03f4 009B     		ldr	r3, [sp]
 4050 03f6 0AEB0319 		add	r9, r10, r3, lsl #4
 4051 03fa 99F80530 		ldrb	r3, [r9, #5]	@ zero_extendqisi2
2176:src/keys.c    **** 			State2.ind = ! State2.ind;
 4052              		.loc 1 2176 19 discriminator 1 view .LVU1180
 4053 03fe DE07     		lsls	r6, r3, #31
 4054              	.LVL320:
2176:src/keys.c    **** 			State2.ind = ! State2.ind;
 4055              		.loc 1 2176 19 discriminator 1 view .LVU1181
 4056 0400 7FF54CAE 		bpl	.L481
2177:src/keys.c    **** 			if (! stack_reg)
 4057              		.loc 1 2177 4 is_stmt 1 view .LVU1182
2177:src/keys.c    **** 			if (! stack_reg)
 4058              		.loc 1 2177 17 is_stmt 0 view .LVU1183
 4059 0404 D343     		mvns	r3, r2
 4060 0406 C3F3C013 		ubfx	r3, r3, #7, #1
2177:src/keys.c    **** 			if (! stack_reg)
 4061              		.loc 1 2177 15 view .LVU1184
 4062 040a 63F3C712 		bfi	r2, r3, #7, #1
 4063 040e 6275     		strb	r2, [r4, #21]
2178:src/keys.c    **** 				State2.dot = 0;
 4064              		.loc 1 2178 4 is_stmt 1 view .LVU1185
2178:src/keys.c    **** 				State2.dot = 0;
 4065              		.loc 1 2178 7 is_stmt 0 view .LVU1186
 4066 0410 B8F1000F 		cmp	r8, #0
 4067 0414 7FF442AE 		bne	.L481
 4068              	.L423:
2179:src/keys.c    **** 		}
 4069              		.loc 1 2179 5 is_stmt 1 view .LVU1187
2179:src/keys.c    **** 		}
 4070              		.loc 1 2179 16 is_stmt 0 view .LVU1188
ARM GAS  /tmp/cc8lpfL1.s 			page 146


 4071 0418 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 4072 041a 6FF38613 		bfc	r3, #6, #1
 4073 041e 6375     		strb	r3, [r4, #21]
2340:src/keys.c    **** }
 4074              		.loc 1 2340 9 view .LVU1189
 4075 0420 3320     		movs	r0, #51
 4076              	.LVL321:
2340:src/keys.c    **** }
 4077              		.loc 1 2340 9 view .LVU1190
 4078 0422 3CE6     		b	.L356
 4079              	.LVL322:
 4080              	.L382:
2184:src/keys.c    **** 			break;
 4081              		.loc 1 2184 3 is_stmt 1 view .LVU1191
2184:src/keys.c    **** 			break;
 4082              		.loc 1 2184 18 is_stmt 0 view .LVU1192
 4083 0424 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2184:src/keys.c    **** 			break;
 4084              		.loc 1 2184 6 view .LVU1193
 4085 0426 13F0C00F 		tst	r3, #192
 4086 042a 7FF437AE 		bne	.L481
2186:src/keys.c    **** 			CmdBase = RARG_STOM;
 4087              		.loc 1 2186 3 is_stmt 1 view .LVU1194
2186:src/keys.c    **** 			CmdBase = RARG_STOM;
 4088              		.loc 1 2186 6 is_stmt 0 view .LVU1195
 4089 042e 009B     		ldr	r3, [sp]
 4090 0430 032B     		cmp	r3, #3
 4091 0432 5DD0     		beq	.L495
2188:src/keys.c    **** 			CmdBase = RARG_RCLM;
 4092              		.loc 1 2188 8 is_stmt 1 view .LVU1196
2188:src/keys.c    **** 			CmdBase = RARG_RCLM;
 4093              		.loc 1 2188 11 is_stmt 0 view .LVU1197
 4094 0434 009B     		ldr	r3, [sp]
 4095 0436 0A2B     		cmp	r3, #10
 4096 0438 7FF430AE 		bne	.L481
2189:src/keys.c    **** 		break;
 4097              		.loc 1 2189 4 is_stmt 1 view .LVU1198
2189:src/keys.c    **** 		break;
 4098              		.loc 1 2189 12 is_stmt 0 view .LVU1199
 4099 043c 7823     		movs	r3, #120
 4100 043e E377     		strb	r3, [r4, #31]
2340:src/keys.c    **** }
 4101              		.loc 1 2340 9 view .LVU1200
 4102 0440 3320     		movs	r0, #51
 4103              	.LVL323:
2340:src/keys.c    **** }
 4104              		.loc 1 2340 9 view .LVU1201
 4105 0442 2CE6     		b	.L356
 4106              	.LVL324:
 4107              	.L399:
2294:src/keys.c    **** 			if (argcmds[base].label) {
 4108              		.loc 1 2294 3 is_stmt 1 view .LVU1202
2294:src/keys.c    **** 			if (argcmds[base].label) {
 4109              		.loc 1 2294 6 is_stmt 0 view .LVU1203
 4110 0444 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 4111 0446 4AB1     		cbz	r2, .L496
2308:src/keys.c    **** 			return arg_eval(State2.digval);
ARM GAS  /tmp/cc8lpfL1.s 			page 147


 4112              		.loc 1 2308 10 is_stmt 1 view .LVU1204
2309:src/keys.c    **** 		else if (stack_reg)
 4113              		.loc 1 2309 4 view .LVU1205
2309:src/keys.c    **** 		else if (stack_reg)
 4114              		.loc 1 2309 11 is_stmt 0 view .LVU1206
 4115 0448 2089     		ldrh	r0, [r4, #8]
 4116              	.LVL325:
2309:src/keys.c    **** 		else if (stack_reg)
 4117              		.loc 1 2309 11 view .LVU1207
 4118 044a 14E7     		b	.L483
 4119              	.LVL326:
 4120              	.L391:
2199:src/keys.c    **** 	    return process_arg_shuffle(1);
 4121              		.loc 1 2199 4 is_stmt 1 view .LVU1208
2199:src/keys.c    **** 	    return process_arg_shuffle(1);
 4122              		.loc 1 2199 8 is_stmt 0 view .LVU1209
 4123 044c A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2199:src/keys.c    **** 	    return process_arg_shuffle(1);
 4124              		.loc 1 2199 7 view .LVU1210
 4125 044e 9107     		lsls	r1, r2, #30
 4126 0450 7FF5B6AE 		bpl	.L400
2200:src/keys.c    **** 	case K53:       // Z
 4127              		.loc 1 2200 6 is_stmt 1 view .LVU1211
2200:src/keys.c    **** 	case K53:       // Z
 4128              		.loc 1 2200 13 is_stmt 0 view .LVU1212
 4129 0454 0120     		movs	r0, #1
 4130              	.LVL327:
2200:src/keys.c    **** 	case K53:       // Z
 4131              		.loc 1 2200 13 view .LVU1213
 4132 0456 5DE7     		b	.L484
 4133              	.LVL328:
 4134              	.L438:
2116:src/keys.c    **** 		case K_UP:	// up arrow
 4135              		.loc 1 2116 3 view .LVU1214
 4136 0458 8D23     		movs	r3, #141
 4137              	.LVL329:
2146:src/keys.c    **** #else
 4138              		.loc 1 2146 3 is_stmt 1 view .LVU1215
 4139 045a DCE6     		b	.L480
 4140              	.L496:
2294:src/keys.c    **** 			if (argcmds[base].label) {
 4141              		.loc 1 2294 43 is_stmt 0 discriminator 1 view .LVU1216
 4142 045c 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
 4143 045e 12F0C00F 		tst	r2, #192
 4144 0462 13D1     		bne	.L417
2295:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4145              		.loc 1 2295 4 is_stmt 1 view .LVU1217
2295:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4146              		.loc 1 2295 21 is_stmt 0 view .LVU1218
 4147 0464 009B     		ldr	r3, [sp]
 4148 0466 0AEB0313 		add	r3, r10, r3, lsl #4
 4149 046a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
2295:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4150              		.loc 1 2295 7 view .LVU1219
 4151 046c 9E06     		lsls	r6, r3, #26
 4152              	.LVL330:
2295:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
ARM GAS  /tmp/cc8lpfL1.s 			page 148


 4153              		.loc 1 2295 7 view .LVU1220
 4154 046e 4ED4     		bmi	.L497
2300:src/keys.c    **** 				reset_arg();
 4155              		.loc 1 2300 11 is_stmt 1 view .LVU1221
2300:src/keys.c    **** 				reset_arg();
 4156              		.loc 1 2300 14 is_stmt 0 view .LVU1222
 4157 0470 0099     		ldr	r1, [sp]
 4158 0472 4E29     		cmp	r1, #78
 4159 0474 5DD0     		beq	.L498
2303:src/keys.c    **** 				reset_arg();
 4160              		.loc 1 2303 11 is_stmt 1 view .LVU1223
2303:src/keys.c    **** 				reset_arg();
 4161              		.loc 1 2303 14 is_stmt 0 view .LVU1224
 4162 0476 0099     		ldr	r1, [sp]
 4163 0478 4F29     		cmp	r1, #79
 4164 047a 5FD0     		beq	.L499
2306:src/keys.c    **** 				State2.dot = 1;
 4165              		.loc 1 2306 11 is_stmt 1 view .LVU1225
2306:src/keys.c    **** 				State2.dot = 1;
 4166              		.loc 1 2306 14 is_stmt 0 view .LVU1226
 4167 047c 5807     		lsls	r0, r3, #29
 4168              	.LVL331:
2306:src/keys.c    **** 				State2.dot = 1;
 4169              		.loc 1 2306 14 view .LVU1227
 4170 047e 7FF50DAE 		bpl	.L481
2307:src/keys.c    **** 		} else if (State2.numdigit > 0)
 4171              		.loc 1 2307 5 is_stmt 1 view .LVU1228
2307:src/keys.c    **** 		} else if (State2.numdigit > 0)
 4172              		.loc 1 2307 16 is_stmt 0 view .LVU1229
 4173 0482 42F04002 		orr	r2, r2, #64
 4174 0486 6275     		strb	r2, [r4, #21]
2340:src/keys.c    **** }
 4175              		.loc 1 2340 9 view .LVU1230
 4176 0488 3320     		movs	r0, #51
 4177 048a 08E6     		b	.L356
 4178              	.LVL332:
 4179              	.L417:
2308:src/keys.c    **** 			return arg_eval(State2.digval);
 4180              		.loc 1 2308 10 is_stmt 1 view .LVU1231
2310:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 4181              		.loc 1 2310 8 view .LVU1232
2310:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 4182              		.loc 1 2310 11 is_stmt 0 view .LVU1233
 4183 048c B8F1000F 		cmp	r8, #0
 4184 0490 3FF404AE 		beq	.L481
2311:src/keys.c    **** 		break;
 4185              		.loc 1 2311 4 is_stmt 1 view .LVU1234
2311:src/keys.c    **** 		break;
 4186              		.loc 1 2311 27 is_stmt 0 view .LVU1235
 4187 0494 C2F38013 		ubfx	r3, r2, #6, #1
2311:src/keys.c    **** 		break;
 4188              		.loc 1 2311 19 view .LVU1236
 4189 0498 C3F10103 		rsb	r3, r3, #1
2311:src/keys.c    **** 		break;
 4190              		.loc 1 2311 15 view .LVU1237
 4191 049c 63F38612 		bfi	r2, r3, #6, #1
 4192 04a0 6275     		strb	r2, [r4, #21]
ARM GAS  /tmp/cc8lpfL1.s 			page 149


2340:src/keys.c    **** }
 4193              		.loc 1 2340 9 view .LVU1238
 4194 04a2 3320     		movs	r0, #51
 4195              	.LVL333:
2340:src/keys.c    **** }
 4196              		.loc 1 2340 9 view .LVU1239
 4197 04a4 FBE5     		b	.L356
 4198              	.LVL334:
 4199              	.L422:
2326:src/keys.c    **** 			if (State2.shuffle)
 4200              		.loc 1 2326 4 is_stmt 1 view .LVU1240
2327:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4201              		.loc 1 2327 8 is_stmt 0 view .LVU1241
 4202 04a6 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2326:src/keys.c    **** 			if (State2.shuffle)
 4203              		.loc 1 2326 4 view .LVU1242
 4204 04a8 013B     		subs	r3, r3, #1
 4205 04aa DBB2     		uxtb	r3, r3
2327:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4206              		.loc 1 2327 7 view .LVU1243
 4207 04ac 9207     		lsls	r2, r2, #30
2326:src/keys.c    **** 			if (State2.shuffle)
 4208              		.loc 1 2326 4 view .LVU1244
 4209 04ae E372     		strb	r3, [r4, #11]
2327:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4210              		.loc 1 2327 4 is_stmt 1 view .LVU1245
2327:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4211              		.loc 1 2327 7 is_stmt 0 view .LVU1246
 4212 04b0 16D5     		bpl	.L425
2328:src/keys.c    **** 			else
 4213              		.loc 1 2328 5 is_stmt 1 view .LVU1247
2328:src/keys.c    **** 			else
 4214              		.loc 1 2328 19 is_stmt 0 view .LVU1248
 4215 04b2 2289     		ldrh	r2, [r4, #8]
2328:src/keys.c    **** 			else
 4216              		.loc 1 2328 46 view .LVU1249
 4217 04b4 5B00     		lsls	r3, r3, #1
2328:src/keys.c    **** 			else
 4218              		.loc 1 2328 26 view .LVU1250
 4219 04b6 0321     		movs	r1, #3
 4220 04b8 01FA03F3 		lsl	r3, r1, r3
2328:src/keys.c    **** 			else
 4221              		.loc 1 2328 19 view .LVU1251
 4222 04bc 22EA0303 		bic	r3, r2, r3
 4223 04c0 2381     		strh	r3, [r4, #8]	@ movhi
2340:src/keys.c    **** }
 4224              		.loc 1 2340 9 view .LVU1252
 4225 04c2 3320     		movs	r0, #51
 4226              	.LVL335:
2340:src/keys.c    **** }
 4227              		.loc 1 2340 9 view .LVU1253
 4228 04c4 EBE5     		b	.L356
 4229              	.LVL336:
 4230              	.L412:
2240:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
 4231              		.loc 1 2240 4 is_stmt 1 view .LVU1254
 4232 04c6 FFF7FEFF 		bl	reset_arg
ARM GAS  /tmp/cc8lpfL1.s 			page 150


 4233              	.LVL337:
2241:src/keys.c    **** 		}
 4234              		.loc 1 2241 4 view .LVU1255
2241:src/keys.c    **** 		}
 4235              		.loc 1 2241 11 is_stmt 0 view .LVU1256
 4236 04ca 40F27510 		movw	r0, #373
 4237 04ce E6E5     		b	.L356
 4238              	.LVL338:
 4239              	.L436:
2241:src/keys.c    **** 		}
 4240              		.loc 1 2241 11 view .LVU1257
 4241 04d0 8E25     		movs	r5, #142
 4242              	.LVL339:
2241:src/keys.c    **** 		}
 4243              		.loc 1 2241 11 view .LVU1258
 4244 04d2 07E6     		b	.L379
 4245              	.LVL340:
 4246              	.L408:
 4247              	.LBB497:
 4248              	.LBB487:
2049:src/keys.c    **** 		}
 4249              		.loc 1 2049 4 is_stmt 1 view .LVU1259
2049:src/keys.c    **** 		}
 4250              		.loc 1 2049 17 is_stmt 0 view .LVU1260
 4251 04d4 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 4252 04d6 43F00103 		orr	r3, r3, #1
 4253 04da A375     		strb	r3, [r4, #22]
2059:src/keys.c    **** }
 4254              		.loc 1 2059 9 view .LVU1261
 4255 04dc 3320     		movs	r0, #51
 4256              	.LVL341:
2049:src/keys.c    **** 		}
 4257              		.loc 1 2049 17 view .LVU1262
 4258 04de DEE5     		b	.L356
 4259              	.LVL342:
 4260              	.L425:
2049:src/keys.c    **** 		}
 4261              		.loc 1 2049 17 view .LVU1263
 4262              	.LBE487:
 4263              	.LBE497:
2330:src/keys.c    **** 		}
 4264              		.loc 1 2330 5 is_stmt 1 view .LVU1264
2330:src/keys.c    **** 		}
 4265              		.loc 1 2330 19 is_stmt 0 view .LVU1265
 4266 04e0 2389     		ldrh	r3, [r4, #8]
 4267 04e2 1A4A     		ldr	r2, .L502
 4268 04e4 A2FB0323 		umull	r2, r3, r2, r3
 4269 04e8 DB08     		lsrs	r3, r3, #3
 4270 04ea 2381     		strh	r3, [r4, #8]	@ movhi
2340:src/keys.c    **** }
 4271              		.loc 1 2340 9 view .LVU1266
 4272 04ec 3320     		movs	r0, #51
 4273              	.LVL343:
2340:src/keys.c    **** }
 4274              		.loc 1 2340 9 view .LVU1267
 4275 04ee D6E5     		b	.L356
 4276              	.LVL344:
ARM GAS  /tmp/cc8lpfL1.s 			page 151


 4277              	.L495:
2187:src/keys.c    **** 		else if (base == RARG_RCL)
 4278              		.loc 1 2187 4 is_stmt 1 view .LVU1268
2187:src/keys.c    **** 		else if (base == RARG_RCL)
 4279              		.loc 1 2187 12 is_stmt 0 view .LVU1269
 4280 04f0 7723     		movs	r3, #119
 4281 04f2 E377     		strb	r3, [r4, #31]
2340:src/keys.c    **** }
 4282              		.loc 1 2340 9 view .LVU1270
 4283 04f4 3320     		movs	r0, #51
 4284              	.LVL345:
2340:src/keys.c    **** }
 4285              		.loc 1 2340 9 view .LVU1271
 4286 04f6 D2E5     		b	.L356
 4287              	.LVL346:
 4288              	.L494:
 4289              	.LBB498:
 4290              	.LBB488:
2044:src/keys.c    **** 			return arg_eval(regX_idx);
 4291              		.loc 1 2044 4 is_stmt 1 view .LVU1272
2044:src/keys.c    **** 			return arg_eval(regX_idx);
 4292              		.loc 1 2044 17 is_stmt 0 view .LVU1273
 4293 04f8 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 4294 04fa 62F30003 		bfi	r3, r2, #0, #1
2045:src/keys.c    **** 		}
 4295              		.loc 1 2045 11 view .LVU1274
 4296 04fe 6420     		movs	r0, #100
 4297              	.LVL347:
2044:src/keys.c    **** 			return arg_eval(regX_idx);
 4298              		.loc 1 2044 17 view .LVU1275
 4299 0500 A375     		strb	r3, [r4, #22]
2045:src/keys.c    **** 		}
 4300              		.loc 1 2045 4 is_stmt 1 view .LVU1276
 4301 0502 B8E6     		b	.L483
 4302              	.L493:
2045:src/keys.c    **** 		}
 4303              		.loc 1 2045 4 is_stmt 0 view .LVU1277
 4304              	.LBE488:
 4305              	.LBE498:
2319:src/keys.c    **** 			else if (State2.ind)
 4306              		.loc 1 2319 5 is_stmt 1 view .LVU1278
2319:src/keys.c    **** 			else if (State2.ind)
 4307              		.loc 1 2319 18 is_stmt 0 view .LVU1279
 4308 0504 61F30002 		bfi	r2, r1, #0, #1
 4309 0508 A275     		strb	r2, [r4, #22]
2340:src/keys.c    **** }
 4310              		.loc 1 2340 9 view .LVU1280
 4311 050a 3320     		movs	r0, #51
 4312 050c C7E5     		b	.L356
 4313              	.LVL348:
 4314              	.L497:
2296:src/keys.c    **** 				State2.multi = 1;
 4315              		.loc 1 2296 5 is_stmt 1 view .LVU1281
 4316              	.LBB499:
 4317              	.LBI499:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 4318              		.loc 1 552 13 view .LVU1282
ARM GAS  /tmp/cc8lpfL1.s 			page 152


 4319              	.LBB500:
 553:src/keys.c    **** 		return;
 4320              		.loc 1 553 2 view .LVU1283
 553:src/keys.c    **** 		return;
 4321              		.loc 1 553 6 is_stmt 0 view .LVU1284
 4322 050e FFF7FEFF 		bl	is_bad_cmdline
 4323              	.LVL349:
 553:src/keys.c    **** 		return;
 4324              		.loc 1 553 5 view .LVU1285
 4325 0512 20B9     		cbnz	r0, .L419
 4326              	.LBE500:
 4327              	.LBE499:
2296:src/keys.c    **** 				State2.multi = 1;
 4328              		.loc 1 2296 31 view .LVU1286
 4329 0514 A5F14200 		sub	r0, r5, #66
 4330              	.LBB502:
 4331              	.LBB501:
 4332 0518 C0B2     		uxtb	r0, r0
 4333 051a FFF7FEFF 		bl	init_arg.part.0
 4334              	.LVL350:
 4335              	.L419:
2296:src/keys.c    **** 				State2.multi = 1;
 4336              		.loc 1 2296 31 view .LVU1287
 4337              	.LBE501:
 4338              	.LBE502:
2297:src/keys.c    **** 				State2.alphashift = 0;
 4339              		.loc 1 2297 5 is_stmt 1 view .LVU1288
2298:src/keys.c    **** 				State2.rarg = 0;
 4340              		.loc 1 2298 5 view .LVU1289
2299:src/keys.c    **** 			} else if (base == RARG_SCI) {
 4341              		.loc 1 2299 5 view .LVU1290
2297:src/keys.c    **** 				State2.alphashift = 0;
 4342              		.loc 1 2297 18 is_stmt 0 view .LVU1291
 4343 051e 6369     		ldr	r3, [r4, #20]
 4344 0520 23F44013 		bic	r3, r3, #3145728
 4345 0524 23F40063 		bic	r3, r3, #2048
 4346 0528 43F40063 		orr	r3, r3, #2048
 4347 052c 6361     		str	r3, [r4, #20]
2340:src/keys.c    **** }
 4348              		.loc 1 2340 9 view .LVU1292
 4349 052e 3320     		movs	r0, #51
 4350 0530 B5E5     		b	.L356
 4351              	.LVL351:
 4352              	.L498:
2301:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
 4353              		.loc 1 2301 5 is_stmt 1 view .LVU1293
 4354 0532 FFF7FEFF 		bl	reset_arg
 4355              	.LVL352:
2302:src/keys.c    **** 			} else if (base == RARG_ENG) {
 4356              		.loc 1 2302 5 view .LVU1294
2302:src/keys.c    **** 			} else if (base == RARG_ENG) {
 4357              		.loc 1 2302 12 is_stmt 0 view .LVU1295
 4358 0536 40F25510 		movw	r0, #341
 4359 053a B0E5     		b	.L356
 4360              	.LVL353:
 4361              	.L499:
2304:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
ARM GAS  /tmp/cc8lpfL1.s 			page 153


 4362              		.loc 1 2304 5 is_stmt 1 view .LVU1296
 4363 053c FFF7FEFF 		bl	reset_arg
 4364              	.LVL354:
2305:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 4365              		.loc 1 2305 5 view .LVU1297
2305:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 4366              		.loc 1 2305 12 is_stmt 0 view .LVU1298
 4367 0540 4FF4AB70 		mov	r0, #342
 4368 0544 ABE5     		b	.L356
 4369              	.LVL355:
 4370              	.L373:
2089:src/keys.c    **** 	  case regY_idx:
 4371              		.loc 1 2089 6 is_stmt 1 view .LVU1299
2089:src/keys.c    **** 	  case regY_idx:
 4372              		.loc 1 2089 13 is_stmt 0 view .LVU1300
 4373 0546 0120     		movs	r0, #1
 4374              	.LVL356:
2089:src/keys.c    **** 	  case regY_idx:
 4375              		.loc 1 2089 13 view .LVU1301
 4376 0548 ABE6     		b	.L482
 4377              	.L503:
 4378 054a 00BF     		.align	2
 4379              	.L502:
 4380 054c CDCCCCCC 		.word	-858993459
 4381              		.cfi_endproc
 4382              	.LFE42:
 4384              		.section	.text.cur_shift,"ax",%progbits
 4385              		.align	1
 4386              		.p2align 2,,3
 4387              		.global	cur_shift
 4388              		.syntax unified
 4389              		.thumb
 4390              		.thumb_func
 4391              		.fpu fpv4-sp-d16
 4393              	cur_shift:
 4394              	.LFB0:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4395              		.loc 1 96 29 is_stmt 1 view -0
 4396              		.cfi_startproc
 4397              		@ args = 0, pretend = 0, frame = 0
 4398              		@ frame_needed = 0, uses_anonymous_args = 0
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4399              		.loc 1 97 2 view .LVU1303
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4400              		.loc 1 96 29 is_stmt 0 view .LVU1304
 4401 0000 08B5     		push	{r3, lr}
 4402              		.cfi_def_cfa_offset 8
 4403              		.cfi_offset 3, -8
 4404              		.cfi_offset 14, -4
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4405              		.loc 1 97 18 view .LVU1305
 4406 0002 FFF7FEFF 		bl	shift_down
 4407              	.LVL357:
  98:src/keys.c    **** }
 4408              		.loc 1 98 2 is_stmt 1 view .LVU1306
  98:src/keys.c    **** }
 4409              		.loc 1 98 52 is_stmt 0 view .LVU1307
ARM GAS  /tmp/cc8lpfL1.s 			page 154


 4410 0006 08B9     		cbnz	r0, .L505
  98:src/keys.c    **** }
 4411              		.loc 1 98 52 discriminator 1 view .LVU1308
 4412 0008 014B     		ldr	r3, .L507
 4413 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 4414              	.LVL358:
 4415              	.L505:
  99:src/keys.c    **** 
 4416              		.loc 1 99 1 discriminator 4 view .LVU1309
 4417 000c 08BD     		pop	{r3, pc}
 4418              	.L508:
 4419 000e 00BF     		.align	2
 4420              	.L507:
 4421 0010 00000000 		.word	StateWhileOn
 4422              		.cfi_endproc
 4423              	.LFE0:
 4425              		.section	.text.reset_shift,"ax",%progbits
 4426              		.align	1
 4427              		.p2align 2,,3
 4428              		.global	reset_shift
 4429              		.syntax unified
 4430              		.thumb
 4431              		.thumb_func
 4432              		.fpu fpv4-sp-d16
 4434              	reset_shift:
 4435              	.LFB2:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 4436              		.loc 1 114 31 is_stmt 1 view -0
 4437              		.cfi_startproc
 4438              		@ args = 0, pretend = 0, frame = 0
 4439              		@ frame_needed = 0, uses_anonymous_args = 0
 115:src/keys.c    **** }
 4440              		.loc 1 115 2 view .LVU1311
 4441              	.LVL359:
 4442              	.LBB503:
 4443              	.LBI503:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 4444              		.loc 1 104 20 view .LVU1312
 4445              	.LBB504:
 105:src/keys.c    **** 	State2.shifts = shift;
 4446              		.loc 1 105 2 view .LVU1313
 4447              	.LBB505:
 4448              	.LBI505:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4449              		.loc 1 96 13 view .LVU1314
 4450              	.LBB506:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4451              		.loc 1 97 2 view .LVU1315
 4452              	.LBE506:
 4453              	.LBE505:
 4454              	.LBE504:
 4455              	.LBE503:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 4456              		.loc 1 114 31 is_stmt 0 view .LVU1316
 4457 0000 08B5     		push	{r3, lr}
 4458              		.cfi_def_cfa_offset 8
 4459              		.cfi_offset 3, -8
ARM GAS  /tmp/cc8lpfL1.s 			page 155


 4460              		.cfi_offset 14, -4
 4461              	.LBB510:
 4462              	.LBB509:
 4463              	.LBB508:
 4464              	.LBB507:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4465              		.loc 1 97 18 view .LVU1317
 4466 0002 FFF7FEFF 		bl	shift_down
 4467              	.LVL360:
  98:src/keys.c    **** }
 4468              		.loc 1 98 2 is_stmt 1 view .LVU1318
  98:src/keys.c    **** }
 4469              		.loc 1 98 52 is_stmt 0 view .LVU1319
 4470 0006 034B     		ldr	r3, .L514
 4471 0008 00B9     		cbnz	r0, .L510
 4472 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 4473              	.LVL361:
 4474              	.L510:
  98:src/keys.c    **** }
 4475              		.loc 1 98 52 view .LVU1320
 4476              	.LBE507:
 4477              	.LBE508:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4478              		.loc 1 106 2 is_stmt 1 view .LVU1321
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4479              		.loc 1 106 16 is_stmt 0 view .LVU1322
 4480 000c 0022     		movs	r2, #0
 4481 000e 1A74     		strb	r2, [r3, #16]
 108:src/keys.c    **** }
 4482              		.loc 1 108 2 is_stmt 1 view .LVU1323
 4483              	.LVL362:
 108:src/keys.c    **** }
 4484              		.loc 1 108 2 is_stmt 0 view .LVU1324
 4485              	.LBE509:
 4486              	.LBE510:
 116:src/keys.c    **** 
 4487              		.loc 1 116 1 view .LVU1325
 4488 0010 08BD     		pop	{r3, pc}
 4489              	.L515:
 4490 0012 00BF     		.align	2
 4491              	.L514:
 4492 0014 00000000 		.word	StateWhileOn
 4493              		.cfi_endproc
 4494              	.LFE2:
 4496              		.section	.text.keycode_to_row_column,"ax",%progbits
 4497              		.align	1
 4498              		.p2align 2,,3
 4499              		.global	keycode_to_row_column
 4500              		.syntax unified
 4501              		.thumb
 4502              		.thumb_func
 4503              		.fpu fpv4-sp-d16
 4505              	keycode_to_row_column:
 4506              	.LVL363:
 4507              	.LFB6:
 180:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 4508              		.loc 1 180 1 is_stmt 1 view -0
ARM GAS  /tmp/cc8lpfL1.s 			page 156


 4509              		.cfi_startproc
 4510              		@ args = 0, pretend = 0, frame = 0
 4511              		@ frame_needed = 0, uses_anonymous_args = 0
 4512              		@ link register save eliminated.
 181:src/keys.c    **** }
 4513              		.loc 1 181 2 view .LVU1327
 181:src/keys.c    **** }
 4514              		.loc 1 181 18 is_stmt 0 view .LVU1328
 4515 0000 074A     		ldr	r2, .L517
 4516 0002 82FB0032 		smull	r3, r2, r2, r0
 4517 0006 A2EBE073 		sub	r3, r2, r0, asr #31
 181:src/keys.c    **** }
 4518              		.loc 1 181 24 view .LVU1329
 4519 000a 03EB8302 		add	r2, r3, r3, lsl #2
 4520 000e 5200     		lsls	r2, r2, #1
 181:src/keys.c    **** }
 4521              		.loc 1 181 33 view .LVU1330
 4522 0010 03EB4303 		add	r3, r3, r3, lsl #1
 4523 0014 A0EB4303 		sub	r3, r0, r3, lsl #1
 181:src/keys.c    **** }
 4524              		.loc 1 181 12 view .LVU1331
 4525 0018 02F10B00 		add	r0, r2, #11
 4526              	.LVL364:
 182:src/keys.c    **** 
 4527              		.loc 1 182 1 view .LVU1332
 4528 001c 1844     		add	r0, r0, r3
 4529 001e 7047     		bx	lr
 4530              	.L518:
 4531              		.align	2
 4532              	.L517:
 4533 0020 ABAAAA2A 		.word	715827883
 4534              		.cfi_endproc
 4535              	.LFE6:
 4537              		.section	.text.row_column_to_keycode,"ax",%progbits
 4538              		.align	1
 4539              		.p2align 2,,3
 4540              		.global	row_column_to_keycode
 4541              		.syntax unified
 4542              		.thumb
 4543              		.thumb_func
 4544              		.fpu fpv4-sp-d16
 4546              	row_column_to_keycode:
 4547              	.LVL365:
 4548              	.LFB7:
 190:src/keys.c    **** 	int row = c / 10 - 1;
 4549              		.loc 1 190 1 is_stmt 1 view -0
 4550              		.cfi_startproc
 4551              		@ args = 0, pretend = 0, frame = 0
 4552              		@ frame_needed = 0, uses_anonymous_args = 0
 4553              		@ link register save eliminated.
 191:src/keys.c    **** 	int col = c % 10 - 1;
 4554              		.loc 1 191 2 view .LVU1334
 191:src/keys.c    **** 	int col = c % 10 - 1;
 4555              		.loc 1 191 14 is_stmt 0 view .LVU1335
 4556 0000 0E4A     		ldr	r2, .L525
 4557 0002 82FB0032 		smull	r3, r2, r2, r0
 4558 0006 C317     		asrs	r3, r0, #31
ARM GAS  /tmp/cc8lpfL1.s 			page 157


 4559 0008 C3EBA203 		rsb	r3, r3, r2, asr #2
 192:src/keys.c    **** 
 4560              		.loc 1 192 14 view .LVU1336
 4561 000c 03EB8302 		add	r2, r3, r3, lsl #2
 191:src/keys.c    **** 	int col = c % 10 - 1;
 4562              		.loc 1 191 6 view .LVU1337
 4563 0010 013B     		subs	r3, r3, #1
 4564              	.LVL366:
 192:src/keys.c    **** 
 4565              		.loc 1 192 2 is_stmt 1 view .LVU1338
 192:src/keys.c    **** 
 4566              		.loc 1 192 14 is_stmt 0 view .LVU1339
 4567 0012 A0EB4200 		sub	r0, r0, r2, lsl #1
 4568              	.LVL367:
 194:src/keys.c    **** 		return -1;
 4569              		.loc 1 194 5 view .LVU1340
 4570 0016 062B     		cmp	r3, #6
 192:src/keys.c    **** 
 4571              		.loc 1 192 6 view .LVU1341
 4572 0018 00F1FF30 		add	r0, r0, #-1
 4573              	.LVL368:
 194:src/keys.c    **** 		return -1;
 4574              		.loc 1 194 2 is_stmt 1 view .LVU1342
 194:src/keys.c    **** 		return -1;
 4575              		.loc 1 194 5 is_stmt 0 view .LVU1343
 4576 001c 0AD8     		bhi	.L524
 194:src/keys.c    **** 		return -1;
 4577              		.loc 1 194 36 discriminator 1 view .LVU1344
 4578 001e 012B     		cmp	r3, #1
 4579 0020 CCBF     		ite	gt
 4580 0022 0422     		movgt	r2, #4
 4581 0024 0522     		movle	r2, #5
 194:src/keys.c    **** 		return -1;
 4582              		.loc 1 194 25 discriminator 1 view .LVU1345
 4583 0026 8242     		cmp	r2, r0
 4584 0028 04DB     		blt	.L524
 196:src/keys.c    **** }
 4585              		.loc 1 196 2 is_stmt 1 view .LVU1346
 196:src/keys.c    **** }
 4586              		.loc 1 196 13 is_stmt 0 view .LVU1347
 4587 002a 03EB4303 		add	r3, r3, r3, lsl #1
 4588              	.LVL369:
 196:src/keys.c    **** }
 4589              		.loc 1 196 17 view .LVU1348
 4590 002e 00EB4300 		add	r0, r0, r3, lsl #1
 4591              	.LVL370:
 196:src/keys.c    **** }
 4592              		.loc 1 196 17 view .LVU1349
 4593 0032 7047     		bx	lr
 4594              	.LVL371:
 4595              	.L524:
 195:src/keys.c    **** 	return row * 6 + col;
 4596              		.loc 1 195 10 view .LVU1350
 4597 0034 4FF0FF30 		mov	r0, #-1
 4598              	.LVL372:
 197:src/keys.c    **** 
 4599              		.loc 1 197 1 view .LVU1351
ARM GAS  /tmp/cc8lpfL1.s 			page 158


 4600 0038 7047     		bx	lr
 4601              	.L526:
 4602 003a 00BF     		.align	2
 4603              	.L525:
 4604 003c 67666666 		.word	1717986919
 4605              		.cfi_endproc
 4606              	.LFE7:
 4608              		.section	.text.keycode_to_digit_or_register,"ax",%progbits
 4609              		.align	1
 4610              		.p2align 2,,3
 4611              		.global	keycode_to_digit_or_register
 4612              		.syntax unified
 4613              		.thumb
 4614              		.thumb_func
 4615              		.fpu fpv4-sp-d16
 4617              	keycode_to_digit_or_register:
 4618              	.LVL373:
 4619              	.LFB8:
 211:src/keys.c    ****   static const unsigned char map[] = {
 4620              		.loc 1 211 1 is_stmt 1 view -0
 4621              		.cfi_startproc
 4622              		@ args = 0, pretend = 0, frame = 0
 4623              		@ frame_needed = 0, uses_anonymous_args = 0
 4624              		@ link register save eliminated.
 212:src/keys.c    ****     // K00 - K05
 4625              		.loc 1 212 3 view .LVU1353
 234:src/keys.c    **** }
 4626              		.loc 1 234 3 view .LVU1354
 4627              	.LBB511:
 4628              	.LBI511:
 131:src/keys.c    **** {
 4629              		.loc 1 131 12 view .LVU1355
 4630              	.LBB512:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 4631              		.loc 1 133 2 view .LVU1356
 143:src/keys.c    **** }
 4632              		.loc 1 143 2 view .LVU1357
 143:src/keys.c    **** }
 4633              		.loc 1 143 23 is_stmt 0 view .LVU1358
 4634 0000 024B     		ldr	r3, .L528
 4635              	.LBE512:
 4636              	.LBE511:
 234:src/keys.c    **** }
 4637              		.loc 1 234 28 view .LVU1359
 4638 0002 034A     		ldr	r2, .L528+4
 4639              	.LBB514:
 4640              	.LBB513:
 143:src/keys.c    **** }
 4641              		.loc 1 143 23 view .LVU1360
 4642 0004 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 4643              	.LBE513:
 4644              	.LBE514:
 235:src/keys.c    **** #else
 4645              		.loc 1 235 1 view .LVU1361
 4646 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 4647              	.LVL374:
 235:src/keys.c    **** #else
ARM GAS  /tmp/cc8lpfL1.s 			page 159


 4648              		.loc 1 235 1 view .LVU1362
 4649 0008 7047     		bx	lr
 4650              	.L529:
 4651 000a 00BF     		.align	2
 4652              	.L528:
 4653 000c 00000000 		.word	.LANCHOR6
 4654 0010 00000000 		.word	.LANCHOR5
 4655              		.cfi_endproc
 4656              	.LFE8:
 4658              		.section	.text.init_state,"ax",%progbits
 4659              		.align	1
 4660              		.p2align 2,,3
 4661              		.global	init_state
 4662              		.syntax unified
 4663              		.thumb
 4664              		.thumb_func
 4665              		.fpu fpv4-sp-d16
 4667              	init_state:
 4668              	.LFB13:
 615:src/keys.c    **** #ifndef REALBUILD
 4669              		.loc 1 615 23 is_stmt 1 view -0
 4670              		.cfi_startproc
 4671              		@ args = 0, pretend = 0, frame = 0
 4672              		@ frame_needed = 0, uses_anonymous_args = 0
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4673              		.loc 1 617 2 view .LVU1364
 615:src/keys.c    **** #ifndef REALBUILD
 4674              		.loc 1 615 23 is_stmt 0 view .LVU1365
 4675 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 4676              		.cfi_def_cfa_offset 32
 4677              		.cfi_offset 3, -32
 4678              		.cfi_offset 4, -28
 4679              		.cfi_offset 5, -24
 4680              		.cfi_offset 6, -20
 4681              		.cfi_offset 7, -16
 4682              		.cfi_offset 8, -12
 4683              		.cfi_offset 9, -8
 4684              		.cfi_offset 14, -4
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4685              		.loc 1 617 25 view .LVU1366
 4686 0004 1B4C     		ldr	r4, .L532
 625:src/keys.c    **** 	// Removed: will clear any locals on power off
 4687              		.loc 1 625 10 view .LVU1367
 4688 0006 4FF00008 		mov	r8, #0
 629:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 4689              		.loc 1 629 2 view .LVU1368
 4690 000a 4146     		mov	r1, r8
 4691 000c 1422     		movs	r2, #20
 4692 000e 04F10800 		add	r0, r4, #8
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4693              		.loc 1 617 25 view .LVU1369
 4694 0012 257E     		ldrb	r5, [r4, #24]	@ zero_extendqisi2
 618:src/keys.c    **** #else
 4695              		.loc 1 618 25 view .LVU1370
 4696 0014 E67D     		ldrb	r6, [r4, #23]	@ zero_extendqisi2
 622:src/keys.c    **** 	int k = LastKey;
 4697              		.loc 1 622 10 view .LVU1371
ARM GAS  /tmp/cc8lpfL1.s 			page 160


 4698 0016 A77C     		ldrb	r7, [r4, #18]	@ zero_extendqisi2
 623:src/keys.c    **** 
 4699              		.loc 1 623 10 view .LVU1372
 4700 0018 94F91390 		ldrsb	r9, [r4, #19]
 625:src/keys.c    **** 	// Removed: will clear any locals on power off
 4701              		.loc 1 625 10 view .LVU1373
 4702 001c 84F81F80 		strb	r8, [r4, #31]
 629:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 4703              		.loc 1 629 2 view .LVU1374
 4704 0020 FFF7FEFF 		bl	xset
 4705              	.LVL375:
 667:src/keys.c    **** #endif
 4706              		.loc 1 667 2 view .LVU1375
 4707 0024 144B     		ldr	r3, .L532+4
 4708 0026 1B68     		ldr	r3, [r3]
 4709 0028 93F8AD27 		ldrb	r2, [r3, #1965]	@ zero_extendqisi2
 4710 002c 68F34102 		bfi	r2, r8, #1, #1
 4711 0030 83F8AD27 		strb	r2, [r3, #1965]
 675:src/keys.c    **** 	update_program_bounds(1);
 4712              		.loc 1 675 17 view .LVU1376
 4713 0034 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 674:src/keys.c    **** 	State2.runmode = 1;
 4714              		.loc 1 674 14 view .LVU1377
 4715 0036 0722     		movs	r2, #7
 675:src/keys.c    **** 	update_program_bounds(1);
 4716              		.loc 1 675 17 view .LVU1378
 4717 0038 43F04003 		orr	r3, r3, #64
 676:src/keys.c    **** 	set_lift();
 4718              		.loc 1 676 2 view .LVU1379
 4719 003c 0120     		movs	r0, #1
 674:src/keys.c    **** 	State2.runmode = 1;
 4720              		.loc 1 674 14 view .LVU1380
 4721 003e E273     		strb	r2, [r4, #15]
 675:src/keys.c    **** 	update_program_bounds(1);
 4722              		.loc 1 675 17 view .LVU1381
 4723 0040 A375     		strb	r3, [r4, #22]
 676:src/keys.c    **** 	set_lift();
 4724              		.loc 1 676 2 view .LVU1382
 4725 0042 FFF7FEFF 		bl	update_program_bounds
 4726              	.LVL376:
 677:src/keys.c    **** 
 4727              		.loc 1 677 2 view .LVU1383
 4728 0046 FFF7FEFF 		bl	set_lift
 4729              	.LVL377:
 684:src/keys.c    **** 	State2.flags = a;
 4730              		.loc 1 684 15 view .LVU1384
 4731 004a E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 685:src/keys.c    **** #else
 4732              		.loc 1 685 15 view .LVU1385
 4733 004c 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 689:src/keys.c    **** }
 4734              		.loc 1 689 15 view .LVU1386
 4735 004e 0B49     		ldr	r1, .L532+8
 682:src/keys.c    **** #ifndef REALBUILD
 4736              		.loc 1 682 10 view .LVU1387
 4737 0050 84F81390 		strb	r9, [r4, #19]
 617:src/keys.c    **** 	unsigned int b = State2.trace;
ARM GAS  /tmp/cc8lpfL1.s 			page 161


 4738              		.loc 1 617 25 view .LVU1388
 4739 0054 05F00105 		and	r5, r5, #1
 4740              	.LVL378:
 618:src/keys.c    **** #else
 4741              		.loc 1 618 2 is_stmt 1 view .LVU1389
 618:src/keys.c    **** #else
 4742              		.loc 1 618 25 is_stmt 0 view .LVU1390
 4743 0058 F609     		lsrs	r6, r6, #7
 4744              	.LVL379:
 622:src/keys.c    **** 	int k = LastKey;
 4745              		.loc 1 622 2 is_stmt 1 view .LVU1391
 622:src/keys.c    **** 	int k = LastKey;
 4746              		.loc 1 622 10 is_stmt 0 view .LVU1392
 4747 005a FFB2     		uxtb	r7, r7
 4748              	.LVL380:
 623:src/keys.c    **** 
 4749              		.loc 1 623 2 is_stmt 1 view .LVU1393
 625:src/keys.c    **** 	// Removed: will clear any locals on power off
 4750              		.loc 1 625 2 view .LVU1394
 629:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 4751              		.loc 1 629 2 view .LVU1395
 667:src/keys.c    **** #endif
 4752              		.loc 1 667 2 view .LVU1396
 674:src/keys.c    **** 	State2.runmode = 1;
 4753              		.loc 1 674 2 view .LVU1397
 675:src/keys.c    **** 	update_program_bounds(1);
 4754              		.loc 1 675 2 view .LVU1398
 676:src/keys.c    **** 	set_lift();
 4755              		.loc 1 676 2 view .LVU1399
 677:src/keys.c    **** 
 4756              		.loc 1 677 2 view .LVU1400
 681:src/keys.c    **** 	LastKey = k;
 4757              		.loc 1 681 2 view .LVU1401
 684:src/keys.c    **** 	State2.flags = a;
 4758              		.loc 1 684 15 is_stmt 0 view .LVU1402
 4759 005c 66F3C712 		bfi	r2, r6, #7, #1
 685:src/keys.c    **** #else
 4760              		.loc 1 685 15 view .LVU1403
 4761 0060 65F30003 		bfi	r3, r5, #0, #1
 689:src/keys.c    **** }
 4762              		.loc 1 689 15 view .LVU1404
 4763 0064 6420     		movs	r0, #100
 684:src/keys.c    **** 	State2.flags = a;
 4764              		.loc 1 684 15 view .LVU1405
 4765 0066 E275     		strb	r2, [r4, #23]
 685:src/keys.c    **** #else
 4766              		.loc 1 685 15 view .LVU1406
 4767 0068 2376     		strb	r3, [r4, #24]
 681:src/keys.c    **** 	LastKey = k;
 4768              		.loc 1 681 10 view .LVU1407
 4769 006a A774     		strb	r7, [r4, #18]
 682:src/keys.c    **** #ifndef REALBUILD
 4770              		.loc 1 682 2 is_stmt 1 view .LVU1408
 684:src/keys.c    **** 	State2.flags = a;
 4771              		.loc 1 684 2 view .LVU1409
 685:src/keys.c    **** #else
 4772              		.loc 1 685 2 view .LVU1410
ARM GAS  /tmp/cc8lpfL1.s 			page 162


 689:src/keys.c    **** }
 4773              		.loc 1 689 2 view .LVU1411
 689:src/keys.c    **** }
 4774              		.loc 1 689 15 is_stmt 0 view .LVU1412
 4775 006c 0860     		str	r0, [r1]
 690:src/keys.c    **** 
 4776              		.loc 1 690 1 view .LVU1413
 4777 006e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4778              	.LVL381:
 4779              	.L533:
 690:src/keys.c    **** 
 4780              		.loc 1 690 1 view .LVU1414
 4781 0072 00BF     		.align	2
 4782              	.L532:
 4783 0074 00000000 		.word	StateWhileOn
 4784 0078 00000000 		.word	main_ram
 4785 007c 00000000 		.word	ShowRegister
 4786              		.cfi_endproc
 4787              	.LFE13:
 4789              		.section	.text.process_cmplx,"ax",%progbits
 4790              		.align	1
 4791              		.p2align 2,,3
 4792              		.syntax unified
 4793              		.thumb
 4794              		.thumb_func
 4795              		.fpu fpv4-sp-d16
 4797              	process_cmplx:
 4798              	.LVL382:
 4799              	.LFB27:
1469:src/keys.c    **** #define _RARG   0xFF00
 4800              		.loc 1 1469 43 is_stmt 1 view -0
 4801              		.cfi_startproc
 4802              		@ args = 0, pretend = 0, frame = 0
 4803              		@ frame_needed = 0, uses_anonymous_args = 0
1474:src/keys.c    **** 		// Row 1
 4804              		.loc 1 1474 2 view .LVU1416
1525:src/keys.c    **** 	int lc = keycode_to_linear(c);
 4805              		.loc 1 1525 2 view .LVU1417
 4806              	.LBB515:
 4807              	.LBI515:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 4808              		.loc 1 114 13 view .LVU1418
 4809              	.LBE515:
 115:src/keys.c    **** }
 4810              		.loc 1 115 2 view .LVU1419
 4811              	.LBB532:
 4812              	.LBB516:
 4813              	.LBI516:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 4814              		.loc 1 104 20 view .LVU1420
 4815              	.LBB517:
 105:src/keys.c    **** 	State2.shifts = shift;
 4816              		.loc 1 105 2 view .LVU1421
 4817              	.LBB518:
 4818              	.LBI518:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4819              		.loc 1 96 13 view .LVU1422
ARM GAS  /tmp/cc8lpfL1.s 			page 163


 4820              	.LBB519:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4821              		.loc 1 97 2 view .LVU1423
 4822              	.LBE519:
 4823              	.LBE518:
 4824              	.LBE517:
 4825              	.LBE516:
 4826              	.LBE532:
1469:src/keys.c    **** #define _RARG   0xFF00
 4827              		.loc 1 1469 43 is_stmt 0 view .LVU1424
 4828 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4829              		.cfi_def_cfa_offset 24
 4830              		.cfi_offset 3, -24
 4831              		.cfi_offset 4, -20
 4832              		.cfi_offset 5, -16
 4833              		.cfi_offset 6, -12
 4834              		.cfi_offset 7, -8
 4835              		.cfi_offset 14, -4
1469:src/keys.c    **** #define _RARG   0xFF00
 4836              		.loc 1 1469 43 view .LVU1425
 4837 0002 0546     		mov	r5, r0
 4838              	.LBB533:
 4839              	.LBB528:
 4840              	.LBB524:
 4841              	.LBB522:
 4842              	.LBB520:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4843              		.loc 1 97 18 view .LVU1426
 4844 0004 FFF7FEFF 		bl	shift_down
 4845              	.LVL383:
  98:src/keys.c    **** }
 4846              		.loc 1 98 2 is_stmt 1 view .LVU1427
  98:src/keys.c    **** }
 4847              		.loc 1 98 52 is_stmt 0 view .LVU1428
 4848 0008 00B3     		cbz	r0, .L552
 4849 000a 2E4F     		ldr	r7, .L560
 4850 000c 0446     		mov	r4, r0
 4851              	.L535:
 4852              	.LVL384:
  98:src/keys.c    **** }
 4853              		.loc 1 98 52 view .LVU1429
 4854              	.LBE520:
 4855              	.LBE522:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4856              		.loc 1 106 2 is_stmt 1 view .LVU1430
 4857              	.LBE524:
 4858              	.LBE528:
 4859              	.LBE533:
 4860              	.LBB534:
 4861              	.LBB535:
 158:src/keys.c    **** }
 4862              		.loc 1 158 23 is_stmt 0 view .LVU1431
 4863 000e 2E4B     		ldr	r3, .L560+4
 4864              	.LBE535:
 4865              	.LBE534:
1527:src/keys.c    **** 	State2.cmplx = 0;
 4866              		.loc 1 1527 21 view .LVU1432
ARM GAS  /tmp/cc8lpfL1.s 			page 164


 4867 0010 2E48     		ldr	r0, .L560+8
 4868              	.LBB538:
 4869              	.LBB536:
 158:src/keys.c    **** }
 4870              		.loc 1 158 23 view .LVU1433
 4871 0012 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 4872              	.LBE536:
 4873              	.LBE538:
1528:src/keys.c    **** 
 4874              		.loc 1 1528 15 view .LVU1434
 4875 0014 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
1527:src/keys.c    **** 	State2.cmplx = 0;
 4876              		.loc 1 1527 21 view .LVU1435
 4877 0016 04EB8303 		add	r3, r4, r3, lsl #2
 4878              	.LBB539:
 4879              	.LBB529:
 4880              	.LBB525:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4881              		.loc 1 106 16 view .LVU1436
 4882 001a 0021     		movs	r1, #0
 4883              	.LBE525:
 4884              	.LBE529:
 4885              	.LBE539:
1527:src/keys.c    **** 	State2.cmplx = 0;
 4886              		.loc 1 1527 21 view .LVU1437
 4887 001c 30F81360 		ldrh	r6, [r0, r3, lsl #1]
 4888              	.LBB540:
 4889              	.LBB530:
 4890              	.LBB526:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4891              		.loc 1 106 16 view .LVU1438
 4892 0020 3974     		strb	r1, [r7, #16]
 108:src/keys.c    **** }
 4893              		.loc 1 108 2 is_stmt 1 view .LVU1439
 4894              	.LVL385:
 108:src/keys.c    **** }
 4895              		.loc 1 108 2 is_stmt 0 view .LVU1440
 4896              	.LBE526:
 4897              	.LBE530:
 4898              	.LBE540:
1526:src/keys.c    **** 	int op = op_map[lc][shift];
 4899              		.loc 1 1526 2 is_stmt 1 view .LVU1441
 4900              	.LBB541:
 4901              	.LBI534:
 146:src/keys.c    **** {
 4902              		.loc 1 146 12 view .LVU1442
 4903              	.LBB537:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 4904              		.loc 1 148 2 view .LVU1443
 158:src/keys.c    **** }
 4905              		.loc 1 158 2 view .LVU1444
 158:src/keys.c    **** }
 4906              		.loc 1 158 2 is_stmt 0 view .LVU1445
 4907              	.LBE537:
 4908              	.LBE541:
1527:src/keys.c    **** 	State2.cmplx = 0;
 4909              		.loc 1 1527 2 is_stmt 1 view .LVU1446
ARM GAS  /tmp/cc8lpfL1.s 			page 165


1528:src/keys.c    **** 
 4910              		.loc 1 1528 2 view .LVU1447
1530:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4911              		.loc 1 1530 5 is_stmt 0 view .LVU1448
 4912 0022 06F47F43 		and	r3, r6, #65280
1528:src/keys.c    **** 
 4913              		.loc 1 1528 15 view .LVU1449
 4914 0026 61F34102 		bfi	r2, r1, #1, #1
1530:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4915              		.loc 1 1530 5 view .LVU1450
 4916 002a B3F57F4F 		cmp	r3, #65280
1528:src/keys.c    **** 
 4917              		.loc 1 1528 15 view .LVU1451
 4918 002e 7A75     		strb	r2, [r7, #21]
1530:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4919              		.loc 1 1530 2 is_stmt 1 view .LVU1452
1530:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4920              		.loc 1 1530 5 is_stmt 0 view .LVU1453
 4921 0030 36D0     		beq	.L555
1534:src/keys.c    **** 		// HYP
 4922              		.loc 1 1534 2 is_stmt 1 view .LVU1454
1534:src/keys.c    **** 		// HYP
 4923              		.loc 1 1534 5 is_stmt 0 view .LVU1455
 4924 0032 DDB1     		cbz	r5, .L556
1544:src/keys.c    **** 		switch (c) {
 4925              		.loc 1 1544 2 is_stmt 1 view .LVU1456
1544:src/keys.c    **** 		switch (c) {
 4926              		.loc 1 1544 5 is_stmt 0 view .LVU1457
 4927 0034 2CB1     		cbz	r4, .L540
1545:src/keys.c    **** 		case K_CMPLX:
 4928              		.loc 1 1545 3 is_stmt 1 view .LVU1458
 4929 0036 242D     		cmp	r5, #36
 4930 0038 2CD0     		beq	.L541
 4931 003a 2D2D     		cmp	r5, #45
 4932 003c 23D0     		beq	.L542
 4933 003e 1F2D     		cmp	r5, #31
 4934 0040 0CD0     		beq	.L557
 4935              	.L540:
1569:src/keys.c    **** #else
 4936              		.loc 1 1569 2 view .LVU1459
 4937              	.LVL386:
 4938              	.LBB542:
 4939              	.LBI542:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 4940              		.loc 1 714 12 view .LVU1460
 4941              	.LBB543:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 4942              		.loc 1 715 2 view .LVU1461
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 4943              		.loc 1 715 6 is_stmt 0 view .LVU1462
 4944 0042 3312     		asrs	r3, r6, #8
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 4945              		.loc 1 715 5 view .LVU1463
 4946 0044 012B     		cmp	r3, #1
 4947 0046 04D0     		beq	.L558
 4948              	.LVL387:
 4949              	.L534:
ARM GAS  /tmp/cc8lpfL1.s 			page 166


 715:src/keys.c    **** 		const int nilop = argKIND(op);
 4950              		.loc 1 715 5 view .LVU1464
 4951              	.LBE543:
 4952              	.LBE542:
1577:src/keys.c    **** 
 4953              		.loc 1 1577 1 view .LVU1465
 4954 0048 3046     		mov	r0, r6
 4955 004a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4956              	.LVL388:
 4957              	.L552:
 4958              	.LBB549:
 4959              	.LBB531:
 4960              	.LBB527:
 4961              	.LBB523:
 4962              	.LBB521:
  98:src/keys.c    **** }
 4963              		.loc 1 98 52 view .LVU1466
 4964 004c 1D4F     		ldr	r7, .L560
 4965 004e 3C7C     		ldrb	r4, [r7, #16]	@ zero_extendqisi2
 4966 0050 DDE7     		b	.L535
 4967              	.LVL389:
 4968              	.L558:
  98:src/keys.c    **** }
 4969              		.loc 1 98 52 view .LVU1467
 4970              	.LBE521:
 4971              	.LBE523:
 4972              	.LBE527:
 4973              	.LBE531:
 4974              	.LBE549:
 4975              	.LBB550:
 4976              	.LBB544:
 4977 0052 3046     		mov	r0, r6
 4978              	.LBE544:
 4979              	.LBE550:
1577:src/keys.c    **** 
 4980              		.loc 1 1577 1 view .LVU1468
 4981 0054 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 4982              		.cfi_remember_state
 4983              		.cfi_restore 14
 4984              		.cfi_restore 7
 4985              		.cfi_restore 6
 4986              		.cfi_restore 5
 4987              		.cfi_restore 4
 4988              		.cfi_restore 3
 4989              		.cfi_def_cfa_offset 0
 4990              	.LVL390:
 4991              	.LBB551:
 4992              	.LBB545:
1577:src/keys.c    **** 
 4993              		.loc 1 1577 1 view .LVU1469
 4994 0058 FFF7FEBF 		b	check_confirm.part.0
 4995              	.LVL391:
 4996              	.L557:
 4997              		.cfi_restore_state
1577:src/keys.c    **** 
 4998              		.loc 1 1577 1 view .LVU1470
 4999              	.LBE545:
ARM GAS  /tmp/cc8lpfL1.s 			page 167


 5000              	.LBE551:
1551:src/keys.c    **** 				if (is_bad_cmdline())
 5001              		.loc 1 1551 4 is_stmt 1 view .LVU1471
1551:src/keys.c    **** 				if (is_bad_cmdline())
 5002              		.loc 1 1551 7 is_stmt 0 view .LVU1472
 5003 005c 332E     		cmp	r6, #51
 5004 005e 02D0     		beq	.L554
1552:src/keys.c    **** 					return STATE_UNFINISHED;
 5005              		.loc 1 1552 5 is_stmt 1 view .LVU1473
1552:src/keys.c    **** 					return STATE_UNFINISHED;
 5006              		.loc 1 1552 9 is_stmt 0 view .LVU1474
 5007 0060 FFF7FEFF 		bl	is_bad_cmdline
 5008              	.LVL392:
1552:src/keys.c    **** 					return STATE_UNFINISHED;
 5009              		.loc 1 1552 8 view .LVU1475
 5010 0064 28B3     		cbz	r0, .L559
 5011              	.L554:
1541:src/keys.c    **** 	}
 5012              		.loc 1 1541 3 is_stmt 1 view .LVU1476
1541:src/keys.c    **** 	}
 5013              		.loc 1 1541 10 is_stmt 0 view .LVU1477
 5014 0066 3326     		movs	r6, #51
 5015              	.LVL393:
1577:src/keys.c    **** 
 5016              		.loc 1 1577 1 view .LVU1478
 5017 0068 3046     		mov	r0, r6
 5018 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5019              	.LVL394:
 5020              	.L556:
1536:src/keys.c    **** 		//		print_debug(100,1);
 5021              		.loc 1 1536 3 is_stmt 1 view .LVU1479
 5022 006c FFF7FEFF 		bl	process_cmdline_set_lift
 5023              	.LVL395:
1538:src/keys.c    **** 		State2.dot = op;
 5024              		.loc 1 1538 3 view .LVU1480
1539:src/keys.c    **** 		State2.cmplx = 1;
 5025              		.loc 1 1539 3 view .LVU1481
1540:src/keys.c    **** 		return STATE_UNFINISHED;
 5026              		.loc 1 1540 3 view .LVU1482
1540:src/keys.c    **** 		return STATE_UNFINISHED;
 5027              		.loc 1 1540 16 is_stmt 0 view .LVU1483
 5028 0070 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 5029 0072 06F00103 		and	r3, r6, #1
 5030 0076 9B01     		lsls	r3, r3, #6
 5031 0078 43F02203 		orr	r3, r3, #34
 5032 007c 22F06202 		bic	r2, r2, #98
 5033 0080 1343     		orrs	r3, r3, r2
 5034 0082 7B75     		strb	r3, [r7, #21]
 5035 0084 EFE7     		b	.L554
 5036              	.L542:
1547:src/keys.c    **** 			break;
 5037              		.loc 1 1547 4 is_stmt 1 view .LVU1484
 5038              	.LVL396:
 5039              	.LBB552:
 5040              	.LBI552:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 5041              		.loc 1 104 20 view .LVU1485
ARM GAS  /tmp/cc8lpfL1.s 			page 168


 5042              	.LBB553:
 105:src/keys.c    **** 	State2.shifts = shift;
 5043              		.loc 1 105 2 view .LVU1486
 5044              	.LBB554:
 5045              	.LBI554:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 5046              		.loc 1 96 13 view .LVU1487
 5047              	.LBB555:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5048              		.loc 1 97 2 view .LVU1488
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5049              		.loc 1 97 18 is_stmt 0 view .LVU1489
 5050 0086 FFF7FEFF 		bl	shift_down
 5051              	.LVL397:
  98:src/keys.c    **** }
 5052              		.loc 1 98 2 is_stmt 1 view .LVU1490
 5053              	.LBE555:
 5054              	.LBE554:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5055              		.loc 1 106 2 view .LVU1491
 5056              	.LBE553:
 5057              	.LBE552:
 5058              	.LBB557:
 5059              	.LBB546:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5060              		.loc 1 715 6 is_stmt 0 view .LVU1492
 5061 008a 3312     		asrs	r3, r6, #8
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5062              		.loc 1 715 5 view .LVU1493
 5063 008c 012B     		cmp	r3, #1
 5064              	.LBE546:
 5065              	.LBE557:
 5066              	.LBB558:
 5067              	.LBB556:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5068              		.loc 1 106 16 view .LVU1494
 5069 008e 3C74     		strb	r4, [r7, #16]
 108:src/keys.c    **** }
 5070              		.loc 1 108 2 is_stmt 1 view .LVU1495
 5071              	.LVL398:
 108:src/keys.c    **** }
 5072              		.loc 1 108 2 is_stmt 0 view .LVU1496
 5073              	.LBE556:
 5074              	.LBE558:
1569:src/keys.c    **** #else
 5075              		.loc 1 1569 2 is_stmt 1 view .LVU1497
 5076              	.LBB559:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 5077              		.loc 1 714 12 view .LVU1498
 5078              	.LBB547:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5079              		.loc 1 715 2 view .LVU1499
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5080              		.loc 1 715 5 is_stmt 0 view .LVU1500
 5081 0090 DAD1     		bne	.L534
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5082              		.loc 1 715 5 view .LVU1501
ARM GAS  /tmp/cc8lpfL1.s 			page 169


 5083 0092 DEE7     		b	.L558
 5084              	.LVL399:
 5085              	.L541:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5086              		.loc 1 715 5 view .LVU1502
 5087              	.LBE547:
 5088              	.LBE559:
1561:src/keys.c    **** 			break;
 5089              		.loc 1 1561 4 is_stmt 1 view .LVU1503
 5090 0094 FFF7FEFF 		bl	init_state
 5091              	.LVL400:
1562:src/keys.c    **** 
 5092              		.loc 1 1562 4 view .LVU1504
1569:src/keys.c    **** #else
 5093              		.loc 1 1569 2 view .LVU1505
 5094              	.LBB560:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 5095              		.loc 1 714 12 view .LVU1506
 5096              	.LBB548:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5097              		.loc 1 715 2 view .LVU1507
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5098              		.loc 1 715 6 is_stmt 0 view .LVU1508
 5099 0098 3312     		asrs	r3, r6, #8
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5100              		.loc 1 715 5 view .LVU1509
 5101 009a 012B     		cmp	r3, #1
 5102 009c D4D1     		bne	.L534
 5103 009e D8E7     		b	.L558
 5104              	.LVL401:
 5105              	.L555:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 5106              		.loc 1 715 5 view .LVU1510
 5107              	.LBE548:
 5108              	.LBE560:
1531:src/keys.c    **** 		return STATE_UNFINISHED;
 5109              		.loc 1 1531 3 is_stmt 1 view .LVU1511
 5110              	.LBB561:
 5111              	.LBI561:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 5112              		.loc 1 552 13 view .LVU1512
 5113              	.LBB562:
 553:src/keys.c    **** 		return;
 5114              		.loc 1 553 2 view .LVU1513
 553:src/keys.c    **** 		return;
 5115              		.loc 1 553 6 is_stmt 0 view .LVU1514
 5116 00a0 FFF7FEFF 		bl	is_bad_cmdline
 5117              	.LVL402:
 553:src/keys.c    **** 		return;
 5118              		.loc 1 553 5 view .LVU1515
 5119 00a4 0028     		cmp	r0, #0
 5120 00a6 DED1     		bne	.L554
 5121 00a8 F0B2     		uxtb	r0, r6
 5122 00aa FFF7FEFF 		bl	init_arg.part.0
 5123              	.LVL403:
 5124              	.LBE562:
 5125              	.LBE561:
ARM GAS  /tmp/cc8lpfL1.s 			page 170


1532:src/keys.c    **** 	}
 5126              		.loc 1 1532 10 view .LVU1516
 5127 00ae 3326     		movs	r6, #51
 5128              	.LVL404:
1532:src/keys.c    **** 	}
 5129              		.loc 1 1532 10 view .LVU1517
 5130 00b0 CAE7     		b	.L534
 5131              	.LVL405:
 5132              	.L559:
1554:src/keys.c    **** 				State2.cmplx = 1;
 5133              		.loc 1 1554 5 is_stmt 1 view .LVU1518
 5134 00b2 FFF7FEFF 		bl	process_cmdline_set_lift
 5135              	.LVL406:
1555:src/keys.c    **** 				State2.test = op;
 5136              		.loc 1 1555 5 view .LVU1519
1555:src/keys.c    **** 				State2.test = op;
 5137              		.loc 1 1555 18 is_stmt 0 view .LVU1520
 5138 00b6 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
1556:src/keys.c    **** 			}
 5139              		.loc 1 1556 17 view .LVU1521
 5140 00b8 FE73     		strb	r6, [r7, #15]
1555:src/keys.c    **** 				State2.test = op;
 5141              		.loc 1 1555 18 view .LVU1522
 5142 00ba 43F00203 		orr	r3, r3, #2
 5143 00be 7B75     		strb	r3, [r7, #21]
1556:src/keys.c    **** 			}
 5144              		.loc 1 1556 5 is_stmt 1 view .LVU1523
1558:src/keys.c    **** 
 5145              		.loc 1 1558 11 is_stmt 0 view .LVU1524
 5146 00c0 3326     		movs	r6, #51
 5147              	.LVL407:
1558:src/keys.c    **** 
 5148              		.loc 1 1558 11 view .LVU1525
 5149 00c2 C1E7     		b	.L534
 5150              	.L561:
 5151              		.align	2
 5152              	.L560:
 5153 00c4 00000000 		.word	StateWhileOn
 5154 00c8 00000000 		.word	.LANCHOR1
 5155 00cc 00000000 		.word	.LANCHOR7
 5156              		.cfi_endproc
 5157              	.LFE27:
 5159              		.section	.text.soft_init_state,"ax",%progbits
 5160              		.align	1
 5161              		.p2align 2,,3
 5162              		.global	soft_init_state
 5163              		.syntax unified
 5164              		.thumb
 5165              		.thumb_func
 5166              		.fpu fpv4-sp-d16
 5168              	soft_init_state:
 5169              	.LFB14:
 692:src/keys.c    **** 	int soft;
 5170              		.loc 1 692 28 is_stmt 1 view -0
 5171              		.cfi_startproc
 5172              		@ args = 0, pretend = 0, frame = 0
 5173              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc8lpfL1.s 			page 171


 693:src/keys.c    **** 	unsigned int runmode;
 5174              		.loc 1 693 2 view .LVU1527
 694:src/keys.c    **** 	unsigned int alphas;
 5175              		.loc 1 694 2 view .LVU1528
 695:src/keys.c    **** 
 5176              		.loc 1 695 2 view .LVU1529
 697:src/keys.c    **** 		CmdLineLength = 0;
 5177              		.loc 1 697 2 view .LVU1530
 692:src/keys.c    **** 	int soft;
 5178              		.loc 1 692 28 is_stmt 0 view .LVU1531
 5179 0000 38B5     		push	{r3, r4, r5, lr}
 5180              		.cfi_def_cfa_offset 16
 5181              		.cfi_offset 3, -16
 5182              		.cfi_offset 4, -12
 5183              		.cfi_offset 5, -8
 5184              		.cfi_offset 14, -4
 697:src/keys.c    **** 		CmdLineLength = 0;
 5185              		.loc 1 697 6 view .LVU1532
 5186 0002 114C     		ldr	r4, .L569
 697:src/keys.c    **** 		CmdLineLength = 0;
 5187              		.loc 1 697 5 view .LVU1533
 5188 0004 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 5189 0006 D3B9     		cbnz	r3, .L568
 703:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 5190              		.loc 1 703 2 is_stmt 1 view .LVU1534
 704:src/keys.c    **** 	runmode = State2.runmode;
 5191              		.loc 1 704 17 is_stmt 0 view .LVU1535
 5192 0008 104A     		ldr	r2, .L569+4
 5193 000a 6369     		ldr	r3, [r4, #20]
 704:src/keys.c    **** 	runmode = State2.runmode;
 5194              		.loc 1 704 60 view .LVU1536
 5195 000c 1A42     		tst	r2, r3
 5196 000e 0AD0     		beq	.L565
 5197              	.L566:
 5198              	.LVL408:
 705:src/keys.c    **** 	alphas = State2.alphas;
 5199              		.loc 1 705 2 is_stmt 1 view .LVU1537
 706:src/keys.c    **** 	init_state();
 5200              		.loc 1 706 17 is_stmt 0 view .LVU1538
 5201 0010 A57D     		ldrb	r5, [r4, #22]	@ zero_extendqisi2
 5202              	.LVL409:
 706:src/keys.c    **** 	init_state();
 5203              		.loc 1 706 2 is_stmt 1 view .LVU1539
 707:src/keys.c    **** 	if (soft) {
 5204              		.loc 1 707 2 view .LVU1540
 5205 0012 FFF7FEFF 		bl	init_state
 5206              	.LVL410:
 708:src/keys.c    **** 		State2.runmode = runmode;
 5207              		.loc 1 708 2 view .LVU1541
 709:src/keys.c    **** 		State2.alphas = alphas;
 5208              		.loc 1 709 3 view .LVU1542
 710:src/keys.c    **** 	}
 5209              		.loc 1 710 3 view .LVU1543
 710:src/keys.c    **** 	}
 5210              		.loc 1 710 17 is_stmt 0 view .LVU1544
 5211 0016 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 5212 0018 05F04805 		and	r5, r5, #72
ARM GAS  /tmp/cc8lpfL1.s 			page 172


 5213 001c 23F04803 		bic	r3, r3, #72
 5214 0020 2B43     		orrs	r3, r3, r5
 5215 0022 A375     		strb	r3, [r4, #22]
 712:src/keys.c    **** 
 5216              		.loc 1 712 1 view .LVU1545
 5217 0024 38BD     		pop	{r3, r4, r5, pc}
 5218              	.LVL411:
 5219              	.L565:
 704:src/keys.c    **** 	runmode = State2.runmode;
 5220              		.loc 1 704 60 discriminator 2 view .LVU1546
 5221 0026 E368     		ldr	r3, [r4, #12]
 5222 0028 23F47F03 		bic	r3, r3, #16711680
 5223 002c 23F47F43 		bic	r3, r3, #65280
 5224 0030 B3F1E06F 		cmp	r3, #117440512
 5225 0034 ECD1     		bne	.L566
 5226              	.LVL412:
 705:src/keys.c    **** 	alphas = State2.alphas;
 5227              		.loc 1 705 2 is_stmt 1 view .LVU1547
 706:src/keys.c    **** 	init_state();
 5228              		.loc 1 706 2 view .LVU1548
 707:src/keys.c    **** 	if (soft) {
 5229              		.loc 1 707 2 view .LVU1549
 712:src/keys.c    **** 
 5230              		.loc 1 712 1 is_stmt 0 view .LVU1550
 5231 0036 BDE83840 		pop	{r3, r4, r5, lr}
 5232              		.cfi_remember_state
 5233              		.cfi_restore 14
 5234              		.cfi_restore 5
 5235              		.cfi_restore 4
 5236              		.cfi_restore 3
 5237              		.cfi_def_cfa_offset 0
 707:src/keys.c    **** 	if (soft) {
 5238              		.loc 1 707 2 view .LVU1551
 5239 003a FFF7FEBF 		b	init_state
 5240              	.LVL413:
 5241              	.L568:
 5242              		.cfi_restore_state
 5243              	.LBB565:
 5244              	.LBI565:
 692:src/keys.c    **** 	int soft;
 5245              		.loc 1 692 6 is_stmt 1 view .LVU1552
 5246              	.LBB566:
 698:src/keys.c    **** 		CmdLineEex = 0;
 5247              		.loc 1 698 3 view .LVU1553
 699:src/keys.c    **** 		CmdLineDot = 0;
 5248              		.loc 1 699 3 view .LVU1554
 700:src/keys.c    **** 		return;
 5249              		.loc 1 700 3 view .LVU1555
 698:src/keys.c    **** 		CmdLineEex = 0;
 5250              		.loc 1 698 17 is_stmt 0 view .LVU1556
 5251 003e 0023     		movs	r3, #0
 5252 0040 A383     		strh	r3, [r4, #28]	@ movhi
 700:src/keys.c    **** 		return;
 5253              		.loc 1 700 14 view .LVU1557
 5254 0042 A377     		strb	r3, [r4, #30]
 701:src/keys.c    **** 	}
 5255              		.loc 1 701 3 is_stmt 1 view .LVU1558
ARM GAS  /tmp/cc8lpfL1.s 			page 173


 5256              	.LBE566:
 5257              	.LBE565:
 712:src/keys.c    **** 
 5258              		.loc 1 712 1 is_stmt 0 view .LVU1559
 5259 0044 38BD     		pop	{r3, r4, r5, pc}
 5260              	.L570:
 5261 0046 00BF     		.align	2
 5262              	.L569:
 5263 0048 00000000 		.word	StateWhileOn
 5264 004c 002F2004 		.word	69218048
 5265              		.cfi_endproc
 5266              	.LFE14:
 5268              		.section	.text.finish_cpx_entry,"ax",%progbits
 5269              		.align	1
 5270              		.p2align 2,,3
 5271              		.global	finish_cpx_entry
 5272              		.syntax unified
 5273              		.thumb
 5274              		.thumb_func
 5275              		.fpu fpv4-sp-d16
 5277              	finish_cpx_entry:
 5278              	.LVL414:
 5279              	.LFB23:
1207:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5280              		.loc 1 1207 36 is_stmt 1 view -0
 5281              		.cfi_startproc
 5282              		@ args = 0, pretend = 0, frame = 0
 5283              		@ frame_needed = 0, uses_anonymous_args = 0
1212:src/keys.c    **** 
 5284              		.loc 1 1212 2 view .LVU1561
1207:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5285              		.loc 1 1207 36 is_stmt 0 view .LVU1562
 5286 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5287              		.cfi_def_cfa_offset 24
 5288              		.cfi_offset 3, -24
 5289              		.cfi_offset 4, -20
 5290              		.cfi_offset 5, -16
 5291              		.cfi_offset 6, -12
 5292              		.cfi_offset 7, -8
 5293              		.cfi_offset 14, -4
1212:src/keys.c    **** 
 5294              		.loc 1 1212 10 view .LVU1563
 5295 0002 2E4E     		ldr	r6, .L587
 5296 0004 3368     		ldr	r3, [r6]
1212:src/keys.c    **** 
 5297              		.loc 1 1212 7 view .LVU1564
 5298 0006 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
1212:src/keys.c    **** 
 5299              		.loc 1 1212 5 view .LVU1565
 5300 000a 12F0060F 		tst	r2, #6
 5301 000e 16D0     		beq	.L571
1224:src/keys.c    **** 	if (IMAG_FLAG) swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 5302              		.loc 1 1224 2 is_stmt 1 view .LVU1566
 5303              	.LBB573:
 5304              	.LBI573:
1200:src/keys.c    **** 	if (CmdLineLength) {
 5305              		.loc 1 1200 13 view .LVU1567
ARM GAS  /tmp/cc8lpfL1.s 			page 174


 5306              	.LBB574:
1201:src/keys.c    **** 		State2.state_lift = 0;
 5307              		.loc 1 1201 2 view .LVU1568
1201:src/keys.c    **** 		State2.state_lift = 0;
 5308              		.loc 1 1201 6 is_stmt 0 view .LVU1569
 5309 0010 2B4C     		ldr	r4, .L587+4
1201:src/keys.c    **** 		State2.state_lift = 0;
 5310              		.loc 1 1201 5 view .LVU1570
 5311 0012 217F     		ldrb	r1, [r4, #28]	@ zero_extendqisi2
 5312 0014 0546     		mov	r5, r0
 5313 0016 01BB     		cbnz	r1, .L584
 5314              	.LBE574:
 5315              	.LBE573:
1225:src/keys.c    **** 	CLEAR_REAL;
 5316              		.loc 1 1225 2 is_stmt 1 view .LVU1571
1225:src/keys.c    **** 	CLEAR_REAL;
 5317              		.loc 1 1225 5 is_stmt 0 view .LVU1572
 5318 0018 5207     		lsls	r2, r2, #29
 5319 001a 11D4     		bmi	.L585
 5320              	.LVL415:
 5321              	.L575:
1226:src/keys.c    **** 	CLEAR_IMAG;
 5322              		.loc 1 1226 2 is_stmt 1 view .LVU1573
1227:src/keys.c    **** 
 5323              		.loc 1 1227 2 view .LVU1574
1226:src/keys.c    **** 	CLEAR_IMAG;
 5324              		.loc 1 1226 2 is_stmt 0 view .LVU1575
 5325 001c 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
 5326 0020 22F00602 		bic	r2, r2, #6
 5327 0024 83F8AC27 		strb	r2, [r3, #1964]
1229:src/keys.c    **** 
 5328              		.loc 1 1229 2 is_stmt 1 view .LVU1576
1229:src/keys.c    **** 
 5329              		.loc 1 1229 20 is_stmt 0 view .LVU1577
 5330 0028 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 5331 002a 65F38612 		bfi	r2, r5, #6, #1
 5332              	.LVL416:
1229:src/keys.c    **** 
 5333              		.loc 1 1229 20 view .LVU1578
 5334 002e E275     		strb	r2, [r4, #23]
1231:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
 5335              		.loc 1 1231 2 is_stmt 1 view .LVU1579
1231:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
 5336              		.loc 1 1231 21 is_stmt 0 view .LVU1580
 5337 0030 B3F8AC37 		ldrh	r3, [r3, #1964]
1231:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
 5338              		.loc 1 1231 5 view .LVU1581
 5339 0034 03F4C073 		and	r3, r3, #384
 5340 0038 B3F5C07F 		cmp	r3, #384
 5341 003c 19D0     		beq	.L586
 5342              	.L571:
1243:src/keys.c    **** 
 5343              		.loc 1 1243 1 view .LVU1582
 5344 003e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5345              	.LVL417:
 5346              	.L585:
1225:src/keys.c    **** 	CLEAR_REAL;
ARM GAS  /tmp/cc8lpfL1.s 			page 175


 5347              		.loc 1 1225 17 is_stmt 1 discriminator 1 view .LVU1583
 5348 0040 6420     		movs	r0, #100
 5349 0042 FFF7FEFF 		bl	get_reg_n
 5350              	.LVL418:
 5351 0046 0746     		mov	r7, r0
 5352 0048 6520     		movs	r0, #101
 5353 004a FFF7FEFF 		bl	get_reg_n
 5354              	.LVL419:
 5355 004e 0146     		mov	r1, r0
 5356 0050 3846     		mov	r0, r7
 5357 0052 FFF7FEFF 		bl	swap_reg
 5358              	.LVL420:
 5359 0056 3368     		ldr	r3, [r6]
 5360 0058 E0E7     		b	.L575
 5361              	.LVL421:
 5362              	.L584:
 5363              	.LBB576:
 5364              	.LBB575:
1202:src/keys.c    **** 		process_cmdline();
 5365              		.loc 1 1202 3 view .LVU1584
1202:src/keys.c    **** 		process_cmdline();
 5366              		.loc 1 1202 21 is_stmt 0 view .LVU1585
 5367 005a E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 5368 005c 6FF38613 		bfc	r3, #6, #1
 5369 0060 E375     		strb	r3, [r4, #23]
1203:src/keys.c    **** 	}
 5370              		.loc 1 1203 3 is_stmt 1 view .LVU1586
 5371 0062 FFF7FEFF 		bl	process_cmdline
 5372              	.LVL422:
1203:src/keys.c    **** 	}
 5373              		.loc 1 1203 3 is_stmt 0 view .LVU1587
 5374 0066 3368     		ldr	r3, [r6]
 5375 0068 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
 5376              	.LBE575:
 5377              	.LBE576:
1225:src/keys.c    **** 	CLEAR_REAL;
 5378              		.loc 1 1225 2 is_stmt 1 view .LVU1588
1225:src/keys.c    **** 	CLEAR_REAL;
 5379              		.loc 1 1225 5 is_stmt 0 view .LVU1589
 5380 006c 5207     		lsls	r2, r2, #29
 5381 006e D5D5     		bpl	.L575
 5382 0070 E6E7     		b	.L585
 5383              	.LVL423:
 5384              	.L586:
 5385              	.LBB577:
 5386              	.LBI577:
1207:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5387              		.loc 1 1207 6 is_stmt 1 view .LVU1590
 5388              	.LBB578:
1233:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5389              		.loc 1 1233 3 view .LVU1591
 5390 0072 6E20     		movs	r0, #110
 5391 0074 FFF7FEFF 		bl	get_reg_n
 5392              	.LVL424:
 5393 0078 0446     		mov	r4, r0
1233:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5394              		.loc 1 1233 33 is_stmt 0 view .LVU1592
ARM GAS  /tmp/cc8lpfL1.s 			page 176


 5395 007a 6420     		movs	r0, #100
 5396 007c FFF7FEFF 		bl	get_reg_n
 5397              	.LVL425:
 5398 0080 0146     		mov	r1, r0
1233:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5399              		.loc 1 1233 3 view .LVU1593
 5400 0082 2046     		mov	r0, r4
 5401 0084 FFF7FEFF 		bl	copyreg
 5402              	.LVL426:
1234:src/keys.c    **** 		//call p2r
 5403              		.loc 1 1234 3 is_stmt 1 view .LVU1594
 5404 0088 6F20     		movs	r0, #111
 5405 008a FFF7FEFF 		bl	get_reg_n
 5406              	.LVL427:
 5407 008e 0446     		mov	r4, r0
1234:src/keys.c    **** 		//call p2r
 5408              		.loc 1 1234 33 is_stmt 0 view .LVU1595
 5409 0090 6520     		movs	r0, #101
 5410 0092 FFF7FEFF 		bl	get_reg_n
 5411              	.LVL428:
 5412 0096 0146     		mov	r1, r0
1234:src/keys.c    **** 		//call p2r
 5413              		.loc 1 1234 3 view .LVU1596
 5414 0098 2046     		mov	r0, r4
 5415 009a FFF7FEFF 		bl	copyreg
 5416              	.LVL429:
1236:src/keys.c    **** 		op_p2r(OP_NOP); // x, y now contain rectangular form
 5417              		.loc 1 1236 18 is_stmt 1 view .LVU1597
1237:src/keys.c    **** #ifdef RP_PREFIX
 5418              		.loc 1 1237 3 view .LVU1598
 5419 009e 0020     		movs	r0, #0
 5420 00a0 FFF7FEFF 		bl	op_p2r
 5421              	.LVL430:
1239:src/keys.c    **** #endif
 5422              		.loc 1 1239 3 view .LVU1599
1239:src/keys.c    **** #endif
 5423              		.loc 1 1239 15 is_stmt 0 view .LVU1600
 5424 00a4 074A     		ldr	r2, .L587+8
1241:src/keys.c    **** 	}
 5425              		.loc 1 1241 3 view .LVU1601
 5426 00a6 3368     		ldr	r3, [r6]
1239:src/keys.c    **** #endif
 5427              		.loc 1 1239 15 view .LVU1602
 5428 00a8 0121     		movs	r1, #1
 5429 00aa 1160     		str	r1, [r2]
1241:src/keys.c    **** 	}
 5430              		.loc 1 1241 3 is_stmt 1 view .LVU1603
 5431 00ac 93F8AD27 		ldrb	r2, [r3, #1965]	@ zero_extendqisi2
 5432 00b0 6FF30002 		bfc	r2, #0, #1
 5433 00b4 83F8AD27 		strb	r2, [r3, #1965]
 5434              	.LVL431:
1241:src/keys.c    **** 	}
 5435              		.loc 1 1241 3 is_stmt 0 view .LVU1604
 5436              	.LBE578:
 5437              	.LBE577:
1243:src/keys.c    **** 
 5438              		.loc 1 1243 1 view .LVU1605
ARM GAS  /tmp/cc8lpfL1.s 			page 177


 5439 00b8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5440              	.L588:
 5441 00ba 00BF     		.align	2
 5442              	.L587:
 5443 00bc 00000000 		.word	main_ram
 5444 00c0 00000000 		.word	StateWhileOn
 5445 00c4 00000000 		.word	RectPolConv
 5446              		.cfi_endproc
 5447              	.LFE23:
 5449              		.section	.text.stack_begin,"ax",%progbits
 5450              		.align	1
 5451              		.p2align 2,,3
 5452              		.global	stack_begin
 5453              		.syntax unified
 5454              		.thumb
 5455              		.thumb_func
 5456              		.fpu fpv4-sp-d16
 5458              	stack_begin:
 5459              	.LVL432:
 5460              	.LFB25:
1264:src/keys.c    **** 	// Lifts stack if required and stores displaced registers; 
 5461              		.loc 1 1264 33 is_stmt 1 view -0
 5462              		.cfi_startproc
 5463              		@ args = 0, pretend = 0, frame = 0
 5464              		@ frame_needed = 0, uses_anonymous_args = 0
1267:src/keys.c    **** 	if ( State2.state_lift ){
 5465              		.loc 1 1267 2 view .LVU1607
1264:src/keys.c    **** 	// Lifts stack if required and stores displaced registers; 
 5466              		.loc 1 1264 33 is_stmt 0 view .LVU1608
 5467 0000 38B5     		push	{r3, r4, r5, lr}
 5468              		.cfi_def_cfa_offset 16
 5469              		.cfi_offset 3, -16
 5470              		.cfi_offset 4, -12
 5471              		.cfi_offset 5, -8
 5472              		.cfi_offset 14, -4
1267:src/keys.c    **** 	if ( State2.state_lift ){
 5473              		.loc 1 1267 2 view .LVU1609
 5474 0002 2C4B     		ldr	r3, .L596
1268:src/keys.c    **** 		SET_INIT_LIFT;
 5475              		.loc 1 1268 7 view .LVU1610
 5476 0004 2C4C     		ldr	r4, .L596+4
1267:src/keys.c    **** 	if ( State2.state_lift ){
 5477              		.loc 1 1267 2 view .LVU1611
 5478 0006 1B68     		ldr	r3, [r3]
 5479 0008 93F8AD27 		ldrb	r2, [r3, #1965]	@ zero_extendqisi2
 5480 000c 42F00102 		orr	r2, r2, #1
 5481 0010 83F8AD27 		strb	r2, [r3, #1965]
1268:src/keys.c    **** 		SET_INIT_LIFT;
 5482              		.loc 1 1268 2 is_stmt 1 view .LVU1612
1268:src/keys.c    **** 		SET_INIT_LIFT;
 5483              		.loc 1 1268 7 is_stmt 0 view .LVU1613
 5484 0014 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
1268:src/keys.c    **** 		SET_INIT_LIFT;
 5485              		.loc 1 1268 5 view .LVU1614
 5486 0016 12F04002 		ands	r2, r2, #64
 5487 001a 26D0     		beq	.L590
1269:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regC_idx));
ARM GAS  /tmp/cc8lpfL1.s 			page 178


 5488              		.loc 1 1269 3 is_stmt 1 view .LVU1615
 5489 001c 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
 5490 0020 42F01002 		orr	r2, r2, #16
 5491 0024 83F8AC27 		strb	r2, [r3, #1964]
1270:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5492              		.loc 1 1270 3 view .LVU1616
 5493 0028 6E20     		movs	r0, #110
 5494              	.LVL433:
1270:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5495              		.loc 1 1270 3 is_stmt 0 view .LVU1617
 5496 002a FFF7FEFF 		bl	get_reg_n
 5497              	.LVL434:
 5498 002e 0546     		mov	r5, r0
1270:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5499              		.loc 1 1270 33 view .LVU1618
 5500 0030 6A20     		movs	r0, #106
 5501 0032 FFF7FEFF 		bl	get_reg_n
 5502              	.LVL435:
 5503 0036 0146     		mov	r1, r0
1270:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5504              		.loc 1 1270 3 view .LVU1619
 5505 0038 2846     		mov	r0, r5
 5506 003a FFF7FEFF 		bl	copyreg
 5507              	.LVL436:
1271:src/keys.c    **** 		lift();
 5508              		.loc 1 1271 3 is_stmt 1 view .LVU1620
 5509 003e 6F20     		movs	r0, #111
 5510 0040 FFF7FEFF 		bl	get_reg_n
 5511              	.LVL437:
 5512 0044 0546     		mov	r5, r0
1271:src/keys.c    **** 		lift();
 5513              		.loc 1 1271 33 is_stmt 0 view .LVU1621
 5514 0046 6B20     		movs	r0, #107
 5515 0048 FFF7FEFF 		bl	get_reg_n
 5516              	.LVL438:
 5517 004c 0146     		mov	r1, r0
1271:src/keys.c    **** 		lift();
 5518              		.loc 1 1271 3 view .LVU1622
 5519 004e 2846     		mov	r0, r5
 5520 0050 FFF7FEFF 		bl	copyreg
 5521              	.LVL439:
1272:src/keys.c    **** 		zero_X();
 5522              		.loc 1 1272 3 is_stmt 1 view .LVU1623
 5523 0054 FFF7FEFF 		bl	lift
 5524              	.LVL440:
1273:src/keys.c    **** 		lift();
 5525              		.loc 1 1273 3 view .LVU1624
 5526 0058 FFF7FEFF 		bl	zero_X
 5527              	.LVL441:
1274:src/keys.c    **** 		State2.state_lift = 0;
 5528              		.loc 1 1274 3 view .LVU1625
 5529 005c FFF7FEFF 		bl	lift
 5530              	.LVL442:
1275:src/keys.c    **** 	}
 5531              		.loc 1 1275 3 view .LVU1626
1275:src/keys.c    **** 	}
 5532              		.loc 1 1275 21 is_stmt 0 view .LVU1627
ARM GAS  /tmp/cc8lpfL1.s 			page 179


 5533 0060 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 5534 0062 6FF38613 		bfc	r3, #6, #1
 5535 0066 E375     		strb	r3, [r4, #23]
 5536              	.L589:
1284:src/keys.c    **** 
 5537              		.loc 1 1284 1 view .LVU1628
 5538 0068 38BD     		pop	{r3, r4, r5, pc}
 5539              	.LVL443:
 5540              	.L590:
1278:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regX_idx));
 5541              		.loc 1 1278 3 is_stmt 1 view .LVU1629
 5542 006a 93F8AC17 		ldrb	r1, [r3, #1964]	@ zero_extendqisi2
 5543 006e 62F30411 		bfi	r1, r2, #4, #1
 5544 0072 83F8AC17 		strb	r1, [r3, #1964]
1279:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5545              		.loc 1 1279 3 view .LVU1630
 5546 0076 0546     		mov	r5, r0
 5547 0078 6E20     		movs	r0, #110
 5548              	.LVL444:
1279:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5549              		.loc 1 1279 3 is_stmt 0 view .LVU1631
 5550 007a FFF7FEFF 		bl	get_reg_n
 5551              	.LVL445:
 5552 007e 0446     		mov	r4, r0
1279:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5553              		.loc 1 1279 33 view .LVU1632
 5554 0080 6420     		movs	r0, #100
 5555 0082 FFF7FEFF 		bl	get_reg_n
 5556              	.LVL446:
 5557 0086 0146     		mov	r1, r0
1279:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5558              		.loc 1 1279 3 view .LVU1633
 5559 0088 2046     		mov	r0, r4
 5560 008a FFF7FEFF 		bl	copyreg
 5561              	.LVL447:
1280:src/keys.c    **** 		zero_X();
 5562              		.loc 1 1280 3 is_stmt 1 view .LVU1634
 5563 008e 6F20     		movs	r0, #111
 5564 0090 FFF7FEFF 		bl	get_reg_n
 5565              	.LVL448:
 5566 0094 0446     		mov	r4, r0
1280:src/keys.c    **** 		zero_X();
 5567              		.loc 1 1280 33 is_stmt 0 view .LVU1635
 5568 0096 6520     		movs	r0, #101
 5569 0098 FFF7FEFF 		bl	get_reg_n
 5570              	.LVL449:
 5571 009c 0146     		mov	r1, r0
1280:src/keys.c    **** 		zero_X();
 5572              		.loc 1 1280 3 view .LVU1636
 5573 009e 2046     		mov	r0, r4
 5574 00a0 FFF7FEFF 		bl	copyreg
 5575              	.LVL450:
1281:src/keys.c    **** 		if ( zero_y ) zero_Y();
 5576              		.loc 1 1281 3 is_stmt 1 view .LVU1637
 5577 00a4 FFF7FEFF 		bl	zero_X
 5578              	.LVL451:
1282:src/keys.c    **** 	}
ARM GAS  /tmp/cc8lpfL1.s 			page 180


 5579              		.loc 1 1282 3 view .LVU1638
1282:src/keys.c    **** 	}
 5580              		.loc 1 1282 6 is_stmt 0 view .LVU1639
 5581 00a8 002D     		cmp	r5, #0
 5582 00aa DDD0     		beq	.L589
1282:src/keys.c    **** 	}
 5583              		.loc 1 1282 17 is_stmt 1 discriminator 1 view .LVU1640
1284:src/keys.c    **** 
 5584              		.loc 1 1284 1 is_stmt 0 discriminator 1 view .LVU1641
 5585 00ac BDE83840 		pop	{r3, r4, r5, lr}
 5586              		.cfi_restore 14
 5587              		.cfi_restore 5
 5588              		.cfi_restore 4
 5589              		.cfi_restore 3
 5590              		.cfi_def_cfa_offset 0
 5591              	.LVL452:
1282:src/keys.c    **** 	}
 5592              		.loc 1 1282 17 discriminator 1 view .LVU1642
 5593 00b0 FFF7FEBF 		b	zero_Y
 5594              	.LVL453:
 5595              	.L597:
 5596              		.align	2
 5597              	.L596:
 5598 00b4 00000000 		.word	main_ram
 5599 00b8 00000000 		.word	StateWhileOn
 5600              		.cfi_endproc
 5601              	.LFE25:
 5603              		.section	.text.current_catalogue_max,"ax",%progbits
 5604              		.align	1
 5605              		.p2align 2,,3
 5606              		.global	current_catalogue_max
 5607              		.syntax unified
 5608              		.thumb
 5609              		.thumb_func
 5610              		.fpu fpv4-sp-d16
 5612              	current_catalogue_max:
 5613              	.LFB44:
2477:src/keys.c    **** 	// A quick table of catalogue sizes
 5614              		.loc 1 2477 33 is_stmt 1 view -0
 5615              		.cfi_startproc
 5616              		@ args = 0, pretend = 0, frame = 0
 5617              		@ frame_needed = 0, uses_anonymous_args = 0
 5618              		@ link register save eliminated.
2480:src/keys.c    **** 	{
 5619              		.loc 1 2480 2 view .LVU1644
2511:src/keys.c    **** #endif
 5620              		.loc 1 2511 2 view .LVU1645
2511:src/keys.c    **** #endif
 5621              		.loc 1 2511 31 is_stmt 0 view .LVU1646
 5622 0000 024B     		ldr	r3, .L599
2511:src/keys.c    **** #endif
 5623              		.loc 1 2511 24 view .LVU1647
 5624 0002 034A     		ldr	r2, .L599+4
2511:src/keys.c    **** #endif
 5625              		.loc 1 2511 31 view .LVU1648
 5626 0004 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2513:src/keys.c    **** 
ARM GAS  /tmp/cc8lpfL1.s 			page 181


 5627              		.loc 1 2513 1 view .LVU1649
 5628 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 5629 0008 7047     		bx	lr
 5630              	.L600:
 5631 000a 00BF     		.align	2
 5632              	.L599:
 5633 000c 00000000 		.word	StateWhileOn
 5634 0010 00000000 		.word	.LANCHOR8
 5635              		.cfi_endproc
 5636              	.LFE44:
 5638              		.section	.text.current_catalogue,"ax",%progbits
 5639              		.align	1
 5640              		.p2align 2,,3
 5641              		.global	current_catalogue
 5642              		.syntax unified
 5643              		.thumb
 5644              		.thumb_func
 5645              		.fpu fpv4-sp-d16
 5647              	current_catalogue:
 5648              	.LVL454:
 5649              	.LFB46:
2526:src/keys.c    **** 	// A quick table of catalogue tables
 5650              		.loc 1 2526 33 is_stmt 1 view -0
 5651              		.cfi_startproc
 5652              		@ args = 0, pretend = 0, frame = 0
 5653              		@ frame_needed = 0, uses_anonymous_args = 0
 5654              		@ link register save eliminated.
2529:src/keys.c    **** 	{
 5655              		.loc 1 2529 2 view .LVU1651
2556:src/keys.c    **** 	unsigned int c = State2.catalogue;
 5656              		.loc 1 2556 2 view .LVU1652
2557:src/keys.c    **** 	int m, i;
 5657              		.loc 1 2557 2 view .LVU1653
2557:src/keys.c    **** 	int m, i;
 5658              		.loc 1 2557 25 is_stmt 0 view .LVU1654
 5659 0000 314A     		ldr	r2, .L628
2557:src/keys.c    **** 	int m, i;
 5660              		.loc 1 2557 15 view .LVU1655
 5661 0002 937B     		ldrb	r3, [r2, #14]	@ zero_extendqisi2
 5662              	.LVL455:
2558:src/keys.c    **** 	unsigned p, q;
 5663              		.loc 1 2558 2 is_stmt 1 view .LVU1656
2559:src/keys.c    **** 
 5664              		.loc 1 2559 2 view .LVU1657
2561:src/keys.c    **** 		if (n == OP_ZERO)
 5665              		.loc 1 2561 2 view .LVU1658
2561:src/keys.c    **** 		if (n == OP_ZERO)
 5666              		.loc 1 2561 5 is_stmt 0 view .LVU1659
 5667 0004 102B     		cmp	r3, #16
 5668 0006 39D0     		beq	.L622
2566:src/keys.c    **** 		if (n == OP_ZERO)
 5669              		.loc 1 2566 2 is_stmt 1 view .LVU1660
2566:src/keys.c    **** 		if (n == OP_ZERO)
 5670              		.loc 1 2566 5 is_stmt 0 view .LVU1661
 5671 0008 112B     		cmp	r3, #17
 5672 000a 32D0     		beq	.L623
2571:src/keys.c    **** 		const int cnv = conv_catalogue[n];
ARM GAS  /tmp/cc8lpfL1.s 			page 182


 5673              		.loc 1 2571 2 is_stmt 1 view .LVU1662
2571:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 5674              		.loc 1 2571 5 is_stmt 0 view .LVU1663
 5675 000c 122B     		cmp	r3, #18
 5676 000e 45D0     		beq	.L624
2584:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 5677              		.loc 1 2584 2 is_stmt 1 view .LVU1664
2584:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 5678              		.loc 1 2584 5 is_stmt 0 view .LVU1665
 5679 0010 0E2B     		cmp	r3, #14
 5680 0012 38D0     		beq	.L625
2587:src/keys.c    **** 
 5681              		.loc 1 2587 3 is_stmt 1 view .LVU1666
2587:src/keys.c    **** 
 5682              		.loc 1 2587 7 is_stmt 0 view .LVU1667
 5683 0014 2D4A     		ldr	r2, .L628+4
2589:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5684              		.loc 1 2589 35 view .LVU1668
 5685 0016 A3F10B01 		sub	r1, r3, #11
2589:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5686              		.loc 1 2589 5 view .LVU1669
 5687 001a 0429     		cmp	r1, #4
2587:src/keys.c    **** 
 5688              		.loc 1 2587 7 view .LVU1670
 5689 001c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 5690              	.LVL456:
2589:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5691              		.loc 1 2589 2 is_stmt 1 view .LVU1671
2589:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5692              		.loc 1 2589 5 is_stmt 0 view .LVU1672
 5693 0020 38D9     		bls	.L608
2592:src/keys.c    **** 		return OP_NIL | OP_NOP;
 5694              		.loc 1 2592 2 is_stmt 1 view .LVU1673
2592:src/keys.c    **** 		return OP_NIL | OP_NOP;
 5695              		.loc 1 2592 5 is_stmt 0 view .LVU1674
 5696 0022 142B     		cmp	r3, #20
 5697 0024 4DD8     		bhi	.L616
2596:src/keys.c    **** 	p = cat[0];
 5698              		.loc 1 2596 2 is_stmt 1 view .LVU1675
2526:src/keys.c    **** 	// A quick table of catalogue tables
 5699              		.loc 1 2526 33 is_stmt 0 view .LVU1676
 5700 0026 10B4     		push	{r4}
 5701              		.cfi_def_cfa_offset 4
 5702              		.cfi_offset 4, -4
2596:src/keys.c    **** 	p = cat[0];
 5703              		.loc 1 2596 11 view .LVU1677
 5704 0028 00EBA001 		add	r1, r0, r0, asr #2
2596:src/keys.c    **** 	p = cat[0];
 5705              		.loc 1 2596 6 view .LVU1678
 5706 002c 5318     		adds	r3, r2, r1
 5707              	.LVL457:
2597:src/keys.c    **** 	q = cat[1];
 5708              		.loc 1 2597 2 is_stmt 1 view .LVU1679
2598:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 5709              		.loc 1 2598 2 view .LVU1680
2599:src/keys.c    **** 
 5710              		.loc 1 2599 2 view .LVU1681
ARM GAS  /tmp/cc8lpfL1.s 			page 183


2599:src/keys.c    **** 
 5711              		.loc 1 2599 35 is_stmt 0 view .LVU1682
 5712 002e 4000     		lsls	r0, r0, #1
 5713              	.LVL458:
2597:src/keys.c    **** 	q = cat[1];
 5714              		.loc 1 2597 4 view .LVU1683
 5715 0030 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 5716              	.LVL459:
2598:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 5717              		.loc 1 2598 4 view .LVU1684
 5718 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5719              	.LVL460:
2598:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 5720              		.loc 1 2598 4 view .LVU1685
 5721 0034 2649     		ldr	r1, .L628+8
 5722              	.LVL461:
2599:src/keys.c    **** 
 5723              		.loc 1 2599 54 view .LVU1686
 5724 0036 C443     		mvns	r4, r0
2599:src/keys.c    **** 
 5725              		.loc 1 2599 35 view .LVU1687
 5726 0038 00F00600 		and	r0, r0, #6
2599:src/keys.c    **** 
 5727              		.loc 1 2599 54 view .LVU1688
 5728 003c 04F00604 		and	r4, r4, #6
2599:src/keys.c    **** 
 5729              		.loc 1 2599 24 view .LVU1689
 5730 0040 0230     		adds	r0, r0, #2
2599:src/keys.c    **** 
 5731              		.loc 1 2599 48 view .LVU1690
 5732 0042 E340     		lsrs	r3, r3, r4
 5733              	.LVL462:
2599:src/keys.c    **** 
 5734              		.loc 1 2599 18 view .LVU1691
 5735 0044 02FA00F0 		lsl	r0, r2, r0
2599:src/keys.c    **** 
 5736              		.loc 1 2599 43 view .LVU1692
 5737 0048 1843     		orrs	r0, r0, r3
2599:src/keys.c    **** 
 5738              		.loc 1 2599 4 view .LVU1693
 5739 004a C0F30903 		ubfx	r3, r0, #0, #10
 5740              	.LVL463:
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5741              		.loc 1 2602 2 is_stmt 1 view .LVU1694
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5742              		.loc 1 2602 12 view .LVU1695
2599:src/keys.c    **** 
 5743              		.loc 1 2599 4 is_stmt 0 view .LVU1696
 5744 004e 3422     		movs	r2, #52
 5745              	.LVL464:
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5746              		.loc 1 2602 8 view .LVU1697
 5747 0050 0020     		movs	r0, #0
 5748 0052 01E0     		b	.L612
 5749              	.LVL465:
 5750              	.L627:
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
ARM GAS  /tmp/cc8lpfL1.s 			page 184


 5751              		.loc 1 2602 8 view .LVU1698
 5752 0054 11F8012B 		ldrb	r2, [r1], #1	@ zero_extendqisi2
 5753              	.LVL466:
 5754              	.L612:
2603:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 5755              		.loc 1 2603 3 is_stmt 1 view .LVU1699
2605:src/keys.c    **** 	}
 5756              		.loc 1 2605 3 view .LVU1700
2603:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 5757              		.loc 1 2603 6 is_stmt 0 view .LVU1701
 5758 0058 9A42     		cmp	r2, r3
 5759 005a 2FDC     		bgt	.L626
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5760              		.loc 1 2602 25 discriminator 2 view .LVU1702
 5761 005c 0130     		adds	r0, r0, #1
 5762              	.LVL467:
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5763              		.loc 1 2602 2 discriminator 2 view .LVU1703
 5764 005e 0728     		cmp	r0, #7
2605:src/keys.c    **** 	}
 5765              		.loc 1 2605 5 discriminator 2 view .LVU1704
 5766 0060 A3EB0203 		sub	r3, r3, r2
 5767              	.LVL468:
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5768              		.loc 1 2602 24 is_stmt 1 discriminator 2 view .LVU1705
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5769              		.loc 1 2602 12 discriminator 2 view .LVU1706
2602:src/keys.c    **** 		if (m < opcode_breaks[i])
 5770              		.loc 1 2602 2 is_stmt 0 discriminator 2 view .LVU1707
 5771 0064 F6D1     		bne	.L627
2607:src/keys.c    **** }
 5772              		.loc 1 2607 2 is_stmt 1 view .LVU1708
2607:src/keys.c    **** }
 5773              		.loc 1 2607 9 is_stmt 0 view .LVU1709
 5774 0066 03F12000 		add	r0, r3, #32
 5775              	.LVL469:
2607:src/keys.c    **** }
 5776              		.loc 1 2607 9 view .LVU1710
 5777 006a 0002     		lsls	r0, r0, #8
 5778              	.L601:
2608:src/keys.c    **** 
 5779              		.loc 1 2608 1 view .LVU1711
 5780 006c 5DF8044B 		ldr	r4, [sp], #4
 5781              		.cfi_restore 4
 5782              		.cfi_def_cfa_offset 0
 5783 0070 7047     		bx	lr
 5784              	.LVL470:
 5785              	.L623:
2567:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 5786              		.loc 1 2567 3 is_stmt 1 view .LVU1712
2567:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 5787              		.loc 1 2567 6 is_stmt 0 view .LVU1713
 5788 0072 4B28     		cmp	r0, #75
 5789 0074 1FD0     		beq	.L614
2569:src/keys.c    **** 	}
 5790              		.loc 1 2569 3 is_stmt 1 view .LVU1714
2569:src/keys.c    **** 	}
ARM GAS  /tmp/cc8lpfL1.s 			page 185


 5791              		.loc 1 2569 10 is_stmt 0 view .LVU1715
 5792 0076 40F40450 		orr	r0, r0, #8448
 5793              	.LVL471:
2569:src/keys.c    **** 	}
 5794              		.loc 1 2569 10 view .LVU1716
 5795 007a 7047     		bx	lr
 5796              	.LVL472:
 5797              	.L622:
2562:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 5798              		.loc 1 2562 3 is_stmt 1 view .LVU1717
2562:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 5799              		.loc 1 2562 6 is_stmt 0 view .LVU1718
 5800 007c 4B28     		cmp	r0, #75
 5801 007e 17D0     		beq	.L613
2564:src/keys.c    **** 	}
 5802              		.loc 1 2564 3 is_stmt 1 view .LVU1719
2564:src/keys.c    **** 	}
 5803              		.loc 1 2564 10 is_stmt 0 view .LVU1720
 5804 0080 40F40050 		orr	r0, r0, #8192
 5805              	.LVL473:
2564:src/keys.c    **** 	}
 5806              		.loc 1 2564 10 view .LVU1721
 5807 0084 7047     		bx	lr
 5808              	.LVL474:
 5809              	.L625:
2584:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 5810              		.loc 1 2584 35 discriminator 1 view .LVU1722
 5811 0086 917D     		ldrb	r1, [r2, #22]	@ zero_extendqisi2
2585:src/keys.c    **** 	else
 5812              		.loc 1 2585 7 discriminator 1 view .LVU1723
 5813 0088 124B     		ldr	r3, .L628+12
 5814              	.LVL475:
2585:src/keys.c    **** 	else
 5815              		.loc 1 2585 7 discriminator 1 view .LVU1724
 5816 008a 134A     		ldr	r2, .L628+16
 5817              	.LVL476:
2585:src/keys.c    **** 	else
 5818              		.loc 1 2585 7 discriminator 1 view .LVU1725
 5819 008c 11F0100F 		tst	r1, #16
 5820 0090 18BF     		it	ne
 5821 0092 1A46     		movne	r2, r3
 5822              	.L608:
 5823              	.LVL477:
2590:src/keys.c    **** 	}
 5824              		.loc 1 2590 3 is_stmt 1 view .LVU1726
 5825              	.LBB579:
 5826              	.LBI579:
2519:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
 5827              		.loc 1 2519 15 view .LVU1727
 5828              	.LBB580:
2520:src/keys.c    **** }
 5829              		.loc 1 2520 2 view .LVU1728
2520:src/keys.c    **** }
 5830              		.loc 1 2520 9 is_stmt 0 view .LVU1729
 5831 0094 105C     		ldrb	r0, [r2, r0]	@ zero_extendqisi2
 5832              	.LVL478:
2520:src/keys.c    **** }
ARM GAS  /tmp/cc8lpfL1.s 			page 186


 5833              		.loc 1 2520 9 view .LVU1730
 5834 0096 40F48840 		orr	r0, r0, #17408
 5835              	.LVL479:
2520:src/keys.c    **** }
 5836              		.loc 1 2520 9 view .LVU1731
 5837              	.LBE580:
 5838              	.LBE579:
2590:src/keys.c    **** 	}
 5839              		.loc 1 2590 10 view .LVU1732
 5840 009a 7047     		bx	lr
 5841              	.LVL480:
 5842              	.L624:
 5843              	.LBB581:
2572:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 5844              		.loc 1 2572 3 is_stmt 1 view .LVU1733
2572:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 5845              		.loc 1 2572 33 is_stmt 0 view .LVU1734
 5846 009c 0F4B     		ldr	r3, .L628+20
 5847              	.LVL481:
2572:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 5848              		.loc 1 2572 13 view .LVU1735
 5849 009e 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 5850              	.LVL482:
2573:src/keys.c    **** 			// Monadic conversion routine
 5851              		.loc 1 2573 3 is_stmt 1 view .LVU1736
2573:src/keys.c    **** 			// Monadic conversion routine
 5852              		.loc 1 2573 6 is_stmt 0 view .LVU1737
 5853 00a0 5728     		cmp	r0, #87
2575:src/keys.c    **** 		else
 5854              		.loc 1 2575 4 is_stmt 1 view .LVU1738
2575:src/keys.c    **** 		else
 5855              		.loc 1 2575 25 is_stmt 0 view .LVU1739
 5856 00a2 C6BF     		itte	gt
 5857 00a4 5838     		subgt	r0, r0, #88
 5858              	.LVL483:
2575:src/keys.c    **** 		else
 5859              		.loc 1 2575 18 view .LVU1740
 5860 00a6 40F40070 		orrgt	r0, r0, #512
2577:src/keys.c    **** 	}
 5861              		.loc 1 2577 4 is_stmt 1 view .LVU1741
2577:src/keys.c    **** 	}
 5862              		.loc 1 2577 11 is_stmt 0 view .LVU1742
 5863 00aa 40F40C40 		orrle	r0, r0, #35840
 5864 00ae 7047     		bx	lr
 5865              	.LVL484:
 5866              	.L613:
2577:src/keys.c    **** 	}
 5867              		.loc 1 2577 11 view .LVU1743
 5868              	.LBE581:
2563:src/keys.c    **** 		return CONST(n);
 5869              		.loc 1 2563 11 view .LVU1744
 5870 00b0 4FF42740 		mov	r0, #42752
 5871              	.LVL485:
2563:src/keys.c    **** 		return CONST(n);
 5872              		.loc 1 2563 11 view .LVU1745
 5873 00b4 7047     		bx	lr
 5874              	.LVL486:
ARM GAS  /tmp/cc8lpfL1.s 			page 187


 5875              	.L614:
2568:src/keys.c    **** 		return CONST_CMPLX(n);
 5876              		.loc 1 2568 11 view .LVU1746
 5877 00b6 4FF42840 		mov	r0, #43008
 5878              	.LVL487:
2568:src/keys.c    **** 		return CONST_CMPLX(n);
 5879              		.loc 1 2568 11 view .LVU1747
 5880 00ba 7047     		bx	lr
 5881              	.LVL488:
 5882              	.L626:
 5883              		.cfi_def_cfa_offset 4
 5884              		.cfi_offset 4, -4
2604:src/keys.c    **** 		m -= opcode_breaks[i];
 5885              		.loc 1 2604 4 is_stmt 1 view .LVU1748
2604:src/keys.c    **** 		m -= opcode_breaks[i];
 5886              		.loc 1 2604 29 is_stmt 0 view .LVU1749
 5887 00bc 03EB0020 		add	r0, r3, r0, lsl #8
 5888              	.LVL489:
2604:src/keys.c    **** 		m -= opcode_breaks[i];
 5889              		.loc 1 2604 29 view .LVU1750
 5890 00c0 D4E7     		b	.L601
 5891              	.LVL490:
 5892              	.L616:
 5893              		.cfi_def_cfa_offset 0
 5894              		.cfi_restore 4
2593:src/keys.c    **** 
 5895              		.loc 1 2593 10 view .LVU1751
 5896 00c2 4FF48070 		mov	r0, #256
 5897              	.LVL491:
2608:src/keys.c    **** 
 5898              		.loc 1 2608 1 view .LVU1752
 5899 00c6 7047     		bx	lr
 5900              	.L629:
 5901              		.align	2
 5902              	.L628:
 5903 00c8 00000000 		.word	StateWhileOn
 5904 00cc 00000000 		.word	.LANCHOR12
 5905 00d0 01000000 		.word	.LANCHOR13+1
 5906 00d4 00000000 		.word	.LANCHOR10
 5907 00d8 00000000 		.word	.LANCHOR9
 5908 00dc 00000000 		.word	.LANCHOR11
 5909              		.cfi_endproc
 5910              	.LFE46:
 5912              		.section	.text.process_catalogue,"ax",%progbits
 5913              		.align	1
 5914              		.p2align 2,,3
 5915              		.syntax unified
 5916              		.thumb
 5917              		.thumb_func
 5918              		.fpu fpv4-sp-d16
 5920              	process_catalogue:
 5921              	.LVL492:
 5922              	.LFB48:
2622:src/keys.c    ****    int pos = State.catpos;
 5923              		.loc 1 2622 93 is_stmt 1 view -0
 5924              		.cfi_startproc
 5925              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/cc8lpfL1.s 			page 188


 5926              		@ frame_needed = 0, uses_anonymous_args = 0
2622:src/keys.c    ****    int pos = State.catpos;
 5927              		.loc 1 2622 93 is_stmt 0 view .LVU1754
 5928 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5929              		.cfi_def_cfa_offset 36
 5930              		.cfi_offset 4, -36
 5931              		.cfi_offset 5, -32
 5932              		.cfi_offset 6, -28
 5933              		.cfi_offset 7, -24
 5934              		.cfi_offset 8, -20
 5935              		.cfi_offset 9, -16
 5936              		.cfi_offset 10, -12
 5937              		.cfi_offset 11, -8
 5938              		.cfi_offset 14, -4
2623:src/keys.c    ****    int ch;
 5939              		.loc 1 2623 14 view .LVU1755
 5940 0004 DFF8EC92 		ldr	r9, .L744+24
 5941              	.LBB582:
 5942              	.LBB583:
2511:src/keys.c    **** #endif
 5943              		.loc 1 2511 31 view .LVU1756
 5944 0008 B44F     		ldr	r7, .L744
 5945              	.LBE583:
 5946              	.LBE582:
2623:src/keys.c    ****    int ch;
 5947              		.loc 1 2623 14 view .LVU1757
 5948 000a D9F80040 		ldr	r4, [r9]
 5949              	.LBB588:
 5950              	.LBB584:
2511:src/keys.c    **** #endif
 5951              		.loc 1 2511 31 view .LVU1758
 5952 000e 97F80EA0 		ldrb	r10, [r7, #14]	@ zero_extendqisi2
 5953              	.LBE584:
 5954              	.LBE588:
2623:src/keys.c    ****    int ch;
 5955              		.loc 1 2623 19 view .LVU1759
 5956 0012 B4F8DC57 		ldrh	r5, [r4, #2012]
 5957              	.LBB589:
 5958              	.LBB585:
2511:src/keys.c    **** #endif
 5959              		.loc 1 2511 24 view .LVU1760
 5960 0016 B24B     		ldr	r3, .L744+4
 5961              	.LBE585:
 5962              	.LBE589:
2623:src/keys.c    ****    int ch;
 5963              		.loc 1 2623 4 is_stmt 1 view .LVU1761
2622:src/keys.c    ****    int pos = State.catpos;
 5964              		.loc 1 2622 93 is_stmt 0 view .LVU1762
 5965 0018 85B0     		sub	sp, sp, #20
 5966              		.cfi_def_cfa_offset 56
 5967              	.LBB590:
 5968              	.LBB586:
2511:src/keys.c    **** #endif
 5969              		.loc 1 2511 24 view .LVU1763
 5970 001a 13F80A80 		ldrb	r8, [r3, r10]	@ zero_extendqisi2
 5971              	.LBE586:
 5972              	.LBE590:
ARM GAS  /tmp/cc8lpfL1.s 			page 189


2622:src/keys.c    ****    int pos = State.catpos;
 5973              		.loc 1 2622 93 view .LVU1764
 5974 001e 1646     		mov	r6, r2
2623:src/keys.c    ****    int ch;
 5975              		.loc 1 2623 8 view .LVU1765
 5976 0020 C5F34615 		ubfx	r5, r5, #5, #7
 5977              	.LVL493:
2624:src/keys.c    ****    const int ctmax = current_catalogue_max();
 5978              		.loc 1 2624 4 is_stmt 1 view .LVU1766
2625:src/keys.c    ****    const enum catalogues cat = (enum catalogues) State2.catalogue;
 5979              		.loc 1 2625 4 view .LVU1767
 5980              	.LBB591:
 5981              	.LBI582:
2477:src/keys.c    **** 	// A quick table of catalogue sizes
 5982              		.loc 1 2477 5 view .LVU1768
 5983              	.LBB587:
2480:src/keys.c    **** 	{
 5984              		.loc 1 2480 2 view .LVU1769
2511:src/keys.c    **** #endif
 5985              		.loc 1 2511 2 view .LVU1770
2511:src/keys.c    **** #endif
 5986              		.loc 1 2511 2 is_stmt 0 view .LVU1771
 5987              	.LBE587:
 5988              	.LBE591:
2626:src/keys.c    **** 
 5989              		.loc 1 2626 4 is_stmt 1 view .LVU1772
2628:src/keys.c    ****      switch (c) {
 5990              		.loc 1 2628 4 view .LVU1773
2628:src/keys.c    ****      switch (c) {
 5991              		.loc 1 2628 7 is_stmt 0 view .LVU1774
 5992 0024 0029     		cmp	r1, #0
 5993 0026 65D0     		beq	.L729
2689:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
 5994              		.loc 1 2689 11 is_stmt 1 view .LVU1775
2689:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
 5995              		.loc 1 2689 14 is_stmt 0 view .LVU1776
 5996 0028 0129     		cmp	r1, #1
 5997 002a 00F0ED80 		beq	.L730
2723:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
 5998              		.loc 1 2723 11 is_stmt 1 view .LVU1777
2723:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
 5999              		.loc 1 2723 14 is_stmt 0 view .LVU1778
 6000 002e 0229     		cmp	r1, #2
 6001 0030 00F00B81 		beq	.L731
 6002              	.LVL494:
 6003              	.L666:
 6004              	.LBB592:
 6005              	.LBB593:
 491:src/keys.c    **** }
 6006              		.loc 1 491 2 is_stmt 1 view .LVU1779
 6007              	.LBB594:
 6008              	.LBI594:
 131:src/keys.c    **** {
 6009              		.loc 1 131 12 view .LVU1780
 6010              	.LBB595:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 6011              		.loc 1 133 2 view .LVU1781
ARM GAS  /tmp/cc8lpfL1.s 			page 190


 143:src/keys.c    **** }
 6012              		.loc 1 143 2 view .LVU1782
 143:src/keys.c    **** }
 6013              		.loc 1 143 23 is_stmt 0 view .LVU1783
 6014 0034 AB4B     		ldr	r3, .L744+8
 6015              	.LBE595:
 6016              	.LBE594:
 491:src/keys.c    **** }
 6017              		.loc 1 491 49 view .LVU1784
 6018 0036 AC4A     		ldr	r2, .L744+12
 6019              	.LBB597:
 6020              	.LBB596:
 143:src/keys.c    **** }
 6021              		.loc 1 143 23 view .LVU1785
 6022 0038 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 6023              	.LBE596:
 6024              	.LBE597:
 491:src/keys.c    **** }
 6025              		.loc 1 491 49 view .LVU1786
 6026 003a 03EB4303 		add	r3, r3, r3, lsl #1
 6027 003e 02EB4303 		add	r3, r2, r3, lsl #1
 6028              	.LBE593:
 6029              	.LBE592:
 6030              	.LBB601:
 6031              	.LBB602:
 6032              	.LBB603:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 6033              		.loc 1 106 16 view .LVU1787
 6034 0042 0025     		movs	r5, #0
 6035              	.LVL495:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 6036              		.loc 1 106 16 view .LVU1788
 6037              	.LBE603:
 6038              	.LBE602:
 6039              	.LBE601:
2733:src/keys.c    ****    reset_shift();
 6040              		.loc 1 2733 9 view .LVU1789
 6041 0044 585C     		ldrb	r0, [r3, r1]	@ zero_extendqisi2
 6042              	.LVL496:
2733:src/keys.c    ****    reset_shift();
 6043              		.loc 1 2733 9 view .LVU1790
 6044 0046 FFF7FEFF 		bl	remap_chars
 6045              	.LVL497:
2733:src/keys.c    ****    reset_shift();
 6046              		.loc 1 2733 9 view .LVU1791
 6047 004a 0446     		mov	r4, r0
 6048              	.LVL498:
2734:src/keys.c    ****    if (ch == '\0')
 6049              		.loc 1 2734 4 is_stmt 1 view .LVU1792
 6050              	.LBB608:
 6051              	.LBI601:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 6052              		.loc 1 114 13 view .LVU1793
 6053              	.LBE608:
 115:src/keys.c    **** }
 6054              		.loc 1 115 2 view .LVU1794
 6055              	.LBB609:
ARM GAS  /tmp/cc8lpfL1.s 			page 191


 6056              	.LBB607:
 6057              	.LBI602:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 6058              		.loc 1 104 20 view .LVU1795
 6059              	.LBB606:
 105:src/keys.c    **** 	State2.shifts = shift;
 6060              		.loc 1 105 2 view .LVU1796
 6061              	.LBB604:
 6062              	.LBI604:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 6063              		.loc 1 96 13 view .LVU1797
 6064              	.LBB605:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 6065              		.loc 1 97 2 view .LVU1798
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 6066              		.loc 1 97 18 is_stmt 0 view .LVU1799
 6067 004c FFF7FEFF 		bl	shift_down
 6068              	.LVL499:
  98:src/keys.c    **** }
 6069              		.loc 1 98 2 is_stmt 1 view .LVU1800
 6070              	.LBE605:
 6071              	.LBE604:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 6072              		.loc 1 106 2 view .LVU1801
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 6073              		.loc 1 106 16 is_stmt 0 view .LVU1802
 6074 0050 3D74     		strb	r5, [r7, #16]
 108:src/keys.c    **** }
 6075              		.loc 1 108 2 is_stmt 1 view .LVU1803
 6076              	.LVL500:
 108:src/keys.c    **** }
 6077              		.loc 1 108 2 is_stmt 0 view .LVU1804
 6078              	.LBE606:
 6079              	.LBE607:
 6080              	.LBE609:
2735:src/keys.c    ****      return STATE_UNFINISHED;
 6081              		.loc 1 2735 4 is_stmt 1 view .LVU1805
2735:src/keys.c    ****      return STATE_UNFINISHED;
 6082              		.loc 1 2735 7 is_stmt 0 view .LVU1806
 6083 0052 002C     		cmp	r4, #0
 6084 0054 6FD0     		beq	.L728
2737:src/keys.c    ****      // No multi character search in alpha catalogues
 6085              		.loc 1 2737 4 is_stmt 1 view .LVU1807
2737:src/keys.c    ****      // No multi character search in alpha catalogues
 6086              		.loc 1 2737 7 is_stmt 0 view .LVU1808
 6087 0056 AAF10B0A 		sub	r10, r10, #11
 6088              	.LVL501:
2737:src/keys.c    ****      // No multi character search in alpha catalogues
 6089              		.loc 1 2737 7 view .LVU1809
 6090 005a BAF1040F 		cmp	r10, #4
 6091 005e 40F2CB80 		bls	.L680
2741:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6092              		.loc 1 2741 4 is_stmt 1 view .LVU1810
2741:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6093              		.loc 1 2741 8 is_stmt 0 view .LVU1811
 6094 0062 3D7F     		ldrb	r5, [r7, #28]	@ zero_extendqisi2
2741:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
ARM GAS  /tmp/cc8lpfL1.s 			page 192


 6095              		.loc 1 2741 7 view .LVU1812
 6096 0064 092D     		cmp	r5, #9
 6097 0066 40F2C780 		bls	.L680
 6098              	.LVL502:
 6099              	.L648:
2746:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
 6100              		.loc 1 2746 4 is_stmt 1 view .LVU1813
2746:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
 6101              		.loc 1 2746 27 is_stmt 0 view .LVU1814
 6102 006a 7B19     		adds	r3, r7, r5
 6103 006c 0025     		movs	r5, #0
 6104 006e 83F82050 		strb	r5, [r3, #32]
2747:src/keys.c    ****      char buf[16];
 6105              		.loc 1 2747 4 is_stmt 1 view .LVU1815
 6106              	.LVL503:
2747:src/keys.c    ****      char buf[16];
 6107              		.loc 1 2747 18 view .LVU1816
2747:src/keys.c    ****      char buf[16];
 6108              		.loc 1 2747 4 is_stmt 0 view .LVU1817
 6109 0072 B8F1000F 		cmp	r8, #0
 6110 0076 00F0D780 		beq	.L726
 6111              	.LVL504:
 6112              	.L668:
 6113              	.LBB610:
2748:src/keys.c    ****      const char *cmd = catcmd(current_catalogue(pos), buf);
 6114              		.loc 1 2748 6 is_stmt 1 view .LVU1818
2749:src/keys.c    ****      int i;
 6115              		.loc 1 2749 6 view .LVU1819
2749:src/keys.c    ****      int i;
 6116              		.loc 1 2749 24 is_stmt 0 view .LVU1820
 6117 007a 2846     		mov	r0, r5
 6118 007c FFF7FEFF 		bl	current_catalogue
 6119              	.LVL505:
 6120 0080 6946     		mov	r1, sp
 6121 0082 FFF7FEFF 		bl	catcmd
 6122              	.LVL506:
 6123 0086 0446     		mov	r4, r0
 6124              	.LVL507:
2750:src/keys.c    **** 
 6125              		.loc 1 2750 6 is_stmt 1 view .LVU1821
2752:src/keys.c    ****        cmd++;
 6126              		.loc 1 2752 6 view .LVU1822
2753:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
 6127              		.loc 1 2753 8 view .LVU1823
2752:src/keys.c    ****        cmd++;
 6128              		.loc 1 2752 10 is_stmt 0 view .LVU1824
 6129 0088 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 6130              	.LVL508:
2752:src/keys.c    ****        cmd++;
 6131              		.loc 1 2752 9 view .LVU1825
 6132 008a 1428     		cmp	r0, #20
 6133 008c 04BF     		itt	eq
 6134 008e 6078     		ldrbeq	r0, [r4, #1]	@ zero_extendqisi2
2753:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
 6135              		.loc 1 2753 11 view .LVU1826
 6136 0090 0134     		addeq	r4, r4, #1
 6137              	.LVL509:
ARM GAS  /tmp/cc8lpfL1.s 			page 193


2754:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6138              		.loc 1 2754 6 is_stmt 1 view .LVU1827
2754:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6139              		.loc 1 2754 16 view .LVU1828
2754:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6140              		.loc 1 2754 6 is_stmt 0 view .LVU1829
 6141 0092 0028     		cmp	r0, #0
 6142 0094 00F0BF80 		beq	.L670
 6143 0098 DFF85CB2 		ldr	fp, .L744+28
 6144 009c C4F1010A 		rsb	r10, r4, #1
 6145 00a0 06E0     		b	.L673
 6146              	.LVL510:
 6147              	.L733:
 6148              	.LBB611:
2759:src/keys.c    **** 	 break;
 6149              		.loc 1 2759 16 view .LVU1830
 6150 00a2 C0F2BA80 		blt	.L672
 6151              	.LBE611:
2754:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6152              		.loc 1 2754 19 discriminator 2 view .LVU1831
 6153 00a6 14F8010F 		ldrb	r0, [r4, #1]!	@ zero_extendqisi2
 6154              	.LVL511:
2754:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6155              		.loc 1 2754 6 discriminator 2 view .LVU1832
 6156 00aa 0028     		cmp	r0, #0
 6157 00ac 00F0BF80 		beq	.L732
 6158              	.LVL512:
 6159              	.L673:
 6160              	.LBB612:
2755:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
 6161              		.loc 1 2755 8 is_stmt 1 view .LVU1833
2755:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
 6162              		.loc 1 2755 22 is_stmt 0 view .LVU1834
 6163 00b0 FFF7FEFF 		bl	remap_chars
 6164              	.LVL513:
2759:src/keys.c    **** 	 break;
 6165              		.loc 1 2759 13 is_stmt 1 view .LVU1835
 6166              	.LBE612:
2754:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6167              		.loc 1 2754 32 view .LVU1836
 6168              	.LBB613:
2756:src/keys.c    ****        if (c > cl)
 6169              		.loc 1 2756 8 view .LVU1837
2756:src/keys.c    ****        if (c > cl)
 6170              		.loc 1 2756 46 is_stmt 0 view .LVU1838
 6171 00b4 1BF8013F 		ldrb	r3, [fp, #1]!	@ zero_extendqisi2
 6172              	.LVL514:
2757:src/keys.c    **** 	 goto set_pos;
 6173              		.loc 1 2757 8 is_stmt 1 view .LVU1839
2757:src/keys.c    **** 	 goto set_pos;
 6174              		.loc 1 2757 11 is_stmt 0 view .LVU1840
 6175 00b8 9842     		cmp	r0, r3
 6176 00ba 0AEB0402 		add	r2, r10, r4
 6177              	.LVL515:
2757:src/keys.c    **** 	 goto set_pos;
 6178              		.loc 1 2757 11 view .LVU1841
 6179              	.LBE613:
ARM GAS  /tmp/cc8lpfL1.s 			page 194


2754:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6180              		.loc 1 2754 16 is_stmt 1 view .LVU1842
 6181              	.LBB614:
2757:src/keys.c    **** 	 goto set_pos;
 6182              		.loc 1 2757 11 is_stmt 0 view .LVU1843
 6183 00be F0DD     		ble	.L733
 6184              	.LVL516:
 6185              	.L671:
2757:src/keys.c    **** 	 goto set_pos;
 6186              		.loc 1 2757 11 view .LVU1844
 6187 00c0 D9F80040 		ldr	r4, [r9]
 6188              	.L651:
2757:src/keys.c    **** 	 goto set_pos;
 6189              		.loc 1 2757 11 view .LVU1845
 6190              	.LBE614:
 6191              	.LBE610:
2768:src/keys.c    ****      --pos;
 6192              		.loc 1 2768 10 is_stmt 1 view .LVU1846
 6193 00c4 002E     		cmp	r6, #0
 6194 00c6 00F0B680 		beq	.L655
2768:src/keys.c    ****      --pos;
 6195              		.loc 1 2768 20 is_stmt 0 view .LVU1847
 6196 00ca 4DB1     		cbz	r5, .L649
 6197              	.LVL517:
 6198              	.L727:
2768:src/keys.c    ****      --pos;
 6199              		.loc 1 2768 20 view .LVU1848
 6200 00cc 2846     		mov	r0, r5
 6201 00ce FFF7FEFF 		bl	current_catalogue
 6202              	.LVL518:
2769:src/keys.c    ****    State.catpos = pos;
 6203              		.loc 1 2769 6 is_stmt 1 view .LVU1849
2768:src/keys.c    ****      --pos;
 6204              		.loc 1 2768 10 view .LVU1850
 6205              	.LBB615:
 6206              	.LBI615:
2615:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 6207              		.loc 1 2615 12 view .LVU1851
 6208              	.LBB616:
2616:src/keys.c    **** }
 6209              		.loc 1 2616 2 view .LVU1852
2616:src/keys.c    **** }
 6210              		.loc 1 2616 33 is_stmt 0 view .LVU1853
 6211 00d2 00F0F000 		and	r0, r0, #240
 6212              	.LBE616:
 6213              	.LBE615:
2768:src/keys.c    ****      --pos;
 6214              		.loc 1 2768 27 view .LVU1854
 6215 00d6 F028     		cmp	r0, #240
 6216 00d8 40F0AD80 		bne	.L655
2768:src/keys.c    ****      --pos;
 6217              		.loc 1 2768 20 view .LVU1855
 6218 00dc 013D     		subs	r5, r5, #1
 6219              	.LVL519:
2768:src/keys.c    ****      --pos;
 6220              		.loc 1 2768 20 view .LVU1856
 6221 00de F5D1     		bne	.L727
ARM GAS  /tmp/cc8lpfL1.s 			page 195


 6222              	.LVL520:
 6223              	.L649:
2770:src/keys.c    ****    return STATE_UNFINISHED;
 6224              		.loc 1 2770 4 is_stmt 1 view .LVU1857
2770:src/keys.c    ****    return STATE_UNFINISHED;
 6225              		.loc 1 2770 17 is_stmt 0 view .LVU1858
 6226 00e0 B4F8DC37 		ldrh	r3, [r4, #2012]
 6227 00e4 65F34B13 		bfi	r3, r5, #5, #7
 6228 00e8 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2771:src/keys.c    ****  }
 6229              		.loc 1 2771 4 is_stmt 1 view .LVU1859
2771:src/keys.c    ****  }
 6230              		.loc 1 2771 11 is_stmt 0 view .LVU1860
 6231 00ec 3320     		movs	r0, #51
 6232              	.L740:
2772:src/keys.c    **** 
 6233              		.loc 1 2772 2 view .LVU1861
 6234 00ee 05B0     		add	sp, sp, #20
 6235              		.cfi_remember_state
 6236              		.cfi_def_cfa_offset 36
 6237              		@ sp needed
 6238 00f0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6239              	.LVL521:
 6240              	.L729:
 6241              		.cfi_restore_state
2629:src/keys.c    **** #ifdef DM42
 6242              		.loc 1 2629 6 is_stmt 1 view .LVU1862
 6243 00f4 431F     		subs	r3, r0, #5
 6244 00f6 1F2B     		cmp	r3, #31
 6245 00f8 2FD8     		bhi	.L632
 6246 00fa DFE803F0 		tbb	[pc, r3]
 6247              	.LVL522:
 6248              	.L634:
 6249 00fe 35       		.byte	(.L638-.L634)/2
 6250 00ff 2E       		.byte	(.L632-.L634)/2
 6251 0100 2E       		.byte	(.L632-.L634)/2
 6252 0101 2E       		.byte	(.L632-.L634)/2
 6253 0102 2E       		.byte	(.L632-.L634)/2
 6254 0103 2E       		.byte	(.L632-.L634)/2
 6255 0104 2E       		.byte	(.L632-.L634)/2
 6256 0105 35       		.byte	(.L638-.L634)/2
 6257 0106 2E       		.byte	(.L632-.L634)/2
 6258 0107 2E       		.byte	(.L632-.L634)/2
 6259 0108 2E       		.byte	(.L632-.L634)/2
 6260 0109 20       		.byte	(.L637-.L634)/2
 6261 010a 2E       		.byte	(.L632-.L634)/2
 6262 010b 64       		.byte	(.L636-.L634)/2
 6263 010c 2E       		.byte	(.L632-.L634)/2
 6264 010d 2E       		.byte	(.L632-.L634)/2
 6265 010e 2E       		.byte	(.L632-.L634)/2
 6266 010f 2E       		.byte	(.L632-.L634)/2
 6267 0110 2E       		.byte	(.L632-.L634)/2
 6268 0111 6B       		.byte	(.L635-.L634)/2
 6269 0112 2E       		.byte	(.L632-.L634)/2
 6270 0113 2E       		.byte	(.L632-.L634)/2
 6271 0114 2E       		.byte	(.L632-.L634)/2
 6272 0115 2E       		.byte	(.L632-.L634)/2
ARM GAS  /tmp/cc8lpfL1.s 			page 196


 6273 0116 2E       		.byte	(.L632-.L634)/2
 6274 0117 2E       		.byte	(.L632-.L634)/2
 6275 0118 2E       		.byte	(.L632-.L634)/2
 6276 0119 2E       		.byte	(.L632-.L634)/2
 6277 011a 2E       		.byte	(.L632-.L634)/2
 6278 011b 2E       		.byte	(.L632-.L634)/2
 6279 011c 2E       		.byte	(.L632-.L634)/2
 6280 011d 27       		.byte	(.L633-.L634)/2
 6281              		.p2align 1
 6282              	.L739:
2718:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6283              		.loc 1 2718 42 is_stmt 0 discriminator 1 view .LVU1863
 6284 011e 734A     		ldr	r2, .L744+16
 6285              	.LVL523:
2718:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6286              		.loc 1 2718 42 discriminator 1 view .LVU1864
 6287 0120 7B69     		ldr	r3, [r7, #20]
2718:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6288              		.loc 1 2718 24 discriminator 1 view .LVU1865
 6289 0122 1A42     		tst	r2, r3
 6290 0124 75D0     		beq	.L663
2720:src/keys.c    ****        return STATE_UNFINISHED;
 6291              		.loc 1 2720 8 is_stmt 1 view .LVU1866
2720:src/keys.c    ****        return STATE_UNFINISHED;
 6292              		.loc 1 2720 38 is_stmt 0 view .LVU1867
 6293 0126 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 6294 0128 C3F30012 		ubfx	r2, r3, #4, #1
2720:src/keys.c    ****        return STATE_UNFINISHED;
 6295              		.loc 1 2720 30 view .LVU1868
 6296 012c C2F10102 		rsb	r2, r2, #1
2720:src/keys.c    ****        return STATE_UNFINISHED;
 6297              		.loc 1 2720 26 view .LVU1869
 6298 0130 62F30413 		bfi	r3, r2, #4, #1
 6299 0134 BB75     		strb	r3, [r7, #22]
 6300              	.LVL524:
 6301              	.L728:
2721:src/keys.c    ****      }
 6302              		.loc 1 2721 8 is_stmt 1 view .LVU1870
2721:src/keys.c    ****      }
 6303              		.loc 1 2721 15 is_stmt 0 view .LVU1871
 6304 0136 3320     		movs	r0, #51
 6305              	.L630:
2772:src/keys.c    **** 
 6306              		.loc 1 2772 2 view .LVU1872
 6307 0138 05B0     		add	sp, sp, #20
 6308              		.cfi_remember_state
 6309              		.cfi_def_cfa_offset 36
 6310              		@ sp needed
 6311 013a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6312              	.LVL525:
 6313              	.L637:
 6314              		.cfi_restore_state
2658:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6315              		.loc 1 2658 8 is_stmt 1 view .LVU1873
2658:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6316              		.loc 1 2658 11 is_stmt 0 view .LVU1874
 6317 013e 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
ARM GAS  /tmp/cc8lpfL1.s 			page 197


 6318 0140 23B1     		cbz	r3, .L633
2658:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6319              		.loc 1 2658 33 discriminator 1 view .LVU1875
 6320 0142 FFF7FEFF 		bl	keyticks
 6321              	.LVL526:
2658:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6322              		.loc 1 2658 30 discriminator 1 view .LVU1876
 6323 0146 1D28     		cmp	r0, #29
 6324 0148 40F39580 		ble	.L734
 6325              	.L633:
2668:src/keys.c    ****        return STATE_UNFINISHED;
 6326              		.loc 1 2668 8 is_stmt 1 view .LVU1877
 6327 014c 0020     		movs	r0, #0
 6328 014e FFF7FEFF 		bl	init_cat
 6329              	.LVL527:
2669:src/keys.c    **** 
 6330              		.loc 1 2669 8 view .LVU1878
2669:src/keys.c    **** 
 6331              		.loc 1 2669 15 is_stmt 0 view .LVU1879
 6332 0152 3320     		movs	r0, #51
2772:src/keys.c    **** 
 6333              		.loc 1 2772 2 view .LVU1880
 6334 0154 05B0     		add	sp, sp, #20
 6335              		.cfi_remember_state
 6336              		.cfi_def_cfa_offset 36
 6337              		@ sp needed
 6338 0156 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6339              	.LVL528:
 6340              	.L632:
 6341              		.cfi_restore_state
 6342              	.LBB617:
 6343              	.LBI592:
 435:src/keys.c    **** {
 6344              		.loc 1 435 12 is_stmt 1 discriminator 4 view .LVU1881
 6345              	.LBB598:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6346              		.loc 1 437 2 discriminator 4 view .LVU1882
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6347              		.loc 1 485 2 discriminator 4 view .LVU1883
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6348              		.loc 1 485 6 is_stmt 0 discriminator 4 view .LVU1884
 6349 015a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6350              		.loc 1 485 5 discriminator 4 view .LVU1885
 6351 015c 13F0100F 		tst	r3, #16
 6352 0160 14BF     		ite	ne
 6353 0162 0421     		movne	r1, #4
 6354              	.LVL529:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6355              		.loc 1 485 5 discriminator 4 view .LVU1886
 6356 0164 0021     		moveq	r1, #0
 6357 0166 65E7     		b	.L666
 6358              	.LVL530:
 6359              	.L638:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6360              		.loc 1 485 5 discriminator 4 view .LVU1887
 6361              	.LBE598:
ARM GAS  /tmp/cc8lpfL1.s 			page 198


 6362              	.LBE617:
2636:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6363              		.loc 1 2636 8 is_stmt 1 view .LVU1888
2636:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6364              		.loc 1 2636 11 is_stmt 0 view .LVU1889
 6365 0168 4545     		cmp	r5, r8
 6366 016a EFDA     		bge	.L633
 6367 016c 2846     		mov	r0, r5
 6368              	.LVL531:
2636:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6369              		.loc 1 2636 24 discriminator 1 view .LVU1890
 6370 016e 002E     		cmp	r6, #0
 6371 0170 00F08D80 		beq	.L735
 6372              	.LVL532:
 6373              	.LBB618:
 6374              	.LBI618:
2615:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 6375              		.loc 1 2615 12 is_stmt 1 view .LVU1891
 6376              	.LBB619:
2616:src/keys.c    **** }
 6377              		.loc 1 2616 2 view .LVU1892
2616:src/keys.c    **** }
 6378              		.loc 1 2616 10 is_stmt 0 view .LVU1893
 6379 0174 FFF7FEFF 		bl	current_catalogue
 6380              	.LVL533:
2616:src/keys.c    **** }
 6381              		.loc 1 2616 33 view .LVU1894
 6382 0178 00F0F003 		and	r3, r0, #240
 6383              	.LBE619:
 6384              	.LBE618:
2636:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6385              		.loc 1 2636 27 view .LVU1895
 6386 017c F02B     		cmp	r3, #240
 6387              	.LBB621:
 6388              	.LBB620:
2616:src/keys.c    **** }
 6389              		.loc 1 2616 10 view .LVU1896
 6390 017e 0446     		mov	r4, r0
 6391              	.LBE620:
 6392              	.LBE621:
2636:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6393              		.loc 1 2636 27 view .LVU1897
 6394 0180 E4D0     		beq	.L633
 6395              	.L641:
 6396              	.LBB622:
2637:src/keys.c    **** 
 6397              		.loc 1 2637 3 is_stmt 1 view .LVU1898
2639:src/keys.c    **** 
 6398              		.loc 1 2639 3 view .LVU1899
 6399 0182 0020     		movs	r0, #0
 6400 0184 FFF7FEFF 		bl	init_cat
 6401              	.LVL534:
2641:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 6402              		.loc 1 2641 3 view .LVU1900
2641:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 6403              		.loc 1 2641 6 is_stmt 0 view .LVU1901
 6404 0188 14F47043 		ands	r3, r4, #61440
ARM GAS  /tmp/cc8lpfL1.s 			page 199


 6405 018c 00F08C80 		beq	.L642
2641:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 6406              		.loc 1 2641 7 discriminator 1 view .LVU1902
 6407 0190 B3F5704F 		cmp	r3, #61440
 6408 0194 00F08880 		beq	.L642
 6409              	.LBB623:
2642:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 6410              		.loc 1 2642 5 is_stmt 1 view .LVU1903
2642:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 6411              		.loc 1 2642 31 is_stmt 0 view .LVU1904
 6412 0198 C4F30723 		ubfx	r3, r4, #8, #8
 6413 019c A3F12005 		sub	r5, r3, #32
 6414              	.LVL535:
2642:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 6415              		.loc 1 2642 31 view .LVU1905
 6416 01a0 EDB2     		uxtb	r5, r5
 6417              	.LVL536:
2643:src/keys.c    **** 	     return op;
 6418              		.loc 1 2643 5 is_stmt 1 view .LVU1906
2643:src/keys.c    **** 	     return op;
 6419              		.loc 1 2643 8 is_stmt 0 view .LVU1907
 6420 01a2 012D     		cmp	r5, #1
 6421 01a4 40F28980 		bls	.L643
2643:src/keys.c    **** 	     return op;
 6422              		.loc 1 2643 56 discriminator 1 view .LVU1908
 6423 01a8 6C2D     		cmp	r5, #108
 6424 01aa 00F08680 		beq	.L643
2643:src/keys.c    **** 	     return op;
 6425              		.loc 1 2643 77 discriminator 2 view .LVU1909
 6426 01ae 242D     		cmp	r5, #36
 6427 01b0 00F08380 		beq	.L643
2645:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 6428              		.loc 1 2645 5 is_stmt 1 view .LVU1910
2645:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 6429              		.loc 1 2645 30 is_stmt 0 view .LVU1911
 6430 01b4 A5F12D02 		sub	r2, r5, #45
2645:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 6431              		.loc 1 2645 8 view .LVU1912
 6432 01b8 062A     		cmp	r2, #6
 6433 01ba 00F29F80 		bhi	.L646
2646:src/keys.c    **** 	   else
 6434              		.loc 1 2646 7 is_stmt 1 view .LVU1913
2646:src/keys.c    **** 	   else
 6435              		.loc 1 2646 28 is_stmt 0 view .LVU1914
 6436 01be 4D3B     		subs	r3, r3, #77
2646:src/keys.c    **** 	   else
 6437              		.loc 1 2646 19 view .LVU1915
 6438 01c0 FB73     		strb	r3, [r7, #15]
 6439              	.LBE623:
 6440              	.LBE622:
2655:src/keys.c    **** 
 6441              		.loc 1 2655 15 view .LVU1916
 6442 01c2 3320     		movs	r0, #51
 6443              	.LBB633:
 6444              	.LBB626:
 6445 01c4 B8E7     		b	.L630
 6446              	.LVL537:
ARM GAS  /tmp/cc8lpfL1.s 			page 200


 6447              	.L636:
2655:src/keys.c    **** 
 6448              		.loc 1 2655 15 view .LVU1917
 6449              	.LBE626:
 6450              	.LBE633:
2672:src/keys.c    ****        if (pos == 0)
 6451              		.loc 1 2672 8 is_stmt 1 view .LVU1918
2672:src/keys.c    ****        if (pos == 0)
 6452              		.loc 1 2672 22 is_stmt 0 view .LVU1919
 6453 01c6 0023     		movs	r3, #0
 6454 01c8 3B77     		strb	r3, [r7, #28]
2673:src/keys.c    **** 	 goto set_max;
 6455              		.loc 1 2673 8 is_stmt 1 view .LVU1920
2673:src/keys.c    **** 	 goto set_max;
 6456              		.loc 1 2673 11 is_stmt 0 view .LVU1921
 6457 01ca 002D     		cmp	r5, #0
 6458 01cc 5DD1     		bne	.L736
 6459              	.LVL538:
 6460              	.L650:
2766:src/keys.c    ****  set_pos:
 6461              		.loc 1 2766 4 is_stmt 1 view .LVU1922
2766:src/keys.c    ****  set_pos:
 6462              		.loc 1 2766 8 is_stmt 0 view .LVU1923
 6463 01ce 08F1FF35 		add	r5, r8, #-1
 6464              	.LVL539:
2766:src/keys.c    ****  set_pos:
 6465              		.loc 1 2766 8 view .LVU1924
 6466 01d2 77E7     		b	.L651
 6467              	.LVL540:
 6468              	.L635:
2680:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 6469              		.loc 1 2680 8 is_stmt 1 view .LVU1925
2680:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 6470              		.loc 1 2680 22 is_stmt 0 view .LVU1926
 6471 01d4 0023     		movs	r3, #0
 6472 01d6 3B77     		strb	r3, [r7, #28]
2681:src/keys.c    ****        if (pos >= ctmax)
 6473              		.loc 1 2681 8 is_stmt 1 view .LVU1927
2681:src/keys.c    ****        if (pos >= ctmax)
 6474              		.loc 1 2681 14 is_stmt 0 view .LVU1928
 6475 01d8 06E0     		b	.L654
 6476              	.LVL541:
 6477              	.L737:
2681:src/keys.c    ****        if (pos >= ctmax)
 6478              		.loc 1 2681 29 discriminator 1 view .LVU1929
 6479 01da 66B3     		cbz	r6, .L655
 6480              	.LBB634:
 6481              	.LBB635:
2616:src/keys.c    **** }
 6482              		.loc 1 2616 10 view .LVU1930
 6483 01dc FFF7FEFF 		bl	current_catalogue
 6484              	.LVL542:
2616:src/keys.c    **** }
 6485              		.loc 1 2616 33 view .LVU1931
 6486 01e0 00F0F000 		and	r0, r0, #240
 6487              	.LBE635:
 6488              	.LBE634:
ARM GAS  /tmp/cc8lpfL1.s 			page 201


2681:src/keys.c    ****        if (pos >= ctmax)
 6489              		.loc 1 2681 41 view .LVU1932
 6490 01e4 F028     		cmp	r0, #240
 6491 01e6 26D1     		bne	.L655
 6492              	.L654:
2681:src/keys.c    ****        if (pos >= ctmax)
 6493              		.loc 1 2681 65 is_stmt 1 discriminator 3 view .LVU1933
2681:src/keys.c    ****        if (pos >= ctmax)
 6494              		.loc 1 2681 14 discriminator 3 view .LVU1934
 6495 01e8 0135     		adds	r5, r5, #1
 6496              	.LVL543:
 6497              	.LBB638:
 6498              	.LBI634:
2615:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 6499              		.loc 1 2615 12 discriminator 3 view .LVU1935
 6500              	.LBB636:
2616:src/keys.c    **** }
 6501              		.loc 1 2616 2 discriminator 3 view .LVU1936
 6502              	.LBE636:
 6503              	.LBE638:
2681:src/keys.c    ****        if (pos >= ctmax)
 6504              		.loc 1 2681 14 is_stmt 0 discriminator 3 view .LVU1937
 6505 01ea A845     		cmp	r8, r5
 6506              	.LBB639:
 6507              	.LBB637:
2616:src/keys.c    **** }
 6508              		.loc 1 2616 10 discriminator 3 view .LVU1938
 6509 01ec 2846     		mov	r0, r5
 6510              	.LBE637:
 6511              	.LBE639:
2681:src/keys.c    ****        if (pos >= ctmax)
 6512              		.loc 1 2681 14 discriminator 3 view .LVU1939
 6513 01ee F4DC     		bgt	.L737
 6514              	.LVL544:
2768:src/keys.c    ****      --pos;
 6515              		.loc 1 2768 10 is_stmt 1 view .LVU1940
2683:src/keys.c    ****        goto set_pos;
 6516              		.loc 1 2683 7 is_stmt 0 view .LVU1941
 6517 01f0 3546     		mov	r5, r6
 6518              	.LVL545:
2768:src/keys.c    ****      --pos;
 6519              		.loc 1 2768 10 view .LVU1942
 6520 01f2 06B3     		cbz	r6, .L655
 6521              	.LVL546:
2768:src/keys.c    ****      --pos;
 6522              		.loc 1 2768 10 view .LVU1943
 6523 01f4 0025     		movs	r5, #0
 6524              	.LVL547:
2768:src/keys.c    ****      --pos;
 6525              		.loc 1 2768 10 view .LVU1944
 6526 01f6 73E7     		b	.L649
 6527              	.LVL548:
 6528              	.L680:
2741:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6529              		.loc 1 2741 8 view .LVU1945
 6530 01f8 2B46     		mov	r3, r5
2742:src/keys.c    ****    /* Search for the current buffer in the catalogue */
ARM GAS  /tmp/cc8lpfL1.s 			page 202


 6531              		.loc 1 2742 6 is_stmt 1 view .LVU1946
2742:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6532              		.loc 1 2742 31 is_stmt 0 view .LVU1947
 6533 01fa 3B44     		add	r3, r3, r7
2742:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6534              		.loc 1 2742 27 view .LVU1948
 6535 01fc 0135     		adds	r5, r5, #1
 6536 01fe EDB2     		uxtb	r5, r5
 6537 0200 3D77     		strb	r5, [r7, #28]
2742:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6538              		.loc 1 2742 31 view .LVU1949
 6539 0202 83F82040 		strb	r4, [r3, #32]
 6540 0206 30E7     		b	.L648
 6541              	.LVL549:
 6542              	.L730:
2690:src/keys.c    ****        /*
 6543              		.loc 1 2690 6 is_stmt 1 view .LVU1950
2690:src/keys.c    ****        /*
 6544              		.loc 1 2690 9 is_stmt 0 view .LVU1951
 6545 0208 BAF1120F 		cmp	r10, #18
 6546 020c 21D0     		beq	.L738
 6547              	.L657:
2718:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6548              		.loc 1 2718 11 is_stmt 1 view .LVU1952
2718:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6549              		.loc 1 2718 14 is_stmt 0 view .LVU1953
 6550 020e 2428     		cmp	r0, #36
 6551 0210 85D0     		beq	.L739
 6552              	.LVL550:
 6553              	.L663:
2733:src/keys.c    ****    reset_shift();
 6554              		.loc 1 2733 4 is_stmt 1 view .LVU1954
 6555              	.LBB640:
 435:src/keys.c    **** {
 6556              		.loc 1 435 12 view .LVU1955
 6557              	.LBB599:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6558              		.loc 1 437 2 view .LVU1956
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6559              		.loc 1 485 2 view .LVU1957
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6560              		.loc 1 485 5 is_stmt 0 view .LVU1958
 6561 0212 0121     		movs	r1, #1
 6562              	.LVL551:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6563              		.loc 1 485 5 view .LVU1959
 6564 0214 0EE7     		b	.L666
 6565              	.LVL552:
 6566              	.L670:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6567              		.loc 1 485 5 view .LVU1960
 6568 0216 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 6569              	.LVL553:
 6570              	.L672:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6571              		.loc 1 485 5 view .LVU1961
 6572              	.LBE599:
ARM GAS  /tmp/cc8lpfL1.s 			page 203


 6573              	.LBE640:
 6574              	.LBB641:
2762:src/keys.c    ****        goto set_pos;
 6575              		.loc 1 2762 6 is_stmt 1 view .LVU1962
2762:src/keys.c    ****        goto set_pos;
 6576              		.loc 1 2762 9 is_stmt 0 view .LVU1963
 6577 021a 002B     		cmp	r3, #0
 6578 021c 3FF450AF 		beq	.L671
 6579              	.LBE641:
2747:src/keys.c    ****      char buf[16];
 6580              		.loc 1 2747 31 is_stmt 1 view .LVU1964
 6581 0220 0135     		adds	r5, r5, #1
 6582              	.LVL554:
2747:src/keys.c    ****      char buf[16];
 6583              		.loc 1 2747 18 view .LVU1965
2747:src/keys.c    ****      char buf[16];
 6584              		.loc 1 2747 4 is_stmt 0 view .LVU1966
 6585 0222 A845     		cmp	r8, r5
 6586 0224 7FF429AF 		bne	.L668
 6587              	.LVL555:
 6588              	.L726:
2747:src/keys.c    ****      char buf[16];
 6589              		.loc 1 2747 4 view .LVU1967
 6590 0228 D9F80040 		ldr	r4, [r9]
 6591 022c CFE7     		b	.L650
 6592              	.LVL556:
 6593              	.L732:
2747:src/keys.c    ****      char buf[16];
 6594              		.loc 1 2747 4 view .LVU1968
 6595 022e 3A44     		add	r2, r2, r7
 6596              	.LVL557:
2747:src/keys.c    ****      char buf[16];
 6597              		.loc 1 2747 4 view .LVU1969
 6598 0230 92F82030 		ldrb	r3, [r2, #32]	@ zero_extendqisi2
 6599              	.LVL558:
2747:src/keys.c    ****      char buf[16];
 6600              		.loc 1 2747 4 view .LVU1970
 6601 0234 F1E7     		b	.L672
 6602              	.LVL559:
 6603              	.L655:
2770:src/keys.c    ****    return STATE_UNFINISHED;
 6604              		.loc 1 2770 17 view .LVU1971
 6605 0236 B4F8DC37 		ldrh	r3, [r4, #2012]
 6606 023a 05F07F05 		and	r5, r5, #127
 6607              	.LVL560:
2770:src/keys.c    ****    return STATE_UNFINISHED;
 6608              		.loc 1 2770 4 is_stmt 1 view .LVU1972
2770:src/keys.c    ****    return STATE_UNFINISHED;
 6609              		.loc 1 2770 17 is_stmt 0 view .LVU1973
 6610 023e 65F34B13 		bfi	r3, r5, #5, #7
 6611 0242 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2771:src/keys.c    ****  }
 6612              		.loc 1 2771 4 is_stmt 1 view .LVU1974
2771:src/keys.c    ****  }
 6613              		.loc 1 2771 11 is_stmt 0 view .LVU1975
 6614 0246 3320     		movs	r0, #51
 6615 0248 51E7     		b	.L740
ARM GAS  /tmp/cc8lpfL1.s 			page 204


 6616              	.LVL561:
 6617              	.L731:
2724:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 6618              		.loc 1 2724 6 is_stmt 1 view .LVU1976
2724:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 6619              		.loc 1 2724 9 is_stmt 0 view .LVU1977
 6620 024a 1028     		cmp	r0, #16
 6621 024c 23D0     		beq	.L741
 6622              	.L665:
2733:src/keys.c    ****    reset_shift();
 6623              		.loc 1 2733 4 is_stmt 1 view .LVU1978
 6624              	.LVL562:
 6625              	.LBB642:
 435:src/keys.c    **** {
 6626              		.loc 1 435 12 view .LVU1979
 6627              	.LBB600:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6628              		.loc 1 437 2 view .LVU1980
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6629              		.loc 1 485 2 view .LVU1981
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6630              		.loc 1 485 5 is_stmt 0 view .LVU1982
 6631 024e 0521     		movs	r1, #5
 6632              	.LVL563:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6633              		.loc 1 485 5 view .LVU1983
 6634 0250 F0E6     		b	.L666
 6635              	.LVL564:
 6636              	.L738:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6637              		.loc 1 485 5 view .LVU1984
 6638              	.LBE600:
 6639              	.LBE642:
2690:src/keys.c    ****        /*
 6640              		.loc 1 2690 32 discriminator 1 view .LVU1985
 6641 0252 0128     		cmp	r0, #1
 6642 0254 DBD1     		bne	.L657
 6643              	.LBB643:
2699:src/keys.c    **** 	 OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
 6644              		.loc 1 2699 8 is_stmt 1 view .LVU1986
2707:src/keys.c    ****        int i;
 6645              		.loc 1 2707 8 view .LVU1987
2707:src/keys.c    ****        int i;
 6646              		.loc 1 2707 26 is_stmt 0 view .LVU1988
 6647 0256 2846     		mov	r0, r5
 6648              	.LVL565:
2707:src/keys.c    ****        int i;
 6649              		.loc 1 2707 26 view .LVU1989
 6650 0258 FFF7FEFF 		bl	current_catalogue
 6651              	.LVL566:
2707:src/keys.c    ****        int i;
 6652              		.loc 1 2707 26 view .LVU1990
 6653 025c 0446     		mov	r4, r0
 6654              	.LVL567:
2708:src/keys.c    **** 
 6655              		.loc 1 2708 8 is_stmt 1 view .LVU1991
2710:src/keys.c    ****        if (isRARG(op))
ARM GAS  /tmp/cc8lpfL1.s 			page 205


 6656              		.loc 1 2710 8 view .LVU1992
 6657 025e 0020     		movs	r0, #0
 6658              	.LVL568:
2710:src/keys.c    ****        if (isRARG(op))
 6659              		.loc 1 2710 8 is_stmt 0 view .LVU1993
 6660 0260 FFF7FEFF 		bl	init_cat
 6661              	.LVL569:
2711:src/keys.c    **** 	 return op ^ 1;
 6662              		.loc 1 2711 8 is_stmt 1 view .LVU1994
2711:src/keys.c    **** 	 return op ^ 1;
 6663              		.loc 1 2711 11 is_stmt 0 view .LVU1995
 6664 0264 14F47043 		ands	r3, r4, #61440
 6665 0268 29D0     		beq	.L658
2711:src/keys.c    **** 	 return op ^ 1;
 6666              		.loc 1 2711 12 discriminator 1 view .LVU1996
 6667 026a B3F5704F 		cmp	r3, #61440
 6668 026e 26D0     		beq	.L658
2712:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 6669              		.loc 1 2712 3 is_stmt 1 view .LVU1997
2712:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 6670              		.loc 1 2712 13 is_stmt 0 view .LVU1998
 6671 0270 84F00100 		eor	r0, r4, #1
 6672 0274 60E7     		b	.L630
 6673              	.LVL570:
 6674              	.L734:
2712:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 6675              		.loc 1 2712 13 view .LVU1999
 6676              	.LBE643:
2659:src/keys.c    **** 	   goto search;
 6677              		.loc 1 2659 3 is_stmt 1 view .LVU2000
2659:src/keys.c    **** 	   goto search;
 6678              		.loc 1 2659 7 is_stmt 0 view .LVU2001
 6679 0276 3D7F     		ldrb	r5, [r7, #28]	@ zero_extendqisi2
 6680              	.LVL571:
2659:src/keys.c    **** 	   goto search;
 6681              		.loc 1 2659 7 view .LVU2002
 6682 0278 013D     		subs	r5, r5, #1
 6683 027a EDB2     		uxtb	r5, r5
2659:src/keys.c    **** 	   goto search;
 6684              		.loc 1 2659 6 view .LVU2003
 6685 027c 3D77     		strb	r5, [r7, #28]
 6686 027e 002D     		cmp	r5, #0
 6687 0280 7FF4F3AE 		bne	.L648
 6688 0284 D9F80040 		ldr	r4, [r9]
 6689 0288 2AE7     		b	.L649
 6690              	.LVL572:
 6691              	.L736:
2676:src/keys.c    ****        goto set_pos;
 6692              		.loc 1 2676 3 is_stmt 1 view .LVU2004
 6693 028a 013D     		subs	r5, r5, #1
 6694              	.LVL573:
2677:src/keys.c    **** 
 6695              		.loc 1 2677 8 view .LVU2005
 6696 028c 1AE7     		b	.L651
 6697              	.LVL574:
 6698              	.L735:
2677:src/keys.c    **** 
ARM GAS  /tmp/cc8lpfL1.s 			page 206


 6699              		.loc 1 2677 8 is_stmt 0 view .LVU2006
 6700 028e FFF7FEFF 		bl	current_catalogue
 6701              	.LVL575:
2677:src/keys.c    **** 
 6702              		.loc 1 2677 8 view .LVU2007
 6703 0292 0446     		mov	r4, r0
 6704 0294 75E7     		b	.L641
 6705              	.LVL576:
 6706              	.L741:
2724:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 6707              		.loc 1 2724 19 discriminator 1 view .LVU2008
 6708 0296 BAF1130F 		cmp	r10, #19
 6709 029a D8D1     		bne	.L665
2725:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
 6710              		.loc 1 2725 8 is_stmt 1 view .LVU2009
 6711 029c 0020     		movs	r0, #0
 6712              	.LVL577:
2725:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
 6713              		.loc 1 2725 8 is_stmt 0 view .LVU2010
 6714 029e FFF7FEFF 		bl	init_cat
 6715              	.LVL578:
2726:src/keys.c    ****      }
 6716              		.loc 1 2726 8 is_stmt 1 view .LVU2011
2726:src/keys.c    ****      }
 6717              		.loc 1 2726 15 is_stmt 0 view .LVU2012
 6718 02a2 40F23D10 		movw	r0, #317
 6719 02a6 47E7     		b	.L630
 6720              	.L642:
 6721              	.LBB644:
2651:src/keys.c    **** 	 }
 6722              		.loc 1 2651 5 is_stmt 1 view .LVU2013
 6723              	.LBB627:
 6724              	.LBB628:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 6725              		.loc 1 715 5 is_stmt 0 view .LVU2014
 6726 02a8 C4F30723 		ubfx	r3, r4, #8, #8
 6727 02ac 012B     		cmp	r3, #1
 6728              	.LBE628:
 6729              	.LBE627:
2651:src/keys.c    **** 	 }
 6730              		.loc 1 2651 12 view .LVU2015
 6731 02ae 2046     		mov	r0, r4
 6732              	.LVL579:
 6733              	.LBB630:
 6734              	.LBI627:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 6735              		.loc 1 714 12 is_stmt 1 view .LVU2016
 6736              	.LBB629:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 6737              		.loc 1 715 2 view .LVU2017
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 6738              		.loc 1 715 5 is_stmt 0 view .LVU2018
 6739 02b0 7FF442AF 		bne	.L630
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 6740              		.loc 1 715 5 view .LVU2019
 6741 02b4 FFF7FEFF 		bl	check_confirm.part.0
 6742              	.LVL580:
ARM GAS  /tmp/cc8lpfL1.s 			page 207


 715:src/keys.c    **** 		const int nilop = argKIND(op);
 6743              		.loc 1 715 5 view .LVU2020
 6744 02b8 3EE7     		b	.L630
 6745              	.LVL581:
 6746              	.L643:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 6747              		.loc 1 715 5 view .LVU2021
 6748              	.LBE629:
 6749              	.LBE630:
 6750              	.LBB631:
2644:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 6751              		.loc 1 2644 7 is_stmt 1 view .LVU2022
2644:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 6752              		.loc 1 2644 14 is_stmt 0 view .LVU2023
 6753 02ba 2046     		mov	r0, r4
 6754 02bc 3CE7     		b	.L630
 6755              	.LVL582:
 6756              	.L658:
2644:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 6757              		.loc 1 2644 14 view .LVU2024
 6758 02be 0C48     		ldr	r0, .L744+20
 6759              	.LBE631:
 6760              	.LBE644:
2622:src/keys.c    ****    int pos = State.catpos;
 6761              		.loc 1 2622 93 view .LVU2025
 6762 02c0 40F28522 		movw	r2, #645
 6763 02c4 0146     		mov	r1, r0
 6764 02c6 0023     		movs	r3, #0
 6765 02c8 01E0     		b	.L660
 6766              	.LVL583:
 6767              	.L743:
2622:src/keys.c    ****    int pos = State.catpos;
 6768              		.loc 1 2622 93 view .LVU2026
 6769 02ca 31F8022F 		ldrh	r2, [r1, #2]!
 6770              	.LVL584:
 6771              	.L660:
 6772              	.LBB645:
2714:src/keys.c    **** 	   return conv_mapping[i^1];
 6773              		.loc 1 2714 3 is_stmt 1 view .LVU2027
2713:src/keys.c    **** 	 if (op == conv_mapping[i])
 6774              		.loc 1 2713 72 view .LVU2028
2714:src/keys.c    **** 	   return conv_mapping[i^1];
 6775              		.loc 1 2714 6 is_stmt 0 view .LVU2029
 6776 02ce A242     		cmp	r2, r4
 6777 02d0 1ED0     		beq	.L742
2713:src/keys.c    **** 	 if (op == conv_mapping[i])
 6778              		.loc 1 2713 72 discriminator 2 view .LVU2030
 6779 02d2 0133     		adds	r3, r3, #1
 6780              	.LVL585:
2713:src/keys.c    **** 	 if (op == conv_mapping[i])
 6781              		.loc 1 2713 20 is_stmt 1 discriminator 2 view .LVU2031
2713:src/keys.c    **** 	 if (op == conv_mapping[i])
 6782              		.loc 1 2713 8 is_stmt 0 discriminator 2 view .LVU2032
 6783 02d4 0C2B     		cmp	r3, #12
 6784 02d6 F8D1     		bne	.L743
 6785 02d8 2DE7     		b	.L728
 6786              	.L745:
ARM GAS  /tmp/cc8lpfL1.s 			page 208


 6787 02da 00BF     		.align	2
 6788              	.L744:
 6789 02dc 00000000 		.word	StateWhileOn
 6790 02e0 00000000 		.word	.LANCHOR8
 6791 02e4 00000000 		.word	.LANCHOR6
 6792 02e8 00000000 		.word	.LANCHOR15
 6793 02ec 00080800 		.word	526336
 6794 02f0 00000000 		.word	.LANCHOR14
 6795 02f4 00000000 		.word	main_ram
 6796 02f8 1F000000 		.word	StateWhileOn+31
 6797              	.LVL586:
 6798              	.L646:
2713:src/keys.c    **** 	 if (op == conv_mapping[i])
 6799              		.loc 1 2713 8 discriminator 2 view .LVU2033
 6800              	.LBE645:
 6801              	.LBB646:
 6802              	.LBB632:
2648:src/keys.c    **** 	 }
 6803              		.loc 1 2648 7 is_stmt 1 view .LVU2034
 6804              	.LBB624:
 6805              	.LBI624:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 6806              		.loc 1 552 13 view .LVU2035
 6807              	.LBB625:
 553:src/keys.c    **** 		return;
 6808              		.loc 1 553 2 view .LVU2036
 553:src/keys.c    **** 		return;
 6809              		.loc 1 553 6 is_stmt 0 view .LVU2037
 6810 02fc FFF7FEFF 		bl	is_bad_cmdline
 6811              	.LVL587:
 553:src/keys.c    **** 		return;
 6812              		.loc 1 553 5 view .LVU2038
 6813 0300 0028     		cmp	r0, #0
 6814 0302 7FF418AF 		bne	.L728
 6815 0306 2846     		mov	r0, r5
 6816 0308 FFF7FEFF 		bl	init_arg.part.0
 6817              	.LVL588:
 6818              	.LBE625:
 6819              	.LBE624:
 6820              	.LBE632:
 6821              	.LBE646:
2655:src/keys.c    **** 
 6822              		.loc 1 2655 15 view .LVU2039
 6823 030c 3320     		movs	r0, #51
 6824 030e 13E7     		b	.L630
 6825              	.LVL589:
 6826              	.L742:
 6827              	.LBB647:
2715:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 6828              		.loc 1 2715 5 is_stmt 1 view .LVU2040
2715:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 6829              		.loc 1 2715 26 is_stmt 0 view .LVU2041
 6830 0310 83F00103 		eor	r3, r3, #1
 6831              	.LVL590:
2715:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 6832              		.loc 1 2715 24 view .LVU2042
 6833 0314 30F81300 		ldrh	r0, [r0, r3, lsl #1]
ARM GAS  /tmp/cc8lpfL1.s 			page 209


 6834 0318 0EE7     		b	.L630
 6835              	.LBE647:
 6836              		.cfi_endproc
 6837              	.LFE48:
 6839              		.section	.text.find_pos,"ax",%progbits
 6840              		.align	1
 6841              		.p2align 2,,3
 6842              		.global	find_pos
 6843              		.syntax unified
 6844              		.thumb
 6845              		.thumb_func
 6846              		.fpu fpv4-sp-d16
 6848              	find_pos:
 6849              	.LVL591:
 6850              	.LFB49:
2775:src/keys.c    **** 	int pos;
 6851              		.loc 1 2775 32 is_stmt 1 view -0
 6852              		.cfi_startproc
 6853              		@ args = 0, pretend = 0, frame = 16
 6854              		@ frame_needed = 0, uses_anonymous_args = 0
2776:src/keys.c    **** 	const int ctmax = current_catalogue_max();
 6855              		.loc 1 2776 2 view .LVU2044
2777:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 6856              		.loc 1 2777 2 view .LVU2045
 6857              	.LBB648:
 6858              	.LBI648:
2477:src/keys.c    **** 	// A quick table of catalogue sizes
 6859              		.loc 1 2477 5 view .LVU2046
 6860              	.LBB649:
2480:src/keys.c    **** 	{
 6861              		.loc 1 2480 2 view .LVU2047
2511:src/keys.c    **** #endif
 6862              		.loc 1 2511 2 view .LVU2048
 6863              	.LBE649:
 6864              	.LBE648:
2775:src/keys.c    **** 	int pos;
 6865              		.loc 1 2775 32 is_stmt 0 view .LVU2049
 6866 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 6867              		.cfi_def_cfa_offset 32
 6868              		.cfi_offset 4, -32
 6869              		.cfi_offset 5, -28
 6870              		.cfi_offset 6, -24
 6871              		.cfi_offset 7, -20
 6872              		.cfi_offset 8, -16
 6873              		.cfi_offset 9, -12
 6874              		.cfi_offset 10, -8
 6875              		.cfi_offset 14, -4
 6876              	.LBB651:
 6877              	.LBB650:
2511:src/keys.c    **** #endif
 6878              		.loc 1 2511 31 view .LVU2050
 6879 0004 1E4B     		ldr	r3, .L763
2511:src/keys.c    **** #endif
 6880              		.loc 1 2511 24 view .LVU2051
 6881 0006 1F4A     		ldr	r2, .L763+4
2511:src/keys.c    **** #endif
 6882              		.loc 1 2511 31 view .LVU2052
ARM GAS  /tmp/cc8lpfL1.s 			page 210


 6883 0008 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2511:src/keys.c    **** #endif
 6884              		.loc 1 2511 24 view .LVU2053
 6885 000a 12F803A0 		ldrb	r10, [r2, r3]	@ zero_extendqisi2
 6886              	.LVL592:
2511:src/keys.c    **** #endif
 6887              		.loc 1 2511 24 view .LVU2054
 6888              	.LBE650:
 6889              	.LBE651:
2778:src/keys.c    **** 		char buf[16];
 6890              		.loc 1 2778 2 is_stmt 1 view .LVU2055
2778:src/keys.c    **** 		char buf[16];
 6891              		.loc 1 2778 16 view .LVU2056
2775:src/keys.c    **** 	int pos;
 6892              		.loc 1 2775 32 is_stmt 0 view .LVU2057
 6893 000e 84B0     		sub	sp, sp, #16
 6894              		.cfi_def_cfa_offset 48
2778:src/keys.c    **** 		char buf[16];
 6895              		.loc 1 2778 2 view .LVU2058
 6896 0010 BAF1000F 		cmp	r10, #0
 6897 0014 32D0     		beq	.L753
 6898 0016 8146     		mov	r9, r0
2778:src/keys.c    **** 		char buf[16];
 6899              		.loc 1 2778 11 view .LVU2059
 6900 0018 4FF00008 		mov	r8, #0
 6901 001c C0F10107 		rsb	r7, r0, #1
 6902              	.LVL593:
 6903              	.L752:
 6904              	.LBB652:
2779:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
 6905              		.loc 1 2779 3 is_stmt 1 view .LVU2060
2780:src/keys.c    **** 		int i;
 6906              		.loc 1 2780 3 view .LVU2061
2780:src/keys.c    **** 		int i;
 6907              		.loc 1 2780 21 is_stmt 0 view .LVU2062
 6908 0020 4046     		mov	r0, r8
 6909 0022 FFF7FEFF 		bl	current_catalogue
 6910              	.LVL594:
 6911 0026 6946     		mov	r1, sp
 6912 0028 FFF7FEFF 		bl	catcmd
 6913              	.LVL595:
 6914 002c 0646     		mov	r6, r0
 6915              	.LVL596:
2781:src/keys.c    **** 
 6916              		.loc 1 2781 3 is_stmt 1 view .LVU2063
2783:src/keys.c    **** 			cmd++;
 6917              		.loc 1 2783 3 view .LVU2064
2784:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 6918              		.loc 1 2784 4 view .LVU2065
2783:src/keys.c    **** 			cmd++;
 6919              		.loc 1 2783 7 is_stmt 0 view .LVU2066
 6920 002e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 6921              	.LVL597:
2783:src/keys.c    **** 			cmd++;
 6922              		.loc 1 2783 6 view .LVU2067
 6923 0030 1428     		cmp	r0, #20
 6924 0032 04BF     		itt	eq
ARM GAS  /tmp/cc8lpfL1.s 			page 211


 6925 0034 7078     		ldrbeq	r0, [r6, #1]	@ zero_extendqisi2
2784:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 6926              		.loc 1 2784 7 view .LVU2068
 6927 0036 0136     		addeq	r6, r6, #1
 6928              	.LVL598:
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6929              		.loc 1 2785 3 is_stmt 1 view .LVU2069
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6930              		.loc 1 2785 13 view .LVU2070
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6931              		.loc 1 2785 3 is_stmt 0 view .LVU2071
 6932 0038 A8B1     		cbz	r0, .L754
 6933 003a 09F1FF33 		add	r3, r9, #-1
 6934 003e 04E0     		b	.L751
 6935              	.LVL599:
 6936              	.L762:
 6937              	.LBB653:
2790:src/keys.c    **** 				break;
 6938              		.loc 1 2790 12 view .LVU2072
 6939 0040 12DB     		blt	.L749
 6940              	.LBE653:
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6941              		.loc 1 2785 16 discriminator 2 view .LVU2073
 6942 0042 16F8010F 		ldrb	r0, [r6, #1]!	@ zero_extendqisi2
 6943              	.LVL600:
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6944              		.loc 1 2785 16 discriminator 2 view .LVU2074
 6945 0046 3C44     		add	r4, r4, r7
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6946              		.loc 1 2785 3 discriminator 2 view .LVU2075
 6947 0048 B0B1     		cbz	r0, .L761
 6948              	.LVL601:
 6949              	.L751:
 6950              	.LBB654:
2786:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 6951              		.loc 1 2786 4 is_stmt 1 view .LVU2076
 6952 004a 5C1C     		adds	r4, r3, #1
2786:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 6953              		.loc 1 2786 18 is_stmt 0 view .LVU2077
 6954 004c FFF7FEFF 		bl	remap_chars
 6955              	.LVL602:
 6956 0050 0546     		mov	r5, r0
2787:src/keys.c    **** 			if (c > cl)
 6957              		.loc 1 2787 19 view .LVU2078
 6958 0052 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 6959              	.LVL603:
2787:src/keys.c    **** 			if (c > cl)
 6960              		.loc 1 2787 4 is_stmt 1 view .LVU2079
2787:src/keys.c    **** 			if (c > cl)
 6961              		.loc 1 2787 19 is_stmt 0 view .LVU2080
 6962 0054 FFF7FEFF 		bl	remap_chars
 6963              	.LVL604:
2790:src/keys.c    **** 				break;
 6964              		.loc 1 2790 9 is_stmt 1 view .LVU2081
 6965              	.LBE654:
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6966              		.loc 1 2785 29 view .LVU2082
ARM GAS  /tmp/cc8lpfL1.s 			page 212


2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6967              		.loc 1 2785 13 view .LVU2083
 6968              	.LBB655:
2788:src/keys.c    **** 				return pos;
 6969              		.loc 1 2788 4 view .LVU2084
2788:src/keys.c    **** 				return pos;
 6970              		.loc 1 2788 7 is_stmt 0 view .LVU2085
 6971 0058 8542     		cmp	r5, r0
 6972 005a 2346     		mov	r3, r4
 6973 005c F0DD     		ble	.L762
 6974              	.LVL605:
 6975              	.L746:
2788:src/keys.c    **** 				return pos;
 6976              		.loc 1 2788 7 view .LVU2086
 6977              	.LBE655:
 6978              	.LBE652:
2797:src/keys.c    **** 
 6979              		.loc 1 2797 1 view .LVU2087
 6980 005e 4046     		mov	r0, r8
 6981 0060 04B0     		add	sp, sp, #16
 6982              		.cfi_remember_state
 6983              		.cfi_def_cfa_offset 32
 6984              		@ sp needed
 6985 0062 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 6986              	.LVL606:
 6987              	.L754:
 6988              		.cfi_restore_state
 6989              	.LBB656:
2785:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6990              		.loc 1 2785 3 view .LVU2088
 6991 0066 4C46     		mov	r4, r9
 6992              	.LVL607:
 6993              	.L749:
2793:src/keys.c    **** 			return pos;
 6994              		.loc 1 2793 3 is_stmt 1 view .LVU2089
2793:src/keys.c    **** 			return pos;
 6995              		.loc 1 2793 6 is_stmt 0 view .LVU2090
 6996 0068 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 6997 006a 002B     		cmp	r3, #0
 6998 006c F7D0     		beq	.L746
 6999              	.LBE656:
2778:src/keys.c    **** 		char buf[16];
 7000              		.loc 1 2778 29 is_stmt 1 view .LVU2091
 7001 006e 08F10108 		add	r8, r8, #1
 7002              	.LVL608:
2778:src/keys.c    **** 		char buf[16];
 7003              		.loc 1 2778 16 view .LVU2092
2778:src/keys.c    **** 		char buf[16];
 7004              		.loc 1 2778 2 is_stmt 0 view .LVU2093
 7005 0072 D045     		cmp	r8, r10
 7006 0074 D4D1     		bne	.L752
 7007 0076 F2E7     		b	.L746
 7008              	.LVL609:
 7009              	.L761:
2778:src/keys.c    **** 		char buf[16];
 7010              		.loc 1 2778 2 view .LVU2094
 7011 0078 4C44     		add	r4, r4, r9
ARM GAS  /tmp/cc8lpfL1.s 			page 213


 7012 007a F5E7     		b	.L749
 7013              	.LVL610:
 7014              	.L753:
2778:src/keys.c    **** 		char buf[16];
 7015              		.loc 1 2778 11 view .LVU2095
 7016 007c D046     		mov	r8, r10
 7017 007e EEE7     		b	.L746
 7018              	.L764:
 7019              		.align	2
 7020              	.L763:
 7021 0080 00000000 		.word	StateWhileOn
 7022 0084 00000000 		.word	.LANCHOR8
 7023              		.cfi_endproc
 7024              	.LFE49:
 7026              		.section	.text.get_alpha_state,"ax",%progbits
 7027              		.align	1
 7028              		.p2align 2,,3
 7029              		.global	get_alpha_state
 7030              		.syntax unified
 7031              		.thumb
 7032              		.thumb_func
 7033              		.fpu fpv4-sp-d16
 7035              	get_alpha_state:
 7036              	.LFB61:
3122:src/keys.c    **** 
3123:src/keys.c    **** 
3124:src/keys.c    **** static int process_registerlist(const keycode c) {
3125:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
3126:src/keys.c    **** 	enum shifts shift = reset_shift();
3127:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
3128:src/keys.c    **** 	const int g_max = global_regs();
3129:src/keys.c    **** 
3130:src/keys.c    **** 	if (n == LOCAL_REG_BASE) {	// '.'
3131:src/keys.c    **** 		if (local_regs())
3132:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
3133:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
3134:src/keys.c    **** 		goto reset_window;
3135:src/keys.c    **** 	}
3136:src/keys.c    **** 	else if (n <= 9) {
3137:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
3138:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
3139:src/keys.c    **** 			dv = n;
3140:src/keys.c    **** 		State2.digval = dv;
3141:src/keys.c    **** 		goto reset_window;
3142:src/keys.c    **** 	}
3143:src/keys.c    **** 	else if ((shift == SHIFT_F || shift == SHIFT_G) && c == K21) {  // <( )>
3144:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
3145:src/keys.c    **** 		set_smode(SDISP_SHOW);
3146:src/keys.c    **** 	}
3147:src/keys.c    **** 	else if (n != NO_REG) {
3148:src/keys.c    **** 		State2.digval = n;
3149:src/keys.c    **** 		goto reset_window;
3150:src/keys.c    **** 	}
3151:src/keys.c    **** 
3152:src/keys.c    **** 	switch (c) {
3153:src/keys.c    **** 	case K_DOWN:
3154:src/keys.c    **** 		if (State2.digval > 0) {
ARM GAS  /tmp/cc8lpfL1.s 			page 214


3155:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
3156:src/keys.c    **** 				State2.digval = global_regs();
3157:src/keys.c    **** 			--State2.digval;
3158:src/keys.c    **** 		}
3159:src/keys.c    **** 		else
3160:src/keys.c    **** 			State2.digval = max - 1;
3161:src/keys.c    **** 		goto reset_window;
3162:src/keys.c    **** 
3163:src/keys.c    **** 	case K_UP:
3164:src/keys.c    **** 		if (State2.digval < max - 1) {
3165:src/keys.c    **** 			State2.digval++;
3166:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
3167:src/keys.c    **** 				State2.digval = regX_idx;
3168:src/keys.c    **** 		}
3169:src/keys.c    **** 		else	
3170:src/keys.c    **** 			State2.digval = 0;
3171:src/keys.c    **** 		goto reset_window;
3172:src/keys.c    **** 
3173:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
3174:src/keys.c    **** 	case K04:
3175:src/keys.c    **** 		State2.digval2 = ! State2.digval2 && ! State2.local;
3176:src/keys.c    **** 		goto reset_window;
3177:src/keys.c    **** #endif
3178:src/keys.c    **** 
3179:src/keys.c    **** 	case K24:			
3180:src/keys.c    **** 	//case K60:
3181:src/keys.c    **** 		if (State2.disp_temp)
3182:src/keys.c    **** 			return STATE_UNFINISHED;
3183:src/keys.c    **** 		break;		// Exit doing nothing
3184:src/keys.c    **** 
3185:src/keys.c    **** 	case K20:		// ENTER
3186:src/keys.c    **** 		if (shift == SHIFT_F) {
3187:src/keys.c    **** 			State2.disp_as_alpha = 1;
3188:src/keys.c    **** 			goto reset_window;
3189:src/keys.c    **** 		}
3190:src/keys.c    **** 	case K11:		// RCL
3191:src/keys.c    **** 		if ( shift == SHIFT_N ) {
3192:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
3193:src/keys.c    **** 			n = RARG( State2.digval2 ? RARG_FLRCL : RARG_RCL, State2.digval );
3194:src/keys.c    **** #else
3195:src/keys.c    **** 			n = RARG( RARG_RCL, State2.digval );
3196:src/keys.c    **** #endif
3197:src/keys.c    **** 			State2.registerlist = 0;
3198:src/keys.c    **** 			State2.digval = 0;
3199:src/keys.c    **** 			State2.digval2 = 0;
3200:src/keys.c    **** 			return n;
3201:src/keys.c    **** 		}
3202:src/keys.c    **** 	default:
3203:src/keys.c    **** 		return STATE_UNFINISHED;
3204:src/keys.c    **** 	}
3205:src/keys.c    **** 	State2.registerlist = 0;
3206:src/keys.c    **** 	State2.digval = 0;
3207:src/keys.c    **** 	State2.digval2 = 0;
3208:src/keys.c    **** reset_window:
3209:src/keys.c    **** 	State2.window = 0;
3210:src/keys.c    **** 	return STATE_UNFINISHED;
3211:src/keys.c    **** }
ARM GAS  /tmp/cc8lpfL1.s 			page 215


3212:src/keys.c    **** 
3213:src/keys.c    **** 
3214:src/keys.c    **** static int process(const int c) {
3215:src/keys.c    ****   const enum shifts shift = cur_shift();
3216:src/keys.c    ****   enum catalogues cat;
3217:src/keys.c    **** 
3218:src/keys.c    ****   if (Running || Pause) {
3219:src/keys.c    ****     /*
3220:src/keys.c    ****      *  Abort a running program with R/S or EXIT
3221:src/keys.c    ****      */
3222:src/keys.c    ****     if (c == K60 || c == K63) {
3223:src/keys.c    ****       if (Pause && isXROM(state_pc()))
3224:src/keys.c    **** 	set_pc(0);
3225:src/keys.c    ****       Pause = 0;
3226:src/keys.c    ****       xeq_xrom();
3227:src/keys.c    ****       set_running_off();
3228:src/keys.c    ****       DispMsg = "Stopped";
3229:src/keys.c    ****       State2.disp_freeze = 0;
3230:src/keys.c    ****       return STATE_UNFINISHED;
3231:src/keys.c    ****     }
3232:src/keys.c    ****     if ( c != K_HEARTBEAT ) {
3233:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
3234:src/keys.c    ****       Pause = 0;			// leave PSE statement
3235:src/keys.c    ****       GoFast = 1;
3236:src/keys.c    ****     }
3237:src/keys.c    ****     // continue execution if really running, else ignore (PSE)
3238:src/keys.c    ****     return STATE_RUNNING;
3239:src/keys.c    ****   }
3240:src/keys.c    **** 
3241:src/keys.c    ****   /* Check for ON in the unshifted state -- this is a reset sequence
3242:src/keys.c    ****    * common across all modes.  Shifted modes need to check this themselves
3243:src/keys.c    ****    * if required.
3244:src/keys.c    ****    */
3245:src/keys.c    **** #ifdef DM42
3246:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue && ! State2.arrow && ! State2.alphas)
3247:src/keys.c    **** #else
3248:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue)
3249:src/keys.c    **** #endif
3250:src/keys.c    ****     {
3251:src/keys.c    **** #ifdef INCLUDE_C_LOCK
3252:src/keys.c    ****       if (C_LOCKED) {
3253:src/keys.c    **** 	stack_restore();
3254:src/keys.c    **** 	CLEAR_REAL;
3255:src/keys.c    **** 	CLEAR_IMAG;
3256:src/keys.c    ****       }
3257:src/keys.c    **** #endif
3258:src/keys.c    ****       soft_init_state();
3259:src/keys.c    ****       return STATE_UNFINISHED;
3260:src/keys.c    ****     }
3261:src/keys.c    **** 
3262:src/keys.c    **** #ifndef CONSOLE
3263:src/keys.c    **** 	if (c == K63 && JustStopped) {
3264:src/keys.c    **** 		// Avoid an accidental restart with R/S
3265:src/keys.c    **** 		JustStopped = 0;
3266:src/keys.c    **** 		return STATE_IGNORE;
3267:src/keys.c    **** 	}
3268:src/keys.c    **** #endif
ARM GAS  /tmp/cc8lpfL1.s 			page 216


3269:src/keys.c    **** 	/*  Handle the keyboard timeout for catalogue navigation
3270:src/keys.c    **** 	 *  Must be done early in the process to capture the shifts correctly
3271:src/keys.c    **** 	 */
3272:src/keys.c    **** 	if (State2.catalogue && Keyticks > 30)
3273:src/keys.c    **** 		CmdLineLength = 0;
3274:src/keys.c    **** 	/*
3275:src/keys.c    **** 	 *  Process the various cases
3276:src/keys.c    **** 	 *  The handlers in this block here do not handle shifts at all or do it themselves
3277:src/keys.c    **** 	 */
3278:src/keys.c    **** 	if (State2.confirm)
3279:src/keys.c    **** 		return process_confirm((const keycode)c);
3280:src/keys.c    **** 
3281:src/keys.c    **** 	if (State2.rarg)
3282:src/keys.c    **** 		return process_arg((const keycode)c);
3283:src/keys.c    **** 
3284:src/keys.c    **** 	if (State2.gtodot)
3285:src/keys.c    **** 		return process_gtodot((const keycode)c);
3286:src/keys.c    **** 
3287:src/keys.c    **** 	if (State2.hyp)
3288:src/keys.c    **** 		return process_hyp((const keycode)c);
3289:src/keys.c    **** 
3290:src/keys.c    **** 	if (State2.test != TST_NONE)
3291:src/keys.c    **** 		return process_test((const keycode)c);
3292:src/keys.c    **** 
3293:src/keys.c    **** 	if (State2.status)
3294:src/keys.c    **** 		return process_status((const keycode)c);
3295:src/keys.c    **** 
3296:src/keys.c    **** 	/*
3297:src/keys.c    **** 	 *  Process shift keys directly
3298:src/keys.c    **** 	 */
3299:src/keys.c    **** 	if (c == K_F) {
3300:src/keys.c    **** 		toggle_shift(SHIFT_F);
3301:src/keys.c    **** 		return STATE_UNFINISHED;
3302:src/keys.c    **** 	}
3303:src/keys.c    **** 	if (c == K_G) {
3304:src/keys.c    **** 		toggle_shift(SHIFT_G);
3305:src/keys.c    **** 		return STATE_UNFINISHED;
3306:src/keys.c    **** 	}
3307:src/keys.c    **** 	if (c == K_H) {
3308:src/keys.c    **** 		toggle_shift(SHIFT_H);
3309:src/keys.c    **** 		State2.arrow = 0;
3310:src/keys.c    **** 		return STATE_UNFINISHED;
3311:src/keys.c    **** 	}
3312:src/keys.c    **** 	/*
3313:src/keys.c    **** 	 *  The handlers in this block need to call reset_shift somewhere
3314:src/keys.c    **** 	 */
3315:src/keys.c    **** 	// print_debug (2, c);
3316:src/keys.c    **** 	if (State2.arrow)
3317:src/keys.c    **** 		return process_arrow((const keycode)c);
3318:src/keys.c    **** 
3319:src/keys.c    **** 	/*
3320:src/keys.c    **** 	 * Here the keys are mapped to catalogues
3321:src/keys.c    **** 	 * The position of this code decides where catalogue switching
3322:src/keys.c    **** 	 * works and were not
3323:src/keys.c    **** 	 */
3324:src/keys.c    **** 	cat = keycode_to_cat((keycode)c, shift);
3325:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
ARM GAS  /tmp/cc8lpfL1.s 			page 217


3326:src/keys.c    **** 		if (is_bad_cmdline())
3327:src/keys.c    **** 			return STATE_UNFINISHED;
3328:src/keys.c    **** 		init_cat( CATALOGUE_NONE );
3329:src/keys.c    **** 		init_cat( cat );
3330:src/keys.c    **** 		return STATE_UNFINISHED;
3331:src/keys.c    **** 	}
3332:src/keys.c    **** 
3333:src/keys.c    **** 	/*
3334:src/keys.c    **** 	 *  More handlers...
3335:src/keys.c    **** 	 */
3336:src/keys.c    **** 	if (State2.multi)
3337:src/keys.c    **** 		return process_multi((const keycode)c);
3338:src/keys.c    **** 
3339:src/keys.c    **** 	if (State2.labellist)
3340:src/keys.c    **** 		return process_labellist((const keycode)c);
3341:src/keys.c    **** 
3342:src/keys.c    **** 	if (State2.registerlist)
3343:src/keys.c    **** 		return process_registerlist((const keycode)c);
3344:src/keys.c    **** 
3345:src/keys.c    **** 	if (State2.catalogue)
3346:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
3347:src/keys.c    **** 
3348:src/keys.c    **** 	if (State2.alphas) {
3349:src/keys.c    **** #ifndef INFRARED
3350:src/keys.c    **** 		return process_alpha((const keycode)c);
3351:src/keys.c    **** #else
3352:src/keys.c    **** 		int i = process_alpha((const keycode)c);
3353:src/keys.c    **** 		if (! State2.alphas && get_user_flag(T_FLAG)) {
3354:src/keys.c    **** 			print_tab(0);
3355:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
3356:src/keys.c    **** 		}
3357:src/keys.c    **** 		return i;
3358:src/keys.c    **** #endif
3359:src/keys.c    **** 	}
3360:src/keys.c    **** #ifdef INCLUDE_C_LOCK
3361:src/keys.c    **** 	if (C_LOCKED) {
3362:src/keys.c    **** 		return process_c_lock ((const keycode)c);
3363:src/keys.c    **** 	}
3364:src/keys.c    **** #endif
3365:src/keys.c    **** 	if (State2.cmplx) {
3366:src/keys.c    **** 		return process_cmplx((const keycode)c);
3367:src/keys.c    **** 	} else {
3368:src/keys.c    **** 		if (shift == SHIFT_F || shift == SHIFT_G)
3369:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
3370:src/keys.c    **** 		if (shift == SHIFT_H)
3371:src/keys.c    **** 			return process_h_shifted((const keycode)c);
3372:src/keys.c    **** 		// print_debug (3, c);
3373:src/keys.c    **** 		return process_normal((const keycode)c);
3374:src/keys.c    **** 	}
3375:src/keys.c    **** }
3376:src/keys.c    **** 
3377:src/keys.c    ****  unsigned int get_alpha_state ( void ) {
 7037              		.loc 1 3377 40 is_stmt 1 view -0
 7038              		.cfi_startproc
 7039              		@ args = 0, pretend = 0, frame = 0
 7040              		@ frame_needed = 0, uses_anonymous_args = 0
 7041              		@ link register save eliminated.
ARM GAS  /tmp/cc8lpfL1.s 			page 218


3378:src/keys.c    ****    return (State2.alphas || State2.confirm || State2.status || State2.labellist
 7042              		.loc 1 3378 4 view .LVU2097
 7043              		.loc 1 3378 53 is_stmt 0 view .LVU2098
 7044 0000 074B     		ldr	r3, .L770
 7045              		.loc 1 3378 44 view .LVU2099
 7046 0002 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 7047 0004 1AB9     		cbnz	r2, .L768
3379:src/keys.c    **** 	   || State2.rarg || State2.registerlist || State2.multi 
3380:src/keys.c    **** 	   || State2.gtodot || State2.catalogue || (State2.test != TST_NONE));
 7048              		.loc 1 3380 5 discriminator 2 view .LVU2100
 7049 0006 5969     		ldr	r1, [r3, #20]
 7050 0008 064A     		ldr	r2, .L770+4
 7051 000a 0A40     		ands	r2, r2, r1
 7052 000c 0AB1     		cbz	r2, .L769
 7053              	.L768:
 7054 000e 0120     		movs	r0, #1
3381:src/keys.c    ****  }
 7055              		.loc 1 3381 2 view .LVU2101
 7056 0010 7047     		bx	lr
 7057              	.L769:
3380:src/keys.c    ****  }
 7058              		.loc 1 3380 42 discriminator 3 view .LVU2102
 7059 0012 D889     		ldrh	r0, [r3, #14]
 7060 0014 B0F5E060 		subs	r0, r0, #1792
 7061 0018 18BF     		it	ne
 7062 001a 0120     		movne	r0, #1
 7063 001c 7047     		bx	lr
 7064              	.L771:
 7065 001e 00BF     		.align	2
 7066              	.L770:
 7067 0020 00000000 		.word	StateWhileOn
 7068 0024 0709280C 		.word	203950343
 7069              		.cfi_endproc
 7070              	.LFE61:
 7072              		.section	.rodata.process_keycode.str1.4,"aMS",%progbits,1
 7073              		.align	2
 7074              	.LC0:
 7075 0000 52554E00 		.ascii	"RUN\000"
 7076              		.align	2
 7077              	.LC1:
 7078 0004 4E554C4C 		.ascii	"NULL\000"
 7078      00
 7079 0009 000000   		.align	2
 7080              	.LC2:
 7081 000c 53746F70 		.ascii	"Stopped\000"
 7081      70656400 
 7082              		.section	.text.process_keycode,"ax",%progbits
 7083              		.align	1
 7084              		.p2align 2,,3
 7085              		.global	process_keycode
 7086              		.syntax unified
 7087              		.thumb
 7088              		.thumb_func
 7089              		.fpu fpv4-sp-d16
 7091              	process_keycode:
 7092              	.LVL611:
 7093              	.LFB63:
ARM GAS  /tmp/cc8lpfL1.s 			page 219


3382:src/keys.c    **** 
3383:src/keys.c    ****  void process_keycode_with_shift ( struct _ndmap remapped ) {
3384:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
3385:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
3386:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
3387:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
3388:src/keys.c    ****        // Was error just wait for confirmation
3389:src/keys.c    ****        wait_for_key_press();
3390:src/keys.c    ****      }
3391:src/keys.c    ****      start_buzzer_freq(8800); sys_delay(10); stop_buzzer();// End click
3392:src/keys.c    ****      return;
3393:src/keys.c    ****    }
3394:src/keys.c    ****    if (remapped.key_34s == K_OP) {
3395:src/keys.c    ****      nd_opcode = remapped.shift;
3396:src/keys.c    ****      set_shift(SHIFT_N);
3397:src/keys.c    ****    }
3398:src/keys.c    ****    else if (remapped.shift >= 0) set_shift ( remapped.shift );
3399:src/keys.c    ****    process_keycode ( remapped.key_34s );
3400:src/keys.c    ****  }
3401:src/keys.c    ****  
3402:src/keys.c    **** /*
3403:src/keys.c    ****  *  Fed with key codes by the event loop
3404:src/keys.c    ****  */
3405:src/keys.c    **** void process_keycode(int c)
3406:src/keys.c    **** {
 7094              		.loc 1 3406 1 is_stmt 1 view -0
 7095              		.cfi_startproc
 7096              		@ args = 0, pretend = 0, frame = 8
 7097              		@ frame_needed = 0, uses_anonymous_args = 0
3407:src/keys.c    ****   static int was_paused;
 7098              		.loc 1 3407 3 view .LVU2104
3408:src/keys.c    ****   //volatile int cmdline_empty; // volatile because it's uninitialized in some cases
3409:src/keys.c    ****   int cmdline_empty = 0;        // Visual studio chokes in debug mode over the above
 7099              		.loc 1 3409 3 view .LVU2105
3410:src/keys.c    ****   //print_debug(60,c);
3411:src/keys.c    ****   if (was_paused && Pause == 0)
 7100              		.loc 1 3411 3 view .LVU2106
3406:src/keys.c    ****   static int was_paused;
 7101              		.loc 1 3406 1 is_stmt 0 view .LVU2107
 7102 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7103              		.cfi_def_cfa_offset 36
 7104              		.cfi_offset 4, -36
 7105              		.cfi_offset 5, -32
 7106              		.cfi_offset 6, -28
 7107              		.cfi_offset 7, -24
 7108              		.cfi_offset 8, -20
 7109              		.cfi_offset 9, -16
 7110              		.cfi_offset 10, -12
 7111              		.cfi_offset 11, -8
 7112              		.cfi_offset 14, -4
 7113              		.loc 1 3411 7 view .LVU2108
 7114 0004 B54D     		ldr	r5, .L1401
 7115              		.loc 1 3411 27 view .LVU2109
 7116 0006 B64F     		ldr	r7, .L1401+4
 7117              		.loc 1 3411 6 view .LVU2110
 7118 0008 2B68     		ldr	r3, [r5]
3406:src/keys.c    ****   static int was_paused;
ARM GAS  /tmp/cc8lpfL1.s 			page 220


 7119              		.loc 1 3406 1 view .LVU2111
 7120 000a 83B0     		sub	sp, sp, #12
 7121              		.cfi_def_cfa_offset 48
3406:src/keys.c    ****   static int was_paused;
 7122              		.loc 1 3406 1 view .LVU2112
 7123 000c 0446     		mov	r4, r0
 7124              		.loc 1 3411 6 view .LVU2113
 7125 000e 1BB1     		cbz	r3, .L773
 7126              		.loc 1 3411 27 discriminator 1 view .LVU2114
 7127 0010 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7128              		.loc 1 3411 18 discriminator 1 view .LVU2115
 7129 0012 002B     		cmp	r3, #0
 7130 0014 00F0D981 		beq	.L1309
 7131              	.LVL612:
 7132              	.L773:
3412:src/keys.c    ****     {
3413:src/keys.c    ****     /*
3414:src/keys.c    ****      *  Continue XROM execution after a pause
3415:src/keys.c    ****      */
3416:src/keys.c    ****       xeq_xrom();
3417:src/keys.c    ****     }
3418:src/keys.c    ****   was_paused = Pause;
 7133              		.loc 1 3418 3 is_stmt 1 view .LVU2116
 7134              		.loc 1 3418 14 is_stmt 0 view .LVU2117
 7135 0018 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7136 001a 2B60     		str	r3, [r5]
3419:src/keys.c    ****   if (c == K_NOP)
 7137              		.loc 1 3419 3 is_stmt 1 view .LVU2118
 7138              		.loc 1 3419 6 is_stmt 0 view .LVU2119
 7139 001c 2E2C     		cmp	r4, #46
 7140 001e 00F09981 		beq	.L1310
3420:src/keys.c    ****     {
3421:src/keys.c    ****       OpCode = 0;
3422:src/keys.c    ****     }
3423:src/keys.c    ****   else if (c == K_HEARTBEAT)
 7141              		.loc 1 3423 8 is_stmt 1 view .LVU2120
 7142              		.loc 1 3423 11 is_stmt 0 view .LVU2121
 7143 0022 622C     		cmp	r4, #98
 7144 0024 6FD0     		beq	.L1311
3424:src/keys.c    ****     {
3425:src/keys.c    ****     /*
3426:src/keys.c    ****      *  Heartbeat processing goes here.
3427:src/keys.c    ****      *  This is totally thread safe!
3428:src/keys.c    ****      */
3429:src/keys.c    ****     if (Keyticks >= 2) {
3430:src/keys.c    ****       /*
3431:src/keys.c    ****        *  Some time has passed after last key press
3432:src/keys.c    ****        */
3433:src/keys.c    ****       if (OpCode != 0) {
3434:src/keys.c    **** 	/*
3435:src/keys.c    **** 	 *  Handle command display and NULL here
3436:src/keys.c    **** 	 */
3437:src/keys.c    **** 	if (OpCodeDisplayPending) {
3438:src/keys.c    **** 	  /*
3439:src/keys.c    **** 	   *  Show command to the user
3440:src/keys.c    **** 	   */
3441:src/keys.c    **** 	  OpCodeDisplayPending = 0;
ARM GAS  /tmp/cc8lpfL1.s 			page 221


3442:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
3443:src/keys.c    **** 	    DispMsg = "RUN";
3444:src/keys.c    **** 	  }
3445:src/keys.c    **** 	  else {
3446:src/keys.c    **** 	    scopy_char(TraceBuffer, prt(OpCode, TraceBuffer), '\0');
3447:src/keys.c    **** 	    DispMsg = TraceBuffer;
3448:src/keys.c    **** 	  }
3449:src/keys.c    **** 	  display();
3450:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
3451:src/keys.c    **** 	}
3452:src/keys.c    ****     else if (Keyticks > 12) {
3453:src/keys.c    **** 	  /*
3454:src/keys.c    **** 	   *  Key is too long held down
3455:src/keys.c    **** 	   */
3456:src/keys.c    **** 	  OpCode = 0;
3457:src/keys.c    **** 	  message("NULL", CNULL);
3458:src/keys.c    **** 	  // Force display update on key-up
3459:src/keys.c    **** 	  State2.disp_temp = 0;
3460:src/keys.c    **** 	}
3461:src/keys.c    ****       }
3462:src/keys.c    ****       if (Keyticks > 12 && shift_down() != SHIFT_N) {
3463:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
3464:src/keys.c    **** 	State2.shifts = SHIFT_N;
3465:src/keys.c    ****       }
3466:src/keys.c    ****     }
3467:src/keys.c    **** 
3468:src/keys.c    ****     /*
3469:src/keys.c    ****      *  Serve the watchdog
3470:src/keys.c    ****      */
3471:src/keys.c    ****     watchdog();
3472:src/keys.c    **** 
3473:src/keys.c    **** #ifndef CONSOLE
3474:src/keys.c    ****     /*
3475:src/keys.c    ****      *  If buffer is empty re-allow R/S to start a program
3476:src/keys.c    ****      */
3477:src/keys.c    ****     if (JustStopped && !is_key_pressed()) {
3478:src/keys.c    ****       JustStopped = 0;
3479:src/keys.c    ****     }
3480:src/keys.c    **** #endif
3481:src/keys.c    **** 
3482:src/keys.c    ****     /*
3483:src/keys.c    ****      *  Do nothing if not running a program
3484:src/keys.c    ****      */
3485:src/keys.c    ****     if (!Running && ! Pause)
3486:src/keys.c    ****       return;
3487:src/keys.c    ****   }
3488:src/keys.c    ****   else {
3489:src/keys.c    ****     /*
3490:src/keys.c    ****      *  Not the heartbeat - prepare for execution of any commands
3491:src/keys.c    ****      */
3492:src/keys.c    ****     xeq_init_contexts();
 7145              		.loc 1 3492 5 is_stmt 1 view .LVU2122
3493:src/keys.c    ****     State2.wascomplex = 0;
 7146              		.loc 1 3493 23 is_stmt 0 view .LVU2123
 7147 0026 DFF8D482 		ldr	r8, .L1401+32
3492:src/keys.c    ****     State2.wascomplex = 0;
 7148              		.loc 1 3492 5 view .LVU2124
ARM GAS  /tmp/cc8lpfL1.s 			page 222


 7149 002a FFF7FEFF 		bl	xeq_init_contexts
 7150              	.LVL613:
 7151              		.loc 1 3493 5 is_stmt 1 view .LVU2125
 7152              		.loc 1 3493 23 is_stmt 0 view .LVU2126
 7153 002e 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
3494:src/keys.c    **** 
3495:src/keys.c    ****     if (is_dot(RPN)) {
 7154              		.loc 1 3495 9 view .LVU2127
 7155 0032 8D20     		movs	r0, #141
3493:src/keys.c    **** 
 7156              		.loc 1 3493 23 view .LVU2128
 7157 0034 6FF38713 		bfc	r3, #6, #2
 7158 0038 88F81430 		strb	r3, [r8, #20]
 7159              		.loc 1 3495 5 is_stmt 1 view .LVU2129
 7160              		.loc 1 3495 9 is_stmt 0 view .LVU2130
 7161 003c FFF7FEFF 		bl	is_dot
 7162              	.LVL614:
 7163              		.loc 1 3495 8 view .LVU2131
 7164 0040 0028     		cmp	r0, #0
 7165 0042 40F05082 		bne	.L1312
 7166              	.L791:
3496:src/keys.c    ****       /*
3497:src/keys.c    ****        * Turn off the RPN annunciator as a visual feedback
3498:src/keys.c    ****        */
3499:src/keys.c    ****       clr_dot(RPN);
3500:src/keys.c    ****       finish_RPN(); // RPN
3501:src/keys.c    ****     }
3502:src/keys.c    **** 
3503:src/keys.c    **** #ifndef CONSOLE
3504:src/keys.c    ****     /*
3505:src/keys.c    ****      *  Reallow display refresh which is temporarily disabled after a stop
3506:src/keys.c    ****      *  All keys execpt R/S trigger this. The latter will only be reenabled
3507:src/keys.c    ****      *  from the heartbeat after the keybord buffer has become empty to avoid
3508:src/keys.c    ****      *  an accidental restart of the program.
3509:src/keys.c    ****      */
3510:src/keys.c    ****     if (c != K63)
 7167              		.loc 1 3510 5 is_stmt 1 view .LVU2132
 7168              		.loc 1 3510 8 is_stmt 0 view .LVU2133
 7169 0046 272C     		cmp	r4, #39
 7170 0048 00F04A82 		beq	.L1313
3511:src/keys.c    ****       JustStopped = 0;
 7171              		.loc 1 3511 7 is_stmt 1 view .LVU2134
 7172              		.loc 1 3511 19 is_stmt 0 view .LVU2135
 7173 004c A54B     		ldr	r3, .L1401+8
 7174 004e 0020     		movs	r0, #0
3512:src/keys.c    **** #endif
3513:src/keys.c    ****   }
3514:src/keys.c    **** 
3515:src/keys.c    ****   /*
3516:src/keys.c    ****    *  Handle key release
3517:src/keys.c    ****    */
3518:src/keys.c    ****   if (c == K_RELEASE)
 7175              		.loc 1 3518 6 view .LVU2136
 7176 0050 632C     		cmp	r4, #99
3511:src/keys.c    ****       JustStopped = 0;
 7177              		.loc 1 3511 19 view .LVU2137
 7178 0052 1860     		str	r0, [r3]
ARM GAS  /tmp/cc8lpfL1.s 			page 223


 7179              		.loc 1 3518 3 is_stmt 1 view .LVU2138
 7180              		.loc 1 3518 6 is_stmt 0 view .LVU2139
 7181 0054 40F08D81 		bne	.L793
3519:src/keys.c    ****     {
3520:src/keys.c    ****       //      print_debug (80,c);
3521:src/keys.c    ****     if (OpCode != 0) {
 7182              		.loc 1 3521 5 is_stmt 1 view .LVU2140
 7183              		.loc 1 3521 16 is_stmt 0 view .LVU2141
 7184 0058 A34B     		ldr	r3, .L1401+12
 7185 005a 1D68     		ldr	r5, [r3]
 7186              		.loc 1 3521 8 view .LVU2142
 7187 005c 002D     		cmp	r5, #0
 7188 005e 00F04D82 		beq	.L794
3522:src/keys.c    ****       /*
3523:src/keys.c    ****        * Execute the key on release
3524:src/keys.c    ****        */
3525:src/keys.c    ****       GoFast = 1;
 7189              		.loc 1 3525 7 is_stmt 1 view .LVU2143
 7190              		.loc 1 3525 14 is_stmt 0 view .LVU2144
 7191 0062 A24A     		ldr	r2, .L1401+16
3526:src/keys.c    ****       c = OpCode;
3527:src/keys.c    ****       //      print_debug(81,c);
3528:src/keys.c    ****       OpCode = 0;
 7192              		.loc 1 3528 14 view .LVU2145
 7193 0064 1860     		str	r0, [r3]
3529:src/keys.c    **** 
3530:src/keys.c    ****       if (c == STATE_SST)
 7194              		.loc 1 3530 10 view .LVU2146
 7195 0066 2E2D     		cmp	r5, #46
3525:src/keys.c    ****       c = OpCode;
 7196              		.loc 1 3525 14 view .LVU2147
 7197 0068 4FF00100 		mov	r0, #1
3526:src/keys.c    ****       c = OpCode;
 7198              		.loc 1 3526 9 view .LVU2148
 7199 006c 2C46     		mov	r4, r5
 7200              	.LVL615:
3525:src/keys.c    ****       c = OpCode;
 7201              		.loc 1 3525 14 view .LVU2149
 7202 006e 1060     		str	r0, [r2]
3526:src/keys.c    ****       c = OpCode;
 7203              		.loc 1 3526 7 is_stmt 1 view .LVU2150
 7204              	.LVL616:
3528:src/keys.c    **** 
 7205              		.loc 1 3528 7 view .LVU2151
 7206              		.loc 1 3530 7 view .LVU2152
 7207              		.loc 1 3530 10 is_stmt 0 view .LVU2153
 7208 0070 00F05882 		beq	.L1314
3531:src/keys.c    **** 	xeq_sst_bst(1);
3532:src/keys.c    ****       else {
3533:src/keys.c    **** 	if (c == (OP_NIL | OP_OFF) || c == (OP_NIL | OP_rCLX) || !is_bad_cmdline()) {
 7209              		.loc 1 3533 2 is_stmt 1 view .LVU2154
 7210              		.loc 1 3533 5 is_stmt 0 view .LVU2155
 7211 0074 B5F5817F 		cmp	r5, #258
 7212 0078 08D0     		beq	.L800
 7213              		.loc 1 3533 29 discriminator 1 view .LVU2156
 7214 007a 40F23F13 		movw	r3, #319
 7215 007e 9D42     		cmp	r5, r3
ARM GAS  /tmp/cc8lpfL1.s 			page 224


 7216 0080 04D0     		beq	.L800
 7217              		.loc 1 3533 60 discriminator 2 view .LVU2157
 7218 0082 FFF7FEFF 		bl	is_bad_cmdline
 7219              	.LVL617:
 7220              		.loc 1 3533 56 discriminator 2 view .LVU2158
 7221 0086 0028     		cmp	r0, #0
 7222 0088 40F05982 		bne	.L1315
 7223              	.L800:
3534:src/keys.c    **** 	  xeq(c);
 7224              		.loc 1 3534 4 is_stmt 1 view .LVU2159
3535:src/keys.c    **** 	  if (Running || Pause)
 7225              		.loc 1 3535 8 is_stmt 0 view .LVU2160
 7226 008c 984E     		ldr	r6, .L1401+20
3534:src/keys.c    **** 	  xeq(c);
 7227              		.loc 1 3534 4 view .LVU2161
 7228 008e 2846     		mov	r0, r5
 7229 0090 FFF7FEFF 		bl	xeq
 7230              	.LVL618:
 7231              		.loc 1 3535 4 is_stmt 1 view .LVU2162
 7232              		.loc 1 3535 7 is_stmt 0 view .LVU2163
 7233 0094 3368     		ldr	r3, [r6]
 7234 0096 0BB9     		cbnz	r3, .L798
 7235              		.loc 1 3535 16 discriminator 1 view .LVU2164
 7236 0098 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7237 009a 0BB1     		cbz	r3, .L796
 7238              	.L798:
3536:src/keys.c    **** 	    xeqprog();
 7239              		.loc 1 3536 6 is_stmt 1 view .LVU2165
 7240 009c FFF7FEFF 		bl	xeqprog
 7241              	.LVL619:
 7242              	.L796:
3537:src/keys.c    **** 	}
3538:src/keys.c    ****       }
3539:src/keys.c    ****       dot(RPN, ShowRPN);
 7243              		.loc 1 3539 7 view .LVU2166
 7244 00a0 944D     		ldr	r5, .L1401+24
 7245 00a2 8D20     		movs	r0, #141
 7246 00a4 2968     		ldr	r1, [r5]
 7247 00a6 FFF7FEFF 		bl	dot
 7248              	.LVL620:
3540:src/keys.c    ****     }
3541:src/keys.c    ****     else {
3542:src/keys.c    ****       // Ignore key-up if no operation was pending
3543:src/keys.c    ****       dot(RPN, ShowRPN);
3544:src/keys.c    **** #ifndef CONSOLE
3545:src/keys.c    ****       if (! State2.disp_temp ) {
3546:src/keys.c    **** 	if (!WasDataEntry) {
3547:src/keys.c    **** 	  // This will get rid of the last displayed op-code
3548:src/keys.c    **** 	  display();
3549:src/keys.c    **** 	}
3550:src/keys.c    **** 	else {
3551:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3552:src/keys.c    **** 	}
3553:src/keys.c    ****       }
3554:src/keys.c    **** #endif
3555:src/keys.c    ****       return;
3556:src/keys.c    ****     }
ARM GAS  /tmp/cc8lpfL1.s 			page 225


3557:src/keys.c    **** 
3558:src/keys.c    ****     /*
3559:src/keys.c    ****      *  Turn on the RPN symbol if desired
3560:src/keys.c    ****      */
3561:src/keys.c    ****     if (ShowRPN) {
 7249              		.loc 1 3561 5 view .LVU2167
 7250              		.loc 1 3561 9 is_stmt 0 view .LVU2168
 7251 00aa 2D68     		ldr	r5, [r5]
 7252              		.loc 1 3561 8 view .LVU2169
 7253 00ac 002D     		cmp	r5, #0
 7254 00ae 40F02082 		bne	.L802
 7255              	.LVL621:
 7256              	.L1302:
3562:src/keys.c    ****       finish_RPN(); // RPN
3563:src/keys.c    ****     }
3564:src/keys.c    ****   }
3565:src/keys.c    ****   else {
3566:src/keys.c    ****     /*
3567:src/keys.c    ****      *  Decode the key 
3568:src/keys.c    ****      */
3569:src/keys.c    ****     //    print_debug (90, cur_shift());
3570:src/keys.c    ****     WasDataEntry = 0;
3571:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
3572:src/keys.c    **** #ifdef DM42
3573:src/keys.c    ****     if (c != K_OP) {
3574:src/keys.c    ****       c = process(c);
3575:src/keys.c    ****       //print_debug (91,cur_shift());
3576:src/keys.c    ****       // returns an op-code or state
3577:src/keys.c    ****     }
3578:src/keys.c    ****     else {
3579:src/keys.c    ****       if (isRARG(nd_opcode)) {
3580:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
3581:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
3582:src/keys.c    **** 	  c = nd_opcode;
3583:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
3584:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
3585:src/keys.c    **** 	  c = STATE_UNFINISHED;
3586:src/keys.c    **** 	}
3587:src/keys.c    **** 	else if ( (nd_opcode & 0x00ff) != 0 ) { // has argument
3588:src/keys.c    **** 	  c = nd_opcode;
3589:src/keys.c    **** 	}
3590:src/keys.c    **** 	else {
3591:src/keys.c    **** 	  init_arg(RARG_CMD(nd_opcode));
3592:src/keys.c    **** 	  c = STATE_UNFINISHED;
3593:src/keys.c    **** 	}
3594:src/keys.c    ****       }
3595:src/keys.c    ****       else if (isDBL(nd_opcode)) {
3596:src/keys.c    **** 	if ( (nd_opcode & 0xffff00ff) == 0 ) { // no argument
3597:src/keys.c    **** 	  init_arg(opDBL(nd_opcode));
3598:src/keys.c    **** 	  State2.multi = 1;
3599:src/keys.c    **** 	  State2.alphashift = 0;
3600:src/keys.c    **** 	  State2.rarg = 0;
3601:src/keys.c    **** 	  c = STATE_UNFINISHED;
3602:src/keys.c    **** 	}
3603:src/keys.c    **** 	else { // let argument through
3604:src/keys.c    **** 	  c = nd_opcode;
3605:src/keys.c    **** 	}
ARM GAS  /tmp/cc8lpfL1.s 			page 226


3606:src/keys.c    ****       }
3607:src/keys.c    ****       else {
3608:src/keys.c    **** 	c = check_confirm(nd_opcode);
3609:src/keys.c    ****       }      
3610:src/keys.c    ****     }
3611:src/keys.c    **** #else
3612:src/keys.c    ****     c = process(c);		// returns an op-code or state
3613:src/keys.c    **** #endif
3614:src/keys.c    ****     switch (c) {
3615:src/keys.c    ****     case STATE_SST:
3616:src/keys.c    ****       OpCode = c;
3617:src/keys.c    ****       OpCodeDisplayPending = 0;
3618:src/keys.c    ****       xeq_sst_bst(0);
3619:src/keys.c    ****       break;
 7257              		.loc 1 3619 7 is_stmt 1 view .LVU2170
 7258 00b2 3368     		ldr	r3, [r6]
 7259              	.LVL622:
 7260              	.L803:
3620:src/keys.c    **** 
3621:src/keys.c    ****     case STATE_BST:
3622:src/keys.c    ****       xeq_sst_bst(-1);
3623:src/keys.c    ****       break;
3624:src/keys.c    **** 
3625:src/keys.c    ****     case STATE_BACKSPACE:
3626:src/keys.c    ****       if (! State2.runmode)
3627:src/keys.c    **** 	delprog();
3628:src/keys.c    ****       else if (State2.alphas) {
3629:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
3630:src/keys.c    **** 	if (p > Alpha)
3631:src/keys.c    **** 	  *--p = '\0';
3632:src/keys.c    ****       }
3633:src/keys.c    ****       break;
3634:src/keys.c    **** 
3635:src/keys.c    ****     case STATE_RUNNING:
3636:src/keys.c    ****       xeqprog();  // continue execution
3637:src/keys.c    ****       break;
3638:src/keys.c    **** 
3639:src/keys.c    ****     case STATE_WINDOWRIGHT:
3640:src/keys.c    ****     case STATE_WINDOWLEFT:
3641:src/keys.c    ****       if (!is_bad_cmdline())
3642:src/keys.c    **** 	set_window(c);
3643:src/keys.c    ****       break;
3644:src/keys.c    **** 
3645:src/keys.c    ****     case STATE_UNFINISHED:
3646:src/keys.c    ****     case STATE_IGNORE:
3647:src/keys.c    ****       break;
3648:src/keys.c    **** 
3649:src/keys.c    ****     default:
3650:src/keys.c    ****       if (State2.runmode || NonProgrammable) {
3651:src/keys.c    **** 	NonProgrammable = 0;
3652:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
3653:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
3654:src/keys.c    **** 	    // Data entry key
3655:src/keys.c    **** #ifndef CONSOLE
3656:src/keys.c    **** 	    WasDataEntry = 1;
3657:src/keys.c    **** #endif
3658:src/keys.c    **** 	    cmdline_empty = (CmdLineLength == 0);
ARM GAS  /tmp/cc8lpfL1.s 			page 227


3659:src/keys.c    **** 	    xeq(c);
3660:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
3661:src/keys.c    **** 	  }
3662:src/keys.c    **** 	}
3663:src/keys.c    **** 	else {
3664:src/keys.c    **** 	  // Save the op-code for execution on key-up
3665:src/keys.c    **** 	  //print_debug(70,c);
3666:src/keys.c    **** 	  OpCode = c;
3667:src/keys.c    **** 	  OpCodeDisplayPending = 1;
3668:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3669:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
3670:src/keys.c    **** 	}
3671:src/keys.c    ****       }
3672:src/keys.c    ****       else {
3673:src/keys.c    **** 	stoprog(c);
3674:src/keys.c    ****       }
3675:src/keys.c    ****     }
3676:src/keys.c    ****   }
3677:src/keys.c    ****   if (! Running && ! Pause
 7261              		.loc 1 3677 3 view .LVU2171
 7262              		.loc 1 3677 6 is_stmt 0 view .LVU2172
 7263 00b4 002B     		cmp	r3, #0
 7264 00b6 40F04981 		bne	.L1308
 7265              	.LVL623:
 7266              	.L823:
 7267              		.loc 1 3677 20 discriminator 1 view .LVU2173
 7268 00ba 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7269              		.loc 1 3677 17 discriminator 1 view .LVU2174
 7270 00bc 002B     		cmp	r3, #0
 7271 00be 40F04581 		bne	.L1308
3678:src/keys.c    **** #ifndef CONSOLE
3679:src/keys.c    ****       && ! JustStopped
 7272              		.loc 1 3679 10 view .LVU2175
 7273 00c2 884B     		ldr	r3, .L1401+8
3680:src/keys.c    **** #endif
3681:src/keys.c    ****       && ! JustDisplayed && c != STATE_IGNORE) {
 7274              		.loc 1 3681 10 view .LVU2176
 7275 00c4 8C4E     		ldr	r6, .L1401+28
 7276 00c6 1B68     		ldr	r3, [r3]
 7277 00c8 3268     		ldr	r2, [r6]
 7278              		.loc 1 3681 7 view .LVU2177
 7279 00ca 1343     		orrs	r3, r3, r2
 7280 00cc 16D1     		bne	.L1114
 7281              		.loc 1 3681 26 discriminator 1 view .LVU2178
 7282 00ce 322C     		cmp	r4, #50
 7283 00d0 14D0     		beq	.L1114
 7284              	.LBB842:
3682:src/keys.c    ****     const int orig_WasDataEntry = WasDataEntry;
 7285              		.loc 1 3682 5 is_stmt 1 view .LVU2179
 7286              		.loc 1 3682 15 is_stmt 0 view .LVU2180
 7287 00d2 DFF84092 		ldr	r9, .L1401+56
 7288 00d6 D9F80070 		ldr	r7, [r9]
 7289              	.LVL624:
3683:src/keys.c    **** 
3684:src/keys.c    ****     WasDataEntry &= !(c == (OP_SPEC | OP_ENTER) || cmdline_empty || State2.invalid_disp);
 7290              		.loc 1 3684 5 is_stmt 1 view .LVU2181
 7291              		.loc 1 3684 21 is_stmt 0 view .LVU2182
ARM GAS  /tmp/cc8lpfL1.s 			page 228


 7292 00da 4CB1     		cbz	r4, .L1116
 7293              		.loc 1 3684 49 discriminator 1 view .LVU2183
 7294 00dc 002D     		cmp	r5, #0
 7295 00de 40F0ED83 		bne	.L1166
 7296              		.loc 1 3684 66 discriminator 3 view .LVU2184
 7297 00e2 864B     		ldr	r3, .L1401+32
 7298 00e4 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 7299              		.loc 1 3684 21 discriminator 3 view .LVU2185
 7300 00e6 9A07     		lsls	r2, r3, #30
 7301 00e8 00F13B84 		bmi	.L1167
 7302 00ec 07F00104 		and	r4, r7, #1
 7303              	.LVL625:
 7304              	.L1116:
 7305              		.loc 1 3684 18 discriminator 8 view .LVU2186
 7306 00f0 C9F80040 		str	r4, [r9]
3685:src/keys.c    ****     display();
 7307              		.loc 1 3685 5 is_stmt 1 discriminator 8 view .LVU2187
 7308 00f4 FFF7FEFF 		bl	display
 7309              	.LVL626:
3686:src/keys.c    ****     WasDataEntry = orig_WasDataEntry;
 7310              		.loc 1 3686 5 discriminator 8 view .LVU2188
 7311              		.loc 1 3686 18 is_stmt 0 discriminator 8 view .LVU2189
 7312 00f8 C9F80070 		str	r7, [r9]
 7313              	.LVL627:
 7314              	.L1114:
 7315              		.loc 1 3686 18 discriminator 8 view .LVU2190
 7316              	.LBE842:
3687:src/keys.c    ****   }
3688:src/keys.c    **** 
3689:src/keys.c    ****  no_display:
3690:src/keys.c    ****   JustDisplayed = 0;
 7317              		.loc 1 3690 3 is_stmt 1 view .LVU2191
 7318              		.loc 1 3690 17 is_stmt 0 view .LVU2192
 7319 00fc 0023     		movs	r3, #0
 7320 00fe 3360     		str	r3, [r6]
3691:src/keys.c    ****   watchdog();
 7321              		.loc 1 3691 13 is_stmt 1 view .LVU2193
 7322              	.L772:
3692:src/keys.c    **** }
 7323              		.loc 1 3692 1 is_stmt 0 view .LVU2194
 7324 0100 03B0     		add	sp, sp, #12
 7325              		.cfi_remember_state
 7326              		.cfi_def_cfa_offset 36
 7327              		@ sp needed
 7328 0102 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7329              	.LVL628:
 7330              	.L1311:
 7331              		.cfi_restore_state
3429:src/keys.c    ****       /*
 7332              		.loc 1 3429 5 is_stmt 1 view .LVU2195
3429:src/keys.c    ****       /*
 7333              		.loc 1 3429 9 is_stmt 0 view .LVU2196
 7334 0106 FFF7FEFF 		bl	keyticks
 7335              	.LVL629:
3429:src/keys.c    ****       /*
 7336              		.loc 1 3429 8 view .LVU2197
 7337 010a 0128     		cmp	r0, #1
ARM GAS  /tmp/cc8lpfL1.s 			page 229


 7338 010c 1BDD     		ble	.L778
3433:src/keys.c    **** 	/*
 7339              		.loc 1 3433 7 is_stmt 1 view .LVU2198
3433:src/keys.c    **** 	/*
 7340              		.loc 1 3433 18 is_stmt 0 view .LVU2199
 7341 010e 764D     		ldr	r5, .L1401+12
 7342 0110 2868     		ldr	r0, [r5]
3433:src/keys.c    **** 	/*
 7343              		.loc 1 3433 10 view .LVU2200
 7344 0112 98B1     		cbz	r0, .L780
3437:src/keys.c    **** 	  /*
 7345              		.loc 1 3437 2 is_stmt 1 view .LVU2201
3437:src/keys.c    **** 	  /*
 7346              		.loc 1 3437 6 is_stmt 0 view .LVU2202
 7347 0114 7A4B     		ldr	r3, .L1401+36
3437:src/keys.c    **** 	  /*
 7348              		.loc 1 3437 5 view .LVU2203
 7349 0116 1E68     		ldr	r6, [r3]
 7350 0118 002E     		cmp	r6, #0
 7351 011a 00F02782 		beq	.L781
3441:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 7352              		.loc 1 3441 4 is_stmt 1 view .LVU2204
3442:src/keys.c    **** 	    DispMsg = "RUN";
 7353              		.loc 1 3442 7 is_stmt 0 view .LVU2205
 7354 011e 40F23B12 		movw	r2, #315
3441:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 7355              		.loc 1 3441 25 view .LVU2206
 7356 0122 0025     		movs	r5, #0
3442:src/keys.c    **** 	    DispMsg = "RUN";
 7357              		.loc 1 3442 7 view .LVU2207
 7358 0124 9042     		cmp	r0, r2
3441:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 7359              		.loc 1 3441 25 view .LVU2208
 7360 0126 1D60     		str	r5, [r3]
3442:src/keys.c    **** 	    DispMsg = "RUN";
 7361              		.loc 1 3442 4 is_stmt 1 view .LVU2209
3442:src/keys.c    **** 	    DispMsg = "RUN";
 7362              		.loc 1 3442 7 is_stmt 0 view .LVU2210
 7363 0128 40F09C82 		bne	.L782
3443:src/keys.c    **** 	  }
 7364              		.loc 1 3443 6 is_stmt 1 view .LVU2211
3443:src/keys.c    **** 	  }
 7365              		.loc 1 3443 14 is_stmt 0 view .LVU2212
 7366 012c 754B     		ldr	r3, .L1401+40
 7367 012e 764A     		ldr	r2, .L1401+44
 7368 0130 1A60     		str	r2, [r3]
 7369              	.L783:
3449:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
 7370              		.loc 1 3449 4 is_stmt 1 view .LVU2213
 7371 0132 FFF7FEFF 		bl	display
 7372              	.LVL630:
3450:src/keys.c    **** 	}
 7373              		.loc 1 3450 4 view .LVU2214
3450:src/keys.c    **** 	}
 7374              		.loc 1 3450 12 is_stmt 0 view .LVU2215
 7375 0136 6F4B     		ldr	r3, .L1401+24
 7376 0138 0122     		movs	r2, #1
ARM GAS  /tmp/cc8lpfL1.s 			page 230


 7377 013a 1A60     		str	r2, [r3]
 7378              	.L780:
3462:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 7379              		.loc 1 3462 7 is_stmt 1 view .LVU2216
3462:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 7380              		.loc 1 3462 11 is_stmt 0 view .LVU2217
 7381 013c FFF7FEFF 		bl	keyticks
 7382              	.LVL631:
3462:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 7383              		.loc 1 3462 10 view .LVU2218
 7384 0140 0C28     		cmp	r0, #12
 7385 0142 00F3F381 		bgt	.L1316
 7386              	.L778:
3471:src/keys.c    **** 
 7387              		.loc 1 3471 15 is_stmt 1 view .LVU2219
3477:src/keys.c    ****       JustStopped = 0;
 7388              		.loc 1 3477 5 view .LVU2220
3477:src/keys.c    ****       JustStopped = 0;
 7389              		.loc 1 3477 9 is_stmt 0 view .LVU2221
 7390 0146 674D     		ldr	r5, .L1401+8
3477:src/keys.c    ****       JustStopped = 0;
 7391              		.loc 1 3477 8 view .LVU2222
 7392 0148 2B68     		ldr	r3, [r5]
 7393 014a 002B     		cmp	r3, #0
 7394 014c 40F08581 		bne	.L1317
 7395              	.L787:
3485:src/keys.c    ****       return;
 7396              		.loc 1 3485 5 is_stmt 1 view .LVU2223
3485:src/keys.c    ****       return;
 7397              		.loc 1 3485 9 is_stmt 0 view .LVU2224
 7398 0150 674E     		ldr	r6, .L1401+20
 7399 0152 3368     		ldr	r3, [r6]
3485:src/keys.c    ****       return;
 7400              		.loc 1 3485 8 view .LVU2225
 7401 0154 002B     		cmp	r3, #0
 7402 0156 00F05B81 		beq	.L1318
 7403              	.L789:
3518:src/keys.c    ****     {
 7404              		.loc 1 3518 3 is_stmt 1 view .LVU2226
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7405              		.loc 1 3570 5 view .LVU2227
3571:src/keys.c    **** #ifdef DM42
 7406              		.loc 1 3571 13 is_stmt 0 view .LVU2228
 7407 015a 664A     		ldr	r2, .L1401+24
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7408              		.loc 1 3570 18 view .LVU2229
 7409 015c DFF8B491 		ldr	r9, .L1401+56
3571:src/keys.c    **** #ifdef DM42
 7410              		.loc 1 3571 15 view .LVU2230
 7411 0160 B3FA83F3 		clz	r3, r3
 7412 0164 5B09     		lsrs	r3, r3, #5
3571:src/keys.c    **** #ifdef DM42
 7413              		.loc 1 3571 13 view .LVU2231
 7414 0166 1360     		str	r3, [r2]
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7415              		.loc 1 3570 18 view .LVU2232
 7416 0168 0023     		movs	r3, #0
ARM GAS  /tmp/cc8lpfL1.s 			page 231


 7417 016a C9F80030 		str	r3, [r9]
3571:src/keys.c    **** #ifdef DM42
 7418              		.loc 1 3571 5 is_stmt 1 view .LVU2233
3573:src/keys.c    ****       c = process(c);
 7419              		.loc 1 3573 5 view .LVU2234
 7420              	.L775:
3574:src/keys.c    ****       //print_debug (91,cur_shift());
 7421              		.loc 1 3574 7 view .LVU2235
 7422              	.LVL632:
 7423              	.LBB843:
 7424              	.LBI843:
3214:src/keys.c    ****   const enum shifts shift = cur_shift();
 7425              		.loc 1 3214 12 view .LVU2236
 7426              	.LBB844:
3215:src/keys.c    ****   enum catalogues cat;
 7427              		.loc 1 3215 3 view .LVU2237
 7428              	.LBB845:
 7429              	.LBI845:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 7430              		.loc 1 96 13 view .LVU2238
 7431              	.LBB846:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7432              		.loc 1 97 2 view .LVU2239
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7433              		.loc 1 97 18 is_stmt 0 view .LVU2240
 7434 016e FFF7FEFF 		bl	shift_down
 7435              	.LVL633:
  98:src/keys.c    **** }
 7436              		.loc 1 98 2 is_stmt 1 view .LVU2241
  98:src/keys.c    **** }
 7437              		.loc 1 98 52 is_stmt 0 view .LVU2242
 7438 0172 8346     		mov	fp, r0
 7439 0174 10B9     		cbnz	r0, .L807
 7440 0176 614B     		ldr	r3, .L1401+32
 7441 0178 93F810B0 		ldrb	fp, [r3, #16]	@ zero_extendqisi2
 7442              	.L807:
 7443              	.LVL634:
  98:src/keys.c    **** }
 7444              		.loc 1 98 52 view .LVU2243
 7445              	.LBE846:
 7446              	.LBE845:
3216:src/keys.c    **** 
 7447              		.loc 1 3216 3 is_stmt 1 view .LVU2244
3218:src/keys.c    ****     /*
 7448              		.loc 1 3218 3 view .LVU2245
3218:src/keys.c    ****     /*
 7449              		.loc 1 3218 7 is_stmt 0 view .LVU2246
 7450 017c 3568     		ldr	r5, [r6]
3218:src/keys.c    ****     /*
 7451              		.loc 1 3218 6 view .LVU2247
 7452 017e 002D     		cmp	r5, #0
 7453 0180 40F0CC80 		bne	.L808
3218:src/keys.c    ****     /*
 7454              		.loc 1 3218 15 view .LVU2248
 7455 0184 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7456 0186 002B     		cmp	r3, #0
 7457 0188 40F0C880 		bne	.L808
ARM GAS  /tmp/cc8lpfL1.s 			page 232


3246:src/keys.c    **** #else
 7458              		.loc 1 3246 3 is_stmt 1 view .LVU2249
3246:src/keys.c    **** #else
 7459              		.loc 1 3246 6 is_stmt 0 view .LVU2250
 7460 018c 242C     		cmp	r4, #36
 7461 018e 00F0E882 		beq	.L1319
3263:src/keys.c    **** 		// Avoid an accidental restart with R/S
 7462              		.loc 1 3263 2 is_stmt 1 view .LVU2251
3263:src/keys.c    **** 		// Avoid an accidental restart with R/S
 7463              		.loc 1 3263 5 is_stmt 0 view .LVU2252
 7464 0192 272C     		cmp	r4, #39
 7465 0194 04D1     		bne	.L822
3263:src/keys.c    **** 		// Avoid an accidental restart with R/S
 7466              		.loc 1 3263 15 view .LVU2253
 7467 0196 534B     		ldr	r3, .L1401+8
 7468 0198 1A68     		ldr	r2, [r3]
 7469 019a 002A     		cmp	r2, #0
 7470 019c 40F0CF83 		bne	.L1320
 7471              	.L822:
 7472 01a0 DFF85881 		ldr	r8, .L1401+32
 7473 01a4 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
 7474              	.L815:
3272:src/keys.c    **** 		CmdLineLength = 0;
 7475              		.loc 1 3272 2 is_stmt 1 view .LVU2254
3272:src/keys.c    **** 		CmdLineLength = 0;
 7476              		.loc 1 3272 5 is_stmt 0 view .LVU2255
 7477 01a8 33B1     		cbz	r3, .L825
3272:src/keys.c    **** 		CmdLineLength = 0;
 7478              		.loc 1 3272 26 view .LVU2256
 7479 01aa FFF7FEFF 		bl	keyticks
 7480              	.LVL635:
3272:src/keys.c    **** 		CmdLineLength = 0;
 7481              		.loc 1 3272 23 view .LVU2257
 7482 01ae 1E28     		cmp	r0, #30
3273:src/keys.c    **** 	/*
 7483              		.loc 1 3273 3 is_stmt 1 view .LVU2258
3273:src/keys.c    **** 	/*
 7484              		.loc 1 3273 17 is_stmt 0 view .LVU2259
 7485 01b0 C4BF     		itt	gt
 7486 01b2 0023     		movgt	r3, #0
 7487 01b4 88F81C30 		strbgt	r3, [r8, #28]
 7488              	.L825:
3278:src/keys.c    **** 		return process_confirm((const keycode)c);
 7489              		.loc 1 3278 2 is_stmt 1 view .LVU2260
3278:src/keys.c    **** 		return process_confirm((const keycode)c);
 7490              		.loc 1 3278 6 is_stmt 0 view .LVU2261
 7491 01b8 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
3278:src/keys.c    **** 		return process_confirm((const keycode)c);
 7492              		.loc 1 3278 5 view .LVU2262
 7493 01bc 5A07     		lsls	r2, r3, #29
 7494 01be 40F06E82 		bne	.L1321
3281:src/keys.c    **** 		return process_arg((const keycode)c);
 7495              		.loc 1 3281 2 is_stmt 1 view .LVU2263
3281:src/keys.c    **** 		return process_arg((const keycode)c);
 7496              		.loc 1 3281 6 is_stmt 0 view .LVU2264
 7497 01c2 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
3281:src/keys.c    **** 		return process_arg((const keycode)c);
ARM GAS  /tmp/cc8lpfL1.s 			page 233


 7498              		.loc 1 3281 5 view .LVU2265
 7499 01c6 8B06     		lsls	r3, r1, #26
 7500 01c8 00F1EB82 		bmi	.L1322
3284:src/keys.c    **** 		return process_gtodot((const keycode)c);
 7501              		.loc 1 3284 2 is_stmt 1 view .LVU2266
3284:src/keys.c    **** 		return process_gtodot((const keycode)c);
 7502              		.loc 1 3284 6 is_stmt 0 view .LVU2267
 7503 01cc 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
3284:src/keys.c    **** 		return process_gtodot((const keycode)c);
 7504              		.loc 1 3284 5 view .LVU2268
 7505 01d0 12F0010A 		ands	r10, r2, #1
 7506 01d4 40F02983 		bne	.L1323
3287:src/keys.c    **** 		return process_hyp((const keycode)c);
 7507              		.loc 1 3287 2 is_stmt 1 view .LVU2269
3287:src/keys.c    **** 		return process_hyp((const keycode)c);
 7508              		.loc 1 3287 5 is_stmt 0 view .LVU2270
 7509 01d8 12F02000 		ands	r0, r2, #32
 7510 01dc 40F07083 		bne	.L1324
3290:src/keys.c    **** 		return process_test((const keycode)c);
 7511              		.loc 1 3290 2 is_stmt 1 view .LVU2271
3290:src/keys.c    **** 		return process_test((const keycode)c);
 7512              		.loc 1 3290 12 is_stmt 0 view .LVU2272
 7513 01e0 98F80F30 		ldrb	r3, [r8, #15]	@ zero_extendqisi2
3290:src/keys.c    **** 		return process_test((const keycode)c);
 7514              		.loc 1 3290 5 view .LVU2273
 7515 01e4 072B     		cmp	r3, #7
 7516 01e6 40F0E182 		bne	.L1325
3293:src/keys.c    **** 		return process_status((const keycode)c);
 7517              		.loc 1 3293 2 is_stmt 1 view .LVU2274
3293:src/keys.c    **** 		return process_status((const keycode)c);
 7518              		.loc 1 3293 12 is_stmt 0 view .LVU2275
 7519 01ea 98F80C10 		ldrb	r1, [r8, #12]	@ zero_extendqisi2
3293:src/keys.c    **** 		return process_status((const keycode)c);
 7520              		.loc 1 3293 5 view .LVU2276
 7521 01ee 0029     		cmp	r1, #0
 7522 01f0 40F0D283 		bne	.L1326
3299:src/keys.c    **** 		toggle_shift(SHIFT_F);
 7523              		.loc 1 3299 2 is_stmt 1 view .LVU2277
3299:src/keys.c    **** 		toggle_shift(SHIFT_F);
 7524              		.loc 1 3299 5 is_stmt 0 view .LVU2278
 7525 01f4 292C     		cmp	r4, #41
 7526 01f6 00F00585 		beq	.L1327
3303:src/keys.c    **** 		toggle_shift(SHIFT_G);
 7527              		.loc 1 3303 2 is_stmt 1 view .LVU2279
3303:src/keys.c    **** 		toggle_shift(SHIFT_G);
 7528              		.loc 1 3303 5 is_stmt 0 view .LVU2280
 7529 01fa 2A2C     		cmp	r4, #42
 7530 01fc 00F00D85 		beq	.L1328
3307:src/keys.c    **** 		toggle_shift(SHIFT_H);
 7531              		.loc 1 3307 2 is_stmt 1 view .LVU2281
3307:src/keys.c    **** 		toggle_shift(SHIFT_H);
 7532              		.loc 1 3307 5 is_stmt 0 view .LVU2282
 7533 0200 2B2C     		cmp	r4, #43
 7534 0202 00F07F85 		beq	.L1329
3316:src/keys.c    **** 		return process_arrow((const keycode)c);
 7535              		.loc 1 3316 2 is_stmt 1 view .LVU2283
3316:src/keys.c    **** 		return process_arrow((const keycode)c);
ARM GAS  /tmp/cc8lpfL1.s 			page 234


 7536              		.loc 1 3316 5 is_stmt 0 view .LVU2284
 7537 0206 5107     		lsls	r1, r2, #29
 7538 0208 00F1F183 		bmi	.L1330
3324:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 7539              		.loc 1 3324 2 is_stmt 1 view .LVU2285
 7540              	.LBB847:
 7541              	.LBB848:
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7542              		.loc 1 276 6 is_stmt 0 view .LVU2286
 7543 020c DFF808A1 		ldr	r10, .L1401+60
 7544 0210 DAF80000 		ldr	r0, [r10]
 7545 0214 90F8AC17 		ldrb	r1, [r0, #1964]	@ zero_extendqisi2
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7546              		.loc 1 276 5 view .LVU2287
 7547 0218 01F0410C 		and	ip, r1, #65
 7548 021c BCF1410F 		cmp	ip, #65
 7549              	.LBE848:
 7550              	.LBE847:
3324:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 7551              		.loc 1 3324 8 view .LVU2288
 7552 0220 E4B2     		uxtb	r4, r4
 7553              	.LVL636:
 7554              	.LBB868:
 7555              	.LBI847:
 267:src/keys.c    **** {
 7556              		.loc 1 267 24 is_stmt 1 view .LVU2289
 7557              	.LBB855:
 269:src/keys.c    ****   int i, col, max;
 7558              		.loc 1 269 3 view .LVU2290
 270:src/keys.c    ****   const struct _map {
 7559              		.loc 1 270 3 view .LVU2291
 271:src/keys.c    ****     unsigned char key, cat[3];
 7560              		.loc 1 271 3 view .LVU2292
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7561              		.loc 1 276 2 view .LVU2293
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7562              		.loc 1 276 5 is_stmt 0 view .LVU2294
 7563 0222 00F05184 		beq	.L1331
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 7564              		.loc 1 312 3 is_stmt 1 view .LVU2295
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 7565              		.loc 1 312 6 is_stmt 0 view .LVU2296
 7566 0226 212C     		cmp	r4, #33
 7567 0228 00F0CE84 		beq	.L1332
 315:src/keys.c    ****     /*
 7568              		.loc 1 315 3 is_stmt 1 view .LVU2297
 315:src/keys.c    ****     /*
 7569              		.loc 1 315 23 is_stmt 0 view .LVU2298
 7570 022c 3749     		ldr	r1, .L1401+48
 7571 022e D8F81430 		ldr	r3, [r8, #20]
 315:src/keys.c    ****     /*
 7572              		.loc 1 315 6 view .LVU2299
 7573 0232 1942     		tst	r1, r3
 7574 0234 40F0D284 		bne	.L916
 7575              	.LBB849:
 319:src/keys.c    **** #ifdef DM42
 7576              		.loc 1 319 5 is_stmt 1 view .LVU2300
ARM GAS  /tmp/cc8lpfL1.s 			page 235


 346:src/keys.c    ****       /*
 7577              		.loc 1 346 5 view .LVU2301
 346:src/keys.c    ****       /*
 7578              		.loc 1 346 8 is_stmt 0 view .LVU2302
 7579 0238 242C     		cmp	r4, #36
 7580 023a 03D1     		bne	.L917
 346:src/keys.c    ****       /*
 7581              		.loc 1 346 18 view .LVU2303
 7582 023c BBF1020F 		cmp	fp, #2
 7583 0240 00F0F187 		beq	.L1143
 7584              	.L917:
 361:src/keys.c    ****       /*
 7585              		.loc 1 361 5 is_stmt 1 view .LVU2304
 361:src/keys.c    ****       /*
 7586              		.loc 1 361 8 is_stmt 0 view .LVU2305
 7587 0244 BBF1030F 		cmp	fp, #3
 7588 0248 18D1     		bne	.L923
 7589              	.L1126:
 371:src/keys.c    **** #ifndef WINGUI
 7590              		.loc 1 371 5 is_stmt 1 view .LVU2306
 7591              	.LVL637:
 373:src/keys.c    **** #else
 7592              		.loc 1 373 5 view .LVU2307
 373:src/keys.c    **** #else
 7593              		.loc 1 373 23 is_stmt 0 view .LVU2308
 7594 024a 90F8E837 		ldrb	r3, [r0, #2024]	@ zero_extendqisi2
 373:src/keys.c    **** #else
 7595              		.loc 1 373 27 view .LVU2309
 7596 024e D807     		lsls	r0, r3, #31
 7597 0250 00F1E087 		bmi	.L1144
 373:src/keys.c    **** #else
 7598              		.loc 1 373 73 view .LVU2310
 7599 0254 12F00203 		ands	r3, r2, #2
 7600 0258 01F0E581 		beq	.L1333
 371:src/keys.c    **** #ifndef WINGUI
 7601              		.loc 1 371 8 view .LVU2311
 7602 025c 2C4B     		ldr	r3, .L1401+52
 377:src/keys.c    ****   }
 7603              		.loc 1 377 9 view .LVU2312
 7604 025e 0C21     		movs	r1, #12
 373:src/keys.c    **** #else
 7605              		.loc 1 373 73 view .LVU2313
 7606 0260 4FF0020C 		mov	ip, #2
 7607              	.LVL638:
 7608              	.L918:
 373:src/keys.c    **** #else
 7609              		.loc 1 373 73 view .LVU2314
 7610              	.LBE849:
 421:src/keys.c    ****     if (cp->key == c) {
 7611              		.loc 1 421 3 is_stmt 1 view .LVU2315
 421:src/keys.c    ****     if (cp->key == c) {
 7612              		.loc 1 421 15 view .LVU2316
 7613 0264 181F     		subs	r0, r3, #4
 7614 0266 00EB8100 		add	r0, r0, r1, lsl #2
 7615              	.LBB850:
 373:src/keys.c    **** #else
 7616              		.loc 1 373 73 is_stmt 0 view .LVU2317
ARM GAS  /tmp/cc8lpfL1.s 			page 236


 7617 026a 0421     		movs	r1, #4
 7618              	.LVL639:
 373:src/keys.c    **** #else
 7619              		.loc 1 373 73 view .LVU2318
 7620 026c 01E0     		b	.L924
 7621              	.LVL640:
 7622              	.L1335:
 373:src/keys.c    **** #else
 7623              		.loc 1 373 73 view .LVU2319
 7624 026e 13F8041F 		ldrb	r1, [r3, #4]!	@ zero_extendqisi2
 7625              	.LVL641:
 7626              	.L924:
 373:src/keys.c    **** #else
 7627              		.loc 1 373 73 view .LVU2320
 7628              	.LBE850:
 422:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 7629              		.loc 1 422 5 is_stmt 1 view .LVU2321
 421:src/keys.c    ****     if (cp->key == c) {
 7630              		.loc 1 421 24 view .LVU2322
 421:src/keys.c    ****     if (cp->key == c) {
 7631              		.loc 1 421 15 view .LVU2323
 422:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 7632              		.loc 1 422 8 is_stmt 0 view .LVU2324
 7633 0272 8C42     		cmp	r4, r1
 7634 0274 00F0DC84 		beq	.L1334
 421:src/keys.c    ****     if (cp->key == c) {
 7635              		.loc 1 421 3 view .LVU2325
 7636 0278 8342     		cmp	r3, r0
 7637 027a F8D1     		bne	.L1335
 7638              	.LVL642:
 7639              	.L923:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7640              		.loc 1 427 3 is_stmt 1 view .LVU2326
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7641              		.loc 1 427 6 is_stmt 0 view .LVU2327
 7642 027c 1307     		lsls	r3, r2, #28
 7643 027e 00F1E184 		bmi	.L929
 7644              	.LVL643:
 7645              	.L927:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7646              		.loc 1 427 6 view .LVU2328
 7647              	.LBE855:
 7648              	.LBE868:
3339:src/keys.c    **** 		return process_labellist((const keycode)c);
 7649              		.loc 1 3339 2 is_stmt 1 view .LVU2329
3339:src/keys.c    **** 		return process_labellist((const keycode)c);
 7650              		.loc 1 3339 6 is_stmt 0 view .LVU2330
 7651 0282 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3339:src/keys.c    **** 		return process_labellist((const keycode)c);
 7652              		.loc 1 3339 5 view .LVU2331
 7653 0286 5907     		lsls	r1, r3, #29
 7654 0288 00F19485 		bmi	.L1336
3342:src/keys.c    **** 		return process_registerlist((const keycode)c);
 7655              		.loc 1 3342 2 is_stmt 1 view .LVU2332
3342:src/keys.c    **** 		return process_registerlist((const keycode)c);
 7656              		.loc 1 3342 5 is_stmt 0 view .LVU2333
 7657 028c 1807     		lsls	r0, r3, #28
ARM GAS  /tmp/cc8lpfL1.s 			page 237


 7658 028e 00F1E586 		bmi	.L1337
3345:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 7659              		.loc 1 3345 2 is_stmt 1 view .LVU2334
3345:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 7660              		.loc 1 3345 5 is_stmt 0 view .LVU2335
 7661 0292 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
 7662 0296 002B     		cmp	r3, #0
 7663 0298 40F09887 		bne	.L1338
3348:src/keys.c    **** #ifndef INFRARED
 7664              		.loc 1 3348 2 is_stmt 1 view .LVU2336
3348:src/keys.c    **** #ifndef INFRARED
 7665              		.loc 1 3348 6 is_stmt 0 view .LVU2337
 7666 029c 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3348:src/keys.c    **** #ifndef INFRARED
 7667              		.loc 1 3348 5 view .LVU2338
 7668 02a0 1907     		lsls	r1, r3, #28
 7669 02a2 00F1E287 		bmi	.L1339
3361:src/keys.c    **** 		return process_c_lock ((const keycode)c);
 7670              		.loc 1 3361 2 is_stmt 1 view .LVU2339
3361:src/keys.c    **** 		return process_c_lock ((const keycode)c);
 7671              		.loc 1 3361 6 is_stmt 0 view .LVU2340
 7672 02a6 DAF80030 		ldr	r3, [r10]
 7673 02aa 93F8AC37 		ldrb	r3, [r3, #1964]	@ zero_extendqisi2
3361:src/keys.c    **** 		return process_c_lock ((const keycode)c);
 7674              		.loc 1 3361 5 view .LVU2341
 7675 02ae 03F04103 		and	r3, r3, #65
 7676 02b2 412B     		cmp	r3, #65
 7677 02b4 01F05181 		beq	.L1340
3365:src/keys.c    **** 		return process_cmplx((const keycode)c);
 7678              		.loc 1 3365 2 is_stmt 1 view .LVU2342
3365:src/keys.c    **** 		return process_cmplx((const keycode)c);
 7679              		.loc 1 3365 5 is_stmt 0 view .LVU2343
 7680 02b8 9207     		lsls	r2, r2, #30
 7681 02ba 01F1A580 		bmi	.L1301
3368:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 7682              		.loc 1 3368 3 is_stmt 1 view .LVU2344
3368:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 7683              		.loc 1 3368 24 is_stmt 0 view .LVU2345
 7684 02be 0BF1FF33 		add	r3, fp, #-1
3368:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 7685              		.loc 1 3368 6 view .LVU2346
 7686 02c2 DBB2     		uxtb	r3, r3
 7687 02c4 012B     		cmp	r3, #1
 7688 02c6 41F2C681 		bls	.L1298
3370:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 7689              		.loc 1 3370 3 is_stmt 1 view .LVU2347
3370:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 7690              		.loc 1 3370 6 is_stmt 0 view .LVU2348
 7691 02ca BBF1030F 		cmp	fp, #3
3371:src/keys.c    **** 		// print_debug (3, c);
 7692              		.loc 1 3371 11 view .LVU2349
 7693 02ce 2046     		mov	r0, r4
3370:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 7694              		.loc 1 3370 6 view .LVU2350
 7695 02d0 01F00181 		beq	.L1341
 7696              	.LVL644:
 7697              	.L1088:
ARM GAS  /tmp/cc8lpfL1.s 			page 238


3373:src/keys.c    **** 	}
 7698              		.loc 1 3373 3 is_stmt 1 view .LVU2351
3373:src/keys.c    **** 	}
 7699              		.loc 1 3373 10 is_stmt 0 view .LVU2352
 7700 02d4 FFF7FEFF 		bl	process_normal
 7701              	.LVL645:
 7702 02d8 0446     		mov	r4, r0
 7703 02da 7FE0     		b	.L837
 7704              	.L1402:
 7705              		.align	2
 7706              	.L1401:
 7707 02dc 00000000 		.word	.LANCHOR18
 7708 02e0 00000000 		.word	Pause
 7709 02e4 00000000 		.word	JustStopped
 7710 02e8 00000000 		.word	OpCode
 7711 02ec 00000000 		.word	GoFast
 7712 02f0 00000000 		.word	Running
 7713 02f4 00000000 		.word	ShowRPN
 7714 02f8 00000000 		.word	JustDisplayed
 7715 02fc 00000000 		.word	StateWhileOn
 7716 0300 00000000 		.word	OpCodeDisplayPending
 7717 0304 00000000 		.word	DispMsg
 7718 0308 00000000 		.word	.LC0
 7719 030c 00080800 		.word	526336
 7720 0310 00000000 		.word	.LANCHOR17
 7721 0314 00000000 		.word	WasDataEntry
 7722 0318 00000000 		.word	main_ram
 7723              	.LVL646:
 7724              	.L808:
3222:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 7725              		.loc 1 3222 5 is_stmt 1 view .LVU2353
3222:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 7726              		.loc 1 3222 8 is_stmt 0 view .LVU2354
 7727 031c 242C     		cmp	r4, #36
 7728 031e 00F0A380 		beq	.L810
3222:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 7729              		.loc 1 3222 18 view .LVU2355
 7730 0322 272C     		cmp	r4, #39
 7731 0324 00F0A080 		beq	.L810
3232:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 7732              		.loc 1 3232 5 is_stmt 1 view .LVU2356
3232:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 7733              		.loc 1 3232 8 is_stmt 0 view .LVU2357
 7734 0328 622C     		cmp	r4, #98
 7735 032a 07D0     		beq	.L813
3233:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7736              		.loc 1 3233 7 is_stmt 1 view .LVU2358
3233:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7737              		.loc 1 3233 15 is_stmt 0 view .LVU2359
 7738 032c BF4B     		ldr	r3, .L1403
3235:src/keys.c    ****     }
 7739              		.loc 1 3235 14 view .LVU2360
 7740 032e C04A     		ldr	r2, .L1403+4
3233:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7741              		.loc 1 3233 17 view .LVU2361
 7742 0330 0134     		adds	r4, r4, #1
 7743              	.LVL647:
ARM GAS  /tmp/cc8lpfL1.s 			page 239


3235:src/keys.c    ****     }
 7744              		.loc 1 3235 14 view .LVU2362
 7745 0332 0121     		movs	r1, #1
3233:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7746              		.loc 1 3233 15 view .LVU2363
 7747 0334 DC74     		strb	r4, [r3, #19]
3234:src/keys.c    ****       GoFast = 1;
 7748              		.loc 1 3234 7 is_stmt 1 view .LVU2364
3234:src/keys.c    ****       GoFast = 1;
 7749              		.loc 1 3234 13 is_stmt 0 view .LVU2365
 7750 0336 0023     		movs	r3, #0
3235:src/keys.c    ****     }
 7751              		.loc 1 3235 14 view .LVU2366
 7752 0338 1160     		str	r1, [r2]
3234:src/keys.c    ****       GoFast = 1;
 7753              		.loc 1 3234 13 view .LVU2367
 7754 033a 3B70     		strb	r3, [r7]
3235:src/keys.c    ****     }
 7755              		.loc 1 3235 7 is_stmt 1 view .LVU2368
 7756              	.LVL648:
 7757              	.L813:
3235:src/keys.c    ****     }
 7758              		.loc 1 3235 7 is_stmt 0 view .LVU2369
 7759              	.LBE844:
 7760              	.LBE843:
3636:src/keys.c    ****       break;
 7761              		.loc 1 3636 7 is_stmt 1 view .LVU2370
 7762 033c FFF7FEFF 		bl	xeqprog
 7763              	.LVL649:
3637:src/keys.c    **** 
 7764              		.loc 1 3637 7 view .LVU2371
 7765 0340 3368     		ldr	r3, [r6]
3409:src/keys.c    ****   //print_debug(60,c);
 7766              		.loc 1 3409 7 is_stmt 0 view .LVU2372
 7767 0342 0025     		movs	r5, #0
3637:src/keys.c    **** 
 7768              		.loc 1 3637 7 view .LVU2373
 7769 0344 3124     		movs	r4, #49
 7770              	.LVL650:
3677:src/keys.c    **** #ifndef CONSOLE
 7771              		.loc 1 3677 3 is_stmt 1 view .LVU2374
3677:src/keys.c    **** #ifndef CONSOLE
 7772              		.loc 1 3677 6 is_stmt 0 view .LVU2375
 7773 0346 002B     		cmp	r3, #0
 7774 0348 3FF4B7AE 		beq	.L823
 7775              	.L1308:
3677:src/keys.c    **** #ifndef CONSOLE
 7776              		.loc 1 3677 6 view .LVU2376
 7777 034c B94E     		ldr	r6, .L1403+8
3690:src/keys.c    ****   watchdog();
 7778              		.loc 1 3690 3 is_stmt 1 view .LVU2377
3690:src/keys.c    ****   watchdog();
 7779              		.loc 1 3690 17 is_stmt 0 view .LVU2378
 7780 034e 0023     		movs	r3, #0
 7781 0350 3360     		str	r3, [r6]
3691:src/keys.c    **** }
 7782              		.loc 1 3691 13 is_stmt 1 view .LVU2379
ARM GAS  /tmp/cc8lpfL1.s 			page 240


 7783 0352 D5E6     		b	.L772
 7784              	.LVL651:
 7785              	.L1310:
3421:src/keys.c    ****     }
 7786              		.loc 1 3421 7 view .LVU2380
3571:src/keys.c    **** #ifdef DM42
 7787              		.loc 1 3571 15 is_stmt 0 view .LVU2381
 7788 0354 B84E     		ldr	r6, .L1403+12
3571:src/keys.c    **** #ifdef DM42
 7789              		.loc 1 3571 13 view .LVU2382
 7790 0356 B949     		ldr	r1, .L1403+16
3571:src/keys.c    **** #ifdef DM42
 7791              		.loc 1 3571 15 view .LVU2383
 7792 0358 3368     		ldr	r3, [r6]
3421:src/keys.c    ****     }
 7793              		.loc 1 3421 14 view .LVU2384
 7794 035a B94A     		ldr	r2, .L1403+20
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7795              		.loc 1 3570 18 view .LVU2385
 7796 035c DFF8FC92 		ldr	r9, .L1403+48
3571:src/keys.c    **** #ifdef DM42
 7797              		.loc 1 3571 15 view .LVU2386
 7798 0360 B3FA83F3 		clz	r3, r3
 7799 0364 5B09     		lsrs	r3, r3, #5
3571:src/keys.c    **** #ifdef DM42
 7800              		.loc 1 3571 13 view .LVU2387
 7801 0366 0B60     		str	r3, [r1]
3421:src/keys.c    ****     }
 7802              		.loc 1 3421 14 view .LVU2388
 7803 0368 0023     		movs	r3, #0
 7804 036a 1360     		str	r3, [r2]
3518:src/keys.c    ****     {
 7805              		.loc 1 3518 3 is_stmt 1 view .LVU2389
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7806              		.loc 1 3570 5 view .LVU2390
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7807              		.loc 1 3570 18 is_stmt 0 view .LVU2391
 7808 036c C9F80030 		str	r3, [r9]
3571:src/keys.c    **** #ifdef DM42
 7809              		.loc 1 3571 5 is_stmt 1 view .LVU2392
3573:src/keys.c    ****       c = process(c);
 7810              		.loc 1 3573 5 view .LVU2393
 7811 0370 FDE6     		b	.L775
 7812              	.L793:
3573:src/keys.c    ****       c = process(c);
 7813              		.loc 1 3573 5 is_stmt 0 view .LVU2394
 7814 0372 B14E     		ldr	r6, .L1403+12
3571:src/keys.c    **** #ifdef DM42
 7815              		.loc 1 3571 13 view .LVU2395
 7816 0374 B149     		ldr	r1, .L1403+16
 7817 0376 3368     		ldr	r3, [r6]
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7818              		.loc 1 3570 5 is_stmt 1 view .LVU2396
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7819              		.loc 1 3570 18 is_stmt 0 view .LVU2397
 7820 0378 DFF8E092 		ldr	r9, .L1403+48
3571:src/keys.c    **** #ifdef DM42
ARM GAS  /tmp/cc8lpfL1.s 			page 241


 7821              		.loc 1 3571 15 view .LVU2398
 7822 037c B3FA83F2 		clz	r2, r3
 7823 0380 5209     		lsrs	r2, r2, #5
3573:src/keys.c    ****       c = process(c);
 7824              		.loc 1 3573 8 view .LVU2399
 7825 0382 342C     		cmp	r4, #52
3571:src/keys.c    **** #ifdef DM42
 7826              		.loc 1 3571 13 view .LVU2400
 7827 0384 0A60     		str	r2, [r1]
3570:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7828              		.loc 1 3570 18 view .LVU2401
 7829 0386 C9F80000 		str	r0, [r9]
3571:src/keys.c    **** #ifdef DM42
 7830              		.loc 1 3571 5 is_stmt 1 view .LVU2402
3573:src/keys.c    ****       c = process(c);
 7831              		.loc 1 3573 5 view .LVU2403
3573:src/keys.c    ****       c = process(c);
 7832              		.loc 1 3573 8 is_stmt 0 view .LVU2404
 7833 038a 7FF4F0AE 		bne	.L775
3579:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7834              		.loc 1 3579 7 is_stmt 1 view .LVU2405
3579:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7835              		.loc 1 3579 11 is_stmt 0 view .LVU2406
 7836 038e AD4A     		ldr	r2, .L1403+24
 7837 0390 1568     		ldr	r5, [r2]
3579:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7838              		.loc 1 3579 10 view .LVU2407
 7839 0392 15F47042 		ands	r2, r5, #61440
 7840 0396 1BD0     		beq	.L1089
3579:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7841              		.loc 1 3579 11 discriminator 1 view .LVU2408
 7842 0398 B2F5704F 		cmp	r2, #61440
 7843 039c 3DD0     		beq	.L1090
 7844              	.LBB1472:
3580:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 7845              		.loc 1 3580 2 is_stmt 1 view .LVU2409
3580:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 7846              		.loc 1 3580 28 is_stmt 0 view .LVU2410
 7847 039e C5F30722 		ubfx	r2, r5, #8, #8
 7848 03a2 A2F12004 		sub	r4, r2, #32
 7849              	.LVL652:
3580:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 7850              		.loc 1 3580 28 view .LVU2411
 7851 03a6 E4B2     		uxtb	r4, r4
 7852              	.LVL653:
3581:src/keys.c    **** 	  c = nd_opcode;
 7853              		.loc 1 3581 2 is_stmt 1 view .LVU2412
3581:src/keys.c    **** 	  c = nd_opcode;
 7854              		.loc 1 3581 5 is_stmt 0 view .LVU2413
 7855 03a8 012C     		cmp	r4, #1
 7856 03aa 3AD9     		bls	.L1096
3581:src/keys.c    **** 	  c = nd_opcode;
 7857              		.loc 1 3581 53 discriminator 1 view .LVU2414
 7858 03ac 6C2C     		cmp	r4, #108
 7859 03ae 38D0     		beq	.L1096
3581:src/keys.c    **** 	  c = nd_opcode;
 7860              		.loc 1 3581 74 discriminator 2 view .LVU2415
ARM GAS  /tmp/cc8lpfL1.s 			page 242


 7861 03b0 242C     		cmp	r4, #36
 7862 03b2 36D0     		beq	.L1096
3583:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 7863              		.loc 1 3583 7 is_stmt 1 view .LVU2416
3583:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 7864              		.loc 1 3583 32 is_stmt 0 view .LVU2417
 7865 03b4 A4F12D01 		sub	r1, r4, #45
3583:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 7866              		.loc 1 3583 10 view .LVU2418
 7867 03b8 0629     		cmp	r1, #6
 7868 03ba 00F2C281 		bhi	.L1093
3584:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7869              		.loc 1 3584 4 is_stmt 1 view .LVU2419
3584:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7870              		.loc 1 3584 25 is_stmt 0 view .LVU2420
 7871 03be 4D3A     		subs	r2, r2, #77
3584:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7872              		.loc 1 3584 16 view .LVU2421
 7873 03c0 88F80F20 		strb	r2, [r8, #15]
3585:src/keys.c    **** 	}
 7874              		.loc 1 3585 4 is_stmt 1 view .LVU2422
 7875              	.LVL654:
3585:src/keys.c    **** 	}
 7876              		.loc 1 3585 4 is_stmt 0 view .LVU2423
 7877              	.LBE1472:
3614:src/keys.c    ****     case STATE_SST:
 7878              		.loc 1 3614 5 is_stmt 1 view .LVU2424
3409:src/keys.c    ****   //print_debug(60,c);
 7879              		.loc 1 3409 7 is_stmt 0 view .LVU2425
 7880 03c4 0546     		mov	r5, r0
 7881              	.LBB1475:
3585:src/keys.c    **** 	}
 7882              		.loc 1 3585 6 view .LVU2426
 7883 03c6 3324     		movs	r4, #51
 7884              	.LVL655:
3585:src/keys.c    **** 	}
 7885              		.loc 1 3585 6 view .LVU2427
 7886 03c8 74E6     		b	.L803
 7887              	.LVL656:
 7888              	.L1309:
3585:src/keys.c    **** 	}
 7889              		.loc 1 3585 6 view .LVU2428
 7890              	.LBE1475:
3416:src/keys.c    ****     }
 7891              		.loc 1 3416 7 is_stmt 1 view .LVU2429
 7892 03ca FFF7FEFF 		bl	xeq_xrom
 7893              	.LVL657:
3416:src/keys.c    ****     }
 7894              		.loc 1 3416 7 is_stmt 0 view .LVU2430
 7895 03ce 23E6     		b	.L773
 7896              	.L1089:
3608:src/keys.c    ****       }      
 7897              		.loc 1 3608 2 is_stmt 1 view .LVU2431
 7898              	.LBB1476:
 7899              	.LBB1477:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 7900              		.loc 1 715 5 is_stmt 0 view .LVU2432
ARM GAS  /tmp/cc8lpfL1.s 			page 243


 7901 03d0 C5F30723 		ubfx	r3, r5, #8, #8
 7902 03d4 012B     		cmp	r3, #1
 7903              	.LBE1477:
 7904              	.LBE1476:
3608:src/keys.c    ****       }      
 7905              		.loc 1 3608 6 view .LVU2433
 7906 03d6 2C46     		mov	r4, r5
 7907              	.LVL658:
 7908              	.LBB1480:
 7909              	.LBI1476:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 7910              		.loc 1 714 12 is_stmt 1 view .LVU2434
 7911              	.LBB1478:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 7912              		.loc 1 715 2 view .LVU2435
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 7913              		.loc 1 715 5 is_stmt 0 view .LVU2436
 7914 03d8 00F01E81 		beq	.L1299
 7915              	.LVL659:
 7916              	.L837:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 7917              		.loc 1 715 5 view .LVU2437
 7918              	.LBE1478:
 7919              	.LBE1480:
3614:src/keys.c    ****     case STATE_SST:
 7920              		.loc 1 3614 5 is_stmt 1 view .LVU2438
 7921 03dc A4F12B03 		sub	r3, r4, #43
 7922 03e0 082B     		cmp	r3, #8
 7923 03e2 00F2D380 		bhi	.L1098
 7924 03e6 01A2     		adr	r2, .L1100
 7925 03e8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7926              		.p2align 2
 7927              	.L1100:
 7928 03ec 47040000 		.word	.L1101+1
 7929 03f0 47040000 		.word	.L1101+1
 7930 03f4 8D050000 		.word	.L1098+1
 7931 03f8 A3040000 		.word	.L1027+1
 7932 03fc D1040000 		.word	.L1023+1
 7933 0400 B7040000 		.word	.L1020+1
 7934 0404 3D030000 		.word	.L813+1
 7935 0408 41040000 		.word	.L1303+1
 7936 040c 41040000 		.word	.L1303+1
 7937              		.p2align 1
 7938              	.L1318:
3485:src/keys.c    ****       return;
 7939              		.loc 1 3485 21 is_stmt 0 discriminator 1 view .LVU2439
 7940 0410 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
3485:src/keys.c    ****       return;
 7941              		.loc 1 3485 18 discriminator 1 view .LVU2440
 7942 0412 002A     		cmp	r2, #0
 7943 0414 7FF4A1AE 		bne	.L789
 7944 0418 72E6     		b	.L772
 7945              	.L1090:
3595:src/keys.c    **** 	if ( (nd_opcode & 0xffff00ff) == 0 ) { // no argument
 7946              		.loc 1 3595 12 is_stmt 1 view .LVU2441
3596:src/keys.c    **** 	  init_arg(opDBL(nd_opcode));
 7947              		.loc 1 3596 2 view .LVU2442
ARM GAS  /tmp/cc8lpfL1.s 			page 244


3596:src/keys.c    **** 	  init_arg(opDBL(nd_opcode));
 7948              		.loc 1 3596 5 is_stmt 0 view .LVU2443
 7949 041a 35F47F43 		bics	r3, r5, #65280
 7950 041e 00F09080 		beq	.L1342
 7951              	.LVL660:
 7952              	.L1096:
3604:src/keys.c    **** 	}
 7953              		.loc 1 3604 4 is_stmt 1 view .LVU2444
 7954 0422 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
3604:src/keys.c    **** 	}
 7955              		.loc 1 3604 6 is_stmt 0 view .LVU2445
 7956 0426 2C46     		mov	r4, r5
 7957              	.LVL661:
 7958              	.L864:
3650:src/keys.c    **** 	NonProgrammable = 0;
 7959              		.loc 1 3650 7 is_stmt 1 view .LVU2446
3650:src/keys.c    **** 	NonProgrammable = 0;
 7960              		.loc 1 3650 10 is_stmt 0 view .LVU2447
 7961 0428 11F04001 		ands	r1, r1, #64
 7962 042c 40F02B81 		bne	.L1343
3650:src/keys.c    **** 	NonProgrammable = 0;
 7963              		.loc 1 3650 26 view .LVU2448
 7964 0430 854B     		ldr	r3, .L1403+28
 7965 0432 1A68     		ldr	r2, [r3]
 7966 0434 002A     		cmp	r2, #0
 7967 0436 41F01B84 		bne	.L1344
 7968              	.LVL662:
 7969              	.L1111:
3673:src/keys.c    ****       }
 7970              		.loc 1 3673 2 is_stmt 1 view .LVU2449
 7971 043a 2846     		mov	r0, r5
 7972 043c FFF7FEFF 		bl	stoprog
 7973              	.LVL663:
 7974              	.L1303:
 7975 0440 3368     		ldr	r3, [r6]
3409:src/keys.c    ****   //print_debug(60,c);
 7976              		.loc 1 3409 7 is_stmt 0 view .LVU2450
 7977 0442 0025     		movs	r5, #0
 7978 0444 36E6     		b	.L803
 7979              	.LVL664:
 7980              	.L1101:
3641:src/keys.c    **** 	set_window(c);
 7981              		.loc 1 3641 7 is_stmt 1 view .LVU2451
3641:src/keys.c    **** 	set_window(c);
 7982              		.loc 1 3641 12 is_stmt 0 view .LVU2452
 7983 0446 FFF7FEFF 		bl	is_bad_cmdline
 7984              	.LVL665:
3641:src/keys.c    **** 	set_window(c);
 7985              		.loc 1 3641 10 view .LVU2453
 7986 044a 0546     		mov	r5, r0
 7987 044c 0028     		cmp	r0, #0
 7988 044e F7D1     		bne	.L1303
3642:src/keys.c    ****       break;
 7989              		.loc 1 3642 2 is_stmt 1 view .LVU2454
 7990 0450 2046     		mov	r0, r4
 7991 0452 FFF7FEFF 		bl	set_window
 7992              	.LVL666:
ARM GAS  /tmp/cc8lpfL1.s 			page 245


 7993 0456 3368     		ldr	r3, [r6]
 7994 0458 2CE6     		b	.L803
 7995              	.L1317:
3477:src/keys.c    ****       JustStopped = 0;
 7996              		.loc 1 3477 25 is_stmt 0 discriminator 1 view .LVU2455
 7997 045a FFF7FEFF 		bl	is_key_pressed
 7998              	.LVL667:
3477:src/keys.c    ****       JustStopped = 0;
 7999              		.loc 1 3477 21 discriminator 1 view .LVU2456
 8000 045e 0028     		cmp	r0, #0
 8001 0460 7FF476AE 		bne	.L787
3478:src/keys.c    ****     }
 8002              		.loc 1 3478 7 is_stmt 1 view .LVU2457
3478:src/keys.c    ****     }
 8003              		.loc 1 3478 19 is_stmt 0 view .LVU2458
 8004 0464 2860     		str	r0, [r5]
 8005 0466 73E6     		b	.L787
 8006              	.LVL668:
 8007              	.L810:
 8008              	.LBB1481:
 8009              	.LBB1417:
3223:src/keys.c    **** 	set_pc(0);
 8010              		.loc 1 3223 7 is_stmt 1 view .LVU2459
3223:src/keys.c    **** 	set_pc(0);
 8011              		.loc 1 3223 11 is_stmt 0 view .LVU2460
 8012 0468 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
3223:src/keys.c    **** 	set_pc(0);
 8013              		.loc 1 3223 10 view .LVU2461
 8014 046a 4BB1     		cbz	r3, .L812
3223:src/keys.c    **** 	set_pc(0);
 8015              		.loc 1 3223 20 view .LVU2462
 8016 046c 774B     		ldr	r3, .L1403+32
 8017 046e 1B68     		ldr	r3, [r3]
 8018 0470 B3F8E037 		ldrh	r3, [r3, #2016]
3223:src/keys.c    **** 	set_pc(0);
 8019              		.loc 1 3223 17 view .LVU2463
 8020 0474 9B0B     		lsrs	r3, r3, #14
 8021 0476 032B     		cmp	r3, #3
 8022 0478 02D1     		bne	.L812
3224:src/keys.c    ****       Pause = 0;
 8023              		.loc 1 3224 2 is_stmt 1 view .LVU2464
 8024 047a 0020     		movs	r0, #0
 8025 047c FFF7FEFF 		bl	set_pc
 8026              	.LVL669:
 8027              	.L812:
3225:src/keys.c    ****       xeq_xrom();
 8028              		.loc 1 3225 7 view .LVU2465
3225:src/keys.c    ****       xeq_xrom();
 8029              		.loc 1 3225 13 is_stmt 0 view .LVU2466
 8030 0480 0025     		movs	r5, #0
 8031 0482 3D70     		strb	r5, [r7]
3226:src/keys.c    ****       set_running_off();
 8032              		.loc 1 3226 7 is_stmt 1 view .LVU2467
 8033 0484 FFF7FEFF 		bl	xeq_xrom
 8034              	.LVL670:
3227:src/keys.c    ****       DispMsg = "Stopped";
 8035              		.loc 1 3227 7 view .LVU2468
ARM GAS  /tmp/cc8lpfL1.s 			page 246


 8036 0488 FFF7FEFF 		bl	set_running_off
 8037              	.LVL671:
3228:src/keys.c    ****       State2.disp_freeze = 0;
 8038              		.loc 1 3228 7 view .LVU2469
3229:src/keys.c    ****       return STATE_UNFINISHED;
 8039              		.loc 1 3229 26 is_stmt 0 view .LVU2470
 8040 048c 674A     		ldr	r2, .L1403
3228:src/keys.c    ****       State2.disp_freeze = 0;
 8041              		.loc 1 3228 15 view .LVU2471
 8042 048e 7048     		ldr	r0, .L1403+36
3229:src/keys.c    ****       return STATE_UNFINISHED;
 8043              		.loc 1 3229 26 view .LVU2472
 8044 0490 D17D     		ldrb	r1, [r2, #23]	@ zero_extendqisi2
3228:src/keys.c    ****       State2.disp_freeze = 0;
 8045              		.loc 1 3228 15 view .LVU2473
 8046 0492 704C     		ldr	r4, .L1403+40
 8047              	.LVL672:
3228:src/keys.c    ****       State2.disp_freeze = 0;
 8048              		.loc 1 3228 15 view .LVU2474
 8049 0494 0460     		str	r4, [r0]
3229:src/keys.c    ****       return STATE_UNFINISHED;
 8050              		.loc 1 3229 7 is_stmt 1 view .LVU2475
3229:src/keys.c    ****       return STATE_UNFINISHED;
 8051              		.loc 1 3229 26 is_stmt 0 view .LVU2476
 8052 0496 65F30411 		bfi	r1, r5, #4, #1
 8053 049a 3368     		ldr	r3, [r6]
 8054 049c D175     		strb	r1, [r2, #23]
3230:src/keys.c    ****     }
 8055              		.loc 1 3230 7 is_stmt 1 view .LVU2477
3230:src/keys.c    ****     }
 8056              		.loc 1 3230 14 is_stmt 0 view .LVU2478
 8057 049e 3324     		movs	r4, #51
 8058 04a0 08E6     		b	.L803
 8059              	.LVL673:
 8060              	.L1027:
3230:src/keys.c    ****     }
 8061              		.loc 1 3230 14 view .LVU2479
 8062              	.LBE1417:
 8063              	.LBE1481:
3616:src/keys.c    ****       OpCodeDisplayPending = 0;
 8064              		.loc 1 3616 7 is_stmt 1 view .LVU2480
3616:src/keys.c    ****       OpCodeDisplayPending = 0;
 8065              		.loc 1 3616 14 is_stmt 0 view .LVU2481
 8066 04a2 674A     		ldr	r2, .L1403+20
3617:src/keys.c    ****       xeq_sst_bst(0);
 8067              		.loc 1 3617 28 view .LVU2482
 8068 04a4 6C4B     		ldr	r3, .L1403+44
 8069 04a6 0020     		movs	r0, #0
3616:src/keys.c    ****       OpCodeDisplayPending = 0;
 8070              		.loc 1 3616 14 view .LVU2483
 8071 04a8 2E24     		movs	r4, #46
 8072 04aa 1460     		str	r4, [r2]
3617:src/keys.c    ****       xeq_sst_bst(0);
 8073              		.loc 1 3617 7 is_stmt 1 view .LVU2484
3617:src/keys.c    ****       xeq_sst_bst(0);
 8074              		.loc 1 3617 28 is_stmt 0 view .LVU2485
 8075 04ac 1860     		str	r0, [r3]
ARM GAS  /tmp/cc8lpfL1.s 			page 247


3618:src/keys.c    ****       break;
 8076              		.loc 1 3618 7 is_stmt 1 view .LVU2486
3409:src/keys.c    ****   //print_debug(60,c);
 8077              		.loc 1 3409 7 is_stmt 0 view .LVU2487
 8078 04ae 0546     		mov	r5, r0
3618:src/keys.c    ****       break;
 8079              		.loc 1 3618 7 view .LVU2488
 8080 04b0 FFF7FEFF 		bl	xeq_sst_bst
 8081              	.LVL674:
 8082 04b4 FDE5     		b	.L1302
 8083              	.L1020:
3626:src/keys.c    **** 	delprog();
 8084              		.loc 1 3626 7 is_stmt 1 view .LVU2489
3626:src/keys.c    **** 	delprog();
 8085              		.loc 1 3626 11 is_stmt 0 view .LVU2490
 8086 04b6 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3626:src/keys.c    **** 	delprog();
 8087              		.loc 1 3626 10 view .LVU2491
 8088 04ba 13F04005 		ands	r5, r3, #64
 8089 04be 00F0B080 		beq	.L1345
3628:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 8090              		.loc 1 3628 12 is_stmt 1 view .LVU2492
3628:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 8091              		.loc 1 3628 15 is_stmt 0 view .LVU2493
 8092 04c2 13F00805 		ands	r5, r3, #8
 8093 04c6 40F08480 		bne	.L1103
 8094              	.L1304:
 8095 04ca 3368     		ldr	r3, [r6]
 8096              	.LBB1482:
3631:src/keys.c    ****       }
 8097              		.loc 1 3631 9 view .LVU2494
 8098 04cc 3024     		movs	r4, #48
 8099 04ce F1E5     		b	.L803
 8100              	.L1023:
 8101              	.LBE1482:
3622:src/keys.c    ****       break;
 8102              		.loc 1 3622 7 is_stmt 1 view .LVU2495
 8103 04d0 4FF0FF30 		mov	r0, #-1
 8104 04d4 FFF7FEFF 		bl	xeq_sst_bst
 8105              	.LVL675:
3623:src/keys.c    **** 
 8106              		.loc 1 3623 7 view .LVU2496
3409:src/keys.c    ****   //print_debug(60,c);
 8107              		.loc 1 3409 7 is_stmt 0 view .LVU2497
 8108 04d8 0025     		movs	r5, #0
 8109 04da 3368     		ldr	r3, [r6]
3623:src/keys.c    **** 
 8110              		.loc 1 3623 7 view .LVU2498
 8111 04dc 2F24     		movs	r4, #47
 8112 04de E9E5     		b	.L803
 8113              	.LVL676:
 8114              	.L1313:
3623:src/keys.c    **** 
 8115              		.loc 1 3623 7 view .LVU2499
 8116 04e0 554E     		ldr	r6, .L1403+12
 8117 04e2 3368     		ldr	r3, [r6]
 8118 04e4 39E6     		b	.L789
ARM GAS  /tmp/cc8lpfL1.s 			page 248


 8119              	.L1312:
3499:src/keys.c    ****       finish_RPN(); // RPN
 8120              		.loc 1 3499 7 is_stmt 1 view .LVU2500
 8121 04e6 8D20     		movs	r0, #141
 8122 04e8 FFF7FEFF 		bl	clr_dot
 8123              	.LVL677:
3500:src/keys.c    ****     }
 8124              		.loc 1 3500 7 view .LVU2501
 8125 04ec FFF7FEFF 		bl	finish_RPN
 8126              	.LVL678:
 8127 04f0 A9E5     		b	.L791
 8128              	.L802:
3562:src/keys.c    ****     }
 8129              		.loc 1 3562 7 view .LVU2502
 8130 04f2 FFF7FEFF 		bl	finish_RPN
 8131              	.LVL679:
3409:src/keys.c    ****   //print_debug(60,c);
 8132              		.loc 1 3409 7 is_stmt 0 view .LVU2503
 8133 04f6 0025     		movs	r5, #0
 8134 04f8 3368     		ldr	r3, [r6]
 8135 04fa DBE5     		b	.L803
 8136              	.L794:
3543:src/keys.c    **** #ifndef CONSOLE
 8137              		.loc 1 3543 7 is_stmt 1 view .LVU2504
 8138 04fc 4F4B     		ldr	r3, .L1403+16
 8139 04fe 8D20     		movs	r0, #141
 8140 0500 1968     		ldr	r1, [r3]
 8141 0502 FFF7FEFF 		bl	dot
 8142              	.LVL680:
3545:src/keys.c    **** 	if (!WasDataEntry) {
 8143              		.loc 1 3545 7 view .LVU2505
3545:src/keys.c    **** 	if (!WasDataEntry) {
 8144              		.loc 1 3545 11 is_stmt 0 view .LVU2506
 8145 0506 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3545:src/keys.c    **** 	if (!WasDataEntry) {
 8146              		.loc 1 3545 10 view .LVU2507
 8147 050a 9806     		lsls	r0, r3, #26
 8148 050c 3FF5F8AD 		bmi	.L772
3546:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 8149              		.loc 1 3546 2 is_stmt 1 view .LVU2508
3546:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 8150              		.loc 1 3546 6 is_stmt 0 view .LVU2509
 8151 0510 524B     		ldr	r3, .L1403+48
3546:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 8152              		.loc 1 3546 5 view .LVU2510
 8153 0512 1B68     		ldr	r3, [r3]
 8154 0514 002B     		cmp	r3, #0
 8155 0516 40F0B180 		bne	.L805
3548:src/keys.c    **** 	}
 8156              		.loc 1 3548 4 is_stmt 1 view .LVU2511
 8157              		.loc 1 3692 1 is_stmt 0 view .LVU2512
 8158 051a 03B0     		add	sp, sp, #12
 8159              		.cfi_remember_state
 8160              		.cfi_def_cfa_offset 36
 8161              		@ sp needed
 8162 051c BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8163              		.cfi_restore 14
ARM GAS  /tmp/cc8lpfL1.s 			page 249


 8164              		.cfi_restore 11
 8165              		.cfi_restore 10
 8166              		.cfi_restore 9
 8167              		.cfi_restore 8
 8168              		.cfi_restore 7
 8169              		.cfi_restore 6
 8170              		.cfi_restore 5
 8171              		.cfi_restore 4
 8172              		.cfi_def_cfa_offset 0
 8173              	.LVL681:
3548:src/keys.c    **** 	}
 8174              		.loc 1 3548 4 view .LVU2513
 8175 0520 FFF7FEBF 		b	display
 8176              	.LVL682:
 8177              	.L1314:
 8178              		.cfi_restore_state
3531:src/keys.c    ****       else {
 8179              		.loc 1 3531 2 is_stmt 1 view .LVU2514
 8180 0524 FFF7FEFF 		bl	xeq_sst_bst
 8181              	.LVL683:
 8182 0528 434E     		ldr	r6, .L1403+12
 8183 052a B9E5     		b	.L796
 8184              	.L1316:
3462:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 8185              		.loc 1 3462 28 is_stmt 0 discriminator 1 view .LVU2515
 8186 052c FFF7FEFF 		bl	shift_down
 8187              	.LVL684:
3462:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 8188              		.loc 1 3462 25 discriminator 1 view .LVU2516
 8189 0530 0028     		cmp	r0, #0
 8190 0532 3FF408AE 		beq	.L778
3464:src/keys.c    ****       }
 8191              		.loc 1 3464 2 is_stmt 1 view .LVU2517
3464:src/keys.c    ****       }
 8192              		.loc 1 3464 16 is_stmt 0 view .LVU2518
 8193 0536 3D4B     		ldr	r3, .L1403
 8194 0538 0022     		movs	r2, #0
 8195 053a 1A74     		strb	r2, [r3, #16]
 8196 053c 03E6     		b	.L778
 8197              	.L1315:
3464:src/keys.c    ****       }
 8198              		.loc 1 3464 16 view .LVU2519
 8199 053e 3E4E     		ldr	r6, .L1403+12
 8200 0540 AEE5     		b	.L796
 8201              	.L1342:
3597:src/keys.c    **** 	  State2.multi = 1;
 8202              		.loc 1 3597 4 is_stmt 1 view .LVU2520
 8203              	.LVL685:
 8204              	.LBB1483:
 8205              	.LBI1483:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 8206              		.loc 1 552 13 view .LVU2521
 8207              	.LBB1484:
 553:src/keys.c    **** 		return;
 8208              		.loc 1 553 2 view .LVU2522
 553:src/keys.c    **** 		return;
 8209              		.loc 1 553 6 is_stmt 0 view .LVU2523
ARM GAS  /tmp/cc8lpfL1.s 			page 250


 8210 0542 FFF7FEFF 		bl	is_bad_cmdline
 8211              	.LVL686:
 553:src/keys.c    **** 		return;
 8212              		.loc 1 553 5 view .LVU2524
 8213 0546 18B9     		cbnz	r0, .L1097
 8214 0548 C5F30320 		ubfx	r0, r5, #8, #4
 8215 054c FFF7FEFF 		bl	init_arg.part.0
 8216              	.LVL687:
 8217              	.L1097:
 553:src/keys.c    **** 		return;
 8218              		.loc 1 553 5 view .LVU2525
 8219              	.LBE1484:
 8220              	.LBE1483:
3598:src/keys.c    **** 	  State2.alphashift = 0;
 8221              		.loc 1 3598 4 is_stmt 1 view .LVU2526
3599:src/keys.c    **** 	  State2.rarg = 0;
 8222              		.loc 1 3599 4 view .LVU2527
3600:src/keys.c    **** 	  c = STATE_UNFINISHED;
 8223              		.loc 1 3600 4 view .LVU2528
3598:src/keys.c    **** 	  State2.alphashift = 0;
 8224              		.loc 1 3598 17 is_stmt 0 view .LVU2529
 8225 0550 D8F81420 		ldr	r2, [r8, #20]
 8226 0554 3368     		ldr	r3, [r6]
 8227 0556 22F44012 		bic	r2, r2, #3145728
 8228 055a 22F40062 		bic	r2, r2, #2048
 8229 055e 42F40062 		orr	r2, r2, #2048
 8230 0562 C8F81420 		str	r2, [r8, #20]
3601:src/keys.c    **** 	}
 8231              		.loc 1 3601 4 is_stmt 1 view .LVU2530
 8232              	.LVL688:
3614:src/keys.c    ****     case STATE_SST:
 8233              		.loc 1 3614 5 view .LVU2531
3409:src/keys.c    ****   //print_debug(60,c);
 8234              		.loc 1 3409 7 is_stmt 0 view .LVU2532
 8235 0566 0025     		movs	r5, #0
3601:src/keys.c    **** 	}
 8236              		.loc 1 3601 6 view .LVU2533
 8237 0568 3324     		movs	r4, #51
 8238 056a A3E5     		b	.L803
 8239              	.LVL689:
 8240              	.L781:
3452:src/keys.c    **** 	  /*
 8241              		.loc 1 3452 10 is_stmt 1 view .LVU2534
3452:src/keys.c    **** 	  /*
 8242              		.loc 1 3452 14 is_stmt 0 view .LVU2535
 8243 056c FFF7FEFF 		bl	keyticks
 8244              	.LVL690:
3452:src/keys.c    **** 	  /*
 8245              		.loc 1 3452 13 view .LVU2536
 8246 0570 0C28     		cmp	r0, #12
 8247 0572 7FF7E3AD 		ble	.L780
3456:src/keys.c    **** 	  message("NULL", CNULL);
 8248              		.loc 1 3456 4 is_stmt 1 view .LVU2537
3457:src/keys.c    **** 	  // Force display update on key-up
 8249              		.loc 1 3457 4 is_stmt 0 view .LVU2538
 8250 0576 3A48     		ldr	r0, .L1403+52
3456:src/keys.c    **** 	  message("NULL", CNULL);
ARM GAS  /tmp/cc8lpfL1.s 			page 251


 8251              		.loc 1 3456 11 view .LVU2539
 8252 0578 2E60     		str	r6, [r5]
3457:src/keys.c    **** 	  // Force display update on key-up
 8253              		.loc 1 3457 4 is_stmt 1 view .LVU2540
 8254 057a 3146     		mov	r1, r6
 8255 057c FFF7FEFF 		bl	message
 8256              	.LVL691:
3459:src/keys.c    **** 	}
 8257              		.loc 1 3459 4 view .LVU2541
3459:src/keys.c    **** 	}
 8258              		.loc 1 3459 21 is_stmt 0 view .LVU2542
 8259 0580 2A4B     		ldr	r3, .L1403
 8260 0582 DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 8261 0584 66F34512 		bfi	r2, r6, #5, #1
 8262 0588 DA75     		strb	r2, [r3, #23]
 8263 058a D7E5     		b	.L780
 8264              	.L1098:
3650:src/keys.c    **** 	NonProgrammable = 0;
 8265              		.loc 1 3650 7 is_stmt 1 view .LVU2543
3650:src/keys.c    **** 	NonProgrammable = 0;
 8266              		.loc 1 3650 11 is_stmt 0 view .LVU2544
 8267 058c 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3650:src/keys.c    **** 	NonProgrammable = 0;
 8268              		.loc 1 3650 10 view .LVU2545
 8269 0590 5906     		lsls	r1, r3, #25
 8270 0592 41F1D082 		bpl	.L1109
 8271 0596 2C4A     		ldr	r2, .L1403+28
 8272 0598 2546     		mov	r5, r4
 8273              	.L1110:
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8274              		.loc 1 3651 2 is_stmt 1 view .LVU2546
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8275              		.loc 1 3651 18 is_stmt 0 view .LVU2547
 8276 059a 0023     		movs	r3, #0
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8277              		.loc 1 3652 5 view .LVU2548
 8278 059c 142C     		cmp	r4, #20
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8279              		.loc 1 3651 18 view .LVU2549
 8280 059e 1360     		str	r3, [r2]
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8281              		.loc 1 3652 2 is_stmt 1 view .LVU2550
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8282              		.loc 1 3652 5 is_stmt 0 view .LVU2551
 8283 05a0 74D8     		bhi	.L1106
3653:src/keys.c    **** 	    // Data entry key
 8284              		.loc 1 3653 4 is_stmt 1 view .LVU2552
3653:src/keys.c    **** 	    // Data entry key
 8285              		.loc 1 3653 7 is_stmt 0 view .LVU2553
 8286 05a2 24B9     		cbnz	r4, .L1113
3653:src/keys.c    **** 	    // Data entry key
 8287              		.loc 1 3653 38 discriminator 1 view .LVU2554
 8288 05a4 FFF7FEFF 		bl	is_bad_cmdline
 8289              	.LVL692:
3653:src/keys.c    **** 	    // Data entry key
 8290              		.loc 1 3653 34 discriminator 1 view .LVU2555
 8291 05a8 0028     		cmp	r0, #0
ARM GAS  /tmp/cc8lpfL1.s 			page 252


 8292 05aa 7FF449AF 		bne	.L1303
 8293              	.L1113:
3656:src/keys.c    **** #endif
 8294              		.loc 1 3656 6 is_stmt 1 view .LVU2556
3658:src/keys.c    **** 	    xeq(c);
 8295              		.loc 1 3658 37 is_stmt 0 view .LVU2557
 8296 05ae 98F81C50 		ldrb	r5, [r8, #28]	@ zero_extendqisi2
3656:src/keys.c    **** #endif
 8297              		.loc 1 3656 19 view .LVU2558
 8298 05b2 0123     		movs	r3, #1
3659:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 8299              		.loc 1 3659 6 view .LVU2559
 8300 05b4 2046     		mov	r0, r4
3656:src/keys.c    **** #endif
 8301              		.loc 1 3656 19 view .LVU2560
 8302 05b6 C9F80030 		str	r3, [r9]
3658:src/keys.c    **** 	    xeq(c);
 8303              		.loc 1 3658 6 is_stmt 1 view .LVU2561
3658:src/keys.c    **** 	    xeq(c);
 8304              		.loc 1 3658 37 is_stmt 0 view .LVU2562
 8305 05ba B5FA85F5 		clz	r5, r5
3659:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 8306              		.loc 1 3659 6 view .LVU2563
 8307 05be FFF7FEFF 		bl	xeq
 8308              	.LVL693:
3660:src/keys.c    **** 	  }
 8309              		.loc 1 3660 38 view .LVU2564
 8310 05c2 98F81C00 		ldrb	r0, [r8, #28]	@ zero_extendqisi2
 8311 05c6 3368     		ldr	r3, [r6]
3658:src/keys.c    **** 	    xeq(c);
 8312              		.loc 1 3658 37 view .LVU2565
 8313 05c8 6D09     		lsrs	r5, r5, #5
 8314              	.LVL694:
3659:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 8315              		.loc 1 3659 6 is_stmt 1 view .LVU2566
3660:src/keys.c    **** 	  }
 8316              		.loc 1 3660 6 view .LVU2567
3660:src/keys.c    **** 	  }
 8317              		.loc 1 3660 20 is_stmt 0 view .LVU2568
 8318 05ca 0028     		cmp	r0, #0
 8319 05cc 08BF     		it	eq
 8320 05ce 0125     		moveq	r5, #1
 8321              	.LVL695:
3660:src/keys.c    **** 	  }
 8322              		.loc 1 3660 20 view .LVU2569
 8323 05d0 70E5     		b	.L803
 8324              	.LVL696:
 8325              	.L1103:
 8326              	.LBB1485:
3629:src/keys.c    **** 	if (p > Alpha)
 8327              		.loc 1 3629 2 is_stmt 1 view .LVU2570
3629:src/keys.c    **** 	if (p > Alpha)
 8328              		.loc 1 3629 22 is_stmt 0 view .LVU2571
 8329 05d2 1E4C     		ldr	r4, .L1403+32
 8330 05d4 2068     		ldr	r0, [r4]
3629:src/keys.c    **** 	if (p > Alpha)
 8331              		.loc 1 3629 12 view .LVU2572
ARM GAS  /tmp/cc8lpfL1.s 			page 253


 8332 05d6 0021     		movs	r1, #0
 8333 05d8 00F5F660 		add	r0, r0, #1968
 8334 05dc FFF7FEFF 		bl	find_char
 8335              	.LVL697:
3630:src/keys.c    **** 	  *--p = '\0';
 8336              		.loc 1 3630 8 view .LVU2573
 8337 05e0 2368     		ldr	r3, [r4]
 8338              	.LVL698:
3630:src/keys.c    **** 	  *--p = '\0';
 8339              		.loc 1 3630 2 is_stmt 1 view .LVU2574
3630:src/keys.c    **** 	  *--p = '\0';
 8340              		.loc 1 3630 8 is_stmt 0 view .LVU2575
 8341 05e2 03F5F663 		add	r3, r3, #1968
3630:src/keys.c    **** 	  *--p = '\0';
 8342              		.loc 1 3630 5 view .LVU2576
 8343 05e6 9842     		cmp	r0, r3
 8344 05e8 00F21B81 		bhi	.L1104
 8345 05ec 3368     		ldr	r3, [r6]
 8346              	.LBE1485:
3409:src/keys.c    ****   //print_debug(60,c);
 8347              		.loc 1 3409 7 view .LVU2577
 8348 05ee 0025     		movs	r5, #0
 8349              	.LBB1486:
3630:src/keys.c    **** 	  *--p = '\0';
 8350              		.loc 1 3630 5 view .LVU2578
 8351 05f0 3024     		movs	r4, #48
 8352 05f2 5FE5     		b	.L803
 8353              	.LVL699:
 8354              	.L1152:
3630:src/keys.c    **** 	  *--p = '\0';
 8355              		.loc 1 3630 5 view .LVU2579
 8356              	.LBE1486:
 8357              	.LBB1487:
 8358              	.LBB1418:
 8359              	.LBB869:
 8360              	.LBB870:
3001:src/keys.c    **** 
 8361              		.loc 1 3001 6 view .LVU2580
 8362 05f4 3324     		movs	r4, #51
 8363              	.LVL700:
 8364              	.L958:
3034:src/keys.c    **** 		break;
 8365              		.loc 1 3034 3 is_stmt 1 view .LVU2581
 8366 05f6 5046     		mov	r0, r10
 8367 05f8 FFF7FEFF 		bl	set_pc
 8368              	.LVL701:
3035:src/keys.c    **** 
 8369              		.loc 1 3035 3 view .LVU2582
 8370              	.L970:
3088:src/keys.c    **** 	State2.labellist = 0;
 8371              		.loc 1 3088 2 view .LVU2583
3089:src/keys.c    **** 	return check_confirm(op);
 8372              		.loc 1 3089 19 is_stmt 0 view .LVU2584
 8373 05fc 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
3088:src/keys.c    **** 	State2.labellist = 0;
 8374              		.loc 1 3088 16 view .LVU2585
 8375 0600 0022     		movs	r2, #0
ARM GAS  /tmp/cc8lpfL1.s 			page 254


 8376              	.LBB871:
 8377              	.LBB872:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 8378              		.loc 1 715 5 view .LVU2586
 8379 0602 C4F30723 		ubfx	r3, r4, #8, #8
 8380              	.LBE872:
 8381              	.LBE871:
3089:src/keys.c    **** 	return check_confirm(op);
 8382              		.loc 1 3089 19 view .LVU2587
 8383 0606 62F38201 		bfi	r1, r2, #2, #1
 8384              	.LBB877:
 8385              	.LBB873:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 8386              		.loc 1 715 5 view .LVU2588
 8387 060a 012B     		cmp	r3, #1
 8388              	.LBE873:
 8389              	.LBE877:
3089:src/keys.c    **** 	return check_confirm(op);
 8390              		.loc 1 3089 19 view .LVU2589
 8391 060c 88F81710 		strb	r1, [r8, #23]
3088:src/keys.c    **** 	State2.labellist = 0;
 8392              		.loc 1 3088 16 view .LVU2590
 8393 0610 A8F80820 		strh	r2, [r8, #8]	@ movhi
3089:src/keys.c    **** 	return check_confirm(op);
 8394              		.loc 1 3089 2 is_stmt 1 view .LVU2591
3090:src/keys.c    **** }
 8395              		.loc 1 3090 2 view .LVU2592
 8396              	.LVL702:
 8397              	.LBB878:
 8398              	.LBI871:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8399              		.loc 1 714 12 view .LVU2593
 8400              	.LBB874:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 8401              		.loc 1 715 2 view .LVU2594
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 8402              		.loc 1 715 5 is_stmt 0 view .LVU2595
 8403 0614 7FF4E2AE 		bne	.L837
 8404              	.LVL703:
 8405              	.L1299:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 8406              		.loc 1 715 5 view .LVU2596
 8407              	.LBE874:
 8408              	.LBE878:
 8409              	.LBE870:
 8410              	.LBE869:
 8411              	.LBE1418:
 8412              	.LBE1487:
 8413              	.LBB1488:
 8414              	.LBB1479:
 8415 0618 2046     		mov	r0, r4
 8416 061a FFF7FEFF 		bl	check_confirm.part.0
 8417              	.LVL704:
 8418 061e 0446     		mov	r4, r0
 8419 0620 DCE6     		b	.L837
 8420              	.LVL705:
 8421              	.L1345:
ARM GAS  /tmp/cc8lpfL1.s 			page 255


 715:src/keys.c    **** 		const int nilop = argKIND(op);
 8422              		.loc 1 715 5 view .LVU2597
 8423              	.LBE1479:
 8424              	.LBE1488:
3627:src/keys.c    ****       else if (State2.alphas) {
 8425              		.loc 1 3627 2 is_stmt 1 view .LVU2598
 8426 0622 FFF7FEFF 		bl	delprog
 8427              	.LVL706:
 8428 0626 3024     		movs	r4, #48
 8429 0628 3368     		ldr	r3, [r6]
 8430 062a 43E5     		b	.L803
 8431              	.L1404:
 8432              		.align	2
 8433              	.L1403:
 8434 062c 00000000 		.word	StateWhileOn
 8435 0630 00000000 		.word	GoFast
 8436 0634 00000000 		.word	JustDisplayed
 8437 0638 00000000 		.word	Running
 8438 063c 00000000 		.word	ShowRPN
 8439 0640 00000000 		.word	OpCode
 8440 0644 00000000 		.word	nd_opcode
 8441 0648 00000000 		.word	NonProgrammable
 8442 064c 00000000 		.word	main_ram
 8443 0650 00000000 		.word	DispMsg
 8444 0654 0C000000 		.word	.LC2
 8445 0658 00000000 		.word	OpCodeDisplayPending
 8446 065c 00000000 		.word	WasDataEntry
 8447 0660 04000000 		.word	.LC1
 8448              	.LVL707:
 8449              	.L782:
3446:src/keys.c    **** 	    DispMsg = TraceBuffer;
 8450              		.loc 1 3446 6 view .LVU2599
 8451 0664 C04E     		ldr	r6, .L1405
 8452 0666 3146     		mov	r1, r6
 8453 0668 FFF7FEFF 		bl	prt
 8454              	.LVL708:
 8455 066c 2A46     		mov	r2, r5
 8456 066e 0146     		mov	r1, r0
 8457 0670 3046     		mov	r0, r6
 8458 0672 FFF7FEFF 		bl	scopy_char
 8459              	.LVL709:
3447:src/keys.c    **** 	  }
 8460              		.loc 1 3447 6 view .LVU2600
3447:src/keys.c    **** 	  }
 8461              		.loc 1 3447 14 is_stmt 0 view .LVU2601
 8462 0676 BD4B     		ldr	r3, .L1405+4
 8463 0678 1E60     		str	r6, [r3]
 8464 067a 5AE5     		b	.L783
 8465              	.L805:
3551:src/keys.c    **** 	}
 8466              		.loc 1 3551 4 is_stmt 1 view .LVU2602
 8467              		.loc 1 3692 1 is_stmt 0 view .LVU2603
 8468 067c 03B0     		add	sp, sp, #12
 8469              		.cfi_remember_state
 8470              		.cfi_def_cfa_offset 36
 8471              		@ sp needed
 8472 067e BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
ARM GAS  /tmp/cc8lpfL1.s 			page 256


 8473              		.cfi_restore 14
 8474              		.cfi_restore 11
 8475              		.cfi_restore 10
 8476              		.cfi_restore 9
 8477              		.cfi_restore 8
 8478              		.cfi_restore 7
 8479              		.cfi_restore 6
 8480              		.cfi_restore 5
 8481              		.cfi_restore 4
 8482              		.cfi_def_cfa_offset 0
 8483              	.LVL710:
3551:src/keys.c    **** 	}
 8484              		.loc 1 3551 4 view .LVU2604
 8485 0682 FFF7FEBF 		b	finish_RPN
 8486              	.LVL711:
 8487              	.L1343:
 8488              		.cfi_restore_state
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8489              		.loc 1 3651 2 is_stmt 1 view .LVU2605
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8490              		.loc 1 3651 18 is_stmt 0 view .LVU2606
 8491 0686 BA4B     		ldr	r3, .L1405+8
 8492 0688 0022     		movs	r2, #0
 8493 068a 1A60     		str	r2, [r3]
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8494              		.loc 1 3652 2 is_stmt 1 view .LVU2607
 8495              	.LVL712:
 8496              	.L1106:
3666:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 8497              		.loc 1 3666 4 view .LVU2608
3666:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 8498              		.loc 1 3666 11 is_stmt 0 view .LVU2609
 8499 068c B94A     		ldr	r2, .L1405+12
3667:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 8500              		.loc 1 3667 25 view .LVU2610
 8501 068e BA4B     		ldr	r3, .L1405+16
3666:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 8502              		.loc 1 3666 11 view .LVU2611
 8503 0690 1560     		str	r5, [r2]
3667:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 8504              		.loc 1 3667 4 is_stmt 1 view .LVU2612
3667:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 8505              		.loc 1 3667 25 is_stmt 0 view .LVU2613
 8506 0692 0122     		movs	r2, #1
 8507 0694 B94E     		ldr	r6, .L1405+20
 8508 0696 1A60     		str	r2, [r3]
3668:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
 8509              		.loc 1 3668 4 is_stmt 1 view .LVU2614
 8510 0698 FFF7FEFF 		bl	finish_RPN
 8511              	.LVL713:
3669:src/keys.c    **** 	}
 8512              		.loc 1 3669 4 view .LVU2615
 8513 069c 2EE5     		b	.L1114
 8514              	.LVL714:
 8515              	.L1321:
 8516              	.LBB1489:
 8517              	.LBB1419:
ARM GAS  /tmp/cc8lpfL1.s 			page 257


3279:src/keys.c    **** 
 8518              		.loc 1 3279 3 view .LVU2616
 8519              	.LBB904:
 8520              	.LBI904:
2881:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
 8521              		.loc 1 2881 12 view .LVU2617
 8522              	.LBB905:
2883:src/keys.c    **** #ifdef DM42
 8523              		.loc 1 2883 2 view .LVU2618
 8524 069e E4B2     		uxtb	r4, r4
 8525              	.LVL715:
2883:src/keys.c    **** #ifdef DM42
 8526              		.loc 1 2883 2 is_stmt 0 view .LVU2619
 8527 06a0 A4F10E03 		sub	r3, r4, #14
 8528 06a4 192B     		cmp	r3, #25
 8529 06a6 20D8     		bhi	.L1306
 8530 06a8 DFE803F0 		tbb	[pc, r3]
 8531              	.L829:
 8532 06ac 24       		.byte	(.L830-.L829)/2
 8533 06ad 1F       		.byte	(.L1306-.L829)/2
 8534 06ae 24       		.byte	(.L830-.L829)/2
 8535 06af 1F       		.byte	(.L1306-.L829)/2
 8536 06b0 1F       		.byte	(.L1306-.L829)/2
 8537 06b1 1F       		.byte	(.L1306-.L829)/2
 8538 06b2 1F       		.byte	(.L1306-.L829)/2
 8539 06b3 1F       		.byte	(.L1306-.L829)/2
 8540 06b4 1F       		.byte	(.L1306-.L829)/2
 8541 06b5 1F       		.byte	(.L1306-.L829)/2
 8542 06b6 1F       		.byte	(.L1306-.L829)/2
 8543 06b7 1F       		.byte	(.L1306-.L829)/2
 8544 06b8 1F       		.byte	(.L1306-.L829)/2
 8545 06b9 1F       		.byte	(.L1306-.L829)/2
 8546 06ba 1F       		.byte	(.L1306-.L829)/2
 8547 06bb 1F       		.byte	(.L1306-.L829)/2
 8548 06bc 1F       		.byte	(.L1306-.L829)/2
 8549 06bd 1F       		.byte	(.L1306-.L829)/2
 8550 06be 30       		.byte	(.L828-.L829)/2
 8551 06bf 1F       		.byte	(.L1306-.L829)/2
 8552 06c0 1F       		.byte	(.L1306-.L829)/2
 8553 06c1 1F       		.byte	(.L1306-.L829)/2
 8554 06c2 1F       		.byte	(.L1306-.L829)/2
 8555 06c3 1F       		.byte	(.L1306-.L829)/2
 8556 06c4 1F       		.byte	(.L1306-.L829)/2
 8557 06c5 30       		.byte	(.L828-.L829)/2
 8558              	.LVL716:
 8559              		.p2align 1
 8560              	.L934:
2883:src/keys.c    **** #ifdef DM42
 8561              		.loc 1 2883 2 view .LVU2620
 8562              	.LBE905:
 8563              	.LBE904:
 8564              	.LBB908:
 8565              	.LBB909:
2846:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 8566              		.loc 1 2846 3 is_stmt 1 view .LVU2621
2846:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 8567              		.loc 1 2846 6 is_stmt 0 view .LVU2622
ARM GAS  /tmp/cc8lpfL1.s 			page 258


 8568 06c6 0129     		cmp	r1, #1
 8569 06c8 01F08A80 		beq	.L1307
2849:src/keys.c    **** 		return STATE_UNFINISHED;
 8570              		.loc 1 2849 4 is_stmt 1 view .LVU2623
 8571              	.LBB910:
 8572              	.LBI910:
2803:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 8573              		.loc 1 2803 13 view .LVU2624
 8574              	.LBB911:
2805:src/keys.c    **** 	if (! State2.alphas )
 8575              		.loc 1 2805 2 view .LVU2625
2805:src/keys.c    **** 	if (! State2.alphas )
 8576              		.loc 1 2805 15 is_stmt 0 view .LVU2626
 8577 06cc 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2806:src/keys.c    **** 		State2.alphashift = 0;
 8578              		.loc 1 2806 6 view .LVU2627
 8579 06d0 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2805:src/keys.c    **** 	if (! State2.alphas )
 8580              		.loc 1 2805 15 view .LVU2628
 8581 06d4 60F3C302 		bfi	r2, r0, #3, #1
 8582 06d8 88F81520 		strb	r2, [r8, #21]
2806:src/keys.c    **** 		State2.alphashift = 0;
 8583              		.loc 1 2806 2 is_stmt 1 view .LVU2629
2806:src/keys.c    **** 		State2.alphashift = 0;
 8584              		.loc 1 2806 5 is_stmt 0 view .LVU2630
 8585 06dc 13F00802 		ands	r2, r3, #8
 8586 06e0 03D1     		bne	.L1306
 8587              	.LVL717:
 8588              	.L943:
2807:src/keys.c    **** }
 8589              		.loc 1 2807 3 is_stmt 1 view .LVU2631
2807:src/keys.c    **** }
 8590              		.loc 1 2807 21 is_stmt 0 view .LVU2632
 8591 06e2 62F30413 		bfi	r3, r2, #4, #1
 8592 06e6 88F81630 		strb	r3, [r8, #22]
 8593              	.LVL718:
 8594              	.L1306:
2807:src/keys.c    **** }
 8595              		.loc 1 2807 21 view .LVU2633
 8596 06ea 3368     		ldr	r3, [r6]
 8597              	.LBE911:
 8598              	.LBE910:
2850:src/keys.c    **** 
 8599              		.loc 1 2850 10 view .LVU2634
 8600 06ec 3324     		movs	r4, #51
 8601 06ee E1E4     		b	.L803
 8602              	.LVL719:
 8603              	.L831:
2850:src/keys.c    **** 
 8604              		.loc 1 2850 10 view .LVU2635
 8605              	.LBE909:
 8606              	.LBE908:
 8607              	.LBB947:
 8608              	.LBB906:
2892:src/keys.c    **** 	  }
 8609              		.loc 1 2892 26 is_stmt 1 view .LVU2636
 8610 06f0 FFF7FEFF 		bl	clpall
ARM GAS  /tmp/cc8lpfL1.s 			page 259


 8611              	.LVL720:
2892:src/keys.c    **** 	  }
 8612              		.loc 1 2892 36 view .LVU2637
 8613              	.L830:
2901:src/keys.c    **** 	  State2.digval = 0;
 8614              		.loc 1 2901 4 view .LVU2638
2901:src/keys.c    **** 	  State2.digval = 0;
 8615              		.loc 1 2901 19 is_stmt 0 view .LVU2639
 8616 06f4 98F81420 		ldrb	r2, [r8, #20]	@ zero_extendqisi2
 8617 06f8 3368     		ldr	r3, [r6]
 8618 06fa 6FF30202 		bfc	r2, #0, #3
2902:src/keys.c    **** 	  break;
 8619              		.loc 1 2902 18 view .LVU2640
 8620 06fe 0021     		movs	r1, #0
2901:src/keys.c    **** 	  State2.digval = 0;
 8621              		.loc 1 2901 19 view .LVU2641
 8622 0700 88F81420 		strb	r2, [r8, #20]
2902:src/keys.c    **** 	  break;
 8623              		.loc 1 2902 4 is_stmt 1 view .LVU2642
2902:src/keys.c    **** 	  break;
 8624              		.loc 1 2902 18 is_stmt 0 view .LVU2643
 8625 0704 A8F80810 		strh	r1, [r8, #8]	@ movhi
2903:src/keys.c    **** 	default:			// No state change
 8626              		.loc 1 2903 4 is_stmt 1 view .LVU2644
 8627              	.LBE906:
 8628              	.LBE947:
3279:src/keys.c    **** 
 8629              		.loc 1 3279 10 is_stmt 0 view .LVU2645
 8630 0708 3324     		movs	r4, #51
 8631              	.LVL721:
 8632              	.LBB948:
 8633              	.LBB907:
2903:src/keys.c    **** 	default:			// No state change
 8634              		.loc 1 2903 4 view .LVU2646
 8635 070a D3E4     		b	.L803
 8636              	.LVL722:
 8637              	.L828:
2888:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 8638              		.loc 1 2888 4 is_stmt 1 view .LVU2647
2888:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 8639              		.loc 1 2888 18 is_stmt 0 view .LVU2648
 8640 070c 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
 8641 0710 03F00703 		and	r3, r3, #7
 8642 0714 013B     		subs	r3, r3, #1
 8643 0716 032B     		cmp	r3, #3
 8644 0718 ECD8     		bhi	.L830
 8645 071a 01A2     		adr	r2, .L832
 8646 071c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8647              		.p2align 2
 8648              	.L832:
 8649 0720 3D070000 		.word	.L835+1
 8650 0724 37070000 		.word	.L834+1
 8651 0728 31070000 		.word	.L833+1
 8652 072c F1060000 		.word	.L831+1
 8653              		.p2align 1
 8654              	.L833:
2891:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
ARM GAS  /tmp/cc8lpfL1.s 			page 260


 8655              		.loc 1 2891 26 is_stmt 1 view .LVU2649
 8656 0730 FFF7FEFF 		bl	clrprog
 8657              	.LVL723:
2891:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 8658              		.loc 1 2891 37 view .LVU2650
2891:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 8659              		.loc 1 2891 4 is_stmt 0 view .LVU2651
 8660 0734 DEE7     		b	.L830
 8661              	.L834:
2890:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 8662              		.loc 1 2890 25 is_stmt 1 view .LVU2652
 8663 0736 FFF7FEFF 		bl	reset
 8664              	.LVL724:
2890:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 8665              		.loc 1 2890 34 view .LVU2653
2890:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 8666              		.loc 1 2890 4 is_stmt 0 view .LVU2654
 8667 073a DBE7     		b	.L830
 8668              	.L835:
2889:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8669              		.loc 1 2889 25 is_stmt 1 view .LVU2655
 8670 073c FFF7FEFF 		bl	clrall
 8671              	.LVL725:
2889:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8672              		.loc 1 2889 35 view .LVU2656
2889:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8673              		.loc 1 2889 4 is_stmt 0 view .LVU2657
 8674 0740 D8E7     		b	.L830
 8675              	.LVL726:
 8676              	.L1093:
2889:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8677              		.loc 1 2889 4 view .LVU2658
 8678              	.LBE907:
 8679              	.LBE948:
 8680              	.LBE1419:
 8681              	.LBE1489:
 8682              	.LBB1490:
3587:src/keys.c    **** 	  c = nd_opcode;
 8683              		.loc 1 3587 7 is_stmt 1 view .LVU2659
3587:src/keys.c    **** 	  c = nd_opcode;
 8684              		.loc 1 3587 10 is_stmt 0 view .LVU2660
 8685 0742 15F0FF0F 		tst	r5, #255
 8686 0746 7FF46CAE 		bne	.L1096
3591:src/keys.c    **** 	  c = STATE_UNFINISHED;
 8687              		.loc 1 3591 4 is_stmt 1 view .LVU2661
 8688              	.LVL727:
 8689              	.LBB1473:
 8690              	.LBI1473:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 8691              		.loc 1 552 13 view .LVU2662
 8692              	.LBB1474:
 553:src/keys.c    **** 		return;
 8693              		.loc 1 553 2 view .LVU2663
 553:src/keys.c    **** 		return;
 8694              		.loc 1 553 6 is_stmt 0 view .LVU2664
 8695 074a FFF7FEFF 		bl	is_bad_cmdline
 8696              	.LVL728:
ARM GAS  /tmp/cc8lpfL1.s 			page 261


 553:src/keys.c    **** 		return;
 8697              		.loc 1 553 5 view .LVU2665
 8698 074e 0546     		mov	r5, r0
 8699 0750 0028     		cmp	r0, #0
 8700 0752 40F0E682 		bne	.L1346
 8701 0756 2046     		mov	r0, r4
 8702 0758 FFF7FEFF 		bl	init_arg.part.0
 8703              	.LVL729:
 8704              	.LBE1474:
 8705              	.LBE1473:
3592:src/keys.c    **** 	}
 8706              		.loc 1 3592 6 view .LVU2666
 8707 075c 3324     		movs	r4, #51
 8708              	.LVL730:
3592:src/keys.c    **** 	}
 8709              		.loc 1 3592 6 view .LVU2667
 8710 075e 3368     		ldr	r3, [r6]
 8711 0760 A8E4     		b	.L803
 8712              	.LVL731:
 8713              	.L1319:
3592:src/keys.c    **** 	}
 8714              		.loc 1 3592 6 view .LVU2668
 8715              	.LBE1490:
 8716              	.LBB1491:
 8717              	.LBB1420:
3246:src/keys.c    **** #else
 8718              		.loc 1 3246 47 view .LVU2669
 8719 0762 DFF83082 		ldr	r8, .L1405+44
 8720 0766 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
3246:src/keys.c    **** #else
 8721              		.loc 1 3246 36 view .LVU2670
 8722 076a 4BEA0302 		orr	r2, fp, r3
 8723 076e 12F0FF0F 		tst	r2, #255
 8724 0772 7FF419AD 		bne	.L815
3246:src/keys.c    **** #else
 8725              		.loc 1 3246 76 view .LVU2671
 8726 0776 824A     		ldr	r2, .L1405+24
 8727 0778 D8F81430 		ldr	r3, [r8, #20]
 8728 077c 1A42     		tst	r2, r3
 8729 077e 7FF41BAD 		bne	.L825
3252:src/keys.c    **** 	stack_restore();
 8730              		.loc 1 3252 7 is_stmt 1 view .LVU2672
3252:src/keys.c    **** 	stack_restore();
 8731              		.loc 1 3252 11 is_stmt 0 view .LVU2673
 8732 0782 DFF808A2 		ldr	r10, .L1405+36
 8733 0786 DAF80030 		ldr	r3, [r10]
 8734 078a 93F8AC37 		ldrb	r3, [r3, #1964]	@ zero_extendqisi2
3252:src/keys.c    **** 	stack_restore();
 8735              		.loc 1 3252 10 view .LVU2674
 8736 078e 03F04102 		and	r2, r3, #65
 8737 0792 412A     		cmp	r2, #65
 8738 0794 00F06286 		beq	.L1347
 8739              	.LVL732:
 8740              	.L817:
3258:src/keys.c    ****       return STATE_UNFINISHED;
 8741              		.loc 1 3258 7 is_stmt 1 view .LVU2675
 8742 0798 FFF7FEFF 		bl	soft_init_state
ARM GAS  /tmp/cc8lpfL1.s 			page 262


 8743              	.LVL733:
3259:src/keys.c    ****     }
 8744              		.loc 1 3259 7 view .LVU2676
3259:src/keys.c    ****     }
 8745              		.loc 1 3259 14 is_stmt 0 view .LVU2677
 8746 079c 3324     		movs	r4, #51
 8747 079e 3368     		ldr	r3, [r6]
 8748 07a0 88E4     		b	.L803
 8749              	.LVL734:
 8750              	.L1322:
3282:src/keys.c    **** 
 8751              		.loc 1 3282 3 is_stmt 1 view .LVU2678
3282:src/keys.c    **** 
 8752              		.loc 1 3282 10 is_stmt 0 view .LVU2679
 8753 07a2 E0B2     		uxtb	r0, r4
 8754 07a4 FFF7FEFF 		bl	process_arg
 8755              	.LVL735:
 8756 07a8 0446     		mov	r4, r0
 8757              	.LVL736:
3282:src/keys.c    **** 
 8758              		.loc 1 3282 10 view .LVU2680
 8759 07aa 17E6     		b	.L837
 8760              	.LVL737:
 8761              	.L1325:
3291:src/keys.c    **** 
 8762              		.loc 1 3291 3 is_stmt 1 view .LVU2681
 8763              	.LBB949:
 8764              	.LBI949:
2347:src/keys.c    **** 	int r = State2.test;
 8765              		.loc 1 2347 12 view .LVU2682
 8766              	.LBB950:
2348:src/keys.c    **** 	int cmpx = State2.cmplx;
 8767              		.loc 1 2348 2 view .LVU2683
2349:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 8768              		.loc 1 2349 2 view .LVU2684
 8769              	.LBB951:
 8770              	.LBB952:
 8771              	.LBB953:
 8772              	.LBB954:
 143:src/keys.c    **** }
 8773              		.loc 1 143 23 is_stmt 0 view .LVU2685
 8774 07ac DFF8D4C1 		ldr	ip, .L1405+28
 8775              	.LBE954:
 8776              	.LBE953:
 234:src/keys.c    **** }
 8777              		.loc 1 234 28 view .LVU2686
 8778 07b0 DFF8D4E1 		ldr	lr, .L1405+32
 8779              	.LBB958:
 8780              	.LBB955:
 143:src/keys.c    **** }
 8781              		.loc 1 143 23 view .LVU2687
 8782 07b4 E4B2     		uxtb	r4, r4
 8783              	.LVL738:
 143:src/keys.c    **** }
 8784              		.loc 1 143 23 view .LVU2688
 8785              	.LBE955:
 8786              	.LBE958:
ARM GAS  /tmp/cc8lpfL1.s 			page 263


 8787              	.LBE952:
 8788              	.LBE951:
2351:src/keys.c    **** 
 8789              		.loc 1 2351 44 view .LVU2689
 8790 07b6 12F0020F 		tst	r2, #2
 8791              	.LBB963:
 8792              	.LBB961:
 8793              	.LBB959:
 8794              	.LBB956:
 143:src/keys.c    **** }
 8795              		.loc 1 143 23 view .LVU2690
 8796 07ba 1CF804C0 		ldrb	ip, [ip, r4]	@ zero_extendqisi2
 8797              	.LBE956:
 8798              	.LBE959:
 234:src/keys.c    **** }
 8799              		.loc 1 234 28 view .LVU2691
 8800 07be 1EF80CE0 		ldrb	lr, [lr, ip]	@ zero_extendqisi2
 8801              	.LBE961:
 8802              	.LBE963:
2349:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 8803              		.loc 1 2349 19 view .LVU2692
 8804 07c2 C2F3400B 		ubfx	fp, r2, #1, #1
 8805              	.LVL739:
2350:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 8806              		.loc 1 2350 2 is_stmt 1 view .LVU2693
 8807              	.LBB964:
 8808              	.LBI951:
 210:src/keys.c    **** {
 8809              		.loc 1 210 14 view .LVU2694
 8810              	.LBB962:
 212:src/keys.c    ****     // K00 - K05
 8811              		.loc 1 212 3 view .LVU2695
 234:src/keys.c    **** }
 8812              		.loc 1 234 3 view .LVU2696
 8813              	.LBB960:
 8814              	.LBI953:
 131:src/keys.c    **** {
 8815              		.loc 1 131 12 view .LVU2697
 8816              	.LBB957:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8817              		.loc 1 133 2 view .LVU2698
 143:src/keys.c    **** }
 8818              		.loc 1 143 2 view .LVU2699
 143:src/keys.c    **** }
 8819              		.loc 1 143 2 is_stmt 0 view .LVU2700
 8820              	.LBE957:
 8821              	.LBE960:
 8822              	.LBE962:
 8823              	.LBE964:
2350:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 8824              		.loc 1 2350 15 view .LVU2701
 8825 07c6 2EF0800C 		bic	ip, lr, #128
 8826              	.LVL740:
2351:src/keys.c    **** 
 8827              		.loc 1 2351 2 is_stmt 1 view .LVU2702
2351:src/keys.c    **** 
 8828              		.loc 1 2351 44 is_stmt 0 view .LVU2703
ARM GAS  /tmp/cc8lpfL1.s 			page 264


 8829 07ca 00F0BC80 		beq	.L1348
 8830              	.LVL741:
2353:src/keys.c    **** 	State2.cmplx = 0;
 8831              		.loc 1 2353 2 is_stmt 1 view .LVU2704
2354:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 8832              		.loc 1 2354 15 is_stmt 0 view .LVU2705
 8833 07ce 60F34102 		bfi	r2, r0, #1, #1
2355:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 8834              		.loc 1 2355 5 view .LVU2706
 8835 07d2 BCF1640F 		cmp	ip, #100
2353:src/keys.c    **** 	State2.cmplx = 0;
 8836              		.loc 1 2353 14 view .LVU2707
 8837 07d6 4FF00700 		mov	r0, #7
2354:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 8838              		.loc 1 2354 15 view .LVU2708
 8839 07da 88F81520 		strb	r2, [r8, #21]
2353:src/keys.c    **** 	State2.cmplx = 0;
 8840              		.loc 1 2353 14 view .LVU2709
 8841 07de 88F80F00 		strb	r0, [r8, #15]
2354:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 8842              		.loc 1 2354 2 is_stmt 1 view .LVU2710
2355:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 8843              		.loc 1 2355 2 view .LVU2711
2355:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 8844              		.loc 1 2355 5 is_stmt 0 view .LVU2712
 8845 07e2 00F00285 		beq	.L1168
2351:src/keys.c    **** 
 8846              		.loc 1 2351 44 view .LVU2713
 8847 07e6 4FF0340A 		mov	r10, #52
 8848              	.LVL742:
 8849              	.L1127:
2356:src/keys.c    **** 		// Lettered register
 8850              		.loc 1 2356 5 view .LVU2714
 8851 07ea BCF17F0F 		cmp	ip, #127
2351:src/keys.c    **** 
 8852              		.loc 1 2351 60 view .LVU2715
 8853 07ee 9A44     		add	r10, r10, r3
2356:src/keys.c    **** 		// Lettered register
 8854              		.loc 1 2356 2 is_stmt 1 view .LVU2716
2356:src/keys.c    **** 		// Lettered register
 8855              		.loc 1 2356 5 is_stmt 0 view .LVU2717
 8856 07f0 00F03C81 		beq	.L869
 8857              	.LVL743:
2356:src/keys.c    **** 		// Lettered register
 8858              		.loc 1 2356 18 view .LVU2718
 8859 07f4 BCF1630F 		cmp	ip, #99
 8860 07f8 40F25B81 		bls	.L870
2356:src/keys.c    **** 		// Lettered register
 8861              		.loc 1 2356 37 view .LVU2719
 8862 07fc BCF16F0F 		cmp	ip, #111
 8863 0800 00F23481 		bhi	.L869
2358:src/keys.c    **** 			if (n == regI_idx)
 8864              		.loc 1 2358 3 is_stmt 1 view .LVU2720
2358:src/keys.c    **** 			if (n == regI_idx)
 8865              		.loc 1 2358 6 is_stmt 0 view .LVU2721
 8866 0804 BBF1000F 		cmp	fp, #0
 8867 0808 00F0B382 		beq	.L871
ARM GAS  /tmp/cc8lpfL1.s 			page 265


2358:src/keys.c    **** 			if (n == regI_idx)
 8868              		.loc 1 2358 12 view .LVU2722
 8869 080c 1EF0010F 		tst	lr, #1
 8870 0810 00F0AF82 		beq	.L871
2359:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 8871              		.loc 1 2359 4 is_stmt 1 view .LVU2723
2359:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 8872              		.loc 1 2359 7 is_stmt 0 view .LVU2724
 8873 0814 BCF16D0F 		cmp	ip, #109
 8874 0818 40F03781 		bne	.L872
2360:src/keys.c    **** 			// Disallow odd complex registers > A
 8875              		.loc 1 2360 5 is_stmt 1 view .LVU2725
2360:src/keys.c    **** 			// Disallow odd complex registers > A
 8876              		.loc 1 2360 30 is_stmt 0 view .LVU2726
 8877 081c 03F12904 		add	r4, r3, #41
 8878              	.LVL744:
2360:src/keys.c    **** 			// Disallow odd complex registers > A
 8879              		.loc 1 2360 30 view .LVU2727
 8880 0820 DCE5     		b	.L837
 8881              	.LVL745:
 8882              	.L1104:
2360:src/keys.c    **** 			// Disallow odd complex registers > A
 8883              		.loc 1 2360 30 view .LVU2728
 8884              	.LBE950:
 8885              	.LBE949:
 8886              	.LBE1420:
 8887              	.LBE1491:
 8888              	.LBB1492:
3631:src/keys.c    ****       }
 8889              		.loc 1 3631 4 is_stmt 1 view .LVU2729
3631:src/keys.c    ****       }
 8890              		.loc 1 3631 9 is_stmt 0 view .LVU2730
 8891 0822 0025     		movs	r5, #0
 8892 0824 00F8015C 		strb	r5, [r0, #-1]
 8893 0828 4FE6     		b	.L1304
 8894              	.LVL746:
 8895              	.L1323:
3631:src/keys.c    ****       }
 8896              		.loc 1 3631 9 view .LVU2731
 8897              	.LBE1492:
 8898              	.LBB1493:
 8899              	.LBB1421:
3285:src/keys.c    **** 
 8900              		.loc 1 3285 3 is_stmt 1 view .LVU2732
 8901              	.LBB978:
 8902              	.LBI978:
1709:src/keys.c    **** 	int pc = -1;
 8903              		.loc 1 1709 12 view .LVU2733
 8904              	.LBB979:
1710:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
 8905              		.loc 1 1710 2 view .LVU2734
1711:src/keys.c    **** 
 8906              		.loc 1 1711 2 view .LVU2735
 8907              	.LBB980:
 8908              	.LBI980:
 210:src/keys.c    **** {
 8909              		.loc 1 210 14 view .LVU2736
ARM GAS  /tmp/cc8lpfL1.s 			page 266


 8910              	.LBB981:
 212:src/keys.c    ****     // K00 - K05
 8911              		.loc 1 212 3 view .LVU2737
 234:src/keys.c    **** }
 8912              		.loc 1 234 3 view .LVU2738
 8913              	.LBB982:
 8914              	.LBI982:
 131:src/keys.c    **** {
 8915              		.loc 1 131 12 view .LVU2739
 8916              	.LBB983:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8917              		.loc 1 133 2 view .LVU2740
 143:src/keys.c    **** }
 8918              		.loc 1 143 2 view .LVU2741
 143:src/keys.c    **** }
 8919              		.loc 1 143 23 is_stmt 0 view .LVU2742
 8920 082a 564B     		ldr	r3, .L1405+28
 8921              	.LBE983:
 8922              	.LBE982:
 234:src/keys.c    **** }
 8923              		.loc 1 234 28 view .LVU2743
 8924 082c 564A     		ldr	r2, .L1405+32
 8925 082e E4B2     		uxtb	r4, r4
 8926              	.LVL747:
 8927              	.LBB985:
 8928              	.LBB984:
 143:src/keys.c    **** }
 8929              		.loc 1 143 23 view .LVU2744
 8930 0830 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 8931              	.LBE984:
 8932              	.LBE985:
 234:src/keys.c    **** }
 8933              		.loc 1 234 28 view .LVU2745
 8934 0832 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 8935              	.LVL748:
 234:src/keys.c    **** }
 8936              		.loc 1 234 28 view .LVU2746
 8937              	.LBE981:
 8938              	.LBE980:
1713:src/keys.c    **** 		// Digit 0 - 9
 8939              		.loc 1 1713 2 is_stmt 1 view .LVU2747
1713:src/keys.c    **** 		// Digit 0 - 9
 8940              		.loc 1 1713 5 is_stmt 0 view .LVU2748
 8941 0834 0928     		cmp	r0, #9
 8942 0836 40F23481 		bls	.L1349
1718:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8943              		.loc 1 1718 7 is_stmt 1 view .LVU2749
1718:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8944              		.loc 1 1718 18 is_stmt 0 view .LVU2750
 8945 083a 20F08000 		bic	r0, r0, #128
 8946              	.LVL749:
1718:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8947              		.loc 1 1718 10 view .LVU2751
 8948 083e 6428     		cmp	r0, #100
 8949 0840 00F07982 		beq	.L1350
1719:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 8950              		.loc 1 1719 7 is_stmt 1 view .LVU2752
ARM GAS  /tmp/cc8lpfL1.s 			page 267


1719:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 8951              		.loc 1 1719 10 is_stmt 0 view .LVU2753
 8952 0844 6528     		cmp	r0, #101
 8953 0846 00F08D82 		beq	.L1351
1720:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 8954              		.loc 1 1720 7 is_stmt 1 view .LVU2754
1720:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 8955              		.loc 1 1720 10 is_stmt 0 view .LVU2755
 8956 084a 6628     		cmp	r0, #102
 8957 084c 00F0A482 		beq	.L1352
1721:src/keys.c    **** #endif
 8958              		.loc 1 1721 7 is_stmt 1 view .LVU2756
1721:src/keys.c    **** #endif
 8959              		.loc 1 1721 10 is_stmt 0 view .LVU2757
 8960 0850 6728     		cmp	r0, #103
 8961 0852 00F0F383 		beq	.L1353
1723:src/keys.c    **** 		// A - D
 8962              		.loc 1 1723 7 is_stmt 1 view .LVU2758
1723:src/keys.c    **** 		// A - D
 8963              		.loc 1 1723 10 is_stmt 0 view .LVU2759
 8964 0856 032C     		cmp	r4, #3
 8965 0858 40F2EA84 		bls	.L1354
1728:src/keys.c    **** 		// .
 8966              		.loc 1 1728 7 is_stmt 1 view .LVU2760
1728:src/keys.c    **** 		// .
 8967              		.loc 1 1728 10 is_stmt 0 view .LVU2761
 8968 085c 262C     		cmp	r4, #38
 8969 085e 00F0FF84 		beq	.L1355
1733:src/keys.c    **** 		// ENTER - short circuit processing
 8970              		.loc 1 1733 7 is_stmt 1 view .LVU2762
1733:src/keys.c    **** 		// ENTER - short circuit processing
 8971              		.loc 1 1733 10 is_stmt 0 view .LVU2763
 8972 0862 0C2C     		cmp	r4, #12
 8973 0864 00F0E184 		beq	.L1356
1737:src/keys.c    **** 		// backspace
 8974              		.loc 1 1737 7 is_stmt 1 view .LVU2764
1737:src/keys.c    **** 		// backspace
 8975              		.loc 1 1737 10 is_stmt 0 view .LVU2765
 8976 0868 102C     		cmp	r4, #16
 8977 086a 00F0D385 		beq	.L1357
1746:src/keys.c    **** 		// up
 8978              		.loc 1 1746 7 is_stmt 1 view .LVU2766
1746:src/keys.c    **** 		// up
 8979              		.loc 1 1746 10 is_stmt 0 view .LVU2767
 8980 086e 122C     		cmp	r4, #18
 8981 0870 00F05687 		beq	.L1358
1756:src/keys.c    **** 		// down
 8982              		.loc 1 1756 7 is_stmt 1 view .LVU2768
1756:src/keys.c    **** 		// down
 8983              		.loc 1 1756 10 is_stmt 0 view .LVU2769
 8984 0874 182C     		cmp	r4, #24
 8985 0876 7FF438AF 		bne	.L1306
1758:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 8986              		.loc 1 1758 3 is_stmt 1 view .LVU2770
1759:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 8987              		.loc 1 1759 18 is_stmt 0 view .LVU2771
 8988 087a 444C     		ldr	r4, .L1405+36
ARM GAS  /tmp/cc8lpfL1.s 			page 268


 8989              	.LVL750:
1758:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 8990              		.loc 1 1758 3 view .LVU2772
 8991 087c 0120     		movs	r0, #1
 8992 087e FFF7FEFF 		bl	update_program_bounds
 8993              	.LVL751:
1759:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 8994              		.loc 1 1759 3 is_stmt 1 view .LVU2773
1759:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 8995              		.loc 1 1759 18 is_stmt 0 view .LVU2774
 8996 0882 2368     		ldr	r3, [r4]
1759:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 8997              		.loc 1 1759 11 view .LVU2775
 8998 0884 0021     		movs	r1, #0
 8999 0886 B3F8EE07 		ldrh	r0, [r3, #2030]
 9000 088a FFF7FEFF 		bl	do_inc
 9001              	.LVL752:
1760:src/keys.c    **** 			rawpc = 1;
 9002              		.loc 1 1760 3 is_stmt 1 view .LVU2776
1760:src/keys.c    **** 			rawpc = 1;
 9003              		.loc 1 1760 6 is_stmt 0 view .LVU2777
 9004 088e 20B9     		cbnz	r0, .L849
1760:src/keys.c    **** 			rawpc = 1;
 9005              		.loc 1 1760 21 view .LVU2778
 9006 0890 2368     		ldr	r3, [r4]
1760:src/keys.c    **** 			rawpc = 1;
 9007              		.loc 1 1760 18 view .LVU2779
 9008 0892 5888     		ldrh	r0, [r3, #2]
 9009              	.LVL753:
1760:src/keys.c    **** 			rawpc = 1;
 9010              		.loc 1 1760 18 view .LVU2780
 9011 0894 0038     		subs	r0, r0, #0
 9012 0896 18BF     		it	ne
 9013 0898 0120     		movne	r0, #1
 9014              	.LVL754:
 9015              	.L849:
1766:src/keys.c    **** fin2:		State2.gtodot = 0;
 9016              		.loc 1 1766 7 is_stmt 1 view .LVU2781
 9017 089a FFF7FEFF 		bl	set_pc
 9018              	.LVL755:
 9019              	.L853:
1767:src/keys.c    **** 		State2.digval = 0;
 9020              		.loc 1 1767 8 view .LVU2782
1767:src/keys.c    **** 		State2.digval = 0;
 9021              		.loc 1 1767 22 is_stmt 0 view .LVU2783
 9022 089e 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 9023 08a2 3368     		ldr	r3, [r6]
1768:src/keys.c    **** 		State2.numdigit = 0;
 9024              		.loc 1 1768 17 view .LVU2784
 9025 08a4 0022     		movs	r2, #0
1767:src/keys.c    **** 		State2.digval = 0;
 9026              		.loc 1 1767 22 view .LVU2785
 9027 08a6 6FF30001 		bfc	r1, #0, #1
 9028 08aa 88F81510 		strb	r1, [r8, #21]
1768:src/keys.c    **** 		State2.numdigit = 0;
 9029              		.loc 1 1768 3 is_stmt 1 view .LVU2786
1768:src/keys.c    **** 		State2.numdigit = 0;
ARM GAS  /tmp/cc8lpfL1.s 			page 269


 9030              		.loc 1 1768 17 is_stmt 0 view .LVU2787
 9031 08ae A8F80820 		strh	r2, [r8, #8]	@ movhi
1769:src/keys.c    **** 	}
 9032              		.loc 1 1769 3 is_stmt 1 view .LVU2788
1769:src/keys.c    **** 	}
 9033              		.loc 1 1769 19 is_stmt 0 view .LVU2789
 9034 08b2 88F80B20 		strb	r2, [r8, #11]
 9035              	.LBE979:
 9036              	.LBE978:
3285:src/keys.c    **** 
 9037              		.loc 1 3285 10 view .LVU2790
 9038 08b6 3324     		movs	r4, #51
 9039 08b8 FFF7FCBB 		b	.L803
 9040              	.LVL756:
 9041              	.L1166:
3285:src/keys.c    **** 
 9042              		.loc 1 3285 10 view .LVU2791
 9043              	.LBE1421:
 9044              	.LBE1493:
 9045              	.LBB1494:
 9046 08bc 1C46     		mov	r4, r3
 9047              	.LVL757:
3285:src/keys.c    **** 
 9048              		.loc 1 3285 10 view .LVU2792
 9049 08be 17E4     		b	.L1116
 9050              	.LVL758:
 9051              	.L1324:
3285:src/keys.c    **** 
 9052              		.loc 1 3285 10 view .LVU2793
 9053              	.LBE1494:
 9054              	.LBB1495:
 9055              	.LBB1422:
3288:src/keys.c    **** 
 9056              		.loc 1 3288 3 is_stmt 1 view .LVU2794
 9057              	.LBB997:
 9058              	.LBB998:
1599:src/keys.c    **** 	State2.dot = 0;
 9059              		.loc 1 1599 15 is_stmt 0 view .LVU2795
 9060 08c0 22F06203 		bic	r3, r2, #98
 9061              	.LBE998:
 9062              	.LBE997:
3288:src/keys.c    **** 
 9063              		.loc 1 3288 10 view .LVU2796
 9064 08c4 E4B2     		uxtb	r4, r4
 9065              	.LVL759:
 9066              	.LBB1011:
 9067              	.LBI997:
1589:src/keys.c    **** 	static const unsigned char op_map[][2] = {
 9068              		.loc 1 1589 12 is_stmt 1 view .LVU2797
 9069              	.LBB1008:
1590:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
 9070              		.loc 1 1590 2 view .LVU2798
1595:src/keys.c    **** 	int f = State2.dot;
 9071              		.loc 1 1595 2 view .LVU2799
1599:src/keys.c    **** 	State2.dot = 0;
 9072              		.loc 1 1599 15 is_stmt 0 view .LVU2800
 9073 08c6 88F81530 		strb	r3, [r8, #21]
ARM GAS  /tmp/cc8lpfL1.s 			page 270


1595:src/keys.c    **** 	int f = State2.dot;
 9074              		.loc 1 1595 20 view .LVU2801
 9075 08ca C2F34009 		ubfx	r9, r2, #1, #1
 9076              	.LVL760:
1596:src/keys.c    **** 
 9077              		.loc 1 1596 2 is_stmt 1 view .LVU2802
1596:src/keys.c    **** 
 9078              		.loc 1 1596 16 is_stmt 0 view .LVU2803
 9079 08ce C2F3801B 		ubfx	fp, r2, #6, #1
 9080              	.LVL761:
1598:src/keys.c    **** 	State2.cmplx = 0;
 9081              		.loc 1 1598 2 is_stmt 1 view .LVU2804
1599:src/keys.c    **** 	State2.dot = 0;
 9082              		.loc 1 1599 2 view .LVU2805
1600:src/keys.c    **** #ifdef DM42
 9083              		.loc 1 1600 2 view .LVU2806
1602:src/keys.c    **** #endif
 9084              		.loc 1 1602 2 view .LVU2807
 9085              	.LBB999:
 9086              	.LBI999:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 9087              		.loc 1 114 13 view .LVU2808
 9088              	.LBE999:
 9089              	.LBE1008:
 9090              	.LBE1011:
 9091              	.LBE1422:
 9092              	.LBE1495:
 115:src/keys.c    **** }
 9093              		.loc 1 115 2 view .LVU2809
 9094              	.LBB1496:
 9095              	.LBB1423:
 9096              	.LBB1012:
 9097              	.LBB1009:
 9098              	.LBB1006:
 9099              	.LBB1000:
 9100              	.LBI1000:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 9101              		.loc 1 104 20 view .LVU2810
 9102              	.LBB1001:
 105:src/keys.c    **** 	State2.shifts = shift;
 9103              		.loc 1 105 2 view .LVU2811
 9104              	.LBB1002:
 9105              	.LBI1002:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 9106              		.loc 1 96 13 view .LVU2812
 9107              	.LBB1003:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9108              		.loc 1 97 2 view .LVU2813
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9109              		.loc 1 97 18 is_stmt 0 view .LVU2814
 9110 08d2 FFF7FEFF 		bl	shift_down
 9111              	.LVL762:
  98:src/keys.c    **** }
 9112              		.loc 1 98 2 is_stmt 1 view .LVU2815
 9113              	.LBE1003:
 9114              	.LBE1002:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
ARM GAS  /tmp/cc8lpfL1.s 			page 271


 9115              		.loc 1 106 2 view .LVU2816
 9116              	.LBE1001:
 9117              	.LBE1000:
 9118              	.LBE1006:
1604:src/keys.c    **** 
 9119              		.loc 1 1604 2 is_stmt 0 view .LVU2817
 9120 08d6 292C     		cmp	r4, #41
 9121              	.LBB1007:
 9122              	.LBB1005:
 9123              	.LBB1004:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9124              		.loc 1 106 16 view .LVU2818
 9125 08d8 88F810A0 		strb	r10, [r8, #16]
 108:src/keys.c    **** }
 9126              		.loc 1 108 2 is_stmt 1 view .LVU2819
 9127              	.LVL763:
 108:src/keys.c    **** }
 9128              		.loc 1 108 2 is_stmt 0 view .LVU2820
 9129              	.LBE1004:
 9130              	.LBE1005:
 9131              	.LBE1007:
1604:src/keys.c    **** 
 9132              		.loc 1 1604 2 is_stmt 1 view .LVU2821
 9133 08dc 00F0A283 		beq	.L858
 9134 08e0 15D8     		bhi	.L859
 9135 08e2 013C     		subs	r4, r4, #1
 9136              	.LVL764:
1604:src/keys.c    **** 
 9137              		.loc 1 1604 2 is_stmt 0 view .LVU2822
 9138 08e4 E3B2     		uxtb	r3, r4
 9139 08e6 022B     		cmp	r3, #2
 9140 08e8 3FF6FFAE 		bhi	.L1306
1609:src/keys.c    **** 
 9141              		.loc 1 1609 3 is_stmt 1 view .LVU2823
1609:src/keys.c    **** 
 9142              		.loc 1 1609 54 is_stmt 0 view .LVU2824
 9143 08ec 284B     		ldr	r3, .L1405+40
 9144 08ee 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
 9145 08f2 03EB4404 		add	r4, r3, r4, lsl #1
 9146              	.LVL765:
1609:src/keys.c    **** 
 9147              		.loc 1 1609 27 view .LVU2825
 9148 08f6 B9F1000F 		cmp	r9, #0
1609:src/keys.c    **** 
 9149              		.loc 1 1609 54 view .LVU2826
 9150 08fa 14F80B40 		ldrb	r4, [r4, fp]	@ zero_extendqisi2
1609:src/keys.c    **** 
 9151              		.loc 1 1609 27 view .LVU2827
 9152 08fe 14BF     		ite	ne
 9153 0900 4FF4A063 		movne	r3, #1280
 9154 0904 4FF40073 		moveq	r3, #512
1609:src/keys.c    **** 
 9155              		.loc 1 1609 37 view .LVU2828
 9156 0908 1C43     		orrs	r4, r4, r3
 9157 090a 2546     		mov	r5, r4
 9158 090c 8CE5     		b	.L864
 9159              	.LVL766:
ARM GAS  /tmp/cc8lpfL1.s 			page 272


 9160              	.L859:
1604:src/keys.c    **** 
 9161              		.loc 1 1604 2 view .LVU2829
 9162 090e 2D2C     		cmp	r4, #45
 9163 0910 7FF4EBAE 		bne	.L1306
1612:src/keys.c    **** 		goto stay;
 9164              		.loc 1 1612 3 is_stmt 1 view .LVU2830
 9165 0914 89F00109 		eor	r9, r9, #1
 9166              	.LVL767:
1613:src/keys.c    **** 
 9167              		.loc 1 1613 3 view .LVU2831
 9168              	.L865:
1628:src/keys.c    **** 		State2.cmplx = cmplx;
 9169              		.loc 1 1628 4 view .LVU2832
1629:src/keys.c    **** 		State2.dot = f;
 9170              		.loc 1 1629 3 view .LVU2833
1630:src/keys.c    **** 		break;
 9171              		.loc 1 1630 3 view .LVU2834
1629:src/keys.c    **** 		State2.dot = f;
 9172              		.loc 1 1629 16 is_stmt 0 view .LVU2835
 9173 0918 4FEA4902 		lsl	r2, r9, #1
 9174 091c 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 9175 0920 3368     		ldr	r3, [r6]
 9176 0922 42F02002 		orr	r2, r2, #32
 9177 0926 42EA8B12 		orr	r2, r2, fp, lsl #6
 9178 092a 02F06202 		and	r2, r2, #98
 9179 092e 21F06201 		bic	r1, r1, #98
 9180 0932 0A43     		orrs	r2, r2, r1
 9181 0934 88F81520 		strb	r2, [r8, #21]
1631:src/keys.c    **** 
 9182              		.loc 1 1631 3 is_stmt 1 view .LVU2836
1636:src/keys.c    **** }
 9183              		.loc 1 1636 9 is_stmt 0 view .LVU2837
 9184 0938 3324     		movs	r4, #51
 9185              	.LVL768:
1631:src/keys.c    **** 
 9186              		.loc 1 1631 3 view .LVU2838
 9187 093a FFF7BBBB 		b	.L803
 9188              	.LVL769:
 9189              	.L1320:
1631:src/keys.c    **** 
 9190              		.loc 1 1631 3 view .LVU2839
 9191              	.LBE1009:
 9192              	.LBE1012:
3265:src/keys.c    **** 		return STATE_IGNORE;
 9193              		.loc 1 3265 3 is_stmt 1 view .LVU2840
3265:src/keys.c    **** 		return STATE_IGNORE;
 9194              		.loc 1 3265 15 is_stmt 0 view .LVU2841
 9195 093e 1D60     		str	r5, [r3]
3266:src/keys.c    **** 	}
 9196              		.loc 1 3266 3 is_stmt 1 view .LVU2842
 9197              	.LVL770:
3266:src/keys.c    **** 	}
 9198              		.loc 1 3266 3 is_stmt 0 view .LVU2843
 9199              	.LBE1423:
 9200              	.LBE1496:
3677:src/keys.c    **** #ifndef CONSOLE
ARM GAS  /tmp/cc8lpfL1.s 			page 273


 9201              		.loc 1 3677 3 is_stmt 1 view .LVU2844
 9202              	.LBB1497:
 9203              	.LBB1424:
3266:src/keys.c    **** 	}
 9204              		.loc 1 3266 10 is_stmt 0 view .LVU2845
 9205 0940 3224     		movs	r4, #50
 9206 0942 FFF7BABB 		b	.L823
 9207              	.LVL771:
 9208              	.L1348:
 9209              	.LBB1013:
 9210              	.LBB969:
2353:src/keys.c    **** 	State2.cmplx = 0;
 9211              		.loc 1 2353 2 is_stmt 1 view .LVU2846
2354:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9212              		.loc 1 2354 15 is_stmt 0 view .LVU2847
 9213 0946 6BF34102 		bfi	r2, fp, #1, #1
2353:src/keys.c    **** 	State2.cmplx = 0;
 9214              		.loc 1 2353 14 view .LVU2848
 9215 094a 0720     		movs	r0, #7
2355:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9216              		.loc 1 2355 5 view .LVU2849
 9217 094c BCF1640F 		cmp	ip, #100
2354:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9218              		.loc 1 2354 15 view .LVU2850
 9219 0950 88F81520 		strb	r2, [r8, #21]
2353:src/keys.c    **** 	State2.cmplx = 0;
 9220              		.loc 1 2353 14 view .LVU2851
 9221 0954 88F80F00 		strb	r0, [r8, #15]
2354:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9222              		.loc 1 2354 2 is_stmt 1 view .LVU2852
2355:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9223              		.loc 1 2355 2 view .LVU2853
2355:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9224              		.loc 1 2355 5 is_stmt 0 view .LVU2854
 9225 0958 00F04B84 		beq	.L1169
2351:src/keys.c    **** 
 9226              		.loc 1 2351 44 view .LVU2855
 9227 095c 4FF02D0A 		mov	r10, #45
 9228 0960 43E7     		b	.L1127
 9229              	.LVL772:
 9230              	.L1167:
2351:src/keys.c    **** 
 9231              		.loc 1 2351 44 view .LVU2856
 9232              	.LBE969:
 9233              	.LBE1013:
 9234              	.LBE1424:
 9235              	.LBE1497:
 9236              	.LBB1498:
 9237 0962 2C46     		mov	r4, r5
 9238              	.LVL773:
2351:src/keys.c    **** 
 9239              		.loc 1 2351 44 view .LVU2857
 9240 0964 FFF7C4BB 		b	.L1116
 9241              	.L1406:
 9242              		.align	2
 9243              	.L1405:
 9244 0968 00000000 		.word	TraceBuffer
ARM GAS  /tmp/cc8lpfL1.s 			page 274


 9245 096c 00000000 		.word	DispMsg
 9246 0970 00000000 		.word	NonProgrammable
 9247 0974 00000000 		.word	OpCode
 9248 0978 00000000 		.word	OpCodeDisplayPending
 9249 097c 00000000 		.word	JustDisplayed
 9250 0980 00040800 		.word	525312
 9251 0984 00000000 		.word	.LANCHOR6
 9252 0988 00000000 		.word	.LANCHOR5
 9253 098c 00000000 		.word	main_ram
 9254 0990 00000000 		.word	.LANCHOR19
 9255 0994 00000000 		.word	StateWhileOn
 9256              	.LVL774:
 9257              	.L1326:
2351:src/keys.c    **** 
 9258              		.loc 1 2351 44 view .LVU2858
 9259              	.LBE1498:
 9260              	.LBB1499:
 9261              	.LBB1425:
3294:src/keys.c    **** 
 9262              		.loc 1 3294 3 is_stmt 1 view .LVU2859
 9263              	.LBB1014:
 9264              	.LBB1015:
2916:src/keys.c    **** 
 9265              		.loc 1 2916 12 is_stmt 0 view .LVU2860
 9266 0998 D24B     		ldr	r3, .L1407
 9267 099a 1B68     		ldr	r3, [r3]
2916:src/keys.c    **** 
 9268              		.loc 1 2916 31 view .LVU2861
 9269 099c B3F9DE37 		ldrsh	r3, [r3, #2014]
 9270              	.LBE1015:
 9271              	.LBE1014:
3294:src/keys.c    **** 
 9272              		.loc 1 3294 10 view .LVU2862
 9273 09a0 E4B2     		uxtb	r4, r4
 9274              	.LVL775:
 9275              	.LBB1034:
 9276              	.LBI1014:
2914:src/keys.c    **** 	int n = ((int)State2.status) - 3;
 9277              		.loc 1 2914 12 is_stmt 1 view .LVU2863
 9278              	.LBB1026:
2915:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9279              		.loc 1 2915 2 view .LVU2864
2916:src/keys.c    **** 
 9280              		.loc 1 2916 2 view .LVU2865
2916:src/keys.c    **** 
 9281              		.loc 1 2916 31 is_stmt 0 view .LVU2866
 9282 09a2 002B     		cmp	r3, #0
 9283 09a4 B4BF     		ite	lt
 9284 09a6 0B23     		movlt	r3, #11
 9285 09a8 0A23     		movge	r3, #10
 9286              	.LVL776:
2918:src/keys.c    **** 		if (--n < -2)
 9287              		.loc 1 2918 2 is_stmt 1 view .LVU2867
2918:src/keys.c    **** 		if (--n < -2)
 9288              		.loc 1 2918 5 is_stmt 0 view .LVU2868
 9289 09aa 122C     		cmp	r4, #18
 9290 09ac 00F0BE81 		beq	.L1359
ARM GAS  /tmp/cc8lpfL1.s 			page 275


2922:src/keys.c    **** 		if (++n > max)
 9291              		.loc 1 2922 7 is_stmt 1 view .LVU2869
2922:src/keys.c    **** 		if (++n > max)
 9292              		.loc 1 2922 10 is_stmt 0 view .LVU2870
 9293 09b0 182C     		cmp	r4, #24
 9294 09b2 00F0E581 		beq	.L1360
2926:src/keys.c    **** 		State2.status = 0;
 9295              		.loc 1 2926 7 is_stmt 1 view .LVU2871
2926:src/keys.c    **** 		State2.status = 0;
 9296              		.loc 1 2926 10 is_stmt 0 view .LVU2872
 9297 09b6 102C     		cmp	r4, #16
 9298 09b8 00F0A784 		beq	.L1361
 9299              	.LBB1016:
2931:src/keys.c    **** 		if (nn <= 9)
 9300              		.loc 1 2931 3 is_stmt 1 view .LVU2873
 9301              	.LVL777:
 9302              	.LBB1017:
 9303              	.LBI1017:
 210:src/keys.c    **** {
 9304              		.loc 1 210 14 view .LVU2874
 9305              	.LBB1018:
 212:src/keys.c    ****     // K00 - K05
 9306              		.loc 1 212 3 view .LVU2875
 234:src/keys.c    **** }
 9307              		.loc 1 234 3 view .LVU2876
 9308              	.LBB1019:
 9309              	.LBI1019:
 131:src/keys.c    **** {
 9310              		.loc 1 131 12 view .LVU2877
 9311              	.LBB1020:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9312              		.loc 1 133 2 view .LVU2878
 143:src/keys.c    **** }
 9313              		.loc 1 143 2 view .LVU2879
 143:src/keys.c    **** }
 9314              		.loc 1 143 23 is_stmt 0 view .LVU2880
 9315 09bc CA4A     		ldr	r2, .L1407+4
 9316              	.LBE1020:
 9317              	.LBE1019:
 234:src/keys.c    **** }
 9318              		.loc 1 234 28 view .LVU2881
 9319 09be CB48     		ldr	r0, .L1407+8
 9320              	.LBB1022:
 9321              	.LBB1021:
 143:src/keys.c    **** }
 9322              		.loc 1 143 23 view .LVU2882
 9323 09c0 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 9324 09c2 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 9325 09c4 02F07F02 		and	r2, r2, #127
 9326              	.LVL778:
 143:src/keys.c    **** }
 9327              		.loc 1 143 23 view .LVU2883
 9328              	.LBE1021:
 9329              	.LBE1022:
 9330              	.LBE1018:
 9331              	.LBE1017:
2932:src/keys.c    **** 			n = nn;
ARM GAS  /tmp/cc8lpfL1.s 			page 276


 9332              		.loc 1 2932 3 is_stmt 1 view .LVU2884
2932:src/keys.c    **** 			n = nn;
 9333              		.loc 1 2932 6 is_stmt 0 view .LVU2885
 9334 09c8 092A     		cmp	r2, #9
 9335 09ca 40F2CF82 		bls	.L1135
2934:src/keys.c    **** 			n = n == max ? 10 : max;
 9336              		.loc 1 2934 11 view .LVU2886
 9337 09ce 702A     		cmp	r2, #112
 9338              	.LBE1016:
2915:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9339              		.loc 1 2915 6 view .LVU2887
 9340 09d0 A1F10301 		sub	r1, r1, #3
 9341              	.LVL779:
 9342              	.LBB1023:
2934:src/keys.c    **** 			n = n == max ? 10 : max;
 9343              		.loc 1 2934 8 is_stmt 1 view .LVU2888
2934:src/keys.c    **** 			n = n == max ? 10 : max;
 9344              		.loc 1 2934 11 is_stmt 0 view .LVU2889
 9345 09d4 00F0A385 		beq	.L1362
2936:src/keys.c    **** 			n = 10; 
 9346              		.loc 1 2936 8 is_stmt 1 view .LVU2890
 9347              	.LBE1023:
2915:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9348              		.loc 1 2915 6 is_stmt 0 view .LVU2891
 9349 09d8 7F2A     		cmp	r2, #127
 9350 09da 0CBF     		ite	eq
 9351 09dc 0B46     		moveq	r3, r1
 9352              	.LVL780:
2915:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9353              		.loc 1 2915 6 view .LVU2892
 9354 09de 0A23     		movne	r3, #10
 9355              	.LVL781:
 9356              	.L886:
2939:src/keys.c    **** 
 9357              		.loc 1 2939 2 is_stmt 1 view .LVU2893
2939:src/keys.c    **** 
 9358              		.loc 1 2939 20 is_stmt 0 view .LVU2894
 9359 09e0 0333     		adds	r3, r3, #3
 9360              	.LVL782:
2939:src/keys.c    **** 
 9361              		.loc 1 2939 16 view .LVU2895
 9362 09e2 88F80C30 		strb	r3, [r8, #12]
2941:src/keys.c    **** }
 9363              		.loc 1 2941 2 is_stmt 1 view .LVU2896
 9364              	.LBE1026:
 9365              	.LBE1034:
3294:src/keys.c    **** 
 9366              		.loc 1 3294 10 is_stmt 0 view .LVU2897
 9367 09e6 3324     		movs	r4, #51
 9368              	.LVL783:
3294:src/keys.c    **** 
 9369              		.loc 1 3294 10 view .LVU2898
 9370 09e8 3368     		ldr	r3, [r6]
 9371              	.LVL784:
 9372              	.LBB1035:
 9373              	.LBB1027:
2941:src/keys.c    **** }
ARM GAS  /tmp/cc8lpfL1.s 			page 277


 9374              		.loc 1 2941 9 view .LVU2899
 9375 09ea FFF763BB 		b	.L803
 9376              	.LVL785:
 9377              	.L1330:
2941:src/keys.c    **** }
 9378              		.loc 1 2941 9 view .LVU2900
 9379              	.LBE1027:
 9380              	.LBE1035:
3317:src/keys.c    **** 
 9381              		.loc 1 3317 3 is_stmt 1 view .LVU2901
 9382              	.LBB1036:
 9383              	.LBB1037:
 9384              	.LBB1038:
 9385              	.LBB1039:
 9386              	.LBB1040:
 9387              	.LBB1041:
 9388              	.LBB1042:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9389              		.loc 1 97 18 is_stmt 0 view .LVU2902
 9390 09ee FFF7FEFF 		bl	shift_down
 9391              	.LVL786:
 9392              	.LBE1042:
 9393              	.LBE1041:
 9394              	.LBE1040:
 9395              	.LBE1039:
 9396              	.LBE1038:
 9397              	.LBE1037:
 9398              	.LBE1036:
3317:src/keys.c    **** 
 9399              		.loc 1 3317 10 view .LVU2903
 9400 09f2 E4B2     		uxtb	r4, r4
 9401              	.LVL787:
 9402              	.LBB1065:
 9403              	.LBI1036:
1643:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 9404              		.loc 1 1643 12 is_stmt 1 view .LVU2904
 9405              	.LBB1059:
1644:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
 9406              		.loc 1 1644 2 view .LVU2905
1649:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
 9407              		.loc 1 1649 2 view .LVU2906
1653:src/keys.c    **** 	const int f = (shift == SHIFT_F);
 9408              		.loc 1 1653 2 view .LVU2907
 9409              	.LBB1051:
 9410              	.LBI1038:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 9411              		.loc 1 114 13 view .LVU2908
 9412              	.LBE1051:
 9413              	.LBE1059:
 9414              	.LBE1065:
 9415              	.LBE1425:
 9416              	.LBE1499:
 115:src/keys.c    **** }
 9417              		.loc 1 115 2 view .LVU2909
 9418              	.LBB1500:
 9419              	.LBB1426:
 9420              	.LBB1066:
ARM GAS  /tmp/cc8lpfL1.s 			page 278


 9421              	.LBB1060:
 9422              	.LBB1052:
 9423              	.LBB1048:
 9424              	.LBI1039:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 9425              		.loc 1 104 20 view .LVU2910
 9426              	.LBB1045:
 105:src/keys.c    **** 	State2.shifts = shift;
 9427              		.loc 1 105 2 view .LVU2911
 9428              	.LBB1044:
 9429              	.LBI1041:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 9430              		.loc 1 96 13 view .LVU2912
 9431              	.LBB1043:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9432              		.loc 1 97 2 view .LVU2913
  98:src/keys.c    **** }
 9433              		.loc 1 98 2 view .LVU2914
  98:src/keys.c    **** }
 9434              		.loc 1 98 52 is_stmt 0 view .LVU2915
 9435 09f4 8346     		mov	fp, r0
 9436              	.LVL788:
  98:src/keys.c    **** }
 9437              		.loc 1 98 52 view .LVU2916
 9438 09f6 08B9     		cbnz	r0, .L896
 9439 09f8 98F810B0 		ldrb	fp, [r8, #16]	@ zero_extendqisi2
 9440              	.L896:
 9441              	.LVL789:
  98:src/keys.c    **** }
 9442              		.loc 1 98 52 view .LVU2917
 9443              	.LBE1043:
 9444              	.LBE1044:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9445              		.loc 1 106 2 is_stmt 1 view .LVU2918
 9446              	.LBE1045:
 9447              	.LBE1048:
 9448              	.LBE1052:
1656:src/keys.c    **** #ifdef DM42
 9449              		.loc 1 1656 15 is_stmt 0 view .LVU2919
 9450 09fc 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 9451              	.LBB1053:
 9452              	.LBB1049:
 9453              	.LBB1046:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9454              		.loc 1 106 16 view .LVU2920
 9455 0a00 0023     		movs	r3, #0
 9456              	.LBE1046:
 9457              	.LBE1049:
 9458              	.LBE1053:
1656:src/keys.c    **** #ifdef DM42
 9459              		.loc 1 1656 15 view .LVU2921
 9460 0a02 63F38202 		bfi	r2, r3, #2, #1
1654:src/keys.c    **** 
 9461              		.loc 1 1654 23 view .LVU2922
 9462 0a06 ABF1010A 		sub	r10, fp, #1
1656:src/keys.c    **** #ifdef DM42
 9463              		.loc 1 1656 15 view .LVU2923
ARM GAS  /tmp/cc8lpfL1.s 			page 279


 9464 0a0a 88F81520 		strb	r2, [r8, #21]
 9465              	.LBB1054:
 9466              	.LBB1050:
 9467              	.LBB1047:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9468              		.loc 1 106 16 view .LVU2924
 9469 0a0e 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 9470              		.loc 1 108 2 is_stmt 1 view .LVU2925
 9471              	.LVL790:
 108:src/keys.c    **** }
 9472              		.loc 1 108 2 is_stmt 0 view .LVU2926
 9473              	.LBE1047:
 9474              	.LBE1050:
 9475              	.LBE1054:
1654:src/keys.c    **** 
 9476              		.loc 1 1654 2 is_stmt 1 view .LVU2927
1654:src/keys.c    **** 
 9477              		.loc 1 1654 23 is_stmt 0 view .LVU2928
 9478 0a12 BAFA8AFA 		clz	r10, r10
1658:src/keys.c    **** 	display_current_menu ();
 9479              		.loc 1 1658 2 view .LVU2929
 9480 0a16 FFF7FEFF 		bl	set_last_menu
 9481              	.LVL791:
1659:src/keys.c    **** #endif
 9482              		.loc 1 1659 2 view .LVU2930
 9483 0a1a FFF7FEFF 		bl	display_current_menu
 9484              	.LVL792:
1662:src/keys.c    **** 	  if (!C_LOCK_ON) {
 9485              		.loc 1 1662 5 view .LVU2931
 9486 0a1e 2D2C     		cmp	r4, #45
1654:src/keys.c    **** 
 9487              		.loc 1 1654 23 view .LVU2932
 9488 0a20 4FEA5A1A 		lsr	r10, r10, #5
 9489              	.LVL793:
1656:src/keys.c    **** #ifdef DM42
 9490              		.loc 1 1656 2 is_stmt 1 view .LVU2933
1658:src/keys.c    **** 	display_current_menu ();
 9491              		.loc 1 1658 2 view .LVU2934
1659:src/keys.c    **** #endif
 9492              		.loc 1 1659 2 view .LVU2935
1662:src/keys.c    **** 	  if (!C_LOCK_ON) {
 9493              		.loc 1 1662 2 view .LVU2936
1662:src/keys.c    **** 	  if (!C_LOCK_ON) {
 9494              		.loc 1 1662 5 is_stmt 0 view .LVU2937
 9495 0a24 00F08E81 		beq	.L1363
1671:src/keys.c    **** 	
 9496              		.loc 1 1671 2 is_stmt 1 view .LVU2938
1671:src/keys.c    **** 	
 9497              		.loc 1 1671 5 is_stmt 0 view .LVU2939
 9498 0a28 BBF1000F 		cmp	fp, #0
 9499 0a2c 3FF45DAE 		beq	.L1306
1673:src/keys.c    **** 		return op_map[c - K10][f];
 9500              		.loc 1 1673 2 is_stmt 1 view .LVU2940
1673:src/keys.c    **** 		return op_map[c - K10][f];
 9501              		.loc 1 1673 15 is_stmt 0 view .LVU2941
 9502 0a30 A31F     		subs	r3, r4, #6
ARM GAS  /tmp/cc8lpfL1.s 			page 280


1673:src/keys.c    **** 		return op_map[c - K10][f];
 9503              		.loc 1 1673 5 view .LVU2942
 9504 0a32 DAB2     		uxtb	r2, r3
 9505 0a34 022A     		cmp	r2, #2
 9506 0a36 40F2B681 		bls	.L1364
1676:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 9507              		.loc 1 1676 2 is_stmt 1 view .LVU2943
1676:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 9508              		.loc 1 1676 15 is_stmt 0 view .LVU2944
 9509 0a3a 0E3C     		subs	r4, r4, #14
 9510              	.LVL794:
1676:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 9511              		.loc 1 1676 5 view .LVU2945
 9512 0a3c E3B2     		uxtb	r3, r4
 9513 0a3e 012B     		cmp	r3, #1
 9514 0a40 3FF653AE 		bhi	.L1306
1677:src/keys.c    **** 
 9515              		.loc 1 1677 3 is_stmt 1 view .LVU2946
 9516 0a44 AA4A     		ldr	r2, .L1407+12
 9517              	.LBB1055:
 9518              	.LBB1056:
 742:src/keys.c    **** }
 9519              		.loc 1 742 15 is_stmt 0 view .LVU2947
 9520 0a46 98F81110 		ldrb	r1, [r8, #17]	@ zero_extendqisi2
 9521 0a4a 3368     		ldr	r3, [r6]
 9522              	.LBE1056:
 9523              	.LBE1055:
1677:src/keys.c    **** 
 9524              		.loc 1 1677 3 view .LVU2948
 9525 0a4c 02EB4402 		add	r2, r2, r4, lsl #1
1679:src/keys.c    **** }
 9526              		.loc 1 1679 9 view .LVU2949
 9527 0a50 3324     		movs	r4, #51
 9528              	.LVL795:
1677:src/keys.c    **** 
 9529              		.loc 1 1677 3 view .LVU2950
 9530 0a52 12F80A20 		ldrb	r2, [r2, r10]	@ zero_extendqisi2
 9531              	.LVL796:
 9532              	.LBB1058:
 9533              	.LBI1055:
 741:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 9534              		.loc 1 741 13 is_stmt 1 view .LVU2951
 9535              	.LBB1057:
 742:src/keys.c    **** }
 9536              		.loc 1 742 2 view .LVU2952
 742:src/keys.c    **** }
 9537              		.loc 1 742 15 is_stmt 0 view .LVU2953
 9538 0a56 9142     		cmp	r1, r2
 9539 0a58 08BF     		it	eq
 9540 0a5a 0022     		moveq	r2, #0
 9541              	.LVL797:
 742:src/keys.c    **** }
 9542              		.loc 1 742 15 view .LVU2954
 9543 0a5c 88F81120 		strb	r2, [r8, #17]
 743:src/keys.c    **** 
 9544              		.loc 1 743 1 view .LVU2955
 9545 0a60 FFF728BB 		b	.L803
ARM GAS  /tmp/cc8lpfL1.s 			page 281


 9546              	.LVL798:
 9547              	.L875:
 743:src/keys.c    **** 
 9548              		.loc 1 743 1 view .LVU2956
 9549              	.LBE1057:
 9550              	.LBE1058:
 9551              	.LBE1060:
 9552              	.LBE1066:
 9553              	.LBB1067:
 9554              	.LBB970:
2375:src/keys.c    **** 		// digit 2..9, -> or .
 9555              		.loc 1 2375 7 is_stmt 1 view .LVU2957
2375:src/keys.c    **** 		// digit 2..9, -> or .
 9556              		.loc 1 2375 10 is_stmt 0 view .LVU2958
 9557 0a64 BCF1090F 		cmp	ip, #9
 9558 0a68 40F2BF80 		bls	.L877
 9559              	.L869:
2375:src/keys.c    **** 		// digit 2..9, -> or .
 9560              		.loc 1 2375 19 view .LVU2959
 9561 0a6c 2C2C     		cmp	r4, #44
 9562 0a6e 00F0BC80 		beq	.L877
2375:src/keys.c    **** 		// digit 2..9, -> or .
 9563              		.loc 1 2375 35 view .LVU2960
 9564 0a72 262C     		cmp	r4, #38
 9565 0a74 00F0B980 		beq	.L877
2381:src/keys.c    **** 	case K11:					// tests vs register
 9566              		.loc 1 2381 2 is_stmt 1 view .LVU2961
 9567 0a78 0C2C     		cmp	r4, #12
 9568 0a7a 00F06882 		beq	.L880
 9569 0a7e 102C     		cmp	r4, #16
 9570 0a80 3FF433AE 		beq	.L1306
 9571 0a84 072C     		cmp	r4, #7
 9572 0a86 00F06282 		beq	.L880
 9573              	.L872:
2395:src/keys.c    **** 	State2.cmplx = cmpx;
 9574              		.loc 1 2395 2 view .LVU2962
2396:src/keys.c    **** 	return STATE_UNFINISHED;
 9575              		.loc 1 2396 15 is_stmt 0 view .LVU2963
 9576 0a8a 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2395:src/keys.c    **** 	State2.cmplx = cmpx;
 9577              		.loc 1 2395 14 view .LVU2964
 9578 0a8e 88F80F30 		strb	r3, [r8, #15]
2396:src/keys.c    **** 	return STATE_UNFINISHED;
 9579              		.loc 1 2396 2 is_stmt 1 view .LVU2965
2396:src/keys.c    **** 	return STATE_UNFINISHED;
 9580              		.loc 1 2396 15 is_stmt 0 view .LVU2966
 9581 0a92 6BF34102 		bfi	r2, fp, #1, #1
 9582 0a96 3368     		ldr	r3, [r6]
 9583              	.LVL799:
2396:src/keys.c    **** 	return STATE_UNFINISHED;
 9584              		.loc 1 2396 15 view .LVU2967
 9585 0a98 88F81520 		strb	r2, [r8, #21]
2397:src/keys.c    **** }
 9586              		.loc 1 2397 2 is_stmt 1 view .LVU2968
2397:src/keys.c    **** }
 9587              		.loc 1 2397 9 is_stmt 0 view .LVU2969
 9588 0a9c 3324     		movs	r4, #51
ARM GAS  /tmp/cc8lpfL1.s 			page 282


 9589              	.LVL800:
2397:src/keys.c    **** }
 9590              		.loc 1 2397 9 view .LVU2970
 9591 0a9e FFF709BB 		b	.L803
 9592              	.LVL801:
 9593              	.L1349:
2397:src/keys.c    **** }
 9594              		.loc 1 2397 9 view .LVU2971
 9595              	.LBE970:
 9596              	.LBE1067:
 9597              	.LBB1068:
 9598              	.LBB988:
1715:src/keys.c    **** 	}
 9599              		.loc 1 1715 3 is_stmt 1 view .LVU2972
1715:src/keys.c    **** 	}
 9600              		.loc 1 1715 8 is_stmt 0 view .LVU2973
 9601 0aa2 FFF7FEFF 		bl	gtodot_digit
 9602              	.LVL802:
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9603              		.loc 1 1764 2 is_stmt 1 view .LVU2974
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9604              		.loc 1 1764 5 is_stmt 0 view .LVU2975
 9605 0aa6 0028     		cmp	r0, #0
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9606              		.loc 1 1764 5 view .LVU2976
 9607 0aa8 FFF61FAE 		blt	.L1306
 9608              	.L840:
1765:src/keys.c    **** fin:		set_pc(rawpc);
 9609              		.loc 1 1765 3 is_stmt 1 view .LVU2977
1765:src/keys.c    **** fin:		set_pc(rawpc);
 9610              		.loc 1 1765 11 is_stmt 0 view .LVU2978
 9611 0aac FFF7FEFF 		bl	find_user_pc
 9612              	.LVL803:
1765:src/keys.c    **** fin:		set_pc(rawpc);
 9613              		.loc 1 1765 11 view .LVU2979
 9614 0ab0 F3E6     		b	.L849
 9615              	.LVL804:
 9616              	.L870:
1765:src/keys.c    **** fin:		set_pc(rawpc);
 9617              		.loc 1 1765 11 view .LVU2980
 9618              	.LBE988:
 9619              	.LBE1068:
 9620              	.LBB1069:
 9621              	.LBB971:
2367:src/keys.c    **** 		// Special 0
 9622              		.loc 1 2367 7 is_stmt 1 view .LVU2981
2367:src/keys.c    **** 		// Special 0
 9623              		.loc 1 2367 10 is_stmt 0 view .LVU2982
 9624 0ab2 BCF1000F 		cmp	ip, #0
 9625 0ab6 41F0CF80 		bne	.L873
2369:src/keys.c    **** 	}
 9626              		.loc 1 2369 3 is_stmt 1 view .LVU2983
2369:src/keys.c    **** 	}
 9627              		.loc 1 2369 18 is_stmt 0 view .LVU2984
 9628 0aba BBF1000F 		cmp	fp, #0
 9629 0abe 14BF     		ite	ne
 9630 0ac0 2524     		movne	r4, #37
ARM GAS  /tmp/cc8lpfL1.s 			page 283


 9631              	.LVL805:
2369:src/keys.c    **** 	}
 9632              		.loc 1 2369 18 view .LVU2985
 9633 0ac2 1724     		moveq	r4, #23
2369:src/keys.c    **** 	}
 9634              		.loc 1 2369 47 view .LVU2986
 9635 0ac4 1C44     		add	r4, r4, r3
 9636 0ac6 89E4     		b	.L837
 9637              	.LVL806:
 9638              	.L1331:
2369:src/keys.c    **** 	}
 9639              		.loc 1 2369 47 view .LVU2987
 9640              	.LBE971:
 9641              	.LBE1069:
 9642              	.LBB1070:
 9643              	.LBB856:
 277:src/keys.c    **** 			switch (c) {
 9644              		.loc 1 277 3 is_stmt 1 view .LVU2988
 277:src/keys.c    **** 			switch (c) {
 9645              		.loc 1 277 6 is_stmt 0 view .LVU2989
 9646 0ac8 BBF1030F 		cmp	fp, #3
 9647 0acc 2DD0     		beq	.L1365
 294:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 9648              		.loc 1 294 3 is_stmt 1 view .LVU2990
 294:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 9649              		.loc 1 294 6 is_stmt 0 view .LVU2991
 9650 0ace BBF1020F 		cmp	fp, #2
 9651 0ad2 00F0A583 		beq	.L1366
 296:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 9652              		.loc 1 296 3 is_stmt 1 view .LVU2992
 296:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 9653              		.loc 1 296 6 is_stmt 0 view .LVU2993
 9654 0ad6 BBF1010F 		cmp	fp, #1
 9655 0ada 7FF4CFAB 		bne	.L923
 296:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 9656              		.loc 1 296 27 view .LVU2994
 9657 0ade 0C2C     		cmp	r4, #12
 9658 0ae0 7FF4CCAB 		bne	.L923
 297:src/keys.c    **** 				SET_REAL;
 9659              		.loc 1 297 4 is_stmt 1 view .LVU2995
 297:src/keys.c    **** 				SET_REAL;
 9660              		.loc 1 297 7 is_stmt 0 view .LVU2996
 9661 0ae4 11F0060F 		tst	r1, #6
 9662 0ae8 00F01086 		beq	.L1367
 301:src/keys.c    **** 				CmdLineLength = 0;
 9663              		.loc 1 301 9 is_stmt 1 view .LVU2997
 301:src/keys.c    **** 				CmdLineLength = 0;
 9664              		.loc 1 301 12 is_stmt 0 view .LVU2998
 9665 0aec 98F81C30 		ldrb	r3, [r8, #28]	@ zero_extendqisi2
 9666 0af0 002B     		cmp	r3, #0
 9667 0af2 00F00886 		beq	.L1142
 302:src/keys.c    **** 				CmdLineEex = 0;
 9668              		.loc 1 302 5 is_stmt 1 view .LVU2999
 303:src/keys.c    **** 				CmdLineDot = 0;
 9669              		.loc 1 303 5 view .LVU3000
 304:src/keys.c    **** 			}
 9670              		.loc 1 304 5 view .LVU3001
ARM GAS  /tmp/cc8lpfL1.s 			page 284


 302:src/keys.c    **** 				CmdLineEex = 0;
 9671              		.loc 1 302 19 is_stmt 0 view .LVU3002
 9672 0af6 0023     		movs	r3, #0
 9673 0af8 A8F81C30 		strh	r3, [r8, #28]	@ movhi
 304:src/keys.c    **** 			}
 9674              		.loc 1 304 16 view .LVU3003
 9675 0afc 88F81E30 		strb	r3, [r8, #30]
 9676              	.LVL807:
 304:src/keys.c    **** 			}
 9677              		.loc 1 304 16 view .LVU3004
 9678              	.LBE856:
 9679              	.LBE1070:
3325:src/keys.c    **** 		if (is_bad_cmdline())
 9680              		.loc 1 3325 2 is_stmt 1 view .LVU3005
 9681              	.LBB1071:
 9682              	.LBB857:
 306:src/keys.c    **** 		}
 9683              		.loc 1 306 11 is_stmt 0 view .LVU3006
 9684 0b00 1023     		movs	r3, #16
 9685              	.LVL808:
 9686              	.L906:
 306:src/keys.c    **** 		}
 9687              		.loc 1 306 11 view .LVU3007
 9688              	.LBE857:
 9689              	.LBE1071:
3326:src/keys.c    **** 			return STATE_UNFINISHED;
 9690              		.loc 1 3326 3 is_stmt 1 view .LVU3008
 9691 0b02 0093     		str	r3, [sp]
3326:src/keys.c    **** 			return STATE_UNFINISHED;
 9692              		.loc 1 3326 7 is_stmt 0 view .LVU3009
 9693 0b04 FFF7FEFF 		bl	is_bad_cmdline
 9694              	.LVL809:
3326:src/keys.c    **** 			return STATE_UNFINISHED;
 9695              		.loc 1 3326 6 view .LVU3010
 9696 0b08 009B     		ldr	r3, [sp]
 9697 0b0a 0446     		mov	r4, r0
 9698 0b0c 0028     		cmp	r0, #0
 9699 0b0e 7FF4ECAD 		bne	.L1306
 9700 0b12 0093     		str	r3, [sp]
3328:src/keys.c    **** 		init_cat( cat );
 9701              		.loc 1 3328 3 is_stmt 1 view .LVU3011
 9702 0b14 FFF7FEFF 		bl	init_cat
 9703              	.LVL810:
3329:src/keys.c    **** 		return STATE_UNFINISHED;
 9704              		.loc 1 3329 3 view .LVU3012
 9705 0b18 009B     		ldr	r3, [sp]
 9706 0b1a 1846     		mov	r0, r3
 9707 0b1c FFF7FEFF 		bl	init_cat
 9708              	.LVL811:
3330:src/keys.c    **** 	}
 9709              		.loc 1 3330 3 view .LVU3013
 9710              	.LBE1426:
 9711              	.LBE1500:
3409:src/keys.c    ****   //print_debug(60,c);
 9712              		.loc 1 3409 7 is_stmt 0 view .LVU3014
 9713 0b20 2546     		mov	r5, r4
 9714 0b22 3368     		ldr	r3, [r6]
ARM GAS  /tmp/cc8lpfL1.s 			page 285


 9715              	.LBB1501:
 9716              	.LBB1427:
3330:src/keys.c    **** 	}
 9717              		.loc 1 3330 10 view .LVU3015
 9718 0b24 3324     		movs	r4, #51
 9719 0b26 FFF7C5BA 		b	.L803
 9720              	.LVL812:
 9721              	.L1365:
 9722              	.LBB1072:
 9723              	.LBB858:
 278:src/keys.c    **** 				case K53:
 9724              		.loc 1 278 4 is_stmt 1 view .LVU3016
 9725 0b2a 231F     		subs	r3, r4, #4
 9726 0b2c 1D2B     		cmp	r3, #29
 9727 0b2e 3FF6A5AB 		bhi	.L923
 9728 0b32 01A0     		adr	r0, .L907
 9729 0b34 50F823F0 		ldr	pc, [r0, r3, lsl #2]
 9730              		.p2align 2
 9731              	.L907:
 9732 0b38 B50B0000 		.word	.L910+1
 9733 0b3c C50B0000 		.word	.L909+1
 9734 0b40 7D020000 		.word	.L923+1
 9735 0b44 7D020000 		.word	.L923+1
 9736 0b48 7D020000 		.word	.L923+1
 9737 0b4c 7D020000 		.word	.L923+1
 9738 0b50 7D020000 		.word	.L923+1
 9739 0b54 7D020000 		.word	.L923+1
 9740 0b58 B90B0000 		.word	.L908+1
 9741 0b5c 7D020000 		.word	.L923+1
 9742 0b60 7D020000 		.word	.L923+1
 9743 0b64 7D020000 		.word	.L923+1
 9744 0b68 7D020000 		.word	.L923+1
 9745 0b6c 7D020000 		.word	.L923+1
 9746 0b70 7D020000 		.word	.L923+1
 9747 0b74 7D020000 		.word	.L923+1
 9748 0b78 7D020000 		.word	.L923+1
 9749 0b7c 7D020000 		.word	.L923+1
 9750 0b80 7D020000 		.word	.L923+1
 9751 0b84 7D020000 		.word	.L923+1
 9752 0b88 7D020000 		.word	.L923+1
 9753 0b8c 7D020000 		.word	.L923+1
 9754 0b90 7D020000 		.word	.L923+1
 9755 0b94 7D020000 		.word	.L923+1
 9756 0b98 7D020000 		.word	.L923+1
 9757 0b9c 7D020000 		.word	.L923+1
 9758 0ba0 7D020000 		.word	.L923+1
 9759 0ba4 7D020000 		.word	.L923+1
 9760 0ba8 7D020000 		.word	.L923+1
 9761 0bac B10B0000 		.word	.L1139+1
 9762              		.p2align 1
 9763              	.L1139:
 280:src/keys.c    **** 				case K04:
 9764              		.loc 1 280 13 is_stmt 0 view .LVU3017
 9765 0bb0 0223     		movs	r3, #2
 9766 0bb2 A6E7     		b	.L906
 9767              	.L910:
 277:src/keys.c    **** 			switch (c) {
ARM GAS  /tmp/cc8lpfL1.s 			page 286


 9768              		.loc 1 277 6 view .LVU3018
 9769 0bb4 1223     		movs	r3, #18
 9770 0bb6 A4E7     		b	.L906
 9771              	.L908:
 286:src/keys.c    **** 						finish_cpx_entry(1);
 9772              		.loc 1 286 6 is_stmt 1 view .LVU3019
 286:src/keys.c    **** 						finish_cpx_entry(1);
 9773              		.loc 1 286 9 is_stmt 0 view .LVU3020
 9774 0bb8 11F0060F 		tst	r1, #6
 9775 0bbc 40F08D85 		bne	.L1368
 289:src/keys.c    **** 				default:
 9776              		.loc 1 289 13 view .LVU3021
 9777 0bc0 1123     		movs	r3, #17
 9778 0bc2 9EE7     		b	.L906
 9779              	.L909:
 284:src/keys.c    **** 				case K20:
 9780              		.loc 1 284 6 is_stmt 1 view .LVU3022
 9781              	.LVL813:
 284:src/keys.c    **** 				case K20:
 9782              		.loc 1 284 6 is_stmt 0 view .LVU3023
 9783              	.LBE858:
 9784              	.LBE1072:
3325:src/keys.c    **** 		if (is_bad_cmdline())
 9785              		.loc 1 3325 2 is_stmt 1 view .LVU3024
 9786              	.LBB1073:
 9787              	.LBB859:
 284:src/keys.c    **** 				case K20:
 9788              		.loc 1 284 13 is_stmt 0 view .LVU3025
 9789 0bc4 0923     		movs	r3, #9
 9790 0bc6 9CE7     		b	.L906
 9791              	.LVL814:
 9792              	.L1332:
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 9793              		.loc 1 312 16 view .LVU3026
 9794 0bc8 BBF1030F 		cmp	fp, #3
 9795 0bcc 00F01583 		beq	.L1369
 315:src/keys.c    ****     /*
 9796              		.loc 1 315 3 is_stmt 1 view .LVU3027
 315:src/keys.c    ****     /*
 9797              		.loc 1 315 23 is_stmt 0 view .LVU3028
 9798 0bd0 4849     		ldr	r1, .L1407+16
 9799 0bd2 D8F81430 		ldr	r3, [r8, #20]
 315:src/keys.c    ****     /*
 9800              		.loc 1 315 6 view .LVU3029
 9801 0bd6 1942     		tst	r1, r3
 9802 0bd8 3FF450AB 		beq	.L923
 9803              	.L916:
 9804              	.LBB851:
 384:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 9805              		.loc 1 384 5 is_stmt 1 view .LVU3030
 408:src/keys.c    **** 
 9806              		.loc 1 408 5 view .LVU3031
 413:src/keys.c    ****     col = smap[shift];
 9807              		.loc 1 413 5 view .LVU3032
 9808              	.LVL815:
 414:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 9809              		.loc 1 414 5 view .LVU3033
ARM GAS  /tmp/cc8lpfL1.s 			page 287


 414:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 9810              		.loc 1 414 15 is_stmt 0 view .LVU3034
 9811 0bdc 4649     		ldr	r1, .L1407+20
 413:src/keys.c    ****     col = smap[shift];
 9812              		.loc 1 413 8 view .LVU3035
 9813 0bde 474B     		ldr	r3, .L1407+24
 414:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 9814              		.loc 1 414 9 view .LVU3036
 9815 0be0 11F80BC0 		ldrb	ip, [r1, fp]	@ zero_extendqisi2
 9816              	.LVL816:
 415:src/keys.c    ****   }
 9817              		.loc 1 415 5 is_stmt 1 view .LVU3037
 415:src/keys.c    ****   }
 9818              		.loc 1 415 9 is_stmt 0 view .LVU3038
 9819 0be4 0821     		movs	r1, #8
 9820 0be6 FFF73DBB 		b	.L918
 9821              	.LVL817:
 9822              	.L877:
 415:src/keys.c    ****   }
 9823              		.loc 1 415 9 view .LVU3039
 9824              	.LBE851:
 9825              	.LBE859:
 9826              	.LBE1073:
 9827              	.LBB1074:
 9828              	.LBB972:
2377:src/keys.c    **** 		return process_arg(c);
 9829              		.loc 1 2377 3 is_stmt 1 view .LVU3040
 9830              	.LBB965:
 9831              	.LBI965:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 9832              		.loc 1 552 13 view .LVU3041
 9833              	.LBB966:
 553:src/keys.c    **** 		return;
 9834              		.loc 1 553 2 view .LVU3042
 553:src/keys.c    **** 		return;
 9835              		.loc 1 553 6 is_stmt 0 view .LVU3043
 9836 0bea FFF7FEFF 		bl	is_bad_cmdline
 9837              	.LVL818:
 553:src/keys.c    **** 		return;
 9838              		.loc 1 553 5 view .LVU3044
 9839 0bee 18B9     		cbnz	r0, .L879
 9840 0bf0 5FFA8AF0 		uxtb	r0, r10
 9841 0bf4 FFF7FEFF 		bl	init_arg.part.0
 9842              	.LVL819:
 9843              	.L879:
 553:src/keys.c    **** 		return;
 9844              		.loc 1 553 5 view .LVU3045
 9845              	.LBE966:
 9846              	.LBE965:
2378:src/keys.c    **** 	}
 9847              		.loc 1 2378 3 is_stmt 1 view .LVU3046
2378:src/keys.c    **** 	}
 9848              		.loc 1 2378 10 is_stmt 0 view .LVU3047
 9849 0bf8 2046     		mov	r0, r4
 9850 0bfa FFF7FEFF 		bl	process_arg
 9851              	.LVL820:
 9852 0bfe 0446     		mov	r4, r0
ARM GAS  /tmp/cc8lpfL1.s 			page 288


 9853              	.LVL821:
2378:src/keys.c    **** 	}
 9854              		.loc 1 2378 10 view .LVU3048
 9855 0c00 FFF7ECBB 		b	.L837
 9856              	.LVL822:
 9857              	.L1327:
2378:src/keys.c    **** 	}
 9858              		.loc 1 2378 10 view .LVU3049
 9859              	.LBE972:
 9860              	.LBE1074:
3300:src/keys.c    **** 		return STATE_UNFINISHED;
 9861              		.loc 1 3300 3 is_stmt 1 view .LVU3050
 9862              	.LBB1075:
 9863              	.LBI1075:
 121:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 9864              		.loc 1 121 13 view .LVU3051
 9865              	.LBB1076:
 122:src/keys.c    **** }
 9866              		.loc 1 122 2 view .LVU3052
 122:src/keys.c    **** }
 9867              		.loc 1 122 16 is_stmt 0 view .LVU3053
 9868 0c04 98F81020 		ldrb	r2, [r8, #16]	@ zero_extendqisi2
 9869 0c08 3368     		ldr	r3, [r6]
 9870 0c0a 013A     		subs	r2, r2, #1
 9871 0c0c 18BF     		it	ne
 9872 0c0e 0122     		movne	r2, #1
 9873 0c10 88F81020 		strb	r2, [r8, #16]
 9874              	.LVL823:
 122:src/keys.c    **** }
 9875              		.loc 1 122 16 view .LVU3054
 9876              	.LBE1076:
 9877              	.LBE1075:
3301:src/keys.c    **** 	}
 9878              		.loc 1 3301 3 is_stmt 1 view .LVU3055
3301:src/keys.c    **** 	}
 9879              		.loc 1 3301 10 is_stmt 0 view .LVU3056
 9880 0c14 3324     		movs	r4, #51
 9881              	.LVL824:
3301:src/keys.c    **** 	}
 9882              		.loc 1 3301 10 view .LVU3057
 9883 0c16 FFF74DBA 		b	.L803
 9884              	.LVL825:
 9885              	.L1328:
3304:src/keys.c    **** 		return STATE_UNFINISHED;
 9886              		.loc 1 3304 3 is_stmt 1 view .LVU3058
 9887              	.LBB1077:
 9888              	.LBI1077:
 121:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 9889              		.loc 1 121 13 view .LVU3059
 9890              	.LBB1078:
 122:src/keys.c    **** }
 9891              		.loc 1 122 2 view .LVU3060
 122:src/keys.c    **** }
 9892              		.loc 1 122 16 is_stmt 0 view .LVU3061
 9893 0c1a 98F81020 		ldrb	r2, [r8, #16]	@ zero_extendqisi2
 9894 0c1e 3368     		ldr	r3, [r6]
 9895 0c20 022A     		cmp	r2, #2
ARM GAS  /tmp/cc8lpfL1.s 			page 289


 9896 0c22 18BF     		it	ne
 9897 0c24 0221     		movne	r1, #2
 9898 0c26 88F81010 		strb	r1, [r8, #16]
 9899              	.LVL826:
 122:src/keys.c    **** }
 9900              		.loc 1 122 16 view .LVU3062
 9901              	.LBE1078:
 9902              	.LBE1077:
3305:src/keys.c    **** 	}
 9903              		.loc 1 3305 3 is_stmt 1 view .LVU3063
3305:src/keys.c    **** 	}
 9904              		.loc 1 3305 10 is_stmt 0 view .LVU3064
 9905 0c2a 3324     		movs	r4, #51
 9906              	.LVL827:
3305:src/keys.c    **** 	}
 9907              		.loc 1 3305 10 view .LVU3065
 9908 0c2c FFF742BA 		b	.L803
 9909              	.LVL828:
 9910              	.L1334:
 9911              	.LBB1079:
 9912              	.LBB860:
 423:src/keys.c    ****       break;
 9913              		.loc 1 423 7 is_stmt 1 view .LVU3066
 423:src/keys.c    ****       break;
 9914              		.loc 1 423 11 is_stmt 0 view .LVU3067
 9915 0c30 6344     		add	r3, r3, ip
 9916              	.LVL829:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9917              		.loc 1 427 6 view .LVU3068
 9918 0c32 1107     		lsls	r1, r2, #28
 423:src/keys.c    ****       break;
 9919              		.loc 1 423 11 view .LVU3069
 9920 0c34 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 9921              	.LVL830:
 424:src/keys.c    ****     }
 9922              		.loc 1 424 7 is_stmt 1 view .LVU3070
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9923              		.loc 1 427 3 view .LVU3071
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9924              		.loc 1 427 6 is_stmt 0 view .LVU3072
 9925 0c36 40F1AA80 		bpl	.L1370
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9926              		.loc 1 427 20 view .LVU3073
 9927 0c3a A3F10B02 		sub	r2, r3, #11
 9928 0c3e 042A     		cmp	r2, #4
 9929 0c40 7FF65FAF 		bls	.L906
 9930              	.LVL831:
 9931              	.L929:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9932              		.loc 1 427 20 view .LVU3074
 9933              	.LBE860:
 9934              	.LBE1079:
3337:src/keys.c    **** 
 9935              		.loc 1 3337 3 is_stmt 1 view .LVU3075
 9936              	.LBB1080:
 9937              	.LBI908:
2810:src/keys.c    **** 	enum shifts shift = reset_shift();
ARM GAS  /tmp/cc8lpfL1.s 			page 290


 9938              		.loc 1 2810 12 view .LVU3076
 9939              	.LBB938:
2811:src/keys.c    **** 	unsigned int ch = 0;
 9940              		.loc 1 2811 2 view .LVU3077
 9941              	.LBB912:
 9942              	.LBI912:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 9943              		.loc 1 114 13 view .LVU3078
 9944              	.LBE912:
 9945              	.LBE938:
 9946              	.LBE1080:
 9947              	.LBE1427:
 9948              	.LBE1501:
 115:src/keys.c    **** }
 9949              		.loc 1 115 2 view .LVU3079
 9950              	.LBB1502:
 9951              	.LBB1428:
 9952              	.LBB1081:
 9953              	.LBB939:
 9954              	.LBB919:
 9955              	.LBB913:
 9956              	.LBI913:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 9957              		.loc 1 104 20 view .LVU3080
 9958              	.LBB914:
 105:src/keys.c    **** 	State2.shifts = shift;
 9959              		.loc 1 105 2 view .LVU3081
 9960              	.LBB915:
 9961              	.LBI915:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 9962              		.loc 1 96 13 view .LVU3082
 9963              	.LBB916:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9964              		.loc 1 97 2 view .LVU3083
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9965              		.loc 1 97 18 is_stmt 0 view .LVU3084
 9966 0c44 FFF7FEFF 		bl	shift_down
 9967              	.LVL832:
  98:src/keys.c    **** }
 9968              		.loc 1 98 2 is_stmt 1 view .LVU3085
  98:src/keys.c    **** }
 9969              		.loc 1 98 52 is_stmt 0 view .LVU3086
 9970 0c48 0146     		mov	r1, r0
 9971 0c4a 08B9     		cbnz	r0, .L926
 9972 0c4c 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 9973              	.L926:
 9974              	.LVL833:
  98:src/keys.c    **** }
 9975              		.loc 1 98 52 view .LVU3087
 9976              	.LBE916:
 9977              	.LBE915:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9978              		.loc 1 106 2 is_stmt 1 view .LVU3088
 9979              	.LBE914:
 9980              	.LBE913:
 9981              	.LBE919:
2815:src/keys.c    **** 		// Alpha catalogue from within multi character command
ARM GAS  /tmp/cc8lpfL1.s 			page 291


 9982              		.loc 1 2815 5 is_stmt 0 view .LVU3089
 9983 0c50 98F80E00 		ldrb	r0, [r8, #14]	@ zero_extendqisi2
 9984              	.LBB920:
 9985              	.LBB918:
 9986              	.LBB917:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9987              		.loc 1 106 16 view .LVU3090
 9988 0c54 0023     		movs	r3, #0
 9989 0c56 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 9990              		.loc 1 108 2 is_stmt 1 view .LVU3091
 9991              	.LVL834:
 108:src/keys.c    **** }
 9992              		.loc 1 108 2 is_stmt 0 view .LVU3092
 9993              	.LBE917:
 9994              	.LBE918:
 9995              	.LBE920:
2812:src/keys.c    **** 	unsigned int opcode;
 9996              		.loc 1 2812 2 is_stmt 1 view .LVU3093
2813:src/keys.c    **** 
 9997              		.loc 1 2813 2 view .LVU3094
2815:src/keys.c    **** 		// Alpha catalogue from within multi character command
 9998              		.loc 1 2815 2 view .LVU3095
2815:src/keys.c    **** 		// Alpha catalogue from within multi character command
 9999              		.loc 1 2815 5 is_stmt 0 view .LVU3096
 10000 0c5a 0028     		cmp	r0, #0
 10001 0c5c 40F0ED83 		bne	.L1371
2824:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
 10002              		.loc 1 2824 2 is_stmt 1 view .LVU3097
 10003 0c60 102C     		cmp	r4, #16
 10004 0c62 00F06484 		beq	.L933
 10005 0c66 242C     		cmp	r4, #36
 10006 0c68 3FF42DAD 		beq	.L934
 10007 0c6c 0C2C     		cmp	r4, #12
 10008 0c6e 00F03784 		beq	.L1372
 10009              	.L935:
2857:src/keys.c    **** 	if (ch == 0)
 10010              		.loc 1 2857 2 view .LVU3098
 10011              	.LBB921:
 10012              	.LBB922:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 10013              		.loc 1 485 6 is_stmt 0 view .LVU3099
 10014 0c72 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10015              	.LVL835:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 10016              		.loc 1 485 6 view .LVU3100
 10017              	.LBE922:
 10018              	.LBI921:
 435:src/keys.c    **** {
 10019              		.loc 1 435 12 is_stmt 1 view .LVU3101
 10020              	.LBB927:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 10021              		.loc 1 437 2 view .LVU3102
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 10022              		.loc 1 485 2 view .LVU3103
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 10023              		.loc 1 485 5 is_stmt 0 view .LVU3104
ARM GAS  /tmp/cc8lpfL1.s 			page 292


 10024 0c76 D806     		lsls	r0, r3, #27
 10025 0c78 03D5     		bpl	.L939
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 10026              		.loc 1 486 3 is_stmt 1 view .LVU3105
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 10027              		.loc 1 486 6 is_stmt 0 view .LVU3106
 10028 0c7a 0029     		cmp	r1, #0
 10029 0c7c 40F06387 		bne	.L1373
 487:src/keys.c    **** 		else if (shift == SHIFT_G)
 10030              		.loc 1 487 10 view .LVU3107
 10031 0c80 0421     		movs	r1, #4
 10032              	.LVL836:
 10033              	.L939:
 491:src/keys.c    **** }
 10034              		.loc 1 491 2 is_stmt 1 view .LVU3108
 10035              	.LBB923:
 10036              	.LBI923:
 131:src/keys.c    **** {
 10037              		.loc 1 131 12 view .LVU3109
 10038              	.LBB924:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10039              		.loc 1 133 2 view .LVU3110
 143:src/keys.c    **** }
 10040              		.loc 1 143 2 view .LVU3111
 143:src/keys.c    **** }
 10041              		.loc 1 143 23 is_stmt 0 view .LVU3112
 10042 0c82 194B     		ldr	r3, .L1407+4
 10043              	.LBE924:
 10044              	.LBE923:
 491:src/keys.c    **** }
 10045              		.loc 1 491 49 view .LVU3113
 10046 0c84 1E4A     		ldr	r2, .L1407+28
 10047              	.LBB926:
 10048              	.LBB925:
 143:src/keys.c    **** }
 10049              		.loc 1 143 23 view .LVU3114
 10050 0c86 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 10051              	.LBE925:
 10052              	.LBE926:
 491:src/keys.c    **** }
 10053              		.loc 1 491 49 view .LVU3115
 10054 0c88 0620     		movs	r0, #6
 10055 0c8a 00FB0323 		mla	r3, r0, r3, r2
 10056              	.LBE927:
 10057              	.LBE921:
2857:src/keys.c    **** 	if (ch == 0)
 10058              		.loc 1 2857 5 view .LVU3116
 10059 0c8e 5C5C     		ldrb	r4, [r3, r1]	@ zero_extendqisi2
 10060              	.LVL837:
2858:src/keys.c    **** 		return STATE_UNFINISHED;
 10061              		.loc 1 2858 2 is_stmt 1 view .LVU3117
2858:src/keys.c    **** 		return STATE_UNFINISHED;
 10062              		.loc 1 2858 5 is_stmt 0 view .LVU3118
 10063 0c90 002C     		cmp	r4, #0
 10064 0c92 3FF42AAD 		beq	.L1306
 10065              	.L932:
2861:src/keys.c    **** 		State2.digval = ch;
ARM GAS  /tmp/cc8lpfL1.s 			page 293


 10066              		.loc 1 2861 2 is_stmt 1 view .LVU3119
2861:src/keys.c    **** 		State2.digval = ch;
 10067              		.loc 1 2861 12 is_stmt 0 view .LVU3120
 10068 0c96 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
2861:src/keys.c    **** 		State2.digval = ch;
 10069              		.loc 1 2861 5 view .LVU3121
 10070 0c9a 002B     		cmp	r3, #0
 10071 0c9c 00F05785 		beq	.L1374
2865:src/keys.c    **** 		State2.digval2 = ch;
 10072              		.loc 1 2865 9 is_stmt 1 view .LVU3122
2865:src/keys.c    **** 		State2.digval2 = ch;
 10073              		.loc 1 2865 12 is_stmt 0 view .LVU3123
 10074 0ca0 012B     		cmp	r3, #1
 10075 0ca2 00F0EF86 		beq	.L1375
2870:src/keys.c    **** 
 10076              		.loc 1 2870 2 is_stmt 1 view .LVU3124
 10077              	.LBB929:
 10078              	.LBI929:
2803:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 10079              		.loc 1 2803 13 view .LVU3125
 10080              	.LBB930:
2805:src/keys.c    **** 	if (! State2.alphas )
 10081              		.loc 1 2805 2 view .LVU3126
2805:src/keys.c    **** 	if (! State2.alphas )
 10082              		.loc 1 2805 15 is_stmt 0 view .LVU3127
 10083 0ca6 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2806:src/keys.c    **** 		State2.alphashift = 0;
 10084              		.loc 1 2806 6 view .LVU3128
 10085 0caa 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2805:src/keys.c    **** 	if (! State2.alphas )
 10086              		.loc 1 2805 15 view .LVU3129
 10087 0cae 6FF3C302 		bfc	r2, #3, #1
 10088 0cb2 88F81520 		strb	r2, [r8, #21]
2806:src/keys.c    **** 		State2.alphashift = 0;
 10089              		.loc 1 2806 2 is_stmt 1 view .LVU3130
2806:src/keys.c    **** 		State2.alphashift = 0;
 10090              		.loc 1 2806 5 is_stmt 0 view .LVU3131
 10091 0cb6 13F00802 		ands	r2, r3, #8
2807:src/keys.c    **** }
 10092              		.loc 1 2807 3 is_stmt 1 view .LVU3132
2807:src/keys.c    **** }
 10093              		.loc 1 2807 21 is_stmt 0 view .LVU3133
 10094 0cba 04BF     		itt	eq
 10095 0cbc 62F30413 		bfieq	r3, r2, #4, #1
 10096 0cc0 88F81630 		strbeq	r3, [r8, #22]
 10097              	.LVL838:
 10098              	.L938:
2807:src/keys.c    **** }
 10099              		.loc 1 2807 21 view .LVU3134
 10100              	.LBE930:
 10101              	.LBE929:
2873:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 10102              		.loc 1 2873 2 is_stmt 1 view .LVU3135
2875:src/keys.c    **** }
 10103              		.loc 1 2875 2 view .LVU3136
2873:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 10104              		.loc 1 2873 21 is_stmt 0 view .LVU3137
ARM GAS  /tmp/cc8lpfL1.s 			page 294


 10105 0cc4 98F81F30 		ldrb	r3, [r8, #31]	@ zero_extendqisi2
2874:src/keys.c    **** 	return opcode;
 10106              		.loc 1 2874 17 view .LVU3138
 10107 0cc8 B8F80810 		ldrh	r1, [r8, #8]
2874:src/keys.c    **** 	return opcode;
 10108              		.loc 1 2874 34 view .LVU3139
 10109 0ccc 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
2873:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 10110              		.loc 1 2873 29 view .LVU3140
 10111 0cd0 1B02     		lsls	r3, r3, #8
2873:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 10112              		.loc 1 2873 18 view .LVU3141
 10113 0cd2 03F57043 		add	r3, r3, #61440
2874:src/keys.c    **** 	return opcode;
 10114              		.loc 1 2874 9 view .LVU3142
 10115 0cd6 0B44     		add	r3, r3, r1
2874:src/keys.c    **** 	return opcode;
 10116              		.loc 1 2874 25 view .LVU3143
 10117 0cd8 03EB0243 		add	r3, r3, r2, lsl #16
2873:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 10118              		.loc 1 2873 9 view .LVU3144
 10119 0cdc 03EB0464 		add	r4, r3, r4, lsl #24
 10120              	.LVL839:
2875:src/keys.c    **** }
 10121              		.loc 1 2875 9 view .LVU3145
 10122 0ce0 FFF77CBB 		b	.L837
 10123              	.L1408:
 10124              		.align	2
 10125              	.L1407:
 10126 0ce4 00000000 		.word	main_ram
 10127 0ce8 00000000 		.word	.LANCHOR6
 10128 0cec 00000000 		.word	.LANCHOR5
 10129 0cf0 00000000 		.word	.LANCHOR21
 10130 0cf4 00080800 		.word	526336
 10131 0cf8 00000000 		.word	.LANCHOR22
 10132 0cfc 00000000 		.word	.LANCHOR16
 10133 0d00 00000000 		.word	.LANCHOR15
 10134              	.LVL840:
 10135              	.L1329:
2875:src/keys.c    **** }
 10136              		.loc 1 2875 9 view .LVU3146
 10137              	.LBE939:
 10138              	.LBE1081:
3308:src/keys.c    **** 		State2.arrow = 0;
 10139              		.loc 1 3308 3 is_stmt 1 view .LVU3147
 10140              	.LBB1082:
 10141              	.LBI1082:
 121:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 10142              		.loc 1 121 13 view .LVU3148
 10143              	.LBB1083:
 122:src/keys.c    **** }
 10144              		.loc 1 122 2 view .LVU3149
 122:src/keys.c    **** }
 10145              		.loc 1 122 16 is_stmt 0 view .LVU3150
 10146 0d04 98F81040 		ldrb	r4, [r8, #16]	@ zero_extendqisi2
 10147              	.LVL841:
 122:src/keys.c    **** }
ARM GAS  /tmp/cc8lpfL1.s 			page 295


 10148              		.loc 1 122 16 view .LVU3151
 10149 0d08 3368     		ldr	r3, [r6]
 10150 0d0a 032C     		cmp	r4, #3
 10151              	.LBE1083:
 10152              	.LBE1082:
3309:src/keys.c    **** 		return STATE_UNFINISHED;
 10153              		.loc 1 3309 16 view .LVU3152
 10154 0d0c 60F38202 		bfi	r2, r0, #2, #1
 10155              	.LBB1086:
 10156              	.LBB1084:
 122:src/keys.c    **** }
 10157              		.loc 1 122 16 view .LVU3153
 10158 0d10 18BF     		it	ne
 10159 0d12 0321     		movne	r1, #3
 10160              	.LBE1084:
 10161              	.LBE1086:
3309:src/keys.c    **** 		return STATE_UNFINISHED;
 10162              		.loc 1 3309 16 view .LVU3154
 10163 0d14 88F81520 		strb	r2, [r8, #21]
 10164              	.LBB1087:
 10165              	.LBB1085:
 122:src/keys.c    **** }
 10166              		.loc 1 122 16 view .LVU3155
 10167 0d18 88F81010 		strb	r1, [r8, #16]
 10168              	.LVL842:
 122:src/keys.c    **** }
 10169              		.loc 1 122 16 view .LVU3156
 10170              	.LBE1085:
 10171              	.LBE1087:
3309:src/keys.c    **** 		return STATE_UNFINISHED;
 10172              		.loc 1 3309 3 is_stmt 1 view .LVU3157
3310:src/keys.c    **** 	}
 10173              		.loc 1 3310 3 view .LVU3158
3310:src/keys.c    **** 	}
 10174              		.loc 1 3310 10 is_stmt 0 view .LVU3159
 10175 0d1c 3324     		movs	r4, #51
 10176 0d1e FFF7C9B9 		b	.L803
 10177              	.LVL843:
 10178              	.L1346:
3310:src/keys.c    **** 	}
 10179              		.loc 1 3310 10 view .LVU3160
 10180 0d22 3368     		ldr	r3, [r6]
 10181              	.LBE1428:
 10182              	.LBE1502:
3409:src/keys.c    ****   //print_debug(60,c);
 10183              		.loc 1 3409 7 view .LVU3161
 10184 0d24 0025     		movs	r5, #0
 10185              	.LBB1503:
3592:src/keys.c    **** 	}
 10186              		.loc 1 3592 6 view .LVU3162
 10187 0d26 3324     		movs	r4, #51
 10188              	.LVL844:
3592:src/keys.c    **** 	}
 10189              		.loc 1 3592 6 view .LVU3163
 10190 0d28 FFF7C4B9 		b	.L803
 10191              	.LVL845:
 10192              	.L1359:
ARM GAS  /tmp/cc8lpfL1.s 			page 296


3592:src/keys.c    **** 	}
 10193              		.loc 1 3592 6 view .LVU3164
 10194              	.LBE1503:
 10195              	.LBB1504:
 10196              	.LBB1429:
 10197              	.LBB1088:
 10198              	.LBB1028:
2919:src/keys.c    **** 			n = max;
 10199              		.loc 1 2919 3 is_stmt 1 view .LVU3165
2919:src/keys.c    **** 			n = max;
 10200              		.loc 1 2919 6 is_stmt 0 view .LVU3166
 10201 0d2c 0A1F     		subs	r2, r1, #4
 10202              	.LVL846:
2919:src/keys.c    **** 			n = max;
 10203              		.loc 1 2919 6 view .LVU3167
 10204 0d2e 0129     		cmp	r1, #1
 10205 0d30 18BF     		it	ne
 10206 0d32 1346     		movne	r3, r2
 10207              	.LVL847:
2919:src/keys.c    **** 			n = max;
 10208              		.loc 1 2919 6 view .LVU3168
 10209 0d34 54E6     		b	.L886
 10210              	.LVL848:
 10211              	.L1350:
2919:src/keys.c    **** 			n = max;
 10212              		.loc 1 2919 6 view .LVU3169
 10213              	.LBE1028:
 10214              	.LBE1088:
 10215              	.LBB1089:
 10216              	.LBB989:
1718:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 10217              		.loc 1 1718 44 is_stmt 1 view .LVU3170
1718:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 10218              		.loc 1 1718 52 is_stmt 0 view .LVU3171
 10219 0d36 0120     		movs	r0, #1
 10220 0d38 FFF7FEFF 		bl	gtodot_digit
 10221              	.LVL849:
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10222              		.loc 1 1764 2 is_stmt 1 view .LVU3172
 10223              	.LBE989:
 10224              	.LBE1089:
3285:src/keys.c    **** 
 10225              		.loc 1 3285 10 is_stmt 0 view .LVU3173
 10226 0d3c 3324     		movs	r4, #51
 10227              	.LVL850:
3285:src/keys.c    **** 
 10228              		.loc 1 3285 10 view .LVU3174
 10229 0d3e 3368     		ldr	r3, [r6]
 10230 0d40 FFF7B8B9 		b	.L803
 10231              	.LVL851:
 10232              	.L1363:
 10233              	.LBB1090:
 10234              	.LBB1061:
1662:src/keys.c    **** 	  if (!C_LOCK_ON) {
 10235              		.loc 1 1662 19 view .LVU3175
 10236 0d44 C14B     		ldr	r3, .L1409
 10237 0d46 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc8lpfL1.s 			page 297


 10238 0d48 93F8AC37 		ldrb	r3, [r3, #1964]	@ zero_extendqisi2
 10239 0d4c 5C06     		lsls	r4, r3, #25
 10240              	.LVL852:
1662:src/keys.c    **** 	  if (!C_LOCK_ON) {
 10241              		.loc 1 1662 19 view .LVU3176
 10242 0d4e 40F16C81 		bpl	.L898
1663:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
 10243              		.loc 1 1663 4 is_stmt 1 view .LVU3177
1663:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
 10244              		.loc 1 1663 7 is_stmt 0 view .LVU3178
 10245 0d52 03F00103 		and	r3, r3, #1
 10246 0d56 03F2C114 		addw	r4, r3, #449
 10247 0d5a 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
 10248 0d5e 2546     		mov	r5, r4
 10249 0d60 FFF762BB 		b	.L864
 10250              	.LVL853:
 10251              	.L1351:
1663:src/keys.c    **** 	    return OP_NIL | OP_C_ON;
 10252              		.loc 1 1663 7 view .LVU3179
 10253              	.LBE1061:
 10254              	.LBE1090:
 10255              	.LBB1091:
 10256              	.LBB990:
1719:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 10257              		.loc 1 1719 44 is_stmt 1 view .LVU3180
1719:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 10258              		.loc 1 1719 52 is_stmt 0 view .LVU3181
 10259 0d64 0220     		movs	r0, #2
 10260 0d66 FFF7FEFF 		bl	gtodot_digit
 10261              	.LVL854:
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10262              		.loc 1 1764 2 is_stmt 1 view .LVU3182
 10263              	.LBE990:
 10264              	.LBE1091:
3285:src/keys.c    **** 
 10265              		.loc 1 3285 10 is_stmt 0 view .LVU3183
 10266 0d6a 3324     		movs	r4, #51
 10267              	.LVL855:
3285:src/keys.c    **** 
 10268              		.loc 1 3285 10 view .LVU3184
 10269 0d6c 3368     		ldr	r3, [r6]
 10270 0d6e FFF7A1B9 		b	.L803
 10271              	.LVL856:
 10272              	.L871:
 10273              	.LBB1092:
 10274              	.LBB973:
2365:src/keys.c    **** 	}
 10275              		.loc 1 2365 3 is_stmt 1 view .LVU3185
2365:src/keys.c    **** 	}
 10276              		.loc 1 2365 10 is_stmt 0 view .LVU3186
 10277 0d72 0AF12005 		add	r5, r10, #32
 10278 0d76 4CEA0525 		orr	r5, ip, r5, lsl #8
 10279 0d7a 2C46     		mov	r4, r5
 10280              	.LVL857:
2365:src/keys.c    **** 	}
 10281              		.loc 1 2365 10 view .LVU3187
 10282 0d7c FFF754BB 		b	.L864
ARM GAS  /tmp/cc8lpfL1.s 			page 298


 10283              	.LVL858:
 10284              	.L1360:
2365:src/keys.c    **** 	}
 10285              		.loc 1 2365 10 view .LVU3188
 10286              	.LBE973:
 10287              	.LBE1092:
 10288              	.LBB1093:
 10289              	.LBB1029:
2923:src/keys.c    **** 			n = -2;
 10290              		.loc 1 2923 3 is_stmt 1 view .LVU3189
2923:src/keys.c    **** 			n = -2;
 10291              		.loc 1 2923 6 is_stmt 0 view .LVU3190
 10292 0d80 0239     		subs	r1, r1, #2
 10293              	.LVL859:
2924:src/keys.c    **** 	}
 10294              		.loc 1 2924 6 view .LVU3191
 10295 0d82 9942     		cmp	r1, r3
 10296 0d84 D4BF     		ite	le
 10297 0d86 0B46     		movle	r3, r1
 10298              	.LVL860:
2924:src/keys.c    **** 	}
 10299              		.loc 1 2924 6 view .LVU3192
 10300 0d88 6FF00103 		mvngt	r3, #1
 10301 0d8c 28E6     		b	.L886
 10302              	.LVL861:
 10303              	.L1370:
2924:src/keys.c    **** 	}
 10304              		.loc 1 2924 6 view .LVU3193
 10305              	.LBE1029:
 10306              	.LBE1093:
3325:src/keys.c    **** 		if (is_bad_cmdline())
 10307              		.loc 1 3325 2 is_stmt 1 view .LVU3194
3325:src/keys.c    **** 		if (is_bad_cmdline())
 10308              		.loc 1 3325 5 is_stmt 0 view .LVU3195
 10309 0d8e 002B     		cmp	r3, #0
 10310 0d90 7FF4B7AE 		bne	.L906
 10311 0d94 FFF775BA 		b	.L927
 10312              	.LVL862:
 10313              	.L1352:
 10314              	.LBB1094:
 10315              	.LBB991:
1720:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 10316              		.loc 1 1720 44 is_stmt 1 view .LVU3196
1720:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 10317              		.loc 1 1720 52 is_stmt 0 view .LVU3197
 10318 0d98 0320     		movs	r0, #3
 10319 0d9a FFF7FEFF 		bl	gtodot_digit
 10320              	.LVL863:
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10321              		.loc 1 1764 2 is_stmt 1 view .LVU3198
 10322              	.LBE991:
 10323              	.LBE1094:
3285:src/keys.c    **** 
 10324              		.loc 1 3285 10 is_stmt 0 view .LVU3199
 10325 0d9e 3324     		movs	r4, #51
 10326              	.LVL864:
3285:src/keys.c    **** 
ARM GAS  /tmp/cc8lpfL1.s 			page 299


 10327              		.loc 1 3285 10 view .LVU3200
 10328 0da0 3368     		ldr	r3, [r6]
 10329 0da2 FFF787B9 		b	.L803
 10330              	.LVL865:
 10331              	.L1364:
 10332              	.LBB1095:
 10333              	.LBB1062:
1674:src/keys.c    **** 
 10334              		.loc 1 1674 3 is_stmt 1 view .LVU3201
1674:src/keys.c    **** 
 10335              		.loc 1 1674 25 is_stmt 0 view .LVU3202
 10336 0da6 AA4A     		ldr	r2, .L1409+4
 10337 0da8 0AEB4303 		add	r3, r10, r3, lsl #1
 10338 0dac 32F81340 		ldrh	r4, [r2, r3, lsl #1]
 10339              	.LVL866:
1674:src/keys.c    **** 
 10340              		.loc 1 1674 25 view .LVU3203
 10341 0db0 FFF714BB 		b	.L837
 10342              	.LVL867:
 10343              	.L1336:
1674:src/keys.c    **** 
 10344              		.loc 1 1674 25 view .LVU3204
 10345              	.LBE1062:
 10346              	.LBE1095:
3340:src/keys.c    **** 
 10347              		.loc 1 3340 3 is_stmt 1 view .LVU3205
 10348              	.LBB1096:
 10349              	.LBI869:
2993:src/keys.c    **** 	unsigned int pc = State2.digval;
 10350              		.loc 1 2993 12 view .LVU3206
 10351              	.LBB896:
2994:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 10352              		.loc 1 2994 2 view .LVU3207
2996:src/keys.c    **** 	const int opcode = getprog(pc);
 10353              		.loc 1 2996 27 is_stmt 0 view .LVU3208
 10354 0db4 262C     		cmp	r4, #38
2994:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 10355              		.loc 1 2994 15 view .LVU3209
 10356 0db6 B8F808A0 		ldrh	r10, [r8, #8]
 10357              	.LVL868:
2995:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
 10358              		.loc 1 2995 2 is_stmt 1 view .LVU3210
2996:src/keys.c    **** 	const int opcode = getprog(pc);
 10359              		.loc 1 2996 27 is_stmt 0 view .LVU3211
 10360 0dba 00F0B583 		beq	.L1149
 10361              	.LVL869:
 10362              	.LBB879:
 10363              	.LBI879:
 210:src/keys.c    **** {
 10364              		.loc 1 210 14 is_stmt 1 view .LVU3212
 10365              	.LBB880:
 212:src/keys.c    ****     // K00 - K05
 10366              		.loc 1 212 3 view .LVU3213
 234:src/keys.c    **** }
 10367              		.loc 1 234 3 view .LVU3214
 10368              	.LBB881:
 10369              	.LBI881:
ARM GAS  /tmp/cc8lpfL1.s 			page 300


 131:src/keys.c    **** {
 10370              		.loc 1 131 12 view .LVU3215
 10371              	.LBB882:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10372              		.loc 1 133 2 view .LVU3216
 143:src/keys.c    **** }
 10373              		.loc 1 143 2 view .LVU3217
 143:src/keys.c    **** }
 10374              		.loc 1 143 23 is_stmt 0 view .LVU3218
 10375 0dbe A54B     		ldr	r3, .L1409+8
 10376              	.LBE882:
 10377              	.LBE881:
 234:src/keys.c    **** }
 10378              		.loc 1 234 28 view .LVU3219
 10379 0dc0 A54A     		ldr	r2, .L1409+12
 10380              	.LBB884:
 10381              	.LBB883:
 143:src/keys.c    **** }
 10382              		.loc 1 143 23 view .LVU3220
 10383 0dc2 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 10384              	.LBE883:
 10385              	.LBE884:
 234:src/keys.c    **** }
 10386              		.loc 1 234 10 view .LVU3221
 10387 0dc4 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
 10388              	.LVL870:
 234:src/keys.c    **** }
 10389              		.loc 1 234 10 view .LVU3222
 10390              	.LBE880:
 10391              	.LBE879:
2996:src/keys.c    **** 	const int opcode = getprog(pc);
 10392              		.loc 1 2996 27 view .LVU3223
 10393 0dc8 2BF0800B 		bic	fp, fp, #128
 10394              	.L947:
 10395              	.LVL871:
2997:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 10396              		.loc 1 2997 2 is_stmt 1 view .LVU3224
2997:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 10397              		.loc 1 2997 21 is_stmt 0 view .LVU3225
 10398 0dcc 5046     		mov	r0, r10
 10399 0dce FFF7FEFF 		bl	getprog
 10400              	.LVL872:
2998:src/keys.c    **** 	const int direct = State2.runmode;
 10401              		.loc 1 2998 2 is_stmt 1 view .LVU3226
2998:src/keys.c    **** 	const int direct = State2.runmode;
 10402              		.loc 1 2998 20 is_stmt 0 view .LVU3227
 10403 0dd2 00F47040 		and	r0, r0, #61440
 10404              	.LVL873:
2998:src/keys.c    **** 	const int direct = State2.runmode;
 10405              		.loc 1 2998 63 view .LVU3228
 10406 0dd6 B0F5704F 		cmp	r0, #61440
 10407 0dda 00F06184 		beq	.L1376
 10408 0dde 0022     		movs	r2, #0
 10409              	.L948:
 10410              	.LVL874:
2999:src/keys.c    **** 	const enum shifts shift = reset_shift();
 10411              		.loc 1 2999 2 is_stmt 1 view .LVU3229
ARM GAS  /tmp/cc8lpfL1.s 			page 301


2999:src/keys.c    **** 	const enum shifts shift = reset_shift();
 10412              		.loc 1 2999 27 is_stmt 0 view .LVU3230
 10413 0de0 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10414 0de4 0192     		str	r2, [sp, #4]
 10415              	.LVL875:
2999:src/keys.c    **** 	const enum shifts shift = reset_shift();
 10416              		.loc 1 2999 27 view .LVU3231
 10417 0de6 C3F38013 		ubfx	r3, r3, #6, #1
 10418 0dea 0093     		str	r3, [sp]
 10419              	.LVL876:
3000:src/keys.c    **** 	int op = STATE_UNFINISHED;
 10420              		.loc 1 3000 2 is_stmt 1 view .LVU3232
 10421              	.LBB885:
 10422              	.LBI885:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 10423              		.loc 1 114 13 view .LVU3233
 10424              	.LBE885:
 10425              	.LBE896:
 10426              	.LBE1096:
 10427              	.LBE1429:
 10428              	.LBE1504:
 115:src/keys.c    **** }
 10429              		.loc 1 115 2 view .LVU3234
 10430              	.LBB1505:
 10431              	.LBB1430:
 10432              	.LBB1097:
 10433              	.LBB897:
 10434              	.LBB892:
 10435              	.LBB886:
 10436              	.LBI886:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 10437              		.loc 1 104 20 view .LVU3235
 10438              	.LBB887:
 105:src/keys.c    **** 	State2.shifts = shift;
 10439              		.loc 1 105 2 view .LVU3236
 10440              	.LBB888:
 10441              	.LBI888:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 10442              		.loc 1 96 13 view .LVU3237
 10443              	.LBB889:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10444              		.loc 1 97 2 view .LVU3238
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10445              		.loc 1 97 18 is_stmt 0 view .LVU3239
 10446 0dec FFF7FEFF 		bl	shift_down
 10447              	.LVL877:
  98:src/keys.c    **** }
 10448              		.loc 1 98 2 is_stmt 1 view .LVU3240
  98:src/keys.c    **** }
 10449              		.loc 1 98 52 is_stmt 0 view .LVU3241
 10450 0df0 019A     		ldr	r2, [sp, #4]
 10451 0df2 0346     		mov	r3, r0
 10452 0df4 08B9     		cbnz	r0, .L949
 10453 0df6 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 10454              	.L949:
 10455              	.LVL878:
  98:src/keys.c    **** }
ARM GAS  /tmp/cc8lpfL1.s 			page 302


 10456              		.loc 1 98 52 view .LVU3242
 10457              	.LBE889:
 10458              	.LBE888:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10459              		.loc 1 106 2 is_stmt 1 view .LVU3243
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10460              		.loc 1 106 16 is_stmt 0 view .LVU3244
 10461 0dfa 0021     		movs	r1, #0
 10462              	.LBE887:
 10463              	.LBE886:
 10464              	.LBE892:
3003:src/keys.c    **** 		// Digits take you to that segment
 10465              		.loc 1 3003 5 view .LVU3245
 10466 0dfc BBF1020F 		cmp	fp, #2
 10467              	.LBB893:
 10468              	.LBB891:
 10469              	.LBB890:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10470              		.loc 1 106 16 view .LVU3246
 10471 0e00 88F81010 		strb	r1, [r8, #16]
 108:src/keys.c    **** }
 10472              		.loc 1 108 2 is_stmt 1 view .LVU3247
 10473              	.LVL879:
 108:src/keys.c    **** }
 10474              		.loc 1 108 2 is_stmt 0 view .LVU3248
 10475              	.LBE890:
 10476              	.LBE891:
 10477              	.LBE893:
3001:src/keys.c    **** 
 10478              		.loc 1 3001 2 is_stmt 1 view .LVU3249
3003:src/keys.c    **** 		// Digits take you to that segment
 10479              		.loc 1 3003 2 view .LVU3250
3003:src/keys.c    **** 		// Digits take you to that segment
 10480              		.loc 1 3003 5 is_stmt 0 view .LVU3251
 10481 0e04 40F25384 		bls	.L1377
3012:src/keys.c    **** 
 10482              		.loc 1 3012 2 is_stmt 1 view .LVU3252
3012:src/keys.c    **** 
 10483              		.loc 1 3012 12 is_stmt 0 view .LVU3253
 10484 0e08 44EA0323 		orr	r3, r4, r3, lsl #8
 10485              	.LVL880:
3012:src/keys.c    **** 
 10486              		.loc 1 3012 2 view .LVU3254
 10487 0e0c 272B     		cmp	r3, #39
 10488 0e0e 00F3AF80 		bgt	.L952
 10489 0e12 042B     		cmp	r3, #4
 10490 0e14 7FF769AC 		ble	.L1306
 10491 0e18 053B     		subs	r3, r3, #5
 10492 0e1a 222B     		cmp	r3, #34
 10493 0e1c 3FF665AC 		bhi	.L1306
 10494 0e20 01A1     		adr	r1, .L961
 10495 0e22 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 10496 0e26 00BF     		.p2align 2
 10497              	.L961:
 10498 0e28 130F0000 		.word	.L966+1
 10499 0e2c 030F0000 		.word	.L965+1
 10500 0e30 030F0000 		.word	.L965+1
ARM GAS  /tmp/cc8lpfL1.s 			page 303


 10501 0e34 EB060000 		.word	.L1306+1
 10502 0e38 EB060000 		.word	.L1306+1
 10503 0e3c EB060000 		.word	.L1306+1
 10504 0e40 EB060000 		.word	.L1306+1
 10505 0e44 F5050000 		.word	.L1152+1
 10506 0e48 EB060000 		.word	.L1306+1
 10507 0e4c EB060000 		.word	.L1306+1
 10508 0e50 EB060000 		.word	.L1306+1
 10509 0e54 350F0000 		.word	.L964+1
 10510 0e58 EB060000 		.word	.L1306+1
 10511 0e5c 210F0000 		.word	.L963+1
 10512 0e60 EB060000 		.word	.L1306+1
 10513 0e64 EB060000 		.word	.L1306+1
 10514 0e68 EB060000 		.word	.L1306+1
 10515 0e6c EB060000 		.word	.L1306+1
 10516 0e70 EB060000 		.word	.L1306+1
 10517 0e74 C10E0000 		.word	.L962+1
 10518 0e78 EB060000 		.word	.L1306+1
 10519 0e7c EB060000 		.word	.L1306+1
 10520 0e80 EB060000 		.word	.L1306+1
 10521 0e84 EB060000 		.word	.L1306+1
 10522 0e88 EB060000 		.word	.L1306+1
 10523 0e8c EB060000 		.word	.L1306+1
 10524 0e90 EB060000 		.word	.L1306+1
 10525 0e94 EB060000 		.word	.L1306+1
 10526 0e98 EB060000 		.word	.L1306+1
 10527 0e9c EB060000 		.word	.L1306+1
 10528 0ea0 EB060000 		.word	.L1306+1
 10529 0ea4 EB060000 		.word	.L1306+1
 10530 0ea8 EB060000 		.word	.L1306+1
 10531 0eac EB060000 		.word	.L1306+1
 10532 0eb0 D70E0000 		.word	.L960+1
 10533              	.LVL881:
 10534              		.p2align 1
 10535              	.L955:
3019:src/keys.c    **** 	case K_DOWN:				// Find next label
 10536              		.loc 1 3019 3 is_stmt 1 view .LVU3255
3019:src/keys.c    **** 	case K_DOWN:				// Find next label
 10537              		.loc 1 3019 8 is_stmt 0 view .LVU3256
 10538 0eb4 5046     		mov	r0, r10
 10539 0eb6 0122     		movs	r2, #1
 10540 0eb8 0021     		movs	r1, #0
 10541 0eba FFF7FEFF 		bl	advance_to_next_label
 10542              	.LVL882:
 10543 0ebe 8246     		mov	r10, r0
 10544              	.LVL883:
 10545              	.L962:
3022:src/keys.c    **** 		return STATE_UNFINISHED;
 10546              		.loc 1 3022 3 is_stmt 1 view .LVU3257
3022:src/keys.c    **** 		return STATE_UNFINISHED;
 10547              		.loc 1 3022 19 is_stmt 0 view .LVU3258
 10548 0ec0 5046     		mov	r0, r10
 10549 0ec2 0022     		movs	r2, #0
 10550 0ec4 0121     		movs	r1, #1
 10551 0ec6 FFF7FEFF 		bl	advance_to_next_label
 10552              	.LVL884:
3023:src/keys.c    **** 
ARM GAS  /tmp/cc8lpfL1.s 			page 304


 10553              		.loc 1 3023 10 view .LVU3259
 10554 0eca 3324     		movs	r4, #51
 10555 0ecc 3368     		ldr	r3, [r6]
3022:src/keys.c    **** 		return STATE_UNFINISHED;
 10556              		.loc 1 3022 17 view .LVU3260
 10557 0ece A8F80800 		strh	r0, [r8, #8]	@ movhi
3023:src/keys.c    **** 
 10558              		.loc 1 3023 3 is_stmt 1 view .LVU3261
3023:src/keys.c    **** 
 10559              		.loc 1 3023 10 is_stmt 0 view .LVU3262
 10560 0ed2 FFF7EFB8 		b	.L803
 10561              	.LVL885:
 10562              	.L960:
3074:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 10563              		.loc 1 3074 3 is_stmt 1 view .LVU3263
3074:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 10564              		.loc 1 3074 6 is_stmt 0 view .LVU3264
 10565 0ed6 009B     		ldr	r3, [sp]
 10566 0ed8 002B     		cmp	r3, #0
 10567 0eda 3FF406AC 		beq	.L1306
3074:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 10568              		.loc 1 3074 14 view .LVU3265
 10569 0ede 002A     		cmp	r2, #0
 10570 0ee0 3FF403AC 		beq	.L1306
3075:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
 10571              		.loc 1 3075 4 is_stmt 1 view .LVU3266
 10572 0ee4 5146     		mov	r1, r10
 10573 0ee6 0120     		movs	r0, #1
 10574 0ee8 FFF7FEFF 		bl	cmdgtocommon
 10575              	.LVL886:
3076:src/keys.c    **** 			break;
 10576              		.loc 1 3076 4 view .LVU3267
3077:src/keys.c    **** 		}
 10577              		.loc 1 3077 4 view .LVU3268
3088:src/keys.c    **** 	State2.labellist = 0;
 10578              		.loc 1 3088 2 view .LVU3269
3089:src/keys.c    **** 	return check_confirm(op);
 10579              		.loc 1 3089 19 is_stmt 0 view .LVU3270
 10580 0eec 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
3088:src/keys.c    **** 	State2.labellist = 0;
 10581              		.loc 1 3088 16 view .LVU3271
 10582 0ef0 0023     		movs	r3, #0
3089:src/keys.c    **** 	return check_confirm(op);
 10583              		.loc 1 3089 19 view .LVU3272
 10584 0ef2 63F38202 		bfi	r2, r3, #2, #1
 10585 0ef6 88F81720 		strb	r2, [r8, #23]
3088:src/keys.c    **** 	State2.labellist = 0;
 10586              		.loc 1 3088 16 view .LVU3273
 10587 0efa A8F80830 		strh	r3, [r8, #8]	@ movhi
3089:src/keys.c    **** 	return check_confirm(op);
 10588              		.loc 1 3089 2 is_stmt 1 view .LVU3274
3090:src/keys.c    **** }
 10589              		.loc 1 3090 2 view .LVU3275
 10590              	.LVL887:
 10591              	.LBB894:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10592              		.loc 1 714 12 view .LVU3276
ARM GAS  /tmp/cc8lpfL1.s 			page 305


 10593              	.LBB875:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 10594              		.loc 1 715 2 view .LVU3277
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 10595              		.loc 1 715 2 is_stmt 0 view .LVU3278
 10596              	.LBE875:
 10597              	.LBE894:
 10598              	.LBE897:
 10599              	.LBE1097:
 10600              	.LBE1430:
 10601              	.LBE1505:
3614:src/keys.c    ****     case STATE_SST:
 10602              		.loc 1 3614 5 is_stmt 1 view .LVU3279
 10603 0efe FFF71DBA 		b	.L813
 10604              	.LVL888:
 10605              	.L965:
 10606              	.LBB1506:
 10607              	.LBB1431:
 10608              	.LBB1098:
 10609              	.LBB898:
3044:src/keys.c    **** 	  //#endif
 10610              		.loc 1 3044 3 view .LVU3280
3044:src/keys.c    **** 	  //#endif
 10611              		.loc 1 3044 38 is_stmt 0 view .LVU3281
 10612 0f02 062C     		cmp	r4, #6
 10613 0f04 40F2B114 		movw	r4, #433
 10614              	.LVL889:
3044:src/keys.c    **** 	  //#endif
 10615              		.loc 1 3044 38 view .LVU3282
 10616 0f08 08BF     		it	eq
 10617 0f0a 4FF4D974 		moveq	r4, #434
 10618 0f0e FFF772BB 		b	.L958
 10619              	.LVL890:
 10620              	.L966:
 10621              	.L971:
3052:src/keys.c    **** 		goto xeq_or_gto;
 10622              		.loc 1 3052 3 is_stmt 1 view .LVU3283
3052:src/keys.c    **** 		goto xeq_or_gto;
 10623              		.loc 1 3052 6 is_stmt 0 view .LVU3284
 10624 0f12 02F50074 		add	r4, r2, #512
 10625              	.LVL891:
3053:src/keys.c    **** 
 10626              		.loc 1 3053 3 is_stmt 1 view .LVU3285
3058:src/keys.c    **** 			break;
 10627              		.loc 1 3058 3 view .LVU3286
3058:src/keys.c    **** 			break;
 10628              		.loc 1 3058 6 is_stmt 0 view .LVU3287
 10629 0f16 002A     		cmp	r2, #0
 10630 0f18 7FF470AB 		bne	.L970
 10631 0f1c FFF7E5BB 		b	.L1306
 10632              	.LVL892:
 10633              	.L963:
3026:src/keys.c    **** 		return STATE_UNFINISHED;
 10634              		.loc 1 3026 3 is_stmt 1 view .LVU3288
3026:src/keys.c    **** 		return STATE_UNFINISHED;
 10635              		.loc 1 3026 19 is_stmt 0 view .LVU3289
 10636 0f20 5046     		mov	r0, r10
ARM GAS  /tmp/cc8lpfL1.s 			page 306


 10637 0f22 0021     		movs	r1, #0
 10638 0f24 FFF7FEFF 		bl	advance_to_previous_label
 10639              	.LVL893:
3027:src/keys.c    **** 
 10640              		.loc 1 3027 10 view .LVU3290
 10641 0f28 3324     		movs	r4, #51
 10642              	.LVL894:
3027:src/keys.c    **** 
 10643              		.loc 1 3027 10 view .LVU3291
 10644 0f2a 3368     		ldr	r3, [r6]
3026:src/keys.c    **** 		return STATE_UNFINISHED;
 10645              		.loc 1 3026 17 view .LVU3292
 10646 0f2c A8F80800 		strh	r0, [r8, #8]	@ movhi
3027:src/keys.c    **** 
 10647              		.loc 1 3027 3 is_stmt 1 view .LVU3293
3027:src/keys.c    **** 
 10648              		.loc 1 3027 10 is_stmt 0 view .LVU3294
 10649 0f30 FFF7C0B8 		b	.L803
 10650              	.LVL895:
 10651              	.L964:
3088:src/keys.c    **** 	State2.labellist = 0;
 10652              		.loc 1 3088 2 is_stmt 1 view .LVU3295
3089:src/keys.c    **** 	return check_confirm(op);
 10653              		.loc 1 3089 19 is_stmt 0 view .LVU3296
 10654 0f34 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
 10655 0f38 3368     		ldr	r3, [r6]
3088:src/keys.c    **** 	State2.labellist = 0;
 10656              		.loc 1 3088 16 view .LVU3297
 10657 0f3a 0022     		movs	r2, #0
3089:src/keys.c    **** 	return check_confirm(op);
 10658              		.loc 1 3089 19 view .LVU3298
 10659 0f3c 62F38201 		bfi	r1, r2, #2, #1
 10660 0f40 88F81710 		strb	r1, [r8, #23]
3088:src/keys.c    **** 	State2.labellist = 0;
 10661              		.loc 1 3088 16 view .LVU3299
 10662 0f44 A8F80820 		strh	r2, [r8, #8]	@ movhi
3089:src/keys.c    **** 	return check_confirm(op);
 10663              		.loc 1 3089 2 is_stmt 1 view .LVU3300
3090:src/keys.c    **** }
 10664              		.loc 1 3090 2 view .LVU3301
 10665              	.LVL896:
 10666              	.LBB895:
 714:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10667              		.loc 1 714 12 view .LVU3302
 10668              	.LBB876:
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 10669              		.loc 1 715 2 view .LVU3303
 715:src/keys.c    **** 		const int nilop = argKIND(op);
 10670              		.loc 1 715 2 is_stmt 0 view .LVU3304
 10671              	.LBE876:
 10672              	.LBE895:
 10673              	.LBE898:
 10674              	.LBE1098:
 10675              	.LBE1431:
 10676              	.LBE1506:
3614:src/keys.c    ****     case STATE_SST:
 10677              		.loc 1 3614 5 is_stmt 1 view .LVU3305
ARM GAS  /tmp/cc8lpfL1.s 			page 307


 10678              	.LBB1507:
 10679              	.LBB1432:
 10680              	.LBB1099:
 10681              	.LBB899:
3001:src/keys.c    **** 
 10682              		.loc 1 3001 6 is_stmt 0 view .LVU3306
 10683 0f48 3324     		movs	r4, #51
 10684 0f4a FFF7B3B8 		b	.L803
 10685              	.LVL897:
 10686              	.L880:
3001:src/keys.c    **** 
 10687              		.loc 1 3001 6 view .LVU3307
 10688              	.LBE899:
 10689              	.LBE1099:
 10690              	.LBB1100:
 10691              	.LBB974:
2384:src/keys.c    **** 		return STATE_UNFINISHED;
 10692              		.loc 1 2384 3 is_stmt 1 view .LVU3308
 10693              	.LBB967:
 10694              	.LBI967:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 10695              		.loc 1 552 13 view .LVU3309
 10696              	.LBB968:
 553:src/keys.c    **** 		return;
 10697              		.loc 1 553 2 view .LVU3310
 553:src/keys.c    **** 		return;
 10698              		.loc 1 553 6 is_stmt 0 view .LVU3311
 10699 0f4e FFF7FEFF 		bl	is_bad_cmdline
 10700              	.LVL898:
 553:src/keys.c    **** 		return;
 10701              		.loc 1 553 5 view .LVU3312
 10702 0f52 0446     		mov	r4, r0
 10703              	.LVL899:
 553:src/keys.c    **** 		return;
 10704              		.loc 1 553 5 view .LVU3313
 10705 0f54 0028     		cmp	r0, #0
 10706 0f56 7FF4C8AB 		bne	.L1306
 10707 0f5a 5FFA8AF0 		uxtb	r0, r10
 10708 0f5e FFF7FEFF 		bl	init_arg.part.0
 10709              	.LVL900:
 10710              	.LBE968:
 10711              	.LBE967:
 10712              	.LBE974:
 10713              	.LBE1100:
 10714              	.LBE1432:
 10715              	.LBE1507:
3409:src/keys.c    ****   //print_debug(60,c);
 10716              		.loc 1 3409 7 view .LVU3314
 10717 0f62 2546     		mov	r5, r4
 10718 0f64 3368     		ldr	r3, [r6]
 10719              	.LBB1508:
 10720              	.LBB1433:
 10721              	.LBB1101:
 10722              	.LBB975:
2385:src/keys.c    **** 
 10723              		.loc 1 2385 10 view .LVU3315
 10724 0f66 3324     		movs	r4, #51
ARM GAS  /tmp/cc8lpfL1.s 			page 308


 10725 0f68 FFF7A4B8 		b	.L803
 10726              	.LVL901:
 10727              	.L1135:
2385:src/keys.c    **** 
 10728              		.loc 1 2385 10 view .LVU3316
 10729              	.LBE975:
 10730              	.LBE1101:
 10731              	.LBB1102:
 10732              	.LBB1030:
 10733              	.LBB1024:
2931:src/keys.c    **** 		if (nn <= 9)
 10734              		.loc 1 2931 7 view .LVU3317
 10735 0f6c 1346     		mov	r3, r2
 10736              	.LVL902:
2931:src/keys.c    **** 		if (nn <= 9)
 10737              		.loc 1 2931 7 view .LVU3318
 10738 0f6e 37E5     		b	.L886
 10739              	.LVL903:
 10740              	.L952:
2931:src/keys.c    **** 		if (nn <= 9)
 10741              		.loc 1 2931 7 view .LVU3319
 10742              	.LBE1024:
 10743              	.LBE1030:
 10744              	.LBE1102:
 10745              	.LBB1103:
 10746              	.LBB900:
3012:src/keys.c    **** 
 10747              		.loc 1 3012 2 view .LVU3320
 10748 0f70 B3F58C7F 		cmp	r3, #280
 10749 0f74 48DC     		bgt	.L967
 10750 0f76 B3F5827F 		cmp	r3, #260
 10751 0f7a 7FF7B6AB 		ble	.L1306
 10752 0f7e 6FF48274 		mvn	r4, #260
 10753              	.LVL904:
3012:src/keys.c    **** 
 10754              		.loc 1 3012 2 view .LVU3321
 10755 0f82 2344     		add	r3, r3, r4
 10756 0f84 132B     		cmp	r3, #19
 10757 0f86 3FF6B0AB 		bhi	.L1306
 10758 0f8a 01A1     		adr	r1, .L956
 10759 0f8c 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 10760              		.p2align 2
 10761              	.L956:
 10762 0f90 E90F0000 		.word	.L959+1
 10763 0f94 EB060000 		.word	.L1306+1
 10764 0f98 EB060000 		.word	.L1306+1
 10765 0f9c EB060000 		.word	.L1306+1
 10766 0fa0 EB060000 		.word	.L1306+1
 10767 0fa4 EB060000 		.word	.L1306+1
 10768 0fa8 EB060000 		.word	.L1306+1
 10769 0fac EB060000 		.word	.L1306+1
 10770 0fb0 EB060000 		.word	.L1306+1
 10771 0fb4 EB060000 		.word	.L1306+1
 10772 0fb8 EB060000 		.word	.L1306+1
 10773 0fbc E10F0000 		.word	.L1151+1
 10774 0fc0 EB060000 		.word	.L1306+1
 10775 0fc4 F70F0000 		.word	.L957+1
ARM GAS  /tmp/cc8lpfL1.s 			page 309


 10776 0fc8 EB060000 		.word	.L1306+1
 10777 0fcc EB060000 		.word	.L1306+1
 10778 0fd0 EB060000 		.word	.L1306+1
 10779 0fd4 EB060000 		.word	.L1306+1
 10780 0fd8 EB060000 		.word	.L1306+1
 10781 0fdc B50E0000 		.word	.L955+1
 10782              		.p2align 1
 10783              	.L1151:
 10784 0fe0 40F24314 		movw	r4, #323
 10785 0fe4 FFF707BB 		b	.L958
 10786              	.L959:
3056:src/keys.c    **** 	xeq_or_gto:
 10787              		.loc 1 3056 3 is_stmt 1 view .LVU3322
3056:src/keys.c    **** 	xeq_or_gto:
 10788              		.loc 1 3056 6 is_stmt 0 view .LVU3323
 10789 0fe8 02F54074 		add	r4, r2, #768
 10790              	.LVL905:
3058:src/keys.c    **** 			break;
 10791              		.loc 1 3058 3 is_stmt 1 view .LVU3324
3058:src/keys.c    **** 			break;
 10792              		.loc 1 3058 6 is_stmt 0 view .LVU3325
 10793 0fec 002A     		cmp	r2, #0
 10794 0fee 7FF405AB 		bne	.L970
 10795 0ff2 FFF77ABB 		b	.L1306
 10796              	.LVL906:
 10797              	.L957:
3015:src/keys.c    **** 		goto next;
 10798              		.loc 1 3015 3 is_stmt 1 view .LVU3326
3015:src/keys.c    **** 		goto next;
 10799              		.loc 1 3015 8 is_stmt 0 view .LVU3327
 10800 0ff6 5046     		mov	r0, r10
 10801 0ff8 0121     		movs	r1, #1
 10802 0ffa FFF7FEFF 		bl	advance_to_previous_label
 10803              	.LVL907:
 10804 0ffe 0121     		movs	r1, #1
 10805 1000 FFF7FEFF 		bl	advance_to_previous_label
 10806              	.LVL908:
 10807 1004 8246     		mov	r10, r0
 10808              	.LVL909:
3016:src/keys.c    **** 
 10809              		.loc 1 3016 3 is_stmt 1 view .LVU3328
 10810 1006 5BE7     		b	.L962
 10811              	.LVL910:
 10812              	.L967:
3012:src/keys.c    **** 
 10813              		.loc 1 3012 2 is_stmt 0 view .LVU3329
 10814 1008 40F22732 		movw	r2, #807
 10815 100c 9342     		cmp	r3, r2
 10816 100e 7FF46CAB 		bne	.L1306
3082:src/keys.c    **** 		goto set_pc_and_exit;
 10817              		.loc 1 3082 3 is_stmt 1 view .LVU3330
3082:src/keys.c    **** 		goto set_pc_and_exit;
 10818              		.loc 1 3082 18 is_stmt 0 view .LVU3331
 10819 1012 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10820 1016 61F38613 		bfi	r3, r1, #6, #1
 10821 101a 88F81630 		strb	r3, [r8, #22]
3083:src/keys.c    **** 
ARM GAS  /tmp/cc8lpfL1.s 			page 310


 10822              		.loc 1 3083 3 is_stmt 1 view .LVU3332
3001:src/keys.c    **** 
 10823              		.loc 1 3001 6 is_stmt 0 view .LVU3333
 10824 101e 3324     		movs	r4, #51
 10825              	.LVL911:
3083:src/keys.c    **** 
 10826              		.loc 1 3083 3 view .LVU3334
 10827 1020 FFF7E9BA 		b	.L958
 10828              	.LVL912:
 10829              	.L858:
3083:src/keys.c    **** 
 10830              		.loc 1 3083 3 view .LVU3335
 10831              	.LBE900:
 10832              	.LBE1103:
 10833              	.LBB1104:
 10834              	.LBB1010:
1622:src/keys.c    **** #endif
 10835              		.loc 1 1622 4 is_stmt 1 view .LVU3336
1622:src/keys.c    **** #endif
 10836              		.loc 1 1622 18 view .LVU3337
1622:src/keys.c    **** #endif
 10837              		.loc 1 1622 18 is_stmt 0 view .LVU3338
 10838 1024 8BF0010B 		eor	fp, fp, #1
 10839              	.LVL913:
1622:src/keys.c    **** #endif
 10840              		.loc 1 1622 18 view .LVU3339
 10841 1028 76E4     		b	.L865
 10842              	.LVL914:
 10843              	.L898:
1622:src/keys.c    **** #endif
 10844              		.loc 1 1622 18 view .LVU3340
 10845              	.LBE1010:
 10846              	.LBE1104:
 10847              	.LBB1105:
 10848              	.LBB1063:
1671:src/keys.c    **** 	
 10849              		.loc 1 1671 2 is_stmt 1 view .LVU3341
1671:src/keys.c    **** 	
 10850              		.loc 1 1671 5 is_stmt 0 view .LVU3342
 10851 102a BBF1000F 		cmp	fp, #0
 10852 102e 7FF45CAB 		bne	.L1306
 10853 1032 3368     		ldr	r3, [r6]
 10854              	.LBE1063:
 10855              	.LBE1105:
 10856              	.LBE1433:
 10857              	.LBE1508:
3409:src/keys.c    ****   //print_debug(60,c);
 10858              		.loc 1 3409 7 view .LVU3343
 10859 1034 5D46     		mov	r5, fp
 10860              	.LBB1509:
 10861              	.LBB1434:
 10862              	.LBB1106:
 10863              	.LBB1064:
1671:src/keys.c    **** 	
 10864              		.loc 1 1671 31 view .LVU3344
 10865 1036 3324     		movs	r4, #51
 10866 1038 FFF73CB8 		b	.L803
ARM GAS  /tmp/cc8lpfL1.s 			page 311


 10867              	.LVL915:
 10868              	.L1353:
1671:src/keys.c    **** 	
 10869              		.loc 1 1671 31 view .LVU3345
 10870              	.LBE1064:
 10871              	.LBE1106:
 10872              	.LBB1107:
 10873              	.LBB992:
1721:src/keys.c    **** #endif
 10874              		.loc 1 1721 44 is_stmt 1 view .LVU3346
1721:src/keys.c    **** #endif
 10875              		.loc 1 1721 52 is_stmt 0 view .LVU3347
 10876 103c 0420     		movs	r0, #4
 10877 103e FFF7FEFF 		bl	gtodot_digit
 10878              	.LVL916:
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10879              		.loc 1 1764 2 is_stmt 1 view .LVU3348
 10880              	.LBE992:
 10881              	.LBE1107:
3285:src/keys.c    **** 
 10882              		.loc 1 3285 10 is_stmt 0 view .LVU3349
 10883 1042 3324     		movs	r4, #51
 10884              	.LVL917:
3285:src/keys.c    **** 
 10885              		.loc 1 3285 10 view .LVU3350
 10886 1044 3368     		ldr	r3, [r6]
 10887 1046 FFF735B8 		b	.L803
 10888              	.L1410:
 10889 104a 00BF     		.align	2
 10890              	.L1409:
 10891 104c 00000000 		.word	main_ram
 10892 1050 00000000 		.word	.LANCHOR20
 10893 1054 00000000 		.word	.LANCHOR6
 10894 1058 00000000 		.word	.LANCHOR5
 10895              	.LVL918:
 10896              	.L1337:
3343:src/keys.c    **** 
 10897              		.loc 1 3343 3 is_stmt 1 view .LVU3351
 10898              	.LBB1108:
 10899              	.LBI1108:
3124:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 10900              		.loc 1 3124 12 view .LVU3352
 10901              	.LBB1109:
3125:src/keys.c    **** 	enum shifts shift = reset_shift();
 10902              		.loc 1 3125 2 view .LVU3353
 10903              	.LBB1110:
 10904              	.LBI1110:
 210:src/keys.c    **** {
 10905              		.loc 1 210 14 view .LVU3354
 10906              	.LBB1111:
 212:src/keys.c    ****     // K00 - K05
 10907              		.loc 1 212 3 view .LVU3355
 234:src/keys.c    **** }
 10908              		.loc 1 234 3 view .LVU3356
 10909              	.LBB1112:
 10910              	.LBI1112:
 131:src/keys.c    **** {
ARM GAS  /tmp/cc8lpfL1.s 			page 312


 10911              		.loc 1 131 12 view .LVU3357
 10912              	.LBB1113:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10913              		.loc 1 133 2 view .LVU3358
 143:src/keys.c    **** }
 10914              		.loc 1 143 2 view .LVU3359
 143:src/keys.c    **** }
 10915              		.loc 1 143 23 is_stmt 0 view .LVU3360
 10916 105c AE4B     		ldr	r3, .L1411
 10917              	.LBE1113:
 10918              	.LBE1112:
 234:src/keys.c    **** }
 10919              		.loc 1 234 28 view .LVU3361
 10920 105e AF4A     		ldr	r2, .L1411+4
 10921              	.LBB1115:
 10922              	.LBB1114:
 143:src/keys.c    **** }
 10923              		.loc 1 143 23 view .LVU3362
 10924 1060 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 10925              	.LBE1114:
 10926              	.LBE1115:
 234:src/keys.c    **** }
 10927              		.loc 1 234 10 view .LVU3363
 10928 1062 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
 10929              	.LVL919:
 234:src/keys.c    **** }
 10930              		.loc 1 234 10 view .LVU3364
 10931              	.LBE1111:
 10932              	.LBE1110:
 10933              	.LBB1116:
 10934              	.LBB1117:
 10935              	.LBB1118:
 10936              	.LBB1119:
 10937              	.LBB1120:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10938              		.loc 1 97 18 view .LVU3365
 10939 1066 FFF7FEFF 		bl	shift_down
 10940              	.LVL920:
 10941              	.LBE1120:
 10942              	.LBE1119:
 10943              	.LBE1118:
 10944              	.LBE1117:
 10945              	.LBE1116:
3125:src/keys.c    **** 	enum shifts shift = reset_shift();
 10946              		.loc 1 3125 15 view .LVU3366
 10947 106a 2BF0800B 		bic	fp, fp, #128
 10948              	.LVL921:
3126:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
 10949              		.loc 1 3126 2 is_stmt 1 view .LVU3367
 10950              	.LBB1129:
 10951              	.LBI1116:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 10952              		.loc 1 114 13 view .LVU3368
 10953              	.LBE1129:
 10954              	.LBE1109:
 10955              	.LBE1108:
 10956              	.LBE1434:
ARM GAS  /tmp/cc8lpfL1.s 			page 313


 10957              	.LBE1509:
 115:src/keys.c    **** }
 10958              		.loc 1 115 2 view .LVU3369
 10959              	.LBB1510:
 10960              	.LBB1435:
 10961              	.LBB1144:
 10962              	.LBB1136:
 10963              	.LBB1130:
 10964              	.LBB1126:
 10965              	.LBI1117:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 10966              		.loc 1 104 20 view .LVU3370
 10967              	.LBB1123:
 105:src/keys.c    **** 	State2.shifts = shift;
 10968              		.loc 1 105 2 view .LVU3371
 10969              	.LBB1122:
 10970              	.LBI1119:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 10971              		.loc 1 96 13 view .LVU3372
 10972              	.LBB1121:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10973              		.loc 1 97 2 view .LVU3373
  98:src/keys.c    **** }
 10974              		.loc 1 98 2 view .LVU3374
  98:src/keys.c    **** }
 10975              		.loc 1 98 52 is_stmt 0 view .LVU3375
 10976 106e 8146     		mov	r9, r0
 10977 1070 08B9     		cbnz	r0, .L974
 10978 1072 98F81090 		ldrb	r9, [r8, #16]	@ zero_extendqisi2
 10979              	.L974:
 10980              	.LVL922:
  98:src/keys.c    **** }
 10981              		.loc 1 98 52 view .LVU3376
 10982              	.LBE1121:
 10983              	.LBE1122:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10984              		.loc 1 106 2 is_stmt 1 view .LVU3377
 10985              	.LBE1123:
 10986              	.LBE1126:
 10987              	.LBE1130:
3127:src/keys.c    **** 	const int g_max = global_regs();
 10988              		.loc 1 3127 31 is_stmt 0 view .LVU3378
 10989 1076 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10990              	.LBB1131:
 10991              	.LBB1127:
 10992              	.LBB1124:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10993              		.loc 1 106 16 view .LVU3379
 10994 107a 0022     		movs	r2, #0
 10995              	.LBE1124:
 10996              	.LBE1127:
 10997              	.LBE1131:
3127:src/keys.c    **** 	const int g_max = global_regs();
 10998              		.loc 1 3127 46 view .LVU3380
 10999 107c D907     		lsls	r1, r3, #31
 11000              	.LBB1132:
 11001              	.LBB1128:
ARM GAS  /tmp/cc8lpfL1.s 			page 314


 11002              	.LBB1125:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11003              		.loc 1 106 16 view .LVU3381
 11004 107e 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 11005              		.loc 1 108 2 is_stmt 1 view .LVU3382
 11006              	.LVL923:
 108:src/keys.c    **** }
 11007              		.loc 1 108 2 is_stmt 0 view .LVU3383
 11008              	.LBE1125:
 11009              	.LBE1128:
 11010              	.LBE1132:
3127:src/keys.c    **** 	const int g_max = global_regs();
 11011              		.loc 1 3127 2 is_stmt 1 view .LVU3384
3127:src/keys.c    **** 	const int g_max = global_regs();
 11012              		.loc 1 3127 46 is_stmt 0 view .LVU3385
 11013 1082 00F1CC82 		bmi	.L1378
 11014 1086 4FF0700A 		mov	r10, #112
 11015              	.L975:
 11016              	.LVL924:
3128:src/keys.c    **** 
 11017              		.loc 1 3128 2 is_stmt 1 view .LVU3386
3128:src/keys.c    **** 
 11018              		.loc 1 3128 20 is_stmt 0 view .LVU3387
 11019 108a FFF7FEFF 		bl	global_regs
 11020              	.LVL925:
3130:src/keys.c    **** 		if (local_regs())
 11021              		.loc 1 3130 2 is_stmt 1 view .LVU3388
3130:src/keys.c    **** 		if (local_regs())
 11022              		.loc 1 3130 5 is_stmt 0 view .LVU3389
 11023 108e BBF1700F 		cmp	fp, #112
 11024 1092 00F0C585 		beq	.L1379
3136:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 11025              		.loc 1 3136 7 is_stmt 1 view .LVU3390
3136:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 11026              		.loc 1 3136 10 is_stmt 0 view .LVU3391
 11027 1096 BBF1090F 		cmp	fp, #9
 11028 109a 40F2E982 		bls	.L1380
3143:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 11029              		.loc 1 3143 7 is_stmt 1 view .LVU3392
3143:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 11030              		.loc 1 3143 29 is_stmt 0 view .LVU3393
 11031 109e 09F1FF33 		add	r3, r9, #-1
3143:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 11032              		.loc 1 3143 10 view .LVU3394
 11033 10a2 DBB2     		uxtb	r3, r3
 11034 10a4 012B     		cmp	r3, #1
 11035 10a6 40F2A582 		bls	.L1381
 11036              	.L983:
3147:src/keys.c    **** 		State2.digval = n;
 11037              		.loc 1 3147 7 is_stmt 1 view .LVU3395
3147:src/keys.c    **** 		State2.digval = n;
 11038              		.loc 1 3147 10 is_stmt 0 view .LVU3396
 11039 10aa BBF17F0F 		cmp	fp, #127
 11040 10ae 40F02783 		bne	.L1382
3152:src/keys.c    **** 	case K_DOWN:
 11041              		.loc 1 3152 2 is_stmt 1 view .LVU3397
ARM GAS  /tmp/cc8lpfL1.s 			page 315


 11042 10b2 073C     		subs	r4, r4, #7
 11043              	.LVL926:
3152:src/keys.c    **** 	case K_DOWN:
 11044              		.loc 1 3152 2 is_stmt 0 view .LVU3398
 11045 10b4 112C     		cmp	r4, #17
 11046 10b6 3FF618AB 		bhi	.L1306
 11047 10ba 01A3     		adr	r3, .L1118
 11048 10bc 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 11049              		.p2align 2
 11050              	.L1118:
 11051 10c0 09110000 		.word	.L996+1
 11052 10c4 EB060000 		.word	.L1306+1
 11053 10c8 EB060000 		.word	.L1306+1
 11054 10cc EB060000 		.word	.L1306+1
 11055 10d0 EB060000 		.word	.L1306+1
 11056 10d4 B9110000 		.word	.L995+1
 11057 10d8 EB060000 		.word	.L1306+1
 11058 10dc EB060000 		.word	.L1306+1
 11059 10e0 EB060000 		.word	.L1306+1
 11060 10e4 9B110000 		.word	.L993+1
 11061 10e8 EB060000 		.word	.L1306+1
 11062 10ec 6D110000 		.word	.L989+1
 11063 10f0 EB060000 		.word	.L1306+1
 11064 10f4 EB060000 		.word	.L1306+1
 11065 10f8 EB060000 		.word	.L1306+1
 11066 10fc EB060000 		.word	.L1306+1
 11067 1100 EB060000 		.word	.L1306+1
 11068 1104 37110000 		.word	.L986+1
 11069              		.p2align 1
 11070              	.L996:
3191:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 11071              		.loc 1 3191 3 is_stmt 1 view .LVU3399
3191:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 11072              		.loc 1 3191 6 is_stmt 0 view .LVU3400
 11073 1108 B9F1000F 		cmp	r9, #0
 11074 110c 7FF4EDAA 		bne	.L1306
3195:src/keys.c    **** #endif
 11075              		.loc 1 3195 4 is_stmt 1 view .LVU3401
3195:src/keys.c    **** #endif
 11076              		.loc 1 3195 8 is_stmt 0 view .LVU3402
 11077 1110 B8F80840 		ldrh	r4, [r8, #8]
 11078              	.LVL927:
3197:src/keys.c    **** 			State2.digval = 0;
 11079              		.loc 1 3197 4 is_stmt 1 view .LVU3403
3197:src/keys.c    **** 			State2.digval = 0;
 11080              		.loc 1 3197 24 is_stmt 0 view .LVU3404
 11081 1114 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
 11082 1118 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
3199:src/keys.c    **** 			return n;
 11083              		.loc 1 3199 19 view .LVU3405
 11084 111c 88F80A90 		strb	r9, [r8, #10]
3200:src/keys.c    **** 		}
 11085              		.loc 1 3200 11 view .LVU3406
 11086 1120 44F42854 		orr	r4, r4, #10752
 11087              	.LVL928:
3197:src/keys.c    **** 			State2.digval = 0;
 11088              		.loc 1 3197 24 view .LVU3407
ARM GAS  /tmp/cc8lpfL1.s 			page 316


 11089 1124 69F3C303 		bfi	r3, r9, #3, #1
3198:src/keys.c    **** 			State2.digval2 = 0;
 11090              		.loc 1 3198 18 view .LVU3408
 11091 1128 A8F80890 		strh	r9, [r8, #8]	@ movhi
 11092 112c 2546     		mov	r5, r4
3197:src/keys.c    **** 			State2.digval = 0;
 11093              		.loc 1 3197 24 view .LVU3409
 11094 112e 88F81730 		strb	r3, [r8, #23]
3198:src/keys.c    **** 			State2.digval2 = 0;
 11095              		.loc 1 3198 4 is_stmt 1 view .LVU3410
3199:src/keys.c    **** 			return n;
 11096              		.loc 1 3199 4 view .LVU3411
3200:src/keys.c    **** 		}
 11097              		.loc 1 3200 4 view .LVU3412
3200:src/keys.c    **** 		}
 11098              		.loc 1 3200 11 is_stmt 0 view .LVU3413
 11099 1132 FFF779B9 		b	.L864
 11100              	.LVL929:
 11101              	.L986:
3154:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 11102              		.loc 1 3154 3 is_stmt 1 view .LVU3414
3154:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 11103              		.loc 1 3154 13 is_stmt 0 view .LVU3415
 11104 1136 B8F80830 		ldrh	r3, [r8, #8]
3154:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 11105              		.loc 1 3154 6 view .LVU3416
 11106 113a 002B     		cmp	r3, #0
 11107 113c 00F03484 		beq	.L987
3155:src/keys.c    **** 				State2.digval = global_regs();
 11108              		.loc 1 3155 4 is_stmt 1 view .LVU3417
3155:src/keys.c    **** 				State2.digval = global_regs();
 11109              		.loc 1 3155 8 is_stmt 0 view .LVU3418
 11110 1140 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3155:src/keys.c    **** 				State2.digval = global_regs();
 11111              		.loc 1 3155 7 view .LVU3419
 11112 1144 D407     		lsls	r4, r2, #31
 11113              	.LVL930:
3155:src/keys.c    **** 				State2.digval = global_regs();
 11114              		.loc 1 3155 7 view .LVU3420
 11115 1146 02D4     		bmi	.L988
3155:src/keys.c    **** 				State2.digval = global_regs();
 11116              		.loc 1 3155 23 view .LVU3421
 11117 1148 642B     		cmp	r3, #100
 11118 114a 00F03384 		beq	.L1383
 11119              	.LVL931:
 11120              	.L988:
3157:src/keys.c    **** 		}
 11121              		.loc 1 3157 4 is_stmt 1 view .LVU3422
 11122 114e B8F80830 		ldrh	r3, [r8, #8]
 11123 1152 013B     		subs	r3, r3, #1
 11124              	.L1297:
3157:src/keys.c    **** 		}
 11125              		.loc 1 3157 4 is_stmt 0 view .LVU3423
 11126 1154 A8F80830 		strh	r3, [r8, #8]	@ movhi
 11127              	.LVL932:
 11128              	.L979:
3209:src/keys.c    **** 	return STATE_UNFINISHED;
ARM GAS  /tmp/cc8lpfL1.s 			page 317


 11129              		.loc 1 3209 2 is_stmt 1 view .LVU3424
3209:src/keys.c    **** 	return STATE_UNFINISHED;
 11130              		.loc 1 3209 16 is_stmt 0 view .LVU3425
 11131 1158 98F81420 		ldrb	r2, [r8, #20]	@ zero_extendqisi2
 11132 115c 3368     		ldr	r3, [r6]
 11133 115e 6FF3C502 		bfc	r2, #3, #3
 11134 1162 88F81420 		strb	r2, [r8, #20]
3210:src/keys.c    **** }
 11135              		.loc 1 3210 2 is_stmt 1 view .LVU3426
3210:src/keys.c    **** }
 11136              		.loc 1 3210 9 is_stmt 0 view .LVU3427
 11137 1166 3324     		movs	r4, #51
 11138 1168 FEF7A4BF 		b	.L803
 11139              	.LVL933:
 11140              	.L989:
3164:src/keys.c    **** 			State2.digval++;
 11141              		.loc 1 3164 3 is_stmt 1 view .LVU3428
3164:src/keys.c    **** 			State2.digval++;
 11142              		.loc 1 3164 13 is_stmt 0 view .LVU3429
 11143 116c B8F80830 		ldrh	r3, [r8, #8]
3164:src/keys.c    **** 			State2.digval++;
 11144              		.loc 1 3164 27 view .LVU3430
 11145 1170 0AF1FF3A 		add	r10, r10, #-1
 11146              	.LVL934:
3164:src/keys.c    **** 			State2.digval++;
 11147              		.loc 1 3164 6 view .LVU3431
 11148 1174 5345     		cmp	r3, r10
 11149 1176 80F2D984 		bge	.L990
3165:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 11150              		.loc 1 3165 4 is_stmt 1 view .LVU3432
3166:src/keys.c    **** 				State2.digval = regX_idx;
 11151              		.loc 1 3166 8 is_stmt 0 view .LVU3433
 11152 117a 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3165:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 11153              		.loc 1 3165 17 view .LVU3434
 11154 117e 0133     		adds	r3, r3, #1
 11155 1180 9CB2     		uxth	r4, r3
 11156              	.LVL935:
3166:src/keys.c    **** 				State2.digval = regX_idx;
 11157              		.loc 1 3166 7 view .LVU3435
 11158 1182 D007     		lsls	r0, r2, #31
 11159              	.LVL936:
3165:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 11160              		.loc 1 3165 17 view .LVU3436
 11161 1184 A8F80840 		strh	r4, [r8, #8]	@ movhi
3166:src/keys.c    **** 				State2.digval = regX_idx;
 11162              		.loc 1 3166 4 is_stmt 1 view .LVU3437
3166:src/keys.c    **** 				State2.digval = regX_idx;
 11163              		.loc 1 3166 7 is_stmt 0 view .LVU3438
 11164 1188 E6D4     		bmi	.L979
3166:src/keys.c    **** 				State2.digval = regX_idx;
 11165              		.loc 1 3166 43 view .LVU3439
 11166 118a FFF7FEFF 		bl	global_regs
 11167              	.LVL937:
3166:src/keys.c    **** 				State2.digval = regX_idx;
 11168              		.loc 1 3166 23 view .LVU3440
 11169 118e 8442     		cmp	r4, r0
ARM GAS  /tmp/cc8lpfL1.s 			page 318


 11170 1190 E2D1     		bne	.L979
3167:src/keys.c    **** 		}
 11171              		.loc 1 3167 5 is_stmt 1 view .LVU3441
3167:src/keys.c    **** 		}
 11172              		.loc 1 3167 19 is_stmt 0 view .LVU3442
 11173 1192 6423     		movs	r3, #100
 11174 1194 A8F80830 		strh	r3, [r8, #8]	@ movhi
 11175 1198 DEE7     		b	.L979
 11176              	.LVL938:
 11177              	.L993:
3181:src/keys.c    **** 			return STATE_UNFINISHED;
 11178              		.loc 1 3181 3 is_stmt 1 view .LVU3443
3181:src/keys.c    **** 			return STATE_UNFINISHED;
 11179              		.loc 1 3181 7 is_stmt 0 view .LVU3444
 11180 119a 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3181:src/keys.c    **** 			return STATE_UNFINISHED;
 11181              		.loc 1 3181 6 view .LVU3445
 11182 119e 13F02002 		ands	r2, r3, #32
 11183 11a2 7FF4A2AA 		bne	.L1306
3183:src/keys.c    **** 
 11184              		.loc 1 3183 3 is_stmt 1 view .LVU3446
3205:src/keys.c    **** 	State2.digval = 0;
 11185              		.loc 1 3205 2 view .LVU3447
3205:src/keys.c    **** 	State2.digval = 0;
 11186              		.loc 1 3205 22 is_stmt 0 view .LVU3448
 11187 11a6 62F3C303 		bfi	r3, r2, #3, #1
 11188 11aa 88F81730 		strb	r3, [r8, #23]
3206:src/keys.c    **** 	State2.digval2 = 0;
 11189              		.loc 1 3206 2 is_stmt 1 view .LVU3449
3206:src/keys.c    **** 	State2.digval2 = 0;
 11190              		.loc 1 3206 16 is_stmt 0 view .LVU3450
 11191 11ae A8F80820 		strh	r2, [r8, #8]	@ movhi
3207:src/keys.c    **** reset_window:
 11192              		.loc 1 3207 2 is_stmt 1 view .LVU3451
3207:src/keys.c    **** reset_window:
 11193              		.loc 1 3207 17 is_stmt 0 view .LVU3452
 11194 11b2 88F80A20 		strb	r2, [r8, #10]
 11195 11b6 CFE7     		b	.L979
 11196              	.L995:
3186:src/keys.c    **** 			State2.disp_as_alpha = 1;
 11197              		.loc 1 3186 3 is_stmt 1 view .LVU3453
3186:src/keys.c    **** 			State2.disp_as_alpha = 1;
 11198              		.loc 1 3186 6 is_stmt 0 view .LVU3454
 11199 11b8 B9F1010F 		cmp	r9, #1
 11200 11bc A4D1     		bne	.L996
3187:src/keys.c    **** 			goto reset_window;
 11201              		.loc 1 3187 4 is_stmt 1 view .LVU3455
3187:src/keys.c    **** 			goto reset_window;
 11202              		.loc 1 3187 25 is_stmt 0 view .LVU3456
 11203 11be 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11204 11c2 43F00403 		orr	r3, r3, #4
 11205 11c6 88F81630 		strb	r3, [r8, #22]
3188:src/keys.c    **** 		}
 11206              		.loc 1 3188 4 is_stmt 1 view .LVU3457
 11207 11ca C5E7     		b	.L979
 11208              	.LVL939:
 11209              	.L1338:
ARM GAS  /tmp/cc8lpfL1.s 			page 319


3188:src/keys.c    **** 		}
 11210              		.loc 1 3188 4 is_stmt 0 view .LVU3458
 11211              	.LBE1136:
 11212              	.LBE1144:
3346:src/keys.c    **** 
 11213              		.loc 1 3346 3 is_stmt 1 view .LVU3459
 11214              	.LBB1145:
 11215              	.LBI1145:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 11216              		.loc 1 114 13 view .LVU3460
 11217              	.LBE1145:
 11218              	.LBE1435:
 11219              	.LBE1510:
 115:src/keys.c    **** }
 11220              		.loc 1 115 2 view .LVU3461
 11221              	.LBB1511:
 11222              	.LBB1436:
 11223              	.LBB1152:
 11224              	.LBB1146:
 11225              	.LBI1146:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 11226              		.loc 1 104 20 view .LVU3462
 11227              	.LBB1147:
 105:src/keys.c    **** 	State2.shifts = shift;
 11228              		.loc 1 105 2 view .LVU3463
 11229              	.LBB1148:
 11230              	.LBI1148:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 11231              		.loc 1 96 13 view .LVU3464
 11232              	.LBB1149:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11233              		.loc 1 97 2 view .LVU3465
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11234              		.loc 1 97 18 is_stmt 0 view .LVU3466
 11235 11cc FFF7FEFF 		bl	shift_down
 11236              	.LVL940:
  98:src/keys.c    **** }
 11237              		.loc 1 98 2 is_stmt 1 view .LVU3467
  98:src/keys.c    **** }
 11238              		.loc 1 98 52 is_stmt 0 view .LVU3468
 11239 11d0 0146     		mov	r1, r0
 11240 11d2 08B9     		cbnz	r0, .L999
 11241 11d4 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 11242              	.L999:
 11243              	.LVL941:
  98:src/keys.c    **** }
 11244              		.loc 1 98 52 view .LVU3469
 11245              	.LBE1149:
 11246              	.LBE1148:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11247              		.loc 1 106 2 is_stmt 1 view .LVU3470
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11248              		.loc 1 106 16 is_stmt 0 view .LVU3471
 11249 11d8 0022     		movs	r2, #0
 11250              	.LBE1147:
 11251              	.LBE1146:
 11252              	.LBE1152:
ARM GAS  /tmp/cc8lpfL1.s 			page 320


3346:src/keys.c    **** 
 11253              		.loc 1 3346 10 view .LVU3472
 11254 11da 2046     		mov	r0, r4
 11255              	.LBB1153:
 11256              	.LBB1151:
 11257              	.LBB1150:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11258              		.loc 1 106 16 view .LVU3473
 11259 11dc 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 11260              		.loc 1 108 2 is_stmt 1 view .LVU3474
 11261              	.LVL942:
 108:src/keys.c    **** }
 11262              		.loc 1 108 2 is_stmt 0 view .LVU3475
 11263              	.LBE1150:
 11264              	.LBE1151:
 11265              	.LBE1153:
3346:src/keys.c    **** 
 11266              		.loc 1 3346 10 view .LVU3476
 11267 11e0 FFF7FEFF 		bl	process_catalogue
 11268              	.LVL943:
3346:src/keys.c    **** 
 11269              		.loc 1 3346 10 view .LVU3477
 11270 11e4 0446     		mov	r4, r0
 11271 11e6 FFF7F9B8 		b	.L837
 11272              	.LVL944:
 11273              	.L1168:
 11274              	.LBB1154:
 11275              	.LBB976:
2373:src/keys.c    **** 	}
 11276              		.loc 1 2373 18 view .LVU3478
 11277 11ea 2724     		movs	r4, #39
 11278              	.LVL945:
2373:src/keys.c    **** 	}
 11279              		.loc 1 2373 47 view .LVU3479
 11280 11ec 1C44     		add	r4, r4, r3
 11281 11ee FFF7F5B8 		b	.L837
 11282              	.LVL946:
 11283              	.L1169:
2373:src/keys.c    **** 	}
 11284              		.loc 1 2373 18 view .LVU3480
 11285 11f2 1E24     		movs	r4, #30
 11286              	.LVL947:
2373:src/keys.c    **** 	}
 11287              		.loc 1 2373 47 view .LVU3481
 11288 11f4 1C44     		add	r4, r4, r3
 11289 11f6 FFF7F1B8 		b	.L837
 11290              	.LVL948:
 11291              	.L1369:
2373:src/keys.c    **** 	}
 11292              		.loc 1 2373 47 view .LVU3482
 11293              	.LBE976:
 11294              	.LBE1154:
 11295              	.LBB1155:
 11296              	.LBB861:
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 11297              		.loc 1 312 74 view .LVU3483
ARM GAS  /tmp/cc8lpfL1.s 			page 321


 11298 11fa D8F81410 		ldr	r1, [r8, #20]
 11299 11fe DFF830C1 		ldr	ip, .L1411+24
 11300 1202 11EA0C0F 		tst	r1, ip
 11301 1206 3FF47CAC 		beq	.L906
 315:src/keys.c    ****     /*
 11302              		.loc 1 315 3 is_stmt 1 view .LVU3484
 315:src/keys.c    ****     /*
 11303              		.loc 1 315 23 is_stmt 0 view .LVU3485
 11304 120a 454B     		ldr	r3, .L1411+8
 315:src/keys.c    ****     /*
 11305              		.loc 1 315 6 view .LVU3486
 11306 120c 1942     		tst	r1, r3
 11307 120e 3FF41CA8 		beq	.L1126
 11308 1212 E3E4     		b	.L916
 11309              	.LVL949:
 11310              	.L1144:
 11311              	.LBB852:
 371:src/keys.c    **** #ifndef WINGUI
 11312              		.loc 1 371 8 view .LVU3487
 11313 1214 434B     		ldr	r3, .L1411+12
 377:src/keys.c    ****   }
 11314              		.loc 1 377 9 view .LVU3488
 11315 1216 0C21     		movs	r1, #12
 373:src/keys.c    **** #else
 11316              		.loc 1 373 27 view .LVU3489
 11317 1218 4FF0010C 		mov	ip, #1
 11318 121c FFF722B8 		b	.L918
 11319              	.LVL950:
 11320              	.L1366:
 373:src/keys.c    **** #else
 11321              		.loc 1 373 27 view .LVU3490
 11322              	.LBE852:
 294:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 11323              		.loc 1 294 27 view .LVU3491
 11324 1220 242C     		cmp	r4, #36
 11325 1222 7FF42BA8 		bne	.L923
 11326              	.L1143:
 295:src/keys.c    **** 		if ( (shift == SHIFT_F) && (c == K20) ) {
 11327              		.loc 1 295 11 view .LVU3492
 11328 1226 1623     		movs	r3, #22
 11329 1228 6BE4     		b	.L906
 11330              	.LVL951:
 11331              	.L1356:
 295:src/keys.c    **** 		if ( (shift == SHIFT_F) && (c == K20) ) {
 11332              		.loc 1 295 11 view .LVU3493
 11333              	.LBE861:
 11334              	.LBE1155:
 11335              	.LBB1156:
 11336              	.LBB993:
1735:src/keys.c    **** 	}
 11337              		.loc 1 1735 3 is_stmt 1 view .LVU3494
1735:src/keys.c    **** 	}
 11338              		.loc 1 1735 6 is_stmt 0 view .LVU3495
 11339 122a B8F80800 		ldrh	r0, [r8, #8]
 11340              	.LVL952:
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11341              		.loc 1 1764 2 is_stmt 1 view .LVU3496
ARM GAS  /tmp/cc8lpfL1.s 			page 322


 11342 122e 3DE4     		b	.L840
 11343              	.LVL953:
 11344              	.L1354:
1725:src/keys.c    **** 		goto fin;
 11345              		.loc 1 1725 3 view .LVU3497
 11346              	.LBB986:
 11347              	.LBI986:
1697:src/keys.c    **** 	const int code = 100 + n;
 11348              		.loc 1 1697 12 view .LVU3498
 11349              	.LBB987:
1698:src/keys.c    **** 	unsigned int pc = state_pc();
 11350              		.loc 1 1698 2 view .LVU3499
1699:src/keys.c    **** 
 11351              		.loc 1 1699 2 view .LVU3500
1699:src/keys.c    **** 
 11352              		.loc 1 1699 20 is_stmt 0 view .LVU3501
 11353 1230 DFF8F4A0 		ldr	r10, .L1411+16
 11354 1234 DAF80030 		ldr	r3, [r10]
 11355              	.LVL954:
1699:src/keys.c    **** 
 11356              		.loc 1 1699 15 view .LVU3502
 11357 1238 B3F8E007 		ldrh	r0, [r3, #2016]
 11358              	.LVL955:
1701:src/keys.c    **** 		pc = 1;
 11359              		.loc 1 1701 2 is_stmt 1 view .LVU3503
1701:src/keys.c    **** 		pc = 1;
 11360              		.loc 1 1701 5 is_stmt 0 view .LVU3504
 11361 123c 830B     		lsrs	r3, r0, #14
1702:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
 11362              		.loc 1 1702 6 view .LVU3505
 11363 123e 032B     		cmp	r3, #3
 11364              	.LVL956:
1703:src/keys.c    **** 	if (pc > 0)
 11365              		.loc 1 1703 2 is_stmt 1 view .LVU3506
1703:src/keys.c    **** 	if (pc > 0)
 11366              		.loc 1 1703 7 is_stmt 0 view .LVU3507
 11367 1240 08BF     		it	eq
 11368 1242 0120     		moveq	r0, #1
 11369              	.LVL957:
1703:src/keys.c    **** 	if (pc > 0)
 11370              		.loc 1 1703 7 view .LVU3508
 11371 1244 04F16401 		add	r1, r4, #100
 11372              	.LVL958:
1703:src/keys.c    **** 	if (pc > 0)
 11373              		.loc 1 1703 7 view .LVU3509
 11374 1248 0322     		movs	r2, #3
 11375              	.LVL959:
1703:src/keys.c    **** 	if (pc > 0)
 11376              		.loc 1 1703 7 view .LVU3510
 11377 124a FFF7FEFF 		bl	find_label_from
 11378              	.LVL960:
1704:src/keys.c    **** 		return pc;
 11379              		.loc 1 1704 2 is_stmt 1 view .LVU3511
1704:src/keys.c    **** 		return pc;
 11380              		.loc 1 1704 5 is_stmt 0 view .LVU3512
 11381 124e 0028     		cmp	r0, #0
 11382 1250 7FF423AB 		bne	.L849
ARM GAS  /tmp/cc8lpfL1.s 			page 323


1706:src/keys.c    **** }
 11383              		.loc 1 1706 2 is_stmt 1 view .LVU3513
1706:src/keys.c    **** }
 11384              		.loc 1 1706 9 is_stmt 0 view .LVU3514
 11385 1254 DAF80030 		ldr	r3, [r10]
 11386 1258 B3F8E007 		ldrh	r0, [r3, #2016]
 11387              	.LVL961:
1706:src/keys.c    **** }
 11388              		.loc 1 1706 9 view .LVU3515
 11389              	.LBE987:
 11390              	.LBE986:
1726:src/keys.c    **** 	}
 11391              		.loc 1 1726 3 is_stmt 1 view .LVU3516
 11392 125c FFF71DBB 		b	.L849
 11393              	.LVL962:
 11394              	.L1355:
1730:src/keys.c    **** 		goto fin;
 11395              		.loc 1 1730 3 view .LVU3517
1730:src/keys.c    **** 		goto fin;
 11396              		.loc 1 1730 11 is_stmt 0 view .LVU3518
 11397 1260 314B     		ldr	r3, .L1411+16
 11398              	.LVL963:
1730:src/keys.c    **** 		goto fin;
 11399              		.loc 1 1730 11 view .LVU3519
 11400 1262 1B68     		ldr	r3, [r3]
1730:src/keys.c    **** 		goto fin;
 11401              		.loc 1 1730 9 view .LVU3520
 11402 1264 5888     		ldrh	r0, [r3, #2]
 11403              	.LVL964:
1731:src/keys.c    **** 	}
 11404              		.loc 1 1731 3 is_stmt 1 view .LVU3521
 11405 1266 FFF718BB 		b	.L849
 11406              	.LVL965:
 11407              	.L1339:
1731:src/keys.c    **** 	}
 11408              		.loc 1 1731 3 is_stmt 0 view .LVU3522
 11409              	.LBE993:
 11410              	.LBE1156:
3350:src/keys.c    **** #else
 11411              		.loc 1 3350 3 is_stmt 1 view .LVU3523
 11412              	.LBB1157:
 11413              	.LBI1157:
1777:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
 11414              		.loc 1 1777 12 view .LVU3524
 11415              	.LBB1158:
1778:src/keys.c    ****         int op = STATE_UNFINISHED;
 11416              		.loc 1 1778 2 view .LVU3525
1778:src/keys.c    ****         int op = STATE_UNFINISHED;
 11417              		.loc 1 1778 33 is_stmt 0 view .LVU3526
 11418 126a 98F80D90 		ldrb	r9, [r8, #13]	@ zero_extendqisi2
 11419              	.LBB1159:
 11420              	.LBB1160:
 11421              	.LBB1161:
 11422              	.LBB1162:
 11423              	.LBB1163:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11424              		.loc 1 97 18 view .LVU3527
ARM GAS  /tmp/cc8lpfL1.s 			page 324


 11425 126e FFF7FEFF 		bl	shift_down
 11426              	.LVL966:
 11427              	.LBE1163:
 11428              	.LBE1162:
 11429              	.LBE1161:
 11430              	.LBE1160:
 11431              	.LBE1159:
1778:src/keys.c    ****         int op = STATE_UNFINISHED;
 11432              		.loc 1 1778 15 view .LVU3528
 11433 1272 CA46     		mov	r10, r9
 11434              	.LVL967:
1779:src/keys.c    **** 	const enum shifts shift = reset_shift();
 11435              		.loc 1 1779 9 is_stmt 1 view .LVU3529
1780:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
 11436              		.loc 1 1780 2 view .LVU3530
 11437              	.LBB1172:
 11438              	.LBI1159:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 11439              		.loc 1 114 13 view .LVU3531
 11440              	.LBE1172:
 11441              	.LBE1158:
 11442              	.LBE1157:
 11443              	.LBE1436:
 11444              	.LBE1511:
 115:src/keys.c    **** }
 11445              		.loc 1 115 2 view .LVU3532
 11446              	.LBB1512:
 11447              	.LBB1437:
 11448              	.LBB1224:
 11449              	.LBB1210:
 11450              	.LBB1173:
 11451              	.LBB1169:
 11452              	.LBI1160:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 11453              		.loc 1 104 20 view .LVU3533
 11454              	.LBB1166:
 105:src/keys.c    **** 	State2.shifts = shift;
 11455              		.loc 1 105 2 view .LVU3534
 11456              	.LBB1165:
 11457              	.LBI1162:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 11458              		.loc 1 96 13 view .LVU3535
 11459              	.LBB1164:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11460              		.loc 1 97 2 view .LVU3536
  98:src/keys.c    **** }
 11461              		.loc 1 98 2 view .LVU3537
  98:src/keys.c    **** }
 11462              		.loc 1 98 52 is_stmt 0 view .LVU3538
 11463 1274 08B9     		cbnz	r0, .L1001
 11464 1276 98F81000 		ldrb	r0, [r8, #16]	@ zero_extendqisi2
 11465              	.LVL968:
 11466              	.L1001:
  98:src/keys.c    **** }
 11467              		.loc 1 98 52 view .LVU3539
 11468              	.LBE1164:
 11469              	.LBE1165:
ARM GAS  /tmp/cc8lpfL1.s 			page 325


 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11470              		.loc 1 106 2 is_stmt 1 view .LVU3540
 11471              	.LBE1166:
 11472              	.LBE1169:
 11473              	.LBE1173:
 11474              	.LBB1174:
 11475              	.LBB1175:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11476              		.loc 1 485 6 is_stmt 0 view .LVU3541
 11477 127a 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
 11478              	.LBE1175:
 11479              	.LBE1174:
 11480              	.LBB1191:
 11481              	.LBB1170:
 11482              	.LBB1167:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11483              		.loc 1 106 16 view .LVU3542
 11484 127e 4FF0000C 		mov	ip, #0
 11485              	.LBE1167:
 11486              	.LBE1170:
 11487              	.LBE1191:
 11488              	.LBB1192:
 11489              	.LBB1186:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11490              		.loc 1 485 5 view .LVU3543
 11491 1282 CA06     		lsls	r2, r1, #27
 11492              	.LBE1186:
 11493              	.LBE1192:
 11494              	.LBB1193:
 11495              	.LBB1171:
 11496              	.LBB1168:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11497              		.loc 1 106 16 view .LVU3544
 11498 1284 88F810C0 		strb	ip, [r8, #16]
 108:src/keys.c    **** }
 11499              		.loc 1 108 2 is_stmt 1 view .LVU3545
 11500              	.LVL969:
 108:src/keys.c    **** }
 11501              		.loc 1 108 2 is_stmt 0 view .LVU3546
 11502              	.LBE1168:
 11503              	.LBE1171:
 11504              	.LBE1193:
1781:src/keys.c    **** 	State2.alpha_pos = 0;
 11505              		.loc 1 1781 2 is_stmt 1 view .LVU3547
1781:src/keys.c    **** 	State2.alpha_pos = 0;
 11506              		.loc 1 1781 11 is_stmt 0 view .LVU3548
 11507 1288 0346     		mov	r3, r0
 11508              	.LVL970:
 11509              	.LBB1194:
 11510              	.LBI1174:
 435:src/keys.c    **** {
 11511              		.loc 1 435 12 is_stmt 1 view .LVU3549
 11512              	.LBB1187:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 11513              		.loc 1 437 2 view .LVU3550
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11514              		.loc 1 485 2 view .LVU3551
ARM GAS  /tmp/cc8lpfL1.s 			page 326


 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11515              		.loc 1 485 5 is_stmt 0 view .LVU3552
 11516 128a 54D5     		bpl	.L1002
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 11517              		.loc 1 486 3 is_stmt 1 view .LVU3553
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 11518              		.loc 1 486 6 is_stmt 0 view .LVU3554
 11519 128c 0028     		cmp	r0, #0
 11520 128e 51D0     		beq	.L1157
 488:src/keys.c    **** 			shift = SHIFT_LC_G;
 11521              		.loc 1 488 8 is_stmt 1 view .LVU3555
 11522              	.LBB1176:
 11523              	.LBB1177:
 143:src/keys.c    **** }
 11524              		.loc 1 143 23 is_stmt 0 view .LVU3556
 11525 1290 214A     		ldr	r2, .L1411
 11526              	.LBE1177:
 11527              	.LBE1176:
 491:src/keys.c    **** }
 11528              		.loc 1 491 49 view .LVU3557
 11529 1292 264B     		ldr	r3, .L1411+20
 11530              	.LBB1182:
 11531              	.LBB1178:
 143:src/keys.c    **** }
 11532              		.loc 1 143 23 view .LVU3558
 11533 1294 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 11534              	.LBE1178:
 11535              	.LBE1182:
 11536              	.LBE1187:
 11537              	.LBE1194:
1782:src/keys.c    **** 
 11538              		.loc 1 1782 19 view .LVU3559
 11539 1296 88F80DC0 		strb	ip, [r8, #13]
 11540              	.LBB1195:
 11541              	.LBB1188:
 489:src/keys.c    **** 	}
 11542              		.loc 1 489 10 view .LVU3560
 11543 129a 0228     		cmp	r0, #2
 491:src/keys.c    **** }
 11544              		.loc 1 491 49 view .LVU3561
 11545 129c 4FF0060C 		mov	ip, #6
 11546 12a0 0CFB0232 		mla	r2, ip, r2, r3
 489:src/keys.c    **** 	}
 11547              		.loc 1 489 10 view .LVU3562
 11548 12a4 14BF     		ite	ne
 11549 12a6 0346     		movne	r3, r0
 11550 12a8 0523     		moveq	r3, #5
 11551              	.LVL971:
 491:src/keys.c    **** }
 11552              		.loc 1 491 2 is_stmt 1 view .LVU3563
 11553              	.LBB1183:
 11554              	.LBI1176:
 131:src/keys.c    **** {
 11555              		.loc 1 131 12 view .LVU3564
 11556              	.LBB1179:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 11557              		.loc 1 133 2 view .LVU3565
ARM GAS  /tmp/cc8lpfL1.s 			page 327


 143:src/keys.c    **** }
 11558              		.loc 1 143 2 view .LVU3566
 143:src/keys.c    **** }
 11559              		.loc 1 143 2 is_stmt 0 view .LVU3567
 11560 12aa 063C     		subs	r4, r4, #6
 11561              	.LVL972:
 143:src/keys.c    **** }
 11562              		.loc 1 143 2 view .LVU3568
 11563              	.LBE1179:
 11564              	.LBE1183:
 491:src/keys.c    **** }
 11565              		.loc 1 491 49 view .LVU3569
 11566 12ac D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 11567              	.LVL973:
 491:src/keys.c    **** }
 11568              		.loc 1 491 49 view .LVU3570
 11569              	.LBE1188:
 11570              	.LBE1195:
1782:src/keys.c    **** 
 11571              		.loc 1 1782 2 is_stmt 1 view .LVU3571
1784:src/keys.c    **** 	case K10:	// STO
 11572              		.loc 1 1784 2 view .LVU3572
 11573 12ae 212C     		cmp	r4, #33
 11574 12b0 23D8     		bhi	.L1005
 11575 12b2 DFE814F0 		tbh	[pc, r4, lsl #1]
 11576              	.L1119:
 11577 12b6 0304     		.2byte	(.L1014-.L1119)/2
 11578 12b8 F003     		.2byte	(.L1013-.L1119)/2
 11579 12ba 2200     		.2byte	(.L1005-.L1119)/2
 11580 12bc 2200     		.2byte	(.L1005-.L1119)/2
 11581 12be 2200     		.2byte	(.L1005-.L1119)/2
 11582 12c0 2200     		.2byte	(.L1005-.L1119)/2
 11583 12c2 7402     		.2byte	(.L1012-.L1119)/2
 11584 12c4 2200     		.2byte	(.L1005-.L1119)/2
 11585 12c6 2200     		.2byte	(.L1005-.L1119)/2
 11586 12c8 2200     		.2byte	(.L1005-.L1119)/2
 11587 12ca 6702     		.2byte	(.L1021-.L1119)/2
 11588 12cc 2200     		.2byte	(.L1005-.L1119)/2
 11589 12ce 9404     		.2byte	(.L1010-.L1119)/2
 11590 12d0 2200     		.2byte	(.L1005-.L1119)/2
 11591 12d2 2200     		.2byte	(.L1005-.L1119)/2
 11592 12d4 2200     		.2byte	(.L1005-.L1119)/2
 11593 12d6 2200     		.2byte	(.L1005-.L1119)/2
 11594 12d8 2200     		.2byte	(.L1005-.L1119)/2
 11595 12da 8204     		.2byte	(.L1009-.L1119)/2
 11596 12dc 2200     		.2byte	(.L1005-.L1119)/2
 11597 12de 2200     		.2byte	(.L1005-.L1119)/2
 11598 12e0 2200     		.2byte	(.L1005-.L1119)/2
 11599 12e2 2200     		.2byte	(.L1005-.L1119)/2
 11600 12e4 2200     		.2byte	(.L1005-.L1119)/2
 11601 12e6 2200     		.2byte	(.L1005-.L1119)/2
 11602 12e8 2200     		.2byte	(.L1005-.L1119)/2
 11603 12ea 2200     		.2byte	(.L1005-.L1119)/2
 11604 12ec 2200     		.2byte	(.L1005-.L1119)/2
 11605 12ee 2200     		.2byte	(.L1005-.L1119)/2
 11606 12f0 2200     		.2byte	(.L1005-.L1119)/2
 11607 12f2 6204     		.2byte	(.L1008-.L1119)/2
ARM GAS  /tmp/cc8lpfL1.s 			page 328


 11608 12f4 2200     		.2byte	(.L1005-.L1119)/2
 11609 12f6 2200     		.2byte	(.L1005-.L1119)/2
 11610 12f8 5604     		.2byte	(.L1006-.L1119)/2
 11611              	.LVL974:
 11612              		.p2align 1
 11613              	.L1005:
1891:src/keys.c    **** 		return STATE_UNFINISHED;
 11614              		.loc 1 1891 2 view .LVU3573
1891:src/keys.c    **** 		return STATE_UNFINISHED;
 11615              		.loc 1 1891 5 is_stmt 0 view .LVU3574
 11616 12fa 002A     		cmp	r2, #0
 11617 12fc 00F0E881 		beq	.L1384
1893:src/keys.c    **** }
 11618              		.loc 1 1893 2 is_stmt 1 view .LVU3575
1893:src/keys.c    **** }
 11619              		.loc 1 1893 9 is_stmt 0 view .LVU3576
 11620 1300 42F48844 		orr	r4, r2, #17408
 11621 1304 2546     		mov	r5, r4
 11622 1306 FFF78FB8 		b	.L864
 11623              	.LVL975:
 11624              	.L1361:
1893:src/keys.c    **** }
 11625              		.loc 1 1893 9 view .LVU3577
 11626              	.LBE1210:
 11627              	.LBE1224:
 11628              	.LBB1225:
 11629              	.LBB1031:
2927:src/keys.c    **** 		return STATE_UNFINISHED;
 11630              		.loc 1 2927 3 is_stmt 1 view .LVU3578
 11631 130a 3368     		ldr	r3, [r6]
 11632              	.LVL976:
2927:src/keys.c    **** 		return STATE_UNFINISHED;
 11633              		.loc 1 2927 17 is_stmt 0 view .LVU3579
 11634 130c 88F80C00 		strb	r0, [r8, #12]
2928:src/keys.c    **** 	} 
 11635              		.loc 1 2928 3 is_stmt 1 view .LVU3580
 11636              	.LBE1031:
 11637              	.LBE1225:
3294:src/keys.c    **** 
 11638              		.loc 1 3294 10 is_stmt 0 view .LVU3581
 11639 1310 3324     		movs	r4, #51
 11640              	.LVL977:
 11641              	.LBB1226:
 11642              	.LBB1032:
2928:src/keys.c    **** 	} 
 11643              		.loc 1 2928 10 view .LVU3582
 11644 1312 FEF7CFBE 		b	.L803
 11645              	.L1412:
 11646 1316 00BF     		.align	2
 11647              	.L1411:
 11648 1318 00000000 		.word	.LANCHOR6
 11649 131c 00000000 		.word	.LANCHOR5
 11650 1320 00080800 		.word	526336
 11651 1324 00000000 		.word	.LANCHOR17
 11652 1328 00000000 		.word	main_ram
 11653 132c 00000000 		.word	.LANCHOR15
 11654 1330 000A4000 		.word	4196864
ARM GAS  /tmp/cc8lpfL1.s 			page 329


 11655              	.LVL978:
 11656              	.L1157:
2928:src/keys.c    **** 	} 
 11657              		.loc 1 2928 10 view .LVU3583
 11658              	.LBE1032:
 11659              	.LBE1226:
 11660              	.LBB1227:
 11661              	.LBB1211:
 11662              	.LBB1196:
 11663              	.LBB1189:
 487:src/keys.c    **** 		else if (shift == SHIFT_G)
 11664              		.loc 1 487 10 view .LVU3584
 11665 1334 0423     		movs	r3, #4
 11666              	.L1002:
 11667              	.LVL979:
 491:src/keys.c    **** }
 11668              		.loc 1 491 2 is_stmt 1 view .LVU3585
 11669              	.LBB1184:
 131:src/keys.c    **** {
 11670              		.loc 1 131 12 view .LVU3586
 11671              	.LBB1180:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 11672              		.loc 1 133 2 view .LVU3587
 143:src/keys.c    **** }
 11673              		.loc 1 143 2 view .LVU3588
 143:src/keys.c    **** }
 11674              		.loc 1 143 23 is_stmt 0 view .LVU3589
 11675 1336 CB4A     		ldr	r2, .L1413
 11676              	.LBE1180:
 11677              	.LBE1184:
 491:src/keys.c    **** }
 11678              		.loc 1 491 49 view .LVU3590
 11679 1338 DFF830C3 		ldr	ip, .L1413+8
 11680              	.LBB1185:
 11681              	.LBB1181:
 143:src/keys.c    **** }
 11682              		.loc 1 143 23 view .LVU3591
 11683 133c 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 11684              	.LBE1181:
 11685              	.LBE1185:
 491:src/keys.c    **** }
 11686              		.loc 1 491 49 view .LVU3592
 11687 133e 4FF0060E 		mov	lr, #6
 11688 1342 0EFB02C2 		mla	r2, lr, r2, ip
 11689 1346 063C     		subs	r4, r4, #6
 11690              	.LVL980:
 491:src/keys.c    **** }
 11691              		.loc 1 491 49 view .LVU3593
 11692              	.LBE1189:
 11693              	.LBE1196:
1782:src/keys.c    **** 
 11694              		.loc 1 1782 19 view .LVU3594
 11695 1348 4FF0000C 		mov	ip, #0
 11696              	.LBB1197:
 11697              	.LBB1190:
 491:src/keys.c    **** }
 11698              		.loc 1 491 49 view .LVU3595
ARM GAS  /tmp/cc8lpfL1.s 			page 330


 11699 134c D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 11700              	.LVL981:
 491:src/keys.c    **** }
 11701              		.loc 1 491 49 view .LVU3596
 11702              	.LBE1190:
 11703              	.LBE1197:
1782:src/keys.c    **** 
 11704              		.loc 1 1782 2 is_stmt 1 view .LVU3597
1782:src/keys.c    **** 
 11705              		.loc 1 1782 19 is_stmt 0 view .LVU3598
 11706 134e 88F80DC0 		strb	ip, [r8, #13]
1784:src/keys.c    **** 	case K10:	// STO
 11707              		.loc 1 1784 2 is_stmt 1 view .LVU3599
 11708 1352 212C     		cmp	r4, #33
 11709 1354 D1D8     		bhi	.L1005
 11710 1356 01A3     		adr	r3, .L1007
 11711 1358 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 11712              		.p2align 2
 11713              	.L1007:
 11714 135c BD1A0000 		.word	.L1014+1
 11715 1360 971A0000 		.word	.L1013+1
 11716 1364 FB120000 		.word	.L1005+1
 11717 1368 FB120000 		.word	.L1005+1
 11718 136c FB120000 		.word	.L1005+1
 11719 1370 FB120000 		.word	.L1005+1
 11720 1374 9F170000 		.word	.L1012+1
 11721 1378 FB120000 		.word	.L1005+1
 11722 137c FB120000 		.word	.L1005+1
 11723 1380 FB120000 		.word	.L1005+1
 11724 1384 7F170000 		.word	.L1011+1
 11725 1388 FB120000 		.word	.L1005+1
 11726 138c DF1B0000 		.word	.L1010+1
 11727 1390 FB120000 		.word	.L1005+1
 11728 1394 FB120000 		.word	.L1005+1
 11729 1398 FB120000 		.word	.L1005+1
 11730 139c FB120000 		.word	.L1005+1
 11731 13a0 FB120000 		.word	.L1005+1
 11732 13a4 BB1B0000 		.word	.L1009+1
 11733 13a8 FB120000 		.word	.L1005+1
 11734 13ac FB120000 		.word	.L1005+1
 11735 13b0 FB120000 		.word	.L1005+1
 11736 13b4 FB120000 		.word	.L1005+1
 11737 13b8 FB120000 		.word	.L1005+1
 11738 13bc FB120000 		.word	.L1005+1
 11739 13c0 FB120000 		.word	.L1005+1
 11740 13c4 FB120000 		.word	.L1005+1
 11741 13c8 FB120000 		.word	.L1005+1
 11742 13cc FB120000 		.word	.L1005+1
 11743 13d0 FB120000 		.word	.L1005+1
 11744 13d4 7B1B0000 		.word	.L1008+1
 11745 13d8 FB120000 		.word	.L1005+1
 11746 13dc FB120000 		.word	.L1005+1
 11747 13e0 631B0000 		.word	.L1006+1
 11748              	.LVL982:
 11749              		.p2align 1
 11750              	.L1041:
1784:src/keys.c    **** 	case K10:	// STO
ARM GAS  /tmp/cc8lpfL1.s 			page 331


 11751              		.loc 1 1784 2 is_stmt 0 view .LVU3600
 11752              	.LBE1211:
 11753              	.LBE1227:
 11754              	.LBB1228:
 11755              	.LBB1229:
1304:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
 11756              		.loc 1 1304 4 is_stmt 1 view .LVU3601
1304:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
 11757              		.loc 1 1304 7 is_stmt 0 view .LVU3602
 11758 13e4 0F2C     		cmp	r4, #15
 11759 13e6 40F0D180 		bne	.L1042
1305:src/keys.c    ****        reset_shift();
 11760              		.loc 1 1305 6 is_stmt 1 view .LVU3603
1305:src/keys.c    ****        reset_shift();
 11761              		.loc 1 1305 9 is_stmt 0 view .LVU3604
 11762 13ea BBF1010F 		cmp	fp, #1
 11763 13ee 00F04B84 		beq	.L1385
 11764              	.LBB1230:
1321:src/keys.c    **** #endif
 11765              		.loc 1 1321 8 is_stmt 1 view .LVU3605
 11766              	.LVL983:
1323:src/keys.c    **** 	 finish_cpx_entry(1);
 11767              		.loc 1 1323 8 view .LVU3606
1323:src/keys.c    **** 	 finish_cpx_entry(1);
 11768              		.loc 1 1323 11 is_stmt 0 view .LVU3607
 11769 13f2 BBF1030F 		cmp	fp, #3
 11770 13f6 00F03E84 		beq	.L1386
 11771              	.LBE1230:
1330:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
 11772              		.loc 1 1330 4 is_stmt 1 view .LVU3608
1330:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
 11773              		.loc 1 1330 7 is_stmt 0 view .LVU3609
 11774 13fa BBF1000F 		cmp	fp, #0
 11775 13fe 00F0EE82 		beq	.L1079
 11776              	.LVL984:
 11777              	.L1124:
1331:src/keys.c    ****      switch (c) {
 11778              		.loc 1 1331 6 is_stmt 1 view .LVU3610
 11779 1402 0020     		movs	r0, #0
 11780 1404 FFF7FEFF 		bl	finish_cpx_entry
 11781              	.LVL985:
1332:src/keys.c    ****      case (K60):
 11782              		.loc 1 1332 6 view .LVU3611
 11783              	.L1301:
1332:src/keys.c    ****      case (K60):
 11784              		.loc 1 1332 6 is_stmt 0 view .LVU3612
 11785              	.LBE1229:
 11786              	.LBE1228:
3366:src/keys.c    **** 	} else {
 11787              		.loc 1 3366 3 is_stmt 1 view .LVU3613
3366:src/keys.c    **** 	} else {
 11788              		.loc 1 3366 10 is_stmt 0 view .LVU3614
 11789 1408 2046     		mov	r0, r4
 11790              	.L1300:
 11791 140a FFF7FEFF 		bl	process_cmplx
 11792              	.LVL986:
 11793 140e 0446     		mov	r4, r0
ARM GAS  /tmp/cc8lpfL1.s 			page 332


 11794 1410 FEF7E4BF 		b	.L837
 11795              	.LVL987:
 11796              	.L1357:
 11797              	.LBB1344:
 11798              	.LBB994:
1739:src/keys.c    **** 			goto fin2;
 11799              		.loc 1 1739 3 is_stmt 1 view .LVU3615
1739:src/keys.c    **** 			goto fin2;
 11800              		.loc 1 1739 13 is_stmt 0 view .LVU3616
 11801 1414 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 11802              	.LVL988:
1739:src/keys.c    **** 			goto fin2;
 11803              		.loc 1 1739 6 view .LVU3617
 11804 1418 002B     		cmp	r3, #0
 11805 141a 3FF440AA 		beq	.L853
1742:src/keys.c    **** 			State2.digval /= 10;
 11806              		.loc 1 1742 4 is_stmt 1 view .LVU3618
1742:src/keys.c    **** 			State2.digval /= 10;
 11807              		.loc 1 1742 19 is_stmt 0 view .LVU3619
 11808 141e 013B     		subs	r3, r3, #1
1743:src/keys.c    **** 		}
 11809              		.loc 1 1743 18 view .LVU3620
 11810 1420 B8F80820 		ldrh	r2, [r8, #8]
 11811              	.LVL989:
1742:src/keys.c    **** 			State2.digval /= 10;
 11812              		.loc 1 1742 19 view .LVU3621
 11813 1424 88F80B30 		strb	r3, [r8, #11]
1743:src/keys.c    **** 		}
 11814              		.loc 1 1743 4 is_stmt 1 view .LVU3622
1743:src/keys.c    **** 		}
 11815              		.loc 1 1743 18 is_stmt 0 view .LVU3623
 11816 1428 0A21     		movs	r1, #10
 11817 142a 3368     		ldr	r3, [r6]
 11818 142c B2FBF1F2 		udiv	r2, r2, r1
 11819              	.LBE994:
 11820              	.LBE1344:
3285:src/keys.c    **** 
 11821              		.loc 1 3285 10 view .LVU3624
 11822 1430 3324     		movs	r4, #51
 11823              	.LVL990:
 11824              	.LBB1345:
 11825              	.LBB995:
1743:src/keys.c    **** 		}
 11826              		.loc 1 1743 18 view .LVU3625
 11827 1432 A8F80820 		strh	r2, [r8, #8]	@ movhi
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11828              		.loc 1 1764 2 is_stmt 1 view .LVU3626
 11829 1436 FEF73DBE 		b	.L803
 11830              	.LVL991:
 11831              	.L1371:
1764:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11832              		.loc 1 1764 2 is_stmt 0 view .LVU3627
 11833              	.LBE995:
 11834              	.LBE1345:
 11835              	.LBB1346:
 11836              	.LBB940:
2817:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
ARM GAS  /tmp/cc8lpfL1.s 			page 333


 11837              		.loc 1 2817 3 is_stmt 1 view .LVU3628
2817:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 11838              		.loc 1 2817 12 is_stmt 0 view .LVU3629
 11839 143a 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
 11840 143e A2F1020C 		sub	ip, r2, #2
 11841 1442 DCF10002 		rsbs	r2, ip, #0
 11842 1446 2046     		mov	r0, r4
 11843 1448 42EB0C02 		adc	r2, r2, ip
 11844 144c FFF7FEFF 		bl	process_catalogue
 11845              	.LVL992:
2818:src/keys.c    **** 			return opcode;
 11846              		.loc 1 2818 6 view .LVU3630
 11847 1450 3328     		cmp	r0, #51
2817:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 11848              		.loc 1 2817 12 view .LVU3631
 11849 1452 0446     		mov	r4, r0
 11850              	.LVL993:
2818:src/keys.c    **** 			return opcode;
 11851              		.loc 1 2818 3 is_stmt 1 view .LVU3632
2818:src/keys.c    **** 			return opcode;
 11852              		.loc 1 2818 6 is_stmt 0 view .LVU3633
 11853 1454 3EF42DAE 		beq	.L1302
2820:src/keys.c    **** 		goto add_char;
 11854              		.loc 1 2820 3 is_stmt 1 view .LVU3634
2820:src/keys.c    **** 		goto add_char;
 11855              		.loc 1 2820 6 is_stmt 0 view .LVU3635
 11856 1458 C4B2     		uxtb	r4, r0
 11857              	.LVL994:
2821:src/keys.c    **** 	}
 11858              		.loc 1 2821 3 is_stmt 1 view .LVU3636
 11859 145a 1CE4     		b	.L932
 11860              	.LVL995:
 11861              	.L1347:
2821:src/keys.c    **** 	}
 11862              		.loc 1 2821 3 is_stmt 0 view .LVU3637
 11863              	.LBE940:
 11864              	.LBE1346:
3253:src/keys.c    **** 	CLEAR_REAL;
 11865              		.loc 1 3253 2 is_stmt 1 view .LVU3638
 11866              	.LBB1347:
 11867              	.LBI1347:
1245:src/keys.c    **** 	// called if number entry terminated by EXIT key
 11868              		.loc 1 1245 13 view .LVU3639
 11869              	.LBB1348:
1249:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
 11870              		.loc 1 1249 2 view .LVU3640
1249:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
 11871              		.loc 1 1249 5 is_stmt 0 view .LVU3641
 11872 145c 13F0060F 		tst	r3, #6
 11873 1460 2FD0     		beq	.L818
1250:src/keys.c    **** 		drop ( OP_DROPXY );
 11874              		.loc 1 1250 2 is_stmt 1 view .LVU3642
1250:src/keys.c    **** 		drop ( OP_DROPXY );
 11875              		.loc 1 1250 5 is_stmt 0 view .LVU3643
 11876 1462 D906     		lsls	r1, r3, #27
 11877 1464 40F13F81 		bpl	.L819
1251:src/keys.c    **** 		copyreg (get_reg_n(regC_idx), get_reg_n(regJ_idx));
ARM GAS  /tmp/cc8lpfL1.s 			page 334


 11878              		.loc 1 1251 3 is_stmt 1 view .LVU3644
 11879 1468 0F20     		movs	r0, #15
 11880 146a FFF7FEFF 		bl	drop
 11881              	.LVL996:
1252:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
 11882              		.loc 1 1252 3 view .LVU3645
 11883 146e 6A20     		movs	r0, #106
 11884 1470 FFF7FEFF 		bl	get_reg_n
 11885              	.LVL997:
 11886 1474 0446     		mov	r4, r0
 11887              	.LVL998:
1252:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
 11888              		.loc 1 1252 33 is_stmt 0 view .LVU3646
 11889 1476 6E20     		movs	r0, #110
 11890 1478 FFF7FEFF 		bl	get_reg_n
 11891              	.LVL999:
 11892 147c 0146     		mov	r1, r0
1252:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
 11893              		.loc 1 1252 3 view .LVU3647
 11894 147e 2046     		mov	r0, r4
 11895 1480 FFF7FEFF 		bl	copyreg
 11896              	.LVL1000:
1253:src/keys.c    **** 	}
 11897              		.loc 1 1253 3 is_stmt 1 view .LVU3648
 11898 1484 6B20     		movs	r0, #107
 11899              	.L1295:
1257:src/keys.c    **** 	}
 11900              		.loc 1 1257 3 is_stmt 0 view .LVU3649
 11901 1486 FFF7FEFF 		bl	get_reg_n
 11902              	.LVL1001:
 11903 148a 0446     		mov	r4, r0
1257:src/keys.c    **** 	}
 11904              		.loc 1 1257 33 view .LVU3650
 11905 148c 6F20     		movs	r0, #111
 11906 148e FFF7FEFF 		bl	get_reg_n
 11907              	.LVL1002:
 11908 1492 0146     		mov	r1, r0
1257:src/keys.c    **** 	}
 11909              		.loc 1 1257 3 view .LVU3651
 11910 1494 2046     		mov	r0, r4
 11911 1496 FFF7FEFF 		bl	copyreg
 11912              	.LVL1003:
1259:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11913              		.loc 1 1259 2 is_stmt 1 view .LVU3652
1259:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11914              		.loc 1 1259 22 is_stmt 0 view .LVU3653
 11915 149a DAF80020 		ldr	r2, [r10]
1259:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11916              		.loc 1 1259 20 view .LVU3654
 11917 149e 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
1259:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11918              		.loc 1 1259 22 view .LVU3655
 11919 14a2 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
 11920 14a6 C3F30013 		ubfx	r3, r3, #4, #1
1259:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11921              		.loc 1 1259 20 view .LVU3656
 11922 14aa 63F38611 		bfi	r1, r3, #6, #1
ARM GAS  /tmp/cc8lpfL1.s 			page 335


 11923 14ae 88F81710 		strb	r1, [r8, #23]
1260:src/keys.c    **** 	CLEAR_POLAR_READY;
 11924              		.loc 1 1260 2 is_stmt 1 view .LVU3657
1261:src/keys.c    **** }
 11925              		.loc 1 1261 2 view .LVU3658
1260:src/keys.c    **** 	CLEAR_POLAR_READY;
 11926              		.loc 1 1260 2 is_stmt 0 view .LVU3659
 11927 14b2 B2F8AC37 		ldrh	r3, [r2, #1964]
 11928 14b6 23F48873 		bic	r3, r3, #272
 11929 14ba 43F48073 		orr	r3, r3, #256
 11930 14be A2F8AC37 		strh	r3, [r2, #1964]	@ movhi
 11931              	.L818:
 11932              	.LBE1348:
 11933              	.LBE1347:
3254:src/keys.c    **** 	CLEAR_IMAG;
 11934              		.loc 1 3254 2 is_stmt 1 view .LVU3660
 11935 14c2 DAF80020 		ldr	r2, [r10]
3255:src/keys.c    ****       }
 11936              		.loc 1 3255 2 view .LVU3661
3254:src/keys.c    **** 	CLEAR_IMAG;
 11937              		.loc 1 3254 2 is_stmt 0 view .LVU3662
 11938 14c6 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
 11939 14ca 23F00603 		bic	r3, r3, #6
 11940 14ce 82F8AC37 		strb	r3, [r2, #1964]
 11941 14d2 FFF761B9 		b	.L817
 11942              	.L1341:
3371:src/keys.c    **** 		// print_debug (3, c);
 11943              		.loc 1 3371 4 is_stmt 1 view .LVU3663
3371:src/keys.c    **** 		// print_debug (3, c);
 11944              		.loc 1 3371 11 is_stmt 0 view .LVU3664
 11945 14d6 FFF7FEFF 		bl	process_h_shifted
 11946              	.LVL1004:
 11947 14da 0446     		mov	r4, r0
 11948 14dc FEF77EBF 		b	.L837
 11949              	.LVL1005:
 11950              	.L1372:
 11951              	.LBB1350:
 11952              	.LBB941:
2826:src/keys.c    **** 				break;
 11953              		.loc 1 2826 3 is_stmt 1 view .LVU3665
2826:src/keys.c    **** 				break;
 11954              		.loc 1 2826 6 is_stmt 0 view .LVU3666
 11955 14e0 0029     		cmp	r1, #0
 11956 14e2 7FF4C6AB 		bne	.L935
2828:src/keys.c    **** 		if (State2.numdigit == 0)
 11957              		.loc 1 2828 3 is_stmt 1 view .LVU3667
 11958              	.LBB931:
 11959              	.LBI931:
2803:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 11960              		.loc 1 2803 13 view .LVU3668
 11961              	.LBB932:
2805:src/keys.c    **** 	if (! State2.alphas )
 11962              		.loc 1 2805 2 view .LVU3669
2806:src/keys.c    **** 		State2.alphashift = 0;
 11963              		.loc 1 2806 6 is_stmt 0 view .LVU3670
 11964 14e6 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2805:src/keys.c    **** 	if (! State2.alphas )
ARM GAS  /tmp/cc8lpfL1.s 			page 336


 11965              		.loc 1 2805 15 view .LVU3671
 11966 14ea 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2806:src/keys.c    **** 		State2.alphashift = 0;
 11967              		.loc 1 2806 5 view .LVU3672
 11968 14ee 1C07     		lsls	r4, r3, #28
 11969              	.LVL1006:
2807:src/keys.c    **** }
 11970              		.loc 1 2807 21 view .LVU3673
 11971 14f0 5CBF     		itt	pl
 11972 14f2 61F30413 		bfipl	r3, r1, #4, #1
 11973 14f6 88F81630 		strbpl	r3, [r8, #22]
 11974              	.LBE932:
 11975              	.LBE931:
2829:src/keys.c    **** 			return STATE_UNFINISHED;
 11976              		.loc 1 2829 13 view .LVU3674
 11977 14fa 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 11978              	.LBB934:
 11979              	.LBB933:
2805:src/keys.c    **** 	if (! State2.alphas )
 11980              		.loc 1 2805 15 view .LVU3675
 11981 14fe 61F3C302 		bfi	r2, r1, #3, #1
 11982 1502 88F81520 		strb	r2, [r8, #21]
2806:src/keys.c    **** 		State2.alphashift = 0;
 11983              		.loc 1 2806 2 is_stmt 1 view .LVU3676
2807:src/keys.c    **** }
 11984              		.loc 1 2807 3 view .LVU3677
 11985              	.LBE933:
 11986              	.LBE934:
2829:src/keys.c    **** 			return STATE_UNFINISHED;
 11987              		.loc 1 2829 3 view .LVU3678
2829:src/keys.c    **** 			return STATE_UNFINISHED;
 11988              		.loc 1 2829 6 is_stmt 0 view .LVU3679
 11989 1506 002B     		cmp	r3, #0
 11990 1508 3FF4EFA8 		beq	.L1306
2831:src/keys.c    **** 			State2.digval2 = 0;
 11991              		.loc 1 2831 8 is_stmt 1 view .LVU3680
2831:src/keys.c    **** 			State2.digval2 = 0;
 11992              		.loc 1 2831 11 is_stmt 0 view .LVU3681
 11993 150c 012B     		cmp	r3, #1
2832:src/keys.c    **** 		goto fin;
 11994              		.loc 1 2832 19 view .LVU3682
 11995 150e 4FF00004 		mov	r4, #0
2831:src/keys.c    **** 			State2.digval2 = 0;
 11996              		.loc 1 2831 11 view .LVU3683
 11997 1512 7FF4D7AB 		bne	.L938
2832:src/keys.c    **** 		goto fin;
 11998              		.loc 1 2832 4 is_stmt 1 view .LVU3684
2832:src/keys.c    **** 		goto fin;
 11999              		.loc 1 2832 19 is_stmt 0 view .LVU3685
 12000 1516 88F80A40 		strb	r4, [r8, #10]
 12001 151a FFF7D3BB 		b	.L938
 12002              	.LVL1007:
 12003              	.L1362:
2832:src/keys.c    **** 		goto fin;
 12004              		.loc 1 2832 19 view .LVU3686
 12005              	.LBE941:
 12006              	.LBE1350:
ARM GAS  /tmp/cc8lpfL1.s 			page 337


 12007              	.LBB1351:
 12008              	.LBB1033:
 12009              	.LBB1025:
2935:src/keys.c    **** 		else if (nn != NO_REG)
 12010              		.loc 1 2935 4 is_stmt 1 view .LVU3687
2937:src/keys.c    **** 	}
 12011              		.loc 1 2937 6 is_stmt 0 view .LVU3688
 12012 151e 9942     		cmp	r1, r3
 12013 1520 08BF     		it	eq
 12014 1522 0A23     		moveq	r3, #10
 12015              	.LVL1008:
2937:src/keys.c    **** 	}
 12016              		.loc 1 2937 6 view .LVU3689
 12017 1524 FFF75CBA 		b	.L886
 12018              	.LVL1009:
 12019              	.L1149:
2937:src/keys.c    **** 	}
 12020              		.loc 1 2937 6 view .LVU3690
 12021              	.LBE1025:
 12022              	.LBE1033:
 12023              	.LBE1351:
 12024              	.LBB1352:
 12025              	.LBB901:
2996:src/keys.c    **** 	const int opcode = getprog(pc);
 12026              		.loc 1 2996 27 view .LVU3691
 12027 1528 4FF0030B 		mov	fp, #3
 12028              	.LVL1010:
2996:src/keys.c    **** 	const int opcode = getprog(pc);
 12029              		.loc 1 2996 27 view .LVU3692
 12030 152c 4EE4     		b	.L947
 12031              	.LVL1011:
 12032              	.L933:
2996:src/keys.c    **** 	const int opcode = getprog(pc);
 12033              		.loc 1 2996 27 view .LVU3693
 12034              	.LBE901:
 12035              	.LBE1352:
 12036              	.LBB1353:
 12037              	.LBB942:
2836:src/keys.c    **** 			if (State2.numdigit == 0)
 12038              		.loc 1 2836 3 is_stmt 1 view .LVU3694
2836:src/keys.c    **** 			if (State2.numdigit == 0)
 12039              		.loc 1 2836 6 is_stmt 0 view .LVU3695
 12040 152e 0329     		cmp	r1, #3
 12041 1530 3FF4A7AB 		beq	.L939
2837:src/keys.c    **** 				reset_multi();
 12042              		.loc 1 2837 4 is_stmt 1 view .LVU3696
2837:src/keys.c    **** 				reset_multi();
 12043              		.loc 1 2837 14 is_stmt 0 view .LVU3697
 12044 1534 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
2837:src/keys.c    **** 				reset_multi();
 12045              		.loc 1 2837 7 view .LVU3698
 12046 1538 002A     		cmp	r2, #0
 12047 153a 40F01981 		bne	.L940
2838:src/keys.c    **** 			else
 12048              		.loc 1 2838 5 is_stmt 1 view .LVU3699
 12049              	.LBB935:
 12050              	.LBI935:
ARM GAS  /tmp/cc8lpfL1.s 			page 338


2803:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 12051              		.loc 1 2803 13 view .LVU3700
 12052              	.LBB936:
2805:src/keys.c    **** 	if (! State2.alphas )
 12053              		.loc 1 2805 2 view .LVU3701
2805:src/keys.c    **** 	if (! State2.alphas )
 12054              		.loc 1 2805 15 is_stmt 0 view .LVU3702
 12055 153e 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 12056              	.LVL1012:
2806:src/keys.c    **** 		State2.alphashift = 0;
 12057              		.loc 1 2806 6 view .LVU3703
 12058 1542 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2805:src/keys.c    **** 	if (! State2.alphas )
 12059              		.loc 1 2805 15 view .LVU3704
 12060 1546 62F3C301 		bfi	r1, r2, #3, #1
2806:src/keys.c    **** 		State2.alphashift = 0;
 12061              		.loc 1 2806 5 view .LVU3705
 12062 154a 13F00802 		ands	r2, r3, #8
2805:src/keys.c    **** 	if (! State2.alphas )
 12063              		.loc 1 2805 15 view .LVU3706
 12064 154e 88F81510 		strb	r1, [r8, #21]
2806:src/keys.c    **** 		State2.alphashift = 0;
 12065              		.loc 1 2806 2 is_stmt 1 view .LVU3707
2806:src/keys.c    **** 		State2.alphashift = 0;
 12066              		.loc 1 2806 5 is_stmt 0 view .LVU3708
 12067 1552 3FF4C6A8 		beq	.L943
 12068 1556 FFF7C8B8 		b	.L1306
 12069              	.LVL1013:
 12070              	.L1340:
2806:src/keys.c    **** 		State2.alphashift = 0;
 12071              		.loc 1 2806 5 view .LVU3709
 12072              	.LBE936:
 12073              	.LBE935:
 12074              	.LBE942:
 12075              	.LBE1353:
3362:src/keys.c    **** 	}
 12076              		.loc 1 3362 3 is_stmt 1 view .LVU3710
 12077              	.LBB1354:
 12078              	.LBI1228:
1286:src/keys.c    **** 
 12079              		.loc 1 1286 13 view .LVU3711
 12080              	.LBB1315:
1288:src/keys.c    **** 
 12081              		.loc 1 1288 4 view .LVU3712
 12082              	.LBB1231:
 12083              	.LBI1231:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 12084              		.loc 1 96 13 view .LVU3713
 12085              	.LBB1232:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12086              		.loc 1 97 2 view .LVU3714
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12087              		.loc 1 97 18 is_stmt 0 view .LVU3715
 12088 155a FFF7FEFF 		bl	shift_down
 12089              	.LVL1014:
  98:src/keys.c    **** }
 12090              		.loc 1 98 2 is_stmt 1 view .LVU3716
ARM GAS  /tmp/cc8lpfL1.s 			page 339


  98:src/keys.c    **** }
 12091              		.loc 1 98 52 is_stmt 0 view .LVU3717
 12092 155e 8346     		mov	fp, r0
 12093              	.LVL1015:
  98:src/keys.c    **** }
 12094              		.loc 1 98 52 view .LVU3718
 12095 1560 08B9     		cbnz	r0, .L1035
 12096 1562 98F810B0 		ldrb	fp, [r8, #16]	@ zero_extendqisi2
 12097              	.L1035:
 12098              	.LVL1016:
  98:src/keys.c    **** }
 12099              		.loc 1 98 52 view .LVU3719
 12100              	.LBE1232:
 12101              	.LBE1231:
1292:src/keys.c    ****      return process_h_shifted (c);
 12102              		.loc 1 1292 4 is_stmt 1 view .LVU3720
1292:src/keys.c    ****      return process_h_shifted (c);
 12103              		.loc 1 1292 7 is_stmt 0 view .LVU3721
 12104 1566 042C     		cmp	r4, #4
 12105 1568 6BD8     		bhi	.L1036
1292:src/keys.c    ****      return process_h_shifted (c);
 12106              		.loc 1 1292 19 view .LVU3722
 12107 156a BBF1030F 		cmp	fp, #3
 12108 156e 00F08B81 		beq	.L1387
1297:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 12109              		.loc 1 1297 4 is_stmt 1 view .LVU3723
1297:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 12110              		.loc 1 1297 7 is_stmt 0 view .LVU3724
 12111 1572 BBF1020F 		cmp	fp, #2
 12112 1576 00F04181 		beq	.L1039
 12113              	.L1038:
1300:src/keys.c    ****      return process_fg_shifted (c);
 12114              		.loc 1 1300 4 is_stmt 1 view .LVU3725
1300:src/keys.c    ****      return process_fg_shifted (c);
 12115              		.loc 1 1300 7 is_stmt 0 view .LVU3726
 12116 157a 631F     		subs	r3, r4, #5
 12117 157c 032B     		cmp	r3, #3
 12118 157e 3FF631AF 		bhi	.L1041
1300:src/keys.c    ****      return process_fg_shifted (c);
 12119              		.loc 1 1300 55 view .LVU3727
 12120 1582 0BF1FF33 		add	r3, fp, #-1
1300:src/keys.c    ****      return process_fg_shifted (c);
 12121              		.loc 1 1300 34 view .LVU3728
 12122 1586 DBB2     		uxtb	r3, r3
 12123 1588 012B     		cmp	r3, #1
 12124 158a 64D9     		bls	.L1298
 12125              	.L1042:
1330:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
 12126              		.loc 1 1330 4 is_stmt 1 view .LVU3729
1330:src/keys.c    ****      finish_cpx_entry(0); // finish entry for all of them - no lift
 12127              		.loc 1 1330 7 is_stmt 0 view .LVU3730
 12128 158c BBF1000F 		cmp	fp, #0
 12129 1590 40F03B81 		bne	.L1293
1411:src/keys.c    ****    case (K61):
 12130              		.loc 1 1411 4 is_stmt 1 view .LVU3731
 12131 1594 231F     		subs	r3, r4, #4
 12132 1596 292B     		cmp	r3, #41
ARM GAS  /tmp/cc8lpfL1.s 			page 340


 12133 1598 00F24182 		bhi	.L1075
 12134 159c DFE813F0 		tbh	[pc, r3, lsl #1]
 12135              	.L1077:
 12136 15a0 2602     		.2byte	(.L1078-.L1077)/2
 12137 15a2 3F02     		.2byte	(.L1075-.L1077)/2
 12138 15a4 3F02     		.2byte	(.L1075-.L1077)/2
 12139 15a6 3F02     		.2byte	(.L1075-.L1077)/2
 12140 15a8 3F02     		.2byte	(.L1075-.L1077)/2
 12141 15aa 3F02     		.2byte	(.L1075-.L1077)/2
 12142 15ac 3F02     		.2byte	(.L1075-.L1077)/2
 12143 15ae 3F02     		.2byte	(.L1075-.L1077)/2
 12144 15b0 3F02     		.2byte	(.L1075-.L1077)/2
 12145 15b2 3F02     		.2byte	(.L1075-.L1077)/2
 12146 15b4 3402     		.2byte	(.L1080-.L1077)/2
 12147 15b6 1F02     		.2byte	(.L1079-.L1077)/2
 12148 15b8 2602     		.2byte	(.L1078-.L1077)/2
 12149 15ba 3F02     		.2byte	(.L1075-.L1077)/2
 12150 15bc 3F02     		.2byte	(.L1075-.L1077)/2
 12151 15be 1F02     		.2byte	(.L1079-.L1077)/2
 12152 15c0 1F02     		.2byte	(.L1079-.L1077)/2
 12153 15c2 1F02     		.2byte	(.L1079-.L1077)/2
 12154 15c4 3F02     		.2byte	(.L1075-.L1077)/2
 12155 15c6 3F02     		.2byte	(.L1075-.L1077)/2
 12156 15c8 3F02     		.2byte	(.L1075-.L1077)/2
 12157 15ca 1F02     		.2byte	(.L1079-.L1077)/2
 12158 15cc 1F02     		.2byte	(.L1079-.L1077)/2
 12159 15ce 1F02     		.2byte	(.L1079-.L1077)/2
 12160 15d0 3F02     		.2byte	(.L1075-.L1077)/2
 12161 15d2 3F02     		.2byte	(.L1075-.L1077)/2
 12162 15d4 3F02     		.2byte	(.L1075-.L1077)/2
 12163 15d6 1F02     		.2byte	(.L1079-.L1077)/2
 12164 15d8 1F02     		.2byte	(.L1079-.L1077)/2
 12165 15da 1F02     		.2byte	(.L1079-.L1077)/2
 12166 15dc 3F02     		.2byte	(.L1075-.L1077)/2
 12167 15de 3F02     		.2byte	(.L1075-.L1077)/2
 12168 15e0 3F02     		.2byte	(.L1075-.L1077)/2
 12169 15e2 1F02     		.2byte	(.L1079-.L1077)/2
 12170 15e4 1F02     		.2byte	(.L1079-.L1077)/2
 12171 15e6 3F02     		.2byte	(.L1075-.L1077)/2
 12172 15e8 3F02     		.2byte	(.L1075-.L1077)/2
 12173 15ea 3F02     		.2byte	(.L1075-.L1077)/2
 12174 15ec 3F02     		.2byte	(.L1075-.L1077)/2
 12175 15ee 3F02     		.2byte	(.L1075-.L1077)/2
 12176 15f0 2602     		.2byte	(.L1078-.L1077)/2
 12177 15f2 1002     		.2byte	(.L1076-.L1077)/2
 12178              	.LVL1017:
 12179              		.p2align 1
 12180              	.L1381:
1411:src/keys.c    ****    case (K61):
 12181              		.loc 1 1411 4 is_stmt 0 view .LVU3732
 12182              	.LBE1315:
 12183              	.LBE1354:
 12184              	.LBB1355:
 12185              	.LBB1137:
3143:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 12186              		.loc 1 3143 50 view .LVU3733
 12187 15f4 0D2C     		cmp	r4, #13
ARM GAS  /tmp/cc8lpfL1.s 			page 341


 12188 15f6 7FF458AD 		bne	.L983
3144:src/keys.c    **** 		set_smode(SDISP_SHOW);
 12189              		.loc 1 3144 3 is_stmt 1 view .LVU3734
 12190 15fa B9F1010F 		cmp	r9, #1
 12191 15fe 14BF     		ite	ne
 12192 1600 2C20     		movne	r0, #44
 12193              	.LVL1018:
3144:src/keys.c    **** 		set_smode(SDISP_SHOW);
 12194              		.loc 1 3144 3 is_stmt 0 view .LVU3735
 12195 1602 2B20     		moveq	r0, #43
 12196 1604 FFF7FEFF 		bl	set_window
 12197              	.LVL1019:
3145:src/keys.c    **** 	}
 12198              		.loc 1 3145 3 is_stmt 1 view .LVU3736
 12199              	.LBB1133:
 12200              	.LBI1133:
 741:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 12201              		.loc 1 741 13 view .LVU3737
 12202              	.LBB1134:
 742:src/keys.c    **** }
 12203              		.loc 1 742 2 view .LVU3738
 742:src/keys.c    **** }
 12204              		.loc 1 742 15 is_stmt 0 view .LVU3739
 12205 1608 98F81120 		ldrb	r2, [r8, #17]	@ zero_extendqisi2
 12206 160c 3368     		ldr	r3, [r6]
 12207 160e 013A     		subs	r2, r2, #1
 12208 1610 18BF     		it	ne
 12209 1612 0122     		movne	r2, #1
 12210 1614 88F81120 		strb	r2, [r8, #17]
 12211              	.LVL1020:
 742:src/keys.c    **** }
 12212              		.loc 1 742 15 view .LVU3740
 12213              	.LBE1134:
 12214              	.LBE1133:
3152:src/keys.c    **** 	case K_DOWN:
 12215              		.loc 1 3152 2 is_stmt 1 view .LVU3741
3152:src/keys.c    **** 	case K_DOWN:
 12216              		.loc 1 3152 2 is_stmt 0 view .LVU3742
 12217              	.LBE1137:
 12218              	.LBE1355:
 12219              	.LBE1437:
 12220              	.LBE1512:
3614:src/keys.c    ****     case STATE_SST:
 12221              		.loc 1 3614 5 is_stmt 1 view .LVU3743
 12222              	.LBB1513:
 12223              	.LBB1438:
 12224              	.LBB1356:
 12225              	.LBB1138:
3203:src/keys.c    **** 	}
 12226              		.loc 1 3203 10 is_stmt 0 view .LVU3744
 12227 1618 3324     		movs	r4, #51
 12228 161a FEF74BBD 		b	.L803
 12229              	.LVL1021:
 12230              	.L1378:
3127:src/keys.c    **** 	const int g_max = global_regs();
 12231              		.loc 1 3127 33 view .LVU3745
 12232 161e FFF7FEFF 		bl	local_regs
ARM GAS  /tmp/cc8lpfL1.s 			page 342


 12233              	.LVL1022:
 12234 1622 8246     		mov	r10, r0
 12235 1624 31E5     		b	.L975
 12236              	.LVL1023:
 12237              	.L1333:
3127:src/keys.c    **** 	const int g_max = global_regs();
 12238              		.loc 1 3127 33 view .LVU3746
 12239 1626 0093     		str	r3, [sp]
 12240              	.LBE1138:
 12241              	.LBE1356:
 12242              	.LBB1357:
 12243              	.LBB862:
 12244              	.LBB853:
 373:src/keys.c    **** #else
 12245              		.loc 1 373 45 view .LVU3747
 12246 1628 FFF7FEFF 		bl	shift_down
 12247              	.LVL1024:
 373:src/keys.c    **** #else
 12248              		.loc 1 373 42 view .LVU3748
 12249 162c 0328     		cmp	r0, #3
 12250 162e 00F09780 		beq	.L919
 373:src/keys.c    **** #else
 12251              		.loc 1 373 73 view .LVU3749
 12252 1632 009B     		ldr	r3, [sp]
 12253 1634 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 12254 1638 9C46     		mov	ip, r3
 377:src/keys.c    ****   }
 12255              		.loc 1 377 9 view .LVU3750
 12256 163a 0C21     		movs	r1, #12
 371:src/keys.c    **** #ifndef WINGUI
 12257              		.loc 1 371 8 view .LVU3751
 12258 163c 0A4B     		ldr	r3, .L1413+4
 12259 163e FEF711BE 		b	.L918
 12260              	.LVL1025:
 12261              	.L1036:
 371:src/keys.c    **** #ifndef WINGUI
 12262              		.loc 1 371 8 view .LVU3752
 12263              	.LBE853:
 12264              	.LBE862:
 12265              	.LBE1357:
 12266              	.LBB1358:
 12267              	.LBB1316:
1297:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 12268              		.loc 1 1297 4 is_stmt 1 view .LVU3753
1297:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 12269              		.loc 1 1297 7 is_stmt 0 view .LVU3754
 12270 1642 BBF1020F 		cmp	fp, #2
 12271 1646 98D1     		bne	.L1038
1297:src/keys.c    ****      convert_regK ((enum trig_modes) (c-K10));
 12272              		.loc 1 1297 28 view .LVU3755
 12273 1648 A01F     		subs	r0, r4, #6
 12274 164a C0B2     		uxtb	r0, r0
 12275 164c 0228     		cmp	r0, #2
 12276 164e 00F2D580 		bhi	.L1039
1298:src/keys.c    ****    }
 12277              		.loc 1 1298 6 is_stmt 1 view .LVU3756
 12278 1652 FFF7FEFF 		bl	convert_regK
ARM GAS  /tmp/cc8lpfL1.s 			page 343


 12279              	.LVL1026:
1300:src/keys.c    ****      return process_fg_shifted (c);
 12280              		.loc 1 1300 4 view .LVU3757
 12281              	.L1298:
1300:src/keys.c    ****      return process_fg_shifted (c);
 12282              		.loc 1 1300 4 is_stmt 0 view .LVU3758
 12283              	.LBE1316:
 12284              	.LBE1358:
3369:src/keys.c    **** 		if (shift == SHIFT_H)
 12285              		.loc 1 3369 4 is_stmt 1 view .LVU3759
3369:src/keys.c    **** 		if (shift == SHIFT_H)
 12286              		.loc 1 3369 11 is_stmt 0 view .LVU3760
 12287 1656 2046     		mov	r0, r4
 12288 1658 FFF7FEFF 		bl	process_fg_shifted
 12289              	.LVL1027:
 12290 165c 0446     		mov	r4, r0
 12291 165e FEF7BDBE 		b	.L837
 12292              	.L1414:
 12293 1662 00BF     		.align	2
 12294              	.L1413:
 12295 1664 00000000 		.word	.LANCHOR6
 12296 1668 00000000 		.word	.LANCHOR17
 12297 166c 00000000 		.word	.LANCHOR15
 12298              	.LVL1028:
 12299              	.L1380:
 12300              	.LBB1359:
 12301              	.LBB1139:
 12302              	.LBB1135:
3137:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12303              		.loc 1 3137 3 is_stmt 1 view .LVU3761
3137:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12304              		.loc 1 3137 19 is_stmt 0 view .LVU3762
 12305 1670 B8F80810 		ldrh	r1, [r8, #8]
3137:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12306              		.loc 1 3137 27 view .LVU3763
 12307 1674 0A23     		movs	r3, #10
3137:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12308              		.loc 1 3137 32 view .LVU3764
 12309 1676 03FB01B2 		mla	r2, r3, r1, fp
3137:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12310              		.loc 1 3137 37 view .LVU3765
 12311 167a 6424     		movs	r4, #100
 12312              	.LVL1029:
3137:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12313              		.loc 1 3137 37 view .LVU3766
 12314 167c B2FBF4F3 		udiv	r3, r2, r4
 12315 1680 04FB1323 		mls	r3, r4, r3, r2
 12316              	.LVL1030:
3138:src/keys.c    **** 			dv = n;
 12317              		.loc 1 3138 3 is_stmt 1 view .LVU3767
3138:src/keys.c    **** 			dv = n;
 12318              		.loc 1 3138 6 is_stmt 0 view .LVU3768
 12319 1684 5345     		cmp	r3, r10
 12320 1686 09DA     		bge	.L981
3138:src/keys.c    **** 			dv = n;
 12321              		.loc 1 3138 21 view .LVU3769
 12322 1688 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
ARM GAS  /tmp/cc8lpfL1.s 			page 344


3138:src/keys.c    **** 			dv = n;
 12323              		.loc 1 3138 17 view .LVU3770
 12324 168c D207     		lsls	r2, r2, #31
 12325 168e 3FF561AD 		bmi	.L1297
3138:src/keys.c    **** 			dv = n;
 12326              		.loc 1 3138 36 view .LVU3771
 12327 1692 8842     		cmp	r0, r1
 12328 1694 02DD     		ble	.L981
3138:src/keys.c    **** 			dv = n;
 12329              		.loc 1 3138 63 view .LVU3772
 12330 1696 9842     		cmp	r0, r3
 12331 1698 3FF75CAD 		bgt	.L1297
 12332              	.L981:
3139:src/keys.c    **** 		State2.digval = dv;
 12333              		.loc 1 3139 4 is_stmt 1 view .LVU3773
3139:src/keys.c    **** 		State2.digval = dv;
 12334              		.loc 1 3139 7 is_stmt 0 view .LVU3774
 12335 169c 5B46     		mov	r3, fp
 12336              	.LVL1031:
3140:src/keys.c    **** 		goto reset_window;
 12337              		.loc 1 3140 3 is_stmt 1 view .LVU3775
 12338 169e 59E5     		b	.L1297
 12339              	.LVL1032:
 12340              	.L1376:
3140:src/keys.c    **** 		goto reset_window;
 12341              		.loc 1 3140 3 is_stmt 0 view .LVU3776
 12342              	.LBE1135:
 12343              	.LBE1139:
 12344              	.LBE1359:
 12345              	.LBB1360:
 12346              	.LBB902:
2998:src/keys.c    **** 	const int direct = State2.runmode;
 12347              		.loc 1 2998 37 view .LVU3777
 12348 16a0 5046     		mov	r0, r10
 12349 16a2 FFF7FEFF 		bl	getprog
 12350              	.LVL1033:
2998:src/keys.c    **** 	const int direct = State2.runmode;
 12351              		.loc 1 2998 63 view .LVU3778
 12352 16a6 20F47062 		bic	r2, r0, #3840
 12353 16aa FFF799BB 		b	.L948
 12354              	.LVL1034:
 12355              	.L1377:
3005:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 12356              		.loc 1 3005 3 is_stmt 1 view .LVU3779
3005:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 12357              		.loc 1 3005 8 is_stmt 0 view .LVU3780
 12358 16ae 4FEA8B34 		lsl	r4, fp, #14
 12359              	.LVL1035:
3005:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 12360              		.loc 1 3005 6 view .LVU3781
 12361 16b2 44F00104 		orr	r4, r4, #1
 12362              	.LVL1036:
3006:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 12363              		.loc 1 3006 3 is_stmt 1 view .LVU3782
3006:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 12364              		.loc 1 3006 9 is_stmt 0 view .LVU3783
 12365 16b6 2046     		mov	r0, r4
ARM GAS  /tmp/cc8lpfL1.s 			page 345


 12366 16b8 FFF7FEFF 		bl	is_label_or_end_at
 12367              	.LVL1037:
3006:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 12368              		.loc 1 3006 6 view .LVU3784
 12369 16bc 0246     		mov	r2, r0
 12370 16be 0028     		cmp	r0, #0
 12371 16c0 00F08880 		beq	.L1388
 12372              	.L951:
3008:src/keys.c    **** 		return STATE_UNFINISHED;
 12373              		.loc 1 3008 3 is_stmt 1 view .LVU3785
3008:src/keys.c    **** 		return STATE_UNFINISHED;
 12374              		.loc 1 3008 17 is_stmt 0 view .LVU3786
 12375 16c4 A8F80840 		strh	r4, [r8, #8]	@ movhi
3009:src/keys.c    **** 	}
 12376              		.loc 1 3009 3 is_stmt 1 view .LVU3787
 12377 16c8 3368     		ldr	r3, [r6]
3009:src/keys.c    **** 	}
 12378              		.loc 1 3009 10 is_stmt 0 view .LVU3788
 12379 16ca 3324     		movs	r4, #51
 12380              	.LVL1038:
3009:src/keys.c    **** 	}
 12381              		.loc 1 3009 10 view .LVU3789
 12382 16cc FEF7F2BC 		b	.L803
 12383              	.LVL1039:
 12384              	.L1384:
3009:src/keys.c    **** 	}
 12385              		.loc 1 3009 10 view .LVU3790
 12386 16d0 3368     		ldr	r3, [r6]
 12387              	.LBE902:
 12388              	.LBE1360:
 12389              	.LBE1438:
 12390              	.LBE1513:
3409:src/keys.c    ****   //print_debug(60,c);
 12391              		.loc 1 3409 7 view .LVU3791
 12392 16d2 1546     		mov	r5, r2
 12393              	.LBB1514:
 12394              	.LBB1439:
 12395              	.LBB1361:
 12396              	.LBB1212:
1892:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
 12397              		.loc 1 1892 10 view .LVU3792
 12398 16d4 3324     		movs	r4, #51
 12399 16d6 FEF7EDBC 		b	.L803
 12400              	.LVL1040:
 12401              	.L1368:
1892:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
 12402              		.loc 1 1892 10 view .LVU3793
 12403              	.LBE1212:
 12404              	.LBE1361:
 12405              	.LBB1362:
 12406              	.LBB863:
 287:src/keys.c    **** 					}
 12407              		.loc 1 287 7 is_stmt 1 view .LVU3794
 12408 16da 0120     		movs	r0, #1
 12409 16dc FFF7FEFF 		bl	finish_cpx_entry
 12410              	.LVL1041:
 287:src/keys.c    **** 					}
ARM GAS  /tmp/cc8lpfL1.s 			page 346


 12411              		.loc 1 287 7 is_stmt 0 view .LVU3795
 12412              	.LBE863:
 12413              	.LBE1362:
3325:src/keys.c    **** 		if (is_bad_cmdline())
 12414              		.loc 1 3325 2 is_stmt 1 view .LVU3796
 12415              	.LBB1363:
 12416              	.LBB864:
 289:src/keys.c    **** 				default:
 12417              		.loc 1 289 13 is_stmt 0 view .LVU3797
 12418 16e0 1123     		movs	r3, #17
 12419 16e2 FFF70EBA 		b	.L906
 12420              	.LVL1042:
 12421              	.L819:
 289:src/keys.c    **** 				default:
 12422              		.loc 1 289 13 view .LVU3798
 12423              	.LBE864:
 12424              	.LBE1363:
 12425              	.LBB1364:
 12426              	.LBB1349:
1256:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
 12427              		.loc 1 1256 3 is_stmt 1 view .LVU3799
 12428 16e6 6420     		movs	r0, #100
 12429 16e8 FFF7FEFF 		bl	get_reg_n
 12430              	.LVL1043:
 12431 16ec 0446     		mov	r4, r0
 12432              	.LVL1044:
1256:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
 12433              		.loc 1 1256 33 is_stmt 0 view .LVU3800
 12434 16ee 6E20     		movs	r0, #110
 12435 16f0 FFF7FEFF 		bl	get_reg_n
 12436              	.LVL1045:
 12437 16f4 0146     		mov	r1, r0
1256:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
 12438              		.loc 1 1256 3 view .LVU3801
 12439 16f6 2046     		mov	r0, r4
 12440 16f8 FFF7FEFF 		bl	copyreg
 12441              	.LVL1046:
1257:src/keys.c    **** 	}
 12442              		.loc 1 1257 3 is_stmt 1 view .LVU3802
 12443 16fc 6520     		movs	r0, #101
 12444 16fe C2E6     		b	.L1295
 12445              	.LVL1047:
 12446              	.L1382:
1257:src/keys.c    **** 	}
 12447              		.loc 1 1257 3 is_stmt 0 view .LVU3803
 12448              	.LBE1349:
 12449              	.LBE1364:
 12450              	.LBB1365:
 12451              	.LBB1140:
3148:src/keys.c    **** 		goto reset_window;
 12452              		.loc 1 3148 3 is_stmt 1 view .LVU3804
3148:src/keys.c    **** 		goto reset_window;
 12453              		.loc 1 3148 17 is_stmt 0 view .LVU3805
 12454 1700 A8F808B0 		strh	fp, [r8, #8]	@ movhi
3149:src/keys.c    **** 	}
 12455              		.loc 1 3149 3 is_stmt 1 view .LVU3806
 12456 1704 28E5     		b	.L979
ARM GAS  /tmp/cc8lpfL1.s 			page 347


 12457              	.LVL1048:
 12458              	.L1142:
3149:src/keys.c    **** 	}
 12459              		.loc 1 3149 3 is_stmt 0 view .LVU3807
 12460              	.LBE1140:
 12461              	.LBE1365:
 12462              	.LBB1366:
 12463              	.LBB865:
 306:src/keys.c    **** 		}
 12464              		.loc 1 306 11 view .LVU3808
 12465 1706 1023     		movs	r3, #16
 12466 1708 FFF7FBB9 		b	.L906
 12467              	.L1367:
 298:src/keys.c    **** 				stack_begin (1);
 12468              		.loc 1 298 5 is_stmt 1 view .LVU3809
 12469 170c 41F00201 		orr	r1, r1, #2
 12470 1710 80F8AC17 		strb	r1, [r0, #1964]
 299:src/keys.c    **** 			}
 12471              		.loc 1 299 5 view .LVU3810
 12472 1714 5846     		mov	r0, fp
 12473 1716 FFF7FEFF 		bl	stack_begin
 12474              	.LVL1049:
 299:src/keys.c    **** 			}
 12475              		.loc 1 299 5 is_stmt 0 view .LVU3811
 12476              	.LBE865:
 12477              	.LBE1366:
3325:src/keys.c    **** 		if (is_bad_cmdline())
 12478              		.loc 1 3325 2 is_stmt 1 view .LVU3812
 12479              	.LBB1367:
 12480              	.LBB866:
 306:src/keys.c    **** 		}
 12481              		.loc 1 306 11 is_stmt 0 view .LVU3813
 12482 171a 1023     		movs	r3, #16
 12483 171c FFF7F1B9 		b	.L906
 12484              	.LVL1050:
 12485              	.L1358:
 306:src/keys.c    **** 		}
 12486              		.loc 1 306 11 view .LVU3814
 12487              	.LBE866:
 12488              	.LBE1367:
 12489              	.LBB1368:
 12490              	.LBB996:
1748:src/keys.c    **** 		if (rawpc == 1)
 12491              		.loc 1 1748 3 is_stmt 1 view .LVU3815
1748:src/keys.c    **** 		if (rawpc == 1)
 12492              		.loc 1 1748 11 is_stmt 0 view .LVU3816
 12493 1720 DFF8C4A3 		ldr	r10, .L1415+8
 12494 1724 DAF80030 		ldr	r3, [r10]
 12495              	.LVL1051:
1748:src/keys.c    **** 		if (rawpc == 1)
 12496              		.loc 1 1748 9 view .LVU3817
 12497 1728 B3F8E007 		ldrh	r0, [r3, #2016]
 12498              	.LVL1052:
1749:src/keys.c    **** 			rawpc = 0;
 12499              		.loc 1 1749 3 is_stmt 1 view .LVU3818
1750:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
 12500              		.loc 1 1750 10 is_stmt 0 view .LVU3819
ARM GAS  /tmp/cc8lpfL1.s 			page 348


 12501 172c 0128     		cmp	r0, #1
 12502              	.LVL1053:
1751:src/keys.c    **** 		update_program_bounds(1);
 12503              		.loc 1 1751 3 is_stmt 1 view .LVU3820
 12504 172e 08BF     		it	eq
 12505 1730 0020     		moveq	r0, #0
 12506              	.LVL1054:
1751:src/keys.c    **** 		update_program_bounds(1);
 12507              		.loc 1 1751 3 is_stmt 0 view .LVU3821
 12508 1732 0021     		movs	r1, #0
 12509 1734 FFF7FEFF 		bl	do_dec
 12510              	.LVL1055:
1751:src/keys.c    **** 		update_program_bounds(1);
 12511              		.loc 1 1751 3 view .LVU3822
 12512 1738 FFF7FEFF 		bl	set_pc
 12513              	.LVL1056:
1752:src/keys.c    **** 		rawpc = ProgBegin;
 12514              		.loc 1 1752 3 is_stmt 1 view .LVU3823
 12515 173c 0120     		movs	r0, #1
 12516 173e FFF7FEFF 		bl	update_program_bounds
 12517              	.LVL1057:
1753:src/keys.c    **** 		goto fin;
 12518              		.loc 1 1753 3 view .LVU3824
1753:src/keys.c    **** 		goto fin;
 12519              		.loc 1 1753 11 is_stmt 0 view .LVU3825
 12520 1742 DAF80030 		ldr	r3, [r10]
1753:src/keys.c    **** 		goto fin;
 12521              		.loc 1 1753 9 view .LVU3826
 12522 1746 B3F8EC07 		ldrh	r0, [r3, #2028]
 12523              	.LVL1058:
1754:src/keys.c    **** 	}
 12524              		.loc 1 1754 3 is_stmt 1 view .LVU3827
 12525 174a FFF7A6B8 		b	.L849
 12526              	.LVL1059:
 12527              	.L1374:
1754:src/keys.c    **** 	}
 12528              		.loc 1 1754 3 is_stmt 0 view .LVU3828
 12529              	.LBE996:
 12530              	.LBE1368:
 12531              	.LBB1369:
 12532              	.LBB943:
2862:src/keys.c    **** 		State2.numdigit = 1;
 12533              		.loc 1 2862 3 is_stmt 1 view .LVU3829
2863:src/keys.c    **** 		return STATE_UNFINISHED;
 12534              		.loc 1 2863 19 is_stmt 0 view .LVU3830
 12535 174e 0122     		movs	r2, #1
2862:src/keys.c    **** 		State2.numdigit = 1;
 12536              		.loc 1 2862 17 view .LVU3831
 12537 1750 A8F80840 		strh	r4, [r8, #8]	@ movhi
2863:src/keys.c    **** 		return STATE_UNFINISHED;
 12538              		.loc 1 2863 3 is_stmt 1 view .LVU3832
 12539 1754 3368     		ldr	r3, [r6]
2863:src/keys.c    **** 		return STATE_UNFINISHED;
 12540              		.loc 1 2863 19 is_stmt 0 view .LVU3833
 12541 1756 88F80B20 		strb	r2, [r8, #11]
2864:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12542              		.loc 1 2864 3 is_stmt 1 view .LVU3834
ARM GAS  /tmp/cc8lpfL1.s 			page 349


2864:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12543              		.loc 1 2864 10 is_stmt 0 view .LVU3835
 12544 175a 3324     		movs	r4, #51
 12545              	.LVL1060:
2864:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12546              		.loc 1 2864 10 view .LVU3836
 12547 175c FEF7AABC 		b	.L803
 12548              	.LVL1061:
 12549              	.L919:
2864:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12550              		.loc 1 2864 10 view .LVU3837
 12551 1760 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 12552              	.LBE943:
 12553              	.LBE1369:
 12554              	.LBB1370:
 12555              	.LBB867:
 12556              	.LBB854:
 371:src/keys.c    **** #ifndef WINGUI
 12557              		.loc 1 371 8 view .LVU3838
 12558 1764 DE4B     		ldr	r3, .L1415
 377:src/keys.c    ****   }
 12559              		.loc 1 377 9 view .LVU3839
 12560 1766 0C21     		movs	r1, #12
 373:src/keys.c    **** #else
 12561              		.loc 1 373 73 view .LVU3840
 12562 1768 4FF0020C 		mov	ip, #2
 12563 176c FEF77ABD 		b	.L918
 12564              	.LVL1062:
 12565              	.L940:
 373:src/keys.c    **** #else
 12566              		.loc 1 373 73 view .LVU3841
 12567              	.LBE854:
 12568              	.LBE867:
 12569              	.LBE1370:
 12570              	.LBB1371:
 12571              	.LBB944:
2840:src/keys.c    **** 			return STATE_UNFINISHED;
 12572              		.loc 1 2840 5 is_stmt 1 view .LVU3842
2840:src/keys.c    **** 			return STATE_UNFINISHED;
 12573              		.loc 1 2840 20 is_stmt 0 view .LVU3843
 12574 1770 013A     		subs	r2, r2, #1
 12575 1772 3368     		ldr	r3, [r6]
 12576 1774 88F80B20 		strb	r2, [r8, #11]
2841:src/keys.c    **** 		}
 12577              		.loc 1 2841 11 view .LVU3844
 12578 1778 3324     		movs	r4, #51
 12579              	.LVL1063:
2841:src/keys.c    **** 		}
 12580              		.loc 1 2841 11 view .LVU3845
 12581 177a FEF79BBC 		b	.L803
 12582              	.LVL1064:
 12583              	.L1011:
2841:src/keys.c    **** 		}
 12584              		.loc 1 2841 11 view .LVU3846
 12585              	.LBE944:
 12586              	.LBE1371:
 12587              	.LBB1372:
ARM GAS  /tmp/cc8lpfL1.s 			page 350


 12588              	.LBB1213:
1820:src/keys.c    **** 			return STATE_BACKSPACE;
 12589              		.loc 1 1820 3 is_stmt 1 view .LVU3847
1820:src/keys.c    **** 			return STATE_BACKSPACE;
 12590              		.loc 1 1820 6 is_stmt 0 view .LVU3848
 12591 177e 0028     		cmp	r0, #0
 12592 1780 3EF499AE 		beq	.L1020
 12593              	.LVL1065:
 12594              	.L1021:
1822:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 12595              		.loc 1 1822 3 is_stmt 1 view .LVU3849
1822:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 12596              		.loc 1 1822 6 is_stmt 0 view .LVU3850
 12597 1784 0328     		cmp	r0, #3
 12598 1786 7FF4B8AD 		bne	.L1005
 12599              	.LVL1066:
1822:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 12600              		.loc 1 1822 6 view .LVU3851
 12601              	.LBE1213:
 12602              	.LBE1372:
 12603              	.LBE1439:
 12604              	.LBE1514:
3650:src/keys.c    **** 	NonProgrammable = 0;
 12605              		.loc 1 3650 7 is_stmt 1 view .LVU3852
3650:src/keys.c    **** 	NonProgrammable = 0;
 12606              		.loc 1 3650 10 is_stmt 0 view .LVU3853
 12607 178a 4C06     		lsls	r4, r1, #25
 12608 178c 40F1BC81 		bpl	.L1164
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12609              		.loc 1 3651 2 is_stmt 1 view .LVU3854
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12610              		.loc 1 3651 18 is_stmt 0 view .LVU3855
 12611 1790 D44B     		ldr	r3, .L1415+4
 12612 1792 0022     		movs	r2, #0
 12613              	.LVL1067:
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12614              		.loc 1 3651 18 view .LVU3856
 12615 1794 1A60     		str	r2, [r3]
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12616              		.loc 1 3652 2 is_stmt 1 view .LVU3857
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12617              		.loc 1 3652 32 is_stmt 0 view .LVU3858
 12618 1796 4FF4BA75 		mov	r5, #372
 12619 179a FEF777BF 		b	.L1106
 12620              	.LVL1068:
 12621              	.L1012:
 12622              	.LBB1515:
 12623              	.LBB1440:
 12624              	.LBB1373:
 12625              	.LBB1214:
1803:src/keys.c    **** 			break;
 12626              		.loc 1 1803 3 is_stmt 1 view .LVU3859
1803:src/keys.c    **** 			break;
 12627              		.loc 1 1803 24 is_stmt 0 view .LVU3860
 12628 179e 831E     		subs	r3, r0, #2
1803:src/keys.c    **** 			break;
 12629              		.loc 1 1803 6 view .LVU3861
ARM GAS  /tmp/cc8lpfL1.s 			page 351


 12630 17a0 DBB2     		uxtb	r3, r3
 12631 17a2 012B     		cmp	r3, #1
 12632 17a4 7FF6A9AD 		bls	.L1005
1805:src/keys.c    **** 			State2.multi = 1;
 12633              		.loc 1 1805 3 is_stmt 1 view .LVU3862
1805:src/keys.c    **** 			State2.multi = 1;
 12634              		.loc 1 1805 6 is_stmt 0 view .LVU3863
 12635 17a8 0128     		cmp	r0, #1
 12636 17aa 03D1     		bne	.L1019
1805:src/keys.c    **** 			State2.multi = 1;
 12637              		.loc 1 1805 24 view .LVU3864
 12638 17ac 11F04001 		ands	r1, r1, #64
 12639 17b0 00F0AD81 		beq	.L1389
 12640              	.L1019:
1811:src/keys.c    **** 		State2.alphashift = 0;
 12641              		.loc 1 1811 3 is_stmt 1 view .LVU3865
1812:src/keys.c    **** #ifdef DM42
 12642              		.loc 1 1812 3 view .LVU3866
1811:src/keys.c    **** 		State2.alphashift = 0;
 12643              		.loc 1 1811 17 is_stmt 0 view .LVU3867
 12644 17b4 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
1814:src/keys.c    **** 		display_current_menu();
 12645              		.loc 1 1814 3 view .LVU3868
 12646 17b8 4FF0FF30 		mov	r0, #-1
 12647              	.LVL1069:
1811:src/keys.c    **** 		State2.alphashift = 0;
 12648              		.loc 1 1811 17 view .LVU3869
 12649 17bc 23F01803 		bic	r3, r3, #24
 12650 17c0 88F81630 		strb	r3, [r8, #22]
1814:src/keys.c    **** 		display_current_menu();
 12651              		.loc 1 1814 3 is_stmt 1 view .LVU3870
1817:src/keys.c    **** 
 12652              		.loc 1 1817 10 is_stmt 0 view .LVU3871
 12653 17c4 3324     		movs	r4, #51
1814:src/keys.c    **** 		display_current_menu();
 12654              		.loc 1 1814 3 view .LVU3872
 12655 17c6 FFF7FEFF 		bl	set_menu
 12656              	.LVL1070:
1815:src/keys.c    **** #endif
 12657              		.loc 1 1815 3 is_stmt 1 view .LVU3873
 12658 17ca FFF7FEFF 		bl	display_current_menu
 12659              	.LVL1071:
1817:src/keys.c    **** 
 12660              		.loc 1 1817 3 view .LVU3874
 12661 17ce 3368     		ldr	r3, [r6]
1817:src/keys.c    **** 
 12662              		.loc 1 1817 10 is_stmt 0 view .LVU3875
 12663 17d0 FEF770BC 		b	.L803
 12664              	.LVL1072:
 12665              	.L1388:
1817:src/keys.c    **** 
 12666              		.loc 1 1817 10 view .LVU3876
 12667              	.LBE1214:
 12668              	.LBE1373:
 12669              	.LBB1374:
 12670              	.LBB903:
3007:src/keys.c    **** 		State2.digval = pc;
ARM GAS  /tmp/cc8lpfL1.s 			page 352


 12671              		.loc 1 3007 4 is_stmt 1 view .LVU3877
3007:src/keys.c    **** 		State2.digval = pc;
 12672              		.loc 1 3007 9 is_stmt 0 view .LVU3878
 12673 17d4 2046     		mov	r0, r4
 12674 17d6 0121     		movs	r1, #1
 12675 17d8 FFF7FEFF 		bl	advance_to_next_label
 12676              	.LVL1073:
 12677 17dc 0446     		mov	r4, r0
 12678              	.LVL1074:
3007:src/keys.c    **** 		State2.digval = pc;
 12679              		.loc 1 3007 9 view .LVU3879
 12680 17de 71E7     		b	.L951
 12681              	.LVL1075:
 12682              	.L1307:
3007:src/keys.c    **** 		State2.digval = pc;
 12683              		.loc 1 3007 9 view .LVU3880
 12684              	.LBE903:
 12685              	.LBE1374:
 12686              	.LBB1375:
 12687              	.LBB1215:
1869:src/keys.c    **** 		else if (shift == SHIFT_H)
 12688              		.loc 1 1869 4 is_stmt 1 view .LVU3881
1869:src/keys.c    **** 		else if (shift == SHIFT_H)
 12689              		.loc 1 1869 34 is_stmt 0 view .LVU3882
 12690 17e0 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 12691 17e4 3368     		ldr	r3, [r6]
 12692 17e6 C2F30011 		ubfx	r1, r2, #4, #1
1869:src/keys.c    **** 		else if (shift == SHIFT_H)
 12693              		.loc 1 1869 26 view .LVU3883
 12694 17ea C1F10101 		rsb	r1, r1, #1
1869:src/keys.c    **** 		else if (shift == SHIFT_H)
 12695              		.loc 1 1869 22 view .LVU3884
 12696 17ee 61F30412 		bfi	r2, r1, #4, #1
 12697 17f2 88F81620 		strb	r2, [r8, #22]
1879:src/keys.c    **** 
 12698              		.loc 1 1879 10 view .LVU3885
 12699 17f6 3324     		movs	r4, #51
 12700 17f8 FEF75CBC 		b	.L803
 12701              	.LVL1076:
 12702              	.L1039:
1879:src/keys.c    **** 
 12703              		.loc 1 1879 10 view .LVU3886
 12704              	.LBE1215:
 12705              	.LBE1375:
 12706              	.LBB1376:
 12707              	.LBB1317:
1300:src/keys.c    ****      return process_fg_shifted (c);
 12708              		.loc 1 1300 4 is_stmt 1 view .LVU3887
1300:src/keys.c    ****      return process_fg_shifted (c);
 12709              		.loc 1 1300 7 is_stmt 0 view .LVU3888
 12710 17fc 631F     		subs	r3, r4, #5
 12711 17fe 032B     		cmp	r3, #3
 12712 1800 7FF629AF 		bls	.L1298
1304:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
 12713              		.loc 1 1304 4 is_stmt 1 view .LVU3889
1304:src/keys.c    ****      if (shift == SHIFT_F) { // special pi processing
 12714              		.loc 1 1304 7 is_stmt 0 view .LVU3890
ARM GAS  /tmp/cc8lpfL1.s 			page 353


 12715 1804 0F2C     		cmp	r4, #15
 12716 1806 3FF4FCAD 		beq	.L1124
 12717              	.L1293:
1331:src/keys.c    ****      switch (c) {
 12718              		.loc 1 1331 6 is_stmt 1 view .LVU3891
 12719 180a 0020     		movs	r0, #0
 12720 180c FFF7FEFF 		bl	finish_cpx_entry
 12721              	.LVL1077:
1332:src/keys.c    ****      case (K60):
 12722              		.loc 1 1332 6 view .LVU3892
 12723 1810 A4F10D03 		sub	r3, r4, #13
 12724 1814 192B     		cmp	r3, #25
 12725 1816 3FF6F7AD 		bhi	.L1301
 12726 181a 01A2     		adr	r2, .L1051
 12727 181c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 12728              		.p2align 2
 12729              	.L1051:
 12730 1820 891D0000 		.word	.L1058+1
 12731 1824 311D0000 		.word	.L1057+1
 12732 1828 09140000 		.word	.L1301+1
 12733 182c C71C0000 		.word	.L1056+1
 12734 1830 09140000 		.word	.L1301+1
 12735 1834 09140000 		.word	.L1301+1
 12736 1838 09140000 		.word	.L1301+1
 12737 183c 09140000 		.word	.L1301+1
 12738 1840 09140000 		.word	.L1301+1
 12739 1844 B51C0000 		.word	.L1055+1
 12740 1848 09140000 		.word	.L1301+1
 12741 184c 3D190000 		.word	.L1054+1
 12742 1850 09140000 		.word	.L1301+1
 12743 1854 09140000 		.word	.L1301+1
 12744 1858 09140000 		.word	.L1301+1
 12745 185c 2B190000 		.word	.L1053+1
 12746 1860 09140000 		.word	.L1301+1
 12747 1864 09140000 		.word	.L1301+1
 12748 1868 09140000 		.word	.L1301+1
 12749 186c 09140000 		.word	.L1301+1
 12750 1870 09140000 		.word	.L1301+1
 12751 1874 09140000 		.word	.L1301+1
 12752 1878 09140000 		.word	.L1301+1
 12753 187c BF180000 		.word	.L1052+1
 12754 1880 09140000 		.word	.L1301+1
 12755 1884 95180000 		.word	.L1050+1
 12756              		.p2align 1
 12757              	.L1387:
1293:src/keys.c    ****    }
 12758              		.loc 1 1293 6 view .LVU3893
1293:src/keys.c    ****    }
 12759              		.loc 1 1293 13 is_stmt 0 view .LVU3894
 12760 1888 2046     		mov	r0, r4
 12761 188a FFF7FEFF 		bl	process_h_shifted
 12762              	.LVL1078:
 12763 188e 0446     		mov	r4, r0
 12764              	.LVL1079:
1293:src/keys.c    ****    }
 12765              		.loc 1 1293 13 view .LVU3895
 12766 1890 FEF7A4BD 		b	.L837
ARM GAS  /tmp/cc8lpfL1.s 			page 354


 12767              	.LVL1080:
 12768              	.L1050:
1369:src/keys.c    ****        if (shift == SHIFT_F) {
 12769              		.loc 1 1369 8 is_stmt 1 view .LVU3896
 12770              	.LBB1233:
 12771              	.LBI1233:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 12772              		.loc 1 114 13 view .LVU3897
 12773              	.LBE1233:
 12774              	.LBE1317:
 12775              	.LBE1376:
 12776              	.LBE1440:
 12777              	.LBE1515:
 115:src/keys.c    **** }
 12778              		.loc 1 115 2 view .LVU3898
 12779              	.LBB1516:
 12780              	.LBB1441:
 12781              	.LBB1377:
 12782              	.LBB1318:
 12783              	.LBB1240:
 12784              	.LBB1234:
 12785              	.LBI1234:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 12786              		.loc 1 104 20 view .LVU3899
 12787              	.LBB1235:
 105:src/keys.c    **** 	State2.shifts = shift;
 12788              		.loc 1 105 2 view .LVU3900
 12789              	.LBB1236:
 12790              	.LBI1236:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 12791              		.loc 1 96 13 view .LVU3901
 12792              	.LBB1237:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12793              		.loc 1 97 2 view .LVU3902
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12794              		.loc 1 97 18 is_stmt 0 view .LVU3903
 12795 1894 FFF7FEFF 		bl	shift_down
 12796              	.LVL1081:
  98:src/keys.c    **** }
 12797              		.loc 1 98 2 is_stmt 1 view .LVU3904
 12798              	.LBE1237:
 12799              	.LBE1236:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12800              		.loc 1 106 2 view .LVU3905
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12801              		.loc 1 106 16 is_stmt 0 view .LVU3906
 12802 1898 0023     		movs	r3, #0
 12803              	.LBE1235:
 12804              	.LBE1234:
 12805              	.LBE1240:
1370:src/keys.c    **** 	 return OP_NIL | OP_C_IM;
 12806              		.loc 1 1370 11 view .LVU3907
 12807 189a BBF1010F 		cmp	fp, #1
 12808              	.LBB1241:
 12809              	.LBB1239:
 12810              	.LBB1238:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
ARM GAS  /tmp/cc8lpfL1.s 			page 355


 12811              		.loc 1 106 16 view .LVU3908
 12812 189e 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 12813              		.loc 1 108 2 is_stmt 1 view .LVU3909
 12814              	.LVL1082:
 108:src/keys.c    **** }
 12815              		.loc 1 108 2 is_stmt 0 view .LVU3910
 12816              	.LBE1238:
 12817              	.LBE1239:
 12818              	.LBE1241:
1370:src/keys.c    **** 	 return OP_NIL | OP_C_IM;
 12819              		.loc 1 1370 8 is_stmt 1 view .LVU3911
1370:src/keys.c    **** 	 return OP_NIL | OP_C_IM;
 12820              		.loc 1 1370 11 is_stmt 0 view .LVU3912
 12821 18a2 00F03B82 		beq	.L1069
1373:src/keys.c    **** 	 return OP_NIL | OP_C_RE;
 12822              		.loc 1 1373 13 is_stmt 1 view .LVU3913
1373:src/keys.c    **** 	 return OP_NIL | OP_C_RE;
 12823              		.loc 1 1373 16 is_stmt 0 view .LVU3914
 12824 18a6 BBF1020F 		cmp	fp, #2
 12825 18aa 34D0     		beq	.L1390
 12826              	.L1065:
1407:src/keys.c    ****      return STATE_UNFINISHED;
 12827              		.loc 1 1407 6 is_stmt 1 view .LVU3915
 12828              	.LBB1242:
 12829              	.LBI1242:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 12830              		.loc 1 114 13 view .LVU3916
 12831              	.LBE1242:
 12832              	.LBE1318:
 12833              	.LBE1377:
 12834              	.LBE1441:
 12835              	.LBE1516:
 115:src/keys.c    **** }
 12836              		.loc 1 115 2 view .LVU3917
 12837              	.LVL1083:
 12838              	.LBB1517:
 12839              	.LBB1442:
 12840              	.LBB1378:
 12841              	.LBB1319:
 12842              	.LBB1247:
 12843              	.LBB1243:
 12844              	.LBI1243:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 12845              		.loc 1 104 20 view .LVU3918
 12846              	.LBB1244:
 105:src/keys.c    **** 	State2.shifts = shift;
 12847              		.loc 1 105 2 view .LVU3919
 12848              	.LBB1245:
 12849              	.LBI1245:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 12850              		.loc 1 96 13 view .LVU3920
 12851              	.LBB1246:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12852              		.loc 1 97 2 view .LVU3921
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12853              		.loc 1 97 18 is_stmt 0 view .LVU3922
ARM GAS  /tmp/cc8lpfL1.s 			page 356


 12854 18ac FFF7FEFF 		bl	shift_down
 12855              	.LVL1084:
  98:src/keys.c    **** }
 12856              		.loc 1 98 2 is_stmt 1 view .LVU3923
 12857              	.LBE1246:
 12858              	.LBE1245:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12859              		.loc 1 106 2 view .LVU3924
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12860              		.loc 1 106 16 is_stmt 0 view .LVU3925
 12861 18b0 0022     		movs	r2, #0
 12862 18b2 3368     		ldr	r3, [r6]
 12863 18b4 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 12864              		.loc 1 108 2 is_stmt 1 view .LVU3926
 12865              	.LVL1085:
 108:src/keys.c    **** }
 12866              		.loc 1 108 2 is_stmt 0 view .LVU3927
 12867              	.LBE1244:
 12868              	.LBE1243:
 12869              	.LBE1247:
1408:src/keys.c    ****    }
 12870              		.loc 1 1408 6 is_stmt 1 view .LVU3928
1408:src/keys.c    ****    }
 12871              		.loc 1 1408 13 is_stmt 0 view .LVU3929
 12872 18b8 3324     		movs	r4, #51
 12873              	.LVL1086:
1408:src/keys.c    ****    }
 12874              		.loc 1 1408 13 view .LVU3930
 12875 18ba FEF7FBBB 		b	.L803
 12876              	.LVL1087:
 12877              	.L1052:
1334:src/keys.c    ****        if (shift == SHIFT_H) return (OP_NIL | OP_OFF);
 12878              		.loc 1 1334 8 is_stmt 1 view .LVU3931
 12879              	.LBB1248:
 12880              	.LBI1248:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 12881              		.loc 1 114 13 view .LVU3932
 12882              	.LBE1248:
 12883              	.LBE1319:
 12884              	.LBE1378:
 12885              	.LBE1442:
 12886              	.LBE1517:
 115:src/keys.c    **** }
 12887              		.loc 1 115 2 view .LVU3933
 12888              	.LBB1518:
 12889              	.LBB1443:
 12890              	.LBB1379:
 12891              	.LBB1320:
 12892              	.LBB1255:
 12893              	.LBB1249:
 12894              	.LBI1249:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 12895              		.loc 1 104 20 view .LVU3934
 12896              	.LBB1250:
 105:src/keys.c    **** 	State2.shifts = shift;
 12897              		.loc 1 105 2 view .LVU3935
ARM GAS  /tmp/cc8lpfL1.s 			page 357


 12898              	.LBB1251:
 12899              	.LBI1251:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 12900              		.loc 1 96 13 view .LVU3936
 12901              	.LBB1252:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12902              		.loc 1 97 2 view .LVU3937
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12903              		.loc 1 97 18 is_stmt 0 view .LVU3938
 12904 18be FFF7FEFF 		bl	shift_down
 12905              	.LVL1088:
  98:src/keys.c    **** }
 12906              		.loc 1 98 2 is_stmt 1 view .LVU3939
 12907              	.LBE1252:
 12908              	.LBE1251:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12909              		.loc 1 106 2 view .LVU3940
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12910              		.loc 1 106 16 is_stmt 0 view .LVU3941
 12911 18c2 0023     		movs	r3, #0
 12912              	.LBE1250:
 12913              	.LBE1249:
 12914              	.LBE1255:
1335:src/keys.c    ****      case (K21): // x<->y key
 12915              		.loc 1 1335 11 view .LVU3942
 12916 18c4 BBF1030F 		cmp	fp, #3
 12917              	.LBB1256:
 12918              	.LBB1254:
 12919              	.LBB1253:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12920              		.loc 1 106 16 view .LVU3943
 12921 18c8 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 12922              		.loc 1 108 2 is_stmt 1 view .LVU3944
 12923              	.LVL1089:
 108:src/keys.c    **** }
 12924              		.loc 1 108 2 is_stmt 0 view .LVU3945
 12925              	.LBE1253:
 12926              	.LBE1254:
 12927              	.LBE1256:
1335:src/keys.c    ****      case (K21): // x<->y key
 12928              		.loc 1 1335 8 is_stmt 1 view .LVU3946
1335:src/keys.c    ****      case (K21): // x<->y key
 12929              		.loc 1 1335 11 is_stmt 0 view .LVU3947
 12930 18cc 00F09881 		beq	.L1391
1337:src/keys.c    **** 	 reset_shift();
 12931              		.loc 1 1337 8 is_stmt 1 view .LVU3948
1337:src/keys.c    **** 	 reset_shift();
 12932              		.loc 1 1337 29 is_stmt 0 view .LVU3949
 12933 18d0 0BF1FF33 		add	r3, fp, #-1
1337:src/keys.c    **** 	 reset_shift();
 12934              		.loc 1 1337 11 view .LVU3950
 12935 18d4 DBB2     		uxtb	r3, r3
 12936 18d6 012B     		cmp	r3, #1
 12937 18d8 E8D8     		bhi	.L1065
 12938              	.L1123:
1338:src/keys.c    **** 	 CLEAR_POLAR_READY;
ARM GAS  /tmp/cc8lpfL1.s 			page 358


 12939              		.loc 1 1338 3 is_stmt 1 view .LVU3951
 12940              	.LBB1257:
 12941              	.LBI1257:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 12942              		.loc 1 114 13 view .LVU3952
 12943              	.LBE1257:
 12944              	.LBE1320:
 12945              	.LBE1379:
 12946              	.LBE1443:
 12947              	.LBE1518:
 115:src/keys.c    **** }
 12948              		.loc 1 115 2 view .LVU3953
 12949              	.LVL1090:
 12950              	.LBB1519:
 12951              	.LBB1444:
 12952              	.LBB1380:
 12953              	.LBB1321:
 12954              	.LBB1264:
 12955              	.LBB1258:
 12956              	.LBI1258:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 12957              		.loc 1 104 20 view .LVU3954
 12958              	.LBB1259:
 105:src/keys.c    **** 	State2.shifts = shift;
 12959              		.loc 1 105 2 view .LVU3955
 12960              	.LBB1260:
 12961              	.LBI1260:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 12962              		.loc 1 96 13 view .LVU3956
 12963              	.LBB1261:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12964              		.loc 1 97 2 view .LVU3957
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12965              		.loc 1 97 18 is_stmt 0 view .LVU3958
 12966 18da FFF7FEFF 		bl	shift_down
 12967              	.LVL1091:
  98:src/keys.c    **** }
 12968              		.loc 1 98 2 is_stmt 1 view .LVU3959
 12969              	.LBE1261:
 12970              	.LBE1260:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12971              		.loc 1 106 2 view .LVU3960
 12972              	.LBE1259:
 12973              	.LBE1258:
 12974              	.LBE1264:
1339:src/keys.c    **** 	 return RARG(RARG_SWAPX, regY_idx);
 12975              		.loc 1 1339 3 is_stmt 0 view .LVU3961
 12976 18de DAF80010 		ldr	r1, [r10]
 12977              	.LBB1265:
 12978              	.LBB1263:
 12979              	.LBB1262:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 12980              		.loc 1 106 16 view .LVU3962
 12981 18e2 0022     		movs	r2, #0
 12982 18e4 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 12983              		.loc 1 108 2 is_stmt 1 view .LVU3963
ARM GAS  /tmp/cc8lpfL1.s 			page 359


 12984              	.LVL1092:
 108:src/keys.c    **** }
 12985              		.loc 1 108 2 is_stmt 0 view .LVU3964
 12986              	.LBE1262:
 12987              	.LBE1263:
 12988              	.LBE1265:
1339:src/keys.c    **** 	 return RARG(RARG_SWAPX, regY_idx);
 12989              		.loc 1 1339 3 is_stmt 1 view .LVU3965
 12990 18e8 91F8AD37 		ldrb	r3, [r1, #1965]	@ zero_extendqisi2
 12991 18ec 43F00103 		orr	r3, r3, #1
 12992 18f0 81F8AD37 		strb	r3, [r1, #1965]
1340:src/keys.c    ****        }
 12993              		.loc 1 1340 3 view .LVU3966
 12994              	.LVL1093:
1340:src/keys.c    ****        }
 12995              		.loc 1 1340 3 is_stmt 0 view .LVU3967
 12996              	.LBE1321:
 12997              	.LBE1380:
 12998              	.LBE1444:
 12999              	.LBE1519:
3650:src/keys.c    **** 	NonProgrammable = 0;
 13000              		.loc 1 3650 7 is_stmt 1 view .LVU3968
3650:src/keys.c    **** 	NonProgrammable = 0;
 13001              		.loc 1 3650 11 is_stmt 0 view .LVU3969
 13002 18f4 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3650:src/keys.c    **** 	NonProgrammable = 0;
 13003              		.loc 1 3650 10 view .LVU3970
 13004 18f8 5B06     		lsls	r3, r3, #25
 13005 18fa 00F12F82 		bmi	.L1062
 13006              	.LBB1520:
 13007              	.LBB1445:
 13008              	.LBB1381:
 13009              	.LBB1322:
1340:src/keys.c    ****        }
 13010              		.loc 1 1340 10 view .LVU3971
 13011 18fe 43F26514 		movw	r4, #12645
 13012              	.LVL1094:
 13013              	.L1046:
1340:src/keys.c    ****        }
 13014              		.loc 1 1340 10 view .LVU3972
 13015              	.LBE1322:
 13016              	.LBE1381:
 13017              	.LBE1445:
 13018              	.LBE1520:
3650:src/keys.c    **** 	NonProgrammable = 0;
 13019              		.loc 1 3650 26 view .LVU3973
 13020 1902 784B     		ldr	r3, .L1415+4
 13021 1904 1A68     		ldr	r2, [r3]
 13022 1906 002A     		cmp	r2, #0
 13023 1908 00F05482 		beq	.L1392
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13024              		.loc 1 3651 2 is_stmt 1 view .LVU3974
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13025              		.loc 1 3651 18 is_stmt 0 view .LVU3975
 13026 190c 0022     		movs	r2, #0
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13027              		.loc 1 3652 32 view .LVU3976
ARM GAS  /tmp/cc8lpfL1.s 			page 360


 13028 190e 2546     		mov	r5, r4
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13029              		.loc 1 3651 18 view .LVU3977
 13030 1910 1A60     		str	r2, [r3]
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13031              		.loc 1 3652 2 is_stmt 1 view .LVU3978
 13032 1912 FEF7BBBE 		b	.L1106
 13033              	.LVL1095:
 13034              	.L1390:
3650:src/keys.c    **** 	NonProgrammable = 0;
 13035              		.loc 1 3650 7 view .LVU3979
3650:src/keys.c    **** 	NonProgrammable = 0;
 13036              		.loc 1 3650 11 is_stmt 0 view .LVU3980
 13037 1916 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3650:src/keys.c    **** 	NonProgrammable = 0;
 13038              		.loc 1 3650 10 view .LVU3981
 13039 191a 5506     		lsls	r5, r2, #25
 13040 191c 1DD5     		bpl	.L1163
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13041              		.loc 1 3651 2 is_stmt 1 view .LVU3982
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13042              		.loc 1 3651 18 is_stmt 0 view .LVU3983
 13043 191e 714A     		ldr	r2, .L1415+4
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13044              		.loc 1 3652 32 view .LVU3984
 13045 1920 40F2C515 		movw	r5, #453
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13046              		.loc 1 3651 18 view .LVU3985
 13047 1924 1360     		str	r3, [r2]
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13048              		.loc 1 3652 2 is_stmt 1 view .LVU3986
 13049 1926 FEF7B1BE 		b	.L1106
 13050              	.LVL1096:
 13051              	.L1053:
 13052              	.LBB1521:
 13053              	.LBB1446:
 13054              	.LBB1382:
 13055              	.LBB1323:
1378:src/keys.c    **** 	 reset_shift();
 13056              		.loc 1 1378 8 view .LVU3987
1378:src/keys.c    **** 	 reset_shift();
 13057              		.loc 1 1378 11 is_stmt 0 view .LVU3988
 13058 192a BBF1030F 		cmp	fp, #3
 13059 192e 17D0     		beq	.L1393
1383:src/keys.c    ****        }
 13060              		.loc 1 1383 3 is_stmt 1 view .LVU3989
1383:src/keys.c    ****        }
 13061              		.loc 1 1383 10 is_stmt 0 view .LVU3990
 13062 1930 1C20     		movs	r0, #28
 13063 1932 FFF7FEFF 		bl	process_cmplx
 13064              	.LVL1097:
 13065 1936 0446     		mov	r4, r0
 13066              	.LVL1098:
1383:src/keys.c    ****        }
 13067              		.loc 1 1383 10 view .LVU3991
 13068 1938 FEF750BD 		b	.L837
 13069              	.LVL1099:
ARM GAS  /tmp/cc8lpfL1.s 			page 361


 13070              	.L1054:
1347:src/keys.c    **** 	 SET_RECTANGULAR_DISPLAY;
 13071              		.loc 1 1347 8 is_stmt 1 view .LVU3992
1347:src/keys.c    **** 	 SET_RECTANGULAR_DISPLAY;
 13072              		.loc 1 1347 11 is_stmt 0 view .LVU3993
 13073 193c BBF1010F 		cmp	fp, #1
 13074 1940 23D0     		beq	.L1394
1350:src/keys.c    **** 	 SET_POLAR_DISPLAY;
 13075              		.loc 1 1350 13 is_stmt 1 view .LVU3994
1350:src/keys.c    **** 	 SET_POLAR_DISPLAY;
 13076              		.loc 1 1350 16 is_stmt 0 view .LVU3995
 13077 1942 BBF1020F 		cmp	fp, #2
 13078 1946 17D0     		beq	.L1395
1355:src/keys.c    **** 	 return process_cmplx (c);
 13079              		.loc 1 1355 13 is_stmt 1 view .LVU3996
1355:src/keys.c    **** 	 return process_cmplx (c);
 13080              		.loc 1 1355 16 is_stmt 0 view .LVU3997
 13081 1948 BBF1030F 		cmp	fp, #3
 13082 194c AED1     		bne	.L1065
1356:src/keys.c    ****        }
 13083              		.loc 1 1356 3 is_stmt 1 view .LVU3998
1356:src/keys.c    ****        }
 13084              		.loc 1 1356 10 is_stmt 0 view .LVU3999
 13085 194e 1820     		movs	r0, #24
 13086 1950 FFF7FEFF 		bl	process_cmplx
 13087              	.LVL1100:
 13088 1954 0446     		mov	r4, r0
 13089              	.LVL1101:
1356:src/keys.c    ****        }
 13090              		.loc 1 1356 10 view .LVU4000
 13091 1956 FEF741BD 		b	.L837
 13092              	.LVL1102:
 13093              	.L1163:
1374:src/keys.c    ****        }
 13094              		.loc 1 1374 10 view .LVU4001
 13095 195a 40F2C514 		movw	r4, #453
 13096 195e D0E7     		b	.L1046
 13097              	.LVL1103:
 13098              	.L1393:
1379:src/keys.c    **** 	 return OP_CDYA | OP_CDOT;
 13099              		.loc 1 1379 3 is_stmt 1 view .LVU4002
 13100              	.LBB1266:
 13101              	.LBI1266:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13102              		.loc 1 114 13 view .LVU4003
 13103              	.LBE1266:
 13104              	.LBE1323:
 13105              	.LBE1382:
 13106              	.LBE1446:
 13107              	.LBE1521:
 115:src/keys.c    **** }
 13108              		.loc 1 115 2 view .LVU4004
 13109              	.LBB1522:
 13110              	.LBB1447:
 13111              	.LBB1383:
 13112              	.LBB1324:
 13113              	.LBB1275:
ARM GAS  /tmp/cc8lpfL1.s 			page 362


 13114              	.LBB1267:
 13115              	.LBI1267:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13116              		.loc 1 104 20 view .LVU4005
 13117              	.LBB1268:
 105:src/keys.c    **** 	State2.shifts = shift;
 13118              		.loc 1 105 2 view .LVU4006
 13119              	.LBB1269:
 13120              	.LBI1269:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13121              		.loc 1 96 13 view .LVU4007
 13122              	.LBB1270:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13123              		.loc 1 97 2 view .LVU4008
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13124              		.loc 1 97 18 is_stmt 0 view .LVU4009
 13125 1960 FFF7FEFF 		bl	shift_down
 13126              	.LVL1104:
  98:src/keys.c    **** }
 13127              		.loc 1 98 2 is_stmt 1 view .LVU4010
 13128              	.LBE1270:
 13129              	.LBE1269:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13130              		.loc 1 106 2 view .LVU4011
 13131              	.LBE1268:
 13132              	.LBE1267:
 13133              	.LBE1275:
 13134              	.LBE1324:
 13135              	.LBE1383:
 13136              	.LBE1447:
 13137              	.LBE1522:
3650:src/keys.c    **** 	NonProgrammable = 0;
 13138              		.loc 1 3650 11 is_stmt 0 view .LVU4012
 13139 1964 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 13140              	.LBB1523:
 13141              	.LBB1448:
 13142              	.LBB1384:
 13143              	.LBB1325:
 13144              	.LBB1276:
 13145              	.LBB1273:
 13146              	.LBB1271:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13147              		.loc 1 106 16 view .LVU4013
 13148 1968 0023     		movs	r3, #0
 13149              	.LBE1271:
 13150              	.LBE1273:
 13151              	.LBE1276:
 13152              	.LBE1325:
 13153              	.LBE1384:
 13154              	.LBE1448:
 13155              	.LBE1523:
3650:src/keys.c    **** 	NonProgrammable = 0;
 13156              		.loc 1 3650 10 view .LVU4014
 13157 196a 5506     		lsls	r5, r2, #25
 13158              	.LBB1524:
 13159              	.LBB1449:
 13160              	.LBB1385:
ARM GAS  /tmp/cc8lpfL1.s 			page 363


 13161              	.LBB1326:
 13162              	.LBB1277:
 13163              	.LBB1274:
 13164              	.LBB1272:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13165              		.loc 1 106 16 view .LVU4015
 13166 196c 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13167              		.loc 1 108 2 is_stmt 1 view .LVU4016
 13168              	.LVL1105:
 108:src/keys.c    **** }
 13169              		.loc 1 108 2 is_stmt 0 view .LVU4017
 13170              	.LBE1272:
 13171              	.LBE1274:
 13172              	.LBE1277:
1380:src/keys.c    ****        }
 13173              		.loc 1 1380 3 is_stmt 1 view .LVU4018
1380:src/keys.c    ****        }
 13174              		.loc 1 1380 3 is_stmt 0 view .LVU4019
 13175              	.LBE1326:
 13176              	.LBE1385:
 13177              	.LBE1449:
 13178              	.LBE1524:
3650:src/keys.c    **** 	NonProgrammable = 0;
 13179              		.loc 1 3650 7 is_stmt 1 view .LVU4020
3650:src/keys.c    **** 	NonProgrammable = 0;
 13180              		.loc 1 3650 10 is_stmt 0 view .LVU4021
 13181 1970 14D4     		bmi	.L1072
 13182              	.LBB1525:
 13183              	.LBB1450:
 13184              	.LBB1386:
 13185              	.LBB1327:
1380:src/keys.c    ****        }
 13186              		.loc 1 1380 10 view .LVU4022
 13187 1972 40F23364 		movw	r4, #1587
 13188 1976 C4E7     		b	.L1046
 13189              	.LVL1106:
 13190              	.L1395:
1351:src/keys.c    **** 	 CLEAR_POLAR_READY;
 13191              		.loc 1 1351 3 is_stmt 1 view .LVU4023
 13192 1978 DAF80020 		ldr	r2, [r10]
1352:src/keys.c    **** 	 update_speed(0); // new polar display calculated from keyboard needs a speed boost
 13193              		.loc 1 1352 3 view .LVU4024
1351:src/keys.c    **** 	 CLEAR_POLAR_READY;
 13194              		.loc 1 1351 3 is_stmt 0 view .LVU4025
 13195 197c B2F8AC37 		ldrh	r3, [r2, #1964]
 13196 1980 43F4C073 		orr	r3, r3, #384
 13197 1984 A2F8AC37 		strh	r3, [r2, #1964]	@ movhi
1353:src/keys.c    ****        }
 13198              		.loc 1 1353 18 is_stmt 1 view .LVU4026
 13199 1988 90E7     		b	.L1065
 13200              	.L1394:
1348:src/keys.c    ****        }
 13201              		.loc 1 1348 3 view .LVU4027
 13202 198a DAF80030 		ldr	r3, [r10]
 13203 198e 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
 13204 1992 6FF3C712 		bfc	r2, #7, #1
ARM GAS  /tmp/cc8lpfL1.s 			page 364


 13205 1996 83F8AC27 		strb	r2, [r3, #1964]
 13206 199a 87E7     		b	.L1065
 13207              	.LVL1107:
 13208              	.L1072:
1348:src/keys.c    ****        }
 13209              		.loc 1 1348 3 is_stmt 0 view .LVU4028
 13210              	.LBE1327:
 13211              	.LBE1386:
 13212              	.LBE1450:
 13213              	.LBE1525:
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13214              		.loc 1 3651 2 is_stmt 1 view .LVU4029
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13215              		.loc 1 3651 18 is_stmt 0 view .LVU4030
 13216 199c 514A     		ldr	r2, .L1415+4
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13217              		.loc 1 3652 32 view .LVU4031
 13218 199e 40F23365 		movw	r5, #1587
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13219              		.loc 1 3651 18 view .LVU4032
 13220 19a2 1360     		str	r3, [r2]
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13221              		.loc 1 3652 2 is_stmt 1 view .LVU4033
 13222 19a4 FEF772BE 		b	.L1106
 13223              	.LVL1108:
 13224              	.L987:
 13225              	.LBB1526:
 13226              	.LBB1451:
 13227              	.LBB1387:
 13228              	.LBB1141:
3160:src/keys.c    **** 		goto reset_window;
 13229              		.loc 1 3160 4 view .LVU4034
3160:src/keys.c    **** 		goto reset_window;
 13230              		.loc 1 3160 24 is_stmt 0 view .LVU4035
 13231 19a8 0AF1FF3A 		add	r10, r10, #-1
 13232              	.LVL1109:
3160:src/keys.c    **** 		goto reset_window;
 13233              		.loc 1 3160 18 view .LVU4036
 13234 19ac A8F808A0 		strh	r10, [r8, #8]	@ movhi
 13235 19b0 FFF7D2BB 		b	.L979
 13236              	.LVL1110:
 13237              	.L1383:
3156:src/keys.c    **** 			--State2.digval;
 13238              		.loc 1 3156 5 is_stmt 1 view .LVU4037
3156:src/keys.c    **** 			--State2.digval;
 13239              		.loc 1 3156 21 is_stmt 0 view .LVU4038
 13240 19b4 FFF7FEFF 		bl	global_regs
 13241              	.LVL1111:
3156:src/keys.c    **** 			--State2.digval;
 13242              		.loc 1 3156 19 view .LVU4039
 13243 19b8 A8F80800 		strh	r0, [r8, #8]	@ movhi
 13244 19bc FFF7C7BB 		b	.L988
 13245              	.LVL1112:
 13246              	.L1076:
3156:src/keys.c    **** 			--State2.digval;
 13247              		.loc 1 3156 19 view .LVU4040
 13248              	.LBE1141:
ARM GAS  /tmp/cc8lpfL1.s 			page 365


 13249              	.LBE1387:
 13250              	.LBB1388:
 13251              	.LBB1328:
1442:src/keys.c    ****        CLEAR_REAL;
 13252              		.loc 1 1442 6 is_stmt 1 view .LVU4041
1442:src/keys.c    ****        CLEAR_REAL;
 13253              		.loc 1 1442 10 is_stmt 0 view .LVU4042
 13254 19c0 DAF80020 		ldr	r2, [r10]
 13255 19c4 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
1442:src/keys.c    ****        CLEAR_REAL;
 13256              		.loc 1 1442 9 view .LVU4043
 13257 19c8 9807     		lsls	r0, r3, #30
 13258 19ca 3CD4     		bmi	.L1396
1449:src/keys.c    ****        finish_cpx_entry (1);
 13259              		.loc 1 1449 11 is_stmt 1 view .LVU4044
1449:src/keys.c    ****        finish_cpx_entry (1);
 13260              		.loc 1 1449 14 is_stmt 0 view .LVU4045
 13261 19cc 5907     		lsls	r1, r3, #29
 13262 19ce 2FD5     		bpl	.L1085
1450:src/keys.c    ****      }
 13263              		.loc 1 1450 8 is_stmt 1 view .LVU4046
 13264 19d0 0120     		movs	r0, #1
 13265 19d2 FFF7FEFF 		bl	finish_cpx_entry
 13266              	.LVL1113:
1456:src/keys.c    ****    default:;
 13267              		.loc 1 1456 13 is_stmt 0 view .LVU4047
 13268 19d6 3324     		movs	r4, #51
 13269              	.LVL1114:
1456:src/keys.c    ****    default:;
 13270              		.loc 1 1456 13 view .LVU4048
 13271 19d8 3368     		ldr	r3, [r6]
 13272 19da FEF76BBB 		b	.L803
 13273              	.LVL1115:
 13274              	.L1079:
1424:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 13275              		.loc 1 1424 6 is_stmt 1 view .LVU4049
1424:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 13276              		.loc 1 1424 11 is_stmt 0 view .LVU4050
 13277 19de DAF80020 		ldr	r2, [r10]
1424:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 13278              		.loc 1 1424 21 view .LVU4051
 13279 19e2 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
1424:src/keys.c    ****        SET_REAL; // start and continuation of real entry
 13280              		.loc 1 1424 9 view .LVU4052
 13281 19e6 13F0060F 		tst	r3, #6
 13282 19ea 05D0     		beq	.L1397
 13283              	.L1078:
1440:src/keys.c    ****    case (K_CMPLX):
 13284              		.loc 1 1440 6 is_stmt 1 view .LVU4053
1440:src/keys.c    ****    case (K_CMPLX):
 13285              		.loc 1 1440 13 is_stmt 0 view .LVU4054
 13286 19ec 2046     		mov	r0, r4
 13287 19ee FFF7FEFF 		bl	process_normal
 13288              	.LVL1116:
 13289 19f2 0446     		mov	r4, r0
 13290              	.LVL1117:
1440:src/keys.c    ****    case (K_CMPLX):
ARM GAS  /tmp/cc8lpfL1.s 			page 366


 13291              		.loc 1 1440 13 view .LVU4055
 13292 19f4 FEF7F2BC 		b	.L837
 13293              	.LVL1118:
 13294              	.L1397:
1425:src/keys.c    ****        stack_begin (1);
 13295              		.loc 1 1425 8 is_stmt 1 view .LVU4056
 13296 19f8 43F00203 		orr	r3, r3, #2
 13297 19fc 82F8AC37 		strb	r3, [r2, #1964]
1426:src/keys.c    ****      }
 13298              		.loc 1 1426 8 view .LVU4057
 13299 1a00 0120     		movs	r0, #1
 13300 1a02 FFF7FEFF 		bl	stack_begin
 13301              	.LVL1119:
1428:src/keys.c    ****    case (K22): // CHS
 13302              		.loc 1 1428 6 view .LVU4058
 13303 1a06 F1E7     		b	.L1078
 13304              	.L1080:
1431:src/keys.c    ****        return process_cmplx(c);
 13305              		.loc 1 1431 6 view .LVU4059
1431:src/keys.c    ****        return process_cmplx(c);
 13306              		.loc 1 1431 21 is_stmt 0 view .LVU4060
 13307 1a08 DAF80030 		ldr	r3, [r10]
 13308 1a0c 93F8AC37 		ldrb	r3, [r3, #1964]	@ zero_extendqisi2
1431:src/keys.c    ****        return process_cmplx(c);
 13309              		.loc 1 1431 9 view .LVU4061
 13310 1a10 13F0060F 		tst	r3, #6
1432:src/keys.c    ****      }
 13311              		.loc 1 1432 15 view .LVU4062
 13312 1a14 4FF00E00 		mov	r0, #14
1431:src/keys.c    ****        return process_cmplx(c);
 13313              		.loc 1 1431 9 view .LVU4063
 13314 1a18 7EF45CAC 		bne	.L1088
 13315 1a1c F5E4     		b	.L1300
 13316              	.L1075:
1457:src/keys.c    ****    }
 13317              		.loc 1 1457 12 is_stmt 1 view .LVU4064
1459:src/keys.c    ****    return process_cmplx(c);
 13318              		.loc 1 1459 4 view .LVU4065
 13319 1a1e 0020     		movs	r0, #0
 13320 1a20 FFF7FEFF 		bl	finish_cpx_entry
 13321              	.LVL1120:
1460:src/keys.c    **** 
 13322              		.loc 1 1460 4 view .LVU4066
1460:src/keys.c    **** 
 13323              		.loc 1 1460 11 is_stmt 0 view .LVU4067
 13324 1a24 2046     		mov	r0, r4
 13325 1a26 FFF7FEFF 		bl	process_cmplx
 13326              	.LVL1121:
 13327 1a2a 0446     		mov	r4, r0
 13328              	.LVL1122:
1460:src/keys.c    **** 
 13329              		.loc 1 1460 11 view .LVU4068
 13330 1a2c FEF7D6BC 		b	.L837
 13331              	.LVL1123:
 13332              	.L1085:
1453:src/keys.c    ****        stack_begin (1);
 13333              		.loc 1 1453 8 is_stmt 1 view .LVU4069
ARM GAS  /tmp/cc8lpfL1.s 			page 367


 13334 1a30 43F00403 		orr	r3, r3, #4
 13335 1a34 82F8AC37 		strb	r3, [r2, #1964]
1454:src/keys.c    ****      }
 13336              		.loc 1 1454 8 view .LVU4070
 13337 1a38 0120     		movs	r0, #1
 13338 1a3a FFF7FEFF 		bl	stack_begin
 13339              	.LVL1124:
1456:src/keys.c    ****    default:;
 13340              		.loc 1 1456 13 is_stmt 0 view .LVU4071
 13341 1a3e 3324     		movs	r4, #51
 13342              	.LVL1125:
1456:src/keys.c    ****    default:;
 13343              		.loc 1 1456 13 view .LVU4072
 13344 1a40 3368     		ldr	r3, [r6]
 13345 1a42 FEF737BB 		b	.L803
 13346              	.LVL1126:
 13347              	.L1396:
1443:src/keys.c    ****        SET_IMAG;
 13348              		.loc 1 1443 8 is_stmt 1 view .LVU4073
1444:src/keys.c    ****        do_command_line();
 13349              		.loc 1 1444 8 view .LVU4074
1443:src/keys.c    ****        SET_IMAG;
 13350              		.loc 1 1443 8 is_stmt 0 view .LVU4075
 13351 1a46 23F00603 		bic	r3, r3, #6
 13352              	.LBB1278:
 13353              	.LBB1279:
1201:src/keys.c    **** 		State2.state_lift = 0;
 13354              		.loc 1 1201 5 view .LVU4076
 13355 1a4a 98F81C10 		ldrb	r1, [r8, #28]	@ zero_extendqisi2
 13356              	.LBE1279:
 13357              	.LBE1278:
1443:src/keys.c    ****        SET_IMAG;
 13358              		.loc 1 1443 8 view .LVU4077
 13359 1a4e 43F00403 		orr	r3, r3, #4
 13360 1a52 82F8AC37 		strb	r3, [r2, #1964]
1445:src/keys.c    ****        State2.state_lift = 0;
 13361              		.loc 1 1445 8 is_stmt 1 view .LVU4078
 13362              	.LBB1282:
 13363              	.LBI1278:
1200:src/keys.c    **** 	if (CmdLineLength) {
 13364              		.loc 1 1200 13 view .LVU4079
 13365              	.LBB1280:
1201:src/keys.c    **** 		State2.state_lift = 0;
 13366              		.loc 1 1201 2 view .LVU4080
1201:src/keys.c    **** 		State2.state_lift = 0;
 13367              		.loc 1 1201 5 is_stmt 0 view .LVU4081
 13368 1a56 0029     		cmp	r1, #0
 13369 1a58 7AD1     		bne	.L1398
 13370              	.L1084:
 13371              	.LBE1280:
 13372              	.LBE1282:
1446:src/keys.c    ****        swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 13373              		.loc 1 1446 8 is_stmt 1 view .LVU4082
1446:src/keys.c    ****        swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 13374              		.loc 1 1446 26 is_stmt 0 view .LVU4083
 13375 1a5a 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
1447:src/keys.c    ****      }
ARM GAS  /tmp/cc8lpfL1.s 			page 368


 13376              		.loc 1 1447 8 view .LVU4084
 13377 1a5e 6420     		movs	r0, #100
1446:src/keys.c    ****        swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 13378              		.loc 1 1446 26 view .LVU4085
 13379 1a60 6FF38613 		bfc	r3, #6, #1
 13380 1a64 88F81730 		strb	r3, [r8, #23]
1447:src/keys.c    ****      }
 13381              		.loc 1 1447 8 is_stmt 1 view .LVU4086
 13382 1a68 FFF7FEFF 		bl	get_reg_n
 13383              	.LVL1127:
 13384 1a6c 0446     		mov	r4, r0
 13385              	.LVL1128:
1447:src/keys.c    ****      }
 13386              		.loc 1 1447 8 is_stmt 0 view .LVU4087
 13387 1a6e 6520     		movs	r0, #101
 13388 1a70 FFF7FEFF 		bl	get_reg_n
 13389              	.LVL1129:
 13390 1a74 0146     		mov	r1, r0
 13391 1a76 2046     		mov	r0, r4
 13392 1a78 FFF7FEFF 		bl	swap_reg
 13393              	.LVL1130:
1456:src/keys.c    ****    default:;
 13394              		.loc 1 1456 13 view .LVU4088
 13395 1a7c 3324     		movs	r4, #51
 13396 1a7e 3368     		ldr	r3, [r6]
 13397 1a80 FEF718BB 		b	.L803
 13398              	.LVL1131:
 13399              	.L1375:
1456:src/keys.c    ****    default:;
 13400              		.loc 1 1456 13 view .LVU4089
 13401              	.LBE1328:
 13402              	.LBE1388:
 13403              	.LBB1389:
 13404              	.LBB945:
2866:src/keys.c    **** 		State2.numdigit = 2;
 13405              		.loc 1 2866 3 is_stmt 1 view .LVU4090
2867:src/keys.c    **** 		return STATE_UNFINISHED;
 13406              		.loc 1 2867 19 is_stmt 0 view .LVU4091
 13407 1a84 0222     		movs	r2, #2
2866:src/keys.c    **** 		State2.numdigit = 2;
 13408              		.loc 1 2866 18 view .LVU4092
 13409 1a86 88F80A40 		strb	r4, [r8, #10]
2867:src/keys.c    **** 		return STATE_UNFINISHED;
 13410              		.loc 1 2867 3 is_stmt 1 view .LVU4093
 13411 1a8a 3368     		ldr	r3, [r6]
2867:src/keys.c    **** 		return STATE_UNFINISHED;
 13412              		.loc 1 2867 19 is_stmt 0 view .LVU4094
 13413 1a8c 88F80B20 		strb	r2, [r8, #11]
2868:src/keys.c    **** 	}
 13414              		.loc 1 2868 3 is_stmt 1 view .LVU4095
2868:src/keys.c    **** 	}
 13415              		.loc 1 2868 10 is_stmt 0 view .LVU4096
 13416 1a90 3324     		movs	r4, #51
 13417              	.LVL1132:
2868:src/keys.c    **** 	}
 13418              		.loc 1 2868 10 view .LVU4097
 13419 1a92 FEF70FBB 		b	.L803
ARM GAS  /tmp/cc8lpfL1.s 			page 369


 13420              	.LVL1133:
 13421              	.L1013:
2868:src/keys.c    **** 	}
 13422              		.loc 1 2868 10 view .LVU4098
 13423              	.LBE945:
 13424              	.LBE1389:
 13425              	.LBB1390:
 13426              	.LBB1216:
1793:src/keys.c    **** 			init_arg(RARG_ARCL);
 13427              		.loc 1 1793 3 is_stmt 1 view .LVU4099
1793:src/keys.c    **** 			init_arg(RARG_ARCL);
 13428              		.loc 1 1793 6 is_stmt 0 view .LVU4100
 13429 1a96 0128     		cmp	r0, #1
 13430 1a98 28D0     		beq	.L1399
1796:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 13431              		.loc 1 1796 10 is_stmt 1 view .LVU4101
1796:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 13432              		.loc 1 1796 13 is_stmt 0 view .LVU4102
 13433 1a9a 0328     		cmp	r0, #3
 13434 1a9c 7FF42DAC 		bne	.L1005
1797:src/keys.c    **** 			return STATE_UNFINISHED;
 13435              		.loc 1 1797 4 is_stmt 1 view .LVU4103
 13436              	.LVL1134:
 13437              	.LBB1198:
 13438              	.LBI1198:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 13439              		.loc 1 552 13 view .LVU4104
 13440              	.LBB1199:
 553:src/keys.c    **** 		return;
 13441              		.loc 1 553 2 view .LVU4105
 553:src/keys.c    **** 		return;
 13442              		.loc 1 553 6 is_stmt 0 view .LVU4106
 13443 1aa0 FFF7FEFF 		bl	is_bad_cmdline
 13444              	.LVL1135:
 553:src/keys.c    **** 		return;
 13445              		.loc 1 553 5 view .LVU4107
 13446 1aa4 0346     		mov	r3, r0
 13447 1aa6 0028     		cmp	r0, #0
 13448 1aa8 7EF41FAE 		bne	.L1306
 13449 1aac 7320     		movs	r0, #115
 13450              	.LBE1199:
 13451              	.LBE1198:
 13452              	.LBE1216:
 13453              	.LBE1390:
 13454              	.LBE1451:
 13455              	.LBE1526:
3409:src/keys.c    ****   //print_debug(60,c);
 13456              		.loc 1 3409 7 view .LVU4108
 13457 1aae 1D46     		mov	r5, r3
 13458              	.LBB1527:
 13459              	.LBB1452:
 13460              	.LBB1391:
 13461              	.LBB1217:
1798:src/keys.c    **** 		}
 13462              		.loc 1 1798 11 view .LVU4109
 13463 1ab0 3324     		movs	r4, #51
 13464              	.LBB1201:
ARM GAS  /tmp/cc8lpfL1.s 			page 370


 13465              	.LBB1200:
 13466 1ab2 FFF7FEFF 		bl	init_arg.part.0
 13467              	.LVL1136:
 13468 1ab6 3368     		ldr	r3, [r6]
 13469 1ab8 FEF7FCBA 		b	.L803
 13470              	.LVL1137:
 13471              	.L1014:
1798:src/keys.c    **** 		}
 13472              		.loc 1 1798 11 view .LVU4110
 13473              	.LBE1200:
 13474              	.LBE1201:
1786:src/keys.c    **** 			init_arg(RARG_ASTO);
 13475              		.loc 1 1786 3 is_stmt 1 view .LVU4111
1786:src/keys.c    **** 			init_arg(RARG_ASTO);
 13476              		.loc 1 1786 6 is_stmt 0 view .LVU4112
 13477 1abc 0128     		cmp	r0, #1
 13478 1abe 7FF41CAC 		bne	.L1005
1787:src/keys.c    **** 			return STATE_UNFINISHED;
 13479              		.loc 1 1787 4 is_stmt 1 view .LVU4113
 13480              	.LVL1138:
 13481              	.LBB1202:
 13482              	.LBI1202:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 13483              		.loc 1 552 13 view .LVU4114
 13484              	.LBB1203:
 553:src/keys.c    **** 		return;
 13485              		.loc 1 553 2 view .LVU4115
 553:src/keys.c    **** 		return;
 13486              		.loc 1 553 6 is_stmt 0 view .LVU4116
 13487 1ac2 FFF7FEFF 		bl	is_bad_cmdline
 13488              	.LVL1139:
 553:src/keys.c    **** 		return;
 13489              		.loc 1 553 5 view .LVU4117
 13490 1ac6 0346     		mov	r3, r0
 13491 1ac8 0028     		cmp	r0, #0
 13492 1aca 7EF40EAE 		bne	.L1306
 13493 1ace 2620     		movs	r0, #38
 13494              	.LBE1203:
 13495              	.LBE1202:
 13496              	.LBE1217:
 13497              	.LBE1391:
 13498              	.LBE1452:
 13499              	.LBE1527:
3409:src/keys.c    ****   //print_debug(60,c);
 13500              		.loc 1 3409 7 view .LVU4118
 13501 1ad0 1D46     		mov	r5, r3
 13502              	.LBB1528:
 13503              	.LBB1453:
 13504              	.LBB1392:
 13505              	.LBB1218:
1788:src/keys.c    **** 		}
 13506              		.loc 1 1788 11 view .LVU4119
 13507 1ad2 3324     		movs	r4, #51
 13508              	.LBB1205:
 13509              	.LBB1204:
 13510 1ad4 FFF7FEFF 		bl	init_arg.part.0
 13511              	.LVL1140:
ARM GAS  /tmp/cc8lpfL1.s 			page 371


 13512 1ad8 3368     		ldr	r3, [r6]
 13513 1ada FEF7EBBA 		b	.L803
 13514              	.L1416:
 13515 1ade 00BF     		.align	2
 13516              	.L1415:
 13517 1ae0 00000000 		.word	.LANCHOR17
 13518 1ae4 00000000 		.word	NonProgrammable
 13519 1ae8 00000000 		.word	main_ram
 13520              	.LVL1141:
 13521              	.L1399:
1788:src/keys.c    **** 		}
 13522              		.loc 1 1788 11 view .LVU4120
 13523              	.LBE1204:
 13524              	.LBE1205:
1794:src/keys.c    **** 			return STATE_UNFINISHED;
 13525              		.loc 1 1794 4 is_stmt 1 view .LVU4121
 13526              	.LBB1206:
 13527              	.LBI1206:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 13528              		.loc 1 552 13 view .LVU4122
 13529              	.LBB1207:
 553:src/keys.c    **** 		return;
 13530              		.loc 1 553 2 view .LVU4123
 553:src/keys.c    **** 		return;
 13531              		.loc 1 553 6 is_stmt 0 view .LVU4124
 13532 1aec FFF7FEFF 		bl	is_bad_cmdline
 13533              	.LVL1142:
 553:src/keys.c    **** 		return;
 13534              		.loc 1 553 5 view .LVU4125
 13535 1af0 0346     		mov	r3, r0
 13536 1af2 0028     		cmp	r0, #0
 13537 1af4 7EF4F9AD 		bne	.L1306
 13538 1af8 2720     		movs	r0, #39
 13539              	.LBE1207:
 13540              	.LBE1206:
 13541              	.LBE1218:
 13542              	.LBE1392:
 13543              	.LBE1453:
 13544              	.LBE1528:
3409:src/keys.c    ****   //print_debug(60,c);
 13545              		.loc 1 3409 7 view .LVU4126
 13546 1afa 1D46     		mov	r5, r3
 13547              	.LBB1529:
 13548              	.LBB1454:
 13549              	.LBB1393:
 13550              	.LBB1219:
1795:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 13551              		.loc 1 1795 11 view .LVU4127
 13552 1afc 3324     		movs	r4, #51
 13553              	.LBB1209:
 13554              	.LBB1208:
 13555 1afe FFF7FEFF 		bl	init_arg.part.0
 13556              	.LVL1143:
 13557 1b02 3368     		ldr	r3, [r6]
 13558 1b04 FEF7D6BA 		b	.L803
 13559              	.LVL1144:
 13560              	.L1164:
ARM GAS  /tmp/cc8lpfL1.s 			page 372


1795:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 13561              		.loc 1 1795 11 view .LVU4128
 13562              	.LBE1208:
 13563              	.LBE1209:
1823:src/keys.c    **** 		break;
 13564              		.loc 1 1823 11 view .LVU4129
 13565 1b08 4FF4BA74 		mov	r4, #372
 13566 1b0c F9E6     		b	.L1046
 13567              	.LVL1145:
 13568              	.L1389:
1806:src/keys.c    **** 			State2.numdigit = 0;
 13569              		.loc 1 1806 4 is_stmt 1 view .LVU4130
1806:src/keys.c    **** 			State2.numdigit = 0;
 13570              		.loc 1 1806 17 is_stmt 0 view .LVU4131
 13571 1b0e 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 13572              	.LVL1146:
1807:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 13573              		.loc 1 1807 20 view .LVU4132
 13574 1b12 88F80B10 		strb	r1, [r8, #11]
1806:src/keys.c    **** 			State2.numdigit = 0;
 13575              		.loc 1 1806 17 view .LVU4133
 13576 1b16 42F00802 		orr	r2, r2, #8
1808:src/keys.c    **** 			return STATE_UNFINISHED;
 13577              		.loc 1 1808 12 view .LVU4134
 13578 1b1a 0A21     		movs	r1, #10
 13579 1b1c 3368     		ldr	r3, [r6]
 13580 1b1e 88F81F10 		strb	r1, [r8, #31]
1806:src/keys.c    **** 			State2.numdigit = 0;
 13581              		.loc 1 1806 17 view .LVU4135
 13582 1b22 88F81520 		strb	r2, [r8, #21]
1807:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 13583              		.loc 1 1807 4 is_stmt 1 view .LVU4136
1808:src/keys.c    **** 			return STATE_UNFINISHED;
 13584              		.loc 1 1808 4 view .LVU4137
1809:src/keys.c    **** 		}
 13585              		.loc 1 1809 4 view .LVU4138
1809:src/keys.c    **** 		}
 13586              		.loc 1 1809 11 is_stmt 0 view .LVU4139
 13587 1b26 3324     		movs	r4, #51
 13588 1b28 FEF7C4BA 		b	.L803
 13589              	.LVL1147:
 13590              	.L990:
1809:src/keys.c    **** 		}
 13591              		.loc 1 1809 11 view .LVU4140
 13592              	.LBE1219:
 13593              	.LBE1393:
 13594              	.LBB1394:
 13595              	.LBB1142:
3170:src/keys.c    **** 		goto reset_window;
 13596              		.loc 1 3170 4 is_stmt 1 view .LVU4141
3170:src/keys.c    **** 		goto reset_window;
 13597              		.loc 1 3170 18 is_stmt 0 view .LVU4142
 13598 1b2c 0023     		movs	r3, #0
 13599 1b2e A8F80830 		strh	r3, [r8, #8]	@ movhi
 13600 1b32 FFF711BB 		b	.L979
 13601              	.LVL1148:
 13602              	.L1109:
ARM GAS  /tmp/cc8lpfL1.s 			page 373


3170:src/keys.c    **** 		goto reset_window;
 13603              		.loc 1 3170 18 view .LVU4143
 13604              	.LBE1142:
 13605              	.LBE1394:
 13606              	.LBE1454:
 13607              	.LBE1529:
3650:src/keys.c    **** 	NonProgrammable = 0;
 13608              		.loc 1 3650 26 view .LVU4144
 13609 1b36 AC4A     		ldr	r2, .L1417
 13610 1b38 1368     		ldr	r3, [r2]
 13611 1b3a 2546     		mov	r5, r4
 13612 1b3c 002B     		cmp	r3, #0
 13613 1b3e 7EF42CAD 		bne	.L1110
3650:src/keys.c    **** 	NonProgrammable = 0;
 13614              		.loc 1 3650 26 view .LVU4145
 13615 1b42 FEF77ABC 		b	.L1111
 13616              	.LVL1149:
 13617              	.L1373:
 13618              	.LBB1530:
 13619              	.LBB1455:
 13620              	.LBB1395:
 13621              	.LBB946:
 13622              	.LBB937:
 13623              	.LBB928:
 488:src/keys.c    **** 			shift = SHIFT_LC_G;
 13624              		.loc 1 488 8 is_stmt 1 view .LVU4146
 489:src/keys.c    **** 	}
 13625              		.loc 1 489 10 is_stmt 0 view .LVU4147
 13626 1b46 0229     		cmp	r1, #2
 13627 1b48 08BF     		it	eq
 13628 1b4a 0521     		moveq	r1, #5
 13629              	.LVL1150:
 489:src/keys.c    **** 	}
 13630              		.loc 1 489 10 view .LVU4148
 13631 1b4c FFF799B8 		b	.L939
 13632              	.LVL1151:
 13633              	.L1398:
 489:src/keys.c    **** 	}
 13634              		.loc 1 489 10 view .LVU4149
 13635              	.LBE928:
 13636              	.LBE937:
 13637              	.LBE946:
 13638              	.LBE1395:
 13639              	.LBB1396:
 13640              	.LBB1329:
 13641              	.LBB1283:
 13642              	.LBB1281:
1202:src/keys.c    **** 		process_cmdline();
 13643              		.loc 1 1202 3 is_stmt 1 view .LVU4150
1202:src/keys.c    **** 		process_cmdline();
 13644              		.loc 1 1202 21 is_stmt 0 view .LVU4151
 13645 1b50 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
 13646 1b54 6FF38613 		bfc	r3, #6, #1
 13647 1b58 88F81730 		strb	r3, [r8, #23]
1203:src/keys.c    **** 	}
 13648              		.loc 1 1203 3 is_stmt 1 view .LVU4152
 13649 1b5c FFF7FEFF 		bl	process_cmdline
ARM GAS  /tmp/cc8lpfL1.s 			page 374


 13650              	.LVL1152:
 13651 1b60 7BE7     		b	.L1084
 13652              	.LVL1153:
 13653              	.L1006:
1203:src/keys.c    **** 	}
 13654              		.loc 1 1203 3 is_stmt 0 view .LVU4153
 13655              	.LBE1281:
 13656              	.LBE1283:
 13657              	.LBE1329:
 13658              	.LBE1396:
 13659              	.LBB1397:
 13660              	.LBB1220:
1882:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 13661              		.loc 1 1882 3 is_stmt 1 view .LVU4154
1882:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 13662              		.loc 1 1882 6 is_stmt 0 view .LVU4155
 13663 1b62 0128     		cmp	r0, #1
 13664 1b64 7FF4C9AB 		bne	.L1005
 13665              	.LVL1154:
1882:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 13666              		.loc 1 1882 6 view .LVU4156
 13667              	.LBE1220:
 13668              	.LBE1397:
 13669              	.LBE1455:
 13670              	.LBE1530:
3650:src/keys.c    **** 	NonProgrammable = 0;
 13671              		.loc 1 3650 7 is_stmt 1 view .LVU4157
3650:src/keys.c    **** 	NonProgrammable = 0;
 13672              		.loc 1 3650 10 is_stmt 0 view .LVU4158
 13673 1b68 4B06     		lsls	r3, r1, #25
 13674 1b6a 1AD5     		bpl	.L1158
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13675              		.loc 1 3651 2 is_stmt 1 view .LVU4159
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13676              		.loc 1 3651 18 is_stmt 0 view .LVU4160
 13677 1b6c 9E4B     		ldr	r3, .L1417
 13678 1b6e 0022     		movs	r2, #0
 13679              	.LVL1155:
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13680              		.loc 1 3651 18 view .LVU4161
 13681 1b70 1A60     		str	r2, [r3]
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13682              		.loc 1 3652 2 is_stmt 1 view .LVU4162
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13683              		.loc 1 3652 32 is_stmt 0 view .LVU4163
 13684 1b72 40F23B15 		movw	r5, #315
 13685 1b76 FEF789BD 		b	.L1106
 13686              	.LVL1156:
 13687              	.L1008:
 13688              	.LBB1531:
 13689              	.LBB1456:
 13690              	.LBB1398:
 13691              	.LBB1221:
1868:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 13692              		.loc 1 1868 3 is_stmt 1 view .LVU4164
1868:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 13693              		.loc 1 1868 6 is_stmt 0 view .LVU4165
ARM GAS  /tmp/cc8lpfL1.s 			page 375


 13694 1b7a 0128     		cmp	r0, #1
 13695 1b7c 3FF430AE 		beq	.L1307
1870:src/keys.c    **** 			return OP_NIL | OP_OFF;
 13696              		.loc 1 1870 8 is_stmt 1 view .LVU4166
1870:src/keys.c    **** 			return OP_NIL | OP_OFF;
 13697              		.loc 1 1870 11 is_stmt 0 view .LVU4167
 13698 1b80 0328     		cmp	r0, #3
 13699 1b82 11D0     		beq	.L1030
1872:src/keys.c    **** #ifdef DM42
 13700              		.loc 1 1872 8 is_stmt 1 view .LVU4168
1872:src/keys.c    **** #ifdef DM42
 13701              		.loc 1 1872 11 is_stmt 0 view .LVU4169
 13702 1b84 0028     		cmp	r0, #0
 13703 1b86 7EF4B0AD 		bne	.L1306
1874:src/keys.c    **** 		  display_current_menu();
 13704              		.loc 1 1874 5 is_stmt 1 view .LVU4170
 13705 1b8a 4FF0FF30 		mov	r0, #-1
 13706              	.LVL1157:
1874:src/keys.c    **** 		  display_current_menu();
 13707              		.loc 1 1874 5 is_stmt 0 view .LVU4171
 13708 1b8e FFF7FEFF 		bl	set_menu
 13709              	.LVL1158:
1875:src/keys.c    **** #endif
 13710              		.loc 1 1875 5 is_stmt 1 view .LVU4172
1879:src/keys.c    **** 
 13711              		.loc 1 1879 10 is_stmt 0 view .LVU4173
 13712 1b92 3324     		movs	r4, #51
1875:src/keys.c    **** #endif
 13713              		.loc 1 1875 5 view .LVU4174
 13714 1b94 FFF7FEFF 		bl	display_current_menu
 13715              	.LVL1159:
1877:src/keys.c    **** 		}
 13716              		.loc 1 1877 5 is_stmt 1 view .LVU4175
 13717 1b98 FFF7FEFF 		bl	init_state
 13718              	.LVL1160:
 13719 1b9c 3368     		ldr	r3, [r6]
 13720 1b9e FEF789BA 		b	.L803
 13721              	.LVL1161:
 13722              	.L1158:
1883:src/keys.c    **** 		break;
 13723              		.loc 1 1883 11 is_stmt 0 view .LVU4176
 13724 1ba2 40F23B14 		movw	r4, #315
 13725 1ba6 ACE6     		b	.L1046
 13726              	.LVL1162:
 13727              	.L1030:
1883:src/keys.c    **** 		break;
 13728              		.loc 1 1883 11 view .LVU4177
 13729              	.LBE1221:
 13730              	.LBE1398:
 13731              	.LBE1456:
 13732              	.LBE1531:
3650:src/keys.c    **** 	NonProgrammable = 0;
 13733              		.loc 1 3650 7 is_stmt 1 view .LVU4178
3650:src/keys.c    **** 	NonProgrammable = 0;
 13734              		.loc 1 3650 10 is_stmt 0 view .LVU4179
 13735 1ba8 4806     		lsls	r0, r1, #25
 13736              	.LVL1163:
ARM GAS  /tmp/cc8lpfL1.s 			page 376


3650:src/keys.c    **** 	NonProgrammable = 0;
 13737              		.loc 1 3650 10 view .LVU4180
 13738 1baa 2DD5     		bpl	.L1108
 13739              	.LVL1164:
 13740              	.L1107:
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13741              		.loc 1 3651 2 is_stmt 1 view .LVU4181
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13742              		.loc 1 3651 18 is_stmt 0 view .LVU4182
 13743 1bac 8E4B     		ldr	r3, .L1417
 13744 1bae 0022     		movs	r2, #0
 13745 1bb0 1A60     		str	r2, [r3]
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13746              		.loc 1 3652 2 is_stmt 1 view .LVU4183
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13747              		.loc 1 3652 32 is_stmt 0 view .LVU4184
 13748 1bb2 4FF48175 		mov	r5, #258
 13749 1bb6 FEF769BD 		b	.L1106
 13750              	.LVL1165:
 13751              	.L1009:
 13752              	.LBB1532:
 13753              	.LBB1457:
 13754              	.LBB1399:
 13755              	.LBB1222:
1856:src/keys.c    **** 	    if ( State2.runmode ) {
 13756              		.loc 1 1856 4 is_stmt 1 view .LVU4185
1856:src/keys.c    **** 	    if ( State2.runmode ) {
 13757              		.loc 1 1856 7 is_stmt 0 view .LVU4186
 13758 1bba 0028     		cmp	r0, #0
 13759 1bbc 7FF49DAB 		bne	.L1005
1857:src/keys.c    **** 	      // Alpha scroll right
 13760              		.loc 1 1857 6 is_stmt 1 view .LVU4187
1857:src/keys.c    **** 	      // Alpha scroll right
 13761              		.loc 1 1857 9 is_stmt 0 view .LVU4188
 13762 1bc0 4906     		lsls	r1, r1, #25
 13763 1bc2 7EF56EAC 		bpl	.L1027
1859:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
 13764              		.loc 1 1859 8 is_stmt 1 view .LVU4189
1859:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
 13765              		.loc 1 1859 11 is_stmt 0 view .LVU4190
 13766 1bc6 B9F1000F 		cmp	r9, #0
 13767 1bca 3EF48EAD 		beq	.L1306
1860:src/keys.c    **** 	      return STATE_UNFINISHED;
 13768              		.loc 1 1860 3 is_stmt 1 view .LVU4191
1860:src/keys.c    **** 	      return STATE_UNFINISHED;
 13769              		.loc 1 1860 31 is_stmt 0 view .LVU4192
 13770 1bce 09F1FF33 		add	r3, r9, #-1
1860:src/keys.c    **** 	      return STATE_UNFINISHED;
 13771              		.loc 1 1860 20 view .LVU4193
 13772 1bd2 88F80D30 		strb	r3, [r8, #13]
1861:src/keys.c    **** 	    }
 13773              		.loc 1 1861 15 view .LVU4194
 13774 1bd6 3324     		movs	r4, #51
 13775 1bd8 3368     		ldr	r3, [r6]
 13776 1bda FEF76BBA 		b	.L803
 13777              	.L1010:
1827:src/keys.c    **** 	    if ( State2.runmode ) {
ARM GAS  /tmp/cc8lpfL1.s 			page 377


 13778              		.loc 1 1827 4 is_stmt 1 view .LVU4195
1827:src/keys.c    **** 	    if ( State2.runmode ) {
 13779              		.loc 1 1827 7 is_stmt 0 view .LVU4196
 13780 1bde 0028     		cmp	r0, #0
 13781 1be0 7FF48BAB 		bne	.L1005
1828:src/keys.c    **** 	      // Alpha scroll left
 13782              		.loc 1 1828 6 is_stmt 1 view .LVU4197
1828:src/keys.c    **** 	      // Alpha scroll left
 13783              		.loc 1 1828 9 is_stmt 0 view .LVU4198
 13784 1be4 4806     		lsls	r0, r1, #25
 13785              	.LVL1166:
1828:src/keys.c    **** 	      // Alpha scroll left
 13786              		.loc 1 1828 9 view .LVU4199
 13787 1be6 7EF573AC 		bpl	.L1023
1836:src/keys.c    **** 		alpha_pos += 1;
 13788              		.loc 1 1836 8 is_stmt 1 view .LVU4200
1836:src/keys.c    **** 		alpha_pos += 1;
 13789              		.loc 1 1836 11 is_stmt 0 view .LVU4201
 13790 1bea B9F1000F 		cmp	r9, #0
 13791 1bee 0ED1     		bne	.L1024
 13792              	.LVL1167:
 13793              	.L1026:
1837:src/keys.c    **** 	      }
 13794              		.loc 1 1837 3 is_stmt 1 view .LVU4202
1837:src/keys.c    **** 	      }
 13795              		.loc 1 1837 13 is_stmt 0 view .LVU4203
 13796 1bf0 09F1010A 		add	r10, r9, #1
 13797              	.LVL1168:
 13798              	.L1025:
1844:src/keys.c    **** #else
 13799              		.loc 1 1844 8 is_stmt 1 view .LVU4204
 13800 1bf4 3368     		ldr	r3, [r6]
1844:src/keys.c    **** #else
 13801              		.loc 1 1844 25 is_stmt 0 view .LVU4205
 13802 1bf6 88F80DA0 		strb	r10, [r8, #13]
1849:src/keys.c    **** 	    }
 13803              		.loc 1 1849 8 is_stmt 1 view .LVU4206
1849:src/keys.c    **** 	    }
 13804              		.loc 1 1849 15 is_stmt 0 view .LVU4207
 13805 1bfa 3324     		movs	r4, #51
 13806 1bfc FEF75ABA 		b	.L803
 13807              	.LVL1169:
 13808              	.L1391:
1849:src/keys.c    **** 	    }
 13809              		.loc 1 1849 15 view .LVU4208
 13810              	.LBE1222:
 13811              	.LBE1399:
 13812              	.LBE1457:
 13813              	.LBE1532:
3650:src/keys.c    **** 	NonProgrammable = 0;
 13814              		.loc 1 3650 7 is_stmt 1 view .LVU4209
3650:src/keys.c    **** 	NonProgrammable = 0;
 13815              		.loc 1 3650 11 is_stmt 0 view .LVU4210
 13816 1c00 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3650:src/keys.c    **** 	NonProgrammable = 0;
 13817              		.loc 1 3650 10 view .LVU4211
 13818 1c04 5C06     		lsls	r4, r3, #25
ARM GAS  /tmp/cc8lpfL1.s 			page 378


 13819 1c06 D1D4     		bmi	.L1107
 13820              	.LVL1170:
 13821              	.L1108:
 13822              	.LBB1533:
 13823              	.LBB1458:
 13824              	.LBB1400:
 13825              	.LBB1330:
1335:src/keys.c    ****      case (K21): // x<->y key
 13826              		.loc 1 1335 37 view .LVU4212
 13827 1c08 4FF48174 		mov	r4, #258
 13828 1c0c 79E6     		b	.L1046
 13829              	.LVL1171:
 13830              	.L1024:
1335:src/keys.c    ****      case (K21): // x<->y key
 13831              		.loc 1 1335 37 view .LVU4213
 13832              	.LBE1330:
 13833              	.LBE1400:
 13834              	.LBB1401:
 13835              	.LBB1223:
1836:src/keys.c    **** 		alpha_pos += 1;
 13836              		.loc 1 1836 33 view .LVU4214
 13837 1c0e FFF7FEFF 		bl	alen
 13838              	.LVL1172:
1836:src/keys.c    **** 		alpha_pos += 1;
 13839              		.loc 1 1836 41 view .LVU4215
 13840 1c12 09EB4903 		add	r3, r9, r9, lsl #1
1836:src/keys.c    **** 		alpha_pos += 1;
 13841              		.loc 1 1836 39 view .LVU4216
 13842 1c16 A0EB4300 		sub	r0, r0, r3, lsl #1
1836:src/keys.c    **** 		alpha_pos += 1;
 13843              		.loc 1 1836 29 view .LVU4217
 13844 1c1a 1328     		cmp	r0, #19
 13845 1c1c E8D8     		bhi	.L1026
 13846 1c1e E9E7     		b	.L1025
 13847              	.LVL1173:
 13848              	.L1379:
1836:src/keys.c    **** 		alpha_pos += 1;
 13849              		.loc 1 1836 29 view .LVU4218
 13850              	.LBE1223:
 13851              	.LBE1401:
 13852              	.LBB1402:
 13853              	.LBB1143:
3131:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 13854              		.loc 1 3131 3 is_stmt 1 view .LVU4219
3131:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 13855              		.loc 1 3131 7 is_stmt 0 view .LVU4220
 13856 1c20 FFF7FEFF 		bl	local_regs
 13857              	.LVL1174:
3131:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 13858              		.loc 1 3131 6 view .LVU4221
 13859 1c24 68B1     		cbz	r0, .L977
3132:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 13860              		.loc 1 3132 4 is_stmt 1 view .LVU4222
3132:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 13861              		.loc 1 3132 19 is_stmt 0 view .LVU4223
 13862 1c26 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3132:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
ARM GAS  /tmp/cc8lpfL1.s 			page 379


 13863              		.loc 1 3132 34 view .LVU4224
 13864 1c2a 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
3132:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 13865              		.loc 1 3132 19 view .LVU4225
 13866 1c2e 03F00101 		and	r1, r3, #1
3132:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 13867              		.loc 1 3132 34 view .LVU4226
 13868 1c32 0A43     		orrs	r2, r1, r2
 13869 1c34 0CBF     		ite	eq
 13870 1c36 0122     		moveq	r2, #1
 13871 1c38 0022     		movne	r2, #0
3132:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 13872              		.loc 1 3132 17 view .LVU4227
 13873 1c3a 62F30003 		bfi	r3, r2, #0, #1
 13874 1c3e 88F81630 		strb	r3, [r8, #22]
 13875              	.L977:
3133:src/keys.c    **** 		goto reset_window;
 13876              		.loc 1 3133 3 is_stmt 1 view .LVU4228
3133:src/keys.c    **** 		goto reset_window;
 13877              		.loc 1 3133 32 is_stmt 0 view .LVU4229
 13878 1c42 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3133:src/keys.c    **** 		goto reset_window;
 13879              		.loc 1 3133 17 view .LVU4230
 13880 1c46 13F0010F 		tst	r3, #1
 13881 1c4a 14BF     		ite	ne
 13882 1c4c 0023     		movne	r3, #0
 13883 1c4e 6423     		moveq	r3, #100
 13884 1c50 A8F80830 		strh	r3, [r8, #8]	@ movhi
3134:src/keys.c    **** 	}
 13885              		.loc 1 3134 3 is_stmt 1 view .LVU4231
 13886 1c54 FFF780BA 		b	.L979
 13887              	.LVL1175:
 13888              	.L873:
3134:src/keys.c    **** 	}
 13889              		.loc 1 3134 3 is_stmt 0 view .LVU4232
 13890              	.LBE1143:
 13891              	.LBE1402:
 13892              	.LBB1403:
 13893              	.LBB977:
2371:src/keys.c    **** 		// Special 1
 13894              		.loc 1 2371 7 is_stmt 1 view .LVU4233
2371:src/keys.c    **** 		// Special 1
 13895              		.loc 1 2371 10 is_stmt 0 view .LVU4234
 13896 1c58 BCF1010F 		cmp	ip, #1
 13897 1c5c 7EF402AF 		bne	.L875
2373:src/keys.c    **** 	}
 13898              		.loc 1 2373 3 is_stmt 1 view .LVU4235
2373:src/keys.c    **** 	}
 13899              		.loc 1 2373 18 is_stmt 0 view .LVU4236
 13900 1c60 BBF1000F 		cmp	fp, #0
 13901 1c64 14BF     		ite	ne
 13902 1c66 2724     		movne	r4, #39
 13903              	.LVL1176:
2373:src/keys.c    **** 	}
 13904              		.loc 1 2373 18 view .LVU4237
 13905 1c68 1E24     		moveq	r4, #30
2373:src/keys.c    **** 	}
ARM GAS  /tmp/cc8lpfL1.s 			page 380


 13906              		.loc 1 2373 47 view .LVU4238
 13907 1c6a 1C44     		add	r4, r4, r3
 13908 1c6c FEF7B6BB 		b	.L837
 13909              	.LVL1177:
 13910              	.L1344:
2373:src/keys.c    **** 	}
 13911              		.loc 1 2373 47 view .LVU4239
 13912              	.LBE977:
 13913              	.LBE1403:
 13914              	.LBE1458:
 13915              	.LBE1533:
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13916              		.loc 1 3651 2 is_stmt 1 view .LVU4240
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13917              		.loc 1 3651 18 is_stmt 0 view .LVU4241
 13918 1c70 1960     		str	r1, [r3]
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13919              		.loc 1 3652 2 is_stmt 1 view .LVU4242
 13920 1c72 FEF70BBD 		b	.L1106
 13921              	.LVL1178:
 13922              	.L1386:
 13923              	.LBB1534:
 13924              	.LBB1459:
 13925              	.LBB1404:
 13926              	.LBB1331:
 13927              	.LBB1284:
1324:src/keys.c    **** 	 return process_cmplx(c);
 13928              		.loc 1 1324 3 view .LVU4243
 13929 1c76 0120     		movs	r0, #1
 13930 1c78 FFF7FEFF 		bl	finish_cpx_entry
 13931              	.LVL1179:
1325:src/keys.c    ****        }
 13932              		.loc 1 1325 3 view .LVU4244
1325:src/keys.c    ****        }
 13933              		.loc 1 1325 10 is_stmt 0 view .LVU4245
 13934 1c7c 2046     		mov	r0, r4
 13935 1c7e FFF7FEFF 		bl	process_cmplx
 13936              	.LVL1180:
 13937 1c82 0446     		mov	r4, r0
 13938              	.LVL1181:
1325:src/keys.c    ****        }
 13939              		.loc 1 1325 10 view .LVU4246
 13940 1c84 FEF7AABB 		b	.L837
 13941              	.LVL1182:
 13942              	.L1385:
1325:src/keys.c    ****        }
 13943              		.loc 1 1325 10 view .LVU4247
 13944              	.LBE1284:
1306:src/keys.c    ****        if ( CmdLineLength ) {
 13945              		.loc 1 1306 8 is_stmt 1 view .LVU4248
 13946              	.LBB1285:
 13947              	.LBI1285:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13948              		.loc 1 114 13 view .LVU4249
 13949              	.LBE1285:
 13950              	.LBE1331:
 13951              	.LBE1404:
ARM GAS  /tmp/cc8lpfL1.s 			page 381


 13952              	.LBE1459:
 13953              	.LBE1534:
 115:src/keys.c    **** }
 13954              		.loc 1 115 2 view .LVU4250
 13955              	.LBB1535:
 13956              	.LBB1460:
 13957              	.LBB1405:
 13958              	.LBB1332:
 13959              	.LBB1292:
 13960              	.LBB1286:
 13961              	.LBI1286:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13962              		.loc 1 104 20 view .LVU4251
 13963              	.LBB1287:
 105:src/keys.c    **** 	State2.shifts = shift;
 13964              		.loc 1 105 2 view .LVU4252
 13965              	.LBB1288:
 13966              	.LBI1288:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13967              		.loc 1 96 13 view .LVU4253
 13968              	.LBB1289:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13969              		.loc 1 97 2 view .LVU4254
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13970              		.loc 1 97 18 is_stmt 0 view .LVU4255
 13971 1c88 FFF7FEFF 		bl	shift_down
 13972              	.LVL1183:
  98:src/keys.c    **** }
 13973              		.loc 1 98 2 is_stmt 1 view .LVU4256
 13974              	.LBE1289:
 13975              	.LBE1288:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13976              		.loc 1 106 2 view .LVU4257
 13977              	.LBE1287:
 13978              	.LBE1286:
 13979              	.LBE1292:
1307:src/keys.c    **** 	 State2.state_lift = 0;
 13980              		.loc 1 1307 11 is_stmt 0 view .LVU4258
 13981 1c8c 98F81C20 		ldrb	r2, [r8, #28]	@ zero_extendqisi2
 13982              	.LBB1293:
 13983              	.LBB1291:
 13984              	.LBB1290:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13985              		.loc 1 106 16 view .LVU4259
 13986 1c90 0023     		movs	r3, #0
 13987 1c92 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13988              		.loc 1 108 2 is_stmt 1 view .LVU4260
 13989              	.LVL1184:
 108:src/keys.c    **** }
 13990              		.loc 1 108 2 is_stmt 0 view .LVU4261
 13991              	.LBE1290:
 13992              	.LBE1291:
 13993              	.LBE1293:
1307:src/keys.c    **** 	 State2.state_lift = 0;
 13994              		.loc 1 1307 8 is_stmt 1 view .LVU4262
1307:src/keys.c    **** 	 State2.state_lift = 0;
ARM GAS  /tmp/cc8lpfL1.s 			page 382


 13995              		.loc 1 1307 11 is_stmt 0 view .LVU4263
 13996 1c96 002A     		cmp	r2, #0
 13997 1c98 6CD0     		beq	.L1044
1308:src/keys.c    **** 	 return OP_NIL | OP_PIB;
 13998              		.loc 1 1308 3 is_stmt 1 view .LVU4264
1308:src/keys.c    **** 	 return OP_NIL | OP_PIB;
 13999              		.loc 1 1308 21 is_stmt 0 view .LVU4265
 14000 1c9a 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
 14001              	.LBE1332:
 14002              	.LBE1405:
 14003              	.LBE1460:
 14004              	.LBE1535:
3650:src/keys.c    **** 	NonProgrammable = 0;
 14005              		.loc 1 3650 11 view .LVU4266
 14006 1c9e 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
 14007              	.LBB1536:
 14008              	.LBB1461:
 14009              	.LBB1406:
 14010              	.LBB1333:
1308:src/keys.c    **** 	 return OP_NIL | OP_PIB;
 14011              		.loc 1 1308 21 view .LVU4267
 14012 1ca2 63F38612 		bfi	r2, r3, #6, #1
 14013 1ca6 88F81720 		strb	r2, [r8, #23]
1309:src/keys.c    ****        }
 14014              		.loc 1 1309 3 is_stmt 1 view .LVU4268
 14015              	.LVL1185:
1309:src/keys.c    ****        }
 14016              		.loc 1 1309 3 is_stmt 0 view .LVU4269
 14017              	.LBE1333:
 14018              	.LBE1406:
 14019              	.LBE1461:
 14020              	.LBE1536:
3650:src/keys.c    **** 	NonProgrammable = 0;
 14021              		.loc 1 3650 7 is_stmt 1 view .LVU4270
3650:src/keys.c    **** 	NonProgrammable = 0;
 14022              		.loc 1 3650 10 is_stmt 0 view .LVU4271
 14023 1caa 4A06     		lsls	r2, r1, #25
 14024 1cac 5CD4     		bmi	.L1045
 14025              	.LBB1537:
 14026              	.LBB1462:
 14027              	.LBB1407:
 14028              	.LBB1334:
1309:src/keys.c    ****        }
 14029              		.loc 1 1309 10 view .LVU4272
 14030 1cae 4FF4E474 		mov	r4, #456
 14031 1cb2 26E6     		b	.L1046
 14032              	.LVL1186:
 14033              	.L1055:
1385:src/keys.c    ****      case (K34): // divide key
 14034              		.loc 1 1385 8 is_stmt 1 view .LVU4273
1387:src/keys.c    **** 	 reset_shift();
 14035              		.loc 1 1387 8 view .LVU4274
1387:src/keys.c    **** 	 reset_shift();
 14036              		.loc 1 1387 11 is_stmt 0 view .LVU4275
 14037 1cb4 BBF1030F 		cmp	fp, #3
 14038 1cb8 24D0     		beq	.L1400
1392:src/keys.c    ****        }
ARM GAS  /tmp/cc8lpfL1.s 			page 383


 14039              		.loc 1 1392 3 is_stmt 1 view .LVU4276
1392:src/keys.c    ****        }
 14040              		.loc 1 1392 10 is_stmt 0 view .LVU4277
 14041 1cba 1620     		movs	r0, #22
 14042 1cbc FFF7FEFF 		bl	process_cmplx
 14043              	.LVL1187:
 14044 1cc0 0446     		mov	r4, r0
 14045              	.LVL1188:
1392:src/keys.c    ****        }
 14046              		.loc 1 1392 10 view .LVU4278
 14047 1cc2 FEF78BBB 		b	.L837
 14048              	.LVL1189:
 14049              	.L1056:
1394:src/keys.c    ****      case (K24): // <- key
 14050              		.loc 1 1394 8 is_stmt 1 view .LVU4279
1396:src/keys.c    ****        if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real pa
 14051              		.loc 1 1396 8 view .LVU4280
1396:src/keys.c    ****        if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real pa
 14052              		.loc 1 1396 12 is_stmt 0 view .LVU4281
 14053 1cc6 DAF80030 		ldr	r3, [r10]
1396:src/keys.c    ****        if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real pa
 14054              		.loc 1 1396 11 view .LVU4282
 14055 1cca 93F9AC37 		ldrsb	r3, [r3, #1964]
 14056 1cce 002B     		cmp	r3, #0
 14057 1cd0 FFF6ECAD 		blt	.L1065
1397:src/keys.c    **** 	 zero_X ();
 14058              		.loc 1 1397 8 is_stmt 1 view .LVU4283
1397:src/keys.c    **** 	 zero_X ();
 14059              		.loc 1 1397 11 is_stmt 0 view .LVU4284
 14060 1cd4 BBF1030F 		cmp	fp, #3
 14061 1cd8 7FF4E8AD 		bne	.L1065
1398:src/keys.c    **** 	 State2.state_lift = 0;
 14062              		.loc 1 1398 3 is_stmt 1 view .LVU4285
 14063 1cdc FFF7FEFF 		bl	zero_X
 14064              	.LVL1190:
1399:src/keys.c    **** 	 SET_REAL;
 14065              		.loc 1 1399 3 view .LVU4286
1399:src/keys.c    **** 	 SET_REAL;
 14066              		.loc 1 1399 21 is_stmt 0 view .LVU4287
 14067 1ce0 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
1400:src/keys.c    **** 	 stack_begin (0);
 14068              		.loc 1 1400 3 view .LVU4288
 14069 1ce4 DAF80020 		ldr	r2, [r10]
1399:src/keys.c    **** 	 SET_REAL;
 14070              		.loc 1 1399 21 view .LVU4289
 14071 1ce8 6FF38613 		bfc	r3, #6, #1
 14072 1cec 88F81730 		strb	r3, [r8, #23]
1400:src/keys.c    **** 	 stack_begin (0);
 14073              		.loc 1 1400 3 is_stmt 1 view .LVU4290
 14074 1cf0 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
 14075 1cf4 43F00203 		orr	r3, r3, #2
 14076 1cf8 82F8AC37 		strb	r3, [r2, #1964]
1401:src/keys.c    ****        }
 14077              		.loc 1 1401 3 view .LVU4291
 14078 1cfc 0020     		movs	r0, #0
 14079 1cfe FFF7FEFF 		bl	stack_begin
 14080              	.LVL1191:
ARM GAS  /tmp/cc8lpfL1.s 			page 384


 14081 1d02 D3E5     		b	.L1065
 14082              	.L1400:
1388:src/keys.c    **** 	 return OP_CDYA | OP_CDOTDIV;
 14083              		.loc 1 1388 3 view .LVU4292
 14084              	.LBB1294:
 14085              	.LBI1294:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 14086              		.loc 1 114 13 view .LVU4293
 14087              	.LBE1294:
 14088              	.LBE1334:
 14089              	.LBE1407:
 14090              	.LBE1462:
 14091              	.LBE1537:
 115:src/keys.c    **** }
 14092              		.loc 1 115 2 view .LVU4294
 14093              	.LVL1192:
 14094              	.LBB1538:
 14095              	.LBB1463:
 14096              	.LBB1408:
 14097              	.LBB1335:
 14098              	.LBB1303:
 14099              	.LBB1295:
 14100              	.LBI1295:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14101              		.loc 1 104 20 view .LVU4295
 14102              	.LBB1296:
 105:src/keys.c    **** 	State2.shifts = shift;
 14103              		.loc 1 105 2 view .LVU4296
 14104              	.LBB1297:
 14105              	.LBI1297:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 14106              		.loc 1 96 13 view .LVU4297
 14107              	.LBB1298:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14108              		.loc 1 97 2 view .LVU4298
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14109              		.loc 1 97 18 is_stmt 0 view .LVU4299
 14110 1d04 FFF7FEFF 		bl	shift_down
 14111              	.LVL1193:
  98:src/keys.c    **** }
 14112              		.loc 1 98 2 is_stmt 1 view .LVU4300
 14113              	.LBE1298:
 14114              	.LBE1297:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14115              		.loc 1 106 2 view .LVU4301
 14116              	.LBE1296:
 14117              	.LBE1295:
 14118              	.LBE1303:
 14119              	.LBE1335:
 14120              	.LBE1408:
 14121              	.LBE1463:
 14122              	.LBE1538:
3650:src/keys.c    **** 	NonProgrammable = 0;
 14123              		.loc 1 3650 11 is_stmt 0 view .LVU4302
 14124 1d08 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 14125              	.LBB1539:
 14126              	.LBB1464:
ARM GAS  /tmp/cc8lpfL1.s 			page 385


 14127              	.LBB1409:
 14128              	.LBB1336:
 14129              	.LBB1304:
 14130              	.LBB1301:
 14131              	.LBB1299:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14132              		.loc 1 106 16 view .LVU4303
 14133 1d0c 0023     		movs	r3, #0
 14134              	.LBE1299:
 14135              	.LBE1301:
 14136              	.LBE1304:
 14137              	.LBE1336:
 14138              	.LBE1409:
 14139              	.LBE1464:
 14140              	.LBE1539:
3650:src/keys.c    **** 	NonProgrammable = 0;
 14141              		.loc 1 3650 10 view .LVU4304
 14142 1d0e 5406     		lsls	r4, r2, #25
 14143              	.LVL1194:
 14144              	.LBB1540:
 14145              	.LBB1465:
 14146              	.LBB1410:
 14147              	.LBB1337:
 14148              	.LBB1305:
 14149              	.LBB1302:
 14150              	.LBB1300:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14151              		.loc 1 106 16 view .LVU4305
 14152 1d10 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 14153              		.loc 1 108 2 is_stmt 1 view .LVU4306
 14154              	.LVL1195:
 108:src/keys.c    **** }
 14155              		.loc 1 108 2 is_stmt 0 view .LVU4307
 14156              	.LBE1300:
 14157              	.LBE1302:
 14158              	.LBE1305:
1389:src/keys.c    ****        }
 14159              		.loc 1 1389 3 is_stmt 1 view .LVU4308
1389:src/keys.c    ****        }
 14160              		.loc 1 1389 3 is_stmt 0 view .LVU4309
 14161              	.LBE1337:
 14162              	.LBE1410:
 14163              	.LBE1465:
 14164              	.LBE1540:
3650:src/keys.c    **** 	NonProgrammable = 0;
 14165              		.loc 1 3650 7 is_stmt 1 view .LVU4310
3650:src/keys.c    **** 	NonProgrammable = 0;
 14166              		.loc 1 3650 10 is_stmt 0 view .LVU4311
 14167 1d14 51D4     		bmi	.L1074
 14168              	.LBB1541:
 14169              	.LBB1466:
 14170              	.LBB1411:
 14171              	.LBB1338:
1389:src/keys.c    ****        }
 14172              		.loc 1 1389 10 view .LVU4312
 14173 1d16 40F23464 		movw	r4, #1588
ARM GAS  /tmp/cc8lpfL1.s 			page 386


 14174 1d1a F2E5     		b	.L1046
 14175              	.LVL1196:
 14176              	.L1069:
1389:src/keys.c    ****        }
 14177              		.loc 1 1389 10 view .LVU4313
 14178              	.LBE1338:
 14179              	.LBE1411:
 14180              	.LBE1466:
 14181              	.LBE1541:
3650:src/keys.c    **** 	NonProgrammable = 0;
 14182              		.loc 1 3650 7 is_stmt 1 view .LVU4314
3650:src/keys.c    **** 	NonProgrammable = 0;
 14183              		.loc 1 3650 11 is_stmt 0 view .LVU4315
 14184 1d1c 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3650:src/keys.c    **** 	NonProgrammable = 0;
 14185              		.loc 1 3650 10 view .LVU4316
 14186 1d20 5206     		lsls	r2, r2, #25
 14187 1d22 41D5     		bpl	.L1162
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14188              		.loc 1 3651 2 is_stmt 1 view .LVU4317
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14189              		.loc 1 3651 18 is_stmt 0 view .LVU4318
 14190 1d24 304A     		ldr	r2, .L1417
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14191              		.loc 1 3652 32 view .LVU4319
 14192 1d26 4FF4E375 		mov	r5, #454
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14193              		.loc 1 3651 18 view .LVU4320
 14194 1d2a 1360     		str	r3, [r2]
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14195              		.loc 1 3652 2 is_stmt 1 view .LVU4321
 14196 1d2c FEF7AEBC 		b	.L1106
 14197              	.LVL1197:
 14198              	.L1057:
 14199              	.LBB1542:
 14200              	.LBB1467:
 14201              	.LBB1412:
 14202              	.LBB1339:
1360:src/keys.c    ****        if (shift == SHIFT_F ) {
 14203              		.loc 1 1360 8 view .LVU4322
 14204              	.LBB1306:
 14205              	.LBI1306:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 14206              		.loc 1 114 13 view .LVU4323
 14207              	.LBE1306:
 14208              	.LBE1339:
 14209              	.LBE1412:
 14210              	.LBE1467:
 14211              	.LBE1542:
 115:src/keys.c    **** }
 14212              		.loc 1 115 2 view .LVU4324
 14213              	.LBB1543:
 14214              	.LBB1468:
 14215              	.LBB1413:
 14216              	.LBB1340:
 14217              	.LBB1313:
 14218              	.LBB1307:
ARM GAS  /tmp/cc8lpfL1.s 			page 387


 14219              	.LBI1307:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14220              		.loc 1 104 20 view .LVU4325
 14221              	.LBB1308:
 105:src/keys.c    **** 	State2.shifts = shift;
 14222              		.loc 1 105 2 view .LVU4326
 14223              	.LBB1309:
 14224              	.LBI1309:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 14225              		.loc 1 96 13 view .LVU4327
 14226              	.LBB1310:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14227              		.loc 1 97 2 view .LVU4328
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14228              		.loc 1 97 18 is_stmt 0 view .LVU4329
 14229 1d30 FFF7FEFF 		bl	shift_down
 14230              	.LVL1198:
  98:src/keys.c    **** }
 14231              		.loc 1 98 2 is_stmt 1 view .LVU4330
 14232              	.LBE1310:
 14233              	.LBE1309:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14234              		.loc 1 106 2 view .LVU4331
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14235              		.loc 1 106 16 is_stmt 0 view .LVU4332
 14236 1d34 0023     		movs	r3, #0
 14237              	.LBE1308:
 14238              	.LBE1307:
 14239              	.LBE1313:
1361:src/keys.c    **** 	 return OP_NIL | OP_C_MIM;
 14240              		.loc 1 1361 11 view .LVU4333
 14241 1d36 BBF1010F 		cmp	fp, #1
 14242              	.LBB1314:
 14243              	.LBB1312:
 14244              	.LBB1311:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14245              		.loc 1 106 16 view .LVU4334
 14246 1d3a 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 14247              		.loc 1 108 2 is_stmt 1 view .LVU4335
 14248              	.LVL1199:
 108:src/keys.c    **** }
 14249              		.loc 1 108 2 is_stmt 0 view .LVU4336
 14250              	.LBE1311:
 14251              	.LBE1312:
 14252              	.LBE1314:
1361:src/keys.c    **** 	 return OP_NIL | OP_C_MIM;
 14253              		.loc 1 1361 8 is_stmt 1 view .LVU4337
1361:src/keys.c    **** 	 return OP_NIL | OP_C_MIM;
 14254              		.loc 1 1361 11 is_stmt 0 view .LVU4338
 14255 1d3e 45D0     		beq	.L1067
1364:src/keys.c    **** 	 return OP_NIL | OP_C_MRE;
 14256              		.loc 1 1364 13 is_stmt 1 view .LVU4339
1364:src/keys.c    **** 	 return OP_NIL | OP_C_MRE;
 14257              		.loc 1 1364 16 is_stmt 0 view .LVU4340
 14258 1d40 BBF1030F 		cmp	fp, #3
 14259 1d44 7FF4B2AD 		bne	.L1065
ARM GAS  /tmp/cc8lpfL1.s 			page 388


 14260              	.LVL1200:
1364:src/keys.c    **** 	 return OP_NIL | OP_C_MRE;
 14261              		.loc 1 1364 16 view .LVU4341
 14262              	.LBE1340:
 14263              	.LBE1413:
 14264              	.LBE1468:
 14265              	.LBE1543:
3650:src/keys.c    **** 	NonProgrammable = 0;
 14266              		.loc 1 3650 7 is_stmt 1 view .LVU4342
3650:src/keys.c    **** 	NonProgrammable = 0;
 14267              		.loc 1 3650 11 is_stmt 0 view .LVU4343
 14268 1d48 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3650:src/keys.c    **** 	NonProgrammable = 0;
 14269              		.loc 1 3650 10 view .LVU4344
 14270 1d4c 5106     		lsls	r1, r2, #25
 14271 1d4e 3AD5     		bpl	.L1161
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14272              		.loc 1 3651 2 is_stmt 1 view .LVU4345
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14273              		.loc 1 3651 18 is_stmt 0 view .LVU4346
 14274 1d50 254A     		ldr	r2, .L1417
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14275              		.loc 1 3652 32 view .LVU4347
 14276 1d52 4FF4E275 		mov	r5, #452
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14277              		.loc 1 3651 18 view .LVU4348
 14278 1d56 1360     		str	r3, [r2]
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14279              		.loc 1 3652 2 is_stmt 1 view .LVU4349
 14280 1d58 FEF798BC 		b	.L1106
 14281              	.LVL1201:
 14282              	.L1062:
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14283              		.loc 1 3651 2 view .LVU4350
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14284              		.loc 1 3651 18 is_stmt 0 view .LVU4351
 14285 1d5c 224B     		ldr	r3, .L1417
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14286              		.loc 1 3652 32 view .LVU4352
 14287 1d5e 43F26515 		movw	r5, #12645
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14288              		.loc 1 3651 18 view .LVU4353
 14289 1d62 1A60     		str	r2, [r3]
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14290              		.loc 1 3652 2 is_stmt 1 view .LVU4354
 14291 1d64 FEF792BC 		b	.L1106
 14292              	.LVL1202:
 14293              	.L1045:
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14294              		.loc 1 3651 2 view .LVU4355
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14295              		.loc 1 3651 18 is_stmt 0 view .LVU4356
 14296 1d68 1F4A     		ldr	r2, .L1417
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14297              		.loc 1 3652 32 view .LVU4357
 14298 1d6a 4FF4E475 		mov	r5, #456
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
ARM GAS  /tmp/cc8lpfL1.s 			page 389


 14299              		.loc 1 3651 18 view .LVU4358
 14300 1d6e 1360     		str	r3, [r2]
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14301              		.loc 1 3652 2 is_stmt 1 view .LVU4359
 14302 1d70 FEF78CBC 		b	.L1106
 14303              	.LVL1203:
 14304              	.L1044:
3650:src/keys.c    **** 	NonProgrammable = 0;
 14305              		.loc 1 3650 7 view .LVU4360
3650:src/keys.c    **** 	NonProgrammable = 0;
 14306              		.loc 1 3650 11 is_stmt 0 view .LVU4361
 14307 1d74 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3650:src/keys.c    **** 	NonProgrammable = 0;
 14308              		.loc 1 3650 10 view .LVU4362
 14309 1d78 5D06     		lsls	r5, r3, #25
 14310 1d7a 18D5     		bpl	.L1159
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14311              		.loc 1 3651 2 is_stmt 1 view .LVU4363
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14312              		.loc 1 3651 18 is_stmt 0 view .LVU4364
 14313 1d7c 1A4B     		ldr	r3, .L1417
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14314              		.loc 1 3652 32 view .LVU4365
 14315 1d7e 40F2C715 		movw	r5, #455
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14316              		.loc 1 3651 18 view .LVU4366
 14317 1d82 1A60     		str	r2, [r3]
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14318              		.loc 1 3652 2 is_stmt 1 view .LVU4367
 14319 1d84 FEF782BC 		b	.L1106
 14320              	.LVL1204:
 14321              	.L1058:
 14322              	.LBB1544:
 14323              	.LBB1469:
 14324              	.LBB1414:
 14325              	.LBB1341:
1337:src/keys.c    **** 	 reset_shift();
 14326              		.loc 1 1337 8 view .LVU4368
1337:src/keys.c    **** 	 reset_shift();
 14327              		.loc 1 1337 29 is_stmt 0 view .LVU4369
 14328 1d88 0BF1FF33 		add	r3, fp, #-1
1337:src/keys.c    **** 	 reset_shift();
 14329              		.loc 1 1337 11 view .LVU4370
 14330 1d8c DBB2     		uxtb	r3, r3
 14331 1d8e 012B     		cmp	r3, #1
 14332 1d90 7FF6A3AD 		bls	.L1123
1342:src/keys.c    **** 	 return process_cmplx(c); // complex exchange of (x,y) with register
 14333              		.loc 1 1342 13 is_stmt 1 view .LVU4371
1342:src/keys.c    **** 	 return process_cmplx(c); // complex exchange of (x,y) with register
 14334              		.loc 1 1342 16 is_stmt 0 view .LVU4372
 14335 1d94 BBF1030F 		cmp	fp, #3
 14336 1d98 7FF488AD 		bne	.L1065
1343:src/keys.c    ****        }
 14337              		.loc 1 1343 3 is_stmt 1 view .LVU4373
1343:src/keys.c    ****        }
 14338              		.loc 1 1343 10 is_stmt 0 view .LVU4374
 14339 1d9c 0D20     		movs	r0, #13
ARM GAS  /tmp/cc8lpfL1.s 			page 390


 14340 1d9e FFF7FEFF 		bl	process_cmplx
 14341              	.LVL1205:
 14342 1da2 0446     		mov	r4, r0
 14343              	.LVL1206:
1343:src/keys.c    ****        }
 14344              		.loc 1 1343 10 view .LVU4375
 14345 1da4 FEF71ABB 		b	.L837
 14346              	.LVL1207:
 14347              	.L1162:
1371:src/keys.c    ****        }
 14348              		.loc 1 1371 10 view .LVU4376
 14349 1da8 4FF4E374 		mov	r4, #454
 14350 1dac A9E5     		b	.L1046
 14351              	.LVL1208:
 14352              	.L1159:
1312:src/keys.c    ****        }
 14353              		.loc 1 1312 10 view .LVU4377
 14354 1dae 40F2C714 		movw	r4, #455
 14355 1db2 A6E5     		b	.L1046
 14356              	.LVL1209:
 14357              	.L1392:
1312:src/keys.c    ****        }
 14358              		.loc 1 1312 10 view .LVU4378
 14359 1db4 2546     		mov	r5, r4
 14360 1db6 FEF740BB 		b	.L1111
 14361              	.LVL1210:
 14362              	.L1074:
1312:src/keys.c    ****        }
 14363              		.loc 1 1312 10 view .LVU4379
 14364              	.LBE1341:
 14365              	.LBE1414:
 14366              	.LBE1469:
 14367              	.LBE1544:
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14368              		.loc 1 3651 2 is_stmt 1 view .LVU4380
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14369              		.loc 1 3651 18 is_stmt 0 view .LVU4381
 14370 1dba 0B4A     		ldr	r2, .L1417
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14371              		.loc 1 3652 32 view .LVU4382
 14372 1dbc 40F23465 		movw	r5, #1588
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14373              		.loc 1 3651 18 view .LVU4383
 14374 1dc0 1360     		str	r3, [r2]
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14375              		.loc 1 3652 2 is_stmt 1 view .LVU4384
 14376 1dc2 FEF763BC 		b	.L1106
 14377              	.LVL1211:
 14378              	.L1161:
 14379              	.LBB1545:
 14380              	.LBB1470:
 14381              	.LBB1415:
 14382              	.LBB1342:
1365:src/keys.c    ****        }
 14383              		.loc 1 1365 10 is_stmt 0 view .LVU4385
 14384 1dc6 4FF4E274 		mov	r4, #452
 14385 1dca 9AE5     		b	.L1046
ARM GAS  /tmp/cc8lpfL1.s 			page 391


 14386              	.LVL1212:
 14387              	.L1067:
1365:src/keys.c    ****        }
 14388              		.loc 1 1365 10 view .LVU4386
 14389              	.LBE1342:
 14390              	.LBE1415:
 14391              	.LBE1470:
 14392              	.LBE1545:
3650:src/keys.c    **** 	NonProgrammable = 0;
 14393              		.loc 1 3650 7 is_stmt 1 view .LVU4387
3650:src/keys.c    **** 	NonProgrammable = 0;
 14394              		.loc 1 3650 11 is_stmt 0 view .LVU4388
 14395 1dcc 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3650:src/keys.c    **** 	NonProgrammable = 0;
 14396              		.loc 1 3650 10 view .LVU4389
 14397 1dd0 5006     		lsls	r0, r2, #25
 14398 1dd2 05D5     		bpl	.L1160
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14399              		.loc 1 3651 2 is_stmt 1 view .LVU4390
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14400              		.loc 1 3651 18 is_stmt 0 view .LVU4391
 14401 1dd4 044A     		ldr	r2, .L1417
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14402              		.loc 1 3652 32 view .LVU4392
 14403 1dd6 40F2C315 		movw	r5, #451
3651:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14404              		.loc 1 3651 18 view .LVU4393
 14405 1dda 1360     		str	r3, [r2]
3652:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14406              		.loc 1 3652 2 is_stmt 1 view .LVU4394
 14407 1ddc FEF756BC 		b	.L1106
 14408              	.L1160:
 14409              	.LBB1546:
 14410              	.LBB1471:
 14411              	.LBB1416:
 14412              	.LBB1343:
1362:src/keys.c    ****        }
 14413              		.loc 1 1362 10 is_stmt 0 view .LVU4395
 14414 1de0 40F2C314 		movw	r4, #451
 14415 1de4 8DE5     		b	.L1046
 14416              	.L1418:
 14417 1de6 00BF     		.align	2
 14418              	.L1417:
 14419 1de8 00000000 		.word	NonProgrammable
 14420              	.LBE1343:
 14421              	.LBE1416:
 14422              	.LBE1471:
 14423              	.LBE1546:
 14424              		.cfi_endproc
 14425              	.LFE63:
 14427              		.section	.text.process_keycode_with_shift,"ax",%progbits
 14428              		.align	1
 14429              		.p2align 2,,3
 14430              		.global	process_keycode_with_shift
 14431              		.syntax unified
 14432              		.thumb
 14433              		.thumb_func
ARM GAS  /tmp/cc8lpfL1.s 			page 392


 14434              		.fpu fpv4-sp-d16
 14436              	process_keycode_with_shift:
 14437              	.LFB62:
3383:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 14438              		.loc 1 3383 61 is_stmt 1 view -0
 14439              		.cfi_startproc
 14440              		@ args = 0, pretend = 0, frame = 8
 14441              		@ frame_needed = 0, uses_anonymous_args = 0
 14442 0000 30B5     		push	{r4, r5, lr}
 14443              		.cfi_def_cfa_offset 12
 14444              		.cfi_offset 4, -12
 14445              		.cfi_offset 5, -8
 14446              		.cfi_offset 14, -4
 14447 0002 83B0     		sub	sp, sp, #12
 14448              		.cfi_def_cfa_offset 24
3383:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 14449              		.loc 1 3383 61 is_stmt 0 view .LVU4397
 14450 0004 02AB     		add	r3, sp, #8
 14451 0006 03E90300 		stmdb	r3, {r0, r1}
 14452 000a 9DF80040 		ldrb	r4, [sp]	@ zero_extendqisi2
 14453              	.LVL1213:
3384:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 14454              		.loc 1 3384 4 is_stmt 1 view .LVU4398
3384:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 14455              		.loc 1 3384 7 is_stmt 0 view .LVU4399
 14456 000e 2E2C     		cmp	r4, #46
 14457 0010 10D0     		beq	.L1419
3385:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 14458              		.loc 1 3385 4 is_stmt 1 view .LVU4400
3385:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 14459              		.loc 1 3385 7 is_stmt 0 view .LVU4401
 14460 0012 332C     		cmp	r4, #51
 14461 0014 1DD0     		beq	.L1426
3394:src/keys.c    ****      nd_opcode = remapped.shift;
 14462              		.loc 1 3394 7 view .LVU4402
 14463 0016 342C     		cmp	r4, #52
 14464 0018 019D     		ldr	r5, [sp, #4]
3394:src/keys.c    ****      nd_opcode = remapped.shift;
 14465              		.loc 1 3394 4 is_stmt 1 view .LVU4403
3394:src/keys.c    ****      nd_opcode = remapped.shift;
 14466              		.loc 1 3394 7 is_stmt 0 view .LVU4404
 14467 001a 0DD0     		beq	.L1427
3398:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14468              		.loc 1 3398 9 is_stmt 1 view .LVU4405
3398:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14469              		.loc 1 3398 12 is_stmt 0 view .LVU4406
 14470 001c 002D     		cmp	r5, #0
 14471 001e 03DB     		blt	.L1424
3398:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14472              		.loc 1 3398 34 is_stmt 1 discriminator 1 view .LVU4407
 14473              	.LVL1214:
 14474              	.LBB1547:
 14475              	.LBI1547:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14476              		.loc 1 104 20 discriminator 1 view .LVU4408
 14477              	.LBB1548:
 105:src/keys.c    **** 	State2.shifts = shift;
ARM GAS  /tmp/cc8lpfL1.s 			page 393


 14478              		.loc 1 105 2 discriminator 1 view .LVU4409
 14479              	.LBB1549:
 14480              	.LBI1549:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 14481              		.loc 1 96 13 discriminator 1 view .LVU4410
 14482              	.LBB1550:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14483              		.loc 1 97 2 discriminator 1 view .LVU4411
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14484              		.loc 1 97 18 is_stmt 0 discriminator 1 view .LVU4412
 14485 0020 FFF7FEFF 		bl	shift_down
 14486              	.LVL1215:
  98:src/keys.c    **** }
 14487              		.loc 1 98 2 is_stmt 1 discriminator 1 view .LVU4413
 14488              	.LBE1550:
 14489              	.LBE1549:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14490              		.loc 1 106 2 discriminator 1 view .LVU4414
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14491              		.loc 1 106 16 is_stmt 0 discriminator 1 view .LVU4415
 14492 0024 194B     		ldr	r3, .L1428
 14493              	.LBE1548:
 14494              	.LBE1547:
3398:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14495              		.loc 1 3398 34 discriminator 1 view .LVU4416
 14496 0026 1D74     		strb	r5, [r3, #16]
 14497              	.LBB1552:
 14498              	.LBB1551:
 108:src/keys.c    **** }
 14499              		.loc 1 108 2 is_stmt 1 discriminator 1 view .LVU4417
 14500              	.LVL1216:
 14501              	.L1424:
 108:src/keys.c    **** }
 14502              		.loc 1 108 2 is_stmt 0 discriminator 1 view .LVU4418
 14503              	.LBE1551:
 14504              	.LBE1552:
3399:src/keys.c    ****  }
 14505              		.loc 1 3399 4 is_stmt 1 view .LVU4419
 14506 0028 2046     		mov	r0, r4
3400:src/keys.c    ****  
 14507              		.loc 1 3400 2 is_stmt 0 view .LVU4420
 14508 002a 03B0     		add	sp, sp, #12
 14509              		.cfi_remember_state
 14510              		.cfi_def_cfa_offset 12
 14511              		@ sp needed
 14512 002c BDE83040 		pop	{r4, r5, lr}
 14513              		.cfi_restore 14
 14514              		.cfi_restore 5
 14515              		.cfi_restore 4
 14516              		.cfi_def_cfa_offset 0
 14517              	.LVL1217:
3399:src/keys.c    ****  }
 14518              		.loc 1 3399 4 view .LVU4421
 14519 0030 FFF7FEBF 		b	process_keycode
 14520              	.LVL1218:
 14521              	.L1419:
 14522              		.cfi_restore_state
ARM GAS  /tmp/cc8lpfL1.s 			page 394


3400:src/keys.c    ****  
 14523              		.loc 1 3400 2 view .LVU4422
 14524 0034 03B0     		add	sp, sp, #12
 14525              		.cfi_remember_state
 14526              		.cfi_def_cfa_offset 12
 14527              		@ sp needed
 14528 0036 30BD     		pop	{r4, r5, pc}
 14529              	.LVL1219:
 14530              	.L1427:
 14531              		.cfi_restore_state
3395:src/keys.c    ****      set_shift(SHIFT_N);
 14532              		.loc 1 3395 6 is_stmt 1 view .LVU4423
3395:src/keys.c    ****      set_shift(SHIFT_N);
 14533              		.loc 1 3395 16 is_stmt 0 view .LVU4424
 14534 0038 154B     		ldr	r3, .L1428+4
 14535 003a 1D60     		str	r5, [r3]
3396:src/keys.c    ****    }
 14536              		.loc 1 3396 6 is_stmt 1 view .LVU4425
 14537              	.LVL1220:
 14538              	.LBB1553:
 14539              	.LBI1553:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14540              		.loc 1 104 20 view .LVU4426
 14541              	.LBB1554:
 105:src/keys.c    **** 	State2.shifts = shift;
 14542              		.loc 1 105 2 view .LVU4427
 14543              	.LBB1555:
 14544              	.LBI1555:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 14545              		.loc 1 96 13 view .LVU4428
 14546              	.LBB1556:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14547              		.loc 1 97 2 view .LVU4429
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14548              		.loc 1 97 18 is_stmt 0 view .LVU4430
 14549 003c FFF7FEFF 		bl	shift_down
 14550              	.LVL1221:
  98:src/keys.c    **** }
 14551              		.loc 1 98 2 is_stmt 1 view .LVU4431
 14552              	.LBE1556:
 14553              	.LBE1555:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14554              		.loc 1 106 2 view .LVU4432
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14555              		.loc 1 106 16 is_stmt 0 view .LVU4433
 14556 0040 124B     		ldr	r3, .L1428
 14557 0042 0022     		movs	r2, #0
 14558              	.LBE1554:
 14559              	.LBE1553:
3399:src/keys.c    ****  }
 14560              		.loc 1 3399 4 view .LVU4434
 14561 0044 2046     		mov	r0, r4
 14562              	.LBB1558:
 14563              	.LBB1557:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14564              		.loc 1 106 16 view .LVU4435
 14565 0046 1A74     		strb	r2, [r3, #16]
ARM GAS  /tmp/cc8lpfL1.s 			page 395


 108:src/keys.c    **** }
 14566              		.loc 1 108 2 is_stmt 1 view .LVU4436
 14567              	.LVL1222:
 108:src/keys.c    **** }
 14568              		.loc 1 108 2 is_stmt 0 view .LVU4437
 14569              	.LBE1557:
 14570              	.LBE1558:
3399:src/keys.c    ****  }
 14571              		.loc 1 3399 4 is_stmt 1 view .LVU4438
3400:src/keys.c    ****  
 14572              		.loc 1 3400 2 is_stmt 0 view .LVU4439
 14573 0048 03B0     		add	sp, sp, #12
 14574              		.cfi_remember_state
 14575              		.cfi_def_cfa_offset 12
 14576              		@ sp needed
 14577 004a BDE83040 		pop	{r4, r5, lr}
 14578              		.cfi_restore 14
 14579              		.cfi_restore 5
 14580              		.cfi_restore 4
 14581              		.cfi_def_cfa_offset 0
 14582              	.LVL1223:
3399:src/keys.c    ****  }
 14583              		.loc 1 3399 4 view .LVU4440
 14584 004e FFF7FEBF 		b	process_keycode
 14585              	.LVL1224:
 14586              	.L1426:
 14587              		.cfi_restore_state
3386:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 14588              		.loc 1 3386 6 is_stmt 1 view .LVU4441
 14589 0052 104B     		ldr	r3, .L1428+8
 14590 0054 41F23010 		movw	r0, #4400
 14591 0058 9847     		blx	r3
 14592              	.LVL1225:
3386:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 14593              		.loc 1 3386 31 view .LVU4442
 14594 005a 0A20     		movs	r0, #10
 14595 005c 0E4B     		ldr	r3, .L1428+12
 14596 005e 9847     		blx	r3
 14597              	.LVL1226:
3386:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 14598              		.loc 1 3386 46 view .LVU4443
 14599 0060 0E4B     		ldr	r3, .L1428+16
 14600 0062 9847     		blx	r3
 14601              	.LVL1227:
3387:src/keys.c    ****        // Was error just wait for confirmation
 14602              		.loc 1 3387 6 view .LVU4444
3387:src/keys.c    ****        // Was error just wait for confirmation
 14603              		.loc 1 3387 11 is_stmt 0 view .LVU4445
 14604 0064 0E4B     		ldr	r3, .L1428+20
 14605 0066 0120     		movs	r0, #1
 14606 0068 9847     		blx	r3
 14607              	.LVL1228:
3387:src/keys.c    ****        // Was error just wait for confirmation
 14608              		.loc 1 3387 9 view .LVU4446
 14609 006a 0228     		cmp	r0, #2
 14610 006c 01D1     		bne	.L1422
3389:src/keys.c    ****      }
ARM GAS  /tmp/cc8lpfL1.s 			page 396


 14611              		.loc 1 3389 8 is_stmt 1 view .LVU4447
 14612 006e 0D4B     		ldr	r3, .L1428+24
 14613 0070 9847     		blx	r3
 14614              	.LVL1229:
 14615              	.L1422:
3391:src/keys.c    ****      return;
 14616              		.loc 1 3391 6 view .LVU4448
 14617 0072 084B     		ldr	r3, .L1428+8
 14618 0074 42F26020 		movw	r0, #8800
 14619 0078 9847     		blx	r3
 14620              	.LVL1230:
3391:src/keys.c    ****      return;
 14621              		.loc 1 3391 31 view .LVU4449
 14622 007a 074B     		ldr	r3, .L1428+12
 14623 007c 0A20     		movs	r0, #10
 14624 007e 9847     		blx	r3
 14625              	.LVL1231:
3391:src/keys.c    ****      return;
 14626              		.loc 1 3391 46 view .LVU4450
 14627 0080 064B     		ldr	r3, .L1428+16
3400:src/keys.c    ****  
 14628              		.loc 1 3400 2 is_stmt 0 view .LVU4451
 14629 0082 03B0     		add	sp, sp, #12
 14630              		.cfi_def_cfa_offset 12
 14631              		@ sp needed
 14632 0084 BDE83040 		pop	{r4, r5, lr}
 14633              		.cfi_restore 14
 14634              		.cfi_restore 5
 14635              		.cfi_restore 4
 14636              		.cfi_def_cfa_offset 0
 14637              	.LVL1232:
3391:src/keys.c    ****      return;
 14638              		.loc 1 3391 46 view .LVU4452
 14639 0088 1847     		bx	r3	@ indirect register sibling call
 14640              	.LVL1233:
 14641              	.L1429:
 14642 008a 00BF     		.align	2
 14643              	.L1428:
 14644 008c 00000000 		.word	StateWhileOn
 14645 0090 00000000 		.word	nd_opcode
 14646 0094 F5020008 		.word	134218485
 14647 0098 05040008 		.word	134218757
 14648 009c F9020008 		.word	134218489
 14649 00a0 79030008 		.word	134218617
 14650 00a4 99030008 		.word	134218649
 14651              		.cfi_endproc
 14652              	.LFE62:
 14654              		.comm	nd_opcode,4,4
 14655              		.comm	NonProgrammable,4,4
 14656              		.comm	GoFast,4,4
 14657              		.comm	OpCodeDisplayPending,4,4
 14658              		.comm	OpCode,4,4
 14659              		.comm	WasDataEntry,4,4
 14660              		.section	.bss.was_paused.9876,"aw",%nobits
 14661              		.align	2
 14662              		.set	.LANCHOR18,. + 0
 14665              	was_paused.9876:
ARM GAS  /tmp/cc8lpfL1.s 			page 397


 14666 0000 00000000 		.space	4
 14667              		.section	.rodata.alpha_arrows,"a"
 14668              		.align	2
 14671              	alpha_arrows:
 14672 0000 0D0E100F 		.ascii	"\015\016\020\017\003\004\237^\177"
 14672      03049F5E 
 14672      7F
 14673              		.section	.rodata.alpha_catalogue,"a"
 14674              		.align	2
 14677              	alpha_catalogue:
 14678 0000 0D4AC280 		.ascii	"\015J\302\200\236\266\212\242~\327\266\355\313v\336"
 14678      9EB68AA2 
 14678      7ED7B6ED 
 14678      CB76DE
 14679 000f 284AB0   		.ascii	"(J\260"
 14680              		.section	.rodata.alpha_compares,"a"
 14681              		.align	2
 14684              	alpha_compares:
 14685 0000 3C093D1D 		.ascii	"<\011=\035\012>[]{}"
 14685      0A3E5B5D 
 14685      7B7D
 14686              		.section	.rodata.alpha_letters,"a"
 14687              		.align	2
 14688              		.set	.LANCHOR9,. + 0
 14691              	alpha_letters:
 14692 0000 C0C1C2C3 		.ascii	"\300\301\302\303\210\304\305\306\307\204\310\311\312"
 14692      88C4C5C6 
 14692      C784C8C9 
 14692      CA
 14693 000d CB9ECCCD 		.ascii	"\313\236\314\315\316\317\320\321\322\323\324\025\325"
 14693      CECFD0D1 
 14693      D2D3D415 
 14693      D5
 14694 001a D618D8D9 		.ascii	"\326\030\330\331\332\333\334\001\031\002\335\032\336"
 14694      DADBDC01 
 14694      1902DD1A 
 14694      DE
 14695 0027 DF       		.ascii	"\337"
 14696              		.section	.rodata.alpha_letters_lower,"a"
 14697              		.align	2
 14698              		.set	.LANCHOR10,. + 0
 14701              	alpha_letters_lower:
 14702 0000 E0E1E2E3 		.ascii	"\340\341\342\343\211\344\345\346\347\205\350\351\352"
 14702      89E4E5E6 
 14702      E785E8E9 
 14702      EA
 14703 000d EB9EECED 		.ascii	"\353\236\354\355\356\357\360\361\362\363\364\026\365"
 14703      EEEFF0F1 
 14703      F2F3F416 
 14703      F5
 14704 001a F618F8F9 		.ascii	"\366\030\370\371\372\373\374\001\031\002\375\032\376"
 14704      FAFBFC01 
 14704      1902FD1A 
 14704      FE
 14705 0027 FF       		.ascii	"\377"
 14706              		.section	.rodata.alpha_subscripts,"a"
 14707              		.align	2
ARM GAS  /tmp/cc8lpfL1.s 			page 398


 14710              	alpha_subscripts:
 14711 0000 B805B9BA 		.ascii	"\270\005\271\272\232\200\327\230\273\024\206\274\367"
 14711      9A80D798 
 14711      BB1486BC 
 14711      F7
 14712 000d 1BBDBE93 		.ascii	"\033\275\276\223\277\201\213\234\214\231\235\220\233"
 14712      BF818B9C 
 14712      8C999D90 
 14712      9B
 14713              		.section	.rodata.alpha_symbols,"a"
 14714              		.align	2
 14717              	alpha_symbols:
 14718 0000 2C3A3B27 		.ascii	",:;'\"*@_~%$\014\036\037\216\256\222`#"
 14718      222A405F 
 14718      7E25240C 
 14718      1E1F8EAE 
 14718      926023
 14719              		.section	.rodata.alphamap.9360,"a"
 14720              		.align	2
 14721              		.set	.LANCHOR15,. + 0
 14724              	alphamap.9360:
 14725 0000 41004100 		.ascii	"A\000A\000a\240"
 14725      61A0
 14726 0006 42004200 		.ascii	"B\000B\000b\241"
 14726      62A1
 14727 000c 43008200 		.ascii	"C\000\202\000c\242"
 14727      63A2
 14728 0012 44008300 		.ascii	"D\000\203\000d\243"
 14728      64A3
 14729 0018 450D4500 		.ascii	"E\015E\000e\244"
 14729      65A4
 14730 001e 46009400 		.ascii	"F\000\224\000f\264"
 14730      66B4
 14731 0024 47008200 		.ascii	"G\000\202\000g\242"
 14731      67A2
 14732 002a 48005800 		.ascii	"H\000X\000h\265"
 14732      68B5
 14733 0030 49004900 		.ascii	"I\000I\000i\250"
 14733      69A8
 14734 0036 4AAF0000 		.ascii	"J\257\000\000j\000"
 14734      6A00
 14735 003c 4B004B00 		.ascii	"K\000K\000k\251"
 14735      6BA9
 14736 0042 4C008A00 		.ascii	"L\000\212\000l\252"
 14736      6CAA
 14737 0048 00004800 		.ascii	"\000\000H\000\000\246"
 14737      00A6
 14738 004e 4D00AB17 		.ascii	"M\000\253\027m\253"
 14738      6DAB
 14739 0054 4E084E95 		.ascii	"N\010N\225n\254"
 14739      6EAC
 14740 005a 4F0097AF 		.ascii	"O\000\227\257o\267"
 14740      6FB7
 14741 0060 00000000 		.ascii	"\000\000\000\000\000\000"
 14741      0000
 14742 0066 00000000 		.ascii	"\000\000\000\000\000\000"
 14742      0000
ARM GAS  /tmp/cc8lpfL1.s 			page 399


 14743 006c 50378F26 		.ascii	"P7\217&p\257"
 14743      70AF
 14744 0072 5138007C 		.ascii	"Q8\000|q\000"
 14744      7100
 14745 0078 5239520B 		.ascii	"R9R\013r\260"
 14745      72B0
 14746 007e 532F915C 		.ascii	"S/\221\\s\261"
 14746      73B1
 14747 0084 00000021 		.ascii	"\000\000\000!\000\000"
 14747      0000
 14748 008a 54345400 		.ascii	"T4T\000t\262"
 14748      74B2
 14749 0090 55350000 		.ascii	"U5\000\000u\000"
 14749      7500
 14750 0096 56360000 		.ascii	"V6\000\000v\000"
 14750      7600
 14751 009c 571C0000 		.ascii	"W\034\000\000w\000"
 14751      7700
 14752 00a2 0000003F 		.ascii	"\000\000\000?\000\000"
 14752      0000
 14753 00a8 58318D00 		.ascii	"X1\215\000x\255"
 14753      78AD
 14754 00ae 59325900 		.ascii	"Y2Y\000y\263"
 14754      79B3
 14755 00b4 5A335A00 		.ascii	"Z3Z\000z\245"
 14755      7AA5
 14756 00ba 2D282900 		.ascii	"-()\000\000\000"
 14756      0000
 14757 00c0 00000000 		.ascii	"\000\000\000\000\000\000"
 14757      0000
 14758 00c6 3A308720 		.ascii	":0\207 ;\247"
 14758      3BA7
 14759 00cc 2E2E9600 		.ascii	"..\226\000.\266"
 14759      2EB6
 14760 00d2 3F212100 		.ascii	"?!!\000?!"
 14760      3F21
 14761 00d8 202B3D06 		.ascii	" +=\006  "
 14761      2020
 14762 00de 00000000 		.ascii	"\000\000\000\000\000\000"
 14762      0000
 14763              		.section	.rodata.amap.9351,"a"
 14764              		.align	2
 14765              		.set	.LANCHOR16,. + 0
 14768              	amap.9351:
 14769 0000 04       		.byte	4
 14770 0001 000D00   		.ascii	"\000\015\000"
 14771 0004 05       		.byte	5
 14772 0005 000E09   		.ascii	"\000\016\011"
 14773 0008 2C       		.byte	44
 14774 0009 000D00   		.ascii	"\000\015\000"
 14775 000c 2D       		.byte	45
 14776 000d 000E09   		.ascii	"\000\016\011"
 14777 0010 08       		.byte	8
 14778 0011 00000F   		.ascii	"\000\000\017"
 14779 0014 1F       		.byte	31
 14780 0015 00000C   		.ascii	"\000\000\014"
 14781 0018 21       		.byte	33
ARM GAS  /tmp/cc8lpfL1.s 			page 400


 14782 0019 00000A   		.ascii	"\000\000\012"
 14783 001c 26       		.byte	38
 14784 001d 00000B   		.ascii	"\000\000\013"
 14785              		.section	.rodata.catalogue,"a"
 14786              		.align	2
 14789              	catalogue:
 14790 0000 471B76AC 		.ascii	"G\033v\254\301cX\344\030\242;Y\027\010}Hs!\011\204g"
 14790      C16358E4 
 14790      18A23B59 
 14790      17087D48 
 14790      73210984 
 14791 0015 93E4FD93 		.ascii	"\223\344\375\223E\231\364u\005n\223\024\311#r\034\226"
 14791      4599F475 
 14791      056E9314 
 14791      C923721C 
 14791      96
 14792 0026 E1B9695D 		.ascii	"\341\271i]\014\301\325s\330WI\273q\321We\255MY&\251"
 14792      0CC1D573 
 14792      D85749BB 
 14792      71D15765 
 14792      AD4D5926 
 14793 003b A969D906 		.ascii	"\251i\331\006\375\3160\334\007\021\"\312\020|\237#\311"
 14793      FDCE30DC 
 14793      071122CA 
 14793      107C9F23 
 14793      C9
 14794 004c 10B4A8C2 		.ascii	"\020\264\250\302\314P2\215\305e\034`\325\2032\221\204"
 14794      CC50328D 
 14794      C5651C60 
 14794      D5833291 
 14794      84
 14795 005d 5D1946DC 		.ascii	"]\031F\334\022\261\312c\335\022\200\236\266\212\242"
 14795      12B1CA63 
 14795      DD12809E 
 14795      B68AA2
 14796 006c 7ED9B5ED 		.ascii	"~\331\265\355\273r\335\267\255\202\204\253k\023F\301"
 14796      BB72DDB7 
 14796      AD8284AB 
 14796      6B1346C1 
 14797 007c B16B9AF7 		.ascii	"\261k\232\367\015\214gQ\007y\265v\027\325\351\264"
 14797      0D8C6751 
 14797      0779B576 
 14797      17D5E9B4 
 14798              		.section	.rodata.catalogue_sizes.9674,"a"
 14799              		.align	2
 14800              		.set	.LANCHOR8,. + 0
 14803              	catalogue_sizes.9674:
 14804 0000 00701E11 		.ascii	"\000p\036\0216=C\206%:\016\023\012\011(\032LLX\016\023"
 14804      363D4386 
 14804      253A0E13 
 14804      0A09281A 
 14804      4C4C580E 
 14805              		.section	.rodata.catalogues.9682,"a"
 14806              		.align	2
 14807              		.set	.LANCHOR12,. + 0
 14810              	catalogues.9682:
 14811 0000 00000000 		.word	0
ARM GAS  /tmp/cc8lpfL1.s 			page 401


 14812 0004 00000000 		.word	catalogue
 14813 0008 00000000 		.word	cplx_catalogue
 14814 000c 00000000 		.word	stats_catalogue
 14815 0010 00000000 		.word	prob_catalogue
 14816 0014 00000000 		.word	int_catalogue
 14817 0018 00000000 		.word	prog_catalogue
 14818 001c 00000000 		.word	program_xfcn
 14819 0020 00000000 		.word	test_catalogue
 14820 0024 00000000 		.word	mode_catalogue
 14821 0028 00000000 		.word	alpha_catalogue
 14822 002c 00000000 		.word	alpha_symbols
 14823 0030 00000000 		.word	alpha_compares
 14824 0034 00000000 		.word	alpha_arrows
 14825 0038 00000000 		.word	alpha_letters
 14826 003c 00000000 		.word	alpha_subscripts
 14827 0040 00000000 		.word	0
 14828 0044 00000000 		.word	0
 14829 0048 00000000 		.word	0
 14830 004c 00000000 		.word	sums_catalogue
 14831 0050 00000000 		.word	matrix_catalogue
 14832              		.section	.rodata.cmap.9350,"a"
 14833              		.align	2
 14834              		.set	.LANCHOR17,. + 0
 14837              	cmap.9350:
 14838 0000 04       		.byte	4
 14839 0001 120012   		.ascii	"\022\000\022"
 14840 0004 05       		.byte	5
 14841 0005 090909   		.ascii	"\011\011\011"
 14842 0008 06       		.byte	6
 14843 0009 151515   		.ascii	"\025\025\025"
 14844 000c 0C       		.byte	12
 14845 000d 100011   		.ascii	"\020\000\021"
 14846 0010 19       		.byte	25
 14847 0011 040004   		.ascii	"\004\000\004"
 14848 0014 1A       		.byte	26
 14849 0015 030003   		.ascii	"\003\000\003"
 14850 0018 1B       		.byte	27
 14851 0019 130013   		.ascii	"\023\000\023"
 14852 001c 1C       		.byte	28
 14853 001d 140014   		.ascii	"\024\000\024"
 14854 0020 1E       		.byte	30
 14855 0021 171717   		.ascii	"\027\027\027"
 14856 0024 1F       		.byte	31
 14857 0025 080808   		.ascii	"\010\010\010"
 14858 0028 20       		.byte	32
 14859 0029 060606   		.ascii	"\006\006\006"
 14860 002c 21       		.byte	33
 14861 002d 010502   		.ascii	"\001\005\002"
 14862              		.section	.rodata.conv_catalogue,"a"
 14863              		.align	2
 14864              		.set	.LANCHOR11,. + 0
 14867              	conv_catalogue:
 14868 0000 DADB8C8A 		.ascii	"\332\333\214\212+-\3357'913\021\026\005\334\336\031"
 14868      2B2DDD37 
 14868      27393133 
 14868      111605DC 
 14868      DE19
ARM GAS  /tmp/cc8lpfL1.s 			page 402


 14869 0012 1D1B1315 		.ascii	"\035\033\023\025\015\017\215\010\217\012*,GCE\027?0"
 14869      0D0F8D08 
 14869      8F0A2A2C 
 14869      47434517 
 14869      3F30
 14870 0024 32340400 		.ascii	"24\004\000\002\006&\" ($5/\001#\020\014\016!\022\024"
 14870      02062622 
 14870      20282435 
 14870      2F012310 
 14870      0C0E2112 
 14871 0039 3B181A1C 		.ascii	";\030\032\034\036).\01168>:<@%\337=\213\216\003\007"
 14871      1E292E09 
 14871      36383E3A 
 14871      3C4025DF 
 14871      3D8B8E03 
 14872 004e 4B49410B 		.ascii	"KIA\013JHFBD\037"
 14872      4A484642 
 14872      441F
 14873              		.section	.rodata.conv_mapping.9721,"a"
 14874              		.align	2
 14875              		.set	.LANCHOR14,. + 0
 14878              	conv_mapping.9721:
 14879 0000 8502     		.short	645
 14880 0002 8402     		.short	644
 14881 0004 8602     		.short	646
 14882 0006 8702     		.short	647
 14883 0008 8202     		.short	642
 14884 000a 8302     		.short	643
 14885 000c 3202     		.short	562
 14886 000e 3302     		.short	563
 14887 0010 3402     		.short	564
 14888 0012 3502     		.short	565
 14889 0014 3602     		.short	566
 14890 0016 3702     		.short	567
 14891              		.section	.rodata.cplx_catalogue,"a"
 14892              		.align	2
 14895              	cplx_catalogue:
 14896 0000 7E694CF2 		.ascii	"~iL\362\032;\316\341\015\363~\240\350>\202\253j\312"
 14896      1A3BCEE1 
 14896      0DF37EA0 
 14896      E83E82AB 
 14896      6ACA
 14897 0012 BDF2A2A1 		.ascii	"\275\362\242\241'\242\007}\037g\342\247\253\255*&\021"
 14897      27A2077D 
 14897      1F67E2A7 
 14897      ABAD2A26 
 14897      11
 14898 0023 9E9ED0   		.ascii	"\236\236\320"
 14899              		.section	.rodata.disp.9532,"a"
 14900              		.align	2
 14901              		.set	.LANCHOR21,. + 0
 14904              	disp.9532:
 14905 0000 03       		.byte	3
 14906 0001 02       		.byte	2
 14907 0002 05       		.byte	5
 14908 0003 04       		.byte	4
 14909              		.section	.rodata.int_catalogue,"a"
ARM GAS  /tmp/cc8lpfL1.s 			page 403


 14910              		.align	2
 14913              	int_catalogue:
 14914 0000 47315307 		.ascii	"G1S\007\027A\235rY\326\020\231\374a\035A[\246\225\273"
 14914      17419D72 
 14914      59D61099 
 14914      FC611D41 
 14914      5BA695BB 
 14915 0014 2531BC71 		.ascii	"%1\274q\252jX&\235\277`\\\343\015\300%p\374E\007\304"
 14915      AA6A5826 
 14915      9DBF605C 
 14915      E30DC025 
 14915      70FC4507 
 14916 0029 312C5868 		.ascii	"1,XhB\361<S1e\003S)\033pJ\307*\332*\255\233^\333\267"
 14916      42F13C53 
 14916      31650353 
 14916      291B704A 
 14916      C72ADA2A 
 14917 0042 2DDB7AD8 		.ascii	"-\333z\330*\323DA\337x\000"
 14917      2AD34441 
 14917      DF7800
 14918              		.section	.rodata.linear_key_map.9316,"a"
 14919              		.align	2
 14920              		.set	.LANCHOR6,. + 0
 14923              	linear_key_map.9316:
 14924 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\011\012\013\014"
 14924      04050607 
 14924      08090A0B 
 14924      0C
 14925 000d 0D0E0F10 		.ascii	"\015\016\017\020\000\021\022\023\024\025\000\026\027"
 14925      00111213 
 14925      14150016 
 14925      17
 14926 001a 18191A00 		.ascii	"\030\031\032\000\033\034\035\036\037\000 !\"#$%%%%%"
 14926      1B1C1D1E 
 14926      1F002021 
 14926      22232425 
 14926      25252525 
 14927 002e 25       		.ascii	"%"
 14928              		.section	.rodata.linear_key_map.9320,"a"
 14929              		.align	2
 14930              		.set	.LANCHOR1,. + 0
 14933              	linear_key_map.9320:
 14934 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\"\"\"\011\012\013"
 14934      04050607 
 14934      08222222 
 14934      090A0B
 14935 000f 0C0D000E 		.ascii	"\014\015\000\016\017\020\021\022\000\023\024\025\026"
 14935      0F101112 
 14935      00131415 
 14935      16
 14936 001c 17001819 		.ascii	"\027\000\030\031\032\033\034\000\035\036\037 !\"\"\""
 14936      1A1B1C00 
 14936      1D1E1F20 
 14936      21222222 
 14937 002c 040522   		.ascii	"\004\005\""
 14938              		.section	.rodata.map.9332,"a"
 14939              		.align	2
ARM GAS  /tmp/cc8lpfL1.s 			page 404


 14940              		.set	.LANCHOR5,. + 0
 14943              	map.9332:
 14944 0000 E8E9EAEB 		.ascii	"\350\351\352\353\377\177\177\177mnol\377\377\377\377"
 14944      FF7F7F7F 
 14944      6D6E6F6C 
 14944      FFFFFFFF 
 14945 0010 FF7F0708 		.ascii	"\377\177\007\010\011\177\177\347\005\006\177\177\344"
 14945      097F7FE7 
 14945      05067F7F 
 14945      E4
 14946 001d E5E67FFF 		.ascii	"\345\346\177\377\000\360\177\177\377\377\377\377\377"
 14946      00F07F7F 
 14946      FFFFFFFF 
 14946      FF
 14947 002a FF       		.ascii	"\377"
 14948              		.section	.rodata.matrix_catalogue,"a"
 14949              		.align	2
 14952              	matrix_catalogue:
 14953 0000 66DDD364 		.ascii	"f\335\323d\3305\335\263m\225s\031g-\332sY\246q\334f"
 14953      D835DDB3 
 14953      6D957319 
 14953      672DDA73 
 14953      59A671DC 
 14954 0015 59865C   		.ascii	"Y\206\\"
 14955              		.section	.rodata.mode_catalogue,"a"
 14956              		.align	2
 14959              	mode_catalogue:
 14960 0000 2948C290 		.ascii	")H\302\220\213\307Fc\364\376@\017\363\250\351\037\210"
 14960      8BC74663 
 14960      F4FE400F 
 14960      F3A8E91F 
 14960      88
 14961 0011 01FC7CC0 		.ascii	"\001\374|\300\211\204\011\001\030\314\362D\234&\306"
 14961      89840901 
 14961      18CCF244 
 14961      9C26C6
 14962 0020 21949324 		.ascii	"!\224\223$\211\241\223*!\010<\277&\"\010s \2461\014"
 14962      89A1932A 
 14962      21083CBF 
 14962      26220873 
 14962      20A6310C 
 14963 0034 7324A731 		.ascii	"s$\2471Lb8\316\016\003\234\244\206!H\3348\363<\211\220"
 14963      4C6238CE 
 14963      0E039CA4 
 14963      862148DC 
 14963      38F33C89 
 14964              		.section	.rodata.op_map.9404,"a"
 14965              		.align	2
 14966              		.set	.LANCHOR2,. + 0
 14969              	op_map.9404:
 14970 0000 1500     		.short	21
 14971 0002 0B02     		.short	523
 14972 0004 0003     		.short	768
 14973 0006 0A02     		.short	522
 14974 0008 1300     		.short	19
 14975 000a 1400     		.short	20
 14976 000c 0300     		.short	3
ARM GAS  /tmp/cc8lpfL1.s 			page 405


 14977 000e 0A00     		.short	10
 14978 0010 0701     		.short	263
 14979 0012 0000     		.short	0
 14980 0014 6531     		.short	12645
 14981 0016 0300     		.short	3
 14982 0018 0200     		.short	2
 14983 001a 0100     		.short	1
 14984 001c 4400     		.short	68
 14985 001e 0C00     		.short	12
 14986 0020 0D00     		.short	13
 14987 0022 0E00     		.short	14
 14988 0024 0403     		.short	772
 14989 0026 2F00     		.short	47
 14990 0028 0900     		.short	9
 14991 002a 0A00     		.short	10
 14992 002c 0B00     		.short	11
 14993 002e 0303     		.short	771
 14994 0030 2E00     		.short	46
 14995 0032 0600     		.short	6
 14996 0034 0700     		.short	7
 14997 0036 0800     		.short	8
 14998 0038 0203     		.short	770
 14999 003a 3300     		.short	51
 15000 003c 0500     		.short	5
 15001 003e 0400     		.short	4
 15002 0040 3B01     		.short	315
 15003 0042 0103     		.short	769
 15004 0044 0001     		.short	256
 15005              		.section	.rodata.op_map.9427,"a"
 15006              		.align	2
 15007              		.set	.LANCHOR3,. + 0
 15010              	op_map.9427:
 15011 0000 0100     		.short	1
 15012 0002 0000     		.short	0
 15013 0004 20F2     		.short	-3552
 15014 0006 23F2     		.short	-3549
 15015 0008 21F2     		.short	-3551
 15016 000a 24F2     		.short	-3548
 15017 000c 22F2     		.short	-3550
 15018 000e 25F2     		.short	-3547
 15019 0010 47F1     		.short	-3769
 15020 0012 46F1     		.short	-3770
 15021 0014 4E01     		.short	334
 15022 0016 4D01     		.short	333
 15023 0018 5C01     		.short	348
 15024 001a 35F1     		.short	-3787
 15025 001c 5B01     		.short	347
 15026 001e 36F1     		.short	-3786
 15027 0020 3301     		.short	307
 15028 0022 37F1     		.short	-3785
 15029 0024 3300     		.short	51
 15030 0026 0C01     		.short	268
 15031 0028 2B00     		.short	43
 15032 002a 2C00     		.short	44
 15033 002c 028B     		.short	-29950
 15034 002e 088B     		.short	-29944
 15035 0030 0A8B     		.short	-29942
ARM GAS  /tmp/cc8lpfL1.s 			page 406


 15036 0032 108B     		.short	-29936
 15037 0034 4301     		.short	323
 15038 0036 3D01     		.short	317
 15039 0038 0902     		.short	521
 15040 003a 0802     		.short	520
 15041 003c 1002     		.short	528
 15042 003e 0D02     		.short	525
 15043 0040 0F02     		.short	527
 15044 0042 0E02     		.short	526
 15045 0044 0003     		.short	768
 15046 0046 0803     		.short	776
 15047 0048 0BF2     		.short	-3573
 15048 004a 1603     		.short	790
 15049 004c 1203     		.short	786
 15050 004e 1303     		.short	787
 15051 0050 3DF2     		.short	-3523
 15052 0052 3EF2     		.short	-3522
 15053 0054 24F1     		.short	-3804
 15054 0056 1EF1     		.short	-3810
 15055 0058 75F2     		.short	-3467
 15056 005a 27F1     		.short	-3801
 15057 005c 0A02     		.short	522
 15058 005e 1602     		.short	534
 15059 0060 5100     		.short	81
 15060 0062 5200     		.short	82
 15061 0064 0000     		.short	0
 15062 0066 0100     		.short	1
 15063 0068 48F0     		.short	-4024
 15064 006a 4BF0     		.short	-4021
 15065 006c 47F0     		.short	-4025
 15066 006e 46F0     		.short	-4026
 15067 0070 77F2     		.short	-3465
 15068 0072 78F2     		.short	-3464
 15069 0074 3300     		.short	51
 15070 0076 3300     		.short	51
 15071 0078 0502     		.short	517
 15072 007a 0602     		.short	518
 15073 007c 0402     		.short	516
 15074 007e 0002     		.short	512
 15075 0080 4200     		.short	66
 15076 0082 3801     		.short	312
 15077 0084 3A00     		.short	58
 15078 0086 3B00     		.short	59
 15079 0088 0001     		.short	256
 15080 008a 0001     		.short	256
 15081              		.section	.rodata.op_map.9450,"a"
 15082              		.align	2
 15083              		.set	.LANCHOR0,. + 0
 15086              	op_map.9450:
 15087 0000 4C80     		.short	-32692
 15088 0002 4D80     		.short	-32691
 15089 0004 4E80     		.short	-32690
 15090 0006 4F80     		.short	-32689
 15091 0008 3300     		.short	51
 15092 000a 3300     		.short	51
 15093 000c 3300     		.short	51
 15094 000e 2180     		.short	-32735
ARM GAS  /tmp/cc8lpfL1.s 			page 407


 15095 0010 0801     		.short	264
 15096 0012 8780     		.short	-32633
 15097 0014 1180     		.short	-32751
 15098 0016 7C02     		.short	636
 15099 0018 6660     		.short	24678
 15100 001a 3F01     		.short	319
 15101 001c 4580     		.short	-32699
 15102 001e 1C03     		.short	796
 15103 0020 1D03     		.short	797
 15104 0022 1E03     		.short	798
 15105 0024 0603     		.short	774
 15106 0026 2F02     		.short	559
 15107 0028 3300     		.short	51
 15108 002a 3300     		.short	51
 15109 002c 3300     		.short	51
 15110 002e 3300     		.short	51
 15111 0030 3300     		.short	51
 15112 0032 3300     		.short	51
 15113 0034 3300     		.short	51
 15114 0036 3300     		.short	51
 15115 0038 1640     		.short	16406
 15116 003a 0201     		.short	258
 15117 003c 6D80     		.short	-32659
 15118 003e 5001     		.short	336
 15119 0040 3300     		.short	51
 15120 0042 1540     		.short	16405
 15121 0044 0001     		.short	256
 15122              		.section	.rodata.op_map.9505,"a"
 15123              		.align	2
 15124              		.set	.LANCHOR7,. + 0
 15127              	op_map.9505:
 15128 0000 0100     		.short	1
 15129 0002 0100     		.short	1
 15130 0004 0000     		.short	0
 15131 0006 0000     		.short	0
 15132 0008 0B05     		.short	1291
 15133 000a 2005     		.short	1312
 15134 000c 2305     		.short	1315
 15135 000e 3300     		.short	51
 15136 0010 0006     		.short	1536
 15137 0012 2105     		.short	1313
 15138 0014 2405     		.short	1316
 15139 0016 3300     		.short	51
 15140 0018 0A05     		.short	1290
 15141 001a 2205     		.short	1314
 15142 001c 2505     		.short	1317
 15143 001e 3300     		.short	51
 15144 0020 3300     		.short	51
 15145 0022 4701     		.short	327
 15146 0024 4601     		.short	326
 15147 0026 3300     		.short	51
 15148 0028 3300     		.short	51
 15149 002a 3300     		.short	51
 15150 002c 3300     		.short	51
 15151 002e 3300     		.short	51
 15152 0030 15FF     		.short	-235
 15153 0032 3300     		.short	51
ARM GAS  /tmp/cc8lpfL1.s 			page 408


 15154 0034 3300     		.short	51
 15155 0036 3300     		.short	51
 15156 0038 1AFF     		.short	-230
 15157 003a 3300     		.short	51
 15158 003c 3300     		.short	51
 15159 003e 8CFF     		.short	-116
 15160 0040 0901     		.short	265
 15161 0042 3300     		.short	51
 15162 0044 3300     		.short	51
 15163 0046 0A01     		.short	266
 15164 0048 0B01     		.short	267
 15165 004a 3300     		.short	51
 15166 004c 0D01     		.short	269
 15167 004e 0D01     		.short	269
 15168 0050 663F     		.short	16230
 15169 0052 3300     		.short	51
 15170 0054 3300     		.short	51
 15171 0056 1FFF     		.short	-225
 15172 0058 3805     		.short	1336
 15173 005a 3300     		.short	51
 15174 005c 3300     		.short	51
 15175 005e 3905     		.short	1337
 15176 0060 6621     		.short	8550
 15177 0062 3300     		.short	51
 15178 0064 3300     		.short	51
 15179 0066 6621     		.short	8550
 15180 0068 3300     		.short	51
 15181 006a 3300     		.short	51
 15182 006c 3300     		.short	51
 15183 006e 3300     		.short	51
 15184 0070 3300     		.short	51
 15185 0072 0905     		.short	1289
 15186 0074 0805     		.short	1288
 15187 0076 3300     		.short	51
 15188 0078 07A8     		.short	-22521
 15189 007a 1005     		.short	1296
 15190 007c 0D05     		.short	1293
 15191 007e 3300     		.short	51
 15192 0080 08A8     		.short	-22520
 15193 0082 0F05     		.short	1295
 15194 0084 0E05     		.short	1294
 15195 0086 3300     		.short	51
 15196 0088 09A8     		.short	-22519
 15197 008a 0006     		.short	1536
 15198 008c 0806     		.short	1544
 15199 008e 3300     		.short	51
 15200 0090 0406     		.short	1540
 15201 0092 0B05     		.short	1291
 15202 0094 1606     		.short	1558
 15203 0096 3300     		.short	51
 15204 0098 3300     		.short	51
 15205 009a 1206     		.short	1554
 15206 009c 1306     		.short	1555
 15207 009e 2F05     		.short	1327
 15208 00a0 04A8     		.short	-22524
 15209 00a2 3300     		.short	51
 15210 00a4 3300     		.short	51
ARM GAS  /tmp/cc8lpfL1.s 			page 409


 15211 00a6 3300     		.short	51
 15212 00a8 05A8     		.short	-22523
 15213 00aa 3300     		.short	51
 15214 00ac 3300     		.short	51
 15215 00ae 3300     		.short	51
 15216 00b0 06A8     		.short	-22522
 15217 00b2 3300     		.short	51
 15218 00b4 3300     		.short	51
 15219 00b6 3300     		.short	51
 15220 00b8 0306     		.short	1539
 15221 00ba 0A05     		.short	1290
 15222 00bc 1605     		.short	1302
 15223 00be 1605     		.short	1302
 15224 00c0 3300     		.short	51
 15225 00c2 3300     		.short	51
 15226 00c4 3300     		.short	51
 15227 00c6 3300     		.short	51
 15228 00c8 01A8     		.short	-22527
 15229 00ca 0000     		.short	0
 15230 00cc 0100     		.short	1
 15231 00ce 3300     		.short	51
 15232 00d0 02A8     		.short	-22526
 15233 00d2 3300     		.short	51
 15234 00d4 3300     		.short	51
 15235 00d6 3300     		.short	51
 15236 00d8 03A8     		.short	-22525
 15237 00da 3300     		.short	51
 15238 00dc 3300     		.short	51
 15239 00de 3300     		.short	51
 15240 00e0 0206     		.short	1538
 15241 00e2 3300     		.short	51
 15242 00e4 3300     		.short	51
 15243 00e6 3300     		.short	51
 15244 00e8 3300     		.short	51
 15245 00ea 3300     		.short	51
 15246 00ec 3300     		.short	51
 15247 00ee 0201     		.short	258
 15248 00f0 00A8     		.short	-22528
 15249 00f2 0505     		.short	1285
 15250 00f4 0605     		.short	1286
 15251 00f6 3300     		.short	51
 15252 00f8 B801     		.short	440
 15253 00fa 0405     		.short	1284
 15254 00fc 0005     		.short	1280
 15255 00fe 3300     		.short	51
 15256 0100 CF01     		.short	463
 15257 0102 3300     		.short	51
 15258 0104 3300     		.short	51
 15259 0106 3300     		.short	51
 15260 0108 0106     		.short	1537
 15261 010a 3300     		.short	51
 15262 010c 3300     		.short	51
 15263 010e 3300     		.short	51
 15264 0110 0001     		.short	256
 15265 0112 0001     		.short	256
 15266 0114 0001     		.short	256
 15267 0116 0001     		.short	256
ARM GAS  /tmp/cc8lpfL1.s 			page 410


 15268              		.section	.rodata.op_map.9517,"a"
 15269              		.align	2
 15270              		.set	.LANCHOR19,. + 0
 15273              	op_map.9517:
 15274 0000 2A27     		.ascii	"*'"
 15275 0002 2B28     		.ascii	"+("
 15276 0004 2C29     		.ascii	",)"
 15277              		.section	.rodata.op_map.9531,"a"
 15278              		.align	2
 15279              		.set	.LANCHOR20,. + 0
 15282              	op_map.9531:
 15283 0000 1A02     		.short	538
 15284 0002 7B02     		.short	635
 15285 0004 1B02     		.short	539
 15286 0006 7A02     		.short	634
 15287 0008 1C02     		.short	540
 15288 000a 3300     		.short	51
 15289              		.section	.rodata.op_map2.9428,"a"
 15290              		.align	2
 15291              		.set	.LANCHOR4,. + 0
 15294              	op_map2.9428:
 15295 0000 3300     		.short	51
 15296 0002 3300     		.short	51
 15297 0004 0003     		.short	768
 15298 0006 0A02     		.short	522
 15299              		.section	.rodata.opcode_breaks,"a"
 15300              		.align	2
 15301              		.set	.LANCHOR13,. + 0
 15304              	opcode_breaks:
 15305 0000 34D09C35 		.ascii	"4\320\2345\014\2345"
 15305      0C9C35
 15306              		.section	.rodata.prob_catalogue,"a"
 15307              		.align	2
 15310              	prob_catalogue:
 15311 0000 54D525C1 		.ascii	"T\325%\301TZ\026u\335iT\024\365\275QRV\325)KW\025\265"
 15311      545A1675 
 15311      DD695414 
 15311      F5BD5152 
 15311      56D5294B 
 15312 0017 CD5D5896 		.ascii	"\315]X\226\025\325cYVE\331fW\325\345\321`VU\205\311"
 15312      15D56359 
 15312      5645D966 
 15312      57D5E5D1 
 15312      60565585 
 15313 002c 5A559555 		.ascii	"ZU\225U\305WQ\226\305\035HST\305\271NZ\224\005\021E"
 15313      C5575196 
 15313      C51D4853 
 15313      54C5B94E 
 15313      5A940511 
 15314 0041 50D6B0   		.ascii	"P\326\260"
 15315              		.section	.rodata.prog_catalogue,"a"
 15316              		.align	2
 15319              	prog_catalogue:
 15320 0000 BA4D1CF4 		.ascii	"\272M\034\364y\035G\201\310t*3\273\310B\273\257\001"
 15320      791D4781 
 15320      C8742A33 
 15320      BBC842BB 
ARM GAS  /tmp/cc8lpfL1.s 			page 411


 15320      AF01
 15321 0012 BAB4C14E 		.ascii	"\272\264\301N\013\356\3743/;\276\361\313\016#\220\347"
 15321      0BEEFC33 
 15321      2F3BBEF1 
 15321      CB0E2390 
 15321      E7
 15322 0023 38CE8CB8 		.ascii	"8\316\214\270\3367r\320\320\3349G\003\233+\265M\361"
 15322      DE3772D0 
 15322      D0DC3947 
 15322      039B2BB5 
 15322      4DF1
 15323 0035 D8CD1B4B 		.ascii	"\330\315\033K\022\274\262,\016\033\240\322\015\355C"
 15323      12BCB22C 
 15323      0E1BA0D2 
 15323      0DED43
 15324 0044 02C62A72 		.ascii	"\002\306*rP\350\313\261,\\\210\256+r\034\340"
 15324      50E8CBB1 
 15324      2C5C88AE 
 15324      2B721CE0 
 15325              		.section	.rodata.program_xfcn,"a"
 15326              		.align	2
 15329              	program_xfcn:
 15330 0000 471B76AF 		.ascii	"G\033v\257\0250X\326;\027A\212#\265\221p\235rY\326\037"
 15330      153058D6 
 15330      3B17418A 
 15330      23B59170 
 15330      9D7259D6 
 15331 0015 521CC842 		.ascii	"R\034\310Ba\031\344\371?d\321f\177\030GPV\3511L\222"
 15331      6119E4F9 
 15331      3F64D166 
 15331      7F184750 
 15331      56E9314C 
 15332 002a 3721C96E 		.ascii	"7!\311n\033\226\225\320\314\035W=\205t\233\262Q\307"
 15332      1B9695D0 
 15332      CC1D573D 
 15332      85749BB2 
 15332      51C7
 15333 003c 455D96B5 		.ascii	"E]\226\2655d\261\274q\252jX&\235\220o\330\0278\303p"
 15333      3564B1BC 
 15333      71AA6A58 
 15333      269D906F 
 15333      D81738C3 
 15334 0051 1C448B28 		.ascii	"\034D\213(%p\374E\007\3041,\237\026\310\362A\241\013"
 15334      2570FC45 
 15334      07C4312C 
 15334      9F16C8F2 
 15334      41A10B
 15335 0064 4AB1330B 		.ascii	"J\2613\013\024\314P2\215\305e\034`\325\2032\221\204"
 15335      14CC5032 
 15335      8DC5651C 
 15335      60D58332 
 15335      9184
 15336 0076 5D1946DC 		.ascii	"]\031F\334\022\261\312c\335\022\200\236\266\212\242"
 15336      12B1CA63 
 15336      DD12809E 
 15336      B68AA2
 15337 0085 7ED9B5ED 		.ascii	"~\331\265\355\273r\335\267\255\202\204\253k\023F\301"
ARM GAS  /tmp/cc8lpfL1.s 			page 412


 15337      BB72DDB7 
 15337      AD8284AB 
 15337      6B1346C1 
 15338 0095 B16B9AF7 		.ascii	"\261k\232\367\015\214gQ\007}\336m]\205\365zm\036\000"
 15338      0D8C6751 
 15338      077DDE6D 
 15338      5D85F57A 
 15338      6D1E00
 15339              		.section	.rodata.smap.9352,"a"
 15340              		.align	2
 15341              		.set	.LANCHOR22,. + 0
 15344              	smap.9352:
 15345 0000 00010002 		.ascii	"\000\001\000\002"
 15346              		.section	.rodata.stats_catalogue,"a"
 15347              		.align	2
 15350              	stats_catalogue:
 15351 0000 1805C1A0 		.ascii	"\030\005\301\240]\027\311qXa\026\205\225\340T\027\205"
 15351      5D17C971 
 15351      58611685 
 15351      95E05417 
 15351      85
 15352 0011 514C575E 		.ascii	"QLW^\200"
 15352      80
 15353              		.section	.rodata.sums_catalogue,"a"
 15354              		.align	2
 15357              	sums_catalogue:
 15358 0000 1444B134 		.ascii	"\024D\2614J\023\204\301 E\021\004\361\034I\021\205\000"
 15358      4A1384C1 
 15358      20451104 
 15358      F11C4911 
 15358      8500
 15359              		.section	.rodata.test_catalogue,"a"
 15360              		.align	2
 15363              	test_catalogue:
 15364 0000 C6B19CDC 		.ascii	"\306\261\234\334\353/\313\334\037\013\303p\302\363\006"
 15364      EB2FCBDC 
 15364      1F0BC370 
 15364      C2F306
 15365 000f C230AC24 		.ascii	"\3020\254$\323.\362\013\324\2356\213\202\370\2725\013"
 15365      D32EF20B 
 15365      D49D368B 
 15365      82F8BA35 
 15365      0B
 15366 0020 9340F0B8 		.ascii	"\223@\360\270\2563T\326\270n[\220\267<@"
 15366      AE3354D6 
 15366      B86E5B90 
 15366      B73C40
 15367              		.text
 15368              	.Letext0:
 15369              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 15370              		.file 3 "dmcp/dmcp.h"
 15371              		.file 4 "src/decNumber/decContext.h"
 15372              		.file 5 "src/decNumber/decNumber.h"
 15373              		.file 6 "src/decNumber/decimal64.h"
 15374              		.file 7 "src/decNumber/decimal128.h"
 15375              		.file 8 "src/xeq.h"
 15376              		.file 9 "src/data.h"
ARM GAS  /tmp/cc8lpfL1.s 			page 413


 15377              		.file 10 "src/keys.h"
 15378              		.file 11 "src/menu.h"
 15379              		.file 12 "src/display.h"
 15380              		.file 13 "src/consts.h"
 15381              		.file 14 "src/storage.h"
 15382              		.file 15 "src/stats.h"
 15383              		.file 16 "src/catalogues.h"
 15384              		.file 17 "src/lcd.h"
 15385              		.file 18 "src/int.h"
 15386              		.file 19 "src/decn.h"
ARM GAS  /tmp/cc8lpfL1.s 			page 414


DEFINED SYMBOLS
                            *ABS*:0000000000000000 keys.c
     /tmp/cc8lpfL1.s:18     .text.gtodot_digit:0000000000000000 $t
     /tmp/cc8lpfL1.s:26     .text.gtodot_digit:0000000000000000 gtodot_digit
     /tmp/cc8lpfL1.s:110    .text.gtodot_digit:0000000000000054 $d
     /tmp/cc8lpfL1.s:117    .text.check_f_key:0000000000000000 $t
     /tmp/cc8lpfL1.s:124    .text.check_f_key:0000000000000000 check_f_key
     /tmp/cc8lpfL1.s:202    .text.check_f_key:0000000000000038 $d
     /tmp/cc8lpfL1.s:208    .text.is_label_or_end_at:0000000000000000 $t
     /tmp/cc8lpfL1.s:215    .text.is_label_or_end_at:0000000000000000 is_label_or_end_at
     /tmp/cc8lpfL1.s:271    .text.advance_to_next_label:0000000000000000 $t
     /tmp/cc8lpfL1.s:278    .text.advance_to_next_label:0000000000000000 advance_to_next_label
     /tmp/cc8lpfL1.s:359    .text.advance_to_next_label:0000000000000048 $d
     /tmp/cc8lpfL1.s:364    .text.init_cat:0000000000000000 $t
     /tmp/cc8lpfL1.s:371    .text.init_cat:0000000000000000 init_cat
     /tmp/cc8lpfL1.s:684    .text.init_cat:00000000000000e4 $d
     /tmp/cc8lpfL1.s:690    .text.advance_to_previous_label:0000000000000000 $t
     /tmp/cc8lpfL1.s:697    .text.advance_to_previous_label:0000000000000000 advance_to_previous_label
     /tmp/cc8lpfL1.s:782    .text.advance_to_previous_label:000000000000004c $d
     /tmp/cc8lpfL1.s:787    .text.check_confirm.part.0:0000000000000000 $t
     /tmp/cc8lpfL1.s:794    .text.check_confirm.part.0:0000000000000000 check_confirm.part.0
     /tmp/cc8lpfL1.s:848    .text.check_confirm.part.0:0000000000000028 $d
                            *COM*:0000000000000004 NonProgrammable
     /tmp/cc8lpfL1.s:855    .text.init_arg.part.0:0000000000000000 $t
     /tmp/cc8lpfL1.s:862    .text.init_arg.part.0:0000000000000000 init_arg.part.0
     /tmp/cc8lpfL1.s:904    .text.init_arg.part.0:0000000000000024 $d
     /tmp/cc8lpfL1.s:909    .text.reset_arg:0000000000000000 $t
     /tmp/cc8lpfL1.s:916    .text.reset_arg:0000000000000000 reset_arg
     /tmp/cc8lpfL1.s:960    .text.reset_arg:0000000000000018 $d
     /tmp/cc8lpfL1.s:965    .text.arg_eval:0000000000000000 $t
     /tmp/cc8lpfL1.s:972    .text.arg_eval:0000000000000000 arg_eval
     /tmp/cc8lpfL1.s:1117   .text.arg_eval:0000000000000090 $d
     /tmp/cc8lpfL1.s:1124   .text.arg_digit:0000000000000000 $t
     /tmp/cc8lpfL1.s:1131   .text.arg_digit:0000000000000000 arg_digit
     /tmp/cc8lpfL1.s:1392   .text.arg_digit:00000000000000fc $d
     /tmp/cc8lpfL1.s:1400   .text.process_arg_shuffle:0000000000000000 $t
     /tmp/cc8lpfL1.s:1407   .text.process_arg_shuffle:0000000000000000 process_arg_shuffle
     /tmp/cc8lpfL1.s:1465   .text.process_arg_shuffle:000000000000002c $d
     /tmp/cc8lpfL1.s:1470   .text.process_h_shifted:0000000000000000 $t
     /tmp/cc8lpfL1.s:1477   .text.process_h_shifted:0000000000000000 process_h_shifted
     /tmp/cc8lpfL1.s:1725   .text.process_h_shifted:00000000000000c8 $d
     /tmp/cc8lpfL1.s:1733   .text.intltr:0000000000000000 $t
     /tmp/cc8lpfL1.s:1740   .text.intltr:0000000000000000 intltr
     /tmp/cc8lpfL1.s:1803   .text.intltr:0000000000000030 $d
     /tmp/cc8lpfL1.s:1809   .text.process_normal:0000000000000000 $t
     /tmp/cc8lpfL1.s:1816   .text.process_normal:0000000000000000 process_normal
     /tmp/cc8lpfL1.s:1877   .text.process_normal:0000000000000022 $d
     /tmp/cc8lpfL1.s:1923   .text.process_normal:000000000000007e $t
     /tmp/cc8lpfL1.s:1972   .text.process_normal:00000000000000ac $d
     /tmp/cc8lpfL1.s:1991   .text.process_normal:00000000000000f8 $t
     /tmp/cc8lpfL1.s:2002   .text.process_normal:0000000000000104 $d
     /tmp/cc8lpfL1.s:2045   .text.process_normal:00000000000001b0 $t
     /tmp/cc8lpfL1.s:2246   .text.process_normal:0000000000000264 $d
     /tmp/cc8lpfL1.s:2255   .text.process_fg_shifted:0000000000000000 $t
     /tmp/cc8lpfL1.s:2262   .text.process_fg_shifted:0000000000000000 process_fg_shifted
     /tmp/cc8lpfL1.s:2390   .text.process_fg_shifted:000000000000003e $d
     /tmp/cc8lpfL1.s:2589   .text.process_fg_shifted:000000000000010c $d
ARM GAS  /tmp/cc8lpfL1.s 			page 415


     /tmp/cc8lpfL1.s:2630   .text.process_fg_shifted:00000000000001b0 $t
     /tmp/cc8lpfL1.s:2826   .text.process_fg_shifted:0000000000000294 $d
     /tmp/cc8lpfL1.s:2835   .text.set_window:0000000000000000 $t
     /tmp/cc8lpfL1.s:2842   .text.set_window:0000000000000000 set_window
     /tmp/cc8lpfL1.s:2989   .text.set_window:000000000000008c $d
     /tmp/cc8lpfL1.s:2996   .text.arg_storcl:0000000000000000 $t
     /tmp/cc8lpfL1.s:3003   .text.arg_storcl:0000000000000000 arg_storcl
     /tmp/cc8lpfL1.s:3119   .text.arg_storcl:0000000000000040 $d
     /tmp/cc8lpfL1.s:3124   .text.process_arg:0000000000000000 $t
     /tmp/cc8lpfL1.s:3131   .text.process_arg:0000000000000000 process_arg
     /tmp/cc8lpfL1.s:3337   .text.process_arg:000000000000008a $d
     /tmp/cc8lpfL1.s:3341   .text.process_arg:0000000000000090 $t
     /tmp/cc8lpfL1.s:3430   .text.process_arg:00000000000000f0 $d
     /tmp/cc8lpfL1.s:3477   .text.process_arg:00000000000001a8 $t
     /tmp/cc8lpfL1.s:3880   .text.process_arg:000000000000032c $d
     /tmp/cc8lpfL1.s:3889   .text.process_arg:0000000000000340 $t
     /tmp/cc8lpfL1.s:4380   .text.process_arg:000000000000054c $d
     /tmp/cc8lpfL1.s:4385   .text.cur_shift:0000000000000000 $t
     /tmp/cc8lpfL1.s:4393   .text.cur_shift:0000000000000000 cur_shift
     /tmp/cc8lpfL1.s:4421   .text.cur_shift:0000000000000010 $d
     /tmp/cc8lpfL1.s:4426   .text.reset_shift:0000000000000000 $t
     /tmp/cc8lpfL1.s:4434   .text.reset_shift:0000000000000000 reset_shift
     /tmp/cc8lpfL1.s:4492   .text.reset_shift:0000000000000014 $d
     /tmp/cc8lpfL1.s:4497   .text.keycode_to_row_column:0000000000000000 $t
     /tmp/cc8lpfL1.s:4505   .text.keycode_to_row_column:0000000000000000 keycode_to_row_column
     /tmp/cc8lpfL1.s:4533   .text.keycode_to_row_column:0000000000000020 $d
     /tmp/cc8lpfL1.s:4538   .text.row_column_to_keycode:0000000000000000 $t
     /tmp/cc8lpfL1.s:4546   .text.row_column_to_keycode:0000000000000000 row_column_to_keycode
     /tmp/cc8lpfL1.s:4604   .text.row_column_to_keycode:000000000000003c $d
     /tmp/cc8lpfL1.s:4609   .text.keycode_to_digit_or_register:0000000000000000 $t
     /tmp/cc8lpfL1.s:4617   .text.keycode_to_digit_or_register:0000000000000000 keycode_to_digit_or_register
     /tmp/cc8lpfL1.s:4653   .text.keycode_to_digit_or_register:000000000000000c $d
     /tmp/cc8lpfL1.s:4659   .text.init_state:0000000000000000 $t
     /tmp/cc8lpfL1.s:4667   .text.init_state:0000000000000000 init_state
     /tmp/cc8lpfL1.s:4783   .text.init_state:0000000000000074 $d
     /tmp/cc8lpfL1.s:4790   .text.process_cmplx:0000000000000000 $t
     /tmp/cc8lpfL1.s:4797   .text.process_cmplx:0000000000000000 process_cmplx
     /tmp/cc8lpfL1.s:5153   .text.process_cmplx:00000000000000c4 $d
     /tmp/cc8lpfL1.s:5160   .text.soft_init_state:0000000000000000 $t
     /tmp/cc8lpfL1.s:5168   .text.soft_init_state:0000000000000000 soft_init_state
     /tmp/cc8lpfL1.s:5263   .text.soft_init_state:0000000000000048 $d
     /tmp/cc8lpfL1.s:5269   .text.finish_cpx_entry:0000000000000000 $t
     /tmp/cc8lpfL1.s:5277   .text.finish_cpx_entry:0000000000000000 finish_cpx_entry
     /tmp/cc8lpfL1.s:5443   .text.finish_cpx_entry:00000000000000bc $d
     /tmp/cc8lpfL1.s:5450   .text.stack_begin:0000000000000000 $t
     /tmp/cc8lpfL1.s:5458   .text.stack_begin:0000000000000000 stack_begin
     /tmp/cc8lpfL1.s:5598   .text.stack_begin:00000000000000b4 $d
     /tmp/cc8lpfL1.s:5604   .text.current_catalogue_max:0000000000000000 $t
     /tmp/cc8lpfL1.s:5612   .text.current_catalogue_max:0000000000000000 current_catalogue_max
     /tmp/cc8lpfL1.s:5633   .text.current_catalogue_max:000000000000000c $d
     /tmp/cc8lpfL1.s:5639   .text.current_catalogue:0000000000000000 $t
     /tmp/cc8lpfL1.s:5647   .text.current_catalogue:0000000000000000 current_catalogue
     /tmp/cc8lpfL1.s:5903   .text.current_catalogue:00000000000000c8 $d
     /tmp/cc8lpfL1.s:5913   .text.process_catalogue:0000000000000000 $t
     /tmp/cc8lpfL1.s:5920   .text.process_catalogue:0000000000000000 process_catalogue
     /tmp/cc8lpfL1.s:6249   .text.process_catalogue:00000000000000fe $d
     /tmp/cc8lpfL1.s:6281   .text.process_catalogue:000000000000011e $t
ARM GAS  /tmp/cc8lpfL1.s 			page 416


     /tmp/cc8lpfL1.s:6789   .text.process_catalogue:00000000000002dc $d
     /tmp/cc8lpfL1.s:6810   .text.process_catalogue:00000000000002fc $t
     /tmp/cc8lpfL1.s:6840   .text.find_pos:0000000000000000 $t
     /tmp/cc8lpfL1.s:6848   .text.find_pos:0000000000000000 find_pos
     /tmp/cc8lpfL1.s:7021   .text.find_pos:0000000000000080 $d
     /tmp/cc8lpfL1.s:7027   .text.get_alpha_state:0000000000000000 $t
     /tmp/cc8lpfL1.s:7035   .text.get_alpha_state:0000000000000000 get_alpha_state
     /tmp/cc8lpfL1.s:7067   .text.get_alpha_state:0000000000000020 $d
     /tmp/cc8lpfL1.s:7073   .rodata.process_keycode.str1.4:0000000000000000 $d
     /tmp/cc8lpfL1.s:7083   .text.process_keycode:0000000000000000 $t
     /tmp/cc8lpfL1.s:7091   .text.process_keycode:0000000000000000 process_keycode
     /tmp/cc8lpfL1.s:7707   .text.process_keycode:00000000000002dc $d
                            *COM*:0000000000000004 OpCode
                            *COM*:0000000000000004 GoFast
                            *COM*:0000000000000004 OpCodeDisplayPending
                            *COM*:0000000000000004 WasDataEntry
     /tmp/cc8lpfL1.s:7727   .text.process_keycode:000000000000031c $t
     /tmp/cc8lpfL1.s:7928   .text.process_keycode:00000000000003ec $d
     /tmp/cc8lpfL1.s:7937   .text.process_keycode:0000000000000410 $t
     /tmp/cc8lpfL1.s:8434   .text.process_keycode:000000000000062c $d
                            *COM*:0000000000000004 nd_opcode
     /tmp/cc8lpfL1.s:8451   .text.process_keycode:0000000000000664 $t
     /tmp/cc8lpfL1.s:8532   .text.process_keycode:00000000000006ac $d
     /tmp/cc8lpfL1.s:8559   .text.process_keycode:00000000000006c6 $t
     /tmp/cc8lpfL1.s:8649   .text.process_keycode:0000000000000720 $d
     /tmp/cc8lpfL1.s:8653   .text.process_keycode:0000000000000730 $t
     /tmp/cc8lpfL1.s:9244   .text.process_keycode:0000000000000968 $d
     /tmp/cc8lpfL1.s:9266   .text.process_keycode:0000000000000998 $t
     /tmp/cc8lpfL1.s:9732   .text.process_keycode:0000000000000b38 $d
     /tmp/cc8lpfL1.s:9762   .text.process_keycode:0000000000000bb0 $t
     /tmp/cc8lpfL1.s:10126  .text.process_keycode:0000000000000ce4 $d
     /tmp/cc8lpfL1.s:10146  .text.process_keycode:0000000000000d04 $t
     /tmp/cc8lpfL1.s:10498  .text.process_keycode:0000000000000e28 $d
     /tmp/cc8lpfL1.s:10534  .text.process_keycode:0000000000000eb4 $t
     /tmp/cc8lpfL1.s:10762  .text.process_keycode:0000000000000f90 $d
     /tmp/cc8lpfL1.s:10782  .text.process_keycode:0000000000000fe0 $t
     /tmp/cc8lpfL1.s:10891  .text.process_keycode:000000000000104c $d
     /tmp/cc8lpfL1.s:10916  .text.process_keycode:000000000000105c $t
     /tmp/cc8lpfL1.s:11051  .text.process_keycode:00000000000010c0 $d
     /tmp/cc8lpfL1.s:11069  .text.process_keycode:0000000000001108 $t
     /tmp/cc8lpfL1.s:11577  .text.process_keycode:00000000000012b6 $d
     /tmp/cc8lpfL1.s:11612  .text.process_keycode:00000000000012fa $t
     /tmp/cc8lpfL1.s:11648  .text.process_keycode:0000000000001318 $d
     /tmp/cc8lpfL1.s:11665  .text.process_keycode:0000000000001334 $t
     /tmp/cc8lpfL1.s:11714  .text.process_keycode:000000000000135c $d
     /tmp/cc8lpfL1.s:11749  .text.process_keycode:00000000000013e4 $t
     /tmp/cc8lpfL1.s:12136  .text.process_keycode:00000000000015a0 $d
     /tmp/cc8lpfL1.s:12179  .text.process_keycode:00000000000015f4 $t
     /tmp/cc8lpfL1.s:12295  .text.process_keycode:0000000000001664 $d
     /tmp/cc8lpfL1.s:12305  .text.process_keycode:0000000000001670 $t
     /tmp/cc8lpfL1.s:12730  .text.process_keycode:0000000000001820 $d
     /tmp/cc8lpfL1.s:12756  .text.process_keycode:0000000000001888 $t
     /tmp/cc8lpfL1.s:13517  .text.process_keycode:0000000000001ae0 $d
     /tmp/cc8lpfL1.s:13532  .text.process_keycode:0000000000001aec $t
     /tmp/cc8lpfL1.s:14419  .text.process_keycode:0000000000001de8 $d
     /tmp/cc8lpfL1.s:14428  .text.process_keycode_with_shift:0000000000000000 $t
     /tmp/cc8lpfL1.s:14436  .text.process_keycode_with_shift:0000000000000000 process_keycode_with_shift
ARM GAS  /tmp/cc8lpfL1.s 			page 417


     /tmp/cc8lpfL1.s:14644  .text.process_keycode_with_shift:000000000000008c $d
     /tmp/cc8lpfL1.s:14661  .bss.was_paused.9876:0000000000000000 $d
     /tmp/cc8lpfL1.s:14665  .bss.was_paused.9876:0000000000000000 was_paused.9876
     /tmp/cc8lpfL1.s:14668  .rodata.alpha_arrows:0000000000000000 $d
     /tmp/cc8lpfL1.s:14671  .rodata.alpha_arrows:0000000000000000 alpha_arrows
     /tmp/cc8lpfL1.s:14674  .rodata.alpha_catalogue:0000000000000000 $d
     /tmp/cc8lpfL1.s:14677  .rodata.alpha_catalogue:0000000000000000 alpha_catalogue
     /tmp/cc8lpfL1.s:14681  .rodata.alpha_compares:0000000000000000 $d
     /tmp/cc8lpfL1.s:14684  .rodata.alpha_compares:0000000000000000 alpha_compares
     /tmp/cc8lpfL1.s:14687  .rodata.alpha_letters:0000000000000000 $d
     /tmp/cc8lpfL1.s:14691  .rodata.alpha_letters:0000000000000000 alpha_letters
     /tmp/cc8lpfL1.s:14697  .rodata.alpha_letters_lower:0000000000000000 $d
     /tmp/cc8lpfL1.s:14701  .rodata.alpha_letters_lower:0000000000000000 alpha_letters_lower
     /tmp/cc8lpfL1.s:14707  .rodata.alpha_subscripts:0000000000000000 $d
     /tmp/cc8lpfL1.s:14710  .rodata.alpha_subscripts:0000000000000000 alpha_subscripts
     /tmp/cc8lpfL1.s:14714  .rodata.alpha_symbols:0000000000000000 $d
     /tmp/cc8lpfL1.s:14717  .rodata.alpha_symbols:0000000000000000 alpha_symbols
     /tmp/cc8lpfL1.s:14720  .rodata.alphamap.9360:0000000000000000 $d
     /tmp/cc8lpfL1.s:14724  .rodata.alphamap.9360:0000000000000000 alphamap.9360
     /tmp/cc8lpfL1.s:14764  .rodata.amap.9351:0000000000000000 $d
     /tmp/cc8lpfL1.s:14768  .rodata.amap.9351:0000000000000000 amap.9351
     /tmp/cc8lpfL1.s:14786  .rodata.catalogue:0000000000000000 $d
     /tmp/cc8lpfL1.s:14789  .rodata.catalogue:0000000000000000 catalogue
     /tmp/cc8lpfL1.s:14799  .rodata.catalogue_sizes.9674:0000000000000000 $d
     /tmp/cc8lpfL1.s:14803  .rodata.catalogue_sizes.9674:0000000000000000 catalogue_sizes.9674
     /tmp/cc8lpfL1.s:14806  .rodata.catalogues.9682:0000000000000000 $d
     /tmp/cc8lpfL1.s:14810  .rodata.catalogues.9682:0000000000000000 catalogues.9682
     /tmp/cc8lpfL1.s:14895  .rodata.cplx_catalogue:0000000000000000 cplx_catalogue
     /tmp/cc8lpfL1.s:15350  .rodata.stats_catalogue:0000000000000000 stats_catalogue
     /tmp/cc8lpfL1.s:15310  .rodata.prob_catalogue:0000000000000000 prob_catalogue
     /tmp/cc8lpfL1.s:14913  .rodata.int_catalogue:0000000000000000 int_catalogue
     /tmp/cc8lpfL1.s:15319  .rodata.prog_catalogue:0000000000000000 prog_catalogue
     /tmp/cc8lpfL1.s:15329  .rodata.program_xfcn:0000000000000000 program_xfcn
     /tmp/cc8lpfL1.s:15363  .rodata.test_catalogue:0000000000000000 test_catalogue
     /tmp/cc8lpfL1.s:14959  .rodata.mode_catalogue:0000000000000000 mode_catalogue
     /tmp/cc8lpfL1.s:15357  .rodata.sums_catalogue:0000000000000000 sums_catalogue
     /tmp/cc8lpfL1.s:14952  .rodata.matrix_catalogue:0000000000000000 matrix_catalogue
     /tmp/cc8lpfL1.s:14833  .rodata.cmap.9350:0000000000000000 $d
     /tmp/cc8lpfL1.s:14837  .rodata.cmap.9350:0000000000000000 cmap.9350
     /tmp/cc8lpfL1.s:14863  .rodata.conv_catalogue:0000000000000000 $d
     /tmp/cc8lpfL1.s:14867  .rodata.conv_catalogue:0000000000000000 conv_catalogue
     /tmp/cc8lpfL1.s:14874  .rodata.conv_mapping.9721:0000000000000000 $d
     /tmp/cc8lpfL1.s:14878  .rodata.conv_mapping.9721:0000000000000000 conv_mapping.9721
     /tmp/cc8lpfL1.s:14892  .rodata.cplx_catalogue:0000000000000000 $d
     /tmp/cc8lpfL1.s:14900  .rodata.disp.9532:0000000000000000 $d
     /tmp/cc8lpfL1.s:14904  .rodata.disp.9532:0000000000000000 disp.9532
     /tmp/cc8lpfL1.s:14910  .rodata.int_catalogue:0000000000000000 $d
     /tmp/cc8lpfL1.s:14919  .rodata.linear_key_map.9316:0000000000000000 $d
     /tmp/cc8lpfL1.s:14923  .rodata.linear_key_map.9316:0000000000000000 linear_key_map.9316
     /tmp/cc8lpfL1.s:14929  .rodata.linear_key_map.9320:0000000000000000 $d
     /tmp/cc8lpfL1.s:14933  .rodata.linear_key_map.9320:0000000000000000 linear_key_map.9320
     /tmp/cc8lpfL1.s:14939  .rodata.map.9332:0000000000000000 $d
     /tmp/cc8lpfL1.s:14943  .rodata.map.9332:0000000000000000 map.9332
     /tmp/cc8lpfL1.s:14949  .rodata.matrix_catalogue:0000000000000000 $d
     /tmp/cc8lpfL1.s:14956  .rodata.mode_catalogue:0000000000000000 $d
     /tmp/cc8lpfL1.s:14965  .rodata.op_map.9404:0000000000000000 $d
     /tmp/cc8lpfL1.s:14969  .rodata.op_map.9404:0000000000000000 op_map.9404
ARM GAS  /tmp/cc8lpfL1.s 			page 418


     /tmp/cc8lpfL1.s:15006  .rodata.op_map.9427:0000000000000000 $d
     /tmp/cc8lpfL1.s:15010  .rodata.op_map.9427:0000000000000000 op_map.9427
     /tmp/cc8lpfL1.s:15082  .rodata.op_map.9450:0000000000000000 $d
     /tmp/cc8lpfL1.s:15086  .rodata.op_map.9450:0000000000000000 op_map.9450
     /tmp/cc8lpfL1.s:15123  .rodata.op_map.9505:0000000000000000 $d
     /tmp/cc8lpfL1.s:15127  .rodata.op_map.9505:0000000000000000 op_map.9505
     /tmp/cc8lpfL1.s:15269  .rodata.op_map.9517:0000000000000000 $d
     /tmp/cc8lpfL1.s:15273  .rodata.op_map.9517:0000000000000000 op_map.9517
     /tmp/cc8lpfL1.s:15278  .rodata.op_map.9531:0000000000000000 $d
     /tmp/cc8lpfL1.s:15282  .rodata.op_map.9531:0000000000000000 op_map.9531
     /tmp/cc8lpfL1.s:15290  .rodata.op_map2.9428:0000000000000000 $d
     /tmp/cc8lpfL1.s:15294  .rodata.op_map2.9428:0000000000000000 op_map2.9428
     /tmp/cc8lpfL1.s:15300  .rodata.opcode_breaks:0000000000000000 $d
     /tmp/cc8lpfL1.s:15304  .rodata.opcode_breaks:0000000000000000 opcode_breaks
     /tmp/cc8lpfL1.s:15307  .rodata.prob_catalogue:0000000000000000 $d
     /tmp/cc8lpfL1.s:15316  .rodata.prog_catalogue:0000000000000000 $d
     /tmp/cc8lpfL1.s:15326  .rodata.program_xfcn:0000000000000000 $d
     /tmp/cc8lpfL1.s:15340  .rodata.smap.9352:0000000000000000 $d
     /tmp/cc8lpfL1.s:15344  .rodata.smap.9352:0000000000000000 smap.9352
     /tmp/cc8lpfL1.s:15347  .rodata.stats_catalogue:0000000000000000 $d
     /tmp/cc8lpfL1.s:15354  .rodata.sums_catalogue:0000000000000000 $d
     /tmp/cc8lpfL1.s:15360  .rodata.test_catalogue:0000000000000000 $d
     /tmp/cc8lpfL1.s:2431   .text.process_fg_shifted:0000000000000067 $d
     /tmp/cc8lpfL1.s:2431   .text.process_fg_shifted:0000000000000068 $t

UNDEFINED SYMBOLS
sizeLIB
main_ram
StateWhileOn
find_label_from
getprog
do_inc
PcWrapped
process_cmdline
shift_down
do_dec
is_bad_cmdline
error_message
argcmds
get_dispmode_digs
num_arg_digits
local_regs_rarg
global_regs_rarg
process_cmdline_set_lift
update_program_bounds
set_pc
int_base
set_menu
display_current_menu
display
is_dblmode
IntMaxWindow
xset
set_lift
ShowRegister
get_reg_n
swap_reg
ARM GAS  /tmp/cc8lpfL1.s 			page 419


copyreg
op_p2r
RectPolConv
lift
zero_X
zero_Y
remap_chars
catcmd
keyticks
xeq_init_contexts
is_dot
xeq
xeqprog
dot
Pause
JustStopped
Running
ShowRPN
JustDisplayed
DispMsg
xeq_xrom
stoprog
is_key_pressed
set_running_off
xeq_sst_bst
clr_dot
finish_RPN
message
find_char
delprog
prt
scopy_char
clpall
clrprog
reset
clrall
TraceBuffer
set_last_menu
find_user_pc
cmdgtocommon
global_regs
drop
local_regs
convert_regK
alen

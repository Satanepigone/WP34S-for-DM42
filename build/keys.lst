ARM GAS  /tmp/cc8xFAqJ.s 			page 1


   1              		.arch armv7e-m
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"keys.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.gtodot_digit,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	gtodot_digit:
  27              	.LVL0:
  28              	.LFB30:
  29              		.file 1 "src/keys.c"
   1:src/keys.c    **** /* This file is part of 34S.
   2:src/keys.c    ****  * 
   3:src/keys.c    ****  * 34S is free software: you can redistribute it and/or modify
   4:src/keys.c    ****  * it under the terms of the GNU General Public License as published by
   5:src/keys.c    ****  * the Free Software Foundation, either version 3 of the License, or
   6:src/keys.c    ****  * (at your option) any later version.
   7:src/keys.c    ****  * 
   8:src/keys.c    ****  * 34S is distributed in the hope that it will be useful,
   9:src/keys.c    ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:src/keys.c    ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:src/keys.c    ****  * GNU General Public License for more details.
  12:src/keys.c    ****  * 
  13:src/keys.c    ****  * You should have received a copy of the GNU General Public License
  14:src/keys.c    ****  * along with 34S.  If not, see <http://www.gnu.org/licenses/>.
  15:src/keys.c    ****  */
  16:src/keys.c    **** 
  17:src/keys.c    **** 
  18:src/keys.c    **** #ifdef DM42
  19:src/keys.c    **** #include "dmcp.h"
  20:src/keys.c    **** #endif
  21:src/keys.c    **** 
  22:src/keys.c    **** #define DM42SAFE
  23:src/keys.c    **** 
  24:src/keys.c    **** #include "features.h"
  25:src/keys.c    **** #include "xeq.h"
  26:src/keys.c    **** #include "keys.h"
  27:src/keys.c    **** #include "display.h"
  28:src/keys.c    **** #include "lcd.h"
  29:src/keys.c    **** #include "int.h"
ARM GAS  /tmp/cc8xFAqJ.s 			page 2


  30:src/keys.c    **** #include "consts.h"
  31:src/keys.c    **** #include "storage.h"
  32:src/keys.c    **** #include "stats.h"
  33:src/keys.c    **** #include "catalogues.h"
  34:src/keys.c    **** #ifndef DM42
  35:src/keys.c    **** #include "printer.h"
  36:src/keys.c    **** #endif
  37:src/keys.c    **** #ifdef INCLUDE_C_LOCK
  38:src/keys.c    **** #include "decn.h"
  39:src/keys.c    **** #endif
  40:src/keys.c    **** #undef DM42SAFE
  41:src/keys.c    **** 
  42:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
  43:src/keys.c    **** extern void changed_catalog_state();
  44:src/keys.c    **** #endif
  45:src/keys.c    **** 
  46:src/keys.c    **** #ifdef INCLUDE_C_LOCK
  47:src/keys.c    **** void finish_cpx_entry ( int );
  48:src/keys.c    **** void stack_begin ( int ); 
  49:src/keys.c    **** static int process_cmplx ( const keycode );
  50:src/keys.c    **** static void stack_restore ( void );
  51:src/keys.c    **** #endif
  52:src/keys.c    **** 
  53:src/keys.c    **** #define STATE_UNFINISHED	(OP_SPEC | OP_UNFINISHED)
  54:src/keys.c    **** #define STATE_BACKSPACE		(OP_SPEC | OP_BACKSPACE)
  55:src/keys.c    **** #define STATE_SST		(OP_SPEC | OP_SST)
  56:src/keys.c    **** #define STATE_BST		(OP_SPEC | OP_BST)
  57:src/keys.c    **** #define STATE_RUNNING		(OP_SPEC | OP_RUNNING)
  58:src/keys.c    **** #define STATE_IGNORE		(OP_SPEC | OP_IGNORE)
  59:src/keys.c    **** #define STATE_WINDOWLEFT	(OP_SPEC | OP_WINDOWLEFT)
  60:src/keys.c    **** #define STATE_WINDOWRIGHT	(OP_SPEC | OP_WINDOWRIGHT)
  61:src/keys.c    **** //#define STATE_SHOW		(OP_SPEC | OP_SHOW)
  62:src/keys.c    **** 
  63:src/keys.c    **** /* Define this if the key codes map rows sequentially */
  64:src/keys.c    **** 
  65:src/keys.c    **** #define TEST_EQ		0
  66:src/keys.c    **** #define TEST_NE		1
  67:src/keys.c    **** #define TEST_LT		2
  68:src/keys.c    **** #define TEST_LE		3
  69:src/keys.c    **** #define TEST_GT		4
  70:src/keys.c    **** #define TEST_GE		5
  71:src/keys.c    **** 
  72:src/keys.c    **** enum confirmations {
  73:src/keys.c    **** 	// Apart from the first of these, these must be in the same
  74:src/keys.c    **** 	// order as the opcodes in xeq.h: OP_CLALL, OP_RESET, OP_CLPROG, OP_CLPALL
  75:src/keys.c    **** 	confirm_none=0, confirm_clall, confirm_reset, confirm_clprog, confirm_clpall
  76:src/keys.c    **** };
  77:src/keys.c    **** 
  78:src/keys.c    **** FLAG WasDataEntry;
  79:src/keys.c    **** 
  80:src/keys.c    **** /* Local data to this module */
  81:src/keys.c    **** unsigned int OpCode;
  82:src/keys.c    **** FLAG OpCodeDisplayPending;
  83:src/keys.c    **** FLAG GoFast;
  84:src/keys.c    **** FLAG NonProgrammable;
  85:src/keys.c    **** 
  86:src/keys.c    **** /*
ARM GAS  /tmp/cc8xFAqJ.s 			page 3


  87:src/keys.c    ****  *  Needed before definition
  88:src/keys.c    ****  */ 
  89:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end);
  90:src/keys.c    **** 
  91:src/keys.c    **** unsigned int nd_opcode;
  92:src/keys.c    **** 
  93:src/keys.c    **** /*
  94:src/keys.c    ****  *  Return the shift state
  95:src/keys.c    ****  */
  96:src/keys.c    **** enum shifts cur_shift(void) {
  97:src/keys.c    **** 	enum shifts s = shift_down();
  98:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
  99:src/keys.c    **** }
 100:src/keys.c    **** 
 101:src/keys.c    **** /*
 102:src/keys.c    ****  *  Set new shift state, return previous state
 103:src/keys.c    ****  */
 104:src/keys.c    **** static enum shifts set_shift(enum shifts shift) {
 105:src/keys.c    **** 	enum shifts r = cur_shift();
 106:src/keys.c    **** 	State2.shifts = shift;
 107:src/keys.c    **** 	//	State2.alpha_pos = 0;
 108:src/keys.c    **** 	return r;
 109:src/keys.c    **** }
 110:src/keys.c    **** 
 111:src/keys.c    **** /*
 112:src/keys.c    ****  *  Clear shift state and return previous state
 113:src/keys.c    ****  */
 114:src/keys.c    **** enum shifts reset_shift(void) {
 115:src/keys.c    **** 	return set_shift(SHIFT_N);
 116:src/keys.c    **** }
 117:src/keys.c    **** 
 118:src/keys.c    **** /*
 119:src/keys.c    ****  *  Toggle shift state
 120:src/keys.c    ****  */
 121:src/keys.c    **** static void toggle_shift(enum shifts shift) {
 122:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 123:src/keys.c    **** }
 124:src/keys.c    **** 
 125:src/keys.c    **** 
 126:src/keys.c    **** /*
 127:src/keys.c    ****  * Mapping from the key code to a linear index
 128:src/keys.c    ****  * The trick is to move the shifts and the holes in the map out of the way
 129:src/keys.c    ****  */
 130:src/keys.c    **** #ifdef DM42
 131:src/keys.c    **** static int keycode_to_linear_for_alpha(const keycode c)
 132:src/keys.c    **** {
 133:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 134:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 135:src/keys.c    **** 		 6,  7,  8,  9, 10, 11,   // K10 - K15
 136:src/keys.c    **** 		 12, 13, 14, 15, 16,  0,   // K20 - K24
 137:src/keys.c    **** 		17, 18, 19, 20, 21,  0,   // K30 - K34
 138:src/keys.c    **** 		22, 23, 24, 25, 26,  0,   // K40 - K44
 139:src/keys.c    **** 		27, 28, 29, 30, 31,  0,   // K50 - K54
 140:src/keys.c    **** 		32, 33, 34, 35, 36,       // K60 - K64
 141:src/keys.c    **** 		37, 37, 37, 37, 37, 37       // K_F, G, H, ARROW, CMPLX, NOP
 142:src/keys.c    **** 	};
 143:src/keys.c    **** 	return linear_key_map[c];
ARM GAS  /tmp/cc8xFAqJ.s 			page 4


 144:src/keys.c    **** }
 145:src/keys.c    **** 
 146:src/keys.c    **** static int keycode_to_linear(const keycode c)
 147:src/keys.c    **** {
 148:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 149:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 150:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 151:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 152:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 153:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 154:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 155:src/keys.c    **** 		29, 30, 31, 32, 33,       // K60 - K64
 156:src/keys.c    **** 		34, 34, 34,  4,  5, 34,        // K_F, G, H, ARROW, CMPLX, NOP
 157:src/keys.c    **** 	};
 158:src/keys.c    **** 	return linear_key_map[c];
 159:src/keys.c    **** }
 160:src/keys.c    **** #else
 161:src/keys.c    **** static int keycode_to_linear(const keycode c)
 162:src/keys.c    **** {
 163:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 ] = {
 164:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 165:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 166:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 167:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 168:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 169:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 170:src/keys.c    **** 		29, 30, 31, 32, 33        // K60 - K64
 171:src/keys.c    **** 	};
 172:src/keys.c    **** 	return linear_key_map[c];
 173:src/keys.c    **** }
 174:src/keys.c    **** #endif
 175:src/keys.c    **** /*
 176:src/keys.c    ****  * Mapping from the key code to a row column code ('A'=11 to '+'=75)
 177:src/keys.c    ****  * Used in KEY? and for shorthand addressing
 178:src/keys.c    ****  */
 179:src/keys.c    **** int keycode_to_row_column(const int c)
 180:src/keys.c    **** {
 181:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 182:src/keys.c    **** }
 183:src/keys.c    **** 
 184:src/keys.c    **** /*
 185:src/keys.c    ****  * Mapping from a row column code ('A'=11 to '+'=75) to the key code
 186:src/keys.c    ****  * Used in PUTK and KTYPE.
 187:src/keys.c    ****  */
 188:src/keys.c    **** 
 189:src/keys.c    **** int row_column_to_keycode(const int c)
 190:src/keys.c    **** {
 191:src/keys.c    **** 	int row = c / 10 - 1;
 192:src/keys.c    **** 	int col = c % 10 - 1;
 193:src/keys.c    **** 
 194:src/keys.c    **** 	if (row < 0 || row > 6 || col > 5 - (row >= 2))
 195:src/keys.c    **** 		return -1;
 196:src/keys.c    **** 	return row * 6 + col;
 197:src/keys.c    **** }
 198:src/keys.c    **** 
 199:src/keys.c    **** /*
 200:src/keys.c    ****  *  Mapping from a key code to a digit from 0 to 9 or to a register address
ARM GAS  /tmp/cc8xFAqJ.s 			page 5


 201:src/keys.c    ****  *  Bit seven is set if the key cannot be used as a label shortcut
 202:src/keys.c    ****  */
 203:src/keys.c    **** // Decision to make here about whether the top row can be used as shortcuts.
 204:src/keys.c    **** // Also, which other keys can / can't be used as shortcuts?
 205:src/keys.c    **** // Registers I, j, K, L will move with the new alpha layout.
 206:src/keys.c    **** 
 207:src/keys.c    **** #define NO_REG 0x7f
 208:src/keys.c    **** #define NO_SHORT 0x80
 209:src/keys.c    **** #ifdef DM42
 210:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 211:src/keys.c    **** {
 212:src/keys.c    ****   static const unsigned char map[] = {
 213:src/keys.c    ****     // K00 - K05
 214:src/keys.c    ****     NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 215:src/keys.c    ****     NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 216:src/keys.c    ****     NO_SHORT | NO_REG,   NO_REG,
 217:src/keys.c    ****     // K10 - K15
 218:src/keys.c    ****     NO_REG, NO_REG, regI_idx, regJ_idx, regK_idx, regL_idx, 
 219:src/keys.c    ****     // K20 - K24
 220:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 221:src/keys.c    ****     // K30 - K34
 222:src/keys.c    ****     NO_REG, 7, 8, 9, NO_REG,
 223:src/keys.c    ****     // K40 - K44
 224:src/keys.c    ****     NO_REG, NO_SHORT | regT_idx, 5, 6, NO_REG,
 225:src/keys.c    ****     // K50 - K54
 226:src/keys.c    ****     NO_REG, NO_SHORT | regX_idx, NO_SHORT | regY_idx, NO_SHORT | regZ_idx, NO_REG,
 227:src/keys.c    ****     // K60 - K64
 228:src/keys.c    ****     NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE, NO_REG, NO_REG,
 229:src/keys.c    ****     // Shifts etc. - K_F, K_G, K_H, K_ARROW, K_CMPLX. K_NOP
 230:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 231:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, 
 232:src/keys.c    ****   };
 233:src/keys.c    **** 
 234:src/keys.c    ****   return (unsigned int) map[keycode_to_linear_for_alpha(c)];
 235:src/keys.c    **** }
 236:src/keys.c    **** #else
 237:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 238:src/keys.c    **** {
 239:src/keys.c    ****   static const unsigned char map[] = {
 240:src/keys.c    **** 		// K00 - K05
 241:src/keys.c    **** 		NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 242:src/keys.c    **** 		NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 243:src/keys.c    **** 		NO_SHORT | NO_REG,   NO_REG,
 244:src/keys.c    **** 		// K10 - K12
 245:src/keys.c    **** 		NO_REG, NO_REG, regI_idx, 
 246:src/keys.c    **** 		// K20 - K24
 247:src/keys.c    **** 		NO_SHORT | NO_REG, regJ_idx, regK_idx, regL_idx, NO_SHORT | NO_REG,
 248:src/keys.c    **** 		// K30 - K34
 249:src/keys.c    **** 		NO_REG, 7, 8, 9, NO_REG,
 250:src/keys.c    **** 		// K40 - K44
 251:src/keys.c    **** 		NO_REG, 4, 5, 6, regT_idx,
 252:src/keys.c    **** 		// K50 - K54
 253:src/keys.c    **** 		NO_REG, 1, 2, 3, NO_REG,
 254:src/keys.c    **** 		// K60 - K63
 255:src/keys.c    **** 		NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE,
 256:src/keys.c    **** 		regY_idx, regZ_idx,
 257:src/keys.c    **** 		// Shifts, etc
ARM GAS  /tmp/cc8xFAqJ.s 			page 6


 258:src/keys.c    **** 		NO_REG
 259:src/keys.c    **** 	};
 260:src/keys.c    **** 
 261:src/keys.c    **** 	return (unsigned int) map[keycode_to_linear(c)];
 262:src/keys.c    **** }
 263:src/keys.c    **** #endif
 264:src/keys.c    **** /*
 265:src/keys.c    ****  *  Mapping of a keycode and shift state to a catalogue number
 266:src/keys.c    ****  */
 267:src/keys.c    **** static enum catalogues keycode_to_cat(const keycode c, enum shifts shift)
 268:src/keys.c    **** {
 269:src/keys.c    ****   enum catalogues cat = CATALOGUE_NONE;
 270:src/keys.c    ****   int i, col, max;
 271:src/keys.c    ****   const struct _map {
 272:src/keys.c    ****     unsigned char key, cat[3];
 273:src/keys.c    ****   } *cp;
 274:src/keys.c    **** 
 275:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 276:src/keys.c    **** 	if (C_LOCKED) { // Limited set of catalogues available in complex lock mode - all listed here
 277:src/keys.c    **** 		if (shift == SHIFT_H) {
 278:src/keys.c    **** 			switch (c) {
 279:src/keys.c    **** 				case K53:
 280:src/keys.c    **** 					return CATALOGUE_COMPLEX;
 281:src/keys.c    **** 				case K04:
 282:src/keys.c    **** 					return CATALOGUE_CONV;
 283:src/keys.c    **** 				case K05:
 284:src/keys.c    **** 					return CATALOGUE_MODE;
 285:src/keys.c    **** 				case K20:
 286:src/keys.c    **** 					if ( (REAL_FLAG || IMAG_FLAG) ) { // number being entered
 287:src/keys.c    **** 						finish_cpx_entry(1);
 288:src/keys.c    **** 					}
 289:src/keys.c    **** 					return CATALOGUE_COMPLEX_CONST;
 290:src/keys.c    **** 				default:
 291:src/keys.c    **** 					return CATALOGUE_NONE;
 292:src/keys.c    **** 			}
 293:src/keys.c    **** 		}
 294:src/keys.c    **** 		if ( (shift == SHIFT_G) && (c == K60) )
 295:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 296:src/keys.c    **** 		if ( (shift == SHIFT_F) && (c == K20) ) {
 297:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 298:src/keys.c    **** 				SET_REAL;
 299:src/keys.c    **** 				stack_begin (1);
 300:src/keys.c    **** 			}
 301:src/keys.c    **** 			else if (CmdLineLength) {
 302:src/keys.c    **** 				CmdLineLength = 0;
 303:src/keys.c    **** 				CmdLineEex = 0;
 304:src/keys.c    **** 				CmdLineDot = 0;
 305:src/keys.c    **** 			}
 306:src/keys.c    **** 			return CATALOGUE_CONST;
 307:src/keys.c    **** 		}
 308:src/keys.c    **** 		return CATALOGUE_NONE;
 309:src/keys.c    **** 	}
 310:src/keys.c    **** #endif
 311:src/keys.c    ****   // Common to both alpha mode and normal mode is the programming X.FCN catalogue
 312:src/keys.c    ****   if (c == K53 && shift == SHIFT_H && ! State2.runmode && ! State2.cmplx && ! State2.multi)
 313:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 314:src/keys.c    **** 
ARM GAS  /tmp/cc8xFAqJ.s 			page 7


 315:src/keys.c    ****   if (! State2.alphas && ! State2.multi) {
 316:src/keys.c    ****     /*
 317:src/keys.c    ****      *  Normal processing - Not alpha mode
 318:src/keys.c    ****      */
 319:src/keys.c    ****     static const struct _map cmap[] = {
 320:src/keys.c    **** #ifdef DM42
 321:src/keys.c    ****       { K04, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 322:src/keys.c    **** #else
 323:src/keys.c    ****       { K_ARROW, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 324:src/keys.c    **** #endif
 325:src/keys.c    ****       { K05,     { CATALOGUE_MODE,      CATALOGUE_MODE,      CATALOGUE_MODE          } },
 326:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
 327:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_USER          } },
 328:src/keys.c    **** #else
 329:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_LABELS        } },
 330:src/keys.c    **** #endif
 331:src/keys.c    ****       { K20,     { CATALOGUE_CONST,     CATALOGUE_NONE,      CATALOGUE_COMPLEX_CONST } },
 332:src/keys.c    ****       { K41,     { CATALOGUE_PROB,      CATALOGUE_NONE,      CATALOGUE_PROB          } },
 333:src/keys.c    ****       { K42,     { CATALOGUE_STATS,     CATALOGUE_NONE,      CATALOGUE_STATS         } },
 334:src/keys.c    ****       { K43,     { CATALOGUE_SUMS,      CATALOGUE_NONE,      CATALOGUE_SUMS          } },
 335:src/keys.c    ****       { K44,     { CATALOGUE_MATRIX,    CATALOGUE_NONE,      CATALOGUE_MATRIX        } },
 336:src/keys.c    ****       { K50,     { CATALOGUE_STATUS,    CATALOGUE_STATUS,    CATALOGUE_STATUS        } },
 337:src/keys.c    ****       { K51,     { CATALOGUE_TEST,      CATALOGUE_TEST,      CATALOGUE_TEST          } },
 338:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
 339:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_INTERNAL      } },
 340:src/keys.c    **** #else
 341:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_PROG          } },
 342:src/keys.c    **** #endif
 343:src/keys.c    ****       { K53,     { CATALOGUE_NORMAL,    CATALOGUE_INT,       CATALOGUE_COMPLEX       } },
 344:src/keys.c    ****     };
 345:src/keys.c    **** 
 346:src/keys.c    ****     if (c == K60 && shift == SHIFT_G) {
 347:src/keys.c    ****       /*
 348:src/keys.c    ****        *  SHOW starts register browser
 349:src/keys.c    ****        */
 350:src/keys.c    ****       return CATALOGUE_REGISTERS;
 351:src/keys.c    ****     }
 352:src/keys.c    **** #if 0
 353:src/keys.c    ****     // conflicts with c# 002 and c# 003
 354:src/keys.c    ****     if ((c == K52 || c == K53) && shift == SHIFT_N && State2.cmplx && State2.catalogue == CATALOGUE
 355:src/keys.c    ****       /*
 356:src/keys.c    ****        *  Shorthand to complex P.FCN & X.FCN - h may be omitted
 357:src/keys.c    ****        */
 358:src/keys.c    ****       shift = SHIFT_H;
 359:src/keys.c    ****     }
 360:src/keys.c    **** #endif
 361:src/keys.c    ****     if (shift != SHIFT_H) {
 362:src/keys.c    ****       /*
 363:src/keys.c    ****        *  All standard catalogues are on h-shifted keys
 364:src/keys.c    ****        */
 365:src/keys.c    ****       return CATALOGUE_NONE;
 366:src/keys.c    ****     }
 367:src/keys.c    **** 
 368:src/keys.c    ****     /*
 369:src/keys.c    ****      *  Prepare search
 370:src/keys.c    ****      */
 371:src/keys.c    ****     cp = cmap;
ARM GAS  /tmp/cc8xFAqJ.s 			page 8


 372:src/keys.c    **** #ifndef WINGUI
 373:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx || shift_down() == SHIFT_H ? 2 : 0;
 374:src/keys.c    **** #else
 375:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx ? 2 : 0;
 376:src/keys.c    **** #endif
 377:src/keys.c    ****     max = sizeof(cmap) / sizeof(cmap[0]);
 378:src/keys.c    ****   }
 379:src/keys.c    ****   else {
 380:src/keys.c    ****     /*
 381:src/keys.c    ****      *  All the alpha catalogues go here
 382:src/keys.c    ****      */
 383:src/keys.c    **** #ifdef DM42
 384:src/keys.c    ****     static const struct _map amap[] = {
 385:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 386:src/keys.c    ****       { K05, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 387:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 388:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 389:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 390:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 391:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 392:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 393:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 394:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 395:src/keys.c    ****     };
 396:src/keys.c    **** #else
 397:src/keys.c    ****     static const struct _map amap[] = {
 398:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 399:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 400:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 401:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 402:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 403:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 404:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 405:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 406:src/keys.c    ****     };
 407:src/keys.c    **** #endif
 408:src/keys.c    ****     static const char smap[] = { 0, 1, 0, 2 }; // Map shifts to columns;
 409:src/keys.c    **** 
 410:src/keys.c    ****     /*
 411:src/keys.c    ****      *  Prepare search
 412:src/keys.c    ****      */
 413:src/keys.c    ****     cp = amap;
 414:src/keys.c    ****     col = smap[shift];
 415:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 416:src/keys.c    ****   }
 417:src/keys.c    **** 
 418:src/keys.c    ****   /*
 419:src/keys.c    ****    *  Search the key in one of the tables
 420:src/keys.c    ****    */
 421:src/keys.c    ****   for (i = 0; i < max; ++i, ++cp) {
 422:src/keys.c    ****     if (cp->key == c) {
 423:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 424:src/keys.c    ****       break;
 425:src/keys.c    ****     }
 426:src/keys.c    ****   }
 427:src/keys.c    ****   if (State2.multi && (cat < CATALOGUE_ALPHA_SYMBOLS || cat > CATALOGUE_ALPHA_SUBSCRIPTS)) {
 428:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
ARM GAS  /tmp/cc8xFAqJ.s 			page 9


 429:src/keys.c    ****     cat = CATALOGUE_NONE;
 430:src/keys.c    ****   }
 431:src/keys.c    ****   return cat;
 432:src/keys.c    **** }
 433:src/keys.c    **** 
 434:src/keys.c    **** #ifdef DM42
 435:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 436:src/keys.c    **** {
 437:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 438:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 439:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 440:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 441:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 442:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 443:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 444:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 445:src/keys.c    **** 
 446:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 447:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 448:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 449:src/keys.c    **** 		{ 'J',  0257, 0000, 0000, 'j',  0000,  },  // K13
 450:src/keys.c    **** 		{ 'K',  0000, 'K',  0000, 'k',  0251,  },  // K14
 451:src/keys.c    **** 		{ 'L',  0000, 0212, 0000, 'l',  0252,  },  // K15
 452:src/keys.c    **** 
 453:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 454:src/keys.c    **** 		{ 'M',  0000, 0253, 0027, 'm',  0253,  },  // K21
 455:src/keys.c    **** 		{ 'N',  0010, 'N',  0225, 'n',  0254,  },  // K22
 456:src/keys.c    **** 		{ 'O',  0000, 0227, 0257, 'o',  0267,  },  // K23
 457:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 458:src/keys.c    **** 
 459:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 460:src/keys.c    **** 		{ 'P',  '7',  0217, '&',  'p',  0257,  },  // K31
 461:src/keys.c    **** 		{ 'Q',  '8',  0000, '|',  'q',  0000,  },  // K32
 462:src/keys.c    **** 		{ 'R',  '9',  'R',  0013, 'r',  0260,  },  // K33
 463:src/keys.c    **** 		{ 'S',  '/',  0221, '\\', 's',  0261,  },  // K34
 464:src/keys.c    **** 
 465:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 466:src/keys.c    **** 		{ 'T',  '4',  'T',  0000, 't',  0262,  },  // K41
 467:src/keys.c    **** 		{ 'U',  '5',  0000, 0000, 'u',  0000,  },  // K42
 468:src/keys.c    **** 		{ 'V',  '6',  0000, 0000, 'v',  0000,  },  // K43
 469:src/keys.c    **** 		{ 'W', 0034,  0000, 0000, 'w',  0000,  },  // K44
 470:src/keys.c    **** 
 471:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 472:src/keys.c    **** 		{ 'X',  '1',  0215, 0000, 'x',  0255,  },  // K51
 473:src/keys.c    **** 		{ 'Y',  '2',  'Y',  0000, 'y',  0263,  },  // K52
 474:src/keys.c    **** 		{ 'Z',  '3',  'Z',  0000, 'z',  0245,  },  // K53
 475:src/keys.c    **** 		{ '-',  '(',  ')',  0000, 0000, 0000,  },  // K54
 476:src/keys.c    **** 
 477:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K60
 478:src/keys.c    **** 		{ ':',  '0',  0207, ' ',  ';',  0247,  },  // K61
 479:src/keys.c    **** 		{ '.',  '.',  0226, 0000, '.',  0266,  },  // K62
 480:src/keys.c    **** 		{ '?',  0000, 0041, 0000, '?',  0000,  },  // K63
 481:src/keys.c    **** 		{ ' ',  '+',  '=',  0000, ' ',  ' ',   },  // K64
 482:src/keys.c    **** 
 483:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // shifts etc.
 484:src/keys.c    **** 	};
 485:src/keys.c    **** 	if (State2.alphashift) {
ARM GAS  /tmp/cc8xFAqJ.s 			page 10


 486:src/keys.c    **** 		if (shift == SHIFT_N)
 487:src/keys.c    **** 			shift = SHIFT_LC_N;
 488:src/keys.c    **** 		else if (shift == SHIFT_G)
 489:src/keys.c    **** 			shift = SHIFT_LC_G;
 490:src/keys.c    **** 	}
 491:src/keys.c    **** 	return alphamap[keycode_to_linear_for_alpha(c)][shift];
 492:src/keys.c    **** }
 493:src/keys.c    **** #else
 494:src/keys.c    **** /*
 495:src/keys.c    ****  * Mapping from key position to alpha in the four key planes plus
 496:src/keys.c    ****  * the two lower case planes.
 497:src/keys.c    ****  */
 498:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 499:src/keys.c    **** {
 500:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 501:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 502:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 503:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 504:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 505:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 506:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 507:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 508:src/keys.c    **** 
 509:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 510:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 511:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 512:src/keys.c    **** 
 513:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 514:src/keys.c    **** 		{ 'J',  '(',  ')',  0027, 'j',  ')',   },  // K21
 515:src/keys.c    **** 		{ 'K',  0010, 'K',  0225, 'k',  0251,  },  // K22
 516:src/keys.c    **** 		{ 'L',  0000, 0212, 0257, 'l',  0252,  },  // K23
 517:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 518:src/keys.c    **** 
 519:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 520:src/keys.c    **** 		{ 'M',  '7',  'M',  '&',  'm',  0253,  },  // K31
 521:src/keys.c    **** 		{ 'N',  '8',  'N',  '|',  'n',  0254,  },  // K32
 522:src/keys.c    **** 		{ 'O',  '9',  0227, 0013, 'o',  0267,  },  // K33
 523:src/keys.c    **** 		{ 'P',  '/',  0217, '\\', 'p',  0257,  },  // K34
 524:src/keys.c    **** 
 525:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 526:src/keys.c    **** 		{ 'Q',  '4',  0000, 0000, 'q',  0000,  },  // K41
 527:src/keys.c    **** 		{ 'R',  '5',  'R',  0000, 'r',  0260,  },  // K42
 528:src/keys.c    **** 		{ 'S',  '6',  0221, 0000, 's',  0261,  },  // K43
 529:src/keys.c    **** 		{ 'T',  0034, 'T',  0000, 't',  0262,  },  // K44
 530:src/keys.c    **** 
 531:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 532:src/keys.c    **** 		{ '1',  '1',  0207, 0000, '1',  0247,  },  // K51
 533:src/keys.c    **** 		{ 'U',  '2',  0000, 0000, 'u',  0000,  },  // K52
 534:src/keys.c    **** 		{ 'V',  '3',  0000, 0000, 'v',  0000,  },  // K53
 535:src/keys.c    **** 		{ 'W',  0034, 0000, 0000, 'w',  0000,  },  // K54
 536:src/keys.c    **** 
 537:src/keys.c    **** 		{ 0000, 0222, 0000, 0000, 0000, 0000,  },  // K60
 538:src/keys.c    **** 		{ '0',  '0',  0226, ' ',  '0',  0266,  },  // K61
 539:src/keys.c    **** 		{ 'X',  '.',  0215, 0000, 'x',  0255,  },  // K62
 540:src/keys.c    **** 		{ 'Y',  0000, 'Y',  0000, 'y',  0263,  },  // K63
 541:src/keys.c    **** 		{ 'Z',  '+',  'Z',  0000, 'z',  0245,  },  // K64
 542:src/keys.c    **** 	};
ARM GAS  /tmp/cc8xFAqJ.s 			page 11


 543:src/keys.c    **** 	if (State2.alphashift) {
 544:src/keys.c    **** 		if (shift == SHIFT_N)
 545:src/keys.c    **** 			shift = SHIFT_LC_N;
 546:src/keys.c    **** 		else if (shift == SHIFT_G)
 547:src/keys.c    **** 			shift = SHIFT_LC_G;
 548:src/keys.c    **** 	}
 549:src/keys.c    **** 	return alphamap[keycode_to_linear(c)][shift];
 550:src/keys.c    **** }
 551:src/keys.c    **** #endif
 552:src/keys.c    **** static void init_arg(const enum rarg base) {
 553:src/keys.c    **** 	if (is_bad_cmdline())
 554:src/keys.c    **** 		return;
 555:src/keys.c    **** 	CmdBase = base;
 556:src/keys.c    **** 	State2.ind = 0;
 557:src/keys.c    **** 	State2.digval = 0;
 558:src/keys.c    **** 	State2.numdigit = 0;
 559:src/keys.c    **** 	State2.rarg = 1;
 560:src/keys.c    **** 	State2.dot = 0;
 561:src/keys.c    **** 	State2.local = 0;
 562:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 563:src/keys.c    **** }
 564:src/keys.c    **** 
 565:src/keys.c    **** static void init_cat(enum catalogues cat) {
 566:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 567:src/keys.c    **** 		// Save last catalogue for a later restore
 568:src/keys.c    **** 		State.last_cat = State2.catalogue;
 569:src/keys.c    **** 		CmdLineLength = 0;
 570:src/keys.c    **** 	}
 571:src/keys.c    **** 	process_cmdline();
 572:src/keys.c    **** 
 573:src/keys.c    **** 	State2.labellist = 0;
 574:src/keys.c    **** 	State2.registerlist = 0;
 575:src/keys.c    **** 	State2.status = 0;
 576:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 577:src/keys.c    **** 
 578:src/keys.c    **** 	switch (cat) {
 579:src/keys.c    **** 	case CATALOGUE_LABELS:
 580:src/keys.c    **** 		// Label browser
 581:src/keys.c    **** 		State2.labellist = 1;
 582:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 583:src/keys.c    **** 		break;
 584:src/keys.c    **** 	
 585:src/keys.c    **** 	case CATALOGUE_REGISTERS:
 586:src/keys.c    **** 		// Register browser
 587:src/keys.c    **** 		State2.registerlist = 1;
 588:src/keys.c    **** 		State2.digval = regX_idx;
 589:src/keys.c    **** 		State2.digval2 = 0;
 590:src/keys.c    **** 		break;
 591:src/keys.c    **** 
 592:src/keys.c    **** 	case CATALOGUE_STATUS:
 593:src/keys.c    **** 		// Flag browser
 594:src/keys.c    **** 		State2.status = 1;
 595:src/keys.c    **** 		break;
 596:src/keys.c    **** 
 597:src/keys.c    **** 	default:
 598:src/keys.c    **** 		// Normal catalogue
 599:src/keys.c    **** 		State2.catalogue = cat;
ARM GAS  /tmp/cc8xFAqJ.s 			page 12


 600:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 601:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 602:src/keys.c    **** 			// Different catalogue, reset position
 603:src/keys.c    **** 			State.catpos = 0;
 604:src/keys.c    **** 		}
 605:src/keys.c    **** 	}
 606:src/keys.c    **** 	reset_shift();
 607:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 608:src/keys.c    **** 	changed_catalog_state();
 609:src/keys.c    **** #endif
 610:src/keys.c    **** }
 611:src/keys.c    **** 
 612:src/keys.c    **** /*
 613:src/keys.c    ****  *  Reset the internal state to a sane default
 614:src/keys.c    ****  */
 615:src/keys.c    **** void init_state(void) {
 616:src/keys.c    **** #ifndef REALBUILD
 617:src/keys.c    **** 	unsigned int a = State2.flags;
 618:src/keys.c    **** 	unsigned int b = State2.trace;
 619:src/keys.c    **** #else
 620:src/keys.c    **** 	FLAG t = TestFlag;
 621:src/keys.c    **** #endif
 622:src/keys.c    **** 	int v = Voltage;
 623:src/keys.c    **** 	int k = LastKey;
 624:src/keys.c    **** 
 625:src/keys.c    **** 	CmdBase = 0;
 626:src/keys.c    **** 	// Removed: will clear any locals on power off
 627:src/keys.c    **** 	// clrretstk(0);
 628:src/keys.c    **** 
 629:src/keys.c    **** 	xset(&State2, 0, sizeof(State2));
 630:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 631:src/keys.c    **** 
 632:src/keys.c    **** #ifdef DEFAULT_TO_SSIZE8 							//JM3
 633:src/keys.c    **** 	INIT_8; 								//JM3
 634:src/keys.c    **** 	UState.stack_depth = 1; // set stack size to 8 	//JM3
 635:src/keys.c    **** #endif  									//JM3
 636:src/keys.c    **** 
 637:src/keys.c    **** 
 638:src/keys.c    **** #ifdef DEFAULT_DATE_YMD			//JM5
 639:src/keys.c    **** 	UState.date_mode = 1;		//JM5
 640:src/keys.c    **** #endif							//JM5
 641:src/keys.c    **** 
 642:src/keys.c    **** #ifdef DEFAULT_DATE_MDY			//JM5
 643:src/keys.c    **** 	UState.date_mode = 2;		//JM5
 644:src/keys.c    **** #endif							//JM5
 645:src/keys.c    **** 
 646:src/keys.c    **** #ifdef YREG_ON_BY_DEFAULT
 647:src/keys.c    **** 	UState.show_y = 1;
 648:src/keys.c    **** #endif
 649:src/keys.c    **** 
 650:src/keys.c    **** #ifdef DEFAULT_TO_J
 651:src/keys.c    **** 	SET_CPX_J;
 652:src/keys.c    **** #endif
 653:src/keys.c    **** 
 654:src/keys.c    **** #ifdef DEFAULT_TO_CPX_YES
 655:src/keys.c    **** 	cpx_nop(OP_CYES);
 656:src/keys.c    **** #endif
ARM GAS  /tmp/cc8xFAqJ.s 			page 13


 657:src/keys.c    **** 
 658:src/keys.c    **** #ifdef DEFAULT_TO_C_LOCK
 659:src/keys.c    **** 	cpx_nop(OP_CYES);
 660:src/keys.c    **** 	cpx_nop(OP_C_ON);
 661:src/keys.c    **** #endif
 662:src/keys.c    **** #endif
 663:src/keys.c    **** 
 664:src/keys.c    **** 	State2.test = TST_NONE;
 665:src/keys.c    **** 	State2.runmode = 1;
 666:src/keys.c    **** 	update_program_bounds(1);
 667:src/keys.c    **** 	set_lift();
 668:src/keys.c    **** 
 669:src/keys.c    **** 	// Restore stuff that has been moved to State2 for space reasons
 670:src/keys.c    **** 	// but must not be cleared.
 671:src/keys.c    **** 	Voltage = v;
 672:src/keys.c    **** 	LastKey = k;
 673:src/keys.c    **** #ifndef REALBUILD
 674:src/keys.c    **** 	State2.trace = b;
 675:src/keys.c    **** 	State2.flags = a;
 676:src/keys.c    **** #else
 677:src/keys.c    **** 	TestFlag = t;
 678:src/keys.c    **** #endif
 679:src/keys.c    **** 	ShowRegister = regX_idx;
 680:src/keys.c    **** }
 681:src/keys.c    **** 
 682:src/keys.c    **** void soft_init_state(void) {
 683:src/keys.c    **** 	int soft;
 684:src/keys.c    **** 	unsigned int runmode;
 685:src/keys.c    **** 	unsigned int alphas;
 686:src/keys.c    **** 
 687:src/keys.c    **** 	if (CmdLineLength) {
 688:src/keys.c    **** 		CmdLineLength = 0;
 689:src/keys.c    **** 		CmdLineEex = 0;
 690:src/keys.c    **** 		CmdLineDot = 0;
 691:src/keys.c    **** 		return;
 692:src/keys.c    **** 	}
 693:src/keys.c    **** 	soft = State2.multi || State2.rarg || State2.hyp || State2.gtodot || State2.labellist ||
 694:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 695:src/keys.c    **** 	runmode = State2.runmode;
 696:src/keys.c    **** 	alphas = State2.alphas;
 697:src/keys.c    **** 	init_state();
 698:src/keys.c    **** 	if (soft) {
 699:src/keys.c    **** 		State2.runmode = runmode;
 700:src/keys.c    **** 		State2.alphas = alphas;
 701:src/keys.c    **** 	}
 702:src/keys.c    **** }
 703:src/keys.c    **** 
 704:src/keys.c    **** static int check_confirm(int op) {
 705:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 706:src/keys.c    **** 		const int nilop = argKIND(op);
 707:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 708:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 709:src/keys.c    **** 			return STATE_UNFINISHED;
 710:src/keys.c    **** 		}
 711:src/keys.c    **** #ifndef DM42		
 712:src/keys.c    **** 		if ((nilop >= OP_RECV && nilop <= OP_PSTO)
 713:src/keys.c    **** #endif
ARM GAS  /tmp/cc8xFAqJ.s 			page 14


 714:src/keys.c    **** #ifdef DM42
 715:src/keys.c    **** 		    if ((nilop >= OP_SAVE && nilop <= OP_PSTO) // no recv in DM42
 716:src/keys.c    **** #endif
 717:src/keys.c    **** #ifdef INFRARED
 718:src/keys.c    **** 			|| nilop == OP_PRINT_PGM
 719:src/keys.c    **** #endif
 720:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
 721:src/keys.c    **** 			|| nilop == OP_STOPWATCH
 722:src/keys.c    **** #endif
 723:src/keys.c    **** 		) {
 724:src/keys.c    **** 			// These commands are not programmable
 725:src/keys.c    **** 			NonProgrammable = 1;
 726:src/keys.c    **** 		}
 727:src/keys.c    **** 	}
 728:src/keys.c    **** 	return op;
 729:src/keys.c    **** }
 730:src/keys.c    **** 
 731:src/keys.c    **** static void set_smode(const enum single_disp d) {
 732:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 733:src/keys.c    **** }
 734:src/keys.c    **** 
 735:src/keys.c    **** static int check_f_key(int n, const int dflt) {
 736:src/keys.c    **** 	const int code = 100 + n;
 737:src/keys.c    **** 	unsigned int pc = state_pc();
 738:src/keys.c    **** 
 739:src/keys.c    **** 	if (State2.runmode) {
 740:src/keys.c    **** 		if (isXROM(pc))
 741:src/keys.c    **** 			pc = 1;
 742:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 743:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 744:src/keys.c    **** 	}
 745:src/keys.c    **** 	return dflt;
 746:src/keys.c    **** }
 747:src/keys.c    **** 
 748:src/keys.c    **** /* Return non-zero if the current mode is integer and we accept letters
 749:src/keys.c    ****  * as digits.
 750:src/keys.c    ****  */
 751:src/keys.c    **** static int intltr(int d) {
 752:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 753:src/keys.c    **** }
 754:src/keys.c    **** 
 755:src/keys.c    **** /*
 756:src/keys.c    ****  *  Process a key code in the unshifted mode.
 757:src/keys.c    ****  */
 758:src/keys.c    **** static int process_normal(const keycode c)
 759:src/keys.c    **** {
 760:src/keys.c    **** 	static const unsigned short int op_map[] = {
 761:src/keys.c    **** 		// Row 1
 762:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS, // A to D
 763:src/keys.c    **** 		OP_MON  | OP_RECIP,
 764:src/keys.c    **** 		OP_DYA  | OP_POW,
 765:src/keys.c    **** 		OP_MON  | OP_SQRT,
 766:src/keys.c    **** 		OP_SPEC | OP_E,		// ->
 767:src/keys.c    **** 		OP_SPEC | OP_F,		// CPX
 768:src/keys.c    **** 		// Row 2
 769:src/keys.c    **** 		RARG_STO,
 770:src/keys.c    **** 		RARG_RCL,
ARM GAS  /tmp/cc8xFAqJ.s 			page 15


 771:src/keys.c    **** 		OP_NIL  | OP_RDOWN,
 772:src/keys.c    **** 		// Row 3
 773:src/keys.c    **** 		OP_SPEC | OP_ENTER,
 774:src/keys.c    **** 		RARG(RARG_SWAPX, regY_idx),
 775:src/keys.c    **** 		OP_SPEC | OP_CHS,	// CHS
 776:src/keys.c    **** 		OP_SPEC | OP_EEX,	// EEX
 777:src/keys.c    **** 		OP_SPEC | OP_CLX,	// <-
 778:src/keys.c    **** 		// Row 4
 779:src/keys.c    **** 		RARG_XEQ,
 780:src/keys.c    **** 		OP_SPEC | OP_7,
 781:src/keys.c    **** 		OP_SPEC | OP_8,
 782:src/keys.c    **** 		OP_SPEC | OP_9,
 783:src/keys.c    **** 		OP_DYA  | OP_DIV,
 784:src/keys.c    **** 		// Row 5
 785:src/keys.c    **** 		STATE_BST,
 786:src/keys.c    **** 		OP_SPEC | OP_4,
 787:src/keys.c    **** 		OP_SPEC | OP_5,
 788:src/keys.c    **** 		OP_SPEC | OP_6,
 789:src/keys.c    **** 		OP_DYA  | OP_MUL,
 790:src/keys.c    **** 		// Row 6
 791:src/keys.c    **** 		STATE_SST,		// SST
 792:src/keys.c    **** 		OP_SPEC | OP_1,
 793:src/keys.c    **** 		OP_SPEC | OP_2,
 794:src/keys.c    **** 		OP_SPEC | OP_3,
 795:src/keys.c    **** 		OP_DYA  | OP_SUB,
 796:src/keys.c    **** 		// Row 7
 797:src/keys.c    **** 		STATE_UNFINISHED,	// ON/C
 798:src/keys.c    **** 		OP_SPEC | OP_0,
 799:src/keys.c    **** 		OP_SPEC | OP_DOT,
 800:src/keys.c    **** 		OP_NIL  | OP_RS,	// R/S
 801:src/keys.c    **** 		OP_DYA  | OP_ADD,
 802:src/keys.c    **** #ifdef DM42
 803:src/keys.c    **** 		OP_NIL  | OP_NOP,  // shifts etc.
 804:src/keys.c    **** #endif
 805:src/keys.c    **** 	};
 806:src/keys.c    **** 
 807:src/keys.c    **** 	int lc = keycode_to_linear(c);
 808:src/keys.c    **** 	int op = op_map[lc];
 809:src/keys.c    **** 	
 810:src/keys.c    **** 	// The switch handles all the special cases
 811:src/keys.c    **** #ifdef DM42
 812:src/keys.c    **** 	int op_int;
 813:src/keys.c    **** 	if (UState.intm) {
 814:src/keys.c    **** 	  switch (c) {
 815:src/keys.c    **** 	  case K00:
 816:src/keys.c    **** 	    op = OP_SPEC | OP_A;
 817:src/keys.c    **** 	    if (intltr(10)) {
 818:src/keys.c    **** 	      return op;
 819:src/keys.c    **** 	    }
 820:src/keys.c    **** 	    else {
 821:src/keys.c    **** 	      return check_f_key(0, op);
 822:src/keys.c    **** 	    }
 823:src/keys.c    **** 	  case K01:
 824:src/keys.c    **** 	    op = OP_SPEC | OP_B;
 825:src/keys.c    **** 	    if (intltr(11)) {
 826:src/keys.c    **** 	      return op;
 827:src/keys.c    **** 	    }
ARM GAS  /tmp/cc8xFAqJ.s 			page 16


 828:src/keys.c    **** 	    else {
 829:src/keys.c    **** 	      return check_f_key(1, op);
 830:src/keys.c    **** 	    }
 831:src/keys.c    **** 	  case K03:
 832:src/keys.c    **** 	    op_int = OP_SPEC | OP_C;
 833:src/keys.c    **** 	    if (intltr(12)) {
 834:src/keys.c    **** 	      return op_int;
 835:src/keys.c    **** 	    }
 836:src/keys.c    **** 	    else {
 837:src/keys.c    **** 	      return check_f_key(2, op);
 838:src/keys.c    **** 	    }
 839:src/keys.c    **** 	  case K30:
 840:src/keys.c    **** 	    op_int = OP_SPEC | OP_F;
 841:src/keys.c    **** 	    if (intltr(15)) {
 842:src/keys.c    **** 	      return op_int;
 843:src/keys.c    **** 	    }
 844:src/keys.c    **** 	  default:;
 845:src/keys.c    **** 	  }
 846:src/keys.c    **** 	}
 847:src/keys.c    **** #endif  
 848:src/keys.c    **** 
 849:src/keys.c    **** 	switch (c) {
 850:src/keys.c    **** #ifdef DM42
 851:src/keys.c    **** 	case K00:
 852:src/keys.c    **** 		return check_f_key(0, op);
 853:src/keys.c    **** 	case K01:
 854:src/keys.c    **** 		return check_f_key(1, op);
 855:src/keys.c    **** 	case K03:
 856:src/keys.c    **** 		return check_f_key(2, op);
 857:src/keys.c    **** #else
 858:src/keys.c    **** 	case K00:
 859:src/keys.c    **** 	case K01:
 860:src/keys.c    **** 		if (UState.intm)
 861:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 862:src/keys.c    **** 	case K02:
 863:src/keys.c    **** 	case K03:
 864:src/keys.c    **** 		if (intltr(lc + 10)) {
 865:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 866:src/keys.c    **** 			return op;
 867:src/keys.c    **** 		}
 868:src/keys.c    **** 		return check_f_key(lc, op);
 869:src/keys.c    **** #endif		
 870:src/keys.c    **** 	case K_ARROW:
 871:src/keys.c    **** #ifndef DM42
 872:src/keys.c    **** #ifdef INT_MODE_TEMPVIEW
 873:src/keys.c    **** 		if (intltr(14))
 874:src/keys.c    **** 			return op;
 875:src/keys.c    **** #else
 876:src/keys.c    **** 		if (UState.intm)
 877:src/keys.c    **** 			return op;
 878:src/keys.c    **** #endif
 879:src/keys.c    **** #endif		
 880:src/keys.c    **** 		if (is_bad_cmdline())
 881:src/keys.c    **** 			return STATE_UNFINISHED;
 882:src/keys.c    **** 		process_cmdline_set_lift();
 883:src/keys.c    **** 		State2.arrow = 1;
 884:src/keys.c    **** #ifdef DM42
ARM GAS  /tmp/cc8xFAqJ.s 			page 17


 885:src/keys.c    **** 		set_menu (9); // arrow menu
 886:src/keys.c    **** 		display_current_menu ();
 887:src/keys.c    **** 		lcd_refresh ();
 888:src/keys.c    **** #else
 889:src/keys.c    **** 		set_shift(SHIFT_G);
 890:src/keys.c    **** #endif
 891:src/keys.c    **** 		break;
 892:src/keys.c    **** 
 893:src/keys.c    **** 	case K_CMPLX:
 894:src/keys.c    **** #ifdef DM42
 895:src/keys.c    **** 	  if (UState.intm)
 896:src/keys.c    **** 	    break; // return nothing
 897:src/keys.c    **** 	  State2.cmplx = 1;
 898:src/keys.c    **** #else
 899:src/keys.c    **** 	  if (UState.intm)
 900:src/keys.c    **** 	    return op;
 901:src/keys.c    **** 	  State2.cmplx = 1;
 902:src/keys.c    **** #endif
 903:src/keys.c    **** 	  break;
 904:src/keys.c    **** 
 905:src/keys.c    **** 	case K24:				// <-
 906:src/keys.c    **** 		if (State2.disp_temp)
 907:src/keys.c    **** 			return STATE_UNFINISHED;
 908:src/keys.c    **** 		if (State2.runmode)
 909:src/keys.c    **** 			return op;
 910:src/keys.c    **** 		return STATE_BACKSPACE;
 911:src/keys.c    **** 
 912:src/keys.c    **** 	case K10:				// STO
 913:src/keys.c    **** 	case K11:				// RCL
 914:src/keys.c    **** 	case K30:				// XEQ
 915:src/keys.c    **** 		init_arg((enum rarg)op);
 916:src/keys.c    **** 		break;
 917:src/keys.c    **** 
 918:src/keys.c    **** 	default:
 919:src/keys.c    **** 		return op;			// Keys handled by table
 920:src/keys.c    **** 	}
 921:src/keys.c    **** 	return STATE_UNFINISHED;
 922:src/keys.c    **** }
 923:src/keys.c    **** 
 924:src/keys.c    **** 
 925:src/keys.c    **** /*
 926:src/keys.c    ****  *  Process a key code after f or g shift
 927:src/keys.c    ****  */
 928:src/keys.c    **** static int process_fg_shifted(const keycode c) {
 929:src/keys.c    **** 
 930:src/keys.c    **** #define NO_INT 0xf000
 931:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 932:src/keys.c    **** 		// Row 1
 933:src/keys.c    **** 		{ 1,                               0                           }, // HYP
 934:src/keys.c    **** 		{ OP_MON | OP_SIN      | NO_INT,   OP_MON | OP_ASIN   | NO_INT },
 935:src/keys.c    **** 		{ OP_MON | OP_COS      | NO_INT,   OP_MON | OP_ACOS   | NO_INT },
 936:src/keys.c    **** 		{ OP_MON | OP_TAN      | NO_INT,   OP_MON | OP_ATAN   | NO_INT },
 937:src/keys.c    **** 		{ OP_NIL | OP_P2R      | NO_INT,   OP_NIL | OP_R2P    | NO_INT },
 938:src/keys.c    **** 		{ OP_NIL | OP_FRACPROPER,	   OP_NIL | OP_FRACIMPROPER    }, // CPX
 939:src/keys.c    **** 		// Row 2
 940:src/keys.c    **** 		{ OP_NIL | OP_HMS,                 OP_NIL | OP_DEG    | NO_INT },
 941:src/keys.c    **** 		{ OP_NIL | OP_FLOAT,               OP_NIL | OP_RAD    | NO_INT },
ARM GAS  /tmp/cc8xFAqJ.s 			page 18


 942:src/keys.c    **** 		{ OP_NIL | OP_RANDOM,              OP_NIL | OP_GRAD   | NO_INT },
 943:src/keys.c    **** 		// Row 3
 944:src/keys.c    **** 		{ STATE_UNFINISHED,		   OP_NIL | OP_FILL            }, // ENTER
 945:src/keys.c    **** 		{ STATE_WINDOWLEFT,   		   STATE_WINDOWRIGHT   	       },
 946:src/keys.c    **** 		{ RARG(RARG_BASE, 2),		   RARG(RARG_BASE, 8)          },
 947:src/keys.c    **** 		{ RARG(RARG_BASE, 10),		   RARG(RARG_BASE, 16)         },
 948:src/keys.c    **** 		{ OP_NIL | OP_CLPROG,		   OP_NIL | OP_SIGMACLEAR      },
 949:src/keys.c    **** 		// Row 4
 950:src/keys.c    **** 		{ OP_MON | OP_EXP,                 OP_MON | OP_LN              },
 951:src/keys.c    **** 		{ OP_MON | OP_10POWX,		   OP_MON | OP_LOG             },
 952:src/keys.c    **** 		{ OP_MON | OP_2POWX,		   OP_MON | OP_LG2             },
 953:src/keys.c    **** 		{ OP_DYA | OP_POW,                 OP_DYA | OP_LOGXY           },
 954:src/keys.c    **** 		{ OP_MON | OP_RECIP    | NO_INT,   OP_DYA | OP_PARAL	       },
 955:src/keys.c    **** 		// Row 5
 956:src/keys.c    **** 		{ OP_DYA | OP_COMB,                OP_DYA | OP_PERM            },
 957:src/keys.c    **** 		{ OP_MON | OP_cdf_Q    | NO_INT,   OP_MON | OP_qf_Q   | NO_INT },
 958:src/keys.c    **** 		{ OP_NIL | OP_statMEAN | NO_INT,   OP_NIL | OP_statS  | NO_INT },
 959:src/keys.c    **** 		{ OP_MON | OP_yhat     | NO_INT,   OP_NIL | OP_statR  | NO_INT },
 960:src/keys.c    **** 		{ OP_MON | OP_SQRT,		   OP_MON | OP_SQR             },
 961:src/keys.c    **** 		// Row 6
 962:src/keys.c    **** 		{ RARG_SF,                         RARG_CF                     },
 963:src/keys.c    **** 		{ TST_EQ,                          TST_NE                      }, // tests
 964:src/keys.c    **** 		{ RARG_SOLVE           | NO_INT,   RARG_INTG          | NO_INT },
 965:src/keys.c    **** 		{ RARG_PROD            | NO_INT,   RARG_SUM           | NO_INT },
 966:src/keys.c    **** 		{ OP_MON | OP_PERCNT   | NO_INT,   OP_MON | OP_PERCHG | NO_INT },
 967:src/keys.c    **** 		// Row 7
 968:src/keys.c    **** #ifdef INFRARED
 969:src/keys.c    **** 		{ RARG(RARG_PRINT_REG,regX_idx),   STATE_UNFINISHED	       },
 970:src/keys.c    **** #else
 971:src/keys.c    **** 		{ STATE_UNFINISHED,		   STATE_UNFINISHED	       },
 972:src/keys.c    **** #endif
 973:src/keys.c    **** 		{ OP_MON | OP_ABS,		   OP_MON | OP_RND             },
 974:src/keys.c    **** 		{ OP_MON | OP_TRUNC,		   OP_MON | OP_FRAC            },
 975:src/keys.c    **** 		{ RARG_LBL,			   OP_NIL | OP_RTN             },
 976:src/keys.c    **** 		{ RARG_DSE,			   RARG_ISG                    },
 977:src/keys.c    **** #ifdef DM42
 978:src/keys.c    **** 		{ OP_NIL | OP_NOP,		   OP_NIL |OP_NOP              },
 979:src/keys.c    **** #endif
 980:src/keys.c    **** 	};
 981:src/keys.c    **** 
 982:src/keys.c    **** 	static const unsigned short int op_map2[] = {
 983:src/keys.c    **** 		STATE_UNFINISHED,
 984:src/keys.c    **** 		STATE_UNFINISHED,
 985:src/keys.c    **** 		OP_DYA  | OP_POW,
 986:src/keys.c    **** 		OP_MON  | OP_SQRT
 987:src/keys.c    **** 	};
 988:src/keys.c    **** 
 989:src/keys.c    **** 	enum shifts shift = reset_shift();
 990:src/keys.c    **** 	int lc = keycode_to_linear(c);
 991:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 992:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 993:src/keys.c    **** 	if (no_int)
 994:src/keys.c    **** 		op &= ~NO_INT;
 995:src/keys.c    **** 
 996:src/keys.c    **** 	switch (c) {
 997:src/keys.c    **** 	case K00:
 998:src/keys.c    **** 	  if (! UState.intm) {
ARM GAS  /tmp/cc8xFAqJ.s 			page 19


 999:src/keys.c    **** 	    State2.hyp = 1;
1000:src/keys.c    **** 	    State2.dot = op;
1001:src/keys.c    **** 	    // State2.cmplx = 0;
1002:src/keys.c    **** 	    return STATE_UNFINISHED;
1003:src/keys.c    **** 	  }
1004:src/keys.c    **** 	  // fall through
1005:src/keys.c    **** 	case K01:
1006:src/keys.c    **** #ifdef DM42
1007:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
1008:src/keys.c    **** 	    return check_f_key(lc, op_map2[lc]);
1009:src/keys.c    **** 	  }
1010:src/keys.c    **** 	  break;
1011:src/keys.c    **** #endif
1012:src/keys.c    **** #ifndef DM42
1013:src/keys.c    **** 	case K02:
1014:src/keys.c    **** #endif
1015:src/keys.c    **** 	case K03:
1016:src/keys.c    **** #ifdef DM42
1017:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
1018:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
1019:src/keys.c    **** 		}
1020:src/keys.c    **** 		break;
1021:src/keys.c    **** #else
1022:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
1023:src/keys.c    **** 			return check_f_key(2, op_map2[lc]);
1024:src/keys.c    **** 		}
1025:src/keys.c    **** 		break;
1026:src/keys.c    **** #endif
1027:src/keys.c    **** 	case K20:				// Alpha
1028:src/keys.c    **** 		if (shift == SHIFT_F) {
1029:src/keys.c    **** 			if (is_bad_cmdline())
1030:src/keys.c    **** 				return STATE_UNFINISHED;
1031:src/keys.c    **** 			process_cmdline_set_lift();
1032:src/keys.c    **** 			State2.alphas = 1;
1033:src/keys.c    **** #ifdef DM42
1034:src/keys.c    **** 			set_menu(16);
1035:src/keys.c    **** 			display_current_menu();
1036:src/keys.c    **** #endif
1037:src/keys.c    **** 		}
1038:src/keys.c    **** 		break;
1039:src/keys.c    **** #ifdef DM42
1040:src/keys.c    **** 	case K31:
1041:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(13)) {// Log - so D key
1042:src/keys.c    **** 	    return OP_SPEC | OP_D;
1043:src/keys.c    **** 	  }
1044:src/keys.c    **** 	  break;
1045:src/keys.c    **** 	case K30:
1046:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(14)) {// Ln - so E key
1047:src/keys.c    **** 	    return OP_SPEC | OP_E;
1048:src/keys.c    **** 	  }
1049:src/keys.c    **** 	  break;
1050:src/keys.c    **** #endif
1051:src/keys.c    **** 	case K51:
1052:src/keys.c    **** 		if (is_bad_cmdline())
1053:src/keys.c    **** 			return STATE_UNFINISHED;
1054:src/keys.c    **** 		process_cmdline_set_lift();
1055:src/keys.c    **** 		State2.test = op;
ARM GAS  /tmp/cc8xFAqJ.s 			page 20


1056:src/keys.c    **** 		return STATE_UNFINISHED;
1057:src/keys.c    **** 
1058:src/keys.c    **** 	case K50:
1059:src/keys.c    **** #ifndef REALBUILD
1060:src/keys.c    **** 		if (SHIFT_N != shift_down()) {
1061:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
1062:src/keys.c    **** 			return STATE_UNFINISHED;
1063:src/keys.c    **** 		}
1064:src/keys.c    **** #endif
1065:src/keys.c    **** 	case K52:
1066:src/keys.c    **** 	case K53:
1067:src/keys.c    **** 	case K63:
1068:src/keys.c    **** 	case K64:
1069:src/keys.c    **** 		if (op != (OP_NIL | OP_RTN)) {
1070:src/keys.c    **** 			if (! (no_int && UState.intm)) {
1071:src/keys.c    **** 				init_arg((enum rarg) op);
1072:src/keys.c    **** 			}
1073:src/keys.c    **** 			return STATE_UNFINISHED;
1074:src/keys.c    **** 		}
1075:src/keys.c    **** 		break;
1076:src/keys.c    **** 
1077:src/keys.c    **** 	default:
1078:src/keys.c    **** 		break;
1079:src/keys.c    **** 	}
1080:src/keys.c    **** 	if (no_int && UState.intm)
1081:src/keys.c    **** 		return STATE_UNFINISHED;
1082:src/keys.c    **** 
1083:src/keys.c    **** 	return check_confirm(op);
1084:src/keys.c    **** #undef NO_INT
1085:src/keys.c    **** }
1086:src/keys.c    **** 
1087:src/keys.c    **** /*
1088:src/keys.c    ****  *  Process a key code after h shift
1089:src/keys.c    ****  */
1090:src/keys.c    **** static int process_h_shifted(const keycode c) {
1091:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
1092:src/keys.c    **** #define NO_INT   0x4000
1093:src/keys.c    **** 	static const unsigned short int op_map[] = {
1094:src/keys.c    **** 		// Row 1
1095:src/keys.c    **** 		_RARG   | RARG_STD,
1096:src/keys.c    **** 		_RARG   | RARG_FIX,
1097:src/keys.c    **** 		_RARG   | RARG_SCI,
1098:src/keys.c    **** 		_RARG   | RARG_ENG,
1099:src/keys.c    **** 		STATE_UNFINISHED,	// CONV
1100:src/keys.c    **** 		STATE_UNFINISHED,	// MODE
1101:src/keys.c    **** 		// Row 2
1102:src/keys.c    **** 		STATE_UNFINISHED,	// CAT
1103:src/keys.c    **** 		_RARG   | RARG_VIEW,
1104:src/keys.c    **** 		OP_NIL  | OP_RUP,
1105:src/keys.c    **** 		// Row 3
1106:src/keys.c    **** 		_RARG	| RARG_INTNUM,	// CONST, will be emitted in integer mode only
1107:src/keys.c    **** 		_RARG   | RARG_SWAPX,
1108:src/keys.c    **** 		OP_MON  | OP_NOT,
1109:src/keys.c    **** 		CONST(OP_PI) | NO_INT,
1110:src/keys.c    **** 		OP_NIL  | OP_rCLX,
1111:src/keys.c    **** 		// Row 4
1112:src/keys.c    **** 		_RARG   | RARG_GTO,
ARM GAS  /tmp/cc8xFAqJ.s 			page 21


1113:src/keys.c    **** 		OP_DYA  | OP_LAND,
1114:src/keys.c    **** 		OP_DYA  | OP_LOR,
1115:src/keys.c    **** 		OP_DYA  | OP_LXOR,
1116:src/keys.c    **** 		OP_DYA  | OP_MOD,
1117:src/keys.c    **** 		// Row 5
1118:src/keys.c    **** 		OP_MON  | OP_FACT,
1119:src/keys.c    **** 		STATE_UNFINISHED,	// PROB
1120:src/keys.c    **** 		STATE_UNFINISHED,	// STAT
1121:src/keys.c    **** 		STATE_UNFINISHED,	// CFIT
1122:src/keys.c    **** 		STATE_UNFINISHED,	// MATRIX
1123:src/keys.c    **** 		// Row 6
1124:src/keys.c    **** 		STATE_UNFINISHED,	// STATUS
1125:src/keys.c    **** 		STATE_UNFINISHED,	// TEST
1126:src/keys.c    **** 		STATE_UNFINISHED,	// P.FCN
1127:src/keys.c    **** 		STATE_UNFINISHED,	// X.FCN
1128:src/keys.c    **** 		OP_SPEC | OP_SIGMAMINUS | NO_INT,
1129:src/keys.c    **** 		// Row 7
1130:src/keys.c    **** 		OP_NIL | OP_OFF,
1131:src/keys.c    **** 		_RARG   | RARG_PAUSE,
1132:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1133:src/keys.c    **** 		OP_NIL  | OP_THOUS_OFF,
1134:src/keys.c    **** #else
1135:src/keys.c    ****  		OP_NIL  | OP_RADCOM,
1136:src/keys.c    **** #endif
1137:src/keys.c    **** 		STATE_UNFINISHED,	// P/R
1138:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS | NO_INT,
1139:src/keys.c    **** #ifdef DM42
1140:src/keys.c    **** 		OP_NIL | OP_NOP,       // shifts etc.
1141:src/keys.c    **** #endif
1142:src/keys.c    **** 	};
1143:src/keys.c    **** 
1144:src/keys.c    **** 	int lc = keycode_to_linear(c);
1145:src/keys.c    **** 	int op = op_map[lc];
1146:src/keys.c    **** 	reset_shift();
1147:src/keys.c    **** 
1148:src/keys.c    **** 	// The switch handles all the special cases
1149:src/keys.c    **** 	switch (c) {
1150:src/keys.c    **** 	case K62:
1151:src/keys.c    **** 		if (UState.intm)
1152:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
1153:src/keys.c    **** 		else
1154:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1155:src/keys.c    **** 			if (UState.nothousands) op = OP_NIL | OP_THOUS_ON;
1156:src/keys.c    **** #else
1157:src/keys.c    **** 			if (UState.fraccomma) op = OP_NIL | OP_RADDOT;
1158:src/keys.c    **** #endif
1159:src/keys.c    **** 		break;
1160:src/keys.c    **** 
1161:src/keys.c    **** 	case K63:					// Program<->Run mode
1162:src/keys.c    **** 		if (is_bad_cmdline())
1163:src/keys.c    **** 			return STATE_UNFINISHED;
1164:src/keys.c    **** 		State2.runmode = 1 - State2.runmode;
1165:src/keys.c    **** 		process_cmdline_set_lift();
1166:src/keys.c    **** 		update_program_bounds(1);
1167:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
1168:src/keys.c    **** 			set_pc(0);
1169:src/keys.c    **** 		break;
ARM GAS  /tmp/cc8xFAqJ.s 			page 22


1170:src/keys.c    **** 
1171:src/keys.c    **** 	default:
1172:src/keys.c    **** 		break;
1173:src/keys.c    **** 	}
1174:src/keys.c    **** 
1175:src/keys.c    **** 	if (op != STATE_UNFINISHED) {
1176:src/keys.c    **** 		if (op & _RARG) {
1177:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
1178:src/keys.c    **** 			op = STATE_UNFINISHED;
1179:src/keys.c    **** 		}
1180:src/keys.c    **** 	}
1181:src/keys.c    **** 	return UState.intm && (op & NO_INT) ? STATE_UNFINISHED : op & ~NO_INT;
1182:src/keys.c    **** #undef _RARG
1183:src/keys.c    **** #undef NO_INT
1184:src/keys.c    **** }
1185:src/keys.c    **** #ifdef INCLUDE_C_LOCK
1186:src/keys.c    **** 
1187:src/keys.c    **** // Big section here - lots of functions that help with processing keys in complex lock mode
1188:src/keys.c    **** 
1189:src/keys.c    **** static void do_command_line ( void ) {
1190:src/keys.c    **** 	if (CmdLineLength) {
1191:src/keys.c    **** 		State2.state_lift = 0;
1192:src/keys.c    **** 		process_cmdline();
1193:src/keys.c    **** 	}
1194:src/keys.c    **** }
1195:src/keys.c    **** 
1196:src/keys.c    **** void finish_cpx_entry ( int lift ) {
1197:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
1198:src/keys.c    **** // The argument sets the lift state after entry is finished.
1199:src/keys.c    **** // It also converts entered polar form into rectangular coordinates, if needed.
1200:src/keys.c    **** // Note: does nothing to stack or lift state if number not being entered.
1201:src/keys.c    **** 	if ( !( REAL_FLAG || IMAG_FLAG ) ) return;
1202:src/keys.c    **** 
1203:src/keys.c    **** /*	if (REAL_FLAG) { // real part being entered
1204:src/keys.c    **** 		CLEAR_REAL;
1205:src/keys.c    **** 		do_command_line();
1206:src/keys.c    **** 	}
1207:src/keys.c    **** 	else if (IMAG_FLAG) {
1208:src/keys.c    **** 		CLEAR_IMAG;
1209:src/keys.c    **** 		do_command_line();
1210:src/keys.c    **** 		swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
1211:src/keys.c    **** 	}
1212:src/keys.c    **** */
1213:src/keys.c    **** 	do_command_line();
1214:src/keys.c    **** 	if (IMAG_FLAG) swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
1215:src/keys.c    **** 	CLEAR_REAL;
1216:src/keys.c    **** 	CLEAR_IMAG;
1217:src/keys.c    **** 
1218:src/keys.c    **** 	State2.state_lift = lift;
1219:src/keys.c    **** 
1220:src/keys.c    **** 	if ( POLAR_DISPLAY && POLAR_FORM_NOT_READY ) {
1221:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
1222:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regX_idx));
1223:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
1224:src/keys.c    **** 		//call p2r
1225:src/keys.c    **** 		update_speed(0);
1226:src/keys.c    **** 		op_p2r(OP_NOP); // x, y now contain rectangular form
ARM GAS  /tmp/cc8xFAqJ.s 			page 23


1227:src/keys.c    **** #ifdef RP_PREFIX
1228:src/keys.c    **** 		RectPolConv = 1; // stop "y" display
1229:src/keys.c    **** #endif
1230:src/keys.c    **** 		SET_POLAR_READY;
1231:src/keys.c    **** 	}
1232:src/keys.c    **** }
1233:src/keys.c    **** 
1234:src/keys.c    **** static void stack_restore ( void ) { 
1235:src/keys.c    **** 	// called if number entry terminated by EXIT key
1236:src/keys.c    **** 	// uses J and K registers to store the two stack registers displaced by the new entry
1237:src/keys.c    **** 	// tried declaring some static variables to hold the numbers but didn't work on real calculator
1238:src/keys.c    **** 	if ( !REAL_FLAG && !IMAG_FLAG  ) return; // number entry already over; no restore
1239:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
1240:src/keys.c    **** 		drop ( OP_DROPXY );
1241:src/keys.c    **** 		copyreg (get_reg_n(regC_idx), get_reg_n(regJ_idx));
1242:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
1243:src/keys.c    **** 	}
1244:src/keys.c    **** 	else { // X, Y have been overwritten
1245:src/keys.c    **** 		copyreg (get_reg_n(regX_idx), get_reg_n(regJ_idx));
1246:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
1247:src/keys.c    **** 	}
1248:src/keys.c    **** 	State2.state_lift = INIT_LIFT; // restore lift status too
1249:src/keys.c    **** 	CLEAR_INIT_LIFT;
1250:src/keys.c    **** 	CLEAR_POLAR_READY;
1251:src/keys.c    **** }
1252:src/keys.c    **** 
1253:src/keys.c    **** void stack_begin ( int zero_y ) { 
1254:src/keys.c    **** 	// Lifts stack if required and stores displaced registers; 
1255:src/keys.c    **** 	// zeros y if requested. 
1256:src/keys.c    **** 	CLEAR_POLAR_READY;
1257:src/keys.c    **** 	if ( State2.state_lift ){
1258:src/keys.c    **** 		SET_INIT_LIFT;
1259:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regC_idx));
1260:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
1261:src/keys.c    **** 		lift();
1262:src/keys.c    **** 		zero_X();
1263:src/keys.c    **** 		lift();
1264:src/keys.c    **** 		State2.state_lift = 0;
1265:src/keys.c    **** 	}
1266:src/keys.c    **** 	else {
1267:src/keys.c    **** 		CLEAR_INIT_LIFT;
1268:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regX_idx));
1269:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
1270:src/keys.c    **** 		zero_X();
1271:src/keys.c    **** 		if ( zero_y ) zero_Y();
1272:src/keys.c    **** 	}
1273:src/keys.c    **** }
1274:src/keys.c    **** 
1275:src/keys.c    **** static int process_c_lock ( const keycode c ) { // main function - called from process (c) function
1276:src/keys.c    **** 
1277:src/keys.c    **** 	enum shifts shift = cur_shift();
1278:src/keys.c    **** 
1279:src/keys.c    **** // Individual keys needing special treatment
1280:src/keys.c    **** 
1281:src/keys.c    **** 	if ( (c < K05) && shift == SHIFT_H ){ // display modes
1282:src/keys.c    **** 		return process_h_shifted (c);
1283:src/keys.c    **** 	}
ARM GAS  /tmp/cc8xFAqJ.s 			page 24


1284:src/keys.c    **** 
1285:src/keys.c    **** 
1286:src/keys.c    **** 	if ( (shift == SHIFT_G) && (c >= K10) && (c <= K12) ) { // angle mode change; needed because other
1287:src/keys.c    **** 		convert_regK ((enum trig_modes) (c-K10));
1288:src/keys.c    **** 	}
1289:src/keys.c    **** 	if ( (c >= K05) && (c <= K12) && (shift == SHIFT_F || shift == SHIFT_G) ) { // Deg, rad, grad, HMS
1290:src/keys.c    **** 		return process_fg_shifted (c);
1291:src/keys.c    **** 	}
1292:src/keys.c    **** 
1293:src/keys.c    **** 	if (c==K23) { // pi key - needs to be separate from what follows as it doesn't want entry complete
1294:src/keys.c    **** 		if (shift == SHIFT_F) { // special pi processing
1295:src/keys.c    **** 			reset_shift();
1296:src/keys.c    **** 			if ( CmdLineLength ) {
1297:src/keys.c    **** 				State2.state_lift = 0;
1298:src/keys.c    **** 				return OP_NIL | OP_PIB;
1299:src/keys.c    **** 			}
1300:src/keys.c    **** 			else {
1301:src/keys.c    **** 				return OP_NIL | OP_PIA;
1302:src/keys.c    **** 			}
1303:src/keys.c    **** 		}
1304:src/keys.c    **** 		else {
1305:src/keys.c    **** #if INCLUDE_EEX_PI == 2
1306:src/keys.c    **** 			const int eex_pi = 1;
1307:src/keys.c    **** #elif INCLUDE_EEX_PI == 1
1308:src/keys.c    **** 			const int eex_pi = get_user_flag(regL_idx);
1309:src/keys.c    **** #else
1310:src/keys.c    **** 			const int eex_pi = 0;
1311:src/keys.c    **** #endif
1312:src/keys.c    **** 			if ( (shift == SHIFT_H) || (eex_pi && (shift == SHIFT_N) && CmdLineLength == 0) ) { // normal pi
1313:src/keys.c    **** 				finish_cpx_entry(1);
1314:src/keys.c    **** 				return process_cmplx(c);
1315:src/keys.c    **** 			}
1316:src/keys.c    **** 		}
1317:src/keys.c    **** 	}
1318:src/keys.c    **** 
1319:src/keys.c    **** 	if (shift != SHIFT_N) { // other shifted keys - special cases first.
1320:src/keys.c    **** 		finish_cpx_entry(0); // finish entry for all of them - no lift
1321:src/keys.c    **** 		switch (c) {
1322:src/keys.c    **** 		case (K21): // x<->y key
1323:src/keys.c    **** 			if (shift == SHIFT_F || shift == SHIFT_G) { // exchanges real and imag parts with either shift
1324:src/keys.c    **** 				reset_shift();
1325:src/keys.c    **** 				CLEAR_POLAR_READY;
1326:src/keys.c    **** 				return RARG(RARG_SWAPX, regY_idx);
1327:src/keys.c    **** 			}
1328:src/keys.c    **** 			else if (shift == SHIFT_H) {
1329:src/keys.c    **** 				return process_cmplx(c); // complex exchange of (x,y) with register
1330:src/keys.c    **** 			}
1331:src/keys.c    **** 			break;
1332:src/keys.c    **** 		case (K40): // up-arrow key
1333:src/keys.c    **** 			if (shift == SHIFT_F) {
1334:src/keys.c    **** 				SET_RECTANGULAR_DISPLAY;
1335:src/keys.c    **** 			}
1336:src/keys.c    **** 			else if (shift == SHIFT_G) {
1337:src/keys.c    **** 				SET_POLAR_DISPLAY;
1338:src/keys.c    **** 				CLEAR_POLAR_READY;
1339:src/keys.c    **** 				update_speed(0); // new polar display calculated from keyboard needs a speed boost
1340:src/keys.c    **** 			}
ARM GAS  /tmp/cc8xFAqJ.s 			page 25


1341:src/keys.c    **** 			break;
1342:src/keys.c    **** 		case (K22): // +/- key
1343:src/keys.c    **** 			if (shift == SHIFT_F ) {
1344:src/keys.c    **** 				return OP_NIL | OP_C_MIM;
1345:src/keys.c    **** 			}
1346:src/keys.c    **** 			else if (shift == SHIFT_H) {
1347:src/keys.c    **** 				return OP_NIL | OP_C_MRE;
1348:src/keys.c    **** 			}
1349:src/keys.c    **** 			break;
1350:src/keys.c    **** 		case (K62): // IP/FP key
1351:src/keys.c    **** 			if (shift == SHIFT_F) {
1352:src/keys.c    **** 				return OP_NIL | OP_C_IM;
1353:src/keys.c    **** 			}
1354:src/keys.c    **** 			else if (shift == SHIFT_G) {
1355:src/keys.c    **** 				return OP_NIL | OP_C_RE;
1356:src/keys.c    **** 			}
1357:src/keys.c    **** 			break;
1358:src/keys.c    **** 		case (K44): // x (times) key
1359:src/keys.c    **** 			if (shift == SHIFT_H) { // real*real + i imag*imag
1360:src/keys.c    **** 				reset_shift();
1361:src/keys.c    **** 				return OP_CDYA | OP_CDOT;
1362:src/keys.c    **** 			}
1363:src/keys.c    **** 			else {
1364:src/keys.c    **** 				return process_cmplx(c);
1365:src/keys.c    **** 			}
1366:src/keys.c    **** 			break;
1367:src/keys.c    **** 		case (K34): // divide key
1368:src/keys.c    **** 			if (shift == SHIFT_H) { // real/real + i imag/imag
1369:src/keys.c    **** 				reset_shift();
1370:src/keys.c    **** 				return OP_CDYA | OP_CDOTDIV;
1371:src/keys.c    **** 			}
1372:src/keys.c    **** 			else {
1373:src/keys.c    **** 				return process_cmplx(c);
1374:src/keys.c    **** 			}
1375:src/keys.c    **** 			break;
1376:src/keys.c    **** 		case (K24): // <- key
1377:src/keys.c    **** 			if (POLAR_DISPLAY) break;
1378:src/keys.c    **** 			if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real part o
1379:src/keys.c    **** 				zero_X ();
1380:src/keys.c    **** 				State2.state_lift = 0;
1381:src/keys.c    **** 				SET_REAL;
1382:src/keys.c    **** 				stack_begin (0);
1383:src/keys.c    **** 			}
1384:src/keys.c    **** 			break;
1385:src/keys.c    **** 		default:
1386:src/keys.c    **** 			return process_cmplx(c); // for shifted keys not listed above
1387:src/keys.c    **** 		}
1388:src/keys.c    **** 		reset_shift(); // for the keys listed above; functions complete
1389:src/keys.c    **** 		return STATE_UNFINISHED;
1390:src/keys.c    **** 	}
1391:src/keys.c    **** 
1392:src/keys.c    **** 	switch (c) { // non-shifted keys including numbers - in general, keys to be processed normally not
1393:src/keys.c    **** 	case (K61):
1394:src/keys.c    **** 	case (K62):
1395:src/keys.c    **** 	case (K51):
1396:src/keys.c    **** 	case (K52):
1397:src/keys.c    **** 	case (K53):
ARM GAS  /tmp/cc8xFAqJ.s 			page 26


1398:src/keys.c    **** 	case (K41):
1399:src/keys.c    **** 	case (K42):
1400:src/keys.c    **** 	case (K43):
1401:src/keys.c    **** 	case (K31):
1402:src/keys.c    **** 	case (K32):
1403:src/keys.c    **** 	case (K33):
1404:src/keys.c    **** 	case (K23): // 0.123456789EEX
1405:src/keys.c    **** 		if (!REAL_FLAG && !IMAG_FLAG) {
1406:src/keys.c    **** 			SET_REAL; // start and continuation of real entry
1407:src/keys.c    **** 			stack_begin (1);
1408:src/keys.c    **** 		}
1409:src/keys.c    **** 		return process_normal(c);
1410:src/keys.c    **** 	case (K22): // CHS
1411:src/keys.c    **** //	case (K23): // EEX
1412:src/keys.c    **** 		if (!REAL_FLAG && !IMAG_FLAG) {
1413:src/keys.c    **** 			return process_cmplx(c);
1414:src/keys.c    **** 		}
1415:src/keys.c    **** 		else {
1416:src/keys.c    **** 			return process_normal(c);
1417:src/keys.c    **** 		}
1418:src/keys.c    **** 	case (K24): // backspace
1419:src/keys.c    **** 	case (K04): // arrow
1420:src/keys.c    **** 		return process_normal(c);
1421:src/keys.c    **** 	case (K_CMPLX):
1422:src/keys.c    **** 		if (REAL_FLAG) { // Something - at least one digit - has been entered; real part now complete
1423:src/keys.c    **** 			CLEAR_REAL;
1424:src/keys.c    **** 			SET_IMAG;
1425:src/keys.c    **** 			do_command_line();
1426:src/keys.c    **** 			State2.state_lift = 0;
1427:src/keys.c    **** 			swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
1428:src/keys.c    **** 		}
1429:src/keys.c    **** 		else if (IMAG_FLAG) { // finishing off imag part; nothing has necessarily been entered
1430:src/keys.c    **** 			finish_cpx_entry (1);
1431:src/keys.c    **** 		}
1432:src/keys.c    **** 		else { // down here we need a part that deals with CPX being pressed without a real part being en
1433:src/keys.c    **** 			SET_IMAG;
1434:src/keys.c    **** 			stack_begin (1);
1435:src/keys.c    **** 		}
1436:src/keys.c    **** 		return STATE_UNFINISHED;
1437:src/keys.c    **** 	default:;
1438:src/keys.c    **** 	}
1439:src/keys.c    **** 	finish_cpx_entry(0);
1440:src/keys.c    **** 	return process_cmplx(c);
1441:src/keys.c    **** 
1442:src/keys.c    **** }
1443:src/keys.c    **** 
1444:src/keys.c    **** #endif
1445:src/keys.c    **** 
1446:src/keys.c    **** /*
1447:src/keys.c    ****  *  Process a key code after CPX
1448:src/keys.c    ****  */
1449:src/keys.c    **** static int process_cmplx(const keycode c) {
1450:src/keys.c    **** #define _RARG   0xFF00
1451:src/keys.c    **** #define CSWAPXZ RARG(RARG_CSWAPX, regZ_idx)
1452:src/keys.c    **** #define CNUM(n) RARG(RARG_INTNUM_CMPLX, n)
1453:src/keys.c    **** 
1454:src/keys.c    **** 	static const unsigned short int op_map[][4] = {
ARM GAS  /tmp/cc8xFAqJ.s 			page 27


1455:src/keys.c    **** 		// Row 1
1456:src/keys.c    **** 		{ 1,			1,                   0,                   0		      }, // HYP
1457:src/keys.c    **** 		{ OP_CMON | OP_RECIP,	OP_CMON | OP_SIN,    OP_CMON | OP_ASIN,   STATE_UNFINISHED    },
1458:src/keys.c    **** 		{ OP_CDYA | OP_POW,	OP_CMON | OP_COS,    OP_CMON | OP_ACOS,   STATE_UNFINISHED    },
1459:src/keys.c    **** 		{ OP_CMON | OP_SQRT,	OP_CMON | OP_TAN,    OP_CMON | OP_ATAN,   STATE_UNFINISHED    },
1460:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_NIL | OP_P2R,     OP_NIL | OP_R2P,     STATE_UNFINISHED    },
1461:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    }, // CPX
1462:src/keys.c    **** 		// Row 2
1463:src/keys.c    **** 		{ _RARG | RARG_CSTO,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1464:src/keys.c    **** 		{ _RARG | RARG_CRCL,	STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CVIEW  },
1465:src/keys.c    **** 		{ OP_NIL | OP_CRDOWN,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_CRUP    }, // R^
1466:src/keys.c    **** 		// Row 3
1467:src/keys.c    **** 		{ OP_NIL | OP_CENTER,	STATE_UNFINISHED,    OP_NIL | OP_CFILL,   OP_NIL | OP_CFILL   }, // ENTER
1468:src/keys.c    **** 		{ CSWAPXZ,		STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CSWAPX },
1469:src/keys.c    **** 		{ OP_CMON | OP_CCHS,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_CMON | OP_CCONJ  },
1470:src/keys.c    **** 		{ CONST_CMPLX(OP_PI),	STATE_UNFINISHED,    STATE_UNFINISHED,    CONST_CMPLX(OP_PI)  },
1471:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1472:src/keys.c    **** 		// Row 4
1473:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CMON | OP_EXP,    OP_CMON | OP_LN,     STATE_UNFINISHED    },
1474:src/keys.c    **** 		{ CNUM(7),		OP_CMON | OP_10POWX, OP_CMON | OP_LOG,    STATE_UNFINISHED    },
1475:src/keys.c    **** 		{ CNUM(8),		OP_CMON | OP_2POWX,  OP_CMON | OP_LG2,    STATE_UNFINISHED    },
1476:src/keys.c    **** 		{ CNUM(9),		OP_CDYA | OP_POW,    OP_CDYA | OP_LOGXY,  STATE_UNFINISHED    },
1477:src/keys.c    **** 		{ OP_CDYA | OP_DIV,	OP_CMON | OP_RECIP,  OP_CDYA | OP_PARAL,  STATE_UNFINISHED    },
1478:src/keys.c    **** 		// Row 5
1479:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CDYA | OP_COMB,   OP_CDYA | OP_PERM,   OP_CMON | OP_FACT   },
1480:src/keys.c    **** 		{ CNUM(4),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1481:src/keys.c    **** 		{ CNUM(5),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1482:src/keys.c    **** 		{ CNUM(6),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1483:src/keys.c    **** 		{ OP_CDYA | OP_MUL,	OP_CMON | OP_SQRT,   OP_CMON | OP_SQR,    OP_CMON | OP_SQR    },
1484:src/keys.c    **** 		// Row 6
1485:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1486:src/keys.c    **** 		{ CNUM(1),		TST_EQ,              TST_NE,              STATE_UNFINISHED    }, // tests
1487:src/keys.c    **** 		{ CNUM(2),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1488:src/keys.c    **** 		{ CNUM(3),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1489:src/keys.c    **** 		{ OP_CDYA | OP_SUB,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1490:src/keys.c    **** 		// Row 7
1491:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_OFF     },
1492:src/keys.c    **** 		{ CNUM(0),		OP_CMON | OP_ABS,    OP_CMON | OP_RND,    STATE_UNFINISHED    },
1493:src/keys.c    **** 		{ OP_NIL | OP_cmplxI,	OP_CMON | OP_TRUNC,  OP_CMON | OP_FRAC,   STATE_UNFINISHED    },
1494:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1495:src/keys.c    **** 		{ OP_NIL | OP_STOPWATCH, STATE_UNFINISHED,   STATE_UNFINISHED,    STATE_UNFINISHED    },
1496:src/keys.c    **** #else
1497:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1498:src/keys.c    **** #endif
1499:src/keys.c    **** 		{ OP_CDYA | OP_ADD,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1500:src/keys.c    **** #ifdef DM42
1501:src/keys.c    **** 		{ OP_NIL | OP_NOP,	OP_NIL | OP_NOP,    OP_NIL | OP_NOP,    OP_NIL | OP_NOP    }
1502:src/keys.c    **** #endif
1503:src/keys.c    **** 	};
1504:src/keys.c    **** 
1505:src/keys.c    **** 	enum shifts shift = reset_shift();
1506:src/keys.c    **** 	int lc = keycode_to_linear(c);
1507:src/keys.c    **** 	int op = op_map[lc][shift];
1508:src/keys.c    **** 	State2.cmplx = 0;
1509:src/keys.c    **** 
1510:src/keys.c    **** 	if ((op & _RARG) == _RARG) {
1511:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
ARM GAS  /tmp/cc8xFAqJ.s 			page 28


1512:src/keys.c    **** 		return STATE_UNFINISHED;
1513:src/keys.c    **** 	}
1514:src/keys.c    **** 	if (c == K00) {
1515:src/keys.c    **** 		// HYP
1516:src/keys.c    **** 		process_cmdline_set_lift();
1517:src/keys.c    **** 		State2.hyp = 1;
1518:src/keys.c    **** 		State2.dot = op;
1519:src/keys.c    **** 		State2.cmplx = 1;
1520:src/keys.c    **** 		return STATE_UNFINISHED;
1521:src/keys.c    **** 	}
1522:src/keys.c    **** 
1523:src/keys.c    **** 	if (shift != SHIFT_N) {
1524:src/keys.c    **** 		switch (c) {
1525:src/keys.c    **** 		case K_CMPLX:
1526:src/keys.c    **** 			set_shift(shift);
1527:src/keys.c    **** 			break;
1528:src/keys.c    **** 
1529:src/keys.c    **** 		case K51:
1530:src/keys.c    **** 			if (op != STATE_UNFINISHED) {
1531:src/keys.c    **** 				if (is_bad_cmdline())
1532:src/keys.c    **** 					return STATE_UNFINISHED;
1533:src/keys.c    **** 				process_cmdline_set_lift();
1534:src/keys.c    **** 				State2.cmplx = 1;
1535:src/keys.c    **** 				State2.test = op;
1536:src/keys.c    **** 			}
1537:src/keys.c    **** 			return STATE_UNFINISHED;
1538:src/keys.c    **** 
1539:src/keys.c    **** 		case K60:
1540:src/keys.c    **** 			init_state();
1541:src/keys.c    **** 			break;
1542:src/keys.c    **** 
1543:src/keys.c    **** 		default:
1544:src/keys.c    **** 			break;
1545:src/keys.c    **** 		}
1546:src/keys.c    **** 	}
1547:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1548:src/keys.c    **** 	return check_confirm(op);
1549:src/keys.c    **** #else
1550:src/keys.c    **** 	return op;
1551:src/keys.c    **** #endif
1552:src/keys.c    **** 
1553:src/keys.c    **** #undef _RARG
1554:src/keys.c    **** #undef CSWAPXZ
1555:src/keys.c    **** #undef CNUM
1556:src/keys.c    **** }
1557:src/keys.c    **** 
1558:src/keys.c    **** 
1559:src/keys.c    **** 
1560:src/keys.c    **** /*
1561:src/keys.c    ****  * Fairly simple routine for dealing with the HYP prefix.
1562:src/keys.c    ****  * This setting can only be followed by 4, 5, or 6 to specify
1563:src/keys.c    ****  * the function.  The inverse routines use the code too, the State2.dot
1564:src/keys.c    ****  * is 1 for normal and 0 for inverse hyperbolic.  We also have to
1565:src/keys.c    ****  * deal with the complex versions and the handling of that key and
1566:src/keys.c    ****  * the ON key are dealt with by our caller.
1567:src/keys.c    ****  */
1568:src/keys.c    **** static int process_hyp(const keycode c) {
ARM GAS  /tmp/cc8xFAqJ.s 			page 29


1569:src/keys.c    **** 	static const unsigned char op_map[][2] = {
1570:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
1571:src/keys.c    **** 		{ OP_ACOSH, OP_COSH },
1572:src/keys.c    **** 		{ OP_ATANH, OP_TANH }
1573:src/keys.c    **** 	};
1574:src/keys.c    **** 	int cmplx = State2.cmplx;
1575:src/keys.c    **** 	int f = State2.dot;
1576:src/keys.c    **** 
1577:src/keys.c    **** 	State2.hyp = 0;
1578:src/keys.c    **** 	State2.cmplx = 0;
1579:src/keys.c    **** 	State2.dot = 0;
1580:src/keys.c    **** #ifdef DM42
1581:src/keys.c    **** 	reset_shift();
1582:src/keys.c    **** #endif
1583:src/keys.c    **** 	switch ((int)c) {
1584:src/keys.c    **** 
1585:src/keys.c    **** 	case K01:
1586:src/keys.c    **** 	case K02:
1587:src/keys.c    **** 	case K03:
1588:src/keys.c    **** 		return (cmplx ? OP_CMON : OP_MON) | op_map[c - K01][f];
1589:src/keys.c    **** 
1590:src/keys.c    **** 	case K_CMPLX:
1591:src/keys.c    **** 		cmplx = ! cmplx;
1592:src/keys.c    **** 		goto stay;
1593:src/keys.c    **** 
1594:src/keys.c    **** #ifndef DM42
1595:src/keys.c    **** 	case K_F: 
1596:src/keys.c    **** 	case K_G:
1597:src/keys.c    **** 		f = (c == K_F);
1598:src/keys.c    **** 		// fall through
1599:src/keys.c    **** #else
1600:src/keys.c    **** 	case K_F:
1601:src/keys.c    **** 	  if (c == K_F) f = 1 - f;
1602:src/keys.c    **** #endif
1603:src/keys.c    **** 	stay:
1604:src/keys.c    **** 		// process_cmdline_set_lift();
1605:src/keys.c    **** 		State2.hyp = 1;
1606:src/keys.c    **** 		State2.cmplx = cmplx;
1607:src/keys.c    **** 		State2.dot = f;
1608:src/keys.c    **** 		break;
1609:src/keys.c    **** 
1610:src/keys.c    **** 	default:
1611:src/keys.c    **** 		break;
1612:src/keys.c    **** 	}
1613:src/keys.c    **** 	return STATE_UNFINISHED;
1614:src/keys.c    **** }
1615:src/keys.c    **** 
1616:src/keys.c    **** 
1617:src/keys.c    **** /*
1618:src/keys.c    ****  *  Process a key code after ->
1619:src/keys.c    ****  */
1620:src/keys.c    **** static int process_arrow(const keycode c) {
1621:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
1622:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
1623:src/keys.c    **** 		{ OP_MON | OP_2RAD,  OP_MON | OP_HMS2 },
1624:src/keys.c    **** 		{ OP_MON | OP_2GRAD, STATE_UNFINISHED }
1625:src/keys.c    **** 	};
ARM GAS  /tmp/cc8xFAqJ.s 			page 30


1626:src/keys.c    **** 	static const enum single_disp disp[][2] = {
1627:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
1628:src/keys.c    **** 		{ SDISP_HEX, SDISP_DEC }
1629:src/keys.c    **** 	};
1630:src/keys.c    **** 	const int shift = reset_shift();
1631:src/keys.c    **** 	const int f = (shift == SHIFT_F);
1632:src/keys.c    **** 
1633:src/keys.c    **** 	State2.arrow = 0;
1634:src/keys.c    **** #ifdef DM42
1635:src/keys.c    **** 	set_last_menu ();
1636:src/keys.c    **** 	display_current_menu ();
1637:src/keys.c    **** #endif
1638:src/keys.c    **** 	if (shift == SHIFT_N) return STATE_UNFINISHED;
1639:src/keys.c    **** 	
1640:src/keys.c    **** 	if (c >= K10 && c <= K12)
1641:src/keys.c    **** 		return op_map[c - K10][f];
1642:src/keys.c    **** 
1643:src/keys.c    **** #ifdef INCLUDE_C_LOCK
1644:src/keys.c    **** 	if (c == K_CMPLX && CPX_ENABLED) {
1645:src/keys.c    **** 		if (!C_LOCK_ON) {
1646:src/keys.c    **** 			return OP_NIL | OP_C_ON;
1647:src/keys.c    **** 		}
1648:src/keys.c    **** 		else {
1649:src/keys.c    **** 			return OP_NIL | OP_C_OFF;
1650:src/keys.c    **** 		}
1651:src/keys.c    **** 	}
1652:src/keys.c    **** #endif
1653:src/keys.c    **** 
1654:src/keys.c    **** 	if (c == K22 || c == K23)
1655:src/keys.c    **** 		set_smode(disp[c - K22][f]);
1656:src/keys.c    **** 
1657:src/keys.c    **** 	return STATE_UNFINISHED;
1658:src/keys.c    **** }
1659:src/keys.c    **** 
1660:src/keys.c    **** 
1661:src/keys.c    **** /* Process a GTO . sequence
1662:src/keys.c    ****  */
1663:src/keys.c    **** static int gtodot_digit(const int n) {
  30              		.loc 1 1663 38 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
1664:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  34              		.loc 1 1664 2 view .LVU1
1665:src/keys.c    **** 	const int lib = nLIB(state_pc());
  35              		.loc 1 1665 18 is_stmt 0 view .LVU2
  36 0000 144B     		ldr	r3, .L5
  37 0002 1A68     		ldr	r2, [r3]
1663:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  38              		.loc 1 1663 38 view .LVU3
  39 0004 70B5     		push	{r4, r5, r6, lr}
  40              		.cfi_def_cfa_offset 16
  41              		.cfi_offset 4, -16
  42              		.cfi_offset 5, -12
  43              		.cfi_offset 6, -8
  44              		.cfi_offset 14, -4
1664:src/keys.c    **** 	const int val = State2.digval * 10 + n;
ARM GAS  /tmp/cc8xFAqJ.s 			page 31


  45              		.loc 1 1664 24 view .LVU4
  46 0006 144E     		ldr	r6, .L5+4
  47              		.loc 1 1665 18 view .LVU5
  48 0008 B2F8E057 		ldrh	r5, [r2, #2016]
1664:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  49              		.loc 1 1664 24 view .LVU6
  50 000c 3389     		ldrh	r3, [r6, #8]
  51              		.loc 1 1665 18 view .LVU7
  52 000e AD0B     		lsrs	r5, r5, #14
1664:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  53              		.loc 1 1664 32 view .LVU8
  54 0010 03EB8303 		add	r3, r3, r3, lsl #2
1663:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  55              		.loc 1 1663 38 view .LVU9
  56 0014 0446     		mov	r4, r0
1666:src/keys.c    **** 
1667:src/keys.c    **** 	if (val > sizeLIB(lib) / 10)
  57              		.loc 1 1667 12 view .LVU10
  58 0016 2846     		mov	r0, r5
  59              	.LVL1:
1664:src/keys.c    **** 	const int lib = nLIB(state_pc());
  60              		.loc 1 1664 12 view .LVU11
  61 0018 04EB4304 		add	r4, r4, r3, lsl #1
  62              	.LVL2:
1665:src/keys.c    **** 
  63              		.loc 1 1665 2 is_stmt 1 view .LVU12
  64              		.loc 1 1667 2 view .LVU13
  65              		.loc 1 1667 12 is_stmt 0 view .LVU14
  66 001c FFF7FEFF 		bl	sizeLIB
  67              	.LVL3:
  68              		.loc 1 1667 25 view .LVU15
  69 0020 0E4A     		ldr	r2, .L5+8
  70 0022 82FB0032 		smull	r3, r2, r2, r0
  71 0026 C317     		asrs	r3, r0, #31
  72 0028 C3EBA203 		rsb	r3, r3, r2, asr #2
  73              		.loc 1 1667 5 view .LVU16
  74 002c A342     		cmp	r3, r4
  75 002e 0FDB     		blt	.L1
1668:src/keys.c    **** 		return val;
1669:src/keys.c    **** 	if (++State2.numdigit == 3 + (lib & 1))
  76              		.loc 1 1669 2 is_stmt 1 view .LVU17
  77              		.loc 1 1669 6 is_stmt 0 view .LVU18
  78 0030 F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
  79              		.loc 1 1669 29 view .LVU19
  80 0032 15F0010F 		tst	r5, #1
  81              		.loc 1 1669 6 view .LVU20
  82 0036 03F10103 		add	r3, r3, #1
  83 003a DBB2     		uxtb	r3, r3
  84              		.loc 1 1669 29 view .LVU21
  85 003c 0CBF     		ite	eq
  86 003e 0322     		moveq	r2, #3
  87 0040 0422     		movne	r2, #4
  88              		.loc 1 1669 5 view .LVU22
  89 0042 9342     		cmp	r3, r2
1670:src/keys.c    **** 		return val;
1671:src/keys.c    **** 	State2.digval = val;
  90              		.loc 1 1671 2 is_stmt 1 view .LVU23
ARM GAS  /tmp/cc8xFAqJ.s 			page 32


  91              		.loc 1 1671 16 is_stmt 0 view .LVU24
  92 0044 18BF     		it	ne
  93 0046 3481     		strhne	r4, [r6, #8]	@ movhi
1672:src/keys.c    **** 	return -1;
  94              		.loc 1 1672 2 is_stmt 1 view .LVU25
1669:src/keys.c    **** 		return val;
  95              		.loc 1 1669 5 is_stmt 0 view .LVU26
  96 0048 F372     		strb	r3, [r6, #11]
  97              		.loc 1 1672 9 view .LVU27
  98 004a 18BF     		it	ne
  99 004c 4FF0FF34 		movne	r4, #-1
 100              	.LVL4:
 101              	.L1:
1673:src/keys.c    **** }
 102              		.loc 1 1673 1 view .LVU28
 103 0050 2046     		mov	r0, r4
 104 0052 70BD     		pop	{r4, r5, r6, pc}
 105              	.LVL5:
 106              	.L6:
 107              		.loc 1 1673 1 view .LVU29
 108              		.align	2
 109              	.L5:
 110 0054 00000000 		.word	main_ram
 111 0058 00000000 		.word	StateWhileOn
 112 005c 67666666 		.word	1717986919
 113              		.cfi_endproc
 114              	.LFE30:
 116              		.section	.text.check_f_key,"ax",%progbits
 117              		.align	1
 118              		.p2align 2,,3
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu fpv4-sp-d16
 124              	check_f_key:
 125              	.LVL6:
 126              	.LFB17:
 735:src/keys.c    **** 	const int code = 100 + n;
 127              		.loc 1 735 47 is_stmt 1 view -0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 736:src/keys.c    **** 	unsigned int pc = state_pc();
 131              		.loc 1 736 2 view .LVU31
 735:src/keys.c    **** 	const int code = 100 + n;
 132              		.loc 1 735 47 is_stmt 0 view .LVU32
 133 0000 38B5     		push	{r3, r4, r5, lr}
 134              		.cfi_def_cfa_offset 16
 135              		.cfi_offset 3, -16
 136              		.cfi_offset 4, -12
 137              		.cfi_offset 5, -8
 138              		.cfi_offset 14, -4
 739:src/keys.c    **** 		if (isXROM(pc))
 139              		.loc 1 739 6 view .LVU33
 140 0002 0D4B     		ldr	r3, .L17
 141 0004 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 142              	.LVL7:
ARM GAS  /tmp/cc8xFAqJ.s 			page 33


 737:src/keys.c    **** 
 143              		.loc 1 737 2 is_stmt 1 view .LVU34
 739:src/keys.c    **** 		if (isXROM(pc))
 144              		.loc 1 739 2 view .LVU35
 739:src/keys.c    **** 		if (isXROM(pc))
 145              		.loc 1 739 5 is_stmt 0 view .LVU36
 146 0006 5B06     		lsls	r3, r3, #25
 735:src/keys.c    **** 	const int code = 100 + n;
 147              		.loc 1 735 47 view .LVU37
 148 0008 0C46     		mov	r4, r1
 739:src/keys.c    **** 		if (isXROM(pc))
 149              		.loc 1 739 5 view .LVU38
 150 000a 0FD5     		bpl	.L11
 737:src/keys.c    **** 
 151              		.loc 1 737 20 view .LVU39
 152 000c 0B4B     		ldr	r3, .L17+4
 153              	.LVL8:
 737:src/keys.c    **** 
 154              		.loc 1 737 20 view .LVU40
 155 000e 1B68     		ldr	r3, [r3]
 156              	.LVL9:
 737:src/keys.c    **** 
 157              		.loc 1 737 15 view .LVU41
 158 0010 B3F8E037 		ldrh	r3, [r3, #2016]
 159              	.LVL10:
 740:src/keys.c    **** 			pc = 1;
 160              		.loc 1 740 3 is_stmt 1 view .LVU42
 740:src/keys.c    **** 			pc = 1;
 161              		.loc 1 740 7 is_stmt 0 view .LVU43
 162 0014 9A0B     		lsrs	r2, r3, #14
 741:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 163              		.loc 1 741 7 view .LVU44
 164 0016 032A     		cmp	r2, #3
 165              	.LVL11:
 742:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 166              		.loc 1 742 3 is_stmt 1 view .LVU45
 736:src/keys.c    **** 	unsigned int pc = state_pc();
 167              		.loc 1 736 12 is_stmt 0 view .LVU46
 168 0018 00F16405 		add	r5, r0, #100
 169              	.LVL12:
 742:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 170              		.loc 1 742 7 view .LVU47
 171 001c 2946     		mov	r1, r5
 172              	.LVL13:
 742:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 173              		.loc 1 742 7 view .LVU48
 174 001e 14BF     		ite	ne
 175 0020 1846     		movne	r0, r3
 176              	.LVL14:
 742:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 177              		.loc 1 742 7 view .LVU49
 178 0022 0120     		moveq	r0, #1
 179 0024 0222     		movs	r2, #2
 180 0026 FFF7FEFF 		bl	find_label_from
 181              	.LVL15:
 742:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 182              		.loc 1 742 6 view .LVU50
ARM GAS  /tmp/cc8xFAqJ.s 			page 34


 183 002a 08B9     		cbnz	r0, .L16
 184              	.LVL16:
 185              	.L11:
 745:src/keys.c    **** }
 186              		.loc 1 745 9 view .LVU51
 187 002c 2046     		mov	r0, r4
 746:src/keys.c    **** 
 188              		.loc 1 746 1 view .LVU52
 189 002e 38BD     		pop	{r3, r4, r5, pc}
 190              	.LVL17:
 191              	.L16:
 743:src/keys.c    **** 	}
 192              		.loc 1 743 4 is_stmt 1 view .LVU53
 743:src/keys.c    **** 	}
 193              		.loc 1 743 11 is_stmt 0 view .LVU54
 194 0030 45F4C840 		orr	r0, r5, #25600
 746:src/keys.c    **** 
 195              		.loc 1 746 1 view .LVU55
 196 0034 38BD     		pop	{r3, r4, r5, pc}
 197              	.LVL18:
 198              	.L18:
 746:src/keys.c    **** 
 199              		.loc 1 746 1 view .LVU56
 200 0036 00BF     		.align	2
 201              	.L17:
 202 0038 00000000 		.word	StateWhileOn
 203 003c 00000000 		.word	main_ram
 204              		.cfi_endproc
 205              	.LFE17:
 207              		.section	.text.is_label_or_end_at,"ax",%progbits
 208              		.align	1
 209              		.p2align 2,,3
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 213              		.fpu fpv4-sp-d16
 215              	is_label_or_end_at:
 216              	.LVL19:
 217              	.LFB54:
1674:src/keys.c    **** 
1675:src/keys.c    **** static int gtodot_fkey(int n) {
1676:src/keys.c    **** 	const int code = 100 + n;
1677:src/keys.c    **** 	unsigned int pc = state_pc();
1678:src/keys.c    **** 
1679:src/keys.c    **** 	if(isXROM(pc))
1680:src/keys.c    **** 		pc = 1;
1681:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
1682:src/keys.c    **** 	if (pc > 0)
1683:src/keys.c    **** 		return pc;
1684:src/keys.c    **** 	return state_pc();
1685:src/keys.c    **** }
1686:src/keys.c    **** 
1687:src/keys.c    **** static int process_gtodot(const keycode c) {
1688:src/keys.c    **** 	int pc = -1;
1689:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
1690:src/keys.c    **** 
1691:src/keys.c    **** 	if (rawpc <= 9) {
ARM GAS  /tmp/cc8xFAqJ.s 			page 35


1692:src/keys.c    **** 		// Digit 0 - 9
1693:src/keys.c    **** 		pc = gtodot_digit(rawpc);
1694:src/keys.c    **** 	}
1695:src/keys.c    **** #ifdef DM42
1696:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regX_idx) rawpc = gtodot_digit(1); 
1697:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
1698:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
1699:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
1700:src/keys.c    **** #endif
1701:src/keys.c    **** 	else if (c >= K00 && c <= K03) {
1702:src/keys.c    **** 		// A - D
1703:src/keys.c    **** 		rawpc = gtodot_fkey(c - K00);
1704:src/keys.c    **** 		goto fin;
1705:src/keys.c    **** 	}
1706:src/keys.c    **** 	else if (c == K62) {
1707:src/keys.c    **** 		// .
1708:src/keys.c    **** 		rawpc = ProgSize;
1709:src/keys.c    **** 		goto fin;
1710:src/keys.c    **** 	}
1711:src/keys.c    **** 	else if (c == K20) {
1712:src/keys.c    **** 		// ENTER - short circuit processing
1713:src/keys.c    **** 		pc = State2.digval;
1714:src/keys.c    **** 	}
1715:src/keys.c    **** 	else if (c == K24) {
1716:src/keys.c    **** 		// backspace
1717:src/keys.c    **** 		if (State2.numdigit == 0) {
1718:src/keys.c    **** 			goto fin2;
1719:src/keys.c    **** 		} else {
1720:src/keys.c    **** 			State2.numdigit--;
1721:src/keys.c    **** 			State2.digval /= 10;
1722:src/keys.c    **** 		}
1723:src/keys.c    **** 	}
1724:src/keys.c    **** 	else if (c == K_UP) {
1725:src/keys.c    **** 		// up
1726:src/keys.c    **** 		rawpc = state_pc();
1727:src/keys.c    **** 		if (rawpc == 1)
1728:src/keys.c    **** 			rawpc = 0;
1729:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
1730:src/keys.c    **** 		update_program_bounds(1);
1731:src/keys.c    **** 		rawpc = ProgBegin;
1732:src/keys.c    **** 		goto fin;
1733:src/keys.c    **** 	}
1734:src/keys.c    **** 	else if (c == K_DOWN) {
1735:src/keys.c    **** 		// down
1736:src/keys.c    **** 		update_program_bounds(1);
1737:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
1738:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
1739:src/keys.c    **** 			rawpc = 1;
1740:src/keys.c    **** 		goto fin;
1741:src/keys.c    **** 	}
1742:src/keys.c    **** 	if (pc >= 0) {
1743:src/keys.c    **** 		rawpc = find_user_pc(pc);
1744:src/keys.c    **** fin:		set_pc(rawpc);
1745:src/keys.c    **** fin2:		State2.gtodot = 0;
1746:src/keys.c    **** 		State2.digval = 0;
1747:src/keys.c    **** 		State2.numdigit = 0;
1748:src/keys.c    **** 	}
ARM GAS  /tmp/cc8xFAqJ.s 			page 36


1749:src/keys.c    **** 	return STATE_UNFINISHED;
1750:src/keys.c    **** }
1751:src/keys.c    **** 
1752:src/keys.c    **** 
1753:src/keys.c    **** /* Process a keystroke in alpha mode
1754:src/keys.c    ****  */
1755:src/keys.c    **** static int process_alpha(const keycode c) {
1756:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
1757:src/keys.c    ****         int op = STATE_UNFINISHED;
1758:src/keys.c    **** 	const enum shifts shift = reset_shift();
1759:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
1760:src/keys.c    **** 	State2.alpha_pos = 0;
1761:src/keys.c    **** 
1762:src/keys.c    **** 	switch (c) {
1763:src/keys.c    **** 	case K10:	// STO
1764:src/keys.c    **** 		if (shift == SHIFT_F) {
1765:src/keys.c    **** 			init_arg(RARG_ASTO);
1766:src/keys.c    **** 			return STATE_UNFINISHED;
1767:src/keys.c    **** 		}
1768:src/keys.c    **** 		break;
1769:src/keys.c    **** 
1770:src/keys.c    **** 	case K11:	// RCL - maybe view
1771:src/keys.c    **** 		if (shift == SHIFT_F) {
1772:src/keys.c    **** 			init_arg(RARG_ARCL);
1773:src/keys.c    **** 			return STATE_UNFINISHED;
1774:src/keys.c    **** 		} else if (shift == SHIFT_H) {
1775:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
1776:src/keys.c    **** 			return STATE_UNFINISHED;
1777:src/keys.c    **** 		}
1778:src/keys.c    **** 		break;
1779:src/keys.c    **** 
1780:src/keys.c    **** 	case K20:	// Enter - maybe exit alpha mode
1781:src/keys.c    **** 		if (shift == SHIFT_G || shift == SHIFT_H)
1782:src/keys.c    **** 			break;
1783:src/keys.c    **** 		if (shift == SHIFT_F && ! State2.runmode) {
1784:src/keys.c    **** 			State2.multi = 1;
1785:src/keys.c    **** 			State2.numdigit = 0;
1786:src/keys.c    **** 			CmdBase = DBL_ALPHA;
1787:src/keys.c    **** 			return STATE_UNFINISHED;
1788:src/keys.c    **** 		}
1789:src/keys.c    **** 		State2.alphas = 0;
1790:src/keys.c    **** 		State2.alphashift = 0;
1791:src/keys.c    **** #ifdef DM42
1792:src/keys.c    **** 		set_menu(-1);
1793:src/keys.c    **** 		display_current_menu();
1794:src/keys.c    **** #endif
1795:src/keys.c    **** 		return op;
1796:src/keys.c    **** 
1797:src/keys.c    **** 	case K24:	// Clx - backspace, clear Alpha
1798:src/keys.c    **** 		if (shift == SHIFT_N)
1799:src/keys.c    **** 			return STATE_BACKSPACE;
1800:src/keys.c    **** 		if (shift == SHIFT_H)
1801:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
1802:src/keys.c    **** 		break;
1803:src/keys.c    **** 
1804:src/keys.c    **** 	case K_UP:
1805:src/keys.c    **** 	  if (shift == SHIFT_N) {
ARM GAS  /tmp/cc8xFAqJ.s 			page 37


1806:src/keys.c    **** 	    if ( State2.runmode ) {
1807:src/keys.c    **** 	      // Alpha scroll left
1808:src/keys.c    **** #ifdef DM42
1809:src/keys.c    **** 	      /* 
1810:src/keys.c    **** 	       * The numbers 20 and 12 below should match the same 
1811:src/keys.c    **** 	       * numbers in display.c, lines 2414 and 2416.
1812:src/keys.c    **** 	       */
1813:src/keys.c    **** #ifdef BIGGER_DISPLAY
1814:src/keys.c    **** 	      if ((alpha_pos == 0) || (alen()-6*alpha_pos >= 20)) {
1815:src/keys.c    **** 		alpha_pos += 1;
1816:src/keys.c    **** 	      }
1817:src/keys.c    **** #else
1818:src/keys.c    **** 	      if ((alpha_pos == 0) || (alen()-6*alpha_pos >= 12)) {
1819:src/keys.c    **** 		alpha_pos += 1;
1820:src/keys.c    **** 	      }
1821:src/keys.c    **** #endif
1822:src/keys.c    **** 	      State2.alpha_pos = alpha_pos;
1823:src/keys.c    **** #else
1824:src/keys.c    **** 	      int n = alpha_pos + 1;
1825:src/keys.c    **** 	      State2.alpha_pos = ( n < ( alen() + 5 ) / 6 ) ? n : alpha_pos;
1826:src/keys.c    **** #endif
1827:src/keys.c    **** 	      return STATE_UNFINISHED;
1828:src/keys.c    **** 	    }
1829:src/keys.c    **** 	    return STATE_BST;
1830:src/keys.c    **** 	  }
1831:src/keys.c    **** 	  break;
1832:src/keys.c    **** 
1833:src/keys.c    **** 	case K_DOWN:
1834:src/keys.c    **** 	  if (shift == SHIFT_N) {
1835:src/keys.c    **** 	    if ( State2.runmode ) {
1836:src/keys.c    **** 	      // Alpha scroll right
1837:src/keys.c    **** 	      if (alpha_pos > 0)
1838:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
1839:src/keys.c    **** 	      return STATE_UNFINISHED;
1840:src/keys.c    **** 	    }
1841:src/keys.c    **** 	    return STATE_SST;
1842:src/keys.c    **** 	  }
1843:src/keys.c    **** 	  break;
1844:src/keys.c    **** 
1845:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
1846:src/keys.c    **** 		if (shift == SHIFT_F)
1847:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
1848:src/keys.c    **** 		else if (shift == SHIFT_H)
1849:src/keys.c    **** 			return OP_NIL | OP_OFF;
1850:src/keys.c    **** 		else if (shift == SHIFT_N) {
1851:src/keys.c    **** #ifdef DM42
1852:src/keys.c    **** 		  set_menu(-1);
1853:src/keys.c    **** 		  display_current_menu();
1854:src/keys.c    **** #endif
1855:src/keys.c    **** 		  init_state();
1856:src/keys.c    **** 		}
1857:src/keys.c    **** 		return STATE_UNFINISHED;
1858:src/keys.c    **** 
1859:src/keys.c    **** 	case K63:
1860:src/keys.c    **** 		if (shift == SHIFT_F)
1861:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
1862:src/keys.c    **** 		break;
ARM GAS  /tmp/cc8xFAqJ.s 			page 38


1863:src/keys.c    **** 
1864:src/keys.c    **** 	default:
1865:src/keys.c    **** 		break;
1866:src/keys.c    **** 	}
1867:src/keys.c    **** 
1868:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
1869:src/keys.c    **** 	if (ch == 0)
1870:src/keys.c    **** 		return STATE_UNFINISHED;
1871:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
1872:src/keys.c    **** }
1873:src/keys.c    **** 
1874:src/keys.c    **** /*
1875:src/keys.c    ****  *  Code to handle all commands with arguments
1876:src/keys.c    ****  */
1877:src/keys.c    **** static void reset_arg(void) {
1878:src/keys.c    **** 	init_arg((enum rarg) 0);
1879:src/keys.c    **** 	State2.rarg = 0;
1880:src/keys.c    **** }
1881:src/keys.c    **** 
1882:src/keys.c    ****  static int arg_eval(unsigned int val) {
1883:src/keys.c    ****    const unsigned int base = CmdBase;
1884:src/keys.c    ****    int r = RARG(base, val 
1885:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
1886:src/keys.c    **** 		+ (State2.local ? LOCAL_REG_BASE : 0));
1887:src/keys.c    ****    const unsigned int ssize = (! UState.stack_depth || ! State2.runmode ) ? 4 : 8;
1888:src/keys.c    **** 
1889:src/keys.c    ****    if (! State2.ind) {
1890:src/keys.c    ****      /*
1891:src/keys.c    ****       *  Central argument checking for some commands
1892:src/keys.c    ****       */
1893:src/keys.c    **** #ifdef SHOW_COMPLEX_REGS
1894:src/keys.c    ****      if (argcmds[base].cmplx && val > TOPREALREG - 2 ) {
1895:src/keys.c    ****        // remap complex registers cY->T, cZ->A, cT->C
1896:src/keys.c    ****        // 99,   X,   Y,   Z,   T,   A,   B,   C,   D,   L,   I,   J,   K
1897:src/keys.c    ****        static char remap[] = {  0, 100, 102, 104, 106,   0,   0,   0,   0, 108,   0, 110,   0 };
1898:src/keys.c    ****        val = (unsigned int) remap[ val - (TOPREALREG - 1) ];
1899:src/keys.c    ****        if ( val == 0 )
1900:src/keys.c    **** 	 return STATE_UNFINISHED;
1901:src/keys.c    ****        r = RARG(base, val);
1902:src/keys.c    ****      }
1903:src/keys.c    **** #endif
1904:src/keys.c    **** #ifdef INCLUDE_C_LOCK
1905:src/keys.c    ****      if (argcmds[base].cmplx && (val > (unsigned int)(C_LOCKED ? 0 : TOPREALREG - 2) && (val & 1)))
1906:src/keys.c    ****        if (C_LOCKED) {
1907:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
1908:src/keys.c    **** 	 return STATE_UNFINISHED; // either leaves arg blank (if EXIT pressed) or with one digit in (STO)
1909:src/keys.c    ****        }
1910:src/keys.c    ****        else {
1911:src/keys.c    **** 	 return STATE_UNFINISHED;
1912:src/keys.c    ****        }
1913:src/keys.c    ****      }
1914:src/keys.c    **** #else
1915:src/keys.c    ****      if (argcmds[base].cmplx && (val > TOPREALREG - 2 && (val & 1)))
1916:src/keys.c    ****        // Disallow odd complex register > 98
1917:src/keys.c    ****        return STATE_UNFINISHED;
1918:src/keys.c    **** #endif
1919:src/keys.c    ****      if ((base == RARG_STOSTK || base == RARG_RCLSTK) && (val > TOPREALREG - ssize))
ARM GAS  /tmp/cc8xFAqJ.s 			page 39


1920:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
1921:src/keys.c    ****        return STATE_UNFINISHED;
1922:src/keys.c    ****    }
1923:src/keys.c    ****    // Build op-code
1924:src/keys.c    ****    reset_arg();
1925:src/keys.c    ****    return r;
1926:src/keys.c    ****  }
1927:src/keys.c    **** 
1928:src/keys.c    **** static int arg_digit(int n) {
1929:src/keys.c    **** 	int lim;
1930:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1931:src/keys.c    **** 	int dispmode = get_dispmode_digs(&lim);
1932:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
1933:src/keys.c    **** #else
1934:src/keys.c    **** 	const unsigned int base = CmdBase;
1935:src/keys.c    **** #endif
1936:src/keys.c    **** 	const unsigned int val = State2.digval * 10 + n;
1937:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
1938:src/keys.c    **** 	
1939:src/keys.c    **** 	if (State2.local) {
1940:src/keys.c    **** 		// Handle local registers and flags
1941:src/keys.c    **** 		lim = MAX_LOCAL_DIRECT - 1;				// default
1942:src/keys.c    **** 		if (State2.runmode) {
1943:src/keys.c    **** 			if (LocalRegs == 0)
1944:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
1945:src/keys.c    **** 			if (is_reg) {
1946:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
1947:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
1948:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
1949:src/keys.c    **** 			}
1950:src/keys.c    **** 		}
1951:src/keys.c    **** 	}
1952:src/keys.c    **** 	else if (is_reg)						// normal register
1953:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
1954:src/keys.c    **** 	else {
1955:src/keys.c    **** 		lim = (int) argcmds[base].lim;				// any other command
1956:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
1957:src/keys.c    **** 			lim = RARG_IND - 1;
1958:src/keys.c    **** 	}
1959:src/keys.c    **** 	if ((int) val > lim)
1960:src/keys.c    **** 		return STATE_UNFINISHED;
1961:src/keys.c    **** 
1962:src/keys.c    **** 	State2.digval = val;
1963:src/keys.c    **** 	++State2.numdigit;
1964:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
1965:src/keys.c    **** 		int result = arg_eval(val);
1966:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
1967:src/keys.c    **** 			--State2.numdigit;
1968:src/keys.c    **** 			State2.digval /= 10;
1969:src/keys.c    **** 		}
1970:src/keys.c    **** 		return result;
1971:src/keys.c    **** 	}
1972:src/keys.c    **** 	return STATE_UNFINISHED;
1973:src/keys.c    **** }
1974:src/keys.c    **** 
1975:src/keys.c    **** static int arg_fkey(int n) {
1976:src/keys.c    **** 	const unsigned int b = CmdBase;
ARM GAS  /tmp/cc8xFAqJ.s 			page 40


1977:src/keys.c    **** 
1978:src/keys.c    **** 	if (argcmds[b].label || (b >= RARG_SF && b <= RARG_FCF))
1979:src/keys.c    **** 	{
1980:src/keys.c    **** 		if (State2.ind || State2.numdigit > 0)
1981:src/keys.c    **** 			return STATE_UNFINISHED;
1982:src/keys.c    **** 		if (argcmds[b].lim < 100)
1983:src/keys.c    **** 			return STATE_UNFINISHED;
1984:src/keys.c    **** 		return arg_eval(n + 100);
1985:src/keys.c    **** 	}
1986:src/keys.c    **** 	return STATE_UNFINISHED;
1987:src/keys.c    **** }
1988:src/keys.c    **** 
1989:src/keys.c    **** static int arg_storcl_check(const unsigned int b, const int cmplx) {
1990:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
1991:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || b == RARG_FLRCL ||
1992:src/keys.c    **** 			(cmplx && (b == RARG_CSTO || b == RARG_CRCL || b == RARG_FLCRCL)));
1993:src/keys.c    **** #else
1994:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || (cmplx && (b == RARG_CSTO || b == RARG_CRCL )));
1995:src/keys.c    **** #endif
1996:src/keys.c    **** }
1997:src/keys.c    **** 
1998:src/keys.c    **** static int arg_storcl(const unsigned int n, int cmplx) {
1999:src/keys.c    **** 	unsigned int b = CmdBase;
2000:src/keys.c    **** 
2001:src/keys.c    **** 	if (arg_storcl_check(b, cmplx)) {
2002:src/keys.c    **** 		CmdBase += n;
2003:src/keys.c    **** 		return 1;
2004:src/keys.c    **** 	}
2005:src/keys.c    **** 	/* And we can turn off the operation too */
2006:src/keys.c    **** 	if (b >= n) {
2007:src/keys.c    **** 		b -= n;
2008:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
2009:src/keys.c    **** 			CmdBase = b;
2010:src/keys.c    **** 			return 1;
2011:src/keys.c    **** 		}
2012:src/keys.c    **** 	}
2013:src/keys.c    **** 	return 0;
2014:src/keys.c    **** }
2015:src/keys.c    **** 
2016:src/keys.c    **** static int process_arg_dot(const unsigned int base) {
2017:src/keys.c    **** 
2018:src/keys.c    **** 	if (State2.numdigit == 0) {
2019:src/keys.c    **** 		// Only valid at beginning of entry
2020:src/keys.c    **** 		if (State2.dot || State2.local) {
2021:src/keys.c    **** 			// '..' or ENTER '.' = X
2022:src/keys.c    **** 			State2.local = 0;
2023:src/keys.c    **** 			return arg_eval(regX_idx);
2024:src/keys.c    **** 		}
2025:src/keys.c    **** 		if (argcmds[base].local || State2.ind) {
2026:src/keys.c    **** 			// local register or flag select
2027:src/keys.c    **** 			State2.local = 1;
2028:src/keys.c    **** 		}
2029:src/keys.c    **** 		else if (base == RARG_GTO || base == RARG_XEQ) {
2030:src/keys.c    **** 			// Special GTO . sequence
2031:src/keys.c    **** 			if (! State2.ind) {
2032:src/keys.c    **** 				State2.gtodot = 1;
2033:src/keys.c    **** 				reset_arg();
ARM GAS  /tmp/cc8xFAqJ.s 			page 41


2034:src/keys.c    **** 			}
2035:src/keys.c    **** 		}
2036:src/keys.c    **** 	}
2037:src/keys.c    **** 	return STATE_UNFINISHED;
2038:src/keys.c    **** }
2039:src/keys.c    **** 
2040:src/keys.c    **** static int process_arg_shuffle(int r) {
2041:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
2042:src/keys.c    **** 	if (State2.numdigit < 4)
2043:src/keys.c    **** 		return STATE_UNFINISHED;
2044:src/keys.c    **** 	return arg_eval(State2.digval);
2045:src/keys.c    **** }
2046:src/keys.c    **** 
2047:src/keys.c    **** 
2048:src/keys.c    **** static int process_arg(const keycode c) {
2049:src/keys.c    **** 	unsigned int base = CmdBase;
2050:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
2051:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
2052:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
2053:src/keys.c    **** 	const enum shifts shift = reset_shift();
2054:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
2055:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
2056:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
2057:src/keys.c    **** 
2058:src/keys.c    **** 	n &= ~NO_SHORT;
2059:src/keys.c    **** 	if (base >= NUM_RARG) {
2060:src/keys.c    **** 		reset_arg();
2061:src/keys.c    **** 		return STATE_UNFINISHED;
2062:src/keys.c    **** 	}
2063:src/keys.c    **** #ifdef DM42
2064:src/keys.c    **** 	if ( ! shorthand && ! State2.dot && ! State2.shuffle ) {
2065:src/keys.c    **** 	  switch (n) {
2066:src/keys.c    **** 	  case regX_idx:
2067:src/keys.c    **** 	    return arg_digit(1);
2068:src/keys.c    **** 	  case regY_idx:
2069:src/keys.c    **** 	    return arg_digit(2);
2070:src/keys.c    **** 	  case regZ_idx:
2071:src/keys.c    **** 	    return arg_digit(3);
2072:src/keys.c    **** 	  case regT_idx:
2073:src/keys.c    **** 	    return arg_digit(4);
2074:src/keys.c    **** 	  case 5:
2075:src/keys.c    **** 	  case 6:
2076:src/keys.c    **** 	  case 7:
2077:src/keys.c    **** 	  case 8:
2078:src/keys.c    **** 	  case 9:
2079:src/keys.c    **** 	  case 0:
2080:src/keys.c    **** 	    return arg_digit(n);
2081:src/keys.c    **** 	  }
2082:src/keys.c    **** 	}
2083:src/keys.c    **** #else
2084:src/keys.c    **** 	if (n <= 9 && ! shorthand && ! State2.dot && ! State2.shuffle)
2085:src/keys.c    **** 		return arg_digit(n);
2086:src/keys.c    **** #endif	
2087:src/keys.c    **** 	if (shorthand)
2088:src/keys.c    **** 		// row column shorthand addressing
2089:src/keys.c    **** 		return arg_eval(keycode_to_row_column(c));
2090:src/keys.c    **** 
ARM GAS  /tmp/cc8xFAqJ.s 			page 42


2091:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
2092:src/keys.c    **** #ifdef DM42
2093:src/keys.c    **** 	if (base == RARG_FIX || base == RARG_SIG || base == RARG_SIG0) {
2094:src/keys.c    **** 		switch ((int)c) {
2095:src/keys.c    **** 		case K_UP:	// up arrow
2096:src/keys.c    **** 		  if (base == RARG_FIX) {
2097:src/keys.c    **** 		    base = RARG_SIG;
2098:src/keys.c    **** 		    break;
2099:src/keys.c    **** 		  }
2100:src/keys.c    **** 		  if (base == RARG_SIG) {
2101:src/keys.c    **** 		    base = RARG_SIG0;
2102:src/keys.c    **** 		    break;
2103:src/keys.c    **** 		  }
2104:src/keys.c    **** 		  if (base == RARG_SIG0) {
2105:src/keys.c    **** 		    base = RARG_FIX;
2106:src/keys.c    **** 		    break;
2107:src/keys.c    **** 		  }
2108:src/keys.c    **** 		case K_DOWN:	// down arrow
2109:src/keys.c    **** 		case K01:	// B
2110:src/keys.c    **** 		  if (base == RARG_FIX) {
2111:src/keys.c    **** 		    base = RARG_SIG0;
2112:src/keys.c    **** 		    break;
2113:src/keys.c    **** 		  }
2114:src/keys.c    **** 		  if (base == RARG_SIG) {
2115:src/keys.c    **** 		    base = RARG_FIX;
2116:src/keys.c    **** 		    break;
2117:src/keys.c    **** 		  }
2118:src/keys.c    **** 		  if (base == RARG_SIG0) {
2119:src/keys.c    **** 		    base = RARG_SIG;
2120:src/keys.c    **** 		    break;
2121:src/keys.c    **** 		  }
2122:src/keys.c    **** 		}
2123:src/keys.c    **** 	}
2124:src/keys.c    **** 		CmdBase = base;
2125:src/keys.c    **** #else
2126:src/keys.c    **** 	if (base >= RARG_FIX && base <= RARG_SIG0) {
2127:src/keys.c    **** 		switch ((int)c) {
2128:src/keys.c    **** 		case K_UP:	// up arrow
2129:src/keys.c    **** 			if (--base < RARG_FIX)
2130:src/keys.c    **** 				base = RARG_SIG0;
2131:src/keys.c    **** 			break;
2132:src/keys.c    **** 
2133:src/keys.c    **** 		case K_DOWN:	// down arrow
2134:src/keys.c    **** 		case K01:	// B
2135:src/keys.c    **** 			if (++base > RARG_SIG0)
2136:src/keys.c    **** 				base = RARG_FIX;
2137:src/keys.c    **** 			break;
2138:src/keys.c    **** 		}
2139:src/keys.c    **** 		CmdBase = base;
2140:src/keys.c    **** 	}
2141:src/keys.c    **** #endif
2142:src/keys.c    **** #endif
2143:src/keys.c    **** 	/*
2144:src/keys.c    **** 	 *  So far, we've got the digits and some special label addressing keys
2145:src/keys.c    **** 	 *  Handle the rest here.
2146:src/keys.c    **** 	 */
2147:src/keys.c    **** 	switch ((int)c) {
ARM GAS  /tmp/cc8xFAqJ.s 			page 43


2148:src/keys.c    **** 	case K_F:
2149:src/keys.c    **** 		if (label_addressing)
2150:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
2151:src/keys.c    **** 		break;
2152:src/keys.c    **** 
2153:src/keys.c    **** 	case K_ARROW:		// arrow
2154:src/keys.c    **** 		if (!State2.dot && argcmds[base].indirectokay) {
2155:src/keys.c    **** 			State2.ind = ! State2.ind;
2156:src/keys.c    **** 			if (! stack_reg)
2157:src/keys.c    **** 				State2.dot = 0;
2158:src/keys.c    **** 		}
2159:src/keys.c    **** 		break;
2160:src/keys.c    **** 
2161:src/keys.c    **** 	case K_CMPLX:
2162:src/keys.c    **** 		if (State2.ind || State2.dot)
2163:src/keys.c    **** 			break;
2164:src/keys.c    **** 		if (base == RARG_STO)
2165:src/keys.c    **** 			CmdBase = RARG_STOM;
2166:src/keys.c    **** 		else if (base == RARG_RCL)
2167:src/keys.c    **** 			CmdBase = RARG_RCLM;
2168:src/keys.c    **** 		break;
2169:src/keys.c    **** #ifdef DM42
2170:src/keys.c    **** 	case K41:       // T
2171:src/keys.c    **** 	  if (State2.shuffle)
2172:src/keys.c    **** 	    return process_arg_shuffle(3);
2173:src/keys.c    **** 	case K51:       // X
2174:src/keys.c    **** 	  if (State2.shuffle)
2175:src/keys.c    **** 	    return process_arg_shuffle(0);
2176:src/keys.c    **** 	case K52:	// Y
2177:src/keys.c    **** 	  if (State2.shuffle)
2178:src/keys.c    **** 	    return process_arg_shuffle(1);
2179:src/keys.c    **** 	case K53:       // Z
2180:src/keys.c    **** 	  if (State2.shuffle)
2181:src/keys.c    **** 	    return process_arg_shuffle(2);
2182:src/keys.c    **** #else
2183:src/keys.c    **** 	case K63:	// Y
2184:src/keys.c    **** 	  if (State2.shuffle)
2185:src/keys.c    **** 	    return process_arg_shuffle(1);
2186:src/keys.c    **** #endif
2187:src/keys.c    **** 	case K00:	// A
2188:src/keys.c    **** 	case K01:	// B
2189:src/keys.c    **** 	case K02:	// C
2190:src/keys.c    **** 	case K03:	// D
2191:src/keys.c    **** #ifdef DM42
2192:src/keys.c    **** 	case K12:	// I (lastY)
2193:src/keys.c    **** 	case K13:	// J
2194:src/keys.c    **** 	case K14:	// K
2195:src/keys.c    **** 	case K15:	// L (lastX)
2196:src/keys.c    **** #else
2197:src/keys.c    **** 	case K12:	// I (lastY)
2198:src/keys.c    **** 	case K21:	// J
2199:src/keys.c    **** 	case K22:	// K
2200:src/keys.c    **** 	case K23:	// L (lastX)
2201:src/keys.c    **** #endif
2202:src/keys.c    **** 	  if (State2.dot || stack_reg)
2203:src/keys.c    **** 			return arg_eval(n);
2204:src/keys.c    **** 		if ( c <= K03 )
ARM GAS  /tmp/cc8xFAqJ.s 			page 44


2205:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
2206:src/keys.c    **** 		break;
2207:src/keys.c    **** #ifdef DM42
2208:src/keys.c    **** 	case K62:	// '.'
2209:src/keys.c    **** 		return process_arg_dot(base);
2210:src/keys.c    **** 
2211:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
2212:src/keys.c    **** 	case K64:		// plus
2213:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
2214:src/keys.c    **** 			return arg_eval(n);
2215:src/keys.c    **** 		break;
2216:src/keys.c    **** 	case K54:               // minus
2217:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
2218:src/keys.c    **** 			reset_arg();
2219:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
2220:src/keys.c    **** 		}
2221:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
2222:src/keys.c    **** 		break;
2223:src/keys.c    **** 	case K44:		// multiply
2224:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
2225:src/keys.c    **** 			return arg_eval(n);
2226:src/keys.c    **** 		break;
2227:src/keys.c    **** 	case K34:
2228:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
2229:src/keys.c    **** 		break;
2230:src/keys.c    **** #else
2231:src/keys.c    **** 	case K62:	// X, '.'
2232:src/keys.c    **** 		if (State2.shuffle)
2233:src/keys.c    **** 			return process_arg_shuffle(0);
2234:src/keys.c    **** 		return process_arg_dot(base);
2235:src/keys.c    **** 
2236:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
2237:src/keys.c    **** 	case K64:		// Z register
2238:src/keys.c    **** 		if (State2.shuffle)
2239:src/keys.c    **** 			return process_arg_shuffle(2);
2240:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
2241:src/keys.c    **** 			return arg_eval(n);
2242:src/keys.c    **** 		break;
2243:src/keys.c    **** 
2244:src/keys.c    **** 	case K54:
2245:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
2246:src/keys.c    **** 			reset_arg();
2247:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
2248:src/keys.c    **** 		}
2249:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
2250:src/keys.c    **** 		break;
2251:src/keys.c    **** 
2252:src/keys.c    **** 	case K44:		// T register
2253:src/keys.c    **** 		if (State2.shuffle)
2254:src/keys.c    **** 			return process_arg_shuffle(3);
2255:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
2256:src/keys.c    **** 			return arg_eval(n);
2257:src/keys.c    **** 		break;
2258:src/keys.c    **** 
2259:src/keys.c    **** 	case K34:
2260:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
2261:src/keys.c    **** 		break;
ARM GAS  /tmp/cc8xFAqJ.s 			page 45


2262:src/keys.c    **** #endif
2263:src/keys.c    **** 	case K_UP:
2264:src/keys.c    **** 		arg_storcl(RARG_STO_MAX - RARG_STO, 0);
2265:src/keys.c    **** 		break;
2266:src/keys.c    **** 
2267:src/keys.c    **** 	case K_DOWN:
2268:src/keys.c    **** 		arg_storcl(RARG_STO_MIN - RARG_STO, 0);
2269:src/keys.c    **** 		break;
2270:src/keys.c    **** 
2271:src/keys.c    **** 	case K20:				// Enter is a short cut finisher but it also changes a few commands if it is first up
2272:src/keys.c    **** 		if (State2.numdigit == 0 && !State2.ind && !State2.dot) {
2273:src/keys.c    **** 			if (argcmds[base].label) {
2274:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
2275:src/keys.c    **** 				State2.multi = 1;
2276:src/keys.c    **** 				State2.alphashift = 0;
2277:src/keys.c    **** 				State2.rarg = 0;
2278:src/keys.c    **** 			} else if (base == RARG_SCI) {
2279:src/keys.c    **** 				reset_arg();
2280:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
2281:src/keys.c    **** 			} else if (base == RARG_ENG) {
2282:src/keys.c    **** 				reset_arg();
2283:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
2284:src/keys.c    **** 			} else if (argcmds[base].stckreg)
2285:src/keys.c    **** 				State2.dot = 1;
2286:src/keys.c    **** 		} else if (State2.numdigit > 0)
2287:src/keys.c    **** 			return arg_eval(State2.digval);
2288:src/keys.c    **** 		else if (stack_reg)
2289:src/keys.c    **** 			State2.dot = 1 - State2.dot;
2290:src/keys.c    **** 		break;
2291:src/keys.c    **** 
2292:src/keys.c    **** 	case K24:	// <-
2293:src/keys.c    **** 		if (State2.numdigit == 0) {
2294:src/keys.c    **** 			if (State2.dot)
2295:src/keys.c    **** 				State2.dot = 0;
2296:src/keys.c    **** 			else if (State2.local)
2297:src/keys.c    **** 				State2.local = 0;
2298:src/keys.c    **** 			else if (State2.ind)
2299:src/keys.c    **** 				State2.ind = 0;
2300:src/keys.c    **** 			else
2301:src/keys.c    **** 				goto reset;
2302:src/keys.c    **** 		}
2303:src/keys.c    **** 		else {
2304:src/keys.c    **** 			--State2.numdigit;
2305:src/keys.c    **** 			if (State2.shuffle)
2306:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
2307:src/keys.c    **** 			else
2308:src/keys.c    **** 				State2.digval /= 10;
2309:src/keys.c    **** 		}
2310:src/keys.c    **** 		break;
2311:src/keys.c    **** 
2312:src/keys.c    **** 	case K60:
2313:src/keys.c    **** 	reset:
2314:src/keys.c    **** 		reset_arg();
2315:src/keys.c    **** 	default:
2316:src/keys.c    **** 		break;
2317:src/keys.c    **** 	}
2318:src/keys.c    **** 	return STATE_UNFINISHED;
ARM GAS  /tmp/cc8xFAqJ.s 			page 46


2319:src/keys.c    **** }
2320:src/keys.c    **** 
2321:src/keys.c    **** 
2322:src/keys.c    **** /*
2323:src/keys.c    ****  *  Process arguments to the diverse test commands
2324:src/keys.c    ****  */
2325:src/keys.c    **** static int process_test(const keycode c) {
2326:src/keys.c    **** 	int r = State2.test;
2327:src/keys.c    **** 	int cmpx = State2.cmplx;
2328:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
2329:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
2330:src/keys.c    **** 
2331:src/keys.c    **** 	State2.test = TST_NONE;
2332:src/keys.c    **** 	State2.cmplx = 0;
2333:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
2334:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
2335:src/keys.c    **** 		// Lettered register
2336:src/keys.c    **** 		if (cmpx && (n & 1)) {
2337:src/keys.c    **** 			if (n == regI_idx)
2338:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
2339:src/keys.c    **** 			// Disallow odd complex registers > A
2340:src/keys.c    **** 			goto again;
2341:src/keys.c    **** 		}
2342:src/keys.c    **** 		// Return the command with the register completed
2343:src/keys.c    **** 		return RARG(base, n);
2344:src/keys.c    **** 	}
2345:src/keys.c    **** 	else if ( n == 0 ) {
2346:src/keys.c    **** 		// Special 0
2347:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq0 : OP_Xeq0) + r;
2348:src/keys.c    **** 	}
2349:src/keys.c    **** 	else if ( n == 1 ) {
2350:src/keys.c    **** 		// Special 1
2351:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq1 : OP_Xeq1) + r;
2352:src/keys.c    **** 	}
2353:src/keys.c    **** 	else if ( n <= 9 || c == K_ARROW || c == K62 ) {
2354:src/keys.c    **** 		// digit 2..9, -> or .
2355:src/keys.c    **** 		init_arg((enum rarg)base);
2356:src/keys.c    **** 		return process_arg(c);
2357:src/keys.c    **** 	}
2358:src/keys.c    **** 
2359:src/keys.c    **** 	switch (c) {
2360:src/keys.c    **** 	case K11:					// tests vs register
2361:src/keys.c    **** 	case K20:
2362:src/keys.c    **** 		init_arg((enum rarg)base);
2363:src/keys.c    **** 		return STATE_UNFINISHED;
2364:src/keys.c    **** 
2365:src/keys.c    **** 	//case K60:
2366:src/keys.c    **** 	case K24:
2367:src/keys.c    **** 		return STATE_UNFINISHED;
2368:src/keys.c    **** 
2369:src/keys.c    **** 	default:
2370:src/keys.c    **** 		break;
2371:src/keys.c    **** 	}
2372:src/keys.c    **** again:
2373:src/keys.c    **** 	State2.test = r;
2374:src/keys.c    **** 	State2.cmplx = cmpx;
2375:src/keys.c    **** 	return STATE_UNFINISHED;
ARM GAS  /tmp/cc8xFAqJ.s 			page 47


2376:src/keys.c    **** }
2377:src/keys.c    **** 
2378:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2379:src/keys.c    **** /*
2380:src/keys.c    ****  *  Build the user catalogue on the fly in RAM and return the number of entries
2381:src/keys.c    ****  */
2382:src/keys.c    **** #define USER_CAT_MAX 100
2383:src/keys.c    **** s_opcode UserCat[USER_CAT_MAX];
2384:src/keys.c    **** 
2385:src/keys.c    **** static int build_user_cat(void)
2386:src/keys.c    **** {
2387:src/keys.c    **** 	// find the label 'CAT'
2388:src/keys.c    **** 	const int lbl = OP_DBL + (DBL_LBL << DBL_SHIFT) + 'C' + ('A' << 16) + ('T' << 24);
2389:src/keys.c    **** 	unsigned int pc = findmultilbl(lbl, 0);
2390:src/keys.c    **** 	int len = 0;
2391:src/keys.c    **** 	while (pc && len < USER_CAT_MAX) {
2392:src/keys.c    **** 		// do a simnple insert-sort to sort the entries
2393:src/keys.c    **** 		char buf1[16];
2394:src/keys.c    **** 		int i;
2395:src/keys.c    **** 		s_opcode op;
2396:src/keys.c    **** 	next:
2397:src/keys.c    **** 		pc = do_inc(pc, 0);
2398:src/keys.c    **** 		op = (s_opcode) getprog(pc);
2399:src/keys.c    **** 		if (op == (OP_NIL | OP_END))
2400:src/keys.c    **** 			break;
2401:src/keys.c    **** 		if (isDBL(op))
2402:src/keys.c    **** 			continue;
2403:src/keys.c    **** 		if (isRARG(op)) {
2404:src/keys.c    **** 			const s_opcode rarg = RARG_CMD(op);
2405:src/keys.c    **** 			if (rarg != RARG_ALPHA && rarg != RARG_CONV
2406:src/keys.c    **** 			    && rarg != RARG_CONST && rarg != RARG_CONST_CMPLX)
2407:src/keys.c    **** 				op = op & 0xff00;	// remove argument
2408:src/keys.c    **** 		}
2409:src/keys.c    **** 		catcmd(op, buf1);
2410:src/keys.c    **** 		for (i = 0; i < len; ++i) {
2411:src/keys.c    **** 			// Find a position in the table to insert the new entry
2412:src/keys.c    **** 			char buf2[16];
2413:src/keys.c    **** 			const char *p, *q;
2414:src/keys.c    **** 			int diff = 0;
2415:src/keys.c    **** 			if (op == UserCat[i]) {
2416:src/keys.c    **** 				// duplicate entry - ignore
2417:src/keys.c    **** 				goto next;
2418:src/keys.c    **** 			}
2419:src/keys.c    **** 			p = buf1;
2420:src/keys.c    **** 			if (*p == COMPLEX_PREFIX)
2421:src/keys.c    **** 				++p;
2422:src/keys.c    **** 			q = catcmd(UserCat[i], buf2);
2423:src/keys.c    **** 			if (*q == COMPLEX_PREFIX)
2424:src/keys.c    **** 				++q;
2425:src/keys.c    **** 			diff = 0;
2426:src/keys.c    **** 			while (*p != '\0' && diff == 0) {
2427:src/keys.c    **** 				diff = remap_chars(*q++) - remap_chars(*p++);
2428:src/keys.c    **** 			}
2429:src/keys.c    **** 			if ((diff == 0 && *q == 0) ) {
2430:src/keys.c    **** 				// identical according to sort order, insert after
2431:src/keys.c    **** 				++i;
2432:src/keys.c    **** 				break;
ARM GAS  /tmp/cc8xFAqJ.s 			page 48


2433:src/keys.c    **** 			}
2434:src/keys.c    **** 			if (diff > 0) {
2435:src/keys.c    **** 				// insert new entry before the one found because this is greater
2436:src/keys.c    **** 				break;
2437:src/keys.c    **** 			}
2438:src/keys.c    **** 		}
2439:src/keys.c    **** 		if (i < len) {
2440:src/keys.c    **** 			// Make room
2441:src/keys.c    **** 			xcopy(UserCat + i + 1, UserCat + i, (len - i) << 1);
2442:src/keys.c    **** 		}
2443:src/keys.c    **** 		UserCat[i] = op;
2444:src/keys.c    **** 		++len;
2445:src/keys.c    **** 	}
2446:src/keys.c    **** 	// return the number of entries
2447:src/keys.c    **** 	return len;
2448:src/keys.c    **** }
2449:src/keys.c    **** #endif
2450:src/keys.c    **** 
2451:src/keys.c    **** /* Return the number of entries in the current catalogue.
2452:src/keys.c    ****  * These are all fixed size known at compile time so a table lookup will
2453:src/keys.c    ****  * likely be the most space efficient method.
2454:src/keys.c    ****  */
2455:src/keys.c    **** int current_catalogue_max(void) {
2456:src/keys.c    **** 	// A quick table of catalogue sizes
2457:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues' 
2458:src/keys.c    **** 	static const unsigned char catalogue_sizes[] = 
2459:src/keys.c    **** 	{
2460:src/keys.c    **** 		0, // NONE
2461:src/keys.c    **** 		SIZE_catalogue,
2462:src/keys.c    **** 		SIZE_cplx_catalogue,
2463:src/keys.c    **** 		SIZE_stats_catalogue,
2464:src/keys.c    **** 		SIZE_prob_catalogue,
2465:src/keys.c    **** 		SIZE_int_catalogue,
2466:src/keys.c    **** 		SIZE_prog_catalogue,
2467:src/keys.c    **** 		SIZE_program_xfcn,
2468:src/keys.c    **** 		SIZE_test_catalogue,
2469:src/keys.c    **** 		SIZE_mode_catalogue,
2470:src/keys.c    **** 		SIZE_alpha_catalogue,
2471:src/keys.c    **** 		SIZE_alpha_symbols,
2472:src/keys.c    **** 		SIZE_alpha_compares,
2473:src/keys.c    **** 		SIZE_alpha_arrows,
2474:src/keys.c    **** 		SIZE_alpha_letters,
2475:src/keys.c    **** 		SIZE_alpha_subscripts,
2476:src/keys.c    **** 		NUM_CONSTS_CAT,
2477:src/keys.c    **** 		NUM_CONSTS_CAT,
2478:src/keys.c    **** 		SIZE_conv_catalogue,
2479:src/keys.c    **** 		SIZE_sums_catalogue,
2480:src/keys.c    **** 		SIZE_matrix_catalogue,
2481:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2482:src/keys.c    **** 		SIZE_internal_catalogue,
2483:src/keys.c    **** #endif
2484:src/keys.c    **** 	};
2485:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2486:src/keys.c    **** 	const int cat = State2.catalogue;
2487:src/keys.c    **** 	return cat == CATALOGUE_USER ? build_user_cat() : catalogue_sizes[cat];
2488:src/keys.c    **** #else
2489:src/keys.c    **** 	return catalogue_sizes[State2.catalogue];
ARM GAS  /tmp/cc8xFAqJ.s 			page 49


2490:src/keys.c    **** #endif
2491:src/keys.c    **** }
2492:src/keys.c    **** 
2493:src/keys.c    **** 
2494:src/keys.c    **** /* Look up the character position in the given byte array and
2495:src/keys.c    ****  * build the alpha op-code for it.
2496:src/keys.c    ****  */
2497:src/keys.c    **** static opcode alpha_code(int n, const char tbl[]) {
2498:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
2499:src/keys.c    **** }
2500:src/keys.c    **** 
2501:src/keys.c    **** 
2502:src/keys.c    **** /* Return the opcode for entry n from the current catalogue
2503:src/keys.c    ****  */
2504:src/keys.c    **** opcode current_catalogue(int n) {
2505:src/keys.c    **** 	// A quick table of catalogue tables
2506:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues'
2507:src/keys.c    **** 	static const void *catalogues[] =
2508:src/keys.c    **** 	{
2509:src/keys.c    **** 		NULL, // NONE
2510:src/keys.c    **** 		catalogue,
2511:src/keys.c    **** 		cplx_catalogue,
2512:src/keys.c    **** 		stats_catalogue,
2513:src/keys.c    **** 		prob_catalogue,
2514:src/keys.c    **** 		int_catalogue,
2515:src/keys.c    **** 		prog_catalogue,
2516:src/keys.c    **** 		program_xfcn,
2517:src/keys.c    **** 		test_catalogue,
2518:src/keys.c    **** 		mode_catalogue,
2519:src/keys.c    **** 		alpha_catalogue,
2520:src/keys.c    **** 		alpha_symbols,
2521:src/keys.c    **** 		alpha_compares,
2522:src/keys.c    **** 		alpha_arrows,
2523:src/keys.c    **** 		alpha_letters,
2524:src/keys.c    **** 		alpha_subscripts,
2525:src/keys.c    **** 		NULL,
2526:src/keys.c    **** 		NULL,
2527:src/keys.c    **** 		NULL, //CONV
2528:src/keys.c    **** 		sums_catalogue,
2529:src/keys.c    **** 		matrix_catalogue,
2530:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2531:src/keys.c    **** 		internal_catalogue,
2532:src/keys.c    **** #endif
2533:src/keys.c    **** 	};
2534:src/keys.c    **** 	const unsigned char *cat;
2535:src/keys.c    **** 	unsigned int c = State2.catalogue;
2536:src/keys.c    **** 	int m, i;
2537:src/keys.c    **** 	unsigned p, q;
2538:src/keys.c    **** 
2539:src/keys.c    **** 	if (c == CATALOGUE_CONST) {
2540:src/keys.c    **** 		if (n == OP_ZERO)
2541:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
2542:src/keys.c    **** 		return CONST(n);
2543:src/keys.c    **** 	}
2544:src/keys.c    **** 	if (c == CATALOGUE_COMPLEX_CONST) {
2545:src/keys.c    **** 		if (n == OP_ZERO)
2546:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
ARM GAS  /tmp/cc8xFAqJ.s 			page 50


2547:src/keys.c    **** 		return CONST_CMPLX(n);
2548:src/keys.c    **** 	}
2549:src/keys.c    **** 	if (c == CATALOGUE_CONV) {
2550:src/keys.c    **** 		const int cnv = conv_catalogue[n];
2551:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
2552:src/keys.c    **** 			// Monadic conversion routine
2553:src/keys.c    **** 			return OP_MON | (cnv - SIZE_conv_catalogue);
2554:src/keys.c    **** 		else
2555:src/keys.c    **** 			return RARG(RARG_CONV, cnv);
2556:src/keys.c    **** 	}
2557:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2558:src/keys.c    **** 	if (c == CATALOGUE_USER)
2559:src/keys.c    **** 		return build_user_cat() ? UserCat[n] : STATE_IGNORE;
2560:src/keys.c    **** #endif
2561:src/keys.c    **** 
2562:src/keys.c    **** 	if (c == CATALOGUE_ALPHA_LETTERS && State2.alphashift)
2563:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
2564:src/keys.c    **** 	else
2565:src/keys.c    **** 		cat = (const unsigned char *) catalogues[c];
2566:src/keys.c    **** 
2567:src/keys.c    **** 	if (c >= CATALOGUE_ALPHA_SYMBOLS && c <= CATALOGUE_ALPHA_SUBSCRIPTS) {
2568:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
2569:src/keys.c    **** 	}
2570:src/keys.c    **** 	if (c >= sizeof(catalogues) / sizeof(void *))
2571:src/keys.c    **** 		return OP_NIL | OP_NOP;
2572:src/keys.c    **** 
2573:src/keys.c    **** 	/* Unpack the opcode */
2574:src/keys.c    **** 	cat += n + (n >> 2);
2575:src/keys.c    **** 	p = cat[0];
2576:src/keys.c    **** 	q = cat[1];
2577:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
2578:src/keys.c    **** 
2579:src/keys.c    **** 	/* Now figure out which opcode it really is */
2580:src/keys.c    **** 	for (i=0; i<KIND_MAX; i++) {
2581:src/keys.c    **** 		if (m < opcode_breaks[i])
2582:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
2583:src/keys.c    **** 		m -= opcode_breaks[i];
2584:src/keys.c    **** 	}
2585:src/keys.c    **** 	return RARG_BASEOP(m);
2586:src/keys.c    **** }
2587:src/keys.c    **** 
2588:src/keys.c    **** 
2589:src/keys.c    **** /*
2590:src/keys.c    ****  *  Helper for navigation in alpha catalogues. Some charaters are not allowed
2591:src/keys.c    ****  *  in multi character commands.
2592:src/keys.c    ****  */
2593:src/keys.c    **** static int forbidden_alpha(int pos) {
2594:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
2595:src/keys.c    **** }
2596:src/keys.c    **** 
2597:src/keys.c    **** /*
2598:src/keys.c    ****  *  Catalogue navigation
2599:src/keys.c    ****  */
2600:src/keys.c    ****  static int process_catalogue(const keycode c, const enum shifts shift, const int is_multi) {
2601:src/keys.c    ****    int pos = State.catpos;
2602:src/keys.c    ****    int ch;
2603:src/keys.c    ****    const int ctmax = current_catalogue_max();
ARM GAS  /tmp/cc8xFAqJ.s 			page 51


2604:src/keys.c    ****    const enum catalogues cat = (enum catalogues) State2.catalogue;
2605:src/keys.c    **** 
2606:src/keys.c    ****    if (shift == SHIFT_N) {
2607:src/keys.c    ****      switch (c) {
2608:src/keys.c    **** #ifdef DM42
2609:src/keys.c    ****      case K05:			// XEQ accepts command
2610:src/keys.c    **** #else	  
2611:src/keys.c    ****      case K30:			// XEQ accepts command
2612:src/keys.c    **** #endif						  
2613:src/keys.c    ****      case K20:			// Enter accepts command
2614:src/keys.c    ****        if (pos < ctmax && !(is_multi && forbidden_alpha(pos))) {
2615:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
2616:src/keys.c    **** 
2617:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2618:src/keys.c    **** 
2619:src/keys.c    **** 	 if (isRARG(op)) {
2620:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
2621:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
2622:src/keys.c    **** 	     return op;
2623:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
2624:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
2625:src/keys.c    **** 	   else
2626:src/keys.c    **** 	     init_arg(RARG_CMD(op));
2627:src/keys.c    **** 	 }
2628:src/keys.c    **** 	 else {
2629:src/keys.c    **** 	   return check_confirm(op);
2630:src/keys.c    **** 	 }
2631:src/keys.c    ****        } else
2632:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2633:src/keys.c    ****        return STATE_UNFINISHED;
2634:src/keys.c    **** 
2635:src/keys.c    ****      case K24:			// backspace
2636:src/keys.c    ****        if (CmdLineLength > 0 && Keyticks < 30) {
2637:src/keys.c    **** 	 if (--CmdLineLength > 0)
2638:src/keys.c    **** 	   goto search;
2639:src/keys.c    **** 	 pos = 0;
2640:src/keys.c    **** 	 goto set_pos;
2641:src/keys.c    ****        } else
2642:src/keys.c    **** 	 init_cat(CATALOGUE_NONE);
2643:src/keys.c    ****        return STATE_UNFINISHED;
2644:src/keys.c    **** 
2645:src/keys.c    ****      case K60:
2646:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2647:src/keys.c    ****        return STATE_UNFINISHED;
2648:src/keys.c    **** 
2649:src/keys.c    ****      case K_UP:
2650:src/keys.c    ****        CmdLineLength = 0;
2651:src/keys.c    ****        if (pos == 0)
2652:src/keys.c    **** 	 goto set_max;
2653:src/keys.c    ****        else
2654:src/keys.c    **** 	 --pos;
2655:src/keys.c    ****        goto set_pos;
2656:src/keys.c    **** 
2657:src/keys.c    ****      case K_DOWN:
2658:src/keys.c    ****        CmdLineLength = 0;
2659:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
2660:src/keys.c    ****        if (pos >= ctmax)
ARM GAS  /tmp/cc8xFAqJ.s 			page 52


2661:src/keys.c    **** 	 pos = 0;
2662:src/keys.c    ****        goto set_pos;
2663:src/keys.c    **** 
2664:src/keys.c    ****      default:
2665:src/keys.c    ****        break;
2666:src/keys.c    ****      }
2667:src/keys.c    ****    } else if (shift == SHIFT_F) {
2668:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
2669:src/keys.c    ****        /*
2670:src/keys.c    **** 	* f 1/x in conversion catalogue
2671:src/keys.c    **** 	*/
2672:src/keys.c    ****        /* A small table of commands in pairs containing inverse commands.
2673:src/keys.c    **** 	* This table could be unsigned characters only storing the monadic kind.
2674:src/keys.c    **** 	* this saves twelve bytes in the table at a cost of some bytes in the code below.
2675:src/keys.c    **** 	* Not worth it since the maximum saving will be less than twelve bytes.
2676:src/keys.c    **** 	*/
2677:src/keys.c    ****        static const unsigned short int conv_mapping[] = {
2678:src/keys.c    **** 	 OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
2679:src/keys.c    **** 	 OP_MON | OP_DB_PR,	OP_MON | OP_PR_DB,
2680:src/keys.c    **** 	 OP_MON | OP_DEGC_F,	OP_MON | OP_DEGF_C,
2681:src/keys.c    **** 	 OP_MON | OP_DEG2RAD,	OP_MON | OP_RAD2DEG,
2682:src/keys.c    **** 	 OP_MON | OP_DEG2GRD,	OP_MON | OP_GRD2DEG,
2683:src/keys.c    **** 	 OP_MON | OP_RAD2GRD,	OP_MON | OP_GRD2RAD,
2684:src/keys.c    ****        };
2685:src/keys.c    ****        const opcode op = current_catalogue(pos);
2686:src/keys.c    ****        int i;
2687:src/keys.c    **** 
2688:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2689:src/keys.c    ****        if (isRARG(op))
2690:src/keys.c    **** 	 return op ^ 1;
2691:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
2692:src/keys.c    **** 	 if (op == conv_mapping[i])
2693:src/keys.c    **** 	   return conv_mapping[i^1];
2694:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
2695:src/keys.c    ****      }
2696:src/keys.c    ****      else if (c == K60 && (State2.alphas || State2.multi)) {
2697:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
2698:src/keys.c    ****        State2.alphashift = 1 - State2.alphashift;
2699:src/keys.c    ****        return STATE_UNFINISHED;
2700:src/keys.c    ****      }
2701:src/keys.c    ****    } else if (shift == SHIFT_G) {
2702:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
2703:src/keys.c    ****        init_cat(CATALOGUE_NONE);
2704:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
2705:src/keys.c    ****      }
2706:src/keys.c    ****    }
2707:src/keys.c    **** 
2708:src/keys.c    ****    /* We've got a key press, map it to a character and try to
2709:src/keys.c    ****     * jump to the appropriate catalogue entry.
2710:src/keys.c    ****     */
2711:src/keys.c    ****    ch = remap_chars(keycode_to_alpha(c, shift == SHIFT_G ? SHIFT_LC_G : shift));
2712:src/keys.c    ****    reset_shift();
2713:src/keys.c    ****    if (ch == '\0')
2714:src/keys.c    ****      return STATE_UNFINISHED;
2715:src/keys.c    ****    if (cat > CATALOGUE_ALPHA && cat < CATALOGUE_CONST) {
2716:src/keys.c    ****      // No multi character search in alpha catalogues
2717:src/keys.c    ****      CmdLineLength = 0;
ARM GAS  /tmp/cc8xFAqJ.s 			page 53


2718:src/keys.c    ****    }
2719:src/keys.c    ****    if (CmdLineLength < 10)
2720:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
2721:src/keys.c    ****    /* Search for the current buffer in the catalogue */
2722:src/keys.c    **** 
2723:src/keys.c    ****  search:
2724:src/keys.c    ****    Cmdline[CmdLineLength] = '\0';
2725:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
2726:src/keys.c    ****      char buf[16];
2727:src/keys.c    ****      const char *cmd = catcmd(current_catalogue(pos), buf);
2728:src/keys.c    ****      int i;
2729:src/keys.c    **** 
2730:src/keys.c    ****      if (*cmd == COMPLEX_PREFIX)
2731:src/keys.c    ****        cmd++;
2732:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
2733:src/keys.c    ****        const int c = remap_chars(cmd[i]);
2734:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
2735:src/keys.c    ****        if (c > cl)
2736:src/keys.c    **** 	 goto set_pos;
2737:src/keys.c    ****        else if (c < cl)
2738:src/keys.c    **** 	 break;
2739:src/keys.c    ****      }
2740:src/keys.c    ****      if (Cmdline[i] == '\0')
2741:src/keys.c    ****        goto set_pos;
2742:src/keys.c    ****    }
2743:src/keys.c    ****  set_max:
2744:src/keys.c    ****    pos = ctmax - 1;
2745:src/keys.c    ****  set_pos:
2746:src/keys.c    ****    while (is_multi && pos && forbidden_alpha(pos))
2747:src/keys.c    ****      --pos;
2748:src/keys.c    ****    State.catpos = pos;
2749:src/keys.c    ****    return STATE_UNFINISHED;
2750:src/keys.c    ****  }
2751:src/keys.c    **** 
2752:src/keys.c    **** #ifndef REALBUILD
2753:src/keys.c    **** int find_pos(const char* text) {
2754:src/keys.c    **** 	int pos;
2755:src/keys.c    **** 	const int ctmax = current_catalogue_max();
2756:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
2757:src/keys.c    **** 		char buf[16];
2758:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
2759:src/keys.c    **** 		int i;
2760:src/keys.c    **** 
2761:src/keys.c    **** 		if (*cmd == COMPLEX_PREFIX)
2762:src/keys.c    **** 			cmd++;
2763:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
2764:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
2765:src/keys.c    **** 			const int cl = remap_chars(text[i]);
2766:src/keys.c    **** 			if (c > cl)
2767:src/keys.c    **** 				return pos;
2768:src/keys.c    **** 			else if (c < cl)
2769:src/keys.c    **** 				break;
2770:src/keys.c    **** 		}
2771:src/keys.c    **** 		if (text[i] == '\0')
2772:src/keys.c    **** 			return pos;
2773:src/keys.c    **** 	}
2774:src/keys.c    **** 	return pos;
ARM GAS  /tmp/cc8xFAqJ.s 			page 54


2775:src/keys.c    **** }
2776:src/keys.c    **** 
2777:src/keys.c    **** #endif
2778:src/keys.c    **** 
2779:src/keys.c    **** /* Multi (2) word instruction entry
2780:src/keys.c    ****  */
2781:src/keys.c    **** static void reset_multi(void) {
2782:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
2783:src/keys.c    **** 	State2.multi = 0;
2784:src/keys.c    **** 	if (! State2.alphas )
2785:src/keys.c    **** 		State2.alphashift = 0;
2786:src/keys.c    **** }
2787:src/keys.c    **** 
2788:src/keys.c    **** static int process_multi(const keycode c) {
2789:src/keys.c    **** 	enum shifts shift = reset_shift();
2790:src/keys.c    **** 	unsigned int ch = 0;
2791:src/keys.c    **** 	unsigned int opcode;
2792:src/keys.c    **** 
2793:src/keys.c    **** 	if (State2.catalogue) {
2794:src/keys.c    **** 		// Alpha catalogue from within multi character command
2795:src/keys.c    **** 		opcode = process_catalogue((const keycode)c, shift, State2.numdigit == 2);
2796:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
2797:src/keys.c    **** 			return opcode;
2798:src/keys.c    **** 		ch = (unsigned char) opcode;
2799:src/keys.c    **** 		goto add_char;
2800:src/keys.c    **** 	}
2801:src/keys.c    **** 
2802:src/keys.c    **** 	switch (c) {
2803:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
2804:src/keys.c    **** 		if (shift != SHIFT_N)
2805:src/keys.c    **** 				break;
2806:src/keys.c    **** 		reset_multi();
2807:src/keys.c    **** 		if (State2.numdigit == 0)
2808:src/keys.c    **** 			return STATE_UNFINISHED;
2809:src/keys.c    **** 		else if (State2.numdigit == 1)
2810:src/keys.c    **** 			State2.digval2 = 0;
2811:src/keys.c    **** 		goto fin;
2812:src/keys.c    **** 
2813:src/keys.c    **** 	case K24:	// Clx - backspace, clear alpha
2814:src/keys.c    **** 		if (shift != SHIFT_H) {
2815:src/keys.c    **** 			if (State2.numdigit == 0)
2816:src/keys.c    **** 				reset_multi();
2817:src/keys.c    **** 			else
2818:src/keys.c    **** 				State2.numdigit--;
2819:src/keys.c    **** 			return STATE_UNFINISHED;
2820:src/keys.c    **** 		}
2821:src/keys.c    **** 		break;
2822:src/keys.c    **** 
2823:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
2824:src/keys.c    **** 		if (shift == SHIFT_F)
2825:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
2826:src/keys.c    **** 		else
2827:src/keys.c    **** 			reset_multi();
2828:src/keys.c    **** 		return STATE_UNFINISHED;
2829:src/keys.c    **** 
2830:src/keys.c    **** 	default:
2831:src/keys.c    **** 		break;
ARM GAS  /tmp/cc8xFAqJ.s 			page 55


2832:src/keys.c    **** 		}
2833:src/keys.c    **** 
2834:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
2835:src/keys.c    **** 	ch = keycode_to_alpha(c, shift);
2836:src/keys.c    **** 	if (ch == 0)
2837:src/keys.c    **** 		return STATE_UNFINISHED;
2838:src/keys.c    **** add_char:
2839:src/keys.c    **** 	if (State2.numdigit == 0) {
2840:src/keys.c    **** 		State2.digval = ch;
2841:src/keys.c    **** 		State2.numdigit = 1;
2842:src/keys.c    **** 		return STATE_UNFINISHED;
2843:src/keys.c    **** 	} else if (State2.numdigit == 1) {
2844:src/keys.c    **** 		State2.digval2 = ch;
2845:src/keys.c    **** 		State2.numdigit = 2;
2846:src/keys.c    **** 		return STATE_UNFINISHED;
2847:src/keys.c    **** 	}
2848:src/keys.c    **** 	reset_multi();
2849:src/keys.c    **** 
2850:src/keys.c    **** fin:
2851:src/keys.c    **** 	opcode = OP_DBL + (CmdBase << DBL_SHIFT) 
2852:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
2853:src/keys.c    **** 	return opcode;
2854:src/keys.c    **** }
2855:src/keys.c    **** 
2856:src/keys.c    **** 
2857:src/keys.c    **** /* Handle YES/NO confirmations
2858:src/keys.c    ****  */
2859:src/keys.c    **** static int process_confirm(const keycode c) {
2860:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
2861:src/keys.c    **** 	switch (c) {
2862:src/keys.c    **** #ifdef DM42
2863:src/keys.c    **** 	case K52:
2864:src/keys.c    **** #endif
2865:src/keys.c    **** 	case K63:			// Yes
2866:src/keys.c    **** 	  switch (State2.confirm) {
2867:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
2868:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
2869:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
2870:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
2871:src/keys.c    **** 	  }
2872:src/keys.c    **** 	case K24:
2873:src/keys.c    **** #ifdef DM42
2874:src/keys.c    **** 	case K22:
2875:src/keys.c    **** #else
2876:src/keys.c    **** 	case K32:
2877:src/keys.c    **** #endif
2878:src/keys.c    **** 	  // No
2879:src/keys.c    **** 	  State2.confirm = 0;
2880:src/keys.c    **** 	  State2.digval = 0;
2881:src/keys.c    **** 	  break;
2882:src/keys.c    **** 	default:			// No state change
2883:src/keys.c    **** 	  break;
2884:src/keys.c    **** 	}
2885:src/keys.c    **** 	return STATE_UNFINISHED;
2886:src/keys.c    **** }
2887:src/keys.c    **** 
2888:src/keys.c    **** 
ARM GAS  /tmp/cc8xFAqJ.s 			page 56


2889:src/keys.c    **** /*
2890:src/keys.c    ****  *  STATUS
2891:src/keys.c    ****  */
2892:src/keys.c    **** static int process_status(const keycode c) {
2893:src/keys.c    **** 	int n = ((int)State2.status) - 3;
2894:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
2895:src/keys.c    **** 
2896:src/keys.c    **** 	if (c == K_UP) {
2897:src/keys.c    **** 		if (--n < -2)
2898:src/keys.c    **** 			n = max;
2899:src/keys.c    **** 	}
2900:src/keys.c    **** 	else if (c == K_DOWN) {
2901:src/keys.c    **** 		if (++n > max)
2902:src/keys.c    **** 			n = -2;
2903:src/keys.c    **** 	}
2904:src/keys.c    **** 	else if (c == K24 /* || c == K60 */) {
2905:src/keys.c    **** 		State2.status = 0;
2906:src/keys.c    **** 		return STATE_UNFINISHED;
2907:src/keys.c    **** 	} 
2908:src/keys.c    **** 	else {
2909:src/keys.c    **** 		int nn = keycode_to_digit_or_register(c) & 0x7f;
2910:src/keys.c    **** 		if (nn <= 9)
2911:src/keys.c    **** 			n = nn;
2912:src/keys.c    **** 		else if (nn == LOCAL_REG_BASE)
2913:src/keys.c    **** 			n = n == max ? 10 : max;
2914:src/keys.c    **** 		else if (nn != NO_REG)
2915:src/keys.c    **** 			n = 10; 
2916:src/keys.c    **** 	}
2917:src/keys.c    **** 	State2.status = n + 3;
2918:src/keys.c    **** 
2919:src/keys.c    **** 	return STATE_UNFINISHED;
2920:src/keys.c    **** }
2921:src/keys.c    **** 
2922:src/keys.c    **** 
2923:src/keys.c    **** /*
2924:src/keys.c    ****  *  CAT helper
2925:src/keys.c    ****  */
2926:src/keys.c    **** static int is_label_or_end_at(unsigned int pc, int search_end) {
 218              		.loc 1 2926 64 is_stmt 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
2927:src/keys.c    **** 	const unsigned int op = getprog(pc);
 222              		.loc 1 2927 2 view .LVU58
2926:src/keys.c    **** 	const unsigned int op = getprog(pc);
 223              		.loc 1 2926 64 is_stmt 0 view .LVU59
 224 0000 10B5     		push	{r4, lr}
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 4, -8
 227              		.cfi_offset 14, -4
2926:src/keys.c    **** 	const unsigned int op = getprog(pc);
 228              		.loc 1 2926 64 view .LVU60
 229 0002 0C46     		mov	r4, r1
 230              		.loc 1 2927 26 view .LVU61
 231 0004 FFF7FEFF 		bl	getprog
 232              	.LVL20:
2928:src/keys.c    **** 
ARM GAS  /tmp/cc8xFAqJ.s 			page 57


2929:src/keys.c    **** 	return op == (OP_NIL | OP_END) || (!search_end && (isDBL(op) && opDBL(op) == DBL_LBL));
 233              		.loc 1 2929 2 is_stmt 1 view .LVU62
 234              		.loc 1 2929 33 is_stmt 0 view .LVU63
 235 0008 B0F59D7F 		cmp	r0, #314
 236 000c 06D0     		beq	.L21
 237              		.loc 1 2929 53 discriminator 3 view .LVU64
 238 000e 00F47043 		and	r3, r0, #61440
 239              		.loc 1 2929 49 discriminator 3 view .LVU65
 240 0012 B3F5704F 		cmp	r3, #61440
 241 0016 03D0     		beq	.L24
 242              		.loc 1 2929 33 view .LVU66
 243 0018 0020     		movs	r0, #0
 244              	.LVL21:
2930:src/keys.c    **** }
 245              		.loc 1 2930 1 view .LVU67
 246 001a 10BD     		pop	{r4, pc}
 247              	.LVL22:
 248              	.L21:
2929:src/keys.c    **** }
 249              		.loc 1 2929 33 view .LVU68
 250 001c 0120     		movs	r0, #1
 251              	.LVL23:
 252              		.loc 1 2930 1 view .LVU69
 253 001e 10BD     		pop	{r4, pc}
 254              	.LVL24:
 255              	.L24:
2929:src/keys.c    **** }
 256              		.loc 1 2929 66 discriminator 5 view .LVU70
 257 0020 C0F30320 		ubfx	r0, r0, #8, #4
 258              	.LVL25:
2929:src/keys.c    **** }
 259              		.loc 1 2929 63 discriminator 5 view .LVU71
 260 0024 50EA0403 		orrs	r3, r0, r4
 261 0028 0CBF     		ite	eq
 262 002a 0120     		moveq	r0, #1
 263 002c 0020     		movne	r0, #0
 264              		.loc 1 2930 1 discriminator 5 view .LVU72
 265 002e 10BD     		pop	{r4, pc}
 266              		.loc 1 2930 1 discriminator 5 view .LVU73
 267              		.cfi_endproc
 268              	.LFE54:
 270              		.section	.text.advance_to_next_label,"ax",%progbits
 271              		.align	1
 272              		.p2align 2,,3
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv4-sp-d16
 278              	advance_to_next_label:
 279              	.LVL26:
 280              	.LFB55:
2931:src/keys.c    **** 
2932:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end) {
 281              		.loc 1 2932 85 is_stmt 1 view -0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc8xFAqJ.s 			page 58


 285              		.loc 1 2932 85 is_stmt 0 view .LVU75
 286 0000 70B5     		push	{r4, r5, r6, lr}
 287              		.cfi_def_cfa_offset 16
 288              		.cfi_offset 4, -16
 289              		.cfi_offset 5, -12
 290              		.cfi_offset 6, -8
 291              		.cfi_offset 14, -4
 292              		.loc 1 2932 85 view .LVU76
 293 0002 0446     		mov	r4, r0
2933:src/keys.c    **** 	do {
 294              		.loc 1 2933 2 is_stmt 1 view .LVU77
2934:src/keys.c    **** 		for (;;) {
 295              		.loc 1 2934 3 view .LVU78
2935:src/keys.c    **** 			if (inc) {
 296              		.loc 1 2935 4 view .LVU79
2932:src/keys.c    **** 	do {
 297              		.loc 1 2932 85 is_stmt 0 view .LVU80
 298 0004 1646     		mov	r6, r2
 299              		.loc 1 2935 7 view .LVU81
 300 0006 21B9     		cbnz	r1, .L29
 301              	.LVL27:
 302              	.L26:
2936:src/keys.c    **** 				pc = do_inc(pc, 0);
2937:src/keys.c    **** 				if (PcWrapped)
2938:src/keys.c    **** 					break;
2939:src/keys.c    **** 			}
2940:src/keys.c    **** 			else
2941:src/keys.c    **** 				inc = 1;
2942:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 303              		.loc 1 2942 4 is_stmt 1 view .LVU82
 304              		.loc 1 2942 8 is_stmt 0 view .LVU83
 305 0008 3146     		mov	r1, r6
 306 000a 2046     		mov	r0, r4
 307              		.loc 1 2942 8 view .LVU84
 308 000c FFF7FEFF 		bl	is_label_or_end_at
 309              	.LVL28:
 310              		.loc 1 2942 7 view .LVU85
 311 0010 B8B9     		cbnz	r0, .L28
 312              	.LVL29:
 313              	.L29:
 314              		.loc 1 2942 7 view .LVU86
 315 0012 0D4D     		ldr	r5, .L37
 316              	.L30:
2936:src/keys.c    **** 				pc = do_inc(pc, 0);
 317              		.loc 1 2936 5 is_stmt 1 view .LVU87
2936:src/keys.c    **** 				pc = do_inc(pc, 0);
 318              		.loc 1 2936 10 is_stmt 0 view .LVU88
 319 0014 2046     		mov	r0, r4
 320 0016 0021     		movs	r1, #0
 321 0018 FFF7FEFF 		bl	do_inc
 322              	.LVL30:
2937:src/keys.c    **** 					break;
 323              		.loc 1 2937 8 view .LVU89
 324 001c 2B68     		ldr	r3, [r5]
2936:src/keys.c    **** 				pc = do_inc(pc, 0);
 325              		.loc 1 2936 10 view .LVU90
 326 001e 0446     		mov	r4, r0
ARM GAS  /tmp/cc8xFAqJ.s 			page 59


 327              	.LVL31:
2937:src/keys.c    **** 					break;
 328              		.loc 1 2937 5 is_stmt 1 view .LVU91
2937:src/keys.c    **** 					break;
 329              		.loc 1 2937 8 is_stmt 0 view .LVU92
 330 0020 002B     		cmp	r3, #0
 331 0022 F1D0     		beq	.L26
2943:src/keys.c    **** 				return pc;
2944:src/keys.c    **** 			}
2945:src/keys.c    **** 		}
2946:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) + 1) & 3);
 332              		.loc 1 2946 3 is_stmt 1 view .LVU93
 333              		.loc 1 2946 8 is_stmt 0 view .LVU94
 334 0024 20F47F54 		bic	r4, r0, #16320
 335 0028 24F03F04 		bic	r4, r4, #63
 336 002c 04F58044 		add	r4, r4, #16384
 337 0030 A4B2     		uxth	r4, r4
 338              		.loc 1 2946 6 view .LVU95
 339 0032 44F00104 		orr	r4, r4, #1
 340              	.LVL32:
2947:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 341              		.loc 1 2947 10 is_stmt 1 view .LVU96
 342              		.loc 1 2947 13 is_stmt 0 view .LVU97
 343 0036 2046     		mov	r0, r4
 344 0038 3146     		mov	r1, r6
 345 003a FFF7FEFF 		bl	is_label_or_end_at
 346              	.LVL33:
 347              		.loc 1 2947 2 view .LVU98
 348 003e 0028     		cmp	r0, #0
 349 0040 E8D0     		beq	.L30
 350              	.L28:
2948:src/keys.c    **** 	return pc;
2949:src/keys.c    **** }
 351              		.loc 1 2949 1 view .LVU99
 352 0042 2046     		mov	r0, r4
 353 0044 70BD     		pop	{r4, r5, r6, pc}
 354              	.LVL34:
 355              	.L38:
 356              		.loc 1 2949 1 view .LVU100
 357 0046 00BF     		.align	2
 358              	.L37:
 359 0048 00000000 		.word	PcWrapped
 360              		.cfi_endproc
 361              	.LFE55:
 363              		.section	.text.init_cat,"ax",%progbits
 364              		.align	1
 365              		.p2align 2,,3
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu fpv4-sp-d16
 371              	init_cat:
 372              	.LVL35:
 373              	.LFB12:
 565:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 374              		.loc 1 565 43 is_stmt 1 view -0
 375              		.cfi_startproc
ARM GAS  /tmp/cc8xFAqJ.s 			page 60


 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 378              		.loc 1 566 2 view .LVU102
 565:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 379              		.loc 1 565 43 is_stmt 0 view .LVU103
 380 0000 38B5     		push	{r3, r4, r5, lr}
 381              		.cfi_def_cfa_offset 16
 382              		.cfi_offset 3, -16
 383              		.cfi_offset 4, -12
 384              		.cfi_offset 5, -8
 385              		.cfi_offset 14, -4
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 386              		.loc 1 566 37 view .LVU104
 387 0002 384C     		ldr	r4, .L58
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 388              		.loc 1 566 5 view .LVU105
 389 0004 0546     		mov	r5, r0
 390 0006 D0B9     		cbnz	r0, .L40
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 391              		.loc 1 566 37 discriminator 1 view .LVU106
 392 0008 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 566:src/keys.c    **** 		// Save last catalogue for a later restore
 393              		.loc 1 566 28 discriminator 1 view .LVU107
 394 000a 43B1     		cbz	r3, .L41
 568:src/keys.c    **** 		CmdLineLength = 0;
 395              		.loc 1 568 3 is_stmt 1 view .LVU108
 568:src/keys.c    **** 		CmdLineLength = 0;
 396              		.loc 1 568 18 is_stmt 0 view .LVU109
 397 000c 364A     		ldr	r2, .L58+4
 569:src/keys.c    **** 	}
 398              		.loc 1 569 17 view .LVU110
 399 000e 2077     		strb	r0, [r4, #28]
 568:src/keys.c    **** 		CmdLineLength = 0;
 400              		.loc 1 568 18 view .LVU111
 401 0010 1268     		ldr	r2, [r2]
 402 0012 92F8DC17 		ldrb	r1, [r2, #2012]	@ zero_extendqisi2
 403 0016 63F30401 		bfi	r1, r3, #0, #5
 404 001a 82F8DC17 		strb	r1, [r2, #2012]
 569:src/keys.c    **** 	}
 405              		.loc 1 569 3 is_stmt 1 view .LVU112
 406              	.L41:
 571:src/keys.c    **** 
 407              		.loc 1 571 2 view .LVU113
 408 001e FFF7FEFF 		bl	process_cmdline
 409              	.LVL36:
 573:src/keys.c    **** 	State2.registerlist = 0;
 410              		.loc 1 573 2 view .LVU114
 574:src/keys.c    **** 	State2.status = 0;
 411              		.loc 1 574 2 view .LVU115
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 412              		.loc 1 575 2 view .LVU116
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 413              		.loc 1 600 16 is_stmt 0 view .LVU117
 414 0022 6369     		ldr	r3, [r4, #20]
 415 0024 23F04063 		bic	r3, r3, #201326592
 416 0028 23F40073 		bic	r3, r3, #512
ARM GAS  /tmp/cc8xFAqJ.s 			page 61


 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 417              		.loc 1 575 16 view .LVU118
 418 002c 0022     		movs	r2, #0
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 419              		.loc 1 600 16 view .LVU119
 420 002e 6361     		str	r3, [r4, #20]
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 421              		.loc 1 575 16 view .LVU120
 422 0030 2273     		strb	r2, [r4, #12]
 576:src/keys.c    **** 
 423              		.loc 1 576 2 is_stmt 1 view .LVU121
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 424              		.loc 1 578 2 view .LVU122
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 425              		.loc 1 599 3 view .LVU123
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 426              		.loc 1 599 20 is_stmt 0 view .LVU124
 427 0032 A273     		strb	r2, [r4, #14]
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 428              		.loc 1 600 3 is_stmt 1 view .LVU125
 601:src/keys.c    **** 			// Different catalogue, reset position
 429              		.loc 1 601 3 view .LVU126
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 430              		.loc 1 606 2 view .LVU127
 431              	.LBB283:
 432              	.LBI283:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 433              		.loc 1 114 13 view .LVU128
 434              	.LBE283:
 115:src/keys.c    **** }
 435              		.loc 1 115 2 view .LVU129
 436              	.LVL37:
 437              	.LBB300:
 438              	.LBB284:
 439              	.LBI284:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 440              		.loc 1 104 20 view .LVU130
 441              	.LBB285:
 105:src/keys.c    **** 	State2.shifts = shift;
 442              		.loc 1 105 2 view .LVU131
 443              	.LBB286:
 444              	.LBI286:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 445              		.loc 1 96 13 view .LVU132
 446              	.LBB287:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 447              		.loc 1 97 2 view .LVU133
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 448              		.loc 1 97 18 is_stmt 0 view .LVU134
 449 0034 FFF7FEFF 		bl	shift_down
 450              	.LVL38:
  98:src/keys.c    **** }
 451              		.loc 1 98 2 is_stmt 1 view .LVU135
 452              	.LBE287:
 453              	.LBE286:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 454              		.loc 1 106 2 view .LVU136
ARM GAS  /tmp/cc8xFAqJ.s 			page 62


 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 455              		.loc 1 106 16 is_stmt 0 view .LVU137
 456 0038 0023     		movs	r3, #0
 457 003a 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 458              		.loc 1 108 2 is_stmt 1 view .LVU138
 459              	.LVL39:
 108:src/keys.c    **** }
 460              		.loc 1 108 2 is_stmt 0 view .LVU139
 461              	.LBE285:
 462              	.LBE284:
 463              	.LBE300:
 610:src/keys.c    **** 
 464              		.loc 1 610 1 view .LVU140
 465 003c 38BD     		pop	{r3, r4, r5, pc}
 466              	.LVL40:
 467              	.L40:
 571:src/keys.c    **** 
 468              		.loc 1 571 2 is_stmt 1 view .LVU141
 469 003e FFF7FEFF 		bl	process_cmdline
 470              	.LVL41:
 573:src/keys.c    **** 	State2.registerlist = 0;
 471              		.loc 1 573 2 view .LVU142
 574:src/keys.c    **** 	State2.status = 0;
 472              		.loc 1 574 2 view .LVU143
 573:src/keys.c    **** 	State2.registerlist = 0;
 473              		.loc 1 573 19 is_stmt 0 view .LVU144
 474 0042 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 475              		.loc 1 575 16 view .LVU145
 476 0044 0022     		movs	r2, #0
 573:src/keys.c    **** 	State2.registerlist = 0;
 477              		.loc 1 573 19 view .LVU146
 478 0046 23F00C03 		bic	r3, r3, #12
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 479              		.loc 1 578 2 view .LVU147
 480 004a 162D     		cmp	r5, #22
 573:src/keys.c    **** 	State2.registerlist = 0;
 481              		.loc 1 573 19 view .LVU148
 482 004c E375     		strb	r3, [r4, #23]
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 483              		.loc 1 575 2 is_stmt 1 view .LVU149
 575:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 484              		.loc 1 575 16 is_stmt 0 view .LVU150
 485 004e 2273     		strb	r2, [r4, #12]
 576:src/keys.c    **** 
 486              		.loc 1 576 2 is_stmt 1 view .LVU151
 576:src/keys.c    **** 
 487              		.loc 1 576 19 is_stmt 0 view .LVU152
 488 0050 A273     		strb	r2, [r4, #14]
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 489              		.loc 1 578 2 is_stmt 1 view .LVU153
 490 0052 1BD0     		beq	.L42
 491 0054 172D     		cmp	r5, #23
 492 0056 06D1     		bne	.L56
 594:src/keys.c    **** 		break;
 493              		.loc 1 594 3 view .LVU154
ARM GAS  /tmp/cc8xFAqJ.s 			page 63


 594:src/keys.c    **** 		break;
 494              		.loc 1 594 17 is_stmt 0 view .LVU155
 495 0058 0123     		movs	r3, #1
 496 005a 2373     		strb	r3, [r4, #12]
 595:src/keys.c    **** 
 497              		.loc 1 595 3 is_stmt 1 view .LVU156
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 498              		.loc 1 606 2 view .LVU157
 499              	.LBB301:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 500              		.loc 1 114 13 view .LVU158
 501              	.LBE301:
 115:src/keys.c    **** }
 502              		.loc 1 115 2 view .LVU159
 503              	.LVL42:
 504              	.LBB302:
 505              	.LBB297:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 506              		.loc 1 104 20 view .LVU160
 507              	.LBB294:
 105:src/keys.c    **** 	State2.shifts = shift;
 508              		.loc 1 105 2 view .LVU161
 509              	.LBB291:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 510              		.loc 1 96 13 view .LVU162
 511              	.LBB288:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 512              		.loc 1 97 2 view .LVU163
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 513              		.loc 1 97 18 is_stmt 0 view .LVU164
 514 005c FFF7FEFF 		bl	shift_down
 515              	.LVL43:
  98:src/keys.c    **** }
 516              		.loc 1 98 2 is_stmt 1 view .LVU165
 517              	.LBE288:
 518              	.LBE291:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 519              		.loc 1 106 2 view .LVU166
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 520              		.loc 1 106 16 is_stmt 0 view .LVU167
 521 0060 0023     		movs	r3, #0
 522 0062 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 523              		.loc 1 108 2 is_stmt 1 view .LVU168
 524              	.LVL44:
 108:src/keys.c    **** }
 525              		.loc 1 108 2 is_stmt 0 view .LVU169
 526              	.LBE294:
 527              	.LBE297:
 528              	.LBE302:
 610:src/keys.c    **** 
 529              		.loc 1 610 1 view .LVU170
 530 0064 38BD     		pop	{r3, r4, r5, pc}
 531              	.L56:
 578:src/keys.c    **** 	case CATALOGUE_LABELS:
 532              		.loc 1 578 2 view .LVU171
 533 0066 152D     		cmp	r5, #21
ARM GAS  /tmp/cc8xFAqJ.s 			page 64


 534 0068 1CD1     		bne	.L44
 581:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 535              		.loc 1 581 3 is_stmt 1 view .LVU172
 582:src/keys.c    **** 		break;
 536              		.loc 1 582 41 is_stmt 0 view .LVU173
 537 006a 1F49     		ldr	r1, .L58+4
 581:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 538              		.loc 1 581 20 view .LVU174
 539 006c DBB2     		uxtb	r3, r3
 582:src/keys.c    **** 		break;
 540              		.loc 1 582 41 view .LVU175
 541 006e 0968     		ldr	r1, [r1]
 581:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 542              		.loc 1 581 20 view .LVU176
 543 0070 43F00403 		orr	r3, r3, #4
 544 0074 E375     		strb	r3, [r4, #23]
 582:src/keys.c    **** 		break;
 545              		.loc 1 582 3 is_stmt 1 view .LVU177
 582:src/keys.c    **** 		break;
 546              		.loc 1 582 19 is_stmt 0 view .LVU178
 547 0076 B1F8EC07 		ldrh	r0, [r1, #2028]
 548 007a 1146     		mov	r1, r2
 549 007c FFF7FEFF 		bl	advance_to_next_label
 550              	.LVL45:
 582:src/keys.c    **** 		break;
 551              		.loc 1 582 17 view .LVU179
 552 0080 2081     		strh	r0, [r4, #8]	@ movhi
 583:src/keys.c    **** 	
 553              		.loc 1 583 3 is_stmt 1 view .LVU180
 554              	.L45:
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 555              		.loc 1 606 2 view .LVU181
 556              	.LBB303:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 557              		.loc 1 114 13 view .LVU182
 558              	.LBE303:
 115:src/keys.c    **** }
 559              		.loc 1 115 2 view .LVU183
 560              	.LVL46:
 561              	.LBB304:
 562              	.LBB298:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 563              		.loc 1 104 20 view .LVU184
 564              	.LBB295:
 105:src/keys.c    **** 	State2.shifts = shift;
 565              		.loc 1 105 2 view .LVU185
 566              	.LBB292:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 567              		.loc 1 96 13 view .LVU186
 568              	.LBB289:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 569              		.loc 1 97 2 view .LVU187
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 570              		.loc 1 97 18 is_stmt 0 view .LVU188
 571 0082 FFF7FEFF 		bl	shift_down
 572              	.LVL47:
  98:src/keys.c    **** }
ARM GAS  /tmp/cc8xFAqJ.s 			page 65


 573              		.loc 1 98 2 is_stmt 1 view .LVU189
 574              	.LBE289:
 575              	.LBE292:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 576              		.loc 1 106 2 view .LVU190
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 577              		.loc 1 106 16 is_stmt 0 view .LVU191
 578 0086 0023     		movs	r3, #0
 579 0088 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 580              		.loc 1 108 2 is_stmt 1 view .LVU192
 581              	.LVL48:
 108:src/keys.c    **** }
 582              		.loc 1 108 2 is_stmt 0 view .LVU193
 583              	.LBE295:
 584              	.LBE298:
 585              	.LBE304:
 610:src/keys.c    **** 
 586              		.loc 1 610 1 view .LVU194
 587 008a 38BD     		pop	{r3, r4, r5, pc}
 588              	.L42:
 587:src/keys.c    **** 		State2.digval = regX_idx;
 589              		.loc 1 587 3 is_stmt 1 view .LVU195
 587:src/keys.c    **** 		State2.digval = regX_idx;
 590              		.loc 1 587 23 is_stmt 0 view .LVU196
 591 008c E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 589:src/keys.c    **** 		break;
 592              		.loc 1 589 18 view .LVU197
 593 008e A272     		strb	r2, [r4, #10]
 587:src/keys.c    **** 		State2.digval = regX_idx;
 594              		.loc 1 587 23 view .LVU198
 595 0090 43F00803 		orr	r3, r3, #8
 588:src/keys.c    **** 		State2.digval2 = 0;
 596              		.loc 1 588 17 view .LVU199
 597 0094 6422     		movs	r2, #100
 587:src/keys.c    **** 		State2.digval = regX_idx;
 598              		.loc 1 587 23 view .LVU200
 599 0096 E375     		strb	r3, [r4, #23]
 588:src/keys.c    **** 		State2.digval2 = 0;
 600              		.loc 1 588 3 is_stmt 1 view .LVU201
 588:src/keys.c    **** 		State2.digval2 = 0;
 601              		.loc 1 588 17 is_stmt 0 view .LVU202
 602 0098 2281     		strh	r2, [r4, #8]	@ movhi
 589:src/keys.c    **** 		break;
 603              		.loc 1 589 3 is_stmt 1 view .LVU203
 590:src/keys.c    **** 
 604              		.loc 1 590 3 view .LVU204
 606:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 605              		.loc 1 606 2 view .LVU205
 606              	.LBB305:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 607              		.loc 1 114 13 view .LVU206
 608              	.LBE305:
 115:src/keys.c    **** }
 609              		.loc 1 115 2 view .LVU207
 610              	.LVL49:
 611              	.LBB306:
ARM GAS  /tmp/cc8xFAqJ.s 			page 66


 612              	.LBB299:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 613              		.loc 1 104 20 view .LVU208
 614              	.LBB296:
 105:src/keys.c    **** 	State2.shifts = shift;
 615              		.loc 1 105 2 view .LVU209
 616              	.LBB293:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 617              		.loc 1 96 13 view .LVU210
 618              	.LBB290:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 619              		.loc 1 97 2 view .LVU211
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 620              		.loc 1 97 18 is_stmt 0 view .LVU212
 621 009a FFF7FEFF 		bl	shift_down
 622              	.LVL50:
  98:src/keys.c    **** }
 623              		.loc 1 98 2 is_stmt 1 view .LVU213
 624              	.LBE290:
 625              	.LBE293:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 626              		.loc 1 106 2 view .LVU214
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 627              		.loc 1 106 16 is_stmt 0 view .LVU215
 628 009e 0023     		movs	r3, #0
 629 00a0 2374     		strb	r3, [r4, #16]
 108:src/keys.c    **** }
 630              		.loc 1 108 2 is_stmt 1 view .LVU216
 631              	.LVL51:
 108:src/keys.c    **** }
 632              		.loc 1 108 2 is_stmt 0 view .LVU217
 633              	.LBE296:
 634              	.LBE299:
 635              	.LBE306:
 610:src/keys.c    **** 
 636              		.loc 1 610 1 view .LVU218
 637 00a2 38BD     		pop	{r3, r4, r5, pc}
 638              	.L44:
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 639              		.loc 1 599 3 is_stmt 1 view .LVU219
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 640              		.loc 1 600 44 is_stmt 0 view .LVU220
 641 00a4 022D     		cmp	r5, #2
 599:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 642              		.loc 1 599 20 view .LVU221
 643 00a6 A573     		strb	r5, [r4, #14]
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 644              		.loc 1 600 3 is_stmt 1 view .LVU222
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 645              		.loc 1 600 44 is_stmt 0 view .LVU223
 646 00a8 12D1     		bne	.L57
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 647              		.loc 1 600 16 view .LVU224
 648 00aa 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 649 00ac 43F00203 		orr	r3, r3, #2
 650 00b0 6375     		strb	r3, [r4, #21]
 601:src/keys.c    **** 			// Different catalogue, reset position
ARM GAS  /tmp/cc8xFAqJ.s 			page 67


 651              		.loc 1 601 3 is_stmt 1 view .LVU225
 652              	.L49:
 601:src/keys.c    **** 			// Different catalogue, reset position
 653              		.loc 1 601 32 is_stmt 0 discriminator 1 view .LVU226
 654 00b2 0D4B     		ldr	r3, .L58+4
 655 00b4 1A68     		ldr	r2, [r3]
 601:src/keys.c    **** 			// Different catalogue, reset position
 656              		.loc 1 601 37 discriminator 1 view .LVU227
 657 00b6 92F8DC37 		ldrb	r3, [r2, #2012]	@ zero_extendqisi2
 601:src/keys.c    **** 			// Different catalogue, reset position
 658              		.loc 1 601 29 discriminator 1 view .LVU228
 659 00ba 03F01F03 		and	r3, r3, #31
 660 00be AB42     		cmp	r3, r5
 661 00c0 DFD0     		beq	.L45
 603:src/keys.c    **** 		}
 662              		.loc 1 603 4 is_stmt 1 view .LVU229
 603:src/keys.c    **** 		}
 663              		.loc 1 603 17 is_stmt 0 view .LVU230
 664 00c2 B2F8DC37 		ldrh	r3, [r2, #2012]
 665 00c6 6FF34B13 		bfc	r3, #5, #7
 666 00ca A2F8DC37 		strh	r3, [r2, #2012]	@ movhi
 667 00ce D8E7     		b	.L45
 668              	.L57:
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 669              		.loc 1 600 44 view .LVU231
 670 00d0 A5F11101 		sub	r1, r5, #17
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 671              		.loc 1 600 16 view .LVU232
 672 00d4 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 673              		.loc 1 600 44 view .LVU233
 674 00d6 4A42     		rsbs	r2, r1, #0
 675 00d8 4A41     		adcs	r2, r2, r1
 600:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 676              		.loc 1 600 16 view .LVU234
 677 00da 62F34103 		bfi	r3, r2, #1, #1
 678 00de 6375     		strb	r3, [r4, #21]
 601:src/keys.c    **** 			// Different catalogue, reset position
 679              		.loc 1 601 3 is_stmt 1 view .LVU235
 680 00e0 E7E7     		b	.L49
 681              	.L59:
 682 00e2 00BF     		.align	2
 683              	.L58:
 684 00e4 00000000 		.word	StateWhileOn
 685 00e8 00000000 		.word	main_ram
 686              		.cfi_endproc
 687              	.LFE12:
 689              		.section	.text.advance_to_previous_label,"ax",%progbits
 690              		.align	1
 691              		.p2align 2,,3
 692              		.syntax unified
 693              		.thumb
 694              		.thumb_func
 695              		.fpu fpv4-sp-d16
 697              	advance_to_previous_label:
 698              	.LVL52:
 699              	.LFB56:
ARM GAS  /tmp/cc8xFAqJ.s 			page 68


2950:src/keys.c    **** 
2951:src/keys.c    **** static unsigned int advance_to_previous_label(unsigned int pc, int search_end) {
 700              		.loc 1 2951 80 view -0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704              		.loc 1 2951 80 is_stmt 0 view .LVU237
 705 0000 70B5     		push	{r4, r5, r6, lr}
 706              		.cfi_def_cfa_offset 16
 707              		.cfi_offset 4, -16
 708              		.cfi_offset 5, -12
 709              		.cfi_offset 6, -8
 710              		.cfi_offset 14, -4
 711 0002 124E     		ldr	r6, .L69
 712              		.loc 1 2951 80 view .LVU238
 713 0004 0446     		mov	r4, r0
 714 0006 0D46     		mov	r5, r1
 715              	.LVL53:
 716              	.L61:
2952:src/keys.c    **** 	do {
 717              		.loc 1 2952 2 is_stmt 1 view .LVU239
2953:src/keys.c    **** 		for (;;) {
 718              		.loc 1 2953 3 view .LVU240
2954:src/keys.c    **** 			pc = do_dec(pc, 0);
 719              		.loc 1 2954 4 view .LVU241
 720              		.loc 1 2954 9 is_stmt 0 view .LVU242
 721 0008 2046     		mov	r0, r4
 722 000a 0021     		movs	r1, #0
 723 000c FFF7FEFF 		bl	do_dec
 724              	.LVL54:
2955:src/keys.c    **** 			if (PcWrapped)
2956:src/keys.c    **** 				break;
2957:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 725              		.loc 1 2957 4 is_stmt 1 view .LVU243
2958:src/keys.c    **** 				return pc;
2959:src/keys.c    **** 			}
2960:src/keys.c    **** 		}
2961:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) - 1) & 3);
 726              		.loc 1 2961 3 view .LVU244
 727              		.loc 1 2961 8 is_stmt 0 view .LVU245
 728 0010 20F47F53 		bic	r3, r0, #16320
 729 0014 23F03F03 		bic	r3, r3, #63
2955:src/keys.c    **** 			if (PcWrapped)
 730              		.loc 1 2955 7 view .LVU246
 731 0018 3268     		ldr	r2, [r6]
 732              		.loc 1 2961 8 view .LVU247
 733 001a A3F58043 		sub	r3, r3, #16384
2962:src/keys.c    **** 		pc = do_dec(pc, 0);
 734              		.loc 1 2962 8 view .LVU248
 735 001e 0021     		movs	r1, #0
2954:src/keys.c    **** 			if (PcWrapped)
 736              		.loc 1 2954 9 view .LVU249
 737 0020 0446     		mov	r4, r0
 738              	.LVL55:
2955:src/keys.c    **** 				break;
 739              		.loc 1 2955 4 is_stmt 1 view .LVU250
2961:src/keys.c    **** 		pc = do_dec(pc, 0);
ARM GAS  /tmp/cc8xFAqJ.s 			page 69


 740              		.loc 1 2961 8 is_stmt 0 view .LVU251
 741 0022 9BB2     		uxth	r3, r3
 742              	.LVL56:
 743              		.loc 1 2962 3 is_stmt 1 view .LVU252
2955:src/keys.c    **** 				break;
 744              		.loc 1 2955 7 is_stmt 0 view .LVU253
 745 0024 32B9     		cbnz	r2, .L62
2957:src/keys.c    **** 				return pc;
 746              		.loc 1 2957 8 view .LVU254
 747 0026 2946     		mov	r1, r5
 748 0028 FFF7FEFF 		bl	is_label_or_end_at
 749              	.LVL57:
2957:src/keys.c    **** 				return pc;
 750              		.loc 1 2957 7 view .LVU255
 751 002c 0028     		cmp	r0, #0
 752 002e EBD0     		beq	.L61
2963:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
2964:src/keys.c    **** 	return pc;
2965:src/keys.c    **** }
 753              		.loc 1 2965 1 view .LVU256
 754 0030 2046     		mov	r0, r4
 755 0032 70BD     		pop	{r4, r5, r6, pc}
 756              	.LVL58:
 757              	.L62:
2962:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 758              		.loc 1 2962 8 view .LVU257
 759 0034 43F00100 		orr	r0, r3, #1
 760 0038 FFF7FEFF 		bl	do_dec
 761              	.LVL59:
2963:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 762              		.loc 1 2963 13 view .LVU258
 763 003c 2946     		mov	r1, r5
2962:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 764              		.loc 1 2962 8 view .LVU259
 765 003e 0446     		mov	r4, r0
 766              	.LVL60:
2963:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 767              		.loc 1 2963 10 is_stmt 1 view .LVU260
2963:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 768              		.loc 1 2963 13 is_stmt 0 view .LVU261
 769 0040 FFF7FEFF 		bl	is_label_or_end_at
 770              	.LVL61:
2963:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 771              		.loc 1 2963 2 view .LVU262
 772 0044 0028     		cmp	r0, #0
 773 0046 DFD0     		beq	.L61
 774              		.loc 1 2965 1 view .LVU263
 775 0048 2046     		mov	r0, r4
 776 004a 70BD     		pop	{r4, r5, r6, pc}
 777              	.LVL62:
 778              	.L70:
 779              		.loc 1 2965 1 view .LVU264
 780              		.align	2
 781              	.L69:
 782 004c 00000000 		.word	PcWrapped
 783              		.cfi_endproc
 784              	.LFE56:
ARM GAS  /tmp/cc8xFAqJ.s 			page 70


 786              		.section	.text.check_confirm.part.0,"ax",%progbits
 787              		.align	1
 788              		.p2align 2,,3
 789              		.syntax unified
 790              		.thumb
 791              		.thumb_func
 792              		.fpu fpv4-sp-d16
 794              	check_confirm.part.0:
 795              	.LVL63:
 796              	.LFB64:
 704:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 797              		.loc 1 704 12 is_stmt 1 view -0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801              		@ link register save eliminated.
 802              	.LBB307:
 706:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 803              		.loc 1 706 3 view .LVU266
 707:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 804              		.loc 1 707 3 view .LVU267
 706:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 805              		.loc 1 706 13 is_stmt 0 view .LVU268
 806 0000 C3B2     		uxtb	r3, r0
 707:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 807              		.loc 1 707 25 view .LVU269
 808 0002 A3F14102 		sub	r2, r3, #65
 707:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 809              		.loc 1 707 6 view .LVU270
 810 0006 032A     		cmp	r2, #3
 811 0008 06D9     		bls	.L74
 715:src/keys.c    **** #endif
 812              		.loc 1 715 7 is_stmt 1 view .LVU271
 715:src/keys.c    **** #endif
 813              		.loc 1 715 29 is_stmt 0 view .LVU272
 814 000a AD3B     		subs	r3, r3, #173
 715:src/keys.c    **** #endif
 815              		.loc 1 715 10 view .LVU273
 816 000c 052B     		cmp	r3, #5
 817 000e 02D8     		bhi	.L73
 725:src/keys.c    **** 		}
 818              		.loc 1 725 4 is_stmt 1 view .LVU274
 725:src/keys.c    **** 		}
 819              		.loc 1 725 20 is_stmt 0 view .LVU275
 820 0010 054B     		ldr	r3, .L75
 821 0012 0122     		movs	r2, #1
 822 0014 1A60     		str	r2, [r3]
 823              	.L73:
 824              	.LBE307:
 729:src/keys.c    **** 
 825              		.loc 1 729 1 view .LVU276
 826 0016 7047     		bx	lr
 827              	.L74:
 828              	.LBB308:
 708:src/keys.c    **** 			return STATE_UNFINISHED;
 829              		.loc 1 708 4 is_stmt 1 view .LVU277
 708:src/keys.c    **** 			return STATE_UNFINISHED;
ARM GAS  /tmp/cc8xFAqJ.s 			page 71


 830              		.loc 1 708 19 is_stmt 0 view .LVU278
 831 0018 044B     		ldr	r3, .L75+4
 832 001a 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
 708:src/keys.c    **** 			return STATE_UNFINISHED;
 833              		.loc 1 708 35 view .LVU279
 834 001c 4038     		subs	r0, r0, #64
 835              	.LVL64:
 708:src/keys.c    **** 			return STATE_UNFINISHED;
 836              		.loc 1 708 19 view .LVU280
 837 001e 60F30202 		bfi	r2, r0, #0, #3
 838 0022 1A75     		strb	r2, [r3, #20]
 709:src/keys.c    **** 		}
 839              		.loc 1 709 4 is_stmt 1 view .LVU281
 709:src/keys.c    **** 		}
 840              		.loc 1 709 11 is_stmt 0 view .LVU282
 841 0024 3320     		movs	r0, #51
 842              	.LVL65:
 709:src/keys.c    **** 		}
 843              		.loc 1 709 11 view .LVU283
 844 0026 7047     		bx	lr
 845              	.L76:
 846              		.align	2
 847              	.L75:
 848 0028 00000000 		.word	NonProgrammable
 849 002c 00000000 		.word	StateWhileOn
 850              	.LBE308:
 851              		.cfi_endproc
 852              	.LFE64:
 854              		.section	.text.init_arg.part.0,"ax",%progbits
 855              		.align	1
 856              		.p2align 2,,3
 857              		.syntax unified
 858              		.thumb
 859              		.thumb_func
 860              		.fpu fpv4-sp-d16
 862              	init_arg.part.0:
 863              	.LVL66:
 864              	.LFB66:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 865              		.loc 1 552 13 is_stmt 1 view -0
 866              		.cfi_startproc
 867              		@ args = 0, pretend = 0, frame = 0
 868              		@ frame_needed = 0, uses_anonymous_args = 0
 869              		@ link register save eliminated.
 555:src/keys.c    **** 	State2.ind = 0;
 870              		.loc 1 555 2 view .LVU285
 555:src/keys.c    **** 	State2.ind = 0;
 871              		.loc 1 555 10 is_stmt 0 view .LVU286
 872 0000 084B     		ldr	r3, .L78
 560:src/keys.c    **** 	State2.local = 0;
 873              		.loc 1 560 13 view .LVU287
 874 0002 5969     		ldr	r1, [r3, #20]
 555:src/keys.c    **** 	State2.ind = 0;
 875              		.loc 1 555 10 view .LVU288
 876 0004 D877     		strb	r0, [r3, #31]
 556:src/keys.c    **** 	State2.digval = 0;
 877              		.loc 1 556 2 is_stmt 1 view .LVU289
ARM GAS  /tmp/cc8xFAqJ.s 			page 72


 557:src/keys.c    **** 	State2.numdigit = 0;
 878              		.loc 1 557 2 view .LVU290
 560:src/keys.c    **** 	State2.local = 0;
 879              		.loc 1 560 13 is_stmt 0 view .LVU291
 880 0006 21F40F11 		bic	r1, r1, #2342912
 881 000a 8628     		cmp	r0, #134
 882 000c 0CBF     		ite	eq
 883 000e 4FF40812 		moveq	r2, #2228224
 884 0012 4FF40012 		movne	r2, #2097152
 885 0016 0A43     		orrs	r2, r2, r1
 557:src/keys.c    **** 	State2.numdigit = 0;
 886              		.loc 1 557 16 view .LVU292
 887 0018 0021     		movs	r1, #0
 560:src/keys.c    **** 	State2.local = 0;
 888              		.loc 1 560 13 view .LVU293
 889 001a 5A61     		str	r2, [r3, #20]
 557:src/keys.c    **** 	State2.numdigit = 0;
 890              		.loc 1 557 16 view .LVU294
 891 001c 1981     		strh	r1, [r3, #8]	@ movhi
 558:src/keys.c    **** 	State2.rarg = 1;
 892              		.loc 1 558 2 is_stmt 1 view .LVU295
 558:src/keys.c    **** 	State2.rarg = 1;
 893              		.loc 1 558 18 is_stmt 0 view .LVU296
 894 001e D972     		strb	r1, [r3, #11]
 559:src/keys.c    **** 	State2.dot = 0;
 895              		.loc 1 559 2 is_stmt 1 view .LVU297
 560:src/keys.c    **** 	State2.local = 0;
 896              		.loc 1 560 2 view .LVU298
 561:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 897              		.loc 1 561 2 view .LVU299
 562:src/keys.c    **** }
 898              		.loc 1 562 2 view .LVU300
 563:src/keys.c    **** 
 899              		.loc 1 563 1 is_stmt 0 view .LVU301
 900 0020 7047     		bx	lr
 901              	.L79:
 902 0022 00BF     		.align	2
 903              	.L78:
 904 0024 00000000 		.word	StateWhileOn
 905              		.cfi_endproc
 906              	.LFE66:
 908              		.section	.text.reset_arg,"ax",%progbits
 909              		.align	1
 910              		.p2align 2,,3
 911              		.syntax unified
 912              		.thumb
 913              		.thumb_func
 914              		.fpu fpv4-sp-d16
 916              	reset_arg:
 917              	.LFB34:
1877:src/keys.c    **** 	init_arg((enum rarg) 0);
 918              		.loc 1 1877 29 is_stmt 1 view -0
 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 0
 921              		@ frame_needed = 0, uses_anonymous_args = 0
1878:src/keys.c    **** 	State2.rarg = 0;
 922              		.loc 1 1878 2 view .LVU303
ARM GAS  /tmp/cc8xFAqJ.s 			page 73


 923              	.LVL67:
 924              	.LBB309:
 925              	.LBI309:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 926              		.loc 1 552 13 view .LVU304
 927              	.LBB310:
 553:src/keys.c    **** 		return;
 928              		.loc 1 553 2 view .LVU305
 929              	.LBE310:
 930              	.LBE309:
1877:src/keys.c    **** 	init_arg((enum rarg) 0);
 931              		.loc 1 1877 29 is_stmt 0 view .LVU306
 932 0000 08B5     		push	{r3, lr}
 933              		.cfi_def_cfa_offset 8
 934              		.cfi_offset 3, -8
 935              		.cfi_offset 14, -4
 936              	.LBB312:
 937              	.LBB311:
 553:src/keys.c    **** 		return;
 938              		.loc 1 553 6 view .LVU307
 939 0002 FFF7FEFF 		bl	is_bad_cmdline
 940              	.LVL68:
 553:src/keys.c    **** 		return;
 941              		.loc 1 553 5 view .LVU308
 942 0006 08B9     		cbnz	r0, .L81
 943 0008 FFF7FEFF 		bl	init_arg.part.0
 944              	.LVL69:
 945              	.L81:
 553:src/keys.c    **** 		return;
 946              		.loc 1 553 5 view .LVU309
 947              	.LBE311:
 948              	.LBE312:
1879:src/keys.c    **** }
 949              		.loc 1 1879 2 is_stmt 1 view .LVU310
1879:src/keys.c    **** }
 950              		.loc 1 1879 14 is_stmt 0 view .LVU311
 951 000c 024B     		ldr	r3, .L83
 952 000e 9A7D     		ldrb	r2, [r3, #22]	@ zero_extendqisi2
 953 0010 6FF34512 		bfc	r2, #5, #1
 954 0014 9A75     		strb	r2, [r3, #22]
1880:src/keys.c    **** 
 955              		.loc 1 1880 1 view .LVU312
 956 0016 08BD     		pop	{r3, pc}
 957              	.L84:
 958              		.align	2
 959              	.L83:
 960 0018 00000000 		.word	StateWhileOn
 961              		.cfi_endproc
 962              	.LFE34:
 964              		.section	.text.arg_eval,"ax",%progbits
 965              		.align	1
 966              		.p2align 2,,3
 967              		.syntax unified
 968              		.thumb
 969              		.thumb_func
 970              		.fpu fpv4-sp-d16
 972              	arg_eval:
ARM GAS  /tmp/cc8xFAqJ.s 			page 74


 973              	.LVL70:
 974              	.LFB35:
1882:src/keys.c    ****    const unsigned int base = CmdBase;
 975              		.loc 1 1882 40 is_stmt 1 view -0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 0
 978              		@ frame_needed = 0, uses_anonymous_args = 0
1883:src/keys.c    ****    int r = RARG(base, val 
 979              		.loc 1 1883 4 view .LVU314
1882:src/keys.c    ****    const unsigned int base = CmdBase;
 980              		.loc 1 1882 40 is_stmt 0 view .LVU315
 981 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 982              		.cfi_def_cfa_offset 24
 983              		.cfi_offset 3, -24
 984              		.cfi_offset 4, -20
 985              		.cfi_offset 5, -16
 986              		.cfi_offset 6, -12
 987              		.cfi_offset 7, -8
 988              		.cfi_offset 14, -4
1883:src/keys.c    ****    int r = RARG(base, val 
 989              		.loc 1 1883 30 view .LVU316
 990 0002 234B     		ldr	r3, .L109
1884:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 991              		.loc 1 1884 12 view .LVU317
 992 0004 9D7D     		ldrb	r5, [r3, #22]	@ zero_extendqisi2
 993 0006 597D     		ldrb	r1, [r3, #21]	@ zero_extendqisi2
1883:src/keys.c    ****    int r = RARG(base, val 
 994              		.loc 1 1883 23 view .LVU318
 995 0008 DA7F     		ldrb	r2, [r3, #31]	@ zero_extendqisi2
 996              	.LVL71:
1884:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 997              		.loc 1 1884 4 is_stmt 1 view .LVU319
1884:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 998              		.loc 1 1884 12 is_stmt 0 view .LVU320
 999 000a EE07     		lsls	r6, r5, #31
1887:src/keys.c    **** 
 1000              		.loc 1 1887 34 view .LVU321
 1001 000c 214E     		ldr	r6, .L109+4
 1002 000e 3668     		ldr	r6, [r6]
1884:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1003              		.loc 1 1884 12 view .LVU322
 1004 0010 01F08003 		and	r3, r1, #128
1887:src/keys.c    **** 
 1005              		.loc 1 1887 32 view .LVU323
 1006 0014 96F8EA77 		ldrb	r7, [r6, #2026]	@ zero_extendqisi2
1884:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1007              		.loc 1 1884 12 view .LVU324
 1008 0018 0344     		add	r3, r3, r0
 1009 001a 02F12004 		add	r4, r2, #32
 1010 001e 48BF     		it	mi
 1011 0020 7033     		addmi	r3, r3, #112
 1012 0022 2402     		lsls	r4, r4, #8
1887:src/keys.c    **** 
 1013              		.loc 1 1887 79 view .LVU325
 1014 0024 3F07     		lsls	r7, r7, #28
1884:src/keys.c    **** 		+ (State2.ind ? RARG_IND : 0) 
 1015              		.loc 1 1884 12 view .LVU326
ARM GAS  /tmp/cc8xFAqJ.s 			page 75


 1016 0026 44EA0304 		orr	r4, r4, r3
 1017              	.LVL72:
1887:src/keys.c    **** 
 1018              		.loc 1 1887 4 is_stmt 1 view .LVU327
1887:src/keys.c    **** 
 1019              		.loc 1 1887 79 is_stmt 0 view .LVU328
 1020 002a 25D5     		bpl	.L92
1887:src/keys.c    **** 
 1021              		.loc 1 1887 79 discriminator 2 view .LVU329
 1022 002c 15F0400F 		tst	r5, #64
 1023 0030 0CBF     		ite	eq
 1024 0032 0425     		moveq	r5, #4
 1025 0034 0825     		movne	r5, #8
 1026              	.L87:
 1027              	.LVL73:
1889:src/keys.c    ****      /*
 1028              		.loc 1 1889 4 is_stmt 1 discriminator 6 view .LVU330
1889:src/keys.c    ****      /*
 1029              		.loc 1 1889 7 is_stmt 0 discriminator 6 view .LVU331
 1030 0036 0B06     		lsls	r3, r1, #24
 1031 0038 1AD4     		bmi	.L88
1905:src/keys.c    ****        if (C_LOCKED) {
 1032              		.loc 1 1905 6 is_stmt 1 view .LVU332
1905:src/keys.c    ****        if (C_LOCKED) {
 1033              		.loc 1 1905 23 is_stmt 0 view .LVU333
 1034 003a 174B     		ldr	r3, .L109+8
 1035 003c 03EB0213 		add	r3, r3, r2, lsl #4
 1036 0040 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
1905:src/keys.c    ****        if (C_LOCKED) {
 1037              		.loc 1 1905 9 view .LVU334
 1038 0042 DF06     		lsls	r7, r3, #27
 1039 0044 10D5     		bpl	.L89
1905:src/keys.c    ****        if (C_LOCKED) {
 1040              		.loc 1 1905 55 discriminator 1 view .LVU335
 1041 0046 96F8AC37 		ldrb	r3, [r6, #1964]	@ zero_extendqisi2
 1042 004a 03F04103 		and	r3, r3, #65
1905:src/keys.c    ****        if (C_LOCKED) {
 1043              		.loc 1 1905 40 discriminator 1 view .LVU336
 1044 004e 412B     		cmp	r3, #65
 1045 0050 0CBF     		ite	eq
 1046 0052 0021     		moveq	r1, #0
 1047 0054 6221     		movne	r1, #98
1905:src/keys.c    ****        if (C_LOCKED) {
 1048              		.loc 1 1905 30 discriminator 1 view .LVU337
 1049 0056 8142     		cmp	r1, r0
 1050 0058 06D2     		bcs	.L89
1905:src/keys.c    ****        if (C_LOCKED) {
 1051              		.loc 1 1905 86 discriminator 6 view .LVU338
 1052 005a C107     		lsls	r1, r0, #31
 1053 005c 04D5     		bpl	.L89
1906:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
 1054              		.loc 1 1906 8 is_stmt 1 view .LVU339
1906:src/keys.c    **** 	 error_message(ERR_ODD_REG); // shows error message
 1055              		.loc 1 1906 11 is_stmt 0 view .LVU340
 1056 005e 412B     		cmp	r3, #65
 1057 0060 11D0     		beq	.L107
 1058              	.LVL74:
ARM GAS  /tmp/cc8xFAqJ.s 			page 76


 1059              	.L96:
1911:src/keys.c    ****        }
 1060              		.loc 1 1911 10 view .LVU341
 1061 0062 3324     		movs	r4, #51
 1062              	.LVL75:
1926:src/keys.c    **** 
 1063              		.loc 1 1926 2 view .LVU342
 1064 0064 2046     		mov	r0, r4
 1065              	.LVL76:
1926:src/keys.c    **** 
 1066              		.loc 1 1926 2 view .LVU343
 1067 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1068              	.LVL77:
 1069              	.L89:
1919:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1070              		.loc 1 1919 6 is_stmt 1 view .LVU344
1919:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1071              		.loc 1 1919 31 is_stmt 0 view .LVU345
 1072 0068 A2F12203 		sub	r3, r2, #34
1919:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1073              		.loc 1 1919 9 view .LVU346
 1074 006c 012B     		cmp	r3, #1
 1075 006e 05D9     		bls	.L108
 1076              	.LVL78:
 1077              	.L88:
1924:src/keys.c    ****    return r;
 1078              		.loc 1 1924 4 is_stmt 1 view .LVU347
 1079 0070 FFF7FEFF 		bl	reset_arg
 1080              	.LVL79:
1925:src/keys.c    ****  }
 1081              		.loc 1 1925 4 view .LVU348
 1082              	.L85:
1926:src/keys.c    **** 
 1083              		.loc 1 1926 2 is_stmt 0 view .LVU349
 1084 0074 2046     		mov	r0, r4
 1085 0076 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1086              	.LVL80:
 1087              	.L92:
1887:src/keys.c    **** 
 1088              		.loc 1 1887 79 view .LVU350
 1089 0078 0425     		movs	r5, #4
 1090 007a DCE7     		b	.L87
 1091              	.LVL81:
 1092              	.L108:
1919:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1093              		.loc 1 1919 76 discriminator 1 view .LVU351
 1094 007c C5F16405 		rsb	r5, r5, #100
 1095              	.LVL82:
1919:src/keys.c    ****        // Avoid stack clash for STOS/RCLS
 1096              		.loc 1 1919 55 discriminator 1 view .LVU352
 1097 0080 8542     		cmp	r5, r0
 1098 0082 F5D2     		bcs	.L88
 1099 0084 EDE7     		b	.L96
 1100              	.LVL83:
 1101              	.L107:
1907:src/keys.c    **** 	 return STATE_UNFINISHED; // either leaves arg blank (if EXIT pressed) or with one digit in (STO)
 1102              		.loc 1 1907 3 is_stmt 1 view .LVU353
ARM GAS  /tmp/cc8xFAqJ.s 			page 77


 1103 0086 1920     		movs	r0, #25
 1104              	.LVL84:
1907:src/keys.c    **** 	 return STATE_UNFINISHED; // either leaves arg blank (if EXIT pressed) or with one digit in (STO)
 1105              		.loc 1 1907 3 is_stmt 0 view .LVU354
 1106 0088 FFF7FEFF 		bl	error_message
 1107              	.LVL85:
1908:src/keys.c    ****        }
 1108              		.loc 1 1908 3 is_stmt 1 view .LVU355
1908:src/keys.c    ****        }
 1109              		.loc 1 1908 10 is_stmt 0 view .LVU356
 1110 008c 3324     		movs	r4, #51
 1111              	.LVL86:
1908:src/keys.c    ****        }
 1112              		.loc 1 1908 10 view .LVU357
 1113 008e F1E7     		b	.L85
 1114              	.L110:
 1115              		.align	2
 1116              	.L109:
 1117 0090 00000000 		.word	StateWhileOn
 1118 0094 00000000 		.word	main_ram
 1119 0098 00000000 		.word	argcmds
 1120              		.cfi_endproc
 1121              	.LFE35:
 1123              		.section	.text.arg_digit,"ax",%progbits
 1124              		.align	1
 1125              		.p2align 2,,3
 1126              		.syntax unified
 1127              		.thumb
 1128              		.thumb_func
 1129              		.fpu fpv4-sp-d16
 1131              	arg_digit:
 1132              	.LVL87:
 1133              	.LFB36:
1928:src/keys.c    **** 	int lim;
 1134              		.loc 1 1928 29 is_stmt 1 view -0
 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 8
 1137              		@ frame_needed = 0, uses_anonymous_args = 0
1929:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
 1138              		.loc 1 1929 2 view .LVU359
1931:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1139              		.loc 1 1931 2 view .LVU360
1928:src/keys.c    **** 	int lim;
 1140              		.loc 1 1928 29 is_stmt 0 view .LVU361
 1141 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1142              		.cfi_def_cfa_offset 20
 1143              		.cfi_offset 4, -20
 1144              		.cfi_offset 5, -16
 1145              		.cfi_offset 6, -12
 1146              		.cfi_offset 7, -8
 1147              		.cfi_offset 14, -4
1932:src/keys.c    **** #else
 1148              		.loc 1 1932 29 view .LVU362
 1149 0002 3E4D     		ldr	r5, .L158
1928:src/keys.c    **** 	int lim;
 1150              		.loc 1 1928 29 view .LVU363
 1151 0004 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/cc8xFAqJ.s 			page 78


 1152              		.cfi_def_cfa_offset 32
1928:src/keys.c    **** 	int lim;
 1153              		.loc 1 1928 29 view .LVU364
 1154 0006 0446     		mov	r4, r0
1931:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1155              		.loc 1 1931 17 view .LVU365
 1156 0008 01A8     		add	r0, sp, #4
 1157              	.LVL88:
1931:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
 1158              		.loc 1 1931 17 view .LVU366
 1159 000a FFF7FEFF 		bl	get_dispmode_digs
 1160              	.LVL89:
1932:src/keys.c    **** #else
 1161              		.loc 1 1932 29 view .LVU367
 1162 000e A97D     		ldrb	r1, [r5, #22]	@ zero_extendqisi2
 1163              	.LVL90:
1932:src/keys.c    **** #else
 1164              		.loc 1 1932 2 is_stmt 1 view .LVU368
 1165 0010 EE7F     		ldrb	r6, [r5, #31]	@ zero_extendqisi2
1932:src/keys.c    **** #else
 1166              		.loc 1 1932 130 is_stmt 0 view .LVU369
 1167 0012 11F0400C 		ands	ip, r1, #64
 1168 0016 01D0     		beq	.L114
1932:src/keys.c    **** #else
 1169              		.loc 1 1932 44 discriminator 2 view .LVU370
 1170 0018 502E     		cmp	r6, #80
 1171 001a 64D0     		beq	.L154
 1172              	.LVL91:
 1173              	.L114:
1936:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1174              		.loc 1 1936 2 is_stmt 1 discriminator 8 view .LVU371
1937:src/keys.c    **** 	
 1175              		.loc 1 1937 34 is_stmt 0 discriminator 8 view .LVU372
 1176 001c 384A     		ldr	r2, .L158+4
1936:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1177              		.loc 1 1936 33 discriminator 8 view .LVU373
 1178 001e 2B89     		ldrh	r3, [r5, #8]
1937:src/keys.c    **** 	
 1179              		.loc 1 1937 34 discriminator 8 view .LVU374
 1180 0020 02EB0612 		add	r2, r2, r6, lsl #4
1936:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1181              		.loc 1 1936 41 discriminator 8 view .LVU375
 1182 0024 03EB8303 		add	r3, r3, r3, lsl #2
1937:src/keys.c    **** 	
 1183              		.loc 1 1937 34 discriminator 8 view .LVU376
 1184 0028 5779     		ldrb	r7, [r2, #5]	@ zero_extendqisi2
1936:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1185              		.loc 1 1936 46 discriminator 8 view .LVU377
 1186 002a 04EB4304 		add	r4, r4, r3, lsl #1
 1187              	.LVL92:
1937:src/keys.c    **** 	
 1188              		.loc 1 1937 2 is_stmt 1 discriminator 8 view .LVU378
1937:src/keys.c    **** 	
 1189              		.loc 1 1937 39 is_stmt 0 discriminator 8 view .LVU379
 1190 002e BB07     		lsls	r3, r7, #30
 1191 0030 32D4     		bmi	.L153
1937:src/keys.c    **** 	
ARM GAS  /tmp/cc8xFAqJ.s 			page 79


 1192              		.loc 1 1937 39 discriminator 2 view .LVU380
 1193 0032 95F91530 		ldrsb	r3, [r5, #21]
 1194 0036 002B     		cmp	r3, #0
 1195 0038 2EDB     		blt	.L153
 1196              	.LVL93:
1939:src/keys.c    **** 		// Handle local registers and flags
 1197              		.loc 1 1939 2 is_stmt 1 view .LVU381
1939:src/keys.c    **** 		// Handle local registers and flags
 1198              		.loc 1 1939 5 is_stmt 0 view .LVU382
 1199 003a C907     		lsls	r1, r1, #31
 1200 003c 4BD5     		bpl	.L120
1941:src/keys.c    **** 		if (State2.runmode) {
 1201              		.loc 1 1941 3 is_stmt 1 view .LVU383
1941:src/keys.c    **** 		if (State2.runmode) {
 1202              		.loc 1 1941 7 is_stmt 0 view .LVU384
 1203 003e 0F23     		movs	r3, #15
 1204 0040 0193     		str	r3, [sp, #4]
1942:src/keys.c    **** 			if (LocalRegs == 0)
 1205              		.loc 1 1942 3 is_stmt 1 view .LVU385
1942:src/keys.c    **** 			if (LocalRegs == 0)
 1206              		.loc 1 1942 6 is_stmt 0 view .LVU386
 1207 0042 BCF1000F 		cmp	ip, #0
 1208 0046 05D0     		beq	.L123
1943:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1209              		.loc 1 1943 4 is_stmt 1 view .LVU387
1943:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1210              		.loc 1 1943 8 is_stmt 0 view .LVU388
 1211 0048 2E4B     		ldr	r3, .L158+8
 1212 004a 1B68     		ldr	r3, [r3]
1943:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1213              		.loc 1 1943 7 view .LVU389
 1214 004c B3F9DE37 		ldrsh	r3, [r3, #2014]
 1215 0050 002B     		cmp	r3, #0
 1216 0052 3DD0     		beq	.L125
 1217              	.LVL94:
 1218              	.L123:
1953:src/keys.c    **** 	else {
 1219              		.loc 1 1953 65 view .LVU390
 1220 0054 0F20     		movs	r0, #15
 1221              	.L122:
1959:src/keys.c    **** 		return STATE_UNFINISHED;
 1222              		.loc 1 1959 2 is_stmt 1 view .LVU391
1959:src/keys.c    **** 		return STATE_UNFINISHED;
 1223              		.loc 1 1959 5 is_stmt 0 view .LVU392
 1224 0056 8442     		cmp	r4, r0
 1225 0058 3ADC     		bgt	.L125
 1226              	.L157:
1962:src/keys.c    **** 	++State2.numdigit;
 1227              		.loc 1 1962 2 is_stmt 1 view .LVU393
1963:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1228              		.loc 1 1963 2 is_stmt 0 view .LVU394
 1229 005a EF7A     		ldrb	r7, [r5, #11]	@ zero_extendqisi2
1962:src/keys.c    **** 	++State2.numdigit;
 1230              		.loc 1 1962 16 view .LVU395
 1231 005c 2C81     		strh	r4, [r5, #8]	@ movhi
1963:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1232              		.loc 1 1963 2 is_stmt 1 view .LVU396
ARM GAS  /tmp/cc8xFAqJ.s 			page 80


 1233 005e 0137     		adds	r7, r7, #1
1964:src/keys.c    **** 		int result = arg_eval(val);
 1234              		.loc 1 1964 16 is_stmt 0 view .LVU397
 1235 0060 04EB8403 		add	r3, r4, r4, lsl #2
1963:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1236              		.loc 1 1963 2 view .LVU398
 1237 0064 FFB2     		uxtb	r7, r7
1964:src/keys.c    **** 		int result = arg_eval(val);
 1238              		.loc 1 1964 5 view .LVU399
 1239 0066 B0EB430F 		cmp	r0, r3, lsl #1
1963:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1240              		.loc 1 1963 2 view .LVU400
 1241 006a EF72     		strb	r7, [r5, #11]
1964:src/keys.c    **** 		int result = arg_eval(val);
 1242              		.loc 1 1964 2 is_stmt 1 view .LVU401
1964:src/keys.c    **** 		int result = arg_eval(val);
 1243              		.loc 1 1964 5 is_stmt 0 view .LVU402
 1244 006c 04DB     		blt	.L131
1964:src/keys.c    **** 		int result = arg_eval(val);
 1245              		.loc 1 1964 49 discriminator 1 view .LVU403
 1246 006e 3046     		mov	r0, r6
 1247 0070 FFF7FEFF 		bl	num_arg_digits
 1248              	.LVL95:
1964:src/keys.c    **** 		int result = arg_eval(val);
 1249              		.loc 1 1964 27 discriminator 1 view .LVU404
 1250 0074 8742     		cmp	r7, r0
 1251 0076 2BDB     		blt	.L125
 1252              	.L131:
 1253              	.LBB313:
1965:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1254              		.loc 1 1965 3 is_stmt 1 view .LVU405
1965:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1255              		.loc 1 1965 16 is_stmt 0 view .LVU406
 1256 0078 2046     		mov	r0, r4
 1257 007a FFF7FEFF 		bl	arg_eval
 1258              	.LVL96:
1966:src/keys.c    **** 			--State2.numdigit;
 1259              		.loc 1 1966 3 is_stmt 1 view .LVU407
1966:src/keys.c    **** 			--State2.numdigit;
 1260              		.loc 1 1966 6 is_stmt 0 view .LVU408
 1261 007e 3328     		cmp	r0, #51
 1262 0080 08D1     		bne	.L111
1967:src/keys.c    **** 			State2.digval /= 10;
 1263              		.loc 1 1967 4 is_stmt 1 view .LVU409
1968:src/keys.c    **** 		}
 1264              		.loc 1 1968 18 is_stmt 0 view .LVU410
 1265 0082 2B89     		ldrh	r3, [r5, #8]
 1266 0084 2049     		ldr	r1, .L158+12
1967:src/keys.c    **** 			State2.digval /= 10;
 1267              		.loc 1 1967 4 view .LVU411
 1268 0086 EA7A     		ldrb	r2, [r5, #11]	@ zero_extendqisi2
1968:src/keys.c    **** 		}
 1269              		.loc 1 1968 18 view .LVU412
 1270 0088 A1FB0313 		umull	r1, r3, r1, r3
 1271 008c DB08     		lsrs	r3, r3, #3
1967:src/keys.c    **** 			State2.digval /= 10;
 1272              		.loc 1 1967 4 view .LVU413
ARM GAS  /tmp/cc8xFAqJ.s 			page 81


 1273 008e 013A     		subs	r2, r2, #1
1968:src/keys.c    **** 		}
 1274              		.loc 1 1968 18 view .LVU414
 1275 0090 2B81     		strh	r3, [r5, #8]	@ movhi
1967:src/keys.c    **** 			State2.digval /= 10;
 1276              		.loc 1 1967 4 view .LVU415
 1277 0092 EA72     		strb	r2, [r5, #11]
1968:src/keys.c    **** 		}
 1278              		.loc 1 1968 4 is_stmt 1 view .LVU416
 1279              	.L111:
 1280              	.LBE313:
1973:src/keys.c    **** 
 1281              		.loc 1 1973 1 is_stmt 0 view .LVU417
 1282 0094 03B0     		add	sp, sp, #12
 1283              		.cfi_remember_state
 1284              		.cfi_def_cfa_offset 20
 1285              		@ sp needed
 1286 0096 F0BD     		pop	{r4, r5, r6, r7, pc}
 1287              	.LVL97:
 1288              	.L153:
 1289              		.cfi_restore_state
1939:src/keys.c    **** 		// Handle local registers and flags
 1290              		.loc 1 1939 2 is_stmt 1 view .LVU418
1939:src/keys.c    **** 		// Handle local registers and flags
 1291              		.loc 1 1939 5 is_stmt 0 view .LVU419
 1292 0098 C807     		lsls	r0, r1, #31
 1293 009a 12D5     		bpl	.L155
1941:src/keys.c    **** 		if (State2.runmode) {
 1294              		.loc 1 1941 3 is_stmt 1 view .LVU420
1941:src/keys.c    **** 		if (State2.runmode) {
 1295              		.loc 1 1941 7 is_stmt 0 view .LVU421
 1296 009c 0F23     		movs	r3, #15
 1297 009e 0193     		str	r3, [sp, #4]
1942:src/keys.c    **** 			if (LocalRegs == 0)
 1298              		.loc 1 1942 3 is_stmt 1 view .LVU422
1942:src/keys.c    **** 			if (LocalRegs == 0)
 1299              		.loc 1 1942 6 is_stmt 0 view .LVU423
 1300 00a0 BCF1000F 		cmp	ip, #0
 1301 00a4 D6D0     		beq	.L123
1943:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1302              		.loc 1 1943 4 is_stmt 1 view .LVU424
1943:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1303              		.loc 1 1943 8 is_stmt 0 view .LVU425
 1304 00a6 174B     		ldr	r3, .L158+8
 1305 00a8 1B68     		ldr	r3, [r3]
1943:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1306              		.loc 1 1943 7 view .LVU426
 1307 00aa B3F9DE37 		ldrsh	r3, [r3, #2014]
 1308 00ae 7BB1     		cbz	r3, .L125
1946:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1309              		.loc 1 1946 5 is_stmt 1 view .LVU427
1946:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1310              		.loc 1 1946 11 is_stmt 0 view .LVU428
 1311 00b0 F0B2     		uxtb	r0, r6
 1312 00b2 FFF7FEFF 		bl	local_regs_rarg
 1313              	.LVL98:
1946:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
ARM GAS  /tmp/cc8xFAqJ.s 			page 82


 1314              		.loc 1 1946 45 view .LVU429
 1315 00b6 0138     		subs	r0, r0, #1
1947:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1316              		.loc 1 1947 5 is_stmt 1 view .LVU430
1947:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1317              		.loc 1 1947 8 is_stmt 0 view .LVU431
 1318 00b8 0F28     		cmp	r0, #15
 1319 00ba 06DD     		ble	.L152
1948:src/keys.c    **** 			}
 1320              		.loc 1 1948 6 is_stmt 1 view .LVU432
1948:src/keys.c    **** 			}
 1321              		.loc 1 1948 10 is_stmt 0 view .LVU433
 1322 00bc 0F20     		movs	r0, #15
 1323 00be 0190     		str	r0, [sp, #4]
 1324 00c0 C9E7     		b	.L122
 1325              	.L155:
1953:src/keys.c    **** 	else {
 1326              		.loc 1 1953 3 is_stmt 1 view .LVU434
1953:src/keys.c    **** 	else {
 1327              		.loc 1 1953 65 is_stmt 0 view .LVU435
 1328 00c2 BCF1000F 		cmp	ip, #0
 1329 00c6 13D1     		bne	.L156
 1330 00c8 6320     		movs	r0, #99
 1331              	.LVL99:
 1332              	.L152:
1959:src/keys.c    **** 		return STATE_UNFINISHED;
 1333              		.loc 1 1959 5 view .LVU436
 1334 00ca 8442     		cmp	r4, r0
1957:src/keys.c    **** 	}
 1335              		.loc 1 1957 8 view .LVU437
 1336 00cc 0190     		str	r0, [sp, #4]
1959:src/keys.c    **** 		return STATE_UNFINISHED;
 1337              		.loc 1 1959 2 is_stmt 1 view .LVU438
1959:src/keys.c    **** 		return STATE_UNFINISHED;
 1338              		.loc 1 1959 5 is_stmt 0 view .LVU439
 1339 00ce C4DD     		ble	.L157
 1340              	.L125:
1944:src/keys.c    **** 			if (is_reg) {
 1341              		.loc 1 1944 12 view .LVU440
 1342 00d0 3320     		movs	r0, #51
1973:src/keys.c    **** 
 1343              		.loc 1 1973 1 view .LVU441
 1344 00d2 03B0     		add	sp, sp, #12
 1345              		.cfi_remember_state
 1346              		.cfi_def_cfa_offset 20
 1347              		@ sp needed
 1348 00d4 F0BD     		pop	{r4, r5, r6, r7, pc}
 1349              	.LVL100:
 1350              	.L120:
 1351              		.cfi_restore_state
1952:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
 1352              		.loc 1 1952 7 is_stmt 1 view .LVU442
1955:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1353              		.loc 1 1955 3 view .LVU443
1955:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1354              		.loc 1 1955 9 is_stmt 0 view .LVU444
 1355 00d6 1079     		ldrb	r0, [r2, #4]	@ zero_extendqisi2
ARM GAS  /tmp/cc8xFAqJ.s 			page 83


1955:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1356              		.loc 1 1955 7 view .LVU445
 1357 00d8 0190     		str	r0, [sp, #4]
1956:src/keys.c    **** 			lim = RARG_IND - 1;
 1358              		.loc 1 1956 3 is_stmt 1 view .LVU446
1956:src/keys.c    **** 			lim = RARG_IND - 1;
 1359              		.loc 1 1956 6 is_stmt 0 view .LVU447
 1360 00da 7F28     		cmp	r0, #127
 1361 00dc BBDD     		ble	.L122
1956:src/keys.c    **** 			lim = RARG_IND - 1;
 1362              		.loc 1 1956 23 discriminator 1 view .LVU448
 1363 00de FB07     		lsls	r3, r7, #31
 1364 00e0 B9D5     		bpl	.L122
1957:src/keys.c    **** 	}
 1365              		.loc 1 1957 4 is_stmt 1 view .LVU449
1957:src/keys.c    **** 	}
 1366              		.loc 1 1957 8 is_stmt 0 view .LVU450
 1367 00e2 7F20     		movs	r0, #127
 1368 00e4 F1E7     		b	.L152
 1369              	.LVL101:
 1370              	.L154:
1932:src/keys.c    **** #else
 1371              		.loc 1 1932 93 discriminator 4 view .LVU451
 1372 00e6 0438     		subs	r0, r0, #4
 1373              	.LVL102:
1932:src/keys.c    **** #else
 1374              		.loc 1 1932 68 discriminator 4 view .LVU452
 1375 00e8 0128     		cmp	r0, #1
1932:src/keys.c    **** #else
 1376              		.loc 1 1932 130 discriminator 4 view .LVU453
 1377 00ea 98BF     		it	ls
 1378 00ec 8D26     		movls	r6, #141
 1379 00ee 95E7     		b	.L114
 1380              	.LVL103:
 1381              	.L156:
1953:src/keys.c    **** 	else {
 1382              		.loc 1 1953 26 discriminator 1 view .LVU454
 1383 00f0 F0B2     		uxtb	r0, r6
 1384 00f2 FFF7FEFF 		bl	global_regs_rarg
 1385              	.LVL104:
1953:src/keys.c    **** 	else {
 1386              		.loc 1 1953 61 discriminator 1 view .LVU455
 1387 00f6 0138     		subs	r0, r0, #1
 1388 00f8 E7E7     		b	.L152
 1389              	.L159:
 1390 00fa 00BF     		.align	2
 1391              	.L158:
 1392 00fc 00000000 		.word	StateWhileOn
 1393 0100 00000000 		.word	argcmds
 1394 0104 00000000 		.word	main_ram
 1395 0108 CDCCCCCC 		.word	-858993459
 1396              		.cfi_endproc
 1397              	.LFE36:
 1399              		.section	.text.process_arg_shuffle,"ax",%progbits
 1400              		.align	1
 1401              		.p2align 2,,3
 1402              		.syntax unified
ARM GAS  /tmp/cc8xFAqJ.s 			page 84


 1403              		.thumb
 1404              		.thumb_func
 1405              		.fpu fpv4-sp-d16
 1407              	process_arg_shuffle:
 1408              	.LVL105:
 1409              	.LFB41:
2040:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1410              		.loc 1 2040 39 is_stmt 1 view -0
 1411              		.cfi_startproc
 1412              		@ args = 0, pretend = 0, frame = 0
 1413              		@ frame_needed = 0, uses_anonymous_args = 0
 1414              		@ link register save eliminated.
2041:src/keys.c    **** 	if (State2.numdigit < 4)
 1415              		.loc 1 2041 2 view .LVU457
2040:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1416              		.loc 1 2040 39 is_stmt 0 view .LVU458
 1417 0000 10B4     		push	{r4}
 1418              		.cfi_def_cfa_offset 4
 1419              		.cfi_offset 4, -4
2041:src/keys.c    **** 	if (State2.numdigit < 4)
 1420              		.loc 1 2041 31 view .LVU459
 1421 0002 0A4A     		ldr	r2, .L163
 1422 0004 D37A     		ldrb	r3, [r2, #11]	@ zero_extendqisi2
2041:src/keys.c    **** 	if (State2.numdigit < 4)
 1423              		.loc 1 2041 16 view .LVU460
 1424 0006 1189     		ldrh	r1, [r2, #8]
2041:src/keys.c    **** 	if (State2.numdigit < 4)
 1425              		.loc 1 2041 43 view .LVU461
 1426 0008 5C00     		lsls	r4, r3, #1
2041:src/keys.c    **** 	if (State2.numdigit < 4)
 1427              		.loc 1 2041 21 view .LVU462
 1428 000a A040     		lsls	r0, r0, r4
 1429              	.LVL106:
2041:src/keys.c    **** 	if (State2.numdigit < 4)
 1430              		.loc 1 2041 40 view .LVU463
 1431 000c 0133     		adds	r3, r3, #1
 1432 000e DBB2     		uxtb	r3, r3
2041:src/keys.c    **** 	if (State2.numdigit < 4)
 1433              		.loc 1 2041 16 view .LVU464
 1434 0010 0844     		add	r0, r0, r1
 1435 0012 80B2     		uxth	r0, r0
2042:src/keys.c    **** 		return STATE_UNFINISHED;
 1436              		.loc 1 2042 5 view .LVU465
 1437 0014 032B     		cmp	r3, #3
2041:src/keys.c    **** 	if (State2.numdigit < 4)
 1438              		.loc 1 2041 40 view .LVU466
 1439 0016 D372     		strb	r3, [r2, #11]
2041:src/keys.c    **** 	if (State2.numdigit < 4)
 1440              		.loc 1 2041 16 view .LVU467
 1441 0018 1081     		strh	r0, [r2, #8]	@ movhi
2042:src/keys.c    **** 		return STATE_UNFINISHED;
 1442              		.loc 1 2042 2 is_stmt 1 view .LVU468
2042:src/keys.c    **** 		return STATE_UNFINISHED;
 1443              		.loc 1 2042 5 is_stmt 0 view .LVU469
 1444 001a 03D9     		bls	.L161
2044:src/keys.c    **** }
 1445              		.loc 1 2044 2 is_stmt 1 view .LVU470
ARM GAS  /tmp/cc8xFAqJ.s 			page 85


2045:src/keys.c    **** 
 1446              		.loc 1 2045 1 is_stmt 0 view .LVU471
 1447 001c 5DF8044B 		ldr	r4, [sp], #4
 1448              		.cfi_remember_state
 1449              		.cfi_restore 4
 1450              		.cfi_def_cfa_offset 0
2044:src/keys.c    **** }
 1451              		.loc 1 2044 9 view .LVU472
 1452 0020 FFF7FEBF 		b	arg_eval
 1453              	.LVL107:
 1454              	.L161:
 1455              		.cfi_restore_state
2045:src/keys.c    **** 
 1456              		.loc 1 2045 1 view .LVU473
 1457 0024 3320     		movs	r0, #51
 1458 0026 5DF8044B 		ldr	r4, [sp], #4
 1459              		.cfi_restore 4
 1460              		.cfi_def_cfa_offset 0
 1461 002a 7047     		bx	lr
 1462              	.L164:
 1463              		.align	2
 1464              	.L163:
 1465 002c 00000000 		.word	StateWhileOn
 1466              		.cfi_endproc
 1467              	.LFE41:
 1469              		.section	.text.process_h_shifted,"ax",%progbits
 1470              		.align	1
 1471              		.p2align 2,,3
 1472              		.syntax unified
 1473              		.thumb
 1474              		.thumb_func
 1475              		.fpu fpv4-sp-d16
 1477              	process_h_shifted:
 1478              	.LVL108:
 1479              	.LFB21:
1090:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1480              		.loc 1 1090 47 is_stmt 1 view -0
 1481              		.cfi_startproc
 1482              		@ args = 0, pretend = 0, frame = 0
 1483              		@ frame_needed = 0, uses_anonymous_args = 0
1093:src/keys.c    **** 		// Row 1
 1484              		.loc 1 1093 2 view .LVU475
1144:src/keys.c    **** 	int op = op_map[lc];
 1485              		.loc 1 1144 2 view .LVU476
 1486              	.LBB314:
 1487              	.LBB315:
 158:src/keys.c    **** }
 1488              		.loc 1 158 23 is_stmt 0 view .LVU477
 1489 0000 314A     		ldr	r2, .L196
 1490              	.LBE315:
 1491              	.LBE314:
1145:src/keys.c    **** 	reset_shift();
 1492              		.loc 1 1145 17 view .LVU478
 1493 0002 324B     		ldr	r3, .L196+4
 1494              	.LBB318:
 1495              	.LBB316:
 158:src/keys.c    **** }
ARM GAS  /tmp/cc8xFAqJ.s 			page 86


 1496              		.loc 1 158 23 view .LVU479
 1497 0004 125C     		ldrb	r2, [r2, r0]	@ zero_extendqisi2
 1498              	.LBE316:
 1499              	.LBE318:
1090:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1500              		.loc 1 1090 47 view .LVU480
 1501 0006 70B5     		push	{r4, r5, r6, lr}
 1502              		.cfi_def_cfa_offset 16
 1503              		.cfi_offset 4, -16
 1504              		.cfi_offset 5, -12
 1505              		.cfi_offset 6, -8
 1506              		.cfi_offset 14, -4
1090:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1507              		.loc 1 1090 47 view .LVU481
 1508 0008 0446     		mov	r4, r0
 1509              	.LVL109:
 1510              	.LBB319:
 1511              	.LBI314:
 146:src/keys.c    **** {
 1512              		.loc 1 146 12 is_stmt 1 view .LVU482
 1513              	.LBB317:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 1514              		.loc 1 148 2 view .LVU483
 158:src/keys.c    **** }
 1515              		.loc 1 158 2 view .LVU484
 158:src/keys.c    **** }
 1516              		.loc 1 158 2 is_stmt 0 view .LVU485
 1517              	.LBE317:
 1518              	.LBE319:
1145:src/keys.c    **** 	reset_shift();
 1519              		.loc 1 1145 2 is_stmt 1 view .LVU486
 1520              	.LBB320:
 1521              	.LBB321:
 1522              	.LBB322:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1523              		.loc 1 106 16 is_stmt 0 view .LVU487
 1524 000a 314E     		ldr	r6, .L196+8
 1525              	.LBE322:
 1526              	.LBE321:
 1527              	.LBE320:
1145:src/keys.c    **** 	reset_shift();
 1528              		.loc 1 1145 17 view .LVU488
 1529 000c 33F81250 		ldrh	r5, [r3, r2, lsl #1]
 1530              	.LVL110:
1146:src/keys.c    **** 
 1531              		.loc 1 1146 2 is_stmt 1 view .LVU489
 1532              	.LBB329:
 1533              	.LBI320:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 1534              		.loc 1 114 13 view .LVU490
 1535              	.LBE329:
 115:src/keys.c    **** }
 1536              		.loc 1 115 2 view .LVU491
 1537              	.LBB330:
 1538              	.LBB327:
 1539              	.LBI321:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
ARM GAS  /tmp/cc8xFAqJ.s 			page 87


 1540              		.loc 1 104 20 view .LVU492
 1541              	.LBB325:
 105:src/keys.c    **** 	State2.shifts = shift;
 1542              		.loc 1 105 2 view .LVU493
 1543              	.LBB323:
 1544              	.LBI323:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 1545              		.loc 1 96 13 view .LVU494
 1546              	.LBB324:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1547              		.loc 1 97 2 view .LVU495
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1548              		.loc 1 97 18 is_stmt 0 view .LVU496
 1549 0010 FFF7FEFF 		bl	shift_down
 1550              	.LVL111:
  98:src/keys.c    **** }
 1551              		.loc 1 98 2 is_stmt 1 view .LVU497
 1552              	.LBE324:
 1553              	.LBE323:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1554              		.loc 1 106 2 view .LVU498
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1555              		.loc 1 106 16 is_stmt 0 view .LVU499
 1556 0014 0023     		movs	r3, #0
 1557              	.LBE325:
 1558              	.LBE327:
 1559              	.LBE330:
1149:src/keys.c    **** 	case K62:
 1560              		.loc 1 1149 2 view .LVU500
 1561 0016 262C     		cmp	r4, #38
 1562              	.LBB331:
 1563              	.LBB328:
 1564              	.LBB326:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1565              		.loc 1 106 16 view .LVU501
 1566 0018 3374     		strb	r3, [r6, #16]
 108:src/keys.c    **** }
 1567              		.loc 1 108 2 is_stmt 1 view .LVU502
 1568              	.LVL112:
 108:src/keys.c    **** }
 1569              		.loc 1 108 2 is_stmt 0 view .LVU503
 1570              	.LBE326:
 1571              	.LBE328:
 1572              	.LBE331:
1149:src/keys.c    **** 	case K62:
 1573              		.loc 1 1149 2 is_stmt 1 view .LVU504
 1574 001a 27D0     		beq	.L166
 1575 001c 272C     		cmp	r4, #39
 1576 001e 19D1     		bne	.L168
1162:src/keys.c    **** 			return STATE_UNFINISHED;
 1577              		.loc 1 1162 3 view .LVU505
1162:src/keys.c    **** 			return STATE_UNFINISHED;
 1578              		.loc 1 1162 7 is_stmt 0 view .LVU506
 1579 0020 FFF7FEFF 		bl	is_bad_cmdline
 1580              	.LVL113:
1162:src/keys.c    **** 			return STATE_UNFINISHED;
 1581              		.loc 1 1162 6 view .LVU507
ARM GAS  /tmp/cc8xFAqJ.s 			page 88


 1582 0024 00BB     		cbnz	r0, .L178
1164:src/keys.c    **** 		process_cmdline_set_lift();
 1583              		.loc 1 1164 3 is_stmt 1 view .LVU508
1164:src/keys.c    **** 		process_cmdline_set_lift();
 1584              		.loc 1 1164 30 is_stmt 0 view .LVU509
 1585 0026 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 1586 0028 C3F38012 		ubfx	r2, r3, #6, #1
1164:src/keys.c    **** 		process_cmdline_set_lift();
 1587              		.loc 1 1164 22 view .LVU510
 1588 002c C2F10102 		rsb	r2, r2, #1
1164:src/keys.c    **** 		process_cmdline_set_lift();
 1589              		.loc 1 1164 18 view .LVU511
 1590 0030 62F38613 		bfi	r3, r2, #6, #1
 1591 0034 B375     		strb	r3, [r6, #22]
1165:src/keys.c    **** 		update_program_bounds(1);
 1592              		.loc 1 1165 3 is_stmt 1 view .LVU512
 1593 0036 FFF7FEFF 		bl	process_cmdline_set_lift
 1594              	.LVL114:
1166:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
 1595              		.loc 1 1166 3 view .LVU513
 1596 003a 0120     		movs	r0, #1
 1597 003c FFF7FEFF 		bl	update_program_bounds
 1598              	.LVL115:
1167:src/keys.c    **** 			set_pc(0);
 1599              		.loc 1 1167 3 view .LVU514
1167:src/keys.c    **** 			set_pc(0);
 1600              		.loc 1 1167 7 is_stmt 0 view .LVU515
 1601 0040 B07D     		ldrb	r0, [r6, #22]	@ zero_extendqisi2
1167:src/keys.c    **** 			set_pc(0);
 1602              		.loc 1 1167 6 view .LVU516
 1603 0042 10F04000 		ands	r0, r0, #64
 1604 0046 05D1     		bne	.L168
1167:src/keys.c    **** 			set_pc(0);
 1605              		.loc 1 1167 27 discriminator 1 view .LVU517
 1606 0048 224B     		ldr	r3, .L196+12
 1607 004a 1B68     		ldr	r3, [r3]
1167:src/keys.c    **** 			set_pc(0);
 1608              		.loc 1 1167 24 discriminator 1 view .LVU518
 1609 004c B3F8E027 		ldrh	r2, [r3, #2016]
 1610 0050 012A     		cmp	r2, #1
 1611 0052 32D0     		beq	.L192
 1612              	.L168:
1175:src/keys.c    **** 		if (op & _RARG) {
 1613              		.loc 1 1175 2 is_stmt 1 view .LVU519
1175:src/keys.c    **** 		if (op & _RARG) {
 1614              		.loc 1 1175 5 is_stmt 0 view .LVU520
 1615 0054 332D     		cmp	r5, #51
 1616 0056 07D0     		beq	.L178
 1617              	.LVL116:
1176:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1618              		.loc 1 1176 3 is_stmt 1 view .LVU521
1176:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1619              		.loc 1 1176 6 is_stmt 0 view .LVU522
 1620 0058 2804     		lsls	r0, r5, #16
 1621 005a 14D5     		bpl	.L193
 1622              	.L176:
1177:src/keys.c    **** 			op = STATE_UNFINISHED;
ARM GAS  /tmp/cc8xFAqJ.s 			page 89


 1623              		.loc 1 1177 4 is_stmt 1 view .LVU523
 1624              	.LVL117:
 1625              	.LBB332:
 1626              	.LBI332:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 1627              		.loc 1 552 13 view .LVU524
 1628              	.LBB333:
 553:src/keys.c    **** 		return;
 1629              		.loc 1 553 2 view .LVU525
 553:src/keys.c    **** 		return;
 1630              		.loc 1 553 6 is_stmt 0 view .LVU526
 1631 005c FFF7FEFF 		bl	is_bad_cmdline
 1632              	.LVL118:
 553:src/keys.c    **** 		return;
 1633              		.loc 1 553 5 view .LVU527
 1634 0060 10B9     		cbnz	r0, .L178
 1635 0062 E8B2     		uxtb	r0, r5
 1636 0064 FFF7FEFF 		bl	init_arg.part.0
 1637              	.LVL119:
 1638              	.L178:
 553:src/keys.c    **** 		return;
 1639              		.loc 1 553 5 view .LVU528
 1640              	.LBE333:
 1641              	.LBE332:
1181:src/keys.c    **** #undef _RARG
 1642              		.loc 1 1181 2 is_stmt 1 view .LVU529
1090:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 1643              		.loc 1 1090 47 is_stmt 0 view .LVU530
 1644 0068 3320     		movs	r0, #51
1184:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 1645              		.loc 1 1184 1 view .LVU531
 1646 006a 70BD     		pop	{r4, r5, r6, pc}
 1647              	.LVL120:
 1648              	.L166:
1151:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 1649              		.loc 1 1151 3 is_stmt 1 view .LVU532
1151:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 1650              		.loc 1 1151 7 is_stmt 0 view .LVU533
 1651 006c 194B     		ldr	r3, .L196+12
 1652 006e 1B68     		ldr	r3, [r3]
 1653 0070 93F8E827 		ldrb	r2, [r3, #2024]	@ zero_extendqisi2
1151:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 1654              		.loc 1 1151 6 view .LVU534
 1655 0074 D607     		lsls	r6, r2, #31
 1656 0076 0FD4     		bmi	.L194
1157:src/keys.c    **** #endif
 1657              		.loc 1 1157 4 is_stmt 1 view .LVU535
1157:src/keys.c    **** #endif
 1658              		.loc 1 1157 8 is_stmt 0 view .LVU536
 1659 0078 93F8E737 		ldrb	r3, [r3, #2023]	@ zero_extendqisi2
1157:src/keys.c    **** #endif
 1660              		.loc 1 1157 7 view .LVU537
 1661 007c 9C06     		lsls	r4, r3, #26
 1662 007e 14D5     		bpl	.L195
 1663 0080 40F24F10 		movw	r0, #335
 1664              	.LVL121:
1184:src/keys.c    **** #ifdef INCLUDE_C_LOCK
ARM GAS  /tmp/cc8xFAqJ.s 			page 90


 1665              		.loc 1 1184 1 view .LVU538
 1666 0084 70BD     		pop	{r4, r5, r6, pc}
 1667              	.L193:
 1668              	.LVL122:
1181:src/keys.c    **** #undef _RARG
 1669              		.loc 1 1181 2 is_stmt 1 view .LVU539
1181:src/keys.c    **** #undef _RARG
 1670              		.loc 1 1181 9 is_stmt 0 view .LVU540
 1671 0086 134B     		ldr	r3, .L196+12
 1672 0088 1B68     		ldr	r3, [r3]
 1673 008a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1181:src/keys.c    **** #undef _RARG
 1674              		.loc 1 1181 57 view .LVU541
 1675 008e D907     		lsls	r1, r3, #31
 1676 0090 10D4     		bmi	.L177
 1677              	.LVL123:
 1678              	.L180:
1181:src/keys.c    **** #undef _RARG
 1679              		.loc 1 1181 57 view .LVU542
 1680 0092 25F48040 		bic	r0, r5, #16384
1184:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 1681              		.loc 1 1184 1 view .LVU543
 1682 0096 70BD     		pop	{r4, r5, r6, pc}
 1683              	.LVL124:
 1684              	.L194:
1152:src/keys.c    **** 		else
 1685              		.loc 1 1152 4 is_stmt 1 view .LVU544
1152:src/keys.c    **** 		else
 1686              		.loc 1 1152 57 is_stmt 0 view .LVU545
 1687 0098 93F9E737 		ldrsb	r3, [r3, #2023]
 1688 009c 002B     		cmp	r3, #0
 1689 009e 40F25315 		movw	r5, #339
 1690              	.LVL125:
1152:src/keys.c    **** 		else
 1691              		.loc 1 1152 57 view .LVU546
 1692 00a2 A8BF     		it	ge
 1693 00a4 4FF4AA75 		movge	r5, #340
 1694 00a8 F3E7     		b	.L180
 1695              	.LVL126:
 1696              	.L195:
1175:src/keys.c    **** 		if (op & _RARG) {
 1697              		.loc 1 1175 2 is_stmt 1 view .LVU547
1175:src/keys.c    **** 		if (op & _RARG) {
 1698              		.loc 1 1175 5 is_stmt 0 view .LVU548
 1699 00aa 332D     		cmp	r5, #51
 1700 00ac DCD0     		beq	.L178
 1701              	.LVL127:
1176:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1702              		.loc 1 1176 3 is_stmt 1 view .LVU549
1176:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 1703              		.loc 1 1176 6 is_stmt 0 view .LVU550
 1704 00ae 2B04     		lsls	r3, r5, #16
 1705 00b0 D4D4     		bmi	.L176
 1706 00b2 EEE7     		b	.L180
 1707              	.LVL128:
 1708              	.L177:
1181:src/keys.c    **** #undef _RARG
ARM GAS  /tmp/cc8xFAqJ.s 			page 91


 1709              		.loc 1 1181 21 view .LVU551
 1710 00b4 6A04     		lsls	r2, r5, #17
 1711 00b6 D7D4     		bmi	.L178
 1712 00b8 EBE7     		b	.L180
 1713              	.L192:
1167:src/keys.c    **** 			set_pc(0);
 1714              		.loc 1 1167 43 discriminator 2 view .LVU552
 1715 00ba B3F8EE37 		ldrh	r3, [r3, #2030]
 1716 00be 012B     		cmp	r3, #1
 1717 00c0 C8D1     		bne	.L168
1168:src/keys.c    **** 		break;
 1718              		.loc 1 1168 4 is_stmt 1 view .LVU553
 1719 00c2 FFF7FEFF 		bl	set_pc
 1720              	.LVL129:
 1721 00c6 C5E7     		b	.L168
 1722              	.L197:
 1723              		.align	2
 1724              	.L196:
 1725 00c8 00000000 		.word	.LANCHOR1
 1726 00cc 00000000 		.word	.LANCHOR0
 1727 00d0 00000000 		.word	StateWhileOn
 1728 00d4 00000000 		.word	main_ram
 1729              		.cfi_endproc
 1730              	.LFE21:
 1732              		.section	.text.intltr,"ax",%progbits
 1733              		.align	1
 1734              		.p2align 2,,3
 1735              		.syntax unified
 1736              		.thumb
 1737              		.thumb_func
 1738              		.fpu fpv4-sp-d16
 1740              	intltr:
 1741              	.LVL130:
 1742              	.LFB18:
 751:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1743              		.loc 1 751 26 view -0
 1744              		.cfi_startproc
 1745              		@ args = 0, pretend = 0, frame = 0
 1746              		@ frame_needed = 0, uses_anonymous_args = 0
 752:src/keys.c    **** }
 1747              		.loc 1 752 2 view .LVU555
 752:src/keys.c    **** }
 1748              		.loc 1 752 10 is_stmt 0 view .LVU556
 1749 0000 0B4B     		ldr	r3, .L207
 1750 0002 1B68     		ldr	r3, [r3]
 1751 0004 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 752:src/keys.c    **** }
 1752              		.loc 1 752 22 view .LVU557
 1753 0008 13F00103 		ands	r3, r3, #1
 1754 000c 05D0     		beq	.L200
 752:src/keys.c    **** }
 1755              		.loc 1 752 26 discriminator 1 view .LVU558
 1756 000e 094B     		ldr	r3, .L207+4
 1757 0010 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 752:src/keys.c    **** }
 1758              		.loc 1 752 22 discriminator 1 view .LVU559
 1759 0012 5B06     		lsls	r3, r3, #25
ARM GAS  /tmp/cc8xFAqJ.s 			page 92


 1760 0014 03D4     		bmi	.L206
 752:src/keys.c    **** }
 1761              		.loc 1 752 22 view .LVU560
 1762 0016 0120     		movs	r0, #1
 1763              	.LVL131:
 753:src/keys.c    **** 
 1764              		.loc 1 753 1 view .LVU561
 1765 0018 7047     		bx	lr
 1766              	.LVL132:
 1767              	.L200:
 752:src/keys.c    **** }
 1768              		.loc 1 752 22 view .LVU562
 1769 001a 1846     		mov	r0, r3
 1770              	.LVL133:
 752:src/keys.c    **** }
 1771              		.loc 1 752 22 view .LVU563
 1772 001c 7047     		bx	lr
 1773              	.LVL134:
 1774              	.L206:
 751:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1775              		.loc 1 751 26 view .LVU564
 1776 001e 10B5     		push	{r4, lr}
 1777              		.cfi_def_cfa_offset 8
 1778              		.cfi_offset 4, -8
 1779              		.cfi_offset 14, -4
 1780 0020 0446     		mov	r4, r0
 1781              	.LVL135:
 1782              	.LBB336:
 1783              	.LBI336:
 751:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1784              		.loc 1 751 12 is_stmt 1 view .LVU565
 1785              	.LBB337:
 752:src/keys.c    **** }
 1786              		.loc 1 752 52 is_stmt 0 view .LVU566
 1787 0022 FFF7FEFF 		bl	int_base
 1788              	.LVL136:
 752:src/keys.c    **** }
 1789              		.loc 1 752 43 view .LVU567
 1790 0026 8442     		cmp	r4, r0
 1791 0028 ACBF     		ite	ge
 1792 002a 0020     		movge	r0, #0
 1793 002c 0120     		movlt	r0, #1
 1794              	.LBE337:
 1795              	.LBE336:
 753:src/keys.c    **** 
 1796              		.loc 1 753 1 view .LVU568
 1797 002e 10BD     		pop	{r4, pc}
 1798              	.LVL137:
 1799              	.L208:
 753:src/keys.c    **** 
 1800              		.loc 1 753 1 view .LVU569
 1801              		.align	2
 1802              	.L207:
 1803 0030 00000000 		.word	main_ram
 1804 0034 00000000 		.word	StateWhileOn
 1805              		.cfi_endproc
 1806              	.LFE18:
ARM GAS  /tmp/cc8xFAqJ.s 			page 93


 1808              		.section	.text.process_normal,"ax",%progbits
 1809              		.align	1
 1810              		.p2align 2,,3
 1811              		.syntax unified
 1812              		.thumb
 1813              		.thumb_func
 1814              		.fpu fpv4-sp-d16
 1816              	process_normal:
 1817              	.LVL138:
 1818              	.LFB19:
 759:src/keys.c    **** 	static const unsigned short int op_map[] = {
 1819              		.loc 1 759 1 is_stmt 1 view -0
 1820              		.cfi_startproc
 1821              		@ args = 0, pretend = 0, frame = 0
 1822              		@ frame_needed = 0, uses_anonymous_args = 0
 760:src/keys.c    **** 		// Row 1
 1823              		.loc 1 760 2 view .LVU571
 807:src/keys.c    **** 	int op = op_map[lc];
 1824              		.loc 1 807 2 view .LVU572
 1825              	.LBB338:
 1826              	.LBI338:
 146:src/keys.c    **** {
 1827              		.loc 1 146 12 view .LVU573
 1828              	.LBB339:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 1829              		.loc 1 148 2 view .LVU574
 158:src/keys.c    **** }
 1830              		.loc 1 158 2 view .LVU575
 158:src/keys.c    **** }
 1831              		.loc 1 158 2 is_stmt 0 view .LVU576
 1832              	.LBE339:
 1833              	.LBE338:
 808:src/keys.c    **** 	
 1834              		.loc 1 808 2 is_stmt 1 view .LVU577
 813:src/keys.c    **** 	  switch (c) {
 1835              		.loc 1 813 6 is_stmt 0 view .LVU578
 1836 0000 984B     		ldr	r3, .L240
 1837              	.LBB342:
 1838              	.LBB340:
 158:src/keys.c    **** }
 1839              		.loc 1 158 23 view .LVU579
 1840 0002 994A     		ldr	r2, .L240+4
 1841              	.LBE340:
 1842              	.LBE342:
 813:src/keys.c    **** 	  switch (c) {
 1843              		.loc 1 813 6 view .LVU580
 1844 0004 1B68     		ldr	r3, [r3]
 1845              	.LBB343:
 1846              	.LBB341:
 158:src/keys.c    **** }
 1847              		.loc 1 158 23 view .LVU581
 1848 0006 115C     		ldrb	r1, [r2, r0]	@ zero_extendqisi2
 1849              	.LBE341:
 1850              	.LBE343:
 808:src/keys.c    **** 	
 1851              		.loc 1 808 17 view .LVU582
 1852 0008 984A     		ldr	r2, .L240+8
ARM GAS  /tmp/cc8xFAqJ.s 			page 94


 813:src/keys.c    **** 	  switch (c) {
 1853              		.loc 1 813 6 view .LVU583
 1854 000a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 759:src/keys.c    **** 	static const unsigned short int op_map[] = {
 1855              		.loc 1 759 1 view .LVU584
 1856 000e 10B5     		push	{r4, lr}
 1857              		.cfi_def_cfa_offset 8
 1858              		.cfi_offset 4, -8
 1859              		.cfi_offset 14, -4
 808:src/keys.c    **** 	
 1860              		.loc 1 808 17 view .LVU585
 1861 0010 32F81140 		ldrh	r4, [r2, r1, lsl #1]
 813:src/keys.c    **** 	  switch (c) {
 1862              		.loc 1 813 5 view .LVU586
 1863 0014 DB07     		lsls	r3, r3, #31
 808:src/keys.c    **** 	
 1864              		.loc 1 808 6 view .LVU587
 1865 0016 2246     		mov	r2, r4
 1866              	.LVL139:
 812:src/keys.c    **** 	if (UState.intm) {
 1867              		.loc 1 812 2 is_stmt 1 view .LVU588
 813:src/keys.c    **** 	  switch (c) {
 1868              		.loc 1 813 2 view .LVU589
 813:src/keys.c    **** 	  switch (c) {
 1869              		.loc 1 813 5 is_stmt 0 view .LVU590
 1870 0018 42D4     		bmi	.L236
 844:src/keys.c    **** 	  }
 1871              		.loc 1 844 12 is_stmt 1 view .LVU591
 849:src/keys.c    **** #ifdef DM42
 1872              		.loc 1 849 2 view .LVU592
 1873 001a 2D28     		cmp	r0, #45
 1874 001c 3ED8     		bhi	.L209
 1875 001e DFE810F0 		tbh	[pc, r0, lsl #1]
 1876              	.L228:
 1877 0022 0801     		.2byte	(.L224-.L228)/2
 1878 0024 0E01     		.2byte	(.L225-.L228)/2
 1879 0026 3D00     		.2byte	(.L209-.L228)/2
 1880 0028 CF00     		.2byte	(.L223-.L228)/2
 1881 002a 3D00     		.2byte	(.L209-.L228)/2
 1882 002c 3D00     		.2byte	(.L209-.L228)/2
 1883 002e 3400     		.2byte	(.L218-.L228)/2
 1884 0030 3400     		.2byte	(.L218-.L228)/2
 1885 0032 3D00     		.2byte	(.L209-.L228)/2
 1886 0034 3D00     		.2byte	(.L209-.L228)/2
 1887 0036 3D00     		.2byte	(.L209-.L228)/2
 1888 0038 3D00     		.2byte	(.L209-.L228)/2
 1889 003a 3D00     		.2byte	(.L209-.L228)/2
 1890 003c 3D00     		.2byte	(.L209-.L228)/2
 1891 003e 3D00     		.2byte	(.L209-.L228)/2
 1892 0040 3D00     		.2byte	(.L209-.L228)/2
 1893 0042 E900     		.2byte	(.L222-.L228)/2
 1894 0044 3D00     		.2byte	(.L209-.L228)/2
 1895 0046 3400     		.2byte	(.L218-.L228)/2
 1896 0048 3D00     		.2byte	(.L209-.L228)/2
 1897 004a 3D00     		.2byte	(.L209-.L228)/2
 1898 004c 3D00     		.2byte	(.L209-.L228)/2
 1899 004e 3D00     		.2byte	(.L209-.L228)/2
ARM GAS  /tmp/cc8xFAqJ.s 			page 95


 1900 0050 3D00     		.2byte	(.L209-.L228)/2
 1901 0052 3D00     		.2byte	(.L209-.L228)/2
 1902 0054 3D00     		.2byte	(.L209-.L228)/2
 1903 0056 3D00     		.2byte	(.L209-.L228)/2
 1904 0058 3D00     		.2byte	(.L209-.L228)/2
 1905 005a 3D00     		.2byte	(.L209-.L228)/2
 1906 005c 3D00     		.2byte	(.L209-.L228)/2
 1907 005e 3D00     		.2byte	(.L209-.L228)/2
 1908 0060 3D00     		.2byte	(.L209-.L228)/2
 1909 0062 3D00     		.2byte	(.L209-.L228)/2
 1910 0064 3D00     		.2byte	(.L209-.L228)/2
 1911 0066 3D00     		.2byte	(.L209-.L228)/2
 1912 0068 3D00     		.2byte	(.L209-.L228)/2
 1913 006a 3D00     		.2byte	(.L209-.L228)/2
 1914 006c 3D00     		.2byte	(.L209-.L228)/2
 1915 006e 3D00     		.2byte	(.L209-.L228)/2
 1916 0070 3D00     		.2byte	(.L209-.L228)/2
 1917 0072 3D00     		.2byte	(.L209-.L228)/2
 1918 0074 3D00     		.2byte	(.L209-.L228)/2
 1919 0076 3D00     		.2byte	(.L209-.L228)/2
 1920 0078 3D00     		.2byte	(.L209-.L228)/2
 1921 007a F400     		.2byte	(.L221-.L228)/2
 1922 007c C700     		.2byte	(.L227-.L228)/2
 1923              		.p2align 1
 1924              	.L212:
 840:src/keys.c    **** 	    if (intltr(15)) {
 1925              		.loc 1 840 6 view .LVU593
 1926              	.LVL140:
 841:src/keys.c    **** 	      return op_int;
 1927              		.loc 1 841 6 view .LVU594
 841:src/keys.c    **** 	      return op_int;
 1928              		.loc 1 841 10 is_stmt 0 view .LVU595
 1929 007e 0F20     		movs	r0, #15
 1930              	.LVL141:
 841:src/keys.c    **** 	      return op_int;
 1931              		.loc 1 841 10 view .LVU596
 1932 0080 FFF7FEFF 		bl	intltr
 1933              	.LVL142:
 841:src/keys.c    **** 	      return op_int;
 1934              		.loc 1 841 9 view .LVU597
 1935 0084 0028     		cmp	r0, #0
 1936 0086 40F0EB80 		bne	.L237
 1937              	.LVL143:
 1938              	.L218:
 915:src/keys.c    **** 		break;
 1939              		.loc 1 915 3 is_stmt 1 view .LVU598
 1940              	.LBB344:
 1941              	.LBI344:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 1942              		.loc 1 552 13 view .LVU599
 1943              	.LBB345:
 553:src/keys.c    **** 		return;
 1944              		.loc 1 553 2 view .LVU600
 553:src/keys.c    **** 		return;
 1945              		.loc 1 553 6 is_stmt 0 view .LVU601
 1946 008a FFF7FEFF 		bl	is_bad_cmdline
 1947              	.LVL144:
ARM GAS  /tmp/cc8xFAqJ.s 			page 96


 553:src/keys.c    **** 		return;
 1948              		.loc 1 553 5 view .LVU602
 1949 008e 0028     		cmp	r0, #0
 1950 0090 40F09380 		bne	.L235
 1951 0094 E0B2     		uxtb	r0, r4
 1952 0096 FFF7FEFF 		bl	init_arg.part.0
 1953              	.LVL145:
 1954              	.LBE345:
 1955              	.LBE344:
 921:src/keys.c    **** }
 1956              		.loc 1 921 9 view .LVU603
 1957 009a 3322     		movs	r2, #51
 1958              	.LVL146:
 1959              	.L209:
 922:src/keys.c    **** 
 1960              		.loc 1 922 1 view .LVU604
 1961 009c 1046     		mov	r0, r2
 1962 009e 10BD     		pop	{r4, pc}
 1963              	.LVL147:
 1964              	.L236:
 814:src/keys.c    **** 	  case K00:
 1965              		.loc 1 814 4 is_stmt 1 view .LVU605
 1966 00a0 1228     		cmp	r0, #18
 1967 00a2 29D8     		bhi	.L211
 1968 00a4 01A3     		adr	r3, .L213
 1969 00a6 53F820F0 		ldr	pc, [r3, r0, lsl #2]
 1970 00aa 00BF     		.p2align 2
 1971              	.L213:
 1972 00ac E9010000 		.word	.L216+1
 1973 00b0 DB010000 		.word	.L215+1
 1974 00b4 F9000000 		.word	.L211+1
 1975 00b8 CD010000 		.word	.L214+1
 1976 00bc F9000000 		.word	.L211+1
 1977 00c0 F9000000 		.word	.L211+1
 1978 00c4 F9000000 		.word	.L211+1
 1979 00c8 F9000000 		.word	.L211+1
 1980 00cc F9000000 		.word	.L211+1
 1981 00d0 F9000000 		.word	.L211+1
 1982 00d4 F9000000 		.word	.L211+1
 1983 00d8 F9000000 		.word	.L211+1
 1984 00dc F9000000 		.word	.L211+1
 1985 00e0 F9000000 		.word	.L211+1
 1986 00e4 F9000000 		.word	.L211+1
 1987 00e8 F9000000 		.word	.L211+1
 1988 00ec F9000000 		.word	.L211+1
 1989 00f0 F9000000 		.word	.L211+1
 1990 00f4 7F000000 		.word	.L212+1
 1991              		.p2align 1
 1992              	.L211:
 844:src/keys.c    **** 	  }
 1993              		.loc 1 844 12 view .LVU606
 849:src/keys.c    **** #ifdef DM42
 1994              		.loc 1 849 2 view .LVU607
 1995 00f8 C31E     		subs	r3, r0, #3
 1996 00fa 2A2B     		cmp	r3, #42
 1997 00fc CED8     		bhi	.L209
 1998 00fe 01A1     		adr	r1, .L220
ARM GAS  /tmp/cc8xFAqJ.s 			page 97


 1999 0100 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 2000              		.p2align 2
 2001              	.L220:
 2002 0104 C1010000 		.word	.L223+1
 2003 0108 9D000000 		.word	.L209+1
 2004 010c 9D000000 		.word	.L209+1
 2005 0110 8B000000 		.word	.L218+1
 2006 0114 8B000000 		.word	.L218+1
 2007 0118 9D000000 		.word	.L209+1
 2008 011c 9D000000 		.word	.L209+1
 2009 0120 9D000000 		.word	.L209+1
 2010 0124 9D000000 		.word	.L209+1
 2011 0128 9D000000 		.word	.L209+1
 2012 012c 9D000000 		.word	.L209+1
 2013 0130 9D000000 		.word	.L209+1
 2014 0134 9D000000 		.word	.L209+1
 2015 0138 F5010000 		.word	.L222+1
 2016 013c 9D000000 		.word	.L209+1
 2017 0140 8B000000 		.word	.L218+1
 2018 0144 9D000000 		.word	.L209+1
 2019 0148 9D000000 		.word	.L209+1
 2020 014c 9D000000 		.word	.L209+1
 2021 0150 9D000000 		.word	.L209+1
 2022 0154 9D000000 		.word	.L209+1
 2023 0158 9D000000 		.word	.L209+1
 2024 015c 9D000000 		.word	.L209+1
 2025 0160 9D000000 		.word	.L209+1
 2026 0164 9D000000 		.word	.L209+1
 2027 0168 9D000000 		.word	.L209+1
 2028 016c 9D000000 		.word	.L209+1
 2029 0170 9D000000 		.word	.L209+1
 2030 0174 9D000000 		.word	.L209+1
 2031 0178 9D000000 		.word	.L209+1
 2032 017c 9D000000 		.word	.L209+1
 2033 0180 9D000000 		.word	.L209+1
 2034 0184 9D000000 		.word	.L209+1
 2035 0188 9D000000 		.word	.L209+1
 2036 018c 9D000000 		.word	.L209+1
 2037 0190 9D000000 		.word	.L209+1
 2038 0194 9D000000 		.word	.L209+1
 2039 0198 9D000000 		.word	.L209+1
 2040 019c 9D000000 		.word	.L209+1
 2041 01a0 9D000000 		.word	.L209+1
 2042 01a4 9D000000 		.word	.L209+1
 2043 01a8 0B020000 		.word	.L221+1
 2044 01ac BB010000 		.word	.L235+1
 2045              		.p2align 1
 2046              	.L227:
 897:src/keys.c    **** #else
 2047              		.loc 1 897 4 view .LVU608
 897:src/keys.c    **** #else
 2048              		.loc 1 897 17 is_stmt 0 view .LVU609
 2049 01b0 2F4A     		ldr	r2, .L240+12
 2050              	.LVL148:
 897:src/keys.c    **** #else
 2051              		.loc 1 897 17 view .LVU610
 2052 01b2 537D     		ldrb	r3, [r2, #21]	@ zero_extendqisi2
ARM GAS  /tmp/cc8xFAqJ.s 			page 98


 2053 01b4 43F00203 		orr	r3, r3, #2
 2054 01b8 5375     		strb	r3, [r2, #21]
 2055              	.LVL149:
 2056              	.L235:
 903:src/keys.c    **** 
 2057              		.loc 1 903 4 is_stmt 1 view .LVU611
 921:src/keys.c    **** }
 2058              		.loc 1 921 9 is_stmt 0 view .LVU612
 2059 01ba 3322     		movs	r2, #51
 922:src/keys.c    **** 
 2060              		.loc 1 922 1 view .LVU613
 2061 01bc 1046     		mov	r0, r2
 2062 01be 10BD     		pop	{r4, pc}
 2063              	.LVL150:
 2064              	.L223:
 856:src/keys.c    **** #else
 2065              		.loc 1 856 3 is_stmt 1 view .LVU614
 856:src/keys.c    **** #else
 2066              		.loc 1 856 10 is_stmt 0 view .LVU615
 2067 01c0 2146     		mov	r1, r4
 2068 01c2 0220     		movs	r0, #2
 922:src/keys.c    **** 
 2069              		.loc 1 922 1 view .LVU616
 2070 01c4 BDE81040 		pop	{r4, lr}
 2071              		.cfi_remember_state
 2072              		.cfi_restore 14
 2073              		.cfi_restore 4
 2074              		.cfi_def_cfa_offset 0
 2075              	.LVL151:
 856:src/keys.c    **** #else
 2076              		.loc 1 856 10 view .LVU617
 2077 01c8 FFF7FEBF 		b	check_f_key
 2078              	.LVL152:
 2079              	.L214:
 2080              		.cfi_restore_state
 832:src/keys.c    **** 	    if (intltr(12)) {
 2081              		.loc 1 832 6 is_stmt 1 view .LVU618
 833:src/keys.c    **** 	      return op_int;
 2082              		.loc 1 833 6 view .LVU619
 833:src/keys.c    **** 	      return op_int;
 2083              		.loc 1 833 10 is_stmt 0 view .LVU620
 2084 01cc 0C20     		movs	r0, #12
 2085              	.LVL153:
 833:src/keys.c    **** 	      return op_int;
 2086              		.loc 1 833 10 view .LVU621
 2087 01ce FFF7FEFF 		bl	intltr
 2088              	.LVL154:
 833:src/keys.c    **** 	      return op_int;
 2089              		.loc 1 833 9 view .LVU622
 2090 01d2 0028     		cmp	r0, #0
 2091 01d4 F4D0     		beq	.L223
 834:src/keys.c    **** 	    }
 2092              		.loc 1 834 15 view .LVU623
 2093 01d6 1122     		movs	r2, #17
 2094 01d8 60E7     		b	.L209
 2095              	.LVL155:
 2096              	.L215:
ARM GAS  /tmp/cc8xFAqJ.s 			page 99


 824:src/keys.c    **** 	    if (intltr(11)) {
 2097              		.loc 1 824 6 is_stmt 1 view .LVU624
 825:src/keys.c    **** 	      return op;
 2098              		.loc 1 825 6 view .LVU625
 825:src/keys.c    **** 	      return op;
 2099              		.loc 1 825 10 is_stmt 0 view .LVU626
 2100 01da 0B20     		movs	r0, #11
 2101              	.LVL156:
 825:src/keys.c    **** 	      return op;
 2102              		.loc 1 825 10 view .LVU627
 2103 01dc FFF7FEFF 		bl	intltr
 2104              	.LVL157:
 825:src/keys.c    **** 	      return op;
 2105              		.loc 1 825 9 view .LVU628
 2106 01e0 0028     		cmp	r0, #0
 2107 01e2 37D0     		beq	.L238
 826:src/keys.c    **** 	    }
 2108              		.loc 1 826 15 view .LVU629
 2109 01e4 1022     		movs	r2, #16
 2110 01e6 59E7     		b	.L209
 2111              	.LVL158:
 2112              	.L216:
 816:src/keys.c    **** 	    if (intltr(10)) {
 2113              		.loc 1 816 6 is_stmt 1 view .LVU630
 817:src/keys.c    **** 	      return op;
 2114              		.loc 1 817 6 view .LVU631
 817:src/keys.c    **** 	      return op;
 2115              		.loc 1 817 10 is_stmt 0 view .LVU632
 2116 01e8 0A20     		movs	r0, #10
 2117              	.LVL159:
 817:src/keys.c    **** 	      return op;
 2118              		.loc 1 817 10 view .LVU633
 2119 01ea FFF7FEFF 		bl	intltr
 2120              	.LVL160:
 817:src/keys.c    **** 	      return op;
 2121              		.loc 1 817 9 view .LVU634
 2122 01ee 60B3     		cbz	r0, .L239
 818:src/keys.c    **** 	    }
 2123              		.loc 1 818 15 view .LVU635
 2124 01f0 0F22     		movs	r2, #15
 2125 01f2 53E7     		b	.L209
 2126              	.LVL161:
 2127              	.L222:
 906:src/keys.c    **** 			return STATE_UNFINISHED;
 2128              		.loc 1 906 3 is_stmt 1 view .LVU636
 906:src/keys.c    **** 			return STATE_UNFINISHED;
 2129              		.loc 1 906 7 is_stmt 0 view .LVU637
 2130 01f4 1E4B     		ldr	r3, .L240+12
 2131 01f6 DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 2132              	.LVL162:
 906:src/keys.c    **** 			return STATE_UNFINISHED;
 2133              		.loc 1 906 6 view .LVU638
 2134 01f8 9106     		lsls	r1, r2, #26
 2135 01fa DED4     		bmi	.L235
 908:src/keys.c    **** 			return op;
 2136              		.loc 1 908 3 is_stmt 1 view .LVU639
 908:src/keys.c    **** 			return op;
ARM GAS  /tmp/cc8xFAqJ.s 			page 100


 2137              		.loc 1 908 7 is_stmt 0 view .LVU640
 2138 01fc 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 910:src/keys.c    **** 
 2139              		.loc 1 910 10 view .LVU641
 2140 01fe 13F0400F 		tst	r3, #64
 2141 0202 14BF     		ite	ne
 2142 0204 2246     		movne	r2, r4
 2143 0206 3022     		moveq	r2, #48
 2144 0208 48E7     		b	.L209
 2145              	.LVL163:
 2146              	.L221:
 880:src/keys.c    **** 			return STATE_UNFINISHED;
 2147              		.loc 1 880 3 is_stmt 1 view .LVU642
 880:src/keys.c    **** 			return STATE_UNFINISHED;
 2148              		.loc 1 880 7 is_stmt 0 view .LVU643
 2149 020a FFF7FEFF 		bl	is_bad_cmdline
 2150              	.LVL164:
 880:src/keys.c    **** 			return STATE_UNFINISHED;
 2151              		.loc 1 880 6 view .LVU644
 2152 020e 0028     		cmp	r0, #0
 2153 0210 D3D1     		bne	.L235
 882:src/keys.c    **** 		State2.arrow = 1;
 2154              		.loc 1 882 3 is_stmt 1 view .LVU645
 2155 0212 FFF7FEFF 		bl	process_cmdline_set_lift
 2156              	.LVL165:
 883:src/keys.c    **** #ifdef DM42
 2157              		.loc 1 883 3 view .LVU646
 883:src/keys.c    **** #ifdef DM42
 2158              		.loc 1 883 16 is_stmt 0 view .LVU647
 2159 0216 164A     		ldr	r2, .L240+12
 2160 0218 537D     		ldrb	r3, [r2, #21]	@ zero_extendqisi2
 2161 021a 43F00403 		orr	r3, r3, #4
 2162 021e 5375     		strb	r3, [r2, #21]
 885:src/keys.c    **** 		display_current_menu ();
 2163              		.loc 1 885 3 is_stmt 1 view .LVU648
 2164 0220 0920     		movs	r0, #9
 2165 0222 FFF7FEFF 		bl	set_menu
 2166              	.LVL166:
 886:src/keys.c    **** 		lcd_refresh ();
 2167              		.loc 1 886 3 view .LVU649
 2168 0226 FFF7FEFF 		bl	display_current_menu
 2169              	.LVL167:
 887:src/keys.c    **** #else
 2170              		.loc 1 887 3 view .LVU650
 2171 022a 124B     		ldr	r3, .L240+16
 2172 022c 9847     		blx	r3
 2173              	.LVL168:
 891:src/keys.c    **** 
 2174              		.loc 1 891 3 view .LVU651
 921:src/keys.c    **** }
 2175              		.loc 1 921 9 is_stmt 0 view .LVU652
 2176 022e 3322     		movs	r2, #51
 891:src/keys.c    **** 
 2177              		.loc 1 891 3 view .LVU653
 2178 0230 34E7     		b	.L209
 2179              	.LVL169:
 2180              	.L224:
ARM GAS  /tmp/cc8xFAqJ.s 			page 101


 852:src/keys.c    **** 	case K01:
 2181              		.loc 1 852 3 is_stmt 1 view .LVU654
 852:src/keys.c    **** 	case K01:
 2182              		.loc 1 852 10 is_stmt 0 view .LVU655
 2183 0232 2146     		mov	r1, r4
 2184 0234 0020     		movs	r0, #0
 2185              	.LVL170:
 922:src/keys.c    **** 
 2186              		.loc 1 922 1 view .LVU656
 2187 0236 BDE81040 		pop	{r4, lr}
 2188              		.cfi_remember_state
 2189              		.cfi_restore 14
 2190              		.cfi_restore 4
 2191              		.cfi_def_cfa_offset 0
 852:src/keys.c    **** 	case K01:
 2192              		.loc 1 852 10 view .LVU657
 2193 023a FFF7FEBF 		b	check_f_key
 2194              	.LVL171:
 2195              	.L225:
 2196              		.cfi_restore_state
 854:src/keys.c    **** 	case K03:
 2197              		.loc 1 854 3 is_stmt 1 view .LVU658
 854:src/keys.c    **** 	case K03:
 2198              		.loc 1 854 10 is_stmt 0 view .LVU659
 2199 023e 2146     		mov	r1, r4
 2200 0240 0120     		movs	r0, #1
 2201              	.LVL172:
 922:src/keys.c    **** 
 2202              		.loc 1 922 1 view .LVU660
 2203 0242 BDE81040 		pop	{r4, lr}
 2204              		.cfi_remember_state
 2205              		.cfi_restore 14
 2206              		.cfi_restore 4
 2207              		.cfi_def_cfa_offset 0
 854:src/keys.c    **** 	case K03:
 2208              		.loc 1 854 10 view .LVU661
 2209 0246 FFF7FEBF 		b	check_f_key
 2210              	.LVL173:
 2211              	.L239:
 2212              		.cfi_restore_state
 821:src/keys.c    **** 	    }
 2213              		.loc 1 821 8 is_stmt 1 view .LVU662
 922:src/keys.c    **** 
 2214              		.loc 1 922 1 is_stmt 0 view .LVU663
 2215 024a BDE81040 		pop	{r4, lr}
 2216              		.cfi_remember_state
 2217              		.cfi_restore 14
 2218              		.cfi_restore 4
 2219              		.cfi_def_cfa_offset 0
 821:src/keys.c    **** 	    }
 2220              		.loc 1 821 15 view .LVU664
 2221 024e 0F21     		movs	r1, #15
 2222 0250 FFF7FEBF 		b	check_f_key
 2223              	.LVL174:
 2224              	.L238:
 2225              		.cfi_restore_state
 829:src/keys.c    **** 	    }
ARM GAS  /tmp/cc8xFAqJ.s 			page 102


 2226              		.loc 1 829 8 is_stmt 1 view .LVU665
 922:src/keys.c    **** 
 2227              		.loc 1 922 1 is_stmt 0 view .LVU666
 2228 0254 BDE81040 		pop	{r4, lr}
 2229              		.cfi_remember_state
 2230              		.cfi_restore 14
 2231              		.cfi_restore 4
 2232              		.cfi_def_cfa_offset 0
 829:src/keys.c    **** 	    }
 2233              		.loc 1 829 15 view .LVU667
 2234 0258 1021     		movs	r1, #16
 2235 025a 0120     		movs	r0, #1
 2236 025c FFF7FEBF 		b	check_f_key
 2237              	.LVL175:
 2238              	.L237:
 2239              		.cfi_restore_state
 842:src/keys.c    **** 	    }
 2240              		.loc 1 842 15 view .LVU668
 2241 0260 1422     		movs	r2, #20
 2242 0262 1BE7     		b	.L209
 2243              	.L241:
 2244              		.align	2
 2245              	.L240:
 2246 0264 00000000 		.word	main_ram
 2247 0268 00000000 		.word	.LANCHOR1
 2248 026c 00000000 		.word	.LANCHOR2
 2249 0270 00000000 		.word	StateWhileOn
 2250 0274 31020008 		.word	134218289
 2251              		.cfi_endproc
 2252              	.LFE19:
 2254              		.section	.text.process_fg_shifted,"ax",%progbits
 2255              		.align	1
 2256              		.p2align 2,,3
 2257              		.syntax unified
 2258              		.thumb
 2259              		.thumb_func
 2260              		.fpu fpv4-sp-d16
 2262              	process_fg_shifted:
 2263              	.LVL176:
 2264              	.LFB20:
 928:src/keys.c    **** 
 2265              		.loc 1 928 48 is_stmt 1 view -0
 2266              		.cfi_startproc
 2267              		@ args = 0, pretend = 0, frame = 0
 2268              		@ frame_needed = 0, uses_anonymous_args = 0
 931:src/keys.c    **** 		// Row 1
 2269              		.loc 1 931 2 view .LVU670
 982:src/keys.c    **** 		STATE_UNFINISHED,
 2270              		.loc 1 982 2 view .LVU671
 989:src/keys.c    **** 	int lc = keycode_to_linear(c);
 2271              		.loc 1 989 2 view .LVU672
 2272              	.LBB346:
 2273              	.LBI346:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 2274              		.loc 1 114 13 view .LVU673
 2275              	.LBE346:
 115:src/keys.c    **** }
ARM GAS  /tmp/cc8xFAqJ.s 			page 103


 2276              		.loc 1 115 2 view .LVU674
 2277              	.LBB363:
 2278              	.LBB347:
 2279              	.LBI347:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 2280              		.loc 1 104 20 view .LVU675
 2281              	.LBB348:
 105:src/keys.c    **** 	State2.shifts = shift;
 2282              		.loc 1 105 2 view .LVU676
 2283              	.LBB349:
 2284              	.LBI349:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 2285              		.loc 1 96 13 view .LVU677
 2286              	.LBB350:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2287              		.loc 1 97 2 view .LVU678
 2288              	.LBE350:
 2289              	.LBE349:
 2290              	.LBE348:
 2291              	.LBE347:
 2292              	.LBE363:
 928:src/keys.c    **** 
 2293              		.loc 1 928 48 is_stmt 0 view .LVU679
 2294 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2295              		.cfi_def_cfa_offset 24
 2296              		.cfi_offset 4, -24
 2297              		.cfi_offset 5, -20
 2298              		.cfi_offset 6, -16
 2299              		.cfi_offset 7, -12
 2300              		.cfi_offset 8, -8
 2301              		.cfi_offset 14, -4
 928:src/keys.c    **** 
 2302              		.loc 1 928 48 view .LVU680
 2303 0004 0446     		mov	r4, r0
 2304              	.LBB364:
 2305              	.LBB359:
 2306              	.LBB355:
 2307              	.LBB353:
 2308              	.LBB351:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2309              		.loc 1 97 18 view .LVU681
 2310 0006 FFF7FEFF 		bl	shift_down
 2311              	.LVL177:
  98:src/keys.c    **** }
 2312              		.loc 1 98 2 is_stmt 1 view .LVU682
  98:src/keys.c    **** }
 2313              		.loc 1 98 52 is_stmt 0 view .LVU683
 2314 000a 0028     		cmp	r0, #0
 2315 000c 72D0     		beq	.L289
 2316 000e DFF89482 		ldr	r8, .L303+16
 2317 0012 0546     		mov	r5, r0
 2318              	.L243:
 2319              	.LVL178:
  98:src/keys.c    **** }
 2320              		.loc 1 98 52 view .LVU684
 2321              	.LBE351:
 2322              	.LBE353:
ARM GAS  /tmp/cc8xFAqJ.s 			page 104


 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2323              		.loc 1 106 2 is_stmt 1 view .LVU685
 2324              	.LBE355:
 2325              	.LBE359:
 2326              	.LBE364:
 2327              	.LBB365:
 2328              	.LBB366:
 158:src/keys.c    **** }
 2329              		.loc 1 158 23 is_stmt 0 view .LVU686
 2330 0014 9F4B     		ldr	r3, .L303
 2331              	.LBE366:
 2332              	.LBE365:
 991:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2333              		.loc 1 991 21 view .LVU687
 2334 0016 A049     		ldr	r1, .L303+4
 2335              	.LBB369:
 2336              	.LBB367:
 158:src/keys.c    **** }
 2337              		.loc 1 158 23 view .LVU688
 2338 0018 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 2339              	.LBE367:
 2340              	.LBE369:
 991:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2341              		.loc 1 991 21 view .LVU689
 2342 001a 4300     		lsls	r3, r0, #1
 2343 001c 022D     		cmp	r5, #2
 2344 001e 08BF     		it	eq
 2345 0020 0133     		addeq	r3, r3, #1
 2346              	.LBB370:
 2347              	.LBB360:
 2348              	.LBB356:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2349              		.loc 1 106 16 view .LVU690
 2350 0022 0022     		movs	r2, #0
 2351              	.LBE356:
 2352              	.LBE360:
 2353              	.LBE370:
 991:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2354              		.loc 1 991 21 view .LVU691
 2355 0024 31F81360 		ldrh	r6, [r1, r3, lsl #1]
 2356              	.LBB371:
 2357              	.LBB361:
 2358              	.LBB357:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2359              		.loc 1 106 16 view .LVU692
 2360 0028 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 2361              		.loc 1 108 2 is_stmt 1 view .LVU693
 2362              	.LVL179:
 108:src/keys.c    **** }
 2363              		.loc 1 108 2 is_stmt 0 view .LVU694
 2364              	.LBE357:
 2365              	.LBE361:
 2366              	.LBE371:
 990:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 2367              		.loc 1 990 2 is_stmt 1 view .LVU695
 2368              	.LBB372:
ARM GAS  /tmp/cc8xFAqJ.s 			page 105


 2369              	.LBI365:
 146:src/keys.c    **** {
 2370              		.loc 1 146 12 view .LVU696
 2371              	.LBB368:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 2372              		.loc 1 148 2 view .LVU697
 158:src/keys.c    **** }
 2373              		.loc 1 158 2 view .LVU698
 158:src/keys.c    **** }
 2374              		.loc 1 158 2 is_stmt 0 view .LVU699
 2375              	.LBE368:
 2376              	.LBE372:
 991:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 2377              		.loc 1 991 2 is_stmt 1 view .LVU700
 992:src/keys.c    **** 	if (no_int)
 2378              		.loc 1 992 2 view .LVU701
 2379 002c 06F47047 		and	r7, r6, #61440
 2380              	.LVL180:
 993:src/keys.c    **** 		op &= ~NO_INT;
 2381              		.loc 1 993 2 view .LVU702
 993:src/keys.c    **** 		op &= ~NO_INT;
 2382              		.loc 1 993 5 is_stmt 0 view .LVU703
 2383 0030 B7F5704F 		cmp	r7, #61440
 2384 0034 63D0     		beq	.L297
 996:src/keys.c    **** 	case K00:
 2385              		.loc 1 996 2 is_stmt 1 view .LVU704
 2386 0036 282C     		cmp	r4, #40
 2387 0038 34D8     		bhi	.L264
 2388 003a DFE804F0 		tbb	[pc, r4]
 2389              	.L265:
 2390 003e D3       		.byte	(.L255-.L265)/2
 2391 003f 39       		.byte	(.L253-.L265)/2
 2392 0040 33       		.byte	(.L264-.L265)/2
 2393 0041 39       		.byte	(.L253-.L265)/2
 2394 0042 33       		.byte	(.L264-.L265)/2
 2395 0043 33       		.byte	(.L264-.L265)/2
 2396 0044 33       		.byte	(.L264-.L265)/2
 2397 0045 33       		.byte	(.L264-.L265)/2
 2398 0046 33       		.byte	(.L264-.L265)/2
 2399 0047 33       		.byte	(.L264-.L265)/2
 2400 0048 33       		.byte	(.L264-.L265)/2
 2401 0049 33       		.byte	(.L264-.L265)/2
 2402 004a 15       		.byte	(.L252-.L265)/2
 2403 004b 33       		.byte	(.L264-.L265)/2
 2404 004c 33       		.byte	(.L264-.L265)/2
 2405 004d 33       		.byte	(.L264-.L265)/2
 2406 004e 33       		.byte	(.L264-.L265)/2
 2407 004f 33       		.byte	(.L264-.L265)/2
 2408 0050 E0       		.byte	(.L251-.L265)/2
 2409 0051 B9       		.byte	(.L250-.L265)/2
 2410 0052 33       		.byte	(.L264-.L265)/2
 2411 0053 33       		.byte	(.L264-.L265)/2
 2412 0054 33       		.byte	(.L264-.L265)/2
 2413 0055 33       		.byte	(.L264-.L265)/2
 2414 0056 33       		.byte	(.L264-.L265)/2
 2415 0057 33       		.byte	(.L264-.L265)/2
 2416 0058 33       		.byte	(.L264-.L265)/2
ARM GAS  /tmp/cc8xFAqJ.s 			page 106


 2417 0059 33       		.byte	(.L264-.L265)/2
 2418 005a 33       		.byte	(.L264-.L265)/2
 2419 005b 33       		.byte	(.L264-.L265)/2
 2420 005c 44       		.byte	(.L249-.L265)/2
 2421 005d CB       		.byte	(.L248-.L265)/2
 2422 005e 49       		.byte	(.L246-.L265)/2
 2423 005f 49       		.byte	(.L246-.L265)/2
 2424 0060 33       		.byte	(.L264-.L265)/2
 2425 0061 33       		.byte	(.L264-.L265)/2
 2426 0062 33       		.byte	(.L264-.L265)/2
 2427 0063 33       		.byte	(.L264-.L265)/2
 2428 0064 33       		.byte	(.L264-.L265)/2
 2429 0065 49       		.byte	(.L246-.L265)/2
 2430 0066 49       		.byte	(.L246-.L265)/2
 2431 0067 00       		.p2align 1
 2432              	.L252:
1028:src/keys.c    **** 			if (is_bad_cmdline())
 2433              		.loc 1 1028 3 view .LVU705
1028:src/keys.c    **** 			if (is_bad_cmdline())
 2434              		.loc 1 1028 6 is_stmt 0 view .LVU706
 2435 0068 012D     		cmp	r5, #1
 2436 006a 11D1     		bne	.L258
1029:src/keys.c    **** 				return STATE_UNFINISHED;
 2437              		.loc 1 1029 4 is_stmt 1 view .LVU707
1029:src/keys.c    **** 				return STATE_UNFINISHED;
 2438              		.loc 1 1029 8 is_stmt 0 view .LVU708
 2439 006c FFF7FEFF 		bl	is_bad_cmdline
 2440              	.LVL181:
1029:src/keys.c    **** 				return STATE_UNFINISHED;
 2441              		.loc 1 1029 7 view .LVU709
 2442 0070 0028     		cmp	r0, #0
 2443 0072 40F0B380 		bne	.L291
1031:src/keys.c    **** 			State2.alphas = 1;
 2444              		.loc 1 1031 4 is_stmt 1 view .LVU710
 2445 0076 FFF7FEFF 		bl	process_cmdline_set_lift
 2446              	.LVL182:
1032:src/keys.c    **** #ifdef DM42
 2447              		.loc 1 1032 4 view .LVU711
1032:src/keys.c    **** #ifdef DM42
 2448              		.loc 1 1032 18 is_stmt 0 view .LVU712
 2449 007a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
1034:src/keys.c    **** 			display_current_menu();
 2450              		.loc 1 1034 4 view .LVU713
 2451 007e 1020     		movs	r0, #16
1032:src/keys.c    **** #ifdef DM42
 2452              		.loc 1 1032 18 view .LVU714
 2453 0080 43F00803 		orr	r3, r3, #8
 2454 0084 88F81630 		strb	r3, [r8, #22]
1034:src/keys.c    **** 			display_current_menu();
 2455              		.loc 1 1034 4 is_stmt 1 view .LVU715
 2456 0088 FFF7FEFF 		bl	set_menu
 2457              	.LVL183:
1035:src/keys.c    **** #endif
 2458              		.loc 1 1035 4 view .LVU716
 2459 008c FFF7FEFF 		bl	display_current_menu
 2460              	.LVL184:
 2461              	.L258:
ARM GAS  /tmp/cc8xFAqJ.s 			page 107


1080:src/keys.c    **** 		return STATE_UNFINISHED;
 2462              		.loc 1 1080 2 view .LVU717
1080:src/keys.c    **** 		return STATE_UNFINISHED;
 2463              		.loc 1 1080 5 is_stmt 0 view .LVU718
 2464 0090 B7F5704F 		cmp	r7, #61440
 2465 0094 06D1     		bne	.L264
 2466              	.L245:
1080:src/keys.c    **** 		return STATE_UNFINISHED;
 2467              		.loc 1 1080 13 discriminator 1 view .LVU719
 2468 0096 814B     		ldr	r3, .L303+8
 2469 0098 1B68     		ldr	r3, [r3]
 2470 009a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2471 009e DA07     		lsls	r2, r3, #31
 2472 00a0 00F19C80 		bmi	.L291
 2473              	.L264:
1083:src/keys.c    **** #undef NO_INT
 2474              		.loc 1 1083 2 is_stmt 1 view .LVU720
 2475              	.LVL185:
 2476              	.LBB373:
 2477              	.LBI373:
 704:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 2478              		.loc 1 704 12 view .LVU721
 2479              	.LBB374:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 2480              		.loc 1 705 2 view .LVU722
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 2481              		.loc 1 705 6 is_stmt 0 view .LVU723
 2482 00a4 3312     		asrs	r3, r6, #8
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 2483              		.loc 1 705 5 view .LVU724
 2484 00a6 012B     		cmp	r3, #1
 2485 00a8 1FD0     		beq	.L267
 2486              	.LVL186:
 2487              	.L242:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 2488              		.loc 1 705 5 view .LVU725
 2489              	.LBE374:
 2490              	.LBE373:
1085:src/keys.c    **** 
 2491              		.loc 1 1085 1 view .LVU726
 2492 00aa 3046     		mov	r0, r6
 2493 00ac BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2494              	.LVL187:
 2495              	.L253:
1017:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2496              		.loc 1 1017 4 is_stmt 1 view .LVU727
1017:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2497              		.loc 1 1017 8 is_stmt 0 view .LVU728
 2498 00b0 7A4B     		ldr	r3, .L303+8
 2499 00b2 1B68     		ldr	r3, [r3]
 2500 00b4 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1017:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2501              		.loc 1 1017 7 view .LVU729
 2502 00b8 DB07     		lsls	r3, r3, #31
 2503 00ba 00F19980 		bmi	.L294
1080:src/keys.c    **** 		return STATE_UNFINISHED;
 2504              		.loc 1 1080 2 is_stmt 1 view .LVU730
ARM GAS  /tmp/cc8xFAqJ.s 			page 108


1080:src/keys.c    **** 		return STATE_UNFINISHED;
 2505              		.loc 1 1080 5 is_stmt 0 view .LVU731
 2506 00be B7F5704F 		cmp	r7, #61440
 2507 00c2 EFD1     		bne	.L264
 2508 00c4 E7E7     		b	.L245
 2509              	.L249:
1060:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 2510              		.loc 1 1060 3 is_stmt 1 view .LVU732
1060:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 2511              		.loc 1 1060 18 is_stmt 0 view .LVU733
 2512 00c6 FFF7FEFF 		bl	shift_down
 2513              	.LVL188:
1060:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 2514              		.loc 1 1060 6 view .LVU734
 2515 00ca 0028     		cmp	r0, #0
 2516 00cc 40F0BA80 		bne	.L298
 2517              	.L246:
1069:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 2518              		.loc 1 1069 3 is_stmt 1 view .LVU735
1069:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 2519              		.loc 1 1069 6 is_stmt 0 view .LVU736
 2520 00d0 B6F59C7F 		cmp	r6, #312
 2521 00d4 40F0A580 		bne	.L299
1080:src/keys.c    **** 		return STATE_UNFINISHED;
 2522              		.loc 1 1080 2 is_stmt 1 view .LVU737
1080:src/keys.c    **** 		return STATE_UNFINISHED;
 2523              		.loc 1 1080 5 is_stmt 0 view .LVU738
 2524 00d8 B7F5704F 		cmp	r7, #61440
 2525 00dc 05D1     		bne	.L267
1080:src/keys.c    **** 		return STATE_UNFINISHED;
 2526              		.loc 1 1080 13 view .LVU739
 2527 00de 6F4B     		ldr	r3, .L303+8
 2528 00e0 1B68     		ldr	r3, [r3]
 2529 00e2 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2530 00e6 DB07     		lsls	r3, r3, #31
 2531 00e8 78D4     		bmi	.L291
 2532              	.LVL189:
 2533              	.L267:
 2534              	.LBB377:
 2535              	.LBB375:
1080:src/keys.c    **** 		return STATE_UNFINISHED;
 2536              		.loc 1 1080 13 view .LVU740
 2537 00ea 3046     		mov	r0, r6
 2538              	.LBE375:
 2539              	.LBE377:
1085:src/keys.c    **** 
 2540              		.loc 1 1085 1 view .LVU741
 2541 00ec BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 2542              		.cfi_remember_state
 2543              		.cfi_restore 14
 2544              		.cfi_restore 8
 2545              		.cfi_restore 7
 2546              		.cfi_restore 6
 2547              		.cfi_restore 5
 2548              		.cfi_restore 4
 2549              		.cfi_def_cfa_offset 0
 2550              	.LVL190:
ARM GAS  /tmp/cc8xFAqJ.s 			page 109


 2551              	.LBB378:
 2552              	.LBB376:
1085:src/keys.c    **** 
 2553              		.loc 1 1085 1 view .LVU742
 2554 00f0 FFF7FEBF 		b	check_confirm.part.0
 2555              	.LVL191:
 2556              	.L289:
 2557              		.cfi_restore_state
1085:src/keys.c    **** 
 2558              		.loc 1 1085 1 view .LVU743
 2559              	.LBE376:
 2560              	.LBE378:
 2561              	.LBB379:
 2562              	.LBB362:
 2563              	.LBB358:
 2564              	.LBB354:
 2565              	.LBB352:
  98:src/keys.c    **** }
 2566              		.loc 1 98 52 view .LVU744
 2567 00f4 DFF8AC81 		ldr	r8, .L303+16
 2568 00f8 98F81050 		ldrb	r5, [r8, #16]	@ zero_extendqisi2
 2569 00fc 8AE7     		b	.L243
 2570              	.LVL192:
 2571              	.L297:
  98:src/keys.c    **** }
 2572              		.loc 1 98 52 view .LVU745
 2573              	.LBE352:
 2574              	.LBE354:
 2575              	.LBE358:
 2576              	.LBE362:
 2577              	.LBE379:
 994:src/keys.c    **** 
 2578              		.loc 1 994 3 is_stmt 1 view .LVU746
 994:src/keys.c    **** 
 2579              		.loc 1 994 6 is_stmt 0 view .LVU747
 2580 00fe 26F47046 		bic	r6, r6, #61440
 2581              	.LVL193:
 996:src/keys.c    **** 	case K00:
 2582              		.loc 1 996 2 is_stmt 1 view .LVU748
 2583 0102 282C     		cmp	r4, #40
 2584 0104 C7D8     		bhi	.L245
 2585 0106 01A3     		adr	r3, .L247
 2586 0108 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 2587              		.p2align 2
 2588              	.L247:
 2589 010c E5010000 		.word	.L255+1
 2590 0110 B1000000 		.word	.L253+1
 2591 0114 97000000 		.word	.L245+1
 2592 0118 B1000000 		.word	.L253+1
 2593 011c 97000000 		.word	.L245+1
 2594 0120 97000000 		.word	.L245+1
 2595 0124 97000000 		.word	.L245+1
 2596 0128 97000000 		.word	.L245+1
 2597 012c 97000000 		.word	.L245+1
 2598 0130 97000000 		.word	.L245+1
 2599 0134 97000000 		.word	.L245+1
 2600 0138 97000000 		.word	.L245+1
ARM GAS  /tmp/cc8xFAqJ.s 			page 110


 2601 013c 69000000 		.word	.L252+1
 2602 0140 97000000 		.word	.L245+1
 2603 0144 97000000 		.word	.L245+1
 2604 0148 97000000 		.word	.L245+1
 2605 014c 97000000 		.word	.L245+1
 2606 0150 97000000 		.word	.L245+1
 2607 0154 FF010000 		.word	.L251+1
 2608 0158 B1010000 		.word	.L250+1
 2609 015c 97000000 		.word	.L245+1
 2610 0160 97000000 		.word	.L245+1
 2611 0164 97000000 		.word	.L245+1
 2612 0168 97000000 		.word	.L245+1
 2613 016c 97000000 		.word	.L245+1
 2614 0170 97000000 		.word	.L245+1
 2615 0174 97000000 		.word	.L245+1
 2616 0178 97000000 		.word	.L245+1
 2617 017c 97000000 		.word	.L245+1
 2618 0180 97000000 		.word	.L245+1
 2619 0184 C7000000 		.word	.L249+1
 2620 0188 D5010000 		.word	.L248+1
 2621 018c D1000000 		.word	.L246+1
 2622 0190 D1000000 		.word	.L246+1
 2623 0194 97000000 		.word	.L245+1
 2624 0198 97000000 		.word	.L245+1
 2625 019c 97000000 		.word	.L245+1
 2626 01a0 97000000 		.word	.L245+1
 2627 01a4 97000000 		.word	.L245+1
 2628 01a8 D1000000 		.word	.L246+1
 2629 01ac D1000000 		.word	.L246+1
 2630              		.p2align 1
 2631              	.L250:
1041:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2632              		.loc 1 1041 4 view .LVU749
1041:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2633              		.loc 1 1041 7 is_stmt 0 view .LVU750
 2634 01b0 022D     		cmp	r5, #2
 2635 01b2 7FF46DAF 		bne	.L258
1041:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2636              		.loc 1 1041 27 discriminator 1 view .LVU751
 2637 01b6 394B     		ldr	r3, .L303+8
 2638 01b8 1B68     		ldr	r3, [r3]
 2639 01ba 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2640 01be DC07     		lsls	r4, r3, #31
 2641 01c0 7FF566AF 		bpl	.L258
1041:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2642              		.loc 1 1041 45 discriminator 2 view .LVU752
 2643 01c4 0D20     		movs	r0, #13
 2644              	.LVL194:
1041:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2645              		.loc 1 1041 45 discriminator 2 view .LVU753
 2646 01c6 FFF7FEFF 		bl	intltr
 2647              	.LVL195:
1041:src/keys.c    **** 	    return OP_SPEC | OP_D;
 2648              		.loc 1 1041 42 discriminator 2 view .LVU754
 2649 01ca 0028     		cmp	r0, #0
 2650 01cc 3FF460AF 		beq	.L258
1042:src/keys.c    **** 	  }
ARM GAS  /tmp/cc8xFAqJ.s 			page 111


 2651              		.loc 1 1042 13 view .LVU755
 2652 01d0 1226     		movs	r6, #18
 2653              	.LVL196:
1042:src/keys.c    **** 	  }
 2654              		.loc 1 1042 13 view .LVU756
 2655 01d2 6AE7     		b	.L242
 2656              	.LVL197:
 2657              	.L248:
1052:src/keys.c    **** 			return STATE_UNFINISHED;
 2658              		.loc 1 1052 3 is_stmt 1 view .LVU757
1052:src/keys.c    **** 			return STATE_UNFINISHED;
 2659              		.loc 1 1052 7 is_stmt 0 view .LVU758
 2660 01d4 FFF7FEFF 		bl	is_bad_cmdline
 2661              	.LVL198:
1052:src/keys.c    **** 			return STATE_UNFINISHED;
 2662              		.loc 1 1052 6 view .LVU759
 2663 01d8 0028     		cmp	r0, #0
 2664 01da 40D0     		beq	.L300
 2665              	.LVL199:
 2666              	.L291:
1073:src/keys.c    **** 		}
 2667              		.loc 1 1073 11 view .LVU760
 2668 01dc 3326     		movs	r6, #51
 2669              	.LVL200:
1085:src/keys.c    **** 
 2670              		.loc 1 1085 1 view .LVU761
 2671 01de 3046     		mov	r0, r6
 2672 01e0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2673              	.LVL201:
 2674              	.L255:
 998:src/keys.c    **** 	    State2.hyp = 1;
 2675              		.loc 1 998 4 is_stmt 1 view .LVU762
 998:src/keys.c    **** 	    State2.hyp = 1;
 2676              		.loc 1 998 8 is_stmt 0 view .LVU763
 2677 01e4 2D4B     		ldr	r3, .L303+8
 2678 01e6 1B68     		ldr	r3, [r3]
 2679 01e8 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 998:src/keys.c    **** 	    State2.hyp = 1;
 2680              		.loc 1 998 7 view .LVU764
 2681 01ec DA07     		lsls	r2, r3, #31
 2682 01ee 3CD5     		bpl	.L301
 2683              	.L294:
1017:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 2684              		.loc 1 1017 20 discriminator 1 view .LVU765
 2685 01f0 012D     		cmp	r5, #1
 2686 01f2 48D0     		beq	.L302
1080:src/keys.c    **** 		return STATE_UNFINISHED;
 2687              		.loc 1 1080 2 is_stmt 1 view .LVU766
1080:src/keys.c    **** 		return STATE_UNFINISHED;
 2688              		.loc 1 1080 5 is_stmt 0 view .LVU767
 2689 01f4 B7F5704F 		cmp	r7, #61440
 2690 01f8 7FF454AF 		bne	.L264
 2691 01fc EEE7     		b	.L291
 2692              	.L251:
1046:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2693              		.loc 1 1046 4 is_stmt 1 view .LVU768
1046:src/keys.c    **** 	    return OP_SPEC | OP_E;
ARM GAS  /tmp/cc8xFAqJ.s 			page 112


 2694              		.loc 1 1046 7 is_stmt 0 view .LVU769
 2695 01fe 022D     		cmp	r5, #2
 2696 0200 7FF446AF 		bne	.L258
1046:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2697              		.loc 1 1046 27 discriminator 1 view .LVU770
 2698 0204 254B     		ldr	r3, .L303+8
 2699 0206 1B68     		ldr	r3, [r3]
 2700 0208 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 2701 020c D807     		lsls	r0, r3, #31
 2702              	.LVL202:
1046:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2703              		.loc 1 1046 27 discriminator 1 view .LVU771
 2704 020e 7FF53FAF 		bpl	.L258
1046:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2705              		.loc 1 1046 45 discriminator 2 view .LVU772
 2706 0212 0E20     		movs	r0, #14
 2707 0214 FFF7FEFF 		bl	intltr
 2708              	.LVL203:
1046:src/keys.c    **** 	    return OP_SPEC | OP_E;
 2709              		.loc 1 1046 42 discriminator 2 view .LVU773
 2710 0218 0028     		cmp	r0, #0
 2711 021a 3FF439AF 		beq	.L258
1047:src/keys.c    **** 	  }
 2712              		.loc 1 1047 13 view .LVU774
 2713 021e 1326     		movs	r6, #19
 2714              	.LVL204:
1047:src/keys.c    **** 	  }
 2715              		.loc 1 1047 13 view .LVU775
 2716 0220 43E7     		b	.L242
 2717              	.LVL205:
 2718              	.L299:
1070:src/keys.c    **** 				init_arg((enum rarg) op);
 2719              		.loc 1 1070 4 is_stmt 1 view .LVU776
1070:src/keys.c    **** 				init_arg((enum rarg) op);
 2720              		.loc 1 1070 7 is_stmt 0 view .LVU777
 2721 0222 B7F5704F 		cmp	r7, #61440
 2722 0226 05D1     		bne	.L263
1070:src/keys.c    **** 				init_arg((enum rarg) op);
 2723              		.loc 1 1070 18 discriminator 1 view .LVU778
 2724 0228 1C4B     		ldr	r3, .L303+8
 2725 022a 1B68     		ldr	r3, [r3]
 2726 022c 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1070:src/keys.c    **** 				init_arg((enum rarg) op);
 2727              		.loc 1 1070 8 discriminator 1 view .LVU779
 2728 0230 D907     		lsls	r1, r3, #31
 2729 0232 D3D4     		bmi	.L291
 2730              	.L263:
1071:src/keys.c    **** 			}
 2731              		.loc 1 1071 5 is_stmt 1 view .LVU780
 2732              	.LVL206:
 2733              	.LBB380:
 2734              	.LBI380:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 2735              		.loc 1 552 13 view .LVU781
 2736              	.LBB381:
 553:src/keys.c    **** 		return;
 2737              		.loc 1 553 2 view .LVU782
ARM GAS  /tmp/cc8xFAqJ.s 			page 113


 553:src/keys.c    **** 		return;
 2738              		.loc 1 553 6 is_stmt 0 view .LVU783
 2739 0234 FFF7FEFF 		bl	is_bad_cmdline
 2740              	.LVL207:
 553:src/keys.c    **** 		return;
 2741              		.loc 1 553 5 view .LVU784
 2742 0238 0028     		cmp	r0, #0
 2743 023a CFD1     		bne	.L291
 2744 023c F0B2     		uxtb	r0, r6
 2745 023e FFF7FEFF 		bl	init_arg.part.0
 2746              	.LVL208:
 2747 0242 CBE7     		b	.L291
 2748              	.LVL209:
 2749              	.L298:
 553:src/keys.c    **** 		return;
 2750              		.loc 1 553 5 view .LVU785
 2751              	.LBE381:
 2752              	.LBE380:
1061:src/keys.c    **** 			return STATE_UNFINISHED;
 2753              		.loc 1 1061 4 is_stmt 1 view .LVU786
1061:src/keys.c    **** 			return STATE_UNFINISHED;
 2754              		.loc 1 1061 26 is_stmt 0 view .LVU787
 2755 0244 A5F10105 		sub	r5, #1
 2756              	.LVL210:
1061:src/keys.c    **** 			return STATE_UNFINISHED;
 2757              		.loc 1 1061 17 view .LVU788
 2758 0248 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
1061:src/keys.c    **** 			return STATE_UNFINISHED;
 2759              		.loc 1 1061 26 view .LVU789
 2760 024c B5FA85F5 		clz	r5, r5
 2761 0250 6D09     		lsrs	r5, r5, #5
1061:src/keys.c    **** 			return STATE_UNFINISHED;
 2762              		.loc 1 1061 17 view .LVU790
 2763 0252 65F3C713 		bfi	r3, r5, #7, #1
 2764 0256 88F81730 		strb	r3, [r8, #23]
1062:src/keys.c    **** 		}
 2765              		.loc 1 1062 4 is_stmt 1 view .LVU791
1062:src/keys.c    **** 		}
 2766              		.loc 1 1062 11 is_stmt 0 view .LVU792
 2767 025a 3326     		movs	r6, #51
 2768              	.LVL211:
1062:src/keys.c    **** 		}
 2769              		.loc 1 1062 11 view .LVU793
 2770 025c 25E7     		b	.L242
 2771              	.LVL212:
 2772              	.L300:
1054:src/keys.c    **** 		State2.test = op;
 2773              		.loc 1 1054 3 is_stmt 1 view .LVU794
 2774 025e FFF7FEFF 		bl	process_cmdline_set_lift
 2775              	.LVL213:
1055:src/keys.c    **** 		return STATE_UNFINISHED;
 2776              		.loc 1 1055 3 view .LVU795
1055:src/keys.c    **** 		return STATE_UNFINISHED;
 2777              		.loc 1 1055 15 is_stmt 0 view .LVU796
 2778 0262 88F80F60 		strb	r6, [r8, #15]
1056:src/keys.c    **** 
 2779              		.loc 1 1056 3 is_stmt 1 view .LVU797
ARM GAS  /tmp/cc8xFAqJ.s 			page 114


1056:src/keys.c    **** 
 2780              		.loc 1 1056 10 is_stmt 0 view .LVU798
 2781 0266 3326     		movs	r6, #51
 2782              	.LVL214:
1056:src/keys.c    **** 
 2783              		.loc 1 1056 10 view .LVU799
 2784 0268 1FE7     		b	.L242
 2785              	.LVL215:
 2786              	.L301:
 999:src/keys.c    **** 	    State2.dot = op;
 2787              		.loc 1 999 6 is_stmt 1 view .LVU800
1000:src/keys.c    **** 	    // State2.cmplx = 0;
 2788              		.loc 1 1000 6 view .LVU801
 999:src/keys.c    **** 	    State2.dot = op;
 2789              		.loc 1 999 17 is_stmt 0 view .LVU802
 2790 026a 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 2791 026e 06F00103 		and	r3, r6, #1
 2792 0272 9B01     		lsls	r3, r3, #6
 2793 0274 43F02003 		orr	r3, r3, #32
 2794 0278 22F06002 		bic	r2, r2, #96
 2795 027c 1343     		orrs	r3, r3, r2
 2796 027e 88F81530 		strb	r3, [r8, #21]
1002:src/keys.c    **** 	  }
 2797              		.loc 1 1002 6 is_stmt 1 view .LVU803
1002:src/keys.c    **** 	  }
 2798              		.loc 1 1002 13 is_stmt 0 view .LVU804
 2799 0282 3326     		movs	r6, #51
 2800              	.LVL216:
1002:src/keys.c    **** 	  }
 2801              		.loc 1 1002 13 view .LVU805
 2802 0284 11E7     		b	.L242
 2803              	.LVL217:
 2804              	.L302:
1018:src/keys.c    **** 		}
 2805              		.loc 1 1018 4 is_stmt 1 view .LVU806
1018:src/keys.c    **** 		}
 2806              		.loc 1 1018 34 is_stmt 0 view .LVU807
 2807 0286 064B     		ldr	r3, .L303+12
1085:src/keys.c    **** 
 2808              		.loc 1 1085 1 view .LVU808
 2809 0288 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 2810              		.cfi_restore 14
 2811              		.cfi_restore 8
 2812              		.cfi_restore 7
 2813              		.cfi_restore 6
 2814              		.cfi_restore 5
 2815              		.cfi_restore 4
 2816              		.cfi_def_cfa_offset 0
 2817              	.LVL218:
1018:src/keys.c    **** 		}
 2818              		.loc 1 1018 11 view .LVU809
 2819 028c 33F81010 		ldrh	r1, [r3, r0, lsl #1]
 2820 0290 FFF7FEBF 		b	check_f_key
 2821              	.LVL219:
 2822              	.L304:
1018:src/keys.c    **** 		}
 2823              		.loc 1 1018 11 view .LVU810
ARM GAS  /tmp/cc8xFAqJ.s 			page 115


 2824              		.align	2
 2825              	.L303:
 2826 0294 00000000 		.word	.LANCHOR1
 2827 0298 00000000 		.word	.LANCHOR3
 2828 029c 00000000 		.word	main_ram
 2829 02a0 00000000 		.word	.LANCHOR4
 2830 02a4 00000000 		.word	StateWhileOn
 2831              		.cfi_endproc
 2832              	.LFE20:
 2834              		.section	.text.set_window,"ax",%progbits
 2835              		.align	1
 2836              		.p2align 2,,3
 2837              		.syntax unified
 2838              		.thumb
 2839              		.thumb_func
 2840              		.fpu fpv4-sp-d16
 2842              	set_window:
 2843              	.LVL220:
 2844              	.LFB58:
2966:src/keys.c    **** 
2967:src/keys.c    **** 
2968:src/keys.c    **** /*
2969:src/keys.c    ****  *  CAT command
2970:src/keys.c    ****  */
2971:src/keys.c    **** static int process_labellist(const keycode c) {
2972:src/keys.c    **** 	unsigned int pc = State2.digval;
2973:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
2974:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
2975:src/keys.c    **** 	const int opcode = getprog(pc);
2976:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
2977:src/keys.c    **** 	const int direct = State2.runmode;
2978:src/keys.c    **** 	const enum shifts shift = reset_shift();
2979:src/keys.c    **** 	int op = STATE_UNFINISHED;
2980:src/keys.c    **** 
2981:src/keys.c    **** 	if (n < REGION_XROM) {
2982:src/keys.c    **** 		// Digits take you to that segment
2983:src/keys.c    **** 		pc = addrLIB(1, n);
2984:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
2985:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
2986:src/keys.c    **** 		State2.digval = pc;
2987:src/keys.c    **** 		return STATE_UNFINISHED;
2988:src/keys.c    **** 	}
2989:src/keys.c    **** 
2990:src/keys.c    **** 	switch (c | (shift << 8)) {
2991:src/keys.c    **** 
2992:src/keys.c    **** 	case K_UP | (SHIFT_F << 8):		// Find first label of previous program
2993:src/keys.c    **** 		pc = advance_to_previous_label(advance_to_previous_label(pc, 1), 1);
2994:src/keys.c    **** 		goto next;
2995:src/keys.c    **** 
2996:src/keys.c    **** 	case K_DOWN | (SHIFT_F << 8):		// Find next program
2997:src/keys.c    **** 		pc = advance_to_next_label(pc, 0, 1);
2998:src/keys.c    **** 	case K_DOWN:				// Find next label
2999:src/keys.c    **** 	next:
3000:src/keys.c    **** 		State2.digval = advance_to_next_label(pc, 1, 0);
3001:src/keys.c    **** 		return STATE_UNFINISHED;
3002:src/keys.c    **** 
3003:src/keys.c    **** 	case K_UP:				// Find previous label
ARM GAS  /tmp/cc8xFAqJ.s 			page 116


3004:src/keys.c    **** 		State2.digval = advance_to_previous_label(pc, 0);
3005:src/keys.c    **** 		return STATE_UNFINISHED;
3006:src/keys.c    **** 
3007:src/keys.c    **** 	case K24:				// <- exits
3008:src/keys.c    **** 		break;
3009:src/keys.c    **** 
3010:src/keys.c    **** 	case K20:				// ENTER^
3011:src/keys.c    **** 	set_pc_and_exit:
3012:src/keys.c    **** 		set_pc(pc);			// forced branch
3013:src/keys.c    **** 		break;
3014:src/keys.c    **** 
3015:src/keys.c    **** 	case K24 | (SHIFT_F << 8):		// CLP
3016:src/keys.c    **** 		op = (OP_NIL | OP_CLPROG);
3017:src/keys.c    **** 		goto set_pc_and_exit;
3018:src/keys.c    **** 
3019:src/keys.c    **** 	case K10:				// STO
3020:src/keys.c    **** 	case K11:				// RCL
3021:src/keys.c    **** 	  //#ifndef DM42	
3022:src/keys.c    **** 		op = c == K10 ? (OP_NIL | OP_PSTO) : (OP_NIL | OP_PRCL);
3023:src/keys.c    **** 	  //#endif
3024:src/keys.c    **** /* #ifdef DM42 */
3025:src/keys.c    **** /* 	        op = OP_NIL; */
3026:src/keys.c    **** /* #endif	     */
3027:src/keys.c    **** 	  goto set_pc_and_exit;
3028:src/keys.c    **** #ifdef DM42
3029:src/keys.c    **** 	case K05:				// XEQ
3030:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
3031:src/keys.c    **** 		goto xeq_or_gto;
3032:src/keys.c    **** 
3033:src/keys.c    **** 	case K05 | (SHIFT_F << 8):		// GTO
3034:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
3035:src/keys.c    **** 	xeq_or_gto:
3036:src/keys.c    **** 		if (label)
3037:src/keys.c    **** 			break;
3038:src/keys.c    **** 		return STATE_UNFINISHED;
3039:src/keys.c    **** #else
3040:src/keys.c    **** 	case K30:				// XEQ
3041:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
3042:src/keys.c    **** 		goto xeq_or_gto;
3043:src/keys.c    **** 
3044:src/keys.c    **** 	case K30 | (SHIFT_H << 8):		// GTO
3045:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
3046:src/keys.c    **** 	xeq_or_gto:
3047:src/keys.c    **** 		if (label)
3048:src/keys.c    **** 			break;
3049:src/keys.c    **** 		return STATE_UNFINISHED;
3050:src/keys.c    **** #endif		
3051:src/keys.c    **** 	case K63:				// R/S
3052:src/keys.c    **** 		if (direct && label) {
3053:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
3054:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
3055:src/keys.c    **** 			break;
3056:src/keys.c    **** 		}
3057:src/keys.c    **** 		return STATE_UNFINISHED;
3058:src/keys.c    **** 
3059:src/keys.c    **** 	case K63 | (SHIFT_H << 8):		// P/R
3060:src/keys.c    **** 		State2.runmode = 0;		// switch to program mode
ARM GAS  /tmp/cc8xFAqJ.s 			page 117


3061:src/keys.c    **** 		goto set_pc_and_exit;
3062:src/keys.c    **** 
3063:src/keys.c    **** 	default:
3064:src/keys.c    **** 		return STATE_UNFINISHED;
3065:src/keys.c    **** 	}
3066:src/keys.c    **** 	State2.digval = 0;
3067:src/keys.c    **** 	State2.labellist = 0;
3068:src/keys.c    **** 	return check_confirm(op);
3069:src/keys.c    **** }
3070:src/keys.c    **** 
3071:src/keys.c    **** 
3072:src/keys.c    **** static void set_window(int c) {
 2845              		.loc 1 3072 31 is_stmt 1 view -0
 2846              		.cfi_startproc
 2847              		@ args = 0, pretend = 0, frame = 0
 2848              		@ frame_needed = 0, uses_anonymous_args = 0
3073:src/keys.c    **** 
3074:src/keys.c    **** 	if (State2.runmode) {
 2849              		.loc 1 3074 2 view .LVU812
3072:src/keys.c    **** 
 2850              		.loc 1 3072 31 is_stmt 0 view .LVU813
 2851 0000 38B5     		push	{r3, r4, r5, lr}
 2852              		.cfi_def_cfa_offset 16
 2853              		.cfi_offset 3, -16
 2854              		.cfi_offset 4, -12
 2855              		.cfi_offset 5, -8
 2856              		.cfi_offset 14, -4
 2857              		.loc 1 3074 6 view .LVU814
 2858 0002 224C     		ldr	r4, .L320
 2859 0004 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 2860              		.loc 1 3074 5 view .LVU815
 2861 0006 5A06     		lsls	r2, r3, #25
 2862 0008 00D4     		bmi	.L317
 2863              	.LVL221:
 2864              	.L305:
3075:src/keys.c    **** 		process_cmdline_set_lift();
3076:src/keys.c    **** 		// Make sure IntMaxWindow is recalculated
3077:src/keys.c    **** 		State2.disp_freeze = 0;
3078:src/keys.c    **** 		display();	
3079:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
3080:src/keys.c    **** 			if (UState.intm) {
3081:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
3082:src/keys.c    **** 					State2.window--;
3083:src/keys.c    **** 				return;
3084:src/keys.c    **** 			}
3085:src/keys.c    **** 			else 
3086:src/keys.c    **** 				State2.window = is_dblmode();
3087:src/keys.c    **** 		}
3088:src/keys.c    **** 		else {
3089:src/keys.c    **** 			if (UState.intm) {
3090:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
3091:src/keys.c    **** 					State2.window++;
3092:src/keys.c    **** 				return;
3093:src/keys.c    **** 			}
3094:src/keys.c    **** 			else
3095:src/keys.c    **** 				State2.window = 0;
3096:src/keys.c    **** 		}
ARM GAS  /tmp/cc8xFAqJ.s 			page 118


3097:src/keys.c    **** 		set_smode(SDISP_SHOW);
3098:src/keys.c    **** 	}
3099:src/keys.c    **** }
 2865              		.loc 1 3099 1 view .LVU816
 2866 000a 38BD     		pop	{r3, r4, r5, pc}
 2867              	.LVL222:
 2868              	.L317:
3075:src/keys.c    **** 		process_cmdline_set_lift();
 2869              		.loc 1 3075 3 is_stmt 1 view .LVU817
 2870 000c 0546     		mov	r5, r0
 2871 000e FFF7FEFF 		bl	process_cmdline_set_lift
 2872              	.LVL223:
3077:src/keys.c    **** 		display();	
 2873              		.loc 1 3077 3 view .LVU818
3077:src/keys.c    **** 		display();	
 2874              		.loc 1 3077 22 is_stmt 0 view .LVU819
 2875 0012 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 2876 0014 6FF30413 		bfc	r3, #4, #1
 2877 0018 E375     		strb	r3, [r4, #23]
3078:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
 2878              		.loc 1 3078 3 is_stmt 1 view .LVU820
 2879 001a FFF7FEFF 		bl	display
 2880              	.LVL224:
3079:src/keys.c    **** 			if (UState.intm) {
 2881              		.loc 1 3079 3 view .LVU821
3080:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2882              		.loc 1 3080 8 is_stmt 0 view .LVU822
 2883 001e 1C4B     		ldr	r3, .L320+4
 2884 0020 1B68     		ldr	r3, [r3]
3079:src/keys.c    **** 			if (UState.intm) {
 2885              		.loc 1 3079 6 view .LVU823
 2886 0022 2C2D     		cmp	r5, #44
3080:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2887              		.loc 1 3080 8 view .LVU824
 2888 0024 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
3079:src/keys.c    **** 			if (UState.intm) {
 2889              		.loc 1 3079 6 view .LVU825
 2890 0028 18D0     		beq	.L318
3089:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 2891              		.loc 1 3089 4 is_stmt 1 view .LVU826
3089:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 2892              		.loc 1 3089 7 is_stmt 0 view .LVU827
 2893 002a 13F00103 		ands	r3, r3, #1
 2894 002e 09D1     		bne	.L319
3095:src/keys.c    **** 		}
 2895              		.loc 1 3095 5 is_stmt 1 view .LVU828
3095:src/keys.c    **** 		}
 2896              		.loc 1 3095 19 is_stmt 0 view .LVU829
 2897 0030 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 2898 0032 63F3C502 		bfi	r2, r3, #3, #3
 2899 0036 2275     		strb	r2, [r4, #20]
 2900              	.L311:
3097:src/keys.c    **** 	}
 2901              		.loc 1 3097 3 is_stmt 1 view .LVU830
 2902              	.LVL225:
 2903              	.LBB388:
 2904              	.LBI388:
ARM GAS  /tmp/cc8xFAqJ.s 			page 119


 731:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 2905              		.loc 1 731 13 view .LVU831
 2906              	.LBB389:
 732:src/keys.c    **** }
 2907              		.loc 1 732 2 view .LVU832
 732:src/keys.c    **** }
 2908              		.loc 1 732 15 is_stmt 0 view .LVU833
 2909 0038 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 2910 003a 013B     		subs	r3, r3, #1
 2911 003c 18BF     		it	ne
 2912 003e 0123     		movne	r3, #1
 2913 0040 6374     		strb	r3, [r4, #17]
 2914              	.LVL226:
 732:src/keys.c    **** }
 2915              		.loc 1 732 15 view .LVU834
 2916              	.LBE389:
 2917              	.LBE388:
 2918              		.loc 1 3099 1 view .LVU835
 2919 0042 38BD     		pop	{r3, r4, r5, pc}
 2920              	.LVL227:
 2921              	.L319:
3090:src/keys.c    **** 					State2.window++;
 2922              		.loc 1 3090 5 is_stmt 1 view .LVU836
3090:src/keys.c    **** 					State2.window++;
 2923              		.loc 1 3090 22 is_stmt 0 view .LVU837
 2924 0044 134A     		ldr	r2, .L320+8
3090:src/keys.c    **** 					State2.window++;
 2925              		.loc 1 3090 42 view .LVU838
 2926 0046 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
3090:src/keys.c    **** 					State2.window++;
 2927              		.loc 1 3090 8 view .LVU839
 2928 0048 1168     		ldr	r1, [r2]
3090:src/keys.c    **** 					State2.window++;
 2929              		.loc 1 3090 42 view .LVU840
 2930 004a C3F3C202 		ubfx	r2, r3, #3, #3
3090:src/keys.c    **** 					State2.window++;
 2931              		.loc 1 3090 8 view .LVU841
 2932 004e 8A42     		cmp	r2, r1
 2933 0050 DBDA     		bge	.L305
3091:src/keys.c    **** 				return;
 2934              		.loc 1 3091 6 is_stmt 1 view .LVU842
3091:src/keys.c    **** 				return;
 2935              		.loc 1 3091 19 is_stmt 0 view .LVU843
 2936 0052 0132     		adds	r2, r2, #1
 2937 0054 62F3C503 		bfi	r3, r2, #3, #3
 2938 0058 2375     		strb	r3, [r4, #20]
 2939              		.loc 1 3099 1 view .LVU844
 2940 005a 38BD     		pop	{r3, r4, r5, pc}
 2941              	.LVL228:
 2942              	.L318:
3080:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2943              		.loc 1 3080 4 is_stmt 1 view .LVU845
3080:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 2944              		.loc 1 3080 7 is_stmt 0 view .LVU846
 2945 005c DB07     		lsls	r3, r3, #31
 2946 005e 0ED5     		bpl	.L309
 2947              	.LBB390:
ARM GAS  /tmp/cc8xFAqJ.s 			page 120


 2948              	.LBI390:
3072:src/keys.c    **** 
 2949              		.loc 1 3072 13 is_stmt 1 view .LVU847
 2950              	.LVL229:
 2951              	.LBB391:
3081:src/keys.c    **** 					State2.window--;
 2952              		.loc 1 3081 5 view .LVU848
3081:src/keys.c    **** 					State2.window--;
 2953              		.loc 1 3081 22 is_stmt 0 view .LVU849
 2954 0060 0C4B     		ldr	r3, .L320+8
3081:src/keys.c    **** 					State2.window--;
 2955              		.loc 1 3081 8 view .LVU850
 2956 0062 1B68     		ldr	r3, [r3]
 2957 0064 002B     		cmp	r3, #0
 2958 0066 D0DD     		ble	.L305
3081:src/keys.c    **** 					State2.window--;
 2959              		.loc 1 3081 43 view .LVU851
 2960 0068 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
3081:src/keys.c    **** 					State2.window--;
 2961              		.loc 1 3081 26 view .LVU852
 2962 006a 13F0380F 		tst	r3, #56
 2963 006e CCD0     		beq	.L305
3082:src/keys.c    **** 				return;
 2964              		.loc 1 3082 6 is_stmt 1 view .LVU853
3082:src/keys.c    **** 				return;
 2965              		.loc 1 3082 12 is_stmt 0 view .LVU854
 2966 0070 C3F3C202 		ubfx	r2, r3, #3, #3
3082:src/keys.c    **** 				return;
 2967              		.loc 1 3082 19 view .LVU855
 2968 0074 0732     		adds	r2, r2, #7
 2969 0076 62F3C503 		bfi	r3, r2, #3, #3
 2970 007a 2375     		strb	r3, [r4, #20]
 2971              	.LBE391:
 2972              	.LBE390:
 2973              		.loc 1 3099 1 view .LVU856
 2974 007c 38BD     		pop	{r3, r4, r5, pc}
 2975              	.LVL230:
 2976              	.L309:
3086:src/keys.c    **** 		}
 2977              		.loc 1 3086 5 is_stmt 1 view .LVU857
3086:src/keys.c    **** 		}
 2978              		.loc 1 3086 21 is_stmt 0 view .LVU858
 2979 007e FFF7FEFF 		bl	is_dblmode
 2980              	.LVL231:
3086:src/keys.c    **** 		}
 2981              		.loc 1 3086 19 view .LVU859
 2982 0082 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 2983 0084 60F3C503 		bfi	r3, r0, #3, #3
 2984 0088 2375     		strb	r3, [r4, #20]
 2985 008a D5E7     		b	.L311
 2986              	.L321:
 2987              		.align	2
 2988              	.L320:
 2989 008c 00000000 		.word	StateWhileOn
 2990 0090 00000000 		.word	main_ram
 2991 0094 00000000 		.word	IntMaxWindow
 2992              		.cfi_endproc
ARM GAS  /tmp/cc8xFAqJ.s 			page 121


 2993              	.LFE58:
 2995              		.section	.text.arg_storcl,"ax",%progbits
 2996              		.align	1
 2997              		.p2align 2,,3
 2998              		.syntax unified
 2999              		.thumb
 3000              		.thumb_func
 3001              		.fpu fpv4-sp-d16
 3003              	arg_storcl:
 3004              	.LVL232:
 3005              	.LFB39:
1998:src/keys.c    **** 	unsigned int b = CmdBase;
 3006              		.loc 1 1998 56 is_stmt 1 view -0
 3007              		.cfi_startproc
 3008              		@ args = 0, pretend = 0, frame = 0
 3009              		@ frame_needed = 0, uses_anonymous_args = 0
 3010              		@ link register save eliminated.
1999:src/keys.c    **** 
 3011              		.loc 1 1999 2 view .LVU861
1999:src/keys.c    **** 
 3012              		.loc 1 1999 19 is_stmt 0 view .LVU862
 3013 0000 0F4A     		ldr	r2, .L354
 3014 0002 D37F     		ldrb	r3, [r2, #31]	@ zero_extendqisi2
 3015              	.LVL233:
2001:src/keys.c    **** 		CmdBase += n;
 3016              		.loc 1 2001 2 is_stmt 1 view .LVU863
 3017              	.LBB400:
 3018              	.LBI400:
1989:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3019              		.loc 1 1989 12 view .LVU864
 3020              	.LBB401:
1994:src/keys.c    **** #endif
 3021              		.loc 1 1994 2 view .LVU865
1994:src/keys.c    **** #endif
 3022              		.loc 1 1994 41 is_stmt 0 view .LVU866
 3023 0004 032B     		cmp	r3, #3
 3024 0006 14D0     		beq	.L323
1994:src/keys.c    **** #endif
 3025              		.loc 1 1994 24 view .LVU867
 3026 0008 0A2B     		cmp	r3, #10
 3027 000a 12D0     		beq	.L323
 3028              	.LVL234:
 3029              	.LBB402:
 3030              	.LBI402:
1989:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3031              		.loc 1 1989 12 is_stmt 1 view .LVU868
 3032              	.LBB403:
1994:src/keys.c    **** #endif
 3033              		.loc 1 1994 41 is_stmt 0 view .LVU869
 3034 000c 19B1     		cbz	r1, .L324
1994:src/keys.c    **** #endif
 3035              		.loc 1 1994 51 view .LVU870
 3036 000e 152B     		cmp	r3, #21
 3037 0010 0FD0     		beq	.L323
1994:src/keys.c    **** #endif
 3038              		.loc 1 1994 70 view .LVU871
 3039 0012 1A2B     		cmp	r3, #26
ARM GAS  /tmp/cc8xFAqJ.s 			page 122


 3040 0014 0DD0     		beq	.L323
 3041              	.L324:
 3042              	.LVL235:
1994:src/keys.c    **** #endif
 3043              		.loc 1 1994 70 view .LVU872
 3044              	.LBE403:
 3045              	.LBE402:
 3046              	.LBE401:
 3047              	.LBE400:
2006:src/keys.c    **** 		b -= n;
 3048              		.loc 1 2006 2 is_stmt 1 view .LVU873
2006:src/keys.c    **** 		b -= n;
 3049              		.loc 1 2006 5 is_stmt 0 view .LVU874
 3050 0016 8342     		cmp	r3, r0
 3051 0018 09D3     		bcc	.L329
2007:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 3052              		.loc 1 2007 3 is_stmt 1 view .LVU875
2007:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 3053              		.loc 1 2007 5 is_stmt 0 view .LVU876
 3054 001a 1B1A     		subs	r3, r3, r0
 3055              	.LVL236:
2008:src/keys.c    **** 			CmdBase = b;
 3056              		.loc 1 2008 3 is_stmt 1 view .LVU877
 3057              	.LBB404:
 3058              	.LBI404:
1989:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3059              		.loc 1 1989 12 view .LVU878
 3060              	.LBB405:
1994:src/keys.c    **** #endif
 3061              		.loc 1 1994 2 view .LVU879
1994:src/keys.c    **** #endif
 3062              		.loc 1 1994 41 is_stmt 0 view .LVU880
 3063 001c 032B     		cmp	r3, #3
 3064 001e 0CD0     		beq	.L327
1994:src/keys.c    **** #endif
 3065              		.loc 1 1994 24 view .LVU881
 3066 0020 0A2B     		cmp	r3, #10
 3067 0022 0AD0     		beq	.L327
 3068              	.LVL237:
 3069              	.LBB406:
 3070              	.LBI406:
1989:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 3071              		.loc 1 1989 12 is_stmt 1 view .LVU882
 3072              	.LBB407:
1994:src/keys.c    **** #endif
 3073              		.loc 1 1994 41 is_stmt 0 view .LVU883
 3074 0024 19B1     		cbz	r1, .L329
1994:src/keys.c    **** #endif
 3075              		.loc 1 1994 51 view .LVU884
 3076 0026 152B     		cmp	r3, #21
 3077 0028 07D0     		beq	.L327
1994:src/keys.c    **** #endif
 3078              		.loc 1 1994 70 view .LVU885
 3079 002a 1A2B     		cmp	r3, #26
 3080 002c 05D0     		beq	.L327
 3081              	.LVL238:
 3082              	.L329:
ARM GAS  /tmp/cc8xFAqJ.s 			page 123


1994:src/keys.c    **** #endif
 3083              		.loc 1 1994 70 view .LVU886
 3084              	.LBE407:
 3085              	.LBE406:
 3086              	.LBE405:
 3087              	.LBE404:
2013:src/keys.c    **** }
 3088              		.loc 1 2013 9 view .LVU887
 3089 002e 0020     		movs	r0, #0
 3090              	.LVL239:
2014:src/keys.c    **** 
 3091              		.loc 1 2014 1 view .LVU888
 3092 0030 7047     		bx	lr
 3093              	.LVL240:
 3094              	.L323:
2002:src/keys.c    **** 		return 1;
 3095              		.loc 1 2002 3 is_stmt 1 view .LVU889
2002:src/keys.c    **** 		return 1;
 3096              		.loc 1 2002 11 is_stmt 0 view .LVU890
 3097 0032 1844     		add	r0, r0, r3
 3098              	.LVL241:
2002:src/keys.c    **** 		return 1;
 3099              		.loc 1 2002 11 view .LVU891
 3100 0034 D077     		strb	r0, [r2, #31]
2003:src/keys.c    **** 	}
 3101              		.loc 1 2003 3 is_stmt 1 view .LVU892
2003:src/keys.c    **** 	}
 3102              		.loc 1 2003 10 is_stmt 0 view .LVU893
 3103 0036 0120     		movs	r0, #1
 3104 0038 7047     		bx	lr
 3105              	.LVL242:
 3106              	.L327:
2009:src/keys.c    **** 			return 1;
 3107              		.loc 1 2009 4 is_stmt 1 view .LVU894
2009:src/keys.c    **** 			return 1;
 3108              		.loc 1 2009 12 is_stmt 0 view .LVU895
 3109 003a D377     		strb	r3, [r2, #31]
2010:src/keys.c    **** 		}
 3110              		.loc 1 2010 4 is_stmt 1 view .LVU896
2010:src/keys.c    **** 		}
 3111              		.loc 1 2010 11 is_stmt 0 view .LVU897
 3112 003c 0120     		movs	r0, #1
 3113              	.LVL243:
2010:src/keys.c    **** 		}
 3114              		.loc 1 2010 11 view .LVU898
 3115 003e 7047     		bx	lr
 3116              	.L355:
 3117              		.align	2
 3118              	.L354:
 3119 0040 00000000 		.word	StateWhileOn
 3120              		.cfi_endproc
 3121              	.LFE39:
 3123              		.section	.text.process_arg,"ax",%progbits
 3124              		.align	1
 3125              		.p2align 2,,3
 3126              		.syntax unified
 3127              		.thumb
ARM GAS  /tmp/cc8xFAqJ.s 			page 124


 3128              		.thumb_func
 3129              		.fpu fpv4-sp-d16
 3131              	process_arg:
 3132              	.LVL244:
 3133              	.LFB42:
2048:src/keys.c    **** 	unsigned int base = CmdBase;
 3134              		.loc 1 2048 41 is_stmt 1 view -0
 3135              		.cfi_startproc
 3136              		@ args = 0, pretend = 0, frame = 8
 3137              		@ frame_needed = 0, uses_anonymous_args = 0
2049:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3138              		.loc 1 2049 2 view .LVU900
2048:src/keys.c    **** 	unsigned int base = CmdBase;
 3139              		.loc 1 2048 41 is_stmt 0 view .LVU901
 3140 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3141              		.cfi_def_cfa_offset 36
 3142              		.cfi_offset 4, -36
 3143              		.cfi_offset 5, -32
 3144              		.cfi_offset 6, -28
 3145              		.cfi_offset 7, -24
 3146              		.cfi_offset 8, -20
 3147              		.cfi_offset 9, -16
 3148              		.cfi_offset 10, -12
 3149              		.cfi_offset 11, -8
 3150              		.cfi_offset 14, -4
2049:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3151              		.loc 1 2049 22 view .LVU902
 3152 0004 C94C     		ldr	r4, .L500
2051:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3153              		.loc 1 2051 31 view .LVU903
 3154 0006 DFF834A3 		ldr	r10, .L500+16
2049:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3155              		.loc 1 2049 22 view .LVU904
 3156 000a E57F     		ldrb	r5, [r4, #31]	@ zero_extendqisi2
 3157              	.LBB429:
 3158              	.LBB430:
 3159              	.LBB431:
 3160              	.LBB432:
 143:src/keys.c    **** }
 3161              		.loc 1 143 23 view .LVU905
 3162 000c C84A     		ldr	r2, .L500+4
 3163              	.LBE432:
 3164              	.LBE431:
 234:src/keys.c    **** }
 3165              		.loc 1 234 28 view .LVU906
 3166 000e C94E     		ldr	r6, .L500+8
 3167              	.LBB435:
 3168              	.LBB433:
 143:src/keys.c    **** }
 3169              		.loc 1 143 23 view .LVU907
 3170 0010 125C     		ldrb	r2, [r2, r0]	@ zero_extendqisi2
 3171              	.LBE433:
 3172              	.LBE435:
 3173              	.LBE430:
 3174              	.LBE429:
2052:src/keys.c    **** 	const enum shifts shift = reset_shift();
 3175              		.loc 1 2052 20 view .LVU908
ARM GAS  /tmp/cc8xFAqJ.s 			page 125


 3176 0012 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 3177              	.LBB439:
 3178              	.LBB437:
 234:src/keys.c    **** }
 3179              		.loc 1 234 28 view .LVU909
 3180 0014 16F80290 		ldrb	r9, [r6, r2]	@ zero_extendqisi2
 3181              	.LBE437:
 3182              	.LBE439:
2051:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3183              		.loc 1 2051 31 view .LVU910
 3184 0018 0AEB0511 		add	r1, r10, r5, lsl #4
2048:src/keys.c    **** 	unsigned int base = CmdBase;
 3185              		.loc 1 2048 41 view .LVU911
 3186 001c 83B0     		sub	sp, sp, #12
 3187              		.cfi_def_cfa_offset 48
2051:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3188              		.loc 1 2051 31 view .LVU912
 3189 001e 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
2049:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 3190              		.loc 1 2049 15 view .LVU913
 3191 0020 0095     		str	r5, [sp]
 3192              	.LVL245:
2050:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
 3193              		.loc 1 2050 2 is_stmt 1 view .LVU914
2051:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3194              		.loc 1 2051 40 is_stmt 0 view .LVU915
 3195 0022 4A07     		lsls	r2, r1, #29
 3196 0024 58BF     		it	pl
 3197 0026 94F91580 		ldrsbpl	r8, [r4, #21]
2052:src/keys.c    **** 	const enum shifts shift = reset_shift();
 3198              		.loc 1 2052 20 view .LVU916
 3199 002a 0193     		str	r3, [sp, #4]
2051:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3200              		.loc 1 2051 40 view .LVU917
 3201 002c 54BF     		ite	pl
 3202 002e 4FEAD878 		lsrpl	r8, r8, #31
 3203 0032 4FF00108 		movmi	r8, #1
2048:src/keys.c    **** 	unsigned int base = CmdBase;
 3204              		.loc 1 2048 41 view .LVU918
 3205 0036 0746     		mov	r7, r0
 3206              	.LVL246:
 3207              	.LBB440:
 3208              	.LBI429:
 210:src/keys.c    **** {
 3209              		.loc 1 210 14 is_stmt 1 view .LVU919
 3210              	.LBB438:
 212:src/keys.c    ****     // K00 - K05
 3211              		.loc 1 212 3 view .LVU920
 234:src/keys.c    **** }
 3212              		.loc 1 234 3 view .LVU921
 3213              	.LBB436:
 3214              	.LBI431:
 131:src/keys.c    **** {
 3215              		.loc 1 131 12 view .LVU922
 3216              	.LBB434:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3217              		.loc 1 133 2 view .LVU923
ARM GAS  /tmp/cc8xFAqJ.s 			page 126


 143:src/keys.c    **** }
 3218              		.loc 1 143 2 view .LVU924
 143:src/keys.c    **** }
 3219              		.loc 1 143 2 is_stmt 0 view .LVU925
 3220              	.LBE434:
 3221              	.LBE436:
 234:src/keys.c    **** }
 3222              		.loc 1 234 10 view .LVU926
 3223 0038 4E46     		mov	r6, r9
 3224              	.LVL247:
 234:src/keys.c    **** }
 3225              		.loc 1 234 10 view .LVU927
 3226              	.LBE438:
 3227              	.LBE440:
2051:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3228              		.loc 1 2051 2 is_stmt 1 view .LVU928
2052:src/keys.c    **** 	const enum shifts shift = reset_shift();
 3229              		.loc 1 2052 2 view .LVU929
2053:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
 3230              		.loc 1 2053 2 view .LVU930
 3231              	.LBB441:
 3232              	.LBI441:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 3233              		.loc 1 114 13 view .LVU931
 3234              	.LBE441:
 115:src/keys.c    **** }
 3235              		.loc 1 115 2 view .LVU932
 3236              	.LBB454:
 3237              	.LBB442:
 3238              	.LBI442:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 3239              		.loc 1 104 20 view .LVU933
 3240              	.LBB443:
 105:src/keys.c    **** 	State2.shifts = shift;
 3241              		.loc 1 105 2 view .LVU934
 3242              	.LBB444:
 3243              	.LBI444:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 3244              		.loc 1 96 13 view .LVU935
 3245              	.LBB445:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3246              		.loc 1 97 2 view .LVU936
 3247              	.LBE445:
 3248              	.LBE444:
 3249              	.LBE443:
 3250              	.LBE442:
 3251              	.LBE454:
2051:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 3252              		.loc 1 2051 31 is_stmt 0 view .LVU937
 3253 003a 4FEA051B 		lsl	fp, r5, #4
 3254              	.LBB455:
 3255              	.LBB451:
 3256              	.LBB448:
 3257              	.LBB447:
 3258              	.LBB446:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3259              		.loc 1 97 18 view .LVU938
ARM GAS  /tmp/cc8xFAqJ.s 			page 127


 3260 003e FFF7FEFF 		bl	shift_down
 3261              	.LVL248:
  98:src/keys.c    **** }
 3262              		.loc 1 98 2 is_stmt 1 view .LVU939
  98:src/keys.c    **** }
 3263              		.loc 1 98 52 is_stmt 0 view .LVU940
 3264 0042 00B9     		cbnz	r0, .L358
 3265 0044 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
 3266              	.LVL249:
 3267              	.L358:
  98:src/keys.c    **** }
 3268              		.loc 1 98 52 view .LVU941
 3269              	.LBE446:
 3270              	.LBE447:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3271              		.loc 1 106 2 is_stmt 1 view .LVU942
 3272              	.LBE448:
 3273              	.LBE451:
 3274              	.LBE455:
2054:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3275              		.loc 1 2054 38 is_stmt 0 view .LVU943
 3276 0046 D344     		add	fp, fp, r10
 3277              	.LBB456:
 3278              	.LBB452:
 3279              	.LBB449:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3280              		.loc 1 106 16 view .LVU944
 3281 0048 4FF0000E 		mov	lr, #0
 3282              	.LBE449:
 3283              	.LBE452:
 3284              	.LBE456:
2054:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3285              		.loc 1 2054 38 view .LVU945
 3286 004c 9BF80510 		ldrb	r1, [fp, #5]	@ zero_extendqisi2
 3287              	.LBB457:
 3288              	.LBB453:
 3289              	.LBB450:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3290              		.loc 1 106 16 view .LVU946
 3291 0050 84F810E0 		strb	lr, [r4, #16]
 108:src/keys.c    **** }
 3292              		.loc 1 108 2 is_stmt 1 view .LVU947
 3293              	.LVL250:
 108:src/keys.c    **** }
 3294              		.loc 1 108 2 is_stmt 0 view .LVU948
 3295              	.LBE450:
 3296              	.LBE453:
 3297              	.LBE457:
2054:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3298              		.loc 1 2054 2 is_stmt 1 view .LVU949
2054:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3299              		.loc 1 2054 61 is_stmt 0 view .LVU950
 3300 0054 8B06     		lsls	r3, r1, #26
 3301 0056 C1F3401C 		ubfx	ip, r1, #5, #1
 3302 005a 19D5     		bpl	.L359
2054:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3303              		.loc 1 2054 61 discriminator 1 view .LVU951
ARM GAS  /tmp/cc8xFAqJ.s 			page 128


 3304 005c 617D     		ldrb	r1, [r4, #21]	@ zero_extendqisi2
 3305 005e 11F0C00F 		tst	r1, #192
 3306 0062 1FD0     		beq	.L488
 3307              	.LVL251:
2058:src/keys.c    **** 	if (base >= NUM_RARG) {
 3308              		.loc 1 2058 2 is_stmt 1 view .LVU952
2059:src/keys.c    **** 		reset_arg();
 3309              		.loc 1 2059 5 is_stmt 0 view .LVU953
 3310 0064 8E2D     		cmp	r5, #142
2058:src/keys.c    **** 	if (base >= NUM_RARG) {
 3311              		.loc 1 2058 4 view .LVU954
 3312 0066 29F08006 		bic	r6, r9, #128
 3313              	.LVL252:
2059:src/keys.c    **** 		reset_arg();
 3314              		.loc 1 2059 2 is_stmt 1 view .LVU955
2059:src/keys.c    **** 		reset_arg();
 3315              		.loc 1 2059 5 is_stmt 0 view .LVU956
 3316 006a 15D8     		bhi	.L388
2054:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3317              		.loc 1 2054 61 view .LVU957
 3318 006c F446     		mov	ip, lr
 3319              	.L368:
2064:src/keys.c    **** 	  switch (n) {
 3320              		.loc 1 2064 35 discriminator 1 view .LVU958
 3321 006e 6169     		ldr	r1, [r4, #20]
 3322 0070 11F4103F 		tst	r1, #147456
 3323 0074 2ED1     		bne	.L370
2065:src/keys.c    **** 	  case regX_idx:
 3324              		.loc 1 2065 4 is_stmt 1 view .LVU959
 3325 0076 672E     		cmp	r6, #103
 3326 0078 2CD8     		bhi	.L370
2065:src/keys.c    **** 	  case regX_idx:
 3327              		.loc 1 2065 4 is_stmt 0 view .LVU960
 3328 007a 632E     		cmp	r6, #99
 3329 007c 24D9     		bls	.L430
 3330 007e 653E     		subs	r6, r6, #101
 3331              	.LVL253:
2065:src/keys.c    **** 	  case regX_idx:
 3332              		.loc 1 2065 4 view .LVU961
 3333 0080 022E     		cmp	r6, #2
 3334 0082 00F26082 		bhi	.L373
 3335 0086 DFE816F0 		tbh	[pc, r6, lsl #1]
 3336              	.L375:
 3337 008a 1101     		.2byte	(.L377-.L375)/2
 3338 008c 0B01     		.2byte	(.L376-.L375)/2
 3339 008e 1301     		.2byte	(.L374-.L375)/2
 3340              	.LVL254:
 3341              		.p2align 1
 3342              	.L359:
2058:src/keys.c    **** 	if (base >= NUM_RARG) {
 3343              		.loc 1 2058 2 is_stmt 1 view .LVU962
2059:src/keys.c    **** 		reset_arg();
 3344              		.loc 1 2059 5 is_stmt 0 view .LVU963
 3345 0090 8E2D     		cmp	r5, #142
2058:src/keys.c    **** 	if (base >= NUM_RARG) {
 3346              		.loc 1 2058 4 view .LVU964
 3347 0092 29F08006 		bic	r6, r9, #128
ARM GAS  /tmp/cc8xFAqJ.s 			page 129


 3348              	.LVL255:
2059:src/keys.c    **** 		reset_arg();
 3349              		.loc 1 2059 2 is_stmt 1 view .LVU965
2059:src/keys.c    **** 		reset_arg();
 3350              		.loc 1 2059 5 is_stmt 0 view .LVU966
 3351 0096 EAD9     		bls	.L368
 3352              	.LVL256:
 3353              	.L388:
2314:src/keys.c    **** 	default:
 3354              		.loc 1 2314 3 is_stmt 1 view .LVU967
 3355 0098 FFF7FEFF 		bl	reset_arg
 3356              	.LVL257:
 3357              	.L481:
2318:src/keys.c    **** }
 3358              		.loc 1 2318 9 is_stmt 0 view .LVU968
 3359 009c 3320     		movs	r0, #51
 3360              	.L356:
2319:src/keys.c    **** 
 3361              		.loc 1 2319 1 view .LVU969
 3362 009e 03B0     		add	sp, sp, #12
 3363              		.cfi_remember_state
 3364              		.cfi_def_cfa_offset 36
 3365              		@ sp needed
 3366 00a0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3367              	.LVL258:
 3368              	.L488:
 3369              		.cfi_restore_state
2055:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 3370              		.loc 1 2055 2 is_stmt 1 view .LVU970
2055:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 3371              		.loc 1 2055 35 is_stmt 0 view .LVU971
 3372 00a4 292F     		cmp	r7, #41
 3373 00a6 00F0C080 		beq	.L361
2056:src/keys.c    **** 
 3374              		.loc 1 2056 11 view .LVU972
 3375 00aa 0128     		cmp	r0, #1
 3376 00ac 00F0D180 		beq	.L362
2056:src/keys.c    **** 
 3377              		.loc 1 2056 32 discriminator 3 view .LVU973
 3378 00b0 B9F1090F 		cmp	r9, #9
 3379 00b4 00F2B680 		bhi	.L363
 3380              	.LVL259:
2058:src/keys.c    **** 	if (base >= NUM_RARG) {
 3381              		.loc 1 2058 2 is_stmt 1 view .LVU974
2059:src/keys.c    **** 		reset_arg();
 3382              		.loc 1 2059 2 view .LVU975
2059:src/keys.c    **** 		reset_arg();
 3383              		.loc 1 2059 5 is_stmt 0 view .LVU976
 3384 00b8 8E2D     		cmp	r5, #142
 3385 00ba EDD8     		bhi	.L388
2064:src/keys.c    **** 	  switch (n) {
 3386              		.loc 1 2064 35 view .LVU977
 3387 00bc 6169     		ldr	r1, [r4, #20]
 3388 00be 11F4103F 		tst	r1, #147456
2054:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3389              		.loc 1 2054 61 view .LVU978
 3390 00c2 4FF0010C 		mov	ip, #1
ARM GAS  /tmp/cc8xFAqJ.s 			page 130


2064:src/keys.c    **** 	  switch (n) {
 3391              		.loc 1 2064 35 view .LVU979
 3392 00c6 05D1     		bne	.L370
 3393              	.L430:
2065:src/keys.c    **** 	  case regX_idx:
 3394              		.loc 1 2065 4 view .LVU980
 3395 00c8 16B1     		cbz	r6, .L372
 3396 00ca 721F     		subs	r2, r6, #5
 3397 00cc 042A     		cmp	r2, #4
 3398 00ce 01D8     		bhi	.L370
 3399              	.L372:
2080:src/keys.c    **** 	  }
 3400              		.loc 1 2080 6 is_stmt 1 view .LVU981
2080:src/keys.c    **** 	  }
 3401              		.loc 1 2080 13 is_stmt 0 view .LVU982
 3402 00d0 3046     		mov	r0, r6
 3403              	.LVL260:
2080:src/keys.c    **** 	  }
 3404              		.loc 1 2080 13 view .LVU983
 3405 00d2 E6E0     		b	.L482
 3406              	.LVL261:
 3407              	.L370:
2087:src/keys.c    **** 		// row column shorthand addressing
 3408              		.loc 1 2087 2 is_stmt 1 view .LVU984
2093:src/keys.c    **** 		switch ((int)c) {
 3409              		.loc 1 2093 2 view .LVU985
2093:src/keys.c    **** 		switch ((int)c) {
 3410              		.loc 1 2093 5 is_stmt 0 view .LVU986
 3411 00d4 4D2D     		cmp	r5, #77
 3412 00d6 00F0B180 		beq	.L489
2093:src/keys.c    **** 		switch ((int)c) {
 3413              		.loc 1 2093 23 discriminator 1 view .LVU987
 3414 00da 05F17302 		add	r2, r5, #115
 3415 00de D2B2     		uxtb	r2, r2
 3416 00e0 012A     		cmp	r2, #1
 3417 00e2 61D9     		bls	.L490
 3418              	.LVL262:
 3419              	.L379:
2124:src/keys.c    **** #else
 3420              		.loc 1 2124 3 is_stmt 1 view .LVU988
2124:src/keys.c    **** #else
 3421              		.loc 1 2124 11 is_stmt 0 view .LVU989
 3422 00e4 E577     		strb	r5, [r4, #31]
2147:src/keys.c    **** 	case K_F:
 3423              		.loc 1 2147 2 is_stmt 1 view .LVU990
 3424 00e6 2D2F     		cmp	r7, #45
 3425 00e8 D8D8     		bhi	.L481
 3426 00ea 01A3     		adr	r3, .L383
 3427 00ec 53F827F0 		ldr	pc, [r3, r7, lsl #2]
 3428              		.p2align 2
 3429              	.L383:
 3430 00f0 C1010000 		.word	.L400+1
 3431 00f4 C1010000 		.word	.L400+1
 3432 00f8 C1010000 		.word	.L400+1
 3433 00fc C1010000 		.word	.L400+1
 3434 0100 9D000000 		.word	.L481+1
 3435 0104 9D000000 		.word	.L481+1
ARM GAS  /tmp/cc8xFAqJ.s 			page 131


 3436 0108 9D000000 		.word	.L481+1
 3437 010c 9D000000 		.word	.L481+1
 3438 0110 C1010000 		.word	.L400+1
 3439 0114 C1010000 		.word	.L400+1
 3440 0118 C1010000 		.word	.L400+1
 3441 011c C1010000 		.word	.L400+1
 3442 0120 45040000 		.word	.L399+1
 3443 0124 9D000000 		.word	.L481+1
 3444 0128 9D000000 		.word	.L481+1
 3445 012c 9D000000 		.word	.L481+1
 3446 0130 C7020000 		.word	.L398+1
 3447 0134 9D000000 		.word	.L481+1
 3448 0138 19020000 		.word	.L397+1
 3449 013c 9D000000 		.word	.L481+1
 3450 0140 9D000000 		.word	.L481+1
 3451 0144 9D000000 		.word	.L481+1
 3452 0148 F3020000 		.word	.L396+1
 3453 014c 9D000000 		.word	.L481+1
 3454 0150 FF020000 		.word	.L395+1
 3455 0154 0B030000 		.word	.L394+1
 3456 0158 9D000000 		.word	.L481+1
 3457 015c 9D000000 		.word	.L481+1
 3458 0160 81020000 		.word	.L393+1
 3459 0164 9D000000 		.word	.L481+1
 3460 0168 9D000000 		.word	.L481+1
 3461 016c 1F030000 		.word	.L392+1
 3462 0170 4D040000 		.word	.L391+1
 3463 0174 41030000 		.word	.L390+1
 3464 0178 4D030000 		.word	.L389+1
 3465 017c 9D000000 		.word	.L481+1
 3466 0180 99000000 		.word	.L388+1
 3467 0184 9D000000 		.word	.L481+1
 3468 0188 67030000 		.word	.L387+1
 3469 018c 9D000000 		.word	.L481+1
 3470 0190 AD030000 		.word	.L386+1
 3471 0194 CD030000 		.word	.L385+1
 3472 0198 9D000000 		.word	.L481+1
 3473 019c 9D000000 		.word	.L481+1
 3474 01a0 ED030000 		.word	.L384+1
 3475 01a4 25040000 		.word	.L382+1
 3476              	.LVL263:
 3477              		.p2align 1
 3478              	.L490:
2094:src/keys.c    **** 		case K_UP:	// up arrow
 3479              		.loc 1 2094 3 view .LVU991
 3480 01a8 122F     		cmp	r7, #18
 3481 01aa 2FD0     		beq	.L426
 3482 01ac 182F     		cmp	r7, #24
 3483 01ae 01D0     		beq	.L427
 3484 01b0 012F     		cmp	r7, #1
 3485 01b2 97D1     		bne	.L379
 3486              	.L427:
2110:src/keys.c    **** 		    base = RARG_SIG0;
 3487              		.loc 1 2110 5 view .LVU992
2114:src/keys.c    **** 		    base = RARG_FIX;
 3488              		.loc 1 2114 5 view .LVU993
2114:src/keys.c    **** 		    base = RARG_FIX;
ARM GAS  /tmp/cc8xFAqJ.s 			page 132


 3489              		.loc 1 2114 8 is_stmt 0 view .LVU994
 3490 01b4 8D2D     		cmp	r5, #141
 3491 01b6 7DD1     		bne	.L491
 3492 01b8 4D23     		movs	r3, #77
 3493 01ba 0093     		str	r3, [sp]
 3494              	.LVL264:
2115:src/keys.c    **** 		    break;
 3495              		.loc 1 2115 12 view .LVU995
 3496 01bc 1D46     		mov	r5, r3
 3497 01be 91E7     		b	.L379
 3498              	.LVL265:
 3499              	.L400:
2202:src/keys.c    **** 			return arg_eval(n);
 3500              		.loc 1 2202 4 is_stmt 1 view .LVU996
2202:src/keys.c    **** 			return arg_eval(n);
 3501              		.loc 1 2202 8 is_stmt 0 view .LVU997
 3502 01c0 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
2202:src/keys.c    **** 			return arg_eval(n);
 3503              		.loc 1 2202 7 view .LVU998
 3504 01c2 5306     		lsls	r3, r2, #25
 3505 01c4 6AD4     		bmi	.L415
2202:src/keys.c    **** 			return arg_eval(n);
 3506              		.loc 1 2202 19 discriminator 1 view .LVU999
 3507 01c6 B8F1000F 		cmp	r8, #0
 3508 01ca 67D1     		bne	.L415
2204:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 3509              		.loc 1 2204 3 is_stmt 1 view .LVU1000
2204:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 3510              		.loc 1 2204 6 is_stmt 0 view .LVU1001
 3511 01cc 032F     		cmp	r7, #3
 3512 01ce 3FF665AF 		bhi	.L481
2205:src/keys.c    **** 		break;
 3513              		.loc 1 2205 4 is_stmt 1 view .LVU1002
 3514              	.LVL266:
 3515              	.LBB458:
 3516              	.LBI458:
1975:src/keys.c    **** 	const unsigned int b = CmdBase;
 3517              		.loc 1 1975 12 view .LVU1003
 3518              	.LBB459:
1976:src/keys.c    **** 
 3519              		.loc 1 1976 2 view .LVU1004
1978:src/keys.c    **** 	{
 3520              		.loc 1 1978 2 view .LVU1005
1978:src/keys.c    **** 	{
 3521              		.loc 1 1978 16 is_stmt 0 view .LVU1006
 3522 01d2 009B     		ldr	r3, [sp]
 3523 01d4 0AEB0311 		add	r1, r10, r3, lsl #4
 3524 01d8 1801     		lsls	r0, r3, #4
 3525 01da 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
1978:src/keys.c    **** 	{
 3526              		.loc 1 1978 5 view .LVU1007
 3527 01dc 8D06     		lsls	r5, r1, #26
 3528 01de 05D4     		bmi	.L406
1978:src/keys.c    **** 	{
 3529              		.loc 1 1978 40 view .LVU1008
 3530 01e0 A3F15109 		sub	r9, r3, #81
1978:src/keys.c    **** 	{
ARM GAS  /tmp/cc8xFAqJ.s 			page 133


 3531              		.loc 1 1978 23 view .LVU1009
 3532 01e4 B9F10A0F 		cmp	r9, #10
 3533 01e8 3FF658AF 		bhi	.L481
 3534              	.L406:
1980:src/keys.c    **** 			return STATE_UNFINISHED;
 3535              		.loc 1 1980 3 is_stmt 1 view .LVU1010
1980:src/keys.c    **** 			return STATE_UNFINISHED;
 3536              		.loc 1 1980 6 is_stmt 0 view .LVU1011
 3537 01ec 1106     		lsls	r1, r2, #24
 3538 01ee 3FF555AF 		bmi	.L481
1980:src/keys.c    **** 			return STATE_UNFINISHED;
 3539              		.loc 1 1980 18 view .LVU1012
 3540 01f2 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 3541 01f4 002A     		cmp	r2, #0
 3542 01f6 7FF451AF 		bne	.L481
1982:src/keys.c    **** 			return STATE_UNFINISHED;
 3543              		.loc 1 1982 3 is_stmt 1 view .LVU1013
1982:src/keys.c    **** 			return STATE_UNFINISHED;
 3544              		.loc 1 1982 17 is_stmt 0 view .LVU1014
 3545 01fa 0AEB0003 		add	r3, r10, r0
1982:src/keys.c    **** 			return STATE_UNFINISHED;
 3546              		.loc 1 1982 6 view .LVU1015
 3547 01fe 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3548 0200 632B     		cmp	r3, #99
 3549 0202 7FF64BAF 		bls	.L481
1984:src/keys.c    **** 	}
 3550              		.loc 1 1984 3 is_stmt 1 view .LVU1016
1984:src/keys.c    **** 	}
 3551              		.loc 1 1984 10 is_stmt 0 view .LVU1017
 3552 0206 07F16400 		add	r0, r7, #100
 3553 020a 34E0     		b	.L483
 3554              	.LVL267:
 3555              	.L426:
1984:src/keys.c    **** 	}
 3556              		.loc 1 1984 10 view .LVU1018
 3557              	.LBE459:
 3558              	.LBE458:
2096:src/keys.c    **** 		    base = RARG_SIG;
 3559              		.loc 1 2096 5 is_stmt 1 view .LVU1019
2100:src/keys.c    **** 		    base = RARG_SIG0;
 3560              		.loc 1 2100 5 view .LVU1020
2100:src/keys.c    **** 		    base = RARG_SIG0;
 3561              		.loc 1 2100 8 is_stmt 0 view .LVU1021
 3562 020c 8D2D     		cmp	r5, #141
 3563 020e 01D0     		beq	.L476
2104:src/keys.c    **** 		    base = RARG_FIX;
 3564              		.loc 1 2104 5 is_stmt 1 view .LVU1022
2104:src/keys.c    **** 		    base = RARG_FIX;
 3565              		.loc 1 2104 8 is_stmt 0 view .LVU1023
 3566 0210 8E2D     		cmp	r5, #142
 3567 0212 56D0     		beq	.L492
 3568              	.L476:
2124:src/keys.c    **** #else
 3569              		.loc 1 2124 3 is_stmt 1 view .LVU1024
2124:src/keys.c    **** #else
 3570              		.loc 1 2124 11 is_stmt 0 view .LVU1025
 3571 0214 8E23     		movs	r3, #142
ARM GAS  /tmp/cc8xFAqJ.s 			page 134


 3572              	.LVL268:
 3573              	.L480:
2124:src/keys.c    **** #else
 3574              		.loc 1 2124 11 view .LVU1026
 3575 0216 E377     		strb	r3, [r4, #31]
2147:src/keys.c    **** 	case K_F:
 3576              		.loc 1 2147 2 is_stmt 1 view .LVU1027
 3577              	.L397:
2264:src/keys.c    **** 		break;
 3578              		.loc 1 2264 3 view .LVU1028
 3579 0218 0021     		movs	r1, #0
 3580 021a 0620     		movs	r0, #6
 3581              	.LVL269:
2264:src/keys.c    **** 		break;
 3582              		.loc 1 2264 3 is_stmt 0 view .LVU1029
 3583 021c FFF7FEFF 		bl	arg_storcl
 3584              	.LVL270:
2265:src/keys.c    **** 
 3585              		.loc 1 2265 3 is_stmt 1 view .LVU1030
2318:src/keys.c    **** }
 3586              		.loc 1 2318 9 is_stmt 0 view .LVU1031
 3587 0220 3320     		movs	r0, #51
2265:src/keys.c    **** 
 3588              		.loc 1 2265 3 view .LVU1032
 3589 0222 3CE7     		b	.L356
 3590              	.LVL271:
 3591              	.L363:
2056:src/keys.c    **** 
 3592              		.loc 1 2056 42 discriminator 4 view .LVU1033
 3593 0224 19F0800F 		tst	r9, #128
 3594 0228 13D0     		beq	.L362
 3595              	.L361:
 3596              	.LVL272:
2058:src/keys.c    **** 	if (base >= NUM_RARG) {
 3597              		.loc 1 2058 2 is_stmt 1 view .LVU1034
2059:src/keys.c    **** 		reset_arg();
 3598              		.loc 1 2059 5 is_stmt 0 view .LVU1035
 3599 022a 8E2D     		cmp	r5, #142
2058:src/keys.c    **** 	if (base >= NUM_RARG) {
 3600              		.loc 1 2058 4 view .LVU1036
 3601 022c 29F08006 		bic	r6, r9, #128
 3602              	.LVL273:
2059:src/keys.c    **** 		reset_arg();
 3603              		.loc 1 2059 2 is_stmt 1 view .LVU1037
2054:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 3604              		.loc 1 2054 61 is_stmt 0 view .LVU1038
 3605 0230 98BF     		it	ls
 3606 0232 4FF0010C 		movls	ip, #1
2059:src/keys.c    **** 		reset_arg();
 3607              		.loc 1 2059 5 view .LVU1039
 3608 0236 7FF61AAF 		bls	.L368
 3609 023a 2DE7     		b	.L388
 3610              	.L489:
2094:src/keys.c    **** 		case K_UP:	// up arrow
 3611              		.loc 1 2094 3 is_stmt 1 view .LVU1040
 3612 023c 122F     		cmp	r7, #18
 3613 023e 00F00B81 		beq	.L438
ARM GAS  /tmp/cc8xFAqJ.s 			page 135


 3614 0242 182F     		cmp	r7, #24
 3615 0244 02D0     		beq	.L440
 3616 0246 012F     		cmp	r7, #1
 3617 0248 7FF44CAF 		bne	.L379
 3618              	.L440:
 3619 024c 8E25     		movs	r5, #142
 3620              	.LVL274:
2111:src/keys.c    **** 		    break;
 3621              		.loc 1 2111 12 is_stmt 0 view .LVU1041
 3622 024e 0095     		str	r5, [sp]
 3623 0250 48E7     		b	.L379
 3624              	.LVL275:
 3625              	.L362:
2058:src/keys.c    **** 	if (base >= NUM_RARG) {
 3626              		.loc 1 2058 2 is_stmt 1 view .LVU1042
2059:src/keys.c    **** 		reset_arg();
 3627              		.loc 1 2059 2 view .LVU1043
2059:src/keys.c    **** 		reset_arg();
 3628              		.loc 1 2059 5 is_stmt 0 view .LVU1044
 3629 0252 8E2D     		cmp	r5, #142
 3630 0254 3FF620AF 		bhi	.L388
2087:src/keys.c    **** 		// row column shorthand addressing
 3631              		.loc 1 2087 2 is_stmt 1 view .LVU1045
2089:src/keys.c    **** 
 3632              		.loc 1 2089 3 view .LVU1046
 3633              	.LVL276:
 3634              	.LBB460:
 3635              	.LBI460:
 179:src/keys.c    **** {
 3636              		.loc 1 179 5 view .LVU1047
 3637              	.LBB461:
 181:src/keys.c    **** }
 3638              		.loc 1 181 2 view .LVU1048
 181:src/keys.c    **** }
 3639              		.loc 1 181 18 is_stmt 0 view .LVU1049
 3640 0258 374B     		ldr	r3, .L500+12
 3641 025a A3FB0723 		umull	r2, r3, r3, r7
 181:src/keys.c    **** }
 3642              		.loc 1 181 24 view .LVU1050
 3643 025e 03F0FC00 		and	r0, r3, #252
 3644              	.LVL277:
 181:src/keys.c    **** }
 3645              		.loc 1 181 24 view .LVU1051
 3646 0262 00EB9300 		add	r0, r0, r3, lsr #2
 181:src/keys.c    **** }
 3647              		.loc 1 181 18 view .LVU1052
 3648 0266 9B08     		lsrs	r3, r3, #2
 181:src/keys.c    **** }
 3649              		.loc 1 181 24 view .LVU1053
 3650 0268 4000     		lsls	r0, r0, #1
 181:src/keys.c    **** }
 3651              		.loc 1 181 33 view .LVU1054
 3652 026a 03EB4303 		add	r3, r3, r3, lsl #1
 181:src/keys.c    **** }
 3653              		.loc 1 181 12 view .LVU1055
 3654 026e 0B30     		adds	r0, r0, #11
 181:src/keys.c    **** }
ARM GAS  /tmp/cc8xFAqJ.s 			page 136


 3655              		.loc 1 181 33 view .LVU1056
 3656 0270 A7EB4307 		sub	r7, r7, r3, lsl #1
 3657              	.LBE461:
 3658              	.LBE460:
2089:src/keys.c    **** 
 3659              		.loc 1 2089 10 view .LVU1057
 3660 0274 3844     		add	r0, r0, r7
 3661              	.LVL278:
 3662              	.L483:
2319:src/keys.c    **** 
 3663              		.loc 1 2319 1 view .LVU1058
 3664 0276 03B0     		add	sp, sp, #12
 3665              		.cfi_remember_state
 3666              		.cfi_def_cfa_offset 36
 3667              		@ sp needed
 3668 0278 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3669              		.cfi_restore 14
 3670              		.cfi_restore 11
 3671              		.cfi_restore 10
 3672              		.cfi_restore 9
 3673              		.cfi_restore 8
 3674              		.cfi_restore 7
 3675              		.cfi_restore 6
 3676              		.cfi_restore 5
 3677              		.cfi_restore 4
 3678              		.cfi_def_cfa_offset 0
 3679              	.LVL279:
2089:src/keys.c    **** 
 3680              		.loc 1 2089 10 view .LVU1059
 3681 027c FFF7FEBF 		b	arg_eval
 3682              	.LVL280:
 3683              	.L393:
 3684              		.cfi_restore_state
2224:src/keys.c    **** 			return arg_eval(n);
 3685              		.loc 1 2224 3 is_stmt 1 view .LVU1060
2224:src/keys.c    **** 			return arg_eval(n);
 3686              		.loc 1 2224 7 is_stmt 0 view .LVU1061
 3687 0280 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2224:src/keys.c    **** 			return arg_eval(n);
 3688              		.loc 1 2224 6 view .LVU1062
 3689 0282 5F06     		lsls	r7, r3, #25
 3690 0284 0AD4     		bmi	.L415
2224:src/keys.c    **** 			return arg_eval(n);
 3691              		.loc 1 2224 25 discriminator 1 view .LVU1063
 3692 0286 0121     		movs	r1, #1
 3693 0288 0320     		movs	r0, #3
 3694              	.LVL281:
2224:src/keys.c    **** 			return arg_eval(n);
 3695              		.loc 1 2224 25 discriminator 1 view .LVU1064
 3696 028a FFF7FEFF 		bl	arg_storcl
 3697              	.LVL282:
2224:src/keys.c    **** 			return arg_eval(n);
 3698              		.loc 1 2224 18 discriminator 1 view .LVU1065
 3699 028e 0028     		cmp	r0, #0
 3700 0290 7FF404AF 		bne	.L481
2224:src/keys.c    **** 			return arg_eval(n);
 3701              		.loc 1 2224 63 discriminator 2 view .LVU1066
ARM GAS  /tmp/cc8xFAqJ.s 			page 137


 3702 0294 B8F1000F 		cmp	r8, #0
 3703 0298 3FF400AF 		beq	.L481
 3704              	.L415:
2225:src/keys.c    **** 		break;
 3705              		.loc 1 2225 4 is_stmt 1 view .LVU1067
2225:src/keys.c    **** 		break;
 3706              		.loc 1 2225 11 is_stmt 0 view .LVU1068
 3707 029c 3046     		mov	r0, r6
 3708 029e EAE7     		b	.L483
 3709              	.LVL283:
 3710              	.L376:
2071:src/keys.c    **** 	  case regT_idx:
 3711              		.loc 1 2071 6 is_stmt 1 view .LVU1069
2071:src/keys.c    **** 	  case regT_idx:
 3712              		.loc 1 2071 13 is_stmt 0 view .LVU1070
 3713 02a0 0320     		movs	r0, #3
 3714              	.LVL284:
 3715              	.L482:
2319:src/keys.c    **** 
 3716              		.loc 1 2319 1 view .LVU1071
 3717 02a2 03B0     		add	sp, sp, #12
 3718              		.cfi_remember_state
 3719              		.cfi_def_cfa_offset 36
 3720              		@ sp needed
 3721 02a4 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3722              		.cfi_restore 14
 3723              		.cfi_restore 11
 3724              		.cfi_restore 10
 3725              		.cfi_restore 9
 3726              		.cfi_restore 8
 3727              		.cfi_restore 7
 3728              		.cfi_restore 6
 3729              		.cfi_restore 5
 3730              		.cfi_restore 4
 3731              		.cfi_def_cfa_offset 0
 3732              	.LVL285:
2069:src/keys.c    **** 	  case regZ_idx:
 3733              		.loc 1 2069 13 view .LVU1072
 3734 02a8 FFF7FEBF 		b	arg_digit
 3735              	.LVL286:
 3736              	.L377:
 3737              		.cfi_restore_state
2069:src/keys.c    **** 	  case regZ_idx:
 3738              		.loc 1 2069 6 is_stmt 1 view .LVU1073
2069:src/keys.c    **** 	  case regZ_idx:
 3739              		.loc 1 2069 13 is_stmt 0 view .LVU1074
 3740 02ac 0220     		movs	r0, #2
 3741              	.LVL287:
2069:src/keys.c    **** 	  case regZ_idx:
 3742              		.loc 1 2069 13 view .LVU1075
 3743 02ae F8E7     		b	.L482
 3744              	.LVL288:
 3745              	.L374:
2073:src/keys.c    **** 	  case 5:
 3746              		.loc 1 2073 6 is_stmt 1 view .LVU1076
2073:src/keys.c    **** 	  case 5:
 3747              		.loc 1 2073 13 is_stmt 0 view .LVU1077
ARM GAS  /tmp/cc8xFAqJ.s 			page 138


 3748 02b0 0420     		movs	r0, #4
 3749              	.LVL289:
2073:src/keys.c    **** 	  case 5:
 3750              		.loc 1 2073 13 view .LVU1078
 3751 02b2 F6E7     		b	.L482
 3752              	.LVL290:
 3753              	.L491:
2118:src/keys.c    **** 		    base = RARG_SIG;
 3754              		.loc 1 2118 5 is_stmt 1 view .LVU1079
2118:src/keys.c    **** 		    base = RARG_SIG;
 3755              		.loc 1 2118 8 is_stmt 0 view .LVU1080
 3756 02b4 8E2D     		cmp	r5, #142
 3757 02b6 40F00B81 		bne	.L436
 3758 02ba 8D23     		movs	r3, #141
 3759 02bc 0093     		str	r3, [sp]
 3760              	.LVL291:
2119:src/keys.c    **** 		    break;
 3761              		.loc 1 2119 12 view .LVU1081
 3762 02be 1D46     		mov	r5, r3
 3763 02c0 10E7     		b	.L379
 3764              	.LVL292:
 3765              	.L492:
2119:src/keys.c    **** 		    break;
 3766              		.loc 1 2119 12 view .LVU1082
 3767 02c2 4D23     		movs	r3, #77
 3768 02c4 A7E7     		b	.L480
 3769              	.LVL293:
 3770              	.L398:
2293:src/keys.c    **** 			if (State2.dot)
 3771              		.loc 1 2293 3 is_stmt 1 view .LVU1083
2293:src/keys.c    **** 			if (State2.dot)
 3772              		.loc 1 2293 13 is_stmt 0 view .LVU1084
 3773 02c6 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
2293:src/keys.c    **** 			if (State2.dot)
 3774              		.loc 1 2293 6 view .LVU1085
 3775 02c8 002B     		cmp	r3, #0
 3776 02ca 40F0EC80 		bne	.L422
2294:src/keys.c    **** 				State2.dot = 0;
 3777              		.loc 1 2294 4 is_stmt 1 view .LVU1086
2294:src/keys.c    **** 				State2.dot = 0;
 3778              		.loc 1 2294 8 is_stmt 0 view .LVU1087
 3779 02ce 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2294:src/keys.c    **** 				State2.dot = 0;
 3780              		.loc 1 2294 7 view .LVU1088
 3781 02d0 13F04001 		ands	r1, r3, #64
 3782 02d4 40F0A080 		bne	.L423
2296:src/keys.c    **** 				State2.local = 0;
 3783              		.loc 1 2296 9 is_stmt 1 view .LVU1089
2296:src/keys.c    **** 				State2.local = 0;
 3784              		.loc 1 2296 13 is_stmt 0 view .LVU1090
 3785 02d8 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2296:src/keys.c    **** 				State2.local = 0;
 3786              		.loc 1 2296 12 view .LVU1091
 3787 02da 12F00100 		ands	r0, r2, #1
 3788              	.LVL294:
2296:src/keys.c    **** 				State2.local = 0;
 3789              		.loc 1 2296 12 view .LVU1092
ARM GAS  /tmp/cc8xFAqJ.s 			page 139


 3790 02de 40F01181 		bne	.L493
2298:src/keys.c    **** 				State2.ind = 0;
 3791              		.loc 1 2298 9 is_stmt 1 view .LVU1093
2298:src/keys.c    **** 				State2.ind = 0;
 3792              		.loc 1 2298 12 is_stmt 0 view .LVU1094
 3793 02e2 1906     		lsls	r1, r3, #24
 3794 02e4 7FF5D8AE 		bpl	.L388
2299:src/keys.c    **** 			else
 3795              		.loc 1 2299 5 is_stmt 1 view .LVU1095
2299:src/keys.c    **** 			else
 3796              		.loc 1 2299 16 is_stmt 0 view .LVU1096
 3797 02e8 60F3C713 		bfi	r3, r0, #7, #1
 3798 02ec 6375     		strb	r3, [r4, #21]
2318:src/keys.c    **** }
 3799              		.loc 1 2318 9 view .LVU1097
 3800 02ee 3320     		movs	r0, #51
 3801 02f0 D5E6     		b	.L356
 3802              	.LVL295:
 3803              	.L396:
2228:src/keys.c    **** 		break;
 3804              		.loc 1 2228 3 is_stmt 1 view .LVU1098
 3805 02f2 0121     		movs	r1, #1
 3806 02f4 0420     		movs	r0, #4
 3807              	.LVL296:
2228:src/keys.c    **** 		break;
 3808              		.loc 1 2228 3 is_stmt 0 view .LVU1099
 3809 02f6 FFF7FEFF 		bl	arg_storcl
 3810              	.LVL297:
2229:src/keys.c    **** #else
 3811              		.loc 1 2229 3 is_stmt 1 view .LVU1100
2318:src/keys.c    **** }
 3812              		.loc 1 2318 9 is_stmt 0 view .LVU1101
 3813 02fa 3320     		movs	r0, #51
2229:src/keys.c    **** #else
 3814              		.loc 1 2229 3 view .LVU1102
 3815 02fc CFE6     		b	.L356
 3816              	.LVL298:
 3817              	.L395:
2268:src/keys.c    **** 		break;
 3818              		.loc 1 2268 3 is_stmt 1 view .LVU1103
 3819 02fe 0021     		movs	r1, #0
 3820 0300 0520     		movs	r0, #5
 3821              	.LVL299:
2268:src/keys.c    **** 		break;
 3822              		.loc 1 2268 3 is_stmt 0 view .LVU1104
 3823 0302 FFF7FEFF 		bl	arg_storcl
 3824              	.LVL300:
2269:src/keys.c    **** 
 3825              		.loc 1 2269 3 is_stmt 1 view .LVU1105
2318:src/keys.c    **** }
 3826              		.loc 1 2318 9 is_stmt 0 view .LVU1106
 3827 0306 3320     		movs	r0, #51
2269:src/keys.c    **** 
 3828              		.loc 1 2269 3 view .LVU1107
 3829 0308 C9E6     		b	.L356
 3830              	.LVL301:
 3831              	.L394:
ARM GAS  /tmp/cc8xFAqJ.s 			page 140


2171:src/keys.c    **** 	    return process_arg_shuffle(3);
 3832              		.loc 1 2171 4 is_stmt 1 view .LVU1108
2171:src/keys.c    **** 	    return process_arg_shuffle(3);
 3833              		.loc 1 2171 8 is_stmt 0 view .LVU1109
 3834 030a A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2171:src/keys.c    **** 	    return process_arg_shuffle(3);
 3835              		.loc 1 2171 7 view .LVU1110
 3836 030c 9507     		lsls	r5, r2, #30
 3837 030e 7FF557AF 		bpl	.L400
2172:src/keys.c    **** 	case K51:       // X
 3838              		.loc 1 2172 6 is_stmt 1 view .LVU1111
2172:src/keys.c    **** 	case K51:       // X
 3839              		.loc 1 2172 13 is_stmt 0 view .LVU1112
 3840 0312 0320     		movs	r0, #3
 3841              	.LVL302:
 3842              	.L484:
2319:src/keys.c    **** 
 3843              		.loc 1 2319 1 view .LVU1113
 3844 0314 03B0     		add	sp, sp, #12
 3845              		.cfi_remember_state
 3846              		.cfi_def_cfa_offset 36
 3847              		@ sp needed
 3848 0316 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3849              		.cfi_restore 14
 3850              		.cfi_restore 11
 3851              		.cfi_restore 10
 3852              		.cfi_restore 9
 3853              		.cfi_restore 8
 3854              		.cfi_restore 7
 3855              		.cfi_restore 6
 3856              		.cfi_restore 5
 3857              		.cfi_restore 4
 3858              		.cfi_def_cfa_offset 0
 3859              	.LVL303:
2181:src/keys.c    **** #else
 3860              		.loc 1 2181 13 view .LVU1114
 3861 031a FFF7FEBF 		b	process_arg_shuffle
 3862              	.LVL304:
 3863              	.L392:
 3864              		.cfi_restore_state
2174:src/keys.c    **** 	    return process_arg_shuffle(0);
 3865              		.loc 1 2174 4 is_stmt 1 view .LVU1115
2174:src/keys.c    **** 	    return process_arg_shuffle(0);
 3866              		.loc 1 2174 8 is_stmt 0 view .LVU1116
 3867 031e A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2174:src/keys.c    **** 	    return process_arg_shuffle(0);
 3868              		.loc 1 2174 7 view .LVU1117
 3869 0320 9007     		lsls	r0, r2, #30
 3870              	.LVL305:
2174:src/keys.c    **** 	    return process_arg_shuffle(0);
 3871              		.loc 1 2174 7 view .LVU1118
 3872 0322 7FF54DAF 		bpl	.L400
2175:src/keys.c    **** 	case K52:	// Y
 3873              		.loc 1 2175 6 is_stmt 1 view .LVU1119
2175:src/keys.c    **** 	case K52:	// Y
 3874              		.loc 1 2175 13 is_stmt 0 view .LVU1120
 3875 0326 0020     		movs	r0, #0
ARM GAS  /tmp/cc8xFAqJ.s 			page 141


 3876 0328 F4E7     		b	.L484
 3877              	.L501:
 3878 032a 00BF     		.align	2
 3879              	.L500:
 3880 032c 00000000 		.word	StateWhileOn
 3881 0330 00000000 		.word	.LANCHOR6
 3882 0334 00000000 		.word	.LANCHOR5
 3883 0338 ABAAAAAA 		.word	-1431655765
 3884 033c 00000000 		.word	argcmds
 3885              	.LVL306:
 3886              	.L390:
2180:src/keys.c    **** 	    return process_arg_shuffle(2);
 3887              		.loc 1 2180 4 is_stmt 1 view .LVU1121
2180:src/keys.c    **** 	    return process_arg_shuffle(2);
 3888              		.loc 1 2180 8 is_stmt 0 view .LVU1122
 3889 0340 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2180:src/keys.c    **** 	    return process_arg_shuffle(2);
 3890              		.loc 1 2180 7 view .LVU1123
 3891 0342 9207     		lsls	r2, r2, #30
 3892 0344 7FF53CAF 		bpl	.L400
2181:src/keys.c    **** #else
 3893              		.loc 1 2181 6 is_stmt 1 view .LVU1124
2181:src/keys.c    **** #else
 3894              		.loc 1 2181 13 is_stmt 0 view .LVU1125
 3895 0348 0220     		movs	r0, #2
 3896              	.LVL307:
2181:src/keys.c    **** #else
 3897              		.loc 1 2181 13 view .LVU1126
 3898 034a E3E7     		b	.L484
 3899              	.LVL308:
 3900              	.L389:
2217:src/keys.c    **** 			reset_arg();
 3901              		.loc 1 2217 3 is_stmt 1 view .LVU1127
2217:src/keys.c    **** 			reset_arg();
 3902              		.loc 1 2217 6 is_stmt 0 view .LVU1128
 3903 034c 009B     		ldr	r3, [sp]
 3904 034e 212B     		cmp	r3, #33
 3905 0350 00F0B980 		beq	.L412
2217:src/keys.c    **** 			reset_arg();
 3906              		.loc 1 2217 25 discriminator 1 view .LVU1129
 3907 0354 732B     		cmp	r3, #115
 3908 0356 00F0B680 		beq	.L412
2221:src/keys.c    **** 		break;
 3909              		.loc 1 2221 3 is_stmt 1 view .LVU1130
 3910 035a 0121     		movs	r1, #1
 3911 035c 0220     		movs	r0, #2
 3912              	.LVL309:
2221:src/keys.c    **** 		break;
 3913              		.loc 1 2221 3 is_stmt 0 view .LVU1131
 3914 035e FFF7FEFF 		bl	arg_storcl
 3915              	.LVL310:
2222:src/keys.c    **** 	case K44:		// multiply
 3916              		.loc 1 2222 3 is_stmt 1 view .LVU1132
2318:src/keys.c    **** }
 3917              		.loc 1 2318 9 is_stmt 0 view .LVU1133
 3918 0362 3320     		movs	r0, #51
2222:src/keys.c    **** 	case K44:		// multiply
ARM GAS  /tmp/cc8xFAqJ.s 			page 142


 3919              		.loc 1 2222 3 view .LVU1134
 3920 0364 9BE6     		b	.L356
 3921              	.LVL311:
 3922              	.L387:
2209:src/keys.c    **** 
 3923              		.loc 1 2209 3 is_stmt 1 view .LVU1135
 3924              	.LBB462:
 3925              	.LBI462:
2016:src/keys.c    **** 
 3926              		.loc 1 2016 12 view .LVU1136
 3927              	.LBB463:
2018:src/keys.c    **** 		// Only valid at beginning of entry
 3928              		.loc 1 2018 2 view .LVU1137
2018:src/keys.c    **** 		// Only valid at beginning of entry
 3929              		.loc 1 2018 5 is_stmt 0 view .LVU1138
 3930 0366 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 3931 0368 002A     		cmp	r2, #0
 3932 036a 7FF497AE 		bne	.L481
2020:src/keys.c    **** 			// '..' or ENTER '.' = X
 3933              		.loc 1 2020 3 is_stmt 1 view .LVU1139
2020:src/keys.c    **** 			// '..' or ENTER '.' = X
 3934              		.loc 1 2020 6 is_stmt 0 view .LVU1140
 3935 036e 11F4A03F 		tst	r1, #81920
 3936 0372 40F0C180 		bne	.L494
2025:src/keys.c    **** 			// local register or flag select
 3937              		.loc 1 2025 3 is_stmt 1 view .LVU1141
2025:src/keys.c    **** 			// local register or flag select
 3938              		.loc 1 2025 20 is_stmt 0 view .LVU1142
 3939 0376 009B     		ldr	r3, [sp]
 3940 0378 0AEB0313 		add	r3, r10, r3, lsl #4
 3941 037c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
2025:src/keys.c    **** 			// local register or flag select
 3942              		.loc 1 2025 6 view .LVU1143
 3943 037e 1A07     		lsls	r2, r3, #28
 3944 0380 00F1A880 		bmi	.L408
2025:src/keys.c    **** 			// local register or flag select
 3945              		.loc 1 2025 27 view .LVU1144
 3946 0384 94F91530 		ldrsb	r3, [r4, #21]
 3947 0388 002B     		cmp	r3, #0
 3948 038a C0F2A380 		blt	.L408
2029:src/keys.c    **** 			// Special GTO . sequence
 3949              		.loc 1 2029 8 is_stmt 1 view .LVU1145
2029:src/keys.c    **** 			// Special GTO . sequence
 3950              		.loc 1 2029 29 is_stmt 0 view .LVU1146
 3951 038e 009B     		ldr	r3, [sp]
 3952 0390 A3F14409 		sub	r9, r3, #68
2029:src/keys.c    **** 			// Special GTO . sequence
 3953              		.loc 1 2029 11 view .LVU1147
 3954 0394 B9F1010F 		cmp	r9, #1
 3955 0398 3FF680AE 		bhi	.L481
2031:src/keys.c    **** 				State2.gtodot = 1;
 3956              		.loc 1 2031 4 is_stmt 1 view .LVU1148
2032:src/keys.c    **** 				reset_arg();
 3957              		.loc 1 2032 5 view .LVU1149
2032:src/keys.c    **** 				reset_arg();
 3958              		.loc 1 2032 19 is_stmt 0 view .LVU1150
 3959 039c 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
ARM GAS  /tmp/cc8xFAqJ.s 			page 143


 3960 039e 43F00103 		orr	r3, r3, #1
 3961 03a2 6375     		strb	r3, [r4, #21]
2033:src/keys.c    **** 			}
 3962              		.loc 1 2033 5 is_stmt 1 view .LVU1151
 3963 03a4 FFF7FEFF 		bl	reset_arg
 3964              	.LVL312:
2037:src/keys.c    **** }
 3965              		.loc 1 2037 9 is_stmt 0 view .LVU1152
 3966 03a8 3320     		movs	r0, #51
 3967 03aa 78E6     		b	.L356
 3968              	.LVL313:
 3969              	.L386:
2037:src/keys.c    **** }
 3970              		.loc 1 2037 9 view .LVU1153
 3971              	.LBE463:
 3972              	.LBE462:
2213:src/keys.c    **** 			return arg_eval(n);
 3973              		.loc 1 2213 3 is_stmt 1 view .LVU1154
2213:src/keys.c    **** 			return arg_eval(n);
 3974              		.loc 1 2213 7 is_stmt 0 view .LVU1155
 3975 03ac 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2213:src/keys.c    **** 			return arg_eval(n);
 3976              		.loc 1 2213 6 view .LVU1156
 3977 03ae 5B06     		lsls	r3, r3, #25
 3978 03b0 3FF574AF 		bmi	.L415
2213:src/keys.c    **** 			return arg_eval(n);
 3979              		.loc 1 2213 25 discriminator 1 view .LVU1157
 3980 03b4 0121     		movs	r1, #1
 3981 03b6 0846     		mov	r0, r1
 3982              	.LVL314:
2213:src/keys.c    **** 			return arg_eval(n);
 3983              		.loc 1 2213 25 discriminator 1 view .LVU1158
 3984 03b8 FFF7FEFF 		bl	arg_storcl
 3985              	.LVL315:
2213:src/keys.c    **** 			return arg_eval(n);
 3986              		.loc 1 2213 18 discriminator 1 view .LVU1159
 3987 03bc 0028     		cmp	r0, #0
 3988 03be 7FF46DAE 		bne	.L481
2224:src/keys.c    **** 			return arg_eval(n);
 3989              		.loc 1 2224 63 view .LVU1160
 3990 03c2 B8F1000F 		cmp	r8, #0
 3991 03c6 3FF469AE 		beq	.L481
 3992 03ca 67E7     		b	.L415
 3993              	.LVL316:
 3994              	.L385:
2149:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 3995              		.loc 1 2149 3 is_stmt 1 view .LVU1161
2149:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 3996              		.loc 1 2149 6 is_stmt 0 view .LVU1162
 3997 03cc BCF1000F 		cmp	ip, #0
 3998 03d0 3FF464AE 		beq	.L481
2150:src/keys.c    **** 		break;
 3999              		.loc 1 2150 4 is_stmt 1 view .LVU1163
 4000              	.LVL317:
 4001              	.LBB466:
 4002              	.LBI466:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
ARM GAS  /tmp/cc8xFAqJ.s 			page 144


 4003              		.loc 1 104 20 view .LVU1164
 4004              	.LBB467:
 105:src/keys.c    **** 	State2.shifts = shift;
 4005              		.loc 1 105 2 view .LVU1165
 4006              	.LBB468:
 4007              	.LBI468:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4008              		.loc 1 96 13 view .LVU1166
 4009              	.LBB469:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4010              		.loc 1 97 2 view .LVU1167
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4011              		.loc 1 97 18 is_stmt 0 view .LVU1168
 4012 03d4 FFF7FEFF 		bl	shift_down
 4013              	.LVL318:
  98:src/keys.c    **** }
 4014              		.loc 1 98 2 is_stmt 1 view .LVU1169
 4015              	.LBE469:
 4016              	.LBE468:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4017              		.loc 1 106 2 view .LVU1170
 4018              	.LBE467:
 4019              	.LBE466:
2150:src/keys.c    **** 		break;
 4020              		.loc 1 2150 4 is_stmt 0 view .LVU1171
 4021 03d8 019B     		ldr	r3, [sp, #4]
 4022 03da B3F1010A 		subs	r10, r3, #1
 4023 03de 18BF     		it	ne
 4024 03e0 4FF0010A 		movne	r10, #1
 4025 03e4 84F810A0 		strb	r10, [r4, #16]
 4026              	.LBB472:
 4027              	.LBB470:
 108:src/keys.c    **** }
 4028              		.loc 1 108 2 is_stmt 1 view .LVU1172
 4029              	.LBE470:
 4030              	.LBE472:
2318:src/keys.c    **** }
 4031              		.loc 1 2318 9 is_stmt 0 view .LVU1173
 4032 03e8 3320     		movs	r0, #51
 4033              	.LBB473:
 4034              	.LBB471:
 108:src/keys.c    **** }
 4035              		.loc 1 108 9 view .LVU1174
 4036 03ea 58E6     		b	.L356
 4037              	.LVL319:
 4038              	.L384:
 108:src/keys.c    **** }
 4039              		.loc 1 108 9 view .LVU1175
 4040              	.LBE471:
 4041              	.LBE473:
2154:src/keys.c    **** 			State2.ind = ! State2.ind;
 4042              		.loc 1 2154 3 is_stmt 1 view .LVU1176
2154:src/keys.c    **** 			State2.ind = ! State2.ind;
 4043              		.loc 1 2154 7 is_stmt 0 view .LVU1177
 4044 03ec 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
2154:src/keys.c    **** 			State2.ind = ! State2.ind;
 4045              		.loc 1 2154 6 view .LVU1178
ARM GAS  /tmp/cc8xFAqJ.s 			page 145


 4046 03ee 5706     		lsls	r7, r2, #25
 4047 03f0 3FF554AE 		bmi	.L481
2154:src/keys.c    **** 			State2.ind = ! State2.ind;
 4048              		.loc 1 2154 35 discriminator 1 view .LVU1179
 4049 03f4 009B     		ldr	r3, [sp]
 4050 03f6 0AEB0319 		add	r9, r10, r3, lsl #4
 4051 03fa 99F80530 		ldrb	r3, [r9, #5]	@ zero_extendqisi2
2154:src/keys.c    **** 			State2.ind = ! State2.ind;
 4052              		.loc 1 2154 19 discriminator 1 view .LVU1180
 4053 03fe DE07     		lsls	r6, r3, #31
 4054              	.LVL320:
2154:src/keys.c    **** 			State2.ind = ! State2.ind;
 4055              		.loc 1 2154 19 discriminator 1 view .LVU1181
 4056 0400 7FF54CAE 		bpl	.L481
2155:src/keys.c    **** 			if (! stack_reg)
 4057              		.loc 1 2155 4 is_stmt 1 view .LVU1182
2155:src/keys.c    **** 			if (! stack_reg)
 4058              		.loc 1 2155 17 is_stmt 0 view .LVU1183
 4059 0404 D343     		mvns	r3, r2
 4060 0406 C3F3C013 		ubfx	r3, r3, #7, #1
2155:src/keys.c    **** 			if (! stack_reg)
 4061              		.loc 1 2155 15 view .LVU1184
 4062 040a 63F3C712 		bfi	r2, r3, #7, #1
 4063 040e 6275     		strb	r2, [r4, #21]
2156:src/keys.c    **** 				State2.dot = 0;
 4064              		.loc 1 2156 4 is_stmt 1 view .LVU1185
2156:src/keys.c    **** 				State2.dot = 0;
 4065              		.loc 1 2156 7 is_stmt 0 view .LVU1186
 4066 0410 B8F1000F 		cmp	r8, #0
 4067 0414 7FF442AE 		bne	.L481
 4068              	.L423:
2157:src/keys.c    **** 		}
 4069              		.loc 1 2157 5 is_stmt 1 view .LVU1187
2157:src/keys.c    **** 		}
 4070              		.loc 1 2157 16 is_stmt 0 view .LVU1188
 4071 0418 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 4072 041a 6FF38613 		bfc	r3, #6, #1
 4073 041e 6375     		strb	r3, [r4, #21]
2318:src/keys.c    **** }
 4074              		.loc 1 2318 9 view .LVU1189
 4075 0420 3320     		movs	r0, #51
 4076              	.LVL321:
2318:src/keys.c    **** }
 4077              		.loc 1 2318 9 view .LVU1190
 4078 0422 3CE6     		b	.L356
 4079              	.LVL322:
 4080              	.L382:
2162:src/keys.c    **** 			break;
 4081              		.loc 1 2162 3 is_stmt 1 view .LVU1191
2162:src/keys.c    **** 			break;
 4082              		.loc 1 2162 18 is_stmt 0 view .LVU1192
 4083 0424 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
2162:src/keys.c    **** 			break;
 4084              		.loc 1 2162 6 view .LVU1193
 4085 0426 13F0C00F 		tst	r3, #192
 4086 042a 7FF437AE 		bne	.L481
2164:src/keys.c    **** 			CmdBase = RARG_STOM;
ARM GAS  /tmp/cc8xFAqJ.s 			page 146


 4087              		.loc 1 2164 3 is_stmt 1 view .LVU1194
2164:src/keys.c    **** 			CmdBase = RARG_STOM;
 4088              		.loc 1 2164 6 is_stmt 0 view .LVU1195
 4089 042e 009B     		ldr	r3, [sp]
 4090 0430 032B     		cmp	r3, #3
 4091 0432 5DD0     		beq	.L495
2166:src/keys.c    **** 			CmdBase = RARG_RCLM;
 4092              		.loc 1 2166 8 is_stmt 1 view .LVU1196
2166:src/keys.c    **** 			CmdBase = RARG_RCLM;
 4093              		.loc 1 2166 11 is_stmt 0 view .LVU1197
 4094 0434 009B     		ldr	r3, [sp]
 4095 0436 0A2B     		cmp	r3, #10
 4096 0438 7FF430AE 		bne	.L481
2167:src/keys.c    **** 		break;
 4097              		.loc 1 2167 4 is_stmt 1 view .LVU1198
2167:src/keys.c    **** 		break;
 4098              		.loc 1 2167 12 is_stmt 0 view .LVU1199
 4099 043c 7823     		movs	r3, #120
 4100 043e E377     		strb	r3, [r4, #31]
2318:src/keys.c    **** }
 4101              		.loc 1 2318 9 view .LVU1200
 4102 0440 3320     		movs	r0, #51
 4103              	.LVL323:
2318:src/keys.c    **** }
 4104              		.loc 1 2318 9 view .LVU1201
 4105 0442 2CE6     		b	.L356
 4106              	.LVL324:
 4107              	.L399:
2272:src/keys.c    **** 			if (argcmds[base].label) {
 4108              		.loc 1 2272 3 is_stmt 1 view .LVU1202
2272:src/keys.c    **** 			if (argcmds[base].label) {
 4109              		.loc 1 2272 6 is_stmt 0 view .LVU1203
 4110 0444 E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 4111 0446 4AB1     		cbz	r2, .L496
2286:src/keys.c    **** 			return arg_eval(State2.digval);
 4112              		.loc 1 2286 10 is_stmt 1 view .LVU1204
2287:src/keys.c    **** 		else if (stack_reg)
 4113              		.loc 1 2287 4 view .LVU1205
2287:src/keys.c    **** 		else if (stack_reg)
 4114              		.loc 1 2287 11 is_stmt 0 view .LVU1206
 4115 0448 2089     		ldrh	r0, [r4, #8]
 4116              	.LVL325:
2287:src/keys.c    **** 		else if (stack_reg)
 4117              		.loc 1 2287 11 view .LVU1207
 4118 044a 14E7     		b	.L483
 4119              	.LVL326:
 4120              	.L391:
2177:src/keys.c    **** 	    return process_arg_shuffle(1);
 4121              		.loc 1 2177 4 is_stmt 1 view .LVU1208
2177:src/keys.c    **** 	    return process_arg_shuffle(1);
 4122              		.loc 1 2177 8 is_stmt 0 view .LVU1209
 4123 044c A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2177:src/keys.c    **** 	    return process_arg_shuffle(1);
 4124              		.loc 1 2177 7 view .LVU1210
 4125 044e 9107     		lsls	r1, r2, #30
 4126 0450 7FF5B6AE 		bpl	.L400
2178:src/keys.c    **** 	case K53:       // Z
ARM GAS  /tmp/cc8xFAqJ.s 			page 147


 4127              		.loc 1 2178 6 is_stmt 1 view .LVU1211
2178:src/keys.c    **** 	case K53:       // Z
 4128              		.loc 1 2178 13 is_stmt 0 view .LVU1212
 4129 0454 0120     		movs	r0, #1
 4130              	.LVL327:
2178:src/keys.c    **** 	case K53:       // Z
 4131              		.loc 1 2178 13 view .LVU1213
 4132 0456 5DE7     		b	.L484
 4133              	.LVL328:
 4134              	.L438:
2094:src/keys.c    **** 		case K_UP:	// up arrow
 4135              		.loc 1 2094 3 view .LVU1214
 4136 0458 8D23     		movs	r3, #141
 4137              	.LVL329:
2124:src/keys.c    **** #else
 4138              		.loc 1 2124 3 is_stmt 1 view .LVU1215
 4139 045a DCE6     		b	.L480
 4140              	.L496:
2272:src/keys.c    **** 			if (argcmds[base].label) {
 4141              		.loc 1 2272 43 is_stmt 0 discriminator 1 view .LVU1216
 4142 045c 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
 4143 045e 12F0C00F 		tst	r2, #192
 4144 0462 13D1     		bne	.L417
2273:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4145              		.loc 1 2273 4 is_stmt 1 view .LVU1217
2273:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4146              		.loc 1 2273 21 is_stmt 0 view .LVU1218
 4147 0464 009B     		ldr	r3, [sp]
 4148 0466 0AEB0313 		add	r3, r10, r3, lsl #4
 4149 046a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
2273:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4150              		.loc 1 2273 7 view .LVU1219
 4151 046c 9E06     		lsls	r6, r3, #26
 4152              	.LVL330:
2273:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 4153              		.loc 1 2273 7 view .LVU1220
 4154 046e 4ED4     		bmi	.L497
2278:src/keys.c    **** 				reset_arg();
 4155              		.loc 1 2278 11 is_stmt 1 view .LVU1221
2278:src/keys.c    **** 				reset_arg();
 4156              		.loc 1 2278 14 is_stmt 0 view .LVU1222
 4157 0470 0099     		ldr	r1, [sp]
 4158 0472 4E29     		cmp	r1, #78
 4159 0474 5DD0     		beq	.L498
2281:src/keys.c    **** 				reset_arg();
 4160              		.loc 1 2281 11 is_stmt 1 view .LVU1223
2281:src/keys.c    **** 				reset_arg();
 4161              		.loc 1 2281 14 is_stmt 0 view .LVU1224
 4162 0476 0099     		ldr	r1, [sp]
 4163 0478 4F29     		cmp	r1, #79
 4164 047a 5FD0     		beq	.L499
2284:src/keys.c    **** 				State2.dot = 1;
 4165              		.loc 1 2284 11 is_stmt 1 view .LVU1225
2284:src/keys.c    **** 				State2.dot = 1;
 4166              		.loc 1 2284 14 is_stmt 0 view .LVU1226
 4167 047c 5807     		lsls	r0, r3, #29
 4168              	.LVL331:
ARM GAS  /tmp/cc8xFAqJ.s 			page 148


2284:src/keys.c    **** 				State2.dot = 1;
 4169              		.loc 1 2284 14 view .LVU1227
 4170 047e 7FF50DAE 		bpl	.L481
2285:src/keys.c    **** 		} else if (State2.numdigit > 0)
 4171              		.loc 1 2285 5 is_stmt 1 view .LVU1228
2285:src/keys.c    **** 		} else if (State2.numdigit > 0)
 4172              		.loc 1 2285 16 is_stmt 0 view .LVU1229
 4173 0482 42F04002 		orr	r2, r2, #64
 4174 0486 6275     		strb	r2, [r4, #21]
2318:src/keys.c    **** }
 4175              		.loc 1 2318 9 view .LVU1230
 4176 0488 3320     		movs	r0, #51
 4177 048a 08E6     		b	.L356
 4178              	.LVL332:
 4179              	.L417:
2286:src/keys.c    **** 			return arg_eval(State2.digval);
 4180              		.loc 1 2286 10 is_stmt 1 view .LVU1231
2288:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 4181              		.loc 1 2288 8 view .LVU1232
2288:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 4182              		.loc 1 2288 11 is_stmt 0 view .LVU1233
 4183 048c B8F1000F 		cmp	r8, #0
 4184 0490 3FF404AE 		beq	.L481
2289:src/keys.c    **** 		break;
 4185              		.loc 1 2289 4 is_stmt 1 view .LVU1234
2289:src/keys.c    **** 		break;
 4186              		.loc 1 2289 27 is_stmt 0 view .LVU1235
 4187 0494 C2F38013 		ubfx	r3, r2, #6, #1
2289:src/keys.c    **** 		break;
 4188              		.loc 1 2289 19 view .LVU1236
 4189 0498 C3F10103 		rsb	r3, r3, #1
2289:src/keys.c    **** 		break;
 4190              		.loc 1 2289 15 view .LVU1237
 4191 049c 63F38612 		bfi	r2, r3, #6, #1
 4192 04a0 6275     		strb	r2, [r4, #21]
2318:src/keys.c    **** }
 4193              		.loc 1 2318 9 view .LVU1238
 4194 04a2 3320     		movs	r0, #51
 4195              	.LVL333:
2318:src/keys.c    **** }
 4196              		.loc 1 2318 9 view .LVU1239
 4197 04a4 FBE5     		b	.L356
 4198              	.LVL334:
 4199              	.L422:
2304:src/keys.c    **** 			if (State2.shuffle)
 4200              		.loc 1 2304 4 is_stmt 1 view .LVU1240
2305:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4201              		.loc 1 2305 8 is_stmt 0 view .LVU1241
 4202 04a6 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
2304:src/keys.c    **** 			if (State2.shuffle)
 4203              		.loc 1 2304 4 view .LVU1242
 4204 04a8 013B     		subs	r3, r3, #1
 4205 04aa DBB2     		uxtb	r3, r3
2305:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4206              		.loc 1 2305 7 view .LVU1243
 4207 04ac 9207     		lsls	r2, r2, #30
2304:src/keys.c    **** 			if (State2.shuffle)
ARM GAS  /tmp/cc8xFAqJ.s 			page 149


 4208              		.loc 1 2304 4 view .LVU1244
 4209 04ae E372     		strb	r3, [r4, #11]
2305:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4210              		.loc 1 2305 4 is_stmt 1 view .LVU1245
2305:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 4211              		.loc 1 2305 7 is_stmt 0 view .LVU1246
 4212 04b0 16D5     		bpl	.L425
2306:src/keys.c    **** 			else
 4213              		.loc 1 2306 5 is_stmt 1 view .LVU1247
2306:src/keys.c    **** 			else
 4214              		.loc 1 2306 19 is_stmt 0 view .LVU1248
 4215 04b2 2289     		ldrh	r2, [r4, #8]
2306:src/keys.c    **** 			else
 4216              		.loc 1 2306 46 view .LVU1249
 4217 04b4 5B00     		lsls	r3, r3, #1
2306:src/keys.c    **** 			else
 4218              		.loc 1 2306 26 view .LVU1250
 4219 04b6 0321     		movs	r1, #3
 4220 04b8 01FA03F3 		lsl	r3, r1, r3
2306:src/keys.c    **** 			else
 4221              		.loc 1 2306 19 view .LVU1251
 4222 04bc 22EA0303 		bic	r3, r2, r3
 4223 04c0 2381     		strh	r3, [r4, #8]	@ movhi
2318:src/keys.c    **** }
 4224              		.loc 1 2318 9 view .LVU1252
 4225 04c2 3320     		movs	r0, #51
 4226              	.LVL335:
2318:src/keys.c    **** }
 4227              		.loc 1 2318 9 view .LVU1253
 4228 04c4 EBE5     		b	.L356
 4229              	.LVL336:
 4230              	.L412:
2218:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
 4231              		.loc 1 2218 4 is_stmt 1 view .LVU1254
 4232 04c6 FFF7FEFF 		bl	reset_arg
 4233              	.LVL337:
2219:src/keys.c    **** 		}
 4234              		.loc 1 2219 4 view .LVU1255
2219:src/keys.c    **** 		}
 4235              		.loc 1 2219 11 is_stmt 0 view .LVU1256
 4236 04ca 40F27510 		movw	r0, #373
 4237 04ce E6E5     		b	.L356
 4238              	.LVL338:
 4239              	.L436:
2219:src/keys.c    **** 		}
 4240              		.loc 1 2219 11 view .LVU1257
 4241 04d0 8E25     		movs	r5, #142
 4242              	.LVL339:
2219:src/keys.c    **** 		}
 4243              		.loc 1 2219 11 view .LVU1258
 4244 04d2 07E6     		b	.L379
 4245              	.LVL340:
 4246              	.L408:
 4247              	.LBB474:
 4248              	.LBB464:
2027:src/keys.c    **** 		}
 4249              		.loc 1 2027 4 is_stmt 1 view .LVU1259
ARM GAS  /tmp/cc8xFAqJ.s 			page 150


2027:src/keys.c    **** 		}
 4250              		.loc 1 2027 17 is_stmt 0 view .LVU1260
 4251 04d4 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 4252 04d6 43F00103 		orr	r3, r3, #1
 4253 04da A375     		strb	r3, [r4, #22]
2037:src/keys.c    **** }
 4254              		.loc 1 2037 9 view .LVU1261
 4255 04dc 3320     		movs	r0, #51
 4256              	.LVL341:
2027:src/keys.c    **** 		}
 4257              		.loc 1 2027 17 view .LVU1262
 4258 04de DEE5     		b	.L356
 4259              	.LVL342:
 4260              	.L425:
2027:src/keys.c    **** 		}
 4261              		.loc 1 2027 17 view .LVU1263
 4262              	.LBE464:
 4263              	.LBE474:
2308:src/keys.c    **** 		}
 4264              		.loc 1 2308 5 is_stmt 1 view .LVU1264
2308:src/keys.c    **** 		}
 4265              		.loc 1 2308 19 is_stmt 0 view .LVU1265
 4266 04e0 2389     		ldrh	r3, [r4, #8]
 4267 04e2 1A4A     		ldr	r2, .L502
 4268 04e4 A2FB0323 		umull	r2, r3, r2, r3
 4269 04e8 DB08     		lsrs	r3, r3, #3
 4270 04ea 2381     		strh	r3, [r4, #8]	@ movhi
2318:src/keys.c    **** }
 4271              		.loc 1 2318 9 view .LVU1266
 4272 04ec 3320     		movs	r0, #51
 4273              	.LVL343:
2318:src/keys.c    **** }
 4274              		.loc 1 2318 9 view .LVU1267
 4275 04ee D6E5     		b	.L356
 4276              	.LVL344:
 4277              	.L495:
2165:src/keys.c    **** 		else if (base == RARG_RCL)
 4278              		.loc 1 2165 4 is_stmt 1 view .LVU1268
2165:src/keys.c    **** 		else if (base == RARG_RCL)
 4279              		.loc 1 2165 12 is_stmt 0 view .LVU1269
 4280 04f0 7723     		movs	r3, #119
 4281 04f2 E377     		strb	r3, [r4, #31]
2318:src/keys.c    **** }
 4282              		.loc 1 2318 9 view .LVU1270
 4283 04f4 3320     		movs	r0, #51
 4284              	.LVL345:
2318:src/keys.c    **** }
 4285              		.loc 1 2318 9 view .LVU1271
 4286 04f6 D2E5     		b	.L356
 4287              	.LVL346:
 4288              	.L494:
 4289              	.LBB475:
 4290              	.LBB465:
2022:src/keys.c    **** 			return arg_eval(regX_idx);
 4291              		.loc 1 2022 4 is_stmt 1 view .LVU1272
2022:src/keys.c    **** 			return arg_eval(regX_idx);
 4292              		.loc 1 2022 17 is_stmt 0 view .LVU1273
ARM GAS  /tmp/cc8xFAqJ.s 			page 151


 4293 04f8 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 4294 04fa 62F30003 		bfi	r3, r2, #0, #1
2023:src/keys.c    **** 		}
 4295              		.loc 1 2023 11 view .LVU1274
 4296 04fe 6420     		movs	r0, #100
 4297              	.LVL347:
2022:src/keys.c    **** 			return arg_eval(regX_idx);
 4298              		.loc 1 2022 17 view .LVU1275
 4299 0500 A375     		strb	r3, [r4, #22]
2023:src/keys.c    **** 		}
 4300              		.loc 1 2023 4 is_stmt 1 view .LVU1276
 4301 0502 B8E6     		b	.L483
 4302              	.L493:
2023:src/keys.c    **** 		}
 4303              		.loc 1 2023 4 is_stmt 0 view .LVU1277
 4304              	.LBE465:
 4305              	.LBE475:
2297:src/keys.c    **** 			else if (State2.ind)
 4306              		.loc 1 2297 5 is_stmt 1 view .LVU1278
2297:src/keys.c    **** 			else if (State2.ind)
 4307              		.loc 1 2297 18 is_stmt 0 view .LVU1279
 4308 0504 61F30002 		bfi	r2, r1, #0, #1
 4309 0508 A275     		strb	r2, [r4, #22]
2318:src/keys.c    **** }
 4310              		.loc 1 2318 9 view .LVU1280
 4311 050a 3320     		movs	r0, #51
 4312 050c C7E5     		b	.L356
 4313              	.LVL348:
 4314              	.L497:
2274:src/keys.c    **** 				State2.multi = 1;
 4315              		.loc 1 2274 5 is_stmt 1 view .LVU1281
 4316              	.LBB476:
 4317              	.LBI476:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 4318              		.loc 1 552 13 view .LVU1282
 4319              	.LBB477:
 553:src/keys.c    **** 		return;
 4320              		.loc 1 553 2 view .LVU1283
 553:src/keys.c    **** 		return;
 4321              		.loc 1 553 6 is_stmt 0 view .LVU1284
 4322 050e FFF7FEFF 		bl	is_bad_cmdline
 4323              	.LVL349:
 553:src/keys.c    **** 		return;
 4324              		.loc 1 553 5 view .LVU1285
 4325 0512 20B9     		cbnz	r0, .L419
 4326              	.LBE477:
 4327              	.LBE476:
2274:src/keys.c    **** 				State2.multi = 1;
 4328              		.loc 1 2274 31 view .LVU1286
 4329 0514 A5F14200 		sub	r0, r5, #66
 4330              	.LBB479:
 4331              	.LBB478:
 4332 0518 C0B2     		uxtb	r0, r0
 4333 051a FFF7FEFF 		bl	init_arg.part.0
 4334              	.LVL350:
 4335              	.L419:
2274:src/keys.c    **** 				State2.multi = 1;
ARM GAS  /tmp/cc8xFAqJ.s 			page 152


 4336              		.loc 1 2274 31 view .LVU1287
 4337              	.LBE478:
 4338              	.LBE479:
2275:src/keys.c    **** 				State2.alphashift = 0;
 4339              		.loc 1 2275 5 is_stmt 1 view .LVU1288
2276:src/keys.c    **** 				State2.rarg = 0;
 4340              		.loc 1 2276 5 view .LVU1289
2277:src/keys.c    **** 			} else if (base == RARG_SCI) {
 4341              		.loc 1 2277 5 view .LVU1290
2275:src/keys.c    **** 				State2.alphashift = 0;
 4342              		.loc 1 2275 18 is_stmt 0 view .LVU1291
 4343 051e 6369     		ldr	r3, [r4, #20]
 4344 0520 23F44013 		bic	r3, r3, #3145728
 4345 0524 23F40063 		bic	r3, r3, #2048
 4346 0528 43F40063 		orr	r3, r3, #2048
 4347 052c 6361     		str	r3, [r4, #20]
2318:src/keys.c    **** }
 4348              		.loc 1 2318 9 view .LVU1292
 4349 052e 3320     		movs	r0, #51
 4350 0530 B5E5     		b	.L356
 4351              	.LVL351:
 4352              	.L498:
2279:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
 4353              		.loc 1 2279 5 is_stmt 1 view .LVU1293
 4354 0532 FFF7FEFF 		bl	reset_arg
 4355              	.LVL352:
2280:src/keys.c    **** 			} else if (base == RARG_ENG) {
 4356              		.loc 1 2280 5 view .LVU1294
2280:src/keys.c    **** 			} else if (base == RARG_ENG) {
 4357              		.loc 1 2280 12 is_stmt 0 view .LVU1295
 4358 0536 40F25510 		movw	r0, #341
 4359 053a B0E5     		b	.L356
 4360              	.LVL353:
 4361              	.L499:
2282:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
 4362              		.loc 1 2282 5 is_stmt 1 view .LVU1296
 4363 053c FFF7FEFF 		bl	reset_arg
 4364              	.LVL354:
2283:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 4365              		.loc 1 2283 5 view .LVU1297
2283:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 4366              		.loc 1 2283 12 is_stmt 0 view .LVU1298
 4367 0540 4FF4AB70 		mov	r0, #342
 4368 0544 ABE5     		b	.L356
 4369              	.LVL355:
 4370              	.L373:
2067:src/keys.c    **** 	  case regY_idx:
 4371              		.loc 1 2067 6 is_stmt 1 view .LVU1299
2067:src/keys.c    **** 	  case regY_idx:
 4372              		.loc 1 2067 13 is_stmt 0 view .LVU1300
 4373 0546 0120     		movs	r0, #1
 4374              	.LVL356:
2067:src/keys.c    **** 	  case regY_idx:
 4375              		.loc 1 2067 13 view .LVU1301
 4376 0548 ABE6     		b	.L482
 4377              	.L503:
 4378 054a 00BF     		.align	2
ARM GAS  /tmp/cc8xFAqJ.s 			page 153


 4379              	.L502:
 4380 054c CDCCCCCC 		.word	-858993459
 4381              		.cfi_endproc
 4382              	.LFE42:
 4384              		.section	.text.cur_shift,"ax",%progbits
 4385              		.align	1
 4386              		.p2align 2,,3
 4387              		.global	cur_shift
 4388              		.syntax unified
 4389              		.thumb
 4390              		.thumb_func
 4391              		.fpu fpv4-sp-d16
 4393              	cur_shift:
 4394              	.LFB0:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4395              		.loc 1 96 29 is_stmt 1 view -0
 4396              		.cfi_startproc
 4397              		@ args = 0, pretend = 0, frame = 0
 4398              		@ frame_needed = 0, uses_anonymous_args = 0
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4399              		.loc 1 97 2 view .LVU1303
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4400              		.loc 1 96 29 is_stmt 0 view .LVU1304
 4401 0000 08B5     		push	{r3, lr}
 4402              		.cfi_def_cfa_offset 8
 4403              		.cfi_offset 3, -8
 4404              		.cfi_offset 14, -4
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4405              		.loc 1 97 18 view .LVU1305
 4406 0002 FFF7FEFF 		bl	shift_down
 4407              	.LVL357:
  98:src/keys.c    **** }
 4408              		.loc 1 98 2 is_stmt 1 view .LVU1306
  98:src/keys.c    **** }
 4409              		.loc 1 98 52 is_stmt 0 view .LVU1307
 4410 0006 08B9     		cbnz	r0, .L505
  98:src/keys.c    **** }
 4411              		.loc 1 98 52 discriminator 1 view .LVU1308
 4412 0008 014B     		ldr	r3, .L507
 4413 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 4414              	.LVL358:
 4415              	.L505:
  99:src/keys.c    **** 
 4416              		.loc 1 99 1 discriminator 4 view .LVU1309
 4417 000c 08BD     		pop	{r3, pc}
 4418              	.L508:
 4419 000e 00BF     		.align	2
 4420              	.L507:
 4421 0010 00000000 		.word	StateWhileOn
 4422              		.cfi_endproc
 4423              	.LFE0:
 4425              		.section	.text.reset_shift,"ax",%progbits
 4426              		.align	1
 4427              		.p2align 2,,3
 4428              		.global	reset_shift
 4429              		.syntax unified
 4430              		.thumb
ARM GAS  /tmp/cc8xFAqJ.s 			page 154


 4431              		.thumb_func
 4432              		.fpu fpv4-sp-d16
 4434              	reset_shift:
 4435              	.LFB2:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 4436              		.loc 1 114 31 is_stmt 1 view -0
 4437              		.cfi_startproc
 4438              		@ args = 0, pretend = 0, frame = 0
 4439              		@ frame_needed = 0, uses_anonymous_args = 0
 115:src/keys.c    **** }
 4440              		.loc 1 115 2 view .LVU1311
 4441              	.LVL359:
 4442              	.LBB480:
 4443              	.LBI480:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 4444              		.loc 1 104 20 view .LVU1312
 4445              	.LBB481:
 105:src/keys.c    **** 	State2.shifts = shift;
 4446              		.loc 1 105 2 view .LVU1313
 4447              	.LBB482:
 4448              	.LBI482:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4449              		.loc 1 96 13 view .LVU1314
 4450              	.LBB483:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4451              		.loc 1 97 2 view .LVU1315
 4452              	.LBE483:
 4453              	.LBE482:
 4454              	.LBE481:
 4455              	.LBE480:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 4456              		.loc 1 114 31 is_stmt 0 view .LVU1316
 4457 0000 08B5     		push	{r3, lr}
 4458              		.cfi_def_cfa_offset 8
 4459              		.cfi_offset 3, -8
 4460              		.cfi_offset 14, -4
 4461              	.LBB487:
 4462              	.LBB486:
 4463              	.LBB485:
 4464              	.LBB484:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4465              		.loc 1 97 18 view .LVU1317
 4466 0002 FFF7FEFF 		bl	shift_down
 4467              	.LVL360:
  98:src/keys.c    **** }
 4468              		.loc 1 98 2 is_stmt 1 view .LVU1318
  98:src/keys.c    **** }
 4469              		.loc 1 98 52 is_stmt 0 view .LVU1319
 4470 0006 034B     		ldr	r3, .L514
 4471 0008 00B9     		cbnz	r0, .L510
 4472 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 4473              	.LVL361:
 4474              	.L510:
  98:src/keys.c    **** }
 4475              		.loc 1 98 52 view .LVU1320
 4476              	.LBE484:
 4477              	.LBE485:
ARM GAS  /tmp/cc8xFAqJ.s 			page 155


 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4478              		.loc 1 106 2 is_stmt 1 view .LVU1321
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4479              		.loc 1 106 16 is_stmt 0 view .LVU1322
 4480 000c 0022     		movs	r2, #0
 4481 000e 1A74     		strb	r2, [r3, #16]
 108:src/keys.c    **** }
 4482              		.loc 1 108 2 is_stmt 1 view .LVU1323
 4483              	.LVL362:
 108:src/keys.c    **** }
 4484              		.loc 1 108 2 is_stmt 0 view .LVU1324
 4485              	.LBE486:
 4486              	.LBE487:
 116:src/keys.c    **** 
 4487              		.loc 1 116 1 view .LVU1325
 4488 0010 08BD     		pop	{r3, pc}
 4489              	.L515:
 4490 0012 00BF     		.align	2
 4491              	.L514:
 4492 0014 00000000 		.word	StateWhileOn
 4493              		.cfi_endproc
 4494              	.LFE2:
 4496              		.section	.text.keycode_to_row_column,"ax",%progbits
 4497              		.align	1
 4498              		.p2align 2,,3
 4499              		.global	keycode_to_row_column
 4500              		.syntax unified
 4501              		.thumb
 4502              		.thumb_func
 4503              		.fpu fpv4-sp-d16
 4505              	keycode_to_row_column:
 4506              	.LVL363:
 4507              	.LFB6:
 180:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 4508              		.loc 1 180 1 is_stmt 1 view -0
 4509              		.cfi_startproc
 4510              		@ args = 0, pretend = 0, frame = 0
 4511              		@ frame_needed = 0, uses_anonymous_args = 0
 4512              		@ link register save eliminated.
 181:src/keys.c    **** }
 4513              		.loc 1 181 2 view .LVU1327
 181:src/keys.c    **** }
 4514              		.loc 1 181 18 is_stmt 0 view .LVU1328
 4515 0000 074A     		ldr	r2, .L517
 4516 0002 82FB0032 		smull	r3, r2, r2, r0
 4517 0006 A2EBE073 		sub	r3, r2, r0, asr #31
 181:src/keys.c    **** }
 4518              		.loc 1 181 24 view .LVU1329
 4519 000a 03EB8302 		add	r2, r3, r3, lsl #2
 4520 000e 5200     		lsls	r2, r2, #1
 181:src/keys.c    **** }
 4521              		.loc 1 181 33 view .LVU1330
 4522 0010 03EB4303 		add	r3, r3, r3, lsl #1
 4523 0014 A0EB4303 		sub	r3, r0, r3, lsl #1
 181:src/keys.c    **** }
 4524              		.loc 1 181 12 view .LVU1331
 4525 0018 02F10B00 		add	r0, r2, #11
ARM GAS  /tmp/cc8xFAqJ.s 			page 156


 4526              	.LVL364:
 182:src/keys.c    **** 
 4527              		.loc 1 182 1 view .LVU1332
 4528 001c 1844     		add	r0, r0, r3
 4529 001e 7047     		bx	lr
 4530              	.L518:
 4531              		.align	2
 4532              	.L517:
 4533 0020 ABAAAA2A 		.word	715827883
 4534              		.cfi_endproc
 4535              	.LFE6:
 4537              		.section	.text.row_column_to_keycode,"ax",%progbits
 4538              		.align	1
 4539              		.p2align 2,,3
 4540              		.global	row_column_to_keycode
 4541              		.syntax unified
 4542              		.thumb
 4543              		.thumb_func
 4544              		.fpu fpv4-sp-d16
 4546              	row_column_to_keycode:
 4547              	.LVL365:
 4548              	.LFB7:
 190:src/keys.c    **** 	int row = c / 10 - 1;
 4549              		.loc 1 190 1 is_stmt 1 view -0
 4550              		.cfi_startproc
 4551              		@ args = 0, pretend = 0, frame = 0
 4552              		@ frame_needed = 0, uses_anonymous_args = 0
 4553              		@ link register save eliminated.
 191:src/keys.c    **** 	int col = c % 10 - 1;
 4554              		.loc 1 191 2 view .LVU1334
 191:src/keys.c    **** 	int col = c % 10 - 1;
 4555              		.loc 1 191 14 is_stmt 0 view .LVU1335
 4556 0000 0E4A     		ldr	r2, .L525
 4557 0002 82FB0032 		smull	r3, r2, r2, r0
 4558 0006 C317     		asrs	r3, r0, #31
 4559 0008 C3EBA203 		rsb	r3, r3, r2, asr #2
 192:src/keys.c    **** 
 4560              		.loc 1 192 14 view .LVU1336
 4561 000c 03EB8302 		add	r2, r3, r3, lsl #2
 191:src/keys.c    **** 	int col = c % 10 - 1;
 4562              		.loc 1 191 6 view .LVU1337
 4563 0010 013B     		subs	r3, r3, #1
 4564              	.LVL366:
 192:src/keys.c    **** 
 4565              		.loc 1 192 2 is_stmt 1 view .LVU1338
 192:src/keys.c    **** 
 4566              		.loc 1 192 14 is_stmt 0 view .LVU1339
 4567 0012 A0EB4200 		sub	r0, r0, r2, lsl #1
 4568              	.LVL367:
 194:src/keys.c    **** 		return -1;
 4569              		.loc 1 194 5 view .LVU1340
 4570 0016 062B     		cmp	r3, #6
 192:src/keys.c    **** 
 4571              		.loc 1 192 6 view .LVU1341
 4572 0018 00F1FF30 		add	r0, r0, #-1
 4573              	.LVL368:
 194:src/keys.c    **** 		return -1;
ARM GAS  /tmp/cc8xFAqJ.s 			page 157


 4574              		.loc 1 194 2 is_stmt 1 view .LVU1342
 194:src/keys.c    **** 		return -1;
 4575              		.loc 1 194 5 is_stmt 0 view .LVU1343
 4576 001c 0AD8     		bhi	.L524
 194:src/keys.c    **** 		return -1;
 4577              		.loc 1 194 36 discriminator 1 view .LVU1344
 4578 001e 012B     		cmp	r3, #1
 4579 0020 CCBF     		ite	gt
 4580 0022 0422     		movgt	r2, #4
 4581 0024 0522     		movle	r2, #5
 194:src/keys.c    **** 		return -1;
 4582              		.loc 1 194 25 discriminator 1 view .LVU1345
 4583 0026 8242     		cmp	r2, r0
 4584 0028 04DB     		blt	.L524
 196:src/keys.c    **** }
 4585              		.loc 1 196 2 is_stmt 1 view .LVU1346
 196:src/keys.c    **** }
 4586              		.loc 1 196 13 is_stmt 0 view .LVU1347
 4587 002a 03EB4303 		add	r3, r3, r3, lsl #1
 4588              	.LVL369:
 196:src/keys.c    **** }
 4589              		.loc 1 196 17 view .LVU1348
 4590 002e 00EB4300 		add	r0, r0, r3, lsl #1
 4591              	.LVL370:
 196:src/keys.c    **** }
 4592              		.loc 1 196 17 view .LVU1349
 4593 0032 7047     		bx	lr
 4594              	.LVL371:
 4595              	.L524:
 195:src/keys.c    **** 	return row * 6 + col;
 4596              		.loc 1 195 10 view .LVU1350
 4597 0034 4FF0FF30 		mov	r0, #-1
 4598              	.LVL372:
 197:src/keys.c    **** 
 4599              		.loc 1 197 1 view .LVU1351
 4600 0038 7047     		bx	lr
 4601              	.L526:
 4602 003a 00BF     		.align	2
 4603              	.L525:
 4604 003c 67666666 		.word	1717986919
 4605              		.cfi_endproc
 4606              	.LFE7:
 4608              		.section	.text.keycode_to_digit_or_register,"ax",%progbits
 4609              		.align	1
 4610              		.p2align 2,,3
 4611              		.global	keycode_to_digit_or_register
 4612              		.syntax unified
 4613              		.thumb
 4614              		.thumb_func
 4615              		.fpu fpv4-sp-d16
 4617              	keycode_to_digit_or_register:
 4618              	.LVL373:
 4619              	.LFB8:
 211:src/keys.c    ****   static const unsigned char map[] = {
 4620              		.loc 1 211 1 is_stmt 1 view -0
 4621              		.cfi_startproc
 4622              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc8xFAqJ.s 			page 158


 4623              		@ frame_needed = 0, uses_anonymous_args = 0
 4624              		@ link register save eliminated.
 212:src/keys.c    ****     // K00 - K05
 4625              		.loc 1 212 3 view .LVU1353
 234:src/keys.c    **** }
 4626              		.loc 1 234 3 view .LVU1354
 4627              	.LBB488:
 4628              	.LBI488:
 131:src/keys.c    **** {
 4629              		.loc 1 131 12 view .LVU1355
 4630              	.LBB489:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 4631              		.loc 1 133 2 view .LVU1356
 143:src/keys.c    **** }
 4632              		.loc 1 143 2 view .LVU1357
 143:src/keys.c    **** }
 4633              		.loc 1 143 23 is_stmt 0 view .LVU1358
 4634 0000 024B     		ldr	r3, .L528
 4635              	.LBE489:
 4636              	.LBE488:
 234:src/keys.c    **** }
 4637              		.loc 1 234 28 view .LVU1359
 4638 0002 034A     		ldr	r2, .L528+4
 4639              	.LBB491:
 4640              	.LBB490:
 143:src/keys.c    **** }
 4641              		.loc 1 143 23 view .LVU1360
 4642 0004 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 4643              	.LBE490:
 4644              	.LBE491:
 235:src/keys.c    **** #else
 4645              		.loc 1 235 1 view .LVU1361
 4646 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 4647              	.LVL374:
 235:src/keys.c    **** #else
 4648              		.loc 1 235 1 view .LVU1362
 4649 0008 7047     		bx	lr
 4650              	.L529:
 4651 000a 00BF     		.align	2
 4652              	.L528:
 4653 000c 00000000 		.word	.LANCHOR6
 4654 0010 00000000 		.word	.LANCHOR5
 4655              		.cfi_endproc
 4656              	.LFE8:
 4658              		.section	.text.init_state,"ax",%progbits
 4659              		.align	1
 4660              		.p2align 2,,3
 4661              		.global	init_state
 4662              		.syntax unified
 4663              		.thumb
 4664              		.thumb_func
 4665              		.fpu fpv4-sp-d16
 4667              	init_state:
 4668              	.LFB13:
 615:src/keys.c    **** #ifndef REALBUILD
 4669              		.loc 1 615 23 is_stmt 1 view -0
 4670              		.cfi_startproc
ARM GAS  /tmp/cc8xFAqJ.s 			page 159


 4671              		@ args = 0, pretend = 0, frame = 0
 4672              		@ frame_needed = 0, uses_anonymous_args = 0
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4673              		.loc 1 617 2 view .LVU1364
 615:src/keys.c    **** #ifndef REALBUILD
 4674              		.loc 1 615 23 is_stmt 0 view .LVU1365
 4675 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4676              		.cfi_def_cfa_offset 24
 4677              		.cfi_offset 4, -24
 4678              		.cfi_offset 5, -20
 4679              		.cfi_offset 6, -16
 4680              		.cfi_offset 7, -12
 4681              		.cfi_offset 8, -8
 4682              		.cfi_offset 14, -4
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4683              		.loc 1 617 25 view .LVU1366
 4684 0004 1E4C     		ldr	r4, .L532
 625:src/keys.c    **** 	// Removed: will clear any locals on power off
 4685              		.loc 1 625 10 view .LVU1367
 4686 0006 0021     		movs	r1, #0
 629:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 4687              		.loc 1 629 2 view .LVU1368
 4688 0008 1422     		movs	r2, #20
 4689 000a 04F10800 		add	r0, r4, #8
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4690              		.loc 1 617 25 view .LVU1369
 4691 000e 257E     		ldrb	r5, [r4, #24]	@ zero_extendqisi2
 618:src/keys.c    **** #else
 4692              		.loc 1 618 25 view .LVU1370
 4693 0010 E67D     		ldrb	r6, [r4, #23]	@ zero_extendqisi2
 622:src/keys.c    **** 	int k = LastKey;
 4694              		.loc 1 622 10 view .LVU1371
 4695 0012 A77C     		ldrb	r7, [r4, #18]	@ zero_extendqisi2
 623:src/keys.c    **** 
 4696              		.loc 1 623 10 view .LVU1372
 4697 0014 94F91380 		ldrsb	r8, [r4, #19]
 625:src/keys.c    **** 	// Removed: will clear any locals on power off
 4698              		.loc 1 625 10 view .LVU1373
 4699 0018 E177     		strb	r1, [r4, #31]
 629:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 4700              		.loc 1 629 2 view .LVU1374
 4701 001a FFF7FEFF 		bl	xset
 4702              	.LVL375:
 633:src/keys.c    **** 	UState.stack_depth = 1; // set stack size to 8 	//JM3
 4703              		.loc 1 633 2 view .LVU1375
 4704 001e 194B     		ldr	r3, .L532+4
 4705 0020 1B68     		ldr	r3, [r3]
 4706 0022 93F8AC17 		ldrb	r1, [r3, #1964]	@ zero_extendqisi2
 634:src/keys.c    **** #endif  									//JM3
 4707              		.loc 1 634 21 view .LVU1376
 4708 0026 93F8EA27 		ldrb	r2, [r3, #2026]	@ zero_extendqisi2
 633:src/keys.c    **** 	UState.stack_depth = 1; // set stack size to 8 	//JM3
 4709              		.loc 1 633 2 view .LVU1377
 4710 002a 41F00801 		orr	r1, r1, #8
 634:src/keys.c    **** #endif  									//JM3
 4711              		.loc 1 634 21 view .LVU1378
 4712 002e 42F00802 		orr	r2, r2, #8
ARM GAS  /tmp/cc8xFAqJ.s 			page 160


 633:src/keys.c    **** 	UState.stack_depth = 1; // set stack size to 8 	//JM3
 4713              		.loc 1 633 2 view .LVU1379
 4714 0032 83F8AC17 		strb	r1, [r3, #1964]
 634:src/keys.c    **** #endif  									//JM3
 4715              		.loc 1 634 21 view .LVU1380
 4716 0036 83F8EA27 		strb	r2, [r3, #2026]
 655:src/keys.c    **** #endif
 4717              		.loc 1 655 2 view .LVU1381
 4718 003a CB20     		movs	r0, #203
 4719 003c FFF7FEFF 		bl	cpx_nop
 4720              	.LVL376:
 665:src/keys.c    **** 	update_program_bounds(1);
 4721              		.loc 1 665 17 view .LVU1382
 4722 0040 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 664:src/keys.c    **** 	State2.runmode = 1;
 4723              		.loc 1 664 14 view .LVU1383
 4724 0042 0722     		movs	r2, #7
 665:src/keys.c    **** 	update_program_bounds(1);
 4725              		.loc 1 665 17 view .LVU1384
 4726 0044 43F04003 		orr	r3, r3, #64
 666:src/keys.c    **** 	set_lift();
 4727              		.loc 1 666 2 view .LVU1385
 4728 0048 0120     		movs	r0, #1
 664:src/keys.c    **** 	State2.runmode = 1;
 4729              		.loc 1 664 14 view .LVU1386
 4730 004a E273     		strb	r2, [r4, #15]
 665:src/keys.c    **** 	update_program_bounds(1);
 4731              		.loc 1 665 17 view .LVU1387
 4732 004c A375     		strb	r3, [r4, #22]
 666:src/keys.c    **** 	set_lift();
 4733              		.loc 1 666 2 view .LVU1388
 4734 004e FFF7FEFF 		bl	update_program_bounds
 4735              	.LVL377:
 667:src/keys.c    **** 
 4736              		.loc 1 667 2 view .LVU1389
 4737 0052 FFF7FEFF 		bl	set_lift
 4738              	.LVL378:
 674:src/keys.c    **** 	State2.flags = a;
 4739              		.loc 1 674 15 view .LVU1390
 4740 0056 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 675:src/keys.c    **** #else
 4741              		.loc 1 675 15 view .LVU1391
 4742 0058 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 679:src/keys.c    **** }
 4743              		.loc 1 679 15 view .LVU1392
 4744 005a 0B49     		ldr	r1, .L532+8
 672:src/keys.c    **** #ifndef REALBUILD
 4745              		.loc 1 672 10 view .LVU1393
 4746 005c 84F81380 		strb	r8, [r4, #19]
 617:src/keys.c    **** 	unsigned int b = State2.trace;
 4747              		.loc 1 617 25 view .LVU1394
 4748 0060 05F00105 		and	r5, r5, #1
 4749              	.LVL379:
 618:src/keys.c    **** #else
 4750              		.loc 1 618 2 is_stmt 1 view .LVU1395
 618:src/keys.c    **** #else
 4751              		.loc 1 618 25 is_stmt 0 view .LVU1396
ARM GAS  /tmp/cc8xFAqJ.s 			page 161


 4752 0064 F609     		lsrs	r6, r6, #7
 4753              	.LVL380:
 622:src/keys.c    **** 	int k = LastKey;
 4754              		.loc 1 622 2 is_stmt 1 view .LVU1397
 622:src/keys.c    **** 	int k = LastKey;
 4755              		.loc 1 622 10 is_stmt 0 view .LVU1398
 4756 0066 FFB2     		uxtb	r7, r7
 4757              	.LVL381:
 623:src/keys.c    **** 
 4758              		.loc 1 623 2 is_stmt 1 view .LVU1399
 625:src/keys.c    **** 	// Removed: will clear any locals on power off
 4759              		.loc 1 625 2 view .LVU1400
 629:src/keys.c    **** #ifdef INCLUDE_C_LOCK
 4760              		.loc 1 629 2 view .LVU1401
 633:src/keys.c    **** 	UState.stack_depth = 1; // set stack size to 8 	//JM3
 4761              		.loc 1 633 2 view .LVU1402
 634:src/keys.c    **** #endif  									//JM3
 4762              		.loc 1 634 2 view .LVU1403
 655:src/keys.c    **** #endif
 4763              		.loc 1 655 2 view .LVU1404
 664:src/keys.c    **** 	State2.runmode = 1;
 4764              		.loc 1 664 2 view .LVU1405
 665:src/keys.c    **** 	update_program_bounds(1);
 4765              		.loc 1 665 2 view .LVU1406
 666:src/keys.c    **** 	set_lift();
 4766              		.loc 1 666 2 view .LVU1407
 667:src/keys.c    **** 
 4767              		.loc 1 667 2 view .LVU1408
 671:src/keys.c    **** 	LastKey = k;
 4768              		.loc 1 671 2 view .LVU1409
 674:src/keys.c    **** 	State2.flags = a;
 4769              		.loc 1 674 15 is_stmt 0 view .LVU1410
 4770 0068 66F3C712 		bfi	r2, r6, #7, #1
 675:src/keys.c    **** #else
 4771              		.loc 1 675 15 view .LVU1411
 4772 006c 65F30003 		bfi	r3, r5, #0, #1
 679:src/keys.c    **** }
 4773              		.loc 1 679 15 view .LVU1412
 4774 0070 6420     		movs	r0, #100
 674:src/keys.c    **** 	State2.flags = a;
 4775              		.loc 1 674 15 view .LVU1413
 4776 0072 E275     		strb	r2, [r4, #23]
 675:src/keys.c    **** #else
 4777              		.loc 1 675 15 view .LVU1414
 4778 0074 2376     		strb	r3, [r4, #24]
 671:src/keys.c    **** 	LastKey = k;
 4779              		.loc 1 671 10 view .LVU1415
 4780 0076 A774     		strb	r7, [r4, #18]
 672:src/keys.c    **** #ifndef REALBUILD
 4781              		.loc 1 672 2 is_stmt 1 view .LVU1416
 674:src/keys.c    **** 	State2.flags = a;
 4782              		.loc 1 674 2 view .LVU1417
 675:src/keys.c    **** #else
 4783              		.loc 1 675 2 view .LVU1418
 679:src/keys.c    **** }
 4784              		.loc 1 679 2 view .LVU1419
 679:src/keys.c    **** }
ARM GAS  /tmp/cc8xFAqJ.s 			page 162


 4785              		.loc 1 679 15 is_stmt 0 view .LVU1420
 4786 0078 0860     		str	r0, [r1]
 680:src/keys.c    **** 
 4787              		.loc 1 680 1 view .LVU1421
 4788 007a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4789              	.LVL382:
 4790              	.L533:
 680:src/keys.c    **** 
 4791              		.loc 1 680 1 view .LVU1422
 4792 007e 00BF     		.align	2
 4793              	.L532:
 4794 0080 00000000 		.word	StateWhileOn
 4795 0084 00000000 		.word	main_ram
 4796 0088 00000000 		.word	ShowRegister
 4797              		.cfi_endproc
 4798              	.LFE13:
 4800              		.section	.text.process_cmplx,"ax",%progbits
 4801              		.align	1
 4802              		.p2align 2,,3
 4803              		.syntax unified
 4804              		.thumb
 4805              		.thumb_func
 4806              		.fpu fpv4-sp-d16
 4808              	process_cmplx:
 4809              	.LVL383:
 4810              	.LFB27:
1449:src/keys.c    **** #define _RARG   0xFF00
 4811              		.loc 1 1449 43 is_stmt 1 view -0
 4812              		.cfi_startproc
 4813              		@ args = 0, pretend = 0, frame = 0
 4814              		@ frame_needed = 0, uses_anonymous_args = 0
1454:src/keys.c    **** 		// Row 1
 4815              		.loc 1 1454 2 view .LVU1424
1505:src/keys.c    **** 	int lc = keycode_to_linear(c);
 4816              		.loc 1 1505 2 view .LVU1425
 4817              	.LBB492:
 4818              	.LBI492:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 4819              		.loc 1 114 13 view .LVU1426
 4820              	.LBE492:
 115:src/keys.c    **** }
 4821              		.loc 1 115 2 view .LVU1427
 4822              	.LBB509:
 4823              	.LBB493:
 4824              	.LBI493:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 4825              		.loc 1 104 20 view .LVU1428
 4826              	.LBB494:
 105:src/keys.c    **** 	State2.shifts = shift;
 4827              		.loc 1 105 2 view .LVU1429
 4828              	.LBB495:
 4829              	.LBI495:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 4830              		.loc 1 96 13 view .LVU1430
 4831              	.LBB496:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4832              		.loc 1 97 2 view .LVU1431
ARM GAS  /tmp/cc8xFAqJ.s 			page 163


 4833              	.LBE496:
 4834              	.LBE495:
 4835              	.LBE494:
 4836              	.LBE493:
 4837              	.LBE509:
1449:src/keys.c    **** #define _RARG   0xFF00
 4838              		.loc 1 1449 43 is_stmt 0 view .LVU1432
 4839 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4840              		.cfi_def_cfa_offset 24
 4841              		.cfi_offset 3, -24
 4842              		.cfi_offset 4, -20
 4843              		.cfi_offset 5, -16
 4844              		.cfi_offset 6, -12
 4845              		.cfi_offset 7, -8
 4846              		.cfi_offset 14, -4
1449:src/keys.c    **** #define _RARG   0xFF00
 4847              		.loc 1 1449 43 view .LVU1433
 4848 0002 0546     		mov	r5, r0
 4849              	.LBB510:
 4850              	.LBB505:
 4851              	.LBB501:
 4852              	.LBB499:
 4853              	.LBB497:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 4854              		.loc 1 97 18 view .LVU1434
 4855 0004 FFF7FEFF 		bl	shift_down
 4856              	.LVL384:
  98:src/keys.c    **** }
 4857              		.loc 1 98 2 is_stmt 1 view .LVU1435
  98:src/keys.c    **** }
 4858              		.loc 1 98 52 is_stmt 0 view .LVU1436
 4859 0008 E8B1     		cbz	r0, .L551
 4860 000a 294E     		ldr	r6, .L558
 4861 000c 0446     		mov	r4, r0
 4862              	.L535:
 4863              	.LVL385:
  98:src/keys.c    **** }
 4864              		.loc 1 98 52 view .LVU1437
 4865              	.LBE497:
 4866              	.LBE499:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4867              		.loc 1 106 2 is_stmt 1 view .LVU1438
 4868              	.LBE501:
 4869              	.LBE505:
 4870              	.LBE510:
 4871              	.LBB511:
 4872              	.LBB512:
 158:src/keys.c    **** }
 4873              		.loc 1 158 23 is_stmt 0 view .LVU1439
 4874 000e 294B     		ldr	r3, .L558+4
 4875              	.LBE512:
 4876              	.LBE511:
1507:src/keys.c    **** 	State2.cmplx = 0;
 4877              		.loc 1 1507 21 view .LVU1440
 4878 0010 2948     		ldr	r0, .L558+8
 4879              	.LBB515:
 4880              	.LBB513:
ARM GAS  /tmp/cc8xFAqJ.s 			page 164


 158:src/keys.c    **** }
 4881              		.loc 1 158 23 view .LVU1441
 4882 0012 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 4883              	.LBE513:
 4884              	.LBE515:
1508:src/keys.c    **** 
 4885              		.loc 1 1508 15 view .LVU1442
 4886 0014 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
1507:src/keys.c    **** 	State2.cmplx = 0;
 4887              		.loc 1 1507 21 view .LVU1443
 4888 0016 04EB8303 		add	r3, r4, r3, lsl #2
 4889              	.LBB516:
 4890              	.LBB506:
 4891              	.LBB502:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4892              		.loc 1 106 16 view .LVU1444
 4893 001a 0021     		movs	r1, #0
 4894              	.LBE502:
 4895              	.LBE506:
 4896              	.LBE516:
1507:src/keys.c    **** 	State2.cmplx = 0;
 4897              		.loc 1 1507 21 view .LVU1445
 4898 001c 30F81370 		ldrh	r7, [r0, r3, lsl #1]
 4899              	.LBB517:
 4900              	.LBB507:
 4901              	.LBB503:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 4902              		.loc 1 106 16 view .LVU1446
 4903 0020 3174     		strb	r1, [r6, #16]
 108:src/keys.c    **** }
 4904              		.loc 1 108 2 is_stmt 1 view .LVU1447
 4905              	.LVL386:
 108:src/keys.c    **** }
 4906              		.loc 1 108 2 is_stmt 0 view .LVU1448
 4907              	.LBE503:
 4908              	.LBE507:
 4909              	.LBE517:
1506:src/keys.c    **** 	int op = op_map[lc][shift];
 4910              		.loc 1 1506 2 is_stmt 1 view .LVU1449
 4911              	.LBB518:
 4912              	.LBI511:
 146:src/keys.c    **** {
 4913              		.loc 1 146 12 view .LVU1450
 4914              	.LBB514:
 148:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 4915              		.loc 1 148 2 view .LVU1451
 158:src/keys.c    **** }
 4916              		.loc 1 158 2 view .LVU1452
 158:src/keys.c    **** }
 4917              		.loc 1 158 2 is_stmt 0 view .LVU1453
 4918              	.LBE514:
 4919              	.LBE518:
1507:src/keys.c    **** 	State2.cmplx = 0;
 4920              		.loc 1 1507 2 is_stmt 1 view .LVU1454
1508:src/keys.c    **** 
 4921              		.loc 1 1508 2 view .LVU1455
1510:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
ARM GAS  /tmp/cc8xFAqJ.s 			page 165


 4922              		.loc 1 1510 5 is_stmt 0 view .LVU1456
 4923 0022 07F47F43 		and	r3, r7, #65280
1508:src/keys.c    **** 
 4924              		.loc 1 1508 15 view .LVU1457
 4925 0026 61F34102 		bfi	r2, r1, #1, #1
1510:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4926              		.loc 1 1510 5 view .LVU1458
 4927 002a B3F57F4F 		cmp	r3, #65280
1508:src/keys.c    **** 
 4928              		.loc 1 1508 15 view .LVU1459
 4929 002e 7275     		strb	r2, [r6, #21]
1510:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4930              		.loc 1 1510 2 is_stmt 1 view .LVU1460
1510:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 4931              		.loc 1 1510 5 is_stmt 0 view .LVU1461
 4932 0030 2CD0     		beq	.L554
1514:src/keys.c    **** 		// HYP
 4933              		.loc 1 1514 2 is_stmt 1 view .LVU1462
1514:src/keys.c    **** 		// HYP
 4934              		.loc 1 1514 5 is_stmt 0 view .LVU1463
 4935 0032 9DB1     		cbz	r5, .L555
1523:src/keys.c    **** 		switch (c) {
 4936              		.loc 1 1523 2 is_stmt 1 view .LVU1464
1523:src/keys.c    **** 		switch (c) {
 4937              		.loc 1 1523 5 is_stmt 0 view .LVU1465
 4938 0034 2CB1     		cbz	r4, .L534
1524:src/keys.c    **** 		case K_CMPLX:
 4939              		.loc 1 1524 3 is_stmt 1 view .LVU1466
 4940 0036 242D     		cmp	r5, #36
 4941 0038 24D0     		beq	.L540
 4942 003a 2D2D     		cmp	r5, #45
 4943 003c 1DD0     		beq	.L541
 4944 003e 1F2D     		cmp	r5, #31
 4945 0040 04D0     		beq	.L556
 4946              	.LVL387:
 4947              	.L534:
1556:src/keys.c    **** 
 4948              		.loc 1 1556 1 is_stmt 0 view .LVU1467
 4949 0042 3846     		mov	r0, r7
 4950 0044 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4951              	.LVL388:
 4952              	.L551:
 4953              	.LBB519:
 4954              	.LBB508:
 4955              	.LBB504:
 4956              	.LBB500:
 4957              	.LBB498:
  98:src/keys.c    **** }
 4958              		.loc 1 98 52 view .LVU1468
 4959 0046 1A4E     		ldr	r6, .L558
 4960 0048 347C     		ldrb	r4, [r6, #16]	@ zero_extendqisi2
 4961 004a E0E7     		b	.L535
 4962              	.LVL389:
 4963              	.L556:
  98:src/keys.c    **** }
 4964              		.loc 1 98 52 view .LVU1469
 4965              	.LBE498:
ARM GAS  /tmp/cc8xFAqJ.s 			page 166


 4966              	.LBE500:
 4967              	.LBE504:
 4968              	.LBE508:
 4969              	.LBE519:
1530:src/keys.c    **** 				if (is_bad_cmdline())
 4970              		.loc 1 1530 4 is_stmt 1 view .LVU1470
1530:src/keys.c    **** 				if (is_bad_cmdline())
 4971              		.loc 1 1530 7 is_stmt 0 view .LVU1471
 4972 004c 332F     		cmp	r7, #51
 4973 004e 02D0     		beq	.L553
1531:src/keys.c    **** 					return STATE_UNFINISHED;
 4974              		.loc 1 1531 5 is_stmt 1 view .LVU1472
1531:src/keys.c    **** 					return STATE_UNFINISHED;
 4975              		.loc 1 1531 9 is_stmt 0 view .LVU1473
 4976 0050 FFF7FEFF 		bl	is_bad_cmdline
 4977              	.LVL390:
1531:src/keys.c    **** 					return STATE_UNFINISHED;
 4978              		.loc 1 1531 8 view .LVU1474
 4979 0054 10B3     		cbz	r0, .L557
 4980              	.L553:
1512:src/keys.c    **** 	}
 4981              		.loc 1 1512 10 view .LVU1475
 4982 0056 3327     		movs	r7, #51
 4983              	.LVL391:
1556:src/keys.c    **** 
 4984              		.loc 1 1556 1 view .LVU1476
 4985 0058 3846     		mov	r0, r7
 4986 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4987              	.LVL392:
 4988              	.L555:
1516:src/keys.c    **** 		State2.hyp = 1;
 4989              		.loc 1 1516 3 is_stmt 1 view .LVU1477
 4990 005c FFF7FEFF 		bl	process_cmdline_set_lift
 4991              	.LVL393:
1517:src/keys.c    **** 		State2.dot = op;
 4992              		.loc 1 1517 3 view .LVU1478
1518:src/keys.c    **** 		State2.cmplx = 1;
 4993              		.loc 1 1518 3 view .LVU1479
1519:src/keys.c    **** 		return STATE_UNFINISHED;
 4994              		.loc 1 1519 3 view .LVU1480
1519:src/keys.c    **** 		return STATE_UNFINISHED;
 4995              		.loc 1 1519 16 is_stmt 0 view .LVU1481
 4996 0060 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
 4997 0062 07F00103 		and	r3, r7, #1
 4998 0066 9B01     		lsls	r3, r3, #6
 4999 0068 22F06202 		bic	r2, r2, #98
 5000 006c 43F02203 		orr	r3, r3, #34
 5001 0070 1343     		orrs	r3, r3, r2
1520:src/keys.c    **** 	}
 5002              		.loc 1 1520 10 view .LVU1482
 5003 0072 3327     		movs	r7, #51
 5004              	.LVL394:
1519:src/keys.c    **** 		return STATE_UNFINISHED;
 5005              		.loc 1 1519 16 view .LVU1483
 5006 0074 7375     		strb	r3, [r6, #21]
1520:src/keys.c    **** 	}
 5007              		.loc 1 1520 3 is_stmt 1 view .LVU1484
ARM GAS  /tmp/cc8xFAqJ.s 			page 167


1556:src/keys.c    **** 
 5008              		.loc 1 1556 1 is_stmt 0 view .LVU1485
 5009 0076 3846     		mov	r0, r7
 5010 0078 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5011              	.LVL395:
 5012              	.L541:
1526:src/keys.c    **** 			break;
 5013              		.loc 1 1526 4 is_stmt 1 view .LVU1486
 5014              	.LBB520:
 5015              	.LBI520:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 5016              		.loc 1 104 20 view .LVU1487
 5017              	.LBB521:
 105:src/keys.c    **** 	State2.shifts = shift;
 5018              		.loc 1 105 2 view .LVU1488
 5019              	.LBB522:
 5020              	.LBI522:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 5021              		.loc 1 96 13 view .LVU1489
 5022              	.LBB523:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5023              		.loc 1 97 2 view .LVU1490
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5024              		.loc 1 97 18 is_stmt 0 view .LVU1491
 5025 007a FFF7FEFF 		bl	shift_down
 5026              	.LVL396:
  98:src/keys.c    **** }
 5027              		.loc 1 98 2 is_stmt 1 view .LVU1492
 5028              	.LBE523:
 5029              	.LBE522:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5030              		.loc 1 106 2 view .LVU1493
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5031              		.loc 1 106 16 is_stmt 0 view .LVU1494
 5032 007e 3474     		strb	r4, [r6, #16]
 108:src/keys.c    **** }
 5033              		.loc 1 108 2 is_stmt 1 view .LVU1495
 5034              	.LBE521:
 5035              	.LBE520:
1556:src/keys.c    **** 
 5036              		.loc 1 1556 1 is_stmt 0 view .LVU1496
 5037 0080 3846     		mov	r0, r7
 5038 0082 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5039              	.LVL397:
 5040              	.L540:
1540:src/keys.c    **** 			break;
 5041              		.loc 1 1540 4 is_stmt 1 view .LVU1497
 5042 0084 FFF7FEFF 		bl	init_state
 5043              	.LVL398:
1541:src/keys.c    **** 
 5044              		.loc 1 1541 4 view .LVU1498
1556:src/keys.c    **** 
 5045              		.loc 1 1556 1 is_stmt 0 view .LVU1499
 5046 0088 3846     		mov	r0, r7
 5047 008a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5048              	.LVL399:
 5049              	.L554:
ARM GAS  /tmp/cc8xFAqJ.s 			page 168


1511:src/keys.c    **** 		return STATE_UNFINISHED;
 5050              		.loc 1 1511 3 is_stmt 1 view .LVU1500
 5051              	.LBB524:
 5052              	.LBI524:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 5053              		.loc 1 552 13 view .LVU1501
 5054              	.LBB525:
 553:src/keys.c    **** 		return;
 5055              		.loc 1 553 2 view .LVU1502
 553:src/keys.c    **** 		return;
 5056              		.loc 1 553 6 is_stmt 0 view .LVU1503
 5057 008c FFF7FEFF 		bl	is_bad_cmdline
 5058              	.LVL400:
 553:src/keys.c    **** 		return;
 5059              		.loc 1 553 5 view .LVU1504
 5060 0090 0028     		cmp	r0, #0
 5061 0092 E0D1     		bne	.L553
 5062 0094 F8B2     		uxtb	r0, r7
 5063 0096 FFF7FEFF 		bl	init_arg.part.0
 5064              	.LVL401:
 5065 009a DCE7     		b	.L553
 5066              	.LVL402:
 5067              	.L557:
 553:src/keys.c    **** 		return;
 5068              		.loc 1 553 5 view .LVU1505
 5069              	.LBE525:
 5070              	.LBE524:
1533:src/keys.c    **** 				State2.cmplx = 1;
 5071              		.loc 1 1533 5 is_stmt 1 view .LVU1506
 5072 009c FFF7FEFF 		bl	process_cmdline_set_lift
 5073              	.LVL403:
1534:src/keys.c    **** 				State2.test = op;
 5074              		.loc 1 1534 5 view .LVU1507
1534:src/keys.c    **** 				State2.test = op;
 5075              		.loc 1 1534 18 is_stmt 0 view .LVU1508
 5076 00a0 737D     		ldrb	r3, [r6, #21]	@ zero_extendqisi2
1535:src/keys.c    **** 			}
 5077              		.loc 1 1535 17 view .LVU1509
 5078 00a2 F773     		strb	r7, [r6, #15]
1534:src/keys.c    **** 				State2.test = op;
 5079              		.loc 1 1534 18 view .LVU1510
 5080 00a4 43F00203 		orr	r3, r3, #2
 5081 00a8 7375     		strb	r3, [r6, #21]
1535:src/keys.c    **** 			}
 5082              		.loc 1 1535 5 is_stmt 1 view .LVU1511
1537:src/keys.c    **** 
 5083              		.loc 1 1537 11 is_stmt 0 view .LVU1512
 5084 00aa 3327     		movs	r7, #51
 5085              	.LVL404:
1537:src/keys.c    **** 
 5086              		.loc 1 1537 11 view .LVU1513
 5087 00ac C9E7     		b	.L534
 5088              	.L559:
 5089 00ae 00BF     		.align	2
 5090              	.L558:
 5091 00b0 00000000 		.word	StateWhileOn
 5092 00b4 00000000 		.word	.LANCHOR1
ARM GAS  /tmp/cc8xFAqJ.s 			page 169


 5093 00b8 00000000 		.word	.LANCHOR7
 5094              		.cfi_endproc
 5095              	.LFE27:
 5097              		.section	.text.soft_init_state,"ax",%progbits
 5098              		.align	1
 5099              		.p2align 2,,3
 5100              		.global	soft_init_state
 5101              		.syntax unified
 5102              		.thumb
 5103              		.thumb_func
 5104              		.fpu fpv4-sp-d16
 5106              	soft_init_state:
 5107              	.LFB14:
 682:src/keys.c    **** 	int soft;
 5108              		.loc 1 682 28 is_stmt 1 view -0
 5109              		.cfi_startproc
 5110              		@ args = 0, pretend = 0, frame = 0
 5111              		@ frame_needed = 0, uses_anonymous_args = 0
 683:src/keys.c    **** 	unsigned int runmode;
 5112              		.loc 1 683 2 view .LVU1515
 684:src/keys.c    **** 	unsigned int alphas;
 5113              		.loc 1 684 2 view .LVU1516
 685:src/keys.c    **** 
 5114              		.loc 1 685 2 view .LVU1517
 687:src/keys.c    **** 		CmdLineLength = 0;
 5115              		.loc 1 687 2 view .LVU1518
 682:src/keys.c    **** 	int soft;
 5116              		.loc 1 682 28 is_stmt 0 view .LVU1519
 5117 0000 38B5     		push	{r3, r4, r5, lr}
 5118              		.cfi_def_cfa_offset 16
 5119              		.cfi_offset 3, -16
 5120              		.cfi_offset 4, -12
 5121              		.cfi_offset 5, -8
 5122              		.cfi_offset 14, -4
 687:src/keys.c    **** 		CmdLineLength = 0;
 5123              		.loc 1 687 6 view .LVU1520
 5124 0002 114C     		ldr	r4, .L567
 687:src/keys.c    **** 		CmdLineLength = 0;
 5125              		.loc 1 687 5 view .LVU1521
 5126 0004 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 5127 0006 D3B9     		cbnz	r3, .L566
 693:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 5128              		.loc 1 693 2 is_stmt 1 view .LVU1522
 694:src/keys.c    **** 	runmode = State2.runmode;
 5129              		.loc 1 694 17 is_stmt 0 view .LVU1523
 5130 0008 104A     		ldr	r2, .L567+4
 5131 000a 6369     		ldr	r3, [r4, #20]
 694:src/keys.c    **** 	runmode = State2.runmode;
 5132              		.loc 1 694 60 view .LVU1524
 5133 000c 1A42     		tst	r2, r3
 5134 000e 0AD0     		beq	.L563
 5135              	.L564:
 5136              	.LVL405:
 695:src/keys.c    **** 	alphas = State2.alphas;
 5137              		.loc 1 695 2 is_stmt 1 view .LVU1525
 696:src/keys.c    **** 	init_state();
 5138              		.loc 1 696 17 is_stmt 0 view .LVU1526
ARM GAS  /tmp/cc8xFAqJ.s 			page 170


 5139 0010 A57D     		ldrb	r5, [r4, #22]	@ zero_extendqisi2
 5140              	.LVL406:
 696:src/keys.c    **** 	init_state();
 5141              		.loc 1 696 2 is_stmt 1 view .LVU1527
 697:src/keys.c    **** 	if (soft) {
 5142              		.loc 1 697 2 view .LVU1528
 5143 0012 FFF7FEFF 		bl	init_state
 5144              	.LVL407:
 698:src/keys.c    **** 		State2.runmode = runmode;
 5145              		.loc 1 698 2 view .LVU1529
 699:src/keys.c    **** 		State2.alphas = alphas;
 5146              		.loc 1 699 3 view .LVU1530
 700:src/keys.c    **** 	}
 5147              		.loc 1 700 3 view .LVU1531
 700:src/keys.c    **** 	}
 5148              		.loc 1 700 17 is_stmt 0 view .LVU1532
 5149 0016 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 5150 0018 05F04805 		and	r5, r5, #72
 5151 001c 23F04803 		bic	r3, r3, #72
 5152 0020 2B43     		orrs	r3, r3, r5
 5153 0022 A375     		strb	r3, [r4, #22]
 702:src/keys.c    **** 
 5154              		.loc 1 702 1 view .LVU1533
 5155 0024 38BD     		pop	{r3, r4, r5, pc}
 5156              	.LVL408:
 5157              	.L563:
 694:src/keys.c    **** 	runmode = State2.runmode;
 5158              		.loc 1 694 60 discriminator 2 view .LVU1534
 5159 0026 E368     		ldr	r3, [r4, #12]
 5160 0028 23F47F03 		bic	r3, r3, #16711680
 5161 002c 23F47F43 		bic	r3, r3, #65280
 5162 0030 B3F1E06F 		cmp	r3, #117440512
 5163 0034 ECD1     		bne	.L564
 5164              	.LVL409:
 695:src/keys.c    **** 	alphas = State2.alphas;
 5165              		.loc 1 695 2 is_stmt 1 view .LVU1535
 696:src/keys.c    **** 	init_state();
 5166              		.loc 1 696 2 view .LVU1536
 697:src/keys.c    **** 	if (soft) {
 5167              		.loc 1 697 2 view .LVU1537
 702:src/keys.c    **** 
 5168              		.loc 1 702 1 is_stmt 0 view .LVU1538
 5169 0036 BDE83840 		pop	{r3, r4, r5, lr}
 5170              		.cfi_remember_state
 5171              		.cfi_restore 14
 5172              		.cfi_restore 5
 5173              		.cfi_restore 4
 5174              		.cfi_restore 3
 5175              		.cfi_def_cfa_offset 0
 697:src/keys.c    **** 	if (soft) {
 5176              		.loc 1 697 2 view .LVU1539
 5177 003a FFF7FEBF 		b	init_state
 5178              	.LVL410:
 5179              	.L566:
 5180              		.cfi_restore_state
 5181              	.LBB528:
 5182              	.LBI528:
ARM GAS  /tmp/cc8xFAqJ.s 			page 171


 682:src/keys.c    **** 	int soft;
 5183              		.loc 1 682 6 is_stmt 1 view .LVU1540
 5184              	.LBB529:
 688:src/keys.c    **** 		CmdLineEex = 0;
 5185              		.loc 1 688 3 view .LVU1541
 689:src/keys.c    **** 		CmdLineDot = 0;
 5186              		.loc 1 689 3 view .LVU1542
 690:src/keys.c    **** 		return;
 5187              		.loc 1 690 3 view .LVU1543
 688:src/keys.c    **** 		CmdLineEex = 0;
 5188              		.loc 1 688 17 is_stmt 0 view .LVU1544
 5189 003e 0023     		movs	r3, #0
 5190 0040 A383     		strh	r3, [r4, #28]	@ movhi
 690:src/keys.c    **** 		return;
 5191              		.loc 1 690 14 view .LVU1545
 5192 0042 A377     		strb	r3, [r4, #30]
 691:src/keys.c    **** 	}
 5193              		.loc 1 691 3 is_stmt 1 view .LVU1546
 5194              	.LBE529:
 5195              	.LBE528:
 702:src/keys.c    **** 
 5196              		.loc 1 702 1 is_stmt 0 view .LVU1547
 5197 0044 38BD     		pop	{r3, r4, r5, pc}
 5198              	.L568:
 5199 0046 00BF     		.align	2
 5200              	.L567:
 5201 0048 00000000 		.word	StateWhileOn
 5202 004c 002F2004 		.word	69218048
 5203              		.cfi_endproc
 5204              	.LFE14:
 5206              		.section	.text.finish_cpx_entry,"ax",%progbits
 5207              		.align	1
 5208              		.p2align 2,,3
 5209              		.global	finish_cpx_entry
 5210              		.syntax unified
 5211              		.thumb
 5212              		.thumb_func
 5213              		.fpu fpv4-sp-d16
 5215              	finish_cpx_entry:
 5216              	.LVL411:
 5217              	.LFB23:
1196:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5218              		.loc 1 1196 36 is_stmt 1 view -0
 5219              		.cfi_startproc
 5220              		@ args = 0, pretend = 0, frame = 0
 5221              		@ frame_needed = 0, uses_anonymous_args = 0
1201:src/keys.c    **** 
 5222              		.loc 1 1201 2 view .LVU1549
1196:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5223              		.loc 1 1196 36 is_stmt 0 view .LVU1550
 5224 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5225              		.cfi_def_cfa_offset 24
 5226              		.cfi_offset 3, -24
 5227              		.cfi_offset 4, -20
 5228              		.cfi_offset 5, -16
 5229              		.cfi_offset 6, -12
 5230              		.cfi_offset 7, -8
ARM GAS  /tmp/cc8xFAqJ.s 			page 172


 5231              		.cfi_offset 14, -4
1201:src/keys.c    **** 
 5232              		.loc 1 1201 10 view .LVU1551
 5233 0002 2E4E     		ldr	r6, .L585
 5234 0004 3368     		ldr	r3, [r6]
1201:src/keys.c    **** 
 5235              		.loc 1 1201 7 view .LVU1552
 5236 0006 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
1201:src/keys.c    **** 
 5237              		.loc 1 1201 5 view .LVU1553
 5238 000a 12F0060F 		tst	r2, #6
 5239 000e 16D0     		beq	.L569
1213:src/keys.c    **** 	if (IMAG_FLAG) swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 5240              		.loc 1 1213 2 is_stmt 1 view .LVU1554
 5241              	.LBB536:
 5242              	.LBI536:
1189:src/keys.c    **** 	if (CmdLineLength) {
 5243              		.loc 1 1189 13 view .LVU1555
 5244              	.LBB537:
1190:src/keys.c    **** 		State2.state_lift = 0;
 5245              		.loc 1 1190 2 view .LVU1556
1190:src/keys.c    **** 		State2.state_lift = 0;
 5246              		.loc 1 1190 6 is_stmt 0 view .LVU1557
 5247 0010 2B4C     		ldr	r4, .L585+4
1190:src/keys.c    **** 		State2.state_lift = 0;
 5248              		.loc 1 1190 5 view .LVU1558
 5249 0012 217F     		ldrb	r1, [r4, #28]	@ zero_extendqisi2
 5250 0014 0546     		mov	r5, r0
 5251 0016 01BB     		cbnz	r1, .L582
 5252              	.LBE537:
 5253              	.LBE536:
1214:src/keys.c    **** 	CLEAR_REAL;
 5254              		.loc 1 1214 2 is_stmt 1 view .LVU1559
1214:src/keys.c    **** 	CLEAR_REAL;
 5255              		.loc 1 1214 5 is_stmt 0 view .LVU1560
 5256 0018 5207     		lsls	r2, r2, #29
 5257 001a 11D4     		bmi	.L583
 5258              	.LVL412:
 5259              	.L573:
1215:src/keys.c    **** 	CLEAR_IMAG;
 5260              		.loc 1 1215 2 is_stmt 1 view .LVU1561
1216:src/keys.c    **** 
 5261              		.loc 1 1216 2 view .LVU1562
1215:src/keys.c    **** 	CLEAR_IMAG;
 5262              		.loc 1 1215 2 is_stmt 0 view .LVU1563
 5263 001c 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
 5264 0020 22F00602 		bic	r2, r2, #6
 5265 0024 83F8AC27 		strb	r2, [r3, #1964]
1218:src/keys.c    **** 
 5266              		.loc 1 1218 2 is_stmt 1 view .LVU1564
1218:src/keys.c    **** 
 5267              		.loc 1 1218 20 is_stmt 0 view .LVU1565
 5268 0028 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 5269 002a 65F38612 		bfi	r2, r5, #6, #1
 5270              	.LVL413:
1218:src/keys.c    **** 
 5271              		.loc 1 1218 20 view .LVU1566
ARM GAS  /tmp/cc8xFAqJ.s 			page 173


 5272 002e E275     		strb	r2, [r4, #23]
1220:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
 5273              		.loc 1 1220 2 is_stmt 1 view .LVU1567
1220:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
 5274              		.loc 1 1220 21 is_stmt 0 view .LVU1568
 5275 0030 B3F8AC37 		ldrh	r3, [r3, #1964]
1220:src/keys.c    **** 		//copy x, y into j, k - now contain polar form
 5276              		.loc 1 1220 5 view .LVU1569
 5277 0034 03F4C073 		and	r3, r3, #384
 5278 0038 B3F5C07F 		cmp	r3, #384
 5279 003c 19D0     		beq	.L584
 5280              	.L569:
1232:src/keys.c    **** 
 5281              		.loc 1 1232 1 view .LVU1570
 5282 003e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5283              	.LVL414:
 5284              	.L583:
1214:src/keys.c    **** 	CLEAR_REAL;
 5285              		.loc 1 1214 17 is_stmt 1 discriminator 1 view .LVU1571
 5286 0040 6420     		movs	r0, #100
 5287 0042 FFF7FEFF 		bl	get_reg_n
 5288              	.LVL415:
 5289 0046 0746     		mov	r7, r0
 5290 0048 6520     		movs	r0, #101
 5291 004a FFF7FEFF 		bl	get_reg_n
 5292              	.LVL416:
 5293 004e 0146     		mov	r1, r0
 5294 0050 3846     		mov	r0, r7
 5295 0052 FFF7FEFF 		bl	swap_reg
 5296              	.LVL417:
 5297 0056 3368     		ldr	r3, [r6]
 5298 0058 E0E7     		b	.L573
 5299              	.LVL418:
 5300              	.L582:
 5301              	.LBB539:
 5302              	.LBB538:
1191:src/keys.c    **** 		process_cmdline();
 5303              		.loc 1 1191 3 view .LVU1572
1191:src/keys.c    **** 		process_cmdline();
 5304              		.loc 1 1191 21 is_stmt 0 view .LVU1573
 5305 005a E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 5306 005c 6FF38613 		bfc	r3, #6, #1
 5307 0060 E375     		strb	r3, [r4, #23]
1192:src/keys.c    **** 	}
 5308              		.loc 1 1192 3 is_stmt 1 view .LVU1574
 5309 0062 FFF7FEFF 		bl	process_cmdline
 5310              	.LVL419:
1192:src/keys.c    **** 	}
 5311              		.loc 1 1192 3 is_stmt 0 view .LVU1575
 5312 0066 3368     		ldr	r3, [r6]
 5313 0068 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
 5314              	.LBE538:
 5315              	.LBE539:
1214:src/keys.c    **** 	CLEAR_REAL;
 5316              		.loc 1 1214 2 is_stmt 1 view .LVU1576
1214:src/keys.c    **** 	CLEAR_REAL;
 5317              		.loc 1 1214 5 is_stmt 0 view .LVU1577
ARM GAS  /tmp/cc8xFAqJ.s 			page 174


 5318 006c 5207     		lsls	r2, r2, #29
 5319 006e D5D5     		bpl	.L573
 5320 0070 E6E7     		b	.L583
 5321              	.LVL420:
 5322              	.L584:
 5323              	.LBB540:
 5324              	.LBI540:
1196:src/keys.c    **** // called to terminate digit entry before calling a function; an extended version of process_cmdlin
 5325              		.loc 1 1196 6 is_stmt 1 view .LVU1578
 5326              	.LBB541:
1222:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5327              		.loc 1 1222 3 view .LVU1579
 5328 0072 6E20     		movs	r0, #110
 5329 0074 FFF7FEFF 		bl	get_reg_n
 5330              	.LVL421:
 5331 0078 0446     		mov	r4, r0
1222:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5332              		.loc 1 1222 33 is_stmt 0 view .LVU1580
 5333 007a 6420     		movs	r0, #100
 5334 007c FFF7FEFF 		bl	get_reg_n
 5335              	.LVL422:
 5336 0080 0146     		mov	r1, r0
1222:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5337              		.loc 1 1222 3 view .LVU1581
 5338 0082 2046     		mov	r0, r4
 5339 0084 FFF7FEFF 		bl	copyreg
 5340              	.LVL423:
1223:src/keys.c    **** 		//call p2r
 5341              		.loc 1 1223 3 is_stmt 1 view .LVU1582
 5342 0088 6F20     		movs	r0, #111
 5343 008a FFF7FEFF 		bl	get_reg_n
 5344              	.LVL424:
 5345 008e 0446     		mov	r4, r0
1223:src/keys.c    **** 		//call p2r
 5346              		.loc 1 1223 33 is_stmt 0 view .LVU1583
 5347 0090 6520     		movs	r0, #101
 5348 0092 FFF7FEFF 		bl	get_reg_n
 5349              	.LVL425:
 5350 0096 0146     		mov	r1, r0
1223:src/keys.c    **** 		//call p2r
 5351              		.loc 1 1223 3 view .LVU1584
 5352 0098 2046     		mov	r0, r4
 5353 009a FFF7FEFF 		bl	copyreg
 5354              	.LVL426:
1225:src/keys.c    **** 		op_p2r(OP_NOP); // x, y now contain rectangular form
 5355              		.loc 1 1225 18 is_stmt 1 view .LVU1585
1226:src/keys.c    **** #ifdef RP_PREFIX
 5356              		.loc 1 1226 3 view .LVU1586
 5357 009e 0020     		movs	r0, #0
 5358 00a0 FFF7FEFF 		bl	op_p2r
 5359              	.LVL427:
1228:src/keys.c    **** #endif
 5360              		.loc 1 1228 3 view .LVU1587
1228:src/keys.c    **** #endif
 5361              		.loc 1 1228 15 is_stmt 0 view .LVU1588
 5362 00a4 074A     		ldr	r2, .L585+8
1230:src/keys.c    **** 	}
ARM GAS  /tmp/cc8xFAqJ.s 			page 175


 5363              		.loc 1 1230 3 view .LVU1589
 5364 00a6 3368     		ldr	r3, [r6]
1228:src/keys.c    **** #endif
 5365              		.loc 1 1228 15 view .LVU1590
 5366 00a8 0121     		movs	r1, #1
 5367 00aa 1160     		str	r1, [r2]
1230:src/keys.c    **** 	}
 5368              		.loc 1 1230 3 is_stmt 1 view .LVU1591
 5369 00ac 93F8AD27 		ldrb	r2, [r3, #1965]	@ zero_extendqisi2
 5370 00b0 6FF30002 		bfc	r2, #0, #1
 5371 00b4 83F8AD27 		strb	r2, [r3, #1965]
 5372              	.LVL428:
1230:src/keys.c    **** 	}
 5373              		.loc 1 1230 3 is_stmt 0 view .LVU1592
 5374              	.LBE541:
 5375              	.LBE540:
1232:src/keys.c    **** 
 5376              		.loc 1 1232 1 view .LVU1593
 5377 00b8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5378              	.L586:
 5379 00ba 00BF     		.align	2
 5380              	.L585:
 5381 00bc 00000000 		.word	main_ram
 5382 00c0 00000000 		.word	StateWhileOn
 5383 00c4 00000000 		.word	RectPolConv
 5384              		.cfi_endproc
 5385              	.LFE23:
 5387              		.section	.text.stack_begin,"ax",%progbits
 5388              		.align	1
 5389              		.p2align 2,,3
 5390              		.global	stack_begin
 5391              		.syntax unified
 5392              		.thumb
 5393              		.thumb_func
 5394              		.fpu fpv4-sp-d16
 5396              	stack_begin:
 5397              	.LVL429:
 5398              	.LFB25:
1253:src/keys.c    **** 	// Lifts stack if required and stores displaced registers; 
 5399              		.loc 1 1253 33 is_stmt 1 view -0
 5400              		.cfi_startproc
 5401              		@ args = 0, pretend = 0, frame = 0
 5402              		@ frame_needed = 0, uses_anonymous_args = 0
1256:src/keys.c    **** 	if ( State2.state_lift ){
 5403              		.loc 1 1256 2 view .LVU1595
1253:src/keys.c    **** 	// Lifts stack if required and stores displaced registers; 
 5404              		.loc 1 1253 33 is_stmt 0 view .LVU1596
 5405 0000 38B5     		push	{r3, r4, r5, lr}
 5406              		.cfi_def_cfa_offset 16
 5407              		.cfi_offset 3, -16
 5408              		.cfi_offset 4, -12
 5409              		.cfi_offset 5, -8
 5410              		.cfi_offset 14, -4
1256:src/keys.c    **** 	if ( State2.state_lift ){
 5411              		.loc 1 1256 2 view .LVU1597
 5412 0002 2C4B     		ldr	r3, .L594
1257:src/keys.c    **** 		SET_INIT_LIFT;
ARM GAS  /tmp/cc8xFAqJ.s 			page 176


 5413              		.loc 1 1257 7 view .LVU1598
 5414 0004 2C4C     		ldr	r4, .L594+4
1256:src/keys.c    **** 	if ( State2.state_lift ){
 5415              		.loc 1 1256 2 view .LVU1599
 5416 0006 1B68     		ldr	r3, [r3]
 5417 0008 93F8AD27 		ldrb	r2, [r3, #1965]	@ zero_extendqisi2
 5418 000c 42F00102 		orr	r2, r2, #1
 5419 0010 83F8AD27 		strb	r2, [r3, #1965]
1257:src/keys.c    **** 		SET_INIT_LIFT;
 5420              		.loc 1 1257 2 is_stmt 1 view .LVU1600
1257:src/keys.c    **** 		SET_INIT_LIFT;
 5421              		.loc 1 1257 7 is_stmt 0 view .LVU1601
 5422 0014 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
1257:src/keys.c    **** 		SET_INIT_LIFT;
 5423              		.loc 1 1257 5 view .LVU1602
 5424 0016 12F04002 		ands	r2, r2, #64
 5425 001a 26D0     		beq	.L588
1258:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regC_idx));
 5426              		.loc 1 1258 3 is_stmt 1 view .LVU1603
 5427 001c 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
 5428 0020 42F01002 		orr	r2, r2, #16
 5429 0024 83F8AC27 		strb	r2, [r3, #1964]
1259:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5430              		.loc 1 1259 3 view .LVU1604
 5431 0028 6E20     		movs	r0, #110
 5432              	.LVL430:
1259:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5433              		.loc 1 1259 3 is_stmt 0 view .LVU1605
 5434 002a FFF7FEFF 		bl	get_reg_n
 5435              	.LVL431:
 5436 002e 0546     		mov	r5, r0
1259:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5437              		.loc 1 1259 33 view .LVU1606
 5438 0030 6A20     		movs	r0, #106
 5439 0032 FFF7FEFF 		bl	get_reg_n
 5440              	.LVL432:
 5441 0036 0146     		mov	r1, r0
1259:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regD_idx));
 5442              		.loc 1 1259 3 view .LVU1607
 5443 0038 2846     		mov	r0, r5
 5444 003a FFF7FEFF 		bl	copyreg
 5445              	.LVL433:
1260:src/keys.c    **** 		lift();
 5446              		.loc 1 1260 3 is_stmt 1 view .LVU1608
 5447 003e 6F20     		movs	r0, #111
 5448 0040 FFF7FEFF 		bl	get_reg_n
 5449              	.LVL434:
 5450 0044 0546     		mov	r5, r0
1260:src/keys.c    **** 		lift();
 5451              		.loc 1 1260 33 is_stmt 0 view .LVU1609
 5452 0046 6B20     		movs	r0, #107
 5453 0048 FFF7FEFF 		bl	get_reg_n
 5454              	.LVL435:
 5455 004c 0146     		mov	r1, r0
1260:src/keys.c    **** 		lift();
 5456              		.loc 1 1260 3 view .LVU1610
 5457 004e 2846     		mov	r0, r5
ARM GAS  /tmp/cc8xFAqJ.s 			page 177


 5458 0050 FFF7FEFF 		bl	copyreg
 5459              	.LVL436:
1261:src/keys.c    **** 		zero_X();
 5460              		.loc 1 1261 3 is_stmt 1 view .LVU1611
 5461 0054 FFF7FEFF 		bl	lift
 5462              	.LVL437:
1262:src/keys.c    **** 		lift();
 5463              		.loc 1 1262 3 view .LVU1612
 5464 0058 FFF7FEFF 		bl	zero_X
 5465              	.LVL438:
1263:src/keys.c    **** 		State2.state_lift = 0;
 5466              		.loc 1 1263 3 view .LVU1613
 5467 005c FFF7FEFF 		bl	lift
 5468              	.LVL439:
1264:src/keys.c    **** 	}
 5469              		.loc 1 1264 3 view .LVU1614
1264:src/keys.c    **** 	}
 5470              		.loc 1 1264 21 is_stmt 0 view .LVU1615
 5471 0060 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 5472 0062 6FF38613 		bfc	r3, #6, #1
 5473 0066 E375     		strb	r3, [r4, #23]
 5474              	.L587:
1273:src/keys.c    **** 
 5475              		.loc 1 1273 1 view .LVU1616
 5476 0068 38BD     		pop	{r3, r4, r5, pc}
 5477              	.LVL440:
 5478              	.L588:
1267:src/keys.c    **** 		copyreg (get_reg_n(regJ_idx), get_reg_n(regX_idx));
 5479              		.loc 1 1267 3 is_stmt 1 view .LVU1617
 5480 006a 93F8AC17 		ldrb	r1, [r3, #1964]	@ zero_extendqisi2
 5481 006e 62F30411 		bfi	r1, r2, #4, #1
 5482 0072 83F8AC17 		strb	r1, [r3, #1964]
1268:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5483              		.loc 1 1268 3 view .LVU1618
 5484 0076 0546     		mov	r5, r0
 5485 0078 6E20     		movs	r0, #110
 5486              	.LVL441:
1268:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5487              		.loc 1 1268 3 is_stmt 0 view .LVU1619
 5488 007a FFF7FEFF 		bl	get_reg_n
 5489              	.LVL442:
 5490 007e 0446     		mov	r4, r0
1268:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5491              		.loc 1 1268 33 view .LVU1620
 5492 0080 6420     		movs	r0, #100
 5493 0082 FFF7FEFF 		bl	get_reg_n
 5494              	.LVL443:
 5495 0086 0146     		mov	r1, r0
1268:src/keys.c    **** 		copyreg (get_reg_n(regK_idx), get_reg_n(regY_idx));
 5496              		.loc 1 1268 3 view .LVU1621
 5497 0088 2046     		mov	r0, r4
 5498 008a FFF7FEFF 		bl	copyreg
 5499              	.LVL444:
1269:src/keys.c    **** 		zero_X();
 5500              		.loc 1 1269 3 is_stmt 1 view .LVU1622
 5501 008e 6F20     		movs	r0, #111
 5502 0090 FFF7FEFF 		bl	get_reg_n
ARM GAS  /tmp/cc8xFAqJ.s 			page 178


 5503              	.LVL445:
 5504 0094 0446     		mov	r4, r0
1269:src/keys.c    **** 		zero_X();
 5505              		.loc 1 1269 33 is_stmt 0 view .LVU1623
 5506 0096 6520     		movs	r0, #101
 5507 0098 FFF7FEFF 		bl	get_reg_n
 5508              	.LVL446:
 5509 009c 0146     		mov	r1, r0
1269:src/keys.c    **** 		zero_X();
 5510              		.loc 1 1269 3 view .LVU1624
 5511 009e 2046     		mov	r0, r4
 5512 00a0 FFF7FEFF 		bl	copyreg
 5513              	.LVL447:
1270:src/keys.c    **** 		if ( zero_y ) zero_Y();
 5514              		.loc 1 1270 3 is_stmt 1 view .LVU1625
 5515 00a4 FFF7FEFF 		bl	zero_X
 5516              	.LVL448:
1271:src/keys.c    **** 	}
 5517              		.loc 1 1271 3 view .LVU1626
1271:src/keys.c    **** 	}
 5518              		.loc 1 1271 6 is_stmt 0 view .LVU1627
 5519 00a8 002D     		cmp	r5, #0
 5520 00aa DDD0     		beq	.L587
1271:src/keys.c    **** 	}
 5521              		.loc 1 1271 17 is_stmt 1 discriminator 1 view .LVU1628
1273:src/keys.c    **** 
 5522              		.loc 1 1273 1 is_stmt 0 discriminator 1 view .LVU1629
 5523 00ac BDE83840 		pop	{r3, r4, r5, lr}
 5524              		.cfi_restore 14
 5525              		.cfi_restore 5
 5526              		.cfi_restore 4
 5527              		.cfi_restore 3
 5528              		.cfi_def_cfa_offset 0
 5529              	.LVL449:
1271:src/keys.c    **** 	}
 5530              		.loc 1 1271 17 discriminator 1 view .LVU1630
 5531 00b0 FFF7FEBF 		b	zero_Y
 5532              	.LVL450:
 5533              	.L595:
 5534              		.align	2
 5535              	.L594:
 5536 00b4 00000000 		.word	main_ram
 5537 00b8 00000000 		.word	StateWhileOn
 5538              		.cfi_endproc
 5539              	.LFE25:
 5541              		.section	.text.current_catalogue_max,"ax",%progbits
 5542              		.align	1
 5543              		.p2align 2,,3
 5544              		.global	current_catalogue_max
 5545              		.syntax unified
 5546              		.thumb
 5547              		.thumb_func
 5548              		.fpu fpv4-sp-d16
 5550              	current_catalogue_max:
 5551              	.LFB44:
2455:src/keys.c    **** 	// A quick table of catalogue sizes
 5552              		.loc 1 2455 33 is_stmt 1 view -0
ARM GAS  /tmp/cc8xFAqJ.s 			page 179


 5553              		.cfi_startproc
 5554              		@ args = 0, pretend = 0, frame = 0
 5555              		@ frame_needed = 0, uses_anonymous_args = 0
 5556              		@ link register save eliminated.
2458:src/keys.c    **** 	{
 5557              		.loc 1 2458 2 view .LVU1632
2489:src/keys.c    **** #endif
 5558              		.loc 1 2489 2 view .LVU1633
2489:src/keys.c    **** #endif
 5559              		.loc 1 2489 31 is_stmt 0 view .LVU1634
 5560 0000 024B     		ldr	r3, .L597
2489:src/keys.c    **** #endif
 5561              		.loc 1 2489 24 view .LVU1635
 5562 0002 034A     		ldr	r2, .L597+4
2489:src/keys.c    **** #endif
 5563              		.loc 1 2489 31 view .LVU1636
 5564 0004 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2491:src/keys.c    **** 
 5565              		.loc 1 2491 1 view .LVU1637
 5566 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 5567 0008 7047     		bx	lr
 5568              	.L598:
 5569 000a 00BF     		.align	2
 5570              	.L597:
 5571 000c 00000000 		.word	StateWhileOn
 5572 0010 00000000 		.word	.LANCHOR8
 5573              		.cfi_endproc
 5574              	.LFE44:
 5576              		.section	.text.current_catalogue,"ax",%progbits
 5577              		.align	1
 5578              		.p2align 2,,3
 5579              		.global	current_catalogue
 5580              		.syntax unified
 5581              		.thumb
 5582              		.thumb_func
 5583              		.fpu fpv4-sp-d16
 5585              	current_catalogue:
 5586              	.LVL451:
 5587              	.LFB46:
2504:src/keys.c    **** 	// A quick table of catalogue tables
 5588              		.loc 1 2504 33 is_stmt 1 view -0
 5589              		.cfi_startproc
 5590              		@ args = 0, pretend = 0, frame = 0
 5591              		@ frame_needed = 0, uses_anonymous_args = 0
 5592              		@ link register save eliminated.
2507:src/keys.c    **** 	{
 5593              		.loc 1 2507 2 view .LVU1639
2534:src/keys.c    **** 	unsigned int c = State2.catalogue;
 5594              		.loc 1 2534 2 view .LVU1640
2535:src/keys.c    **** 	int m, i;
 5595              		.loc 1 2535 2 view .LVU1641
2535:src/keys.c    **** 	int m, i;
 5596              		.loc 1 2535 25 is_stmt 0 view .LVU1642
 5597 0000 314A     		ldr	r2, .L626
2535:src/keys.c    **** 	int m, i;
 5598              		.loc 1 2535 15 view .LVU1643
 5599 0002 937B     		ldrb	r3, [r2, #14]	@ zero_extendqisi2
ARM GAS  /tmp/cc8xFAqJ.s 			page 180


 5600              	.LVL452:
2536:src/keys.c    **** 	unsigned p, q;
 5601              		.loc 1 2536 2 is_stmt 1 view .LVU1644
2537:src/keys.c    **** 
 5602              		.loc 1 2537 2 view .LVU1645
2539:src/keys.c    **** 		if (n == OP_ZERO)
 5603              		.loc 1 2539 2 view .LVU1646
2539:src/keys.c    **** 		if (n == OP_ZERO)
 5604              		.loc 1 2539 5 is_stmt 0 view .LVU1647
 5605 0004 102B     		cmp	r3, #16
 5606 0006 39D0     		beq	.L620
2544:src/keys.c    **** 		if (n == OP_ZERO)
 5607              		.loc 1 2544 2 is_stmt 1 view .LVU1648
2544:src/keys.c    **** 		if (n == OP_ZERO)
 5608              		.loc 1 2544 5 is_stmt 0 view .LVU1649
 5609 0008 112B     		cmp	r3, #17
 5610 000a 32D0     		beq	.L621
2549:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 5611              		.loc 1 2549 2 is_stmt 1 view .LVU1650
2549:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 5612              		.loc 1 2549 5 is_stmt 0 view .LVU1651
 5613 000c 122B     		cmp	r3, #18
 5614 000e 45D0     		beq	.L622
2562:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 5615              		.loc 1 2562 2 is_stmt 1 view .LVU1652
2562:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 5616              		.loc 1 2562 5 is_stmt 0 view .LVU1653
 5617 0010 0E2B     		cmp	r3, #14
 5618 0012 38D0     		beq	.L623
2565:src/keys.c    **** 
 5619              		.loc 1 2565 3 is_stmt 1 view .LVU1654
2565:src/keys.c    **** 
 5620              		.loc 1 2565 7 is_stmt 0 view .LVU1655
 5621 0014 2D4A     		ldr	r2, .L626+4
2567:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5622              		.loc 1 2567 35 view .LVU1656
 5623 0016 A3F10B01 		sub	r1, r3, #11
2567:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5624              		.loc 1 2567 5 view .LVU1657
 5625 001a 0429     		cmp	r1, #4
2565:src/keys.c    **** 
 5626              		.loc 1 2565 7 view .LVU1658
 5627 001c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 5628              	.LVL453:
2567:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5629              		.loc 1 2567 2 is_stmt 1 view .LVU1659
2567:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 5630              		.loc 1 2567 5 is_stmt 0 view .LVU1660
 5631 0020 38D9     		bls	.L606
2570:src/keys.c    **** 		return OP_NIL | OP_NOP;
 5632              		.loc 1 2570 2 is_stmt 1 view .LVU1661
2570:src/keys.c    **** 		return OP_NIL | OP_NOP;
 5633              		.loc 1 2570 5 is_stmt 0 view .LVU1662
 5634 0022 142B     		cmp	r3, #20
 5635 0024 4DD8     		bhi	.L614
2574:src/keys.c    **** 	p = cat[0];
 5636              		.loc 1 2574 2 is_stmt 1 view .LVU1663
ARM GAS  /tmp/cc8xFAqJ.s 			page 181


2504:src/keys.c    **** 	// A quick table of catalogue tables
 5637              		.loc 1 2504 33 is_stmt 0 view .LVU1664
 5638 0026 10B4     		push	{r4}
 5639              		.cfi_def_cfa_offset 4
 5640              		.cfi_offset 4, -4
2574:src/keys.c    **** 	p = cat[0];
 5641              		.loc 1 2574 11 view .LVU1665
 5642 0028 00EBA001 		add	r1, r0, r0, asr #2
2574:src/keys.c    **** 	p = cat[0];
 5643              		.loc 1 2574 6 view .LVU1666
 5644 002c 5318     		adds	r3, r2, r1
 5645              	.LVL454:
2575:src/keys.c    **** 	q = cat[1];
 5646              		.loc 1 2575 2 is_stmt 1 view .LVU1667
2576:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 5647              		.loc 1 2576 2 view .LVU1668
2577:src/keys.c    **** 
 5648              		.loc 1 2577 2 view .LVU1669
2577:src/keys.c    **** 
 5649              		.loc 1 2577 35 is_stmt 0 view .LVU1670
 5650 002e 4000     		lsls	r0, r0, #1
 5651              	.LVL455:
2575:src/keys.c    **** 	q = cat[1];
 5652              		.loc 1 2575 4 view .LVU1671
 5653 0030 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 5654              	.LVL456:
2576:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 5655              		.loc 1 2576 4 view .LVU1672
 5656 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5657              	.LVL457:
2576:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 5658              		.loc 1 2576 4 view .LVU1673
 5659 0034 2649     		ldr	r1, .L626+8
 5660              	.LVL458:
2577:src/keys.c    **** 
 5661              		.loc 1 2577 54 view .LVU1674
 5662 0036 C443     		mvns	r4, r0
2577:src/keys.c    **** 
 5663              		.loc 1 2577 35 view .LVU1675
 5664 0038 00F00600 		and	r0, r0, #6
2577:src/keys.c    **** 
 5665              		.loc 1 2577 54 view .LVU1676
 5666 003c 04F00604 		and	r4, r4, #6
2577:src/keys.c    **** 
 5667              		.loc 1 2577 24 view .LVU1677
 5668 0040 0230     		adds	r0, r0, #2
2577:src/keys.c    **** 
 5669              		.loc 1 2577 48 view .LVU1678
 5670 0042 E340     		lsrs	r3, r3, r4
 5671              	.LVL459:
2577:src/keys.c    **** 
 5672              		.loc 1 2577 18 view .LVU1679
 5673 0044 02FA00F0 		lsl	r0, r2, r0
2577:src/keys.c    **** 
 5674              		.loc 1 2577 43 view .LVU1680
 5675 0048 1843     		orrs	r0, r0, r3
2577:src/keys.c    **** 
ARM GAS  /tmp/cc8xFAqJ.s 			page 182


 5676              		.loc 1 2577 4 view .LVU1681
 5677 004a C0F30903 		ubfx	r3, r0, #0, #10
 5678              	.LVL460:
2580:src/keys.c    **** 		if (m < opcode_breaks[i])
 5679              		.loc 1 2580 2 is_stmt 1 view .LVU1682
2580:src/keys.c    **** 		if (m < opcode_breaks[i])
 5680              		.loc 1 2580 12 view .LVU1683
2577:src/keys.c    **** 
 5681              		.loc 1 2577 4 is_stmt 0 view .LVU1684
 5682 004e 3422     		movs	r2, #52
 5683              	.LVL461:
2580:src/keys.c    **** 		if (m < opcode_breaks[i])
 5684              		.loc 1 2580 8 view .LVU1685
 5685 0050 0020     		movs	r0, #0
 5686 0052 01E0     		b	.L610
 5687              	.LVL462:
 5688              	.L625:
2580:src/keys.c    **** 		if (m < opcode_breaks[i])
 5689              		.loc 1 2580 8 view .LVU1686
 5690 0054 11F8012B 		ldrb	r2, [r1], #1	@ zero_extendqisi2
 5691              	.LVL463:
 5692              	.L610:
2581:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 5693              		.loc 1 2581 3 is_stmt 1 view .LVU1687
2583:src/keys.c    **** 	}
 5694              		.loc 1 2583 3 view .LVU1688
2581:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 5695              		.loc 1 2581 6 is_stmt 0 view .LVU1689
 5696 0058 9A42     		cmp	r2, r3
 5697 005a 2FDC     		bgt	.L624
2580:src/keys.c    **** 		if (m < opcode_breaks[i])
 5698              		.loc 1 2580 25 discriminator 2 view .LVU1690
 5699 005c 0130     		adds	r0, r0, #1
 5700              	.LVL464:
2580:src/keys.c    **** 		if (m < opcode_breaks[i])
 5701              		.loc 1 2580 2 discriminator 2 view .LVU1691
 5702 005e 0728     		cmp	r0, #7
2583:src/keys.c    **** 	}
 5703              		.loc 1 2583 5 discriminator 2 view .LVU1692
 5704 0060 A3EB0203 		sub	r3, r3, r2
 5705              	.LVL465:
2580:src/keys.c    **** 		if (m < opcode_breaks[i])
 5706              		.loc 1 2580 24 is_stmt 1 discriminator 2 view .LVU1693
2580:src/keys.c    **** 		if (m < opcode_breaks[i])
 5707              		.loc 1 2580 12 discriminator 2 view .LVU1694
2580:src/keys.c    **** 		if (m < opcode_breaks[i])
 5708              		.loc 1 2580 2 is_stmt 0 discriminator 2 view .LVU1695
 5709 0064 F6D1     		bne	.L625
2585:src/keys.c    **** }
 5710              		.loc 1 2585 2 is_stmt 1 view .LVU1696
2585:src/keys.c    **** }
 5711              		.loc 1 2585 9 is_stmt 0 view .LVU1697
 5712 0066 03F12000 		add	r0, r3, #32
 5713              	.LVL466:
2585:src/keys.c    **** }
 5714              		.loc 1 2585 9 view .LVU1698
 5715 006a 0002     		lsls	r0, r0, #8
ARM GAS  /tmp/cc8xFAqJ.s 			page 183


 5716              	.L599:
2586:src/keys.c    **** 
 5717              		.loc 1 2586 1 view .LVU1699
 5718 006c 5DF8044B 		ldr	r4, [sp], #4
 5719              		.cfi_restore 4
 5720              		.cfi_def_cfa_offset 0
 5721 0070 7047     		bx	lr
 5722              	.LVL467:
 5723              	.L621:
2545:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 5724              		.loc 1 2545 3 is_stmt 1 view .LVU1700
2545:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 5725              		.loc 1 2545 6 is_stmt 0 view .LVU1701
 5726 0072 4B28     		cmp	r0, #75
 5727 0074 1FD0     		beq	.L612
2547:src/keys.c    **** 	}
 5728              		.loc 1 2547 3 is_stmt 1 view .LVU1702
2547:src/keys.c    **** 	}
 5729              		.loc 1 2547 10 is_stmt 0 view .LVU1703
 5730 0076 40F40450 		orr	r0, r0, #8448
 5731              	.LVL468:
2547:src/keys.c    **** 	}
 5732              		.loc 1 2547 10 view .LVU1704
 5733 007a 7047     		bx	lr
 5734              	.LVL469:
 5735              	.L620:
2540:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 5736              		.loc 1 2540 3 is_stmt 1 view .LVU1705
2540:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 5737              		.loc 1 2540 6 is_stmt 0 view .LVU1706
 5738 007c 4B28     		cmp	r0, #75
 5739 007e 17D0     		beq	.L611
2542:src/keys.c    **** 	}
 5740              		.loc 1 2542 3 is_stmt 1 view .LVU1707
2542:src/keys.c    **** 	}
 5741              		.loc 1 2542 10 is_stmt 0 view .LVU1708
 5742 0080 40F40050 		orr	r0, r0, #8192
 5743              	.LVL470:
2542:src/keys.c    **** 	}
 5744              		.loc 1 2542 10 view .LVU1709
 5745 0084 7047     		bx	lr
 5746              	.LVL471:
 5747              	.L623:
2562:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 5748              		.loc 1 2562 35 discriminator 1 view .LVU1710
 5749 0086 917D     		ldrb	r1, [r2, #22]	@ zero_extendqisi2
2563:src/keys.c    **** 	else
 5750              		.loc 1 2563 7 discriminator 1 view .LVU1711
 5751 0088 124B     		ldr	r3, .L626+12
 5752              	.LVL472:
2563:src/keys.c    **** 	else
 5753              		.loc 1 2563 7 discriminator 1 view .LVU1712
 5754 008a 134A     		ldr	r2, .L626+16
 5755              	.LVL473:
2563:src/keys.c    **** 	else
 5756              		.loc 1 2563 7 discriminator 1 view .LVU1713
 5757 008c 11F0100F 		tst	r1, #16
ARM GAS  /tmp/cc8xFAqJ.s 			page 184


 5758 0090 18BF     		it	ne
 5759 0092 1A46     		movne	r2, r3
 5760              	.L606:
 5761              	.LVL474:
2568:src/keys.c    **** 	}
 5762              		.loc 1 2568 3 is_stmt 1 view .LVU1714
 5763              	.LBB542:
 5764              	.LBI542:
2497:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
 5765              		.loc 1 2497 15 view .LVU1715
 5766              	.LBB543:
2498:src/keys.c    **** }
 5767              		.loc 1 2498 2 view .LVU1716
2498:src/keys.c    **** }
 5768              		.loc 1 2498 9 is_stmt 0 view .LVU1717
 5769 0094 105C     		ldrb	r0, [r2, r0]	@ zero_extendqisi2
 5770              	.LVL475:
2498:src/keys.c    **** }
 5771              		.loc 1 2498 9 view .LVU1718
 5772 0096 40F48840 		orr	r0, r0, #17408
 5773              	.LVL476:
2498:src/keys.c    **** }
 5774              		.loc 1 2498 9 view .LVU1719
 5775              	.LBE543:
 5776              	.LBE542:
2568:src/keys.c    **** 	}
 5777              		.loc 1 2568 10 view .LVU1720
 5778 009a 7047     		bx	lr
 5779              	.LVL477:
 5780              	.L622:
 5781              	.LBB544:
2550:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 5782              		.loc 1 2550 3 is_stmt 1 view .LVU1721
2550:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 5783              		.loc 1 2550 33 is_stmt 0 view .LVU1722
 5784 009c 0F4B     		ldr	r3, .L626+20
 5785              	.LVL478:
2550:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 5786              		.loc 1 2550 13 view .LVU1723
 5787 009e 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 5788              	.LVL479:
2551:src/keys.c    **** 			// Monadic conversion routine
 5789              		.loc 1 2551 3 is_stmt 1 view .LVU1724
2551:src/keys.c    **** 			// Monadic conversion routine
 5790              		.loc 1 2551 6 is_stmt 0 view .LVU1725
 5791 00a0 5728     		cmp	r0, #87
2553:src/keys.c    **** 		else
 5792              		.loc 1 2553 4 is_stmt 1 view .LVU1726
2553:src/keys.c    **** 		else
 5793              		.loc 1 2553 25 is_stmt 0 view .LVU1727
 5794 00a2 C6BF     		itte	gt
 5795 00a4 5838     		subgt	r0, r0, #88
 5796              	.LVL480:
2553:src/keys.c    **** 		else
 5797              		.loc 1 2553 18 view .LVU1728
 5798 00a6 40F40070 		orrgt	r0, r0, #512
2555:src/keys.c    **** 	}
ARM GAS  /tmp/cc8xFAqJ.s 			page 185


 5799              		.loc 1 2555 4 is_stmt 1 view .LVU1729
2555:src/keys.c    **** 	}
 5800              		.loc 1 2555 11 is_stmt 0 view .LVU1730
 5801 00aa 40F40C40 		orrle	r0, r0, #35840
 5802 00ae 7047     		bx	lr
 5803              	.LVL481:
 5804              	.L611:
2555:src/keys.c    **** 	}
 5805              		.loc 1 2555 11 view .LVU1731
 5806              	.LBE544:
2541:src/keys.c    **** 		return CONST(n);
 5807              		.loc 1 2541 11 view .LVU1732
 5808 00b0 4FF42740 		mov	r0, #42752
 5809              	.LVL482:
2541:src/keys.c    **** 		return CONST(n);
 5810              		.loc 1 2541 11 view .LVU1733
 5811 00b4 7047     		bx	lr
 5812              	.LVL483:
 5813              	.L612:
2546:src/keys.c    **** 		return CONST_CMPLX(n);
 5814              		.loc 1 2546 11 view .LVU1734
 5815 00b6 4FF42840 		mov	r0, #43008
 5816              	.LVL484:
2546:src/keys.c    **** 		return CONST_CMPLX(n);
 5817              		.loc 1 2546 11 view .LVU1735
 5818 00ba 7047     		bx	lr
 5819              	.LVL485:
 5820              	.L624:
 5821              		.cfi_def_cfa_offset 4
 5822              		.cfi_offset 4, -4
2582:src/keys.c    **** 		m -= opcode_breaks[i];
 5823              		.loc 1 2582 4 is_stmt 1 view .LVU1736
2582:src/keys.c    **** 		m -= opcode_breaks[i];
 5824              		.loc 1 2582 29 is_stmt 0 view .LVU1737
 5825 00bc 03EB0020 		add	r0, r3, r0, lsl #8
 5826              	.LVL486:
2582:src/keys.c    **** 		m -= opcode_breaks[i];
 5827              		.loc 1 2582 29 view .LVU1738
 5828 00c0 D4E7     		b	.L599
 5829              	.LVL487:
 5830              	.L614:
 5831              		.cfi_def_cfa_offset 0
 5832              		.cfi_restore 4
2571:src/keys.c    **** 
 5833              		.loc 1 2571 10 view .LVU1739
 5834 00c2 4FF48070 		mov	r0, #256
 5835              	.LVL488:
2586:src/keys.c    **** 
 5836              		.loc 1 2586 1 view .LVU1740
 5837 00c6 7047     		bx	lr
 5838              	.L627:
 5839              		.align	2
 5840              	.L626:
 5841 00c8 00000000 		.word	StateWhileOn
 5842 00cc 00000000 		.word	.LANCHOR12
 5843 00d0 01000000 		.word	.LANCHOR13+1
 5844 00d4 00000000 		.word	.LANCHOR10
ARM GAS  /tmp/cc8xFAqJ.s 			page 186


 5845 00d8 00000000 		.word	.LANCHOR9
 5846 00dc 00000000 		.word	.LANCHOR11
 5847              		.cfi_endproc
 5848              	.LFE46:
 5850              		.section	.text.process_catalogue,"ax",%progbits
 5851              		.align	1
 5852              		.p2align 2,,3
 5853              		.syntax unified
 5854              		.thumb
 5855              		.thumb_func
 5856              		.fpu fpv4-sp-d16
 5858              	process_catalogue:
 5859              	.LVL489:
 5860              	.LFB48:
2600:src/keys.c    ****    int pos = State.catpos;
 5861              		.loc 1 2600 93 is_stmt 1 view -0
 5862              		.cfi_startproc
 5863              		@ args = 0, pretend = 0, frame = 16
 5864              		@ frame_needed = 0, uses_anonymous_args = 0
2600:src/keys.c    ****    int pos = State.catpos;
 5865              		.loc 1 2600 93 is_stmt 0 view .LVU1742
 5866 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5867              		.cfi_def_cfa_offset 36
 5868              		.cfi_offset 4, -36
 5869              		.cfi_offset 5, -32
 5870              		.cfi_offset 6, -28
 5871              		.cfi_offset 7, -24
 5872              		.cfi_offset 8, -20
 5873              		.cfi_offset 9, -16
 5874              		.cfi_offset 10, -12
 5875              		.cfi_offset 11, -8
 5876              		.cfi_offset 14, -4
2601:src/keys.c    ****    int ch;
 5877              		.loc 1 2601 14 view .LVU1743
 5878 0004 DFF8EC92 		ldr	r9, .L742+24
 5879              	.LBB545:
 5880              	.LBB546:
2489:src/keys.c    **** #endif
 5881              		.loc 1 2489 31 view .LVU1744
 5882 0008 B44F     		ldr	r7, .L742
 5883              	.LBE546:
 5884              	.LBE545:
2601:src/keys.c    ****    int ch;
 5885              		.loc 1 2601 14 view .LVU1745
 5886 000a D9F80040 		ldr	r4, [r9]
 5887              	.LBB551:
 5888              	.LBB547:
2489:src/keys.c    **** #endif
 5889              		.loc 1 2489 31 view .LVU1746
 5890 000e 97F80EA0 		ldrb	r10, [r7, #14]	@ zero_extendqisi2
 5891              	.LBE547:
 5892              	.LBE551:
2601:src/keys.c    ****    int ch;
 5893              		.loc 1 2601 19 view .LVU1747
 5894 0012 B4F8DC57 		ldrh	r5, [r4, #2012]
 5895              	.LBB552:
 5896              	.LBB548:
ARM GAS  /tmp/cc8xFAqJ.s 			page 187


2489:src/keys.c    **** #endif
 5897              		.loc 1 2489 24 view .LVU1748
 5898 0016 B24B     		ldr	r3, .L742+4
 5899              	.LBE548:
 5900              	.LBE552:
2601:src/keys.c    ****    int ch;
 5901              		.loc 1 2601 4 is_stmt 1 view .LVU1749
2600:src/keys.c    ****    int pos = State.catpos;
 5902              		.loc 1 2600 93 is_stmt 0 view .LVU1750
 5903 0018 85B0     		sub	sp, sp, #20
 5904              		.cfi_def_cfa_offset 56
 5905              	.LBB553:
 5906              	.LBB549:
2489:src/keys.c    **** #endif
 5907              		.loc 1 2489 24 view .LVU1751
 5908 001a 13F80A80 		ldrb	r8, [r3, r10]	@ zero_extendqisi2
 5909              	.LBE549:
 5910              	.LBE553:
2600:src/keys.c    ****    int pos = State.catpos;
 5911              		.loc 1 2600 93 view .LVU1752
 5912 001e 1646     		mov	r6, r2
2601:src/keys.c    ****    int ch;
 5913              		.loc 1 2601 8 view .LVU1753
 5914 0020 C5F34615 		ubfx	r5, r5, #5, #7
 5915              	.LVL490:
2602:src/keys.c    ****    const int ctmax = current_catalogue_max();
 5916              		.loc 1 2602 4 is_stmt 1 view .LVU1754
2603:src/keys.c    ****    const enum catalogues cat = (enum catalogues) State2.catalogue;
 5917              		.loc 1 2603 4 view .LVU1755
 5918              	.LBB554:
 5919              	.LBI545:
2455:src/keys.c    **** 	// A quick table of catalogue sizes
 5920              		.loc 1 2455 5 view .LVU1756
 5921              	.LBB550:
2458:src/keys.c    **** 	{
 5922              		.loc 1 2458 2 view .LVU1757
2489:src/keys.c    **** #endif
 5923              		.loc 1 2489 2 view .LVU1758
2489:src/keys.c    **** #endif
 5924              		.loc 1 2489 2 is_stmt 0 view .LVU1759
 5925              	.LBE550:
 5926              	.LBE554:
2604:src/keys.c    **** 
 5927              		.loc 1 2604 4 is_stmt 1 view .LVU1760
2606:src/keys.c    ****      switch (c) {
 5928              		.loc 1 2606 4 view .LVU1761
2606:src/keys.c    ****      switch (c) {
 5929              		.loc 1 2606 7 is_stmt 0 view .LVU1762
 5930 0024 0029     		cmp	r1, #0
 5931 0026 65D0     		beq	.L727
2667:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
 5932              		.loc 1 2667 11 is_stmt 1 view .LVU1763
2667:src/keys.c    ****      if (cat == CATALOGUE_CONV && c == K01) {
 5933              		.loc 1 2667 14 is_stmt 0 view .LVU1764
 5934 0028 0129     		cmp	r1, #1
 5935 002a 00F0ED80 		beq	.L728
2701:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
ARM GAS  /tmp/cc8xFAqJ.s 			page 188


 5936              		.loc 1 2701 11 is_stmt 1 view .LVU1765
2701:src/keys.c    ****      if (c == K24 && cat == CATALOGUE_SUMS) {
 5937              		.loc 1 2701 14 is_stmt 0 view .LVU1766
 5938 002e 0229     		cmp	r1, #2
 5939 0030 00F00B81 		beq	.L729
 5940              	.LVL491:
 5941              	.L664:
 5942              	.LBB555:
 5943              	.LBB556:
 491:src/keys.c    **** }
 5944              		.loc 1 491 2 is_stmt 1 view .LVU1767
 5945              	.LBB557:
 5946              	.LBI557:
 131:src/keys.c    **** {
 5947              		.loc 1 131 12 view .LVU1768
 5948              	.LBB558:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 5949              		.loc 1 133 2 view .LVU1769
 143:src/keys.c    **** }
 5950              		.loc 1 143 2 view .LVU1770
 143:src/keys.c    **** }
 5951              		.loc 1 143 23 is_stmt 0 view .LVU1771
 5952 0034 AB4B     		ldr	r3, .L742+8
 5953              	.LBE558:
 5954              	.LBE557:
 491:src/keys.c    **** }
 5955              		.loc 1 491 49 view .LVU1772
 5956 0036 AC4A     		ldr	r2, .L742+12
 5957              	.LBB560:
 5958              	.LBB559:
 143:src/keys.c    **** }
 5959              		.loc 1 143 23 view .LVU1773
 5960 0038 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 5961              	.LBE559:
 5962              	.LBE560:
 491:src/keys.c    **** }
 5963              		.loc 1 491 49 view .LVU1774
 5964 003a 03EB4303 		add	r3, r3, r3, lsl #1
 5965 003e 02EB4303 		add	r3, r2, r3, lsl #1
 5966              	.LBE556:
 5967              	.LBE555:
 5968              	.LBB564:
 5969              	.LBB565:
 5970              	.LBB566:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5971              		.loc 1 106 16 view .LVU1775
 5972 0042 0025     		movs	r5, #0
 5973              	.LVL492:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5974              		.loc 1 106 16 view .LVU1776
 5975              	.LBE566:
 5976              	.LBE565:
 5977              	.LBE564:
2711:src/keys.c    ****    reset_shift();
 5978              		.loc 1 2711 9 view .LVU1777
 5979 0044 585C     		ldrb	r0, [r3, r1]	@ zero_extendqisi2
 5980              	.LVL493:
ARM GAS  /tmp/cc8xFAqJ.s 			page 189


2711:src/keys.c    ****    reset_shift();
 5981              		.loc 1 2711 9 view .LVU1778
 5982 0046 FFF7FEFF 		bl	remap_chars
 5983              	.LVL494:
2711:src/keys.c    ****    reset_shift();
 5984              		.loc 1 2711 9 view .LVU1779
 5985 004a 0446     		mov	r4, r0
 5986              	.LVL495:
2712:src/keys.c    ****    if (ch == '\0')
 5987              		.loc 1 2712 4 is_stmt 1 view .LVU1780
 5988              	.LBB571:
 5989              	.LBI564:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 5990              		.loc 1 114 13 view .LVU1781
 5991              	.LBE571:
 115:src/keys.c    **** }
 5992              		.loc 1 115 2 view .LVU1782
 5993              	.LBB572:
 5994              	.LBB570:
 5995              	.LBI565:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 5996              		.loc 1 104 20 view .LVU1783
 5997              	.LBB569:
 105:src/keys.c    **** 	State2.shifts = shift;
 5998              		.loc 1 105 2 view .LVU1784
 5999              	.LBB567:
 6000              	.LBI567:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 6001              		.loc 1 96 13 view .LVU1785
 6002              	.LBB568:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 6003              		.loc 1 97 2 view .LVU1786
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 6004              		.loc 1 97 18 is_stmt 0 view .LVU1787
 6005 004c FFF7FEFF 		bl	shift_down
 6006              	.LVL496:
  98:src/keys.c    **** }
 6007              		.loc 1 98 2 is_stmt 1 view .LVU1788
 6008              	.LBE568:
 6009              	.LBE567:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 6010              		.loc 1 106 2 view .LVU1789
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 6011              		.loc 1 106 16 is_stmt 0 view .LVU1790
 6012 0050 3D74     		strb	r5, [r7, #16]
 108:src/keys.c    **** }
 6013              		.loc 1 108 2 is_stmt 1 view .LVU1791
 6014              	.LVL497:
 108:src/keys.c    **** }
 6015              		.loc 1 108 2 is_stmt 0 view .LVU1792
 6016              	.LBE569:
 6017              	.LBE570:
 6018              	.LBE572:
2713:src/keys.c    ****      return STATE_UNFINISHED;
 6019              		.loc 1 2713 4 is_stmt 1 view .LVU1793
2713:src/keys.c    ****      return STATE_UNFINISHED;
 6020              		.loc 1 2713 7 is_stmt 0 view .LVU1794
ARM GAS  /tmp/cc8xFAqJ.s 			page 190


 6021 0052 002C     		cmp	r4, #0
 6022 0054 6FD0     		beq	.L726
2715:src/keys.c    ****      // No multi character search in alpha catalogues
 6023              		.loc 1 2715 4 is_stmt 1 view .LVU1795
2715:src/keys.c    ****      // No multi character search in alpha catalogues
 6024              		.loc 1 2715 7 is_stmt 0 view .LVU1796
 6025 0056 AAF10B0A 		sub	r10, r10, #11
 6026              	.LVL498:
2715:src/keys.c    ****      // No multi character search in alpha catalogues
 6027              		.loc 1 2715 7 view .LVU1797
 6028 005a BAF1040F 		cmp	r10, #4
 6029 005e 40F2CB80 		bls	.L678
2719:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6030              		.loc 1 2719 4 is_stmt 1 view .LVU1798
2719:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6031              		.loc 1 2719 8 is_stmt 0 view .LVU1799
 6032 0062 3D7F     		ldrb	r5, [r7, #28]	@ zero_extendqisi2
2719:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6033              		.loc 1 2719 7 view .LVU1800
 6034 0064 092D     		cmp	r5, #9
 6035 0066 40F2C780 		bls	.L678
 6036              	.LVL499:
 6037              	.L646:
2724:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
 6038              		.loc 1 2724 4 is_stmt 1 view .LVU1801
2724:src/keys.c    ****    for (pos = 0; pos < ctmax; ++pos) {
 6039              		.loc 1 2724 27 is_stmt 0 view .LVU1802
 6040 006a 7B19     		adds	r3, r7, r5
 6041 006c 0025     		movs	r5, #0
 6042 006e 83F82050 		strb	r5, [r3, #32]
2725:src/keys.c    ****      char buf[16];
 6043              		.loc 1 2725 4 is_stmt 1 view .LVU1803
 6044              	.LVL500:
2725:src/keys.c    ****      char buf[16];
 6045              		.loc 1 2725 18 view .LVU1804
2725:src/keys.c    ****      char buf[16];
 6046              		.loc 1 2725 4 is_stmt 0 view .LVU1805
 6047 0072 B8F1000F 		cmp	r8, #0
 6048 0076 00F0D780 		beq	.L724
 6049              	.LVL501:
 6050              	.L666:
 6051              	.LBB573:
2726:src/keys.c    ****      const char *cmd = catcmd(current_catalogue(pos), buf);
 6052              		.loc 1 2726 6 is_stmt 1 view .LVU1806
2727:src/keys.c    ****      int i;
 6053              		.loc 1 2727 6 view .LVU1807
2727:src/keys.c    ****      int i;
 6054              		.loc 1 2727 24 is_stmt 0 view .LVU1808
 6055 007a 2846     		mov	r0, r5
 6056 007c FFF7FEFF 		bl	current_catalogue
 6057              	.LVL502:
 6058 0080 6946     		mov	r1, sp
 6059 0082 FFF7FEFF 		bl	catcmd
 6060              	.LVL503:
 6061 0086 0446     		mov	r4, r0
 6062              	.LVL504:
2728:src/keys.c    **** 
ARM GAS  /tmp/cc8xFAqJ.s 			page 191


 6063              		.loc 1 2728 6 is_stmt 1 view .LVU1809
2730:src/keys.c    ****        cmd++;
 6064              		.loc 1 2730 6 view .LVU1810
2731:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
 6065              		.loc 1 2731 8 view .LVU1811
2730:src/keys.c    ****        cmd++;
 6066              		.loc 1 2730 10 is_stmt 0 view .LVU1812
 6067 0088 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 6068              	.LVL505:
2730:src/keys.c    ****        cmd++;
 6069              		.loc 1 2730 9 view .LVU1813
 6070 008a 1428     		cmp	r0, #20
 6071 008c 04BF     		itt	eq
 6072 008e 6078     		ldrbeq	r0, [r4, #1]	@ zero_extendqisi2
2731:src/keys.c    ****      for (i=0; cmd[i] != '\0'; i++) {
 6073              		.loc 1 2731 11 view .LVU1814
 6074 0090 0134     		addeq	r4, r4, #1
 6075              	.LVL506:
2732:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6076              		.loc 1 2732 6 is_stmt 1 view .LVU1815
2732:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6077              		.loc 1 2732 16 view .LVU1816
2732:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6078              		.loc 1 2732 6 is_stmt 0 view .LVU1817
 6079 0092 0028     		cmp	r0, #0
 6080 0094 00F0BF80 		beq	.L668
 6081 0098 DFF85CB2 		ldr	fp, .L742+28
 6082 009c C4F1010A 		rsb	r10, r4, #1
 6083 00a0 06E0     		b	.L671
 6084              	.LVL507:
 6085              	.L731:
 6086              	.LBB574:
2737:src/keys.c    **** 	 break;
 6087              		.loc 1 2737 16 view .LVU1818
 6088 00a2 C0F2BA80 		blt	.L670
 6089              	.LBE574:
2732:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6090              		.loc 1 2732 19 discriminator 2 view .LVU1819
 6091 00a6 14F8010F 		ldrb	r0, [r4, #1]!	@ zero_extendqisi2
 6092              	.LVL508:
2732:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6093              		.loc 1 2732 6 discriminator 2 view .LVU1820
 6094 00aa 0028     		cmp	r0, #0
 6095 00ac 00F0BF80 		beq	.L730
 6096              	.LVL509:
 6097              	.L671:
 6098              	.LBB575:
2733:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
 6099              		.loc 1 2733 8 is_stmt 1 view .LVU1821
2733:src/keys.c    ****        const int cl = (unsigned char) Cmdline[i];
 6100              		.loc 1 2733 22 is_stmt 0 view .LVU1822
 6101 00b0 FFF7FEFF 		bl	remap_chars
 6102              	.LVL510:
2737:src/keys.c    **** 	 break;
 6103              		.loc 1 2737 13 is_stmt 1 view .LVU1823
 6104              	.LBE575:
2732:src/keys.c    ****        const int c = remap_chars(cmd[i]);
ARM GAS  /tmp/cc8xFAqJ.s 			page 192


 6105              		.loc 1 2732 32 view .LVU1824
 6106              	.LBB576:
2734:src/keys.c    ****        if (c > cl)
 6107              		.loc 1 2734 8 view .LVU1825
2734:src/keys.c    ****        if (c > cl)
 6108              		.loc 1 2734 46 is_stmt 0 view .LVU1826
 6109 00b4 1BF8013F 		ldrb	r3, [fp, #1]!	@ zero_extendqisi2
 6110              	.LVL511:
2735:src/keys.c    **** 	 goto set_pos;
 6111              		.loc 1 2735 8 is_stmt 1 view .LVU1827
2735:src/keys.c    **** 	 goto set_pos;
 6112              		.loc 1 2735 11 is_stmt 0 view .LVU1828
 6113 00b8 9842     		cmp	r0, r3
 6114 00ba 0AEB0402 		add	r2, r10, r4
 6115              	.LVL512:
2735:src/keys.c    **** 	 goto set_pos;
 6116              		.loc 1 2735 11 view .LVU1829
 6117              	.LBE576:
2732:src/keys.c    ****        const int c = remap_chars(cmd[i]);
 6118              		.loc 1 2732 16 is_stmt 1 view .LVU1830
 6119              	.LBB577:
2735:src/keys.c    **** 	 goto set_pos;
 6120              		.loc 1 2735 11 is_stmt 0 view .LVU1831
 6121 00be F0DD     		ble	.L731
 6122              	.LVL513:
 6123              	.L669:
2735:src/keys.c    **** 	 goto set_pos;
 6124              		.loc 1 2735 11 view .LVU1832
 6125 00c0 D9F80040 		ldr	r4, [r9]
 6126              	.L649:
2735:src/keys.c    **** 	 goto set_pos;
 6127              		.loc 1 2735 11 view .LVU1833
 6128              	.LBE577:
 6129              	.LBE573:
2746:src/keys.c    ****      --pos;
 6130              		.loc 1 2746 10 is_stmt 1 view .LVU1834
 6131 00c4 002E     		cmp	r6, #0
 6132 00c6 00F0B680 		beq	.L653
2746:src/keys.c    ****      --pos;
 6133              		.loc 1 2746 20 is_stmt 0 view .LVU1835
 6134 00ca 4DB1     		cbz	r5, .L647
 6135              	.LVL514:
 6136              	.L725:
2746:src/keys.c    ****      --pos;
 6137              		.loc 1 2746 20 view .LVU1836
 6138 00cc 2846     		mov	r0, r5
 6139 00ce FFF7FEFF 		bl	current_catalogue
 6140              	.LVL515:
2747:src/keys.c    ****    State.catpos = pos;
 6141              		.loc 1 2747 6 is_stmt 1 view .LVU1837
2746:src/keys.c    ****      --pos;
 6142              		.loc 1 2746 10 view .LVU1838
 6143              	.LBB578:
 6144              	.LBI578:
2593:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 6145              		.loc 1 2593 12 view .LVU1839
 6146              	.LBB579:
ARM GAS  /tmp/cc8xFAqJ.s 			page 193


2594:src/keys.c    **** }
 6147              		.loc 1 2594 2 view .LVU1840
2594:src/keys.c    **** }
 6148              		.loc 1 2594 33 is_stmt 0 view .LVU1841
 6149 00d2 00F0F000 		and	r0, r0, #240
 6150              	.LBE579:
 6151              	.LBE578:
2746:src/keys.c    ****      --pos;
 6152              		.loc 1 2746 27 view .LVU1842
 6153 00d6 F028     		cmp	r0, #240
 6154 00d8 40F0AD80 		bne	.L653
2746:src/keys.c    ****      --pos;
 6155              		.loc 1 2746 20 view .LVU1843
 6156 00dc 013D     		subs	r5, r5, #1
 6157              	.LVL516:
2746:src/keys.c    ****      --pos;
 6158              		.loc 1 2746 20 view .LVU1844
 6159 00de F5D1     		bne	.L725
 6160              	.LVL517:
 6161              	.L647:
2748:src/keys.c    ****    return STATE_UNFINISHED;
 6162              		.loc 1 2748 4 is_stmt 1 view .LVU1845
2748:src/keys.c    ****    return STATE_UNFINISHED;
 6163              		.loc 1 2748 17 is_stmt 0 view .LVU1846
 6164 00e0 B4F8DC37 		ldrh	r3, [r4, #2012]
 6165 00e4 65F34B13 		bfi	r3, r5, #5, #7
 6166 00e8 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2749:src/keys.c    ****  }
 6167              		.loc 1 2749 4 is_stmt 1 view .LVU1847
2749:src/keys.c    ****  }
 6168              		.loc 1 2749 11 is_stmt 0 view .LVU1848
 6169 00ec 3320     		movs	r0, #51
 6170              	.L738:
2750:src/keys.c    **** 
 6171              		.loc 1 2750 2 view .LVU1849
 6172 00ee 05B0     		add	sp, sp, #20
 6173              		.cfi_remember_state
 6174              		.cfi_def_cfa_offset 36
 6175              		@ sp needed
 6176 00f0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6177              	.LVL518:
 6178              	.L727:
 6179              		.cfi_restore_state
2607:src/keys.c    **** #ifdef DM42
 6180              		.loc 1 2607 6 is_stmt 1 view .LVU1850
 6181 00f4 431F     		subs	r3, r0, #5
 6182 00f6 1F2B     		cmp	r3, #31
 6183 00f8 2FD8     		bhi	.L630
 6184 00fa DFE803F0 		tbb	[pc, r3]
 6185              	.LVL519:
 6186              	.L632:
 6187 00fe 35       		.byte	(.L636-.L632)/2
 6188 00ff 2E       		.byte	(.L630-.L632)/2
 6189 0100 2E       		.byte	(.L630-.L632)/2
 6190 0101 2E       		.byte	(.L630-.L632)/2
 6191 0102 2E       		.byte	(.L630-.L632)/2
 6192 0103 2E       		.byte	(.L630-.L632)/2
ARM GAS  /tmp/cc8xFAqJ.s 			page 194


 6193 0104 2E       		.byte	(.L630-.L632)/2
 6194 0105 35       		.byte	(.L636-.L632)/2
 6195 0106 2E       		.byte	(.L630-.L632)/2
 6196 0107 2E       		.byte	(.L630-.L632)/2
 6197 0108 2E       		.byte	(.L630-.L632)/2
 6198 0109 20       		.byte	(.L635-.L632)/2
 6199 010a 2E       		.byte	(.L630-.L632)/2
 6200 010b 64       		.byte	(.L634-.L632)/2
 6201 010c 2E       		.byte	(.L630-.L632)/2
 6202 010d 2E       		.byte	(.L630-.L632)/2
 6203 010e 2E       		.byte	(.L630-.L632)/2
 6204 010f 2E       		.byte	(.L630-.L632)/2
 6205 0110 2E       		.byte	(.L630-.L632)/2
 6206 0111 6B       		.byte	(.L633-.L632)/2
 6207 0112 2E       		.byte	(.L630-.L632)/2
 6208 0113 2E       		.byte	(.L630-.L632)/2
 6209 0114 2E       		.byte	(.L630-.L632)/2
 6210 0115 2E       		.byte	(.L630-.L632)/2
 6211 0116 2E       		.byte	(.L630-.L632)/2
 6212 0117 2E       		.byte	(.L630-.L632)/2
 6213 0118 2E       		.byte	(.L630-.L632)/2
 6214 0119 2E       		.byte	(.L630-.L632)/2
 6215 011a 2E       		.byte	(.L630-.L632)/2
 6216 011b 2E       		.byte	(.L630-.L632)/2
 6217 011c 2E       		.byte	(.L630-.L632)/2
 6218 011d 27       		.byte	(.L631-.L632)/2
 6219              		.p2align 1
 6220              	.L737:
2696:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6221              		.loc 1 2696 42 is_stmt 0 discriminator 1 view .LVU1851
 6222 011e 734A     		ldr	r2, .L742+16
 6223              	.LVL520:
2696:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6224              		.loc 1 2696 42 discriminator 1 view .LVU1852
 6225 0120 7B69     		ldr	r3, [r7, #20]
2696:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6226              		.loc 1 2696 24 discriminator 1 view .LVU1853
 6227 0122 1A42     		tst	r2, r3
 6228 0124 75D0     		beq	.L661
2698:src/keys.c    ****        return STATE_UNFINISHED;
 6229              		.loc 1 2698 8 is_stmt 1 view .LVU1854
2698:src/keys.c    ****        return STATE_UNFINISHED;
 6230              		.loc 1 2698 38 is_stmt 0 view .LVU1855
 6231 0126 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 6232 0128 C3F30012 		ubfx	r2, r3, #4, #1
2698:src/keys.c    ****        return STATE_UNFINISHED;
 6233              		.loc 1 2698 30 view .LVU1856
 6234 012c C2F10102 		rsb	r2, r2, #1
2698:src/keys.c    ****        return STATE_UNFINISHED;
 6235              		.loc 1 2698 26 view .LVU1857
 6236 0130 62F30413 		bfi	r3, r2, #4, #1
 6237 0134 BB75     		strb	r3, [r7, #22]
 6238              	.LVL521:
 6239              	.L726:
2699:src/keys.c    ****      }
 6240              		.loc 1 2699 8 is_stmt 1 view .LVU1858
2699:src/keys.c    ****      }
ARM GAS  /tmp/cc8xFAqJ.s 			page 195


 6241              		.loc 1 2699 15 is_stmt 0 view .LVU1859
 6242 0136 3320     		movs	r0, #51
 6243              	.L628:
2750:src/keys.c    **** 
 6244              		.loc 1 2750 2 view .LVU1860
 6245 0138 05B0     		add	sp, sp, #20
 6246              		.cfi_remember_state
 6247              		.cfi_def_cfa_offset 36
 6248              		@ sp needed
 6249 013a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6250              	.LVL522:
 6251              	.L635:
 6252              		.cfi_restore_state
2636:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6253              		.loc 1 2636 8 is_stmt 1 view .LVU1861
2636:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6254              		.loc 1 2636 11 is_stmt 0 view .LVU1862
 6255 013e 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 6256 0140 23B1     		cbz	r3, .L631
2636:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6257              		.loc 1 2636 33 discriminator 1 view .LVU1863
 6258 0142 FFF7FEFF 		bl	keyticks
 6259              	.LVL523:
2636:src/keys.c    **** 	 if (--CmdLineLength > 0)
 6260              		.loc 1 2636 30 discriminator 1 view .LVU1864
 6261 0146 1D28     		cmp	r0, #29
 6262 0148 40F39580 		ble	.L732
 6263              	.L631:
2646:src/keys.c    ****        return STATE_UNFINISHED;
 6264              		.loc 1 2646 8 is_stmt 1 view .LVU1865
 6265 014c 0020     		movs	r0, #0
 6266 014e FFF7FEFF 		bl	init_cat
 6267              	.LVL524:
2647:src/keys.c    **** 
 6268              		.loc 1 2647 8 view .LVU1866
2647:src/keys.c    **** 
 6269              		.loc 1 2647 15 is_stmt 0 view .LVU1867
 6270 0152 3320     		movs	r0, #51
2750:src/keys.c    **** 
 6271              		.loc 1 2750 2 view .LVU1868
 6272 0154 05B0     		add	sp, sp, #20
 6273              		.cfi_remember_state
 6274              		.cfi_def_cfa_offset 36
 6275              		@ sp needed
 6276 0156 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6277              	.LVL525:
 6278              	.L630:
 6279              		.cfi_restore_state
 6280              	.LBB580:
 6281              	.LBI555:
 435:src/keys.c    **** {
 6282              		.loc 1 435 12 is_stmt 1 discriminator 4 view .LVU1869
 6283              	.LBB561:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6284              		.loc 1 437 2 discriminator 4 view .LVU1870
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6285              		.loc 1 485 2 discriminator 4 view .LVU1871
ARM GAS  /tmp/cc8xFAqJ.s 			page 196


 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6286              		.loc 1 485 6 is_stmt 0 discriminator 4 view .LVU1872
 6287 015a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6288              		.loc 1 485 5 discriminator 4 view .LVU1873
 6289 015c 13F0100F 		tst	r3, #16
 6290 0160 14BF     		ite	ne
 6291 0162 0421     		movne	r1, #4
 6292              	.LVL526:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6293              		.loc 1 485 5 discriminator 4 view .LVU1874
 6294 0164 0021     		moveq	r1, #0
 6295 0166 65E7     		b	.L664
 6296              	.LVL527:
 6297              	.L636:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6298              		.loc 1 485 5 discriminator 4 view .LVU1875
 6299              	.LBE561:
 6300              	.LBE580:
2614:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6301              		.loc 1 2614 8 is_stmt 1 view .LVU1876
2614:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6302              		.loc 1 2614 11 is_stmt 0 view .LVU1877
 6303 0168 4545     		cmp	r5, r8
 6304 016a EFDA     		bge	.L631
 6305 016c 2846     		mov	r0, r5
 6306              	.LVL528:
2614:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6307              		.loc 1 2614 24 discriminator 1 view .LVU1878
 6308 016e 002E     		cmp	r6, #0
 6309 0170 00F08D80 		beq	.L733
 6310              	.LVL529:
 6311              	.LBB581:
 6312              	.LBI581:
2593:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 6313              		.loc 1 2593 12 is_stmt 1 view .LVU1879
 6314              	.LBB582:
2594:src/keys.c    **** }
 6315              		.loc 1 2594 2 view .LVU1880
2594:src/keys.c    **** }
 6316              		.loc 1 2594 10 is_stmt 0 view .LVU1881
 6317 0174 FFF7FEFF 		bl	current_catalogue
 6318              	.LVL530:
2594:src/keys.c    **** }
 6319              		.loc 1 2594 33 view .LVU1882
 6320 0178 00F0F003 		and	r3, r0, #240
 6321              	.LBE582:
 6322              	.LBE581:
2614:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6323              		.loc 1 2614 27 view .LVU1883
 6324 017c F02B     		cmp	r3, #240
 6325              	.LBB584:
 6326              	.LBB583:
2594:src/keys.c    **** }
 6327              		.loc 1 2594 10 view .LVU1884
 6328 017e 0446     		mov	r4, r0
 6329              	.LBE583:
ARM GAS  /tmp/cc8xFAqJ.s 			page 197


 6330              	.LBE584:
2614:src/keys.c    **** 	 const opcode op = current_catalogue(pos);
 6331              		.loc 1 2614 27 view .LVU1885
 6332 0180 E4D0     		beq	.L631
 6333              	.L639:
 6334              	.LBB585:
2615:src/keys.c    **** 
 6335              		.loc 1 2615 3 is_stmt 1 view .LVU1886
2617:src/keys.c    **** 
 6336              		.loc 1 2617 3 view .LVU1887
 6337 0182 0020     		movs	r0, #0
 6338 0184 FFF7FEFF 		bl	init_cat
 6339              	.LVL531:
2619:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 6340              		.loc 1 2619 3 view .LVU1888
2619:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 6341              		.loc 1 2619 6 is_stmt 0 view .LVU1889
 6342 0188 14F47043 		ands	r3, r4, #61440
 6343 018c 00F08C80 		beq	.L640
2619:src/keys.c    **** 	   const unsigned int rarg = RARG_CMD(op);
 6344              		.loc 1 2619 7 discriminator 1 view .LVU1890
 6345 0190 B3F5704F 		cmp	r3, #61440
 6346 0194 00F08880 		beq	.L640
 6347              	.LBB586:
2620:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 6348              		.loc 1 2620 5 is_stmt 1 view .LVU1891
2620:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 6349              		.loc 1 2620 31 is_stmt 0 view .LVU1892
 6350 0198 C4F30723 		ubfx	r3, r4, #8, #8
 6351 019c A3F12005 		sub	r5, r3, #32
 6352              	.LVL532:
2620:src/keys.c    **** 	   if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 6353              		.loc 1 2620 31 view .LVU1893
 6354 01a0 EDB2     		uxtb	r5, r5
 6355              	.LVL533:
2621:src/keys.c    **** 	     return op;
 6356              		.loc 1 2621 5 is_stmt 1 view .LVU1894
2621:src/keys.c    **** 	     return op;
 6357              		.loc 1 2621 8 is_stmt 0 view .LVU1895
 6358 01a2 012D     		cmp	r5, #1
 6359 01a4 40F28980 		bls	.L641
2621:src/keys.c    **** 	     return op;
 6360              		.loc 1 2621 56 discriminator 1 view .LVU1896
 6361 01a8 6C2D     		cmp	r5, #108
 6362 01aa 00F08680 		beq	.L641
2621:src/keys.c    **** 	     return op;
 6363              		.loc 1 2621 77 discriminator 2 view .LVU1897
 6364 01ae 242D     		cmp	r5, #36
 6365 01b0 00F08380 		beq	.L641
2623:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 6366              		.loc 1 2623 5 is_stmt 1 view .LVU1898
2623:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 6367              		.loc 1 2623 30 is_stmt 0 view .LVU1899
 6368 01b4 A5F12D02 		sub	r2, r5, #45
2623:src/keys.c    **** 	     State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 6369              		.loc 1 2623 8 view .LVU1900
 6370 01b8 062A     		cmp	r2, #6
ARM GAS  /tmp/cc8xFAqJ.s 			page 198


 6371 01ba 00F29F80 		bhi	.L644
2624:src/keys.c    **** 	   else
 6372              		.loc 1 2624 7 is_stmt 1 view .LVU1901
2624:src/keys.c    **** 	   else
 6373              		.loc 1 2624 28 is_stmt 0 view .LVU1902
 6374 01be 4D3B     		subs	r3, r3, #77
2624:src/keys.c    **** 	   else
 6375              		.loc 1 2624 19 view .LVU1903
 6376 01c0 FB73     		strb	r3, [r7, #15]
 6377              	.LBE586:
 6378              	.LBE585:
2633:src/keys.c    **** 
 6379              		.loc 1 2633 15 view .LVU1904
 6380 01c2 3320     		movs	r0, #51
 6381              	.LBB596:
 6382              	.LBB589:
 6383 01c4 B8E7     		b	.L628
 6384              	.LVL534:
 6385              	.L634:
2633:src/keys.c    **** 
 6386              		.loc 1 2633 15 view .LVU1905
 6387              	.LBE589:
 6388              	.LBE596:
2650:src/keys.c    ****        if (pos == 0)
 6389              		.loc 1 2650 8 is_stmt 1 view .LVU1906
2650:src/keys.c    ****        if (pos == 0)
 6390              		.loc 1 2650 22 is_stmt 0 view .LVU1907
 6391 01c6 0023     		movs	r3, #0
 6392 01c8 3B77     		strb	r3, [r7, #28]
2651:src/keys.c    **** 	 goto set_max;
 6393              		.loc 1 2651 8 is_stmt 1 view .LVU1908
2651:src/keys.c    **** 	 goto set_max;
 6394              		.loc 1 2651 11 is_stmt 0 view .LVU1909
 6395 01ca 002D     		cmp	r5, #0
 6396 01cc 5DD1     		bne	.L734
 6397              	.LVL535:
 6398              	.L648:
2744:src/keys.c    ****  set_pos:
 6399              		.loc 1 2744 4 is_stmt 1 view .LVU1910
2744:src/keys.c    ****  set_pos:
 6400              		.loc 1 2744 8 is_stmt 0 view .LVU1911
 6401 01ce 08F1FF35 		add	r5, r8, #-1
 6402              	.LVL536:
2744:src/keys.c    ****  set_pos:
 6403              		.loc 1 2744 8 view .LVU1912
 6404 01d2 77E7     		b	.L649
 6405              	.LVL537:
 6406              	.L633:
2658:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 6407              		.loc 1 2658 8 is_stmt 1 view .LVU1913
2658:src/keys.c    ****        while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 6408              		.loc 1 2658 22 is_stmt 0 view .LVU1914
 6409 01d4 0023     		movs	r3, #0
 6410 01d6 3B77     		strb	r3, [r7, #28]
2659:src/keys.c    ****        if (pos >= ctmax)
 6411              		.loc 1 2659 8 is_stmt 1 view .LVU1915
2659:src/keys.c    ****        if (pos >= ctmax)
ARM GAS  /tmp/cc8xFAqJ.s 			page 199


 6412              		.loc 1 2659 14 is_stmt 0 view .LVU1916
 6413 01d8 06E0     		b	.L652
 6414              	.LVL538:
 6415              	.L735:
2659:src/keys.c    ****        if (pos >= ctmax)
 6416              		.loc 1 2659 29 discriminator 1 view .LVU1917
 6417 01da 66B3     		cbz	r6, .L653
 6418              	.LBB597:
 6419              	.LBB598:
2594:src/keys.c    **** }
 6420              		.loc 1 2594 10 view .LVU1918
 6421 01dc FFF7FEFF 		bl	current_catalogue
 6422              	.LVL539:
2594:src/keys.c    **** }
 6423              		.loc 1 2594 33 view .LVU1919
 6424 01e0 00F0F000 		and	r0, r0, #240
 6425              	.LBE598:
 6426              	.LBE597:
2659:src/keys.c    ****        if (pos >= ctmax)
 6427              		.loc 1 2659 41 view .LVU1920
 6428 01e4 F028     		cmp	r0, #240
 6429 01e6 26D1     		bne	.L653
 6430              	.L652:
2659:src/keys.c    ****        if (pos >= ctmax)
 6431              		.loc 1 2659 65 is_stmt 1 discriminator 3 view .LVU1921
2659:src/keys.c    ****        if (pos >= ctmax)
 6432              		.loc 1 2659 14 discriminator 3 view .LVU1922
 6433 01e8 0135     		adds	r5, r5, #1
 6434              	.LVL540:
 6435              	.LBB601:
 6436              	.LBI597:
2593:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 6437              		.loc 1 2593 12 discriminator 3 view .LVU1923
 6438              	.LBB599:
2594:src/keys.c    **** }
 6439              		.loc 1 2594 2 discriminator 3 view .LVU1924
 6440              	.LBE599:
 6441              	.LBE601:
2659:src/keys.c    ****        if (pos >= ctmax)
 6442              		.loc 1 2659 14 is_stmt 0 discriminator 3 view .LVU1925
 6443 01ea A845     		cmp	r8, r5
 6444              	.LBB602:
 6445              	.LBB600:
2594:src/keys.c    **** }
 6446              		.loc 1 2594 10 discriminator 3 view .LVU1926
 6447 01ec 2846     		mov	r0, r5
 6448              	.LBE600:
 6449              	.LBE602:
2659:src/keys.c    ****        if (pos >= ctmax)
 6450              		.loc 1 2659 14 discriminator 3 view .LVU1927
 6451 01ee F4DC     		bgt	.L735
 6452              	.LVL541:
2746:src/keys.c    ****      --pos;
 6453              		.loc 1 2746 10 is_stmt 1 view .LVU1928
2661:src/keys.c    ****        goto set_pos;
 6454              		.loc 1 2661 7 is_stmt 0 view .LVU1929
 6455 01f0 3546     		mov	r5, r6
ARM GAS  /tmp/cc8xFAqJ.s 			page 200


 6456              	.LVL542:
2746:src/keys.c    ****      --pos;
 6457              		.loc 1 2746 10 view .LVU1930
 6458 01f2 06B3     		cbz	r6, .L653
 6459              	.LVL543:
2746:src/keys.c    ****      --pos;
 6460              		.loc 1 2746 10 view .LVU1931
 6461 01f4 0025     		movs	r5, #0
 6462              	.LVL544:
2746:src/keys.c    ****      --pos;
 6463              		.loc 1 2746 10 view .LVU1932
 6464 01f6 73E7     		b	.L647
 6465              	.LVL545:
 6466              	.L678:
2719:src/keys.c    ****      Cmdline[CmdLineLength++] = ch;
 6467              		.loc 1 2719 8 view .LVU1933
 6468 01f8 2B46     		mov	r3, r5
2720:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6469              		.loc 1 2720 6 is_stmt 1 view .LVU1934
2720:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6470              		.loc 1 2720 31 is_stmt 0 view .LVU1935
 6471 01fa 3B44     		add	r3, r3, r7
2720:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6472              		.loc 1 2720 27 view .LVU1936
 6473 01fc 0135     		adds	r5, r5, #1
 6474 01fe EDB2     		uxtb	r5, r5
 6475 0200 3D77     		strb	r5, [r7, #28]
2720:src/keys.c    ****    /* Search for the current buffer in the catalogue */
 6476              		.loc 1 2720 31 view .LVU1937
 6477 0202 83F82040 		strb	r4, [r3, #32]
 6478 0206 30E7     		b	.L646
 6479              	.LVL546:
 6480              	.L728:
2668:src/keys.c    ****        /*
 6481              		.loc 1 2668 6 is_stmt 1 view .LVU1938
2668:src/keys.c    ****        /*
 6482              		.loc 1 2668 9 is_stmt 0 view .LVU1939
 6483 0208 BAF1120F 		cmp	r10, #18
 6484 020c 21D0     		beq	.L736
 6485              	.L655:
2696:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6486              		.loc 1 2696 11 is_stmt 1 view .LVU1940
2696:src/keys.c    ****        // Handle alpha shift in alpha character catalogues
 6487              		.loc 1 2696 14 is_stmt 0 view .LVU1941
 6488 020e 2428     		cmp	r0, #36
 6489 0210 85D0     		beq	.L737
 6490              	.LVL547:
 6491              	.L661:
2711:src/keys.c    ****    reset_shift();
 6492              		.loc 1 2711 4 is_stmt 1 view .LVU1942
 6493              	.LBB603:
 435:src/keys.c    **** {
 6494              		.loc 1 435 12 view .LVU1943
 6495              	.LBB562:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6496              		.loc 1 437 2 view .LVU1944
 485:src/keys.c    **** 		if (shift == SHIFT_N)
ARM GAS  /tmp/cc8xFAqJ.s 			page 201


 6497              		.loc 1 485 2 view .LVU1945
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6498              		.loc 1 485 5 is_stmt 0 view .LVU1946
 6499 0212 0121     		movs	r1, #1
 6500              	.LVL548:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6501              		.loc 1 485 5 view .LVU1947
 6502 0214 0EE7     		b	.L664
 6503              	.LVL549:
 6504              	.L668:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6505              		.loc 1 485 5 view .LVU1948
 6506 0216 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 6507              	.LVL550:
 6508              	.L670:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6509              		.loc 1 485 5 view .LVU1949
 6510              	.LBE562:
 6511              	.LBE603:
 6512              	.LBB604:
2740:src/keys.c    ****        goto set_pos;
 6513              		.loc 1 2740 6 is_stmt 1 view .LVU1950
2740:src/keys.c    ****        goto set_pos;
 6514              		.loc 1 2740 9 is_stmt 0 view .LVU1951
 6515 021a 002B     		cmp	r3, #0
 6516 021c 3FF450AF 		beq	.L669
 6517              	.LBE604:
2725:src/keys.c    ****      char buf[16];
 6518              		.loc 1 2725 31 is_stmt 1 view .LVU1952
 6519 0220 0135     		adds	r5, r5, #1
 6520              	.LVL551:
2725:src/keys.c    ****      char buf[16];
 6521              		.loc 1 2725 18 view .LVU1953
2725:src/keys.c    ****      char buf[16];
 6522              		.loc 1 2725 4 is_stmt 0 view .LVU1954
 6523 0222 A845     		cmp	r8, r5
 6524 0224 7FF429AF 		bne	.L666
 6525              	.LVL552:
 6526              	.L724:
2725:src/keys.c    ****      char buf[16];
 6527              		.loc 1 2725 4 view .LVU1955
 6528 0228 D9F80040 		ldr	r4, [r9]
 6529 022c CFE7     		b	.L648
 6530              	.LVL553:
 6531              	.L730:
2725:src/keys.c    ****      char buf[16];
 6532              		.loc 1 2725 4 view .LVU1956
 6533 022e 3A44     		add	r2, r2, r7
 6534              	.LVL554:
2725:src/keys.c    ****      char buf[16];
 6535              		.loc 1 2725 4 view .LVU1957
 6536 0230 92F82030 		ldrb	r3, [r2, #32]	@ zero_extendqisi2
 6537              	.LVL555:
2725:src/keys.c    ****      char buf[16];
 6538              		.loc 1 2725 4 view .LVU1958
 6539 0234 F1E7     		b	.L670
 6540              	.LVL556:
ARM GAS  /tmp/cc8xFAqJ.s 			page 202


 6541              	.L653:
2748:src/keys.c    ****    return STATE_UNFINISHED;
 6542              		.loc 1 2748 17 view .LVU1959
 6543 0236 B4F8DC37 		ldrh	r3, [r4, #2012]
 6544 023a 05F07F05 		and	r5, r5, #127
 6545              	.LVL557:
2748:src/keys.c    ****    return STATE_UNFINISHED;
 6546              		.loc 1 2748 4 is_stmt 1 view .LVU1960
2748:src/keys.c    ****    return STATE_UNFINISHED;
 6547              		.loc 1 2748 17 is_stmt 0 view .LVU1961
 6548 023e 65F34B13 		bfi	r3, r5, #5, #7
 6549 0242 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2749:src/keys.c    ****  }
 6550              		.loc 1 2749 4 is_stmt 1 view .LVU1962
2749:src/keys.c    ****  }
 6551              		.loc 1 2749 11 is_stmt 0 view .LVU1963
 6552 0246 3320     		movs	r0, #51
 6553 0248 51E7     		b	.L738
 6554              	.LVL558:
 6555              	.L729:
2702:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 6556              		.loc 1 2702 6 is_stmt 1 view .LVU1964
2702:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 6557              		.loc 1 2702 9 is_stmt 0 view .LVU1965
 6558 024a 1028     		cmp	r0, #16
 6559 024c 23D0     		beq	.L739
 6560              	.L663:
2711:src/keys.c    ****    reset_shift();
 6561              		.loc 1 2711 4 is_stmt 1 view .LVU1966
 6562              	.LVL559:
 6563              	.LBB605:
 435:src/keys.c    **** {
 6564              		.loc 1 435 12 view .LVU1967
 6565              	.LBB563:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6566              		.loc 1 437 2 view .LVU1968
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6567              		.loc 1 485 2 view .LVU1969
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6568              		.loc 1 485 5 is_stmt 0 view .LVU1970
 6569 024e 0521     		movs	r1, #5
 6570              	.LVL560:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6571              		.loc 1 485 5 view .LVU1971
 6572 0250 F0E6     		b	.L664
 6573              	.LVL561:
 6574              	.L736:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 6575              		.loc 1 485 5 view .LVU1972
 6576              	.LBE563:
 6577              	.LBE605:
2668:src/keys.c    ****        /*
 6578              		.loc 1 2668 32 discriminator 1 view .LVU1973
 6579 0252 0128     		cmp	r0, #1
 6580 0254 DBD1     		bne	.L655
 6581              	.LBB606:
2677:src/keys.c    **** 	 OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
ARM GAS  /tmp/cc8xFAqJ.s 			page 203


 6582              		.loc 1 2677 8 is_stmt 1 view .LVU1974
2685:src/keys.c    ****        int i;
 6583              		.loc 1 2685 8 view .LVU1975
2685:src/keys.c    ****        int i;
 6584              		.loc 1 2685 26 is_stmt 0 view .LVU1976
 6585 0256 2846     		mov	r0, r5
 6586              	.LVL562:
2685:src/keys.c    ****        int i;
 6587              		.loc 1 2685 26 view .LVU1977
 6588 0258 FFF7FEFF 		bl	current_catalogue
 6589              	.LVL563:
2685:src/keys.c    ****        int i;
 6590              		.loc 1 2685 26 view .LVU1978
 6591 025c 0446     		mov	r4, r0
 6592              	.LVL564:
2686:src/keys.c    **** 
 6593              		.loc 1 2686 8 is_stmt 1 view .LVU1979
2688:src/keys.c    ****        if (isRARG(op))
 6594              		.loc 1 2688 8 view .LVU1980
 6595 025e 0020     		movs	r0, #0
 6596              	.LVL565:
2688:src/keys.c    ****        if (isRARG(op))
 6597              		.loc 1 2688 8 is_stmt 0 view .LVU1981
 6598 0260 FFF7FEFF 		bl	init_cat
 6599              	.LVL566:
2689:src/keys.c    **** 	 return op ^ 1;
 6600              		.loc 1 2689 8 is_stmt 1 view .LVU1982
2689:src/keys.c    **** 	 return op ^ 1;
 6601              		.loc 1 2689 11 is_stmt 0 view .LVU1983
 6602 0264 14F47043 		ands	r3, r4, #61440
 6603 0268 29D0     		beq	.L656
2689:src/keys.c    **** 	 return op ^ 1;
 6604              		.loc 1 2689 12 discriminator 1 view .LVU1984
 6605 026a B3F5704F 		cmp	r3, #61440
 6606 026e 26D0     		beq	.L656
2690:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 6607              		.loc 1 2690 3 is_stmt 1 view .LVU1985
2690:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 6608              		.loc 1 2690 13 is_stmt 0 view .LVU1986
 6609 0270 84F00100 		eor	r0, r4, #1
 6610 0274 60E7     		b	.L628
 6611              	.LVL567:
 6612              	.L732:
2690:src/keys.c    ****        for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 6613              		.loc 1 2690 13 view .LVU1987
 6614              	.LBE606:
2637:src/keys.c    **** 	   goto search;
 6615              		.loc 1 2637 3 is_stmt 1 view .LVU1988
2637:src/keys.c    **** 	   goto search;
 6616              		.loc 1 2637 7 is_stmt 0 view .LVU1989
 6617 0276 3D7F     		ldrb	r5, [r7, #28]	@ zero_extendqisi2
 6618              	.LVL568:
2637:src/keys.c    **** 	   goto search;
 6619              		.loc 1 2637 7 view .LVU1990
 6620 0278 013D     		subs	r5, r5, #1
 6621 027a EDB2     		uxtb	r5, r5
2637:src/keys.c    **** 	   goto search;
ARM GAS  /tmp/cc8xFAqJ.s 			page 204


 6622              		.loc 1 2637 6 view .LVU1991
 6623 027c 3D77     		strb	r5, [r7, #28]
 6624 027e 002D     		cmp	r5, #0
 6625 0280 7FF4F3AE 		bne	.L646
 6626 0284 D9F80040 		ldr	r4, [r9]
 6627 0288 2AE7     		b	.L647
 6628              	.LVL569:
 6629              	.L734:
2654:src/keys.c    ****        goto set_pos;
 6630              		.loc 1 2654 3 is_stmt 1 view .LVU1992
 6631 028a 013D     		subs	r5, r5, #1
 6632              	.LVL570:
2655:src/keys.c    **** 
 6633              		.loc 1 2655 8 view .LVU1993
 6634 028c 1AE7     		b	.L649
 6635              	.LVL571:
 6636              	.L733:
2655:src/keys.c    **** 
 6637              		.loc 1 2655 8 is_stmt 0 view .LVU1994
 6638 028e FFF7FEFF 		bl	current_catalogue
 6639              	.LVL572:
2655:src/keys.c    **** 
 6640              		.loc 1 2655 8 view .LVU1995
 6641 0292 0446     		mov	r4, r0
 6642 0294 75E7     		b	.L639
 6643              	.LVL573:
 6644              	.L739:
2702:src/keys.c    ****        init_cat(CATALOGUE_NONE);
 6645              		.loc 1 2702 19 discriminator 1 view .LVU1996
 6646 0296 BAF1130F 		cmp	r10, #19
 6647 029a D8D1     		bne	.L663
2703:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
 6648              		.loc 1 2703 8 is_stmt 1 view .LVU1997
 6649 029c 0020     		movs	r0, #0
 6650              	.LVL574:
2703:src/keys.c    ****        return OP_NIL | OP_SIGMACLEAR;
 6651              		.loc 1 2703 8 is_stmt 0 view .LVU1998
 6652 029e FFF7FEFF 		bl	init_cat
 6653              	.LVL575:
2704:src/keys.c    ****      }
 6654              		.loc 1 2704 8 is_stmt 1 view .LVU1999
2704:src/keys.c    ****      }
 6655              		.loc 1 2704 15 is_stmt 0 view .LVU2000
 6656 02a2 40F23D10 		movw	r0, #317
 6657 02a6 47E7     		b	.L628
 6658              	.L640:
 6659              	.LBB607:
2629:src/keys.c    **** 	 }
 6660              		.loc 1 2629 5 is_stmt 1 view .LVU2001
 6661              	.LBB590:
 6662              	.LBB591:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 6663              		.loc 1 705 5 is_stmt 0 view .LVU2002
 6664 02a8 C4F30723 		ubfx	r3, r4, #8, #8
 6665 02ac 012B     		cmp	r3, #1
 6666              	.LBE591:
 6667              	.LBE590:
ARM GAS  /tmp/cc8xFAqJ.s 			page 205


2629:src/keys.c    **** 	 }
 6668              		.loc 1 2629 12 view .LVU2003
 6669 02ae 2046     		mov	r0, r4
 6670              	.LVL576:
 6671              	.LBB593:
 6672              	.LBI590:
 704:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 6673              		.loc 1 704 12 is_stmt 1 view .LVU2004
 6674              	.LBB592:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 6675              		.loc 1 705 2 view .LVU2005
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 6676              		.loc 1 705 5 is_stmt 0 view .LVU2006
 6677 02b0 7FF442AF 		bne	.L628
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 6678              		.loc 1 705 5 view .LVU2007
 6679 02b4 FFF7FEFF 		bl	check_confirm.part.0
 6680              	.LVL577:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 6681              		.loc 1 705 5 view .LVU2008
 6682 02b8 3EE7     		b	.L628
 6683              	.LVL578:
 6684              	.L641:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 6685              		.loc 1 705 5 view .LVU2009
 6686              	.LBE592:
 6687              	.LBE593:
 6688              	.LBB594:
2622:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 6689              		.loc 1 2622 7 is_stmt 1 view .LVU2010
2622:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 6690              		.loc 1 2622 14 is_stmt 0 view .LVU2011
 6691 02ba 2046     		mov	r0, r4
 6692 02bc 3CE7     		b	.L628
 6693              	.LVL579:
 6694              	.L656:
2622:src/keys.c    **** 	   if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 6695              		.loc 1 2622 14 view .LVU2012
 6696 02be 0C48     		ldr	r0, .L742+20
 6697              	.LBE594:
 6698              	.LBE607:
2600:src/keys.c    ****    int pos = State.catpos;
 6699              		.loc 1 2600 93 view .LVU2013
 6700 02c0 40F28522 		movw	r2, #645
 6701 02c4 0146     		mov	r1, r0
 6702 02c6 0023     		movs	r3, #0
 6703 02c8 01E0     		b	.L658
 6704              	.LVL580:
 6705              	.L741:
2600:src/keys.c    ****    int pos = State.catpos;
 6706              		.loc 1 2600 93 view .LVU2014
 6707 02ca 31F8022F 		ldrh	r2, [r1, #2]!
 6708              	.LVL581:
 6709              	.L658:
 6710              	.LBB608:
2692:src/keys.c    **** 	   return conv_mapping[i^1];
 6711              		.loc 1 2692 3 is_stmt 1 view .LVU2015
ARM GAS  /tmp/cc8xFAqJ.s 			page 206


2691:src/keys.c    **** 	 if (op == conv_mapping[i])
 6712              		.loc 1 2691 72 view .LVU2016
2692:src/keys.c    **** 	   return conv_mapping[i^1];
 6713              		.loc 1 2692 6 is_stmt 0 view .LVU2017
 6714 02ce A242     		cmp	r2, r4
 6715 02d0 1ED0     		beq	.L740
2691:src/keys.c    **** 	 if (op == conv_mapping[i])
 6716              		.loc 1 2691 72 discriminator 2 view .LVU2018
 6717 02d2 0133     		adds	r3, r3, #1
 6718              	.LVL582:
2691:src/keys.c    **** 	 if (op == conv_mapping[i])
 6719              		.loc 1 2691 20 is_stmt 1 discriminator 2 view .LVU2019
2691:src/keys.c    **** 	 if (op == conv_mapping[i])
 6720              		.loc 1 2691 8 is_stmt 0 discriminator 2 view .LVU2020
 6721 02d4 0C2B     		cmp	r3, #12
 6722 02d6 F8D1     		bne	.L741
 6723 02d8 2DE7     		b	.L726
 6724              	.L743:
 6725 02da 00BF     		.align	2
 6726              	.L742:
 6727 02dc 00000000 		.word	StateWhileOn
 6728 02e0 00000000 		.word	.LANCHOR8
 6729 02e4 00000000 		.word	.LANCHOR6
 6730 02e8 00000000 		.word	.LANCHOR15
 6731 02ec 00080800 		.word	526336
 6732 02f0 00000000 		.word	.LANCHOR14
 6733 02f4 00000000 		.word	main_ram
 6734 02f8 1F000000 		.word	StateWhileOn+31
 6735              	.LVL583:
 6736              	.L644:
2691:src/keys.c    **** 	 if (op == conv_mapping[i])
 6737              		.loc 1 2691 8 discriminator 2 view .LVU2021
 6738              	.LBE608:
 6739              	.LBB609:
 6740              	.LBB595:
2626:src/keys.c    **** 	 }
 6741              		.loc 1 2626 7 is_stmt 1 view .LVU2022
 6742              	.LBB587:
 6743              	.LBI587:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 6744              		.loc 1 552 13 view .LVU2023
 6745              	.LBB588:
 553:src/keys.c    **** 		return;
 6746              		.loc 1 553 2 view .LVU2024
 553:src/keys.c    **** 		return;
 6747              		.loc 1 553 6 is_stmt 0 view .LVU2025
 6748 02fc FFF7FEFF 		bl	is_bad_cmdline
 6749              	.LVL584:
 553:src/keys.c    **** 		return;
 6750              		.loc 1 553 5 view .LVU2026
 6751 0300 0028     		cmp	r0, #0
 6752 0302 7FF418AF 		bne	.L726
 6753 0306 2846     		mov	r0, r5
 6754 0308 FFF7FEFF 		bl	init_arg.part.0
 6755              	.LVL585:
 6756              	.LBE588:
 6757              	.LBE587:
ARM GAS  /tmp/cc8xFAqJ.s 			page 207


 6758              	.LBE595:
 6759              	.LBE609:
2633:src/keys.c    **** 
 6760              		.loc 1 2633 15 view .LVU2027
 6761 030c 3320     		movs	r0, #51
 6762 030e 13E7     		b	.L628
 6763              	.LVL586:
 6764              	.L740:
 6765              	.LBB610:
2693:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 6766              		.loc 1 2693 5 is_stmt 1 view .LVU2028
2693:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 6767              		.loc 1 2693 26 is_stmt 0 view .LVU2029
 6768 0310 83F00103 		eor	r3, r3, #1
 6769              	.LVL587:
2693:src/keys.c    ****        return STATE_UNFINISHED;		// Unreached
 6770              		.loc 1 2693 24 view .LVU2030
 6771 0314 30F81300 		ldrh	r0, [r0, r3, lsl #1]
 6772 0318 0EE7     		b	.L628
 6773              	.LBE610:
 6774              		.cfi_endproc
 6775              	.LFE48:
 6777              		.section	.text.find_pos,"ax",%progbits
 6778              		.align	1
 6779              		.p2align 2,,3
 6780              		.global	find_pos
 6781              		.syntax unified
 6782              		.thumb
 6783              		.thumb_func
 6784              		.fpu fpv4-sp-d16
 6786              	find_pos:
 6787              	.LVL588:
 6788              	.LFB49:
2753:src/keys.c    **** 	int pos;
 6789              		.loc 1 2753 32 is_stmt 1 view -0
 6790              		.cfi_startproc
 6791              		@ args = 0, pretend = 0, frame = 16
 6792              		@ frame_needed = 0, uses_anonymous_args = 0
2754:src/keys.c    **** 	const int ctmax = current_catalogue_max();
 6793              		.loc 1 2754 2 view .LVU2032
2755:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 6794              		.loc 1 2755 2 view .LVU2033
 6795              	.LBB611:
 6796              	.LBI611:
2455:src/keys.c    **** 	// A quick table of catalogue sizes
 6797              		.loc 1 2455 5 view .LVU2034
 6798              	.LBB612:
2458:src/keys.c    **** 	{
 6799              		.loc 1 2458 2 view .LVU2035
2489:src/keys.c    **** #endif
 6800              		.loc 1 2489 2 view .LVU2036
 6801              	.LBE612:
 6802              	.LBE611:
2753:src/keys.c    **** 	int pos;
 6803              		.loc 1 2753 32 is_stmt 0 view .LVU2037
 6804 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 6805              		.cfi_def_cfa_offset 32
ARM GAS  /tmp/cc8xFAqJ.s 			page 208


 6806              		.cfi_offset 4, -32
 6807              		.cfi_offset 5, -28
 6808              		.cfi_offset 6, -24
 6809              		.cfi_offset 7, -20
 6810              		.cfi_offset 8, -16
 6811              		.cfi_offset 9, -12
 6812              		.cfi_offset 10, -8
 6813              		.cfi_offset 14, -4
 6814              	.LBB614:
 6815              	.LBB613:
2489:src/keys.c    **** #endif
 6816              		.loc 1 2489 31 view .LVU2038
 6817 0004 1E4B     		ldr	r3, .L761
2489:src/keys.c    **** #endif
 6818              		.loc 1 2489 24 view .LVU2039
 6819 0006 1F4A     		ldr	r2, .L761+4
2489:src/keys.c    **** #endif
 6820              		.loc 1 2489 31 view .LVU2040
 6821 0008 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2489:src/keys.c    **** #endif
 6822              		.loc 1 2489 24 view .LVU2041
 6823 000a 12F803A0 		ldrb	r10, [r2, r3]	@ zero_extendqisi2
 6824              	.LVL589:
2489:src/keys.c    **** #endif
 6825              		.loc 1 2489 24 view .LVU2042
 6826              	.LBE613:
 6827              	.LBE614:
2756:src/keys.c    **** 		char buf[16];
 6828              		.loc 1 2756 2 is_stmt 1 view .LVU2043
2756:src/keys.c    **** 		char buf[16];
 6829              		.loc 1 2756 16 view .LVU2044
2753:src/keys.c    **** 	int pos;
 6830              		.loc 1 2753 32 is_stmt 0 view .LVU2045
 6831 000e 84B0     		sub	sp, sp, #16
 6832              		.cfi_def_cfa_offset 48
2756:src/keys.c    **** 		char buf[16];
 6833              		.loc 1 2756 2 view .LVU2046
 6834 0010 BAF1000F 		cmp	r10, #0
 6835 0014 32D0     		beq	.L751
 6836 0016 8146     		mov	r9, r0
2756:src/keys.c    **** 		char buf[16];
 6837              		.loc 1 2756 11 view .LVU2047
 6838 0018 4FF00008 		mov	r8, #0
 6839 001c C0F10107 		rsb	r7, r0, #1
 6840              	.LVL590:
 6841              	.L750:
 6842              	.LBB615:
2757:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
 6843              		.loc 1 2757 3 is_stmt 1 view .LVU2048
2758:src/keys.c    **** 		int i;
 6844              		.loc 1 2758 3 view .LVU2049
2758:src/keys.c    **** 		int i;
 6845              		.loc 1 2758 21 is_stmt 0 view .LVU2050
 6846 0020 4046     		mov	r0, r8
 6847 0022 FFF7FEFF 		bl	current_catalogue
 6848              	.LVL591:
 6849 0026 6946     		mov	r1, sp
ARM GAS  /tmp/cc8xFAqJ.s 			page 209


 6850 0028 FFF7FEFF 		bl	catcmd
 6851              	.LVL592:
 6852 002c 0646     		mov	r6, r0
 6853              	.LVL593:
2759:src/keys.c    **** 
 6854              		.loc 1 2759 3 is_stmt 1 view .LVU2051
2761:src/keys.c    **** 			cmd++;
 6855              		.loc 1 2761 3 view .LVU2052
2762:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 6856              		.loc 1 2762 4 view .LVU2053
2761:src/keys.c    **** 			cmd++;
 6857              		.loc 1 2761 7 is_stmt 0 view .LVU2054
 6858 002e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 6859              	.LVL594:
2761:src/keys.c    **** 			cmd++;
 6860              		.loc 1 2761 6 view .LVU2055
 6861 0030 1428     		cmp	r0, #20
 6862 0032 04BF     		itt	eq
 6863 0034 7078     		ldrbeq	r0, [r6, #1]	@ zero_extendqisi2
2762:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 6864              		.loc 1 2762 7 view .LVU2056
 6865 0036 0136     		addeq	r6, r6, #1
 6866              	.LVL595:
2763:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6867              		.loc 1 2763 3 is_stmt 1 view .LVU2057
2763:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6868              		.loc 1 2763 13 view .LVU2058
2763:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6869              		.loc 1 2763 3 is_stmt 0 view .LVU2059
 6870 0038 A8B1     		cbz	r0, .L752
 6871 003a 09F1FF33 		add	r3, r9, #-1
 6872 003e 04E0     		b	.L749
 6873              	.LVL596:
 6874              	.L760:
 6875              	.LBB616:
2768:src/keys.c    **** 				break;
 6876              		.loc 1 2768 12 view .LVU2060
 6877 0040 12DB     		blt	.L747
 6878              	.LBE616:
2763:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6879              		.loc 1 2763 16 discriminator 2 view .LVU2061
 6880 0042 16F8010F 		ldrb	r0, [r6, #1]!	@ zero_extendqisi2
 6881              	.LVL597:
2763:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6882              		.loc 1 2763 16 discriminator 2 view .LVU2062
 6883 0046 3C44     		add	r4, r4, r7
2763:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6884              		.loc 1 2763 3 discriminator 2 view .LVU2063
 6885 0048 B0B1     		cbz	r0, .L759
 6886              	.LVL598:
 6887              	.L749:
 6888              	.LBB617:
2764:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 6889              		.loc 1 2764 4 is_stmt 1 view .LVU2064
 6890 004a 5C1C     		adds	r4, r3, #1
2764:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 6891              		.loc 1 2764 18 is_stmt 0 view .LVU2065
ARM GAS  /tmp/cc8xFAqJ.s 			page 210


 6892 004c FFF7FEFF 		bl	remap_chars
 6893              	.LVL599:
 6894 0050 0546     		mov	r5, r0
2765:src/keys.c    **** 			if (c > cl)
 6895              		.loc 1 2765 19 view .LVU2066
 6896 0052 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 6897              	.LVL600:
2765:src/keys.c    **** 			if (c > cl)
 6898              		.loc 1 2765 4 is_stmt 1 view .LVU2067
2765:src/keys.c    **** 			if (c > cl)
 6899              		.loc 1 2765 19 is_stmt 0 view .LVU2068
 6900 0054 FFF7FEFF 		bl	remap_chars
 6901              	.LVL601:
2768:src/keys.c    **** 				break;
 6902              		.loc 1 2768 9 is_stmt 1 view .LVU2069
 6903              	.LBE617:
2763:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6904              		.loc 1 2763 29 view .LVU2070
2763:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6905              		.loc 1 2763 13 view .LVU2071
 6906              	.LBB618:
2766:src/keys.c    **** 				return pos;
 6907              		.loc 1 2766 4 view .LVU2072
2766:src/keys.c    **** 				return pos;
 6908              		.loc 1 2766 7 is_stmt 0 view .LVU2073
 6909 0058 8542     		cmp	r5, r0
 6910 005a 2346     		mov	r3, r4
 6911 005c F0DD     		ble	.L760
 6912              	.LVL602:
 6913              	.L744:
2766:src/keys.c    **** 				return pos;
 6914              		.loc 1 2766 7 view .LVU2074
 6915              	.LBE618:
 6916              	.LBE615:
2775:src/keys.c    **** 
 6917              		.loc 1 2775 1 view .LVU2075
 6918 005e 4046     		mov	r0, r8
 6919 0060 04B0     		add	sp, sp, #16
 6920              		.cfi_remember_state
 6921              		.cfi_def_cfa_offset 32
 6922              		@ sp needed
 6923 0062 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 6924              	.LVL603:
 6925              	.L752:
 6926              		.cfi_restore_state
 6927              	.LBB619:
2763:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 6928              		.loc 1 2763 3 view .LVU2076
 6929 0066 4C46     		mov	r4, r9
 6930              	.LVL604:
 6931              	.L747:
2771:src/keys.c    **** 			return pos;
 6932              		.loc 1 2771 3 is_stmt 1 view .LVU2077
2771:src/keys.c    **** 			return pos;
 6933              		.loc 1 2771 6 is_stmt 0 view .LVU2078
 6934 0068 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 6935 006a 002B     		cmp	r3, #0
ARM GAS  /tmp/cc8xFAqJ.s 			page 211


 6936 006c F7D0     		beq	.L744
 6937              	.LBE619:
2756:src/keys.c    **** 		char buf[16];
 6938              		.loc 1 2756 29 is_stmt 1 view .LVU2079
 6939 006e 08F10108 		add	r8, r8, #1
 6940              	.LVL605:
2756:src/keys.c    **** 		char buf[16];
 6941              		.loc 1 2756 16 view .LVU2080
2756:src/keys.c    **** 		char buf[16];
 6942              		.loc 1 2756 2 is_stmt 0 view .LVU2081
 6943 0072 D045     		cmp	r8, r10
 6944 0074 D4D1     		bne	.L750
 6945 0076 F2E7     		b	.L744
 6946              	.LVL606:
 6947              	.L759:
2756:src/keys.c    **** 		char buf[16];
 6948              		.loc 1 2756 2 view .LVU2082
 6949 0078 4C44     		add	r4, r4, r9
 6950 007a F5E7     		b	.L747
 6951              	.LVL607:
 6952              	.L751:
2756:src/keys.c    **** 		char buf[16];
 6953              		.loc 1 2756 11 view .LVU2083
 6954 007c D046     		mov	r8, r10
 6955 007e EEE7     		b	.L744
 6956              	.L762:
 6957              		.align	2
 6958              	.L761:
 6959 0080 00000000 		.word	StateWhileOn
 6960 0084 00000000 		.word	.LANCHOR8
 6961              		.cfi_endproc
 6962              	.LFE49:
 6964              		.section	.text.get_alpha_state,"ax",%progbits
 6965              		.align	1
 6966              		.p2align 2,,3
 6967              		.global	get_alpha_state
 6968              		.syntax unified
 6969              		.thumb
 6970              		.thumb_func
 6971              		.fpu fpv4-sp-d16
 6973              	get_alpha_state:
 6974              	.LFB61:
3100:src/keys.c    **** 
3101:src/keys.c    **** 
3102:src/keys.c    **** static int process_registerlist(const keycode c) {
3103:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
3104:src/keys.c    **** 	enum shifts shift = reset_shift();
3105:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
3106:src/keys.c    **** 	const int g_max = global_regs();
3107:src/keys.c    **** 
3108:src/keys.c    **** 	if (n == LOCAL_REG_BASE) {	// '.'
3109:src/keys.c    **** 		if (local_regs())
3110:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
3111:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
3112:src/keys.c    **** 		goto reset_window;
3113:src/keys.c    **** 	}
3114:src/keys.c    **** 	else if (n <= 9) {
ARM GAS  /tmp/cc8xFAqJ.s 			page 212


3115:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
3116:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
3117:src/keys.c    **** 			dv = n;
3118:src/keys.c    **** 		State2.digval = dv;
3119:src/keys.c    **** 		goto reset_window;
3120:src/keys.c    **** 	}
3121:src/keys.c    **** 	else if ((shift == SHIFT_F || shift == SHIFT_G) && c == K21) {  // <( )>
3122:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
3123:src/keys.c    **** 		set_smode(SDISP_SHOW);
3124:src/keys.c    **** 	}
3125:src/keys.c    **** 	else if (n != NO_REG) {
3126:src/keys.c    **** 		State2.digval = n;
3127:src/keys.c    **** 		goto reset_window;
3128:src/keys.c    **** 	}
3129:src/keys.c    **** 
3130:src/keys.c    **** 	switch (c) {
3131:src/keys.c    **** 	case K_DOWN:
3132:src/keys.c    **** 		if (State2.digval > 0) {
3133:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
3134:src/keys.c    **** 				State2.digval = global_regs();
3135:src/keys.c    **** 			--State2.digval;
3136:src/keys.c    **** 		}
3137:src/keys.c    **** 		else
3138:src/keys.c    **** 			State2.digval = max - 1;
3139:src/keys.c    **** 		goto reset_window;
3140:src/keys.c    **** 
3141:src/keys.c    **** 	case K_UP:
3142:src/keys.c    **** 		if (State2.digval < max - 1) {
3143:src/keys.c    **** 			State2.digval++;
3144:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
3145:src/keys.c    **** 				State2.digval = regX_idx;
3146:src/keys.c    **** 		}
3147:src/keys.c    **** 		else	
3148:src/keys.c    **** 			State2.digval = 0;
3149:src/keys.c    **** 		goto reset_window;
3150:src/keys.c    **** 
3151:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
3152:src/keys.c    **** 	case K04:
3153:src/keys.c    **** 		State2.digval2 = ! State2.digval2 && ! State2.local;
3154:src/keys.c    **** 		goto reset_window;
3155:src/keys.c    **** #endif
3156:src/keys.c    **** 
3157:src/keys.c    **** 	case K24:			
3158:src/keys.c    **** 	//case K60:
3159:src/keys.c    **** 		if (State2.disp_temp)
3160:src/keys.c    **** 			return STATE_UNFINISHED;
3161:src/keys.c    **** 		break;		// Exit doing nothing
3162:src/keys.c    **** 
3163:src/keys.c    **** 	case K20:		// ENTER
3164:src/keys.c    **** 		if (shift == SHIFT_F) {
3165:src/keys.c    **** 			State2.disp_as_alpha = 1;
3166:src/keys.c    **** 			goto reset_window;
3167:src/keys.c    **** 		}
3168:src/keys.c    **** 	case K11:		// RCL
3169:src/keys.c    **** 		if ( shift == SHIFT_N ) {
3170:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
3171:src/keys.c    **** 			n = RARG( State2.digval2 ? RARG_FLRCL : RARG_RCL, State2.digval );
ARM GAS  /tmp/cc8xFAqJ.s 			page 213


3172:src/keys.c    **** #else
3173:src/keys.c    **** 			n = RARG( RARG_RCL, State2.digval );
3174:src/keys.c    **** #endif
3175:src/keys.c    **** 			State2.registerlist = 0;
3176:src/keys.c    **** 			State2.digval = 0;
3177:src/keys.c    **** 			State2.digval2 = 0;
3178:src/keys.c    **** 			return n;
3179:src/keys.c    **** 		}
3180:src/keys.c    **** 	default:
3181:src/keys.c    **** 		return STATE_UNFINISHED;
3182:src/keys.c    **** 	}
3183:src/keys.c    **** 	State2.registerlist = 0;
3184:src/keys.c    **** 	State2.digval = 0;
3185:src/keys.c    **** 	State2.digval2 = 0;
3186:src/keys.c    **** reset_window:
3187:src/keys.c    **** 	State2.window = 0;
3188:src/keys.c    **** 	return STATE_UNFINISHED;
3189:src/keys.c    **** }
3190:src/keys.c    **** 
3191:src/keys.c    **** 
3192:src/keys.c    **** static int process(const int c) {
3193:src/keys.c    ****   const enum shifts shift = cur_shift();
3194:src/keys.c    ****   enum catalogues cat;
3195:src/keys.c    **** 
3196:src/keys.c    ****   if (Running || Pause) {
3197:src/keys.c    ****     /*
3198:src/keys.c    ****      *  Abort a running program with R/S or EXIT
3199:src/keys.c    ****      */
3200:src/keys.c    ****     if (c == K60 || c == K63) {
3201:src/keys.c    ****       if (Pause && isXROM(state_pc()))
3202:src/keys.c    **** 	set_pc(0);
3203:src/keys.c    ****       Pause = 0;
3204:src/keys.c    ****       xeq_xrom();
3205:src/keys.c    ****       set_running_off();
3206:src/keys.c    ****       DispMsg = "Stopped";
3207:src/keys.c    ****       State2.disp_freeze = 0;
3208:src/keys.c    ****       return STATE_UNFINISHED;
3209:src/keys.c    ****     }
3210:src/keys.c    ****     if ( c != K_HEARTBEAT ) {
3211:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
3212:src/keys.c    ****       Pause = 0;			// leave PSE statement
3213:src/keys.c    ****       GoFast = 1;
3214:src/keys.c    ****     }
3215:src/keys.c    ****     // continue execution if really running, else ignore (PSE)
3216:src/keys.c    ****     return STATE_RUNNING;
3217:src/keys.c    ****   }
3218:src/keys.c    **** 
3219:src/keys.c    ****   /* Check for ON in the unshifted state -- this is a reset sequence
3220:src/keys.c    ****    * common across all modes.  Shifted modes need to check this themselves
3221:src/keys.c    ****    * if required.
3222:src/keys.c    ****    */
3223:src/keys.c    **** #ifdef DM42
3224:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue && ! State2.arrow && ! State2.alphas)
3225:src/keys.c    **** #else
3226:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue)
3227:src/keys.c    **** #endif
3228:src/keys.c    ****     {
ARM GAS  /tmp/cc8xFAqJ.s 			page 214


3229:src/keys.c    **** #ifdef INCLUDE_C_LOCK
3230:src/keys.c    ****       if (C_LOCKED) {
3231:src/keys.c    **** 	stack_restore();
3232:src/keys.c    **** 	CLEAR_REAL;
3233:src/keys.c    **** 	CLEAR_IMAG;
3234:src/keys.c    ****       }
3235:src/keys.c    **** #endif
3236:src/keys.c    ****       soft_init_state();
3237:src/keys.c    ****       return STATE_UNFINISHED;
3238:src/keys.c    ****     }
3239:src/keys.c    **** 
3240:src/keys.c    **** #ifndef CONSOLE
3241:src/keys.c    **** 	if (c == K63 && JustStopped) {
3242:src/keys.c    **** 		// Avoid an accidental restart with R/S
3243:src/keys.c    **** 		JustStopped = 0;
3244:src/keys.c    **** 		return STATE_IGNORE;
3245:src/keys.c    **** 	}
3246:src/keys.c    **** #endif
3247:src/keys.c    **** 	/*  Handle the keyboard timeout for catalogue navigation
3248:src/keys.c    **** 	 *  Must be done early in the process to capture the shifts correctly
3249:src/keys.c    **** 	 */
3250:src/keys.c    **** 	if (State2.catalogue && Keyticks > 30)
3251:src/keys.c    **** 		CmdLineLength = 0;
3252:src/keys.c    **** 	/*
3253:src/keys.c    **** 	 *  Process the various cases
3254:src/keys.c    **** 	 *  The handlers in this block here do not handle shifts at all or do it themselves
3255:src/keys.c    **** 	 */
3256:src/keys.c    **** 	if (State2.confirm)
3257:src/keys.c    **** 		return process_confirm((const keycode)c);
3258:src/keys.c    **** 
3259:src/keys.c    **** 	if (State2.rarg)
3260:src/keys.c    **** 		return process_arg((const keycode)c);
3261:src/keys.c    **** 
3262:src/keys.c    **** 	if (State2.gtodot)
3263:src/keys.c    **** 		return process_gtodot((const keycode)c);
3264:src/keys.c    **** 
3265:src/keys.c    **** 	if (State2.hyp)
3266:src/keys.c    **** 		return process_hyp((const keycode)c);
3267:src/keys.c    **** 
3268:src/keys.c    **** 	if (State2.test != TST_NONE)
3269:src/keys.c    **** 		return process_test((const keycode)c);
3270:src/keys.c    **** 
3271:src/keys.c    **** 	if (State2.status)
3272:src/keys.c    **** 		return process_status((const keycode)c);
3273:src/keys.c    **** 
3274:src/keys.c    **** 	/*
3275:src/keys.c    **** 	 *  Process shift keys directly
3276:src/keys.c    **** 	 */
3277:src/keys.c    **** 	if (c == K_F) {
3278:src/keys.c    **** 		toggle_shift(SHIFT_F);
3279:src/keys.c    **** 		return STATE_UNFINISHED;
3280:src/keys.c    **** 	}
3281:src/keys.c    **** 	if (c == K_G) {
3282:src/keys.c    **** 		toggle_shift(SHIFT_G);
3283:src/keys.c    **** 		return STATE_UNFINISHED;
3284:src/keys.c    **** 	}
3285:src/keys.c    **** 	if (c == K_H) {
ARM GAS  /tmp/cc8xFAqJ.s 			page 215


3286:src/keys.c    **** 		toggle_shift(SHIFT_H);
3287:src/keys.c    **** 		State2.arrow = 0;
3288:src/keys.c    **** 		return STATE_UNFINISHED;
3289:src/keys.c    **** 	}
3290:src/keys.c    **** 	/*
3291:src/keys.c    **** 	 *  The handlers in this block need to call reset_shift somewhere
3292:src/keys.c    **** 	 */
3293:src/keys.c    **** 	// print_debug (2, c);
3294:src/keys.c    **** 	if (State2.arrow)
3295:src/keys.c    **** 		return process_arrow((const keycode)c);
3296:src/keys.c    **** 
3297:src/keys.c    **** 	/*
3298:src/keys.c    **** 	 * Here the keys are mapped to catalogues
3299:src/keys.c    **** 	 * The position of this code decides where catalogue switching
3300:src/keys.c    **** 	 * works and were not
3301:src/keys.c    **** 	 */
3302:src/keys.c    **** 	cat = keycode_to_cat((keycode)c, shift);
3303:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
3304:src/keys.c    **** 		if (is_bad_cmdline())
3305:src/keys.c    **** 			return STATE_UNFINISHED;
3306:src/keys.c    **** 		init_cat( CATALOGUE_NONE );
3307:src/keys.c    **** 		init_cat( cat );
3308:src/keys.c    **** 		return STATE_UNFINISHED;
3309:src/keys.c    **** 	}
3310:src/keys.c    **** 
3311:src/keys.c    **** 	/*
3312:src/keys.c    **** 	 *  More handlers...
3313:src/keys.c    **** 	 */
3314:src/keys.c    **** 	if (State2.multi)
3315:src/keys.c    **** 		return process_multi((const keycode)c);
3316:src/keys.c    **** 
3317:src/keys.c    **** 	if (State2.labellist)
3318:src/keys.c    **** 		return process_labellist((const keycode)c);
3319:src/keys.c    **** 
3320:src/keys.c    **** 	if (State2.registerlist)
3321:src/keys.c    **** 		return process_registerlist((const keycode)c);
3322:src/keys.c    **** 
3323:src/keys.c    **** 	if (State2.catalogue)
3324:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
3325:src/keys.c    **** 
3326:src/keys.c    **** 	if (State2.alphas) {
3327:src/keys.c    **** #ifndef INFRARED
3328:src/keys.c    **** 		return process_alpha((const keycode)c);
3329:src/keys.c    **** #else
3330:src/keys.c    **** 		int i = process_alpha((const keycode)c);
3331:src/keys.c    **** 		if (! State2.alphas && get_user_flag(T_FLAG)) {
3332:src/keys.c    **** 			print_tab(0);
3333:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
3334:src/keys.c    **** 		}
3335:src/keys.c    **** 		return i;
3336:src/keys.c    **** #endif
3337:src/keys.c    **** 	}
3338:src/keys.c    **** #ifdef INCLUDE_C_LOCK
3339:src/keys.c    **** 	if (C_LOCKED) {
3340:src/keys.c    **** 		return process_c_lock ((const keycode)c);
3341:src/keys.c    **** 	}
3342:src/keys.c    **** #endif
ARM GAS  /tmp/cc8xFAqJ.s 			page 216


3343:src/keys.c    **** 	if (State2.cmplx) {
3344:src/keys.c    **** 		return process_cmplx((const keycode)c);
3345:src/keys.c    **** 	} else {
3346:src/keys.c    **** 		if (shift == SHIFT_F || shift == SHIFT_G)
3347:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
3348:src/keys.c    **** 		if (shift == SHIFT_H)
3349:src/keys.c    **** 			return process_h_shifted((const keycode)c);
3350:src/keys.c    **** 		// print_debug (3, c);
3351:src/keys.c    **** 		return process_normal((const keycode)c);
3352:src/keys.c    **** 	}
3353:src/keys.c    **** }
3354:src/keys.c    **** 
3355:src/keys.c    ****  unsigned int get_alpha_state ( void ) {
 6975              		.loc 1 3355 40 is_stmt 1 view -0
 6976              		.cfi_startproc
 6977              		@ args = 0, pretend = 0, frame = 0
 6978              		@ frame_needed = 0, uses_anonymous_args = 0
 6979              		@ link register save eliminated.
3356:src/keys.c    ****    return (State2.alphas || State2.confirm || State2.status || State2.labellist
 6980              		.loc 1 3356 4 view .LVU2085
 6981              		.loc 1 3356 53 is_stmt 0 view .LVU2086
 6982 0000 074B     		ldr	r3, .L768
 6983              		.loc 1 3356 44 view .LVU2087
 6984 0002 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 6985 0004 1AB9     		cbnz	r2, .L766
3357:src/keys.c    **** 	   || State2.rarg || State2.registerlist || State2.multi 
3358:src/keys.c    **** 	   || State2.gtodot || State2.catalogue || (State2.test != TST_NONE));
 6986              		.loc 1 3358 5 discriminator 2 view .LVU2088
 6987 0006 5969     		ldr	r1, [r3, #20]
 6988 0008 064A     		ldr	r2, .L768+4
 6989 000a 0A40     		ands	r2, r2, r1
 6990 000c 0AB1     		cbz	r2, .L767
 6991              	.L766:
 6992 000e 0120     		movs	r0, #1
3359:src/keys.c    ****  }
 6993              		.loc 1 3359 2 view .LVU2089
 6994 0010 7047     		bx	lr
 6995              	.L767:
3358:src/keys.c    ****  }
 6996              		.loc 1 3358 42 discriminator 3 view .LVU2090
 6997 0012 D889     		ldrh	r0, [r3, #14]
 6998 0014 B0F5E060 		subs	r0, r0, #1792
 6999 0018 18BF     		it	ne
 7000 001a 0120     		movne	r0, #1
 7001 001c 7047     		bx	lr
 7002              	.L769:
 7003 001e 00BF     		.align	2
 7004              	.L768:
 7005 0020 00000000 		.word	StateWhileOn
 7006 0024 0709280C 		.word	203950343
 7007              		.cfi_endproc
 7008              	.LFE61:
 7010              		.section	.rodata.process_keycode.str1.4,"aMS",%progbits,1
 7011              		.align	2
 7012              	.LC0:
 7013 0000 52554E00 		.ascii	"RUN\000"
 7014              		.align	2
ARM GAS  /tmp/cc8xFAqJ.s 			page 217


 7015              	.LC1:
 7016 0004 4E554C4C 		.ascii	"NULL\000"
 7016      00
 7017 0009 000000   		.align	2
 7018              	.LC2:
 7019 000c 53746F70 		.ascii	"Stopped\000"
 7019      70656400 
 7020              		.section	.text.process_keycode,"ax",%progbits
 7021              		.align	1
 7022              		.p2align 2,,3
 7023              		.global	process_keycode
 7024              		.syntax unified
 7025              		.thumb
 7026              		.thumb_func
 7027              		.fpu fpv4-sp-d16
 7029              	process_keycode:
 7030              	.LVL608:
 7031              	.LFB63:
3360:src/keys.c    **** 
3361:src/keys.c    ****  void process_keycode_with_shift ( struct _ndmap remapped ) {
3362:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
3363:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
3364:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
3365:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
3366:src/keys.c    ****        // Was error just wait for confirmation
3367:src/keys.c    ****        wait_for_key_press();
3368:src/keys.c    ****      }
3369:src/keys.c    ****      start_buzzer_freq(8800); sys_delay(10); stop_buzzer();// End click
3370:src/keys.c    ****      return;
3371:src/keys.c    ****    }
3372:src/keys.c    ****    if (remapped.key_34s == K_OP) {
3373:src/keys.c    ****      nd_opcode = remapped.shift;
3374:src/keys.c    ****      set_shift(SHIFT_N);
3375:src/keys.c    ****    }
3376:src/keys.c    ****    else if (remapped.shift >= 0) set_shift ( remapped.shift );
3377:src/keys.c    ****    process_keycode ( remapped.key_34s );
3378:src/keys.c    ****  }
3379:src/keys.c    ****  
3380:src/keys.c    **** /*
3381:src/keys.c    ****  *  Fed with key codes by the event loop
3382:src/keys.c    ****  */
3383:src/keys.c    **** void process_keycode(int c)
3384:src/keys.c    **** {
 7032              		.loc 1 3384 1 is_stmt 1 view -0
 7033              		.cfi_startproc
 7034              		@ args = 0, pretend = 0, frame = 8
 7035              		@ frame_needed = 0, uses_anonymous_args = 0
3385:src/keys.c    ****   static int was_paused;
 7036              		.loc 1 3385 3 view .LVU2092
3386:src/keys.c    ****   //volatile int cmdline_empty; // volatile because it's uninitialized in some cases
3387:src/keys.c    ****   int cmdline_empty = 0;        // Visual studio chokes in debug mode over the above
 7037              		.loc 1 3387 3 view .LVU2093
3388:src/keys.c    ****   if (was_paused && Pause == 0)
 7038              		.loc 1 3388 3 view .LVU2094
3384:src/keys.c    ****   static int was_paused;
 7039              		.loc 1 3384 1 is_stmt 0 view .LVU2095
 7040 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
ARM GAS  /tmp/cc8xFAqJ.s 			page 218


 7041              		.cfi_def_cfa_offset 36
 7042              		.cfi_offset 4, -36
 7043              		.cfi_offset 5, -32
 7044              		.cfi_offset 6, -28
 7045              		.cfi_offset 7, -24
 7046              		.cfi_offset 8, -20
 7047              		.cfi_offset 9, -16
 7048              		.cfi_offset 10, -12
 7049              		.cfi_offset 11, -8
 7050              		.cfi_offset 14, -4
 7051              		.loc 1 3388 7 view .LVU2096
 7052 0004 B64D     		ldr	r5, .L1401
 7053              		.loc 1 3388 27 view .LVU2097
 7054 0006 B74F     		ldr	r7, .L1401+4
 7055              		.loc 1 3388 6 view .LVU2098
 7056 0008 2B68     		ldr	r3, [r5]
3384:src/keys.c    ****   static int was_paused;
 7057              		.loc 1 3384 1 view .LVU2099
 7058 000a 83B0     		sub	sp, sp, #12
 7059              		.cfi_def_cfa_offset 48
3384:src/keys.c    ****   static int was_paused;
 7060              		.loc 1 3384 1 view .LVU2100
 7061 000c 0446     		mov	r4, r0
 7062              		.loc 1 3388 6 view .LVU2101
 7063 000e 1BB1     		cbz	r3, .L771
 7064              		.loc 1 3388 27 discriminator 1 view .LVU2102
 7065 0010 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7066              		.loc 1 3388 18 discriminator 1 view .LVU2103
 7067 0012 002B     		cmp	r3, #0
 7068 0014 00F0DB81 		beq	.L1313
 7069              	.LVL609:
 7070              	.L771:
3389:src/keys.c    ****     {
3390:src/keys.c    ****     /*
3391:src/keys.c    ****      *  Continue XROM execution after a pause
3392:src/keys.c    ****      */
3393:src/keys.c    ****       xeq_xrom();
3394:src/keys.c    ****     }
3395:src/keys.c    ****   was_paused = Pause;
 7071              		.loc 1 3395 3 is_stmt 1 view .LVU2104
 7072              		.loc 1 3395 14 is_stmt 0 view .LVU2105
 7073 0018 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7074 001a 2B60     		str	r3, [r5]
3396:src/keys.c    ****   if (c == K_NOP)
 7075              		.loc 1 3396 3 is_stmt 1 view .LVU2106
 7076              		.loc 1 3396 6 is_stmt 0 view .LVU2107
 7077 001c 2E2C     		cmp	r4, #46
 7078 001e 00F09B81 		beq	.L1314
3397:src/keys.c    ****     {
3398:src/keys.c    ****       OpCode = 0;
3399:src/keys.c    ****     }
3400:src/keys.c    ****   else if (c == K_HEARTBEAT)
 7079              		.loc 1 3400 8 is_stmt 1 view .LVU2108
 7080              		.loc 1 3400 11 is_stmt 0 view .LVU2109
 7081 0022 622C     		cmp	r4, #98
 7082 0024 70D0     		beq	.L1315
3401:src/keys.c    ****     {
ARM GAS  /tmp/cc8xFAqJ.s 			page 219


3402:src/keys.c    ****     /*
3403:src/keys.c    ****      *  Heartbeat processing goes here.
3404:src/keys.c    ****      *  This is totally thread safe!
3405:src/keys.c    ****      */
3406:src/keys.c    ****     if (Keyticks >= 2) {
3407:src/keys.c    ****       /*
3408:src/keys.c    ****        *  Some time has passed after last key press
3409:src/keys.c    ****        */
3410:src/keys.c    ****       if (OpCode != 0) {
3411:src/keys.c    **** 	/*
3412:src/keys.c    **** 	 *  Handle command display and NULL here
3413:src/keys.c    **** 	 */
3414:src/keys.c    **** 	if (OpCodeDisplayPending) {
3415:src/keys.c    **** 	  /*
3416:src/keys.c    **** 	   *  Show command to the user
3417:src/keys.c    **** 	   */
3418:src/keys.c    **** 	  OpCodeDisplayPending = 0;
3419:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
3420:src/keys.c    **** 	    DispMsg = "RUN";
3421:src/keys.c    **** 	  }
3422:src/keys.c    **** 	  else {
3423:src/keys.c    **** 	    scopy_char(TraceBuffer, prt(OpCode, TraceBuffer), '\0');
3424:src/keys.c    **** 	    DispMsg = TraceBuffer;
3425:src/keys.c    **** 	  }
3426:src/keys.c    **** 	  display();
3427:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
3428:src/keys.c    **** 	}
3429:src/keys.c    ****     else if (Keyticks > 12) {
3430:src/keys.c    **** 	  /*
3431:src/keys.c    **** 	   *  Key is too long held down
3432:src/keys.c    **** 	   */
3433:src/keys.c    **** 	  OpCode = 0;
3434:src/keys.c    **** 	  message("NULL", CNULL);
3435:src/keys.c    **** 	  // Force display update on key-up
3436:src/keys.c    **** 	  State2.disp_temp = 0;
3437:src/keys.c    **** 	}
3438:src/keys.c    ****       }
3439:src/keys.c    ****       if (Keyticks > 12 && shift_down() != SHIFT_N) {
3440:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
3441:src/keys.c    **** 	State2.shifts = SHIFT_N;
3442:src/keys.c    ****       }
3443:src/keys.c    ****     }
3444:src/keys.c    **** 
3445:src/keys.c    ****     /*
3446:src/keys.c    ****      *  Serve the watchdog
3447:src/keys.c    ****      */
3448:src/keys.c    ****     watchdog();
3449:src/keys.c    **** 
3450:src/keys.c    **** #ifndef CONSOLE
3451:src/keys.c    ****     /*
3452:src/keys.c    ****      *  If buffer is empty re-allow R/S to start a program
3453:src/keys.c    ****      */
3454:src/keys.c    ****     if (JustStopped && !is_key_pressed()) {
3455:src/keys.c    ****       JustStopped = 0;
3456:src/keys.c    ****     }
3457:src/keys.c    **** #endif
3458:src/keys.c    **** 
ARM GAS  /tmp/cc8xFAqJ.s 			page 220


3459:src/keys.c    ****     /*
3460:src/keys.c    ****      *  Do nothing if not running a program
3461:src/keys.c    ****      */
3462:src/keys.c    ****     if (!Running && ! Pause)
3463:src/keys.c    ****       return;
3464:src/keys.c    ****   }
3465:src/keys.c    ****   else {
3466:src/keys.c    ****     /*
3467:src/keys.c    ****      *  Not the heartbeat - prepare for execution of any commands
3468:src/keys.c    ****      */
3469:src/keys.c    ****     xeq_init_contexts();
 7083              		.loc 1 3469 5 is_stmt 1 view .LVU2110
3470:src/keys.c    ****     State2.wascomplex = 0;
 7084              		.loc 1 3470 23 is_stmt 0 view .LVU2111
 7085 0026 DFF8D882 		ldr	r8, .L1401+32
3469:src/keys.c    ****     State2.wascomplex = 0;
 7086              		.loc 1 3469 5 view .LVU2112
 7087 002a FFF7FEFF 		bl	xeq_init_contexts
 7088              	.LVL610:
 7089              		.loc 1 3470 5 is_stmt 1 view .LVU2113
 7090              		.loc 1 3470 23 is_stmt 0 view .LVU2114
 7091 002e 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
3471:src/keys.c    **** 
3472:src/keys.c    ****     if (is_dot(RPN)) {
 7092              		.loc 1 3472 9 view .LVU2115
 7093 0032 8D20     		movs	r0, #141
3470:src/keys.c    **** 
 7094              		.loc 1 3470 23 view .LVU2116
 7095 0034 6FF38713 		bfc	r3, #6, #2
 7096 0038 88F81430 		strb	r3, [r8, #20]
 7097              		.loc 1 3472 5 is_stmt 1 view .LVU2117
 7098              		.loc 1 3472 9 is_stmt 0 view .LVU2118
 7099 003c FFF7FEFF 		bl	is_dot
 7100              	.LVL611:
 7101              		.loc 1 3472 8 view .LVU2119
 7102 0040 0028     		cmp	r0, #0
 7103 0042 40F04E82 		bne	.L1316
 7104              	.L789:
3473:src/keys.c    ****       /*
3474:src/keys.c    ****        * Turn off the RPN annunciator as a visual feedback
3475:src/keys.c    ****        */
3476:src/keys.c    ****       clr_dot(RPN);
3477:src/keys.c    ****       finish_RPN(); // RPN
3478:src/keys.c    ****     }
3479:src/keys.c    **** 
3480:src/keys.c    **** #ifndef CONSOLE
3481:src/keys.c    ****     /*
3482:src/keys.c    ****      *  Reallow display refresh which is temporarily disabled after a stop
3483:src/keys.c    ****      *  All keys execpt R/S trigger this. The latter will only be reenabled
3484:src/keys.c    ****      *  from the heartbeat after the keybord buffer has become empty to avoid
3485:src/keys.c    ****      *  an accidental restart of the program.
3486:src/keys.c    ****      */
3487:src/keys.c    ****     if (c != K63)
 7105              		.loc 1 3487 5 is_stmt 1 view .LVU2120
 7106              		.loc 1 3487 8 is_stmt 0 view .LVU2121
 7107 0046 272C     		cmp	r4, #39
 7108 0048 00F04882 		beq	.L1317
ARM GAS  /tmp/cc8xFAqJ.s 			page 221


3488:src/keys.c    ****       JustStopped = 0;
 7109              		.loc 1 3488 7 is_stmt 1 view .LVU2122
 7110              		.loc 1 3488 19 is_stmt 0 view .LVU2123
 7111 004c A64B     		ldr	r3, .L1401+8
 7112 004e 0025     		movs	r5, #0
3489:src/keys.c    **** #endif
3490:src/keys.c    ****   }
3491:src/keys.c    **** 
3492:src/keys.c    ****   /*
3493:src/keys.c    ****    *  Handle key release
3494:src/keys.c    ****    */
3495:src/keys.c    ****   if (c == K_RELEASE)
 7113              		.loc 1 3495 6 view .LVU2124
 7114 0050 632C     		cmp	r4, #99
3488:src/keys.c    ****       JustStopped = 0;
 7115              		.loc 1 3488 19 view .LVU2125
 7116 0052 1D60     		str	r5, [r3]
 7117              		.loc 1 3495 3 is_stmt 1 view .LVU2126
 7118              		.loc 1 3495 6 is_stmt 0 view .LVU2127
 7119 0054 40F08F81 		bne	.L791
3496:src/keys.c    ****     {
3497:src/keys.c    ****     if (OpCode != 0) {
 7120              		.loc 1 3497 5 is_stmt 1 view .LVU2128
 7121              		.loc 1 3497 16 is_stmt 0 view .LVU2129
 7122 0058 A44A     		ldr	r2, .L1401+12
 7123 005a 1368     		ldr	r3, [r2]
 7124              		.loc 1 3497 8 view .LVU2130
 7125 005c 002B     		cmp	r3, #0
 7126 005e 00F05482 		beq	.L792
3498:src/keys.c    ****       /*
3499:src/keys.c    ****        * Execute the key on release
3500:src/keys.c    ****        */
3501:src/keys.c    ****       GoFast = 1;
 7127              		.loc 1 3501 7 is_stmt 1 view .LVU2131
 7128              		.loc 1 3501 14 is_stmt 0 view .LVU2132
 7129 0062 A349     		ldr	r1, .L1401+16
3502:src/keys.c    ****       c = OpCode;
3503:src/keys.c    ****       OpCode = 0;
 7130              		.loc 1 3503 14 view .LVU2133
 7131 0064 1560     		str	r5, [r2]
3501:src/keys.c    ****       c = OpCode;
 7132              		.loc 1 3501 14 view .LVU2134
 7133 0066 0120     		movs	r0, #1
3504:src/keys.c    **** 
3505:src/keys.c    ****       if (c == STATE_SST)
 7134              		.loc 1 3505 10 view .LVU2135
 7135 0068 2E2B     		cmp	r3, #46
3502:src/keys.c    ****       OpCode = 0;
 7136              		.loc 1 3502 9 view .LVU2136
 7137 006a 1C46     		mov	r4, r3
 7138              	.LVL612:
3501:src/keys.c    ****       c = OpCode;
 7139              		.loc 1 3501 14 view .LVU2137
 7140 006c 0860     		str	r0, [r1]
3502:src/keys.c    ****       OpCode = 0;
 7141              		.loc 1 3502 7 is_stmt 1 view .LVU2138
 7142              	.LVL613:
ARM GAS  /tmp/cc8xFAqJ.s 			page 222


3503:src/keys.c    **** 
 7143              		.loc 1 3503 7 view .LVU2139
 7144              		.loc 1 3505 7 view .LVU2140
 7145              		.loc 1 3505 10 is_stmt 0 view .LVU2141
 7146 006e 00F05F82 		beq	.L1318
3506:src/keys.c    **** 	xeq_sst_bst(1);
3507:src/keys.c    ****       else {
3508:src/keys.c    **** 	if (c == (OP_NIL | OP_OFF) || c == (OP_NIL | OP_rCLX) || !is_bad_cmdline()) {
 7147              		.loc 1 3508 2 is_stmt 1 view .LVU2142
 7148              		.loc 1 3508 5 is_stmt 0 view .LVU2143
 7149 0072 B3F5817F 		cmp	r3, #258
 7150 0076 0AD0     		beq	.L798
 7151              		.loc 1 3508 29 discriminator 1 view .LVU2144
 7152 0078 40F23F12 		movw	r2, #319
 7153 007c 9342     		cmp	r3, r2
 7154 007e 06D0     		beq	.L798
 7155 0080 0093     		str	r3, [sp]
 7156              		.loc 1 3508 60 discriminator 2 view .LVU2145
 7157 0082 FFF7FEFF 		bl	is_bad_cmdline
 7158              	.LVL614:
 7159              		.loc 1 3508 56 discriminator 2 view .LVU2146
 7160 0086 009B     		ldr	r3, [sp]
 7161 0088 0028     		cmp	r0, #0
 7162 008a 40F05E82 		bne	.L1319
 7163              	.L798:
3509:src/keys.c    **** 	  xeq(c);
 7164              		.loc 1 3509 4 is_stmt 1 view .LVU2147
3510:src/keys.c    **** 	  if (Running || Pause)
 7165              		.loc 1 3510 8 is_stmt 0 view .LVU2148
 7166 008e 994E     		ldr	r6, .L1401+20
3509:src/keys.c    **** 	  xeq(c);
 7167              		.loc 1 3509 4 view .LVU2149
 7168 0090 1846     		mov	r0, r3
 7169 0092 FFF7FEFF 		bl	xeq
 7170              	.LVL615:
 7171              		.loc 1 3510 4 is_stmt 1 view .LVU2150
 7172              		.loc 1 3510 7 is_stmt 0 view .LVU2151
 7173 0096 3368     		ldr	r3, [r6]
 7174 0098 0BB9     		cbnz	r3, .L796
 7175              		.loc 1 3510 16 discriminator 1 view .LVU2152
 7176 009a 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7177 009c 0BB1     		cbz	r3, .L794
 7178              	.L796:
3511:src/keys.c    **** 	    xeqprog();
 7179              		.loc 1 3511 6 is_stmt 1 view .LVU2153
 7180 009e FFF7FEFF 		bl	xeqprog
 7181              	.LVL616:
 7182              	.L794:
3512:src/keys.c    **** 	}
3513:src/keys.c    ****       }
3514:src/keys.c    ****       dot(RPN, ShowRPN);
 7183              		.loc 1 3514 7 view .LVU2154
 7184 00a2 954D     		ldr	r5, .L1401+24
 7185 00a4 8D20     		movs	r0, #141
 7186 00a6 2968     		ldr	r1, [r5]
 7187 00a8 FFF7FEFF 		bl	dot
 7188              	.LVL617:
ARM GAS  /tmp/cc8xFAqJ.s 			page 223


3515:src/keys.c    ****     }
3516:src/keys.c    ****     else {
3517:src/keys.c    ****       // Ignore key-up if no operation was pending
3518:src/keys.c    ****       dot(RPN, ShowRPN);
3519:src/keys.c    **** #ifndef CONSOLE
3520:src/keys.c    ****       if (! State2.disp_temp ) {
3521:src/keys.c    **** 	if (!WasDataEntry) {
3522:src/keys.c    **** 	  // This will get rid of the last displayed op-code
3523:src/keys.c    **** 	  display();
3524:src/keys.c    **** 	}
3525:src/keys.c    **** 	else {
3526:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3527:src/keys.c    **** 	}
3528:src/keys.c    ****       }
3529:src/keys.c    **** #endif
3530:src/keys.c    ****       return;
3531:src/keys.c    ****     }
3532:src/keys.c    **** 
3533:src/keys.c    ****     /*
3534:src/keys.c    ****      *  Turn on the RPN symbol if desired
3535:src/keys.c    ****      */
3536:src/keys.c    ****     if (ShowRPN) {
 7189              		.loc 1 3536 5 view .LVU2155
 7190              		.loc 1 3536 9 is_stmt 0 view .LVU2156
 7191 00ac 2D68     		ldr	r5, [r5]
 7192              		.loc 1 3536 8 view .LVU2157
 7193 00ae 002D     		cmp	r5, #0
 7194 00b0 40F01D82 		bne	.L800
 7195              	.LVL618:
 7196              	.L1309:
 7197              		.loc 1 3536 8 view .LVU2158
 7198 00b4 3368     		ldr	r3, [r6]
 7199              	.LVL619:
 7200              	.L801:
3537:src/keys.c    ****       finish_RPN(); // RPN
3538:src/keys.c    ****     }
3539:src/keys.c    ****   }
3540:src/keys.c    ****   else {
3541:src/keys.c    ****     /*
3542:src/keys.c    ****      *  Decode the key 
3543:src/keys.c    ****      */
3544:src/keys.c    ****     // print_debug (100, c);
3545:src/keys.c    ****     WasDataEntry = 0;
3546:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
3547:src/keys.c    **** #ifdef DM42
3548:src/keys.c    ****     if (c != K_OP) {
3549:src/keys.c    ****       c = process(c);		// returns an op-code or state
3550:src/keys.c    ****     }
3551:src/keys.c    ****     else {
3552:src/keys.c    ****       if (isRARG(nd_opcode)) {
3553:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
3554:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
3555:src/keys.c    **** 	  c = nd_opcode;
3556:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
3557:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
3558:src/keys.c    **** 	  c = STATE_UNFINISHED;
3559:src/keys.c    **** 	}
ARM GAS  /tmp/cc8xFAqJ.s 			page 224


3560:src/keys.c    **** 	else {
3561:src/keys.c    **** 	  init_arg(RARG_CMD(nd_opcode));
3562:src/keys.c    **** 	  c = STATE_UNFINISHED;
3563:src/keys.c    **** 	}
3564:src/keys.c    ****       }
3565:src/keys.c    ****       else {
3566:src/keys.c    **** 	c = check_confirm(nd_opcode);
3567:src/keys.c    ****       }      
3568:src/keys.c    ****     }
3569:src/keys.c    **** #else
3570:src/keys.c    ****     c = process(c);		// returns an op-code or state
3571:src/keys.c    **** #endif
3572:src/keys.c    ****     switch (c) {
3573:src/keys.c    ****     case STATE_SST:
3574:src/keys.c    ****       OpCode = c;
3575:src/keys.c    ****       OpCodeDisplayPending = 0;
3576:src/keys.c    ****       xeq_sst_bst(0);
3577:src/keys.c    ****       break;
3578:src/keys.c    **** 
3579:src/keys.c    ****     case STATE_BST:
3580:src/keys.c    ****       xeq_sst_bst(-1);
3581:src/keys.c    ****       break;
3582:src/keys.c    **** 
3583:src/keys.c    ****     case STATE_BACKSPACE:
3584:src/keys.c    ****       if (! State2.runmode)
3585:src/keys.c    **** 	delprog();
3586:src/keys.c    ****       else if (State2.alphas) {
3587:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
3588:src/keys.c    **** 	if (p > Alpha)
3589:src/keys.c    **** 	  *--p = '\0';
3590:src/keys.c    ****       }
3591:src/keys.c    ****       break;
3592:src/keys.c    **** 
3593:src/keys.c    ****     case STATE_RUNNING:
3594:src/keys.c    ****       xeqprog();  // continue execution
3595:src/keys.c    ****       break;
3596:src/keys.c    **** 
3597:src/keys.c    ****     case STATE_WINDOWRIGHT:
3598:src/keys.c    ****     case STATE_WINDOWLEFT:
3599:src/keys.c    ****       if (!is_bad_cmdline())
3600:src/keys.c    **** 	set_window(c);
3601:src/keys.c    ****       break;
3602:src/keys.c    **** 
3603:src/keys.c    ****     case STATE_UNFINISHED:
3604:src/keys.c    ****     case STATE_IGNORE:
3605:src/keys.c    ****       break;
3606:src/keys.c    **** 
3607:src/keys.c    ****     default:
3608:src/keys.c    ****       if (State2.runmode || NonProgrammable) {
3609:src/keys.c    **** 	NonProgrammable = 0;
3610:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
3611:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
3612:src/keys.c    **** 	    // Data entry key
3613:src/keys.c    **** #ifndef CONSOLE
3614:src/keys.c    **** 	    WasDataEntry = 1;
3615:src/keys.c    **** #endif
3616:src/keys.c    **** 	    cmdline_empty = (CmdLineLength == 0);
ARM GAS  /tmp/cc8xFAqJ.s 			page 225


3617:src/keys.c    **** 	    xeq(c);
3618:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
3619:src/keys.c    **** 	  }
3620:src/keys.c    **** 	}
3621:src/keys.c    **** 	else {
3622:src/keys.c    **** 	  // Save the op-code for execution on key-up
3623:src/keys.c    **** 	  OpCode = c;
3624:src/keys.c    **** 	  OpCodeDisplayPending = 1;
3625:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3626:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
3627:src/keys.c    **** 	}
3628:src/keys.c    ****       }
3629:src/keys.c    ****       else {
3630:src/keys.c    **** 	stoprog(c);
3631:src/keys.c    ****       }
3632:src/keys.c    ****     }
3633:src/keys.c    ****   }
3634:src/keys.c    ****   if (! Running && ! Pause
 7201              		.loc 1 3634 3 is_stmt 1 view .LVU2159
 7202              		.loc 1 3634 6 is_stmt 0 view .LVU2160
 7203 00b6 002B     		cmp	r3, #0
 7204 00b8 40F04A81 		bne	.L1312
 7205              	.LVL620:
 7206              	.L821:
 7207              		.loc 1 3634 20 discriminator 1 view .LVU2161
 7208 00bc 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7209              		.loc 1 3634 17 discriminator 1 view .LVU2162
 7210 00be 002B     		cmp	r3, #0
 7211 00c0 40F04681 		bne	.L1312
3635:src/keys.c    **** #ifndef CONSOLE
3636:src/keys.c    ****       && ! JustStopped
 7212              		.loc 1 3636 10 view .LVU2163
 7213 00c4 884B     		ldr	r3, .L1401+8
3637:src/keys.c    **** #endif
3638:src/keys.c    ****       && ! JustDisplayed && c != STATE_IGNORE) {
 7214              		.loc 1 3638 10 view .LVU2164
 7215 00c6 8D4E     		ldr	r6, .L1401+28
 7216 00c8 1B68     		ldr	r3, [r3]
 7217 00ca 3268     		ldr	r2, [r6]
 7218              		.loc 1 3638 7 view .LVU2165
 7219 00cc 1343     		orrs	r3, r3, r2
 7220 00ce 16D1     		bne	.L1101
 7221              		.loc 1 3638 26 discriminator 1 view .LVU2166
 7222 00d0 322C     		cmp	r4, #50
 7223 00d2 14D0     		beq	.L1101
 7224              	.LBB788:
3639:src/keys.c    ****     const int orig_WasDataEntry = WasDataEntry;
 7225              		.loc 1 3639 5 is_stmt 1 view .LVU2167
 7226              		.loc 1 3639 15 is_stmt 0 view .LVU2168
 7227 00d4 DFF84092 		ldr	r9, .L1401+56
 7228 00d8 D9F80070 		ldr	r7, [r9]
 7229              	.LVL621:
3640:src/keys.c    **** 
3641:src/keys.c    ****     WasDataEntry &= !(c == (OP_SPEC | OP_ENTER) || cmdline_empty || State2.invalid_disp);
 7230              		.loc 1 3641 5 is_stmt 1 view .LVU2169
 7231              		.loc 1 3641 21 is_stmt 0 view .LVU2170
 7232 00dc 4CB1     		cbz	r4, .L1103
ARM GAS  /tmp/cc8xFAqJ.s 			page 226


 7233              		.loc 1 3641 49 discriminator 1 view .LVU2171
 7234 00de 002D     		cmp	r5, #0
 7235 00e0 40F0C383 		bne	.L1156
 7236              		.loc 1 3641 66 discriminator 3 view .LVU2172
 7237 00e4 864B     		ldr	r3, .L1401+32
 7238 00e6 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 7239              		.loc 1 3641 21 discriminator 3 view .LVU2173
 7240 00e8 9807     		lsls	r0, r3, #30
 7241 00ea 00F11184 		bmi	.L1157
 7242 00ee 07F00104 		and	r4, r7, #1
 7243              	.LVL622:
 7244              	.L1103:
 7245              		.loc 1 3641 18 discriminator 8 view .LVU2174
 7246 00f2 C9F80040 		str	r4, [r9]
3642:src/keys.c    ****     display();
 7247              		.loc 1 3642 5 is_stmt 1 discriminator 8 view .LVU2175
 7248 00f6 FFF7FEFF 		bl	display
 7249              	.LVL623:
3643:src/keys.c    ****     WasDataEntry = orig_WasDataEntry;
 7250              		.loc 1 3643 5 discriminator 8 view .LVU2176
 7251              		.loc 1 3643 18 is_stmt 0 discriminator 8 view .LVU2177
 7252 00fa C9F80070 		str	r7, [r9]
 7253              	.LVL624:
 7254              	.L1101:
 7255              		.loc 1 3643 18 discriminator 8 view .LVU2178
 7256              	.LBE788:
3644:src/keys.c    ****   }
3645:src/keys.c    **** 
3646:src/keys.c    ****  no_display:
3647:src/keys.c    ****   JustDisplayed = 0;
 7257              		.loc 1 3647 3 is_stmt 1 view .LVU2179
 7258              		.loc 1 3647 17 is_stmt 0 view .LVU2180
 7259 00fe 0023     		movs	r3, #0
 7260 0100 3360     		str	r3, [r6]
3648:src/keys.c    ****   watchdog();
 7261              		.loc 1 3648 13 is_stmt 1 view .LVU2181
 7262              	.L770:
3649:src/keys.c    **** }
 7263              		.loc 1 3649 1 is_stmt 0 view .LVU2182
 7264 0102 03B0     		add	sp, sp, #12
 7265              		.cfi_remember_state
 7266              		.cfi_def_cfa_offset 36
 7267              		@ sp needed
 7268 0104 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7269              	.LVL625:
 7270              	.L1315:
 7271              		.cfi_restore_state
3406:src/keys.c    ****       /*
 7272              		.loc 1 3406 5 is_stmt 1 view .LVU2183
3406:src/keys.c    ****       /*
 7273              		.loc 1 3406 9 is_stmt 0 view .LVU2184
 7274 0108 FFF7FEFF 		bl	keyticks
 7275              	.LVL626:
3406:src/keys.c    ****       /*
 7276              		.loc 1 3406 8 view .LVU2185
 7277 010c 0128     		cmp	r0, #1
 7278 010e 1BDD     		ble	.L776
ARM GAS  /tmp/cc8xFAqJ.s 			page 227


3410:src/keys.c    **** 	/*
 7279              		.loc 1 3410 7 is_stmt 1 view .LVU2186
3410:src/keys.c    **** 	/*
 7280              		.loc 1 3410 18 is_stmt 0 view .LVU2187
 7281 0110 764D     		ldr	r5, .L1401+12
 7282 0112 2868     		ldr	r0, [r5]
3410:src/keys.c    **** 	/*
 7283              		.loc 1 3410 10 view .LVU2188
 7284 0114 98B1     		cbz	r0, .L778
3414:src/keys.c    **** 	  /*
 7285              		.loc 1 3414 2 is_stmt 1 view .LVU2189
3414:src/keys.c    **** 	  /*
 7286              		.loc 1 3414 6 is_stmt 0 view .LVU2190
 7287 0116 7B4B     		ldr	r3, .L1401+36
3414:src/keys.c    **** 	  /*
 7288              		.loc 1 3414 5 view .LVU2191
 7289 0118 1E68     		ldr	r6, [r3]
 7290 011a 002E     		cmp	r6, #0
 7291 011c 00F01782 		beq	.L779
3418:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 7292              		.loc 1 3418 4 is_stmt 1 view .LVU2192
3419:src/keys.c    **** 	    DispMsg = "RUN";
 7293              		.loc 1 3419 7 is_stmt 0 view .LVU2193
 7294 0120 40F23B12 		movw	r2, #315
3418:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 7295              		.loc 1 3418 25 view .LVU2194
 7296 0124 0025     		movs	r5, #0
3419:src/keys.c    **** 	    DispMsg = "RUN";
 7297              		.loc 1 3419 7 view .LVU2195
 7298 0126 9042     		cmp	r0, r2
3418:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 7299              		.loc 1 3418 25 view .LVU2196
 7300 0128 1D60     		str	r5, [r3]
3419:src/keys.c    **** 	    DispMsg = "RUN";
 7301              		.loc 1 3419 4 is_stmt 1 view .LVU2197
3419:src/keys.c    **** 	    DispMsg = "RUN";
 7302              		.loc 1 3419 7 is_stmt 0 view .LVU2198
 7303 012a 40F06182 		bne	.L780
3420:src/keys.c    **** 	  }
 7304              		.loc 1 3420 6 is_stmt 1 view .LVU2199
3420:src/keys.c    **** 	  }
 7305              		.loc 1 3420 14 is_stmt 0 view .LVU2200
 7306 012e 764B     		ldr	r3, .L1401+40
 7307 0130 764A     		ldr	r2, .L1401+44
 7308 0132 1A60     		str	r2, [r3]
 7309              	.L781:
3426:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
 7310              		.loc 1 3426 4 is_stmt 1 view .LVU2201
 7311 0134 FFF7FEFF 		bl	display
 7312              	.LVL627:
3427:src/keys.c    **** 	}
 7313              		.loc 1 3427 4 view .LVU2202
3427:src/keys.c    **** 	}
 7314              		.loc 1 3427 12 is_stmt 0 view .LVU2203
 7315 0138 6F4B     		ldr	r3, .L1401+24
 7316 013a 0122     		movs	r2, #1
 7317 013c 1A60     		str	r2, [r3]
ARM GAS  /tmp/cc8xFAqJ.s 			page 228


 7318              	.L778:
3439:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 7319              		.loc 1 3439 7 is_stmt 1 view .LVU2204
3439:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 7320              		.loc 1 3439 11 is_stmt 0 view .LVU2205
 7321 013e FFF7FEFF 		bl	keyticks
 7322              	.LVL628:
3439:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 7323              		.loc 1 3439 10 view .LVU2206
 7324 0142 0C28     		cmp	r0, #12
 7325 0144 00F3F881 		bgt	.L1320
 7326              	.L776:
3448:src/keys.c    **** 
 7327              		.loc 1 3448 15 is_stmt 1 view .LVU2207
3454:src/keys.c    ****       JustStopped = 0;
 7328              		.loc 1 3454 5 view .LVU2208
3454:src/keys.c    ****       JustStopped = 0;
 7329              		.loc 1 3454 9 is_stmt 0 view .LVU2209
 7330 0148 674D     		ldr	r5, .L1401+8
3454:src/keys.c    ****       JustStopped = 0;
 7331              		.loc 1 3454 8 view .LVU2210
 7332 014a 2B68     		ldr	r3, [r5]
 7333 014c 002B     		cmp	r3, #0
 7334 014e 40F07F81 		bne	.L1321
 7335              	.L785:
3462:src/keys.c    ****       return;
 7336              		.loc 1 3462 5 is_stmt 1 view .LVU2211
3462:src/keys.c    ****       return;
 7337              		.loc 1 3462 9 is_stmt 0 view .LVU2212
 7338 0152 684E     		ldr	r6, .L1401+20
 7339 0154 3368     		ldr	r3, [r6]
3462:src/keys.c    ****       return;
 7340              		.loc 1 3462 8 view .LVU2213
 7341 0156 002B     		cmp	r3, #0
 7342 0158 00F05C81 		beq	.L1322
 7343              	.L787:
3495:src/keys.c    ****     {
 7344              		.loc 1 3495 3 is_stmt 1 view .LVU2214
3545:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7345              		.loc 1 3545 5 view .LVU2215
3546:src/keys.c    **** #ifdef DM42
 7346              		.loc 1 3546 13 is_stmt 0 view .LVU2216
 7347 015c 664A     		ldr	r2, .L1401+24
3545:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7348              		.loc 1 3545 18 view .LVU2217
 7349 015e DFF8B891 		ldr	r9, .L1401+56
3546:src/keys.c    **** #ifdef DM42
 7350              		.loc 1 3546 15 view .LVU2218
 7351 0162 B3FA83F3 		clz	r3, r3
 7352 0166 5B09     		lsrs	r3, r3, #5
3546:src/keys.c    **** #ifdef DM42
 7353              		.loc 1 3546 13 view .LVU2219
 7354 0168 1360     		str	r3, [r2]
3545:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7355              		.loc 1 3545 18 view .LVU2220
 7356 016a 0023     		movs	r3, #0
 7357 016c C9F80030 		str	r3, [r9]
ARM GAS  /tmp/cc8xFAqJ.s 			page 229


3546:src/keys.c    **** #ifdef DM42
 7358              		.loc 1 3546 5 is_stmt 1 view .LVU2221
3548:src/keys.c    ****       c = process(c);		// returns an op-code or state
 7359              		.loc 1 3548 5 view .LVU2222
 7360              	.L773:
3549:src/keys.c    ****     }
 7361              		.loc 1 3549 7 view .LVU2223
 7362              	.LVL629:
 7363              	.LBB789:
 7364              	.LBI789:
3192:src/keys.c    ****   const enum shifts shift = cur_shift();
 7365              		.loc 1 3192 12 view .LVU2224
 7366              	.LBB790:
3193:src/keys.c    ****   enum catalogues cat;
 7367              		.loc 1 3193 3 view .LVU2225
 7368              	.LBB791:
 7369              	.LBI791:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 7370              		.loc 1 96 13 view .LVU2226
 7371              	.LBB792:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7372              		.loc 1 97 2 view .LVU2227
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7373              		.loc 1 97 18 is_stmt 0 view .LVU2228
 7374 0170 FFF7FEFF 		bl	shift_down
 7375              	.LVL630:
  98:src/keys.c    **** }
 7376              		.loc 1 98 2 is_stmt 1 view .LVU2229
  98:src/keys.c    **** }
 7377              		.loc 1 98 52 is_stmt 0 view .LVU2230
 7378 0174 8346     		mov	fp, r0
 7379 0176 10B9     		cbnz	r0, .L805
 7380 0178 614B     		ldr	r3, .L1401+32
 7381 017a 93F810B0 		ldrb	fp, [r3, #16]	@ zero_extendqisi2
 7382              	.L805:
 7383              	.LVL631:
  98:src/keys.c    **** }
 7384              		.loc 1 98 52 view .LVU2231
 7385              	.LBE792:
 7386              	.LBE791:
3194:src/keys.c    **** 
 7387              		.loc 1 3194 3 is_stmt 1 view .LVU2232
3196:src/keys.c    ****     /*
 7388              		.loc 1 3196 3 view .LVU2233
3196:src/keys.c    ****     /*
 7389              		.loc 1 3196 7 is_stmt 0 view .LVU2234
 7390 017e 3568     		ldr	r5, [r6]
3196:src/keys.c    ****     /*
 7391              		.loc 1 3196 6 view .LVU2235
 7392 0180 002D     		cmp	r5, #0
 7393 0182 40F0CD80 		bne	.L806
3196:src/keys.c    ****     /*
 7394              		.loc 1 3196 15 view .LVU2236
 7395 0186 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 7396 0188 002B     		cmp	r3, #0
 7397 018a 40F0C980 		bne	.L806
3224:src/keys.c    **** #else
ARM GAS  /tmp/cc8xFAqJ.s 			page 230


 7398              		.loc 1 3224 3 is_stmt 1 view .LVU2237
3224:src/keys.c    **** #else
 7399              		.loc 1 3224 6 is_stmt 0 view .LVU2238
 7400 018e 242C     		cmp	r4, #36
 7401 0190 00F0B382 		beq	.L1323
3241:src/keys.c    **** 		// Avoid an accidental restart with R/S
 7402              		.loc 1 3241 2 is_stmt 1 view .LVU2239
3241:src/keys.c    **** 		// Avoid an accidental restart with R/S
 7403              		.loc 1 3241 5 is_stmt 0 view .LVU2240
 7404 0194 272C     		cmp	r4, #39
 7405 0196 04D1     		bne	.L820
3241:src/keys.c    **** 		// Avoid an accidental restart with R/S
 7406              		.loc 1 3241 15 view .LVU2241
 7407 0198 534B     		ldr	r3, .L1401+8
 7408 019a 1A68     		ldr	r2, [r3]
 7409 019c 002A     		cmp	r2, #0
 7410 019e 40F0A583 		bne	.L1324
 7411              	.L820:
 7412 01a2 DFF85C81 		ldr	r8, .L1401+32
 7413 01a6 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
 7414              	.L813:
3250:src/keys.c    **** 		CmdLineLength = 0;
 7415              		.loc 1 3250 2 is_stmt 1 view .LVU2242
3250:src/keys.c    **** 		CmdLineLength = 0;
 7416              		.loc 1 3250 5 is_stmt 0 view .LVU2243
 7417 01aa 33B1     		cbz	r3, .L823
3250:src/keys.c    **** 		CmdLineLength = 0;
 7418              		.loc 1 3250 26 view .LVU2244
 7419 01ac FFF7FEFF 		bl	keyticks
 7420              	.LVL632:
3250:src/keys.c    **** 		CmdLineLength = 0;
 7421              		.loc 1 3250 23 view .LVU2245
 7422 01b0 1E28     		cmp	r0, #30
3251:src/keys.c    **** 	/*
 7423              		.loc 1 3251 3 is_stmt 1 view .LVU2246
3251:src/keys.c    **** 	/*
 7424              		.loc 1 3251 17 is_stmt 0 view .LVU2247
 7425 01b2 C4BF     		itt	gt
 7426 01b4 0023     		movgt	r3, #0
 7427 01b6 88F81C30 		strbgt	r3, [r8, #28]
 7428              	.L823:
3256:src/keys.c    **** 		return process_confirm((const keycode)c);
 7429              		.loc 1 3256 2 is_stmt 1 view .LVU2248
3256:src/keys.c    **** 		return process_confirm((const keycode)c);
 7430              		.loc 1 3256 6 is_stmt 0 view .LVU2249
 7431 01ba 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
3256:src/keys.c    **** 		return process_confirm((const keycode)c);
 7432              		.loc 1 3256 5 view .LVU2250
 7433 01be 5A07     		lsls	r2, r3, #29
 7434 01c0 40F05282 		bne	.L1325
3259:src/keys.c    **** 		return process_arg((const keycode)c);
 7435              		.loc 1 3259 2 is_stmt 1 view .LVU2251
3259:src/keys.c    **** 		return process_arg((const keycode)c);
 7436              		.loc 1 3259 6 is_stmt 0 view .LVU2252
 7437 01c4 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
3259:src/keys.c    **** 		return process_arg((const keycode)c);
 7438              		.loc 1 3259 5 view .LVU2253
ARM GAS  /tmp/cc8xFAqJ.s 			page 231


 7439 01c8 8B06     		lsls	r3, r1, #26
 7440 01ca 00F1B682 		bmi	.L1326
3262:src/keys.c    **** 		return process_gtodot((const keycode)c);
 7441              		.loc 1 3262 2 is_stmt 1 view .LVU2254
3262:src/keys.c    **** 		return process_gtodot((const keycode)c);
 7442              		.loc 1 3262 6 is_stmt 0 view .LVU2255
 7443 01ce 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
3262:src/keys.c    **** 		return process_gtodot((const keycode)c);
 7444              		.loc 1 3262 5 view .LVU2256
 7445 01d2 12F0010A 		ands	r10, r2, #1
 7446 01d6 40F0F482 		bne	.L1327
3265:src/keys.c    **** 		return process_hyp((const keycode)c);
 7447              		.loc 1 3265 2 is_stmt 1 view .LVU2257
3265:src/keys.c    **** 		return process_hyp((const keycode)c);
 7448              		.loc 1 3265 5 is_stmt 0 view .LVU2258
 7449 01da 12F02000 		ands	r0, r2, #32
 7450 01de 40F04683 		bne	.L1328
3268:src/keys.c    **** 		return process_test((const keycode)c);
 7451              		.loc 1 3268 2 is_stmt 1 view .LVU2259
3268:src/keys.c    **** 		return process_test((const keycode)c);
 7452              		.loc 1 3268 12 is_stmt 0 view .LVU2260
 7453 01e2 98F80F30 		ldrb	r3, [r8, #15]	@ zero_extendqisi2
3268:src/keys.c    **** 		return process_test((const keycode)c);
 7454              		.loc 1 3268 5 view .LVU2261
 7455 01e6 072B     		cmp	r3, #7
 7456 01e8 40F0B082 		bne	.L1329
3271:src/keys.c    **** 		return process_status((const keycode)c);
 7457              		.loc 1 3271 2 is_stmt 1 view .LVU2262
3271:src/keys.c    **** 		return process_status((const keycode)c);
 7458              		.loc 1 3271 12 is_stmt 0 view .LVU2263
 7459 01ec 98F80C10 		ldrb	r1, [r8, #12]	@ zero_extendqisi2
3271:src/keys.c    **** 		return process_status((const keycode)c);
 7460              		.loc 1 3271 5 view .LVU2264
 7461 01f0 0029     		cmp	r1, #0
 7462 01f2 40F0A583 		bne	.L1330
3277:src/keys.c    **** 		toggle_shift(SHIFT_F);
 7463              		.loc 1 3277 2 is_stmt 1 view .LVU2265
3277:src/keys.c    **** 		toggle_shift(SHIFT_F);
 7464              		.loc 1 3277 5 is_stmt 0 view .LVU2266
 7465 01f6 292C     		cmp	r4, #41
 7466 01f8 00F0DE84 		beq	.L1331
3281:src/keys.c    **** 		toggle_shift(SHIFT_G);
 7467              		.loc 1 3281 2 is_stmt 1 view .LVU2267
3281:src/keys.c    **** 		toggle_shift(SHIFT_G);
 7468              		.loc 1 3281 5 is_stmt 0 view .LVU2268
 7469 01fc 2A2C     		cmp	r4, #42
 7470 01fe 00F0E684 		beq	.L1332
3285:src/keys.c    **** 		toggle_shift(SHIFT_H);
 7471              		.loc 1 3285 2 is_stmt 1 view .LVU2269
3285:src/keys.c    **** 		toggle_shift(SHIFT_H);
 7472              		.loc 1 3285 5 is_stmt 0 view .LVU2270
 7473 0202 2B2C     		cmp	r4, #43
 7474 0204 00F05A85 		beq	.L1333
3294:src/keys.c    **** 		return process_arrow((const keycode)c);
 7475              		.loc 1 3294 2 is_stmt 1 view .LVU2271
3294:src/keys.c    **** 		return process_arrow((const keycode)c);
 7476              		.loc 1 3294 5 is_stmt 0 view .LVU2272
ARM GAS  /tmp/cc8xFAqJ.s 			page 232


 7477 0208 5107     		lsls	r1, r2, #29
 7478 020a 00F1C483 		bmi	.L1334
3302:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 7479              		.loc 1 3302 2 is_stmt 1 view .LVU2273
 7480              	.LBB793:
 7481              	.LBB794:
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7482              		.loc 1 276 6 is_stmt 0 view .LVU2274
 7483 020e DFF80CA1 		ldr	r10, .L1401+60
 7484 0212 DAF80000 		ldr	r0, [r10]
 7485 0216 90F8AC17 		ldrb	r1, [r0, #1964]	@ zero_extendqisi2
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7486              		.loc 1 276 5 view .LVU2275
 7487 021a 01F0410C 		and	ip, r1, #65
 7488 021e BCF1410F 		cmp	ip, #65
 7489              	.LBE794:
 7490              	.LBE793:
3302:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 7491              		.loc 1 3302 8 view .LVU2276
 7492 0222 E4B2     		uxtb	r4, r4
 7493              	.LVL633:
 7494              	.LBB816:
 7495              	.LBI793:
 267:src/keys.c    **** {
 7496              		.loc 1 267 24 is_stmt 1 view .LVU2277
 7497              	.LBB801:
 269:src/keys.c    ****   int i, col, max;
 7498              		.loc 1 269 3 view .LVU2278
 270:src/keys.c    ****   const struct _map {
 7499              		.loc 1 270 3 view .LVU2279
 271:src/keys.c    ****     unsigned char key, cat[3];
 7500              		.loc 1 271 3 view .LVU2280
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7501              		.loc 1 276 2 view .LVU2281
 276:src/keys.c    **** 		if (shift == SHIFT_H) {
 7502              		.loc 1 276 5 is_stmt 0 view .LVU2282
 7503 0224 00F02984 		beq	.L1335
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 7504              		.loc 1 312 3 is_stmt 1 view .LVU2283
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 7505              		.loc 1 312 6 is_stmt 0 view .LVU2284
 7506 0228 212C     		cmp	r4, #33
 7507 022a 00F05685 		beq	.L1336
 315:src/keys.c    ****     /*
 7508              		.loc 1 315 3 is_stmt 1 view .LVU2285
 315:src/keys.c    ****     /*
 7509              		.loc 1 315 23 is_stmt 0 view .LVU2286
 7510 022e 3849     		ldr	r1, .L1401+48
 7511 0230 D8F81430 		ldr	r3, [r8, #20]
 315:src/keys.c    ****     /*
 7512              		.loc 1 315 6 view .LVU2287
 7513 0234 1942     		tst	r1, r3
 7514 0236 40F0AC84 		bne	.L913
 7515              	.LBB795:
 319:src/keys.c    **** #ifdef DM42
 7516              		.loc 1 319 5 is_stmt 1 view .LVU2288
 346:src/keys.c    ****       /*
ARM GAS  /tmp/cc8xFAqJ.s 			page 233


 7517              		.loc 1 346 5 view .LVU2289
 346:src/keys.c    ****       /*
 7518              		.loc 1 346 8 is_stmt 0 view .LVU2290
 7519 023a 242C     		cmp	r4, #36
 7520 023c 03D1     		bne	.L914
 346:src/keys.c    ****       /*
 7521              		.loc 1 346 18 view .LVU2291
 7522 023e BBF1020F 		cmp	fp, #2
 7523 0242 00F0EE87 		beq	.L1133
 7524              	.L914:
 361:src/keys.c    ****       /*
 7525              		.loc 1 361 5 is_stmt 1 view .LVU2292
 361:src/keys.c    ****       /*
 7526              		.loc 1 361 8 is_stmt 0 view .LVU2293
 7527 0246 BBF1030F 		cmp	fp, #3
 7528 024a 18D1     		bne	.L920
 7529              	.L1112:
 371:src/keys.c    **** #ifndef WINGUI
 7530              		.loc 1 371 5 is_stmt 1 view .LVU2294
 7531              	.LVL634:
 373:src/keys.c    **** #else
 7532              		.loc 1 373 5 view .LVU2295
 373:src/keys.c    **** #else
 7533              		.loc 1 373 23 is_stmt 0 view .LVU2296
 7534 024c 90F8E837 		ldrb	r3, [r0, #2024]	@ zero_extendqisi2
 373:src/keys.c    **** #else
 7535              		.loc 1 373 27 view .LVU2297
 7536 0250 D807     		lsls	r0, r3, #31
 7537 0252 00F1BA87 		bmi	.L1134
 373:src/keys.c    **** #else
 7538              		.loc 1 373 73 view .LVU2298
 7539 0256 12F00203 		ands	r3, r2, #2
 7540 025a 01F0A781 		beq	.L1337
 371:src/keys.c    **** #ifndef WINGUI
 7541              		.loc 1 371 8 view .LVU2299
 7542 025e 2D4B     		ldr	r3, .L1401+52
 377:src/keys.c    ****   }
 7543              		.loc 1 377 9 view .LVU2300
 7544 0260 0C21     		movs	r1, #12
 373:src/keys.c    **** #else
 7545              		.loc 1 373 73 view .LVU2301
 7546 0262 4FF0020C 		mov	ip, #2
 7547              	.LVL635:
 7548              	.L915:
 373:src/keys.c    **** #else
 7549              		.loc 1 373 73 view .LVU2302
 7550              	.LBE795:
 421:src/keys.c    ****     if (cp->key == c) {
 7551              		.loc 1 421 3 is_stmt 1 view .LVU2303
 421:src/keys.c    ****     if (cp->key == c) {
 7552              		.loc 1 421 15 view .LVU2304
 7553 0266 181F     		subs	r0, r3, #4
 7554 0268 00EB8100 		add	r0, r0, r1, lsl #2
 7555              	.LBB796:
 373:src/keys.c    **** #else
 7556              		.loc 1 373 73 is_stmt 0 view .LVU2305
 7557 026c 0421     		movs	r1, #4
ARM GAS  /tmp/cc8xFAqJ.s 			page 234


 7558              	.LVL636:
 373:src/keys.c    **** #else
 7559              		.loc 1 373 73 view .LVU2306
 7560 026e 01E0     		b	.L921
 7561              	.LVL637:
 7562              	.L1339:
 373:src/keys.c    **** #else
 7563              		.loc 1 373 73 view .LVU2307
 7564 0270 13F8041F 		ldrb	r1, [r3, #4]!	@ zero_extendqisi2
 7565              	.LVL638:
 7566              	.L921:
 373:src/keys.c    **** #else
 7567              		.loc 1 373 73 view .LVU2308
 7568              	.LBE796:
 422:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 7569              		.loc 1 422 5 is_stmt 1 view .LVU2309
 421:src/keys.c    ****     if (cp->key == c) {
 7570              		.loc 1 421 24 view .LVU2310
 421:src/keys.c    ****     if (cp->key == c) {
 7571              		.loc 1 421 15 view .LVU2311
 422:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 7572              		.loc 1 422 8 is_stmt 0 view .LVU2312
 7573 0274 8C42     		cmp	r4, r1
 7574 0276 00F0B584 		beq	.L1338
 421:src/keys.c    ****     if (cp->key == c) {
 7575              		.loc 1 421 3 view .LVU2313
 7576 027a 8342     		cmp	r3, r0
 7577 027c F8D1     		bne	.L1339
 7578              	.LVL639:
 7579              	.L920:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7580              		.loc 1 427 3 is_stmt 1 view .LVU2314
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7581              		.loc 1 427 6 is_stmt 0 view .LVU2315
 7582 027e 1107     		lsls	r1, r2, #28
 7583 0280 00F1BA84 		bmi	.L926
 7584              	.LVL640:
 7585              	.L924:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7586              		.loc 1 427 6 view .LVU2316
 7587              	.LBE801:
 7588              	.LBE816:
3317:src/keys.c    **** 		return process_labellist((const keycode)c);
 7589              		.loc 1 3317 2 is_stmt 1 view .LVU2317
3317:src/keys.c    **** 		return process_labellist((const keycode)c);
 7590              		.loc 1 3317 6 is_stmt 0 view .LVU2318
 7591 0284 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3317:src/keys.c    **** 		return process_labellist((const keycode)c);
 7592              		.loc 1 3317 5 view .LVU2319
 7593 0288 5907     		lsls	r1, r3, #29
 7594 028a 00F16585 		bmi	.L1340
3320:src/keys.c    **** 		return process_registerlist((const keycode)c);
 7595              		.loc 1 3320 2 is_stmt 1 view .LVU2320
3320:src/keys.c    **** 		return process_registerlist((const keycode)c);
 7596              		.loc 1 3320 5 is_stmt 0 view .LVU2321
 7597 028e 1807     		lsls	r0, r3, #28
 7598 0290 00F1D486 		bmi	.L1341
ARM GAS  /tmp/cc8xFAqJ.s 			page 235


3323:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 7599              		.loc 1 3323 2 is_stmt 1 view .LVU2322
3323:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 7600              		.loc 1 3323 5 is_stmt 0 view .LVU2323
 7601 0294 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
 7602 0298 002B     		cmp	r3, #0
 7603 029a 40F08787 		bne	.L1342
3326:src/keys.c    **** #ifndef INFRARED
 7604              		.loc 1 3326 2 is_stmt 1 view .LVU2324
3326:src/keys.c    **** #ifndef INFRARED
 7605              		.loc 1 3326 6 is_stmt 0 view .LVU2325
 7606 029e 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3326:src/keys.c    **** #ifndef INFRARED
 7607              		.loc 1 3326 5 view .LVU2326
 7608 02a2 1907     		lsls	r1, r3, #28
 7609 02a4 00F1C587 		bmi	.L1343
3339:src/keys.c    **** 		return process_c_lock ((const keycode)c);
 7610              		.loc 1 3339 2 is_stmt 1 view .LVU2327
3339:src/keys.c    **** 		return process_c_lock ((const keycode)c);
 7611              		.loc 1 3339 6 is_stmt 0 view .LVU2328
 7612 02a8 DAF80030 		ldr	r3, [r10]
 7613 02ac 93F8AC37 		ldrb	r3, [r3, #1964]	@ zero_extendqisi2
3339:src/keys.c    **** 		return process_c_lock ((const keycode)c);
 7614              		.loc 1 3339 5 view .LVU2329
 7615 02b0 03F04103 		and	r3, r3, #65
 7616 02b4 412B     		cmp	r3, #65
 7617 02b6 01F08681 		beq	.L1344
3343:src/keys.c    **** 		return process_cmplx((const keycode)c);
 7618              		.loc 1 3343 2 is_stmt 1 view .LVU2330
3343:src/keys.c    **** 		return process_cmplx((const keycode)c);
 7619              		.loc 1 3343 5 is_stmt 0 view .LVU2331
 7620 02ba 9107     		lsls	r1, r2, #30
 7621 02bc 01F14880 		bmi	.L1304
3346:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 7622              		.loc 1 3346 3 is_stmt 1 view .LVU2332
3346:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 7623              		.loc 1 3346 24 is_stmt 0 view .LVU2333
 7624 02c0 0BF1FF33 		add	r3, fp, #-1
3346:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 7625              		.loc 1 3346 6 view .LVU2334
 7626 02c4 DBB2     		uxtb	r3, r3
 7627 02c6 012B     		cmp	r3, #1
 7628 02c8 41F2F280 		bls	.L1303
3348:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 7629              		.loc 1 3348 3 is_stmt 1 view .LVU2335
3348:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 7630              		.loc 1 3348 6 is_stmt 0 view .LVU2336
 7631 02cc BBF1030F 		cmp	fp, #3
3349:src/keys.c    **** 		// print_debug (3, c);
 7632              		.loc 1 3349 11 view .LVU2337
 7633 02d0 2046     		mov	r0, r4
3348:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 7634              		.loc 1 3348 6 view .LVU2338
 7635 02d2 01F05680 		beq	.L1345
 7636              	.LVL641:
 7637              	.L1302:
 7638              	.LBB817:
ARM GAS  /tmp/cc8xFAqJ.s 			page 236


 7639              	.LBB818:
1420:src/keys.c    **** 	case (K_CMPLX):
 7640              		.loc 1 1420 10 view .LVU2339
 7641 02d6 FFF7FEFF 		bl	process_normal
 7642              	.LVL642:
 7643 02da 0446     		mov	r4, r0
 7644 02dc 80E0     		b	.L835
 7645              	.L1402:
 7646 02de 00BF     		.align	2
 7647              	.L1401:
 7648 02e0 00000000 		.word	.LANCHOR18
 7649 02e4 00000000 		.word	Pause
 7650 02e8 00000000 		.word	JustStopped
 7651 02ec 00000000 		.word	OpCode
 7652 02f0 00000000 		.word	GoFast
 7653 02f4 00000000 		.word	Running
 7654 02f8 00000000 		.word	ShowRPN
 7655 02fc 00000000 		.word	JustDisplayed
 7656 0300 00000000 		.word	StateWhileOn
 7657 0304 00000000 		.word	OpCodeDisplayPending
 7658 0308 00000000 		.word	DispMsg
 7659 030c 00000000 		.word	.LC0
 7660 0310 00080800 		.word	526336
 7661 0314 00000000 		.word	.LANCHOR17
 7662 0318 00000000 		.word	WasDataEntry
 7663 031c 00000000 		.word	main_ram
 7664              	.LVL643:
 7665              	.L806:
1420:src/keys.c    **** 	case (K_CMPLX):
 7666              		.loc 1 1420 10 view .LVU2340
 7667              	.LBE818:
 7668              	.LBE817:
3200:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 7669              		.loc 1 3200 5 is_stmt 1 view .LVU2341
3200:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 7670              		.loc 1 3200 8 is_stmt 0 view .LVU2342
 7671 0320 242C     		cmp	r4, #36
 7672 0322 00F09C80 		beq	.L808
3200:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 7673              		.loc 1 3200 18 view .LVU2343
 7674 0326 272C     		cmp	r4, #39
 7675 0328 00F09980 		beq	.L808
3210:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 7676              		.loc 1 3210 5 is_stmt 1 view .LVU2344
3210:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 7677              		.loc 1 3210 8 is_stmt 0 view .LVU2345
 7678 032c 622C     		cmp	r4, #98
 7679 032e 07D0     		beq	.L811
3211:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7680              		.loc 1 3211 7 is_stmt 1 view .LVU2346
3211:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7681              		.loc 1 3211 15 is_stmt 0 view .LVU2347
 7682 0330 B84B     		ldr	r3, .L1403
3213:src/keys.c    ****     }
 7683              		.loc 1 3213 14 view .LVU2348
 7684 0332 B94A     		ldr	r2, .L1403+4
3211:src/keys.c    ****       Pause = 0;			// leave PSE statement
ARM GAS  /tmp/cc8xFAqJ.s 			page 237


 7685              		.loc 1 3211 17 view .LVU2349
 7686 0334 0134     		adds	r4, r4, #1
 7687              	.LVL644:
3213:src/keys.c    ****     }
 7688              		.loc 1 3213 14 view .LVU2350
 7689 0336 0121     		movs	r1, #1
3211:src/keys.c    ****       Pause = 0;			// leave PSE statement
 7690              		.loc 1 3211 15 view .LVU2351
 7691 0338 DC74     		strb	r4, [r3, #19]
3212:src/keys.c    ****       GoFast = 1;
 7692              		.loc 1 3212 7 is_stmt 1 view .LVU2352
3212:src/keys.c    ****       GoFast = 1;
 7693              		.loc 1 3212 13 is_stmt 0 view .LVU2353
 7694 033a 0023     		movs	r3, #0
3213:src/keys.c    ****     }
 7695              		.loc 1 3213 14 view .LVU2354
 7696 033c 1160     		str	r1, [r2]
3212:src/keys.c    ****       GoFast = 1;
 7697              		.loc 1 3212 13 view .LVU2355
 7698 033e 3B70     		strb	r3, [r7]
3213:src/keys.c    ****     }
 7699              		.loc 1 3213 7 is_stmt 1 view .LVU2356
 7700              	.LVL645:
 7701              	.L811:
3213:src/keys.c    ****     }
 7702              		.loc 1 3213 7 is_stmt 0 view .LVU2357
 7703              	.LBE790:
 7704              	.LBE789:
3594:src/keys.c    ****       break;
 7705              		.loc 1 3594 7 is_stmt 1 view .LVU2358
 7706 0340 FFF7FEFF 		bl	xeqprog
 7707              	.LVL646:
3595:src/keys.c    **** 
 7708              		.loc 1 3595 7 view .LVU2359
 7709 0344 3368     		ldr	r3, [r6]
3387:src/keys.c    ****   if (was_paused && Pause == 0)
 7710              		.loc 1 3387 7 is_stmt 0 view .LVU2360
 7711 0346 0025     		movs	r5, #0
3595:src/keys.c    **** 
 7712              		.loc 1 3595 7 view .LVU2361
 7713 0348 3124     		movs	r4, #49
 7714              	.LVL647:
3634:src/keys.c    **** #ifndef CONSOLE
 7715              		.loc 1 3634 3 is_stmt 1 view .LVU2362
3634:src/keys.c    **** #ifndef CONSOLE
 7716              		.loc 1 3634 6 is_stmt 0 view .LVU2363
 7717 034a 002B     		cmp	r3, #0
 7718 034c 3FF4B6AE 		beq	.L821
 7719              	.L1312:
3634:src/keys.c    **** #ifndef CONSOLE
 7720              		.loc 1 3634 6 view .LVU2364
 7721 0350 B24E     		ldr	r6, .L1403+8
3647:src/keys.c    ****   watchdog();
 7722              		.loc 1 3647 3 is_stmt 1 view .LVU2365
3647:src/keys.c    ****   watchdog();
 7723              		.loc 1 3647 17 is_stmt 0 view .LVU2366
 7724 0352 0023     		movs	r3, #0
ARM GAS  /tmp/cc8xFAqJ.s 			page 238


 7725 0354 3360     		str	r3, [r6]
3648:src/keys.c    **** }
 7726              		.loc 1 3648 13 is_stmt 1 view .LVU2367
 7727 0356 D4E6     		b	.L770
 7728              	.LVL648:
 7729              	.L1314:
3398:src/keys.c    ****     }
 7730              		.loc 1 3398 7 view .LVU2368
3546:src/keys.c    **** #ifdef DM42
 7731              		.loc 1 3546 15 is_stmt 0 view .LVU2369
 7732 0358 B14E     		ldr	r6, .L1403+12
3546:src/keys.c    **** #ifdef DM42
 7733              		.loc 1 3546 13 view .LVU2370
 7734 035a B249     		ldr	r1, .L1403+16
3546:src/keys.c    **** #ifdef DM42
 7735              		.loc 1 3546 15 view .LVU2371
 7736 035c 3368     		ldr	r3, [r6]
3398:src/keys.c    ****     }
 7737              		.loc 1 3398 14 view .LVU2372
 7738 035e B24A     		ldr	r2, .L1403+20
3545:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7739              		.loc 1 3545 18 view .LVU2373
 7740 0360 DFF8E092 		ldr	r9, .L1403+48
3546:src/keys.c    **** #ifdef DM42
 7741              		.loc 1 3546 15 view .LVU2374
 7742 0364 B3FA83F3 		clz	r3, r3
 7743 0368 5B09     		lsrs	r3, r3, #5
3546:src/keys.c    **** #ifdef DM42
 7744              		.loc 1 3546 13 view .LVU2375
 7745 036a 0B60     		str	r3, [r1]
3398:src/keys.c    ****     }
 7746              		.loc 1 3398 14 view .LVU2376
 7747 036c 0023     		movs	r3, #0
 7748 036e 1360     		str	r3, [r2]
3495:src/keys.c    ****     {
 7749              		.loc 1 3495 3 is_stmt 1 view .LVU2377
3545:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7750              		.loc 1 3545 5 view .LVU2378
3545:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7751              		.loc 1 3545 18 is_stmt 0 view .LVU2379
 7752 0370 C9F80030 		str	r3, [r9]
3546:src/keys.c    **** #ifdef DM42
 7753              		.loc 1 3546 5 is_stmt 1 view .LVU2380
3548:src/keys.c    ****       c = process(c);		// returns an op-code or state
 7754              		.loc 1 3548 5 view .LVU2381
 7755 0374 FCE6     		b	.L773
 7756              	.L791:
3548:src/keys.c    ****       c = process(c);		// returns an op-code or state
 7757              		.loc 1 3548 5 is_stmt 0 view .LVU2382
 7758 0376 AA4E     		ldr	r6, .L1403+12
3546:src/keys.c    **** #ifdef DM42
 7759              		.loc 1 3546 13 view .LVU2383
 7760 0378 AA49     		ldr	r1, .L1403+16
 7761 037a 3368     		ldr	r3, [r6]
3545:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7762              		.loc 1 3545 5 is_stmt 1 view .LVU2384
3545:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
ARM GAS  /tmp/cc8xFAqJ.s 			page 239


 7763              		.loc 1 3545 18 is_stmt 0 view .LVU2385
 7764 037c DFF8C492 		ldr	r9, .L1403+48
3546:src/keys.c    **** #ifdef DM42
 7765              		.loc 1 3546 15 view .LVU2386
 7766 0380 B3FA83F2 		clz	r2, r3
 7767 0384 5209     		lsrs	r2, r2, #5
3548:src/keys.c    ****       c = process(c);		// returns an op-code or state
 7768              		.loc 1 3548 8 view .LVU2387
 7769 0386 342C     		cmp	r4, #52
3546:src/keys.c    **** #ifdef DM42
 7770              		.loc 1 3546 13 view .LVU2388
 7771 0388 0A60     		str	r2, [r1]
3545:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 7772              		.loc 1 3545 18 view .LVU2389
 7773 038a C9F80050 		str	r5, [r9]
3546:src/keys.c    **** #ifdef DM42
 7774              		.loc 1 3546 5 is_stmt 1 view .LVU2390
3548:src/keys.c    ****       c = process(c);		// returns an op-code or state
 7775              		.loc 1 3548 5 view .LVU2391
3548:src/keys.c    ****       c = process(c);		// returns an op-code or state
 7776              		.loc 1 3548 8 is_stmt 0 view .LVU2392
 7777 038e 7FF4EFAE 		bne	.L773
3552:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7778              		.loc 1 3552 7 is_stmt 1 view .LVU2393
3552:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7779              		.loc 1 3552 11 is_stmt 0 view .LVU2394
 7780 0392 A64A     		ldr	r2, .L1403+24
 7781 0394 1068     		ldr	r0, [r2]
3552:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7782              		.loc 1 3552 10 view .LVU2395
 7783 0396 10F47042 		ands	r2, r0, #61440
 7784 039a 1BD0     		beq	.L1082
3552:src/keys.c    **** 	const unsigned int rarg = RARG_CMD(nd_opcode);
 7785              		.loc 1 3552 11 discriminator 1 view .LVU2396
 7786 039c B2F5704F 		cmp	r2, #61440
 7787 03a0 00F0AA80 		beq	.L1083
 7788              	.LBB1382:
3553:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 7789              		.loc 1 3553 2 is_stmt 1 view .LVU2397
3553:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 7790              		.loc 1 3553 28 is_stmt 0 view .LVU2398
 7791 03a4 C0F30722 		ubfx	r2, r0, #8, #8
 7792 03a8 A2F12004 		sub	r4, r2, #32
 7793              	.LVL649:
3553:src/keys.c    **** 	if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 7794              		.loc 1 3553 28 view .LVU2399
 7795 03ac E4B2     		uxtb	r4, r4
 7796              	.LVL650:
3554:src/keys.c    **** 	  c = nd_opcode;
 7797              		.loc 1 3554 2 is_stmt 1 view .LVU2400
3554:src/keys.c    **** 	  c = nd_opcode;
 7798              		.loc 1 3554 5 is_stmt 0 view .LVU2401
 7799 03ae 012C     		cmp	r4, #1
 7800 03b0 35D9     		bls	.L1084
3554:src/keys.c    **** 	  c = nd_opcode;
 7801              		.loc 1 3554 53 discriminator 1 view .LVU2402
 7802 03b2 6C2C     		cmp	r4, #108
ARM GAS  /tmp/cc8xFAqJ.s 			page 240


 7803 03b4 33D0     		beq	.L1084
3554:src/keys.c    **** 	  c = nd_opcode;
 7804              		.loc 1 3554 74 discriminator 2 view .LVU2403
 7805 03b6 242C     		cmp	r4, #36
 7806 03b8 31D0     		beq	.L1084
3556:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 7807              		.loc 1 3556 7 is_stmt 1 view .LVU2404
3556:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 7808              		.loc 1 3556 32 is_stmt 0 view .LVU2405
 7809 03ba A4F12D01 		sub	r1, r4, #45
3556:src/keys.c    **** 	  State2.test = TST_EQ + (RARG_CMD(nd_opcode) - RARG_TEST_EQ);
 7810              		.loc 1 3556 10 view .LVU2406
 7811 03be 0629     		cmp	r1, #6
 7812 03c0 00F24782 		bhi	.L1086
3557:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7813              		.loc 1 3557 4 is_stmt 1 view .LVU2407
3557:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7814              		.loc 1 3557 25 is_stmt 0 view .LVU2408
 7815 03c4 4D3A     		subs	r2, r2, #77
3557:src/keys.c    **** 	  c = STATE_UNFINISHED;
 7816              		.loc 1 3557 16 view .LVU2409
 7817 03c6 88F80F20 		strb	r2, [r8, #15]
3558:src/keys.c    **** 	}
 7818              		.loc 1 3558 4 is_stmt 1 view .LVU2410
 7819              	.LVL651:
3558:src/keys.c    **** 	}
 7820              		.loc 1 3558 4 is_stmt 0 view .LVU2411
 7821              	.LBE1382:
3572:src/keys.c    ****     case STATE_SST:
 7822              		.loc 1 3572 5 is_stmt 1 view .LVU2412
 7823              	.LBB1385:
3558:src/keys.c    **** 	}
 7824              		.loc 1 3558 6 is_stmt 0 view .LVU2413
 7825 03ca 3324     		movs	r4, #51
 7826              	.LVL652:
3558:src/keys.c    **** 	}
 7827              		.loc 1 3558 6 view .LVU2414
 7828 03cc 73E6     		b	.L801
 7829              	.LVL653:
 7830              	.L1313:
3558:src/keys.c    **** 	}
 7831              		.loc 1 3558 6 view .LVU2415
 7832              	.LBE1385:
3393:src/keys.c    ****     }
 7833              		.loc 1 3393 7 is_stmt 1 view .LVU2416
 7834 03ce FFF7FEFF 		bl	xeq_xrom
 7835              	.LVL654:
3393:src/keys.c    ****     }
 7836              		.loc 1 3393 7 is_stmt 0 view .LVU2417
 7837 03d2 21E6     		b	.L771
 7838              	.L1082:
3566:src/keys.c    ****       }      
 7839              		.loc 1 3566 2 is_stmt 1 view .LVU2418
 7840              	.LBB1386:
 7841              	.LBB1387:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 7842              		.loc 1 705 5 is_stmt 0 view .LVU2419
ARM GAS  /tmp/cc8xFAqJ.s 			page 241


 7843 03d4 C0F30723 		ubfx	r3, r0, #8, #8
 7844 03d8 012B     		cmp	r3, #1
 7845              	.LBE1387:
 7846              	.LBE1386:
3566:src/keys.c    ****       }      
 7847              		.loc 1 3566 6 view .LVU2420
 7848 03da 0446     		mov	r4, r0
 7849              	.LVL655:
 7850              	.LBB1391:
 7851              	.LBI1386:
 704:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 7852              		.loc 1 704 12 is_stmt 1 view .LVU2421
 7853              	.LBB1388:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 7854              		.loc 1 705 2 view .LVU2422
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 7855              		.loc 1 705 5 is_stmt 0 view .LVU2423
 7856 03dc 00F09180 		beq	.L1113
 7857              	.LVL656:
 7858              	.L835:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 7859              		.loc 1 705 5 view .LVU2424
 7860              	.LBE1388:
 7861              	.LBE1391:
3572:src/keys.c    ****     case STATE_SST:
 7862              		.loc 1 3572 5 is_stmt 1 view .LVU2425
 7863 03e0 A4F12B03 		sub	r3, r4, #43
 7864 03e4 082B     		cmp	r3, #8
 7865 03e6 00F2C280 		bhi	.L1088
 7866 03ea 01A2     		adr	r2, .L1090
 7867 03ec 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7868              		.p2align 2
 7869              	.L1090:
 7870 03f0 3F040000 		.word	.L1091+1
 7871 03f4 3F040000 		.word	.L1091+1
 7872 03f8 6F050000 		.word	.L1088+1
 7873 03fc C9040000 		.word	.L1025+1
 7874 0400 B9040000 		.word	.L1021+1
 7875 0404 9F040000 		.word	.L1018+1
 7876 0408 41030000 		.word	.L811+1
 7877 040c 39040000 		.word	.L1307+1
 7878 0410 39040000 		.word	.L1307+1
 7879              		.p2align 1
 7880              	.L1322:
3462:src/keys.c    ****       return;
 7881              		.loc 1 3462 21 is_stmt 0 discriminator 1 view .LVU2426
 7882 0414 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
3462:src/keys.c    ****       return;
 7883              		.loc 1 3462 18 discriminator 1 view .LVU2427
 7884 0416 002A     		cmp	r2, #0
 7885 0418 7FF4A0AE 		bne	.L787
 7886 041c 71E6     		b	.L770
 7887              	.LVL657:
 7888              	.L1084:
 7889              	.LBB1392:
3555:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
 7890              		.loc 1 3555 4 is_stmt 1 view .LVU2428
ARM GAS  /tmp/cc8xFAqJ.s 			page 242


 7891 041e 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
3555:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
 7892              		.loc 1 3555 6 is_stmt 0 view .LVU2429
 7893 0422 0446     		mov	r4, r0
 7894              	.LVL658:
 7895              	.L862:
3555:src/keys.c    **** 	else if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE) {
 7896              		.loc 1 3555 6 view .LVU2430
 7897              	.LBE1392:
3608:src/keys.c    **** 	NonProgrammable = 0;
 7898              		.loc 1 3608 7 is_stmt 1 view .LVU2431
3608:src/keys.c    **** 	NonProgrammable = 0;
 7899              		.loc 1 3608 10 is_stmt 0 view .LVU2432
 7900 0424 4A06     		lsls	r2, r1, #25
 7901 0426 00F11381 		bmi	.L1346
 7902              	.L1109:
3608:src/keys.c    **** 	NonProgrammable = 0;
 7903              		.loc 1 3608 26 view .LVU2433
 7904 042a 814B     		ldr	r3, .L1403+28
 7905 042c 1A68     		ldr	r2, [r3]
 7906 042e 002A     		cmp	r2, #0
 7907 0430 41F04182 		bne	.L1347
 7908              	.LVL659:
 7909              	.L1098:
3630:src/keys.c    ****       }
 7910              		.loc 1 3630 2 is_stmt 1 view .LVU2434
 7911 0434 FFF7FEFF 		bl	stoprog
 7912              	.LVL660:
 7913              	.L1307:
 7914 0438 3368     		ldr	r3, [r6]
3387:src/keys.c    ****   if (was_paused && Pause == 0)
 7915              		.loc 1 3387 7 is_stmt 0 view .LVU2435
 7916 043a 0025     		movs	r5, #0
 7917 043c 3BE6     		b	.L801
 7918              	.LVL661:
 7919              	.L1091:
3599:src/keys.c    **** 	set_window(c);
 7920              		.loc 1 3599 7 is_stmt 1 view .LVU2436
3599:src/keys.c    **** 	set_window(c);
 7921              		.loc 1 3599 12 is_stmt 0 view .LVU2437
 7922 043e FFF7FEFF 		bl	is_bad_cmdline
 7923              	.LVL662:
3599:src/keys.c    **** 	set_window(c);
 7924              		.loc 1 3599 10 view .LVU2438
 7925 0442 0546     		mov	r5, r0
 7926 0444 0028     		cmp	r0, #0
 7927 0446 F7D1     		bne	.L1307
3600:src/keys.c    ****       break;
 7928              		.loc 1 3600 2 is_stmt 1 view .LVU2439
 7929 0448 2046     		mov	r0, r4
 7930 044a FFF7FEFF 		bl	set_window
 7931              	.LVL663:
 7932 044e 31E6     		b	.L1309
 7933              	.L1321:
3454:src/keys.c    ****       JustStopped = 0;
 7934              		.loc 1 3454 25 is_stmt 0 discriminator 1 view .LVU2440
 7935 0450 FFF7FEFF 		bl	is_key_pressed
ARM GAS  /tmp/cc8xFAqJ.s 			page 243


 7936              	.LVL664:
3454:src/keys.c    ****       JustStopped = 0;
 7937              		.loc 1 3454 21 discriminator 1 view .LVU2441
 7938 0454 0028     		cmp	r0, #0
 7939 0456 7FF47CAE 		bne	.L785
3455:src/keys.c    ****     }
 7940              		.loc 1 3455 7 is_stmt 1 view .LVU2442
3455:src/keys.c    ****     }
 7941              		.loc 1 3455 19 is_stmt 0 view .LVU2443
 7942 045a 2860     		str	r0, [r5]
 7943 045c 79E6     		b	.L785
 7944              	.LVL665:
 7945              	.L808:
 7946              	.LBB1393:
 7947              	.LBB1334:
3201:src/keys.c    **** 	set_pc(0);
 7948              		.loc 1 3201 7 is_stmt 1 view .LVU2444
3201:src/keys.c    **** 	set_pc(0);
 7949              		.loc 1 3201 11 is_stmt 0 view .LVU2445
 7950 045e 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
3201:src/keys.c    **** 	set_pc(0);
 7951              		.loc 1 3201 10 view .LVU2446
 7952 0460 4BB1     		cbz	r3, .L810
3201:src/keys.c    **** 	set_pc(0);
 7953              		.loc 1 3201 20 view .LVU2447
 7954 0462 744B     		ldr	r3, .L1403+32
 7955 0464 1B68     		ldr	r3, [r3]
 7956 0466 B3F8E037 		ldrh	r3, [r3, #2016]
3201:src/keys.c    **** 	set_pc(0);
 7957              		.loc 1 3201 17 view .LVU2448
 7958 046a 9B0B     		lsrs	r3, r3, #14
 7959 046c 032B     		cmp	r3, #3
 7960 046e 02D1     		bne	.L810
3202:src/keys.c    ****       Pause = 0;
 7961              		.loc 1 3202 2 is_stmt 1 view .LVU2449
 7962 0470 0020     		movs	r0, #0
 7963 0472 FFF7FEFF 		bl	set_pc
 7964              	.LVL666:
 7965              	.L810:
3203:src/keys.c    ****       xeq_xrom();
 7966              		.loc 1 3203 7 view .LVU2450
3203:src/keys.c    ****       xeq_xrom();
 7967              		.loc 1 3203 13 is_stmt 0 view .LVU2451
 7968 0476 0025     		movs	r5, #0
 7969 0478 3D70     		strb	r5, [r7]
3204:src/keys.c    ****       set_running_off();
 7970              		.loc 1 3204 7 is_stmt 1 view .LVU2452
 7971 047a FFF7FEFF 		bl	xeq_xrom
 7972              	.LVL667:
3205:src/keys.c    ****       DispMsg = "Stopped";
 7973              		.loc 1 3205 7 view .LVU2453
 7974 047e FFF7FEFF 		bl	set_running_off
 7975              	.LVL668:
3206:src/keys.c    ****       State2.disp_freeze = 0;
 7976              		.loc 1 3206 7 view .LVU2454
3207:src/keys.c    ****       return STATE_UNFINISHED;
 7977              		.loc 1 3207 26 is_stmt 0 view .LVU2455
ARM GAS  /tmp/cc8xFAqJ.s 			page 244


 7978 0482 644A     		ldr	r2, .L1403
3206:src/keys.c    ****       State2.disp_freeze = 0;
 7979              		.loc 1 3206 15 view .LVU2456
 7980 0484 6C48     		ldr	r0, .L1403+36
3207:src/keys.c    ****       return STATE_UNFINISHED;
 7981              		.loc 1 3207 26 view .LVU2457
 7982 0486 D17D     		ldrb	r1, [r2, #23]	@ zero_extendqisi2
3206:src/keys.c    ****       State2.disp_freeze = 0;
 7983              		.loc 1 3206 15 view .LVU2458
 7984 0488 6C4C     		ldr	r4, .L1403+40
 7985              	.LVL669:
3206:src/keys.c    ****       State2.disp_freeze = 0;
 7986              		.loc 1 3206 15 view .LVU2459
 7987 048a 0460     		str	r4, [r0]
3207:src/keys.c    ****       return STATE_UNFINISHED;
 7988              		.loc 1 3207 7 is_stmt 1 view .LVU2460
3207:src/keys.c    ****       return STATE_UNFINISHED;
 7989              		.loc 1 3207 26 is_stmt 0 view .LVU2461
 7990 048c 65F30411 		bfi	r1, r5, #4, #1
 7991 0490 3368     		ldr	r3, [r6]
 7992 0492 D175     		strb	r1, [r2, #23]
3208:src/keys.c    ****     }
 7993              		.loc 1 3208 7 is_stmt 1 view .LVU2462
3208:src/keys.c    ****     }
 7994              		.loc 1 3208 14 is_stmt 0 view .LVU2463
 7995 0494 3324     		movs	r4, #51
 7996 0496 0EE6     		b	.L801
 7997              	.LVL670:
 7998              	.L1009:
 7999              	.LBB904:
 8000              	.LBB905:
1798:src/keys.c    **** 			return STATE_BACKSPACE;
 8001              		.loc 1 1798 3 is_stmt 1 view .LVU2464
1798:src/keys.c    **** 			return STATE_BACKSPACE;
 8002              		.loc 1 1798 6 is_stmt 0 view .LVU2465
 8003 0498 0028     		cmp	r0, #0
 8004 049a 41F07A82 		bne	.L1019
 8005              	.LVL671:
 8006              	.L1018:
1798:src/keys.c    **** 			return STATE_BACKSPACE;
 8007              		.loc 1 1798 6 view .LVU2466
 8008              	.LBE905:
 8009              	.LBE904:
 8010              	.LBE1334:
 8011              	.LBE1393:
3584:src/keys.c    **** 	delprog();
 8012              		.loc 1 3584 7 is_stmt 1 view .LVU2467
3584:src/keys.c    **** 	delprog();
 8013              		.loc 1 3584 11 is_stmt 0 view .LVU2468
 8014 049e 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3584:src/keys.c    **** 	delprog();
 8015              		.loc 1 3584 10 view .LVU2469
 8016 04a2 13F04005 		ands	r5, r3, #64
 8017 04a6 00F09E80 		beq	.L1348
3586:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 8018              		.loc 1 3586 12 is_stmt 1 view .LVU2470
3586:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
ARM GAS  /tmp/cc8xFAqJ.s 			page 245


 8019              		.loc 1 3586 15 is_stmt 0 view .LVU2471
 8020 04aa 13F00805 		ands	r5, r3, #8
 8021 04ae 40F08180 		bne	.L1093
 8022              	.L1308:
 8023 04b2 3368     		ldr	r3, [r6]
 8024              	.LBB1394:
3589:src/keys.c    ****       }
 8025              		.loc 1 3589 9 view .LVU2472
 8026 04b4 3024     		movs	r4, #48
 8027 04b6 FEE5     		b	.L801
 8028              	.L1021:
 8029              	.LBE1394:
3580:src/keys.c    ****       break;
 8030              		.loc 1 3580 7 is_stmt 1 view .LVU2473
 8031 04b8 4FF0FF30 		mov	r0, #-1
 8032 04bc FFF7FEFF 		bl	xeq_sst_bst
 8033              	.LVL672:
3581:src/keys.c    **** 
 8034              		.loc 1 3581 7 view .LVU2474
3387:src/keys.c    ****   if (was_paused && Pause == 0)
 8035              		.loc 1 3387 7 is_stmt 0 view .LVU2475
 8036 04c0 0025     		movs	r5, #0
 8037 04c2 3368     		ldr	r3, [r6]
3581:src/keys.c    **** 
 8038              		.loc 1 3581 7 view .LVU2476
 8039 04c4 2F24     		movs	r4, #47
 8040 04c6 F6E5     		b	.L801
 8041              	.L1025:
3574:src/keys.c    ****       OpCodeDisplayPending = 0;
 8042              		.loc 1 3574 7 is_stmt 1 view .LVU2477
3574:src/keys.c    ****       OpCodeDisplayPending = 0;
 8043              		.loc 1 3574 14 is_stmt 0 view .LVU2478
 8044 04c8 574A     		ldr	r2, .L1403+20
3575:src/keys.c    ****       xeq_sst_bst(0);
 8045              		.loc 1 3575 28 view .LVU2479
 8046 04ca 5D4B     		ldr	r3, .L1403+44
 8047 04cc 0020     		movs	r0, #0
3574:src/keys.c    ****       OpCodeDisplayPending = 0;
 8048              		.loc 1 3574 14 view .LVU2480
 8049 04ce 2E24     		movs	r4, #46
 8050 04d0 1460     		str	r4, [r2]
3575:src/keys.c    ****       xeq_sst_bst(0);
 8051              		.loc 1 3575 7 is_stmt 1 view .LVU2481
3575:src/keys.c    ****       xeq_sst_bst(0);
 8052              		.loc 1 3575 28 is_stmt 0 view .LVU2482
 8053 04d2 1860     		str	r0, [r3]
3576:src/keys.c    ****       break;
 8054              		.loc 1 3576 7 is_stmt 1 view .LVU2483
3387:src/keys.c    ****   if (was_paused && Pause == 0)
 8055              		.loc 1 3387 7 is_stmt 0 view .LVU2484
 8056 04d4 0546     		mov	r5, r0
3576:src/keys.c    ****       break;
 8057              		.loc 1 3576 7 view .LVU2485
 8058 04d6 FFF7FEFF 		bl	xeq_sst_bst
 8059              	.LVL673:
3577:src/keys.c    **** 
 8060              		.loc 1 3577 7 is_stmt 1 view .LVU2486
ARM GAS  /tmp/cc8xFAqJ.s 			page 246


 8061 04da EBE5     		b	.L1309
 8062              	.LVL674:
 8063              	.L1317:
3577:src/keys.c    **** 
 8064              		.loc 1 3577 7 is_stmt 0 view .LVU2487
 8065 04dc 504E     		ldr	r6, .L1403+12
 8066 04de 3368     		ldr	r3, [r6]
 8067 04e0 3CE6     		b	.L787
 8068              	.L1316:
3476:src/keys.c    ****       finish_RPN(); // RPN
 8069              		.loc 1 3476 7 is_stmt 1 view .LVU2488
 8070 04e2 8D20     		movs	r0, #141
 8071 04e4 FFF7FEFF 		bl	clr_dot
 8072              	.LVL675:
3477:src/keys.c    ****     }
 8073              		.loc 1 3477 7 view .LVU2489
 8074 04e8 FFF7FEFF 		bl	finish_RPN
 8075              	.LVL676:
 8076 04ec ABE5     		b	.L789
 8077              	.L800:
3537:src/keys.c    ****     }
 8078              		.loc 1 3537 7 view .LVU2490
 8079 04ee FFF7FEFF 		bl	finish_RPN
 8080              	.LVL677:
3387:src/keys.c    ****   if (was_paused && Pause == 0)
 8081              		.loc 1 3387 7 is_stmt 0 view .LVU2491
 8082 04f2 0025     		movs	r5, #0
 8083 04f4 3368     		ldr	r3, [r6]
 8084 04f6 DEE5     		b	.L801
 8085              	.L1083:
3566:src/keys.c    ****       }      
 8086              		.loc 1 3566 2 is_stmt 1 view .LVU2492
 8087              	.LBB1395:
 8088              	.LBB1389:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 8089              		.loc 1 705 5 is_stmt 0 view .LVU2493
 8090 04f8 C0F30723 		ubfx	r3, r0, #8, #8
 8091 04fc 012B     		cmp	r3, #1
 8092              	.LBE1389:
 8093              	.LBE1395:
3566:src/keys.c    ****       }      
 8094              		.loc 1 3566 6 view .LVU2494
 8095 04fe 0446     		mov	r4, r0
 8096              	.LVL678:
 8097              	.LBB1396:
 704:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8098              		.loc 1 704 12 is_stmt 1 view .LVU2495
 8099              	.LBB1390:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 8100              		.loc 1 705 2 view .LVU2496
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 8101              		.loc 1 705 5 is_stmt 0 view .LVU2497
 8102 0500 69D1     		bne	.L1349
 8103              	.LVL679:
 8104              	.L1113:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 8105              		.loc 1 705 5 view .LVU2498
ARM GAS  /tmp/cc8xFAqJ.s 			page 247


 8106 0502 FFF7FEFF 		bl	check_confirm.part.0
 8107              	.LVL680:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 8108              		.loc 1 705 5 view .LVU2499
 8109 0506 0446     		mov	r4, r0
 8110              	.LVL681:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 8111              		.loc 1 705 5 view .LVU2500
 8112 0508 6AE7     		b	.L835
 8113              	.LVL682:
 8114              	.L792:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 8115              		.loc 1 705 5 view .LVU2501
 8116              	.LBE1390:
 8117              	.LBE1396:
3518:src/keys.c    **** #ifndef CONSOLE
 8118              		.loc 1 3518 7 is_stmt 1 view .LVU2502
 8119 050a 464B     		ldr	r3, .L1403+16
 8120 050c 8D20     		movs	r0, #141
 8121 050e 1968     		ldr	r1, [r3]
 8122 0510 FFF7FEFF 		bl	dot
 8123              	.LVL683:
3520:src/keys.c    **** 	if (!WasDataEntry) {
 8124              		.loc 1 3520 7 view .LVU2503
3520:src/keys.c    **** 	if (!WasDataEntry) {
 8125              		.loc 1 3520 11 is_stmt 0 view .LVU2504
 8126 0514 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3520:src/keys.c    **** 	if (!WasDataEntry) {
 8127              		.loc 1 3520 10 view .LVU2505
 8128 0518 9806     		lsls	r0, r3, #26
 8129 051a 3FF5F2AD 		bmi	.L770
3521:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 8130              		.loc 1 3521 2 is_stmt 1 view .LVU2506
3521:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 8131              		.loc 1 3521 6 is_stmt 0 view .LVU2507
 8132 051e 494B     		ldr	r3, .L1403+48
3521:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 8133              		.loc 1 3521 5 view .LVU2508
 8134 0520 1B68     		ldr	r3, [r3]
 8135 0522 002B     		cmp	r3, #0
 8136 0524 70D1     		bne	.L803
3523:src/keys.c    **** 	}
 8137              		.loc 1 3523 4 is_stmt 1 view .LVU2509
 8138              		.loc 1 3649 1 is_stmt 0 view .LVU2510
 8139 0526 03B0     		add	sp, sp, #12
 8140              		.cfi_remember_state
 8141              		.cfi_def_cfa_offset 36
 8142              		@ sp needed
 8143 0528 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8144              		.cfi_restore 14
 8145              		.cfi_restore 11
 8146              		.cfi_restore 10
 8147              		.cfi_restore 9
 8148              		.cfi_restore 8
 8149              		.cfi_restore 7
 8150              		.cfi_restore 6
 8151              		.cfi_restore 5
ARM GAS  /tmp/cc8xFAqJ.s 			page 248


 8152              		.cfi_restore 4
 8153              		.cfi_def_cfa_offset 0
 8154              	.LVL684:
3523:src/keys.c    **** 	}
 8155              		.loc 1 3523 4 view .LVU2511
 8156 052c FFF7FEBF 		b	display
 8157              	.LVL685:
 8158              	.L1318:
 8159              		.cfi_restore_state
3506:src/keys.c    ****       else {
 8160              		.loc 1 3506 2 is_stmt 1 view .LVU2512
 8161 0530 FFF7FEFF 		bl	xeq_sst_bst
 8162              	.LVL686:
3506:src/keys.c    ****       else {
 8163              		.loc 1 3506 2 is_stmt 0 view .LVU2513
 8164 0534 3A4E     		ldr	r6, .L1403+12
 8165 0536 B4E5     		b	.L794
 8166              	.L1320:
3439:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 8167              		.loc 1 3439 28 discriminator 1 view .LVU2514
 8168 0538 FFF7FEFF 		bl	shift_down
 8169              	.LVL687:
3439:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 8170              		.loc 1 3439 25 discriminator 1 view .LVU2515
 8171 053c 0028     		cmp	r0, #0
 8172 053e 3FF403AE 		beq	.L776
3441:src/keys.c    ****       }
 8173              		.loc 1 3441 2 is_stmt 1 view .LVU2516
3441:src/keys.c    ****       }
 8174              		.loc 1 3441 16 is_stmt 0 view .LVU2517
 8175 0542 344B     		ldr	r3, .L1403
 8176 0544 0022     		movs	r2, #0
 8177 0546 1A74     		strb	r2, [r3, #16]
 8178 0548 FEE5     		b	.L776
 8179              	.L1319:
3441:src/keys.c    ****       }
 8180              		.loc 1 3441 16 view .LVU2518
 8181 054a 354E     		ldr	r6, .L1403+12
 8182 054c A9E5     		b	.L794
 8183              	.L779:
3429:src/keys.c    **** 	  /*
 8184              		.loc 1 3429 10 is_stmt 1 view .LVU2519
3429:src/keys.c    **** 	  /*
 8185              		.loc 1 3429 14 is_stmt 0 view .LVU2520
 8186 054e FFF7FEFF 		bl	keyticks
 8187              	.LVL688:
3429:src/keys.c    **** 	  /*
 8188              		.loc 1 3429 13 view .LVU2521
 8189 0552 0C28     		cmp	r0, #12
 8190 0554 7FF7F3AD 		ble	.L778
3433:src/keys.c    **** 	  message("NULL", CNULL);
 8191              		.loc 1 3433 4 is_stmt 1 view .LVU2522
3434:src/keys.c    **** 	  // Force display update on key-up
 8192              		.loc 1 3434 4 is_stmt 0 view .LVU2523
 8193 0558 3B48     		ldr	r0, .L1403+52
3433:src/keys.c    **** 	  message("NULL", CNULL);
 8194              		.loc 1 3433 11 view .LVU2524
ARM GAS  /tmp/cc8xFAqJ.s 			page 249


 8195 055a 2E60     		str	r6, [r5]
3434:src/keys.c    **** 	  // Force display update on key-up
 8196              		.loc 1 3434 4 is_stmt 1 view .LVU2525
 8197 055c 3146     		mov	r1, r6
 8198 055e FFF7FEFF 		bl	message
 8199              	.LVL689:
3436:src/keys.c    **** 	}
 8200              		.loc 1 3436 4 view .LVU2526
3436:src/keys.c    **** 	}
 8201              		.loc 1 3436 21 is_stmt 0 view .LVU2527
 8202 0562 2C4B     		ldr	r3, .L1403
 8203 0564 DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 8204 0566 66F34512 		bfi	r2, r6, #5, #1
 8205 056a DA75     		strb	r2, [r3, #23]
 8206 056c E7E5     		b	.L778
 8207              	.L1088:
3608:src/keys.c    **** 	NonProgrammable = 0;
 8208              		.loc 1 3608 11 view .LVU2528
 8209 056e 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 8210 0572 2F4A     		ldr	r2, .L1403+28
3608:src/keys.c    **** 	NonProgrammable = 0;
 8211              		.loc 1 3608 10 view .LVU2529
 8212 0574 5D06     		lsls	r5, r3, #25
 8213 0576 2046     		mov	r0, r4
 8214              	.LVL690:
3608:src/keys.c    **** 	NonProgrammable = 0;
 8215              		.loc 1 3608 7 is_stmt 1 view .LVU2530
3608:src/keys.c    **** 	NonProgrammable = 0;
 8216              		.loc 1 3608 10 is_stmt 0 view .LVU2531
 8217 0578 41F19781 		bpl	.L1293
 8218              	.L1097:
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8219              		.loc 1 3609 2 is_stmt 1 view .LVU2532
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8220              		.loc 1 3609 18 is_stmt 0 view .LVU2533
 8221 057c 0023     		movs	r3, #0
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8222              		.loc 1 3610 5 view .LVU2534
 8223 057e 142C     		cmp	r4, #20
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8224              		.loc 1 3609 18 view .LVU2535
 8225 0580 1360     		str	r3, [r2]
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8226              		.loc 1 3610 2 is_stmt 1 view .LVU2536
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8227              		.loc 1 3610 5 is_stmt 0 view .LVU2537
 8228 0582 68D8     		bhi	.L1096
3611:src/keys.c    **** 	    // Data entry key
 8229              		.loc 1 3611 4 is_stmt 1 view .LVU2538
3611:src/keys.c    **** 	    // Data entry key
 8230              		.loc 1 3611 7 is_stmt 0 view .LVU2539
 8231 0584 24B9     		cbnz	r4, .L1100
3611:src/keys.c    **** 	    // Data entry key
 8232              		.loc 1 3611 38 discriminator 1 view .LVU2540
 8233 0586 FFF7FEFF 		bl	is_bad_cmdline
 8234              	.LVL691:
3611:src/keys.c    **** 	    // Data entry key
ARM GAS  /tmp/cc8xFAqJ.s 			page 250


 8235              		.loc 1 3611 34 discriminator 1 view .LVU2541
 8236 058a 0028     		cmp	r0, #0
 8237 058c 7FF454AF 		bne	.L1307
 8238              	.L1100:
3614:src/keys.c    **** #endif
 8239              		.loc 1 3614 6 is_stmt 1 view .LVU2542
3616:src/keys.c    **** 	    xeq(c);
 8240              		.loc 1 3616 37 is_stmt 0 view .LVU2543
 8241 0590 98F81C50 		ldrb	r5, [r8, #28]	@ zero_extendqisi2
3614:src/keys.c    **** #endif
 8242              		.loc 1 3614 19 view .LVU2544
 8243 0594 0123     		movs	r3, #1
3617:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 8244              		.loc 1 3617 6 view .LVU2545
 8245 0596 2046     		mov	r0, r4
3614:src/keys.c    **** #endif
 8246              		.loc 1 3614 19 view .LVU2546
 8247 0598 C9F80030 		str	r3, [r9]
3616:src/keys.c    **** 	    xeq(c);
 8248              		.loc 1 3616 6 is_stmt 1 view .LVU2547
3616:src/keys.c    **** 	    xeq(c);
 8249              		.loc 1 3616 37 is_stmt 0 view .LVU2548
 8250 059c B5FA85F5 		clz	r5, r5
3617:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 8251              		.loc 1 3617 6 view .LVU2549
 8252 05a0 FFF7FEFF 		bl	xeq
 8253              	.LVL692:
3618:src/keys.c    **** 	  }
 8254              		.loc 1 3618 38 view .LVU2550
 8255 05a4 98F81C00 		ldrb	r0, [r8, #28]	@ zero_extendqisi2
 8256 05a8 3368     		ldr	r3, [r6]
3616:src/keys.c    **** 	    xeq(c);
 8257              		.loc 1 3616 37 view .LVU2551
 8258 05aa 6D09     		lsrs	r5, r5, #5
 8259              	.LVL693:
3617:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 8260              		.loc 1 3617 6 is_stmt 1 view .LVU2552
3618:src/keys.c    **** 	  }
 8261              		.loc 1 3618 6 view .LVU2553
3618:src/keys.c    **** 	  }
 8262              		.loc 1 3618 20 is_stmt 0 view .LVU2554
 8263 05ac 0028     		cmp	r0, #0
 8264 05ae 08BF     		it	eq
 8265 05b0 0125     		moveq	r5, #1
 8266              	.LVL694:
3618:src/keys.c    **** 	  }
 8267              		.loc 1 3618 20 view .LVU2555
 8268 05b2 80E5     		b	.L801
 8269              	.LVL695:
 8270              	.L1093:
 8271              	.LBB1397:
3587:src/keys.c    **** 	if (p > Alpha)
 8272              		.loc 1 3587 2 is_stmt 1 view .LVU2556
3587:src/keys.c    **** 	if (p > Alpha)
 8273              		.loc 1 3587 22 is_stmt 0 view .LVU2557
 8274 05b4 1F4C     		ldr	r4, .L1403+32
 8275 05b6 2068     		ldr	r0, [r4]
ARM GAS  /tmp/cc8xFAqJ.s 			page 251


3587:src/keys.c    **** 	if (p > Alpha)
 8276              		.loc 1 3587 12 view .LVU2558
 8277 05b8 0021     		movs	r1, #0
 8278 05ba 00F5F660 		add	r0, r0, #1968
 8279 05be FFF7FEFF 		bl	find_char
 8280              	.LVL696:
3588:src/keys.c    **** 	  *--p = '\0';
 8281              		.loc 1 3588 8 view .LVU2559
 8282 05c2 2368     		ldr	r3, [r4]
 8283              	.LVL697:
3588:src/keys.c    **** 	  *--p = '\0';
 8284              		.loc 1 3588 2 is_stmt 1 view .LVU2560
3588:src/keys.c    **** 	  *--p = '\0';
 8285              		.loc 1 3588 8 is_stmt 0 view .LVU2561
 8286 05c4 03F5F663 		add	r3, r3, #1968
3588:src/keys.c    **** 	  *--p = '\0';
 8287              		.loc 1 3588 5 view .LVU2562
 8288 05c8 9842     		cmp	r0, r3
 8289 05ca 00F2BB80 		bhi	.L1094
 8290 05ce 3368     		ldr	r3, [r6]
 8291              	.LBE1397:
3387:src/keys.c    ****   if (was_paused && Pause == 0)
 8292              		.loc 1 3387 7 view .LVU2563
 8293 05d0 0025     		movs	r5, #0
 8294              	.LBB1398:
3588:src/keys.c    **** 	  *--p = '\0';
 8295              		.loc 1 3588 5 view .LVU2564
 8296 05d2 3024     		movs	r4, #48
 8297 05d4 6FE5     		b	.L801
 8298              	.LVL698:
 8299              	.L1349:
3588:src/keys.c    **** 	  *--p = '\0';
 8300              		.loc 1 3588 5 view .LVU2565
 8301              	.LBE1398:
3608:src/keys.c    **** 	NonProgrammable = 0;
 8302              		.loc 1 3608 7 is_stmt 1 view .LVU2566
3608:src/keys.c    **** 	NonProgrammable = 0;
 8303              		.loc 1 3608 11 is_stmt 0 view .LVU2567
 8304 05d6 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3608:src/keys.c    **** 	NonProgrammable = 0;
 8305              		.loc 1 3608 10 view .LVU2568
 8306 05da 5B06     		lsls	r3, r3, #25
 8307 05dc 7FF525AF 		bpl	.L1109
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8308              		.loc 1 3609 2 is_stmt 1 view .LVU2569
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8309              		.loc 1 3609 18 is_stmt 0 view .LVU2570
 8310 05e0 134B     		ldr	r3, .L1403+28
 8311 05e2 1D60     		str	r5, [r3]
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8312              		.loc 1 3610 2 is_stmt 1 view .LVU2571
 8313 05e4 37E0     		b	.L1096
 8314              	.LVL699:
 8315              	.L1348:
3585:src/keys.c    ****       else if (State2.alphas) {
 8316              		.loc 1 3585 2 view .LVU2572
 8317 05e6 FFF7FEFF 		bl	delprog
ARM GAS  /tmp/cc8xFAqJ.s 			page 252


 8318              	.LVL700:
 8319 05ea 3024     		movs	r4, #48
 8320 05ec 3368     		ldr	r3, [r6]
 8321 05ee 62E5     		b	.L801
 8322              	.LVL701:
 8323              	.L780:
3423:src/keys.c    **** 	    DispMsg = TraceBuffer;
 8324              		.loc 1 3423 6 view .LVU2573
 8325 05f0 164E     		ldr	r6, .L1403+56
 8326 05f2 3146     		mov	r1, r6
 8327 05f4 FFF7FEFF 		bl	prt
 8328              	.LVL702:
 8329 05f8 2A46     		mov	r2, r5
 8330 05fa 0146     		mov	r1, r0
 8331 05fc 3046     		mov	r0, r6
 8332 05fe FFF7FEFF 		bl	scopy_char
 8333              	.LVL703:
3424:src/keys.c    **** 	  }
 8334              		.loc 1 3424 6 view .LVU2574
3424:src/keys.c    **** 	  }
 8335              		.loc 1 3424 14 is_stmt 0 view .LVU2575
 8336 0602 0D4B     		ldr	r3, .L1403+36
 8337 0604 1E60     		str	r6, [r3]
 8338 0606 95E5     		b	.L781
 8339              	.L803:
3526:src/keys.c    **** 	}
 8340              		.loc 1 3526 4 is_stmt 1 view .LVU2576
 8341              		.loc 1 3649 1 is_stmt 0 view .LVU2577
 8342 0608 03B0     		add	sp, sp, #12
 8343              		.cfi_remember_state
 8344              		.cfi_def_cfa_offset 36
 8345              		@ sp needed
 8346 060a BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8347              		.cfi_restore 14
 8348              		.cfi_restore 11
 8349              		.cfi_restore 10
 8350              		.cfi_restore 9
 8351              		.cfi_restore 8
 8352              		.cfi_restore 7
 8353              		.cfi_restore 6
 8354              		.cfi_restore 5
 8355              		.cfi_restore 4
 8356              		.cfi_def_cfa_offset 0
 8357              	.LVL704:
3526:src/keys.c    **** 	}
 8358              		.loc 1 3526 4 view .LVU2578
 8359 060e FFF7FEBF 		b	finish_RPN
 8360              	.LVL705:
 8361              	.L1404:
 8362 0612 00BF     		.align	2
 8363              	.L1403:
 8364 0614 00000000 		.word	StateWhileOn
 8365 0618 00000000 		.word	GoFast
 8366 061c 00000000 		.word	JustDisplayed
 8367 0620 00000000 		.word	Running
 8368 0624 00000000 		.word	ShowRPN
 8369 0628 00000000 		.word	OpCode
ARM GAS  /tmp/cc8xFAqJ.s 			page 253


 8370 062c 00000000 		.word	nd_opcode
 8371 0630 00000000 		.word	NonProgrammable
 8372 0634 00000000 		.word	main_ram
 8373 0638 00000000 		.word	DispMsg
 8374 063c 0C000000 		.word	.LC2
 8375 0640 00000000 		.word	OpCodeDisplayPending
 8376 0644 00000000 		.word	WasDataEntry
 8377 0648 04000000 		.word	.LC1
 8378 064c 00000000 		.word	TraceBuffer
 8379              	.LVL706:
 8380              	.L1346:
 8381              		.cfi_restore_state
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8382              		.loc 1 3609 2 is_stmt 1 view .LVU2579
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8383              		.loc 1 3609 18 is_stmt 0 view .LVU2580
 8384 0650 B14B     		ldr	r3, .L1405
 8385 0652 0022     		movs	r2, #0
 8386 0654 1A60     		str	r2, [r3]
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8387              		.loc 1 3610 2 is_stmt 1 view .LVU2581
 8388              	.LVL707:
 8389              	.L1096:
3623:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 8390              		.loc 1 3623 4 view .LVU2582
3623:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 8391              		.loc 1 3623 11 is_stmt 0 view .LVU2583
 8392 0656 B14A     		ldr	r2, .L1405+4
3624:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 8393              		.loc 1 3624 25 view .LVU2584
 8394 0658 B14B     		ldr	r3, .L1405+8
3623:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 8395              		.loc 1 3623 11 view .LVU2585
 8396 065a 1060     		str	r0, [r2]
3624:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 8397              		.loc 1 3624 4 is_stmt 1 view .LVU2586
3624:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 8398              		.loc 1 3624 25 is_stmt 0 view .LVU2587
 8399 065c 0122     		movs	r2, #1
 8400 065e B14E     		ldr	r6, .L1405+12
 8401 0660 1A60     		str	r2, [r3]
3625:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
 8402              		.loc 1 3625 4 is_stmt 1 view .LVU2588
 8403 0662 FFF7FEFF 		bl	finish_RPN
 8404              	.LVL708:
3626:src/keys.c    **** 	}
 8405              		.loc 1 3626 4 view .LVU2589
 8406 0666 4AE5     		b	.L1101
 8407              	.LVL709:
 8408              	.L1325:
 8409              	.LBB1399:
 8410              	.LBB1335:
3257:src/keys.c    **** 
 8411              		.loc 1 3257 3 view .LVU2590
 8412              	.LBB978:
 8413              	.LBI978:
2859:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
ARM GAS  /tmp/cc8xFAqJ.s 			page 254


 8414              		.loc 1 2859 12 view .LVU2591
 8415              	.LBB979:
2861:src/keys.c    **** #ifdef DM42
 8416              		.loc 1 2861 2 view .LVU2592
 8417 0668 E4B2     		uxtb	r4, r4
 8418              	.LVL710:
2861:src/keys.c    **** #ifdef DM42
 8419              		.loc 1 2861 2 is_stmt 0 view .LVU2593
 8420 066a A4F10E03 		sub	r3, r4, #14
 8421 066e 192B     		cmp	r3, #25
 8422 0670 17D8     		bhi	.L1104
 8423 0672 DFE803F0 		tbb	[pc, r3]
 8424              	.L827:
 8425 0676 1B       		.byte	(.L828-.L827)/2
 8426 0677 16       		.byte	(.L1104-.L827)/2
 8427 0678 1B       		.byte	(.L828-.L827)/2
 8428 0679 16       		.byte	(.L1104-.L827)/2
 8429 067a 16       		.byte	(.L1104-.L827)/2
 8430 067b 16       		.byte	(.L1104-.L827)/2
 8431 067c 16       		.byte	(.L1104-.L827)/2
 8432 067d 16       		.byte	(.L1104-.L827)/2
 8433 067e 16       		.byte	(.L1104-.L827)/2
 8434 067f 16       		.byte	(.L1104-.L827)/2
 8435 0680 16       		.byte	(.L1104-.L827)/2
 8436 0681 16       		.byte	(.L1104-.L827)/2
 8437 0682 16       		.byte	(.L1104-.L827)/2
 8438 0683 16       		.byte	(.L1104-.L827)/2
 8439 0684 16       		.byte	(.L1104-.L827)/2
 8440 0685 16       		.byte	(.L1104-.L827)/2
 8441 0686 16       		.byte	(.L1104-.L827)/2
 8442 0687 16       		.byte	(.L1104-.L827)/2
 8443 0688 27       		.byte	(.L826-.L827)/2
 8444 0689 16       		.byte	(.L1104-.L827)/2
 8445 068a 16       		.byte	(.L1104-.L827)/2
 8446 068b 16       		.byte	(.L1104-.L827)/2
 8447 068c 16       		.byte	(.L1104-.L827)/2
 8448 068d 16       		.byte	(.L1104-.L827)/2
 8449 068e 16       		.byte	(.L1104-.L827)/2
 8450 068f 27       		.byte	(.L826-.L827)/2
 8451              	.LVL711:
 8452              		.p2align 1
 8453              	.L1006:
2861:src/keys.c    **** #ifdef DM42
 8454              		.loc 1 2861 2 view .LVU2594
 8455              	.LBE979:
 8456              	.LBE978:
 8457              	.LBB982:
 8458              	.LBB965:
1846:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 8459              		.loc 1 1846 3 is_stmt 1 view .LVU2595
1846:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 8460              		.loc 1 1846 6 is_stmt 0 view .LVU2596
 8461 0690 0128     		cmp	r0, #1
 8462 0692 01F0F380 		beq	.L1311
1848:src/keys.c    **** 			return OP_NIL | OP_OFF;
 8463              		.loc 1 1848 8 is_stmt 1 view .LVU2597
1848:src/keys.c    **** 			return OP_NIL | OP_OFF;
ARM GAS  /tmp/cc8xFAqJ.s 			page 255


 8464              		.loc 1 1848 11 is_stmt 0 view .LVU2598
 8465 0696 0328     		cmp	r0, #3
 8466 0698 01F06C81 		beq	.L1028
1850:src/keys.c    **** #ifdef DM42
 8467              		.loc 1 1850 8 is_stmt 1 view .LVU2599
1850:src/keys.c    **** #ifdef DM42
 8468              		.loc 1 1850 11 is_stmt 0 view .LVU2600
 8469 069c 0028     		cmp	r0, #0
 8470 069e 01F00E81 		beq	.L1029
 8471              	.LVL712:
 8472              	.L1104:
1850:src/keys.c    **** #ifdef DM42
 8473              		.loc 1 1850 11 view .LVU2601
 8474 06a2 3368     		ldr	r3, [r6]
 8475              	.LBE965:
 8476              	.LBE982:
 8477              	.LBB983:
 8478              	.LBB984:
3181:src/keys.c    **** 	}
 8479              		.loc 1 3181 10 view .LVU2602
 8480 06a4 3324     		movs	r4, #51
 8481 06a6 06E5     		b	.L801
 8482              	.LVL713:
 8483              	.L829:
3181:src/keys.c    **** 	}
 8484              		.loc 1 3181 10 view .LVU2603
 8485              	.LBE984:
 8486              	.LBE983:
 8487              	.LBB1019:
 8488              	.LBB980:
2870:src/keys.c    **** 	  }
 8489              		.loc 1 2870 26 is_stmt 1 view .LVU2604
 8490 06a8 FFF7FEFF 		bl	clpall
 8491              	.LVL714:
2870:src/keys.c    **** 	  }
 8492              		.loc 1 2870 36 view .LVU2605
 8493              	.L828:
2879:src/keys.c    **** 	  State2.digval = 0;
 8494              		.loc 1 2879 4 view .LVU2606
2879:src/keys.c    **** 	  State2.digval = 0;
 8495              		.loc 1 2879 19 is_stmt 0 view .LVU2607
 8496 06ac 98F81420 		ldrb	r2, [r8, #20]	@ zero_extendqisi2
 8497 06b0 3368     		ldr	r3, [r6]
 8498 06b2 6FF30202 		bfc	r2, #0, #3
2880:src/keys.c    **** 	  break;
 8499              		.loc 1 2880 18 view .LVU2608
 8500 06b6 0021     		movs	r1, #0
2879:src/keys.c    **** 	  State2.digval = 0;
 8501              		.loc 1 2879 19 view .LVU2609
 8502 06b8 88F81420 		strb	r2, [r8, #20]
2880:src/keys.c    **** 	  break;
 8503              		.loc 1 2880 4 is_stmt 1 view .LVU2610
2880:src/keys.c    **** 	  break;
 8504              		.loc 1 2880 18 is_stmt 0 view .LVU2611
 8505 06bc A8F80810 		strh	r1, [r8, #8]	@ movhi
2881:src/keys.c    **** 	default:			// No state change
 8506              		.loc 1 2881 4 is_stmt 1 view .LVU2612
ARM GAS  /tmp/cc8xFAqJ.s 			page 256


 8507              	.LBE980:
 8508              	.LBE1019:
3257:src/keys.c    **** 
 8509              		.loc 1 3257 10 is_stmt 0 view .LVU2613
 8510 06c0 3324     		movs	r4, #51
 8511              	.LVL715:
 8512              	.LBB1020:
 8513              	.LBB981:
2881:src/keys.c    **** 	default:			// No state change
 8514              		.loc 1 2881 4 view .LVU2614
 8515 06c2 F8E4     		b	.L801
 8516              	.LVL716:
 8517              	.L826:
2866:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 8518              		.loc 1 2866 4 is_stmt 1 view .LVU2615
2866:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 8519              		.loc 1 2866 18 is_stmt 0 view .LVU2616
 8520 06c4 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
 8521 06c8 03F00703 		and	r3, r3, #7
 8522 06cc 013B     		subs	r3, r3, #1
 8523 06ce 032B     		cmp	r3, #3
 8524 06d0 ECD8     		bhi	.L828
 8525 06d2 01A2     		adr	r2, .L830
 8526 06d4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8527              		.p2align 2
 8528              	.L830:
 8529 06d8 F5060000 		.word	.L833+1
 8530 06dc EF060000 		.word	.L832+1
 8531 06e0 E9060000 		.word	.L831+1
 8532 06e4 A9060000 		.word	.L829+1
 8533              		.p2align 1
 8534              	.L831:
2869:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 8535              		.loc 1 2869 26 is_stmt 1 view .LVU2617
 8536 06e8 FFF7FEFF 		bl	clrprog
 8537              	.LVL717:
2869:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 8538              		.loc 1 2869 37 view .LVU2618
2869:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 8539              		.loc 1 2869 4 is_stmt 0 view .LVU2619
 8540 06ec DEE7     		b	.L828
 8541              	.L832:
2868:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 8542              		.loc 1 2868 25 is_stmt 1 view .LVU2620
 8543 06ee FFF7FEFF 		bl	reset
 8544              	.LVL718:
2868:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 8545              		.loc 1 2868 34 view .LVU2621
2868:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 8546              		.loc 1 2868 4 is_stmt 0 view .LVU2622
 8547 06f2 DBE7     		b	.L828
 8548              	.L833:
2867:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8549              		.loc 1 2867 25 is_stmt 1 view .LVU2623
 8550 06f4 FFF7FEFF 		bl	clrall
 8551              	.LVL719:
2867:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
ARM GAS  /tmp/cc8xFAqJ.s 			page 257


 8552              		.loc 1 2867 35 view .LVU2624
2867:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8553              		.loc 1 2867 4 is_stmt 0 view .LVU2625
 8554 06f8 D8E7     		b	.L828
 8555              	.LVL720:
 8556              	.L1323:
2867:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 8557              		.loc 1 2867 4 view .LVU2626
 8558              	.LBE981:
 8559              	.LBE1020:
3224:src/keys.c    **** #else
 8560              		.loc 1 3224 47 view .LVU2627
 8561 06fa DFF84082 		ldr	r8, .L1405+36
 8562 06fe 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
3224:src/keys.c    **** #else
 8563              		.loc 1 3224 36 view .LVU2628
 8564 0702 4BEA0302 		orr	r2, fp, r3
 8565 0706 12F0FF0F 		tst	r2, #255
 8566 070a 7FF44EAD 		bne	.L813
3224:src/keys.c    **** #else
 8567              		.loc 1 3224 76 view .LVU2629
 8568 070e 864A     		ldr	r2, .L1405+16
 8569 0710 D8F81430 		ldr	r3, [r8, #20]
 8570 0714 1A42     		tst	r2, r3
 8571 0716 7FF450AD 		bne	.L823
3230:src/keys.c    **** 	stack_restore();
 8572              		.loc 1 3230 7 is_stmt 1 view .LVU2630
3230:src/keys.c    **** 	stack_restore();
 8573              		.loc 1 3230 11 is_stmt 0 view .LVU2631
 8574 071a DFF818A2 		ldr	r10, .L1405+28
 8575 071e DAF80030 		ldr	r3, [r10]
 8576 0722 93F8AC37 		ldrb	r3, [r3, #1964]	@ zero_extendqisi2
3230:src/keys.c    **** 	stack_restore();
 8577              		.loc 1 3230 10 view .LVU2632
 8578 0726 03F04102 		and	r2, r3, #65
 8579 072a 412A     		cmp	r2, #65
 8580 072c 00F03886 		beq	.L1350
 8581              	.LVL721:
 8582              	.L815:
3236:src/keys.c    ****       return STATE_UNFINISHED;
 8583              		.loc 1 3236 7 is_stmt 1 view .LVU2633
 8584 0730 FFF7FEFF 		bl	soft_init_state
 8585              	.LVL722:
3237:src/keys.c    ****     }
 8586              		.loc 1 3237 7 view .LVU2634
3237:src/keys.c    ****     }
 8587              		.loc 1 3237 14 is_stmt 0 view .LVU2635
 8588 0734 3324     		movs	r4, #51
 8589 0736 3368     		ldr	r3, [r6]
 8590 0738 BDE4     		b	.L801
 8591              	.LVL723:
 8592              	.L1326:
3260:src/keys.c    **** 
 8593              		.loc 1 3260 3 is_stmt 1 view .LVU2636
3260:src/keys.c    **** 
 8594              		.loc 1 3260 10 is_stmt 0 view .LVU2637
 8595 073a E0B2     		uxtb	r0, r4
ARM GAS  /tmp/cc8xFAqJ.s 			page 258


 8596 073c FFF7FEFF 		bl	process_arg
 8597              	.LVL724:
 8598 0740 0446     		mov	r4, r0
 8599              	.LVL725:
3260:src/keys.c    **** 
 8600              		.loc 1 3260 10 view .LVU2638
 8601 0742 4DE6     		b	.L835
 8602              	.LVL726:
 8603              	.L1094:
3260:src/keys.c    **** 
 8604              		.loc 1 3260 10 view .LVU2639
 8605              	.LBE1335:
 8606              	.LBE1399:
 8607              	.LBB1400:
3589:src/keys.c    ****       }
 8608              		.loc 1 3589 4 is_stmt 1 view .LVU2640
3589:src/keys.c    ****       }
 8609              		.loc 1 3589 9 is_stmt 0 view .LVU2641
 8610 0744 0025     		movs	r5, #0
 8611 0746 00F8015C 		strb	r5, [r0, #-1]
 8612 074a B2E6     		b	.L1308
 8613              	.LVL727:
 8614              	.L1329:
3589:src/keys.c    ****       }
 8615              		.loc 1 3589 9 view .LVU2642
 8616              	.LBE1400:
 8617              	.LBB1401:
 8618              	.LBB1336:
3269:src/keys.c    **** 
 8619              		.loc 1 3269 3 is_stmt 1 view .LVU2643
 8620              	.LBB1021:
 8621              	.LBI1021:
2325:src/keys.c    **** 	int r = State2.test;
 8622              		.loc 1 2325 12 view .LVU2644
 8623              	.LBB1022:
2326:src/keys.c    **** 	int cmpx = State2.cmplx;
 8624              		.loc 1 2326 2 view .LVU2645
2327:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 8625              		.loc 1 2327 2 view .LVU2646
 8626              	.LBB1023:
 8627              	.LBB1024:
 8628              	.LBB1025:
 8629              	.LBB1026:
 143:src/keys.c    **** }
 8630              		.loc 1 143 23 is_stmt 0 view .LVU2647
 8631 074c DFF8DCC1 		ldr	ip, .L1405+20
 8632              	.LBE1026:
 8633              	.LBE1025:
 234:src/keys.c    **** }
 8634              		.loc 1 234 28 view .LVU2648
 8635 0750 DFF8DCE1 		ldr	lr, .L1405+24
 8636              	.LBB1030:
 8637              	.LBB1027:
 143:src/keys.c    **** }
 8638              		.loc 1 143 23 view .LVU2649
 8639 0754 E4B2     		uxtb	r4, r4
 8640              	.LVL728:
ARM GAS  /tmp/cc8xFAqJ.s 			page 259


 143:src/keys.c    **** }
 8641              		.loc 1 143 23 view .LVU2650
 8642              	.LBE1027:
 8643              	.LBE1030:
 8644              	.LBE1024:
 8645              	.LBE1023:
2329:src/keys.c    **** 
 8646              		.loc 1 2329 44 view .LVU2651
 8647 0756 12F0020F 		tst	r2, #2
 8648              	.LBB1035:
 8649              	.LBB1033:
 8650              	.LBB1031:
 8651              	.LBB1028:
 143:src/keys.c    **** }
 8652              		.loc 1 143 23 view .LVU2652
 8653 075a 1CF804C0 		ldrb	ip, [ip, r4]	@ zero_extendqisi2
 8654              	.LBE1028:
 8655              	.LBE1031:
 234:src/keys.c    **** }
 8656              		.loc 1 234 28 view .LVU2653
 8657 075e 1EF80CE0 		ldrb	lr, [lr, ip]	@ zero_extendqisi2
 8658              	.LBE1033:
 8659              	.LBE1035:
2327:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 8660              		.loc 1 2327 19 view .LVU2654
 8661 0762 C2F3400B 		ubfx	fp, r2, #1, #1
 8662              	.LVL729:
2328:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 8663              		.loc 1 2328 2 is_stmt 1 view .LVU2655
 8664              	.LBB1036:
 8665              	.LBI1023:
 210:src/keys.c    **** {
 8666              		.loc 1 210 14 view .LVU2656
 8667              	.LBB1034:
 212:src/keys.c    ****     // K00 - K05
 8668              		.loc 1 212 3 view .LVU2657
 234:src/keys.c    **** }
 8669              		.loc 1 234 3 view .LVU2658
 8670              	.LBB1032:
 8671              	.LBI1025:
 131:src/keys.c    **** {
 8672              		.loc 1 131 12 view .LVU2659
 8673              	.LBB1029:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8674              		.loc 1 133 2 view .LVU2660
 143:src/keys.c    **** }
 8675              		.loc 1 143 2 view .LVU2661
 143:src/keys.c    **** }
 8676              		.loc 1 143 2 is_stmt 0 view .LVU2662
 8677              	.LBE1029:
 8678              	.LBE1032:
 8679              	.LBE1034:
 8680              	.LBE1036:
2328:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 8681              		.loc 1 2328 15 view .LVU2663
 8682 0766 2EF0800C 		bic	ip, lr, #128
 8683              	.LVL730:
ARM GAS  /tmp/cc8xFAqJ.s 			page 260


2329:src/keys.c    **** 
 8684              		.loc 1 2329 2 is_stmt 1 view .LVU2664
2329:src/keys.c    **** 
 8685              		.loc 1 2329 44 is_stmt 0 view .LVU2665
 8686 076a 00F0C380 		beq	.L1351
 8687              	.LVL731:
2331:src/keys.c    **** 	State2.cmplx = 0;
 8688              		.loc 1 2331 2 is_stmt 1 view .LVU2666
2332:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 8689              		.loc 1 2332 15 is_stmt 0 view .LVU2667
 8690 076e 60F34102 		bfi	r2, r0, #1, #1
2333:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 8691              		.loc 1 2333 5 view .LVU2668
 8692 0772 BCF1640F 		cmp	ip, #100
2331:src/keys.c    **** 	State2.cmplx = 0;
 8693              		.loc 1 2331 14 view .LVU2669
 8694 0776 4FF00700 		mov	r0, #7
2332:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 8695              		.loc 1 2332 15 view .LVU2670
 8696 077a 88F81520 		strb	r2, [r8, #21]
2331:src/keys.c    **** 	State2.cmplx = 0;
 8697              		.loc 1 2331 14 view .LVU2671
 8698 077e 88F80F00 		strb	r0, [r8, #15]
2332:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 8699              		.loc 1 2332 2 is_stmt 1 view .LVU2672
2333:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 8700              		.loc 1 2333 2 view .LVU2673
2333:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 8701              		.loc 1 2333 5 is_stmt 0 view .LVU2674
 8702 0782 00F04785 		beq	.L1158
2329:src/keys.c    **** 
 8703              		.loc 1 2329 44 view .LVU2675
 8704 0786 4FF0340A 		mov	r10, #52
 8705              	.LVL732:
 8706              	.L1116:
2334:src/keys.c    **** 		// Lettered register
 8707              		.loc 1 2334 5 view .LVU2676
 8708 078a BCF17F0F 		cmp	ip, #127
2329:src/keys.c    **** 
 8709              		.loc 1 2329 60 view .LVU2677
 8710 078e 9A44     		add	r10, r10, r3
2334:src/keys.c    **** 		// Lettered register
 8711              		.loc 1 2334 2 is_stmt 1 view .LVU2678
2334:src/keys.c    **** 		// Lettered register
 8712              		.loc 1 2334 5 is_stmt 0 view .LVU2679
 8713 0790 00F04081 		beq	.L867
 8714              	.LVL733:
2334:src/keys.c    **** 		// Lettered register
 8715              		.loc 1 2334 18 view .LVU2680
 8716 0794 BCF1630F 		cmp	ip, #99
 8717 0798 40F26481 		bls	.L868
2334:src/keys.c    **** 		// Lettered register
 8718              		.loc 1 2334 37 view .LVU2681
 8719 079c BCF16F0F 		cmp	ip, #111
 8720 07a0 00F23881 		bhi	.L867
2336:src/keys.c    **** 			if (n == regI_idx)
 8721              		.loc 1 2336 3 is_stmt 1 view .LVU2682
ARM GAS  /tmp/cc8xFAqJ.s 			page 261


2336:src/keys.c    **** 			if (n == regI_idx)
 8722              		.loc 1 2336 6 is_stmt 0 view .LVU2683
 8723 07a4 BBF1000F 		cmp	fp, #0
 8724 07a8 00F0AE82 		beq	.L869
2336:src/keys.c    **** 			if (n == regI_idx)
 8725              		.loc 1 2336 12 view .LVU2684
 8726 07ac 1EF0010F 		tst	lr, #1
 8727 07b0 00F0AA82 		beq	.L869
2337:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 8728              		.loc 1 2337 4 is_stmt 1 view .LVU2685
2337:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 8729              		.loc 1 2337 7 is_stmt 0 view .LVU2686
 8730 07b4 BCF16D0F 		cmp	ip, #109
 8731 07b8 40F03B81 		bne	.L870
2338:src/keys.c    **** 			// Disallow odd complex registers > A
 8732              		.loc 1 2338 5 is_stmt 1 view .LVU2687
2338:src/keys.c    **** 			// Disallow odd complex registers > A
 8733              		.loc 1 2338 30 is_stmt 0 view .LVU2688
 8734 07bc 03F12904 		add	r4, r3, #41
 8735              	.LVL734:
2338:src/keys.c    **** 			// Disallow odd complex registers > A
 8736              		.loc 1 2338 30 view .LVU2689
 8737 07c0 0EE6     		b	.L835
 8738              	.LVL735:
 8739              	.L1327:
2338:src/keys.c    **** 			// Disallow odd complex registers > A
 8740              		.loc 1 2338 30 view .LVU2690
 8741              	.LBE1022:
 8742              	.LBE1021:
3263:src/keys.c    **** 
 8743              		.loc 1 3263 3 is_stmt 1 view .LVU2691
 8744              	.LBB1051:
 8745              	.LBI1051:
1687:src/keys.c    **** 	int pc = -1;
 8746              		.loc 1 1687 12 view .LVU2692
 8747              	.LBB1052:
1688:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
 8748              		.loc 1 1688 2 view .LVU2693
1689:src/keys.c    **** 
 8749              		.loc 1 1689 2 view .LVU2694
 8750              	.LBB1053:
 8751              	.LBI1053:
 210:src/keys.c    **** {
 8752              		.loc 1 210 14 view .LVU2695
 8753              	.LBB1054:
 212:src/keys.c    ****     // K00 - K05
 8754              		.loc 1 212 3 view .LVU2696
 234:src/keys.c    **** }
 8755              		.loc 1 234 3 view .LVU2697
 8756              	.LBB1055:
 8757              	.LBI1055:
 131:src/keys.c    **** {
 8758              		.loc 1 131 12 view .LVU2698
 8759              	.LBB1056:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8760              		.loc 1 133 2 view .LVU2699
 143:src/keys.c    **** }
ARM GAS  /tmp/cc8xFAqJ.s 			page 262


 8761              		.loc 1 143 2 view .LVU2700
 143:src/keys.c    **** }
 8762              		.loc 1 143 23 is_stmt 0 view .LVU2701
 8763 07c2 5A4B     		ldr	r3, .L1405+20
 8764              	.LBE1056:
 8765              	.LBE1055:
 234:src/keys.c    **** }
 8766              		.loc 1 234 28 view .LVU2702
 8767 07c4 5A4A     		ldr	r2, .L1405+24
 8768 07c6 E4B2     		uxtb	r4, r4
 8769              	.LVL736:
 8770              	.LBB1058:
 8771              	.LBB1057:
 143:src/keys.c    **** }
 8772              		.loc 1 143 23 view .LVU2703
 8773 07c8 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 8774              	.LBE1057:
 8775              	.LBE1058:
 234:src/keys.c    **** }
 8776              		.loc 1 234 28 view .LVU2704
 8777 07ca D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 8778              	.LVL737:
 234:src/keys.c    **** }
 8779              		.loc 1 234 28 view .LVU2705
 8780              	.LBE1054:
 8781              	.LBE1053:
1691:src/keys.c    **** 		// Digit 0 - 9
 8782              		.loc 1 1691 2 is_stmt 1 view .LVU2706
1691:src/keys.c    **** 		// Digit 0 - 9
 8783              		.loc 1 1691 5 is_stmt 0 view .LVU2707
 8784 07cc 0928     		cmp	r0, #9
 8785 07ce 40F24181 		bls	.L1352
1696:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8786              		.loc 1 1696 7 is_stmt 1 view .LVU2708
1696:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8787              		.loc 1 1696 18 is_stmt 0 view .LVU2709
 8788 07d2 20F08000 		bic	r0, r0, #128
 8789              	.LVL738:
1696:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8790              		.loc 1 1696 10 view .LVU2710
 8791 07d6 6428     		cmp	r0, #100
 8792 07d8 00F08F82 		beq	.L1353
1697:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 8793              		.loc 1 1697 7 is_stmt 1 view .LVU2711
1697:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 8794              		.loc 1 1697 10 is_stmt 0 view .LVU2712
 8795 07dc 6528     		cmp	r0, #101
 8796 07de 00F09A82 		beq	.L1354
1698:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 8797              		.loc 1 1698 7 is_stmt 1 view .LVU2713
1698:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 8798              		.loc 1 1698 10 is_stmt 0 view .LVU2714
 8799 07e2 6628     		cmp	r0, #102
 8800 07e4 00F0B182 		beq	.L1355
1699:src/keys.c    **** #endif
 8801              		.loc 1 1699 7 is_stmt 1 view .LVU2715
1699:src/keys.c    **** #endif
ARM GAS  /tmp/cc8xFAqJ.s 			page 263


 8802              		.loc 1 1699 10 is_stmt 0 view .LVU2716
 8803 07e8 6728     		cmp	r0, #103
 8804 07ea 00F0A983 		beq	.L1356
1701:src/keys.c    **** 		// A - D
 8805              		.loc 1 1701 7 is_stmt 1 view .LVU2717
1701:src/keys.c    **** 		// A - D
 8806              		.loc 1 1701 10 is_stmt 0 view .LVU2718
 8807 07ee 032C     		cmp	r4, #3
 8808 07f0 40F2F884 		bls	.L1357
1706:src/keys.c    **** 		// .
 8809              		.loc 1 1706 7 is_stmt 1 view .LVU2719
1706:src/keys.c    **** 		// .
 8810              		.loc 1 1706 10 is_stmt 0 view .LVU2720
 8811 07f4 262C     		cmp	r4, #38
 8812 07f6 00F09485 		beq	.L1358
1711:src/keys.c    **** 		// ENTER - short circuit processing
 8813              		.loc 1 1711 7 is_stmt 1 view .LVU2721
1711:src/keys.c    **** 		// ENTER - short circuit processing
 8814              		.loc 1 1711 10 is_stmt 0 view .LVU2722
 8815 07fa 0C2C     		cmp	r4, #12
 8816 07fc 00F0EF84 		beq	.L1359
1715:src/keys.c    **** 		// backspace
 8817              		.loc 1 1715 7 is_stmt 1 view .LVU2723
1715:src/keys.c    **** 		// backspace
 8818              		.loc 1 1715 10 is_stmt 0 view .LVU2724
 8819 0800 102C     		cmp	r4, #16
 8820 0802 00F0AB85 		beq	.L1360
1724:src/keys.c    **** 		// up
 8821              		.loc 1 1724 7 is_stmt 1 view .LVU2725
1724:src/keys.c    **** 		// up
 8822              		.loc 1 1724 10 is_stmt 0 view .LVU2726
 8823 0806 122C     		cmp	r4, #18
 8824 0808 00F0F487 		beq	.L1361
1734:src/keys.c    **** 		// down
 8825              		.loc 1 1734 7 is_stmt 1 view .LVU2727
1734:src/keys.c    **** 		// down
 8826              		.loc 1 1734 10 is_stmt 0 view .LVU2728
 8827 080c 182C     		cmp	r4, #24
 8828 080e 7FF448AF 		bne	.L1104
1736:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 8829              		.loc 1 1736 3 is_stmt 1 view .LVU2729
1737:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 8830              		.loc 1 1737 18 is_stmt 0 view .LVU2730
 8831 0812 484C     		ldr	r4, .L1405+28
 8832              	.LVL739:
1736:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 8833              		.loc 1 1736 3 view .LVU2731
 8834 0814 0120     		movs	r0, #1
 8835 0816 FFF7FEFF 		bl	update_program_bounds
 8836              	.LVL740:
1737:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 8837              		.loc 1 1737 3 is_stmt 1 view .LVU2732
1737:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 8838              		.loc 1 1737 18 is_stmt 0 view .LVU2733
 8839 081a 2368     		ldr	r3, [r4]
1737:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 8840              		.loc 1 1737 11 view .LVU2734
ARM GAS  /tmp/cc8xFAqJ.s 			page 264


 8841 081c 0021     		movs	r1, #0
 8842 081e B3F8EE07 		ldrh	r0, [r3, #2030]
 8843 0822 FFF7FEFF 		bl	do_inc
 8844              	.LVL741:
1738:src/keys.c    **** 			rawpc = 1;
 8845              		.loc 1 1738 3 is_stmt 1 view .LVU2735
1738:src/keys.c    **** 			rawpc = 1;
 8846              		.loc 1 1738 6 is_stmt 0 view .LVU2736
 8847 0826 20B9     		cbnz	r0, .L847
1738:src/keys.c    **** 			rawpc = 1;
 8848              		.loc 1 1738 21 view .LVU2737
 8849 0828 2368     		ldr	r3, [r4]
1738:src/keys.c    **** 			rawpc = 1;
 8850              		.loc 1 1738 18 view .LVU2738
 8851 082a 5888     		ldrh	r0, [r3, #2]
 8852              	.LVL742:
1738:src/keys.c    **** 			rawpc = 1;
 8853              		.loc 1 1738 18 view .LVU2739
 8854 082c 0038     		subs	r0, r0, #0
 8855 082e 18BF     		it	ne
 8856 0830 0120     		movne	r0, #1
 8857              	.LVL743:
 8858              	.L847:
1744:src/keys.c    **** fin2:		State2.gtodot = 0;
 8859              		.loc 1 1744 7 is_stmt 1 view .LVU2740
 8860 0832 FFF7FEFF 		bl	set_pc
 8861              	.LVL744:
 8862              	.L851:
1745:src/keys.c    **** 		State2.digval = 0;
 8863              		.loc 1 1745 8 view .LVU2741
1745:src/keys.c    **** 		State2.digval = 0;
 8864              		.loc 1 1745 22 is_stmt 0 view .LVU2742
 8865 0836 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 8866 083a 3368     		ldr	r3, [r6]
1746:src/keys.c    **** 		State2.numdigit = 0;
 8867              		.loc 1 1746 17 view .LVU2743
 8868 083c 0022     		movs	r2, #0
1745:src/keys.c    **** 		State2.digval = 0;
 8869              		.loc 1 1745 22 view .LVU2744
 8870 083e 6FF30001 		bfc	r1, #0, #1
 8871 0842 88F81510 		strb	r1, [r8, #21]
1746:src/keys.c    **** 		State2.numdigit = 0;
 8872              		.loc 1 1746 3 is_stmt 1 view .LVU2745
1746:src/keys.c    **** 		State2.numdigit = 0;
 8873              		.loc 1 1746 17 is_stmt 0 view .LVU2746
 8874 0846 A8F80820 		strh	r2, [r8, #8]	@ movhi
1747:src/keys.c    **** 	}
 8875              		.loc 1 1747 3 is_stmt 1 view .LVU2747
1747:src/keys.c    **** 	}
 8876              		.loc 1 1747 19 is_stmt 0 view .LVU2748
 8877 084a 88F80B20 		strb	r2, [r8, #11]
 8878              	.LBE1052:
 8879              	.LBE1051:
3263:src/keys.c    **** 
 8880              		.loc 1 3263 10 view .LVU2749
 8881 084e 3324     		movs	r4, #51
 8882 0850 31E4     		b	.L801
ARM GAS  /tmp/cc8xFAqJ.s 			page 265


 8883              	.LVL745:
 8884              	.L1086:
3263:src/keys.c    **** 
 8885              		.loc 1 3263 10 view .LVU2750
 8886              	.LBE1336:
 8887              	.LBE1401:
 8888              	.LBB1402:
3561:src/keys.c    **** 	  c = STATE_UNFINISHED;
 8889              		.loc 1 3561 4 is_stmt 1 view .LVU2751
 8890              	.LBB1383:
 8891              	.LBI1383:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 8892              		.loc 1 552 13 view .LVU2752
 8893              	.LBB1384:
 553:src/keys.c    **** 		return;
 8894              		.loc 1 553 2 view .LVU2753
 553:src/keys.c    **** 		return;
 8895              		.loc 1 553 6 is_stmt 0 view .LVU2754
 8896 0852 FFF7FEFF 		bl	is_bad_cmdline
 8897              	.LVL746:
 553:src/keys.c    **** 		return;
 8898              		.loc 1 553 5 view .LVU2755
 8899 0856 0546     		mov	r5, r0
 8900 0858 0028     		cmp	r0, #0
 8901 085a 40F0F680 		bne	.L1310
 8902 085e 2046     		mov	r0, r4
 8903 0860 FFF7FEFF 		bl	init_arg.part.0
 8904              	.LVL747:
 8905              	.LBE1384:
 8906              	.LBE1383:
3562:src/keys.c    **** 	}
 8907              		.loc 1 3562 6 view .LVU2756
 8908 0864 3324     		movs	r4, #51
 8909              	.LVL748:
3562:src/keys.c    **** 	}
 8910              		.loc 1 3562 6 view .LVU2757
 8911 0866 3368     		ldr	r3, [r6]
 8912 0868 25E4     		b	.L801
 8913              	.LVL749:
 8914              	.L1156:
3562:src/keys.c    **** 	}
 8915              		.loc 1 3562 6 view .LVU2758
 8916              	.LBE1402:
 8917              	.LBB1403:
 8918 086a 1C46     		mov	r4, r3
 8919              	.LVL750:
3562:src/keys.c    **** 	}
 8920              		.loc 1 3562 6 view .LVU2759
 8921 086c 41E4     		b	.L1103
 8922              	.LVL751:
 8923              	.L1328:
3562:src/keys.c    **** 	}
 8924              		.loc 1 3562 6 view .LVU2760
 8925              	.LBE1403:
 8926              	.LBB1404:
 8927              	.LBB1337:
3266:src/keys.c    **** 
ARM GAS  /tmp/cc8xFAqJ.s 			page 266


 8928              		.loc 1 3266 3 is_stmt 1 view .LVU2761
 8929              	.LBB1071:
 8930              	.LBB1072:
1578:src/keys.c    **** 	State2.dot = 0;
 8931              		.loc 1 1578 15 is_stmt 0 view .LVU2762
 8932 086e 22F06203 		bic	r3, r2, #98
 8933              	.LBE1072:
 8934              	.LBE1071:
3266:src/keys.c    **** 
 8935              		.loc 1 3266 10 view .LVU2763
 8936 0872 E4B2     		uxtb	r4, r4
 8937              	.LVL752:
 8938              	.LBB1085:
 8939              	.LBI1071:
1568:src/keys.c    **** 	static const unsigned char op_map[][2] = {
 8940              		.loc 1 1568 12 is_stmt 1 view .LVU2764
 8941              	.LBB1082:
1569:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
 8942              		.loc 1 1569 2 view .LVU2765
1574:src/keys.c    **** 	int f = State2.dot;
 8943              		.loc 1 1574 2 view .LVU2766
1578:src/keys.c    **** 	State2.dot = 0;
 8944              		.loc 1 1578 15 is_stmt 0 view .LVU2767
 8945 0874 88F81530 		strb	r3, [r8, #21]
1574:src/keys.c    **** 	int f = State2.dot;
 8946              		.loc 1 1574 20 view .LVU2768
 8947 0878 C2F34009 		ubfx	r9, r2, #1, #1
 8948              	.LVL753:
1575:src/keys.c    **** 
 8949              		.loc 1 1575 2 is_stmt 1 view .LVU2769
1575:src/keys.c    **** 
 8950              		.loc 1 1575 16 is_stmt 0 view .LVU2770
 8951 087c C2F3801B 		ubfx	fp, r2, #6, #1
 8952              	.LVL754:
1577:src/keys.c    **** 	State2.cmplx = 0;
 8953              		.loc 1 1577 2 is_stmt 1 view .LVU2771
1578:src/keys.c    **** 	State2.dot = 0;
 8954              		.loc 1 1578 2 view .LVU2772
1579:src/keys.c    **** #ifdef DM42
 8955              		.loc 1 1579 2 view .LVU2773
1581:src/keys.c    **** #endif
 8956              		.loc 1 1581 2 view .LVU2774
 8957              	.LBB1073:
 8958              	.LBI1073:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 8959              		.loc 1 114 13 view .LVU2775
 8960              	.LBE1073:
 8961              	.LBE1082:
 8962              	.LBE1085:
 8963              	.LBE1337:
 8964              	.LBE1404:
 115:src/keys.c    **** }
 8965              		.loc 1 115 2 view .LVU2776
 8966              	.LBB1405:
 8967              	.LBB1338:
 8968              	.LBB1086:
 8969              	.LBB1083:
ARM GAS  /tmp/cc8xFAqJ.s 			page 267


 8970              	.LBB1080:
 8971              	.LBB1074:
 8972              	.LBI1074:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 8973              		.loc 1 104 20 view .LVU2777
 8974              	.LBB1075:
 105:src/keys.c    **** 	State2.shifts = shift;
 8975              		.loc 1 105 2 view .LVU2778
 8976              	.LBB1076:
 8977              	.LBI1076:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 8978              		.loc 1 96 13 view .LVU2779
 8979              	.LBB1077:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8980              		.loc 1 97 2 view .LVU2780
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8981              		.loc 1 97 18 is_stmt 0 view .LVU2781
 8982 0880 FFF7FEFF 		bl	shift_down
 8983              	.LVL755:
  98:src/keys.c    **** }
 8984              		.loc 1 98 2 is_stmt 1 view .LVU2782
 8985              	.LBE1077:
 8986              	.LBE1076:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8987              		.loc 1 106 2 view .LVU2783
 8988              	.LBE1075:
 8989              	.LBE1074:
 8990              	.LBE1080:
1583:src/keys.c    **** 
 8991              		.loc 1 1583 2 is_stmt 0 view .LVU2784
 8992 0884 292C     		cmp	r4, #41
 8993              	.LBB1081:
 8994              	.LBB1079:
 8995              	.LBB1078:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8996              		.loc 1 106 16 view .LVU2785
 8997 0886 88F810A0 		strb	r10, [r8, #16]
 108:src/keys.c    **** }
 8998              		.loc 1 108 2 is_stmt 1 view .LVU2786
 8999              	.LVL756:
 108:src/keys.c    **** }
 9000              		.loc 1 108 2 is_stmt 0 view .LVU2787
 9001              	.LBE1078:
 9002              	.LBE1079:
 9003              	.LBE1081:
1583:src/keys.c    **** 
 9004              		.loc 1 1583 2 is_stmt 1 view .LVU2788
 9005 088a 00F0C983 		beq	.L856
 9006 088e 15D8     		bhi	.L857
 9007 0890 013C     		subs	r4, r4, #1
 9008              	.LVL757:
1583:src/keys.c    **** 
 9009              		.loc 1 1583 2 is_stmt 0 view .LVU2789
 9010 0892 E3B2     		uxtb	r3, r4
 9011 0894 022B     		cmp	r3, #2
 9012 0896 3FF604AF 		bhi	.L1104
1588:src/keys.c    **** 
ARM GAS  /tmp/cc8xFAqJ.s 			page 268


 9013              		.loc 1 1588 3 is_stmt 1 view .LVU2790
1588:src/keys.c    **** 
 9014              		.loc 1 1588 54 is_stmt 0 view .LVU2791
 9015 089a 274B     		ldr	r3, .L1405+32
 9016 089c 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
 9017 08a0 03EB4404 		add	r4, r3, r4, lsl #1
 9018              	.LVL758:
1588:src/keys.c    **** 
 9019              		.loc 1 1588 27 view .LVU2792
 9020 08a4 B9F1000F 		cmp	r9, #0
1588:src/keys.c    **** 
 9021              		.loc 1 1588 54 view .LVU2793
 9022 08a8 14F80B40 		ldrb	r4, [r4, fp]	@ zero_extendqisi2
1588:src/keys.c    **** 
 9023              		.loc 1 1588 27 view .LVU2794
 9024 08ac 14BF     		ite	ne
 9025 08ae 4FF4A063 		movne	r3, #1280
 9026 08b2 4FF40073 		moveq	r3, #512
1588:src/keys.c    **** 
 9027              		.loc 1 1588 37 view .LVU2795
 9028 08b6 1C43     		orrs	r4, r4, r3
 9029 08b8 2046     		mov	r0, r4
 9030 08ba B3E5     		b	.L862
 9031              	.LVL759:
 9032              	.L857:
1583:src/keys.c    **** 
 9033              		.loc 1 1583 2 view .LVU2796
 9034 08bc 2D2C     		cmp	r4, #45
 9035 08be 7FF4F0AE 		bne	.L1104
1591:src/keys.c    **** 		goto stay;
 9036              		.loc 1 1591 3 is_stmt 1 view .LVU2797
 9037 08c2 89F00109 		eor	r9, r9, #1
 9038              	.LVL760:
1592:src/keys.c    **** 
 9039              		.loc 1 1592 3 view .LVU2798
 9040              	.L863:
1605:src/keys.c    **** 		State2.cmplx = cmplx;
 9041              		.loc 1 1605 3 view .LVU2799
1606:src/keys.c    **** 		State2.dot = f;
 9042              		.loc 1 1606 3 view .LVU2800
1607:src/keys.c    **** 		break;
 9043              		.loc 1 1607 3 view .LVU2801
1606:src/keys.c    **** 		State2.dot = f;
 9044              		.loc 1 1606 16 is_stmt 0 view .LVU2802
 9045 08c6 4FEA4902 		lsl	r2, r9, #1
 9046 08ca 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 9047 08ce 3368     		ldr	r3, [r6]
 9048 08d0 42F02002 		orr	r2, r2, #32
 9049 08d4 42EA8B12 		orr	r2, r2, fp, lsl #6
 9050 08d8 02F06202 		and	r2, r2, #98
 9051 08dc 21F06201 		bic	r1, r1, #98
 9052 08e0 0A43     		orrs	r2, r2, r1
 9053 08e2 88F81520 		strb	r2, [r8, #21]
1608:src/keys.c    **** 
 9054              		.loc 1 1608 3 is_stmt 1 view .LVU2803
1613:src/keys.c    **** }
 9055              		.loc 1 1613 9 is_stmt 0 view .LVU2804
ARM GAS  /tmp/cc8xFAqJ.s 			page 269


 9056 08e6 3324     		movs	r4, #51
 9057              	.LVL761:
1608:src/keys.c    **** 
 9058              		.loc 1 1608 3 view .LVU2805
 9059 08e8 FFF7E5BB 		b	.L801
 9060              	.LVL762:
 9061              	.L1324:
1608:src/keys.c    **** 
 9062              		.loc 1 1608 3 view .LVU2806
 9063              	.LBE1083:
 9064              	.LBE1086:
3243:src/keys.c    **** 		return STATE_IGNORE;
 9065              		.loc 1 3243 3 is_stmt 1 view .LVU2807
3243:src/keys.c    **** 		return STATE_IGNORE;
 9066              		.loc 1 3243 15 is_stmt 0 view .LVU2808
 9067 08ec 1D60     		str	r5, [r3]
3244:src/keys.c    **** 	}
 9068              		.loc 1 3244 3 is_stmt 1 view .LVU2809
 9069              	.LVL763:
3244:src/keys.c    **** 	}
 9070              		.loc 1 3244 3 is_stmt 0 view .LVU2810
 9071              	.LBE1338:
 9072              	.LBE1405:
3634:src/keys.c    **** #ifndef CONSOLE
 9073              		.loc 1 3634 3 is_stmt 1 view .LVU2811
 9074              	.LBB1406:
 9075              	.LBB1339:
3244:src/keys.c    **** 	}
 9076              		.loc 1 3244 10 is_stmt 0 view .LVU2812
 9077 08ee 3224     		movs	r4, #50
 9078 08f0 FFF7E4BB 		b	.L821
 9079              	.LVL764:
 9080              	.L1351:
 9081              	.LBB1087:
 9082              	.LBB1041:
2331:src/keys.c    **** 	State2.cmplx = 0;
 9083              		.loc 1 2331 2 is_stmt 1 view .LVU2813
2332:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9084              		.loc 1 2332 15 is_stmt 0 view .LVU2814
 9085 08f4 6BF34102 		bfi	r2, fp, #1, #1
2331:src/keys.c    **** 	State2.cmplx = 0;
 9086              		.loc 1 2331 14 view .LVU2815
 9087 08f8 0720     		movs	r0, #7
2333:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9088              		.loc 1 2333 5 view .LVU2816
 9089 08fa BCF1640F 		cmp	ip, #100
2332:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9090              		.loc 1 2332 15 view .LVU2817
 9091 08fe 88F81520 		strb	r2, [r8, #21]
2331:src/keys.c    **** 	State2.cmplx = 0;
 9092              		.loc 1 2331 14 view .LVU2818
 9093 0902 88F80F00 		strb	r0, [r8, #15]
2332:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 9094              		.loc 1 2332 2 is_stmt 1 view .LVU2819
2333:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 9095              		.loc 1 2333 2 view .LVU2820
2333:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
ARM GAS  /tmp/cc8xFAqJ.s 			page 270


 9096              		.loc 1 2333 5 is_stmt 0 view .LVU2821
 9097 0906 00F06684 		beq	.L1159
2329:src/keys.c    **** 
 9098              		.loc 1 2329 44 view .LVU2822
 9099 090a 4FF02D0A 		mov	r10, #45
 9100 090e 3CE7     		b	.L1116
 9101              	.LVL765:
 9102              	.L1157:
2329:src/keys.c    **** 
 9103              		.loc 1 2329 44 view .LVU2823
 9104              	.LBE1041:
 9105              	.LBE1087:
 9106              	.LBE1339:
 9107              	.LBE1406:
 9108              	.LBB1407:
 9109 0910 2C46     		mov	r4, r5
 9110              	.LVL766:
2329:src/keys.c    **** 
 9111              		.loc 1 2329 44 view .LVU2824
 9112 0912 FFF7EEBB 		b	.L1103
 9113              	.L1406:
 9114 0916 00BF     		.align	2
 9115              	.L1405:
 9116 0918 00000000 		.word	NonProgrammable
 9117 091c 00000000 		.word	OpCode
 9118 0920 00000000 		.word	OpCodeDisplayPending
 9119 0924 00000000 		.word	JustDisplayed
 9120 0928 00040800 		.word	525312
 9121 092c 00000000 		.word	.LANCHOR6
 9122 0930 00000000 		.word	.LANCHOR5
 9123 0934 00000000 		.word	main_ram
 9124 0938 00000000 		.word	.LANCHOR19
 9125 093c 00000000 		.word	StateWhileOn
 9126              	.LVL767:
 9127              	.L1330:
2329:src/keys.c    **** 
 9128              		.loc 1 2329 44 view .LVU2825
 9129              	.LBE1407:
 9130              	.LBB1408:
 9131              	.LBB1340:
3272:src/keys.c    **** 
 9132              		.loc 1 3272 3 is_stmt 1 view .LVU2826
 9133              	.LBB1088:
 9134              	.LBB1089:
2894:src/keys.c    **** 
 9135              		.loc 1 2894 12 is_stmt 0 view .LVU2827
 9136 0940 D54B     		ldr	r3, .L1407
 9137 0942 1B68     		ldr	r3, [r3]
2894:src/keys.c    **** 
 9138              		.loc 1 2894 31 view .LVU2828
 9139 0944 B3F9DE37 		ldrsh	r3, [r3, #2014]
 9140              	.LBE1089:
 9141              	.LBE1088:
3272:src/keys.c    **** 
 9142              		.loc 1 3272 10 view .LVU2829
 9143 0948 E4B2     		uxtb	r4, r4
 9144              	.LVL768:
ARM GAS  /tmp/cc8xFAqJ.s 			page 271


 9145              	.LBB1108:
 9146              	.LBI1088:
2892:src/keys.c    **** 	int n = ((int)State2.status) - 3;
 9147              		.loc 1 2892 12 is_stmt 1 view .LVU2830
 9148              	.LBB1100:
2893:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9149              		.loc 1 2893 2 view .LVU2831
2894:src/keys.c    **** 
 9150              		.loc 1 2894 2 view .LVU2832
2894:src/keys.c    **** 
 9151              		.loc 1 2894 31 is_stmt 0 view .LVU2833
 9152 094a 002B     		cmp	r3, #0
 9153 094c B4BF     		ite	lt
 9154 094e 0B23     		movlt	r3, #11
 9155 0950 0A23     		movge	r3, #10
 9156              	.LVL769:
2896:src/keys.c    **** 		if (--n < -2)
 9157              		.loc 1 2896 2 is_stmt 1 view .LVU2834
2896:src/keys.c    **** 		if (--n < -2)
 9158              		.loc 1 2896 5 is_stmt 0 view .LVU2835
 9159 0952 122C     		cmp	r4, #18
 9160 0954 00F0CC81 		beq	.L1362
2900:src/keys.c    **** 		if (++n > max)
 9161              		.loc 1 2900 7 is_stmt 1 view .LVU2836
2900:src/keys.c    **** 		if (++n > max)
 9162              		.loc 1 2900 10 is_stmt 0 view .LVU2837
 9163 0958 182C     		cmp	r4, #24
 9164 095a 00F0EA81 		beq	.L1363
2904:src/keys.c    **** 		State2.status = 0;
 9165              		.loc 1 2904 7 is_stmt 1 view .LVU2838
2904:src/keys.c    **** 		State2.status = 0;
 9166              		.loc 1 2904 10 is_stmt 0 view .LVU2839
 9167 095e 102C     		cmp	r4, #16
 9168 0960 00F06184 		beq	.L1364
 9169              	.LBB1090:
2909:src/keys.c    **** 		if (nn <= 9)
 9170              		.loc 1 2909 3 is_stmt 1 view .LVU2840
 9171              	.LVL770:
 9172              	.LBB1091:
 9173              	.LBI1091:
 210:src/keys.c    **** {
 9174              		.loc 1 210 14 view .LVU2841
 9175              	.LBB1092:
 212:src/keys.c    ****     // K00 - K05
 9176              		.loc 1 212 3 view .LVU2842
 234:src/keys.c    **** }
 9177              		.loc 1 234 3 view .LVU2843
 9178              	.LBB1093:
 9179              	.LBI1093:
 131:src/keys.c    **** {
 9180              		.loc 1 131 12 view .LVU2844
 9181              	.LBB1094:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9182              		.loc 1 133 2 view .LVU2845
 143:src/keys.c    **** }
 9183              		.loc 1 143 2 view .LVU2846
 143:src/keys.c    **** }
ARM GAS  /tmp/cc8xFAqJ.s 			page 272


 9184              		.loc 1 143 23 is_stmt 0 view .LVU2847
 9185 0964 CD4A     		ldr	r2, .L1407+4
 9186              	.LBE1094:
 9187              	.LBE1093:
 234:src/keys.c    **** }
 9188              		.loc 1 234 28 view .LVU2848
 9189 0966 CE48     		ldr	r0, .L1407+8
 9190              	.LBB1096:
 9191              	.LBB1095:
 143:src/keys.c    **** }
 9192              		.loc 1 143 23 view .LVU2849
 9193 0968 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 9194 096a 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 9195 096c 02F07F02 		and	r2, r2, #127
 9196              	.LVL771:
 143:src/keys.c    **** }
 9197              		.loc 1 143 23 view .LVU2850
 9198              	.LBE1095:
 9199              	.LBE1096:
 9200              	.LBE1092:
 9201              	.LBE1091:
2910:src/keys.c    **** 			n = nn;
 9202              		.loc 1 2910 3 is_stmt 1 view .LVU2851
2910:src/keys.c    **** 			n = nn;
 9203              		.loc 1 2910 6 is_stmt 0 view .LVU2852
 9204 0970 092A     		cmp	r2, #9
 9205 0972 40F2D482 		bls	.L1125
2912:src/keys.c    **** 			n = n == max ? 10 : max;
 9206              		.loc 1 2912 11 view .LVU2853
 9207 0976 702A     		cmp	r2, #112
 9208              	.LBE1090:
2893:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9209              		.loc 1 2893 6 view .LVU2854
 9210 0978 A1F10301 		sub	r1, r1, #3
 9211              	.LVL772:
 9212              	.LBB1097:
2912:src/keys.c    **** 			n = n == max ? 10 : max;
 9213              		.loc 1 2912 8 is_stmt 1 view .LVU2855
2912:src/keys.c    **** 			n = n == max ? 10 : max;
 9214              		.loc 1 2912 11 is_stmt 0 view .LVU2856
 9215 097c 00F01186 		beq	.L1365
2914:src/keys.c    **** 			n = 10; 
 9216              		.loc 1 2914 8 is_stmt 1 view .LVU2857
 9217              	.LBE1097:
2893:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9218              		.loc 1 2893 6 is_stmt 0 view .LVU2858
 9219 0980 7F2A     		cmp	r2, #127
 9220 0982 0CBF     		ite	eq
 9221 0984 0B46     		moveq	r3, r1
 9222              	.LVL773:
2893:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 9223              		.loc 1 2893 6 view .LVU2859
 9224 0986 0A23     		movne	r3, #10
 9225              	.LVL774:
 9226              	.L884:
2917:src/keys.c    **** 
 9227              		.loc 1 2917 2 is_stmt 1 view .LVU2860
ARM GAS  /tmp/cc8xFAqJ.s 			page 273


2917:src/keys.c    **** 
 9228              		.loc 1 2917 20 is_stmt 0 view .LVU2861
 9229 0988 0333     		adds	r3, r3, #3
 9230              	.LVL775:
2917:src/keys.c    **** 
 9231              		.loc 1 2917 16 view .LVU2862
 9232 098a 88F80C30 		strb	r3, [r8, #12]
2919:src/keys.c    **** }
 9233              		.loc 1 2919 2 is_stmt 1 view .LVU2863
 9234              	.LBE1100:
 9235              	.LBE1108:
3272:src/keys.c    **** 
 9236              		.loc 1 3272 10 is_stmt 0 view .LVU2864
 9237 098e 3324     		movs	r4, #51
 9238              	.LVL776:
3272:src/keys.c    **** 
 9239              		.loc 1 3272 10 view .LVU2865
 9240 0990 3368     		ldr	r3, [r6]
 9241              	.LVL777:
 9242              	.LBB1109:
 9243              	.LBB1101:
2919:src/keys.c    **** }
 9244              		.loc 1 2919 9 view .LVU2866
 9245 0992 FFF790BB 		b	.L801
 9246              	.LVL778:
 9247              	.L1334:
2919:src/keys.c    **** }
 9248              		.loc 1 2919 9 view .LVU2867
 9249              	.LBE1101:
 9250              	.LBE1109:
3295:src/keys.c    **** 
 9251              		.loc 1 3295 3 is_stmt 1 view .LVU2868
 9252              	.LBB1110:
 9253              	.LBB1111:
 9254              	.LBB1112:
 9255              	.LBB1113:
 9256              	.LBB1114:
 9257              	.LBB1115:
 9258              	.LBB1116:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9259              		.loc 1 97 18 is_stmt 0 view .LVU2869
 9260 0996 FFF7FEFF 		bl	shift_down
 9261              	.LVL779:
 9262              	.LBE1116:
 9263              	.LBE1115:
 9264              	.LBE1114:
 9265              	.LBE1113:
 9266              	.LBE1112:
 9267              	.LBE1111:
 9268              	.LBE1110:
3295:src/keys.c    **** 
 9269              		.loc 1 3295 10 view .LVU2870
 9270 099a E4B2     		uxtb	r4, r4
 9271              	.LVL780:
 9272              	.LBB1137:
 9273              	.LBI1110:
1620:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
ARM GAS  /tmp/cc8xFAqJ.s 			page 274


 9274              		.loc 1 1620 12 is_stmt 1 view .LVU2871
 9275              	.LBB1133:
1621:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
 9276              		.loc 1 1621 2 view .LVU2872
1626:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
 9277              		.loc 1 1626 2 view .LVU2873
1630:src/keys.c    **** 	const int f = (shift == SHIFT_F);
 9278              		.loc 1 1630 2 view .LVU2874
 9279              	.LBB1125:
 9280              	.LBI1112:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 9281              		.loc 1 114 13 view .LVU2875
 9282              	.LBE1125:
 9283              	.LBE1133:
 9284              	.LBE1137:
 9285              	.LBE1340:
 9286              	.LBE1408:
 115:src/keys.c    **** }
 9287              		.loc 1 115 2 view .LVU2876
 9288              	.LBB1409:
 9289              	.LBB1341:
 9290              	.LBB1138:
 9291              	.LBB1134:
 9292              	.LBB1126:
 9293              	.LBB1122:
 9294              	.LBI1113:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 9295              		.loc 1 104 20 view .LVU2877
 9296              	.LBB1119:
 105:src/keys.c    **** 	State2.shifts = shift;
 9297              		.loc 1 105 2 view .LVU2878
 9298              	.LBB1118:
 9299              	.LBI1115:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 9300              		.loc 1 96 13 view .LVU2879
 9301              	.LBB1117:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9302              		.loc 1 97 2 view .LVU2880
  98:src/keys.c    **** }
 9303              		.loc 1 98 2 view .LVU2881
  98:src/keys.c    **** }
 9304              		.loc 1 98 52 is_stmt 0 view .LVU2882
 9305 099c 8346     		mov	fp, r0
 9306              	.LVL781:
  98:src/keys.c    **** }
 9307              		.loc 1 98 52 view .LVU2883
 9308 099e 08B9     		cbnz	r0, .L894
 9309 09a0 98F810B0 		ldrb	fp, [r8, #16]	@ zero_extendqisi2
 9310              	.L894:
 9311              	.LVL782:
  98:src/keys.c    **** }
 9312              		.loc 1 98 52 view .LVU2884
 9313              	.LBE1117:
 9314              	.LBE1118:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9315              		.loc 1 106 2 is_stmt 1 view .LVU2885
 9316              	.LBE1119:
ARM GAS  /tmp/cc8xFAqJ.s 			page 275


 9317              	.LBE1122:
 9318              	.LBE1126:
1633:src/keys.c    **** #ifdef DM42
 9319              		.loc 1 1633 15 is_stmt 0 view .LVU2886
 9320 09a4 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 9321              	.LBB1127:
 9322              	.LBB1123:
 9323              	.LBB1120:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9324              		.loc 1 106 16 view .LVU2887
 9325 09a8 0023     		movs	r3, #0
 9326              	.LBE1120:
 9327              	.LBE1123:
 9328              	.LBE1127:
1631:src/keys.c    **** 
 9329              		.loc 1 1631 23 view .LVU2888
 9330 09aa ABF1010A 		sub	r10, fp, #1
1633:src/keys.c    **** #ifdef DM42
 9331              		.loc 1 1633 15 view .LVU2889
 9332 09ae 63F38202 		bfi	r2, r3, #2, #1
1631:src/keys.c    **** 
 9333              		.loc 1 1631 23 view .LVU2890
 9334 09b2 BAFA8AFA 		clz	r10, r10
1633:src/keys.c    **** #ifdef DM42
 9335              		.loc 1 1633 15 view .LVU2891
 9336 09b6 88F81520 		strb	r2, [r8, #21]
 9337              	.LBB1128:
 9338              	.LBB1124:
 9339              	.LBB1121:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9340              		.loc 1 106 16 view .LVU2892
 9341 09ba 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 9342              		.loc 1 108 2 is_stmt 1 view .LVU2893
 9343              	.LVL783:
 108:src/keys.c    **** }
 9344              		.loc 1 108 2 is_stmt 0 view .LVU2894
 9345              	.LBE1121:
 9346              	.LBE1124:
 9347              	.LBE1128:
1631:src/keys.c    **** 
 9348              		.loc 1 1631 2 is_stmt 1 view .LVU2895
1631:src/keys.c    **** 
 9349              		.loc 1 1631 23 is_stmt 0 view .LVU2896
 9350 09be 4FEA5A1A 		lsr	r10, r10, #5
 9351              	.LVL784:
1633:src/keys.c    **** #ifdef DM42
 9352              		.loc 1 1633 2 is_stmt 1 view .LVU2897
1635:src/keys.c    **** 	display_current_menu ();
 9353              		.loc 1 1635 2 view .LVU2898
 9354 09c2 FFF7FEFF 		bl	set_last_menu
 9355              	.LVL785:
1636:src/keys.c    **** #endif
 9356              		.loc 1 1636 2 view .LVU2899
 9357 09c6 FFF7FEFF 		bl	display_current_menu
 9358              	.LVL786:
1638:src/keys.c    **** 	
ARM GAS  /tmp/cc8xFAqJ.s 			page 276


 9359              		.loc 1 1638 2 view .LVU2900
1638:src/keys.c    **** 	
 9360              		.loc 1 1638 5 is_stmt 0 view .LVU2901
 9361 09ca BBF1000F 		cmp	fp, #0
 9362 09ce 3FF468AE 		beq	.L1104
1640:src/keys.c    **** 		return op_map[c - K10][f];
 9363              		.loc 1 1640 2 is_stmt 1 view .LVU2902
1640:src/keys.c    **** 		return op_map[c - K10][f];
 9364              		.loc 1 1640 15 is_stmt 0 view .LVU2903
 9365 09d2 A31F     		subs	r3, r4, #6
1640:src/keys.c    **** 		return op_map[c - K10][f];
 9366              		.loc 1 1640 5 view .LVU2904
 9367 09d4 DAB2     		uxtb	r2, r3
 9368 09d6 022A     		cmp	r2, #2
 9369 09d8 40F2A481 		bls	.L1366
1644:src/keys.c    **** 		if (!C_LOCK_ON) {
 9370              		.loc 1 1644 2 is_stmt 1 view .LVU2905
1644:src/keys.c    **** 		if (!C_LOCK_ON) {
 9371              		.loc 1 1644 5 is_stmt 0 view .LVU2906
 9372 09dc 2D2C     		cmp	r4, #45
 9373 09de 00F00F83 		beq	.L1367
1654:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 9374              		.loc 1 1654 2 is_stmt 1 view .LVU2907
1654:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 9375              		.loc 1 1654 15 is_stmt 0 view .LVU2908
 9376 09e2 0E3C     		subs	r4, r4, #14
 9377              	.LVL787:
1654:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 9378              		.loc 1 1654 5 view .LVU2909
 9379 09e4 E3B2     		uxtb	r3, r4
 9380 09e6 012B     		cmp	r3, #1
 9381 09e8 3FF65BAE 		bhi	.L1104
1655:src/keys.c    **** 
 9382              		.loc 1 1655 3 is_stmt 1 view .LVU2910
 9383 09ec AD4A     		ldr	r2, .L1407+12
 9384              	.LBB1129:
 9385              	.LBB1130:
 732:src/keys.c    **** }
 9386              		.loc 1 732 15 is_stmt 0 view .LVU2911
 9387 09ee 98F81110 		ldrb	r1, [r8, #17]	@ zero_extendqisi2
 9388 09f2 3368     		ldr	r3, [r6]
 9389              	.LBE1130:
 9390              	.LBE1129:
1655:src/keys.c    **** 
 9391              		.loc 1 1655 3 view .LVU2912
 9392 09f4 02EB4402 		add	r2, r2, r4, lsl #1
1657:src/keys.c    **** }
 9393              		.loc 1 1657 9 view .LVU2913
 9394 09f8 3324     		movs	r4, #51
 9395              	.LVL788:
1655:src/keys.c    **** 
 9396              		.loc 1 1655 3 view .LVU2914
 9397 09fa 12F80A20 		ldrb	r2, [r2, r10]	@ zero_extendqisi2
 9398              	.LVL789:
 9399              	.LBB1132:
 9400              	.LBI1129:
 731:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
ARM GAS  /tmp/cc8xFAqJ.s 			page 277


 9401              		.loc 1 731 13 is_stmt 1 view .LVU2915
 9402              	.LBB1131:
 732:src/keys.c    **** }
 9403              		.loc 1 732 2 view .LVU2916
 732:src/keys.c    **** }
 9404              		.loc 1 732 15 is_stmt 0 view .LVU2917
 9405 09fe 9142     		cmp	r1, r2
 9406 0a00 08BF     		it	eq
 9407 0a02 0022     		moveq	r2, #0
 9408              	.LVL790:
 732:src/keys.c    **** }
 9409              		.loc 1 732 15 view .LVU2918
 9410 0a04 88F81120 		strb	r2, [r8, #17]
 733:src/keys.c    **** 
 9411              		.loc 1 733 1 view .LVU2919
 9412 0a08 FFF755BB 		b	.L801
 9413              	.LVL791:
 9414              	.L873:
 733:src/keys.c    **** 
 9415              		.loc 1 733 1 view .LVU2920
 9416              	.LBE1131:
 9417              	.LBE1132:
 9418              	.LBE1134:
 9419              	.LBE1138:
 9420              	.LBB1139:
 9421              	.LBB1042:
2353:src/keys.c    **** 		// digit 2..9, -> or .
 9422              		.loc 1 2353 7 is_stmt 1 view .LVU2921
2353:src/keys.c    **** 		// digit 2..9, -> or .
 9423              		.loc 1 2353 10 is_stmt 0 view .LVU2922
 9424 0a0c BCF1090F 		cmp	ip, #9
 9425 0a10 40F2C680 		bls	.L875
 9426              	.L867:
2353:src/keys.c    **** 		// digit 2..9, -> or .
 9427              		.loc 1 2353 19 view .LVU2923
 9428 0a14 2C2C     		cmp	r4, #44
 9429 0a16 00F0C380 		beq	.L875
2353:src/keys.c    **** 		// digit 2..9, -> or .
 9430              		.loc 1 2353 35 view .LVU2924
 9431 0a1a 262C     		cmp	r4, #38
 9432 0a1c 00F0C080 		beq	.L875
2359:src/keys.c    **** 	case K11:					// tests vs register
 9433              		.loc 1 2359 2 is_stmt 1 view .LVU2925
 9434 0a20 0C2C     		cmp	r4, #12
 9435 0a22 00F07E82 		beq	.L878
 9436 0a26 102C     		cmp	r4, #16
 9437 0a28 3FF43BAE 		beq	.L1104
 9438 0a2c 072C     		cmp	r4, #7
 9439 0a2e 00F07882 		beq	.L878
 9440              	.L870:
2373:src/keys.c    **** 	State2.cmplx = cmpx;
 9441              		.loc 1 2373 2 view .LVU2926
2374:src/keys.c    **** 	return STATE_UNFINISHED;
 9442              		.loc 1 2374 15 is_stmt 0 view .LVU2927
 9443 0a32 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2373:src/keys.c    **** 	State2.cmplx = cmpx;
 9444              		.loc 1 2373 14 view .LVU2928
ARM GAS  /tmp/cc8xFAqJ.s 			page 278


 9445 0a36 88F80F30 		strb	r3, [r8, #15]
2374:src/keys.c    **** 	return STATE_UNFINISHED;
 9446              		.loc 1 2374 2 is_stmt 1 view .LVU2929
2374:src/keys.c    **** 	return STATE_UNFINISHED;
 9447              		.loc 1 2374 15 is_stmt 0 view .LVU2930
 9448 0a3a 6BF34102 		bfi	r2, fp, #1, #1
 9449 0a3e 3368     		ldr	r3, [r6]
 9450              	.LVL792:
2374:src/keys.c    **** 	return STATE_UNFINISHED;
 9451              		.loc 1 2374 15 view .LVU2931
 9452 0a40 88F81520 		strb	r2, [r8, #21]
2375:src/keys.c    **** }
 9453              		.loc 1 2375 2 is_stmt 1 view .LVU2932
2375:src/keys.c    **** }
 9454              		.loc 1 2375 9 is_stmt 0 view .LVU2933
 9455 0a44 3324     		movs	r4, #51
 9456              	.LVL793:
2375:src/keys.c    **** }
 9457              		.loc 1 2375 9 view .LVU2934
 9458 0a46 FFF736BB 		b	.L801
 9459              	.LVL794:
 9460              	.L1310:
2375:src/keys.c    **** }
 9461              		.loc 1 2375 9 view .LVU2935
 9462 0a4a 3368     		ldr	r3, [r6]
 9463              	.LBE1042:
 9464              	.LBE1139:
 9465              	.LBE1341:
 9466              	.LBE1409:
3387:src/keys.c    ****   if (was_paused && Pause == 0)
 9467              		.loc 1 3387 7 view .LVU2936
 9468 0a4c 0025     		movs	r5, #0
 9469              	.LBB1410:
3562:src/keys.c    **** 	}
 9470              		.loc 1 3562 6 view .LVU2937
 9471 0a4e 3324     		movs	r4, #51
 9472 0a50 FFF731BB 		b	.L801
 9473              	.LVL795:
 9474              	.L1352:
3562:src/keys.c    **** 	}
 9475              		.loc 1 3562 6 view .LVU2938
 9476              	.LBE1410:
 9477              	.LBB1411:
 9478              	.LBB1342:
 9479              	.LBB1140:
 9480              	.LBB1061:
1693:src/keys.c    **** 	}
 9481              		.loc 1 1693 3 is_stmt 1 view .LVU2939
1693:src/keys.c    **** 	}
 9482              		.loc 1 1693 8 is_stmt 0 view .LVU2940
 9483 0a54 FFF7FEFF 		bl	gtodot_digit
 9484              	.LVL796:
1742:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9485              		.loc 1 1742 2 is_stmt 1 view .LVU2941
1742:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9486              		.loc 1 1742 5 is_stmt 0 view .LVU2942
 9487 0a58 0028     		cmp	r0, #0
ARM GAS  /tmp/cc8xFAqJ.s 			page 279


1742:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9488              		.loc 1 1742 5 view .LVU2943
 9489 0a5a FFF622AE 		blt	.L1104
 9490              	.L838:
1743:src/keys.c    **** fin:		set_pc(rawpc);
 9491              		.loc 1 1743 3 is_stmt 1 view .LVU2944
1743:src/keys.c    **** fin:		set_pc(rawpc);
 9492              		.loc 1 1743 11 is_stmt 0 view .LVU2945
 9493 0a5e FFF7FEFF 		bl	find_user_pc
 9494              	.LVL797:
1743:src/keys.c    **** fin:		set_pc(rawpc);
 9495              		.loc 1 1743 11 view .LVU2946
 9496 0a62 E6E6     		b	.L847
 9497              	.LVL798:
 9498              	.L868:
1743:src/keys.c    **** fin:		set_pc(rawpc);
 9499              		.loc 1 1743 11 view .LVU2947
 9500              	.LBE1061:
 9501              	.LBE1140:
 9502              	.LBB1141:
 9503              	.LBB1043:
2345:src/keys.c    **** 		// Special 0
 9504              		.loc 1 2345 7 is_stmt 1 view .LVU2948
2345:src/keys.c    **** 		// Special 0
 9505              		.loc 1 2345 10 is_stmt 0 view .LVU2949
 9506 0a64 BCF1000F 		cmp	ip, #0
 9507 0a68 41F0CD80 		bne	.L871
2347:src/keys.c    **** 	}
 9508              		.loc 1 2347 3 is_stmt 1 view .LVU2950
2347:src/keys.c    **** 	}
 9509              		.loc 1 2347 18 is_stmt 0 view .LVU2951
 9510 0a6c BBF1000F 		cmp	fp, #0
 9511 0a70 14BF     		ite	ne
 9512 0a72 2524     		movne	r4, #37
 9513              	.LVL799:
2347:src/keys.c    **** 	}
 9514              		.loc 1 2347 18 view .LVU2952
 9515 0a74 1724     		moveq	r4, #23
2347:src/keys.c    **** 	}
 9516              		.loc 1 2347 47 view .LVU2953
 9517 0a76 1C44     		add	r4, r4, r3
 9518 0a78 B2E4     		b	.L835
 9519              	.LVL800:
 9520              	.L1335:
2347:src/keys.c    **** 	}
 9521              		.loc 1 2347 47 view .LVU2954
 9522              	.LBE1043:
 9523              	.LBE1141:
 9524              	.LBB1142:
 9525              	.LBB802:
 277:src/keys.c    **** 			switch (c) {
 9526              		.loc 1 277 3 is_stmt 1 view .LVU2955
 277:src/keys.c    **** 			switch (c) {
 9527              		.loc 1 277 6 is_stmt 0 view .LVU2956
 9528 0a7a BBF1030F 		cmp	fp, #3
 9529 0a7e 2DD0     		beq	.L1368
 294:src/keys.c    **** 			return CATALOGUE_REGISTERS;
ARM GAS  /tmp/cc8xFAqJ.s 			page 280


 9530              		.loc 1 294 3 is_stmt 1 view .LVU2957
 294:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 9531              		.loc 1 294 6 is_stmt 0 view .LVU2958
 9532 0a80 BBF1020F 		cmp	fp, #2
 9533 0a84 00F0CA83 		beq	.L1369
 296:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 9534              		.loc 1 296 3 is_stmt 1 view .LVU2959
 296:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 9535              		.loc 1 296 6 is_stmt 0 view .LVU2960
 9536 0a88 BBF1010F 		cmp	fp, #1
 9537 0a8c 7FF4F7AB 		bne	.L920
 296:src/keys.c    **** 			if ( !(REAL_FLAG || IMAG_FLAG) ) {
 9538              		.loc 1 296 27 view .LVU2961
 9539 0a90 0C2C     		cmp	r4, #12
 9540 0a92 7FF4F4AB 		bne	.L920
 297:src/keys.c    **** 				SET_REAL;
 9541              		.loc 1 297 4 is_stmt 1 view .LVU2962
 297:src/keys.c    **** 				SET_REAL;
 9542              		.loc 1 297 7 is_stmt 0 view .LVU2963
 9543 0a96 11F0060F 		tst	r1, #6
 9544 0a9a 00F06A86 		beq	.L1370
 301:src/keys.c    **** 				CmdLineLength = 0;
 9545              		.loc 1 301 9 is_stmt 1 view .LVU2964
 301:src/keys.c    **** 				CmdLineLength = 0;
 9546              		.loc 1 301 12 is_stmt 0 view .LVU2965
 9547 0a9e 98F81C30 		ldrb	r3, [r8, #28]	@ zero_extendqisi2
 9548 0aa2 002B     		cmp	r3, #0
 9549 0aa4 00F08786 		beq	.L1132
 302:src/keys.c    **** 				CmdLineEex = 0;
 9550              		.loc 1 302 5 is_stmt 1 view .LVU2966
 303:src/keys.c    **** 				CmdLineDot = 0;
 9551              		.loc 1 303 5 view .LVU2967
 304:src/keys.c    **** 			}
 9552              		.loc 1 304 5 view .LVU2968
 302:src/keys.c    **** 				CmdLineEex = 0;
 9553              		.loc 1 302 19 is_stmt 0 view .LVU2969
 9554 0aa8 0023     		movs	r3, #0
 9555 0aaa A8F81C30 		strh	r3, [r8, #28]	@ movhi
 304:src/keys.c    **** 			}
 9556              		.loc 1 304 16 view .LVU2970
 9557 0aae 88F81E30 		strb	r3, [r8, #30]
 9558              	.LVL801:
 304:src/keys.c    **** 			}
 9559              		.loc 1 304 16 view .LVU2971
 9560              	.LBE802:
 9561              	.LBE1142:
3303:src/keys.c    **** 		if (is_bad_cmdline())
 9562              		.loc 1 3303 2 is_stmt 1 view .LVU2972
 9563              	.LBB1143:
 9564              	.LBB803:
 306:src/keys.c    **** 		}
 9565              		.loc 1 306 11 is_stmt 0 view .LVU2973
 9566 0ab2 1023     		movs	r3, #16
 9567              	.LVL802:
 9568              	.L903:
 306:src/keys.c    **** 		}
 9569              		.loc 1 306 11 view .LVU2974
ARM GAS  /tmp/cc8xFAqJ.s 			page 281


 9570              	.LBE803:
 9571              	.LBE1143:
3304:src/keys.c    **** 			return STATE_UNFINISHED;
 9572              		.loc 1 3304 3 is_stmt 1 view .LVU2975
 9573 0ab4 0093     		str	r3, [sp]
3304:src/keys.c    **** 			return STATE_UNFINISHED;
 9574              		.loc 1 3304 7 is_stmt 0 view .LVU2976
 9575 0ab6 FFF7FEFF 		bl	is_bad_cmdline
 9576              	.LVL803:
3304:src/keys.c    **** 			return STATE_UNFINISHED;
 9577              		.loc 1 3304 6 view .LVU2977
 9578 0aba 009B     		ldr	r3, [sp]
 9579 0abc 0446     		mov	r4, r0
 9580 0abe 0028     		cmp	r0, #0
 9581 0ac0 7FF4EFAD 		bne	.L1104
 9582 0ac4 0093     		str	r3, [sp]
3306:src/keys.c    **** 		init_cat( cat );
 9583              		.loc 1 3306 3 is_stmt 1 view .LVU2978
 9584 0ac6 FFF7FEFF 		bl	init_cat
 9585              	.LVL804:
3307:src/keys.c    **** 		return STATE_UNFINISHED;
 9586              		.loc 1 3307 3 view .LVU2979
 9587 0aca 009B     		ldr	r3, [sp]
 9588 0acc 1846     		mov	r0, r3
 9589 0ace FFF7FEFF 		bl	init_cat
 9590              	.LVL805:
3308:src/keys.c    **** 	}
 9591              		.loc 1 3308 3 view .LVU2980
 9592              	.LBE1342:
 9593              	.LBE1411:
3387:src/keys.c    ****   if (was_paused && Pause == 0)
 9594              		.loc 1 3387 7 is_stmt 0 view .LVU2981
 9595 0ad2 2546     		mov	r5, r4
 9596 0ad4 3368     		ldr	r3, [r6]
 9597              	.LBB1412:
 9598              	.LBB1343:
3308:src/keys.c    **** 	}
 9599              		.loc 1 3308 10 view .LVU2982
 9600 0ad6 3324     		movs	r4, #51
 9601 0ad8 FFF7EDBA 		b	.L801
 9602              	.LVL806:
 9603              	.L1368:
 9604              	.LBB1144:
 9605              	.LBB804:
 278:src/keys.c    **** 				case K53:
 9606              		.loc 1 278 4 is_stmt 1 view .LVU2983
 9607 0adc 231F     		subs	r3, r4, #4
 9608 0ade 1D2B     		cmp	r3, #29
 9609 0ae0 3FF6CDAB 		bhi	.L920
 9610 0ae4 01A0     		adr	r0, .L904
 9611 0ae6 50F823F0 		ldr	pc, [r0, r3, lsl #2]
 9612 0aea 00BF     		.p2align 2
 9613              	.L904:
 9614 0aec 690B0000 		.word	.L907+1
 9615 0af0 790B0000 		.word	.L906+1
 9616 0af4 7F020000 		.word	.L920+1
 9617 0af8 7F020000 		.word	.L920+1
ARM GAS  /tmp/cc8xFAqJ.s 			page 282


 9618 0afc 7F020000 		.word	.L920+1
 9619 0b00 7F020000 		.word	.L920+1
 9620 0b04 7F020000 		.word	.L920+1
 9621 0b08 7F020000 		.word	.L920+1
 9622 0b0c 6D0B0000 		.word	.L905+1
 9623 0b10 7F020000 		.word	.L920+1
 9624 0b14 7F020000 		.word	.L920+1
 9625 0b18 7F020000 		.word	.L920+1
 9626 0b1c 7F020000 		.word	.L920+1
 9627 0b20 7F020000 		.word	.L920+1
 9628 0b24 7F020000 		.word	.L920+1
 9629 0b28 7F020000 		.word	.L920+1
 9630 0b2c 7F020000 		.word	.L920+1
 9631 0b30 7F020000 		.word	.L920+1
 9632 0b34 7F020000 		.word	.L920+1
 9633 0b38 7F020000 		.word	.L920+1
 9634 0b3c 7F020000 		.word	.L920+1
 9635 0b40 7F020000 		.word	.L920+1
 9636 0b44 7F020000 		.word	.L920+1
 9637 0b48 7F020000 		.word	.L920+1
 9638 0b4c 7F020000 		.word	.L920+1
 9639 0b50 7F020000 		.word	.L920+1
 9640 0b54 7F020000 		.word	.L920+1
 9641 0b58 7F020000 		.word	.L920+1
 9642 0b5c 7F020000 		.word	.L920+1
 9643 0b60 650B0000 		.word	.L1129+1
 9644              		.p2align 1
 9645              	.L1129:
 280:src/keys.c    **** 				case K04:
 9646              		.loc 1 280 13 is_stmt 0 view .LVU2984
 9647 0b64 0223     		movs	r3, #2
 9648 0b66 A5E7     		b	.L903
 9649              	.L907:
 277:src/keys.c    **** 			switch (c) {
 9650              		.loc 1 277 6 view .LVU2985
 9651 0b68 1223     		movs	r3, #18
 9652 0b6a A3E7     		b	.L903
 9653              	.L905:
 286:src/keys.c    **** 						finish_cpx_entry(1);
 9654              		.loc 1 286 6 is_stmt 1 view .LVU2986
 286:src/keys.c    **** 						finish_cpx_entry(1);
 9655              		.loc 1 286 9 is_stmt 0 view .LVU2987
 9656 0b6c 11F0060F 		tst	r1, #6
 9657 0b70 40F09C85 		bne	.L1371
 289:src/keys.c    **** 				default:
 9658              		.loc 1 289 13 view .LVU2988
 9659 0b74 1123     		movs	r3, #17
 9660 0b76 9DE7     		b	.L903
 9661              	.L906:
 284:src/keys.c    **** 				case K20:
 9662              		.loc 1 284 6 is_stmt 1 view .LVU2989
 9663              	.LVL807:
 284:src/keys.c    **** 				case K20:
 9664              		.loc 1 284 6 is_stmt 0 view .LVU2990
 9665              	.LBE804:
 9666              	.LBE1144:
3303:src/keys.c    **** 		if (is_bad_cmdline())
ARM GAS  /tmp/cc8xFAqJ.s 			page 283


 9667              		.loc 1 3303 2 is_stmt 1 view .LVU2991
 9668              	.LBB1145:
 9669              	.LBB805:
 284:src/keys.c    **** 				case K20:
 9670              		.loc 1 284 13 is_stmt 0 view .LVU2992
 9671 0b78 0923     		movs	r3, #9
 9672 0b7a 9BE7     		b	.L903
 9673              	.LVL808:
 9674              	.L1378:
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 9675              		.loc 1 312 74 view .LVU2993
 9676 0b7c D8F81410 		ldr	r1, [r8, #20]
 9677 0b80 DFF834C1 		ldr	ip, .L1407+32
 9678 0b84 11EA0C0F 		tst	r1, ip
 9679 0b88 94D0     		beq	.L903
 315:src/keys.c    ****     /*
 9680              		.loc 1 315 3 is_stmt 1 view .LVU2994
 315:src/keys.c    ****     /*
 9681              		.loc 1 315 23 is_stmt 0 view .LVU2995
 9682 0b8a 474B     		ldr	r3, .L1407+16
 315:src/keys.c    ****     /*
 9683              		.loc 1 315 6 view .LVU2996
 9684 0b8c 1942     		tst	r1, r3
 9685 0b8e 3FF45DAB 		beq	.L1112
 9686              	.L913:
 9687              	.LBB797:
 384:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 9688              		.loc 1 384 5 is_stmt 1 view .LVU2997
 408:src/keys.c    **** 
 9689              		.loc 1 408 5 view .LVU2998
 413:src/keys.c    ****     col = smap[shift];
 9690              		.loc 1 413 5 view .LVU2999
 9691              	.LVL809:
 414:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 9692              		.loc 1 414 5 view .LVU3000
 414:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 9693              		.loc 1 414 15 is_stmt 0 view .LVU3001
 9694 0b92 4649     		ldr	r1, .L1407+20
 413:src/keys.c    ****     col = smap[shift];
 9695              		.loc 1 413 8 view .LVU3002
 9696 0b94 464B     		ldr	r3, .L1407+24
 414:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 9697              		.loc 1 414 9 view .LVU3003
 9698 0b96 11F80BC0 		ldrb	ip, [r1, fp]	@ zero_extendqisi2
 9699              	.LVL810:
 415:src/keys.c    ****   }
 9700              		.loc 1 415 5 is_stmt 1 view .LVU3004
 415:src/keys.c    ****   }
 9701              		.loc 1 415 9 is_stmt 0 view .LVU3005
 9702 0b9a 0821     		movs	r1, #8
 9703 0b9c FFF763BB 		b	.L915
 9704              	.LVL811:
 9705              	.L875:
 415:src/keys.c    ****   }
 9706              		.loc 1 415 9 view .LVU3006
 9707              	.LBE797:
 9708              	.LBE805:
ARM GAS  /tmp/cc8xFAqJ.s 			page 284


 9709              	.LBE1145:
 9710              	.LBB1146:
 9711              	.LBB1044:
2355:src/keys.c    **** 		return process_arg(c);
 9712              		.loc 1 2355 3 is_stmt 1 view .LVU3007
 9713              	.LBB1037:
 9714              	.LBI1037:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 9715              		.loc 1 552 13 view .LVU3008
 9716              	.LBB1038:
 553:src/keys.c    **** 		return;
 9717              		.loc 1 553 2 view .LVU3009
 553:src/keys.c    **** 		return;
 9718              		.loc 1 553 6 is_stmt 0 view .LVU3010
 9719 0ba0 FFF7FEFF 		bl	is_bad_cmdline
 9720              	.LVL812:
 553:src/keys.c    **** 		return;
 9721              		.loc 1 553 5 view .LVU3011
 9722 0ba4 18B9     		cbnz	r0, .L877
 9723 0ba6 5FFA8AF0 		uxtb	r0, r10
 9724 0baa FFF7FEFF 		bl	init_arg.part.0
 9725              	.LVL813:
 9726              	.L877:
 553:src/keys.c    **** 		return;
 9727              		.loc 1 553 5 view .LVU3012
 9728              	.LBE1038:
 9729              	.LBE1037:
2356:src/keys.c    **** 	}
 9730              		.loc 1 2356 3 is_stmt 1 view .LVU3013
2356:src/keys.c    **** 	}
 9731              		.loc 1 2356 10 is_stmt 0 view .LVU3014
 9732 0bae 2046     		mov	r0, r4
 9733 0bb0 FFF7FEFF 		bl	process_arg
 9734              	.LVL814:
 9735 0bb4 0446     		mov	r4, r0
 9736              	.LVL815:
2356:src/keys.c    **** 	}
 9737              		.loc 1 2356 10 view .LVU3015
 9738 0bb6 13E4     		b	.L835
 9739              	.LVL816:
 9740              	.L1331:
2356:src/keys.c    **** 	}
 9741              		.loc 1 2356 10 view .LVU3016
 9742              	.LBE1044:
 9743              	.LBE1146:
3278:src/keys.c    **** 		return STATE_UNFINISHED;
 9744              		.loc 1 3278 3 is_stmt 1 view .LVU3017
 9745              	.LBB1147:
 9746              	.LBI1147:
 121:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 9747              		.loc 1 121 13 view .LVU3018
 9748              	.LBB1148:
 122:src/keys.c    **** }
 9749              		.loc 1 122 2 view .LVU3019
 122:src/keys.c    **** }
 9750              		.loc 1 122 16 is_stmt 0 view .LVU3020
 9751 0bb8 98F81020 		ldrb	r2, [r8, #16]	@ zero_extendqisi2
ARM GAS  /tmp/cc8xFAqJ.s 			page 285


 9752 0bbc 3368     		ldr	r3, [r6]
 9753 0bbe 013A     		subs	r2, r2, #1
 9754 0bc0 18BF     		it	ne
 9755 0bc2 0122     		movne	r2, #1
 9756 0bc4 88F81020 		strb	r2, [r8, #16]
 9757              	.LVL817:
 122:src/keys.c    **** }
 9758              		.loc 1 122 16 view .LVU3021
 9759              	.LBE1148:
 9760              	.LBE1147:
3279:src/keys.c    **** 	}
 9761              		.loc 1 3279 3 is_stmt 1 view .LVU3022
3279:src/keys.c    **** 	}
 9762              		.loc 1 3279 10 is_stmt 0 view .LVU3023
 9763 0bc8 3324     		movs	r4, #51
 9764              	.LVL818:
3279:src/keys.c    **** 	}
 9765              		.loc 1 3279 10 view .LVU3024
 9766 0bca FFF774BA 		b	.L801
 9767              	.LVL819:
 9768              	.L1332:
3282:src/keys.c    **** 		return STATE_UNFINISHED;
 9769              		.loc 1 3282 3 is_stmt 1 view .LVU3025
 9770              	.LBB1149:
 9771              	.LBI1149:
 121:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 9772              		.loc 1 121 13 view .LVU3026
 9773              	.LBB1150:
 122:src/keys.c    **** }
 9774              		.loc 1 122 2 view .LVU3027
 122:src/keys.c    **** }
 9775              		.loc 1 122 16 is_stmt 0 view .LVU3028
 9776 0bce 98F81020 		ldrb	r2, [r8, #16]	@ zero_extendqisi2
 9777 0bd2 3368     		ldr	r3, [r6]
 9778 0bd4 022A     		cmp	r2, #2
 9779 0bd6 18BF     		it	ne
 9780 0bd8 0221     		movne	r1, #2
 9781 0bda 88F81010 		strb	r1, [r8, #16]
 9782              	.LVL820:
 122:src/keys.c    **** }
 9783              		.loc 1 122 16 view .LVU3029
 9784              	.LBE1150:
 9785              	.LBE1149:
3283:src/keys.c    **** 	}
 9786              		.loc 1 3283 3 is_stmt 1 view .LVU3030
3283:src/keys.c    **** 	}
 9787              		.loc 1 3283 10 is_stmt 0 view .LVU3031
 9788 0bde 3324     		movs	r4, #51
 9789              	.LVL821:
3283:src/keys.c    **** 	}
 9790              		.loc 1 3283 10 view .LVU3032
 9791 0be0 FFF769BA 		b	.L801
 9792              	.LVL822:
 9793              	.L1338:
 9794              	.LBB1151:
 9795              	.LBB806:
 423:src/keys.c    ****       break;
ARM GAS  /tmp/cc8xFAqJ.s 			page 286


 9796              		.loc 1 423 7 is_stmt 1 view .LVU3033
 423:src/keys.c    ****       break;
 9797              		.loc 1 423 11 is_stmt 0 view .LVU3034
 9798 0be4 6344     		add	r3, r3, ip
 9799              	.LVL823:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9800              		.loc 1 427 6 view .LVU3035
 9801 0be6 1107     		lsls	r1, r2, #28
 423:src/keys.c    ****       break;
 9802              		.loc 1 423 11 view .LVU3036
 9803 0be8 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 9804              	.LVL824:
 424:src/keys.c    ****     }
 9805              		.loc 1 424 7 is_stmt 1 view .LVU3037
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9806              		.loc 1 427 3 view .LVU3038
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9807              		.loc 1 427 6 is_stmt 0 view .LVU3039
 9808 0bea 40F1A980 		bpl	.L1372
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9809              		.loc 1 427 20 view .LVU3040
 9810 0bee A3F10B02 		sub	r2, r3, #11
 9811 0bf2 042A     		cmp	r2, #4
 9812 0bf4 7FF65EAF 		bls	.L903
 9813              	.LVL825:
 9814              	.L926:
 427:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 9815              		.loc 1 427 20 view .LVU3041
 9816              	.LBE806:
 9817              	.LBE1151:
3315:src/keys.c    **** 
 9818              		.loc 1 3315 3 is_stmt 1 view .LVU3042
 9819              	.LBB1152:
 9820              	.LBI1152:
2788:src/keys.c    **** 	enum shifts shift = reset_shift();
 9821              		.loc 1 2788 12 view .LVU3043
 9822              	.LBB1153:
2789:src/keys.c    **** 	unsigned int ch = 0;
 9823              		.loc 1 2789 2 view .LVU3044
 9824              	.LBB1154:
 9825              	.LBI1154:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 9826              		.loc 1 114 13 view .LVU3045
 9827              	.LBE1154:
 9828              	.LBE1153:
 9829              	.LBE1152:
 9830              	.LBE1343:
 9831              	.LBE1412:
 115:src/keys.c    **** }
 9832              		.loc 1 115 2 view .LVU3046
 9833              	.LBB1413:
 9834              	.LBB1344:
 9835              	.LBB1189:
 9836              	.LBB1182:
 9837              	.LBB1161:
 9838              	.LBB1155:
 9839              	.LBI1155:
ARM GAS  /tmp/cc8xFAqJ.s 			page 287


 104:src/keys.c    **** 	enum shifts r = cur_shift();
 9840              		.loc 1 104 20 view .LVU3047
 9841              	.LBB1156:
 105:src/keys.c    **** 	State2.shifts = shift;
 9842              		.loc 1 105 2 view .LVU3048
 9843              	.LBB1157:
 9844              	.LBI1157:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 9845              		.loc 1 96 13 view .LVU3049
 9846              	.LBB1158:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9847              		.loc 1 97 2 view .LVU3050
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9848              		.loc 1 97 18 is_stmt 0 view .LVU3051
 9849 0bf8 FFF7FEFF 		bl	shift_down
 9850              	.LVL826:
  98:src/keys.c    **** }
 9851              		.loc 1 98 2 is_stmt 1 view .LVU3052
  98:src/keys.c    **** }
 9852              		.loc 1 98 52 is_stmt 0 view .LVU3053
 9853 0bfc 0146     		mov	r1, r0
 9854 0bfe 08B9     		cbnz	r0, .L923
 9855 0c00 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 9856              	.L923:
 9857              	.LVL827:
  98:src/keys.c    **** }
 9858              		.loc 1 98 52 view .LVU3054
 9859              	.LBE1158:
 9860              	.LBE1157:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9861              		.loc 1 106 2 is_stmt 1 view .LVU3055
 9862              	.LBE1156:
 9863              	.LBE1155:
 9864              	.LBE1161:
2793:src/keys.c    **** 		// Alpha catalogue from within multi character command
 9865              		.loc 1 2793 5 is_stmt 0 view .LVU3056
 9866 0c04 98F80E00 		ldrb	r0, [r8, #14]	@ zero_extendqisi2
 9867              	.LBB1162:
 9868              	.LBB1160:
 9869              	.LBB1159:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9870              		.loc 1 106 16 view .LVU3057
 9871 0c08 0023     		movs	r3, #0
 9872 0c0a 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 9873              		.loc 1 108 2 is_stmt 1 view .LVU3058
 9874              	.LVL828:
 108:src/keys.c    **** }
 9875              		.loc 1 108 2 is_stmt 0 view .LVU3059
 9876              	.LBE1159:
 9877              	.LBE1160:
 9878              	.LBE1162:
2790:src/keys.c    **** 	unsigned int opcode;
 9879              		.loc 1 2790 2 is_stmt 1 view .LVU3060
2791:src/keys.c    **** 
 9880              		.loc 1 2791 2 view .LVU3061
2793:src/keys.c    **** 		// Alpha catalogue from within multi character command
ARM GAS  /tmp/cc8xFAqJ.s 			page 288


 9881              		.loc 1 2793 2 view .LVU3062
2793:src/keys.c    **** 		// Alpha catalogue from within multi character command
 9882              		.loc 1 2793 5 is_stmt 0 view .LVU3063
 9883 0c0e 0028     		cmp	r0, #0
 9884 0c10 40F00384 		bne	.L1373
2802:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
 9885              		.loc 1 2802 2 is_stmt 1 view .LVU3064
 9886 0c14 102C     		cmp	r4, #16
 9887 0c16 00F02884 		beq	.L930
 9888 0c1a 242C     		cmp	r4, #36
 9889 0c1c 00F00E84 		beq	.L931
 9890 0c20 0C2C     		cmp	r4, #12
 9891 0c22 00F09F84 		beq	.L1374
 9892              	.L932:
2835:src/keys.c    **** 	if (ch == 0)
 9893              		.loc 1 2835 2 view .LVU3065
 9894              	.LBB1163:
 9895              	.LBB1164:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 9896              		.loc 1 485 6 is_stmt 0 view .LVU3066
 9897 0c26 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9898              	.LVL829:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 9899              		.loc 1 485 6 view .LVU3067
 9900              	.LBE1164:
 9901              	.LBI1163:
 435:src/keys.c    **** {
 9902              		.loc 1 435 12 is_stmt 1 view .LVU3068
 9903              	.LBB1169:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 9904              		.loc 1 437 2 view .LVU3069
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 9905              		.loc 1 485 2 view .LVU3070
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 9906              		.loc 1 485 5 is_stmt 0 view .LVU3071
 9907 0c2a D806     		lsls	r0, r3, #27
 9908 0c2c 03D5     		bpl	.L936
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 9909              		.loc 1 486 3 is_stmt 1 view .LVU3072
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 9910              		.loc 1 486 6 is_stmt 0 view .LVU3073
 9911 0c2e 0029     		cmp	r1, #0
 9912 0c30 40F01F86 		bne	.L1375
 487:src/keys.c    **** 		else if (shift == SHIFT_G)
 9913              		.loc 1 487 10 view .LVU3074
 9914 0c34 0421     		movs	r1, #4
 9915              	.LVL830:
 9916              	.L936:
 491:src/keys.c    **** }
 9917              		.loc 1 491 2 is_stmt 1 view .LVU3075
 9918              	.LBB1165:
 9919              	.LBI1165:
 131:src/keys.c    **** {
 9920              		.loc 1 131 12 view .LVU3076
 9921              	.LBB1166:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9922              		.loc 1 133 2 view .LVU3077
ARM GAS  /tmp/cc8xFAqJ.s 			page 289


 143:src/keys.c    **** }
 9923              		.loc 1 143 2 view .LVU3078
 143:src/keys.c    **** }
 9924              		.loc 1 143 23 is_stmt 0 view .LVU3079
 9925 0c36 194B     		ldr	r3, .L1407+4
 9926              	.LBE1166:
 9927              	.LBE1165:
 491:src/keys.c    **** }
 9928              		.loc 1 491 49 view .LVU3080
 9929 0c38 1E4A     		ldr	r2, .L1407+28
 9930              	.LBB1168:
 9931              	.LBB1167:
 143:src/keys.c    **** }
 9932              		.loc 1 143 23 view .LVU3081
 9933 0c3a 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 9934              	.LBE1167:
 9935              	.LBE1168:
 491:src/keys.c    **** }
 9936              		.loc 1 491 49 view .LVU3082
 9937 0c3c 0620     		movs	r0, #6
 9938 0c3e 00FB0323 		mla	r3, r0, r3, r2
 9939              	.LBE1169:
 9940              	.LBE1163:
2835:src/keys.c    **** 	if (ch == 0)
 9941              		.loc 1 2835 5 view .LVU3083
 9942 0c42 5C5C     		ldrb	r4, [r3, r1]	@ zero_extendqisi2
 9943              	.LVL831:
2836:src/keys.c    **** 		return STATE_UNFINISHED;
 9944              		.loc 1 2836 2 is_stmt 1 view .LVU3084
2836:src/keys.c    **** 		return STATE_UNFINISHED;
 9945              		.loc 1 2836 5 is_stmt 0 view .LVU3085
 9946 0c44 002C     		cmp	r4, #0
 9947 0c46 3FF42CAD 		beq	.L1104
 9948              	.L929:
2839:src/keys.c    **** 		State2.digval = ch;
 9949              		.loc 1 2839 2 is_stmt 1 view .LVU3086
2839:src/keys.c    **** 		State2.digval = ch;
 9950              		.loc 1 2839 12 is_stmt 0 view .LVU3087
 9951 0c4a 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
2839:src/keys.c    **** 		State2.digval = ch;
 9952              		.loc 1 2839 5 view .LVU3088
 9953 0c4e 002B     		cmp	r3, #0
 9954 0c50 00F08685 		beq	.L1376
2843:src/keys.c    **** 		State2.digval2 = ch;
 9955              		.loc 1 2843 9 is_stmt 1 view .LVU3089
2843:src/keys.c    **** 		State2.digval2 = ch;
 9956              		.loc 1 2843 12 is_stmt 0 view .LVU3090
 9957 0c54 012B     		cmp	r3, #1
 9958 0c56 00F01F86 		beq	.L1377
2848:src/keys.c    **** 
 9959              		.loc 1 2848 2 is_stmt 1 view .LVU3091
 9960              	.LBB1171:
 9961              	.LBI1171:
2781:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 9962              		.loc 1 2781 13 view .LVU3092
 9963              	.LBB1172:
2783:src/keys.c    **** 	if (! State2.alphas )
ARM GAS  /tmp/cc8xFAqJ.s 			page 290


 9964              		.loc 1 2783 2 view .LVU3093
2783:src/keys.c    **** 	if (! State2.alphas )
 9965              		.loc 1 2783 15 is_stmt 0 view .LVU3094
 9966 0c5a 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2784:src/keys.c    **** 		State2.alphashift = 0;
 9967              		.loc 1 2784 6 view .LVU3095
 9968 0c5e 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2783:src/keys.c    **** 	if (! State2.alphas )
 9969              		.loc 1 2783 15 view .LVU3096
 9970 0c62 6FF3C302 		bfc	r2, #3, #1
 9971 0c66 88F81520 		strb	r2, [r8, #21]
2784:src/keys.c    **** 		State2.alphashift = 0;
 9972              		.loc 1 2784 2 is_stmt 1 view .LVU3097
2784:src/keys.c    **** 		State2.alphashift = 0;
 9973              		.loc 1 2784 5 is_stmt 0 view .LVU3098
 9974 0c6a 13F00802 		ands	r2, r3, #8
2785:src/keys.c    **** }
 9975              		.loc 1 2785 3 is_stmt 1 view .LVU3099
2785:src/keys.c    **** }
 9976              		.loc 1 2785 21 is_stmt 0 view .LVU3100
 9977 0c6e 04BF     		itt	eq
 9978 0c70 62F30413 		bfieq	r3, r2, #4, #1
 9979 0c74 88F81630 		strbeq	r3, [r8, #22]
 9980              	.LVL832:
 9981              	.L935:
2785:src/keys.c    **** }
 9982              		.loc 1 2785 21 view .LVU3101
 9983              	.LBE1172:
 9984              	.LBE1171:
2851:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 9985              		.loc 1 2851 2 is_stmt 1 view .LVU3102
2853:src/keys.c    **** }
 9986              		.loc 1 2853 2 view .LVU3103
2851:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 9987              		.loc 1 2851 21 is_stmt 0 view .LVU3104
 9988 0c78 98F81F30 		ldrb	r3, [r8, #31]	@ zero_extendqisi2
2852:src/keys.c    **** 	return opcode;
 9989              		.loc 1 2852 17 view .LVU3105
 9990 0c7c B8F80810 		ldrh	r1, [r8, #8]
2852:src/keys.c    **** 	return opcode;
 9991              		.loc 1 2852 34 view .LVU3106
 9992 0c80 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
2851:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 9993              		.loc 1 2851 29 view .LVU3107
 9994 0c84 1B02     		lsls	r3, r3, #8
2851:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 9995              		.loc 1 2851 18 view .LVU3108
 9996 0c86 03F57043 		add	r3, r3, #61440
2852:src/keys.c    **** 	return opcode;
 9997              		.loc 1 2852 9 view .LVU3109
 9998 0c8a 0B44     		add	r3, r3, r1
2852:src/keys.c    **** 	return opcode;
 9999              		.loc 1 2852 25 view .LVU3110
 10000 0c8c 03EB0243 		add	r3, r3, r2, lsl #16
2851:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 10001              		.loc 1 2851 9 view .LVU3111
 10002 0c90 03EB0464 		add	r4, r3, r4, lsl #24
ARM GAS  /tmp/cc8xFAqJ.s 			page 291


 10003              	.LVL833:
2853:src/keys.c    **** }
 10004              		.loc 1 2853 9 view .LVU3112
 10005 0c94 FFF7A4BB 		b	.L835
 10006              	.L1408:
 10007              		.align	2
 10008              	.L1407:
 10009 0c98 00000000 		.word	main_ram
 10010 0c9c 00000000 		.word	.LANCHOR6
 10011 0ca0 00000000 		.word	.LANCHOR5
 10012 0ca4 00000000 		.word	.LANCHOR21
 10013 0ca8 00080800 		.word	526336
 10014 0cac 00000000 		.word	.LANCHOR22
 10015 0cb0 00000000 		.word	.LANCHOR16
 10016 0cb4 00000000 		.word	.LANCHOR15
 10017 0cb8 000A4000 		.word	4196864
 10018              	.LVL834:
 10019              	.L1333:
2853:src/keys.c    **** }
 10020              		.loc 1 2853 9 view .LVU3113
 10021              	.LBE1182:
 10022              	.LBE1189:
3286:src/keys.c    **** 		State2.arrow = 0;
 10023              		.loc 1 3286 3 is_stmt 1 view .LVU3114
 10024              	.LBB1190:
 10025              	.LBI1190:
 121:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 10026              		.loc 1 121 13 view .LVU3115
 10027              	.LBB1191:
 122:src/keys.c    **** }
 10028              		.loc 1 122 2 view .LVU3116
 122:src/keys.c    **** }
 10029              		.loc 1 122 16 is_stmt 0 view .LVU3117
 10030 0cbc 98F81040 		ldrb	r4, [r8, #16]	@ zero_extendqisi2
 10031              	.LVL835:
 122:src/keys.c    **** }
 10032              		.loc 1 122 16 view .LVU3118
 10033 0cc0 3368     		ldr	r3, [r6]
 10034 0cc2 032C     		cmp	r4, #3
 10035              	.LBE1191:
 10036              	.LBE1190:
3287:src/keys.c    **** 		return STATE_UNFINISHED;
 10037              		.loc 1 3287 16 view .LVU3119
 10038 0cc4 60F38202 		bfi	r2, r0, #2, #1
 10039              	.LBB1194:
 10040              	.LBB1192:
 122:src/keys.c    **** }
 10041              		.loc 1 122 16 view .LVU3120
 10042 0cc8 18BF     		it	ne
 10043 0cca 0321     		movne	r1, #3
 10044              	.LBE1192:
 10045              	.LBE1194:
3287:src/keys.c    **** 		return STATE_UNFINISHED;
 10046              		.loc 1 3287 16 view .LVU3121
 10047 0ccc 88F81520 		strb	r2, [r8, #21]
 10048              	.LBB1195:
 10049              	.LBB1193:
ARM GAS  /tmp/cc8xFAqJ.s 			page 292


 122:src/keys.c    **** }
 10050              		.loc 1 122 16 view .LVU3122
 10051 0cd0 88F81010 		strb	r1, [r8, #16]
 10052              	.LVL836:
 122:src/keys.c    **** }
 10053              		.loc 1 122 16 view .LVU3123
 10054              	.LBE1193:
 10055              	.LBE1195:
3287:src/keys.c    **** 		return STATE_UNFINISHED;
 10056              		.loc 1 3287 3 is_stmt 1 view .LVU3124
3288:src/keys.c    **** 	}
 10057              		.loc 1 3288 3 view .LVU3125
3288:src/keys.c    **** 	}
 10058              		.loc 1 3288 10 is_stmt 0 view .LVU3126
 10059 0cd4 3324     		movs	r4, #51
 10060 0cd6 FFF7EEB9 		b	.L801
 10061              	.LVL837:
 10062              	.L1336:
 10063              	.LBB1196:
 10064              	.LBB807:
 312:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 10065              		.loc 1 312 16 view .LVU3127
 10066 0cda BBF1030F 		cmp	fp, #3
 10067 0cde 3FF44DAF 		beq	.L1378
 315:src/keys.c    ****     /*
 10068              		.loc 1 315 3 is_stmt 1 view .LVU3128
 315:src/keys.c    ****     /*
 10069              		.loc 1 315 23 is_stmt 0 view .LVU3129
 10070 0ce2 D149     		ldr	r1, .L1409
 10071 0ce4 D8F81430 		ldr	r3, [r8, #20]
 315:src/keys.c    ****     /*
 10072              		.loc 1 315 6 view .LVU3130
 10073 0ce8 1942     		tst	r1, r3
 10074 0cea 3FF4C8AA 		beq	.L920
 10075 0cee 50E7     		b	.L913
 10076              	.LVL838:
 10077              	.L1362:
 315:src/keys.c    ****     /*
 10078              		.loc 1 315 6 view .LVU3131
 10079              	.LBE807:
 10080              	.LBE1196:
 10081              	.LBB1197:
 10082              	.LBB1102:
2897:src/keys.c    **** 			n = max;
 10083              		.loc 1 2897 3 is_stmt 1 view .LVU3132
2897:src/keys.c    **** 			n = max;
 10084              		.loc 1 2897 6 is_stmt 0 view .LVU3133
 10085 0cf0 0A1F     		subs	r2, r1, #4
 10086              	.LVL839:
2897:src/keys.c    **** 			n = max;
 10087              		.loc 1 2897 6 view .LVU3134
 10088 0cf2 0129     		cmp	r1, #1
 10089 0cf4 18BF     		it	ne
 10090 0cf6 1346     		movne	r3, r2
 10091              	.LVL840:
2897:src/keys.c    **** 			n = max;
 10092              		.loc 1 2897 6 view .LVU3135
ARM GAS  /tmp/cc8xFAqJ.s 			page 293


 10093 0cf8 46E6     		b	.L884
 10094              	.LVL841:
 10095              	.L1353:
2897:src/keys.c    **** 			n = max;
 10096              		.loc 1 2897 6 view .LVU3136
 10097              	.LBE1102:
 10098              	.LBE1197:
 10099              	.LBB1198:
 10100              	.LBB1062:
1696:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 10101              		.loc 1 1696 44 is_stmt 1 view .LVU3137
1696:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 10102              		.loc 1 1696 52 is_stmt 0 view .LVU3138
 10103 0cfa 0120     		movs	r0, #1
 10104 0cfc FFF7FEFF 		bl	gtodot_digit
 10105              	.LVL842:
1742:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10106              		.loc 1 1742 2 is_stmt 1 view .LVU3139
 10107              	.LBE1062:
 10108              	.LBE1198:
3263:src/keys.c    **** 
 10109              		.loc 1 3263 10 is_stmt 0 view .LVU3140
 10110 0d00 3324     		movs	r4, #51
 10111              	.LVL843:
3263:src/keys.c    **** 
 10112              		.loc 1 3263 10 view .LVU3141
 10113 0d02 3368     		ldr	r3, [r6]
 10114 0d04 FFF7D7B9 		b	.L801
 10115              	.LVL844:
 10116              	.L869:
 10117              	.LBB1199:
 10118              	.LBB1045:
2343:src/keys.c    **** 	}
 10119              		.loc 1 2343 3 is_stmt 1 view .LVU3142
2343:src/keys.c    **** 	}
 10120              		.loc 1 2343 10 is_stmt 0 view .LVU3143
 10121 0d08 0AF12000 		add	r0, r10, #32
 10122 0d0c 4CEA0020 		orr	r0, ip, r0, lsl #8
 10123 0d10 0446     		mov	r4, r0
 10124              	.LVL845:
2343:src/keys.c    **** 	}
 10125              		.loc 1 2343 10 view .LVU3144
 10126 0d12 FFF787BB 		b	.L862
 10127              	.LVL846:
 10128              	.L1354:
2343:src/keys.c    **** 	}
 10129              		.loc 1 2343 10 view .LVU3145
 10130              	.LBE1045:
 10131              	.LBE1199:
 10132              	.LBB1200:
 10133              	.LBB1063:
1697:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 10134              		.loc 1 1697 44 is_stmt 1 view .LVU3146
1697:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 10135              		.loc 1 1697 52 is_stmt 0 view .LVU3147
 10136 0d16 0220     		movs	r0, #2
 10137 0d18 FFF7FEFF 		bl	gtodot_digit
ARM GAS  /tmp/cc8xFAqJ.s 			page 294


 10138              	.LVL847:
1742:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10139              		.loc 1 1742 2 is_stmt 1 view .LVU3148
 10140              	.LBE1063:
 10141              	.LBE1200:
3263:src/keys.c    **** 
 10142              		.loc 1 3263 10 is_stmt 0 view .LVU3149
 10143 0d1c 3324     		movs	r4, #51
 10144              	.LVL848:
3263:src/keys.c    **** 
 10145              		.loc 1 3263 10 view .LVU3150
 10146 0d1e 3368     		ldr	r3, [r6]
 10147 0d20 FFF7C9B9 		b	.L801
 10148              	.LVL849:
 10149              	.L1366:
 10150              	.LBB1201:
 10151              	.LBB1135:
1641:src/keys.c    **** 
 10152              		.loc 1 1641 3 is_stmt 1 view .LVU3151
1641:src/keys.c    **** 
 10153              		.loc 1 1641 25 is_stmt 0 view .LVU3152
 10154 0d24 C14A     		ldr	r2, .L1409+4
 10155 0d26 0AEB4303 		add	r3, r10, r3, lsl #1
 10156 0d2a 32F81340 		ldrh	r4, [r2, r3, lsl #1]
 10157              	.LVL850:
1641:src/keys.c    **** 
 10158              		.loc 1 1641 25 view .LVU3153
 10159 0d2e FFF757BB 		b	.L835
 10160              	.LVL851:
 10161              	.L1363:
1641:src/keys.c    **** 
 10162              		.loc 1 1641 25 view .LVU3154
 10163              	.LBE1135:
 10164              	.LBE1201:
 10165              	.LBB1202:
 10166              	.LBB1103:
2901:src/keys.c    **** 			n = -2;
 10167              		.loc 1 2901 3 is_stmt 1 view .LVU3155
2901:src/keys.c    **** 			n = -2;
 10168              		.loc 1 2901 6 is_stmt 0 view .LVU3156
 10169 0d32 0239     		subs	r1, r1, #2
 10170              	.LVL852:
2902:src/keys.c    **** 	}
 10171              		.loc 1 2902 6 view .LVU3157
 10172 0d34 9942     		cmp	r1, r3
 10173 0d36 D4BF     		ite	le
 10174 0d38 0B46     		movle	r3, r1
 10175              	.LVL853:
2902:src/keys.c    **** 	}
 10176              		.loc 1 2902 6 view .LVU3158
 10177 0d3a 6FF00103 		mvngt	r3, #1
 10178 0d3e 23E6     		b	.L884
 10179              	.LVL854:
 10180              	.L1372:
2902:src/keys.c    **** 	}
 10181              		.loc 1 2902 6 view .LVU3159
 10182              	.LBE1103:
ARM GAS  /tmp/cc8xFAqJ.s 			page 295


 10183              	.LBE1202:
3303:src/keys.c    **** 		if (is_bad_cmdline())
 10184              		.loc 1 3303 2 is_stmt 1 view .LVU3160
3303:src/keys.c    **** 		if (is_bad_cmdline())
 10185              		.loc 1 3303 5 is_stmt 0 view .LVU3161
 10186 0d40 002B     		cmp	r3, #0
 10187 0d42 7FF4B7AE 		bne	.L903
 10188 0d46 FFF79DBA 		b	.L924
 10189              	.LVL855:
 10190              	.L1355:
 10191              	.LBB1203:
 10192              	.LBB1064:
1698:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 10193              		.loc 1 1698 44 is_stmt 1 view .LVU3162
1698:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 10194              		.loc 1 1698 52 is_stmt 0 view .LVU3163
 10195 0d4a 0320     		movs	r0, #3
 10196 0d4c FFF7FEFF 		bl	gtodot_digit
 10197              	.LVL856:
1742:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10198              		.loc 1 1742 2 is_stmt 1 view .LVU3164
 10199              	.LBE1064:
 10200              	.LBE1203:
3263:src/keys.c    **** 
 10201              		.loc 1 3263 10 is_stmt 0 view .LVU3165
 10202 0d50 3324     		movs	r4, #51
 10203              	.LVL857:
3263:src/keys.c    **** 
 10204              		.loc 1 3263 10 view .LVU3166
 10205 0d52 3368     		ldr	r3, [r6]
 10206 0d54 FFF7AFB9 		b	.L801
 10207              	.LVL858:
 10208              	.L1340:
3318:src/keys.c    **** 
 10209              		.loc 1 3318 3 is_stmt 1 view .LVU3167
 10210              	.LBB1204:
 10211              	.LBI1204:
2971:src/keys.c    **** 	unsigned int pc = State2.digval;
 10212              		.loc 1 2971 12 view .LVU3168
 10213              	.LBB1205:
2972:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 10214              		.loc 1 2972 2 view .LVU3169
2974:src/keys.c    **** 	const int opcode = getprog(pc);
 10215              		.loc 1 2974 27 is_stmt 0 view .LVU3170
 10216 0d58 262C     		cmp	r4, #38
2972:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 10217              		.loc 1 2972 15 view .LVU3171
 10218 0d5a B8F808A0 		ldrh	r10, [r8, #8]
 10219              	.LVL859:
2973:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
 10220              		.loc 1 2973 2 is_stmt 1 view .LVU3172
2974:src/keys.c    **** 	const int opcode = getprog(pc);
 10221              		.loc 1 2974 27 is_stmt 0 view .LVU3173
 10222 0d5e 00F09983 		beq	.L1139
 10223              	.LVL860:
 10224              	.LBB1206:
 10225              	.LBI1206:
ARM GAS  /tmp/cc8xFAqJ.s 			page 296


 210:src/keys.c    **** {
 10226              		.loc 1 210 14 is_stmt 1 view .LVU3174
 10227              	.LBB1207:
 212:src/keys.c    ****     // K00 - K05
 10228              		.loc 1 212 3 view .LVU3175
 234:src/keys.c    **** }
 10229              		.loc 1 234 3 view .LVU3176
 10230              	.LBB1208:
 10231              	.LBI1208:
 131:src/keys.c    **** {
 10232              		.loc 1 131 12 view .LVU3177
 10233              	.LBB1209:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10234              		.loc 1 133 2 view .LVU3178
 143:src/keys.c    **** }
 10235              		.loc 1 143 2 view .LVU3179
 143:src/keys.c    **** }
 10236              		.loc 1 143 23 is_stmt 0 view .LVU3180
 10237 0d62 B34B     		ldr	r3, .L1409+8
 10238              	.LBE1209:
 10239              	.LBE1208:
 234:src/keys.c    **** }
 10240              		.loc 1 234 28 view .LVU3181
 10241 0d64 B34A     		ldr	r2, .L1409+12
 10242              	.LBB1211:
 10243              	.LBB1210:
 143:src/keys.c    **** }
 10244              		.loc 1 143 23 view .LVU3182
 10245 0d66 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 10246              	.LBE1210:
 10247              	.LBE1211:
 234:src/keys.c    **** }
 10248              		.loc 1 234 10 view .LVU3183
 10249 0d68 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
 10250              	.LVL861:
 234:src/keys.c    **** }
 10251              		.loc 1 234 10 view .LVU3184
 10252              	.LBE1207:
 10253              	.LBE1206:
2974:src/keys.c    **** 	const int opcode = getprog(pc);
 10254              		.loc 1 2974 27 view .LVU3185
 10255 0d6c 2BF0800B 		bic	fp, fp, #128
 10256              	.L944:
 10257              	.LVL862:
2975:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 10258              		.loc 1 2975 2 is_stmt 1 view .LVU3186
2975:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 10259              		.loc 1 2975 21 is_stmt 0 view .LVU3187
 10260 0d70 5046     		mov	r0, r10
 10261 0d72 FFF7FEFF 		bl	getprog
 10262              	.LVL863:
2976:src/keys.c    **** 	const int direct = State2.runmode;
 10263              		.loc 1 2976 2 is_stmt 1 view .LVU3188
2976:src/keys.c    **** 	const int direct = State2.runmode;
 10264              		.loc 1 2976 20 is_stmt 0 view .LVU3189
 10265 0d76 00F47040 		and	r0, r0, #61440
 10266              	.LVL864:
ARM GAS  /tmp/cc8xFAqJ.s 			page 297


2976:src/keys.c    **** 	const int direct = State2.runmode;
 10267              		.loc 1 2976 63 view .LVU3190
 10268 0d7a B0F5704F 		cmp	r0, #61440
 10269 0d7e 00F01385 		beq	.L1379
 10270 0d82 0022     		movs	r2, #0
 10271              	.L945:
 10272              	.LVL865:
2977:src/keys.c    **** 	const enum shifts shift = reset_shift();
 10273              		.loc 1 2977 2 is_stmt 1 view .LVU3191
2977:src/keys.c    **** 	const enum shifts shift = reset_shift();
 10274              		.loc 1 2977 27 is_stmt 0 view .LVU3192
 10275 0d84 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10276 0d88 0192     		str	r2, [sp, #4]
 10277              	.LVL866:
2977:src/keys.c    **** 	const enum shifts shift = reset_shift();
 10278              		.loc 1 2977 27 view .LVU3193
 10279 0d8a C3F38013 		ubfx	r3, r3, #6, #1
 10280 0d8e 0093     		str	r3, [sp]
 10281              	.LVL867:
2978:src/keys.c    **** 	int op = STATE_UNFINISHED;
 10282              		.loc 1 2978 2 is_stmt 1 view .LVU3194
 10283              	.LBB1212:
 10284              	.LBI1212:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 10285              		.loc 1 114 13 view .LVU3195
 10286              	.LBE1212:
 10287              	.LBE1205:
 10288              	.LBE1204:
 10289              	.LBE1344:
 10290              	.LBE1413:
 115:src/keys.c    **** }
 10291              		.loc 1 115 2 view .LVU3196
 10292              	.LBB1414:
 10293              	.LBB1345:
 10294              	.LBB1237:
 10295              	.LBB1231:
 10296              	.LBB1219:
 10297              	.LBB1213:
 10298              	.LBI1213:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 10299              		.loc 1 104 20 view .LVU3197
 10300              	.LBB1214:
 105:src/keys.c    **** 	State2.shifts = shift;
 10301              		.loc 1 105 2 view .LVU3198
 10302              	.LBB1215:
 10303              	.LBI1215:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 10304              		.loc 1 96 13 view .LVU3199
 10305              	.LBB1216:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10306              		.loc 1 97 2 view .LVU3200
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10307              		.loc 1 97 18 is_stmt 0 view .LVU3201
 10308 0d90 FFF7FEFF 		bl	shift_down
 10309              	.LVL868:
  98:src/keys.c    **** }
 10310              		.loc 1 98 2 is_stmt 1 view .LVU3202
ARM GAS  /tmp/cc8xFAqJ.s 			page 298


  98:src/keys.c    **** }
 10311              		.loc 1 98 52 is_stmt 0 view .LVU3203
 10312 0d94 019A     		ldr	r2, [sp, #4]
 10313 0d96 0346     		mov	r3, r0
 10314 0d98 08B9     		cbnz	r0, .L946
 10315 0d9a 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 10316              	.L946:
 10317              	.LVL869:
  98:src/keys.c    **** }
 10318              		.loc 1 98 52 view .LVU3204
 10319              	.LBE1216:
 10320              	.LBE1215:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10321              		.loc 1 106 2 is_stmt 1 view .LVU3205
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10322              		.loc 1 106 16 is_stmt 0 view .LVU3206
 10323 0d9e 0021     		movs	r1, #0
 10324              	.LBE1214:
 10325              	.LBE1213:
 10326              	.LBE1219:
2981:src/keys.c    **** 		// Digits take you to that segment
 10327              		.loc 1 2981 5 view .LVU3207
 10328 0da0 BBF1020F 		cmp	fp, #2
 10329              	.LBB1220:
 10330              	.LBB1218:
 10331              	.LBB1217:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10332              		.loc 1 106 16 view .LVU3208
 10333 0da4 88F81010 		strb	r1, [r8, #16]
 108:src/keys.c    **** }
 10334              		.loc 1 108 2 is_stmt 1 view .LVU3209
 10335              	.LVL870:
 108:src/keys.c    **** }
 10336              		.loc 1 108 2 is_stmt 0 view .LVU3210
 10337              	.LBE1217:
 10338              	.LBE1218:
 10339              	.LBE1220:
2979:src/keys.c    **** 
 10340              		.loc 1 2979 2 is_stmt 1 view .LVU3211
2981:src/keys.c    **** 		// Digits take you to that segment
 10341              		.loc 1 2981 2 view .LVU3212
2981:src/keys.c    **** 		// Digits take you to that segment
 10342              		.loc 1 2981 5 is_stmt 0 view .LVU3213
 10343 0da8 40F2ED84 		bls	.L1380
2990:src/keys.c    **** 
 10344              		.loc 1 2990 2 is_stmt 1 view .LVU3214
2990:src/keys.c    **** 
 10345              		.loc 1 2990 12 is_stmt 0 view .LVU3215
 10346 0dac 44EA0323 		orr	r3, r4, r3, lsl #8
 10347              	.LVL871:
2990:src/keys.c    **** 
 10348              		.loc 1 2990 2 view .LVU3216
 10349 0db0 272B     		cmp	r3, #39
 10350 0db2 00F3CC80 		bgt	.L949
 10351 0db6 042B     		cmp	r3, #4
 10352 0db8 7FF773AC 		ble	.L1104
 10353 0dbc 053B     		subs	r3, r3, #5
ARM GAS  /tmp/cc8xFAqJ.s 			page 299


 10354 0dbe 222B     		cmp	r3, #34
 10355 0dc0 3FF66FAC 		bhi	.L1104
 10356 0dc4 01A1     		adr	r1, .L958
 10357 0dc6 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 10358 0dca 00BF     		.p2align 2
 10359              	.L958:
 10360 0dcc AB0E0000 		.word	.L963+1
 10361 0dd0 B70E0000 		.word	.L962+1
 10362 0dd4 B70E0000 		.word	.L962+1
 10363 0dd8 A3060000 		.word	.L1104+1
 10364 0ddc A3060000 		.word	.L1104+1
 10365 0de0 A3060000 		.word	.L1104+1
 10366 0de4 A3060000 		.word	.L1104+1
 10367 0de8 590E0000 		.word	.L1142+1
 10368 0dec A3060000 		.word	.L1104+1
 10369 0df0 A3060000 		.word	.L1104+1
 10370 0df4 A3060000 		.word	.L1104+1
 10371 0df8 D90E0000 		.word	.L961+1
 10372 0dfc A3060000 		.word	.L1104+1
 10373 0e00 C50E0000 		.word	.L960+1
 10374 0e04 A3060000 		.word	.L1104+1
 10375 0e08 A3060000 		.word	.L1104+1
 10376 0e0c A3060000 		.word	.L1104+1
 10377 0e10 A3060000 		.word	.L1104+1
 10378 0e14 A3060000 		.word	.L1104+1
 10379 0e18 950E0000 		.word	.L959+1
 10380 0e1c A3060000 		.word	.L1104+1
 10381 0e20 A3060000 		.word	.L1104+1
 10382 0e24 A3060000 		.word	.L1104+1
 10383 0e28 A3060000 		.word	.L1104+1
 10384 0e2c A3060000 		.word	.L1104+1
 10385 0e30 A3060000 		.word	.L1104+1
 10386 0e34 A3060000 		.word	.L1104+1
 10387 0e38 A3060000 		.word	.L1104+1
 10388 0e3c A3060000 		.word	.L1104+1
 10389 0e40 A3060000 		.word	.L1104+1
 10390 0e44 A3060000 		.word	.L1104+1
 10391 0e48 A3060000 		.word	.L1104+1
 10392 0e4c A3060000 		.word	.L1104+1
 10393 0e50 A3060000 		.word	.L1104+1
 10394 0e54 F30E0000 		.word	.L957+1
 10395              		.p2align 1
 10396              	.L1142:
2979:src/keys.c    **** 
 10397              		.loc 1 2979 6 view .LVU3217
 10398 0e58 3324     		movs	r4, #51
 10399              	.LVL872:
 10400              	.L955:
3012:src/keys.c    **** 		break;
 10401              		.loc 1 3012 3 is_stmt 1 view .LVU3218
 10402 0e5a 5046     		mov	r0, r10
 10403 0e5c FFF7FEFF 		bl	set_pc
 10404              	.LVL873:
3013:src/keys.c    **** 
 10405              		.loc 1 3013 3 view .LVU3219
 10406              	.L967:
3066:src/keys.c    **** 	State2.labellist = 0;
ARM GAS  /tmp/cc8xFAqJ.s 			page 300


 10407              		.loc 1 3066 2 view .LVU3220
3067:src/keys.c    **** 	return check_confirm(op);
 10408              		.loc 1 3067 19 is_stmt 0 view .LVU3221
 10409 0e60 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
3066:src/keys.c    **** 	State2.labellist = 0;
 10410              		.loc 1 3066 16 view .LVU3222
 10411 0e64 0022     		movs	r2, #0
 10412              	.LBB1221:
 10413              	.LBB1222:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10414              		.loc 1 705 5 view .LVU3223
 10415 0e66 C4F30723 		ubfx	r3, r4, #8, #8
 10416              	.LBE1222:
 10417              	.LBE1221:
3067:src/keys.c    **** 	return check_confirm(op);
 10418              		.loc 1 3067 19 view .LVU3224
 10419 0e6a 62F38201 		bfi	r1, r2, #2, #1
 10420              	.LBB1227:
 10421              	.LBB1223:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10422              		.loc 1 705 5 view .LVU3225
 10423 0e6e 012B     		cmp	r3, #1
 10424              	.LBE1223:
 10425              	.LBE1227:
3067:src/keys.c    **** 	return check_confirm(op);
 10426              		.loc 1 3067 19 view .LVU3226
 10427 0e70 88F81710 		strb	r1, [r8, #23]
3066:src/keys.c    **** 	State2.labellist = 0;
 10428              		.loc 1 3066 16 view .LVU3227
 10429 0e74 A8F80820 		strh	r2, [r8, #8]	@ movhi
3067:src/keys.c    **** 	return check_confirm(op);
 10430              		.loc 1 3067 2 is_stmt 1 view .LVU3228
3068:src/keys.c    **** }
 10431              		.loc 1 3068 2 view .LVU3229
 10432              	.LVL874:
 10433              	.LBB1228:
 10434              	.LBI1221:
 704:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10435              		.loc 1 704 12 view .LVU3230
 10436              	.LBB1224:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10437              		.loc 1 705 2 view .LVU3231
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10438              		.loc 1 705 5 is_stmt 0 view .LVU3232
 10439 0e78 7FF4B2AA 		bne	.L835
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10440              		.loc 1 705 5 view .LVU3233
 10441 0e7c 2046     		mov	r0, r4
 10442 0e7e FFF7FEFF 		bl	check_confirm.part.0
 10443              	.LVL875:
 10444 0e82 0446     		mov	r4, r0
 10445              	.LVL876:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10446              		.loc 1 705 5 view .LVU3234
 10447 0e84 FFF7ACBA 		b	.L835
 10448              	.LVL877:
 10449              	.L952:
ARM GAS  /tmp/cc8xFAqJ.s 			page 301


 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10450              		.loc 1 705 5 view .LVU3235
 10451              	.LBE1224:
 10452              	.LBE1228:
2997:src/keys.c    **** 	case K_DOWN:				// Find next label
 10453              		.loc 1 2997 3 is_stmt 1 view .LVU3236
2997:src/keys.c    **** 	case K_DOWN:				// Find next label
 10454              		.loc 1 2997 8 is_stmt 0 view .LVU3237
 10455 0e88 5046     		mov	r0, r10
 10456 0e8a 0122     		movs	r2, #1
 10457 0e8c 0021     		movs	r1, #0
 10458 0e8e FFF7FEFF 		bl	advance_to_next_label
 10459              	.LVL878:
 10460 0e92 8246     		mov	r10, r0
 10461              	.LVL879:
 10462              	.L959:
3000:src/keys.c    **** 		return STATE_UNFINISHED;
 10463              		.loc 1 3000 3 is_stmt 1 view .LVU3238
3000:src/keys.c    **** 		return STATE_UNFINISHED;
 10464              		.loc 1 3000 19 is_stmt 0 view .LVU3239
 10465 0e94 5046     		mov	r0, r10
 10466 0e96 0022     		movs	r2, #0
 10467 0e98 0121     		movs	r1, #1
 10468 0e9a FFF7FEFF 		bl	advance_to_next_label
 10469              	.LVL880:
3001:src/keys.c    **** 
 10470              		.loc 1 3001 10 view .LVU3240
 10471 0e9e 3324     		movs	r4, #51
 10472 0ea0 3368     		ldr	r3, [r6]
3000:src/keys.c    **** 		return STATE_UNFINISHED;
 10473              		.loc 1 3000 17 view .LVU3241
 10474 0ea2 A8F80800 		strh	r0, [r8, #8]	@ movhi
3001:src/keys.c    **** 
 10475              		.loc 1 3001 3 is_stmt 1 view .LVU3242
3001:src/keys.c    **** 
 10476              		.loc 1 3001 10 is_stmt 0 view .LVU3243
 10477 0ea6 FFF706B9 		b	.L801
 10478              	.LVL881:
 10479              	.L963:
 10480              	.L968:
3030:src/keys.c    **** 		goto xeq_or_gto;
 10481              		.loc 1 3030 3 is_stmt 1 view .LVU3244
3030:src/keys.c    **** 		goto xeq_or_gto;
 10482              		.loc 1 3030 6 is_stmt 0 view .LVU3245
 10483 0eaa 02F50074 		add	r4, r2, #512
 10484              	.LVL882:
3031:src/keys.c    **** 
 10485              		.loc 1 3031 3 is_stmt 1 view .LVU3246
3036:src/keys.c    **** 			break;
 10486              		.loc 1 3036 3 view .LVU3247
3036:src/keys.c    **** 			break;
 10487              		.loc 1 3036 6 is_stmt 0 view .LVU3248
 10488 0eae 002A     		cmp	r2, #0
 10489 0eb0 D6D1     		bne	.L967
 10490 0eb2 FFF7F6BB 		b	.L1104
 10491              	.LVL883:
 10492              	.L962:
ARM GAS  /tmp/cc8xFAqJ.s 			page 302


3022:src/keys.c    **** 	  //#endif
 10493              		.loc 1 3022 3 is_stmt 1 view .LVU3249
3022:src/keys.c    **** 	  //#endif
 10494              		.loc 1 3022 38 is_stmt 0 view .LVU3250
 10495 0eb6 062C     		cmp	r4, #6
 10496 0eb8 40F2B114 		movw	r4, #433
 10497              	.LVL884:
3022:src/keys.c    **** 	  //#endif
 10498              		.loc 1 3022 38 view .LVU3251
 10499 0ebc 08BF     		it	eq
 10500 0ebe 4FF4D974 		moveq	r4, #434
 10501 0ec2 CAE7     		b	.L955
 10502              	.LVL885:
 10503              	.L960:
3004:src/keys.c    **** 		return STATE_UNFINISHED;
 10504              		.loc 1 3004 3 is_stmt 1 view .LVU3252
3004:src/keys.c    **** 		return STATE_UNFINISHED;
 10505              		.loc 1 3004 19 is_stmt 0 view .LVU3253
 10506 0ec4 5046     		mov	r0, r10
 10507 0ec6 0021     		movs	r1, #0
 10508 0ec8 FFF7FEFF 		bl	advance_to_previous_label
 10509              	.LVL886:
3005:src/keys.c    **** 
 10510              		.loc 1 3005 10 view .LVU3254
 10511 0ecc 3324     		movs	r4, #51
 10512              	.LVL887:
3005:src/keys.c    **** 
 10513              		.loc 1 3005 10 view .LVU3255
 10514 0ece 3368     		ldr	r3, [r6]
3004:src/keys.c    **** 		return STATE_UNFINISHED;
 10515              		.loc 1 3004 17 view .LVU3256
 10516 0ed0 A8F80800 		strh	r0, [r8, #8]	@ movhi
3005:src/keys.c    **** 
 10517              		.loc 1 3005 3 is_stmt 1 view .LVU3257
3005:src/keys.c    **** 
 10518              		.loc 1 3005 10 is_stmt 0 view .LVU3258
 10519 0ed4 FFF7EFB8 		b	.L801
 10520              	.LVL888:
 10521              	.L961:
3066:src/keys.c    **** 	State2.labellist = 0;
 10522              		.loc 1 3066 2 is_stmt 1 view .LVU3259
3067:src/keys.c    **** 	return check_confirm(op);
 10523              		.loc 1 3067 19 is_stmt 0 view .LVU3260
 10524 0ed8 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
 10525 0edc 3368     		ldr	r3, [r6]
3066:src/keys.c    **** 	State2.labellist = 0;
 10526              		.loc 1 3066 16 view .LVU3261
 10527 0ede 0022     		movs	r2, #0
3067:src/keys.c    **** 	return check_confirm(op);
 10528              		.loc 1 3067 19 view .LVU3262
 10529 0ee0 62F38201 		bfi	r1, r2, #2, #1
 10530 0ee4 88F81710 		strb	r1, [r8, #23]
3066:src/keys.c    **** 	State2.labellist = 0;
 10531              		.loc 1 3066 16 view .LVU3263
 10532 0ee8 A8F80820 		strh	r2, [r8, #8]	@ movhi
3067:src/keys.c    **** 	return check_confirm(op);
 10533              		.loc 1 3067 2 is_stmt 1 view .LVU3264
ARM GAS  /tmp/cc8xFAqJ.s 			page 303


3068:src/keys.c    **** }
 10534              		.loc 1 3068 2 view .LVU3265
 10535              	.LVL889:
 10536              	.LBB1229:
 704:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10537              		.loc 1 704 12 view .LVU3266
 10538              	.LBB1225:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10539              		.loc 1 705 2 view .LVU3267
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10540              		.loc 1 705 2 is_stmt 0 view .LVU3268
 10541              	.LBE1225:
 10542              	.LBE1229:
 10543              	.LBE1231:
 10544              	.LBE1237:
 10545              	.LBE1345:
 10546              	.LBE1414:
3572:src/keys.c    ****     case STATE_SST:
 10547              		.loc 1 3572 5 is_stmt 1 view .LVU3269
 10548              	.LBB1415:
 10549              	.LBB1346:
 10550              	.LBB1238:
 10551              	.LBB1232:
2979:src/keys.c    **** 
 10552              		.loc 1 2979 6 is_stmt 0 view .LVU3270
 10553 0eec 3324     		movs	r4, #51
 10554 0eee FFF7E2B8 		b	.L801
 10555              	.LVL890:
 10556              	.L957:
3052:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 10557              		.loc 1 3052 3 is_stmt 1 view .LVU3271
3052:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 10558              		.loc 1 3052 6 is_stmt 0 view .LVU3272
 10559 0ef2 009B     		ldr	r3, [sp]
 10560 0ef4 002B     		cmp	r3, #0
 10561 0ef6 3FF4D4AB 		beq	.L1104
3052:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 10562              		.loc 1 3052 14 view .LVU3273
 10563 0efa 002A     		cmp	r2, #0
 10564 0efc 3FF4D1AB 		beq	.L1104
3053:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
 10565              		.loc 1 3053 4 is_stmt 1 view .LVU3274
 10566 0f00 5146     		mov	r1, r10
 10567 0f02 0120     		movs	r0, #1
 10568 0f04 FFF7FEFF 		bl	cmdgtocommon
 10569              	.LVL891:
3054:src/keys.c    **** 			break;
 10570              		.loc 1 3054 4 view .LVU3275
3055:src/keys.c    **** 		}
 10571              		.loc 1 3055 4 view .LVU3276
3066:src/keys.c    **** 	State2.labellist = 0;
 10572              		.loc 1 3066 2 view .LVU3277
3067:src/keys.c    **** 	return check_confirm(op);
 10573              		.loc 1 3067 19 is_stmt 0 view .LVU3278
 10574 0f08 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
3066:src/keys.c    **** 	State2.labellist = 0;
 10575              		.loc 1 3066 16 view .LVU3279
ARM GAS  /tmp/cc8xFAqJ.s 			page 304


 10576 0f0c 0023     		movs	r3, #0
3067:src/keys.c    **** 	return check_confirm(op);
 10577              		.loc 1 3067 19 view .LVU3280
 10578 0f0e 63F38202 		bfi	r2, r3, #2, #1
 10579 0f12 88F81720 		strb	r2, [r8, #23]
3066:src/keys.c    **** 	State2.labellist = 0;
 10580              		.loc 1 3066 16 view .LVU3281
 10581 0f16 A8F80830 		strh	r3, [r8, #8]	@ movhi
3067:src/keys.c    **** 	return check_confirm(op);
 10582              		.loc 1 3067 2 is_stmt 1 view .LVU3282
3068:src/keys.c    **** }
 10583              		.loc 1 3068 2 view .LVU3283
 10584              	.LVL892:
 10585              	.LBB1230:
 704:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10586              		.loc 1 704 12 view .LVU3284
 10587              	.LBB1226:
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10588              		.loc 1 705 2 view .LVU3285
 705:src/keys.c    **** 		const int nilop = argKIND(op);
 10589              		.loc 1 705 2 is_stmt 0 view .LVU3286
 10590              	.LBE1226:
 10591              	.LBE1230:
 10592              	.LBE1232:
 10593              	.LBE1238:
 10594              	.LBE1346:
 10595              	.LBE1415:
3572:src/keys.c    ****     case STATE_SST:
 10596              		.loc 1 3572 5 is_stmt 1 view .LVU3287
 10597 0f1a FFF711BA 		b	.L811
 10598              	.LVL893:
 10599              	.L1125:
 10600              	.LBB1416:
 10601              	.LBB1347:
 10602              	.LBB1239:
 10603              	.LBB1104:
 10604              	.LBB1098:
2909:src/keys.c    **** 		if (nn <= 9)
 10605              		.loc 1 2909 7 is_stmt 0 view .LVU3288
 10606 0f1e 1346     		mov	r3, r2
 10607              	.LVL894:
2909:src/keys.c    **** 		if (nn <= 9)
 10608              		.loc 1 2909 7 view .LVU3289
 10609 0f20 32E5     		b	.L884
 10610              	.LVL895:
 10611              	.L878:
2909:src/keys.c    **** 		if (nn <= 9)
 10612              		.loc 1 2909 7 view .LVU3290
 10613              	.LBE1098:
 10614              	.LBE1104:
 10615              	.LBE1239:
 10616              	.LBB1240:
 10617              	.LBB1046:
2362:src/keys.c    **** 		return STATE_UNFINISHED;
 10618              		.loc 1 2362 3 is_stmt 1 view .LVU3291
 10619              	.LBB1039:
 10620              	.LBI1039:
ARM GAS  /tmp/cc8xFAqJ.s 			page 305


 552:src/keys.c    **** 	if (is_bad_cmdline())
 10621              		.loc 1 552 13 view .LVU3292
 10622              	.LBB1040:
 553:src/keys.c    **** 		return;
 10623              		.loc 1 553 2 view .LVU3293
 553:src/keys.c    **** 		return;
 10624              		.loc 1 553 6 is_stmt 0 view .LVU3294
 10625 0f22 FFF7FEFF 		bl	is_bad_cmdline
 10626              	.LVL896:
 553:src/keys.c    **** 		return;
 10627              		.loc 1 553 5 view .LVU3295
 10628 0f26 0446     		mov	r4, r0
 10629              	.LVL897:
 553:src/keys.c    **** 		return;
 10630              		.loc 1 553 5 view .LVU3296
 10631 0f28 0028     		cmp	r0, #0
 10632 0f2a 7FF4BAAB 		bne	.L1104
 10633 0f2e 5FFA8AF0 		uxtb	r0, r10
 10634 0f32 FFF7FEFF 		bl	init_arg.part.0
 10635              	.LVL898:
 10636              	.LBE1040:
 10637              	.LBE1039:
 10638              	.LBE1046:
 10639              	.LBE1240:
 10640              	.LBE1347:
 10641              	.LBE1416:
3387:src/keys.c    ****   if (was_paused && Pause == 0)
 10642              		.loc 1 3387 7 view .LVU3297
 10643 0f36 2546     		mov	r5, r4
 10644 0f38 3368     		ldr	r3, [r6]
 10645              	.LBB1417:
 10646              	.LBB1348:
 10647              	.LBB1241:
 10648              	.LBB1047:
2363:src/keys.c    **** 
 10649              		.loc 1 2363 10 view .LVU3298
 10650 0f3a 3324     		movs	r4, #51
 10651 0f3c FFF7BBB8 		b	.L801
 10652              	.LVL899:
 10653              	.L1356:
2363:src/keys.c    **** 
 10654              		.loc 1 2363 10 view .LVU3299
 10655              	.LBE1047:
 10656              	.LBE1241:
 10657              	.LBB1242:
 10658              	.LBB1065:
1699:src/keys.c    **** #endif
 10659              		.loc 1 1699 44 is_stmt 1 view .LVU3300
1699:src/keys.c    **** #endif
 10660              		.loc 1 1699 52 is_stmt 0 view .LVU3301
 10661 0f40 0420     		movs	r0, #4
 10662 0f42 FFF7FEFF 		bl	gtodot_digit
 10663              	.LVL900:
1742:src/keys.c    **** 		rawpc = find_user_pc(pc);
 10664              		.loc 1 1742 2 is_stmt 1 view .LVU3302
 10665              	.LBE1065:
 10666              	.LBE1242:
ARM GAS  /tmp/cc8xFAqJ.s 			page 306


3263:src/keys.c    **** 
 10667              		.loc 1 3263 10 is_stmt 0 view .LVU3303
 10668 0f46 3324     		movs	r4, #51
 10669              	.LVL901:
3263:src/keys.c    **** 
 10670              		.loc 1 3263 10 view .LVU3304
 10671 0f48 3368     		ldr	r3, [r6]
 10672 0f4a FFF7B4B8 		b	.L801
 10673              	.LVL902:
 10674              	.L949:
 10675              	.LBB1243:
 10676              	.LBB1233:
2990:src/keys.c    **** 
 10677              		.loc 1 2990 2 view .LVU3305
 10678 0f4e B3F58C7F 		cmp	r3, #280
 10679 0f52 48DC     		bgt	.L964
 10680 0f54 B3F5827F 		cmp	r3, #260
 10681 0f58 7FF7A3AB 		ble	.L1104
 10682 0f5c 6FF48274 		mvn	r4, #260
 10683              	.LVL903:
2990:src/keys.c    **** 
 10684              		.loc 1 2990 2 view .LVU3306
 10685 0f60 2344     		add	r3, r3, r4
 10686 0f62 132B     		cmp	r3, #19
 10687 0f64 3FF69DAB 		bhi	.L1104
 10688 0f68 01A1     		adr	r1, .L953
 10689 0f6a 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 10690 0f6e 00BF     		.p2align 2
 10691              	.L953:
 10692 0f70 C70F0000 		.word	.L956+1
 10693 0f74 A3060000 		.word	.L1104+1
 10694 0f78 A3060000 		.word	.L1104+1
 10695 0f7c A3060000 		.word	.L1104+1
 10696 0f80 A3060000 		.word	.L1104+1
 10697 0f84 A3060000 		.word	.L1104+1
 10698 0f88 A3060000 		.word	.L1104+1
 10699 0f8c A3060000 		.word	.L1104+1
 10700 0f90 A3060000 		.word	.L1104+1
 10701 0f94 A3060000 		.word	.L1104+1
 10702 0f98 A3060000 		.word	.L1104+1
 10703 0f9c C10F0000 		.word	.L1141+1
 10704 0fa0 A3060000 		.word	.L1104+1
 10705 0fa4 D50F0000 		.word	.L954+1
 10706 0fa8 A3060000 		.word	.L1104+1
 10707 0fac A3060000 		.word	.L1104+1
 10708 0fb0 A3060000 		.word	.L1104+1
 10709 0fb4 A3060000 		.word	.L1104+1
 10710 0fb8 A3060000 		.word	.L1104+1
 10711 0fbc 890E0000 		.word	.L952+1
 10712              		.p2align 1
 10713              	.L1141:
 10714 0fc0 40F24314 		movw	r4, #323
 10715 0fc4 49E7     		b	.L955
 10716              	.L956:
3034:src/keys.c    **** 	xeq_or_gto:
 10717              		.loc 1 3034 3 is_stmt 1 view .LVU3307
3034:src/keys.c    **** 	xeq_or_gto:
ARM GAS  /tmp/cc8xFAqJ.s 			page 307


 10718              		.loc 1 3034 6 is_stmt 0 view .LVU3308
 10719 0fc6 02F54074 		add	r4, r2, #768
 10720              	.LVL904:
3036:src/keys.c    **** 			break;
 10721              		.loc 1 3036 3 is_stmt 1 view .LVU3309
3036:src/keys.c    **** 			break;
 10722              		.loc 1 3036 6 is_stmt 0 view .LVU3310
 10723 0fca 002A     		cmp	r2, #0
 10724 0fcc 7FF448AF 		bne	.L967
 10725 0fd0 FFF767BB 		b	.L1104
 10726              	.LVL905:
 10727              	.L954:
2993:src/keys.c    **** 		goto next;
 10728              		.loc 1 2993 3 is_stmt 1 view .LVU3311
2993:src/keys.c    **** 		goto next;
 10729              		.loc 1 2993 8 is_stmt 0 view .LVU3312
 10730 0fd4 5046     		mov	r0, r10
 10731 0fd6 0121     		movs	r1, #1
 10732 0fd8 FFF7FEFF 		bl	advance_to_previous_label
 10733              	.LVL906:
 10734 0fdc 0121     		movs	r1, #1
 10735 0fde FFF7FEFF 		bl	advance_to_previous_label
 10736              	.LVL907:
 10737 0fe2 8246     		mov	r10, r0
 10738              	.LVL908:
2994:src/keys.c    **** 
 10739              		.loc 1 2994 3 is_stmt 1 view .LVU3313
 10740 0fe4 56E7     		b	.L959
 10741              	.LVL909:
 10742              	.L964:
2990:src/keys.c    **** 
 10743              		.loc 1 2990 2 is_stmt 0 view .LVU3314
 10744 0fe6 40F22732 		movw	r2, #807
 10745 0fea 9342     		cmp	r3, r2
 10746 0fec 7FF459AB 		bne	.L1104
3060:src/keys.c    **** 		goto set_pc_and_exit;
 10747              		.loc 1 3060 3 is_stmt 1 view .LVU3315
3060:src/keys.c    **** 		goto set_pc_and_exit;
 10748              		.loc 1 3060 18 is_stmt 0 view .LVU3316
 10749 0ff0 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10750 0ff4 61F38613 		bfi	r3, r1, #6, #1
 10751 0ff8 88F81630 		strb	r3, [r8, #22]
3061:src/keys.c    **** 
 10752              		.loc 1 3061 3 is_stmt 1 view .LVU3317
2979:src/keys.c    **** 
 10753              		.loc 1 2979 6 is_stmt 0 view .LVU3318
 10754 0ffc 3324     		movs	r4, #51
 10755              	.LVL910:
3061:src/keys.c    **** 
 10756              		.loc 1 3061 3 view .LVU3319
 10757 0ffe 2CE7     		b	.L955
 10758              	.LVL911:
 10759              	.L1367:
3061:src/keys.c    **** 
 10760              		.loc 1 3061 3 view .LVU3320
 10761              	.LBE1233:
 10762              	.LBE1243:
ARM GAS  /tmp/cc8xFAqJ.s 			page 308


 10763              	.LBB1244:
 10764              	.LBB1136:
1644:src/keys.c    **** 		if (!C_LOCK_ON) {
 10765              		.loc 1 1644 19 view .LVU3321
 10766 1000 0D4B     		ldr	r3, .L1409+16
 10767 1002 1B68     		ldr	r3, [r3]
 10768 1004 93F8AC37 		ldrb	r3, [r3, #1964]	@ zero_extendqisi2
 10769 1008 5C06     		lsls	r4, r3, #25
 10770              	.LVL912:
1644:src/keys.c    **** 		if (!C_LOCK_ON) {
 10771              		.loc 1 1644 19 view .LVU3322
 10772 100a 7FF54AAB 		bpl	.L1104
1645:src/keys.c    **** 			return OP_NIL | OP_C_ON;
 10773              		.loc 1 1645 3 is_stmt 1 view .LVU3323
1645:src/keys.c    **** 			return OP_NIL | OP_C_ON;
 10774              		.loc 1 1645 6 is_stmt 0 view .LVU3324
 10775 100e 03F00103 		and	r3, r3, #1
 10776 1012 03F2C114 		addw	r4, r3, #449
 10777 1016 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
 10778 101a 2046     		mov	r0, r4
 10779 101c FFF702BA 		b	.L862
 10780              	.LVL913:
 10781              	.L856:
1645:src/keys.c    **** 			return OP_NIL | OP_C_ON;
 10782              		.loc 1 1645 6 view .LVU3325
 10783              	.LBE1136:
 10784              	.LBE1244:
 10785              	.LBB1245:
 10786              	.LBB1084:
1601:src/keys.c    **** #endif
 10787              		.loc 1 1601 4 is_stmt 1 view .LVU3326
1601:src/keys.c    **** #endif
 10788              		.loc 1 1601 18 view .LVU3327
1601:src/keys.c    **** #endif
 10789              		.loc 1 1601 18 is_stmt 0 view .LVU3328
 10790 1020 8BF0010B 		eor	fp, fp, #1
 10791              	.LVL914:
1601:src/keys.c    **** #endif
 10792              		.loc 1 1601 18 view .LVU3329
 10793 1024 4FE4     		b	.L863
 10794              	.L1410:
 10795 1026 00BF     		.align	2
 10796              	.L1409:
 10797 1028 00080800 		.word	526336
 10798 102c 00000000 		.word	.LANCHOR20
 10799 1030 00000000 		.word	.LANCHOR6
 10800 1034 00000000 		.word	.LANCHOR5
 10801 1038 00000000 		.word	main_ram
 10802              	.LVL915:
 10803              	.L1341:
1601:src/keys.c    **** #endif
 10804              		.loc 1 1601 18 view .LVU3330
 10805              	.LBE1084:
 10806              	.LBE1245:
3321:src/keys.c    **** 
 10807              		.loc 1 3321 3 is_stmt 1 view .LVU3331
 10808              	.LBB1246:
ARM GAS  /tmp/cc8xFAqJ.s 			page 309


 10809              	.LBI983:
3102:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 10810              		.loc 1 3102 12 view .LVU3332
 10811              	.LBB1011:
3103:src/keys.c    **** 	enum shifts shift = reset_shift();
 10812              		.loc 1 3103 2 view .LVU3333
 10813              	.LBB985:
 10814              	.LBI985:
 210:src/keys.c    **** {
 10815              		.loc 1 210 14 view .LVU3334
 10816              	.LBB986:
 212:src/keys.c    ****     // K00 - K05
 10817              		.loc 1 212 3 view .LVU3335
 234:src/keys.c    **** }
 10818              		.loc 1 234 3 view .LVU3336
 10819              	.LBB987:
 10820              	.LBI987:
 131:src/keys.c    **** {
 10821              		.loc 1 131 12 view .LVU3337
 10822              	.LBB988:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10823              		.loc 1 133 2 view .LVU3338
 143:src/keys.c    **** }
 10824              		.loc 1 143 2 view .LVU3339
 143:src/keys.c    **** }
 10825              		.loc 1 143 23 is_stmt 0 view .LVU3340
 10826 103c D34B     		ldr	r3, .L1411
 10827              	.LBE988:
 10828              	.LBE987:
 234:src/keys.c    **** }
 10829              		.loc 1 234 28 view .LVU3341
 10830 103e D44A     		ldr	r2, .L1411+4
 10831              	.LBB990:
 10832              	.LBB989:
 143:src/keys.c    **** }
 10833              		.loc 1 143 23 view .LVU3342
 10834 1040 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 10835              	.LBE989:
 10836              	.LBE990:
 234:src/keys.c    **** }
 10837              		.loc 1 234 10 view .LVU3343
 10838 1042 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
 10839              	.LVL916:
 234:src/keys.c    **** }
 10840              		.loc 1 234 10 view .LVU3344
 10841              	.LBE986:
 10842              	.LBE985:
 10843              	.LBB991:
 10844              	.LBB992:
 10845              	.LBB993:
 10846              	.LBB994:
 10847              	.LBB995:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10848              		.loc 1 97 18 view .LVU3345
 10849 1046 FFF7FEFF 		bl	shift_down
 10850              	.LVL917:
 10851              	.LBE995:
ARM GAS  /tmp/cc8xFAqJ.s 			page 310


 10852              	.LBE994:
 10853              	.LBE993:
 10854              	.LBE992:
 10855              	.LBE991:
3103:src/keys.c    **** 	enum shifts shift = reset_shift();
 10856              		.loc 1 3103 15 view .LVU3346
 10857 104a 2BF0800B 		bic	fp, fp, #128
 10858              	.LVL918:
3104:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
 10859              		.loc 1 3104 2 is_stmt 1 view .LVU3347
 10860              	.LBB1004:
 10861              	.LBI991:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 10862              		.loc 1 114 13 view .LVU3348
 10863              	.LBE1004:
 10864              	.LBE1011:
 10865              	.LBE1246:
 10866              	.LBE1348:
 10867              	.LBE1417:
 115:src/keys.c    **** }
 10868              		.loc 1 115 2 view .LVU3349
 10869              	.LBB1418:
 10870              	.LBB1349:
 10871              	.LBB1247:
 10872              	.LBB1012:
 10873              	.LBB1005:
 10874              	.LBB1001:
 10875              	.LBI992:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 10876              		.loc 1 104 20 view .LVU3350
 10877              	.LBB998:
 105:src/keys.c    **** 	State2.shifts = shift;
 10878              		.loc 1 105 2 view .LVU3351
 10879              	.LBB997:
 10880              	.LBI994:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 10881              		.loc 1 96 13 view .LVU3352
 10882              	.LBB996:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10883              		.loc 1 97 2 view .LVU3353
  98:src/keys.c    **** }
 10884              		.loc 1 98 2 view .LVU3354
  98:src/keys.c    **** }
 10885              		.loc 1 98 52 is_stmt 0 view .LVU3355
 10886 104e 8146     		mov	r9, r0
 10887 1050 08B9     		cbnz	r0, .L971
 10888 1052 98F81090 		ldrb	r9, [r8, #16]	@ zero_extendqisi2
 10889              	.L971:
 10890              	.LVL919:
  98:src/keys.c    **** }
 10891              		.loc 1 98 52 view .LVU3356
 10892              	.LBE996:
 10893              	.LBE997:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10894              		.loc 1 106 2 is_stmt 1 view .LVU3357
 10895              	.LBE998:
 10896              	.LBE1001:
ARM GAS  /tmp/cc8xFAqJ.s 			page 311


 10897              	.LBE1005:
3105:src/keys.c    **** 	const int g_max = global_regs();
 10898              		.loc 1 3105 31 is_stmt 0 view .LVU3358
 10899 1056 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10900              	.LBB1006:
 10901              	.LBB1002:
 10902              	.LBB999:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10903              		.loc 1 106 16 view .LVU3359
 10904 105a 0022     		movs	r2, #0
 10905              	.LBE999:
 10906              	.LBE1002:
 10907              	.LBE1006:
3105:src/keys.c    **** 	const int g_max = global_regs();
 10908              		.loc 1 3105 46 view .LVU3360
 10909 105c D907     		lsls	r1, r3, #31
 10910              	.LBB1007:
 10911              	.LBB1003:
 10912              	.LBB1000:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10913              		.loc 1 106 16 view .LVU3361
 10914 105e 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 10915              		.loc 1 108 2 is_stmt 1 view .LVU3362
 10916              	.LVL920:
 108:src/keys.c    **** }
 10917              		.loc 1 108 2 is_stmt 0 view .LVU3363
 10918              	.LBE1000:
 10919              	.LBE1003:
 10920              	.LBE1007:
3105:src/keys.c    **** 	const int g_max = global_regs();
 10921              		.loc 1 3105 2 is_stmt 1 view .LVU3364
3105:src/keys.c    **** 	const int g_max = global_regs();
 10922              		.loc 1 3105 46 is_stmt 0 view .LVU3365
 10923 1062 00F11483 		bmi	.L1381
 10924 1066 4FF0700A 		mov	r10, #112
 10925              	.L972:
 10926              	.LVL921:
3106:src/keys.c    **** 
 10927              		.loc 1 3106 2 is_stmt 1 view .LVU3366
3106:src/keys.c    **** 
 10928              		.loc 1 3106 20 is_stmt 0 view .LVU3367
 10929 106a FFF7FEFF 		bl	global_regs
 10930              	.LVL922:
3108:src/keys.c    **** 		if (local_regs())
 10931              		.loc 1 3108 2 is_stmt 1 view .LVU3368
3108:src/keys.c    **** 		if (local_regs())
 10932              		.loc 1 3108 5 is_stmt 0 view .LVU3369
 10933 106e BBF1700F 		cmp	fp, #112
 10934 1072 00F0E383 		beq	.L1382
3114:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 10935              		.loc 1 3114 7 is_stmt 1 view .LVU3370
3114:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 10936              		.loc 1 3114 10 is_stmt 0 view .LVU3371
 10937 1076 BBF1090F 		cmp	fp, #9
 10938 107a 40F29F83 		bls	.L1383
3121:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
ARM GAS  /tmp/cc8xFAqJ.s 			page 312


 10939              		.loc 1 3121 7 is_stmt 1 view .LVU3372
3121:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 10940              		.loc 1 3121 29 is_stmt 0 view .LVU3373
 10941 107e 09F1FF33 		add	r3, r9, #-1
3121:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 10942              		.loc 1 3121 10 view .LVU3374
 10943 1082 DBB2     		uxtb	r3, r3
 10944 1084 012B     		cmp	r3, #1
 10945 1086 40F2ED82 		bls	.L1384
 10946              	.L980:
3125:src/keys.c    **** 		State2.digval = n;
 10947              		.loc 1 3125 7 is_stmt 1 view .LVU3375
3125:src/keys.c    **** 		State2.digval = n;
 10948              		.loc 1 3125 10 is_stmt 0 view .LVU3376
 10949 108a BBF17F0F 		cmp	fp, #127
 10950 108e 40F00283 		bne	.L1385
3130:src/keys.c    **** 	case K_DOWN:
 10951              		.loc 1 3130 2 is_stmt 1 view .LVU3377
 10952 1092 073C     		subs	r4, r4, #7
 10953              	.LVL923:
3130:src/keys.c    **** 	case K_DOWN:
 10954              		.loc 1 3130 2 is_stmt 0 view .LVU3378
 10955 1094 112C     		cmp	r4, #17
 10956 1096 3FF604AB 		bhi	.L1104
 10957 109a 01A3     		adr	r3, .L1105
 10958 109c 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 10959              		.p2align 2
 10960              	.L1105:
 10961 10a0 E9100000 		.word	.L993+1
 10962 10a4 A3060000 		.word	.L1104+1
 10963 10a8 A3060000 		.word	.L1104+1
 10964 10ac A3060000 		.word	.L1104+1
 10965 10b0 A3060000 		.word	.L1104+1
 10966 10b4 6B110000 		.word	.L992+1
 10967 10b8 A3060000 		.word	.L1104+1
 10968 10bc A3060000 		.word	.L1104+1
 10969 10c0 A3060000 		.word	.L1104+1
 10970 10c4 4D110000 		.word	.L990+1
 10971 10c8 A3060000 		.word	.L1104+1
 10972 10cc 7F110000 		.word	.L986+1
 10973 10d0 A3060000 		.word	.L1104+1
 10974 10d4 A3060000 		.word	.L1104+1
 10975 10d8 A3060000 		.word	.L1104+1
 10976 10dc A3060000 		.word	.L1104+1
 10977 10e0 A3060000 		.word	.L1104+1
 10978 10e4 17110000 		.word	.L983+1
 10979              		.p2align 1
 10980              	.L993:
3169:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 10981              		.loc 1 3169 3 is_stmt 1 view .LVU3379
3169:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 10982              		.loc 1 3169 6 is_stmt 0 view .LVU3380
 10983 10e8 B9F1000F 		cmp	r9, #0
 10984 10ec 7FF4D9AA 		bne	.L1104
3173:src/keys.c    **** #endif
 10985              		.loc 1 3173 4 is_stmt 1 view .LVU3381
3173:src/keys.c    **** #endif
ARM GAS  /tmp/cc8xFAqJ.s 			page 313


 10986              		.loc 1 3173 8 is_stmt 0 view .LVU3382
 10987 10f0 B8F80840 		ldrh	r4, [r8, #8]
 10988              	.LVL924:
3175:src/keys.c    **** 			State2.digval = 0;
 10989              		.loc 1 3175 4 is_stmt 1 view .LVU3383
3175:src/keys.c    **** 			State2.digval = 0;
 10990              		.loc 1 3175 24 is_stmt 0 view .LVU3384
 10991 10f4 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
 10992 10f8 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
3177:src/keys.c    **** 			return n;
 10993              		.loc 1 3177 19 view .LVU3385
 10994 10fc 88F80A90 		strb	r9, [r8, #10]
3178:src/keys.c    **** 		}
 10995              		.loc 1 3178 11 view .LVU3386
 10996 1100 44F42854 		orr	r4, r4, #10752
 10997              	.LVL925:
3175:src/keys.c    **** 			State2.digval = 0;
 10998              		.loc 1 3175 24 view .LVU3387
 10999 1104 69F3C303 		bfi	r3, r9, #3, #1
3176:src/keys.c    **** 			State2.digval2 = 0;
 11000              		.loc 1 3176 18 view .LVU3388
 11001 1108 A8F80890 		strh	r9, [r8, #8]	@ movhi
 11002 110c 2046     		mov	r0, r4
 11003              	.LVL926:
3175:src/keys.c    **** 			State2.digval = 0;
 11004              		.loc 1 3175 24 view .LVU3389
 11005 110e 88F81730 		strb	r3, [r8, #23]
3176:src/keys.c    **** 			State2.digval2 = 0;
 11006              		.loc 1 3176 4 is_stmt 1 view .LVU3390
3177:src/keys.c    **** 			return n;
 11007              		.loc 1 3177 4 view .LVU3391
3178:src/keys.c    **** 		}
 11008              		.loc 1 3178 4 view .LVU3392
3178:src/keys.c    **** 		}
 11009              		.loc 1 3178 11 is_stmt 0 view .LVU3393
 11010 1112 FFF787B9 		b	.L862
 11011              	.LVL927:
 11012              	.L983:
3132:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 11013              		.loc 1 3132 3 is_stmt 1 view .LVU3394
3132:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 11014              		.loc 1 3132 13 is_stmt 0 view .LVU3395
 11015 1116 B8F80830 		ldrh	r3, [r8, #8]
3132:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 11016              		.loc 1 3132 6 view .LVU3396
 11017 111a 002B     		cmp	r3, #0
 11018 111c 00F07F85 		beq	.L984
3133:src/keys.c    **** 				State2.digval = global_regs();
 11019              		.loc 1 3133 4 is_stmt 1 view .LVU3397
3133:src/keys.c    **** 				State2.digval = global_regs();
 11020              		.loc 1 3133 8 is_stmt 0 view .LVU3398
 11021 1120 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3133:src/keys.c    **** 				State2.digval = global_regs();
 11022              		.loc 1 3133 7 view .LVU3399
 11023 1124 D407     		lsls	r4, r2, #31
 11024              	.LVL928:
3133:src/keys.c    **** 				State2.digval = global_regs();
ARM GAS  /tmp/cc8xFAqJ.s 			page 314


 11025              		.loc 1 3133 7 view .LVU3400
 11026 1126 02D4     		bmi	.L985
3133:src/keys.c    **** 				State2.digval = global_regs();
 11027              		.loc 1 3133 23 view .LVU3401
 11028 1128 642B     		cmp	r3, #100
 11029 112a 00F07E85 		beq	.L1386
 11030              	.LVL929:
 11031              	.L985:
3135:src/keys.c    **** 		}
 11032              		.loc 1 3135 4 is_stmt 1 view .LVU3402
 11033 112e B8F80830 		ldrh	r3, [r8, #8]
 11034 1132 013B     		subs	r3, r3, #1
 11035              	.L1301:
3135:src/keys.c    **** 		}
 11036              		.loc 1 3135 4 is_stmt 0 view .LVU3403
 11037 1134 A8F80830 		strh	r3, [r8, #8]	@ movhi
 11038              	.LVL930:
 11039              	.L976:
3187:src/keys.c    **** 	return STATE_UNFINISHED;
 11040              		.loc 1 3187 2 is_stmt 1 view .LVU3404
3187:src/keys.c    **** 	return STATE_UNFINISHED;
 11041              		.loc 1 3187 16 is_stmt 0 view .LVU3405
 11042 1138 98F81420 		ldrb	r2, [r8, #20]	@ zero_extendqisi2
 11043 113c 3368     		ldr	r3, [r6]
 11044 113e 6FF3C502 		bfc	r2, #3, #3
 11045 1142 88F81420 		strb	r2, [r8, #20]
3188:src/keys.c    **** }
 11046              		.loc 1 3188 2 is_stmt 1 view .LVU3406
3188:src/keys.c    **** }
 11047              		.loc 1 3188 9 is_stmt 0 view .LVU3407
 11048 1146 3324     		movs	r4, #51
 11049 1148 FEF7B5BF 		b	.L801
 11050              	.LVL931:
 11051              	.L990:
3159:src/keys.c    **** 			return STATE_UNFINISHED;
 11052              		.loc 1 3159 3 is_stmt 1 view .LVU3408
3159:src/keys.c    **** 			return STATE_UNFINISHED;
 11053              		.loc 1 3159 7 is_stmt 0 view .LVU3409
 11054 114c 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3159:src/keys.c    **** 			return STATE_UNFINISHED;
 11055              		.loc 1 3159 6 view .LVU3410
 11056 1150 13F02002 		ands	r2, r3, #32
 11057 1154 7FF4A5AA 		bne	.L1104
3161:src/keys.c    **** 
 11058              		.loc 1 3161 3 is_stmt 1 view .LVU3411
3183:src/keys.c    **** 	State2.digval = 0;
 11059              		.loc 1 3183 2 view .LVU3412
3183:src/keys.c    **** 	State2.digval = 0;
 11060              		.loc 1 3183 22 is_stmt 0 view .LVU3413
 11061 1158 62F3C303 		bfi	r3, r2, #3, #1
 11062 115c 88F81730 		strb	r3, [r8, #23]
3184:src/keys.c    **** 	State2.digval2 = 0;
 11063              		.loc 1 3184 2 is_stmt 1 view .LVU3414
3184:src/keys.c    **** 	State2.digval2 = 0;
 11064              		.loc 1 3184 16 is_stmt 0 view .LVU3415
 11065 1160 A8F80820 		strh	r2, [r8, #8]	@ movhi
3185:src/keys.c    **** reset_window:
ARM GAS  /tmp/cc8xFAqJ.s 			page 315


 11066              		.loc 1 3185 2 is_stmt 1 view .LVU3416
3185:src/keys.c    **** reset_window:
 11067              		.loc 1 3185 17 is_stmt 0 view .LVU3417
 11068 1164 88F80A20 		strb	r2, [r8, #10]
 11069 1168 E6E7     		b	.L976
 11070              	.L992:
3164:src/keys.c    **** 			State2.disp_as_alpha = 1;
 11071              		.loc 1 3164 3 is_stmt 1 view .LVU3418
3164:src/keys.c    **** 			State2.disp_as_alpha = 1;
 11072              		.loc 1 3164 6 is_stmt 0 view .LVU3419
 11073 116a B9F1010F 		cmp	r9, #1
 11074 116e BBD1     		bne	.L993
3165:src/keys.c    **** 			goto reset_window;
 11075              		.loc 1 3165 4 is_stmt 1 view .LVU3420
3165:src/keys.c    **** 			goto reset_window;
 11076              		.loc 1 3165 25 is_stmt 0 view .LVU3421
 11077 1170 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11078 1174 43F00403 		orr	r3, r3, #4
 11079 1178 88F81630 		strb	r3, [r8, #22]
3166:src/keys.c    **** 		}
 11080              		.loc 1 3166 4 is_stmt 1 view .LVU3422
 11081 117c DCE7     		b	.L976
 11082              	.L986:
3142:src/keys.c    **** 			State2.digval++;
 11083              		.loc 1 3142 3 view .LVU3423
3142:src/keys.c    **** 			State2.digval++;
 11084              		.loc 1 3142 13 is_stmt 0 view .LVU3424
 11085 117e B8F80830 		ldrh	r3, [r8, #8]
3142:src/keys.c    **** 			State2.digval++;
 11086              		.loc 1 3142 27 view .LVU3425
 11087 1182 0AF1FF3A 		add	r10, r10, #-1
 11088              	.LVL932:
3142:src/keys.c    **** 			State2.digval++;
 11089              		.loc 1 3142 6 view .LVU3426
 11090 1186 5345     		cmp	r3, r10
 11091 1188 80F21A85 		bge	.L987
3143:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 11092              		.loc 1 3143 4 is_stmt 1 view .LVU3427
3144:src/keys.c    **** 				State2.digval = regX_idx;
 11093              		.loc 1 3144 8 is_stmt 0 view .LVU3428
 11094 118c 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3143:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 11095              		.loc 1 3143 17 view .LVU3429
 11096 1190 0133     		adds	r3, r3, #1
 11097 1192 9CB2     		uxth	r4, r3
 11098              	.LVL933:
3144:src/keys.c    **** 				State2.digval = regX_idx;
 11099              		.loc 1 3144 7 view .LVU3430
 11100 1194 D007     		lsls	r0, r2, #31
 11101              	.LVL934:
3143:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 11102              		.loc 1 3143 17 view .LVU3431
 11103 1196 A8F80840 		strh	r4, [r8, #8]	@ movhi
3144:src/keys.c    **** 				State2.digval = regX_idx;
 11104              		.loc 1 3144 4 is_stmt 1 view .LVU3432
3144:src/keys.c    **** 				State2.digval = regX_idx;
 11105              		.loc 1 3144 7 is_stmt 0 view .LVU3433
ARM GAS  /tmp/cc8xFAqJ.s 			page 316


 11106 119a CDD4     		bmi	.L976
3144:src/keys.c    **** 				State2.digval = regX_idx;
 11107              		.loc 1 3144 43 view .LVU3434
 11108 119c FFF7FEFF 		bl	global_regs
 11109              	.LVL935:
3144:src/keys.c    **** 				State2.digval = regX_idx;
 11110              		.loc 1 3144 23 view .LVU3435
 11111 11a0 8442     		cmp	r4, r0
 11112 11a2 C9D1     		bne	.L976
3145:src/keys.c    **** 		}
 11113              		.loc 1 3145 5 is_stmt 1 view .LVU3436
3145:src/keys.c    **** 		}
 11114              		.loc 1 3145 19 is_stmt 0 view .LVU3437
 11115 11a4 6423     		movs	r3, #100
 11116 11a6 A8F80830 		strh	r3, [r8, #8]	@ movhi
 11117 11aa C5E7     		b	.L976
 11118              	.LVL936:
 11119              	.L1342:
3145:src/keys.c    **** 		}
 11120              		.loc 1 3145 19 view .LVU3438
 11121              	.LBE1012:
 11122              	.LBE1247:
3324:src/keys.c    **** 
 11123              		.loc 1 3324 3 is_stmt 1 view .LVU3439
 11124              	.LBB1248:
 11125              	.LBI1248:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 11126              		.loc 1 114 13 view .LVU3440
 11127              	.LBE1248:
 11128              	.LBE1349:
 11129              	.LBE1418:
 115:src/keys.c    **** }
 11130              		.loc 1 115 2 view .LVU3441
 11131              	.LBB1419:
 11132              	.LBB1350:
 11133              	.LBB1255:
 11134              	.LBB1249:
 11135              	.LBI1249:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 11136              		.loc 1 104 20 view .LVU3442
 11137              	.LBB1250:
 105:src/keys.c    **** 	State2.shifts = shift;
 11138              		.loc 1 105 2 view .LVU3443
 11139              	.LBB1251:
 11140              	.LBI1251:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 11141              		.loc 1 96 13 view .LVU3444
 11142              	.LBB1252:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11143              		.loc 1 97 2 view .LVU3445
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11144              		.loc 1 97 18 is_stmt 0 view .LVU3446
 11145 11ac FFF7FEFF 		bl	shift_down
 11146              	.LVL937:
  98:src/keys.c    **** }
 11147              		.loc 1 98 2 is_stmt 1 view .LVU3447
  98:src/keys.c    **** }
ARM GAS  /tmp/cc8xFAqJ.s 			page 317


 11148              		.loc 1 98 52 is_stmt 0 view .LVU3448
 11149 11b0 0146     		mov	r1, r0
 11150 11b2 08B9     		cbnz	r0, .L996
 11151 11b4 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 11152              	.L996:
 11153              	.LVL938:
  98:src/keys.c    **** }
 11154              		.loc 1 98 52 view .LVU3449
 11155              	.LBE1252:
 11156              	.LBE1251:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11157              		.loc 1 106 2 is_stmt 1 view .LVU3450
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11158              		.loc 1 106 16 is_stmt 0 view .LVU3451
 11159 11b8 0022     		movs	r2, #0
 11160              	.LBE1250:
 11161              	.LBE1249:
 11162              	.LBE1255:
3324:src/keys.c    **** 
 11163              		.loc 1 3324 10 view .LVU3452
 11164 11ba 2046     		mov	r0, r4
 11165              	.LBB1256:
 11166              	.LBB1254:
 11167              	.LBB1253:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11168              		.loc 1 106 16 view .LVU3453
 11169 11bc 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 11170              		.loc 1 108 2 is_stmt 1 view .LVU3454
 11171              	.LVL939:
 108:src/keys.c    **** }
 11172              		.loc 1 108 2 is_stmt 0 view .LVU3455
 11173              	.LBE1253:
 11174              	.LBE1254:
 11175              	.LBE1256:
3324:src/keys.c    **** 
 11176              		.loc 1 3324 10 view .LVU3456
 11177 11c0 FFF7FEFF 		bl	process_catalogue
 11178              	.LVL940:
3324:src/keys.c    **** 
 11179              		.loc 1 3324 10 view .LVU3457
 11180 11c4 0446     		mov	r4, r0
 11181 11c6 FFF70BB9 		b	.L835
 11182              	.LVL941:
 11183              	.L1134:
 11184              	.LBB1257:
 11185              	.LBB808:
 11186              	.LBB798:
 371:src/keys.c    **** #ifndef WINGUI
 11187              		.loc 1 371 8 view .LVU3458
 11188 11ca 724B     		ldr	r3, .L1411+8
 377:src/keys.c    ****   }
 11189              		.loc 1 377 9 view .LVU3459
 11190 11cc 0C21     		movs	r1, #12
 373:src/keys.c    **** #else
 11191              		.loc 1 373 27 view .LVU3460
 11192 11ce 4FF0010C 		mov	ip, #1
ARM GAS  /tmp/cc8xFAqJ.s 			page 318


 11193 11d2 FFF748B8 		b	.L915
 11194              	.LVL942:
 11195              	.L1159:
 373:src/keys.c    **** #else
 11196              		.loc 1 373 27 view .LVU3461
 11197              	.LBE798:
 11198              	.LBE808:
 11199              	.LBE1257:
 11200              	.LBB1258:
 11201              	.LBB1048:
2351:src/keys.c    **** 	}
 11202              		.loc 1 2351 18 view .LVU3462
 11203 11d6 1E24     		movs	r4, #30
 11204              	.LVL943:
2351:src/keys.c    **** 	}
 11205              		.loc 1 2351 47 view .LVU3463
 11206 11d8 1C44     		add	r4, r4, r3
 11207 11da FFF701B9 		b	.L835
 11208              	.LVL944:
 11209              	.L1359:
2351:src/keys.c    **** 	}
 11210              		.loc 1 2351 47 view .LVU3464
 11211              	.LBE1048:
 11212              	.LBE1258:
 11213              	.LBB1259:
 11214              	.LBB1066:
1713:src/keys.c    **** 	}
 11215              		.loc 1 1713 3 is_stmt 1 view .LVU3465
1713:src/keys.c    **** 	}
 11216              		.loc 1 1713 6 is_stmt 0 view .LVU3466
 11217 11de B8F80800 		ldrh	r0, [r8, #8]
 11218              	.LVL945:
1742:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11219              		.loc 1 1742 2 is_stmt 1 view .LVU3467
 11220 11e2 3CE4     		b	.L838
 11221              	.LVL946:
 11222              	.L1357:
1703:src/keys.c    **** 		goto fin;
 11223              		.loc 1 1703 3 view .LVU3468
 11224              	.LBB1059:
 11225              	.LBI1059:
1675:src/keys.c    **** 	const int code = 100 + n;
 11226              		.loc 1 1675 12 view .LVU3469
 11227              	.LBB1060:
1676:src/keys.c    **** 	unsigned int pc = state_pc();
 11228              		.loc 1 1676 2 view .LVU3470
1677:src/keys.c    **** 
 11229              		.loc 1 1677 2 view .LVU3471
1677:src/keys.c    **** 
 11230              		.loc 1 1677 20 is_stmt 0 view .LVU3472
 11231 11e4 DFF8B0A1 		ldr	r10, .L1411+12
 11232 11e8 DAF80030 		ldr	r3, [r10]
 11233              	.LVL947:
1677:src/keys.c    **** 
 11234              		.loc 1 1677 15 view .LVU3473
 11235 11ec B3F8E007 		ldrh	r0, [r3, #2016]
 11236              	.LVL948:
ARM GAS  /tmp/cc8xFAqJ.s 			page 319


1679:src/keys.c    **** 		pc = 1;
 11237              		.loc 1 1679 2 is_stmt 1 view .LVU3474
1679:src/keys.c    **** 		pc = 1;
 11238              		.loc 1 1679 5 is_stmt 0 view .LVU3475
 11239 11f0 830B     		lsrs	r3, r0, #14
1680:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
 11240              		.loc 1 1680 6 view .LVU3476
 11241 11f2 032B     		cmp	r3, #3
 11242              	.LVL949:
1681:src/keys.c    **** 	if (pc > 0)
 11243              		.loc 1 1681 2 is_stmt 1 view .LVU3477
1681:src/keys.c    **** 	if (pc > 0)
 11244              		.loc 1 1681 7 is_stmt 0 view .LVU3478
 11245 11f4 08BF     		it	eq
 11246 11f6 0120     		moveq	r0, #1
 11247              	.LVL950:
1681:src/keys.c    **** 	if (pc > 0)
 11248              		.loc 1 1681 7 view .LVU3479
 11249 11f8 04F16401 		add	r1, r4, #100
 11250              	.LVL951:
1681:src/keys.c    **** 	if (pc > 0)
 11251              		.loc 1 1681 7 view .LVU3480
 11252 11fc 0322     		movs	r2, #3
 11253              	.LVL952:
1681:src/keys.c    **** 	if (pc > 0)
 11254              		.loc 1 1681 7 view .LVU3481
 11255 11fe FFF7FEFF 		bl	find_label_from
 11256              	.LVL953:
1682:src/keys.c    **** 		return pc;
 11257              		.loc 1 1682 2 is_stmt 1 view .LVU3482
1682:src/keys.c    **** 		return pc;
 11258              		.loc 1 1682 5 is_stmt 0 view .LVU3483
 11259 1202 0028     		cmp	r0, #0
 11260 1204 7FF415AB 		bne	.L847
1684:src/keys.c    **** }
 11261              		.loc 1 1684 2 is_stmt 1 view .LVU3484
1684:src/keys.c    **** }
 11262              		.loc 1 1684 9 is_stmt 0 view .LVU3485
 11263 1208 DAF80030 		ldr	r3, [r10]
 11264 120c B3F8E007 		ldrh	r0, [r3, #2016]
 11265              	.LVL954:
1684:src/keys.c    **** }
 11266              		.loc 1 1684 9 view .LVU3486
 11267              	.LBE1060:
 11268              	.LBE1059:
1704:src/keys.c    **** 	}
 11269              		.loc 1 1704 3 is_stmt 1 view .LVU3487
 11270 1210 FFF70FBB 		b	.L847
 11271              	.LVL955:
 11272              	.L1158:
1704:src/keys.c    **** 	}
 11273              		.loc 1 1704 3 is_stmt 0 view .LVU3488
 11274              	.LBE1066:
 11275              	.LBE1259:
 11276              	.LBB1260:
 11277              	.LBB1049:
2351:src/keys.c    **** 	}
ARM GAS  /tmp/cc8xFAqJ.s 			page 320


 11278              		.loc 1 2351 18 view .LVU3489
 11279 1214 2724     		movs	r4, #39
 11280              	.LVL956:
2351:src/keys.c    **** 	}
 11281              		.loc 1 2351 47 view .LVU3490
 11282 1216 1C44     		add	r4, r4, r3
 11283 1218 FFF7E2B8 		b	.L835
 11284              	.LVL957:
 11285              	.L1369:
2351:src/keys.c    **** 	}
 11286              		.loc 1 2351 47 view .LVU3491
 11287              	.LBE1049:
 11288              	.LBE1260:
 11289              	.LBB1261:
 11290              	.LBB809:
 294:src/keys.c    **** 			return CATALOGUE_REGISTERS;
 11291              		.loc 1 294 27 view .LVU3492
 11292 121c 242C     		cmp	r4, #36
 11293 121e 7FF42EA8 		bne	.L920
 11294              	.L1133:
 295:src/keys.c    **** 		if ( (shift == SHIFT_F) && (c == K20) ) {
 11295              		.loc 1 295 11 view .LVU3493
 11296 1222 1623     		movs	r3, #22
 11297 1224 46E4     		b	.L903
 11298              	.LVL958:
 11299              	.L1364:
 295:src/keys.c    **** 		if ( (shift == SHIFT_F) && (c == K20) ) {
 11300              		.loc 1 295 11 view .LVU3494
 11301              	.LBE809:
 11302              	.LBE1261:
 11303              	.LBB1262:
 11304              	.LBB1105:
2905:src/keys.c    **** 		return STATE_UNFINISHED;
 11305              		.loc 1 2905 3 is_stmt 1 view .LVU3495
 11306 1226 3368     		ldr	r3, [r6]
 11307              	.LVL959:
2905:src/keys.c    **** 		return STATE_UNFINISHED;
 11308              		.loc 1 2905 17 is_stmt 0 view .LVU3496
 11309 1228 88F80C00 		strb	r0, [r8, #12]
2906:src/keys.c    **** 	} 
 11310              		.loc 1 2906 3 is_stmt 1 view .LVU3497
 11311              	.LBE1105:
 11312              	.LBE1262:
3272:src/keys.c    **** 
 11313              		.loc 1 3272 10 is_stmt 0 view .LVU3498
 11314 122c 3324     		movs	r4, #51
 11315              	.LVL960:
 11316              	.LBB1263:
 11317              	.LBB1106:
2906:src/keys.c    **** 	} 
 11318              		.loc 1 2906 10 view .LVU3499
 11319 122e FEF742BF 		b	.L801
 11320              	.LVL961:
 11321              	.L1343:
2906:src/keys.c    **** 	} 
 11322              		.loc 1 2906 10 view .LVU3500
 11323              	.LBE1106:
ARM GAS  /tmp/cc8xFAqJ.s 			page 321


 11324              	.LBE1263:
3328:src/keys.c    **** #else
 11325              		.loc 1 3328 3 is_stmt 1 view .LVU3501
 11326              	.LBB1264:
 11327              	.LBI904:
1755:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
 11328              		.loc 1 1755 12 view .LVU3502
 11329              	.LBB966:
1756:src/keys.c    ****         int op = STATE_UNFINISHED;
 11330              		.loc 1 1756 2 view .LVU3503
1756:src/keys.c    ****         int op = STATE_UNFINISHED;
 11331              		.loc 1 1756 33 is_stmt 0 view .LVU3504
 11332 1232 98F80D90 		ldrb	r9, [r8, #13]	@ zero_extendqisi2
 11333              	.LBB906:
 11334              	.LBB907:
 11335              	.LBB908:
 11336              	.LBB909:
 11337              	.LBB910:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11338              		.loc 1 97 18 view .LVU3505
 11339 1236 FFF7FEFF 		bl	shift_down
 11340              	.LVL962:
 11341              	.LBE910:
 11342              	.LBE909:
 11343              	.LBE908:
 11344              	.LBE907:
 11345              	.LBE906:
1756:src/keys.c    ****         int op = STATE_UNFINISHED;
 11346              		.loc 1 1756 15 view .LVU3506
 11347 123a CA46     		mov	r10, r9
 11348              	.LVL963:
1757:src/keys.c    **** 	const enum shifts shift = reset_shift();
 11349              		.loc 1 1757 9 is_stmt 1 view .LVU3507
1758:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
 11350              		.loc 1 1758 2 view .LVU3508
 11351              	.LBB919:
 11352              	.LBI906:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 11353              		.loc 1 114 13 view .LVU3509
 11354              	.LBE919:
 11355              	.LBE966:
 11356              	.LBE1264:
 11357              	.LBE1350:
 11358              	.LBE1419:
 115:src/keys.c    **** }
 11359              		.loc 1 115 2 view .LVU3510
 11360              	.LBB1420:
 11361              	.LBB1351:
 11362              	.LBB1265:
 11363              	.LBB967:
 11364              	.LBB920:
 11365              	.LBB916:
 11366              	.LBI907:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 11367              		.loc 1 104 20 view .LVU3511
 11368              	.LBB913:
 105:src/keys.c    **** 	State2.shifts = shift;
ARM GAS  /tmp/cc8xFAqJ.s 			page 322


 11369              		.loc 1 105 2 view .LVU3512
 11370              	.LBB912:
 11371              	.LBI909:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 11372              		.loc 1 96 13 view .LVU3513
 11373              	.LBB911:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11374              		.loc 1 97 2 view .LVU3514
  98:src/keys.c    **** }
 11375              		.loc 1 98 2 view .LVU3515
  98:src/keys.c    **** }
 11376              		.loc 1 98 52 is_stmt 0 view .LVU3516
 11377 123c 08B9     		cbnz	r0, .L998
 11378 123e 98F81000 		ldrb	r0, [r8, #16]	@ zero_extendqisi2
 11379              	.LVL964:
 11380              	.L998:
  98:src/keys.c    **** }
 11381              		.loc 1 98 52 view .LVU3517
 11382              	.LBE911:
 11383              	.LBE912:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11384              		.loc 1 106 2 is_stmt 1 view .LVU3518
 11385              	.LBE913:
 11386              	.LBE916:
 11387              	.LBE920:
 11388              	.LBB921:
 11389              	.LBB922:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11390              		.loc 1 485 6 is_stmt 0 view .LVU3519
 11391 1242 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
 11392              	.LBB923:
 11393              	.LBB924:
 143:src/keys.c    **** }
 11394              		.loc 1 143 23 view .LVU3520
 11395 1246 514B     		ldr	r3, .L1411
 11396              	.LBE924:
 11397              	.LBE923:
 11398              	.LBE922:
 11399              	.LBE921:
 11400              	.LBB944:
 11401              	.LBB917:
 11402              	.LBB914:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11403              		.loc 1 106 16 view .LVU3521
 11404 1248 0022     		movs	r2, #0
 11405              	.LBE914:
 11406              	.LBE917:
 11407              	.LBE944:
 11408              	.LBB945:
 11409              	.LBB937:
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11410              		.loc 1 485 5 view .LVU3522
 11411 124a 11F0100C 		ands	ip, r1, #16
 11412              	.LBE937:
 11413              	.LBE945:
 11414              	.LBB946:
 11415              	.LBB918:
ARM GAS  /tmp/cc8xFAqJ.s 			page 323


 11416              	.LBB915:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11417              		.loc 1 106 16 view .LVU3523
 11418 124e 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 11419              		.loc 1 108 2 is_stmt 1 view .LVU3524
 11420              	.LVL965:
 108:src/keys.c    **** }
 11421              		.loc 1 108 2 is_stmt 0 view .LVU3525
 11422              	.LBE915:
 11423              	.LBE918:
 11424              	.LBE946:
1759:src/keys.c    **** 	State2.alpha_pos = 0;
 11425              		.loc 1 1759 2 is_stmt 1 view .LVU3526
 11426              	.LBB947:
 11427              	.LBI921:
 435:src/keys.c    **** {
 11428              		.loc 1 435 12 view .LVU3527
 11429              	.LBB938:
 437:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 11430              		.loc 1 437 2 view .LVU3528
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11431              		.loc 1 485 2 view .LVU3529
 485:src/keys.c    **** 		if (shift == SHIFT_N)
 11432              		.loc 1 485 5 is_stmt 0 view .LVU3530
 11433 1252 00F03381 		beq	.L999
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 11434              		.loc 1 486 3 is_stmt 1 view .LVU3531
 486:src/keys.c    **** 			shift = SHIFT_LC_N;
 11435              		.loc 1 486 6 is_stmt 0 view .LVU3532
 11436 1256 0028     		cmp	r0, #0
 11437 1258 00F02E82 		beq	.L1000
 488:src/keys.c    **** 			shift = SHIFT_LC_G;
 11438              		.loc 1 488 8 is_stmt 1 view .LVU3533
 11439              	.LBB931:
 11440              	.LBB925:
 143:src/keys.c    **** }
 11441              		.loc 1 143 23 is_stmt 0 view .LVU3534
 11442 125c 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 11443              	.LBE925:
 11444              	.LBE931:
 491:src/keys.c    **** }
 11445              		.loc 1 491 49 view .LVU3535
 11446 125e DFF83CC1 		ldr	ip, .L1411+16
 11447              	.LBE938:
 11448              	.LBE947:
1760:src/keys.c    **** 
 11449              		.loc 1 1760 19 view .LVU3536
 11450 1262 88F80D20 		strb	r2, [r8, #13]
 11451              	.LBB948:
 11452              	.LBB939:
 489:src/keys.c    **** 	}
 11453              		.loc 1 489 10 view .LVU3537
 11454 1266 0228     		cmp	r0, #2
 491:src/keys.c    **** }
 11455              		.loc 1 491 49 view .LVU3538
 11456 1268 4FF00602 		mov	r2, #6
ARM GAS  /tmp/cc8xFAqJ.s 			page 324


 11457 126c 02FB03C3 		mla	r3, r2, r3, ip
 489:src/keys.c    **** 	}
 11458              		.loc 1 489 10 view .LVU3539
 11459 1270 14BF     		ite	ne
 11460 1272 0246     		movne	r2, r0
 11461 1274 0522     		moveq	r2, #5
 11462              	.LVL966:
 491:src/keys.c    **** }
 11463              		.loc 1 491 2 is_stmt 1 view .LVU3540
 11464              	.LBB932:
 11465              	.LBI923:
 131:src/keys.c    **** {
 11466              		.loc 1 131 12 view .LVU3541
 11467              	.LBB926:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 11468              		.loc 1 133 2 view .LVU3542
 143:src/keys.c    **** }
 11469              		.loc 1 143 2 view .LVU3543
 143:src/keys.c    **** }
 11470              		.loc 1 143 2 is_stmt 0 view .LVU3544
 11471 1276 063C     		subs	r4, r4, #6
 11472              	.LVL967:
 143:src/keys.c    **** }
 11473              		.loc 1 143 2 view .LVU3545
 11474              	.LBE926:
 11475              	.LBE932:
 491:src/keys.c    **** }
 11476              		.loc 1 491 49 view .LVU3546
 11477 1278 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 11478              	.LVL968:
 491:src/keys.c    **** }
 11479              		.loc 1 491 49 view .LVU3547
 11480              	.LBE939:
 11481              	.LBE948:
1760:src/keys.c    **** 
 11482              		.loc 1 1760 2 is_stmt 1 view .LVU3548
1762:src/keys.c    **** 	case K10:	// STO
 11483              		.loc 1 1762 2 view .LVU3549
 11484 127a 212C     		cmp	r4, #33
 11485 127c 49D8     		bhi	.L1003
 11486 127e 01A3     		adr	r3, .L1106
 11487 1280 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 11488              		.p2align 2
 11489              	.L1106:
 11490 1284 091A0000 		.word	.L1012+1
 11491 1288 E3190000 		.word	.L1011+1
 11492 128c 13130000 		.word	.L1003+1
 11493 1290 13130000 		.word	.L1003+1
 11494 1294 13130000 		.word	.L1003+1
 11495 1298 13130000 		.word	.L1003+1
 11496 129c AB190000 		.word	.L1010+1
 11497 12a0 13130000 		.word	.L1003+1
 11498 12a4 13130000 		.word	.L1003+1
 11499 12a8 13130000 		.word	.L1003+1
 11500 12ac 93190000 		.word	.L1019+1
 11501 12b0 13130000 		.word	.L1003+1
 11502 12b4 0D130000 		.word	.L1008+1
ARM GAS  /tmp/cc8xFAqJ.s 			page 325


 11503 12b8 13130000 		.word	.L1003+1
 11504 12bc 13130000 		.word	.L1003+1
 11505 12c0 13130000 		.word	.L1003+1
 11506 12c4 13130000 		.word	.L1003+1
 11507 12c8 13130000 		.word	.L1003+1
 11508 12cc D7180000 		.word	.L1007+1
 11509 12d0 13130000 		.word	.L1003+1
 11510 12d4 13130000 		.word	.L1003+1
 11511 12d8 13130000 		.word	.L1003+1
 11512 12dc 13130000 		.word	.L1003+1
 11513 12e0 13130000 		.word	.L1003+1
 11514 12e4 13130000 		.word	.L1003+1
 11515 12e8 13130000 		.word	.L1003+1
 11516 12ec 13130000 		.word	.L1003+1
 11517 12f0 13130000 		.word	.L1003+1
 11518 12f4 13130000 		.word	.L1003+1
 11519 12f8 13130000 		.word	.L1003+1
 11520 12fc 91060000 		.word	.L1006+1
 11521 1300 13130000 		.word	.L1003+1
 11522 1304 13130000 		.word	.L1003+1
 11523 1308 49190000 		.word	.L1004+1
 11524              	.LVL969:
 11525              		.p2align 1
 11526              	.L1008:
1805:src/keys.c    **** 	    if ( State2.runmode ) {
 11527              		.loc 1 1805 4 view .LVU3550
1805:src/keys.c    **** 	    if ( State2.runmode ) {
 11528              		.loc 1 1805 7 is_stmt 0 view .LVU3551
 11529 130c 0028     		cmp	r0, #0
 11530 130e 00F0F482 		beq	.L1198
 11531              	.L1003:
1869:src/keys.c    **** 		return STATE_UNFINISHED;
 11532              		.loc 1 1869 2 is_stmt 1 view .LVU3552
1869:src/keys.c    **** 		return STATE_UNFINISHED;
 11533              		.loc 1 1869 5 is_stmt 0 view .LVU3553
 11534 1312 002A     		cmp	r2, #0
 11535 1314 3FF499AB 		beq	.L1310
1871:src/keys.c    **** }
 11536              		.loc 1 1871 2 is_stmt 1 view .LVU3554
1871:src/keys.c    **** }
 11537              		.loc 1 1871 9 is_stmt 0 view .LVU3555
 11538 1318 42F48844 		orr	r4, r2, #17408
 11539 131c 2046     		mov	r0, r4
 11540              	.LVL970:
1871:src/keys.c    **** }
 11541              		.loc 1 1871 9 view .LVU3556
 11542 131e FFF781B8 		b	.L862
 11543              	.LVL971:
 11544              	.L1358:
1871:src/keys.c    **** }
 11545              		.loc 1 1871 9 view .LVU3557
 11546              	.LBE967:
 11547              	.LBE1265:
 11548              	.LBB1266:
 11549              	.LBB1067:
1708:src/keys.c    **** 		goto fin;
 11550              		.loc 1 1708 3 is_stmt 1 view .LVU3558
ARM GAS  /tmp/cc8xFAqJ.s 			page 326


1708:src/keys.c    **** 		goto fin;
 11551              		.loc 1 1708 11 is_stmt 0 view .LVU3559
 11552 1322 1D4B     		ldr	r3, .L1411+12
 11553              	.LVL972:
1708:src/keys.c    **** 		goto fin;
 11554              		.loc 1 1708 11 view .LVU3560
 11555 1324 1B68     		ldr	r3, [r3]
1708:src/keys.c    **** 		goto fin;
 11556              		.loc 1 1708 9 view .LVU3561
 11557 1326 5888     		ldrh	r0, [r3, #2]
 11558              	.LVL973:
1709:src/keys.c    **** 	}
 11559              		.loc 1 1709 3 is_stmt 1 view .LVU3562
 11560 1328 FFF783BA 		b	.L847
 11561              	.LVL974:
 11562              	.L1039:
1709:src/keys.c    **** 	}
 11563              		.loc 1 1709 3 is_stmt 0 view .LVU3563
 11564              	.LBE1067:
 11565              	.LBE1266:
 11566              	.LBB1267:
 11567              	.LBB877:
1293:src/keys.c    **** 		if (shift == SHIFT_F) { // special pi processing
 11568              		.loc 1 1293 2 is_stmt 1 view .LVU3564
1293:src/keys.c    **** 		if (shift == SHIFT_F) { // special pi processing
 11569              		.loc 1 1293 5 is_stmt 0 view .LVU3565
 11570 132c 0F2C     		cmp	r4, #15
 11571 132e 40F06581 		bne	.L1040
1294:src/keys.c    **** 			reset_shift();
 11572              		.loc 1 1294 3 is_stmt 1 view .LVU3566
1294:src/keys.c    **** 			reset_shift();
 11573              		.loc 1 1294 6 is_stmt 0 view .LVU3567
 11574 1332 BBF1010F 		cmp	fp, #1
 11575 1336 00F05184 		beq	.L1387
 11576              	.LBB819:
1310:src/keys.c    **** #endif
 11577              		.loc 1 1310 4 is_stmt 1 view .LVU3568
 11578              	.LVL975:
1312:src/keys.c    **** 				finish_cpx_entry(1);
 11579              		.loc 1 1312 4 view .LVU3569
1312:src/keys.c    **** 				finish_cpx_entry(1);
 11580              		.loc 1 1312 7 is_stmt 0 view .LVU3570
 11581 133a BBF1030F 		cmp	fp, #3
 11582 133e 00F04484 		beq	.L1388
 11583              	.LBE819:
1319:src/keys.c    **** 		finish_cpx_entry(0); // finish entry for all of them - no lift
 11584              		.loc 1 1319 2 is_stmt 1 view .LVU3571
1319:src/keys.c    **** 		finish_cpx_entry(0); // finish entry for all of them - no lift
 11585              		.loc 1 1319 5 is_stmt 0 view .LVU3572
 11586 1342 BBF1000F 		cmp	fp, #0
 11587 1346 00F09A83 		beq	.L1071
 11588              	.LVL976:
 11589              	.L1110:
1320:src/keys.c    **** 		switch (c) {
 11590              		.loc 1 1320 3 is_stmt 1 view .LVU3573
 11591 134a 0020     		movs	r0, #0
 11592 134c FFF7FEFF 		bl	finish_cpx_entry
ARM GAS  /tmp/cc8xFAqJ.s 			page 327


 11593              	.LVL977:
1321:src/keys.c    **** 		case (K21): // x<->y key
 11594              		.loc 1 1321 3 view .LVU3574
 11595              	.L1304:
1321:src/keys.c    **** 		case (K21): // x<->y key
 11596              		.loc 1 1321 3 is_stmt 0 view .LVU3575
 11597              	.LBE877:
 11598              	.LBE1267:
3344:src/keys.c    **** 	} else {
 11599              		.loc 1 3344 3 is_stmt 1 view .LVU3576
3344:src/keys.c    **** 	} else {
 11600              		.loc 1 3344 10 is_stmt 0 view .LVU3577
 11601 1350 2046     		mov	r0, r4
 11602              	.L1305:
 11603 1352 FFF7FEFF 		bl	process_cmplx
 11604              	.LVL978:
 11605 1356 0446     		mov	r4, r0
 11606 1358 FFF742B8 		b	.L835
 11607              	.LVL979:
 11608              	.L1360:
 11609              	.LBB1268:
 11610              	.LBB1068:
1717:src/keys.c    **** 			goto fin2;
 11611              		.loc 1 1717 3 is_stmt 1 view .LVU3578
1717:src/keys.c    **** 			goto fin2;
 11612              		.loc 1 1717 13 is_stmt 0 view .LVU3579
 11613 135c 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 11614              	.LVL980:
1717:src/keys.c    **** 			goto fin2;
 11615              		.loc 1 1717 6 view .LVU3580
 11616 1360 002B     		cmp	r3, #0
 11617 1362 3FF468AA 		beq	.L851
1720:src/keys.c    **** 			State2.digval /= 10;
 11618              		.loc 1 1720 4 is_stmt 1 view .LVU3581
1720:src/keys.c    **** 			State2.digval /= 10;
 11619              		.loc 1 1720 19 is_stmt 0 view .LVU3582
 11620 1366 013B     		subs	r3, r3, #1
1721:src/keys.c    **** 		}
 11621              		.loc 1 1721 18 view .LVU3583
 11622 1368 B8F80820 		ldrh	r2, [r8, #8]
 11623              	.LVL981:
1720:src/keys.c    **** 			State2.digval /= 10;
 11624              		.loc 1 1720 19 view .LVU3584
 11625 136c 88F80B30 		strb	r3, [r8, #11]
1721:src/keys.c    **** 		}
 11626              		.loc 1 1721 4 is_stmt 1 view .LVU3585
1721:src/keys.c    **** 		}
 11627              		.loc 1 1721 18 is_stmt 0 view .LVU3586
 11628 1370 0A21     		movs	r1, #10
 11629 1372 3368     		ldr	r3, [r6]
 11630 1374 B2FBF1F2 		udiv	r2, r2, r1
 11631              	.LBE1068:
 11632              	.LBE1268:
3263:src/keys.c    **** 
 11633              		.loc 1 3263 10 view .LVU3587
 11634 1378 3324     		movs	r4, #51
 11635              	.LVL982:
ARM GAS  /tmp/cc8xFAqJ.s 			page 328


 11636              	.LBB1269:
 11637              	.LBB1069:
1721:src/keys.c    **** 		}
 11638              		.loc 1 1721 18 view .LVU3588
 11639 137a A8F80820 		strh	r2, [r8, #8]	@ movhi
1742:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11640              		.loc 1 1742 2 is_stmt 1 view .LVU3589
 11641 137e FEF79ABE 		b	.L801
 11642              	.LVL983:
 11643              	.L1345:
1742:src/keys.c    **** 		rawpc = find_user_pc(pc);
 11644              		.loc 1 1742 2 is_stmt 0 view .LVU3590
 11645              	.LBE1069:
 11646              	.LBE1269:
3349:src/keys.c    **** 		// print_debug (3, c);
 11647              		.loc 1 3349 4 is_stmt 1 view .LVU3591
3349:src/keys.c    **** 		// print_debug (3, c);
 11648              		.loc 1 3349 11 is_stmt 0 view .LVU3592
 11649 1382 FFF7FEFF 		bl	process_h_shifted
 11650              	.LVL984:
 11651 1386 0446     		mov	r4, r0
 11652 1388 FFF72AB8 		b	.L835
 11653              	.L1412:
 11654              		.align	2
 11655              	.L1411:
 11656 138c 00000000 		.word	.LANCHOR6
 11657 1390 00000000 		.word	.LANCHOR5
 11658 1394 00000000 		.word	.LANCHOR17
 11659 1398 00000000 		.word	main_ram
 11660 139c 00000000 		.word	.LANCHOR15
 11661              	.LVL985:
 11662              	.L1350:
3231:src/keys.c    **** 	CLEAR_REAL;
 11663              		.loc 1 3231 2 is_stmt 1 view .LVU3593
 11664              	.LBB1270:
 11665              	.LBI1270:
1234:src/keys.c    **** 	// called if number entry terminated by EXIT key
 11666              		.loc 1 1234 13 view .LVU3594
 11667              	.LBB1271:
1238:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
 11668              		.loc 1 1238 2 view .LVU3595
1238:src/keys.c    **** 	if ( INIT_LIFT ) { // C, D gone off the top
 11669              		.loc 1 1238 5 is_stmt 0 view .LVU3596
 11670 13a0 13F0060F 		tst	r3, #6
 11671 13a4 2FD0     		beq	.L816
1239:src/keys.c    **** 		drop ( OP_DROPXY );
 11672              		.loc 1 1239 2 is_stmt 1 view .LVU3597
1239:src/keys.c    **** 		drop ( OP_DROPXY );
 11673              		.loc 1 1239 5 is_stmt 0 view .LVU3598
 11674 13a6 D906     		lsls	r1, r3, #27
 11675 13a8 40F13B82 		bpl	.L817
1240:src/keys.c    **** 		copyreg (get_reg_n(regC_idx), get_reg_n(regJ_idx));
 11676              		.loc 1 1240 3 is_stmt 1 view .LVU3599
 11677 13ac 0F20     		movs	r0, #15
 11678 13ae FFF7FEFF 		bl	drop
 11679              	.LVL986:
1241:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
ARM GAS  /tmp/cc8xFAqJ.s 			page 329


 11680              		.loc 1 1241 3 view .LVU3600
 11681 13b2 6A20     		movs	r0, #106
 11682 13b4 FFF7FEFF 		bl	get_reg_n
 11683              	.LVL987:
 11684 13b8 0446     		mov	r4, r0
 11685              	.LVL988:
1241:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
 11686              		.loc 1 1241 33 is_stmt 0 view .LVU3601
 11687 13ba 6E20     		movs	r0, #110
 11688 13bc FFF7FEFF 		bl	get_reg_n
 11689              	.LVL989:
 11690 13c0 0146     		mov	r1, r0
1241:src/keys.c    **** 		copyreg (get_reg_n(regD_idx), get_reg_n(regK_idx));
 11691              		.loc 1 1241 3 view .LVU3602
 11692 13c2 2046     		mov	r0, r4
 11693 13c4 FFF7FEFF 		bl	copyreg
 11694              	.LVL990:
1242:src/keys.c    **** 	}
 11695              		.loc 1 1242 3 is_stmt 1 view .LVU3603
 11696 13c8 6B20     		movs	r0, #107
 11697              	.L1299:
1246:src/keys.c    **** 	}
 11698              		.loc 1 1246 3 is_stmt 0 view .LVU3604
 11699 13ca FFF7FEFF 		bl	get_reg_n
 11700              	.LVL991:
 11701 13ce 0446     		mov	r4, r0
1246:src/keys.c    **** 	}
 11702              		.loc 1 1246 33 view .LVU3605
 11703 13d0 6F20     		movs	r0, #111
 11704 13d2 FFF7FEFF 		bl	get_reg_n
 11705              	.LVL992:
 11706 13d6 0146     		mov	r1, r0
1246:src/keys.c    **** 	}
 11707              		.loc 1 1246 3 view .LVU3606
 11708 13d8 2046     		mov	r0, r4
 11709 13da FFF7FEFF 		bl	copyreg
 11710              	.LVL993:
1248:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11711              		.loc 1 1248 2 is_stmt 1 view .LVU3607
1248:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11712              		.loc 1 1248 22 is_stmt 0 view .LVU3608
 11713 13de DAF80020 		ldr	r2, [r10]
1248:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11714              		.loc 1 1248 20 view .LVU3609
 11715 13e2 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
1248:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11716              		.loc 1 1248 22 view .LVU3610
 11717 13e6 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
 11718 13ea C3F30013 		ubfx	r3, r3, #4, #1
1248:src/keys.c    **** 	CLEAR_INIT_LIFT;
 11719              		.loc 1 1248 20 view .LVU3611
 11720 13ee 63F38611 		bfi	r1, r3, #6, #1
 11721 13f2 88F81710 		strb	r1, [r8, #23]
1249:src/keys.c    **** 	CLEAR_POLAR_READY;
 11722              		.loc 1 1249 2 is_stmt 1 view .LVU3612
1250:src/keys.c    **** }
 11723              		.loc 1 1250 2 view .LVU3613
ARM GAS  /tmp/cc8xFAqJ.s 			page 330


1249:src/keys.c    **** 	CLEAR_POLAR_READY;
 11724              		.loc 1 1249 2 is_stmt 0 view .LVU3614
 11725 13f6 B2F8AC37 		ldrh	r3, [r2, #1964]
 11726 13fa 23F48873 		bic	r3, r3, #272
 11727 13fe 43F48073 		orr	r3, r3, #256
 11728 1402 A2F8AC37 		strh	r3, [r2, #1964]	@ movhi
 11729              	.L816:
 11730              	.LBE1271:
 11731              	.LBE1270:
3232:src/keys.c    **** 	CLEAR_IMAG;
 11732              		.loc 1 3232 2 is_stmt 1 view .LVU3615
 11733 1406 DAF80020 		ldr	r2, [r10]
3233:src/keys.c    ****       }
 11734              		.loc 1 3233 2 view .LVU3616
3232:src/keys.c    **** 	CLEAR_IMAG;
 11735              		.loc 1 3232 2 is_stmt 0 view .LVU3617
 11736 140a 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
 11737 140e 23F00603 		bic	r3, r3, #6
 11738 1412 82F8AC37 		strb	r3, [r2, #1964]
 11739 1416 FFF78BB9 		b	.L815
 11740              	.LVL994:
 11741              	.L1373:
 11742              	.LBB1273:
 11743              	.LBB1183:
2795:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 11744              		.loc 1 2795 3 is_stmt 1 view .LVU3618
2795:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 11745              		.loc 1 2795 12 is_stmt 0 view .LVU3619
 11746 141a 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
 11747 141e A2F1020C 		sub	ip, r2, #2
 11748 1422 DCF10002 		rsbs	r2, ip, #0
 11749 1426 2046     		mov	r0, r4
 11750 1428 42EB0C02 		adc	r2, r2, ip
 11751 142c FFF7FEFF 		bl	process_catalogue
 11752              	.LVL995:
2796:src/keys.c    **** 			return opcode;
 11753              		.loc 1 2796 6 view .LVU3620
 11754 1430 3328     		cmp	r0, #51
2795:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 11755              		.loc 1 2795 12 view .LVU3621
 11756 1432 0446     		mov	r4, r0
 11757              	.LVL996:
2796:src/keys.c    **** 			return opcode;
 11758              		.loc 1 2796 3 is_stmt 1 view .LVU3622
2796:src/keys.c    **** 			return opcode;
 11759              		.loc 1 2796 6 is_stmt 0 view .LVU3623
 11760 1434 3EF43EAE 		beq	.L1309
2798:src/keys.c    **** 		goto add_char;
 11761              		.loc 1 2798 3 is_stmt 1 view .LVU3624
2798:src/keys.c    **** 		goto add_char;
 11762              		.loc 1 2798 6 is_stmt 0 view .LVU3625
 11763 1438 C4B2     		uxtb	r4, r0
 11764              	.LVL997:
2799:src/keys.c    **** 	}
 11765              		.loc 1 2799 3 is_stmt 1 view .LVU3626
 11766 143a 06E4     		b	.L929
 11767              	.LVL998:
ARM GAS  /tmp/cc8xFAqJ.s 			page 331


 11768              	.L931:
2824:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 11769              		.loc 1 2824 3 view .LVU3627
2824:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 11770              		.loc 1 2824 6 is_stmt 0 view .LVU3628
 11771 143c 0129     		cmp	r1, #1
 11772 143e 00F01D82 		beq	.L1311
2827:src/keys.c    **** 		return STATE_UNFINISHED;
 11773              		.loc 1 2827 4 is_stmt 1 view .LVU3629
 11774              	.LBB1173:
 11775              	.LBI1173:
2781:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 11776              		.loc 1 2781 13 view .LVU3630
 11777              	.LBB1174:
2783:src/keys.c    **** 	if (! State2.alphas )
 11778              		.loc 1 2783 2 view .LVU3631
2783:src/keys.c    **** 	if (! State2.alphas )
 11779              		.loc 1 2783 15 is_stmt 0 view .LVU3632
 11780 1442 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2784:src/keys.c    **** 		State2.alphashift = 0;
 11781              		.loc 1 2784 6 view .LVU3633
 11782 1446 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2783:src/keys.c    **** 	if (! State2.alphas )
 11783              		.loc 1 2783 15 view .LVU3634
 11784 144a 60F3C302 		bfi	r2, r0, #3, #1
 11785 144e 88F81520 		strb	r2, [r8, #21]
2784:src/keys.c    **** 		State2.alphashift = 0;
 11786              		.loc 1 2784 2 is_stmt 1 view .LVU3635
2784:src/keys.c    **** 		State2.alphashift = 0;
 11787              		.loc 1 2784 5 is_stmt 0 view .LVU3636
 11788 1452 13F00802 		ands	r2, r3, #8
 11789 1456 7FF424A9 		bne	.L1104
 11790              	.LVL999:
 11791              	.L940:
2785:src/keys.c    **** }
 11792              		.loc 1 2785 3 is_stmt 1 view .LVU3637
2785:src/keys.c    **** }
 11793              		.loc 1 2785 21 is_stmt 0 view .LVU3638
 11794 145a 62F30413 		bfi	r3, r2, #4, #1
 11795 145e 88F81630 		strb	r3, [r8, #22]
 11796 1462 3368     		ldr	r3, [r6]
 11797              	.LBE1174:
 11798              	.LBE1173:
2828:src/keys.c    **** 
 11799              		.loc 1 2828 10 view .LVU3639
 11800 1464 3324     		movs	r4, #51
 11801              	.LVL1000:
2828:src/keys.c    **** 
 11802              		.loc 1 2828 10 view .LVU3640
 11803 1466 FEF726BE 		b	.L801
 11804              	.LVL1001:
 11805              	.L930:
2814:src/keys.c    **** 			if (State2.numdigit == 0)
 11806              		.loc 1 2814 3 is_stmt 1 view .LVU3641
2814:src/keys.c    **** 			if (State2.numdigit == 0)
 11807              		.loc 1 2814 6 is_stmt 0 view .LVU3642
 11808 146a 0329     		cmp	r1, #3
ARM GAS  /tmp/cc8xFAqJ.s 			page 332


 11809 146c 3FF4E3AB 		beq	.L936
2815:src/keys.c    **** 				reset_multi();
 11810              		.loc 1 2815 4 is_stmt 1 view .LVU3643
2815:src/keys.c    **** 				reset_multi();
 11811              		.loc 1 2815 14 is_stmt 0 view .LVU3644
 11812 1470 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
2815:src/keys.c    **** 				reset_multi();
 11813              		.loc 1 2815 7 view .LVU3645
 11814 1474 002A     		cmp	r2, #0
 11815 1476 40F0EC82 		bne	.L937
2816:src/keys.c    **** 			else
 11816              		.loc 1 2816 5 is_stmt 1 view .LVU3646
 11817              	.LBB1175:
 11818              	.LBI1175:
2781:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 11819              		.loc 1 2781 13 view .LVU3647
 11820              	.LBB1176:
2783:src/keys.c    **** 	if (! State2.alphas )
 11821              		.loc 1 2783 2 view .LVU3648
2783:src/keys.c    **** 	if (! State2.alphas )
 11822              		.loc 1 2783 15 is_stmt 0 view .LVU3649
 11823 147a 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
 11824              	.LVL1002:
2784:src/keys.c    **** 		State2.alphashift = 0;
 11825              		.loc 1 2784 6 view .LVU3650
 11826 147e 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2783:src/keys.c    **** 	if (! State2.alphas )
 11827              		.loc 1 2783 15 view .LVU3651
 11828 1482 62F3C301 		bfi	r1, r2, #3, #1
2784:src/keys.c    **** 		State2.alphashift = 0;
 11829              		.loc 1 2784 5 view .LVU3652
 11830 1486 13F00802 		ands	r2, r3, #8
2783:src/keys.c    **** 	if (! State2.alphas )
 11831              		.loc 1 2783 15 view .LVU3653
 11832 148a 88F81510 		strb	r1, [r8, #21]
2784:src/keys.c    **** 		State2.alphashift = 0;
 11833              		.loc 1 2784 2 is_stmt 1 view .LVU3654
2784:src/keys.c    **** 		State2.alphashift = 0;
 11834              		.loc 1 2784 5 is_stmt 0 view .LVU3655
 11835 148e E4D0     		beq	.L940
 11836 1490 FFF707B9 		b	.L1104
 11837              	.LVL1003:
 11838              	.L1139:
2784:src/keys.c    **** 		State2.alphashift = 0;
 11839              		.loc 1 2784 5 view .LVU3656
 11840              	.LBE1176:
 11841              	.LBE1175:
 11842              	.LBE1183:
 11843              	.LBE1273:
 11844              	.LBB1274:
 11845              	.LBB1234:
2974:src/keys.c    **** 	const int opcode = getprog(pc);
 11846              		.loc 1 2974 27 view .LVU3657
 11847 1494 4FF0030B 		mov	fp, #3
 11848              	.LVL1004:
2974:src/keys.c    **** 	const int opcode = getprog(pc);
 11849              		.loc 1 2974 27 view .LVU3658
ARM GAS  /tmp/cc8xFAqJ.s 			page 333


 11850 1498 6AE4     		b	.L944
 11851              	.LVL1005:
 11852              	.L1034:
2974:src/keys.c    **** 	const int opcode = getprog(pc);
 11853              		.loc 1 2974 27 view .LVU3659
 11854              	.LBE1234:
 11855              	.LBE1274:
 11856              	.LBB1275:
 11857              	.LBB878:
1286:src/keys.c    **** 		convert_regK ((enum trig_modes) (c-K10));
 11858              		.loc 1 1286 2 is_stmt 1 view .LVU3660
1286:src/keys.c    **** 		convert_regK ((enum trig_modes) (c-K10));
 11859              		.loc 1 1286 5 is_stmt 0 view .LVU3661
 11860 149a BBF1020F 		cmp	fp, #2
 11861 149e 40F0A380 		bne	.L1036
1286:src/keys.c    **** 		convert_regK ((enum trig_modes) (c-K10));
 11862              		.loc 1 1286 26 view .LVU3662
 11863 14a2 A01F     		subs	r0, r4, #6
 11864 14a4 C0B2     		uxtb	r0, r0
 11865 14a6 0228     		cmp	r0, #2
 11866 14a8 00F24383 		bhi	.L1037
1287:src/keys.c    **** 	}
 11867              		.loc 1 1287 3 is_stmt 1 view .LVU3663
 11868 14ac FFF7FEFF 		bl	convert_regK
 11869              	.LVL1006:
1289:src/keys.c    **** 		return process_fg_shifted (c);
 11870              		.loc 1 1289 2 view .LVU3664
 11871              	.L1303:
1289:src/keys.c    **** 		return process_fg_shifted (c);
 11872              		.loc 1 1289 2 is_stmt 0 view .LVU3665
 11873              	.LBE878:
 11874              	.LBE1275:
3347:src/keys.c    **** 		if (shift == SHIFT_H)
 11875              		.loc 1 3347 4 is_stmt 1 view .LVU3666
3347:src/keys.c    **** 		if (shift == SHIFT_H)
 11876              		.loc 1 3347 11 is_stmt 0 view .LVU3667
 11877 14b0 2046     		mov	r0, r4
 11878 14b2 FFF7FEFF 		bl	process_fg_shifted
 11879              	.LVL1007:
 11880 14b6 0446     		mov	r4, r0
 11881 14b8 FEF792BF 		b	.L835
 11882              	.LVL1008:
 11883              	.L999:
 11884              	.LBB1276:
 11885              	.LBB968:
 11886              	.LBB949:
 11887              	.LBB940:
 491:src/keys.c    **** }
 11888              		.loc 1 491 2 is_stmt 1 view .LVU3668
 11889              	.LBB933:
 131:src/keys.c    **** {
 11890              		.loc 1 131 12 view .LVU3669
 11891              	.LBB927:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 11892              		.loc 1 133 2 view .LVU3670
 143:src/keys.c    **** }
 11893              		.loc 1 143 2 view .LVU3671
ARM GAS  /tmp/cc8xFAqJ.s 			page 334


 143:src/keys.c    **** }
 11894              		.loc 1 143 2 is_stmt 0 view .LVU3672
 11895              	.LBE927:
 11896              	.LBE933:
 491:src/keys.c    **** }
 11897              		.loc 1 491 49 view .LVU3673
 11898 14bc CB4A     		ldr	r2, .L1413
 11899              	.LBB934:
 11900              	.LBB928:
 143:src/keys.c    **** }
 11901              		.loc 1 143 23 view .LVU3674
 11902 14be 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 11903              	.LBE928:
 11904              	.LBE934:
 11905              	.LBE940:
 11906              	.LBE949:
1760:src/keys.c    **** 
 11907              		.loc 1 1760 19 view .LVU3675
 11908 14c0 88F80DC0 		strb	ip, [r8, #13]
 11909              	.LBB950:
 11910              	.LBB941:
 491:src/keys.c    **** }
 11911              		.loc 1 491 49 view .LVU3676
 11912 14c4 4FF0060C 		mov	ip, #6
 11913 14c8 0CFB0323 		mla	r3, ip, r3, r2
 11914 14cc 063C     		subs	r4, r4, #6
 11915              	.LVL1009:
 491:src/keys.c    **** }
 11916              		.loc 1 491 49 view .LVU3677
 11917 14ce 1A5C     		ldrb	r2, [r3, r0]	@ zero_extendqisi2
 11918              	.LVL1010:
 491:src/keys.c    **** }
 11919              		.loc 1 491 49 view .LVU3678
 11920              	.LBE941:
 11921              	.LBE950:
1760:src/keys.c    **** 
 11922              		.loc 1 1760 2 is_stmt 1 view .LVU3679
1762:src/keys.c    **** 	case K10:	// STO
 11923              		.loc 1 1762 2 view .LVU3680
 11924 14d0 212C     		cmp	r4, #33
 11925 14d2 3FF61EAF 		bhi	.L1003
 11926 14d6 01A3     		adr	r3, .L1005
 11927 14d8 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 11928              		.p2align 2
 11929              	.L1005:
 11930 14dc 091A0000 		.word	.L1012+1
 11931 14e0 E3190000 		.word	.L1011+1
 11932 14e4 13130000 		.word	.L1003+1
 11933 14e8 13130000 		.word	.L1003+1
 11934 14ec 13130000 		.word	.L1003+1
 11935 14f0 13130000 		.word	.L1003+1
 11936 14f4 AB190000 		.word	.L1010+1
 11937 14f8 13130000 		.word	.L1003+1
 11938 14fc 13130000 		.word	.L1003+1
 11939 1500 13130000 		.word	.L1003+1
 11940 1504 99040000 		.word	.L1009+1
 11941 1508 13130000 		.word	.L1003+1
ARM GAS  /tmp/cc8xFAqJ.s 			page 335


 11942 150c 0D130000 		.word	.L1008+1
 11943 1510 13130000 		.word	.L1003+1
 11944 1514 13130000 		.word	.L1003+1
 11945 1518 13130000 		.word	.L1003+1
 11946 151c 13130000 		.word	.L1003+1
 11947 1520 13130000 		.word	.L1003+1
 11948 1524 D7180000 		.word	.L1007+1
 11949 1528 13130000 		.word	.L1003+1
 11950 152c 13130000 		.word	.L1003+1
 11951 1530 13130000 		.word	.L1003+1
 11952 1534 13130000 		.word	.L1003+1
 11953 1538 13130000 		.word	.L1003+1
 11954 153c 13130000 		.word	.L1003+1
 11955 1540 13130000 		.word	.L1003+1
 11956 1544 13130000 		.word	.L1003+1
 11957 1548 13130000 		.word	.L1003+1
 11958 154c 13130000 		.word	.L1003+1
 11959 1550 13130000 		.word	.L1003+1
 11960 1554 91060000 		.word	.L1006+1
 11961 1558 13130000 		.word	.L1003+1
 11962 155c 13130000 		.word	.L1003+1
 11963 1560 49190000 		.word	.L1004+1
 11964              	.LVL1011:
 11965              		.p2align 1
 11966              	.L1374:
1762:src/keys.c    **** 	case K10:	// STO
 11967              		.loc 1 1762 2 is_stmt 0 view .LVU3681
 11968              	.LBE968:
 11969              	.LBE1276:
 11970              	.LBB1277:
 11971              	.LBB1184:
2804:src/keys.c    **** 				break;
 11972              		.loc 1 2804 3 is_stmt 1 view .LVU3682
2804:src/keys.c    **** 				break;
 11973              		.loc 1 2804 6 is_stmt 0 view .LVU3683
 11974 1564 0029     		cmp	r1, #0
 11975 1566 7FF45EAB 		bne	.L932
2806:src/keys.c    **** 		if (State2.numdigit == 0)
 11976              		.loc 1 2806 3 is_stmt 1 view .LVU3684
 11977              	.LBB1177:
 11978              	.LBI1177:
2781:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 11979              		.loc 1 2781 13 view .LVU3685
 11980              	.LBB1178:
2783:src/keys.c    **** 	if (! State2.alphas )
 11981              		.loc 1 2783 2 view .LVU3686
2784:src/keys.c    **** 		State2.alphashift = 0;
 11982              		.loc 1 2784 6 is_stmt 0 view .LVU3687
 11983 156a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2783:src/keys.c    **** 	if (! State2.alphas )
 11984              		.loc 1 2783 15 view .LVU3688
 11985 156e 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2784:src/keys.c    **** 		State2.alphashift = 0;
 11986              		.loc 1 2784 5 view .LVU3689
 11987 1572 1C07     		lsls	r4, r3, #28
 11988              	.LVL1012:
2785:src/keys.c    **** }
ARM GAS  /tmp/cc8xFAqJ.s 			page 336


 11989              		.loc 1 2785 21 view .LVU3690
 11990 1574 5CBF     		itt	pl
 11991 1576 61F30413 		bfipl	r3, r1, #4, #1
 11992 157a 88F81630 		strbpl	r3, [r8, #22]
 11993              	.LBE1178:
 11994              	.LBE1177:
2807:src/keys.c    **** 			return STATE_UNFINISHED;
 11995              		.loc 1 2807 13 view .LVU3691
 11996 157e 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 11997              	.LBB1180:
 11998              	.LBB1179:
2783:src/keys.c    **** 	if (! State2.alphas )
 11999              		.loc 1 2783 15 view .LVU3692
 12000 1582 61F3C302 		bfi	r2, r1, #3, #1
 12001 1586 88F81520 		strb	r2, [r8, #21]
2784:src/keys.c    **** 		State2.alphashift = 0;
 12002              		.loc 1 2784 2 is_stmt 1 view .LVU3693
2785:src/keys.c    **** }
 12003              		.loc 1 2785 3 view .LVU3694
 12004              	.LBE1179:
 12005              	.LBE1180:
2807:src/keys.c    **** 			return STATE_UNFINISHED;
 12006              		.loc 1 2807 3 view .LVU3695
2807:src/keys.c    **** 			return STATE_UNFINISHED;
 12007              		.loc 1 2807 6 is_stmt 0 view .LVU3696
 12008 158a 002B     		cmp	r3, #0
 12009 158c 3FF489A8 		beq	.L1104
2809:src/keys.c    **** 			State2.digval2 = 0;
 12010              		.loc 1 2809 8 is_stmt 1 view .LVU3697
2809:src/keys.c    **** 			State2.digval2 = 0;
 12011              		.loc 1 2809 11 is_stmt 0 view .LVU3698
 12012 1590 012B     		cmp	r3, #1
2810:src/keys.c    **** 		goto fin;
 12013              		.loc 1 2810 19 view .LVU3699
 12014 1592 4FF00004 		mov	r4, #0
2809:src/keys.c    **** 			State2.digval2 = 0;
 12015              		.loc 1 2809 11 view .LVU3700
 12016 1596 7FF46FAB 		bne	.L935
2810:src/keys.c    **** 		goto fin;
 12017              		.loc 1 2810 4 is_stmt 1 view .LVU3701
2810:src/keys.c    **** 		goto fin;
 12018              		.loc 1 2810 19 is_stmt 0 view .LVU3702
 12019 159a 88F80A40 		strb	r4, [r8, #10]
 12020 159e FFF76BBB 		b	.L935
 12021              	.LVL1013:
 12022              	.L1365:
2810:src/keys.c    **** 		goto fin;
 12023              		.loc 1 2810 19 view .LVU3703
 12024              	.LBE1184:
 12025              	.LBE1277:
 12026              	.LBB1278:
 12027              	.LBB1107:
 12028              	.LBB1099:
2913:src/keys.c    **** 		else if (nn != NO_REG)
 12029              		.loc 1 2913 4 is_stmt 1 view .LVU3704
2915:src/keys.c    **** 	}
 12030              		.loc 1 2915 6 is_stmt 0 view .LVU3705
ARM GAS  /tmp/cc8xFAqJ.s 			page 337


 12031 15a2 9942     		cmp	r1, r3
 12032 15a4 08BF     		it	eq
 12033 15a6 0A23     		moveq	r3, #10
 12034              	.LVL1014:
2915:src/keys.c    **** 	}
 12035              		.loc 1 2915 6 view .LVU3706
 12036 15a8 FFF7EEB9 		b	.L884
 12037              	.LVL1015:
 12038              	.L1337:
2915:src/keys.c    **** 	}
 12039              		.loc 1 2915 6 view .LVU3707
 12040 15ac 0093     		str	r3, [sp]
 12041              	.LBE1099:
 12042              	.LBE1107:
 12043              	.LBE1278:
 12044              	.LBB1279:
 12045              	.LBB810:
 12046              	.LBB799:
 373:src/keys.c    **** #else
 12047              		.loc 1 373 45 view .LVU3708
 12048 15ae FFF7FEFF 		bl	shift_down
 12049              	.LVL1016:
 373:src/keys.c    **** #else
 12050              		.loc 1 373 42 view .LVU3709
 12051 15b2 0328     		cmp	r0, #3
 12052 15b4 72D0     		beq	.L916
 373:src/keys.c    **** #else
 12053              		.loc 1 373 73 view .LVU3710
 12054 15b6 009B     		ldr	r3, [sp]
 12055 15b8 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 12056 15bc 9C46     		mov	ip, r3
 377:src/keys.c    ****   }
 12057              		.loc 1 377 9 view .LVU3711
 12058 15be 0C21     		movs	r1, #12
 371:src/keys.c    **** #ifndef WINGUI
 12059              		.loc 1 371 8 view .LVU3712
 12060 15c0 8B4B     		ldr	r3, .L1413+4
 12061 15c2 FEF750BE 		b	.L915
 12062              	.LVL1017:
 12063              	.L1344:
 371:src/keys.c    **** #ifndef WINGUI
 12064              		.loc 1 371 8 view .LVU3713
 12065              	.LBE799:
 12066              	.LBE810:
 12067              	.LBE1279:
3340:src/keys.c    **** 	}
 12068              		.loc 1 3340 3 is_stmt 1 view .LVU3714
 12069              	.LBB1280:
 12070              	.LBI817:
1275:src/keys.c    **** 
 12071              		.loc 1 1275 12 view .LVU3715
 12072              	.LBB879:
1277:src/keys.c    **** 
 12073              		.loc 1 1277 2 view .LVU3716
 12074              	.LBB820:
 12075              	.LBI820:
  96:src/keys.c    **** 	enum shifts s = shift_down();
ARM GAS  /tmp/cc8xFAqJ.s 			page 338


 12076              		.loc 1 96 13 view .LVU3717
 12077              	.LBB821:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12078              		.loc 1 97 2 view .LVU3718
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 12079              		.loc 1 97 18 is_stmt 0 view .LVU3719
 12080 15c6 FFF7FEFF 		bl	shift_down
 12081              	.LVL1018:
  98:src/keys.c    **** }
 12082              		.loc 1 98 2 is_stmt 1 view .LVU3720
  98:src/keys.c    **** }
 12083              		.loc 1 98 52 is_stmt 0 view .LVU3721
 12084 15ca 8346     		mov	fp, r0
 12085              	.LVL1019:
  98:src/keys.c    **** }
 12086              		.loc 1 98 52 view .LVU3722
 12087 15cc 08B9     		cbnz	r0, .L1033
 12088 15ce 98F810B0 		ldrb	fp, [r8, #16]	@ zero_extendqisi2
 12089              	.L1033:
 12090              	.LVL1020:
  98:src/keys.c    **** }
 12091              		.loc 1 98 52 view .LVU3723
 12092              	.LBE821:
 12093              	.LBE820:
1281:src/keys.c    **** 		return process_h_shifted (c);
 12094              		.loc 1 1281 2 is_stmt 1 view .LVU3724
1281:src/keys.c    **** 		return process_h_shifted (c);
 12095              		.loc 1 1281 5 is_stmt 0 view .LVU3725
 12096 15d2 042C     		cmp	r4, #4
 12097 15d4 3FF661AF 		bhi	.L1034
1281:src/keys.c    **** 		return process_h_shifted (c);
 12098              		.loc 1 1281 17 view .LVU3726
 12099 15d8 BBF1030F 		cmp	fp, #3
 12100 15dc 00F03B83 		beq	.L1389
1286:src/keys.c    **** 		convert_regK ((enum trig_modes) (c-K10));
 12101              		.loc 1 1286 2 is_stmt 1 view .LVU3727
1286:src/keys.c    **** 		convert_regK ((enum trig_modes) (c-K10));
 12102              		.loc 1 1286 5 is_stmt 0 view .LVU3728
 12103 15e0 BBF1020F 		cmp	fp, #2
 12104 15e4 00F0A582 		beq	.L1037
 12105              	.L1036:
1289:src/keys.c    **** 		return process_fg_shifted (c);
 12106              		.loc 1 1289 2 is_stmt 1 view .LVU3729
1289:src/keys.c    **** 		return process_fg_shifted (c);
 12107              		.loc 1 1289 5 is_stmt 0 view .LVU3730
 12108 15e8 631F     		subs	r3, r4, #5
 12109 15ea 032B     		cmp	r3, #3
 12110 15ec 3FF69EAE 		bhi	.L1039
1289:src/keys.c    **** 		return process_fg_shifted (c);
 12111              		.loc 1 1289 53 view .LVU3731
 12112 15f0 0BF1FF33 		add	r3, fp, #-1
1289:src/keys.c    **** 		return process_fg_shifted (c);
 12113              		.loc 1 1289 32 view .LVU3732
 12114 15f4 DBB2     		uxtb	r3, r3
 12115 15f6 012B     		cmp	r3, #1
 12116 15f8 7FF65AAF 		bls	.L1303
 12117              	.L1040:
ARM GAS  /tmp/cc8xFAqJ.s 			page 339


1319:src/keys.c    **** 		finish_cpx_entry(0); // finish entry for all of them - no lift
 12118              		.loc 1 1319 2 is_stmt 1 view .LVU3733
1319:src/keys.c    **** 		finish_cpx_entry(0); // finish entry for all of them - no lift
 12119              		.loc 1 1319 5 is_stmt 0 view .LVU3734
 12120 15fc BBF1000F 		cmp	fp, #0
 12121 1600 40F09E82 		bne	.L1297
1392:src/keys.c    **** 	case (K61):
 12122              		.loc 1 1392 2 is_stmt 1 view .LVU3735
 12123 1604 231F     		subs	r3, r4, #4
 12124 1606 292B     		cmp	r3, #41
 12125 1608 00F28A82 		bhi	.L1068
 12126 160c DFE813F0 		tbh	[pc, r3, lsl #1]
 12127              	.L1070:
 12128 1610 3E02     		.2byte	(.L1072-.L1070)/2
 12129 1612 8802     		.2byte	(.L1068-.L1070)/2
 12130 1614 8802     		.2byte	(.L1068-.L1070)/2
 12131 1616 8802     		.2byte	(.L1068-.L1070)/2
 12132 1618 8802     		.2byte	(.L1068-.L1070)/2
 12133 161a 8802     		.2byte	(.L1068-.L1070)/2
 12134 161c 8802     		.2byte	(.L1068-.L1070)/2
 12135 161e 8802     		.2byte	(.L1068-.L1070)/2
 12136 1620 8802     		.2byte	(.L1068-.L1070)/2
 12137 1622 8802     		.2byte	(.L1068-.L1070)/2
 12138 1624 7D02     		.2byte	(.L1073-.L1070)/2
 12139 1626 3702     		.2byte	(.L1071-.L1070)/2
 12140 1628 3E02     		.2byte	(.L1072-.L1070)/2
 12141 162a 8802     		.2byte	(.L1068-.L1070)/2
 12142 162c 8802     		.2byte	(.L1068-.L1070)/2
 12143 162e 3702     		.2byte	(.L1071-.L1070)/2
 12144 1630 3702     		.2byte	(.L1071-.L1070)/2
 12145 1632 3702     		.2byte	(.L1071-.L1070)/2
 12146 1634 8802     		.2byte	(.L1068-.L1070)/2
 12147 1636 8802     		.2byte	(.L1068-.L1070)/2
 12148 1638 8802     		.2byte	(.L1068-.L1070)/2
 12149 163a 3702     		.2byte	(.L1071-.L1070)/2
 12150 163c 3702     		.2byte	(.L1071-.L1070)/2
 12151 163e 3702     		.2byte	(.L1071-.L1070)/2
 12152 1640 8802     		.2byte	(.L1068-.L1070)/2
 12153 1642 8802     		.2byte	(.L1068-.L1070)/2
 12154 1644 8802     		.2byte	(.L1068-.L1070)/2
 12155 1646 3702     		.2byte	(.L1071-.L1070)/2
 12156 1648 3702     		.2byte	(.L1071-.L1070)/2
 12157 164a 3702     		.2byte	(.L1071-.L1070)/2
 12158 164c 8802     		.2byte	(.L1068-.L1070)/2
 12159 164e 8802     		.2byte	(.L1068-.L1070)/2
 12160 1650 8802     		.2byte	(.L1068-.L1070)/2
 12161 1652 3702     		.2byte	(.L1071-.L1070)/2
 12162 1654 3702     		.2byte	(.L1071-.L1070)/2
 12163 1656 8802     		.2byte	(.L1068-.L1070)/2
 12164 1658 8802     		.2byte	(.L1068-.L1070)/2
 12165 165a 8802     		.2byte	(.L1068-.L1070)/2
 12166 165c 8802     		.2byte	(.L1068-.L1070)/2
 12167 165e 8802     		.2byte	(.L1068-.L1070)/2
 12168 1660 8802     		.2byte	(.L1068-.L1070)/2
 12169 1662 2802     		.2byte	(.L1069-.L1070)/2
 12170              	.LVL1021:
 12171              		.p2align 1
ARM GAS  /tmp/cc8xFAqJ.s 			page 340


 12172              	.L1384:
1392:src/keys.c    **** 	case (K61):
 12173              		.loc 1 1392 2 is_stmt 0 view .LVU3736
 12174              	.LBE879:
 12175              	.LBE1280:
 12176              	.LBB1281:
 12177              	.LBB1013:
3121:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 12178              		.loc 1 3121 50 view .LVU3737
 12179 1664 0D2C     		cmp	r4, #13
 12180 1666 7FF410AD 		bne	.L980
3122:src/keys.c    **** 		set_smode(SDISP_SHOW);
 12181              		.loc 1 3122 3 is_stmt 1 view .LVU3738
 12182 166a B9F1010F 		cmp	r9, #1
 12183 166e 14BF     		ite	ne
 12184 1670 2C20     		movne	r0, #44
 12185              	.LVL1022:
3122:src/keys.c    **** 		set_smode(SDISP_SHOW);
 12186              		.loc 1 3122 3 is_stmt 0 view .LVU3739
 12187 1672 2B20     		moveq	r0, #43
 12188 1674 FFF7FEFF 		bl	set_window
 12189              	.LVL1023:
3123:src/keys.c    **** 	}
 12190              		.loc 1 3123 3 is_stmt 1 view .LVU3740
 12191              	.LBB1008:
 12192              	.LBI1008:
 731:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 12193              		.loc 1 731 13 view .LVU3741
 12194              	.LBB1009:
 732:src/keys.c    **** }
 12195              		.loc 1 732 2 view .LVU3742
 732:src/keys.c    **** }
 12196              		.loc 1 732 15 is_stmt 0 view .LVU3743
 12197 1678 98F81120 		ldrb	r2, [r8, #17]	@ zero_extendqisi2
 12198 167c 3368     		ldr	r3, [r6]
 12199 167e 013A     		subs	r2, r2, #1
 12200 1680 18BF     		it	ne
 12201 1682 0122     		movne	r2, #1
 12202 1684 88F81120 		strb	r2, [r8, #17]
 12203              	.LVL1024:
 732:src/keys.c    **** }
 12204              		.loc 1 732 15 view .LVU3744
 12205              	.LBE1009:
 12206              	.LBE1008:
3130:src/keys.c    **** 	case K_DOWN:
 12207              		.loc 1 3130 2 is_stmt 1 view .LVU3745
3130:src/keys.c    **** 	case K_DOWN:
 12208              		.loc 1 3130 2 is_stmt 0 view .LVU3746
 12209              	.LBE1013:
 12210              	.LBE1281:
 12211              	.LBE1351:
 12212              	.LBE1420:
3572:src/keys.c    ****     case STATE_SST:
 12213              		.loc 1 3572 5 is_stmt 1 view .LVU3747
 12214              	.LBB1421:
 12215              	.LBB1352:
 12216              	.LBB1282:
ARM GAS  /tmp/cc8xFAqJ.s 			page 341


 12217              	.LBB1014:
3181:src/keys.c    **** 	}
 12218              		.loc 1 3181 10 is_stmt 0 view .LVU3748
 12219 1688 3324     		movs	r4, #51
 12220 168a FEF714BD 		b	.L801
 12221              	.LVL1025:
 12222              	.L1381:
3105:src/keys.c    **** 	const int g_max = global_regs();
 12223              		.loc 1 3105 33 view .LVU3749
 12224 168e FFF7FEFF 		bl	local_regs
 12225              	.LVL1026:
 12226 1692 8246     		mov	r10, r0
 12227 1694 E9E4     		b	.L972
 12228              	.LVL1027:
 12229              	.L1385:
3126:src/keys.c    **** 		goto reset_window;
 12230              		.loc 1 3126 3 is_stmt 1 view .LVU3750
3126:src/keys.c    **** 		goto reset_window;
 12231              		.loc 1 3126 17 is_stmt 0 view .LVU3751
 12232 1696 A8F808B0 		strh	fp, [r8, #8]	@ movhi
3127:src/keys.c    **** 	}
 12233              		.loc 1 3127 3 is_stmt 1 view .LVU3752
 12234 169a 4DE5     		b	.L976
 12235              	.LVL1028:
 12236              	.L916:
3127:src/keys.c    **** 	}
 12237              		.loc 1 3127 3 is_stmt 0 view .LVU3753
 12238 169c 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 12239              	.LBE1014:
 12240              	.LBE1282:
 12241              	.LBB1283:
 12242              	.LBB811:
 12243              	.LBB800:
 371:src/keys.c    **** #ifndef WINGUI
 12244              		.loc 1 371 8 view .LVU3754
 12245 16a0 534B     		ldr	r3, .L1413+4
 377:src/keys.c    ****   }
 12246              		.loc 1 377 9 view .LVU3755
 12247 16a2 0C21     		movs	r1, #12
 373:src/keys.c    **** #else
 12248              		.loc 1 373 73 view .LVU3756
 12249 16a4 4FF0020C 		mov	ip, #2
 12250 16a8 FEF7DDBD 		b	.L915
 12251              	.LVL1029:
 12252              	.L1371:
 373:src/keys.c    **** #else
 12253              		.loc 1 373 73 view .LVU3757
 12254              	.LBE800:
 287:src/keys.c    **** 					}
 12255              		.loc 1 287 7 is_stmt 1 view .LVU3758
 12256 16ac 0120     		movs	r0, #1
 12257 16ae FFF7FEFF 		bl	finish_cpx_entry
 12258              	.LVL1030:
 287:src/keys.c    **** 					}
 12259              		.loc 1 287 7 is_stmt 0 view .LVU3759
 12260              	.LBE811:
 12261              	.LBE1283:
ARM GAS  /tmp/cc8xFAqJ.s 			page 342


3303:src/keys.c    **** 		if (is_bad_cmdline())
 12262              		.loc 1 3303 2 is_stmt 1 view .LVU3760
 12263              	.LBB1284:
 12264              	.LBB812:
 289:src/keys.c    **** 				default:
 12265              		.loc 1 289 13 is_stmt 0 view .LVU3761
 12266 16b2 1123     		movs	r3, #17
 12267 16b4 FFF7FEB9 		b	.L903
 12268              	.LVL1031:
 12269              	.L1000:
 289:src/keys.c    **** 				default:
 12270              		.loc 1 289 13 view .LVU3762
 12271              	.LBE812:
 12272              	.LBE1284:
 12273              	.LBB1285:
 12274              	.LBB969:
 12275              	.LBB951:
 12276              	.LBB942:
 491:src/keys.c    **** }
 12277              		.loc 1 491 2 is_stmt 1 view .LVU3763
 12278              	.LBB935:
 131:src/keys.c    **** {
 12279              		.loc 1 131 12 view .LVU3764
 12280              	.LBB929:
 133:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 12281              		.loc 1 133 2 view .LVU3765
 143:src/keys.c    **** }
 12282              		.loc 1 143 2 view .LVU3766
 143:src/keys.c    **** }
 12283              		.loc 1 143 2 is_stmt 0 view .LVU3767
 12284              	.LBE929:
 12285              	.LBE935:
 491:src/keys.c    **** }
 12286              		.loc 1 491 49 view .LVU3768
 12287 16b8 4C4A     		ldr	r2, .L1413
 12288              	.LBB936:
 12289              	.LBB930:
 143:src/keys.c    **** }
 12290              		.loc 1 143 23 view .LVU3769
 12291 16ba 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 12292              	.LBE930:
 12293              	.LBE936:
 12294              	.LBE942:
 12295              	.LBE951:
1760:src/keys.c    **** 
 12296              		.loc 1 1760 19 view .LVU3770
 12297 16bc 88F80D00 		strb	r0, [r8, #13]
 12298              	.LBB952:
 12299              	.LBB943:
 491:src/keys.c    **** }
 12300              		.loc 1 491 49 view .LVU3771
 12301 16c0 4FF0060C 		mov	ip, #6
 12302 16c4 0CFB0323 		mla	r3, ip, r3, r2
 12303 16c8 063C     		subs	r4, r4, #6
 12304              	.LVL1032:
 491:src/keys.c    **** }
 12305              		.loc 1 491 49 view .LVU3772
ARM GAS  /tmp/cc8xFAqJ.s 			page 343


 12306 16ca 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 12307              	.LVL1033:
 491:src/keys.c    **** }
 12308              		.loc 1 491 49 view .LVU3773
 12309              	.LBE943:
 12310              	.LBE952:
1760:src/keys.c    **** 
 12311              		.loc 1 1760 2 is_stmt 1 view .LVU3774
1762:src/keys.c    **** 	case K10:	// STO
 12312              		.loc 1 1762 2 view .LVU3775
 12313 16cc 212C     		cmp	r4, #33
 12314 16ce 3FF620AE 		bhi	.L1003
 12315 16d2 01A3     		adr	r3, .L1117
 12316 16d4 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 12317              		.p2align 2
 12318              	.L1117:
 12319 16d8 091A0000 		.word	.L1012+1
 12320 16dc 13130000 		.word	.L1003+1
 12321 16e0 13130000 		.word	.L1003+1
 12322 16e4 13130000 		.word	.L1003+1
 12323 16e8 13130000 		.word	.L1003+1
 12324 16ec 13130000 		.word	.L1003+1
 12325 16f0 17190000 		.word	.L1017+1
 12326 16f4 13130000 		.word	.L1003+1
 12327 16f8 13130000 		.word	.L1003+1
 12328 16fc 13130000 		.word	.L1003+1
 12329 1700 9F040000 		.word	.L1018+1
 12330 1704 13130000 		.word	.L1003+1
 12331 1708 FB180000 		.word	.L1198+1
 12332 170c 13130000 		.word	.L1003+1
 12333 1710 13130000 		.word	.L1003+1
 12334 1714 13130000 		.word	.L1003+1
 12335 1718 13130000 		.word	.L1003+1
 12336 171c 13130000 		.word	.L1003+1
 12337 1720 DD180000 		.word	.L1199+1
 12338 1724 13130000 		.word	.L1003+1
 12339 1728 13130000 		.word	.L1003+1
 12340 172c 13130000 		.word	.L1003+1
 12341 1730 13130000 		.word	.L1003+1
 12342 1734 13130000 		.word	.L1003+1
 12343 1738 13130000 		.word	.L1003+1
 12344 173c 13130000 		.word	.L1003+1
 12345 1740 13130000 		.word	.L1003+1
 12346 1744 13130000 		.word	.L1003+1
 12347 1748 13130000 		.word	.L1003+1
 12348 174c 13130000 		.word	.L1003+1
 12349 1750 BF180000 		.word	.L1029+1
 12350 1754 13130000 		.word	.L1003+1
 12351 1758 13130000 		.word	.L1003+1
 12352 175c 49190000 		.word	.L1004+1
 12353              	.LVL1034:
 12354              		.p2align 1
 12355              	.L1376:
1762:src/keys.c    **** 	case K10:	// STO
 12356              		.loc 1 1762 2 is_stmt 0 view .LVU3776
 12357              	.LBE969:
 12358              	.LBE1285:
ARM GAS  /tmp/cc8xFAqJ.s 			page 344


 12359              	.LBB1286:
 12360              	.LBB1185:
2840:src/keys.c    **** 		State2.numdigit = 1;
 12361              		.loc 1 2840 3 is_stmt 1 view .LVU3777
2841:src/keys.c    **** 		return STATE_UNFINISHED;
 12362              		.loc 1 2841 19 is_stmt 0 view .LVU3778
 12363 1760 0122     		movs	r2, #1
2840:src/keys.c    **** 		State2.numdigit = 1;
 12364              		.loc 1 2840 17 view .LVU3779
 12365 1762 A8F80840 		strh	r4, [r8, #8]	@ movhi
2841:src/keys.c    **** 		return STATE_UNFINISHED;
 12366              		.loc 1 2841 3 is_stmt 1 view .LVU3780
 12367 1766 3368     		ldr	r3, [r6]
2841:src/keys.c    **** 		return STATE_UNFINISHED;
 12368              		.loc 1 2841 19 is_stmt 0 view .LVU3781
 12369 1768 88F80B20 		strb	r2, [r8, #11]
2842:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12370              		.loc 1 2842 3 is_stmt 1 view .LVU3782
2842:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12371              		.loc 1 2842 10 is_stmt 0 view .LVU3783
 12372 176c 3324     		movs	r4, #51
 12373              	.LVL1035:
2842:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12374              		.loc 1 2842 10 view .LVU3784
 12375 176e FEF7A2BC 		b	.L801
 12376              	.LVL1036:
 12377              	.L1370:
2842:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 12378              		.loc 1 2842 10 view .LVU3785
 12379              	.LBE1185:
 12380              	.LBE1286:
 12381              	.LBB1287:
 12382              	.LBB813:
 298:src/keys.c    **** 				stack_begin (1);
 12383              		.loc 1 298 5 is_stmt 1 view .LVU3786
 12384 1772 41F00201 		orr	r1, r1, #2
 12385 1776 80F8AC17 		strb	r1, [r0, #1964]
 299:src/keys.c    **** 			}
 12386              		.loc 1 299 5 view .LVU3787
 12387 177a 5846     		mov	r0, fp
 12388 177c FFF7FEFF 		bl	stack_begin
 12389              	.LVL1037:
 299:src/keys.c    **** 			}
 12390              		.loc 1 299 5 is_stmt 0 view .LVU3788
 12391              	.LBE813:
 12392              	.LBE1287:
3303:src/keys.c    **** 		if (is_bad_cmdline())
 12393              		.loc 1 3303 2 is_stmt 1 view .LVU3789
 12394              	.LBB1288:
 12395              	.LBB814:
 306:src/keys.c    **** 		}
 12396              		.loc 1 306 11 is_stmt 0 view .LVU3790
 12397 1780 1023     		movs	r3, #16
 12398 1782 FFF797B9 		b	.L903
 12399              	.LVL1038:
 12400              	.L1380:
 306:src/keys.c    **** 		}
ARM GAS  /tmp/cc8xFAqJ.s 			page 345


 12401              		.loc 1 306 11 view .LVU3791
 12402              	.LBE814:
 12403              	.LBE1288:
 12404              	.LBB1289:
 12405              	.LBB1235:
2983:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 12406              		.loc 1 2983 3 is_stmt 1 view .LVU3792
2983:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 12407              		.loc 1 2983 8 is_stmt 0 view .LVU3793
 12408 1786 4FEA8B34 		lsl	r4, fp, #14
 12409              	.LVL1039:
2983:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 12410              		.loc 1 2983 6 view .LVU3794
 12411 178a 44F00104 		orr	r4, r4, #1
 12412              	.LVL1040:
2984:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 12413              		.loc 1 2984 3 is_stmt 1 view .LVU3795
2984:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 12414              		.loc 1 2984 9 is_stmt 0 view .LVU3796
 12415 178e 2046     		mov	r0, r4
 12416 1790 FFF7FEFF 		bl	is_label_or_end_at
 12417              	.LVL1041:
2984:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 12418              		.loc 1 2984 6 view .LVU3797
 12419 1794 0246     		mov	r2, r0
 12420 1796 0028     		cmp	r0, #0
 12421 1798 00F05581 		beq	.L1390
 12422              	.L948:
2986:src/keys.c    **** 		return STATE_UNFINISHED;
 12423              		.loc 1 2986 3 is_stmt 1 view .LVU3798
2986:src/keys.c    **** 		return STATE_UNFINISHED;
 12424              		.loc 1 2986 17 is_stmt 0 view .LVU3799
 12425 179c A8F80840 		strh	r4, [r8, #8]	@ movhi
2987:src/keys.c    **** 	}
 12426              		.loc 1 2987 3 is_stmt 1 view .LVU3800
 12427 17a0 3368     		ldr	r3, [r6]
2987:src/keys.c    **** 	}
 12428              		.loc 1 2987 10 is_stmt 0 view .LVU3801
 12429 17a2 3324     		movs	r4, #51
 12430              	.LVL1042:
2987:src/keys.c    **** 	}
 12431              		.loc 1 2987 10 view .LVU3802
 12432 17a4 FEF787BC 		b	.L801
 12433              	.LVL1043:
 12434              	.L1379:
2976:src/keys.c    **** 	const int direct = State2.runmode;
 12435              		.loc 1 2976 37 view .LVU3803
 12436 17a8 5046     		mov	r0, r10
 12437 17aa FFF7FEFF 		bl	getprog
 12438              	.LVL1044:
2976:src/keys.c    **** 	const int direct = State2.runmode;
 12439              		.loc 1 2976 63 view .LVU3804
 12440 17ae 20F47062 		bic	r2, r0, #3840
 12441 17b2 FFF7E7BA 		b	.L945
 12442              	.LVL1045:
 12443              	.L1132:
2976:src/keys.c    **** 	const int direct = State2.runmode;
ARM GAS  /tmp/cc8xFAqJ.s 			page 346


 12444              		.loc 1 2976 63 view .LVU3805
 12445              	.LBE1235:
 12446              	.LBE1289:
 12447              	.LBB1290:
 12448              	.LBB815:
 306:src/keys.c    **** 		}
 12449              		.loc 1 306 11 view .LVU3806
 12450 17b6 1023     		movs	r3, #16
 12451 17b8 FFF77CB9 		b	.L903
 12452              	.LVL1046:
 12453              	.L1383:
 306:src/keys.c    **** 		}
 12454              		.loc 1 306 11 view .LVU3807
 12455              	.LBE815:
 12456              	.LBE1290:
 12457              	.LBB1291:
 12458              	.LBB1015:
 12459              	.LBB1010:
3115:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12460              		.loc 1 3115 3 is_stmt 1 view .LVU3808
3115:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12461              		.loc 1 3115 19 is_stmt 0 view .LVU3809
 12462 17bc B8F80810 		ldrh	r1, [r8, #8]
3115:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12463              		.loc 1 3115 27 view .LVU3810
 12464 17c0 0A23     		movs	r3, #10
3115:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12465              		.loc 1 3115 32 view .LVU3811
 12466 17c2 03FB01B2 		mla	r2, r3, r1, fp
3115:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12467              		.loc 1 3115 37 view .LVU3812
 12468 17c6 6424     		movs	r4, #100
 12469              	.LVL1047:
3115:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 12470              		.loc 1 3115 37 view .LVU3813
 12471 17c8 B2FBF4F3 		udiv	r3, r2, r4
 12472 17cc 04FB1323 		mls	r3, r4, r3, r2
 12473              	.LVL1048:
3116:src/keys.c    **** 			dv = n;
 12474              		.loc 1 3116 3 is_stmt 1 view .LVU3814
3116:src/keys.c    **** 			dv = n;
 12475              		.loc 1 3116 6 is_stmt 0 view .LVU3815
 12476 17d0 5345     		cmp	r3, r10
 12477 17d2 09DA     		bge	.L978
3116:src/keys.c    **** 			dv = n;
 12478              		.loc 1 3116 21 view .LVU3816
 12479 17d4 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
3116:src/keys.c    **** 			dv = n;
 12480              		.loc 1 3116 17 view .LVU3817
 12481 17d8 D207     		lsls	r2, r2, #31
 12482 17da 3FF5ABAC 		bmi	.L1301
3116:src/keys.c    **** 			dv = n;
 12483              		.loc 1 3116 36 view .LVU3818
 12484 17de 8842     		cmp	r0, r1
 12485 17e0 02DD     		ble	.L978
3116:src/keys.c    **** 			dv = n;
 12486              		.loc 1 3116 63 view .LVU3819
ARM GAS  /tmp/cc8xFAqJ.s 			page 347


 12487 17e2 9842     		cmp	r0, r3
 12488 17e4 3FF7A6AC 		bgt	.L1301
 12489              	.L978:
3117:src/keys.c    **** 		State2.digval = dv;
 12490              		.loc 1 3117 4 is_stmt 1 view .LVU3820
3117:src/keys.c    **** 		State2.digval = dv;
 12491              		.loc 1 3117 7 is_stmt 0 view .LVU3821
 12492 17e8 5B46     		mov	r3, fp
 12493              	.LVL1049:
3118:src/keys.c    **** 		goto reset_window;
 12494              		.loc 1 3118 3 is_stmt 1 view .LVU3822
 12495 17ea A3E4     		b	.L1301
 12496              	.L1414:
 12497              		.align	2
 12498              	.L1413:
 12499 17ec 00000000 		.word	.LANCHOR15
 12500 17f0 00000000 		.word	.LANCHOR17
 12501              	.LVL1050:
 12502              	.L1361:
3118:src/keys.c    **** 		goto reset_window;
 12503              		.loc 1 3118 3 is_stmt 0 view .LVU3823
 12504              	.LBE1010:
 12505              	.LBE1015:
 12506              	.LBE1291:
 12507              	.LBB1292:
 12508              	.LBB1070:
1726:src/keys.c    **** 		if (rawpc == 1)
 12509              		.loc 1 1726 3 is_stmt 1 view .LVU3824
1726:src/keys.c    **** 		if (rawpc == 1)
 12510              		.loc 1 1726 11 is_stmt 0 view .LVU3825
 12511 17f4 DFF8B8A4 		ldr	r10, .L1415+4
 12512 17f8 DAF80030 		ldr	r3, [r10]
 12513              	.LVL1051:
1726:src/keys.c    **** 		if (rawpc == 1)
 12514              		.loc 1 1726 9 view .LVU3826
 12515 17fc B3F8E007 		ldrh	r0, [r3, #2016]
 12516              	.LVL1052:
1727:src/keys.c    **** 			rawpc = 0;
 12517              		.loc 1 1727 3 is_stmt 1 view .LVU3827
1728:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
 12518              		.loc 1 1728 10 is_stmt 0 view .LVU3828
 12519 1800 0128     		cmp	r0, #1
 12520              	.LVL1053:
1729:src/keys.c    **** 		update_program_bounds(1);
 12521              		.loc 1 1729 3 is_stmt 1 view .LVU3829
 12522 1802 08BF     		it	eq
 12523 1804 0020     		moveq	r0, #0
 12524              	.LVL1054:
1729:src/keys.c    **** 		update_program_bounds(1);
 12525              		.loc 1 1729 3 is_stmt 0 view .LVU3830
 12526 1806 0021     		movs	r1, #0
 12527 1808 FFF7FEFF 		bl	do_dec
 12528              	.LVL1055:
1729:src/keys.c    **** 		update_program_bounds(1);
 12529              		.loc 1 1729 3 view .LVU3831
 12530 180c FFF7FEFF 		bl	set_pc
 12531              	.LVL1056:
ARM GAS  /tmp/cc8xFAqJ.s 			page 348


1730:src/keys.c    **** 		rawpc = ProgBegin;
 12532              		.loc 1 1730 3 is_stmt 1 view .LVU3832
 12533 1810 0120     		movs	r0, #1
 12534 1812 FFF7FEFF 		bl	update_program_bounds
 12535              	.LVL1057:
1731:src/keys.c    **** 		goto fin;
 12536              		.loc 1 1731 3 view .LVU3833
1731:src/keys.c    **** 		goto fin;
 12537              		.loc 1 1731 11 is_stmt 0 view .LVU3834
 12538 1816 DAF80030 		ldr	r3, [r10]
1731:src/keys.c    **** 		goto fin;
 12539              		.loc 1 1731 9 view .LVU3835
 12540 181a B3F8EC07 		ldrh	r0, [r3, #2028]
 12541              	.LVL1058:
1732:src/keys.c    **** 	}
 12542              		.loc 1 1732 3 is_stmt 1 view .LVU3836
 12543 181e FFF708B8 		b	.L847
 12544              	.LVL1059:
 12545              	.L817:
1732:src/keys.c    **** 	}
 12546              		.loc 1 1732 3 is_stmt 0 view .LVU3837
 12547              	.LBE1070:
 12548              	.LBE1292:
 12549              	.LBB1293:
 12550              	.LBB1272:
1245:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
 12551              		.loc 1 1245 3 is_stmt 1 view .LVU3838
 12552 1822 6420     		movs	r0, #100
 12553 1824 FFF7FEFF 		bl	get_reg_n
 12554              	.LVL1060:
 12555 1828 0446     		mov	r4, r0
 12556              	.LVL1061:
1245:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
 12557              		.loc 1 1245 33 is_stmt 0 view .LVU3839
 12558 182a 6E20     		movs	r0, #110
 12559 182c FFF7FEFF 		bl	get_reg_n
 12560              	.LVL1062:
 12561 1830 0146     		mov	r1, r0
1245:src/keys.c    **** 		copyreg (get_reg_n(regY_idx), get_reg_n(regK_idx));
 12562              		.loc 1 1245 3 view .LVU3840
 12563 1832 2046     		mov	r0, r4
 12564 1834 FFF7FEFF 		bl	copyreg
 12565              	.LVL1063:
1246:src/keys.c    **** 	}
 12566              		.loc 1 1246 3 is_stmt 1 view .LVU3841
 12567 1838 6520     		movs	r0, #101
 12568 183a C6E5     		b	.L1299
 12569              	.LVL1064:
 12570              	.L1382:
1246:src/keys.c    **** 	}
 12571              		.loc 1 1246 3 is_stmt 0 view .LVU3842
 12572              	.LBE1272:
 12573              	.LBE1293:
 12574              	.LBB1294:
 12575              	.LBB1016:
3109:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 12576              		.loc 1 3109 3 is_stmt 1 view .LVU3843
ARM GAS  /tmp/cc8xFAqJ.s 			page 349


3109:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 12577              		.loc 1 3109 7 is_stmt 0 view .LVU3844
 12578 183c FFF7FEFF 		bl	local_regs
 12579              	.LVL1065:
3109:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 12580              		.loc 1 3109 6 view .LVU3845
 12581 1840 68B1     		cbz	r0, .L974
3110:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12582              		.loc 1 3110 4 is_stmt 1 view .LVU3846
3110:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12583              		.loc 1 3110 19 is_stmt 0 view .LVU3847
 12584 1842 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3110:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12585              		.loc 1 3110 34 view .LVU3848
 12586 1846 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
3110:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12587              		.loc 1 3110 19 view .LVU3849
 12588 184a 03F00101 		and	r1, r3, #1
3110:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12589              		.loc 1 3110 34 view .LVU3850
 12590 184e 0A43     		orrs	r2, r1, r2
 12591 1850 0CBF     		ite	eq
 12592 1852 0122     		moveq	r2, #1
 12593 1854 0022     		movne	r2, #0
3110:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 12594              		.loc 1 3110 17 view .LVU3851
 12595 1856 62F30003 		bfi	r3, r2, #0, #1
 12596 185a 88F81630 		strb	r3, [r8, #22]
 12597              	.L974:
3111:src/keys.c    **** 		goto reset_window;
 12598              		.loc 1 3111 3 is_stmt 1 view .LVU3852
3111:src/keys.c    **** 		goto reset_window;
 12599              		.loc 1 3111 32 is_stmt 0 view .LVU3853
 12600 185e 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3111:src/keys.c    **** 		goto reset_window;
 12601              		.loc 1 3111 17 view .LVU3854
 12602 1862 13F0010F 		tst	r3, #1
 12603 1866 14BF     		ite	ne
 12604 1868 0023     		movne	r3, #0
 12605 186a 6423     		moveq	r3, #100
 12606 186c A8F80830 		strh	r3, [r8, #8]	@ movhi
3112:src/keys.c    **** 	}
 12607              		.loc 1 3112 3 is_stmt 1 view .LVU3855
 12608 1870 62E4     		b	.L976
 12609              	.LVL1066:
 12610              	.L1375:
3112:src/keys.c    **** 	}
 12611              		.loc 1 3112 3 is_stmt 0 view .LVU3856
 12612              	.LBE1016:
 12613              	.LBE1294:
 12614              	.LBB1295:
 12615              	.LBB1186:
 12616              	.LBB1181:
 12617              	.LBB1170:
 488:src/keys.c    **** 			shift = SHIFT_LC_G;
 12618              		.loc 1 488 8 is_stmt 1 view .LVU3857
 489:src/keys.c    **** 	}
ARM GAS  /tmp/cc8xFAqJ.s 			page 350


 12619              		.loc 1 489 10 is_stmt 0 view .LVU3858
 12620 1872 0229     		cmp	r1, #2
 12621 1874 08BF     		it	eq
 12622 1876 0521     		moveq	r1, #5
 12623              	.LVL1067:
 489:src/keys.c    **** 	}
 12624              		.loc 1 489 10 view .LVU3859
 12625 1878 FFF7DDB9 		b	.L936
 12626              	.LVL1068:
 12627              	.L1311:
 489:src/keys.c    **** 	}
 12628              		.loc 1 489 10 view .LVU3860
 12629              	.LBE1170:
 12630              	.LBE1181:
 12631              	.LBE1186:
 12632              	.LBE1295:
 12633              	.LBB1296:
 12634              	.LBB970:
1847:src/keys.c    **** 		else if (shift == SHIFT_H)
 12635              		.loc 1 1847 4 is_stmt 1 view .LVU3861
1847:src/keys.c    **** 		else if (shift == SHIFT_H)
 12636              		.loc 1 1847 34 is_stmt 0 view .LVU3862
 12637 187c 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 12638 1880 3368     		ldr	r3, [r6]
 12639 1882 C2F30011 		ubfx	r1, r2, #4, #1
1847:src/keys.c    **** 		else if (shift == SHIFT_H)
 12640              		.loc 1 1847 26 view .LVU3863
 12641 1886 C1F10101 		rsb	r1, r1, #1
1847:src/keys.c    **** 		else if (shift == SHIFT_H)
 12642              		.loc 1 1847 22 view .LVU3864
 12643 188a 61F30412 		bfi	r2, r1, #4, #1
 12644 188e 88F81620 		strb	r2, [r8, #22]
1857:src/keys.c    **** 
 12645              		.loc 1 1857 10 view .LVU3865
 12646 1892 3324     		movs	r4, #51
 12647 1894 FEF70FBC 		b	.L801
 12648              	.LVL1069:
 12649              	.L1377:
1857:src/keys.c    **** 
 12650              		.loc 1 1857 10 view .LVU3866
 12651              	.LBE970:
 12652              	.LBE1296:
 12653              	.LBB1297:
 12654              	.LBB1187:
2844:src/keys.c    **** 		State2.numdigit = 2;
 12655              		.loc 1 2844 3 is_stmt 1 view .LVU3867
2845:src/keys.c    **** 		return STATE_UNFINISHED;
 12656              		.loc 1 2845 19 is_stmt 0 view .LVU3868
 12657 1898 0222     		movs	r2, #2
2844:src/keys.c    **** 		State2.numdigit = 2;
 12658              		.loc 1 2844 18 view .LVU3869
 12659 189a 88F80A40 		strb	r4, [r8, #10]
2845:src/keys.c    **** 		return STATE_UNFINISHED;
 12660              		.loc 1 2845 3 is_stmt 1 view .LVU3870
 12661 189e 3368     		ldr	r3, [r6]
2845:src/keys.c    **** 		return STATE_UNFINISHED;
 12662              		.loc 1 2845 19 is_stmt 0 view .LVU3871
ARM GAS  /tmp/cc8xFAqJ.s 			page 351


 12663 18a0 88F80B20 		strb	r2, [r8, #11]
2846:src/keys.c    **** 	}
 12664              		.loc 1 2846 3 is_stmt 1 view .LVU3872
2846:src/keys.c    **** 	}
 12665              		.loc 1 2846 10 is_stmt 0 view .LVU3873
 12666 18a4 3324     		movs	r4, #51
 12667              	.LVL1070:
2846:src/keys.c    **** 	}
 12668              		.loc 1 2846 10 view .LVU3874
 12669 18a6 FEF706BC 		b	.L801
 12670              	.LVL1071:
 12671              	.L1293:
2846:src/keys.c    **** 	}
 12672              		.loc 1 2846 10 view .LVU3875
 12673              	.LBE1187:
 12674              	.LBE1297:
 12675              	.LBE1352:
 12676              	.LBE1421:
3608:src/keys.c    **** 	NonProgrammable = 0;
 12677              		.loc 1 3608 26 discriminator 1 view .LVU3876
 12678 18aa 1368     		ldr	r3, [r2]
 12679 18ac 002B     		cmp	r3, #0
 12680 18ae 7EF465AE 		bne	.L1097
 12681 18b2 FEF7BFBD 		b	.L1098
 12682              	.LVL1072:
 12683              	.L1347:
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12684              		.loc 1 3609 2 is_stmt 1 view .LVU3877
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12685              		.loc 1 3609 18 is_stmt 0 view .LVU3878
 12686 18b6 0022     		movs	r2, #0
 12687 18b8 1A60     		str	r2, [r3]
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12688              		.loc 1 3610 2 is_stmt 1 view .LVU3879
 12689 18ba FEF7CCBE 		b	.L1096
 12690              	.LVL1073:
 12691              	.L1029:
 12692              	.LBB1422:
 12693              	.LBB1353:
 12694              	.LBB1298:
 12695              	.LBB971:
1852:src/keys.c    **** 		  display_current_menu();
 12696              		.loc 1 1852 5 view .LVU3880
 12697 18be 4FF0FF30 		mov	r0, #-1
 12698              	.LVL1074:
1852:src/keys.c    **** 		  display_current_menu();
 12699              		.loc 1 1852 5 is_stmt 0 view .LVU3881
 12700 18c2 FFF7FEFF 		bl	set_menu
 12701              	.LVL1075:
1853:src/keys.c    **** #endif
 12702              		.loc 1 1853 5 is_stmt 1 view .LVU3882
1857:src/keys.c    **** 
 12703              		.loc 1 1857 10 is_stmt 0 view .LVU3883
 12704 18c6 3324     		movs	r4, #51
1853:src/keys.c    **** #endif
 12705              		.loc 1 1853 5 view .LVU3884
 12706 18c8 FFF7FEFF 		bl	display_current_menu
ARM GAS  /tmp/cc8xFAqJ.s 			page 352


 12707              	.LVL1076:
1855:src/keys.c    **** 		}
 12708              		.loc 1 1855 5 is_stmt 1 view .LVU3885
 12709 18cc FFF7FEFF 		bl	init_state
 12710              	.LVL1077:
 12711 18d0 3368     		ldr	r3, [r6]
 12712 18d2 FEF7F0BB 		b	.L801
 12713              	.LVL1078:
 12714              	.L1007:
1834:src/keys.c    **** 	    if ( State2.runmode ) {
 12715              		.loc 1 1834 4 view .LVU3886
1834:src/keys.c    **** 	    if ( State2.runmode ) {
 12716              		.loc 1 1834 7 is_stmt 0 view .LVU3887
 12717 18d6 0028     		cmp	r0, #0
 12718 18d8 7FF41BAD 		bne	.L1003
 12719              	.L1199:
1835:src/keys.c    **** 	      // Alpha scroll right
 12720              		.loc 1 1835 6 is_stmt 1 view .LVU3888
1835:src/keys.c    **** 	      // Alpha scroll right
 12721              		.loc 1 1835 9 is_stmt 0 view .LVU3889
 12722 18dc 4C06     		lsls	r4, r1, #25
 12723 18de 7EF5F3AD 		bpl	.L1025
1837:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
 12724              		.loc 1 1837 8 is_stmt 1 view .LVU3890
1837:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
 12725              		.loc 1 1837 11 is_stmt 0 view .LVU3891
 12726 18e2 B9F1000F 		cmp	r9, #0
 12727 18e6 3EF4DCAE 		beq	.L1104
1838:src/keys.c    **** 	      return STATE_UNFINISHED;
 12728              		.loc 1 1838 3 is_stmt 1 view .LVU3892
1838:src/keys.c    **** 	      return STATE_UNFINISHED;
 12729              		.loc 1 1838 31 is_stmt 0 view .LVU3893
 12730 18ea 09F1FF39 		add	r9, r9, #-1
 12731              	.LVL1079:
1838:src/keys.c    **** 	      return STATE_UNFINISHED;
 12732              		.loc 1 1838 31 view .LVU3894
 12733 18ee 3368     		ldr	r3, [r6]
1838:src/keys.c    **** 	      return STATE_UNFINISHED;
 12734              		.loc 1 1838 20 view .LVU3895
 12735 18f0 88F80D90 		strb	r9, [r8, #13]
1839:src/keys.c    **** 	    }
 12736              		.loc 1 1839 15 view .LVU3896
 12737 18f4 3324     		movs	r4, #51
 12738 18f6 FEF7DEBB 		b	.L801
 12739              	.LVL1080:
 12740              	.L1198:
1806:src/keys.c    **** 	      // Alpha scroll left
 12741              		.loc 1 1806 6 is_stmt 1 view .LVU3897
1806:src/keys.c    **** 	      // Alpha scroll left
 12742              		.loc 1 1806 9 is_stmt 0 view .LVU3898
 12743 18fa 4B06     		lsls	r3, r1, #25
 12744 18fc 7EF5DCAD 		bpl	.L1021
1814:src/keys.c    **** 		alpha_pos += 1;
 12745              		.loc 1 1814 8 is_stmt 1 view .LVU3899
1814:src/keys.c    **** 		alpha_pos += 1;
 12746              		.loc 1 1814 11 is_stmt 0 view .LVU3900
 12747 1900 B9F1000F 		cmp	r9, #0
ARM GAS  /tmp/cc8xFAqJ.s 			page 353


 12748 1904 17D1     		bne	.L1022
 12749              	.LVL1081:
 12750              	.L1024:
1815:src/keys.c    **** 	      }
 12751              		.loc 1 1815 3 is_stmt 1 view .LVU3901
1815:src/keys.c    **** 	      }
 12752              		.loc 1 1815 13 is_stmt 0 view .LVU3902
 12753 1906 09F1010A 		add	r10, r9, #1
 12754              	.LVL1082:
 12755              	.L1023:
1822:src/keys.c    **** #else
 12756              		.loc 1 1822 8 is_stmt 1 view .LVU3903
 12757 190a 3368     		ldr	r3, [r6]
1822:src/keys.c    **** #else
 12758              		.loc 1 1822 25 is_stmt 0 view .LVU3904
 12759 190c 88F80DA0 		strb	r10, [r8, #13]
1827:src/keys.c    **** 	    }
 12760              		.loc 1 1827 8 is_stmt 1 view .LVU3905
1827:src/keys.c    **** 	    }
 12761              		.loc 1 1827 15 is_stmt 0 view .LVU3906
 12762 1910 3324     		movs	r4, #51
 12763 1912 FEF7D0BB 		b	.L801
 12764              	.LVL1083:
 12765              	.L1017:
1789:src/keys.c    **** 		State2.alphashift = 0;
 12766              		.loc 1 1789 3 is_stmt 1 view .LVU3907
1790:src/keys.c    **** #ifdef DM42
 12767              		.loc 1 1790 3 view .LVU3908
1789:src/keys.c    **** 		State2.alphashift = 0;
 12768              		.loc 1 1789 17 is_stmt 0 view .LVU3909
 12769 1916 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
1792:src/keys.c    **** 		display_current_menu();
 12770              		.loc 1 1792 3 view .LVU3910
 12771 191a 4FF0FF30 		mov	r0, #-1
 12772              	.LVL1084:
1789:src/keys.c    **** 		State2.alphashift = 0;
 12773              		.loc 1 1789 17 view .LVU3911
 12774 191e 23F01803 		bic	r3, r3, #24
 12775 1922 88F81630 		strb	r3, [r8, #22]
1792:src/keys.c    **** 		display_current_menu();
 12776              		.loc 1 1792 3 is_stmt 1 view .LVU3912
1795:src/keys.c    **** 
 12777              		.loc 1 1795 10 is_stmt 0 view .LVU3913
 12778 1926 3324     		movs	r4, #51
1792:src/keys.c    **** 		display_current_menu();
 12779              		.loc 1 1792 3 view .LVU3914
 12780 1928 FFF7FEFF 		bl	set_menu
 12781              	.LVL1085:
1793:src/keys.c    **** #endif
 12782              		.loc 1 1793 3 is_stmt 1 view .LVU3915
 12783 192c FFF7FEFF 		bl	display_current_menu
 12784              	.LVL1086:
1795:src/keys.c    **** 
 12785              		.loc 1 1795 3 view .LVU3916
 12786 1930 3368     		ldr	r3, [r6]
1795:src/keys.c    **** 
 12787              		.loc 1 1795 10 is_stmt 0 view .LVU3917
ARM GAS  /tmp/cc8xFAqJ.s 			page 354


 12788 1932 FEF7C0BB 		b	.L801
 12789              	.LVL1087:
 12790              	.L1022:
1814:src/keys.c    **** 		alpha_pos += 1;
 12791              		.loc 1 1814 33 view .LVU3918
 12792 1936 FFF7FEFF 		bl	alen
 12793              	.LVL1088:
1814:src/keys.c    **** 		alpha_pos += 1;
 12794              		.loc 1 1814 41 view .LVU3919
 12795 193a 09EB4903 		add	r3, r9, r9, lsl #1
1814:src/keys.c    **** 		alpha_pos += 1;
 12796              		.loc 1 1814 39 view .LVU3920
 12797 193e A0EB4300 		sub	r0, r0, r3, lsl #1
1814:src/keys.c    **** 		alpha_pos += 1;
 12798              		.loc 1 1814 29 view .LVU3921
 12799 1942 1328     		cmp	r0, #19
 12800 1944 DFD8     		bhi	.L1024
 12801 1946 E0E7     		b	.L1023
 12802              	.LVL1089:
 12803              	.L1004:
1860:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 12804              		.loc 1 1860 3 is_stmt 1 view .LVU3922
1860:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 12805              		.loc 1 1860 6 is_stmt 0 view .LVU3923
 12806 1948 0128     		cmp	r0, #1
 12807 194a 7FF4E2AC 		bne	.L1003
 12808              	.LVL1090:
1860:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 12809              		.loc 1 1860 6 view .LVU3924
 12810              	.LBE971:
 12811              	.LBE1298:
 12812              	.LBE1353:
 12813              	.LBE1422:
3608:src/keys.c    **** 	NonProgrammable = 0;
 12814              		.loc 1 3608 7 is_stmt 1 view .LVU3925
3608:src/keys.c    **** 	NonProgrammable = 0;
 12815              		.loc 1 3608 10 is_stmt 0 view .LVU3926
 12816 194e 4B06     		lsls	r3, r1, #25
 12817 1950 06D5     		bpl	.L1148
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12818              		.loc 1 3609 2 is_stmt 1 view .LVU3927
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12819              		.loc 1 3609 18 is_stmt 0 view .LVU3928
 12820 1952 D64B     		ldr	r3, .L1415
 12821 1954 0022     		movs	r2, #0
 12822              	.LVL1091:
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12823              		.loc 1 3609 18 view .LVU3929
 12824 1956 1A60     		str	r2, [r3]
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12825              		.loc 1 3610 2 is_stmt 1 view .LVU3930
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12826              		.loc 1 3610 32 is_stmt 0 view .LVU3931
 12827 1958 40F23B10 		movw	r0, #315
 12828              	.LVL1092:
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12829              		.loc 1 3610 32 view .LVU3932
ARM GAS  /tmp/cc8xFAqJ.s 			page 355


 12830 195c FEF77BBE 		b	.L1096
 12831              	.LVL1093:
 12832              	.L1148:
 12833              	.LBB1423:
 12834              	.LBB1354:
 12835              	.LBB1299:
 12836              	.LBB972:
1861:src/keys.c    **** 		break;
 12837              		.loc 1 1861 11 view .LVU3933
 12838 1960 40F23B14 		movw	r4, #315
 12839              	.LVL1094:
 12840              	.L1044:
1861:src/keys.c    **** 		break;
 12841              		.loc 1 1861 11 view .LVU3934
 12842              	.LBE972:
 12843              	.LBE1299:
 12844              	.LBE1354:
 12845              	.LBE1423:
3608:src/keys.c    **** 	NonProgrammable = 0;
 12846              		.loc 1 3608 26 view .LVU3935
 12847 1964 D14B     		ldr	r3, .L1415
 12848 1966 1A68     		ldr	r2, [r3]
 12849 1968 6AB1     		cbz	r2, .L1391
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12850              		.loc 1 3609 2 is_stmt 1 view .LVU3936
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12851              		.loc 1 3609 18 is_stmt 0 view .LVU3937
 12852 196a 0022     		movs	r2, #0
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12853              		.loc 1 3610 32 view .LVU3938
 12854 196c 2046     		mov	r0, r4
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12855              		.loc 1 3609 18 view .LVU3939
 12856 196e 1A60     		str	r2, [r3]
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12857              		.loc 1 3610 2 is_stmt 1 view .LVU3940
 12858 1970 FEF771BE 		b	.L1096
 12859              	.LVL1095:
 12860              	.L1028:
3608:src/keys.c    **** 	NonProgrammable = 0;
 12861              		.loc 1 3608 7 view .LVU3941
3608:src/keys.c    **** 	NonProgrammable = 0;
 12862              		.loc 1 3608 10 is_stmt 0 view .LVU3942
 12863 1974 4A06     		lsls	r2, r1, #25
 12864              	.LVL1096:
3608:src/keys.c    **** 	NonProgrammable = 0;
 12865              		.loc 1 3608 10 view .LVU3943
 12866 1976 09D5     		bpl	.L1147
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12867              		.loc 1 3609 2 is_stmt 1 view .LVU3944
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12868              		.loc 1 3609 18 is_stmt 0 view .LVU3945
 12869 1978 CC4B     		ldr	r3, .L1415
 12870 197a 0022     		movs	r2, #0
 12871 197c 1A60     		str	r2, [r3]
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12872              		.loc 1 3610 2 is_stmt 1 view .LVU3946
ARM GAS  /tmp/cc8xFAqJ.s 			page 356


3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12873              		.loc 1 3610 32 is_stmt 0 view .LVU3947
 12874 197e 4FF48170 		mov	r0, #258
 12875              	.LVL1097:
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12876              		.loc 1 3610 32 view .LVU3948
 12877 1982 FEF768BE 		b	.L1096
 12878              	.LVL1098:
 12879              	.L1391:
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12880              		.loc 1 3610 32 view .LVU3949
 12881 1986 2046     		mov	r0, r4
 12882 1988 FEF754BD 		b	.L1098
 12883              	.LVL1099:
 12884              	.L1147:
 12885              	.LBB1424:
 12886              	.LBB1355:
 12887              	.LBB1300:
 12888              	.LBB973:
1849:src/keys.c    **** 		else if (shift == SHIFT_N) {
 12889              		.loc 1 1849 11 view .LVU3950
 12890 198c 4FF48174 		mov	r4, #258
 12891 1990 E8E7     		b	.L1044
 12892              	.LVL1100:
 12893              	.L1019:
1800:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 12894              		.loc 1 1800 3 is_stmt 1 view .LVU3951
1800:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 12895              		.loc 1 1800 6 is_stmt 0 view .LVU3952
 12896 1992 0328     		cmp	r0, #3
 12897 1994 7FF4BDAC 		bne	.L1003
 12898              	.LVL1101:
1800:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 12899              		.loc 1 1800 6 view .LVU3953
 12900              	.LBE973:
 12901              	.LBE1300:
 12902              	.LBE1355:
 12903              	.LBE1424:
3608:src/keys.c    **** 	NonProgrammable = 0;
 12904              		.loc 1 3608 7 is_stmt 1 view .LVU3954
3608:src/keys.c    **** 	NonProgrammable = 0;
 12905              		.loc 1 3608 10 is_stmt 0 view .LVU3955
 12906 1998 4B06     		lsls	r3, r1, #25
 12907 199a 1FD5     		bpl	.L1154
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12908              		.loc 1 3609 2 is_stmt 1 view .LVU3956
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12909              		.loc 1 3609 18 is_stmt 0 view .LVU3957
 12910 199c C34B     		ldr	r3, .L1415
 12911 199e 0022     		movs	r2, #0
 12912              	.LVL1102:
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 12913              		.loc 1 3609 18 view .LVU3958
 12914 19a0 1A60     		str	r2, [r3]
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12915              		.loc 1 3610 2 is_stmt 1 view .LVU3959
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
ARM GAS  /tmp/cc8xFAqJ.s 			page 357


 12916              		.loc 1 3610 32 is_stmt 0 view .LVU3960
 12917 19a2 4FF4BA70 		mov	r0, #372
 12918              	.LVL1103:
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 12919              		.loc 1 3610 32 view .LVU3961
 12920 19a6 FEF756BE 		b	.L1096
 12921              	.LVL1104:
 12922              	.L1010:
 12923              	.LBB1425:
 12924              	.LBB1356:
 12925              	.LBB1301:
 12926              	.LBB974:
1781:src/keys.c    **** 			break;
 12927              		.loc 1 1781 3 is_stmt 1 view .LVU3962
1781:src/keys.c    **** 			break;
 12928              		.loc 1 1781 24 is_stmt 0 view .LVU3963
 12929 19aa 831E     		subs	r3, r0, #2
1781:src/keys.c    **** 			break;
 12930              		.loc 1 1781 6 view .LVU3964
 12931 19ac DBB2     		uxtb	r3, r3
 12932 19ae 012B     		cmp	r3, #1
 12933 19b0 7FF6AFAC 		bls	.L1003
1783:src/keys.c    **** 			State2.multi = 1;
 12934              		.loc 1 1783 3 is_stmt 1 view .LVU3965
1783:src/keys.c    **** 			State2.multi = 1;
 12935              		.loc 1 1783 6 is_stmt 0 view .LVU3966
 12936 19b4 0128     		cmp	r0, #1
 12937 19b6 AED1     		bne	.L1017
1783:src/keys.c    **** 			State2.multi = 1;
 12938              		.loc 1 1783 24 view .LVU3967
 12939 19b8 11F04001 		ands	r1, r1, #64
 12940 19bc ABD1     		bne	.L1017
1784:src/keys.c    **** 			State2.numdigit = 0;
 12941              		.loc 1 1784 4 is_stmt 1 view .LVU3968
1784:src/keys.c    **** 			State2.numdigit = 0;
 12942              		.loc 1 1784 17 is_stmt 0 view .LVU3969
 12943 19be 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 12944              	.LVL1105:
1785:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 12945              		.loc 1 1785 20 view .LVU3970
 12946 19c2 88F80B10 		strb	r1, [r8, #11]
1784:src/keys.c    **** 			State2.numdigit = 0;
 12947              		.loc 1 1784 17 view .LVU3971
 12948 19c6 42F00802 		orr	r2, r2, #8
1786:src/keys.c    **** 			return STATE_UNFINISHED;
 12949              		.loc 1 1786 12 view .LVU3972
 12950 19ca 0A21     		movs	r1, #10
 12951 19cc 3368     		ldr	r3, [r6]
 12952 19ce 88F81F10 		strb	r1, [r8, #31]
1784:src/keys.c    **** 			State2.numdigit = 0;
 12953              		.loc 1 1784 17 view .LVU3973
 12954 19d2 88F81520 		strb	r2, [r8, #21]
1785:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 12955              		.loc 1 1785 4 is_stmt 1 view .LVU3974
1786:src/keys.c    **** 			return STATE_UNFINISHED;
 12956              		.loc 1 1786 4 view .LVU3975
1787:src/keys.c    **** 		}
ARM GAS  /tmp/cc8xFAqJ.s 			page 358


 12957              		.loc 1 1787 4 view .LVU3976
1787:src/keys.c    **** 		}
 12958              		.loc 1 1787 11 is_stmt 0 view .LVU3977
 12959 19d6 3324     		movs	r4, #51
 12960 19d8 FEF76DBB 		b	.L801
 12961              	.LVL1106:
 12962              	.L1154:
1801:src/keys.c    **** 		break;
 12963              		.loc 1 1801 11 view .LVU3978
 12964 19dc 4FF4BA74 		mov	r4, #372
 12965 19e0 C0E7     		b	.L1044
 12966              	.LVL1107:
 12967              	.L1011:
1771:src/keys.c    **** 			init_arg(RARG_ARCL);
 12968              		.loc 1 1771 3 is_stmt 1 view .LVU3979
1771:src/keys.c    **** 			init_arg(RARG_ARCL);
 12969              		.loc 1 1771 6 is_stmt 0 view .LVU3980
 12970 19e2 0128     		cmp	r0, #1
 12971 19e4 21D0     		beq	.L1392
1774:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 12972              		.loc 1 1774 10 is_stmt 1 view .LVU3981
1774:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 12973              		.loc 1 1774 13 is_stmt 0 view .LVU3982
 12974 19e6 0328     		cmp	r0, #3
 12975 19e8 7FF493AC 		bne	.L1003
1775:src/keys.c    **** 			return STATE_UNFINISHED;
 12976              		.loc 1 1775 4 is_stmt 1 view .LVU3983
 12977              	.LVL1108:
 12978              	.LBB953:
 12979              	.LBI953:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 12980              		.loc 1 552 13 view .LVU3984
 12981              	.LBB954:
 553:src/keys.c    **** 		return;
 12982              		.loc 1 553 2 view .LVU3985
 553:src/keys.c    **** 		return;
 12983              		.loc 1 553 6 is_stmt 0 view .LVU3986
 12984 19ec FFF7FEFF 		bl	is_bad_cmdline
 12985              	.LVL1109:
 553:src/keys.c    **** 		return;
 12986              		.loc 1 553 5 view .LVU3987
 12987 19f0 0346     		mov	r3, r0
 12988 19f2 0028     		cmp	r0, #0
 12989 19f4 7EF455AE 		bne	.L1104
 12990 19f8 7320     		movs	r0, #115
 12991              	.LBE954:
 12992              	.LBE953:
 12993              	.LBE974:
 12994              	.LBE1301:
 12995              	.LBE1356:
 12996              	.LBE1425:
3387:src/keys.c    ****   if (was_paused && Pause == 0)
 12997              		.loc 1 3387 7 view .LVU3988
 12998 19fa 1D46     		mov	r5, r3
 12999              	.LBB1426:
 13000              	.LBB1357:
 13001              	.LBB1302:
ARM GAS  /tmp/cc8xFAqJ.s 			page 359


 13002              	.LBB975:
1776:src/keys.c    **** 		}
 13003              		.loc 1 1776 11 view .LVU3989
 13004 19fc 3324     		movs	r4, #51
 13005              	.LBB956:
 13006              	.LBB955:
 13007 19fe FFF7FEFF 		bl	init_arg.part.0
 13008              	.LVL1110:
 13009 1a02 3368     		ldr	r3, [r6]
 13010 1a04 FEF757BB 		b	.L801
 13011              	.LVL1111:
 13012              	.L1012:
1776:src/keys.c    **** 		}
 13013              		.loc 1 1776 11 view .LVU3990
 13014              	.LBE955:
 13015              	.LBE956:
1764:src/keys.c    **** 			init_arg(RARG_ASTO);
 13016              		.loc 1 1764 3 is_stmt 1 view .LVU3991
1764:src/keys.c    **** 			init_arg(RARG_ASTO);
 13017              		.loc 1 1764 6 is_stmt 0 view .LVU3992
 13018 1a08 0128     		cmp	r0, #1
 13019 1a0a 7FF482AC 		bne	.L1003
1765:src/keys.c    **** 			return STATE_UNFINISHED;
 13020              		.loc 1 1765 4 is_stmt 1 view .LVU3993
 13021              	.LVL1112:
 13022              	.LBB957:
 13023              	.LBI957:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 13024              		.loc 1 552 13 view .LVU3994
 13025              	.LBB958:
 553:src/keys.c    **** 		return;
 13026              		.loc 1 553 2 view .LVU3995
 553:src/keys.c    **** 		return;
 13027              		.loc 1 553 6 is_stmt 0 view .LVU3996
 13028 1a0e FFF7FEFF 		bl	is_bad_cmdline
 13029              	.LVL1113:
 553:src/keys.c    **** 		return;
 13030              		.loc 1 553 5 view .LVU3997
 13031 1a12 0346     		mov	r3, r0
 13032 1a14 0028     		cmp	r0, #0
 13033 1a16 7EF444AE 		bne	.L1104
 13034 1a1a 2620     		movs	r0, #38
 13035              	.LBE958:
 13036              	.LBE957:
 13037              	.LBE975:
 13038              	.LBE1302:
 13039              	.LBE1357:
 13040              	.LBE1426:
3387:src/keys.c    ****   if (was_paused && Pause == 0)
 13041              		.loc 1 3387 7 view .LVU3998
 13042 1a1c 1D46     		mov	r5, r3
 13043              	.LBB1427:
 13044              	.LBB1358:
 13045              	.LBB1303:
 13046              	.LBB976:
1766:src/keys.c    **** 		}
 13047              		.loc 1 1766 11 view .LVU3999
ARM GAS  /tmp/cc8xFAqJ.s 			page 360


 13048 1a1e 3324     		movs	r4, #51
 13049              	.LBB960:
 13050              	.LBB959:
 13051 1a20 FFF7FEFF 		bl	init_arg.part.0
 13052              	.LVL1114:
 13053 1a24 3368     		ldr	r3, [r6]
 13054 1a26 FEF746BB 		b	.L801
 13055              	.LVL1115:
 13056              	.L1392:
1766:src/keys.c    **** 		}
 13057              		.loc 1 1766 11 view .LVU4000
 13058              	.LBE959:
 13059              	.LBE960:
1772:src/keys.c    **** 			return STATE_UNFINISHED;
 13060              		.loc 1 1772 4 is_stmt 1 view .LVU4001
 13061              	.LBB961:
 13062              	.LBI961:
 552:src/keys.c    **** 	if (is_bad_cmdline())
 13063              		.loc 1 552 13 view .LVU4002
 13064              	.LBB962:
 553:src/keys.c    **** 		return;
 13065              		.loc 1 553 2 view .LVU4003
 553:src/keys.c    **** 		return;
 13066              		.loc 1 553 6 is_stmt 0 view .LVU4004
 13067 1a2a FFF7FEFF 		bl	is_bad_cmdline
 13068              	.LVL1116:
 553:src/keys.c    **** 		return;
 13069              		.loc 1 553 5 view .LVU4005
 13070 1a2e 0346     		mov	r3, r0
 13071 1a30 0028     		cmp	r0, #0
 13072 1a32 7EF436AE 		bne	.L1104
 13073 1a36 2720     		movs	r0, #39
 13074              	.LBE962:
 13075              	.LBE961:
 13076              	.LBE976:
 13077              	.LBE1303:
 13078              	.LBE1358:
 13079              	.LBE1427:
3387:src/keys.c    ****   if (was_paused && Pause == 0)
 13080              		.loc 1 3387 7 view .LVU4006
 13081 1a38 1D46     		mov	r5, r3
 13082              	.LBB1428:
 13083              	.LBB1359:
 13084              	.LBB1304:
 13085              	.LBB977:
1773:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 13086              		.loc 1 1773 11 view .LVU4007
 13087 1a3a 3324     		movs	r4, #51
 13088              	.LBB964:
 13089              	.LBB963:
 13090 1a3c FFF7FEFF 		bl	init_arg.part.0
 13091              	.LVL1117:
 13092 1a40 3368     		ldr	r3, [r6]
 13093 1a42 FEF738BB 		b	.L801
 13094              	.LVL1118:
 13095              	.L1390:
1773:src/keys.c    **** 		} else if (shift == SHIFT_H) {
ARM GAS  /tmp/cc8xFAqJ.s 			page 361


 13096              		.loc 1 1773 11 view .LVU4008
 13097              	.LBE963:
 13098              	.LBE964:
 13099              	.LBE977:
 13100              	.LBE1304:
 13101              	.LBB1305:
 13102              	.LBB1236:
2985:src/keys.c    **** 		State2.digval = pc;
 13103              		.loc 1 2985 4 is_stmt 1 view .LVU4009
2985:src/keys.c    **** 		State2.digval = pc;
 13104              		.loc 1 2985 9 is_stmt 0 view .LVU4010
 13105 1a46 2046     		mov	r0, r4
 13106 1a48 0121     		movs	r1, #1
 13107 1a4a FFF7FEFF 		bl	advance_to_next_label
 13108              	.LVL1119:
 13109 1a4e 0446     		mov	r4, r0
 13110              	.LVL1120:
2985:src/keys.c    **** 		State2.digval = pc;
 13111              		.loc 1 2985 9 view .LVU4011
 13112 1a50 A4E6     		b	.L948
 13113              	.LVL1121:
 13114              	.L937:
2985:src/keys.c    **** 		State2.digval = pc;
 13115              		.loc 1 2985 9 view .LVU4012
 13116              	.LBE1236:
 13117              	.LBE1305:
 13118              	.LBB1306:
 13119              	.LBB1188:
2818:src/keys.c    **** 			return STATE_UNFINISHED;
 13120              		.loc 1 2818 5 is_stmt 1 view .LVU4013
2818:src/keys.c    **** 			return STATE_UNFINISHED;
 13121              		.loc 1 2818 20 is_stmt 0 view .LVU4014
 13122 1a52 013A     		subs	r2, r2, #1
 13123 1a54 3368     		ldr	r3, [r6]
 13124 1a56 88F80B20 		strb	r2, [r8, #11]
2819:src/keys.c    **** 		}
 13125              		.loc 1 2819 11 view .LVU4015
 13126 1a5a 3324     		movs	r4, #51
 13127              	.LVL1122:
2819:src/keys.c    **** 		}
 13128              		.loc 1 2819 11 view .LVU4016
 13129 1a5c FEF72BBB 		b	.L801
 13130              	.LVL1123:
 13131              	.L1069:
2819:src/keys.c    **** 		}
 13132              		.loc 1 2819 11 view .LVU4017
 13133              	.LBE1188:
 13134              	.LBE1306:
 13135              	.LBB1307:
 13136              	.LBB880:
1422:src/keys.c    **** 			CLEAR_REAL;
 13137              		.loc 1 1422 3 is_stmt 1 view .LVU4018
1422:src/keys.c    **** 			CLEAR_REAL;
 13138              		.loc 1 1422 7 is_stmt 0 view .LVU4019
 13139 1a60 DAF80020 		ldr	r2, [r10]
 13140 1a64 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
1422:src/keys.c    **** 			CLEAR_REAL;
ARM GAS  /tmp/cc8xFAqJ.s 			page 362


 13141              		.loc 1 1422 6 view .LVU4020
 13142 1a68 9C07     		lsls	r4, r3, #30
 13143              	.LVL1124:
1422:src/keys.c    **** 			CLEAR_REAL;
 13144              		.loc 1 1422 6 view .LVU4021
 13145 1a6a 1DD4     		bmi	.L1393
1429:src/keys.c    **** 			finish_cpx_entry (1);
 13146              		.loc 1 1429 8 is_stmt 1 view .LVU4022
1429:src/keys.c    **** 			finish_cpx_entry (1);
 13147              		.loc 1 1429 11 is_stmt 0 view .LVU4023
 13148 1a6c 5807     		lsls	r0, r3, #29
 13149 1a6e 10D5     		bpl	.L1078
1430:src/keys.c    **** 		}
 13150              		.loc 1 1430 4 is_stmt 1 view .LVU4024
 13151 1a70 0120     		movs	r0, #1
 13152 1a72 FFF7FEFF 		bl	finish_cpx_entry
 13153              	.LVL1125:
1436:src/keys.c    **** 	default:;
 13154              		.loc 1 1436 10 is_stmt 0 view .LVU4025
 13155 1a76 3324     		movs	r4, #51
 13156 1a78 3368     		ldr	r3, [r6]
 13157 1a7a FEF71CBB 		b	.L801
 13158              	.LVL1126:
 13159              	.L1071:
1405:src/keys.c    **** 			SET_REAL; // start and continuation of real entry
 13160              		.loc 1 1405 3 is_stmt 1 view .LVU4026
1405:src/keys.c    **** 			SET_REAL; // start and continuation of real entry
 13161              		.loc 1 1405 8 is_stmt 0 view .LVU4027
 13162 1a7e DAF80020 		ldr	r2, [r10]
1405:src/keys.c    **** 			SET_REAL; // start and continuation of real entry
 13163              		.loc 1 1405 18 view .LVU4028
 13164 1a82 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
1405:src/keys.c    **** 			SET_REAL; // start and continuation of real entry
 13165              		.loc 1 1405 6 view .LVU4029
 13166 1a86 13F0060F 		tst	r3, #6
 13167 1a8a 2BD0     		beq	.L1394
 13168              	.L1072:
1420:src/keys.c    **** 	case (K_CMPLX):
 13169              		.loc 1 1420 3 is_stmt 1 view .LVU4030
1420:src/keys.c    **** 	case (K_CMPLX):
 13170              		.loc 1 1420 10 is_stmt 0 view .LVU4031
 13171 1a8c 2046     		mov	r0, r4
 13172 1a8e FEF722BC 		b	.L1302
 13173              	.LVL1127:
 13174              	.L1078:
1433:src/keys.c    **** 			stack_begin (1);
 13175              		.loc 1 1433 4 is_stmt 1 view .LVU4032
 13176 1a92 43F00403 		orr	r3, r3, #4
 13177 1a96 82F8AC37 		strb	r3, [r2, #1964]
1434:src/keys.c    **** 		}
 13178              		.loc 1 1434 4 view .LVU4033
 13179 1a9a 0120     		movs	r0, #1
 13180 1a9c FFF7FEFF 		bl	stack_begin
 13181              	.LVL1128:
1436:src/keys.c    **** 	default:;
 13182              		.loc 1 1436 10 is_stmt 0 view .LVU4034
 13183 1aa0 3324     		movs	r4, #51
ARM GAS  /tmp/cc8xFAqJ.s 			page 363


 13184 1aa2 3368     		ldr	r3, [r6]
 13185 1aa4 FEF707BB 		b	.L801
 13186              	.L1393:
1423:src/keys.c    **** 			SET_IMAG;
 13187              		.loc 1 1423 4 is_stmt 1 view .LVU4035
1424:src/keys.c    **** 			do_command_line();
 13188              		.loc 1 1424 4 view .LVU4036
1423:src/keys.c    **** 			SET_IMAG;
 13189              		.loc 1 1423 4 is_stmt 0 view .LVU4037
 13190 1aa8 23F00603 		bic	r3, r3, #6
 13191              	.LBB822:
 13192              	.LBB823:
1190:src/keys.c    **** 		State2.state_lift = 0;
 13193              		.loc 1 1190 5 view .LVU4038
 13194 1aac 98F81C10 		ldrb	r1, [r8, #28]	@ zero_extendqisi2
 13195              	.LBE823:
 13196              	.LBE822:
1423:src/keys.c    **** 			SET_IMAG;
 13197              		.loc 1 1423 4 view .LVU4039
 13198 1ab0 43F00403 		orr	r3, r3, #4
 13199 1ab4 82F8AC37 		strb	r3, [r2, #1964]
1425:src/keys.c    **** 			State2.state_lift = 0;
 13200              		.loc 1 1425 4 is_stmt 1 view .LVU4040
 13201              	.LBB826:
 13202              	.LBI822:
1189:src/keys.c    **** 	if (CmdLineLength) {
 13203              		.loc 1 1189 13 view .LVU4041
 13204              	.LBB824:
1190:src/keys.c    **** 		State2.state_lift = 0;
 13205              		.loc 1 1190 2 view .LVU4042
1190:src/keys.c    **** 		State2.state_lift = 0;
 13206              		.loc 1 1190 5 is_stmt 0 view .LVU4043
 13207 1ab8 F1B9     		cbnz	r1, .L1395
 13208              	.L1077:
 13209              	.LBE824:
 13210              	.LBE826:
1426:src/keys.c    **** 			swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 13211              		.loc 1 1426 4 is_stmt 1 view .LVU4044
1426:src/keys.c    **** 			swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 13212              		.loc 1 1426 22 is_stmt 0 view .LVU4045
 13213 1aba 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
1427:src/keys.c    **** 		}
 13214              		.loc 1 1427 4 view .LVU4046
 13215 1abe 6420     		movs	r0, #100
1426:src/keys.c    **** 			swap_reg(get_reg_n(regX_idx), get_reg_n(regY_idx));
 13216              		.loc 1 1426 22 view .LVU4047
 13217 1ac0 6FF38613 		bfc	r3, #6, #1
 13218 1ac4 88F81730 		strb	r3, [r8, #23]
1427:src/keys.c    **** 		}
 13219              		.loc 1 1427 4 is_stmt 1 view .LVU4048
 13220 1ac8 FFF7FEFF 		bl	get_reg_n
 13221              	.LVL1129:
 13222 1acc 0446     		mov	r4, r0
 13223 1ace 6520     		movs	r0, #101
 13224 1ad0 FFF7FEFF 		bl	get_reg_n
 13225              	.LVL1130:
 13226 1ad4 0146     		mov	r1, r0
ARM GAS  /tmp/cc8xFAqJ.s 			page 364


 13227 1ad6 2046     		mov	r0, r4
 13228 1ad8 FFF7FEFF 		bl	swap_reg
 13229              	.LVL1131:
1436:src/keys.c    **** 	default:;
 13230              		.loc 1 1436 10 is_stmt 0 view .LVU4049
 13231 1adc 3324     		movs	r4, #51
 13232 1ade 3368     		ldr	r3, [r6]
 13233 1ae0 FEF7E9BA 		b	.L801
 13234              	.LVL1132:
 13235              	.L1394:
1406:src/keys.c    **** 			stack_begin (1);
 13236              		.loc 1 1406 4 is_stmt 1 view .LVU4050
 13237 1ae4 43F00203 		orr	r3, r3, #2
1407:src/keys.c    **** 		}
 13238              		.loc 1 1407 4 is_stmt 0 view .LVU4051
 13239 1ae8 0120     		movs	r0, #1
1406:src/keys.c    **** 			stack_begin (1);
 13240              		.loc 1 1406 4 view .LVU4052
 13241 1aea 82F8AC37 		strb	r3, [r2, #1964]
1407:src/keys.c    **** 		}
 13242              		.loc 1 1407 4 is_stmt 1 view .LVU4053
 13243 1aee FFF7FEFF 		bl	stack_begin
 13244              	.LVL1133:
1409:src/keys.c    **** 	case (K22): // CHS
 13245              		.loc 1 1409 3 view .LVU4054
1420:src/keys.c    **** 	case (K_CMPLX):
 13246              		.loc 1 1420 3 view .LVU4055
1420:src/keys.c    **** 	case (K_CMPLX):
 13247              		.loc 1 1420 10 is_stmt 0 view .LVU4056
 13248 1af2 2046     		mov	r0, r4
 13249 1af4 FEF7EFBB 		b	.L1302
 13250              	.LVL1134:
 13251              	.L1395:
 13252              	.LBB827:
 13253              	.LBB825:
1191:src/keys.c    **** 		process_cmdline();
 13254              		.loc 1 1191 3 is_stmt 1 view .LVU4057
1191:src/keys.c    **** 		process_cmdline();
 13255              		.loc 1 1191 21 is_stmt 0 view .LVU4058
 13256 1af8 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
 13257 1afc 6FF38613 		bfc	r3, #6, #1
 13258 1b00 88F81730 		strb	r3, [r8, #23]
1192:src/keys.c    **** 	}
 13259              		.loc 1 1192 3 is_stmt 1 view .LVU4059
 13260 1b04 FFF7FEFF 		bl	process_cmdline
 13261              	.LVL1135:
 13262 1b08 D7E7     		b	.L1077
 13263              	.LVL1136:
 13264              	.L1073:
1192:src/keys.c    **** 	}
 13265              		.loc 1 1192 3 is_stmt 0 view .LVU4060
 13266              	.LBE825:
 13267              	.LBE827:
1412:src/keys.c    **** 			return process_cmplx(c);
 13268              		.loc 1 1412 3 is_stmt 1 view .LVU4061
1412:src/keys.c    **** 			return process_cmplx(c);
 13269              		.loc 1 1412 18 is_stmt 0 view .LVU4062
ARM GAS  /tmp/cc8xFAqJ.s 			page 365


 13270 1b0a DAF80030 		ldr	r3, [r10]
 13271 1b0e 93F8AC37 		ldrb	r3, [r3, #1964]	@ zero_extendqisi2
1412:src/keys.c    **** 			return process_cmplx(c);
 13272              		.loc 1 1412 6 view .LVU4063
 13273 1b12 13F0060F 		tst	r3, #6
1413:src/keys.c    **** 		}
 13274              		.loc 1 1413 11 view .LVU4064
 13275 1b16 4FF00E00 		mov	r0, #14
1412:src/keys.c    **** 			return process_cmplx(c);
 13276              		.loc 1 1412 6 view .LVU4065
 13277 1b1a 7EF4DCAB 		bne	.L1302
 13278 1b1e 18E4     		b	.L1305
 13279              	.L1068:
1437:src/keys.c    **** 	}
 13280              		.loc 1 1437 10 is_stmt 1 view .LVU4066
1439:src/keys.c    **** 	return process_cmplx(c);
 13281              		.loc 1 1439 2 view .LVU4067
 13282 1b20 0020     		movs	r0, #0
 13283 1b22 FFF7FEFF 		bl	finish_cpx_entry
 13284              	.LVL1137:
1440:src/keys.c    **** 
 13285              		.loc 1 1440 2 view .LVU4068
1440:src/keys.c    **** 
 13286              		.loc 1 1440 9 is_stmt 0 view .LVU4069
 13287 1b26 2046     		mov	r0, r4
 13288 1b28 FFF7FEFF 		bl	process_cmplx
 13289              	.LVL1138:
 13290 1b2c 0446     		mov	r4, r0
 13291              	.LVL1139:
1440:src/keys.c    **** 
 13292              		.loc 1 1440 9 view .LVU4070
 13293 1b2e FEF757BC 		b	.L835
 13294              	.LVL1140:
 13295              	.L1037:
1289:src/keys.c    **** 		return process_fg_shifted (c);
 13296              		.loc 1 1289 2 is_stmt 1 view .LVU4071
1289:src/keys.c    **** 		return process_fg_shifted (c);
 13297              		.loc 1 1289 5 is_stmt 0 view .LVU4072
 13298 1b32 631F     		subs	r3, r4, #5
 13299 1b34 032B     		cmp	r3, #3
 13300 1b36 7FF6BBAC 		bls	.L1303
1293:src/keys.c    **** 		if (shift == SHIFT_F) { // special pi processing
 13301              		.loc 1 1293 2 is_stmt 1 view .LVU4073
1293:src/keys.c    **** 		if (shift == SHIFT_F) { // special pi processing
 13302              		.loc 1 1293 5 is_stmt 0 view .LVU4074
 13303 1b3a 0F2C     		cmp	r4, #15
 13304 1b3c 3FF405AC 		beq	.L1110
 13305              	.L1297:
1320:src/keys.c    **** 		switch (c) {
 13306              		.loc 1 1320 3 is_stmt 1 view .LVU4075
 13307 1b40 0020     		movs	r0, #0
 13308 1b42 FFF7FEFF 		bl	finish_cpx_entry
 13309              	.LVL1141:
1321:src/keys.c    **** 		case (K21): // x<->y key
 13310              		.loc 1 1321 3 view .LVU4076
 13311 1b46 A4F10D03 		sub	r3, r4, #13
 13312 1b4a 192B     		cmp	r3, #25
ARM GAS  /tmp/cc8xFAqJ.s 			page 366


 13313 1b4c 3FF600AC 		bhi	.L1304
 13314 1b50 01A2     		adr	r2, .L1049
 13315 1b52 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 13316 1b56 00BF     		.p2align 2
 13317              	.L1049:
 13318 1b58 BB1D0000 		.word	.L1055+1
 13319 1b5c 4D1D0000 		.word	.L1054+1
 13320 1b60 51130000 		.word	.L1304+1
 13321 1b64 771C0000 		.word	.L1053+1
 13322 1b68 51130000 		.word	.L1304+1
 13323 1b6c 51130000 		.word	.L1304+1
 13324 1b70 51130000 		.word	.L1304+1
 13325 1b74 51130000 		.word	.L1304+1
 13326 1b78 51130000 		.word	.L1304+1
 13327 1b7c 631C0000 		.word	.L1052+1
 13328 1b80 51130000 		.word	.L1304+1
 13329 1b84 B51C0000 		.word	.L1051+1
 13330 1b88 51130000 		.word	.L1304+1
 13331 1b8c 51130000 		.word	.L1304+1
 13332 1b90 51130000 		.word	.L1304+1
 13333 1b94 9B1C0000 		.word	.L1050+1
 13334 1b98 51130000 		.word	.L1304+1
 13335 1b9c 51130000 		.word	.L1304+1
 13336 1ba0 51130000 		.word	.L1304+1
 13337 1ba4 51130000 		.word	.L1304+1
 13338 1ba8 51130000 		.word	.L1304+1
 13339 1bac 51130000 		.word	.L1304+1
 13340 1bb0 51130000 		.word	.L1304+1
 13341 1bb4 51130000 		.word	.L1304+1
 13342 1bb8 51130000 		.word	.L1304+1
 13343 1bbc 091D0000 		.word	.L1048+1
 13344              	.LVL1142:
 13345              		.p2align 1
 13346              	.L987:
1321:src/keys.c    **** 		case (K21): // x<->y key
 13347              		.loc 1 1321 3 is_stmt 0 view .LVU4077
 13348              	.LBE880:
 13349              	.LBE1307:
 13350              	.LBB1308:
 13351              	.LBB1017:
3148:src/keys.c    **** 		goto reset_window;
 13352              		.loc 1 3148 4 is_stmt 1 view .LVU4078
3148:src/keys.c    **** 		goto reset_window;
 13353              		.loc 1 3148 18 is_stmt 0 view .LVU4079
 13354 1bc0 0023     		movs	r3, #0
 13355 1bc2 A8F80830 		strh	r3, [r8, #8]	@ movhi
 13356 1bc6 FFF7B7BA 		b	.L976
 13357              	.LVL1143:
 13358              	.L1388:
3148:src/keys.c    **** 		goto reset_window;
 13359              		.loc 1 3148 18 view .LVU4080
 13360              	.LBE1017:
 13361              	.LBE1308:
 13362              	.LBB1309:
 13363              	.LBB881:
 13364              	.LBB828:
1313:src/keys.c    **** 				return process_cmplx(c);
ARM GAS  /tmp/cc8xFAqJ.s 			page 367


 13365              		.loc 1 1313 5 is_stmt 1 view .LVU4081
 13366 1bca 0120     		movs	r0, #1
 13367 1bcc FFF7FEFF 		bl	finish_cpx_entry
 13368              	.LVL1144:
1314:src/keys.c    **** 			}
 13369              		.loc 1 1314 5 view .LVU4082
1314:src/keys.c    **** 			}
 13370              		.loc 1 1314 12 is_stmt 0 view .LVU4083
 13371 1bd0 2046     		mov	r0, r4
 13372 1bd2 FFF7FEFF 		bl	process_cmplx
 13373              	.LVL1145:
 13374 1bd6 0446     		mov	r4, r0
 13375              	.LVL1146:
1314:src/keys.c    **** 			}
 13376              		.loc 1 1314 12 view .LVU4084
 13377 1bd8 FEF702BC 		b	.L835
 13378              	.LVL1147:
 13379              	.L1387:
1314:src/keys.c    **** 			}
 13380              		.loc 1 1314 12 view .LVU4085
 13381              	.LBE828:
1295:src/keys.c    **** 			if ( CmdLineLength ) {
 13382              		.loc 1 1295 4 is_stmt 1 view .LVU4086
 13383              	.LBB829:
 13384              	.LBI829:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13385              		.loc 1 114 13 view .LVU4087
 13386              	.LBE829:
 13387              	.LBE881:
 13388              	.LBE1309:
 13389              	.LBE1359:
 13390              	.LBE1428:
 115:src/keys.c    **** }
 13391              		.loc 1 115 2 view .LVU4088
 13392              	.LBB1429:
 13393              	.LBB1360:
 13394              	.LBB1310:
 13395              	.LBB882:
 13396              	.LBB836:
 13397              	.LBB830:
 13398              	.LBI830:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13399              		.loc 1 104 20 view .LVU4089
 13400              	.LBB831:
 105:src/keys.c    **** 	State2.shifts = shift;
 13401              		.loc 1 105 2 view .LVU4090
 13402              	.LBB832:
 13403              	.LBI832:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13404              		.loc 1 96 13 view .LVU4091
 13405              	.LBB833:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13406              		.loc 1 97 2 view .LVU4092
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13407              		.loc 1 97 18 is_stmt 0 view .LVU4093
 13408 1bdc FFF7FEFF 		bl	shift_down
 13409              	.LVL1148:
ARM GAS  /tmp/cc8xFAqJ.s 			page 368


  98:src/keys.c    **** }
 13410              		.loc 1 98 2 is_stmt 1 view .LVU4094
 13411              	.LBE833:
 13412              	.LBE832:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13413              		.loc 1 106 2 view .LVU4095
 13414              	.LBE831:
 13415              	.LBE830:
 13416              	.LBE836:
1296:src/keys.c    **** 				State2.state_lift = 0;
 13417              		.loc 1 1296 7 is_stmt 0 view .LVU4096
 13418 1be0 98F81C20 		ldrb	r2, [r8, #28]	@ zero_extendqisi2
 13419              	.LBB837:
 13420              	.LBB835:
 13421              	.LBB834:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13422              		.loc 1 106 16 view .LVU4097
 13423 1be4 0023     		movs	r3, #0
 13424 1be6 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13425              		.loc 1 108 2 is_stmt 1 view .LVU4098
 13426              	.LVL1149:
 108:src/keys.c    **** }
 13427              		.loc 1 108 2 is_stmt 0 view .LVU4099
 13428              	.LBE834:
 13429              	.LBE835:
 13430              	.LBE837:
1296:src/keys.c    **** 				State2.state_lift = 0;
 13431              		.loc 1 1296 4 is_stmt 1 view .LVU4100
1296:src/keys.c    **** 				State2.state_lift = 0;
 13432              		.loc 1 1296 7 is_stmt 0 view .LVU4101
 13433 1bea 52B3     		cbz	r2, .L1042
1297:src/keys.c    **** 				return OP_NIL | OP_PIB;
 13434              		.loc 1 1297 5 is_stmt 1 view .LVU4102
1297:src/keys.c    **** 				return OP_NIL | OP_PIB;
 13435              		.loc 1 1297 23 is_stmt 0 view .LVU4103
 13436 1bec 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
 13437              	.LBE882:
 13438              	.LBE1310:
 13439              	.LBE1360:
 13440              	.LBE1429:
3608:src/keys.c    **** 	NonProgrammable = 0;
 13441              		.loc 1 3608 11 view .LVU4104
 13442 1bf0 98F81610 		ldrb	r1, [r8, #22]	@ zero_extendqisi2
 13443              	.LBB1430:
 13444              	.LBB1361:
 13445              	.LBB1311:
 13446              	.LBB883:
1297:src/keys.c    **** 				return OP_NIL | OP_PIB;
 13447              		.loc 1 1297 23 view .LVU4105
 13448 1bf4 63F38612 		bfi	r2, r3, #6, #1
 13449              	.LBE883:
 13450              	.LBE1311:
 13451              	.LBE1361:
 13452              	.LBE1430:
3608:src/keys.c    **** 	NonProgrammable = 0;
 13453              		.loc 1 3608 10 view .LVU4106
ARM GAS  /tmp/cc8xFAqJ.s 			page 369


 13454 1bf8 4806     		lsls	r0, r1, #25
 13455              	.LBB1431:
 13456              	.LBB1362:
 13457              	.LBB1312:
 13458              	.LBB884:
1297:src/keys.c    **** 				return OP_NIL | OP_PIB;
 13459              		.loc 1 1297 23 view .LVU4107
 13460 1bfa 88F81720 		strb	r2, [r8, #23]
1298:src/keys.c    **** 			}
 13461              		.loc 1 1298 5 is_stmt 1 view .LVU4108
 13462              	.LVL1150:
1298:src/keys.c    **** 			}
 13463              		.loc 1 1298 5 is_stmt 0 view .LVU4109
 13464              	.LBE884:
 13465              	.LBE1312:
 13466              	.LBE1362:
 13467              	.LBE1431:
3608:src/keys.c    **** 	NonProgrammable = 0;
 13468              		.loc 1 3608 7 is_stmt 1 view .LVU4110
3608:src/keys.c    **** 	NonProgrammable = 0;
 13469              		.loc 1 3608 10 is_stmt 0 view .LVU4111
 13470 1bfe 1AD4     		bmi	.L1043
 13471              	.LBB1432:
 13472              	.LBB1363:
 13473              	.LBB1313:
 13474              	.LBB885:
1298:src/keys.c    **** 			}
 13475              		.loc 1 1298 12 view .LVU4112
 13476 1c00 4FF4E474 		mov	r4, #456
 13477 1c04 AEE6     		b	.L1044
 13478              	.LVL1151:
 13479              	.L871:
1298:src/keys.c    **** 			}
 13480              		.loc 1 1298 12 view .LVU4113
 13481              	.LBE885:
 13482              	.LBE1313:
 13483              	.LBB1314:
 13484              	.LBB1050:
2349:src/keys.c    **** 		// Special 1
 13485              		.loc 1 2349 7 is_stmt 1 view .LVU4114
2349:src/keys.c    **** 		// Special 1
 13486              		.loc 1 2349 10 is_stmt 0 view .LVU4115
 13487 1c06 BCF1010F 		cmp	ip, #1
 13488 1c0a 7EF4FFAE 		bne	.L873
2351:src/keys.c    **** 	}
 13489              		.loc 1 2351 3 is_stmt 1 view .LVU4116
2351:src/keys.c    **** 	}
 13490              		.loc 1 2351 18 is_stmt 0 view .LVU4117
 13491 1c0e BBF1000F 		cmp	fp, #0
 13492 1c12 14BF     		ite	ne
 13493 1c14 2724     		movne	r4, #39
 13494              	.LVL1152:
2351:src/keys.c    **** 	}
 13495              		.loc 1 2351 18 view .LVU4118
 13496 1c16 1E24     		moveq	r4, #30
2351:src/keys.c    **** 	}
 13497              		.loc 1 2351 47 view .LVU4119
ARM GAS  /tmp/cc8xFAqJ.s 			page 370


 13498 1c18 1C44     		add	r4, r4, r3
 13499 1c1a FEF7E1BB 		b	.L835
 13500              	.LVL1153:
 13501              	.L984:
2351:src/keys.c    **** 	}
 13502              		.loc 1 2351 47 view .LVU4120
 13503              	.LBE1050:
 13504              	.LBE1314:
 13505              	.LBB1315:
 13506              	.LBB1018:
3138:src/keys.c    **** 		goto reset_window;
 13507              		.loc 1 3138 4 is_stmt 1 view .LVU4121
3138:src/keys.c    **** 		goto reset_window;
 13508              		.loc 1 3138 24 is_stmt 0 view .LVU4122
 13509 1c1e 0AF1FF3A 		add	r10, r10, #-1
 13510              	.LVL1154:
3138:src/keys.c    **** 		goto reset_window;
 13511              		.loc 1 3138 18 view .LVU4123
 13512 1c22 A8F808A0 		strh	r10, [r8, #8]	@ movhi
 13513 1c26 FFF787BA 		b	.L976
 13514              	.LVL1155:
 13515              	.L1386:
3134:src/keys.c    **** 			--State2.digval;
 13516              		.loc 1 3134 5 is_stmt 1 view .LVU4124
3134:src/keys.c    **** 			--State2.digval;
 13517              		.loc 1 3134 21 is_stmt 0 view .LVU4125
 13518 1c2a FFF7FEFF 		bl	global_regs
 13519              	.LVL1156:
3134:src/keys.c    **** 			--State2.digval;
 13520              		.loc 1 3134 19 view .LVU4126
 13521 1c2e A8F80800 		strh	r0, [r8, #8]	@ movhi
 13522 1c32 FFF77CBA 		b	.L985
 13523              	.LVL1157:
 13524              	.L1043:
3134:src/keys.c    **** 			--State2.digval;
 13525              		.loc 1 3134 19 view .LVU4127
 13526              	.LBE1018:
 13527              	.LBE1315:
 13528              	.LBE1363:
 13529              	.LBE1432:
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13530              		.loc 1 3609 2 is_stmt 1 view .LVU4128
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13531              		.loc 1 3609 18 is_stmt 0 view .LVU4129
 13532 1c36 1D4A     		ldr	r2, .L1415
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13533              		.loc 1 3610 32 view .LVU4130
 13534 1c38 4FF4E470 		mov	r0, #456
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13535              		.loc 1 3609 18 view .LVU4131
 13536 1c3c 1360     		str	r3, [r2]
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13537              		.loc 1 3610 2 is_stmt 1 view .LVU4132
 13538 1c3e FEF70ABD 		b	.L1096
 13539              	.LVL1158:
 13540              	.L1042:
3608:src/keys.c    **** 	NonProgrammable = 0;
ARM GAS  /tmp/cc8xFAqJ.s 			page 371


 13541              		.loc 1 3608 7 view .LVU4133
3608:src/keys.c    **** 	NonProgrammable = 0;
 13542              		.loc 1 3608 11 is_stmt 0 view .LVU4134
 13543 1c42 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3608:src/keys.c    **** 	NonProgrammable = 0;
 13544              		.loc 1 3608 10 view .LVU4135
 13545 1c46 5D06     		lsls	r5, r3, #25
 13546 1c48 6FD5     		bpl	.L1149
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13547              		.loc 1 3609 2 is_stmt 1 view .LVU4136
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13548              		.loc 1 3609 18 is_stmt 0 view .LVU4137
 13549 1c4a 184B     		ldr	r3, .L1415
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13550              		.loc 1 3610 32 view .LVU4138
 13551 1c4c 40F2C710 		movw	r0, #455
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13552              		.loc 1 3609 18 view .LVU4139
 13553 1c50 1A60     		str	r2, [r3]
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13554              		.loc 1 3610 2 is_stmt 1 view .LVU4140
 13555 1c52 FEF700BD 		b	.L1096
 13556              	.LVL1159:
 13557              	.L1389:
 13558              	.LBB1433:
 13559              	.LBB1364:
 13560              	.LBB1316:
 13561              	.LBB886:
1282:src/keys.c    **** 	}
 13562              		.loc 1 1282 3 view .LVU4141
1282:src/keys.c    **** 	}
 13563              		.loc 1 1282 10 is_stmt 0 view .LVU4142
 13564 1c56 2046     		mov	r0, r4
 13565 1c58 FFF7FEFF 		bl	process_h_shifted
 13566              	.LVL1160:
 13567 1c5c 0446     		mov	r4, r0
 13568              	.LVL1161:
1282:src/keys.c    **** 	}
 13569              		.loc 1 1282 10 view .LVU4143
 13570 1c5e FEF7BFBB 		b	.L835
 13571              	.LVL1162:
 13572              	.L1052:
1366:src/keys.c    **** 		case (K34): // divide key
 13573              		.loc 1 1366 4 is_stmt 1 view .LVU4144
1368:src/keys.c    **** 				reset_shift();
 13574              		.loc 1 1368 4 view .LVU4145
1368:src/keys.c    **** 				reset_shift();
 13575              		.loc 1 1368 7 is_stmt 0 view .LVU4146
 13576 1c62 BBF1030F 		cmp	fp, #3
 13577 1c66 00F08280 		beq	.L1396
1373:src/keys.c    **** 			}
 13578              		.loc 1 1373 5 is_stmt 1 view .LVU4147
1373:src/keys.c    **** 			}
 13579              		.loc 1 1373 12 is_stmt 0 view .LVU4148
 13580 1c6a 1620     		movs	r0, #22
 13581 1c6c FFF7FEFF 		bl	process_cmplx
 13582              	.LVL1163:
ARM GAS  /tmp/cc8xFAqJ.s 			page 372


 13583 1c70 0446     		mov	r4, r0
 13584              	.LVL1164:
1373:src/keys.c    **** 			}
 13585              		.loc 1 1373 12 view .LVU4149
 13586 1c72 FEF7B5BB 		b	.L835
 13587              	.LVL1165:
 13588              	.L1053:
1375:src/keys.c    **** 		case (K24): // <- key
 13589              		.loc 1 1375 4 is_stmt 1 view .LVU4150
1377:src/keys.c    **** 			if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real part o
 13590              		.loc 1 1377 4 view .LVU4151
1377:src/keys.c    **** 			if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real part o
 13591              		.loc 1 1377 8 is_stmt 0 view .LVU4152
 13592 1c76 DAF80030 		ldr	r3, [r10]
1377:src/keys.c    **** 			if (shift == SHIFT_H) { // adds the rather strange ability to delete and replace the real part o
 13593              		.loc 1 1377 7 view .LVU4153
 13594 1c7a 93F9AC37 		ldrsb	r3, [r3, #1964]
 13595 1c7e 002B     		cmp	r3, #0
 13596 1c80 02DB     		blt	.L1058
1378:src/keys.c    **** 				zero_X ();
 13597              		.loc 1 1378 4 is_stmt 1 view .LVU4154
1378:src/keys.c    **** 				zero_X ();
 13598              		.loc 1 1378 7 is_stmt 0 view .LVU4155
 13599 1c82 BBF1030F 		cmp	fp, #3
 13600 1c86 7ED0     		beq	.L1397
 13601              	.L1058:
1388:src/keys.c    **** 		return STATE_UNFINISHED;
 13602              		.loc 1 1388 3 is_stmt 1 view .LVU4156
 13603              	.LBB838:
 13604              	.LBI838:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13605              		.loc 1 114 13 view .LVU4157
 13606              	.LBE838:
 13607              	.LBE886:
 13608              	.LBE1316:
 13609              	.LBE1364:
 13610              	.LBE1433:
 115:src/keys.c    **** }
 13611              		.loc 1 115 2 view .LVU4158
 13612              	.LVL1166:
 13613              	.LBB1434:
 13614              	.LBB1365:
 13615              	.LBB1317:
 13616              	.LBB887:
 13617              	.LBB843:
 13618              	.LBB839:
 13619              	.LBI839:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13620              		.loc 1 104 20 view .LVU4159
 13621              	.LBB840:
 105:src/keys.c    **** 	State2.shifts = shift;
 13622              		.loc 1 105 2 view .LVU4160
 13623              	.LBB841:
 13624              	.LBI841:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13625              		.loc 1 96 13 view .LVU4161
 13626              	.LBB842:
ARM GAS  /tmp/cc8xFAqJ.s 			page 373


  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13627              		.loc 1 97 2 view .LVU4162
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13628              		.loc 1 97 18 is_stmt 0 view .LVU4163
 13629 1c88 FFF7FEFF 		bl	shift_down
 13630              	.LVL1167:
  98:src/keys.c    **** }
 13631              		.loc 1 98 2 is_stmt 1 view .LVU4164
 13632              	.LBE842:
 13633              	.LBE841:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13634              		.loc 1 106 2 view .LVU4165
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13635              		.loc 1 106 16 is_stmt 0 view .LVU4166
 13636 1c8c 0022     		movs	r2, #0
 13637 1c8e 3368     		ldr	r3, [r6]
 13638 1c90 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 13639              		.loc 1 108 2 is_stmt 1 view .LVU4167
 13640              	.LVL1168:
 108:src/keys.c    **** }
 13641              		.loc 1 108 2 is_stmt 0 view .LVU4168
 13642              	.LBE840:
 13643              	.LBE839:
 13644              	.LBE843:
1389:src/keys.c    **** 	}
 13645              		.loc 1 1389 3 is_stmt 1 view .LVU4169
1389:src/keys.c    **** 	}
 13646              		.loc 1 1389 10 is_stmt 0 view .LVU4170
 13647 1c94 3324     		movs	r4, #51
 13648              	.LVL1169:
1389:src/keys.c    **** 	}
 13649              		.loc 1 1389 10 view .LVU4171
 13650 1c96 FEF70EBA 		b	.L801
 13651              	.LVL1170:
 13652              	.L1050:
1359:src/keys.c    **** 				reset_shift();
 13653              		.loc 1 1359 4 is_stmt 1 view .LVU4172
1359:src/keys.c    **** 				reset_shift();
 13654              		.loc 1 1359 7 is_stmt 0 view .LVU4173
 13655 1c9a BBF1030F 		cmp	fp, #3
 13656 1c9e 18D0     		beq	.L1398
1364:src/keys.c    **** 			}
 13657              		.loc 1 1364 5 is_stmt 1 view .LVU4174
1364:src/keys.c    **** 			}
 13658              		.loc 1 1364 12 is_stmt 0 view .LVU4175
 13659 1ca0 1C20     		movs	r0, #28
 13660 1ca2 FFF7FEFF 		bl	process_cmplx
 13661              	.LVL1171:
 13662 1ca6 0446     		mov	r4, r0
 13663              	.LVL1172:
1364:src/keys.c    **** 			}
 13664              		.loc 1 1364 12 view .LVU4176
 13665 1ca8 FEF79ABB 		b	.L835
 13666              	.L1416:
 13667              		.align	2
 13668              	.L1415:
ARM GAS  /tmp/cc8xFAqJ.s 			page 374


 13669 1cac 00000000 		.word	NonProgrammable
 13670 1cb0 00000000 		.word	main_ram
 13671              	.LVL1173:
 13672              	.L1051:
1333:src/keys.c    **** 				SET_RECTANGULAR_DISPLAY;
 13673              		.loc 1 1333 4 is_stmt 1 view .LVU4177
1333:src/keys.c    **** 				SET_RECTANGULAR_DISPLAY;
 13674              		.loc 1 1333 7 is_stmt 0 view .LVU4178
 13675 1cb4 BBF1010F 		cmp	fp, #1
 13676 1cb8 17D0     		beq	.L1399
1336:src/keys.c    **** 				SET_POLAR_DISPLAY;
 13677              		.loc 1 1336 9 is_stmt 1 view .LVU4179
1336:src/keys.c    **** 				SET_POLAR_DISPLAY;
 13678              		.loc 1 1336 12 is_stmt 0 view .LVU4180
 13679 1cba BBF1020F 		cmp	fp, #2
 13680 1cbe E3D1     		bne	.L1058
1337:src/keys.c    **** 				CLEAR_POLAR_READY;
 13681              		.loc 1 1337 5 is_stmt 1 view .LVU4181
 13682 1cc0 DAF80020 		ldr	r2, [r10]
1338:src/keys.c    **** 				update_speed(0); // new polar display calculated from keyboard needs a speed boost
 13683              		.loc 1 1338 5 view .LVU4182
1337:src/keys.c    **** 				CLEAR_POLAR_READY;
 13684              		.loc 1 1337 5 is_stmt 0 view .LVU4183
 13685 1cc4 B2F8AC37 		ldrh	r3, [r2, #1964]
 13686 1cc8 43F4C073 		orr	r3, r3, #384
 13687 1ccc A2F8AC37 		strh	r3, [r2, #1964]	@ movhi
 13688 1cd0 DAE7     		b	.L1058
 13689              	.L1398:
1360:src/keys.c    **** 				return OP_CDYA | OP_CDOT;
 13690              		.loc 1 1360 5 is_stmt 1 view .LVU4184
 13691              	.LBB844:
 13692              	.LBI844:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13693              		.loc 1 114 13 view .LVU4185
 13694              	.LBE844:
 13695              	.LBE887:
 13696              	.LBE1317:
 13697              	.LBE1365:
 13698              	.LBE1434:
 115:src/keys.c    **** }
 13699              		.loc 1 115 2 view .LVU4186
 13700              	.LVL1174:
 13701              	.LBB1435:
 13702              	.LBB1366:
 13703              	.LBB1318:
 13704              	.LBB888:
 13705              	.LBB853:
 13706              	.LBB845:
 13707              	.LBI845:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13708              		.loc 1 104 20 view .LVU4187
 13709              	.LBB846:
 105:src/keys.c    **** 	State2.shifts = shift;
 13710              		.loc 1 105 2 view .LVU4188
 13711              	.LBB847:
 13712              	.LBI847:
  96:src/keys.c    **** 	enum shifts s = shift_down();
ARM GAS  /tmp/cc8xFAqJ.s 			page 375


 13713              		.loc 1 96 13 view .LVU4189
 13714              	.LBB848:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13715              		.loc 1 97 2 view .LVU4190
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13716              		.loc 1 97 18 is_stmt 0 view .LVU4191
 13717 1cd2 FFF7FEFF 		bl	shift_down
 13718              	.LVL1175:
  98:src/keys.c    **** }
 13719              		.loc 1 98 2 is_stmt 1 view .LVU4192
 13720              	.LBE848:
 13721              	.LBE847:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13722              		.loc 1 106 2 view .LVU4193
 13723              	.LBE846:
 13724              	.LBE845:
 13725              	.LBE853:
 13726              	.LBE888:
 13727              	.LBE1318:
 13728              	.LBE1366:
 13729              	.LBE1435:
3608:src/keys.c    **** 	NonProgrammable = 0;
 13730              		.loc 1 3608 11 is_stmt 0 view .LVU4194
 13731 1cd6 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 13732              	.LBB1436:
 13733              	.LBB1367:
 13734              	.LBB1319:
 13735              	.LBB889:
 13736              	.LBB854:
 13737              	.LBB851:
 13738              	.LBB849:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13739              		.loc 1 106 16 view .LVU4195
 13740 1cda 0023     		movs	r3, #0
 13741              	.LBE849:
 13742              	.LBE851:
 13743              	.LBE854:
 13744              	.LBE889:
 13745              	.LBE1319:
 13746              	.LBE1367:
 13747              	.LBE1436:
3608:src/keys.c    **** 	NonProgrammable = 0;
 13748              		.loc 1 3608 10 view .LVU4196
 13749 1cdc 5206     		lsls	r2, r2, #25
 13750              	.LBB1437:
 13751              	.LBB1368:
 13752              	.LBB1320:
 13753              	.LBB890:
 13754              	.LBB855:
 13755              	.LBB852:
 13756              	.LBB850:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13757              		.loc 1 106 16 view .LVU4197
 13758 1cde 88F81030 		strb	r3, [r8, #16]
 108:src/keys.c    **** }
 13759              		.loc 1 108 2 is_stmt 1 view .LVU4198
 13760              	.LVL1176:
ARM GAS  /tmp/cc8xFAqJ.s 			page 376


 108:src/keys.c    **** }
 13761              		.loc 1 108 2 is_stmt 0 view .LVU4199
 13762              	.LBE850:
 13763              	.LBE852:
 13764              	.LBE855:
1361:src/keys.c    **** 			}
 13765              		.loc 1 1361 5 is_stmt 1 view .LVU4200
1361:src/keys.c    **** 			}
 13766              		.loc 1 1361 5 is_stmt 0 view .LVU4201
 13767              	.LBE890:
 13768              	.LBE1320:
 13769              	.LBE1368:
 13770              	.LBE1437:
3608:src/keys.c    **** 	NonProgrammable = 0;
 13771              		.loc 1 3608 7 is_stmt 1 view .LVU4202
3608:src/keys.c    **** 	NonProgrammable = 0;
 13772              		.loc 1 3608 10 is_stmt 0 view .LVU4203
 13773 1ce2 0BD4     		bmi	.L1065
 13774              	.LBB1438:
 13775              	.LBB1369:
 13776              	.LBB1321:
 13777              	.LBB891:
1361:src/keys.c    **** 			}
 13778              		.loc 1 1361 12 view .LVU4204
 13779 1ce4 40F23364 		movw	r4, #1587
 13780 1ce8 3CE6     		b	.L1044
 13781              	.LVL1177:
 13782              	.L1399:
1334:src/keys.c    **** 			}
 13783              		.loc 1 1334 5 is_stmt 1 view .LVU4205
 13784 1cea DAF80030 		ldr	r3, [r10]
 13785 1cee 93F8AC27 		ldrb	r2, [r3, #1964]	@ zero_extendqisi2
 13786 1cf2 6FF3C712 		bfc	r2, #7, #1
 13787 1cf6 83F8AC27 		strb	r2, [r3, #1964]
 13788 1cfa C5E7     		b	.L1058
 13789              	.LVL1178:
 13790              	.L1065:
1334:src/keys.c    **** 			}
 13791              		.loc 1 1334 5 is_stmt 0 view .LVU4206
 13792              	.LBE891:
 13793              	.LBE1321:
 13794              	.LBE1369:
 13795              	.LBE1438:
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13796              		.loc 1 3609 2 is_stmt 1 view .LVU4207
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13797              		.loc 1 3609 18 is_stmt 0 view .LVU4208
 13798 1cfc 4D4A     		ldr	r2, .L1417
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13799              		.loc 1 3610 32 view .LVU4209
 13800 1cfe 40F23360 		movw	r0, #1587
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13801              		.loc 1 3609 18 view .LVU4210
 13802 1d02 1360     		str	r3, [r2]
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13803              		.loc 1 3610 2 is_stmt 1 view .LVU4211
 13804 1d04 FEF7A7BC 		b	.L1096
ARM GAS  /tmp/cc8xFAqJ.s 			page 377


 13805              	.LVL1179:
 13806              	.L1048:
 13807              	.LBB1439:
 13808              	.LBB1370:
 13809              	.LBB1322:
 13810              	.LBB892:
1351:src/keys.c    **** 				return OP_NIL | OP_C_IM;
 13811              		.loc 1 1351 4 view .LVU4212
1351:src/keys.c    **** 				return OP_NIL | OP_C_IM;
 13812              		.loc 1 1351 7 is_stmt 0 view .LVU4213
 13813 1d08 BBF1010F 		cmp	fp, #1
 13814 1d0c 13D0     		beq	.L1062
1354:src/keys.c    **** 				return OP_NIL | OP_C_RE;
 13815              		.loc 1 1354 9 is_stmt 1 view .LVU4214
1354:src/keys.c    **** 				return OP_NIL | OP_C_RE;
 13816              		.loc 1 1354 12 is_stmt 0 view .LVU4215
 13817 1d0e BBF1020F 		cmp	fp, #2
 13818 1d12 B9D1     		bne	.L1058
 13819              	.LVL1180:
1354:src/keys.c    **** 				return OP_NIL | OP_C_RE;
 13820              		.loc 1 1354 12 view .LVU4216
 13821              	.LBE892:
 13822              	.LBE1322:
 13823              	.LBE1370:
 13824              	.LBE1439:
3608:src/keys.c    **** 	NonProgrammable = 0;
 13825              		.loc 1 3608 7 is_stmt 1 view .LVU4217
3608:src/keys.c    **** 	NonProgrammable = 0;
 13826              		.loc 1 3608 11 is_stmt 0 view .LVU4218
 13827 1d14 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3608:src/keys.c    **** 	NonProgrammable = 0;
 13828              		.loc 1 3608 10 view .LVU4219
 13829 1d18 5A06     		lsls	r2, r3, #25
 13830 1d1a 09D5     		bpl	.L1153
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13831              		.loc 1 3609 2 is_stmt 1 view .LVU4220
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13832              		.loc 1 3609 18 is_stmt 0 view .LVU4221
 13833 1d1c 454B     		ldr	r3, .L1417
 13834 1d1e 0022     		movs	r2, #0
 13835 1d20 1A60     		str	r2, [r3]
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13836              		.loc 1 3610 2 is_stmt 1 view .LVU4222
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13837              		.loc 1 3610 32 is_stmt 0 view .LVU4223
 13838 1d22 40F2C510 		movw	r0, #453
 13839 1d26 FEF796BC 		b	.L1096
 13840              	.LVL1181:
 13841              	.L1149:
 13842              	.LBB1440:
 13843              	.LBB1371:
 13844              	.LBB1323:
 13845              	.LBB893:
1301:src/keys.c    **** 			}
 13846              		.loc 1 1301 12 view .LVU4224
 13847 1d2a 40F2C714 		movw	r4, #455
 13848 1d2e 19E6     		b	.L1044
ARM GAS  /tmp/cc8xFAqJ.s 			page 378


 13849              	.LVL1182:
 13850              	.L1153:
1355:src/keys.c    **** 			}
 13851              		.loc 1 1355 12 view .LVU4225
 13852 1d30 40F2C514 		movw	r4, #453
 13853 1d34 16E6     		b	.L1044
 13854              	.LVL1183:
 13855              	.L1062:
1355:src/keys.c    **** 			}
 13856              		.loc 1 1355 12 view .LVU4226
 13857              	.LBE893:
 13858              	.LBE1323:
 13859              	.LBE1371:
 13860              	.LBE1440:
3608:src/keys.c    **** 	NonProgrammable = 0;
 13861              		.loc 1 3608 7 is_stmt 1 view .LVU4227
3608:src/keys.c    **** 	NonProgrammable = 0;
 13862              		.loc 1 3608 11 is_stmt 0 view .LVU4228
 13863 1d36 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3608:src/keys.c    **** 	NonProgrammable = 0;
 13864              		.loc 1 3608 10 view .LVU4229
 13865 1d3a 5906     		lsls	r1, r3, #25
 13866 1d3c 4CD5     		bpl	.L1152
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13867              		.loc 1 3609 2 is_stmt 1 view .LVU4230
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13868              		.loc 1 3609 18 is_stmt 0 view .LVU4231
 13869 1d3e 3D4B     		ldr	r3, .L1417
 13870 1d40 0022     		movs	r2, #0
 13871 1d42 1A60     		str	r2, [r3]
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13872              		.loc 1 3610 2 is_stmt 1 view .LVU4232
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13873              		.loc 1 3610 32 is_stmt 0 view .LVU4233
 13874 1d44 4FF4E370 		mov	r0, #454
 13875 1d48 FEF785BC 		b	.L1096
 13876              	.LVL1184:
 13877              	.L1054:
 13878              	.LBB1441:
 13879              	.LBB1372:
 13880              	.LBB1324:
 13881              	.LBB894:
1343:src/keys.c    **** 				return OP_NIL | OP_C_MIM;
 13882              		.loc 1 1343 4 is_stmt 1 view .LVU4234
1343:src/keys.c    **** 				return OP_NIL | OP_C_MIM;
 13883              		.loc 1 1343 7 is_stmt 0 view .LVU4235
 13884 1d4c BBF1010F 		cmp	fp, #1
 13885 1d50 5CD0     		beq	.L1060
1346:src/keys.c    **** 				return OP_NIL | OP_C_MRE;
 13886              		.loc 1 1346 9 is_stmt 1 view .LVU4236
1346:src/keys.c    **** 				return OP_NIL | OP_C_MRE;
 13887              		.loc 1 1346 12 is_stmt 0 view .LVU4237
 13888 1d52 BBF1030F 		cmp	fp, #3
 13889 1d56 97D1     		bne	.L1058
 13890              	.LVL1185:
1346:src/keys.c    **** 				return OP_NIL | OP_C_MRE;
 13891              		.loc 1 1346 12 view .LVU4238
ARM GAS  /tmp/cc8xFAqJ.s 			page 379


 13892              	.LBE894:
 13893              	.LBE1324:
 13894              	.LBE1372:
 13895              	.LBE1441:
3608:src/keys.c    **** 	NonProgrammable = 0;
 13896              		.loc 1 3608 7 is_stmt 1 view .LVU4239
3608:src/keys.c    **** 	NonProgrammable = 0;
 13897              		.loc 1 3608 11 is_stmt 0 view .LVU4240
 13898 1d58 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3608:src/keys.c    **** 	NonProgrammable = 0;
 13899              		.loc 1 3608 10 view .LVU4241
 13900 1d5c 5806     		lsls	r0, r3, #25
 13901 1d5e 52D5     		bpl	.L1151
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13902              		.loc 1 3609 2 is_stmt 1 view .LVU4242
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 13903              		.loc 1 3609 18 is_stmt 0 view .LVU4243
 13904 1d60 344B     		ldr	r3, .L1417
 13905 1d62 0022     		movs	r2, #0
 13906 1d64 1A60     		str	r2, [r3]
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13907              		.loc 1 3610 2 is_stmt 1 view .LVU4244
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 13908              		.loc 1 3610 32 is_stmt 0 view .LVU4245
 13909 1d66 4FF4E270 		mov	r0, #452
 13910 1d6a FEF774BC 		b	.L1096
 13911              	.LVL1186:
 13912              	.L1396:
 13913              	.LBB1442:
 13914              	.LBB1373:
 13915              	.LBB1325:
 13916              	.LBB895:
1369:src/keys.c    **** 				return OP_CDYA | OP_CDOTDIV;
 13917              		.loc 1 1369 5 is_stmt 1 view .LVU4246
 13918              	.LBB856:
 13919              	.LBI856:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 13920              		.loc 1 114 13 view .LVU4247
 13921              	.LBE856:
 13922              	.LBE895:
 13923              	.LBE1325:
 13924              	.LBE1373:
 13925              	.LBE1442:
 115:src/keys.c    **** }
 13926              		.loc 1 115 2 view .LVU4248
 13927              	.LBB1443:
 13928              	.LBB1374:
 13929              	.LBB1326:
 13930              	.LBB896:
 13931              	.LBB865:
 13932              	.LBB857:
 13933              	.LBI857:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 13934              		.loc 1 104 20 view .LVU4249
 13935              	.LBB858:
 105:src/keys.c    **** 	State2.shifts = shift;
 13936              		.loc 1 105 2 view .LVU4250
ARM GAS  /tmp/cc8xFAqJ.s 			page 380


 13937              	.LBB859:
 13938              	.LBI859:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 13939              		.loc 1 96 13 view .LVU4251
 13940              	.LBB860:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13941              		.loc 1 97 2 view .LVU4252
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 13942              		.loc 1 97 18 is_stmt 0 view .LVU4253
 13943 1d6e FFF7FEFF 		bl	shift_down
 13944              	.LVL1187:
  98:src/keys.c    **** }
 13945              		.loc 1 98 2 is_stmt 1 view .LVU4254
 13946              	.LBE860:
 13947              	.LBE859:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13948              		.loc 1 106 2 view .LVU4255
 13949              	.LBE858:
 13950              	.LBE857:
 13951              	.LBE865:
 13952              	.LBE896:
 13953              	.LBE1326:
 13954              	.LBE1374:
 13955              	.LBE1443:
3608:src/keys.c    **** 	NonProgrammable = 0;
 13956              		.loc 1 3608 11 is_stmt 0 view .LVU4256
 13957 1d72 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 13958              	.LBB1444:
 13959              	.LBB1375:
 13960              	.LBB1327:
 13961              	.LBB897:
 13962              	.LBB866:
 13963              	.LBB863:
 13964              	.LBB861:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13965              		.loc 1 106 16 view .LVU4257
 13966 1d76 0023     		movs	r3, #0
 13967              	.LBE861:
 13968              	.LBE863:
 13969              	.LBE866:
 13970              	.LBE897:
 13971              	.LBE1327:
 13972              	.LBE1375:
 13973              	.LBE1444:
3608:src/keys.c    **** 	NonProgrammable = 0;
 13974              		.loc 1 3608 10 view .LVU4258
 13975 1d78 5506     		lsls	r5, r2, #25
 13976              	.LBB1445:
 13977              	.LBB1376:
 13978              	.LBB1328:
 13979              	.LBB898:
 13980              	.LBB867:
 13981              	.LBB864:
 13982              	.LBB862:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 13983              		.loc 1 106 16 view .LVU4259
 13984 1d7a 88F81030 		strb	r3, [r8, #16]
ARM GAS  /tmp/cc8xFAqJ.s 			page 381


 108:src/keys.c    **** }
 13985              		.loc 1 108 2 is_stmt 1 view .LVU4260
 13986              	.LVL1188:
 108:src/keys.c    **** }
 13987              		.loc 1 108 2 is_stmt 0 view .LVU4261
 13988              	.LBE862:
 13989              	.LBE864:
 13990              	.LBE867:
1370:src/keys.c    **** 			}
 13991              		.loc 1 1370 5 is_stmt 1 view .LVU4262
1370:src/keys.c    **** 			}
 13992              		.loc 1 1370 5 is_stmt 0 view .LVU4263
 13993              	.LBE898:
 13994              	.LBE1328:
 13995              	.LBE1376:
 13996              	.LBE1445:
3608:src/keys.c    **** 	NonProgrammable = 0;
 13997              		.loc 1 3608 7 is_stmt 1 view .LVU4264
3608:src/keys.c    **** 	NonProgrammable = 0;
 13998              		.loc 1 3608 10 is_stmt 0 view .LVU4265
 13999 1d7e 16D4     		bmi	.L1067
 14000              	.LBB1446:
 14001              	.LBB1377:
 14002              	.LBB1329:
 14003              	.LBB899:
1370:src/keys.c    **** 			}
 14004              		.loc 1 1370 12 view .LVU4266
 14005 1d80 40F23464 		movw	r4, #1588
 14006 1d84 EEE5     		b	.L1044
 14007              	.LVL1189:
 14008              	.L1397:
1379:src/keys.c    **** 				State2.state_lift = 0;
 14009              		.loc 1 1379 5 is_stmt 1 view .LVU4267
 14010 1d86 FFF7FEFF 		bl	zero_X
 14011              	.LVL1190:
1380:src/keys.c    **** 				SET_REAL;
 14012              		.loc 1 1380 5 view .LVU4268
1380:src/keys.c    **** 				SET_REAL;
 14013              		.loc 1 1380 23 is_stmt 0 view .LVU4269
 14014 1d8a 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
1381:src/keys.c    **** 				stack_begin (0);
 14015              		.loc 1 1381 5 view .LVU4270
 14016 1d8e DAF80020 		ldr	r2, [r10]
1380:src/keys.c    **** 				SET_REAL;
 14017              		.loc 1 1380 23 view .LVU4271
 14018 1d92 6FF38613 		bfc	r3, #6, #1
 14019 1d96 88F81730 		strb	r3, [r8, #23]
1381:src/keys.c    **** 				stack_begin (0);
 14020              		.loc 1 1381 5 is_stmt 1 view .LVU4272
 14021 1d9a 92F8AC37 		ldrb	r3, [r2, #1964]	@ zero_extendqisi2
 14022 1d9e 43F00203 		orr	r3, r3, #2
 14023 1da2 82F8AC37 		strb	r3, [r2, #1964]
1382:src/keys.c    **** 			}
 14024              		.loc 1 1382 5 view .LVU4273
 14025 1da6 0020     		movs	r0, #0
 14026 1da8 FFF7FEFF 		bl	stack_begin
 14027              	.LVL1191:
ARM GAS  /tmp/cc8xFAqJ.s 			page 382


 14028 1dac 6CE7     		b	.L1058
 14029              	.LVL1192:
 14030              	.L1067:
1382:src/keys.c    **** 			}
 14031              		.loc 1 1382 5 is_stmt 0 view .LVU4274
 14032              	.LBE899:
 14033              	.LBE1329:
 14034              	.LBE1377:
 14035              	.LBE1446:
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14036              		.loc 1 3609 2 is_stmt 1 view .LVU4275
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14037              		.loc 1 3609 18 is_stmt 0 view .LVU4276
 14038 1dae 214A     		ldr	r2, .L1417
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14039              		.loc 1 3610 32 view .LVU4277
 14040 1db0 40F23460 		movw	r0, #1588
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14041              		.loc 1 3609 18 view .LVU4278
 14042 1db4 1360     		str	r3, [r2]
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14043              		.loc 1 3610 2 is_stmt 1 view .LVU4279
 14044 1db6 FEF74EBC 		b	.L1096
 14045              	.LVL1193:
 14046              	.L1055:
 14047              	.LBB1447:
 14048              	.LBB1378:
 14049              	.LBB1330:
 14050              	.LBB900:
1323:src/keys.c    **** 				reset_shift();
 14051              		.loc 1 1323 4 view .LVU4280
1323:src/keys.c    **** 				reset_shift();
 14052              		.loc 1 1323 25 is_stmt 0 view .LVU4281
 14053 1dba 0BF1FF33 		add	r3, fp, #-1
1323:src/keys.c    **** 				reset_shift();
 14054              		.loc 1 1323 7 view .LVU4282
 14055 1dbe DBB2     		uxtb	r3, r3
 14056 1dc0 012B     		cmp	r3, #1
 14057 1dc2 0CD9     		bls	.L1400
1328:src/keys.c    **** 				return process_cmplx(c); // complex exchange of (x,y) with register
 14058              		.loc 1 1328 9 is_stmt 1 view .LVU4283
1328:src/keys.c    **** 				return process_cmplx(c); // complex exchange of (x,y) with register
 14059              		.loc 1 1328 12 is_stmt 0 view .LVU4284
 14060 1dc4 BBF1030F 		cmp	fp, #3
 14061 1dc8 7FF45EAF 		bne	.L1058
1329:src/keys.c    **** 			}
 14062              		.loc 1 1329 5 is_stmt 1 view .LVU4285
1329:src/keys.c    **** 			}
 14063              		.loc 1 1329 12 is_stmt 0 view .LVU4286
 14064 1dcc 0D20     		movs	r0, #13
 14065 1dce FFF7FEFF 		bl	process_cmplx
 14066              	.LVL1194:
 14067 1dd2 0446     		mov	r4, r0
 14068              	.LVL1195:
1329:src/keys.c    **** 			}
 14069              		.loc 1 1329 12 view .LVU4287
 14070 1dd4 FEF704BB 		b	.L835
ARM GAS  /tmp/cc8xFAqJ.s 			page 383


 14071              	.LVL1196:
 14072              	.L1152:
1352:src/keys.c    **** 			}
 14073              		.loc 1 1352 12 view .LVU4288
 14074 1dd8 4FF4E374 		mov	r4, #454
 14075 1ddc C2E5     		b	.L1044
 14076              	.LVL1197:
 14077              	.L1400:
1324:src/keys.c    **** 				CLEAR_POLAR_READY;
 14078              		.loc 1 1324 5 is_stmt 1 view .LVU4289
 14079              	.LBB868:
 14080              	.LBI868:
 114:src/keys.c    **** 	return set_shift(SHIFT_N);
 14081              		.loc 1 114 13 view .LVU4290
 14082              	.LBE868:
 14083              	.LBE900:
 14084              	.LBE1330:
 14085              	.LBE1378:
 14086              	.LBE1447:
 115:src/keys.c    **** }
 14087              		.loc 1 115 2 view .LVU4291
 14088              	.LBB1448:
 14089              	.LBB1379:
 14090              	.LBB1331:
 14091              	.LBB901:
 14092              	.LBB875:
 14093              	.LBB869:
 14094              	.LBI869:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14095              		.loc 1 104 20 view .LVU4292
 14096              	.LBB870:
 105:src/keys.c    **** 	State2.shifts = shift;
 14097              		.loc 1 105 2 view .LVU4293
 14098              	.LBB871:
 14099              	.LBI871:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 14100              		.loc 1 96 13 view .LVU4294
 14101              	.LBB872:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14102              		.loc 1 97 2 view .LVU4295
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14103              		.loc 1 97 18 is_stmt 0 view .LVU4296
 14104 1dde FFF7FEFF 		bl	shift_down
 14105              	.LVL1198:
  98:src/keys.c    **** }
 14106              		.loc 1 98 2 is_stmt 1 view .LVU4297
 14107              	.LBE872:
 14108              	.LBE871:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14109              		.loc 1 106 2 view .LVU4298
 14110              	.LBE870:
 14111              	.LBE869:
 14112              	.LBE875:
1325:src/keys.c    **** 				return RARG(RARG_SWAPX, regY_idx);
 14113              		.loc 1 1325 5 is_stmt 0 view .LVU4299
 14114 1de2 DAF80010 		ldr	r1, [r10]
 14115              	.LBB876:
ARM GAS  /tmp/cc8xFAqJ.s 			page 384


 14116              	.LBB874:
 14117              	.LBB873:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14118              		.loc 1 106 16 view .LVU4300
 14119 1de6 0022     		movs	r2, #0
 14120 1de8 88F81020 		strb	r2, [r8, #16]
 108:src/keys.c    **** }
 14121              		.loc 1 108 2 is_stmt 1 view .LVU4301
 14122              	.LVL1199:
 108:src/keys.c    **** }
 14123              		.loc 1 108 2 is_stmt 0 view .LVU4302
 14124              	.LBE873:
 14125              	.LBE874:
 14126              	.LBE876:
1325:src/keys.c    **** 				return RARG(RARG_SWAPX, regY_idx);
 14127              		.loc 1 1325 5 is_stmt 1 view .LVU4303
 14128 1dec 91F8AD37 		ldrb	r3, [r1, #1965]	@ zero_extendqisi2
 14129 1df0 43F00103 		orr	r3, r3, #1
 14130 1df4 81F8AD37 		strb	r3, [r1, #1965]
1326:src/keys.c    **** 			}
 14131              		.loc 1 1326 5 view .LVU4304
 14132              	.LVL1200:
1326:src/keys.c    **** 			}
 14133              		.loc 1 1326 5 is_stmt 0 view .LVU4305
 14134              	.LBE901:
 14135              	.LBE1331:
 14136              	.LBE1379:
 14137              	.LBE1448:
3608:src/keys.c    **** 	NonProgrammable = 0;
 14138              		.loc 1 3608 7 is_stmt 1 view .LVU4306
3608:src/keys.c    **** 	NonProgrammable = 0;
 14139              		.loc 1 3608 11 is_stmt 0 view .LVU4307
 14140 1df8 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3608:src/keys.c    **** 	NonProgrammable = 0;
 14141              		.loc 1 3608 10 view .LVU4308
 14142 1dfc 5906     		lsls	r1, r3, #25
 14143 1dfe 10D4     		bmi	.L1057
 14144              	.LBB1449:
 14145              	.LBB1380:
 14146              	.LBB1332:
 14147              	.LBB902:
1326:src/keys.c    **** 			}
 14148              		.loc 1 1326 12 view .LVU4309
 14149 1e00 43F26514 		movw	r4, #12645
 14150 1e04 AEE5     		b	.L1044
 14151              	.LVL1201:
 14152              	.L1151:
1347:src/keys.c    **** 			}
 14153              		.loc 1 1347 12 view .LVU4310
 14154 1e06 4FF4E274 		mov	r4, #452
 14155 1e0a ABE5     		b	.L1044
 14156              	.LVL1202:
 14157              	.L1060:
1347:src/keys.c    **** 			}
 14158              		.loc 1 1347 12 view .LVU4311
 14159              	.LBE902:
 14160              	.LBE1332:
ARM GAS  /tmp/cc8xFAqJ.s 			page 385


 14161              	.LBE1380:
 14162              	.LBE1449:
3608:src/keys.c    **** 	NonProgrammable = 0;
 14163              		.loc 1 3608 7 is_stmt 1 view .LVU4312
3608:src/keys.c    **** 	NonProgrammable = 0;
 14164              		.loc 1 3608 11 is_stmt 0 view .LVU4313
 14165 1e0c 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3608:src/keys.c    **** 	NonProgrammable = 0;
 14166              		.loc 1 3608 10 view .LVU4314
 14167 1e10 5C06     		lsls	r4, r3, #25
 14168 1e12 0CD5     		bpl	.L1150
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14169              		.loc 1 3609 2 is_stmt 1 view .LVU4315
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14170              		.loc 1 3609 18 is_stmt 0 view .LVU4316
 14171 1e14 074B     		ldr	r3, .L1417
 14172 1e16 0022     		movs	r2, #0
 14173 1e18 1A60     		str	r2, [r3]
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14174              		.loc 1 3610 2 is_stmt 1 view .LVU4317
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14175              		.loc 1 3610 32 is_stmt 0 view .LVU4318
 14176 1e1a 40F2C310 		movw	r0, #451
 14177 1e1e FEF71ABC 		b	.L1096
 14178              	.LVL1203:
 14179              	.L1057:
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14180              		.loc 1 3609 2 is_stmt 1 view .LVU4319
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14181              		.loc 1 3609 18 is_stmt 0 view .LVU4320
 14182 1e22 044B     		ldr	r3, .L1417
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14183              		.loc 1 3610 32 view .LVU4321
 14184 1e24 43F26510 		movw	r0, #12645
3609:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 14185              		.loc 1 3609 18 view .LVU4322
 14186 1e28 1A60     		str	r2, [r3]
3610:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 14187              		.loc 1 3610 2 is_stmt 1 view .LVU4323
 14188 1e2a FEF714BC 		b	.L1096
 14189              	.LVL1204:
 14190              	.L1150:
 14191              	.LBB1450:
 14192              	.LBB1381:
 14193              	.LBB1333:
 14194              	.LBB903:
1344:src/keys.c    **** 			}
 14195              		.loc 1 1344 12 is_stmt 0 view .LVU4324
 14196 1e2e 40F2C314 		movw	r4, #451
 14197 1e32 97E5     		b	.L1044
 14198              	.L1418:
 14199              		.align	2
 14200              	.L1417:
 14201 1e34 00000000 		.word	NonProgrammable
 14202              	.LBE903:
 14203              	.LBE1333:
 14204              	.LBE1381:
ARM GAS  /tmp/cc8xFAqJ.s 			page 386


 14205              	.LBE1450:
 14206              		.cfi_endproc
 14207              	.LFE63:
 14209              		.section	.text.process_keycode_with_shift,"ax",%progbits
 14210              		.align	1
 14211              		.p2align 2,,3
 14212              		.global	process_keycode_with_shift
 14213              		.syntax unified
 14214              		.thumb
 14215              		.thumb_func
 14216              		.fpu fpv4-sp-d16
 14218              	process_keycode_with_shift:
 14219              	.LFB62:
3361:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 14220              		.loc 1 3361 61 is_stmt 1 view -0
 14221              		.cfi_startproc
 14222              		@ args = 0, pretend = 0, frame = 8
 14223              		@ frame_needed = 0, uses_anonymous_args = 0
 14224 0000 30B5     		push	{r4, r5, lr}
 14225              		.cfi_def_cfa_offset 12
 14226              		.cfi_offset 4, -12
 14227              		.cfi_offset 5, -8
 14228              		.cfi_offset 14, -4
 14229 0002 83B0     		sub	sp, sp, #12
 14230              		.cfi_def_cfa_offset 24
3361:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 14231              		.loc 1 3361 61 is_stmt 0 view .LVU4326
 14232 0004 02AB     		add	r3, sp, #8
 14233 0006 03E90300 		stmdb	r3, {r0, r1}
 14234 000a 9DF80040 		ldrb	r4, [sp]	@ zero_extendqisi2
 14235              	.LVL1205:
3362:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 14236              		.loc 1 3362 4 is_stmt 1 view .LVU4327
3362:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 14237              		.loc 1 3362 7 is_stmt 0 view .LVU4328
 14238 000e 2E2C     		cmp	r4, #46
 14239 0010 10D0     		beq	.L1419
3363:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 14240              		.loc 1 3363 4 is_stmt 1 view .LVU4329
3363:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 14241              		.loc 1 3363 7 is_stmt 0 view .LVU4330
 14242 0012 332C     		cmp	r4, #51
 14243 0014 1DD0     		beq	.L1426
3372:src/keys.c    ****      nd_opcode = remapped.shift;
 14244              		.loc 1 3372 7 view .LVU4331
 14245 0016 342C     		cmp	r4, #52
 14246 0018 019D     		ldr	r5, [sp, #4]
3372:src/keys.c    ****      nd_opcode = remapped.shift;
 14247              		.loc 1 3372 4 is_stmt 1 view .LVU4332
3372:src/keys.c    ****      nd_opcode = remapped.shift;
 14248              		.loc 1 3372 7 is_stmt 0 view .LVU4333
 14249 001a 0DD0     		beq	.L1427
3376:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14250              		.loc 1 3376 9 is_stmt 1 view .LVU4334
3376:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14251              		.loc 1 3376 12 is_stmt 0 view .LVU4335
 14252 001c 002D     		cmp	r5, #0
ARM GAS  /tmp/cc8xFAqJ.s 			page 387


 14253 001e 03DB     		blt	.L1424
3376:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14254              		.loc 1 3376 34 is_stmt 1 discriminator 1 view .LVU4336
 14255              	.LVL1206:
 14256              	.LBB1451:
 14257              	.LBI1451:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14258              		.loc 1 104 20 discriminator 1 view .LVU4337
 14259              	.LBB1452:
 105:src/keys.c    **** 	State2.shifts = shift;
 14260              		.loc 1 105 2 discriminator 1 view .LVU4338
 14261              	.LBB1453:
 14262              	.LBI1453:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 14263              		.loc 1 96 13 discriminator 1 view .LVU4339
 14264              	.LBB1454:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14265              		.loc 1 97 2 discriminator 1 view .LVU4340
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14266              		.loc 1 97 18 is_stmt 0 discriminator 1 view .LVU4341
 14267 0020 FFF7FEFF 		bl	shift_down
 14268              	.LVL1207:
  98:src/keys.c    **** }
 14269              		.loc 1 98 2 is_stmt 1 discriminator 1 view .LVU4342
 14270              	.LBE1454:
 14271              	.LBE1453:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14272              		.loc 1 106 2 discriminator 1 view .LVU4343
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14273              		.loc 1 106 16 is_stmt 0 discriminator 1 view .LVU4344
 14274 0024 194B     		ldr	r3, .L1428
 14275              	.LBE1452:
 14276              	.LBE1451:
3376:src/keys.c    ****    process_keycode ( remapped.key_34s );
 14277              		.loc 1 3376 34 discriminator 1 view .LVU4345
 14278 0026 1D74     		strb	r5, [r3, #16]
 14279              	.LBB1456:
 14280              	.LBB1455:
 108:src/keys.c    **** }
 14281              		.loc 1 108 2 is_stmt 1 discriminator 1 view .LVU4346
 14282              	.LVL1208:
 14283              	.L1424:
 108:src/keys.c    **** }
 14284              		.loc 1 108 2 is_stmt 0 discriminator 1 view .LVU4347
 14285              	.LBE1455:
 14286              	.LBE1456:
3377:src/keys.c    ****  }
 14287              		.loc 1 3377 4 is_stmt 1 view .LVU4348
 14288 0028 2046     		mov	r0, r4
3378:src/keys.c    ****  
 14289              		.loc 1 3378 2 is_stmt 0 view .LVU4349
 14290 002a 03B0     		add	sp, sp, #12
 14291              		.cfi_remember_state
 14292              		.cfi_def_cfa_offset 12
 14293              		@ sp needed
 14294 002c BDE83040 		pop	{r4, r5, lr}
 14295              		.cfi_restore 14
ARM GAS  /tmp/cc8xFAqJ.s 			page 388


 14296              		.cfi_restore 5
 14297              		.cfi_restore 4
 14298              		.cfi_def_cfa_offset 0
 14299              	.LVL1209:
3377:src/keys.c    ****  }
 14300              		.loc 1 3377 4 view .LVU4350
 14301 0030 FFF7FEBF 		b	process_keycode
 14302              	.LVL1210:
 14303              	.L1419:
 14304              		.cfi_restore_state
3378:src/keys.c    ****  
 14305              		.loc 1 3378 2 view .LVU4351
 14306 0034 03B0     		add	sp, sp, #12
 14307              		.cfi_remember_state
 14308              		.cfi_def_cfa_offset 12
 14309              		@ sp needed
 14310 0036 30BD     		pop	{r4, r5, pc}
 14311              	.LVL1211:
 14312              	.L1427:
 14313              		.cfi_restore_state
3373:src/keys.c    ****      set_shift(SHIFT_N);
 14314              		.loc 1 3373 6 is_stmt 1 view .LVU4352
3373:src/keys.c    ****      set_shift(SHIFT_N);
 14315              		.loc 1 3373 16 is_stmt 0 view .LVU4353
 14316 0038 154B     		ldr	r3, .L1428+4
 14317 003a 1D60     		str	r5, [r3]
3374:src/keys.c    ****    }
 14318              		.loc 1 3374 6 is_stmt 1 view .LVU4354
 14319              	.LVL1212:
 14320              	.LBB1457:
 14321              	.LBI1457:
 104:src/keys.c    **** 	enum shifts r = cur_shift();
 14322              		.loc 1 104 20 view .LVU4355
 14323              	.LBB1458:
 105:src/keys.c    **** 	State2.shifts = shift;
 14324              		.loc 1 105 2 view .LVU4356
 14325              	.LBB1459:
 14326              	.LBI1459:
  96:src/keys.c    **** 	enum shifts s = shift_down();
 14327              		.loc 1 96 13 view .LVU4357
 14328              	.LBB1460:
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14329              		.loc 1 97 2 view .LVU4358
  97:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 14330              		.loc 1 97 18 is_stmt 0 view .LVU4359
 14331 003c FFF7FEFF 		bl	shift_down
 14332              	.LVL1213:
  98:src/keys.c    **** }
 14333              		.loc 1 98 2 is_stmt 1 view .LVU4360
 14334              	.LBE1460:
 14335              	.LBE1459:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14336              		.loc 1 106 2 view .LVU4361
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14337              		.loc 1 106 16 is_stmt 0 view .LVU4362
 14338 0040 124B     		ldr	r3, .L1428
 14339 0042 0022     		movs	r2, #0
ARM GAS  /tmp/cc8xFAqJ.s 			page 389


 14340              	.LBE1458:
 14341              	.LBE1457:
3377:src/keys.c    ****  }
 14342              		.loc 1 3377 4 view .LVU4363
 14343 0044 2046     		mov	r0, r4
 14344              	.LBB1462:
 14345              	.LBB1461:
 106:src/keys.c    **** 	//	State2.alpha_pos = 0;
 14346              		.loc 1 106 16 view .LVU4364
 14347 0046 1A74     		strb	r2, [r3, #16]
 108:src/keys.c    **** }
 14348              		.loc 1 108 2 is_stmt 1 view .LVU4365
 14349              	.LVL1214:
 108:src/keys.c    **** }
 14350              		.loc 1 108 2 is_stmt 0 view .LVU4366
 14351              	.LBE1461:
 14352              	.LBE1462:
3377:src/keys.c    ****  }
 14353              		.loc 1 3377 4 is_stmt 1 view .LVU4367
3378:src/keys.c    ****  
 14354              		.loc 1 3378 2 is_stmt 0 view .LVU4368
 14355 0048 03B0     		add	sp, sp, #12
 14356              		.cfi_remember_state
 14357              		.cfi_def_cfa_offset 12
 14358              		@ sp needed
 14359 004a BDE83040 		pop	{r4, r5, lr}
 14360              		.cfi_restore 14
 14361              		.cfi_restore 5
 14362              		.cfi_restore 4
 14363              		.cfi_def_cfa_offset 0
 14364              	.LVL1215:
3377:src/keys.c    ****  }
 14365              		.loc 1 3377 4 view .LVU4369
 14366 004e FFF7FEBF 		b	process_keycode
 14367              	.LVL1216:
 14368              	.L1426:
 14369              		.cfi_restore_state
3364:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 14370              		.loc 1 3364 6 is_stmt 1 view .LVU4370
 14371 0052 104B     		ldr	r3, .L1428+8
 14372 0054 41F23010 		movw	r0, #4400
 14373 0058 9847     		blx	r3
 14374              	.LVL1217:
3364:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 14375              		.loc 1 3364 31 view .LVU4371
 14376 005a 0A20     		movs	r0, #10
 14377 005c 0E4B     		ldr	r3, .L1428+12
 14378 005e 9847     		blx	r3
 14379              	.LVL1218:
3364:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 14380              		.loc 1 3364 46 view .LVU4372
 14381 0060 0E4B     		ldr	r3, .L1428+16
 14382 0062 9847     		blx	r3
 14383              	.LVL1219:
3365:src/keys.c    ****        // Was error just wait for confirmation
 14384              		.loc 1 3365 6 view .LVU4373
3365:src/keys.c    ****        // Was error just wait for confirmation
ARM GAS  /tmp/cc8xFAqJ.s 			page 390


 14385              		.loc 1 3365 11 is_stmt 0 view .LVU4374
 14386 0064 0E4B     		ldr	r3, .L1428+20
 14387 0066 0120     		movs	r0, #1
 14388 0068 9847     		blx	r3
 14389              	.LVL1220:
3365:src/keys.c    ****        // Was error just wait for confirmation
 14390              		.loc 1 3365 9 view .LVU4375
 14391 006a 0228     		cmp	r0, #2
 14392 006c 01D1     		bne	.L1422
3367:src/keys.c    ****      }
 14393              		.loc 1 3367 8 is_stmt 1 view .LVU4376
 14394 006e 0D4B     		ldr	r3, .L1428+24
 14395 0070 9847     		blx	r3
 14396              	.LVL1221:
 14397              	.L1422:
3369:src/keys.c    ****      return;
 14398              		.loc 1 3369 6 view .LVU4377
 14399 0072 084B     		ldr	r3, .L1428+8
 14400 0074 42F26020 		movw	r0, #8800
 14401 0078 9847     		blx	r3
 14402              	.LVL1222:
3369:src/keys.c    ****      return;
 14403              		.loc 1 3369 31 view .LVU4378
 14404 007a 074B     		ldr	r3, .L1428+12
 14405 007c 0A20     		movs	r0, #10
 14406 007e 9847     		blx	r3
 14407              	.LVL1223:
3369:src/keys.c    ****      return;
 14408              		.loc 1 3369 46 view .LVU4379
 14409 0080 064B     		ldr	r3, .L1428+16
3378:src/keys.c    ****  
 14410              		.loc 1 3378 2 is_stmt 0 view .LVU4380
 14411 0082 03B0     		add	sp, sp, #12
 14412              		.cfi_def_cfa_offset 12
 14413              		@ sp needed
 14414 0084 BDE83040 		pop	{r4, r5, lr}
 14415              		.cfi_restore 14
 14416              		.cfi_restore 5
 14417              		.cfi_restore 4
 14418              		.cfi_def_cfa_offset 0
 14419              	.LVL1224:
3369:src/keys.c    ****      return;
 14420              		.loc 1 3369 46 view .LVU4381
 14421 0088 1847     		bx	r3	@ indirect register sibling call
 14422              	.LVL1225:
 14423              	.L1429:
 14424 008a 00BF     		.align	2
 14425              	.L1428:
 14426 008c 00000000 		.word	StateWhileOn
 14427 0090 00000000 		.word	nd_opcode
 14428 0094 F5020008 		.word	134218485
 14429 0098 05040008 		.word	134218757
 14430 009c F9020008 		.word	134218489
 14431 00a0 79030008 		.word	134218617
 14432 00a4 99030008 		.word	134218649
 14433              		.cfi_endproc
 14434              	.LFE62:
ARM GAS  /tmp/cc8xFAqJ.s 			page 391


 14436              		.comm	nd_opcode,4,4
 14437              		.comm	NonProgrammable,4,4
 14438              		.comm	GoFast,4,4
 14439              		.comm	OpCodeDisplayPending,4,4
 14440              		.comm	OpCode,4,4
 14441              		.comm	WasDataEntry,4,4
 14442              		.section	.bss.was_paused.9788,"aw",%nobits
 14443              		.align	2
 14444              		.set	.LANCHOR18,. + 0
 14447              	was_paused.9788:
 14448 0000 00000000 		.space	4
 14449              		.section	.rodata.alpha_arrows,"a"
 14450              		.align	2
 14453              	alpha_arrows:
 14454 0000 0D0E100F 		.ascii	"\015\016\020\017\003\004\237^\177"
 14454      03049F5E 
 14454      7F
 14455              		.section	.rodata.alpha_catalogue,"a"
 14456              		.align	2
 14459              	alpha_catalogue:
 14460 0000 0D4AC280 		.ascii	"\015J\302\200\236\261\212\242~\303\261\354\213&\312"
 14460      9EB18AA2 
 14460      7EC3B1EC 
 14460      8B26CA
 14461 000f 284AB0   		.ascii	"(J\260"
 14462              		.section	.rodata.alpha_compares,"a"
 14463              		.align	2
 14466              	alpha_compares:
 14467 0000 3C093D1D 		.ascii	"<\011=\035\012>[]{}"
 14467      0A3E5B5D 
 14467      7B7D
 14468              		.section	.rodata.alpha_letters,"a"
 14469              		.align	2
 14470              		.set	.LANCHOR9,. + 0
 14473              	alpha_letters:
 14474 0000 C0C1C2C3 		.ascii	"\300\301\302\303\210\304\305\306\307\204\310\311\312"
 14474      88C4C5C6 
 14474      C784C8C9 
 14474      CA
 14475 000d CB9ECCCD 		.ascii	"\313\236\314\315\316\317\320\321\322\323\324\025\325"
 14475      CECFD0D1 
 14475      D2D3D415 
 14475      D5
 14476 001a D618D8D9 		.ascii	"\326\030\330\331\332\333\334\001\031\002\335\032\336"
 14476      DADBDC01 
 14476      1902DD1A 
 14476      DE
 14477 0027 DF       		.ascii	"\337"
 14478              		.section	.rodata.alpha_letters_lower,"a"
 14479              		.align	2
 14480              		.set	.LANCHOR10,. + 0
 14483              	alpha_letters_lower:
 14484 0000 E0E1E2E3 		.ascii	"\340\341\342\343\211\344\345\346\347\205\350\351\352"
 14484      89E4E5E6 
 14484      E785E8E9 
 14484      EA
 14485 000d EB9EECED 		.ascii	"\353\236\354\355\356\357\360\361\362\363\364\026\365"
ARM GAS  /tmp/cc8xFAqJ.s 			page 392


 14485      EEEFF0F1 
 14485      F2F3F416 
 14485      F5
 14486 001a F618F8F9 		.ascii	"\366\030\370\371\372\373\374\001\031\002\375\032\376"
 14486      FAFBFC01 
 14486      1902FD1A 
 14486      FE
 14487 0027 FF       		.ascii	"\377"
 14488              		.section	.rodata.alpha_subscripts,"a"
 14489              		.align	2
 14492              	alpha_subscripts:
 14493 0000 B805B9BA 		.ascii	"\270\005\271\272\232\200\327\230\273\024\206\274\367"
 14493      9A80D798 
 14493      BB1486BC 
 14493      F7
 14494 000d 1BBDBE93 		.ascii	"\033\275\276\223\277\201\213\234\214\231\235\220\233"
 14494      BF818B9C 
 14494      8C999D90 
 14494      9B
 14495              		.section	.rodata.alpha_symbols,"a"
 14496              		.align	2
 14499              	alpha_symbols:
 14500 0000 2C3A3B27 		.ascii	",:;'\"*@_~%$\014\036\037\216\256\222`#"
 14500      222A405F 
 14500      7E25240C 
 14500      1E1F8EAE 
 14500      926023
 14501              		.section	.rodata.alphamap.9274,"a"
 14502              		.align	2
 14503              		.set	.LANCHOR15,. + 0
 14506              	alphamap.9274:
 14507 0000 41004100 		.ascii	"A\000A\000a\240"
 14507      61A0
 14508 0006 42004200 		.ascii	"B\000B\000b\241"
 14508      62A1
 14509 000c 43008200 		.ascii	"C\000\202\000c\242"
 14509      63A2
 14510 0012 44008300 		.ascii	"D\000\203\000d\243"
 14510      64A3
 14511 0018 450D4500 		.ascii	"E\015E\000e\244"
 14511      65A4
 14512 001e 46009400 		.ascii	"F\000\224\000f\264"
 14512      66B4
 14513 0024 47008200 		.ascii	"G\000\202\000g\242"
 14513      67A2
 14514 002a 48005800 		.ascii	"H\000X\000h\265"
 14514      68B5
 14515 0030 49004900 		.ascii	"I\000I\000i\250"
 14515      69A8
 14516 0036 4AAF0000 		.ascii	"J\257\000\000j\000"
 14516      6A00
 14517 003c 4B004B00 		.ascii	"K\000K\000k\251"
 14517      6BA9
 14518 0042 4C008A00 		.ascii	"L\000\212\000l\252"
 14518      6CAA
 14519 0048 00004800 		.ascii	"\000\000H\000\000\246"
 14519      00A6
ARM GAS  /tmp/cc8xFAqJ.s 			page 393


 14520 004e 4D00AB17 		.ascii	"M\000\253\027m\253"
 14520      6DAB
 14521 0054 4E084E95 		.ascii	"N\010N\225n\254"
 14521      6EAC
 14522 005a 4F0097AF 		.ascii	"O\000\227\257o\267"
 14522      6FB7
 14523 0060 00000000 		.ascii	"\000\000\000\000\000\000"
 14523      0000
 14524 0066 00000000 		.ascii	"\000\000\000\000\000\000"
 14524      0000
 14525 006c 50378F26 		.ascii	"P7\217&p\257"
 14525      70AF
 14526 0072 5138007C 		.ascii	"Q8\000|q\000"
 14526      7100
 14527 0078 5239520B 		.ascii	"R9R\013r\260"
 14527      72B0
 14528 007e 532F915C 		.ascii	"S/\221\\s\261"
 14528      73B1
 14529 0084 00000021 		.ascii	"\000\000\000!\000\000"
 14529      0000
 14530 008a 54345400 		.ascii	"T4T\000t\262"
 14530      74B2
 14531 0090 55350000 		.ascii	"U5\000\000u\000"
 14531      7500
 14532 0096 56360000 		.ascii	"V6\000\000v\000"
 14532      7600
 14533 009c 571C0000 		.ascii	"W\034\000\000w\000"
 14533      7700
 14534 00a2 0000003F 		.ascii	"\000\000\000?\000\000"
 14534      0000
 14535 00a8 58318D00 		.ascii	"X1\215\000x\255"
 14535      78AD
 14536 00ae 59325900 		.ascii	"Y2Y\000y\263"
 14536      79B3
 14537 00b4 5A335A00 		.ascii	"Z3Z\000z\245"
 14537      7AA5
 14538 00ba 2D282900 		.ascii	"-()\000\000\000"
 14538      0000
 14539 00c0 00000000 		.ascii	"\000\000\000\000\000\000"
 14539      0000
 14540 00c6 3A308720 		.ascii	":0\207 ;\247"
 14540      3BA7
 14541 00cc 2E2E9600 		.ascii	"..\226\000.\266"
 14541      2EB6
 14542 00d2 3F002100 		.ascii	"?\000!\000?\000"
 14542      3F00
 14543 00d8 202B3D00 		.ascii	" +=\000  "
 14543      2020
 14544 00de 00000000 		.ascii	"\000\000\000\000\000\000"
 14544      0000
 14545              		.section	.rodata.amap.9265,"a"
 14546              		.align	2
 14547              		.set	.LANCHOR16,. + 0
 14550              	amap.9265:
 14551 0000 04       		.byte	4
 14552 0001 000D00   		.ascii	"\000\015\000"
 14553 0004 05       		.byte	5
ARM GAS  /tmp/cc8xFAqJ.s 			page 394


 14554 0005 000E09   		.ascii	"\000\016\011"
 14555 0008 2C       		.byte	44
 14556 0009 000D00   		.ascii	"\000\015\000"
 14557 000c 2D       		.byte	45
 14558 000d 000E09   		.ascii	"\000\016\011"
 14559 0010 08       		.byte	8
 14560 0011 00000F   		.ascii	"\000\000\017"
 14561 0014 1F       		.byte	31
 14562 0015 00000C   		.ascii	"\000\000\014"
 14563 0018 21       		.byte	33
 14564 0019 00000A   		.ascii	"\000\000\012"
 14565 001c 26       		.byte	38
 14566 001d 00000B   		.ascii	"\000\000\013"
 14567              		.section	.rodata.catalogue,"a"
 14568              		.align	2
 14571              	catalogue:
 14572 0000 431A766C 		.ascii	"C\032vl\301_W\343\330\242;X\026\310}Dq\341\011tc\222"
 14572      C15F57E3 
 14572      D8A23B58 
 14572      16C87D44 
 14572      71E10974 
 14573 0016 E4BD8341 		.ascii	"\344\275\203A\230\3644\365j\222\024\211\023n\033\226"
 14573      98F434F5 
 14573      6A921489 
 14573      136E1B96 
 14574 0026 A1A9655C 		.ascii	"\241\251e\\\014q\303o\327W\011\253m\320W\035\235IX&"
 14574      0C71C36F 
 14574      D75709AB 
 14574      6DD0571D 
 14574      9D495826 
 14575 003a 699965D8 		.ascii	"i\231e\330\006\275\2760\333\006\321\022\305\017|O\017"
 14575      06BDBE30 
 14575      DB06D112 
 14575      C50F7C4F 
 14575      0F
 14576 004b C40FB468 		.ascii	"\304\017\264h\302\307J6\325\204m\203U\314\312B\020t"
 14576      C2C74A36 
 14576      D5846D83 
 14576      55CCCA42 
 14576      1074
 14577 005d 250B6C4A 		.ascii	"%\013lJ\306\351\177pJ\002z\306*\211\373\026\303\261"
 14577      C6E97F70 
 14577      4A027AC6 
 14577      2A89FB16 
 14577      C3B1
 14578 006f EC8B26CA 		.ascii	"\354\213&\312\261\012\022\255\234I\032\006\205\236g"
 14578      B10A12AD 
 14578      9C491A06 
 14578      859E67
 14579 007e DB35F18D 		.ascii	"\3335\361\215@\034\306\225\306[V\246\220"
 14579      401CC695 
 14579      C65B56A6 
 14579      90
 14580              		.section	.rodata.catalogue_sizes.9586,"a"
 14581              		.align	2
 14582              		.set	.LANCHOR8,. + 0
 14585              	catalogue_sizes.9586:
ARM GAS  /tmp/cc8xFAqJ.s 			page 395


 14586 0000 006F1E11 		.ascii	"\000o\036\0216=C\205%4\016\023\012\011(\032LLX\016\023"
 14586      363D4385 
 14586      25340E13 
 14586      0A09281A 
 14586      4C4C580E 
 14587              		.section	.rodata.catalogues.9594,"a"
 14588              		.align	2
 14589              		.set	.LANCHOR12,. + 0
 14592              	catalogues.9594:
 14593 0000 00000000 		.word	0
 14594 0004 00000000 		.word	catalogue
 14595 0008 00000000 		.word	cplx_catalogue
 14596 000c 00000000 		.word	stats_catalogue
 14597 0010 00000000 		.word	prob_catalogue
 14598 0014 00000000 		.word	int_catalogue
 14599 0018 00000000 		.word	prog_catalogue
 14600 001c 00000000 		.word	program_xfcn
 14601 0020 00000000 		.word	test_catalogue
 14602 0024 00000000 		.word	mode_catalogue
 14603 0028 00000000 		.word	alpha_catalogue
 14604 002c 00000000 		.word	alpha_symbols
 14605 0030 00000000 		.word	alpha_compares
 14606 0034 00000000 		.word	alpha_arrows
 14607 0038 00000000 		.word	alpha_letters
 14608 003c 00000000 		.word	alpha_subscripts
 14609 0040 00000000 		.word	0
 14610 0044 00000000 		.word	0
 14611 0048 00000000 		.word	0
 14612 004c 00000000 		.word	sums_catalogue
 14613 0050 00000000 		.word	matrix_catalogue
 14614              		.section	.rodata.cmap.9264,"a"
 14615              		.align	2
 14616              		.set	.LANCHOR17,. + 0
 14619              	cmap.9264:
 14620 0000 04       		.byte	4
 14621 0001 120012   		.ascii	"\022\000\022"
 14622 0004 05       		.byte	5
 14623 0005 090909   		.ascii	"\011\011\011"
 14624 0008 06       		.byte	6
 14625 0009 151515   		.ascii	"\025\025\025"
 14626 000c 0C       		.byte	12
 14627 000d 100011   		.ascii	"\020\000\021"
 14628 0010 19       		.byte	25
 14629 0011 040004   		.ascii	"\004\000\004"
 14630 0014 1A       		.byte	26
 14631 0015 030003   		.ascii	"\003\000\003"
 14632 0018 1B       		.byte	27
 14633 0019 130013   		.ascii	"\023\000\023"
 14634 001c 1C       		.byte	28
 14635 001d 140014   		.ascii	"\024\000\024"
 14636 0020 1E       		.byte	30
 14637 0021 171717   		.ascii	"\027\027\027"
 14638 0024 1F       		.byte	31
 14639 0025 080808   		.ascii	"\010\010\010"
 14640 0028 20       		.byte	32
 14641 0029 060606   		.ascii	"\006\006\006"
 14642 002c 21       		.byte	33
ARM GAS  /tmp/cc8xFAqJ.s 			page 396


 14643 002d 010502   		.ascii	"\001\005\002"
 14644              		.section	.rodata.conv_catalogue,"a"
 14645              		.align	2
 14646              		.set	.LANCHOR11,. + 0
 14649              	conv_catalogue:
 14650 0000 DADB8C8A 		.ascii	"\332\333\214\212+-\3357'913\021\026\005\334\336\031"
 14650      2B2DDD37 
 14650      27393133 
 14650      111605DC 
 14650      DE19
 14651 0012 1D1B1315 		.ascii	"\035\033\023\025\015\017\215\010\217\012*,GCE\027?0"
 14651      0D0F8D08 
 14651      8F0A2A2C 
 14651      47434517 
 14651      3F30
 14652 0024 32340400 		.ascii	"24\004\000\002\006&\" ($5/\001#\020\014\016!\022\024"
 14652      02062622 
 14652      20282435 
 14652      2F012310 
 14652      0C0E2112 
 14653 0039 3B181A1C 		.ascii	";\030\032\034\036).\01168>:<@%\337=\213\216\003\007"
 14653      1E292E09 
 14653      36383E3A 
 14653      3C4025DF 
 14653      3D8B8E03 
 14654 004e 4B49410B 		.ascii	"KIA\013JHFBD\037"
 14654      4A484642 
 14654      441F
 14655              		.section	.rodata.conv_mapping.9633,"a"
 14656              		.align	2
 14657              		.set	.LANCHOR14,. + 0
 14660              	conv_mapping.9633:
 14661 0000 8502     		.short	645
 14662 0002 8402     		.short	644
 14663 0004 8602     		.short	646
 14664 0006 8702     		.short	647
 14665 0008 8202     		.short	642
 14666 000a 8302     		.short	643
 14667 000c 3202     		.short	562
 14668 000e 3302     		.short	563
 14669 0010 3402     		.short	564
 14670 0012 3502     		.short	565
 14671 0014 3602     		.short	566
 14672 0016 3702     		.short	567
 14673              		.section	.rodata.cplx_catalogue,"a"
 14674              		.align	2
 14677              	cplx_catalogue:
 14678 0000 79E82CA2 		.ascii	"y\350,\242\010;\316\341\015\341z\037\307\366p\246\351"
 14678      083BCEE1 
 14678      0DE17A1F 
 14678      C7F670A6 
 14678      E9
 14679 0011 AA75E09E 		.ascii	"\252u\340\236 \007Y\365x\236G\232\225\247+\351\335\377"
 14679      200759F5 
 14679      789E479A 
 14679      95A72BE9 
 14679      DDFF
ARM GAS  /tmp/cc8xFAqJ.s 			page 397


 14680 0023 9A1DB0   		.ascii	"\232\035\260"
 14681              		.section	.rodata.disp.9444,"a"
 14682              		.align	2
 14683              		.set	.LANCHOR21,. + 0
 14686              	disp.9444:
 14687 0000 03       		.byte	3
 14688 0001 02       		.byte	2
 14689 0002 05       		.byte	5
 14690 0003 04       		.byte	4
 14691              		.section	.rodata.int_catalogue,"a"
 14692              		.align	2
 14695              	int_catalogue:
 14696 0000 43301307 		.ascii	"C0\023\007\003=\234RY\304\020\230\374\021\015=Z\246"
 14696      033D9C52 
 14696      59C41098 
 14696      FC110D3D 
 14696      5AA6
 14697 0012 55AB2530 		.ascii	"U\253%0|!\232fW&]\257\\[\343\015\260%o\273\364\367\277"
 14697      7C219A66 
 14697      57265DAF 
 14697      5C5BE30D 
 14697      B0256FBB 
 14698 0029 2FEC0868 		.ascii	"/\354\010h>\357\374\003\035a\003S)\013lJ\306\352\306"
 14698      3EEFFC03 
 14698      1D610353 
 14698      290B6C4A 
 14698      C6EAC6
 14699 003c 2AAC5B0E 		.ascii	"*\254[\016\307\262,\233*\304*\322D\001\315s\200"
 14699      C7B22C9B 
 14699      2AC42AD2 
 14699      4401CD73 
 14699      80
 14700              		.section	.rodata.linear_key_map.9230,"a"
 14701              		.align	2
 14702              		.set	.LANCHOR6,. + 0
 14705              	linear_key_map.9230:
 14706 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\011\012\013\014"
 14706      04050607 
 14706      08090A0B 
 14706      0C
 14707 000d 0D0E0F10 		.ascii	"\015\016\017\020\000\021\022\023\024\025\000\026\027"
 14707      00111213 
 14707      14150016 
 14707      17
 14708 001a 18191A00 		.ascii	"\030\031\032\000\033\034\035\036\037\000 !\"#$%%%%%"
 14708      1B1C1D1E 
 14708      1F002021 
 14708      22232425 
 14708      25252525 
 14709 002e 25       		.ascii	"%"
 14710              		.section	.rodata.linear_key_map.9234,"a"
 14711              		.align	2
 14712              		.set	.LANCHOR1,. + 0
 14715              	linear_key_map.9234:
 14716 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\"\"\"\011\012\013"
 14716      04050607 
 14716      08222222 
ARM GAS  /tmp/cc8xFAqJ.s 			page 398


 14716      090A0B
 14717 000f 0C0D000E 		.ascii	"\014\015\000\016\017\020\021\022\000\023\024\025\026"
 14717      0F101112 
 14717      00131415 
 14717      16
 14718 001c 17001819 		.ascii	"\027\000\030\031\032\033\034\000\035\036\037 !\"\"\""
 14718      1A1B1C00 
 14718      1D1E1F20 
 14718      21222222 
 14719 002c 040522   		.ascii	"\004\005\""
 14720              		.section	.rodata.map.9246,"a"
 14721              		.align	2
 14722              		.set	.LANCHOR5,. + 0
 14725              	map.9246:
 14726 0000 E8E9EAEB 		.ascii	"\350\351\352\353\377\177\177\177mnol\377\377\377\377"
 14726      FF7F7F7F 
 14726      6D6E6F6C 
 14726      FFFFFFFF 
 14727 0010 FF7F0708 		.ascii	"\377\177\007\010\011\177\177\347\005\006\177\177\344"
 14727      097F7FE7 
 14727      05067F7F 
 14727      E4
 14728 001d E5E67FFF 		.ascii	"\345\346\177\377\000\360\177\177\377\377\377\377\377"
 14728      00F07F7F 
 14728      FFFFFFFF 
 14728      FF
 14729 002a FF       		.ascii	"\377"
 14730              		.section	.rodata.matrix_catalogue,"a"
 14731              		.align	2
 14734              	matrix_catalogue:
 14735 0000 62DCB364 		.ascii	"b\334\263d\3305\334\223m\205o\030f\355\310oX\2461\312"
 14735      D835DC93 
 14735      6D856F18 
 14735      66EDC86F 
 14735      58A631CA 
 14736 0014 6258861C 		.ascii	"bX\206\034"
 14737              		.section	.rodata.mode_catalogue,"a"
 14738              		.align	2
 14741              	mode_catalogue:
 14742 0000 2948C290 		.ascii	")H\302\220\213\302Fc\250\351\037\210\001\374|\273\211"
 14742      8BC24663 
 14742      A8E91F88 
 14742      01FC7CBB 
 14742      89
 14743 0011 818CCF24 		.ascii	"\201\214\317$I\302lb\031I2H\232\0311b\020\203\306\361"
 14743      49C26C62 
 14743      19493248 
 14743      9A193162 
 14743      1083C6F1 
 14744 0025 22208732 		.ascii	"\" \2072\012c\020\3072Js\024\306#\214\340\3409\305H"
 14744      0A6310C7 
 14744      324A7314 
 14744      C6238CE0 
 14744      E039C548 
 14745 0039 62148DBE 		.ascii	"b\024\215\276\2173\310\231"
 14745      8F33C899 
 14746              		.section	.rodata.op_map.9318,"a"
ARM GAS  /tmp/cc8xFAqJ.s 			page 399


 14747              		.align	2
 14748              		.set	.LANCHOR2,. + 0
 14751              	op_map.9318:
 14752 0000 1500     		.short	21
 14753 0002 0B02     		.short	523
 14754 0004 0003     		.short	768
 14755 0006 0A02     		.short	522
 14756 0008 1300     		.short	19
 14757 000a 1400     		.short	20
 14758 000c 0300     		.short	3
 14759 000e 0A00     		.short	10
 14760 0010 0701     		.short	263
 14761 0012 0000     		.short	0
 14762 0014 6531     		.short	12645
 14763 0016 0300     		.short	3
 14764 0018 0200     		.short	2
 14765 001a 0100     		.short	1
 14766 001c 4400     		.short	68
 14767 001e 0C00     		.short	12
 14768 0020 0D00     		.short	13
 14769 0022 0E00     		.short	14
 14770 0024 0403     		.short	772
 14771 0026 2F00     		.short	47
 14772 0028 0900     		.short	9
 14773 002a 0A00     		.short	10
 14774 002c 0B00     		.short	11
 14775 002e 0303     		.short	771
 14776 0030 2E00     		.short	46
 14777 0032 0600     		.short	6
 14778 0034 0700     		.short	7
 14779 0036 0800     		.short	8
 14780 0038 0203     		.short	770
 14781 003a 3300     		.short	51
 14782 003c 0500     		.short	5
 14783 003e 0400     		.short	4
 14784 0040 3B01     		.short	315
 14785 0042 0103     		.short	769
 14786 0044 0001     		.short	256
 14787              		.section	.rodata.op_map.9341,"a"
 14788              		.align	2
 14789              		.set	.LANCHOR3,. + 0
 14792              	op_map.9341:
 14793 0000 0100     		.short	1
 14794 0002 0000     		.short	0
 14795 0004 20F2     		.short	-3552
 14796 0006 23F2     		.short	-3549
 14797 0008 21F2     		.short	-3551
 14798 000a 24F2     		.short	-3548
 14799 000c 22F2     		.short	-3550
 14800 000e 25F2     		.short	-3547
 14801 0010 47F1     		.short	-3769
 14802 0012 46F1     		.short	-3770
 14803 0014 4E01     		.short	334
 14804 0016 4D01     		.short	333
 14805 0018 5C01     		.short	348
 14806 001a 35F1     		.short	-3787
 14807 001c 5B01     		.short	347
ARM GAS  /tmp/cc8xFAqJ.s 			page 400


 14808 001e 36F1     		.short	-3786
 14809 0020 3301     		.short	307
 14810 0022 37F1     		.short	-3785
 14811 0024 3300     		.short	51
 14812 0026 0C01     		.short	268
 14813 0028 2B00     		.short	43
 14814 002a 2C00     		.short	44
 14815 002c 028B     		.short	-29950
 14816 002e 088B     		.short	-29944
 14817 0030 0A8B     		.short	-29942
 14818 0032 108B     		.short	-29936
 14819 0034 4301     		.short	323
 14820 0036 3D01     		.short	317
 14821 0038 0902     		.short	521
 14822 003a 0802     		.short	520
 14823 003c 1002     		.short	528
 14824 003e 0D02     		.short	525
 14825 0040 0F02     		.short	527
 14826 0042 0E02     		.short	526
 14827 0044 0003     		.short	768
 14828 0046 0803     		.short	776
 14829 0048 0BF2     		.short	-3573
 14830 004a 1603     		.short	790
 14831 004c 1203     		.short	786
 14832 004e 1303     		.short	787
 14833 0050 3DF2     		.short	-3523
 14834 0052 3EF2     		.short	-3522
 14835 0054 24F1     		.short	-3804
 14836 0056 1EF1     		.short	-3810
 14837 0058 75F2     		.short	-3467
 14838 005a 27F1     		.short	-3801
 14839 005c 0A02     		.short	522
 14840 005e 1602     		.short	534
 14841 0060 5100     		.short	81
 14842 0062 5200     		.short	82
 14843 0064 0000     		.short	0
 14844 0066 0100     		.short	1
 14845 0068 48F0     		.short	-4024
 14846 006a 4BF0     		.short	-4021
 14847 006c 47F0     		.short	-4025
 14848 006e 46F0     		.short	-4026
 14849 0070 77F2     		.short	-3465
 14850 0072 78F2     		.short	-3464
 14851 0074 3300     		.short	51
 14852 0076 3300     		.short	51
 14853 0078 0502     		.short	517
 14854 007a 0602     		.short	518
 14855 007c 0402     		.short	516
 14856 007e 0002     		.short	512
 14857 0080 4200     		.short	66
 14858 0082 3801     		.short	312
 14859 0084 3A00     		.short	58
 14860 0086 3B00     		.short	59
 14861 0088 0001     		.short	256
 14862 008a 0001     		.short	256
 14863              		.section	.rodata.op_map.9364,"a"
 14864              		.align	2
ARM GAS  /tmp/cc8xFAqJ.s 			page 401


 14865              		.set	.LANCHOR0,. + 0
 14868              	op_map.9364:
 14869 0000 4C80     		.short	-32692
 14870 0002 4D80     		.short	-32691
 14871 0004 4E80     		.short	-32690
 14872 0006 4F80     		.short	-32689
 14873 0008 3300     		.short	51
 14874 000a 3300     		.short	51
 14875 000c 3300     		.short	51
 14876 000e 2180     		.short	-32735
 14877 0010 0801     		.short	264
 14878 0012 8780     		.short	-32633
 14879 0014 1180     		.short	-32751
 14880 0016 7C02     		.short	636
 14881 0018 6660     		.short	24678
 14882 001a 3F01     		.short	319
 14883 001c 4580     		.short	-32699
 14884 001e 1C03     		.short	796
 14885 0020 1D03     		.short	797
 14886 0022 1E03     		.short	798
 14887 0024 0603     		.short	774
 14888 0026 2F02     		.short	559
 14889 0028 3300     		.short	51
 14890 002a 3300     		.short	51
 14891 002c 3300     		.short	51
 14892 002e 3300     		.short	51
 14893 0030 3300     		.short	51
 14894 0032 3300     		.short	51
 14895 0034 3300     		.short	51
 14896 0036 3300     		.short	51
 14897 0038 1640     		.short	16406
 14898 003a 0201     		.short	258
 14899 003c 6D80     		.short	-32659
 14900 003e 5001     		.short	336
 14901 0040 3300     		.short	51
 14902 0042 1540     		.short	16405
 14903 0044 0001     		.short	256
 14904              		.section	.rodata.op_map.9417,"a"
 14905              		.align	2
 14906              		.set	.LANCHOR7,. + 0
 14909              	op_map.9417:
 14910 0000 0100     		.short	1
 14911 0002 0100     		.short	1
 14912 0004 0000     		.short	0
 14913 0006 0000     		.short	0
 14914 0008 0B05     		.short	1291
 14915 000a 2005     		.short	1312
 14916 000c 2305     		.short	1315
 14917 000e 3300     		.short	51
 14918 0010 0006     		.short	1536
 14919 0012 2105     		.short	1313
 14920 0014 2405     		.short	1316
 14921 0016 3300     		.short	51
 14922 0018 0A05     		.short	1290
 14923 001a 2205     		.short	1314
 14924 001c 2505     		.short	1317
 14925 001e 3300     		.short	51
ARM GAS  /tmp/cc8xFAqJ.s 			page 402


 14926 0020 3300     		.short	51
 14927 0022 4701     		.short	327
 14928 0024 4601     		.short	326
 14929 0026 3300     		.short	51
 14930 0028 3300     		.short	51
 14931 002a 3300     		.short	51
 14932 002c 3300     		.short	51
 14933 002e 3300     		.short	51
 14934 0030 15FF     		.short	-235
 14935 0032 3300     		.short	51
 14936 0034 3300     		.short	51
 14937 0036 3300     		.short	51
 14938 0038 1AFF     		.short	-230
 14939 003a 3300     		.short	51
 14940 003c 3300     		.short	51
 14941 003e 8CFF     		.short	-116
 14942 0040 0901     		.short	265
 14943 0042 3300     		.short	51
 14944 0044 3300     		.short	51
 14945 0046 0A01     		.short	266
 14946 0048 0B01     		.short	267
 14947 004a 3300     		.short	51
 14948 004c 0D01     		.short	269
 14949 004e 0D01     		.short	269
 14950 0050 663F     		.short	16230
 14951 0052 3300     		.short	51
 14952 0054 3300     		.short	51
 14953 0056 1FFF     		.short	-225
 14954 0058 3805     		.short	1336
 14955 005a 3300     		.short	51
 14956 005c 3300     		.short	51
 14957 005e 3905     		.short	1337
 14958 0060 6621     		.short	8550
 14959 0062 3300     		.short	51
 14960 0064 3300     		.short	51
 14961 0066 6621     		.short	8550
 14962 0068 3300     		.short	51
 14963 006a 3300     		.short	51
 14964 006c 3300     		.short	51
 14965 006e 3300     		.short	51
 14966 0070 3300     		.short	51
 14967 0072 0905     		.short	1289
 14968 0074 0805     		.short	1288
 14969 0076 3300     		.short	51
 14970 0078 07A8     		.short	-22521
 14971 007a 1005     		.short	1296
 14972 007c 0D05     		.short	1293
 14973 007e 3300     		.short	51
 14974 0080 08A8     		.short	-22520
 14975 0082 0F05     		.short	1295
 14976 0084 0E05     		.short	1294
 14977 0086 3300     		.short	51
 14978 0088 09A8     		.short	-22519
 14979 008a 0006     		.short	1536
 14980 008c 0806     		.short	1544
 14981 008e 3300     		.short	51
 14982 0090 0406     		.short	1540
ARM GAS  /tmp/cc8xFAqJ.s 			page 403


 14983 0092 0B05     		.short	1291
 14984 0094 1606     		.short	1558
 14985 0096 3300     		.short	51
 14986 0098 3300     		.short	51
 14987 009a 1206     		.short	1554
 14988 009c 1306     		.short	1555
 14989 009e 2F05     		.short	1327
 14990 00a0 04A8     		.short	-22524
 14991 00a2 3300     		.short	51
 14992 00a4 3300     		.short	51
 14993 00a6 3300     		.short	51
 14994 00a8 05A8     		.short	-22523
 14995 00aa 3300     		.short	51
 14996 00ac 3300     		.short	51
 14997 00ae 3300     		.short	51
 14998 00b0 06A8     		.short	-22522
 14999 00b2 3300     		.short	51
 15000 00b4 3300     		.short	51
 15001 00b6 3300     		.short	51
 15002 00b8 0306     		.short	1539
 15003 00ba 0A05     		.short	1290
 15004 00bc 1605     		.short	1302
 15005 00be 1605     		.short	1302
 15006 00c0 3300     		.short	51
 15007 00c2 3300     		.short	51
 15008 00c4 3300     		.short	51
 15009 00c6 3300     		.short	51
 15010 00c8 01A8     		.short	-22527
 15011 00ca 0000     		.short	0
 15012 00cc 0100     		.short	1
 15013 00ce 3300     		.short	51
 15014 00d0 02A8     		.short	-22526
 15015 00d2 3300     		.short	51
 15016 00d4 3300     		.short	51
 15017 00d6 3300     		.short	51
 15018 00d8 03A8     		.short	-22525
 15019 00da 3300     		.short	51
 15020 00dc 3300     		.short	51
 15021 00de 3300     		.short	51
 15022 00e0 0206     		.short	1538
 15023 00e2 3300     		.short	51
 15024 00e4 3300     		.short	51
 15025 00e6 3300     		.short	51
 15026 00e8 3300     		.short	51
 15027 00ea 3300     		.short	51
 15028 00ec 3300     		.short	51
 15029 00ee 0201     		.short	258
 15030 00f0 00A8     		.short	-22528
 15031 00f2 0505     		.short	1285
 15032 00f4 0605     		.short	1286
 15033 00f6 3300     		.short	51
 15034 00f8 B801     		.short	440
 15035 00fa 0405     		.short	1284
 15036 00fc 0005     		.short	1280
 15037 00fe 3300     		.short	51
 15038 0100 3300     		.short	51
 15039 0102 3300     		.short	51
ARM GAS  /tmp/cc8xFAqJ.s 			page 404


 15040 0104 3300     		.short	51
 15041 0106 3300     		.short	51
 15042 0108 0106     		.short	1537
 15043 010a 3300     		.short	51
 15044 010c 3300     		.short	51
 15045 010e 3300     		.short	51
 15046 0110 0001     		.short	256
 15047 0112 0001     		.short	256
 15048 0114 0001     		.short	256
 15049 0116 0001     		.short	256
 15050              		.section	.rodata.op_map.9429,"a"
 15051              		.align	2
 15052              		.set	.LANCHOR19,. + 0
 15055              	op_map.9429:
 15056 0000 2A27     		.ascii	"*'"
 15057 0002 2B28     		.ascii	"+("
 15058 0004 2C29     		.ascii	",)"
 15059              		.section	.rodata.op_map.9443,"a"
 15060              		.align	2
 15061              		.set	.LANCHOR20,. + 0
 15064              	op_map.9443:
 15065 0000 1A02     		.short	538
 15066 0002 7B02     		.short	635
 15067 0004 1B02     		.short	539
 15068 0006 7A02     		.short	634
 15069 0008 1C02     		.short	540
 15070 000a 3300     		.short	51
 15071              		.section	.rodata.op_map2.9342,"a"
 15072              		.align	2
 15073              		.set	.LANCHOR4,. + 0
 15076              	op_map2.9342:
 15077 0000 3300     		.short	51
 15078 0002 3300     		.short	51
 15079 0004 0003     		.short	768
 15080 0006 0A02     		.short	522
 15081              		.section	.rodata.opcode_breaks,"a"
 15082              		.align	2
 15083              		.set	.LANCHOR13,. + 0
 15086              	opcode_breaks:
 15087 0000 34C09C33 		.ascii	"4\300\2343\014\2343"
 15087      0C9C33
 15088              		.section	.rodata.prob_catalogue,"a"
 15089              		.align	2
 15092              	prob_catalogue:
 15093 0000 50D42581 		.ascii	"P\324%\201DV\025u\235YP\023\365}ANU\324\351;S\024\265"
 15093      44561575 
 15093      9D595013 
 15093      F57D414E 
 15093      55D4E93B 
 15094 0017 8D4D5495 		.ascii	"\215MT\225\025\225SUUE\231VS\324\345\221PRT\205\211"
 15094      15955355 
 15094      55459956 
 15094      53D4E591 
 15094      50525485 
 15095 002c 4A519455 		.ascii	"JQ\224U\205GM\225\304\3358OS\305y>V\223\004\3215L\325"
 15095      85474D95 
 15095      C4DD384F 
ARM GAS  /tmp/cc8xFAqJ.s 			page 405


 15095      53C5793E 
 15095      569304D1 
 15096 0043 B0       		.ascii	"\260"
 15097              		.section	.rodata.prog_catalogue,"a"
 15098              		.align	2
 15101              	prog_catalogue:
 15102 0000 B54D1CA4 		.ascii	"\265M\034\244y\035G\201\310t*2{xB\266\255\301\272\240"
 15102      791D4781 
 15102      C8742A32 
 15102      7B7842B6 
 15102      ADC1BAA0 
 15103 0014 BC4E0B9E 		.ascii	"\274N\013\236\3503-\373n\335\306\016#\220\3478\316\214"
 15103      E8332DFB 
 15103      6EDDC60E 
 15103      2390E738 
 15103      CE8C
 15104 0026 68DE3771 		.ascii	"h\3367q\220\320\3349G\003\233\027\260M\361\330\315\033"
 15104      90D0DC39 
 15104      47039B17 
 15104      B04DF1D8 
 15104      CD1B
 15105 0038 4B12BCB2 		.ascii	"K\022\274\262,\016\033P\322\015\354\003\002\262*q\020"
 15105      2C0E1B50 
 15105      D20DEC03 
 15105      02B22A71 
 15105      10
 15106 0049 E8CBAC2B 		.ascii	"\350\313\254+\0348\256+p\334\220"
 15106      1C38AE2B 
 15106      70DC90
 15107              		.section	.rodata.program_xfcn,"a"
 15108              		.align	2
 15111              	program_xfcn:
 15112 0000 431A766F 		.ascii	"C\032vo\0010W\325\373\003=\212#\265\201l\234RY\304\037"
 15112      013057D5 
 15112      FB033D8A 
 15112      23B5816C 
 15112      9C5259C4 
 15113 0015 511C7842 		.ascii	"Q\034xB]\030\344\271/`\320f?\004COV\251!H\2216\341\271"
 15113      5D18E4B9 
 15113      2F60D066 
 15113      3F04434F 
 15113      56A92148 
 15114 002d 6A1A9655 		.ascii	"j\032\226U\300\307\0346\375up\232\262Q\267A\\vu%`\260"
 15114      C0C71C36 
 15114      FD75709A 
 15114      B251B741 
 15114      5C767525 
 15115 0043 7C219A66 		.ascii	"|!\232fW&]\200k\327\026\370\303l\033DK\024%o\273\364"
 15115      57265D80 
 15115      6BD716F8 
 15115      C36C1B44 
 15115      4B14256F 
 15116 0059 F7BF2FEC 		.ascii	"\367\277/\354O\002\303\361\001\240\373F\257\363\013"
 15116      4F02C3F1 
 15116      01A0FB46 
 15116      AFF30B
 15117 0068 00C74A36 		.ascii	"\000\307J6\325\204m\203U\314\312B\020t%\013lJ\306\351"
ARM GAS  /tmp/cc8xFAqJ.s 			page 406


 15117      D5846D83 
 15117      55CCCA42 
 15117      1074250B 
 15117      6C4AC6E9 
 15118 007c 7F704A02 		.ascii	"\177pJ\002z\306*\211\373\026\303\261\354\213&\312\261"
 15118      7AC62A89 
 15118      FB16C3B1 
 15118      EC8B26CA 
 15118      B1
 15119 008d 0A12AD9C 		.ascii	"\012\022\255\234I\032\006\205\236g\3335\361\215@\034"
 15119      491A0685 
 15119      9E67DB35 
 15119      F18D401C 
 15120 009d D731A571 		.ascii	"\3271\245q\226\325\251\244s\200"
 15120      96D5A9A4 
 15120      7380
 15121              		.section	.rodata.smap.9266,"a"
 15122              		.align	2
 15123              		.set	.LANCHOR22,. + 0
 15126              	smap.9266:
 15127 0000 00010002 		.ascii	"\000\001\000\002"
 15128              		.section	.rodata.stats_catalogue,"a"
 15129              		.align	2
 15132              	stats_catalogue:
 15133 0000 1805C1A0 		.ascii	"\030\005\301\240]\027\311qXa\026\205\225\240T\027\205"
 15133      5D17C971 
 15133      58611685 
 15133      95A05417 
 15133      85
 15134 0011 514C575A 		.ascii	"QLWZ\200"
 15134      80
 15135              		.section	.rodata.sums_catalogue,"a"
 15136              		.align	2
 15139              	sums_catalogue:
 15140 0000 1444B134 		.ascii	"\024D\2614J\023\204\301 E\021\004\361\034I\021\205\000"
 15140      4A1384C1 
 15140      20451104 
 15140      F11C4911 
 15140      8500
 15141              		.section	.rodata.test_catalogue,"a"
 15142              		.align	2
 15145              	test_catalogue:
 15146 0000 C1B05C8C 		.ascii	"\301\260\\\214\353/\313\333\316\367\276o\202\362\362"
 15146      EB2FCBDB 
 15146      CEF7BE6F 
 15146      82F2F2
 15147 000f BD2F6BD4 		.ascii	"\275/k\324\323.\360\313\204\2356\213\202\370\2725\013"
 15147      D32EF0CB 
 15147      849D368B 
 15147      82F8BA35 
 15147      0B
 15148 0020 9340F0B3 		.ascii	"\223@\360\263\254\363T\326\263m\033@\267<@"
 15148      ACF354D6 
 15148      B36D1B40 
 15148      B73C40
 15149              		.text
 15150              	.Letext0:
ARM GAS  /tmp/cc8xFAqJ.s 			page 407


 15151              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 15152              		.file 3 "dmcp/dmcp.h"
 15153              		.file 4 "src/decNumber/decContext.h"
 15154              		.file 5 "src/decNumber/decNumber.h"
 15155              		.file 6 "src/decNumber/decimal64.h"
 15156              		.file 7 "src/decNumber/decimal128.h"
 15157              		.file 8 "src/xeq.h"
 15158              		.file 9 "src/data.h"
 15159              		.file 10 "src/keys.h"
 15160              		.file 11 "src/display.h"
 15161              		.file 12 "src/consts.h"
 15162              		.file 13 "src/storage.h"
 15163              		.file 14 "src/stats.h"
 15164              		.file 15 "src/catalogues.h"
 15165              		.file 16 "src/lcd.h"
 15166              		.file 17 "src/int.h"
 15167              		.file 18 "src/decn.h"
ARM GAS  /tmp/cc8xFAqJ.s 			page 408


DEFINED SYMBOLS
                            *ABS*:0000000000000000 keys.c
     /tmp/cc8xFAqJ.s:18     .text.gtodot_digit:0000000000000000 $t
     /tmp/cc8xFAqJ.s:26     .text.gtodot_digit:0000000000000000 gtodot_digit
     /tmp/cc8xFAqJ.s:110    .text.gtodot_digit:0000000000000054 $d
     /tmp/cc8xFAqJ.s:117    .text.check_f_key:0000000000000000 $t
     /tmp/cc8xFAqJ.s:124    .text.check_f_key:0000000000000000 check_f_key
     /tmp/cc8xFAqJ.s:202    .text.check_f_key:0000000000000038 $d
     /tmp/cc8xFAqJ.s:208    .text.is_label_or_end_at:0000000000000000 $t
     /tmp/cc8xFAqJ.s:215    .text.is_label_or_end_at:0000000000000000 is_label_or_end_at
     /tmp/cc8xFAqJ.s:271    .text.advance_to_next_label:0000000000000000 $t
     /tmp/cc8xFAqJ.s:278    .text.advance_to_next_label:0000000000000000 advance_to_next_label
     /tmp/cc8xFAqJ.s:359    .text.advance_to_next_label:0000000000000048 $d
     /tmp/cc8xFAqJ.s:364    .text.init_cat:0000000000000000 $t
     /tmp/cc8xFAqJ.s:371    .text.init_cat:0000000000000000 init_cat
     /tmp/cc8xFAqJ.s:684    .text.init_cat:00000000000000e4 $d
     /tmp/cc8xFAqJ.s:690    .text.advance_to_previous_label:0000000000000000 $t
     /tmp/cc8xFAqJ.s:697    .text.advance_to_previous_label:0000000000000000 advance_to_previous_label
     /tmp/cc8xFAqJ.s:782    .text.advance_to_previous_label:000000000000004c $d
     /tmp/cc8xFAqJ.s:787    .text.check_confirm.part.0:0000000000000000 $t
     /tmp/cc8xFAqJ.s:794    .text.check_confirm.part.0:0000000000000000 check_confirm.part.0
     /tmp/cc8xFAqJ.s:848    .text.check_confirm.part.0:0000000000000028 $d
                            *COM*:0000000000000004 NonProgrammable
     /tmp/cc8xFAqJ.s:855    .text.init_arg.part.0:0000000000000000 $t
     /tmp/cc8xFAqJ.s:862    .text.init_arg.part.0:0000000000000000 init_arg.part.0
     /tmp/cc8xFAqJ.s:904    .text.init_arg.part.0:0000000000000024 $d
     /tmp/cc8xFAqJ.s:909    .text.reset_arg:0000000000000000 $t
     /tmp/cc8xFAqJ.s:916    .text.reset_arg:0000000000000000 reset_arg
     /tmp/cc8xFAqJ.s:960    .text.reset_arg:0000000000000018 $d
     /tmp/cc8xFAqJ.s:965    .text.arg_eval:0000000000000000 $t
     /tmp/cc8xFAqJ.s:972    .text.arg_eval:0000000000000000 arg_eval
     /tmp/cc8xFAqJ.s:1117   .text.arg_eval:0000000000000090 $d
     /tmp/cc8xFAqJ.s:1124   .text.arg_digit:0000000000000000 $t
     /tmp/cc8xFAqJ.s:1131   .text.arg_digit:0000000000000000 arg_digit
     /tmp/cc8xFAqJ.s:1392   .text.arg_digit:00000000000000fc $d
     /tmp/cc8xFAqJ.s:1400   .text.process_arg_shuffle:0000000000000000 $t
     /tmp/cc8xFAqJ.s:1407   .text.process_arg_shuffle:0000000000000000 process_arg_shuffle
     /tmp/cc8xFAqJ.s:1465   .text.process_arg_shuffle:000000000000002c $d
     /tmp/cc8xFAqJ.s:1470   .text.process_h_shifted:0000000000000000 $t
     /tmp/cc8xFAqJ.s:1477   .text.process_h_shifted:0000000000000000 process_h_shifted
     /tmp/cc8xFAqJ.s:1725   .text.process_h_shifted:00000000000000c8 $d
     /tmp/cc8xFAqJ.s:1733   .text.intltr:0000000000000000 $t
     /tmp/cc8xFAqJ.s:1740   .text.intltr:0000000000000000 intltr
     /tmp/cc8xFAqJ.s:1803   .text.intltr:0000000000000030 $d
     /tmp/cc8xFAqJ.s:1809   .text.process_normal:0000000000000000 $t
     /tmp/cc8xFAqJ.s:1816   .text.process_normal:0000000000000000 process_normal
     /tmp/cc8xFAqJ.s:1877   .text.process_normal:0000000000000022 $d
     /tmp/cc8xFAqJ.s:1923   .text.process_normal:000000000000007e $t
     /tmp/cc8xFAqJ.s:1972   .text.process_normal:00000000000000ac $d
     /tmp/cc8xFAqJ.s:1991   .text.process_normal:00000000000000f8 $t
     /tmp/cc8xFAqJ.s:2002   .text.process_normal:0000000000000104 $d
     /tmp/cc8xFAqJ.s:2045   .text.process_normal:00000000000001b0 $t
     /tmp/cc8xFAqJ.s:2246   .text.process_normal:0000000000000264 $d
     /tmp/cc8xFAqJ.s:2255   .text.process_fg_shifted:0000000000000000 $t
     /tmp/cc8xFAqJ.s:2262   .text.process_fg_shifted:0000000000000000 process_fg_shifted
     /tmp/cc8xFAqJ.s:2390   .text.process_fg_shifted:000000000000003e $d
     /tmp/cc8xFAqJ.s:2589   .text.process_fg_shifted:000000000000010c $d
ARM GAS  /tmp/cc8xFAqJ.s 			page 409


     /tmp/cc8xFAqJ.s:2630   .text.process_fg_shifted:00000000000001b0 $t
     /tmp/cc8xFAqJ.s:2826   .text.process_fg_shifted:0000000000000294 $d
     /tmp/cc8xFAqJ.s:2835   .text.set_window:0000000000000000 $t
     /tmp/cc8xFAqJ.s:2842   .text.set_window:0000000000000000 set_window
     /tmp/cc8xFAqJ.s:2989   .text.set_window:000000000000008c $d
     /tmp/cc8xFAqJ.s:2996   .text.arg_storcl:0000000000000000 $t
     /tmp/cc8xFAqJ.s:3003   .text.arg_storcl:0000000000000000 arg_storcl
     /tmp/cc8xFAqJ.s:3119   .text.arg_storcl:0000000000000040 $d
     /tmp/cc8xFAqJ.s:3124   .text.process_arg:0000000000000000 $t
     /tmp/cc8xFAqJ.s:3131   .text.process_arg:0000000000000000 process_arg
     /tmp/cc8xFAqJ.s:3337   .text.process_arg:000000000000008a $d
     /tmp/cc8xFAqJ.s:3341   .text.process_arg:0000000000000090 $t
     /tmp/cc8xFAqJ.s:3430   .text.process_arg:00000000000000f0 $d
     /tmp/cc8xFAqJ.s:3477   .text.process_arg:00000000000001a8 $t
     /tmp/cc8xFAqJ.s:3880   .text.process_arg:000000000000032c $d
     /tmp/cc8xFAqJ.s:3889   .text.process_arg:0000000000000340 $t
     /tmp/cc8xFAqJ.s:4380   .text.process_arg:000000000000054c $d
     /tmp/cc8xFAqJ.s:4385   .text.cur_shift:0000000000000000 $t
     /tmp/cc8xFAqJ.s:4393   .text.cur_shift:0000000000000000 cur_shift
     /tmp/cc8xFAqJ.s:4421   .text.cur_shift:0000000000000010 $d
     /tmp/cc8xFAqJ.s:4426   .text.reset_shift:0000000000000000 $t
     /tmp/cc8xFAqJ.s:4434   .text.reset_shift:0000000000000000 reset_shift
     /tmp/cc8xFAqJ.s:4492   .text.reset_shift:0000000000000014 $d
     /tmp/cc8xFAqJ.s:4497   .text.keycode_to_row_column:0000000000000000 $t
     /tmp/cc8xFAqJ.s:4505   .text.keycode_to_row_column:0000000000000000 keycode_to_row_column
     /tmp/cc8xFAqJ.s:4533   .text.keycode_to_row_column:0000000000000020 $d
     /tmp/cc8xFAqJ.s:4538   .text.row_column_to_keycode:0000000000000000 $t
     /tmp/cc8xFAqJ.s:4546   .text.row_column_to_keycode:0000000000000000 row_column_to_keycode
     /tmp/cc8xFAqJ.s:4604   .text.row_column_to_keycode:000000000000003c $d
     /tmp/cc8xFAqJ.s:4609   .text.keycode_to_digit_or_register:0000000000000000 $t
     /tmp/cc8xFAqJ.s:4617   .text.keycode_to_digit_or_register:0000000000000000 keycode_to_digit_or_register
     /tmp/cc8xFAqJ.s:4653   .text.keycode_to_digit_or_register:000000000000000c $d
     /tmp/cc8xFAqJ.s:4659   .text.init_state:0000000000000000 $t
     /tmp/cc8xFAqJ.s:4667   .text.init_state:0000000000000000 init_state
     /tmp/cc8xFAqJ.s:4794   .text.init_state:0000000000000080 $d
     /tmp/cc8xFAqJ.s:4801   .text.process_cmplx:0000000000000000 $t
     /tmp/cc8xFAqJ.s:4808   .text.process_cmplx:0000000000000000 process_cmplx
     /tmp/cc8xFAqJ.s:5091   .text.process_cmplx:00000000000000b0 $d
     /tmp/cc8xFAqJ.s:5098   .text.soft_init_state:0000000000000000 $t
     /tmp/cc8xFAqJ.s:5106   .text.soft_init_state:0000000000000000 soft_init_state
     /tmp/cc8xFAqJ.s:5201   .text.soft_init_state:0000000000000048 $d
     /tmp/cc8xFAqJ.s:5207   .text.finish_cpx_entry:0000000000000000 $t
     /tmp/cc8xFAqJ.s:5215   .text.finish_cpx_entry:0000000000000000 finish_cpx_entry
     /tmp/cc8xFAqJ.s:5381   .text.finish_cpx_entry:00000000000000bc $d
     /tmp/cc8xFAqJ.s:5388   .text.stack_begin:0000000000000000 $t
     /tmp/cc8xFAqJ.s:5396   .text.stack_begin:0000000000000000 stack_begin
     /tmp/cc8xFAqJ.s:5536   .text.stack_begin:00000000000000b4 $d
     /tmp/cc8xFAqJ.s:5542   .text.current_catalogue_max:0000000000000000 $t
     /tmp/cc8xFAqJ.s:5550   .text.current_catalogue_max:0000000000000000 current_catalogue_max
     /tmp/cc8xFAqJ.s:5571   .text.current_catalogue_max:000000000000000c $d
     /tmp/cc8xFAqJ.s:5577   .text.current_catalogue:0000000000000000 $t
     /tmp/cc8xFAqJ.s:5585   .text.current_catalogue:0000000000000000 current_catalogue
     /tmp/cc8xFAqJ.s:5841   .text.current_catalogue:00000000000000c8 $d
     /tmp/cc8xFAqJ.s:5851   .text.process_catalogue:0000000000000000 $t
     /tmp/cc8xFAqJ.s:5858   .text.process_catalogue:0000000000000000 process_catalogue
     /tmp/cc8xFAqJ.s:6187   .text.process_catalogue:00000000000000fe $d
     /tmp/cc8xFAqJ.s:6219   .text.process_catalogue:000000000000011e $t
ARM GAS  /tmp/cc8xFAqJ.s 			page 410


     /tmp/cc8xFAqJ.s:6727   .text.process_catalogue:00000000000002dc $d
     /tmp/cc8xFAqJ.s:6748   .text.process_catalogue:00000000000002fc $t
     /tmp/cc8xFAqJ.s:6778   .text.find_pos:0000000000000000 $t
     /tmp/cc8xFAqJ.s:6786   .text.find_pos:0000000000000000 find_pos
     /tmp/cc8xFAqJ.s:6959   .text.find_pos:0000000000000080 $d
     /tmp/cc8xFAqJ.s:6965   .text.get_alpha_state:0000000000000000 $t
     /tmp/cc8xFAqJ.s:6973   .text.get_alpha_state:0000000000000000 get_alpha_state
     /tmp/cc8xFAqJ.s:7005   .text.get_alpha_state:0000000000000020 $d
     /tmp/cc8xFAqJ.s:7011   .rodata.process_keycode.str1.4:0000000000000000 $d
     /tmp/cc8xFAqJ.s:7021   .text.process_keycode:0000000000000000 $t
     /tmp/cc8xFAqJ.s:7029   .text.process_keycode:0000000000000000 process_keycode
     /tmp/cc8xFAqJ.s:7648   .text.process_keycode:00000000000002e0 $d
                            *COM*:0000000000000004 OpCode
                            *COM*:0000000000000004 GoFast
                            *COM*:0000000000000004 OpCodeDisplayPending
                            *COM*:0000000000000004 WasDataEntry
     /tmp/cc8xFAqJ.s:7671   .text.process_keycode:0000000000000320 $t
     /tmp/cc8xFAqJ.s:7870   .text.process_keycode:00000000000003f0 $d
     /tmp/cc8xFAqJ.s:7879   .text.process_keycode:0000000000000414 $t
     /tmp/cc8xFAqJ.s:8364   .text.process_keycode:0000000000000614 $d
                            *COM*:0000000000000004 nd_opcode
     /tmp/cc8xFAqJ.s:8384   .text.process_keycode:0000000000000650 $t
     /tmp/cc8xFAqJ.s:8425   .text.process_keycode:0000000000000676 $d
     /tmp/cc8xFAqJ.s:8452   .text.process_keycode:0000000000000690 $t
     /tmp/cc8xFAqJ.s:8529   .text.process_keycode:00000000000006d8 $d
     /tmp/cc8xFAqJ.s:8533   .text.process_keycode:00000000000006e8 $t
     /tmp/cc8xFAqJ.s:9116   .text.process_keycode:0000000000000918 $d
     /tmp/cc8xFAqJ.s:9136   .text.process_keycode:0000000000000940 $t
     /tmp/cc8xFAqJ.s:9614   .text.process_keycode:0000000000000aec $d
     /tmp/cc8xFAqJ.s:9644   .text.process_keycode:0000000000000b64 $t
     /tmp/cc8xFAqJ.s:10009  .text.process_keycode:0000000000000c98 $d
     /tmp/cc8xFAqJ.s:10030  .text.process_keycode:0000000000000cbc $t
     /tmp/cc8xFAqJ.s:10360  .text.process_keycode:0000000000000dcc $d
     /tmp/cc8xFAqJ.s:10395  .text.process_keycode:0000000000000e58 $t
     /tmp/cc8xFAqJ.s:10692  .text.process_keycode:0000000000000f70 $d
     /tmp/cc8xFAqJ.s:10712  .text.process_keycode:0000000000000fc0 $t
     /tmp/cc8xFAqJ.s:10797  .text.process_keycode:0000000000001028 $d
     /tmp/cc8xFAqJ.s:10826  .text.process_keycode:000000000000103c $t
     /tmp/cc8xFAqJ.s:10961  .text.process_keycode:00000000000010a0 $d
     /tmp/cc8xFAqJ.s:10979  .text.process_keycode:00000000000010e8 $t
     /tmp/cc8xFAqJ.s:11490  .text.process_keycode:0000000000001284 $d
     /tmp/cc8xFAqJ.s:11525  .text.process_keycode:000000000000130c $t
     /tmp/cc8xFAqJ.s:11656  .text.process_keycode:000000000000138c $d
     /tmp/cc8xFAqJ.s:11670  .text.process_keycode:00000000000013a0 $t
     /tmp/cc8xFAqJ.s:11930  .text.process_keycode:00000000000014dc $d
     /tmp/cc8xFAqJ.s:11965  .text.process_keycode:0000000000001564 $t
     /tmp/cc8xFAqJ.s:12128  .text.process_keycode:0000000000001610 $d
     /tmp/cc8xFAqJ.s:12171  .text.process_keycode:0000000000001664 $t
     /tmp/cc8xFAqJ.s:12319  .text.process_keycode:00000000000016d8 $d
     /tmp/cc8xFAqJ.s:12354  .text.process_keycode:0000000000001760 $t
     /tmp/cc8xFAqJ.s:12499  .text.process_keycode:00000000000017ec $d
     /tmp/cc8xFAqJ.s:12511  .text.process_keycode:00000000000017f4 $t
     /tmp/cc8xFAqJ.s:13318  .text.process_keycode:0000000000001b58 $d
     /tmp/cc8xFAqJ.s:13345  .text.process_keycode:0000000000001bc0 $t
     /tmp/cc8xFAqJ.s:13669  .text.process_keycode:0000000000001cac $d
     /tmp/cc8xFAqJ.s:13675  .text.process_keycode:0000000000001cb4 $t
     /tmp/cc8xFAqJ.s:14201  .text.process_keycode:0000000000001e34 $d
ARM GAS  /tmp/cc8xFAqJ.s 			page 411


     /tmp/cc8xFAqJ.s:14210  .text.process_keycode_with_shift:0000000000000000 $t
     /tmp/cc8xFAqJ.s:14218  .text.process_keycode_with_shift:0000000000000000 process_keycode_with_shift
     /tmp/cc8xFAqJ.s:14426  .text.process_keycode_with_shift:000000000000008c $d
     /tmp/cc8xFAqJ.s:14443  .bss.was_paused.9788:0000000000000000 $d
     /tmp/cc8xFAqJ.s:14447  .bss.was_paused.9788:0000000000000000 was_paused.9788
     /tmp/cc8xFAqJ.s:14450  .rodata.alpha_arrows:0000000000000000 $d
     /tmp/cc8xFAqJ.s:14453  .rodata.alpha_arrows:0000000000000000 alpha_arrows
     /tmp/cc8xFAqJ.s:14456  .rodata.alpha_catalogue:0000000000000000 $d
     /tmp/cc8xFAqJ.s:14459  .rodata.alpha_catalogue:0000000000000000 alpha_catalogue
     /tmp/cc8xFAqJ.s:14463  .rodata.alpha_compares:0000000000000000 $d
     /tmp/cc8xFAqJ.s:14466  .rodata.alpha_compares:0000000000000000 alpha_compares
     /tmp/cc8xFAqJ.s:14469  .rodata.alpha_letters:0000000000000000 $d
     /tmp/cc8xFAqJ.s:14473  .rodata.alpha_letters:0000000000000000 alpha_letters
     /tmp/cc8xFAqJ.s:14479  .rodata.alpha_letters_lower:0000000000000000 $d
     /tmp/cc8xFAqJ.s:14483  .rodata.alpha_letters_lower:0000000000000000 alpha_letters_lower
     /tmp/cc8xFAqJ.s:14489  .rodata.alpha_subscripts:0000000000000000 $d
     /tmp/cc8xFAqJ.s:14492  .rodata.alpha_subscripts:0000000000000000 alpha_subscripts
     /tmp/cc8xFAqJ.s:14496  .rodata.alpha_symbols:0000000000000000 $d
     /tmp/cc8xFAqJ.s:14499  .rodata.alpha_symbols:0000000000000000 alpha_symbols
     /tmp/cc8xFAqJ.s:14502  .rodata.alphamap.9274:0000000000000000 $d
     /tmp/cc8xFAqJ.s:14506  .rodata.alphamap.9274:0000000000000000 alphamap.9274
     /tmp/cc8xFAqJ.s:14546  .rodata.amap.9265:0000000000000000 $d
     /tmp/cc8xFAqJ.s:14550  .rodata.amap.9265:0000000000000000 amap.9265
     /tmp/cc8xFAqJ.s:14568  .rodata.catalogue:0000000000000000 $d
     /tmp/cc8xFAqJ.s:14571  .rodata.catalogue:0000000000000000 catalogue
     /tmp/cc8xFAqJ.s:14581  .rodata.catalogue_sizes.9586:0000000000000000 $d
     /tmp/cc8xFAqJ.s:14585  .rodata.catalogue_sizes.9586:0000000000000000 catalogue_sizes.9586
     /tmp/cc8xFAqJ.s:14588  .rodata.catalogues.9594:0000000000000000 $d
     /tmp/cc8xFAqJ.s:14592  .rodata.catalogues.9594:0000000000000000 catalogues.9594
     /tmp/cc8xFAqJ.s:14677  .rodata.cplx_catalogue:0000000000000000 cplx_catalogue
     /tmp/cc8xFAqJ.s:15132  .rodata.stats_catalogue:0000000000000000 stats_catalogue
     /tmp/cc8xFAqJ.s:15092  .rodata.prob_catalogue:0000000000000000 prob_catalogue
     /tmp/cc8xFAqJ.s:14695  .rodata.int_catalogue:0000000000000000 int_catalogue
     /tmp/cc8xFAqJ.s:15101  .rodata.prog_catalogue:0000000000000000 prog_catalogue
     /tmp/cc8xFAqJ.s:15111  .rodata.program_xfcn:0000000000000000 program_xfcn
     /tmp/cc8xFAqJ.s:15145  .rodata.test_catalogue:0000000000000000 test_catalogue
     /tmp/cc8xFAqJ.s:14741  .rodata.mode_catalogue:0000000000000000 mode_catalogue
     /tmp/cc8xFAqJ.s:15139  .rodata.sums_catalogue:0000000000000000 sums_catalogue
     /tmp/cc8xFAqJ.s:14734  .rodata.matrix_catalogue:0000000000000000 matrix_catalogue
     /tmp/cc8xFAqJ.s:14615  .rodata.cmap.9264:0000000000000000 $d
     /tmp/cc8xFAqJ.s:14619  .rodata.cmap.9264:0000000000000000 cmap.9264
     /tmp/cc8xFAqJ.s:14645  .rodata.conv_catalogue:0000000000000000 $d
     /tmp/cc8xFAqJ.s:14649  .rodata.conv_catalogue:0000000000000000 conv_catalogue
     /tmp/cc8xFAqJ.s:14656  .rodata.conv_mapping.9633:0000000000000000 $d
     /tmp/cc8xFAqJ.s:14660  .rodata.conv_mapping.9633:0000000000000000 conv_mapping.9633
     /tmp/cc8xFAqJ.s:14674  .rodata.cplx_catalogue:0000000000000000 $d
     /tmp/cc8xFAqJ.s:14682  .rodata.disp.9444:0000000000000000 $d
     /tmp/cc8xFAqJ.s:14686  .rodata.disp.9444:0000000000000000 disp.9444
     /tmp/cc8xFAqJ.s:14692  .rodata.int_catalogue:0000000000000000 $d
     /tmp/cc8xFAqJ.s:14701  .rodata.linear_key_map.9230:0000000000000000 $d
     /tmp/cc8xFAqJ.s:14705  .rodata.linear_key_map.9230:0000000000000000 linear_key_map.9230
     /tmp/cc8xFAqJ.s:14711  .rodata.linear_key_map.9234:0000000000000000 $d
     /tmp/cc8xFAqJ.s:14715  .rodata.linear_key_map.9234:0000000000000000 linear_key_map.9234
     /tmp/cc8xFAqJ.s:14721  .rodata.map.9246:0000000000000000 $d
     /tmp/cc8xFAqJ.s:14725  .rodata.map.9246:0000000000000000 map.9246
     /tmp/cc8xFAqJ.s:14731  .rodata.matrix_catalogue:0000000000000000 $d
     /tmp/cc8xFAqJ.s:14738  .rodata.mode_catalogue:0000000000000000 $d
ARM GAS  /tmp/cc8xFAqJ.s 			page 412


     /tmp/cc8xFAqJ.s:14747  .rodata.op_map.9318:0000000000000000 $d
     /tmp/cc8xFAqJ.s:14751  .rodata.op_map.9318:0000000000000000 op_map.9318
     /tmp/cc8xFAqJ.s:14788  .rodata.op_map.9341:0000000000000000 $d
     /tmp/cc8xFAqJ.s:14792  .rodata.op_map.9341:0000000000000000 op_map.9341
     /tmp/cc8xFAqJ.s:14864  .rodata.op_map.9364:0000000000000000 $d
     /tmp/cc8xFAqJ.s:14868  .rodata.op_map.9364:0000000000000000 op_map.9364
     /tmp/cc8xFAqJ.s:14905  .rodata.op_map.9417:0000000000000000 $d
     /tmp/cc8xFAqJ.s:14909  .rodata.op_map.9417:0000000000000000 op_map.9417
     /tmp/cc8xFAqJ.s:15051  .rodata.op_map.9429:0000000000000000 $d
     /tmp/cc8xFAqJ.s:15055  .rodata.op_map.9429:0000000000000000 op_map.9429
     /tmp/cc8xFAqJ.s:15060  .rodata.op_map.9443:0000000000000000 $d
     /tmp/cc8xFAqJ.s:15064  .rodata.op_map.9443:0000000000000000 op_map.9443
     /tmp/cc8xFAqJ.s:15072  .rodata.op_map2.9342:0000000000000000 $d
     /tmp/cc8xFAqJ.s:15076  .rodata.op_map2.9342:0000000000000000 op_map2.9342
     /tmp/cc8xFAqJ.s:15082  .rodata.opcode_breaks:0000000000000000 $d
     /tmp/cc8xFAqJ.s:15086  .rodata.opcode_breaks:0000000000000000 opcode_breaks
     /tmp/cc8xFAqJ.s:15089  .rodata.prob_catalogue:0000000000000000 $d
     /tmp/cc8xFAqJ.s:15098  .rodata.prog_catalogue:0000000000000000 $d
     /tmp/cc8xFAqJ.s:15108  .rodata.program_xfcn:0000000000000000 $d
     /tmp/cc8xFAqJ.s:15122  .rodata.smap.9266:0000000000000000 $d
     /tmp/cc8xFAqJ.s:15126  .rodata.smap.9266:0000000000000000 smap.9266
     /tmp/cc8xFAqJ.s:15129  .rodata.stats_catalogue:0000000000000000 $d
     /tmp/cc8xFAqJ.s:15136  .rodata.sums_catalogue:0000000000000000 $d
     /tmp/cc8xFAqJ.s:15142  .rodata.test_catalogue:0000000000000000 $d
     /tmp/cc8xFAqJ.s:2431   .text.process_fg_shifted:0000000000000067 $d
     /tmp/cc8xFAqJ.s:2431   .text.process_fg_shifted:0000000000000068 $t

UNDEFINED SYMBOLS
sizeLIB
main_ram
StateWhileOn
find_label_from
getprog
do_inc
PcWrapped
process_cmdline
shift_down
do_dec
is_bad_cmdline
error_message
argcmds
get_dispmode_digs
num_arg_digits
local_regs_rarg
global_regs_rarg
process_cmdline_set_lift
update_program_bounds
set_pc
int_base
set_menu
display_current_menu
display
is_dblmode
IntMaxWindow
xset
cpx_nop
set_lift
ARM GAS  /tmp/cc8xFAqJ.s 			page 413


ShowRegister
get_reg_n
swap_reg
copyreg
op_p2r
RectPolConv
lift
zero_X
zero_Y
remap_chars
catcmd
keyticks
xeq_init_contexts
is_dot
xeq
xeqprog
dot
Pause
JustStopped
Running
ShowRPN
JustDisplayed
DispMsg
xeq_xrom
stoprog
is_key_pressed
set_running_off
xeq_sst_bst
clr_dot
finish_RPN
message
find_char
delprog
prt
scopy_char
TraceBuffer
clpall
clrprog
reset
clrall
set_last_menu
find_user_pc
cmdgtocommon
global_regs
drop
convert_regK
local_regs
alen

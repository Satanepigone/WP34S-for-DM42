ARM GAS  /tmp/ccy15zOt.s 			page 1


   1              		.arch armv7e-m
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"keys.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.gtodot_digit,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	gtodot_digit:
  27              	.LVL0:
  28              	.LFB25:
  29              		.file 1 "src/keys.c"
   1:src/keys.c    **** /* This file is part of 34S.
   2:src/keys.c    ****  * 
   3:src/keys.c    ****  * 34S is free software: you can redistribute it and/or modify
   4:src/keys.c    ****  * it under the terms of the GNU General Public License as published by
   5:src/keys.c    ****  * the Free Software Foundation, either version 3 of the License, or
   6:src/keys.c    ****  * (at your option) any later version.
   7:src/keys.c    ****  * 
   8:src/keys.c    ****  * 34S is distributed in the hope that it will be useful,
   9:src/keys.c    ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:src/keys.c    ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:src/keys.c    ****  * GNU General Public License for more details.
  12:src/keys.c    ****  * 
  13:src/keys.c    ****  * You should have received a copy of the GNU General Public License
  14:src/keys.c    ****  * along with 34S.  If not, see <http://www.gnu.org/licenses/>.
  15:src/keys.c    ****  */
  16:src/keys.c    **** 
  17:src/keys.c    **** 
  18:src/keys.c    **** #ifdef DM42
  19:src/keys.c    **** #include "dmcp.h"
  20:src/keys.c    **** #endif
  21:src/keys.c    **** 
  22:src/keys.c    **** #define DM42SAFE
  23:src/keys.c    **** 
  24:src/keys.c    **** #include "features.h"
  25:src/keys.c    **** #include "xeq.h"
  26:src/keys.c    **** #include "keys.h"
  27:src/keys.c    **** #include "display.h"
  28:src/keys.c    **** #include "lcd.h"
  29:src/keys.c    **** #include "int.h"
ARM GAS  /tmp/ccy15zOt.s 			page 2


  30:src/keys.c    **** #include "consts.h"
  31:src/keys.c    **** #include "storage.h"
  32:src/keys.c    **** #include "stats.h"
  33:src/keys.c    **** #include "catalogues.h"
  34:src/keys.c    **** #ifndef DM42
  35:src/keys.c    **** #include "printer.h"
  36:src/keys.c    **** #endif
  37:src/keys.c    **** #undef DM42SAFE
  38:src/keys.c    **** 
  39:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
  40:src/keys.c    **** extern void changed_catalog_state();
  41:src/keys.c    **** #endif
  42:src/keys.c    **** 
  43:src/keys.c    **** #define STATE_UNFINISHED	(OP_SPEC | OP_UNFINISHED)
  44:src/keys.c    **** #define STATE_BACKSPACE		(OP_SPEC | OP_BACKSPACE)
  45:src/keys.c    **** #define STATE_SST		(OP_SPEC | OP_SST)
  46:src/keys.c    **** #define STATE_BST		(OP_SPEC | OP_BST)
  47:src/keys.c    **** #define STATE_RUNNING		(OP_SPEC | OP_RUNNING)
  48:src/keys.c    **** #define STATE_IGNORE		(OP_SPEC | OP_IGNORE)
  49:src/keys.c    **** #define STATE_WINDOWLEFT	(OP_SPEC | OP_WINDOWLEFT)
  50:src/keys.c    **** #define STATE_WINDOWRIGHT	(OP_SPEC | OP_WINDOWRIGHT)
  51:src/keys.c    **** //#define STATE_SHOW		(OP_SPEC | OP_SHOW)
  52:src/keys.c    **** 
  53:src/keys.c    **** /* Define this if the key codes map rows sequentially */
  54:src/keys.c    **** 
  55:src/keys.c    **** #define TEST_EQ		0
  56:src/keys.c    **** #define TEST_NE		1
  57:src/keys.c    **** #define TEST_LT		2
  58:src/keys.c    **** #define TEST_LE		3
  59:src/keys.c    **** #define TEST_GT		4
  60:src/keys.c    **** #define TEST_GE		5
  61:src/keys.c    **** 
  62:src/keys.c    **** enum confirmations {
  63:src/keys.c    **** 	// Apart from the first of these, these must be in the same
  64:src/keys.c    **** 	// order as the opcodes in xeq.h: OP_CLALL, OP_RESET, OP_CLPROG, OP_CLPALL
  65:src/keys.c    **** 	confirm_none=0, confirm_clall, confirm_reset, confirm_clprog, confirm_clpall
  66:src/keys.c    **** };
  67:src/keys.c    **** 
  68:src/keys.c    **** FLAG WasDataEntry;
  69:src/keys.c    **** 
  70:src/keys.c    **** /* Local data to this module */
  71:src/keys.c    **** unsigned int OpCode;
  72:src/keys.c    **** FLAG OpCodeDisplayPending;
  73:src/keys.c    **** FLAG GoFast;
  74:src/keys.c    **** FLAG NonProgrammable;
  75:src/keys.c    **** 
  76:src/keys.c    **** /*
  77:src/keys.c    ****  *  Needed before definition
  78:src/keys.c    ****  */ 
  79:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end);
  80:src/keys.c    **** 
  81:src/keys.c    **** /*
  82:src/keys.c    ****  *  Return the shift state
  83:src/keys.c    ****  */
  84:src/keys.c    **** enum shifts cur_shift(void) {
  85:src/keys.c    **** 	enum shifts s = shift_down();
  86:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
ARM GAS  /tmp/ccy15zOt.s 			page 3


  87:src/keys.c    **** }
  88:src/keys.c    **** 
  89:src/keys.c    **** /*
  90:src/keys.c    ****  *  Set new shift state, return previous state
  91:src/keys.c    ****  */
  92:src/keys.c    **** static enum shifts set_shift(enum shifts shift) {
  93:src/keys.c    **** 	enum shifts r = cur_shift();
  94:src/keys.c    **** 	State2.shifts = shift;
  95:src/keys.c    **** 	//	State2.alpha_pos = 0;
  96:src/keys.c    **** 	return r;
  97:src/keys.c    **** }
  98:src/keys.c    **** 
  99:src/keys.c    **** /*
 100:src/keys.c    ****  *  Clear shift state and return previous state
 101:src/keys.c    ****  */
 102:src/keys.c    **** enum shifts reset_shift(void) {
 103:src/keys.c    **** 	return set_shift(SHIFT_N);
 104:src/keys.c    **** }
 105:src/keys.c    **** 
 106:src/keys.c    **** /*
 107:src/keys.c    ****  *  Toggle shift state
 108:src/keys.c    ****  */
 109:src/keys.c    **** static void toggle_shift(enum shifts shift) {
 110:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 111:src/keys.c    **** }
 112:src/keys.c    **** 
 113:src/keys.c    **** 
 114:src/keys.c    **** /*
 115:src/keys.c    ****  * Mapping from the key code to a linear index
 116:src/keys.c    ****  * The trick is to move the shifts and the holes in the map out of the way
 117:src/keys.c    ****  */
 118:src/keys.c    **** #ifdef DM42
 119:src/keys.c    **** static int keycode_to_linear_for_alpha(const keycode c)
 120:src/keys.c    **** {
 121:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 122:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 123:src/keys.c    **** 		 6,  7,  8,  9, 10, 11,   // K10 - K15
 124:src/keys.c    **** 		 12, 13, 14, 15, 16,  0,   // K20 - K24
 125:src/keys.c    **** 		17, 18, 19, 20, 21,  0,   // K30 - K34
 126:src/keys.c    **** 		22, 23, 24, 25, 26,  0,   // K40 - K44
 127:src/keys.c    **** 		27, 28, 29, 30, 31,  0,   // K50 - K54
 128:src/keys.c    **** 		32, 33, 34, 35, 36,       // K60 - K64
 129:src/keys.c    **** 		37, 37, 37, 37, 37, 37       // K_F, G, H, ARROW, CMPLX, NOP
 130:src/keys.c    **** 	};
 131:src/keys.c    **** 	return linear_key_map[c];
 132:src/keys.c    **** }
 133:src/keys.c    **** 
 134:src/keys.c    **** static int keycode_to_linear(const keycode c)
 135:src/keys.c    **** {
 136:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 137:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 138:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 139:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 140:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 141:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 142:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 143:src/keys.c    **** 		29, 30, 31, 32, 33,       // K60 - K64
ARM GAS  /tmp/ccy15zOt.s 			page 4


 144:src/keys.c    **** 		34, 34, 34,  4,  5, 34,        // K_F, G, H, ARROW, CMPLX, NOP
 145:src/keys.c    **** 	};
 146:src/keys.c    **** 	return linear_key_map[c];
 147:src/keys.c    **** }
 148:src/keys.c    **** #else
 149:src/keys.c    **** static int keycode_to_linear(const keycode c)
 150:src/keys.c    **** {
 151:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 ] = {
 152:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 153:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 154:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 155:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 156:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 157:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 158:src/keys.c    **** 		29, 30, 31, 32, 33        // K60 - K64
 159:src/keys.c    **** 	};
 160:src/keys.c    **** 	return linear_key_map[c];
 161:src/keys.c    **** }
 162:src/keys.c    **** #endif
 163:src/keys.c    **** /*
 164:src/keys.c    ****  * Mapping from the key code to a row column code ('A'=11 to '+'=75)
 165:src/keys.c    ****  * Used in KEY? and for shorthand addressing
 166:src/keys.c    ****  */
 167:src/keys.c    **** int keycode_to_row_column(const int c)
 168:src/keys.c    **** {
 169:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 170:src/keys.c    **** }
 171:src/keys.c    **** 
 172:src/keys.c    **** /*
 173:src/keys.c    ****  * Mapping from a row column code ('A'=11 to '+'=75) to the key code
 174:src/keys.c    ****  * Used in PUTK and KTYPE.
 175:src/keys.c    ****  */
 176:src/keys.c    **** 
 177:src/keys.c    **** int row_column_to_keycode(const int c)
 178:src/keys.c    **** {
 179:src/keys.c    **** 	int row = c / 10 - 1;
 180:src/keys.c    **** 	int col = c % 10 - 1;
 181:src/keys.c    **** 
 182:src/keys.c    **** 	if (row < 0 || row > 6 || col > 5 - (row >= 2))
 183:src/keys.c    **** 		return -1;
 184:src/keys.c    **** 	return row * 6 + col;
 185:src/keys.c    **** }
 186:src/keys.c    **** 
 187:src/keys.c    **** /*
 188:src/keys.c    ****  *  Mapping from a key code to a digit from 0 to 9 or to a register address
 189:src/keys.c    ****  *  Bit seven is set if the key cannot be used as a label shortcut
 190:src/keys.c    ****  */
 191:src/keys.c    **** // Decision to make here about whether the top row can be used as shortcuts.
 192:src/keys.c    **** // Also, which other keys can / can't be used as shortcuts?
 193:src/keys.c    **** // Registers I, j, K, L will move with the new alpha layout.
 194:src/keys.c    **** 
 195:src/keys.c    **** #define NO_REG 0x7f
 196:src/keys.c    **** #define NO_SHORT 0x80
 197:src/keys.c    **** #ifdef DM42
 198:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 199:src/keys.c    **** {
 200:src/keys.c    ****   static const unsigned char map[] = {
ARM GAS  /tmp/ccy15zOt.s 			page 5


 201:src/keys.c    ****     // K00 - K05
 202:src/keys.c    ****     NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 203:src/keys.c    ****     NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 204:src/keys.c    ****     NO_SHORT | NO_REG,   NO_REG,
 205:src/keys.c    ****     // K10 - K15
 206:src/keys.c    ****     NO_REG, NO_REG, regI_idx, regJ_idx, regK_idx, regL_idx, 
 207:src/keys.c    ****     // K20 - K24
 208:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 209:src/keys.c    ****     // K30 - K34
 210:src/keys.c    ****     NO_REG, 7, 8, 9, NO_REG,
 211:src/keys.c    ****     // K40 - K44
 212:src/keys.c    ****     NO_REG, NO_SHORT | regT_idx, 5, 6, NO_REG,
 213:src/keys.c    ****     // K50 - K54
 214:src/keys.c    ****     NO_REG, NO_SHORT | regX_idx, NO_SHORT | regY_idx, NO_SHORT | regZ_idx, NO_REG,
 215:src/keys.c    ****     // K60 - K64
 216:src/keys.c    ****     NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE, NO_REG, NO_REG,
 217:src/keys.c    ****     // Shifts
 218:src/keys.c    ****     NO_REG
 219:src/keys.c    ****   };
 220:src/keys.c    **** 
 221:src/keys.c    ****   return (unsigned int) map[keycode_to_linear_for_alpha(c)];
 222:src/keys.c    **** }
 223:src/keys.c    **** #else
 224:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 225:src/keys.c    **** {
 226:src/keys.c    ****   static const unsigned char map[] = {
 227:src/keys.c    **** 		// K00 - K05
 228:src/keys.c    **** 		NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 229:src/keys.c    **** 		NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 230:src/keys.c    **** 		NO_SHORT | NO_REG,   NO_REG,
 231:src/keys.c    **** 		// K10 - K12
 232:src/keys.c    **** 		NO_REG, NO_REG, regI_idx, 
 233:src/keys.c    **** 		// K20 - K24
 234:src/keys.c    **** 		NO_SHORT | NO_REG, regJ_idx, regK_idx, regL_idx, NO_SHORT | NO_REG,
 235:src/keys.c    **** 		// K30 - K34
 236:src/keys.c    **** 		NO_REG, 7, 8, 9, NO_REG,
 237:src/keys.c    **** 		// K40 - K44
 238:src/keys.c    **** 		NO_REG, 4, 5, 6, regT_idx,
 239:src/keys.c    **** 		// K50 - K54
 240:src/keys.c    **** 		NO_REG, 1, 2, 3, NO_REG,
 241:src/keys.c    **** 		// K60 - K63
 242:src/keys.c    **** 		NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE,
 243:src/keys.c    **** 		regY_idx, regZ_idx,
 244:src/keys.c    **** 		// Shifts, etc
 245:src/keys.c    **** 		NO_REG
 246:src/keys.c    **** 	};
 247:src/keys.c    **** 
 248:src/keys.c    **** 	return (unsigned int) map[keycode_to_linear(c)];
 249:src/keys.c    **** }
 250:src/keys.c    **** #endif
 251:src/keys.c    **** /*
 252:src/keys.c    ****  *  Mapping of a keycode and shift state to a catalogue number
 253:src/keys.c    ****  */
 254:src/keys.c    **** static enum catalogues keycode_to_cat(const keycode c, enum shifts shift)
 255:src/keys.c    **** {
 256:src/keys.c    ****   enum catalogues cat = CATALOGUE_NONE;
 257:src/keys.c    ****   int i, col, max;
ARM GAS  /tmp/ccy15zOt.s 			page 6


 258:src/keys.c    ****   const struct _map {
 259:src/keys.c    ****     unsigned char key, cat[3];
 260:src/keys.c    ****   } *cp;
 261:src/keys.c    **** 
 262:src/keys.c    ****   // Common to both alpha mode and normal mode is the programming X.FCN catalogue
 263:src/keys.c    ****   if (c == K53 && shift == SHIFT_H && ! State2.runmode && ! State2.cmplx && ! State2.multi)
 264:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 265:src/keys.c    **** 
 266:src/keys.c    ****   if (! State2.alphas && ! State2.multi) {
 267:src/keys.c    ****     /*
 268:src/keys.c    ****      *  Normal processing - Not alpha mode
 269:src/keys.c    ****      */
 270:src/keys.c    ****     static const struct _map cmap[] = {
 271:src/keys.c    **** #ifdef DM42
 272:src/keys.c    ****       { K04, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 273:src/keys.c    **** #else
 274:src/keys.c    ****       { K_ARROW, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 275:src/keys.c    **** #endif
 276:src/keys.c    ****       { K05,     { CATALOGUE_MODE,      CATALOGUE_MODE,      CATALOGUE_MODE          } },
 277:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
 278:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_USER          } },
 279:src/keys.c    **** #else
 280:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_LABELS        } },
 281:src/keys.c    **** #endif
 282:src/keys.c    ****       { K20,     { CATALOGUE_CONST,     CATALOGUE_NONE,      CATALOGUE_COMPLEX_CONST } },
 283:src/keys.c    ****       { K41,     { CATALOGUE_PROB,      CATALOGUE_NONE,      CATALOGUE_PROB          } },
 284:src/keys.c    ****       { K42,     { CATALOGUE_STATS,     CATALOGUE_NONE,      CATALOGUE_STATS         } },
 285:src/keys.c    ****       { K43,     { CATALOGUE_SUMS,      CATALOGUE_NONE,      CATALOGUE_SUMS          } },
 286:src/keys.c    ****       { K44,     { CATALOGUE_MATRIX,    CATALOGUE_NONE,      CATALOGUE_MATRIX        } },
 287:src/keys.c    ****       { K50,     { CATALOGUE_STATUS,    CATALOGUE_STATUS,    CATALOGUE_STATUS        } },
 288:src/keys.c    ****       { K51,     { CATALOGUE_TEST,      CATALOGUE_TEST,      CATALOGUE_TEST          } },
 289:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
 290:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_INTERNAL      } },
 291:src/keys.c    **** #else
 292:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_PROG          } },
 293:src/keys.c    **** #endif
 294:src/keys.c    ****       { K53,     { CATALOGUE_NORMAL,    CATALOGUE_INT,       CATALOGUE_COMPLEX       } },
 295:src/keys.c    ****     };
 296:src/keys.c    **** 
 297:src/keys.c    ****     if (c == K60 && shift == SHIFT_G) {
 298:src/keys.c    ****       /*
 299:src/keys.c    ****        *  SHOW starts register browser
 300:src/keys.c    ****        */
 301:src/keys.c    ****       return CATALOGUE_REGISTERS;
 302:src/keys.c    ****     }
 303:src/keys.c    **** #if 0
 304:src/keys.c    ****     // conflicts with c# 002 and c# 003
 305:src/keys.c    ****     if ((c == K52 || c == K53) && shift == SHIFT_N && State2.cmplx && State2.catalogue == CATALOGUE
 306:src/keys.c    ****       /*
 307:src/keys.c    ****        *  Shorthand to complex P.FCN & X.FCN - h may be omitted
 308:src/keys.c    ****        */
 309:src/keys.c    ****       shift = SHIFT_H;
 310:src/keys.c    ****     }
 311:src/keys.c    **** #endif
 312:src/keys.c    ****     if (shift != SHIFT_H) {
 313:src/keys.c    ****       /*
 314:src/keys.c    ****        *  All standard catalogues are on h-shifted keys
ARM GAS  /tmp/ccy15zOt.s 			page 7


 315:src/keys.c    ****        */
 316:src/keys.c    ****       return CATALOGUE_NONE;
 317:src/keys.c    ****     }
 318:src/keys.c    **** 
 319:src/keys.c    ****     /*
 320:src/keys.c    ****      *  Prepare search
 321:src/keys.c    ****      */
 322:src/keys.c    ****     cp = cmap;
 323:src/keys.c    **** #ifndef WINGUI
 324:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx || shift_down() == SHIFT_H ? 2 : 0;
 325:src/keys.c    **** #else
 326:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx ? 2 : 0;
 327:src/keys.c    **** #endif
 328:src/keys.c    ****     max = sizeof(cmap) / sizeof(cmap[0]);
 329:src/keys.c    ****   }
 330:src/keys.c    ****   else {
 331:src/keys.c    ****     /*
 332:src/keys.c    ****      *  All the alpha catalogues go here
 333:src/keys.c    ****      */
 334:src/keys.c    **** #ifdef DM42
 335:src/keys.c    ****     static const struct _map amap[] = {
 336:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 337:src/keys.c    ****       { K05, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 338:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 339:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 340:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 341:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 342:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 343:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 344:src/keys.c    ****     };
 345:src/keys.c    **** #else
 346:src/keys.c    ****     static const struct _map amap[] = {
 347:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 348:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 349:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 350:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 351:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 352:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 353:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 354:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 355:src/keys.c    ****     };
 356:src/keys.c    **** #endif
 357:src/keys.c    ****     static const char smap[] = { 0, 1, 0, 2 }; // Map shifts to columns;
 358:src/keys.c    **** 
 359:src/keys.c    ****     /*
 360:src/keys.c    ****      *  Prepare search
 361:src/keys.c    ****      */
 362:src/keys.c    ****     cp = amap;
 363:src/keys.c    ****     col = smap[shift];
 364:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 365:src/keys.c    ****   }
 366:src/keys.c    **** 
 367:src/keys.c    ****   /*
 368:src/keys.c    ****    *  Search the key in one of the tables
 369:src/keys.c    ****    */
 370:src/keys.c    ****   for (i = 0; i < max; ++i, ++cp) {
 371:src/keys.c    ****     if (cp->key == c) {
ARM GAS  /tmp/ccy15zOt.s 			page 8


 372:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 373:src/keys.c    ****       break;
 374:src/keys.c    ****     }
 375:src/keys.c    ****   }
 376:src/keys.c    ****   if (State2.multi && (cat < CATALOGUE_ALPHA_SYMBOLS || cat > CATALOGUE_ALPHA_SUBSCRIPTS)) {
 377:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 378:src/keys.c    ****     cat = CATALOGUE_NONE;
 379:src/keys.c    ****   }
 380:src/keys.c    ****   return cat;
 381:src/keys.c    **** }
 382:src/keys.c    **** 
 383:src/keys.c    **** #ifdef DM42
 384:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 385:src/keys.c    **** {
 386:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 387:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 388:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 389:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 390:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 391:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 392:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 393:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 394:src/keys.c    **** 
 395:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 396:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 397:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 398:src/keys.c    **** 		{ 'J',  0257, 0000, 0000, 'j',  0000,  },  // K13
 399:src/keys.c    **** 		{ 'K',  0000, 'K',  0000, 'k',  0251,  },  // K14
 400:src/keys.c    **** 		{ 'L',  0000, 0212, 0000, 'l',  0252,  },  // K15
 401:src/keys.c    **** 
 402:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 403:src/keys.c    **** 		{ 'M',  0000, 0253, 0027, 'm',  0253,  },  // K21
 404:src/keys.c    **** 		{ 'N',  0010, 'N',  0225, 'n',  0254,  },  // K22
 405:src/keys.c    **** 		{ 'O',  0000, 0227, 0257, 'o',  0267,  },  // K23
 406:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 407:src/keys.c    **** 
 408:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 409:src/keys.c    **** 		{ 'P',  '7',  0217, '&',  'p',  0257,  },  // K31
 410:src/keys.c    **** 		{ 'Q',  '8',  0000, '|',  'q',  0000,  },  // K32
 411:src/keys.c    **** 		{ 'R',  '9',  'R',  0013, 'r',  0260,  },  // K33
 412:src/keys.c    **** 		{ 'S',  '/',  0221, '\\', 's',  0261,  },  // K34
 413:src/keys.c    **** 
 414:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 415:src/keys.c    **** 		{ 'T',  '4',  'T',  0000, 't',  0262,  },  // K41
 416:src/keys.c    **** 		{ 'U',  '5',  0000, 0000, 'u',  0000,  },  // K42
 417:src/keys.c    **** 		{ 'V',  '6',  0000, 0000, 'v',  0000,  },  // K43
 418:src/keys.c    **** 		{ 'W', 0034,  0000, 0000, 'w',  0000,  },  // K44
 419:src/keys.c    **** 
 420:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 421:src/keys.c    **** 		{ 'X',  '1',  0215, 0000, 'x',  0255,  },  // K51
 422:src/keys.c    **** 		{ 'Y',  '2',  'Y',  0000, 'y',  0263,  },  // K52
 423:src/keys.c    **** 		{ 'Z',  '3',  'Z',  0000, 'z',  0245,  },  // K53
 424:src/keys.c    **** 		{ '-',  '(',  ')',  0000, 0000, 0000,  },  // K54
 425:src/keys.c    **** 
 426:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K60
 427:src/keys.c    **** 		{ ':',  '0',  0207, ' ',  ';',  0247,  },  // K61
 428:src/keys.c    **** 		{ '.',  '.',  0226, 0000, '.',  0266,  },  // K62
ARM GAS  /tmp/ccy15zOt.s 			page 9


 429:src/keys.c    **** 		{ '?',  0000, 0041, 0000, '?',  0000,  },  // K63
 430:src/keys.c    **** 		{ ' ',  '+',  '=',  0000, ' ',  ' ',   },  // K64
 431:src/keys.c    **** 
 432:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // shifts etc.
 433:src/keys.c    **** 	};
 434:src/keys.c    **** 	if (State2.alphashift) {
 435:src/keys.c    **** 		if (shift == SHIFT_N)
 436:src/keys.c    **** 			shift = SHIFT_LC_N;
 437:src/keys.c    **** 		else if (shift == SHIFT_G)
 438:src/keys.c    **** 			shift = SHIFT_LC_G;
 439:src/keys.c    **** 	}
 440:src/keys.c    **** 	return alphamap[keycode_to_linear_for_alpha(c)][shift];
 441:src/keys.c    **** }
 442:src/keys.c    **** #else
 443:src/keys.c    **** /*
 444:src/keys.c    ****  * Mapping from key position to alpha in the four key planes plus
 445:src/keys.c    ****  * the two lower case planes.
 446:src/keys.c    ****  */
 447:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 448:src/keys.c    **** {
 449:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 450:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 451:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 452:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 453:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 454:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 455:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 456:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 457:src/keys.c    **** 
 458:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 459:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 460:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 461:src/keys.c    **** 
 462:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 463:src/keys.c    **** 		{ 'J',  '(',  ')',  0027, 'j',  ')',   },  // K21
 464:src/keys.c    **** 		{ 'K',  0010, 'K',  0225, 'k',  0251,  },  // K22
 465:src/keys.c    **** 		{ 'L',  0000, 0212, 0257, 'l',  0252,  },  // K23
 466:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 467:src/keys.c    **** 
 468:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 469:src/keys.c    **** 		{ 'M',  '7',  'M',  '&',  'm',  0253,  },  // K31
 470:src/keys.c    **** 		{ 'N',  '8',  'N',  '|',  'n',  0254,  },  // K32
 471:src/keys.c    **** 		{ 'O',  '9',  0227, 0013, 'o',  0267,  },  // K33
 472:src/keys.c    **** 		{ 'P',  '/',  0217, '\\', 'p',  0257,  },  // K34
 473:src/keys.c    **** 
 474:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 475:src/keys.c    **** 		{ 'Q',  '4',  0000, 0000, 'q',  0000,  },  // K41
 476:src/keys.c    **** 		{ 'R',  '5',  'R',  0000, 'r',  0260,  },  // K42
 477:src/keys.c    **** 		{ 'S',  '6',  0221, 0000, 's',  0261,  },  // K43
 478:src/keys.c    **** 		{ 'T',  0034, 'T',  0000, 't',  0262,  },  // K44
 479:src/keys.c    **** 
 480:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 481:src/keys.c    **** 		{ '1',  '1',  0207, 0000, '1',  0247,  },  // K51
 482:src/keys.c    **** 		{ 'U',  '2',  0000, 0000, 'u',  0000,  },  // K52
 483:src/keys.c    **** 		{ 'V',  '3',  0000, 0000, 'v',  0000,  },  // K53
 484:src/keys.c    **** 		{ 'W',  0034, 0000, 0000, 'w',  0000,  },  // K54
 485:src/keys.c    **** 
ARM GAS  /tmp/ccy15zOt.s 			page 10


 486:src/keys.c    **** 		{ 0000, 0222, 0000, 0000, 0000, 0000,  },  // K60
 487:src/keys.c    **** 		{ '0',  '0',  0226, ' ',  '0',  0266,  },  // K61
 488:src/keys.c    **** 		{ 'X',  '.',  0215, 0000, 'x',  0255,  },  // K62
 489:src/keys.c    **** 		{ 'Y',  0000, 'Y',  0000, 'y',  0263,  },  // K63
 490:src/keys.c    **** 		{ 'Z',  '+',  'Z',  0000, 'z',  0245,  },  // K64
 491:src/keys.c    **** 	};
 492:src/keys.c    **** 	if (State2.alphashift) {
 493:src/keys.c    **** 		if (shift == SHIFT_N)
 494:src/keys.c    **** 			shift = SHIFT_LC_N;
 495:src/keys.c    **** 		else if (shift == SHIFT_G)
 496:src/keys.c    **** 			shift = SHIFT_LC_G;
 497:src/keys.c    **** 	}
 498:src/keys.c    **** 	return alphamap[keycode_to_linear(c)][shift];
 499:src/keys.c    **** }
 500:src/keys.c    **** #endif
 501:src/keys.c    **** static void init_arg(const enum rarg base) {
 502:src/keys.c    **** 	if (is_bad_cmdline())
 503:src/keys.c    **** 		return;
 504:src/keys.c    **** 	CmdBase = base;
 505:src/keys.c    **** 	State2.ind = 0;
 506:src/keys.c    **** 	State2.digval = 0;
 507:src/keys.c    **** 	State2.numdigit = 0;
 508:src/keys.c    **** 	State2.rarg = 1;
 509:src/keys.c    **** 	State2.dot = 0;
 510:src/keys.c    **** 	State2.local = 0;
 511:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 512:src/keys.c    **** }
 513:src/keys.c    **** 
 514:src/keys.c    **** static void init_cat(enum catalogues cat) {
 515:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 516:src/keys.c    **** 		// Save last catalogue for a later restore
 517:src/keys.c    **** 		State.last_cat = State2.catalogue;
 518:src/keys.c    **** 		CmdLineLength = 0;
 519:src/keys.c    **** 	}
 520:src/keys.c    **** 	process_cmdline();
 521:src/keys.c    **** 
 522:src/keys.c    **** 	State2.labellist = 0;
 523:src/keys.c    **** 	State2.registerlist = 0;
 524:src/keys.c    **** 	State2.status = 0;
 525:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 526:src/keys.c    **** 
 527:src/keys.c    **** 	switch (cat) {
 528:src/keys.c    **** 	case CATALOGUE_LABELS:
 529:src/keys.c    **** 		// Label browser
 530:src/keys.c    **** 		State2.labellist = 1;
 531:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 532:src/keys.c    **** 		break;
 533:src/keys.c    **** 	
 534:src/keys.c    **** 	case CATALOGUE_REGISTERS:
 535:src/keys.c    **** 		// Register browser
 536:src/keys.c    **** 		State2.registerlist = 1;
 537:src/keys.c    **** 		State2.digval = regX_idx;
 538:src/keys.c    **** 		State2.digval2 = 0;
 539:src/keys.c    **** 		break;
 540:src/keys.c    **** 
 541:src/keys.c    **** 	case CATALOGUE_STATUS:
 542:src/keys.c    **** 		// Flag browser
ARM GAS  /tmp/ccy15zOt.s 			page 11


 543:src/keys.c    **** 		State2.status = 1;
 544:src/keys.c    **** 		break;
 545:src/keys.c    **** 
 546:src/keys.c    **** 	default:
 547:src/keys.c    **** 		// Normal catalogue
 548:src/keys.c    **** 		State2.catalogue = cat;
 549:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 550:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 551:src/keys.c    **** 			// Different catalogue, reset position
 552:src/keys.c    **** 			State.catpos = 0;
 553:src/keys.c    **** 		}
 554:src/keys.c    **** 	}
 555:src/keys.c    **** 	reset_shift();
 556:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 557:src/keys.c    **** 	changed_catalog_state();
 558:src/keys.c    **** #endif
 559:src/keys.c    **** }
 560:src/keys.c    **** 
 561:src/keys.c    **** /*
 562:src/keys.c    ****  *  Reset the internal state to a sane default
 563:src/keys.c    ****  */
 564:src/keys.c    **** void init_state(void) {
 565:src/keys.c    **** #ifndef REALBUILD
 566:src/keys.c    **** 	unsigned int a = State2.flags;
 567:src/keys.c    **** 	unsigned int b = State2.trace;
 568:src/keys.c    **** #else
 569:src/keys.c    **** 	FLAG t = TestFlag;
 570:src/keys.c    **** #endif
 571:src/keys.c    **** 	int v = Voltage;
 572:src/keys.c    **** 	int k = LastKey;
 573:src/keys.c    **** 
 574:src/keys.c    **** 	CmdBase = 0;
 575:src/keys.c    **** 	// Removed: will clear any locals on power off
 576:src/keys.c    **** 	// clrretstk(0);
 577:src/keys.c    **** 
 578:src/keys.c    **** 	xset(&State2, 0, sizeof(State2));
 579:src/keys.c    **** 	State2.test = TST_NONE;
 580:src/keys.c    **** 	State2.runmode = 1;
 581:src/keys.c    **** 	update_program_bounds(1);
 582:src/keys.c    **** 	set_lift();
 583:src/keys.c    **** 
 584:src/keys.c    **** 	// Restore stuff that has been moved to State2 for space reasons
 585:src/keys.c    **** 	// but must not be cleared.
 586:src/keys.c    **** 	Voltage = v;
 587:src/keys.c    **** 	LastKey = k;
 588:src/keys.c    **** #ifndef REALBUILD
 589:src/keys.c    **** 	State2.trace = b;
 590:src/keys.c    **** 	State2.flags = a;
 591:src/keys.c    **** #else
 592:src/keys.c    **** 	TestFlag = t;
 593:src/keys.c    **** #endif
 594:src/keys.c    **** 	ShowRegister = regX_idx;
 595:src/keys.c    **** }
 596:src/keys.c    **** 
 597:src/keys.c    **** void soft_init_state(void) {
 598:src/keys.c    **** 	int soft;
 599:src/keys.c    **** 	unsigned int runmode;
ARM GAS  /tmp/ccy15zOt.s 			page 12


 600:src/keys.c    **** 	unsigned int alphas;
 601:src/keys.c    **** 
 602:src/keys.c    **** 	if (CmdLineLength) {
 603:src/keys.c    **** 		CmdLineLength = 0;
 604:src/keys.c    **** 		CmdLineEex = 0;
 605:src/keys.c    **** 		CmdLineDot = 0;
 606:src/keys.c    **** 		return;
 607:src/keys.c    **** 	}
 608:src/keys.c    **** 	soft = State2.multi || State2.rarg || State2.hyp || State2.gtodot || State2.labellist ||
 609:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 610:src/keys.c    **** 	runmode = State2.runmode;
 611:src/keys.c    **** 	alphas = State2.alphas;
 612:src/keys.c    **** 	init_state();
 613:src/keys.c    **** 	if (soft) {
 614:src/keys.c    **** 		State2.runmode = runmode;
 615:src/keys.c    **** 		State2.alphas = alphas;
 616:src/keys.c    **** 	}
 617:src/keys.c    **** }
 618:src/keys.c    **** 
 619:src/keys.c    **** static int check_confirm(int op) {
 620:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 621:src/keys.c    **** 		const int nilop = argKIND(op);
 622:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 623:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 624:src/keys.c    **** 			return STATE_UNFINISHED;
 625:src/keys.c    **** 		}
 626:src/keys.c    **** #ifndef DM42		
 627:src/keys.c    **** 		if ((nilop >= OP_RECV && nilop <= OP_PSTO)
 628:src/keys.c    **** #endif
 629:src/keys.c    **** #ifdef DM42
 630:src/keys.c    **** 		    if ((nilop >= OP_SAVE && nilop <= OP_PSTO) // no recv in DM42
 631:src/keys.c    **** #endif
 632:src/keys.c    **** #ifdef INFRARED
 633:src/keys.c    **** 			|| nilop == OP_PRINT_PGM
 634:src/keys.c    **** #endif
 635:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
 636:src/keys.c    **** 			|| nilop == OP_STOPWATCH
 637:src/keys.c    **** #endif
 638:src/keys.c    **** 		) {
 639:src/keys.c    **** 			// These commands are not programmable
 640:src/keys.c    **** 			NonProgrammable = 1;
 641:src/keys.c    **** 		}
 642:src/keys.c    **** 	}
 643:src/keys.c    **** 	return op;
 644:src/keys.c    **** }
 645:src/keys.c    **** 
 646:src/keys.c    **** static void set_smode(const enum single_disp d) {
 647:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 648:src/keys.c    **** }
 649:src/keys.c    **** 
 650:src/keys.c    **** static int check_f_key(int n, const int dflt) {
 651:src/keys.c    **** 	const int code = 100 + n;
 652:src/keys.c    **** 	unsigned int pc = state_pc();
 653:src/keys.c    **** 
 654:src/keys.c    **** 	if (State2.runmode) {
 655:src/keys.c    **** 		if (isXROM(pc))
 656:src/keys.c    **** 			pc = 1;
ARM GAS  /tmp/ccy15zOt.s 			page 13


 657:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 658:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 659:src/keys.c    **** 	}
 660:src/keys.c    **** 	return dflt;
 661:src/keys.c    **** }
 662:src/keys.c    **** 
 663:src/keys.c    **** /* Return non-zero if the current mode is integer and we accept letters
 664:src/keys.c    ****  * as digits.
 665:src/keys.c    ****  */
 666:src/keys.c    **** static int intltr(int d) {
 667:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 668:src/keys.c    **** }
 669:src/keys.c    **** 
 670:src/keys.c    **** /*
 671:src/keys.c    ****  *  Process a key code in the unshifted mode.
 672:src/keys.c    ****  */
 673:src/keys.c    **** static int process_normal(const keycode c)
 674:src/keys.c    **** {
 675:src/keys.c    **** 	static const unsigned short int op_map[] = {
 676:src/keys.c    **** 		// Row 1
 677:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS, // A to D
 678:src/keys.c    **** 		OP_MON  | OP_RECIP,
 679:src/keys.c    **** 		OP_DYA  | OP_POW,
 680:src/keys.c    **** 		OP_MON  | OP_SQRT,
 681:src/keys.c    **** 		OP_SPEC | OP_E,		// ->
 682:src/keys.c    **** 		OP_SPEC | OP_F,		// CPX
 683:src/keys.c    **** 		// Row 2
 684:src/keys.c    **** 		RARG_STO,
 685:src/keys.c    **** 		RARG_RCL,
 686:src/keys.c    **** 		OP_NIL  | OP_RDOWN,
 687:src/keys.c    **** 		// Row 3
 688:src/keys.c    **** 		OP_SPEC | OP_ENTER,
 689:src/keys.c    **** 		RARG(RARG_SWAPX, regY_idx),
 690:src/keys.c    **** 		OP_SPEC | OP_CHS,	// CHS
 691:src/keys.c    **** 		OP_SPEC | OP_EEX,	// EEX
 692:src/keys.c    **** 		OP_SPEC | OP_CLX,	// <-
 693:src/keys.c    **** 		// Row 4
 694:src/keys.c    **** 		RARG_XEQ,
 695:src/keys.c    **** 		OP_SPEC | OP_7,
 696:src/keys.c    **** 		OP_SPEC | OP_8,
 697:src/keys.c    **** 		OP_SPEC | OP_9,
 698:src/keys.c    **** 		OP_DYA  | OP_DIV,
 699:src/keys.c    **** 		// Row 5
 700:src/keys.c    **** 		STATE_BST,
 701:src/keys.c    **** 		OP_SPEC | OP_4,
 702:src/keys.c    **** 		OP_SPEC | OP_5,
 703:src/keys.c    **** 		OP_SPEC | OP_6,
 704:src/keys.c    **** 		OP_DYA  | OP_MUL,
 705:src/keys.c    **** 		// Row 6
 706:src/keys.c    **** 		STATE_SST,		// SST
 707:src/keys.c    **** 		OP_SPEC | OP_1,
 708:src/keys.c    **** 		OP_SPEC | OP_2,
 709:src/keys.c    **** 		OP_SPEC | OP_3,
 710:src/keys.c    **** 		OP_DYA  | OP_SUB,
 711:src/keys.c    **** 		// Row 7
 712:src/keys.c    **** 		STATE_UNFINISHED,	// ON/C
 713:src/keys.c    **** 		OP_SPEC | OP_0,
ARM GAS  /tmp/ccy15zOt.s 			page 14


 714:src/keys.c    **** 		OP_SPEC | OP_DOT,
 715:src/keys.c    **** 		OP_NIL  | OP_RS,	// R/S
 716:src/keys.c    **** 		OP_DYA  | OP_ADD,
 717:src/keys.c    **** #ifdef DM42
 718:src/keys.c    **** 		OP_NIL  | OP_NOP,  // shifts etc.
 719:src/keys.c    **** #endif
 720:src/keys.c    **** 	};
 721:src/keys.c    **** 
 722:src/keys.c    **** 	int lc = keycode_to_linear(c);
 723:src/keys.c    **** 	int op = op_map[lc];
 724:src/keys.c    **** 	
 725:src/keys.c    **** 	// The switch handles all the special cases
 726:src/keys.c    **** #ifdef DM42
 727:src/keys.c    **** 	int op_int;
 728:src/keys.c    **** 	if (UState.intm) {
 729:src/keys.c    **** 	  switch (c) {
 730:src/keys.c    **** 	  case K00:
 731:src/keys.c    **** 	    op = OP_SPEC | OP_A;
 732:src/keys.c    **** 	    if (intltr(10)) {
 733:src/keys.c    **** 	      return op;
 734:src/keys.c    **** 	    }
 735:src/keys.c    **** 	    else {
 736:src/keys.c    **** 	      return check_f_key(0, op);
 737:src/keys.c    **** 	    }
 738:src/keys.c    **** 	  case K01:
 739:src/keys.c    **** 	    op = OP_SPEC | OP_B;
 740:src/keys.c    **** 	    if (intltr(11)) {
 741:src/keys.c    **** 	      return op;
 742:src/keys.c    **** 	    }
 743:src/keys.c    **** 	    else {
 744:src/keys.c    **** 	      return check_f_key(1, op);
 745:src/keys.c    **** 	    }
 746:src/keys.c    **** 	  case K03:
 747:src/keys.c    **** 	    op_int = OP_SPEC | OP_C;
 748:src/keys.c    **** 	    if (intltr(12)) {
 749:src/keys.c    **** 	      return op_int;
 750:src/keys.c    **** 	    }
 751:src/keys.c    **** 	    else {
 752:src/keys.c    **** 	      return check_f_key(2, op);
 753:src/keys.c    **** 	    }
 754:src/keys.c    **** 	  case K30:
 755:src/keys.c    **** 	    op_int = OP_SPEC | OP_F;
 756:src/keys.c    **** 	    if (intltr(15)) {
 757:src/keys.c    **** 	      return op_int;
 758:src/keys.c    **** 	    }
 759:src/keys.c    **** 	  default:;
 760:src/keys.c    **** 	  }
 761:src/keys.c    **** 	}
 762:src/keys.c    **** #endif  
 763:src/keys.c    **** 
 764:src/keys.c    **** 	switch (c) {
 765:src/keys.c    **** #ifdef DM42
 766:src/keys.c    **** 	case K00:
 767:src/keys.c    **** 		return check_f_key(0, op);
 768:src/keys.c    **** 	case K01:
 769:src/keys.c    **** 		return check_f_key(1, op);
 770:src/keys.c    **** 	case K03:
ARM GAS  /tmp/ccy15zOt.s 			page 15


 771:src/keys.c    **** 		return check_f_key(2, op);
 772:src/keys.c    **** #else
 773:src/keys.c    **** 	case K00:
 774:src/keys.c    **** 	case K01:
 775:src/keys.c    **** 		if (UState.intm)
 776:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 777:src/keys.c    **** 	case K02:
 778:src/keys.c    **** 	case K03:
 779:src/keys.c    **** 		if (intltr(lc + 10)) {
 780:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 781:src/keys.c    **** 			return op;
 782:src/keys.c    **** 		}
 783:src/keys.c    **** 		return check_f_key(lc, op);
 784:src/keys.c    **** #endif		
 785:src/keys.c    **** 	case K_ARROW:
 786:src/keys.c    **** #ifndef DM42
 787:src/keys.c    **** #ifdef INT_MODE_TEMPVIEW
 788:src/keys.c    **** 		if (intltr(14))
 789:src/keys.c    **** 			return op;
 790:src/keys.c    **** #else
 791:src/keys.c    **** 		if (UState.intm)
 792:src/keys.c    **** 			return op;
 793:src/keys.c    **** #endif
 794:src/keys.c    **** #endif		
 795:src/keys.c    **** 		if (is_bad_cmdline())
 796:src/keys.c    **** 			return STATE_UNFINISHED;
 797:src/keys.c    **** 		process_cmdline_set_lift();
 798:src/keys.c    **** 		State2.arrow = 1;
 799:src/keys.c    **** #ifdef DM42
 800:src/keys.c    **** 		set_menu (9); // arrow menu
 801:src/keys.c    **** 		display_current_menu ();
 802:src/keys.c    **** 		lcd_refresh ();
 803:src/keys.c    **** #else
 804:src/keys.c    **** 		set_shift(SHIFT_G);
 805:src/keys.c    **** #endif
 806:src/keys.c    **** 		break;
 807:src/keys.c    **** 
 808:src/keys.c    **** 	case K_CMPLX:
 809:src/keys.c    **** #ifdef DM42
 810:src/keys.c    **** 	  if (UState.intm)
 811:src/keys.c    **** 	    break; // return nothing
 812:src/keys.c    **** 	  State2.cmplx = 1;
 813:src/keys.c    **** #else
 814:src/keys.c    **** 	  if (UState.intm)
 815:src/keys.c    **** 	    return op;
 816:src/keys.c    **** 	  State2.cmplx = 1;
 817:src/keys.c    **** #endif
 818:src/keys.c    **** 	  break;
 819:src/keys.c    **** 
 820:src/keys.c    **** 	case K24:				// <-
 821:src/keys.c    **** 		if (State2.disp_temp)
 822:src/keys.c    **** 			return STATE_UNFINISHED;
 823:src/keys.c    **** 		if (State2.runmode)
 824:src/keys.c    **** 			return op;
 825:src/keys.c    **** 		return STATE_BACKSPACE;
 826:src/keys.c    **** 
 827:src/keys.c    **** 	case K10:				// STO
ARM GAS  /tmp/ccy15zOt.s 			page 16


 828:src/keys.c    **** 	case K11:				// RCL
 829:src/keys.c    **** 	case K30:				// XEQ
 830:src/keys.c    **** 		init_arg((enum rarg)op);
 831:src/keys.c    **** 		break;
 832:src/keys.c    **** 
 833:src/keys.c    **** 	default:
 834:src/keys.c    **** 		return op;			// Keys handled by table
 835:src/keys.c    **** 	}
 836:src/keys.c    **** 	return STATE_UNFINISHED;
 837:src/keys.c    **** }
 838:src/keys.c    **** 
 839:src/keys.c    **** 
 840:src/keys.c    **** /*
 841:src/keys.c    ****  *  Process a key code after f or g shift
 842:src/keys.c    ****  */
 843:src/keys.c    **** static int process_fg_shifted(const keycode c) {
 844:src/keys.c    **** 
 845:src/keys.c    **** #define NO_INT 0xf000
 846:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 847:src/keys.c    **** 		// Row 1
 848:src/keys.c    **** 		{ 1,                               0                           }, // HYP
 849:src/keys.c    **** 		{ OP_MON | OP_SIN      | NO_INT,   OP_MON | OP_ASIN   | NO_INT },
 850:src/keys.c    **** 		{ OP_MON | OP_COS      | NO_INT,   OP_MON | OP_ACOS   | NO_INT },
 851:src/keys.c    **** 		{ OP_MON | OP_TAN      | NO_INT,   OP_MON | OP_ATAN   | NO_INT },
 852:src/keys.c    **** 		{ OP_NIL | OP_P2R      | NO_INT,   OP_NIL | OP_R2P    | NO_INT },
 853:src/keys.c    **** 		{ OP_NIL | OP_FRACPROPER,	   OP_NIL | OP_FRACIMPROPER    }, // CPX
 854:src/keys.c    **** 		// Row 2
 855:src/keys.c    **** 		{ OP_NIL | OP_HMS,                 OP_NIL | OP_DEG    | NO_INT },
 856:src/keys.c    **** 		{ OP_NIL | OP_FLOAT,               OP_NIL | OP_RAD    | NO_INT },
 857:src/keys.c    **** 		{ OP_NIL | OP_RANDOM,              OP_NIL | OP_GRAD   | NO_INT },
 858:src/keys.c    **** 		// Row 3
 859:src/keys.c    **** 		{ STATE_UNFINISHED,		   OP_NIL | OP_FILL            }, // ENTER
 860:src/keys.c    **** 		{ STATE_WINDOWLEFT,   		   STATE_WINDOWRIGHT   	       },
 861:src/keys.c    **** 		{ RARG(RARG_BASE, 2),		   RARG(RARG_BASE, 8)          },
 862:src/keys.c    **** 		{ RARG(RARG_BASE, 10),		   RARG(RARG_BASE, 16)         },
 863:src/keys.c    **** 		{ OP_NIL | OP_CLPROG,		   OP_NIL | OP_SIGMACLEAR      },
 864:src/keys.c    **** 		// Row 4
 865:src/keys.c    **** 		{ OP_MON | OP_EXP,                 OP_MON | OP_LN              },
 866:src/keys.c    **** 		{ OP_MON | OP_10POWX,		   OP_MON | OP_LOG             },
 867:src/keys.c    **** 		{ OP_MON | OP_2POWX,		   OP_MON | OP_LG2             },
 868:src/keys.c    **** 		{ OP_DYA | OP_POW,                 OP_DYA | OP_LOGXY           },
 869:src/keys.c    **** 		{ OP_MON | OP_RECIP    | NO_INT,   OP_DYA | OP_PARAL	       },
 870:src/keys.c    **** 		// Row 5
 871:src/keys.c    **** 		{ OP_DYA | OP_COMB,                OP_DYA | OP_PERM            },
 872:src/keys.c    **** 		{ OP_MON | OP_cdf_Q    | NO_INT,   OP_MON | OP_qf_Q   | NO_INT },
 873:src/keys.c    **** 		{ OP_NIL | OP_statMEAN | NO_INT,   OP_NIL | OP_statS  | NO_INT },
 874:src/keys.c    **** 		{ OP_MON | OP_yhat     | NO_INT,   OP_NIL | OP_statR  | NO_INT },
 875:src/keys.c    **** 		{ OP_MON | OP_SQRT,		   OP_MON | OP_SQR             },
 876:src/keys.c    **** 		// Row 6
 877:src/keys.c    **** 		{ RARG_SF,                         RARG_CF                     },
 878:src/keys.c    **** 		{ TST_EQ,                          TST_NE                      }, // tests
 879:src/keys.c    **** 		{ RARG_SOLVE           | NO_INT,   RARG_INTG          | NO_INT },
 880:src/keys.c    **** 		{ RARG_PROD            | NO_INT,   RARG_SUM           | NO_INT },
 881:src/keys.c    **** 		{ OP_MON | OP_PERCNT   | NO_INT,   OP_MON | OP_PERCHG | NO_INT },
 882:src/keys.c    **** 		// Row 7
 883:src/keys.c    **** #ifdef INFRARED
 884:src/keys.c    **** 		{ RARG(RARG_PRINT_REG,regX_idx),   STATE_UNFINISHED	       },
ARM GAS  /tmp/ccy15zOt.s 			page 17


 885:src/keys.c    **** #else
 886:src/keys.c    **** 		{ STATE_UNFINISHED,		   STATE_UNFINISHED	       },
 887:src/keys.c    **** #endif
 888:src/keys.c    **** 		{ OP_MON | OP_ABS,		   OP_MON | OP_RND             },
 889:src/keys.c    **** 		{ OP_MON | OP_TRUNC,		   OP_MON | OP_FRAC            },
 890:src/keys.c    **** 		{ RARG_LBL,			   OP_NIL | OP_RTN             },
 891:src/keys.c    **** 		{ RARG_DSE,			   RARG_ISG                    },
 892:src/keys.c    **** #ifdef DM42
 893:src/keys.c    **** 		{ OP_NIL | OP_NOP,		   OP_NIL |OP_NOP              },
 894:src/keys.c    **** #endif
 895:src/keys.c    **** 	};
 896:src/keys.c    **** 
 897:src/keys.c    **** 	static const unsigned short int op_map2[] = {
 898:src/keys.c    **** 		STATE_UNFINISHED,
 899:src/keys.c    **** 		STATE_UNFINISHED,
 900:src/keys.c    **** 		OP_DYA  | OP_POW,
 901:src/keys.c    **** 		OP_MON  | OP_SQRT
 902:src/keys.c    **** 	};
 903:src/keys.c    **** 
 904:src/keys.c    **** 	enum shifts shift = reset_shift();
 905:src/keys.c    **** 	int lc = keycode_to_linear(c);
 906:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 907:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 908:src/keys.c    **** 	if (no_int)
 909:src/keys.c    **** 		op &= ~NO_INT;
 910:src/keys.c    **** 
 911:src/keys.c    **** 	switch (c) {
 912:src/keys.c    **** 	case K00:
 913:src/keys.c    **** 	  if (! UState.intm) {
 914:src/keys.c    **** 	    State2.hyp = 1;
 915:src/keys.c    **** 	    State2.dot = op;
 916:src/keys.c    **** 	    // State2.cmplx = 0;
 917:src/keys.c    **** 	    return STATE_UNFINISHED;
 918:src/keys.c    **** 	  }
 919:src/keys.c    **** 	  // fall through
 920:src/keys.c    **** 	case K01:
 921:src/keys.c    **** #ifdef DM42
 922:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 923:src/keys.c    **** 	    return check_f_key(lc, op_map2[lc]);
 924:src/keys.c    **** 	  }
 925:src/keys.c    **** 	  break;
 926:src/keys.c    **** #endif
 927:src/keys.c    **** #ifndef DM42
 928:src/keys.c    **** 	case K02:
 929:src/keys.c    **** #endif
 930:src/keys.c    **** 	case K03:
 931:src/keys.c    **** #ifdef DM42
 932:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 933:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 934:src/keys.c    **** 		}
 935:src/keys.c    **** 		break;
 936:src/keys.c    **** #else
 937:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 938:src/keys.c    **** 			return check_f_key(2, op_map2[lc]);
 939:src/keys.c    **** 		}
 940:src/keys.c    **** 		break;
 941:src/keys.c    **** #endif
ARM GAS  /tmp/ccy15zOt.s 			page 18


 942:src/keys.c    **** 	case K20:				// Alpha
 943:src/keys.c    **** 		if (shift == SHIFT_F) {
 944:src/keys.c    **** 			if (is_bad_cmdline())
 945:src/keys.c    **** 				return STATE_UNFINISHED;
 946:src/keys.c    **** 			process_cmdline_set_lift();
 947:src/keys.c    **** 			State2.alphas = 1;
 948:src/keys.c    **** 		}
 949:src/keys.c    **** 		break;
 950:src/keys.c    **** #ifdef DM42
 951:src/keys.c    **** 	case K31:
 952:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(13)) {// Log - so D key
 953:src/keys.c    **** 	    return OP_SPEC | OP_D;
 954:src/keys.c    **** 	  }
 955:src/keys.c    **** 	  break;
 956:src/keys.c    **** 	case K30:
 957:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(14)) {// Ln - so E key
 958:src/keys.c    **** 	    return OP_SPEC | OP_E;
 959:src/keys.c    **** 	  }
 960:src/keys.c    **** 	  break;
 961:src/keys.c    **** #endif
 962:src/keys.c    **** 	case K51:
 963:src/keys.c    **** 		if (is_bad_cmdline())
 964:src/keys.c    **** 			return STATE_UNFINISHED;
 965:src/keys.c    **** 		process_cmdline_set_lift();
 966:src/keys.c    **** 		State2.test = op;
 967:src/keys.c    **** 		return STATE_UNFINISHED;
 968:src/keys.c    **** 
 969:src/keys.c    **** 	case K50:
 970:src/keys.c    **** #ifndef REALBUILD
 971:src/keys.c    **** 		if (SHIFT_N != shift_down()) {
 972:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 973:src/keys.c    **** 			return STATE_UNFINISHED;
 974:src/keys.c    **** 		}
 975:src/keys.c    **** #endif
 976:src/keys.c    **** 	case K52:
 977:src/keys.c    **** 	case K53:
 978:src/keys.c    **** 	case K63:
 979:src/keys.c    **** 	case K64:
 980:src/keys.c    **** 		if (op != (OP_NIL | OP_RTN)) {
 981:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 982:src/keys.c    **** 				init_arg((enum rarg) op);
 983:src/keys.c    **** 			}
 984:src/keys.c    **** 			return STATE_UNFINISHED;
 985:src/keys.c    **** 		}
 986:src/keys.c    **** 		break;
 987:src/keys.c    **** 
 988:src/keys.c    **** 	default:
 989:src/keys.c    **** 		break;
 990:src/keys.c    **** 	}
 991:src/keys.c    **** 	if (no_int && UState.intm)
 992:src/keys.c    **** 		return STATE_UNFINISHED;
 993:src/keys.c    **** 
 994:src/keys.c    **** 	return check_confirm(op);
 995:src/keys.c    **** #undef NO_INT
 996:src/keys.c    **** }
 997:src/keys.c    **** 
 998:src/keys.c    **** /*
ARM GAS  /tmp/ccy15zOt.s 			page 19


 999:src/keys.c    ****  *  Process a key code after h shift
1000:src/keys.c    ****  */
1001:src/keys.c    **** static int process_h_shifted(const keycode c) {
1002:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
1003:src/keys.c    **** #define NO_INT   0x4000
1004:src/keys.c    **** 	static const unsigned short int op_map[] = {
1005:src/keys.c    **** 		// Row 1
1006:src/keys.c    **** 		_RARG   | RARG_STD,
1007:src/keys.c    **** 		_RARG   | RARG_FIX,
1008:src/keys.c    **** 		_RARG   | RARG_SCI,
1009:src/keys.c    **** 		_RARG   | RARG_ENG,
1010:src/keys.c    **** 		STATE_UNFINISHED,	// CONV
1011:src/keys.c    **** 		STATE_UNFINISHED,	// MODE
1012:src/keys.c    **** 		// Row 2
1013:src/keys.c    **** 		STATE_UNFINISHED,	// CAT
1014:src/keys.c    **** 		_RARG   | RARG_VIEW,
1015:src/keys.c    **** 		OP_NIL  | OP_RUP,
1016:src/keys.c    **** 		// Row 3
1017:src/keys.c    **** 		_RARG	| RARG_INTNUM,	// CONST, will be emitted in integer mode only
1018:src/keys.c    **** 		_RARG   | RARG_SWAPX,
1019:src/keys.c    **** 		OP_MON  | OP_NOT,
1020:src/keys.c    **** 		CONST(OP_PI) | NO_INT,
1021:src/keys.c    **** 		OP_NIL  | OP_rCLX,
1022:src/keys.c    **** 		// Row 4
1023:src/keys.c    **** 		_RARG   | RARG_GTO,
1024:src/keys.c    **** 		OP_DYA  | OP_LAND,
1025:src/keys.c    **** 		OP_DYA  | OP_LOR,
1026:src/keys.c    **** 		OP_DYA  | OP_LXOR,
1027:src/keys.c    **** 		OP_DYA  | OP_MOD,
1028:src/keys.c    **** 		// Row 5
1029:src/keys.c    **** 		OP_MON  | OP_FACT,
1030:src/keys.c    **** 		STATE_UNFINISHED,	// PROB
1031:src/keys.c    **** 		STATE_UNFINISHED,	// STAT
1032:src/keys.c    **** 		STATE_UNFINISHED,	// CFIT
1033:src/keys.c    **** 		STATE_UNFINISHED,	// MATRIX
1034:src/keys.c    **** 		// Row 6
1035:src/keys.c    **** 		STATE_UNFINISHED,	// STATUS
1036:src/keys.c    **** 		STATE_UNFINISHED,	// TEST
1037:src/keys.c    **** 		STATE_UNFINISHED,	// P.FCN
1038:src/keys.c    **** 		STATE_UNFINISHED,	// X.FCN
1039:src/keys.c    **** 		OP_SPEC | OP_SIGMAMINUS | NO_INT,
1040:src/keys.c    **** 		// Row 7
1041:src/keys.c    **** 		OP_NIL | OP_OFF,
1042:src/keys.c    **** 		_RARG   | RARG_PAUSE,
1043:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1044:src/keys.c    **** 		OP_NIL  | OP_THOUS_OFF,
1045:src/keys.c    **** #else
1046:src/keys.c    ****  		OP_NIL  | OP_RADCOM,
1047:src/keys.c    **** #endif
1048:src/keys.c    **** 		STATE_UNFINISHED,	// P/R
1049:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS | NO_INT,
1050:src/keys.c    **** #ifdef DM42
1051:src/keys.c    **** 		OP_NIL | OP_NOP,       // shifts etc.
1052:src/keys.c    **** #endif
1053:src/keys.c    **** 	};
1054:src/keys.c    **** 
1055:src/keys.c    **** 	int lc = keycode_to_linear(c);
ARM GAS  /tmp/ccy15zOt.s 			page 20


1056:src/keys.c    **** 	int op = op_map[lc];
1057:src/keys.c    **** 	reset_shift();
1058:src/keys.c    **** 
1059:src/keys.c    **** 	// The switch handles all the special cases
1060:src/keys.c    **** 	switch (c) {
1061:src/keys.c    **** 	case K62:
1062:src/keys.c    **** 		if (UState.intm)
1063:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
1064:src/keys.c    **** 		else
1065:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1066:src/keys.c    **** 			if (UState.nothousands) op = OP_NIL | OP_THOUS_ON;
1067:src/keys.c    **** #else
1068:src/keys.c    **** 			if (UState.fraccomma) op = OP_NIL | OP_RADDOT;
1069:src/keys.c    **** #endif
1070:src/keys.c    **** 		break;
1071:src/keys.c    **** 
1072:src/keys.c    **** 	case K63:					// Program<->Run mode
1073:src/keys.c    **** 		if (is_bad_cmdline())
1074:src/keys.c    **** 			return STATE_UNFINISHED;
1075:src/keys.c    **** 		State2.runmode = 1 - State2.runmode;
1076:src/keys.c    **** 		process_cmdline_set_lift();
1077:src/keys.c    **** 		update_program_bounds(1);
1078:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
1079:src/keys.c    **** 			set_pc(0);
1080:src/keys.c    **** 		break;
1081:src/keys.c    **** 
1082:src/keys.c    **** 	default:
1083:src/keys.c    **** 		break;
1084:src/keys.c    **** 	}
1085:src/keys.c    **** 
1086:src/keys.c    **** 	if (op != STATE_UNFINISHED) {
1087:src/keys.c    **** 		if (op & _RARG) {
1088:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
1089:src/keys.c    **** 			op = STATE_UNFINISHED;
1090:src/keys.c    **** 		}
1091:src/keys.c    **** 	}
1092:src/keys.c    **** 	return UState.intm && (op & NO_INT) ? STATE_UNFINISHED : op & ~NO_INT;
1093:src/keys.c    **** #undef _RARG
1094:src/keys.c    **** #undef NO_INT
1095:src/keys.c    **** }
1096:src/keys.c    **** 
1097:src/keys.c    **** /*
1098:src/keys.c    ****  *  Process a key code after CPX
1099:src/keys.c    ****  */
1100:src/keys.c    **** static int process_cmplx(const keycode c) {
1101:src/keys.c    **** #define _RARG   0xFF00
1102:src/keys.c    **** #define CSWAPXZ RARG(RARG_CSWAPX, regZ_idx)
1103:src/keys.c    **** #define CNUM(n) RARG(RARG_INTNUM_CMPLX, n)
1104:src/keys.c    **** 
1105:src/keys.c    **** 	static const unsigned short int op_map[][4] = {
1106:src/keys.c    **** 		// Row 1
1107:src/keys.c    **** 		{ 1,			1,                   0,                   0		      }, // HYP
1108:src/keys.c    **** 		{ OP_CMON | OP_RECIP,	OP_CMON | OP_SIN,    OP_CMON | OP_ASIN,   STATE_UNFINISHED    },
1109:src/keys.c    **** 		{ OP_CDYA | OP_POW,	OP_CMON | OP_COS,    OP_CMON | OP_ACOS,   STATE_UNFINISHED    },
1110:src/keys.c    **** 		{ OP_CMON | OP_SQRT,	OP_CMON | OP_TAN,    OP_CMON | OP_ATAN,   STATE_UNFINISHED    },
1111:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_NIL | OP_P2R,     OP_NIL | OP_R2P,     STATE_UNFINISHED    },
1112:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    }, // CPX
ARM GAS  /tmp/ccy15zOt.s 			page 21


1113:src/keys.c    **** 		// Row 2
1114:src/keys.c    **** 		{ _RARG | RARG_CSTO,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1115:src/keys.c    **** 		{ _RARG | RARG_CRCL,	STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CVIEW  },
1116:src/keys.c    **** 		{ OP_NIL | OP_CRDOWN,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_CRUP    }, // R^
1117:src/keys.c    **** 		// Row 3
1118:src/keys.c    **** 		{ OP_NIL | OP_CENTER,	STATE_UNFINISHED,    OP_NIL | OP_CFILL,   OP_NIL | OP_CFILL   }, // ENTER
1119:src/keys.c    **** 		{ CSWAPXZ,		STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CSWAPX },
1120:src/keys.c    **** 		{ OP_CMON | OP_CCHS,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_CMON | OP_CCONJ  },
1121:src/keys.c    **** 		{ CONST_CMPLX(OP_PI),	STATE_UNFINISHED,    STATE_UNFINISHED,    CONST_CMPLX(OP_PI)  },
1122:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1123:src/keys.c    **** 		// Row 4
1124:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CMON | OP_EXP,    OP_CMON | OP_LN,     STATE_UNFINISHED    },
1125:src/keys.c    **** 		{ CNUM(7),		OP_CMON | OP_10POWX, OP_CMON | OP_LOG,    STATE_UNFINISHED    },
1126:src/keys.c    **** 		{ CNUM(8),		OP_CMON | OP_2POWX,  OP_CMON | OP_LG2,    STATE_UNFINISHED    },
1127:src/keys.c    **** 		{ CNUM(9),		OP_CDYA | OP_POW,    OP_CDYA | OP_LOGXY,  STATE_UNFINISHED    },
1128:src/keys.c    **** 		{ OP_CDYA | OP_DIV,	OP_CMON | OP_RECIP,  OP_CDYA | OP_PARAL,  STATE_UNFINISHED    },
1129:src/keys.c    **** 		// Row 5
1130:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CDYA | OP_COMB,   OP_CDYA | OP_PERM,   OP_CMON | OP_FACT   },
1131:src/keys.c    **** 		{ CNUM(4),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1132:src/keys.c    **** 		{ CNUM(5),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1133:src/keys.c    **** 		{ CNUM(6),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1134:src/keys.c    **** 		{ OP_CDYA | OP_MUL,	OP_CMON | OP_SQRT,   OP_CMON | OP_SQR,    OP_CMON | OP_SQR    },
1135:src/keys.c    **** 		// Row 6
1136:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1137:src/keys.c    **** 		{ CNUM(1),		TST_EQ,              TST_NE,              STATE_UNFINISHED    }, // tests
1138:src/keys.c    **** 		{ CNUM(2),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1139:src/keys.c    **** 		{ CNUM(3),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1140:src/keys.c    **** 		{ OP_CDYA | OP_SUB,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1141:src/keys.c    **** 		// Row 7
1142:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_OFF     },
1143:src/keys.c    **** 		{ CNUM(0),		OP_CMON | OP_ABS,    OP_CMON | OP_RND,    STATE_UNFINISHED    },
1144:src/keys.c    **** 		{ OP_NIL | OP_cmplxI,	OP_CMON | OP_TRUNC,  OP_CMON | OP_FRAC,   STATE_UNFINISHED    },
1145:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1146:src/keys.c    **** 		{ OP_NIL | OP_STOPWATCH, STATE_UNFINISHED,   STATE_UNFINISHED,    STATE_UNFINISHED    },
1147:src/keys.c    **** #else
1148:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1149:src/keys.c    **** #endif
1150:src/keys.c    **** 		{ OP_CDYA | OP_ADD,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1151:src/keys.c    **** #ifdef DM42
1152:src/keys.c    **** 		{ OP_NIL | OP_NOP,	OP_NIL | OP_NOP,    OP_NIL | OP_NOP,    OP_NIL | OP_NOP    }
1153:src/keys.c    **** #endif
1154:src/keys.c    **** 	};
1155:src/keys.c    **** 
1156:src/keys.c    **** 	enum shifts shift = reset_shift();
1157:src/keys.c    **** 	int lc = keycode_to_linear(c);
1158:src/keys.c    **** 	int op = op_map[lc][shift];
1159:src/keys.c    **** 	State2.cmplx = 0;
1160:src/keys.c    **** 
1161:src/keys.c    **** 	if ((op & _RARG) == _RARG) {
1162:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
1163:src/keys.c    **** 		return STATE_UNFINISHED;
1164:src/keys.c    **** 	}
1165:src/keys.c    **** 	if (c == K00) {
1166:src/keys.c    **** 		// HYP
1167:src/keys.c    **** 		process_cmdline_set_lift();
1168:src/keys.c    **** 		State2.hyp = 1;
1169:src/keys.c    **** 		State2.dot = op;
ARM GAS  /tmp/ccy15zOt.s 			page 22


1170:src/keys.c    **** 		State2.cmplx = 1;
1171:src/keys.c    **** 		return STATE_UNFINISHED;
1172:src/keys.c    **** 	}
1173:src/keys.c    **** 
1174:src/keys.c    **** 	if (shift != SHIFT_N) {
1175:src/keys.c    **** 		switch (c) {
1176:src/keys.c    **** 		case K_CMPLX:
1177:src/keys.c    **** 			set_shift(shift);
1178:src/keys.c    **** 			break;
1179:src/keys.c    **** 
1180:src/keys.c    **** 		case K51:
1181:src/keys.c    **** 			if (op != STATE_UNFINISHED) {
1182:src/keys.c    **** 				if (is_bad_cmdline())
1183:src/keys.c    **** 					return STATE_UNFINISHED;
1184:src/keys.c    **** 				process_cmdline_set_lift();
1185:src/keys.c    **** 				State2.cmplx = 1;
1186:src/keys.c    **** 				State2.test = op;
1187:src/keys.c    **** 			}
1188:src/keys.c    **** 			return STATE_UNFINISHED;
1189:src/keys.c    **** 
1190:src/keys.c    **** 		case K60:
1191:src/keys.c    **** 			init_state();
1192:src/keys.c    **** 			break;
1193:src/keys.c    **** 
1194:src/keys.c    **** 		default:
1195:src/keys.c    **** 			break;
1196:src/keys.c    **** 		}
1197:src/keys.c    **** 	}
1198:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1199:src/keys.c    **** 	return check_confirm(op);
1200:src/keys.c    **** #else
1201:src/keys.c    **** 	return op;
1202:src/keys.c    **** #endif
1203:src/keys.c    **** 
1204:src/keys.c    **** #undef _RARG
1205:src/keys.c    **** #undef CSWAPXZ
1206:src/keys.c    **** #undef CNUM
1207:src/keys.c    **** }
1208:src/keys.c    **** 
1209:src/keys.c    **** 
1210:src/keys.c    **** 
1211:src/keys.c    **** /*
1212:src/keys.c    ****  * Fairly simple routine for dealing with the HYP prefix.
1213:src/keys.c    ****  * This setting can only be followed by 4, 5, or 6 to specify
1214:src/keys.c    ****  * the function.  The inverse routines use the code too, the State2.dot
1215:src/keys.c    ****  * is 1 for normal and 0 for inverse hyperbolic.  We also have to
1216:src/keys.c    ****  * deal with the complex versions and the handling of that key and
1217:src/keys.c    ****  * the ON key are dealt with by our caller.
1218:src/keys.c    ****  */
1219:src/keys.c    **** static int process_hyp(const keycode c) {
1220:src/keys.c    **** 	static const unsigned char op_map[][2] = {
1221:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
1222:src/keys.c    **** 		{ OP_ACOSH, OP_COSH },
1223:src/keys.c    **** 		{ OP_ATANH, OP_TANH }
1224:src/keys.c    **** 	};
1225:src/keys.c    **** 	int cmplx = State2.cmplx;
1226:src/keys.c    **** 	int f = State2.dot;
ARM GAS  /tmp/ccy15zOt.s 			page 23


1227:src/keys.c    **** 
1228:src/keys.c    **** 	State2.hyp = 0;
1229:src/keys.c    **** 	State2.cmplx = 0;
1230:src/keys.c    **** 	State2.dot = 0;
1231:src/keys.c    **** #ifdef DM42
1232:src/keys.c    **** 	reset_shift();
1233:src/keys.c    **** #endif
1234:src/keys.c    **** 	switch ((int)c) {
1235:src/keys.c    **** 
1236:src/keys.c    **** 	case K01:
1237:src/keys.c    **** 	case K02:
1238:src/keys.c    **** 	case K03:
1239:src/keys.c    **** 		return (cmplx ? OP_CMON : OP_MON) | op_map[c - K01][f];
1240:src/keys.c    **** 
1241:src/keys.c    **** 	case K_CMPLX:
1242:src/keys.c    **** 		cmplx = ! cmplx;
1243:src/keys.c    **** 		goto stay;
1244:src/keys.c    **** 
1245:src/keys.c    **** 	case K_F: 
1246:src/keys.c    **** 	case K_G:
1247:src/keys.c    **** 		f = (c == K_F);
1248:src/keys.c    **** 		// fall trough
1249:src/keys.c    **** 	stay:
1250:src/keys.c    **** 		// process_cmdline_set_lift();
1251:src/keys.c    **** 		State2.hyp = 1;
1252:src/keys.c    **** 		State2.cmplx = cmplx;
1253:src/keys.c    **** 		State2.dot = f;
1254:src/keys.c    **** 		break;
1255:src/keys.c    **** 
1256:src/keys.c    **** 	default:
1257:src/keys.c    **** 		break;
1258:src/keys.c    **** 	}
1259:src/keys.c    **** 	return STATE_UNFINISHED;
1260:src/keys.c    **** }
1261:src/keys.c    **** 
1262:src/keys.c    **** 
1263:src/keys.c    **** /*
1264:src/keys.c    ****  *  Process a key code after ->
1265:src/keys.c    ****  */
1266:src/keys.c    **** static int process_arrow(const keycode c) {
1267:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
1268:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
1269:src/keys.c    **** 		{ OP_MON | OP_2RAD,  OP_MON | OP_HMS2 },
1270:src/keys.c    **** 		{ OP_MON | OP_2GRAD, STATE_UNFINISHED }
1271:src/keys.c    **** 	};
1272:src/keys.c    **** 	static const enum single_disp disp[][2] = {
1273:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
1274:src/keys.c    **** 		{ SDISP_HEX, SDISP_DEC }
1275:src/keys.c    **** 	};
1276:src/keys.c    **** 	const int shift = reset_shift();
1277:src/keys.c    **** 	const int f = (shift == SHIFT_F);
1278:src/keys.c    **** 
1279:src/keys.c    **** 	State2.arrow = 0;
1280:src/keys.c    **** #ifdef DM42
1281:src/keys.c    **** 	set_last_menu ();
1282:src/keys.c    **** 	display_current_menu ();
1283:src/keys.c    **** #endif
ARM GAS  /tmp/ccy15zOt.s 			page 24


1284:src/keys.c    **** 	if (shift == SHIFT_N) return STATE_UNFINISHED;
1285:src/keys.c    **** 	
1286:src/keys.c    **** 	if (c >= K10 && c <= K12)
1287:src/keys.c    **** 		return op_map[c - K10][f];
1288:src/keys.c    **** 
1289:src/keys.c    **** 	if (c == K22 || c == K23)
1290:src/keys.c    **** 		set_smode(disp[c - K22][f]);
1291:src/keys.c    **** 
1292:src/keys.c    **** 	return STATE_UNFINISHED;
1293:src/keys.c    **** }
1294:src/keys.c    **** 
1295:src/keys.c    **** 
1296:src/keys.c    **** /* Process a GTO . sequence
1297:src/keys.c    ****  */
1298:src/keys.c    **** static int gtodot_digit(const int n) {
  30              		.loc 1 1298 38 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
1299:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  34              		.loc 1 1299 2 view .LVU1
1300:src/keys.c    **** 	const int lib = nLIB(state_pc());
  35              		.loc 1 1300 18 is_stmt 0 view .LVU2
  36 0000 144B     		ldr	r3, .L5
  37 0002 1A68     		ldr	r2, [r3]
1298:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  38              		.loc 1 1298 38 view .LVU3
  39 0004 70B5     		push	{r4, r5, r6, lr}
  40              		.cfi_def_cfa_offset 16
  41              		.cfi_offset 4, -16
  42              		.cfi_offset 5, -12
  43              		.cfi_offset 6, -8
  44              		.cfi_offset 14, -4
1299:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  45              		.loc 1 1299 24 view .LVU4
  46 0006 144E     		ldr	r6, .L5+4
  47              		.loc 1 1300 18 view .LVU5
  48 0008 B2F8E057 		ldrh	r5, [r2, #2016]
1299:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  49              		.loc 1 1299 24 view .LVU6
  50 000c 3389     		ldrh	r3, [r6, #8]
  51              		.loc 1 1300 18 view .LVU7
  52 000e AD0B     		lsrs	r5, r5, #14
1299:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  53              		.loc 1 1299 32 view .LVU8
  54 0010 03EB8303 		add	r3, r3, r3, lsl #2
1298:src/keys.c    **** 	const int val = State2.digval * 10 + n;
  55              		.loc 1 1298 38 view .LVU9
  56 0014 0446     		mov	r4, r0
1301:src/keys.c    **** 
1302:src/keys.c    **** 	if (val > sizeLIB(lib) / 10)
  57              		.loc 1 1302 12 view .LVU10
  58 0016 2846     		mov	r0, r5
  59              	.LVL1:
1299:src/keys.c    **** 	const int lib = nLIB(state_pc());
  60              		.loc 1 1299 12 view .LVU11
  61 0018 04EB4304 		add	r4, r4, r3, lsl #1
ARM GAS  /tmp/ccy15zOt.s 			page 25


  62              	.LVL2:
1300:src/keys.c    **** 
  63              		.loc 1 1300 2 is_stmt 1 view .LVU12
  64              		.loc 1 1302 2 view .LVU13
  65              		.loc 1 1302 12 is_stmt 0 view .LVU14
  66 001c FFF7FEFF 		bl	sizeLIB
  67              	.LVL3:
  68              		.loc 1 1302 25 view .LVU15
  69 0020 0E4A     		ldr	r2, .L5+8
  70 0022 82FB0032 		smull	r3, r2, r2, r0
  71 0026 C317     		asrs	r3, r0, #31
  72 0028 C3EBA203 		rsb	r3, r3, r2, asr #2
  73              		.loc 1 1302 5 view .LVU16
  74 002c A342     		cmp	r3, r4
  75 002e 0FDB     		blt	.L1
1303:src/keys.c    **** 		return val;
1304:src/keys.c    **** 	if (++State2.numdigit == 3 + (lib & 1))
  76              		.loc 1 1304 2 is_stmt 1 view .LVU17
  77              		.loc 1 1304 6 is_stmt 0 view .LVU18
  78 0030 F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
  79              		.loc 1 1304 29 view .LVU19
  80 0032 15F0010F 		tst	r5, #1
  81              		.loc 1 1304 6 view .LVU20
  82 0036 03F10103 		add	r3, r3, #1
  83 003a DBB2     		uxtb	r3, r3
  84              		.loc 1 1304 29 view .LVU21
  85 003c 0CBF     		ite	eq
  86 003e 0322     		moveq	r2, #3
  87 0040 0422     		movne	r2, #4
  88              		.loc 1 1304 5 view .LVU22
  89 0042 9342     		cmp	r3, r2
1305:src/keys.c    **** 		return val;
1306:src/keys.c    **** 	State2.digval = val;
  90              		.loc 1 1306 2 is_stmt 1 view .LVU23
  91              		.loc 1 1306 16 is_stmt 0 view .LVU24
  92 0044 18BF     		it	ne
  93 0046 3481     		strhne	r4, [r6, #8]	@ movhi
1307:src/keys.c    **** 	return -1;
  94              		.loc 1 1307 2 is_stmt 1 view .LVU25
1304:src/keys.c    **** 		return val;
  95              		.loc 1 1304 5 is_stmt 0 view .LVU26
  96 0048 F372     		strb	r3, [r6, #11]
  97              		.loc 1 1307 9 view .LVU27
  98 004a 18BF     		it	ne
  99 004c 4FF0FF34 		movne	r4, #-1
 100              	.LVL4:
 101              	.L1:
1308:src/keys.c    **** }
 102              		.loc 1 1308 1 view .LVU28
 103 0050 2046     		mov	r0, r4
 104 0052 70BD     		pop	{r4, r5, r6, pc}
 105              	.LVL5:
 106              	.L6:
 107              		.loc 1 1308 1 view .LVU29
 108              		.align	2
 109              	.L5:
 110 0054 00000000 		.word	main_ram
ARM GAS  /tmp/ccy15zOt.s 			page 26


 111 0058 00000000 		.word	StateWhileOn
 112 005c 67666666 		.word	1717986919
 113              		.cfi_endproc
 114              	.LFE25:
 116              		.section	.text.check_f_key,"ax",%progbits
 117              		.align	1
 118              		.p2align 2,,3
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu fpv4-sp-d16
 124              	check_f_key:
 125              	.LVL6:
 126              	.LFB17:
 650:src/keys.c    **** 	const int code = 100 + n;
 127              		.loc 1 650 47 is_stmt 1 view -0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 651:src/keys.c    **** 	unsigned int pc = state_pc();
 131              		.loc 1 651 2 view .LVU31
 650:src/keys.c    **** 	const int code = 100 + n;
 132              		.loc 1 650 47 is_stmt 0 view .LVU32
 133 0000 38B5     		push	{r3, r4, r5, lr}
 134              		.cfi_def_cfa_offset 16
 135              		.cfi_offset 3, -16
 136              		.cfi_offset 4, -12
 137              		.cfi_offset 5, -8
 138              		.cfi_offset 14, -4
 654:src/keys.c    **** 		if (isXROM(pc))
 139              		.loc 1 654 6 view .LVU33
 140 0002 0D4B     		ldr	r3, .L17
 141 0004 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 142              	.LVL7:
 652:src/keys.c    **** 
 143              		.loc 1 652 2 is_stmt 1 view .LVU34
 654:src/keys.c    **** 		if (isXROM(pc))
 144              		.loc 1 654 2 view .LVU35
 654:src/keys.c    **** 		if (isXROM(pc))
 145              		.loc 1 654 5 is_stmt 0 view .LVU36
 146 0006 5B06     		lsls	r3, r3, #25
 650:src/keys.c    **** 	const int code = 100 + n;
 147              		.loc 1 650 47 view .LVU37
 148 0008 0C46     		mov	r4, r1
 654:src/keys.c    **** 		if (isXROM(pc))
 149              		.loc 1 654 5 view .LVU38
 150 000a 0FD5     		bpl	.L11
 652:src/keys.c    **** 
 151              		.loc 1 652 20 view .LVU39
 152 000c 0B4B     		ldr	r3, .L17+4
 153              	.LVL8:
 652:src/keys.c    **** 
 154              		.loc 1 652 20 view .LVU40
 155 000e 1B68     		ldr	r3, [r3]
 156              	.LVL9:
 652:src/keys.c    **** 
 157              		.loc 1 652 15 view .LVU41
ARM GAS  /tmp/ccy15zOt.s 			page 27


 158 0010 B3F8E037 		ldrh	r3, [r3, #2016]
 159              	.LVL10:
 655:src/keys.c    **** 			pc = 1;
 160              		.loc 1 655 3 is_stmt 1 view .LVU42
 655:src/keys.c    **** 			pc = 1;
 161              		.loc 1 655 7 is_stmt 0 view .LVU43
 162 0014 9A0B     		lsrs	r2, r3, #14
 656:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
 163              		.loc 1 656 7 view .LVU44
 164 0016 032A     		cmp	r2, #3
 165              	.LVL11:
 657:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 166              		.loc 1 657 3 is_stmt 1 view .LVU45
 651:src/keys.c    **** 	unsigned int pc = state_pc();
 167              		.loc 1 651 12 is_stmt 0 view .LVU46
 168 0018 00F16405 		add	r5, r0, #100
 169              	.LVL12:
 657:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 170              		.loc 1 657 7 view .LVU47
 171 001c 2946     		mov	r1, r5
 172              	.LVL13:
 657:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 173              		.loc 1 657 7 view .LVU48
 174 001e 14BF     		ite	ne
 175 0020 1846     		movne	r0, r3
 176              	.LVL14:
 657:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 177              		.loc 1 657 7 view .LVU49
 178 0022 0120     		moveq	r0, #1
 179 0024 0222     		movs	r2, #2
 180 0026 FFF7FEFF 		bl	find_label_from
 181              	.LVL15:
 657:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 182              		.loc 1 657 6 view .LVU50
 183 002a 08B9     		cbnz	r0, .L16
 184              	.LVL16:
 185              	.L11:
 660:src/keys.c    **** }
 186              		.loc 1 660 9 view .LVU51
 187 002c 2046     		mov	r0, r4
 661:src/keys.c    **** 
 188              		.loc 1 661 1 view .LVU52
 189 002e 38BD     		pop	{r3, r4, r5, pc}
 190              	.LVL17:
 191              	.L16:
 658:src/keys.c    **** 	}
 192              		.loc 1 658 4 is_stmt 1 view .LVU53
 658:src/keys.c    **** 	}
 193              		.loc 1 658 11 is_stmt 0 view .LVU54
 194 0030 45F4C840 		orr	r0, r5, #25600
 661:src/keys.c    **** 
 195              		.loc 1 661 1 view .LVU55
 196 0034 38BD     		pop	{r3, r4, r5, pc}
 197              	.LVL18:
 198              	.L18:
 661:src/keys.c    **** 
 199              		.loc 1 661 1 view .LVU56
ARM GAS  /tmp/ccy15zOt.s 			page 28


 200 0036 00BF     		.align	2
 201              	.L17:
 202 0038 00000000 		.word	StateWhileOn
 203 003c 00000000 		.word	main_ram
 204              		.cfi_endproc
 205              	.LFE17:
 207              		.section	.text.is_label_or_end_at,"ax",%progbits
 208              		.align	1
 209              		.p2align 2,,3
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 213              		.fpu fpv4-sp-d16
 215              	is_label_or_end_at:
 216              	.LVL19:
 217              	.LFB49:
1309:src/keys.c    **** 
1310:src/keys.c    **** static int gtodot_fkey(int n) {
1311:src/keys.c    **** 	const int code = 100 + n;
1312:src/keys.c    **** 	unsigned int pc = state_pc();
1313:src/keys.c    **** 
1314:src/keys.c    **** 	if(isXROM(pc))
1315:src/keys.c    **** 		pc = 1;
1316:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
1317:src/keys.c    **** 	if (pc > 0)
1318:src/keys.c    **** 		return pc;
1319:src/keys.c    **** 	return state_pc();
1320:src/keys.c    **** }
1321:src/keys.c    **** 
1322:src/keys.c    **** static int process_gtodot(const keycode c) {
1323:src/keys.c    **** 	int pc = -1;
1324:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
1325:src/keys.c    **** 
1326:src/keys.c    **** 	if (rawpc <= 9) {
1327:src/keys.c    **** 		// Digit 0 - 9
1328:src/keys.c    **** 		pc = gtodot_digit(rawpc);
1329:src/keys.c    **** 	}
1330:src/keys.c    **** #ifdef DM42
1331:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regX_idx) rawpc = gtodot_digit(1); 
1332:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
1333:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
1334:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
1335:src/keys.c    **** #endif
1336:src/keys.c    **** 	else if (c >= K00 && c <= K03) {
1337:src/keys.c    **** 		// A - D
1338:src/keys.c    **** 		rawpc = gtodot_fkey(c - K00);
1339:src/keys.c    **** 		goto fin;
1340:src/keys.c    **** 	}
1341:src/keys.c    **** 	else if (c == K62) {
1342:src/keys.c    **** 		// .
1343:src/keys.c    **** 		rawpc = ProgSize;
1344:src/keys.c    **** 		goto fin;
1345:src/keys.c    **** 	}
1346:src/keys.c    **** 	else if (c == K20) {
1347:src/keys.c    **** 		// ENTER - short circuit processing
1348:src/keys.c    **** 		pc = State2.digval;
1349:src/keys.c    **** 	}
ARM GAS  /tmp/ccy15zOt.s 			page 29


1350:src/keys.c    **** 	else if (c == K24) {
1351:src/keys.c    **** 		// backspace
1352:src/keys.c    **** 		if (State2.numdigit == 0) {
1353:src/keys.c    **** 			goto fin2;
1354:src/keys.c    **** 		} else {
1355:src/keys.c    **** 			State2.numdigit--;
1356:src/keys.c    **** 			State2.digval /= 10;
1357:src/keys.c    **** 		}
1358:src/keys.c    **** 	}
1359:src/keys.c    **** 	else if (c == K_UP) {
1360:src/keys.c    **** 		// up
1361:src/keys.c    **** 		rawpc = state_pc();
1362:src/keys.c    **** 		if (rawpc == 1)
1363:src/keys.c    **** 			rawpc = 0;
1364:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
1365:src/keys.c    **** 		update_program_bounds(1);
1366:src/keys.c    **** 		rawpc = ProgBegin;
1367:src/keys.c    **** 		goto fin;
1368:src/keys.c    **** 	}
1369:src/keys.c    **** 	else if (c == K_DOWN) {
1370:src/keys.c    **** 		// down
1371:src/keys.c    **** 		update_program_bounds(1);
1372:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
1373:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
1374:src/keys.c    **** 			rawpc = 1;
1375:src/keys.c    **** 		goto fin;
1376:src/keys.c    **** 	}
1377:src/keys.c    **** 	if (pc >= 0) {
1378:src/keys.c    **** 		rawpc = find_user_pc(pc);
1379:src/keys.c    **** fin:		set_pc(rawpc);
1380:src/keys.c    **** fin2:		State2.gtodot = 0;
1381:src/keys.c    **** 		State2.digval = 0;
1382:src/keys.c    **** 		State2.numdigit = 0;
1383:src/keys.c    **** 	}
1384:src/keys.c    **** 	return STATE_UNFINISHED;
1385:src/keys.c    **** }
1386:src/keys.c    **** 
1387:src/keys.c    **** 
1388:src/keys.c    **** /* Process a keystroke in alpha mode
1389:src/keys.c    ****  */
1390:src/keys.c    **** static int process_alpha(const keycode c) {
1391:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
1392:src/keys.c    ****         int op = STATE_UNFINISHED;
1393:src/keys.c    **** 	const enum shifts shift = reset_shift();
1394:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
1395:src/keys.c    **** 	State2.alpha_pos = 0;
1396:src/keys.c    **** 
1397:src/keys.c    **** 	switch (c) {
1398:src/keys.c    **** 	case K10:	// STO
1399:src/keys.c    **** 		if (shift == SHIFT_F) {
1400:src/keys.c    **** 			init_arg(RARG_ASTO);
1401:src/keys.c    **** 			return STATE_UNFINISHED;
1402:src/keys.c    **** 		}
1403:src/keys.c    **** 		break;
1404:src/keys.c    **** 
1405:src/keys.c    **** 	case K11:	// RCL - maybe view
1406:src/keys.c    **** 		if (shift == SHIFT_F) {
ARM GAS  /tmp/ccy15zOt.s 			page 30


1407:src/keys.c    **** 			init_arg(RARG_ARCL);
1408:src/keys.c    **** 			return STATE_UNFINISHED;
1409:src/keys.c    **** 		} else if (shift == SHIFT_H) {
1410:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
1411:src/keys.c    **** 			return STATE_UNFINISHED;
1412:src/keys.c    **** 		}
1413:src/keys.c    **** 		break;
1414:src/keys.c    **** 
1415:src/keys.c    **** 	case K20:	// Enter - maybe exit alpha mode
1416:src/keys.c    **** 		if (shift == SHIFT_G || shift == SHIFT_H)
1417:src/keys.c    **** 			break;
1418:src/keys.c    **** 		if (shift == SHIFT_F && ! State2.runmode) {
1419:src/keys.c    **** 			State2.multi = 1;
1420:src/keys.c    **** 			State2.numdigit = 0;
1421:src/keys.c    **** 			CmdBase = DBL_ALPHA;
1422:src/keys.c    **** 			return STATE_UNFINISHED;
1423:src/keys.c    **** 		}
1424:src/keys.c    **** 		State2.alphas = 0;
1425:src/keys.c    **** 		State2.alphashift = 0;
1426:src/keys.c    **** 		return op;
1427:src/keys.c    **** 
1428:src/keys.c    **** 	case K24:	// Clx - backspace, clear Alpha
1429:src/keys.c    **** 		if (shift == SHIFT_N)
1430:src/keys.c    **** 			return STATE_BACKSPACE;
1431:src/keys.c    **** 		if (shift == SHIFT_H)
1432:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
1433:src/keys.c    **** 		break;
1434:src/keys.c    **** 
1435:src/keys.c    **** 	case K_UP:
1436:src/keys.c    **** 	  if (shift == SHIFT_N) {
1437:src/keys.c    **** 	    if ( State2.runmode ) {
1438:src/keys.c    **** 	      // Alpha scroll left
1439:src/keys.c    **** #ifdef DM42
1440:src/keys.c    **** 	      /* 
1441:src/keys.c    **** 	       * The numbers 20 and 12 below should match the same 
1442:src/keys.c    **** 	       * numbers in display.c, lines 2414 and 2416.
1443:src/keys.c    **** 	       */
1444:src/keys.c    **** #ifdef BIGGER_DISPLAY
1445:src/keys.c    **** 	      if ((alpha_pos == 0) || (alen()-6*alpha_pos >= 20)) {
1446:src/keys.c    **** 		alpha_pos += 1;
1447:src/keys.c    **** 	      }
1448:src/keys.c    **** #else
1449:src/keys.c    **** 	      if ((alpha_pos == 0) || (alen()-6*alpha_pos >= 12)) {
1450:src/keys.c    **** 		alpha_pos += 1;
1451:src/keys.c    **** 	      }
1452:src/keys.c    **** #endif
1453:src/keys.c    **** 	      State2.alpha_pos = alpha_pos;
1454:src/keys.c    **** #else
1455:src/keys.c    **** 	      int n = alpha_pos + 1;
1456:src/keys.c    **** 	      State2.alpha_pos = ( n < ( alen() + 5 ) / 6 ) ? n : alpha_pos;
1457:src/keys.c    **** #endif
1458:src/keys.c    **** 	      return STATE_UNFINISHED;
1459:src/keys.c    **** 	    }
1460:src/keys.c    **** 	    return STATE_BST;
1461:src/keys.c    **** 	  }
1462:src/keys.c    **** 	  break;
1463:src/keys.c    **** 
ARM GAS  /tmp/ccy15zOt.s 			page 31


1464:src/keys.c    **** 	case K_DOWN:
1465:src/keys.c    **** 	  if (shift == SHIFT_N) {
1466:src/keys.c    **** 	    if ( State2.runmode ) {
1467:src/keys.c    **** 	      // Alpha scroll right
1468:src/keys.c    **** 	      if (alpha_pos > 0)
1469:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
1470:src/keys.c    **** 	      return STATE_UNFINISHED;
1471:src/keys.c    **** 	    }
1472:src/keys.c    **** 	    return STATE_SST;
1473:src/keys.c    **** 	  }
1474:src/keys.c    **** 	  break;
1475:src/keys.c    **** 
1476:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
1477:src/keys.c    **** 		if (shift == SHIFT_F)
1478:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
1479:src/keys.c    **** 		else if (shift == SHIFT_H)
1480:src/keys.c    **** 			return OP_NIL | OP_OFF;
1481:src/keys.c    **** 		else if (shift == SHIFT_N)
1482:src/keys.c    **** 			init_state();
1483:src/keys.c    **** 		return STATE_UNFINISHED;
1484:src/keys.c    **** 
1485:src/keys.c    **** 	case K63:
1486:src/keys.c    **** 		if (shift == SHIFT_F)
1487:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
1488:src/keys.c    **** 		break;
1489:src/keys.c    **** 
1490:src/keys.c    **** 	default:
1491:src/keys.c    **** 		break;
1492:src/keys.c    **** 	}
1493:src/keys.c    **** 
1494:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
1495:src/keys.c    **** 	if (ch == 0)
1496:src/keys.c    **** 		return STATE_UNFINISHED;
1497:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
1498:src/keys.c    **** }
1499:src/keys.c    **** 
1500:src/keys.c    **** /*
1501:src/keys.c    ****  *  Code to handle all commands with arguments
1502:src/keys.c    ****  */
1503:src/keys.c    **** static void reset_arg(void) {
1504:src/keys.c    **** 	init_arg((enum rarg) 0);
1505:src/keys.c    **** 	State2.rarg = 0;
1506:src/keys.c    **** }
1507:src/keys.c    **** 
1508:src/keys.c    **** static int arg_eval(unsigned int val) {
1509:src/keys.c    **** 	const unsigned int base = CmdBase;
1510:src/keys.c    **** 	int r = RARG(base, val 
1511:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
1512:src/keys.c    **** 		           + (State2.local ? LOCAL_REG_BASE : 0));
1513:src/keys.c    **** 	const unsigned int ssize = (! UState.stack_depth || ! State2.runmode ) ? 4 : 8;
1514:src/keys.c    **** 
1515:src/keys.c    **** 	if (! State2.ind) {
1516:src/keys.c    **** 		/*
1517:src/keys.c    **** 		 *  Central argument checking for some commands
1518:src/keys.c    **** 		 */
1519:src/keys.c    **** #ifdef SHOW_COMPLEX_REGS
1520:src/keys.c    **** 		if (argcmds[base].cmplx && val > TOPREALREG - 2 ) {
ARM GAS  /tmp/ccy15zOt.s 			page 32


1521:src/keys.c    **** 			// remap complex registers cY->T, cZ->A, cT->C
1522:src/keys.c    **** 			                     // 99,   X,   Y,   Z,   T,   A,   B,   C,   D,   L,   I,   J,   K
1523:src/keys.c    **** 			static char remap[] = {  0, 100, 102, 104, 106,   0,   0,   0,   0, 108,   0, 110,   0 };
1524:src/keys.c    **** 			val = (unsigned int) remap[ val - (TOPREALREG - 1) ];
1525:src/keys.c    **** 			if ( val == 0 )
1526:src/keys.c    **** 				return STATE_UNFINISHED;
1527:src/keys.c    **** 			r = RARG(base, val);
1528:src/keys.c    **** 		}
1529:src/keys.c    **** #else
1530:src/keys.c    **** 		if (argcmds[base].cmplx && (val > TOPREALREG - 2 && (val & 1)))
1531:src/keys.c    **** 			// Disallow odd complex register > 98
1532:src/keys.c    **** 			return STATE_UNFINISHED;
1533:src/keys.c    **** #endif
1534:src/keys.c    **** 		if ((base == RARG_STOSTK || base == RARG_RCLSTK) && (val > TOPREALREG - ssize))
1535:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
1536:src/keys.c    **** 			return STATE_UNFINISHED;
1537:src/keys.c    **** 	}
1538:src/keys.c    **** 	// Build op-code
1539:src/keys.c    **** 	reset_arg();
1540:src/keys.c    **** 	return r;
1541:src/keys.c    **** }
1542:src/keys.c    **** 
1543:src/keys.c    **** static int arg_digit(int n) {
1544:src/keys.c    **** 	int lim;
1545:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1546:src/keys.c    **** 	int dispmode = get_dispmode_digs(&lim);
1547:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
1548:src/keys.c    **** #else
1549:src/keys.c    **** 	const unsigned int base = CmdBase;
1550:src/keys.c    **** #endif
1551:src/keys.c    **** 	const unsigned int val = State2.digval * 10 + n;
1552:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
1553:src/keys.c    **** 	
1554:src/keys.c    **** 	if (State2.local) {
1555:src/keys.c    **** 		// Handle local registers and flags
1556:src/keys.c    **** 		lim = MAX_LOCAL_DIRECT - 1;				// default
1557:src/keys.c    **** 		if (State2.runmode) {
1558:src/keys.c    **** 			if (LocalRegs == 0)
1559:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
1560:src/keys.c    **** 			if (is_reg) {
1561:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
1562:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
1563:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
1564:src/keys.c    **** 			}
1565:src/keys.c    **** 		}
1566:src/keys.c    **** 	}
1567:src/keys.c    **** 	else if (is_reg)						// normal register
1568:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
1569:src/keys.c    **** 	else {
1570:src/keys.c    **** 		lim = (int) argcmds[base].lim;				// any other command
1571:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
1572:src/keys.c    **** 			lim = RARG_IND - 1;
1573:src/keys.c    **** 	}
1574:src/keys.c    **** 	if ((int) val > lim)
1575:src/keys.c    **** 		return STATE_UNFINISHED;
1576:src/keys.c    **** 
1577:src/keys.c    **** 	State2.digval = val;
ARM GAS  /tmp/ccy15zOt.s 			page 33


1578:src/keys.c    **** 	++State2.numdigit;
1579:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
1580:src/keys.c    **** 		int result = arg_eval(val);
1581:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
1582:src/keys.c    **** 			--State2.numdigit;
1583:src/keys.c    **** 			State2.digval /= 10;
1584:src/keys.c    **** 		}
1585:src/keys.c    **** 		return result;
1586:src/keys.c    **** 	}
1587:src/keys.c    **** 	return STATE_UNFINISHED;
1588:src/keys.c    **** }
1589:src/keys.c    **** 
1590:src/keys.c    **** static int arg_fkey(int n) {
1591:src/keys.c    **** 	const unsigned int b = CmdBase;
1592:src/keys.c    **** 
1593:src/keys.c    **** 	if (argcmds[b].label || (b >= RARG_SF && b <= RARG_FCF))
1594:src/keys.c    **** 	{
1595:src/keys.c    **** 		if (State2.ind || State2.numdigit > 0)
1596:src/keys.c    **** 			return STATE_UNFINISHED;
1597:src/keys.c    **** 		if (argcmds[b].lim < 100)
1598:src/keys.c    **** 			return STATE_UNFINISHED;
1599:src/keys.c    **** 		return arg_eval(n + 100);
1600:src/keys.c    **** 	}
1601:src/keys.c    **** 	return STATE_UNFINISHED;
1602:src/keys.c    **** }
1603:src/keys.c    **** 
1604:src/keys.c    **** static int arg_storcl_check(const unsigned int b, const int cmplx) {
1605:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
1606:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || b == RARG_FLRCL ||
1607:src/keys.c    **** 			(cmplx && (b == RARG_CSTO || b == RARG_CRCL || b == RARG_FLCRCL)));
1608:src/keys.c    **** #else
1609:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || (cmplx && (b == RARG_CSTO || b == RARG_CRCL )));
1610:src/keys.c    **** #endif
1611:src/keys.c    **** }
1612:src/keys.c    **** 
1613:src/keys.c    **** static int arg_storcl(const unsigned int n, int cmplx) {
1614:src/keys.c    **** 	unsigned int b = CmdBase;
1615:src/keys.c    **** 
1616:src/keys.c    **** 	if (arg_storcl_check(b, cmplx)) {
1617:src/keys.c    **** 		CmdBase += n;
1618:src/keys.c    **** 		return 1;
1619:src/keys.c    **** 	}
1620:src/keys.c    **** 	/* And we can turn off the operation too */
1621:src/keys.c    **** 	if (b >= n) {
1622:src/keys.c    **** 		b -= n;
1623:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
1624:src/keys.c    **** 			CmdBase = b;
1625:src/keys.c    **** 			return 1;
1626:src/keys.c    **** 		}
1627:src/keys.c    **** 	}
1628:src/keys.c    **** 	return 0;
1629:src/keys.c    **** }
1630:src/keys.c    **** 
1631:src/keys.c    **** static int process_arg_dot(const unsigned int base) {
1632:src/keys.c    **** 
1633:src/keys.c    **** 	if (State2.numdigit == 0) {
1634:src/keys.c    **** 		// Only valid at beginning of entry
ARM GAS  /tmp/ccy15zOt.s 			page 34


1635:src/keys.c    **** 		if (State2.dot || State2.local) {
1636:src/keys.c    **** 			// '..' or ENTER '.' = X
1637:src/keys.c    **** 			State2.local = 0;
1638:src/keys.c    **** 			return arg_eval(regX_idx);
1639:src/keys.c    **** 		}
1640:src/keys.c    **** 		if (argcmds[base].local || State2.ind) {
1641:src/keys.c    **** 			// local register or flag select
1642:src/keys.c    **** 			State2.local = 1;
1643:src/keys.c    **** 		}
1644:src/keys.c    **** 		else if (base == RARG_GTO || base == RARG_XEQ) {
1645:src/keys.c    **** 			// Special GTO . sequence
1646:src/keys.c    **** 			if (! State2.ind) {
1647:src/keys.c    **** 				State2.gtodot = 1;
1648:src/keys.c    **** 				reset_arg();
1649:src/keys.c    **** 			}
1650:src/keys.c    **** 		}
1651:src/keys.c    **** 	}
1652:src/keys.c    **** 	return STATE_UNFINISHED;
1653:src/keys.c    **** }
1654:src/keys.c    **** 
1655:src/keys.c    **** static int process_arg_shuffle(int r) {
1656:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
1657:src/keys.c    **** 	if (State2.numdigit < 4)
1658:src/keys.c    **** 		return STATE_UNFINISHED;
1659:src/keys.c    **** 	return arg_eval(State2.digval);
1660:src/keys.c    **** }
1661:src/keys.c    **** 
1662:src/keys.c    **** 
1663:src/keys.c    **** static int process_arg(const keycode c) {
1664:src/keys.c    **** 	unsigned int base = CmdBase;
1665:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
1666:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
1667:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
1668:src/keys.c    **** 	const enum shifts shift = reset_shift();
1669:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
1670:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
1671:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
1672:src/keys.c    **** 
1673:src/keys.c    **** 	n &= ~NO_SHORT;
1674:src/keys.c    **** 	if (base >= NUM_RARG) {
1675:src/keys.c    **** 		reset_arg();
1676:src/keys.c    **** 		return STATE_UNFINISHED;
1677:src/keys.c    **** 	}
1678:src/keys.c    **** #ifdef DM42
1679:src/keys.c    **** 	if ( ! shorthand && ! State2.dot && ! State2.shuffle ) {
1680:src/keys.c    **** 	  switch (n) {
1681:src/keys.c    **** 	  case regX_idx:
1682:src/keys.c    **** 	    return arg_digit(1);
1683:src/keys.c    **** 	  case regY_idx:
1684:src/keys.c    **** 	    return arg_digit(2);
1685:src/keys.c    **** 	  case regZ_idx:
1686:src/keys.c    **** 	    return arg_digit(3);
1687:src/keys.c    **** 	  case regT_idx:
1688:src/keys.c    **** 	    return arg_digit(4);
1689:src/keys.c    **** 	  case 5:
1690:src/keys.c    **** 	  case 6:
1691:src/keys.c    **** 	  case 7:
ARM GAS  /tmp/ccy15zOt.s 			page 35


1692:src/keys.c    **** 	  case 8:
1693:src/keys.c    **** 	  case 9:
1694:src/keys.c    **** 	  case 0:
1695:src/keys.c    **** 	    return arg_digit(n);
1696:src/keys.c    **** 	  }
1697:src/keys.c    **** 	}
1698:src/keys.c    **** #else
1699:src/keys.c    **** 	if (n <= 9 && ! shorthand && ! State2.dot && ! State2.shuffle)
1700:src/keys.c    **** 		return arg_digit(n);
1701:src/keys.c    **** #endif	
1702:src/keys.c    **** 	if (shorthand)
1703:src/keys.c    **** 		// row column shorthand addressing
1704:src/keys.c    **** 		return arg_eval(keycode_to_row_column(c));
1705:src/keys.c    **** 
1706:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1707:src/keys.c    **** 	if (base >= RARG_FIX && base <= RARG_SIG0) {
1708:src/keys.c    **** 		switch ((int)c) {
1709:src/keys.c    **** 		case K_UP:	// up arrow
1710:src/keys.c    **** 			if (--base < RARG_FIX)
1711:src/keys.c    **** 				base = RARG_SIG0;
1712:src/keys.c    **** 			break;
1713:src/keys.c    **** 
1714:src/keys.c    **** 		case K_DOWN:	// down arrow
1715:src/keys.c    **** 		case K01:	// B
1716:src/keys.c    **** 			if (++base > RARG_SIG0)
1717:src/keys.c    **** 				base = RARG_FIX;
1718:src/keys.c    **** 			break;
1719:src/keys.c    **** 		}
1720:src/keys.c    **** 		CmdBase = base;
1721:src/keys.c    **** 	}
1722:src/keys.c    **** #endif
1723:src/keys.c    **** 	/*
1724:src/keys.c    **** 	 *  So far, we've got the digits and some special label addressing keys
1725:src/keys.c    **** 	 *  Handle the rest here.
1726:src/keys.c    **** 	 */
1727:src/keys.c    **** 	switch ((int)c) {
1728:src/keys.c    **** 	case K_F:
1729:src/keys.c    **** 		if (label_addressing)
1730:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
1731:src/keys.c    **** 		break;
1732:src/keys.c    **** 
1733:src/keys.c    **** 	case K_ARROW:		// arrow
1734:src/keys.c    **** 		if (!State2.dot && argcmds[base].indirectokay) {
1735:src/keys.c    **** 			State2.ind = ! State2.ind;
1736:src/keys.c    **** 			if (! stack_reg)
1737:src/keys.c    **** 				State2.dot = 0;
1738:src/keys.c    **** 		}
1739:src/keys.c    **** 		break;
1740:src/keys.c    **** 
1741:src/keys.c    **** 	case K_CMPLX:
1742:src/keys.c    **** 		if (State2.ind || State2.dot)
1743:src/keys.c    **** 			break;
1744:src/keys.c    **** 		if (base == RARG_STO)
1745:src/keys.c    **** 			CmdBase = RARG_STOM;
1746:src/keys.c    **** 		else if (base == RARG_RCL)
1747:src/keys.c    **** 			CmdBase = RARG_RCLM;
1748:src/keys.c    **** 		break;
ARM GAS  /tmp/ccy15zOt.s 			page 36


1749:src/keys.c    **** #ifdef DM42
1750:src/keys.c    **** 	case K41:       // T
1751:src/keys.c    **** 	  if (State2.shuffle)
1752:src/keys.c    **** 	    return process_arg_shuffle(3);
1753:src/keys.c    **** 	case K51:       // X
1754:src/keys.c    **** 	  if (State2.shuffle)
1755:src/keys.c    **** 	    return process_arg_shuffle(0);
1756:src/keys.c    **** 	case K52:	// Y
1757:src/keys.c    **** 	  if (State2.shuffle)
1758:src/keys.c    **** 	    return process_arg_shuffle(1);
1759:src/keys.c    **** 	case K53:       // Z
1760:src/keys.c    **** 	  if (State2.shuffle)
1761:src/keys.c    **** 	    return process_arg_shuffle(2);
1762:src/keys.c    **** #else
1763:src/keys.c    **** 	case K63:	// Y
1764:src/keys.c    **** 	  if (State2.shuffle)
1765:src/keys.c    **** 	    return process_arg_shuffle(1);
1766:src/keys.c    **** #endif
1767:src/keys.c    **** 	case K00:	// A
1768:src/keys.c    **** 	case K01:	// B
1769:src/keys.c    **** 	case K02:	// C
1770:src/keys.c    **** 	case K03:	// D
1771:src/keys.c    **** #ifdef DM42
1772:src/keys.c    **** 	case K12:	// I (lastY)
1773:src/keys.c    **** 	case K13:	// J
1774:src/keys.c    **** 	case K14:	// K
1775:src/keys.c    **** 	case K15:	// L (lastX)
1776:src/keys.c    **** #else
1777:src/keys.c    **** 	case K12:	// I (lastY)
1778:src/keys.c    **** 	case K21:	// J
1779:src/keys.c    **** 	case K22:	// K
1780:src/keys.c    **** 	case K23:	// L (lastX)
1781:src/keys.c    **** #endif
1782:src/keys.c    **** 	  if (State2.dot || stack_reg)
1783:src/keys.c    **** 			return arg_eval(n);
1784:src/keys.c    **** 		if ( c <= K03 )
1785:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
1786:src/keys.c    **** 		break;
1787:src/keys.c    **** #ifdef DM42
1788:src/keys.c    **** 	case K62:	// '.'
1789:src/keys.c    **** 		return process_arg_dot(base);
1790:src/keys.c    **** 
1791:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
1792:src/keys.c    **** 	case K64:		// plus
1793:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
1794:src/keys.c    **** 			return arg_eval(n);
1795:src/keys.c    **** 		break;
1796:src/keys.c    **** 	case K54:               // minus
1797:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
1798:src/keys.c    **** 			reset_arg();
1799:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
1800:src/keys.c    **** 		}
1801:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
1802:src/keys.c    **** 		break;
1803:src/keys.c    **** 	case K44:		// multiply
1804:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
1805:src/keys.c    **** 			return arg_eval(n);
ARM GAS  /tmp/ccy15zOt.s 			page 37


1806:src/keys.c    **** 		break;
1807:src/keys.c    **** 	case K34:
1808:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
1809:src/keys.c    **** 		break;
1810:src/keys.c    **** #else
1811:src/keys.c    **** 	case K62:	// X, '.'
1812:src/keys.c    **** 		if (State2.shuffle)
1813:src/keys.c    **** 			return process_arg_shuffle(0);
1814:src/keys.c    **** 		return process_arg_dot(base);
1815:src/keys.c    **** 
1816:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
1817:src/keys.c    **** 	case K64:		// Z register
1818:src/keys.c    **** 		if (State2.shuffle)
1819:src/keys.c    **** 			return process_arg_shuffle(2);
1820:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
1821:src/keys.c    **** 			return arg_eval(n);
1822:src/keys.c    **** 		break;
1823:src/keys.c    **** 
1824:src/keys.c    **** 	case K54:
1825:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
1826:src/keys.c    **** 			reset_arg();
1827:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
1828:src/keys.c    **** 		}
1829:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
1830:src/keys.c    **** 		break;
1831:src/keys.c    **** 
1832:src/keys.c    **** 	case K44:		// T register
1833:src/keys.c    **** 		if (State2.shuffle)
1834:src/keys.c    **** 			return process_arg_shuffle(3);
1835:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
1836:src/keys.c    **** 			return arg_eval(n);
1837:src/keys.c    **** 		break;
1838:src/keys.c    **** 
1839:src/keys.c    **** 	case K34:
1840:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
1841:src/keys.c    **** 		break;
1842:src/keys.c    **** #endif
1843:src/keys.c    **** 	case K_UP:
1844:src/keys.c    **** 		arg_storcl(RARG_STO_MAX - RARG_STO, 0);
1845:src/keys.c    **** 		break;
1846:src/keys.c    **** 
1847:src/keys.c    **** 	case K_DOWN:
1848:src/keys.c    **** 		arg_storcl(RARG_STO_MIN - RARG_STO, 0);
1849:src/keys.c    **** 		break;
1850:src/keys.c    **** 
1851:src/keys.c    **** 	case K20:				// Enter is a short cut finisher but it also changes a few commands if it is first up
1852:src/keys.c    **** 		if (State2.numdigit == 0 && !State2.ind && !State2.dot) {
1853:src/keys.c    **** 			if (argcmds[base].label) {
1854:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
1855:src/keys.c    **** 				State2.multi = 1;
1856:src/keys.c    **** 				State2.alphashift = 0;
1857:src/keys.c    **** 				State2.rarg = 0;
1858:src/keys.c    **** 			} else if (base == RARG_SCI) {
1859:src/keys.c    **** 				reset_arg();
1860:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
1861:src/keys.c    **** 			} else if (base == RARG_ENG) {
1862:src/keys.c    **** 				reset_arg();
ARM GAS  /tmp/ccy15zOt.s 			page 38


1863:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
1864:src/keys.c    **** 			} else if (argcmds[base].stckreg)
1865:src/keys.c    **** 				State2.dot = 1;
1866:src/keys.c    **** 		} else if (State2.numdigit > 0)
1867:src/keys.c    **** 			return arg_eval(State2.digval);
1868:src/keys.c    **** 		else if (stack_reg)
1869:src/keys.c    **** 			State2.dot = 1 - State2.dot;
1870:src/keys.c    **** 		break;
1871:src/keys.c    **** 
1872:src/keys.c    **** 	case K24:	// <-
1873:src/keys.c    **** 		if (State2.numdigit == 0) {
1874:src/keys.c    **** 			if (State2.dot)
1875:src/keys.c    **** 				State2.dot = 0;
1876:src/keys.c    **** 			else if (State2.local)
1877:src/keys.c    **** 				State2.local = 0;
1878:src/keys.c    **** 			else if (State2.ind)
1879:src/keys.c    **** 				State2.ind = 0;
1880:src/keys.c    **** 			else
1881:src/keys.c    **** 				goto reset;
1882:src/keys.c    **** 		}
1883:src/keys.c    **** 		else {
1884:src/keys.c    **** 			--State2.numdigit;
1885:src/keys.c    **** 			if (State2.shuffle)
1886:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
1887:src/keys.c    **** 			else
1888:src/keys.c    **** 				State2.digval /= 10;
1889:src/keys.c    **** 		}
1890:src/keys.c    **** 		break;
1891:src/keys.c    **** 
1892:src/keys.c    **** 	case K60:
1893:src/keys.c    **** 	reset:
1894:src/keys.c    **** 		reset_arg();
1895:src/keys.c    **** 	default:
1896:src/keys.c    **** 		break;
1897:src/keys.c    **** 	}
1898:src/keys.c    **** 	return STATE_UNFINISHED;
1899:src/keys.c    **** }
1900:src/keys.c    **** 
1901:src/keys.c    **** 
1902:src/keys.c    **** /*
1903:src/keys.c    ****  *  Process arguments to the diverse test commands
1904:src/keys.c    ****  */
1905:src/keys.c    **** static int process_test(const keycode c) {
1906:src/keys.c    **** 	int r = State2.test;
1907:src/keys.c    **** 	int cmpx = State2.cmplx;
1908:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
1909:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
1910:src/keys.c    **** 
1911:src/keys.c    **** 	State2.test = TST_NONE;
1912:src/keys.c    **** 	State2.cmplx = 0;
1913:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
1914:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
1915:src/keys.c    **** 		// Lettered register
1916:src/keys.c    **** 		if (cmpx && (n & 1)) {
1917:src/keys.c    **** 			if (n == regI_idx)
1918:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
1919:src/keys.c    **** 			// Disallow odd complex registers > A
ARM GAS  /tmp/ccy15zOt.s 			page 39


1920:src/keys.c    **** 			goto again;
1921:src/keys.c    **** 		}
1922:src/keys.c    **** 		// Return the command with the register completed
1923:src/keys.c    **** 		return RARG(base, n);
1924:src/keys.c    **** 	}
1925:src/keys.c    **** 	else if ( n == 0 ) {
1926:src/keys.c    **** 		// Special 0
1927:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq0 : OP_Xeq0) + r;
1928:src/keys.c    **** 	}
1929:src/keys.c    **** 	else if ( n == 1 ) {
1930:src/keys.c    **** 		// Special 1
1931:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq1 : OP_Xeq1) + r;
1932:src/keys.c    **** 	}
1933:src/keys.c    **** 	else if ( n <= 9 || c == K_ARROW || c == K62 ) {
1934:src/keys.c    **** 		// digit 2..9, -> or .
1935:src/keys.c    **** 		init_arg((enum rarg)base);
1936:src/keys.c    **** 		return process_arg(c);
1937:src/keys.c    **** 	}
1938:src/keys.c    **** 
1939:src/keys.c    **** 	switch (c) {
1940:src/keys.c    **** 	case K11:					// tests vs register
1941:src/keys.c    **** 	case K20:
1942:src/keys.c    **** 		init_arg((enum rarg)base);
1943:src/keys.c    **** 		return STATE_UNFINISHED;
1944:src/keys.c    **** 
1945:src/keys.c    **** 	//case K60:
1946:src/keys.c    **** 	case K24:
1947:src/keys.c    **** 		return STATE_UNFINISHED;
1948:src/keys.c    **** 
1949:src/keys.c    **** 	default:
1950:src/keys.c    **** 		break;
1951:src/keys.c    **** 	}
1952:src/keys.c    **** again:
1953:src/keys.c    **** 	State2.test = r;
1954:src/keys.c    **** 	State2.cmplx = cmpx;
1955:src/keys.c    **** 	return STATE_UNFINISHED;
1956:src/keys.c    **** }
1957:src/keys.c    **** 
1958:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
1959:src/keys.c    **** /*
1960:src/keys.c    ****  *  Build the user catalogue on the fly in RAM and return the number of entries
1961:src/keys.c    ****  */
1962:src/keys.c    **** #define USER_CAT_MAX 100
1963:src/keys.c    **** s_opcode UserCat[USER_CAT_MAX];
1964:src/keys.c    **** 
1965:src/keys.c    **** static int build_user_cat(void)
1966:src/keys.c    **** {
1967:src/keys.c    **** 	// find the label 'CAT'
1968:src/keys.c    **** 	const int lbl = OP_DBL + (DBL_LBL << DBL_SHIFT) + 'C' + ('A' << 16) + ('T' << 24);
1969:src/keys.c    **** 	unsigned int pc = findmultilbl(lbl, 0);
1970:src/keys.c    **** 	int len = 0;
1971:src/keys.c    **** 	while (pc && len < USER_CAT_MAX) {
1972:src/keys.c    **** 		// do a simnple insert-sort to sort the entries
1973:src/keys.c    **** 		char buf1[16];
1974:src/keys.c    **** 		int i;
1975:src/keys.c    **** 		s_opcode op;
1976:src/keys.c    **** 	next:
ARM GAS  /tmp/ccy15zOt.s 			page 40


1977:src/keys.c    **** 		pc = do_inc(pc, 0);
1978:src/keys.c    **** 		op = (s_opcode) getprog(pc);
1979:src/keys.c    **** 		if (op == (OP_NIL | OP_END))
1980:src/keys.c    **** 			break;
1981:src/keys.c    **** 		if (isDBL(op))
1982:src/keys.c    **** 			continue;
1983:src/keys.c    **** 		if (isRARG(op)) {
1984:src/keys.c    **** 			const s_opcode rarg = RARG_CMD(op);
1985:src/keys.c    **** 			if (rarg != RARG_ALPHA && rarg != RARG_CONV
1986:src/keys.c    **** 			    && rarg != RARG_CONST && rarg != RARG_CONST_CMPLX)
1987:src/keys.c    **** 				op = op & 0xff00;	// remove argument
1988:src/keys.c    **** 		}
1989:src/keys.c    **** 		catcmd(op, buf1);
1990:src/keys.c    **** 		for (i = 0; i < len; ++i) {
1991:src/keys.c    **** 			// Find a position in the table to insert the new entry
1992:src/keys.c    **** 			char buf2[16];
1993:src/keys.c    **** 			const char *p, *q;
1994:src/keys.c    **** 			int diff = 0;
1995:src/keys.c    **** 			if (op == UserCat[i]) {
1996:src/keys.c    **** 				// duplicate entry - ignore
1997:src/keys.c    **** 				goto next;
1998:src/keys.c    **** 			}
1999:src/keys.c    **** 			p = buf1;
2000:src/keys.c    **** 			if (*p == COMPLEX_PREFIX)
2001:src/keys.c    **** 				++p;
2002:src/keys.c    **** 			q = catcmd(UserCat[i], buf2);
2003:src/keys.c    **** 			if (*q == COMPLEX_PREFIX)
2004:src/keys.c    **** 				++q;
2005:src/keys.c    **** 			diff = 0;
2006:src/keys.c    **** 			while (*p != '\0' && diff == 0) {
2007:src/keys.c    **** 				diff = remap_chars(*q++) - remap_chars(*p++);
2008:src/keys.c    **** 			}
2009:src/keys.c    **** 			if ((diff == 0 && *q == 0) ) {
2010:src/keys.c    **** 				// identical according to sort order, insert after
2011:src/keys.c    **** 				++i;
2012:src/keys.c    **** 				break;
2013:src/keys.c    **** 			}
2014:src/keys.c    **** 			if (diff > 0) {
2015:src/keys.c    **** 				// insert new entry before the one found because this is greater
2016:src/keys.c    **** 				break;
2017:src/keys.c    **** 			}
2018:src/keys.c    **** 		}
2019:src/keys.c    **** 		if (i < len) {
2020:src/keys.c    **** 			// Make room
2021:src/keys.c    **** 			xcopy(UserCat + i + 1, UserCat + i, (len - i) << 1);
2022:src/keys.c    **** 		}
2023:src/keys.c    **** 		UserCat[i] = op;
2024:src/keys.c    **** 		++len;
2025:src/keys.c    **** 	}
2026:src/keys.c    **** 	// return the number of entries
2027:src/keys.c    **** 	return len;
2028:src/keys.c    **** }
2029:src/keys.c    **** #endif
2030:src/keys.c    **** 
2031:src/keys.c    **** /* Return the number of entries in the current catalogue.
2032:src/keys.c    ****  * These are all fixed size known at compile time so a table lookup will
2033:src/keys.c    ****  * likely be the most space efficient method.
ARM GAS  /tmp/ccy15zOt.s 			page 41


2034:src/keys.c    ****  */
2035:src/keys.c    **** int current_catalogue_max(void) {
2036:src/keys.c    **** 	// A quick table of catalogue sizes
2037:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues' 
2038:src/keys.c    **** 	static const unsigned char catalogue_sizes[] = 
2039:src/keys.c    **** 	{
2040:src/keys.c    **** 		0, // NONE
2041:src/keys.c    **** 		SIZE_catalogue,
2042:src/keys.c    **** 		SIZE_cplx_catalogue,
2043:src/keys.c    **** 		SIZE_stats_catalogue,
2044:src/keys.c    **** 		SIZE_prob_catalogue,
2045:src/keys.c    **** 		SIZE_int_catalogue,
2046:src/keys.c    **** 		SIZE_prog_catalogue,
2047:src/keys.c    **** 		SIZE_program_xfcn,
2048:src/keys.c    **** 		SIZE_test_catalogue,
2049:src/keys.c    **** 		SIZE_mode_catalogue,
2050:src/keys.c    **** 		SIZE_alpha_catalogue,
2051:src/keys.c    **** 		SIZE_alpha_symbols,
2052:src/keys.c    **** 		SIZE_alpha_compares,
2053:src/keys.c    **** 		SIZE_alpha_arrows,
2054:src/keys.c    **** 		SIZE_alpha_letters,
2055:src/keys.c    **** 		SIZE_alpha_subscripts,
2056:src/keys.c    **** 		NUM_CONSTS_CAT,
2057:src/keys.c    **** 		NUM_CONSTS_CAT,
2058:src/keys.c    **** 		SIZE_conv_catalogue,
2059:src/keys.c    **** 		SIZE_sums_catalogue,
2060:src/keys.c    **** 		SIZE_matrix_catalogue,
2061:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2062:src/keys.c    **** 		SIZE_internal_catalogue,
2063:src/keys.c    **** #endif
2064:src/keys.c    **** 	};
2065:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2066:src/keys.c    **** 	const int cat = State2.catalogue;
2067:src/keys.c    **** 	return cat == CATALOGUE_USER ? build_user_cat() : catalogue_sizes[cat];
2068:src/keys.c    **** #else
2069:src/keys.c    **** 	return catalogue_sizes[State2.catalogue];
2070:src/keys.c    **** #endif
2071:src/keys.c    **** }
2072:src/keys.c    **** 
2073:src/keys.c    **** 
2074:src/keys.c    **** /* Look up the character position in the given byte array and
2075:src/keys.c    ****  * build the alpha op-code for it.
2076:src/keys.c    ****  */
2077:src/keys.c    **** static opcode alpha_code(int n, const char tbl[]) {
2078:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
2079:src/keys.c    **** }
2080:src/keys.c    **** 
2081:src/keys.c    **** 
2082:src/keys.c    **** /* Return the opcode for entry n from the current catalogue
2083:src/keys.c    ****  */
2084:src/keys.c    **** opcode current_catalogue(int n) {
2085:src/keys.c    **** 	// A quick table of catalogue tables
2086:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues'
2087:src/keys.c    **** 	static const void *catalogues[] =
2088:src/keys.c    **** 	{
2089:src/keys.c    **** 		NULL, // NONE
2090:src/keys.c    **** 		catalogue,
ARM GAS  /tmp/ccy15zOt.s 			page 42


2091:src/keys.c    **** 		cplx_catalogue,
2092:src/keys.c    **** 		stats_catalogue,
2093:src/keys.c    **** 		prob_catalogue,
2094:src/keys.c    **** 		int_catalogue,
2095:src/keys.c    **** 		prog_catalogue,
2096:src/keys.c    **** 		program_xfcn,
2097:src/keys.c    **** 		test_catalogue,
2098:src/keys.c    **** 		mode_catalogue,
2099:src/keys.c    **** 		alpha_catalogue,
2100:src/keys.c    **** 		alpha_symbols,
2101:src/keys.c    **** 		alpha_compares,
2102:src/keys.c    **** 		alpha_arrows,
2103:src/keys.c    **** 		alpha_letters,
2104:src/keys.c    **** 		alpha_subscripts,
2105:src/keys.c    **** 		NULL,
2106:src/keys.c    **** 		NULL,
2107:src/keys.c    **** 		NULL, //CONV
2108:src/keys.c    **** 		sums_catalogue,
2109:src/keys.c    **** 		matrix_catalogue,
2110:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2111:src/keys.c    **** 		internal_catalogue,
2112:src/keys.c    **** #endif
2113:src/keys.c    **** 	};
2114:src/keys.c    **** 	const unsigned char *cat;
2115:src/keys.c    **** 	unsigned int c = State2.catalogue;
2116:src/keys.c    **** 	int m, i;
2117:src/keys.c    **** 	unsigned p, q;
2118:src/keys.c    **** 
2119:src/keys.c    **** 	if (c == CATALOGUE_CONST) {
2120:src/keys.c    **** 		if (n == OP_ZERO)
2121:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
2122:src/keys.c    **** 		return CONST(n);
2123:src/keys.c    **** 	}
2124:src/keys.c    **** 	if (c == CATALOGUE_COMPLEX_CONST) {
2125:src/keys.c    **** 		if (n == OP_ZERO)
2126:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
2127:src/keys.c    **** 		return CONST_CMPLX(n);
2128:src/keys.c    **** 	}
2129:src/keys.c    **** 	if (c == CATALOGUE_CONV) {
2130:src/keys.c    **** 		const int cnv = conv_catalogue[n];
2131:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
2132:src/keys.c    **** 			// Monadic conversion routine
2133:src/keys.c    **** 			return OP_MON | (cnv - SIZE_conv_catalogue);
2134:src/keys.c    **** 		else
2135:src/keys.c    **** 			return RARG(RARG_CONV, cnv);
2136:src/keys.c    **** 	}
2137:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2138:src/keys.c    **** 	if (c == CATALOGUE_USER)
2139:src/keys.c    **** 		return build_user_cat() ? UserCat[n] : STATE_IGNORE;
2140:src/keys.c    **** #endif
2141:src/keys.c    **** 
2142:src/keys.c    **** 	if (c == CATALOGUE_ALPHA_LETTERS && State2.alphashift)
2143:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
2144:src/keys.c    **** 	else
2145:src/keys.c    **** 		cat = (const unsigned char *) catalogues[c];
2146:src/keys.c    **** 
2147:src/keys.c    **** 	if (c >= CATALOGUE_ALPHA_SYMBOLS && c <= CATALOGUE_ALPHA_SUBSCRIPTS) {
ARM GAS  /tmp/ccy15zOt.s 			page 43


2148:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
2149:src/keys.c    **** 	}
2150:src/keys.c    **** 	if (c >= sizeof(catalogues) / sizeof(void *))
2151:src/keys.c    **** 		return OP_NIL | OP_NOP;
2152:src/keys.c    **** 
2153:src/keys.c    **** 	/* Unpack the opcode */
2154:src/keys.c    **** 	cat += n + (n >> 2);
2155:src/keys.c    **** 	p = cat[0];
2156:src/keys.c    **** 	q = cat[1];
2157:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
2158:src/keys.c    **** 
2159:src/keys.c    **** 	/* Now figure out which opcode it really is */
2160:src/keys.c    **** 	for (i=0; i<KIND_MAX; i++) {
2161:src/keys.c    **** 		if (m < opcode_breaks[i])
2162:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
2163:src/keys.c    **** 		m -= opcode_breaks[i];
2164:src/keys.c    **** 	}
2165:src/keys.c    **** 	return RARG_BASEOP(m);
2166:src/keys.c    **** }
2167:src/keys.c    **** 
2168:src/keys.c    **** 
2169:src/keys.c    **** /*
2170:src/keys.c    ****  *  Helper for navigation in alpha catalogues. Some charaters are not allowed
2171:src/keys.c    ****  *  in multi character commands.
2172:src/keys.c    ****  */
2173:src/keys.c    **** static int forbidden_alpha(int pos) {
2174:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
2175:src/keys.c    **** }
2176:src/keys.c    **** 
2177:src/keys.c    **** /*
2178:src/keys.c    ****  *  Catalogue navigation
2179:src/keys.c    ****  */
2180:src/keys.c    **** static int process_catalogue(const keycode c, const enum shifts shift, const int is_multi) {
2181:src/keys.c    **** 	int pos = State.catpos;
2182:src/keys.c    **** 	int ch;
2183:src/keys.c    **** 	const int ctmax = current_catalogue_max();
2184:src/keys.c    **** 	const enum catalogues cat = (enum catalogues) State2.catalogue;
2185:src/keys.c    **** 
2186:src/keys.c    **** 	if (shift == SHIFT_N) {
2187:src/keys.c    **** 		switch (c) {
2188:src/keys.c    **** #ifdef DM42
2189:src/keys.c    **** 		case K05:			// XEQ accepts command
2190:src/keys.c    **** #else	  
2191:src/keys.c    **** 		case K30:			// XEQ accepts command
2192:src/keys.c    **** #endif						  
2193:src/keys.c    **** 		case K20:			// Enter accepts command
2194:src/keys.c    **** 			if (pos < ctmax && !(is_multi && forbidden_alpha(pos))) {
2195:src/keys.c    **** 				const opcode op = current_catalogue(pos);
2196:src/keys.c    **** 
2197:src/keys.c    **** 				init_cat(CATALOGUE_NONE);
2198:src/keys.c    **** 
2199:src/keys.c    **** 				if (isRARG(op)) {
2200:src/keys.c    **** 					const unsigned int rarg = RARG_CMD(op);
2201:src/keys.c    **** 					if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
2202:src/keys.c    **** 						return op;
2203:src/keys.c    **** 					if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
2204:src/keys.c    **** 						State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
ARM GAS  /tmp/ccy15zOt.s 			page 44


2205:src/keys.c    **** 					else
2206:src/keys.c    **** 						init_arg(RARG_CMD(op));
2207:src/keys.c    **** 				}
2208:src/keys.c    **** 				else {
2209:src/keys.c    **** 					return check_confirm(op);
2210:src/keys.c    **** 				}
2211:src/keys.c    **** 			} else
2212:src/keys.c    **** 				init_cat(CATALOGUE_NONE);
2213:src/keys.c    **** 			return STATE_UNFINISHED;
2214:src/keys.c    **** 
2215:src/keys.c    **** 		case K24:			// backspace
2216:src/keys.c    **** 		    if (CmdLineLength > 0 && Keyticks < 30) {
2217:src/keys.c    **** 		      if (--CmdLineLength > 0)
2218:src/keys.c    **** 					goto search;
2219:src/keys.c    **** 				pos = 0;
2220:src/keys.c    **** 				goto set_pos;
2221:src/keys.c    **** 			} else
2222:src/keys.c    **** 				init_cat(CATALOGUE_NONE);
2223:src/keys.c    **** 			return STATE_UNFINISHED;
2224:src/keys.c    **** 
2225:src/keys.c    **** 		case K60:
2226:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
2227:src/keys.c    **** 			return STATE_UNFINISHED;
2228:src/keys.c    **** 
2229:src/keys.c    **** 		case K_UP:
2230:src/keys.c    **** 			CmdLineLength = 0;
2231:src/keys.c    **** 			if (pos == 0)
2232:src/keys.c    **** 				goto set_max;
2233:src/keys.c    **** 			else
2234:src/keys.c    **** 				--pos;
2235:src/keys.c    **** 			goto set_pos;
2236:src/keys.c    **** 
2237:src/keys.c    **** 		case K_DOWN:
2238:src/keys.c    **** 			CmdLineLength = 0;
2239:src/keys.c    **** 			while (++pos < ctmax && is_multi && forbidden_alpha(pos));
2240:src/keys.c    **** 			if (pos >= ctmax)
2241:src/keys.c    **** 				pos = 0;
2242:src/keys.c    **** 			goto set_pos;
2243:src/keys.c    **** 
2244:src/keys.c    **** 		default:
2245:src/keys.c    **** 			break;
2246:src/keys.c    **** 		}
2247:src/keys.c    **** 	} else if (shift == SHIFT_F) {
2248:src/keys.c    **** 		if (cat == CATALOGUE_CONV && c == K01) {
2249:src/keys.c    **** 			/*
2250:src/keys.c    **** 			 * f 1/x in conversion catalogue
2251:src/keys.c    **** 			 */
2252:src/keys.c    **** 			/* A small table of commands in pairs containing inverse commands.
2253:src/keys.c    **** 			 * This table could be unsigned characters only storing the monadic kind.
2254:src/keys.c    **** 			 * this saves twelve bytes in the table at a cost of some bytes in the code below.
2255:src/keys.c    **** 			 * Not worth it since the maximum saving will be less than twelve bytes.
2256:src/keys.c    **** 			 */
2257:src/keys.c    **** 			static const unsigned short int conv_mapping[] = {
2258:src/keys.c    **** 				OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
2259:src/keys.c    **** 				OP_MON | OP_DB_PR,	OP_MON | OP_PR_DB,
2260:src/keys.c    **** 				OP_MON | OP_DEGC_F,	OP_MON | OP_DEGF_C,
2261:src/keys.c    **** 				OP_MON | OP_DEG2RAD,	OP_MON | OP_RAD2DEG,
ARM GAS  /tmp/ccy15zOt.s 			page 45


2262:src/keys.c    **** 				OP_MON | OP_DEG2GRD,	OP_MON | OP_GRD2DEG,
2263:src/keys.c    **** 				OP_MON | OP_RAD2GRD,	OP_MON | OP_GRD2RAD,
2264:src/keys.c    **** 			};
2265:src/keys.c    **** 			const opcode op = current_catalogue(pos);
2266:src/keys.c    **** 			int i;
2267:src/keys.c    **** 
2268:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
2269:src/keys.c    **** 			if (isRARG(op))
2270:src/keys.c    **** 				return op ^ 1;
2271:src/keys.c    **** 			for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
2272:src/keys.c    **** 				if (op == conv_mapping[i])
2273:src/keys.c    **** 					return conv_mapping[i^1];
2274:src/keys.c    **** 			return STATE_UNFINISHED;		// Unreached
2275:src/keys.c    **** 		}
2276:src/keys.c    **** 		else if (c == K60 && (State2.alphas || State2.multi)) {
2277:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
2278:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
2279:src/keys.c    **** 			return STATE_UNFINISHED;
2280:src/keys.c    **** 		}
2281:src/keys.c    **** 	} else if (shift == SHIFT_G) {
2282:src/keys.c    **** 		if (c == K24 && cat == CATALOGUE_SUMS) {
2283:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
2284:src/keys.c    **** 			return OP_NIL | OP_SIGMACLEAR;
2285:src/keys.c    **** 		}
2286:src/keys.c    **** 	}
2287:src/keys.c    **** 
2288:src/keys.c    **** 	/* We've got a key press, map it to a character and try to
2289:src/keys.c    **** 	 * jump to the appropriate catalogue entry.
2290:src/keys.c    **** 	 */
2291:src/keys.c    **** 	ch = remap_chars(keycode_to_alpha(c, shift == SHIFT_G ? SHIFT_LC_G : shift));
2292:src/keys.c    **** 	reset_shift();
2293:src/keys.c    **** 	if (ch == '\0')
2294:src/keys.c    **** 		return STATE_UNFINISHED;
2295:src/keys.c    **** 	if (cat > CATALOGUE_ALPHA && cat < CATALOGUE_CONST) {
2296:src/keys.c    **** 		// No multi character search in alpha catalogues
2297:src/keys.c    **** 		CmdLineLength = 0;
2298:src/keys.c    **** 	}
2299:src/keys.c    **** 	if (CmdLineLength < 10)
2300:src/keys.c    **** 		Cmdline[CmdLineLength++] = ch;
2301:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
2302:src/keys.c    **** 
2303:src/keys.c    **** search:
2304:src/keys.c    **** 	Cmdline[CmdLineLength] = '\0';
2305:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
2306:src/keys.c    **** 		char buf[16];
2307:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
2308:src/keys.c    **** 		int i;
2309:src/keys.c    **** 
2310:src/keys.c    **** 		if (*cmd == COMPLEX_PREFIX)
2311:src/keys.c    **** 			cmd++;
2312:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
2313:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
2314:src/keys.c    **** 			const int cl = (unsigned char) Cmdline[i];
2315:src/keys.c    **** 			if (c > cl)
2316:src/keys.c    **** 				goto set_pos;
2317:src/keys.c    **** 			else if (c < cl)
2318:src/keys.c    **** 				break;
ARM GAS  /tmp/ccy15zOt.s 			page 46


2319:src/keys.c    **** 		}
2320:src/keys.c    **** 		if (Cmdline[i] == '\0')
2321:src/keys.c    **** 			goto set_pos;
2322:src/keys.c    **** 	}
2323:src/keys.c    **** set_max:
2324:src/keys.c    **** 	pos = ctmax - 1;
2325:src/keys.c    **** set_pos:
2326:src/keys.c    **** 	while (is_multi && pos && forbidden_alpha(pos))
2327:src/keys.c    **** 		--pos;
2328:src/keys.c    **** 	State.catpos = pos;
2329:src/keys.c    **** 	return STATE_UNFINISHED;
2330:src/keys.c    **** }
2331:src/keys.c    **** 
2332:src/keys.c    **** #ifndef REALBUILD
2333:src/keys.c    **** int find_pos(const char* text) {
2334:src/keys.c    **** 	int pos;
2335:src/keys.c    **** 	const int ctmax = current_catalogue_max();
2336:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
2337:src/keys.c    **** 		char buf[16];
2338:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
2339:src/keys.c    **** 		int i;
2340:src/keys.c    **** 
2341:src/keys.c    **** 		if (*cmd == COMPLEX_PREFIX)
2342:src/keys.c    **** 			cmd++;
2343:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
2344:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
2345:src/keys.c    **** 			const int cl = remap_chars(text[i]);
2346:src/keys.c    **** 			if (c > cl)
2347:src/keys.c    **** 				return pos;
2348:src/keys.c    **** 			else if (c < cl)
2349:src/keys.c    **** 				break;
2350:src/keys.c    **** 		}
2351:src/keys.c    **** 		if (text[i] == '\0')
2352:src/keys.c    **** 			return pos;
2353:src/keys.c    **** 	}
2354:src/keys.c    **** 	return pos;
2355:src/keys.c    **** }
2356:src/keys.c    **** 
2357:src/keys.c    **** #endif
2358:src/keys.c    **** 
2359:src/keys.c    **** /* Multi (2) word instruction entry
2360:src/keys.c    ****  */
2361:src/keys.c    **** static void reset_multi(void) {
2362:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
2363:src/keys.c    **** 	State2.multi = 0;
2364:src/keys.c    **** 	if (! State2.alphas )
2365:src/keys.c    **** 		State2.alphashift = 0;
2366:src/keys.c    **** }
2367:src/keys.c    **** 
2368:src/keys.c    **** static int process_multi(const keycode c) {
2369:src/keys.c    **** 	enum shifts shift = reset_shift();
2370:src/keys.c    **** 	unsigned int ch = 0;
2371:src/keys.c    **** 	unsigned int opcode;
2372:src/keys.c    **** 
2373:src/keys.c    **** 	if (State2.catalogue) {
2374:src/keys.c    **** 		// Alpha catalogue from within multi character command
2375:src/keys.c    **** 		opcode = process_catalogue((const keycode)c, shift, State2.numdigit == 2);
ARM GAS  /tmp/ccy15zOt.s 			page 47


2376:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
2377:src/keys.c    **** 			return opcode;
2378:src/keys.c    **** 		ch = (unsigned char) opcode;
2379:src/keys.c    **** 		goto add_char;
2380:src/keys.c    **** 	}
2381:src/keys.c    **** 
2382:src/keys.c    **** 	switch (c) {
2383:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
2384:src/keys.c    **** 		if (shift != SHIFT_N)
2385:src/keys.c    **** 				break;
2386:src/keys.c    **** 		reset_multi();
2387:src/keys.c    **** 		if (State2.numdigit == 0)
2388:src/keys.c    **** 			return STATE_UNFINISHED;
2389:src/keys.c    **** 		else if (State2.numdigit == 1)
2390:src/keys.c    **** 			State2.digval2 = 0;
2391:src/keys.c    **** 		goto fin;
2392:src/keys.c    **** 
2393:src/keys.c    **** 	case K24:	// Clx - backspace, clear alpha
2394:src/keys.c    **** 		if (shift != SHIFT_H) {
2395:src/keys.c    **** 			if (State2.numdigit == 0)
2396:src/keys.c    **** 				reset_multi();
2397:src/keys.c    **** 			else
2398:src/keys.c    **** 				State2.numdigit--;
2399:src/keys.c    **** 			return STATE_UNFINISHED;
2400:src/keys.c    **** 		}
2401:src/keys.c    **** 		break;
2402:src/keys.c    **** 
2403:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
2404:src/keys.c    **** 		if (shift == SHIFT_F)
2405:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
2406:src/keys.c    **** 		else
2407:src/keys.c    **** 			reset_multi();
2408:src/keys.c    **** 		return STATE_UNFINISHED;
2409:src/keys.c    **** 
2410:src/keys.c    **** 	default:
2411:src/keys.c    **** 		break;
2412:src/keys.c    **** 		}
2413:src/keys.c    **** 
2414:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
2415:src/keys.c    **** 	ch = keycode_to_alpha(c, shift);
2416:src/keys.c    **** 	if (ch == 0)
2417:src/keys.c    **** 		return STATE_UNFINISHED;
2418:src/keys.c    **** add_char:
2419:src/keys.c    **** 	if (State2.numdigit == 0) {
2420:src/keys.c    **** 		State2.digval = ch;
2421:src/keys.c    **** 		State2.numdigit = 1;
2422:src/keys.c    **** 		return STATE_UNFINISHED;
2423:src/keys.c    **** 	} else if (State2.numdigit == 1) {
2424:src/keys.c    **** 		State2.digval2 = ch;
2425:src/keys.c    **** 		State2.numdigit = 2;
2426:src/keys.c    **** 		return STATE_UNFINISHED;
2427:src/keys.c    **** 	}
2428:src/keys.c    **** 	reset_multi();
2429:src/keys.c    **** 
2430:src/keys.c    **** fin:
2431:src/keys.c    **** 	opcode = OP_DBL + (CmdBase << DBL_SHIFT) 
2432:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
ARM GAS  /tmp/ccy15zOt.s 			page 48


2433:src/keys.c    **** 	return opcode;
2434:src/keys.c    **** }
2435:src/keys.c    **** 
2436:src/keys.c    **** 
2437:src/keys.c    **** /* Handle YES/NO confirmations
2438:src/keys.c    ****  */
2439:src/keys.c    **** static int process_confirm(const keycode c) {
2440:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
2441:src/keys.c    **** 	switch (c) {
2442:src/keys.c    **** #ifdef DM42
2443:src/keys.c    **** 	case K52:
2444:src/keys.c    **** #endif
2445:src/keys.c    **** 	case K63:			// Yes
2446:src/keys.c    **** 	  switch (State2.confirm) {
2447:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
2448:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
2449:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
2450:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
2451:src/keys.c    **** 	  }
2452:src/keys.c    **** 	case K24:
2453:src/keys.c    **** #ifdef DM42
2454:src/keys.c    **** 	case K22:
2455:src/keys.c    **** #else
2456:src/keys.c    **** 	case K32:
2457:src/keys.c    **** #endif
2458:src/keys.c    **** 	  // No
2459:src/keys.c    **** 	  State2.confirm = 0;
2460:src/keys.c    **** 	  State2.digval = 0;
2461:src/keys.c    **** 	  break;
2462:src/keys.c    **** 	default:			// No state change
2463:src/keys.c    **** 	  break;
2464:src/keys.c    **** 	}
2465:src/keys.c    **** 	return STATE_UNFINISHED;
2466:src/keys.c    **** }
2467:src/keys.c    **** 
2468:src/keys.c    **** 
2469:src/keys.c    **** /*
2470:src/keys.c    ****  *  STATUS
2471:src/keys.c    ****  */
2472:src/keys.c    **** static int process_status(const keycode c) {
2473:src/keys.c    **** 	int n = ((int)State2.status) - 3;
2474:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
2475:src/keys.c    **** 
2476:src/keys.c    **** 	if (c == K_UP) {
2477:src/keys.c    **** 		if (--n < -2)
2478:src/keys.c    **** 			n = max;
2479:src/keys.c    **** 	}
2480:src/keys.c    **** 	else if (c == K_DOWN) {
2481:src/keys.c    **** 		if (++n > max)
2482:src/keys.c    **** 			n = -2;
2483:src/keys.c    **** 	}
2484:src/keys.c    **** 	else if (c == K24 /* || c == K60 */) {
2485:src/keys.c    **** 		State2.status = 0;
2486:src/keys.c    **** 		return STATE_UNFINISHED;
2487:src/keys.c    **** 	} 
2488:src/keys.c    **** 	else {
2489:src/keys.c    **** 		int nn = keycode_to_digit_or_register(c) & 0x7f;
ARM GAS  /tmp/ccy15zOt.s 			page 49


2490:src/keys.c    **** 		if (nn <= 9)
2491:src/keys.c    **** 			n = nn;
2492:src/keys.c    **** 		else if (nn == LOCAL_REG_BASE)
2493:src/keys.c    **** 			n = n == max ? 10 : max;
2494:src/keys.c    **** 		else if (nn != NO_REG)
2495:src/keys.c    **** 			n = 10; 
2496:src/keys.c    **** 	}
2497:src/keys.c    **** 	State2.status = n + 3;
2498:src/keys.c    **** 
2499:src/keys.c    **** 	return STATE_UNFINISHED;
2500:src/keys.c    **** }
2501:src/keys.c    **** 
2502:src/keys.c    **** 
2503:src/keys.c    **** /*
2504:src/keys.c    ****  *  CAT helper
2505:src/keys.c    ****  */
2506:src/keys.c    **** static int is_label_or_end_at(unsigned int pc, int search_end) {
 218              		.loc 1 2506 64 is_stmt 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
2507:src/keys.c    **** 	const unsigned int op = getprog(pc);
 222              		.loc 1 2507 2 view .LVU58
2506:src/keys.c    **** 	const unsigned int op = getprog(pc);
 223              		.loc 1 2506 64 is_stmt 0 view .LVU59
 224 0000 10B5     		push	{r4, lr}
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 4, -8
 227              		.cfi_offset 14, -4
2506:src/keys.c    **** 	const unsigned int op = getprog(pc);
 228              		.loc 1 2506 64 view .LVU60
 229 0002 0C46     		mov	r4, r1
 230              		.loc 1 2507 26 view .LVU61
 231 0004 FFF7FEFF 		bl	getprog
 232              	.LVL20:
2508:src/keys.c    **** 
2509:src/keys.c    **** 	return op == (OP_NIL | OP_END) || (!search_end && (isDBL(op) && opDBL(op) == DBL_LBL));
 233              		.loc 1 2509 2 is_stmt 1 view .LVU62
 234              		.loc 1 2509 33 is_stmt 0 view .LVU63
 235 0008 B0F59D7F 		cmp	r0, #314
 236 000c 06D0     		beq	.L21
 237              		.loc 1 2509 53 discriminator 3 view .LVU64
 238 000e 00F47043 		and	r3, r0, #61440
 239              		.loc 1 2509 49 discriminator 3 view .LVU65
 240 0012 B3F5704F 		cmp	r3, #61440
 241 0016 03D0     		beq	.L24
 242              		.loc 1 2509 33 view .LVU66
 243 0018 0020     		movs	r0, #0
 244              	.LVL21:
2510:src/keys.c    **** }
 245              		.loc 1 2510 1 view .LVU67
 246 001a 10BD     		pop	{r4, pc}
 247              	.LVL22:
 248              	.L21:
2509:src/keys.c    **** }
 249              		.loc 1 2509 33 view .LVU68
 250 001c 0120     		movs	r0, #1
ARM GAS  /tmp/ccy15zOt.s 			page 50


 251              	.LVL23:
 252              		.loc 1 2510 1 view .LVU69
 253 001e 10BD     		pop	{r4, pc}
 254              	.LVL24:
 255              	.L24:
2509:src/keys.c    **** }
 256              		.loc 1 2509 66 discriminator 5 view .LVU70
 257 0020 C0F30320 		ubfx	r0, r0, #8, #4
 258              	.LVL25:
2509:src/keys.c    **** }
 259              		.loc 1 2509 63 discriminator 5 view .LVU71
 260 0024 50EA0403 		orrs	r3, r0, r4
 261 0028 0CBF     		ite	eq
 262 002a 0120     		moveq	r0, #1
 263 002c 0020     		movne	r0, #0
 264              		.loc 1 2510 1 discriminator 5 view .LVU72
 265 002e 10BD     		pop	{r4, pc}
 266              		.loc 1 2510 1 discriminator 5 view .LVU73
 267              		.cfi_endproc
 268              	.LFE49:
 270              		.section	.text.advance_to_next_label,"ax",%progbits
 271              		.align	1
 272              		.p2align 2,,3
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv4-sp-d16
 278              	advance_to_next_label:
 279              	.LVL26:
 280              	.LFB50:
2511:src/keys.c    **** 
2512:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end) {
 281              		.loc 1 2512 85 is_stmt 1 view -0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		.loc 1 2512 85 is_stmt 0 view .LVU75
 286 0000 70B5     		push	{r4, r5, r6, lr}
 287              		.cfi_def_cfa_offset 16
 288              		.cfi_offset 4, -16
 289              		.cfi_offset 5, -12
 290              		.cfi_offset 6, -8
 291              		.cfi_offset 14, -4
 292              		.loc 1 2512 85 view .LVU76
 293 0002 0446     		mov	r4, r0
2513:src/keys.c    **** 	do {
 294              		.loc 1 2513 2 is_stmt 1 view .LVU77
2514:src/keys.c    **** 		for (;;) {
 295              		.loc 1 2514 3 view .LVU78
2515:src/keys.c    **** 			if (inc) {
 296              		.loc 1 2515 4 view .LVU79
2512:src/keys.c    **** 	do {
 297              		.loc 1 2512 85 is_stmt 0 view .LVU80
 298 0004 1646     		mov	r6, r2
 299              		.loc 1 2515 7 view .LVU81
 300 0006 21B9     		cbnz	r1, .L29
 301              	.LVL27:
ARM GAS  /tmp/ccy15zOt.s 			page 51


 302              	.L26:
2516:src/keys.c    **** 				pc = do_inc(pc, 0);
2517:src/keys.c    **** 				if (PcWrapped)
2518:src/keys.c    **** 					break;
2519:src/keys.c    **** 			}
2520:src/keys.c    **** 			else
2521:src/keys.c    **** 				inc = 1;
2522:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 303              		.loc 1 2522 4 is_stmt 1 view .LVU82
 304              		.loc 1 2522 8 is_stmt 0 view .LVU83
 305 0008 3146     		mov	r1, r6
 306 000a 2046     		mov	r0, r4
 307              		.loc 1 2522 8 view .LVU84
 308 000c FFF7FEFF 		bl	is_label_or_end_at
 309              	.LVL28:
 310              		.loc 1 2522 7 view .LVU85
 311 0010 B8B9     		cbnz	r0, .L28
 312              	.LVL29:
 313              	.L29:
 314              		.loc 1 2522 7 view .LVU86
 315 0012 0D4D     		ldr	r5, .L37
 316              	.L30:
2516:src/keys.c    **** 				pc = do_inc(pc, 0);
 317              		.loc 1 2516 5 is_stmt 1 view .LVU87
2516:src/keys.c    **** 				pc = do_inc(pc, 0);
 318              		.loc 1 2516 10 is_stmt 0 view .LVU88
 319 0014 2046     		mov	r0, r4
 320 0016 0021     		movs	r1, #0
 321 0018 FFF7FEFF 		bl	do_inc
 322              	.LVL30:
2517:src/keys.c    **** 					break;
 323              		.loc 1 2517 8 view .LVU89
 324 001c 2B68     		ldr	r3, [r5]
2516:src/keys.c    **** 				pc = do_inc(pc, 0);
 325              		.loc 1 2516 10 view .LVU90
 326 001e 0446     		mov	r4, r0
 327              	.LVL31:
2517:src/keys.c    **** 					break;
 328              		.loc 1 2517 5 is_stmt 1 view .LVU91
2517:src/keys.c    **** 					break;
 329              		.loc 1 2517 8 is_stmt 0 view .LVU92
 330 0020 002B     		cmp	r3, #0
 331 0022 F1D0     		beq	.L26
2523:src/keys.c    **** 				return pc;
2524:src/keys.c    **** 			}
2525:src/keys.c    **** 		}
2526:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) + 1) & 3);
 332              		.loc 1 2526 3 is_stmt 1 view .LVU93
 333              		.loc 1 2526 8 is_stmt 0 view .LVU94
 334 0024 20F47F54 		bic	r4, r0, #16320
 335 0028 24F03F04 		bic	r4, r4, #63
 336 002c 04F58044 		add	r4, r4, #16384
 337 0030 A4B2     		uxth	r4, r4
 338              		.loc 1 2526 6 view .LVU95
 339 0032 44F00104 		orr	r4, r4, #1
 340              	.LVL32:
2527:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
ARM GAS  /tmp/ccy15zOt.s 			page 52


 341              		.loc 1 2527 10 is_stmt 1 view .LVU96
 342              		.loc 1 2527 13 is_stmt 0 view .LVU97
 343 0036 2046     		mov	r0, r4
 344 0038 3146     		mov	r1, r6
 345 003a FFF7FEFF 		bl	is_label_or_end_at
 346              	.LVL33:
 347              		.loc 1 2527 2 view .LVU98
 348 003e 0028     		cmp	r0, #0
 349 0040 E8D0     		beq	.L30
 350              	.L28:
2528:src/keys.c    **** 	return pc;
2529:src/keys.c    **** }
 351              		.loc 1 2529 1 view .LVU99
 352 0042 2046     		mov	r0, r4
 353 0044 70BD     		pop	{r4, r5, r6, pc}
 354              	.LVL34:
 355              	.L38:
 356              		.loc 1 2529 1 view .LVU100
 357 0046 00BF     		.align	2
 358              	.L37:
 359 0048 00000000 		.word	PcWrapped
 360              		.cfi_endproc
 361              	.LFE50:
 363              		.section	.text.init_cat,"ax",%progbits
 364              		.align	1
 365              		.p2align 2,,3
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu fpv4-sp-d16
 371              	init_cat:
 372              	.LVL35:
 373              	.LFB12:
 514:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 374              		.loc 1 514 43 is_stmt 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 515:src/keys.c    **** 		// Save last catalogue for a later restore
 378              		.loc 1 515 2 view .LVU102
 514:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 379              		.loc 1 514 43 is_stmt 0 view .LVU103
 380 0000 38B5     		push	{r3, r4, r5, lr}
 381              		.cfi_def_cfa_offset 16
 382              		.cfi_offset 3, -16
 383              		.cfi_offset 4, -12
 384              		.cfi_offset 5, -8
 385              		.cfi_offset 14, -4
 515:src/keys.c    **** 		// Save last catalogue for a later restore
 386              		.loc 1 515 37 view .LVU104
 387 0002 384C     		ldr	r4, .L58
 515:src/keys.c    **** 		// Save last catalogue for a later restore
 388              		.loc 1 515 5 view .LVU105
 389 0004 0546     		mov	r5, r0
 390 0006 D0B9     		cbnz	r0, .L40
 515:src/keys.c    **** 		// Save last catalogue for a later restore
 391              		.loc 1 515 37 discriminator 1 view .LVU106
ARM GAS  /tmp/ccy15zOt.s 			page 53


 392 0008 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 515:src/keys.c    **** 		// Save last catalogue for a later restore
 393              		.loc 1 515 28 discriminator 1 view .LVU107
 394 000a 43B1     		cbz	r3, .L41
 517:src/keys.c    **** 		CmdLineLength = 0;
 395              		.loc 1 517 3 is_stmt 1 view .LVU108
 517:src/keys.c    **** 		CmdLineLength = 0;
 396              		.loc 1 517 18 is_stmt 0 view .LVU109
 397 000c 364A     		ldr	r2, .L58+4
 518:src/keys.c    **** 	}
 398              		.loc 1 518 17 view .LVU110
 399 000e 2077     		strb	r0, [r4, #28]
 517:src/keys.c    **** 		CmdLineLength = 0;
 400              		.loc 1 517 18 view .LVU111
 401 0010 1268     		ldr	r2, [r2]
 402 0012 92F8DC17 		ldrb	r1, [r2, #2012]	@ zero_extendqisi2
 403 0016 63F30401 		bfi	r1, r3, #0, #5
 404 001a 82F8DC17 		strb	r1, [r2, #2012]
 518:src/keys.c    **** 	}
 405              		.loc 1 518 3 is_stmt 1 view .LVU112
 406              	.L41:
 520:src/keys.c    **** 
 407              		.loc 1 520 2 view .LVU113
 408 001e FFF7FEFF 		bl	process_cmdline
 409              	.LVL36:
 522:src/keys.c    **** 	State2.registerlist = 0;
 410              		.loc 1 522 2 view .LVU114
 523:src/keys.c    **** 	State2.status = 0;
 411              		.loc 1 523 2 view .LVU115
 524:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 412              		.loc 1 524 2 view .LVU116
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 413              		.loc 1 549 16 is_stmt 0 view .LVU117
 414 0022 6369     		ldr	r3, [r4, #20]
 415 0024 23F04063 		bic	r3, r3, #201326592
 416 0028 23F40073 		bic	r3, r3, #512
 524:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 417              		.loc 1 524 16 view .LVU118
 418 002c 0022     		movs	r2, #0
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 419              		.loc 1 549 16 view .LVU119
 420 002e 6361     		str	r3, [r4, #20]
 524:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 421              		.loc 1 524 16 view .LVU120
 422 0030 2273     		strb	r2, [r4, #12]
 525:src/keys.c    **** 
 423              		.loc 1 525 2 is_stmt 1 view .LVU121
 527:src/keys.c    **** 	case CATALOGUE_LABELS:
 424              		.loc 1 527 2 view .LVU122
 548:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 425              		.loc 1 548 3 view .LVU123
 548:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 426              		.loc 1 548 20 is_stmt 0 view .LVU124
 427 0032 A273     		strb	r2, [r4, #14]
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 428              		.loc 1 549 3 is_stmt 1 view .LVU125
 550:src/keys.c    **** 			// Different catalogue, reset position
ARM GAS  /tmp/ccy15zOt.s 			page 54


 429              		.loc 1 550 3 view .LVU126
 555:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 430              		.loc 1 555 2 view .LVU127
 431              	.LBB232:
 432              	.LBI232:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 433              		.loc 1 102 13 view .LVU128
 434              	.LBE232:
 103:src/keys.c    **** }
 435              		.loc 1 103 2 view .LVU129
 436              	.LVL37:
 437              	.LBB249:
 438              	.LBB233:
 439              	.LBI233:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 440              		.loc 1 92 20 view .LVU130
 441              	.LBB234:
  93:src/keys.c    **** 	State2.shifts = shift;
 442              		.loc 1 93 2 view .LVU131
 443              	.LBB235:
 444              	.LBI235:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 445              		.loc 1 84 13 view .LVU132
 446              	.LBB236:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 447              		.loc 1 85 2 view .LVU133
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 448              		.loc 1 85 18 is_stmt 0 view .LVU134
 449 0034 FFF7FEFF 		bl	shift_down
 450              	.LVL38:
  86:src/keys.c    **** }
 451              		.loc 1 86 2 is_stmt 1 view .LVU135
 452              	.LBE236:
 453              	.LBE235:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 454              		.loc 1 94 2 view .LVU136
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 455              		.loc 1 94 16 is_stmt 0 view .LVU137
 456 0038 0023     		movs	r3, #0
 457 003a 2374     		strb	r3, [r4, #16]
  96:src/keys.c    **** }
 458              		.loc 1 96 2 is_stmt 1 view .LVU138
 459              	.LVL39:
  96:src/keys.c    **** }
 460              		.loc 1 96 2 is_stmt 0 view .LVU139
 461              	.LBE234:
 462              	.LBE233:
 463              	.LBE249:
 559:src/keys.c    **** 
 464              		.loc 1 559 1 view .LVU140
 465 003c 38BD     		pop	{r3, r4, r5, pc}
 466              	.LVL40:
 467              	.L40:
 520:src/keys.c    **** 
 468              		.loc 1 520 2 is_stmt 1 view .LVU141
 469 003e FFF7FEFF 		bl	process_cmdline
 470              	.LVL41:
ARM GAS  /tmp/ccy15zOt.s 			page 55


 522:src/keys.c    **** 	State2.registerlist = 0;
 471              		.loc 1 522 2 view .LVU142
 523:src/keys.c    **** 	State2.status = 0;
 472              		.loc 1 523 2 view .LVU143
 522:src/keys.c    **** 	State2.registerlist = 0;
 473              		.loc 1 522 19 is_stmt 0 view .LVU144
 474 0042 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 524:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 475              		.loc 1 524 16 view .LVU145
 476 0044 0022     		movs	r2, #0
 522:src/keys.c    **** 	State2.registerlist = 0;
 477              		.loc 1 522 19 view .LVU146
 478 0046 23F00C03 		bic	r3, r3, #12
 527:src/keys.c    **** 	case CATALOGUE_LABELS:
 479              		.loc 1 527 2 view .LVU147
 480 004a 162D     		cmp	r5, #22
 522:src/keys.c    **** 	State2.registerlist = 0;
 481              		.loc 1 522 19 view .LVU148
 482 004c E375     		strb	r3, [r4, #23]
 524:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 483              		.loc 1 524 2 is_stmt 1 view .LVU149
 524:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 484              		.loc 1 524 16 is_stmt 0 view .LVU150
 485 004e 2273     		strb	r2, [r4, #12]
 525:src/keys.c    **** 
 486              		.loc 1 525 2 is_stmt 1 view .LVU151
 525:src/keys.c    **** 
 487              		.loc 1 525 19 is_stmt 0 view .LVU152
 488 0050 A273     		strb	r2, [r4, #14]
 527:src/keys.c    **** 	case CATALOGUE_LABELS:
 489              		.loc 1 527 2 is_stmt 1 view .LVU153
 490 0052 1BD0     		beq	.L42
 491 0054 172D     		cmp	r5, #23
 492 0056 06D1     		bne	.L56
 543:src/keys.c    **** 		break;
 493              		.loc 1 543 3 view .LVU154
 543:src/keys.c    **** 		break;
 494              		.loc 1 543 17 is_stmt 0 view .LVU155
 495 0058 0123     		movs	r3, #1
 496 005a 2373     		strb	r3, [r4, #12]
 544:src/keys.c    **** 
 497              		.loc 1 544 3 is_stmt 1 view .LVU156
 555:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 498              		.loc 1 555 2 view .LVU157
 499              	.LBB250:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 500              		.loc 1 102 13 view .LVU158
 501              	.LBE250:
 103:src/keys.c    **** }
 502              		.loc 1 103 2 view .LVU159
 503              	.LVL42:
 504              	.LBB251:
 505              	.LBB246:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 506              		.loc 1 92 20 view .LVU160
 507              	.LBB243:
  93:src/keys.c    **** 	State2.shifts = shift;
ARM GAS  /tmp/ccy15zOt.s 			page 56


 508              		.loc 1 93 2 view .LVU161
 509              	.LBB240:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 510              		.loc 1 84 13 view .LVU162
 511              	.LBB237:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 512              		.loc 1 85 2 view .LVU163
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 513              		.loc 1 85 18 is_stmt 0 view .LVU164
 514 005c FFF7FEFF 		bl	shift_down
 515              	.LVL43:
  86:src/keys.c    **** }
 516              		.loc 1 86 2 is_stmt 1 view .LVU165
 517              	.LBE237:
 518              	.LBE240:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 519              		.loc 1 94 2 view .LVU166
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 520              		.loc 1 94 16 is_stmt 0 view .LVU167
 521 0060 0023     		movs	r3, #0
 522 0062 2374     		strb	r3, [r4, #16]
  96:src/keys.c    **** }
 523              		.loc 1 96 2 is_stmt 1 view .LVU168
 524              	.LVL44:
  96:src/keys.c    **** }
 525              		.loc 1 96 2 is_stmt 0 view .LVU169
 526              	.LBE243:
 527              	.LBE246:
 528              	.LBE251:
 559:src/keys.c    **** 
 529              		.loc 1 559 1 view .LVU170
 530 0064 38BD     		pop	{r3, r4, r5, pc}
 531              	.L56:
 527:src/keys.c    **** 	case CATALOGUE_LABELS:
 532              		.loc 1 527 2 view .LVU171
 533 0066 152D     		cmp	r5, #21
 534 0068 1CD1     		bne	.L44
 530:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 535              		.loc 1 530 3 is_stmt 1 view .LVU172
 531:src/keys.c    **** 		break;
 536              		.loc 1 531 41 is_stmt 0 view .LVU173
 537 006a 1F49     		ldr	r1, .L58+4
 530:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 538              		.loc 1 530 20 view .LVU174
 539 006c DBB2     		uxtb	r3, r3
 531:src/keys.c    **** 		break;
 540              		.loc 1 531 41 view .LVU175
 541 006e 0968     		ldr	r1, [r1]
 530:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 542              		.loc 1 530 20 view .LVU176
 543 0070 43F00403 		orr	r3, r3, #4
 544 0074 E375     		strb	r3, [r4, #23]
 531:src/keys.c    **** 		break;
 545              		.loc 1 531 3 is_stmt 1 view .LVU177
 531:src/keys.c    **** 		break;
 546              		.loc 1 531 19 is_stmt 0 view .LVU178
 547 0076 B1F8EC07 		ldrh	r0, [r1, #2028]
ARM GAS  /tmp/ccy15zOt.s 			page 57


 548 007a 1146     		mov	r1, r2
 549 007c FFF7FEFF 		bl	advance_to_next_label
 550              	.LVL45:
 531:src/keys.c    **** 		break;
 551              		.loc 1 531 17 view .LVU179
 552 0080 2081     		strh	r0, [r4, #8]	@ movhi
 532:src/keys.c    **** 	
 553              		.loc 1 532 3 is_stmt 1 view .LVU180
 554              	.L45:
 555:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 555              		.loc 1 555 2 view .LVU181
 556              	.LBB252:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 557              		.loc 1 102 13 view .LVU182
 558              	.LBE252:
 103:src/keys.c    **** }
 559              		.loc 1 103 2 view .LVU183
 560              	.LVL46:
 561              	.LBB253:
 562              	.LBB247:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 563              		.loc 1 92 20 view .LVU184
 564              	.LBB244:
  93:src/keys.c    **** 	State2.shifts = shift;
 565              		.loc 1 93 2 view .LVU185
 566              	.LBB241:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 567              		.loc 1 84 13 view .LVU186
 568              	.LBB238:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 569              		.loc 1 85 2 view .LVU187
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 570              		.loc 1 85 18 is_stmt 0 view .LVU188
 571 0082 FFF7FEFF 		bl	shift_down
 572              	.LVL47:
  86:src/keys.c    **** }
 573              		.loc 1 86 2 is_stmt 1 view .LVU189
 574              	.LBE238:
 575              	.LBE241:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 576              		.loc 1 94 2 view .LVU190
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 577              		.loc 1 94 16 is_stmt 0 view .LVU191
 578 0086 0023     		movs	r3, #0
 579 0088 2374     		strb	r3, [r4, #16]
  96:src/keys.c    **** }
 580              		.loc 1 96 2 is_stmt 1 view .LVU192
 581              	.LVL48:
  96:src/keys.c    **** }
 582              		.loc 1 96 2 is_stmt 0 view .LVU193
 583              	.LBE244:
 584              	.LBE247:
 585              	.LBE253:
 559:src/keys.c    **** 
 586              		.loc 1 559 1 view .LVU194
 587 008a 38BD     		pop	{r3, r4, r5, pc}
 588              	.L42:
ARM GAS  /tmp/ccy15zOt.s 			page 58


 536:src/keys.c    **** 		State2.digval = regX_idx;
 589              		.loc 1 536 3 is_stmt 1 view .LVU195
 536:src/keys.c    **** 		State2.digval = regX_idx;
 590              		.loc 1 536 23 is_stmt 0 view .LVU196
 591 008c E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 538:src/keys.c    **** 		break;
 592              		.loc 1 538 18 view .LVU197
 593 008e A272     		strb	r2, [r4, #10]
 536:src/keys.c    **** 		State2.digval = regX_idx;
 594              		.loc 1 536 23 view .LVU198
 595 0090 43F00803 		orr	r3, r3, #8
 537:src/keys.c    **** 		State2.digval2 = 0;
 596              		.loc 1 537 17 view .LVU199
 597 0094 6422     		movs	r2, #100
 536:src/keys.c    **** 		State2.digval = regX_idx;
 598              		.loc 1 536 23 view .LVU200
 599 0096 E375     		strb	r3, [r4, #23]
 537:src/keys.c    **** 		State2.digval2 = 0;
 600              		.loc 1 537 3 is_stmt 1 view .LVU201
 537:src/keys.c    **** 		State2.digval2 = 0;
 601              		.loc 1 537 17 is_stmt 0 view .LVU202
 602 0098 2281     		strh	r2, [r4, #8]	@ movhi
 538:src/keys.c    **** 		break;
 603              		.loc 1 538 3 is_stmt 1 view .LVU203
 539:src/keys.c    **** 
 604              		.loc 1 539 3 view .LVU204
 555:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 605              		.loc 1 555 2 view .LVU205
 606              	.LBB254:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 607              		.loc 1 102 13 view .LVU206
 608              	.LBE254:
 103:src/keys.c    **** }
 609              		.loc 1 103 2 view .LVU207
 610              	.LVL49:
 611              	.LBB255:
 612              	.LBB248:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 613              		.loc 1 92 20 view .LVU208
 614              	.LBB245:
  93:src/keys.c    **** 	State2.shifts = shift;
 615              		.loc 1 93 2 view .LVU209
 616              	.LBB242:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 617              		.loc 1 84 13 view .LVU210
 618              	.LBB239:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 619              		.loc 1 85 2 view .LVU211
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 620              		.loc 1 85 18 is_stmt 0 view .LVU212
 621 009a FFF7FEFF 		bl	shift_down
 622              	.LVL50:
  86:src/keys.c    **** }
 623              		.loc 1 86 2 is_stmt 1 view .LVU213
 624              	.LBE239:
 625              	.LBE242:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
ARM GAS  /tmp/ccy15zOt.s 			page 59


 626              		.loc 1 94 2 view .LVU214
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 627              		.loc 1 94 16 is_stmt 0 view .LVU215
 628 009e 0023     		movs	r3, #0
 629 00a0 2374     		strb	r3, [r4, #16]
  96:src/keys.c    **** }
 630              		.loc 1 96 2 is_stmt 1 view .LVU216
 631              	.LVL51:
  96:src/keys.c    **** }
 632              		.loc 1 96 2 is_stmt 0 view .LVU217
 633              	.LBE245:
 634              	.LBE248:
 635              	.LBE255:
 559:src/keys.c    **** 
 636              		.loc 1 559 1 view .LVU218
 637 00a2 38BD     		pop	{r3, r4, r5, pc}
 638              	.L44:
 548:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 639              		.loc 1 548 3 is_stmt 1 view .LVU219
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 640              		.loc 1 549 44 is_stmt 0 view .LVU220
 641 00a4 022D     		cmp	r5, #2
 548:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 642              		.loc 1 548 20 view .LVU221
 643 00a6 A573     		strb	r5, [r4, #14]
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 644              		.loc 1 549 3 is_stmt 1 view .LVU222
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 645              		.loc 1 549 44 is_stmt 0 view .LVU223
 646 00a8 12D1     		bne	.L57
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 647              		.loc 1 549 16 view .LVU224
 648 00aa 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 649 00ac 43F00203 		orr	r3, r3, #2
 650 00b0 6375     		strb	r3, [r4, #21]
 550:src/keys.c    **** 			// Different catalogue, reset position
 651              		.loc 1 550 3 is_stmt 1 view .LVU225
 652              	.L49:
 550:src/keys.c    **** 			// Different catalogue, reset position
 653              		.loc 1 550 32 is_stmt 0 discriminator 1 view .LVU226
 654 00b2 0D4B     		ldr	r3, .L58+4
 655 00b4 1A68     		ldr	r2, [r3]
 550:src/keys.c    **** 			// Different catalogue, reset position
 656              		.loc 1 550 37 discriminator 1 view .LVU227
 657 00b6 92F8DC37 		ldrb	r3, [r2, #2012]	@ zero_extendqisi2
 550:src/keys.c    **** 			// Different catalogue, reset position
 658              		.loc 1 550 29 discriminator 1 view .LVU228
 659 00ba 03F01F03 		and	r3, r3, #31
 660 00be AB42     		cmp	r3, r5
 661 00c0 DFD0     		beq	.L45
 552:src/keys.c    **** 		}
 662              		.loc 1 552 4 is_stmt 1 view .LVU229
 552:src/keys.c    **** 		}
 663              		.loc 1 552 17 is_stmt 0 view .LVU230
 664 00c2 B2F8DC37 		ldrh	r3, [r2, #2012]
 665 00c6 6FF34B13 		bfc	r3, #5, #7
 666 00ca A2F8DC37 		strh	r3, [r2, #2012]	@ movhi
ARM GAS  /tmp/ccy15zOt.s 			page 60


 667 00ce D8E7     		b	.L45
 668              	.L57:
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 669              		.loc 1 549 44 view .LVU231
 670 00d0 A5F11101 		sub	r1, r5, #17
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 671              		.loc 1 549 16 view .LVU232
 672 00d4 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 673              		.loc 1 549 44 view .LVU233
 674 00d6 4A42     		rsbs	r2, r1, #0
 675 00d8 4A41     		adcs	r2, r2, r1
 549:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 676              		.loc 1 549 16 view .LVU234
 677 00da 62F34103 		bfi	r3, r2, #1, #1
 678 00de 6375     		strb	r3, [r4, #21]
 550:src/keys.c    **** 			// Different catalogue, reset position
 679              		.loc 1 550 3 is_stmt 1 view .LVU235
 680 00e0 E7E7     		b	.L49
 681              	.L59:
 682 00e2 00BF     		.align	2
 683              	.L58:
 684 00e4 00000000 		.word	StateWhileOn
 685 00e8 00000000 		.word	main_ram
 686              		.cfi_endproc
 687              	.LFE12:
 689              		.section	.text.advance_to_previous_label,"ax",%progbits
 690              		.align	1
 691              		.p2align 2,,3
 692              		.syntax unified
 693              		.thumb
 694              		.thumb_func
 695              		.fpu fpv4-sp-d16
 697              	advance_to_previous_label:
 698              	.LVL52:
 699              	.LFB51:
2530:src/keys.c    **** 
2531:src/keys.c    **** static unsigned int advance_to_previous_label(unsigned int pc, int search_end) {
 700              		.loc 1 2531 80 view -0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704              		.loc 1 2531 80 is_stmt 0 view .LVU237
 705 0000 70B5     		push	{r4, r5, r6, lr}
 706              		.cfi_def_cfa_offset 16
 707              		.cfi_offset 4, -16
 708              		.cfi_offset 5, -12
 709              		.cfi_offset 6, -8
 710              		.cfi_offset 14, -4
 711 0002 124E     		ldr	r6, .L69
 712              		.loc 1 2531 80 view .LVU238
 713 0004 0446     		mov	r4, r0
 714 0006 0D46     		mov	r5, r1
 715              	.LVL53:
 716              	.L61:
2532:src/keys.c    **** 	do {
 717              		.loc 1 2532 2 is_stmt 1 view .LVU239
ARM GAS  /tmp/ccy15zOt.s 			page 61


2533:src/keys.c    **** 		for (;;) {
 718              		.loc 1 2533 3 view .LVU240
2534:src/keys.c    **** 			pc = do_dec(pc, 0);
 719              		.loc 1 2534 4 view .LVU241
 720              		.loc 1 2534 9 is_stmt 0 view .LVU242
 721 0008 2046     		mov	r0, r4
 722 000a 0021     		movs	r1, #0
 723 000c FFF7FEFF 		bl	do_dec
 724              	.LVL54:
2535:src/keys.c    **** 			if (PcWrapped)
2536:src/keys.c    **** 				break;
2537:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 725              		.loc 1 2537 4 is_stmt 1 view .LVU243
2538:src/keys.c    **** 				return pc;
2539:src/keys.c    **** 			}
2540:src/keys.c    **** 		}
2541:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) - 1) & 3);
 726              		.loc 1 2541 3 view .LVU244
 727              		.loc 1 2541 8 is_stmt 0 view .LVU245
 728 0010 20F47F53 		bic	r3, r0, #16320
 729 0014 23F03F03 		bic	r3, r3, #63
2535:src/keys.c    **** 			if (PcWrapped)
 730              		.loc 1 2535 7 view .LVU246
 731 0018 3268     		ldr	r2, [r6]
 732              		.loc 1 2541 8 view .LVU247
 733 001a A3F58043 		sub	r3, r3, #16384
2542:src/keys.c    **** 		pc = do_dec(pc, 0);
 734              		.loc 1 2542 8 view .LVU248
 735 001e 0021     		movs	r1, #0
2534:src/keys.c    **** 			if (PcWrapped)
 736              		.loc 1 2534 9 view .LVU249
 737 0020 0446     		mov	r4, r0
 738              	.LVL55:
2535:src/keys.c    **** 				break;
 739              		.loc 1 2535 4 is_stmt 1 view .LVU250
2541:src/keys.c    **** 		pc = do_dec(pc, 0);
 740              		.loc 1 2541 8 is_stmt 0 view .LVU251
 741 0022 9BB2     		uxth	r3, r3
 742              	.LVL56:
 743              		.loc 1 2542 3 is_stmt 1 view .LVU252
2535:src/keys.c    **** 				break;
 744              		.loc 1 2535 7 is_stmt 0 view .LVU253
 745 0024 32B9     		cbnz	r2, .L62
2537:src/keys.c    **** 				return pc;
 746              		.loc 1 2537 8 view .LVU254
 747 0026 2946     		mov	r1, r5
 748 0028 FFF7FEFF 		bl	is_label_or_end_at
 749              	.LVL57:
2537:src/keys.c    **** 				return pc;
 750              		.loc 1 2537 7 view .LVU255
 751 002c 0028     		cmp	r0, #0
 752 002e EBD0     		beq	.L61
2543:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
2544:src/keys.c    **** 	return pc;
2545:src/keys.c    **** }
 753              		.loc 1 2545 1 view .LVU256
 754 0030 2046     		mov	r0, r4
ARM GAS  /tmp/ccy15zOt.s 			page 62


 755 0032 70BD     		pop	{r4, r5, r6, pc}
 756              	.LVL58:
 757              	.L62:
2542:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 758              		.loc 1 2542 8 view .LVU257
 759 0034 43F00100 		orr	r0, r3, #1
 760 0038 FFF7FEFF 		bl	do_dec
 761              	.LVL59:
2543:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 762              		.loc 1 2543 13 view .LVU258
 763 003c 2946     		mov	r1, r5
2542:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 764              		.loc 1 2542 8 view .LVU259
 765 003e 0446     		mov	r4, r0
 766              	.LVL60:
2543:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 767              		.loc 1 2543 10 is_stmt 1 view .LVU260
2543:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 768              		.loc 1 2543 13 is_stmt 0 view .LVU261
 769 0040 FFF7FEFF 		bl	is_label_or_end_at
 770              	.LVL61:
2543:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 771              		.loc 1 2543 2 view .LVU262
 772 0044 0028     		cmp	r0, #0
 773 0046 DFD0     		beq	.L61
 774              		.loc 1 2545 1 view .LVU263
 775 0048 2046     		mov	r0, r4
 776 004a 70BD     		pop	{r4, r5, r6, pc}
 777              	.LVL62:
 778              	.L70:
 779              		.loc 1 2545 1 view .LVU264
 780              		.align	2
 781              	.L69:
 782 004c 00000000 		.word	PcWrapped
 783              		.cfi_endproc
 784              	.LFE51:
 786              		.section	.text.check_confirm.part.0,"ax",%progbits
 787              		.align	1
 788              		.p2align 2,,3
 789              		.syntax unified
 790              		.thumb
 791              		.thumb_func
 792              		.fpu fpv4-sp-d16
 794              	check_confirm.part.0:
 795              	.LVL63:
 796              	.LFB59:
 619:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 797              		.loc 1 619 12 is_stmt 1 view -0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801              		@ link register save eliminated.
 802              	.LBB256:
 621:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 803              		.loc 1 621 3 view .LVU266
 622:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 804              		.loc 1 622 3 view .LVU267
ARM GAS  /tmp/ccy15zOt.s 			page 63


 621:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 805              		.loc 1 621 13 is_stmt 0 view .LVU268
 806 0000 C3B2     		uxtb	r3, r0
 622:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 807              		.loc 1 622 25 view .LVU269
 808 0002 A3F14102 		sub	r2, r3, #65
 622:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 809              		.loc 1 622 6 view .LVU270
 810 0006 032A     		cmp	r2, #3
 811 0008 06D9     		bls	.L74
 630:src/keys.c    **** #endif
 812              		.loc 1 630 7 is_stmt 1 view .LVU271
 630:src/keys.c    **** #endif
 813              		.loc 1 630 29 is_stmt 0 view .LVU272
 814 000a AD3B     		subs	r3, r3, #173
 630:src/keys.c    **** #endif
 815              		.loc 1 630 10 view .LVU273
 816 000c 052B     		cmp	r3, #5
 817 000e 02D8     		bhi	.L73
 640:src/keys.c    **** 		}
 818              		.loc 1 640 4 is_stmt 1 view .LVU274
 640:src/keys.c    **** 		}
 819              		.loc 1 640 20 is_stmt 0 view .LVU275
 820 0010 054B     		ldr	r3, .L75
 821 0012 0122     		movs	r2, #1
 822 0014 1A60     		str	r2, [r3]
 823              	.L73:
 824              	.LBE256:
 644:src/keys.c    **** 
 825              		.loc 1 644 1 view .LVU276
 826 0016 7047     		bx	lr
 827              	.L74:
 828              	.LBB257:
 623:src/keys.c    **** 			return STATE_UNFINISHED;
 829              		.loc 1 623 4 is_stmt 1 view .LVU277
 623:src/keys.c    **** 			return STATE_UNFINISHED;
 830              		.loc 1 623 19 is_stmt 0 view .LVU278
 831 0018 044B     		ldr	r3, .L75+4
 832 001a 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
 623:src/keys.c    **** 			return STATE_UNFINISHED;
 833              		.loc 1 623 35 view .LVU279
 834 001c 4038     		subs	r0, r0, #64
 835              	.LVL64:
 623:src/keys.c    **** 			return STATE_UNFINISHED;
 836              		.loc 1 623 19 view .LVU280
 837 001e 60F30202 		bfi	r2, r0, #0, #3
 838 0022 1A75     		strb	r2, [r3, #20]
 624:src/keys.c    **** 		}
 839              		.loc 1 624 4 is_stmt 1 view .LVU281
 624:src/keys.c    **** 		}
 840              		.loc 1 624 11 is_stmt 0 view .LVU282
 841 0024 3320     		movs	r0, #51
 842              	.LVL65:
 624:src/keys.c    **** 		}
 843              		.loc 1 624 11 view .LVU283
 844 0026 7047     		bx	lr
 845              	.L76:
ARM GAS  /tmp/ccy15zOt.s 			page 64


 846              		.align	2
 847              	.L75:
 848 0028 00000000 		.word	NonProgrammable
 849 002c 00000000 		.word	StateWhileOn
 850              	.LBE257:
 851              		.cfi_endproc
 852              	.LFE59:
 854              		.section	.text.init_arg.part.0,"ax",%progbits
 855              		.align	1
 856              		.p2align 2,,3
 857              		.syntax unified
 858              		.thumb
 859              		.thumb_func
 860              		.fpu fpv4-sp-d16
 862              	init_arg.part.0:
 863              	.LVL66:
 864              	.LFB61:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 865              		.loc 1 501 13 is_stmt 1 view -0
 866              		.cfi_startproc
 867              		@ args = 0, pretend = 0, frame = 0
 868              		@ frame_needed = 0, uses_anonymous_args = 0
 869              		@ link register save eliminated.
 504:src/keys.c    **** 	State2.ind = 0;
 870              		.loc 1 504 2 view .LVU285
 504:src/keys.c    **** 	State2.ind = 0;
 871              		.loc 1 504 10 is_stmt 0 view .LVU286
 872 0000 084B     		ldr	r3, .L78
 509:src/keys.c    **** 	State2.local = 0;
 873              		.loc 1 509 13 view .LVU287
 874 0002 5969     		ldr	r1, [r3, #20]
 504:src/keys.c    **** 	State2.ind = 0;
 875              		.loc 1 504 10 view .LVU288
 876 0004 D877     		strb	r0, [r3, #31]
 505:src/keys.c    **** 	State2.digval = 0;
 877              		.loc 1 505 2 is_stmt 1 view .LVU289
 506:src/keys.c    **** 	State2.numdigit = 0;
 878              		.loc 1 506 2 view .LVU290
 509:src/keys.c    **** 	State2.local = 0;
 879              		.loc 1 509 13 is_stmt 0 view .LVU291
 880 0006 21F40F11 		bic	r1, r1, #2342912
 881 000a 8628     		cmp	r0, #134
 882 000c 0CBF     		ite	eq
 883 000e 4FF40812 		moveq	r2, #2228224
 884 0012 4FF40012 		movne	r2, #2097152
 885 0016 0A43     		orrs	r2, r2, r1
 506:src/keys.c    **** 	State2.numdigit = 0;
 886              		.loc 1 506 16 view .LVU292
 887 0018 0021     		movs	r1, #0
 509:src/keys.c    **** 	State2.local = 0;
 888              		.loc 1 509 13 view .LVU293
 889 001a 5A61     		str	r2, [r3, #20]
 506:src/keys.c    **** 	State2.numdigit = 0;
 890              		.loc 1 506 16 view .LVU294
 891 001c 1981     		strh	r1, [r3, #8]	@ movhi
 507:src/keys.c    **** 	State2.rarg = 1;
 892              		.loc 1 507 2 is_stmt 1 view .LVU295
ARM GAS  /tmp/ccy15zOt.s 			page 65


 507:src/keys.c    **** 	State2.rarg = 1;
 893              		.loc 1 507 18 is_stmt 0 view .LVU296
 894 001e D972     		strb	r1, [r3, #11]
 508:src/keys.c    **** 	State2.dot = 0;
 895              		.loc 1 508 2 is_stmt 1 view .LVU297
 509:src/keys.c    **** 	State2.local = 0;
 896              		.loc 1 509 2 view .LVU298
 510:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 897              		.loc 1 510 2 view .LVU299
 511:src/keys.c    **** }
 898              		.loc 1 511 2 view .LVU300
 512:src/keys.c    **** 
 899              		.loc 1 512 1 is_stmt 0 view .LVU301
 900 0020 7047     		bx	lr
 901              	.L79:
 902 0022 00BF     		.align	2
 903              	.L78:
 904 0024 00000000 		.word	StateWhileOn
 905              		.cfi_endproc
 906              	.LFE61:
 908              		.section	.text.reset_arg,"ax",%progbits
 909              		.align	1
 910              		.p2align 2,,3
 911              		.syntax unified
 912              		.thumb
 913              		.thumb_func
 914              		.fpu fpv4-sp-d16
 916              	reset_arg:
 917              	.LFB29:
1503:src/keys.c    **** 	init_arg((enum rarg) 0);
 918              		.loc 1 1503 29 is_stmt 1 view -0
 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 0
 921              		@ frame_needed = 0, uses_anonymous_args = 0
1504:src/keys.c    **** 	State2.rarg = 0;
 922              		.loc 1 1504 2 view .LVU303
 923              	.LVL67:
 924              	.LBB258:
 925              	.LBI258:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 926              		.loc 1 501 13 view .LVU304
 927              	.LBB259:
 502:src/keys.c    **** 		return;
 928              		.loc 1 502 2 view .LVU305
 929              	.LBE259:
 930              	.LBE258:
1503:src/keys.c    **** 	init_arg((enum rarg) 0);
 931              		.loc 1 1503 29 is_stmt 0 view .LVU306
 932 0000 08B5     		push	{r3, lr}
 933              		.cfi_def_cfa_offset 8
 934              		.cfi_offset 3, -8
 935              		.cfi_offset 14, -4
 936              	.LBB261:
 937              	.LBB260:
 502:src/keys.c    **** 		return;
 938              		.loc 1 502 6 view .LVU307
 939 0002 FFF7FEFF 		bl	is_bad_cmdline
ARM GAS  /tmp/ccy15zOt.s 			page 66


 940              	.LVL68:
 502:src/keys.c    **** 		return;
 941              		.loc 1 502 5 view .LVU308
 942 0006 08B9     		cbnz	r0, .L81
 943 0008 FFF7FEFF 		bl	init_arg.part.0
 944              	.LVL69:
 945              	.L81:
 502:src/keys.c    **** 		return;
 946              		.loc 1 502 5 view .LVU309
 947              	.LBE260:
 948              	.LBE261:
1505:src/keys.c    **** }
 949              		.loc 1 1505 2 is_stmt 1 view .LVU310
1505:src/keys.c    **** }
 950              		.loc 1 1505 14 is_stmt 0 view .LVU311
 951 000c 024B     		ldr	r3, .L83
 952 000e 9A7D     		ldrb	r2, [r3, #22]	@ zero_extendqisi2
 953 0010 6FF34512 		bfc	r2, #5, #1
 954 0014 9A75     		strb	r2, [r3, #22]
1506:src/keys.c    **** 
 955              		.loc 1 1506 1 view .LVU312
 956 0016 08BD     		pop	{r3, pc}
 957              	.L84:
 958              		.align	2
 959              	.L83:
 960 0018 00000000 		.word	StateWhileOn
 961              		.cfi_endproc
 962              	.LFE29:
 964              		.section	.text.arg_eval,"ax",%progbits
 965              		.align	1
 966              		.p2align 2,,3
 967              		.syntax unified
 968              		.thumb
 969              		.thumb_func
 970              		.fpu fpv4-sp-d16
 972              	arg_eval:
 973              	.LVL70:
 974              	.LFB30:
1508:src/keys.c    **** 	const unsigned int base = CmdBase;
 975              		.loc 1 1508 39 is_stmt 1 view -0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 0
 978              		@ frame_needed = 0, uses_anonymous_args = 0
1509:src/keys.c    **** 	int r = RARG(base, val 
 979              		.loc 1 1509 2 view .LVU314
1509:src/keys.c    **** 	int r = RARG(base, val 
 980              		.loc 1 1509 28 is_stmt 0 view .LVU315
 981 0000 1C4B     		ldr	r3, .L106
1508:src/keys.c    **** 	const unsigned int base = CmdBase;
 982              		.loc 1 1508 39 view .LVU316
 983 0002 70B5     		push	{r4, r5, r6, lr}
 984              		.cfi_def_cfa_offset 16
 985              		.cfi_offset 4, -16
 986              		.cfi_offset 5, -12
 987              		.cfi_offset 6, -8
 988              		.cfi_offset 14, -4
1510:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
ARM GAS  /tmp/ccy15zOt.s 			page 67


 989              		.loc 1 1510 10 view .LVU317
 990 0004 9D7D     		ldrb	r5, [r3, #22]	@ zero_extendqisi2
 991 0006 597D     		ldrb	r1, [r3, #21]	@ zero_extendqisi2
1509:src/keys.c    **** 	int r = RARG(base, val 
 992              		.loc 1 1509 21 view .LVU318
 993 0008 DA7F     		ldrb	r2, [r3, #31]	@ zero_extendqisi2
 994              	.LVL71:
1510:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 995              		.loc 1 1510 2 is_stmt 1 view .LVU319
1510:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 996              		.loc 1 1510 10 is_stmt 0 view .LVU320
 997 000a EE07     		lsls	r6, r5, #31
1513:src/keys.c    **** 
 998              		.loc 1 1513 30 view .LVU321
 999 000c 1A4E     		ldr	r6, .L106+4
 1000 000e 3668     		ldr	r6, [r6]
1510:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 1001              		.loc 1 1510 10 view .LVU322
 1002 0010 01F08003 		and	r3, r1, #128
 1003 0014 0344     		add	r3, r3, r0
1513:src/keys.c    **** 
 1004              		.loc 1 1513 30 view .LVU323
 1005 0016 96F8EA67 		ldrb	r6, [r6, #2026]	@ zero_extendqisi2
1510:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 1006              		.loc 1 1510 10 view .LVU324
 1007 001a 02F12004 		add	r4, r2, #32
 1008 001e 48BF     		it	mi
 1009 0020 7033     		addmi	r3, r3, #112
 1010 0022 2402     		lsls	r4, r4, #8
 1011 0024 1C43     		orrs	r4, r4, r3
 1012              	.LVL72:
1513:src/keys.c    **** 
 1013              		.loc 1 1513 2 is_stmt 1 view .LVU325
1513:src/keys.c    **** 
 1014              		.loc 1 1513 77 is_stmt 0 view .LVU326
 1015 0026 3307     		lsls	r3, r6, #28
 1016 0028 1DD5     		bpl	.L92
1513:src/keys.c    **** 
 1017              		.loc 1 1513 77 discriminator 2 view .LVU327
 1018 002a 15F0400F 		tst	r5, #64
 1019 002e 0CBF     		ite	eq
 1020 0030 0425     		moveq	r5, #4
 1021 0032 0825     		movne	r5, #8
 1022              	.L87:
 1023              	.LVL73:
1515:src/keys.c    **** 		/*
 1024              		.loc 1 1515 2 is_stmt 1 discriminator 6 view .LVU328
1515:src/keys.c    **** 		/*
 1025              		.loc 1 1515 5 is_stmt 0 discriminator 6 view .LVU329
 1026 0034 0E06     		lsls	r6, r1, #24
 1027 0036 12D4     		bmi	.L88
1530:src/keys.c    **** 			// Disallow odd complex register > 98
 1028              		.loc 1 1530 3 is_stmt 1 view .LVU330
1530:src/keys.c    **** 			// Disallow odd complex register > 98
 1029              		.loc 1 1530 20 is_stmt 0 view .LVU331
 1030 0038 104B     		ldr	r3, .L106+8
 1031 003a 03EB0213 		add	r3, r3, r2, lsl #4
ARM GAS  /tmp/ccy15zOt.s 			page 68


 1032 003e 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
1530:src/keys.c    **** 			// Disallow odd complex register > 98
 1033              		.loc 1 1530 6 view .LVU332
 1034 0040 D906     		lsls	r1, r3, #27
 1035 0042 09D5     		bpl	.L89
1530:src/keys.c    **** 			// Disallow odd complex register > 98
 1036              		.loc 1 1530 27 discriminator 1 view .LVU333
 1037 0044 6228     		cmp	r0, #98
 1038 0046 07D9     		bls	.L89
1530:src/keys.c    **** 			// Disallow odd complex register > 98
 1039              		.loc 1 1530 52 discriminator 2 view .LVU334
 1040 0048 C307     		lsls	r3, r0, #31
 1041 004a 02D4     		bmi	.L96
1534:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1042              		.loc 1 1534 3 is_stmt 1 view .LVU335
1534:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1043              		.loc 1 1534 28 is_stmt 0 view .LVU336
 1044 004c 223A     		subs	r2, r2, #34
 1045              	.LVL74:
1534:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1046              		.loc 1 1534 6 view .LVU337
 1047 004e 012A     		cmp	r2, #1
 1048 0050 05D8     		bhi	.L88
 1049              	.LVL75:
 1050              	.L96:
1532:src/keys.c    **** #endif
 1051              		.loc 1 1532 11 view .LVU338
 1052 0052 3324     		movs	r4, #51
 1053              	.LVL76:
1541:src/keys.c    **** 
 1054              		.loc 1 1541 1 view .LVU339
 1055 0054 2046     		mov	r0, r4
 1056              	.LVL77:
1541:src/keys.c    **** 
 1057              		.loc 1 1541 1 view .LVU340
 1058 0056 70BD     		pop	{r4, r5, r6, pc}
 1059              	.LVL78:
 1060              	.L89:
1534:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1061              		.loc 1 1534 3 is_stmt 1 view .LVU341
1534:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1062              		.loc 1 1534 28 is_stmt 0 view .LVU342
 1063 0058 223A     		subs	r2, r2, #34
 1064              	.LVL79:
1534:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1065              		.loc 1 1534 6 view .LVU343
 1066 005a 012A     		cmp	r2, #1
 1067 005c 05D9     		bls	.L105
 1068              	.LVL80:
 1069              	.L88:
1539:src/keys.c    **** 	return r;
 1070              		.loc 1 1539 2 is_stmt 1 view .LVU344
 1071 005e FFF7FEFF 		bl	reset_arg
 1072              	.LVL81:
1540:src/keys.c    **** }
 1073              		.loc 1 1540 2 view .LVU345
1541:src/keys.c    **** 
ARM GAS  /tmp/ccy15zOt.s 			page 69


 1074              		.loc 1 1541 1 is_stmt 0 view .LVU346
 1075 0062 2046     		mov	r0, r4
 1076 0064 70BD     		pop	{r4, r5, r6, pc}
 1077              	.LVL82:
 1078              	.L92:
1513:src/keys.c    **** 
 1079              		.loc 1 1513 77 view .LVU347
 1080 0066 0425     		movs	r5, #4
 1081 0068 E4E7     		b	.L87
 1082              	.LVL83:
 1083              	.L105:
1534:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1084              		.loc 1 1534 73 discriminator 1 view .LVU348
 1085 006a C5F16405 		rsb	r5, r5, #100
 1086              	.LVL84:
1534:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 1087              		.loc 1 1534 52 discriminator 1 view .LVU349
 1088 006e 8542     		cmp	r5, r0
 1089 0070 F5D2     		bcs	.L88
 1090 0072 EEE7     		b	.L96
 1091              	.L107:
 1092              		.align	2
 1093              	.L106:
 1094 0074 00000000 		.word	StateWhileOn
 1095 0078 00000000 		.word	main_ram
 1096 007c 00000000 		.word	argcmds
 1097              		.cfi_endproc
 1098              	.LFE30:
 1100              		.section	.text.process_arg_shuffle,"ax",%progbits
 1101              		.align	1
 1102              		.p2align 2,,3
 1103              		.syntax unified
 1104              		.thumb
 1105              		.thumb_func
 1106              		.fpu fpv4-sp-d16
 1108              	process_arg_shuffle:
 1109              	.LVL85:
 1110              	.LFB36:
1655:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1111              		.loc 1 1655 39 is_stmt 1 view -0
 1112              		.cfi_startproc
 1113              		@ args = 0, pretend = 0, frame = 0
 1114              		@ frame_needed = 0, uses_anonymous_args = 0
 1115              		@ link register save eliminated.
1656:src/keys.c    **** 	if (State2.numdigit < 4)
 1116              		.loc 1 1656 2 view .LVU351
1655:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 1117              		.loc 1 1655 39 is_stmt 0 view .LVU352
 1118 0000 10B4     		push	{r4}
 1119              		.cfi_def_cfa_offset 4
 1120              		.cfi_offset 4, -4
1656:src/keys.c    **** 	if (State2.numdigit < 4)
 1121              		.loc 1 1656 31 view .LVU353
 1122 0002 0A4A     		ldr	r2, .L111
 1123 0004 D37A     		ldrb	r3, [r2, #11]	@ zero_extendqisi2
1656:src/keys.c    **** 	if (State2.numdigit < 4)
 1124              		.loc 1 1656 16 view .LVU354
ARM GAS  /tmp/ccy15zOt.s 			page 70


 1125 0006 1189     		ldrh	r1, [r2, #8]
1656:src/keys.c    **** 	if (State2.numdigit < 4)
 1126              		.loc 1 1656 43 view .LVU355
 1127 0008 5C00     		lsls	r4, r3, #1
1656:src/keys.c    **** 	if (State2.numdigit < 4)
 1128              		.loc 1 1656 21 view .LVU356
 1129 000a A040     		lsls	r0, r0, r4
 1130              	.LVL86:
1656:src/keys.c    **** 	if (State2.numdigit < 4)
 1131              		.loc 1 1656 40 view .LVU357
 1132 000c 0133     		adds	r3, r3, #1
 1133 000e DBB2     		uxtb	r3, r3
1656:src/keys.c    **** 	if (State2.numdigit < 4)
 1134              		.loc 1 1656 16 view .LVU358
 1135 0010 0844     		add	r0, r0, r1
 1136 0012 80B2     		uxth	r0, r0
1657:src/keys.c    **** 		return STATE_UNFINISHED;
 1137              		.loc 1 1657 5 view .LVU359
 1138 0014 032B     		cmp	r3, #3
1656:src/keys.c    **** 	if (State2.numdigit < 4)
 1139              		.loc 1 1656 40 view .LVU360
 1140 0016 D372     		strb	r3, [r2, #11]
1656:src/keys.c    **** 	if (State2.numdigit < 4)
 1141              		.loc 1 1656 16 view .LVU361
 1142 0018 1081     		strh	r0, [r2, #8]	@ movhi
1657:src/keys.c    **** 		return STATE_UNFINISHED;
 1143              		.loc 1 1657 2 is_stmt 1 view .LVU362
1657:src/keys.c    **** 		return STATE_UNFINISHED;
 1144              		.loc 1 1657 5 is_stmt 0 view .LVU363
 1145 001a 03D9     		bls	.L109
1659:src/keys.c    **** }
 1146              		.loc 1 1659 2 is_stmt 1 view .LVU364
1660:src/keys.c    **** 
 1147              		.loc 1 1660 1 is_stmt 0 view .LVU365
 1148 001c 5DF8044B 		ldr	r4, [sp], #4
 1149              		.cfi_remember_state
 1150              		.cfi_restore 4
 1151              		.cfi_def_cfa_offset 0
1659:src/keys.c    **** }
 1152              		.loc 1 1659 9 view .LVU366
 1153 0020 FFF7FEBF 		b	arg_eval
 1154              	.LVL87:
 1155              	.L109:
 1156              		.cfi_restore_state
1660:src/keys.c    **** 
 1157              		.loc 1 1660 1 view .LVU367
 1158 0024 3320     		movs	r0, #51
 1159 0026 5DF8044B 		ldr	r4, [sp], #4
 1160              		.cfi_restore 4
 1161              		.cfi_def_cfa_offset 0
 1162 002a 7047     		bx	lr
 1163              	.L112:
 1164              		.align	2
 1165              	.L111:
 1166 002c 00000000 		.word	StateWhileOn
 1167              		.cfi_endproc
 1168              	.LFE36:
ARM GAS  /tmp/ccy15zOt.s 			page 71


 1170              		.section	.text.arg_digit,"ax",%progbits
 1171              		.align	1
 1172              		.p2align 2,,3
 1173              		.syntax unified
 1174              		.thumb
 1175              		.thumb_func
 1176              		.fpu fpv4-sp-d16
 1178              	arg_digit:
 1179              	.LVL88:
 1180              	.LFB31:
1543:src/keys.c    **** 	int lim;
 1181              		.loc 1 1543 29 is_stmt 1 view -0
 1182              		.cfi_startproc
 1183              		@ args = 0, pretend = 0, frame = 0
 1184              		@ frame_needed = 0, uses_anonymous_args = 0
1544:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
 1185              		.loc 1 1544 2 view .LVU369
1549:src/keys.c    **** #endif
 1186              		.loc 1 1549 2 view .LVU370
1543:src/keys.c    **** 	int lim;
 1187              		.loc 1 1543 29 is_stmt 0 view .LVU371
 1188 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1189              		.cfi_def_cfa_offset 24
 1190              		.cfi_offset 3, -24
 1191              		.cfi_offset 4, -20
 1192              		.cfi_offset 5, -16
 1193              		.cfi_offset 6, -12
 1194              		.cfi_offset 7, -8
 1195              		.cfi_offset 14, -4
1549:src/keys.c    **** #endif
 1196              		.loc 1 1549 28 view .LVU372
 1197 0002 314C     		ldr	r4, .L138
1552:src/keys.c    **** 	
 1198              		.loc 1 1552 34 view .LVU373
 1199 0004 314A     		ldr	r2, .L138+4
1549:src/keys.c    **** #endif
 1200              		.loc 1 1549 28 view .LVU374
 1201 0006 E77F     		ldrb	r7, [r4, #31]	@ zero_extendqisi2
 1202              	.LVL89:
1551:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1203              		.loc 1 1551 2 is_stmt 1 view .LVU375
1551:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1204              		.loc 1 1551 33 is_stmt 0 view .LVU376
 1205 0008 2389     		ldrh	r3, [r4, #8]
1552:src/keys.c    **** 	
 1206              		.loc 1 1552 34 view .LVU377
 1207 000a 02EB0712 		add	r2, r2, r7, lsl #4
1551:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1208              		.loc 1 1551 41 view .LVU378
 1209 000e 03EB8303 		add	r3, r3, r3, lsl #2
1552:src/keys.c    **** 	
 1210              		.loc 1 1552 34 view .LVU379
 1211 0012 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
1552:src/keys.c    **** 	
 1212              		.loc 1 1552 39 view .LVU380
 1213 0014 8E07     		lsls	r6, r1, #30
1551:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
ARM GAS  /tmp/ccy15zOt.s 			page 72


 1214              		.loc 1 1551 46 view .LVU381
 1215 0016 00EB4305 		add	r5, r0, r3, lsl #1
 1216              	.LVL90:
1552:src/keys.c    **** 	
 1217              		.loc 1 1552 2 is_stmt 1 view .LVU382
1552:src/keys.c    **** 	
 1218              		.loc 1 1552 39 is_stmt 0 view .LVU383
 1219 001a C1F34000 		ubfx	r0, r1, #1, #1
 1220              	.LVL91:
1552:src/keys.c    **** 	
 1221              		.loc 1 1552 39 view .LVU384
 1222 001e 32D5     		bpl	.L114
 1223              	.LVL92:
1554:src/keys.c    **** 		// Handle local registers and flags
 1224              		.loc 1 1554 2 is_stmt 1 view .LVU385
1554:src/keys.c    **** 		// Handle local registers and flags
 1225              		.loc 1 1554 6 is_stmt 0 view .LVU386
 1226 0020 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1554:src/keys.c    **** 		// Handle local registers and flags
 1227              		.loc 1 1554 5 view .LVU387
 1228 0022 D907     		lsls	r1, r3, #31
 1229 0024 28D5     		bpl	.L116
 1230              	.L127:
1552:src/keys.c    **** 	
 1231              		.loc 1 1552 39 view .LVU388
 1232 0026 0120     		movs	r0, #1
 1233              	.LVL93:
 1234              	.L115:
1556:src/keys.c    **** 		if (State2.runmode) {
 1235              		.loc 1 1556 3 is_stmt 1 view .LVU389
1557:src/keys.c    **** 			if (LocalRegs == 0)
 1236              		.loc 1 1557 3 view .LVU390
1557:src/keys.c    **** 			if (LocalRegs == 0)
 1237              		.loc 1 1557 6 is_stmt 0 view .LVU391
 1238 0028 5A06     		lsls	r2, r3, #25
 1239 002a 3BD5     		bpl	.L129
1558:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1240              		.loc 1 1558 4 is_stmt 1 view .LVU392
1558:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1241              		.loc 1 1558 8 is_stmt 0 view .LVU393
 1242 002c 284B     		ldr	r3, .L138+8
 1243 002e 1B68     		ldr	r3, [r3]
1558:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1244              		.loc 1 1558 7 view .LVU394
 1245 0030 B3F9DE37 		ldrsh	r3, [r3, #2014]
 1246 0034 2BB3     		cbz	r3, .L122
1560:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
 1247              		.loc 1 1560 4 is_stmt 1 view .LVU395
1560:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
 1248              		.loc 1 1560 7 is_stmt 0 view .LVU396
 1249 0036 A8B3     		cbz	r0, .L129
1561:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1250              		.loc 1 1561 5 is_stmt 1 view .LVU397
1561:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1251              		.loc 1 1561 11 is_stmt 0 view .LVU398
 1252 0038 3846     		mov	r0, r7
 1253 003a FFF7FEFF 		bl	local_regs_rarg
ARM GAS  /tmp/ccy15zOt.s 			page 73


 1254              	.LVL94:
1562:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1255              		.loc 1 1562 5 is_stmt 1 view .LVU399
1561:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1256              		.loc 1 1561 9 is_stmt 0 view .LVU400
 1257 003e 0138     		subs	r0, r0, #1
 1258              	.LVL95:
1561:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1259              		.loc 1 1561 9 view .LVU401
 1260 0040 0F28     		cmp	r0, #15
 1261 0042 A8BF     		it	ge
 1262 0044 0F20     		movge	r0, #15
 1263              	.LVL96:
 1264              	.L119:
1574:src/keys.c    **** 		return STATE_UNFINISHED;
 1265              		.loc 1 1574 2 is_stmt 1 view .LVU402
1574:src/keys.c    **** 		return STATE_UNFINISHED;
 1266              		.loc 1 1574 5 is_stmt 0 view .LVU403
 1267 0046 8542     		cmp	r5, r0
 1268 0048 1BDC     		bgt	.L122
 1269              	.L136:
1577:src/keys.c    **** 	++State2.numdigit;
 1270              		.loc 1 1577 2 is_stmt 1 view .LVU404
1578:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1271              		.loc 1 1578 2 is_stmt 0 view .LVU405
 1272 004a E67A     		ldrb	r6, [r4, #11]	@ zero_extendqisi2
1577:src/keys.c    **** 	++State2.numdigit;
 1273              		.loc 1 1577 16 view .LVU406
 1274 004c 2581     		strh	r5, [r4, #8]	@ movhi
1578:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1275              		.loc 1 1578 2 is_stmt 1 view .LVU407
 1276 004e 0136     		adds	r6, r6, #1
1579:src/keys.c    **** 		int result = arg_eval(val);
 1277              		.loc 1 1579 16 is_stmt 0 view .LVU408
 1278 0050 05EB8503 		add	r3, r5, r5, lsl #2
1578:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1279              		.loc 1 1578 2 view .LVU409
 1280 0054 F6B2     		uxtb	r6, r6
1579:src/keys.c    **** 		int result = arg_eval(val);
 1281              		.loc 1 1579 5 view .LVU410
 1282 0056 B0EB430F 		cmp	r0, r3, lsl #1
1578:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1283              		.loc 1 1578 2 view .LVU411
 1284 005a E672     		strb	r6, [r4, #11]
1579:src/keys.c    **** 		int result = arg_eval(val);
 1285              		.loc 1 1579 2 is_stmt 1 view .LVU412
1579:src/keys.c    **** 		int result = arg_eval(val);
 1286              		.loc 1 1579 5 is_stmt 0 view .LVU413
 1287 005c 04DB     		blt	.L125
1579:src/keys.c    **** 		int result = arg_eval(val);
 1288              		.loc 1 1579 49 discriminator 1 view .LVU414
 1289 005e 3846     		mov	r0, r7
 1290              	.LVL97:
1579:src/keys.c    **** 		int result = arg_eval(val);
 1291              		.loc 1 1579 49 discriminator 1 view .LVU415
 1292 0060 FFF7FEFF 		bl	num_arg_digits
 1293              	.LVL98:
ARM GAS  /tmp/ccy15zOt.s 			page 74


1579:src/keys.c    **** 		int result = arg_eval(val);
 1294              		.loc 1 1579 27 discriminator 1 view .LVU416
 1295 0064 8642     		cmp	r6, r0
 1296 0066 0CDB     		blt	.L122
 1297              	.L125:
 1298              	.LBB262:
1580:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1299              		.loc 1 1580 3 is_stmt 1 view .LVU417
1580:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1300              		.loc 1 1580 16 is_stmt 0 view .LVU418
 1301 0068 2846     		mov	r0, r5
 1302 006a FFF7FEFF 		bl	arg_eval
 1303              	.LVL99:
1581:src/keys.c    **** 			--State2.numdigit;
 1304              		.loc 1 1581 3 is_stmt 1 view .LVU419
1581:src/keys.c    **** 			--State2.numdigit;
 1305              		.loc 1 1581 6 is_stmt 0 view .LVU420
 1306 006e 3328     		cmp	r0, #51
 1307 0070 1AD0     		beq	.L134
 1308              	.LBE262:
1588:src/keys.c    **** 
 1309              		.loc 1 1588 1 view .LVU421
 1310 0072 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1311              	.LVL100:
 1312              	.L137:
1554:src/keys.c    **** 		// Handle local registers and flags
 1313              		.loc 1 1554 2 is_stmt 1 view .LVU422
1554:src/keys.c    **** 		// Handle local registers and flags
 1314              		.loc 1 1554 5 is_stmt 0 view .LVU423
 1315 0074 DA07     		lsls	r2, r3, #31
 1316 0076 D6D4     		bmi	.L127
 1317              	.L116:
1568:src/keys.c    **** 	else {
 1318              		.loc 1 1568 3 is_stmt 1 view .LVU424
1568:src/keys.c    **** 	else {
 1319              		.loc 1 1568 65 is_stmt 0 view .LVU425
 1320 0078 5B06     		lsls	r3, r3, #25
 1321 007a 1FD4     		bmi	.L135
 1322 007c 6320     		movs	r0, #99
 1323              	.LVL101:
1574:src/keys.c    **** 		return STATE_UNFINISHED;
 1324              		.loc 1 1574 2 is_stmt 1 view .LVU426
1574:src/keys.c    **** 		return STATE_UNFINISHED;
 1325              		.loc 1 1574 5 is_stmt 0 view .LVU427
 1326 007e 8542     		cmp	r5, r0
 1327 0080 E3DD     		ble	.L136
 1328              	.LVL102:
 1329              	.L122:
1559:src/keys.c    **** 			if (is_reg) {
 1330              		.loc 1 1559 12 view .LVU428
 1331 0082 3320     		movs	r0, #51
1588:src/keys.c    **** 
 1332              		.loc 1 1588 1 view .LVU429
 1333 0084 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1334              	.LVL103:
 1335              	.L114:
1552:src/keys.c    **** 	
ARM GAS  /tmp/ccy15zOt.s 			page 75


 1336              		.loc 1 1552 39 discriminator 2 view .LVU430
 1337 0086 94F91530 		ldrsb	r3, [r4, #21]
 1338 008a 002B     		cmp	r3, #0
1554:src/keys.c    **** 		// Handle local registers and flags
 1339              		.loc 1 1554 6 discriminator 2 view .LVU431
 1340 008c A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1552:src/keys.c    **** 	
 1341              		.loc 1 1552 39 discriminator 2 view .LVU432
 1342 008e F1DB     		blt	.L137
 1343              	.LVL104:
1554:src/keys.c    **** 		// Handle local registers and flags
 1344              		.loc 1 1554 2 is_stmt 1 view .LVU433
1554:src/keys.c    **** 		// Handle local registers and flags
 1345              		.loc 1 1554 5 is_stmt 0 view .LVU434
 1346 0090 DE07     		lsls	r6, r3, #31
 1347 0092 C9D4     		bmi	.L115
1567:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
 1348              		.loc 1 1567 7 is_stmt 1 view .LVU435
1570:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1349              		.loc 1 1570 3 view .LVU436
1570:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1350              		.loc 1 1570 7 is_stmt 0 view .LVU437
 1351 0094 1079     		ldrb	r0, [r2, #4]	@ zero_extendqisi2
 1352              	.LVL105:
1571:src/keys.c    **** 			lim = RARG_IND - 1;
 1353              		.loc 1 1571 3 is_stmt 1 view .LVU438
1571:src/keys.c    **** 			lim = RARG_IND - 1;
 1354              		.loc 1 1571 6 is_stmt 0 view .LVU439
 1355 0096 7F28     		cmp	r0, #127
 1356 0098 D5DD     		ble	.L119
1572:src/keys.c    **** 	}
 1357              		.loc 1 1572 8 discriminator 1 view .LVU440
 1358 009a 11F0010F 		tst	r1, #1
 1359 009e 18BF     		it	ne
 1360 00a0 7F20     		movne	r0, #127
 1361              	.LVL106:
1572:src/keys.c    **** 	}
 1362              		.loc 1 1572 8 discriminator 1 view .LVU441
 1363 00a2 D0E7     		b	.L119
 1364              	.LVL107:
 1365              	.L129:
1556:src/keys.c    **** 		if (State2.runmode) {
 1366              		.loc 1 1556 7 view .LVU442
 1367 00a4 0F20     		movs	r0, #15
 1368 00a6 CEE7     		b	.L119
 1369              	.LVL108:
 1370              	.L134:
 1371              	.LBB263:
1582:src/keys.c    **** 			State2.digval /= 10;
 1372              		.loc 1 1582 4 is_stmt 1 view .LVU443
1583:src/keys.c    **** 		}
 1373              		.loc 1 1583 18 is_stmt 0 view .LVU444
 1374 00a8 2389     		ldrh	r3, [r4, #8]
 1375 00aa 0A49     		ldr	r1, .L138+12
1582:src/keys.c    **** 			State2.digval /= 10;
 1376              		.loc 1 1582 4 view .LVU445
 1377 00ac E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
ARM GAS  /tmp/ccy15zOt.s 			page 76


1583:src/keys.c    **** 		}
 1378              		.loc 1 1583 18 view .LVU446
 1379 00ae A1FB0313 		umull	r1, r3, r1, r3
 1380 00b2 DB08     		lsrs	r3, r3, #3
1582:src/keys.c    **** 			State2.digval /= 10;
 1381              		.loc 1 1582 4 view .LVU447
 1382 00b4 013A     		subs	r2, r2, #1
1583:src/keys.c    **** 		}
 1383              		.loc 1 1583 18 view .LVU448
 1384 00b6 2381     		strh	r3, [r4, #8]	@ movhi
1582:src/keys.c    **** 			State2.digval /= 10;
 1385              		.loc 1 1582 4 view .LVU449
 1386 00b8 E272     		strb	r2, [r4, #11]
1583:src/keys.c    **** 		}
 1387              		.loc 1 1583 4 is_stmt 1 view .LVU450
 1388              	.LBE263:
1588:src/keys.c    **** 
 1389              		.loc 1 1588 1 is_stmt 0 view .LVU451
 1390 00ba F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1391              	.LVL109:
 1392              	.L135:
1568:src/keys.c    **** 	else {
 1393              		.loc 1 1568 26 discriminator 1 view .LVU452
 1394 00bc 3846     		mov	r0, r7
 1395 00be FFF7FEFF 		bl	global_regs_rarg
 1396              	.LVL110:
1568:src/keys.c    **** 	else {
 1397              		.loc 1 1568 61 discriminator 1 view .LVU453
 1398 00c2 0138     		subs	r0, r0, #1
 1399 00c4 BFE7     		b	.L119
 1400              	.L139:
 1401 00c6 00BF     		.align	2
 1402              	.L138:
 1403 00c8 00000000 		.word	StateWhileOn
 1404 00cc 00000000 		.word	argcmds
 1405 00d0 00000000 		.word	main_ram
 1406 00d4 CDCCCCCC 		.word	-858993459
 1407              		.cfi_endproc
 1408              	.LFE31:
 1410              		.section	.text.intltr,"ax",%progbits
 1411              		.align	1
 1412              		.p2align 2,,3
 1413              		.syntax unified
 1414              		.thumb
 1415              		.thumb_func
 1416              		.fpu fpv4-sp-d16
 1418              	intltr:
 1419              	.LVL111:
 1420              	.LFB18:
 666:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1421              		.loc 1 666 26 is_stmt 1 view -0
 1422              		.cfi_startproc
 1423              		@ args = 0, pretend = 0, frame = 0
 1424              		@ frame_needed = 0, uses_anonymous_args = 0
 667:src/keys.c    **** }
 1425              		.loc 1 667 2 view .LVU455
 667:src/keys.c    **** }
ARM GAS  /tmp/ccy15zOt.s 			page 77


 1426              		.loc 1 667 10 is_stmt 0 view .LVU456
 1427 0000 0B4B     		ldr	r3, .L149
 1428 0002 1B68     		ldr	r3, [r3]
 1429 0004 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 667:src/keys.c    **** }
 1430              		.loc 1 667 22 view .LVU457
 1431 0008 13F00103 		ands	r3, r3, #1
 1432 000c 05D0     		beq	.L142
 667:src/keys.c    **** }
 1433              		.loc 1 667 26 discriminator 1 view .LVU458
 1434 000e 094B     		ldr	r3, .L149+4
 1435 0010 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 667:src/keys.c    **** }
 1436              		.loc 1 667 22 discriminator 1 view .LVU459
 1437 0012 5B06     		lsls	r3, r3, #25
 1438 0014 03D4     		bmi	.L148
 667:src/keys.c    **** }
 1439              		.loc 1 667 22 view .LVU460
 1440 0016 0120     		movs	r0, #1
 1441              	.LVL112:
 668:src/keys.c    **** 
 1442              		.loc 1 668 1 view .LVU461
 1443 0018 7047     		bx	lr
 1444              	.LVL113:
 1445              	.L142:
 667:src/keys.c    **** }
 1446              		.loc 1 667 22 view .LVU462
 1447 001a 1846     		mov	r0, r3
 1448              	.LVL114:
 667:src/keys.c    **** }
 1449              		.loc 1 667 22 view .LVU463
 1450 001c 7047     		bx	lr
 1451              	.LVL115:
 1452              	.L148:
 666:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1453              		.loc 1 666 26 view .LVU464
 1454 001e 10B5     		push	{r4, lr}
 1455              		.cfi_def_cfa_offset 8
 1456              		.cfi_offset 4, -8
 1457              		.cfi_offset 14, -4
 1458 0020 0446     		mov	r4, r0
 1459              	.LVL116:
 1460              	.LBB266:
 1461              	.LBI266:
 666:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1462              		.loc 1 666 12 is_stmt 1 view .LVU465
 1463              	.LBB267:
 667:src/keys.c    **** }
 1464              		.loc 1 667 52 is_stmt 0 view .LVU466
 1465 0022 FFF7FEFF 		bl	int_base
 1466              	.LVL117:
 667:src/keys.c    **** }
 1467              		.loc 1 667 43 view .LVU467
 1468 0026 8442     		cmp	r4, r0
 1469 0028 ACBF     		ite	ge
 1470 002a 0020     		movge	r0, #0
 1471 002c 0120     		movlt	r0, #1
ARM GAS  /tmp/ccy15zOt.s 			page 78


 1472              	.LBE267:
 1473              	.LBE266:
 668:src/keys.c    **** 
 1474              		.loc 1 668 1 view .LVU468
 1475 002e 10BD     		pop	{r4, pc}
 1476              	.LVL118:
 1477              	.L150:
 668:src/keys.c    **** 
 1478              		.loc 1 668 1 view .LVU469
 1479              		.align	2
 1480              	.L149:
 1481 0030 00000000 		.word	main_ram
 1482 0034 00000000 		.word	StateWhileOn
 1483              		.cfi_endproc
 1484              	.LFE18:
 1486              		.section	.text.set_window,"ax",%progbits
 1487              		.align	1
 1488              		.p2align 2,,3
 1489              		.syntax unified
 1490              		.thumb
 1491              		.thumb_func
 1492              		.fpu fpv4-sp-d16
 1494              	set_window:
 1495              	.LVL119:
 1496              	.LFB53:
2546:src/keys.c    **** 
2547:src/keys.c    **** 
2548:src/keys.c    **** /*
2549:src/keys.c    ****  *  CAT command
2550:src/keys.c    ****  */
2551:src/keys.c    **** static int process_labellist(const keycode c) {
2552:src/keys.c    **** 	unsigned int pc = State2.digval;
2553:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
2554:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
2555:src/keys.c    **** 	const int opcode = getprog(pc);
2556:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
2557:src/keys.c    **** 	const int direct = State2.runmode;
2558:src/keys.c    **** 	const enum shifts shift = reset_shift();
2559:src/keys.c    **** 	int op = STATE_UNFINISHED;
2560:src/keys.c    **** 
2561:src/keys.c    **** 	if (n < REGION_XROM) {
2562:src/keys.c    **** 		// Digits take you to that segment
2563:src/keys.c    **** 		pc = addrLIB(1, n);
2564:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
2565:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
2566:src/keys.c    **** 		State2.digval = pc;
2567:src/keys.c    **** 		return STATE_UNFINISHED;
2568:src/keys.c    **** 	}
2569:src/keys.c    **** 
2570:src/keys.c    **** 	switch (c | (shift << 8)) {
2571:src/keys.c    **** 
2572:src/keys.c    **** 	case K_UP | (SHIFT_F << 8):		// Find first label of previous program
2573:src/keys.c    **** 		pc = advance_to_previous_label(advance_to_previous_label(pc, 1), 1);
2574:src/keys.c    **** 		goto next;
2575:src/keys.c    **** 
2576:src/keys.c    **** 	case K_DOWN | (SHIFT_F << 8):		// Find next program
2577:src/keys.c    **** 		pc = advance_to_next_label(pc, 0, 1);
ARM GAS  /tmp/ccy15zOt.s 			page 79


2578:src/keys.c    **** 	case K_DOWN:				// Find next label
2579:src/keys.c    **** 	next:
2580:src/keys.c    **** 		State2.digval = advance_to_next_label(pc, 1, 0);
2581:src/keys.c    **** 		return STATE_UNFINISHED;
2582:src/keys.c    **** 
2583:src/keys.c    **** 	case K_UP:				// Find previous label
2584:src/keys.c    **** 		State2.digval = advance_to_previous_label(pc, 0);
2585:src/keys.c    **** 		return STATE_UNFINISHED;
2586:src/keys.c    **** 
2587:src/keys.c    **** 	case K24:				// <- exits
2588:src/keys.c    **** 		break;
2589:src/keys.c    **** 
2590:src/keys.c    **** 	case K20:				// ENTER^
2591:src/keys.c    **** 	set_pc_and_exit:
2592:src/keys.c    **** 		set_pc(pc);			// forced branch
2593:src/keys.c    **** 		break;
2594:src/keys.c    **** 
2595:src/keys.c    **** 	case K24 | (SHIFT_F << 8):		// CLP
2596:src/keys.c    **** 		op = (OP_NIL | OP_CLPROG);
2597:src/keys.c    **** 		goto set_pc_and_exit;
2598:src/keys.c    **** 
2599:src/keys.c    **** 	case K10:				// STO
2600:src/keys.c    **** 	case K11:				// RCL
2601:src/keys.c    **** 	  //#ifndef DM42	
2602:src/keys.c    **** 		op = c == K10 ? (OP_NIL | OP_PSTO) : (OP_NIL | OP_PRCL);
2603:src/keys.c    **** 	  //#endif
2604:src/keys.c    **** /* #ifdef DM42 */
2605:src/keys.c    **** /* 	        op = OP_NIL; */
2606:src/keys.c    **** /* #endif	     */
2607:src/keys.c    **** 	  goto set_pc_and_exit;
2608:src/keys.c    **** #ifdef DM42
2609:src/keys.c    **** 	case K05:				// XEQ
2610:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
2611:src/keys.c    **** 		goto xeq_or_gto;
2612:src/keys.c    **** 
2613:src/keys.c    **** 	case K05 | (SHIFT_F << 8):		// GTO
2614:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
2615:src/keys.c    **** 	xeq_or_gto:
2616:src/keys.c    **** 		if (label)
2617:src/keys.c    **** 			break;
2618:src/keys.c    **** 		return STATE_UNFINISHED;
2619:src/keys.c    **** #else
2620:src/keys.c    **** 	case K30:				// XEQ
2621:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
2622:src/keys.c    **** 		goto xeq_or_gto;
2623:src/keys.c    **** 
2624:src/keys.c    **** 	case K30 | (SHIFT_H << 8):		// GTO
2625:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
2626:src/keys.c    **** 	xeq_or_gto:
2627:src/keys.c    **** 		if (label)
2628:src/keys.c    **** 			break;
2629:src/keys.c    **** 		return STATE_UNFINISHED;
2630:src/keys.c    **** #endif		
2631:src/keys.c    **** 	case K63:				// R/S
2632:src/keys.c    **** 		if (direct && label) {
2633:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
2634:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
ARM GAS  /tmp/ccy15zOt.s 			page 80


2635:src/keys.c    **** 			break;
2636:src/keys.c    **** 		}
2637:src/keys.c    **** 		return STATE_UNFINISHED;
2638:src/keys.c    **** 
2639:src/keys.c    **** 	case K63 | (SHIFT_H << 8):		// P/R
2640:src/keys.c    **** 		State2.runmode = 0;		// switch to program mode
2641:src/keys.c    **** 		goto set_pc_and_exit;
2642:src/keys.c    **** 
2643:src/keys.c    **** 	default:
2644:src/keys.c    **** 		return STATE_UNFINISHED;
2645:src/keys.c    **** 	}
2646:src/keys.c    **** 	State2.digval = 0;
2647:src/keys.c    **** 	State2.labellist = 0;
2648:src/keys.c    **** 	return check_confirm(op);
2649:src/keys.c    **** }
2650:src/keys.c    **** 
2651:src/keys.c    **** 
2652:src/keys.c    **** static void set_window(int c) {
 1497              		.loc 1 2652 31 is_stmt 1 view -0
 1498              		.cfi_startproc
 1499              		@ args = 0, pretend = 0, frame = 0
 1500              		@ frame_needed = 0, uses_anonymous_args = 0
2653:src/keys.c    **** 
2654:src/keys.c    **** 	if (State2.runmode) {
 1501              		.loc 1 2654 2 view .LVU471
2652:src/keys.c    **** 
 1502              		.loc 1 2652 31 is_stmt 0 view .LVU472
 1503 0000 38B5     		push	{r3, r4, r5, lr}
 1504              		.cfi_def_cfa_offset 16
 1505              		.cfi_offset 3, -16
 1506              		.cfi_offset 4, -12
 1507              		.cfi_offset 5, -8
 1508              		.cfi_offset 14, -4
 1509              		.loc 1 2654 6 view .LVU473
 1510 0002 224C     		ldr	r4, .L166
 1511 0004 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 1512              		.loc 1 2654 5 view .LVU474
 1513 0006 5A06     		lsls	r2, r3, #25
 1514 0008 00D4     		bmi	.L163
 1515              	.LVL120:
 1516              	.L151:
2655:src/keys.c    **** 		process_cmdline_set_lift();
2656:src/keys.c    **** 		// Make sure IntMaxWindow is recalculated
2657:src/keys.c    **** 		State2.disp_freeze = 0;
2658:src/keys.c    **** 		display();	
2659:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
2660:src/keys.c    **** 			if (UState.intm) {
2661:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
2662:src/keys.c    **** 					State2.window--;
2663:src/keys.c    **** 				return;
2664:src/keys.c    **** 			}
2665:src/keys.c    **** 			else 
2666:src/keys.c    **** 				State2.window = is_dblmode();
2667:src/keys.c    **** 		}
2668:src/keys.c    **** 		else {
2669:src/keys.c    **** 			if (UState.intm) {
2670:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
ARM GAS  /tmp/ccy15zOt.s 			page 81


2671:src/keys.c    **** 					State2.window++;
2672:src/keys.c    **** 				return;
2673:src/keys.c    **** 			}
2674:src/keys.c    **** 			else
2675:src/keys.c    **** 				State2.window = 0;
2676:src/keys.c    **** 		}
2677:src/keys.c    **** 		set_smode(SDISP_SHOW);
2678:src/keys.c    **** 	}
2679:src/keys.c    **** }
 1517              		.loc 1 2679 1 view .LVU475
 1518 000a 38BD     		pop	{r3, r4, r5, pc}
 1519              	.LVL121:
 1520              	.L163:
2655:src/keys.c    **** 		process_cmdline_set_lift();
 1521              		.loc 1 2655 3 is_stmt 1 view .LVU476
 1522 000c 0546     		mov	r5, r0
 1523 000e FFF7FEFF 		bl	process_cmdline_set_lift
 1524              	.LVL122:
2657:src/keys.c    **** 		display();	
 1525              		.loc 1 2657 3 view .LVU477
2657:src/keys.c    **** 		display();	
 1526              		.loc 1 2657 22 is_stmt 0 view .LVU478
 1527 0012 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 1528 0014 6FF30413 		bfc	r3, #4, #1
 1529 0018 E375     		strb	r3, [r4, #23]
2658:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
 1530              		.loc 1 2658 3 is_stmt 1 view .LVU479
 1531 001a FFF7FEFF 		bl	display
 1532              	.LVL123:
2659:src/keys.c    **** 			if (UState.intm) {
 1533              		.loc 1 2659 3 view .LVU480
2660:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1534              		.loc 1 2660 8 is_stmt 0 view .LVU481
 1535 001e 1C4B     		ldr	r3, .L166+4
 1536 0020 1B68     		ldr	r3, [r3]
2659:src/keys.c    **** 			if (UState.intm) {
 1537              		.loc 1 2659 6 view .LVU482
 1538 0022 2C2D     		cmp	r5, #44
2660:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1539              		.loc 1 2660 8 view .LVU483
 1540 0024 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
2659:src/keys.c    **** 			if (UState.intm) {
 1541              		.loc 1 2659 6 view .LVU484
 1542 0028 18D0     		beq	.L164
2669:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 1543              		.loc 1 2669 4 is_stmt 1 view .LVU485
2669:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 1544              		.loc 1 2669 7 is_stmt 0 view .LVU486
 1545 002a 13F00103 		ands	r3, r3, #1
 1546 002e 09D1     		bne	.L165
2675:src/keys.c    **** 		}
 1547              		.loc 1 2675 5 is_stmt 1 view .LVU487
2675:src/keys.c    **** 		}
 1548              		.loc 1 2675 19 is_stmt 0 view .LVU488
 1549 0030 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 1550 0032 63F3C502 		bfi	r2, r3, #3, #3
 1551 0036 2275     		strb	r2, [r4, #20]
ARM GAS  /tmp/ccy15zOt.s 			page 82


 1552              	.L157:
2677:src/keys.c    **** 	}
 1553              		.loc 1 2677 3 is_stmt 1 view .LVU489
 1554              	.LVL124:
 1555              	.LBB274:
 1556              	.LBI274:
 646:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 1557              		.loc 1 646 13 view .LVU490
 1558              	.LBB275:
 647:src/keys.c    **** }
 1559              		.loc 1 647 2 view .LVU491
 647:src/keys.c    **** }
 1560              		.loc 1 647 15 is_stmt 0 view .LVU492
 1561 0038 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 1562 003a 013B     		subs	r3, r3, #1
 1563 003c 18BF     		it	ne
 1564 003e 0123     		movne	r3, #1
 1565 0040 6374     		strb	r3, [r4, #17]
 1566              	.LVL125:
 647:src/keys.c    **** }
 1567              		.loc 1 647 15 view .LVU493
 1568              	.LBE275:
 1569              	.LBE274:
 1570              		.loc 1 2679 1 view .LVU494
 1571 0042 38BD     		pop	{r3, r4, r5, pc}
 1572              	.LVL126:
 1573              	.L165:
2670:src/keys.c    **** 					State2.window++;
 1574              		.loc 1 2670 5 is_stmt 1 view .LVU495
2670:src/keys.c    **** 					State2.window++;
 1575              		.loc 1 2670 22 is_stmt 0 view .LVU496
 1576 0044 134A     		ldr	r2, .L166+8
2670:src/keys.c    **** 					State2.window++;
 1577              		.loc 1 2670 42 view .LVU497
 1578 0046 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
2670:src/keys.c    **** 					State2.window++;
 1579              		.loc 1 2670 8 view .LVU498
 1580 0048 1168     		ldr	r1, [r2]
2670:src/keys.c    **** 					State2.window++;
 1581              		.loc 1 2670 42 view .LVU499
 1582 004a C3F3C202 		ubfx	r2, r3, #3, #3
2670:src/keys.c    **** 					State2.window++;
 1583              		.loc 1 2670 8 view .LVU500
 1584 004e 8A42     		cmp	r2, r1
 1585 0050 DBDA     		bge	.L151
2671:src/keys.c    **** 				return;
 1586              		.loc 1 2671 6 is_stmt 1 view .LVU501
2671:src/keys.c    **** 				return;
 1587              		.loc 1 2671 19 is_stmt 0 view .LVU502
 1588 0052 0132     		adds	r2, r2, #1
 1589 0054 62F3C503 		bfi	r3, r2, #3, #3
 1590 0058 2375     		strb	r3, [r4, #20]
 1591              		.loc 1 2679 1 view .LVU503
 1592 005a 38BD     		pop	{r3, r4, r5, pc}
 1593              	.LVL127:
 1594              	.L164:
2660:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
ARM GAS  /tmp/ccy15zOt.s 			page 83


 1595              		.loc 1 2660 4 is_stmt 1 view .LVU504
2660:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1596              		.loc 1 2660 7 is_stmt 0 view .LVU505
 1597 005c DB07     		lsls	r3, r3, #31
 1598 005e 0ED5     		bpl	.L155
 1599              	.LBB276:
 1600              	.LBI276:
2652:src/keys.c    **** 
 1601              		.loc 1 2652 13 is_stmt 1 view .LVU506
 1602              	.LVL128:
 1603              	.LBB277:
2661:src/keys.c    **** 					State2.window--;
 1604              		.loc 1 2661 5 view .LVU507
2661:src/keys.c    **** 					State2.window--;
 1605              		.loc 1 2661 22 is_stmt 0 view .LVU508
 1606 0060 0C4B     		ldr	r3, .L166+8
2661:src/keys.c    **** 					State2.window--;
 1607              		.loc 1 2661 8 view .LVU509
 1608 0062 1B68     		ldr	r3, [r3]
 1609 0064 002B     		cmp	r3, #0
 1610 0066 D0DD     		ble	.L151
2661:src/keys.c    **** 					State2.window--;
 1611              		.loc 1 2661 43 view .LVU510
 1612 0068 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
2661:src/keys.c    **** 					State2.window--;
 1613              		.loc 1 2661 26 view .LVU511
 1614 006a 13F0380F 		tst	r3, #56
 1615 006e CCD0     		beq	.L151
2662:src/keys.c    **** 				return;
 1616              		.loc 1 2662 6 is_stmt 1 view .LVU512
2662:src/keys.c    **** 				return;
 1617              		.loc 1 2662 12 is_stmt 0 view .LVU513
 1618 0070 C3F3C202 		ubfx	r2, r3, #3, #3
2662:src/keys.c    **** 				return;
 1619              		.loc 1 2662 19 view .LVU514
 1620 0074 0732     		adds	r2, r2, #7
 1621 0076 62F3C503 		bfi	r3, r2, #3, #3
 1622 007a 2375     		strb	r3, [r4, #20]
 1623              	.LBE277:
 1624              	.LBE276:
 1625              		.loc 1 2679 1 view .LVU515
 1626 007c 38BD     		pop	{r3, r4, r5, pc}
 1627              	.LVL129:
 1628              	.L155:
2666:src/keys.c    **** 		}
 1629              		.loc 1 2666 5 is_stmt 1 view .LVU516
2666:src/keys.c    **** 		}
 1630              		.loc 1 2666 21 is_stmt 0 view .LVU517
 1631 007e FFF7FEFF 		bl	is_dblmode
 1632              	.LVL130:
2666:src/keys.c    **** 		}
 1633              		.loc 1 2666 19 view .LVU518
 1634 0082 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 1635 0084 60F3C503 		bfi	r3, r0, #3, #3
 1636 0088 2375     		strb	r3, [r4, #20]
 1637 008a D5E7     		b	.L157
 1638              	.L167:
ARM GAS  /tmp/ccy15zOt.s 			page 84


 1639              		.align	2
 1640              	.L166:
 1641 008c 00000000 		.word	StateWhileOn
 1642 0090 00000000 		.word	main_ram
 1643 0094 00000000 		.word	IntMaxWindow
 1644              		.cfi_endproc
 1645              	.LFE53:
 1647              		.section	.text.arg_storcl,"ax",%progbits
 1648              		.align	1
 1649              		.p2align 2,,3
 1650              		.syntax unified
 1651              		.thumb
 1652              		.thumb_func
 1653              		.fpu fpv4-sp-d16
 1655              	arg_storcl:
 1656              	.LVL131:
 1657              	.LFB34:
1613:src/keys.c    **** 	unsigned int b = CmdBase;
 1658              		.loc 1 1613 56 is_stmt 1 view -0
 1659              		.cfi_startproc
 1660              		@ args = 0, pretend = 0, frame = 0
 1661              		@ frame_needed = 0, uses_anonymous_args = 0
 1662              		@ link register save eliminated.
1614:src/keys.c    **** 
 1663              		.loc 1 1614 2 view .LVU520
1614:src/keys.c    **** 
 1664              		.loc 1 1614 19 is_stmt 0 view .LVU521
 1665 0000 0F4A     		ldr	r2, .L200
 1666 0002 D37F     		ldrb	r3, [r2, #31]	@ zero_extendqisi2
 1667              	.LVL132:
1616:src/keys.c    **** 		CmdBase += n;
 1668              		.loc 1 1616 2 is_stmt 1 view .LVU522
 1669              	.LBB286:
 1670              	.LBI286:
1604:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1671              		.loc 1 1604 12 view .LVU523
 1672              	.LBB287:
1609:src/keys.c    **** #endif
 1673              		.loc 1 1609 2 view .LVU524
1609:src/keys.c    **** #endif
 1674              		.loc 1 1609 41 is_stmt 0 view .LVU525
 1675 0004 032B     		cmp	r3, #3
 1676 0006 14D0     		beq	.L169
1609:src/keys.c    **** #endif
 1677              		.loc 1 1609 24 view .LVU526
 1678 0008 0A2B     		cmp	r3, #10
 1679 000a 12D0     		beq	.L169
 1680              	.LVL133:
 1681              	.LBB288:
 1682              	.LBI288:
1604:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1683              		.loc 1 1604 12 is_stmt 1 view .LVU527
 1684              	.LBB289:
1609:src/keys.c    **** #endif
 1685              		.loc 1 1609 41 is_stmt 0 view .LVU528
 1686 000c 19B1     		cbz	r1, .L170
1609:src/keys.c    **** #endif
ARM GAS  /tmp/ccy15zOt.s 			page 85


 1687              		.loc 1 1609 51 view .LVU529
 1688 000e 152B     		cmp	r3, #21
 1689 0010 0FD0     		beq	.L169
1609:src/keys.c    **** #endif
 1690              		.loc 1 1609 70 view .LVU530
 1691 0012 1A2B     		cmp	r3, #26
 1692 0014 0DD0     		beq	.L169
 1693              	.L170:
 1694              	.LVL134:
1609:src/keys.c    **** #endif
 1695              		.loc 1 1609 70 view .LVU531
 1696              	.LBE289:
 1697              	.LBE288:
 1698              	.LBE287:
 1699              	.LBE286:
1621:src/keys.c    **** 		b -= n;
 1700              		.loc 1 1621 2 is_stmt 1 view .LVU532
1621:src/keys.c    **** 		b -= n;
 1701              		.loc 1 1621 5 is_stmt 0 view .LVU533
 1702 0016 8342     		cmp	r3, r0
 1703 0018 09D3     		bcc	.L175
1622:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 1704              		.loc 1 1622 3 is_stmt 1 view .LVU534
1622:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 1705              		.loc 1 1622 5 is_stmt 0 view .LVU535
 1706 001a 1B1A     		subs	r3, r3, r0
 1707              	.LVL135:
1623:src/keys.c    **** 			CmdBase = b;
 1708              		.loc 1 1623 3 is_stmt 1 view .LVU536
 1709              	.LBB290:
 1710              	.LBI290:
1604:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1711              		.loc 1 1604 12 view .LVU537
 1712              	.LBB291:
1609:src/keys.c    **** #endif
 1713              		.loc 1 1609 2 view .LVU538
1609:src/keys.c    **** #endif
 1714              		.loc 1 1609 41 is_stmt 0 view .LVU539
 1715 001c 032B     		cmp	r3, #3
 1716 001e 0CD0     		beq	.L173
1609:src/keys.c    **** #endif
 1717              		.loc 1 1609 24 view .LVU540
 1718 0020 0A2B     		cmp	r3, #10
 1719 0022 0AD0     		beq	.L173
 1720              	.LVL136:
 1721              	.LBB292:
 1722              	.LBI292:
1604:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1723              		.loc 1 1604 12 is_stmt 1 view .LVU541
 1724              	.LBB293:
1609:src/keys.c    **** #endif
 1725              		.loc 1 1609 41 is_stmt 0 view .LVU542
 1726 0024 19B1     		cbz	r1, .L175
1609:src/keys.c    **** #endif
 1727              		.loc 1 1609 51 view .LVU543
 1728 0026 152B     		cmp	r3, #21
 1729 0028 07D0     		beq	.L173
ARM GAS  /tmp/ccy15zOt.s 			page 86


1609:src/keys.c    **** #endif
 1730              		.loc 1 1609 70 view .LVU544
 1731 002a 1A2B     		cmp	r3, #26
 1732 002c 05D0     		beq	.L173
 1733              	.LVL137:
 1734              	.L175:
1609:src/keys.c    **** #endif
 1735              		.loc 1 1609 70 view .LVU545
 1736              	.LBE293:
 1737              	.LBE292:
 1738              	.LBE291:
 1739              	.LBE290:
1628:src/keys.c    **** }
 1740              		.loc 1 1628 9 view .LVU546
 1741 002e 0020     		movs	r0, #0
 1742              	.LVL138:
1629:src/keys.c    **** 
 1743              		.loc 1 1629 1 view .LVU547
 1744 0030 7047     		bx	lr
 1745              	.LVL139:
 1746              	.L169:
1617:src/keys.c    **** 		return 1;
 1747              		.loc 1 1617 3 is_stmt 1 view .LVU548
1617:src/keys.c    **** 		return 1;
 1748              		.loc 1 1617 11 is_stmt 0 view .LVU549
 1749 0032 1844     		add	r0, r0, r3
 1750              	.LVL140:
1617:src/keys.c    **** 		return 1;
 1751              		.loc 1 1617 11 view .LVU550
 1752 0034 D077     		strb	r0, [r2, #31]
1618:src/keys.c    **** 	}
 1753              		.loc 1 1618 3 is_stmt 1 view .LVU551
1618:src/keys.c    **** 	}
 1754              		.loc 1 1618 10 is_stmt 0 view .LVU552
 1755 0036 0120     		movs	r0, #1
 1756 0038 7047     		bx	lr
 1757              	.LVL141:
 1758              	.L173:
1624:src/keys.c    **** 			return 1;
 1759              		.loc 1 1624 4 is_stmt 1 view .LVU553
1624:src/keys.c    **** 			return 1;
 1760              		.loc 1 1624 12 is_stmt 0 view .LVU554
 1761 003a D377     		strb	r3, [r2, #31]
1625:src/keys.c    **** 		}
 1762              		.loc 1 1625 4 is_stmt 1 view .LVU555
1625:src/keys.c    **** 		}
 1763              		.loc 1 1625 11 is_stmt 0 view .LVU556
 1764 003c 0120     		movs	r0, #1
 1765              	.LVL142:
1625:src/keys.c    **** 		}
 1766              		.loc 1 1625 11 view .LVU557
 1767 003e 7047     		bx	lr
 1768              	.L201:
 1769              		.align	2
 1770              	.L200:
 1771 0040 00000000 		.word	StateWhileOn
 1772              		.cfi_endproc
ARM GAS  /tmp/ccy15zOt.s 			page 87


 1773              	.LFE34:
 1775              		.section	.text.process_arg,"ax",%progbits
 1776              		.align	1
 1777              		.p2align 2,,3
 1778              		.syntax unified
 1779              		.thumb
 1780              		.thumb_func
 1781              		.fpu fpv4-sp-d16
 1783              	process_arg:
 1784              	.LVL143:
 1785              	.LFB37:
1663:src/keys.c    **** 	unsigned int base = CmdBase;
 1786              		.loc 1 1663 41 is_stmt 1 view -0
 1787              		.cfi_startproc
 1788              		@ args = 0, pretend = 0, frame = 8
 1789              		@ frame_needed = 0, uses_anonymous_args = 0
1664:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1790              		.loc 1 1664 2 view .LVU559
1663:src/keys.c    **** 	unsigned int base = CmdBase;
 1791              		.loc 1 1663 41 is_stmt 0 view .LVU560
 1792 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1793              		.cfi_def_cfa_offset 36
 1794              		.cfi_offset 4, -36
 1795              		.cfi_offset 5, -32
 1796              		.cfi_offset 6, -28
 1797              		.cfi_offset 7, -24
 1798              		.cfi_offset 8, -20
 1799              		.cfi_offset 9, -16
 1800              		.cfi_offset 10, -12
 1801              		.cfi_offset 11, -8
 1802              		.cfi_offset 14, -4
1664:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1803              		.loc 1 1664 22 view .LVU561
 1804 0004 A94D     		ldr	r5, .L317
1666:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1805              		.loc 1 1666 31 view .LVU562
 1806 0006 DFF8B4B2 		ldr	fp, .L317+16
1664:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1807              		.loc 1 1664 22 view .LVU563
 1808 000a EF7F     		ldrb	r7, [r5, #31]	@ zero_extendqisi2
 1809              	.LVL144:
1665:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
 1810              		.loc 1 1665 2 is_stmt 1 view .LVU564
 1811              	.LBB315:
 1812              	.LBB316:
 1813              	.LBB317:
 1814              	.LBB318:
 131:src/keys.c    **** }
 1815              		.loc 1 131 23 is_stmt 0 view .LVU565
 1816 000c A84B     		ldr	r3, .L317+4
 1817              	.LBE318:
 1818              	.LBE317:
 221:src/keys.c    **** }
 1819              		.loc 1 221 28 view .LVU566
 1820 000e A94A     		ldr	r2, .L317+8
 1821              	.LBB321:
 1822              	.LBB319:
ARM GAS  /tmp/ccy15zOt.s 			page 88


 131:src/keys.c    **** }
 1823              		.loc 1 131 23 view .LVU567
 1824 0010 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 1825              	.LBE319:
 1826              	.LBE321:
 1827              	.LBE316:
 1828              	.LBE315:
1666:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1829              		.loc 1 1666 31 view .LVU568
 1830 0012 0BEB0711 		add	r1, fp, r7, lsl #4
 1831              	.LBB325:
 1832              	.LBB323:
 221:src/keys.c    **** }
 1833              		.loc 1 221 28 view .LVU569
 1834 0016 12F80390 		ldrb	r9, [r2, r3]	@ zero_extendqisi2
 1835              	.LBE323:
 1836              	.LBE325:
1666:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1837              		.loc 1 1666 31 view .LVU570
 1838 001a 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
1663:src/keys.c    **** 	unsigned int base = CmdBase;
 1839              		.loc 1 1663 41 view .LVU571
 1840 001c 83B0     		sub	sp, sp, #12
 1841              		.cfi_def_cfa_offset 48
1666:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1842              		.loc 1 1666 40 view .LVU572
 1843 001e 4A07     		lsls	r2, r1, #29
 1844 0020 58BF     		it	pl
 1845 0022 95F91580 		ldrsbpl	r8, [r5, #21]
1666:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1846              		.loc 1 1666 31 view .LVU573
 1847 0026 C1F38003 		ubfx	r3, r1, #2, #1
 1848 002a 0193     		str	r3, [sp, #4]
1667:src/keys.c    **** 	const enum shifts shift = reset_shift();
 1849              		.loc 1 1667 20 view .LVU574
 1850 002c 2B7C     		ldrb	r3, [r5, #16]	@ zero_extendqisi2
 1851 002e 0093     		str	r3, [sp]
1666:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1852              		.loc 1 1666 40 view .LVU575
 1853 0030 54BF     		ite	pl
 1854 0032 4FEAD878 		lsrpl	r8, r8, #31
 1855 0036 4FF00108 		movmi	r8, #1
1663:src/keys.c    **** 	unsigned int base = CmdBase;
 1856              		.loc 1 1663 41 view .LVU576
 1857 003a 0646     		mov	r6, r0
 1858              	.LVL145:
 1859              	.LBB326:
 1860              	.LBI315:
 198:src/keys.c    **** {
 1861              		.loc 1 198 14 is_stmt 1 view .LVU577
 1862              	.LBB324:
 200:src/keys.c    ****     // K00 - K05
 1863              		.loc 1 200 3 view .LVU578
 221:src/keys.c    **** }
 1864              		.loc 1 221 3 view .LVU579
 1865              	.LBB322:
 1866              	.LBI317:
ARM GAS  /tmp/ccy15zOt.s 			page 89


 119:src/keys.c    **** {
 1867              		.loc 1 119 12 view .LVU580
 1868              	.LBB320:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 1869              		.loc 1 121 2 view .LVU581
 131:src/keys.c    **** }
 1870              		.loc 1 131 2 view .LVU582
 131:src/keys.c    **** }
 1871              		.loc 1 131 2 is_stmt 0 view .LVU583
 1872              	.LBE320:
 1873              	.LBE322:
 221:src/keys.c    **** }
 1874              		.loc 1 221 10 view .LVU584
 1875 003c 4C46     		mov	r4, r9
 1876              	.LVL146:
 221:src/keys.c    **** }
 1877              		.loc 1 221 10 view .LVU585
 1878              	.LBE324:
 1879              	.LBE326:
1666:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1880              		.loc 1 1666 2 is_stmt 1 view .LVU586
1667:src/keys.c    **** 	const enum shifts shift = reset_shift();
 1881              		.loc 1 1667 2 view .LVU587
1668:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
 1882              		.loc 1 1668 2 view .LVU588
 1883              	.LBB327:
 1884              	.LBI327:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 1885              		.loc 1 102 13 view .LVU589
 1886              	.LBE327:
 103:src/keys.c    **** }
 1887              		.loc 1 103 2 view .LVU590
 1888              	.LBB340:
 1889              	.LBB328:
 1890              	.LBI328:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 1891              		.loc 1 92 20 view .LVU591
 1892              	.LBB329:
  93:src/keys.c    **** 	State2.shifts = shift;
 1893              		.loc 1 93 2 view .LVU592
 1894              	.LBB330:
 1895              	.LBI330:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 1896              		.loc 1 84 13 view .LVU593
 1897              	.LBB331:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1898              		.loc 1 85 2 view .LVU594
 1899              	.LBE331:
 1900              	.LBE330:
 1901              	.LBE329:
 1902              	.LBE328:
 1903              	.LBE340:
1666:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1904              		.loc 1 1666 31 is_stmt 0 view .LVU595
 1905 003e 4FEA071A 		lsl	r10, r7, #4
 1906              	.LBB341:
 1907              	.LBB337:
ARM GAS  /tmp/ccy15zOt.s 			page 90


 1908              	.LBB334:
 1909              	.LBB333:
 1910              	.LBB332:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1911              		.loc 1 85 18 view .LVU596
 1912 0042 FFF7FEFF 		bl	shift_down
 1913              	.LVL147:
  86:src/keys.c    **** }
 1914              		.loc 1 86 2 is_stmt 1 view .LVU597
  86:src/keys.c    **** }
 1915              		.loc 1 86 52 is_stmt 0 view .LVU598
 1916 0046 00B9     		cbnz	r0, .L204
 1917 0048 287C     		ldrb	r0, [r5, #16]	@ zero_extendqisi2
 1918              	.LVL148:
 1919              	.L204:
  86:src/keys.c    **** }
 1920              		.loc 1 86 52 view .LVU599
 1921              	.LBE332:
 1922              	.LBE333:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1923              		.loc 1 94 2 is_stmt 1 view .LVU600
 1924              	.LBE334:
 1925              	.LBE337:
 1926              	.LBE341:
1669:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1927              		.loc 1 1669 38 is_stmt 0 view .LVU601
 1928 004a 0BEB0A01 		add	r1, fp, r10
 1929              	.LBB342:
 1930              	.LBB338:
 1931              	.LBB335:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1932              		.loc 1 94 16 view .LVU602
 1933 004e 4FF0000C 		mov	ip, #0
 1934              	.LBE335:
 1935              	.LBE338:
 1936              	.LBE342:
1669:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1937              		.loc 1 1669 38 view .LVU603
 1938 0052 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 1939              	.LBB343:
 1940              	.LBB339:
 1941              	.LBB336:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 1942              		.loc 1 94 16 view .LVU604
 1943 0054 85F810C0 		strb	ip, [r5, #16]
  96:src/keys.c    **** }
 1944              		.loc 1 96 2 is_stmt 1 view .LVU605
 1945              	.LVL149:
  96:src/keys.c    **** }
 1946              		.loc 1 96 2 is_stmt 0 view .LVU606
 1947              	.LBE336:
 1948              	.LBE339:
 1949              	.LBE343:
1669:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1950              		.loc 1 1669 2 is_stmt 1 view .LVU607
1669:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1951              		.loc 1 1669 61 is_stmt 0 view .LVU608
ARM GAS  /tmp/ccy15zOt.s 			page 91


 1952 0058 8B06     		lsls	r3, r1, #26
1669:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1953              		.loc 1 1669 38 view .LVU609
 1954 005a C1F3401E 		ubfx	lr, r1, #5, #1
1669:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1955              		.loc 1 1669 61 view .LVU610
 1956 005e 46D5     		bpl	.L205
1669:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1957              		.loc 1 1669 61 discriminator 1 view .LVU611
 1958 0060 697D     		ldrb	r1, [r5, #21]	@ zero_extendqisi2
 1959 0062 11F0C00F 		tst	r1, #192
 1960 0066 57D1     		bne	.L206
 1961              	.LVL150:
1670:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 1962              		.loc 1 1670 2 is_stmt 1 view .LVU612
1670:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 1963              		.loc 1 1670 35 is_stmt 0 view .LVU613
 1964 0068 292E     		cmp	r6, #41
 1965 006a 7DD0     		beq	.L207
1671:src/keys.c    **** 
 1966              		.loc 1 1671 11 view .LVU614
 1967 006c 0128     		cmp	r0, #1
 1968 006e 00F09280 		beq	.L208
1671:src/keys.c    **** 
 1969              		.loc 1 1671 32 discriminator 3 view .LVU615
 1970 0072 B9F1090F 		cmp	r9, #9
 1971 0076 00F28B80 		bhi	.L209
 1972              	.LVL151:
1673:src/keys.c    **** 	if (base >= NUM_RARG) {
 1973              		.loc 1 1673 2 is_stmt 1 view .LVU616
1674:src/keys.c    **** 		reset_arg();
 1974              		.loc 1 1674 2 view .LVU617
1674:src/keys.c    **** 		reset_arg();
 1975              		.loc 1 1674 5 is_stmt 0 view .LVU618
 1976 007a 8C2F     		cmp	r7, #140
 1977 007c 50D8     		bhi	.L266
1679:src/keys.c    **** 	  switch (n) {
 1978              		.loc 1 1679 35 view .LVU619
 1979 007e 6969     		ldr	r1, [r5, #20]
 1980 0080 11F4103F 		tst	r1, #147456
1669:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1981              		.loc 1 1669 61 view .LVU620
 1982 0084 4FF0010C 		mov	ip, #1
1679:src/keys.c    **** 	  switch (n) {
 1983              		.loc 1 1679 35 view .LVU621
 1984 0088 7BD0     		beq	.L270
 1985              	.LVL152:
 1986              	.L217:
1702:src/keys.c    **** 		// row column shorthand addressing
 1987              		.loc 1 1702 2 is_stmt 1 view .LVU622
1727:src/keys.c    **** 	case K_F:
 1988              		.loc 1 1727 2 view .LVU623
 1989 008a 2D2E     		cmp	r6, #45
 1990 008c 4AD8     		bhi	.L304
 1991 008e DFE816F0 		tbh	[pc, r6, lsl #1]
 1992              	.L268:
 1993 0092 4D00     		.2byte	(.L232-.L268)/2
ARM GAS  /tmp/ccy15zOt.s 			page 92


 1994 0094 4D00     		.2byte	(.L232-.L268)/2
 1995 0096 4D00     		.2byte	(.L232-.L268)/2
 1996 0098 4D00     		.2byte	(.L232-.L268)/2
 1997 009a 4900     		.2byte	(.L304-.L268)/2
 1998 009c 4900     		.2byte	(.L304-.L268)/2
 1999 009e 4900     		.2byte	(.L304-.L268)/2
 2000 00a0 4900     		.2byte	(.L304-.L268)/2
 2001 00a2 4D00     		.2byte	(.L232-.L268)/2
 2002 00a4 4D00     		.2byte	(.L232-.L268)/2
 2003 00a6 4D00     		.2byte	(.L232-.L268)/2
 2004 00a8 4D00     		.2byte	(.L232-.L268)/2
 2005 00aa D500     		.2byte	(.L255-.L268)/2
 2006 00ac 4900     		.2byte	(.L304-.L268)/2
 2007 00ae 4900     		.2byte	(.L304-.L268)/2
 2008 00b0 4900     		.2byte	(.L304-.L268)/2
 2009 00b2 6801     		.2byte	(.L262-.L268)/2
 2010 00b4 4900     		.2byte	(.L304-.L268)/2
 2011 00b6 DB00     		.2byte	(.L253-.L268)/2
 2012 00b8 4900     		.2byte	(.L304-.L268)/2
 2013 00ba 4900     		.2byte	(.L304-.L268)/2
 2014 00bc 4900     		.2byte	(.L304-.L268)/2
 2015 00be 6201     		.2byte	(.L252-.L268)/2
 2016 00c0 4900     		.2byte	(.L304-.L268)/2
 2017 00c2 5601     		.2byte	(.L254-.L268)/2
 2018 00c4 5C01     		.2byte	(.L231-.L268)/2
 2019 00c6 4900     		.2byte	(.L304-.L268)/2
 2020 00c8 4900     		.2byte	(.L304-.L268)/2
 2021 00ca 9800     		.2byte	(.L249-.L268)/2
 2022 00cc 4900     		.2byte	(.L304-.L268)/2
 2023 00ce 4900     		.2byte	(.L304-.L268)/2
 2024 00d0 4001     		.2byte	(.L233-.L268)/2
 2025 00d2 4A01     		.2byte	(.L234-.L268)/2
 2026 00d4 5001     		.2byte	(.L235-.L268)/2
 2027 00d6 E100     		.2byte	(.L246-.L268)/2
 2028 00d8 4900     		.2byte	(.L304-.L268)/2
 2029 00da 4700     		.2byte	(.L266-.L268)/2
 2030 00dc 4900     		.2byte	(.L304-.L268)/2
 2031 00de ED00     		.2byte	(.L239-.L268)/2
 2032 00e0 4900     		.2byte	(.L304-.L268)/2
 2033 00e2 1701     		.2byte	(.L243-.L268)/2
 2034 00e4 B000     		.2byte	(.L225-.L268)/2
 2035 00e6 4900     		.2byte	(.L304-.L268)/2
 2036 00e8 4900     		.2byte	(.L304-.L268)/2
 2037 00ea 2601     		.2byte	(.L227-.L268)/2
 2038 00ec C600     		.2byte	(.L229-.L268)/2
 2039              	.LVL153:
 2040              		.p2align 1
 2041              	.L205:
1673:src/keys.c    **** 	if (base >= NUM_RARG) {
 2042              		.loc 1 1673 2 view .LVU624
1674:src/keys.c    **** 		reset_arg();
 2043              		.loc 1 1674 5 is_stmt 0 view .LVU625
 2044 00ee 8C2F     		cmp	r7, #140
1673:src/keys.c    **** 	if (base >= NUM_RARG) {
 2045              		.loc 1 1673 4 view .LVU626
 2046 00f0 29F08004 		bic	r4, r9, #128
 2047              	.LVL154:
ARM GAS  /tmp/ccy15zOt.s 			page 93


1674:src/keys.c    **** 		reset_arg();
 2048              		.loc 1 1674 2 is_stmt 1 view .LVU627
1674:src/keys.c    **** 		reset_arg();
 2049              		.loc 1 1674 5 is_stmt 0 view .LVU628
 2050 00f4 14D8     		bhi	.L266
1669:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2051              		.loc 1 1669 61 view .LVU629
 2052 00f6 F446     		mov	ip, lr
 2053              	.L214:
1679:src/keys.c    **** 	  switch (n) {
 2054              		.loc 1 1679 35 discriminator 1 view .LVU630
 2055 00f8 6969     		ldr	r1, [r5, #20]
 2056 00fa 11F4103F 		tst	r1, #147456
 2057 00fe C4D1     		bne	.L217
1680:src/keys.c    **** 	  case regX_idx:
 2058              		.loc 1 1680 4 is_stmt 1 view .LVU631
 2059 0100 672C     		cmp	r4, #103
 2060 0102 C2D8     		bhi	.L217
 2061              	.LVL155:
 2062              	.L269:
1680:src/keys.c    **** 	  case regX_idx:
 2063              		.loc 1 1680 4 is_stmt 0 view .LVU632
 2064 0104 632C     		cmp	r4, #99
 2065 0106 3CD9     		bls	.L270
 2066 0108 653C     		subs	r4, r4, #101
 2067 010a 022C     		cmp	r4, #2
 2068 010c 00F2AA81 		bhi	.L220
 2069 0110 DFE804F0 		tbb	[pc, r4]
 2070              	.L222:
 2071 0114 6B       		.byte	(.L224-.L222)/2
 2072 0115 65       		.byte	(.L223-.L222)/2
 2073 0116 6D       		.byte	(.L221-.L222)/2
 2074              	.LVL156:
 2075 0117 00       		.p2align 1
 2076              	.L206:
1673:src/keys.c    **** 	if (base >= NUM_RARG) {
 2077              		.loc 1 1673 2 is_stmt 1 view .LVU633
1674:src/keys.c    **** 		reset_arg();
 2078              		.loc 1 1674 5 is_stmt 0 view .LVU634
 2079 0118 8C2F     		cmp	r7, #140
1673:src/keys.c    **** 	if (base >= NUM_RARG) {
 2080              		.loc 1 1673 4 view .LVU635
 2081 011a 29F08004 		bic	r4, r9, #128
 2082              	.LVL157:
1674:src/keys.c    **** 		reset_arg();
 2083              		.loc 1 1674 2 is_stmt 1 view .LVU636
1674:src/keys.c    **** 		reset_arg();
 2084              		.loc 1 1674 5 is_stmt 0 view .LVU637
 2085 011e EBD9     		bls	.L214
 2086              	.LVL158:
 2087              	.L266:
1894:src/keys.c    **** 	default:
 2088              		.loc 1 1894 3 is_stmt 1 view .LVU638
 2089 0120 FFF7FEFF 		bl	reset_arg
 2090              	.LVL159:
 2091              	.L304:
1898:src/keys.c    **** }
ARM GAS  /tmp/ccy15zOt.s 			page 94


 2092              		.loc 1 1898 9 is_stmt 0 view .LVU639
 2093 0124 3320     		movs	r0, #51
 2094              	.L202:
1899:src/keys.c    **** 
 2095              		.loc 1 1899 1 view .LVU640
 2096 0126 03B0     		add	sp, sp, #12
 2097              		.cfi_remember_state
 2098              		.cfi_def_cfa_offset 36
 2099              	.LVL160:
1899:src/keys.c    **** 
 2100              		.loc 1 1899 1 view .LVU641
 2101              		@ sp needed
 2102 0128 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2103              	.LVL161:
 2104              	.L232:
 2105              		.cfi_restore_state
1782:src/keys.c    **** 			return arg_eval(n);
 2106              		.loc 1 1782 4 is_stmt 1 view .LVU642
1782:src/keys.c    **** 			return arg_eval(n);
 2107              		.loc 1 1782 8 is_stmt 0 view .LVU643
 2108 012c 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
1782:src/keys.c    **** 			return arg_eval(n);
 2109              		.loc 1 1782 7 view .LVU644
 2110 012e 5F06     		lsls	r7, r3, #25
 2111              	.LVL162:
1782:src/keys.c    **** 			return arg_eval(n);
 2112              		.loc 1 1782 7 view .LVU645
 2113 0130 53D4     		bmi	.L251
1782:src/keys.c    **** 			return arg_eval(n);
 2114              		.loc 1 1782 19 discriminator 1 view .LVU646
 2115 0132 B8F1000F 		cmp	r8, #0
 2116 0136 50D1     		bne	.L251
1784:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 2117              		.loc 1 1784 3 is_stmt 1 view .LVU647
1784:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 2118              		.loc 1 1784 6 is_stmt 0 view .LVU648
 2119 0138 032E     		cmp	r6, #3
 2120 013a F3D8     		bhi	.L304
1785:src/keys.c    **** 		break;
 2121              		.loc 1 1785 4 is_stmt 1 view .LVU649
 2122              	.LVL163:
 2123              	.LBB344:
 2124              	.LBI344:
1590:src/keys.c    **** 	const unsigned int b = CmdBase;
 2125              		.loc 1 1590 12 view .LVU650
 2126              	.LBB345:
1591:src/keys.c    **** 
 2127              		.loc 1 1591 2 view .LVU651
1591:src/keys.c    **** 
 2128              		.loc 1 1591 21 is_stmt 0 view .LVU652
 2129 013c EA7F     		ldrb	r2, [r5, #31]	@ zero_extendqisi2
 2130              	.LVL164:
1593:src/keys.c    **** 	{
 2131              		.loc 1 1593 2 is_stmt 1 view .LVU653
1593:src/keys.c    **** 	{
 2132              		.loc 1 1593 16 is_stmt 0 view .LVU654
 2133 013e 0BEB0210 		add	r0, fp, r2, lsl #4
ARM GAS  /tmp/ccy15zOt.s 			page 95


 2134 0142 1101     		lsls	r1, r2, #4
 2135 0144 4079     		ldrb	r0, [r0, #5]	@ zero_extendqisi2
1593:src/keys.c    **** 	{
 2136              		.loc 1 1593 5 view .LVU655
 2137 0146 8006     		lsls	r0, r0, #26
 2138 0148 02D4     		bmi	.L238
1593:src/keys.c    **** 	{
 2139              		.loc 1 1593 40 view .LVU656
 2140 014a 513A     		subs	r2, r2, #81
 2141              	.LVL165:
1593:src/keys.c    **** 	{
 2142              		.loc 1 1593 23 view .LVU657
 2143 014c 0A2A     		cmp	r2, #10
 2144 014e E9D8     		bhi	.L304
 2145              	.LVL166:
 2146              	.L238:
1595:src/keys.c    **** 			return STATE_UNFINISHED;
 2147              		.loc 1 1595 3 is_stmt 1 view .LVU658
1595:src/keys.c    **** 			return STATE_UNFINISHED;
 2148              		.loc 1 1595 6 is_stmt 0 view .LVU659
 2149 0150 1F06     		lsls	r7, r3, #24
 2150 0152 E7D4     		bmi	.L304
1595:src/keys.c    **** 			return STATE_UNFINISHED;
 2151              		.loc 1 1595 18 view .LVU660
 2152 0154 EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 2153 0156 002B     		cmp	r3, #0
 2154 0158 E4D1     		bne	.L304
1597:src/keys.c    **** 			return STATE_UNFINISHED;
 2155              		.loc 1 1597 3 is_stmt 1 view .LVU661
1597:src/keys.c    **** 			return STATE_UNFINISHED;
 2156              		.loc 1 1597 17 is_stmt 0 view .LVU662
 2157 015a 5944     		add	r1, r1, fp
1597:src/keys.c    **** 			return STATE_UNFINISHED;
 2158              		.loc 1 1597 6 view .LVU663
 2159 015c 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 2160 015e 632B     		cmp	r3, #99
 2161 0160 E0D9     		bls	.L304
1599:src/keys.c    **** 	}
 2162              		.loc 1 1599 3 is_stmt 1 view .LVU664
1599:src/keys.c    **** 	}
 2163              		.loc 1 1599 10 is_stmt 0 view .LVU665
 2164 0162 06F16400 		add	r0, r6, #100
 2165 0166 27E0     		b	.L306
 2166              	.LVL167:
 2167              	.L207:
1599:src/keys.c    **** 	}
 2168              		.loc 1 1599 10 view .LVU666
 2169              	.LBE345:
 2170              	.LBE344:
1673:src/keys.c    **** 	if (base >= NUM_RARG) {
 2171              		.loc 1 1673 2 is_stmt 1 view .LVU667
1674:src/keys.c    **** 		reset_arg();
 2172              		.loc 1 1674 2 view .LVU668
1674:src/keys.c    **** 		reset_arg();
 2173              		.loc 1 1674 5 is_stmt 0 view .LVU669
 2174 0168 8C2F     		cmp	r7, #140
 2175 016a D9D8     		bhi	.L266
ARM GAS  /tmp/ccy15zOt.s 			page 96


1679:src/keys.c    **** 	  switch (n) {
 2176              		.loc 1 1679 35 view .LVU670
 2177 016c 6969     		ldr	r1, [r5, #20]
 2178 016e 11F4103F 		tst	r1, #147456
 2179 0172 41D1     		bne	.L226
1673:src/keys.c    **** 	if (base >= NUM_RARG) {
 2180              		.loc 1 1673 4 view .LVU671
 2181 0174 29F08004 		bic	r4, r9, #128
1680:src/keys.c    **** 	  case regX_idx:
 2182              		.loc 1 1680 4 is_stmt 1 view .LVU672
 2183 0178 672C     		cmp	r4, #103
 2184 017a 3DD8     		bhi	.L226
1669:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2185              		.loc 1 1669 61 is_stmt 0 view .LVU673
 2186 017c 4FF0010C 		mov	ip, #1
 2187 0180 C0E7     		b	.L269
 2188              	.LVL168:
 2189              	.L270:
1680:src/keys.c    **** 	  case regX_idx:
 2190              		.loc 1 1680 4 view .LVU674
 2191 0182 1CB1     		cbz	r4, .L219
 2192 0184 631F     		subs	r3, r4, #5
 2193 0186 042B     		cmp	r3, #4
 2194 0188 3FF67FAF 		bhi	.L217
 2195              	.L219:
1695:src/keys.c    **** 	  }
 2196              		.loc 1 1695 6 is_stmt 1 view .LVU675
1695:src/keys.c    **** 	  }
 2197              		.loc 1 1695 13 is_stmt 0 view .LVU676
 2198 018c 2046     		mov	r0, r4
 2199              	.LVL169:
1695:src/keys.c    **** 	  }
 2200              		.loc 1 1695 13 view .LVU677
 2201 018e 27E0     		b	.L305
 2202              	.LVL170:
 2203              	.L209:
1671:src/keys.c    **** 
 2204              		.loc 1 1671 42 discriminator 4 view .LVU678
 2205 0190 19F0800F 		tst	r9, #128
 2206 0194 3CD1     		bne	.L212
 2207              	.L208:
 2208              	.LVL171:
1673:src/keys.c    **** 	if (base >= NUM_RARG) {
 2209              		.loc 1 1673 2 is_stmt 1 view .LVU679
1674:src/keys.c    **** 		reset_arg();
 2210              		.loc 1 1674 2 view .LVU680
1674:src/keys.c    **** 		reset_arg();
 2211              		.loc 1 1674 5 is_stmt 0 view .LVU681
 2212 0196 8C2F     		cmp	r7, #140
 2213 0198 C2D8     		bhi	.L266
1702:src/keys.c    **** 		// row column shorthand addressing
 2214              		.loc 1 1702 2 is_stmt 1 view .LVU682
1704:src/keys.c    **** 
 2215              		.loc 1 1704 3 view .LVU683
 2216              	.LVL172:
 2217              	.LBB346:
 2218              	.LBI346:
ARM GAS  /tmp/ccy15zOt.s 			page 97


 167:src/keys.c    **** {
 2219              		.loc 1 167 5 view .LVU684
 2220              	.LBB347:
 169:src/keys.c    **** }
 2221              		.loc 1 169 2 view .LVU685
 169:src/keys.c    **** }
 2222              		.loc 1 169 18 is_stmt 0 view .LVU686
 2223 019a 474B     		ldr	r3, .L317+12
 2224 019c A3FB0623 		umull	r2, r3, r3, r6
 169:src/keys.c    **** }
 2225              		.loc 1 169 24 view .LVU687
 2226 01a0 03F0FC00 		and	r0, r3, #252
 2227              	.LVL173:
 169:src/keys.c    **** }
 2228              		.loc 1 169 24 view .LVU688
 2229 01a4 00EB9300 		add	r0, r0, r3, lsr #2
 169:src/keys.c    **** }
 2230              		.loc 1 169 18 view .LVU689
 2231 01a8 9B08     		lsrs	r3, r3, #2
 169:src/keys.c    **** }
 2232              		.loc 1 169 24 view .LVU690
 2233 01aa 4000     		lsls	r0, r0, #1
 169:src/keys.c    **** }
 2234              		.loc 1 169 33 view .LVU691
 2235 01ac 03EB4303 		add	r3, r3, r3, lsl #1
 169:src/keys.c    **** }
 2236              		.loc 1 169 12 view .LVU692
 2237 01b0 0B30     		adds	r0, r0, #11
 169:src/keys.c    **** }
 2238              		.loc 1 169 33 view .LVU693
 2239 01b2 A6EB4306 		sub	r6, r6, r3, lsl #1
 2240              	.LBE347:
 2241              	.LBE346:
1704:src/keys.c    **** 
 2242              		.loc 1 1704 10 view .LVU694
 2243 01b6 3044     		add	r0, r0, r6
 2244              	.LVL174:
 2245              	.L306:
1899:src/keys.c    **** 
 2246              		.loc 1 1899 1 view .LVU695
 2247 01b8 03B0     		add	sp, sp, #12
 2248              		.cfi_remember_state
 2249              		.cfi_def_cfa_offset 36
 2250              	.LVL175:
1899:src/keys.c    **** 
 2251              		.loc 1 1899 1 view .LVU696
 2252              		@ sp needed
 2253 01ba BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2254              		.cfi_restore 14
 2255              		.cfi_restore 11
 2256              		.cfi_restore 10
 2257              		.cfi_restore 9
 2258              		.cfi_restore 8
 2259              		.cfi_restore 7
 2260              		.cfi_restore 6
 2261              		.cfi_restore 5
 2262              		.cfi_restore 4
ARM GAS  /tmp/ccy15zOt.s 			page 98


 2263              		.cfi_def_cfa_offset 0
 2264              	.LVL176:
1704:src/keys.c    **** 
 2265              		.loc 1 1704 10 view .LVU697
 2266 01be FFF7FEBF 		b	arg_eval
 2267              	.LVL177:
 2268              	.L249:
 2269              		.cfi_restore_state
1804:src/keys.c    **** 			return arg_eval(n);
 2270              		.loc 1 1804 3 is_stmt 1 view .LVU698
1804:src/keys.c    **** 			return arg_eval(n);
 2271              		.loc 1 1804 7 is_stmt 0 view .LVU699
 2272 01c2 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
1804:src/keys.c    **** 			return arg_eval(n);
 2273              		.loc 1 1804 6 view .LVU700
 2274 01c4 5806     		lsls	r0, r3, #25
 2275              	.LVL178:
1804:src/keys.c    **** 			return arg_eval(n);
 2276              		.loc 1 1804 6 view .LVU701
 2277 01c6 08D4     		bmi	.L251
1804:src/keys.c    **** 			return arg_eval(n);
 2278              		.loc 1 1804 25 discriminator 1 view .LVU702
 2279 01c8 0121     		movs	r1, #1
 2280 01ca 0320     		movs	r0, #3
 2281 01cc FFF7FEFF 		bl	arg_storcl
 2282              	.LVL179:
1804:src/keys.c    **** 			return arg_eval(n);
 2283              		.loc 1 1804 18 discriminator 1 view .LVU703
 2284 01d0 0028     		cmp	r0, #0
 2285 01d2 A7D1     		bne	.L304
1804:src/keys.c    **** 			return arg_eval(n);
 2286              		.loc 1 1804 63 discriminator 2 view .LVU704
 2287 01d4 B8F1000F 		cmp	r8, #0
 2288 01d8 A4D0     		beq	.L304
 2289              	.LVL180:
 2290              	.L251:
1805:src/keys.c    **** 		break;
 2291              		.loc 1 1805 4 is_stmt 1 view .LVU705
1805:src/keys.c    **** 		break;
 2292              		.loc 1 1805 11 is_stmt 0 view .LVU706
 2293 01da 2046     		mov	r0, r4
 2294 01dc ECE7     		b	.L306
 2295              	.LVL181:
 2296              	.L223:
1686:src/keys.c    **** 	  case regT_idx:
 2297              		.loc 1 1686 6 is_stmt 1 view .LVU707
1686:src/keys.c    **** 	  case regT_idx:
 2298              		.loc 1 1686 13 is_stmt 0 view .LVU708
 2299 01de 0320     		movs	r0, #3
 2300              	.LVL182:
 2301              	.L305:
1899:src/keys.c    **** 
 2302              		.loc 1 1899 1 view .LVU709
 2303 01e0 03B0     		add	sp, sp, #12
 2304              		.cfi_remember_state
 2305              		.cfi_def_cfa_offset 36
 2306              	.LVL183:
ARM GAS  /tmp/ccy15zOt.s 			page 99


1899:src/keys.c    **** 
 2307              		.loc 1 1899 1 view .LVU710
 2308              		@ sp needed
 2309 01e2 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2310              		.cfi_restore 14
 2311              		.cfi_restore 11
 2312              		.cfi_restore 10
 2313              		.cfi_restore 9
 2314              		.cfi_restore 8
 2315              		.cfi_restore 7
 2316              		.cfi_restore 6
 2317              		.cfi_restore 5
 2318              		.cfi_restore 4
 2319              		.cfi_def_cfa_offset 0
 2320              	.LVL184:
1684:src/keys.c    **** 	  case regZ_idx:
 2321              		.loc 1 1684 13 view .LVU711
 2322 01e6 FFF7FEBF 		b	arg_digit
 2323              	.LVL185:
 2324              	.L224:
 2325              		.cfi_restore_state
1684:src/keys.c    **** 	  case regZ_idx:
 2326              		.loc 1 1684 6 is_stmt 1 view .LVU712
1684:src/keys.c    **** 	  case regZ_idx:
 2327              		.loc 1 1684 13 is_stmt 0 view .LVU713
 2328 01ea 0220     		movs	r0, #2
 2329              	.LVL186:
1684:src/keys.c    **** 	  case regZ_idx:
 2330              		.loc 1 1684 13 view .LVU714
 2331 01ec F8E7     		b	.L305
 2332              	.LVL187:
 2333              	.L221:
1688:src/keys.c    **** 	  case 5:
 2334              		.loc 1 1688 6 is_stmt 1 view .LVU715
1688:src/keys.c    **** 	  case 5:
 2335              		.loc 1 1688 13 is_stmt 0 view .LVU716
 2336 01ee 0420     		movs	r0, #4
 2337              	.LVL188:
1688:src/keys.c    **** 	  case 5:
 2338              		.loc 1 1688 13 view .LVU717
 2339 01f0 F6E7     		b	.L305
 2340              	.LVL189:
 2341              	.L225:
1729:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 2342              		.loc 1 1729 3 is_stmt 1 view .LVU718
1729:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 2343              		.loc 1 1729 6 is_stmt 0 view .LVU719
 2344 01f2 BCF1000F 		cmp	ip, #0
 2345 01f6 95D0     		beq	.L304
 2346              	.L226:
1730:src/keys.c    **** 		break;
 2347              		.loc 1 1730 4 is_stmt 1 view .LVU720
 2348              	.LVL190:
 2349              	.LBB348:
 2350              	.LBI348:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 2351              		.loc 1 92 20 view .LVU721
ARM GAS  /tmp/ccy15zOt.s 			page 100


 2352              	.LBB349:
  93:src/keys.c    **** 	State2.shifts = shift;
 2353              		.loc 1 93 2 view .LVU722
 2354              	.LBB350:
 2355              	.LBI350:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 2356              		.loc 1 84 13 view .LVU723
 2357              	.LBB351:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2358              		.loc 1 85 2 view .LVU724
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2359              		.loc 1 85 18 is_stmt 0 view .LVU725
 2360 01f8 FFF7FEFF 		bl	shift_down
 2361              	.LVL191:
  86:src/keys.c    **** }
 2362              		.loc 1 86 2 is_stmt 1 view .LVU726
 2363              	.LBE351:
 2364              	.LBE350:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 2365              		.loc 1 94 2 view .LVU727
 2366              	.LBE349:
 2367              	.LBE348:
1730:src/keys.c    **** 		break;
 2368              		.loc 1 1730 4 is_stmt 0 view .LVU728
 2369 01fc 009B     		ldr	r3, [sp]
 2370 01fe B3F10109 		subs	r9, r3, #1
 2371 0202 18BF     		it	ne
 2372 0204 4FF00109 		movne	r9, #1
 2373 0208 85F81090 		strb	r9, [r5, #16]
 2374              	.LBB354:
 2375              	.LBB352:
  96:src/keys.c    **** }
 2376              		.loc 1 96 2 is_stmt 1 view .LVU729
 2377              	.LBE352:
 2378              	.LBE354:
1898:src/keys.c    **** }
 2379              		.loc 1 1898 9 is_stmt 0 view .LVU730
 2380 020c 3320     		movs	r0, #51
 2381              	.LBB355:
 2382              	.LBB353:
  96:src/keys.c    **** }
 2383              		.loc 1 96 9 view .LVU731
 2384 020e 8AE7     		b	.L202
 2385              	.LVL192:
 2386              	.L212:
  96:src/keys.c    **** }
 2387              		.loc 1 96 9 view .LVU732
 2388              	.LBE353:
 2389              	.LBE355:
1673:src/keys.c    **** 	if (base >= NUM_RARG) {
 2390              		.loc 1 1673 2 is_stmt 1 view .LVU733
1674:src/keys.c    **** 		reset_arg();
 2391              		.loc 1 1674 5 is_stmt 0 view .LVU734
 2392 0210 8C2F     		cmp	r7, #140
1673:src/keys.c    **** 	if (base >= NUM_RARG) {
 2393              		.loc 1 1673 4 view .LVU735
 2394 0212 29F08004 		bic	r4, r9, #128
ARM GAS  /tmp/ccy15zOt.s 			page 101


 2395              	.LVL193:
1674:src/keys.c    **** 		reset_arg();
 2396              		.loc 1 1674 2 is_stmt 1 view .LVU736
1674:src/keys.c    **** 		reset_arg();
 2397              		.loc 1 1674 5 is_stmt 0 view .LVU737
 2398 0216 83D8     		bhi	.L266
1669:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2399              		.loc 1 1669 61 view .LVU738
 2400 0218 4FF0010C 		mov	ip, #1
 2401 021c 6CE7     		b	.L214
 2402              	.LVL194:
 2403              	.L229:
1742:src/keys.c    **** 			break;
 2404              		.loc 1 1742 3 is_stmt 1 view .LVU739
1742:src/keys.c    **** 			break;
 2405              		.loc 1 1742 18 is_stmt 0 view .LVU740
 2406 021e 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
1742:src/keys.c    **** 			break;
 2407              		.loc 1 1742 6 view .LVU741
 2408 0220 13F0C00F 		tst	r3, #192
 2409 0224 7FF47EAF 		bne	.L304
1744:src/keys.c    **** 			CmdBase = RARG_STOM;
 2410              		.loc 1 1744 3 is_stmt 1 view .LVU742
1744:src/keys.c    **** 			CmdBase = RARG_STOM;
 2411              		.loc 1 1744 6 is_stmt 0 view .LVU743
 2412 0228 032F     		cmp	r7, #3
 2413 022a 00F0F080 		beq	.L310
1746:src/keys.c    **** 			CmdBase = RARG_RCLM;
 2414              		.loc 1 1746 8 is_stmt 1 view .LVU744
1746:src/keys.c    **** 			CmdBase = RARG_RCLM;
 2415              		.loc 1 1746 11 is_stmt 0 view .LVU745
 2416 022e 0A2F     		cmp	r7, #10
 2417 0230 7FF478AF 		bne	.L304
1747:src/keys.c    **** 		break;
 2418              		.loc 1 1747 4 is_stmt 1 view .LVU746
1747:src/keys.c    **** 		break;
 2419              		.loc 1 1747 12 is_stmt 0 view .LVU747
 2420 0234 7823     		movs	r3, #120
 2421 0236 EB77     		strb	r3, [r5, #31]
1898:src/keys.c    **** }
 2422              		.loc 1 1898 9 view .LVU748
 2423 0238 3320     		movs	r0, #51
 2424              	.LVL195:
1898:src/keys.c    **** }
 2425              		.loc 1 1898 9 view .LVU749
 2426 023a 74E7     		b	.L202
 2427              	.LVL196:
 2428              	.L255:
1852:src/keys.c    **** 			if (argcmds[base].label) {
 2429              		.loc 1 1852 3 is_stmt 1 view .LVU750
1852:src/keys.c    **** 			if (argcmds[base].label) {
 2430              		.loc 1 1852 6 is_stmt 0 view .LVU751
 2431 023c EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 2432 023e 002B     		cmp	r3, #0
 2433 0240 00F0A180 		beq	.L311
1866:src/keys.c    **** 			return arg_eval(State2.digval);
 2434              		.loc 1 1866 10 is_stmt 1 view .LVU752
ARM GAS  /tmp/ccy15zOt.s 			page 102


1867:src/keys.c    **** 		else if (stack_reg)
 2435              		.loc 1 1867 4 view .LVU753
1867:src/keys.c    **** 		else if (stack_reg)
 2436              		.loc 1 1867 11 is_stmt 0 view .LVU754
 2437 0244 2889     		ldrh	r0, [r5, #8]
 2438              	.LVL197:
1867:src/keys.c    **** 		else if (stack_reg)
 2439              		.loc 1 1867 11 view .LVU755
 2440 0246 B7E7     		b	.L306
 2441              	.LVL198:
 2442              	.L253:
1844:src/keys.c    **** 		break;
 2443              		.loc 1 1844 3 is_stmt 1 view .LVU756
 2444 0248 0021     		movs	r1, #0
 2445 024a 0620     		movs	r0, #6
 2446              	.LVL199:
1844:src/keys.c    **** 		break;
 2447              		.loc 1 1844 3 is_stmt 0 view .LVU757
 2448 024c FFF7FEFF 		bl	arg_storcl
 2449              	.LVL200:
1845:src/keys.c    **** 
 2450              		.loc 1 1845 3 is_stmt 1 view .LVU758
1898:src/keys.c    **** }
 2451              		.loc 1 1898 9 is_stmt 0 view .LVU759
 2452 0250 3320     		movs	r0, #51
1845:src/keys.c    **** 
 2453              		.loc 1 1845 3 view .LVU760
 2454 0252 68E7     		b	.L202
 2455              	.LVL201:
 2456              	.L246:
1797:src/keys.c    **** 			reset_arg();
 2457              		.loc 1 1797 3 is_stmt 1 view .LVU761
1797:src/keys.c    **** 			reset_arg();
 2458              		.loc 1 1797 6 is_stmt 0 view .LVU762
 2459 0254 212F     		cmp	r7, #33
 2460 0256 00F0C780 		beq	.L247
1797:src/keys.c    **** 			reset_arg();
 2461              		.loc 1 1797 25 discriminator 1 view .LVU763
 2462 025a 732F     		cmp	r7, #115
 2463 025c 00F0C480 		beq	.L247
1801:src/keys.c    **** 		break;
 2464              		.loc 1 1801 3 is_stmt 1 view .LVU764
 2465 0260 0121     		movs	r1, #1
 2466 0262 0220     		movs	r0, #2
 2467              	.LVL202:
1801:src/keys.c    **** 		break;
 2468              		.loc 1 1801 3 is_stmt 0 view .LVU765
 2469 0264 FFF7FEFF 		bl	arg_storcl
 2470              	.LVL203:
1802:src/keys.c    **** 	case K44:		// multiply
 2471              		.loc 1 1802 3 is_stmt 1 view .LVU766
1898:src/keys.c    **** }
 2472              		.loc 1 1898 9 is_stmt 0 view .LVU767
 2473 0268 3320     		movs	r0, #51
1802:src/keys.c    **** 	case K44:		// multiply
 2474              		.loc 1 1802 3 view .LVU768
 2475 026a 5CE7     		b	.L202
ARM GAS  /tmp/ccy15zOt.s 			page 103


 2476              	.LVL204:
 2477              	.L239:
1789:src/keys.c    **** 
 2478              		.loc 1 1789 3 is_stmt 1 view .LVU769
 2479              	.LBB356:
 2480              	.LBI356:
1631:src/keys.c    **** 
 2481              		.loc 1 1631 12 view .LVU770
 2482              	.LBB357:
1633:src/keys.c    **** 		// Only valid at beginning of entry
 2483              		.loc 1 1633 2 view .LVU771
1633:src/keys.c    **** 		// Only valid at beginning of entry
 2484              		.loc 1 1633 5 is_stmt 0 view .LVU772
 2485 026c EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 2486 026e 002B     		cmp	r3, #0
 2487 0270 7FF458AF 		bne	.L304
1635:src/keys.c    **** 			// '..' or ENTER '.' = X
 2488              		.loc 1 1635 3 is_stmt 1 view .LVU773
1635:src/keys.c    **** 			// '..' or ENTER '.' = X
 2489              		.loc 1 1635 6 is_stmt 0 view .LVU774
 2490 0274 11F4A03F 		tst	r1, #81920
 2491 0278 40F0CD80 		bne	.L312
1640:src/keys.c    **** 			// local register or flag select
 2492              		.loc 1 1640 3 is_stmt 1 view .LVU775
1640:src/keys.c    **** 			// local register or flag select
 2493              		.loc 1 1640 20 is_stmt 0 view .LVU776
 2494 027c 0BEB0A02 		add	r2, fp, r10
 2495 0280 5379     		ldrb	r3, [r2, #5]	@ zero_extendqisi2
1640:src/keys.c    **** 			// local register or flag select
 2496              		.loc 1 1640 6 view .LVU777
 2497 0282 1E07     		lsls	r6, r3, #28
 2498 0284 00F1B580 		bmi	.L241
1640:src/keys.c    **** 			// local register or flag select
 2499              		.loc 1 1640 27 view .LVU778
 2500 0288 95F91530 		ldrsb	r3, [r5, #21]
 2501 028c 002B     		cmp	r3, #0
 2502 028e C0F2B080 		blt	.L241
1644:src/keys.c    **** 			// Special GTO . sequence
 2503              		.loc 1 1644 8 is_stmt 1 view .LVU779
1644:src/keys.c    **** 			// Special GTO . sequence
 2504              		.loc 1 1644 29 is_stmt 0 view .LVU780
 2505 0292 443F     		subs	r7, r7, #68
 2506              	.LVL205:
1644:src/keys.c    **** 			// Special GTO . sequence
 2507              		.loc 1 1644 11 view .LVU781
 2508 0294 012F     		cmp	r7, #1
 2509 0296 3FF645AF 		bhi	.L304
1646:src/keys.c    **** 				State2.gtodot = 1;
 2510              		.loc 1 1646 4 is_stmt 1 view .LVU782
1647:src/keys.c    **** 				reset_arg();
 2511              		.loc 1 1647 5 view .LVU783
1647:src/keys.c    **** 				reset_arg();
 2512              		.loc 1 1647 19 is_stmt 0 view .LVU784
 2513 029a 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
 2514 029c 43F00103 		orr	r3, r3, #1
 2515 02a0 6B75     		strb	r3, [r5, #21]
1648:src/keys.c    **** 			}
ARM GAS  /tmp/ccy15zOt.s 			page 104


 2516              		.loc 1 1648 5 is_stmt 1 view .LVU785
 2517 02a2 FFF7FEFF 		bl	reset_arg
 2518              	.LVL206:
1652:src/keys.c    **** }
 2519              		.loc 1 1652 9 is_stmt 0 view .LVU786
 2520 02a6 3320     		movs	r0, #51
 2521 02a8 3DE7     		b	.L202
 2522              	.L318:
 2523 02aa 00BF     		.align	2
 2524              	.L317:
 2525 02ac 00000000 		.word	StateWhileOn
 2526 02b0 00000000 		.word	.LANCHOR1
 2527 02b4 00000000 		.word	.LANCHOR0
 2528 02b8 ABAAAAAA 		.word	-1431655765
 2529 02bc 00000000 		.word	argcmds
 2530              	.LVL207:
 2531              	.L243:
1652:src/keys.c    **** }
 2532              		.loc 1 1652 9 view .LVU787
 2533              	.LBE357:
 2534              	.LBE356:
1793:src/keys.c    **** 			return arg_eval(n);
 2535              		.loc 1 1793 3 is_stmt 1 view .LVU788
1793:src/keys.c    **** 			return arg_eval(n);
 2536              		.loc 1 1793 7 is_stmt 0 view .LVU789
 2537 02c0 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
1793:src/keys.c    **** 			return arg_eval(n);
 2538              		.loc 1 1793 6 view .LVU790
 2539 02c2 5D06     		lsls	r5, r3, #25
 2540 02c4 89D4     		bmi	.L251
1793:src/keys.c    **** 			return arg_eval(n);
 2541              		.loc 1 1793 25 discriminator 1 view .LVU791
 2542 02c6 0121     		movs	r1, #1
 2543 02c8 0846     		mov	r0, r1
 2544              	.LVL208:
1793:src/keys.c    **** 			return arg_eval(n);
 2545              		.loc 1 1793 25 discriminator 1 view .LVU792
 2546 02ca FFF7FEFF 		bl	arg_storcl
 2547              	.LVL209:
1793:src/keys.c    **** 			return arg_eval(n);
 2548              		.loc 1 1793 18 discriminator 1 view .LVU793
 2549 02ce 0028     		cmp	r0, #0
 2550 02d0 7FF428AF 		bne	.L304
1804:src/keys.c    **** 			return arg_eval(n);
 2551              		.loc 1 1804 63 view .LVU794
 2552 02d4 B8F1000F 		cmp	r8, #0
 2553 02d8 3FF424AF 		beq	.L304
 2554 02dc 7DE7     		b	.L251
 2555              	.LVL210:
 2556              	.L227:
1734:src/keys.c    **** 			State2.ind = ! State2.ind;
 2557              		.loc 1 1734 3 is_stmt 1 view .LVU795
1734:src/keys.c    **** 			State2.ind = ! State2.ind;
 2558              		.loc 1 1734 7 is_stmt 0 view .LVU796
 2559 02de 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
1734:src/keys.c    **** 			State2.ind = ! State2.ind;
 2560              		.loc 1 1734 6 view .LVU797
ARM GAS  /tmp/ccy15zOt.s 			page 105


 2561 02e0 5E06     		lsls	r6, r3, #25
 2562 02e2 3FF51FAF 		bmi	.L304
1734:src/keys.c    **** 			State2.ind = ! State2.ind;
 2563              		.loc 1 1734 35 discriminator 1 view .LVU798
 2564 02e6 D344     		add	fp, fp, r10
 2565 02e8 9BF80520 		ldrb	r2, [fp, #5]	@ zero_extendqisi2
1734:src/keys.c    **** 			State2.ind = ! State2.ind;
 2566              		.loc 1 1734 19 discriminator 1 view .LVU799
 2567 02ec D407     		lsls	r4, r2, #31
 2568 02ee 7FF519AF 		bpl	.L304
1735:src/keys.c    **** 			if (! stack_reg)
 2569              		.loc 1 1735 4 is_stmt 1 view .LVU800
1735:src/keys.c    **** 			if (! stack_reg)
 2570              		.loc 1 1735 17 is_stmt 0 view .LVU801
 2571 02f2 DA43     		mvns	r2, r3
 2572 02f4 C2F3C012 		ubfx	r2, r2, #7, #1
1735:src/keys.c    **** 			if (! stack_reg)
 2573              		.loc 1 1735 15 view .LVU802
 2574 02f8 62F3C713 		bfi	r3, r2, #7, #1
 2575 02fc 6B75     		strb	r3, [r5, #21]
1736:src/keys.c    **** 				State2.dot = 0;
 2576              		.loc 1 1736 4 is_stmt 1 view .LVU803
1736:src/keys.c    **** 				State2.dot = 0;
 2577              		.loc 1 1736 7 is_stmt 0 view .LVU804
 2578 02fe B8F1000F 		cmp	r8, #0
 2579 0302 7FF40FAF 		bne	.L304
 2580              	.L264:
1737:src/keys.c    **** 		}
 2581              		.loc 1 1737 5 is_stmt 1 view .LVU805
1737:src/keys.c    **** 		}
 2582              		.loc 1 1737 16 is_stmt 0 view .LVU806
 2583 0306 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
 2584 0308 6FF38613 		bfc	r3, #6, #1
 2585 030c 6B75     		strb	r3, [r5, #21]
1898:src/keys.c    **** }
 2586              		.loc 1 1898 9 view .LVU807
 2587 030e 3320     		movs	r0, #51
 2588              	.LVL211:
1898:src/keys.c    **** }
 2589              		.loc 1 1898 9 view .LVU808
 2590 0310 09E7     		b	.L202
 2591              	.LVL212:
 2592              	.L233:
1754:src/keys.c    **** 	    return process_arg_shuffle(0);
 2593              		.loc 1 1754 4 is_stmt 1 view .LVU809
1754:src/keys.c    **** 	    return process_arg_shuffle(0);
 2594              		.loc 1 1754 8 is_stmt 0 view .LVU810
 2595 0312 AB7D     		ldrb	r3, [r5, #22]	@ zero_extendqisi2
1754:src/keys.c    **** 	    return process_arg_shuffle(0);
 2596              		.loc 1 1754 7 view .LVU811
 2597 0314 9907     		lsls	r1, r3, #30
 2598 0316 7FF509AF 		bpl	.L232
1755:src/keys.c    **** 	case K52:	// Y
 2599              		.loc 1 1755 6 is_stmt 1 view .LVU812
1755:src/keys.c    **** 	case K52:	// Y
 2600              		.loc 1 1755 13 is_stmt 0 view .LVU813
 2601 031a 0020     		movs	r0, #0
ARM GAS  /tmp/ccy15zOt.s 			page 106


 2602              	.LVL213:
 2603              	.L307:
1899:src/keys.c    **** 
 2604              		.loc 1 1899 1 view .LVU814
 2605 031c 03B0     		add	sp, sp, #12
 2606              		.cfi_remember_state
 2607              		.cfi_def_cfa_offset 36
 2608              	.LVL214:
1899:src/keys.c    **** 
 2609              		.loc 1 1899 1 view .LVU815
 2610              		@ sp needed
 2611 031e BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2612              		.cfi_restore 14
 2613              		.cfi_restore 11
 2614              		.cfi_restore 10
 2615              		.cfi_restore 9
 2616              		.cfi_restore 8
 2617              		.cfi_restore 7
 2618              		.cfi_restore 6
 2619              		.cfi_restore 5
 2620              		.cfi_restore 4
 2621              		.cfi_def_cfa_offset 0
 2622              	.LVL215:
1761:src/keys.c    **** #else
 2623              		.loc 1 1761 13 view .LVU816
 2624 0322 FFF7FEBF 		b	process_arg_shuffle
 2625              	.LVL216:
 2626              	.L234:
 2627              		.cfi_restore_state
1757:src/keys.c    **** 	    return process_arg_shuffle(1);
 2628              		.loc 1 1757 4 is_stmt 1 view .LVU817
1757:src/keys.c    **** 	    return process_arg_shuffle(1);
 2629              		.loc 1 1757 8 is_stmt 0 view .LVU818
 2630 0326 AB7D     		ldrb	r3, [r5, #22]	@ zero_extendqisi2
1757:src/keys.c    **** 	    return process_arg_shuffle(1);
 2631              		.loc 1 1757 7 view .LVU819
 2632 0328 9A07     		lsls	r2, r3, #30
 2633 032a 7FF5FFAE 		bpl	.L232
1758:src/keys.c    **** 	case K53:       // Z
 2634              		.loc 1 1758 6 is_stmt 1 view .LVU820
1758:src/keys.c    **** 	case K53:       // Z
 2635              		.loc 1 1758 13 is_stmt 0 view .LVU821
 2636 032e 0120     		movs	r0, #1
 2637              	.LVL217:
1758:src/keys.c    **** 	case K53:       // Z
 2638              		.loc 1 1758 13 view .LVU822
 2639 0330 F4E7     		b	.L307
 2640              	.LVL218:
 2641              	.L235:
1760:src/keys.c    **** 	    return process_arg_shuffle(2);
 2642              		.loc 1 1760 4 is_stmt 1 view .LVU823
1760:src/keys.c    **** 	    return process_arg_shuffle(2);
 2643              		.loc 1 1760 8 is_stmt 0 view .LVU824
 2644 0332 AB7D     		ldrb	r3, [r5, #22]	@ zero_extendqisi2
1760:src/keys.c    **** 	    return process_arg_shuffle(2);
 2645              		.loc 1 1760 7 view .LVU825
 2646 0334 9B07     		lsls	r3, r3, #30
ARM GAS  /tmp/ccy15zOt.s 			page 107


 2647 0336 7FF5F9AE 		bpl	.L232
1761:src/keys.c    **** #else
 2648              		.loc 1 1761 6 is_stmt 1 view .LVU826
1761:src/keys.c    **** #else
 2649              		.loc 1 1761 13 is_stmt 0 view .LVU827
 2650 033a 0220     		movs	r0, #2
 2651              	.LVL219:
1761:src/keys.c    **** #else
 2652              		.loc 1 1761 13 view .LVU828
 2653 033c EEE7     		b	.L307
 2654              	.LVL220:
 2655              	.L254:
1848:src/keys.c    **** 		break;
 2656              		.loc 1 1848 3 is_stmt 1 view .LVU829
 2657 033e 0021     		movs	r1, #0
 2658 0340 0520     		movs	r0, #5
 2659              	.LVL221:
1848:src/keys.c    **** 		break;
 2660              		.loc 1 1848 3 is_stmt 0 view .LVU830
 2661 0342 FFF7FEFF 		bl	arg_storcl
 2662              	.LVL222:
1849:src/keys.c    **** 
 2663              		.loc 1 1849 3 is_stmt 1 view .LVU831
1898:src/keys.c    **** }
 2664              		.loc 1 1898 9 is_stmt 0 view .LVU832
 2665 0346 3320     		movs	r0, #51
1849:src/keys.c    **** 
 2666              		.loc 1 1849 3 view .LVU833
 2667 0348 EDE6     		b	.L202
 2668              	.LVL223:
 2669              	.L231:
1751:src/keys.c    **** 	    return process_arg_shuffle(3);
 2670              		.loc 1 1751 4 is_stmt 1 view .LVU834
1751:src/keys.c    **** 	    return process_arg_shuffle(3);
 2671              		.loc 1 1751 8 is_stmt 0 view .LVU835
 2672 034a AB7D     		ldrb	r3, [r5, #22]	@ zero_extendqisi2
1751:src/keys.c    **** 	    return process_arg_shuffle(3);
 2673              		.loc 1 1751 7 view .LVU836
 2674 034c 9807     		lsls	r0, r3, #30
 2675              	.LVL224:
1751:src/keys.c    **** 	    return process_arg_shuffle(3);
 2676              		.loc 1 1751 7 view .LVU837
 2677 034e 7FF5EDAE 		bpl	.L232
1752:src/keys.c    **** 	case K51:       // X
 2678              		.loc 1 1752 6 is_stmt 1 view .LVU838
1752:src/keys.c    **** 	case K51:       // X
 2679              		.loc 1 1752 13 is_stmt 0 view .LVU839
 2680 0352 0320     		movs	r0, #3
 2681 0354 E2E7     		b	.L307
 2682              	.LVL225:
 2683              	.L252:
1808:src/keys.c    **** 		break;
 2684              		.loc 1 1808 3 is_stmt 1 view .LVU840
 2685 0356 0121     		movs	r1, #1
 2686 0358 0420     		movs	r0, #4
 2687              	.LVL226:
1808:src/keys.c    **** 		break;
ARM GAS  /tmp/ccy15zOt.s 			page 108


 2688              		.loc 1 1808 3 is_stmt 0 view .LVU841
 2689 035a FFF7FEFF 		bl	arg_storcl
 2690              	.LVL227:
1809:src/keys.c    **** #else
 2691              		.loc 1 1809 3 is_stmt 1 view .LVU842
1898:src/keys.c    **** }
 2692              		.loc 1 1898 9 is_stmt 0 view .LVU843
 2693 035e 3320     		movs	r0, #51
1809:src/keys.c    **** #else
 2694              		.loc 1 1809 3 view .LVU844
 2695 0360 E1E6     		b	.L202
 2696              	.LVL228:
 2697              	.L262:
1873:src/keys.c    **** 			if (State2.dot)
 2698              		.loc 1 1873 3 is_stmt 1 view .LVU845
1873:src/keys.c    **** 			if (State2.dot)
 2699              		.loc 1 1873 13 is_stmt 0 view .LVU846
 2700 0362 EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
1873:src/keys.c    **** 			if (State2.dot)
 2701              		.loc 1 1873 6 view .LVU847
 2702 0364 83BB     		cbnz	r3, .L263
1874:src/keys.c    **** 				State2.dot = 0;
 2703              		.loc 1 1874 4 is_stmt 1 view .LVU848
1874:src/keys.c    **** 				State2.dot = 0;
 2704              		.loc 1 1874 8 is_stmt 0 view .LVU849
 2705 0366 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
1874:src/keys.c    **** 				State2.dot = 0;
 2706              		.loc 1 1874 7 view .LVU850
 2707 0368 13F04001 		ands	r1, r3, #64
 2708 036c CBD1     		bne	.L264
1876:src/keys.c    **** 				State2.local = 0;
 2709              		.loc 1 1876 9 is_stmt 1 view .LVU851
1876:src/keys.c    **** 				State2.local = 0;
 2710              		.loc 1 1876 13 is_stmt 0 view .LVU852
 2711 036e AA7D     		ldrb	r2, [r5, #22]	@ zero_extendqisi2
1876:src/keys.c    **** 				State2.local = 0;
 2712              		.loc 1 1876 12 view .LVU853
 2713 0370 12F00100 		ands	r0, r2, #1
 2714              	.LVL229:
1876:src/keys.c    **** 				State2.local = 0;
 2715              		.loc 1 1876 12 view .LVU854
 2716 0374 55D1     		bne	.L313
1878:src/keys.c    **** 				State2.ind = 0;
 2717              		.loc 1 1878 9 is_stmt 1 view .LVU855
1878:src/keys.c    **** 				State2.ind = 0;
 2718              		.loc 1 1878 12 is_stmt 0 view .LVU856
 2719 0376 1906     		lsls	r1, r3, #24
 2720 0378 7FF5D2AE 		bpl	.L266
1879:src/keys.c    **** 			else
 2721              		.loc 1 1879 5 is_stmt 1 view .LVU857
1879:src/keys.c    **** 			else
 2722              		.loc 1 1879 16 is_stmt 0 view .LVU858
 2723 037c 60F3C713 		bfi	r3, r0, #7, #1
 2724 0380 6B75     		strb	r3, [r5, #21]
1898:src/keys.c    **** }
 2725              		.loc 1 1898 9 view .LVU859
 2726 0382 3320     		movs	r0, #51
ARM GAS  /tmp/ccy15zOt.s 			page 109


 2727 0384 CFE6     		b	.L202
 2728              	.LVL230:
 2729              	.L311:
1852:src/keys.c    **** 			if (argcmds[base].label) {
 2730              		.loc 1 1852 43 discriminator 1 view .LVU860
 2731 0386 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
 2732 0388 13F0C00F 		tst	r3, #192
 2733 038c 0FD1     		bne	.L257
1853:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 2734              		.loc 1 1853 4 is_stmt 1 view .LVU861
1853:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 2735              		.loc 1 1853 7 is_stmt 0 view .LVU862
 2736 038e BEF1000F 		cmp	lr, #0
 2737 0392 4BD1     		bne	.L314
1858:src/keys.c    **** 				reset_arg();
 2738              		.loc 1 1858 11 is_stmt 1 view .LVU863
1858:src/keys.c    **** 				reset_arg();
 2739              		.loc 1 1858 14 is_stmt 0 view .LVU864
 2740 0394 4E2F     		cmp	r7, #78
 2741 0396 5BD0     		beq	.L315
1861:src/keys.c    **** 				reset_arg();
 2742              		.loc 1 1861 11 is_stmt 1 view .LVU865
1861:src/keys.c    **** 				reset_arg();
 2743              		.loc 1 1861 14 is_stmt 0 view .LVU866
 2744 0398 4F2F     		cmp	r7, #79
 2745 039a 5ED0     		beq	.L316
1864:src/keys.c    **** 				State2.dot = 1;
 2746              		.loc 1 1864 11 is_stmt 1 view .LVU867
1864:src/keys.c    **** 				State2.dot = 1;
 2747              		.loc 1 1864 14 is_stmt 0 view .LVU868
 2748 039c 019A     		ldr	r2, [sp, #4]
 2749 039e 002A     		cmp	r2, #0
 2750 03a0 3FF4C0AE 		beq	.L304
1865:src/keys.c    **** 		} else if (State2.numdigit > 0)
 2751              		.loc 1 1865 5 is_stmt 1 view .LVU869
1865:src/keys.c    **** 		} else if (State2.numdigit > 0)
 2752              		.loc 1 1865 16 is_stmt 0 view .LVU870
 2753 03a4 43F04003 		orr	r3, r3, #64
 2754 03a8 6B75     		strb	r3, [r5, #21]
1898:src/keys.c    **** }
 2755              		.loc 1 1898 9 view .LVU871
 2756 03aa 3320     		movs	r0, #51
 2757              	.LVL231:
1898:src/keys.c    **** }
 2758              		.loc 1 1898 9 view .LVU872
 2759 03ac BBE6     		b	.L202
 2760              	.LVL232:
 2761              	.L257:
1866:src/keys.c    **** 			return arg_eval(State2.digval);
 2762              		.loc 1 1866 10 is_stmt 1 view .LVU873
1868:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 2763              		.loc 1 1868 8 view .LVU874
1868:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 2764              		.loc 1 1868 11 is_stmt 0 view .LVU875
 2765 03ae B8F1000F 		cmp	r8, #0
 2766 03b2 3FF4B7AE 		beq	.L304
1869:src/keys.c    **** 		break;
ARM GAS  /tmp/ccy15zOt.s 			page 110


 2767              		.loc 1 1869 4 is_stmt 1 view .LVU876
1869:src/keys.c    **** 		break;
 2768              		.loc 1 1869 27 is_stmt 0 view .LVU877
 2769 03b6 C3F38012 		ubfx	r2, r3, #6, #1
1869:src/keys.c    **** 		break;
 2770              		.loc 1 1869 19 view .LVU878
 2771 03ba C2F10102 		rsb	r2, r2, #1
1869:src/keys.c    **** 		break;
 2772              		.loc 1 1869 15 view .LVU879
 2773 03be 62F38613 		bfi	r3, r2, #6, #1
 2774 03c2 6B75     		strb	r3, [r5, #21]
1898:src/keys.c    **** }
 2775              		.loc 1 1898 9 view .LVU880
 2776 03c4 3320     		movs	r0, #51
 2777              	.LVL233:
1898:src/keys.c    **** }
 2778              		.loc 1 1898 9 view .LVU881
 2779 03c6 AEE6     		b	.L202
 2780              	.LVL234:
 2781              	.L263:
1884:src/keys.c    **** 			if (State2.shuffle)
 2782              		.loc 1 1884 4 is_stmt 1 view .LVU882
1885:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2783              		.loc 1 1885 8 is_stmt 0 view .LVU883
 2784 03c8 AA7D     		ldrb	r2, [r5, #22]	@ zero_extendqisi2
1884:src/keys.c    **** 			if (State2.shuffle)
 2785              		.loc 1 1884 4 view .LVU884
 2786 03ca 013B     		subs	r3, r3, #1
 2787 03cc DBB2     		uxtb	r3, r3
1885:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2788              		.loc 1 1885 7 view .LVU885
 2789 03ce 9207     		lsls	r2, r2, #30
1884:src/keys.c    **** 			if (State2.shuffle)
 2790              		.loc 1 1884 4 view .LVU886
 2791 03d0 EB72     		strb	r3, [r5, #11]
1885:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2792              		.loc 1 1885 4 is_stmt 1 view .LVU887
1885:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2793              		.loc 1 1885 7 is_stmt 0 view .LVU888
 2794 03d2 14D5     		bpl	.L267
1886:src/keys.c    **** 			else
 2795              		.loc 1 1886 5 is_stmt 1 view .LVU889
1886:src/keys.c    **** 			else
 2796              		.loc 1 1886 19 is_stmt 0 view .LVU890
 2797 03d4 2A89     		ldrh	r2, [r5, #8]
1886:src/keys.c    **** 			else
 2798              		.loc 1 1886 46 view .LVU891
 2799 03d6 5B00     		lsls	r3, r3, #1
1886:src/keys.c    **** 			else
 2800              		.loc 1 1886 26 view .LVU892
 2801 03d8 0321     		movs	r1, #3
 2802 03da 01FA03F3 		lsl	r3, r1, r3
1886:src/keys.c    **** 			else
 2803              		.loc 1 1886 19 view .LVU893
 2804 03de 22EA0303 		bic	r3, r2, r3
 2805 03e2 2B81     		strh	r3, [r5, #8]	@ movhi
1898:src/keys.c    **** }
ARM GAS  /tmp/ccy15zOt.s 			page 111


 2806              		.loc 1 1898 9 view .LVU894
 2807 03e4 3320     		movs	r0, #51
 2808              	.LVL235:
1898:src/keys.c    **** }
 2809              		.loc 1 1898 9 view .LVU895
 2810 03e6 9EE6     		b	.L202
 2811              	.LVL236:
 2812              	.L247:
1798:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
 2813              		.loc 1 1798 4 is_stmt 1 view .LVU896
 2814 03e8 FFF7FEFF 		bl	reset_arg
 2815              	.LVL237:
1799:src/keys.c    **** 		}
 2816              		.loc 1 1799 4 view .LVU897
1799:src/keys.c    **** 		}
 2817              		.loc 1 1799 11 is_stmt 0 view .LVU898
 2818 03ec 40F27510 		movw	r0, #373
 2819 03f0 99E6     		b	.L202
 2820              	.LVL238:
 2821              	.L241:
 2822              	.LBB360:
 2823              	.LBB358:
1642:src/keys.c    **** 		}
 2824              		.loc 1 1642 4 is_stmt 1 view .LVU899
1642:src/keys.c    **** 		}
 2825              		.loc 1 1642 17 is_stmt 0 view .LVU900
 2826 03f2 AB7D     		ldrb	r3, [r5, #22]	@ zero_extendqisi2
 2827 03f4 43F00103 		orr	r3, r3, #1
 2828 03f8 AB75     		strb	r3, [r5, #22]
1652:src/keys.c    **** }
 2829              		.loc 1 1652 9 view .LVU901
 2830 03fa 3320     		movs	r0, #51
 2831              	.LVL239:
1642:src/keys.c    **** 		}
 2832              		.loc 1 1642 17 view .LVU902
 2833 03fc 93E6     		b	.L202
 2834              	.LVL240:
 2835              	.L267:
1642:src/keys.c    **** 		}
 2836              		.loc 1 1642 17 view .LVU903
 2837              	.LBE358:
 2838              	.LBE360:
1888:src/keys.c    **** 		}
 2839              		.loc 1 1888 5 is_stmt 1 view .LVU904
1888:src/keys.c    **** 		}
 2840              		.loc 1 1888 19 is_stmt 0 view .LVU905
 2841 03fe 2B89     		ldrh	r3, [r5, #8]
 2842 0400 194A     		ldr	r2, .L319
 2843 0402 A2FB0323 		umull	r2, r3, r2, r3
 2844 0406 DB08     		lsrs	r3, r3, #3
 2845 0408 2B81     		strh	r3, [r5, #8]	@ movhi
1898:src/keys.c    **** }
 2846              		.loc 1 1898 9 view .LVU906
 2847 040a 3320     		movs	r0, #51
 2848              	.LVL241:
1898:src/keys.c    **** }
 2849              		.loc 1 1898 9 view .LVU907
ARM GAS  /tmp/ccy15zOt.s 			page 112


 2850 040c 8BE6     		b	.L202
 2851              	.LVL242:
 2852              	.L310:
1745:src/keys.c    **** 		else if (base == RARG_RCL)
 2853              		.loc 1 1745 4 is_stmt 1 view .LVU908
1745:src/keys.c    **** 		else if (base == RARG_RCL)
 2854              		.loc 1 1745 12 is_stmt 0 view .LVU909
 2855 040e 7723     		movs	r3, #119
 2856 0410 EB77     		strb	r3, [r5, #31]
1898:src/keys.c    **** }
 2857              		.loc 1 1898 9 view .LVU910
 2858 0412 3320     		movs	r0, #51
 2859              	.LVL243:
1898:src/keys.c    **** }
 2860              		.loc 1 1898 9 view .LVU911
 2861 0414 87E6     		b	.L202
 2862              	.LVL244:
 2863              	.L312:
 2864              	.LBB361:
 2865              	.LBB359:
1637:src/keys.c    **** 			return arg_eval(regX_idx);
 2866              		.loc 1 1637 4 is_stmt 1 view .LVU912
1637:src/keys.c    **** 			return arg_eval(regX_idx);
 2867              		.loc 1 1637 17 is_stmt 0 view .LVU913
 2868 0416 AA7D     		ldrb	r2, [r5, #22]	@ zero_extendqisi2
 2869 0418 63F30002 		bfi	r2, r3, #0, #1
1638:src/keys.c    **** 		}
 2870              		.loc 1 1638 11 view .LVU914
 2871 041c 6420     		movs	r0, #100
 2872              	.LVL245:
1637:src/keys.c    **** 			return arg_eval(regX_idx);
 2873              		.loc 1 1637 17 view .LVU915
 2874 041e AA75     		strb	r2, [r5, #22]
1638:src/keys.c    **** 		}
 2875              		.loc 1 1638 4 is_stmt 1 view .LVU916
 2876 0420 CAE6     		b	.L306
 2877              	.LVL246:
 2878              	.L313:
1638:src/keys.c    **** 		}
 2879              		.loc 1 1638 4 is_stmt 0 view .LVU917
 2880              	.LBE359:
 2881              	.LBE361:
1877:src/keys.c    **** 			else if (State2.ind)
 2882              		.loc 1 1877 5 is_stmt 1 view .LVU918
1877:src/keys.c    **** 			else if (State2.ind)
 2883              		.loc 1 1877 18 is_stmt 0 view .LVU919
 2884 0422 61F30002 		bfi	r2, r1, #0, #1
 2885 0426 AA75     		strb	r2, [r5, #22]
1898:src/keys.c    **** }
 2886              		.loc 1 1898 9 view .LVU920
 2887 0428 3320     		movs	r0, #51
 2888 042a 7CE6     		b	.L202
 2889              	.LVL247:
 2890              	.L314:
1854:src/keys.c    **** 				State2.multi = 1;
 2891              		.loc 1 1854 5 is_stmt 1 view .LVU921
 2892              	.LBB362:
ARM GAS  /tmp/ccy15zOt.s 			page 113


 2893              	.LBI362:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 2894              		.loc 1 501 13 view .LVU922
 2895              	.LBB363:
 502:src/keys.c    **** 		return;
 2896              		.loc 1 502 2 view .LVU923
 502:src/keys.c    **** 		return;
 2897              		.loc 1 502 6 is_stmt 0 view .LVU924
 2898 042c FFF7FEFF 		bl	is_bad_cmdline
 2899              	.LVL248:
 502:src/keys.c    **** 		return;
 2900              		.loc 1 502 5 view .LVU925
 2901 0430 20B9     		cbnz	r0, .L259
 2902              	.LBE363:
 2903              	.LBE362:
1854:src/keys.c    **** 				State2.multi = 1;
 2904              		.loc 1 1854 31 view .LVU926
 2905 0432 A7F14200 		sub	r0, r7, #66
 2906              	.LBB365:
 2907              	.LBB364:
 2908 0436 C0B2     		uxtb	r0, r0
 2909 0438 FFF7FEFF 		bl	init_arg.part.0
 2910              	.LVL249:
 2911              	.L259:
1854:src/keys.c    **** 				State2.multi = 1;
 2912              		.loc 1 1854 31 view .LVU927
 2913              	.LBE364:
 2914              	.LBE365:
1855:src/keys.c    **** 				State2.alphashift = 0;
 2915              		.loc 1 1855 5 is_stmt 1 view .LVU928
1856:src/keys.c    **** 				State2.rarg = 0;
 2916              		.loc 1 1856 5 view .LVU929
1857:src/keys.c    **** 			} else if (base == RARG_SCI) {
 2917              		.loc 1 1857 5 view .LVU930
1855:src/keys.c    **** 				State2.alphashift = 0;
 2918              		.loc 1 1855 18 is_stmt 0 view .LVU931
 2919 043c 6B69     		ldr	r3, [r5, #20]
 2920 043e 23F44013 		bic	r3, r3, #3145728
 2921 0442 23F40063 		bic	r3, r3, #2048
 2922 0446 43F40063 		orr	r3, r3, #2048
 2923 044a 6B61     		str	r3, [r5, #20]
1898:src/keys.c    **** }
 2924              		.loc 1 1898 9 view .LVU932
 2925 044c 3320     		movs	r0, #51
 2926 044e 6AE6     		b	.L202
 2927              	.LVL250:
 2928              	.L315:
1859:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
 2929              		.loc 1 1859 5 is_stmt 1 view .LVU933
 2930 0450 FFF7FEFF 		bl	reset_arg
 2931              	.LVL251:
1860:src/keys.c    **** 			} else if (base == RARG_ENG) {
 2932              		.loc 1 1860 5 view .LVU934
1860:src/keys.c    **** 			} else if (base == RARG_ENG) {
 2933              		.loc 1 1860 12 is_stmt 0 view .LVU935
 2934 0454 40F25510 		movw	r0, #341
 2935 0458 65E6     		b	.L202
ARM GAS  /tmp/ccy15zOt.s 			page 114


 2936              	.LVL252:
 2937              	.L316:
1862:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
 2938              		.loc 1 1862 5 is_stmt 1 view .LVU936
 2939 045a FFF7FEFF 		bl	reset_arg
 2940              	.LVL253:
1863:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 2941              		.loc 1 1863 5 view .LVU937
1863:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 2942              		.loc 1 1863 12 is_stmt 0 view .LVU938
 2943 045e 4FF4AB70 		mov	r0, #342
 2944 0462 60E6     		b	.L202
 2945              	.LVL254:
 2946              	.L220:
1682:src/keys.c    **** 	  case regY_idx:
 2947              		.loc 1 1682 6 is_stmt 1 view .LVU939
1682:src/keys.c    **** 	  case regY_idx:
 2948              		.loc 1 1682 13 is_stmt 0 view .LVU940
 2949 0464 0120     		movs	r0, #1
 2950              	.LVL255:
1682:src/keys.c    **** 	  case regY_idx:
 2951              		.loc 1 1682 13 view .LVU941
 2952 0466 BBE6     		b	.L305
 2953              	.L320:
 2954              		.align	2
 2955              	.L319:
 2956 0468 CDCCCCCC 		.word	-858993459
 2957              		.cfi_endproc
 2958              	.LFE37:
 2960              		.section	.text.cur_shift,"ax",%progbits
 2961              		.align	1
 2962              		.p2align 2,,3
 2963              		.global	cur_shift
 2964              		.syntax unified
 2965              		.thumb
 2966              		.thumb_func
 2967              		.fpu fpv4-sp-d16
 2969              	cur_shift:
 2970              	.LFB0:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 2971              		.loc 1 84 29 is_stmt 1 view -0
 2972              		.cfi_startproc
 2973              		@ args = 0, pretend = 0, frame = 0
 2974              		@ frame_needed = 0, uses_anonymous_args = 0
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2975              		.loc 1 85 2 view .LVU943
  84:src/keys.c    **** 	enum shifts s = shift_down();
 2976              		.loc 1 84 29 is_stmt 0 view .LVU944
 2977 0000 08B5     		push	{r3, lr}
 2978              		.cfi_def_cfa_offset 8
 2979              		.cfi_offset 3, -8
 2980              		.cfi_offset 14, -4
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2981              		.loc 1 85 18 view .LVU945
 2982 0002 FFF7FEFF 		bl	shift_down
 2983              	.LVL256:
  86:src/keys.c    **** }
ARM GAS  /tmp/ccy15zOt.s 			page 115


 2984              		.loc 1 86 2 is_stmt 1 view .LVU946
  86:src/keys.c    **** }
 2985              		.loc 1 86 52 is_stmt 0 view .LVU947
 2986 0006 08B9     		cbnz	r0, .L322
  86:src/keys.c    **** }
 2987              		.loc 1 86 52 discriminator 1 view .LVU948
 2988 0008 014B     		ldr	r3, .L324
 2989 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 2990              	.LVL257:
 2991              	.L322:
  87:src/keys.c    **** 
 2992              		.loc 1 87 1 discriminator 4 view .LVU949
 2993 000c 08BD     		pop	{r3, pc}
 2994              	.L325:
 2995 000e 00BF     		.align	2
 2996              	.L324:
 2997 0010 00000000 		.word	StateWhileOn
 2998              		.cfi_endproc
 2999              	.LFE0:
 3001              		.section	.text.reset_shift,"ax",%progbits
 3002              		.align	1
 3003              		.p2align 2,,3
 3004              		.global	reset_shift
 3005              		.syntax unified
 3006              		.thumb
 3007              		.thumb_func
 3008              		.fpu fpv4-sp-d16
 3010              	reset_shift:
 3011              	.LFB2:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 3012              		.loc 1 102 31 is_stmt 1 view -0
 3013              		.cfi_startproc
 3014              		@ args = 0, pretend = 0, frame = 0
 3015              		@ frame_needed = 0, uses_anonymous_args = 0
 103:src/keys.c    **** }
 3016              		.loc 1 103 2 view .LVU951
 3017              	.LVL258:
 3018              	.LBB366:
 3019              	.LBI366:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 3020              		.loc 1 92 20 view .LVU952
 3021              	.LBB367:
  93:src/keys.c    **** 	State2.shifts = shift;
 3022              		.loc 1 93 2 view .LVU953
 3023              	.LBB368:
 3024              	.LBI368:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 3025              		.loc 1 84 13 view .LVU954
 3026              	.LBB369:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3027              		.loc 1 85 2 view .LVU955
 3028              	.LBE369:
 3029              	.LBE368:
 3030              	.LBE367:
 3031              	.LBE366:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 3032              		.loc 1 102 31 is_stmt 0 view .LVU956
ARM GAS  /tmp/ccy15zOt.s 			page 116


 3033 0000 08B5     		push	{r3, lr}
 3034              		.cfi_def_cfa_offset 8
 3035              		.cfi_offset 3, -8
 3036              		.cfi_offset 14, -4
 3037              	.LBB373:
 3038              	.LBB372:
 3039              	.LBB371:
 3040              	.LBB370:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3041              		.loc 1 85 18 view .LVU957
 3042 0002 FFF7FEFF 		bl	shift_down
 3043              	.LVL259:
  86:src/keys.c    **** }
 3044              		.loc 1 86 2 is_stmt 1 view .LVU958
  86:src/keys.c    **** }
 3045              		.loc 1 86 52 is_stmt 0 view .LVU959
 3046 0006 034B     		ldr	r3, .L331
 3047 0008 00B9     		cbnz	r0, .L327
 3048 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 3049              	.LVL260:
 3050              	.L327:
  86:src/keys.c    **** }
 3051              		.loc 1 86 52 view .LVU960
 3052              	.LBE370:
 3053              	.LBE371:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3054              		.loc 1 94 2 is_stmt 1 view .LVU961
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3055              		.loc 1 94 16 is_stmt 0 view .LVU962
 3056 000c 0022     		movs	r2, #0
 3057 000e 1A74     		strb	r2, [r3, #16]
  96:src/keys.c    **** }
 3058              		.loc 1 96 2 is_stmt 1 view .LVU963
 3059              	.LVL261:
  96:src/keys.c    **** }
 3060              		.loc 1 96 2 is_stmt 0 view .LVU964
 3061              	.LBE372:
 3062              	.LBE373:
 104:src/keys.c    **** 
 3063              		.loc 1 104 1 view .LVU965
 3064 0010 08BD     		pop	{r3, pc}
 3065              	.L332:
 3066 0012 00BF     		.align	2
 3067              	.L331:
 3068 0014 00000000 		.word	StateWhileOn
 3069              		.cfi_endproc
 3070              	.LFE2:
 3072              		.section	.text.keycode_to_row_column,"ax",%progbits
 3073              		.align	1
 3074              		.p2align 2,,3
 3075              		.global	keycode_to_row_column
 3076              		.syntax unified
 3077              		.thumb
 3078              		.thumb_func
 3079              		.fpu fpv4-sp-d16
 3081              	keycode_to_row_column:
 3082              	.LVL262:
ARM GAS  /tmp/ccy15zOt.s 			page 117


 3083              	.LFB6:
 168:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 3084              		.loc 1 168 1 is_stmt 1 view -0
 3085              		.cfi_startproc
 3086              		@ args = 0, pretend = 0, frame = 0
 3087              		@ frame_needed = 0, uses_anonymous_args = 0
 3088              		@ link register save eliminated.
 169:src/keys.c    **** }
 3089              		.loc 1 169 2 view .LVU967
 169:src/keys.c    **** }
 3090              		.loc 1 169 18 is_stmt 0 view .LVU968
 3091 0000 074A     		ldr	r2, .L334
 3092 0002 82FB0032 		smull	r3, r2, r2, r0
 3093 0006 A2EBE073 		sub	r3, r2, r0, asr #31
 169:src/keys.c    **** }
 3094              		.loc 1 169 24 view .LVU969
 3095 000a 03EB8302 		add	r2, r3, r3, lsl #2
 3096 000e 5200     		lsls	r2, r2, #1
 169:src/keys.c    **** }
 3097              		.loc 1 169 33 view .LVU970
 3098 0010 03EB4303 		add	r3, r3, r3, lsl #1
 3099 0014 A0EB4303 		sub	r3, r0, r3, lsl #1
 169:src/keys.c    **** }
 3100              		.loc 1 169 12 view .LVU971
 3101 0018 02F10B00 		add	r0, r2, #11
 3102              	.LVL263:
 170:src/keys.c    **** 
 3103              		.loc 1 170 1 view .LVU972
 3104 001c 1844     		add	r0, r0, r3
 3105 001e 7047     		bx	lr
 3106              	.L335:
 3107              		.align	2
 3108              	.L334:
 3109 0020 ABAAAA2A 		.word	715827883
 3110              		.cfi_endproc
 3111              	.LFE6:
 3113              		.section	.text.row_column_to_keycode,"ax",%progbits
 3114              		.align	1
 3115              		.p2align 2,,3
 3116              		.global	row_column_to_keycode
 3117              		.syntax unified
 3118              		.thumb
 3119              		.thumb_func
 3120              		.fpu fpv4-sp-d16
 3122              	row_column_to_keycode:
 3123              	.LVL264:
 3124              	.LFB7:
 178:src/keys.c    **** 	int row = c / 10 - 1;
 3125              		.loc 1 178 1 is_stmt 1 view -0
 3126              		.cfi_startproc
 3127              		@ args = 0, pretend = 0, frame = 0
 3128              		@ frame_needed = 0, uses_anonymous_args = 0
 3129              		@ link register save eliminated.
 179:src/keys.c    **** 	int col = c % 10 - 1;
 3130              		.loc 1 179 2 view .LVU974
 179:src/keys.c    **** 	int col = c % 10 - 1;
 3131              		.loc 1 179 14 is_stmt 0 view .LVU975
ARM GAS  /tmp/ccy15zOt.s 			page 118


 3132 0000 0E4A     		ldr	r2, .L342
 3133 0002 82FB0032 		smull	r3, r2, r2, r0
 3134 0006 C317     		asrs	r3, r0, #31
 3135 0008 C3EBA203 		rsb	r3, r3, r2, asr #2
 180:src/keys.c    **** 
 3136              		.loc 1 180 14 view .LVU976
 3137 000c 03EB8302 		add	r2, r3, r3, lsl #2
 179:src/keys.c    **** 	int col = c % 10 - 1;
 3138              		.loc 1 179 6 view .LVU977
 3139 0010 013B     		subs	r3, r3, #1
 3140              	.LVL265:
 180:src/keys.c    **** 
 3141              		.loc 1 180 2 is_stmt 1 view .LVU978
 180:src/keys.c    **** 
 3142              		.loc 1 180 14 is_stmt 0 view .LVU979
 3143 0012 A0EB4200 		sub	r0, r0, r2, lsl #1
 3144              	.LVL266:
 182:src/keys.c    **** 		return -1;
 3145              		.loc 1 182 5 view .LVU980
 3146 0016 062B     		cmp	r3, #6
 180:src/keys.c    **** 
 3147              		.loc 1 180 6 view .LVU981
 3148 0018 00F1FF30 		add	r0, r0, #-1
 3149              	.LVL267:
 182:src/keys.c    **** 		return -1;
 3150              		.loc 1 182 2 is_stmt 1 view .LVU982
 182:src/keys.c    **** 		return -1;
 3151              		.loc 1 182 5 is_stmt 0 view .LVU983
 3152 001c 0AD8     		bhi	.L341
 182:src/keys.c    **** 		return -1;
 3153              		.loc 1 182 36 discriminator 1 view .LVU984
 3154 001e 012B     		cmp	r3, #1
 3155 0020 CCBF     		ite	gt
 3156 0022 0422     		movgt	r2, #4
 3157 0024 0522     		movle	r2, #5
 182:src/keys.c    **** 		return -1;
 3158              		.loc 1 182 25 discriminator 1 view .LVU985
 3159 0026 8242     		cmp	r2, r0
 3160 0028 04DB     		blt	.L341
 184:src/keys.c    **** }
 3161              		.loc 1 184 2 is_stmt 1 view .LVU986
 184:src/keys.c    **** }
 3162              		.loc 1 184 13 is_stmt 0 view .LVU987
 3163 002a 03EB4303 		add	r3, r3, r3, lsl #1
 3164              	.LVL268:
 184:src/keys.c    **** }
 3165              		.loc 1 184 17 view .LVU988
 3166 002e 00EB4300 		add	r0, r0, r3, lsl #1
 3167              	.LVL269:
 184:src/keys.c    **** }
 3168              		.loc 1 184 17 view .LVU989
 3169 0032 7047     		bx	lr
 3170              	.LVL270:
 3171              	.L341:
 183:src/keys.c    **** 	return row * 6 + col;
 3172              		.loc 1 183 10 view .LVU990
 3173 0034 4FF0FF30 		mov	r0, #-1
ARM GAS  /tmp/ccy15zOt.s 			page 119


 3174              	.LVL271:
 185:src/keys.c    **** 
 3175              		.loc 1 185 1 view .LVU991
 3176 0038 7047     		bx	lr
 3177              	.L343:
 3178 003a 00BF     		.align	2
 3179              	.L342:
 3180 003c 67666666 		.word	1717986919
 3181              		.cfi_endproc
 3182              	.LFE7:
 3184              		.section	.text.keycode_to_digit_or_register,"ax",%progbits
 3185              		.align	1
 3186              		.p2align 2,,3
 3187              		.global	keycode_to_digit_or_register
 3188              		.syntax unified
 3189              		.thumb
 3190              		.thumb_func
 3191              		.fpu fpv4-sp-d16
 3193              	keycode_to_digit_or_register:
 3194              	.LVL272:
 3195              	.LFB8:
 199:src/keys.c    ****   static const unsigned char map[] = {
 3196              		.loc 1 199 1 is_stmt 1 view -0
 3197              		.cfi_startproc
 3198              		@ args = 0, pretend = 0, frame = 0
 3199              		@ frame_needed = 0, uses_anonymous_args = 0
 3200              		@ link register save eliminated.
 200:src/keys.c    ****     // K00 - K05
 3201              		.loc 1 200 3 view .LVU993
 221:src/keys.c    **** }
 3202              		.loc 1 221 3 view .LVU994
 3203              	.LBB374:
 3204              	.LBI374:
 119:src/keys.c    **** {
 3205              		.loc 1 119 12 view .LVU995
 3206              	.LBB375:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3207              		.loc 1 121 2 view .LVU996
 131:src/keys.c    **** }
 3208              		.loc 1 131 2 view .LVU997
 131:src/keys.c    **** }
 3209              		.loc 1 131 23 is_stmt 0 view .LVU998
 3210 0000 024B     		ldr	r3, .L345
 3211              	.LBE375:
 3212              	.LBE374:
 221:src/keys.c    **** }
 3213              		.loc 1 221 28 view .LVU999
 3214 0002 034A     		ldr	r2, .L345+4
 3215              	.LBB377:
 3216              	.LBB376:
 131:src/keys.c    **** }
 3217              		.loc 1 131 23 view .LVU1000
 3218 0004 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 3219              	.LBE376:
 3220              	.LBE377:
 222:src/keys.c    **** #else
 3221              		.loc 1 222 1 view .LVU1001
ARM GAS  /tmp/ccy15zOt.s 			page 120


 3222 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 3223              	.LVL273:
 222:src/keys.c    **** #else
 3224              		.loc 1 222 1 view .LVU1002
 3225 0008 7047     		bx	lr
 3226              	.L346:
 3227 000a 00BF     		.align	2
 3228              	.L345:
 3229 000c 00000000 		.word	.LANCHOR1
 3230 0010 00000000 		.word	.LANCHOR0
 3231              		.cfi_endproc
 3232              	.LFE8:
 3234              		.section	.text.init_state,"ax",%progbits
 3235              		.align	1
 3236              		.p2align 2,,3
 3237              		.global	init_state
 3238              		.syntax unified
 3239              		.thumb
 3240              		.thumb_func
 3241              		.fpu fpv4-sp-d16
 3243              	init_state:
 3244              	.LFB13:
 564:src/keys.c    **** #ifndef REALBUILD
 3245              		.loc 1 564 23 is_stmt 1 view -0
 3246              		.cfi_startproc
 3247              		@ args = 0, pretend = 0, frame = 0
 3248              		@ frame_needed = 0, uses_anonymous_args = 0
 566:src/keys.c    **** 	unsigned int b = State2.trace;
 3249              		.loc 1 566 2 view .LVU1004
 564:src/keys.c    **** #ifndef REALBUILD
 3250              		.loc 1 564 23 is_stmt 0 view .LVU1005
 3251 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3252              		.cfi_def_cfa_offset 24
 3253              		.cfi_offset 4, -24
 3254              		.cfi_offset 5, -20
 3255              		.cfi_offset 6, -16
 3256              		.cfi_offset 7, -12
 3257              		.cfi_offset 8, -8
 3258              		.cfi_offset 14, -4
 566:src/keys.c    **** 	unsigned int b = State2.trace;
 3259              		.loc 1 566 25 view .LVU1006
 3260 0004 154C     		ldr	r4, .L349
 574:src/keys.c    **** 	// Removed: will clear any locals on power off
 3261              		.loc 1 574 10 view .LVU1007
 3262 0006 0021     		movs	r1, #0
 578:src/keys.c    **** 	State2.test = TST_NONE;
 3263              		.loc 1 578 2 view .LVU1008
 3264 0008 1422     		movs	r2, #20
 3265 000a 04F10800 		add	r0, r4, #8
 574:src/keys.c    **** 	// Removed: will clear any locals on power off
 3266              		.loc 1 574 10 view .LVU1009
 3267 000e E177     		strb	r1, [r4, #31]
 566:src/keys.c    **** 	unsigned int b = State2.trace;
 3268              		.loc 1 566 25 view .LVU1010
 3269 0010 257E     		ldrb	r5, [r4, #24]	@ zero_extendqisi2
 567:src/keys.c    **** #else
 3270              		.loc 1 567 25 view .LVU1011
ARM GAS  /tmp/ccy15zOt.s 			page 121


 3271 0012 E67D     		ldrb	r6, [r4, #23]	@ zero_extendqisi2
 571:src/keys.c    **** 	int k = LastKey;
 3272              		.loc 1 571 10 view .LVU1012
 3273 0014 A77C     		ldrb	r7, [r4, #18]	@ zero_extendqisi2
 572:src/keys.c    **** 
 3274              		.loc 1 572 10 view .LVU1013
 3275 0016 94F91380 		ldrsb	r8, [r4, #19]
 578:src/keys.c    **** 	State2.test = TST_NONE;
 3276              		.loc 1 578 2 view .LVU1014
 3277 001a FFF7FEFF 		bl	xset
 3278              	.LVL274:
 580:src/keys.c    **** 	update_program_bounds(1);
 3279              		.loc 1 580 17 view .LVU1015
 3280 001e A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 579:src/keys.c    **** 	State2.runmode = 1;
 3281              		.loc 1 579 14 view .LVU1016
 3282 0020 0722     		movs	r2, #7
 580:src/keys.c    **** 	update_program_bounds(1);
 3283              		.loc 1 580 17 view .LVU1017
 3284 0022 43F04003 		orr	r3, r3, #64
 581:src/keys.c    **** 	set_lift();
 3285              		.loc 1 581 2 view .LVU1018
 3286 0026 0120     		movs	r0, #1
 579:src/keys.c    **** 	State2.runmode = 1;
 3287              		.loc 1 579 14 view .LVU1019
 3288 0028 E273     		strb	r2, [r4, #15]
 580:src/keys.c    **** 	update_program_bounds(1);
 3289              		.loc 1 580 17 view .LVU1020
 3290 002a A375     		strb	r3, [r4, #22]
 581:src/keys.c    **** 	set_lift();
 3291              		.loc 1 581 2 view .LVU1021
 3292 002c FFF7FEFF 		bl	update_program_bounds
 3293              	.LVL275:
 582:src/keys.c    **** 
 3294              		.loc 1 582 2 view .LVU1022
 3295 0030 FFF7FEFF 		bl	set_lift
 3296              	.LVL276:
 589:src/keys.c    **** 	State2.flags = a;
 3297              		.loc 1 589 15 view .LVU1023
 3298 0034 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 590:src/keys.c    **** #else
 3299              		.loc 1 590 15 view .LVU1024
 3300 0036 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 594:src/keys.c    **** }
 3301              		.loc 1 594 15 view .LVU1025
 3302 0038 0949     		ldr	r1, .L349+4
 587:src/keys.c    **** #ifndef REALBUILD
 3303              		.loc 1 587 10 view .LVU1026
 3304 003a 84F81380 		strb	r8, [r4, #19]
 566:src/keys.c    **** 	unsigned int b = State2.trace;
 3305              		.loc 1 566 25 view .LVU1027
 3306 003e 05F00105 		and	r5, r5, #1
 3307              	.LVL277:
 567:src/keys.c    **** #else
 3308              		.loc 1 567 2 is_stmt 1 view .LVU1028
 567:src/keys.c    **** #else
 3309              		.loc 1 567 25 is_stmt 0 view .LVU1029
ARM GAS  /tmp/ccy15zOt.s 			page 122


 3310 0042 F609     		lsrs	r6, r6, #7
 3311              	.LVL278:
 571:src/keys.c    **** 	int k = LastKey;
 3312              		.loc 1 571 2 is_stmt 1 view .LVU1030
 571:src/keys.c    **** 	int k = LastKey;
 3313              		.loc 1 571 10 is_stmt 0 view .LVU1031
 3314 0044 FFB2     		uxtb	r7, r7
 3315              	.LVL279:
 572:src/keys.c    **** 
 3316              		.loc 1 572 2 is_stmt 1 view .LVU1032
 574:src/keys.c    **** 	// Removed: will clear any locals on power off
 3317              		.loc 1 574 2 view .LVU1033
 578:src/keys.c    **** 	State2.test = TST_NONE;
 3318              		.loc 1 578 2 view .LVU1034
 579:src/keys.c    **** 	State2.runmode = 1;
 3319              		.loc 1 579 2 view .LVU1035
 580:src/keys.c    **** 	update_program_bounds(1);
 3320              		.loc 1 580 2 view .LVU1036
 581:src/keys.c    **** 	set_lift();
 3321              		.loc 1 581 2 view .LVU1037
 582:src/keys.c    **** 
 3322              		.loc 1 582 2 view .LVU1038
 586:src/keys.c    **** 	LastKey = k;
 3323              		.loc 1 586 2 view .LVU1039
 589:src/keys.c    **** 	State2.flags = a;
 3324              		.loc 1 589 15 is_stmt 0 view .LVU1040
 3325 0046 66F3C712 		bfi	r2, r6, #7, #1
 590:src/keys.c    **** #else
 3326              		.loc 1 590 15 view .LVU1041
 3327 004a 65F30003 		bfi	r3, r5, #0, #1
 594:src/keys.c    **** }
 3328              		.loc 1 594 15 view .LVU1042
 3329 004e 6420     		movs	r0, #100
 589:src/keys.c    **** 	State2.flags = a;
 3330              		.loc 1 589 15 view .LVU1043
 3331 0050 E275     		strb	r2, [r4, #23]
 590:src/keys.c    **** #else
 3332              		.loc 1 590 15 view .LVU1044
 3333 0052 2376     		strb	r3, [r4, #24]
 586:src/keys.c    **** 	LastKey = k;
 3334              		.loc 1 586 10 view .LVU1045
 3335 0054 A774     		strb	r7, [r4, #18]
 587:src/keys.c    **** #ifndef REALBUILD
 3336              		.loc 1 587 2 is_stmt 1 view .LVU1046
 589:src/keys.c    **** 	State2.flags = a;
 3337              		.loc 1 589 2 view .LVU1047
 590:src/keys.c    **** #else
 3338              		.loc 1 590 2 view .LVU1048
 594:src/keys.c    **** }
 3339              		.loc 1 594 2 view .LVU1049
 594:src/keys.c    **** }
 3340              		.loc 1 594 15 is_stmt 0 view .LVU1050
 3341 0056 0860     		str	r0, [r1]
 595:src/keys.c    **** 
 3342              		.loc 1 595 1 view .LVU1051
 3343 0058 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3344              	.LVL280:
ARM GAS  /tmp/ccy15zOt.s 			page 123


 3345              	.L350:
 595:src/keys.c    **** 
 3346              		.loc 1 595 1 view .LVU1052
 3347              		.align	2
 3348              	.L349:
 3349 005c 00000000 		.word	StateWhileOn
 3350 0060 00000000 		.word	ShowRegister
 3351              		.cfi_endproc
 3352              	.LFE13:
 3354              		.section	.text.soft_init_state,"ax",%progbits
 3355              		.align	1
 3356              		.p2align 2,,3
 3357              		.global	soft_init_state
 3358              		.syntax unified
 3359              		.thumb
 3360              		.thumb_func
 3361              		.fpu fpv4-sp-d16
 3363              	soft_init_state:
 3364              	.LFB14:
 597:src/keys.c    **** 	int soft;
 3365              		.loc 1 597 28 is_stmt 1 view -0
 3366              		.cfi_startproc
 3367              		@ args = 0, pretend = 0, frame = 0
 3368              		@ frame_needed = 0, uses_anonymous_args = 0
 598:src/keys.c    **** 	unsigned int runmode;
 3369              		.loc 1 598 2 view .LVU1054
 599:src/keys.c    **** 	unsigned int alphas;
 3370              		.loc 1 599 2 view .LVU1055
 600:src/keys.c    **** 
 3371              		.loc 1 600 2 view .LVU1056
 602:src/keys.c    **** 		CmdLineLength = 0;
 3372              		.loc 1 602 2 view .LVU1057
 597:src/keys.c    **** 	int soft;
 3373              		.loc 1 597 28 is_stmt 0 view .LVU1058
 3374 0000 38B5     		push	{r3, r4, r5, lr}
 3375              		.cfi_def_cfa_offset 16
 3376              		.cfi_offset 3, -16
 3377              		.cfi_offset 4, -12
 3378              		.cfi_offset 5, -8
 3379              		.cfi_offset 14, -4
 602:src/keys.c    **** 		CmdLineLength = 0;
 3380              		.loc 1 602 6 view .LVU1059
 3381 0002 114C     		ldr	r4, .L358
 602:src/keys.c    **** 		CmdLineLength = 0;
 3382              		.loc 1 602 5 view .LVU1060
 3383 0004 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 3384 0006 D3B9     		cbnz	r3, .L357
 608:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 3385              		.loc 1 608 2 is_stmt 1 view .LVU1061
 609:src/keys.c    **** 	runmode = State2.runmode;
 3386              		.loc 1 609 17 is_stmt 0 view .LVU1062
 3387 0008 104A     		ldr	r2, .L358+4
 3388 000a 6369     		ldr	r3, [r4, #20]
 609:src/keys.c    **** 	runmode = State2.runmode;
 3389              		.loc 1 609 60 view .LVU1063
 3390 000c 1A42     		tst	r2, r3
 3391 000e 0AD0     		beq	.L354
ARM GAS  /tmp/ccy15zOt.s 			page 124


 3392              	.L355:
 3393              	.LVL281:
 610:src/keys.c    **** 	alphas = State2.alphas;
 3394              		.loc 1 610 2 is_stmt 1 view .LVU1064
 611:src/keys.c    **** 	init_state();
 3395              		.loc 1 611 17 is_stmt 0 view .LVU1065
 3396 0010 A57D     		ldrb	r5, [r4, #22]	@ zero_extendqisi2
 3397              	.LVL282:
 611:src/keys.c    **** 	init_state();
 3398              		.loc 1 611 2 is_stmt 1 view .LVU1066
 612:src/keys.c    **** 	if (soft) {
 3399              		.loc 1 612 2 view .LVU1067
 3400 0012 FFF7FEFF 		bl	init_state
 3401              	.LVL283:
 613:src/keys.c    **** 		State2.runmode = runmode;
 3402              		.loc 1 613 2 view .LVU1068
 614:src/keys.c    **** 		State2.alphas = alphas;
 3403              		.loc 1 614 3 view .LVU1069
 615:src/keys.c    **** 	}
 3404              		.loc 1 615 3 view .LVU1070
 615:src/keys.c    **** 	}
 3405              		.loc 1 615 17 is_stmt 0 view .LVU1071
 3406 0016 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 3407 0018 05F04805 		and	r5, r5, #72
 3408 001c 23F04803 		bic	r3, r3, #72
 3409 0020 2B43     		orrs	r3, r3, r5
 3410 0022 A375     		strb	r3, [r4, #22]
 617:src/keys.c    **** 
 3411              		.loc 1 617 1 view .LVU1072
 3412 0024 38BD     		pop	{r3, r4, r5, pc}
 3413              	.LVL284:
 3414              	.L354:
 609:src/keys.c    **** 	runmode = State2.runmode;
 3415              		.loc 1 609 60 discriminator 2 view .LVU1073
 3416 0026 E368     		ldr	r3, [r4, #12]
 3417 0028 23F47F03 		bic	r3, r3, #16711680
 3418 002c 23F47F43 		bic	r3, r3, #65280
 3419 0030 B3F1E06F 		cmp	r3, #117440512
 3420 0034 ECD1     		bne	.L355
 3421              	.LVL285:
 610:src/keys.c    **** 	alphas = State2.alphas;
 3422              		.loc 1 610 2 is_stmt 1 view .LVU1074
 611:src/keys.c    **** 	init_state();
 3423              		.loc 1 611 2 view .LVU1075
 612:src/keys.c    **** 	if (soft) {
 3424              		.loc 1 612 2 view .LVU1076
 617:src/keys.c    **** 
 3425              		.loc 1 617 1 is_stmt 0 view .LVU1077
 3426 0036 BDE83840 		pop	{r3, r4, r5, lr}
 3427              		.cfi_remember_state
 3428              		.cfi_restore 14
 3429              		.cfi_restore 5
 3430              		.cfi_restore 4
 3431              		.cfi_restore 3
 3432              		.cfi_def_cfa_offset 0
 612:src/keys.c    **** 	if (soft) {
 3433              		.loc 1 612 2 view .LVU1078
ARM GAS  /tmp/ccy15zOt.s 			page 125


 3434 003a FFF7FEBF 		b	init_state
 3435              	.LVL286:
 3436              	.L357:
 3437              		.cfi_restore_state
 3438              	.LBB380:
 3439              	.LBI380:
 597:src/keys.c    **** 	int soft;
 3440              		.loc 1 597 6 is_stmt 1 view .LVU1079
 3441              	.LBB381:
 603:src/keys.c    **** 		CmdLineEex = 0;
 3442              		.loc 1 603 3 view .LVU1080
 604:src/keys.c    **** 		CmdLineDot = 0;
 3443              		.loc 1 604 3 view .LVU1081
 605:src/keys.c    **** 		return;
 3444              		.loc 1 605 3 view .LVU1082
 603:src/keys.c    **** 		CmdLineEex = 0;
 3445              		.loc 1 603 17 is_stmt 0 view .LVU1083
 3446 003e 0023     		movs	r3, #0
 3447 0040 A383     		strh	r3, [r4, #28]	@ movhi
 605:src/keys.c    **** 		return;
 3448              		.loc 1 605 14 view .LVU1084
 3449 0042 A377     		strb	r3, [r4, #30]
 606:src/keys.c    **** 	}
 3450              		.loc 1 606 3 is_stmt 1 view .LVU1085
 3451              	.LBE381:
 3452              	.LBE380:
 617:src/keys.c    **** 
 3453              		.loc 1 617 1 is_stmt 0 view .LVU1086
 3454 0044 38BD     		pop	{r3, r4, r5, pc}
 3455              	.L359:
 3456 0046 00BF     		.align	2
 3457              	.L358:
 3458 0048 00000000 		.word	StateWhileOn
 3459 004c 002F2004 		.word	69218048
 3460              		.cfi_endproc
 3461              	.LFE14:
 3463              		.section	.text.current_catalogue_max,"ax",%progbits
 3464              		.align	1
 3465              		.p2align 2,,3
 3466              		.global	current_catalogue_max
 3467              		.syntax unified
 3468              		.thumb
 3469              		.thumb_func
 3470              		.fpu fpv4-sp-d16
 3472              	current_catalogue_max:
 3473              	.LFB39:
2035:src/keys.c    **** 	// A quick table of catalogue sizes
 3474              		.loc 1 2035 33 is_stmt 1 view -0
 3475              		.cfi_startproc
 3476              		@ args = 0, pretend = 0, frame = 0
 3477              		@ frame_needed = 0, uses_anonymous_args = 0
 3478              		@ link register save eliminated.
2038:src/keys.c    **** 	{
 3479              		.loc 1 2038 2 view .LVU1088
2069:src/keys.c    **** #endif
 3480              		.loc 1 2069 2 view .LVU1089
2069:src/keys.c    **** #endif
ARM GAS  /tmp/ccy15zOt.s 			page 126


 3481              		.loc 1 2069 31 is_stmt 0 view .LVU1090
 3482 0000 024B     		ldr	r3, .L361
2069:src/keys.c    **** #endif
 3483              		.loc 1 2069 24 view .LVU1091
 3484 0002 034A     		ldr	r2, .L361+4
2069:src/keys.c    **** #endif
 3485              		.loc 1 2069 31 view .LVU1092
 3486 0004 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2071:src/keys.c    **** 
 3487              		.loc 1 2071 1 view .LVU1093
 3488 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 3489 0008 7047     		bx	lr
 3490              	.L362:
 3491 000a 00BF     		.align	2
 3492              	.L361:
 3493 000c 00000000 		.word	StateWhileOn
 3494 0010 00000000 		.word	.LANCHOR2
 3495              		.cfi_endproc
 3496              	.LFE39:
 3498              		.section	.text.current_catalogue,"ax",%progbits
 3499              		.align	1
 3500              		.p2align 2,,3
 3501              		.global	current_catalogue
 3502              		.syntax unified
 3503              		.thumb
 3504              		.thumb_func
 3505              		.fpu fpv4-sp-d16
 3507              	current_catalogue:
 3508              	.LVL287:
 3509              	.LFB41:
2084:src/keys.c    **** 	// A quick table of catalogue tables
 3510              		.loc 1 2084 33 is_stmt 1 view -0
 3511              		.cfi_startproc
 3512              		@ args = 0, pretend = 0, frame = 0
 3513              		@ frame_needed = 0, uses_anonymous_args = 0
 3514              		@ link register save eliminated.
2087:src/keys.c    **** 	{
 3515              		.loc 1 2087 2 view .LVU1095
2114:src/keys.c    **** 	unsigned int c = State2.catalogue;
 3516              		.loc 1 2114 2 view .LVU1096
2115:src/keys.c    **** 	int m, i;
 3517              		.loc 1 2115 2 view .LVU1097
2115:src/keys.c    **** 	int m, i;
 3518              		.loc 1 2115 25 is_stmt 0 view .LVU1098
 3519 0000 314A     		ldr	r2, .L390
2115:src/keys.c    **** 	int m, i;
 3520              		.loc 1 2115 15 view .LVU1099
 3521 0002 937B     		ldrb	r3, [r2, #14]	@ zero_extendqisi2
 3522              	.LVL288:
2116:src/keys.c    **** 	unsigned p, q;
 3523              		.loc 1 2116 2 is_stmt 1 view .LVU1100
2117:src/keys.c    **** 
 3524              		.loc 1 2117 2 view .LVU1101
2119:src/keys.c    **** 		if (n == OP_ZERO)
 3525              		.loc 1 2119 2 view .LVU1102
2119:src/keys.c    **** 		if (n == OP_ZERO)
 3526              		.loc 1 2119 5 is_stmt 0 view .LVU1103
ARM GAS  /tmp/ccy15zOt.s 			page 127


 3527 0004 102B     		cmp	r3, #16
 3528 0006 39D0     		beq	.L384
2124:src/keys.c    **** 		if (n == OP_ZERO)
 3529              		.loc 1 2124 2 is_stmt 1 view .LVU1104
2124:src/keys.c    **** 		if (n == OP_ZERO)
 3530              		.loc 1 2124 5 is_stmt 0 view .LVU1105
 3531 0008 112B     		cmp	r3, #17
 3532 000a 32D0     		beq	.L385
2129:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 3533              		.loc 1 2129 2 is_stmt 1 view .LVU1106
2129:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 3534              		.loc 1 2129 5 is_stmt 0 view .LVU1107
 3535 000c 122B     		cmp	r3, #18
 3536 000e 45D0     		beq	.L386
2142:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 3537              		.loc 1 2142 2 is_stmt 1 view .LVU1108
2142:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 3538              		.loc 1 2142 5 is_stmt 0 view .LVU1109
 3539 0010 0E2B     		cmp	r3, #14
 3540 0012 38D0     		beq	.L387
2145:src/keys.c    **** 
 3541              		.loc 1 2145 3 is_stmt 1 view .LVU1110
2145:src/keys.c    **** 
 3542              		.loc 1 2145 7 is_stmt 0 view .LVU1111
 3543 0014 2D4A     		ldr	r2, .L390+4
2147:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3544              		.loc 1 2147 35 view .LVU1112
 3545 0016 A3F10B01 		sub	r1, r3, #11
2147:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3546              		.loc 1 2147 5 view .LVU1113
 3547 001a 0429     		cmp	r1, #4
2145:src/keys.c    **** 
 3548              		.loc 1 2145 7 view .LVU1114
 3549 001c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 3550              	.LVL289:
2147:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3551              		.loc 1 2147 2 is_stmt 1 view .LVU1115
2147:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3552              		.loc 1 2147 5 is_stmt 0 view .LVU1116
 3553 0020 38D9     		bls	.L370
2150:src/keys.c    **** 		return OP_NIL | OP_NOP;
 3554              		.loc 1 2150 2 is_stmt 1 view .LVU1117
2150:src/keys.c    **** 		return OP_NIL | OP_NOP;
 3555              		.loc 1 2150 5 is_stmt 0 view .LVU1118
 3556 0022 142B     		cmp	r3, #20
 3557 0024 4DD8     		bhi	.L378
2154:src/keys.c    **** 	p = cat[0];
 3558              		.loc 1 2154 2 is_stmt 1 view .LVU1119
2084:src/keys.c    **** 	// A quick table of catalogue tables
 3559              		.loc 1 2084 33 is_stmt 0 view .LVU1120
 3560 0026 10B4     		push	{r4}
 3561              		.cfi_def_cfa_offset 4
 3562              		.cfi_offset 4, -4
2154:src/keys.c    **** 	p = cat[0];
 3563              		.loc 1 2154 11 view .LVU1121
 3564 0028 00EBA001 		add	r1, r0, r0, asr #2
2154:src/keys.c    **** 	p = cat[0];
ARM GAS  /tmp/ccy15zOt.s 			page 128


 3565              		.loc 1 2154 6 view .LVU1122
 3566 002c 5318     		adds	r3, r2, r1
 3567              	.LVL290:
2155:src/keys.c    **** 	q = cat[1];
 3568              		.loc 1 2155 2 is_stmt 1 view .LVU1123
2156:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3569              		.loc 1 2156 2 view .LVU1124
2157:src/keys.c    **** 
 3570              		.loc 1 2157 2 view .LVU1125
2157:src/keys.c    **** 
 3571              		.loc 1 2157 35 is_stmt 0 view .LVU1126
 3572 002e 4000     		lsls	r0, r0, #1
 3573              	.LVL291:
2155:src/keys.c    **** 	q = cat[1];
 3574              		.loc 1 2155 4 view .LVU1127
 3575 0030 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 3576              	.LVL292:
2156:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3577              		.loc 1 2156 4 view .LVU1128
 3578 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3579              	.LVL293:
2156:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3580              		.loc 1 2156 4 view .LVU1129
 3581 0034 2649     		ldr	r1, .L390+8
 3582              	.LVL294:
2157:src/keys.c    **** 
 3583              		.loc 1 2157 54 view .LVU1130
 3584 0036 C443     		mvns	r4, r0
2157:src/keys.c    **** 
 3585              		.loc 1 2157 35 view .LVU1131
 3586 0038 00F00600 		and	r0, r0, #6
2157:src/keys.c    **** 
 3587              		.loc 1 2157 54 view .LVU1132
 3588 003c 04F00604 		and	r4, r4, #6
2157:src/keys.c    **** 
 3589              		.loc 1 2157 24 view .LVU1133
 3590 0040 0230     		adds	r0, r0, #2
2157:src/keys.c    **** 
 3591              		.loc 1 2157 48 view .LVU1134
 3592 0042 E340     		lsrs	r3, r3, r4
 3593              	.LVL295:
2157:src/keys.c    **** 
 3594              		.loc 1 2157 18 view .LVU1135
 3595 0044 02FA00F0 		lsl	r0, r2, r0
2157:src/keys.c    **** 
 3596              		.loc 1 2157 43 view .LVU1136
 3597 0048 1843     		orrs	r0, r0, r3
2157:src/keys.c    **** 
 3598              		.loc 1 2157 4 view .LVU1137
 3599 004a C0F30903 		ubfx	r3, r0, #0, #10
 3600              	.LVL296:
2160:src/keys.c    **** 		if (m < opcode_breaks[i])
 3601              		.loc 1 2160 2 is_stmt 1 view .LVU1138
2160:src/keys.c    **** 		if (m < opcode_breaks[i])
 3602              		.loc 1 2160 12 view .LVU1139
2157:src/keys.c    **** 
 3603              		.loc 1 2157 4 is_stmt 0 view .LVU1140
ARM GAS  /tmp/ccy15zOt.s 			page 129


 3604 004e 3422     		movs	r2, #52
 3605              	.LVL297:
2160:src/keys.c    **** 		if (m < opcode_breaks[i])
 3606              		.loc 1 2160 8 view .LVU1141
 3607 0050 0020     		movs	r0, #0
 3608 0052 01E0     		b	.L374
 3609              	.LVL298:
 3610              	.L389:
2160:src/keys.c    **** 		if (m < opcode_breaks[i])
 3611              		.loc 1 2160 8 view .LVU1142
 3612 0054 11F8012B 		ldrb	r2, [r1], #1	@ zero_extendqisi2
 3613              	.LVL299:
 3614              	.L374:
2161:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 3615              		.loc 1 2161 3 is_stmt 1 view .LVU1143
2163:src/keys.c    **** 	}
 3616              		.loc 1 2163 3 view .LVU1144
2161:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 3617              		.loc 1 2161 6 is_stmt 0 view .LVU1145
 3618 0058 9A42     		cmp	r2, r3
 3619 005a 2FDC     		bgt	.L388
2160:src/keys.c    **** 		if (m < opcode_breaks[i])
 3620              		.loc 1 2160 25 discriminator 2 view .LVU1146
 3621 005c 0130     		adds	r0, r0, #1
 3622              	.LVL300:
2160:src/keys.c    **** 		if (m < opcode_breaks[i])
 3623              		.loc 1 2160 2 discriminator 2 view .LVU1147
 3624 005e 0728     		cmp	r0, #7
2163:src/keys.c    **** 	}
 3625              		.loc 1 2163 5 discriminator 2 view .LVU1148
 3626 0060 A3EB0203 		sub	r3, r3, r2
 3627              	.LVL301:
2160:src/keys.c    **** 		if (m < opcode_breaks[i])
 3628              		.loc 1 2160 24 is_stmt 1 discriminator 2 view .LVU1149
2160:src/keys.c    **** 		if (m < opcode_breaks[i])
 3629              		.loc 1 2160 12 discriminator 2 view .LVU1150
2160:src/keys.c    **** 		if (m < opcode_breaks[i])
 3630              		.loc 1 2160 2 is_stmt 0 discriminator 2 view .LVU1151
 3631 0064 F6D1     		bne	.L389
2165:src/keys.c    **** }
 3632              		.loc 1 2165 2 is_stmt 1 view .LVU1152
2165:src/keys.c    **** }
 3633              		.loc 1 2165 9 is_stmt 0 view .LVU1153
 3634 0066 03F12000 		add	r0, r3, #32
 3635              	.LVL302:
2165:src/keys.c    **** }
 3636              		.loc 1 2165 9 view .LVU1154
 3637 006a 0002     		lsls	r0, r0, #8
 3638              	.L363:
2166:src/keys.c    **** 
 3639              		.loc 1 2166 1 view .LVU1155
 3640 006c 5DF8044B 		ldr	r4, [sp], #4
 3641              		.cfi_restore 4
 3642              		.cfi_def_cfa_offset 0
 3643 0070 7047     		bx	lr
 3644              	.LVL303:
 3645              	.L385:
ARM GAS  /tmp/ccy15zOt.s 			page 130


2125:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 3646              		.loc 1 2125 3 is_stmt 1 view .LVU1156
2125:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 3647              		.loc 1 2125 6 is_stmt 0 view .LVU1157
 3648 0072 4B28     		cmp	r0, #75
 3649 0074 1FD0     		beq	.L376
2127:src/keys.c    **** 	}
 3650              		.loc 1 2127 3 is_stmt 1 view .LVU1158
2127:src/keys.c    **** 	}
 3651              		.loc 1 2127 10 is_stmt 0 view .LVU1159
 3652 0076 40F40450 		orr	r0, r0, #8448
 3653              	.LVL304:
2127:src/keys.c    **** 	}
 3654              		.loc 1 2127 10 view .LVU1160
 3655 007a 7047     		bx	lr
 3656              	.LVL305:
 3657              	.L384:
2120:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 3658              		.loc 1 2120 3 is_stmt 1 view .LVU1161
2120:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 3659              		.loc 1 2120 6 is_stmt 0 view .LVU1162
 3660 007c 4B28     		cmp	r0, #75
 3661 007e 17D0     		beq	.L375
2122:src/keys.c    **** 	}
 3662              		.loc 1 2122 3 is_stmt 1 view .LVU1163
2122:src/keys.c    **** 	}
 3663              		.loc 1 2122 10 is_stmt 0 view .LVU1164
 3664 0080 40F40050 		orr	r0, r0, #8192
 3665              	.LVL306:
2122:src/keys.c    **** 	}
 3666              		.loc 1 2122 10 view .LVU1165
 3667 0084 7047     		bx	lr
 3668              	.LVL307:
 3669              	.L387:
2142:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 3670              		.loc 1 2142 35 discriminator 1 view .LVU1166
 3671 0086 917D     		ldrb	r1, [r2, #22]	@ zero_extendqisi2
2143:src/keys.c    **** 	else
 3672              		.loc 1 2143 7 discriminator 1 view .LVU1167
 3673 0088 124B     		ldr	r3, .L390+12
 3674              	.LVL308:
2143:src/keys.c    **** 	else
 3675              		.loc 1 2143 7 discriminator 1 view .LVU1168
 3676 008a 134A     		ldr	r2, .L390+16
 3677              	.LVL309:
2143:src/keys.c    **** 	else
 3678              		.loc 1 2143 7 discriminator 1 view .LVU1169
 3679 008c 11F0100F 		tst	r1, #16
 3680 0090 18BF     		it	ne
 3681 0092 1A46     		movne	r2, r3
 3682              	.L370:
 3683              	.LVL310:
2148:src/keys.c    **** 	}
 3684              		.loc 1 2148 3 is_stmt 1 view .LVU1170
 3685              	.LBB382:
 3686              	.LBI382:
2077:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
ARM GAS  /tmp/ccy15zOt.s 			page 131


 3687              		.loc 1 2077 15 view .LVU1171
 3688              	.LBB383:
2078:src/keys.c    **** }
 3689              		.loc 1 2078 2 view .LVU1172
2078:src/keys.c    **** }
 3690              		.loc 1 2078 9 is_stmt 0 view .LVU1173
 3691 0094 105C     		ldrb	r0, [r2, r0]	@ zero_extendqisi2
 3692              	.LVL311:
2078:src/keys.c    **** }
 3693              		.loc 1 2078 9 view .LVU1174
 3694 0096 40F48840 		orr	r0, r0, #17408
 3695              	.LVL312:
2078:src/keys.c    **** }
 3696              		.loc 1 2078 9 view .LVU1175
 3697              	.LBE383:
 3698              	.LBE382:
2148:src/keys.c    **** 	}
 3699              		.loc 1 2148 10 view .LVU1176
 3700 009a 7047     		bx	lr
 3701              	.LVL313:
 3702              	.L386:
 3703              	.LBB384:
2130:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3704              		.loc 1 2130 3 is_stmt 1 view .LVU1177
2130:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3705              		.loc 1 2130 33 is_stmt 0 view .LVU1178
 3706 009c 0F4B     		ldr	r3, .L390+20
 3707              	.LVL314:
2130:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3708              		.loc 1 2130 13 view .LVU1179
 3709 009e 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 3710              	.LVL315:
2131:src/keys.c    **** 			// Monadic conversion routine
 3711              		.loc 1 2131 3 is_stmt 1 view .LVU1180
2131:src/keys.c    **** 			// Monadic conversion routine
 3712              		.loc 1 2131 6 is_stmt 0 view .LVU1181
 3713 00a0 5728     		cmp	r0, #87
2133:src/keys.c    **** 		else
 3714              		.loc 1 2133 4 is_stmt 1 view .LVU1182
2133:src/keys.c    **** 		else
 3715              		.loc 1 2133 25 is_stmt 0 view .LVU1183
 3716 00a2 C6BF     		itte	gt
 3717 00a4 5838     		subgt	r0, r0, #88
 3718              	.LVL316:
2133:src/keys.c    **** 		else
 3719              		.loc 1 2133 18 view .LVU1184
 3720 00a6 40F40070 		orrgt	r0, r0, #512
2135:src/keys.c    **** 	}
 3721              		.loc 1 2135 4 is_stmt 1 view .LVU1185
2135:src/keys.c    **** 	}
 3722              		.loc 1 2135 11 is_stmt 0 view .LVU1186
 3723 00aa 40F40C40 		orrle	r0, r0, #35840
 3724 00ae 7047     		bx	lr
 3725              	.LVL317:
 3726              	.L375:
2135:src/keys.c    **** 	}
 3727              		.loc 1 2135 11 view .LVU1187
ARM GAS  /tmp/ccy15zOt.s 			page 132


 3728              	.LBE384:
2121:src/keys.c    **** 		return CONST(n);
 3729              		.loc 1 2121 11 view .LVU1188
 3730 00b0 4FF42740 		mov	r0, #42752
 3731              	.LVL318:
2121:src/keys.c    **** 		return CONST(n);
 3732              		.loc 1 2121 11 view .LVU1189
 3733 00b4 7047     		bx	lr
 3734              	.LVL319:
 3735              	.L376:
2126:src/keys.c    **** 		return CONST_CMPLX(n);
 3736              		.loc 1 2126 11 view .LVU1190
 3737 00b6 4FF42840 		mov	r0, #43008
 3738              	.LVL320:
2126:src/keys.c    **** 		return CONST_CMPLX(n);
 3739              		.loc 1 2126 11 view .LVU1191
 3740 00ba 7047     		bx	lr
 3741              	.LVL321:
 3742              	.L388:
 3743              		.cfi_def_cfa_offset 4
 3744              		.cfi_offset 4, -4
2162:src/keys.c    **** 		m -= opcode_breaks[i];
 3745              		.loc 1 2162 4 is_stmt 1 view .LVU1192
2162:src/keys.c    **** 		m -= opcode_breaks[i];
 3746              		.loc 1 2162 29 is_stmt 0 view .LVU1193
 3747 00bc 03EB0020 		add	r0, r3, r0, lsl #8
 3748              	.LVL322:
2162:src/keys.c    **** 		m -= opcode_breaks[i];
 3749              		.loc 1 2162 29 view .LVU1194
 3750 00c0 D4E7     		b	.L363
 3751              	.LVL323:
 3752              	.L378:
 3753              		.cfi_def_cfa_offset 0
 3754              		.cfi_restore 4
2151:src/keys.c    **** 
 3755              		.loc 1 2151 10 view .LVU1195
 3756 00c2 4FF48070 		mov	r0, #256
 3757              	.LVL324:
2166:src/keys.c    **** 
 3758              		.loc 1 2166 1 view .LVU1196
 3759 00c6 7047     		bx	lr
 3760              	.L391:
 3761              		.align	2
 3762              	.L390:
 3763 00c8 00000000 		.word	StateWhileOn
 3764 00cc 00000000 		.word	.LANCHOR6
 3765 00d0 01000000 		.word	.LANCHOR7+1
 3766 00d4 00000000 		.word	.LANCHOR4
 3767 00d8 00000000 		.word	.LANCHOR3
 3768 00dc 00000000 		.word	.LANCHOR5
 3769              		.cfi_endproc
 3770              	.LFE41:
 3772              		.section	.text.process_catalogue,"ax",%progbits
 3773              		.align	1
 3774              		.p2align 2,,3
 3775              		.syntax unified
 3776              		.thumb
ARM GAS  /tmp/ccy15zOt.s 			page 133


 3777              		.thumb_func
 3778              		.fpu fpv4-sp-d16
 3780              	process_catalogue:
 3781              	.LVL325:
 3782              	.LFB43:
2180:src/keys.c    **** 	int pos = State.catpos;
 3783              		.loc 1 2180 92 is_stmt 1 view -0
 3784              		.cfi_startproc
 3785              		@ args = 0, pretend = 0, frame = 16
 3786              		@ frame_needed = 0, uses_anonymous_args = 0
2180:src/keys.c    **** 	int pos = State.catpos;
 3787              		.loc 1 2180 92 is_stmt 0 view .LVU1198
 3788 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3789              		.cfi_def_cfa_offset 36
 3790              		.cfi_offset 4, -36
 3791              		.cfi_offset 5, -32
 3792              		.cfi_offset 6, -28
 3793              		.cfi_offset 7, -24
 3794              		.cfi_offset 8, -20
 3795              		.cfi_offset 9, -16
 3796              		.cfi_offset 10, -12
 3797              		.cfi_offset 11, -8
 3798              		.cfi_offset 14, -4
2181:src/keys.c    **** 	int ch;
 3799              		.loc 1 2181 12 view .LVU1199
 3800 0004 DFF8EC92 		ldr	r9, .L506+24
 3801              	.LBB385:
 3802              	.LBB386:
2069:src/keys.c    **** #endif
 3803              		.loc 1 2069 31 view .LVU1200
 3804 0008 B44F     		ldr	r7, .L506
 3805              	.LBE386:
 3806              	.LBE385:
2181:src/keys.c    **** 	int ch;
 3807              		.loc 1 2181 12 view .LVU1201
 3808 000a D9F80040 		ldr	r4, [r9]
 3809              	.LBB391:
 3810              	.LBB387:
2069:src/keys.c    **** #endif
 3811              		.loc 1 2069 31 view .LVU1202
 3812 000e 97F80EA0 		ldrb	r10, [r7, #14]	@ zero_extendqisi2
 3813              	.LBE387:
 3814              	.LBE391:
2181:src/keys.c    **** 	int ch;
 3815              		.loc 1 2181 17 view .LVU1203
 3816 0012 B4F8DC57 		ldrh	r5, [r4, #2012]
 3817              	.LBB392:
 3818              	.LBB388:
2069:src/keys.c    **** #endif
 3819              		.loc 1 2069 24 view .LVU1204
 3820 0016 B24B     		ldr	r3, .L506+4
 3821              	.LBE388:
 3822              	.LBE392:
2181:src/keys.c    **** 	int ch;
 3823              		.loc 1 2181 2 is_stmt 1 view .LVU1205
2180:src/keys.c    **** 	int pos = State.catpos;
 3824              		.loc 1 2180 92 is_stmt 0 view .LVU1206
ARM GAS  /tmp/ccy15zOt.s 			page 134


 3825 0018 85B0     		sub	sp, sp, #20
 3826              		.cfi_def_cfa_offset 56
 3827              	.LBB393:
 3828              	.LBB389:
2069:src/keys.c    **** #endif
 3829              		.loc 1 2069 24 view .LVU1207
 3830 001a 13F80A80 		ldrb	r8, [r3, r10]	@ zero_extendqisi2
 3831              	.LBE389:
 3832              	.LBE393:
2180:src/keys.c    **** 	int pos = State.catpos;
 3833              		.loc 1 2180 92 view .LVU1208
 3834 001e 1646     		mov	r6, r2
2181:src/keys.c    **** 	int ch;
 3835              		.loc 1 2181 6 view .LVU1209
 3836 0020 C5F34615 		ubfx	r5, r5, #5, #7
 3837              	.LVL326:
2182:src/keys.c    **** 	const int ctmax = current_catalogue_max();
 3838              		.loc 1 2182 2 is_stmt 1 view .LVU1210
2183:src/keys.c    **** 	const enum catalogues cat = (enum catalogues) State2.catalogue;
 3839              		.loc 1 2183 2 view .LVU1211
 3840              	.LBB394:
 3841              	.LBI385:
2035:src/keys.c    **** 	// A quick table of catalogue sizes
 3842              		.loc 1 2035 5 view .LVU1212
 3843              	.LBB390:
2038:src/keys.c    **** 	{
 3844              		.loc 1 2038 2 view .LVU1213
2069:src/keys.c    **** #endif
 3845              		.loc 1 2069 2 view .LVU1214
2069:src/keys.c    **** #endif
 3846              		.loc 1 2069 2 is_stmt 0 view .LVU1215
 3847              	.LBE390:
 3848              	.LBE394:
2184:src/keys.c    **** 
 3849              		.loc 1 2184 2 is_stmt 1 view .LVU1216
2186:src/keys.c    **** 		switch (c) {
 3850              		.loc 1 2186 2 view .LVU1217
2186:src/keys.c    **** 		switch (c) {
 3851              		.loc 1 2186 5 is_stmt 0 view .LVU1218
 3852 0024 0029     		cmp	r1, #0
 3853 0026 65D0     		beq	.L491
2247:src/keys.c    **** 		if (cat == CATALOGUE_CONV && c == K01) {
 3854              		.loc 1 2247 9 is_stmt 1 view .LVU1219
2247:src/keys.c    **** 		if (cat == CATALOGUE_CONV && c == K01) {
 3855              		.loc 1 2247 12 is_stmt 0 view .LVU1220
 3856 0028 0129     		cmp	r1, #1
 3857 002a 00F0ED80 		beq	.L492
2281:src/keys.c    **** 		if (c == K24 && cat == CATALOGUE_SUMS) {
 3858              		.loc 1 2281 9 is_stmt 1 view .LVU1221
2281:src/keys.c    **** 		if (c == K24 && cat == CATALOGUE_SUMS) {
 3859              		.loc 1 2281 12 is_stmt 0 view .LVU1222
 3860 002e 0229     		cmp	r1, #2
 3861 0030 00F00B81 		beq	.L493
 3862              	.LVL327:
 3863              	.L428:
 3864              	.LBB395:
 3865              	.LBB396:
ARM GAS  /tmp/ccy15zOt.s 			page 135


 440:src/keys.c    **** }
 3866              		.loc 1 440 2 is_stmt 1 view .LVU1223
 3867              	.LBB397:
 3868              	.LBI397:
 119:src/keys.c    **** {
 3869              		.loc 1 119 12 view .LVU1224
 3870              	.LBB398:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3871              		.loc 1 121 2 view .LVU1225
 131:src/keys.c    **** }
 3872              		.loc 1 131 2 view .LVU1226
 131:src/keys.c    **** }
 3873              		.loc 1 131 23 is_stmt 0 view .LVU1227
 3874 0034 AB4B     		ldr	r3, .L506+8
 3875              	.LBE398:
 3876              	.LBE397:
 440:src/keys.c    **** }
 3877              		.loc 1 440 49 view .LVU1228
 3878 0036 AC4A     		ldr	r2, .L506+12
 3879              	.LBB400:
 3880              	.LBB399:
 131:src/keys.c    **** }
 3881              		.loc 1 131 23 view .LVU1229
 3882 0038 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 3883              	.LBE399:
 3884              	.LBE400:
 440:src/keys.c    **** }
 3885              		.loc 1 440 49 view .LVU1230
 3886 003a 03EB4303 		add	r3, r3, r3, lsl #1
 3887 003e 02EB4303 		add	r3, r2, r3, lsl #1
 3888              	.LBE396:
 3889              	.LBE395:
 3890              	.LBB404:
 3891              	.LBB405:
 3892              	.LBB406:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3893              		.loc 1 94 16 view .LVU1231
 3894 0042 0025     		movs	r5, #0
 3895              	.LVL328:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3896              		.loc 1 94 16 view .LVU1232
 3897              	.LBE406:
 3898              	.LBE405:
 3899              	.LBE404:
2291:src/keys.c    **** 	reset_shift();
 3900              		.loc 1 2291 7 view .LVU1233
 3901 0044 585C     		ldrb	r0, [r3, r1]	@ zero_extendqisi2
 3902              	.LVL329:
2291:src/keys.c    **** 	reset_shift();
 3903              		.loc 1 2291 7 view .LVU1234
 3904 0046 FFF7FEFF 		bl	remap_chars
 3905              	.LVL330:
2291:src/keys.c    **** 	reset_shift();
 3906              		.loc 1 2291 7 view .LVU1235
 3907 004a 0446     		mov	r4, r0
 3908              	.LVL331:
2292:src/keys.c    **** 	if (ch == '\0')
ARM GAS  /tmp/ccy15zOt.s 			page 136


 3909              		.loc 1 2292 2 is_stmt 1 view .LVU1236
 3910              	.LBB411:
 3911              	.LBI404:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 3912              		.loc 1 102 13 view .LVU1237
 3913              	.LBE411:
 103:src/keys.c    **** }
 3914              		.loc 1 103 2 view .LVU1238
 3915              	.LBB412:
 3916              	.LBB410:
 3917              	.LBI405:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 3918              		.loc 1 92 20 view .LVU1239
 3919              	.LBB409:
  93:src/keys.c    **** 	State2.shifts = shift;
 3920              		.loc 1 93 2 view .LVU1240
 3921              	.LBB407:
 3922              	.LBI407:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 3923              		.loc 1 84 13 view .LVU1241
 3924              	.LBB408:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3925              		.loc 1 85 2 view .LVU1242
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3926              		.loc 1 85 18 is_stmt 0 view .LVU1243
 3927 004c FFF7FEFF 		bl	shift_down
 3928              	.LVL332:
  86:src/keys.c    **** }
 3929              		.loc 1 86 2 is_stmt 1 view .LVU1244
 3930              	.LBE408:
 3931              	.LBE407:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3932              		.loc 1 94 2 view .LVU1245
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 3933              		.loc 1 94 16 is_stmt 0 view .LVU1246
 3934 0050 3D74     		strb	r5, [r7, #16]
  96:src/keys.c    **** }
 3935              		.loc 1 96 2 is_stmt 1 view .LVU1247
 3936              	.LVL333:
  96:src/keys.c    **** }
 3937              		.loc 1 96 2 is_stmt 0 view .LVU1248
 3938              	.LBE409:
 3939              	.LBE410:
 3940              	.LBE412:
2293:src/keys.c    **** 		return STATE_UNFINISHED;
 3941              		.loc 1 2293 2 is_stmt 1 view .LVU1249
2293:src/keys.c    **** 		return STATE_UNFINISHED;
 3942              		.loc 1 2293 5 is_stmt 0 view .LVU1250
 3943 0052 002C     		cmp	r4, #0
 3944 0054 6FD0     		beq	.L490
2295:src/keys.c    **** 		// No multi character search in alpha catalogues
 3945              		.loc 1 2295 2 is_stmt 1 view .LVU1251
2295:src/keys.c    **** 		// No multi character search in alpha catalogues
 3946              		.loc 1 2295 5 is_stmt 0 view .LVU1252
 3947 0056 AAF10B0A 		sub	r10, r10, #11
 3948              	.LVL334:
2295:src/keys.c    **** 		// No multi character search in alpha catalogues
ARM GAS  /tmp/ccy15zOt.s 			page 137


 3949              		.loc 1 2295 5 view .LVU1253
 3950 005a BAF1040F 		cmp	r10, #4
 3951 005e 40F2CB80 		bls	.L442
2299:src/keys.c    **** 		Cmdline[CmdLineLength++] = ch;
 3952              		.loc 1 2299 2 is_stmt 1 view .LVU1254
2299:src/keys.c    **** 		Cmdline[CmdLineLength++] = ch;
 3953              		.loc 1 2299 6 is_stmt 0 view .LVU1255
 3954 0062 3D7F     		ldrb	r5, [r7, #28]	@ zero_extendqisi2
2299:src/keys.c    **** 		Cmdline[CmdLineLength++] = ch;
 3955              		.loc 1 2299 5 view .LVU1256
 3956 0064 092D     		cmp	r5, #9
 3957 0066 40F2C780 		bls	.L442
 3958              	.LVL335:
 3959              	.L410:
2304:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 3960              		.loc 1 2304 2 is_stmt 1 view .LVU1257
2304:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 3961              		.loc 1 2304 25 is_stmt 0 view .LVU1258
 3962 006a 7B19     		adds	r3, r7, r5
 3963 006c 0025     		movs	r5, #0
 3964 006e 83F82050 		strb	r5, [r3, #32]
2305:src/keys.c    **** 		char buf[16];
 3965              		.loc 1 2305 2 is_stmt 1 view .LVU1259
 3966              	.LVL336:
2305:src/keys.c    **** 		char buf[16];
 3967              		.loc 1 2305 16 view .LVU1260
2305:src/keys.c    **** 		char buf[16];
 3968              		.loc 1 2305 2 is_stmt 0 view .LVU1261
 3969 0072 B8F1000F 		cmp	r8, #0
 3970 0076 00F0D780 		beq	.L488
 3971              	.LVL337:
 3972              	.L430:
 3973              	.LBB413:
2306:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
 3974              		.loc 1 2306 3 is_stmt 1 view .LVU1262
2307:src/keys.c    **** 		int i;
 3975              		.loc 1 2307 3 view .LVU1263
2307:src/keys.c    **** 		int i;
 3976              		.loc 1 2307 21 is_stmt 0 view .LVU1264
 3977 007a 2846     		mov	r0, r5
 3978 007c FFF7FEFF 		bl	current_catalogue
 3979              	.LVL338:
 3980 0080 6946     		mov	r1, sp
 3981 0082 FFF7FEFF 		bl	catcmd
 3982              	.LVL339:
 3983 0086 0446     		mov	r4, r0
 3984              	.LVL340:
2308:src/keys.c    **** 
 3985              		.loc 1 2308 3 is_stmt 1 view .LVU1265
2310:src/keys.c    **** 			cmd++;
 3986              		.loc 1 2310 3 view .LVU1266
2311:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 3987              		.loc 1 2311 4 view .LVU1267
2310:src/keys.c    **** 			cmd++;
 3988              		.loc 1 2310 7 is_stmt 0 view .LVU1268
 3989 0088 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3990              	.LVL341:
ARM GAS  /tmp/ccy15zOt.s 			page 138


2310:src/keys.c    **** 			cmd++;
 3991              		.loc 1 2310 6 view .LVU1269
 3992 008a 1428     		cmp	r0, #20
 3993 008c 04BF     		itt	eq
 3994 008e 6078     		ldrbeq	r0, [r4, #1]	@ zero_extendqisi2
2311:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 3995              		.loc 1 2311 7 view .LVU1270
 3996 0090 0134     		addeq	r4, r4, #1
 3997              	.LVL342:
2312:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3998              		.loc 1 2312 3 is_stmt 1 view .LVU1271
2312:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3999              		.loc 1 2312 13 view .LVU1272
2312:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4000              		.loc 1 2312 3 is_stmt 0 view .LVU1273
 4001 0092 0028     		cmp	r0, #0
 4002 0094 00F0BF80 		beq	.L432
 4003 0098 DFF85CB2 		ldr	fp, .L506+28
 4004 009c C4F1010A 		rsb	r10, r4, #1
 4005 00a0 06E0     		b	.L435
 4006              	.LVL343:
 4007              	.L495:
 4008              	.LBB414:
2317:src/keys.c    **** 				break;
 4009              		.loc 1 2317 12 view .LVU1274
 4010 00a2 C0F2BA80 		blt	.L434
 4011              	.LBE414:
2312:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4012              		.loc 1 2312 16 discriminator 2 view .LVU1275
 4013 00a6 14F8010F 		ldrb	r0, [r4, #1]!	@ zero_extendqisi2
 4014              	.LVL344:
2312:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4015              		.loc 1 2312 3 discriminator 2 view .LVU1276
 4016 00aa 0028     		cmp	r0, #0
 4017 00ac 00F0BF80 		beq	.L494
 4018              	.LVL345:
 4019              	.L435:
 4020              	.LBB415:
2313:src/keys.c    **** 			const int cl = (unsigned char) Cmdline[i];
 4021              		.loc 1 2313 4 is_stmt 1 view .LVU1277
2313:src/keys.c    **** 			const int cl = (unsigned char) Cmdline[i];
 4022              		.loc 1 2313 18 is_stmt 0 view .LVU1278
 4023 00b0 FFF7FEFF 		bl	remap_chars
 4024              	.LVL346:
2317:src/keys.c    **** 				break;
 4025              		.loc 1 2317 9 is_stmt 1 view .LVU1279
 4026              	.LBE415:
2312:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4027              		.loc 1 2312 29 view .LVU1280
 4028              	.LBB416:
2314:src/keys.c    **** 			if (c > cl)
 4029              		.loc 1 2314 4 view .LVU1281
2314:src/keys.c    **** 			if (c > cl)
 4030              		.loc 1 2314 42 is_stmt 0 view .LVU1282
 4031 00b4 1BF8013F 		ldrb	r3, [fp, #1]!	@ zero_extendqisi2
 4032              	.LVL347:
2315:src/keys.c    **** 				goto set_pos;
ARM GAS  /tmp/ccy15zOt.s 			page 139


 4033              		.loc 1 2315 4 is_stmt 1 view .LVU1283
2315:src/keys.c    **** 				goto set_pos;
 4034              		.loc 1 2315 7 is_stmt 0 view .LVU1284
 4035 00b8 9842     		cmp	r0, r3
 4036 00ba 0AEB0402 		add	r2, r10, r4
 4037              	.LVL348:
2315:src/keys.c    **** 				goto set_pos;
 4038              		.loc 1 2315 7 view .LVU1285
 4039              	.LBE416:
2312:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4040              		.loc 1 2312 13 is_stmt 1 view .LVU1286
 4041              	.LBB417:
2315:src/keys.c    **** 				goto set_pos;
 4042              		.loc 1 2315 7 is_stmt 0 view .LVU1287
 4043 00be F0DD     		ble	.L495
 4044              	.LVL349:
 4045              	.L433:
2315:src/keys.c    **** 				goto set_pos;
 4046              		.loc 1 2315 7 view .LVU1288
 4047 00c0 D9F80040 		ldr	r4, [r9]
 4048              	.L413:
2315:src/keys.c    **** 				goto set_pos;
 4049              		.loc 1 2315 7 view .LVU1289
 4050              	.LBE417:
 4051              	.LBE413:
2326:src/keys.c    **** 		--pos;
 4052              		.loc 1 2326 8 is_stmt 1 view .LVU1290
 4053 00c4 002E     		cmp	r6, #0
 4054 00c6 00F0B680 		beq	.L417
2326:src/keys.c    **** 		--pos;
 4055              		.loc 1 2326 18 is_stmt 0 view .LVU1291
 4056 00ca 4DB1     		cbz	r5, .L411
 4057              	.LVL350:
 4058              	.L489:
2326:src/keys.c    **** 		--pos;
 4059              		.loc 1 2326 18 view .LVU1292
 4060 00cc 2846     		mov	r0, r5
 4061 00ce FFF7FEFF 		bl	current_catalogue
 4062              	.LVL351:
2327:src/keys.c    **** 	State.catpos = pos;
 4063              		.loc 1 2327 3 is_stmt 1 view .LVU1293
2326:src/keys.c    **** 		--pos;
 4064              		.loc 1 2326 8 view .LVU1294
 4065              	.LBB418:
 4066              	.LBI418:
2173:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 4067              		.loc 1 2173 12 view .LVU1295
 4068              	.LBB419:
2174:src/keys.c    **** }
 4069              		.loc 1 2174 2 view .LVU1296
2174:src/keys.c    **** }
 4070              		.loc 1 2174 33 is_stmt 0 view .LVU1297
 4071 00d2 00F0F000 		and	r0, r0, #240
 4072              	.LBE419:
 4073              	.LBE418:
2326:src/keys.c    **** 		--pos;
 4074              		.loc 1 2326 25 view .LVU1298
ARM GAS  /tmp/ccy15zOt.s 			page 140


 4075 00d6 F028     		cmp	r0, #240
 4076 00d8 40F0AD80 		bne	.L417
2326:src/keys.c    **** 		--pos;
 4077              		.loc 1 2326 18 view .LVU1299
 4078 00dc 013D     		subs	r5, r5, #1
 4079              	.LVL352:
2326:src/keys.c    **** 		--pos;
 4080              		.loc 1 2326 18 view .LVU1300
 4081 00de F5D1     		bne	.L489
 4082              	.LVL353:
 4083              	.L411:
2328:src/keys.c    **** 	return STATE_UNFINISHED;
 4084              		.loc 1 2328 2 is_stmt 1 view .LVU1301
2328:src/keys.c    **** 	return STATE_UNFINISHED;
 4085              		.loc 1 2328 15 is_stmt 0 view .LVU1302
 4086 00e0 B4F8DC37 		ldrh	r3, [r4, #2012]
 4087 00e4 65F34B13 		bfi	r3, r5, #5, #7
 4088 00e8 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2329:src/keys.c    **** }
 4089              		.loc 1 2329 2 is_stmt 1 view .LVU1303
2329:src/keys.c    **** }
 4090              		.loc 1 2329 9 is_stmt 0 view .LVU1304
 4091 00ec 3320     		movs	r0, #51
 4092              	.L502:
2330:src/keys.c    **** 
 4093              		.loc 1 2330 1 view .LVU1305
 4094 00ee 05B0     		add	sp, sp, #20
 4095              		.cfi_remember_state
 4096              		.cfi_def_cfa_offset 36
 4097              		@ sp needed
 4098 00f0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4099              	.LVL354:
 4100              	.L491:
 4101              		.cfi_restore_state
2187:src/keys.c    **** #ifdef DM42
 4102              		.loc 1 2187 3 is_stmt 1 view .LVU1306
 4103 00f4 431F     		subs	r3, r0, #5
 4104 00f6 1F2B     		cmp	r3, #31
 4105 00f8 2FD8     		bhi	.L394
 4106 00fa DFE803F0 		tbb	[pc, r3]
 4107              	.LVL355:
 4108              	.L396:
 4109 00fe 35       		.byte	(.L400-.L396)/2
 4110 00ff 2E       		.byte	(.L394-.L396)/2
 4111 0100 2E       		.byte	(.L394-.L396)/2
 4112 0101 2E       		.byte	(.L394-.L396)/2
 4113 0102 2E       		.byte	(.L394-.L396)/2
 4114 0103 2E       		.byte	(.L394-.L396)/2
 4115 0104 2E       		.byte	(.L394-.L396)/2
 4116 0105 35       		.byte	(.L400-.L396)/2
 4117 0106 2E       		.byte	(.L394-.L396)/2
 4118 0107 2E       		.byte	(.L394-.L396)/2
 4119 0108 2E       		.byte	(.L394-.L396)/2
 4120 0109 20       		.byte	(.L399-.L396)/2
 4121 010a 2E       		.byte	(.L394-.L396)/2
 4122 010b 64       		.byte	(.L398-.L396)/2
 4123 010c 2E       		.byte	(.L394-.L396)/2
ARM GAS  /tmp/ccy15zOt.s 			page 141


 4124 010d 2E       		.byte	(.L394-.L396)/2
 4125 010e 2E       		.byte	(.L394-.L396)/2
 4126 010f 2E       		.byte	(.L394-.L396)/2
 4127 0110 2E       		.byte	(.L394-.L396)/2
 4128 0111 6B       		.byte	(.L397-.L396)/2
 4129 0112 2E       		.byte	(.L394-.L396)/2
 4130 0113 2E       		.byte	(.L394-.L396)/2
 4131 0114 2E       		.byte	(.L394-.L396)/2
 4132 0115 2E       		.byte	(.L394-.L396)/2
 4133 0116 2E       		.byte	(.L394-.L396)/2
 4134 0117 2E       		.byte	(.L394-.L396)/2
 4135 0118 2E       		.byte	(.L394-.L396)/2
 4136 0119 2E       		.byte	(.L394-.L396)/2
 4137 011a 2E       		.byte	(.L394-.L396)/2
 4138 011b 2E       		.byte	(.L394-.L396)/2
 4139 011c 2E       		.byte	(.L394-.L396)/2
 4140 011d 27       		.byte	(.L395-.L396)/2
 4141              		.p2align 1
 4142              	.L501:
2276:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 4143              		.loc 1 2276 39 is_stmt 0 discriminator 1 view .LVU1307
 4144 011e 734A     		ldr	r2, .L506+16
 4145              	.LVL356:
2276:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 4146              		.loc 1 2276 39 discriminator 1 view .LVU1308
 4147 0120 7B69     		ldr	r3, [r7, #20]
2276:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 4148              		.loc 1 2276 21 discriminator 1 view .LVU1309
 4149 0122 1A42     		tst	r2, r3
 4150 0124 75D0     		beq	.L425
2278:src/keys.c    **** 			return STATE_UNFINISHED;
 4151              		.loc 1 2278 4 is_stmt 1 view .LVU1310
2278:src/keys.c    **** 			return STATE_UNFINISHED;
 4152              		.loc 1 2278 34 is_stmt 0 view .LVU1311
 4153 0126 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4154 0128 C3F30012 		ubfx	r2, r3, #4, #1
2278:src/keys.c    **** 			return STATE_UNFINISHED;
 4155              		.loc 1 2278 26 view .LVU1312
 4156 012c C2F10102 		rsb	r2, r2, #1
2278:src/keys.c    **** 			return STATE_UNFINISHED;
 4157              		.loc 1 2278 22 view .LVU1313
 4158 0130 62F30413 		bfi	r3, r2, #4, #1
 4159 0134 BB75     		strb	r3, [r7, #22]
 4160              	.LVL357:
 4161              	.L490:
2279:src/keys.c    **** 		}
 4162              		.loc 1 2279 4 is_stmt 1 view .LVU1314
2279:src/keys.c    **** 		}
 4163              		.loc 1 2279 11 is_stmt 0 view .LVU1315
 4164 0136 3320     		movs	r0, #51
 4165              	.L392:
2330:src/keys.c    **** 
 4166              		.loc 1 2330 1 view .LVU1316
 4167 0138 05B0     		add	sp, sp, #20
 4168              		.cfi_remember_state
 4169              		.cfi_def_cfa_offset 36
 4170              		@ sp needed
ARM GAS  /tmp/ccy15zOt.s 			page 142


 4171 013a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4172              	.LVL358:
 4173              	.L399:
 4174              		.cfi_restore_state
2216:src/keys.c    **** 		      if (--CmdLineLength > 0)
 4175              		.loc 1 2216 7 is_stmt 1 view .LVU1317
2216:src/keys.c    **** 		      if (--CmdLineLength > 0)
 4176              		.loc 1 2216 10 is_stmt 0 view .LVU1318
 4177 013e 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 4178 0140 23B1     		cbz	r3, .L395
2216:src/keys.c    **** 		      if (--CmdLineLength > 0)
 4179              		.loc 1 2216 32 discriminator 1 view .LVU1319
 4180 0142 FFF7FEFF 		bl	keyticks
 4181              	.LVL359:
2216:src/keys.c    **** 		      if (--CmdLineLength > 0)
 4182              		.loc 1 2216 29 discriminator 1 view .LVU1320
 4183 0146 1D28     		cmp	r0, #29
 4184 0148 40F39580 		ble	.L496
 4185              	.L395:
2226:src/keys.c    **** 			return STATE_UNFINISHED;
 4186              		.loc 1 2226 4 is_stmt 1 view .LVU1321
 4187 014c 0020     		movs	r0, #0
 4188 014e FFF7FEFF 		bl	init_cat
 4189              	.LVL360:
2227:src/keys.c    **** 
 4190              		.loc 1 2227 4 view .LVU1322
2227:src/keys.c    **** 
 4191              		.loc 1 2227 11 is_stmt 0 view .LVU1323
 4192 0152 3320     		movs	r0, #51
2330:src/keys.c    **** 
 4193              		.loc 1 2330 1 view .LVU1324
 4194 0154 05B0     		add	sp, sp, #20
 4195              		.cfi_remember_state
 4196              		.cfi_def_cfa_offset 36
 4197              		@ sp needed
 4198 0156 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4199              	.LVL361:
 4200              	.L394:
 4201              		.cfi_restore_state
 4202              	.LBB420:
 4203              	.LBI395:
 384:src/keys.c    **** {
 4204              		.loc 1 384 12 is_stmt 1 discriminator 4 view .LVU1325
 4205              	.LBB401:
 386:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4206              		.loc 1 386 2 discriminator 4 view .LVU1326
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4207              		.loc 1 434 2 discriminator 4 view .LVU1327
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4208              		.loc 1 434 6 is_stmt 0 discriminator 4 view .LVU1328
 4209 015a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4210              		.loc 1 434 5 discriminator 4 view .LVU1329
 4211 015c 13F0100F 		tst	r3, #16
 4212 0160 14BF     		ite	ne
 4213 0162 0421     		movne	r1, #4
 4214              	.LVL362:
ARM GAS  /tmp/ccy15zOt.s 			page 143


 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4215              		.loc 1 434 5 discriminator 4 view .LVU1330
 4216 0164 0021     		moveq	r1, #0
 4217 0166 65E7     		b	.L428
 4218              	.LVL363:
 4219              	.L400:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4220              		.loc 1 434 5 discriminator 4 view .LVU1331
 4221              	.LBE401:
 4222              	.LBE420:
2194:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 4223              		.loc 1 2194 4 is_stmt 1 view .LVU1332
2194:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 4224              		.loc 1 2194 7 is_stmt 0 view .LVU1333
 4225 0168 4545     		cmp	r5, r8
 4226 016a EFDA     		bge	.L395
 4227 016c 2846     		mov	r0, r5
 4228              	.LVL364:
2194:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 4229              		.loc 1 2194 20 discriminator 1 view .LVU1334
 4230 016e 002E     		cmp	r6, #0
 4231 0170 00F08D80 		beq	.L497
 4232              	.LVL365:
 4233              	.LBB421:
 4234              	.LBI421:
2173:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 4235              		.loc 1 2173 12 is_stmt 1 view .LVU1335
 4236              	.LBB422:
2174:src/keys.c    **** }
 4237              		.loc 1 2174 2 view .LVU1336
2174:src/keys.c    **** }
 4238              		.loc 1 2174 10 is_stmt 0 view .LVU1337
 4239 0174 FFF7FEFF 		bl	current_catalogue
 4240              	.LVL366:
2174:src/keys.c    **** }
 4241              		.loc 1 2174 33 view .LVU1338
 4242 0178 00F0F003 		and	r3, r0, #240
 4243              	.LBE422:
 4244              	.LBE421:
2194:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 4245              		.loc 1 2194 23 view .LVU1339
 4246 017c F02B     		cmp	r3, #240
 4247              	.LBB424:
 4248              	.LBB423:
2174:src/keys.c    **** }
 4249              		.loc 1 2174 10 view .LVU1340
 4250 017e 0446     		mov	r4, r0
 4251              	.LBE423:
 4252              	.LBE424:
2194:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 4253              		.loc 1 2194 23 view .LVU1341
 4254 0180 E4D0     		beq	.L395
 4255              	.L403:
 4256              	.LBB425:
2195:src/keys.c    **** 
 4257              		.loc 1 2195 5 is_stmt 1 view .LVU1342
2197:src/keys.c    **** 
ARM GAS  /tmp/ccy15zOt.s 			page 144


 4258              		.loc 1 2197 5 view .LVU1343
 4259 0182 0020     		movs	r0, #0
 4260 0184 FFF7FEFF 		bl	init_cat
 4261              	.LVL367:
2199:src/keys.c    **** 					const unsigned int rarg = RARG_CMD(op);
 4262              		.loc 1 2199 5 view .LVU1344
2199:src/keys.c    **** 					const unsigned int rarg = RARG_CMD(op);
 4263              		.loc 1 2199 8 is_stmt 0 view .LVU1345
 4264 0188 14F47043 		ands	r3, r4, #61440
 4265 018c 00F08C80 		beq	.L404
2199:src/keys.c    **** 					const unsigned int rarg = RARG_CMD(op);
 4266              		.loc 1 2199 9 discriminator 1 view .LVU1346
 4267 0190 B3F5704F 		cmp	r3, #61440
 4268 0194 00F08880 		beq	.L404
 4269              	.LBB426:
2200:src/keys.c    **** 					if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4270              		.loc 1 2200 6 is_stmt 1 view .LVU1347
2200:src/keys.c    **** 					if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4271              		.loc 1 2200 32 is_stmt 0 view .LVU1348
 4272 0198 C4F30723 		ubfx	r3, r4, #8, #8
 4273 019c A3F12005 		sub	r5, r3, #32
 4274              	.LVL368:
2200:src/keys.c    **** 					if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4275              		.loc 1 2200 32 view .LVU1349
 4276 01a0 EDB2     		uxtb	r5, r5
 4277              	.LVL369:
2201:src/keys.c    **** 						return op;
 4278              		.loc 1 2201 6 is_stmt 1 view .LVU1350
2201:src/keys.c    **** 						return op;
 4279              		.loc 1 2201 9 is_stmt 0 view .LVU1351
 4280 01a2 012D     		cmp	r5, #1
 4281 01a4 40F28980 		bls	.L405
2201:src/keys.c    **** 						return op;
 4282              		.loc 1 2201 57 discriminator 1 view .LVU1352
 4283 01a8 6C2D     		cmp	r5, #108
 4284 01aa 00F08680 		beq	.L405
2201:src/keys.c    **** 						return op;
 4285              		.loc 1 2201 78 discriminator 2 view .LVU1353
 4286 01ae 242D     		cmp	r5, #36
 4287 01b0 00F08380 		beq	.L405
2203:src/keys.c    **** 						State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4288              		.loc 1 2203 6 is_stmt 1 view .LVU1354
2203:src/keys.c    **** 						State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4289              		.loc 1 2203 31 is_stmt 0 view .LVU1355
 4290 01b4 A5F12D02 		sub	r2, r5, #45
2203:src/keys.c    **** 						State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4291              		.loc 1 2203 9 view .LVU1356
 4292 01b8 062A     		cmp	r2, #6
 4293 01ba 00F29F80 		bhi	.L408
2204:src/keys.c    **** 					else
 4294              		.loc 1 2204 7 is_stmt 1 view .LVU1357
2204:src/keys.c    **** 					else
 4295              		.loc 1 2204 28 is_stmt 0 view .LVU1358
 4296 01be 4D3B     		subs	r3, r3, #77
2204:src/keys.c    **** 					else
 4297              		.loc 1 2204 19 view .LVU1359
 4298 01c0 FB73     		strb	r3, [r7, #15]
ARM GAS  /tmp/ccy15zOt.s 			page 145


 4299              	.LBE426:
 4300              	.LBE425:
2213:src/keys.c    **** 
 4301              		.loc 1 2213 11 view .LVU1360
 4302 01c2 3320     		movs	r0, #51
 4303              	.LBB436:
 4304              	.LBB429:
 4305 01c4 B8E7     		b	.L392
 4306              	.LVL370:
 4307              	.L398:
2213:src/keys.c    **** 
 4308              		.loc 1 2213 11 view .LVU1361
 4309              	.LBE429:
 4310              	.LBE436:
2230:src/keys.c    **** 			if (pos == 0)
 4311              		.loc 1 2230 4 is_stmt 1 view .LVU1362
2230:src/keys.c    **** 			if (pos == 0)
 4312              		.loc 1 2230 18 is_stmt 0 view .LVU1363
 4313 01c6 0023     		movs	r3, #0
 4314 01c8 3B77     		strb	r3, [r7, #28]
2231:src/keys.c    **** 				goto set_max;
 4315              		.loc 1 2231 4 is_stmt 1 view .LVU1364
2231:src/keys.c    **** 				goto set_max;
 4316              		.loc 1 2231 7 is_stmt 0 view .LVU1365
 4317 01ca 002D     		cmp	r5, #0
 4318 01cc 5DD1     		bne	.L498
 4319              	.LVL371:
 4320              	.L412:
2324:src/keys.c    **** set_pos:
 4321              		.loc 1 2324 2 is_stmt 1 view .LVU1366
2324:src/keys.c    **** set_pos:
 4322              		.loc 1 2324 6 is_stmt 0 view .LVU1367
 4323 01ce 08F1FF35 		add	r5, r8, #-1
 4324              	.LVL372:
2324:src/keys.c    **** set_pos:
 4325              		.loc 1 2324 6 view .LVU1368
 4326 01d2 77E7     		b	.L413
 4327              	.LVL373:
 4328              	.L397:
2238:src/keys.c    **** 			while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 4329              		.loc 1 2238 4 is_stmt 1 view .LVU1369
2238:src/keys.c    **** 			while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 4330              		.loc 1 2238 18 is_stmt 0 view .LVU1370
 4331 01d4 0023     		movs	r3, #0
 4332 01d6 3B77     		strb	r3, [r7, #28]
2239:src/keys.c    **** 			if (pos >= ctmax)
 4333              		.loc 1 2239 4 is_stmt 1 view .LVU1371
2239:src/keys.c    **** 			if (pos >= ctmax)
 4334              		.loc 1 2239 10 is_stmt 0 view .LVU1372
 4335 01d8 06E0     		b	.L416
 4336              	.LVL374:
 4337              	.L499:
2239:src/keys.c    **** 			if (pos >= ctmax)
 4338              		.loc 1 2239 25 discriminator 1 view .LVU1373
 4339 01da 66B3     		cbz	r6, .L417
 4340              	.LBB437:
 4341              	.LBB438:
ARM GAS  /tmp/ccy15zOt.s 			page 146


2174:src/keys.c    **** }
 4342              		.loc 1 2174 10 view .LVU1374
 4343 01dc FFF7FEFF 		bl	current_catalogue
 4344              	.LVL375:
2174:src/keys.c    **** }
 4345              		.loc 1 2174 33 view .LVU1375
 4346 01e0 00F0F000 		and	r0, r0, #240
 4347              	.LBE438:
 4348              	.LBE437:
2239:src/keys.c    **** 			if (pos >= ctmax)
 4349              		.loc 1 2239 37 view .LVU1376
 4350 01e4 F028     		cmp	r0, #240
 4351 01e6 26D1     		bne	.L417
 4352              	.L416:
2239:src/keys.c    **** 			if (pos >= ctmax)
 4353              		.loc 1 2239 61 is_stmt 1 discriminator 3 view .LVU1377
2239:src/keys.c    **** 			if (pos >= ctmax)
 4354              		.loc 1 2239 10 discriminator 3 view .LVU1378
 4355 01e8 0135     		adds	r5, r5, #1
 4356              	.LVL376:
 4357              	.LBB441:
 4358              	.LBI437:
2173:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 4359              		.loc 1 2173 12 discriminator 3 view .LVU1379
 4360              	.LBB439:
2174:src/keys.c    **** }
 4361              		.loc 1 2174 2 discriminator 3 view .LVU1380
 4362              	.LBE439:
 4363              	.LBE441:
2239:src/keys.c    **** 			if (pos >= ctmax)
 4364              		.loc 1 2239 10 is_stmt 0 discriminator 3 view .LVU1381
 4365 01ea A845     		cmp	r8, r5
 4366              	.LBB442:
 4367              	.LBB440:
2174:src/keys.c    **** }
 4368              		.loc 1 2174 10 discriminator 3 view .LVU1382
 4369 01ec 2846     		mov	r0, r5
 4370              	.LBE440:
 4371              	.LBE442:
2239:src/keys.c    **** 			if (pos >= ctmax)
 4372              		.loc 1 2239 10 discriminator 3 view .LVU1383
 4373 01ee F4DC     		bgt	.L499
 4374              	.LVL377:
2326:src/keys.c    **** 		--pos;
 4375              		.loc 1 2326 8 is_stmt 1 view .LVU1384
2241:src/keys.c    **** 			goto set_pos;
 4376              		.loc 1 2241 9 is_stmt 0 view .LVU1385
 4377 01f0 3546     		mov	r5, r6
 4378              	.LVL378:
2326:src/keys.c    **** 		--pos;
 4379              		.loc 1 2326 8 view .LVU1386
 4380 01f2 06B3     		cbz	r6, .L417
 4381              	.LVL379:
2326:src/keys.c    **** 		--pos;
 4382              		.loc 1 2326 8 view .LVU1387
 4383 01f4 0025     		movs	r5, #0
 4384              	.LVL380:
ARM GAS  /tmp/ccy15zOt.s 			page 147


2326:src/keys.c    **** 		--pos;
 4385              		.loc 1 2326 8 view .LVU1388
 4386 01f6 73E7     		b	.L411
 4387              	.LVL381:
 4388              	.L442:
2299:src/keys.c    **** 		Cmdline[CmdLineLength++] = ch;
 4389              		.loc 1 2299 6 view .LVU1389
 4390 01f8 2B46     		mov	r3, r5
2300:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
 4391              		.loc 1 2300 3 is_stmt 1 view .LVU1390
2300:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
 4392              		.loc 1 2300 28 is_stmt 0 view .LVU1391
 4393 01fa 3B44     		add	r3, r3, r7
2300:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
 4394              		.loc 1 2300 24 view .LVU1392
 4395 01fc 0135     		adds	r5, r5, #1
 4396 01fe EDB2     		uxtb	r5, r5
 4397 0200 3D77     		strb	r5, [r7, #28]
2300:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
 4398              		.loc 1 2300 28 view .LVU1393
 4399 0202 83F82040 		strb	r4, [r3, #32]
 4400 0206 30E7     		b	.L410
 4401              	.LVL382:
 4402              	.L492:
2248:src/keys.c    **** 			/*
 4403              		.loc 1 2248 3 is_stmt 1 view .LVU1394
2248:src/keys.c    **** 			/*
 4404              		.loc 1 2248 6 is_stmt 0 view .LVU1395
 4405 0208 BAF1120F 		cmp	r10, #18
 4406 020c 21D0     		beq	.L500
 4407              	.L419:
2276:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 4408              		.loc 1 2276 8 is_stmt 1 view .LVU1396
2276:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 4409              		.loc 1 2276 11 is_stmt 0 view .LVU1397
 4410 020e 2428     		cmp	r0, #36
 4411 0210 85D0     		beq	.L501
 4412              	.LVL383:
 4413              	.L425:
2291:src/keys.c    **** 	reset_shift();
 4414              		.loc 1 2291 2 is_stmt 1 view .LVU1398
 4415              	.LBB443:
 384:src/keys.c    **** {
 4416              		.loc 1 384 12 view .LVU1399
 4417              	.LBB402:
 386:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4418              		.loc 1 386 2 view .LVU1400
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4419              		.loc 1 434 2 view .LVU1401
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4420              		.loc 1 434 5 is_stmt 0 view .LVU1402
 4421 0212 0121     		movs	r1, #1
 4422              	.LVL384:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4423              		.loc 1 434 5 view .LVU1403
 4424 0214 0EE7     		b	.L428
 4425              	.LVL385:
ARM GAS  /tmp/ccy15zOt.s 			page 148


 4426              	.L432:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4427              		.loc 1 434 5 view .LVU1404
 4428 0216 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 4429              	.LVL386:
 4430              	.L434:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4431              		.loc 1 434 5 view .LVU1405
 4432              	.LBE402:
 4433              	.LBE443:
 4434              	.LBB444:
2320:src/keys.c    **** 			goto set_pos;
 4435              		.loc 1 2320 3 is_stmt 1 view .LVU1406
2320:src/keys.c    **** 			goto set_pos;
 4436              		.loc 1 2320 6 is_stmt 0 view .LVU1407
 4437 021a 002B     		cmp	r3, #0
 4438 021c 3FF450AF 		beq	.L433
 4439              	.LBE444:
2305:src/keys.c    **** 		char buf[16];
 4440              		.loc 1 2305 29 is_stmt 1 view .LVU1408
 4441 0220 0135     		adds	r5, r5, #1
 4442              	.LVL387:
2305:src/keys.c    **** 		char buf[16];
 4443              		.loc 1 2305 16 view .LVU1409
2305:src/keys.c    **** 		char buf[16];
 4444              		.loc 1 2305 2 is_stmt 0 view .LVU1410
 4445 0222 A845     		cmp	r8, r5
 4446 0224 7FF429AF 		bne	.L430
 4447              	.LVL388:
 4448              	.L488:
2305:src/keys.c    **** 		char buf[16];
 4449              		.loc 1 2305 2 view .LVU1411
 4450 0228 D9F80040 		ldr	r4, [r9]
 4451 022c CFE7     		b	.L412
 4452              	.LVL389:
 4453              	.L494:
2305:src/keys.c    **** 		char buf[16];
 4454              		.loc 1 2305 2 view .LVU1412
 4455 022e 3A44     		add	r2, r2, r7
 4456              	.LVL390:
2305:src/keys.c    **** 		char buf[16];
 4457              		.loc 1 2305 2 view .LVU1413
 4458 0230 92F82030 		ldrb	r3, [r2, #32]	@ zero_extendqisi2
 4459              	.LVL391:
2305:src/keys.c    **** 		char buf[16];
 4460              		.loc 1 2305 2 view .LVU1414
 4461 0234 F1E7     		b	.L434
 4462              	.LVL392:
 4463              	.L417:
2328:src/keys.c    **** 	return STATE_UNFINISHED;
 4464              		.loc 1 2328 15 view .LVU1415
 4465 0236 B4F8DC37 		ldrh	r3, [r4, #2012]
 4466 023a 05F07F05 		and	r5, r5, #127
 4467              	.LVL393:
2328:src/keys.c    **** 	return STATE_UNFINISHED;
 4468              		.loc 1 2328 2 is_stmt 1 view .LVU1416
2328:src/keys.c    **** 	return STATE_UNFINISHED;
ARM GAS  /tmp/ccy15zOt.s 			page 149


 4469              		.loc 1 2328 15 is_stmt 0 view .LVU1417
 4470 023e 65F34B13 		bfi	r3, r5, #5, #7
 4471 0242 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2329:src/keys.c    **** }
 4472              		.loc 1 2329 2 is_stmt 1 view .LVU1418
2329:src/keys.c    **** }
 4473              		.loc 1 2329 9 is_stmt 0 view .LVU1419
 4474 0246 3320     		movs	r0, #51
 4475 0248 51E7     		b	.L502
 4476              	.LVL394:
 4477              	.L493:
2282:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
 4478              		.loc 1 2282 3 is_stmt 1 view .LVU1420
2282:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
 4479              		.loc 1 2282 6 is_stmt 0 view .LVU1421
 4480 024a 1028     		cmp	r0, #16
 4481 024c 23D0     		beq	.L503
 4482              	.L427:
2291:src/keys.c    **** 	reset_shift();
 4483              		.loc 1 2291 2 is_stmt 1 view .LVU1422
 4484              	.LVL395:
 4485              	.LBB445:
 384:src/keys.c    **** {
 4486              		.loc 1 384 12 view .LVU1423
 4487              	.LBB403:
 386:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4488              		.loc 1 386 2 view .LVU1424
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4489              		.loc 1 434 2 view .LVU1425
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4490              		.loc 1 434 5 is_stmt 0 view .LVU1426
 4491 024e 0521     		movs	r1, #5
 4492              	.LVL396:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4493              		.loc 1 434 5 view .LVU1427
 4494 0250 F0E6     		b	.L428
 4495              	.LVL397:
 4496              	.L500:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 4497              		.loc 1 434 5 view .LVU1428
 4498              	.LBE403:
 4499              	.LBE445:
2248:src/keys.c    **** 			/*
 4500              		.loc 1 2248 29 discriminator 1 view .LVU1429
 4501 0252 0128     		cmp	r0, #1
 4502 0254 DBD1     		bne	.L419
 4503              	.LBB446:
2257:src/keys.c    **** 				OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
 4504              		.loc 1 2257 4 is_stmt 1 view .LVU1430
2265:src/keys.c    **** 			int i;
 4505              		.loc 1 2265 4 view .LVU1431
2265:src/keys.c    **** 			int i;
 4506              		.loc 1 2265 22 is_stmt 0 view .LVU1432
 4507 0256 2846     		mov	r0, r5
 4508              	.LVL398:
2265:src/keys.c    **** 			int i;
 4509              		.loc 1 2265 22 view .LVU1433
ARM GAS  /tmp/ccy15zOt.s 			page 150


 4510 0258 FFF7FEFF 		bl	current_catalogue
 4511              	.LVL399:
2265:src/keys.c    **** 			int i;
 4512              		.loc 1 2265 22 view .LVU1434
 4513 025c 0446     		mov	r4, r0
 4514              	.LVL400:
2266:src/keys.c    **** 
 4515              		.loc 1 2266 4 is_stmt 1 view .LVU1435
2268:src/keys.c    **** 			if (isRARG(op))
 4516              		.loc 1 2268 4 view .LVU1436
 4517 025e 0020     		movs	r0, #0
 4518              	.LVL401:
2268:src/keys.c    **** 			if (isRARG(op))
 4519              		.loc 1 2268 4 is_stmt 0 view .LVU1437
 4520 0260 FFF7FEFF 		bl	init_cat
 4521              	.LVL402:
2269:src/keys.c    **** 				return op ^ 1;
 4522              		.loc 1 2269 4 is_stmt 1 view .LVU1438
2269:src/keys.c    **** 				return op ^ 1;
 4523              		.loc 1 2269 7 is_stmt 0 view .LVU1439
 4524 0264 14F47043 		ands	r3, r4, #61440
 4525 0268 29D0     		beq	.L420
2269:src/keys.c    **** 				return op ^ 1;
 4526              		.loc 1 2269 8 discriminator 1 view .LVU1440
 4527 026a B3F5704F 		cmp	r3, #61440
 4528 026e 26D0     		beq	.L420
2270:src/keys.c    **** 			for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 4529              		.loc 1 2270 5 is_stmt 1 view .LVU1441
2270:src/keys.c    **** 			for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 4530              		.loc 1 2270 15 is_stmt 0 view .LVU1442
 4531 0270 84F00100 		eor	r0, r4, #1
 4532 0274 60E7     		b	.L392
 4533              	.LVL403:
 4534              	.L496:
2270:src/keys.c    **** 			for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 4535              		.loc 1 2270 15 view .LVU1443
 4536              	.LBE446:
2217:src/keys.c    **** 					goto search;
 4537              		.loc 1 2217 9 is_stmt 1 view .LVU1444
2217:src/keys.c    **** 					goto search;
 4538              		.loc 1 2217 13 is_stmt 0 view .LVU1445
 4539 0276 3D7F     		ldrb	r5, [r7, #28]	@ zero_extendqisi2
 4540              	.LVL404:
2217:src/keys.c    **** 					goto search;
 4541              		.loc 1 2217 13 view .LVU1446
 4542 0278 013D     		subs	r5, r5, #1
 4543 027a EDB2     		uxtb	r5, r5
2217:src/keys.c    **** 					goto search;
 4544              		.loc 1 2217 12 view .LVU1447
 4545 027c 3D77     		strb	r5, [r7, #28]
 4546 027e 002D     		cmp	r5, #0
 4547 0280 7FF4F3AE 		bne	.L410
 4548 0284 D9F80040 		ldr	r4, [r9]
 4549 0288 2AE7     		b	.L411
 4550              	.LVL405:
 4551              	.L498:
2234:src/keys.c    **** 			goto set_pos;
ARM GAS  /tmp/ccy15zOt.s 			page 151


 4552              		.loc 1 2234 5 is_stmt 1 view .LVU1448
 4553 028a 013D     		subs	r5, r5, #1
 4554              	.LVL406:
2235:src/keys.c    **** 
 4555              		.loc 1 2235 4 view .LVU1449
 4556 028c 1AE7     		b	.L413
 4557              	.LVL407:
 4558              	.L497:
2235:src/keys.c    **** 
 4559              		.loc 1 2235 4 is_stmt 0 view .LVU1450
 4560 028e FFF7FEFF 		bl	current_catalogue
 4561              	.LVL408:
2235:src/keys.c    **** 
 4562              		.loc 1 2235 4 view .LVU1451
 4563 0292 0446     		mov	r4, r0
 4564 0294 75E7     		b	.L403
 4565              	.LVL409:
 4566              	.L503:
2282:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
 4567              		.loc 1 2282 16 discriminator 1 view .LVU1452
 4568 0296 BAF1130F 		cmp	r10, #19
 4569 029a D8D1     		bne	.L427
2283:src/keys.c    **** 			return OP_NIL | OP_SIGMACLEAR;
 4570              		.loc 1 2283 4 is_stmt 1 view .LVU1453
 4571 029c 0020     		movs	r0, #0
 4572              	.LVL410:
2283:src/keys.c    **** 			return OP_NIL | OP_SIGMACLEAR;
 4573              		.loc 1 2283 4 is_stmt 0 view .LVU1454
 4574 029e FFF7FEFF 		bl	init_cat
 4575              	.LVL411:
2284:src/keys.c    **** 		}
 4576              		.loc 1 2284 4 is_stmt 1 view .LVU1455
2284:src/keys.c    **** 		}
 4577              		.loc 1 2284 11 is_stmt 0 view .LVU1456
 4578 02a2 40F23D10 		movw	r0, #317
 4579 02a6 47E7     		b	.L392
 4580              	.L404:
 4581              	.LBB447:
2209:src/keys.c    **** 				}
 4582              		.loc 1 2209 6 is_stmt 1 view .LVU1457
 4583              	.LBB430:
 4584              	.LBB431:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 4585              		.loc 1 620 5 is_stmt 0 view .LVU1458
 4586 02a8 C4F30723 		ubfx	r3, r4, #8, #8
 4587 02ac 012B     		cmp	r3, #1
 4588              	.LBE431:
 4589              	.LBE430:
2209:src/keys.c    **** 				}
 4590              		.loc 1 2209 13 view .LVU1459
 4591 02ae 2046     		mov	r0, r4
 4592              	.LVL412:
 4593              	.LBB433:
 4594              	.LBI430:
 619:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 4595              		.loc 1 619 12 is_stmt 1 view .LVU1460
 4596              	.LBB432:
ARM GAS  /tmp/ccy15zOt.s 			page 152


 620:src/keys.c    **** 		const int nilop = argKIND(op);
 4597              		.loc 1 620 2 view .LVU1461
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 4598              		.loc 1 620 5 is_stmt 0 view .LVU1462
 4599 02b0 7FF442AF 		bne	.L392
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 4600              		.loc 1 620 5 view .LVU1463
 4601 02b4 FFF7FEFF 		bl	check_confirm.part.0
 4602              	.LVL413:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 4603              		.loc 1 620 5 view .LVU1464
 4604 02b8 3EE7     		b	.L392
 4605              	.LVL414:
 4606              	.L405:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 4607              		.loc 1 620 5 view .LVU1465
 4608              	.LBE432:
 4609              	.LBE433:
 4610              	.LBB434:
2202:src/keys.c    **** 					if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4611              		.loc 1 2202 7 is_stmt 1 view .LVU1466
2202:src/keys.c    **** 					if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4612              		.loc 1 2202 14 is_stmt 0 view .LVU1467
 4613 02ba 2046     		mov	r0, r4
 4614 02bc 3CE7     		b	.L392
 4615              	.LVL415:
 4616              	.L420:
2202:src/keys.c    **** 					if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4617              		.loc 1 2202 14 view .LVU1468
 4618 02be 0C48     		ldr	r0, .L506+20
 4619              	.LBE434:
 4620              	.LBE447:
2180:src/keys.c    **** 	int pos = State.catpos;
 4621              		.loc 1 2180 92 view .LVU1469
 4622 02c0 40F28522 		movw	r2, #645
 4623 02c4 0146     		mov	r1, r0
 4624 02c6 0023     		movs	r3, #0
 4625 02c8 01E0     		b	.L422
 4626              	.LVL416:
 4627              	.L505:
2180:src/keys.c    **** 	int pos = State.catpos;
 4628              		.loc 1 2180 92 view .LVU1470
 4629 02ca 31F8022F 		ldrh	r2, [r1, #2]!
 4630              	.LVL417:
 4631              	.L422:
 4632              	.LBB448:
2272:src/keys.c    **** 					return conv_mapping[i^1];
 4633              		.loc 1 2272 5 is_stmt 1 view .LVU1471
2271:src/keys.c    **** 				if (op == conv_mapping[i])
 4634              		.loc 1 2271 68 view .LVU1472
2272:src/keys.c    **** 					return conv_mapping[i^1];
 4635              		.loc 1 2272 8 is_stmt 0 view .LVU1473
 4636 02ce A242     		cmp	r2, r4
 4637 02d0 1ED0     		beq	.L504
2271:src/keys.c    **** 				if (op == conv_mapping[i])
 4638              		.loc 1 2271 68 discriminator 2 view .LVU1474
 4639 02d2 0133     		adds	r3, r3, #1
ARM GAS  /tmp/ccy15zOt.s 			page 153


 4640              	.LVL418:
2271:src/keys.c    **** 				if (op == conv_mapping[i])
 4641              		.loc 1 2271 16 is_stmt 1 discriminator 2 view .LVU1475
2271:src/keys.c    **** 				if (op == conv_mapping[i])
 4642              		.loc 1 2271 4 is_stmt 0 discriminator 2 view .LVU1476
 4643 02d4 0C2B     		cmp	r3, #12
 4644 02d6 F8D1     		bne	.L505
 4645 02d8 2DE7     		b	.L490
 4646              	.L507:
 4647 02da 00BF     		.align	2
 4648              	.L506:
 4649 02dc 00000000 		.word	StateWhileOn
 4650 02e0 00000000 		.word	.LANCHOR2
 4651 02e4 00000000 		.word	.LANCHOR1
 4652 02e8 00000000 		.word	.LANCHOR9
 4653 02ec 00080800 		.word	526336
 4654 02f0 00000000 		.word	.LANCHOR8
 4655 02f4 00000000 		.word	main_ram
 4656 02f8 1F000000 		.word	StateWhileOn+31
 4657              	.LVL419:
 4658              	.L408:
2271:src/keys.c    **** 				if (op == conv_mapping[i])
 4659              		.loc 1 2271 4 discriminator 2 view .LVU1477
 4660              	.LBE448:
 4661              	.LBB449:
 4662              	.LBB435:
2206:src/keys.c    **** 				}
 4663              		.loc 1 2206 7 is_stmt 1 view .LVU1478
 4664              	.LBB427:
 4665              	.LBI427:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 4666              		.loc 1 501 13 view .LVU1479
 4667              	.LBB428:
 502:src/keys.c    **** 		return;
 4668              		.loc 1 502 2 view .LVU1480
 502:src/keys.c    **** 		return;
 4669              		.loc 1 502 6 is_stmt 0 view .LVU1481
 4670 02fc FFF7FEFF 		bl	is_bad_cmdline
 4671              	.LVL420:
 502:src/keys.c    **** 		return;
 4672              		.loc 1 502 5 view .LVU1482
 4673 0300 0028     		cmp	r0, #0
 4674 0302 7FF418AF 		bne	.L490
 4675 0306 2846     		mov	r0, r5
 4676 0308 FFF7FEFF 		bl	init_arg.part.0
 4677              	.LVL421:
 4678              	.LBE428:
 4679              	.LBE427:
 4680              	.LBE435:
 4681              	.LBE449:
2213:src/keys.c    **** 
 4682              		.loc 1 2213 11 view .LVU1483
 4683 030c 3320     		movs	r0, #51
 4684 030e 13E7     		b	.L392
 4685              	.LVL422:
 4686              	.L504:
 4687              	.LBB450:
ARM GAS  /tmp/ccy15zOt.s 			page 154


2273:src/keys.c    **** 			return STATE_UNFINISHED;		// Unreached
 4688              		.loc 1 2273 6 is_stmt 1 view .LVU1484
2273:src/keys.c    **** 			return STATE_UNFINISHED;		// Unreached
 4689              		.loc 1 2273 27 is_stmt 0 view .LVU1485
 4690 0310 83F00103 		eor	r3, r3, #1
 4691              	.LVL423:
2273:src/keys.c    **** 			return STATE_UNFINISHED;		// Unreached
 4692              		.loc 1 2273 25 view .LVU1486
 4693 0314 30F81300 		ldrh	r0, [r0, r3, lsl #1]
 4694 0318 0EE7     		b	.L392
 4695              	.LBE450:
 4696              		.cfi_endproc
 4697              	.LFE43:
 4699              		.section	.text.find_pos,"ax",%progbits
 4700              		.align	1
 4701              		.p2align 2,,3
 4702              		.global	find_pos
 4703              		.syntax unified
 4704              		.thumb
 4705              		.thumb_func
 4706              		.fpu fpv4-sp-d16
 4708              	find_pos:
 4709              	.LVL424:
 4710              	.LFB44:
2333:src/keys.c    **** 	int pos;
 4711              		.loc 1 2333 32 is_stmt 1 view -0
 4712              		.cfi_startproc
 4713              		@ args = 0, pretend = 0, frame = 16
 4714              		@ frame_needed = 0, uses_anonymous_args = 0
2334:src/keys.c    **** 	const int ctmax = current_catalogue_max();
 4715              		.loc 1 2334 2 view .LVU1488
2335:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 4716              		.loc 1 2335 2 view .LVU1489
 4717              	.LBB451:
 4718              	.LBI451:
2035:src/keys.c    **** 	// A quick table of catalogue sizes
 4719              		.loc 1 2035 5 view .LVU1490
 4720              	.LBB452:
2038:src/keys.c    **** 	{
 4721              		.loc 1 2038 2 view .LVU1491
2069:src/keys.c    **** #endif
 4722              		.loc 1 2069 2 view .LVU1492
 4723              	.LBE452:
 4724              	.LBE451:
2333:src/keys.c    **** 	int pos;
 4725              		.loc 1 2333 32 is_stmt 0 view .LVU1493
 4726 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 4727              		.cfi_def_cfa_offset 32
 4728              		.cfi_offset 4, -32
 4729              		.cfi_offset 5, -28
 4730              		.cfi_offset 6, -24
 4731              		.cfi_offset 7, -20
 4732              		.cfi_offset 8, -16
 4733              		.cfi_offset 9, -12
 4734              		.cfi_offset 10, -8
 4735              		.cfi_offset 14, -4
 4736              	.LBB454:
ARM GAS  /tmp/ccy15zOt.s 			page 155


 4737              	.LBB453:
2069:src/keys.c    **** #endif
 4738              		.loc 1 2069 31 view .LVU1494
 4739 0004 1E4B     		ldr	r3, .L525
2069:src/keys.c    **** #endif
 4740              		.loc 1 2069 24 view .LVU1495
 4741 0006 1F4A     		ldr	r2, .L525+4
2069:src/keys.c    **** #endif
 4742              		.loc 1 2069 31 view .LVU1496
 4743 0008 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2069:src/keys.c    **** #endif
 4744              		.loc 1 2069 24 view .LVU1497
 4745 000a 12F803A0 		ldrb	r10, [r2, r3]	@ zero_extendqisi2
 4746              	.LVL425:
2069:src/keys.c    **** #endif
 4747              		.loc 1 2069 24 view .LVU1498
 4748              	.LBE453:
 4749              	.LBE454:
2336:src/keys.c    **** 		char buf[16];
 4750              		.loc 1 2336 2 is_stmt 1 view .LVU1499
2336:src/keys.c    **** 		char buf[16];
 4751              		.loc 1 2336 16 view .LVU1500
2333:src/keys.c    **** 	int pos;
 4752              		.loc 1 2333 32 is_stmt 0 view .LVU1501
 4753 000e 84B0     		sub	sp, sp, #16
 4754              		.cfi_def_cfa_offset 48
2336:src/keys.c    **** 		char buf[16];
 4755              		.loc 1 2336 2 view .LVU1502
 4756 0010 BAF1000F 		cmp	r10, #0
 4757 0014 32D0     		beq	.L515
 4758 0016 8146     		mov	r9, r0
2336:src/keys.c    **** 		char buf[16];
 4759              		.loc 1 2336 11 view .LVU1503
 4760 0018 4FF00008 		mov	r8, #0
 4761 001c C0F10107 		rsb	r7, r0, #1
 4762              	.LVL426:
 4763              	.L514:
 4764              	.LBB455:
2337:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
 4765              		.loc 1 2337 3 is_stmt 1 view .LVU1504
2338:src/keys.c    **** 		int i;
 4766              		.loc 1 2338 3 view .LVU1505
2338:src/keys.c    **** 		int i;
 4767              		.loc 1 2338 21 is_stmt 0 view .LVU1506
 4768 0020 4046     		mov	r0, r8
 4769 0022 FFF7FEFF 		bl	current_catalogue
 4770              	.LVL427:
 4771 0026 6946     		mov	r1, sp
 4772 0028 FFF7FEFF 		bl	catcmd
 4773              	.LVL428:
 4774 002c 0646     		mov	r6, r0
 4775              	.LVL429:
2339:src/keys.c    **** 
 4776              		.loc 1 2339 3 is_stmt 1 view .LVU1507
2341:src/keys.c    **** 			cmd++;
 4777              		.loc 1 2341 3 view .LVU1508
2342:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
ARM GAS  /tmp/ccy15zOt.s 			page 156


 4778              		.loc 1 2342 4 view .LVU1509
2341:src/keys.c    **** 			cmd++;
 4779              		.loc 1 2341 7 is_stmt 0 view .LVU1510
 4780 002e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4781              	.LVL430:
2341:src/keys.c    **** 			cmd++;
 4782              		.loc 1 2341 6 view .LVU1511
 4783 0030 1428     		cmp	r0, #20
 4784 0032 04BF     		itt	eq
 4785 0034 7078     		ldrbeq	r0, [r6, #1]	@ zero_extendqisi2
2342:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 4786              		.loc 1 2342 7 view .LVU1512
 4787 0036 0136     		addeq	r6, r6, #1
 4788              	.LVL431:
2343:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4789              		.loc 1 2343 3 is_stmt 1 view .LVU1513
2343:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4790              		.loc 1 2343 13 view .LVU1514
2343:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4791              		.loc 1 2343 3 is_stmt 0 view .LVU1515
 4792 0038 A8B1     		cbz	r0, .L516
 4793 003a 09F1FF33 		add	r3, r9, #-1
 4794 003e 04E0     		b	.L513
 4795              	.LVL432:
 4796              	.L524:
 4797              	.LBB456:
2348:src/keys.c    **** 				break;
 4798              		.loc 1 2348 12 view .LVU1516
 4799 0040 12DB     		blt	.L511
 4800              	.LBE456:
2343:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4801              		.loc 1 2343 16 discriminator 2 view .LVU1517
 4802 0042 16F8010F 		ldrb	r0, [r6, #1]!	@ zero_extendqisi2
 4803              	.LVL433:
2343:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4804              		.loc 1 2343 16 discriminator 2 view .LVU1518
 4805 0046 3C44     		add	r4, r4, r7
2343:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4806              		.loc 1 2343 3 discriminator 2 view .LVU1519
 4807 0048 B0B1     		cbz	r0, .L523
 4808              	.LVL434:
 4809              	.L513:
 4810              	.LBB457:
2344:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 4811              		.loc 1 2344 4 is_stmt 1 view .LVU1520
 4812 004a 5C1C     		adds	r4, r3, #1
2344:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 4813              		.loc 1 2344 18 is_stmt 0 view .LVU1521
 4814 004c FFF7FEFF 		bl	remap_chars
 4815              	.LVL435:
 4816 0050 0546     		mov	r5, r0
2345:src/keys.c    **** 			if (c > cl)
 4817              		.loc 1 2345 19 view .LVU1522
 4818 0052 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 4819              	.LVL436:
2345:src/keys.c    **** 			if (c > cl)
 4820              		.loc 1 2345 4 is_stmt 1 view .LVU1523
ARM GAS  /tmp/ccy15zOt.s 			page 157


2345:src/keys.c    **** 			if (c > cl)
 4821              		.loc 1 2345 19 is_stmt 0 view .LVU1524
 4822 0054 FFF7FEFF 		bl	remap_chars
 4823              	.LVL437:
2348:src/keys.c    **** 				break;
 4824              		.loc 1 2348 9 is_stmt 1 view .LVU1525
 4825              	.LBE457:
2343:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4826              		.loc 1 2343 29 view .LVU1526
2343:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4827              		.loc 1 2343 13 view .LVU1527
 4828              	.LBB458:
2346:src/keys.c    **** 				return pos;
 4829              		.loc 1 2346 4 view .LVU1528
2346:src/keys.c    **** 				return pos;
 4830              		.loc 1 2346 7 is_stmt 0 view .LVU1529
 4831 0058 8542     		cmp	r5, r0
 4832 005a 2346     		mov	r3, r4
 4833 005c F0DD     		ble	.L524
 4834              	.LVL438:
 4835              	.L508:
2346:src/keys.c    **** 				return pos;
 4836              		.loc 1 2346 7 view .LVU1530
 4837              	.LBE458:
 4838              	.LBE455:
2355:src/keys.c    **** 
 4839              		.loc 1 2355 1 view .LVU1531
 4840 005e 4046     		mov	r0, r8
 4841 0060 04B0     		add	sp, sp, #16
 4842              		.cfi_remember_state
 4843              		.cfi_def_cfa_offset 32
 4844              		@ sp needed
 4845 0062 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4846              	.LVL439:
 4847              	.L516:
 4848              		.cfi_restore_state
 4849              	.LBB459:
2343:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4850              		.loc 1 2343 3 view .LVU1532
 4851 0066 4C46     		mov	r4, r9
 4852              	.LVL440:
 4853              	.L511:
2351:src/keys.c    **** 			return pos;
 4854              		.loc 1 2351 3 is_stmt 1 view .LVU1533
2351:src/keys.c    **** 			return pos;
 4855              		.loc 1 2351 6 is_stmt 0 view .LVU1534
 4856 0068 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4857 006a 002B     		cmp	r3, #0
 4858 006c F7D0     		beq	.L508
 4859              	.LBE459:
2336:src/keys.c    **** 		char buf[16];
 4860              		.loc 1 2336 29 is_stmt 1 view .LVU1535
 4861 006e 08F10108 		add	r8, r8, #1
 4862              	.LVL441:
2336:src/keys.c    **** 		char buf[16];
 4863              		.loc 1 2336 16 view .LVU1536
2336:src/keys.c    **** 		char buf[16];
ARM GAS  /tmp/ccy15zOt.s 			page 158


 4864              		.loc 1 2336 2 is_stmt 0 view .LVU1537
 4865 0072 D045     		cmp	r8, r10
 4866 0074 D4D1     		bne	.L514
 4867 0076 F2E7     		b	.L508
 4868              	.LVL442:
 4869              	.L523:
2336:src/keys.c    **** 		char buf[16];
 4870              		.loc 1 2336 2 view .LVU1538
 4871 0078 4C44     		add	r4, r4, r9
 4872 007a F5E7     		b	.L511
 4873              	.LVL443:
 4874              	.L515:
2336:src/keys.c    **** 		char buf[16];
 4875              		.loc 1 2336 11 view .LVU1539
 4876 007c D046     		mov	r8, r10
 4877 007e EEE7     		b	.L508
 4878              	.L526:
 4879              		.align	2
 4880              	.L525:
 4881 0080 00000000 		.word	StateWhileOn
 4882 0084 00000000 		.word	.LANCHOR2
 4883              		.cfi_endproc
 4884              	.LFE44:
 4886              		.section	.text.get_alpha_state,"ax",%progbits
 4887              		.align	1
 4888              		.p2align 2,,3
 4889              		.global	get_alpha_state
 4890              		.syntax unified
 4891              		.thumb
 4892              		.thumb_func
 4893              		.fpu fpv4-sp-d16
 4895              	get_alpha_state:
 4896              	.LFB56:
2680:src/keys.c    **** 
2681:src/keys.c    **** 
2682:src/keys.c    **** static int process_registerlist(const keycode c) {
2683:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
2684:src/keys.c    **** 	enum shifts shift = reset_shift();
2685:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
2686:src/keys.c    **** 	const int g_max = global_regs();
2687:src/keys.c    **** 
2688:src/keys.c    **** 	if (n == LOCAL_REG_BASE) {	// '.'
2689:src/keys.c    **** 		if (local_regs())
2690:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
2691:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
2692:src/keys.c    **** 		goto reset_window;
2693:src/keys.c    **** 	}
2694:src/keys.c    **** 	else if (n <= 9) {
2695:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
2696:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
2697:src/keys.c    **** 			dv = n;
2698:src/keys.c    **** 		State2.digval = dv;
2699:src/keys.c    **** 		goto reset_window;
2700:src/keys.c    **** 	}
2701:src/keys.c    **** 	else if ((shift == SHIFT_F || shift == SHIFT_G) && c == K21) {  // <( )>
2702:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
2703:src/keys.c    **** 		set_smode(SDISP_SHOW);
ARM GAS  /tmp/ccy15zOt.s 			page 159


2704:src/keys.c    **** 	}
2705:src/keys.c    **** 	else if (n != NO_REG) {
2706:src/keys.c    **** 		State2.digval = n;
2707:src/keys.c    **** 		goto reset_window;
2708:src/keys.c    **** 	}
2709:src/keys.c    **** 
2710:src/keys.c    **** 	switch (c) {
2711:src/keys.c    **** 	case K_DOWN:
2712:src/keys.c    **** 		if (State2.digval > 0) {
2713:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
2714:src/keys.c    **** 				State2.digval = global_regs();
2715:src/keys.c    **** 			--State2.digval;
2716:src/keys.c    **** 		}
2717:src/keys.c    **** 		else
2718:src/keys.c    **** 			State2.digval = max - 1;
2719:src/keys.c    **** 		goto reset_window;
2720:src/keys.c    **** 
2721:src/keys.c    **** 	case K_UP:
2722:src/keys.c    **** 		if (State2.digval < max - 1) {
2723:src/keys.c    **** 			State2.digval++;
2724:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
2725:src/keys.c    **** 				State2.digval = regX_idx;
2726:src/keys.c    **** 		}
2727:src/keys.c    **** 		else	
2728:src/keys.c    **** 			State2.digval = 0;
2729:src/keys.c    **** 		goto reset_window;
2730:src/keys.c    **** 
2731:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
2732:src/keys.c    **** 	case K04:
2733:src/keys.c    **** 		State2.digval2 = ! State2.digval2 && ! State2.local;
2734:src/keys.c    **** 		goto reset_window;
2735:src/keys.c    **** #endif
2736:src/keys.c    **** 
2737:src/keys.c    **** 	case K24:			
2738:src/keys.c    **** 	//case K60:
2739:src/keys.c    **** 		if (State2.disp_temp)
2740:src/keys.c    **** 			return STATE_UNFINISHED;
2741:src/keys.c    **** 		break;		// Exit doing nothing
2742:src/keys.c    **** 
2743:src/keys.c    **** 	case K20:		// ENTER
2744:src/keys.c    **** 		if (shift == SHIFT_F) {
2745:src/keys.c    **** 			State2.disp_as_alpha = 1;
2746:src/keys.c    **** 			goto reset_window;
2747:src/keys.c    **** 		}
2748:src/keys.c    **** 	case K11:		// RCL
2749:src/keys.c    **** 		if ( shift == SHIFT_N ) {
2750:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
2751:src/keys.c    **** 			n = RARG( State2.digval2 ? RARG_FLRCL : RARG_RCL, State2.digval );
2752:src/keys.c    **** #else
2753:src/keys.c    **** 			n = RARG( RARG_RCL, State2.digval );
2754:src/keys.c    **** #endif
2755:src/keys.c    **** 			State2.registerlist = 0;
2756:src/keys.c    **** 			State2.digval = 0;
2757:src/keys.c    **** 			State2.digval2 = 0;
2758:src/keys.c    **** 			return n;
2759:src/keys.c    **** 		}
2760:src/keys.c    **** 	default:
ARM GAS  /tmp/ccy15zOt.s 			page 160


2761:src/keys.c    **** 		return STATE_UNFINISHED;
2762:src/keys.c    **** 	}
2763:src/keys.c    **** 	State2.registerlist = 0;
2764:src/keys.c    **** 	State2.digval = 0;
2765:src/keys.c    **** 	State2.digval2 = 0;
2766:src/keys.c    **** reset_window:
2767:src/keys.c    **** 	State2.window = 0;
2768:src/keys.c    **** 	return STATE_UNFINISHED;
2769:src/keys.c    **** }
2770:src/keys.c    **** 
2771:src/keys.c    **** 
2772:src/keys.c    **** static int process(const int c) {
2773:src/keys.c    ****   const enum shifts shift = cur_shift();
2774:src/keys.c    ****   enum catalogues cat;
2775:src/keys.c    **** 
2776:src/keys.c    ****   if (Running || Pause) {
2777:src/keys.c    ****     /*
2778:src/keys.c    ****      *  Abort a running program with R/S or EXIT
2779:src/keys.c    ****      */
2780:src/keys.c    ****     if (c == K60 || c == K63) {
2781:src/keys.c    ****       if (Pause && isXROM(state_pc()))
2782:src/keys.c    **** 	set_pc(0);
2783:src/keys.c    ****       Pause = 0;
2784:src/keys.c    ****       xeq_xrom();
2785:src/keys.c    ****       set_running_off();
2786:src/keys.c    ****       DispMsg = "Stopped";
2787:src/keys.c    ****       State2.disp_freeze = 0;
2788:src/keys.c    ****       return STATE_UNFINISHED;
2789:src/keys.c    ****     }
2790:src/keys.c    ****     if ( c != K_HEARTBEAT ) {
2791:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
2792:src/keys.c    ****       Pause = 0;			// leave PSE statement
2793:src/keys.c    ****       GoFast = 1;
2794:src/keys.c    ****     }
2795:src/keys.c    ****     // continue execution if really running, else ignore (PSE)
2796:src/keys.c    ****     return STATE_RUNNING;
2797:src/keys.c    ****   }
2798:src/keys.c    **** 
2799:src/keys.c    ****   /* Check for ON in the unshifted state -- this is a reset sequence
2800:src/keys.c    ****    * common across all modes.  Shifted modes need to check this themselves
2801:src/keys.c    ****    * if required.
2802:src/keys.c    ****    */
2803:src/keys.c    **** #ifdef DM42
2804:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue && ! State2.arrow)
2805:src/keys.c    **** #else
2806:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue)
2807:src/keys.c    **** #endif
2808:src/keys.c    ****     {
2809:src/keys.c    ****       soft_init_state();
2810:src/keys.c    ****       return STATE_UNFINISHED;
2811:src/keys.c    ****     }
2812:src/keys.c    **** 
2813:src/keys.c    **** #ifndef CONSOLE
2814:src/keys.c    **** 	if (c == K63 && JustStopped) {
2815:src/keys.c    **** 		// Avoid an accidental restart with R/S
2816:src/keys.c    **** 		JustStopped = 0;
2817:src/keys.c    **** 		return STATE_IGNORE;
ARM GAS  /tmp/ccy15zOt.s 			page 161


2818:src/keys.c    **** 	}
2819:src/keys.c    **** #endif
2820:src/keys.c    **** 	/*  Handle the keyboard timeout for catalogue navigation
2821:src/keys.c    **** 	 *  Must be done early in the process to capture the shifts correctly
2822:src/keys.c    **** 	 */
2823:src/keys.c    **** 	if (State2.catalogue && Keyticks > 30)
2824:src/keys.c    **** 		CmdLineLength = 0;
2825:src/keys.c    **** 	/*
2826:src/keys.c    **** 	 *  Process the various cases
2827:src/keys.c    **** 	 *  The handlers in this block here do not handle shifts at all or do it themselves
2828:src/keys.c    **** 	 */
2829:src/keys.c    **** 	if (State2.confirm)
2830:src/keys.c    **** 		return process_confirm((const keycode)c);
2831:src/keys.c    **** 
2832:src/keys.c    **** 	if (State2.rarg)
2833:src/keys.c    **** 		return process_arg((const keycode)c);
2834:src/keys.c    **** 
2835:src/keys.c    **** 	if (State2.gtodot)
2836:src/keys.c    **** 		return process_gtodot((const keycode)c);
2837:src/keys.c    **** 
2838:src/keys.c    **** 	if (State2.hyp)
2839:src/keys.c    **** 		return process_hyp((const keycode)c);
2840:src/keys.c    **** 
2841:src/keys.c    **** 	if (State2.test != TST_NONE)
2842:src/keys.c    **** 		return process_test((const keycode)c);
2843:src/keys.c    **** 
2844:src/keys.c    **** 	if (State2.status)
2845:src/keys.c    **** 		return process_status((const keycode)c);
2846:src/keys.c    **** 
2847:src/keys.c    **** 	/*
2848:src/keys.c    **** 	 *  Process shift keys directly
2849:src/keys.c    **** 	 */
2850:src/keys.c    **** 	if (c == K_F) {
2851:src/keys.c    **** 		toggle_shift(SHIFT_F);
2852:src/keys.c    **** 		return STATE_UNFINISHED;
2853:src/keys.c    **** 	}
2854:src/keys.c    **** 	if (c == K_G) {
2855:src/keys.c    **** 		toggle_shift(SHIFT_G);
2856:src/keys.c    **** 		return STATE_UNFINISHED;
2857:src/keys.c    **** 	}
2858:src/keys.c    **** 	if (c == K_H) {
2859:src/keys.c    **** 		toggle_shift(SHIFT_H);
2860:src/keys.c    **** 		State2.arrow = 0;
2861:src/keys.c    **** 		return STATE_UNFINISHED;
2862:src/keys.c    **** 	}
2863:src/keys.c    **** 	/*
2864:src/keys.c    **** 	 *  The handlers in this block need to call reset_shift somewhere
2865:src/keys.c    **** 	 */
2866:src/keys.c    **** 	// print_debug (2, c);
2867:src/keys.c    **** 	if (State2.arrow)
2868:src/keys.c    **** 		return process_arrow((const keycode)c);
2869:src/keys.c    **** 
2870:src/keys.c    **** 	/*
2871:src/keys.c    **** 	 * Here the keys are mapped to catalogues
2872:src/keys.c    **** 	 * The position of this code decides where catalogue switching
2873:src/keys.c    **** 	 * works and were not
2874:src/keys.c    **** 	 */
ARM GAS  /tmp/ccy15zOt.s 			page 162


2875:src/keys.c    **** 	cat = keycode_to_cat((keycode)c, shift);
2876:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
2877:src/keys.c    **** 		if (is_bad_cmdline())
2878:src/keys.c    **** 			return STATE_UNFINISHED;
2879:src/keys.c    **** 		init_cat( CATALOGUE_NONE );
2880:src/keys.c    **** 		init_cat( cat );
2881:src/keys.c    **** 		return STATE_UNFINISHED;
2882:src/keys.c    **** 	}
2883:src/keys.c    **** 
2884:src/keys.c    **** 	/*
2885:src/keys.c    **** 	 *  More handlers...
2886:src/keys.c    **** 	 */
2887:src/keys.c    **** 	if (State2.multi)
2888:src/keys.c    **** 		return process_multi((const keycode)c);
2889:src/keys.c    **** 
2890:src/keys.c    **** 	if (State2.labellist)
2891:src/keys.c    **** 		return process_labellist((const keycode)c);
2892:src/keys.c    **** 
2893:src/keys.c    **** 	if (State2.registerlist)
2894:src/keys.c    **** 		return process_registerlist((const keycode)c);
2895:src/keys.c    **** 
2896:src/keys.c    **** 	if (State2.catalogue)
2897:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
2898:src/keys.c    **** 
2899:src/keys.c    **** 	if (State2.alphas) {
2900:src/keys.c    **** #ifndef INFRARED
2901:src/keys.c    **** 		return process_alpha((const keycode)c);
2902:src/keys.c    **** #else
2903:src/keys.c    **** 		int i = process_alpha((const keycode)c);
2904:src/keys.c    **** 		if (! State2.alphas && get_user_flag(T_FLAG)) {
2905:src/keys.c    **** 			print_tab(0);
2906:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
2907:src/keys.c    **** 		}
2908:src/keys.c    **** 		return i;
2909:src/keys.c    **** #endif
2910:src/keys.c    **** 	}
2911:src/keys.c    **** 
2912:src/keys.c    **** 	if (State2.cmplx) {
2913:src/keys.c    **** 		return process_cmplx((const keycode)c);
2914:src/keys.c    **** 	} else {
2915:src/keys.c    **** 		if (shift == SHIFT_F || shift == SHIFT_G)
2916:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
2917:src/keys.c    **** 		if (shift == SHIFT_H)
2918:src/keys.c    **** 			return process_h_shifted((const keycode)c);
2919:src/keys.c    **** 		// print_debug (3, c);
2920:src/keys.c    **** 		return process_normal((const keycode)c);
2921:src/keys.c    **** 	}
2922:src/keys.c    **** }
2923:src/keys.c    **** 
2924:src/keys.c    ****  unsigned int get_alpha_state ( void ) {
 4897              		.loc 1 2924 40 is_stmt 1 view -0
 4898              		.cfi_startproc
 4899              		@ args = 0, pretend = 0, frame = 0
 4900              		@ frame_needed = 0, uses_anonymous_args = 0
 4901              		@ link register save eliminated.
2925:src/keys.c    ****    return (State2.alphas || State2.confirm || State2.status || State2.labellist
 4902              		.loc 1 2925 4 view .LVU1541
ARM GAS  /tmp/ccy15zOt.s 			page 163


 4903              		.loc 1 2925 53 is_stmt 0 view .LVU1542
 4904 0000 074B     		ldr	r3, .L532
 4905              		.loc 1 2925 44 view .LVU1543
 4906 0002 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 4907 0004 1AB9     		cbnz	r2, .L530
2926:src/keys.c    **** 	   || State2.rarg || State2.registerlist || State2.multi 
2927:src/keys.c    **** 	   || State2.gtodot || State2.catalogue || (State2.test != TST_NONE) );
 4908              		.loc 1 2927 5 discriminator 2 view .LVU1544
 4909 0006 5969     		ldr	r1, [r3, #20]
 4910 0008 064A     		ldr	r2, .L532+4
 4911 000a 0A40     		ands	r2, r2, r1
 4912 000c 0AB1     		cbz	r2, .L531
 4913              	.L530:
 4914 000e 0120     		movs	r0, #1
2928:src/keys.c    ****  }
 4915              		.loc 1 2928 2 view .LVU1545
 4916 0010 7047     		bx	lr
 4917              	.L531:
2927:src/keys.c    ****  }
 4918              		.loc 1 2927 42 discriminator 3 view .LVU1546
 4919 0012 D889     		ldrh	r0, [r3, #14]
 4920 0014 B0F5E060 		subs	r0, r0, #1792
 4921 0018 18BF     		it	ne
 4922 001a 0120     		movne	r0, #1
 4923 001c 7047     		bx	lr
 4924              	.L533:
 4925 001e 00BF     		.align	2
 4926              	.L532:
 4927 0020 00000000 		.word	StateWhileOn
 4928 0024 0709280C 		.word	203950343
 4929              		.cfi_endproc
 4930              	.LFE56:
 4932              		.section	.rodata.process_keycode.str1.4,"aMS",%progbits,1
 4933              		.align	2
 4934              	.LC0:
 4935 0000 52554E00 		.ascii	"RUN\000"
 4936              		.align	2
 4937              	.LC1:
 4938 0004 4E554C4C 		.ascii	"NULL\000"
 4938      00
 4939 0009 000000   		.align	2
 4940              	.LC2:
 4941 000c 53746F70 		.ascii	"Stopped\000"
 4941      70656400 
 4942              		.section	.text.process_keycode,"ax",%progbits
 4943              		.align	1
 4944              		.p2align 2,,3
 4945              		.global	process_keycode
 4946              		.syntax unified
 4947              		.thumb
 4948              		.thumb_func
 4949              		.fpu fpv4-sp-d16
 4951              	process_keycode:
 4952              	.LVL444:
 4953              	.LFB58:
2929:src/keys.c    **** 
2930:src/keys.c    ****  void process_keycode_with_shift ( struct _ndmap remapped ) {
ARM GAS  /tmp/ccy15zOt.s 			page 164


2931:src/keys.c    ****    if (remapped.shift >= 0) set_shift ( remapped.shift );
2932:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
2933:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
2934:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
2935:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
2936:src/keys.c    ****        // Was error just wait for confirmation
2937:src/keys.c    ****        wait_for_key_press();
2938:src/keys.c    ****      }
2939:src/keys.c    ****      start_buzzer_freq(8800); sys_delay(10); stop_buzzer();// End click
2940:src/keys.c    ****      return;
2941:src/keys.c    ****    }
2942:src/keys.c    ****    process_keycode ( remapped.key_34s );
2943:src/keys.c    ****  }
2944:src/keys.c    ****  
2945:src/keys.c    **** /*
2946:src/keys.c    ****  *  Fed with key codes by the event loop
2947:src/keys.c    ****  */
2948:src/keys.c    **** void process_keycode(int c)
2949:src/keys.c    **** {
 4954              		.loc 1 2949 1 is_stmt 1 view -0
 4955              		.cfi_startproc
 4956              		@ args = 0, pretend = 0, frame = 8
 4957              		@ frame_needed = 0, uses_anonymous_args = 0
2950:src/keys.c    ****   static int was_paused;
 4958              		.loc 1 2950 3 view .LVU1548
2951:src/keys.c    ****   //volatile int cmdline_empty; // volatile because it's uninitialized in some cases
2952:src/keys.c    ****   int cmdline_empty = 0;        // Visual studio chokes in debug mode over the above
 4959              		.loc 1 2952 3 view .LVU1549
2953:src/keys.c    ****   if (was_paused && Pause == 0) {
 4960              		.loc 1 2953 3 view .LVU1550
2949:src/keys.c    ****   static int was_paused;
 4961              		.loc 1 2949 1 is_stmt 0 view .LVU1551
 4962 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4963              		.cfi_def_cfa_offset 36
 4964              		.cfi_offset 4, -36
 4965              		.cfi_offset 5, -32
 4966              		.cfi_offset 6, -28
 4967              		.cfi_offset 7, -24
 4968              		.cfi_offset 8, -20
 4969              		.cfi_offset 9, -16
 4970              		.cfi_offset 10, -12
 4971              		.cfi_offset 11, -8
 4972              		.cfi_offset 14, -4
 4973              		.loc 1 2953 7 view .LVU1552
 4974 0004 A84E     		ldr	r6, .L1157
 4975              		.loc 1 2953 27 view .LVU1553
 4976 0006 A94D     		ldr	r5, .L1157+4
 4977              		.loc 1 2953 6 view .LVU1554
 4978 0008 3368     		ldr	r3, [r6]
2949:src/keys.c    ****   static int was_paused;
 4979              		.loc 1 2949 1 view .LVU1555
 4980 000a 83B0     		sub	sp, sp, #12
 4981              		.cfi_def_cfa_offset 48
2949:src/keys.c    ****   static int was_paused;
 4982              		.loc 1 2949 1 view .LVU1556
 4983 000c 0446     		mov	r4, r0
 4984              		.loc 1 2953 6 view .LVU1557
ARM GAS  /tmp/ccy15zOt.s 			page 165


 4985 000e 1BB1     		cbz	r3, .L535
 4986              		.loc 1 2953 27 discriminator 1 view .LVU1558
 4987 0010 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 4988              		.loc 1 2953 18 discriminator 1 view .LVU1559
 4989 0012 002B     		cmp	r3, #0
 4990 0014 00F0CE80 		beq	.L1078
 4991              	.LVL445:
 4992              	.L535:
2954:src/keys.c    ****     /*
2955:src/keys.c    ****      *  Continue XROM execution after a pause
2956:src/keys.c    ****      */
2957:src/keys.c    ****     xeq_xrom();
2958:src/keys.c    ****   }
2959:src/keys.c    ****   was_paused = Pause;
 4993              		.loc 1 2959 3 is_stmt 1 view .LVU1560
 4994              		.loc 1 2959 14 is_stmt 0 view .LVU1561
 4995 0018 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 4996 001a 3360     		str	r3, [r6]
2960:src/keys.c    ****   if (c == K_NOP) {
 4997              		.loc 1 2960 3 is_stmt 1 view .LVU1562
 4998              		.loc 1 2960 6 is_stmt 0 view .LVU1563
 4999 001c 2E2C     		cmp	r4, #46
 5000 001e 00F0C380 		beq	.L1079
2961:src/keys.c    ****     OpCode = 0;
2962:src/keys.c    ****   }
2963:src/keys.c    ****   else if (c == K_HEARTBEAT) {
 5001              		.loc 1 2963 8 is_stmt 1 view .LVU1564
 5002              		.loc 1 2963 11 is_stmt 0 view .LVU1565
 5003 0022 622C     		cmp	r4, #98
 5004 0024 6DD0     		beq	.L1080
2964:src/keys.c    ****     /*
2965:src/keys.c    ****      *  Heartbeat processing goes here.
2966:src/keys.c    ****      *  This is totally thread safe!
2967:src/keys.c    ****      */
2968:src/keys.c    ****     if (Keyticks >= 2) {
2969:src/keys.c    ****       /*
2970:src/keys.c    ****        *  Some time has passed after last key press
2971:src/keys.c    ****        */
2972:src/keys.c    ****       if (OpCode != 0) {
2973:src/keys.c    **** 	/*
2974:src/keys.c    **** 	 *  Handle command display and NULL here
2975:src/keys.c    **** 	 */
2976:src/keys.c    **** 	if (OpCodeDisplayPending) {
2977:src/keys.c    **** 	  /*
2978:src/keys.c    **** 	   *  Show command to the user
2979:src/keys.c    **** 	   */
2980:src/keys.c    **** 	  OpCodeDisplayPending = 0;
2981:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
2982:src/keys.c    **** 	    DispMsg = "RUN";
2983:src/keys.c    **** 	  }
2984:src/keys.c    **** 	  else {
2985:src/keys.c    **** 	    scopy_char(TraceBuffer, prt(OpCode, TraceBuffer), '\0');
2986:src/keys.c    **** 	    DispMsg = TraceBuffer;
2987:src/keys.c    **** 	  }
2988:src/keys.c    **** 	  display();
2989:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
2990:src/keys.c    **** 	}
ARM GAS  /tmp/ccy15zOt.s 			page 166


2991:src/keys.c    ****     else if (Keyticks > 12) {
2992:src/keys.c    **** 	  /*
2993:src/keys.c    **** 	   *  Key is too long held down
2994:src/keys.c    **** 	   */
2995:src/keys.c    **** 	  OpCode = 0;
2996:src/keys.c    **** 	  message("NULL", CNULL);
2997:src/keys.c    **** 	  // Force display update on key-up
2998:src/keys.c    **** 	  State2.disp_temp = 0;
2999:src/keys.c    **** 	}
3000:src/keys.c    ****       }
3001:src/keys.c    ****       if (Keyticks > 12 && shift_down() != SHIFT_N) {
3002:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
3003:src/keys.c    **** 	State2.shifts = SHIFT_N;
3004:src/keys.c    ****       }
3005:src/keys.c    ****     }
3006:src/keys.c    **** 
3007:src/keys.c    ****     /*
3008:src/keys.c    ****      *  Serve the watchdog
3009:src/keys.c    ****      */
3010:src/keys.c    ****     watchdog();
3011:src/keys.c    **** 
3012:src/keys.c    **** #ifndef CONSOLE
3013:src/keys.c    ****     /*
3014:src/keys.c    ****      *  If buffer is empty re-allow R/S to start a program
3015:src/keys.c    ****      */
3016:src/keys.c    ****     if (JustStopped && !is_key_pressed()) {
3017:src/keys.c    ****       JustStopped = 0;
3018:src/keys.c    ****     }
3019:src/keys.c    **** #endif
3020:src/keys.c    **** 
3021:src/keys.c    ****     /*
3022:src/keys.c    ****      *  Do nothing if not running a program
3023:src/keys.c    ****      */
3024:src/keys.c    ****     if (!Running && ! Pause)
3025:src/keys.c    ****       return;
3026:src/keys.c    ****   }
3027:src/keys.c    ****   else {
3028:src/keys.c    ****     /*
3029:src/keys.c    ****      *  Not the heartbeat - prepare for execution of any commands
3030:src/keys.c    ****      */
3031:src/keys.c    ****     xeq_init_contexts();
 5005              		.loc 1 3031 5 is_stmt 1 view .LVU1566
3032:src/keys.c    ****     State2.wascomplex = 0;
 5006              		.loc 1 3032 23 is_stmt 0 view .LVU1567
 5007 0026 DFF8A082 		ldr	r8, .L1157+32
3031:src/keys.c    ****     State2.wascomplex = 0;
 5008              		.loc 1 3031 5 view .LVU1568
 5009 002a FFF7FEFF 		bl	xeq_init_contexts
 5010              	.LVL446:
 5011              		.loc 1 3032 5 is_stmt 1 view .LVU1569
 5012              		.loc 1 3032 23 is_stmt 0 view .LVU1570
 5013 002e 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
3033:src/keys.c    **** 
3034:src/keys.c    ****     if (is_dot(RPN)) {
 5014              		.loc 1 3034 9 view .LVU1571
 5015 0032 8D20     		movs	r0, #141
3032:src/keys.c    **** 
ARM GAS  /tmp/ccy15zOt.s 			page 167


 5016              		.loc 1 3032 23 view .LVU1572
 5017 0034 6FF38713 		bfc	r3, #6, #2
 5018 0038 88F81430 		strb	r3, [r8, #20]
 5019              		.loc 1 3034 5 is_stmt 1 view .LVU1573
 5020              		.loc 1 3034 9 is_stmt 0 view .LVU1574
 5021 003c FFF7FEFF 		bl	is_dot
 5022              	.LVL447:
 5023              		.loc 1 3034 8 view .LVU1575
 5024 0040 0028     		cmp	r0, #0
 5025 0042 40F0DE81 		bne	.L1081
 5026              	.L553:
3035:src/keys.c    ****       /*
3036:src/keys.c    ****        * Turn off the RPN annunciator as a visual feedback
3037:src/keys.c    ****        */
3038:src/keys.c    ****       clr_dot(RPN);
3039:src/keys.c    ****       finish_RPN(); // RPN
3040:src/keys.c    ****     }
3041:src/keys.c    **** 
3042:src/keys.c    **** #ifndef CONSOLE
3043:src/keys.c    ****     /*
3044:src/keys.c    ****      *  Reallow display refresh which is temporarily disabled after a stop
3045:src/keys.c    ****      *  All keys execpt R/S trigger this. The latter will only be reenabled
3046:src/keys.c    ****      *  from the heartbeat after the keybord buffer has become empty to avoid
3047:src/keys.c    ****      *  an accidental restart of the program.
3048:src/keys.c    ****      */
3049:src/keys.c    ****     if (c != K63)
 5027              		.loc 1 3049 5 is_stmt 1 view .LVU1576
 5028              		.loc 1 3049 8 is_stmt 0 view .LVU1577
 5029 0046 272C     		cmp	r4, #39
 5030 0048 00F0D881 		beq	.L555
3050:src/keys.c    ****       JustStopped = 0;
 5031              		.loc 1 3050 7 is_stmt 1 view .LVU1578
 5032              		.loc 1 3050 19 is_stmt 0 view .LVU1579
 5033 004c 984B     		ldr	r3, .L1157+8
 5034 004e 0022     		movs	r2, #0
3051:src/keys.c    **** #endif
3052:src/keys.c    ****   }
3053:src/keys.c    **** 
3054:src/keys.c    ****   /*
3055:src/keys.c    ****    *  Handle key release
3056:src/keys.c    ****    */
3057:src/keys.c    ****   if (c == K_RELEASE) {
 5035              		.loc 1 3057 6 view .LVU1580
 5036 0050 632C     		cmp	r4, #99
3050:src/keys.c    ****       JustStopped = 0;
 5037              		.loc 1 3050 19 view .LVU1581
 5038 0052 1A60     		str	r2, [r3]
 5039              		.loc 1 3057 3 is_stmt 1 view .LVU1582
 5040              		.loc 1 3057 6 is_stmt 0 view .LVU1583
 5041 0054 40F0D281 		bne	.L555
3058:src/keys.c    ****     if (OpCode != 0) {
 5042              		.loc 1 3058 5 is_stmt 1 view .LVU1584
 5043              		.loc 1 3058 16 is_stmt 0 view .LVU1585
 5044 0058 964B     		ldr	r3, .L1157+12
 5045 005a 1C68     		ldr	r4, [r3]
 5046              	.LVL448:
 5047              		.loc 1 3058 8 view .LVU1586
ARM GAS  /tmp/ccy15zOt.s 			page 168


 5048 005c 002C     		cmp	r4, #0
 5049 005e 00F0DA81 		beq	.L556
3059:src/keys.c    ****       /*
3060:src/keys.c    ****        * Execute the key on release
3061:src/keys.c    ****        */
3062:src/keys.c    ****       GoFast = 1;
 5050              		.loc 1 3062 7 is_stmt 1 view .LVU1587
 5051              		.loc 1 3062 14 is_stmt 0 view .LVU1588
 5052 0062 9549     		ldr	r1, .L1157+16
3063:src/keys.c    ****       c = OpCode;
3064:src/keys.c    ****       OpCode = 0;
 5053              		.loc 1 3064 14 view .LVU1589
 5054 0064 1A60     		str	r2, [r3]
3062:src/keys.c    ****       c = OpCode;
 5055              		.loc 1 3062 14 view .LVU1590
 5056 0066 0120     		movs	r0, #1
3065:src/keys.c    **** 
3066:src/keys.c    ****       if (c == STATE_SST)
 5057              		.loc 1 3066 10 view .LVU1591
 5058 0068 2E2C     		cmp	r4, #46
3063:src/keys.c    ****       OpCode = 0;
 5059              		.loc 1 3063 9 view .LVU1592
 5060 006a A346     		mov	fp, r4
3062:src/keys.c    ****       c = OpCode;
 5061              		.loc 1 3062 14 view .LVU1593
 5062 006c 0860     		str	r0, [r1]
3063:src/keys.c    ****       OpCode = 0;
 5063              		.loc 1 3063 7 is_stmt 1 view .LVU1594
 5064              	.LVL449:
3064:src/keys.c    **** 
 5065              		.loc 1 3064 7 view .LVU1595
 5066              		.loc 1 3066 7 view .LVU1596
 5067              		.loc 1 3066 10 is_stmt 0 view .LVU1597
 5068 006e 00F0E681 		beq	.L1082
3067:src/keys.c    **** 	xeq_sst_bst(1);
3068:src/keys.c    ****       else {
3069:src/keys.c    **** 	if (c == (OP_NIL | OP_OFF) || c == (OP_NIL | OP_rCLX) || !is_bad_cmdline()) {
 5069              		.loc 1 3069 2 is_stmt 1 view .LVU1598
 5070              		.loc 1 3069 5 is_stmt 0 view .LVU1599
 5071 0072 B4F5817F 		cmp	r4, #258
 5072 0076 04D0     		beq	.L562
 5073              		.loc 1 3069 29 discriminator 1 view .LVU1600
 5074 0078 40F23F13 		movw	r3, #319
 5075 007c 9C42     		cmp	r4, r3
 5076 007e 40F09C80 		bne	.L1083
 5077              	.L562:
3070:src/keys.c    **** 	  xeq(c);
 5078              		.loc 1 3070 4 is_stmt 1 view .LVU1601
3071:src/keys.c    **** 	  if (Running || Pause)
 5079              		.loc 1 3071 8 is_stmt 0 view .LVU1602
 5080 0082 8E4E     		ldr	r6, .L1157+20
3070:src/keys.c    **** 	  xeq(c);
 5081              		.loc 1 3070 4 view .LVU1603
 5082 0084 2046     		mov	r0, r4
 5083 0086 FFF7FEFF 		bl	xeq
 5084              	.LVL450:
 5085              		.loc 1 3071 4 is_stmt 1 view .LVU1604
ARM GAS  /tmp/ccy15zOt.s 			page 169


 5086              		.loc 1 3071 7 is_stmt 0 view .LVU1605
 5087 008a 3368     		ldr	r3, [r6]
 5088 008c 0BB9     		cbnz	r3, .L560
 5089              		.loc 1 3071 16 discriminator 1 view .LVU1606
 5090 008e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 5091 0090 0BB1     		cbz	r3, .L558
 5092              	.L560:
3072:src/keys.c    **** 	    xeqprog();
 5093              		.loc 1 3072 6 is_stmt 1 view .LVU1607
 5094 0092 FFF7FEFF 		bl	xeqprog
 5095              	.LVL451:
 5096              	.L558:
3073:src/keys.c    **** 	}
3074:src/keys.c    ****       }
3075:src/keys.c    ****       dot(RPN, ShowRPN);
 5097              		.loc 1 3075 7 view .LVU1608
 5098 0096 8A4C     		ldr	r4, .L1157+24
 5099              	.LVL452:
 5100              		.loc 1 3075 7 is_stmt 0 view .LVU1609
 5101 0098 8D20     		movs	r0, #141
 5102 009a 2168     		ldr	r1, [r4]
 5103 009c FFF7FEFF 		bl	dot
 5104              	.LVL453:
3076:src/keys.c    ****     }
3077:src/keys.c    ****     else {
3078:src/keys.c    ****       // Ignore key-up if no operation was pending
3079:src/keys.c    ****       dot(RPN, ShowRPN);
3080:src/keys.c    **** #ifndef CONSOLE
3081:src/keys.c    ****       if (! State2.disp_temp ) {
3082:src/keys.c    **** 	if (!WasDataEntry) {
3083:src/keys.c    **** 	  // This will get rid of the last displayed op-code
3084:src/keys.c    **** 	  display();
3085:src/keys.c    **** 	}
3086:src/keys.c    **** 	else {
3087:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3088:src/keys.c    **** 	}
3089:src/keys.c    ****       }
3090:src/keys.c    **** #endif
3091:src/keys.c    ****       return;
3092:src/keys.c    ****     }
3093:src/keys.c    **** 
3094:src/keys.c    ****     /*
3095:src/keys.c    ****      *  Turn on the RPN symbol if desired
3096:src/keys.c    ****      */
3097:src/keys.c    ****     if (ShowRPN) {
 5105              		.loc 1 3097 5 is_stmt 1 view .LVU1610
 5106              		.loc 1 3097 9 is_stmt 0 view .LVU1611
 5107 00a0 2768     		ldr	r7, [r4]
 5108              		.loc 1 3097 8 view .LVU1612
 5109 00a2 002F     		cmp	r7, #0
 5110 00a4 40F0B381 		bne	.L1084
 5111              	.LVL454:
 5112              	.L565:
3098:src/keys.c    ****       finish_RPN(); // RPN
3099:src/keys.c    ****     }
3100:src/keys.c    ****   }
3101:src/keys.c    ****   else {
ARM GAS  /tmp/ccy15zOt.s 			page 170


3102:src/keys.c    ****     /*
3103:src/keys.c    ****      *  Decode the key 
3104:src/keys.c    ****      */
3105:src/keys.c    ****     // print_debug (100, c);
3106:src/keys.c    ****     WasDataEntry = 0;
3107:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
3108:src/keys.c    ****     c = process(c);		// returns an op-code or state
3109:src/keys.c    ****     switch (c) {
3110:src/keys.c    ****     case STATE_SST:
3111:src/keys.c    ****       OpCode = c;
3112:src/keys.c    ****       OpCodeDisplayPending = 0;
3113:src/keys.c    ****       xeq_sst_bst(0);
3114:src/keys.c    ****       break;
3115:src/keys.c    **** 
3116:src/keys.c    ****     case STATE_BST:
3117:src/keys.c    ****       xeq_sst_bst(-1);
3118:src/keys.c    ****       break;
3119:src/keys.c    **** 
3120:src/keys.c    ****     case STATE_BACKSPACE:
3121:src/keys.c    ****       if (! State2.runmode)
3122:src/keys.c    **** 	delprog();
3123:src/keys.c    ****       else if (State2.alphas) {
3124:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
3125:src/keys.c    **** 	if (p > Alpha)
3126:src/keys.c    **** 	  *--p = '\0';
3127:src/keys.c    ****       }
3128:src/keys.c    ****       break;
3129:src/keys.c    **** 
3130:src/keys.c    ****     case STATE_RUNNING:
3131:src/keys.c    ****       xeqprog();  // continue execution
3132:src/keys.c    ****       break;
3133:src/keys.c    **** 
3134:src/keys.c    ****     case STATE_WINDOWRIGHT:
3135:src/keys.c    ****     case STATE_WINDOWLEFT:
3136:src/keys.c    ****       if (!is_bad_cmdline())
3137:src/keys.c    **** 	set_window(c);
3138:src/keys.c    ****       break;
3139:src/keys.c    **** 
3140:src/keys.c    ****     case STATE_UNFINISHED:
3141:src/keys.c    ****     case STATE_IGNORE:
3142:src/keys.c    ****       break;
3143:src/keys.c    **** 
3144:src/keys.c    ****     default:
3145:src/keys.c    ****       if (State2.runmode || NonProgrammable) {
3146:src/keys.c    **** 	NonProgrammable = 0;
3147:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
3148:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
3149:src/keys.c    **** 	    // Data entry key
3150:src/keys.c    **** #ifndef CONSOLE
3151:src/keys.c    **** 	    WasDataEntry = 1;
3152:src/keys.c    **** #endif
3153:src/keys.c    **** 	    cmdline_empty = (CmdLineLength == 0);
3154:src/keys.c    **** 	    xeq(c);
3155:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
3156:src/keys.c    **** 	  }
3157:src/keys.c    **** 	}
3158:src/keys.c    **** 	else {
ARM GAS  /tmp/ccy15zOt.s 			page 171


3159:src/keys.c    **** 	  // Save the op-code for execution on key-up
3160:src/keys.c    **** 	  OpCode = c;
3161:src/keys.c    **** 	  OpCodeDisplayPending = 1;
3162:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
3163:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
3164:src/keys.c    **** 	}
3165:src/keys.c    ****       }
3166:src/keys.c    ****       else {
3167:src/keys.c    **** 	stoprog(c);
3168:src/keys.c    ****       }
3169:src/keys.c    ****     }
3170:src/keys.c    ****   }
3171:src/keys.c    ****   if (! Running && ! Pause
 5113              		.loc 1 3171 3 is_stmt 1 view .LVU1613
 5114              		.loc 1 3171 6 is_stmt 0 view .LVU1614
 5115 00a8 3368     		ldr	r3, [r6]
 5116 00aa 002B     		cmp	r3, #0
 5117 00ac 40F08781 		bne	.L1072
 5118              	.LVL455:
 5119              	.L579:
 5120              		.loc 1 3171 20 discriminator 1 view .LVU1615
 5121 00b0 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 5122              		.loc 1 3171 17 discriminator 1 view .LVU1616
 5123 00b2 002B     		cmp	r3, #0
 5124 00b4 40F08381 		bne	.L1072
3172:src/keys.c    **** #ifndef CONSOLE
3173:src/keys.c    ****       && ! JustStopped
 5125              		.loc 1 3173 10 view .LVU1617
 5126 00b8 7D4B     		ldr	r3, .L1157+8
3174:src/keys.c    **** #endif
3175:src/keys.c    ****       && ! JustDisplayed && c != STATE_IGNORE) {
 5127              		.loc 1 3175 10 view .LVU1618
 5128 00ba 824C     		ldr	r4, .L1157+28
 5129 00bc 1B68     		ldr	r3, [r3]
 5130 00be 2268     		ldr	r2, [r4]
 5131              		.loc 1 3175 7 view .LVU1619
 5132 00c0 1343     		orrs	r3, r3, r2
 5133 00c2 19D1     		bne	.L841
 5134              		.loc 1 3175 26 discriminator 1 view .LVU1620
 5135 00c4 BBF1320F 		cmp	fp, #50
 5136 00c8 16D0     		beq	.L841
 5137              	.LBB634:
3176:src/keys.c    ****     const int orig_WasDataEntry = WasDataEntry;
 5138              		.loc 1 3176 5 is_stmt 1 view .LVU1621
 5139              		.loc 1 3176 15 is_stmt 0 view .LVU1622
 5140 00ca DFF81892 		ldr	r9, .L1157+60
 5141 00ce D9F80050 		ldr	r5, [r9]
 5142              	.LVL456:
3177:src/keys.c    **** 
3178:src/keys.c    ****     WasDataEntry &= !(c == (OP_SPEC | OP_ENTER) || cmdline_empty || State2.invalid_disp);
 5143              		.loc 1 3178 5 is_stmt 1 view .LVU1623
 5144              		.loc 1 3178 21 is_stmt 0 view .LVU1624
 5145 00d2 BBF1000F 		cmp	fp, #0
 5146 00d6 09D0     		beq	.L843
 5147              		.loc 1 3178 49 discriminator 1 view .LVU1625
 5148 00d8 002F     		cmp	r7, #0
 5149 00da 40F04B85 		bne	.L895
ARM GAS  /tmp/ccy15zOt.s 			page 172


 5150              		.loc 1 3178 66 discriminator 3 view .LVU1626
 5151 00de 7A4B     		ldr	r3, .L1157+32
 5152 00e0 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 5153              		.loc 1 3178 21 discriminator 3 view .LVU1627
 5154 00e2 9807     		lsls	r0, r3, #30
 5155 00e4 00F1EB85 		bmi	.L896
 5156 00e8 05F0010B 		and	fp, r5, #1
 5157              	.LVL457:
 5158              	.L843:
 5159              		.loc 1 3178 18 discriminator 8 view .LVU1628
 5160 00ec C9F800B0 		str	fp, [r9]
3179:src/keys.c    ****     display();
 5161              		.loc 1 3179 5 is_stmt 1 discriminator 8 view .LVU1629
 5162 00f0 FFF7FEFF 		bl	display
 5163              	.LVL458:
3180:src/keys.c    ****     WasDataEntry = orig_WasDataEntry;
 5164              		.loc 1 3180 5 discriminator 8 view .LVU1630
 5165              		.loc 1 3180 18 is_stmt 0 discriminator 8 view .LVU1631
 5166 00f4 C9F80050 		str	r5, [r9]
 5167              	.LVL459:
 5168              	.L841:
 5169              		.loc 1 3180 18 discriminator 8 view .LVU1632
 5170              	.LBE634:
3181:src/keys.c    ****   }
3182:src/keys.c    **** 
3183:src/keys.c    ****  no_display:
3184:src/keys.c    ****   JustDisplayed = 0;
 5171              		.loc 1 3184 3 is_stmt 1 view .LVU1633
 5172              		.loc 1 3184 17 is_stmt 0 view .LVU1634
 5173 00f8 0023     		movs	r3, #0
 5174 00fa 2360     		str	r3, [r4]
3185:src/keys.c    ****   watchdog();
 5175              		.loc 1 3185 13 is_stmt 1 view .LVU1635
 5176              	.L534:
3186:src/keys.c    **** }
 5177              		.loc 1 3186 1 is_stmt 0 view .LVU1636
 5178 00fc 03B0     		add	sp, sp, #12
 5179              		.cfi_remember_state
 5180              		.cfi_def_cfa_offset 36
 5181              		@ sp needed
 5182 00fe BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5183              	.LVL460:
 5184              	.L1080:
 5185              		.cfi_restore_state
2968:src/keys.c    ****       /*
 5186              		.loc 1 2968 5 is_stmt 1 view .LVU1637
2968:src/keys.c    ****       /*
 5187              		.loc 1 2968 9 is_stmt 0 view .LVU1638
 5188 0102 FFF7FEFF 		bl	keyticks
 5189              	.LVL461:
2968:src/keys.c    ****       /*
 5190              		.loc 1 2968 8 view .LVU1639
 5191 0106 0128     		cmp	r0, #1
 5192 0108 1BDD     		ble	.L540
2972:src/keys.c    **** 	/*
 5193              		.loc 1 2972 7 is_stmt 1 view .LVU1640
2972:src/keys.c    **** 	/*
ARM GAS  /tmp/ccy15zOt.s 			page 173


 5194              		.loc 1 2972 18 is_stmt 0 view .LVU1641
 5195 010a 6A4E     		ldr	r6, .L1157+12
 5196 010c 3068     		ldr	r0, [r6]
2972:src/keys.c    **** 	/*
 5197              		.loc 1 2972 10 view .LVU1642
 5198 010e 98B1     		cbz	r0, .L542
2976:src/keys.c    **** 	  /*
 5199              		.loc 1 2976 2 is_stmt 1 view .LVU1643
2976:src/keys.c    **** 	  /*
 5200              		.loc 1 2976 6 is_stmt 0 view .LVU1644
 5201 0110 6E4B     		ldr	r3, .L1157+36
2976:src/keys.c    **** 	  /*
 5202              		.loc 1 2976 5 view .LVU1645
 5203 0112 1F68     		ldr	r7, [r3]
 5204 0114 002F     		cmp	r7, #0
 5205 0116 00F09F81 		beq	.L543
2980:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5206              		.loc 1 2980 4 is_stmt 1 view .LVU1646
2981:src/keys.c    **** 	    DispMsg = "RUN";
 5207              		.loc 1 2981 7 is_stmt 0 view .LVU1647
 5208 011a 40F23B12 		movw	r2, #315
2980:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5209              		.loc 1 2980 25 view .LVU1648
 5210 011e 0026     		movs	r6, #0
2981:src/keys.c    **** 	    DispMsg = "RUN";
 5211              		.loc 1 2981 7 view .LVU1649
 5212 0120 9042     		cmp	r0, r2
2980:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5213              		.loc 1 2980 25 view .LVU1650
 5214 0122 1E60     		str	r6, [r3]
2981:src/keys.c    **** 	    DispMsg = "RUN";
 5215              		.loc 1 2981 4 is_stmt 1 view .LVU1651
2981:src/keys.c    **** 	    DispMsg = "RUN";
 5216              		.loc 1 2981 7 is_stmt 0 view .LVU1652
 5217 0124 40F05384 		bne	.L544
2982:src/keys.c    **** 	  }
 5218              		.loc 1 2982 6 is_stmt 1 view .LVU1653
2982:src/keys.c    **** 	  }
 5219              		.loc 1 2982 14 is_stmt 0 view .LVU1654
 5220 0128 694B     		ldr	r3, .L1157+40
 5221 012a 6A4A     		ldr	r2, .L1157+44
 5222 012c 1A60     		str	r2, [r3]
 5223              	.L545:
2988:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
 5224              		.loc 1 2988 4 is_stmt 1 view .LVU1655
 5225 012e FFF7FEFF 		bl	display
 5226              	.LVL462:
2989:src/keys.c    **** 	}
 5227              		.loc 1 2989 4 view .LVU1656
2989:src/keys.c    **** 	}
 5228              		.loc 1 2989 12 is_stmt 0 view .LVU1657
 5229 0132 634B     		ldr	r3, .L1157+24
 5230 0134 0122     		movs	r2, #1
 5231 0136 1A60     		str	r2, [r3]
 5232              	.L542:
3001:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5233              		.loc 1 3001 7 is_stmt 1 view .LVU1658
ARM GAS  /tmp/ccy15zOt.s 			page 174


3001:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5234              		.loc 1 3001 11 is_stmt 0 view .LVU1659
 5235 0138 FFF7FEFF 		bl	keyticks
 5236              	.LVL463:
3001:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5237              		.loc 1 3001 10 view .LVU1660
 5238 013c 0C28     		cmp	r0, #12
 5239 013e 00F38281 		bgt	.L1085
 5240              	.L540:
3010:src/keys.c    **** 
 5241              		.loc 1 3010 15 is_stmt 1 view .LVU1661
3016:src/keys.c    ****       JustStopped = 0;
 5242              		.loc 1 3016 5 view .LVU1662
3016:src/keys.c    ****       JustStopped = 0;
 5243              		.loc 1 3016 9 is_stmt 0 view .LVU1663
 5244 0142 5B4E     		ldr	r6, .L1157+8
3016:src/keys.c    ****       JustStopped = 0;
 5245              		.loc 1 3016 8 view .LVU1664
 5246 0144 3368     		ldr	r3, [r6]
 5247 0146 002B     		cmp	r3, #0
 5248 0148 4ED1     		bne	.L1086
 5249              	.L549:
3024:src/keys.c    ****       return;
 5250              		.loc 1 3024 5 is_stmt 1 view .LVU1665
3024:src/keys.c    ****       return;
 5251              		.loc 1 3024 9 is_stmt 0 view .LVU1666
 5252 014a 5C4E     		ldr	r6, .L1157+20
 5253 014c 3368     		ldr	r3, [r6]
3024:src/keys.c    ****       return;
 5254              		.loc 1 3024 8 view .LVU1667
 5255 014e 002B     		cmp	r3, #0
 5256 0150 46D0     		beq	.L1087
 5257              	.L537:
3106:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5258              		.loc 1 3106 5 is_stmt 1 view .LVU1668
3107:src/keys.c    ****     c = process(c);		// returns an op-code or state
 5259              		.loc 1 3107 13 is_stmt 0 view .LVU1669
 5260 0152 5B49     		ldr	r1, .L1157+24
3106:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5261              		.loc 1 3106 18 view .LVU1670
 5262 0154 DFF88C91 		ldr	r9, .L1157+60
3107:src/keys.c    ****     c = process(c);		// returns an op-code or state
 5263              		.loc 1 3107 15 view .LVU1671
 5264 0158 B3FA83F3 		clz	r3, r3
 5265 015c 5B09     		lsrs	r3, r3, #5
3106:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5266              		.loc 1 3106 18 view .LVU1672
 5267 015e 0022     		movs	r2, #0
3107:src/keys.c    ****     c = process(c);		// returns an op-code or state
 5268              		.loc 1 3107 13 view .LVU1673
 5269 0160 0B60     		str	r3, [r1]
3106:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 5270              		.loc 1 3106 18 view .LVU1674
 5271 0162 C9F80020 		str	r2, [r9]
3107:src/keys.c    ****     c = process(c);		// returns an op-code or state
 5272              		.loc 1 3107 5 is_stmt 1 view .LVU1675
3108:src/keys.c    ****     switch (c) {
ARM GAS  /tmp/ccy15zOt.s 			page 175


 5273              		.loc 1 3108 5 view .LVU1676
 5274              	.LVL464:
 5275              	.LBB635:
 5276              	.LBI635:
2772:src/keys.c    ****   const enum shifts shift = cur_shift();
 5277              		.loc 1 2772 12 view .LVU1677
 5278              	.LBB636:
2773:src/keys.c    ****   enum catalogues cat;
 5279              		.loc 1 2773 3 view .LVU1678
 5280              	.LBB637:
 5281              	.LBI637:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 5282              		.loc 1 84 13 view .LVU1679
 5283              	.LBB638:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5284              		.loc 1 85 2 view .LVU1680
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5285              		.loc 1 85 18 is_stmt 0 view .LVU1681
 5286 0166 FFF7FEFF 		bl	shift_down
 5287              	.LVL465:
  86:src/keys.c    **** }
 5288              		.loc 1 86 2 is_stmt 1 view .LVU1682
  86:src/keys.c    **** }
 5289              		.loc 1 86 52 is_stmt 0 view .LVU1683
 5290 016a 8246     		mov	r10, r0
 5291 016c 10B9     		cbnz	r0, .L568
 5292 016e 564B     		ldr	r3, .L1157+32
 5293 0170 93F810A0 		ldrb	r10, [r3, #16]	@ zero_extendqisi2
 5294              	.L568:
 5295              	.LVL466:
  86:src/keys.c    **** }
 5296              		.loc 1 86 52 view .LVU1684
 5297              	.LBE638:
 5298              	.LBE637:
2774:src/keys.c    **** 
 5299              		.loc 1 2774 3 is_stmt 1 view .LVU1685
2776:src/keys.c    ****     /*
 5300              		.loc 1 2776 3 view .LVU1686
2776:src/keys.c    ****     /*
 5301              		.loc 1 2776 7 is_stmt 0 view .LVU1687
 5302 0174 3768     		ldr	r7, [r6]
2776:src/keys.c    ****     /*
 5303              		.loc 1 2776 6 view .LVU1688
 5304 0176 0FB9     		cbnz	r7, .L569
2776:src/keys.c    ****     /*
 5305              		.loc 1 2776 15 view .LVU1689
 5306 0178 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 5307 017a 2BB3     		cbz	r3, .L570
 5308              	.L569:
2780:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 5309              		.loc 1 2780 5 is_stmt 1 view .LVU1690
2780:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 5310              		.loc 1 2780 8 is_stmt 0 view .LVU1691
 5311 017c 242C     		cmp	r4, #36
 5312 017e 00F02281 		beq	.L571
2780:src/keys.c    ****       if (Pause && isXROM(state_pc()))
 5313              		.loc 1 2780 18 view .LVU1692
ARM GAS  /tmp/ccy15zOt.s 			page 176


 5314 0182 272C     		cmp	r4, #39
 5315 0184 00F01F81 		beq	.L571
2790:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 5316              		.loc 1 2790 5 is_stmt 1 view .LVU1693
2790:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 5317              		.loc 1 2790 8 is_stmt 0 view .LVU1694
 5318 0188 622C     		cmp	r4, #98
 5319 018a 07D0     		beq	.L574
2791:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5320              		.loc 1 2791 7 is_stmt 1 view .LVU1695
2791:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5321              		.loc 1 2791 15 is_stmt 0 view .LVU1696
 5322 018c 4E4B     		ldr	r3, .L1157+32
2793:src/keys.c    ****     }
 5323              		.loc 1 2793 14 view .LVU1697
 5324 018e 4A4A     		ldr	r2, .L1157+16
2791:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5325              		.loc 1 2791 17 view .LVU1698
 5326 0190 0134     		adds	r4, r4, #1
 5327              	.LVL467:
2793:src/keys.c    ****     }
 5328              		.loc 1 2793 14 view .LVU1699
 5329 0192 0121     		movs	r1, #1
2791:src/keys.c    ****       Pause = 0;			// leave PSE statement
 5330              		.loc 1 2791 15 view .LVU1700
 5331 0194 DC74     		strb	r4, [r3, #19]
2792:src/keys.c    ****       GoFast = 1;
 5332              		.loc 1 2792 7 is_stmt 1 view .LVU1701
2792:src/keys.c    ****       GoFast = 1;
 5333              		.loc 1 2792 13 is_stmt 0 view .LVU1702
 5334 0196 0023     		movs	r3, #0
2793:src/keys.c    ****     }
 5335              		.loc 1 2793 14 view .LVU1703
 5336 0198 1160     		str	r1, [r2]
2792:src/keys.c    ****       GoFast = 1;
 5337              		.loc 1 2792 13 view .LVU1704
 5338 019a 2B70     		strb	r3, [r5]
2793:src/keys.c    ****     }
 5339              		.loc 1 2793 7 is_stmt 1 view .LVU1705
 5340              	.LVL468:
 5341              	.L574:
2793:src/keys.c    ****     }
 5342              		.loc 1 2793 7 is_stmt 0 view .LVU1706
 5343              	.LBE636:
 5344              	.LBE635:
3131:src/keys.c    ****       break;
 5345              		.loc 1 3131 7 is_stmt 1 view .LVU1707
 5346 019c FFF7FEFF 		bl	xeqprog
 5347              	.LVL469:
3132:src/keys.c    **** 
 5348              		.loc 1 3132 7 view .LVU1708
2952:src/keys.c    ****   if (was_paused && Pause == 0) {
 5349              		.loc 1 2952 7 is_stmt 0 view .LVU1709
 5350 01a0 0027     		movs	r7, #0
3132:src/keys.c    **** 
 5351              		.loc 1 3132 7 view .LVU1710
 5352 01a2 4FF0310B 		mov	fp, #49
ARM GAS  /tmp/ccy15zOt.s 			page 177


 5353 01a6 7FE7     		b	.L565
 5354              	.LVL470:
 5355              	.L1079:
2961:src/keys.c    ****   }
 5356              		.loc 1 2961 5 is_stmt 1 view .LVU1711
2961:src/keys.c    ****   }
 5357              		.loc 1 2961 12 is_stmt 0 view .LVU1712
 5358 01a8 424B     		ldr	r3, .L1157+12
 5359 01aa 444E     		ldr	r6, .L1157+20
 5360 01ac 0022     		movs	r2, #0
 5361 01ae 1A60     		str	r2, [r3]
3057:src/keys.c    ****     if (OpCode != 0) {
 5362              		.loc 1 3057 3 is_stmt 1 view .LVU1713
 5363 01b0 3368     		ldr	r3, [r6]
 5364 01b2 CEE7     		b	.L537
 5365              	.LVL471:
 5366              	.L1078:
2957:src/keys.c    ****   }
 5367              		.loc 1 2957 5 view .LVU1714
 5368 01b4 FFF7FEFF 		bl	xeq_xrom
 5369              	.LVL472:
2957:src/keys.c    ****   }
 5370              		.loc 1 2957 5 is_stmt 0 view .LVU1715
 5371 01b8 2EE7     		b	.L535
 5372              	.L1083:
3069:src/keys.c    **** 	  xeq(c);
 5373              		.loc 1 3069 60 discriminator 2 view .LVU1716
 5374 01ba FFF7FEFF 		bl	is_bad_cmdline
 5375              	.LVL473:
3069:src/keys.c    **** 	  xeq(c);
 5376              		.loc 1 3069 56 discriminator 2 view .LVU1717
 5377 01be 0028     		cmp	r0, #0
 5378 01c0 3FF45FAF 		beq	.L562
 5379 01c4 3D4E     		ldr	r6, .L1157+20
 5380 01c6 66E7     		b	.L558
 5381              	.LVL474:
 5382              	.L570:
 5383              	.LBB1228:
 5384              	.LBB1173:
2804:src/keys.c    **** #else
 5385              		.loc 1 2804 3 is_stmt 1 view .LVU1718
2804:src/keys.c    **** #else
 5386              		.loc 1 2804 6 is_stmt 0 view .LVU1719
 5387 01c8 242C     		cmp	r4, #36
 5388 01ca 00F00D84 		beq	.L1088
2814:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5389              		.loc 1 2814 2 is_stmt 1 view .LVU1720
2814:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5390              		.loc 1 2814 5 is_stmt 0 view .LVU1721
 5391 01ce 272C     		cmp	r4, #39
 5392 01d0 10D1     		bne	.L578
2814:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5393              		.loc 1 2814 15 view .LVU1722
 5394 01d2 374B     		ldr	r3, .L1157+8
 5395 01d4 1A68     		ldr	r2, [r3]
 5396 01d6 6AB1     		cbz	r2, .L578
2816:src/keys.c    **** 		return STATE_IGNORE;
ARM GAS  /tmp/ccy15zOt.s 			page 178


 5397              		.loc 1 2816 3 is_stmt 1 view .LVU1723
2816:src/keys.c    **** 		return STATE_IGNORE;
 5398              		.loc 1 2816 15 is_stmt 0 view .LVU1724
 5399 01d8 1F60     		str	r7, [r3]
2817:src/keys.c    **** 	}
 5400              		.loc 1 2817 3 is_stmt 1 view .LVU1725
 5401              	.LVL475:
2817:src/keys.c    **** 	}
 5402              		.loc 1 2817 3 is_stmt 0 view .LVU1726
 5403              	.LBE1173:
 5404              	.LBE1228:
3171:src/keys.c    **** #ifndef CONSOLE
 5405              		.loc 1 3171 3 is_stmt 1 view .LVU1727
 5406              	.LBB1229:
 5407              	.LBB1174:
2817:src/keys.c    **** 	}
 5408              		.loc 1 2817 10 is_stmt 0 view .LVU1728
 5409 01da 4FF0320B 		mov	fp, #50
 5410 01de 67E7     		b	.L579
 5411              	.LVL476:
 5412              	.L1087:
2817:src/keys.c    **** 	}
 5413              		.loc 1 2817 10 view .LVU1729
 5414              	.LBE1174:
 5415              	.LBE1229:
3024:src/keys.c    ****       return;
 5416              		.loc 1 3024 21 discriminator 1 view .LVU1730
 5417 01e0 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
3024:src/keys.c    ****       return;
 5418              		.loc 1 3024 18 discriminator 1 view .LVU1731
 5419 01e2 002A     		cmp	r2, #0
 5420 01e4 B5D1     		bne	.L537
 5421 01e6 89E7     		b	.L534
 5422              	.L1086:
3016:src/keys.c    ****       JustStopped = 0;
 5423              		.loc 1 3016 25 discriminator 1 view .LVU1732
 5424 01e8 FFF7FEFF 		bl	is_key_pressed
 5425              	.LVL477:
3016:src/keys.c    ****       JustStopped = 0;
 5426              		.loc 1 3016 21 discriminator 1 view .LVU1733
 5427 01ec 0028     		cmp	r0, #0
 5428 01ee ACD1     		bne	.L549
3017:src/keys.c    ****     }
 5429              		.loc 1 3017 7 is_stmt 1 view .LVU1734
3017:src/keys.c    ****     }
 5430              		.loc 1 3017 19 is_stmt 0 view .LVU1735
 5431 01f0 3060     		str	r0, [r6]
 5432 01f2 AAE7     		b	.L549
 5433              	.LVL478:
 5434              	.L578:
3017:src/keys.c    ****     }
 5435              		.loc 1 3017 19 view .LVU1736
 5436 01f4 DFF8D080 		ldr	r8, .L1157+32
 5437 01f8 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
 5438              	.L576:
 5439              	.LBB1230:
 5440              	.LBB1175:
ARM GAS  /tmp/ccy15zOt.s 			page 179


2823:src/keys.c    **** 		CmdLineLength = 0;
 5441              		.loc 1 2823 2 is_stmt 1 view .LVU1737
2823:src/keys.c    **** 		CmdLineLength = 0;
 5442              		.loc 1 2823 5 is_stmt 0 view .LVU1738
 5443 01fc 002B     		cmp	r3, #0
 5444 01fe 40F06483 		bne	.L1089
 5445              	.L581:
2829:src/keys.c    **** 		return process_confirm((const keycode)c);
 5446              		.loc 1 2829 2 is_stmt 1 view .LVU1739
2829:src/keys.c    **** 		return process_confirm((const keycode)c);
 5447              		.loc 1 2829 6 is_stmt 0 view .LVU1740
 5448 0202 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
2829:src/keys.c    **** 		return process_confirm((const keycode)c);
 5449              		.loc 1 2829 5 view .LVU1741
 5450 0206 5907     		lsls	r1, r3, #29
 5451 0208 40F07683 		bne	.L1090
2832:src/keys.c    **** 		return process_arg((const keycode)c);
 5452              		.loc 1 2832 2 is_stmt 1 view .LVU1742
2832:src/keys.c    **** 		return process_arg((const keycode)c);
 5453              		.loc 1 2832 6 is_stmt 0 view .LVU1743
 5454 020c 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2832:src/keys.c    **** 		return process_arg((const keycode)c);
 5455              		.loc 1 2832 5 view .LVU1744
 5456 0210 9A06     		lsls	r2, r3, #26
 5457 0212 00F1FE83 		bmi	.L1091
2835:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5458              		.loc 1 2835 2 is_stmt 1 view .LVU1745
2835:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5459              		.loc 1 2835 6 is_stmt 0 view .LVU1746
 5460 0216 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2835:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5461              		.loc 1 2835 5 view .LVU1747
 5462 021a 12F0010B 		ands	fp, r2, #1
 5463 021e 40F04584 		bne	.L1092
2838:src/keys.c    **** 		return process_hyp((const keycode)c);
 5464              		.loc 1 2838 2 is_stmt 1 view .LVU1748
2838:src/keys.c    **** 		return process_hyp((const keycode)c);
 5465              		.loc 1 2838 5 is_stmt 0 view .LVU1749
 5466 0222 12F02001 		ands	r1, r2, #32
 5467 0226 40F02781 		bne	.L1093
2841:src/keys.c    **** 		return process_test((const keycode)c);
 5468              		.loc 1 2841 2 is_stmt 1 view .LVU1750
2841:src/keys.c    **** 		return process_test((const keycode)c);
 5469              		.loc 1 2841 12 is_stmt 0 view .LVU1751
 5470 022a 98F80FB0 		ldrb	fp, [r8, #15]	@ zero_extendqisi2
2841:src/keys.c    **** 		return process_test((const keycode)c);
 5471              		.loc 1 2841 5 view .LVU1752
 5472 022e BBF1070F 		cmp	fp, #7
 5473 0232 40F00784 		bne	.L1094
2844:src/keys.c    **** 		return process_status((const keycode)c);
 5474              		.loc 1 2844 2 is_stmt 1 view .LVU1753
2844:src/keys.c    **** 		return process_status((const keycode)c);
 5475              		.loc 1 2844 12 is_stmt 0 view .LVU1754
 5476 0236 98F80C30 		ldrb	r3, [r8, #12]	@ zero_extendqisi2
2844:src/keys.c    **** 		return process_status((const keycode)c);
 5477              		.loc 1 2844 5 view .LVU1755
 5478 023a 002B     		cmp	r3, #0
ARM GAS  /tmp/ccy15zOt.s 			page 180


 5479 023c 40F0AA84 		bne	.L1095
2850:src/keys.c    **** 		toggle_shift(SHIFT_F);
 5480              		.loc 1 2850 2 is_stmt 1 view .LVU1756
2850:src/keys.c    **** 		toggle_shift(SHIFT_F);
 5481              		.loc 1 2850 5 is_stmt 0 view .LVU1757
 5482 0240 292C     		cmp	r4, #41
 5483 0242 00F09185 		beq	.L1096
2854:src/keys.c    **** 		toggle_shift(SHIFT_G);
 5484              		.loc 1 2854 2 is_stmt 1 view .LVU1758
2854:src/keys.c    **** 		toggle_shift(SHIFT_G);
 5485              		.loc 1 2854 5 is_stmt 0 view .LVU1759
 5486 0246 2A2C     		cmp	r4, #42
 5487 0248 00F0A085 		beq	.L1097
2858:src/keys.c    **** 		toggle_shift(SHIFT_H);
 5488              		.loc 1 2858 2 is_stmt 1 view .LVU1760
2858:src/keys.c    **** 		toggle_shift(SHIFT_H);
 5489              		.loc 1 2858 5 is_stmt 0 view .LVU1761
 5490 024c 2B2C     		cmp	r4, #43
 5491 024e 00F0B085 		beq	.L1098
2867:src/keys.c    **** 		return process_arrow((const keycode)c);
 5492              		.loc 1 2867 2 is_stmt 1 view .LVU1762
2867:src/keys.c    **** 		return process_arrow((const keycode)c);
 5493              		.loc 1 2867 5 is_stmt 0 view .LVU1763
 5494 0252 5007     		lsls	r0, r2, #29
 5495 0254 00F1C884 		bmi	.L1099
2875:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 5496              		.loc 1 2875 2 is_stmt 1 view .LVU1764
2875:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 5497              		.loc 1 2875 8 is_stmt 0 view .LVU1765
 5498 0258 E4B2     		uxtb	r4, r4
 5499              	.LVL479:
 5500              	.LBB639:
 5501              	.LBI639:
 254:src/keys.c    **** {
 5502              		.loc 1 254 24 is_stmt 1 view .LVU1766
 5503              	.LBB640:
 256:src/keys.c    ****   int i, col, max;
 5504              		.loc 1 256 3 view .LVU1767
 257:src/keys.c    ****   const struct _map {
 5505              		.loc 1 257 3 view .LVU1768
 258:src/keys.c    ****     unsigned char key, cat[3];
 5506              		.loc 1 258 3 view .LVU1769
 263:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 5507              		.loc 1 263 3 view .LVU1770
 263:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 5508              		.loc 1 263 6 is_stmt 0 view .LVU1771
 5509 025a 212C     		cmp	r4, #33
 5510 025c 00F05785 		beq	.L1100
 266:src/keys.c    ****     /*
 5511              		.loc 1 266 3 is_stmt 1 view .LVU1772
 266:src/keys.c    ****     /*
 5512              		.loc 1 266 23 is_stmt 0 view .LVU1773
 5513 0260 1D49     		ldr	r1, .L1157+48
 5514 0262 D8F81430 		ldr	r3, [r8, #20]
 266:src/keys.c    ****     /*
 5515              		.loc 1 266 6 view .LVU1774
 5516 0266 1942     		tst	r1, r3
ARM GAS  /tmp/ccy15zOt.s 			page 181


 5517 0268 40F0FF84 		bne	.L658
 5518              	.LBB641:
 270:src/keys.c    **** #ifdef DM42
 5519              		.loc 1 270 5 is_stmt 1 view .LVU1775
 297:src/keys.c    ****       /*
 5520              		.loc 1 297 5 view .LVU1776
 297:src/keys.c    ****       /*
 5521              		.loc 1 297 8 is_stmt 0 view .LVU1777
 5522 026c 242C     		cmp	r4, #36
 5523 026e 03D1     		bne	.L659
 297:src/keys.c    ****       /*
 5524              		.loc 1 297 18 view .LVU1778
 5525 0270 BAF1020F 		cmp	r10, #2
 5526 0274 01F07382 		beq	.L868
 5527              	.L659:
 312:src/keys.c    ****       /*
 5528              		.loc 1 312 5 is_stmt 1 view .LVU1779
 312:src/keys.c    ****       /*
 5529              		.loc 1 312 8 is_stmt 0 view .LVU1780
 5530 0278 BAF1030F 		cmp	r10, #3
 5531 027c 3BD1     		bne	.L666
 5532              	.L855:
 322:src/keys.c    **** #ifndef WINGUI
 5533              		.loc 1 322 5 is_stmt 1 view .LVU1781
 5534              	.LVL480:
 324:src/keys.c    **** #else
 5535              		.loc 1 324 5 view .LVU1782
 324:src/keys.c    **** #else
 5536              		.loc 1 324 23 is_stmt 0 view .LVU1783
 5537 027e 174B     		ldr	r3, .L1157+52
 5538 0280 1B68     		ldr	r3, [r3]
 5539 0282 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 324:src/keys.c    **** #else
 5540              		.loc 1 324 27 view .LVU1784
 5541 0286 D907     		lsls	r1, r3, #31
 5542 0288 00F1D085 		bmi	.L869
 324:src/keys.c    **** #else
 5543              		.loc 1 324 73 view .LVU1785
 5544 028c 12F0020B 		ands	fp, r2, #2
 5545 0290 01F00C81 		beq	.L1101
 322:src/keys.c    **** #ifndef WINGUI
 5546              		.loc 1 322 8 view .LVU1786
 5547 0294 124B     		ldr	r3, .L1157+56
 328:src/keys.c    ****   }
 5548              		.loc 1 328 9 view .LVU1787
 5549 0296 0C21     		movs	r1, #12
 324:src/keys.c    **** #else
 5550              		.loc 1 324 73 view .LVU1788
 5551 0298 4FF0020C 		mov	ip, #2
 5552              	.LVL481:
 5553              	.L661:
 324:src/keys.c    **** #else
 5554              		.loc 1 324 73 view .LVU1789
 5555              	.LBE641:
 370:src/keys.c    ****     if (cp->key == c) {
 5556              		.loc 1 370 3 is_stmt 1 view .LVU1790
 370:src/keys.c    ****     if (cp->key == c) {
ARM GAS  /tmp/ccy15zOt.s 			page 182


 5557              		.loc 1 370 15 view .LVU1791
 5558 029c 181F     		subs	r0, r3, #4
 5559 029e 00EB8100 		add	r0, r0, r1, lsl #2
 5560              	.LBB642:
 324:src/keys.c    **** #else
 5561              		.loc 1 324 73 is_stmt 0 view .LVU1792
 5562 02a2 0421     		movs	r1, #4
 5563              	.LVL482:
 324:src/keys.c    **** #else
 5564              		.loc 1 324 73 view .LVU1793
 5565 02a4 22E0     		b	.L667
 5566              	.L1158:
 5567 02a6 00BF     		.align	2
 5568              	.L1157:
 5569 02a8 00000000 		.word	.LANCHOR12
 5570 02ac 00000000 		.word	Pause
 5571 02b0 00000000 		.word	JustStopped
 5572 02b4 00000000 		.word	OpCode
 5573 02b8 00000000 		.word	GoFast
 5574 02bc 00000000 		.word	Running
 5575 02c0 00000000 		.word	ShowRPN
 5576 02c4 00000000 		.word	JustDisplayed
 5577 02c8 00000000 		.word	StateWhileOn
 5578 02cc 00000000 		.word	OpCodeDisplayPending
 5579 02d0 00000000 		.word	DispMsg
 5580 02d4 00000000 		.word	.LC0
 5581 02d8 00080800 		.word	526336
 5582 02dc 00000000 		.word	main_ram
 5583 02e0 00000000 		.word	.LANCHOR11
 5584 02e4 00000000 		.word	WasDataEntry
 5585              	.LVL483:
 5586              	.L1103:
 324:src/keys.c    **** #else
 5587              		.loc 1 324 73 view .LVU1794
 5588 02e8 13F8041F 		ldrb	r1, [r3, #4]!	@ zero_extendqisi2
 5589              	.LVL484:
 5590              	.L667:
 324:src/keys.c    **** #else
 5591              		.loc 1 324 73 view .LVU1795
 5592              	.LBE642:
 371:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 5593              		.loc 1 371 5 is_stmt 1 view .LVU1796
 370:src/keys.c    ****     if (cp->key == c) {
 5594              		.loc 1 370 24 view .LVU1797
 370:src/keys.c    ****     if (cp->key == c) {
 5595              		.loc 1 370 15 view .LVU1798
 371:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 5596              		.loc 1 371 8 is_stmt 0 view .LVU1799
 5597 02ec 8C42     		cmp	r4, r1
 5598 02ee 00F0F384 		beq	.L1102
 370:src/keys.c    ****     if (cp->key == c) {
 5599              		.loc 1 370 3 view .LVU1800
 5600 02f2 8342     		cmp	r3, r0
 5601 02f4 F8D1     		bne	.L1103
 5602              	.LVL485:
 5603              	.L666:
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
ARM GAS  /tmp/ccy15zOt.s 			page 183


 5604              		.loc 1 376 3 is_stmt 1 view .LVU1801
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5605              		.loc 1 376 6 is_stmt 0 view .LVU1802
 5606 02f6 1107     		lsls	r1, r2, #28
 5607 02f8 00F1F780 		bmi	.L671
 5608              	.LVL486:
 5609              	.L670:
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5610              		.loc 1 376 6 view .LVU1803
 5611              	.LBE640:
 5612              	.LBE639:
2890:src/keys.c    **** 		return process_labellist((const keycode)c);
 5613              		.loc 1 2890 2 is_stmt 1 view .LVU1804
2890:src/keys.c    **** 		return process_labellist((const keycode)c);
 5614              		.loc 1 2890 6 is_stmt 0 view .LVU1805
 5615 02fc 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
2890:src/keys.c    **** 		return process_labellist((const keycode)c);
 5616              		.loc 1 2890 5 view .LVU1806
 5617 0300 4B07     		lsls	r3, r1, #29
 5618 0302 00F1A585 		bmi	.L1104
2893:src/keys.c    **** 		return process_registerlist((const keycode)c);
 5619              		.loc 1 2893 2 is_stmt 1 view .LVU1807
2893:src/keys.c    **** 		return process_registerlist((const keycode)c);
 5620              		.loc 1 2893 5 is_stmt 0 view .LVU1808
 5621 0306 0807     		lsls	r0, r1, #28
 5622 0308 00F1F086 		bmi	.L1105
2896:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 5623              		.loc 1 2896 2 is_stmt 1 view .LVU1809
2896:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 5624              		.loc 1 2896 5 is_stmt 0 view .LVU1810
 5625 030c 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
 5626 0310 002B     		cmp	r3, #0
 5627 0312 40F0AA87 		bne	.L1106
2899:src/keys.c    **** #ifndef INFRARED
 5628              		.loc 1 2899 2 is_stmt 1 view .LVU1811
2899:src/keys.c    **** #ifndef INFRARED
 5629              		.loc 1 2899 6 is_stmt 0 view .LVU1812
 5630 0316 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2899:src/keys.c    **** #ifndef INFRARED
 5631              		.loc 1 2899 5 view .LVU1813
 5632 031a 1807     		lsls	r0, r3, #28
 5633 031c 00F1B487 		bmi	.L1107
2912:src/keys.c    **** 		return process_cmplx((const keycode)c);
 5634              		.loc 1 2912 2 is_stmt 1 view .LVU1814
2912:src/keys.c    **** 		return process_cmplx((const keycode)c);
 5635              		.loc 1 2912 5 is_stmt 0 view .LVU1815
 5636 0320 12F0020B 		ands	fp, r2, #2
 5637 0324 41F06480 		bne	.L1108
2915:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5638              		.loc 1 2915 3 is_stmt 1 view .LVU1816
2915:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5639              		.loc 1 2915 24 is_stmt 0 view .LVU1817
 5640 0328 0AF1FF32 		add	r2, r10, #-1
2915:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5641              		.loc 1 2915 6 view .LVU1818
 5642 032c D2B2     		uxtb	r2, r2
 5643 032e 012A     		cmp	r2, #1
ARM GAS  /tmp/ccy15zOt.s 			page 184


 5644 0330 41F23E81 		bls	.L1109
2917:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 5645              		.loc 1 2917 3 is_stmt 1 view .LVU1819
2917:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 5646              		.loc 1 2917 6 is_stmt 0 view .LVU1820
 5647 0334 BAF1030F 		cmp	r10, #3
 5648 0338 00F0FD87 		beq	.L1110
2920:src/keys.c    **** 	}
 5649              		.loc 1 2920 3 is_stmt 1 view .LVU1821
 5650              	.LVL487:
 5651              	.LBB655:
 5652              	.LBI655:
 673:src/keys.c    **** {
 5653              		.loc 1 673 12 view .LVU1822
 5654              	.LBB656:
 675:src/keys.c    **** 		// Row 1
 5655              		.loc 1 675 2 view .LVU1823
 722:src/keys.c    **** 	int op = op_map[lc];
 5656              		.loc 1 722 2 view .LVU1824
 5657              	.LBB657:
 5658              	.LBI657:
 134:src/keys.c    **** {
 5659              		.loc 1 134 12 view .LVU1825
 5660              	.LBB658:
 136:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 5661              		.loc 1 136 2 view .LVU1826
 146:src/keys.c    **** }
 5662              		.loc 1 146 2 view .LVU1827
 146:src/keys.c    **** }
 5663              		.loc 1 146 2 is_stmt 0 view .LVU1828
 5664              	.LBE658:
 5665              	.LBE657:
 723:src/keys.c    **** 	
 5666              		.loc 1 723 2 is_stmt 1 view .LVU1829
 728:src/keys.c    **** 	  switch (c) {
 5667              		.loc 1 728 6 is_stmt 0 view .LVU1830
 5668 033c B44A     		ldr	r2, .L1159
 5669              	.LBB661:
 5670              	.LBB659:
 146:src/keys.c    **** }
 5671              		.loc 1 146 23 view .LVU1831
 5672 033e B548     		ldr	r0, .L1159+4
 5673              	.LBE659:
 5674              	.LBE661:
 728:src/keys.c    **** 	  switch (c) {
 5675              		.loc 1 728 6 view .LVU1832
 5676 0340 1268     		ldr	r2, [r2]
 5677              	.LBB662:
 5678              	.LBB660:
 146:src/keys.c    **** }
 5679              		.loc 1 146 23 view .LVU1833
 5680 0342 10F804C0 		ldrb	ip, [r0, r4]	@ zero_extendqisi2
 5681              	.LBE660:
 5682              	.LBE662:
 723:src/keys.c    **** 	
 5683              		.loc 1 723 17 view .LVU1834
 5684 0346 B448     		ldr	r0, .L1159+8
ARM GAS  /tmp/ccy15zOt.s 			page 185


 728:src/keys.c    **** 	  switch (c) {
 5685              		.loc 1 728 6 view .LVU1835
 5686 0348 92F8E827 		ldrb	r2, [r2, #2024]	@ zero_extendqisi2
 723:src/keys.c    **** 	
 5687              		.loc 1 723 17 view .LVU1836
 5688 034c 30F81CA0 		ldrh	r10, [r0, ip, lsl #1]
 5689              	.LVL488:
 728:src/keys.c    **** 	  switch (c) {
 5690              		.loc 1 728 5 view .LVU1837
 5691 0350 D207     		lsls	r2, r2, #31
 723:src/keys.c    **** 	
 5692              		.loc 1 723 6 view .LVU1838
 5693 0352 D346     		mov	fp, r10
 5694              	.LVL489:
 727:src/keys.c    **** 	if (UState.intm) {
 5695              		.loc 1 727 2 is_stmt 1 view .LVU1839
 728:src/keys.c    **** 	  switch (c) {
 5696              		.loc 1 728 2 view .LVU1840
 728:src/keys.c    **** 	  switch (c) {
 5697              		.loc 1 728 5 is_stmt 0 view .LVU1841
 5698 0354 00F1AC81 		bmi	.L1111
 759:src/keys.c    **** 	  }
 5699              		.loc 1 759 12 is_stmt 1 view .LVU1842
 764:src/keys.c    **** #ifdef DM42
 5700              		.loc 1 764 2 view .LVU1843
 5701 0358 2D2C     		cmp	r4, #45
 5702 035a 00F21581 		bhi	.L594
 5703 035e DFE814F0 		tbh	[pc, r4, lsl #1]
 5704              	.L858:
 5705 0362 630B     		.2byte	(.L820-.L858)/2
 5706 0364 5C0B     		.2byte	(.L821-.L858)/2
 5707 0366 1301     		.2byte	(.L594-.L858)/2
 5708 0368 7902     		.2byte	(.L819-.L858)/2
 5709 036a 1301     		.2byte	(.L594-.L858)/2
 5710 036c 1301     		.2byte	(.L594-.L858)/2
 5711 036e 2D02     		.2byte	(.L815-.L858)/2
 5712 0370 2D02     		.2byte	(.L815-.L858)/2
 5713 0372 1301     		.2byte	(.L594-.L858)/2
 5714 0374 1301     		.2byte	(.L594-.L858)/2
 5715 0376 1301     		.2byte	(.L594-.L858)/2
 5716 0378 1301     		.2byte	(.L594-.L858)/2
 5717 037a 1301     		.2byte	(.L594-.L858)/2
 5718 037c 1301     		.2byte	(.L594-.L858)/2
 5719 037e 1301     		.2byte	(.L594-.L858)/2
 5720 0380 1301     		.2byte	(.L594-.L858)/2
 5721 0382 3802     		.2byte	(.L818-.L858)/2
 5722 0384 1301     		.2byte	(.L594-.L858)/2
 5723 0386 2D02     		.2byte	(.L815-.L858)/2
 5724 0388 1301     		.2byte	(.L594-.L858)/2
 5725 038a 1301     		.2byte	(.L594-.L858)/2
 5726 038c 1301     		.2byte	(.L594-.L858)/2
 5727 038e 1301     		.2byte	(.L594-.L858)/2
 5728 0390 1301     		.2byte	(.L594-.L858)/2
 5729 0392 1301     		.2byte	(.L594-.L858)/2
 5730 0394 1301     		.2byte	(.L594-.L858)/2
 5731 0396 1301     		.2byte	(.L594-.L858)/2
 5732 0398 1301     		.2byte	(.L594-.L858)/2
ARM GAS  /tmp/ccy15zOt.s 			page 186


 5733 039a 1301     		.2byte	(.L594-.L858)/2
 5734 039c 1301     		.2byte	(.L594-.L858)/2
 5735 039e 1301     		.2byte	(.L594-.L858)/2
 5736 03a0 1301     		.2byte	(.L594-.L858)/2
 5737 03a2 1301     		.2byte	(.L594-.L858)/2
 5738 03a4 1301     		.2byte	(.L594-.L858)/2
 5739 03a6 1301     		.2byte	(.L594-.L858)/2
 5740 03a8 1301     		.2byte	(.L594-.L858)/2
 5741 03aa 1301     		.2byte	(.L594-.L858)/2
 5742 03ac 1301     		.2byte	(.L594-.L858)/2
 5743 03ae 1301     		.2byte	(.L594-.L858)/2
 5744 03b0 1301     		.2byte	(.L594-.L858)/2
 5745 03b2 1301     		.2byte	(.L594-.L858)/2
 5746 03b4 1301     		.2byte	(.L594-.L858)/2
 5747 03b6 1301     		.2byte	(.L594-.L858)/2
 5748 03b8 1301     		.2byte	(.L594-.L858)/2
 5749 03ba 7F02     		.2byte	(.L817-.L858)/2
 5750 03bc 9E01     		.2byte	(.L822-.L858)/2
 5751              	.LVL490:
 5752              		.p2align 1
 5753              	.L1072:
 764:src/keys.c    **** #ifdef DM42
 5754              		.loc 1 764 2 is_stmt 0 view .LVU1844
 5755 03be 974C     		ldr	r4, .L1159+12
 5756              	.LBE656:
 5757              	.LBE655:
 5758              	.LBE1175:
 5759              	.LBE1230:
3184:src/keys.c    ****   watchdog();
 5760              		.loc 1 3184 3 is_stmt 1 view .LVU1845
3184:src/keys.c    ****   watchdog();
 5761              		.loc 1 3184 17 is_stmt 0 view .LVU1846
 5762 03c0 0023     		movs	r3, #0
 5763 03c2 2360     		str	r3, [r4]
3185:src/keys.c    **** }
 5764              		.loc 1 3185 13 is_stmt 1 view .LVU1847
 5765 03c4 9AE6     		b	.L534
 5766              	.LVL491:
 5767              	.L571:
 5768              	.LBB1231:
 5769              	.LBB1176:
2781:src/keys.c    **** 	set_pc(0);
 5770              		.loc 1 2781 7 view .LVU1848
2781:src/keys.c    **** 	set_pc(0);
 5771              		.loc 1 2781 11 is_stmt 0 view .LVU1849
 5772 03c6 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
2781:src/keys.c    **** 	set_pc(0);
 5773              		.loc 1 2781 10 view .LVU1850
 5774 03c8 3BB1     		cbz	r3, .L573
2781:src/keys.c    **** 	set_pc(0);
 5775              		.loc 1 2781 20 view .LVU1851
 5776 03ca 914B     		ldr	r3, .L1159
 5777 03cc 1B68     		ldr	r3, [r3]
 5778 03ce B3F8E037 		ldrh	r3, [r3, #2016]
2781:src/keys.c    **** 	set_pc(0);
 5779              		.loc 1 2781 17 view .LVU1852
 5780 03d2 9B0B     		lsrs	r3, r3, #14
ARM GAS  /tmp/ccy15zOt.s 			page 187


 5781 03d4 032B     		cmp	r3, #3
 5782 03d6 00F02183 		beq	.L1112
 5783              	.L573:
2783:src/keys.c    ****       xeq_xrom();
 5784              		.loc 1 2783 7 is_stmt 1 view .LVU1853
2783:src/keys.c    ****       xeq_xrom();
 5785              		.loc 1 2783 13 is_stmt 0 view .LVU1854
 5786 03da 0027     		movs	r7, #0
 5787 03dc 2F70     		strb	r7, [r5]
2784:src/keys.c    ****       set_running_off();
 5788              		.loc 1 2784 7 is_stmt 1 view .LVU1855
 5789 03de FFF7FEFF 		bl	xeq_xrom
 5790              	.LVL492:
2785:src/keys.c    ****       DispMsg = "Stopped";
 5791              		.loc 1 2785 7 view .LVU1856
 5792 03e2 FFF7FEFF 		bl	set_running_off
 5793              	.LVL493:
2786:src/keys.c    ****       State2.disp_freeze = 0;
 5794              		.loc 1 2786 7 view .LVU1857
2787:src/keys.c    ****       return STATE_UNFINISHED;
 5795              		.loc 1 2787 26 is_stmt 0 view .LVU1858
 5796 03e6 8E4B     		ldr	r3, .L1159+16
2786:src/keys.c    ****       State2.disp_freeze = 0;
 5797              		.loc 1 2786 15 view .LVU1859
 5798 03e8 8E49     		ldr	r1, .L1159+20
2787:src/keys.c    ****       return STATE_UNFINISHED;
 5799              		.loc 1 2787 26 view .LVU1860
 5800 03ea DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
2786:src/keys.c    ****       State2.disp_freeze = 0;
 5801              		.loc 1 2786 15 view .LVU1861
 5802 03ec 8E48     		ldr	r0, .L1159+24
 5803 03ee 0860     		str	r0, [r1]
2787:src/keys.c    ****       return STATE_UNFINISHED;
 5804              		.loc 1 2787 7 is_stmt 1 view .LVU1862
2787:src/keys.c    ****       return STATE_UNFINISHED;
 5805              		.loc 1 2787 26 is_stmt 0 view .LVU1863
 5806 03f0 67F30412 		bfi	r2, r7, #4, #1
 5807 03f4 DA75     		strb	r2, [r3, #23]
2788:src/keys.c    ****     }
 5808              		.loc 1 2788 7 is_stmt 1 view .LVU1864
2788:src/keys.c    ****     }
 5809              		.loc 1 2788 14 is_stmt 0 view .LVU1865
 5810 03f6 4FF0330B 		mov	fp, #51
 5811 03fa 55E6     		b	.L565
 5812              	.LVL494:
 5813              	.L555:
2788:src/keys.c    ****     }
 5814              		.loc 1 2788 14 view .LVU1866
 5815 03fc 8B4E     		ldr	r6, .L1159+28
 5816 03fe 3368     		ldr	r3, [r6]
 5817 0400 A7E6     		b	.L537
 5818              	.L1081:
2788:src/keys.c    ****     }
 5819              		.loc 1 2788 14 view .LVU1867
 5820              	.LBE1176:
 5821              	.LBE1231:
3038:src/keys.c    ****       finish_RPN(); // RPN
ARM GAS  /tmp/ccy15zOt.s 			page 188


 5822              		.loc 1 3038 7 is_stmt 1 view .LVU1868
 5823 0402 8D20     		movs	r0, #141
 5824 0404 FFF7FEFF 		bl	clr_dot
 5825              	.LVL495:
3039:src/keys.c    ****     }
 5826              		.loc 1 3039 7 view .LVU1869
 5827 0408 FFF7FEFF 		bl	finish_RPN
 5828              	.LVL496:
 5829 040c 1BE6     		b	.L553
 5830              	.LVL497:
 5831              	.L1084:
3098:src/keys.c    ****     }
 5832              		.loc 1 3098 7 view .LVU1870
 5833 040e FFF7FEFF 		bl	finish_RPN
 5834              	.LVL498:
2952:src/keys.c    ****   if (was_paused && Pause == 0) {
 5835              		.loc 1 2952 7 is_stmt 0 view .LVU1871
 5836 0412 0027     		movs	r7, #0
 5837 0414 48E6     		b	.L565
 5838              	.LVL499:
 5839              	.L556:
3079:src/keys.c    **** #ifndef CONSOLE
 5840              		.loc 1 3079 7 is_stmt 1 view .LVU1872
 5841 0416 864B     		ldr	r3, .L1159+32
 5842 0418 8D20     		movs	r0, #141
 5843 041a 1968     		ldr	r1, [r3]
 5844 041c FFF7FEFF 		bl	dot
 5845              	.LVL500:
3081:src/keys.c    **** 	if (!WasDataEntry) {
 5846              		.loc 1 3081 7 view .LVU1873
3081:src/keys.c    **** 	if (!WasDataEntry) {
 5847              		.loc 1 3081 11 is_stmt 0 view .LVU1874
 5848 0420 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
3081:src/keys.c    **** 	if (!WasDataEntry) {
 5849              		.loc 1 3081 10 view .LVU1875
 5850 0424 9806     		lsls	r0, r3, #26
 5851 0426 3FF569AE 		bmi	.L534
3082:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 5852              		.loc 1 3082 2 is_stmt 1 view .LVU1876
3082:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 5853              		.loc 1 3082 6 is_stmt 0 view .LVU1877
 5854 042a 824B     		ldr	r3, .L1159+36
3082:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 5855              		.loc 1 3082 5 view .LVU1878
 5856 042c 1B68     		ldr	r3, [r3]
 5857 042e 002B     		cmp	r3, #0
 5858 0430 40F05D82 		bne	.L567
3084:src/keys.c    **** 	}
 5859              		.loc 1 3084 4 is_stmt 1 view .LVU1879
 5860              		.loc 1 3186 1 is_stmt 0 view .LVU1880
 5861 0434 03B0     		add	sp, sp, #12
 5862              		.cfi_remember_state
 5863              		.cfi_def_cfa_offset 36
 5864              		@ sp needed
 5865 0436 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5866              		.cfi_restore 14
 5867              		.cfi_restore 11
ARM GAS  /tmp/ccy15zOt.s 			page 189


 5868              		.cfi_restore 10
 5869              		.cfi_restore 9
 5870              		.cfi_restore 8
 5871              		.cfi_restore 7
 5872              		.cfi_restore 6
 5873              		.cfi_restore 5
 5874              		.cfi_restore 4
 5875              		.cfi_def_cfa_offset 0
3084:src/keys.c    **** 	}
 5876              		.loc 1 3084 4 view .LVU1881
 5877 043a FFF7FEBF 		b	display
 5878              	.LVL501:
 5879              	.L1082:
 5880              		.cfi_restore_state
3067:src/keys.c    ****       else {
 5881              		.loc 1 3067 2 is_stmt 1 view .LVU1882
 5882 043e FFF7FEFF 		bl	xeq_sst_bst
 5883              	.LVL502:
 5884 0442 7A4E     		ldr	r6, .L1159+28
 5885 0444 27E6     		b	.L558
 5886              	.L1085:
3001:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5887              		.loc 1 3001 28 is_stmt 0 discriminator 1 view .LVU1883
 5888 0446 FFF7FEFF 		bl	shift_down
 5889              	.LVL503:
3001:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
 5890              		.loc 1 3001 25 discriminator 1 view .LVU1884
 5891 044a 0028     		cmp	r0, #0
 5892 044c 3FF479AE 		beq	.L540
3003:src/keys.c    ****       }
 5893              		.loc 1 3003 2 is_stmt 1 view .LVU1885
3003:src/keys.c    ****       }
 5894              		.loc 1 3003 16 is_stmt 0 view .LVU1886
 5895 0450 734B     		ldr	r3, .L1159+16
 5896 0452 0022     		movs	r2, #0
 5897 0454 1A74     		strb	r2, [r3, #16]
 5898 0456 74E6     		b	.L540
 5899              	.L543:
2991:src/keys.c    **** 	  /*
 5900              		.loc 1 2991 10 is_stmt 1 view .LVU1887
2991:src/keys.c    **** 	  /*
 5901              		.loc 1 2991 14 is_stmt 0 view .LVU1888
 5902 0458 FFF7FEFF 		bl	keyticks
 5903              	.LVL504:
2991:src/keys.c    **** 	  /*
 5904              		.loc 1 2991 13 view .LVU1889
 5905 045c 0C28     		cmp	r0, #12
 5906 045e 7FF76BAE 		ble	.L542
2995:src/keys.c    **** 	  message("NULL", CNULL);
 5907              		.loc 1 2995 4 is_stmt 1 view .LVU1890
2996:src/keys.c    **** 	  // Force display update on key-up
 5908              		.loc 1 2996 4 is_stmt 0 view .LVU1891
 5909 0462 7548     		ldr	r0, .L1159+40
2995:src/keys.c    **** 	  message("NULL", CNULL);
 5910              		.loc 1 2995 11 view .LVU1892
 5911 0464 3760     		str	r7, [r6]
2996:src/keys.c    **** 	  // Force display update on key-up
ARM GAS  /tmp/ccy15zOt.s 			page 190


 5912              		.loc 1 2996 4 is_stmt 1 view .LVU1893
 5913 0466 3946     		mov	r1, r7
 5914 0468 FFF7FEFF 		bl	message
 5915              	.LVL505:
2998:src/keys.c    **** 	}
 5916              		.loc 1 2998 4 view .LVU1894
2998:src/keys.c    **** 	}
 5917              		.loc 1 2998 21 is_stmt 0 view .LVU1895
 5918 046c 6C4B     		ldr	r3, .L1159+16
 5919 046e DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 5920 0470 67F34512 		bfi	r2, r7, #5, #1
 5921 0474 DA75     		strb	r2, [r3, #23]
 5922 0476 5FE6     		b	.L542
 5923              	.LVL506:
 5924              	.L1093:
 5925              	.LBB1232:
 5926              	.LBB1177:
2839:src/keys.c    **** 
 5927              		.loc 1 2839 3 is_stmt 1 view .LVU1896
 5928              	.LBB680:
 5929              	.LBB681:
1229:src/keys.c    **** 	State2.dot = 0;
 5930              		.loc 1 1229 15 is_stmt 0 view .LVU1897
 5931 0478 22F06203 		bic	r3, r2, #98
 5932              	.LBE681:
 5933              	.LBE680:
2839:src/keys.c    **** 
 5934              		.loc 1 2839 10 view .LVU1898
 5935 047c E4B2     		uxtb	r4, r4
 5936              	.LVL507:
 5937              	.LBB695:
 5938              	.LBI680:
1219:src/keys.c    **** 	static const unsigned char op_map[][2] = {
 5939              		.loc 1 1219 12 is_stmt 1 view .LVU1899
 5940              	.LBB691:
1220:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
 5941              		.loc 1 1220 2 view .LVU1900
1225:src/keys.c    **** 	int f = State2.dot;
 5942              		.loc 1 1225 2 view .LVU1901
1229:src/keys.c    **** 	State2.dot = 0;
 5943              		.loc 1 1229 15 is_stmt 0 view .LVU1902
 5944 047e 88F81530 		strb	r3, [r8, #21]
1225:src/keys.c    **** 	int f = State2.dot;
 5945              		.loc 1 1225 20 view .LVU1903
 5946 0482 C2F3400A 		ubfx	r10, r2, #1, #1
 5947              	.LVL508:
1226:src/keys.c    **** 
 5948              		.loc 1 1226 2 is_stmt 1 view .LVU1904
1226:src/keys.c    **** 
 5949              		.loc 1 1226 16 is_stmt 0 view .LVU1905
 5950 0486 C2F38019 		ubfx	r9, r2, #6, #1
 5951              	.LVL509:
1228:src/keys.c    **** 	State2.cmplx = 0;
 5952              		.loc 1 1228 2 is_stmt 1 view .LVU1906
1229:src/keys.c    **** 	State2.dot = 0;
 5953              		.loc 1 1229 2 view .LVU1907
1230:src/keys.c    **** #ifdef DM42
ARM GAS  /tmp/ccy15zOt.s 			page 191


 5954              		.loc 1 1230 2 view .LVU1908
1232:src/keys.c    **** #endif
 5955              		.loc 1 1232 2 view .LVU1909
 5956              	.LBB682:
 5957              	.LBI682:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 5958              		.loc 1 102 13 view .LVU1910
 5959              	.LBE682:
 5960              	.LBE691:
 5961              	.LBE695:
 5962              	.LBE1177:
 5963              	.LBE1232:
 103:src/keys.c    **** }
 5964              		.loc 1 103 2 view .LVU1911
 5965              	.LBB1233:
 5966              	.LBB1178:
 5967              	.LBB696:
 5968              	.LBB692:
 5969              	.LBB689:
 5970              	.LBB683:
 5971              	.LBI683:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 5972              		.loc 1 92 20 view .LVU1912
 5973              	.LBB684:
  93:src/keys.c    **** 	State2.shifts = shift;
 5974              		.loc 1 93 2 view .LVU1913
 5975              	.LBB685:
 5976              	.LBI685:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 5977              		.loc 1 84 13 view .LVU1914
 5978              	.LBB686:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5979              		.loc 1 85 2 view .LVU1915
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5980              		.loc 1 85 18 is_stmt 0 view .LVU1916
 5981 048a FFF7FEFF 		bl	shift_down
 5982              	.LVL510:
  86:src/keys.c    **** }
 5983              		.loc 1 86 2 is_stmt 1 view .LVU1917
 5984              	.LBE686:
 5985              	.LBE685:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5986              		.loc 1 94 2 view .LVU1918
 5987              	.LBE684:
 5988              	.LBE683:
 5989              	.LBE689:
1234:src/keys.c    **** 
 5990              		.loc 1 1234 2 is_stmt 0 view .LVU1919
 5991 048e 2A2C     		cmp	r4, #42
 5992              	.LBB690:
 5993              	.LBB688:
 5994              	.LBB687:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 5995              		.loc 1 94 16 view .LVU1920
 5996 0490 88F810B0 		strb	fp, [r8, #16]
  96:src/keys.c    **** }
 5997              		.loc 1 96 2 is_stmt 1 view .LVU1921
ARM GAS  /tmp/ccy15zOt.s 			page 192


 5998              	.LVL511:
  96:src/keys.c    **** }
 5999              		.loc 1 96 2 is_stmt 0 view .LVU1922
 6000              	.LBE687:
 6001              	.LBE688:
 6002              	.LBE690:
1234:src/keys.c    **** 
 6003              		.loc 1 1234 2 is_stmt 1 view .LVU1923
 6004 0494 00F25683 		bhi	.L615
 6005 0498 282C     		cmp	r4, #40
 6006 049a 00F27084 		bhi	.L616
 6007 049e 013C     		subs	r4, r4, #1
 6008              	.LVL512:
1234:src/keys.c    **** 
 6009              		.loc 1 1234 2 is_stmt 0 view .LVU1924
 6010 04a0 E3B2     		uxtb	r3, r4
 6011 04a2 022B     		cmp	r3, #2
 6012 04a4 00F28781 		bhi	.L1069
1239:src/keys.c    **** 
 6013              		.loc 1 1239 3 is_stmt 1 view .LVU1925
1239:src/keys.c    **** 
 6014              		.loc 1 1239 54 is_stmt 0 view .LVU1926
 6015 04a8 644A     		ldr	r2, .L1159+44
 6016 04aa 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 6017 04ae 02EB4404 		add	r4, r2, r4, lsl #1
 6018              	.LVL513:
1239:src/keys.c    **** 
 6019              		.loc 1 1239 27 view .LVU1927
 6020 04b2 BAF1000F 		cmp	r10, #0
1239:src/keys.c    **** 
 6021              		.loc 1 1239 54 view .LVU1928
 6022 04b6 14F809B0 		ldrb	fp, [r4, r9]	@ zero_extendqisi2
1239:src/keys.c    **** 
 6023              		.loc 1 1239 27 view .LVU1929
 6024 04ba 14BF     		ite	ne
 6025 04bc 4FF4A062 		movne	r2, #1280
 6026 04c0 4FF40072 		moveq	r2, #512
1239:src/keys.c    **** 
 6027              		.loc 1 1239 37 view .LVU1930
 6028 04c4 4BEA020B 		orr	fp, fp, r2
 6029 04c8 5846     		mov	r0, fp
 6030              	.LVL514:
 6031              	.L620:
1239:src/keys.c    **** 
 6032              		.loc 1 1239 37 view .LVU1931
 6033              	.LBE692:
 6034              	.LBE696:
 6035              	.LBE1178:
 6036              	.LBE1233:
3145:src/keys.c    **** 	NonProgrammable = 0;
 6037              		.loc 1 3145 7 is_stmt 1 view .LVU1932
3145:src/keys.c    **** 	NonProgrammable = 0;
 6038              		.loc 1 3145 10 is_stmt 0 view .LVU1933
 6039 04ca 13F04003 		ands	r3, r3, #64
 6040 04ce 00F06884 		beq	.L1113
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6041              		.loc 1 3146 2 is_stmt 1 view .LVU1934
ARM GAS  /tmp/ccy15zOt.s 			page 193


3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6042              		.loc 1 3146 18 is_stmt 0 view .LVU1935
 6043 04d2 5B4B     		ldr	r3, .L1159+48
 6044 04d4 0022     		movs	r2, #0
 6045 04d6 1A60     		str	r2, [r3]
3147:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6046              		.loc 1 3147 2 is_stmt 1 view .LVU1936
 6047              	.LVL515:
 6048              	.L835:
3160:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 6049              		.loc 1 3160 4 view .LVU1937
3160:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 6050              		.loc 1 3160 11 is_stmt 0 view .LVU1938
 6051 04d8 5A4A     		ldr	r2, .L1159+52
3161:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 6052              		.loc 1 3161 25 view .LVU1939
 6053 04da 5B4B     		ldr	r3, .L1159+56
3160:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 6054              		.loc 1 3160 11 view .LVU1940
 6055 04dc 1060     		str	r0, [r2]
3161:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 6056              		.loc 1 3161 4 is_stmt 1 view .LVU1941
3161:src/keys.c    **** 	  finish_RPN(); // Update the RPN annunciator
 6057              		.loc 1 3161 25 is_stmt 0 view .LVU1942
 6058 04de 0122     		movs	r2, #1
 6059 04e0 4E4C     		ldr	r4, .L1159+12
 6060 04e2 1A60     		str	r2, [r3]
3162:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
 6061              		.loc 1 3162 4 is_stmt 1 view .LVU1943
 6062 04e4 FFF7FEFF 		bl	finish_RPN
 6063              	.LVL516:
3163:src/keys.c    **** 	}
 6064              		.loc 1 3163 4 view .LVU1944
 6065 04e8 06E6     		b	.L841
 6066              	.LVL517:
 6067              	.L671:
 6068              	.LBB1234:
 6069              	.LBB1179:
2888:src/keys.c    **** 
 6070              		.loc 1 2888 3 view .LVU1945
 6071              	.LBB697:
 6072              	.LBI697:
2368:src/keys.c    **** 	enum shifts shift = reset_shift();
 6073              		.loc 1 2368 12 view .LVU1946
 6074              	.LBB698:
2369:src/keys.c    **** 	unsigned int ch = 0;
 6075              		.loc 1 2369 2 view .LVU1947
 6076              	.LBB699:
 6077              	.LBI699:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 6078              		.loc 1 102 13 view .LVU1948
 6079              	.LBE699:
 6080              	.LBE698:
 6081              	.LBE697:
 6082              	.LBE1179:
 6083              	.LBE1234:
 103:src/keys.c    **** }
ARM GAS  /tmp/ccy15zOt.s 			page 194


 6084              		.loc 1 103 2 view .LVU1949
 6085              	.LBB1235:
 6086              	.LBB1180:
 6087              	.LBB729:
 6088              	.LBB725:
 6089              	.LBB706:
 6090              	.LBB700:
 6091              	.LBI700:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 6092              		.loc 1 92 20 view .LVU1950
 6093              	.LBB701:
  93:src/keys.c    **** 	State2.shifts = shift;
 6094              		.loc 1 93 2 view .LVU1951
 6095              	.LBB702:
 6096              	.LBI702:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 6097              		.loc 1 84 13 view .LVU1952
 6098              	.LBB703:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 6099              		.loc 1 85 2 view .LVU1953
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 6100              		.loc 1 85 18 is_stmt 0 view .LVU1954
 6101 04ea FFF7FEFF 		bl	shift_down
 6102              	.LVL518:
  86:src/keys.c    **** }
 6103              		.loc 1 86 2 is_stmt 1 view .LVU1955
  86:src/keys.c    **** }
 6104              		.loc 1 86 52 is_stmt 0 view .LVU1956
 6105 04ee 0146     		mov	r1, r0
 6106 04f0 08B9     		cbnz	r0, .L669
 6107 04f2 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 6108              	.L669:
 6109              	.LVL519:
  86:src/keys.c    **** }
 6110              		.loc 1 86 52 view .LVU1957
 6111              	.LBE703:
 6112              	.LBE702:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 6113              		.loc 1 94 2 is_stmt 1 view .LVU1958
 6114              	.LBE701:
 6115              	.LBE700:
 6116              	.LBE706:
2373:src/keys.c    **** 		// Alpha catalogue from within multi character command
 6117              		.loc 1 2373 5 is_stmt 0 view .LVU1959
 6118 04f6 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
 6119              	.LBB707:
 6120              	.LBB705:
 6121              	.LBB704:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 6122              		.loc 1 94 16 view .LVU1960
 6123 04fa 0022     		movs	r2, #0
 6124 04fc 88F81020 		strb	r2, [r8, #16]
  96:src/keys.c    **** }
 6125              		.loc 1 96 2 is_stmt 1 view .LVU1961
 6126              	.LVL520:
  96:src/keys.c    **** }
 6127              		.loc 1 96 2 is_stmt 0 view .LVU1962
ARM GAS  /tmp/ccy15zOt.s 			page 195


 6128              	.LBE704:
 6129              	.LBE705:
 6130              	.LBE707:
2370:src/keys.c    **** 	unsigned int opcode;
 6131              		.loc 1 2370 2 is_stmt 1 view .LVU1963
2371:src/keys.c    **** 
 6132              		.loc 1 2371 2 view .LVU1964
2373:src/keys.c    **** 		// Alpha catalogue from within multi character command
 6133              		.loc 1 2373 2 view .LVU1965
2373:src/keys.c    **** 		// Alpha catalogue from within multi character command
 6134              		.loc 1 2373 5 is_stmt 0 view .LVU1966
 6135 0500 002B     		cmp	r3, #0
 6136 0502 40F05B87 		bne	.L1114
2382:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
 6137              		.loc 1 2382 2 is_stmt 1 view .LVU1967
 6138 0506 102C     		cmp	r4, #16
 6139 0508 01F07881 		beq	.L674
 6140 050c 242C     		cmp	r4, #36
 6141 050e 01F0AA81 		beq	.L675
 6142 0512 0C2C     		cmp	r4, #12
 6143 0514 01F07F81 		beq	.L1115
 6144              	.L676:
2415:src/keys.c    **** 	if (ch == 0)
 6145              		.loc 1 2415 2 view .LVU1968
 6146              	.LBB708:
 6147              	.LBB709:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 6148              		.loc 1 434 6 is_stmt 0 view .LVU1969
 6149 0518 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 6150              	.LVL521:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 6151              		.loc 1 434 6 view .LVU1970
 6152              	.LBE709:
 6153              	.LBI708:
 384:src/keys.c    **** {
 6154              		.loc 1 384 12 is_stmt 1 view .LVU1971
 6155              	.LBB714:
 386:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6156              		.loc 1 386 2 view .LVU1972
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 6157              		.loc 1 434 2 view .LVU1973
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 6158              		.loc 1 434 5 is_stmt 0 view .LVU1974
 6159 051c DA06     		lsls	r2, r3, #27
 6160 051e 03D5     		bpl	.L679
 435:src/keys.c    **** 			shift = SHIFT_LC_N;
 6161              		.loc 1 435 3 is_stmt 1 view .LVU1975
 435:src/keys.c    **** 			shift = SHIFT_LC_N;
 6162              		.loc 1 435 6 is_stmt 0 view .LVU1976
 6163 0520 0029     		cmp	r1, #0
 6164 0522 41F02583 		bne	.L1116
 436:src/keys.c    **** 		else if (shift == SHIFT_G)
 6165              		.loc 1 436 10 view .LVU1977
 6166 0526 0421     		movs	r1, #4
 6167              	.LVL522:
 6168              	.L679:
 440:src/keys.c    **** }
ARM GAS  /tmp/ccy15zOt.s 			page 196


 6169              		.loc 1 440 2 is_stmt 1 view .LVU1978
 6170              	.LBB710:
 6171              	.LBI710:
 119:src/keys.c    **** {
 6172              		.loc 1 119 12 view .LVU1979
 6173              	.LBB711:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 6174              		.loc 1 121 2 view .LVU1980
 131:src/keys.c    **** }
 6175              		.loc 1 131 2 view .LVU1981
 131:src/keys.c    **** }
 6176              		.loc 1 131 23 is_stmt 0 view .LVU1982
 6177 0528 484B     		ldr	r3, .L1159+60
 6178              	.LBE711:
 6179              	.LBE710:
 440:src/keys.c    **** }
 6180              		.loc 1 440 49 view .LVU1983
 6181 052a 494A     		ldr	r2, .L1159+64
 6182              	.LBB713:
 6183              	.LBB712:
 131:src/keys.c    **** }
 6184              		.loc 1 131 23 view .LVU1984
 6185 052c 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 6186              	.LBE712:
 6187              	.LBE713:
 440:src/keys.c    **** }
 6188              		.loc 1 440 49 view .LVU1985
 6189 052e 0620     		movs	r0, #6
 6190 0530 00FB0323 		mla	r3, r0, r3, r2
 6191              	.LBE714:
 6192              	.LBE708:
2415:src/keys.c    **** 	if (ch == 0)
 6193              		.loc 1 2415 5 view .LVU1986
 6194 0534 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 6195              	.LVL523:
2416:src/keys.c    **** 		return STATE_UNFINISHED;
 6196              		.loc 1 2416 2 is_stmt 1 view .LVU1987
2416:src/keys.c    **** 		return STATE_UNFINISHED;
 6197              		.loc 1 2416 5 is_stmt 0 view .LVU1988
 6198 0536 002B     		cmp	r3, #0
 6199 0538 00F03D81 		beq	.L1069
 6200              	.L673:
2419:src/keys.c    **** 		State2.digval = ch;
 6201              		.loc 1 2419 2 is_stmt 1 view .LVU1989
2419:src/keys.c    **** 		State2.digval = ch;
 6202              		.loc 1 2419 12 is_stmt 0 view .LVU1990
 6203 053c 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
2419:src/keys.c    **** 		State2.digval = ch;
 6204              		.loc 1 2419 5 view .LVU1991
 6205 0540 002A     		cmp	r2, #0
 6206 0542 01F08781 		beq	.L1117
2423:src/keys.c    **** 		State2.digval2 = ch;
 6207              		.loc 1 2423 9 is_stmt 1 view .LVU1992
2423:src/keys.c    **** 		State2.digval2 = ch;
 6208              		.loc 1 2423 12 is_stmt 0 view .LVU1993
 6209 0546 012A     		cmp	r2, #1
 6210 0548 01F0A181 		beq	.L1118
ARM GAS  /tmp/ccy15zOt.s 			page 197


2428:src/keys.c    **** 
 6211              		.loc 1 2428 2 is_stmt 1 view .LVU1994
 6212              	.LBB716:
 6213              	.LBI716:
2361:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 6214              		.loc 1 2361 13 view .LVU1995
 6215              	.LBB717:
2363:src/keys.c    **** 	if (! State2.alphas )
 6216              		.loc 1 2363 2 view .LVU1996
2363:src/keys.c    **** 	if (! State2.alphas )
 6217              		.loc 1 2363 15 is_stmt 0 view .LVU1997
 6218 054c 98F81510 		ldrb	r1, [r8, #21]	@ zero_extendqisi2
2364:src/keys.c    **** 		State2.alphashift = 0;
 6219              		.loc 1 2364 6 view .LVU1998
 6220 0550 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2363:src/keys.c    **** 	if (! State2.alphas )
 6221              		.loc 1 2363 15 view .LVU1999
 6222 0554 6FF3C301 		bfc	r1, #3, #1
 6223 0558 88F81510 		strb	r1, [r8, #21]
2364:src/keys.c    **** 		State2.alphashift = 0;
 6224              		.loc 1 2364 2 is_stmt 1 view .LVU2000
2364:src/keys.c    **** 		State2.alphashift = 0;
 6225              		.loc 1 2364 5 is_stmt 0 view .LVU2001
 6226 055c 12F00801 		ands	r1, r2, #8
2365:src/keys.c    **** }
 6227              		.loc 1 2365 3 is_stmt 1 view .LVU2002
2365:src/keys.c    **** }
 6228              		.loc 1 2365 21 is_stmt 0 view .LVU2003
 6229 0560 04BF     		itt	eq
 6230 0562 61F30412 		bfieq	r2, r1, #4, #1
 6231 0566 88F81620 		strbeq	r2, [r8, #22]
 6232              	.LVL524:
 6233              	.L678:
2365:src/keys.c    **** }
 6234              		.loc 1 2365 21 view .LVU2004
 6235              	.LBE717:
 6236              	.LBE716:
2431:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6237              		.loc 1 2431 2 is_stmt 1 view .LVU2005
2433:src/keys.c    **** }
 6238              		.loc 1 2433 2 view .LVU2006
2431:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6239              		.loc 1 2431 21 is_stmt 0 view .LVU2007
 6240 056a 98F81FB0 		ldrb	fp, [r8, #31]	@ zero_extendqisi2
2432:src/keys.c    **** 	return opcode;
 6241              		.loc 1 2432 17 view .LVU2008
 6242 056e B8F80810 		ldrh	r1, [r8, #8]
2432:src/keys.c    **** 	return opcode;
 6243              		.loc 1 2432 34 view .LVU2009
 6244 0572 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
2431:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6245              		.loc 1 2431 29 view .LVU2010
 6246 0576 4FEA0B2B 		lsl	fp, fp, #8
2431:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6247              		.loc 1 2431 18 view .LVU2011
 6248 057a 0BF5704B 		add	fp, fp, #61440
2432:src/keys.c    **** 	return opcode;
ARM GAS  /tmp/ccy15zOt.s 			page 198


 6249              		.loc 1 2432 9 view .LVU2012
 6250 057e 8B44     		add	fp, fp, r1
2432:src/keys.c    **** 	return opcode;
 6251              		.loc 1 2432 25 view .LVU2013
 6252 0580 0BEB024B 		add	fp, fp, r2, lsl #16
2431:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6253              		.loc 1 2431 9 view .LVU2014
 6254 0584 0BEB036B 		add	fp, fp, r3, lsl #24
 6255              	.LVL525:
 6256              	.L594:
2431:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6257              		.loc 1 2431 9 view .LVU2015
 6258              	.LBE725:
 6259              	.LBE729:
 6260              	.LBE1180:
 6261              	.LBE1235:
3109:src/keys.c    ****     case STATE_SST:
 6262              		.loc 1 3109 5 is_stmt 1 view .LVU2016
 6263 0588 ABF12B03 		sub	r3, fp, #43
 6264 058c 082B     		cmp	r3, #8
 6265 058e 61D8     		bhi	.L824
 6266 0590 01A2     		adr	r2, .L825
 6267 0592 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6268 0596 00BF     		.p2align 2
 6269              	.L825:
 6270 0598 BD050000 		.word	.L830+1
 6271 059c BD050000 		.word	.L830+1
 6272 05a0 55060000 		.word	.L824+1
 6273 05a4 E1050000 		.word	.L759+1
 6274 05a8 D3050000 		.word	.L755+1
 6275 05ac FB050000 		.word	.L752+1
 6276 05b0 9D010000 		.word	.L574+1
 6277 05b4 A9000000 		.word	.L565+1
 6278 05b8 A9000000 		.word	.L565+1
 6279              		.p2align 1
 6280              	.L830:
3136:src/keys.c    **** 	set_window(c);
 6281              		.loc 1 3136 7 view .LVU2017
3136:src/keys.c    **** 	set_window(c);
 6282              		.loc 1 3136 12 is_stmt 0 view .LVU2018
 6283 05bc FFF7FEFF 		bl	is_bad_cmdline
 6284              	.LVL526:
3136:src/keys.c    **** 	set_window(c);
 6285              		.loc 1 3136 10 view .LVU2019
 6286 05c0 0346     		mov	r3, r0
 6287 05c2 0028     		cmp	r0, #0
 6288 05c4 7FF470AD 		bne	.L565
3137:src/keys.c    ****       break;
 6289              		.loc 1 3137 2 is_stmt 1 view .LVU2020
 6290 05c8 5846     		mov	r0, fp
2952:src/keys.c    ****   if (was_paused && Pause == 0) {
 6291              		.loc 1 2952 7 is_stmt 0 view .LVU2021
 6292 05ca 1F46     		mov	r7, r3
3137:src/keys.c    ****       break;
 6293              		.loc 1 3137 2 view .LVU2022
 6294 05cc FFF7FEFF 		bl	set_window
 6295              	.LVL527:
ARM GAS  /tmp/ccy15zOt.s 			page 199


 6296 05d0 6AE5     		b	.L565
 6297              	.LVL528:
 6298              	.L755:
3117:src/keys.c    ****       break;
 6299              		.loc 1 3117 7 is_stmt 1 view .LVU2023
 6300 05d2 4FF0FF30 		mov	r0, #-1
 6301 05d6 FFF7FEFF 		bl	xeq_sst_bst
 6302              	.LVL529:
3118:src/keys.c    **** 
 6303              		.loc 1 3118 7 view .LVU2024
 6304 05da 4FF02F0B 		mov	fp, #47
 6305 05de 63E5     		b	.L565
 6306              	.L759:
3111:src/keys.c    ****       OpCodeDisplayPending = 0;
 6307              		.loc 1 3111 7 view .LVU2025
3111:src/keys.c    ****       OpCodeDisplayPending = 0;
 6308              		.loc 1 3111 14 is_stmt 0 view .LVU2026
 6309 05e0 1849     		ldr	r1, .L1159+52
3112:src/keys.c    ****       xeq_sst_bst(0);
 6310              		.loc 1 3112 28 view .LVU2027
 6311 05e2 194A     		ldr	r2, .L1159+56
3111:src/keys.c    ****       OpCodeDisplayPending = 0;
 6312              		.loc 1 3111 14 view .LVU2028
 6313 05e4 2E23     		movs	r3, #46
3112:src/keys.c    ****       xeq_sst_bst(0);
 6314              		.loc 1 3112 28 view .LVU2029
 6315 05e6 0020     		movs	r0, #0
3111:src/keys.c    ****       OpCodeDisplayPending = 0;
 6316              		.loc 1 3111 14 view .LVU2030
 6317 05e8 0B60     		str	r3, [r1]
3112:src/keys.c    ****       xeq_sst_bst(0);
 6318              		.loc 1 3112 7 is_stmt 1 view .LVU2031
3114:src/keys.c    **** 
 6319              		.loc 1 3114 7 is_stmt 0 view .LVU2032
 6320 05ea 9B46     		mov	fp, r3
3112:src/keys.c    ****       xeq_sst_bst(0);
 6321              		.loc 1 3112 28 view .LVU2033
 6322 05ec 1060     		str	r0, [r2]
3113:src/keys.c    ****       break;
 6323              		.loc 1 3113 7 is_stmt 1 view .LVU2034
 6324 05ee FFF7FEFF 		bl	xeq_sst_bst
 6325              	.LVL530:
3114:src/keys.c    **** 
 6326              		.loc 1 3114 7 view .LVU2035
 6327 05f2 59E5     		b	.L565
 6328              	.LVL531:
 6329              	.L746:
 6330              	.LBB1236:
 6331              	.LBB1181:
 6332              	.LBB730:
 6333              	.LBB731:
1429:src/keys.c    **** 			return STATE_BACKSPACE;
 6334              		.loc 1 1429 3 view .LVU2036
1429:src/keys.c    **** 			return STATE_BACKSPACE;
 6335              		.loc 1 1429 6 is_stmt 0 view .LVU2037
 6336 05f4 0028     		cmp	r0, #0
 6337 05f6 41F0EE82 		bne	.L753
ARM GAS  /tmp/ccy15zOt.s 			page 200


 6338              	.LVL532:
 6339              	.L752:
1429:src/keys.c    **** 			return STATE_BACKSPACE;
 6340              		.loc 1 1429 6 view .LVU2038
 6341              	.LBE731:
 6342              	.LBE730:
 6343              	.LBE1181:
 6344              	.LBE1236:
3121:src/keys.c    **** 	delprog();
 6345              		.loc 1 3121 7 is_stmt 1 view .LVU2039
3121:src/keys.c    **** 	delprog();
 6346              		.loc 1 3121 11 is_stmt 0 view .LVU2040
 6347 05fa 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3121:src/keys.c    **** 	delprog();
 6348              		.loc 1 3121 10 view .LVU2041
 6349 05fe 5A06     		lsls	r2, r3, #25
 6350 0600 40F1EB80 		bpl	.L831
3123:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 6351              		.loc 1 3123 12 is_stmt 1 view .LVU2042
3123:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 6352              		.loc 1 3123 15 is_stmt 0 view .LVU2043
 6353 0604 1C07     		lsls	r4, r3, #28
 6354 0606 00F10D82 		bmi	.L832
 6355              	.L1064:
 6356              	.LBB1237:
3126:src/keys.c    ****       }
 6357              		.loc 1 3126 9 view .LVU2044
 6358 060a 4FF0300B 		mov	fp, #48
 6359 060e 4BE5     		b	.L565
 6360              	.L1160:
 6361              		.align	2
 6362              	.L1159:
 6363 0610 00000000 		.word	main_ram
 6364 0614 00000000 		.word	.LANCHOR18
 6365 0618 00000000 		.word	.LANCHOR22
 6366 061c 00000000 		.word	JustDisplayed
 6367 0620 00000000 		.word	StateWhileOn
 6368 0624 00000000 		.word	DispMsg
 6369 0628 0C000000 		.word	.LC2
 6370 062c 00000000 		.word	Running
 6371 0630 00000000 		.word	ShowRPN
 6372 0634 00000000 		.word	WasDataEntry
 6373 0638 04000000 		.word	.LC1
 6374 063c 00000000 		.word	.LANCHOR13
 6375 0640 00000000 		.word	NonProgrammable
 6376 0644 00000000 		.word	OpCode
 6377 0648 00000000 		.word	OpCodeDisplayPending
 6378 064c 00000000 		.word	.LANCHOR1
 6379 0650 00000000 		.word	.LANCHOR9
 6380              	.LVL533:
 6381              	.L824:
3126:src/keys.c    ****       }
 6382              		.loc 1 3126 9 view .LVU2045
 6383              	.LBE1237:
3145:src/keys.c    **** 	NonProgrammable = 0;
 6384              		.loc 1 3145 7 is_stmt 1 view .LVU2046
3145:src/keys.c    **** 	NonProgrammable = 0;
ARM GAS  /tmp/ccy15zOt.s 			page 201


 6385              		.loc 1 3145 11 is_stmt 0 view .LVU2047
 6386 0654 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3145:src/keys.c    **** 	NonProgrammable = 0;
 6387              		.loc 1 3145 10 view .LVU2048
 6388 0658 5C06     		lsls	r4, r3, #25
 6389 065a 40F13E81 		bpl	.L838
 6390 065e CC4A     		ldr	r2, .L1161
 6391 0660 5846     		mov	r0, fp
 6392              	.LVL534:
 6393              	.L839:
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6394              		.loc 1 3146 2 is_stmt 1 view .LVU2049
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6395              		.loc 1 3146 18 is_stmt 0 view .LVU2050
 6396 0662 0023     		movs	r3, #0
3147:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6397              		.loc 1 3147 5 view .LVU2051
 6398 0664 1428     		cmp	r0, #20
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6399              		.loc 1 3146 18 view .LVU2052
 6400 0666 1360     		str	r3, [r2]
3147:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6401              		.loc 1 3147 2 is_stmt 1 view .LVU2053
3147:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6402              		.loc 1 3147 5 is_stmt 0 view .LVU2054
 6403 0668 3FF636AF 		bhi	.L835
3148:src/keys.c    **** 	    // Data entry key
 6404              		.loc 1 3148 4 is_stmt 1 view .LVU2055
3148:src/keys.c    **** 	    // Data entry key
 6405              		.loc 1 3148 7 is_stmt 0 view .LVU2056
 6406 066c BBF1000F 		cmp	fp, #0
 6407 0670 05D1     		bne	.L837
3148:src/keys.c    **** 	    // Data entry key
 6408              		.loc 1 3148 38 discriminator 1 view .LVU2057
 6409 0672 FFF7FEFF 		bl	is_bad_cmdline
 6410              	.LVL535:
3148:src/keys.c    **** 	    // Data entry key
 6411              		.loc 1 3148 34 discriminator 1 view .LVU2058
 6412 0676 0028     		cmp	r0, #0
 6413 0678 40F06182 		bne	.L894
3147:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6414              		.loc 1 3147 32 view .LVU2059
 6415 067c 5846     		mov	r0, fp
 6416              	.L837:
3151:src/keys.c    **** #endif
 6417              		.loc 1 3151 6 is_stmt 1 view .LVU2060
3153:src/keys.c    **** 	    xeq(c);
 6418              		.loc 1 3153 37 is_stmt 0 view .LVU2061
 6419 067e 98F81C70 		ldrb	r7, [r8, #28]	@ zero_extendqisi2
3151:src/keys.c    **** #endif
 6420              		.loc 1 3151 19 view .LVU2062
 6421 0682 0123     		movs	r3, #1
 6422 0684 C9F80030 		str	r3, [r9]
3153:src/keys.c    **** 	    xeq(c);
 6423              		.loc 1 3153 6 is_stmt 1 view .LVU2063
3153:src/keys.c    **** 	    xeq(c);
 6424              		.loc 1 3153 37 is_stmt 0 view .LVU2064
ARM GAS  /tmp/ccy15zOt.s 			page 202


 6425 0688 B7FA87F7 		clz	r7, r7
3154:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 6426              		.loc 1 3154 6 view .LVU2065
 6427 068c FFF7FEFF 		bl	xeq
 6428              	.LVL536:
3155:src/keys.c    **** 	  }
 6429              		.loc 1 3155 38 view .LVU2066
 6430 0690 98F81C30 		ldrb	r3, [r8, #28]	@ zero_extendqisi2
3153:src/keys.c    **** 	    xeq(c);
 6431              		.loc 1 3153 37 view .LVU2067
 6432 0694 7F09     		lsrs	r7, r7, #5
 6433              	.LVL537:
3154:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 6434              		.loc 1 3154 6 is_stmt 1 view .LVU2068
3155:src/keys.c    **** 	  }
 6435              		.loc 1 3155 6 view .LVU2069
3155:src/keys.c    **** 	  }
 6436              		.loc 1 3155 20 is_stmt 0 view .LVU2070
 6437 0696 002B     		cmp	r3, #0
 6438 0698 08BF     		it	eq
 6439 069a 0127     		moveq	r7, #1
 6440              	.LVL538:
3155:src/keys.c    **** 	  }
 6441              		.loc 1 3155 20 view .LVU2071
 6442 069c 04E5     		b	.L565
 6443              	.LVL539:
 6444              	.L822:
 6445              	.LBB1238:
 6446              	.LBB1182:
 6447              	.LBB796:
 6448              	.LBB665:
 812:src/keys.c    **** #else
 6449              		.loc 1 812 4 is_stmt 1 view .LVU2072
 812:src/keys.c    **** #else
 6450              		.loc 1 812 17 is_stmt 0 view .LVU2073
 6451 069e 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
 6452 06a2 43F00203 		orr	r3, r3, #2
 6453 06a6 88F81530 		strb	r3, [r8, #21]
 818:src/keys.c    **** 
 6454              		.loc 1 818 4 is_stmt 1 view .LVU2074
 836:src/keys.c    **** }
 6455              		.loc 1 836 9 is_stmt 0 view .LVU2075
 6456 06aa 4FF0330B 		mov	fp, #51
 818:src/keys.c    **** 
 6457              		.loc 1 818 4 view .LVU2076
 6458 06ae FBE4     		b	.L565
 6459              	.L1111:
 729:src/keys.c    **** 	  case K00:
 6460              		.loc 1 729 4 is_stmt 1 view .LVU2077
 6461 06b0 122C     		cmp	r4, #18
 6462 06b2 0BD8     		bhi	.L805
 6463 06b4 DFE804F0 		tbb	[pc, r4]
 6464              	.L807:
 6465 06b8 C3       		.byte	(.L810-.L807)/2
 6466 06b9 B7       		.byte	(.L809-.L807)/2
 6467 06ba 0A       		.byte	(.L805-.L807)/2
 6468 06bb A7       		.byte	(.L808-.L807)/2
ARM GAS  /tmp/ccy15zOt.s 			page 203


 6469 06bc 0A       		.byte	(.L805-.L807)/2
 6470 06bd 0A       		.byte	(.L805-.L807)/2
 6471 06be 0A       		.byte	(.L805-.L807)/2
 6472 06bf 0A       		.byte	(.L805-.L807)/2
 6473 06c0 0A       		.byte	(.L805-.L807)/2
 6474 06c1 0A       		.byte	(.L805-.L807)/2
 6475 06c2 0A       		.byte	(.L805-.L807)/2
 6476 06c3 0A       		.byte	(.L805-.L807)/2
 6477 06c4 0A       		.byte	(.L805-.L807)/2
 6478 06c5 0A       		.byte	(.L805-.L807)/2
 6479 06c6 0A       		.byte	(.L805-.L807)/2
 6480 06c7 0A       		.byte	(.L805-.L807)/2
 6481 06c8 0A       		.byte	(.L805-.L807)/2
 6482 06c9 0A       		.byte	(.L805-.L807)/2
 6483 06ca 96       		.byte	(.L806-.L807)/2
 6484 06cb 00       		.p2align 1
 6485              	.L805:
 759:src/keys.c    **** 	  }
 6486              		.loc 1 759 12 view .LVU2078
 764:src/keys.c    **** #ifdef DM42
 6487              		.loc 1 764 2 view .LVU2079
 6488 06cc 033C     		subs	r4, r4, #3
 6489 06ce 2A2C     		cmp	r4, #42
 6490 06d0 3FF65AAF 		bhi	.L594
 6491 06d4 01A2     		adr	r2, .L816
 6492 06d6 52F824F0 		ldr	pc, [r2, r4, lsl #2]
 6493 06da 00BF     		.p2align 2
 6494              	.L816:
 6495 06dc 55080000 		.word	.L819+1
 6496 06e0 89050000 		.word	.L594+1
 6497 06e4 89050000 		.word	.L594+1
 6498 06e8 BD070000 		.word	.L815+1
 6499 06ec BD070000 		.word	.L815+1
 6500 06f0 89050000 		.word	.L594+1
 6501 06f4 89050000 		.word	.L594+1
 6502 06f8 89050000 		.word	.L594+1
 6503 06fc 89050000 		.word	.L594+1
 6504 0700 89050000 		.word	.L594+1
 6505 0704 89050000 		.word	.L594+1
 6506 0708 89050000 		.word	.L594+1
 6507 070c 89050000 		.word	.L594+1
 6508 0710 D3070000 		.word	.L818+1
 6509 0714 89050000 		.word	.L594+1
 6510 0718 BD070000 		.word	.L815+1
 6511 071c 89050000 		.word	.L594+1
 6512 0720 89050000 		.word	.L594+1
 6513 0724 89050000 		.word	.L594+1
 6514 0728 89050000 		.word	.L594+1
 6515 072c 89050000 		.word	.L594+1
 6516 0730 89050000 		.word	.L594+1
 6517 0734 89050000 		.word	.L594+1
 6518 0738 89050000 		.word	.L594+1
 6519 073c 89050000 		.word	.L594+1
 6520 0740 89050000 		.word	.L594+1
 6521 0744 89050000 		.word	.L594+1
 6522 0748 89050000 		.word	.L594+1
 6523 074c 89050000 		.word	.L594+1
ARM GAS  /tmp/ccy15zOt.s 			page 204


 6524 0750 89050000 		.word	.L594+1
 6525 0754 89050000 		.word	.L594+1
 6526 0758 89050000 		.word	.L594+1
 6527 075c 89050000 		.word	.L594+1
 6528 0760 89050000 		.word	.L594+1
 6529 0764 89050000 		.word	.L594+1
 6530 0768 89050000 		.word	.L594+1
 6531 076c 89050000 		.word	.L594+1
 6532 0770 89050000 		.word	.L594+1
 6533 0774 89050000 		.word	.L594+1
 6534 0778 89050000 		.word	.L594+1
 6535 077c 89050000 		.word	.L594+1
 6536 0780 61080000 		.word	.L817+1
 6537 0784 B7070000 		.word	.L1069+1
 6538              	.LVL540:
 6539              		.p2align 1
 6540              	.L722:
 764:src/keys.c    **** #ifdef DM42
 6541              		.loc 1 764 2 is_stmt 0 view .LVU2080
 6542              	.LBE665:
 6543              	.LBE796:
 6544              	.LBB797:
 6545              	.LBB798:
2712:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 6546              		.loc 1 2712 3 is_stmt 1 view .LVU2081
2712:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 6547              		.loc 1 2712 13 is_stmt 0 view .LVU2082
 6548 0788 B8F80830 		ldrh	r3, [r8, #8]
2712:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 6549              		.loc 1 2712 6 view .LVU2083
 6550 078c 002B     		cmp	r3, #0
 6551 078e 01F0E981 		beq	.L723
2713:src/keys.c    **** 				State2.digval = global_regs();
 6552              		.loc 1 2713 4 is_stmt 1 view .LVU2084
2713:src/keys.c    **** 				State2.digval = global_regs();
 6553              		.loc 1 2713 8 is_stmt 0 view .LVU2085
 6554 0792 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2713:src/keys.c    **** 				State2.digval = global_regs();
 6555              		.loc 1 2713 7 view .LVU2086
 6556 0796 D207     		lsls	r2, r2, #31
 6557 0798 02D4     		bmi	.L724
2713:src/keys.c    **** 				State2.digval = global_regs();
 6558              		.loc 1 2713 23 view .LVU2087
 6559 079a 642B     		cmp	r3, #100
 6560 079c 01F09482 		beq	.L1119
 6561              	.LVL541:
 6562              	.L724:
2715:src/keys.c    **** 		}
 6563              		.loc 1 2715 4 is_stmt 1 view .LVU2088
 6564 07a0 B8F80830 		ldrh	r3, [r8, #8]
 6565 07a4 013B     		subs	r3, r3, #1
 6566              	.L1061:
2715:src/keys.c    **** 		}
 6567              		.loc 1 2715 4 is_stmt 0 view .LVU2089
 6568 07a6 A8F80830 		strh	r3, [r8, #8]	@ movhi
 6569              	.LVL542:
 6570              	.L715:
ARM GAS  /tmp/ccy15zOt.s 			page 205


2767:src/keys.c    **** 	return STATE_UNFINISHED;
 6571              		.loc 1 2767 2 is_stmt 1 view .LVU2090
2767:src/keys.c    **** 	return STATE_UNFINISHED;
 6572              		.loc 1 2767 16 is_stmt 0 view .LVU2091
 6573 07aa 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
 6574 07ae 6FF3C503 		bfc	r3, #3, #3
 6575 07b2 88F81430 		strb	r3, [r8, #20]
 6576              	.LVL543:
 6577              	.L1069:
2768:src/keys.c    **** }
 6578              		.loc 1 2768 2 is_stmt 1 view .LVU2092
2768:src/keys.c    **** }
 6579              		.loc 1 2768 9 is_stmt 0 view .LVU2093
 6580 07b6 4FF0330B 		mov	fp, #51
 6581 07ba 75E4     		b	.L565
 6582              	.L815:
 6583              	.LBE798:
 6584              	.LBE797:
 6585              	.LBB834:
 6586              	.LBB666:
 830:src/keys.c    **** 		break;
 6587              		.loc 1 830 3 is_stmt 1 view .LVU2094
 6588              	.LVL544:
 6589              	.LBB663:
 6590              	.LBI663:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 6591              		.loc 1 501 13 view .LVU2095
 6592              	.LBB664:
 502:src/keys.c    **** 		return;
 6593              		.loc 1 502 2 view .LVU2096
 502:src/keys.c    **** 		return;
 6594              		.loc 1 502 6 is_stmt 0 view .LVU2097
 6595 07bc FFF7FEFF 		bl	is_bad_cmdline
 6596              	.LVL545:
 502:src/keys.c    **** 		return;
 6597              		.loc 1 502 5 view .LVU2098
 6598 07c0 0446     		mov	r4, r0
 6599 07c2 0028     		cmp	r0, #0
 6600 07c4 F7D1     		bne	.L1069
 6601 07c6 5FFA8AF0 		uxtb	r0, r10
 6602 07ca FFF7FEFF 		bl	init_arg.part.0
 6603              	.LVL546:
 6604              	.LBE664:
 6605              	.LBE663:
 6606              	.LBE666:
 6607              	.LBE834:
 6608              	.LBE1182:
 6609              	.LBE1238:
2952:src/keys.c    ****   if (was_paused && Pause == 0) {
 6610              		.loc 1 2952 7 view .LVU2099
 6611 07ce 2746     		mov	r7, r4
 6612 07d0 F1E7     		b	.L1069
 6613              	.LVL547:
 6614              	.L818:
 6615              	.LBB1239:
 6616              	.LBB1183:
 6617              	.LBB835:
ARM GAS  /tmp/ccy15zOt.s 			page 206


 6618              	.LBB667:
 821:src/keys.c    **** 			return STATE_UNFINISHED;
 6619              		.loc 1 821 3 is_stmt 1 view .LVU2100
 821:src/keys.c    **** 			return STATE_UNFINISHED;
 6620              		.loc 1 821 6 is_stmt 0 view .LVU2101
 6621 07d2 8806     		lsls	r0, r1, #26
 6622 07d4 EFD4     		bmi	.L1069
 823:src/keys.c    **** 			return op;
 6623              		.loc 1 823 3 is_stmt 1 view .LVU2102
 823:src/keys.c    **** 			return op;
 6624              		.loc 1 823 6 is_stmt 0 view .LVU2103
 6625 07d6 5906     		lsls	r1, r3, #25
 6626 07d8 5AD4     		bmi	.L823
 6627              	.LVL548:
 6628              	.L831:
 823:src/keys.c    **** 			return op;
 6629              		.loc 1 823 6 view .LVU2104
 6630              	.LBE667:
 6631              	.LBE835:
 6632              	.LBE1183:
 6633              	.LBE1239:
3122:src/keys.c    ****       else if (State2.alphas) {
 6634              		.loc 1 3122 2 is_stmt 1 view .LVU2105
 6635 07da FFF7FEFF 		bl	delprog
 6636              	.LVL549:
 6637 07de 4FF0300B 		mov	fp, #48
 6638 07e2 61E4     		b	.L565
 6639              	.LVL550:
 6640              	.L806:
 6641              	.LBB1240:
 6642              	.LBB1184:
 6643              	.LBB836:
 6644              	.LBB668:
 755:src/keys.c    **** 	    if (intltr(15)) {
 6645              		.loc 1 755 6 view .LVU2106
 756:src/keys.c    **** 	      return op_int;
 6646              		.loc 1 756 6 view .LVU2107
 756:src/keys.c    **** 	      return op_int;
 6647              		.loc 1 756 10 is_stmt 0 view .LVU2108
 6648 07e4 0F20     		movs	r0, #15
 6649 07e6 FFF7FEFF 		bl	intltr
 6650              	.LVL551:
 756:src/keys.c    **** 	      return op_int;
 6651              		.loc 1 756 9 view .LVU2109
 6652 07ea 0028     		cmp	r0, #0
 6653 07ec E6D0     		beq	.L815
 6654              	.LVL552:
 756:src/keys.c    **** 	      return op_int;
 6655              		.loc 1 756 9 view .LVU2110
 6656              	.LBE668:
 6657              	.LBE836:
 6658              	.LBE1184:
 6659              	.LBE1240:
3145:src/keys.c    **** 	NonProgrammable = 0;
 6660              		.loc 1 3145 7 is_stmt 1 view .LVU2111
3145:src/keys.c    **** 	NonProgrammable = 0;
 6661              		.loc 1 3145 11 is_stmt 0 view .LVU2112
ARM GAS  /tmp/ccy15zOt.s 			page 207


 6662 07ee 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3145:src/keys.c    **** 	NonProgrammable = 0;
 6663              		.loc 1 3145 10 view .LVU2113
 6664 07f2 5806     		lsls	r0, r3, #25
 6665 07f4 41F1D181 		bpl	.L890
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6666              		.loc 1 3146 2 is_stmt 1 view .LVU2114
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6667              		.loc 1 3146 18 is_stmt 0 view .LVU2115
 6668 07f8 654B     		ldr	r3, .L1161
 6669 07fa 0022     		movs	r2, #0
 6670              	.LBB1241:
 6671              	.LBB1185:
 6672              	.LBB837:
 6673              	.LBB669:
 757:src/keys.c    **** 	    }
 6674              		.loc 1 757 15 view .LVU2116
 6675 07fc 4FF0140B 		mov	fp, #20
 6676              	.LBE669:
 6677              	.LBE837:
 6678              	.LBE1185:
 6679              	.LBE1241:
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6680              		.loc 1 3146 18 view .LVU2117
 6681 0800 1A60     		str	r2, [r3]
3147:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6682              		.loc 1 3147 2 is_stmt 1 view .LVU2118
3147:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6683              		.loc 1 3147 32 is_stmt 0 view .LVU2119
 6684 0802 5846     		mov	r0, fp
 6685 0804 3BE7     		b	.L837
 6686              	.LVL553:
 6687              	.L808:
 6688              	.LBB1242:
 6689              	.LBB1186:
 6690              	.LBB838:
 6691              	.LBB670:
 747:src/keys.c    **** 	    if (intltr(12)) {
 6692              		.loc 1 747 6 is_stmt 1 view .LVU2120
 748:src/keys.c    **** 	      return op_int;
 6693              		.loc 1 748 6 view .LVU2121
 748:src/keys.c    **** 	      return op_int;
 6694              		.loc 1 748 10 is_stmt 0 view .LVU2122
 6695 0806 0C20     		movs	r0, #12
 6696 0808 FFF7FEFF 		bl	intltr
 6697              	.LVL554:
 748:src/keys.c    **** 	      return op_int;
 6698              		.loc 1 748 9 view .LVU2123
 6699 080c 10B3     		cbz	r0, .L819
 6700              	.LVL555:
 748:src/keys.c    **** 	      return op_int;
 6701              		.loc 1 748 9 view .LVU2124
 6702              	.LBE670:
 6703              	.LBE838:
 6704              	.LBE1186:
 6705              	.LBE1242:
3145:src/keys.c    **** 	NonProgrammable = 0;
ARM GAS  /tmp/ccy15zOt.s 			page 208


 6706              		.loc 1 3145 7 is_stmt 1 view .LVU2125
3145:src/keys.c    **** 	NonProgrammable = 0;
 6707              		.loc 1 3145 11 is_stmt 0 view .LVU2126
 6708 080e 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3145:src/keys.c    **** 	NonProgrammable = 0;
 6709              		.loc 1 3145 10 view .LVU2127
 6710 0812 5C06     		lsls	r4, r3, #25
 6711 0814 41F1B181 		bpl	.L889
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6712              		.loc 1 3146 2 is_stmt 1 view .LVU2128
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6713              		.loc 1 3146 18 is_stmt 0 view .LVU2129
 6714 0818 5D4B     		ldr	r3, .L1161
 6715 081a 0022     		movs	r2, #0
 6716              	.LBB1243:
 6717              	.LBB1187:
 6718              	.LBB839:
 6719              	.LBB671:
 749:src/keys.c    **** 	    }
 6720              		.loc 1 749 15 view .LVU2130
 6721 081c 4FF0110B 		mov	fp, #17
 6722              	.LBE671:
 6723              	.LBE839:
 6724              	.LBE1187:
 6725              	.LBE1243:
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6726              		.loc 1 3146 18 view .LVU2131
 6727 0820 1A60     		str	r2, [r3]
3147:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6728              		.loc 1 3147 2 is_stmt 1 view .LVU2132
3147:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6729              		.loc 1 3147 32 is_stmt 0 view .LVU2133
 6730 0822 5846     		mov	r0, fp
 6731 0824 2BE7     		b	.L837
 6732              	.LVL556:
 6733              	.L809:
 6734              	.LBB1244:
 6735              	.LBB1188:
 6736              	.LBB840:
 6737              	.LBB672:
 739:src/keys.c    **** 	    if (intltr(11)) {
 6738              		.loc 1 739 6 is_stmt 1 view .LVU2134
 740:src/keys.c    **** 	      return op;
 6739              		.loc 1 740 6 view .LVU2135
 740:src/keys.c    **** 	      return op;
 6740              		.loc 1 740 10 is_stmt 0 view .LVU2136
 6741 0826 0B20     		movs	r0, #11
 6742 0828 FFF7FEFF 		bl	intltr
 6743              	.LVL557:
 740:src/keys.c    **** 	      return op;
 6744              		.loc 1 740 9 view .LVU2137
 6745 082c 0028     		cmp	r0, #0
 6746 082e 41F00F81 		bne	.L812
 744:src/keys.c    **** 	    }
 6747              		.loc 1 744 8 is_stmt 1 view .LVU2138
 744:src/keys.c    **** 	    }
 6748              		.loc 1 744 15 is_stmt 0 view .LVU2139
ARM GAS  /tmp/ccy15zOt.s 			page 209


 6749 0832 1021     		movs	r1, #16
 6750 0834 0120     		movs	r0, #1
 6751 0836 FFF7FEFF 		bl	check_f_key
 6752              	.LVL558:
 6753 083a 8346     		mov	fp, r0
 6754 083c A4E6     		b	.L594
 6755              	.LVL559:
 6756              	.L810:
 731:src/keys.c    **** 	    if (intltr(10)) {
 6757              		.loc 1 731 6 is_stmt 1 view .LVU2140
 732:src/keys.c    **** 	      return op;
 6758              		.loc 1 732 6 view .LVU2141
 732:src/keys.c    **** 	      return op;
 6759              		.loc 1 732 10 is_stmt 0 view .LVU2142
 6760 083e 0A20     		movs	r0, #10
 6761 0840 FFF7FEFF 		bl	intltr
 6762              	.LVL560:
 732:src/keys.c    **** 	      return op;
 6763              		.loc 1 732 9 view .LVU2143
 6764 0844 0028     		cmp	r0, #0
 6765 0846 41F0F680 		bne	.L811
 736:src/keys.c    **** 	    }
 6766              		.loc 1 736 8 is_stmt 1 view .LVU2144
 736:src/keys.c    **** 	    }
 6767              		.loc 1 736 15 is_stmt 0 view .LVU2145
 6768 084a 0F21     		movs	r1, #15
 6769 084c FFF7FEFF 		bl	check_f_key
 6770              	.LVL561:
 6771 0850 8346     		mov	fp, r0
 6772 0852 99E6     		b	.L594
 6773              	.LVL562:
 6774              	.L819:
 771:src/keys.c    **** #else
 6775              		.loc 1 771 3 is_stmt 1 view .LVU2146
 771:src/keys.c    **** #else
 6776              		.loc 1 771 10 is_stmt 0 view .LVU2147
 6777 0854 5146     		mov	r1, r10
 6778 0856 0220     		movs	r0, #2
 6779 0858 FFF7FEFF 		bl	check_f_key
 6780              	.LVL563:
 6781 085c 8346     		mov	fp, r0
 6782 085e 93E6     		b	.L594
 6783              	.L817:
 795:src/keys.c    **** 			return STATE_UNFINISHED;
 6784              		.loc 1 795 3 is_stmt 1 view .LVU2148
 795:src/keys.c    **** 			return STATE_UNFINISHED;
 6785              		.loc 1 795 7 is_stmt 0 view .LVU2149
 6786 0860 FFF7FEFF 		bl	is_bad_cmdline
 6787              	.LVL564:
 795:src/keys.c    **** 			return STATE_UNFINISHED;
 6788              		.loc 1 795 6 view .LVU2150
 6789 0864 0446     		mov	r4, r0
 6790 0866 0028     		cmp	r0, #0
 6791 0868 A5D1     		bne	.L1069
 797:src/keys.c    **** 		State2.arrow = 1;
 6792              		.loc 1 797 3 is_stmt 1 view .LVU2151
 6793 086a FFF7FEFF 		bl	process_cmdline_set_lift
ARM GAS  /tmp/ccy15zOt.s 			page 210


 6794              	.LVL565:
 798:src/keys.c    **** #ifdef DM42
 6795              		.loc 1 798 3 view .LVU2152
 798:src/keys.c    **** #ifdef DM42
 6796              		.loc 1 798 16 is_stmt 0 view .LVU2153
 6797 086e 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
 800:src/keys.c    **** 		display_current_menu ();
 6798              		.loc 1 800 3 view .LVU2154
 6799 0872 0920     		movs	r0, #9
 798:src/keys.c    **** #ifdef DM42
 6800              		.loc 1 798 16 view .LVU2155
 6801 0874 43F00403 		orr	r3, r3, #4
 6802 0878 88F81530 		strb	r3, [r8, #21]
 800:src/keys.c    **** 		display_current_menu ();
 6803              		.loc 1 800 3 is_stmt 1 view .LVU2156
 6804 087c FFF7FEFF 		bl	set_menu
 6805              	.LVL566:
 801:src/keys.c    **** 		lcd_refresh ();
 6806              		.loc 1 801 3 view .LVU2157
 6807 0880 FFF7FEFF 		bl	display_current_menu
 6808              	.LVL567:
 802:src/keys.c    **** #else
 6809              		.loc 1 802 3 view .LVU2158
 6810 0884 434B     		ldr	r3, .L1161+4
 6811 0886 9847     		blx	r3
 6812              	.LVL568:
 806:src/keys.c    **** 
 6813              		.loc 1 806 3 view .LVU2159
 6814              	.LBE672:
 6815              	.LBE840:
 6816              	.LBE1188:
 6817              	.LBE1244:
2952:src/keys.c    ****   if (was_paused && Pause == 0) {
 6818              		.loc 1 2952 7 is_stmt 0 view .LVU2160
 6819 0888 2746     		mov	r7, r4
 6820              	.LBB1245:
 6821              	.LBB1189:
 6822              	.LBB841:
 6823              	.LBB673:
 836:src/keys.c    **** }
 6824              		.loc 1 836 9 view .LVU2161
 6825 088a 4FF0330B 		mov	fp, #51
 806:src/keys.c    **** 
 6826              		.loc 1 806 3 view .LVU2162
 6827 088e 0BE4     		b	.L565
 6828              	.L823:
 6829              	.LVL569:
 806:src/keys.c    **** 
 6830              		.loc 1 806 3 view .LVU2163
 6831              	.LBE673:
 6832              	.LBE841:
 6833              	.LBE1189:
 6834              	.LBE1245:
3109:src/keys.c    ****     case STATE_SST:
 6835              		.loc 1 3109 5 is_stmt 1 view .LVU2164
 6836 0890 AAF12B03 		sub	r3, r10, #43
 6837 0894 082B     		cmp	r3, #8
ARM GAS  /tmp/ccy15zOt.s 			page 211


 6838 0896 15D8     		bhi	.L851
 6839 0898 01A2     		adr	r2, .L852
 6840 089a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6841 089e 00BF     		.p2align 2
 6842              	.L852:
 6843 08a0 BD050000 		.word	.L830+1
 6844 08a4 BD050000 		.word	.L830+1
 6845 08a8 C5080000 		.word	.L851+1
 6846 08ac E1050000 		.word	.L759+1
 6847 08b0 D3050000 		.word	.L755+1
 6848 08b4 FB050000 		.word	.L752+1
 6849 08b8 9D010000 		.word	.L574+1
 6850 08bc A9000000 		.word	.L565+1
 6851 08c0 A9000000 		.word	.L565+1
 6852              		.p2align 1
 6853              	.L851:
 6854 08c4 324A     		ldr	r2, .L1161
 6855 08c6 5046     		mov	r0, r10
 6856 08c8 CBE6     		b	.L839
 6857              	.LVL570:
 6858              	.L1089:
 6859              	.LBB1246:
 6860              	.LBB1190:
2823:src/keys.c    **** 		CmdLineLength = 0;
 6861              		.loc 1 2823 26 is_stmt 0 view .LVU2165
 6862 08ca FFF7FEFF 		bl	keyticks
 6863              	.LVL571:
2823:src/keys.c    **** 		CmdLineLength = 0;
 6864              		.loc 1 2823 23 view .LVU2166
 6865 08ce 1E28     		cmp	r0, #30
2824:src/keys.c    **** 	/*
 6866              		.loc 1 2824 3 is_stmt 1 view .LVU2167
2824:src/keys.c    **** 	/*
 6867              		.loc 1 2824 17 is_stmt 0 view .LVU2168
 6868 08d0 C4BF     		itt	gt
 6869 08d2 0023     		movgt	r3, #0
 6870 08d4 88F81C30 		strbgt	r3, [r8, #28]
 6871 08d8 93E4     		b	.L581
 6872              	.LVL572:
 6873              	.L838:
2824:src/keys.c    **** 	/*
 6874              		.loc 1 2824 17 view .LVU2169
 6875              	.LBE1190:
 6876              	.LBE1246:
3145:src/keys.c    **** 	NonProgrammable = 0;
 6877              		.loc 1 3145 26 view .LVU2170
 6878 08da 2D4A     		ldr	r2, .L1161
 6879 08dc 1368     		ldr	r3, [r2]
 6880 08de 5846     		mov	r0, fp
 6881 08e0 002B     		cmp	r3, #0
 6882 08e2 7FF4BEAE 		bne	.L839
 6883              	.LVL573:
 6884              	.L840:
3167:src/keys.c    ****       }
 6885              		.loc 1 3167 2 is_stmt 1 view .LVU2171
 6886 08e6 FFF7FEFF 		bl	stoprog
 6887              	.LVL574:
ARM GAS  /tmp/ccy15zOt.s 			page 212


 6888 08ea FFF7DDBB 		b	.L565
 6889              	.LVL575:
 6890              	.L567:
3087:src/keys.c    **** 	}
 6891              		.loc 1 3087 4 view .LVU2172
 6892              		.loc 1 3186 1 is_stmt 0 view .LVU2173
 6893 08ee 03B0     		add	sp, sp, #12
 6894              		.cfi_remember_state
 6895              		.cfi_def_cfa_offset 36
 6896              		@ sp needed
 6897 08f0 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6898              		.cfi_restore 14
 6899              		.cfi_restore 11
 6900              		.cfi_restore 10
 6901              		.cfi_restore 9
 6902              		.cfi_restore 8
 6903              		.cfi_restore 7
 6904              		.cfi_restore 6
 6905              		.cfi_restore 5
 6906              		.cfi_restore 4
 6907              		.cfi_def_cfa_offset 0
3087:src/keys.c    **** 	}
 6908              		.loc 1 3087 4 view .LVU2174
 6909 08f4 FFF7FEBF 		b	finish_RPN
 6910              	.LVL576:
 6911              	.L1090:
 6912              		.cfi_restore_state
 6913              	.LBB1247:
 6914              	.LBB1191:
2830:src/keys.c    **** 
 6915              		.loc 1 2830 3 is_stmt 1 view .LVU2175
 6916              	.LBB842:
 6917              	.LBI842:
2439:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
 6918              		.loc 1 2439 12 view .LVU2176
 6919              	.LBB843:
2441:src/keys.c    **** #ifdef DM42
 6920              		.loc 1 2441 2 view .LVU2177
 6921 08f8 E4B2     		uxtb	r4, r4
 6922              	.LVL577:
2441:src/keys.c    **** #ifdef DM42
 6923              		.loc 1 2441 2 is_stmt 0 view .LVU2178
 6924 08fa 0E3C     		subs	r4, r4, #14
 6925 08fc 192C     		cmp	r4, #25
 6926 08fe 3FF65AAF 		bhi	.L1069
 6927 0902 01A3     		adr	r3, .L586
 6928 0904 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 6929              		.p2align 2
 6930              	.L586:
 6931 0908 75090000 		.word	.L587+1
 6932 090c B7070000 		.word	.L1069+1
 6933 0910 75090000 		.word	.L587+1
 6934 0914 B7070000 		.word	.L1069+1
 6935 0918 B7070000 		.word	.L1069+1
 6936 091c B7070000 		.word	.L1069+1
 6937 0920 B7070000 		.word	.L1069+1
 6938 0924 B7070000 		.word	.L1069+1
ARM GAS  /tmp/ccy15zOt.s 			page 213


 6939 0928 B7070000 		.word	.L1069+1
 6940 092c B7070000 		.word	.L1069+1
 6941 0930 B7070000 		.word	.L1069+1
 6942 0934 B7070000 		.word	.L1069+1
 6943 0938 B7070000 		.word	.L1069+1
 6944 093c B7070000 		.word	.L1069+1
 6945 0940 B7070000 		.word	.L1069+1
 6946 0944 B7070000 		.word	.L1069+1
 6947 0948 B7070000 		.word	.L1069+1
 6948 094c B7070000 		.word	.L1069+1
 6949 0950 99090000 		.word	.L585+1
 6950 0954 B7070000 		.word	.L1069+1
 6951 0958 B7070000 		.word	.L1069+1
 6952 095c B7070000 		.word	.L1069+1
 6953 0960 B7070000 		.word	.L1069+1
 6954 0964 B7070000 		.word	.L1069+1
 6955 0968 B7070000 		.word	.L1069+1
 6956 096c 99090000 		.word	.L585+1
 6957              		.p2align 1
 6958              	.L588:
2450:src/keys.c    **** 	  }
 6959              		.loc 1 2450 26 is_stmt 1 view .LVU2179
 6960 0970 FFF7FEFF 		bl	clpall
 6961              	.LVL578:
2450:src/keys.c    **** 	  }
 6962              		.loc 1 2450 36 view .LVU2180
 6963              	.L587:
2459:src/keys.c    **** 	  State2.digval = 0;
 6964              		.loc 1 2459 4 view .LVU2181
2459:src/keys.c    **** 	  State2.digval = 0;
 6965              		.loc 1 2459 19 is_stmt 0 view .LVU2182
 6966 0974 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
2460:src/keys.c    **** 	  break;
 6967              		.loc 1 2460 18 view .LVU2183
 6968 0978 0022     		movs	r2, #0
2459:src/keys.c    **** 	  State2.digval = 0;
 6969              		.loc 1 2459 19 view .LVU2184
 6970 097a 6FF30203 		bfc	r3, #0, #3
 6971 097e 88F81430 		strb	r3, [r8, #20]
2460:src/keys.c    **** 	  break;
 6972              		.loc 1 2460 4 is_stmt 1 view .LVU2185
2460:src/keys.c    **** 	  break;
 6973              		.loc 1 2460 18 is_stmt 0 view .LVU2186
 6974 0982 A8F80820 		strh	r2, [r8, #8]	@ movhi
2461:src/keys.c    **** 	default:			// No state change
 6975              		.loc 1 2461 4 is_stmt 1 view .LVU2187
 6976              	.LBE843:
 6977              	.LBE842:
2830:src/keys.c    **** 
 6978              		.loc 1 2830 10 is_stmt 0 view .LVU2188
 6979 0986 4FF0330B 		mov	fp, #51
 6980              	.LBB845:
 6981              	.LBB844:
2461:src/keys.c    **** 	default:			// No state change
 6982              		.loc 1 2461 4 view .LVU2189
 6983 098a FFF78DBB 		b	.L565
 6984              	.L1162:
ARM GAS  /tmp/ccy15zOt.s 			page 214


 6985 098e 00BF     		.align	2
 6986              	.L1161:
 6987 0990 00000000 		.word	NonProgrammable
 6988 0994 31020008 		.word	134218289
 6989              	.L585:
2446:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 6990              		.loc 1 2446 4 is_stmt 1 view .LVU2190
2446:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 6991              		.loc 1 2446 18 is_stmt 0 view .LVU2191
 6992 0998 98F81430 		ldrb	r3, [r8, #20]	@ zero_extendqisi2
 6993 099c 03F00703 		and	r3, r3, #7
 6994 09a0 013B     		subs	r3, r3, #1
 6995 09a2 032B     		cmp	r3, #3
 6996 09a4 E6D8     		bhi	.L587
 6997 09a6 01A2     		adr	r2, .L589
 6998 09a8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6999              		.p2align 2
 7000              	.L589:
 7001 09ac C9090000 		.word	.L592+1
 7002 09b0 C3090000 		.word	.L591+1
 7003 09b4 BD090000 		.word	.L590+1
 7004 09b8 71090000 		.word	.L588+1
 7005              		.p2align 1
 7006              	.L590:
2449:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 7007              		.loc 1 2449 26 is_stmt 1 view .LVU2192
 7008 09bc FFF7FEFF 		bl	clrprog
 7009              	.LVL579:
2449:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 7010              		.loc 1 2449 37 view .LVU2193
2449:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 7011              		.loc 1 2449 4 is_stmt 0 view .LVU2194
 7012 09c0 D8E7     		b	.L587
 7013              	.L591:
2448:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 7014              		.loc 1 2448 25 is_stmt 1 view .LVU2195
 7015 09c2 FFF7FEFF 		bl	reset
 7016              	.LVL580:
2448:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 7017              		.loc 1 2448 34 view .LVU2196
2448:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 7018              		.loc 1 2448 4 is_stmt 0 view .LVU2197
 7019 09c6 D5E7     		b	.L587
 7020              	.L592:
2447:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 7021              		.loc 1 2447 25 is_stmt 1 view .LVU2198
 7022 09c8 FFF7FEFF 		bl	clrall
 7023              	.LVL581:
2447:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 7024              		.loc 1 2447 35 view .LVU2199
2447:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 7025              		.loc 1 2447 4 is_stmt 0 view .LVU2200
 7026 09cc D2E7     		b	.L587
 7027              	.LVL582:
 7028              	.L544:
2447:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 7029              		.loc 1 2447 4 view .LVU2201
ARM GAS  /tmp/ccy15zOt.s 			page 215


 7030              	.LBE844:
 7031              	.LBE845:
 7032              	.LBE1191:
 7033              	.LBE1247:
2985:src/keys.c    **** 	    DispMsg = TraceBuffer;
 7034              		.loc 1 2985 6 is_stmt 1 view .LVU2202
 7035 09ce D54F     		ldr	r7, .L1163
 7036 09d0 3946     		mov	r1, r7
 7037 09d2 FFF7FEFF 		bl	prt
 7038              	.LVL583:
 7039 09d6 3246     		mov	r2, r6
 7040 09d8 0146     		mov	r1, r0
 7041 09da 3846     		mov	r0, r7
 7042 09dc FFF7FEFF 		bl	scopy_char
 7043              	.LVL584:
2986:src/keys.c    **** 	  }
 7044              		.loc 1 2986 6 view .LVU2203
2986:src/keys.c    **** 	  }
 7045              		.loc 1 2986 14 is_stmt 0 view .LVU2204
 7046 09e0 D14B     		ldr	r3, .L1163+4
 7047 09e2 1F60     		str	r7, [r3]
 7048 09e4 FFF7A3BB 		b	.L545
 7049              	.LVL585:
 7050              	.L1088:
 7051              	.LBB1248:
 7052              	.LBB1192:
2804:src/keys.c    **** #else
 7053              		.loc 1 2804 47 view .LVU2205
 7054 09e8 DFF86083 		ldr	r8, .L1163+40
2804:src/keys.c    **** #else
 7055              		.loc 1 2804 61 view .LVU2206
 7056 09ec 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2804:src/keys.c    **** #else
 7057              		.loc 1 2804 47 view .LVU2207
 7058 09f0 98F80E30 		ldrb	r3, [r8, #14]	@ zero_extendqisi2
2804:src/keys.c    **** #else
 7059              		.loc 1 2804 61 view .LVU2208
 7060 09f4 02F00402 		and	r2, r2, #4
2804:src/keys.c    **** #else
 7061              		.loc 1 2804 58 view .LVU2209
 7062 09f8 1A43     		orrs	r2, r2, r3
 7063 09fa 4AEA0202 		orr	r2, r10, r2
 7064 09fe 12F0FF0F 		tst	r2, #255
 7065 0a02 7FF4FBAB 		bne	.L576
2809:src/keys.c    ****       return STATE_UNFINISHED;
 7066              		.loc 1 2809 7 is_stmt 1 view .LVU2210
 7067 0a06 FFF7FEFF 		bl	soft_init_state
 7068              	.LVL586:
2810:src/keys.c    ****     }
 7069              		.loc 1 2810 7 view .LVU2211
2810:src/keys.c    ****     }
 7070              		.loc 1 2810 14 is_stmt 0 view .LVU2212
 7071 0a0a 4FF0330B 		mov	fp, #51
 7072 0a0e FFF74BBB 		b	.L565
 7073              	.L1091:
2833:src/keys.c    **** 
 7074              		.loc 1 2833 3 is_stmt 1 view .LVU2213
ARM GAS  /tmp/ccy15zOt.s 			page 216


2833:src/keys.c    **** 
 7075              		.loc 1 2833 10 is_stmt 0 view .LVU2214
 7076 0a12 E0B2     		uxtb	r0, r4
 7077 0a14 FFF7FEFF 		bl	process_arg
 7078              	.LVL587:
 7079 0a18 8346     		mov	fp, r0
 7080 0a1a B5E5     		b	.L594
 7081              	.L1112:
2782:src/keys.c    ****       Pause = 0;
 7082              		.loc 1 2782 2 is_stmt 1 view .LVU2215
 7083 0a1c 0020     		movs	r0, #0
 7084 0a1e FFF7FEFF 		bl	set_pc
 7085              	.LVL588:
 7086 0a22 DAE4     		b	.L573
 7087              	.LVL589:
 7088              	.L832:
2782:src/keys.c    ****       Pause = 0;
 7089              		.loc 1 2782 2 is_stmt 0 view .LVU2216
 7090              	.LBE1192:
 7091              	.LBE1248:
 7092              	.LBB1249:
3124:src/keys.c    **** 	if (p > Alpha)
 7093              		.loc 1 3124 2 is_stmt 1 view .LVU2217
3124:src/keys.c    **** 	if (p > Alpha)
 7094              		.loc 1 3124 22 is_stmt 0 view .LVU2218
 7095 0a24 C14C     		ldr	r4, .L1163+8
 7096 0a26 2068     		ldr	r0, [r4]
3124:src/keys.c    **** 	if (p > Alpha)
 7097              		.loc 1 3124 12 view .LVU2219
 7098 0a28 0021     		movs	r1, #0
 7099 0a2a 00F5F660 		add	r0, r0, #1968
 7100 0a2e FFF7FEFF 		bl	find_char
 7101              	.LVL590:
3125:src/keys.c    **** 	  *--p = '\0';
 7102              		.loc 1 3125 8 view .LVU2220
 7103 0a32 2368     		ldr	r3, [r4]
 7104              	.LVL591:
3125:src/keys.c    **** 	  *--p = '\0';
 7105              		.loc 1 3125 2 is_stmt 1 view .LVU2221
3125:src/keys.c    **** 	  *--p = '\0';
 7106              		.loc 1 3125 8 is_stmt 0 view .LVU2222
 7107 0a34 03F5F663 		add	r3, r3, #1968
3125:src/keys.c    **** 	  *--p = '\0';
 7108              		.loc 1 3125 5 view .LVU2223
 7109 0a38 9842     		cmp	r0, r3
3126:src/keys.c    ****       }
 7110              		.loc 1 3126 4 is_stmt 1 view .LVU2224
 7111              	.LVL592:
3126:src/keys.c    ****       }
 7112              		.loc 1 3126 9 is_stmt 0 view .LVU2225
 7113 0a3a 84BF     		itt	hi
 7114 0a3c 0023     		movhi	r3, #0
 7115 0a3e 00F8013C 		strbhi	r3, [r0, #-1]
 7116 0a42 E2E5     		b	.L1064
 7117              	.LVL593:
 7118              	.L1094:
3126:src/keys.c    ****       }
ARM GAS  /tmp/ccy15zOt.s 			page 217


 7119              		.loc 1 3126 9 view .LVU2226
 7120              	.LBE1249:
 7121              	.LBB1250:
 7122              	.LBB1193:
2842:src/keys.c    **** 
 7123              		.loc 1 2842 3 is_stmt 1 view .LVU2227
 7124              	.LBB846:
 7125              	.LBI846:
1905:src/keys.c    **** 	int r = State2.test;
 7126              		.loc 1 1905 12 view .LVU2228
 7127              	.LBB847:
1906:src/keys.c    **** 	int cmpx = State2.cmplx;
 7128              		.loc 1 1906 2 view .LVU2229
1907:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 7129              		.loc 1 1907 2 view .LVU2230
 7130              	.LBB848:
 7131              	.LBB849:
 7132              	.LBB850:
 7133              	.LBB851:
 131:src/keys.c    **** }
 7134              		.loc 1 131 23 is_stmt 0 view .LVU2231
 7135 0a44 BA48     		ldr	r0, .L1163+12
 7136              	.LBE851:
 7137              	.LBE850:
 221:src/keys.c    **** }
 7138              		.loc 1 221 28 view .LVU2232
 7139 0a46 DFF8ECC2 		ldr	ip, .L1163+16
 7140              	.LBB855:
 7141              	.LBB852:
 131:src/keys.c    **** }
 7142              		.loc 1 131 23 view .LVU2233
 7143 0a4a E4B2     		uxtb	r4, r4
 7144              	.LVL594:
 131:src/keys.c    **** }
 7145              		.loc 1 131 23 view .LVU2234
 7146              	.LBE852:
 7147              	.LBE855:
 7148              	.LBE849:
 7149              	.LBE848:
1909:src/keys.c    **** 
 7150              		.loc 1 1909 44 view .LVU2235
 7151 0a4c 12F0020F 		tst	r2, #2
 7152              	.LBB860:
 7153              	.LBB858:
 7154              	.LBB856:
 7155              	.LBB853:
 131:src/keys.c    **** }
 7156              		.loc 1 131 23 view .LVU2236
 7157 0a50 005D     		ldrb	r0, [r0, r4]	@ zero_extendqisi2
 7158              	.LBE853:
 7159              	.LBE856:
 221:src/keys.c    **** }
 7160              		.loc 1 221 28 view .LVU2237
 7161 0a52 1CF800C0 		ldrb	ip, [ip, r0]	@ zero_extendqisi2
 7162              	.LBE858:
 7163              	.LBE860:
1907:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
ARM GAS  /tmp/ccy15zOt.s 			page 218


 7164              		.loc 1 1907 19 view .LVU2238
 7165 0a56 C2F3400E 		ubfx	lr, r2, #1, #1
 7166              	.LVL595:
1908:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 7167              		.loc 1 1908 2 is_stmt 1 view .LVU2239
 7168              	.LBB861:
 7169              	.LBI848:
 198:src/keys.c    **** {
 7170              		.loc 1 198 14 view .LVU2240
 7171              	.LBB859:
 200:src/keys.c    ****     // K00 - K05
 7172              		.loc 1 200 3 view .LVU2241
 221:src/keys.c    **** }
 7173              		.loc 1 221 3 view .LVU2242
 7174              	.LBB857:
 7175              	.LBI850:
 119:src/keys.c    **** {
 7176              		.loc 1 119 12 view .LVU2243
 7177              	.LBB854:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 7178              		.loc 1 121 2 view .LVU2244
 131:src/keys.c    **** }
 7179              		.loc 1 131 2 view .LVU2245
 131:src/keys.c    **** }
 7180              		.loc 1 131 2 is_stmt 0 view .LVU2246
 7181              	.LBE854:
 7182              	.LBE857:
 7183              	.LBE859:
 7184              	.LBE861:
1908:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 7185              		.loc 1 1908 15 view .LVU2247
 7186 0a5a 2CF08000 		bic	r0, ip, #128
 7187              	.LVL596:
1909:src/keys.c    **** 
 7188              		.loc 1 1909 2 is_stmt 1 view .LVU2248
1909:src/keys.c    **** 
 7189              		.loc 1 1909 44 is_stmt 0 view .LVU2249
 7190 0a5e 00F08C80 		beq	.L1120
 7191              	.LVL597:
1911:src/keys.c    **** 	State2.cmplx = 0;
 7192              		.loc 1 1911 2 is_stmt 1 view .LVU2250
1912:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7193              		.loc 1 1912 15 is_stmt 0 view .LVU2251
 7194 0a62 61F34102 		bfi	r2, r1, #1, #1
1913:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7195              		.loc 1 1913 5 view .LVU2252
 7196 0a66 6428     		cmp	r0, #100
1911:src/keys.c    **** 	State2.cmplx = 0;
 7197              		.loc 1 1911 14 view .LVU2253
 7198 0a68 4FF00701 		mov	r1, #7
1912:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7199              		.loc 1 1912 15 view .LVU2254
 7200 0a6c 88F81520 		strb	r2, [r8, #21]
1911:src/keys.c    **** 	State2.cmplx = 0;
 7201              		.loc 1 1911 14 view .LVU2255
 7202 0a70 88F80F10 		strb	r1, [r8, #15]
1912:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
ARM GAS  /tmp/ccy15zOt.s 			page 219


 7203              		.loc 1 1912 2 is_stmt 1 view .LVU2256
1913:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7204              		.loc 1 1913 2 view .LVU2257
1913:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7205              		.loc 1 1913 5 is_stmt 0 view .LVU2258
 7206 0a74 00F0F283 		beq	.L897
1909:src/keys.c    **** 
 7207              		.loc 1 1909 44 view .LVU2259
 7208 0a78 4FF0340A 		mov	r10, #52
 7209              	.LVL598:
 7210              	.L857:
1914:src/keys.c    **** 		// Lettered register
 7211              		.loc 1 1914 5 view .LVU2260
 7212 0a7c 7F28     		cmp	r0, #127
1909:src/keys.c    **** 
 7213              		.loc 1 1909 60 view .LVU2261
 7214 0a7e DA44     		add	r10, r10, fp
1914:src/keys.c    **** 		// Lettered register
 7215              		.loc 1 1914 2 is_stmt 1 view .LVU2262
1914:src/keys.c    **** 		// Lettered register
 7216              		.loc 1 1914 5 is_stmt 0 view .LVU2263
 7217 0a80 00F0FC80 		beq	.L625
 7218              	.LVL599:
1914:src/keys.c    **** 		// Lettered register
 7219              		.loc 1 1914 18 view .LVU2264
 7220 0a84 6328     		cmp	r0, #99
 7221 0a86 40F21D81 		bls	.L626
1914:src/keys.c    **** 		// Lettered register
 7222              		.loc 1 1914 37 view .LVU2265
 7223 0a8a 6F28     		cmp	r0, #111
 7224 0a8c 00F2F680 		bhi	.L625
1916:src/keys.c    **** 			if (n == regI_idx)
 7225              		.loc 1 1916 3 is_stmt 1 view .LVU2266
1916:src/keys.c    **** 			if (n == regI_idx)
 7226              		.loc 1 1916 6 is_stmt 0 view .LVU2267
 7227 0a90 BEF1000F 		cmp	lr, #0
 7228 0a94 00F0AF81 		beq	.L627
1916:src/keys.c    **** 			if (n == regI_idx)
 7229              		.loc 1 1916 12 view .LVU2268
 7230 0a98 1CF0010F 		tst	ip, #1
 7231 0a9c 00F0AB81 		beq	.L627
1917:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 7232              		.loc 1 1917 4 is_stmt 1 view .LVU2269
1917:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 7233              		.loc 1 1917 7 is_stmt 0 view .LVU2270
 7234 0aa0 6D28     		cmp	r0, #109
 7235 0aa2 40F0F880 		bne	.L628
1918:src/keys.c    **** 			// Disallow odd complex registers > A
 7236              		.loc 1 1918 5 is_stmt 1 view .LVU2271
1918:src/keys.c    **** 			// Disallow odd complex registers > A
 7237              		.loc 1 1918 30 is_stmt 0 view .LVU2272
 7238 0aa6 0BF1290B 		add	fp, fp, #41
 7239              	.LVL600:
1918:src/keys.c    **** 			// Disallow odd complex registers > A
 7240              		.loc 1 1918 30 view .LVU2273
 7241 0aaa 6DE5     		b	.L594
 7242              	.LVL601:
ARM GAS  /tmp/ccy15zOt.s 			page 220


 7243              	.L1092:
1918:src/keys.c    **** 			// Disallow odd complex registers > A
 7244              		.loc 1 1918 30 view .LVU2274
 7245              	.LBE847:
 7246              	.LBE846:
2836:src/keys.c    **** 
 7247              		.loc 1 2836 3 is_stmt 1 view .LVU2275
 7248              	.LBB871:
 7249              	.LBI871:
1322:src/keys.c    **** 	int pc = -1;
 7250              		.loc 1 1322 12 view .LVU2276
 7251              	.LBB872:
1323:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
 7252              		.loc 1 1323 2 view .LVU2277
1324:src/keys.c    **** 
 7253              		.loc 1 1324 2 view .LVU2278
 7254              	.LBB873:
 7255              	.LBI873:
 198:src/keys.c    **** {
 7256              		.loc 1 198 14 view .LVU2279
 7257              	.LBB874:
 200:src/keys.c    ****     // K00 - K05
 7258              		.loc 1 200 3 view .LVU2280
 221:src/keys.c    **** }
 7259              		.loc 1 221 3 view .LVU2281
 7260              	.LBB875:
 7261              	.LBI875:
 119:src/keys.c    **** {
 7262              		.loc 1 119 12 view .LVU2282
 7263              	.LBB876:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 7264              		.loc 1 121 2 view .LVU2283
 131:src/keys.c    **** }
 7265              		.loc 1 131 2 view .LVU2284
 131:src/keys.c    **** }
 7266              		.loc 1 131 23 is_stmt 0 view .LVU2285
 7267 0aac A04B     		ldr	r3, .L1163+12
 7268              	.LBE876:
 7269              	.LBE875:
 221:src/keys.c    **** }
 7270              		.loc 1 221 28 view .LVU2286
 7271 0aae A14A     		ldr	r2, .L1163+16
 7272 0ab0 E4B2     		uxtb	r4, r4
 7273              	.LVL602:
 7274              	.LBB878:
 7275              	.LBB877:
 131:src/keys.c    **** }
 7276              		.loc 1 131 23 view .LVU2287
 7277 0ab2 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 7278              	.LBE877:
 7279              	.LBE878:
 221:src/keys.c    **** }
 7280              		.loc 1 221 28 view .LVU2288
 7281 0ab4 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 7282              	.LVL603:
 221:src/keys.c    **** }
 7283              		.loc 1 221 28 view .LVU2289
ARM GAS  /tmp/ccy15zOt.s 			page 221


 7284              	.LBE874:
 7285              	.LBE873:
1326:src/keys.c    **** 		// Digit 0 - 9
 7286              		.loc 1 1326 2 is_stmt 1 view .LVU2290
1326:src/keys.c    **** 		// Digit 0 - 9
 7287              		.loc 1 1326 5 is_stmt 0 view .LVU2291
 7288 0ab6 0928     		cmp	r0, #9
 7289 0ab8 40F2F980 		bls	.L1121
1331:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 7290              		.loc 1 1331 7 is_stmt 1 view .LVU2292
1331:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 7291              		.loc 1 1331 18 is_stmt 0 view .LVU2293
 7292 0abc 20F08000 		bic	r0, r0, #128
 7293              	.LVL604:
1331:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 7294              		.loc 1 1331 10 view .LVU2294
 7295 0ac0 6428     		cmp	r0, #100
 7296 0ac2 00F08B81 		beq	.L1122
1332:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 7297              		.loc 1 1332 7 is_stmt 1 view .LVU2295
1332:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 7298              		.loc 1 1332 10 is_stmt 0 view .LVU2296
 7299 0ac6 6528     		cmp	r0, #101
 7300 0ac8 00F09C81 		beq	.L1123
1333:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 7301              		.loc 1 1333 7 is_stmt 1 view .LVU2297
1333:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 7302              		.loc 1 1333 10 is_stmt 0 view .LVU2298
 7303 0acc 6628     		cmp	r0, #102
 7304 0ace 00F0B881 		beq	.L1124
1334:src/keys.c    **** #endif
 7305              		.loc 1 1334 7 is_stmt 1 view .LVU2299
1334:src/keys.c    **** #endif
 7306              		.loc 1 1334 10 is_stmt 0 view .LVU2300
 7307 0ad2 6728     		cmp	r0, #103
 7308 0ad4 00F0F982 		beq	.L1125
1336:src/keys.c    **** 		// A - D
 7309              		.loc 1 1336 7 is_stmt 1 view .LVU2301
1336:src/keys.c    **** 		// A - D
 7310              		.loc 1 1336 10 is_stmt 0 view .LVU2302
 7311 0ad8 032C     		cmp	r4, #3
 7312 0ada 40F2A483 		bls	.L1126
1341:src/keys.c    **** 		// .
 7313              		.loc 1 1341 7 is_stmt 1 view .LVU2303
1341:src/keys.c    **** 		// .
 7314              		.loc 1 1341 10 is_stmt 0 view .LVU2304
 7315 0ade 262C     		cmp	r4, #38
 7316 0ae0 00F02484 		beq	.L1127
1346:src/keys.c    **** 		// ENTER - short circuit processing
 7317              		.loc 1 1346 7 is_stmt 1 view .LVU2305
1346:src/keys.c    **** 		// ENTER - short circuit processing
 7318              		.loc 1 1346 10 is_stmt 0 view .LVU2306
 7319 0ae4 0C2C     		cmp	r4, #12
 7320 0ae6 00F0BD83 		beq	.L1128
1350:src/keys.c    **** 		// backspace
 7321              		.loc 1 1350 7 is_stmt 1 view .LVU2307
1350:src/keys.c    **** 		// backspace
ARM GAS  /tmp/ccy15zOt.s 			page 222


 7322              		.loc 1 1350 10 is_stmt 0 view .LVU2308
 7323 0aea 102C     		cmp	r4, #16
 7324 0aec 00F0C584 		beq	.L1129
1359:src/keys.c    **** 		// up
 7325              		.loc 1 1359 7 is_stmt 1 view .LVU2309
1359:src/keys.c    **** 		// up
 7326              		.loc 1 1359 10 is_stmt 0 view .LVU2310
 7327 0af0 122C     		cmp	r4, #18
 7328 0af2 00F05C86 		beq	.L1130
1369:src/keys.c    **** 		// down
 7329              		.loc 1 1369 7 is_stmt 1 view .LVU2311
1369:src/keys.c    **** 		// down
 7330              		.loc 1 1369 10 is_stmt 0 view .LVU2312
 7331 0af6 182C     		cmp	r4, #24
 7332 0af8 7FF45DAE 		bne	.L1069
1371:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 7333              		.loc 1 1371 3 is_stmt 1 view .LVU2313
1372:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 7334              		.loc 1 1372 18 is_stmt 0 view .LVU2314
 7335 0afc 8B4C     		ldr	r4, .L1163+8
1371:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 7336              		.loc 1 1371 3 view .LVU2315
 7337 0afe 0120     		movs	r0, #1
 7338 0b00 FFF7FEFF 		bl	update_program_bounds
 7339              	.LVL605:
1372:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 7340              		.loc 1 1372 3 is_stmt 1 view .LVU2316
1372:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 7341              		.loc 1 1372 18 is_stmt 0 view .LVU2317
 7342 0b04 2368     		ldr	r3, [r4]
1372:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 7343              		.loc 1 1372 11 view .LVU2318
 7344 0b06 0021     		movs	r1, #0
 7345 0b08 B3F8EE07 		ldrh	r0, [r3, #2030]
 7346 0b0c FFF7FEFF 		bl	do_inc
 7347              	.LVL606:
1373:src/keys.c    **** 			rawpc = 1;
 7348              		.loc 1 1373 3 is_stmt 1 view .LVU2319
1373:src/keys.c    **** 			rawpc = 1;
 7349              		.loc 1 1373 6 is_stmt 0 view .LVU2320
 7350 0b10 20B9     		cbnz	r0, .L607
1373:src/keys.c    **** 			rawpc = 1;
 7351              		.loc 1 1373 21 view .LVU2321
 7352 0b12 2368     		ldr	r3, [r4]
1373:src/keys.c    **** 			rawpc = 1;
 7353              		.loc 1 1373 18 view .LVU2322
 7354 0b14 5888     		ldrh	r0, [r3, #2]
 7355              	.LVL607:
1373:src/keys.c    **** 			rawpc = 1;
 7356              		.loc 1 1373 18 view .LVU2323
 7357 0b16 0038     		subs	r0, r0, #0
 7358 0b18 18BF     		it	ne
 7359 0b1a 0120     		movne	r0, #1
 7360              	.LVL608:
 7361              	.L607:
1379:src/keys.c    **** fin2:		State2.gtodot = 0;
 7362              		.loc 1 1379 7 is_stmt 1 view .LVU2324
ARM GAS  /tmp/ccy15zOt.s 			page 223


 7363 0b1c FFF7FEFF 		bl	set_pc
 7364              	.LVL609:
 7365              	.L611:
1380:src/keys.c    **** 		State2.digval = 0;
 7366              		.loc 1 1380 8 view .LVU2325
1380:src/keys.c    **** 		State2.digval = 0;
 7367              		.loc 1 1380 22 is_stmt 0 view .LVU2326
 7368 0b20 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
1381:src/keys.c    **** 		State2.numdigit = 0;
 7369              		.loc 1 1381 17 view .LVU2327
 7370 0b24 0023     		movs	r3, #0
1380:src/keys.c    **** 		State2.digval = 0;
 7371              		.loc 1 1380 22 view .LVU2328
 7372 0b26 6FF30002 		bfc	r2, #0, #1
 7373 0b2a 88F81520 		strb	r2, [r8, #21]
1381:src/keys.c    **** 		State2.numdigit = 0;
 7374              		.loc 1 1381 3 is_stmt 1 view .LVU2329
1381:src/keys.c    **** 		State2.numdigit = 0;
 7375              		.loc 1 1381 17 is_stmt 0 view .LVU2330
 7376 0b2e A8F80830 		strh	r3, [r8, #8]	@ movhi
1382:src/keys.c    **** 	}
 7377              		.loc 1 1382 3 is_stmt 1 view .LVU2331
1382:src/keys.c    **** 	}
 7378              		.loc 1 1382 19 is_stmt 0 view .LVU2332
 7379 0b32 88F80B30 		strb	r3, [r8, #11]
 7380              	.LBE872:
 7381              	.LBE871:
2836:src/keys.c    **** 
 7382              		.loc 1 2836 10 view .LVU2333
 7383 0b36 4FF0330B 		mov	fp, #51
 7384 0b3a FFF7B5BA 		b	.L565
 7385              	.LVL610:
 7386              	.L894:
2836:src/keys.c    **** 
 7387              		.loc 1 2836 10 view .LVU2334
 7388              	.LBE1193:
 7389              	.LBE1250:
2952:src/keys.c    ****   if (was_paused && Pause == 0) {
 7390              		.loc 1 2952 7 view .LVU2335
 7391 0b3e 5F46     		mov	r7, fp
 7392 0b40 FFF7B2BA 		b	.L565
 7393              	.LVL611:
 7394              	.L615:
 7395              	.LBB1251:
 7396              	.LBB1194:
 7397              	.LBB892:
 7398              	.LBB693:
1234:src/keys.c    **** 
 7399              		.loc 1 1234 2 view .LVU2336
 7400 0b44 2D2C     		cmp	r4, #45
 7401 0b46 7FF436AE 		bne	.L1069
1242:src/keys.c    **** 		goto stay;
 7402              		.loc 1 1242 3 is_stmt 1 view .LVU2337
 7403 0b4a 8AF0010A 		eor	r10, r10, #1
 7404              	.LVL612:
1243:src/keys.c    **** 
 7405              		.loc 1 1243 3 view .LVU2338
ARM GAS  /tmp/ccy15zOt.s 			page 224


 7406              	.L621:
1251:src/keys.c    **** 		State2.cmplx = cmplx;
 7407              		.loc 1 1251 3 view .LVU2339
1252:src/keys.c    **** 		State2.dot = f;
 7408              		.loc 1 1252 3 view .LVU2340
1253:src/keys.c    **** 		break;
 7409              		.loc 1 1253 3 view .LVU2341
1252:src/keys.c    **** 		State2.dot = f;
 7410              		.loc 1 1252 16 is_stmt 0 view .LVU2342
 7411 0b4e 4FEA4A03 		lsl	r3, r10, #1
 7412 0b52 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 7413 0b56 43F02003 		orr	r3, r3, #32
 7414 0b5a 43EA8913 		orr	r3, r3, r9, lsl #6
 7415 0b5e 03F06203 		and	r3, r3, #98
 7416 0b62 22F06202 		bic	r2, r2, #98
 7417 0b66 1343     		orrs	r3, r3, r2
 7418 0b68 88F81530 		strb	r3, [r8, #21]
1254:src/keys.c    **** 
 7419              		.loc 1 1254 3 is_stmt 1 view .LVU2343
1259:src/keys.c    **** }
 7420              		.loc 1 1259 9 is_stmt 0 view .LVU2344
 7421 0b6c 4FF0330B 		mov	fp, #51
1254:src/keys.c    **** 
 7422              		.loc 1 1254 3 view .LVU2345
 7423 0b70 FFF79ABA 		b	.L565
 7424              	.LVL613:
 7425              	.L895:
1254:src/keys.c    **** 
 7426              		.loc 1 1254 3 view .LVU2346
 7427              	.LBE693:
 7428              	.LBE892:
 7429              	.LBE1194:
 7430              	.LBE1251:
 7431              	.LBB1252:
 7432 0b74 9B46     		mov	fp, r3
 7433              	.LVL614:
1254:src/keys.c    **** 
 7434              		.loc 1 1254 3 view .LVU2347
 7435 0b76 FFF7B9BA 		b	.L843
 7436              	.LVL615:
 7437              	.L1120:
1254:src/keys.c    **** 
 7438              		.loc 1 1254 3 view .LVU2348
 7439              	.LBE1252:
 7440              	.LBB1253:
 7441              	.LBB1195:
 7442              	.LBB893:
 7443              	.LBB864:
1911:src/keys.c    **** 	State2.cmplx = 0;
 7444              		.loc 1 1911 2 is_stmt 1 view .LVU2349
1912:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7445              		.loc 1 1912 15 is_stmt 0 view .LVU2350
 7446 0b7a 6EF34102 		bfi	r2, lr, #1, #1
1911:src/keys.c    **** 	State2.cmplx = 0;
 7447              		.loc 1 1911 14 view .LVU2351
 7448 0b7e 0721     		movs	r1, #7
1913:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
ARM GAS  /tmp/ccy15zOt.s 			page 225


 7449              		.loc 1 1913 5 view .LVU2352
 7450 0b80 6428     		cmp	r0, #100
1912:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7451              		.loc 1 1912 15 view .LVU2353
 7452 0b82 88F81520 		strb	r2, [r8, #21]
1911:src/keys.c    **** 	State2.cmplx = 0;
 7453              		.loc 1 1911 14 view .LVU2354
 7454 0b86 88F80F10 		strb	r1, [r8, #15]
1912:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7455              		.loc 1 1912 2 is_stmt 1 view .LVU2355
1913:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7456              		.loc 1 1913 2 view .LVU2356
1913:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7457              		.loc 1 1913 5 is_stmt 0 view .LVU2357
 7458 0b8a 00F06383 		beq	.L898
1909:src/keys.c    **** 
 7459              		.loc 1 1909 44 view .LVU2358
 7460 0b8e 4FF02D0A 		mov	r10, #45
 7461              	.LVL616:
1909:src/keys.c    **** 
 7462              		.loc 1 1909 44 view .LVU2359
 7463 0b92 73E7     		b	.L857
 7464              	.LVL617:
 7465              	.L1095:
1909:src/keys.c    **** 
 7466              		.loc 1 1909 44 view .LVU2360
 7467              	.LBE864:
 7468              	.LBE893:
2845:src/keys.c    **** 
 7469              		.loc 1 2845 3 is_stmt 1 view .LVU2361
 7470              	.LBB894:
 7471              	.LBB895:
2474:src/keys.c    **** 
 7472              		.loc 1 2474 12 is_stmt 0 view .LVU2362
 7473 0b94 654A     		ldr	r2, .L1163+8
 7474 0b96 1268     		ldr	r2, [r2]
2474:src/keys.c    **** 
 7475              		.loc 1 2474 31 view .LVU2363
 7476 0b98 B2F9DE27 		ldrsh	r2, [r2, #2014]
 7477              	.LBE895:
 7478              	.LBE894:
2845:src/keys.c    **** 
 7479              		.loc 1 2845 10 view .LVU2364
 7480 0b9c E4B2     		uxtb	r4, r4
 7481              	.LVL618:
 7482              	.LBB912:
 7483              	.LBI894:
2472:src/keys.c    **** 	int n = ((int)State2.status) - 3;
 7484              		.loc 1 2472 12 is_stmt 1 view .LVU2365
 7485              	.LBB905:
2473:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7486              		.loc 1 2473 2 view .LVU2366
2474:src/keys.c    **** 
 7487              		.loc 1 2474 2 view .LVU2367
2474:src/keys.c    **** 
 7488              		.loc 1 2474 31 is_stmt 0 view .LVU2368
 7489 0b9e 002A     		cmp	r2, #0
ARM GAS  /tmp/ccy15zOt.s 			page 226


 7490 0ba0 B4BF     		ite	lt
 7491 0ba2 0B20     		movlt	r0, #11
 7492 0ba4 0A20     		movge	r0, #10
 7493              	.LVL619:
2476:src/keys.c    **** 		if (--n < -2)
 7494              		.loc 1 2476 2 is_stmt 1 view .LVU2369
2476:src/keys.c    **** 		if (--n < -2)
 7495              		.loc 1 2476 5 is_stmt 0 view .LVU2370
 7496 0ba6 122C     		cmp	r4, #18
 7497 0ba8 00F01281 		beq	.L1131
2480:src/keys.c    **** 		if (++n > max)
 7498              		.loc 1 2480 7 is_stmt 1 view .LVU2371
2480:src/keys.c    **** 		if (++n > max)
 7499              		.loc 1 2480 10 is_stmt 0 view .LVU2372
 7500 0bac 182C     		cmp	r4, #24
 7501 0bae 00F03781 		beq	.L1132
2484:src/keys.c    **** 		State2.status = 0;
 7502              		.loc 1 2484 7 is_stmt 1 view .LVU2373
2484:src/keys.c    **** 		State2.status = 0;
 7503              		.loc 1 2484 10 is_stmt 0 view .LVU2374
 7504 0bb2 102C     		cmp	r4, #16
 7505 0bb4 00F07484 		beq	.L1133
 7506              	.LBB896:
2489:src/keys.c    **** 		if (nn <= 9)
 7507              		.loc 1 2489 3 is_stmt 1 view .LVU2375
 7508              	.LVL620:
 7509              	.LBB897:
 7510              	.LBI897:
 198:src/keys.c    **** {
 7511              		.loc 1 198 14 view .LVU2376
 7512              	.LBB898:
 200:src/keys.c    ****     // K00 - K05
 7513              		.loc 1 200 3 view .LVU2377
 221:src/keys.c    **** }
 7514              		.loc 1 221 3 view .LVU2378
 7515              	.LBB899:
 7516              	.LBI899:
 119:src/keys.c    **** {
 7517              		.loc 1 119 12 view .LVU2379
 7518              	.LBB900:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 7519              		.loc 1 121 2 view .LVU2380
 131:src/keys.c    **** }
 7520              		.loc 1 131 2 view .LVU2381
 131:src/keys.c    **** }
 7521              		.loc 1 131 23 is_stmt 0 view .LVU2382
 7522 0bb8 5D4A     		ldr	r2, .L1163+12
 7523              	.LBE900:
 7524              	.LBE899:
 221:src/keys.c    **** }
 7525              		.loc 1 221 28 view .LVU2383
 7526 0bba 5E49     		ldr	r1, .L1163+16
 7527              	.LBB902:
 7528              	.LBB901:
 131:src/keys.c    **** }
 7529              		.loc 1 131 23 view .LVU2384
 7530 0bbc 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
ARM GAS  /tmp/ccy15zOt.s 			page 227


 7531 0bbe 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7532 0bc0 02F07F02 		and	r2, r2, #127
 7533              	.LVL621:
 131:src/keys.c    **** }
 7534              		.loc 1 131 23 view .LVU2385
 7535              	.LBE901:
 7536              	.LBE902:
 7537              	.LBE898:
 7538              	.LBE897:
2490:src/keys.c    **** 			n = nn;
 7539              		.loc 1 2490 3 is_stmt 1 view .LVU2386
2490:src/keys.c    **** 			n = nn;
 7540              		.loc 1 2490 6 is_stmt 0 view .LVU2387
 7541 0bc4 092A     		cmp	r2, #9
 7542 0bc6 08D9     		bls	.L641
2492:src/keys.c    **** 			n = n == max ? 10 : max;
 7543              		.loc 1 2492 11 view .LVU2388
 7544 0bc8 702A     		cmp	r2, #112
 7545              	.LBE896:
2473:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7546              		.loc 1 2473 6 view .LVU2389
 7547 0bca A3F10303 		sub	r3, r3, #3
 7548              	.LVL622:
 7549              	.LBB903:
2492:src/keys.c    **** 			n = n == max ? 10 : max;
 7550              		.loc 1 2492 8 is_stmt 1 view .LVU2390
2492:src/keys.c    **** 			n = n == max ? 10 : max;
 7551              		.loc 1 2492 11 is_stmt 0 view .LVU2391
 7552 0bce 00F03381 		beq	.L1134
2494:src/keys.c    **** 			n = 10; 
 7553              		.loc 1 2494 8 is_stmt 1 view .LVU2392
2494:src/keys.c    **** 			n = 10; 
 7554              		.loc 1 2494 11 is_stmt 0 view .LVU2393
 7555 0bd2 7F2A     		cmp	r2, #127
 7556 0bd4 00F02583 		beq	.L1058
 7557              	.L865:
 7558 0bd8 0A22     		movs	r2, #10
 7559              	.LVL623:
 7560              	.L641:
2494:src/keys.c    **** 			n = 10; 
 7561              		.loc 1 2494 11 view .LVU2394
 7562              	.LBE903:
2497:src/keys.c    **** 
 7563              		.loc 1 2497 2 is_stmt 1 view .LVU2395
2497:src/keys.c    **** 
 7564              		.loc 1 2497 20 is_stmt 0 view .LVU2396
 7565 0bda 0332     		adds	r2, r2, #3
2497:src/keys.c    **** 
 7566              		.loc 1 2497 16 view .LVU2397
 7567 0bdc 88F80C20 		strb	r2, [r8, #12]
2499:src/keys.c    **** }
 7568              		.loc 1 2499 2 is_stmt 1 view .LVU2398
 7569              	.LBE905:
 7570              	.LBE912:
2845:src/keys.c    **** 
 7571              		.loc 1 2845 10 is_stmt 0 view .LVU2399
 7572 0be0 4FF0330B 		mov	fp, #51
ARM GAS  /tmp/ccy15zOt.s 			page 228


 7573              	.LBB913:
 7574              	.LBB906:
2499:src/keys.c    **** }
 7575              		.loc 1 2499 9 view .LVU2400
 7576 0be4 FFF760BA 		b	.L565
 7577              	.LVL624:
 7578              	.L1099:
2499:src/keys.c    **** }
 7579              		.loc 1 2499 9 view .LVU2401
 7580              	.LBE906:
 7581              	.LBE913:
2868:src/keys.c    **** 
 7582              		.loc 1 2868 3 is_stmt 1 view .LVU2402
 7583              	.LBB914:
 7584              	.LBB915:
 7585              	.LBB916:
 7586              	.LBB917:
 7587              	.LBB918:
 7588              	.LBB919:
 7589              	.LBB920:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7590              		.loc 1 85 18 is_stmt 0 view .LVU2403
 7591 0be8 FFF7FEFF 		bl	shift_down
 7592              	.LVL625:
 7593              	.LBE920:
 7594              	.LBE919:
 7595              	.LBE918:
 7596              	.LBE917:
 7597              	.LBE916:
 7598              	.LBE915:
 7599              	.LBE914:
2868:src/keys.c    **** 
 7600              		.loc 1 2868 10 view .LVU2404
 7601 0bec E4B2     		uxtb	r4, r4
 7602              	.LVL626:
 7603              	.LBB940:
 7604              	.LBI914:
1266:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 7605              		.loc 1 1266 12 is_stmt 1 view .LVU2405
 7606              	.LBB937:
1267:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
 7607              		.loc 1 1267 2 view .LVU2406
1272:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
 7608              		.loc 1 1272 2 view .LVU2407
1276:src/keys.c    **** 	const int f = (shift == SHIFT_F);
 7609              		.loc 1 1276 2 view .LVU2408
 7610              	.LBB929:
 7611              	.LBI916:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 7612              		.loc 1 102 13 view .LVU2409
 7613              	.LBE929:
 7614              	.LBE937:
 7615              	.LBE940:
 7616              	.LBE1195:
 7617              	.LBE1253:
 103:src/keys.c    **** }
 7618              		.loc 1 103 2 view .LVU2410
ARM GAS  /tmp/ccy15zOt.s 			page 229


 7619              	.LBB1254:
 7620              	.LBB1196:
 7621              	.LBB941:
 7622              	.LBB938:
 7623              	.LBB930:
 7624              	.LBB926:
 7625              	.LBI917:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 7626              		.loc 1 92 20 view .LVU2411
 7627              	.LBB923:
  93:src/keys.c    **** 	State2.shifts = shift;
 7628              		.loc 1 93 2 view .LVU2412
 7629              	.LBB922:
 7630              	.LBI919:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 7631              		.loc 1 84 13 view .LVU2413
 7632              	.LBB921:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7633              		.loc 1 85 2 view .LVU2414
  86:src/keys.c    **** }
 7634              		.loc 1 86 2 view .LVU2415
  86:src/keys.c    **** }
 7635              		.loc 1 86 52 is_stmt 0 view .LVU2416
 7636 0bee 8346     		mov	fp, r0
 7637 0bf0 08B9     		cbnz	r0, .L651
 7638 0bf2 98F810B0 		ldrb	fp, [r8, #16]	@ zero_extendqisi2
 7639              	.L651:
 7640              	.LVL627:
  86:src/keys.c    **** }
 7641              		.loc 1 86 52 view .LVU2417
 7642              	.LBE921:
 7643              	.LBE922:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 7644              		.loc 1 94 2 is_stmt 1 view .LVU2418
 7645              	.LBE923:
 7646              	.LBE926:
 7647              	.LBE930:
1279:src/keys.c    **** #ifdef DM42
 7648              		.loc 1 1279 15 is_stmt 0 view .LVU2419
 7649 0bf6 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 7650              	.LBB931:
 7651              	.LBB927:
 7652              	.LBB924:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 7653              		.loc 1 94 16 view .LVU2420
 7654 0bfa 0023     		movs	r3, #0
 7655              	.LBE924:
 7656              	.LBE927:
 7657              	.LBE931:
1277:src/keys.c    **** 
 7658              		.loc 1 1277 23 view .LVU2421
 7659 0bfc ABF1010A 		sub	r10, fp, #1
 7660              	.LVL628:
1279:src/keys.c    **** #ifdef DM42
 7661              		.loc 1 1279 15 view .LVU2422
 7662 0c00 63F38202 		bfi	r2, r3, #2, #1
1277:src/keys.c    **** 
ARM GAS  /tmp/ccy15zOt.s 			page 230


 7663              		.loc 1 1277 23 view .LVU2423
 7664 0c04 BAFA8AFA 		clz	r10, r10
1279:src/keys.c    **** #ifdef DM42
 7665              		.loc 1 1279 15 view .LVU2424
 7666 0c08 88F81520 		strb	r2, [r8, #21]
 7667              	.LBB932:
 7668              	.LBB928:
 7669              	.LBB925:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 7670              		.loc 1 94 16 view .LVU2425
 7671 0c0c 88F81030 		strb	r3, [r8, #16]
  96:src/keys.c    **** }
 7672              		.loc 1 96 2 is_stmt 1 view .LVU2426
 7673              	.LVL629:
  96:src/keys.c    **** }
 7674              		.loc 1 96 2 is_stmt 0 view .LVU2427
 7675              	.LBE925:
 7676              	.LBE928:
 7677              	.LBE932:
1277:src/keys.c    **** 
 7678              		.loc 1 1277 2 is_stmt 1 view .LVU2428
1277:src/keys.c    **** 
 7679              		.loc 1 1277 23 is_stmt 0 view .LVU2429
 7680 0c10 4FEA5A1A 		lsr	r10, r10, #5
 7681              	.LVL630:
1279:src/keys.c    **** #ifdef DM42
 7682              		.loc 1 1279 2 is_stmt 1 view .LVU2430
1281:src/keys.c    **** 	display_current_menu ();
 7683              		.loc 1 1281 2 view .LVU2431
 7684 0c14 FFF7FEFF 		bl	set_last_menu
 7685              	.LVL631:
1282:src/keys.c    **** #endif
 7686              		.loc 1 1282 2 view .LVU2432
 7687 0c18 FFF7FEFF 		bl	display_current_menu
 7688              	.LVL632:
1284:src/keys.c    **** 	
 7689              		.loc 1 1284 2 view .LVU2433
1284:src/keys.c    **** 	
 7690              		.loc 1 1284 5 is_stmt 0 view .LVU2434
 7691 0c1c BBF1000F 		cmp	fp, #0
 7692 0c20 3FF4C9AD 		beq	.L1069
1286:src/keys.c    **** 		return op_map[c - K10][f];
 7693              		.loc 1 1286 2 is_stmt 1 view .LVU2435
1286:src/keys.c    **** 		return op_map[c - K10][f];
 7694              		.loc 1 1286 15 is_stmt 0 view .LVU2436
 7695 0c24 A31F     		subs	r3, r4, #6
1286:src/keys.c    **** 		return op_map[c - K10][f];
 7696              		.loc 1 1286 5 view .LVU2437
 7697 0c26 DAB2     		uxtb	r2, r3
 7698 0c28 022A     		cmp	r2, #2
 7699 0c2a 40F2F280 		bls	.L1135
1289:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7700              		.loc 1 1289 2 is_stmt 1 view .LVU2438
1289:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7701              		.loc 1 1289 15 is_stmt 0 view .LVU2439
 7702 0c2e 0E3C     		subs	r4, r4, #14
 7703              	.LVL633:
ARM GAS  /tmp/ccy15zOt.s 			page 231


1289:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7704              		.loc 1 1289 5 view .LVU2440
 7705 0c30 E3B2     		uxtb	r3, r4
 7706 0c32 012B     		cmp	r3, #1
 7707 0c34 3FF6BFAD 		bhi	.L1069
1290:src/keys.c    **** 
 7708              		.loc 1 1290 3 is_stmt 1 view .LVU2441
 7709 0c38 3F4B     		ldr	r3, .L1163+20
 7710              	.LBB933:
 7711              	.LBB934:
 647:src/keys.c    **** }
 7712              		.loc 1 647 15 is_stmt 0 view .LVU2442
 7713 0c3a 98F81120 		ldrb	r2, [r8, #17]	@ zero_extendqisi2
 7714              	.LBE934:
 7715              	.LBE933:
1290:src/keys.c    **** 
 7716              		.loc 1 1290 3 view .LVU2443
 7717 0c3e 03EB4404 		add	r4, r3, r4, lsl #1
 7718              	.LVL634:
1292:src/keys.c    **** }
 7719              		.loc 1 1292 9 view .LVU2444
 7720 0c42 4FF0330B 		mov	fp, #51
 7721              	.LVL635:
1290:src/keys.c    **** 
 7722              		.loc 1 1290 3 view .LVU2445
 7723 0c46 14F80A30 		ldrb	r3, [r4, r10]	@ zero_extendqisi2
 7724              	.LVL636:
 7725              	.LBB936:
 7726              	.LBI933:
 646:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 7727              		.loc 1 646 13 is_stmt 1 view .LVU2446
 7728              	.LBB935:
 647:src/keys.c    **** }
 7729              		.loc 1 647 2 view .LVU2447
 647:src/keys.c    **** }
 7730              		.loc 1 647 15 is_stmt 0 view .LVU2448
 7731 0c4a 9A42     		cmp	r2, r3
 7732 0c4c 08BF     		it	eq
 7733 0c4e 0023     		moveq	r3, #0
 7734              	.LVL637:
 647:src/keys.c    **** }
 7735              		.loc 1 647 15 view .LVU2449
 7736 0c50 88F81130 		strb	r3, [r8, #17]
 648:src/keys.c    **** 
 7737              		.loc 1 648 1 view .LVU2450
 7738 0c54 FFF728BA 		b	.L565
 7739              	.LVL638:
 7740              	.L1137:
 648:src/keys.c    **** 
 7741              		.loc 1 648 1 view .LVU2451
 7742              	.LBE935:
 7743              	.LBE936:
 7744              	.LBE938:
 7745              	.LBE941:
 7746              	.LBB942:
 7747              	.LBB648:
 263:src/keys.c    ****     return CATALOGUE_PROGXFCN;
ARM GAS  /tmp/ccy15zOt.s 			page 232


 7748              		.loc 1 263 74 view .LVU2452
 7749 0c58 D8F81430 		ldr	r3, [r8, #20]
 7750 0c5c 3749     		ldr	r1, .L1163+24
 7751 0c5e 0B42     		tst	r3, r1
 7752 0c60 45D0     		beq	.L656
 266:src/keys.c    ****     /*
 7753              		.loc 1 266 3 is_stmt 1 view .LVU2453
 266:src/keys.c    ****     /*
 7754              		.loc 1 266 23 is_stmt 0 view .LVU2454
 7755 0c62 3749     		ldr	r1, .L1163+28
 266:src/keys.c    ****     /*
 7756              		.loc 1 266 6 view .LVU2455
 7757 0c64 0B42     		tst	r3, r1
 7758 0c66 3FF40AAB 		beq	.L855
 7759              	.L658:
 7760              	.LBB643:
 335:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 7761              		.loc 1 335 5 is_stmt 1 view .LVU2456
 357:src/keys.c    **** 
 7762              		.loc 1 357 5 view .LVU2457
 362:src/keys.c    ****     col = smap[shift];
 7763              		.loc 1 362 5 view .LVU2458
 7764              	.LVL639:
 363:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7765              		.loc 1 363 5 view .LVU2459
 363:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7766              		.loc 1 363 15 is_stmt 0 view .LVU2460
 7767 0c6a 3649     		ldr	r1, .L1163+32
 362:src/keys.c    ****     col = smap[shift];
 7768              		.loc 1 362 8 view .LVU2461
 7769 0c6c 364B     		ldr	r3, .L1163+36
 363:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7770              		.loc 1 363 9 view .LVU2462
 7771 0c6e 11F80AC0 		ldrb	ip, [r1, r10]	@ zero_extendqisi2
 7772              	.LVL640:
 364:src/keys.c    ****   }
 7773              		.loc 1 364 5 is_stmt 1 view .LVU2463
 364:src/keys.c    ****   }
 7774              		.loc 1 364 9 is_stmt 0 view .LVU2464
 7775 0c72 0621     		movs	r1, #6
 7776 0c74 FFF712BB 		b	.L661
 7777              	.LVL641:
 7778              	.L631:
 364:src/keys.c    ****   }
 7779              		.loc 1 364 9 view .LVU2465
 7780              	.LBE643:
 7781              	.LBE648:
 7782              	.LBE942:
 7783              	.LBB943:
 7784              	.LBB865:
1933:src/keys.c    **** 		// digit 2..9, -> or .
 7785              		.loc 1 1933 7 is_stmt 1 view .LVU2466
1933:src/keys.c    **** 		// digit 2..9, -> or .
 7786              		.loc 1 1933 10 is_stmt 0 view .LVU2467
 7787 0c78 0928     		cmp	r0, #9
 7788 0c7a 69D9     		bls	.L633
 7789              	.L625:
ARM GAS  /tmp/ccy15zOt.s 			page 233


1933:src/keys.c    **** 		// digit 2..9, -> or .
 7790              		.loc 1 1933 19 view .LVU2468
 7791 0c7c 2C2C     		cmp	r4, #44
 7792 0c7e 67D0     		beq	.L633
1933:src/keys.c    **** 		// digit 2..9, -> or .
 7793              		.loc 1 1933 35 view .LVU2469
 7794 0c80 262C     		cmp	r4, #38
 7795 0c82 65D0     		beq	.L633
1939:src/keys.c    **** 	case K11:					// tests vs register
 7796              		.loc 1 1939 2 is_stmt 1 view .LVU2470
 7797 0c84 0C2C     		cmp	r4, #12
 7798 0c86 3FF499AD 		beq	.L815
 7799 0c8a 102C     		cmp	r4, #16
 7800 0c8c 3FF493AD 		beq	.L1069
 7801 0c90 072C     		cmp	r4, #7
 7802 0c92 3FF493AD 		beq	.L815
 7803              	.L628:
1953:src/keys.c    **** 	State2.cmplx = cmpx;
 7804              		.loc 1 1953 2 view .LVU2471
1954:src/keys.c    **** 	return STATE_UNFINISHED;
 7805              		.loc 1 1954 15 is_stmt 0 view .LVU2472
 7806 0c96 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
1953:src/keys.c    **** 	State2.cmplx = cmpx;
 7807              		.loc 1 1953 14 view .LVU2473
 7808 0c9a 88F80FB0 		strb	fp, [r8, #15]
1954:src/keys.c    **** 	return STATE_UNFINISHED;
 7809              		.loc 1 1954 2 is_stmt 1 view .LVU2474
1954:src/keys.c    **** 	return STATE_UNFINISHED;
 7810              		.loc 1 1954 15 is_stmt 0 view .LVU2475
 7811 0c9e 6EF34103 		bfi	r3, lr, #1, #1
 7812 0ca2 88F81530 		strb	r3, [r8, #21]
1955:src/keys.c    **** }
 7813              		.loc 1 1955 2 is_stmt 1 view .LVU2476
1955:src/keys.c    **** }
 7814              		.loc 1 1955 9 is_stmt 0 view .LVU2477
 7815 0ca6 4FF0330B 		mov	fp, #51
 7816              	.LVL642:
1955:src/keys.c    **** }
 7817              		.loc 1 1955 9 view .LVU2478
 7818 0caa FFF7FDB9 		b	.L565
 7819              	.LVL643:
 7820              	.L1121:
1955:src/keys.c    **** }
 7821              		.loc 1 1955 9 view .LVU2479
 7822              	.LBE865:
 7823              	.LBE943:
 7824              	.LBB944:
 7825              	.LBB881:
1328:src/keys.c    **** 	}
 7826              		.loc 1 1328 3 is_stmt 1 view .LVU2480
1328:src/keys.c    **** 	}
 7827              		.loc 1 1328 8 is_stmt 0 view .LVU2481
 7828 0cae FFF7FEFF 		bl	gtodot_digit
 7829              	.LVL644:
1377:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7830              		.loc 1 1377 2 is_stmt 1 view .LVU2482
1377:src/keys.c    **** 		rawpc = find_user_pc(pc);
ARM GAS  /tmp/ccy15zOt.s 			page 234


 7831              		.loc 1 1377 5 is_stmt 0 view .LVU2483
 7832 0cb2 0028     		cmp	r0, #0
1377:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7833              		.loc 1 1377 5 view .LVU2484
 7834 0cb4 FFF67FAD 		blt	.L1069
 7835              	.L597:
1378:src/keys.c    **** fin:		set_pc(rawpc);
 7836              		.loc 1 1378 3 is_stmt 1 view .LVU2485
1378:src/keys.c    **** fin:		set_pc(rawpc);
 7837              		.loc 1 1378 11 is_stmt 0 view .LVU2486
 7838 0cb8 FFF7FEFF 		bl	find_user_pc
 7839              	.LVL645:
1378:src/keys.c    **** fin:		set_pc(rawpc);
 7840              		.loc 1 1378 11 view .LVU2487
 7841 0cbc 2EE7     		b	.L607
 7842              	.LVL646:
 7843              	.L896:
1378:src/keys.c    **** fin:		set_pc(rawpc);
 7844              		.loc 1 1378 11 view .LVU2488
 7845              	.LBE881:
 7846              	.LBE944:
 7847              	.LBE1196:
 7848              	.LBE1254:
 7849              	.LBB1255:
 7850 0cbe BB46     		mov	fp, r7
 7851              	.LVL647:
1378:src/keys.c    **** fin:		set_pc(rawpc);
 7852              		.loc 1 1378 11 view .LVU2489
 7853 0cc0 FFF714BA 		b	.L843
 7854              	.LVL648:
 7855              	.L626:
1378:src/keys.c    **** fin:		set_pc(rawpc);
 7856              		.loc 1 1378 11 view .LVU2490
 7857              	.LBE1255:
 7858              	.LBB1256:
 7859              	.LBB1197:
 7860              	.LBB945:
 7861              	.LBB866:
1925:src/keys.c    **** 		// Special 0
 7862              		.loc 1 1925 7 is_stmt 1 view .LVU2491
1925:src/keys.c    **** 		// Special 0
 7863              		.loc 1 1925 10 is_stmt 0 view .LVU2492
 7864 0cc4 0028     		cmp	r0, #0
 7865 0cc6 41F00D80 		bne	.L629
1927:src/keys.c    **** 	}
 7866              		.loc 1 1927 3 is_stmt 1 view .LVU2493
1927:src/keys.c    **** 	}
 7867              		.loc 1 1927 18 is_stmt 0 view .LVU2494
 7868 0cca BEF1000F 		cmp	lr, #0
 7869 0cce 14BF     		ite	ne
 7870 0cd0 2523     		movne	r3, #37
 7871 0cd2 1723     		moveq	r3, #23
1927:src/keys.c    **** 	}
 7872              		.loc 1 1927 47 view .LVU2495
 7873 0cd4 9B44     		add	fp, fp, r3
 7874              	.LVL649:
1927:src/keys.c    **** 	}
ARM GAS  /tmp/ccy15zOt.s 			page 235


 7875              		.loc 1 1927 47 view .LVU2496
 7876 0cd6 57E4     		b	.L594
 7877              	.LVL650:
 7878              	.L1102:
1927:src/keys.c    **** 	}
 7879              		.loc 1 1927 47 view .LVU2497
 7880              	.LBE866:
 7881              	.LBE945:
 7882              	.LBB946:
 7883              	.LBB649:
 372:src/keys.c    ****       break;
 7884              		.loc 1 372 7 is_stmt 1 view .LVU2498
 372:src/keys.c    ****       break;
 7885              		.loc 1 372 11 is_stmt 0 view .LVU2499
 7886 0cd8 6344     		add	r3, r3, ip
 7887              	.LVL651:
 372:src/keys.c    ****       break;
 7888              		.loc 1 372 11 view .LVU2500
 7889 0cda 93F801B0 		ldrb	fp, [r3, #1]	@ zero_extendqisi2
 7890              	.LVL652:
 373:src/keys.c    ****     }
 7891              		.loc 1 373 7 is_stmt 1 view .LVU2501
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7892              		.loc 1 376 3 view .LVU2502
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7893              		.loc 1 376 6 is_stmt 0 view .LVU2503
 7894 0cde 1307     		lsls	r3, r2, #28
 7895 0ce0 40F18380 		bpl	.L1136
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7896              		.loc 1 376 20 view .LVU2504
 7897 0ce4 ABF10B03 		sub	r3, fp, #11
 7898 0ce8 042B     		cmp	r3, #4
 7899 0cea 3FF6FEAB 		bhi	.L671
 7900              	.LVL653:
 7901              	.L656:
 376:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7902              		.loc 1 376 20 view .LVU2505
 7903              	.LBE649:
 7904              	.LBE946:
2877:src/keys.c    **** 			return STATE_UNFINISHED;
 7905              		.loc 1 2877 3 is_stmt 1 view .LVU2506
2877:src/keys.c    **** 			return STATE_UNFINISHED;
 7906              		.loc 1 2877 7 is_stmt 0 view .LVU2507
 7907 0cee FFF7FEFF 		bl	is_bad_cmdline
 7908              	.LVL654:
2877:src/keys.c    **** 			return STATE_UNFINISHED;
 7909              		.loc 1 2877 6 view .LVU2508
 7910 0cf2 0446     		mov	r4, r0
 7911 0cf4 0028     		cmp	r0, #0
 7912 0cf6 7FF45EAD 		bne	.L1069
2879:src/keys.c    **** 		init_cat( cat );
 7913              		.loc 1 2879 3 is_stmt 1 view .LVU2509
 7914 0cfa FFF7FEFF 		bl	init_cat
 7915              	.LVL655:
2880:src/keys.c    **** 		return STATE_UNFINISHED;
 7916              		.loc 1 2880 3 view .LVU2510
 7917 0cfe 5846     		mov	r0, fp
ARM GAS  /tmp/ccy15zOt.s 			page 236


 7918 0d00 FFF7FEFF 		bl	init_cat
 7919              	.LVL656:
2881:src/keys.c    **** 	}
 7920              		.loc 1 2881 3 view .LVU2511
 7921              	.LBE1197:
 7922              	.LBE1256:
2952:src/keys.c    ****   if (was_paused && Pause == 0) {
 7923              		.loc 1 2952 7 is_stmt 0 view .LVU2512
 7924 0d04 2746     		mov	r7, r4
 7925              	.LBB1257:
 7926              	.LBB1198:
2881:src/keys.c    **** 	}
 7927              		.loc 1 2881 10 view .LVU2513
 7928 0d06 4FF0330B 		mov	fp, #51
 7929 0d0a FFF7CDB9 		b	.L565
 7930              	.LVL657:
 7931              	.L1100:
 7932              	.LBB947:
 7933              	.LBB650:
 263:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 7934              		.loc 1 263 16 view .LVU2514
 7935 0d0e BAF1030F 		cmp	r10, #3
 7936 0d12 A1D0     		beq	.L1137
 266:src/keys.c    ****     /*
 7937              		.loc 1 266 3 is_stmt 1 view .LVU2515
 266:src/keys.c    ****     /*
 7938              		.loc 1 266 23 is_stmt 0 view .LVU2516
 7939 0d14 0A49     		ldr	r1, .L1163+28
 7940 0d16 D8F81430 		ldr	r3, [r8, #20]
 266:src/keys.c    ****     /*
 7941              		.loc 1 266 6 view .LVU2517
 7942 0d1a 1942     		tst	r1, r3
 7943 0d1c 3FF4EBAA 		beq	.L666
 7944 0d20 A3E7     		b	.L658
 7945              	.L1164:
 7946 0d22 00BF     		.align	2
 7947              	.L1163:
 7948 0d24 00000000 		.word	TraceBuffer
 7949 0d28 00000000 		.word	DispMsg
 7950 0d2c 00000000 		.word	main_ram
 7951 0d30 00000000 		.word	.LANCHOR1
 7952 0d34 00000000 		.word	.LANCHOR0
 7953 0d38 00000000 		.word	.LANCHOR15
 7954 0d3c 000A4000 		.word	4196864
 7955 0d40 00080800 		.word	526336
 7956 0d44 00000000 		.word	.LANCHOR16
 7957 0d48 00000000 		.word	.LANCHOR10
 7958 0d4c 00000000 		.word	StateWhileOn
 7959              	.LVL658:
 7960              	.L633:
 266:src/keys.c    ****     /*
 7961              		.loc 1 266 6 view .LVU2518
 7962              	.LBE650:
 7963              	.LBE947:
 7964              	.LBB948:
 7965              	.LBB867:
1935:src/keys.c    **** 		return process_arg(c);
ARM GAS  /tmp/ccy15zOt.s 			page 237


 7966              		.loc 1 1935 3 is_stmt 1 view .LVU2519
 7967              	.LBB862:
 7968              	.LBI862:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 7969              		.loc 1 501 13 view .LVU2520
 7970              	.LBB863:
 502:src/keys.c    **** 		return;
 7971              		.loc 1 502 2 view .LVU2521
 502:src/keys.c    **** 		return;
 7972              		.loc 1 502 6 is_stmt 0 view .LVU2522
 7973 0d50 FFF7FEFF 		bl	is_bad_cmdline
 7974              	.LVL659:
 502:src/keys.c    **** 		return;
 7975              		.loc 1 502 5 view .LVU2523
 7976 0d54 18B9     		cbnz	r0, .L635
 7977 0d56 5FFA8AF0 		uxtb	r0, r10
 7978 0d5a FFF7FEFF 		bl	init_arg.part.0
 7979              	.LVL660:
 7980              	.L635:
 502:src/keys.c    **** 		return;
 7981              		.loc 1 502 5 view .LVU2524
 7982              	.LBE863:
 7983              	.LBE862:
1936:src/keys.c    **** 	}
 7984              		.loc 1 1936 3 is_stmt 1 view .LVU2525
1936:src/keys.c    **** 	}
 7985              		.loc 1 1936 10 is_stmt 0 view .LVU2526
 7986 0d5e 2046     		mov	r0, r4
 7987 0d60 FFF7FEFF 		bl	process_arg
 7988              	.LVL661:
 7989 0d64 8346     		mov	fp, r0
 7990              	.LVL662:
1936:src/keys.c    **** 	}
 7991              		.loc 1 1936 10 view .LVU2527
 7992 0d66 0FE4     		b	.L594
 7993              	.LVL663:
 7994              	.L1096:
1936:src/keys.c    **** 	}
 7995              		.loc 1 1936 10 view .LVU2528
 7996              	.LBE867:
 7997              	.LBE948:
2851:src/keys.c    **** 		return STATE_UNFINISHED;
 7998              		.loc 1 2851 3 is_stmt 1 view .LVU2529
 7999              	.LBB949:
 8000              	.LBI949:
 109:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 8001              		.loc 1 109 13 view .LVU2530
 8002              	.LBB950:
 110:src/keys.c    **** }
 8003              		.loc 1 110 2 view .LVU2531
 110:src/keys.c    **** }
 8004              		.loc 1 110 16 is_stmt 0 view .LVU2532
 8005 0d68 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 8006 0d6c 013B     		subs	r3, r3, #1
 8007 0d6e 18BF     		it	ne
 8008 0d70 0123     		movne	r3, #1
 8009 0d72 88F81030 		strb	r3, [r8, #16]
ARM GAS  /tmp/ccy15zOt.s 			page 238


 8010              	.LVL664:
 110:src/keys.c    **** }
 8011              		.loc 1 110 16 view .LVU2533
 8012              	.LBE950:
 8013              	.LBE949:
2852:src/keys.c    **** 	}
 8014              		.loc 1 2852 3 is_stmt 1 view .LVU2534
2852:src/keys.c    **** 	}
 8015              		.loc 1 2852 10 is_stmt 0 view .LVU2535
 8016 0d76 4FF0330B 		mov	fp, #51
 8017 0d7a FFF795B9 		b	.L565
 8018              	.LVL665:
 8019              	.L616:
 8020              	.LBB951:
 8021              	.LBB694:
1247:src/keys.c    **** 		// fall trough
 8022              		.loc 1 1247 3 is_stmt 1 view .LVU2536
1247:src/keys.c    **** 		// fall trough
 8023              		.loc 1 1247 10 is_stmt 0 view .LVU2537
 8024 0d7e A4F12909 		sub	r9, r4, #41
 8025              	.LVL666:
1247:src/keys.c    **** 		// fall trough
 8026              		.loc 1 1247 10 view .LVU2538
 8027 0d82 B9FA89F9 		clz	r9, r9
 8028 0d86 4FEA5919 		lsr	r9, r9, #5
 8029              	.LVL667:
1247:src/keys.c    **** 		// fall trough
 8030              		.loc 1 1247 10 view .LVU2539
 8031 0d8a E0E6     		b	.L621
 8032              	.LVL668:
 8033              	.L1097:
1247:src/keys.c    **** 		// fall trough
 8034              		.loc 1 1247 10 view .LVU2540
 8035              	.LBE694:
 8036              	.LBE951:
2855:src/keys.c    **** 		return STATE_UNFINISHED;
 8037              		.loc 1 2855 3 is_stmt 1 view .LVU2541
 8038              	.LBB952:
 8039              	.LBI952:
 109:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 8040              		.loc 1 109 13 view .LVU2542
 8041              	.LBB953:
 110:src/keys.c    **** }
 8042              		.loc 1 110 2 view .LVU2543
 110:src/keys.c    **** }
 8043              		.loc 1 110 16 is_stmt 0 view .LVU2544
 8044 0d8c 98F81020 		ldrb	r2, [r8, #16]	@ zero_extendqisi2
 8045 0d90 022A     		cmp	r2, #2
 8046 0d92 18BF     		it	ne
 8047 0d94 0223     		movne	r3, #2
 8048 0d96 88F81030 		strb	r3, [r8, #16]
 8049              	.LVL669:
 110:src/keys.c    **** }
 8050              		.loc 1 110 16 view .LVU2545
 8051              	.LBE953:
 8052              	.LBE952:
2856:src/keys.c    **** 	}
ARM GAS  /tmp/ccy15zOt.s 			page 239


 8053              		.loc 1 2856 3 is_stmt 1 view .LVU2546
2856:src/keys.c    **** 	}
 8054              		.loc 1 2856 10 is_stmt 0 view .LVU2547
 8055 0d9a 4FF0330B 		mov	fp, #51
 8056 0d9e FFF783B9 		b	.L565
 8057              	.LVL670:
 8058              	.L1113:
2856:src/keys.c    **** 	}
 8059              		.loc 1 2856 10 view .LVU2548
 8060              	.LBE1198:
 8061              	.LBE1257:
3145:src/keys.c    **** 	NonProgrammable = 0;
 8062              		.loc 1 3145 26 view .LVU2549
 8063 0da2 CD4A     		ldr	r2, .L1165
 8064 0da4 1168     		ldr	r1, [r2]
 8065 0da6 0029     		cmp	r1, #0
 8066 0da8 3FF49DAD 		beq	.L840
 8067              	.LVL671:
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8068              		.loc 1 3146 2 is_stmt 1 view .LVU2550
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 8069              		.loc 1 3146 18 is_stmt 0 view .LVU2551
 8070 0dac 1360     		str	r3, [r2]
3147:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 8071              		.loc 1 3147 2 is_stmt 1 view .LVU2552
 8072 0dae FFF793BB 		b	.L835
 8073              	.LVL672:
 8074              	.L1098:
 8075              	.LBB1258:
 8076              	.LBB1199:
2859:src/keys.c    **** 		State2.arrow = 0;
 8077              		.loc 1 2859 3 view .LVU2553
 8078              	.LBB954:
 8079              	.LBI954:
 109:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 8080              		.loc 1 109 13 view .LVU2554
 8081              	.LBB955:
 110:src/keys.c    **** }
 8082              		.loc 1 110 2 view .LVU2555
 110:src/keys.c    **** }
 8083              		.loc 1 110 16 is_stmt 0 view .LVU2556
 8084 0db2 98F81000 		ldrb	r0, [r8, #16]	@ zero_extendqisi2
 8085 0db6 0328     		cmp	r0, #3
 8086              	.LBE955:
 8087              	.LBE954:
2860:src/keys.c    **** 		return STATE_UNFINISHED;
 8088              		.loc 1 2860 16 view .LVU2557
 8089 0db8 61F38202 		bfi	r2, r1, #2, #1
 8090              	.LBB958:
 8091              	.LBB956:
 110:src/keys.c    **** }
 8092              		.loc 1 110 16 view .LVU2558
 8093 0dbc 18BF     		it	ne
 8094 0dbe 0323     		movne	r3, #3
 8095              	.LBE956:
 8096              	.LBE958:
2860:src/keys.c    **** 		return STATE_UNFINISHED;
ARM GAS  /tmp/ccy15zOt.s 			page 240


 8097              		.loc 1 2860 16 view .LVU2559
 8098 0dc0 88F81520 		strb	r2, [r8, #21]
 8099              	.LBB959:
 8100              	.LBB957:
 110:src/keys.c    **** }
 8101              		.loc 1 110 16 view .LVU2560
 8102 0dc4 88F81030 		strb	r3, [r8, #16]
 8103              	.LVL673:
 110:src/keys.c    **** }
 8104              		.loc 1 110 16 view .LVU2561
 8105              	.LBE957:
 8106              	.LBE959:
2860:src/keys.c    **** 		return STATE_UNFINISHED;
 8107              		.loc 1 2860 3 is_stmt 1 view .LVU2562
2861:src/keys.c    **** 	}
 8108              		.loc 1 2861 3 view .LVU2563
2861:src/keys.c    **** 	}
 8109              		.loc 1 2861 10 is_stmt 0 view .LVU2564
 8110 0dc8 4FF0330B 		mov	fp, #51
 8111 0dcc FFF76CB9 		b	.L565
 8112              	.LVL674:
 8113              	.L1131:
 8114              	.LBB960:
 8115              	.LBB907:
2477:src/keys.c    **** 			n = max;
 8116              		.loc 1 2477 3 is_stmt 1 view .LVU2565
2477:src/keys.c    **** 			n = max;
 8117              		.loc 1 2477 6 is_stmt 0 view .LVU2566
 8118 0dd0 012B     		cmp	r3, #1
 8119 0dd2 A3F10402 		sub	r2, r3, #4
 8120              	.LVL675:
2477:src/keys.c    **** 			n = max;
 8121              		.loc 1 2477 6 view .LVU2567
 8122 0dd6 32D0     		beq	.L1059
 8123 0dd8 D2B2     		uxtb	r2, r2
 8124              	.LVL676:
2477:src/keys.c    **** 			n = max;
 8125              		.loc 1 2477 6 view .LVU2568
 8126 0dda FEE6     		b	.L641
 8127              	.LVL677:
 8128              	.L1122:
2477:src/keys.c    **** 			n = max;
 8129              		.loc 1 2477 6 view .LVU2569
 8130              	.LBE907:
 8131              	.LBE960:
 8132              	.LBB961:
 8133              	.LBB882:
1331:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8134              		.loc 1 1331 44 is_stmt 1 view .LVU2570
1331:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regY_idx) rawpc = gtodot_digit(2); 
 8135              		.loc 1 1331 52 is_stmt 0 view .LVU2571
 8136 0ddc 0120     		movs	r0, #1
 8137 0dde FFF7FEFF 		bl	gtodot_digit
 8138              	.LVL678:
1377:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8139              		.loc 1 1377 2 is_stmt 1 view .LVU2572
 8140              	.LBE882:
ARM GAS  /tmp/ccy15zOt.s 			page 241


 8141              	.LBE961:
2836:src/keys.c    **** 
 8142              		.loc 1 2836 10 is_stmt 0 view .LVU2573
 8143 0de2 4FF0330B 		mov	fp, #51
 8144 0de6 FFF75FB9 		b	.L565
 8145              	.LVL679:
 8146              	.L1136:
2876:src/keys.c    **** 		if (is_bad_cmdline())
 8147              		.loc 1 2876 2 is_stmt 1 view .LVU2574
2876:src/keys.c    **** 		if (is_bad_cmdline())
 8148              		.loc 1 2876 5 is_stmt 0 view .LVU2575
 8149 0dea BBF1000F 		cmp	fp, #0
 8150 0dee 7FF47EAF 		bne	.L656
 8151 0df2 FFF783BA 		b	.L670
 8152              	.LVL680:
 8153              	.L627:
 8154              	.LBB962:
 8155              	.LBB868:
1923:src/keys.c    **** 	}
 8156              		.loc 1 1923 3 is_stmt 1 view .LVU2576
1923:src/keys.c    **** 	}
 8157              		.loc 1 1923 10 is_stmt 0 view .LVU2577
 8158 0df6 0AF1200A 		add	r10, r10, #32
 8159 0dfa 40EA0A20 		orr	r0, r0, r10, lsl #8
 8160 0dfe 8346     		mov	fp, r0
 8161              	.LVL681:
1923:src/keys.c    **** 	}
 8162              		.loc 1 1923 10 view .LVU2578
 8163 0e00 FFF763BB 		b	.L620
 8164              	.LVL682:
 8165              	.L1123:
1923:src/keys.c    **** 	}
 8166              		.loc 1 1923 10 view .LVU2579
 8167              	.LBE868:
 8168              	.LBE962:
 8169              	.LBB963:
 8170              	.LBB883:
1332:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 8171              		.loc 1 1332 44 is_stmt 1 view .LVU2580
1332:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regZ_idx) rawpc = gtodot_digit(3); 
 8172              		.loc 1 1332 52 is_stmt 0 view .LVU2581
 8173 0e04 0220     		movs	r0, #2
 8174 0e06 FFF7FEFF 		bl	gtodot_digit
 8175              	.LVL683:
1377:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8176              		.loc 1 1377 2 is_stmt 1 view .LVU2582
 8177              	.LBE883:
 8178              	.LBE963:
2836:src/keys.c    **** 
 8179              		.loc 1 2836 10 is_stmt 0 view .LVU2583
 8180 0e0a 4FF0330B 		mov	fp, #51
 8181 0e0e FFF74BB9 		b	.L565
 8182              	.LVL684:
 8183              	.L1135:
 8184              	.LBB964:
 8185              	.LBB939:
1287:src/keys.c    **** 
ARM GAS  /tmp/ccy15zOt.s 			page 242


 8186              		.loc 1 1287 3 is_stmt 1 view .LVU2584
1287:src/keys.c    **** 
 8187              		.loc 1 1287 25 is_stmt 0 view .LVU2585
 8188 0e12 B24A     		ldr	r2, .L1165+4
 8189 0e14 0AEB4303 		add	r3, r10, r3, lsl #1
 8190 0e18 32F813B0 		ldrh	fp, [r2, r3, lsl #1]
 8191              	.LVL685:
1287:src/keys.c    **** 
 8192              		.loc 1 1287 25 view .LVU2586
 8193 0e1c FFF7B4BB 		b	.L594
 8194              	.LVL686:
 8195              	.L1132:
1287:src/keys.c    **** 
 8196              		.loc 1 1287 25 view .LVU2587
 8197              	.LBE939:
 8198              	.LBE964:
 8199              	.LBB965:
 8200              	.LBB908:
2481:src/keys.c    **** 			n = -2;
 8201              		.loc 1 2481 3 is_stmt 1 view .LVU2588
2481:src/keys.c    **** 			n = -2;
 8202              		.loc 1 2481 6 is_stmt 0 view .LVU2589
 8203 0e20 023B     		subs	r3, r3, #2
 8204              	.LVL687:
2481:src/keys.c    **** 			n = -2;
 8205              		.loc 1 2481 6 view .LVU2590
 8206 0e22 8342     		cmp	r3, r0
 8207 0e24 40F3FD81 		ble	.L1058
 8208 0e28 FE22     		movs	r2, #254
 8209 0e2a D6E6     		b	.L641
 8210              	.LVL688:
 8211              	.L869:
2481:src/keys.c    **** 			n = -2;
 8212              		.loc 1 2481 6 view .LVU2591
 8213              	.LBE908:
 8214              	.LBE965:
 8215              	.LBB966:
 8216              	.LBB651:
 8217              	.LBB644:
 322:src/keys.c    **** #ifndef WINGUI
 8218              		.loc 1 322 8 view .LVU2592
 8219 0e2c AC4B     		ldr	r3, .L1165+8
 328:src/keys.c    ****   }
 8220              		.loc 1 328 9 view .LVU2593
 8221 0e2e 0C21     		movs	r1, #12
 324:src/keys.c    **** #else
 8222              		.loc 1 324 27 view .LVU2594
 8223 0e30 4FF0010C 		mov	ip, #1
 8224 0e34 FFF732BA 		b	.L661
 8225              	.LVL689:
 8226              	.L1134:
 324:src/keys.c    **** #else
 8227              		.loc 1 324 27 view .LVU2595
 8228              	.LBE644:
 8229              	.LBE651:
 8230              	.LBE966:
 8231              	.LBB967:
ARM GAS  /tmp/ccy15zOt.s 			page 243


 8232              	.LBB909:
 8233              	.LBB904:
2493:src/keys.c    **** 		else if (nn != NO_REG)
 8234              		.loc 1 2493 4 is_stmt 1 view .LVU2596
2493:src/keys.c    **** 		else if (nn != NO_REG)
 8235              		.loc 1 2493 22 is_stmt 0 view .LVU2597
 8236 0e38 8342     		cmp	r3, r0
 8237 0e3a 3FF4CDAE 		beq	.L865
 8238              	.LVL690:
 8239              	.L1059:
2493:src/keys.c    **** 		else if (nn != NO_REG)
 8240              		.loc 1 2493 22 view .LVU2598
 8241 0e3e C2B2     		uxtb	r2, r0
 8242 0e40 CBE6     		b	.L641
 8243              	.LVL691:
 8244              	.L1124:
2493:src/keys.c    **** 		else if (nn != NO_REG)
 8245              		.loc 1 2493 22 view .LVU2599
 8246              	.LBE904:
 8247              	.LBE909:
 8248              	.LBE967:
 8249              	.LBB968:
 8250              	.LBB884:
1333:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 8251              		.loc 1 1333 44 is_stmt 1 view .LVU2600
1333:src/keys.c    **** 	else if ((rawpc & ~NO_SHORT) == regT_idx) rawpc = gtodot_digit(4); 
 8252              		.loc 1 1333 52 is_stmt 0 view .LVU2601
 8253 0e42 0320     		movs	r0, #3
 8254 0e44 FFF7FEFF 		bl	gtodot_digit
 8255              	.LVL692:
1377:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8256              		.loc 1 1377 2 is_stmt 1 view .LVU2602
 8257              	.LBE884:
 8258              	.LBE968:
2836:src/keys.c    **** 
 8259              		.loc 1 2836 10 is_stmt 0 view .LVU2603
 8260 0e48 4FF0330B 		mov	fp, #51
 8261 0e4c FFF72CB9 		b	.L565
 8262              	.LVL693:
 8263              	.L1104:
2891:src/keys.c    **** 
 8264              		.loc 1 2891 3 is_stmt 1 view .LVU2604
 8265              	.LBB969:
 8266              	.LBI969:
2551:src/keys.c    **** 	unsigned int pc = State2.digval;
 8267              		.loc 1 2551 12 view .LVU2605
 8268              	.LBB970:
2552:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 8269              		.loc 1 2552 2 view .LVU2606
2554:src/keys.c    **** 	const int opcode = getprog(pc);
 8270              		.loc 1 2554 27 is_stmt 0 view .LVU2607
 8271 0e50 262C     		cmp	r4, #38
2552:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 8272              		.loc 1 2552 15 view .LVU2608
 8273 0e52 B8F808A0 		ldrh	r10, [r8, #8]
 8274              	.LVL694:
2553:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
ARM GAS  /tmp/ccy15zOt.s 			page 244


 8275              		.loc 1 2553 2 is_stmt 1 view .LVU2609
2554:src/keys.c    **** 	const int opcode = getprog(pc);
 8276              		.loc 1 2554 27 is_stmt 0 view .LVU2610
 8277 0e56 00F03583 		beq	.L874
 8278              	.LVL695:
 8279              	.LBB971:
 8280              	.LBI971:
 198:src/keys.c    **** {
 8281              		.loc 1 198 14 is_stmt 1 view .LVU2611
 8282              	.LBB972:
 200:src/keys.c    ****     // K00 - K05
 8283              		.loc 1 200 3 view .LVU2612
 221:src/keys.c    **** }
 8284              		.loc 1 221 3 view .LVU2613
 8285              	.LBB973:
 8286              	.LBI973:
 119:src/keys.c    **** {
 8287              		.loc 1 119 12 view .LVU2614
 8288              	.LBB974:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8289              		.loc 1 121 2 view .LVU2615
 131:src/keys.c    **** }
 8290              		.loc 1 131 2 view .LVU2616
 131:src/keys.c    **** }
 8291              		.loc 1 131 23 is_stmt 0 view .LVU2617
 8292 0e5a A24B     		ldr	r3, .L1165+12
 8293              	.LBE974:
 8294              	.LBE973:
 221:src/keys.c    **** }
 8295              		.loc 1 221 28 view .LVU2618
 8296 0e5c A24A     		ldr	r2, .L1165+16
 8297              	.LBB976:
 8298              	.LBB975:
 131:src/keys.c    **** }
 8299              		.loc 1 131 23 view .LVU2619
 8300 0e5e 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 8301              	.LBE975:
 8302              	.LBE976:
 221:src/keys.c    **** }
 8303              		.loc 1 221 10 view .LVU2620
 8304 0e60 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
 8305              	.LBE972:
 8306              	.LBE971:
2554:src/keys.c    **** 	const int opcode = getprog(pc);
 8307              		.loc 1 2554 27 view .LVU2621
 8308 0e64 2BF0800B 		bic	fp, fp, #128
 8309              	.L685:
 8310              	.LVL696:
2555:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 8311              		.loc 1 2555 2 is_stmt 1 view .LVU2622
2555:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 8312              		.loc 1 2555 21 is_stmt 0 view .LVU2623
 8313 0e68 5046     		mov	r0, r10
 8314 0e6a FFF7FEFF 		bl	getprog
 8315              	.LVL697:
2556:src/keys.c    **** 	const int direct = State2.runmode;
 8316              		.loc 1 2556 2 is_stmt 1 view .LVU2624
ARM GAS  /tmp/ccy15zOt.s 			page 245


2556:src/keys.c    **** 	const int direct = State2.runmode;
 8317              		.loc 1 2556 20 is_stmt 0 view .LVU2625
 8318 0e6e 00F47040 		and	r0, r0, #61440
 8319              	.LVL698:
2556:src/keys.c    **** 	const int direct = State2.runmode;
 8320              		.loc 1 2556 63 view .LVU2626
 8321 0e72 B0F5704F 		cmp	r0, #61440
 8322 0e76 00F09384 		beq	.L1138
 8323 0e7a 0022     		movs	r2, #0
 8324              	.L686:
 8325              	.LVL699:
2557:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8326              		.loc 1 2557 2 is_stmt 1 view .LVU2627
2557:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8327              		.loc 1 2557 27 is_stmt 0 view .LVU2628
 8328 0e7c 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 8329 0e80 0192     		str	r2, [sp, #4]
 8330              	.LVL700:
2557:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8331              		.loc 1 2557 27 view .LVU2629
 8332 0e82 C3F38013 		ubfx	r3, r3, #6, #1
 8333 0e86 0093     		str	r3, [sp]
 8334              	.LVL701:
2558:src/keys.c    **** 	int op = STATE_UNFINISHED;
 8335              		.loc 1 2558 2 is_stmt 1 view .LVU2630
 8336              	.LBB977:
 8337              	.LBI977:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 8338              		.loc 1 102 13 view .LVU2631
 8339              	.LBE977:
 8340              	.LBE970:
 8341              	.LBE969:
 8342              	.LBE1199:
 8343              	.LBE1258:
 103:src/keys.c    **** }
 8344              		.loc 1 103 2 view .LVU2632
 8345              	.LBB1259:
 8346              	.LBB1200:
 8347              	.LBB1004:
 8348              	.LBB996:
 8349              	.LBB984:
 8350              	.LBB978:
 8351              	.LBI978:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 8352              		.loc 1 92 20 view .LVU2633
 8353              	.LBB979:
  93:src/keys.c    **** 	State2.shifts = shift;
 8354              		.loc 1 93 2 view .LVU2634
 8355              	.LBB980:
 8356              	.LBI980:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 8357              		.loc 1 84 13 view .LVU2635
 8358              	.LBB981:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8359              		.loc 1 85 2 view .LVU2636
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8360              		.loc 1 85 18 is_stmt 0 view .LVU2637
ARM GAS  /tmp/ccy15zOt.s 			page 246


 8361 0e88 FFF7FEFF 		bl	shift_down
 8362              	.LVL702:
  86:src/keys.c    **** }
 8363              		.loc 1 86 2 is_stmt 1 view .LVU2638
  86:src/keys.c    **** }
 8364              		.loc 1 86 52 is_stmt 0 view .LVU2639
 8365 0e8c 019A     		ldr	r2, [sp, #4]
 8366 0e8e 0346     		mov	r3, r0
 8367 0e90 08B9     		cbnz	r0, .L687
 8368 0e92 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 8369              	.L687:
 8370              	.LVL703:
  86:src/keys.c    **** }
 8371              		.loc 1 86 52 view .LVU2640
 8372              	.LBE981:
 8373              	.LBE980:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8374              		.loc 1 94 2 is_stmt 1 view .LVU2641
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8375              		.loc 1 94 16 is_stmt 0 view .LVU2642
 8376 0e96 0021     		movs	r1, #0
 8377              	.LBE979:
 8378              	.LBE978:
 8379              	.LBE984:
2561:src/keys.c    **** 		// Digits take you to that segment
 8380              		.loc 1 2561 5 view .LVU2643
 8381 0e98 BBF1020F 		cmp	fp, #2
 8382              	.LBB985:
 8383              	.LBB983:
 8384              	.LBB982:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8385              		.loc 1 94 16 view .LVU2644
 8386 0e9c 88F81010 		strb	r1, [r8, #16]
  96:src/keys.c    **** }
 8387              		.loc 1 96 2 is_stmt 1 view .LVU2645
 8388              	.LVL704:
  96:src/keys.c    **** }
 8389              		.loc 1 96 2 is_stmt 0 view .LVU2646
 8390              	.LBE982:
 8391              	.LBE983:
 8392              	.LBE985:
2559:src/keys.c    **** 
 8393              		.loc 1 2559 2 is_stmt 1 view .LVU2647
2561:src/keys.c    **** 		// Digits take you to that segment
 8394              		.loc 1 2561 2 view .LVU2648
2561:src/keys.c    **** 		// Digits take you to that segment
 8395              		.loc 1 2561 5 is_stmt 0 view .LVU2649
 8396 0ea0 40F29885 		bls	.L1139
2570:src/keys.c    **** 
 8397              		.loc 1 2570 2 is_stmt 1 view .LVU2650
2570:src/keys.c    **** 
 8398              		.loc 1 2570 12 is_stmt 0 view .LVU2651
 8399 0ea4 44EA0323 		orr	r3, r4, r3, lsl #8
 8400              	.LVL705:
2570:src/keys.c    **** 
 8401              		.loc 1 2570 2 view .LVU2652
 8402 0ea8 272B     		cmp	r3, #39
ARM GAS  /tmp/ccy15zOt.s 			page 247


 8403 0eaa 00F3B480 		bgt	.L690
 8404 0eae 042B     		cmp	r3, #4
 8405 0eb0 7FF781AC 		ble	.L1069
 8406 0eb4 053B     		subs	r3, r3, #5
 8407 0eb6 222B     		cmp	r3, #34
 8408 0eb8 3FF67DAC 		bhi	.L1069
 8409 0ebc 01A1     		adr	r1, .L698
 8410 0ebe 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 8411 0ec2 00BF     		.p2align 2
 8412              	.L698:
 8413 0ec4 A50F0000 		.word	.L703+1
 8414 0ec8 AF0F0000 		.word	.L702+1
 8415 0ecc AF0F0000 		.word	.L702+1
 8416 0ed0 B7070000 		.word	.L1069+1
 8417 0ed4 B7070000 		.word	.L1069+1
 8418 0ed8 B7070000 		.word	.L1069+1
 8419 0edc B7070000 		.word	.L1069+1
 8420 0ee0 510F0000 		.word	.L877+1
 8421 0ee4 B7070000 		.word	.L1069+1
 8422 0ee8 B7070000 		.word	.L1069+1
 8423 0eec B7070000 		.word	.L1069+1
 8424 0ef0 D10F0000 		.word	.L701+1
 8425 0ef4 B7070000 		.word	.L1069+1
 8426 0ef8 BD0F0000 		.word	.L700+1
 8427 0efc B7070000 		.word	.L1069+1
 8428 0f00 B7070000 		.word	.L1069+1
 8429 0f04 B7070000 		.word	.L1069+1
 8430 0f08 B7070000 		.word	.L1069+1
 8431 0f0c B7070000 		.word	.L1069+1
 8432 0f10 8F0F0000 		.word	.L699+1
 8433 0f14 B7070000 		.word	.L1069+1
 8434 0f18 B7070000 		.word	.L1069+1
 8435 0f1c B7070000 		.word	.L1069+1
 8436 0f20 B7070000 		.word	.L1069+1
 8437 0f24 B7070000 		.word	.L1069+1
 8438 0f28 B7070000 		.word	.L1069+1
 8439 0f2c B7070000 		.word	.L1069+1
 8440 0f30 B7070000 		.word	.L1069+1
 8441 0f34 B7070000 		.word	.L1069+1
 8442 0f38 B7070000 		.word	.L1069+1
 8443 0f3c B7070000 		.word	.L1069+1
 8444 0f40 B7070000 		.word	.L1069+1
 8445 0f44 B7070000 		.word	.L1069+1
 8446 0f48 B7070000 		.word	.L1069+1
 8447 0f4c EB0F0000 		.word	.L697+1
 8448              		.p2align 1
 8449              	.L877:
2559:src/keys.c    **** 
 8450              		.loc 1 2559 6 view .LVU2653
 8451 0f50 4FF0330B 		mov	fp, #51
 8452              	.LVL706:
 8453              	.L695:
2592:src/keys.c    **** 		break;
 8454              		.loc 1 2592 3 is_stmt 1 view .LVU2654
 8455 0f54 5046     		mov	r0, r10
 8456 0f56 FFF7FEFF 		bl	set_pc
 8457              	.LVL707:
ARM GAS  /tmp/ccy15zOt.s 			page 248


2593:src/keys.c    **** 
 8458              		.loc 1 2593 3 view .LVU2655
 8459              	.L707:
2646:src/keys.c    **** 	State2.labellist = 0;
 8460              		.loc 1 2646 2 view .LVU2656
2647:src/keys.c    **** 	return check_confirm(op);
 8461              		.loc 1 2647 19 is_stmt 0 view .LVU2657
 8462 0f5a 98F81710 		ldrb	r1, [r8, #23]	@ zero_extendqisi2
2646:src/keys.c    **** 	State2.labellist = 0;
 8463              		.loc 1 2646 16 view .LVU2658
 8464 0f5e 0022     		movs	r2, #0
 8465              	.LBB986:
 8466              	.LBB987:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8467              		.loc 1 620 5 view .LVU2659
 8468 0f60 CBF30723 		ubfx	r3, fp, #8, #8
 8469              	.LBE987:
 8470              	.LBE986:
2647:src/keys.c    **** 	return check_confirm(op);
 8471              		.loc 1 2647 19 view .LVU2660
 8472 0f64 62F38201 		bfi	r1, r2, #2, #1
 8473              	.LBB992:
 8474              	.LBB988:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8475              		.loc 1 620 5 view .LVU2661
 8476 0f68 012B     		cmp	r3, #1
 8477              	.LBE988:
 8478              	.LBE992:
2647:src/keys.c    **** 	return check_confirm(op);
 8479              		.loc 1 2647 19 view .LVU2662
 8480 0f6a 88F81710 		strb	r1, [r8, #23]
2646:src/keys.c    **** 	State2.labellist = 0;
 8481              		.loc 1 2646 16 view .LVU2663
 8482 0f6e A8F80820 		strh	r2, [r8, #8]	@ movhi
2647:src/keys.c    **** 	return check_confirm(op);
 8483              		.loc 1 2647 2 is_stmt 1 view .LVU2664
2648:src/keys.c    **** }
 8484              		.loc 1 2648 2 view .LVU2665
 8485              	.LVL708:
 8486              	.LBB993:
 8487              	.LBI986:
 619:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8488              		.loc 1 619 12 view .LVU2666
 8489              	.LBB989:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8490              		.loc 1 620 2 view .LVU2667
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8491              		.loc 1 620 5 is_stmt 0 view .LVU2668
 8492 0f72 7FF409AB 		bne	.L594
 8493              	.LVL709:
 8494              	.L854:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8495              		.loc 1 620 5 view .LVU2669
 8496              	.LBE989:
 8497              	.LBE993:
 8498              	.LBE996:
 8499              	.LBE1004:
ARM GAS  /tmp/ccy15zOt.s 			page 249


 8500              	.LBB1005:
 8501              	.LBB1006:
 8502              	.LBB1007:
 8503              	.LBB1008:
 8504 0f76 5846     		mov	r0, fp
 8505 0f78 FFF7FEFF 		bl	check_confirm.part.0
 8506              	.LVL710:
 8507 0f7c 8346     		mov	fp, r0
 8508              	.LVL711:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8509              		.loc 1 620 5 view .LVU2670
 8510 0f7e FFF703BB 		b	.L594
 8511              	.LVL712:
 8512              	.L692:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8513              		.loc 1 620 5 view .LVU2671
 8514              	.LBE1008:
 8515              	.LBE1007:
 8516              	.LBE1006:
 8517              	.LBE1005:
 8518              	.LBB1042:
 8519              	.LBB997:
2577:src/keys.c    **** 	case K_DOWN:				// Find next label
 8520              		.loc 1 2577 3 is_stmt 1 view .LVU2672
2577:src/keys.c    **** 	case K_DOWN:				// Find next label
 8521              		.loc 1 2577 8 is_stmt 0 view .LVU2673
 8522 0f82 5046     		mov	r0, r10
 8523 0f84 0122     		movs	r2, #1
 8524 0f86 0021     		movs	r1, #0
 8525 0f88 FFF7FEFF 		bl	advance_to_next_label
 8526              	.LVL713:
 8527 0f8c 8246     		mov	r10, r0
 8528              	.LVL714:
 8529              	.L699:
2580:src/keys.c    **** 		return STATE_UNFINISHED;
 8530              		.loc 1 2580 3 is_stmt 1 view .LVU2674
2580:src/keys.c    **** 		return STATE_UNFINISHED;
 8531              		.loc 1 2580 19 is_stmt 0 view .LVU2675
 8532 0f8e 5046     		mov	r0, r10
 8533 0f90 0022     		movs	r2, #0
 8534 0f92 0121     		movs	r1, #1
 8535 0f94 FFF7FEFF 		bl	advance_to_next_label
 8536              	.LVL715:
2581:src/keys.c    **** 
 8537              		.loc 1 2581 10 view .LVU2676
 8538 0f98 4FF0330B 		mov	fp, #51
 8539              	.LVL716:
2580:src/keys.c    **** 		return STATE_UNFINISHED;
 8540              		.loc 1 2580 17 view .LVU2677
 8541 0f9c A8F80800 		strh	r0, [r8, #8]	@ movhi
2581:src/keys.c    **** 
 8542              		.loc 1 2581 3 is_stmt 1 view .LVU2678
2581:src/keys.c    **** 
 8543              		.loc 1 2581 10 is_stmt 0 view .LVU2679
 8544 0fa0 FFF782B8 		b	.L565
 8545              	.LVL717:
 8546              	.L703:
ARM GAS  /tmp/ccy15zOt.s 			page 250


 8547              	.L708:
2610:src/keys.c    **** 		goto xeq_or_gto;
 8548              		.loc 1 2610 3 is_stmt 1 view .LVU2680
2610:src/keys.c    **** 		goto xeq_or_gto;
 8549              		.loc 1 2610 6 is_stmt 0 view .LVU2681
 8550 0fa4 02F5007B 		add	fp, r2, #512
 8551              	.LVL718:
2611:src/keys.c    **** 
 8552              		.loc 1 2611 3 is_stmt 1 view .LVU2682
2616:src/keys.c    **** 			break;
 8553              		.loc 1 2616 3 view .LVU2683
2616:src/keys.c    **** 			break;
 8554              		.loc 1 2616 6 is_stmt 0 view .LVU2684
 8555 0fa8 002A     		cmp	r2, #0
 8556 0faa D6D1     		bne	.L707
 8557 0fac 03E4     		b	.L1069
 8558              	.LVL719:
 8559              	.L702:
2602:src/keys.c    **** 	  //#endif
 8560              		.loc 1 2602 3 is_stmt 1 view .LVU2685
2602:src/keys.c    **** 	  //#endif
 8561              		.loc 1 2602 38 is_stmt 0 view .LVU2686
 8562 0fae 062C     		cmp	r4, #6
 8563 0fb0 40F2B11B 		movw	fp, #433
 8564              	.LVL720:
2602:src/keys.c    **** 	  //#endif
 8565              		.loc 1 2602 38 view .LVU2687
 8566 0fb4 08BF     		it	eq
 8567 0fb6 4FF4D97B 		moveq	fp, #434
 8568 0fba CBE7     		b	.L695
 8569              	.LVL721:
 8570              	.L700:
2584:src/keys.c    **** 		return STATE_UNFINISHED;
 8571              		.loc 1 2584 3 is_stmt 1 view .LVU2688
2584:src/keys.c    **** 		return STATE_UNFINISHED;
 8572              		.loc 1 2584 19 is_stmt 0 view .LVU2689
 8573 0fbc 5046     		mov	r0, r10
 8574 0fbe 0021     		movs	r1, #0
 8575 0fc0 FFF7FEFF 		bl	advance_to_previous_label
 8576              	.LVL722:
2585:src/keys.c    **** 
 8577              		.loc 1 2585 10 view .LVU2690
 8578 0fc4 4FF0330B 		mov	fp, #51
 8579              	.LVL723:
2584:src/keys.c    **** 		return STATE_UNFINISHED;
 8580              		.loc 1 2584 17 view .LVU2691
 8581 0fc8 A8F80800 		strh	r0, [r8, #8]	@ movhi
2585:src/keys.c    **** 
 8582              		.loc 1 2585 3 is_stmt 1 view .LVU2692
2585:src/keys.c    **** 
 8583              		.loc 1 2585 10 is_stmt 0 view .LVU2693
 8584 0fcc FFF76CB8 		b	.L565
 8585              	.LVL724:
 8586              	.L701:
2646:src/keys.c    **** 	State2.labellist = 0;
 8587              		.loc 1 2646 2 is_stmt 1 view .LVU2694
2647:src/keys.c    **** 	return check_confirm(op);
ARM GAS  /tmp/ccy15zOt.s 			page 251


 8588              		.loc 1 2647 19 is_stmt 0 view .LVU2695
 8589 0fd0 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
2646:src/keys.c    **** 	State2.labellist = 0;
 8590              		.loc 1 2646 16 view .LVU2696
 8591 0fd4 0023     		movs	r3, #0
2647:src/keys.c    **** 	return check_confirm(op);
 8592              		.loc 1 2647 19 view .LVU2697
 8593 0fd6 63F38202 		bfi	r2, r3, #2, #1
 8594 0fda 88F81720 		strb	r2, [r8, #23]
2646:src/keys.c    **** 	State2.labellist = 0;
 8595              		.loc 1 2646 16 view .LVU2698
 8596 0fde A8F80830 		strh	r3, [r8, #8]	@ movhi
2647:src/keys.c    **** 	return check_confirm(op);
 8597              		.loc 1 2647 2 is_stmt 1 view .LVU2699
2648:src/keys.c    **** }
 8598              		.loc 1 2648 2 view .LVU2700
 8599              	.LVL725:
 8600              	.LBB994:
 619:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8601              		.loc 1 619 12 view .LVU2701
 8602              	.LBB990:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8603              		.loc 1 620 2 view .LVU2702
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8604              		.loc 1 620 2 is_stmt 0 view .LVU2703
 8605              	.LBE990:
 8606              	.LBE994:
 8607              	.LBE997:
 8608              	.LBE1042:
 8609              	.LBE1200:
 8610              	.LBE1259:
3109:src/keys.c    ****     case STATE_SST:
 8611              		.loc 1 3109 5 is_stmt 1 view .LVU2704
 8612              	.LBB1260:
 8613              	.LBB1201:
 8614              	.LBB1043:
 8615              	.LBB998:
2559:src/keys.c    **** 
 8616              		.loc 1 2559 6 is_stmt 0 view .LVU2705
 8617 0fe2 4FF0330B 		mov	fp, #51
 8618              	.LVL726:
2559:src/keys.c    **** 
 8619              		.loc 1 2559 6 view .LVU2706
 8620 0fe6 FFF75FB8 		b	.L565
 8621              	.LVL727:
 8622              	.L697:
2632:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8623              		.loc 1 2632 3 is_stmt 1 view .LVU2707
2632:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8624              		.loc 1 2632 6 is_stmt 0 view .LVU2708
 8625 0fea 009B     		ldr	r3, [sp]
 8626 0fec 002B     		cmp	r3, #0
 8627 0fee 3FF4E2AB 		beq	.L1069
2632:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8628              		.loc 1 2632 14 view .LVU2709
 8629 0ff2 002A     		cmp	r2, #0
 8630 0ff4 3FF4DFAB 		beq	.L1069
ARM GAS  /tmp/ccy15zOt.s 			page 252


2633:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
 8631              		.loc 1 2633 4 is_stmt 1 view .LVU2710
 8632 0ff8 5146     		mov	r1, r10
 8633 0ffa 0120     		movs	r0, #1
 8634 0ffc FFF7FEFF 		bl	cmdgtocommon
 8635              	.LVL728:
2634:src/keys.c    **** 			break;
 8636              		.loc 1 2634 4 view .LVU2711
2635:src/keys.c    **** 		}
 8637              		.loc 1 2635 4 view .LVU2712
2646:src/keys.c    **** 	State2.labellist = 0;
 8638              		.loc 1 2646 2 view .LVU2713
2647:src/keys.c    **** 	return check_confirm(op);
 8639              		.loc 1 2647 19 is_stmt 0 view .LVU2714
 8640 1000 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
2646:src/keys.c    **** 	State2.labellist = 0;
 8641              		.loc 1 2646 16 view .LVU2715
 8642 1004 0023     		movs	r3, #0
2647:src/keys.c    **** 	return check_confirm(op);
 8643              		.loc 1 2647 19 view .LVU2716
 8644 1006 63F38202 		bfi	r2, r3, #2, #1
 8645 100a 88F81720 		strb	r2, [r8, #23]
2646:src/keys.c    **** 	State2.labellist = 0;
 8646              		.loc 1 2646 16 view .LVU2717
 8647 100e A8F80830 		strh	r3, [r8, #8]	@ movhi
2647:src/keys.c    **** 	return check_confirm(op);
 8648              		.loc 1 2647 2 is_stmt 1 view .LVU2718
2648:src/keys.c    **** }
 8649              		.loc 1 2648 2 view .LVU2719
 8650              	.LVL729:
 8651              	.LBB995:
 619:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8652              		.loc 1 619 12 view .LVU2720
 8653              	.LBB991:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8654              		.loc 1 620 2 view .LVU2721
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 8655              		.loc 1 620 2 is_stmt 0 view .LVU2722
 8656              	.LBE991:
 8657              	.LBE995:
 8658              	.LBE998:
 8659              	.LBE1043:
 8660              	.LBE1201:
 8661              	.LBE1260:
3109:src/keys.c    ****     case STATE_SST:
 8662              		.loc 1 3109 5 is_stmt 1 view .LVU2723
 8663 1012 FFF7C3B8 		b	.L574
 8664              	.LVL730:
 8665              	.L690:
 8666              	.LBB1261:
 8667              	.LBB1202:
 8668              	.LBB1044:
 8669              	.LBB999:
2570:src/keys.c    **** 
 8670              		.loc 1 2570 2 is_stmt 0 view .LVU2724
 8671 1016 B3F58C7F 		cmp	r3, #280
 8672 101a 48DC     		bgt	.L704
ARM GAS  /tmp/ccy15zOt.s 			page 253


 8673 101c B3F5827F 		cmp	r3, #260
 8674 1020 7FF7C9AB 		ble	.L1069
 8675 1024 6FF48274 		mvn	r4, #260
 8676 1028 2344     		add	r3, r3, r4
 8677 102a 132B     		cmp	r3, #19
 8678 102c 3FF6C3AB 		bhi	.L1069
 8679 1030 01A1     		adr	r1, .L693
 8680 1032 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 8681 1036 00BF     		.p2align 2
 8682              	.L693:
 8683 1038 8F100000 		.word	.L696+1
 8684 103c B7070000 		.word	.L1069+1
 8685 1040 B7070000 		.word	.L1069+1
 8686 1044 B7070000 		.word	.L1069+1
 8687 1048 B7070000 		.word	.L1069+1
 8688 104c B7070000 		.word	.L1069+1
 8689 1050 B7070000 		.word	.L1069+1
 8690 1054 B7070000 		.word	.L1069+1
 8691 1058 B7070000 		.word	.L1069+1
 8692 105c B7070000 		.word	.L1069+1
 8693 1060 B7070000 		.word	.L1069+1
 8694 1064 89100000 		.word	.L876+1
 8695 1068 B7070000 		.word	.L1069+1
 8696 106c 9D100000 		.word	.L694+1
 8697 1070 B7070000 		.word	.L1069+1
 8698 1074 B7070000 		.word	.L1069+1
 8699 1078 B7070000 		.word	.L1069+1
 8700 107c B7070000 		.word	.L1069+1
 8701 1080 B7070000 		.word	.L1069+1
 8702 1084 830F0000 		.word	.L692+1
 8703              		.p2align 1
 8704              	.L876:
 8705 1088 40F2431B 		movw	fp, #323
 8706              	.LVL731:
2570:src/keys.c    **** 
 8707              		.loc 1 2570 2 view .LVU2725
 8708 108c 62E7     		b	.L695
 8709              	.LVL732:
 8710              	.L696:
2614:src/keys.c    **** 	xeq_or_gto:
 8711              		.loc 1 2614 3 is_stmt 1 view .LVU2726
2614:src/keys.c    **** 	xeq_or_gto:
 8712              		.loc 1 2614 6 is_stmt 0 view .LVU2727
 8713 108e 02F5407B 		add	fp, r2, #768
 8714              	.LVL733:
2616:src/keys.c    **** 			break;
 8715              		.loc 1 2616 3 is_stmt 1 view .LVU2728
2616:src/keys.c    **** 			break;
 8716              		.loc 1 2616 6 is_stmt 0 view .LVU2729
 8717 1092 002A     		cmp	r2, #0
 8718 1094 7FF461AF 		bne	.L707
 8719 1098 FFF78DBB 		b	.L1069
 8720              	.LVL734:
 8721              	.L694:
2573:src/keys.c    **** 		goto next;
 8722              		.loc 1 2573 3 is_stmt 1 view .LVU2730
2573:src/keys.c    **** 		goto next;
ARM GAS  /tmp/ccy15zOt.s 			page 254


 8723              		.loc 1 2573 8 is_stmt 0 view .LVU2731
 8724 109c 5046     		mov	r0, r10
 8725 109e 0121     		movs	r1, #1
 8726 10a0 FFF7FEFF 		bl	advance_to_previous_label
 8727              	.LVL735:
 8728 10a4 0121     		movs	r1, #1
 8729 10a6 FFF7FEFF 		bl	advance_to_previous_label
 8730              	.LVL736:
 8731 10aa 8246     		mov	r10, r0
 8732              	.LVL737:
2574:src/keys.c    **** 
 8733              		.loc 1 2574 3 is_stmt 1 view .LVU2732
 8734 10ac 6FE7     		b	.L699
 8735              	.LVL738:
 8736              	.L704:
2570:src/keys.c    **** 
 8737              		.loc 1 2570 2 is_stmt 0 view .LVU2733
 8738 10ae 40F22732 		movw	r2, #807
 8739 10b2 9342     		cmp	r3, r2
 8740 10b4 7FF47FAB 		bne	.L1069
2640:src/keys.c    **** 		goto set_pc_and_exit;
 8741              		.loc 1 2640 3 is_stmt 1 view .LVU2734
2640:src/keys.c    **** 		goto set_pc_and_exit;
 8742              		.loc 1 2640 18 is_stmt 0 view .LVU2735
 8743 10b8 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 8744 10bc 61F38613 		bfi	r3, r1, #6, #1
 8745 10c0 88F81630 		strb	r3, [r8, #22]
2641:src/keys.c    **** 
 8746              		.loc 1 2641 3 is_stmt 1 view .LVU2736
2559:src/keys.c    **** 
 8747              		.loc 1 2559 6 is_stmt 0 view .LVU2737
 8748 10c4 4FF0330B 		mov	fp, #51
 8749              	.LVL739:
2641:src/keys.c    **** 
 8750              		.loc 1 2641 3 view .LVU2738
 8751 10c8 44E7     		b	.L695
 8752              	.LVL740:
 8753              	.L1125:
2641:src/keys.c    **** 
 8754              		.loc 1 2641 3 view .LVU2739
 8755              	.LBE999:
 8756              	.LBE1044:
 8757              	.LBB1045:
 8758              	.LBB885:
1334:src/keys.c    **** #endif
 8759              		.loc 1 1334 44 is_stmt 1 view .LVU2740
1334:src/keys.c    **** #endif
 8760              		.loc 1 1334 52 is_stmt 0 view .LVU2741
 8761 10ca 0420     		movs	r0, #4
 8762 10cc FFF7FEFF 		bl	gtodot_digit
 8763              	.LVL741:
1377:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8764              		.loc 1 1377 2 is_stmt 1 view .LVU2742
 8765              	.LBE885:
 8766              	.LBE1045:
2836:src/keys.c    **** 
 8767              		.loc 1 2836 10 is_stmt 0 view .LVU2743
ARM GAS  /tmp/ccy15zOt.s 			page 255


 8768 10d0 4FF0330B 		mov	fp, #51
 8769 10d4 FEF7E8BF 		b	.L565
 8770              	.L1166:
 8771              		.align	2
 8772              	.L1165:
 8773 10d8 00000000 		.word	NonProgrammable
 8774 10dc 00000000 		.word	.LANCHOR14
 8775 10e0 00000000 		.word	.LANCHOR11
 8776 10e4 00000000 		.word	.LANCHOR1
 8777 10e8 00000000 		.word	.LANCHOR0
 8778              	.LVL742:
 8779              	.L1105:
2894:src/keys.c    **** 
 8780              		.loc 1 2894 3 is_stmt 1 view .LVU2744
 8781              	.LBB1046:
 8782              	.LBI797:
2682:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 8783              		.loc 1 2682 12 view .LVU2745
 8784              	.LBB825:
2683:src/keys.c    **** 	enum shifts shift = reset_shift();
 8785              		.loc 1 2683 2 view .LVU2746
 8786              	.LBB799:
 8787              	.LBI799:
 198:src/keys.c    **** {
 8788              		.loc 1 198 14 view .LVU2747
 8789              	.LBB800:
 200:src/keys.c    ****     // K00 - K05
 8790              		.loc 1 200 3 view .LVU2748
 221:src/keys.c    **** }
 8791              		.loc 1 221 3 view .LVU2749
 8792              	.LBB801:
 8793              	.LBI801:
 119:src/keys.c    **** {
 8794              		.loc 1 119 12 view .LVU2750
 8795              	.LBB802:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8796              		.loc 1 121 2 view .LVU2751
 131:src/keys.c    **** }
 8797              		.loc 1 131 2 view .LVU2752
 131:src/keys.c    **** }
 8798              		.loc 1 131 23 is_stmt 0 view .LVU2753
 8799 10ec BA4B     		ldr	r3, .L1167
 8800              	.LBE802:
 8801              	.LBE801:
 221:src/keys.c    **** }
 8802              		.loc 1 221 28 view .LVU2754
 8803 10ee BB4A     		ldr	r2, .L1167+4
 8804              	.LBB804:
 8805              	.LBB803:
 131:src/keys.c    **** }
 8806              		.loc 1 131 23 view .LVU2755
 8807 10f0 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 8808              	.LBE803:
 8809              	.LBE804:
 221:src/keys.c    **** }
 8810              		.loc 1 221 10 view .LVU2756
 8811 10f2 12F803A0 		ldrb	r10, [r2, r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccy15zOt.s 			page 256


 8812              	.LVL743:
 221:src/keys.c    **** }
 8813              		.loc 1 221 10 view .LVU2757
 8814              	.LBE800:
 8815              	.LBE799:
 8816              	.LBB805:
 8817              	.LBB806:
 8818              	.LBB807:
 8819              	.LBB808:
 8820              	.LBB809:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8821              		.loc 1 85 18 view .LVU2758
 8822 10f6 FFF7FEFF 		bl	shift_down
 8823              	.LVL744:
 8824              	.LBE809:
 8825              	.LBE808:
 8826              	.LBE807:
 8827              	.LBE806:
 8828              	.LBE805:
2683:src/keys.c    **** 	enum shifts shift = reset_shift();
 8829              		.loc 1 2683 15 view .LVU2759
 8830 10fa 2AF0800A 		bic	r10, r10, #128
 8831              	.LVL745:
2684:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
 8832              		.loc 1 2684 2 is_stmt 1 view .LVU2760
 8833              	.LBB818:
 8834              	.LBI805:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 8835              		.loc 1 102 13 view .LVU2761
 8836              	.LBE818:
 8837              	.LBE825:
 8838              	.LBE1046:
 8839              	.LBE1202:
 8840              	.LBE1261:
 103:src/keys.c    **** }
 8841              		.loc 1 103 2 view .LVU2762
 8842              	.LBB1262:
 8843              	.LBB1203:
 8844              	.LBB1047:
 8845              	.LBB826:
 8846              	.LBB819:
 8847              	.LBB815:
 8848              	.LBI806:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 8849              		.loc 1 92 20 view .LVU2763
 8850              	.LBB812:
  93:src/keys.c    **** 	State2.shifts = shift;
 8851              		.loc 1 93 2 view .LVU2764
 8852              	.LBB811:
 8853              	.LBI808:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 8854              		.loc 1 84 13 view .LVU2765
 8855              	.LBB810:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8856              		.loc 1 85 2 view .LVU2766
  86:src/keys.c    **** }
 8857              		.loc 1 86 2 view .LVU2767
ARM GAS  /tmp/ccy15zOt.s 			page 257


  86:src/keys.c    **** }
 8858              		.loc 1 86 52 is_stmt 0 view .LVU2768
 8859 10fe 0346     		mov	r3, r0
 8860 1100 08B9     		cbnz	r0, .L710
 8861 1102 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 8862              	.L710:
 8863              	.LVL746:
  86:src/keys.c    **** }
 8864              		.loc 1 86 52 view .LVU2769
 8865              	.LBE810:
 8866              	.LBE811:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8867              		.loc 1 94 2 is_stmt 1 view .LVU2770
 8868              	.LBE812:
 8869              	.LBE815:
 8870              	.LBE819:
2685:src/keys.c    **** 	const int g_max = global_regs();
 8871              		.loc 1 2685 31 is_stmt 0 view .LVU2771
 8872 1106 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
 8873              	.LBB820:
 8874              	.LBB816:
 8875              	.LBB813:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8876              		.loc 1 94 16 view .LVU2772
 8877 110a 0021     		movs	r1, #0
 8878              	.LBE813:
 8879              	.LBE816:
 8880              	.LBE820:
2685:src/keys.c    **** 	const int g_max = global_regs();
 8881              		.loc 1 2685 46 view .LVU2773
 8882 110c D207     		lsls	r2, r2, #31
 8883              	.LBB821:
 8884              	.LBB817:
 8885              	.LBB814:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 8886              		.loc 1 94 16 view .LVU2774
 8887 110e 88F81010 		strb	r1, [r8, #16]
  96:src/keys.c    **** }
 8888              		.loc 1 96 2 is_stmt 1 view .LVU2775
 8889              	.LVL747:
  96:src/keys.c    **** }
 8890              		.loc 1 96 2 is_stmt 0 view .LVU2776
 8891              	.LBE814:
 8892              	.LBE817:
 8893              	.LBE821:
2685:src/keys.c    **** 	const int g_max = global_regs();
 8894              		.loc 1 2685 2 is_stmt 1 view .LVU2777
2685:src/keys.c    **** 	const int g_max = global_regs();
 8895              		.loc 1 2685 46 is_stmt 0 view .LVU2778
 8896 1112 00F13382 		bmi	.L1140
 8897 1116 4FF07009 		mov	r9, #112
 8898              	.LVL748:
 8899              	.L711:
2685:src/keys.c    **** 	const int g_max = global_regs();
 8900              		.loc 1 2685 46 view .LVU2779
 8901 111a 0093     		str	r3, [sp]
 8902              	.LVL749:
ARM GAS  /tmp/ccy15zOt.s 			page 258


2686:src/keys.c    **** 
 8903              		.loc 1 2686 2 is_stmt 1 view .LVU2780
2686:src/keys.c    **** 
 8904              		.loc 1 2686 20 is_stmt 0 view .LVU2781
 8905 111c FFF7FEFF 		bl	global_regs
 8906              	.LVL750:
2688:src/keys.c    **** 		if (local_regs())
 8907              		.loc 1 2688 2 is_stmt 1 view .LVU2782
2688:src/keys.c    **** 		if (local_regs())
 8908              		.loc 1 2688 5 is_stmt 0 view .LVU2783
 8909 1120 BAF1700F 		cmp	r10, #112
 8910 1124 009B     		ldr	r3, [sp]
 8911 1126 00F01D84 		beq	.L1141
2694:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 8912              		.loc 1 2694 7 is_stmt 1 view .LVU2784
2694:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 8913              		.loc 1 2694 10 is_stmt 0 view .LVU2785
 8914 112a BAF1090F 		cmp	r10, #9
 8915 112e 40F21A83 		bls	.L1142
2701:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 8916              		.loc 1 2701 7 is_stmt 1 view .LVU2786
2701:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 8917              		.loc 1 2701 29 is_stmt 0 view .LVU2787
 8918 1132 5A1E     		subs	r2, r3, #1
2701:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 8919              		.loc 1 2701 10 view .LVU2788
 8920 1134 D2B2     		uxtb	r2, r2
 8921 1136 012A     		cmp	r2, #1
 8922 1138 40F22682 		bls	.L1143
 8923              	.L719:
2705:src/keys.c    **** 		State2.digval = n;
 8924              		.loc 1 2705 7 is_stmt 1 view .LVU2789
2705:src/keys.c    **** 		State2.digval = n;
 8925              		.loc 1 2705 10 is_stmt 0 view .LVU2790
 8926 113c BAF17F0F 		cmp	r10, #127
 8927 1140 40F02A83 		bne	.L1144
2710:src/keys.c    **** 	case K_DOWN:
 8928              		.loc 1 2710 2 is_stmt 1 view .LVU2791
 8929 1144 073C     		subs	r4, r4, #7
 8930 1146 112C     		cmp	r4, #17
 8931 1148 3FF635AB 		bhi	.L1069
 8932 114c 01A2     		adr	r2, .L844
 8933 114e 52F824F0 		ldr	pc, [r2, r4, lsl #2]
 8934 1152 00BF     		.p2align 2
 8935              	.L844:
 8936 1154 C3110000 		.word	.L732+1
 8937 1158 B7070000 		.word	.L1069+1
 8938 115c B7070000 		.word	.L1069+1
 8939 1160 B7070000 		.word	.L1069+1
 8940 1164 B7070000 		.word	.L1069+1
 8941 1168 BD110000 		.word	.L731+1
 8942 116c B7070000 		.word	.L1069+1
 8943 1170 B7070000 		.word	.L1069+1
 8944 1174 B7070000 		.word	.L1069+1
 8945 1178 9D110000 		.word	.L729+1
 8946 117c B7070000 		.word	.L1069+1
 8947 1180 EF110000 		.word	.L725+1
ARM GAS  /tmp/ccy15zOt.s 			page 259


 8948 1184 B7070000 		.word	.L1069+1
 8949 1188 B7070000 		.word	.L1069+1
 8950 118c B7070000 		.word	.L1069+1
 8951 1190 B7070000 		.word	.L1069+1
 8952 1194 B7070000 		.word	.L1069+1
 8953 1198 89070000 		.word	.L722+1
 8954              		.p2align 1
 8955              	.L729:
2739:src/keys.c    **** 			return STATE_UNFINISHED;
 8956              		.loc 1 2739 3 view .LVU2792
2739:src/keys.c    **** 			return STATE_UNFINISHED;
 8957              		.loc 1 2739 7 is_stmt 0 view .LVU2793
 8958 119c 98F81730 		ldrb	r3, [r8, #23]	@ zero_extendqisi2
2739:src/keys.c    **** 			return STATE_UNFINISHED;
 8959              		.loc 1 2739 6 view .LVU2794
 8960 11a0 13F02002 		ands	r2, r3, #32
 8961 11a4 7FF407AB 		bne	.L1069
2741:src/keys.c    **** 
 8962              		.loc 1 2741 3 is_stmt 1 view .LVU2795
2763:src/keys.c    **** 	State2.digval = 0;
 8963              		.loc 1 2763 2 view .LVU2796
2763:src/keys.c    **** 	State2.digval = 0;
 8964              		.loc 1 2763 22 is_stmt 0 view .LVU2797
 8965 11a8 62F3C303 		bfi	r3, r2, #3, #1
 8966 11ac 88F81730 		strb	r3, [r8, #23]
2764:src/keys.c    **** 	State2.digval2 = 0;
 8967              		.loc 1 2764 2 is_stmt 1 view .LVU2798
2764:src/keys.c    **** 	State2.digval2 = 0;
 8968              		.loc 1 2764 16 is_stmt 0 view .LVU2799
 8969 11b0 A8F80820 		strh	r2, [r8, #8]	@ movhi
2765:src/keys.c    **** reset_window:
 8970              		.loc 1 2765 2 is_stmt 1 view .LVU2800
2765:src/keys.c    **** reset_window:
 8971              		.loc 1 2765 17 is_stmt 0 view .LVU2801
 8972 11b4 88F80A20 		strb	r2, [r8, #10]
 8973 11b8 FFF7F7BA 		b	.L715
 8974              	.L731:
2744:src/keys.c    **** 			State2.disp_as_alpha = 1;
 8975              		.loc 1 2744 3 is_stmt 1 view .LVU2802
2744:src/keys.c    **** 			State2.disp_as_alpha = 1;
 8976              		.loc 1 2744 6 is_stmt 0 view .LVU2803
 8977 11bc 012B     		cmp	r3, #1
 8978 11be 00F08985 		beq	.L1145
 8979              	.L732:
2749:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 8980              		.loc 1 2749 3 is_stmt 1 view .LVU2804
2749:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 8981              		.loc 1 2749 6 is_stmt 0 view .LVU2805
 8982 11c2 002B     		cmp	r3, #0
 8983 11c4 7FF4F7AA 		bne	.L1069
2753:src/keys.c    **** #endif
 8984              		.loc 1 2753 4 is_stmt 1 view .LVU2806
2753:src/keys.c    **** #endif
 8985              		.loc 1 2753 8 is_stmt 0 view .LVU2807
 8986 11c8 B8F808B0 		ldrh	fp, [r8, #8]
 8987              	.LVL751:
2755:src/keys.c    **** 			State2.digval = 0;
ARM GAS  /tmp/ccy15zOt.s 			page 260


 8988              		.loc 1 2755 4 is_stmt 1 view .LVU2808
2755:src/keys.c    **** 			State2.digval = 0;
 8989              		.loc 1 2755 24 is_stmt 0 view .LVU2809
 8990 11cc 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
2757:src/keys.c    **** 			return n;
 8991              		.loc 1 2757 19 view .LVU2810
 8992 11d0 88F80A30 		strb	r3, [r8, #10]
2755:src/keys.c    **** 			State2.digval = 0;
 8993              		.loc 1 2755 24 view .LVU2811
 8994 11d4 63F3C302 		bfi	r2, r3, #3, #1
2758:src/keys.c    **** 		}
 8995              		.loc 1 2758 11 view .LVU2812
 8996 11d8 4BF4285B 		orr	fp, fp, #10752
 8997              	.LVL752:
2756:src/keys.c    **** 			State2.digval2 = 0;
 8998              		.loc 1 2756 18 view .LVU2813
 8999 11dc A8F80830 		strh	r3, [r8, #8]	@ movhi
 9000 11e0 5846     		mov	r0, fp
 9001              	.LVL753:
2756:src/keys.c    **** 			State2.digval2 = 0;
 9002              		.loc 1 2756 18 view .LVU2814
 9003 11e2 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2755:src/keys.c    **** 			State2.digval = 0;
 9004              		.loc 1 2755 24 view .LVU2815
 9005 11e6 88F81720 		strb	r2, [r8, #23]
2756:src/keys.c    **** 			State2.digval2 = 0;
 9006              		.loc 1 2756 4 is_stmt 1 view .LVU2816
2757:src/keys.c    **** 			return n;
 9007              		.loc 1 2757 4 view .LVU2817
2758:src/keys.c    **** 		}
 9008              		.loc 1 2758 4 view .LVU2818
2758:src/keys.c    **** 		}
 9009              		.loc 1 2758 11 is_stmt 0 view .LVU2819
 9010 11ea FFF76EB9 		b	.L620
 9011              	.LVL754:
 9012              	.L725:
2722:src/keys.c    **** 			State2.digval++;
 9013              		.loc 1 2722 3 is_stmt 1 view .LVU2820
2722:src/keys.c    **** 			State2.digval++;
 9014              		.loc 1 2722 13 is_stmt 0 view .LVU2821
 9015 11ee B8F80830 		ldrh	r3, [r8, #8]
2722:src/keys.c    **** 			State2.digval++;
 9016              		.loc 1 2722 27 view .LVU2822
 9017 11f2 09F1FF39 		add	r9, r9, #-1
 9018              	.LVL755:
2722:src/keys.c    **** 			State2.digval++;
 9019              		.loc 1 2722 6 view .LVU2823
 9020 11f6 4B45     		cmp	r3, r9
 9021 11f8 80F29585 		bge	.L726
2723:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 9022              		.loc 1 2723 4 is_stmt 1 view .LVU2824
2724:src/keys.c    **** 				State2.digval = regX_idx;
 9023              		.loc 1 2724 8 is_stmt 0 view .LVU2825
 9024 11fc 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2723:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 9025              		.loc 1 2723 17 view .LVU2826
 9026 1200 0133     		adds	r3, r3, #1
ARM GAS  /tmp/ccy15zOt.s 			page 261


 9027 1202 9CB2     		uxth	r4, r3
2724:src/keys.c    **** 				State2.digval = regX_idx;
 9028              		.loc 1 2724 7 view .LVU2827
 9029 1204 D307     		lsls	r3, r2, #31
2723:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 9030              		.loc 1 2723 17 view .LVU2828
 9031 1206 A8F80840 		strh	r4, [r8, #8]	@ movhi
2724:src/keys.c    **** 				State2.digval = regX_idx;
 9032              		.loc 1 2724 4 is_stmt 1 view .LVU2829
2724:src/keys.c    **** 				State2.digval = regX_idx;
 9033              		.loc 1 2724 7 is_stmt 0 view .LVU2830
 9034 120a 3FF5CEAA 		bmi	.L715
2724:src/keys.c    **** 				State2.digval = regX_idx;
 9035              		.loc 1 2724 43 view .LVU2831
 9036 120e FFF7FEFF 		bl	global_regs
 9037              	.LVL756:
2724:src/keys.c    **** 				State2.digval = regX_idx;
 9038              		.loc 1 2724 23 view .LVU2832
 9039 1212 8442     		cmp	r4, r0
 9040 1214 7FF4C9AA 		bne	.L715
2725:src/keys.c    **** 		}
 9041              		.loc 1 2725 5 is_stmt 1 view .LVU2833
2725:src/keys.c    **** 		}
 9042              		.loc 1 2725 19 is_stmt 0 view .LVU2834
 9043 1218 6423     		movs	r3, #100
 9044 121a A8F80830 		strh	r3, [r8, #8]	@ movhi
 9045 121e FFF7C4BA 		b	.L715
 9046              	.LVL757:
 9047              	.L1058:
2725:src/keys.c    **** 		}
 9048              		.loc 1 2725 19 view .LVU2835
 9049 1222 DAB2     		uxtb	r2, r3
 9050 1224 D9E4     		b	.L641
 9051              	.LVL758:
 9052              	.L1126:
2725:src/keys.c    **** 		}
 9053              		.loc 1 2725 19 view .LVU2836
 9054              	.LBE826:
 9055              	.LBE1047:
 9056              	.LBB1048:
 9057              	.LBB886:
1338:src/keys.c    **** 		goto fin;
 9058              		.loc 1 1338 3 is_stmt 1 view .LVU2837
 9059              	.LBB879:
 9060              	.LBI879:
1310:src/keys.c    **** 	const int code = 100 + n;
 9061              		.loc 1 1310 12 view .LVU2838
 9062              	.LBB880:
1311:src/keys.c    **** 	unsigned int pc = state_pc();
 9063              		.loc 1 1311 2 view .LVU2839
1312:src/keys.c    **** 
 9064              		.loc 1 1312 2 view .LVU2840
1312:src/keys.c    **** 
 9065              		.loc 1 1312 20 is_stmt 0 view .LVU2841
 9066 1226 DFF8BC91 		ldr	r9, .L1167+12
 9067 122a D9F80030 		ldr	r3, [r9]
 9068              	.LVL759:
ARM GAS  /tmp/ccy15zOt.s 			page 262


1312:src/keys.c    **** 
 9069              		.loc 1 1312 15 view .LVU2842
 9070 122e B3F8E007 		ldrh	r0, [r3, #2016]
 9071              	.LVL760:
1314:src/keys.c    **** 		pc = 1;
 9072              		.loc 1 1314 2 is_stmt 1 view .LVU2843
1314:src/keys.c    **** 		pc = 1;
 9073              		.loc 1 1314 5 is_stmt 0 view .LVU2844
 9074 1232 830B     		lsrs	r3, r0, #14
1315:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
 9075              		.loc 1 1315 6 view .LVU2845
 9076 1234 032B     		cmp	r3, #3
 9077              	.LVL761:
1316:src/keys.c    **** 	if (pc > 0)
 9078              		.loc 1 1316 2 is_stmt 1 view .LVU2846
1316:src/keys.c    **** 	if (pc > 0)
 9079              		.loc 1 1316 7 is_stmt 0 view .LVU2847
 9080 1236 08BF     		it	eq
 9081 1238 0120     		moveq	r0, #1
 9082              	.LVL762:
1316:src/keys.c    **** 	if (pc > 0)
 9083              		.loc 1 1316 7 view .LVU2848
 9084 123a 04F16401 		add	r1, r4, #100
 9085              	.LVL763:
1316:src/keys.c    **** 	if (pc > 0)
 9086              		.loc 1 1316 7 view .LVU2849
 9087 123e 0322     		movs	r2, #3
 9088              	.LVL764:
1316:src/keys.c    **** 	if (pc > 0)
 9089              		.loc 1 1316 7 view .LVU2850
 9090 1240 FFF7FEFF 		bl	find_label_from
 9091              	.LVL765:
1317:src/keys.c    **** 		return pc;
 9092              		.loc 1 1317 2 is_stmt 1 view .LVU2851
1317:src/keys.c    **** 		return pc;
 9093              		.loc 1 1317 5 is_stmt 0 view .LVU2852
 9094 1244 0028     		cmp	r0, #0
 9095 1246 7FF469AC 		bne	.L607
1319:src/keys.c    **** }
 9096              		.loc 1 1319 2 is_stmt 1 view .LVU2853
1319:src/keys.c    **** }
 9097              		.loc 1 1319 9 is_stmt 0 view .LVU2854
 9098 124a D9F80030 		ldr	r3, [r9]
 9099 124e B3F8E007 		ldrh	r0, [r3, #2016]
 9100              	.LVL766:
1319:src/keys.c    **** }
 9101              		.loc 1 1319 9 view .LVU2855
 9102              	.LBE880:
 9103              	.LBE879:
1339:src/keys.c    **** 	}
 9104              		.loc 1 1339 3 is_stmt 1 view .LVU2856
 9105 1252 63E4     		b	.L607
 9106              	.LVL767:
 9107              	.L898:
1339:src/keys.c    **** 	}
 9108              		.loc 1 1339 3 is_stmt 0 view .LVU2857
 9109              	.LBE886:
ARM GAS  /tmp/ccy15zOt.s 			page 263


 9110              	.LBE1048:
 9111              	.LBB1049:
 9112              	.LBB869:
1931:src/keys.c    **** 	}
 9113              		.loc 1 1931 18 view .LVU2858
 9114 1254 1E23     		movs	r3, #30
1931:src/keys.c    **** 	}
 9115              		.loc 1 1931 47 view .LVU2859
 9116 1256 9B44     		add	fp, fp, r3
 9117              	.LVL768:
1931:src/keys.c    **** 	}
 9118              		.loc 1 1931 47 view .LVU2860
 9119 1258 FFF796B9 		b	.L594
 9120              	.LVL769:
 9121              	.L897:
1931:src/keys.c    **** 	}
 9122              		.loc 1 1931 18 view .LVU2861
 9123 125c 2723     		movs	r3, #39
1931:src/keys.c    **** 	}
 9124              		.loc 1 1931 47 view .LVU2862
 9125 125e 9B44     		add	fp, fp, r3
 9126              	.LVL770:
1931:src/keys.c    **** 	}
 9127              		.loc 1 1931 47 view .LVU2863
 9128 1260 FFF792B9 		b	.L594
 9129              	.LVL771:
 9130              	.L1128:
1931:src/keys.c    **** 	}
 9131              		.loc 1 1931 47 view .LVU2864
 9132              	.LBE869:
 9133              	.LBE1049:
 9134              	.LBB1050:
 9135              	.LBB887:
1348:src/keys.c    **** 	}
 9136              		.loc 1 1348 3 is_stmt 1 view .LVU2865
1348:src/keys.c    **** 	}
 9137              		.loc 1 1348 6 is_stmt 0 view .LVU2866
 9138 1264 B8F80800 		ldrh	r0, [r8, #8]
 9139              	.LVL772:
1377:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9140              		.loc 1 1377 2 is_stmt 1 view .LVU2867
 9141 1268 26E5     		b	.L597
 9142              	.LVL773:
 9143              	.L1106:
1377:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9144              		.loc 1 1377 2 is_stmt 0 view .LVU2868
 9145              	.LBE887:
 9146              	.LBE1050:
2897:src/keys.c    **** 
 9147              		.loc 1 2897 3 is_stmt 1 view .LVU2869
 9148              	.LBB1051:
 9149              	.LBI1051:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 9150              		.loc 1 102 13 view .LVU2870
 9151              	.LBE1051:
 9152              	.LBE1203:
 9153              	.LBE1262:
ARM GAS  /tmp/ccy15zOt.s 			page 264


 103:src/keys.c    **** }
 9154              		.loc 1 103 2 view .LVU2871
 9155              	.LBB1263:
 9156              	.LBB1204:
 9157              	.LBB1058:
 9158              	.LBB1052:
 9159              	.LBI1052:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 9160              		.loc 1 92 20 view .LVU2872
 9161              	.LBB1053:
  93:src/keys.c    **** 	State2.shifts = shift;
 9162              		.loc 1 93 2 view .LVU2873
 9163              	.LBB1054:
 9164              	.LBI1054:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 9165              		.loc 1 84 13 view .LVU2874
 9166              	.LBB1055:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9167              		.loc 1 85 2 view .LVU2875
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9168              		.loc 1 85 18 is_stmt 0 view .LVU2876
 9169 126a FFF7FEFF 		bl	shift_down
 9170              	.LVL774:
  86:src/keys.c    **** }
 9171              		.loc 1 86 2 is_stmt 1 view .LVU2877
  86:src/keys.c    **** }
 9172              		.loc 1 86 52 is_stmt 0 view .LVU2878
 9173 126e 0146     		mov	r1, r0
 9174 1270 08B9     		cbnz	r0, .L734
 9175 1272 98F81010 		ldrb	r1, [r8, #16]	@ zero_extendqisi2
 9176              	.L734:
 9177              	.LVL775:
  86:src/keys.c    **** }
 9178              		.loc 1 86 52 view .LVU2879
 9179              	.LBE1055:
 9180              	.LBE1054:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9181              		.loc 1 94 2 is_stmt 1 view .LVU2880
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9182              		.loc 1 94 16 is_stmt 0 view .LVU2881
 9183 1276 0022     		movs	r2, #0
 9184              	.LBE1053:
 9185              	.LBE1052:
 9186              	.LBE1058:
2897:src/keys.c    **** 
 9187              		.loc 1 2897 10 view .LVU2882
 9188 1278 2046     		mov	r0, r4
 9189              	.LBB1059:
 9190              	.LBB1057:
 9191              	.LBB1056:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9192              		.loc 1 94 16 view .LVU2883
 9193 127a 88F81020 		strb	r2, [r8, #16]
  96:src/keys.c    **** }
 9194              		.loc 1 96 2 is_stmt 1 view .LVU2884
 9195              	.LVL776:
  96:src/keys.c    **** }
ARM GAS  /tmp/ccy15zOt.s 			page 265


 9196              		.loc 1 96 2 is_stmt 0 view .LVU2885
 9197              	.LBE1056:
 9198              	.LBE1057:
 9199              	.LBE1059:
2897:src/keys.c    **** 
 9200              		.loc 1 2897 10 view .LVU2886
 9201 127e FFF7FEFF 		bl	process_catalogue
 9202              	.LVL777:
2897:src/keys.c    **** 
 9203              		.loc 1 2897 10 view .LVU2887
 9204 1282 8346     		mov	fp, r0
 9205 1284 FFF780B9 		b	.L594
 9206              	.L1107:
2901:src/keys.c    **** #else
 9207              		.loc 1 2901 3 is_stmt 1 view .LVU2888
 9208              	.LVL778:
 9209              	.LBB1060:
 9210              	.LBI730:
1390:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos;
 9211              		.loc 1 1390 12 view .LVU2889
 9212              	.LBB783:
1391:src/keys.c    ****         int op = STATE_UNFINISHED;
 9213              		.loc 1 1391 2 view .LVU2890
1391:src/keys.c    ****         int op = STATE_UNFINISHED;
 9214              		.loc 1 1391 33 is_stmt 0 view .LVU2891
 9215 1288 98F80D90 		ldrb	r9, [r8, #13]	@ zero_extendqisi2
 9216              	.LBB732:
 9217              	.LBB733:
 9218              	.LBB734:
 9219              	.LBB735:
 9220              	.LBB736:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9221              		.loc 1 85 18 view .LVU2892
 9222 128c FFF7FEFF 		bl	shift_down
 9223              	.LVL779:
 9224              	.LBE736:
 9225              	.LBE735:
 9226              	.LBE734:
 9227              	.LBE733:
 9228              	.LBE732:
1391:src/keys.c    ****         int op = STATE_UNFINISHED;
 9229              		.loc 1 1391 15 view .LVU2893
 9230 1290 CA46     		mov	r10, r9
 9231              	.LVL780:
1392:src/keys.c    **** 	const enum shifts shift = reset_shift();
 9232              		.loc 1 1392 9 is_stmt 1 view .LVU2894
1393:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
 9233              		.loc 1 1393 2 view .LVU2895
 9234              	.LBB745:
 9235              	.LBI732:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 9236              		.loc 1 102 13 view .LVU2896
 9237              	.LBE745:
 9238              	.LBE783:
 9239              	.LBE1060:
 9240              	.LBE1204:
 9241              	.LBE1263:
ARM GAS  /tmp/ccy15zOt.s 			page 266


 103:src/keys.c    **** }
 9242              		.loc 1 103 2 view .LVU2897
 9243              	.LBB1264:
 9244              	.LBB1205:
 9245              	.LBB1061:
 9246              	.LBB784:
 9247              	.LBB746:
 9248              	.LBB742:
 9249              	.LBI733:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 9250              		.loc 1 92 20 view .LVU2898
 9251              	.LBB739:
  93:src/keys.c    **** 	State2.shifts = shift;
 9252              		.loc 1 93 2 view .LVU2899
 9253              	.LBB738:
 9254              	.LBI735:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 9255              		.loc 1 84 13 view .LVU2900
 9256              	.LBB737:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9257              		.loc 1 85 2 view .LVU2901
  86:src/keys.c    **** }
 9258              		.loc 1 86 2 view .LVU2902
  86:src/keys.c    **** }
 9259              		.loc 1 86 52 is_stmt 0 view .LVU2903
 9260 1292 08B9     		cbnz	r0, .L736
 9261 1294 98F81000 		ldrb	r0, [r8, #16]	@ zero_extendqisi2
 9262              	.LVL781:
 9263              	.L736:
  86:src/keys.c    **** }
 9264              		.loc 1 86 52 view .LVU2904
 9265              	.LBE737:
 9266              	.LBE738:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9267              		.loc 1 94 2 is_stmt 1 view .LVU2905
 9268              	.LBE739:
 9269              	.LBE742:
 9270              	.LBE746:
 9271              	.LBB747:
 9272              	.LBB748:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 9273              		.loc 1 434 6 is_stmt 0 view .LVU2906
 9274 1298 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9275              	.LBE748:
 9276              	.LBE747:
 9277              	.LBB764:
 9278              	.LBB743:
 9279              	.LBB740:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9280              		.loc 1 94 16 view .LVU2907
 9281 129c 4FF0000C 		mov	ip, #0
 9282              	.LBE740:
 9283              	.LBE743:
 9284              	.LBE764:
 9285              	.LBB765:
 9286              	.LBB759:
 434:src/keys.c    **** 		if (shift == SHIFT_N)
ARM GAS  /tmp/ccy15zOt.s 			page 267


 9287              		.loc 1 434 5 view .LVU2908
 9288 12a0 D906     		lsls	r1, r3, #27
 9289              	.LBE759:
 9290              	.LBE765:
 9291              	.LBB766:
 9292              	.LBB744:
 9293              	.LBB741:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9294              		.loc 1 94 16 view .LVU2909
 9295 12a2 88F810C0 		strb	ip, [r8, #16]
  96:src/keys.c    **** }
 9296              		.loc 1 96 2 is_stmt 1 view .LVU2910
 9297              	.LVL782:
  96:src/keys.c    **** }
 9298              		.loc 1 96 2 is_stmt 0 view .LVU2911
 9299              	.LBE741:
 9300              	.LBE744:
 9301              	.LBE766:
1394:src/keys.c    **** 	State2.alpha_pos = 0;
 9302              		.loc 1 1394 2 is_stmt 1 view .LVU2912
1394:src/keys.c    **** 	State2.alpha_pos = 0;
 9303              		.loc 1 1394 11 is_stmt 0 view .LVU2913
 9304 12a6 0246     		mov	r2, r0
 9305              	.LVL783:
 9306              	.LBB767:
 9307              	.LBI747:
 384:src/keys.c    **** {
 9308              		.loc 1 384 12 is_stmt 1 view .LVU2914
 9309              	.LBB760:
 386:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 9310              		.loc 1 386 2 view .LVU2915
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 9311              		.loc 1 434 2 view .LVU2916
 434:src/keys.c    **** 		if (shift == SHIFT_N)
 9312              		.loc 1 434 5 is_stmt 0 view .LVU2917
 9313 12a8 40F11081 		bpl	.L737
 435:src/keys.c    **** 			shift = SHIFT_LC_N;
 9314              		.loc 1 435 3 is_stmt 1 view .LVU2918
 435:src/keys.c    **** 			shift = SHIFT_LC_N;
 9315              		.loc 1 435 6 is_stmt 0 view .LVU2919
 9316 12ac 0028     		cmp	r0, #0
 9317 12ae 00F00C81 		beq	.L882
 437:src/keys.c    **** 			shift = SHIFT_LC_G;
 9318              		.loc 1 437 8 is_stmt 1 view .LVU2920
 9319              	.LBB749:
 9320              	.LBB750:
 131:src/keys.c    **** }
 9321              		.loc 1 131 23 is_stmt 0 view .LVU2921
 9322 12b2 4949     		ldr	r1, .L1167
 9323              	.LBE750:
 9324              	.LBE749:
 440:src/keys.c    **** }
 9325              		.loc 1 440 49 view .LVU2922
 9326 12b4 4A4A     		ldr	r2, .L1167+8
 9327              	.LBB755:
 9328              	.LBB751:
 131:src/keys.c    **** }
ARM GAS  /tmp/ccy15zOt.s 			page 268


 9329              		.loc 1 131 23 view .LVU2923
 9330 12b6 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 9331              	.LBE751:
 9332              	.LBE755:
 9333              	.LBE760:
 9334              	.LBE767:
1395:src/keys.c    **** 
 9335              		.loc 1 1395 19 view .LVU2924
 9336 12b8 88F80DC0 		strb	ip, [r8, #13]
 9337              	.LBB768:
 9338              	.LBB761:
 438:src/keys.c    **** 	}
 9339              		.loc 1 438 10 view .LVU2925
 9340 12bc 0228     		cmp	r0, #2
 440:src/keys.c    **** }
 9341              		.loc 1 440 49 view .LVU2926
 9342 12be 4FF0060C 		mov	ip, #6
 9343 12c2 0CFB0121 		mla	r1, ip, r1, r2
 438:src/keys.c    **** 	}
 9344              		.loc 1 438 10 view .LVU2927
 9345 12c6 14BF     		ite	ne
 9346 12c8 0246     		movne	r2, r0
 9347 12ca 0522     		moveq	r2, #5
 9348              	.LVL784:
 440:src/keys.c    **** }
 9349              		.loc 1 440 2 is_stmt 1 view .LVU2928
 9350              	.LBB756:
 9351              	.LBI749:
 119:src/keys.c    **** {
 9352              		.loc 1 119 12 view .LVU2929
 9353              	.LBB752:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9354              		.loc 1 121 2 view .LVU2930
 131:src/keys.c    **** }
 9355              		.loc 1 131 2 view .LVU2931
 131:src/keys.c    **** }
 9356              		.loc 1 131 2 is_stmt 0 view .LVU2932
 9357 12cc 063C     		subs	r4, r4, #6
 9358              	.LBE752:
 9359              	.LBE756:
 440:src/keys.c    **** }
 9360              		.loc 1 440 49 view .LVU2933
 9361 12ce 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9362              	.LVL785:
 440:src/keys.c    **** }
 9363              		.loc 1 440 49 view .LVU2934
 9364              	.LBE761:
 9365              	.LBE768:
1395:src/keys.c    **** 
 9366              		.loc 1 1395 2 is_stmt 1 view .LVU2935
1397:src/keys.c    **** 	case K10:	// STO
 9367              		.loc 1 1397 2 view .LVU2936
 9368 12d0 212C     		cmp	r4, #33
 9369 12d2 23D8     		bhi	.L740
 9370 12d4 DFE814F0 		tbh	[pc, r4, lsl #1]
 9371              	.L845:
 9372 12d8 3504     		.2byte	(.L749-.L845)/2
ARM GAS  /tmp/ccy15zOt.s 			page 269


 9373 12da 2204     		.2byte	(.L748-.L845)/2
 9374 12dc 2200     		.2byte	(.L740-.L845)/2
 9375 12de 2200     		.2byte	(.L740-.L845)/2
 9376 12e0 2200     		.2byte	(.L740-.L845)/2
 9377 12e2 2200     		.2byte	(.L740-.L845)/2
 9378 12e4 DD03     		.2byte	(.L747-.L845)/2
 9379 12e6 2200     		.2byte	(.L740-.L845)/2
 9380 12e8 2200     		.2byte	(.L740-.L845)/2
 9381 12ea 2200     		.2byte	(.L740-.L845)/2
 9382 12ec 7F04     		.2byte	(.L753-.L845)/2
 9383 12ee 2200     		.2byte	(.L740-.L845)/2
 9384 12f0 0304     		.2byte	(.L745-.L845)/2
 9385 12f2 2200     		.2byte	(.L740-.L845)/2
 9386 12f4 2200     		.2byte	(.L740-.L845)/2
 9387 12f6 2200     		.2byte	(.L740-.L845)/2
 9388 12f8 2200     		.2byte	(.L740-.L845)/2
 9389 12fa 2200     		.2byte	(.L740-.L845)/2
 9390 12fc F103     		.2byte	(.L744-.L845)/2
 9391 12fe 2200     		.2byte	(.L740-.L845)/2
 9392 1300 2200     		.2byte	(.L740-.L845)/2
 9393 1302 2200     		.2byte	(.L740-.L845)/2
 9394 1304 2200     		.2byte	(.L740-.L845)/2
 9395 1306 2200     		.2byte	(.L740-.L845)/2
 9396 1308 2200     		.2byte	(.L740-.L845)/2
 9397 130a 2200     		.2byte	(.L740-.L845)/2
 9398 130c 2200     		.2byte	(.L740-.L845)/2
 9399 130e 2200     		.2byte	(.L740-.L845)/2
 9400 1310 2200     		.2byte	(.L740-.L845)/2
 9401 1312 2200     		.2byte	(.L740-.L845)/2
 9402 1314 1404     		.2byte	(.L743-.L845)/2
 9403 1316 2200     		.2byte	(.L740-.L845)/2
 9404 1318 2200     		.2byte	(.L740-.L845)/2
 9405 131a D003     		.2byte	(.L741-.L845)/2
 9406              		.p2align 1
 9407              	.L740:
1495:src/keys.c    **** 		return STATE_UNFINISHED;
 9408              		.loc 1 1495 2 view .LVU2937
1495:src/keys.c    **** 		return STATE_UNFINISHED;
 9409              		.loc 1 1495 5 is_stmt 0 view .LVU2938
 9410 131c 002A     		cmp	r2, #0
 9411 131e 3FF44AAA 		beq	.L1069
1497:src/keys.c    **** }
 9412              		.loc 1 1497 2 is_stmt 1 view .LVU2939
1497:src/keys.c    **** }
 9413              		.loc 1 1497 9 is_stmt 0 view .LVU2940
 9414 1322 42F4884B 		orr	fp, r2, #17408
 9415 1326 5846     		mov	r0, fp
 9416              	.LVL786:
1497:src/keys.c    **** }
 9417              		.loc 1 1497 9 view .LVU2941
 9418 1328 FFF7CFB8 		b	.L620
 9419              	.LVL787:
 9420              	.L1127:
1497:src/keys.c    **** }
 9421              		.loc 1 1497 9 view .LVU2942
 9422              	.LBE784:
 9423              	.LBE1061:
ARM GAS  /tmp/ccy15zOt.s 			page 270


 9424              	.LBB1062:
 9425              	.LBB888:
1343:src/keys.c    **** 		goto fin;
 9426              		.loc 1 1343 3 is_stmt 1 view .LVU2943
1343:src/keys.c    **** 		goto fin;
 9427              		.loc 1 1343 11 is_stmt 0 view .LVU2944
 9428 132c 2D4B     		ldr	r3, .L1167+12
 9429              	.LVL788:
1343:src/keys.c    **** 		goto fin;
 9430              		.loc 1 1343 11 view .LVU2945
 9431 132e 1B68     		ldr	r3, [r3]
1343:src/keys.c    **** 		goto fin;
 9432              		.loc 1 1343 9 view .LVU2946
 9433 1330 5888     		ldrh	r0, [r3, #2]
 9434              	.LVL789:
1344:src/keys.c    **** 	}
 9435              		.loc 1 1344 3 is_stmt 1 view .LVU2947
 9436 1332 FFF7F3BB 		b	.L607
 9437              	.LVL790:
 9438              	.L1110:
1344:src/keys.c    **** 	}
 9439              		.loc 1 1344 3 is_stmt 0 view .LVU2948
 9440              	.LBE888:
 9441              	.LBE1062:
2918:src/keys.c    **** 		// print_debug (3, c);
 9442              		.loc 1 2918 4 is_stmt 1 view .LVU2949
 9443              	.LBB1063:
 9444              	.LBI1063:
1001:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 9445              		.loc 1 1001 12 view .LVU2950
 9446              	.LBB1064:
1004:src/keys.c    **** 		// Row 1
 9447              		.loc 1 1004 2 view .LVU2951
1055:src/keys.c    **** 	int op = op_map[lc];
 9448              		.loc 1 1055 2 view .LVU2952
 9449              	.LBB1065:
 9450              	.LBI1065:
 134:src/keys.c    **** {
 9451              		.loc 1 134 12 view .LVU2953
 9452              	.LBB1066:
 136:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9453              		.loc 1 136 2 view .LVU2954
 146:src/keys.c    **** }
 9454              		.loc 1 146 2 view .LVU2955
 146:src/keys.c    **** }
 9455              		.loc 1 146 2 is_stmt 0 view .LVU2956
 9456              	.LBE1066:
 9457              	.LBE1065:
1056:src/keys.c    **** 	reset_shift();
 9458              		.loc 1 1056 2 is_stmt 1 view .LVU2957
 9459              	.LBB1069:
 9460              	.LBB1067:
 146:src/keys.c    **** }
 9461              		.loc 1 146 23 is_stmt 0 view .LVU2958
 9462 1336 2C4A     		ldr	r2, .L1167+16
 9463              	.LBE1067:
 9464              	.LBE1069:
ARM GAS  /tmp/ccy15zOt.s 			page 271


1056:src/keys.c    **** 	reset_shift();
 9465              		.loc 1 1056 17 view .LVU2959
 9466 1338 2C4B     		ldr	r3, .L1167+20
 9467              	.LBB1070:
 9468              	.LBB1068:
 146:src/keys.c    **** }
 9469              		.loc 1 146 23 view .LVU2960
 9470 133a 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 9471              	.LBE1068:
 9472              	.LBE1070:
1056:src/keys.c    **** 	reset_shift();
 9473              		.loc 1 1056 17 view .LVU2961
 9474 133c 33F812A0 		ldrh	r10, [r3, r2, lsl #1]
 9475              	.LVL791:
1057:src/keys.c    **** 
 9476              		.loc 1 1057 2 is_stmt 1 view .LVU2962
 9477              	.LBB1071:
 9478              	.LBI1071:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 9479              		.loc 1 102 13 view .LVU2963
 9480              	.LBE1071:
 9481              	.LBE1064:
 9482              	.LBE1063:
 9483              	.LBE1205:
 9484              	.LBE1264:
 103:src/keys.c    **** }
 9485              		.loc 1 103 2 view .LVU2964
 9486              	.LBB1265:
 9487              	.LBB1206:
 9488              	.LBB1086:
 9489              	.LBB1082:
 9490              	.LBB1078:
 9491              	.LBB1072:
 9492              	.LBI1072:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 9493              		.loc 1 92 20 view .LVU2965
 9494              	.LBB1073:
  93:src/keys.c    **** 	State2.shifts = shift;
 9495              		.loc 1 93 2 view .LVU2966
 9496              	.LBB1074:
 9497              	.LBI1074:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 9498              		.loc 1 84 13 view .LVU2967
 9499              	.LBB1075:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9500              		.loc 1 85 2 view .LVU2968
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9501              		.loc 1 85 18 is_stmt 0 view .LVU2969
 9502 1340 FFF7FEFF 		bl	shift_down
 9503              	.LVL792:
  86:src/keys.c    **** }
 9504              		.loc 1 86 2 is_stmt 1 view .LVU2970
 9505              	.LBE1075:
 9506              	.LBE1074:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9507              		.loc 1 94 2 view .LVU2971
 9508              	.LBE1073:
ARM GAS  /tmp/ccy15zOt.s 			page 272


 9509              	.LBE1072:
 9510              	.LBE1078:
1060:src/keys.c    **** 	case K62:
 9511              		.loc 1 1060 2 is_stmt 0 view .LVU2972
 9512 1344 262C     		cmp	r4, #38
 9513              	.LBB1079:
 9514              	.LBB1077:
 9515              	.LBB1076:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9516              		.loc 1 94 16 view .LVU2973
 9517 1346 88F810B0 		strb	fp, [r8, #16]
  96:src/keys.c    **** }
 9518              		.loc 1 96 2 is_stmt 1 view .LVU2974
 9519              	.LVL793:
  96:src/keys.c    **** }
 9520              		.loc 1 96 2 is_stmt 0 view .LVU2975
 9521              	.LBE1076:
 9522              	.LBE1077:
 9523              	.LBE1079:
1060:src/keys.c    **** 	case K62:
 9524              		.loc 1 1060 2 is_stmt 1 view .LVU2976
 9525 134a 00F04782 		beq	.L793
 9526 134e 272C     		cmp	r4, #39
 9527 1350 1FD1     		bne	.L795
1073:src/keys.c    **** 			return STATE_UNFINISHED;
 9528              		.loc 1 1073 3 view .LVU2977
1073:src/keys.c    **** 			return STATE_UNFINISHED;
 9529              		.loc 1 1073 7 is_stmt 0 view .LVU2978
 9530 1352 FFF7FEFF 		bl	is_bad_cmdline
 9531              	.LVL794:
1073:src/keys.c    **** 			return STATE_UNFINISHED;
 9532              		.loc 1 1073 6 view .LVU2979
 9533 1356 0028     		cmp	r0, #0
 9534 1358 7FF42DAA 		bne	.L1069
1075:src/keys.c    **** 		process_cmdline_set_lift();
 9535              		.loc 1 1075 3 is_stmt 1 view .LVU2980
1075:src/keys.c    **** 		process_cmdline_set_lift();
 9536              		.loc 1 1075 30 is_stmt 0 view .LVU2981
 9537 135c 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 9538 1360 C3F38012 		ubfx	r2, r3, #6, #1
1075:src/keys.c    **** 		process_cmdline_set_lift();
 9539              		.loc 1 1075 22 view .LVU2982
 9540 1364 C2F10102 		rsb	r2, r2, #1
1075:src/keys.c    **** 		process_cmdline_set_lift();
 9541              		.loc 1 1075 18 view .LVU2983
 9542 1368 62F38613 		bfi	r3, r2, #6, #1
 9543 136c 88F81630 		strb	r3, [r8, #22]
1076:src/keys.c    **** 		update_program_bounds(1);
 9544              		.loc 1 1076 3 is_stmt 1 view .LVU2984
 9545 1370 FFF7FEFF 		bl	process_cmdline_set_lift
 9546              	.LVL795:
1077:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
 9547              		.loc 1 1077 3 view .LVU2985
 9548 1374 0120     		movs	r0, #1
 9549 1376 FFF7FEFF 		bl	update_program_bounds
 9550              	.LVL796:
1078:src/keys.c    **** 			set_pc(0);
ARM GAS  /tmp/ccy15zOt.s 			page 273


 9551              		.loc 1 1078 3 view .LVU2986
1078:src/keys.c    **** 			set_pc(0);
 9552              		.loc 1 1078 7 is_stmt 0 view .LVU2987
 9553 137a 98F81600 		ldrb	r0, [r8, #22]	@ zero_extendqisi2
1078:src/keys.c    **** 			set_pc(0);
 9554              		.loc 1 1078 6 view .LVU2988
 9555 137e 10F04000 		ands	r0, r0, #64
 9556 1382 06D1     		bne	.L795
1078:src/keys.c    **** 			set_pc(0);
 9557              		.loc 1 1078 27 view .LVU2989
 9558 1384 174B     		ldr	r3, .L1167+12
 9559 1386 1B68     		ldr	r3, [r3]
1078:src/keys.c    **** 			set_pc(0);
 9560              		.loc 1 1078 24 view .LVU2990
 9561 1388 B3F8E027 		ldrh	r2, [r3, #2016]
 9562 138c 012A     		cmp	r2, #1
 9563 138e 00F0C184 		beq	.L1146
 9564              	.L795:
1086:src/keys.c    **** 		if (op & _RARG) {
 9565              		.loc 1 1086 5 view .LVU2991
 9566 1392 BAF1330F 		cmp	r10, #51
1056:src/keys.c    **** 	reset_shift();
 9567              		.loc 1 1056 6 view .LVU2992
 9568 1396 D346     		mov	fp, r10
1086:src/keys.c    **** 		if (op & _RARG) {
 9569              		.loc 1 1086 2 is_stmt 1 view .LVU2993
1086:src/keys.c    **** 		if (op & _RARG) {
 9570              		.loc 1 1086 5 is_stmt 0 view .LVU2994
 9571 1398 0AD0     		beq	.L803
 9572              	.LVL797:
1087:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 9573              		.loc 1 1087 3 is_stmt 1 view .LVU2995
1087:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 9574              		.loc 1 1087 6 is_stmt 0 view .LVU2996
 9575 139a 1AF4004F 		tst	r10, #32768
 9576 139e 00F00583 		beq	.L1147
1088:src/keys.c    **** 			op = STATE_UNFINISHED;
 9577              		.loc 1 1088 4 is_stmt 1 view .LVU2997
 9578              	.LVL798:
 9579              	.LBB1080:
 9580              	.LBI1080:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 9581              		.loc 1 501 13 view .LVU2998
 9582              	.LBB1081:
 502:src/keys.c    **** 		return;
 9583              		.loc 1 502 2 view .LVU2999
 502:src/keys.c    **** 		return;
 9584              		.loc 1 502 6 is_stmt 0 view .LVU3000
 9585 13a2 FFF7FEFF 		bl	is_bad_cmdline
 9586              	.LVL799:
 502:src/keys.c    **** 		return;
 9587              		.loc 1 502 5 view .LVU3001
 9588 13a6 18B9     		cbnz	r0, .L803
 9589 13a8 5FFA8AF0 		uxtb	r0, r10
 9590 13ac FFF7FEFF 		bl	init_arg.part.0
 9591              	.LVL800:
 9592              	.L803:
ARM GAS  /tmp/ccy15zOt.s 			page 274


 502:src/keys.c    **** 		return;
 9593              		.loc 1 502 5 view .LVU3002
 9594              	.LBE1081:
 9595              	.LBE1080:
1092:src/keys.c    **** #undef _RARG
 9596              		.loc 1 1092 2 is_stmt 1 view .LVU3003
1068:src/keys.c    **** #endif
 9597              		.loc 1 1068 29 is_stmt 0 view .LVU3004
 9598 13b0 4FF0330B 		mov	fp, #51
 9599              	.LVL801:
 9600              	.L798:
1092:src/keys.c    **** #undef _RARG
 9601              		.loc 1 1092 57 view .LVU3005
 9602 13b4 2BF4804B 		bic	fp, fp, #16384
 9603 13b8 FFF7E6B8 		b	.L594
 9604              	.LVL802:
 9605              	.L1114:
1092:src/keys.c    **** #undef _RARG
 9606              		.loc 1 1092 57 view .LVU3006
 9607              	.LBE1082:
 9608              	.LBE1086:
 9609              	.LBB1087:
 9610              	.LBB726:
2375:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 9611              		.loc 1 2375 3 is_stmt 1 view .LVU3007
2375:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 9612              		.loc 1 2375 12 is_stmt 0 view .LVU3008
 9613 13bc 98F80B20 		ldrb	r2, [r8, #11]	@ zero_extendqisi2
 9614 13c0 2046     		mov	r0, r4
 9615 13c2 941E     		subs	r4, r2, #2
 9616 13c4 6242     		rsbs	r2, r4, #0
 9617 13c6 6241     		adcs	r2, r2, r4
 9618 13c8 FFF7FEFF 		bl	process_catalogue
 9619              	.LVL803:
2376:src/keys.c    **** 			return opcode;
 9620              		.loc 1 2376 3 is_stmt 1 view .LVU3009
2376:src/keys.c    **** 			return opcode;
 9621              		.loc 1 2376 6 is_stmt 0 view .LVU3010
 9622 13cc 3328     		cmp	r0, #51
 9623 13ce 3FF4F2A9 		beq	.L1069
2378:src/keys.c    **** 		goto add_char;
 9624              		.loc 1 2378 3 is_stmt 1 view .LVU3011
2378:src/keys.c    **** 		goto add_char;
 9625              		.loc 1 2378 6 is_stmt 0 view .LVU3012
 9626 13d2 C3B2     		uxtb	r3, r0
 9627              	.LVL804:
2379:src/keys.c    **** 	}
 9628              		.loc 1 2379 3 is_stmt 1 view .LVU3013
 9629 13d4 FFF7B2B8 		b	.L673
 9630              	.L1168:
 9631              		.align	2
 9632              	.L1167:
 9633 13d8 00000000 		.word	.LANCHOR1
 9634 13dc 00000000 		.word	.LANCHOR0
 9635 13e0 00000000 		.word	.LANCHOR9
 9636 13e4 00000000 		.word	main_ram
 9637 13e8 00000000 		.word	.LANCHOR18
ARM GAS  /tmp/ccy15zOt.s 			page 275


 9638 13ec 00000000 		.word	.LANCHOR21
 9639              	.LVL805:
 9640              	.L1108:
2379:src/keys.c    **** 	}
 9641              		.loc 1 2379 3 is_stmt 0 view .LVU3014
 9642              	.LBE726:
 9643              	.LBE1087:
2913:src/keys.c    **** 	} else {
 9644              		.loc 1 2913 3 is_stmt 1 view .LVU3015
 9645              	.LBB1088:
 9646              	.LBI1088:
1100:src/keys.c    **** #define _RARG   0xFF00
 9647              		.loc 1 1100 12 view .LVU3016
 9648              	.LBB1089:
1105:src/keys.c    **** 		// Row 1
 9649              		.loc 1 1105 2 view .LVU3017
1156:src/keys.c    **** 	int lc = keycode_to_linear(c);
 9650              		.loc 1 1156 2 view .LVU3018
 9651              	.LBB1090:
 9652              	.LBI1090:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 9653              		.loc 1 102 13 view .LVU3019
 9654              	.LBE1090:
 9655              	.LBE1089:
 9656              	.LBE1088:
 9657              	.LBE1206:
 9658              	.LBE1265:
 103:src/keys.c    **** }
 9659              		.loc 1 103 2 view .LVU3020
 9660              	.LBB1266:
 9661              	.LBB1207:
 9662              	.LBB1116:
 9663              	.LBB1112:
 9664              	.LBB1099:
 9665              	.LBB1091:
 9666              	.LBI1091:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 9667              		.loc 1 92 20 view .LVU3021
 9668              	.LBB1092:
  93:src/keys.c    **** 	State2.shifts = shift;
 9669              		.loc 1 93 2 view .LVU3022
 9670              	.LBB1093:
 9671              	.LBI1093:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 9672              		.loc 1 84 13 view .LVU3023
 9673              	.LBB1094:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9674              		.loc 1 85 2 view .LVU3024
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9675              		.loc 1 85 18 is_stmt 0 view .LVU3025
 9676 13f0 FFF7FEFF 		bl	shift_down
 9677              	.LVL806:
  86:src/keys.c    **** }
 9678              		.loc 1 86 2 is_stmt 1 view .LVU3026
  86:src/keys.c    **** }
 9679              		.loc 1 86 52 is_stmt 0 view .LVU3027
 9680 13f4 8246     		mov	r10, r0
ARM GAS  /tmp/ccy15zOt.s 			page 276


 9681              	.LVL807:
  86:src/keys.c    **** }
 9682              		.loc 1 86 52 view .LVU3028
 9683 13f6 08B9     		cbnz	r0, .L764
 9684 13f8 98F810A0 		ldrb	r10, [r8, #16]	@ zero_extendqisi2
 9685              	.L764:
 9686              	.LVL808:
  86:src/keys.c    **** }
 9687              		.loc 1 86 52 view .LVU3029
 9688              	.LBE1094:
 9689              	.LBE1093:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9690              		.loc 1 94 2 is_stmt 1 view .LVU3030
 9691              	.LBE1092:
 9692              	.LBE1091:
 9693              	.LBE1099:
 9694              	.LBB1100:
 9695              	.LBB1101:
 146:src/keys.c    **** }
 9696              		.loc 1 146 23 is_stmt 0 view .LVU3031
 9697 13fc B64B     		ldr	r3, .L1169
 9698              	.LBE1101:
 9699              	.LBE1100:
1158:src/keys.c    **** 	State2.cmplx = 0;
 9700              		.loc 1 1158 21 view .LVU3032
 9701 13fe B748     		ldr	r0, .L1169+4
 9702              	.LBB1104:
 9703              	.LBB1102:
 146:src/keys.c    **** }
 9704              		.loc 1 146 23 view .LVU3033
 9705 1400 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 9706              	.LBE1102:
 9707              	.LBE1104:
1159:src/keys.c    **** 
 9708              		.loc 1 1159 15 view .LVU3034
 9709 1402 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
1158:src/keys.c    **** 	State2.cmplx = 0;
 9710              		.loc 1 1158 21 view .LVU3035
 9711 1406 0AEB8303 		add	r3, r10, r3, lsl #2
 9712              	.LBB1105:
 9713              	.LBB1097:
 9714              	.LBB1095:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9715              		.loc 1 94 16 view .LVU3036
 9716 140a 0021     		movs	r1, #0
 9717              	.LBE1095:
 9718              	.LBE1097:
 9719              	.LBE1105:
1158:src/keys.c    **** 	State2.cmplx = 0;
 9720              		.loc 1 1158 21 view .LVU3037
 9721 140c 30F813B0 		ldrh	fp, [r0, r3, lsl #1]
 9722              	.LBB1106:
 9723              	.LBB1098:
 9724              	.LBB1096:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 9725              		.loc 1 94 16 view .LVU3038
 9726 1410 88F81010 		strb	r1, [r8, #16]
ARM GAS  /tmp/ccy15zOt.s 			page 277


  96:src/keys.c    **** }
 9727              		.loc 1 96 2 is_stmt 1 view .LVU3039
 9728              	.LVL809:
  96:src/keys.c    **** }
 9729              		.loc 1 96 2 is_stmt 0 view .LVU3040
 9730              	.LBE1096:
 9731              	.LBE1098:
 9732              	.LBE1106:
1157:src/keys.c    **** 	int op = op_map[lc][shift];
 9733              		.loc 1 1157 2 is_stmt 1 view .LVU3041
 9734              	.LBB1107:
 9735              	.LBI1100:
 134:src/keys.c    **** {
 9736              		.loc 1 134 12 view .LVU3042
 9737              	.LBB1103:
 136:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9738              		.loc 1 136 2 view .LVU3043
 146:src/keys.c    **** }
 9739              		.loc 1 146 2 view .LVU3044
 146:src/keys.c    **** }
 9740              		.loc 1 146 2 is_stmt 0 view .LVU3045
 9741              	.LBE1103:
 9742              	.LBE1107:
1158:src/keys.c    **** 	State2.cmplx = 0;
 9743              		.loc 1 1158 2 is_stmt 1 view .LVU3046
1159:src/keys.c    **** 
 9744              		.loc 1 1159 2 view .LVU3047
1161:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9745              		.loc 1 1161 5 is_stmt 0 view .LVU3048
 9746 1414 0BF47F43 		and	r3, fp, #65280
1159:src/keys.c    **** 
 9747              		.loc 1 1159 15 view .LVU3049
 9748 1418 61F34102 		bfi	r2, r1, #1, #1
1161:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9749              		.loc 1 1161 5 view .LVU3050
 9750 141c B3F57F4F 		cmp	r3, #65280
1159:src/keys.c    **** 
 9751              		.loc 1 1159 15 view .LVU3051
 9752 1420 88F81520 		strb	r2, [r8, #21]
1161:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9753              		.loc 1 1161 2 is_stmt 1 view .LVU3052
1161:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9754              		.loc 1 1161 5 is_stmt 0 view .LVU3053
 9755 1424 00F02384 		beq	.L790
1165:src/keys.c    **** 		// HYP
 9756              		.loc 1 1165 2 is_stmt 1 view .LVU3054
1165:src/keys.c    **** 		// HYP
 9757              		.loc 1 1165 5 is_stmt 0 view .LVU3055
 9758 1428 002C     		cmp	r4, #0
 9759 142a 00F0E482 		beq	.L1148
1174:src/keys.c    **** 		switch (c) {
 9760              		.loc 1 1174 2 is_stmt 1 view .LVU3056
1174:src/keys.c    **** 		switch (c) {
 9761              		.loc 1 1174 5 is_stmt 0 view .LVU3057
 9762 142e BAF1000F 		cmp	r10, #0
 9763 1432 3FF4A9A8 		beq	.L594
1175:src/keys.c    **** 		case K_CMPLX:
ARM GAS  /tmp/ccy15zOt.s 			page 278


 9764              		.loc 1 1175 3 is_stmt 1 view .LVU3058
 9765 1436 242C     		cmp	r4, #36
 9766 1438 00F06884 		beq	.L767
 9767 143c 2D2C     		cmp	r4, #45
 9768 143e 00F05F84 		beq	.L768
 9769 1442 1F2C     		cmp	r4, #31
 9770 1444 7FF4A0A8 		bne	.L594
1181:src/keys.c    **** 				if (is_bad_cmdline())
 9771              		.loc 1 1181 4 view .LVU3059
1181:src/keys.c    **** 				if (is_bad_cmdline())
 9772              		.loc 1 1181 7 is_stmt 0 view .LVU3060
 9773 1448 BBF1330F 		cmp	fp, #51
 9774 144c 3FF4B3A9 		beq	.L1069
1182:src/keys.c    **** 					return STATE_UNFINISHED;
 9775              		.loc 1 1182 5 is_stmt 1 view .LVU3061
1182:src/keys.c    **** 					return STATE_UNFINISHED;
 9776              		.loc 1 1182 9 is_stmt 0 view .LVU3062
 9777 1450 FFF7FEFF 		bl	is_bad_cmdline
 9778              	.LVL810:
1182:src/keys.c    **** 					return STATE_UNFINISHED;
 9779              		.loc 1 1182 8 view .LVU3063
 9780 1454 0446     		mov	r4, r0
 9781 1456 0028     		cmp	r0, #0
 9782 1458 7FF4ADA9 		bne	.L1069
1184:src/keys.c    **** 				State2.cmplx = 1;
 9783              		.loc 1 1184 5 is_stmt 1 view .LVU3064
 9784 145c FFF7FEFF 		bl	process_cmdline_set_lift
 9785              	.LVL811:
1185:src/keys.c    **** 				State2.test = op;
 9786              		.loc 1 1185 5 view .LVU3065
1185:src/keys.c    **** 				State2.test = op;
 9787              		.loc 1 1185 18 is_stmt 0 view .LVU3066
 9788 1460 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
1186:src/keys.c    **** 			}
 9789              		.loc 1 1186 17 view .LVU3067
 9790 1464 88F80FB0 		strb	fp, [r8, #15]
1185:src/keys.c    **** 				State2.test = op;
 9791              		.loc 1 1185 18 view .LVU3068
 9792 1468 43F00203 		orr	r3, r3, #2
 9793              	.LBE1112:
 9794              	.LBE1116:
 9795              	.LBE1207:
 9796              	.LBE1266:
2952:src/keys.c    ****   if (was_paused && Pause == 0) {
 9797              		.loc 1 2952 7 view .LVU3069
 9798 146c 2746     		mov	r7, r4
 9799              	.LBB1267:
 9800              	.LBB1208:
 9801              	.LBB1117:
 9802              	.LBB1113:
1185:src/keys.c    **** 				State2.test = op;
 9803              		.loc 1 1185 18 view .LVU3070
 9804 146e 88F81530 		strb	r3, [r8, #21]
1186:src/keys.c    **** 			}
 9805              		.loc 1 1186 5 is_stmt 1 view .LVU3071
1188:src/keys.c    **** 
 9806              		.loc 1 1188 11 is_stmt 0 view .LVU3072
ARM GAS  /tmp/ccy15zOt.s 			page 279


 9807 1472 4FF0330B 		mov	fp, #51
 9808              	.LVL812:
1188:src/keys.c    **** 
 9809              		.loc 1 1188 11 view .LVU3073
 9810 1476 FEF717BE 		b	.L565
 9811              	.LVL813:
 9812              	.L1129:
1188:src/keys.c    **** 
 9813              		.loc 1 1188 11 view .LVU3074
 9814              	.LBE1113:
 9815              	.LBE1117:
 9816              	.LBB1118:
 9817              	.LBB889:
1352:src/keys.c    **** 			goto fin2;
 9818              		.loc 1 1352 3 is_stmt 1 view .LVU3075
1352:src/keys.c    **** 			goto fin2;
 9819              		.loc 1 1352 13 is_stmt 0 view .LVU3076
 9820 147a 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 9821              	.LVL814:
1352:src/keys.c    **** 			goto fin2;
 9822              		.loc 1 1352 6 view .LVU3077
 9823 147e 002B     		cmp	r3, #0
 9824 1480 3FF44EAB 		beq	.L611
1355:src/keys.c    **** 			State2.digval /= 10;
 9825              		.loc 1 1355 4 is_stmt 1 view .LVU3078
1355:src/keys.c    **** 			State2.digval /= 10;
 9826              		.loc 1 1355 19 is_stmt 0 view .LVU3079
 9827 1484 013B     		subs	r3, r3, #1
 9828 1486 88F80B30 		strb	r3, [r8, #11]
1356:src/keys.c    **** 		}
 9829              		.loc 1 1356 4 is_stmt 1 view .LVU3080
1356:src/keys.c    **** 		}
 9830              		.loc 1 1356 18 is_stmt 0 view .LVU3081
 9831 148a 0A22     		movs	r2, #10
 9832              	.LVL815:
1356:src/keys.c    **** 		}
 9833              		.loc 1 1356 18 view .LVU3082
 9834 148c B8F80830 		ldrh	r3, [r8, #8]
 9835 1490 B3FBF2F3 		udiv	r3, r3, r2
 9836              	.LBE889:
 9837              	.LBE1118:
2836:src/keys.c    **** 
 9838              		.loc 1 2836 10 view .LVU3083
 9839 1494 4FF0330B 		mov	fp, #51
 9840              	.LBB1119:
 9841              	.LBB890:
1356:src/keys.c    **** 		}
 9842              		.loc 1 1356 18 view .LVU3084
 9843 1498 A8F80830 		strh	r3, [r8, #8]	@ movhi
1377:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9844              		.loc 1 1377 2 is_stmt 1 view .LVU3085
 9845 149c FEF704BE 		b	.L565
 9846              	.LVL816:
 9847              	.L1133:
1377:src/keys.c    **** 		rawpc = find_user_pc(pc);
 9848              		.loc 1 1377 2 is_stmt 0 view .LVU3086
 9849              	.LBE890:
ARM GAS  /tmp/ccy15zOt.s 			page 280


 9850              	.LBE1119:
 9851              	.LBB1120:
 9852              	.LBB910:
2485:src/keys.c    **** 		return STATE_UNFINISHED;
 9853              		.loc 1 2485 3 is_stmt 1 view .LVU3087
2485:src/keys.c    **** 		return STATE_UNFINISHED;
 9854              		.loc 1 2485 17 is_stmt 0 view .LVU3088
 9855 14a0 88F80C10 		strb	r1, [r8, #12]
2486:src/keys.c    **** 	} 
 9856              		.loc 1 2486 3 is_stmt 1 view .LVU3089
 9857              	.LBE910:
 9858              	.LBE1120:
2845:src/keys.c    **** 
 9859              		.loc 1 2845 10 is_stmt 0 view .LVU3090
 9860 14a4 4FF0330B 		mov	fp, #51
 9861              	.LBB1121:
 9862              	.LBB911:
2486:src/keys.c    **** 	} 
 9863              		.loc 1 2486 10 view .LVU3091
 9864 14a8 FEF7FEBD 		b	.L565
 9865              	.LVL817:
 9866              	.L1101:
2486:src/keys.c    **** 	} 
 9867              		.loc 1 2486 10 view .LVU3092
 9868              	.LBE911:
 9869              	.LBE1121:
 9870              	.LBB1122:
 9871              	.LBB652:
 9872              	.LBB645:
 324:src/keys.c    **** #else
 9873              		.loc 1 324 45 view .LVU3093
 9874 14ac FFF7FEFF 		bl	shift_down
 9875              	.LVL818:
 324:src/keys.c    **** #else
 9876              		.loc 1 324 42 view .LVU3094
 9877 14b0 0328     		cmp	r0, #3
 9878 14b2 00F07382 		beq	.L662
 9879 14b6 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 322:src/keys.c    **** #ifndef WINGUI
 9880              		.loc 1 322 8 view .LVU3095
 9881 14ba 894B     		ldr	r3, .L1169+8
 324:src/keys.c    **** #else
 9882              		.loc 1 324 73 view .LVU3096
 9883 14bc DC46     		mov	ip, fp
 328:src/keys.c    ****   }
 9884              		.loc 1 328 9 view .LVU3097
 9885 14be 0C21     		movs	r1, #12
 9886 14c0 FEF7ECBE 		b	.L661
 9887              	.LVL819:
 9888              	.L874:
 328:src/keys.c    ****   }
 9889              		.loc 1 328 9 view .LVU3098
 9890              	.LBE645:
 9891              	.LBE652:
 9892              	.LBE1122:
 9893              	.LBB1123:
 9894              	.LBB1000:
ARM GAS  /tmp/ccy15zOt.s 			page 281


2554:src/keys.c    **** 	const int opcode = getprog(pc);
 9895              		.loc 1 2554 27 view .LVU3099
 9896 14c4 4FF0030B 		mov	fp, #3
 9897 14c8 CEE4     		b	.L685
 9898              	.LVL820:
 9899              	.L882:
2554:src/keys.c    **** 	const int opcode = getprog(pc);
 9900              		.loc 1 2554 27 view .LVU3100
 9901              	.LBE1000:
 9902              	.LBE1123:
 9903              	.LBB1124:
 9904              	.LBB785:
 9905              	.LBB769:
 9906              	.LBB762:
 436:src/keys.c    **** 		else if (shift == SHIFT_G)
 9907              		.loc 1 436 10 view .LVU3101
 9908 14ca 0422     		movs	r2, #4
 9909              	.L737:
 9910              	.LVL821:
 440:src/keys.c    **** }
 9911              		.loc 1 440 2 is_stmt 1 view .LVU3102
 9912              	.LBB757:
 119:src/keys.c    **** {
 9913              		.loc 1 119 12 view .LVU3103
 9914              	.LBB753:
 121:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9915              		.loc 1 121 2 view .LVU3104
 131:src/keys.c    **** }
 9916              		.loc 1 131 2 view .LVU3105
 131:src/keys.c    **** }
 9917              		.loc 1 131 23 is_stmt 0 view .LVU3106
 9918 14cc 8549     		ldr	r1, .L1169+12
 9919              	.LBE753:
 9920              	.LBE757:
 440:src/keys.c    **** }
 9921              		.loc 1 440 49 view .LVU3107
 9922 14ce DFF820C2 		ldr	ip, .L1169+24
 9923              	.LBB758:
 9924              	.LBB754:
 131:src/keys.c    **** }
 9925              		.loc 1 131 23 view .LVU3108
 9926 14d2 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 9927              	.LBE754:
 9928              	.LBE758:
 440:src/keys.c    **** }
 9929              		.loc 1 440 49 view .LVU3109
 9930 14d4 4FF0060E 		mov	lr, #6
 9931 14d8 0EFB01C1 		mla	r1, lr, r1, ip
 9932 14dc 063C     		subs	r4, r4, #6
 9933              	.LBE762:
 9934              	.LBE769:
1395:src/keys.c    **** 
 9935              		.loc 1 1395 19 view .LVU3110
 9936 14de 4FF0000C 		mov	ip, #0
 9937              	.LBB770:
 9938              	.LBB763:
 440:src/keys.c    **** }
ARM GAS  /tmp/ccy15zOt.s 			page 282


 9939              		.loc 1 440 49 view .LVU3111
 9940 14e2 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9941              	.LVL822:
 440:src/keys.c    **** }
 9942              		.loc 1 440 49 view .LVU3112
 9943              	.LBE763:
 9944              	.LBE770:
1395:src/keys.c    **** 
 9945              		.loc 1 1395 2 is_stmt 1 view .LVU3113
1395:src/keys.c    **** 
 9946              		.loc 1 1395 19 is_stmt 0 view .LVU3114
 9947 14e4 88F80DC0 		strb	ip, [r8, #13]
1397:src/keys.c    **** 	case K10:	// STO
 9948              		.loc 1 1397 2 is_stmt 1 view .LVU3115
 9949 14e8 212C     		cmp	r4, #33
 9950 14ea 3FF617AF 		bhi	.L740
 9951 14ee 01A1     		adr	r1, .L742
 9952 14f0 51F824F0 		ldr	pc, [r1, r4, lsl #2]
 9953              		.p2align 2
 9954              	.L742:
 9955 14f4 431B0000 		.word	.L749+1
 9956 14f8 1D1B0000 		.word	.L748+1
 9957 14fc 1D130000 		.word	.L740+1
 9958 1500 1D130000 		.word	.L740+1
 9959 1504 1D130000 		.word	.L740+1
 9960 1508 1D130000 		.word	.L740+1
 9961 150c 931A0000 		.word	.L747+1
 9962 1510 1D130000 		.word	.L740+1
 9963 1514 1D130000 		.word	.L740+1
 9964 1518 1D130000 		.word	.L740+1
 9965 151c F5050000 		.word	.L746+1
 9966 1520 1D130000 		.word	.L740+1
 9967 1524 DF1A0000 		.word	.L745+1
 9968 1528 1D130000 		.word	.L740+1
 9969 152c 1D130000 		.word	.L740+1
 9970 1530 1D130000 		.word	.L740+1
 9971 1534 1D130000 		.word	.L740+1
 9972 1538 1D130000 		.word	.L740+1
 9973 153c BB1A0000 		.word	.L744+1
 9974 1540 1D130000 		.word	.L740+1
 9975 1544 1D130000 		.word	.L740+1
 9976 1548 1D130000 		.word	.L740+1
 9977 154c 1D130000 		.word	.L740+1
 9978 1550 1D130000 		.word	.L740+1
 9979 1554 1D130000 		.word	.L740+1
 9980 1558 1D130000 		.word	.L740+1
 9981 155c 1D130000 		.word	.L740+1
 9982 1560 1D130000 		.word	.L740+1
 9983 1564 1D130000 		.word	.L740+1
 9984 1568 1D130000 		.word	.L740+1
 9985 156c 011B0000 		.word	.L743+1
 9986 1570 1D130000 		.word	.L740+1
 9987 1574 1D130000 		.word	.L740+1
 9988 1578 791A0000 		.word	.L741+1
 9989              	.LVL823:
 9990              		.p2align 1
 9991              	.L1140:
ARM GAS  /tmp/ccy15zOt.s 			page 283


1397:src/keys.c    **** 	case K10:	// STO
 9992              		.loc 1 1397 2 is_stmt 0 view .LVU3116
 9993 157c 0093     		str	r3, [sp]
 9994              	.LBE785:
 9995              	.LBE1124:
 9996              	.LBB1125:
 9997              	.LBB827:
2685:src/keys.c    **** 	const int g_max = global_regs();
 9998              		.loc 1 2685 33 view .LVU3117
 9999 157e FFF7FEFF 		bl	local_regs
 10000              	.LVL824:
2685:src/keys.c    **** 	const int g_max = global_regs();
 10001              		.loc 1 2685 33 view .LVU3118
 10002 1582 009B     		ldr	r3, [sp]
 10003 1584 8146     		mov	r9, r0
 10004 1586 C8E5     		b	.L711
 10005              	.LVL825:
 10006              	.L1143:
2701:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 10007              		.loc 1 2701 50 view .LVU3119
 10008 1588 0D2C     		cmp	r4, #13
 10009 158a 7FF4D7AD 		bne	.L719
2702:src/keys.c    **** 		set_smode(SDISP_SHOW);
 10010              		.loc 1 2702 3 is_stmt 1 view .LVU3120
 10011 158e 012B     		cmp	r3, #1
 10012 1590 14BF     		ite	ne
 10013 1592 2C20     		movne	r0, #44
 10014              	.LVL826:
2702:src/keys.c    **** 		set_smode(SDISP_SHOW);
 10015              		.loc 1 2702 3 is_stmt 0 view .LVU3121
 10016 1594 2B20     		moveq	r0, #43
 10017 1596 FFF7FEFF 		bl	set_window
 10018              	.LVL827:
2703:src/keys.c    **** 	}
 10019              		.loc 1 2703 3 is_stmt 1 view .LVU3122
 10020              	.LBB822:
 10021              	.LBI822:
 646:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 10022              		.loc 1 646 13 view .LVU3123
 10023              	.LBB823:
 647:src/keys.c    **** }
 10024              		.loc 1 647 2 view .LVU3124
 647:src/keys.c    **** }
 10025              		.loc 1 647 15 is_stmt 0 view .LVU3125
 10026 159a 98F81130 		ldrb	r3, [r8, #17]	@ zero_extendqisi2
 10027 159e 013B     		subs	r3, r3, #1
 10028 15a0 18BF     		it	ne
 10029 15a2 0123     		movne	r3, #1
 10030 15a4 88F81130 		strb	r3, [r8, #17]
 10031              	.LVL828:
 647:src/keys.c    **** }
 10032              		.loc 1 647 15 view .LVU3126
 10033              	.LBE823:
 10034              	.LBE822:
2710:src/keys.c    **** 	case K_DOWN:
 10035              		.loc 1 2710 2 is_stmt 1 view .LVU3127
2710:src/keys.c    **** 	case K_DOWN:
ARM GAS  /tmp/ccy15zOt.s 			page 284


 10036              		.loc 1 2710 2 is_stmt 0 view .LVU3128
 10037              	.LBE827:
 10038              	.LBE1125:
 10039              	.LBE1208:
 10040              	.LBE1267:
3109:src/keys.c    ****     case STATE_SST:
 10041              		.loc 1 3109 5 is_stmt 1 view .LVU3129
 10042              	.LBB1268:
 10043              	.LBB1209:
 10044              	.LBB1126:
 10045              	.LBB828:
2761:src/keys.c    **** 	}
 10046              		.loc 1 2761 10 is_stmt 0 view .LVU3130
 10047 15a8 4FF0330B 		mov	fp, #51
 10048 15ac FEF77CBD 		b	.L565
 10049              	.LVL829:
 10050              	.L1109:
2761:src/keys.c    **** 	}
 10051              		.loc 1 2761 10 view .LVU3131
 10052              	.LBE828:
 10053              	.LBE1126:
2916:src/keys.c    **** 		if (shift == SHIFT_H)
 10054              		.loc 1 2916 4 is_stmt 1 view .LVU3132
 10055              	.LBB1127:
 10056              	.LBI1005:
 843:src/keys.c    **** 
 10057              		.loc 1 843 12 view .LVU3133
 10058              	.LBB1031:
 846:src/keys.c    **** 		// Row 1
 10059              		.loc 1 846 2 view .LVU3134
 897:src/keys.c    **** 		STATE_UNFINISHED,
 10060              		.loc 1 897 2 view .LVU3135
 904:src/keys.c    **** 	int lc = keycode_to_linear(c);
 10061              		.loc 1 904 2 view .LVU3136
 10062              	.LBB1010:
 10063              	.LBI1010:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 10064              		.loc 1 102 13 view .LVU3137
 10065              	.LBE1010:
 10066              	.LBE1031:
 10067              	.LBE1127:
 10068              	.LBE1209:
 10069              	.LBE1268:
 103:src/keys.c    **** }
 10070              		.loc 1 103 2 view .LVU3138
 10071              	.LBB1269:
 10072              	.LBB1210:
 10073              	.LBB1128:
 10074              	.LBB1032:
 10075              	.LBB1019:
 10076              	.LBB1011:
 10077              	.LBI1011:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 10078              		.loc 1 92 20 view .LVU3139
 10079              	.LBB1012:
  93:src/keys.c    **** 	State2.shifts = shift;
 10080              		.loc 1 93 2 view .LVU3140
ARM GAS  /tmp/ccy15zOt.s 			page 285


 10081              	.LBB1013:
 10082              	.LBI1013:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 10083              		.loc 1 84 13 view .LVU3141
 10084              	.LBB1014:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10085              		.loc 1 85 2 view .LVU3142
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 10086              		.loc 1 85 18 is_stmt 0 view .LVU3143
 10087 15b0 FFF7FEFF 		bl	shift_down
 10088              	.LVL830:
  86:src/keys.c    **** }
 10089              		.loc 1 86 2 is_stmt 1 view .LVU3144
  86:src/keys.c    **** }
 10090              		.loc 1 86 52 is_stmt 0 view .LVU3145
 10091 15b4 0346     		mov	r3, r0
 10092 15b6 08B9     		cbnz	r0, .L771
 10093 15b8 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 10094              	.L771:
 10095              	.LVL831:
  86:src/keys.c    **** }
 10096              		.loc 1 86 52 view .LVU3146
 10097              	.LBE1014:
 10098              	.LBE1013:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10099              		.loc 1 94 2 is_stmt 1 view .LVU3147
 10100              	.LBE1012:
 10101              	.LBE1011:
 10102              	.LBE1019:
 10103              	.LBB1020:
 10104              	.LBB1021:
 146:src/keys.c    **** }
 10105              		.loc 1 146 23 is_stmt 0 view .LVU3148
 10106 15bc 464A     		ldr	r2, .L1169
 10107              	.LBE1021:
 10108              	.LBE1020:
 906:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10109              		.loc 1 906 21 view .LVU3149
 10110 15be DFF834C1 		ldr	ip, .L1169+28
 10111              	.LBB1024:
 10112              	.LBB1022:
 146:src/keys.c    **** }
 10113              		.loc 1 146 23 view .LVU3150
 10114 15c2 105D     		ldrb	r0, [r2, r4]	@ zero_extendqisi2
 10115              	.LBE1022:
 10116              	.LBE1024:
 906:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10117              		.loc 1 906 21 view .LVU3151
 10118 15c4 4200     		lsls	r2, r0, #1
 10119 15c6 022B     		cmp	r3, #2
 10120 15c8 08BF     		it	eq
 10121 15ca 0132     		addeq	r2, r2, #1
 10122              	.LBB1025:
 10123              	.LBB1017:
 10124              	.LBB1015:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10125              		.loc 1 94 16 view .LVU3152
ARM GAS  /tmp/ccy15zOt.s 			page 286


 10126 15cc 0021     		movs	r1, #0
 10127              	.LBE1015:
 10128              	.LBE1017:
 10129              	.LBE1025:
 906:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10130              		.loc 1 906 21 view .LVU3153
 10131 15ce 3CF812B0 		ldrh	fp, [ip, r2, lsl #1]
 10132              	.LBB1026:
 10133              	.LBB1018:
 10134              	.LBB1016:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 10135              		.loc 1 94 16 view .LVU3154
 10136 15d2 88F81010 		strb	r1, [r8, #16]
  96:src/keys.c    **** }
 10137              		.loc 1 96 2 is_stmt 1 view .LVU3155
 10138              	.LVL832:
  96:src/keys.c    **** }
 10139              		.loc 1 96 2 is_stmt 0 view .LVU3156
 10140              	.LBE1016:
 10141              	.LBE1018:
 10142              	.LBE1026:
 905:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 10143              		.loc 1 905 2 is_stmt 1 view .LVU3157
 10144              	.LBB1027:
 10145              	.LBI1020:
 134:src/keys.c    **** {
 10146              		.loc 1 134 12 view .LVU3158
 10147              	.LBB1023:
 136:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10148              		.loc 1 136 2 view .LVU3159
 146:src/keys.c    **** }
 10149              		.loc 1 146 2 view .LVU3160
 146:src/keys.c    **** }
 10150              		.loc 1 146 2 is_stmt 0 view .LVU3161
 10151              	.LBE1023:
 10152              	.LBE1027:
 906:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10153              		.loc 1 906 2 is_stmt 1 view .LVU3162
 907:src/keys.c    **** 	if (no_int)
 10154              		.loc 1 907 2 view .LVU3163
 10155 15d6 0BF4704A 		and	r10, fp, #61440
 10156              	.LVL833:
 908:src/keys.c    **** 		op &= ~NO_INT;
 10157              		.loc 1 908 2 view .LVU3164
 908:src/keys.c    **** 		op &= ~NO_INT;
 10158              		.loc 1 908 5 is_stmt 0 view .LVU3165
 10159 15da BAF5704F 		cmp	r10, #61440
 10160 15de 00F06681 		beq	.L1149
 911:src/keys.c    **** 	case K00:
 10161              		.loc 1 911 2 is_stmt 1 view .LVU3166
 10162 15e2 282C     		cmp	r4, #40
 10163 15e4 23D8     		bhi	.L791
 10164 15e6 DFE804F0 		tbb	[pc, r4]
 10165              	.L846:
 10166 15ea 87       		.byte	(.L783-.L846)/2
 10167 15eb 28       		.byte	(.L781-.L846)/2
 10168 15ec 22       		.byte	(.L791-.L846)/2
ARM GAS  /tmp/ccy15zOt.s 			page 287


 10169 15ed 28       		.byte	(.L781-.L846)/2
 10170 15ee 22       		.byte	(.L791-.L846)/2
 10171 15ef 22       		.byte	(.L791-.L846)/2
 10172 15f0 22       		.byte	(.L791-.L846)/2
 10173 15f1 22       		.byte	(.L791-.L846)/2
 10174 15f2 22       		.byte	(.L791-.L846)/2
 10175 15f3 22       		.byte	(.L791-.L846)/2
 10176 15f4 22       		.byte	(.L791-.L846)/2
 10177 15f5 22       		.byte	(.L791-.L846)/2
 10178 15f6 15       		.byte	(.L780-.L846)/2
 10179 15f7 22       		.byte	(.L791-.L846)/2
 10180 15f8 22       		.byte	(.L791-.L846)/2
 10181 15f9 22       		.byte	(.L791-.L846)/2
 10182 15fa 22       		.byte	(.L791-.L846)/2
 10183 15fb 22       		.byte	(.L791-.L846)/2
 10184 15fc 9D       		.byte	(.L779-.L846)/2
 10185 15fd 5D       		.byte	(.L778-.L846)/2
 10186 15fe 22       		.byte	(.L791-.L846)/2
 10187 15ff 22       		.byte	(.L791-.L846)/2
 10188 1600 22       		.byte	(.L791-.L846)/2
 10189 1601 22       		.byte	(.L791-.L846)/2
 10190 1602 22       		.byte	(.L791-.L846)/2
 10191 1603 22       		.byte	(.L791-.L846)/2
 10192 1604 22       		.byte	(.L791-.L846)/2
 10193 1605 22       		.byte	(.L791-.L846)/2
 10194 1606 22       		.byte	(.L791-.L846)/2
 10195 1607 22       		.byte	(.L791-.L846)/2
 10196 1608 45       		.byte	(.L777-.L846)/2
 10197 1609 36       		.byte	(.L776-.L846)/2
 10198 160a 4C       		.byte	(.L774-.L846)/2
 10199 160b 4C       		.byte	(.L774-.L846)/2
 10200 160c 22       		.byte	(.L791-.L846)/2
 10201 160d 22       		.byte	(.L791-.L846)/2
 10202 160e 22       		.byte	(.L791-.L846)/2
 10203 160f 22       		.byte	(.L791-.L846)/2
 10204 1610 22       		.byte	(.L791-.L846)/2
 10205 1611 4C       		.byte	(.L774-.L846)/2
 10206 1612 4C       		.byte	(.L774-.L846)/2
 10207 1613 00       		.p2align 1
 10208              	.L780:
 943:src/keys.c    **** 			if (is_bad_cmdline())
 10209              		.loc 1 943 3 view .LVU3167
 943:src/keys.c    **** 			if (is_bad_cmdline())
 10210              		.loc 1 943 6 is_stmt 0 view .LVU3168
 10211 1614 012B     		cmp	r3, #1
 10212 1616 00F01283 		beq	.L1150
 10213              	.LVL834:
 10214              	.L785:
 991:src/keys.c    **** 		return STATE_UNFINISHED;
 10215              		.loc 1 991 2 is_stmt 1 view .LVU3169
 991:src/keys.c    **** 		return STATE_UNFINISHED;
 10216              		.loc 1 991 5 is_stmt 0 view .LVU3170
 10217 161a BAF5704F 		cmp	r10, #61440
 10218 161e 06D1     		bne	.L791
 10219              	.L773:
 991:src/keys.c    **** 		return STATE_UNFINISHED;
 10220              		.loc 1 991 13 view .LVU3171
ARM GAS  /tmp/ccy15zOt.s 			page 288


 10221 1620 314B     		ldr	r3, .L1169+16
 10222 1622 1B68     		ldr	r3, [r3]
 10223 1624 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10224 1628 DB07     		lsls	r3, r3, #31
 10225 162a 3FF5C4A8 		bmi	.L1069
 10226              	.L791:
 994:src/keys.c    **** #undef NO_INT
 10227              		.loc 1 994 2 is_stmt 1 view .LVU3172
 10228              	.LVL835:
 10229              	.LBB1028:
 10230              	.LBI1007:
 619:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10231              		.loc 1 619 12 view .LVU3173
 10232              	.LBB1009:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 10233              		.loc 1 620 2 view .LVU3174
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 10234              		.loc 1 620 6 is_stmt 0 view .LVU3175
 10235 162e 4FEA2B23 		asr	r3, fp, #8
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 10236              		.loc 1 620 5 view .LVU3176
 10237 1632 012B     		cmp	r3, #1
 10238 1634 7EF4A8AF 		bne	.L594
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 10239              		.loc 1 620 5 view .LVU3177
 10240 1638 9DE4     		b	.L854
 10241              	.LVL836:
 10242              	.L781:
 620:src/keys.c    **** 		const int nilop = argKIND(op);
 10243              		.loc 1 620 5 view .LVU3178
 10244              	.LBE1009:
 10245              	.LBE1028:
 932:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10246              		.loc 1 932 4 is_stmt 1 view .LVU3179
 932:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10247              		.loc 1 932 8 is_stmt 0 view .LVU3180
 10248 163a 2B4A     		ldr	r2, .L1169+16
 10249 163c 1268     		ldr	r2, [r2]
 10250 163e 92F8E827 		ldrb	r2, [r2, #2024]	@ zero_extendqisi2
 932:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10251              		.loc 1 932 7 view .LVU3181
 10252 1642 D207     		lsls	r2, r2, #31
 10253 1644 E9D5     		bpl	.L785
 10254              	.L1074:
 932:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10255              		.loc 1 932 20 view .LVU3182
 10256 1646 012B     		cmp	r3, #1
 10257 1648 00F03683 		beq	.L1151
 991:src/keys.c    **** 		return STATE_UNFINISHED;
 10258              		.loc 1 991 2 is_stmt 1 view .LVU3183
 991:src/keys.c    **** 		return STATE_UNFINISHED;
 10259              		.loc 1 991 5 is_stmt 0 view .LVU3184
 10260 164c BAF5704F 		cmp	r10, #61440
 10261 1650 EDD1     		bne	.L791
 10262 1652 FFF7B0B8 		b	.L1069
 10263              	.L776:
 963:src/keys.c    **** 			return STATE_UNFINISHED;
ARM GAS  /tmp/ccy15zOt.s 			page 289


 10264              		.loc 1 963 3 is_stmt 1 view .LVU3185
 963:src/keys.c    **** 			return STATE_UNFINISHED;
 10265              		.loc 1 963 7 is_stmt 0 view .LVU3186
 10266 1656 FFF7FEFF 		bl	is_bad_cmdline
 10267              	.LVL837:
 963:src/keys.c    **** 			return STATE_UNFINISHED;
 10268              		.loc 1 963 6 view .LVU3187
 10269 165a 0446     		mov	r4, r0
 10270              	.LVL838:
 963:src/keys.c    **** 			return STATE_UNFINISHED;
 10271              		.loc 1 963 6 view .LVU3188
 10272 165c 0028     		cmp	r0, #0
 10273 165e 7FF4AAA8 		bne	.L1069
 965:src/keys.c    **** 		State2.test = op;
 10274              		.loc 1 965 3 is_stmt 1 view .LVU3189
 10275 1662 FFF7FEFF 		bl	process_cmdline_set_lift
 10276              	.LVL839:
 966:src/keys.c    **** 		return STATE_UNFINISHED;
 10277              		.loc 1 966 3 view .LVU3190
 10278              	.LBE1032:
 10279              	.LBE1128:
 10280              	.LBE1210:
 10281              	.LBE1269:
2952:src/keys.c    ****   if (was_paused && Pause == 0) {
 10282              		.loc 1 2952 7 is_stmt 0 view .LVU3191
 10283 1666 2746     		mov	r7, r4
 10284              	.LBB1270:
 10285              	.LBB1211:
 10286              	.LBB1129:
 10287              	.LBB1033:
 966:src/keys.c    **** 		return STATE_UNFINISHED;
 10288              		.loc 1 966 15 view .LVU3192
 10289 1668 88F80FB0 		strb	fp, [r8, #15]
 967:src/keys.c    **** 
 10290              		.loc 1 967 3 is_stmt 1 view .LVU3193
 967:src/keys.c    **** 
 10291              		.loc 1 967 10 is_stmt 0 view .LVU3194
 10292 166c 4FF0330B 		mov	fp, #51
 10293              	.LVL840:
 967:src/keys.c    **** 
 10294              		.loc 1 967 10 view .LVU3195
 10295 1670 FEF71ABD 		b	.L565
 10296              	.LVL841:
 10297              	.L777:
 971:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10298              		.loc 1 971 3 is_stmt 1 view .LVU3196
 10299 1674 0093     		str	r3, [sp]
 971:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10300              		.loc 1 971 18 is_stmt 0 view .LVU3197
 10301 1676 FFF7FEFF 		bl	shift_down
 10302              	.LVL842:
 971:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10303              		.loc 1 971 6 view .LVU3198
 10304 167a 009B     		ldr	r3, [sp]
 10305 167c 0028     		cmp	r0, #0
 10306 167e 40F00B83 		bne	.L1152
 10307              	.L774:
ARM GAS  /tmp/ccy15zOt.s 			page 290


 980:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 10308              		.loc 1 980 3 is_stmt 1 view .LVU3199
 980:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 10309              		.loc 1 980 6 is_stmt 0 view .LVU3200
 10310 1682 BBF59C7F 		cmp	fp, #312
 10311 1686 40F0E882 		bne	.L1153
 991:src/keys.c    **** 		return STATE_UNFINISHED;
 10312              		.loc 1 991 2 is_stmt 1 view .LVU3201
 991:src/keys.c    **** 		return STATE_UNFINISHED;
 10313              		.loc 1 991 5 is_stmt 0 view .LVU3202
 10314 168a BAF5704F 		cmp	r10, #61440
 10315 168e 7FF472AC 		bne	.L854
 991:src/keys.c    **** 		return STATE_UNFINISHED;
 10316              		.loc 1 991 13 view .LVU3203
 10317 1692 154B     		ldr	r3, .L1169+16
 10318 1694 1B68     		ldr	r3, [r3]
 10319 1696 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10320 169a DB07     		lsls	r3, r3, #31
 10321 169c 7FF56BAC 		bpl	.L854
 10322 16a0 FFF789B8 		b	.L1069
 10323              	.LVL843:
 10324              	.L778:
 952:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10325              		.loc 1 952 4 is_stmt 1 view .LVU3204
 952:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10326              		.loc 1 952 7 is_stmt 0 view .LVU3205
 10327 16a4 022B     		cmp	r3, #2
 10328 16a6 B8D1     		bne	.L785
 952:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10329              		.loc 1 952 27 view .LVU3206
 10330 16a8 0F4B     		ldr	r3, .L1169+16
 10331              	.LVL844:
 952:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10332              		.loc 1 952 27 view .LVU3207
 10333 16aa 1B68     		ldr	r3, [r3]
 10334 16ac 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10335 16b0 DC07     		lsls	r4, r3, #31
 10336 16b2 B2D5     		bpl	.L785
 952:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10337              		.loc 1 952 45 view .LVU3208
 10338 16b4 0D20     		movs	r0, #13
 10339              	.LVL845:
 952:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10340              		.loc 1 952 45 view .LVU3209
 10341 16b6 FFF7FEFF 		bl	intltr
 10342              	.LVL846:
 952:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10343              		.loc 1 952 42 view .LVU3210
 10344 16ba 0028     		cmp	r0, #0
 10345 16bc ADD0     		beq	.L785
 10346              	.LVL847:
 952:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10347              		.loc 1 952 42 view .LVU3211
 10348              	.LBE1033:
 10349              	.LBE1129:
 10350              	.LBE1211:
 10351              	.LBE1270:
ARM GAS  /tmp/ccy15zOt.s 			page 291


3145:src/keys.c    **** 	NonProgrammable = 0;
 10352              		.loc 1 3145 7 is_stmt 1 view .LVU3212
3145:src/keys.c    **** 	NonProgrammable = 0;
 10353              		.loc 1 3145 11 is_stmt 0 view .LVU3213
 10354 16be 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3145:src/keys.c    **** 	NonProgrammable = 0;
 10355              		.loc 1 3145 10 view .LVU3214
 10356 16c2 5906     		lsls	r1, r3, #25
 10357 16c4 40F1F582 		bpl	.L886
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10358              		.loc 1 3146 2 is_stmt 1 view .LVU3215
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10359              		.loc 1 3146 18 is_stmt 0 view .LVU3216
 10360 16c8 084B     		ldr	r3, .L1169+20
 10361 16ca 0022     		movs	r2, #0
 10362              	.LBB1271:
 10363              	.LBB1212:
 10364              	.LBB1130:
 10365              	.LBB1034:
 953:src/keys.c    **** 	  }
 10366              		.loc 1 953 13 view .LVU3217
 10367 16cc 4FF0120B 		mov	fp, #18
 10368              	.LBE1034:
 10369              	.LBE1130:
 10370              	.LBE1212:
 10371              	.LBE1271:
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10372              		.loc 1 3146 18 view .LVU3218
 10373 16d0 1A60     		str	r2, [r3]
3147:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10374              		.loc 1 3147 2 is_stmt 1 view .LVU3219
3147:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10375              		.loc 1 3147 32 is_stmt 0 view .LVU3220
 10376 16d2 5846     		mov	r0, fp
 10377 16d4 FEF7D3BF 		b	.L837
 10378              	.L1170:
 10379              		.align	2
 10380              	.L1169:
 10381 16d8 00000000 		.word	.LANCHOR18
 10382 16dc 00000000 		.word	.LANCHOR17
 10383 16e0 00000000 		.word	.LANCHOR11
 10384 16e4 00000000 		.word	.LANCHOR1
 10385 16e8 00000000 		.word	main_ram
 10386 16ec 00000000 		.word	NonProgrammable
 10387 16f0 00000000 		.word	.LANCHOR9
 10388 16f4 00000000 		.word	.LANCHOR19
 10389              	.LVL848:
 10390              	.L783:
 10391              	.LBB1272:
 10392              	.LBB1213:
 10393              	.LBB1131:
 10394              	.LBB1035:
 913:src/keys.c    **** 	    State2.hyp = 1;
 10395              		.loc 1 913 4 is_stmt 1 view .LVU3221
 913:src/keys.c    **** 	    State2.hyp = 1;
 10396              		.loc 1 913 8 is_stmt 0 view .LVU3222
 10397 16f8 DC4A     		ldr	r2, .L1171
ARM GAS  /tmp/ccy15zOt.s 			page 292


 10398 16fa 1268     		ldr	r2, [r2]
 10399 16fc 92F8E827 		ldrb	r2, [r2, #2024]	@ zero_extendqisi2
 913:src/keys.c    **** 	    State2.hyp = 1;
 10400              		.loc 1 913 7 view .LVU3223
 10401 1700 D107     		lsls	r1, r2, #31
 10402 1702 A0D4     		bmi	.L1074
 914:src/keys.c    **** 	    State2.dot = op;
 10403              		.loc 1 914 6 is_stmt 1 view .LVU3224
 915:src/keys.c    **** 	    // State2.cmplx = 0;
 10404              		.loc 1 915 6 view .LVU3225
 914:src/keys.c    **** 	    State2.dot = op;
 10405              		.loc 1 914 17 is_stmt 0 view .LVU3226
 10406 1704 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 10407 1708 0BF00103 		and	r3, fp, #1
 10408              	.LVL849:
 914:src/keys.c    **** 	    State2.dot = op;
 10409              		.loc 1 914 17 view .LVU3227
 10410 170c 9B01     		lsls	r3, r3, #6
 10411 170e 43F02003 		orr	r3, r3, #32
 10412 1712 22F06002 		bic	r2, r2, #96
 10413 1716 1343     		orrs	r3, r3, r2
 10414 1718 88F81530 		strb	r3, [r8, #21]
 917:src/keys.c    **** 	  }
 10415              		.loc 1 917 6 is_stmt 1 view .LVU3228
 917:src/keys.c    **** 	  }
 10416              		.loc 1 917 13 is_stmt 0 view .LVU3229
 10417 171c 4FF0330B 		mov	fp, #51
 10418              	.LVL850:
 917:src/keys.c    **** 	  }
 10419              		.loc 1 917 13 view .LVU3230
 10420 1720 FEF7C2BC 		b	.L565
 10421              	.LVL851:
 10422              	.L779:
 957:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10423              		.loc 1 957 4 is_stmt 1 view .LVU3231
 957:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10424              		.loc 1 957 7 is_stmt 0 view .LVU3232
 10425 1724 022B     		cmp	r3, #2
 10426 1726 7FF478AF 		bne	.L785
 957:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10427              		.loc 1 957 27 view .LVU3233
 10428 172a D04B     		ldr	r3, .L1171
 10429              	.LVL852:
 957:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10430              		.loc 1 957 27 view .LVU3234
 10431 172c 1B68     		ldr	r3, [r3]
 10432 172e 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10433 1732 D807     		lsls	r0, r3, #31
 10434              	.LVL853:
 957:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10435              		.loc 1 957 27 view .LVU3235
 10436 1734 7FF571AF 		bpl	.L785
 957:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10437              		.loc 1 957 45 view .LVU3236
 10438 1738 0E20     		movs	r0, #14
 10439 173a FFF7FEFF 		bl	intltr
 10440              	.LVL854:
ARM GAS  /tmp/ccy15zOt.s 			page 293


 957:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10441              		.loc 1 957 42 view .LVU3237
 10442 173e 0028     		cmp	r0, #0
 10443 1740 3FF46BAF 		beq	.L785
 10444              	.LVL855:
 957:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10445              		.loc 1 957 42 view .LVU3238
 10446              	.LBE1035:
 10447              	.LBE1131:
 10448              	.LBE1213:
 10449              	.LBE1272:
3145:src/keys.c    **** 	NonProgrammable = 0;
 10450              		.loc 1 3145 7 is_stmt 1 view .LVU3239
3145:src/keys.c    **** 	NonProgrammable = 0;
 10451              		.loc 1 3145 11 is_stmt 0 view .LVU3240
 10452 1744 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3145:src/keys.c    **** 	NonProgrammable = 0;
 10453              		.loc 1 3145 10 view .LVU3241
 10454 1748 5A06     		lsls	r2, r3, #25
 10455 174a 40F1D682 		bpl	.L887
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10456              		.loc 1 3146 2 is_stmt 1 view .LVU3242
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10457              		.loc 1 3146 18 is_stmt 0 view .LVU3243
 10458 174e C84B     		ldr	r3, .L1171+4
 10459 1750 0022     		movs	r2, #0
 10460              	.LBB1273:
 10461              	.LBB1214:
 10462              	.LBB1132:
 10463              	.LBB1036:
 958:src/keys.c    **** 	  }
 10464              		.loc 1 958 13 view .LVU3244
 10465 1752 4FF0130B 		mov	fp, #19
 10466              	.LBE1036:
 10467              	.LBE1132:
 10468              	.LBE1214:
 10469              	.LBE1273:
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10470              		.loc 1 3146 18 view .LVU3245
 10471 1756 1A60     		str	r2, [r3]
3147:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10472              		.loc 1 3147 2 is_stmt 1 view .LVU3246
3147:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10473              		.loc 1 3147 32 is_stmt 0 view .LVU3247
 10474 1758 5846     		mov	r0, fp
 10475 175a FEF790BF 		b	.L837
 10476              	.LVL856:
 10477              	.L868:
 10478              	.LBB1274:
 10479              	.LBB1215:
 10480              	.LBB1133:
 10481              	.LBB653:
 10482              	.LBB646:
 301:src/keys.c    ****     }
 10483              		.loc 1 301 14 view .LVU3248
 10484 175e 4FF0160B 		mov	fp, #22
 10485 1762 FFF7C4BA 		b	.L656
ARM GAS  /tmp/ccy15zOt.s 			page 294


 10486              	.LVL857:
 10487              	.L1142:
 301:src/keys.c    ****     }
 10488              		.loc 1 301 14 view .LVU3249
 10489              	.LBE646:
 10490              	.LBE653:
 10491              	.LBE1133:
 10492              	.LBB1134:
 10493              	.LBB829:
 10494              	.LBB824:
2695:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10495              		.loc 1 2695 3 is_stmt 1 view .LVU3250
2695:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10496              		.loc 1 2695 19 is_stmt 0 view .LVU3251
 10497 1766 B8F80810 		ldrh	r1, [r8, #8]
2695:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10498              		.loc 1 2695 27 view .LVU3252
 10499 176a 0A23     		movs	r3, #10
2695:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10500              		.loc 1 2695 32 view .LVU3253
 10501 176c 03FB01A2 		mla	r2, r3, r1, r10
2695:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10502              		.loc 1 2695 37 view .LVU3254
 10503 1770 6424     		movs	r4, #100
 10504 1772 B2FBF4F3 		udiv	r3, r2, r4
 10505 1776 04FB1323 		mls	r3, r4, r3, r2
 10506              	.LVL858:
2696:src/keys.c    **** 			dv = n;
 10507              		.loc 1 2696 3 is_stmt 1 view .LVU3255
2696:src/keys.c    **** 			dv = n;
 10508              		.loc 1 2696 6 is_stmt 0 view .LVU3256
 10509 177a 4B45     		cmp	r3, r9
 10510 177c 09DA     		bge	.L717
2696:src/keys.c    **** 			dv = n;
 10511              		.loc 1 2696 21 view .LVU3257
 10512 177e 98F81620 		ldrb	r2, [r8, #22]	@ zero_extendqisi2
2696:src/keys.c    **** 			dv = n;
 10513              		.loc 1 2696 17 view .LVU3258
 10514 1782 D407     		lsls	r4, r2, #31
 10515 1784 3FF50FA8 		bmi	.L1061
2696:src/keys.c    **** 			dv = n;
 10516              		.loc 1 2696 36 view .LVU3259
 10517 1788 8842     		cmp	r0, r1
 10518 178a 02DD     		ble	.L717
2696:src/keys.c    **** 			dv = n;
 10519              		.loc 1 2696 63 view .LVU3260
 10520 178c 9842     		cmp	r0, r3
 10521 178e 3FF70AA8 		bgt	.L1061
 10522              	.L717:
2697:src/keys.c    **** 		State2.digval = dv;
 10523              		.loc 1 2697 4 is_stmt 1 view .LVU3261
2697:src/keys.c    **** 		State2.digval = dv;
 10524              		.loc 1 2697 7 is_stmt 0 view .LVU3262
 10525 1792 5346     		mov	r3, r10
 10526              	.LVL859:
2698:src/keys.c    **** 		goto reset_window;
 10527              		.loc 1 2698 3 is_stmt 1 view .LVU3263
ARM GAS  /tmp/ccy15zOt.s 			page 295


 10528 1794 FFF707B8 		b	.L1061
 10529              	.LVL860:
 10530              	.L1144:
2698:src/keys.c    **** 		goto reset_window;
 10531              		.loc 1 2698 3 is_stmt 0 view .LVU3264
 10532              	.LBE824:
2706:src/keys.c    **** 		goto reset_window;
 10533              		.loc 1 2706 3 is_stmt 1 view .LVU3265
2706:src/keys.c    **** 		goto reset_window;
 10534              		.loc 1 2706 17 is_stmt 0 view .LVU3266
 10535 1798 A8F808A0 		strh	r10, [r8, #8]	@ movhi
2707:src/keys.c    **** 	}
 10536              		.loc 1 2707 3 is_stmt 1 view .LVU3267
 10537 179c FFF705B8 		b	.L715
 10538              	.LVL861:
 10539              	.L1138:
2707:src/keys.c    **** 	}
 10540              		.loc 1 2707 3 is_stmt 0 view .LVU3268
 10541              	.LBE829:
 10542              	.LBE1134:
 10543              	.LBB1135:
 10544              	.LBB1001:
2556:src/keys.c    **** 	const int direct = State2.runmode;
 10545              		.loc 1 2556 37 view .LVU3269
 10546 17a0 5046     		mov	r0, r10
 10547 17a2 FFF7FEFF 		bl	getprog
 10548              	.LVL862:
2556:src/keys.c    **** 	const int direct = State2.runmode;
 10549              		.loc 1 2556 63 view .LVU3270
 10550 17a6 20F47062 		bic	r2, r0, #3840
 10551 17aa FFF767BB 		b	.L686
 10552              	.LVL863:
 10553              	.L1130:
2556:src/keys.c    **** 	const int direct = State2.runmode;
 10554              		.loc 1 2556 63 view .LVU3271
 10555              	.LBE1001:
 10556              	.LBE1135:
 10557              	.LBB1136:
 10558              	.LBB891:
1361:src/keys.c    **** 		if (rawpc == 1)
 10559              		.loc 1 1361 3 is_stmt 1 view .LVU3272
1361:src/keys.c    **** 		if (rawpc == 1)
 10560              		.loc 1 1361 11 is_stmt 0 view .LVU3273
 10561 17ae DFF8BC92 		ldr	r9, .L1171
 10562 17b2 D9F80030 		ldr	r3, [r9]
 10563              	.LVL864:
1361:src/keys.c    **** 		if (rawpc == 1)
 10564              		.loc 1 1361 9 view .LVU3274
 10565 17b6 B3F8E007 		ldrh	r0, [r3, #2016]
 10566              	.LVL865:
1362:src/keys.c    **** 			rawpc = 0;
 10567              		.loc 1 1362 3 is_stmt 1 view .LVU3275
1363:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
 10568              		.loc 1 1363 10 is_stmt 0 view .LVU3276
 10569 17ba 0128     		cmp	r0, #1
 10570              	.LVL866:
1364:src/keys.c    **** 		update_program_bounds(1);
ARM GAS  /tmp/ccy15zOt.s 			page 296


 10571              		.loc 1 1364 3 is_stmt 1 view .LVU3277
 10572 17bc 08BF     		it	eq
 10573 17be 0020     		moveq	r0, #0
 10574              	.LVL867:
1364:src/keys.c    **** 		update_program_bounds(1);
 10575              		.loc 1 1364 3 is_stmt 0 view .LVU3278
 10576 17c0 0021     		movs	r1, #0
 10577 17c2 FFF7FEFF 		bl	do_dec
 10578              	.LVL868:
1364:src/keys.c    **** 		update_program_bounds(1);
 10579              		.loc 1 1364 3 view .LVU3279
 10580 17c6 FFF7FEFF 		bl	set_pc
 10581              	.LVL869:
1365:src/keys.c    **** 		rawpc = ProgBegin;
 10582              		.loc 1 1365 3 is_stmt 1 view .LVU3280
 10583 17ca 0120     		movs	r0, #1
 10584 17cc FFF7FEFF 		bl	update_program_bounds
 10585              	.LVL870:
1366:src/keys.c    **** 		goto fin;
 10586              		.loc 1 1366 3 view .LVU3281
1366:src/keys.c    **** 		goto fin;
 10587              		.loc 1 1366 11 is_stmt 0 view .LVU3282
 10588 17d0 D9F80030 		ldr	r3, [r9]
1366:src/keys.c    **** 		goto fin;
 10589              		.loc 1 1366 9 view .LVU3283
 10590 17d4 B3F8EC07 		ldrh	r0, [r3, #2028]
 10591              	.LVL871:
1367:src/keys.c    **** 	}
 10592              		.loc 1 1367 3 is_stmt 1 view .LVU3284
 10593 17d8 FFF7A0B9 		b	.L607
 10594              	.LVL872:
 10595              	.L793:
1367:src/keys.c    **** 	}
 10596              		.loc 1 1367 3 is_stmt 0 view .LVU3285
 10597              	.LBE891:
 10598              	.LBE1136:
 10599              	.LBB1137:
 10600              	.LBB1083:
1062:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 10601              		.loc 1 1062 3 is_stmt 1 view .LVU3286
1062:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 10602              		.loc 1 1062 7 is_stmt 0 view .LVU3287
 10603 17dc A34B     		ldr	r3, .L1171
 10604 17de 1B68     		ldr	r3, [r3]
 10605 17e0 93F8E827 		ldrb	r2, [r3, #2024]	@ zero_extendqisi2
1062:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 10606              		.loc 1 1062 6 view .LVU3288
 10607 17e4 D407     		lsls	r4, r2, #31
 10608 17e6 40F1ED80 		bpl	.L796
1063:src/keys.c    **** 		else
 10609              		.loc 1 1063 4 is_stmt 1 view .LVU3289
1063:src/keys.c    **** 		else
 10610              		.loc 1 1063 57 is_stmt 0 view .LVU3290
 10611 17ea 93F9E737 		ldrsb	r3, [r3, #2023]
 10612 17ee 002B     		cmp	r3, #0
 10613 17f0 40F2531B 		movw	fp, #339
 10614 17f4 A8BF     		it	ge
ARM GAS  /tmp/ccy15zOt.s 			page 297


 10615 17f6 4FF4AA7B 		movge	fp, #340
 10616 17fa DBE5     		b	.L798
 10617              	.LVL873:
 10618              	.L674:
1063:src/keys.c    **** 		else
 10619              		.loc 1 1063 57 view .LVU3291
 10620              	.LBE1083:
 10621              	.LBE1137:
 10622              	.LBB1138:
 10623              	.LBB727:
2394:src/keys.c    **** 			if (State2.numdigit == 0)
 10624              		.loc 1 2394 3 is_stmt 1 view .LVU3292
2394:src/keys.c    **** 			if (State2.numdigit == 0)
 10625              		.loc 1 2394 6 is_stmt 0 view .LVU3293
 10626 17fc 0329     		cmp	r1, #3
 10627 17fe 3EF493AE 		beq	.L679
2395:src/keys.c    **** 				reset_multi();
 10628              		.loc 1 2395 4 is_stmt 1 view .LVU3294
2395:src/keys.c    **** 				reset_multi();
 10629              		.loc 1 2395 14 is_stmt 0 view .LVU3295
 10630 1802 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
2395:src/keys.c    **** 				reset_multi();
 10631              		.loc 1 2395 7 view .LVU3296
 10632 1806 83B3     		cbz	r3, .L681
2398:src/keys.c    **** 			return STATE_UNFINISHED;
 10633              		.loc 1 2398 5 is_stmt 1 view .LVU3297
2398:src/keys.c    **** 			return STATE_UNFINISHED;
 10634              		.loc 1 2398 20 is_stmt 0 view .LVU3298
 10635 1808 013B     		subs	r3, r3, #1
 10636 180a 88F80B30 		strb	r3, [r8, #11]
2399:src/keys.c    **** 		}
 10637              		.loc 1 2399 11 view .LVU3299
 10638 180e 4FF0330B 		mov	fp, #51
 10639 1812 FEF749BC 		b	.L565
 10640              	.L1115:
2384:src/keys.c    **** 				break;
 10641              		.loc 1 2384 3 is_stmt 1 view .LVU3300
2384:src/keys.c    **** 				break;
 10642              		.loc 1 2384 6 is_stmt 0 view .LVU3301
 10643 1816 0029     		cmp	r1, #0
 10644 1818 7EF47EAE 		bne	.L676
2386:src/keys.c    **** 		if (State2.numdigit == 0)
 10645              		.loc 1 2386 3 is_stmt 1 view .LVU3302
 10646              	.LBB718:
 10647              	.LBI718:
2361:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 10648              		.loc 1 2361 13 view .LVU3303
 10649              	.LBB719:
2363:src/keys.c    **** 	if (! State2.alphas )
 10650              		.loc 1 2363 2 view .LVU3304
2364:src/keys.c    **** 		State2.alphashift = 0;
 10651              		.loc 1 2364 6 is_stmt 0 view .LVU3305
 10652 181c 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2363:src/keys.c    **** 	if (! State2.alphas )
 10653              		.loc 1 2363 15 view .LVU3306
 10654 1820 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2364:src/keys.c    **** 		State2.alphashift = 0;
ARM GAS  /tmp/ccy15zOt.s 			page 298


 10655              		.loc 1 2364 5 view .LVU3307
 10656 1824 1807     		lsls	r0, r3, #28
2365:src/keys.c    **** }
 10657              		.loc 1 2365 21 view .LVU3308
 10658 1826 5CBF     		itt	pl
 10659 1828 61F30413 		bfipl	r3, r1, #4, #1
 10660 182c 88F81630 		strbpl	r3, [r8, #22]
 10661              	.LBE719:
 10662              	.LBE718:
2387:src/keys.c    **** 			return STATE_UNFINISHED;
 10663              		.loc 1 2387 13 view .LVU3309
 10664 1830 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 10665              	.LBB721:
 10666              	.LBB720:
2363:src/keys.c    **** 	if (! State2.alphas )
 10667              		.loc 1 2363 15 view .LVU3310
 10668 1834 61F3C302 		bfi	r2, r1, #3, #1
 10669 1838 88F81520 		strb	r2, [r8, #21]
2364:src/keys.c    **** 		State2.alphashift = 0;
 10670              		.loc 1 2364 2 is_stmt 1 view .LVU3311
2365:src/keys.c    **** }
 10671              		.loc 1 2365 3 view .LVU3312
 10672              	.LBE720:
 10673              	.LBE721:
2387:src/keys.c    **** 			return STATE_UNFINISHED;
 10674              		.loc 1 2387 3 view .LVU3313
2387:src/keys.c    **** 			return STATE_UNFINISHED;
 10675              		.loc 1 2387 6 is_stmt 0 view .LVU3314
 10676 183c 002B     		cmp	r3, #0
 10677 183e 3EF4BAAF 		beq	.L1069
2389:src/keys.c    **** 			State2.digval2 = 0;
 10678              		.loc 1 2389 8 is_stmt 1 view .LVU3315
2389:src/keys.c    **** 			State2.digval2 = 0;
 10679              		.loc 1 2389 11 is_stmt 0 view .LVU3316
 10680 1842 012B     		cmp	r3, #1
2390:src/keys.c    **** 		goto fin;
 10681              		.loc 1 2390 19 view .LVU3317
 10682 1844 4FF00003 		mov	r3, #0
2389:src/keys.c    **** 			State2.digval2 = 0;
 10683              		.loc 1 2389 11 view .LVU3318
 10684 1848 7EF48FAE 		bne	.L678
2390:src/keys.c    **** 		goto fin;
 10685              		.loc 1 2390 4 is_stmt 1 view .LVU3319
2390:src/keys.c    **** 		goto fin;
 10686              		.loc 1 2390 19 is_stmt 0 view .LVU3320
 10687 184c 88F80A30 		strb	r3, [r8, #10]
 10688 1850 FEF78BBE 		b	.L678
 10689              	.LVL874:
 10690              	.L1117:
2420:src/keys.c    **** 		State2.numdigit = 1;
 10691              		.loc 1 2420 3 is_stmt 1 view .LVU3321
2421:src/keys.c    **** 		return STATE_UNFINISHED;
 10692              		.loc 1 2421 19 is_stmt 0 view .LVU3322
 10693 1854 0122     		movs	r2, #1
2420:src/keys.c    **** 		State2.numdigit = 1;
 10694              		.loc 1 2420 17 view .LVU3323
 10695 1856 A8F80830 		strh	r3, [r8, #8]	@ movhi
ARM GAS  /tmp/ccy15zOt.s 			page 299


2421:src/keys.c    **** 		return STATE_UNFINISHED;
 10696              		.loc 1 2421 3 is_stmt 1 view .LVU3324
2421:src/keys.c    **** 		return STATE_UNFINISHED;
 10697              		.loc 1 2421 19 is_stmt 0 view .LVU3325
 10698 185a 88F80B20 		strb	r2, [r8, #11]
2422:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 10699              		.loc 1 2422 3 is_stmt 1 view .LVU3326
2422:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 10700              		.loc 1 2422 10 is_stmt 0 view .LVU3327
 10701 185e 4FF0330B 		mov	fp, #51
 10702 1862 FEF721BC 		b	.L565
 10703              	.LVL875:
 10704              	.L675:
2404:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 10705              		.loc 1 2404 3 is_stmt 1 view .LVU3328
2404:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 10706              		.loc 1 2404 6 is_stmt 0 view .LVU3329
 10707 1866 0129     		cmp	r1, #1
 10708 1868 1AD0     		beq	.L1071
 10709              	.L681:
2396:src/keys.c    **** 			else
 10710              		.loc 1 2396 5 is_stmt 1 view .LVU3330
 10711              	.LBB722:
 10712              	.LBI722:
2361:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 10713              		.loc 1 2361 13 view .LVU3331
 10714              	.LBB723:
2363:src/keys.c    **** 	if (! State2.alphas )
 10715              		.loc 1 2363 2 view .LVU3332
2363:src/keys.c    **** 	if (! State2.alphas )
 10716              		.loc 1 2363 15 is_stmt 0 view .LVU3333
 10717 186a 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
2364:src/keys.c    **** 		State2.alphashift = 0;
 10718              		.loc 1 2364 6 view .LVU3334
 10719 186e 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2363:src/keys.c    **** 	if (! State2.alphas )
 10720              		.loc 1 2363 15 view .LVU3335
 10721 1872 6FF3C302 		bfc	r2, #3, #1
 10722 1876 88F81520 		strb	r2, [r8, #21]
2364:src/keys.c    **** 		State2.alphashift = 0;
 10723              		.loc 1 2364 2 is_stmt 1 view .LVU3336
2364:src/keys.c    **** 		State2.alphashift = 0;
 10724              		.loc 1 2364 5 is_stmt 0 view .LVU3337
 10725 187a 13F00802 		ands	r2, r3, #8
 10726 187e 7EF49AAF 		bne	.L1069
 10727              	.LVL876:
 10728              	.L1067:
2364:src/keys.c    **** 		State2.alphashift = 0;
 10729              		.loc 1 2364 5 view .LVU3338
 10730              	.LBE723:
 10731              	.LBE722:
2405:src/keys.c    **** 		else
 10732              		.loc 1 2405 22 view .LVU3339
 10733 1882 62F30413 		bfi	r3, r2, #4, #1
 10734 1886 88F81630 		strb	r3, [r8, #22]
 10735 188a FEF794BF 		b	.L1069
 10736              	.LVL877:
ARM GAS  /tmp/ccy15zOt.s 			page 300


 10737              	.L1118:
2424:src/keys.c    **** 		State2.numdigit = 2;
 10738              		.loc 1 2424 3 is_stmt 1 view .LVU3340
2425:src/keys.c    **** 		return STATE_UNFINISHED;
 10739              		.loc 1 2425 19 is_stmt 0 view .LVU3341
 10740 188e 0222     		movs	r2, #2
2424:src/keys.c    **** 		State2.numdigit = 2;
 10741              		.loc 1 2424 18 view .LVU3342
 10742 1890 88F80A30 		strb	r3, [r8, #10]
2425:src/keys.c    **** 		return STATE_UNFINISHED;
 10743              		.loc 1 2425 3 is_stmt 1 view .LVU3343
2425:src/keys.c    **** 		return STATE_UNFINISHED;
 10744              		.loc 1 2425 19 is_stmt 0 view .LVU3344
 10745 1894 88F80B20 		strb	r2, [r8, #11]
2426:src/keys.c    **** 	}
 10746              		.loc 1 2426 3 is_stmt 1 view .LVU3345
2426:src/keys.c    **** 	}
 10747              		.loc 1 2426 10 is_stmt 0 view .LVU3346
 10748 1898 4FF0330B 		mov	fp, #51
 10749 189c FEF704BC 		b	.L565
 10750              	.LVL878:
 10751              	.L1071:
2405:src/keys.c    **** 		else
 10752              		.loc 1 2405 4 is_stmt 1 view .LVU3347
2405:src/keys.c    **** 		else
 10753              		.loc 1 2405 34 is_stmt 0 view .LVU3348
 10754 18a0 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 10755 18a4 C3F30012 		ubfx	r2, r3, #4, #1
2405:src/keys.c    **** 		else
 10756              		.loc 1 2405 26 view .LVU3349
 10757 18a8 C2F10102 		rsb	r2, r2, #1
 10758 18ac E9E7     		b	.L1067
 10759              	.LVL879:
 10760              	.L1149:
2405:src/keys.c    **** 		else
 10761              		.loc 1 2405 26 view .LVU3350
 10762              	.LBE727:
 10763              	.LBE1138:
 10764              	.LBB1139:
 10765              	.LBB1037:
 909:src/keys.c    **** 
 10766              		.loc 1 909 3 is_stmt 1 view .LVU3351
 909:src/keys.c    **** 
 10767              		.loc 1 909 6 is_stmt 0 view .LVU3352
 10768 18ae 2BF4704B 		bic	fp, fp, #61440
 10769              	.LVL880:
 911:src/keys.c    **** 	case K00:
 10770              		.loc 1 911 2 is_stmt 1 view .LVU3353
 10771 18b2 282C     		cmp	r4, #40
 10772 18b4 3FF6B4AE 		bhi	.L773
 10773 18b8 01A2     		adr	r2, .L775
 10774 18ba 52F824F0 		ldr	pc, [r2, r4, lsl #2]
 10775 18be 00BF     		.p2align 2
 10776              	.L775:
 10777 18c0 F9160000 		.word	.L783+1
 10778 18c4 3B160000 		.word	.L781+1
 10779 18c8 21160000 		.word	.L773+1
ARM GAS  /tmp/ccy15zOt.s 			page 301


 10780 18cc 3B160000 		.word	.L781+1
 10781 18d0 21160000 		.word	.L773+1
 10782 18d4 21160000 		.word	.L773+1
 10783 18d8 21160000 		.word	.L773+1
 10784 18dc 21160000 		.word	.L773+1
 10785 18e0 21160000 		.word	.L773+1
 10786 18e4 21160000 		.word	.L773+1
 10787 18e8 21160000 		.word	.L773+1
 10788 18ec 21160000 		.word	.L773+1
 10789 18f0 15160000 		.word	.L780+1
 10790 18f4 21160000 		.word	.L773+1
 10791 18f8 21160000 		.word	.L773+1
 10792 18fc 21160000 		.word	.L773+1
 10793 1900 21160000 		.word	.L773+1
 10794 1904 21160000 		.word	.L773+1
 10795 1908 25170000 		.word	.L779+1
 10796 190c A5160000 		.word	.L778+1
 10797 1910 21160000 		.word	.L773+1
 10798 1914 21160000 		.word	.L773+1
 10799 1918 21160000 		.word	.L773+1
 10800 191c 21160000 		.word	.L773+1
 10801 1920 21160000 		.word	.L773+1
 10802 1924 21160000 		.word	.L773+1
 10803 1928 21160000 		.word	.L773+1
 10804 192c 21160000 		.word	.L773+1
 10805 1930 21160000 		.word	.L773+1
 10806 1934 21160000 		.word	.L773+1
 10807 1938 75160000 		.word	.L777+1
 10808 193c 57160000 		.word	.L776+1
 10809 1940 83160000 		.word	.L774+1
 10810 1944 83160000 		.word	.L774+1
 10811 1948 21160000 		.word	.L773+1
 10812 194c 21160000 		.word	.L773+1
 10813 1950 21160000 		.word	.L773+1
 10814 1954 21160000 		.word	.L773+1
 10815 1958 21160000 		.word	.L773+1
 10816 195c 83160000 		.word	.L774+1
 10817 1960 83160000 		.word	.L774+1
 10818              	.LVL881:
 10819              		.p2align 1
 10820              	.L1141:
 911:src/keys.c    **** 	case K00:
 10821              		.loc 1 911 2 is_stmt 0 view .LVU3354
 10822              	.LBE1037:
 10823              	.LBE1139:
 10824              	.LBB1140:
 10825              	.LBB830:
2689:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 10826              		.loc 1 2689 3 is_stmt 1 view .LVU3355
2689:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 10827              		.loc 1 2689 7 is_stmt 0 view .LVU3356
 10828 1964 FFF7FEFF 		bl	local_regs
 10829              	.LVL882:
2689:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 10830              		.loc 1 2689 6 view .LVU3357
 10831 1968 68B1     		cbz	r0, .L713
2690:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
ARM GAS  /tmp/ccy15zOt.s 			page 302


 10832              		.loc 1 2690 4 is_stmt 1 view .LVU3358
2690:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 10833              		.loc 1 2690 19 is_stmt 0 view .LVU3359
 10834 196a 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2690:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 10835              		.loc 1 2690 34 view .LVU3360
 10836 196e 98F80A20 		ldrb	r2, [r8, #10]	@ zero_extendqisi2
2690:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 10837              		.loc 1 2690 19 view .LVU3361
 10838 1972 03F00101 		and	r1, r3, #1
2690:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 10839              		.loc 1 2690 34 view .LVU3362
 10840 1976 0A43     		orrs	r2, r1, r2
 10841 1978 0CBF     		ite	eq
 10842 197a 0122     		moveq	r2, #1
 10843 197c 0022     		movne	r2, #0
2690:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 10844              		.loc 1 2690 17 view .LVU3363
 10845 197e 62F30003 		bfi	r3, r2, #0, #1
 10846 1982 88F81630 		strb	r3, [r8, #22]
 10847              	.L713:
2691:src/keys.c    **** 		goto reset_window;
 10848              		.loc 1 2691 3 is_stmt 1 view .LVU3364
2691:src/keys.c    **** 		goto reset_window;
 10849              		.loc 1 2691 32 is_stmt 0 view .LVU3365
 10850 1986 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
2691:src/keys.c    **** 		goto reset_window;
 10851              		.loc 1 2691 17 view .LVU3366
 10852 198a 13F0010F 		tst	r3, #1
 10853 198e 14BF     		ite	ne
 10854 1990 0023     		movne	r3, #0
 10855 1992 6423     		moveq	r3, #100
 10856 1994 A8F80830 		strh	r3, [r8, #8]	@ movhi
2692:src/keys.c    **** 	}
 10857              		.loc 1 2692 3 is_stmt 1 view .LVU3367
 10858 1998 FEF707BF 		b	.L715
 10859              	.LVL883:
 10860              	.L662:
2692:src/keys.c    **** 	}
 10861              		.loc 1 2692 3 is_stmt 0 view .LVU3368
 10862 199c 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 10863              	.LBE830:
 10864              	.LBE1140:
 10865              	.LBB1141:
 10866              	.LBB654:
 10867              	.LBB647:
 322:src/keys.c    **** #ifndef WINGUI
 10868              		.loc 1 322 8 view .LVU3369
 10869 19a0 344B     		ldr	r3, .L1171+8
 328:src/keys.c    ****   }
 10870              		.loc 1 328 9 view .LVU3370
 10871 19a2 0C21     		movs	r1, #12
 324:src/keys.c    **** #else
 10872              		.loc 1 324 73 view .LVU3371
 10873 19a4 4FF0020C 		mov	ip, #2
 10874 19a8 FEF778BC 		b	.L661
 10875              	.LVL884:
ARM GAS  /tmp/ccy15zOt.s 			page 303


 10876              	.L1147:
 324:src/keys.c    **** #else
 10877              		.loc 1 324 73 view .LVU3372
 10878              	.LBE647:
 10879              	.LBE654:
 10880              	.LBE1141:
 10881              	.LBB1142:
 10882              	.LBB1084:
1092:src/keys.c    **** #undef _RARG
 10883              		.loc 1 1092 2 is_stmt 1 view .LVU3373
1092:src/keys.c    **** #undef _RARG
 10884              		.loc 1 1092 9 is_stmt 0 view .LVU3374
 10885 19ac 2F4B     		ldr	r3, .L1171
 10886 19ae 1B68     		ldr	r3, [r3]
 10887 19b0 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1092:src/keys.c    **** #undef _RARG
 10888              		.loc 1 1092 57 view .LVU3375
 10889 19b4 D907     		lsls	r1, r3, #31
 10890 19b6 7FF5FDAC 		bpl	.L798
 10891              	.LVL885:
1092:src/keys.c    **** #undef _RARG
 10892              		.loc 1 1092 21 view .LVU3376
 10893 19ba 1AF4804F 		tst	r10, #16384
 10894 19be 7EF4FAAE 		bne	.L1069
 10895 19c2 F7E4     		b	.L798
 10896              	.LVL886:
 10897              	.L796:
1068:src/keys.c    **** #endif
 10898              		.loc 1 1068 4 is_stmt 1 view .LVU3377
1068:src/keys.c    **** #endif
 10899              		.loc 1 1068 8 is_stmt 0 view .LVU3378
 10900 19c4 93F8E737 		ldrb	r3, [r3, #2023]	@ zero_extendqisi2
1068:src/keys.c    **** #endif
 10901              		.loc 1 1068 7 view .LVU3379
 10902 19c8 9806     		lsls	r0, r3, #26
 10903 19ca 7FF5E2AC 		bpl	.L795
1068:src/keys.c    **** #endif
 10904              		.loc 1 1068 29 view .LVU3380
 10905 19ce 40F24F1B 		movw	fp, #335
 10906 19d2 EFE4     		b	.L798
 10907              	.LVL887:
 10908              	.L1139:
1068:src/keys.c    **** #endif
 10909              		.loc 1 1068 29 view .LVU3381
 10910              	.LBE1084:
 10911              	.LBE1142:
 10912              	.LBB1143:
 10913              	.LBB1002:
2563:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 10914              		.loc 1 2563 3 is_stmt 1 view .LVU3382
2563:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 10915              		.loc 1 2563 8 is_stmt 0 view .LVU3383
 10916 19d4 4FEA8B34 		lsl	r4, fp, #14
2563:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 10917              		.loc 1 2563 6 view .LVU3384
 10918 19d8 44F00104 		orr	r4, r4, #1
 10919              	.LVL888:
ARM GAS  /tmp/ccy15zOt.s 			page 304


2564:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 10920              		.loc 1 2564 3 is_stmt 1 view .LVU3385
2564:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 10921              		.loc 1 2564 9 is_stmt 0 view .LVU3386
 10922 19dc 2046     		mov	r0, r4
 10923 19de FFF7FEFF 		bl	is_label_or_end_at
 10924              	.LVL889:
2564:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 10925              		.loc 1 2564 6 view .LVU3387
 10926 19e2 0246     		mov	r2, r0
 10927 19e4 0028     		cmp	r0, #0
 10928 19e6 00F05181 		beq	.L1154
 10929              	.L689:
2566:src/keys.c    **** 		return STATE_UNFINISHED;
 10930              		.loc 1 2566 3 is_stmt 1 view .LVU3388
2566:src/keys.c    **** 		return STATE_UNFINISHED;
 10931              		.loc 1 2566 17 is_stmt 0 view .LVU3389
 10932 19ea A8F80840 		strh	r4, [r8, #8]	@ movhi
2567:src/keys.c    **** 	}
 10933              		.loc 1 2567 3 is_stmt 1 view .LVU3390
2567:src/keys.c    **** 	}
 10934              		.loc 1 2567 10 is_stmt 0 view .LVU3391
 10935 19ee 4FF0330B 		mov	fp, #51
 10936              	.LVL890:
2567:src/keys.c    **** 	}
 10937              		.loc 1 2567 10 view .LVU3392
 10938 19f2 FEF759BB 		b	.L565
 10939              	.LVL891:
 10940              	.L1148:
2567:src/keys.c    **** 	}
 10941              		.loc 1 2567 10 view .LVU3393
 10942              	.LBE1002:
 10943              	.LBE1143:
 10944              	.LBB1144:
 10945              	.LBB1114:
1167:src/keys.c    **** 		State2.hyp = 1;
 10946              		.loc 1 1167 3 is_stmt 1 view .LVU3394
 10947 19f6 FFF7FEFF 		bl	process_cmdline_set_lift
 10948              	.LVL892:
1168:src/keys.c    **** 		State2.dot = op;
 10949              		.loc 1 1168 3 view .LVU3395
1169:src/keys.c    **** 		State2.cmplx = 1;
 10950              		.loc 1 1169 3 view .LVU3396
1170:src/keys.c    **** 		return STATE_UNFINISHED;
 10951              		.loc 1 1170 3 view .LVU3397
1170:src/keys.c    **** 		return STATE_UNFINISHED;
 10952              		.loc 1 1170 16 is_stmt 0 view .LVU3398
 10953 19fa 98F81520 		ldrb	r2, [r8, #21]	@ zero_extendqisi2
 10954 19fe 0BF00103 		and	r3, fp, #1
 10955 1a02 9B01     		lsls	r3, r3, #6
 10956 1a04 43F02203 		orr	r3, r3, #34
 10957 1a08 22F06202 		bic	r2, r2, #98
 10958 1a0c 1343     		orrs	r3, r3, r2
 10959 1a0e 88F81530 		strb	r3, [r8, #21]
1171:src/keys.c    **** 	}
 10960              		.loc 1 1171 3 is_stmt 1 view .LVU3399
1171:src/keys.c    **** 	}
ARM GAS  /tmp/ccy15zOt.s 			page 305


 10961              		.loc 1 1171 10 is_stmt 0 view .LVU3400
 10962 1a12 4FF0330B 		mov	fp, #51
 10963              	.LVL893:
1171:src/keys.c    **** 	}
 10964              		.loc 1 1171 10 view .LVU3401
 10965 1a16 FEF747BB 		b	.L565
 10966              	.LVL894:
 10967              	.L821:
1171:src/keys.c    **** 	}
 10968              		.loc 1 1171 10 view .LVU3402
 10969              	.LBE1114:
 10970              	.LBE1144:
 10971              	.LBB1145:
 10972              	.LBB674:
 769:src/keys.c    **** 	case K03:
 10973              		.loc 1 769 3 is_stmt 1 view .LVU3403
 769:src/keys.c    **** 	case K03:
 10974              		.loc 1 769 10 is_stmt 0 view .LVU3404
 10975 1a1a 5146     		mov	r1, r10
 10976 1a1c 0120     		movs	r0, #1
 10977 1a1e FFF7FEFF 		bl	check_f_key
 10978              	.LVL895:
 10979 1a22 8346     		mov	fp, r0
 10980 1a24 FEF7B0BD 		b	.L594
 10981              	.L820:
 767:src/keys.c    **** 	case K01:
 10982              		.loc 1 767 3 is_stmt 1 view .LVU3405
 767:src/keys.c    **** 	case K01:
 10983              		.loc 1 767 10 is_stmt 0 view .LVU3406
 10984 1a28 5146     		mov	r1, r10
 10985 1a2a 0020     		movs	r0, #0
 10986 1a2c FFF7FEFF 		bl	check_f_key
 10987              	.LVL896:
 10988 1a30 8346     		mov	fp, r0
 10989 1a32 FEF7A9BD 		b	.L594
 10990              	.LVL897:
 10991              	.L811:
 767:src/keys.c    **** 	case K01:
 10992              		.loc 1 767 10 view .LVU3407
 10993              	.LBE674:
 10994              	.LBE1145:
 10995              	.LBE1215:
 10996              	.LBE1274:
3145:src/keys.c    **** 	NonProgrammable = 0;
 10997              		.loc 1 3145 7 is_stmt 1 view .LVU3408
3145:src/keys.c    **** 	NonProgrammable = 0;
 10998              		.loc 1 3145 11 is_stmt 0 view .LVU3409
 10999 1a36 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3145:src/keys.c    **** 	NonProgrammable = 0;
 11000              		.loc 1 3145 10 view .LVU3410
 11001 1a3a 5906     		lsls	r1, r3, #25
 11002 1a3c 40F1A780 		bpl	.L891
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11003              		.loc 1 3146 2 is_stmt 1 view .LVU3411
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11004              		.loc 1 3146 18 is_stmt 0 view .LVU3412
 11005 1a40 0B4B     		ldr	r3, .L1171+4
ARM GAS  /tmp/ccy15zOt.s 			page 306


 11006 1a42 0022     		movs	r2, #0
 11007              	.LBB1275:
 11008              	.LBB1216:
 11009              	.LBB1146:
 11010              	.LBB675:
 733:src/keys.c    **** 	    }
 11011              		.loc 1 733 15 view .LVU3413
 11012 1a44 4FF00F0B 		mov	fp, #15
 11013              	.LBE675:
 11014              	.LBE1146:
 11015              	.LBE1216:
 11016              	.LBE1275:
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11017              		.loc 1 3146 18 view .LVU3414
 11018 1a48 1A60     		str	r2, [r3]
3147:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11019              		.loc 1 3147 2 is_stmt 1 view .LVU3415
3147:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11020              		.loc 1 3147 32 is_stmt 0 view .LVU3416
 11021 1a4a 5846     		mov	r0, fp
 11022 1a4c FEF717BE 		b	.L837
 11023              	.LVL898:
 11024              	.L812:
3145:src/keys.c    **** 	NonProgrammable = 0;
 11025              		.loc 1 3145 7 is_stmt 1 view .LVU3417
3145:src/keys.c    **** 	NonProgrammable = 0;
 11026              		.loc 1 3145 11 is_stmt 0 view .LVU3418
 11027 1a50 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
3145:src/keys.c    **** 	NonProgrammable = 0;
 11028              		.loc 1 3145 10 view .LVU3419
 11029 1a54 5B06     		lsls	r3, r3, #25
 11030 1a56 40F1B280 		bpl	.L888
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11031              		.loc 1 3146 2 is_stmt 1 view .LVU3420
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11032              		.loc 1 3146 18 is_stmt 0 view .LVU3421
 11033 1a5a 054B     		ldr	r3, .L1171+4
 11034 1a5c 0022     		movs	r2, #0
 11035              	.LBB1276:
 11036              	.LBB1217:
 11037              	.LBB1147:
 11038              	.LBB676:
 741:src/keys.c    **** 	    }
 11039              		.loc 1 741 15 view .LVU3422
 11040 1a5e 4FF0100B 		mov	fp, #16
 11041              	.LBE676:
 11042              	.LBE1147:
 11043              	.LBE1217:
 11044              	.LBE1276:
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11045              		.loc 1 3146 18 view .LVU3423
 11046 1a62 1A60     		str	r2, [r3]
3147:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11047              		.loc 1 3147 2 is_stmt 1 view .LVU3424
3147:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11048              		.loc 1 3147 32 is_stmt 0 view .LVU3425
 11049 1a64 5846     		mov	r0, fp
ARM GAS  /tmp/ccy15zOt.s 			page 307


 11050 1a66 FEF70ABE 		b	.L837
 11051              	.L1172:
 11052 1a6a 00BF     		.align	2
 11053              	.L1171:
 11054 1a6c 00000000 		.word	main_ram
 11055 1a70 00000000 		.word	NonProgrammable
 11056 1a74 00000000 		.word	.LANCHOR11
 11057              	.LVL899:
 11058              	.L741:
 11059              	.LBB1277:
 11060              	.LBB1218:
 11061              	.LBB1148:
 11062              	.LBB786:
1486:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 11063              		.loc 1 1486 3 is_stmt 1 view .LVU3426
1486:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 11064              		.loc 1 1486 6 is_stmt 0 view .LVU3427
 11065 1a78 0128     		cmp	r0, #1
 11066 1a7a 7FF44FAC 		bne	.L740
 11067              	.LVL900:
1486:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 11068              		.loc 1 1486 6 view .LVU3428
 11069              	.LBE786:
 11070              	.LBE1148:
 11071              	.LBE1218:
 11072              	.LBE1277:
3145:src/keys.c    **** 	NonProgrammable = 0;
 11073              		.loc 1 3145 7 is_stmt 1 view .LVU3429
3145:src/keys.c    **** 	NonProgrammable = 0;
 11074              		.loc 1 3145 10 is_stmt 0 view .LVU3430
 11075 1a7e 5806     		lsls	r0, r3, #25
 11076              	.LVL901:
3145:src/keys.c    **** 	NonProgrammable = 0;
 11077              		.loc 1 3145 10 view .LVU3431
 11078 1a80 40F1B580 		bpl	.L885
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11079              		.loc 1 3146 2 is_stmt 1 view .LVU3432
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11080              		.loc 1 3146 18 is_stmt 0 view .LVU3433
 11081 1a84 AA4B     		ldr	r3, .L1173
 11082 1a86 0022     		movs	r2, #0
 11083              	.LVL902:
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11084              		.loc 1 3146 18 view .LVU3434
 11085 1a88 1A60     		str	r2, [r3]
3147:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11086              		.loc 1 3147 2 is_stmt 1 view .LVU3435
3147:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11087              		.loc 1 3147 32 is_stmt 0 view .LVU3436
 11088 1a8a 40F23B10 		movw	r0, #315
 11089 1a8e FEF723BD 		b	.L835
 11090              	.LVL903:
 11091              	.L747:
 11092              	.LBB1278:
 11093              	.LBB1219:
 11094              	.LBB1149:
 11095              	.LBB787:
ARM GAS  /tmp/ccy15zOt.s 			page 308


1416:src/keys.c    **** 			break;
 11096              		.loc 1 1416 3 is_stmt 1 view .LVU3437
1416:src/keys.c    **** 			break;
 11097              		.loc 1 1416 24 is_stmt 0 view .LVU3438
 11098 1a92 811E     		subs	r1, r0, #2
1416:src/keys.c    **** 			break;
 11099              		.loc 1 1416 6 view .LVU3439
 11100 1a94 C9B2     		uxtb	r1, r1
 11101 1a96 0129     		cmp	r1, #1
 11102 1a98 7FF640AC 		bls	.L740
1418:src/keys.c    **** 			State2.multi = 1;
 11103              		.loc 1 1418 3 is_stmt 1 view .LVU3440
1418:src/keys.c    **** 			State2.multi = 1;
 11104              		.loc 1 1418 6 is_stmt 0 view .LVU3441
 11105 1a9c 0128     		cmp	r0, #1
 11106 1a9e 02D1     		bne	.L751
1418:src/keys.c    **** 			State2.multi = 1;
 11107              		.loc 1 1418 24 view .LVU3442
 11108 1aa0 13F04002 		ands	r2, r3, #64
 11109              	.LVL904:
1418:src/keys.c    **** 			State2.multi = 1;
 11110              		.loc 1 1418 24 view .LVU3443
 11111 1aa4 7CD0     		beq	.L1155
 11112              	.L751:
1424:src/keys.c    **** 		State2.alphashift = 0;
 11113              		.loc 1 1424 3 is_stmt 1 view .LVU3444
1425:src/keys.c    **** 		return op;
 11114              		.loc 1 1425 3 view .LVU3445
1424:src/keys.c    **** 		State2.alphashift = 0;
 11115              		.loc 1 1424 17 is_stmt 0 view .LVU3446
 11116 1aa6 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11117 1aaa 23F01803 		bic	r3, r3, #24
 11118 1aae 88F81630 		strb	r3, [r8, #22]
1426:src/keys.c    **** 
 11119              		.loc 1 1426 3 is_stmt 1 view .LVU3447
1426:src/keys.c    **** 
 11120              		.loc 1 1426 10 is_stmt 0 view .LVU3448
 11121 1ab2 4FF0330B 		mov	fp, #51
 11122 1ab6 FEF7F7BA 		b	.L565
 11123              	.LVL905:
 11124              	.L744:
1465:src/keys.c    **** 	    if ( State2.runmode ) {
 11125              		.loc 1 1465 4 is_stmt 1 view .LVU3449
1465:src/keys.c    **** 	    if ( State2.runmode ) {
 11126              		.loc 1 1465 7 is_stmt 0 view .LVU3450
 11127 1aba 0028     		cmp	r0, #0
 11128 1abc 7FF42EAC 		bne	.L740
1466:src/keys.c    **** 	      // Alpha scroll right
 11129              		.loc 1 1466 6 is_stmt 1 view .LVU3451
1466:src/keys.c    **** 	      // Alpha scroll right
 11130              		.loc 1 1466 9 is_stmt 0 view .LVU3452
 11131 1ac0 5806     		lsls	r0, r3, #25
 11132              	.LVL906:
1466:src/keys.c    **** 	      // Alpha scroll right
 11133              		.loc 1 1466 9 view .LVU3453
 11134 1ac2 7EF58DAD 		bpl	.L759
1468:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
ARM GAS  /tmp/ccy15zOt.s 			page 309


 11135              		.loc 1 1468 8 is_stmt 1 view .LVU3454
1468:src/keys.c    **** 		State2.alpha_pos = alpha_pos-1;
 11136              		.loc 1 1468 11 is_stmt 0 view .LVU3455
 11137 1ac6 B9F1000F 		cmp	r9, #0
 11138 1aca 3EF474AE 		beq	.L1069
1469:src/keys.c    **** 	      return STATE_UNFINISHED;
 11139              		.loc 1 1469 3 is_stmt 1 view .LVU3456
1469:src/keys.c    **** 	      return STATE_UNFINISHED;
 11140              		.loc 1 1469 31 is_stmt 0 view .LVU3457
 11141 1ace 09F1FF33 		add	r3, r9, #-1
1469:src/keys.c    **** 	      return STATE_UNFINISHED;
 11142              		.loc 1 1469 20 view .LVU3458
 11143 1ad2 88F80D30 		strb	r3, [r8, #13]
1470:src/keys.c    **** 	    }
 11144              		.loc 1 1470 15 view .LVU3459
 11145 1ad6 4FF0330B 		mov	fp, #51
 11146 1ada FEF7E5BA 		b	.L565
 11147              	.LVL907:
 11148              	.L745:
1436:src/keys.c    **** 	    if ( State2.runmode ) {
 11149              		.loc 1 1436 4 is_stmt 1 view .LVU3460
1436:src/keys.c    **** 	    if ( State2.runmode ) {
 11150              		.loc 1 1436 7 is_stmt 0 view .LVU3461
 11151 1ade 0028     		cmp	r0, #0
 11152 1ae0 7FF41CAC 		bne	.L740
1437:src/keys.c    **** 	      // Alpha scroll left
 11153              		.loc 1 1437 6 is_stmt 1 view .LVU3462
1437:src/keys.c    **** 	      // Alpha scroll left
 11154              		.loc 1 1437 9 is_stmt 0 view .LVU3463
 11155 1ae4 5C06     		lsls	r4, r3, #25
 11156 1ae6 7EF574AD 		bpl	.L755
1445:src/keys.c    **** 		alpha_pos += 1;
 11157              		.loc 1 1445 8 is_stmt 1 view .LVU3464
1445:src/keys.c    **** 		alpha_pos += 1;
 11158              		.loc 1 1445 11 is_stmt 0 view .LVU3465
 11159 1aea B9F1000F 		cmp	r9, #0
 11160 1aee 69D1     		bne	.L756
 11161              	.LVL908:
 11162              	.L758:
1446:src/keys.c    **** 	      }
 11163              		.loc 1 1446 3 is_stmt 1 view .LVU3466
1446:src/keys.c    **** 	      }
 11164              		.loc 1 1446 13 is_stmt 0 view .LVU3467
 11165 1af0 09F1010A 		add	r10, r9, #1
 11166              	.LVL909:
 11167              	.L757:
1453:src/keys.c    **** #else
 11168              		.loc 1 1453 8 is_stmt 1 view .LVU3468
1453:src/keys.c    **** #else
 11169              		.loc 1 1453 25 is_stmt 0 view .LVU3469
 11170 1af4 88F80DA0 		strb	r10, [r8, #13]
1458:src/keys.c    **** 	    }
 11171              		.loc 1 1458 8 is_stmt 1 view .LVU3470
1458:src/keys.c    **** 	    }
 11172              		.loc 1 1458 15 is_stmt 0 view .LVU3471
 11173 1af8 4FF0330B 		mov	fp, #51
 11174 1afc FEF7D4BA 		b	.L565
ARM GAS  /tmp/ccy15zOt.s 			page 310


 11175              	.LVL910:
 11176              	.L743:
1477:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 11177              		.loc 1 1477 3 is_stmt 1 view .LVU3472
1477:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 11178              		.loc 1 1477 6 is_stmt 0 view .LVU3473
 11179 1b00 0128     		cmp	r0, #1
 11180 1b02 3FF4CDAE 		beq	.L1071
1479:src/keys.c    **** 			return OP_NIL | OP_OFF;
 11181              		.loc 1 1479 8 is_stmt 1 view .LVU3474
1479:src/keys.c    **** 			return OP_NIL | OP_OFF;
 11182              		.loc 1 1479 11 is_stmt 0 view .LVU3475
 11183 1b06 0328     		cmp	r0, #3
 11184 1b08 7FD0     		beq	.L761
1481:src/keys.c    **** 			init_state();
 11185              		.loc 1 1481 8 is_stmt 1 view .LVU3476
1481:src/keys.c    **** 			init_state();
 11186              		.loc 1 1481 11 is_stmt 0 view .LVU3477
 11187 1b0a 0028     		cmp	r0, #0
 11188 1b0c 7EF453AE 		bne	.L1069
1482:src/keys.c    **** 		return STATE_UNFINISHED;
 11189              		.loc 1 1482 4 is_stmt 1 view .LVU3478
 11190 1b10 FFF7FEFF 		bl	init_state
 11191              	.LVL911:
1483:src/keys.c    **** 
 11192              		.loc 1 1483 10 is_stmt 0 view .LVU3479
 11193 1b14 4FF0330B 		mov	fp, #51
 11194 1b18 FEF7C6BA 		b	.L565
 11195              	.LVL912:
 11196              	.L748:
1406:src/keys.c    **** 			init_arg(RARG_ARCL);
 11197              		.loc 1 1406 3 is_stmt 1 view .LVU3480
1406:src/keys.c    **** 			init_arg(RARG_ARCL);
 11198              		.loc 1 1406 6 is_stmt 0 view .LVU3481
 11199 1b1c 0128     		cmp	r0, #1
 11200 1b1e 7DD0     		beq	.L1156
1409:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 11201              		.loc 1 1409 10 is_stmt 1 view .LVU3482
1409:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 11202              		.loc 1 1409 13 is_stmt 0 view .LVU3483
 11203 1b20 0328     		cmp	r0, #3
 11204 1b22 7FF4FBAB 		bne	.L740
1410:src/keys.c    **** 			return STATE_UNFINISHED;
 11205              		.loc 1 1410 4 is_stmt 1 view .LVU3484
 11206              	.LVL913:
 11207              	.LBB771:
 11208              	.LBI771:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 11209              		.loc 1 501 13 view .LVU3485
 11210              	.LBB772:
 502:src/keys.c    **** 		return;
 11211              		.loc 1 502 2 view .LVU3486
 502:src/keys.c    **** 		return;
 11212              		.loc 1 502 6 is_stmt 0 view .LVU3487
 11213 1b26 FFF7FEFF 		bl	is_bad_cmdline
 11214              	.LVL914:
 502:src/keys.c    **** 		return;
ARM GAS  /tmp/ccy15zOt.s 			page 311


 11215              		.loc 1 502 5 view .LVU3488
 11216 1b2a 0346     		mov	r3, r0
 11217 1b2c 0028     		cmp	r0, #0
 11218 1b2e 7EF442AE 		bne	.L1069
 11219 1b32 7320     		movs	r0, #115
 11220              	.LBE772:
 11221              	.LBE771:
 11222              	.LBE787:
 11223              	.LBE1149:
 11224              	.LBE1219:
 11225              	.LBE1278:
2952:src/keys.c    ****   if (was_paused && Pause == 0) {
 11226              		.loc 1 2952 7 view .LVU3489
 11227 1b34 1F46     		mov	r7, r3
 11228              	.LBB1279:
 11229              	.LBB1220:
 11230              	.LBB1150:
 11231              	.LBB788:
1411:src/keys.c    **** 		}
 11232              		.loc 1 1411 11 view .LVU3490
 11233 1b36 4FF0330B 		mov	fp, #51
 11234              	.LBB774:
 11235              	.LBB773:
 11236 1b3a FFF7FEFF 		bl	init_arg.part.0
 11237              	.LVL915:
 11238 1b3e FEF7B3BA 		b	.L565
 11239              	.LVL916:
 11240              	.L749:
1411:src/keys.c    **** 		}
 11241              		.loc 1 1411 11 view .LVU3491
 11242              	.LBE773:
 11243              	.LBE774:
1399:src/keys.c    **** 			init_arg(RARG_ASTO);
 11244              		.loc 1 1399 3 is_stmt 1 view .LVU3492
1399:src/keys.c    **** 			init_arg(RARG_ASTO);
 11245              		.loc 1 1399 6 is_stmt 0 view .LVU3493
 11246 1b42 0128     		cmp	r0, #1
 11247 1b44 7FF4EAAB 		bne	.L740
1400:src/keys.c    **** 			return STATE_UNFINISHED;
 11248              		.loc 1 1400 4 is_stmt 1 view .LVU3494
 11249              	.LVL917:
 11250              	.LBB775:
 11251              	.LBI775:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 11252              		.loc 1 501 13 view .LVU3495
 11253              	.LBB776:
 502:src/keys.c    **** 		return;
 11254              		.loc 1 502 2 view .LVU3496
 502:src/keys.c    **** 		return;
 11255              		.loc 1 502 6 is_stmt 0 view .LVU3497
 11256 1b48 FFF7FEFF 		bl	is_bad_cmdline
 11257              	.LVL918:
 502:src/keys.c    **** 		return;
 11258              		.loc 1 502 5 view .LVU3498
 11259 1b4c 0346     		mov	r3, r0
 11260 1b4e 0028     		cmp	r0, #0
 11261 1b50 7EF431AE 		bne	.L1069
ARM GAS  /tmp/ccy15zOt.s 			page 312


 11262 1b54 2620     		movs	r0, #38
 11263              	.LBE776:
 11264              	.LBE775:
 11265              	.LBE788:
 11266              	.LBE1150:
 11267              	.LBE1220:
 11268              	.LBE1279:
2952:src/keys.c    ****   if (was_paused && Pause == 0) {
 11269              		.loc 1 2952 7 view .LVU3499
 11270 1b56 1F46     		mov	r7, r3
 11271              	.LBB1280:
 11272              	.LBB1221:
 11273              	.LBB1151:
 11274              	.LBB789:
1401:src/keys.c    **** 		}
 11275              		.loc 1 1401 11 view .LVU3500
 11276 1b58 4FF0330B 		mov	fp, #51
 11277              	.LBB778:
 11278              	.LBB777:
 11279 1b5c FFF7FEFF 		bl	init_arg.part.0
 11280              	.LVL919:
 11281 1b60 FEF7A2BA 		b	.L565
 11282              	.LVL920:
 11283              	.L723:
1401:src/keys.c    **** 		}
 11284              		.loc 1 1401 11 view .LVU3501
 11285              	.LBE777:
 11286              	.LBE778:
 11287              	.LBE789:
 11288              	.LBE1151:
 11289              	.LBB1152:
 11290              	.LBB831:
2718:src/keys.c    **** 		goto reset_window;
 11291              		.loc 1 2718 4 is_stmt 1 view .LVU3502
2718:src/keys.c    **** 		goto reset_window;
 11292              		.loc 1 2718 24 is_stmt 0 view .LVU3503
 11293 1b64 09F1FF39 		add	r9, r9, #-1
 11294              	.LVL921:
2718:src/keys.c    **** 		goto reset_window;
 11295              		.loc 1 2718 18 view .LVU3504
 11296 1b68 A8F80890 		strh	r9, [r8, #8]	@ movhi
 11297 1b6c FEF71DBE 		b	.L715
 11298              	.LVL922:
 11299              	.L1116:
2718:src/keys.c    **** 		goto reset_window;
 11300              		.loc 1 2718 18 view .LVU3505
 11301              	.LBE831:
 11302              	.LBE1152:
 11303              	.LBB1153:
 11304              	.LBB728:
 11305              	.LBB724:
 11306              	.LBB715:
 437:src/keys.c    **** 			shift = SHIFT_LC_G;
 11307              		.loc 1 437 8 is_stmt 1 view .LVU3506
 438:src/keys.c    **** 	}
 11308              		.loc 1 438 10 is_stmt 0 view .LVU3507
 11309 1b70 0229     		cmp	r1, #2
ARM GAS  /tmp/ccy15zOt.s 			page 313


 11310 1b72 08BF     		it	eq
 11311 1b74 0521     		moveq	r1, #5
 11312              	.LVL923:
 438:src/keys.c    **** 	}
 11313              		.loc 1 438 10 view .LVU3508
 11314 1b76 FEF7D7BC 		b	.L679
 11315              	.LVL924:
 11316              	.L889:
 438:src/keys.c    **** 	}
 11317              		.loc 1 438 10 view .LVU3509
 11318              	.LBE715:
 11319              	.LBE724:
 11320              	.LBE728:
 11321              	.LBE1153:
 11322              	.LBB1154:
 11323              	.LBB677:
 749:src/keys.c    **** 	    }
 11324              		.loc 1 749 15 view .LVU3510
 11325 1b7a 4FF0110B 		mov	fp, #17
 11326              	.LVL925:
 11327              	.L836:
 749:src/keys.c    **** 	    }
 11328              		.loc 1 749 15 view .LVU3511
 11329              	.LBE677:
 11330              	.LBE1154:
 11331              	.LBE1221:
 11332              	.LBE1280:
3145:src/keys.c    **** 	NonProgrammable = 0;
 11333              		.loc 1 3145 26 view .LVU3512
 11334 1b7e 6C4B     		ldr	r3, .L1173
 11335 1b80 1A68     		ldr	r2, [r3]
 11336 1b82 3AB1     		cbz	r2, .L1063
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11337              		.loc 1 3146 2 is_stmt 1 view .LVU3513
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11338              		.loc 1 3146 18 is_stmt 0 view .LVU3514
 11339 1b84 0022     		movs	r2, #0
 11340 1b86 1A60     		str	r2, [r3]
3147:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11341              		.loc 1 3147 2 is_stmt 1 view .LVU3515
3147:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11342              		.loc 1 3147 32 is_stmt 0 view .LVU3516
 11343 1b88 5846     		mov	r0, fp
 11344 1b8a FEF778BD 		b	.L837
 11345              	.LVL926:
 11346              	.L891:
 11347              	.LBB1281:
 11348              	.LBB1222:
 11349              	.LBB1155:
 11350              	.LBB678:
 733:src/keys.c    **** 	    }
 11351              		.loc 1 733 15 view .LVU3517
 11352 1b8e 4FF00F0B 		mov	fp, #15
 11353 1b92 F4E7     		b	.L836
 11354              	.LVL927:
 11355              	.L1063:
 733:src/keys.c    **** 	    }
ARM GAS  /tmp/ccy15zOt.s 			page 314


 11356              		.loc 1 733 15 view .LVU3518
 11357 1b94 5846     		mov	r0, fp
 11358 1b96 FEF7A6BE 		b	.L840
 11359              	.LVL928:
 11360              	.L890:
 757:src/keys.c    **** 	    }
 11361              		.loc 1 757 15 view .LVU3519
 11362 1b9a 4FF0140B 		mov	fp, #20
 11363 1b9e EEE7     		b	.L836
 11364              	.LVL929:
 11365              	.L1155:
 757:src/keys.c    **** 	    }
 11366              		.loc 1 757 15 view .LVU3520
 11367              	.LBE678:
 11368              	.LBE1155:
 11369              	.LBB1156:
 11370              	.LBB790:
1419:src/keys.c    **** 			State2.numdigit = 0;
 11371              		.loc 1 1419 4 is_stmt 1 view .LVU3521
1419:src/keys.c    **** 			State2.numdigit = 0;
 11372              		.loc 1 1419 17 is_stmt 0 view .LVU3522
 11373 1ba0 98F81530 		ldrb	r3, [r8, #21]	@ zero_extendqisi2
1420:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 11374              		.loc 1 1420 20 view .LVU3523
 11375 1ba4 88F80B20 		strb	r2, [r8, #11]
1419:src/keys.c    **** 			State2.numdigit = 0;
 11376              		.loc 1 1419 17 view .LVU3524
 11377 1ba8 43F00803 		orr	r3, r3, #8
1421:src/keys.c    **** 			return STATE_UNFINISHED;
 11378              		.loc 1 1421 12 view .LVU3525
 11379 1bac 0A22     		movs	r2, #10
1419:src/keys.c    **** 			State2.numdigit = 0;
 11380              		.loc 1 1419 17 view .LVU3526
 11381 1bae 88F81530 		strb	r3, [r8, #21]
1420:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 11382              		.loc 1 1420 4 is_stmt 1 view .LVU3527
1421:src/keys.c    **** 			return STATE_UNFINISHED;
 11383              		.loc 1 1421 4 view .LVU3528
1421:src/keys.c    **** 			return STATE_UNFINISHED;
 11384              		.loc 1 1421 12 is_stmt 0 view .LVU3529
 11385 1bb2 88F81F20 		strb	r2, [r8, #31]
1422:src/keys.c    **** 		}
 11386              		.loc 1 1422 4 is_stmt 1 view .LVU3530
1422:src/keys.c    **** 		}
 11387              		.loc 1 1422 11 is_stmt 0 view .LVU3531
 11388 1bb6 4FF0330B 		mov	fp, #51
 11389 1bba FEF775BA 		b	.L565
 11390              	.LVL930:
 11391              	.L888:
1422:src/keys.c    **** 		}
 11392              		.loc 1 1422 11 view .LVU3532
 11393              	.LBE790:
 11394              	.LBE1156:
 11395              	.LBB1157:
 11396              	.LBB679:
 741:src/keys.c    **** 	    }
 11397              		.loc 1 741 15 view .LVU3533
ARM GAS  /tmp/ccy15zOt.s 			page 315


 11398 1bbe 4FF0100B 		mov	fp, #16
 11399 1bc2 DCE7     		b	.L836
 11400              	.LVL931:
 11401              	.L756:
 741:src/keys.c    **** 	    }
 11402              		.loc 1 741 15 view .LVU3534
 11403              	.LBE679:
 11404              	.LBE1157:
 11405              	.LBB1158:
 11406              	.LBB791:
1445:src/keys.c    **** 		alpha_pos += 1;
 11407              		.loc 1 1445 33 view .LVU3535
 11408 1bc4 FFF7FEFF 		bl	alen
 11409              	.LVL932:
1445:src/keys.c    **** 		alpha_pos += 1;
 11410              		.loc 1 1445 41 view .LVU3536
 11411 1bc8 09EB4903 		add	r3, r9, r9, lsl #1
1445:src/keys.c    **** 		alpha_pos += 1;
 11412              		.loc 1 1445 39 view .LVU3537
 11413 1bcc A0EB4300 		sub	r0, r0, r3, lsl #1
1445:src/keys.c    **** 		alpha_pos += 1;
 11414              		.loc 1 1445 29 view .LVU3538
 11415 1bd0 1328     		cmp	r0, #19
 11416 1bd2 8DD8     		bhi	.L758
 11417 1bd4 8EE7     		b	.L757
 11418              	.LVL933:
 11419              	.L753:
1431:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11420              		.loc 1 1431 3 is_stmt 1 view .LVU3539
1431:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11421              		.loc 1 1431 6 is_stmt 0 view .LVU3540
 11422 1bd6 0328     		cmp	r0, #3
 11423 1bd8 7FF4A0AB 		bne	.L740
 11424              	.LVL934:
1431:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11425              		.loc 1 1431 6 view .LVU3541
 11426              	.LBE791:
 11427              	.LBE1158:
 11428              	.LBE1222:
 11429              	.LBE1281:
3145:src/keys.c    **** 	NonProgrammable = 0;
 11430              		.loc 1 3145 7 is_stmt 1 view .LVU3542
3145:src/keys.c    **** 	NonProgrammable = 0;
 11431              		.loc 1 3145 10 is_stmt 0 view .LVU3543
 11432 1bdc 5A06     		lsls	r2, r3, #25
 11433              	.LVL935:
3145:src/keys.c    **** 	NonProgrammable = 0;
 11434              		.loc 1 3145 10 view .LVU3544
 11435 1bde 11D5     		bpl	.L892
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11436              		.loc 1 3146 2 is_stmt 1 view .LVU3545
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11437              		.loc 1 3146 18 is_stmt 0 view .LVU3546
 11438 1be0 534B     		ldr	r3, .L1173
 11439 1be2 0022     		movs	r2, #0
 11440 1be4 1A60     		str	r2, [r3]
3147:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
ARM GAS  /tmp/ccy15zOt.s 			page 316


 11441              		.loc 1 3147 2 is_stmt 1 view .LVU3547
3147:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11442              		.loc 1 3147 32 is_stmt 0 view .LVU3548
 11443 1be6 4FF4BA70 		mov	r0, #372
 11444              	.LVL936:
3147:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11445              		.loc 1 3147 32 view .LVU3549
 11446 1bea FEF775BC 		b	.L835
 11447              	.LVL937:
 11448              	.L885:
 11449              	.LBB1282:
 11450              	.LBB1223:
 11451              	.LBB1159:
 11452              	.LBB792:
1487:src/keys.c    **** 		break;
 11453              		.loc 1 1487 11 view .LVU3550
 11454 1bee 40F23B1B 		movw	fp, #315
 11455              	.LVL938:
 11456              	.L834:
1487:src/keys.c    **** 		break;
 11457              		.loc 1 1487 11 view .LVU3551
 11458              	.LBE792:
 11459              	.LBE1159:
 11460              	.LBE1223:
 11461              	.LBE1282:
3145:src/keys.c    **** 	NonProgrammable = 0;
 11462              		.loc 1 3145 26 view .LVU3552
 11463 1bf2 4F4B     		ldr	r3, .L1173
 11464 1bf4 1A68     		ldr	r2, [r3]
 11465 1bf6 002A     		cmp	r2, #0
 11466 1bf8 CCD0     		beq	.L1063
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11467              		.loc 1 3146 2 is_stmt 1 view .LVU3553
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11468              		.loc 1 3146 18 is_stmt 0 view .LVU3554
 11469 1bfa 0022     		movs	r2, #0
3147:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11470              		.loc 1 3147 32 view .LVU3555
 11471 1bfc 5846     		mov	r0, fp
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11472              		.loc 1 3146 18 view .LVU3556
 11473 1bfe 1A60     		str	r2, [r3]
3147:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11474              		.loc 1 3147 2 is_stmt 1 view .LVU3557
 11475 1c00 FEF76ABC 		b	.L835
 11476              	.LVL939:
 11477              	.L892:
 11478              	.LBB1283:
 11479              	.LBB1224:
 11480              	.LBB1160:
 11481              	.LBB793:
1432:src/keys.c    **** 		break;
 11482              		.loc 1 1432 11 is_stmt 0 view .LVU3558
 11483 1c04 4FF4BA7B 		mov	fp, #372
 11484 1c08 F3E7     		b	.L834
 11485              	.LVL940:
 11486              	.L761:
ARM GAS  /tmp/ccy15zOt.s 			page 317


1432:src/keys.c    **** 		break;
 11487              		.loc 1 1432 11 view .LVU3559
 11488              	.LBE793:
 11489              	.LBE1160:
 11490              	.LBE1224:
 11491              	.LBE1283:
3145:src/keys.c    **** 	NonProgrammable = 0;
 11492              		.loc 1 3145 7 is_stmt 1 view .LVU3560
3145:src/keys.c    **** 	NonProgrammable = 0;
 11493              		.loc 1 3145 10 is_stmt 0 view .LVU3561
 11494 1c0a 5B06     		lsls	r3, r3, #25
 11495 1c0c 14D5     		bpl	.L893
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11496              		.loc 1 3146 2 is_stmt 1 view .LVU3562
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11497              		.loc 1 3146 18 is_stmt 0 view .LVU3563
 11498 1c0e 484B     		ldr	r3, .L1173
 11499 1c10 0022     		movs	r2, #0
 11500              	.LVL941:
3146:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11501              		.loc 1 3146 18 view .LVU3564
 11502 1c12 1A60     		str	r2, [r3]
3147:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11503              		.loc 1 3147 2 is_stmt 1 view .LVU3565
3147:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11504              		.loc 1 3147 32 is_stmt 0 view .LVU3566
 11505 1c14 4FF48170 		mov	r0, #258
 11506              	.LVL942:
3147:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11507              		.loc 1 3147 32 view .LVU3567
 11508 1c18 FEF75EBC 		b	.L835
 11509              	.LVL943:
 11510              	.L1156:
 11511              	.LBB1284:
 11512              	.LBB1225:
 11513              	.LBB1161:
 11514              	.LBB794:
1407:src/keys.c    **** 			return STATE_UNFINISHED;
 11515              		.loc 1 1407 4 is_stmt 1 view .LVU3568
 11516              	.LBB779:
 11517              	.LBI779:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 11518              		.loc 1 501 13 view .LVU3569
 11519              	.LBB780:
 502:src/keys.c    **** 		return;
 11520              		.loc 1 502 2 view .LVU3570
 502:src/keys.c    **** 		return;
 11521              		.loc 1 502 6 is_stmt 0 view .LVU3571
 11522 1c1c FFF7FEFF 		bl	is_bad_cmdline
 11523              	.LVL944:
 502:src/keys.c    **** 		return;
 11524              		.loc 1 502 5 view .LVU3572
 11525 1c20 0346     		mov	r3, r0
 11526 1c22 0028     		cmp	r0, #0
 11527 1c24 7EF4C7AD 		bne	.L1069
 11528 1c28 2720     		movs	r0, #39
 11529              	.LBE780:
ARM GAS  /tmp/ccy15zOt.s 			page 318


 11530              	.LBE779:
 11531              	.LBE794:
 11532              	.LBE1161:
 11533              	.LBE1225:
 11534              	.LBE1284:
2952:src/keys.c    ****   if (was_paused && Pause == 0) {
 11535              		.loc 1 2952 7 view .LVU3573
 11536 1c2a 1F46     		mov	r7, r3
 11537              	.LBB1285:
 11538              	.LBB1226:
 11539              	.LBB1162:
 11540              	.LBB795:
1408:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 11541              		.loc 1 1408 11 view .LVU3574
 11542 1c2c 4FF0330B 		mov	fp, #51
 11543              	.LBB782:
 11544              	.LBB781:
 11545 1c30 FFF7FEFF 		bl	init_arg.part.0
 11546              	.LVL945:
 11547 1c34 FEF738BA 		b	.L565
 11548              	.LVL946:
 11549              	.L893:
1408:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 11550              		.loc 1 1408 11 view .LVU3575
 11551              	.LBE781:
 11552              	.LBE782:
1480:src/keys.c    **** 		else if (shift == SHIFT_N)
 11553              		.loc 1 1480 11 view .LVU3576
 11554 1c38 4FF4817B 		mov	fp, #258
 11555 1c3c D9E7     		b	.L834
 11556              	.LVL947:
 11557              	.L1150:
1480:src/keys.c    **** 		else if (shift == SHIFT_N)
 11558              		.loc 1 1480 11 view .LVU3577
 11559              	.LBE795:
 11560              	.LBE1162:
 11561              	.LBB1163:
 11562              	.LBB1038:
 944:src/keys.c    **** 				return STATE_UNFINISHED;
 11563              		.loc 1 944 4 is_stmt 1 view .LVU3578
 944:src/keys.c    **** 				return STATE_UNFINISHED;
 11564              		.loc 1 944 8 is_stmt 0 view .LVU3579
 11565 1c3e FFF7FEFF 		bl	is_bad_cmdline
 11566              	.LVL948:
 944:src/keys.c    **** 				return STATE_UNFINISHED;
 11567              		.loc 1 944 7 view .LVU3580
 11568 1c42 0028     		cmp	r0, #0
 11569 1c44 7EF4B7AD 		bne	.L1069
 946:src/keys.c    **** 			State2.alphas = 1;
 11570              		.loc 1 946 4 is_stmt 1 view .LVU3581
 11571 1c48 FFF7FEFF 		bl	process_cmdline_set_lift
 11572              	.LVL949:
 947:src/keys.c    **** 		}
 11573              		.loc 1 947 4 view .LVU3582
 947:src/keys.c    **** 		}
 11574              		.loc 1 947 18 is_stmt 0 view .LVU3583
 11575 1c4c 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
ARM GAS  /tmp/ccy15zOt.s 			page 319


 11576 1c50 43F00803 		orr	r3, r3, #8
 11577 1c54 88F81630 		strb	r3, [r8, #22]
 11578 1c58 DFE4     		b	.L785
 11579              	.L1153:
 981:src/keys.c    **** 				init_arg((enum rarg) op);
 11580              		.loc 1 981 4 is_stmt 1 view .LVU3584
 981:src/keys.c    **** 				init_arg((enum rarg) op);
 11581              		.loc 1 981 7 is_stmt 0 view .LVU3585
 11582 1c5a BAF5704F 		cmp	r10, #61440
 11583 1c5e 06D1     		bne	.L790
 981:src/keys.c    **** 				init_arg((enum rarg) op);
 11584              		.loc 1 981 18 view .LVU3586
 11585 1c60 344B     		ldr	r3, .L1173+4
 11586 1c62 1B68     		ldr	r3, [r3]
 11587 1c64 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 981:src/keys.c    **** 				init_arg((enum rarg) op);
 11588              		.loc 1 981 8 view .LVU3587
 11589 1c68 DA07     		lsls	r2, r3, #31
 11590 1c6a 3EF5A4AD 		bmi	.L1069
 11591              	.LVL950:
 11592              	.L790:
 982:src/keys.c    **** 			}
 11593              		.loc 1 982 5 is_stmt 1 view .LVU3588
 11594              	.LBB1029:
 11595              	.LBI1029:
 501:src/keys.c    **** 	if (is_bad_cmdline())
 11596              		.loc 1 501 13 view .LVU3589
 11597              	.LBB1030:
 502:src/keys.c    **** 		return;
 11598              		.loc 1 502 2 view .LVU3590
 502:src/keys.c    **** 		return;
 11599              		.loc 1 502 6 is_stmt 0 view .LVU3591
 11600 1c6e FFF7FEFF 		bl	is_bad_cmdline
 11601              	.LVL951:
 502:src/keys.c    **** 		return;
 11602              		.loc 1 502 5 view .LVU3592
 11603 1c72 0446     		mov	r4, r0
 11604 1c74 0028     		cmp	r0, #0
 11605 1c76 7EF49EAD 		bne	.L1069
 11606 1c7a 5FFA8BF0 		uxtb	r0, fp
 11607 1c7e FFF7FEFF 		bl	init_arg.part.0
 11608              	.LVL952:
 11609              	.LBE1030:
 11610              	.LBE1029:
 11611              	.LBE1038:
 11612              	.LBE1163:
 11613              	.LBE1226:
 11614              	.LBE1285:
2952:src/keys.c    ****   if (was_paused && Pause == 0) {
 11615              		.loc 1 2952 7 view .LVU3593
 11616 1c82 2746     		mov	r7, r4
 11617              	.LBB1286:
 11618              	.LBB1227:
 11619              	.LBB1164:
 11620              	.LBB1039:
 984:src/keys.c    **** 		}
 11621              		.loc 1 984 11 view .LVU3594
ARM GAS  /tmp/ccy15zOt.s 			page 320


 11622 1c84 4FF0330B 		mov	fp, #51
 11623              	.LVL953:
 984:src/keys.c    **** 		}
 11624              		.loc 1 984 11 view .LVU3595
 11625 1c88 FEF70EBA 		b	.L565
 11626              	.LVL954:
 11627              	.L1154:
 984:src/keys.c    **** 		}
 11628              		.loc 1 984 11 view .LVU3596
 11629              	.LBE1039:
 11630              	.LBE1164:
 11631              	.LBB1165:
 11632              	.LBB1003:
2565:src/keys.c    **** 		State2.digval = pc;
 11633              		.loc 1 2565 4 is_stmt 1 view .LVU3597
2565:src/keys.c    **** 		State2.digval = pc;
 11634              		.loc 1 2565 9 is_stmt 0 view .LVU3598
 11635 1c8c 2046     		mov	r0, r4
 11636 1c8e 0121     		movs	r1, #1
 11637 1c90 FFF7FEFF 		bl	advance_to_next_label
 11638              	.LVL955:
 11639 1c94 0446     		mov	r4, r0
 11640              	.LVL956:
2565:src/keys.c    **** 		State2.digval = pc;
 11641              		.loc 1 2565 9 view .LVU3599
 11642 1c96 A8E6     		b	.L689
 11643              	.LVL957:
 11644              	.L1152:
2565:src/keys.c    **** 		State2.digval = pc;
 11645              		.loc 1 2565 9 view .LVU3600
 11646              	.LBE1003:
 11647              	.LBE1165:
 11648              	.LBB1166:
 11649              	.LBB1040:
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 11650              		.loc 1 972 4 is_stmt 1 view .LVU3601
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 11651              		.loc 1 972 26 is_stmt 0 view .LVU3602
 11652 1c98 591E     		subs	r1, r3, #1
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 11653              		.loc 1 972 17 view .LVU3603
 11654 1c9a 98F81720 		ldrb	r2, [r8, #23]	@ zero_extendqisi2
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 11655              		.loc 1 972 26 view .LVU3604
 11656 1c9e 4B42     		rsbs	r3, r1, #0
 11657 1ca0 4B41     		adcs	r3, r3, r1
 972:src/keys.c    **** 			return STATE_UNFINISHED;
 11658              		.loc 1 972 17 view .LVU3605
 11659 1ca2 63F3C712 		bfi	r2, r3, #7, #1
 11660 1ca6 88F81720 		strb	r2, [r8, #23]
 973:src/keys.c    **** 		}
 11661              		.loc 1 973 4 is_stmt 1 view .LVU3606
 973:src/keys.c    **** 		}
 11662              		.loc 1 973 11 is_stmt 0 view .LVU3607
 11663 1caa 4FF0330B 		mov	fp, #51
 11664              	.LVL958:
 973:src/keys.c    **** 		}
ARM GAS  /tmp/ccy15zOt.s 			page 321


 11665              		.loc 1 973 11 view .LVU3608
 11666 1cae FEF7FBB9 		b	.L565
 11667              	.LVL959:
 11668              	.L886:
 953:src/keys.c    **** 	  }
 11669              		.loc 1 953 13 view .LVU3609
 11670 1cb2 4FF0120B 		mov	fp, #18
 11671 1cb6 62E7     		b	.L836
 11672              	.LVL960:
 11673              	.L1151:
 933:src/keys.c    **** 		}
 11674              		.loc 1 933 4 is_stmt 1 view .LVU3610
 933:src/keys.c    **** 		}
 11675              		.loc 1 933 34 is_stmt 0 view .LVU3611
 11676 1cb8 1F4B     		ldr	r3, .L1173+8
 11677              	.LVL961:
 933:src/keys.c    **** 		}
 11678              		.loc 1 933 11 view .LVU3612
 11679 1cba 33F81010 		ldrh	r1, [r3, r0, lsl #1]
 11680 1cbe FFF7FEFF 		bl	check_f_key
 11681              	.LVL962:
 933:src/keys.c    **** 		}
 11682              		.loc 1 933 11 view .LVU3613
 11683 1cc2 8346     		mov	fp, r0
 11684              	.LVL963:
 933:src/keys.c    **** 		}
 11685              		.loc 1 933 11 view .LVU3614
 11686 1cc4 FEF760BC 		b	.L594
 11687              	.LVL964:
 11688              	.L1119:
 933:src/keys.c    **** 		}
 11689              		.loc 1 933 11 view .LVU3615
 11690              	.LBE1040:
 11691              	.LBE1166:
 11692              	.LBB1167:
 11693              	.LBB832:
2714:src/keys.c    **** 			--State2.digval;
 11694              		.loc 1 2714 5 is_stmt 1 view .LVU3616
2714:src/keys.c    **** 			--State2.digval;
 11695              		.loc 1 2714 21 is_stmt 0 view .LVU3617
 11696 1cc8 FFF7FEFF 		bl	global_regs
 11697              	.LVL965:
2714:src/keys.c    **** 			--State2.digval;
 11698              		.loc 1 2714 19 view .LVU3618
 11699 1ccc A8F80800 		strh	r0, [r8, #8]	@ movhi
 11700 1cd0 FEF766BD 		b	.L724
 11701              	.LVL966:
 11702              	.L1145:
2745:src/keys.c    **** 			goto reset_window;
 11703              		.loc 1 2745 4 is_stmt 1 view .LVU3619
2745:src/keys.c    **** 			goto reset_window;
 11704              		.loc 1 2745 25 is_stmt 0 view .LVU3620
 11705 1cd4 98F81630 		ldrb	r3, [r8, #22]	@ zero_extendqisi2
 11706 1cd8 43F00403 		orr	r3, r3, #4
 11707 1cdc 88F81630 		strb	r3, [r8, #22]
2746:src/keys.c    **** 		}
 11708              		.loc 1 2746 4 is_stmt 1 view .LVU3621
ARM GAS  /tmp/ccy15zOt.s 			page 322


 11709 1ce0 FEF763BD 		b	.L715
 11710              	.LVL967:
 11711              	.L629:
2746:src/keys.c    **** 		}
 11712              		.loc 1 2746 4 is_stmt 0 view .LVU3622
 11713              	.LBE832:
 11714              	.LBE1167:
 11715              	.LBB1168:
 11716              	.LBB870:
1929:src/keys.c    **** 		// Special 1
 11717              		.loc 1 1929 7 is_stmt 1 view .LVU3623
1929:src/keys.c    **** 		// Special 1
 11718              		.loc 1 1929 10 is_stmt 0 view .LVU3624
 11719 1ce4 0128     		cmp	r0, #1
 11720 1ce6 7EF4C7AF 		bne	.L631
1931:src/keys.c    **** 	}
 11721              		.loc 1 1931 3 is_stmt 1 view .LVU3625
1931:src/keys.c    **** 	}
 11722              		.loc 1 1931 18 is_stmt 0 view .LVU3626
 11723 1cea BEF1000F 		cmp	lr, #0
 11724 1cee 14BF     		ite	ne
 11725 1cf0 2723     		movne	r3, #39
 11726 1cf2 1E23     		moveq	r3, #30
1931:src/keys.c    **** 	}
 11727              		.loc 1 1931 47 view .LVU3627
 11728 1cf4 9B44     		add	fp, fp, r3
 11729              	.LVL968:
1931:src/keys.c    **** 	}
 11730              		.loc 1 1931 47 view .LVU3628
 11731 1cf6 FEF747BC 		b	.L594
 11732              	.LVL969:
 11733              	.L887:
1931:src/keys.c    **** 	}
 11734              		.loc 1 1931 47 view .LVU3629
 11735              	.LBE870:
 11736              	.LBE1168:
 11737              	.LBB1169:
 11738              	.LBB1041:
 958:src/keys.c    **** 	  }
 11739              		.loc 1 958 13 view .LVU3630
 11740 1cfa 4FF0130B 		mov	fp, #19
 11741 1cfe 3EE7     		b	.L836
 11742              	.LVL970:
 11743              	.L768:
 958:src/keys.c    **** 	  }
 11744              		.loc 1 958 13 view .LVU3631
 11745              	.LBE1041:
 11746              	.LBE1169:
 11747              	.LBB1170:
 11748              	.LBB1115:
1177:src/keys.c    **** 			break;
 11749              		.loc 1 1177 4 is_stmt 1 view .LVU3632
 11750              	.LBB1108:
 11751              	.LBI1108:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 11752              		.loc 1 92 20 view .LVU3633
 11753              	.LBB1109:
ARM GAS  /tmp/ccy15zOt.s 			page 323


  93:src/keys.c    **** 	State2.shifts = shift;
 11754              		.loc 1 93 2 view .LVU3634
 11755              	.LBB1110:
 11756              	.LBI1110:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 11757              		.loc 1 84 13 view .LVU3635
 11758              	.LBB1111:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11759              		.loc 1 85 2 view .LVU3636
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11760              		.loc 1 85 18 is_stmt 0 view .LVU3637
 11761 1d00 FFF7FEFF 		bl	shift_down
 11762              	.LVL971:
  86:src/keys.c    **** }
 11763              		.loc 1 86 2 is_stmt 1 view .LVU3638
 11764              	.LBE1111:
 11765              	.LBE1110:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11766              		.loc 1 94 2 view .LVU3639
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11767              		.loc 1 94 16 is_stmt 0 view .LVU3640
 11768 1d04 88F810A0 		strb	r10, [r8, #16]
  96:src/keys.c    **** }
 11769              		.loc 1 96 2 is_stmt 1 view .LVU3641
  96:src/keys.c    **** }
 11770              		.loc 1 96 9 is_stmt 0 view .LVU3642
 11771 1d08 FEF73EBC 		b	.L594
 11772              	.LVL972:
 11773              	.L767:
  96:src/keys.c    **** }
 11774              		.loc 1 96 9 view .LVU3643
 11775              	.LBE1109:
 11776              	.LBE1108:
1191:src/keys.c    **** 			break;
 11777              		.loc 1 1191 4 is_stmt 1 view .LVU3644
 11778 1d0c FFF7FEFF 		bl	init_state
 11779              	.LVL973:
1192:src/keys.c    **** 
 11780              		.loc 1 1192 4 view .LVU3645
 11781 1d10 FEF73ABC 		b	.L594
 11782              	.LVL974:
 11783              	.L1146:
1192:src/keys.c    **** 
 11784              		.loc 1 1192 4 is_stmt 0 view .LVU3646
 11785              	.LBE1115:
 11786              	.LBE1170:
 11787              	.LBB1171:
 11788              	.LBB1085:
1078:src/keys.c    **** 			set_pc(0);
 11789              		.loc 1 1078 43 view .LVU3647
 11790 1d14 B3F8EE37 		ldrh	r3, [r3, #2030]
 11791 1d18 012B     		cmp	r3, #1
 11792 1d1a 7FF43AAB 		bne	.L795
1079:src/keys.c    **** 		break;
 11793              		.loc 1 1079 4 is_stmt 1 view .LVU3648
 11794 1d1e FFF7FEFF 		bl	set_pc
 11795              	.LVL975:
ARM GAS  /tmp/ccy15zOt.s 			page 324


 11796 1d22 FFF736BB 		b	.L795
 11797              	.LVL976:
 11798              	.L726:
1079:src/keys.c    **** 		break;
 11799              		.loc 1 1079 4 is_stmt 0 view .LVU3649
 11800              	.LBE1085:
 11801              	.LBE1171:
 11802              	.LBB1172:
 11803              	.LBB833:
2728:src/keys.c    **** 		goto reset_window;
 11804              		.loc 1 2728 4 is_stmt 1 view .LVU3650
2728:src/keys.c    **** 		goto reset_window;
 11805              		.loc 1 2728 18 is_stmt 0 view .LVU3651
 11806 1d26 0023     		movs	r3, #0
 11807 1d28 A8F80830 		strh	r3, [r8, #8]	@ movhi
 11808 1d2c FEF73DBD 		b	.L715
 11809              	.L1174:
 11810              		.align	2
 11811              	.L1173:
 11812 1d30 00000000 		.word	NonProgrammable
 11813 1d34 00000000 		.word	main_ram
 11814 1d38 00000000 		.word	.LANCHOR20
 11815              	.LBE833:
 11816              	.LBE1172:
 11817              	.LBE1227:
 11818              	.LBE1286:
 11819              		.cfi_endproc
 11820              	.LFE58:
 11822              		.section	.text.process_keycode_with_shift,"ax",%progbits
 11823              		.align	1
 11824              		.p2align 2,,3
 11825              		.global	process_keycode_with_shift
 11826              		.syntax unified
 11827              		.thumb
 11828              		.thumb_func
 11829              		.fpu fpv4-sp-d16
 11831              	process_keycode_with_shift:
 11832              	.LFB57:
2930:src/keys.c    ****    if (remapped.shift >= 0) set_shift ( remapped.shift );
 11833              		.loc 1 2930 61 is_stmt 1 view -0
 11834              		.cfi_startproc
 11835              		@ args = 0, pretend = 0, frame = 8
 11836              		@ frame_needed = 0, uses_anonymous_args = 0
 11837 0000 30B5     		push	{r4, r5, lr}
 11838              		.cfi_def_cfa_offset 12
 11839              		.cfi_offset 4, -12
 11840              		.cfi_offset 5, -8
 11841              		.cfi_offset 14, -4
 11842 0002 83B0     		sub	sp, sp, #12
 11843              		.cfi_def_cfa_offset 24
2930:src/keys.c    ****    if (remapped.shift >= 0) set_shift ( remapped.shift );
 11844              		.loc 1 2930 61 is_stmt 0 view .LVU3653
 11845 0004 02AB     		add	r3, sp, #8
 11846 0006 03E90300 		stmdb	r3, {r0, r1}
 11847 000a 019D     		ldr	r5, [sp, #4]
 11848 000c 9DF80040 		ldrb	r4, [sp]	@ zero_extendqisi2
 11849              	.LVL977:
ARM GAS  /tmp/ccy15zOt.s 			page 325


2931:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 11850              		.loc 1 2931 4 is_stmt 1 view .LVU3654
2931:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 11851              		.loc 1 2931 7 is_stmt 0 view .LVU3655
 11852 0010 002D     		cmp	r5, #0
 11853 0012 03DB     		blt	.L1176
2931:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 11854              		.loc 1 2931 29 is_stmt 1 discriminator 1 view .LVU3656
 11855              	.LVL978:
 11856              	.LBB1287:
 11857              	.LBI1287:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 11858              		.loc 1 92 20 discriminator 1 view .LVU3657
 11859              	.LBB1288:
  93:src/keys.c    **** 	State2.shifts = shift;
 11860              		.loc 1 93 2 discriminator 1 view .LVU3658
 11861              	.LBB1289:
 11862              	.LBI1289:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 11863              		.loc 1 84 13 discriminator 1 view .LVU3659
 11864              	.LBB1290:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11865              		.loc 1 85 2 discriminator 1 view .LVU3660
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11866              		.loc 1 85 18 is_stmt 0 discriminator 1 view .LVU3661
 11867 0014 FFF7FEFF 		bl	shift_down
 11868              	.LVL979:
  86:src/keys.c    **** }
 11869              		.loc 1 86 2 is_stmt 1 discriminator 1 view .LVU3662
 11870              	.LBE1290:
 11871              	.LBE1289:
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11872              		.loc 1 94 2 discriminator 1 view .LVU3663
  94:src/keys.c    **** 	//	State2.alpha_pos = 0;
 11873              		.loc 1 94 16 is_stmt 0 discriminator 1 view .LVU3664
 11874 0018 154B     		ldr	r3, .L1183
 11875              	.LBE1288:
 11876              	.LBE1287:
2931:src/keys.c    ****    if (remapped.key_34s == K_NOP) return;
 11877              		.loc 1 2931 29 discriminator 1 view .LVU3665
 11878 001a 1D74     		strb	r5, [r3, #16]
 11879              	.LBB1292:
 11880              	.LBB1291:
  96:src/keys.c    **** }
 11881              		.loc 1 96 2 is_stmt 1 discriminator 1 view .LVU3666
 11882              	.LVL980:
 11883              	.L1176:
  96:src/keys.c    **** }
 11884              		.loc 1 96 2 is_stmt 0 discriminator 1 view .LVU3667
 11885              	.LBE1291:
 11886              	.LBE1292:
2932:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 11887              		.loc 1 2932 4 is_stmt 1 view .LVU3668
2932:src/keys.c    ****    if (remapped.key_34s == K_SSHOT) {
 11888              		.loc 1 2932 7 is_stmt 0 view .LVU3669
 11889 001c 2E2C     		cmp	r4, #46
 11890 001e 21D0     		beq	.L1175
ARM GAS  /tmp/ccy15zOt.s 			page 326


2933:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 11891              		.loc 1 2933 4 is_stmt 1 view .LVU3670
2933:src/keys.c    ****      start_buzzer_freq(4400); sys_delay(10); stop_buzzer();// Start click 
 11892              		.loc 1 2933 7 is_stmt 0 view .LVU3671
 11893 0020 332C     		cmp	r4, #51
 11894 0022 05D0     		beq	.L1181
2942:src/keys.c    ****  }
 11895              		.loc 1 2942 4 is_stmt 1 view .LVU3672
 11896 0024 2046     		mov	r0, r4
2943:src/keys.c    ****  
 11897              		.loc 1 2943 2 is_stmt 0 view .LVU3673
 11898 0026 03B0     		add	sp, sp, #12
 11899              		.cfi_remember_state
 11900              		.cfi_def_cfa_offset 12
 11901              		@ sp needed
 11902 0028 BDE83040 		pop	{r4, r5, lr}
 11903              		.cfi_restore 14
 11904              		.cfi_restore 5
 11905              		.cfi_restore 4
 11906              		.cfi_def_cfa_offset 0
 11907              	.LVL981:
2942:src/keys.c    ****  }
 11908              		.loc 1 2942 4 view .LVU3674
 11909 002c FFF7FEBF 		b	process_keycode
 11910              	.LVL982:
 11911              	.L1181:
 11912              		.cfi_restore_state
2934:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 11913              		.loc 1 2934 6 is_stmt 1 view .LVU3675
 11914 0030 104B     		ldr	r3, .L1183+4
 11915 0032 41F23010 		movw	r0, #4400
 11916 0036 9847     		blx	r3
 11917              	.LVL983:
2934:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 11918              		.loc 1 2934 31 view .LVU3676
 11919 0038 0A20     		movs	r0, #10
 11920 003a 0F4B     		ldr	r3, .L1183+8
 11921 003c 9847     		blx	r3
 11922              	.LVL984:
2934:src/keys.c    ****      if ( create_screenshot(1) == 2 ) {
 11923              		.loc 1 2934 46 view .LVU3677
 11924 003e 0F4B     		ldr	r3, .L1183+12
 11925 0040 9847     		blx	r3
 11926              	.LVL985:
2935:src/keys.c    ****        // Was error just wait for confirmation
 11927              		.loc 1 2935 6 view .LVU3678
2935:src/keys.c    ****        // Was error just wait for confirmation
 11928              		.loc 1 2935 11 is_stmt 0 view .LVU3679
 11929 0042 0F4B     		ldr	r3, .L1183+16
 11930 0044 0120     		movs	r0, #1
 11931 0046 9847     		blx	r3
 11932              	.LVL986:
2935:src/keys.c    ****        // Was error just wait for confirmation
 11933              		.loc 1 2935 9 view .LVU3680
 11934 0048 0228     		cmp	r0, #2
 11935 004a 0DD0     		beq	.L1182
 11936              	.L1179:
ARM GAS  /tmp/ccy15zOt.s 			page 327


2939:src/keys.c    ****      return;
 11937              		.loc 1 2939 6 is_stmt 1 view .LVU3681
 11938 004c 094B     		ldr	r3, .L1183+4
 11939 004e 42F26020 		movw	r0, #8800
 11940 0052 9847     		blx	r3
 11941              	.LVL987:
2939:src/keys.c    ****      return;
 11942              		.loc 1 2939 31 view .LVU3682
 11943 0054 084B     		ldr	r3, .L1183+8
 11944 0056 0A20     		movs	r0, #10
 11945 0058 9847     		blx	r3
 11946              	.LVL988:
2939:src/keys.c    ****      return;
 11947              		.loc 1 2939 46 view .LVU3683
 11948 005a 084B     		ldr	r3, .L1183+12
2943:src/keys.c    ****  
 11949              		.loc 1 2943 2 is_stmt 0 view .LVU3684
 11950 005c 03B0     		add	sp, sp, #12
 11951              		.cfi_remember_state
 11952              		.cfi_def_cfa_offset 12
 11953              		@ sp needed
 11954 005e BDE83040 		pop	{r4, r5, lr}
 11955              		.cfi_restore 14
 11956              		.cfi_restore 5
 11957              		.cfi_restore 4
 11958              		.cfi_def_cfa_offset 0
 11959              	.LVL989:
2939:src/keys.c    ****      return;
 11960              		.loc 1 2939 46 view .LVU3685
 11961 0062 1847     		bx	r3	@ indirect register sibling call
 11962              	.LVL990:
 11963              	.L1175:
 11964              		.cfi_restore_state
2943:src/keys.c    ****  
 11965              		.loc 1 2943 2 view .LVU3686
 11966 0064 03B0     		add	sp, sp, #12
 11967              		.cfi_remember_state
 11968              		.cfi_def_cfa_offset 12
 11969              		@ sp needed
 11970 0066 30BD     		pop	{r4, r5, pc}
 11971              	.LVL991:
 11972              	.L1182:
 11973              		.cfi_restore_state
2937:src/keys.c    ****      }
 11974              		.loc 1 2937 8 is_stmt 1 view .LVU3687
 11975 0068 064B     		ldr	r3, .L1183+20
 11976 006a 9847     		blx	r3
 11977              	.LVL992:
 11978 006c EEE7     		b	.L1179
 11979              	.L1184:
 11980 006e 00BF     		.align	2
 11981              	.L1183:
 11982 0070 00000000 		.word	StateWhileOn
 11983 0074 F5020008 		.word	134218485
 11984 0078 05040008 		.word	134218757
 11985 007c F9020008 		.word	134218489
 11986 0080 79030008 		.word	134218617
ARM GAS  /tmp/ccy15zOt.s 			page 328


 11987 0084 99030008 		.word	134218649
 11988              		.cfi_endproc
 11989              	.LFE57:
 11991              		.comm	NonProgrammable,4,4
 11992              		.comm	GoFast,4,4
 11993              		.comm	OpCodeDisplayPending,4,4
 11994              		.comm	OpCode,4,4
 11995              		.comm	WasDataEntry,4,4
 11996              		.section	.bss.was_paused.9649,"aw",%nobits
 11997              		.align	2
 11998              		.set	.LANCHOR12,. + 0
 12001              	was_paused.9649:
 12002 0000 00000000 		.space	4
 12003              		.section	.rodata.alpha_arrows,"a"
 12004              		.align	2
 12007              	alpha_arrows:
 12008 0000 0D0E100F 		.ascii	"\015\016\020\017\003\004\237^\177"
 12008      03049F5E 
 12008      7F
 12009              		.section	.rodata.alpha_catalogue,"a"
 12010              		.align	2
 12013              	alpha_catalogue:
 12014 0000 0D4AC280 		.ascii	"\015J\302\200\236\256\012\242~\265\256k\252\356\274"
 12014      9EAE0AA2 
 12014      7EB5AE6B 
 12014      AAEEBC
 12015 000f 284AB0   		.ascii	"(J\260"
 12016              		.section	.rodata.alpha_compares,"a"
 12017              		.align	2
 12020              	alpha_compares:
 12021 0000 3C093D1D 		.ascii	"<\011=\035\012>[]{}"
 12021      0A3E5B5D 
 12021      7B7D
 12022              		.section	.rodata.alpha_letters,"a"
 12023              		.align	2
 12024              		.set	.LANCHOR3,. + 0
 12027              	alpha_letters:
 12028 0000 C0C1C2C3 		.ascii	"\300\301\302\303\210\304\305\306\307\204\310\311\312"
 12028      88C4C5C6 
 12028      C784C8C9 
 12028      CA
 12029 000d CB9ECCCD 		.ascii	"\313\236\314\315\316\317\320\321\322\323\324\025\325"
 12029      CECFD0D1 
 12029      D2D3D415 
 12029      D5
 12030 001a D618D8D9 		.ascii	"\326\030\330\331\332\333\334\001\031\002\335\032\336"
 12030      DADBDC01 
 12030      1902DD1A 
 12030      DE
 12031 0027 DF       		.ascii	"\337"
 12032              		.section	.rodata.alpha_letters_lower,"a"
 12033              		.align	2
 12034              		.set	.LANCHOR4,. + 0
 12037              	alpha_letters_lower:
 12038 0000 E0E1E2E3 		.ascii	"\340\341\342\343\211\344\345\346\347\205\350\351\352"
 12038      89E4E5E6 
 12038      E785E8E9 
ARM GAS  /tmp/ccy15zOt.s 			page 329


 12038      EA
 12039 000d EB9EECED 		.ascii	"\353\236\354\355\356\357\360\361\362\363\364\026\365"
 12039      EEEFF0F1 
 12039      F2F3F416 
 12039      F5
 12040 001a F618F8F9 		.ascii	"\366\030\370\371\372\373\374\001\031\002\375\032\376"
 12040      FAFBFC01 
 12040      1902FD1A 
 12040      FE
 12041 0027 FF       		.ascii	"\377"
 12042              		.section	.rodata.alpha_subscripts,"a"
 12043              		.align	2
 12046              	alpha_subscripts:
 12047 0000 B805B9BA 		.ascii	"\270\005\271\272\232\200\327\230\273\024\206\274\367"
 12047      9A80D798 
 12047      BB1486BC 
 12047      F7
 12048 000d 1BBDBE93 		.ascii	"\033\275\276\223\277\201\213\234\214\231\235\220\233"
 12048      BF818B9C 
 12048      8C999D90 
 12048      9B
 12049              		.section	.rodata.alpha_symbols,"a"
 12050              		.align	2
 12053              	alpha_symbols:
 12054 0000 2C3A3B27 		.ascii	",:;'\"*@_~%$\014\036\037\216\256\222`#"
 12054      222A405F 
 12054      7E25240C 
 12054      1E1F8EAE 
 12054      926023
 12055              		.section	.rodata.alphamap.9182,"a"
 12056              		.align	2
 12057              		.set	.LANCHOR9,. + 0
 12060              	alphamap.9182:
 12061 0000 41004100 		.ascii	"A\000A\000a\240"
 12061      61A0
 12062 0006 42004200 		.ascii	"B\000B\000b\241"
 12062      62A1
 12063 000c 43008200 		.ascii	"C\000\202\000c\242"
 12063      63A2
 12064 0012 44008300 		.ascii	"D\000\203\000d\243"
 12064      64A3
 12065 0018 450D4500 		.ascii	"E\015E\000e\244"
 12065      65A4
 12066 001e 46009400 		.ascii	"F\000\224\000f\264"
 12066      66B4
 12067 0024 47008200 		.ascii	"G\000\202\000g\242"
 12067      67A2
 12068 002a 48005800 		.ascii	"H\000X\000h\265"
 12068      68B5
 12069 0030 49004900 		.ascii	"I\000I\000i\250"
 12069      69A8
 12070 0036 4AAF0000 		.ascii	"J\257\000\000j\000"
 12070      6A00
 12071 003c 4B004B00 		.ascii	"K\000K\000k\251"
 12071      6BA9
 12072 0042 4C008A00 		.ascii	"L\000\212\000l\252"
 12072      6CAA
ARM GAS  /tmp/ccy15zOt.s 			page 330


 12073 0048 00004800 		.ascii	"\000\000H\000\000\246"
 12073      00A6
 12074 004e 4D00AB17 		.ascii	"M\000\253\027m\253"
 12074      6DAB
 12075 0054 4E084E95 		.ascii	"N\010N\225n\254"
 12075      6EAC
 12076 005a 4F0097AF 		.ascii	"O\000\227\257o\267"
 12076      6FB7
 12077 0060 00000000 		.ascii	"\000\000\000\000\000\000"
 12077      0000
 12078 0066 00000000 		.ascii	"\000\000\000\000\000\000"
 12078      0000
 12079 006c 50378F26 		.ascii	"P7\217&p\257"
 12079      70AF
 12080 0072 5138007C 		.ascii	"Q8\000|q\000"
 12080      7100
 12081 0078 5239520B 		.ascii	"R9R\013r\260"
 12081      72B0
 12082 007e 532F915C 		.ascii	"S/\221\\s\261"
 12082      73B1
 12083 0084 00000021 		.ascii	"\000\000\000!\000\000"
 12083      0000
 12084 008a 54345400 		.ascii	"T4T\000t\262"
 12084      74B2
 12085 0090 55350000 		.ascii	"U5\000\000u\000"
 12085      7500
 12086 0096 56360000 		.ascii	"V6\000\000v\000"
 12086      7600
 12087 009c 571C0000 		.ascii	"W\034\000\000w\000"
 12087      7700
 12088 00a2 0000003F 		.ascii	"\000\000\000?\000\000"
 12088      0000
 12089 00a8 58318D00 		.ascii	"X1\215\000x\255"
 12089      78AD
 12090 00ae 59325900 		.ascii	"Y2Y\000y\263"
 12090      79B3
 12091 00b4 5A335A00 		.ascii	"Z3Z\000z\245"
 12091      7AA5
 12092 00ba 2D282900 		.ascii	"-()\000\000\000"
 12092      0000
 12093 00c0 00000000 		.ascii	"\000\000\000\000\000\000"
 12093      0000
 12094 00c6 3A308720 		.ascii	":0\207 ;\247"
 12094      3BA7
 12095 00cc 2E2E9600 		.ascii	"..\226\000.\266"
 12095      2EB6
 12096 00d2 3F002100 		.ascii	"?\000!\000?\000"
 12096      3F00
 12097 00d8 202B3D00 		.ascii	" +=\000  "
 12097      2020
 12098 00de 00000000 		.ascii	"\000\000\000\000\000\000"
 12098      0000
 12099              		.section	.rodata.amap.9173,"a"
 12100              		.align	2
 12101              		.set	.LANCHOR10,. + 0
 12104              	amap.9173:
 12105 0000 04       		.byte	4
ARM GAS  /tmp/ccy15zOt.s 			page 331


 12106 0001 000D00   		.ascii	"\000\015\000"
 12107 0004 05       		.byte	5
 12108 0005 000E09   		.ascii	"\000\016\011"
 12109 0008 08       		.byte	8
 12110 0009 00000F   		.ascii	"\000\000\017"
 12111 000c 1F       		.byte	31
 12112 000d 00000C   		.ascii	"\000\000\014"
 12113 0010 21       		.byte	33
 12114 0011 00000A   		.ascii	"\000\000\012"
 12115 0014 26       		.byte	38
 12116 0015 00000B   		.ascii	"\000\000\013"
 12117              		.section	.rodata.catalogue,"a"
 12118              		.align	2
 12121              	catalogue:
 12122 0000 431A4660 		.ascii	"C\032F`\301_W\343\330\242;X\026\274}Dq\001\011tK\222"
 12122      C15F57E3 
 12122      D8A23B58 
 12122      16BC7D44 
 12122      71010974 
 12123 0016 F60D0643 		.ascii	"\366\015\006COV\235!H\2216\325\266iZfK\016o\027V\241"
 12123      4F569D21 
 12123      489136D5 
 12123      B6695A66 
 12123      4B0E6F17 
 12124 002c B4415C06 		.ascii	"\264A\\\006i%`\231vY\224`\032\306\354\303k[\024K\006"
 12124      69256099 
 12124      76599460 
 12124      1AC6ECC3 
 12124      6B5B144B 
 12125 0041 3DF05C07 		.ascii	"=\360\\\007\002>\321\243\013\017(\333&\021\263\015W"
 12125      023ED1A3 
 12125      0B0F28DB 
 12125      2611B30D 
 12125      57
 12126 0052 33290841 		.ascii	"3)\010A\320\224-\256+\033u\374\240'\253\202\250\237"
 12126      D0942DAE 
 12126      2B1B75FC 
 12126      A027AB82 
 12126      A89F
 12127 0064 ADEB5AE6 		.ascii	"\255\353Z\346\272\256\353\312\330\241*\331\224\221\235"
 12127      BAAEEBCA 
 12127      D8A12AD9 
 12127      94919D
 12128 0073 6799B671 		.ascii	"g\231\266q\260_\020\007\025\242o\326\325\251\241"
 12128      B05F1007 
 12128      15A26FD6 
 12128      D5A9A1
 12129              		.section	.rodata.catalogue_sizes.9447,"a"
 12130              		.align	2
 12131              		.set	.LANCHOR2,. + 0
 12134              	catalogue_sizes.9447:
 12135 0000 00681911 		.ascii	"\000h\031\0216<C~%4\016\023\012\011(\032LLX\016\023"
 12135      363C437E 
 12135      25340E13 
 12135      0A09281A 
 12135      4C4C580E 
 12136              		.section	.rodata.catalogues.9455,"a"
ARM GAS  /tmp/ccy15zOt.s 			page 332


 12137              		.align	2
 12138              		.set	.LANCHOR6,. + 0
 12141              	catalogues.9455:
 12142 0000 00000000 		.word	0
 12143 0004 00000000 		.word	catalogue
 12144 0008 00000000 		.word	cplx_catalogue
 12145 000c 00000000 		.word	stats_catalogue
 12146 0010 00000000 		.word	prob_catalogue
 12147 0014 00000000 		.word	int_catalogue
 12148 0018 00000000 		.word	prog_catalogue
 12149 001c 00000000 		.word	program_xfcn
 12150 0020 00000000 		.word	test_catalogue
 12151 0024 00000000 		.word	mode_catalogue
 12152 0028 00000000 		.word	alpha_catalogue
 12153 002c 00000000 		.word	alpha_symbols
 12154 0030 00000000 		.word	alpha_compares
 12155 0034 00000000 		.word	alpha_arrows
 12156 0038 00000000 		.word	alpha_letters
 12157 003c 00000000 		.word	alpha_subscripts
 12158 0040 00000000 		.word	0
 12159 0044 00000000 		.word	0
 12160 0048 00000000 		.word	0
 12161 004c 00000000 		.word	sums_catalogue
 12162 0050 00000000 		.word	matrix_catalogue
 12163              		.section	.rodata.cmap.9172,"a"
 12164              		.align	2
 12165              		.set	.LANCHOR11,. + 0
 12168              	cmap.9172:
 12169 0000 04       		.byte	4
 12170 0001 120012   		.ascii	"\022\000\022"
 12171 0004 05       		.byte	5
 12172 0005 090909   		.ascii	"\011\011\011"
 12173 0008 06       		.byte	6
 12174 0009 151515   		.ascii	"\025\025\025"
 12175 000c 0C       		.byte	12
 12176 000d 100011   		.ascii	"\020\000\021"
 12177 0010 19       		.byte	25
 12178 0011 040004   		.ascii	"\004\000\004"
 12179 0014 1A       		.byte	26
 12180 0015 030003   		.ascii	"\003\000\003"
 12181 0018 1B       		.byte	27
 12182 0019 130013   		.ascii	"\023\000\023"
 12183 001c 1C       		.byte	28
 12184 001d 140014   		.ascii	"\024\000\024"
 12185 0020 1E       		.byte	30
 12186 0021 171717   		.ascii	"\027\027\027"
 12187 0024 1F       		.byte	31
 12188 0025 080808   		.ascii	"\010\010\010"
 12189 0028 20       		.byte	32
 12190 0029 060606   		.ascii	"\006\006\006"
 12191 002c 21       		.byte	33
 12192 002d 010502   		.ascii	"\001\005\002"
 12193              		.section	.rodata.conv_catalogue,"a"
 12194              		.align	2
 12195              		.set	.LANCHOR5,. + 0
 12198              	conv_catalogue:
 12199 0000 DADB8C8A 		.ascii	"\332\333\214\212+-\3357'913\021\026\005\334\336\031"
ARM GAS  /tmp/ccy15zOt.s 			page 333


 12199      2B2DDD37 
 12199      27393133 
 12199      111605DC 
 12199      DE19
 12200 0012 1D1B1315 		.ascii	"\035\033\023\025\015\017\215\010\217\012*,GCE\027?0"
 12200      0D0F8D08 
 12200      8F0A2A2C 
 12200      47434517 
 12200      3F30
 12201 0024 32340400 		.ascii	"24\004\000\002\006&\" ($5/\001#\020\014\016!\022\024"
 12201      02062622 
 12201      20282435 
 12201      2F012310 
 12201      0C0E2112 
 12202 0039 3B181A1C 		.ascii	";\030\032\034\036).\01168>:<@%\337=\213\216\003\007"
 12202      1E292E09 
 12202      36383E3A 
 12202      3C4025DF 
 12202      3D8B8E03 
 12203 004e 4B49410B 		.ascii	"KIA\013JHFBD\037"
 12203      4A484642 
 12203      441F
 12204              		.section	.rodata.conv_mapping.9494,"a"
 12205              		.align	2
 12206              		.set	.LANCHOR8,. + 0
 12209              	conv_mapping.9494:
 12210 0000 8502     		.short	645
 12211 0002 8402     		.short	644
 12212 0004 8602     		.short	646
 12213 0006 8702     		.short	647
 12214 0008 8202     		.short	642
 12215 000a 8302     		.short	643
 12216 000c 3202     		.short	562
 12217 000e 3302     		.short	563
 12218 0010 3402     		.short	564
 12219 0012 3502     		.short	565
 12220 0014 3602     		.short	566
 12221 0016 3702     		.short	567
 12222              		.section	.rodata.cplx_catalogue,"a"
 12223              		.align	2
 12226              	cplx_catalogue:
 12227 0000 78278C6A 		.ascii	"x'\214j\001;\316\341\015\332x_W\332fvf\347\345\317{"
 12227      013BCEE1 
 12227      0DDA785F 
 12227      57DA6676 
 12227      66E7E5CF 
 12228 0015 9DB775DF 		.ascii	"\235\267u\337\242\353\011\265\370u\000"
 12228      A2EB09B5 
 12228      F87500
 12229              		.section	.rodata.disp.9310,"a"
 12230              		.align	2
 12231              		.set	.LANCHOR15,. + 0
 12234              	disp.9310:
 12235 0000 03       		.byte	3
 12236 0001 02       		.byte	2
 12237 0002 05       		.byte	5
 12238 0003 04       		.byte	4
ARM GAS  /tmp/ccy15zOt.s 			page 334


 12239              		.section	.rodata.int_catalogue,"a"
 12240              		.align	2
 12243              	int_catalogue:
 12244 0000 432F3306 		.ascii	"C/3\006\365=\233\342Y\275\020\257d4\365i\331&\240\224"
 12244      F53D9BE2 
 12244      59BD10AF 
 12244      6434F569 
 12244      D926A094 
 12245 0014 BE6FA65D 		.ascii	"\276o\246]\226\\\231F\261qn\3146\264\225\273n\363\336"
 12245      965C9946 
 12245      B1716ECC 
 12245      36B495BB 
 12245      6EF3DE
 12246 0027 EEBC2F41 		.ascii	"\356\274/A\240\373\274o,=\204\015L\244-\256+\033z\340"
 12246      A0FBBC6F 
 12246      2C3D840D 
 12246      4CA42DAE 
 12246      2B1B7AE0 
 12247 003b AAADEB5A 		.ascii	"\252\255\353Z\346\272\256\353\312\330\253I\020\007\031"
 12247      E6BAAEEB 
 12247      CAD8AB49 
 12247      100719
 12248 004a C7       		.ascii	"\307"
 12249              		.section	.rodata.linear_key_map.9143,"a"
 12250              		.align	2
 12251              		.set	.LANCHOR1,. + 0
 12254              	linear_key_map.9143:
 12255 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\011\012\013\014"
 12255      04050607 
 12255      08090A0B 
 12255      0C
 12256 000d 0D0E0F10 		.ascii	"\015\016\017\020\000\021\022\023\024\025\000\026\027"
 12256      00111213 
 12256      14150016 
 12256      17
 12257 001a 18191A00 		.ascii	"\030\031\032\000\033\034\035\036\037\000 !\"#$%%%%%"
 12257      1B1C1D1E 
 12257      1F002021 
 12257      22232425 
 12257      25252525 
 12258 002e 25       		.ascii	"%"
 12259              		.section	.rodata.linear_key_map.9147,"a"
 12260              		.align	2
 12261              		.set	.LANCHOR18,. + 0
 12264              	linear_key_map.9147:
 12265 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\"\"\"\011\012\013"
 12265      04050607 
 12265      08222222 
 12265      090A0B
 12266 000f 0C0D000E 		.ascii	"\014\015\000\016\017\020\021\022\000\023\024\025\026"
 12266      0F101112 
 12266      00131415 
 12266      16
 12267 001c 17001819 		.ascii	"\027\000\030\031\032\033\034\000\035\036\037 !\"\"\""
 12267      1A1B1C00 
 12267      1D1E1F20 
 12267      21222222 
ARM GAS  /tmp/ccy15zOt.s 			page 335


 12268 002c 040522   		.ascii	"\004\005\""
 12269              		.section	.rodata.map.9159,"a"
 12270              		.align	2
 12271              		.set	.LANCHOR0,. + 0
 12274              	map.9159:
 12275 0000 E8E9EAEB 		.ascii	"\350\351\352\353\377\177\177\177mnol\377\377\377\377"
 12275      FF7F7F7F 
 12275      6D6E6F6C 
 12275      FFFFFFFF 
 12276 0010 FF7F0708 		.ascii	"\377\177\007\010\011\177\177\347\005\006\177\177\344"
 12276      097F7FE7 
 12276      05067F7F 
 12276      E4
 12277 001d E5E67FFF 		.ascii	"\345\346\177\377\000\360\177\177\177"
 12277      00F07F7F 
 12277      7F
 12278              		.section	.rodata.matrix_catalogue,"a"
 12279              		.align	2
 12282              	matrix_catalogue:
 12283 0000 62DC4364 		.ascii	"b\334Cd\3305\334#m\205nXf\341\301n\230\2461\303bX\206"
 12283      D835DC23 
 12283      6D856E58 
 12283      66E1C16E 
 12283      98A631C3 
 12284 0017 1C       		.ascii	"\034"
 12285              		.section	.rodata.mode_catalogue,"a"
 12286              		.align	2
 12289              	mode_catalogue:
 12290 0000 2948C290 		.ascii	")H\302\220\213\276\306c\250\351\037\210\001\374|\270"
 12290      8BBEC663 
 12290      A8E91F88 
 12290      01FC7CB8 
 12291 0010 09818CCF 		.ascii	"\011\201\214\317$I\302lb\031I2H\232\0310\202\020\203"
 12291      2449C26C 
 12291      62194932 
 12291      489A1930 
 12291      821083
 12292 0023 C3704220 		.ascii	"\303pB \2072\012c\020\3072Js\024\306#\214\340\3409\301"
 12292      87320A63 
 12292      10C7324A 
 12292      7314C623 
 12292      8CE0E039 
 12293 0038 C862148D 		.ascii	"\310b\024\215\273\0173\310\231"
 12293      BB0F33C8 
 12293      99
 12294              		.section	.rodata.op_map.9226,"a"
 12295              		.align	2
 12296              		.set	.LANCHOR22,. + 0
 12299              	op_map.9226:
 12300 0000 1500     		.short	21
 12301 0002 0B02     		.short	523
 12302 0004 0003     		.short	768
 12303 0006 0A02     		.short	522
 12304 0008 1300     		.short	19
 12305 000a 1400     		.short	20
 12306 000c 0300     		.short	3
 12307 000e 0A00     		.short	10
ARM GAS  /tmp/ccy15zOt.s 			page 336


 12308 0010 0701     		.short	263
 12309 0012 0000     		.short	0
 12310 0014 6531     		.short	12645
 12311 0016 0300     		.short	3
 12312 0018 0200     		.short	2
 12313 001a 0100     		.short	1
 12314 001c 4400     		.short	68
 12315 001e 0C00     		.short	12
 12316 0020 0D00     		.short	13
 12317 0022 0E00     		.short	14
 12318 0024 0403     		.short	772
 12319 0026 2F00     		.short	47
 12320 0028 0900     		.short	9
 12321 002a 0A00     		.short	10
 12322 002c 0B00     		.short	11
 12323 002e 0303     		.short	771
 12324 0030 2E00     		.short	46
 12325 0032 0600     		.short	6
 12326 0034 0700     		.short	7
 12327 0036 0800     		.short	8
 12328 0038 0203     		.short	770
 12329 003a 3300     		.short	51
 12330 003c 0500     		.short	5
 12331 003e 0400     		.short	4
 12332 0040 3B01     		.short	315
 12333 0042 0103     		.short	769
 12334 0044 0001     		.short	256
 12335              		.section	.rodata.op_map.9249,"a"
 12336              		.align	2
 12337              		.set	.LANCHOR19,. + 0
 12340              	op_map.9249:
 12341 0000 0100     		.short	1
 12342 0002 0000     		.short	0
 12343 0004 20F2     		.short	-3552
 12344 0006 23F2     		.short	-3549
 12345 0008 21F2     		.short	-3551
 12346 000a 24F2     		.short	-3548
 12347 000c 22F2     		.short	-3550
 12348 000e 25F2     		.short	-3547
 12349 0010 47F1     		.short	-3769
 12350 0012 46F1     		.short	-3770
 12351 0014 4E01     		.short	334
 12352 0016 4D01     		.short	333
 12353 0018 5C01     		.short	348
 12354 001a 35F1     		.short	-3787
 12355 001c 5B01     		.short	347
 12356 001e 36F1     		.short	-3786
 12357 0020 3301     		.short	307
 12358 0022 37F1     		.short	-3785
 12359 0024 3300     		.short	51
 12360 0026 0C01     		.short	268
 12361 0028 2B00     		.short	43
 12362 002a 2C00     		.short	44
 12363 002c 028B     		.short	-29950
 12364 002e 088B     		.short	-29944
 12365 0030 0A8B     		.short	-29942
 12366 0032 108B     		.short	-29936
ARM GAS  /tmp/ccy15zOt.s 			page 337


 12367 0034 4301     		.short	323
 12368 0036 3D01     		.short	317
 12369 0038 0902     		.short	521
 12370 003a 0802     		.short	520
 12371 003c 1002     		.short	528
 12372 003e 0D02     		.short	525
 12373 0040 0F02     		.short	527
 12374 0042 0E02     		.short	526
 12375 0044 0003     		.short	768
 12376 0046 0803     		.short	776
 12377 0048 0BF2     		.short	-3573
 12378 004a 1603     		.short	790
 12379 004c 1203     		.short	786
 12380 004e 1303     		.short	787
 12381 0050 3DF2     		.short	-3523
 12382 0052 3EF2     		.short	-3522
 12383 0054 24F1     		.short	-3804
 12384 0056 1EF1     		.short	-3810
 12385 0058 75F2     		.short	-3467
 12386 005a 27F1     		.short	-3801
 12387 005c 0A02     		.short	522
 12388 005e 1602     		.short	534
 12389 0060 5100     		.short	81
 12390 0062 5200     		.short	82
 12391 0064 0000     		.short	0
 12392 0066 0100     		.short	1
 12393 0068 48F0     		.short	-4024
 12394 006a 4BF0     		.short	-4021
 12395 006c 47F0     		.short	-4025
 12396 006e 46F0     		.short	-4026
 12397 0070 77F2     		.short	-3465
 12398 0072 78F2     		.short	-3464
 12399 0074 3300     		.short	51
 12400 0076 3300     		.short	51
 12401 0078 0502     		.short	517
 12402 007a 0602     		.short	518
 12403 007c 0402     		.short	516
 12404 007e 0002     		.short	512
 12405 0080 4200     		.short	66
 12406 0082 3801     		.short	312
 12407 0084 3A00     		.short	58
 12408 0086 3B00     		.short	59
 12409 0088 0001     		.short	256
 12410 008a 0001     		.short	256
 12411              		.section	.rodata.op_map.9272,"a"
 12412              		.align	2
 12413              		.set	.LANCHOR21,. + 0
 12416              	op_map.9272:
 12417 0000 4C80     		.short	-32692
 12418 0002 4D80     		.short	-32691
 12419 0004 4E80     		.short	-32690
 12420 0006 4F80     		.short	-32689
 12421 0008 3300     		.short	51
 12422 000a 3300     		.short	51
 12423 000c 3300     		.short	51
 12424 000e 2180     		.short	-32735
 12425 0010 0801     		.short	264
ARM GAS  /tmp/ccy15zOt.s 			page 338


 12426 0012 8780     		.short	-32633
 12427 0014 1180     		.short	-32751
 12428 0016 7C02     		.short	636
 12429 0018 5560     		.short	24661
 12430 001a 3F01     		.short	319
 12431 001c 4580     		.short	-32699
 12432 001e 1C03     		.short	796
 12433 0020 1D03     		.short	797
 12434 0022 1E03     		.short	798
 12435 0024 0603     		.short	774
 12436 0026 2F02     		.short	559
 12437 0028 3300     		.short	51
 12438 002a 3300     		.short	51
 12439 002c 3300     		.short	51
 12440 002e 3300     		.short	51
 12441 0030 3300     		.short	51
 12442 0032 3300     		.short	51
 12443 0034 3300     		.short	51
 12444 0036 3300     		.short	51
 12445 0038 1640     		.short	16406
 12446 003a 0201     		.short	258
 12447 003c 6D80     		.short	-32659
 12448 003e 5001     		.short	336
 12449 0040 3300     		.short	51
 12450 0042 1540     		.short	16405
 12451 0044 0001     		.short	256
 12452              		.section	.rodata.op_map.9282,"a"
 12453              		.align	2
 12454              		.set	.LANCHOR17,. + 0
 12457              	op_map.9282:
 12458 0000 0100     		.short	1
 12459 0002 0100     		.short	1
 12460 0004 0000     		.short	0
 12461 0006 0000     		.short	0
 12462 0008 0B05     		.short	1291
 12463 000a 2005     		.short	1312
 12464 000c 2305     		.short	1315
 12465 000e 3300     		.short	51
 12466 0010 0006     		.short	1536
 12467 0012 2105     		.short	1313
 12468 0014 2405     		.short	1316
 12469 0016 3300     		.short	51
 12470 0018 0A05     		.short	1290
 12471 001a 2205     		.short	1314
 12472 001c 2505     		.short	1317
 12473 001e 3300     		.short	51
 12474 0020 3300     		.short	51
 12475 0022 4701     		.short	327
 12476 0024 4601     		.short	326
 12477 0026 3300     		.short	51
 12478 0028 3300     		.short	51
 12479 002a 3300     		.short	51
 12480 002c 3300     		.short	51
 12481 002e 3300     		.short	51
 12482 0030 15FF     		.short	-235
 12483 0032 3300     		.short	51
 12484 0034 3300     		.short	51
ARM GAS  /tmp/ccy15zOt.s 			page 339


 12485 0036 3300     		.short	51
 12486 0038 1AFF     		.short	-230
 12487 003a 3300     		.short	51
 12488 003c 3300     		.short	51
 12489 003e 8CFF     		.short	-116
 12490 0040 0901     		.short	265
 12491 0042 3300     		.short	51
 12492 0044 3300     		.short	51
 12493 0046 0A01     		.short	266
 12494 0048 0B01     		.short	267
 12495 004a 3300     		.short	51
 12496 004c 0D01     		.short	269
 12497 004e 0D01     		.short	269
 12498 0050 663F     		.short	16230
 12499 0052 3300     		.short	51
 12500 0054 3300     		.short	51
 12501 0056 1FFF     		.short	-225
 12502 0058 3805     		.short	1336
 12503 005a 3300     		.short	51
 12504 005c 3300     		.short	51
 12505 005e 3905     		.short	1337
 12506 0060 5521     		.short	8533
 12507 0062 3300     		.short	51
 12508 0064 3300     		.short	51
 12509 0066 5521     		.short	8533
 12510 0068 3300     		.short	51
 12511 006a 3300     		.short	51
 12512 006c 3300     		.short	51
 12513 006e 3300     		.short	51
 12514 0070 3300     		.short	51
 12515 0072 0905     		.short	1289
 12516 0074 0805     		.short	1288
 12517 0076 3300     		.short	51
 12518 0078 07A8     		.short	-22521
 12519 007a 1005     		.short	1296
 12520 007c 0D05     		.short	1293
 12521 007e 3300     		.short	51
 12522 0080 08A8     		.short	-22520
 12523 0082 0F05     		.short	1295
 12524 0084 0E05     		.short	1294
 12525 0086 3300     		.short	51
 12526 0088 09A8     		.short	-22519
 12527 008a 0006     		.short	1536
 12528 008c 0806     		.short	1544
 12529 008e 3300     		.short	51
 12530 0090 0406     		.short	1540
 12531 0092 0B05     		.short	1291
 12532 0094 1606     		.short	1558
 12533 0096 3300     		.short	51
 12534 0098 3300     		.short	51
 12535 009a 1206     		.short	1554
 12536 009c 1306     		.short	1555
 12537 009e 2F05     		.short	1327
 12538 00a0 04A8     		.short	-22524
 12539 00a2 3300     		.short	51
 12540 00a4 3300     		.short	51
 12541 00a6 3300     		.short	51
ARM GAS  /tmp/ccy15zOt.s 			page 340


 12542 00a8 05A8     		.short	-22523
 12543 00aa 3300     		.short	51
 12544 00ac 3300     		.short	51
 12545 00ae 3300     		.short	51
 12546 00b0 06A8     		.short	-22522
 12547 00b2 3300     		.short	51
 12548 00b4 3300     		.short	51
 12549 00b6 3300     		.short	51
 12550 00b8 0306     		.short	1539
 12551 00ba 0A05     		.short	1290
 12552 00bc 1605     		.short	1302
 12553 00be 1605     		.short	1302
 12554 00c0 3300     		.short	51
 12555 00c2 3300     		.short	51
 12556 00c4 3300     		.short	51
 12557 00c6 3300     		.short	51
 12558 00c8 01A8     		.short	-22527
 12559 00ca 0000     		.short	0
 12560 00cc 0100     		.short	1
 12561 00ce 3300     		.short	51
 12562 00d0 02A8     		.short	-22526
 12563 00d2 3300     		.short	51
 12564 00d4 3300     		.short	51
 12565 00d6 3300     		.short	51
 12566 00d8 03A8     		.short	-22525
 12567 00da 3300     		.short	51
 12568 00dc 3300     		.short	51
 12569 00de 3300     		.short	51
 12570 00e0 0206     		.short	1538
 12571 00e2 3300     		.short	51
 12572 00e4 3300     		.short	51
 12573 00e6 3300     		.short	51
 12574 00e8 3300     		.short	51
 12575 00ea 3300     		.short	51
 12576 00ec 3300     		.short	51
 12577 00ee 0201     		.short	258
 12578 00f0 00A8     		.short	-22528
 12579 00f2 0505     		.short	1285
 12580 00f4 0605     		.short	1286
 12581 00f6 3300     		.short	51
 12582 00f8 B801     		.short	440
 12583 00fa 0405     		.short	1284
 12584 00fc 0005     		.short	1280
 12585 00fe 3300     		.short	51
 12586 0100 3300     		.short	51
 12587 0102 3300     		.short	51
 12588 0104 3300     		.short	51
 12589 0106 3300     		.short	51
 12590 0108 0106     		.short	1537
 12591 010a 3300     		.short	51
 12592 010c 3300     		.short	51
 12593 010e 3300     		.short	51
 12594 0110 0001     		.short	256
 12595 0112 0001     		.short	256
 12596 0114 0001     		.short	256
 12597 0116 0001     		.short	256
 12598              		.section	.rodata.op_map.9294,"a"
ARM GAS  /tmp/ccy15zOt.s 			page 341


 12599              		.align	2
 12600              		.set	.LANCHOR13,. + 0
 12603              	op_map.9294:
 12604 0000 2A27     		.ascii	"*'"
 12605 0002 2B28     		.ascii	"+("
 12606 0004 2C29     		.ascii	",)"
 12607              		.section	.rodata.op_map.9309,"a"
 12608              		.align	2
 12609              		.set	.LANCHOR14,. + 0
 12612              	op_map.9309:
 12613 0000 1A02     		.short	538
 12614 0002 7B02     		.short	635
 12615 0004 1B02     		.short	539
 12616 0006 7A02     		.short	634
 12617 0008 1C02     		.short	540
 12618 000a 3300     		.short	51
 12619              		.section	.rodata.op_map2.9250,"a"
 12620              		.align	2
 12621              		.set	.LANCHOR20,. + 0
 12624              	op_map2.9250:
 12625 0000 3300     		.short	51
 12626 0002 3300     		.short	51
 12627 0004 0003     		.short	768
 12628 0006 0A02     		.short	522
 12629              		.section	.rodata.opcode_breaks,"a"
 12630              		.align	2
 12631              		.set	.LANCHOR7,. + 0
 12634              	opcode_breaks:
 12635 0000 34C0992F 		.ascii	"4\300\231/\014\231/"
 12635      0C992F
 12636              		.section	.rodata.prob_catalogue,"a"
 12637              		.align	2
 12640              	prob_catalogue:
 12641 0000 50D42581 		.ascii	"P\324%\201DV\025u\235YP\023\365}ANU\324\351;S\024\265"
 12641      44561575 
 12641      9D595013 
 12641      F57D414E 
 12641      55D4E93B 
 12642 0017 8D4D5495 		.ascii	"\215MT\225\025\225SUUE\231VS\324\345\221PRT\205\211"
 12642      15955355 
 12642      55459956 
 12642      53D4E591 
 12642      50525485 
 12643 002c 4A519455 		.ascii	"JQ\224U\205GM\225\304\3358OS\305y>V\223\004\3215L\325"
 12643      85474D95 
 12643      C4DD384F 
 12643      53C5793E 
 12643      569304D1 
 12644 0043 B0       		.ascii	"\260"
 12645              		.section	.rodata.prog_catalogue,"a"
 12646              		.align	2
 12649              	prog_catalogue:
 12650 0000 B1CD1C6C 		.ascii	"\261\315\034ly\035G\201\310t*1\233@B\263,\341\272\222"
 12650      791D4781 
 12650      C8742A31 
 12650      9B4042B3 
 12650      2CE1BA92 
ARM GAS  /tmp/ccy15zOt.s 			page 342


 12651 0014 B8CE0B66 		.ascii	"\270\316\013f\3323-\0336\317\302\216#\220\3478\316\214"
 12651      DA332D1B 
 12651      36CFC28E 
 12651      2390E738 
 12651      CE8C
 12652 0026 30DE3770 		.ascii	"0\3367p\260\320\3349G\003\233\011\254\315\361\330\315"
 12652      B0D0DC39 
 12652      47039B09 
 12652      ACCDF1D8 
 12652      CD
 12653 0037 1B4B12BC 		.ascii	"\033K\022\274\262,\016\033\030\322\015\353#\002\244"
 12653      B22C0E1B 
 12653      18D20DEB 
 12653      2302A4
 12654 0046 2A7030E8 		.ascii	"*p0\350\313\250\252<\000\256+o\374X"
 12654      CBA8AA3C 
 12654      00AE2B6F 
 12654      FC58
 12655              		.section	.rodata.program_xfcn,"a"
 12656              		.align	2
 12659              	program_xfcn:
 12660 0000 431A4662 		.ascii	"C\032Fb\3630W\325\372\365=\212#\265\201k\333\342Y\275"
 12660      F33057D5 
 12660      FAF53D8A 
 12660      23B5816B 
 12660      DBE259BD 
 12661 0014 1F511C40 		.ascii	"\037Q\034@B]\022\344\275\203A\257d4\365i\322\024\211"
 12661      425D12E4 
 12661      BD8341AF 
 12661      6434F569 
 12661      D21489
 12662 0027 136D5B66 		.ascii	"\023m[f\225\246d\260\346\361uj\011F\321\005p\031\244"
 12662      95A664B0 
 12662      E6F1756A 
 12662      0946D105 
 12662      7019A4
 12663 003a 9582BE6F 		.ascii	"\225\202\276o\246]\226\\\231F\001\254\\[\263\015\255"
 12663      A65D965C 
 12663      994601AC 
 12663      5C5BB30D 
 12663      AD
 12664 004b 6C512C18 		.ascii	"lQ,\030\225\273n\363\336\356\2740[\323\001\300\206\203"
 12664      95BB6EF3 
 12664      DEEEBC30 
 12664      5BD301C0 
 12664      8683
 12665 005d ED1ABC4C 		.ascii	"\355\032\274L+\313\017(\333&\021\263\015W3)\010A\320"
 12665      2BCB0F28 
 12665      DB2611B3 
 12665      0D573329 
 12665      0841D0
 12666 0070 942DAE2B 		.ascii	"\224-\256+\033u\374\240'\253\202\250\237\255\353Z\346"
 12666      1B75FCA0 
 12666      27AB82A8 
 12666      9FADEB5A 
 12666      E6
 12667 0081 BAAEEBCA 		.ascii	"\272\256\353\312\330\241*\331\224\221\235g\231\266q"
ARM GAS  /tmp/ccy15zOt.s 			page 343


 12667      D8A12AD9 
 12667      94919D67 
 12667      99B671
 12668 0090 B05F1007 		.ascii	"\260_\020\007\031\305h\233\365\265jh\\p"
 12668      19C5689B 
 12668      F5B56A68 
 12668      5C70
 12669              		.section	.rodata.smap.9174,"a"
 12670              		.align	2
 12671              		.set	.LANCHOR16,. + 0
 12674              	smap.9174:
 12675 0000 00010002 		.ascii	"\000\001\000\002"
 12676              		.section	.rodata.stats_catalogue,"a"
 12677              		.align	2
 12680              	stats_catalogue:
 12681 0000 1805C1A0 		.ascii	"\030\005\301\240]\027\311qXa\026\205\225\240T\027\205"
 12681      5D17C971 
 12681      58611685 
 12681      95A05417 
 12681      85
 12682 0011 514C575A 		.ascii	"QLWZ\200"
 12682      80
 12683              		.section	.rodata.sums_catalogue,"a"
 12684              		.align	2
 12687              	sums_catalogue:
 12688 0000 1444B134 		.ascii	"\024D\2614J\023\204\301 E\021\004\361\034I\021\205\000"
 12688      4A1384C1 
 12688      20451104 
 12688      F11C4911 
 12688      8500
 12689              		.section	.rodata.test_catalogue,"a"
 12690              		.align	2
 12693              	test_catalogue:
 12694 0000 BE2F7C54 		.ascii	"\276/|T\353/\313\333\226\351\272\356\242\362\344\271"
 12694      EB2FCBDB 
 12694      96E9BAEE 
 12694      A2F2E4B9 
 12695 0010 AE8B9CD3 		.ascii	"\256\213\234\323.\357\353L\2356\213\202\370\2725\013"
 12695      2EEFEB4C 
 12695      9D368B82 
 12695      F8BA350B 
 12696 0020 9340F0B0 		.ascii	"\223@\360\260,\023T\326\257\354;\010\267<@"
 12696      2C1354D6 
 12696      AFEC3B08 
 12696      B73C40
 12697              		.text
 12698              	.Letext0:
 12699              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 12700              		.file 3 "dmcp/dmcp.h"
 12701              		.file 4 "src/decNumber/decContext.h"
 12702              		.file 5 "src/decNumber/decNumber.h"
 12703              		.file 6 "src/decNumber/decimal64.h"
 12704              		.file 7 "src/decNumber/decimal128.h"
 12705              		.file 8 "src/xeq.h"
 12706              		.file 9 "src/data.h"
 12707              		.file 10 "src/keys.h"
 12708              		.file 11 "src/display.h"
ARM GAS  /tmp/ccy15zOt.s 			page 344


 12709              		.file 12 "src/consts.h"
 12710              		.file 13 "src/storage.h"
 12711              		.file 14 "src/stats.h"
 12712              		.file 15 "src/catalogues.h"
 12713              		.file 16 "src/lcd.h"
 12714              		.file 17 "src/int.h"
ARM GAS  /tmp/ccy15zOt.s 			page 345


DEFINED SYMBOLS
                            *ABS*:0000000000000000 keys.c
     /tmp/ccy15zOt.s:18     .text.gtodot_digit:0000000000000000 $t
     /tmp/ccy15zOt.s:26     .text.gtodot_digit:0000000000000000 gtodot_digit
     /tmp/ccy15zOt.s:110    .text.gtodot_digit:0000000000000054 $d
     /tmp/ccy15zOt.s:117    .text.check_f_key:0000000000000000 $t
     /tmp/ccy15zOt.s:124    .text.check_f_key:0000000000000000 check_f_key
     /tmp/ccy15zOt.s:202    .text.check_f_key:0000000000000038 $d
     /tmp/ccy15zOt.s:208    .text.is_label_or_end_at:0000000000000000 $t
     /tmp/ccy15zOt.s:215    .text.is_label_or_end_at:0000000000000000 is_label_or_end_at
     /tmp/ccy15zOt.s:271    .text.advance_to_next_label:0000000000000000 $t
     /tmp/ccy15zOt.s:278    .text.advance_to_next_label:0000000000000000 advance_to_next_label
     /tmp/ccy15zOt.s:359    .text.advance_to_next_label:0000000000000048 $d
     /tmp/ccy15zOt.s:364    .text.init_cat:0000000000000000 $t
     /tmp/ccy15zOt.s:371    .text.init_cat:0000000000000000 init_cat
     /tmp/ccy15zOt.s:684    .text.init_cat:00000000000000e4 $d
     /tmp/ccy15zOt.s:690    .text.advance_to_previous_label:0000000000000000 $t
     /tmp/ccy15zOt.s:697    .text.advance_to_previous_label:0000000000000000 advance_to_previous_label
     /tmp/ccy15zOt.s:782    .text.advance_to_previous_label:000000000000004c $d
     /tmp/ccy15zOt.s:787    .text.check_confirm.part.0:0000000000000000 $t
     /tmp/ccy15zOt.s:794    .text.check_confirm.part.0:0000000000000000 check_confirm.part.0
     /tmp/ccy15zOt.s:848    .text.check_confirm.part.0:0000000000000028 $d
                            *COM*:0000000000000004 NonProgrammable
     /tmp/ccy15zOt.s:855    .text.init_arg.part.0:0000000000000000 $t
     /tmp/ccy15zOt.s:862    .text.init_arg.part.0:0000000000000000 init_arg.part.0
     /tmp/ccy15zOt.s:904    .text.init_arg.part.0:0000000000000024 $d
     /tmp/ccy15zOt.s:909    .text.reset_arg:0000000000000000 $t
     /tmp/ccy15zOt.s:916    .text.reset_arg:0000000000000000 reset_arg
     /tmp/ccy15zOt.s:960    .text.reset_arg:0000000000000018 $d
     /tmp/ccy15zOt.s:965    .text.arg_eval:0000000000000000 $t
     /tmp/ccy15zOt.s:972    .text.arg_eval:0000000000000000 arg_eval
     /tmp/ccy15zOt.s:1094   .text.arg_eval:0000000000000074 $d
     /tmp/ccy15zOt.s:1101   .text.process_arg_shuffle:0000000000000000 $t
     /tmp/ccy15zOt.s:1108   .text.process_arg_shuffle:0000000000000000 process_arg_shuffle
     /tmp/ccy15zOt.s:1166   .text.process_arg_shuffle:000000000000002c $d
     /tmp/ccy15zOt.s:1171   .text.arg_digit:0000000000000000 $t
     /tmp/ccy15zOt.s:1178   .text.arg_digit:0000000000000000 arg_digit
     /tmp/ccy15zOt.s:1403   .text.arg_digit:00000000000000c8 $d
     /tmp/ccy15zOt.s:1411   .text.intltr:0000000000000000 $t
     /tmp/ccy15zOt.s:1418   .text.intltr:0000000000000000 intltr
     /tmp/ccy15zOt.s:1481   .text.intltr:0000000000000030 $d
     /tmp/ccy15zOt.s:1487   .text.set_window:0000000000000000 $t
     /tmp/ccy15zOt.s:1494   .text.set_window:0000000000000000 set_window
     /tmp/ccy15zOt.s:1641   .text.set_window:000000000000008c $d
     /tmp/ccy15zOt.s:1648   .text.arg_storcl:0000000000000000 $t
     /tmp/ccy15zOt.s:1655   .text.arg_storcl:0000000000000000 arg_storcl
     /tmp/ccy15zOt.s:1771   .text.arg_storcl:0000000000000040 $d
     /tmp/ccy15zOt.s:1776   .text.process_arg:0000000000000000 $t
     /tmp/ccy15zOt.s:1783   .text.process_arg:0000000000000000 process_arg
     /tmp/ccy15zOt.s:1993   .text.process_arg:0000000000000092 $d
     /tmp/ccy15zOt.s:2040   .text.process_arg:00000000000000ee $t
     /tmp/ccy15zOt.s:2071   .text.process_arg:0000000000000114 $d
     /tmp/ccy15zOt.s:2525   .text.process_arg:00000000000002ac $d
     /tmp/ccy15zOt.s:2537   .text.process_arg:00000000000002c0 $t
     /tmp/ccy15zOt.s:2956   .text.process_arg:0000000000000468 $d
     /tmp/ccy15zOt.s:2961   .text.cur_shift:0000000000000000 $t
     /tmp/ccy15zOt.s:2969   .text.cur_shift:0000000000000000 cur_shift
ARM GAS  /tmp/ccy15zOt.s 			page 346


     /tmp/ccy15zOt.s:2997   .text.cur_shift:0000000000000010 $d
     /tmp/ccy15zOt.s:3002   .text.reset_shift:0000000000000000 $t
     /tmp/ccy15zOt.s:3010   .text.reset_shift:0000000000000000 reset_shift
     /tmp/ccy15zOt.s:3068   .text.reset_shift:0000000000000014 $d
     /tmp/ccy15zOt.s:3073   .text.keycode_to_row_column:0000000000000000 $t
     /tmp/ccy15zOt.s:3081   .text.keycode_to_row_column:0000000000000000 keycode_to_row_column
     /tmp/ccy15zOt.s:3109   .text.keycode_to_row_column:0000000000000020 $d
     /tmp/ccy15zOt.s:3114   .text.row_column_to_keycode:0000000000000000 $t
     /tmp/ccy15zOt.s:3122   .text.row_column_to_keycode:0000000000000000 row_column_to_keycode
     /tmp/ccy15zOt.s:3180   .text.row_column_to_keycode:000000000000003c $d
     /tmp/ccy15zOt.s:3185   .text.keycode_to_digit_or_register:0000000000000000 $t
     /tmp/ccy15zOt.s:3193   .text.keycode_to_digit_or_register:0000000000000000 keycode_to_digit_or_register
     /tmp/ccy15zOt.s:3229   .text.keycode_to_digit_or_register:000000000000000c $d
     /tmp/ccy15zOt.s:3235   .text.init_state:0000000000000000 $t
     /tmp/ccy15zOt.s:3243   .text.init_state:0000000000000000 init_state
     /tmp/ccy15zOt.s:3349   .text.init_state:000000000000005c $d
     /tmp/ccy15zOt.s:3355   .text.soft_init_state:0000000000000000 $t
     /tmp/ccy15zOt.s:3363   .text.soft_init_state:0000000000000000 soft_init_state
     /tmp/ccy15zOt.s:3458   .text.soft_init_state:0000000000000048 $d
     /tmp/ccy15zOt.s:3464   .text.current_catalogue_max:0000000000000000 $t
     /tmp/ccy15zOt.s:3472   .text.current_catalogue_max:0000000000000000 current_catalogue_max
     /tmp/ccy15zOt.s:3493   .text.current_catalogue_max:000000000000000c $d
     /tmp/ccy15zOt.s:3499   .text.current_catalogue:0000000000000000 $t
     /tmp/ccy15zOt.s:3507   .text.current_catalogue:0000000000000000 current_catalogue
     /tmp/ccy15zOt.s:3763   .text.current_catalogue:00000000000000c8 $d
     /tmp/ccy15zOt.s:3773   .text.process_catalogue:0000000000000000 $t
     /tmp/ccy15zOt.s:3780   .text.process_catalogue:0000000000000000 process_catalogue
     /tmp/ccy15zOt.s:4109   .text.process_catalogue:00000000000000fe $d
     /tmp/ccy15zOt.s:4141   .text.process_catalogue:000000000000011e $t
     /tmp/ccy15zOt.s:4649   .text.process_catalogue:00000000000002dc $d
     /tmp/ccy15zOt.s:4670   .text.process_catalogue:00000000000002fc $t
     /tmp/ccy15zOt.s:4700   .text.find_pos:0000000000000000 $t
     /tmp/ccy15zOt.s:4708   .text.find_pos:0000000000000000 find_pos
     /tmp/ccy15zOt.s:4881   .text.find_pos:0000000000000080 $d
     /tmp/ccy15zOt.s:4887   .text.get_alpha_state:0000000000000000 $t
     /tmp/ccy15zOt.s:4895   .text.get_alpha_state:0000000000000000 get_alpha_state
     /tmp/ccy15zOt.s:4927   .text.get_alpha_state:0000000000000020 $d
     /tmp/ccy15zOt.s:4933   .rodata.process_keycode.str1.4:0000000000000000 $d
     /tmp/ccy15zOt.s:4943   .text.process_keycode:0000000000000000 $t
     /tmp/ccy15zOt.s:4951   .text.process_keycode:0000000000000000 process_keycode
     /tmp/ccy15zOt.s:5569   .text.process_keycode:00000000000002a8 $d
                            *COM*:0000000000000004 OpCode
                            *COM*:0000000000000004 GoFast
                            *COM*:0000000000000004 OpCodeDisplayPending
                            *COM*:0000000000000004 WasDataEntry
     /tmp/ccy15zOt.s:5588   .text.process_keycode:00000000000002e8 $t
     /tmp/ccy15zOt.s:5705   .text.process_keycode:0000000000000362 $d
     /tmp/ccy15zOt.s:5752   .text.process_keycode:00000000000003be $t
     /tmp/ccy15zOt.s:6270   .text.process_keycode:0000000000000598 $d
     /tmp/ccy15zOt.s:6279   .text.process_keycode:00000000000005bc $t
     /tmp/ccy15zOt.s:6363   .text.process_keycode:0000000000000610 $d
     /tmp/ccy15zOt.s:6386   .text.process_keycode:0000000000000654 $t
     /tmp/ccy15zOt.s:6465   .text.process_keycode:00000000000006b8 $d
     /tmp/ccy15zOt.s:6495   .text.process_keycode:00000000000006dc $d
     /tmp/ccy15zOt.s:6539   .text.process_keycode:0000000000000788 $t
     /tmp/ccy15zOt.s:6843   .text.process_keycode:00000000000008a0 $d
     /tmp/ccy15zOt.s:6852   .text.process_keycode:00000000000008c4 $t
ARM GAS  /tmp/ccy15zOt.s 			page 347


     /tmp/ccy15zOt.s:6931   .text.process_keycode:0000000000000908 $d
     /tmp/ccy15zOt.s:6957   .text.process_keycode:0000000000000970 $t
     /tmp/ccy15zOt.s:6987   .text.process_keycode:0000000000000990 $d
     /tmp/ccy15zOt.s:6992   .text.process_keycode:0000000000000998 $t
     /tmp/ccy15zOt.s:7001   .text.process_keycode:00000000000009ac $d
     /tmp/ccy15zOt.s:7005   .text.process_keycode:00000000000009bc $t
     /tmp/ccy15zOt.s:7948   .text.process_keycode:0000000000000d24 $d
     /tmp/ccy15zOt.s:7973   .text.process_keycode:0000000000000d50 $t
     /tmp/ccy15zOt.s:8413   .text.process_keycode:0000000000000ec4 $d
     /tmp/ccy15zOt.s:8448   .text.process_keycode:0000000000000f50 $t
     /tmp/ccy15zOt.s:8683   .text.process_keycode:0000000000001038 $d
     /tmp/ccy15zOt.s:8703   .text.process_keycode:0000000000001088 $t
     /tmp/ccy15zOt.s:8773   .text.process_keycode:00000000000010d8 $d
     /tmp/ccy15zOt.s:8799   .text.process_keycode:00000000000010ec $t
     /tmp/ccy15zOt.s:8936   .text.process_keycode:0000000000001154 $d
     /tmp/ccy15zOt.s:8954   .text.process_keycode:000000000000119c $t
     /tmp/ccy15zOt.s:9372   .text.process_keycode:00000000000012d8 $d
     /tmp/ccy15zOt.s:9406   .text.process_keycode:000000000000131c $t
     /tmp/ccy15zOt.s:9633   .text.process_keycode:00000000000013d8 $d
     /tmp/ccy15zOt.s:9676   .text.process_keycode:00000000000013f0 $t
     /tmp/ccy15zOt.s:9955   .text.process_keycode:00000000000014f4 $d
     /tmp/ccy15zOt.s:9990   .text.process_keycode:000000000000157c $t
     /tmp/ccy15zOt.s:10166  .text.process_keycode:00000000000015ea $d
     /tmp/ccy15zOt.s:10381  .text.process_keycode:00000000000016d8 $d
     /tmp/ccy15zOt.s:10397  .text.process_keycode:00000000000016f8 $t
     /tmp/ccy15zOt.s:10777  .text.process_keycode:00000000000018c0 $d
     /tmp/ccy15zOt.s:10819  .text.process_keycode:0000000000001964 $t
     /tmp/ccy15zOt.s:11054  .text.process_keycode:0000000000001a6c $d
     /tmp/ccy15zOt.s:11065  .text.process_keycode:0000000000001a78 $t
     /tmp/ccy15zOt.s:11812  .text.process_keycode:0000000000001d30 $d
     /tmp/ccy15zOt.s:11823  .text.process_keycode_with_shift:0000000000000000 $t
     /tmp/ccy15zOt.s:11831  .text.process_keycode_with_shift:0000000000000000 process_keycode_with_shift
     /tmp/ccy15zOt.s:11982  .text.process_keycode_with_shift:0000000000000070 $d
     /tmp/ccy15zOt.s:11997  .bss.was_paused.9649:0000000000000000 $d
     /tmp/ccy15zOt.s:12001  .bss.was_paused.9649:0000000000000000 was_paused.9649
     /tmp/ccy15zOt.s:12004  .rodata.alpha_arrows:0000000000000000 $d
     /tmp/ccy15zOt.s:12007  .rodata.alpha_arrows:0000000000000000 alpha_arrows
     /tmp/ccy15zOt.s:12010  .rodata.alpha_catalogue:0000000000000000 $d
     /tmp/ccy15zOt.s:12013  .rodata.alpha_catalogue:0000000000000000 alpha_catalogue
     /tmp/ccy15zOt.s:12017  .rodata.alpha_compares:0000000000000000 $d
     /tmp/ccy15zOt.s:12020  .rodata.alpha_compares:0000000000000000 alpha_compares
     /tmp/ccy15zOt.s:12023  .rodata.alpha_letters:0000000000000000 $d
     /tmp/ccy15zOt.s:12027  .rodata.alpha_letters:0000000000000000 alpha_letters
     /tmp/ccy15zOt.s:12033  .rodata.alpha_letters_lower:0000000000000000 $d
     /tmp/ccy15zOt.s:12037  .rodata.alpha_letters_lower:0000000000000000 alpha_letters_lower
     /tmp/ccy15zOt.s:12043  .rodata.alpha_subscripts:0000000000000000 $d
     /tmp/ccy15zOt.s:12046  .rodata.alpha_subscripts:0000000000000000 alpha_subscripts
     /tmp/ccy15zOt.s:12050  .rodata.alpha_symbols:0000000000000000 $d
     /tmp/ccy15zOt.s:12053  .rodata.alpha_symbols:0000000000000000 alpha_symbols
     /tmp/ccy15zOt.s:12056  .rodata.alphamap.9182:0000000000000000 $d
     /tmp/ccy15zOt.s:12060  .rodata.alphamap.9182:0000000000000000 alphamap.9182
     /tmp/ccy15zOt.s:12100  .rodata.amap.9173:0000000000000000 $d
     /tmp/ccy15zOt.s:12104  .rodata.amap.9173:0000000000000000 amap.9173
     /tmp/ccy15zOt.s:12118  .rodata.catalogue:0000000000000000 $d
     /tmp/ccy15zOt.s:12121  .rodata.catalogue:0000000000000000 catalogue
     /tmp/ccy15zOt.s:12130  .rodata.catalogue_sizes.9447:0000000000000000 $d
     /tmp/ccy15zOt.s:12134  .rodata.catalogue_sizes.9447:0000000000000000 catalogue_sizes.9447
ARM GAS  /tmp/ccy15zOt.s 			page 348


     /tmp/ccy15zOt.s:12137  .rodata.catalogues.9455:0000000000000000 $d
     /tmp/ccy15zOt.s:12141  .rodata.catalogues.9455:0000000000000000 catalogues.9455
     /tmp/ccy15zOt.s:12226  .rodata.cplx_catalogue:0000000000000000 cplx_catalogue
     /tmp/ccy15zOt.s:12680  .rodata.stats_catalogue:0000000000000000 stats_catalogue
     /tmp/ccy15zOt.s:12640  .rodata.prob_catalogue:0000000000000000 prob_catalogue
     /tmp/ccy15zOt.s:12243  .rodata.int_catalogue:0000000000000000 int_catalogue
     /tmp/ccy15zOt.s:12649  .rodata.prog_catalogue:0000000000000000 prog_catalogue
     /tmp/ccy15zOt.s:12659  .rodata.program_xfcn:0000000000000000 program_xfcn
     /tmp/ccy15zOt.s:12693  .rodata.test_catalogue:0000000000000000 test_catalogue
     /tmp/ccy15zOt.s:12289  .rodata.mode_catalogue:0000000000000000 mode_catalogue
     /tmp/ccy15zOt.s:12687  .rodata.sums_catalogue:0000000000000000 sums_catalogue
     /tmp/ccy15zOt.s:12282  .rodata.matrix_catalogue:0000000000000000 matrix_catalogue
     /tmp/ccy15zOt.s:12164  .rodata.cmap.9172:0000000000000000 $d
     /tmp/ccy15zOt.s:12168  .rodata.cmap.9172:0000000000000000 cmap.9172
     /tmp/ccy15zOt.s:12194  .rodata.conv_catalogue:0000000000000000 $d
     /tmp/ccy15zOt.s:12198  .rodata.conv_catalogue:0000000000000000 conv_catalogue
     /tmp/ccy15zOt.s:12205  .rodata.conv_mapping.9494:0000000000000000 $d
     /tmp/ccy15zOt.s:12209  .rodata.conv_mapping.9494:0000000000000000 conv_mapping.9494
     /tmp/ccy15zOt.s:12223  .rodata.cplx_catalogue:0000000000000000 $d
     /tmp/ccy15zOt.s:12230  .rodata.disp.9310:0000000000000000 $d
     /tmp/ccy15zOt.s:12234  .rodata.disp.9310:0000000000000000 disp.9310
     /tmp/ccy15zOt.s:12240  .rodata.int_catalogue:0000000000000000 $d
     /tmp/ccy15zOt.s:12250  .rodata.linear_key_map.9143:0000000000000000 $d
     /tmp/ccy15zOt.s:12254  .rodata.linear_key_map.9143:0000000000000000 linear_key_map.9143
     /tmp/ccy15zOt.s:12260  .rodata.linear_key_map.9147:0000000000000000 $d
     /tmp/ccy15zOt.s:12264  .rodata.linear_key_map.9147:0000000000000000 linear_key_map.9147
     /tmp/ccy15zOt.s:12270  .rodata.map.9159:0000000000000000 $d
     /tmp/ccy15zOt.s:12274  .rodata.map.9159:0000000000000000 map.9159
     /tmp/ccy15zOt.s:12279  .rodata.matrix_catalogue:0000000000000000 $d
     /tmp/ccy15zOt.s:12286  .rodata.mode_catalogue:0000000000000000 $d
     /tmp/ccy15zOt.s:12295  .rodata.op_map.9226:0000000000000000 $d
     /tmp/ccy15zOt.s:12299  .rodata.op_map.9226:0000000000000000 op_map.9226
     /tmp/ccy15zOt.s:12336  .rodata.op_map.9249:0000000000000000 $d
     /tmp/ccy15zOt.s:12340  .rodata.op_map.9249:0000000000000000 op_map.9249
     /tmp/ccy15zOt.s:12412  .rodata.op_map.9272:0000000000000000 $d
     /tmp/ccy15zOt.s:12416  .rodata.op_map.9272:0000000000000000 op_map.9272
     /tmp/ccy15zOt.s:12453  .rodata.op_map.9282:0000000000000000 $d
     /tmp/ccy15zOt.s:12457  .rodata.op_map.9282:0000000000000000 op_map.9282
     /tmp/ccy15zOt.s:12599  .rodata.op_map.9294:0000000000000000 $d
     /tmp/ccy15zOt.s:12603  .rodata.op_map.9294:0000000000000000 op_map.9294
     /tmp/ccy15zOt.s:12608  .rodata.op_map.9309:0000000000000000 $d
     /tmp/ccy15zOt.s:12612  .rodata.op_map.9309:0000000000000000 op_map.9309
     /tmp/ccy15zOt.s:12620  .rodata.op_map2.9250:0000000000000000 $d
     /tmp/ccy15zOt.s:12624  .rodata.op_map2.9250:0000000000000000 op_map2.9250
     /tmp/ccy15zOt.s:12630  .rodata.opcode_breaks:0000000000000000 $d
     /tmp/ccy15zOt.s:12634  .rodata.opcode_breaks:0000000000000000 opcode_breaks
     /tmp/ccy15zOt.s:12637  .rodata.prob_catalogue:0000000000000000 $d
     /tmp/ccy15zOt.s:12646  .rodata.prog_catalogue:0000000000000000 $d
     /tmp/ccy15zOt.s:12656  .rodata.program_xfcn:0000000000000000 $d
     /tmp/ccy15zOt.s:12670  .rodata.smap.9174:0000000000000000 $d
     /tmp/ccy15zOt.s:12674  .rodata.smap.9174:0000000000000000 smap.9174
     /tmp/ccy15zOt.s:12677  .rodata.stats_catalogue:0000000000000000 $d
     /tmp/ccy15zOt.s:12684  .rodata.sums_catalogue:0000000000000000 $d
     /tmp/ccy15zOt.s:12690  .rodata.test_catalogue:0000000000000000 $d
     /tmp/ccy15zOt.s:2075   .text.process_arg:0000000000000117 $d
     /tmp/ccy15zOt.s:2075   .text.process_arg:0000000000000118 $t
     /tmp/ccy15zOt.s:6484   .text.process_keycode:00000000000006cb $d
ARM GAS  /tmp/ccy15zOt.s 			page 349


     /tmp/ccy15zOt.s:6484   .text.process_keycode:00000000000006cc $t
     /tmp/ccy15zOt.s:10207  .text.process_keycode:0000000000001613 $d
     /tmp/ccy15zOt.s:10207  .text.process_keycode:0000000000001614 $t

UNDEFINED SYMBOLS
sizeLIB
main_ram
StateWhileOn
find_label_from
getprog
do_inc
PcWrapped
process_cmdline
shift_down
do_dec
is_bad_cmdline
argcmds
local_regs_rarg
num_arg_digits
global_regs_rarg
int_base
process_cmdline_set_lift
display
is_dblmode
IntMaxWindow
xset
update_program_bounds
set_lift
ShowRegister
remap_chars
catcmd
keyticks
xeq_init_contexts
is_dot
xeq
xeqprog
dot
xeq_xrom
is_key_pressed
Pause
JustStopped
Running
ShowRPN
JustDisplayed
DispMsg
set_running_off
clr_dot
finish_RPN
xeq_sst_bst
message
delprog
set_menu
display_current_menu
stoprog
clpall
clrprog
reset
ARM GAS  /tmp/ccy15zOt.s 			page 350


clrall
prt
scopy_char
set_pc
find_char
set_last_menu
find_user_pc
TraceBuffer
cmdgtocommon
global_regs
local_regs
alen

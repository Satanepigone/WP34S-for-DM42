ARM GAS  /tmp/ccJ0w3QJ.s 			page 1


   1              		.arch armv7e-m
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"keys.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.check_f_key,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	check_f_key:
  27              	.LVL0:
  28              	.LFB17:
  29              		.file 1 "src/keys.c"
   1:src/keys.c    **** /* This file is part of 34S.
   2:src/keys.c    ****  * 
   3:src/keys.c    ****  * 34S is free software: you can redistribute it and/or modify
   4:src/keys.c    ****  * it under the terms of the GNU General Public License as published by
   5:src/keys.c    ****  * the Free Software Foundation, either version 3 of the License, or
   6:src/keys.c    ****  * (at your option) any later version.
   7:src/keys.c    ****  * 
   8:src/keys.c    ****  * 34S is distributed in the hope that it will be useful,
   9:src/keys.c    ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:src/keys.c    ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:src/keys.c    ****  * GNU General Public License for more details.
  12:src/keys.c    ****  * 
  13:src/keys.c    ****  * You should have received a copy of the GNU General Public License
  14:src/keys.c    ****  * along with 34S.  If not, see <http://www.gnu.org/licenses/>.
  15:src/keys.c    ****  */
  16:src/keys.c    **** 
  17:src/keys.c    **** 
  18:src/keys.c    **** #ifdef DM42
  19:src/keys.c    **** #include "dmcp.h"
  20:src/keys.c    **** #endif
  21:src/keys.c    **** 
  22:src/keys.c    **** #define DM42SAFE
  23:src/keys.c    **** 
  24:src/keys.c    **** #include "features.h"
  25:src/keys.c    **** #include "xeq.h"
  26:src/keys.c    **** #include "keys.h"
  27:src/keys.c    **** #include "display.h"
  28:src/keys.c    **** #include "lcd.h"
  29:src/keys.c    **** #include "int.h"
ARM GAS  /tmp/ccJ0w3QJ.s 			page 2


  30:src/keys.c    **** #include "consts.h"
  31:src/keys.c    **** #include "storage.h"
  32:src/keys.c    **** #include "stats.h"
  33:src/keys.c    **** #include "catalogues.h"
  34:src/keys.c    **** #ifndef DM42
  35:src/keys.c    **** #include "printer.h"
  36:src/keys.c    **** #endif
  37:src/keys.c    **** #undef DM42SAFE
  38:src/keys.c    **** 
  39:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
  40:src/keys.c    **** extern void changed_catalog_state();
  41:src/keys.c    **** #endif
  42:src/keys.c    **** 
  43:src/keys.c    **** #define STATE_UNFINISHED	(OP_SPEC | OP_UNFINISHED)
  44:src/keys.c    **** #define STATE_BACKSPACE		(OP_SPEC | OP_BACKSPACE)
  45:src/keys.c    **** #define STATE_SST		(OP_SPEC | OP_SST)
  46:src/keys.c    **** #define STATE_BST		(OP_SPEC | OP_BST)
  47:src/keys.c    **** #define STATE_RUNNING		(OP_SPEC | OP_RUNNING)
  48:src/keys.c    **** #define STATE_IGNORE		(OP_SPEC | OP_IGNORE)
  49:src/keys.c    **** #define STATE_WINDOWLEFT	(OP_SPEC | OP_WINDOWLEFT)
  50:src/keys.c    **** #define STATE_WINDOWRIGHT	(OP_SPEC | OP_WINDOWRIGHT)
  51:src/keys.c    **** //#define STATE_SHOW		(OP_SPEC | OP_SHOW)
  52:src/keys.c    **** 
  53:src/keys.c    **** /* Define this if the key codes map rows sequentially */ //ND ???
  54:src/keys.c    **** 
  55:src/keys.c    **** #define TEST_EQ		0
  56:src/keys.c    **** #define TEST_NE		1
  57:src/keys.c    **** #define TEST_LT		2
  58:src/keys.c    **** #define TEST_LE		3
  59:src/keys.c    **** #define TEST_GT		4
  60:src/keys.c    **** #define TEST_GE		5
  61:src/keys.c    **** 
  62:src/keys.c    **** enum confirmations {
  63:src/keys.c    **** 	// Apart from the first of these, these must be in the same
  64:src/keys.c    **** 	// order as the opcodes in xeq.h: OP_CLALL, OP_RESET, OP_CLPROG, OP_CLPALL
  65:src/keys.c    **** 	confirm_none=0, confirm_clall, confirm_reset, confirm_clprog, confirm_clpall
  66:src/keys.c    **** };
  67:src/keys.c    **** 
  68:src/keys.c    **** FLAG WasDataEntry;
  69:src/keys.c    **** 
  70:src/keys.c    **** /* Local data to this module */
  71:src/keys.c    **** unsigned int OpCode;
  72:src/keys.c    **** FLAG OpCodeDisplayPending;
  73:src/keys.c    **** FLAG GoFast;
  74:src/keys.c    **** FLAG NonProgrammable;
  75:src/keys.c    **** 
  76:src/keys.c    **** /*
  77:src/keys.c    ****  *  Needed before definition
  78:src/keys.c    ****  */ 
  79:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end);
  80:src/keys.c    **** 
  81:src/keys.c    **** /*
  82:src/keys.c    ****  *  Return the shift state
  83:src/keys.c    ****  */
  84:src/keys.c    **** enum shifts cur_shift(void) {
  85:src/keys.c    **** 	enum shifts s = shift_down();
  86:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
ARM GAS  /tmp/ccJ0w3QJ.s 			page 3


  87:src/keys.c    **** }
  88:src/keys.c    **** 
  89:src/keys.c    **** /*
  90:src/keys.c    ****  *  Set new shift state, return previous state
  91:src/keys.c    ****  */
  92:src/keys.c    **** static enum shifts set_shift(enum shifts shift) {
  93:src/keys.c    **** 	enum shifts r = cur_shift();
  94:src/keys.c    **** 	State2.shifts = shift;
  95:src/keys.c    **** 	State2.alpha_pos = 0;
  96:src/keys.c    **** 	return r;
  97:src/keys.c    **** }
  98:src/keys.c    **** 
  99:src/keys.c    **** /*
 100:src/keys.c    ****  *  Clear shift state and return previous state
 101:src/keys.c    ****  */
 102:src/keys.c    **** enum shifts reset_shift(void) {
 103:src/keys.c    **** 	return set_shift(SHIFT_N);
 104:src/keys.c    **** }
 105:src/keys.c    **** 
 106:src/keys.c    **** /*
 107:src/keys.c    ****  *  Toggle shift state
 108:src/keys.c    ****  */
 109:src/keys.c    **** static void toggle_shift(enum shifts shift) {
 110:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 111:src/keys.c    **** }
 112:src/keys.c    **** 
 113:src/keys.c    **** 
 114:src/keys.c    **** /*
 115:src/keys.c    ****  * Mapping from the key code to a linear index
 116:src/keys.c    ****  * The trick is to move the shifts and the holes in the map out of the way
 117:src/keys.c    ****  */
 118:src/keys.c    **** // ND: understood, but not really needed I don't think given the memory available.
 119:src/keys.c    **** // Easy to implement if / when required. Note that f, g, h all have the same index.
 120:src/keys.c    **** // This relates to the keycode definitions in keys.h.
 121:src/keys.c    **** // Will need to refer to dmcp.h
 122:src/keys.c    **** 
 123:src/keys.c    **** #ifdef DM42
 124:src/keys.c    **** static int keycode_to_linear_for_alpha(const keycode c)
 125:src/keys.c    **** {
 126:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 127:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 128:src/keys.c    **** 		 6,  7,  8,  9, 10, 11,   // K10 - K15
 129:src/keys.c    **** 		 12, 13, 14, 15, 16,  0,   // K20 - K24
 130:src/keys.c    **** 		17, 18, 19, 20, 21,  0,   // K30 - K34
 131:src/keys.c    **** 		22, 23, 24, 25, 26,  0,   // K40 - K44
 132:src/keys.c    **** 		27, 28, 29, 30, 31,  0,   // K50 - K54
 133:src/keys.c    **** 		32, 33, 34, 35, 36,       // K60 - K64
 134:src/keys.c    **** 		37, 37, 37, 37, 37, 37       // K_F, G, H, ARROW, CMPLX, NOP
 135:src/keys.c    **** 	};
 136:src/keys.c    **** 	return linear_key_map[c];
 137:src/keys.c    **** }
 138:src/keys.c    **** 
 139:src/keys.c    **** static int keycode_to_linear(const keycode c)
 140:src/keys.c    **** {
 141:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 + 6 ] = {
 142:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 143:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
ARM GAS  /tmp/ccJ0w3QJ.s 			page 4


 144:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 145:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 146:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 147:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 148:src/keys.c    **** 		29, 30, 31, 32, 33,       // K60 - K64
 149:src/keys.c    **** 		34, 34, 34,  4,  5, 34,        // K_F, G, H, ARROW, CMPLX, NOP
 150:src/keys.c    **** 	};
 151:src/keys.c    **** 	return linear_key_map[c];
 152:src/keys.c    **** }
 153:src/keys.c    **** #else
 154:src/keys.c    **** static int keycode_to_linear(const keycode c)
 155:src/keys.c    **** {
 156:src/keys.c    **** 	static const unsigned char linear_key_map[ 7 * 6 - 1 ] = {
 157:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 158:src/keys.c    **** 		 6,  7,  8, 34, 34, 34,   // K10 - K15
 159:src/keys.c    **** 		 9, 10, 11, 12, 13,  0,   // K20 - K24
 160:src/keys.c    **** 		14, 15, 16, 17, 18,  0,   // K30 - K34
 161:src/keys.c    **** 		19, 20, 21, 22, 23,  0,   // K40 - K44
 162:src/keys.c    **** 		24, 25, 26, 27, 28,  0,   // K50 - K54
 163:src/keys.c    **** 		29, 30, 31, 32, 33        // K60 - K64
 164:src/keys.c    **** 	};
 165:src/keys.c    **** 	return linear_key_map[c];
 166:src/keys.c    **** }
 167:src/keys.c    **** #endif
 168:src/keys.c    **** /*
 169:src/keys.c    ****  * Mapping from the key code to a row column code ('A'=11 to '+'=75)
 170:src/keys.c    ****  * Used in KEY? and for shorthand addressing
 171:src/keys.c    ****  */
 172:src/keys.c    **** 
 173:src/keys.c    **** // ND: will need to change this a bit. Note the advance by six per row, even when
 174:src/keys.c    **** // there are only five keys.
 175:src/keys.c    **** 
 176:src/keys.c    **** int keycode_to_row_column(const int c)
 177:src/keys.c    **** {
 178:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 179:src/keys.c    **** }
 180:src/keys.c    **** 
 181:src/keys.c    **** /*
 182:src/keys.c    ****  * Mapping from a row column code ('A'=11 to '+'=75) to the key code
 183:src/keys.c    ****  * Used in PUTK and KTYPE.
 184:src/keys.c    ****  */
 185:src/keys.c    **** 
 186:src/keys.c    **** // ND: see above
 187:src/keys.c    **** int row_column_to_keycode(const int c)
 188:src/keys.c    **** {
 189:src/keys.c    **** 	int row = c / 10 - 1;
 190:src/keys.c    **** 	int col = c % 10 - 1;
 191:src/keys.c    **** 
 192:src/keys.c    **** 	if (row < 0 || row > 6 || col > 5 - (row >= 2))
 193:src/keys.c    **** 		return -1;
 194:src/keys.c    **** 	return row * 6 + col;
 195:src/keys.c    **** }
 196:src/keys.c    **** 
 197:src/keys.c    **** /*
 198:src/keys.c    ****  *  Mapping from a key code to a digit from 0 to 9 or to a register address
 199:src/keys.c    ****  *  Bit seven is set if the key cannot be used as a label shortcut
 200:src/keys.c    ****  */
ARM GAS  /tmp/ccJ0w3QJ.s 			page 5


 201:src/keys.c    **** // Decision to make here about whether the top row can be used as shortcuts.
 202:src/keys.c    **** // Also, which other keys can / can't be used as shortcuts?
 203:src/keys.c    **** // Registers I, j, K, L will move with the new alpha layout.
 204:src/keys.c    **** 
 205:src/keys.c    **** #define NO_REG 0x7f
 206:src/keys.c    **** #define NO_SHORT 0x80
 207:src/keys.c    **** #ifdef DM42
 208:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 209:src/keys.c    **** {
 210:src/keys.c    ****   static const unsigned char map[] = {
 211:src/keys.c    ****     // K00 - K05
 212:src/keys.c    ****     NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 213:src/keys.c    ****     NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 214:src/keys.c    ****     NO_SHORT | NO_REG,   NO_REG,
 215:src/keys.c    ****     // K10 - K15
 216:src/keys.c    ****     NO_REG, NO_REG, regI_idx, regJ_idx, regK_idx, regL_idx, 
 217:src/keys.c    ****     // K20 - K24
 218:src/keys.c    ****     NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG, NO_SHORT | NO_REG,
 219:src/keys.c    ****     // K30 - K34
 220:src/keys.c    ****     NO_REG, 7, 8, 9, NO_REG,
 221:src/keys.c    ****     // K40 - K44
 222:src/keys.c    ****     NO_REG, NO_SHORT | regT_idx, 5, 6, NO_REG,
 223:src/keys.c    ****     // K50 - K54
 224:src/keys.c    ****     NO_REG, NO_SHORT | regX_idx, NO_SHORT | regY_idx, NO_SHORT | regZ_idx, NO_REG,
 225:src/keys.c    ****     // K60 - K64
 226:src/keys.c    ****     NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE, NO_REG, NO_REG,
 227:src/keys.c    ****     // Shifts
 228:src/keys.c    ****     NO_REG
 229:src/keys.c    ****   };
 230:src/keys.c    **** 
 231:src/keys.c    ****   return (unsigned int) map[keycode_to_linear_for_alpha(c)];
 232:src/keys.c    **** }
 233:src/keys.c    **** #else
 234:src/keys.c    **** unsigned int keycode_to_digit_or_register(const keycode c)
 235:src/keys.c    **** {
 236:src/keys.c    ****   static const unsigned char map[] = {
 237:src/keys.c    **** 		// K00 - K05
 238:src/keys.c    **** 		NO_SHORT | regA_idx, NO_SHORT | regB_idx,
 239:src/keys.c    **** 		NO_SHORT | regC_idx, NO_SHORT | regD_idx,
 240:src/keys.c    **** 		NO_SHORT | NO_REG,   NO_REG,
 241:src/keys.c    **** 		// K10 - K12
 242:src/keys.c    **** 		NO_REG, NO_REG, regI_idx, 
 243:src/keys.c    **** 		// K20 - K24
 244:src/keys.c    **** 		NO_SHORT | NO_REG, regJ_idx, regK_idx, regL_idx, NO_SHORT | NO_REG,
 245:src/keys.c    **** 		// K30 - K34
 246:src/keys.c    **** 		NO_REG, 7, 8, 9, NO_REG,
 247:src/keys.c    **** 		// K40 - K44
 248:src/keys.c    **** 		NO_REG, 4, 5, 6, regT_idx,
 249:src/keys.c    **** 		// K50 - K54
 250:src/keys.c    **** 		NO_REG, 1, 2, 3, NO_REG,
 251:src/keys.c    **** 		// K60 - K63
 252:src/keys.c    **** 		NO_SHORT | NO_REG, 0, NO_SHORT | LOCAL_REG_BASE,
 253:src/keys.c    **** 		regY_idx, regZ_idx,
 254:src/keys.c    **** 		// Shifts, etc
 255:src/keys.c    **** 		NO_REG
 256:src/keys.c    **** 	};
 257:src/keys.c    **** 
ARM GAS  /tmp/ccJ0w3QJ.s 			page 6


 258:src/keys.c    **** 	return (unsigned int) map[keycode_to_linear(c)];
 259:src/keys.c    **** }
 260:src/keys.c    **** #endif
 261:src/keys.c    **** /*
 262:src/keys.c    ****  *  Mapping of a keycode and shift state to a catalogue number
 263:src/keys.c    ****  */
 264:src/keys.c    **** 
 265:src/keys.c    **** // ND:  Seems straightforward: I'll just need to re-write the contents of the _map struct
 266:src/keys.c    **** // significantly, and remove the requirement of h-shiftedness.
 267:src/keys.c    **** // The three entries at present correspond to normal mode, int mode, and complex mode.
 268:src/keys.c    **** // I might need two tables - one for f, one for g.
 269:src/keys.c    **** //
 270:src/keys.c    **** 
 271:src/keys.c    **** static enum catalogues keycode_to_cat(const keycode c, enum shifts shift)
 272:src/keys.c    **** {
 273:src/keys.c    ****   enum catalogues cat = CATALOGUE_NONE;
 274:src/keys.c    ****   int i, col, max;
 275:src/keys.c    ****   const struct _map {
 276:src/keys.c    ****     unsigned char key, cat[3];
 277:src/keys.c    ****   } *cp;
 278:src/keys.c    **** 
 279:src/keys.c    ****   // Common to both alpha mode and normal mode is the programming X.FCN catalogue
 280:src/keys.c    ****   if (c == K53 && shift == SHIFT_H && ! State2.runmode && ! State2.cmplx && ! State2.multi)
 281:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 282:src/keys.c    **** 
 283:src/keys.c    ****   if (! State2.alphas && ! State2.multi) {
 284:src/keys.c    ****     /*
 285:src/keys.c    ****      *  Normal processing - Not alpha mode
 286:src/keys.c    ****      */
 287:src/keys.c    ****     static const struct _map cmap[] = {
 288:src/keys.c    **** #ifdef DM42
 289:src/keys.c    ****       { K04, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 290:src/keys.c    **** #else
 291:src/keys.c    ****       { K_ARROW, { CATALOGUE_CONV,      CATALOGUE_NONE,      CATALOGUE_CONV          } },
 292:src/keys.c    **** #endif
 293:src/keys.c    ****       { K05,     { CATALOGUE_MODE,      CATALOGUE_MODE,      CATALOGUE_MODE          } },
 294:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
 295:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_USER          } },
 296:src/keys.c    **** #else
 297:src/keys.c    ****       { K10,     { CATALOGUE_LABELS,    CATALOGUE_LABELS,    CATALOGUE_LABELS        } },
 298:src/keys.c    **** #endif
 299:src/keys.c    ****       { K20,     { CATALOGUE_CONST,     CATALOGUE_NONE,      CATALOGUE_COMPLEX_CONST } },
 300:src/keys.c    ****       { K41,     { CATALOGUE_PROB,      CATALOGUE_NONE,      CATALOGUE_PROB          } },
 301:src/keys.c    ****       { K42,     { CATALOGUE_STATS,     CATALOGUE_NONE,      CATALOGUE_STATS         } },
 302:src/keys.c    ****       { K43,     { CATALOGUE_SUMS,      CATALOGUE_NONE,      CATALOGUE_SUMS          } },
 303:src/keys.c    ****       { K44,     { CATALOGUE_MATRIX,    CATALOGUE_NONE,      CATALOGUE_MATRIX        } },
 304:src/keys.c    ****       { K50,     { CATALOGUE_STATUS,    CATALOGUE_STATUS,    CATALOGUE_STATUS        } },
 305:src/keys.c    ****       { K51,     { CATALOGUE_TEST,      CATALOGUE_TEST,      CATALOGUE_TEST          } },
 306:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
 307:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_INTERNAL      } },
 308:src/keys.c    **** #else
 309:src/keys.c    ****       { K52,     { CATALOGUE_PROG,      CATALOGUE_PROG,      CATALOGUE_PROG          } },
 310:src/keys.c    **** #endif
 311:src/keys.c    ****       { K53,     { CATALOGUE_NORMAL,    CATALOGUE_INT,       CATALOGUE_COMPLEX       } },
 312:src/keys.c    ****     };
 313:src/keys.c    **** 
 314:src/keys.c    ****     if (c == K60 && shift == SHIFT_G) {
ARM GAS  /tmp/ccJ0w3QJ.s 			page 7


 315:src/keys.c    ****       /*
 316:src/keys.c    ****        *  SHOW starts register browser
 317:src/keys.c    ****        */
 318:src/keys.c    ****       return CATALOGUE_REGISTERS;
 319:src/keys.c    ****     }
 320:src/keys.c    **** #if 0
 321:src/keys.c    ****     // conflicts with c# 002 and c# 003
 322:src/keys.c    ****     if ((c == K52 || c == K53) && shift == SHIFT_N && State2.cmplx && State2.catalogue == CATALOGUE
 323:src/keys.c    ****       /*
 324:src/keys.c    ****        *  Shorthand to complex P.FCN & X.FCN - h may be omitted
 325:src/keys.c    ****        */
 326:src/keys.c    ****       shift = SHIFT_H;
 327:src/keys.c    ****     }
 328:src/keys.c    **** #endif
 329:src/keys.c    ****     if (shift != SHIFT_H) {
 330:src/keys.c    ****       /*
 331:src/keys.c    ****        *  All standard catalogues are on h-shifted keys
 332:src/keys.c    ****        */
 333:src/keys.c    ****       return CATALOGUE_NONE;
 334:src/keys.c    ****     }
 335:src/keys.c    **** 
 336:src/keys.c    ****     /*
 337:src/keys.c    ****      *  Prepare search
 338:src/keys.c    ****      */
 339:src/keys.c    ****     cp = cmap;
 340:src/keys.c    **** #ifndef WINGUI
 341:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx || shift_down() == SHIFT_H ? 2 : 0;
 342:src/keys.c    **** #else
 343:src/keys.c    ****     col = UState.intm ? 1 : State2.cmplx ? 2 : 0;
 344:src/keys.c    **** #endif
 345:src/keys.c    ****     max = sizeof(cmap) / sizeof(cmap[0]);
 346:src/keys.c    ****   }
 347:src/keys.c    ****   else {
 348:src/keys.c    ****     /*
 349:src/keys.c    ****      *  All the alpha catalogues go here
 350:src/keys.c    ****      */
 351:src/keys.c    **** #ifdef DM42
 352:src/keys.c    ****     static const struct _map amap[] = {
 353:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 354:src/keys.c    ****       { K05, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 355:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 356:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 357:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 358:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 359:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 360:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
 361:src/keys.c    ****     };
 362:src/keys.c    **** #else
 363:src/keys.c    ****     static const struct _map amap[] = {
 364:src/keys.c    ****       { K_ARROW, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 365:src/keys.c    ****       { K_CMPLX, { CATALOGUE_NONE, CATALOGUE_ALPHA_LETTERS, CATALOGUE_MODE              } },
 366:src/keys.c    ****       //	{ K10,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_LABELS            } },
 367:src/keys.c    ****       { K12,     { CATALOGUE_NONE, CATALOGUE_NONE,	      CATALOGUE_ALPHA_SUBSCRIPTS  } },
 368:src/keys.c    ****       //	{ K50,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_STATUS            } },
 369:src/keys.c    ****       { K51,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_COMPARES    } },
 370:src/keys.c    ****       { K53,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA             } },
 371:src/keys.c    ****       { K62,     { CATALOGUE_NONE, CATALOGUE_NONE,          CATALOGUE_ALPHA_SYMBOLS     } },
ARM GAS  /tmp/ccJ0w3QJ.s 			page 8


 372:src/keys.c    ****     };
 373:src/keys.c    **** #endif
 374:src/keys.c    ****     static const char smap[] = { 0, 1, 0, 2 }; // Map shifts to columns;
 375:src/keys.c    **** 
 376:src/keys.c    ****     /*
 377:src/keys.c    ****      *  Prepare search
 378:src/keys.c    ****      */
 379:src/keys.c    ****     cp = amap;
 380:src/keys.c    ****     col = smap[shift];
 381:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 382:src/keys.c    ****   }
 383:src/keys.c    **** 
 384:src/keys.c    ****   /*
 385:src/keys.c    ****    *  Search the key in one of the tables
 386:src/keys.c    ****    */
 387:src/keys.c    ****   for (i = 0; i < max; ++i, ++cp) {
 388:src/keys.c    ****     if (cp->key == c) {
 389:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 390:src/keys.c    ****       break;
 391:src/keys.c    ****     }
 392:src/keys.c    ****   }
 393:src/keys.c    ****   if (State2.multi && (cat < CATALOGUE_ALPHA_SYMBOLS || cat > CATALOGUE_ALPHA_SUBSCRIPTS)) {
 394:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 395:src/keys.c    ****     cat = CATALOGUE_NONE;
 396:src/keys.c    ****   }
 397:src/keys.c    ****   return cat;
 398:src/keys.c    **** }
 399:src/keys.c    **** 
 400:src/keys.c    **** #ifdef DM42
 401:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 402:src/keys.c    **** {
 403:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 404:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 405:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 406:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 407:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 408:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 409:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 410:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 411:src/keys.c    **** 
 412:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 413:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 414:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 415:src/keys.c    **** 		{ 'J',  0257, 0000, 0000, 'j',  0000,  },  // K13
 416:src/keys.c    **** 		{ 'K',  0000, 'K',  0000, 'k',  0251,  },  // K14
 417:src/keys.c    **** 		{ 'L',  0000, 0212, 0000, 'l',  0252,  },  // K15
 418:src/keys.c    **** 
 419:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 420:src/keys.c    **** 		{ 'M',  0000, 0253, 0027, 'm',  0253,  },  // K21
 421:src/keys.c    **** 		{ 'N',  0010, 'N',  0225, 'n',  0254,  },  // K22
 422:src/keys.c    **** 		{ 'O',  0000, 0227, 0257, 'o',  0267,  },  // K23
 423:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 424:src/keys.c    **** 
 425:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 426:src/keys.c    **** 		{ 'P',  '7',  0217, '&',  'p',  0257,  },  // K31
 427:src/keys.c    **** 		{ 'Q',  '8',  0000, '|',  'q',  0000,  },  // K32
 428:src/keys.c    **** 		{ 'R',  '9',  'R',  0000, 'r',  0260,  },  // K33
ARM GAS  /tmp/ccJ0w3QJ.s 			page 9


 429:src/keys.c    **** 		{ 'S',  '/',  0221, 0000, 's',  0261,  },  // K34
 430:src/keys.c    **** 
 431:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K40
 432:src/keys.c    **** 		{ 'T',  '4',  'T',  0000, 't',  0262,  },  // K41
 433:src/keys.c    **** 		{ 'U',  '5',  0000, 0000, 'u',  0000,  },  // K42
 434:src/keys.c    **** 		{ 'V',  '6',  0000, 0000, 'v',  0000,  },  // K43
 435:src/keys.c    **** 		{ 'W', 0034,  0000, 0000, 'w',  0000,  },  // K44
 436:src/keys.c    **** 
 437:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K50
 438:src/keys.c    **** 		{ 'X',  '1',  0215, 0000, 'x',  0255,  },  // K51
 439:src/keys.c    **** 		{ 'Y',  '2',  'Y',  0000, 'y',  0263,  },  // K52
 440:src/keys.c    **** 		{ 'Z',  '3',  'Z',  0000, 'z',  0245,  },  // K53
 441:src/keys.c    **** 		{ '-',  '(',  ')',  0000, 0000, 0000,  },  // K54
 442:src/keys.c    **** 
 443:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K60
 444:src/keys.c    **** 		{ ':',  '0',  0207, 0000, ';',  0247,  },  // K61
 445:src/keys.c    **** 		{ '.',  '.',  0226, 0000, '.',  0266,  },  // K62
 446:src/keys.c    **** 		{ '?',  0000, 0041, 0000, 0000, 0000,  },  // K63
 447:src/keys.c    **** 		{ ' ',  '+',  '=',  0000, 0000, 0000,  },  // K64
 448:src/keys.c    **** 
 449:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // shifts etc.
 450:src/keys.c    **** 	};
 451:src/keys.c    **** 	if (State2.alphashift) {
 452:src/keys.c    **** 		if (shift == SHIFT_N)
 453:src/keys.c    **** 			shift = SHIFT_LC_N;
 454:src/keys.c    **** 		else if (shift == SHIFT_G)
 455:src/keys.c    **** 			shift = SHIFT_LC_G;
 456:src/keys.c    **** 	}
 457:src/keys.c    **** 	return alphamap[keycode_to_linear_for_alpha(c)][shift];
 458:src/keys.c    **** }
 459:src/keys.c    **** #else
 460:src/keys.c    **** /*
 461:src/keys.c    ****  * Mapping from key position to alpha in the four key planes plus
 462:src/keys.c    ****  * the two lower case planes.
 463:src/keys.c    ****  */
 464:src/keys.c    **** // ND: work here! K04 and K05 aren't arrow and complex here - this is nice, and helpful.
 465:src/keys.c    **** static int keycode_to_alpha(const keycode c, unsigned int shift)
 466:src/keys.c    **** {
 467:src/keys.c    **** 	static const unsigned char alphamap[][6] = {
 468:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 469:src/keys.c    **** 		{ 'A',  0000, 'A',  0000, 'a',  0240,  },  // K00
 470:src/keys.c    **** 		{ 'B',  0000, 'B',  0000, 'b',  0241,  },  // K01
 471:src/keys.c    **** 		{ 'C',  0000, 0202, 0000, 'c',  0242,  },  // K02
 472:src/keys.c    **** 		{ 'D',  0000, 0203, 0000, 'd',  0243,  },  // K03
 473:src/keys.c    **** 		{ 'E',  0015, 'E',  0000, 'e',  0244,  },  // K04 ->
 474:src/keys.c    **** 		{ 'F',  0000, 0224, 0000, 'f',  0264,  },  // K05
 475:src/keys.c    **** 
 476:src/keys.c    **** 		{ 'G',  0000, 0202, 0000, 'g',  0242,  },  // K10
 477:src/keys.c    **** 		{ 'H',  0000, 'X',  0000, 'h',  0265,  },  // K11
 478:src/keys.c    **** 		{ 'I',  0000, 'I',  0000, 'i',  0250,  },  // K12
 479:src/keys.c    **** 
 480:src/keys.c    **** 		{ 0000, 0000, 'H',  0000, 0000, 0246,  },  // K20 ENTER
 481:src/keys.c    **** 		{ 'J',  '(',  ')',  0027, 'j',  ')',   },  // K21
 482:src/keys.c    **** 		{ 'K',  0010, 'K',  0225, 'k',  0251,  },  // K22
 483:src/keys.c    **** 		{ 'L',  0000, 0212, 0257, 'l',  0252,  },  // K23
 484:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000   },  // K24 <-
 485:src/keys.c    **** 
ARM GAS  /tmp/ccJ0w3QJ.s 			page 10


 486:src/keys.c    **** 		{ 0000, 0000, 0000, 0000, 0000, 0000,  },  // K30
 487:src/keys.c    **** 		{ 'M',  '7',  'M',  '&',  'm',  0253,  },  // K31
 488:src/keys.c    **** 		{ 'N',  '8',  'N',  '|',  'n',  0254,  },  // K32
 489:src/keys.c    **** 		{ 'O',  '9',  0227, 0013, 'o',  0267,  },  // K33
 490:src/keys.c    **** 		{ 'P',  '/',  0217, '\\', 'p',  0257,  },  // K34
 491:src/keys.c    **** 
 492:src/keys.c    **** 		{ 0000, 0000, 0000, '!',  0000, 0000,  },  // K40
 493:src/keys.c    **** 		{ 'Q',  '4',  0000, 0000, 'q',  0000,  },  // K41
 494:src/keys.c    **** 		{ 'R',  '5',  'R',  0000, 'r',  0260,  },  // K42
 495:src/keys.c    **** 		{ 'S',  '6',  0221, 0000, 's',  0261,  },  // K43
 496:src/keys.c    **** 		{ 'T',  0034, 'T',  0000, 't',  0262,  },  // K44
 497:src/keys.c    **** 
 498:src/keys.c    **** 		{ 0000, 0000, 0000, '?',  0000, 0000,  },  // K50
 499:src/keys.c    **** 		{ '1',  '1',  0207, 0000, '1',  0247,  },  // K51
 500:src/keys.c    **** 		{ 'U',  '2',  0000, 0000, 'u',  0000,  },  // K52
 501:src/keys.c    **** 		{ 'V',  '3',  0000, 0000, 'v',  0000,  },  // K53
 502:src/keys.c    **** 		{ 'W',  0034, 0000, 0000, 'w',  0000,  },  // K54
 503:src/keys.c    **** 
 504:src/keys.c    **** 		{ 0000, 0222, 0000, 0000, 0000, 0000,  },  // K60
 505:src/keys.c    **** 		{ '0',  '0',  0226, ' ',  '0',  0266,  },  // K61
 506:src/keys.c    **** 		{ 'X',  '.',  0215, 0000, 'x',  0255,  },  // K62
 507:src/keys.c    **** 		{ 'Y',  0000, 'Y',  0000, 'y',  0263,  },  // K63
 508:src/keys.c    **** 		{ 'Z',  '+',  'Z',  0000, 'z',  0245,  },  // K64
 509:src/keys.c    **** 	};
 510:src/keys.c    **** 	if (State2.alphashift) {
 511:src/keys.c    **** 		if (shift == SHIFT_N)
 512:src/keys.c    **** 			shift = SHIFT_LC_N;
 513:src/keys.c    **** 		else if (shift == SHIFT_G)
 514:src/keys.c    **** 			shift = SHIFT_LC_G;
 515:src/keys.c    **** 	}
 516:src/keys.c    **** 	return alphamap[keycode_to_linear(c)][shift];
 517:src/keys.c    **** }
 518:src/keys.c    **** #endif
 519:src/keys.c    **** static void init_arg(const enum rarg base) {
 520:src/keys.c    **** 	if (is_bad_cmdline())
 521:src/keys.c    **** 		return;
 522:src/keys.c    **** 	CmdBase = base;
 523:src/keys.c    **** 	State2.ind = 0;
 524:src/keys.c    **** 	State2.digval = 0;
 525:src/keys.c    **** 	State2.numdigit = 0;
 526:src/keys.c    **** 	State2.rarg = 1;
 527:src/keys.c    **** 	State2.dot = 0;
 528:src/keys.c    **** 	State2.local = 0;
 529:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 530:src/keys.c    **** }
 531:src/keys.c    **** 
 532:src/keys.c    **** static void init_cat(enum catalogues cat) {
 533:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 534:src/keys.c    **** 		// Save last catalogue for a later restore
 535:src/keys.c    **** 		State.last_cat = State2.catalogue;
 536:src/keys.c    **** 		CmdLineLength = 0;
 537:src/keys.c    **** 	}
 538:src/keys.c    **** 	process_cmdline();
 539:src/keys.c    **** 
 540:src/keys.c    **** 	State2.labellist = 0;
 541:src/keys.c    **** 	State2.registerlist = 0;
 542:src/keys.c    **** 	State2.status = 0;
ARM GAS  /tmp/ccJ0w3QJ.s 			page 11


 543:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 544:src/keys.c    **** 
 545:src/keys.c    **** 	switch (cat) {
 546:src/keys.c    **** 	case CATALOGUE_LABELS:
 547:src/keys.c    **** 		// Label browser
 548:src/keys.c    **** 		State2.labellist = 1;
 549:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 550:src/keys.c    **** 		break;
 551:src/keys.c    **** 	
 552:src/keys.c    **** 	case CATALOGUE_REGISTERS:
 553:src/keys.c    **** 		// Register browser
 554:src/keys.c    **** 		State2.registerlist = 1;
 555:src/keys.c    **** 		State2.digval = regX_idx;
 556:src/keys.c    **** 		State2.digval2 = 0;
 557:src/keys.c    **** 		break;
 558:src/keys.c    **** 
 559:src/keys.c    **** 	case CATALOGUE_STATUS:
 560:src/keys.c    **** 		// Flag browser
 561:src/keys.c    **** 		State2.status = 1;
 562:src/keys.c    **** 		break;
 563:src/keys.c    **** 
 564:src/keys.c    **** 	default:
 565:src/keys.c    **** 		// Normal catalogue
 566:src/keys.c    **** 		State2.catalogue = cat;
 567:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 568:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 569:src/keys.c    **** 			// Different catalogue, reset position
 570:src/keys.c    **** 			State.catpos = 0;
 571:src/keys.c    **** 		}
 572:src/keys.c    **** 	}
 573:src/keys.c    **** 	reset_shift();
 574:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 575:src/keys.c    **** 	changed_catalog_state();
 576:src/keys.c    **** #endif
 577:src/keys.c    **** }
 578:src/keys.c    **** 
 579:src/keys.c    **** /*
 580:src/keys.c    ****  *  Reset the internal state to a sane default
 581:src/keys.c    ****  */
 582:src/keys.c    **** void init_state(void) {
 583:src/keys.c    **** #ifndef REALBUILD
 584:src/keys.c    **** 	unsigned int a = State2.flags;
 585:src/keys.c    **** 	unsigned int b = State2.trace;
 586:src/keys.c    **** #else
 587:src/keys.c    **** 	FLAG t = TestFlag;
 588:src/keys.c    **** #endif
 589:src/keys.c    **** 	int v = Voltage;
 590:src/keys.c    **** 	int k = LastKey;
 591:src/keys.c    **** 
 592:src/keys.c    **** 	CmdBase = 0;
 593:src/keys.c    **** 	// Removed: will clear any locals on power off
 594:src/keys.c    **** 	// clrretstk(0);
 595:src/keys.c    **** 
 596:src/keys.c    **** 	xset(&State2, 0, sizeof(State2));
 597:src/keys.c    **** 	State2.test = TST_NONE;
 598:src/keys.c    **** 	State2.runmode = 1;
 599:src/keys.c    **** 	update_program_bounds(1);
ARM GAS  /tmp/ccJ0w3QJ.s 			page 12


 600:src/keys.c    **** 	set_lift();
 601:src/keys.c    **** 
 602:src/keys.c    **** 	// Restore stuff that has been moved to State2 for space reasons
 603:src/keys.c    **** 	// but must not be cleared.
 604:src/keys.c    **** 	Voltage = v;
 605:src/keys.c    **** 	LastKey = k;
 606:src/keys.c    **** #ifndef REALBUILD
 607:src/keys.c    **** 	State2.trace = b;
 608:src/keys.c    **** 	State2.flags = a;
 609:src/keys.c    **** #else
 610:src/keys.c    **** 	TestFlag = t;
 611:src/keys.c    **** #endif
 612:src/keys.c    **** 	ShowRegister = regX_idx;
 613:src/keys.c    **** }
 614:src/keys.c    **** 
 615:src/keys.c    **** void soft_init_state(void) {
 616:src/keys.c    **** 	int soft;
 617:src/keys.c    **** 	unsigned int runmode;
 618:src/keys.c    **** 	unsigned int alphas;
 619:src/keys.c    **** 
 620:src/keys.c    **** 	if (CmdLineLength) {
 621:src/keys.c    **** 		CmdLineLength = 0;
 622:src/keys.c    **** 		CmdLineEex = 0;
 623:src/keys.c    **** 		CmdLineDot = 0;
 624:src/keys.c    **** 		return;
 625:src/keys.c    **** 	}
 626:src/keys.c    **** 	soft = State2.multi || State2.rarg || State2.hyp || State2.gtodot || State2.labellist ||
 627:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 628:src/keys.c    **** 	runmode = State2.runmode;
 629:src/keys.c    **** 	alphas = State2.alphas;
 630:src/keys.c    **** 	init_state();
 631:src/keys.c    **** 	if (soft) {
 632:src/keys.c    **** 		State2.runmode = runmode;
 633:src/keys.c    **** 		State2.alphas = alphas;
 634:src/keys.c    **** 	}
 635:src/keys.c    **** }
 636:src/keys.c    **** 
 637:src/keys.c    **** static int check_confirm(int op) {
 638:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 639:src/keys.c    **** 		const int nilop = argKIND(op);
 640:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 641:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 642:src/keys.c    **** 			return STATE_UNFINISHED;
 643:src/keys.c    **** 		}
 644:src/keys.c    **** #ifndef DM42		// ND: I may want to include this now. 
 645:src/keys.c    **** 		if ((nilop >= OP_RECV && nilop <= OP_PSTO)
 646:src/keys.c    **** #endif
 647:src/keys.c    **** #ifdef DM42
 648:src/keys.c    **** 		    if (0    
 649:src/keys.c    **** #endif
 650:src/keys.c    **** #ifdef INFRARED
 651:src/keys.c    **** 			|| nilop == OP_PRINT_PGM
 652:src/keys.c    **** #endif
 653:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
 654:src/keys.c    **** 			|| nilop == OP_STOPWATCH
 655:src/keys.c    **** #endif
 656:src/keys.c    **** 		) {
ARM GAS  /tmp/ccJ0w3QJ.s 			page 13


 657:src/keys.c    **** 			// These commands are not programmable
 658:src/keys.c    **** 			NonProgrammable = 1;
 659:src/keys.c    **** 		}
 660:src/keys.c    **** 	}
 661:src/keys.c    **** 	return op;
 662:src/keys.c    **** }
 663:src/keys.c    **** 
 664:src/keys.c    **** static void set_smode(const enum single_disp d) {
 665:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 666:src/keys.c    **** }
 667:src/keys.c    **** 
 668:src/keys.c    **** static int check_f_key(int n, const int dflt) {
  30              		.loc 1 668 47 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
 669:src/keys.c    **** 	const int code = 100 + n;
  34              		.loc 1 669 2 view .LVU1
 668:src/keys.c    **** 	const int code = 100 + n;
  35              		.loc 1 668 47 is_stmt 0 view .LVU2
  36 0000 38B5     		push	{r3, r4, r5, lr}
  37              		.cfi_def_cfa_offset 16
  38              		.cfi_offset 3, -16
  39              		.cfi_offset 4, -12
  40              		.cfi_offset 5, -8
  41              		.cfi_offset 14, -4
 670:src/keys.c    **** 	unsigned int pc = state_pc();
 671:src/keys.c    **** 
 672:src/keys.c    **** 	if (State2.runmode) {
  42              		.loc 1 672 6 view .LVU3
  43 0002 0D4B     		ldr	r3, .L12
  44 0004 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
  45              	.LVL1:
 670:src/keys.c    **** 	unsigned int pc = state_pc();
  46              		.loc 1 670 2 is_stmt 1 view .LVU4
  47              		.loc 1 672 2 view .LVU5
  48              		.loc 1 672 5 is_stmt 0 view .LVU6
  49 0006 5B06     		lsls	r3, r3, #25
 668:src/keys.c    **** 	const int code = 100 + n;
  50              		.loc 1 668 47 view .LVU7
  51 0008 0C46     		mov	r4, r1
  52              		.loc 1 672 5 view .LVU8
  53 000a 0FD5     		bpl	.L5
 670:src/keys.c    **** 	unsigned int pc = state_pc();
  54              		.loc 1 670 20 view .LVU9
  55 000c 0B4B     		ldr	r3, .L12+4
  56              	.LVL2:
 670:src/keys.c    **** 	unsigned int pc = state_pc();
  57              		.loc 1 670 20 view .LVU10
  58 000e 1B68     		ldr	r3, [r3]
  59              	.LVL3:
 670:src/keys.c    **** 	unsigned int pc = state_pc();
  60              		.loc 1 670 15 view .LVU11
  61 0010 B3F8E037 		ldrh	r3, [r3, #2016]
  62              	.LVL4:
 673:src/keys.c    **** 		if (isXROM(pc))
  63              		.loc 1 673 3 is_stmt 1 view .LVU12
ARM GAS  /tmp/ccJ0w3QJ.s 			page 14


  64              		.loc 1 673 7 is_stmt 0 view .LVU13
  65 0014 9A0B     		lsrs	r2, r3, #14
 674:src/keys.c    **** 			pc = 1;
  66              		.loc 1 674 7 view .LVU14
  67 0016 032A     		cmp	r2, #3
  68              	.LVL5:
 675:src/keys.c    **** 		if (find_label_from(pc, code, FIND_OP_ENDS))
  69              		.loc 1 675 3 is_stmt 1 view .LVU15
 669:src/keys.c    **** 	unsigned int pc = state_pc();
  70              		.loc 1 669 12 is_stmt 0 view .LVU16
  71 0018 00F16405 		add	r5, r0, #100
  72              	.LVL6:
  73              		.loc 1 675 7 view .LVU17
  74 001c 2946     		mov	r1, r5
  75              	.LVL7:
  76              		.loc 1 675 7 view .LVU18
  77 001e 14BF     		ite	ne
  78 0020 1846     		movne	r0, r3
  79              	.LVL8:
  80              		.loc 1 675 7 view .LVU19
  81 0022 0120     		moveq	r0, #1
  82 0024 0222     		movs	r2, #2
  83 0026 FFF7FEFF 		bl	find_label_from
  84              	.LVL9:
  85              		.loc 1 675 6 view .LVU20
  86 002a 08B9     		cbnz	r0, .L11
  87              	.LVL10:
  88              	.L5:
 676:src/keys.c    **** 			return RARG(RARG_XEQ, code);
 677:src/keys.c    **** 	}
 678:src/keys.c    **** 	return dflt;
  89              		.loc 1 678 9 view .LVU21
  90 002c 2046     		mov	r0, r4
 679:src/keys.c    **** }
  91              		.loc 1 679 1 view .LVU22
  92 002e 38BD     		pop	{r3, r4, r5, pc}
  93              	.LVL11:
  94              	.L11:
 676:src/keys.c    **** 			return RARG(RARG_XEQ, code);
  95              		.loc 1 676 4 is_stmt 1 view .LVU23
 676:src/keys.c    **** 			return RARG(RARG_XEQ, code);
  96              		.loc 1 676 11 is_stmt 0 view .LVU24
  97 0030 45F4C840 		orr	r0, r5, #25600
  98              		.loc 1 679 1 view .LVU25
  99 0034 38BD     		pop	{r3, r4, r5, pc}
 100              	.LVL12:
 101              	.L13:
 102              		.loc 1 679 1 view .LVU26
 103 0036 00BF     		.align	2
 104              	.L12:
 105 0038 00000000 		.word	StateWhileOn
 106 003c 00000000 		.word	main_ram
 107              		.cfi_endproc
 108              	.LFE17:
 110              		.section	.text.is_label_or_end_at,"ax",%progbits
 111              		.align	1
 112              		.p2align 2,,3
ARM GAS  /tmp/ccJ0w3QJ.s 			page 15


 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 116              		.fpu fpv4-sp-d16
 118              	is_label_or_end_at:
 119              	.LVL13:
 120              	.LFB49:
 680:src/keys.c    **** 
 681:src/keys.c    **** /* Return non-zero if the current mode is integer and we accept letters
 682:src/keys.c    ****  * as digits.
 683:src/keys.c    ****  */
 684:src/keys.c    **** static int intltr(int d) {
 685:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 686:src/keys.c    **** }
 687:src/keys.c    **** 
 688:src/keys.c    **** /*
 689:src/keys.c    ****  *  Process a key code in the unshifted mode.
 690:src/keys.c    ****  */
 691:src/keys.c    **** 
 692:src/keys.c    **** // ND: straightforward? Probably.
 693:src/keys.c    **** static int process_normal(const keycode c)
 694:src/keys.c    **** {
 695:src/keys.c    **** 	static const unsigned short int op_map[] = {
 696:src/keys.c    **** 		// Row 1
 697:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS, // A to D
 698:src/keys.c    **** 		OP_MON  | OP_RECIP,
 699:src/keys.c    **** 		OP_DYA  | OP_POW,
 700:src/keys.c    **** 		OP_MON  | OP_SQRT,
 701:src/keys.c    **** 		OP_SPEC | OP_E,		// ->
 702:src/keys.c    **** 		OP_SPEC | OP_F,		// CPX
 703:src/keys.c    **** 		// Row 2
 704:src/keys.c    **** 		RARG_STO,
 705:src/keys.c    **** 		RARG_RCL,
 706:src/keys.c    **** 		OP_NIL  | OP_RDOWN,
 707:src/keys.c    **** 		// Row 3
 708:src/keys.c    **** 		OP_SPEC | OP_ENTER,
 709:src/keys.c    **** 		RARG(RARG_SWAPX, regY_idx),
 710:src/keys.c    **** 		OP_SPEC | OP_CHS,	// CHS
 711:src/keys.c    **** 		OP_SPEC | OP_EEX,	// EEX
 712:src/keys.c    **** 		OP_SPEC | OP_CLX,	// <-
 713:src/keys.c    **** 		// Row 4
 714:src/keys.c    **** 		RARG_XEQ,
 715:src/keys.c    **** 		OP_SPEC | OP_7,
 716:src/keys.c    **** 		OP_SPEC | OP_8,
 717:src/keys.c    **** 		OP_SPEC | OP_9,
 718:src/keys.c    **** 		OP_DYA  | OP_DIV,
 719:src/keys.c    **** 		// Row 5
 720:src/keys.c    **** 		STATE_BST,
 721:src/keys.c    **** 		OP_SPEC | OP_4,
 722:src/keys.c    **** 		OP_SPEC | OP_5,
 723:src/keys.c    **** 		OP_SPEC | OP_6,
 724:src/keys.c    **** 		OP_DYA  | OP_MUL,
 725:src/keys.c    **** 		// Row 6
 726:src/keys.c    **** 		STATE_SST,		// SST
 727:src/keys.c    **** 		OP_SPEC | OP_1,
 728:src/keys.c    **** 		OP_SPEC | OP_2,
 729:src/keys.c    **** 		OP_SPEC | OP_3,
ARM GAS  /tmp/ccJ0w3QJ.s 			page 16


 730:src/keys.c    **** 		OP_DYA  | OP_SUB,
 731:src/keys.c    **** 		// Row 7
 732:src/keys.c    **** 		STATE_UNFINISHED,	// ON/C
 733:src/keys.c    **** 		OP_SPEC | OP_0,
 734:src/keys.c    **** 		OP_SPEC | OP_DOT,
 735:src/keys.c    **** 		OP_NIL  | OP_RS,	// R/S
 736:src/keys.c    **** 		OP_DYA  | OP_ADD,
 737:src/keys.c    **** #ifdef DM42
 738:src/keys.c    **** 		OP_NIL  | OP_NOP,  // shifts etc.
 739:src/keys.c    **** #endif
 740:src/keys.c    **** 	};
 741:src/keys.c    **** 
 742:src/keys.c    **** 	int lc = keycode_to_linear(c);
 743:src/keys.c    **** 	// print_debug (10, lc);
 744:src/keys.c    **** 	int op = op_map[lc];
 745:src/keys.c    **** 	// print_debug (11, op);
 746:src/keys.c    **** 	
 747:src/keys.c    **** 	// The switch handles all the special cases
 748:src/keys.c    **** #ifdef DM42
 749:src/keys.c    **** 	int op_int;
 750:src/keys.c    **** 	if (UState.intm) {
 751:src/keys.c    **** 	  switch (c) {
 752:src/keys.c    **** 	  case K00:
 753:src/keys.c    **** 	    op = OP_SPEC | OP_A;
 754:src/keys.c    **** 	    if (intltr(10)) {
 755:src/keys.c    **** 	      return op;
 756:src/keys.c    **** 	    }
 757:src/keys.c    **** 	    else {
 758:src/keys.c    **** 	      return check_f_key(0, op);
 759:src/keys.c    **** 	    }
 760:src/keys.c    **** 	  case K01:
 761:src/keys.c    **** 	    op = OP_SPEC | OP_B;
 762:src/keys.c    **** 	    if (intltr(11)) {
 763:src/keys.c    **** 	      return op;
 764:src/keys.c    **** 	    }
 765:src/keys.c    **** 	    else {
 766:src/keys.c    **** 	      return check_f_key(1, op);
 767:src/keys.c    **** 	    }
 768:src/keys.c    **** 	  case K03:
 769:src/keys.c    **** 	    op_int = OP_SPEC | OP_C;
 770:src/keys.c    **** 	    if (intltr(12)) {
 771:src/keys.c    **** 	      return op_int;
 772:src/keys.c    **** 	    }
 773:src/keys.c    **** 	    else {
 774:src/keys.c    **** 	      return check_f_key(2, op);
 775:src/keys.c    **** 	    }
 776:src/keys.c    **** 	  case K30:
 777:src/keys.c    **** 	    op_int = OP_SPEC | OP_F;
 778:src/keys.c    **** 	    if (intltr(15)) {
 779:src/keys.c    **** 	      return op_int;
 780:src/keys.c    **** 	    }
 781:src/keys.c    **** 	    else {
 782:src/keys.c    **** 	      return check_f_key(5, op);
 783:src/keys.c    **** 	    }
 784:src/keys.c    **** 	  default:;
 785:src/keys.c    **** 	  }
 786:src/keys.c    **** 	}
ARM GAS  /tmp/ccJ0w3QJ.s 			page 17


 787:src/keys.c    **** #endif   	    
 788:src/keys.c    **** 	// print_debug (12, lc);
 789:src/keys.c    **** 
 790:src/keys.c    **** 	switch (c) {
 791:src/keys.c    **** #ifdef DM42
 792:src/keys.c    **** 	case K00:
 793:src/keys.c    **** 		return check_f_key(0, op);
 794:src/keys.c    **** 	case K01:
 795:src/keys.c    **** 		return check_f_key(1, op);
 796:src/keys.c    **** 	case K03:
 797:src/keys.c    **** 		return check_f_key(2, op);
 798:src/keys.c    **** #else
 799:src/keys.c    **** 	case K00:
 800:src/keys.c    **** 	case K01:
 801:src/keys.c    **** 		if (UState.intm)
 802:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 803:src/keys.c    **** 	case K02:
 804:src/keys.c    **** 	case K03:
 805:src/keys.c    **** 		if (intltr(lc + 10)) {
 806:src/keys.c    **** 			op = OP_SPEC | (OP_A + lc);
 807:src/keys.c    **** 			return op;
 808:src/keys.c    **** 		}
 809:src/keys.c    **** 		return check_f_key(lc, op);
 810:src/keys.c    **** #endif		
 811:src/keys.c    **** 	case K_ARROW:
 812:src/keys.c    **** #ifndef DM42
 813:src/keys.c    **** #ifdef INT_MODE_TEMPVIEW
 814:src/keys.c    **** 		if (intltr(14))
 815:src/keys.c    **** 			return op;
 816:src/keys.c    **** #else
 817:src/keys.c    **** 		if (UState.intm)
 818:src/keys.c    **** 			return op;
 819:src/keys.c    **** #endif
 820:src/keys.c    **** #endif		
 821:src/keys.c    **** 		if (is_bad_cmdline())
 822:src/keys.c    **** 			return STATE_UNFINISHED;
 823:src/keys.c    **** 		process_cmdline_set_lift();
 824:src/keys.c    **** 		State2.arrow = 1;
 825:src/keys.c    **** #ifdef DM42
 826:src/keys.c    **** 		set_menu (9);
 827:src/keys.c    **** 		display_current_menu ();
 828:src/keys.c    **** 		lcd_refresh ();
 829:src/keys.c    **** #else
 830:src/keys.c    **** 		set_shift(SHIFT_G);
 831:src/keys.c    **** #endif
 832:src/keys.c    **** 		break;
 833:src/keys.c    **** 
 834:src/keys.c    **** 	case K_CMPLX:
 835:src/keys.c    **** #ifndef DM42
 836:src/keys.c    **** 	  if (UState.intm)
 837:src/keys.c    **** 	    return op;
 838:src/keys.c    **** #endif
 839:src/keys.c    **** 		State2.cmplx = 1;
 840:src/keys.c    **** 		break;
 841:src/keys.c    **** 
 842:src/keys.c    **** 	case K24:				// <-
 843:src/keys.c    **** 		if (State2.disp_temp)
ARM GAS  /tmp/ccJ0w3QJ.s 			page 18


 844:src/keys.c    **** 			return STATE_UNFINISHED;
 845:src/keys.c    **** 		if (State2.runmode)
 846:src/keys.c    **** 			return op;
 847:src/keys.c    **** 		return STATE_BACKSPACE;
 848:src/keys.c    **** 
 849:src/keys.c    **** 	case K10:				// STO
 850:src/keys.c    **** 	case K11:				// RCL
 851:src/keys.c    **** 	case K30:				// XEQ
 852:src/keys.c    **** 		init_arg((enum rarg)op);
 853:src/keys.c    **** 		break;
 854:src/keys.c    **** 
 855:src/keys.c    **** 	default:
 856:src/keys.c    **** 		return op;			// Keys handled by table
 857:src/keys.c    **** 	}
 858:src/keys.c    **** 	return STATE_UNFINISHED;
 859:src/keys.c    **** }
 860:src/keys.c    **** 
 861:src/keys.c    **** 
 862:src/keys.c    **** /*
 863:src/keys.c    ****  *  Process a key code after f or g shift
 864:src/keys.c    ****  */
 865:src/keys.c    **** // ND: if the last one has worked, this one should too:
 866:src/keys.c    **** static int process_fg_shifted(const keycode c) {
 867:src/keys.c    **** 
 868:src/keys.c    **** #define NO_INT 0xf000
 869:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 870:src/keys.c    **** 		// Row 1
 871:src/keys.c    **** 		{ 1,                               0                           }, // HYP
 872:src/keys.c    **** 		{ OP_MON | OP_SIN      | NO_INT,   OP_MON | OP_ASIN   | NO_INT },
 873:src/keys.c    **** 		{ OP_MON | OP_COS      | NO_INT,   OP_MON | OP_ACOS   | NO_INT },
 874:src/keys.c    **** 		{ OP_MON | OP_TAN      | NO_INT,   OP_MON | OP_ATAN   | NO_INT },
 875:src/keys.c    **** 		{ OP_NIL | OP_P2R      | NO_INT,   OP_NIL | OP_R2P    | NO_INT },
 876:src/keys.c    **** 		{ OP_NIL | OP_FRACPROPER,	   OP_NIL | OP_FRACIMPROPER    }, // CPX
 877:src/keys.c    **** 		// Row 2
 878:src/keys.c    **** 		{ OP_NIL | OP_HMS,                 OP_NIL | OP_DEG    | NO_INT },
 879:src/keys.c    **** 		{ OP_NIL | OP_FLOAT,               OP_NIL | OP_RAD    | NO_INT },
 880:src/keys.c    **** 		{ OP_NIL | OP_RANDOM,              OP_NIL | OP_GRAD   | NO_INT },
 881:src/keys.c    **** 		// Row 3
 882:src/keys.c    **** 		{ STATE_UNFINISHED,		   OP_NIL | OP_FILL            }, // ENTER
 883:src/keys.c    **** 		{ STATE_WINDOWLEFT,   		   STATE_WINDOWRIGHT   	       },
 884:src/keys.c    **** 		{ RARG(RARG_BASE, 2),		   RARG(RARG_BASE, 8)          },
 885:src/keys.c    **** 		{ RARG(RARG_BASE, 10),		   RARG(RARG_BASE, 16)         },
 886:src/keys.c    **** 		{ OP_NIL | OP_CLPROG,		   OP_NIL | OP_SIGMACLEAR      },
 887:src/keys.c    **** 		// Row 4
 888:src/keys.c    **** 		{ OP_MON | OP_EXP,                 OP_MON | OP_LN              },
 889:src/keys.c    **** 		{ OP_MON | OP_10POWX,		   OP_MON | OP_LOG             },
 890:src/keys.c    **** 		{ OP_MON | OP_2POWX,		   OP_MON | OP_LG2             },
 891:src/keys.c    **** 		{ OP_DYA | OP_POW,                 OP_DYA | OP_LOGXY           },
 892:src/keys.c    **** 		{ OP_MON | OP_RECIP    | NO_INT,   OP_DYA | OP_PARAL	       },
 893:src/keys.c    **** 		// Row 5
 894:src/keys.c    **** 		{ OP_DYA | OP_COMB,                OP_DYA | OP_PERM            },
 895:src/keys.c    **** 		{ OP_MON | OP_cdf_Q    | NO_INT,   OP_MON | OP_qf_Q   | NO_INT },
 896:src/keys.c    **** 		{ OP_NIL | OP_statMEAN | NO_INT,   OP_NIL | OP_statS  | NO_INT },
 897:src/keys.c    **** 		{ OP_MON | OP_yhat     | NO_INT,   OP_NIL | OP_statR  | NO_INT },
 898:src/keys.c    **** 		{ OP_MON | OP_SQRT,		   OP_MON | OP_SQR             },
 899:src/keys.c    **** 		// Row 6
 900:src/keys.c    **** 		{ RARG_SF,                         RARG_CF                     },
ARM GAS  /tmp/ccJ0w3QJ.s 			page 19


 901:src/keys.c    **** 		{ TST_EQ,                          TST_NE                      }, // tests
 902:src/keys.c    **** 		{ RARG_SOLVE           | NO_INT,   RARG_INTG          | NO_INT },
 903:src/keys.c    **** 		{ RARG_PROD            | NO_INT,   RARG_SUM           | NO_INT },
 904:src/keys.c    **** 		{ OP_MON | OP_PERCNT   | NO_INT,   OP_MON | OP_PERCHG | NO_INT },
 905:src/keys.c    **** 		// Row 7
 906:src/keys.c    **** #ifdef INFRARED
 907:src/keys.c    **** 		{ RARG(RARG_PRINT_REG,regX_idx),   STATE_UNFINISHED	       },
 908:src/keys.c    **** #else
 909:src/keys.c    **** 		{ STATE_UNFINISHED,		   STATE_UNFINISHED	       },
 910:src/keys.c    **** #endif
 911:src/keys.c    **** 		{ OP_MON | OP_ABS,		   OP_MON | OP_RND             },
 912:src/keys.c    **** 		{ OP_MON | OP_TRUNC,		   OP_MON | OP_FRAC            },
 913:src/keys.c    **** 		{ RARG_LBL,			   OP_NIL | OP_RTN             },
 914:src/keys.c    **** 		{ RARG_DSE,			   RARG_ISG                    },
 915:src/keys.c    **** #ifdef DM42
 916:src/keys.c    **** 		{ OP_NIL | OP_NOP,		   OP_NIL |OP_NOP              },
 917:src/keys.c    **** #endif
 918:src/keys.c    **** 	};
 919:src/keys.c    **** 
 920:src/keys.c    **** 	static const unsigned short int op_map2[] = {
 921:src/keys.c    **** 		STATE_UNFINISHED,
 922:src/keys.c    **** 		STATE_UNFINISHED,
 923:src/keys.c    **** 		OP_DYA  | OP_POW,
 924:src/keys.c    **** 		OP_MON  | OP_SQRT
 925:src/keys.c    **** 	};
 926:src/keys.c    **** 
 927:src/keys.c    **** 	enum shifts shift = reset_shift();
 928:src/keys.c    **** 	int lc = keycode_to_linear(c);
 929:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 930:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 931:src/keys.c    **** 	if (no_int)
 932:src/keys.c    **** 		op &= ~NO_INT;
 933:src/keys.c    **** 
 934:src/keys.c    **** 	switch (c) {
 935:src/keys.c    **** 	case K00:
 936:src/keys.c    **** 	  if (! UState.intm) {
 937:src/keys.c    **** 	    State2.hyp = 1;
 938:src/keys.c    **** 	    State2.dot = op;
 939:src/keys.c    **** 	    // State2.cmplx = 0;
 940:src/keys.c    **** 	    return STATE_UNFINISHED;
 941:src/keys.c    **** 	  }
 942:src/keys.c    **** 	  // fall through
 943:src/keys.c    **** 	case K01:
 944:src/keys.c    **** #ifdef DM42
 945:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 946:src/keys.c    **** 	    return check_f_key(lc, op_map2[lc]);
 947:src/keys.c    **** 	  }
 948:src/keys.c    **** 	  break;
 949:src/keys.c    **** #endif
 950:src/keys.c    **** #ifndef DM42
 951:src/keys.c    **** 	case K02:
 952:src/keys.c    **** #endif
 953:src/keys.c    **** 	case K03:
 954:src/keys.c    **** #ifdef DM42
 955:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 956:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 957:src/keys.c    **** 		}
ARM GAS  /tmp/ccJ0w3QJ.s 			page 20


 958:src/keys.c    **** 		break;
 959:src/keys.c    **** #else
 960:src/keys.c    **** 	  if (UState.intm && shift == SHIFT_F) {
 961:src/keys.c    **** 			return check_f_key(2, op_map2[lc]);
 962:src/keys.c    **** 		}
 963:src/keys.c    **** 		break;
 964:src/keys.c    **** #endif
 965:src/keys.c    **** 	case K20:				// Alpha
 966:src/keys.c    **** 		if (shift == SHIFT_F) {
 967:src/keys.c    **** 			if (is_bad_cmdline())
 968:src/keys.c    **** 				return STATE_UNFINISHED;
 969:src/keys.c    **** 			process_cmdline_set_lift();
 970:src/keys.c    **** 			State2.alphas = 1;
 971:src/keys.c    **** 		}
 972:src/keys.c    **** 		break;
 973:src/keys.c    **** #ifdef DM42
 974:src/keys.c    **** 	case K31:
 975:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(13)) {// Log - so D key
 976:src/keys.c    **** 	    return OP_SPEC | OP_D;
 977:src/keys.c    **** 	  }
 978:src/keys.c    **** 	  break;
 979:src/keys.c    **** 	case K30:
 980:src/keys.c    **** 	  if ((shift == SHIFT_G) && UState.intm && intltr(14)) {// Ln - so E key
 981:src/keys.c    **** 	    return OP_SPEC | OP_E;
 982:src/keys.c    **** 	  }
 983:src/keys.c    **** 	  break;
 984:src/keys.c    **** #endif
 985:src/keys.c    **** 	case K51:
 986:src/keys.c    **** 		if (is_bad_cmdline())
 987:src/keys.c    **** 			return STATE_UNFINISHED;
 988:src/keys.c    **** 		process_cmdline_set_lift();
 989:src/keys.c    **** 		State2.test = op;
 990:src/keys.c    **** 		return STATE_UNFINISHED;
 991:src/keys.c    **** 
 992:src/keys.c    **** 	case K50:
 993:src/keys.c    **** #ifndef REALBUILD
 994:src/keys.c    **** 		if (SHIFT_N != shift_down()) {
 995:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 996:src/keys.c    **** 			return STATE_UNFINISHED;
 997:src/keys.c    **** 		}
 998:src/keys.c    **** #endif
 999:src/keys.c    **** 	case K52:
1000:src/keys.c    **** 	case K53:
1001:src/keys.c    **** 	case K63:
1002:src/keys.c    **** 	case K64:
1003:src/keys.c    **** 		if (op != (OP_NIL | OP_RTN)) {
1004:src/keys.c    **** 			if (! (no_int && UState.intm)) {
1005:src/keys.c    **** 				init_arg((enum rarg) op);
1006:src/keys.c    **** 			}
1007:src/keys.c    **** 			return STATE_UNFINISHED;
1008:src/keys.c    **** 		}
1009:src/keys.c    **** 		break;
1010:src/keys.c    **** 
1011:src/keys.c    **** 	default:
1012:src/keys.c    **** 		break;
1013:src/keys.c    **** 	}
1014:src/keys.c    **** 	if (no_int && UState.intm)
ARM GAS  /tmp/ccJ0w3QJ.s 			page 21


1015:src/keys.c    **** 		return STATE_UNFINISHED;
1016:src/keys.c    **** 
1017:src/keys.c    **** 	return check_confirm(op);
1018:src/keys.c    **** #undef NO_INT
1019:src/keys.c    **** }
1020:src/keys.c    **** 
1021:src/keys.c    **** /*
1022:src/keys.c    ****  *  Process a key code after h shift
1023:src/keys.c    ****  */
1024:src/keys.c    **** // ND: this has to be merged in with the above as there is no longer to be h-shift
1025:src/keys.c    **** static int process_h_shifted(const keycode c) {
1026:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
1027:src/keys.c    **** #define NO_INT   0x4000
1028:src/keys.c    **** 	static const unsigned short int op_map[] = {
1029:src/keys.c    **** 		// Row 1
1030:src/keys.c    **** 		_RARG   | RARG_STD,
1031:src/keys.c    **** 		_RARG   | RARG_FIX,
1032:src/keys.c    **** 		_RARG   | RARG_SCI,
1033:src/keys.c    **** 		_RARG   | RARG_ENG,
1034:src/keys.c    **** 		STATE_UNFINISHED,	// CONV
1035:src/keys.c    **** 		STATE_UNFINISHED,	// MODE
1036:src/keys.c    **** 		// Row 2
1037:src/keys.c    **** 		STATE_UNFINISHED,	// CAT
1038:src/keys.c    **** 		_RARG   | RARG_VIEW,
1039:src/keys.c    **** 		OP_NIL  | OP_RUP,
1040:src/keys.c    **** 		// Row 3
1041:src/keys.c    **** 		_RARG	| RARG_INTNUM,	// CONST, will be emitted in integer mode only
1042:src/keys.c    **** 		_RARG   | RARG_SWAPX,
1043:src/keys.c    **** 		OP_MON  | OP_NOT,
1044:src/keys.c    **** 		CONST(OP_PI) | NO_INT,
1045:src/keys.c    **** 		OP_NIL  | OP_rCLX,
1046:src/keys.c    **** 		// Row 4
1047:src/keys.c    **** 		_RARG   | RARG_GTO,
1048:src/keys.c    **** 		OP_DYA  | OP_LAND,
1049:src/keys.c    **** 		OP_DYA  | OP_LOR,
1050:src/keys.c    **** 		OP_DYA  | OP_LXOR,
1051:src/keys.c    **** 		OP_DYA  | OP_MOD,
1052:src/keys.c    **** 		// Row 5
1053:src/keys.c    **** 		OP_MON  | OP_FACT,
1054:src/keys.c    **** 		STATE_UNFINISHED,	// PROB
1055:src/keys.c    **** 		STATE_UNFINISHED,	// STAT
1056:src/keys.c    **** 		STATE_UNFINISHED,	// CFIT
1057:src/keys.c    **** 		STATE_UNFINISHED,	// MATRIX
1058:src/keys.c    **** 		// Row 6
1059:src/keys.c    **** 		STATE_UNFINISHED,	// STATUS
1060:src/keys.c    **** 		STATE_UNFINISHED,	// TEST
1061:src/keys.c    **** 		STATE_UNFINISHED,	// P.FCN
1062:src/keys.c    **** 		STATE_UNFINISHED,	// X.FCN
1063:src/keys.c    **** 		OP_SPEC | OP_SIGMAMINUS | NO_INT,
1064:src/keys.c    **** 		// Row 7
1065:src/keys.c    **** 		OP_NIL | OP_OFF,
1066:src/keys.c    **** 		_RARG   | RARG_PAUSE,
1067:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1068:src/keys.c    **** 		OP_NIL  | OP_THOUS_OFF,
1069:src/keys.c    **** #else
1070:src/keys.c    ****  		OP_NIL  | OP_RADCOM,
1071:src/keys.c    **** #endif
ARM GAS  /tmp/ccJ0w3QJ.s 			page 22


1072:src/keys.c    **** 		STATE_UNFINISHED,	// P/R
1073:src/keys.c    **** 		OP_SPEC | OP_SIGMAPLUS | NO_INT,
1074:src/keys.c    **** #ifdef DM42
1075:src/keys.c    **** 		OP_NIL | OP_NOP,       // shifts etc.
1076:src/keys.c    **** #endif
1077:src/keys.c    **** 	};
1078:src/keys.c    **** 
1079:src/keys.c    **** 	int lc = keycode_to_linear(c);
1080:src/keys.c    **** 	int op = op_map[lc];
1081:src/keys.c    **** 	reset_shift();
1082:src/keys.c    **** 
1083:src/keys.c    **** 	// The switch handles all the special cases
1084:src/keys.c    **** 	switch (c) {
1085:src/keys.c    **** 	case K62:
1086:src/keys.c    **** 		if (UState.intm)
1087:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
1088:src/keys.c    **** 		else
1089:src/keys.c    **** #ifdef MODIFY_K62_E3_SWITCH
1090:src/keys.c    **** 			if (UState.nothousands) op = OP_NIL | OP_THOUS_ON;
1091:src/keys.c    **** #else
1092:src/keys.c    **** 			if (UState.fraccomma) op = OP_NIL | OP_RADDOT;
1093:src/keys.c    **** #endif
1094:src/keys.c    **** 		break;
1095:src/keys.c    **** 
1096:src/keys.c    **** 	case K63:					// Program<->Run mode
1097:src/keys.c    **** 		if (is_bad_cmdline())
1098:src/keys.c    **** 			return STATE_UNFINISHED;
1099:src/keys.c    **** 		State2.runmode = 1 - State2.runmode;
1100:src/keys.c    **** 		process_cmdline_set_lift();
1101:src/keys.c    **** 		update_program_bounds(1);
1102:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
1103:src/keys.c    **** 			set_pc(0);
1104:src/keys.c    **** 		break;
1105:src/keys.c    **** 
1106:src/keys.c    **** 	default:
1107:src/keys.c    **** 		break;
1108:src/keys.c    **** 	}
1109:src/keys.c    **** 
1110:src/keys.c    **** 	if (op != STATE_UNFINISHED) {
1111:src/keys.c    **** 		if (op & _RARG) {
1112:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
1113:src/keys.c    **** 			op = STATE_UNFINISHED;
1114:src/keys.c    **** 		}
1115:src/keys.c    **** 	}
1116:src/keys.c    **** 	return UState.intm && (op & NO_INT) ? STATE_UNFINISHED : op & ~NO_INT;
1117:src/keys.c    **** #undef _RARG
1118:src/keys.c    **** #undef NO_INT
1119:src/keys.c    **** }
1120:src/keys.c    **** 
1121:src/keys.c    **** /*
1122:src/keys.c    ****  *  Process a key code after CPX
1123:src/keys.c    ****  */
1124:src/keys.c    **** // ND: again, change;
1125:src/keys.c    **** static int process_cmplx(const keycode c) {
1126:src/keys.c    **** #define _RARG   0xFF00
1127:src/keys.c    **** #define CSWAPXZ RARG(RARG_CSWAPX, regZ_idx)
1128:src/keys.c    **** #define CNUM(n) RARG(RARG_INTNUM_CMPLX, n)
ARM GAS  /tmp/ccJ0w3QJ.s 			page 23


1129:src/keys.c    **** 
1130:src/keys.c    **** 	static const unsigned short int op_map[][4] = {
1131:src/keys.c    **** 		// Row 1
1132:src/keys.c    **** 		{ 1,			1,                   0,                   0		      }, // HYP
1133:src/keys.c    **** 		{ OP_CMON | OP_RECIP,	OP_CMON | OP_SIN,    OP_CMON | OP_ASIN,   STATE_UNFINISHED    },
1134:src/keys.c    **** 		{ OP_CDYA | OP_POW,	OP_CMON | OP_COS,    OP_CMON | OP_ACOS,   STATE_UNFINISHED    },
1135:src/keys.c    **** 		{ OP_CMON | OP_SQRT,	OP_CMON | OP_TAN,    OP_CMON | OP_ATAN,   STATE_UNFINISHED    },
1136:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_NIL | OP_P2R,     OP_NIL | OP_R2P,     STATE_UNFINISHED    },
1137:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    }, // CPX
1138:src/keys.c    **** 		// Row 2
1139:src/keys.c    **** 		{ _RARG | RARG_CSTO,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1140:src/keys.c    **** 		{ _RARG | RARG_CRCL,	STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CVIEW  },
1141:src/keys.c    **** 		{ OP_NIL | OP_CRDOWN,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_CRUP    }, // R^
1142:src/keys.c    **** 		// Row 3
1143:src/keys.c    **** 		{ OP_NIL | OP_CENTER,	STATE_UNFINISHED,    OP_NIL | OP_CFILL,   OP_NIL | OP_CFILL   }, // ENTER
1144:src/keys.c    **** 		{ CSWAPXZ,		STATE_UNFINISHED,    STATE_UNFINISHED,    _RARG | RARG_CSWAPX },
1145:src/keys.c    **** 		{ OP_CMON | OP_CCHS,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_CMON | OP_CCONJ  },
1146:src/keys.c    **** 		{ CONST_CMPLX(OP_PI),	STATE_UNFINISHED,    STATE_UNFINISHED,    CONST_CMPLX(OP_PI)  },
1147:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1148:src/keys.c    **** 		// Row 4
1149:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CMON | OP_EXP,    OP_CMON | OP_LN,     STATE_UNFINISHED    },
1150:src/keys.c    **** 		{ CNUM(7),		OP_CMON | OP_10POWX, OP_CMON | OP_LOG,    STATE_UNFINISHED    },
1151:src/keys.c    **** 		{ CNUM(8),		OP_CMON | OP_2POWX,  OP_CMON | OP_LG2,    STATE_UNFINISHED    },
1152:src/keys.c    **** 		{ CNUM(9),		OP_CDYA | OP_POW,    OP_CDYA | OP_LOGXY,  STATE_UNFINISHED    },
1153:src/keys.c    **** 		{ OP_CDYA | OP_DIV,	OP_CMON | OP_RECIP,  OP_CDYA | OP_PARAL,  STATE_UNFINISHED    },
1154:src/keys.c    **** 		// Row 5
1155:src/keys.c    **** 		{ STATE_UNFINISHED,	OP_CDYA | OP_COMB,   OP_CDYA | OP_PERM,   OP_CMON | OP_FACT   },
1156:src/keys.c    **** 		{ CNUM(4),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1157:src/keys.c    **** 		{ CNUM(5),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1158:src/keys.c    **** 		{ CNUM(6),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1159:src/keys.c    **** 		{ OP_CDYA | OP_MUL,	OP_CMON | OP_SQRT,   OP_CMON | OP_SQR,    OP_CMON | OP_SQR    },
1160:src/keys.c    **** 		// Row 6
1161:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1162:src/keys.c    **** 		{ CNUM(1),		TST_EQ,              TST_NE,              STATE_UNFINISHED    }, // tests
1163:src/keys.c    **** 		{ CNUM(2),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1164:src/keys.c    **** 		{ CNUM(3),		STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1165:src/keys.c    **** 		{ OP_CDYA | OP_SUB,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1166:src/keys.c    **** 		// Row 7
1167:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    OP_NIL | OP_OFF     },
1168:src/keys.c    **** 		{ CNUM(0),		OP_CMON | OP_ABS,    OP_CMON | OP_RND,    STATE_UNFINISHED    },
1169:src/keys.c    **** 		{ OP_NIL | OP_cmplxI,	OP_CMON | OP_TRUNC,  OP_CMON | OP_FRAC,   STATE_UNFINISHED    },
1170:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1171:src/keys.c    **** 		{ OP_NIL | OP_STOPWATCH, STATE_UNFINISHED,   STATE_UNFINISHED,    STATE_UNFINISHED    },
1172:src/keys.c    **** #else
1173:src/keys.c    **** 		{ STATE_UNFINISHED,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1174:src/keys.c    **** #endif
1175:src/keys.c    **** 		{ OP_CDYA | OP_ADD,	STATE_UNFINISHED,    STATE_UNFINISHED,    STATE_UNFINISHED    },
1176:src/keys.c    **** #ifdef DM42
1177:src/keys.c    **** 		{ OP_NIL | OP_NOP,	OP_NIL | OP_NOP,    OP_NIL | OP_NOP,    OP_NIL | OP_NOP    }
1178:src/keys.c    **** #endif
1179:src/keys.c    **** 	};
1180:src/keys.c    **** 
1181:src/keys.c    **** 	enum shifts shift = reset_shift();
1182:src/keys.c    **** 	int lc = keycode_to_linear(c);
1183:src/keys.c    **** 	int op = op_map[lc][shift];
1184:src/keys.c    **** 	State2.cmplx = 0;
1185:src/keys.c    **** 
ARM GAS  /tmp/ccJ0w3QJ.s 			page 24


1186:src/keys.c    **** 	if ((op & _RARG) == _RARG) {
1187:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
1188:src/keys.c    **** 		return STATE_UNFINISHED;
1189:src/keys.c    **** 	}
1190:src/keys.c    **** 	if (c == K00) {
1191:src/keys.c    **** 		// HYP
1192:src/keys.c    **** 		process_cmdline_set_lift();
1193:src/keys.c    **** 		State2.hyp = 1;
1194:src/keys.c    **** 		State2.dot = op;
1195:src/keys.c    **** 		State2.cmplx = 1;
1196:src/keys.c    **** 		return STATE_UNFINISHED;
1197:src/keys.c    **** 	}
1198:src/keys.c    **** 
1199:src/keys.c    **** 	if (shift != SHIFT_N) {
1200:src/keys.c    **** 		switch (c) {
1201:src/keys.c    **** 		case K_CMPLX:
1202:src/keys.c    **** 			set_shift(shift);
1203:src/keys.c    **** 			break;
1204:src/keys.c    **** 
1205:src/keys.c    **** 		case K51:
1206:src/keys.c    **** 			if (op != STATE_UNFINISHED) {
1207:src/keys.c    **** 				if (is_bad_cmdline())
1208:src/keys.c    **** 					return STATE_UNFINISHED;
1209:src/keys.c    **** 				process_cmdline_set_lift();
1210:src/keys.c    **** 				State2.cmplx = 1;
1211:src/keys.c    **** 				State2.test = op;
1212:src/keys.c    **** 			}
1213:src/keys.c    **** 			return STATE_UNFINISHED;
1214:src/keys.c    **** 
1215:src/keys.c    **** 		case K60:
1216:src/keys.c    **** 			init_state();
1217:src/keys.c    **** 			break;
1218:src/keys.c    **** 
1219:src/keys.c    **** 		default:
1220:src/keys.c    **** 			break;
1221:src/keys.c    **** 		}
1222:src/keys.c    **** 	}
1223:src/keys.c    **** #ifdef INCLUDE_STOPWATCH
1224:src/keys.c    **** 	return check_confirm(op);
1225:src/keys.c    **** #else
1226:src/keys.c    **** 	return op;
1227:src/keys.c    **** #endif
1228:src/keys.c    **** 
1229:src/keys.c    **** #undef _RARG
1230:src/keys.c    **** #undef CSWAPXZ
1231:src/keys.c    **** #undef CNUM
1232:src/keys.c    **** }
1233:src/keys.c    **** 
1234:src/keys.c    **** 
1235:src/keys.c    **** 
1236:src/keys.c    **** /*
1237:src/keys.c    ****  * Fairly simple routine for dealing with the HYP prefix.
1238:src/keys.c    ****  * This setting can only be followed by 4, 5, or 6 to specify
1239:src/keys.c    ****  * the function.  The inverse routines use the code too, the State2.dot
1240:src/keys.c    ****  * is 1 for normal and 0 for inverse hyperbolic.  We also have to
1241:src/keys.c    ****  * deal with the complex versions and the handling of that key and
1242:src/keys.c    ****  * the ON key are dealt with by our caller.
ARM GAS  /tmp/ccJ0w3QJ.s 			page 25


1243:src/keys.c    ****  */
1244:src/keys.c    **** // ND: change key 1-3 to whatever (14-16?)
1245:src/keys.c    **** // ND: leave for now - may not be needed.
1246:src/keys.c    **** static int process_hyp(const keycode c) {
1247:src/keys.c    **** 	static const unsigned char op_map[][2] = {
1248:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
1249:src/keys.c    **** 		{ OP_ACOSH, OP_COSH },
1250:src/keys.c    **** 		{ OP_ATANH, OP_TANH }
1251:src/keys.c    **** 	};
1252:src/keys.c    **** 	int cmplx = State2.cmplx;
1253:src/keys.c    **** 	int f = State2.dot;
1254:src/keys.c    **** 
1255:src/keys.c    **** 	State2.hyp = 0;
1256:src/keys.c    **** 	State2.cmplx = 0;
1257:src/keys.c    **** 	State2.dot = 0;
1258:src/keys.c    **** #ifdef DM42
1259:src/keys.c    **** 	reset_shift();
1260:src/keys.c    **** #endif
1261:src/keys.c    **** 	switch ((int)c) {
1262:src/keys.c    **** 
1263:src/keys.c    **** 	case K01:
1264:src/keys.c    **** 	case K02:
1265:src/keys.c    **** 	case K03:
1266:src/keys.c    **** 		return (cmplx ? OP_CMON : OP_MON) | op_map[c - K01][f];
1267:src/keys.c    **** 
1268:src/keys.c    **** 	case K_CMPLX:
1269:src/keys.c    **** 		cmplx = ! cmplx;
1270:src/keys.c    **** 		goto stay;
1271:src/keys.c    **** 
1272:src/keys.c    **** 	case K_F: 
1273:src/keys.c    **** 	case K_G:
1274:src/keys.c    **** 		f = (c == K_F);
1275:src/keys.c    **** 		// fall trough
1276:src/keys.c    **** 	stay:
1277:src/keys.c    **** 		// process_cmdline_set_lift();
1278:src/keys.c    **** 		State2.hyp = 1;
1279:src/keys.c    **** 		State2.cmplx = cmplx;
1280:src/keys.c    **** 		State2.dot = f;
1281:src/keys.c    **** 		break;
1282:src/keys.c    **** 
1283:src/keys.c    **** 	default:
1284:src/keys.c    **** 		break;
1285:src/keys.c    **** 	}
1286:src/keys.c    **** 	return STATE_UNFINISHED;
1287:src/keys.c    **** }
1288:src/keys.c    **** 
1289:src/keys.c    **** 
1290:src/keys.c    **** /*
1291:src/keys.c    ****  *  Process a key code after ->
1292:src/keys.c    ****  */
1293:src/keys.c    **** // ND: again, key numbers to be changed:
1294:src/keys.c    **** static int process_arrow(const keycode c) {
1295:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
1296:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
1297:src/keys.c    **** 		{ OP_MON | OP_2RAD,  OP_MON | OP_HMS2 },
1298:src/keys.c    **** 		{ OP_MON | OP_2GRAD, STATE_UNFINISHED }
1299:src/keys.c    **** 	};
ARM GAS  /tmp/ccJ0w3QJ.s 			page 26


1300:src/keys.c    **** 	static const enum single_disp disp[][2] = {
1301:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
1302:src/keys.c    **** 		{ SDISP_HEX, SDISP_DEC }
1303:src/keys.c    **** 	};
1304:src/keys.c    **** 	const int shift = reset_shift();
1305:src/keys.c    **** 	const int f = (shift == SHIFT_F);
1306:src/keys.c    **** 
1307:src/keys.c    **** 	State2.arrow = 0;
1308:src/keys.c    **** 	set_last_menu ();
1309:src/keys.c    **** 	display_current_menu ();
1310:src/keys.c    **** 
1311:src/keys.c    **** 	if (shift == SHIFT_N) return STATE_UNFINISHED;
1312:src/keys.c    **** 	
1313:src/keys.c    **** 	if (c >= K10 && c <= K12)
1314:src/keys.c    **** 		return op_map[c - K10][f];
1315:src/keys.c    **** 
1316:src/keys.c    **** 	if (c == K22 || c == K23)
1317:src/keys.c    **** 		set_smode(disp[c - K22][f]);
1318:src/keys.c    **** 
1319:src/keys.c    **** 	return STATE_UNFINISHED;
1320:src/keys.c    **** }
1321:src/keys.c    **** 
1322:src/keys.c    **** 
1323:src/keys.c    **** /* Process a GTO . sequence
1324:src/keys.c    ****  */
1325:src/keys.c    **** static int gtodot_digit(const int n) {
1326:src/keys.c    **** 	const int val = State2.digval * 10 + n;
1327:src/keys.c    **** 	const int lib = nLIB(state_pc());
1328:src/keys.c    **** 
1329:src/keys.c    **** 	if (val > sizeLIB(lib) / 10)
1330:src/keys.c    **** 		return val;
1331:src/keys.c    **** 	if (++State2.numdigit == 3 + (lib & 1))
1332:src/keys.c    **** 		return val;
1333:src/keys.c    **** 	State2.digval = val;
1334:src/keys.c    **** 	return -1;
1335:src/keys.c    **** }
1336:src/keys.c    **** 
1337:src/keys.c    **** static int gtodot_fkey(int n) {
1338:src/keys.c    **** 	const int code = 100 + n;
1339:src/keys.c    **** 	unsigned int pc = state_pc();
1340:src/keys.c    **** 
1341:src/keys.c    **** 	if(isXROM(pc))
1342:src/keys.c    **** 		pc = 1;
1343:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
1344:src/keys.c    **** 	if (pc > 0)
1345:src/keys.c    **** 		return pc;
1346:src/keys.c    **** 	return state_pc();
1347:src/keys.c    **** }
1348:src/keys.c    **** 
1349:src/keys.c    **** // ND: This one has keycodes in
1350:src/keys.c    **** static int process_gtodot(const keycode c) {
1351:src/keys.c    **** 	int pc = -1;
1352:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
1353:src/keys.c    **** 
1354:src/keys.c    **** 	if (rawpc <= 9) {
1355:src/keys.c    **** 		// Digit 0 - 9
1356:src/keys.c    **** 		pc = gtodot_digit(rawpc);
ARM GAS  /tmp/ccJ0w3QJ.s 			page 27


1357:src/keys.c    **** 	}
1358:src/keys.c    **** 	else if (c >= K00 && c <= K03) {
1359:src/keys.c    **** 		// A - D
1360:src/keys.c    **** 		rawpc = gtodot_fkey(c - K00);
1361:src/keys.c    **** 		goto fin;
1362:src/keys.c    **** 	}
1363:src/keys.c    **** 	else if (c == K62) {
1364:src/keys.c    **** 		// .
1365:src/keys.c    **** 		rawpc = ProgSize;
1366:src/keys.c    **** 		goto fin;
1367:src/keys.c    **** 	}
1368:src/keys.c    **** 	else if (c == K20) {
1369:src/keys.c    **** 		// ENTER - short circuit processing
1370:src/keys.c    **** 		pc = State2.digval;
1371:src/keys.c    **** 	}
1372:src/keys.c    **** 	else if (c == K24) {
1373:src/keys.c    **** 		// backspace
1374:src/keys.c    **** 		if (State2.numdigit == 0) {
1375:src/keys.c    **** 			goto fin2;
1376:src/keys.c    **** 		} else {
1377:src/keys.c    **** 			State2.numdigit--;
1378:src/keys.c    **** 			State2.digval /= 10;
1379:src/keys.c    **** 		}
1380:src/keys.c    **** 	}
1381:src/keys.c    **** 	else if (c == K_UP) {
1382:src/keys.c    **** 		// up
1383:src/keys.c    **** 		rawpc = state_pc();
1384:src/keys.c    **** 		if (rawpc == 1)
1385:src/keys.c    **** 			rawpc = 0;
1386:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
1387:src/keys.c    **** 		update_program_bounds(1);
1388:src/keys.c    **** 		rawpc = ProgBegin;
1389:src/keys.c    **** 		goto fin;
1390:src/keys.c    **** 	}
1391:src/keys.c    **** 	else if (c == K_DOWN) {
1392:src/keys.c    **** 		// down
1393:src/keys.c    **** 		update_program_bounds(1);
1394:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
1395:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
1396:src/keys.c    **** 			rawpc = 1;
1397:src/keys.c    **** 		goto fin;
1398:src/keys.c    **** 	}
1399:src/keys.c    **** 	if (pc >= 0) {
1400:src/keys.c    **** 		rawpc = find_user_pc(pc);
1401:src/keys.c    **** fin:		set_pc(rawpc);
1402:src/keys.c    **** fin2:		State2.gtodot = 0;
1403:src/keys.c    **** 		State2.digval = 0;
1404:src/keys.c    **** 		State2.numdigit = 0;
1405:src/keys.c    **** 	}
1406:src/keys.c    **** 	return STATE_UNFINISHED;
1407:src/keys.c    **** }
1408:src/keys.c    **** 
1409:src/keys.c    **** 
1410:src/keys.c    **** /* Process a keystroke in alpha mode
1411:src/keys.c    ****  */
1412:src/keys.c    **** static int process_alpha(const keycode c) {
1413:src/keys.c    **** 	const enum shifts shift = reset_shift();
ARM GAS  /tmp/ccJ0w3QJ.s 			page 28


1414:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
1415:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos, n;
1416:src/keys.c    ****         int op = STATE_UNFINISHED;
1417:src/keys.c    **** 	State2.alpha_pos = 0;
1418:src/keys.c    **** 
1419:src/keys.c    **** 	switch (c) {
1420:src/keys.c    **** 	case K10:	// STO
1421:src/keys.c    **** 		if (shift == SHIFT_F) {
1422:src/keys.c    **** 			init_arg(RARG_ASTO);
1423:src/keys.c    **** 			return STATE_UNFINISHED;
1424:src/keys.c    **** 		}
1425:src/keys.c    **** 		break;
1426:src/keys.c    **** 
1427:src/keys.c    **** 	case K11:	// RCL - maybe view
1428:src/keys.c    **** 		if (shift == SHIFT_F) {
1429:src/keys.c    **** 			init_arg(RARG_ARCL);
1430:src/keys.c    **** 			return STATE_UNFINISHED;
1431:src/keys.c    **** 		} else if (shift == SHIFT_H) {
1432:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
1433:src/keys.c    **** 			return STATE_UNFINISHED;
1434:src/keys.c    **** 		}
1435:src/keys.c    **** 		break;
1436:src/keys.c    **** 
1437:src/keys.c    **** 	case K20:	// Enter - maybe exit alpha mode
1438:src/keys.c    **** 		if (shift == SHIFT_G || shift == SHIFT_H)
1439:src/keys.c    **** 			break;
1440:src/keys.c    **** 		if (shift == SHIFT_F && ! State2.runmode) {
1441:src/keys.c    **** 			State2.multi = 1;
1442:src/keys.c    **** 			State2.numdigit = 0;
1443:src/keys.c    **** 			CmdBase = DBL_ALPHA;
1444:src/keys.c    **** 			return STATE_UNFINISHED;
1445:src/keys.c    **** 		}
1446:src/keys.c    **** 		State2.alphas = 0;
1447:src/keys.c    **** 		State2.alphashift = 0;
1448:src/keys.c    **** 		return op;
1449:src/keys.c    **** 
1450:src/keys.c    **** 	case K24:	// Clx - backspace, clear Alpha
1451:src/keys.c    **** 		if (shift == SHIFT_N)
1452:src/keys.c    **** 			return STATE_BACKSPACE;
1453:src/keys.c    **** 		if (shift == SHIFT_H)
1454:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
1455:src/keys.c    **** 		break;
1456:src/keys.c    **** 
1457:src/keys.c    **** 	case K_UP:
1458:src/keys.c    **** 		if (shift == SHIFT_N) {
1459:src/keys.c    **** 			if ( State2.runmode ) {
1460:src/keys.c    **** 				// Alpha scroll left
1461:src/keys.c    **** 				n = alpha_pos + 1;
1462:src/keys.c    **** 				State2.alpha_pos = ( n < ( alen() + 5 ) / 6 ) ? n : alpha_pos;
1463:src/keys.c    **** 				return STATE_UNFINISHED;
1464:src/keys.c    **** 			}
1465:src/keys.c    **** 			return STATE_BST;
1466:src/keys.c    **** 		}
1467:src/keys.c    **** 		break;
1468:src/keys.c    **** 
1469:src/keys.c    **** 	case K_DOWN:
1470:src/keys.c    **** 		if (shift == SHIFT_N) {
ARM GAS  /tmp/ccJ0w3QJ.s 			page 29


1471:src/keys.c    **** 			if ( State2.runmode ) {
1472:src/keys.c    **** 				// Alpha scroll right
1473:src/keys.c    **** 				if (alpha_pos > 0)
1474:src/keys.c    **** 					State2.alpha_pos = alpha_pos-1;
1475:src/keys.c    **** 				return STATE_UNFINISHED;
1476:src/keys.c    **** 			}
1477:src/keys.c    **** 			return STATE_SST;
1478:src/keys.c    **** 		}
1479:src/keys.c    **** 		break;
1480:src/keys.c    **** 
1481:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
1482:src/keys.c    **** 		if (shift == SHIFT_F)
1483:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
1484:src/keys.c    **** 		else if (shift == SHIFT_H)
1485:src/keys.c    **** 			return OP_NIL | OP_OFF;
1486:src/keys.c    **** 		else if (shift == SHIFT_N)
1487:src/keys.c    **** 			init_state();
1488:src/keys.c    **** 		return STATE_UNFINISHED;
1489:src/keys.c    **** 
1490:src/keys.c    **** 	case K63:
1491:src/keys.c    **** 		if (shift == SHIFT_F)
1492:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
1493:src/keys.c    **** 		break;
1494:src/keys.c    **** 
1495:src/keys.c    **** 	default:
1496:src/keys.c    **** 		break;
1497:src/keys.c    **** 	}
1498:src/keys.c    **** 
1499:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
1500:src/keys.c    **** 	if (ch == 0)
1501:src/keys.c    **** 		return STATE_UNFINISHED;
1502:src/keys.c    **** 	return RARG(RARG_ALPHA, ch);
1503:src/keys.c    **** }
1504:src/keys.c    **** 
1505:src/keys.c    **** /*
1506:src/keys.c    ****  *  Code to handle all commands with arguments
1507:src/keys.c    ****  */
1508:src/keys.c    **** static void reset_arg(void) {
1509:src/keys.c    **** 	init_arg((enum rarg) 0);
1510:src/keys.c    **** 	State2.rarg = 0;
1511:src/keys.c    **** }
1512:src/keys.c    **** 
1513:src/keys.c    **** static int arg_eval(unsigned int val) {
1514:src/keys.c    **** 	const unsigned int base = CmdBase;
1515:src/keys.c    **** 	int r = RARG(base, val 
1516:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
1517:src/keys.c    **** 		           + (State2.local ? LOCAL_REG_BASE : 0));
1518:src/keys.c    **** 	const unsigned int ssize = (! UState.stack_depth || ! State2.runmode ) ? 4 : 8;
1519:src/keys.c    **** 
1520:src/keys.c    **** 	if (! State2.ind) {
1521:src/keys.c    **** 		/*
1522:src/keys.c    **** 		 *  Central argument checking for some commands
1523:src/keys.c    **** 		 */
1524:src/keys.c    **** #ifdef SHOW_COMPLEX_REGS
1525:src/keys.c    **** 		if (argcmds[base].cmplx && val > TOPREALREG - 2 ) {
1526:src/keys.c    **** 			// remap complex registers cY->T, cZ->A, cT->C
1527:src/keys.c    **** 			                     // 99,   X,   Y,   Z,   T,   A,   B,   C,   D,   L,   I,   J,   K
ARM GAS  /tmp/ccJ0w3QJ.s 			page 30


1528:src/keys.c    **** 			static char remap[] = {  0, 100, 102, 104, 106,   0,   0,   0,   0, 108,   0, 110,   0 };
1529:src/keys.c    **** 			val = (unsigned int) remap[ val - (TOPREALREG - 1) ];
1530:src/keys.c    **** 			if ( val == 0 )
1531:src/keys.c    **** 				return STATE_UNFINISHED;
1532:src/keys.c    **** 			r = RARG(base, val);
1533:src/keys.c    **** 		}
1534:src/keys.c    **** #else
1535:src/keys.c    **** 		if (argcmds[base].cmplx && (val > TOPREALREG - 2 && (val & 1)))
1536:src/keys.c    **** 			// Disallow odd complex register > 98
1537:src/keys.c    **** 			return STATE_UNFINISHED;
1538:src/keys.c    **** #endif
1539:src/keys.c    **** 		if ((base == RARG_STOSTK || base == RARG_RCLSTK) && (val > TOPREALREG - ssize))
1540:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
1541:src/keys.c    **** 			return STATE_UNFINISHED;
1542:src/keys.c    **** 	}
1543:src/keys.c    **** 	// Build op-code
1544:src/keys.c    **** 	reset_arg();
1545:src/keys.c    **** 	return r;
1546:src/keys.c    **** }
1547:src/keys.c    **** 
1548:src/keys.c    **** static int arg_digit(int n) {
1549:src/keys.c    **** 	int lim;
1550:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1551:src/keys.c    **** 	int dispmode = get_dispmode_digs(&lim);
1552:src/keys.c    **** 	const unsigned int base = (State2.runmode && CmdBase == RARG_DISP && (dispmode == MODE_SIG || disp
1553:src/keys.c    **** #else
1554:src/keys.c    **** 	const unsigned int base = CmdBase;
1555:src/keys.c    **** #endif
1556:src/keys.c    **** 	const unsigned int val = State2.digval * 10 + n;
1557:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
1558:src/keys.c    **** 	
1559:src/keys.c    **** 	if (State2.local) {
1560:src/keys.c    **** 		// Handle local registers and flags
1561:src/keys.c    **** 		lim = MAX_LOCAL_DIRECT - 1;				// default
1562:src/keys.c    **** 		if (State2.runmode) {
1563:src/keys.c    **** 			if (LocalRegs == 0)
1564:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
1565:src/keys.c    **** 			if (is_reg) {
1566:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
1567:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
1568:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
1569:src/keys.c    **** 			}
1570:src/keys.c    **** 		}
1571:src/keys.c    **** 	}
1572:src/keys.c    **** 	else if (is_reg)						// normal register
1573:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
1574:src/keys.c    **** 	else {
1575:src/keys.c    **** 		lim = (int) argcmds[base].lim;				// any other command
1576:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
1577:src/keys.c    **** 			lim = RARG_IND - 1;
1578:src/keys.c    **** 	}
1579:src/keys.c    **** 	if ((int) val > lim)
1580:src/keys.c    **** 		return STATE_UNFINISHED;
1581:src/keys.c    **** 
1582:src/keys.c    **** 	State2.digval = val;
1583:src/keys.c    **** 	++State2.numdigit;
1584:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
ARM GAS  /tmp/ccJ0w3QJ.s 			page 31


1585:src/keys.c    **** 		int result = arg_eval(val);
1586:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
1587:src/keys.c    **** 			--State2.numdigit;
1588:src/keys.c    **** 			State2.digval /= 10;
1589:src/keys.c    **** 		}
1590:src/keys.c    **** 		return result;
1591:src/keys.c    **** 	}
1592:src/keys.c    **** 	return STATE_UNFINISHED;
1593:src/keys.c    **** }
1594:src/keys.c    **** 
1595:src/keys.c    **** static int arg_fkey(int n) {
1596:src/keys.c    **** 	const unsigned int b = CmdBase;
1597:src/keys.c    **** 
1598:src/keys.c    **** 	if (argcmds[b].label || (b >= RARG_SF && b <= RARG_FCF))
1599:src/keys.c    **** 	{
1600:src/keys.c    **** 		if (State2.ind || State2.numdigit > 0)
1601:src/keys.c    **** 			return STATE_UNFINISHED;
1602:src/keys.c    **** 		if (argcmds[b].lim < 100)
1603:src/keys.c    **** 			return STATE_UNFINISHED;
1604:src/keys.c    **** 		return arg_eval(n + 100);
1605:src/keys.c    **** 	}
1606:src/keys.c    **** 	return STATE_UNFINISHED;
1607:src/keys.c    **** }
1608:src/keys.c    **** 
1609:src/keys.c    **** static int arg_storcl_check(const unsigned int b, const int cmplx) {
1610:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
1611:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || b == RARG_FLRCL ||
1612:src/keys.c    **** 			(cmplx && (b == RARG_CSTO || b == RARG_CRCL || b == RARG_FLCRCL)));
1613:src/keys.c    **** #else
1614:src/keys.c    **** 	return (b == RARG_STO || b == RARG_RCL || (cmplx && (b == RARG_CSTO || b == RARG_CRCL )));
1615:src/keys.c    **** #endif
1616:src/keys.c    **** }
1617:src/keys.c    **** 
1618:src/keys.c    **** static int arg_storcl(const unsigned int n, int cmplx) {
1619:src/keys.c    **** 	unsigned int b = CmdBase;
1620:src/keys.c    **** 
1621:src/keys.c    **** 	if (arg_storcl_check(b, cmplx)) {
1622:src/keys.c    **** 		CmdBase += n;
1623:src/keys.c    **** 		return 1;
1624:src/keys.c    **** 	}
1625:src/keys.c    **** 	/* And we can turn off the operation too */
1626:src/keys.c    **** 	if (b >= n) {
1627:src/keys.c    **** 		b -= n;
1628:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
1629:src/keys.c    **** 			CmdBase = b;
1630:src/keys.c    **** 			return 1;
1631:src/keys.c    **** 		}
1632:src/keys.c    **** 	}
1633:src/keys.c    **** 	return 0;
1634:src/keys.c    **** }
1635:src/keys.c    **** 
1636:src/keys.c    **** static int process_arg_dot(const unsigned int base) {
1637:src/keys.c    **** 
1638:src/keys.c    **** 	if (State2.numdigit == 0) {
1639:src/keys.c    **** 		// Only valid at beginning of entry
1640:src/keys.c    **** 		if (State2.dot || State2.local) {
1641:src/keys.c    **** 			// '..' or ENTER '.' = X
ARM GAS  /tmp/ccJ0w3QJ.s 			page 32


1642:src/keys.c    **** 			State2.local = 0;
1643:src/keys.c    **** 			return arg_eval(regX_idx);
1644:src/keys.c    **** 		}
1645:src/keys.c    **** 		if (argcmds[base].local || State2.ind) {
1646:src/keys.c    **** 			// local register or flag select
1647:src/keys.c    **** 			State2.local = 1;
1648:src/keys.c    **** 		}
1649:src/keys.c    **** 		else if (base == RARG_GTO || base == RARG_XEQ) {
1650:src/keys.c    **** 			// Special GTO . sequence
1651:src/keys.c    **** 			if (! State2.ind) {
1652:src/keys.c    **** 				State2.gtodot = 1;
1653:src/keys.c    **** 				reset_arg();
1654:src/keys.c    **** 			}
1655:src/keys.c    **** 		}
1656:src/keys.c    **** 	}
1657:src/keys.c    **** 	return STATE_UNFINISHED;
1658:src/keys.c    **** }
1659:src/keys.c    **** 
1660:src/keys.c    **** static int process_arg_shuffle(int r) {
1661:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
1662:src/keys.c    **** 	if (State2.numdigit < 4)
1663:src/keys.c    **** 		return STATE_UNFINISHED;
1664:src/keys.c    **** 	return arg_eval(State2.digval);
1665:src/keys.c    **** }
1666:src/keys.c    **** 
1667:src/keys.c    **** 
1668:src/keys.c    **** static int process_arg(const keycode c) {
1669:src/keys.c    **** 	unsigned int base = CmdBase;
1670:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
1671:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
1672:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
1673:src/keys.c    **** 	const enum shifts shift = reset_shift();
1674:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
1675:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
1676:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
1677:src/keys.c    **** 
1678:src/keys.c    **** 	n &= ~NO_SHORT;
1679:src/keys.c    **** 	if (base >= NUM_RARG) {
1680:src/keys.c    **** 		reset_arg();
1681:src/keys.c    **** 		return STATE_UNFINISHED;
1682:src/keys.c    **** 	}
1683:src/keys.c    **** #ifdef DM42
1684:src/keys.c    **** 	if ( ! shorthand && ! State2.dot && ! State2.shuffle ) {
1685:src/keys.c    **** 	  switch (n) {
1686:src/keys.c    **** 	  case regX_idx:
1687:src/keys.c    **** 	    return arg_digit(1);
1688:src/keys.c    **** 	  case regY_idx:
1689:src/keys.c    **** 	    return arg_digit(2);
1690:src/keys.c    **** 	  case regZ_idx:
1691:src/keys.c    **** 	    return arg_digit(3);
1692:src/keys.c    **** 	  case regT_idx:
1693:src/keys.c    **** 	    return arg_digit(4);
1694:src/keys.c    **** 	  case 5:
1695:src/keys.c    **** 	  case 6:
1696:src/keys.c    **** 	  case 7:
1697:src/keys.c    **** 	  case 8:
1698:src/keys.c    **** 	  case 9:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 33


1699:src/keys.c    **** 	  case 0:
1700:src/keys.c    **** 	    return arg_digit(n);
1701:src/keys.c    **** 	  }
1702:src/keys.c    **** 	}
1703:src/keys.c    **** #else
1704:src/keys.c    **** 	if (n <= 9 && ! shorthand && ! State2.dot && ! State2.shuffle)
1705:src/keys.c    **** 		return arg_digit(n);
1706:src/keys.c    **** #endif	
1707:src/keys.c    **** 	if (shorthand)
1708:src/keys.c    **** 		// row column shorthand addressing
1709:src/keys.c    **** 		return arg_eval(keycode_to_row_column(c));
1710:src/keys.c    **** 
1711:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
1712:src/keys.c    **** 	if (base >= RARG_FIX && base <= RARG_SIG0) {
1713:src/keys.c    **** 		switch ((int)c) {
1714:src/keys.c    **** 		case K_UP:	// up arrow
1715:src/keys.c    **** 			if (--base < RARG_FIX)
1716:src/keys.c    **** 				base = RARG_SIG0;
1717:src/keys.c    **** 			break;
1718:src/keys.c    **** 
1719:src/keys.c    **** 		case K_DOWN:	// down arrow
1720:src/keys.c    **** 		case K01:	// B
1721:src/keys.c    **** 			if (++base > RARG_SIG0)
1722:src/keys.c    **** 				base = RARG_FIX;
1723:src/keys.c    **** 			break;
1724:src/keys.c    **** 		}
1725:src/keys.c    **** 		CmdBase = base;
1726:src/keys.c    **** 	}
1727:src/keys.c    **** #endif
1728:src/keys.c    **** 	/*
1729:src/keys.c    **** 	 *  So far, we've got the digits and some special label addressing keys
1730:src/keys.c    **** 	 *  Handle the rest here.
1731:src/keys.c    **** 	 */
1732:src/keys.c    **** 	switch ((int)c) {
1733:src/keys.c    **** 	case K_F:
1734:src/keys.c    **** 		if (label_addressing)
1735:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
1736:src/keys.c    **** 		break;
1737:src/keys.c    **** 
1738:src/keys.c    **** 	case K_ARROW:		// arrow
1739:src/keys.c    **** 		if (!State2.dot && argcmds[base].indirectokay) {
1740:src/keys.c    **** 			State2.ind = ! State2.ind;
1741:src/keys.c    **** 			if (! stack_reg)
1742:src/keys.c    **** 				State2.dot = 0;
1743:src/keys.c    **** 		}
1744:src/keys.c    **** 		break;
1745:src/keys.c    **** 
1746:src/keys.c    **** 	case K_CMPLX:
1747:src/keys.c    **** 		if (State2.ind || State2.dot)
1748:src/keys.c    **** 			break;
1749:src/keys.c    **** 		if (base == RARG_STO)
1750:src/keys.c    **** 			CmdBase = RARG_STOM;
1751:src/keys.c    **** 		else if (base == RARG_RCL)
1752:src/keys.c    **** 			CmdBase = RARG_RCLM;
1753:src/keys.c    **** 		break;
1754:src/keys.c    **** #ifdef DM42
1755:src/keys.c    **** 	case K41:       // T
ARM GAS  /tmp/ccJ0w3QJ.s 			page 34


1756:src/keys.c    **** 	  if (State2.shuffle)
1757:src/keys.c    **** 	    return process_arg_shuffle(3);
1758:src/keys.c    **** 	case K51:       // X
1759:src/keys.c    **** 	  if (State2.shuffle)
1760:src/keys.c    **** 	    return process_arg_shuffle(0);
1761:src/keys.c    **** 	case K52:	// Y
1762:src/keys.c    **** 	  if (State2.shuffle)
1763:src/keys.c    **** 	    return process_arg_shuffle(1);
1764:src/keys.c    **** 	case K53:       // Z
1765:src/keys.c    **** 	  if (State2.shuffle)
1766:src/keys.c    **** 	    return process_arg_shuffle(2);
1767:src/keys.c    **** #else
1768:src/keys.c    **** 	case K63:	// Y
1769:src/keys.c    **** 	  if (State2.shuffle)
1770:src/keys.c    **** 	    return process_arg_shuffle(1);
1771:src/keys.c    **** #endif
1772:src/keys.c    **** 	case K00:	// A
1773:src/keys.c    **** 	case K01:	// B
1774:src/keys.c    **** 	case K02:	// C
1775:src/keys.c    **** 	case K03:	// D
1776:src/keys.c    **** #ifdef DM42
1777:src/keys.c    **** 	case K12:	// I (lastY)
1778:src/keys.c    **** 	case K13:	// J
1779:src/keys.c    **** 	case K14:	// K
1780:src/keys.c    **** 	case K15:	// L (lastX)
1781:src/keys.c    **** #else
1782:src/keys.c    **** 	case K12:	// I (lastY)
1783:src/keys.c    **** 	case K21:	// J
1784:src/keys.c    **** 	case K22:	// K
1785:src/keys.c    **** 	case K23:	// L (lastX)
1786:src/keys.c    **** #endif
1787:src/keys.c    **** 	  if (State2.dot || stack_reg)
1788:src/keys.c    **** 			return arg_eval(n);
1789:src/keys.c    **** 		if ( c <= K03 )
1790:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
1791:src/keys.c    **** 		break;
1792:src/keys.c    **** #ifdef DM42
1793:src/keys.c    **** 	case K62:	// '.'
1794:src/keys.c    **** 		return process_arg_dot(base);
1795:src/keys.c    **** 
1796:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
1797:src/keys.c    **** 	case K64:		// plus
1798:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
1799:src/keys.c    **** 			return arg_eval(n);
1800:src/keys.c    **** 		break;
1801:src/keys.c    **** 	case K54:               // minus
1802:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
1803:src/keys.c    **** 			reset_arg();
1804:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
1805:src/keys.c    **** 		}
1806:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
1807:src/keys.c    **** 		break;
1808:src/keys.c    **** 	case K44:		// multiply
1809:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
1810:src/keys.c    **** 			return arg_eval(n);
1811:src/keys.c    **** 		break;
1812:src/keys.c    **** 	case K34:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 35


1813:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
1814:src/keys.c    **** 		break;
1815:src/keys.c    **** #else
1816:src/keys.c    **** 	case K62:	// X, '.'
1817:src/keys.c    **** 		if (State2.shuffle)
1818:src/keys.c    **** 			return process_arg_shuffle(0);
1819:src/keys.c    **** 		return process_arg_dot(base);
1820:src/keys.c    **** 
1821:src/keys.c    **** 	/* STO and RCL can take an arithmetic argument */
1822:src/keys.c    **** 	case K64:		// Z register
1823:src/keys.c    **** 		if (State2.shuffle)
1824:src/keys.c    **** 			return process_arg_shuffle(2);
1825:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_PL - RARG_STO, 1) && stack_reg))
1826:src/keys.c    **** 			return arg_eval(n);
1827:src/keys.c    **** 		break;
1828:src/keys.c    **** 
1829:src/keys.c    **** 	case K54:
1830:src/keys.c    **** 		if (base == RARG_VIEW || base == RARG_VIEW_REG) {
1831:src/keys.c    **** 			reset_arg();
1832:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
1833:src/keys.c    **** 		}
1834:src/keys.c    **** 		arg_storcl(RARG_STO_MI - RARG_STO, 1);
1835:src/keys.c    **** 		break;
1836:src/keys.c    **** 
1837:src/keys.c    **** 	case K44:		// T register
1838:src/keys.c    **** 		if (State2.shuffle)
1839:src/keys.c    **** 			return process_arg_shuffle(3);
1840:src/keys.c    **** 		if (State2.dot || ( ! arg_storcl(RARG_STO_MU - RARG_STO, 1) && stack_reg))
1841:src/keys.c    **** 			return arg_eval(n);
1842:src/keys.c    **** 		break;
1843:src/keys.c    **** 
1844:src/keys.c    **** 	case K34:
1845:src/keys.c    **** 		arg_storcl(RARG_STO_DV - RARG_STO, 1);
1846:src/keys.c    **** 		break;
1847:src/keys.c    **** #endif
1848:src/keys.c    **** 	case K_UP:
1849:src/keys.c    **** 		arg_storcl(RARG_STO_MAX - RARG_STO, 0);
1850:src/keys.c    **** 		break;
1851:src/keys.c    **** 
1852:src/keys.c    **** 	case K_DOWN:
1853:src/keys.c    **** 		arg_storcl(RARG_STO_MIN - RARG_STO, 0);
1854:src/keys.c    **** 		break;
1855:src/keys.c    **** 
1856:src/keys.c    **** 	case K20:				// Enter is a short cut finisher but it also changes a few commands if it is first up
1857:src/keys.c    **** 		if (State2.numdigit == 0 && !State2.ind && !State2.dot) {
1858:src/keys.c    **** 			if (argcmds[base].label) {
1859:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
1860:src/keys.c    **** 				State2.multi = 1;
1861:src/keys.c    **** 				State2.alphashift = 0;
1862:src/keys.c    **** 				State2.rarg = 0;
1863:src/keys.c    **** 			} else if (base == RARG_SCI) {
1864:src/keys.c    **** 				reset_arg();
1865:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
1866:src/keys.c    **** 			} else if (base == RARG_ENG) {
1867:src/keys.c    **** 				reset_arg();
1868:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
1869:src/keys.c    **** 			} else if (argcmds[base].stckreg)
ARM GAS  /tmp/ccJ0w3QJ.s 			page 36


1870:src/keys.c    **** 				State2.dot = 1;
1871:src/keys.c    **** 		} else if (State2.numdigit > 0)
1872:src/keys.c    **** 			return arg_eval(State2.digval);
1873:src/keys.c    **** 		else if (stack_reg)
1874:src/keys.c    **** 			State2.dot = 1 - State2.dot;
1875:src/keys.c    **** 		break;
1876:src/keys.c    **** 
1877:src/keys.c    **** 	case K24:	// <-
1878:src/keys.c    **** 		if (State2.numdigit == 0) {
1879:src/keys.c    **** 			if (State2.dot)
1880:src/keys.c    **** 				State2.dot = 0;
1881:src/keys.c    **** 			else if (State2.local)
1882:src/keys.c    **** 				State2.local = 0;
1883:src/keys.c    **** 			else if (State2.ind)
1884:src/keys.c    **** 				State2.ind = 0;
1885:src/keys.c    **** 			else
1886:src/keys.c    **** 				goto reset;
1887:src/keys.c    **** 		}
1888:src/keys.c    **** 		else {
1889:src/keys.c    **** 			--State2.numdigit;
1890:src/keys.c    **** 			if (State2.shuffle)
1891:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
1892:src/keys.c    **** 			else
1893:src/keys.c    **** 				State2.digval /= 10;
1894:src/keys.c    **** 		}
1895:src/keys.c    **** 		break;
1896:src/keys.c    **** 
1897:src/keys.c    **** 	case K60:
1898:src/keys.c    **** 	reset:
1899:src/keys.c    **** 		reset_arg();
1900:src/keys.c    **** 	default:
1901:src/keys.c    **** 		break;
1902:src/keys.c    **** 	}
1903:src/keys.c    **** 	return STATE_UNFINISHED;
1904:src/keys.c    **** }
1905:src/keys.c    **** 
1906:src/keys.c    **** 
1907:src/keys.c    **** /*
1908:src/keys.c    ****  *  Process arguments to the diverse test commands
1909:src/keys.c    ****  */
1910:src/keys.c    **** static int process_test(const keycode c) {
1911:src/keys.c    **** 	int r = State2.test;
1912:src/keys.c    **** 	int cmpx = State2.cmplx;
1913:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
1914:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
1915:src/keys.c    **** 
1916:src/keys.c    **** 	State2.test = TST_NONE;
1917:src/keys.c    **** 	State2.cmplx = 0;
1918:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
1919:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
1920:src/keys.c    **** 		// Lettered register
1921:src/keys.c    **** 		if (cmpx && (n & 1)) {
1922:src/keys.c    **** 			if (n == regI_idx)
1923:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
1924:src/keys.c    **** 			// Disallow odd complex registers > A
1925:src/keys.c    **** 			goto again;
1926:src/keys.c    **** 		}
ARM GAS  /tmp/ccJ0w3QJ.s 			page 37


1927:src/keys.c    **** 		// Return the command with the register completed
1928:src/keys.c    **** 		return RARG(base, n);
1929:src/keys.c    **** 	}
1930:src/keys.c    **** 	else if ( n == 0 ) {
1931:src/keys.c    **** 		// Special 0
1932:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq0 : OP_Xeq0) + r;
1933:src/keys.c    **** 	}
1934:src/keys.c    **** 	else if ( n == 1 ) {
1935:src/keys.c    **** 		// Special 1
1936:src/keys.c    **** 		return OP_SPEC + (cmpx ? OP_Zeq1 : OP_Xeq1) + r;
1937:src/keys.c    **** 	}
1938:src/keys.c    **** 	else if ( n <= 9 || c == K_ARROW || c == K62 ) {
1939:src/keys.c    **** 		// digit 2..9, -> or .
1940:src/keys.c    **** 		init_arg((enum rarg)base);
1941:src/keys.c    **** 		return process_arg(c);
1942:src/keys.c    **** 	}
1943:src/keys.c    **** 
1944:src/keys.c    **** 	switch (c) {
1945:src/keys.c    **** 	case K11:					// tests vs register
1946:src/keys.c    **** 	case K20:
1947:src/keys.c    **** 		init_arg((enum rarg)base);
1948:src/keys.c    **** 		return STATE_UNFINISHED;
1949:src/keys.c    **** 
1950:src/keys.c    **** 	//case K60:
1951:src/keys.c    **** 	case K24:
1952:src/keys.c    **** 		return STATE_UNFINISHED;
1953:src/keys.c    **** 
1954:src/keys.c    **** 	default:
1955:src/keys.c    **** 		break;
1956:src/keys.c    **** 	}
1957:src/keys.c    **** again:
1958:src/keys.c    **** 	State2.test = r;
1959:src/keys.c    **** 	State2.cmplx = cmpx;
1960:src/keys.c    **** 	return STATE_UNFINISHED;
1961:src/keys.c    **** }
1962:src/keys.c    **** 
1963:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
1964:src/keys.c    **** /*
1965:src/keys.c    ****  *  Build the user catalogue on the fly in RAM and return the number of entries
1966:src/keys.c    ****  */
1967:src/keys.c    **** #define USER_CAT_MAX 100
1968:src/keys.c    **** s_opcode UserCat[USER_CAT_MAX];
1969:src/keys.c    **** 
1970:src/keys.c    **** static int build_user_cat(void)
1971:src/keys.c    **** {
1972:src/keys.c    **** 	// find the label 'CAT'
1973:src/keys.c    **** 	const int lbl = OP_DBL + (DBL_LBL << DBL_SHIFT) + 'C' + ('A' << 16) + ('T' << 24);
1974:src/keys.c    **** 	unsigned int pc = findmultilbl(lbl, 0);
1975:src/keys.c    **** 	int len = 0;
1976:src/keys.c    **** 	while (pc && len < USER_CAT_MAX) {
1977:src/keys.c    **** 		// do a simnple insert-sort to sort the entries
1978:src/keys.c    **** 		char buf1[16];
1979:src/keys.c    **** 		int i;
1980:src/keys.c    **** 		s_opcode op;
1981:src/keys.c    **** 	next:
1982:src/keys.c    **** 		pc = do_inc(pc, 0);
1983:src/keys.c    **** 		op = (s_opcode) getprog(pc);
ARM GAS  /tmp/ccJ0w3QJ.s 			page 38


1984:src/keys.c    **** 		if (op == (OP_NIL | OP_END))
1985:src/keys.c    **** 			break;
1986:src/keys.c    **** 		if (isDBL(op))
1987:src/keys.c    **** 			continue;
1988:src/keys.c    **** 		if (isRARG(op)) {
1989:src/keys.c    **** 			const s_opcode rarg = RARG_CMD(op);
1990:src/keys.c    **** 			if (rarg != RARG_ALPHA && rarg != RARG_CONV
1991:src/keys.c    **** 			    && rarg != RARG_CONST && rarg != RARG_CONST_CMPLX)
1992:src/keys.c    **** 				op = op & 0xff00;	// remove argument
1993:src/keys.c    **** 		}
1994:src/keys.c    **** 		catcmd(op, buf1);
1995:src/keys.c    **** 		for (i = 0; i < len; ++i) {
1996:src/keys.c    **** 			// Find a position in the table to insert the new entry
1997:src/keys.c    **** 			char buf2[16];
1998:src/keys.c    **** 			const char *p, *q;
1999:src/keys.c    **** 			int diff = 0;
2000:src/keys.c    **** 			if (op == UserCat[i]) {
2001:src/keys.c    **** 				// duplicate entry - ignore
2002:src/keys.c    **** 				goto next;
2003:src/keys.c    **** 			}
2004:src/keys.c    **** 			p = buf1;
2005:src/keys.c    **** 			if (*p == COMPLEX_PREFIX)
2006:src/keys.c    **** 				++p;
2007:src/keys.c    **** 			q = catcmd(UserCat[i], buf2);
2008:src/keys.c    **** 			if (*q == COMPLEX_PREFIX)
2009:src/keys.c    **** 				++q;
2010:src/keys.c    **** 			diff = 0;
2011:src/keys.c    **** 			while (*p != '\0' && diff == 0) {
2012:src/keys.c    **** 				diff = remap_chars(*q++) - remap_chars(*p++);
2013:src/keys.c    **** 			}
2014:src/keys.c    **** 			if ((diff == 0 && *q == 0) ) {
2015:src/keys.c    **** 				// identical according to sort order, insert after
2016:src/keys.c    **** 				++i;
2017:src/keys.c    **** 				break;
2018:src/keys.c    **** 			}
2019:src/keys.c    **** 			if (diff > 0) {
2020:src/keys.c    **** 				// insert new entry before the one found because this is greater
2021:src/keys.c    **** 				break;
2022:src/keys.c    **** 			}
2023:src/keys.c    **** 		}
2024:src/keys.c    **** 		if (i < len) {
2025:src/keys.c    **** 			// Make room
2026:src/keys.c    **** 			xcopy(UserCat + i + 1, UserCat + i, (len - i) << 1);
2027:src/keys.c    **** 		}
2028:src/keys.c    **** 		UserCat[i] = op;
2029:src/keys.c    **** 		++len;
2030:src/keys.c    **** 	}
2031:src/keys.c    **** 	// return the number of entries
2032:src/keys.c    **** 	return len;
2033:src/keys.c    **** }
2034:src/keys.c    **** #endif
2035:src/keys.c    **** 
2036:src/keys.c    **** /* Return the number of entries in the current catalogue.
2037:src/keys.c    ****  * These are all fixed size known at compile time so a table lookup will
2038:src/keys.c    ****  * likely be the most space efficient method.
2039:src/keys.c    ****  */
2040:src/keys.c    **** int current_catalogue_max(void) {
ARM GAS  /tmp/ccJ0w3QJ.s 			page 39


2041:src/keys.c    **** 	// A quick table of catalogue sizes
2042:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues' 
2043:src/keys.c    **** 	static const unsigned char catalogue_sizes[] = 
2044:src/keys.c    **** 	{
2045:src/keys.c    **** 		0, // NONE
2046:src/keys.c    **** 		SIZE_catalogue,
2047:src/keys.c    **** 		SIZE_cplx_catalogue,
2048:src/keys.c    **** 		SIZE_stats_catalogue,
2049:src/keys.c    **** 		SIZE_prob_catalogue,
2050:src/keys.c    **** 		SIZE_int_catalogue,
2051:src/keys.c    **** 		SIZE_prog_catalogue,
2052:src/keys.c    **** 		SIZE_program_xfcn,
2053:src/keys.c    **** 		SIZE_test_catalogue,
2054:src/keys.c    **** 		SIZE_mode_catalogue,
2055:src/keys.c    **** 		SIZE_alpha_catalogue,
2056:src/keys.c    **** 		SIZE_alpha_symbols,
2057:src/keys.c    **** 		SIZE_alpha_compares,
2058:src/keys.c    **** 		SIZE_alpha_arrows,
2059:src/keys.c    **** 		SIZE_alpha_letters,
2060:src/keys.c    **** 		SIZE_alpha_subscripts,
2061:src/keys.c    **** 		NUM_CONSTS_CAT,
2062:src/keys.c    **** 		NUM_CONSTS_CAT,
2063:src/keys.c    **** 		SIZE_conv_catalogue,
2064:src/keys.c    **** 		SIZE_sums_catalogue,
2065:src/keys.c    **** 		SIZE_matrix_catalogue,
2066:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2067:src/keys.c    **** 		SIZE_internal_catalogue,
2068:src/keys.c    **** #endif
2069:src/keys.c    **** 	};
2070:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2071:src/keys.c    **** 	const int cat = State2.catalogue;
2072:src/keys.c    **** 	return cat == CATALOGUE_USER ? build_user_cat() : catalogue_sizes[cat];
2073:src/keys.c    **** #else
2074:src/keys.c    **** 	return catalogue_sizes[State2.catalogue];
2075:src/keys.c    **** #endif
2076:src/keys.c    **** }
2077:src/keys.c    **** 
2078:src/keys.c    **** 
2079:src/keys.c    **** /* Look up the character position in the given byte array and
2080:src/keys.c    ****  * build the alpha op-code for it.
2081:src/keys.c    ****  */
2082:src/keys.c    **** static opcode alpha_code(int n, const char tbl[]) {
2083:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
2084:src/keys.c    **** }
2085:src/keys.c    **** 
2086:src/keys.c    **** 
2087:src/keys.c    **** /* Return the opcode for entry n from the current catalogue
2088:src/keys.c    ****  */
2089:src/keys.c    **** opcode current_catalogue(int n) {
2090:src/keys.c    **** 	// A quick table of catalogue tables
2091:src/keys.c    **** 	// NB: the order here MUST match that in `enum catalogues'
2092:src/keys.c    **** 	static const void *catalogues[] =
2093:src/keys.c    **** 	{
2094:src/keys.c    **** 		NULL, // NONE
2095:src/keys.c    **** 		catalogue,
2096:src/keys.c    **** 		cplx_catalogue,
2097:src/keys.c    **** 		stats_catalogue,
ARM GAS  /tmp/ccJ0w3QJ.s 			page 40


2098:src/keys.c    **** 		prob_catalogue,
2099:src/keys.c    **** 		int_catalogue,
2100:src/keys.c    **** 		prog_catalogue,
2101:src/keys.c    **** 		program_xfcn,
2102:src/keys.c    **** 		test_catalogue,
2103:src/keys.c    **** 		mode_catalogue,
2104:src/keys.c    **** 		alpha_catalogue,
2105:src/keys.c    **** 		alpha_symbols,
2106:src/keys.c    **** 		alpha_compares,
2107:src/keys.c    **** 		alpha_arrows,
2108:src/keys.c    **** 		alpha_letters,
2109:src/keys.c    **** 		alpha_subscripts,
2110:src/keys.c    **** 		NULL,
2111:src/keys.c    **** 		NULL,
2112:src/keys.c    **** 		NULL, //CONV
2113:src/keys.c    **** 		sums_catalogue,
2114:src/keys.c    **** 		matrix_catalogue,
2115:src/keys.c    **** #ifdef INCLUDE_INTERNAL_CATALOGUE
2116:src/keys.c    **** 		internal_catalogue,
2117:src/keys.c    **** #endif
2118:src/keys.c    **** 	};
2119:src/keys.c    **** 	const unsigned char *cat;
2120:src/keys.c    **** 	unsigned int c = State2.catalogue;
2121:src/keys.c    **** 	int m, i;
2122:src/keys.c    **** 	unsigned p, q;
2123:src/keys.c    **** 
2124:src/keys.c    **** 	if (c == CATALOGUE_CONST) {
2125:src/keys.c    **** 		if (n == OP_ZERO)
2126:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
2127:src/keys.c    **** 		return CONST(n);
2128:src/keys.c    **** 	}
2129:src/keys.c    **** 	if (c == CATALOGUE_COMPLEX_CONST) {
2130:src/keys.c    **** 		if (n == OP_ZERO)
2131:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
2132:src/keys.c    **** 		return CONST_CMPLX(n);
2133:src/keys.c    **** 	}
2134:src/keys.c    **** 	if (c == CATALOGUE_CONV) {
2135:src/keys.c    **** 		const int cnv = conv_catalogue[n];
2136:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
2137:src/keys.c    **** 			// Monadic conversion routine
2138:src/keys.c    **** 			return OP_MON | (cnv - SIZE_conv_catalogue);
2139:src/keys.c    **** 		else
2140:src/keys.c    **** 			return RARG(RARG_CONV, cnv);
2141:src/keys.c    **** 	}
2142:src/keys.c    **** #ifdef INCLUDE_USER_CATALOGUE
2143:src/keys.c    **** 	if (c == CATALOGUE_USER)
2144:src/keys.c    **** 		return build_user_cat() ? UserCat[n] : STATE_IGNORE;
2145:src/keys.c    **** #endif
2146:src/keys.c    **** 
2147:src/keys.c    **** 	if (c == CATALOGUE_ALPHA_LETTERS && State2.alphashift)
2148:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
2149:src/keys.c    **** 	else
2150:src/keys.c    **** 		cat = (const unsigned char *) catalogues[c];
2151:src/keys.c    **** 
2152:src/keys.c    **** 	if (c >= CATALOGUE_ALPHA_SYMBOLS && c <= CATALOGUE_ALPHA_SUBSCRIPTS) {
2153:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
2154:src/keys.c    **** 	}
ARM GAS  /tmp/ccJ0w3QJ.s 			page 41


2155:src/keys.c    **** 	if (c >= sizeof(catalogues) / sizeof(void *))
2156:src/keys.c    **** 		return OP_NIL | OP_NOP;
2157:src/keys.c    **** 
2158:src/keys.c    **** 	/* Unpack the opcode */
2159:src/keys.c    **** 	cat += n + (n >> 2);
2160:src/keys.c    **** 	p = cat[0];
2161:src/keys.c    **** 	q = cat[1];
2162:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
2163:src/keys.c    **** 
2164:src/keys.c    **** 	/* Now figure out which opcode it really is */
2165:src/keys.c    **** 	for (i=0; i<KIND_MAX; i++) {
2166:src/keys.c    **** 		if (m < opcode_breaks[i])
2167:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
2168:src/keys.c    **** 		m -= opcode_breaks[i];
2169:src/keys.c    **** 	}
2170:src/keys.c    **** 	return RARG_BASEOP(m);
2171:src/keys.c    **** }
2172:src/keys.c    **** 
2173:src/keys.c    **** 
2174:src/keys.c    **** /*
2175:src/keys.c    ****  *  Helper for navigation in alpha catalogues. Some charaters are not allowed
2176:src/keys.c    ****  *  in multi character commands.
2177:src/keys.c    ****  */
2178:src/keys.c    **** static int forbidden_alpha(int pos) {
2179:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
2180:src/keys.c    **** }
2181:src/keys.c    **** 
2182:src/keys.c    **** /*
2183:src/keys.c    ****  *  Catalogue navigation
2184:src/keys.c    ****  */
2185:src/keys.c    **** static int process_catalogue(const keycode c, const enum shifts shift, const int is_multi) {
2186:src/keys.c    **** 	int pos = State.catpos;
2187:src/keys.c    **** 	int ch;
2188:src/keys.c    **** 	const int ctmax = current_catalogue_max();
2189:src/keys.c    **** 	const enum catalogues cat = (enum catalogues) State2.catalogue;
2190:src/keys.c    **** 
2191:src/keys.c    **** 	if (shift == SHIFT_N) {
2192:src/keys.c    **** 		switch (c) {
2193:src/keys.c    **** #ifdef DM42
2194:src/keys.c    **** 		case K05:			// XEQ accepts command
2195:src/keys.c    **** #else	  
2196:src/keys.c    **** 		case K30:			// XEQ accepts command
2197:src/keys.c    **** #endif						  
2198:src/keys.c    **** 		case K20:			// Enter accepts command
2199:src/keys.c    **** 			if (pos < ctmax && !(is_multi && forbidden_alpha(pos))) {
2200:src/keys.c    **** 				const opcode op = current_catalogue(pos);
2201:src/keys.c    **** 
2202:src/keys.c    **** 				init_cat(CATALOGUE_NONE);
2203:src/keys.c    **** 
2204:src/keys.c    **** 				if (isRARG(op)) {
2205:src/keys.c    **** 					const unsigned int rarg = RARG_CMD(op);
2206:src/keys.c    **** 					if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
2207:src/keys.c    **** 						return op;
2208:src/keys.c    **** 					if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
2209:src/keys.c    **** 						State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
2210:src/keys.c    **** 					else
2211:src/keys.c    **** 						init_arg(RARG_CMD(op));
ARM GAS  /tmp/ccJ0w3QJ.s 			page 42


2212:src/keys.c    **** 				}
2213:src/keys.c    **** 				else {
2214:src/keys.c    **** 					return check_confirm(op);
2215:src/keys.c    **** 				}
2216:src/keys.c    **** 			} else
2217:src/keys.c    **** 				init_cat(CATALOGUE_NONE);
2218:src/keys.c    **** 			return STATE_UNFINISHED;
2219:src/keys.c    **** 
2220:src/keys.c    **** 		case K24:			// backspace
2221:src/keys.c    **** #ifdef DM42
2222:src/keys.c    **** 		  if (CmdLineLength > 0 && keyticks() < 30) {
2223:src/keys.c    **** #else
2224:src/keys.c    **** 		    if (CmdLineLength > 0 && Keyticks < 30) {
2225:src/keys.c    **** #endif
2226:src/keys.c    **** 		      if (--CmdLineLength > 0)
2227:src/keys.c    **** 					goto search;
2228:src/keys.c    **** 				pos = 0;
2229:src/keys.c    **** 				goto set_pos;
2230:src/keys.c    **** 			} else
2231:src/keys.c    **** 				init_cat(CATALOGUE_NONE);
2232:src/keys.c    **** 			return STATE_UNFINISHED;
2233:src/keys.c    **** 
2234:src/keys.c    **** 		case K60:
2235:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
2236:src/keys.c    **** 			return STATE_UNFINISHED;
2237:src/keys.c    **** 
2238:src/keys.c    **** 		case K_UP:
2239:src/keys.c    **** 			CmdLineLength = 0;
2240:src/keys.c    **** 			if (pos == 0)
2241:src/keys.c    **** 				goto set_max;
2242:src/keys.c    **** 			else
2243:src/keys.c    **** 				--pos;
2244:src/keys.c    **** 			goto set_pos;
2245:src/keys.c    **** 
2246:src/keys.c    **** 		case K_DOWN:
2247:src/keys.c    **** 			CmdLineLength = 0;
2248:src/keys.c    **** 			while (++pos < ctmax && is_multi && forbidden_alpha(pos));
2249:src/keys.c    **** 			if (pos >= ctmax)
2250:src/keys.c    **** 				pos = 0;
2251:src/keys.c    **** 			goto set_pos;
2252:src/keys.c    **** 
2253:src/keys.c    **** 		default:
2254:src/keys.c    **** 			break;
2255:src/keys.c    **** 		}
2256:src/keys.c    **** 	} else if (shift == SHIFT_F) {
2257:src/keys.c    **** 		if (cat == CATALOGUE_CONV && c == K01) {
2258:src/keys.c    **** 			/*
2259:src/keys.c    **** 			 * f 1/x in conversion catalogue
2260:src/keys.c    **** 			 */
2261:src/keys.c    **** 			/* A small table of commands in pairs containing inverse commands.
2262:src/keys.c    **** 			 * This table could be unsigned characters only storing the monadic kind.
2263:src/keys.c    **** 			 * this saves twelve bytes in the table at a cost of some bytes in the code below.
2264:src/keys.c    **** 			 * Not worth it since the maximum saving will be less than twelve bytes.
2265:src/keys.c    **** 			 */
2266:src/keys.c    **** 			static const unsigned short int conv_mapping[] = {
2267:src/keys.c    **** 				OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
2268:src/keys.c    **** 				OP_MON | OP_DB_PR,	OP_MON | OP_PR_DB,
ARM GAS  /tmp/ccJ0w3QJ.s 			page 43


2269:src/keys.c    **** 				OP_MON | OP_DEGC_F,	OP_MON | OP_DEGF_C,
2270:src/keys.c    **** 				OP_MON | OP_DEG2RAD,	OP_MON | OP_RAD2DEG,
2271:src/keys.c    **** 				OP_MON | OP_DEG2GRD,	OP_MON | OP_GRD2DEG,
2272:src/keys.c    **** 				OP_MON | OP_RAD2GRD,	OP_MON | OP_GRD2RAD,
2273:src/keys.c    **** 			};
2274:src/keys.c    **** 			const opcode op = current_catalogue(pos);
2275:src/keys.c    **** 			int i;
2276:src/keys.c    **** 
2277:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
2278:src/keys.c    **** 			if (isRARG(op))
2279:src/keys.c    **** 				return op ^ 1;
2280:src/keys.c    **** 			for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
2281:src/keys.c    **** 				if (op == conv_mapping[i])
2282:src/keys.c    **** 					return conv_mapping[i^1];
2283:src/keys.c    **** 			return STATE_UNFINISHED;		// Unreached
2284:src/keys.c    **** 		}
2285:src/keys.c    **** 		else if (c == K60 && (State2.alphas || State2.multi)) {
2286:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
2287:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
2288:src/keys.c    **** 			return STATE_UNFINISHED;
2289:src/keys.c    **** 		}
2290:src/keys.c    **** 	} else if (shift == SHIFT_G) {
2291:src/keys.c    **** 		if (c == K24 && cat == CATALOGUE_SUMS) {
2292:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
2293:src/keys.c    **** 			return OP_NIL | OP_SIGMACLEAR;
2294:src/keys.c    **** 		}
2295:src/keys.c    **** 	}
2296:src/keys.c    **** 
2297:src/keys.c    **** 	/* We've got a key press, map it to a character and try to
2298:src/keys.c    **** 	 * jump to the appropriate catalogue entry.
2299:src/keys.c    **** 	 */
2300:src/keys.c    **** 	ch = remap_chars(keycode_to_alpha(c, shift == SHIFT_G ? SHIFT_LC_G : shift));
2301:src/keys.c    **** 	reset_shift();
2302:src/keys.c    **** 	if (ch == '\0')
2303:src/keys.c    **** 		return STATE_UNFINISHED;
2304:src/keys.c    **** 	if (cat > CATALOGUE_ALPHA && cat < CATALOGUE_CONST) {
2305:src/keys.c    **** 		// No multi character search in alpha catalogues
2306:src/keys.c    **** 		CmdLineLength = 0;
2307:src/keys.c    **** 	}
2308:src/keys.c    **** 	if (CmdLineLength < 10)
2309:src/keys.c    **** 		Cmdline[CmdLineLength++] = ch;
2310:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
2311:src/keys.c    **** 
2312:src/keys.c    **** search:
2313:src/keys.c    **** 	Cmdline[CmdLineLength] = '\0';
2314:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
2315:src/keys.c    **** 		char buf[16];
2316:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
2317:src/keys.c    **** 		int i;
2318:src/keys.c    **** 
2319:src/keys.c    **** 		if (*cmd == COMPLEX_PREFIX)
2320:src/keys.c    **** 			cmd++;
2321:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
2322:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
2323:src/keys.c    **** 			const int cl = (unsigned char) Cmdline[i];
2324:src/keys.c    **** 			if (c > cl)
2325:src/keys.c    **** 				goto set_pos;
ARM GAS  /tmp/ccJ0w3QJ.s 			page 44


2326:src/keys.c    **** 			else if (c < cl)
2327:src/keys.c    **** 				break;
2328:src/keys.c    **** 		}
2329:src/keys.c    **** 		if (Cmdline[i] == '\0')
2330:src/keys.c    **** 			goto set_pos;
2331:src/keys.c    **** 	}
2332:src/keys.c    **** set_max:
2333:src/keys.c    **** 	pos = ctmax - 1;
2334:src/keys.c    **** set_pos:
2335:src/keys.c    **** 	while (is_multi && pos && forbidden_alpha(pos))
2336:src/keys.c    **** 		--pos;
2337:src/keys.c    **** 	State.catpos = pos;
2338:src/keys.c    **** 	return STATE_UNFINISHED;
2339:src/keys.c    **** }
2340:src/keys.c    **** 
2341:src/keys.c    **** #ifndef REALBUILD
2342:src/keys.c    **** int find_pos(const char* text) {
2343:src/keys.c    **** 	int pos;
2344:src/keys.c    **** 	const int ctmax = current_catalogue_max();
2345:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
2346:src/keys.c    **** 		char buf[16];
2347:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
2348:src/keys.c    **** 		int i;
2349:src/keys.c    **** 
2350:src/keys.c    **** 		if (*cmd == COMPLEX_PREFIX)
2351:src/keys.c    **** 			cmd++;
2352:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
2353:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
2354:src/keys.c    **** 			const int cl = remap_chars(text[i]);
2355:src/keys.c    **** 			if (c > cl)
2356:src/keys.c    **** 				return pos;
2357:src/keys.c    **** 			else if (c < cl)
2358:src/keys.c    **** 				break;
2359:src/keys.c    **** 		}
2360:src/keys.c    **** 		if (text[i] == '\0')
2361:src/keys.c    **** 			return pos;
2362:src/keys.c    **** 	}
2363:src/keys.c    **** 	return pos;
2364:src/keys.c    **** }
2365:src/keys.c    **** 
2366:src/keys.c    **** #endif
2367:src/keys.c    **** 
2368:src/keys.c    **** /* Multi (2) word instruction entry
2369:src/keys.c    ****  */
2370:src/keys.c    **** static void reset_multi(void) {
2371:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
2372:src/keys.c    **** 	State2.multi = 0;
2373:src/keys.c    **** 	if (! State2.alphas )
2374:src/keys.c    **** 		State2.alphashift = 0;
2375:src/keys.c    **** }
2376:src/keys.c    **** 
2377:src/keys.c    **** static int process_multi(const keycode c) {
2378:src/keys.c    **** 	enum shifts shift = reset_shift();
2379:src/keys.c    **** 	unsigned int ch = 0;
2380:src/keys.c    **** 	unsigned int opcode;
2381:src/keys.c    **** 
2382:src/keys.c    **** 	if (State2.catalogue) {
ARM GAS  /tmp/ccJ0w3QJ.s 			page 45


2383:src/keys.c    **** 		// Alpha catalogue from within multi character command
2384:src/keys.c    **** 		opcode = process_catalogue((const keycode)c, shift, State2.numdigit == 2);
2385:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
2386:src/keys.c    **** 			return opcode;
2387:src/keys.c    **** 		ch = (unsigned char) opcode;
2388:src/keys.c    **** 		goto add_char;
2389:src/keys.c    **** 	}
2390:src/keys.c    **** 
2391:src/keys.c    **** 	switch (c) {
2392:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
2393:src/keys.c    **** 		if (shift != SHIFT_N)
2394:src/keys.c    **** 				break;
2395:src/keys.c    **** 		reset_multi();
2396:src/keys.c    **** 		if (State2.numdigit == 0)
2397:src/keys.c    **** 			return STATE_UNFINISHED;
2398:src/keys.c    **** 		else if (State2.numdigit == 1)
2399:src/keys.c    **** 			State2.digval2 = 0;
2400:src/keys.c    **** 		goto fin;
2401:src/keys.c    **** 
2402:src/keys.c    **** 	case K24:	// Clx - backspace, clear alpha
2403:src/keys.c    **** 		if (shift != SHIFT_H) {
2404:src/keys.c    **** 			if (State2.numdigit == 0)
2405:src/keys.c    **** 				reset_multi();
2406:src/keys.c    **** 			else
2407:src/keys.c    **** 				State2.numdigit--;
2408:src/keys.c    **** 			return STATE_UNFINISHED;
2409:src/keys.c    **** 		}
2410:src/keys.c    **** 		break;
2411:src/keys.c    **** 
2412:src/keys.c    **** 	case K60:	// EXIT/ON maybe case switch, otherwise exit alpha
2413:src/keys.c    **** 		if (shift == SHIFT_F)
2414:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
2415:src/keys.c    **** 		else
2416:src/keys.c    **** 			reset_multi();
2417:src/keys.c    **** 		return STATE_UNFINISHED;
2418:src/keys.c    **** 
2419:src/keys.c    **** 	default:
2420:src/keys.c    **** 		break;
2421:src/keys.c    **** 		}
2422:src/keys.c    **** 
2423:src/keys.c    **** 	/* Look up the character and return an alpha code if okay */
2424:src/keys.c    **** 	ch = keycode_to_alpha(c, shift);
2425:src/keys.c    **** 	if (ch == 0)
2426:src/keys.c    **** 		return STATE_UNFINISHED;
2427:src/keys.c    **** add_char:
2428:src/keys.c    **** 	if (State2.numdigit == 0) {
2429:src/keys.c    **** 		State2.digval = ch;
2430:src/keys.c    **** 		State2.numdigit = 1;
2431:src/keys.c    **** 		return STATE_UNFINISHED;
2432:src/keys.c    **** 	} else if (State2.numdigit == 1) {
2433:src/keys.c    **** 		State2.digval2 = ch;
2434:src/keys.c    **** 		State2.numdigit = 2;
2435:src/keys.c    **** 		return STATE_UNFINISHED;
2436:src/keys.c    **** 	}
2437:src/keys.c    **** 	reset_multi();
2438:src/keys.c    **** 
2439:src/keys.c    **** fin:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 46


2440:src/keys.c    **** 	opcode = OP_DBL + (CmdBase << DBL_SHIFT) 
2441:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
2442:src/keys.c    **** 	return opcode;
2443:src/keys.c    **** }
2444:src/keys.c    **** 
2445:src/keys.c    **** 
2446:src/keys.c    **** /* Handle YES/NO confirmations
2447:src/keys.c    ****  */
2448:src/keys.c    **** static int process_confirm(const keycode c) {
2449:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
2450:src/keys.c    **** 	switch (c) {
2451:src/keys.c    **** #ifdef DM42
2452:src/keys.c    **** 	case K52:
2453:src/keys.c    **** #endif
2454:src/keys.c    **** 	case K63:			// Yes
2455:src/keys.c    **** 	  switch (State2.confirm) {
2456:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
2457:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
2458:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
2459:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
2460:src/keys.c    **** 	  }
2461:src/keys.c    **** 	case K24:
2462:src/keys.c    **** #ifdef DM42
2463:src/keys.c    **** 	case K22:
2464:src/keys.c    **** #else
2465:src/keys.c    **** 	case K32:
2466:src/keys.c    **** #endif
2467:src/keys.c    **** 	  // No
2468:src/keys.c    **** 	  State2.confirm = 0;
2469:src/keys.c    **** 	  State2.digval = 0;
2470:src/keys.c    **** 	  break;
2471:src/keys.c    **** 	default:			// No state change
2472:src/keys.c    **** 	  break;
2473:src/keys.c    **** 	}
2474:src/keys.c    **** 	return STATE_UNFINISHED;
2475:src/keys.c    **** }
2476:src/keys.c    **** 
2477:src/keys.c    **** 
2478:src/keys.c    **** /*
2479:src/keys.c    ****  *  STATUS
2480:src/keys.c    ****  */
2481:src/keys.c    **** static int process_status(const keycode c) {
2482:src/keys.c    **** 	int n = ((int)State2.status) - 3;
2483:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
2484:src/keys.c    **** 
2485:src/keys.c    **** 	if (c == K_UP) {
2486:src/keys.c    **** 		if (--n < -2)
2487:src/keys.c    **** 			n = max;
2488:src/keys.c    **** 	}
2489:src/keys.c    **** 	else if (c == K_DOWN) {
2490:src/keys.c    **** 		if (++n > max)
2491:src/keys.c    **** 			n = -2;
2492:src/keys.c    **** 	}
2493:src/keys.c    **** 	else if (c == K24 /* || c == K60 */) {
2494:src/keys.c    **** 		State2.status = 0;
2495:src/keys.c    **** 		return STATE_UNFINISHED;
2496:src/keys.c    **** 	} 
ARM GAS  /tmp/ccJ0w3QJ.s 			page 47


2497:src/keys.c    **** 	else {
2498:src/keys.c    **** 		int nn = keycode_to_digit_or_register(c) & 0x7f;
2499:src/keys.c    **** 		if (nn <= 9)
2500:src/keys.c    **** 			n = nn;
2501:src/keys.c    **** 		else if (nn == LOCAL_REG_BASE)
2502:src/keys.c    **** 			n = n == max ? 10 : max;
2503:src/keys.c    **** 		else if (nn != NO_REG)
2504:src/keys.c    **** 			n = 10; 
2505:src/keys.c    **** 	}
2506:src/keys.c    **** 	State2.status = n + 3;
2507:src/keys.c    **** 
2508:src/keys.c    **** 	return STATE_UNFINISHED;
2509:src/keys.c    **** }
2510:src/keys.c    **** 
2511:src/keys.c    **** 
2512:src/keys.c    **** /*
2513:src/keys.c    ****  *  CAT helper
2514:src/keys.c    ****  */
2515:src/keys.c    **** static int is_label_or_end_at(unsigned int pc, int search_end) {
 121              		.loc 1 2515 64 is_stmt 1 view -0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
2516:src/keys.c    **** 	const unsigned int op = getprog(pc);
 125              		.loc 1 2516 2 view .LVU28
2515:src/keys.c    **** 	const unsigned int op = getprog(pc);
 126              		.loc 1 2515 64 is_stmt 0 view .LVU29
 127 0000 10B5     		push	{r4, lr}
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 4, -8
 130              		.cfi_offset 14, -4
2515:src/keys.c    **** 	const unsigned int op = getprog(pc);
 131              		.loc 1 2515 64 view .LVU30
 132 0002 0C46     		mov	r4, r1
 133              		.loc 1 2516 26 view .LVU31
 134 0004 FFF7FEFF 		bl	getprog
 135              	.LVL14:
2517:src/keys.c    **** 
2518:src/keys.c    **** 	return op == (OP_NIL | OP_END) || (!search_end && (isDBL(op) && opDBL(op) == DBL_LBL));
 136              		.loc 1 2518 2 is_stmt 1 view .LVU32
 137              		.loc 1 2518 33 is_stmt 0 view .LVU33
 138 0008 B0F59D7F 		cmp	r0, #314
 139 000c 06D0     		beq	.L16
 140              		.loc 1 2518 53 discriminator 3 view .LVU34
 141 000e 00F47043 		and	r3, r0, #61440
 142              		.loc 1 2518 49 discriminator 3 view .LVU35
 143 0012 B3F5704F 		cmp	r3, #61440
 144 0016 03D0     		beq	.L19
 145              		.loc 1 2518 33 view .LVU36
 146 0018 0020     		movs	r0, #0
 147              	.LVL15:
2519:src/keys.c    **** }
 148              		.loc 1 2519 1 view .LVU37
 149 001a 10BD     		pop	{r4, pc}
 150              	.LVL16:
 151              	.L16:
2518:src/keys.c    **** }
ARM GAS  /tmp/ccJ0w3QJ.s 			page 48


 152              		.loc 1 2518 33 view .LVU38
 153 001c 0120     		movs	r0, #1
 154              	.LVL17:
 155              		.loc 1 2519 1 view .LVU39
 156 001e 10BD     		pop	{r4, pc}
 157              	.LVL18:
 158              	.L19:
2518:src/keys.c    **** }
 159              		.loc 1 2518 66 discriminator 5 view .LVU40
 160 0020 C0F30320 		ubfx	r0, r0, #8, #4
 161              	.LVL19:
2518:src/keys.c    **** }
 162              		.loc 1 2518 63 discriminator 5 view .LVU41
 163 0024 50EA0403 		orrs	r3, r0, r4
 164 0028 0CBF     		ite	eq
 165 002a 0120     		moveq	r0, #1
 166 002c 0020     		movne	r0, #0
 167              		.loc 1 2519 1 discriminator 5 view .LVU42
 168 002e 10BD     		pop	{r4, pc}
 169              		.loc 1 2519 1 discriminator 5 view .LVU43
 170              		.cfi_endproc
 171              	.LFE49:
 173              		.section	.text.advance_to_next_label,"ax",%progbits
 174              		.align	1
 175              		.p2align 2,,3
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 179              		.fpu fpv4-sp-d16
 181              	advance_to_next_label:
 182              	.LVL20:
 183              	.LFB50:
2520:src/keys.c    **** 
2521:src/keys.c    **** static unsigned int advance_to_next_label(unsigned int pc, int inc, int search_end) {
 184              		.loc 1 2521 85 is_stmt 1 view -0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              		.loc 1 2521 85 is_stmt 0 view .LVU45
 189 0000 70B5     		push	{r4, r5, r6, lr}
 190              		.cfi_def_cfa_offset 16
 191              		.cfi_offset 4, -16
 192              		.cfi_offset 5, -12
 193              		.cfi_offset 6, -8
 194              		.cfi_offset 14, -4
 195              		.loc 1 2521 85 view .LVU46
 196 0002 0446     		mov	r4, r0
2522:src/keys.c    **** 	do {
 197              		.loc 1 2522 2 is_stmt 1 view .LVU47
2523:src/keys.c    **** 		for (;;) {
 198              		.loc 1 2523 3 view .LVU48
2524:src/keys.c    **** 			if (inc) {
 199              		.loc 1 2524 4 view .LVU49
2521:src/keys.c    **** 	do {
 200              		.loc 1 2521 85 is_stmt 0 view .LVU50
 201 0004 1646     		mov	r6, r2
 202              		.loc 1 2524 7 view .LVU51
ARM GAS  /tmp/ccJ0w3QJ.s 			page 49


 203 0006 21B9     		cbnz	r1, .L24
 204              	.LVL21:
 205              	.L21:
2525:src/keys.c    **** 				pc = do_inc(pc, 0);
2526:src/keys.c    **** 				if (PcWrapped)
2527:src/keys.c    **** 					break;
2528:src/keys.c    **** 			}
2529:src/keys.c    **** 			else
2530:src/keys.c    **** 				inc = 1;
2531:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 206              		.loc 1 2531 4 is_stmt 1 view .LVU52
 207              		.loc 1 2531 8 is_stmt 0 view .LVU53
 208 0008 3146     		mov	r1, r6
 209 000a 2046     		mov	r0, r4
 210              		.loc 1 2531 8 view .LVU54
 211 000c FFF7FEFF 		bl	is_label_or_end_at
 212              	.LVL22:
 213              		.loc 1 2531 7 view .LVU55
 214 0010 B8B9     		cbnz	r0, .L23
 215              	.LVL23:
 216              	.L24:
 217              		.loc 1 2531 7 view .LVU56
 218 0012 0D4D     		ldr	r5, .L32
 219              	.L25:
2525:src/keys.c    **** 				pc = do_inc(pc, 0);
 220              		.loc 1 2525 5 is_stmt 1 view .LVU57
2525:src/keys.c    **** 				pc = do_inc(pc, 0);
 221              		.loc 1 2525 10 is_stmt 0 view .LVU58
 222 0014 2046     		mov	r0, r4
 223 0016 0021     		movs	r1, #0
 224 0018 FFF7FEFF 		bl	do_inc
 225              	.LVL24:
2526:src/keys.c    **** 					break;
 226              		.loc 1 2526 8 view .LVU59
 227 001c 2B68     		ldr	r3, [r5]
2525:src/keys.c    **** 				pc = do_inc(pc, 0);
 228              		.loc 1 2525 10 view .LVU60
 229 001e 0446     		mov	r4, r0
 230              	.LVL25:
2526:src/keys.c    **** 					break;
 231              		.loc 1 2526 5 is_stmt 1 view .LVU61
2526:src/keys.c    **** 					break;
 232              		.loc 1 2526 8 is_stmt 0 view .LVU62
 233 0020 002B     		cmp	r3, #0
 234 0022 F1D0     		beq	.L21
2532:src/keys.c    **** 				return pc;
2533:src/keys.c    **** 			}
2534:src/keys.c    **** 		}
2535:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) + 1) & 3);
 235              		.loc 1 2535 3 is_stmt 1 view .LVU63
 236              		.loc 1 2535 8 is_stmt 0 view .LVU64
 237 0024 20F47F54 		bic	r4, r0, #16320
 238 0028 24F03F04 		bic	r4, r4, #63
 239 002c 04F58044 		add	r4, r4, #16384
 240 0030 A4B2     		uxth	r4, r4
 241              		.loc 1 2535 6 view .LVU65
 242 0032 44F00104 		orr	r4, r4, #1
ARM GAS  /tmp/ccJ0w3QJ.s 			page 50


 243              	.LVL26:
2536:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 244              		.loc 1 2536 10 is_stmt 1 view .LVU66
 245              		.loc 1 2536 13 is_stmt 0 view .LVU67
 246 0036 2046     		mov	r0, r4
 247 0038 3146     		mov	r1, r6
 248 003a FFF7FEFF 		bl	is_label_or_end_at
 249              	.LVL27:
 250              		.loc 1 2536 2 view .LVU68
 251 003e 0028     		cmp	r0, #0
 252 0040 E8D0     		beq	.L25
 253              	.L23:
2537:src/keys.c    **** 	return pc;
2538:src/keys.c    **** }
 254              		.loc 1 2538 1 view .LVU69
 255 0042 2046     		mov	r0, r4
 256 0044 70BD     		pop	{r4, r5, r6, pc}
 257              	.LVL28:
 258              	.L33:
 259              		.loc 1 2538 1 view .LVU70
 260 0046 00BF     		.align	2
 261              	.L32:
 262 0048 00000000 		.word	PcWrapped
 263              		.cfi_endproc
 264              	.LFE50:
 266              		.section	.text.init_cat,"ax",%progbits
 267              		.align	1
 268              		.p2align 2,,3
 269              		.syntax unified
 270              		.thumb
 271              		.thumb_func
 272              		.fpu fpv4-sp-d16
 274              	init_cat:
 275              	.LVL29:
 276              	.LFB12:
 532:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 277              		.loc 1 532 43 is_stmt 1 view -0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 533:src/keys.c    **** 		// Save last catalogue for a later restore
 281              		.loc 1 533 2 view .LVU72
 532:src/keys.c    **** 	if (cat == CATALOGUE_NONE && State2.catalogue != CATALOGUE_NONE) {
 282              		.loc 1 532 43 is_stmt 0 view .LVU73
 283 0000 38B5     		push	{r3, r4, r5, lr}
 284              		.cfi_def_cfa_offset 16
 285              		.cfi_offset 3, -16
 286              		.cfi_offset 4, -12
 287              		.cfi_offset 5, -8
 288              		.cfi_offset 14, -4
 533:src/keys.c    **** 		// Save last catalogue for a later restore
 289              		.loc 1 533 37 view .LVU74
 290 0002 3A4C     		ldr	r4, .L53
 533:src/keys.c    **** 		// Save last catalogue for a later restore
 291              		.loc 1 533 5 view .LVU75
 292 0004 0546     		mov	r5, r0
 293 0006 D8B9     		cbnz	r0, .L35
ARM GAS  /tmp/ccJ0w3QJ.s 			page 51


 533:src/keys.c    **** 		// Save last catalogue for a later restore
 294              		.loc 1 533 37 discriminator 1 view .LVU76
 295 0008 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 533:src/keys.c    **** 		// Save last catalogue for a later restore
 296              		.loc 1 533 28 discriminator 1 view .LVU77
 297 000a 43B1     		cbz	r3, .L36
 535:src/keys.c    **** 		CmdLineLength = 0;
 298              		.loc 1 535 3 is_stmt 1 view .LVU78
 535:src/keys.c    **** 		CmdLineLength = 0;
 299              		.loc 1 535 18 is_stmt 0 view .LVU79
 300 000c 384A     		ldr	r2, .L53+4
 536:src/keys.c    **** 	}
 301              		.loc 1 536 17 view .LVU80
 302 000e 2077     		strb	r0, [r4, #28]
 535:src/keys.c    **** 		CmdLineLength = 0;
 303              		.loc 1 535 18 view .LVU81
 304 0010 1268     		ldr	r2, [r2]
 305 0012 92F8DC17 		ldrb	r1, [r2, #2012]	@ zero_extendqisi2
 306 0016 63F30401 		bfi	r1, r3, #0, #5
 307 001a 82F8DC17 		strb	r1, [r2, #2012]
 536:src/keys.c    **** 	}
 308              		.loc 1 536 3 is_stmt 1 view .LVU82
 309              	.L36:
 538:src/keys.c    **** 
 310              		.loc 1 538 2 view .LVU83
 311 001e FFF7FEFF 		bl	process_cmdline
 312              	.LVL30:
 540:src/keys.c    **** 	State2.registerlist = 0;
 313              		.loc 1 540 2 view .LVU84
 541:src/keys.c    **** 	State2.status = 0;
 314              		.loc 1 541 2 view .LVU85
 542:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 315              		.loc 1 542 2 view .LVU86
 567:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 316              		.loc 1 567 16 is_stmt 0 view .LVU87
 317 0022 6369     		ldr	r3, [r4, #20]
 318 0024 23F04063 		bic	r3, r3, #201326592
 319 0028 23F40073 		bic	r3, r3, #512
 542:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 320              		.loc 1 542 16 view .LVU88
 321 002c 0022     		movs	r2, #0
 567:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 322              		.loc 1 567 16 view .LVU89
 323 002e 6361     		str	r3, [r4, #20]
 542:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 324              		.loc 1 542 16 view .LVU90
 325 0030 2273     		strb	r2, [r4, #12]
 543:src/keys.c    **** 
 326              		.loc 1 543 2 is_stmt 1 view .LVU91
 545:src/keys.c    **** 	case CATALOGUE_LABELS:
 327              		.loc 1 545 2 view .LVU92
 566:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 328              		.loc 1 566 3 view .LVU93
 566:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 329              		.loc 1 566 20 is_stmt 0 view .LVU94
 330 0032 A273     		strb	r2, [r4, #14]
 567:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
ARM GAS  /tmp/ccJ0w3QJ.s 			page 52


 331              		.loc 1 567 3 is_stmt 1 view .LVU95
 568:src/keys.c    **** 			// Different catalogue, reset position
 332              		.loc 1 568 3 view .LVU96
 573:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 333              		.loc 1 573 2 view .LVU97
 334              	.LBB232:
 335              	.LBI232:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 336              		.loc 1 102 13 view .LVU98
 337              	.LBE232:
 103:src/keys.c    **** }
 338              		.loc 1 103 2 view .LVU99
 339              	.LVL31:
 340              	.LBB249:
 341              	.LBB233:
 342              	.LBI233:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 343              		.loc 1 92 20 view .LVU100
 344              	.LBB234:
  93:src/keys.c    **** 	State2.shifts = shift;
 345              		.loc 1 93 2 view .LVU101
 346              	.LBB235:
 347              	.LBI235:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 348              		.loc 1 84 13 view .LVU102
 349              	.LBB236:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 350              		.loc 1 85 2 view .LVU103
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 351              		.loc 1 85 18 is_stmt 0 view .LVU104
 352 0034 FFF7FEFF 		bl	shift_down
 353              	.LVL32:
  86:src/keys.c    **** }
 354              		.loc 1 86 2 is_stmt 1 view .LVU105
 355              	.LBE236:
 356              	.LBE235:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 357              		.loc 1 94 2 view .LVU106
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 358              		.loc 1 94 16 is_stmt 0 view .LVU107
 359 0038 0023     		movs	r3, #0
 360 003a 2374     		strb	r3, [r4, #16]
  95:src/keys.c    **** 	return r;
 361              		.loc 1 95 2 is_stmt 1 view .LVU108
  95:src/keys.c    **** 	return r;
 362              		.loc 1 95 19 is_stmt 0 view .LVU109
 363 003c 6373     		strb	r3, [r4, #13]
  96:src/keys.c    **** }
 364              		.loc 1 96 2 is_stmt 1 view .LVU110
 365              	.LVL33:
  96:src/keys.c    **** }
 366              		.loc 1 96 2 is_stmt 0 view .LVU111
 367              	.LBE234:
 368              	.LBE233:
 369              	.LBE249:
 577:src/keys.c    **** 
 370              		.loc 1 577 1 view .LVU112
ARM GAS  /tmp/ccJ0w3QJ.s 			page 53


 371 003e 38BD     		pop	{r3, r4, r5, pc}
 372              	.LVL34:
 373              	.L35:
 538:src/keys.c    **** 
 374              		.loc 1 538 2 is_stmt 1 view .LVU113
 375 0040 FFF7FEFF 		bl	process_cmdline
 376              	.LVL35:
 540:src/keys.c    **** 	State2.registerlist = 0;
 377              		.loc 1 540 2 view .LVU114
 541:src/keys.c    **** 	State2.status = 0;
 378              		.loc 1 541 2 view .LVU115
 540:src/keys.c    **** 	State2.registerlist = 0;
 379              		.loc 1 540 19 is_stmt 0 view .LVU116
 380 0044 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 542:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 381              		.loc 1 542 16 view .LVU117
 382 0046 0022     		movs	r2, #0
 540:src/keys.c    **** 	State2.registerlist = 0;
 383              		.loc 1 540 19 view .LVU118
 384 0048 23F00C03 		bic	r3, r3, #12
 545:src/keys.c    **** 	case CATALOGUE_LABELS:
 385              		.loc 1 545 2 view .LVU119
 386 004c 162D     		cmp	r5, #22
 540:src/keys.c    **** 	State2.registerlist = 0;
 387              		.loc 1 540 19 view .LVU120
 388 004e E375     		strb	r3, [r4, #23]
 542:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 389              		.loc 1 542 2 is_stmt 1 view .LVU121
 542:src/keys.c    **** 	State2.catalogue = CATALOGUE_NONE;
 390              		.loc 1 542 16 is_stmt 0 view .LVU122
 391 0050 2273     		strb	r2, [r4, #12]
 543:src/keys.c    **** 
 392              		.loc 1 543 2 is_stmt 1 view .LVU123
 543:src/keys.c    **** 
 393              		.loc 1 543 19 is_stmt 0 view .LVU124
 394 0052 A273     		strb	r2, [r4, #14]
 545:src/keys.c    **** 	case CATALOGUE_LABELS:
 395              		.loc 1 545 2 is_stmt 1 view .LVU125
 396 0054 1DD0     		beq	.L37
 397 0056 172D     		cmp	r5, #23
 398 0058 07D1     		bne	.L51
 561:src/keys.c    **** 		break;
 399              		.loc 1 561 3 view .LVU126
 561:src/keys.c    **** 		break;
 400              		.loc 1 561 17 is_stmt 0 view .LVU127
 401 005a 0123     		movs	r3, #1
 402 005c 2373     		strb	r3, [r4, #12]
 562:src/keys.c    **** 
 403              		.loc 1 562 3 is_stmt 1 view .LVU128
 573:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 404              		.loc 1 573 2 view .LVU129
 405              	.LBB250:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 406              		.loc 1 102 13 view .LVU130
 407              	.LBE250:
 103:src/keys.c    **** }
 408              		.loc 1 103 2 view .LVU131
ARM GAS  /tmp/ccJ0w3QJ.s 			page 54


 409              	.LVL36:
 410              	.LBB251:
 411              	.LBB246:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 412              		.loc 1 92 20 view .LVU132
 413              	.LBB243:
  93:src/keys.c    **** 	State2.shifts = shift;
 414              		.loc 1 93 2 view .LVU133
 415              	.LBB240:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 416              		.loc 1 84 13 view .LVU134
 417              	.LBB237:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 418              		.loc 1 85 2 view .LVU135
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 419              		.loc 1 85 18 is_stmt 0 view .LVU136
 420 005e FFF7FEFF 		bl	shift_down
 421              	.LVL37:
  86:src/keys.c    **** }
 422              		.loc 1 86 2 is_stmt 1 view .LVU137
 423              	.LBE237:
 424              	.LBE240:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 425              		.loc 1 94 2 view .LVU138
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 426              		.loc 1 94 16 is_stmt 0 view .LVU139
 427 0062 0023     		movs	r3, #0
 428 0064 2374     		strb	r3, [r4, #16]
  95:src/keys.c    **** 	return r;
 429              		.loc 1 95 2 is_stmt 1 view .LVU140
  95:src/keys.c    **** 	return r;
 430              		.loc 1 95 19 is_stmt 0 view .LVU141
 431 0066 6373     		strb	r3, [r4, #13]
  96:src/keys.c    **** }
 432              		.loc 1 96 2 is_stmt 1 view .LVU142
 433              	.LVL38:
  96:src/keys.c    **** }
 434              		.loc 1 96 2 is_stmt 0 view .LVU143
 435              	.LBE243:
 436              	.LBE246:
 437              	.LBE251:
 577:src/keys.c    **** 
 438              		.loc 1 577 1 view .LVU144
 439 0068 38BD     		pop	{r3, r4, r5, pc}
 440              	.L51:
 545:src/keys.c    **** 	case CATALOGUE_LABELS:
 441              		.loc 1 545 2 view .LVU145
 442 006a 152D     		cmp	r5, #21
 443 006c 1ED1     		bne	.L39
 548:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 444              		.loc 1 548 3 is_stmt 1 view .LVU146
 549:src/keys.c    **** 		break;
 445              		.loc 1 549 41 is_stmt 0 view .LVU147
 446 006e 2049     		ldr	r1, .L53+4
 548:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 447              		.loc 1 548 20 view .LVU148
 448 0070 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccJ0w3QJ.s 			page 55


 549:src/keys.c    **** 		break;
 449              		.loc 1 549 41 view .LVU149
 450 0072 0968     		ldr	r1, [r1]
 548:src/keys.c    **** 		State2.digval = advance_to_next_label(ProgBegin, 0, 0);
 451              		.loc 1 548 20 view .LVU150
 452 0074 43F00403 		orr	r3, r3, #4
 453 0078 E375     		strb	r3, [r4, #23]
 549:src/keys.c    **** 		break;
 454              		.loc 1 549 3 is_stmt 1 view .LVU151
 549:src/keys.c    **** 		break;
 455              		.loc 1 549 19 is_stmt 0 view .LVU152
 456 007a B1F8EC07 		ldrh	r0, [r1, #2028]
 457 007e 1146     		mov	r1, r2
 458 0080 FFF7FEFF 		bl	advance_to_next_label
 459              	.LVL39:
 549:src/keys.c    **** 		break;
 460              		.loc 1 549 17 view .LVU153
 461 0084 2081     		strh	r0, [r4, #8]	@ movhi
 550:src/keys.c    **** 	
 462              		.loc 1 550 3 is_stmt 1 view .LVU154
 463              	.L40:
 573:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 464              		.loc 1 573 2 view .LVU155
 465              	.LBB252:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 466              		.loc 1 102 13 view .LVU156
 467              	.LBE252:
 103:src/keys.c    **** }
 468              		.loc 1 103 2 view .LVU157
 469              	.LVL40:
 470              	.LBB253:
 471              	.LBB247:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 472              		.loc 1 92 20 view .LVU158
 473              	.LBB244:
  93:src/keys.c    **** 	State2.shifts = shift;
 474              		.loc 1 93 2 view .LVU159
 475              	.LBB241:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 476              		.loc 1 84 13 view .LVU160
 477              	.LBB238:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 478              		.loc 1 85 2 view .LVU161
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 479              		.loc 1 85 18 is_stmt 0 view .LVU162
 480 0086 FFF7FEFF 		bl	shift_down
 481              	.LVL41:
  86:src/keys.c    **** }
 482              		.loc 1 86 2 is_stmt 1 view .LVU163
 483              	.LBE238:
 484              	.LBE241:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 485              		.loc 1 94 2 view .LVU164
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 486              		.loc 1 94 16 is_stmt 0 view .LVU165
 487 008a 0023     		movs	r3, #0
 488 008c 2374     		strb	r3, [r4, #16]
ARM GAS  /tmp/ccJ0w3QJ.s 			page 56


  95:src/keys.c    **** 	return r;
 489              		.loc 1 95 2 is_stmt 1 view .LVU166
  95:src/keys.c    **** 	return r;
 490              		.loc 1 95 19 is_stmt 0 view .LVU167
 491 008e 6373     		strb	r3, [r4, #13]
  96:src/keys.c    **** }
 492              		.loc 1 96 2 is_stmt 1 view .LVU168
 493              	.LVL42:
  96:src/keys.c    **** }
 494              		.loc 1 96 2 is_stmt 0 view .LVU169
 495              	.LBE244:
 496              	.LBE247:
 497              	.LBE253:
 577:src/keys.c    **** 
 498              		.loc 1 577 1 view .LVU170
 499 0090 38BD     		pop	{r3, r4, r5, pc}
 500              	.L37:
 554:src/keys.c    **** 		State2.digval = regX_idx;
 501              		.loc 1 554 3 is_stmt 1 view .LVU171
 554:src/keys.c    **** 		State2.digval = regX_idx;
 502              		.loc 1 554 23 is_stmt 0 view .LVU172
 503 0092 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 556:src/keys.c    **** 		break;
 504              		.loc 1 556 18 view .LVU173
 505 0094 A272     		strb	r2, [r4, #10]
 554:src/keys.c    **** 		State2.digval = regX_idx;
 506              		.loc 1 554 23 view .LVU174
 507 0096 43F00803 		orr	r3, r3, #8
 555:src/keys.c    **** 		State2.digval2 = 0;
 508              		.loc 1 555 17 view .LVU175
 509 009a 6422     		movs	r2, #100
 554:src/keys.c    **** 		State2.digval = regX_idx;
 510              		.loc 1 554 23 view .LVU176
 511 009c E375     		strb	r3, [r4, #23]
 555:src/keys.c    **** 		State2.digval2 = 0;
 512              		.loc 1 555 3 is_stmt 1 view .LVU177
 555:src/keys.c    **** 		State2.digval2 = 0;
 513              		.loc 1 555 17 is_stmt 0 view .LVU178
 514 009e 2281     		strh	r2, [r4, #8]	@ movhi
 556:src/keys.c    **** 		break;
 515              		.loc 1 556 3 is_stmt 1 view .LVU179
 557:src/keys.c    **** 
 516              		.loc 1 557 3 view .LVU180
 573:src/keys.c    **** #if defined(QTGUI) || defined(IOS)
 517              		.loc 1 573 2 view .LVU181
 518              	.LBB254:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 519              		.loc 1 102 13 view .LVU182
 520              	.LBE254:
 103:src/keys.c    **** }
 521              		.loc 1 103 2 view .LVU183
 522              	.LVL43:
 523              	.LBB255:
 524              	.LBB248:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 525              		.loc 1 92 20 view .LVU184
 526              	.LBB245:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 57


  93:src/keys.c    **** 	State2.shifts = shift;
 527              		.loc 1 93 2 view .LVU185
 528              	.LBB242:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 529              		.loc 1 84 13 view .LVU186
 530              	.LBB239:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 531              		.loc 1 85 2 view .LVU187
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 532              		.loc 1 85 18 is_stmt 0 view .LVU188
 533 00a0 FFF7FEFF 		bl	shift_down
 534              	.LVL44:
  86:src/keys.c    **** }
 535              		.loc 1 86 2 is_stmt 1 view .LVU189
 536              	.LBE239:
 537              	.LBE242:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 538              		.loc 1 94 2 view .LVU190
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 539              		.loc 1 94 16 is_stmt 0 view .LVU191
 540 00a4 0023     		movs	r3, #0
 541 00a6 2374     		strb	r3, [r4, #16]
  95:src/keys.c    **** 	return r;
 542              		.loc 1 95 2 is_stmt 1 view .LVU192
  95:src/keys.c    **** 	return r;
 543              		.loc 1 95 19 is_stmt 0 view .LVU193
 544 00a8 6373     		strb	r3, [r4, #13]
  96:src/keys.c    **** }
 545              		.loc 1 96 2 is_stmt 1 view .LVU194
 546              	.LVL45:
  96:src/keys.c    **** }
 547              		.loc 1 96 2 is_stmt 0 view .LVU195
 548              	.LBE245:
 549              	.LBE248:
 550              	.LBE255:
 577:src/keys.c    **** 
 551              		.loc 1 577 1 view .LVU196
 552 00aa 38BD     		pop	{r3, r4, r5, pc}
 553              	.L39:
 566:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 554              		.loc 1 566 3 is_stmt 1 view .LVU197
 567:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 555              		.loc 1 567 44 is_stmt 0 view .LVU198
 556 00ac 022D     		cmp	r5, #2
 566:src/keys.c    **** 		State2.cmplx = (cat == CATALOGUE_COMPLEX || cat == CATALOGUE_COMPLEX_CONST);
 557              		.loc 1 566 20 view .LVU199
 558 00ae A573     		strb	r5, [r4, #14]
 567:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 559              		.loc 1 567 3 is_stmt 1 view .LVU200
 567:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 560              		.loc 1 567 44 is_stmt 0 view .LVU201
 561 00b0 12D1     		bne	.L52
 567:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 562              		.loc 1 567 16 view .LVU202
 563 00b2 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 564 00b4 43F00203 		orr	r3, r3, #2
 565 00b8 6375     		strb	r3, [r4, #21]
ARM GAS  /tmp/ccJ0w3QJ.s 			page 58


 568:src/keys.c    **** 			// Different catalogue, reset position
 566              		.loc 1 568 3 is_stmt 1 view .LVU203
 567              	.L44:
 568:src/keys.c    **** 			// Different catalogue, reset position
 568              		.loc 1 568 32 is_stmt 0 discriminator 1 view .LVU204
 569 00ba 0D4B     		ldr	r3, .L53+4
 570 00bc 1A68     		ldr	r2, [r3]
 568:src/keys.c    **** 			// Different catalogue, reset position
 571              		.loc 1 568 37 discriminator 1 view .LVU205
 572 00be 92F8DC37 		ldrb	r3, [r2, #2012]	@ zero_extendqisi2
 568:src/keys.c    **** 			// Different catalogue, reset position
 573              		.loc 1 568 29 discriminator 1 view .LVU206
 574 00c2 03F01F03 		and	r3, r3, #31
 575 00c6 AB42     		cmp	r3, r5
 576 00c8 DDD0     		beq	.L40
 570:src/keys.c    **** 		}
 577              		.loc 1 570 4 is_stmt 1 view .LVU207
 570:src/keys.c    **** 		}
 578              		.loc 1 570 17 is_stmt 0 view .LVU208
 579 00ca B2F8DC37 		ldrh	r3, [r2, #2012]
 580 00ce 6FF34B13 		bfc	r3, #5, #7
 581 00d2 A2F8DC37 		strh	r3, [r2, #2012]	@ movhi
 582 00d6 D6E7     		b	.L40
 583              	.L52:
 567:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 584              		.loc 1 567 44 view .LVU209
 585 00d8 A5F11101 		sub	r1, r5, #17
 567:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 586              		.loc 1 567 16 view .LVU210
 587 00dc 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 567:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 588              		.loc 1 567 44 view .LVU211
 589 00de 4A42     		rsbs	r2, r1, #0
 590 00e0 4A41     		adcs	r2, r2, r1
 567:src/keys.c    **** 		if (cat != CATALOGUE_NONE && State.last_cat != cat) {
 591              		.loc 1 567 16 view .LVU212
 592 00e2 62F34103 		bfi	r3, r2, #1, #1
 593 00e6 6375     		strb	r3, [r4, #21]
 568:src/keys.c    **** 			// Different catalogue, reset position
 594              		.loc 1 568 3 is_stmt 1 view .LVU213
 595 00e8 E7E7     		b	.L44
 596              	.L54:
 597 00ea 00BF     		.align	2
 598              	.L53:
 599 00ec 00000000 		.word	StateWhileOn
 600 00f0 00000000 		.word	main_ram
 601              		.cfi_endproc
 602              	.LFE12:
 604              		.section	.text.advance_to_previous_label,"ax",%progbits
 605              		.align	1
 606              		.p2align 2,,3
 607              		.syntax unified
 608              		.thumb
 609              		.thumb_func
 610              		.fpu fpv4-sp-d16
 612              	advance_to_previous_label:
 613              	.LVL46:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 59


 614              	.LFB51:
2539:src/keys.c    **** 
2540:src/keys.c    **** static unsigned int advance_to_previous_label(unsigned int pc, int search_end) {
 615              		.loc 1 2540 80 view -0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 0
 618              		@ frame_needed = 0, uses_anonymous_args = 0
 619              		.loc 1 2540 80 is_stmt 0 view .LVU215
 620 0000 70B5     		push	{r4, r5, r6, lr}
 621              		.cfi_def_cfa_offset 16
 622              		.cfi_offset 4, -16
 623              		.cfi_offset 5, -12
 624              		.cfi_offset 6, -8
 625              		.cfi_offset 14, -4
 626 0002 124E     		ldr	r6, .L64
 627              		.loc 1 2540 80 view .LVU216
 628 0004 0446     		mov	r4, r0
 629 0006 0D46     		mov	r5, r1
 630              	.LVL47:
 631              	.L56:
2541:src/keys.c    **** 	do {
 632              		.loc 1 2541 2 is_stmt 1 view .LVU217
2542:src/keys.c    **** 		for (;;) {
 633              		.loc 1 2542 3 view .LVU218
2543:src/keys.c    **** 			pc = do_dec(pc, 0);
 634              		.loc 1 2543 4 view .LVU219
 635              		.loc 1 2543 9 is_stmt 0 view .LVU220
 636 0008 2046     		mov	r0, r4
 637 000a 0021     		movs	r1, #0
 638 000c FFF7FEFF 		bl	do_dec
 639              	.LVL48:
2544:src/keys.c    **** 			if (PcWrapped)
2545:src/keys.c    **** 				break;
2546:src/keys.c    **** 			if (is_label_or_end_at(pc, search_end)) {
 640              		.loc 1 2546 4 is_stmt 1 view .LVU221
2547:src/keys.c    **** 				return pc;
2548:src/keys.c    **** 			}
2549:src/keys.c    **** 		}
2550:src/keys.c    **** 		pc = addrLIB(1, (nLIB(pc) - 1) & 3);
 641              		.loc 1 2550 3 view .LVU222
 642              		.loc 1 2550 8 is_stmt 0 view .LVU223
 643 0010 20F47F53 		bic	r3, r0, #16320
 644 0014 23F03F03 		bic	r3, r3, #63
2544:src/keys.c    **** 			if (PcWrapped)
 645              		.loc 1 2544 7 view .LVU224
 646 0018 3268     		ldr	r2, [r6]
 647              		.loc 1 2550 8 view .LVU225
 648 001a A3F58043 		sub	r3, r3, #16384
2551:src/keys.c    **** 		pc = do_dec(pc, 0);
 649              		.loc 1 2551 8 view .LVU226
 650 001e 0021     		movs	r1, #0
2543:src/keys.c    **** 			if (PcWrapped)
 651              		.loc 1 2543 9 view .LVU227
 652 0020 0446     		mov	r4, r0
 653              	.LVL49:
2544:src/keys.c    **** 				break;
 654              		.loc 1 2544 4 is_stmt 1 view .LVU228
ARM GAS  /tmp/ccJ0w3QJ.s 			page 60


2550:src/keys.c    **** 		pc = do_dec(pc, 0);
 655              		.loc 1 2550 8 is_stmt 0 view .LVU229
 656 0022 9BB2     		uxth	r3, r3
 657              	.LVL50:
 658              		.loc 1 2551 3 is_stmt 1 view .LVU230
2544:src/keys.c    **** 				break;
 659              		.loc 1 2544 7 is_stmt 0 view .LVU231
 660 0024 32B9     		cbnz	r2, .L57
2546:src/keys.c    **** 				return pc;
 661              		.loc 1 2546 8 view .LVU232
 662 0026 2946     		mov	r1, r5
 663 0028 FFF7FEFF 		bl	is_label_or_end_at
 664              	.LVL51:
2546:src/keys.c    **** 				return pc;
 665              		.loc 1 2546 7 view .LVU233
 666 002c 0028     		cmp	r0, #0
 667 002e EBD0     		beq	.L56
2552:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
2553:src/keys.c    **** 	return pc;
2554:src/keys.c    **** }
 668              		.loc 1 2554 1 view .LVU234
 669 0030 2046     		mov	r0, r4
 670 0032 70BD     		pop	{r4, r5, r6, pc}
 671              	.LVL52:
 672              	.L57:
2551:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 673              		.loc 1 2551 8 view .LVU235
 674 0034 43F00100 		orr	r0, r3, #1
 675 0038 FFF7FEFF 		bl	do_dec
 676              	.LVL53:
2552:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 677              		.loc 1 2552 13 view .LVU236
 678 003c 2946     		mov	r1, r5
2551:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 679              		.loc 1 2551 8 view .LVU237
 680 003e 0446     		mov	r4, r0
 681              	.LVL54:
2552:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 682              		.loc 1 2552 10 is_stmt 1 view .LVU238
2552:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 683              		.loc 1 2552 13 is_stmt 0 view .LVU239
 684 0040 FFF7FEFF 		bl	is_label_or_end_at
 685              	.LVL55:
2552:src/keys.c    **** 	} while (! is_label_or_end_at(pc, search_end));
 686              		.loc 1 2552 2 view .LVU240
 687 0044 0028     		cmp	r0, #0
 688 0046 DFD0     		beq	.L56
 689              		.loc 1 2554 1 view .LVU241
 690 0048 2046     		mov	r0, r4
 691 004a 70BD     		pop	{r4, r5, r6, pc}
 692              	.LVL56:
 693              	.L65:
 694              		.loc 1 2554 1 view .LVU242
 695              		.align	2
 696              	.L64:
 697 004c 00000000 		.word	PcWrapped
 698              		.cfi_endproc
ARM GAS  /tmp/ccJ0w3QJ.s 			page 61


 699              	.LFE51:
 701              		.section	.text.init_arg.part.0,"ax",%progbits
 702              		.align	1
 703              		.p2align 2,,3
 704              		.syntax unified
 705              		.thumb
 706              		.thumb_func
 707              		.fpu fpv4-sp-d16
 709              	init_arg.part.0:
 710              	.LVL57:
 711              	.LFB61:
 519:src/keys.c    **** 	if (is_bad_cmdline())
 712              		.loc 1 519 13 is_stmt 1 view -0
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 0
 715              		@ frame_needed = 0, uses_anonymous_args = 0
 716              		@ link register save eliminated.
 522:src/keys.c    **** 	State2.ind = 0;
 717              		.loc 1 522 2 view .LVU244
 522:src/keys.c    **** 	State2.ind = 0;
 718              		.loc 1 522 10 is_stmt 0 view .LVU245
 719 0000 084B     		ldr	r3, .L67
 527:src/keys.c    **** 	State2.local = 0;
 720              		.loc 1 527 13 view .LVU246
 721 0002 5969     		ldr	r1, [r3, #20]
 522:src/keys.c    **** 	State2.ind = 0;
 722              		.loc 1 522 10 view .LVU247
 723 0004 D877     		strb	r0, [r3, #31]
 523:src/keys.c    **** 	State2.digval = 0;
 724              		.loc 1 523 2 is_stmt 1 view .LVU248
 524:src/keys.c    **** 	State2.numdigit = 0;
 725              		.loc 1 524 2 view .LVU249
 527:src/keys.c    **** 	State2.local = 0;
 726              		.loc 1 527 13 is_stmt 0 view .LVU250
 727 0006 21F40F11 		bic	r1, r1, #2342912
 728 000a 8628     		cmp	r0, #134
 729 000c 0CBF     		ite	eq
 730 000e 4FF40812 		moveq	r2, #2228224
 731 0012 4FF40012 		movne	r2, #2097152
 732 0016 0A43     		orrs	r2, r2, r1
 524:src/keys.c    **** 	State2.numdigit = 0;
 733              		.loc 1 524 16 view .LVU251
 734 0018 0021     		movs	r1, #0
 527:src/keys.c    **** 	State2.local = 0;
 735              		.loc 1 527 13 view .LVU252
 736 001a 5A61     		str	r2, [r3, #20]
 524:src/keys.c    **** 	State2.numdigit = 0;
 737              		.loc 1 524 16 view .LVU253
 738 001c 1981     		strh	r1, [r3, #8]	@ movhi
 525:src/keys.c    **** 	State2.rarg = 1;
 739              		.loc 1 525 2 is_stmt 1 view .LVU254
 525:src/keys.c    **** 	State2.rarg = 1;
 740              		.loc 1 525 18 is_stmt 0 view .LVU255
 741 001e D972     		strb	r1, [r3, #11]
 526:src/keys.c    **** 	State2.dot = 0;
 742              		.loc 1 526 2 is_stmt 1 view .LVU256
 527:src/keys.c    **** 	State2.local = 0;
ARM GAS  /tmp/ccJ0w3QJ.s 			page 62


 743              		.loc 1 527 2 view .LVU257
 528:src/keys.c    **** 	State2.shuffle = (base == RARG_SHUFFLE);
 744              		.loc 1 528 2 view .LVU258
 529:src/keys.c    **** }
 745              		.loc 1 529 2 view .LVU259
 530:src/keys.c    **** 
 746              		.loc 1 530 1 is_stmt 0 view .LVU260
 747 0020 7047     		bx	lr
 748              	.L68:
 749 0022 00BF     		.align	2
 750              	.L67:
 751 0024 00000000 		.word	StateWhileOn
 752              		.cfi_endproc
 753              	.LFE61:
 755              		.section	.text.reset_arg,"ax",%progbits
 756              		.align	1
 757              		.p2align 2,,3
 758              		.syntax unified
 759              		.thumb
 760              		.thumb_func
 761              		.fpu fpv4-sp-d16
 763              	reset_arg:
 764              	.LFB29:
1508:src/keys.c    **** 	init_arg((enum rarg) 0);
 765              		.loc 1 1508 29 is_stmt 1 view -0
 766              		.cfi_startproc
 767              		@ args = 0, pretend = 0, frame = 0
 768              		@ frame_needed = 0, uses_anonymous_args = 0
1509:src/keys.c    **** 	State2.rarg = 0;
 769              		.loc 1 1509 2 view .LVU262
 770              	.LVL58:
 771              	.LBB256:
 772              	.LBI256:
 519:src/keys.c    **** 	if (is_bad_cmdline())
 773              		.loc 1 519 13 view .LVU263
 774              	.LBB257:
 520:src/keys.c    **** 		return;
 775              		.loc 1 520 2 view .LVU264
 776              	.LBE257:
 777              	.LBE256:
1508:src/keys.c    **** 	init_arg((enum rarg) 0);
 778              		.loc 1 1508 29 is_stmt 0 view .LVU265
 779 0000 08B5     		push	{r3, lr}
 780              		.cfi_def_cfa_offset 8
 781              		.cfi_offset 3, -8
 782              		.cfi_offset 14, -4
 783              	.LBB259:
 784              	.LBB258:
 520:src/keys.c    **** 		return;
 785              		.loc 1 520 6 view .LVU266
 786 0002 FFF7FEFF 		bl	is_bad_cmdline
 787              	.LVL59:
 520:src/keys.c    **** 		return;
 788              		.loc 1 520 5 view .LVU267
 789 0006 08B9     		cbnz	r0, .L70
 790 0008 FFF7FEFF 		bl	init_arg.part.0
 791              	.LVL60:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 63


 792              	.L70:
 520:src/keys.c    **** 		return;
 793              		.loc 1 520 5 view .LVU268
 794              	.LBE258:
 795              	.LBE259:
1510:src/keys.c    **** }
 796              		.loc 1 1510 2 is_stmt 1 view .LVU269
1510:src/keys.c    **** }
 797              		.loc 1 1510 14 is_stmt 0 view .LVU270
 798 000c 024B     		ldr	r3, .L72
 799 000e 9A7D     		ldrb	r2, [r3, #22]	@ zero_extendqisi2
 800 0010 6FF34512 		bfc	r2, #5, #1
 801 0014 9A75     		strb	r2, [r3, #22]
1511:src/keys.c    **** 
 802              		.loc 1 1511 1 view .LVU271
 803 0016 08BD     		pop	{r3, pc}
 804              	.L73:
 805              		.align	2
 806              	.L72:
 807 0018 00000000 		.word	StateWhileOn
 808              		.cfi_endproc
 809              	.LFE29:
 811              		.section	.text.arg_eval,"ax",%progbits
 812              		.align	1
 813              		.p2align 2,,3
 814              		.syntax unified
 815              		.thumb
 816              		.thumb_func
 817              		.fpu fpv4-sp-d16
 819              	arg_eval:
 820              	.LVL61:
 821              	.LFB30:
1513:src/keys.c    **** 	const unsigned int base = CmdBase;
 822              		.loc 1 1513 39 is_stmt 1 view -0
 823              		.cfi_startproc
 824              		@ args = 0, pretend = 0, frame = 0
 825              		@ frame_needed = 0, uses_anonymous_args = 0
1514:src/keys.c    **** 	int r = RARG(base, val 
 826              		.loc 1 1514 2 view .LVU273
1514:src/keys.c    **** 	int r = RARG(base, val 
 827              		.loc 1 1514 28 is_stmt 0 view .LVU274
 828 0000 1C4B     		ldr	r3, .L95
1513:src/keys.c    **** 	const unsigned int base = CmdBase;
 829              		.loc 1 1513 39 view .LVU275
 830 0002 70B5     		push	{r4, r5, r6, lr}
 831              		.cfi_def_cfa_offset 16
 832              		.cfi_offset 4, -16
 833              		.cfi_offset 5, -12
 834              		.cfi_offset 6, -8
 835              		.cfi_offset 14, -4
1515:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 836              		.loc 1 1515 10 view .LVU276
 837 0004 9D7D     		ldrb	r5, [r3, #22]	@ zero_extendqisi2
 838 0006 597D     		ldrb	r1, [r3, #21]	@ zero_extendqisi2
1514:src/keys.c    **** 	int r = RARG(base, val 
 839              		.loc 1 1514 21 view .LVU277
 840 0008 DA7F     		ldrb	r2, [r3, #31]	@ zero_extendqisi2
ARM GAS  /tmp/ccJ0w3QJ.s 			page 64


 841              	.LVL62:
1515:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 842              		.loc 1 1515 2 is_stmt 1 view .LVU278
1515:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 843              		.loc 1 1515 10 is_stmt 0 view .LVU279
 844 000a EE07     		lsls	r6, r5, #31
1518:src/keys.c    **** 
 845              		.loc 1 1518 30 view .LVU280
 846 000c 1A4E     		ldr	r6, .L95+4
 847 000e 3668     		ldr	r6, [r6]
1515:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 848              		.loc 1 1515 10 view .LVU281
 849 0010 01F08003 		and	r3, r1, #128
 850 0014 0344     		add	r3, r3, r0
1518:src/keys.c    **** 
 851              		.loc 1 1518 30 view .LVU282
 852 0016 96F8EA67 		ldrb	r6, [r6, #2026]	@ zero_extendqisi2
1515:src/keys.c    **** 		 	   + (State2.ind ? RARG_IND : 0) 
 853              		.loc 1 1515 10 view .LVU283
 854 001a 02F12004 		add	r4, r2, #32
 855 001e 48BF     		it	mi
 856 0020 7033     		addmi	r3, r3, #112
 857 0022 2402     		lsls	r4, r4, #8
 858 0024 1C43     		orrs	r4, r4, r3
 859              	.LVL63:
1518:src/keys.c    **** 
 860              		.loc 1 1518 2 is_stmt 1 view .LVU284
1518:src/keys.c    **** 
 861              		.loc 1 1518 77 is_stmt 0 view .LVU285
 862 0026 3307     		lsls	r3, r6, #28
 863 0028 1DD5     		bpl	.L81
1518:src/keys.c    **** 
 864              		.loc 1 1518 77 discriminator 2 view .LVU286
 865 002a 15F0400F 		tst	r5, #64
 866 002e 0CBF     		ite	eq
 867 0030 0425     		moveq	r5, #4
 868 0032 0825     		movne	r5, #8
 869              	.L76:
 870              	.LVL64:
1520:src/keys.c    **** 		/*
 871              		.loc 1 1520 2 is_stmt 1 discriminator 6 view .LVU287
1520:src/keys.c    **** 		/*
 872              		.loc 1 1520 5 is_stmt 0 discriminator 6 view .LVU288
 873 0034 0E06     		lsls	r6, r1, #24
 874 0036 12D4     		bmi	.L77
1535:src/keys.c    **** 			// Disallow odd complex register > 98
 875              		.loc 1 1535 3 is_stmt 1 view .LVU289
1535:src/keys.c    **** 			// Disallow odd complex register > 98
 876              		.loc 1 1535 20 is_stmt 0 view .LVU290
 877 0038 104B     		ldr	r3, .L95+8
 878 003a 03EB0213 		add	r3, r3, r2, lsl #4
 879 003e 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
1535:src/keys.c    **** 			// Disallow odd complex register > 98
 880              		.loc 1 1535 6 view .LVU291
 881 0040 D906     		lsls	r1, r3, #27
 882 0042 09D5     		bpl	.L78
1535:src/keys.c    **** 			// Disallow odd complex register > 98
ARM GAS  /tmp/ccJ0w3QJ.s 			page 65


 883              		.loc 1 1535 27 discriminator 1 view .LVU292
 884 0044 6228     		cmp	r0, #98
 885 0046 07D9     		bls	.L78
1535:src/keys.c    **** 			// Disallow odd complex register > 98
 886              		.loc 1 1535 52 discriminator 2 view .LVU293
 887 0048 C307     		lsls	r3, r0, #31
 888 004a 02D4     		bmi	.L85
1539:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 889              		.loc 1 1539 3 is_stmt 1 view .LVU294
1539:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 890              		.loc 1 1539 28 is_stmt 0 view .LVU295
 891 004c 223A     		subs	r2, r2, #34
 892              	.LVL65:
1539:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 893              		.loc 1 1539 6 view .LVU296
 894 004e 012A     		cmp	r2, #1
 895 0050 05D8     		bhi	.L77
 896              	.LVL66:
 897              	.L85:
1537:src/keys.c    **** #endif
 898              		.loc 1 1537 11 view .LVU297
 899 0052 3324     		movs	r4, #51
 900              	.LVL67:
1546:src/keys.c    **** 
 901              		.loc 1 1546 1 view .LVU298
 902 0054 2046     		mov	r0, r4
 903              	.LVL68:
1546:src/keys.c    **** 
 904              		.loc 1 1546 1 view .LVU299
 905 0056 70BD     		pop	{r4, r5, r6, pc}
 906              	.LVL69:
 907              	.L78:
1539:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 908              		.loc 1 1539 3 is_stmt 1 view .LVU300
1539:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 909              		.loc 1 1539 28 is_stmt 0 view .LVU301
 910 0058 223A     		subs	r2, r2, #34
 911              	.LVL70:
1539:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 912              		.loc 1 1539 6 view .LVU302
 913 005a 012A     		cmp	r2, #1
 914 005c 05D9     		bls	.L94
 915              	.LVL71:
 916              	.L77:
1544:src/keys.c    **** 	return r;
 917              		.loc 1 1544 2 is_stmt 1 view .LVU303
 918 005e FFF7FEFF 		bl	reset_arg
 919              	.LVL72:
1545:src/keys.c    **** }
 920              		.loc 1 1545 2 view .LVU304
1546:src/keys.c    **** 
 921              		.loc 1 1546 1 is_stmt 0 view .LVU305
 922 0062 2046     		mov	r0, r4
 923 0064 70BD     		pop	{r4, r5, r6, pc}
 924              	.LVL73:
 925              	.L81:
1518:src/keys.c    **** 
ARM GAS  /tmp/ccJ0w3QJ.s 			page 66


 926              		.loc 1 1518 77 view .LVU306
 927 0066 0425     		movs	r5, #4
 928 0068 E4E7     		b	.L76
 929              	.LVL74:
 930              	.L94:
1539:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 931              		.loc 1 1539 73 discriminator 1 view .LVU307
 932 006a C5F16405 		rsb	r5, r5, #100
 933              	.LVL75:
1539:src/keys.c    **** 			// Avoid stack clash for STOS/RCLS
 934              		.loc 1 1539 52 discriminator 1 view .LVU308
 935 006e 8542     		cmp	r5, r0
 936 0070 F5D2     		bcs	.L77
 937 0072 EEE7     		b	.L85
 938              	.L96:
 939              		.align	2
 940              	.L95:
 941 0074 00000000 		.word	StateWhileOn
 942 0078 00000000 		.word	main_ram
 943 007c 00000000 		.word	argcmds
 944              		.cfi_endproc
 945              	.LFE30:
 947              		.section	.text.process_arg_shuffle,"ax",%progbits
 948              		.align	1
 949              		.p2align 2,,3
 950              		.syntax unified
 951              		.thumb
 952              		.thumb_func
 953              		.fpu fpv4-sp-d16
 955              	process_arg_shuffle:
 956              	.LVL76:
 957              	.LFB36:
1660:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 958              		.loc 1 1660 39 is_stmt 1 view -0
 959              		.cfi_startproc
 960              		@ args = 0, pretend = 0, frame = 0
 961              		@ frame_needed = 0, uses_anonymous_args = 0
 962              		@ link register save eliminated.
1661:src/keys.c    **** 	if (State2.numdigit < 4)
 963              		.loc 1 1661 2 view .LVU310
1660:src/keys.c    **** 	State2.digval += r << (State2.numdigit++ << 1);
 964              		.loc 1 1660 39 is_stmt 0 view .LVU311
 965 0000 10B4     		push	{r4}
 966              		.cfi_def_cfa_offset 4
 967              		.cfi_offset 4, -4
1661:src/keys.c    **** 	if (State2.numdigit < 4)
 968              		.loc 1 1661 31 view .LVU312
 969 0002 0A4A     		ldr	r2, .L100
 970 0004 D37A     		ldrb	r3, [r2, #11]	@ zero_extendqisi2
1661:src/keys.c    **** 	if (State2.numdigit < 4)
 971              		.loc 1 1661 16 view .LVU313
 972 0006 1189     		ldrh	r1, [r2, #8]
1661:src/keys.c    **** 	if (State2.numdigit < 4)
 973              		.loc 1 1661 43 view .LVU314
 974 0008 5C00     		lsls	r4, r3, #1
1661:src/keys.c    **** 	if (State2.numdigit < 4)
 975              		.loc 1 1661 21 view .LVU315
ARM GAS  /tmp/ccJ0w3QJ.s 			page 67


 976 000a A040     		lsls	r0, r0, r4
 977              	.LVL77:
1661:src/keys.c    **** 	if (State2.numdigit < 4)
 978              		.loc 1 1661 40 view .LVU316
 979 000c 0133     		adds	r3, r3, #1
 980 000e DBB2     		uxtb	r3, r3
1661:src/keys.c    **** 	if (State2.numdigit < 4)
 981              		.loc 1 1661 16 view .LVU317
 982 0010 0844     		add	r0, r0, r1
 983 0012 80B2     		uxth	r0, r0
1662:src/keys.c    **** 		return STATE_UNFINISHED;
 984              		.loc 1 1662 5 view .LVU318
 985 0014 032B     		cmp	r3, #3
1661:src/keys.c    **** 	if (State2.numdigit < 4)
 986              		.loc 1 1661 40 view .LVU319
 987 0016 D372     		strb	r3, [r2, #11]
1661:src/keys.c    **** 	if (State2.numdigit < 4)
 988              		.loc 1 1661 16 view .LVU320
 989 0018 1081     		strh	r0, [r2, #8]	@ movhi
1662:src/keys.c    **** 		return STATE_UNFINISHED;
 990              		.loc 1 1662 2 is_stmt 1 view .LVU321
1662:src/keys.c    **** 		return STATE_UNFINISHED;
 991              		.loc 1 1662 5 is_stmt 0 view .LVU322
 992 001a 03D9     		bls	.L98
1664:src/keys.c    **** }
 993              		.loc 1 1664 2 is_stmt 1 view .LVU323
1665:src/keys.c    **** 
 994              		.loc 1 1665 1 is_stmt 0 view .LVU324
 995 001c 5DF8044B 		ldr	r4, [sp], #4
 996              		.cfi_remember_state
 997              		.cfi_restore 4
 998              		.cfi_def_cfa_offset 0
1664:src/keys.c    **** }
 999              		.loc 1 1664 9 view .LVU325
 1000 0020 FFF7FEBF 		b	arg_eval
 1001              	.LVL78:
 1002              	.L98:
 1003              		.cfi_restore_state
1665:src/keys.c    **** 
 1004              		.loc 1 1665 1 view .LVU326
 1005 0024 3320     		movs	r0, #51
 1006 0026 5DF8044B 		ldr	r4, [sp], #4
 1007              		.cfi_restore 4
 1008              		.cfi_def_cfa_offset 0
 1009 002a 7047     		bx	lr
 1010              	.L101:
 1011              		.align	2
 1012              	.L100:
 1013 002c 00000000 		.word	StateWhileOn
 1014              		.cfi_endproc
 1015              	.LFE36:
 1017              		.section	.text.arg_digit,"ax",%progbits
 1018              		.align	1
 1019              		.p2align 2,,3
 1020              		.syntax unified
 1021              		.thumb
 1022              		.thumb_func
ARM GAS  /tmp/ccJ0w3QJ.s 			page 68


 1023              		.fpu fpv4-sp-d16
 1025              	arg_digit:
 1026              	.LVL79:
 1027              	.LFB31:
1548:src/keys.c    **** 	int lim;
 1028              		.loc 1 1548 29 is_stmt 1 view -0
 1029              		.cfi_startproc
 1030              		@ args = 0, pretend = 0, frame = 0
 1031              		@ frame_needed = 0, uses_anonymous_args = 0
1549:src/keys.c    **** #ifdef INCLUDE_SIGFIG_MODE
 1032              		.loc 1 1549 2 view .LVU328
1554:src/keys.c    **** #endif
 1033              		.loc 1 1554 2 view .LVU329
1548:src/keys.c    **** 	int lim;
 1034              		.loc 1 1548 29 is_stmt 0 view .LVU330
 1035 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1036              		.cfi_def_cfa_offset 24
 1037              		.cfi_offset 3, -24
 1038              		.cfi_offset 4, -20
 1039              		.cfi_offset 5, -16
 1040              		.cfi_offset 6, -12
 1041              		.cfi_offset 7, -8
 1042              		.cfi_offset 14, -4
1554:src/keys.c    **** #endif
 1043              		.loc 1 1554 28 view .LVU331
 1044 0002 314C     		ldr	r4, .L127
1557:src/keys.c    **** 	
 1045              		.loc 1 1557 34 view .LVU332
 1046 0004 314A     		ldr	r2, .L127+4
1554:src/keys.c    **** #endif
 1047              		.loc 1 1554 28 view .LVU333
 1048 0006 E77F     		ldrb	r7, [r4, #31]	@ zero_extendqisi2
 1049              	.LVL80:
1556:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1050              		.loc 1 1556 2 is_stmt 1 view .LVU334
1556:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1051              		.loc 1 1556 33 is_stmt 0 view .LVU335
 1052 0008 2389     		ldrh	r3, [r4, #8]
1557:src/keys.c    **** 	
 1053              		.loc 1 1557 34 view .LVU336
 1054 000a 02EB0712 		add	r2, r2, r7, lsl #4
1556:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1055              		.loc 1 1556 41 view .LVU337
 1056 000e 03EB8303 		add	r3, r3, r3, lsl #2
1557:src/keys.c    **** 	
 1057              		.loc 1 1557 34 view .LVU338
 1058 0012 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
1557:src/keys.c    **** 	
 1059              		.loc 1 1557 39 view .LVU339
 1060 0014 8E07     		lsls	r6, r1, #30
1556:src/keys.c    **** 	const int is_reg = argcmds[base].reg || State2.ind;
 1061              		.loc 1 1556 46 view .LVU340
 1062 0016 00EB4305 		add	r5, r0, r3, lsl #1
 1063              	.LVL81:
1557:src/keys.c    **** 	
 1064              		.loc 1 1557 2 is_stmt 1 view .LVU341
1557:src/keys.c    **** 	
ARM GAS  /tmp/ccJ0w3QJ.s 			page 69


 1065              		.loc 1 1557 39 is_stmt 0 view .LVU342
 1066 001a C1F34000 		ubfx	r0, r1, #1, #1
 1067              	.LVL82:
1557:src/keys.c    **** 	
 1068              		.loc 1 1557 39 view .LVU343
 1069 001e 32D5     		bpl	.L103
 1070              	.LVL83:
1559:src/keys.c    **** 		// Handle local registers and flags
 1071              		.loc 1 1559 2 is_stmt 1 view .LVU344
1559:src/keys.c    **** 		// Handle local registers and flags
 1072              		.loc 1 1559 6 is_stmt 0 view .LVU345
 1073 0020 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1559:src/keys.c    **** 		// Handle local registers and flags
 1074              		.loc 1 1559 5 view .LVU346
 1075 0022 D907     		lsls	r1, r3, #31
 1076 0024 28D5     		bpl	.L105
 1077              	.L116:
1557:src/keys.c    **** 	
 1078              		.loc 1 1557 39 view .LVU347
 1079 0026 0120     		movs	r0, #1
 1080              	.LVL84:
 1081              	.L104:
1561:src/keys.c    **** 		if (State2.runmode) {
 1082              		.loc 1 1561 3 is_stmt 1 view .LVU348
1562:src/keys.c    **** 			if (LocalRegs == 0)
 1083              		.loc 1 1562 3 view .LVU349
1562:src/keys.c    **** 			if (LocalRegs == 0)
 1084              		.loc 1 1562 6 is_stmt 0 view .LVU350
 1085 0028 5A06     		lsls	r2, r3, #25
 1086 002a 3BD5     		bpl	.L118
1563:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1087              		.loc 1 1563 4 is_stmt 1 view .LVU351
1563:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1088              		.loc 1 1563 8 is_stmt 0 view .LVU352
 1089 002c 284B     		ldr	r3, .L127+8
 1090 002e 1B68     		ldr	r3, [r3]
1563:src/keys.c    **** 				return STATE_UNFINISHED;		// no local flags or registers
 1091              		.loc 1 1563 7 view .LVU353
 1092 0030 B3F9DE37 		ldrsh	r3, [r3, #2014]
 1093 0034 2BB3     		cbz	r3, .L111
1565:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
 1094              		.loc 1 1565 4 is_stmt 1 view .LVU354
1565:src/keys.c    **** 				lim = local_regs_rarg((enum rarg) base) - 1;
 1095              		.loc 1 1565 7 is_stmt 0 view .LVU355
 1096 0036 A8B3     		cbz	r0, .L118
1566:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1097              		.loc 1 1566 5 is_stmt 1 view .LVU356
1566:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1098              		.loc 1 1566 11 is_stmt 0 view .LVU357
 1099 0038 3846     		mov	r0, r7
 1100 003a FFF7FEFF 		bl	local_regs_rarg
 1101              	.LVL85:
1567:src/keys.c    **** 					lim = MAX_LOCAL_DIRECT - 1;	// in case of more than 16 locals
 1102              		.loc 1 1567 5 is_stmt 1 view .LVU358
1566:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1103              		.loc 1 1566 9 is_stmt 0 view .LVU359
 1104 003e 0138     		subs	r0, r0, #1
ARM GAS  /tmp/ccJ0w3QJ.s 			page 70


 1105              	.LVL86:
1566:src/keys.c    **** 				if (lim >= MAX_LOCAL_DIRECT)
 1106              		.loc 1 1566 9 view .LVU360
 1107 0040 0F28     		cmp	r0, #15
 1108 0042 A8BF     		it	ge
 1109 0044 0F20     		movge	r0, #15
 1110              	.LVL87:
 1111              	.L108:
1579:src/keys.c    **** 		return STATE_UNFINISHED;
 1112              		.loc 1 1579 2 is_stmt 1 view .LVU361
1579:src/keys.c    **** 		return STATE_UNFINISHED;
 1113              		.loc 1 1579 5 is_stmt 0 view .LVU362
 1114 0046 8542     		cmp	r5, r0
 1115 0048 1BDC     		bgt	.L111
 1116              	.L125:
1582:src/keys.c    **** 	++State2.numdigit;
 1117              		.loc 1 1582 2 is_stmt 1 view .LVU363
1583:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1118              		.loc 1 1583 2 is_stmt 0 view .LVU364
 1119 004a E67A     		ldrb	r6, [r4, #11]	@ zero_extendqisi2
1582:src/keys.c    **** 	++State2.numdigit;
 1120              		.loc 1 1582 16 view .LVU365
 1121 004c 2581     		strh	r5, [r4, #8]	@ movhi
1583:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1122              		.loc 1 1583 2 is_stmt 1 view .LVU366
 1123 004e 0136     		adds	r6, r6, #1
1584:src/keys.c    **** 		int result = arg_eval(val);
 1124              		.loc 1 1584 16 is_stmt 0 view .LVU367
 1125 0050 05EB8503 		add	r3, r5, r5, lsl #2
1583:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1126              		.loc 1 1583 2 view .LVU368
 1127 0054 F6B2     		uxtb	r6, r6
1584:src/keys.c    **** 		int result = arg_eval(val);
 1128              		.loc 1 1584 5 view .LVU369
 1129 0056 B0EB430F 		cmp	r0, r3, lsl #1
1583:src/keys.c    **** 	if ((int) val * 10 > lim || State2.numdigit >= num_arg_digits(base)) {
 1130              		.loc 1 1583 2 view .LVU370
 1131 005a E672     		strb	r6, [r4, #11]
1584:src/keys.c    **** 		int result = arg_eval(val);
 1132              		.loc 1 1584 2 is_stmt 1 view .LVU371
1584:src/keys.c    **** 		int result = arg_eval(val);
 1133              		.loc 1 1584 5 is_stmt 0 view .LVU372
 1134 005c 04DB     		blt	.L114
1584:src/keys.c    **** 		int result = arg_eval(val);
 1135              		.loc 1 1584 49 discriminator 1 view .LVU373
 1136 005e 3846     		mov	r0, r7
 1137              	.LVL88:
1584:src/keys.c    **** 		int result = arg_eval(val);
 1138              		.loc 1 1584 49 discriminator 1 view .LVU374
 1139 0060 FFF7FEFF 		bl	num_arg_digits
 1140              	.LVL89:
1584:src/keys.c    **** 		int result = arg_eval(val);
 1141              		.loc 1 1584 27 discriminator 1 view .LVU375
 1142 0064 8642     		cmp	r6, r0
 1143 0066 0CDB     		blt	.L111
 1144              	.L114:
 1145              	.LBB260:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 71


1585:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1146              		.loc 1 1585 3 is_stmt 1 view .LVU376
1585:src/keys.c    **** 		if ( result == STATE_UNFINISHED ) {
 1147              		.loc 1 1585 16 is_stmt 0 view .LVU377
 1148 0068 2846     		mov	r0, r5
 1149 006a FFF7FEFF 		bl	arg_eval
 1150              	.LVL90:
1586:src/keys.c    **** 			--State2.numdigit;
 1151              		.loc 1 1586 3 is_stmt 1 view .LVU378
1586:src/keys.c    **** 			--State2.numdigit;
 1152              		.loc 1 1586 6 is_stmt 0 view .LVU379
 1153 006e 3328     		cmp	r0, #51
 1154 0070 1AD0     		beq	.L123
 1155              	.LBE260:
1593:src/keys.c    **** 
 1156              		.loc 1 1593 1 view .LVU380
 1157 0072 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1158              	.LVL91:
 1159              	.L126:
1559:src/keys.c    **** 		// Handle local registers and flags
 1160              		.loc 1 1559 2 is_stmt 1 view .LVU381
1559:src/keys.c    **** 		// Handle local registers and flags
 1161              		.loc 1 1559 5 is_stmt 0 view .LVU382
 1162 0074 DA07     		lsls	r2, r3, #31
 1163 0076 D6D4     		bmi	.L116
 1164              	.L105:
1573:src/keys.c    **** 	else {
 1165              		.loc 1 1573 3 is_stmt 1 view .LVU383
1573:src/keys.c    **** 	else {
 1166              		.loc 1 1573 65 is_stmt 0 view .LVU384
 1167 0078 5B06     		lsls	r3, r3, #25
 1168 007a 1FD4     		bmi	.L124
 1169 007c 6320     		movs	r0, #99
 1170              	.LVL92:
1579:src/keys.c    **** 		return STATE_UNFINISHED;
 1171              		.loc 1 1579 2 is_stmt 1 view .LVU385
1579:src/keys.c    **** 		return STATE_UNFINISHED;
 1172              		.loc 1 1579 5 is_stmt 0 view .LVU386
 1173 007e 8542     		cmp	r5, r0
 1174 0080 E3DD     		ble	.L125
 1175              	.LVL93:
 1176              	.L111:
1564:src/keys.c    **** 			if (is_reg) {
 1177              		.loc 1 1564 12 view .LVU387
 1178 0082 3320     		movs	r0, #51
1593:src/keys.c    **** 
 1179              		.loc 1 1593 1 view .LVU388
 1180 0084 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1181              	.LVL94:
 1182              	.L103:
1557:src/keys.c    **** 	
 1183              		.loc 1 1557 39 discriminator 2 view .LVU389
 1184 0086 94F91530 		ldrsb	r3, [r4, #21]
 1185 008a 002B     		cmp	r3, #0
1559:src/keys.c    **** 		// Handle local registers and flags
 1186              		.loc 1 1559 6 discriminator 2 view .LVU390
 1187 008c A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
ARM GAS  /tmp/ccJ0w3QJ.s 			page 72


1557:src/keys.c    **** 	
 1188              		.loc 1 1557 39 discriminator 2 view .LVU391
 1189 008e F1DB     		blt	.L126
 1190              	.LVL95:
1559:src/keys.c    **** 		// Handle local registers and flags
 1191              		.loc 1 1559 2 is_stmt 1 view .LVU392
1559:src/keys.c    **** 		// Handle local registers and flags
 1192              		.loc 1 1559 5 is_stmt 0 view .LVU393
 1193 0090 DE07     		lsls	r6, r3, #31
 1194 0092 C9D4     		bmi	.L104
1572:src/keys.c    **** 		lim = State2.runmode ? global_regs_rarg((enum rarg) base) - 1 : TOPREALREG - 1;
 1195              		.loc 1 1572 7 is_stmt 1 view .LVU394
1575:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1196              		.loc 1 1575 3 view .LVU395
1575:src/keys.c    **** 		if (lim >= RARG_IND && argcmds[base].indirectokay)
 1197              		.loc 1 1575 7 is_stmt 0 view .LVU396
 1198 0094 1079     		ldrb	r0, [r2, #4]	@ zero_extendqisi2
 1199              	.LVL96:
1576:src/keys.c    **** 			lim = RARG_IND - 1;
 1200              		.loc 1 1576 3 is_stmt 1 view .LVU397
1576:src/keys.c    **** 			lim = RARG_IND - 1;
 1201              		.loc 1 1576 6 is_stmt 0 view .LVU398
 1202 0096 7F28     		cmp	r0, #127
 1203 0098 D5DD     		ble	.L108
1577:src/keys.c    **** 	}
 1204              		.loc 1 1577 8 discriminator 1 view .LVU399
 1205 009a 11F0010F 		tst	r1, #1
 1206 009e 18BF     		it	ne
 1207 00a0 7F20     		movne	r0, #127
 1208              	.LVL97:
1577:src/keys.c    **** 	}
 1209              		.loc 1 1577 8 discriminator 1 view .LVU400
 1210 00a2 D0E7     		b	.L108
 1211              	.LVL98:
 1212              	.L118:
1561:src/keys.c    **** 		if (State2.runmode) {
 1213              		.loc 1 1561 7 view .LVU401
 1214 00a4 0F20     		movs	r0, #15
 1215 00a6 CEE7     		b	.L108
 1216              	.LVL99:
 1217              	.L123:
 1218              	.LBB261:
1587:src/keys.c    **** 			State2.digval /= 10;
 1219              		.loc 1 1587 4 is_stmt 1 view .LVU402
1588:src/keys.c    **** 		}
 1220              		.loc 1 1588 18 is_stmt 0 view .LVU403
 1221 00a8 2389     		ldrh	r3, [r4, #8]
 1222 00aa 0A49     		ldr	r1, .L127+12
1587:src/keys.c    **** 			State2.digval /= 10;
 1223              		.loc 1 1587 4 view .LVU404
 1224 00ac E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
1588:src/keys.c    **** 		}
 1225              		.loc 1 1588 18 view .LVU405
 1226 00ae A1FB0313 		umull	r1, r3, r1, r3
 1227 00b2 DB08     		lsrs	r3, r3, #3
1587:src/keys.c    **** 			State2.digval /= 10;
 1228              		.loc 1 1587 4 view .LVU406
ARM GAS  /tmp/ccJ0w3QJ.s 			page 73


 1229 00b4 013A     		subs	r2, r2, #1
1588:src/keys.c    **** 		}
 1230              		.loc 1 1588 18 view .LVU407
 1231 00b6 2381     		strh	r3, [r4, #8]	@ movhi
1587:src/keys.c    **** 			State2.digval /= 10;
 1232              		.loc 1 1587 4 view .LVU408
 1233 00b8 E272     		strb	r2, [r4, #11]
1588:src/keys.c    **** 		}
 1234              		.loc 1 1588 4 is_stmt 1 view .LVU409
 1235              	.LBE261:
1593:src/keys.c    **** 
 1236              		.loc 1 1593 1 is_stmt 0 view .LVU410
 1237 00ba F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1238              	.LVL100:
 1239              	.L124:
1573:src/keys.c    **** 	else {
 1240              		.loc 1 1573 26 discriminator 1 view .LVU411
 1241 00bc 3846     		mov	r0, r7
 1242 00be FFF7FEFF 		bl	global_regs_rarg
 1243              	.LVL101:
1573:src/keys.c    **** 	else {
 1244              		.loc 1 1573 61 discriminator 1 view .LVU412
 1245 00c2 0138     		subs	r0, r0, #1
 1246 00c4 BFE7     		b	.L108
 1247              	.L128:
 1248 00c6 00BF     		.align	2
 1249              	.L127:
 1250 00c8 00000000 		.word	StateWhileOn
 1251 00cc 00000000 		.word	argcmds
 1252 00d0 00000000 		.word	main_ram
 1253 00d4 CDCCCCCC 		.word	-858993459
 1254              		.cfi_endproc
 1255              	.LFE31:
 1257              		.section	.text.intltr,"ax",%progbits
 1258              		.align	1
 1259              		.p2align 2,,3
 1260              		.syntax unified
 1261              		.thumb
 1262              		.thumb_func
 1263              		.fpu fpv4-sp-d16
 1265              	intltr:
 1266              	.LVL102:
 1267              	.LFB18:
 684:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1268              		.loc 1 684 26 is_stmt 1 view -0
 1269              		.cfi_startproc
 1270              		@ args = 0, pretend = 0, frame = 0
 1271              		@ frame_needed = 0, uses_anonymous_args = 0
 685:src/keys.c    **** }
 1272              		.loc 1 685 2 view .LVU414
 685:src/keys.c    **** }
 1273              		.loc 1 685 10 is_stmt 0 view .LVU415
 1274 0000 0B4B     		ldr	r3, .L138
 1275 0002 1B68     		ldr	r3, [r3]
 1276 0004 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 685:src/keys.c    **** }
 1277              		.loc 1 685 22 view .LVU416
ARM GAS  /tmp/ccJ0w3QJ.s 			page 74


 1278 0008 13F00103 		ands	r3, r3, #1
 1279 000c 05D0     		beq	.L131
 685:src/keys.c    **** }
 1280              		.loc 1 685 26 discriminator 1 view .LVU417
 1281 000e 094B     		ldr	r3, .L138+4
 1282 0010 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 685:src/keys.c    **** }
 1283              		.loc 1 685 22 discriminator 1 view .LVU418
 1284 0012 5B06     		lsls	r3, r3, #25
 1285 0014 03D4     		bmi	.L137
 685:src/keys.c    **** }
 1286              		.loc 1 685 22 view .LVU419
 1287 0016 0120     		movs	r0, #1
 1288              	.LVL103:
 686:src/keys.c    **** 
 1289              		.loc 1 686 1 view .LVU420
 1290 0018 7047     		bx	lr
 1291              	.LVL104:
 1292              	.L131:
 685:src/keys.c    **** }
 1293              		.loc 1 685 22 view .LVU421
 1294 001a 1846     		mov	r0, r3
 1295              	.LVL105:
 685:src/keys.c    **** }
 1296              		.loc 1 685 22 view .LVU422
 1297 001c 7047     		bx	lr
 1298              	.LVL106:
 1299              	.L137:
 684:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1300              		.loc 1 684 26 view .LVU423
 1301 001e 10B5     		push	{r4, lr}
 1302              		.cfi_def_cfa_offset 8
 1303              		.cfi_offset 4, -8
 1304              		.cfi_offset 14, -4
 1305 0020 0446     		mov	r4, r0
 1306              	.LVL107:
 1307              	.LBB264:
 1308              	.LBI264:
 684:src/keys.c    **** 	return (UState.intm && (! State2.runmode || (int) int_base() > d));
 1309              		.loc 1 684 12 is_stmt 1 view .LVU424
 1310              	.LBB265:
 685:src/keys.c    **** }
 1311              		.loc 1 685 52 is_stmt 0 view .LVU425
 1312 0022 FFF7FEFF 		bl	int_base
 1313              	.LVL108:
 685:src/keys.c    **** }
 1314              		.loc 1 685 43 view .LVU426
 1315 0026 8442     		cmp	r4, r0
 1316 0028 ACBF     		ite	ge
 1317 002a 0020     		movge	r0, #0
 1318 002c 0120     		movlt	r0, #1
 1319              	.LBE265:
 1320              	.LBE264:
 686:src/keys.c    **** 
 1321              		.loc 1 686 1 view .LVU427
 1322 002e 10BD     		pop	{r4, pc}
 1323              	.LVL109:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 75


 1324              	.L139:
 686:src/keys.c    **** 
 1325              		.loc 1 686 1 view .LVU428
 1326              		.align	2
 1327              	.L138:
 1328 0030 00000000 		.word	main_ram
 1329 0034 00000000 		.word	StateWhileOn
 1330              		.cfi_endproc
 1331              	.LFE18:
 1333              		.section	.text.set_window,"ax",%progbits
 1334              		.align	1
 1335              		.p2align 2,,3
 1336              		.syntax unified
 1337              		.thumb
 1338              		.thumb_func
 1339              		.fpu fpv4-sp-d16
 1341              	set_window:
 1342              	.LVL110:
 1343              	.LFB53:
2555:src/keys.c    **** 
2556:src/keys.c    **** 
2557:src/keys.c    **** /*
2558:src/keys.c    ****  *  CAT command
2559:src/keys.c    ****  */
2560:src/keys.c    **** static int process_labellist(const keycode c) {
2561:src/keys.c    **** 	unsigned int pc = State2.digval;
2562:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
2563:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
2564:src/keys.c    **** 	const int opcode = getprog(pc);
2565:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
2566:src/keys.c    **** 	const int direct = State2.runmode;
2567:src/keys.c    **** 	const enum shifts shift = reset_shift();
2568:src/keys.c    **** 	int op = STATE_UNFINISHED;
2569:src/keys.c    **** 
2570:src/keys.c    **** 	if (n < REGION_XROM) {
2571:src/keys.c    **** 		// Digits take you to that segment
2572:src/keys.c    **** 		pc = addrLIB(1, n);
2573:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
2574:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
2575:src/keys.c    **** 		State2.digval = pc;
2576:src/keys.c    **** 		return STATE_UNFINISHED;
2577:src/keys.c    **** 	}
2578:src/keys.c    **** 
2579:src/keys.c    **** 	switch (c | (shift << 8)) {
2580:src/keys.c    **** 
2581:src/keys.c    **** 	case K_UP | (SHIFT_F << 8):		// Find first label of previous program
2582:src/keys.c    **** 		pc = advance_to_previous_label(advance_to_previous_label(pc, 1), 1);
2583:src/keys.c    **** 		goto next;
2584:src/keys.c    **** 
2585:src/keys.c    **** 	case K_DOWN | (SHIFT_F << 8):		// Find next program
2586:src/keys.c    **** 		pc = advance_to_next_label(pc, 0, 1);
2587:src/keys.c    **** 	case K_DOWN:				// Find next label
2588:src/keys.c    **** 	next:
2589:src/keys.c    **** 		State2.digval = advance_to_next_label(pc, 1, 0);
2590:src/keys.c    **** 		return STATE_UNFINISHED;
2591:src/keys.c    **** 
2592:src/keys.c    **** 	case K_UP:				// Find previous label
ARM GAS  /tmp/ccJ0w3QJ.s 			page 76


2593:src/keys.c    **** 		State2.digval = advance_to_previous_label(pc, 0);
2594:src/keys.c    **** 		return STATE_UNFINISHED;
2595:src/keys.c    **** 
2596:src/keys.c    **** 	case K24:				// <- exits
2597:src/keys.c    **** 		break;
2598:src/keys.c    **** 
2599:src/keys.c    **** 	case K20:				// ENTER^
2600:src/keys.c    **** 	set_pc_and_exit:
2601:src/keys.c    **** 		set_pc(pc);			// forced branch
2602:src/keys.c    **** 		break;
2603:src/keys.c    **** 
2604:src/keys.c    **** 	case K24 | (SHIFT_F << 8):		// CLP
2605:src/keys.c    **** 		op = (OP_NIL | OP_CLPROG);
2606:src/keys.c    **** 		goto set_pc_and_exit;
2607:src/keys.c    **** 
2608:src/keys.c    **** 	case K10:				// STO
2609:src/keys.c    **** 	case K11:				// RCL
2610:src/keys.c    **** #ifndef DM42	
2611:src/keys.c    **** 		op = c == K10 ? (OP_NIL | OP_PSTO) : (OP_NIL | OP_PRCL);
2612:src/keys.c    **** #endif
2613:src/keys.c    **** #ifdef DM42
2614:src/keys.c    **** 	        op = OP_NIL;
2615:src/keys.c    **** #endif	    
2616:src/keys.c    **** 	  goto set_pc_and_exit;
2617:src/keys.c    **** #ifdef DM42
2618:src/keys.c    **** 	case K05:				// XEQ
2619:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
2620:src/keys.c    **** 		goto xeq_or_gto;
2621:src/keys.c    **** 
2622:src/keys.c    **** 	case K05 | (SHIFT_F << 8):		// GTO
2623:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
2624:src/keys.c    **** 	xeq_or_gto:
2625:src/keys.c    **** 		if (label)
2626:src/keys.c    **** 			break;
2627:src/keys.c    **** 		return STATE_UNFINISHED;
2628:src/keys.c    **** #else
2629:src/keys.c    **** 	case K30:				// XEQ
2630:src/keys.c    **** 		op = (DBL_XEQ << DBL_SHIFT) + label;
2631:src/keys.c    **** 		goto xeq_or_gto;
2632:src/keys.c    **** 
2633:src/keys.c    **** 	case K30 | (SHIFT_H << 8):		// GTO
2634:src/keys.c    **** 		op = (DBL_GTO << DBL_SHIFT) + label;
2635:src/keys.c    **** 	xeq_or_gto:
2636:src/keys.c    **** 		if (label)
2637:src/keys.c    **** 			break;
2638:src/keys.c    **** 		return STATE_UNFINISHED;
2639:src/keys.c    **** #endif		
2640:src/keys.c    **** 	case K63:				// R/S
2641:src/keys.c    **** 		if (direct && label) {
2642:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
2643:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
2644:src/keys.c    **** 			break;
2645:src/keys.c    **** 		}
2646:src/keys.c    **** 		return STATE_UNFINISHED;
2647:src/keys.c    **** 
2648:src/keys.c    **** 	case K63 | (SHIFT_H << 8):		// P/R
2649:src/keys.c    **** 		State2.runmode = 0;		// switch to program mode
ARM GAS  /tmp/ccJ0w3QJ.s 			page 77


2650:src/keys.c    **** 		goto set_pc_and_exit;
2651:src/keys.c    **** 
2652:src/keys.c    **** 	default:
2653:src/keys.c    **** 		return STATE_UNFINISHED;
2654:src/keys.c    **** 	}
2655:src/keys.c    **** 	State2.digval = 0;
2656:src/keys.c    **** 	State2.labellist = 0;
2657:src/keys.c    **** 	return check_confirm(op);
2658:src/keys.c    **** }
2659:src/keys.c    **** 
2660:src/keys.c    **** 
2661:src/keys.c    **** static void set_window(int c) {
 1344              		.loc 1 2661 31 is_stmt 1 view -0
 1345              		.cfi_startproc
 1346              		@ args = 0, pretend = 0, frame = 0
 1347              		@ frame_needed = 0, uses_anonymous_args = 0
2662:src/keys.c    **** 
2663:src/keys.c    **** 	if (State2.runmode) {
 1348              		.loc 1 2663 2 view .LVU430
2661:src/keys.c    **** 
 1349              		.loc 1 2661 31 is_stmt 0 view .LVU431
 1350 0000 38B5     		push	{r3, r4, r5, lr}
 1351              		.cfi_def_cfa_offset 16
 1352              		.cfi_offset 3, -16
 1353              		.cfi_offset 4, -12
 1354              		.cfi_offset 5, -8
 1355              		.cfi_offset 14, -4
 1356              		.loc 1 2663 6 view .LVU432
 1357 0002 224C     		ldr	r4, .L155
 1358 0004 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 1359              		.loc 1 2663 5 view .LVU433
 1360 0006 5A06     		lsls	r2, r3, #25
 1361 0008 00D4     		bmi	.L152
 1362              	.LVL111:
 1363              	.L140:
2664:src/keys.c    **** 		process_cmdline_set_lift();
2665:src/keys.c    **** 		// Make sure IntMaxWindow is recalculated
2666:src/keys.c    **** 		State2.disp_freeze = 0;
2667:src/keys.c    **** 		display();	
2668:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
2669:src/keys.c    **** 			if (UState.intm) {
2670:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
2671:src/keys.c    **** 					State2.window--;
2672:src/keys.c    **** 				return;
2673:src/keys.c    **** 			}
2674:src/keys.c    **** 			else 
2675:src/keys.c    **** 				State2.window = is_dblmode();
2676:src/keys.c    **** 		}
2677:src/keys.c    **** 		else {
2678:src/keys.c    **** 			if (UState.intm) {
2679:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
2680:src/keys.c    **** 					State2.window++;
2681:src/keys.c    **** 				return;
2682:src/keys.c    **** 			}
2683:src/keys.c    **** 			else
2684:src/keys.c    **** 				State2.window = 0;
2685:src/keys.c    **** 		}
ARM GAS  /tmp/ccJ0w3QJ.s 			page 78


2686:src/keys.c    **** 		set_smode(SDISP_SHOW);
2687:src/keys.c    **** 	}
2688:src/keys.c    **** }
 1364              		.loc 1 2688 1 view .LVU434
 1365 000a 38BD     		pop	{r3, r4, r5, pc}
 1366              	.LVL112:
 1367              	.L152:
2664:src/keys.c    **** 		process_cmdline_set_lift();
 1368              		.loc 1 2664 3 is_stmt 1 view .LVU435
 1369 000c 0546     		mov	r5, r0
 1370 000e FFF7FEFF 		bl	process_cmdline_set_lift
 1371              	.LVL113:
2666:src/keys.c    **** 		display();	
 1372              		.loc 1 2666 3 view .LVU436
2666:src/keys.c    **** 		display();	
 1373              		.loc 1 2666 22 is_stmt 0 view .LVU437
 1374 0012 E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 1375 0014 6FF30413 		bfc	r3, #4, #1
 1376 0018 E375     		strb	r3, [r4, #23]
2667:src/keys.c    **** 		if (c == STATE_WINDOWRIGHT) {
 1377              		.loc 1 2667 3 is_stmt 1 view .LVU438
 1378 001a FFF7FEFF 		bl	display
 1379              	.LVL114:
2668:src/keys.c    **** 			if (UState.intm) {
 1380              		.loc 1 2668 3 view .LVU439
2669:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1381              		.loc 1 2669 8 is_stmt 0 view .LVU440
 1382 001e 1C4B     		ldr	r3, .L155+4
 1383 0020 1B68     		ldr	r3, [r3]
2668:src/keys.c    **** 			if (UState.intm) {
 1384              		.loc 1 2668 6 view .LVU441
 1385 0022 2C2D     		cmp	r5, #44
2669:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1386              		.loc 1 2669 8 view .LVU442
 1387 0024 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
2668:src/keys.c    **** 			if (UState.intm) {
 1388              		.loc 1 2668 6 view .LVU443
 1389 0028 18D0     		beq	.L153
2678:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 1390              		.loc 1 2678 4 is_stmt 1 view .LVU444
2678:src/keys.c    **** 				if (IntMaxWindow > (SMALL_INT) State2.window)
 1391              		.loc 1 2678 7 is_stmt 0 view .LVU445
 1392 002a 13F00103 		ands	r3, r3, #1
 1393 002e 09D1     		bne	.L154
2684:src/keys.c    **** 		}
 1394              		.loc 1 2684 5 is_stmt 1 view .LVU446
2684:src/keys.c    **** 		}
 1395              		.loc 1 2684 19 is_stmt 0 view .LVU447
 1396 0030 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 1397 0032 63F3C502 		bfi	r2, r3, #3, #3
 1398 0036 2275     		strb	r2, [r4, #20]
 1399              	.L146:
2686:src/keys.c    **** 	}
 1400              		.loc 1 2686 3 is_stmt 1 view .LVU448
 1401              	.LVL115:
 1402              	.LBB272:
 1403              	.LBI272:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 79


 664:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 1404              		.loc 1 664 13 view .LVU449
 1405              	.LBB273:
 665:src/keys.c    **** }
 1406              		.loc 1 665 2 view .LVU450
 665:src/keys.c    **** }
 1407              		.loc 1 665 15 is_stmt 0 view .LVU451
 1408 0038 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 1409 003a 013B     		subs	r3, r3, #1
 1410 003c 18BF     		it	ne
 1411 003e 0123     		movne	r3, #1
 1412 0040 6374     		strb	r3, [r4, #17]
 1413              	.LVL116:
 665:src/keys.c    **** }
 1414              		.loc 1 665 15 view .LVU452
 1415              	.LBE273:
 1416              	.LBE272:
 1417              		.loc 1 2688 1 view .LVU453
 1418 0042 38BD     		pop	{r3, r4, r5, pc}
 1419              	.LVL117:
 1420              	.L154:
2679:src/keys.c    **** 					State2.window++;
 1421              		.loc 1 2679 5 is_stmt 1 view .LVU454
2679:src/keys.c    **** 					State2.window++;
 1422              		.loc 1 2679 22 is_stmt 0 view .LVU455
 1423 0044 134A     		ldr	r2, .L155+8
2679:src/keys.c    **** 					State2.window++;
 1424              		.loc 1 2679 42 view .LVU456
 1425 0046 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
2679:src/keys.c    **** 					State2.window++;
 1426              		.loc 1 2679 8 view .LVU457
 1427 0048 1168     		ldr	r1, [r2]
2679:src/keys.c    **** 					State2.window++;
 1428              		.loc 1 2679 42 view .LVU458
 1429 004a C3F3C202 		ubfx	r2, r3, #3, #3
2679:src/keys.c    **** 					State2.window++;
 1430              		.loc 1 2679 8 view .LVU459
 1431 004e 8A42     		cmp	r2, r1
 1432 0050 DBDA     		bge	.L140
2680:src/keys.c    **** 				return;
 1433              		.loc 1 2680 6 is_stmt 1 view .LVU460
2680:src/keys.c    **** 				return;
 1434              		.loc 1 2680 19 is_stmt 0 view .LVU461
 1435 0052 0132     		adds	r2, r2, #1
 1436 0054 62F3C503 		bfi	r3, r2, #3, #3
 1437 0058 2375     		strb	r3, [r4, #20]
 1438              		.loc 1 2688 1 view .LVU462
 1439 005a 38BD     		pop	{r3, r4, r5, pc}
 1440              	.LVL118:
 1441              	.L153:
2669:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1442              		.loc 1 2669 4 is_stmt 1 view .LVU463
2669:src/keys.c    **** 				if (IntMaxWindow > 0 && State2.window > 0)
 1443              		.loc 1 2669 7 is_stmt 0 view .LVU464
 1444 005c DB07     		lsls	r3, r3, #31
 1445 005e 0ED5     		bpl	.L144
 1446              	.LBB274:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 80


 1447              	.LBI274:
2661:src/keys.c    **** 
 1448              		.loc 1 2661 13 is_stmt 1 view .LVU465
 1449              	.LVL119:
 1450              	.LBB275:
2670:src/keys.c    **** 					State2.window--;
 1451              		.loc 1 2670 5 view .LVU466
2670:src/keys.c    **** 					State2.window--;
 1452              		.loc 1 2670 22 is_stmt 0 view .LVU467
 1453 0060 0C4B     		ldr	r3, .L155+8
2670:src/keys.c    **** 					State2.window--;
 1454              		.loc 1 2670 8 view .LVU468
 1455 0062 1B68     		ldr	r3, [r3]
 1456 0064 002B     		cmp	r3, #0
 1457 0066 D0DD     		ble	.L140
2670:src/keys.c    **** 					State2.window--;
 1458              		.loc 1 2670 43 view .LVU469
 1459 0068 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
2670:src/keys.c    **** 					State2.window--;
 1460              		.loc 1 2670 26 view .LVU470
 1461 006a 13F0380F 		tst	r3, #56
 1462 006e CCD0     		beq	.L140
2671:src/keys.c    **** 				return;
 1463              		.loc 1 2671 6 is_stmt 1 view .LVU471
2671:src/keys.c    **** 				return;
 1464              		.loc 1 2671 12 is_stmt 0 view .LVU472
 1465 0070 C3F3C202 		ubfx	r2, r3, #3, #3
2671:src/keys.c    **** 				return;
 1466              		.loc 1 2671 19 view .LVU473
 1467 0074 0732     		adds	r2, r2, #7
 1468 0076 62F3C503 		bfi	r3, r2, #3, #3
 1469 007a 2375     		strb	r3, [r4, #20]
 1470              	.LBE275:
 1471              	.LBE274:
 1472              		.loc 1 2688 1 view .LVU474
 1473 007c 38BD     		pop	{r3, r4, r5, pc}
 1474              	.LVL120:
 1475              	.L144:
2675:src/keys.c    **** 		}
 1476              		.loc 1 2675 5 is_stmt 1 view .LVU475
2675:src/keys.c    **** 		}
 1477              		.loc 1 2675 21 is_stmt 0 view .LVU476
 1478 007e FFF7FEFF 		bl	is_dblmode
 1479              	.LVL121:
2675:src/keys.c    **** 		}
 1480              		.loc 1 2675 19 view .LVU477
 1481 0082 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 1482 0084 60F3C503 		bfi	r3, r0, #3, #3
 1483 0088 2375     		strb	r3, [r4, #20]
 1484 008a D5E7     		b	.L146
 1485              	.L156:
 1486              		.align	2
 1487              	.L155:
 1488 008c 00000000 		.word	StateWhileOn
 1489 0090 00000000 		.word	main_ram
 1490 0094 00000000 		.word	IntMaxWindow
 1491              		.cfi_endproc
ARM GAS  /tmp/ccJ0w3QJ.s 			page 81


 1492              	.LFE53:
 1494              		.section	.text.arg_storcl,"ax",%progbits
 1495              		.align	1
 1496              		.p2align 2,,3
 1497              		.syntax unified
 1498              		.thumb
 1499              		.thumb_func
 1500              		.fpu fpv4-sp-d16
 1502              	arg_storcl:
 1503              	.LVL122:
 1504              	.LFB34:
1618:src/keys.c    **** 	unsigned int b = CmdBase;
 1505              		.loc 1 1618 56 is_stmt 1 view -0
 1506              		.cfi_startproc
 1507              		@ args = 0, pretend = 0, frame = 0
 1508              		@ frame_needed = 0, uses_anonymous_args = 0
 1509              		@ link register save eliminated.
1619:src/keys.c    **** 
 1510              		.loc 1 1619 2 view .LVU479
1619:src/keys.c    **** 
 1511              		.loc 1 1619 19 is_stmt 0 view .LVU480
 1512 0000 0F4A     		ldr	r2, .L189
 1513 0002 D37F     		ldrb	r3, [r2, #31]	@ zero_extendqisi2
 1514              	.LVL123:
1621:src/keys.c    **** 		CmdBase += n;
 1515              		.loc 1 1621 2 is_stmt 1 view .LVU481
 1516              	.LBB284:
 1517              	.LBI284:
1609:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1518              		.loc 1 1609 12 view .LVU482
 1519              	.LBB285:
1614:src/keys.c    **** #endif
 1520              		.loc 1 1614 2 view .LVU483
1614:src/keys.c    **** #endif
 1521              		.loc 1 1614 41 is_stmt 0 view .LVU484
 1522 0004 032B     		cmp	r3, #3
 1523 0006 14D0     		beq	.L158
1614:src/keys.c    **** #endif
 1524              		.loc 1 1614 24 view .LVU485
 1525 0008 0A2B     		cmp	r3, #10
 1526 000a 12D0     		beq	.L158
 1527              	.LVL124:
 1528              	.LBB286:
 1529              	.LBI286:
1609:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1530              		.loc 1 1609 12 is_stmt 1 view .LVU486
 1531              	.LBB287:
1614:src/keys.c    **** #endif
 1532              		.loc 1 1614 41 is_stmt 0 view .LVU487
 1533 000c 19B1     		cbz	r1, .L159
1614:src/keys.c    **** #endif
 1534              		.loc 1 1614 51 view .LVU488
 1535 000e 152B     		cmp	r3, #21
 1536 0010 0FD0     		beq	.L158
1614:src/keys.c    **** #endif
 1537              		.loc 1 1614 70 view .LVU489
 1538 0012 1A2B     		cmp	r3, #26
ARM GAS  /tmp/ccJ0w3QJ.s 			page 82


 1539 0014 0DD0     		beq	.L158
 1540              	.L159:
 1541              	.LVL125:
1614:src/keys.c    **** #endif
 1542              		.loc 1 1614 70 view .LVU490
 1543              	.LBE287:
 1544              	.LBE286:
 1545              	.LBE285:
 1546              	.LBE284:
1626:src/keys.c    **** 		b -= n;
 1547              		.loc 1 1626 2 is_stmt 1 view .LVU491
1626:src/keys.c    **** 		b -= n;
 1548              		.loc 1 1626 5 is_stmt 0 view .LVU492
 1549 0016 8342     		cmp	r3, r0
 1550 0018 09D3     		bcc	.L164
1627:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 1551              		.loc 1 1627 3 is_stmt 1 view .LVU493
1627:src/keys.c    **** 		if (arg_storcl_check(b, cmplx)) {
 1552              		.loc 1 1627 5 is_stmt 0 view .LVU494
 1553 001a 1B1A     		subs	r3, r3, r0
 1554              	.LVL126:
1628:src/keys.c    **** 			CmdBase = b;
 1555              		.loc 1 1628 3 is_stmt 1 view .LVU495
 1556              	.LBB288:
 1557              	.LBI288:
1609:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1558              		.loc 1 1609 12 view .LVU496
 1559              	.LBB289:
1614:src/keys.c    **** #endif
 1560              		.loc 1 1614 2 view .LVU497
1614:src/keys.c    **** #endif
 1561              		.loc 1 1614 41 is_stmt 0 view .LVU498
 1562 001c 032B     		cmp	r3, #3
 1563 001e 0CD0     		beq	.L162
1614:src/keys.c    **** #endif
 1564              		.loc 1 1614 24 view .LVU499
 1565 0020 0A2B     		cmp	r3, #10
 1566 0022 0AD0     		beq	.L162
 1567              	.LVL127:
 1568              	.LBB290:
 1569              	.LBI290:
1609:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 1570              		.loc 1 1609 12 is_stmt 1 view .LVU500
 1571              	.LBB291:
1614:src/keys.c    **** #endif
 1572              		.loc 1 1614 41 is_stmt 0 view .LVU501
 1573 0024 19B1     		cbz	r1, .L164
1614:src/keys.c    **** #endif
 1574              		.loc 1 1614 51 view .LVU502
 1575 0026 152B     		cmp	r3, #21
 1576 0028 07D0     		beq	.L162
1614:src/keys.c    **** #endif
 1577              		.loc 1 1614 70 view .LVU503
 1578 002a 1A2B     		cmp	r3, #26
 1579 002c 05D0     		beq	.L162
 1580              	.LVL128:
 1581              	.L164:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 83


1614:src/keys.c    **** #endif
 1582              		.loc 1 1614 70 view .LVU504
 1583              	.LBE291:
 1584              	.LBE290:
 1585              	.LBE289:
 1586              	.LBE288:
1633:src/keys.c    **** }
 1587              		.loc 1 1633 9 view .LVU505
 1588 002e 0020     		movs	r0, #0
 1589              	.LVL129:
1634:src/keys.c    **** 
 1590              		.loc 1 1634 1 view .LVU506
 1591 0030 7047     		bx	lr
 1592              	.LVL130:
 1593              	.L158:
1622:src/keys.c    **** 		return 1;
 1594              		.loc 1 1622 3 is_stmt 1 view .LVU507
1622:src/keys.c    **** 		return 1;
 1595              		.loc 1 1622 11 is_stmt 0 view .LVU508
 1596 0032 1844     		add	r0, r0, r3
 1597              	.LVL131:
1622:src/keys.c    **** 		return 1;
 1598              		.loc 1 1622 11 view .LVU509
 1599 0034 D077     		strb	r0, [r2, #31]
1623:src/keys.c    **** 	}
 1600              		.loc 1 1623 3 is_stmt 1 view .LVU510
1623:src/keys.c    **** 	}
 1601              		.loc 1 1623 10 is_stmt 0 view .LVU511
 1602 0036 0120     		movs	r0, #1
 1603 0038 7047     		bx	lr
 1604              	.LVL132:
 1605              	.L162:
1629:src/keys.c    **** 			return 1;
 1606              		.loc 1 1629 4 is_stmt 1 view .LVU512
1629:src/keys.c    **** 			return 1;
 1607              		.loc 1 1629 12 is_stmt 0 view .LVU513
 1608 003a D377     		strb	r3, [r2, #31]
1630:src/keys.c    **** 		}
 1609              		.loc 1 1630 4 is_stmt 1 view .LVU514
1630:src/keys.c    **** 		}
 1610              		.loc 1 1630 11 is_stmt 0 view .LVU515
 1611 003c 0120     		movs	r0, #1
 1612              	.LVL133:
1630:src/keys.c    **** 		}
 1613              		.loc 1 1630 11 view .LVU516
 1614 003e 7047     		bx	lr
 1615              	.L190:
 1616              		.align	2
 1617              	.L189:
 1618 0040 00000000 		.word	StateWhileOn
 1619              		.cfi_endproc
 1620              	.LFE34:
 1622              		.section	.text.process_arg,"ax",%progbits
 1623              		.align	1
 1624              		.p2align 2,,3
 1625              		.syntax unified
 1626              		.thumb
ARM GAS  /tmp/ccJ0w3QJ.s 			page 84


 1627              		.thumb_func
 1628              		.fpu fpv4-sp-d16
 1630              	process_arg:
 1631              	.LVL134:
 1632              	.LFB37:
1668:src/keys.c    **** 	unsigned int base = CmdBase;
 1633              		.loc 1 1668 41 is_stmt 1 view -0
 1634              		.cfi_startproc
 1635              		@ args = 0, pretend = 0, frame = 8
 1636              		@ frame_needed = 0, uses_anonymous_args = 0
1669:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1637              		.loc 1 1669 2 view .LVU518
1668:src/keys.c    **** 	unsigned int base = CmdBase;
 1638              		.loc 1 1668 41 is_stmt 0 view .LVU519
 1639 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1640              		.cfi_def_cfa_offset 36
 1641              		.cfi_offset 4, -36
 1642              		.cfi_offset 5, -32
 1643              		.cfi_offset 6, -28
 1644              		.cfi_offset 7, -24
 1645              		.cfi_offset 8, -20
 1646              		.cfi_offset 9, -16
 1647              		.cfi_offset 10, -12
 1648              		.cfi_offset 11, -8
 1649              		.cfi_offset 14, -4
1669:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1650              		.loc 1 1669 22 view .LVU520
 1651 0004 AC4C     		ldr	r4, .L306
1671:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1652              		.loc 1 1671 31 view .LVU521
 1653 0006 DFF8C0B2 		ldr	fp, .L306+16
1669:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c);
 1654              		.loc 1 1669 22 view .LVU522
 1655 000a E77F     		ldrb	r7, [r4, #31]	@ zero_extendqisi2
 1656              	.LVL135:
1670:src/keys.c    **** 	int stack_reg = argcmds[base].stckreg || State2.ind;
 1657              		.loc 1 1670 2 is_stmt 1 view .LVU523
 1658              	.LBB313:
 1659              	.LBB314:
 1660              	.LBB315:
 1661              	.LBB316:
 136:src/keys.c    **** }
 1662              		.loc 1 136 23 is_stmt 0 view .LVU524
 1663 000c AB4B     		ldr	r3, .L306+4
 1664              	.LBE316:
 1665              	.LBE315:
 231:src/keys.c    **** }
 1666              		.loc 1 231 28 view .LVU525
 1667 000e AC4A     		ldr	r2, .L306+8
 1668              	.LBB319:
 1669              	.LBB317:
 136:src/keys.c    **** }
 1670              		.loc 1 136 23 view .LVU526
 1671 0010 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 1672              	.LBE317:
 1673              	.LBE319:
 1674              	.LBE314:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 85


 1675              	.LBE313:
1671:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1676              		.loc 1 1671 31 view .LVU527
 1677 0012 0BEB0711 		add	r1, fp, r7, lsl #4
1668:src/keys.c    **** 	unsigned int base = CmdBase;
 1678              		.loc 1 1668 41 view .LVU528
 1679 0016 83B0     		sub	sp, sp, #12
 1680              		.cfi_def_cfa_offset 48
1671:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1681              		.loc 1 1671 31 view .LVU529
 1682 0018 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 1683              	.LBB323:
 1684              	.LBB321:
 231:src/keys.c    **** }
 1685              		.loc 1 231 28 view .LVU530
 1686 001a 12F80390 		ldrb	r9, [r2, r3]	@ zero_extendqisi2
 1687              	.LBE321:
 1688              	.LBE323:
1671:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1689              		.loc 1 1671 31 view .LVU531
 1690 001e C1F38003 		ubfx	r3, r1, #2, #1
 1691 0022 0193     		str	r3, [sp, #4]
1671:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1692              		.loc 1 1671 40 view .LVU532
 1693 0024 4B07     		lsls	r3, r1, #29
 1694 0026 58BF     		it	pl
 1695 0028 94F91580 		ldrsbpl	r8, [r4, #21]
1672:src/keys.c    **** 	const enum shifts shift = reset_shift();
 1696              		.loc 1 1672 20 view .LVU533
 1697 002c 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 1698 002e 0093     		str	r3, [sp]
1671:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1699              		.loc 1 1671 40 view .LVU534
 1700 0030 54BF     		ite	pl
 1701 0032 4FEAD878 		lsrpl	r8, r8, #31
 1702 0036 4FF00108 		movmi	r8, #1
1668:src/keys.c    **** 	unsigned int base = CmdBase;
 1703              		.loc 1 1668 41 view .LVU535
 1704 003a 0646     		mov	r6, r0
 1705              	.LVL136:
 1706              	.LBB324:
 1707              	.LBI313:
 208:src/keys.c    **** {
 1708              		.loc 1 208 14 is_stmt 1 view .LVU536
 1709              	.LBB322:
 210:src/keys.c    ****     // K00 - K05
 1710              		.loc 1 210 3 view .LVU537
 231:src/keys.c    **** }
 1711              		.loc 1 231 3 view .LVU538
 1712              	.LBB320:
 1713              	.LBI315:
 124:src/keys.c    **** {
 1714              		.loc 1 124 12 view .LVU539
 1715              	.LBB318:
 126:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 1716              		.loc 1 126 2 view .LVU540
 136:src/keys.c    **** }
ARM GAS  /tmp/ccJ0w3QJ.s 			page 86


 1717              		.loc 1 136 2 view .LVU541
 136:src/keys.c    **** }
 1718              		.loc 1 136 2 is_stmt 0 view .LVU542
 1719              	.LBE318:
 1720              	.LBE320:
 231:src/keys.c    **** }
 1721              		.loc 1 231 10 view .LVU543
 1722 003c 4D46     		mov	r5, r9
 1723              	.LVL137:
 231:src/keys.c    **** }
 1724              		.loc 1 231 10 view .LVU544
 1725              	.LBE322:
 1726              	.LBE324:
1671:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1727              		.loc 1 1671 2 is_stmt 1 view .LVU545
1672:src/keys.c    **** 	const enum shifts shift = reset_shift();
 1728              		.loc 1 1672 2 view .LVU546
1673:src/keys.c    **** 	int label_addressing = argcmds[base].label && ! State2.ind && ! State2.dot;
 1729              		.loc 1 1673 2 view .LVU547
 1730              	.LBB325:
 1731              	.LBI325:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 1732              		.loc 1 102 13 view .LVU548
 1733              	.LBE325:
 103:src/keys.c    **** }
 1734              		.loc 1 103 2 view .LVU549
 1735              	.LBB340:
 1736              	.LBB326:
 1737              	.LBI326:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 1738              		.loc 1 92 20 view .LVU550
 1739              	.LBB327:
  93:src/keys.c    **** 	State2.shifts = shift;
 1740              		.loc 1 93 2 view .LVU551
 1741              	.LBB328:
 1742              	.LBI328:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 1743              		.loc 1 84 13 view .LVU552
 1744              	.LBB329:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1745              		.loc 1 85 2 view .LVU553
 1746              	.LBE329:
 1747              	.LBE328:
 1748              	.LBE327:
 1749              	.LBE326:
 1750              	.LBE340:
1671:src/keys.c    **** 	const enum shifts previous_shift = (enum shifts) State2.shifts;
 1751              		.loc 1 1671 31 is_stmt 0 view .LVU554
 1752 003e 4FEA071A 		lsl	r10, r7, #4
 1753              	.LBB341:
 1754              	.LBB336:
 1755              	.LBB332:
 1756              	.LBB331:
 1757              	.LBB330:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 1758              		.loc 1 85 18 view .LVU555
 1759 0042 FFF7FEFF 		bl	shift_down
ARM GAS  /tmp/ccJ0w3QJ.s 			page 87


 1760              	.LVL138:
  86:src/keys.c    **** }
 1761              		.loc 1 86 2 is_stmt 1 view .LVU556
  86:src/keys.c    **** }
 1762              		.loc 1 86 52 is_stmt 0 view .LVU557
 1763 0046 00B9     		cbnz	r0, .L193
 1764 0048 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
 1765              	.LVL139:
 1766              	.L193:
  86:src/keys.c    **** }
 1767              		.loc 1 86 52 view .LVU558
 1768              	.LBE330:
 1769              	.LBE331:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 1770              		.loc 1 94 2 is_stmt 1 view .LVU559
 1771              	.LBE332:
 1772              	.LBE336:
 1773              	.LBE341:
1674:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1774              		.loc 1 1674 38 is_stmt 0 view .LVU560
 1775 004a 0BEB0A01 		add	r1, fp, r10
 1776              	.LBB342:
 1777              	.LBB337:
 1778              	.LBB333:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 1779              		.loc 1 94 16 view .LVU561
 1780 004e 4FF0000C 		mov	ip, #0
 1781              	.LBE333:
 1782              	.LBE337:
 1783              	.LBE342:
1674:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1784              		.loc 1 1674 38 view .LVU562
 1785 0052 91F805E0 		ldrb	lr, [r1, #5]	@ zero_extendqisi2
 1786              	.LBB343:
 1787              	.LBB338:
 1788              	.LBB334:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 1789              		.loc 1 94 16 view .LVU563
 1790 0056 84F810C0 		strb	ip, [r4, #16]
  95:src/keys.c    **** 	return r;
 1791              		.loc 1 95 2 is_stmt 1 view .LVU564
 1792              	.LBE334:
 1793              	.LBE338:
 1794              	.LBE343:
1674:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1795              		.loc 1 1674 61 is_stmt 0 view .LVU565
 1796 005a 1EF0200F 		tst	lr, #32
1674:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1797              		.loc 1 1674 38 view .LVU566
 1798 005e CEF34011 		ubfx	r1, lr, #5, #1
 1799              	.LBB344:
 1800              	.LBB339:
 1801              	.LBB335:
  95:src/keys.c    **** 	return r;
 1802              		.loc 1 95 19 view .LVU567
 1803 0062 84F80DC0 		strb	ip, [r4, #13]
  96:src/keys.c    **** }
ARM GAS  /tmp/ccJ0w3QJ.s 			page 88


 1804              		.loc 1 96 2 is_stmt 1 view .LVU568
 1805              	.LVL140:
  96:src/keys.c    **** }
 1806              		.loc 1 96 2 is_stmt 0 view .LVU569
 1807              	.LBE335:
 1808              	.LBE339:
 1809              	.LBE344:
1674:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1810              		.loc 1 1674 2 is_stmt 1 view .LVU570
1674:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1811              		.loc 1 1674 61 is_stmt 0 view .LVU571
 1812 0066 47D0     		beq	.L194
1674:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1813              		.loc 1 1674 61 discriminator 1 view .LVU572
 1814 0068 94F815E0 		ldrb	lr, [r4, #21]	@ zero_extendqisi2
 1815 006c 1EF0C00F 		tst	lr, #192
 1816 0070 57D1     		bne	.L195
 1817              	.LVL141:
1675:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 1818              		.loc 1 1675 2 is_stmt 1 view .LVU573
1675:src/keys.c    **** 		        && (shift == SHIFT_F || (n > 9 && !(n & NO_SHORT)));
 1819              		.loc 1 1675 35 is_stmt 0 view .LVU574
 1820 0072 292E     		cmp	r6, #41
 1821 0074 7DD0     		beq	.L196
1676:src/keys.c    **** 
 1822              		.loc 1 1676 11 view .LVU575
 1823 0076 0128     		cmp	r0, #1
 1824 0078 00F09280 		beq	.L197
1676:src/keys.c    **** 
 1825              		.loc 1 1676 32 discriminator 3 view .LVU576
 1826 007c B9F1090F 		cmp	r9, #9
 1827 0080 00F28B80 		bhi	.L198
 1828              	.LVL142:
1678:src/keys.c    **** 	if (base >= NUM_RARG) {
 1829              		.loc 1 1678 2 is_stmt 1 view .LVU577
1679:src/keys.c    **** 		reset_arg();
 1830              		.loc 1 1679 2 view .LVU578
1679:src/keys.c    **** 		reset_arg();
 1831              		.loc 1 1679 5 is_stmt 0 view .LVU579
 1832 0084 9B2F     		cmp	r7, #155
 1833 0086 50D8     		bhi	.L255
1684:src/keys.c    **** 	  switch (n) {
 1834              		.loc 1 1684 35 view .LVU580
 1835 0088 6069     		ldr	r0, [r4, #20]
 1836              	.LVL143:
1684:src/keys.c    **** 	  switch (n) {
 1837              		.loc 1 1684 35 view .LVU581
 1838 008a 10F4103F 		tst	r0, #147456
1674:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1839              		.loc 1 1674 61 view .LVU582
 1840 008e 4FF0010C 		mov	ip, #1
1684:src/keys.c    **** 	  switch (n) {
 1841              		.loc 1 1684 35 view .LVU583
 1842 0092 7BD0     		beq	.L259
 1843              	.LVL144:
 1844              	.L206:
1707:src/keys.c    **** 		// row column shorthand addressing
ARM GAS  /tmp/ccJ0w3QJ.s 			page 89


 1845              		.loc 1 1707 2 is_stmt 1 view .LVU584
1732:src/keys.c    **** 	case K_F:
 1846              		.loc 1 1732 2 view .LVU585
 1847 0094 2D2E     		cmp	r6, #45
 1848 0096 4AD8     		bhi	.L293
 1849 0098 DFE816F0 		tbh	[pc, r6, lsl #1]
 1850              	.L257:
 1851 009c 4D00     		.2byte	(.L221-.L257)/2
 1852 009e 4D00     		.2byte	(.L221-.L257)/2
 1853 00a0 4D00     		.2byte	(.L221-.L257)/2
 1854 00a2 4D00     		.2byte	(.L221-.L257)/2
 1855 00a4 4900     		.2byte	(.L293-.L257)/2
 1856 00a6 4900     		.2byte	(.L293-.L257)/2
 1857 00a8 4900     		.2byte	(.L293-.L257)/2
 1858 00aa 4900     		.2byte	(.L293-.L257)/2
 1859 00ac 4D00     		.2byte	(.L221-.L257)/2
 1860 00ae 4D00     		.2byte	(.L221-.L257)/2
 1861 00b0 4D00     		.2byte	(.L221-.L257)/2
 1862 00b2 4D00     		.2byte	(.L221-.L257)/2
 1863 00b4 D700     		.2byte	(.L244-.L257)/2
 1864 00b6 4900     		.2byte	(.L293-.L257)/2
 1865 00b8 4900     		.2byte	(.L293-.L257)/2
 1866 00ba 4900     		.2byte	(.L293-.L257)/2
 1867 00bc 6901     		.2byte	(.L251-.L257)/2
 1868 00be 4900     		.2byte	(.L293-.L257)/2
 1869 00c0 DD00     		.2byte	(.L242-.L257)/2
 1870 00c2 4900     		.2byte	(.L293-.L257)/2
 1871 00c4 4900     		.2byte	(.L293-.L257)/2
 1872 00c6 4900     		.2byte	(.L293-.L257)/2
 1873 00c8 6301     		.2byte	(.L241-.L257)/2
 1874 00ca 4900     		.2byte	(.L293-.L257)/2
 1875 00cc 5701     		.2byte	(.L243-.L257)/2
 1876 00ce 5D01     		.2byte	(.L220-.L257)/2
 1877 00d0 4900     		.2byte	(.L293-.L257)/2
 1878 00d2 4900     		.2byte	(.L293-.L257)/2
 1879 00d4 9800     		.2byte	(.L238-.L257)/2
 1880 00d6 4900     		.2byte	(.L293-.L257)/2
 1881 00d8 4900     		.2byte	(.L293-.L257)/2
 1882 00da 4101     		.2byte	(.L222-.L257)/2
 1883 00dc 4B01     		.2byte	(.L223-.L257)/2
 1884 00de 5101     		.2byte	(.L224-.L257)/2
 1885 00e0 E300     		.2byte	(.L235-.L257)/2
 1886 00e2 4900     		.2byte	(.L293-.L257)/2
 1887 00e4 4700     		.2byte	(.L255-.L257)/2
 1888 00e6 4900     		.2byte	(.L293-.L257)/2
 1889 00e8 EF00     		.2byte	(.L228-.L257)/2
 1890 00ea 4900     		.2byte	(.L293-.L257)/2
 1891 00ec 1801     		.2byte	(.L232-.L257)/2
 1892 00ee B000     		.2byte	(.L214-.L257)/2
 1893 00f0 4900     		.2byte	(.L293-.L257)/2
 1894 00f2 4900     		.2byte	(.L293-.L257)/2
 1895 00f4 2701     		.2byte	(.L216-.L257)/2
 1896 00f6 C800     		.2byte	(.L218-.L257)/2
 1897              	.LVL145:
 1898              		.p2align 1
 1899              	.L194:
1678:src/keys.c    **** 	if (base >= NUM_RARG) {
ARM GAS  /tmp/ccJ0w3QJ.s 			page 90


 1900              		.loc 1 1678 2 view .LVU586
1679:src/keys.c    **** 		reset_arg();
 1901              		.loc 1 1679 5 is_stmt 0 view .LVU587
 1902 00f8 9B2F     		cmp	r7, #155
1678:src/keys.c    **** 	if (base >= NUM_RARG) {
 1903              		.loc 1 1678 4 view .LVU588
 1904 00fa 29F08005 		bic	r5, r9, #128
 1905              	.LVL146:
1679:src/keys.c    **** 		reset_arg();
 1906              		.loc 1 1679 2 is_stmt 1 view .LVU589
1679:src/keys.c    **** 		reset_arg();
 1907              		.loc 1 1679 5 is_stmt 0 view .LVU590
 1908 00fe 14D8     		bhi	.L255
1674:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 1909              		.loc 1 1674 61 view .LVU591
 1910 0100 8C46     		mov	ip, r1
 1911              	.L203:
1684:src/keys.c    **** 	  switch (n) {
 1912              		.loc 1 1684 35 discriminator 1 view .LVU592
 1913 0102 6069     		ldr	r0, [r4, #20]
 1914              	.LVL147:
1684:src/keys.c    **** 	  switch (n) {
 1915              		.loc 1 1684 35 discriminator 1 view .LVU593
 1916 0104 10F4103F 		tst	r0, #147456
 1917 0108 C4D1     		bne	.L206
1685:src/keys.c    **** 	  case regX_idx:
 1918              		.loc 1 1685 4 is_stmt 1 view .LVU594
 1919 010a 672D     		cmp	r5, #103
 1920 010c C2D8     		bhi	.L206
 1921              	.LVL148:
 1922              	.L258:
1685:src/keys.c    **** 	  case regX_idx:
 1923              		.loc 1 1685 4 is_stmt 0 view .LVU595
 1924 010e 632D     		cmp	r5, #99
 1925 0110 3CD9     		bls	.L259
 1926 0112 653D     		subs	r5, r5, #101
 1927 0114 022D     		cmp	r5, #2
 1928 0116 00F2AA81 		bhi	.L209
 1929 011a DFE805F0 		tbb	[pc, r5]
 1930              	.L211:
 1931 011e 6B       		.byte	(.L213-.L211)/2
 1932 011f 65       		.byte	(.L212-.L211)/2
 1933 0120 6D       		.byte	(.L210-.L211)/2
 1934              	.LVL149:
 1935 0121 00       		.p2align 1
 1936              	.L195:
1678:src/keys.c    **** 	if (base >= NUM_RARG) {
 1937              		.loc 1 1678 2 is_stmt 1 view .LVU596
1679:src/keys.c    **** 		reset_arg();
 1938              		.loc 1 1679 5 is_stmt 0 view .LVU597
 1939 0122 9B2F     		cmp	r7, #155
1678:src/keys.c    **** 	if (base >= NUM_RARG) {
 1940              		.loc 1 1678 4 view .LVU598
 1941 0124 29F08005 		bic	r5, r9, #128
 1942              	.LVL150:
1679:src/keys.c    **** 		reset_arg();
 1943              		.loc 1 1679 2 is_stmt 1 view .LVU599
ARM GAS  /tmp/ccJ0w3QJ.s 			page 91


1679:src/keys.c    **** 		reset_arg();
 1944              		.loc 1 1679 5 is_stmt 0 view .LVU600
 1945 0128 EBD9     		bls	.L203
 1946              	.LVL151:
 1947              	.L255:
1899:src/keys.c    **** 	default:
 1948              		.loc 1 1899 3 is_stmt 1 view .LVU601
 1949 012a FFF7FEFF 		bl	reset_arg
 1950              	.LVL152:
 1951              	.L293:
1903:src/keys.c    **** }
 1952              		.loc 1 1903 9 is_stmt 0 view .LVU602
 1953 012e 3320     		movs	r0, #51
 1954              	.L191:
1904:src/keys.c    **** 
 1955              		.loc 1 1904 1 view .LVU603
 1956 0130 03B0     		add	sp, sp, #12
 1957              		.cfi_remember_state
 1958              		.cfi_def_cfa_offset 36
 1959              	.LVL153:
1904:src/keys.c    **** 
 1960              		.loc 1 1904 1 view .LVU604
 1961              		@ sp needed
 1962 0132 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1963              	.LVL154:
 1964              	.L221:
 1965              		.cfi_restore_state
1787:src/keys.c    **** 			return arg_eval(n);
 1966              		.loc 1 1787 4 is_stmt 1 view .LVU605
1787:src/keys.c    **** 			return arg_eval(n);
 1967              		.loc 1 1787 8 is_stmt 0 view .LVU606
 1968 0136 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1787:src/keys.c    **** 			return arg_eval(n);
 1969              		.loc 1 1787 7 view .LVU607
 1970 0138 5F06     		lsls	r7, r3, #25
 1971              	.LVL155:
1787:src/keys.c    **** 			return arg_eval(n);
 1972              		.loc 1 1787 7 view .LVU608
 1973 013a 53D4     		bmi	.L240
1787:src/keys.c    **** 			return arg_eval(n);
 1974              		.loc 1 1787 19 discriminator 1 view .LVU609
 1975 013c B8F1000F 		cmp	r8, #0
 1976 0140 50D1     		bne	.L240
1789:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 1977              		.loc 1 1789 3 is_stmt 1 view .LVU610
1789:src/keys.c    **** 			return arg_fkey(c - K00);		// Labels or flags A to D
 1978              		.loc 1 1789 6 is_stmt 0 view .LVU611
 1979 0142 032E     		cmp	r6, #3
 1980 0144 F3D8     		bhi	.L293
1790:src/keys.c    **** 		break;
 1981              		.loc 1 1790 4 is_stmt 1 view .LVU612
 1982              	.LVL156:
 1983              	.LBB345:
 1984              	.LBI345:
1595:src/keys.c    **** 	const unsigned int b = CmdBase;
 1985              		.loc 1 1595 12 view .LVU613
 1986              	.LBB346:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 92


1596:src/keys.c    **** 
 1987              		.loc 1 1596 2 view .LVU614
1596:src/keys.c    **** 
 1988              		.loc 1 1596 21 is_stmt 0 view .LVU615
 1989 0146 E27F     		ldrb	r2, [r4, #31]	@ zero_extendqisi2
 1990              	.LVL157:
1598:src/keys.c    **** 	{
 1991              		.loc 1 1598 2 is_stmt 1 view .LVU616
1598:src/keys.c    **** 	{
 1992              		.loc 1 1598 16 is_stmt 0 view .LVU617
 1993 0148 0BEB0210 		add	r0, fp, r2, lsl #4
 1994 014c 1101     		lsls	r1, r2, #4
 1995 014e 4079     		ldrb	r0, [r0, #5]	@ zero_extendqisi2
1598:src/keys.c    **** 	{
 1996              		.loc 1 1598 5 view .LVU618
 1997 0150 8006     		lsls	r0, r0, #26
 1998 0152 02D4     		bmi	.L227
1598:src/keys.c    **** 	{
 1999              		.loc 1 1598 40 view .LVU619
 2000 0154 513A     		subs	r2, r2, #81
 2001              	.LVL158:
1598:src/keys.c    **** 	{
 2002              		.loc 1 1598 23 view .LVU620
 2003 0156 0A2A     		cmp	r2, #10
 2004 0158 E9D8     		bhi	.L293
 2005              	.LVL159:
 2006              	.L227:
1600:src/keys.c    **** 			return STATE_UNFINISHED;
 2007              		.loc 1 1600 3 is_stmt 1 view .LVU621
1600:src/keys.c    **** 			return STATE_UNFINISHED;
 2008              		.loc 1 1600 6 is_stmt 0 view .LVU622
 2009 015a 1F06     		lsls	r7, r3, #24
 2010 015c E7D4     		bmi	.L293
1600:src/keys.c    **** 			return STATE_UNFINISHED;
 2011              		.loc 1 1600 18 view .LVU623
 2012 015e E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 2013 0160 002B     		cmp	r3, #0
 2014 0162 E4D1     		bne	.L293
1602:src/keys.c    **** 			return STATE_UNFINISHED;
 2015              		.loc 1 1602 3 is_stmt 1 view .LVU624
1602:src/keys.c    **** 			return STATE_UNFINISHED;
 2016              		.loc 1 1602 17 is_stmt 0 view .LVU625
 2017 0164 5944     		add	r1, r1, fp
1602:src/keys.c    **** 			return STATE_UNFINISHED;
 2018              		.loc 1 1602 6 view .LVU626
 2019 0166 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 2020 0168 632B     		cmp	r3, #99
 2021 016a E0D9     		bls	.L293
1604:src/keys.c    **** 	}
 2022              		.loc 1 1604 3 is_stmt 1 view .LVU627
1604:src/keys.c    **** 	}
 2023              		.loc 1 1604 10 is_stmt 0 view .LVU628
 2024 016c 06F16400 		add	r0, r6, #100
 2025 0170 27E0     		b	.L295
 2026              	.LVL160:
 2027              	.L196:
1604:src/keys.c    **** 	}
ARM GAS  /tmp/ccJ0w3QJ.s 			page 93


 2028              		.loc 1 1604 10 view .LVU629
 2029              	.LBE346:
 2030              	.LBE345:
1678:src/keys.c    **** 	if (base >= NUM_RARG) {
 2031              		.loc 1 1678 2 is_stmt 1 view .LVU630
1679:src/keys.c    **** 		reset_arg();
 2032              		.loc 1 1679 2 view .LVU631
1679:src/keys.c    **** 		reset_arg();
 2033              		.loc 1 1679 5 is_stmt 0 view .LVU632
 2034 0172 9B2F     		cmp	r7, #155
 2035 0174 D9D8     		bhi	.L255
1684:src/keys.c    **** 	  switch (n) {
 2036              		.loc 1 1684 35 view .LVU633
 2037 0176 6069     		ldr	r0, [r4, #20]
 2038              	.LVL161:
1684:src/keys.c    **** 	  switch (n) {
 2039              		.loc 1 1684 35 view .LVU634
 2040 0178 10F4103F 		tst	r0, #147456
 2041 017c 41D1     		bne	.L215
1678:src/keys.c    **** 	if (base >= NUM_RARG) {
 2042              		.loc 1 1678 4 view .LVU635
 2043 017e 29F08005 		bic	r5, r9, #128
1685:src/keys.c    **** 	  case regX_idx:
 2044              		.loc 1 1685 4 is_stmt 1 view .LVU636
 2045 0182 672D     		cmp	r5, #103
 2046 0184 3DD8     		bhi	.L215
1674:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2047              		.loc 1 1674 61 is_stmt 0 view .LVU637
 2048 0186 4FF0010C 		mov	ip, #1
 2049 018a C0E7     		b	.L258
 2050              	.LVL162:
 2051              	.L259:
1685:src/keys.c    **** 	  case regX_idx:
 2052              		.loc 1 1685 4 view .LVU638
 2053 018c 1DB1     		cbz	r5, .L208
 2054 018e 6B1F     		subs	r3, r5, #5
 2055 0190 042B     		cmp	r3, #4
 2056 0192 3FF67FAF 		bhi	.L206
 2057              	.L208:
1700:src/keys.c    **** 	  }
 2058              		.loc 1 1700 6 is_stmt 1 view .LVU639
1700:src/keys.c    **** 	  }
 2059              		.loc 1 1700 13 is_stmt 0 view .LVU640
 2060 0196 2846     		mov	r0, r5
 2061 0198 27E0     		b	.L294
 2062              	.LVL163:
 2063              	.L198:
1676:src/keys.c    **** 
 2064              		.loc 1 1676 42 discriminator 4 view .LVU641
 2065 019a 19F0800F 		tst	r9, #128
 2066 019e 3ED1     		bne	.L201
 2067              	.L197:
 2068              	.LVL164:
1678:src/keys.c    **** 	if (base >= NUM_RARG) {
 2069              		.loc 1 1678 2 is_stmt 1 view .LVU642
1679:src/keys.c    **** 		reset_arg();
 2070              		.loc 1 1679 2 view .LVU643
ARM GAS  /tmp/ccJ0w3QJ.s 			page 94


1679:src/keys.c    **** 		reset_arg();
 2071              		.loc 1 1679 5 is_stmt 0 view .LVU644
 2072 01a0 9B2F     		cmp	r7, #155
 2073 01a2 C2D8     		bhi	.L255
1707:src/keys.c    **** 		// row column shorthand addressing
 2074              		.loc 1 1707 2 is_stmt 1 view .LVU645
1709:src/keys.c    **** 
 2075              		.loc 1 1709 3 view .LVU646
 2076              	.LVL165:
 2077              	.LBB347:
 2078              	.LBI347:
 176:src/keys.c    **** {
 2079              		.loc 1 176 5 view .LVU647
 2080              	.LBB348:
 178:src/keys.c    **** }
 2081              		.loc 1 178 2 view .LVU648
 178:src/keys.c    **** }
 2082              		.loc 1 178 18 is_stmt 0 view .LVU649
 2083 01a4 474B     		ldr	r3, .L306+12
 2084 01a6 A3FB0623 		umull	r2, r3, r3, r6
 178:src/keys.c    **** }
 2085              		.loc 1 178 24 view .LVU650
 2086 01aa 03F0FC00 		and	r0, r3, #252
 2087              	.LVL166:
 178:src/keys.c    **** }
 2088              		.loc 1 178 24 view .LVU651
 2089 01ae 00EB9300 		add	r0, r0, r3, lsr #2
 178:src/keys.c    **** }
 2090              		.loc 1 178 18 view .LVU652
 2091 01b2 9B08     		lsrs	r3, r3, #2
 178:src/keys.c    **** }
 2092              		.loc 1 178 24 view .LVU653
 2093 01b4 4000     		lsls	r0, r0, #1
 178:src/keys.c    **** }
 2094              		.loc 1 178 33 view .LVU654
 2095 01b6 03EB4303 		add	r3, r3, r3, lsl #1
 178:src/keys.c    **** }
 2096              		.loc 1 178 12 view .LVU655
 2097 01ba 0B30     		adds	r0, r0, #11
 178:src/keys.c    **** }
 2098              		.loc 1 178 33 view .LVU656
 2099 01bc A6EB4306 		sub	r6, r6, r3, lsl #1
 2100              	.LBE348:
 2101              	.LBE347:
1709:src/keys.c    **** 
 2102              		.loc 1 1709 10 view .LVU657
 2103 01c0 3044     		add	r0, r0, r6
 2104              	.LVL167:
 2105              	.L295:
1904:src/keys.c    **** 
 2106              		.loc 1 1904 1 view .LVU658
 2107 01c2 03B0     		add	sp, sp, #12
 2108              		.cfi_remember_state
 2109              		.cfi_def_cfa_offset 36
 2110              	.LVL168:
1904:src/keys.c    **** 
 2111              		.loc 1 1904 1 view .LVU659
ARM GAS  /tmp/ccJ0w3QJ.s 			page 95


 2112              		@ sp needed
 2113 01c4 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2114              		.cfi_restore 14
 2115              		.cfi_restore 11
 2116              		.cfi_restore 10
 2117              		.cfi_restore 9
 2118              		.cfi_restore 8
 2119              		.cfi_restore 7
 2120              		.cfi_restore 6
 2121              		.cfi_restore 5
 2122              		.cfi_restore 4
 2123              		.cfi_def_cfa_offset 0
 2124              	.LVL169:
1709:src/keys.c    **** 
 2125              		.loc 1 1709 10 view .LVU660
 2126 01c8 FFF7FEBF 		b	arg_eval
 2127              	.LVL170:
 2128              	.L238:
 2129              		.cfi_restore_state
1809:src/keys.c    **** 			return arg_eval(n);
 2130              		.loc 1 1809 3 is_stmt 1 view .LVU661
1809:src/keys.c    **** 			return arg_eval(n);
 2131              		.loc 1 1809 7 is_stmt 0 view .LVU662
 2132 01cc 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1809:src/keys.c    **** 			return arg_eval(n);
 2133              		.loc 1 1809 6 view .LVU663
 2134 01ce 5806     		lsls	r0, r3, #25
 2135 01d0 08D4     		bmi	.L240
1809:src/keys.c    **** 			return arg_eval(n);
 2136              		.loc 1 1809 25 discriminator 1 view .LVU664
 2137 01d2 0121     		movs	r1, #1
 2138 01d4 0320     		movs	r0, #3
 2139 01d6 FFF7FEFF 		bl	arg_storcl
 2140              	.LVL171:
1809:src/keys.c    **** 			return arg_eval(n);
 2141              		.loc 1 1809 18 discriminator 1 view .LVU665
 2142 01da 0028     		cmp	r0, #0
 2143 01dc A7D1     		bne	.L293
1809:src/keys.c    **** 			return arg_eval(n);
 2144              		.loc 1 1809 63 discriminator 2 view .LVU666
 2145 01de B8F1000F 		cmp	r8, #0
 2146 01e2 A4D0     		beq	.L293
 2147              	.LVL172:
 2148              	.L240:
1810:src/keys.c    **** 		break;
 2149              		.loc 1 1810 4 is_stmt 1 view .LVU667
1810:src/keys.c    **** 		break;
 2150              		.loc 1 1810 11 is_stmt 0 view .LVU668
 2151 01e4 2846     		mov	r0, r5
 2152 01e6 ECE7     		b	.L295
 2153              	.LVL173:
 2154              	.L212:
1691:src/keys.c    **** 	  case regT_idx:
 2155              		.loc 1 1691 6 is_stmt 1 view .LVU669
1691:src/keys.c    **** 	  case regT_idx:
 2156              		.loc 1 1691 13 is_stmt 0 view .LVU670
 2157 01e8 0320     		movs	r0, #3
ARM GAS  /tmp/ccJ0w3QJ.s 			page 96


 2158              	.L294:
1904:src/keys.c    **** 
 2159              		.loc 1 1904 1 view .LVU671
 2160 01ea 03B0     		add	sp, sp, #12
 2161              		.cfi_remember_state
 2162              		.cfi_def_cfa_offset 36
 2163              	.LVL174:
1904:src/keys.c    **** 
 2164              		.loc 1 1904 1 view .LVU672
 2165              		@ sp needed
 2166 01ec BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2167              		.cfi_restore 14
 2168              		.cfi_restore 11
 2169              		.cfi_restore 10
 2170              		.cfi_restore 9
 2171              		.cfi_restore 8
 2172              		.cfi_restore 7
 2173              		.cfi_restore 6
 2174              		.cfi_restore 5
 2175              		.cfi_restore 4
 2176              		.cfi_def_cfa_offset 0
 2177              	.LVL175:
1689:src/keys.c    **** 	  case regZ_idx:
 2178              		.loc 1 1689 13 view .LVU673
 2179 01f0 FFF7FEBF 		b	arg_digit
 2180              	.LVL176:
 2181              	.L213:
 2182              		.cfi_restore_state
1689:src/keys.c    **** 	  case regZ_idx:
 2183              		.loc 1 1689 6 is_stmt 1 view .LVU674
1689:src/keys.c    **** 	  case regZ_idx:
 2184              		.loc 1 1689 13 is_stmt 0 view .LVU675
 2185 01f4 0220     		movs	r0, #2
 2186 01f6 F8E7     		b	.L294
 2187              	.L210:
1693:src/keys.c    **** 	  case 5:
 2188              		.loc 1 1693 6 is_stmt 1 view .LVU676
1693:src/keys.c    **** 	  case 5:
 2189              		.loc 1 1693 13 is_stmt 0 view .LVU677
 2190 01f8 0420     		movs	r0, #4
 2191 01fa F6E7     		b	.L294
 2192              	.L214:
1734:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 2193              		.loc 1 1734 3 is_stmt 1 view .LVU678
1734:src/keys.c    **** 			set_shift(previous_shift == SHIFT_F ? SHIFT_N : SHIFT_F);
 2194              		.loc 1 1734 6 is_stmt 0 view .LVU679
 2195 01fc BCF1000F 		cmp	ip, #0
 2196 0200 95D0     		beq	.L293
 2197              	.L215:
1735:src/keys.c    **** 		break;
 2198              		.loc 1 1735 4 is_stmt 1 view .LVU680
 2199              	.LVL177:
 2200              	.LBB349:
 2201              	.LBI349:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 2202              		.loc 1 92 20 view .LVU681
 2203              	.LBB350:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 97


  93:src/keys.c    **** 	State2.shifts = shift;
 2204              		.loc 1 93 2 view .LVU682
 2205              	.LBB351:
 2206              	.LBI351:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 2207              		.loc 1 84 13 view .LVU683
 2208              	.LBB352:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2209              		.loc 1 85 2 view .LVU684
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2210              		.loc 1 85 18 is_stmt 0 view .LVU685
 2211 0202 FFF7FEFF 		bl	shift_down
 2212              	.LVL178:
  86:src/keys.c    **** }
 2213              		.loc 1 86 2 is_stmt 1 view .LVU686
 2214              	.LBE352:
 2215              	.LBE351:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 2216              		.loc 1 94 2 view .LVU687
 2217              	.LBE350:
 2218              	.LBE349:
1735:src/keys.c    **** 		break;
 2219              		.loc 1 1735 4 is_stmt 0 view .LVU688
 2220 0206 009B     		ldr	r3, [sp]
 2221 0208 B3F10109 		subs	r9, r3, #1
 2222 020c 18BF     		it	ne
 2223 020e 4FF00109 		movne	r9, #1
 2224              	.LBB356:
 2225              	.LBB353:
  95:src/keys.c    **** 	return r;
 2226              		.loc 1 95 19 view .LVU689
 2227 0212 0023     		movs	r3, #0
 2228              	.LBE353:
 2229              	.LBE356:
1735:src/keys.c    **** 		break;
 2230              		.loc 1 1735 4 view .LVU690
 2231 0214 84F81090 		strb	r9, [r4, #16]
 2232              	.LBB357:
 2233              	.LBB354:
  95:src/keys.c    **** 	return r;
 2234              		.loc 1 95 2 is_stmt 1 view .LVU691
  95:src/keys.c    **** 	return r;
 2235              		.loc 1 95 19 is_stmt 0 view .LVU692
 2236 0218 6373     		strb	r3, [r4, #13]
  96:src/keys.c    **** }
 2237              		.loc 1 96 2 is_stmt 1 view .LVU693
 2238              	.LBE354:
 2239              	.LBE357:
1903:src/keys.c    **** }
 2240              		.loc 1 1903 9 is_stmt 0 view .LVU694
 2241 021a 3320     		movs	r0, #51
 2242              	.LBB358:
 2243              	.LBB355:
  96:src/keys.c    **** }
 2244              		.loc 1 96 9 view .LVU695
 2245 021c 88E7     		b	.L191
 2246              	.LVL179:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 98


 2247              	.L201:
  96:src/keys.c    **** }
 2248              		.loc 1 96 9 view .LVU696
 2249              	.LBE355:
 2250              	.LBE358:
1678:src/keys.c    **** 	if (base >= NUM_RARG) {
 2251              		.loc 1 1678 2 is_stmt 1 view .LVU697
1679:src/keys.c    **** 		reset_arg();
 2252              		.loc 1 1679 5 is_stmt 0 view .LVU698
 2253 021e 9B2F     		cmp	r7, #155
1678:src/keys.c    **** 	if (base >= NUM_RARG) {
 2254              		.loc 1 1678 4 view .LVU699
 2255 0220 29F08005 		bic	r5, r9, #128
 2256              	.LVL180:
1679:src/keys.c    **** 		reset_arg();
 2257              		.loc 1 1679 2 is_stmt 1 view .LVU700
1679:src/keys.c    **** 		reset_arg();
 2258              		.loc 1 1679 5 is_stmt 0 view .LVU701
 2259 0224 81D8     		bhi	.L255
1674:src/keys.c    **** 	int shorthand = label_addressing && c != K_F 
 2260              		.loc 1 1674 61 view .LVU702
 2261 0226 4FF0010C 		mov	ip, #1
 2262 022a 6AE7     		b	.L203
 2263              	.LVL181:
 2264              	.L218:
1747:src/keys.c    **** 			break;
 2265              		.loc 1 1747 3 is_stmt 1 view .LVU703
1747:src/keys.c    **** 			break;
 2266              		.loc 1 1747 18 is_stmt 0 view .LVU704
 2267 022c 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1747:src/keys.c    **** 			break;
 2268              		.loc 1 1747 6 view .LVU705
 2269 022e 13F0C00F 		tst	r3, #192
 2270 0232 7FF47CAF 		bne	.L293
1749:src/keys.c    **** 			CmdBase = RARG_STOM;
 2271              		.loc 1 1749 3 is_stmt 1 view .LVU706
1749:src/keys.c    **** 			CmdBase = RARG_STOM;
 2272              		.loc 1 1749 6 is_stmt 0 view .LVU707
 2273 0236 032F     		cmp	r7, #3
 2274 0238 00F0EE80 		beq	.L299
1751:src/keys.c    **** 			CmdBase = RARG_RCLM;
 2275              		.loc 1 1751 8 is_stmt 1 view .LVU708
1751:src/keys.c    **** 			CmdBase = RARG_RCLM;
 2276              		.loc 1 1751 11 is_stmt 0 view .LVU709
 2277 023c 0A2F     		cmp	r7, #10
 2278 023e 7FF476AF 		bne	.L293
1752:src/keys.c    **** 		break;
 2279              		.loc 1 1752 4 is_stmt 1 view .LVU710
1752:src/keys.c    **** 		break;
 2280              		.loc 1 1752 12 is_stmt 0 view .LVU711
 2281 0242 7823     		movs	r3, #120
 2282 0244 E377     		strb	r3, [r4, #31]
1903:src/keys.c    **** }
 2283              		.loc 1 1903 9 view .LVU712
 2284 0246 3320     		movs	r0, #51
 2285 0248 72E7     		b	.L191
 2286              	.L244:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 99


1857:src/keys.c    **** 			if (argcmds[base].label) {
 2287              		.loc 1 1857 3 is_stmt 1 view .LVU713
1857:src/keys.c    **** 			if (argcmds[base].label) {
 2288              		.loc 1 1857 6 is_stmt 0 view .LVU714
 2289 024a E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 2290 024c 002B     		cmp	r3, #0
 2291 024e 00F0A080 		beq	.L300
1871:src/keys.c    **** 			return arg_eval(State2.digval);
 2292              		.loc 1 1871 10 is_stmt 1 view .LVU715
1872:src/keys.c    **** 		else if (stack_reg)
 2293              		.loc 1 1872 4 view .LVU716
1872:src/keys.c    **** 		else if (stack_reg)
 2294              		.loc 1 1872 11 is_stmt 0 view .LVU717
 2295 0252 2089     		ldrh	r0, [r4, #8]
 2296 0254 B5E7     		b	.L295
 2297              	.L242:
1849:src/keys.c    **** 		break;
 2298              		.loc 1 1849 3 is_stmt 1 view .LVU718
 2299 0256 0021     		movs	r1, #0
 2300 0258 0620     		movs	r0, #6
 2301 025a FFF7FEFF 		bl	arg_storcl
 2302              	.LVL182:
1850:src/keys.c    **** 
 2303              		.loc 1 1850 3 view .LVU719
1903:src/keys.c    **** }
 2304              		.loc 1 1903 9 is_stmt 0 view .LVU720
 2305 025e 3320     		movs	r0, #51
1850:src/keys.c    **** 
 2306              		.loc 1 1850 3 view .LVU721
 2307 0260 66E7     		b	.L191
 2308              	.L235:
1802:src/keys.c    **** 			reset_arg();
 2309              		.loc 1 1802 3 is_stmt 1 view .LVU722
1802:src/keys.c    **** 			reset_arg();
 2310              		.loc 1 1802 6 is_stmt 0 view .LVU723
 2311 0262 212F     		cmp	r7, #33
 2312 0264 00F0C580 		beq	.L236
1802:src/keys.c    **** 			reset_arg();
 2313              		.loc 1 1802 25 discriminator 1 view .LVU724
 2314 0268 732F     		cmp	r7, #115
 2315 026a 00F0C280 		beq	.L236
1806:src/keys.c    **** 		break;
 2316              		.loc 1 1806 3 is_stmt 1 view .LVU725
 2317 026e 0121     		movs	r1, #1
 2318 0270 0220     		movs	r0, #2
 2319 0272 FFF7FEFF 		bl	arg_storcl
 2320              	.LVL183:
1807:src/keys.c    **** 	case K44:		// multiply
 2321              		.loc 1 1807 3 view .LVU726
1903:src/keys.c    **** }
 2322              		.loc 1 1903 9 is_stmt 0 view .LVU727
 2323 0276 3320     		movs	r0, #51
1807:src/keys.c    **** 	case K44:		// multiply
 2324              		.loc 1 1807 3 view .LVU728
 2325 0278 5AE7     		b	.L191
 2326              	.L228:
1794:src/keys.c    **** 
ARM GAS  /tmp/ccJ0w3QJ.s 			page 100


 2327              		.loc 1 1794 3 is_stmt 1 view .LVU729
 2328              	.LVL184:
 2329              	.LBB359:
 2330              	.LBI359:
1636:src/keys.c    **** 
 2331              		.loc 1 1636 12 view .LVU730
 2332              	.LBB360:
1638:src/keys.c    **** 		// Only valid at beginning of entry
 2333              		.loc 1 1638 2 view .LVU731
1638:src/keys.c    **** 		// Only valid at beginning of entry
 2334              		.loc 1 1638 5 is_stmt 0 view .LVU732
 2335 027a E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 2336 027c 002B     		cmp	r3, #0
 2337 027e 7FF456AF 		bne	.L293
1640:src/keys.c    **** 			// '..' or ENTER '.' = X
 2338              		.loc 1 1640 3 is_stmt 1 view .LVU733
1640:src/keys.c    **** 			// '..' or ENTER '.' = X
 2339              		.loc 1 1640 6 is_stmt 0 view .LVU734
 2340 0282 10F4A03F 		tst	r0, #81920
 2341 0286 40F0CB80 		bne	.L301
1645:src/keys.c    **** 			// local register or flag select
 2342              		.loc 1 1645 3 is_stmt 1 view .LVU735
1645:src/keys.c    **** 			// local register or flag select
 2343              		.loc 1 1645 20 is_stmt 0 view .LVU736
 2344 028a 0BEB0A02 		add	r2, fp, r10
 2345 028e 5379     		ldrb	r3, [r2, #5]	@ zero_extendqisi2
1645:src/keys.c    **** 			// local register or flag select
 2346              		.loc 1 1645 6 view .LVU737
 2347 0290 1D07     		lsls	r5, r3, #28
 2348 0292 00F1B380 		bmi	.L230
1645:src/keys.c    **** 			// local register or flag select
 2349              		.loc 1 1645 27 view .LVU738
 2350 0296 94F91530 		ldrsb	r3, [r4, #21]
 2351 029a 002B     		cmp	r3, #0
 2352 029c C0F2AE80 		blt	.L230
1649:src/keys.c    **** 			// Special GTO . sequence
 2353              		.loc 1 1649 8 is_stmt 1 view .LVU739
1649:src/keys.c    **** 			// Special GTO . sequence
 2354              		.loc 1 1649 29 is_stmt 0 view .LVU740
 2355 02a0 443F     		subs	r7, r7, #68
 2356              	.LVL185:
1649:src/keys.c    **** 			// Special GTO . sequence
 2357              		.loc 1 1649 11 view .LVU741
 2358 02a2 012F     		cmp	r7, #1
 2359 02a4 3FF643AF 		bhi	.L293
1651:src/keys.c    **** 				State2.gtodot = 1;
 2360              		.loc 1 1651 4 is_stmt 1 view .LVU742
1652:src/keys.c    **** 				reset_arg();
 2361              		.loc 1 1652 5 view .LVU743
1652:src/keys.c    **** 				reset_arg();
 2362              		.loc 1 1652 19 is_stmt 0 view .LVU744
 2363 02a8 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 2364 02aa 43F00103 		orr	r3, r3, #1
 2365 02ae 6375     		strb	r3, [r4, #21]
1653:src/keys.c    **** 			}
 2366              		.loc 1 1653 5 is_stmt 1 view .LVU745
 2367 02b0 FFF7FEFF 		bl	reset_arg
ARM GAS  /tmp/ccJ0w3QJ.s 			page 101


 2368              	.LVL186:
1657:src/keys.c    **** }
 2369              		.loc 1 1657 9 is_stmt 0 view .LVU746
 2370 02b4 3320     		movs	r0, #51
 2371 02b6 3BE7     		b	.L191
 2372              	.L307:
 2373              		.align	2
 2374              	.L306:
 2375 02b8 00000000 		.word	StateWhileOn
 2376 02bc 00000000 		.word	.LANCHOR1
 2377 02c0 00000000 		.word	.LANCHOR0
 2378 02c4 ABAAAAAA 		.word	-1431655765
 2379 02c8 00000000 		.word	argcmds
 2380              	.LVL187:
 2381              	.L232:
1657:src/keys.c    **** }
 2382              		.loc 1 1657 9 view .LVU747
 2383              	.LBE360:
 2384              	.LBE359:
1798:src/keys.c    **** 			return arg_eval(n);
 2385              		.loc 1 1798 3 is_stmt 1 view .LVU748
1798:src/keys.c    **** 			return arg_eval(n);
 2386              		.loc 1 1798 7 is_stmt 0 view .LVU749
 2387 02cc 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1798:src/keys.c    **** 			return arg_eval(n);
 2388              		.loc 1 1798 6 view .LVU750
 2389 02ce 5C06     		lsls	r4, r3, #25
 2390 02d0 88D4     		bmi	.L240
1798:src/keys.c    **** 			return arg_eval(n);
 2391              		.loc 1 1798 25 discriminator 1 view .LVU751
 2392 02d2 0121     		movs	r1, #1
 2393 02d4 0846     		mov	r0, r1
 2394 02d6 FFF7FEFF 		bl	arg_storcl
 2395              	.LVL188:
1798:src/keys.c    **** 			return arg_eval(n);
 2396              		.loc 1 1798 18 discriminator 1 view .LVU752
 2397 02da 0028     		cmp	r0, #0
 2398 02dc 7FF427AF 		bne	.L293
1809:src/keys.c    **** 			return arg_eval(n);
 2399              		.loc 1 1809 63 view .LVU753
 2400 02e0 B8F1000F 		cmp	r8, #0
 2401 02e4 3FF423AF 		beq	.L293
 2402 02e8 7CE7     		b	.L240
 2403              	.L216:
1739:src/keys.c    **** 			State2.ind = ! State2.ind;
 2404              		.loc 1 1739 3 is_stmt 1 view .LVU754
1739:src/keys.c    **** 			State2.ind = ! State2.ind;
 2405              		.loc 1 1739 7 is_stmt 0 view .LVU755
 2406 02ea 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1739:src/keys.c    **** 			State2.ind = ! State2.ind;
 2407              		.loc 1 1739 6 view .LVU756
 2408 02ec 5E06     		lsls	r6, r3, #25
 2409 02ee 3FF51EAF 		bmi	.L293
1739:src/keys.c    **** 			State2.ind = ! State2.ind;
 2410              		.loc 1 1739 35 discriminator 1 view .LVU757
 2411 02f2 D344     		add	fp, fp, r10
 2412 02f4 9BF80520 		ldrb	r2, [fp, #5]	@ zero_extendqisi2
ARM GAS  /tmp/ccJ0w3QJ.s 			page 102


1739:src/keys.c    **** 			State2.ind = ! State2.ind;
 2413              		.loc 1 1739 19 discriminator 1 view .LVU758
 2414 02f8 D507     		lsls	r5, r2, #31
 2415 02fa 7FF518AF 		bpl	.L293
1740:src/keys.c    **** 			if (! stack_reg)
 2416              		.loc 1 1740 4 is_stmt 1 view .LVU759
1740:src/keys.c    **** 			if (! stack_reg)
 2417              		.loc 1 1740 17 is_stmt 0 view .LVU760
 2418 02fe DA43     		mvns	r2, r3
 2419 0300 C2F3C012 		ubfx	r2, r2, #7, #1
1740:src/keys.c    **** 			if (! stack_reg)
 2420              		.loc 1 1740 15 view .LVU761
 2421 0304 62F3C713 		bfi	r3, r2, #7, #1
 2422 0308 6375     		strb	r3, [r4, #21]
1741:src/keys.c    **** 				State2.dot = 0;
 2423              		.loc 1 1741 4 is_stmt 1 view .LVU762
1741:src/keys.c    **** 				State2.dot = 0;
 2424              		.loc 1 1741 7 is_stmt 0 view .LVU763
 2425 030a B8F1000F 		cmp	r8, #0
 2426 030e 7FF40EAF 		bne	.L293
 2427              	.L253:
1742:src/keys.c    **** 		}
 2428              		.loc 1 1742 5 is_stmt 1 view .LVU764
1742:src/keys.c    **** 		}
 2429              		.loc 1 1742 16 is_stmt 0 view .LVU765
 2430 0312 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 2431 0314 6FF38613 		bfc	r3, #6, #1
 2432 0318 6375     		strb	r3, [r4, #21]
1903:src/keys.c    **** }
 2433              		.loc 1 1903 9 view .LVU766
 2434 031a 3320     		movs	r0, #51
 2435 031c 08E7     		b	.L191
 2436              	.L222:
1759:src/keys.c    **** 	    return process_arg_shuffle(0);
 2437              		.loc 1 1759 4 is_stmt 1 view .LVU767
1759:src/keys.c    **** 	    return process_arg_shuffle(0);
 2438              		.loc 1 1759 8 is_stmt 0 view .LVU768
 2439 031e A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1759:src/keys.c    **** 	    return process_arg_shuffle(0);
 2440              		.loc 1 1759 7 view .LVU769
 2441 0320 9907     		lsls	r1, r3, #30
 2442 0322 7FF508AF 		bpl	.L221
1760:src/keys.c    **** 	case K52:	// Y
 2443              		.loc 1 1760 6 is_stmt 1 view .LVU770
1760:src/keys.c    **** 	case K52:	// Y
 2444              		.loc 1 1760 13 is_stmt 0 view .LVU771
 2445 0326 0020     		movs	r0, #0
 2446              	.L296:
1904:src/keys.c    **** 
 2447              		.loc 1 1904 1 view .LVU772
 2448 0328 03B0     		add	sp, sp, #12
 2449              		.cfi_remember_state
 2450              		.cfi_def_cfa_offset 36
 2451              	.LVL189:
1904:src/keys.c    **** 
 2452              		.loc 1 1904 1 view .LVU773
 2453              		@ sp needed
ARM GAS  /tmp/ccJ0w3QJ.s 			page 103


 2454 032a BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2455              		.cfi_restore 14
 2456              		.cfi_restore 11
 2457              		.cfi_restore 10
 2458              		.cfi_restore 9
 2459              		.cfi_restore 8
 2460              		.cfi_restore 7
 2461              		.cfi_restore 6
 2462              		.cfi_restore 5
 2463              		.cfi_restore 4
 2464              		.cfi_def_cfa_offset 0
 2465              	.LVL190:
1766:src/keys.c    **** #else
 2466              		.loc 1 1766 13 view .LVU774
 2467 032e FFF7FEBF 		b	process_arg_shuffle
 2468              	.LVL191:
 2469              	.L223:
 2470              		.cfi_restore_state
1762:src/keys.c    **** 	    return process_arg_shuffle(1);
 2471              		.loc 1 1762 4 is_stmt 1 view .LVU775
1762:src/keys.c    **** 	    return process_arg_shuffle(1);
 2472              		.loc 1 1762 8 is_stmt 0 view .LVU776
 2473 0332 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1762:src/keys.c    **** 	    return process_arg_shuffle(1);
 2474              		.loc 1 1762 7 view .LVU777
 2475 0334 9A07     		lsls	r2, r3, #30
 2476 0336 7FF5FEAE 		bpl	.L221
1763:src/keys.c    **** 	case K53:       // Z
 2477              		.loc 1 1763 6 is_stmt 1 view .LVU778
1763:src/keys.c    **** 	case K53:       // Z
 2478              		.loc 1 1763 13 is_stmt 0 view .LVU779
 2479 033a 0120     		movs	r0, #1
 2480 033c F4E7     		b	.L296
 2481              	.L224:
1765:src/keys.c    **** 	    return process_arg_shuffle(2);
 2482              		.loc 1 1765 4 is_stmt 1 view .LVU780
1765:src/keys.c    **** 	    return process_arg_shuffle(2);
 2483              		.loc 1 1765 8 is_stmt 0 view .LVU781
 2484 033e A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1765:src/keys.c    **** 	    return process_arg_shuffle(2);
 2485              		.loc 1 1765 7 view .LVU782
 2486 0340 9B07     		lsls	r3, r3, #30
 2487 0342 7FF5F8AE 		bpl	.L221
1766:src/keys.c    **** #else
 2488              		.loc 1 1766 6 is_stmt 1 view .LVU783
1766:src/keys.c    **** #else
 2489              		.loc 1 1766 13 is_stmt 0 view .LVU784
 2490 0346 0220     		movs	r0, #2
 2491 0348 EEE7     		b	.L296
 2492              	.L243:
1853:src/keys.c    **** 		break;
 2493              		.loc 1 1853 3 is_stmt 1 view .LVU785
 2494 034a 0021     		movs	r1, #0
 2495 034c 0520     		movs	r0, #5
 2496 034e FFF7FEFF 		bl	arg_storcl
 2497              	.LVL192:
1854:src/keys.c    **** 
ARM GAS  /tmp/ccJ0w3QJ.s 			page 104


 2498              		.loc 1 1854 3 view .LVU786
1903:src/keys.c    **** }
 2499              		.loc 1 1903 9 is_stmt 0 view .LVU787
 2500 0352 3320     		movs	r0, #51
1854:src/keys.c    **** 
 2501              		.loc 1 1854 3 view .LVU788
 2502 0354 ECE6     		b	.L191
 2503              	.L220:
1756:src/keys.c    **** 	    return process_arg_shuffle(3);
 2504              		.loc 1 1756 4 is_stmt 1 view .LVU789
1756:src/keys.c    **** 	    return process_arg_shuffle(3);
 2505              		.loc 1 1756 8 is_stmt 0 view .LVU790
 2506 0356 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
1756:src/keys.c    **** 	    return process_arg_shuffle(3);
 2507              		.loc 1 1756 7 view .LVU791
 2508 0358 9807     		lsls	r0, r3, #30
 2509 035a 7FF5ECAE 		bpl	.L221
1757:src/keys.c    **** 	case K51:       // X
 2510              		.loc 1 1757 6 is_stmt 1 view .LVU792
1757:src/keys.c    **** 	case K51:       // X
 2511              		.loc 1 1757 13 is_stmt 0 view .LVU793
 2512 035e 0320     		movs	r0, #3
 2513 0360 E2E7     		b	.L296
 2514              	.L241:
1813:src/keys.c    **** 		break;
 2515              		.loc 1 1813 3 is_stmt 1 view .LVU794
 2516 0362 0121     		movs	r1, #1
 2517 0364 0420     		movs	r0, #4
 2518 0366 FFF7FEFF 		bl	arg_storcl
 2519              	.LVL193:
1814:src/keys.c    **** #else
 2520              		.loc 1 1814 3 view .LVU795
1903:src/keys.c    **** }
 2521              		.loc 1 1903 9 is_stmt 0 view .LVU796
 2522 036a 3320     		movs	r0, #51
1814:src/keys.c    **** #else
 2523              		.loc 1 1814 3 view .LVU797
 2524 036c E0E6     		b	.L191
 2525              	.L251:
1878:src/keys.c    **** 			if (State2.dot)
 2526              		.loc 1 1878 3 is_stmt 1 view .LVU798
1878:src/keys.c    **** 			if (State2.dot)
 2527              		.loc 1 1878 13 is_stmt 0 view .LVU799
 2528 036e E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
1878:src/keys.c    **** 			if (State2.dot)
 2529              		.loc 1 1878 6 view .LVU800
 2530 0370 7BBB     		cbnz	r3, .L252
1879:src/keys.c    **** 				State2.dot = 0;
 2531              		.loc 1 1879 4 is_stmt 1 view .LVU801
1879:src/keys.c    **** 				State2.dot = 0;
 2532              		.loc 1 1879 8 is_stmt 0 view .LVU802
 2533 0372 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
1879:src/keys.c    **** 				State2.dot = 0;
 2534              		.loc 1 1879 7 view .LVU803
 2535 0374 13F04001 		ands	r1, r3, #64
 2536 0378 CBD1     		bne	.L253
1881:src/keys.c    **** 				State2.local = 0;
ARM GAS  /tmp/ccJ0w3QJ.s 			page 105


 2537              		.loc 1 1881 9 is_stmt 1 view .LVU804
1881:src/keys.c    **** 				State2.local = 0;
 2538              		.loc 1 1881 13 is_stmt 0 view .LVU805
 2539 037a A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
1881:src/keys.c    **** 				State2.local = 0;
 2540              		.loc 1 1881 12 view .LVU806
 2541 037c 12F00100 		ands	r0, r2, #1
 2542 0380 54D1     		bne	.L302
1883:src/keys.c    **** 				State2.ind = 0;
 2543              		.loc 1 1883 9 is_stmt 1 view .LVU807
1883:src/keys.c    **** 				State2.ind = 0;
 2544              		.loc 1 1883 12 is_stmt 0 view .LVU808
 2545 0382 1906     		lsls	r1, r3, #24
 2546 0384 7FF5D1AE 		bpl	.L255
1884:src/keys.c    **** 			else
 2547              		.loc 1 1884 5 is_stmt 1 view .LVU809
1884:src/keys.c    **** 			else
 2548              		.loc 1 1884 16 is_stmt 0 view .LVU810
 2549 0388 60F3C713 		bfi	r3, r0, #7, #1
 2550 038c 6375     		strb	r3, [r4, #21]
1903:src/keys.c    **** }
 2551              		.loc 1 1903 9 view .LVU811
 2552 038e 3320     		movs	r0, #51
 2553 0390 CEE6     		b	.L191
 2554              	.L300:
1857:src/keys.c    **** 			if (argcmds[base].label) {
 2555              		.loc 1 1857 43 discriminator 1 view .LVU812
 2556 0392 637D     		ldrb	r3, [r4, #21]	@ zero_extendqisi2
 2557 0394 13F0C00F 		tst	r3, #192
 2558 0398 0ED1     		bne	.L246
1858:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 2559              		.loc 1 1858 4 is_stmt 1 view .LVU813
1858:src/keys.c    **** 				init_arg((enum rarg)(base - RARG_LBL));
 2560              		.loc 1 1858 7 is_stmt 0 view .LVU814
 2561 039a 0029     		cmp	r1, #0
 2562 039c 4BD1     		bne	.L303
1863:src/keys.c    **** 				reset_arg();
 2563              		.loc 1 1863 11 is_stmt 1 view .LVU815
1863:src/keys.c    **** 				reset_arg();
 2564              		.loc 1 1863 14 is_stmt 0 view .LVU816
 2565 039e 4E2F     		cmp	r7, #78
 2566 03a0 5BD0     		beq	.L304
1866:src/keys.c    **** 				reset_arg();
 2567              		.loc 1 1866 11 is_stmt 1 view .LVU817
1866:src/keys.c    **** 				reset_arg();
 2568              		.loc 1 1866 14 is_stmt 0 view .LVU818
 2569 03a2 4F2F     		cmp	r7, #79
 2570 03a4 5ED0     		beq	.L305
1869:src/keys.c    **** 				State2.dot = 1;
 2571              		.loc 1 1869 11 is_stmt 1 view .LVU819
1869:src/keys.c    **** 				State2.dot = 1;
 2572              		.loc 1 1869 14 is_stmt 0 view .LVU820
 2573 03a6 019A     		ldr	r2, [sp, #4]
 2574 03a8 002A     		cmp	r2, #0
 2575 03aa 3FF4C0AE 		beq	.L293
1870:src/keys.c    **** 		} else if (State2.numdigit > 0)
 2576              		.loc 1 1870 5 is_stmt 1 view .LVU821
ARM GAS  /tmp/ccJ0w3QJ.s 			page 106


1870:src/keys.c    **** 		} else if (State2.numdigit > 0)
 2577              		.loc 1 1870 16 is_stmt 0 view .LVU822
 2578 03ae 43F04003 		orr	r3, r3, #64
 2579 03b2 6375     		strb	r3, [r4, #21]
1903:src/keys.c    **** }
 2580              		.loc 1 1903 9 view .LVU823
 2581 03b4 3320     		movs	r0, #51
 2582 03b6 BBE6     		b	.L191
 2583              	.L246:
1871:src/keys.c    **** 			return arg_eval(State2.digval);
 2584              		.loc 1 1871 10 is_stmt 1 view .LVU824
1873:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 2585              		.loc 1 1873 8 view .LVU825
1873:src/keys.c    **** 			State2.dot = 1 - State2.dot;
 2586              		.loc 1 1873 11 is_stmt 0 view .LVU826
 2587 03b8 B8F1000F 		cmp	r8, #0
 2588 03bc 3FF4B7AE 		beq	.L293
1874:src/keys.c    **** 		break;
 2589              		.loc 1 1874 4 is_stmt 1 view .LVU827
1874:src/keys.c    **** 		break;
 2590              		.loc 1 1874 27 is_stmt 0 view .LVU828
 2591 03c0 C3F38012 		ubfx	r2, r3, #6, #1
1874:src/keys.c    **** 		break;
 2592              		.loc 1 1874 19 view .LVU829
 2593 03c4 C2F10102 		rsb	r2, r2, #1
1874:src/keys.c    **** 		break;
 2594              		.loc 1 1874 15 view .LVU830
 2595 03c8 62F38613 		bfi	r3, r2, #6, #1
 2596 03cc 6375     		strb	r3, [r4, #21]
1903:src/keys.c    **** }
 2597              		.loc 1 1903 9 view .LVU831
 2598 03ce 3320     		movs	r0, #51
 2599 03d0 AEE6     		b	.L191
 2600              	.L252:
1889:src/keys.c    **** 			if (State2.shuffle)
 2601              		.loc 1 1889 4 is_stmt 1 view .LVU832
1890:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2602              		.loc 1 1890 8 is_stmt 0 view .LVU833
 2603 03d2 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
1889:src/keys.c    **** 			if (State2.shuffle)
 2604              		.loc 1 1889 4 view .LVU834
 2605 03d4 013B     		subs	r3, r3, #1
 2606 03d6 DBB2     		uxtb	r3, r3
1890:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2607              		.loc 1 1890 7 view .LVU835
 2608 03d8 9207     		lsls	r2, r2, #30
1889:src/keys.c    **** 			if (State2.shuffle)
 2609              		.loc 1 1889 4 view .LVU836
 2610 03da E372     		strb	r3, [r4, #11]
1890:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2611              		.loc 1 1890 4 is_stmt 1 view .LVU837
1890:src/keys.c    **** 				State2.digval &= ~(3 << (State2.numdigit << 1));
 2612              		.loc 1 1890 7 is_stmt 0 view .LVU838
 2613 03dc 14D5     		bpl	.L256
1891:src/keys.c    **** 			else
 2614              		.loc 1 1891 5 is_stmt 1 view .LVU839
1891:src/keys.c    **** 			else
ARM GAS  /tmp/ccJ0w3QJ.s 			page 107


 2615              		.loc 1 1891 19 is_stmt 0 view .LVU840
 2616 03de 2289     		ldrh	r2, [r4, #8]
1891:src/keys.c    **** 			else
 2617              		.loc 1 1891 46 view .LVU841
 2618 03e0 5B00     		lsls	r3, r3, #1
1891:src/keys.c    **** 			else
 2619              		.loc 1 1891 26 view .LVU842
 2620 03e2 0321     		movs	r1, #3
 2621 03e4 01FA03F3 		lsl	r3, r1, r3
1891:src/keys.c    **** 			else
 2622              		.loc 1 1891 19 view .LVU843
 2623 03e8 22EA0303 		bic	r3, r2, r3
 2624 03ec 2381     		strh	r3, [r4, #8]	@ movhi
1903:src/keys.c    **** }
 2625              		.loc 1 1903 9 view .LVU844
 2626 03ee 3320     		movs	r0, #51
 2627 03f0 9EE6     		b	.L191
 2628              	.L236:
1803:src/keys.c    **** 			return OP_NIL | OP_VIEWALPHA;
 2629              		.loc 1 1803 4 is_stmt 1 view .LVU845
 2630 03f2 FFF7FEFF 		bl	reset_arg
 2631              	.LVL194:
1804:src/keys.c    **** 		}
 2632              		.loc 1 1804 4 view .LVU846
1804:src/keys.c    **** 		}
 2633              		.loc 1 1804 11 is_stmt 0 view .LVU847
 2634 03f6 40F27510 		movw	r0, #373
 2635 03fa 99E6     		b	.L191
 2636              	.LVL195:
 2637              	.L230:
 2638              	.LBB363:
 2639              	.LBB361:
1647:src/keys.c    **** 		}
 2640              		.loc 1 1647 4 is_stmt 1 view .LVU848
1647:src/keys.c    **** 		}
 2641              		.loc 1 1647 17 is_stmt 0 view .LVU849
 2642 03fc A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 2643 03fe 43F00103 		orr	r3, r3, #1
 2644 0402 A375     		strb	r3, [r4, #22]
1657:src/keys.c    **** }
 2645              		.loc 1 1657 9 view .LVU850
 2646 0404 3320     		movs	r0, #51
1647:src/keys.c    **** 		}
 2647              		.loc 1 1647 17 view .LVU851
 2648 0406 93E6     		b	.L191
 2649              	.LVL196:
 2650              	.L256:
1647:src/keys.c    **** 		}
 2651              		.loc 1 1647 17 view .LVU852
 2652              	.LBE361:
 2653              	.LBE363:
1893:src/keys.c    **** 		}
 2654              		.loc 1 1893 5 is_stmt 1 view .LVU853
1893:src/keys.c    **** 		}
 2655              		.loc 1 1893 19 is_stmt 0 view .LVU854
 2656 0408 2389     		ldrh	r3, [r4, #8]
 2657 040a 1A4A     		ldr	r2, .L308
ARM GAS  /tmp/ccJ0w3QJ.s 			page 108


 2658 040c A2FB0323 		umull	r2, r3, r2, r3
 2659 0410 DB08     		lsrs	r3, r3, #3
 2660 0412 2381     		strh	r3, [r4, #8]	@ movhi
1903:src/keys.c    **** }
 2661              		.loc 1 1903 9 view .LVU855
 2662 0414 3320     		movs	r0, #51
 2663 0416 8BE6     		b	.L191
 2664              	.L299:
1750:src/keys.c    **** 		else if (base == RARG_RCL)
 2665              		.loc 1 1750 4 is_stmt 1 view .LVU856
1750:src/keys.c    **** 		else if (base == RARG_RCL)
 2666              		.loc 1 1750 12 is_stmt 0 view .LVU857
 2667 0418 7723     		movs	r3, #119
 2668 041a E377     		strb	r3, [r4, #31]
1903:src/keys.c    **** }
 2669              		.loc 1 1903 9 view .LVU858
 2670 041c 3320     		movs	r0, #51
 2671 041e 87E6     		b	.L191
 2672              	.LVL197:
 2673              	.L301:
 2674              	.LBB364:
 2675              	.LBB362:
1642:src/keys.c    **** 			return arg_eval(regX_idx);
 2676              		.loc 1 1642 4 is_stmt 1 view .LVU859
1642:src/keys.c    **** 			return arg_eval(regX_idx);
 2677              		.loc 1 1642 17 is_stmt 0 view .LVU860
 2678 0420 A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
 2679 0422 63F30002 		bfi	r2, r3, #0, #1
1643:src/keys.c    **** 		}
 2680              		.loc 1 1643 11 view .LVU861
 2681 0426 6420     		movs	r0, #100
1642:src/keys.c    **** 			return arg_eval(regX_idx);
 2682              		.loc 1 1642 17 view .LVU862
 2683 0428 A275     		strb	r2, [r4, #22]
1643:src/keys.c    **** 		}
 2684              		.loc 1 1643 4 is_stmt 1 view .LVU863
 2685 042a CAE6     		b	.L295
 2686              	.LVL198:
 2687              	.L302:
1643:src/keys.c    **** 		}
 2688              		.loc 1 1643 4 is_stmt 0 view .LVU864
 2689              	.LBE362:
 2690              	.LBE364:
1882:src/keys.c    **** 			else if (State2.ind)
 2691              		.loc 1 1882 5 is_stmt 1 view .LVU865
1882:src/keys.c    **** 			else if (State2.ind)
 2692              		.loc 1 1882 18 is_stmt 0 view .LVU866
 2693 042c 61F30002 		bfi	r2, r1, #0, #1
 2694 0430 A275     		strb	r2, [r4, #22]
1903:src/keys.c    **** }
 2695              		.loc 1 1903 9 view .LVU867
 2696 0432 3320     		movs	r0, #51
 2697 0434 7CE6     		b	.L191
 2698              	.L303:
1859:src/keys.c    **** 				State2.multi = 1;
 2699              		.loc 1 1859 5 is_stmt 1 view .LVU868
 2700              	.LVL199:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 109


 2701              	.LBB365:
 2702              	.LBI365:
 519:src/keys.c    **** 	if (is_bad_cmdline())
 2703              		.loc 1 519 13 view .LVU869
 2704              	.LBB366:
 520:src/keys.c    **** 		return;
 2705              		.loc 1 520 2 view .LVU870
 520:src/keys.c    **** 		return;
 2706              		.loc 1 520 6 is_stmt 0 view .LVU871
 2707 0436 FFF7FEFF 		bl	is_bad_cmdline
 2708              	.LVL200:
 520:src/keys.c    **** 		return;
 2709              		.loc 1 520 5 view .LVU872
 2710 043a 20B9     		cbnz	r0, .L248
 2711              	.LBE366:
 2712              	.LBE365:
1859:src/keys.c    **** 				State2.multi = 1;
 2713              		.loc 1 1859 31 view .LVU873
 2714 043c A7F14200 		sub	r0, r7, #66
 2715              	.LBB368:
 2716              	.LBB367:
 2717 0440 C0B2     		uxtb	r0, r0
 2718 0442 FFF7FEFF 		bl	init_arg.part.0
 2719              	.LVL201:
 2720              	.L248:
1859:src/keys.c    **** 				State2.multi = 1;
 2721              		.loc 1 1859 31 view .LVU874
 2722              	.LBE367:
 2723              	.LBE368:
1860:src/keys.c    **** 				State2.alphashift = 0;
 2724              		.loc 1 1860 5 is_stmt 1 view .LVU875
1861:src/keys.c    **** 				State2.rarg = 0;
 2725              		.loc 1 1861 5 view .LVU876
1862:src/keys.c    **** 			} else if (base == RARG_SCI) {
 2726              		.loc 1 1862 5 view .LVU877
1860:src/keys.c    **** 				State2.alphashift = 0;
 2727              		.loc 1 1860 18 is_stmt 0 view .LVU878
 2728 0446 6369     		ldr	r3, [r4, #20]
 2729 0448 23F44013 		bic	r3, r3, #3145728
 2730 044c 23F40063 		bic	r3, r3, #2048
 2731 0450 43F40063 		orr	r3, r3, #2048
 2732 0454 6361     		str	r3, [r4, #20]
1903:src/keys.c    **** }
 2733              		.loc 1 1903 9 view .LVU879
 2734 0456 3320     		movs	r0, #51
 2735 0458 6AE6     		b	.L191
 2736              	.L304:
1864:src/keys.c    **** 				return OP_NIL | OP_FIXSCI;
 2737              		.loc 1 1864 5 is_stmt 1 view .LVU880
 2738 045a FFF7FEFF 		bl	reset_arg
 2739              	.LVL202:
1865:src/keys.c    **** 			} else if (base == RARG_ENG) {
 2740              		.loc 1 1865 5 view .LVU881
1865:src/keys.c    **** 			} else if (base == RARG_ENG) {
 2741              		.loc 1 1865 12 is_stmt 0 view .LVU882
 2742 045e 40F25510 		movw	r0, #341
 2743 0462 65E6     		b	.L191
ARM GAS  /tmp/ccJ0w3QJ.s 			page 110


 2744              	.L305:
1867:src/keys.c    **** 				return OP_NIL | OP_FIXENG;
 2745              		.loc 1 1867 5 is_stmt 1 view .LVU883
 2746 0464 FFF7FEFF 		bl	reset_arg
 2747              	.LVL203:
1868:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 2748              		.loc 1 1868 5 view .LVU884
1868:src/keys.c    **** 			} else if (argcmds[base].stckreg)
 2749              		.loc 1 1868 12 is_stmt 0 view .LVU885
 2750 0468 4FF4AB70 		mov	r0, #342
 2751 046c 60E6     		b	.L191
 2752              	.L209:
1687:src/keys.c    **** 	  case regY_idx:
 2753              		.loc 1 1687 6 is_stmt 1 view .LVU886
1687:src/keys.c    **** 	  case regY_idx:
 2754              		.loc 1 1687 13 is_stmt 0 view .LVU887
 2755 046e 0120     		movs	r0, #1
 2756 0470 BBE6     		b	.L294
 2757              	.L309:
 2758 0472 00BF     		.align	2
 2759              	.L308:
 2760 0474 CDCCCCCC 		.word	-858993459
 2761              		.cfi_endproc
 2762              	.LFE37:
 2764              		.section	.text.cur_shift,"ax",%progbits
 2765              		.align	1
 2766              		.p2align 2,,3
 2767              		.global	cur_shift
 2768              		.syntax unified
 2769              		.thumb
 2770              		.thumb_func
 2771              		.fpu fpv4-sp-d16
 2773              	cur_shift:
 2774              	.LFB0:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 2775              		.loc 1 84 29 is_stmt 1 view -0
 2776              		.cfi_startproc
 2777              		@ args = 0, pretend = 0, frame = 0
 2778              		@ frame_needed = 0, uses_anonymous_args = 0
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2779              		.loc 1 85 2 view .LVU889
  84:src/keys.c    **** 	enum shifts s = shift_down();
 2780              		.loc 1 84 29 is_stmt 0 view .LVU890
 2781 0000 08B5     		push	{r3, lr}
 2782              		.cfi_def_cfa_offset 8
 2783              		.cfi_offset 3, -8
 2784              		.cfi_offset 14, -4
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2785              		.loc 1 85 18 view .LVU891
 2786 0002 FFF7FEFF 		bl	shift_down
 2787              	.LVL204:
  86:src/keys.c    **** }
 2788              		.loc 1 86 2 is_stmt 1 view .LVU892
  86:src/keys.c    **** }
 2789              		.loc 1 86 52 is_stmt 0 view .LVU893
 2790 0006 08B9     		cbnz	r0, .L311
  86:src/keys.c    **** }
ARM GAS  /tmp/ccJ0w3QJ.s 			page 111


 2791              		.loc 1 86 52 discriminator 1 view .LVU894
 2792 0008 014B     		ldr	r3, .L313
 2793 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 2794              	.LVL205:
 2795              	.L311:
  87:src/keys.c    **** 
 2796              		.loc 1 87 1 discriminator 4 view .LVU895
 2797 000c 08BD     		pop	{r3, pc}
 2798              	.L314:
 2799 000e 00BF     		.align	2
 2800              	.L313:
 2801 0010 00000000 		.word	StateWhileOn
 2802              		.cfi_endproc
 2803              	.LFE0:
 2805              		.section	.text.reset_shift,"ax",%progbits
 2806              		.align	1
 2807              		.p2align 2,,3
 2808              		.global	reset_shift
 2809              		.syntax unified
 2810              		.thumb
 2811              		.thumb_func
 2812              		.fpu fpv4-sp-d16
 2814              	reset_shift:
 2815              	.LFB2:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 2816              		.loc 1 102 31 is_stmt 1 view -0
 2817              		.cfi_startproc
 2818              		@ args = 0, pretend = 0, frame = 0
 2819              		@ frame_needed = 0, uses_anonymous_args = 0
 103:src/keys.c    **** }
 2820              		.loc 1 103 2 view .LVU897
 2821              	.LVL206:
 2822              	.LBB369:
 2823              	.LBI369:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 2824              		.loc 1 92 20 view .LVU898
 2825              	.LBB370:
  93:src/keys.c    **** 	State2.shifts = shift;
 2826              		.loc 1 93 2 view .LVU899
 2827              	.LBB371:
 2828              	.LBI371:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 2829              		.loc 1 84 13 view .LVU900
 2830              	.LBB372:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2831              		.loc 1 85 2 view .LVU901
 2832              	.LBE372:
 2833              	.LBE371:
 2834              	.LBE370:
 2835              	.LBE369:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 2836              		.loc 1 102 31 is_stmt 0 view .LVU902
 2837 0000 08B5     		push	{r3, lr}
 2838              		.cfi_def_cfa_offset 8
 2839              		.cfi_offset 3, -8
 2840              		.cfi_offset 14, -4
 2841              	.LBB376:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 112


 2842              	.LBB375:
 2843              	.LBB374:
 2844              	.LBB373:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 2845              		.loc 1 85 18 view .LVU903
 2846 0002 FFF7FEFF 		bl	shift_down
 2847              	.LVL207:
  86:src/keys.c    **** }
 2848              		.loc 1 86 2 is_stmt 1 view .LVU904
  86:src/keys.c    **** }
 2849              		.loc 1 86 52 is_stmt 0 view .LVU905
 2850 0006 034B     		ldr	r3, .L320
 2851 0008 00B9     		cbnz	r0, .L316
 2852 000a 187C     		ldrb	r0, [r3, #16]	@ zero_extendqisi2
 2853              	.LVL208:
 2854              	.L316:
  86:src/keys.c    **** }
 2855              		.loc 1 86 52 view .LVU906
 2856              	.LBE373:
 2857              	.LBE374:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 2858              		.loc 1 94 2 is_stmt 1 view .LVU907
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 2859              		.loc 1 94 16 is_stmt 0 view .LVU908
 2860 000c 0022     		movs	r2, #0
 2861 000e 1A74     		strb	r2, [r3, #16]
  95:src/keys.c    **** 	return r;
 2862              		.loc 1 95 2 is_stmt 1 view .LVU909
  95:src/keys.c    **** 	return r;
 2863              		.loc 1 95 19 is_stmt 0 view .LVU910
 2864 0010 5A73     		strb	r2, [r3, #13]
  96:src/keys.c    **** }
 2865              		.loc 1 96 2 is_stmt 1 view .LVU911
 2866              	.LVL209:
  96:src/keys.c    **** }
 2867              		.loc 1 96 2 is_stmt 0 view .LVU912
 2868              	.LBE375:
 2869              	.LBE376:
 104:src/keys.c    **** 
 2870              		.loc 1 104 1 view .LVU913
 2871 0012 08BD     		pop	{r3, pc}
 2872              	.L321:
 2873              		.align	2
 2874              	.L320:
 2875 0014 00000000 		.word	StateWhileOn
 2876              		.cfi_endproc
 2877              	.LFE2:
 2879              		.section	.text.keycode_to_row_column,"ax",%progbits
 2880              		.align	1
 2881              		.p2align 2,,3
 2882              		.global	keycode_to_row_column
 2883              		.syntax unified
 2884              		.thumb
 2885              		.thumb_func
 2886              		.fpu fpv4-sp-d16
 2888              	keycode_to_row_column:
 2889              	.LVL210:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 113


 2890              	.LFB6:
 177:src/keys.c    **** 	return 11 + ( c / 6 ) * 10 + c % 6;
 2891              		.loc 1 177 1 is_stmt 1 view -0
 2892              		.cfi_startproc
 2893              		@ args = 0, pretend = 0, frame = 0
 2894              		@ frame_needed = 0, uses_anonymous_args = 0
 2895              		@ link register save eliminated.
 178:src/keys.c    **** }
 2896              		.loc 1 178 2 view .LVU915
 178:src/keys.c    **** }
 2897              		.loc 1 178 18 is_stmt 0 view .LVU916
 2898 0000 074A     		ldr	r2, .L323
 2899 0002 82FB0032 		smull	r3, r2, r2, r0
 2900 0006 A2EBE073 		sub	r3, r2, r0, asr #31
 178:src/keys.c    **** }
 2901              		.loc 1 178 24 view .LVU917
 2902 000a 03EB8302 		add	r2, r3, r3, lsl #2
 2903 000e 5200     		lsls	r2, r2, #1
 178:src/keys.c    **** }
 2904              		.loc 1 178 33 view .LVU918
 2905 0010 03EB4303 		add	r3, r3, r3, lsl #1
 2906 0014 A0EB4303 		sub	r3, r0, r3, lsl #1
 178:src/keys.c    **** }
 2907              		.loc 1 178 12 view .LVU919
 2908 0018 02F10B00 		add	r0, r2, #11
 2909              	.LVL211:
 179:src/keys.c    **** 
 2910              		.loc 1 179 1 view .LVU920
 2911 001c 1844     		add	r0, r0, r3
 2912 001e 7047     		bx	lr
 2913              	.L324:
 2914              		.align	2
 2915              	.L323:
 2916 0020 ABAAAA2A 		.word	715827883
 2917              		.cfi_endproc
 2918              	.LFE6:
 2920              		.section	.text.row_column_to_keycode,"ax",%progbits
 2921              		.align	1
 2922              		.p2align 2,,3
 2923              		.global	row_column_to_keycode
 2924              		.syntax unified
 2925              		.thumb
 2926              		.thumb_func
 2927              		.fpu fpv4-sp-d16
 2929              	row_column_to_keycode:
 2930              	.LVL212:
 2931              	.LFB7:
 188:src/keys.c    **** 	int row = c / 10 - 1;
 2932              		.loc 1 188 1 is_stmt 1 view -0
 2933              		.cfi_startproc
 2934              		@ args = 0, pretend = 0, frame = 0
 2935              		@ frame_needed = 0, uses_anonymous_args = 0
 2936              		@ link register save eliminated.
 189:src/keys.c    **** 	int col = c % 10 - 1;
 2937              		.loc 1 189 2 view .LVU922
 189:src/keys.c    **** 	int col = c % 10 - 1;
 2938              		.loc 1 189 14 is_stmt 0 view .LVU923
ARM GAS  /tmp/ccJ0w3QJ.s 			page 114


 2939 0000 0E4A     		ldr	r2, .L331
 2940 0002 82FB0032 		smull	r3, r2, r2, r0
 2941 0006 C317     		asrs	r3, r0, #31
 2942 0008 C3EBA203 		rsb	r3, r3, r2, asr #2
 190:src/keys.c    **** 
 2943              		.loc 1 190 14 view .LVU924
 2944 000c 03EB8302 		add	r2, r3, r3, lsl #2
 189:src/keys.c    **** 	int col = c % 10 - 1;
 2945              		.loc 1 189 6 view .LVU925
 2946 0010 013B     		subs	r3, r3, #1
 2947              	.LVL213:
 190:src/keys.c    **** 
 2948              		.loc 1 190 2 is_stmt 1 view .LVU926
 190:src/keys.c    **** 
 2949              		.loc 1 190 14 is_stmt 0 view .LVU927
 2950 0012 A0EB4200 		sub	r0, r0, r2, lsl #1
 2951              	.LVL214:
 192:src/keys.c    **** 		return -1;
 2952              		.loc 1 192 5 view .LVU928
 2953 0016 062B     		cmp	r3, #6
 190:src/keys.c    **** 
 2954              		.loc 1 190 6 view .LVU929
 2955 0018 00F1FF30 		add	r0, r0, #-1
 2956              	.LVL215:
 192:src/keys.c    **** 		return -1;
 2957              		.loc 1 192 2 is_stmt 1 view .LVU930
 192:src/keys.c    **** 		return -1;
 2958              		.loc 1 192 5 is_stmt 0 view .LVU931
 2959 001c 0AD8     		bhi	.L330
 192:src/keys.c    **** 		return -1;
 2960              		.loc 1 192 36 discriminator 1 view .LVU932
 2961 001e 012B     		cmp	r3, #1
 2962 0020 CCBF     		ite	gt
 2963 0022 0422     		movgt	r2, #4
 2964 0024 0522     		movle	r2, #5
 192:src/keys.c    **** 		return -1;
 2965              		.loc 1 192 25 discriminator 1 view .LVU933
 2966 0026 8242     		cmp	r2, r0
 2967 0028 04DB     		blt	.L330
 194:src/keys.c    **** }
 2968              		.loc 1 194 2 is_stmt 1 view .LVU934
 194:src/keys.c    **** }
 2969              		.loc 1 194 13 is_stmt 0 view .LVU935
 2970 002a 03EB4303 		add	r3, r3, r3, lsl #1
 2971              	.LVL216:
 194:src/keys.c    **** }
 2972              		.loc 1 194 17 view .LVU936
 2973 002e 00EB4300 		add	r0, r0, r3, lsl #1
 2974              	.LVL217:
 194:src/keys.c    **** }
 2975              		.loc 1 194 17 view .LVU937
 2976 0032 7047     		bx	lr
 2977              	.LVL218:
 2978              	.L330:
 193:src/keys.c    **** 	return row * 6 + col;
 2979              		.loc 1 193 10 view .LVU938
 2980 0034 4FF0FF30 		mov	r0, #-1
ARM GAS  /tmp/ccJ0w3QJ.s 			page 115


 2981              	.LVL219:
 195:src/keys.c    **** 
 2982              		.loc 1 195 1 view .LVU939
 2983 0038 7047     		bx	lr
 2984              	.L332:
 2985 003a 00BF     		.align	2
 2986              	.L331:
 2987 003c 67666666 		.word	1717986919
 2988              		.cfi_endproc
 2989              	.LFE7:
 2991              		.section	.text.keycode_to_digit_or_register,"ax",%progbits
 2992              		.align	1
 2993              		.p2align 2,,3
 2994              		.global	keycode_to_digit_or_register
 2995              		.syntax unified
 2996              		.thumb
 2997              		.thumb_func
 2998              		.fpu fpv4-sp-d16
 3000              	keycode_to_digit_or_register:
 3001              	.LVL220:
 3002              	.LFB8:
 209:src/keys.c    ****   static const unsigned char map[] = {
 3003              		.loc 1 209 1 is_stmt 1 view -0
 3004              		.cfi_startproc
 3005              		@ args = 0, pretend = 0, frame = 0
 3006              		@ frame_needed = 0, uses_anonymous_args = 0
 3007              		@ link register save eliminated.
 210:src/keys.c    ****     // K00 - K05
 3008              		.loc 1 210 3 view .LVU941
 231:src/keys.c    **** }
 3009              		.loc 1 231 3 view .LVU942
 3010              	.LBB377:
 3011              	.LBI377:
 124:src/keys.c    **** {
 3012              		.loc 1 124 12 view .LVU943
 3013              	.LBB378:
 126:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3014              		.loc 1 126 2 view .LVU944
 136:src/keys.c    **** }
 3015              		.loc 1 136 2 view .LVU945
 136:src/keys.c    **** }
 3016              		.loc 1 136 23 is_stmt 0 view .LVU946
 3017 0000 024B     		ldr	r3, .L334
 3018              	.LBE378:
 3019              	.LBE377:
 231:src/keys.c    **** }
 3020              		.loc 1 231 28 view .LVU947
 3021 0002 034A     		ldr	r2, .L334+4
 3022              	.LBB380:
 3023              	.LBB379:
 136:src/keys.c    **** }
 3024              		.loc 1 136 23 view .LVU948
 3025 0004 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 3026              	.LBE379:
 3027              	.LBE380:
 232:src/keys.c    **** #else
 3028              		.loc 1 232 1 view .LVU949
ARM GAS  /tmp/ccJ0w3QJ.s 			page 116


 3029 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 3030              	.LVL221:
 232:src/keys.c    **** #else
 3031              		.loc 1 232 1 view .LVU950
 3032 0008 7047     		bx	lr
 3033              	.L335:
 3034 000a 00BF     		.align	2
 3035              	.L334:
 3036 000c 00000000 		.word	.LANCHOR1
 3037 0010 00000000 		.word	.LANCHOR0
 3038              		.cfi_endproc
 3039              	.LFE8:
 3041              		.section	.text.init_state,"ax",%progbits
 3042              		.align	1
 3043              		.p2align 2,,3
 3044              		.global	init_state
 3045              		.syntax unified
 3046              		.thumb
 3047              		.thumb_func
 3048              		.fpu fpv4-sp-d16
 3050              	init_state:
 3051              	.LFB13:
 582:src/keys.c    **** #ifndef REALBUILD
 3052              		.loc 1 582 23 is_stmt 1 view -0
 3053              		.cfi_startproc
 3054              		@ args = 0, pretend = 0, frame = 0
 3055              		@ frame_needed = 0, uses_anonymous_args = 0
 584:src/keys.c    **** 	unsigned int b = State2.trace;
 3056              		.loc 1 584 2 view .LVU952
 582:src/keys.c    **** #ifndef REALBUILD
 3057              		.loc 1 582 23 is_stmt 0 view .LVU953
 3058 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3059              		.cfi_def_cfa_offset 24
 3060              		.cfi_offset 4, -24
 3061              		.cfi_offset 5, -20
 3062              		.cfi_offset 6, -16
 3063              		.cfi_offset 7, -12
 3064              		.cfi_offset 8, -8
 3065              		.cfi_offset 14, -4
 584:src/keys.c    **** 	unsigned int b = State2.trace;
 3066              		.loc 1 584 25 view .LVU954
 3067 0004 154C     		ldr	r4, .L338
 592:src/keys.c    **** 	// Removed: will clear any locals on power off
 3068              		.loc 1 592 10 view .LVU955
 3069 0006 0021     		movs	r1, #0
 596:src/keys.c    **** 	State2.test = TST_NONE;
 3070              		.loc 1 596 2 view .LVU956
 3071 0008 1422     		movs	r2, #20
 3072 000a 04F10800 		add	r0, r4, #8
 592:src/keys.c    **** 	// Removed: will clear any locals on power off
 3073              		.loc 1 592 10 view .LVU957
 3074 000e E177     		strb	r1, [r4, #31]
 584:src/keys.c    **** 	unsigned int b = State2.trace;
 3075              		.loc 1 584 25 view .LVU958
 3076 0010 257E     		ldrb	r5, [r4, #24]	@ zero_extendqisi2
 585:src/keys.c    **** #else
 3077              		.loc 1 585 25 view .LVU959
ARM GAS  /tmp/ccJ0w3QJ.s 			page 117


 3078 0012 E67D     		ldrb	r6, [r4, #23]	@ zero_extendqisi2
 589:src/keys.c    **** 	int k = LastKey;
 3079              		.loc 1 589 10 view .LVU960
 3080 0014 A77C     		ldrb	r7, [r4, #18]	@ zero_extendqisi2
 590:src/keys.c    **** 
 3081              		.loc 1 590 10 view .LVU961
 3082 0016 94F91380 		ldrsb	r8, [r4, #19]
 596:src/keys.c    **** 	State2.test = TST_NONE;
 3083              		.loc 1 596 2 view .LVU962
 3084 001a FFF7FEFF 		bl	xset
 3085              	.LVL222:
 598:src/keys.c    **** 	update_program_bounds(1);
 3086              		.loc 1 598 17 view .LVU963
 3087 001e A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 597:src/keys.c    **** 	State2.runmode = 1;
 3088              		.loc 1 597 14 view .LVU964
 3089 0020 0722     		movs	r2, #7
 598:src/keys.c    **** 	update_program_bounds(1);
 3090              		.loc 1 598 17 view .LVU965
 3091 0022 43F04003 		orr	r3, r3, #64
 599:src/keys.c    **** 	set_lift();
 3092              		.loc 1 599 2 view .LVU966
 3093 0026 0120     		movs	r0, #1
 597:src/keys.c    **** 	State2.runmode = 1;
 3094              		.loc 1 597 14 view .LVU967
 3095 0028 E273     		strb	r2, [r4, #15]
 598:src/keys.c    **** 	update_program_bounds(1);
 3096              		.loc 1 598 17 view .LVU968
 3097 002a A375     		strb	r3, [r4, #22]
 599:src/keys.c    **** 	set_lift();
 3098              		.loc 1 599 2 view .LVU969
 3099 002c FFF7FEFF 		bl	update_program_bounds
 3100              	.LVL223:
 600:src/keys.c    **** 
 3101              		.loc 1 600 2 view .LVU970
 3102 0030 FFF7FEFF 		bl	set_lift
 3103              	.LVL224:
 607:src/keys.c    **** 	State2.flags = a;
 3104              		.loc 1 607 15 view .LVU971
 3105 0034 E27D     		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 608:src/keys.c    **** #else
 3106              		.loc 1 608 15 view .LVU972
 3107 0036 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 612:src/keys.c    **** }
 3108              		.loc 1 612 15 view .LVU973
 3109 0038 0949     		ldr	r1, .L338+4
 605:src/keys.c    **** #ifndef REALBUILD
 3110              		.loc 1 605 10 view .LVU974
 3111 003a 84F81380 		strb	r8, [r4, #19]
 584:src/keys.c    **** 	unsigned int b = State2.trace;
 3112              		.loc 1 584 25 view .LVU975
 3113 003e 05F00105 		and	r5, r5, #1
 3114              	.LVL225:
 585:src/keys.c    **** #else
 3115              		.loc 1 585 2 is_stmt 1 view .LVU976
 585:src/keys.c    **** #else
 3116              		.loc 1 585 25 is_stmt 0 view .LVU977
ARM GAS  /tmp/ccJ0w3QJ.s 			page 118


 3117 0042 F609     		lsrs	r6, r6, #7
 3118              	.LVL226:
 589:src/keys.c    **** 	int k = LastKey;
 3119              		.loc 1 589 2 is_stmt 1 view .LVU978
 589:src/keys.c    **** 	int k = LastKey;
 3120              		.loc 1 589 10 is_stmt 0 view .LVU979
 3121 0044 FFB2     		uxtb	r7, r7
 3122              	.LVL227:
 590:src/keys.c    **** 
 3123              		.loc 1 590 2 is_stmt 1 view .LVU980
 592:src/keys.c    **** 	// Removed: will clear any locals on power off
 3124              		.loc 1 592 2 view .LVU981
 596:src/keys.c    **** 	State2.test = TST_NONE;
 3125              		.loc 1 596 2 view .LVU982
 597:src/keys.c    **** 	State2.runmode = 1;
 3126              		.loc 1 597 2 view .LVU983
 598:src/keys.c    **** 	update_program_bounds(1);
 3127              		.loc 1 598 2 view .LVU984
 599:src/keys.c    **** 	set_lift();
 3128              		.loc 1 599 2 view .LVU985
 600:src/keys.c    **** 
 3129              		.loc 1 600 2 view .LVU986
 604:src/keys.c    **** 	LastKey = k;
 3130              		.loc 1 604 2 view .LVU987
 607:src/keys.c    **** 	State2.flags = a;
 3131              		.loc 1 607 15 is_stmt 0 view .LVU988
 3132 0046 66F3C712 		bfi	r2, r6, #7, #1
 608:src/keys.c    **** #else
 3133              		.loc 1 608 15 view .LVU989
 3134 004a 65F30003 		bfi	r3, r5, #0, #1
 612:src/keys.c    **** }
 3135              		.loc 1 612 15 view .LVU990
 3136 004e 6420     		movs	r0, #100
 607:src/keys.c    **** 	State2.flags = a;
 3137              		.loc 1 607 15 view .LVU991
 3138 0050 E275     		strb	r2, [r4, #23]
 608:src/keys.c    **** #else
 3139              		.loc 1 608 15 view .LVU992
 3140 0052 2376     		strb	r3, [r4, #24]
 604:src/keys.c    **** 	LastKey = k;
 3141              		.loc 1 604 10 view .LVU993
 3142 0054 A774     		strb	r7, [r4, #18]
 605:src/keys.c    **** #ifndef REALBUILD
 3143              		.loc 1 605 2 is_stmt 1 view .LVU994
 607:src/keys.c    **** 	State2.flags = a;
 3144              		.loc 1 607 2 view .LVU995
 608:src/keys.c    **** #else
 3145              		.loc 1 608 2 view .LVU996
 612:src/keys.c    **** }
 3146              		.loc 1 612 2 view .LVU997
 612:src/keys.c    **** }
 3147              		.loc 1 612 15 is_stmt 0 view .LVU998
 3148 0056 0860     		str	r0, [r1]
 613:src/keys.c    **** 
 3149              		.loc 1 613 1 view .LVU999
 3150 0058 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3151              	.LVL228:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 119


 3152              	.L339:
 613:src/keys.c    **** 
 3153              		.loc 1 613 1 view .LVU1000
 3154              		.align	2
 3155              	.L338:
 3156 005c 00000000 		.word	StateWhileOn
 3157 0060 00000000 		.word	ShowRegister
 3158              		.cfi_endproc
 3159              	.LFE13:
 3161              		.section	.text.soft_init_state,"ax",%progbits
 3162              		.align	1
 3163              		.p2align 2,,3
 3164              		.global	soft_init_state
 3165              		.syntax unified
 3166              		.thumb
 3167              		.thumb_func
 3168              		.fpu fpv4-sp-d16
 3170              	soft_init_state:
 3171              	.LFB14:
 615:src/keys.c    **** 	int soft;
 3172              		.loc 1 615 28 is_stmt 1 view -0
 3173              		.cfi_startproc
 3174              		@ args = 0, pretend = 0, frame = 0
 3175              		@ frame_needed = 0, uses_anonymous_args = 0
 616:src/keys.c    **** 	unsigned int runmode;
 3176              		.loc 1 616 2 view .LVU1002
 617:src/keys.c    **** 	unsigned int alphas;
 3177              		.loc 1 617 2 view .LVU1003
 618:src/keys.c    **** 
 3178              		.loc 1 618 2 view .LVU1004
 620:src/keys.c    **** 		CmdLineLength = 0;
 3179              		.loc 1 620 2 view .LVU1005
 615:src/keys.c    **** 	int soft;
 3180              		.loc 1 615 28 is_stmt 0 view .LVU1006
 3181 0000 38B5     		push	{r3, r4, r5, lr}
 3182              		.cfi_def_cfa_offset 16
 3183              		.cfi_offset 3, -16
 3184              		.cfi_offset 4, -12
 3185              		.cfi_offset 5, -8
 3186              		.cfi_offset 14, -4
 620:src/keys.c    **** 		CmdLineLength = 0;
 3187              		.loc 1 620 6 view .LVU1007
 3188 0002 114C     		ldr	r4, .L347
 620:src/keys.c    **** 		CmdLineLength = 0;
 3189              		.loc 1 620 5 view .LVU1008
 3190 0004 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 3191 0006 D3B9     		cbnz	r3, .L346
 626:src/keys.c    **** 			State2.cmplx || State2.arrow || State2.test != TST_NONE || State2.status;
 3192              		.loc 1 626 2 is_stmt 1 view .LVU1009
 627:src/keys.c    **** 	runmode = State2.runmode;
 3193              		.loc 1 627 17 is_stmt 0 view .LVU1010
 3194 0008 104A     		ldr	r2, .L347+4
 3195 000a 6369     		ldr	r3, [r4, #20]
 627:src/keys.c    **** 	runmode = State2.runmode;
 3196              		.loc 1 627 60 view .LVU1011
 3197 000c 1A42     		tst	r2, r3
 3198 000e 0AD0     		beq	.L343
ARM GAS  /tmp/ccJ0w3QJ.s 			page 120


 3199              	.L344:
 3200              	.LVL229:
 628:src/keys.c    **** 	alphas = State2.alphas;
 3201              		.loc 1 628 2 is_stmt 1 view .LVU1012
 629:src/keys.c    **** 	init_state();
 3202              		.loc 1 629 17 is_stmt 0 view .LVU1013
 3203 0010 A57D     		ldrb	r5, [r4, #22]	@ zero_extendqisi2
 3204              	.LVL230:
 629:src/keys.c    **** 	init_state();
 3205              		.loc 1 629 2 is_stmt 1 view .LVU1014
 630:src/keys.c    **** 	if (soft) {
 3206              		.loc 1 630 2 view .LVU1015
 3207 0012 FFF7FEFF 		bl	init_state
 3208              	.LVL231:
 631:src/keys.c    **** 		State2.runmode = runmode;
 3209              		.loc 1 631 2 view .LVU1016
 632:src/keys.c    **** 		State2.alphas = alphas;
 3210              		.loc 1 632 3 view .LVU1017
 633:src/keys.c    **** 	}
 3211              		.loc 1 633 3 view .LVU1018
 633:src/keys.c    **** 	}
 3212              		.loc 1 633 17 is_stmt 0 view .LVU1019
 3213 0016 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 3214 0018 05F04805 		and	r5, r5, #72
 3215 001c 23F04803 		bic	r3, r3, #72
 3216 0020 2B43     		orrs	r3, r3, r5
 3217 0022 A375     		strb	r3, [r4, #22]
 635:src/keys.c    **** 
 3218              		.loc 1 635 1 view .LVU1020
 3219 0024 38BD     		pop	{r3, r4, r5, pc}
 3220              	.LVL232:
 3221              	.L343:
 627:src/keys.c    **** 	runmode = State2.runmode;
 3222              		.loc 1 627 60 discriminator 2 view .LVU1021
 3223 0026 E368     		ldr	r3, [r4, #12]
 3224 0028 23F47F03 		bic	r3, r3, #16711680
 3225 002c 23F47F43 		bic	r3, r3, #65280
 3226 0030 B3F1E06F 		cmp	r3, #117440512
 3227 0034 ECD1     		bne	.L344
 3228              	.LVL233:
 628:src/keys.c    **** 	alphas = State2.alphas;
 3229              		.loc 1 628 2 is_stmt 1 view .LVU1022
 629:src/keys.c    **** 	init_state();
 3230              		.loc 1 629 2 view .LVU1023
 630:src/keys.c    **** 	if (soft) {
 3231              		.loc 1 630 2 view .LVU1024
 635:src/keys.c    **** 
 3232              		.loc 1 635 1 is_stmt 0 view .LVU1025
 3233 0036 BDE83840 		pop	{r3, r4, r5, lr}
 3234              		.cfi_remember_state
 3235              		.cfi_restore 14
 3236              		.cfi_restore 5
 3237              		.cfi_restore 4
 3238              		.cfi_restore 3
 3239              		.cfi_def_cfa_offset 0
 630:src/keys.c    **** 	if (soft) {
 3240              		.loc 1 630 2 view .LVU1026
ARM GAS  /tmp/ccJ0w3QJ.s 			page 121


 3241 003a FFF7FEBF 		b	init_state
 3242              	.LVL234:
 3243              	.L346:
 3244              		.cfi_restore_state
 3245              	.LBB383:
 3246              	.LBI383:
 615:src/keys.c    **** 	int soft;
 3247              		.loc 1 615 6 is_stmt 1 view .LVU1027
 3248              	.LBB384:
 621:src/keys.c    **** 		CmdLineEex = 0;
 3249              		.loc 1 621 3 view .LVU1028
 622:src/keys.c    **** 		CmdLineDot = 0;
 3250              		.loc 1 622 3 view .LVU1029
 623:src/keys.c    **** 		return;
 3251              		.loc 1 623 3 view .LVU1030
 621:src/keys.c    **** 		CmdLineEex = 0;
 3252              		.loc 1 621 17 is_stmt 0 view .LVU1031
 3253 003e 0023     		movs	r3, #0
 3254 0040 A383     		strh	r3, [r4, #28]	@ movhi
 623:src/keys.c    **** 		return;
 3255              		.loc 1 623 14 view .LVU1032
 3256 0042 A377     		strb	r3, [r4, #30]
 624:src/keys.c    **** 	}
 3257              		.loc 1 624 3 is_stmt 1 view .LVU1033
 3258              	.LBE384:
 3259              	.LBE383:
 635:src/keys.c    **** 
 3260              		.loc 1 635 1 is_stmt 0 view .LVU1034
 3261 0044 38BD     		pop	{r3, r4, r5, pc}
 3262              	.L348:
 3263 0046 00BF     		.align	2
 3264              	.L347:
 3265 0048 00000000 		.word	StateWhileOn
 3266 004c 002F2004 		.word	69218048
 3267              		.cfi_endproc
 3268              	.LFE14:
 3270              		.section	.text.current_catalogue_max,"ax",%progbits
 3271              		.align	1
 3272              		.p2align 2,,3
 3273              		.global	current_catalogue_max
 3274              		.syntax unified
 3275              		.thumb
 3276              		.thumb_func
 3277              		.fpu fpv4-sp-d16
 3279              	current_catalogue_max:
 3280              	.LFB39:
2040:src/keys.c    **** 	// A quick table of catalogue sizes
 3281              		.loc 1 2040 33 is_stmt 1 view -0
 3282              		.cfi_startproc
 3283              		@ args = 0, pretend = 0, frame = 0
 3284              		@ frame_needed = 0, uses_anonymous_args = 0
 3285              		@ link register save eliminated.
2043:src/keys.c    **** 	{
 3286              		.loc 1 2043 2 view .LVU1036
2074:src/keys.c    **** #endif
 3287              		.loc 1 2074 2 view .LVU1037
2074:src/keys.c    **** #endif
ARM GAS  /tmp/ccJ0w3QJ.s 			page 122


 3288              		.loc 1 2074 31 is_stmt 0 view .LVU1038
 3289 0000 024B     		ldr	r3, .L350
2074:src/keys.c    **** #endif
 3290              		.loc 1 2074 24 view .LVU1039
 3291 0002 034A     		ldr	r2, .L350+4
2074:src/keys.c    **** #endif
 3292              		.loc 1 2074 31 view .LVU1040
 3293 0004 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2076:src/keys.c    **** 
 3294              		.loc 1 2076 1 view .LVU1041
 3295 0006 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 3296 0008 7047     		bx	lr
 3297              	.L351:
 3298 000a 00BF     		.align	2
 3299              	.L350:
 3300 000c 00000000 		.word	StateWhileOn
 3301 0010 00000000 		.word	.LANCHOR2
 3302              		.cfi_endproc
 3303              	.LFE39:
 3305              		.section	.text.current_catalogue,"ax",%progbits
 3306              		.align	1
 3307              		.p2align 2,,3
 3308              		.global	current_catalogue
 3309              		.syntax unified
 3310              		.thumb
 3311              		.thumb_func
 3312              		.fpu fpv4-sp-d16
 3314              	current_catalogue:
 3315              	.LVL235:
 3316              	.LFB41:
2089:src/keys.c    **** 	// A quick table of catalogue tables
 3317              		.loc 1 2089 33 is_stmt 1 view -0
 3318              		.cfi_startproc
 3319              		@ args = 0, pretend = 0, frame = 0
 3320              		@ frame_needed = 0, uses_anonymous_args = 0
 3321              		@ link register save eliminated.
2092:src/keys.c    **** 	{
 3322              		.loc 1 2092 2 view .LVU1043
2119:src/keys.c    **** 	unsigned int c = State2.catalogue;
 3323              		.loc 1 2119 2 view .LVU1044
2120:src/keys.c    **** 	int m, i;
 3324              		.loc 1 2120 2 view .LVU1045
2120:src/keys.c    **** 	int m, i;
 3325              		.loc 1 2120 25 is_stmt 0 view .LVU1046
 3326 0000 314A     		ldr	r2, .L379
2120:src/keys.c    **** 	int m, i;
 3327              		.loc 1 2120 15 view .LVU1047
 3328 0002 937B     		ldrb	r3, [r2, #14]	@ zero_extendqisi2
 3329              	.LVL236:
2121:src/keys.c    **** 	unsigned p, q;
 3330              		.loc 1 2121 2 is_stmt 1 view .LVU1048
2122:src/keys.c    **** 
 3331              		.loc 1 2122 2 view .LVU1049
2124:src/keys.c    **** 		if (n == OP_ZERO)
 3332              		.loc 1 2124 2 view .LVU1050
2124:src/keys.c    **** 		if (n == OP_ZERO)
 3333              		.loc 1 2124 5 is_stmt 0 view .LVU1051
ARM GAS  /tmp/ccJ0w3QJ.s 			page 123


 3334 0004 102B     		cmp	r3, #16
 3335 0006 39D0     		beq	.L373
2129:src/keys.c    **** 		if (n == OP_ZERO)
 3336              		.loc 1 2129 2 is_stmt 1 view .LVU1052
2129:src/keys.c    **** 		if (n == OP_ZERO)
 3337              		.loc 1 2129 5 is_stmt 0 view .LVU1053
 3338 0008 112B     		cmp	r3, #17
 3339 000a 32D0     		beq	.L374
2134:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 3340              		.loc 1 2134 2 is_stmt 1 view .LVU1054
2134:src/keys.c    **** 		const int cnv = conv_catalogue[n];
 3341              		.loc 1 2134 5 is_stmt 0 view .LVU1055
 3342 000c 122B     		cmp	r3, #18
 3343 000e 45D0     		beq	.L375
2147:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 3344              		.loc 1 2147 2 is_stmt 1 view .LVU1056
2147:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 3345              		.loc 1 2147 5 is_stmt 0 view .LVU1057
 3346 0010 0E2B     		cmp	r3, #14
 3347 0012 38D0     		beq	.L376
2150:src/keys.c    **** 
 3348              		.loc 1 2150 3 is_stmt 1 view .LVU1058
2150:src/keys.c    **** 
 3349              		.loc 1 2150 7 is_stmt 0 view .LVU1059
 3350 0014 2D4A     		ldr	r2, .L379+4
2152:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3351              		.loc 1 2152 35 view .LVU1060
 3352 0016 A3F10B01 		sub	r1, r3, #11
2152:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3353              		.loc 1 2152 5 view .LVU1061
 3354 001a 0429     		cmp	r1, #4
2150:src/keys.c    **** 
 3355              		.loc 1 2150 7 view .LVU1062
 3356 001c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 3357              	.LVL237:
2152:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3358              		.loc 1 2152 2 is_stmt 1 view .LVU1063
2152:src/keys.c    **** 		return alpha_code(n, (const char *) cat);
 3359              		.loc 1 2152 5 is_stmt 0 view .LVU1064
 3360 0020 38D9     		bls	.L359
2155:src/keys.c    **** 		return OP_NIL | OP_NOP;
 3361              		.loc 1 2155 2 is_stmt 1 view .LVU1065
2155:src/keys.c    **** 		return OP_NIL | OP_NOP;
 3362              		.loc 1 2155 5 is_stmt 0 view .LVU1066
 3363 0022 142B     		cmp	r3, #20
 3364 0024 4DD8     		bhi	.L367
2159:src/keys.c    **** 	p = cat[0];
 3365              		.loc 1 2159 2 is_stmt 1 view .LVU1067
2089:src/keys.c    **** 	// A quick table of catalogue tables
 3366              		.loc 1 2089 33 is_stmt 0 view .LVU1068
 3367 0026 10B4     		push	{r4}
 3368              		.cfi_def_cfa_offset 4
 3369              		.cfi_offset 4, -4
2159:src/keys.c    **** 	p = cat[0];
 3370              		.loc 1 2159 11 view .LVU1069
 3371 0028 00EBA001 		add	r1, r0, r0, asr #2
2159:src/keys.c    **** 	p = cat[0];
ARM GAS  /tmp/ccJ0w3QJ.s 			page 124


 3372              		.loc 1 2159 6 view .LVU1070
 3373 002c 5318     		adds	r3, r2, r1
 3374              	.LVL238:
2160:src/keys.c    **** 	q = cat[1];
 3375              		.loc 1 2160 2 is_stmt 1 view .LVU1071
2161:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3376              		.loc 1 2161 2 view .LVU1072
2162:src/keys.c    **** 
 3377              		.loc 1 2162 2 view .LVU1073
2162:src/keys.c    **** 
 3378              		.loc 1 2162 35 is_stmt 0 view .LVU1074
 3379 002e 4000     		lsls	r0, r0, #1
 3380              	.LVL239:
2160:src/keys.c    **** 	q = cat[1];
 3381              		.loc 1 2160 4 view .LVU1075
 3382 0030 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 3383              	.LVL240:
2161:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3384              		.loc 1 2161 4 view .LVU1076
 3385 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3386              	.LVL241:
2161:src/keys.c    **** 	m = 0x3ff & ((p << (2 + ((n & 3) << 1))) | (q >> (6 - ((n & 3) << 1))));
 3387              		.loc 1 2161 4 view .LVU1077
 3388 0034 2649     		ldr	r1, .L379+8
 3389              	.LVL242:
2162:src/keys.c    **** 
 3390              		.loc 1 2162 54 view .LVU1078
 3391 0036 C443     		mvns	r4, r0
2162:src/keys.c    **** 
 3392              		.loc 1 2162 35 view .LVU1079
 3393 0038 00F00600 		and	r0, r0, #6
2162:src/keys.c    **** 
 3394              		.loc 1 2162 54 view .LVU1080
 3395 003c 04F00604 		and	r4, r4, #6
2162:src/keys.c    **** 
 3396              		.loc 1 2162 24 view .LVU1081
 3397 0040 0230     		adds	r0, r0, #2
2162:src/keys.c    **** 
 3398              		.loc 1 2162 48 view .LVU1082
 3399 0042 E340     		lsrs	r3, r3, r4
 3400              	.LVL243:
2162:src/keys.c    **** 
 3401              		.loc 1 2162 18 view .LVU1083
 3402 0044 02FA00F0 		lsl	r0, r2, r0
2162:src/keys.c    **** 
 3403              		.loc 1 2162 43 view .LVU1084
 3404 0048 1843     		orrs	r0, r0, r3
2162:src/keys.c    **** 
 3405              		.loc 1 2162 4 view .LVU1085
 3406 004a C0F30903 		ubfx	r3, r0, #0, #10
 3407              	.LVL244:
2165:src/keys.c    **** 		if (m < opcode_breaks[i])
 3408              		.loc 1 2165 2 is_stmt 1 view .LVU1086
2165:src/keys.c    **** 		if (m < opcode_breaks[i])
 3409              		.loc 1 2165 12 view .LVU1087
2162:src/keys.c    **** 
 3410              		.loc 1 2162 4 is_stmt 0 view .LVU1088
ARM GAS  /tmp/ccJ0w3QJ.s 			page 125


 3411 004e 3422     		movs	r2, #52
 3412              	.LVL245:
2165:src/keys.c    **** 		if (m < opcode_breaks[i])
 3413              		.loc 1 2165 8 view .LVU1089
 3414 0050 0020     		movs	r0, #0
 3415 0052 01E0     		b	.L363
 3416              	.LVL246:
 3417              	.L378:
2165:src/keys.c    **** 		if (m < opcode_breaks[i])
 3418              		.loc 1 2165 8 view .LVU1090
 3419 0054 11F8012B 		ldrb	r2, [r1], #1	@ zero_extendqisi2
 3420              	.LVL247:
 3421              	.L363:
2166:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 3422              		.loc 1 2166 3 is_stmt 1 view .LVU1091
2168:src/keys.c    **** 	}
 3423              		.loc 1 2168 3 view .LVU1092
2166:src/keys.c    **** 			return (i << KIND_SHIFT) + m;
 3424              		.loc 1 2166 6 is_stmt 0 view .LVU1093
 3425 0058 9A42     		cmp	r2, r3
 3426 005a 2FDC     		bgt	.L377
2165:src/keys.c    **** 		if (m < opcode_breaks[i])
 3427              		.loc 1 2165 25 discriminator 2 view .LVU1094
 3428 005c 0130     		adds	r0, r0, #1
 3429              	.LVL248:
2165:src/keys.c    **** 		if (m < opcode_breaks[i])
 3430              		.loc 1 2165 2 discriminator 2 view .LVU1095
 3431 005e 0728     		cmp	r0, #7
2168:src/keys.c    **** 	}
 3432              		.loc 1 2168 5 discriminator 2 view .LVU1096
 3433 0060 A3EB0203 		sub	r3, r3, r2
 3434              	.LVL249:
2165:src/keys.c    **** 		if (m < opcode_breaks[i])
 3435              		.loc 1 2165 24 is_stmt 1 discriminator 2 view .LVU1097
2165:src/keys.c    **** 		if (m < opcode_breaks[i])
 3436              		.loc 1 2165 12 discriminator 2 view .LVU1098
2165:src/keys.c    **** 		if (m < opcode_breaks[i])
 3437              		.loc 1 2165 2 is_stmt 0 discriminator 2 view .LVU1099
 3438 0064 F6D1     		bne	.L378
2170:src/keys.c    **** }
 3439              		.loc 1 2170 2 is_stmt 1 view .LVU1100
2170:src/keys.c    **** }
 3440              		.loc 1 2170 9 is_stmt 0 view .LVU1101
 3441 0066 03F12000 		add	r0, r3, #32
 3442              	.LVL250:
2170:src/keys.c    **** }
 3443              		.loc 1 2170 9 view .LVU1102
 3444 006a 0002     		lsls	r0, r0, #8
 3445              	.L352:
2171:src/keys.c    **** 
 3446              		.loc 1 2171 1 view .LVU1103
 3447 006c 5DF8044B 		ldr	r4, [sp], #4
 3448              		.cfi_restore 4
 3449              		.cfi_def_cfa_offset 0
 3450 0070 7047     		bx	lr
 3451              	.LVL251:
 3452              	.L374:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 126


2130:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 3453              		.loc 1 2130 3 is_stmt 1 view .LVU1104
2130:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM_CMPLX);
 3454              		.loc 1 2130 6 is_stmt 0 view .LVU1105
 3455 0072 4B28     		cmp	r0, #75
 3456 0074 1FD0     		beq	.L365
2132:src/keys.c    **** 	}
 3457              		.loc 1 2132 3 is_stmt 1 view .LVU1106
2132:src/keys.c    **** 	}
 3458              		.loc 1 2132 10 is_stmt 0 view .LVU1107
 3459 0076 40F40450 		orr	r0, r0, #8448
 3460              	.LVL252:
2132:src/keys.c    **** 	}
 3461              		.loc 1 2132 10 view .LVU1108
 3462 007a 7047     		bx	lr
 3463              	.LVL253:
 3464              	.L373:
2125:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 3465              		.loc 1 2125 3 is_stmt 1 view .LVU1109
2125:src/keys.c    **** 			return RARG_BASEOP(RARG_INTNUM);
 3466              		.loc 1 2125 6 is_stmt 0 view .LVU1110
 3467 007c 4B28     		cmp	r0, #75
 3468 007e 17D0     		beq	.L364
2127:src/keys.c    **** 	}
 3469              		.loc 1 2127 3 is_stmt 1 view .LVU1111
2127:src/keys.c    **** 	}
 3470              		.loc 1 2127 10 is_stmt 0 view .LVU1112
 3471 0080 40F40050 		orr	r0, r0, #8192
 3472              	.LVL254:
2127:src/keys.c    **** 	}
 3473              		.loc 1 2127 10 view .LVU1113
 3474 0084 7047     		bx	lr
 3475              	.LVL255:
 3476              	.L376:
2147:src/keys.c    **** 		cat = (const unsigned char *) alpha_letters_lower;
 3477              		.loc 1 2147 35 discriminator 1 view .LVU1114
 3478 0086 917D     		ldrb	r1, [r2, #22]	@ zero_extendqisi2
2148:src/keys.c    **** 	else
 3479              		.loc 1 2148 7 discriminator 1 view .LVU1115
 3480 0088 124B     		ldr	r3, .L379+12
 3481              	.LVL256:
2148:src/keys.c    **** 	else
 3482              		.loc 1 2148 7 discriminator 1 view .LVU1116
 3483 008a 134A     		ldr	r2, .L379+16
 3484              	.LVL257:
2148:src/keys.c    **** 	else
 3485              		.loc 1 2148 7 discriminator 1 view .LVU1117
 3486 008c 11F0100F 		tst	r1, #16
 3487 0090 18BF     		it	ne
 3488 0092 1A46     		movne	r2, r3
 3489              	.L359:
 3490              	.LVL258:
2153:src/keys.c    **** 	}
 3491              		.loc 1 2153 3 is_stmt 1 view .LVU1118
 3492              	.LBB385:
 3493              	.LBI385:
2082:src/keys.c    **** 	return RARG(RARG_ALPHA, tbl[n] & 0xff);
ARM GAS  /tmp/ccJ0w3QJ.s 			page 127


 3494              		.loc 1 2082 15 view .LVU1119
 3495              	.LBB386:
2083:src/keys.c    **** }
 3496              		.loc 1 2083 2 view .LVU1120
2083:src/keys.c    **** }
 3497              		.loc 1 2083 9 is_stmt 0 view .LVU1121
 3498 0094 105C     		ldrb	r0, [r2, r0]	@ zero_extendqisi2
 3499              	.LVL259:
2083:src/keys.c    **** }
 3500              		.loc 1 2083 9 view .LVU1122
 3501 0096 40F48840 		orr	r0, r0, #17408
 3502              	.LVL260:
2083:src/keys.c    **** }
 3503              		.loc 1 2083 9 view .LVU1123
 3504              	.LBE386:
 3505              	.LBE385:
2153:src/keys.c    **** 	}
 3506              		.loc 1 2153 10 view .LVU1124
 3507 009a 7047     		bx	lr
 3508              	.LVL261:
 3509              	.L375:
 3510              	.LBB387:
2135:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3511              		.loc 1 2135 3 is_stmt 1 view .LVU1125
2135:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3512              		.loc 1 2135 33 is_stmt 0 view .LVU1126
 3513 009c 0F4B     		ldr	r3, .L379+20
 3514              	.LVL262:
2135:src/keys.c    **** 		if (cnv >= SIZE_conv_catalogue)
 3515              		.loc 1 2135 13 view .LVU1127
 3516 009e 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 3517              	.LVL263:
2136:src/keys.c    **** 			// Monadic conversion routine
 3518              		.loc 1 2136 3 is_stmt 1 view .LVU1128
2136:src/keys.c    **** 			// Monadic conversion routine
 3519              		.loc 1 2136 6 is_stmt 0 view .LVU1129
 3520 00a0 5728     		cmp	r0, #87
2138:src/keys.c    **** 		else
 3521              		.loc 1 2138 4 is_stmt 1 view .LVU1130
2138:src/keys.c    **** 		else
 3522              		.loc 1 2138 25 is_stmt 0 view .LVU1131
 3523 00a2 C6BF     		itte	gt
 3524 00a4 5838     		subgt	r0, r0, #88
 3525              	.LVL264:
2138:src/keys.c    **** 		else
 3526              		.loc 1 2138 18 view .LVU1132
 3527 00a6 40F40070 		orrgt	r0, r0, #512
2140:src/keys.c    **** 	}
 3528              		.loc 1 2140 4 is_stmt 1 view .LVU1133
2140:src/keys.c    **** 	}
 3529              		.loc 1 2140 11 is_stmt 0 view .LVU1134
 3530 00aa 40F40C40 		orrle	r0, r0, #35840
 3531 00ae 7047     		bx	lr
 3532              	.LVL265:
 3533              	.L364:
2140:src/keys.c    **** 	}
 3534              		.loc 1 2140 11 view .LVU1135
ARM GAS  /tmp/ccJ0w3QJ.s 			page 128


 3535              	.LBE387:
2126:src/keys.c    **** 		return CONST(n);
 3536              		.loc 1 2126 11 view .LVU1136
 3537 00b0 4FF42740 		mov	r0, #42752
 3538              	.LVL266:
2126:src/keys.c    **** 		return CONST(n);
 3539              		.loc 1 2126 11 view .LVU1137
 3540 00b4 7047     		bx	lr
 3541              	.LVL267:
 3542              	.L365:
2131:src/keys.c    **** 		return CONST_CMPLX(n);
 3543              		.loc 1 2131 11 view .LVU1138
 3544 00b6 4FF42840 		mov	r0, #43008
 3545              	.LVL268:
2131:src/keys.c    **** 		return CONST_CMPLX(n);
 3546              		.loc 1 2131 11 view .LVU1139
 3547 00ba 7047     		bx	lr
 3548              	.LVL269:
 3549              	.L377:
 3550              		.cfi_def_cfa_offset 4
 3551              		.cfi_offset 4, -4
2167:src/keys.c    **** 		m -= opcode_breaks[i];
 3552              		.loc 1 2167 4 is_stmt 1 view .LVU1140
2167:src/keys.c    **** 		m -= opcode_breaks[i];
 3553              		.loc 1 2167 29 is_stmt 0 view .LVU1141
 3554 00bc 03EB0020 		add	r0, r3, r0, lsl #8
 3555              	.LVL270:
2167:src/keys.c    **** 		m -= opcode_breaks[i];
 3556              		.loc 1 2167 29 view .LVU1142
 3557 00c0 D4E7     		b	.L352
 3558              	.LVL271:
 3559              	.L367:
 3560              		.cfi_def_cfa_offset 0
 3561              		.cfi_restore 4
2156:src/keys.c    **** 
 3562              		.loc 1 2156 10 view .LVU1143
 3563 00c2 4FF48070 		mov	r0, #256
 3564              	.LVL272:
2171:src/keys.c    **** 
 3565              		.loc 1 2171 1 view .LVU1144
 3566 00c6 7047     		bx	lr
 3567              	.L380:
 3568              		.align	2
 3569              	.L379:
 3570 00c8 00000000 		.word	StateWhileOn
 3571 00cc 00000000 		.word	.LANCHOR6
 3572 00d0 01000000 		.word	.LANCHOR7+1
 3573 00d4 00000000 		.word	.LANCHOR4
 3574 00d8 00000000 		.word	.LANCHOR3
 3575 00dc 00000000 		.word	.LANCHOR5
 3576              		.cfi_endproc
 3577              	.LFE41:
 3579              		.section	.text.process_catalogue,"ax",%progbits
 3580              		.align	1
 3581              		.p2align 2,,3
 3582              		.syntax unified
 3583              		.thumb
ARM GAS  /tmp/ccJ0w3QJ.s 			page 129


 3584              		.thumb_func
 3585              		.fpu fpv4-sp-d16
 3587              	process_catalogue:
 3588              	.LVL273:
 3589              	.LFB43:
2185:src/keys.c    **** 	int pos = State.catpos;
 3590              		.loc 1 2185 92 is_stmt 1 view -0
 3591              		.cfi_startproc
 3592              		@ args = 0, pretend = 0, frame = 16
 3593              		@ frame_needed = 0, uses_anonymous_args = 0
2185:src/keys.c    **** 	int pos = State.catpos;
 3594              		.loc 1 2185 92 is_stmt 0 view .LVU1146
 3595 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3596              		.cfi_def_cfa_offset 36
 3597              		.cfi_offset 4, -36
 3598              		.cfi_offset 5, -32
 3599              		.cfi_offset 6, -28
 3600              		.cfi_offset 7, -24
 3601              		.cfi_offset 8, -20
 3602              		.cfi_offset 9, -16
 3603              		.cfi_offset 10, -12
 3604              		.cfi_offset 11, -8
 3605              		.cfi_offset 14, -4
2186:src/keys.c    **** 	int ch;
 3606              		.loc 1 2186 12 view .LVU1147
 3607 0004 DFF8F092 		ldr	r9, .L495+24
 3608              	.LBB418:
 3609              	.LBB419:
2074:src/keys.c    **** #endif
 3610              		.loc 1 2074 31 view .LVU1148
 3611 0008 B54E     		ldr	r6, .L495
 3612              	.LBE419:
 3613              	.LBE418:
2186:src/keys.c    **** 	int ch;
 3614              		.loc 1 2186 12 view .LVU1149
 3615 000a D9F80040 		ldr	r4, [r9]
 3616              	.LBB424:
 3617              	.LBB420:
2074:src/keys.c    **** #endif
 3618              		.loc 1 2074 31 view .LVU1150
 3619 000e 96F80EA0 		ldrb	r10, [r6, #14]	@ zero_extendqisi2
 3620              	.LBE420:
 3621              	.LBE424:
2186:src/keys.c    **** 	int ch;
 3622              		.loc 1 2186 17 view .LVU1151
 3623 0012 B4F8DC57 		ldrh	r5, [r4, #2012]
 3624              	.LBB425:
 3625              	.LBB421:
2074:src/keys.c    **** #endif
 3626              		.loc 1 2074 24 view .LVU1152
 3627 0016 B34B     		ldr	r3, .L495+4
 3628              	.LBE421:
 3629              	.LBE425:
2186:src/keys.c    **** 	int ch;
 3630              		.loc 1 2186 2 is_stmt 1 view .LVU1153
2185:src/keys.c    **** 	int pos = State.catpos;
 3631              		.loc 1 2185 92 is_stmt 0 view .LVU1154
ARM GAS  /tmp/ccJ0w3QJ.s 			page 130


 3632 0018 85B0     		sub	sp, sp, #20
 3633              		.cfi_def_cfa_offset 56
 3634              	.LBB426:
 3635              	.LBB422:
2074:src/keys.c    **** #endif
 3636              		.loc 1 2074 24 view .LVU1155
 3637 001a 13F80A80 		ldrb	r8, [r3, r10]	@ zero_extendqisi2
 3638              	.LBE422:
 3639              	.LBE426:
2185:src/keys.c    **** 	int pos = State.catpos;
 3640              		.loc 1 2185 92 view .LVU1156
 3641 001e 1746     		mov	r7, r2
2186:src/keys.c    **** 	int ch;
 3642              		.loc 1 2186 6 view .LVU1157
 3643 0020 C5F34615 		ubfx	r5, r5, #5, #7
 3644              	.LVL274:
2187:src/keys.c    **** 	const int ctmax = current_catalogue_max();
 3645              		.loc 1 2187 2 is_stmt 1 view .LVU1158
2188:src/keys.c    **** 	const enum catalogues cat = (enum catalogues) State2.catalogue;
 3646              		.loc 1 2188 2 view .LVU1159
 3647              	.LBB427:
 3648              	.LBI418:
2040:src/keys.c    **** 	// A quick table of catalogue sizes
 3649              		.loc 1 2040 5 view .LVU1160
 3650              	.LBB423:
2043:src/keys.c    **** 	{
 3651              		.loc 1 2043 2 view .LVU1161
2074:src/keys.c    **** #endif
 3652              		.loc 1 2074 2 view .LVU1162
2074:src/keys.c    **** #endif
 3653              		.loc 1 2074 2 is_stmt 0 view .LVU1163
 3654              	.LBE423:
 3655              	.LBE427:
2189:src/keys.c    **** 
 3656              		.loc 1 2189 2 is_stmt 1 view .LVU1164
2191:src/keys.c    **** 		switch (c) {
 3657              		.loc 1 2191 2 view .LVU1165
2191:src/keys.c    **** 		switch (c) {
 3658              		.loc 1 2191 5 is_stmt 0 view .LVU1166
 3659 0024 0029     		cmp	r1, #0
 3660 0026 66D0     		beq	.L480
2256:src/keys.c    **** 		if (cat == CATALOGUE_CONV && c == K01) {
 3661              		.loc 1 2256 9 is_stmt 1 view .LVU1167
2256:src/keys.c    **** 		if (cat == CATALOGUE_CONV && c == K01) {
 3662              		.loc 1 2256 12 is_stmt 0 view .LVU1168
 3663 0028 0129     		cmp	r1, #1
 3664 002a 00F0EE80 		beq	.L481
2290:src/keys.c    **** 		if (c == K24 && cat == CATALOGUE_SUMS) {
 3665              		.loc 1 2290 9 is_stmt 1 view .LVU1169
2290:src/keys.c    **** 		if (c == K24 && cat == CATALOGUE_SUMS) {
 3666              		.loc 1 2290 12 is_stmt 0 view .LVU1170
 3667 002e 0229     		cmp	r1, #2
 3668 0030 00F00C81 		beq	.L482
 3669              	.LVL275:
 3670              	.L417:
 3671              	.LBB428:
 3672              	.LBB429:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 131


 457:src/keys.c    **** }
 3673              		.loc 1 457 2 is_stmt 1 view .LVU1171
 3674              	.LBB430:
 3675              	.LBI430:
 124:src/keys.c    **** {
 3676              		.loc 1 124 12 view .LVU1172
 3677              	.LBB431:
 126:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 3678              		.loc 1 126 2 view .LVU1173
 136:src/keys.c    **** }
 3679              		.loc 1 136 2 view .LVU1174
 136:src/keys.c    **** }
 3680              		.loc 1 136 23 is_stmt 0 view .LVU1175
 3681 0034 AC4B     		ldr	r3, .L495+8
 3682              	.LBE431:
 3683              	.LBE430:
 457:src/keys.c    **** }
 3684              		.loc 1 457 49 view .LVU1176
 3685 0036 AD4A     		ldr	r2, .L495+12
 3686              	.LBB433:
 3687              	.LBB432:
 136:src/keys.c    **** }
 3688              		.loc 1 136 23 view .LVU1177
 3689 0038 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 3690              	.LBE432:
 3691              	.LBE433:
 457:src/keys.c    **** }
 3692              		.loc 1 457 49 view .LVU1178
 3693 003a 03EB4303 		add	r3, r3, r3, lsl #1
 3694 003e 02EB4303 		add	r3, r2, r3, lsl #1
 3695              	.LBE429:
 3696              	.LBE428:
 3697              	.LBB437:
 3698              	.LBB438:
 3699              	.LBB439:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 3700              		.loc 1 94 16 view .LVU1179
 3701 0042 0025     		movs	r5, #0
 3702              	.LVL276:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 3703              		.loc 1 94 16 view .LVU1180
 3704              	.LBE439:
 3705              	.LBE438:
 3706              	.LBE437:
2300:src/keys.c    **** 	reset_shift();
 3707              		.loc 1 2300 7 view .LVU1181
 3708 0044 585C     		ldrb	r0, [r3, r1]	@ zero_extendqisi2
 3709              	.LVL277:
2300:src/keys.c    **** 	reset_shift();
 3710              		.loc 1 2300 7 view .LVU1182
 3711 0046 FFF7FEFF 		bl	remap_chars
 3712              	.LVL278:
2300:src/keys.c    **** 	reset_shift();
 3713              		.loc 1 2300 7 view .LVU1183
 3714 004a 0446     		mov	r4, r0
 3715              	.LVL279:
2301:src/keys.c    **** 	if (ch == '\0')
ARM GAS  /tmp/ccJ0w3QJ.s 			page 132


 3716              		.loc 1 2301 2 is_stmt 1 view .LVU1184
 3717              	.LBB444:
 3718              	.LBI437:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 3719              		.loc 1 102 13 view .LVU1185
 3720              	.LBE444:
 103:src/keys.c    **** }
 3721              		.loc 1 103 2 view .LVU1186
 3722              	.LBB445:
 3723              	.LBB443:
 3724              	.LBI438:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 3725              		.loc 1 92 20 view .LVU1187
 3726              	.LBB442:
  93:src/keys.c    **** 	State2.shifts = shift;
 3727              		.loc 1 93 2 view .LVU1188
 3728              	.LBB440:
 3729              	.LBI440:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 3730              		.loc 1 84 13 view .LVU1189
 3731              	.LBB441:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3732              		.loc 1 85 2 view .LVU1190
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 3733              		.loc 1 85 18 is_stmt 0 view .LVU1191
 3734 004c FFF7FEFF 		bl	shift_down
 3735              	.LVL280:
  86:src/keys.c    **** }
 3736              		.loc 1 86 2 is_stmt 1 view .LVU1192
 3737              	.LBE441:
 3738              	.LBE440:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 3739              		.loc 1 94 2 view .LVU1193
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 3740              		.loc 1 94 16 is_stmt 0 view .LVU1194
 3741 0050 3574     		strb	r5, [r6, #16]
  95:src/keys.c    **** 	return r;
 3742              		.loc 1 95 2 is_stmt 1 view .LVU1195
  95:src/keys.c    **** 	return r;
 3743              		.loc 1 95 19 is_stmt 0 view .LVU1196
 3744 0052 7573     		strb	r5, [r6, #13]
  96:src/keys.c    **** }
 3745              		.loc 1 96 2 is_stmt 1 view .LVU1197
 3746              	.LVL281:
  96:src/keys.c    **** }
 3747              		.loc 1 96 2 is_stmt 0 view .LVU1198
 3748              	.LBE442:
 3749              	.LBE443:
 3750              	.LBE445:
2302:src/keys.c    **** 		return STATE_UNFINISHED;
 3751              		.loc 1 2302 2 is_stmt 1 view .LVU1199
2302:src/keys.c    **** 		return STATE_UNFINISHED;
 3752              		.loc 1 2302 5 is_stmt 0 view .LVU1200
 3753 0054 002C     		cmp	r4, #0
 3754 0056 6FD0     		beq	.L479
2304:src/keys.c    **** 		// No multi character search in alpha catalogues
 3755              		.loc 1 2304 2 is_stmt 1 view .LVU1201
ARM GAS  /tmp/ccJ0w3QJ.s 			page 133


2304:src/keys.c    **** 		// No multi character search in alpha catalogues
 3756              		.loc 1 2304 5 is_stmt 0 view .LVU1202
 3757 0058 AAF10B0A 		sub	r10, r10, #11
 3758              	.LVL282:
2304:src/keys.c    **** 		// No multi character search in alpha catalogues
 3759              		.loc 1 2304 5 view .LVU1203
 3760 005c BAF1040F 		cmp	r10, #4
 3761 0060 40F2CB80 		bls	.L431
2308:src/keys.c    **** 		Cmdline[CmdLineLength++] = ch;
 3762              		.loc 1 2308 2 is_stmt 1 view .LVU1204
2308:src/keys.c    **** 		Cmdline[CmdLineLength++] = ch;
 3763              		.loc 1 2308 6 is_stmt 0 view .LVU1205
 3764 0064 357F     		ldrb	r5, [r6, #28]	@ zero_extendqisi2
2308:src/keys.c    **** 		Cmdline[CmdLineLength++] = ch;
 3765              		.loc 1 2308 5 view .LVU1206
 3766 0066 092D     		cmp	r5, #9
 3767 0068 40F2C780 		bls	.L431
 3768              	.LVL283:
 3769              	.L399:
2313:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 3770              		.loc 1 2313 2 is_stmt 1 view .LVU1207
2313:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 3771              		.loc 1 2313 25 is_stmt 0 view .LVU1208
 3772 006c 7319     		adds	r3, r6, r5
 3773 006e 0025     		movs	r5, #0
 3774 0070 83F82050 		strb	r5, [r3, #32]
2314:src/keys.c    **** 		char buf[16];
 3775              		.loc 1 2314 2 is_stmt 1 view .LVU1209
 3776              	.LVL284:
2314:src/keys.c    **** 		char buf[16];
 3777              		.loc 1 2314 16 view .LVU1210
2314:src/keys.c    **** 		char buf[16];
 3778              		.loc 1 2314 2 is_stmt 0 view .LVU1211
 3779 0074 B8F1000F 		cmp	r8, #0
 3780 0078 00F0D780 		beq	.L477
 3781              	.LVL285:
 3782              	.L419:
 3783              	.LBB446:
2315:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
 3784              		.loc 1 2315 3 is_stmt 1 view .LVU1212
2316:src/keys.c    **** 		int i;
 3785              		.loc 1 2316 3 view .LVU1213
2316:src/keys.c    **** 		int i;
 3786              		.loc 1 2316 21 is_stmt 0 view .LVU1214
 3787 007c 2846     		mov	r0, r5
 3788 007e FFF7FEFF 		bl	current_catalogue
 3789              	.LVL286:
 3790 0082 6946     		mov	r1, sp
 3791 0084 FFF7FEFF 		bl	catcmd
 3792              	.LVL287:
 3793 0088 0446     		mov	r4, r0
 3794              	.LVL288:
2317:src/keys.c    **** 
 3795              		.loc 1 2317 3 is_stmt 1 view .LVU1215
2319:src/keys.c    **** 			cmd++;
 3796              		.loc 1 2319 3 view .LVU1216
2320:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
ARM GAS  /tmp/ccJ0w3QJ.s 			page 134


 3797              		.loc 1 2320 4 view .LVU1217
2319:src/keys.c    **** 			cmd++;
 3798              		.loc 1 2319 7 is_stmt 0 view .LVU1218
 3799 008a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 3800              	.LVL289:
2319:src/keys.c    **** 			cmd++;
 3801              		.loc 1 2319 6 view .LVU1219
 3802 008c 1428     		cmp	r0, #20
 3803 008e 04BF     		itt	eq
 3804 0090 6078     		ldrbeq	r0, [r4, #1]	@ zero_extendqisi2
2320:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 3805              		.loc 1 2320 7 view .LVU1220
 3806 0092 0134     		addeq	r4, r4, #1
 3807              	.LVL290:
2321:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3808              		.loc 1 2321 3 is_stmt 1 view .LVU1221
2321:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3809              		.loc 1 2321 13 view .LVU1222
2321:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3810              		.loc 1 2321 3 is_stmt 0 view .LVU1223
 3811 0094 0028     		cmp	r0, #0
 3812 0096 00F0BF80 		beq	.L421
 3813 009a DFF860B2 		ldr	fp, .L495+28
 3814 009e C4F1010A 		rsb	r10, r4, #1
 3815 00a2 06E0     		b	.L424
 3816              	.LVL291:
 3817              	.L484:
 3818              	.LBB447:
2326:src/keys.c    **** 				break;
 3819              		.loc 1 2326 12 view .LVU1224
 3820 00a4 C0F2BA80 		blt	.L423
 3821              	.LBE447:
2321:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3822              		.loc 1 2321 16 discriminator 2 view .LVU1225
 3823 00a8 14F8010F 		ldrb	r0, [r4, #1]!	@ zero_extendqisi2
 3824              	.LVL292:
2321:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3825              		.loc 1 2321 3 discriminator 2 view .LVU1226
 3826 00ac 0028     		cmp	r0, #0
 3827 00ae 00F0BF80 		beq	.L483
 3828              	.LVL293:
 3829              	.L424:
 3830              	.LBB448:
2322:src/keys.c    **** 			const int cl = (unsigned char) Cmdline[i];
 3831              		.loc 1 2322 4 is_stmt 1 view .LVU1227
2322:src/keys.c    **** 			const int cl = (unsigned char) Cmdline[i];
 3832              		.loc 1 2322 18 is_stmt 0 view .LVU1228
 3833 00b2 FFF7FEFF 		bl	remap_chars
 3834              	.LVL294:
2326:src/keys.c    **** 				break;
 3835              		.loc 1 2326 9 is_stmt 1 view .LVU1229
 3836              	.LBE448:
2321:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3837              		.loc 1 2321 29 view .LVU1230
 3838              	.LBB449:
2323:src/keys.c    **** 			if (c > cl)
 3839              		.loc 1 2323 4 view .LVU1231
ARM GAS  /tmp/ccJ0w3QJ.s 			page 135


2323:src/keys.c    **** 			if (c > cl)
 3840              		.loc 1 2323 42 is_stmt 0 view .LVU1232
 3841 00b6 1BF8013F 		ldrb	r3, [fp, #1]!	@ zero_extendqisi2
 3842              	.LVL295:
2324:src/keys.c    **** 				goto set_pos;
 3843              		.loc 1 2324 4 is_stmt 1 view .LVU1233
2324:src/keys.c    **** 				goto set_pos;
 3844              		.loc 1 2324 7 is_stmt 0 view .LVU1234
 3845 00ba 9842     		cmp	r0, r3
 3846 00bc 0AEB0402 		add	r2, r10, r4
 3847              	.LVL296:
2324:src/keys.c    **** 				goto set_pos;
 3848              		.loc 1 2324 7 view .LVU1235
 3849              	.LBE449:
2321:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 3850              		.loc 1 2321 13 is_stmt 1 view .LVU1236
 3851              	.LBB450:
2324:src/keys.c    **** 				goto set_pos;
 3852              		.loc 1 2324 7 is_stmt 0 view .LVU1237
 3853 00c0 F0DD     		ble	.L484
 3854              	.LVL297:
 3855              	.L422:
2324:src/keys.c    **** 				goto set_pos;
 3856              		.loc 1 2324 7 view .LVU1238
 3857 00c2 D9F80040 		ldr	r4, [r9]
 3858              	.L402:
2324:src/keys.c    **** 				goto set_pos;
 3859              		.loc 1 2324 7 view .LVU1239
 3860              	.LBE450:
 3861              	.LBE446:
2335:src/keys.c    **** 		--pos;
 3862              		.loc 1 2335 8 is_stmt 1 view .LVU1240
 3863 00c6 002F     		cmp	r7, #0
 3864 00c8 00F0B680 		beq	.L406
2335:src/keys.c    **** 		--pos;
 3865              		.loc 1 2335 18 is_stmt 0 view .LVU1241
 3866 00cc 4DB1     		cbz	r5, .L400
 3867              	.LVL298:
 3868              	.L478:
2335:src/keys.c    **** 		--pos;
 3869              		.loc 1 2335 18 view .LVU1242
 3870 00ce 2846     		mov	r0, r5
 3871 00d0 FFF7FEFF 		bl	current_catalogue
 3872              	.LVL299:
2336:src/keys.c    **** 	State.catpos = pos;
 3873              		.loc 1 2336 3 is_stmt 1 view .LVU1243
2335:src/keys.c    **** 		--pos;
 3874              		.loc 1 2335 8 view .LVU1244
 3875              	.LBB451:
 3876              	.LBI451:
2178:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 3877              		.loc 1 2178 12 view .LVU1245
 3878              	.LBB452:
2179:src/keys.c    **** }
 3879              		.loc 1 2179 2 view .LVU1246
2179:src/keys.c    **** }
 3880              		.loc 1 2179 33 is_stmt 0 view .LVU1247
ARM GAS  /tmp/ccJ0w3QJ.s 			page 136


 3881 00d4 00F0F000 		and	r0, r0, #240
 3882              	.LBE452:
 3883              	.LBE451:
2335:src/keys.c    **** 		--pos;
 3884              		.loc 1 2335 25 view .LVU1248
 3885 00d8 F028     		cmp	r0, #240
 3886 00da 40F0AD80 		bne	.L406
2335:src/keys.c    **** 		--pos;
 3887              		.loc 1 2335 18 view .LVU1249
 3888 00de 013D     		subs	r5, r5, #1
 3889              	.LVL300:
2335:src/keys.c    **** 		--pos;
 3890              		.loc 1 2335 18 view .LVU1250
 3891 00e0 F5D1     		bne	.L478
 3892              	.LVL301:
 3893              	.L400:
2337:src/keys.c    **** 	return STATE_UNFINISHED;
 3894              		.loc 1 2337 2 is_stmt 1 view .LVU1251
2337:src/keys.c    **** 	return STATE_UNFINISHED;
 3895              		.loc 1 2337 15 is_stmt 0 view .LVU1252
 3896 00e2 B4F8DC37 		ldrh	r3, [r4, #2012]
 3897 00e6 65F34B13 		bfi	r3, r5, #5, #7
 3898 00ea A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2338:src/keys.c    **** }
 3899              		.loc 1 2338 2 is_stmt 1 view .LVU1253
2338:src/keys.c    **** }
 3900              		.loc 1 2338 9 is_stmt 0 view .LVU1254
 3901 00ee 3320     		movs	r0, #51
 3902              	.L491:
2339:src/keys.c    **** 
 3903              		.loc 1 2339 1 view .LVU1255
 3904 00f0 05B0     		add	sp, sp, #20
 3905              		.cfi_remember_state
 3906              		.cfi_def_cfa_offset 36
 3907              		@ sp needed
 3908 00f2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3909              	.LVL302:
 3910              	.L480:
 3911              		.cfi_restore_state
2192:src/keys.c    **** #ifdef DM42
 3912              		.loc 1 2192 3 is_stmt 1 view .LVU1256
 3913 00f6 431F     		subs	r3, r0, #5
 3914 00f8 1F2B     		cmp	r3, #31
 3915 00fa 2FD8     		bhi	.L383
 3916 00fc DFE803F0 		tbb	[pc, r3]
 3917              	.LVL303:
 3918              	.L385:
 3919 0100 35       		.byte	(.L389-.L385)/2
 3920 0101 2E       		.byte	(.L383-.L385)/2
 3921 0102 2E       		.byte	(.L383-.L385)/2
 3922 0103 2E       		.byte	(.L383-.L385)/2
 3923 0104 2E       		.byte	(.L383-.L385)/2
 3924 0105 2E       		.byte	(.L383-.L385)/2
 3925 0106 2E       		.byte	(.L383-.L385)/2
 3926 0107 35       		.byte	(.L389-.L385)/2
 3927 0108 2E       		.byte	(.L383-.L385)/2
 3928 0109 2E       		.byte	(.L383-.L385)/2
ARM GAS  /tmp/ccJ0w3QJ.s 			page 137


 3929 010a 2E       		.byte	(.L383-.L385)/2
 3930 010b 20       		.byte	(.L388-.L385)/2
 3931 010c 2E       		.byte	(.L383-.L385)/2
 3932 010d 64       		.byte	(.L387-.L385)/2
 3933 010e 2E       		.byte	(.L383-.L385)/2
 3934 010f 2E       		.byte	(.L383-.L385)/2
 3935 0110 2E       		.byte	(.L383-.L385)/2
 3936 0111 2E       		.byte	(.L383-.L385)/2
 3937 0112 2E       		.byte	(.L383-.L385)/2
 3938 0113 6B       		.byte	(.L386-.L385)/2
 3939 0114 2E       		.byte	(.L383-.L385)/2
 3940 0115 2E       		.byte	(.L383-.L385)/2
 3941 0116 2E       		.byte	(.L383-.L385)/2
 3942 0117 2E       		.byte	(.L383-.L385)/2
 3943 0118 2E       		.byte	(.L383-.L385)/2
 3944 0119 2E       		.byte	(.L383-.L385)/2
 3945 011a 2E       		.byte	(.L383-.L385)/2
 3946 011b 2E       		.byte	(.L383-.L385)/2
 3947 011c 2E       		.byte	(.L383-.L385)/2
 3948 011d 2E       		.byte	(.L383-.L385)/2
 3949 011e 2E       		.byte	(.L383-.L385)/2
 3950 011f 27       		.byte	(.L384-.L385)/2
 3951              		.p2align 1
 3952              	.L490:
2285:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 3953              		.loc 1 2285 39 is_stmt 0 discriminator 1 view .LVU1257
 3954 0120 734A     		ldr	r2, .L495+16
 3955              	.LVL304:
2285:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 3956              		.loc 1 2285 39 discriminator 1 view .LVU1258
 3957 0122 7369     		ldr	r3, [r6, #20]
2285:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 3958              		.loc 1 2285 21 discriminator 1 view .LVU1259
 3959 0124 1A42     		tst	r2, r3
 3960 0126 75D0     		beq	.L414
2287:src/keys.c    **** 			return STATE_UNFINISHED;
 3961              		.loc 1 2287 4 is_stmt 1 view .LVU1260
2287:src/keys.c    **** 			return STATE_UNFINISHED;
 3962              		.loc 1 2287 34 is_stmt 0 view .LVU1261
 3963 0128 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 3964 012a C3F30012 		ubfx	r2, r3, #4, #1
2287:src/keys.c    **** 			return STATE_UNFINISHED;
 3965              		.loc 1 2287 26 view .LVU1262
 3966 012e C2F10102 		rsb	r2, r2, #1
2287:src/keys.c    **** 			return STATE_UNFINISHED;
 3967              		.loc 1 2287 22 view .LVU1263
 3968 0132 62F30413 		bfi	r3, r2, #4, #1
 3969 0136 B375     		strb	r3, [r6, #22]
 3970              	.LVL305:
 3971              	.L479:
2288:src/keys.c    **** 		}
 3972              		.loc 1 2288 4 is_stmt 1 view .LVU1264
2288:src/keys.c    **** 		}
 3973              		.loc 1 2288 11 is_stmt 0 view .LVU1265
 3974 0138 3320     		movs	r0, #51
 3975              	.L381:
2339:src/keys.c    **** 
ARM GAS  /tmp/ccJ0w3QJ.s 			page 138


 3976              		.loc 1 2339 1 view .LVU1266
 3977 013a 05B0     		add	sp, sp, #20
 3978              		.cfi_remember_state
 3979              		.cfi_def_cfa_offset 36
 3980              		@ sp needed
 3981 013c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3982              	.LVL306:
 3983              	.L388:
 3984              		.cfi_restore_state
2222:src/keys.c    **** #else
 3985              		.loc 1 2222 5 is_stmt 1 view .LVU1267
2222:src/keys.c    **** #else
 3986              		.loc 1 2222 8 is_stmt 0 view .LVU1268
 3987 0140 337F     		ldrb	r3, [r6, #28]	@ zero_extendqisi2
 3988 0142 23B1     		cbz	r3, .L384
2222:src/keys.c    **** #else
 3989              		.loc 1 2222 30 discriminator 1 view .LVU1269
 3990 0144 FFF7FEFF 		bl	keyticks
 3991              	.LVL307:
2222:src/keys.c    **** #else
 3992              		.loc 1 2222 27 discriminator 1 view .LVU1270
 3993 0148 1D28     		cmp	r0, #29
 3994 014a 40F39580 		ble	.L485
 3995              	.L384:
2235:src/keys.c    **** 			return STATE_UNFINISHED;
 3996              		.loc 1 2235 4 is_stmt 1 view .LVU1271
 3997 014e 0020     		movs	r0, #0
 3998 0150 FFF7FEFF 		bl	init_cat
 3999              	.LVL308:
2236:src/keys.c    **** 
 4000              		.loc 1 2236 4 view .LVU1272
2236:src/keys.c    **** 
 4001              		.loc 1 2236 11 is_stmt 0 view .LVU1273
 4002 0154 3320     		movs	r0, #51
2339:src/keys.c    **** 
 4003              		.loc 1 2339 1 view .LVU1274
 4004 0156 05B0     		add	sp, sp, #20
 4005              		.cfi_remember_state
 4006              		.cfi_def_cfa_offset 36
 4007              		@ sp needed
 4008 0158 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4009              	.LVL309:
 4010              	.L383:
 4011              		.cfi_restore_state
 4012              	.LBB453:
 4013              	.LBI428:
 401:src/keys.c    **** {
 4014              		.loc 1 401 12 is_stmt 1 discriminator 4 view .LVU1275
 4015              	.LBB434:
 403:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4016              		.loc 1 403 2 discriminator 4 view .LVU1276
 451:src/keys.c    **** 		if (shift == SHIFT_N)
 4017              		.loc 1 451 2 discriminator 4 view .LVU1277
 451:src/keys.c    **** 		if (shift == SHIFT_N)
 4018              		.loc 1 451 6 is_stmt 0 discriminator 4 view .LVU1278
 4019 015c B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 451:src/keys.c    **** 		if (shift == SHIFT_N)
ARM GAS  /tmp/ccJ0w3QJ.s 			page 139


 4020              		.loc 1 451 5 discriminator 4 view .LVU1279
 4021 015e 13F0100F 		tst	r3, #16
 4022 0162 14BF     		ite	ne
 4023 0164 0421     		movne	r1, #4
 4024              	.LVL310:
 451:src/keys.c    **** 		if (shift == SHIFT_N)
 4025              		.loc 1 451 5 discriminator 4 view .LVU1280
 4026 0166 0021     		moveq	r1, #0
 4027 0168 64E7     		b	.L417
 4028              	.LVL311:
 4029              	.L389:
 451:src/keys.c    **** 		if (shift == SHIFT_N)
 4030              		.loc 1 451 5 discriminator 4 view .LVU1281
 4031              	.LBE434:
 4032              	.LBE453:
2199:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 4033              		.loc 1 2199 4 is_stmt 1 view .LVU1282
2199:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 4034              		.loc 1 2199 7 is_stmt 0 view .LVU1283
 4035 016a 4545     		cmp	r5, r8
 4036 016c EFDA     		bge	.L384
 4037 016e 2846     		mov	r0, r5
 4038              	.LVL312:
2199:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 4039              		.loc 1 2199 20 discriminator 1 view .LVU1284
 4040 0170 002F     		cmp	r7, #0
 4041 0172 00F08D80 		beq	.L486
 4042              	.LVL313:
 4043              	.LBB454:
 4044              	.LBI454:
2178:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 4045              		.loc 1 2178 12 is_stmt 1 view .LVU1285
 4046              	.LBB455:
2179:src/keys.c    **** }
 4047              		.loc 1 2179 2 view .LVU1286
2179:src/keys.c    **** }
 4048              		.loc 1 2179 10 is_stmt 0 view .LVU1287
 4049 0176 FFF7FEFF 		bl	current_catalogue
 4050              	.LVL314:
2179:src/keys.c    **** }
 4051              		.loc 1 2179 33 view .LVU1288
 4052 017a 00F0F003 		and	r3, r0, #240
 4053              	.LBE455:
 4054              	.LBE454:
2199:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 4055              		.loc 1 2199 23 view .LVU1289
 4056 017e F02B     		cmp	r3, #240
 4057              	.LBB457:
 4058              	.LBB456:
2179:src/keys.c    **** }
 4059              		.loc 1 2179 10 view .LVU1290
 4060 0180 0446     		mov	r4, r0
 4061              	.LBE456:
 4062              	.LBE457:
2199:src/keys.c    **** 				const opcode op = current_catalogue(pos);
 4063              		.loc 1 2199 23 view .LVU1291
 4064 0182 E4D0     		beq	.L384
ARM GAS  /tmp/ccJ0w3QJ.s 			page 140


 4065              	.L392:
 4066              	.LBB458:
2200:src/keys.c    **** 
 4067              		.loc 1 2200 5 is_stmt 1 view .LVU1292
2202:src/keys.c    **** 
 4068              		.loc 1 2202 5 view .LVU1293
 4069 0184 0020     		movs	r0, #0
 4070 0186 FFF7FEFF 		bl	init_cat
 4071              	.LVL315:
2204:src/keys.c    **** 					const unsigned int rarg = RARG_CMD(op);
 4072              		.loc 1 2204 5 view .LVU1294
2204:src/keys.c    **** 					const unsigned int rarg = RARG_CMD(op);
 4073              		.loc 1 2204 8 is_stmt 0 view .LVU1295
 4074 018a 14F47043 		ands	r3, r4, #61440
 4075 018e 00F08C80 		beq	.L393
2204:src/keys.c    **** 					const unsigned int rarg = RARG_CMD(op);
 4076              		.loc 1 2204 9 discriminator 1 view .LVU1296
 4077 0192 B3F5704F 		cmp	r3, #61440
 4078 0196 00F08880 		beq	.L393
 4079              	.LBB459:
2205:src/keys.c    **** 					if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4080              		.loc 1 2205 6 is_stmt 1 view .LVU1297
2205:src/keys.c    **** 					if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4081              		.loc 1 2205 32 is_stmt 0 view .LVU1298
 4082 019a C4F30723 		ubfx	r3, r4, #8, #8
 4083 019e A3F12005 		sub	r5, r3, #32
 4084              	.LVL316:
2205:src/keys.c    **** 					if (rarg == RARG_CONST || rarg == RARG_CONST_CMPLX || rarg == RARG_CONV || rarg == RARG_ALPHA)
 4085              		.loc 1 2205 32 view .LVU1299
 4086 01a2 EDB2     		uxtb	r5, r5
 4087              	.LVL317:
2206:src/keys.c    **** 						return op;
 4088              		.loc 1 2206 6 is_stmt 1 view .LVU1300
2206:src/keys.c    **** 						return op;
 4089              		.loc 1 2206 9 is_stmt 0 view .LVU1301
 4090 01a4 012D     		cmp	r5, #1
 4091 01a6 40F29380 		bls	.L394
2206:src/keys.c    **** 						return op;
 4092              		.loc 1 2206 57 discriminator 1 view .LVU1302
 4093 01aa 6C2D     		cmp	r5, #108
 4094 01ac 00F09080 		beq	.L394
2206:src/keys.c    **** 						return op;
 4095              		.loc 1 2206 78 discriminator 2 view .LVU1303
 4096 01b0 242D     		cmp	r5, #36
 4097 01b2 00F08D80 		beq	.L394
2208:src/keys.c    **** 						State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4098              		.loc 1 2208 6 is_stmt 1 view .LVU1304
2208:src/keys.c    **** 						State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4099              		.loc 1 2208 31 is_stmt 0 view .LVU1305
 4100 01b6 A5F12D02 		sub	r2, r5, #45
2208:src/keys.c    **** 						State2.test = TST_EQ + (RARG_CMD(op) - RARG_TEST_EQ);
 4101              		.loc 1 2208 9 view .LVU1306
 4102 01ba 062A     		cmp	r2, #6
 4103 01bc 00F2A880 		bhi	.L397
2209:src/keys.c    **** 					else
 4104              		.loc 1 2209 7 is_stmt 1 view .LVU1307
2209:src/keys.c    **** 					else
ARM GAS  /tmp/ccJ0w3QJ.s 			page 141


 4105              		.loc 1 2209 28 is_stmt 0 view .LVU1308
 4106 01c0 4D3B     		subs	r3, r3, #77
2209:src/keys.c    **** 					else
 4107              		.loc 1 2209 19 view .LVU1309
 4108 01c2 F373     		strb	r3, [r6, #15]
 4109              	.LBE459:
 4110              	.LBE458:
2218:src/keys.c    **** 
 4111              		.loc 1 2218 11 view .LVU1310
 4112 01c4 3320     		movs	r0, #51
 4113              	.LBB472:
 4114              	.LBB462:
 4115 01c6 B8E7     		b	.L381
 4116              	.LVL318:
 4117              	.L387:
2218:src/keys.c    **** 
 4118              		.loc 1 2218 11 view .LVU1311
 4119              	.LBE462:
 4120              	.LBE472:
2239:src/keys.c    **** 			if (pos == 0)
 4121              		.loc 1 2239 4 is_stmt 1 view .LVU1312
2239:src/keys.c    **** 			if (pos == 0)
 4122              		.loc 1 2239 18 is_stmt 0 view .LVU1313
 4123 01c8 0023     		movs	r3, #0
 4124 01ca 3377     		strb	r3, [r6, #28]
2240:src/keys.c    **** 				goto set_max;
 4125              		.loc 1 2240 4 is_stmt 1 view .LVU1314
2240:src/keys.c    **** 				goto set_max;
 4126              		.loc 1 2240 7 is_stmt 0 view .LVU1315
 4127 01cc 002D     		cmp	r5, #0
 4128 01ce 5DD1     		bne	.L487
 4129              	.LVL319:
 4130              	.L401:
2333:src/keys.c    **** set_pos:
 4131              		.loc 1 2333 2 is_stmt 1 view .LVU1316
2333:src/keys.c    **** set_pos:
 4132              		.loc 1 2333 6 is_stmt 0 view .LVU1317
 4133 01d0 08F1FF35 		add	r5, r8, #-1
 4134              	.LVL320:
2333:src/keys.c    **** set_pos:
 4135              		.loc 1 2333 6 view .LVU1318
 4136 01d4 77E7     		b	.L402
 4137              	.LVL321:
 4138              	.L386:
2247:src/keys.c    **** 			while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 4139              		.loc 1 2247 4 is_stmt 1 view .LVU1319
2247:src/keys.c    **** 			while (++pos < ctmax && is_multi && forbidden_alpha(pos));
 4140              		.loc 1 2247 18 is_stmt 0 view .LVU1320
 4141 01d6 0023     		movs	r3, #0
 4142 01d8 3377     		strb	r3, [r6, #28]
2248:src/keys.c    **** 			if (pos >= ctmax)
 4143              		.loc 1 2248 4 is_stmt 1 view .LVU1321
2248:src/keys.c    **** 			if (pos >= ctmax)
 4144              		.loc 1 2248 10 is_stmt 0 view .LVU1322
 4145 01da 06E0     		b	.L405
 4146              	.LVL322:
 4147              	.L488:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 142


2248:src/keys.c    **** 			if (pos >= ctmax)
 4148              		.loc 1 2248 25 discriminator 1 view .LVU1323
 4149 01dc 67B3     		cbz	r7, .L406
 4150              	.LBB473:
 4151              	.LBB474:
2179:src/keys.c    **** }
 4152              		.loc 1 2179 10 view .LVU1324
 4153 01de FFF7FEFF 		bl	current_catalogue
 4154              	.LVL323:
2179:src/keys.c    **** }
 4155              		.loc 1 2179 33 view .LVU1325
 4156 01e2 00F0F000 		and	r0, r0, #240
 4157              	.LBE474:
 4158              	.LBE473:
2248:src/keys.c    **** 			if (pos >= ctmax)
 4159              		.loc 1 2248 37 view .LVU1326
 4160 01e6 F028     		cmp	r0, #240
 4161 01e8 26D1     		bne	.L406
 4162              	.L405:
2248:src/keys.c    **** 			if (pos >= ctmax)
 4163              		.loc 1 2248 61 is_stmt 1 discriminator 3 view .LVU1327
2248:src/keys.c    **** 			if (pos >= ctmax)
 4164              		.loc 1 2248 10 discriminator 3 view .LVU1328
 4165 01ea 0135     		adds	r5, r5, #1
 4166              	.LVL324:
 4167              	.LBB477:
 4168              	.LBI473:
2178:src/keys.c    **** 	return (current_catalogue(pos) & 0xf0) == 0xf0;
 4169              		.loc 1 2178 12 discriminator 3 view .LVU1329
 4170              	.LBB475:
2179:src/keys.c    **** }
 4171              		.loc 1 2179 2 discriminator 3 view .LVU1330
 4172              	.LBE475:
 4173              	.LBE477:
2248:src/keys.c    **** 			if (pos >= ctmax)
 4174              		.loc 1 2248 10 is_stmt 0 discriminator 3 view .LVU1331
 4175 01ec A845     		cmp	r8, r5
 4176              	.LBB478:
 4177              	.LBB476:
2179:src/keys.c    **** }
 4178              		.loc 1 2179 10 discriminator 3 view .LVU1332
 4179 01ee 2846     		mov	r0, r5
 4180              	.LBE476:
 4181              	.LBE478:
2248:src/keys.c    **** 			if (pos >= ctmax)
 4182              		.loc 1 2248 10 discriminator 3 view .LVU1333
 4183 01f0 F4DC     		bgt	.L488
 4184              	.LVL325:
2335:src/keys.c    **** 		--pos;
 4185              		.loc 1 2335 8 is_stmt 1 view .LVU1334
2250:src/keys.c    **** 			goto set_pos;
 4186              		.loc 1 2250 9 is_stmt 0 view .LVU1335
 4187 01f2 3D46     		mov	r5, r7
 4188              	.LVL326:
2335:src/keys.c    **** 		--pos;
 4189              		.loc 1 2335 8 view .LVU1336
 4190 01f4 07B3     		cbz	r7, .L406
ARM GAS  /tmp/ccJ0w3QJ.s 			page 143


 4191              	.LVL327:
2335:src/keys.c    **** 		--pos;
 4192              		.loc 1 2335 8 view .LVU1337
 4193 01f6 0025     		movs	r5, #0
 4194              	.LVL328:
2335:src/keys.c    **** 		--pos;
 4195              		.loc 1 2335 8 view .LVU1338
 4196 01f8 73E7     		b	.L400
 4197              	.LVL329:
 4198              	.L431:
2308:src/keys.c    **** 		Cmdline[CmdLineLength++] = ch;
 4199              		.loc 1 2308 6 view .LVU1339
 4200 01fa 2B46     		mov	r3, r5
2309:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
 4201              		.loc 1 2309 3 is_stmt 1 view .LVU1340
2309:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
 4202              		.loc 1 2309 28 is_stmt 0 view .LVU1341
 4203 01fc 3344     		add	r3, r3, r6
2309:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
 4204              		.loc 1 2309 24 view .LVU1342
 4205 01fe 0135     		adds	r5, r5, #1
 4206 0200 EDB2     		uxtb	r5, r5
 4207 0202 3577     		strb	r5, [r6, #28]
2309:src/keys.c    **** 	/* Search for the current buffer in the catalogue */
 4208              		.loc 1 2309 28 view .LVU1343
 4209 0204 83F82040 		strb	r4, [r3, #32]
 4210 0208 30E7     		b	.L399
 4211              	.LVL330:
 4212              	.L481:
2257:src/keys.c    **** 			/*
 4213              		.loc 1 2257 3 is_stmt 1 view .LVU1344
2257:src/keys.c    **** 			/*
 4214              		.loc 1 2257 6 is_stmt 0 view .LVU1345
 4215 020a BAF1120F 		cmp	r10, #18
 4216 020e 21D0     		beq	.L489
 4217              	.L408:
2285:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 4218              		.loc 1 2285 8 is_stmt 1 view .LVU1346
2285:src/keys.c    **** 			// Handle alpha shift in alpha character catalogues
 4219              		.loc 1 2285 11 is_stmt 0 view .LVU1347
 4220 0210 2428     		cmp	r0, #36
 4221 0212 85D0     		beq	.L490
 4222              	.LVL331:
 4223              	.L414:
2300:src/keys.c    **** 	reset_shift();
 4224              		.loc 1 2300 2 is_stmt 1 view .LVU1348
 4225              	.LBB479:
 401:src/keys.c    **** {
 4226              		.loc 1 401 12 view .LVU1349
 4227              	.LBB435:
 403:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4228              		.loc 1 403 2 view .LVU1350
 451:src/keys.c    **** 		if (shift == SHIFT_N)
 4229              		.loc 1 451 2 view .LVU1351
 451:src/keys.c    **** 		if (shift == SHIFT_N)
 4230              		.loc 1 451 5 is_stmt 0 view .LVU1352
 4231 0214 0121     		movs	r1, #1
ARM GAS  /tmp/ccJ0w3QJ.s 			page 144


 4232              	.LVL332:
 451:src/keys.c    **** 		if (shift == SHIFT_N)
 4233              		.loc 1 451 5 view .LVU1353
 4234 0216 0DE7     		b	.L417
 4235              	.LVL333:
 4236              	.L421:
 451:src/keys.c    **** 		if (shift == SHIFT_N)
 4237              		.loc 1 451 5 view .LVU1354
 4238 0218 96F82030 		ldrb	r3, [r6, #32]	@ zero_extendqisi2
 4239              	.LVL334:
 4240              	.L423:
 451:src/keys.c    **** 		if (shift == SHIFT_N)
 4241              		.loc 1 451 5 view .LVU1355
 4242              	.LBE435:
 4243              	.LBE479:
 4244              	.LBB480:
2329:src/keys.c    **** 			goto set_pos;
 4245              		.loc 1 2329 3 is_stmt 1 view .LVU1356
2329:src/keys.c    **** 			goto set_pos;
 4246              		.loc 1 2329 6 is_stmt 0 view .LVU1357
 4247 021c 002B     		cmp	r3, #0
 4248 021e 3FF450AF 		beq	.L422
 4249              	.LBE480:
2314:src/keys.c    **** 		char buf[16];
 4250              		.loc 1 2314 29 is_stmt 1 view .LVU1358
 4251 0222 0135     		adds	r5, r5, #1
 4252              	.LVL335:
2314:src/keys.c    **** 		char buf[16];
 4253              		.loc 1 2314 16 view .LVU1359
2314:src/keys.c    **** 		char buf[16];
 4254              		.loc 1 2314 2 is_stmt 0 view .LVU1360
 4255 0224 A845     		cmp	r8, r5
 4256 0226 7FF429AF 		bne	.L419
 4257              	.LVL336:
 4258              	.L477:
2314:src/keys.c    **** 		char buf[16];
 4259              		.loc 1 2314 2 view .LVU1361
 4260 022a D9F80040 		ldr	r4, [r9]
 4261 022e CFE7     		b	.L401
 4262              	.LVL337:
 4263              	.L483:
2314:src/keys.c    **** 		char buf[16];
 4264              		.loc 1 2314 2 view .LVU1362
 4265 0230 3244     		add	r2, r2, r6
 4266              	.LVL338:
2314:src/keys.c    **** 		char buf[16];
 4267              		.loc 1 2314 2 view .LVU1363
 4268 0232 92F82030 		ldrb	r3, [r2, #32]	@ zero_extendqisi2
 4269              	.LVL339:
2314:src/keys.c    **** 		char buf[16];
 4270              		.loc 1 2314 2 view .LVU1364
 4271 0236 F1E7     		b	.L423
 4272              	.LVL340:
 4273              	.L406:
2337:src/keys.c    **** 	return STATE_UNFINISHED;
 4274              		.loc 1 2337 15 view .LVU1365
 4275 0238 B4F8DC37 		ldrh	r3, [r4, #2012]
ARM GAS  /tmp/ccJ0w3QJ.s 			page 145


 4276 023c 05F07F05 		and	r5, r5, #127
 4277              	.LVL341:
2337:src/keys.c    **** 	return STATE_UNFINISHED;
 4278              		.loc 1 2337 2 is_stmt 1 view .LVU1366
2337:src/keys.c    **** 	return STATE_UNFINISHED;
 4279              		.loc 1 2337 15 is_stmt 0 view .LVU1367
 4280 0240 65F34B13 		bfi	r3, r5, #5, #7
 4281 0244 A4F8DC37 		strh	r3, [r4, #2012]	@ movhi
2338:src/keys.c    **** }
 4282              		.loc 1 2338 2 is_stmt 1 view .LVU1368
2338:src/keys.c    **** }
 4283              		.loc 1 2338 9 is_stmt 0 view .LVU1369
 4284 0248 3320     		movs	r0, #51
 4285 024a 51E7     		b	.L491
 4286              	.LVL342:
 4287              	.L482:
2291:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
 4288              		.loc 1 2291 3 is_stmt 1 view .LVU1370
2291:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
 4289              		.loc 1 2291 6 is_stmt 0 view .LVU1371
 4290 024c 1028     		cmp	r0, #16
 4291 024e 23D0     		beq	.L492
 4292              	.L416:
2300:src/keys.c    **** 	reset_shift();
 4293              		.loc 1 2300 2 is_stmt 1 view .LVU1372
 4294              	.LVL343:
 4295              	.LBB481:
 401:src/keys.c    **** {
 4296              		.loc 1 401 12 view .LVU1373
 4297              	.LBB436:
 403:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 4298              		.loc 1 403 2 view .LVU1374
 451:src/keys.c    **** 		if (shift == SHIFT_N)
 4299              		.loc 1 451 2 view .LVU1375
 451:src/keys.c    **** 		if (shift == SHIFT_N)
 4300              		.loc 1 451 5 is_stmt 0 view .LVU1376
 4301 0250 0521     		movs	r1, #5
 4302              	.LVL344:
 451:src/keys.c    **** 		if (shift == SHIFT_N)
 4303              		.loc 1 451 5 view .LVU1377
 4304 0252 EFE6     		b	.L417
 4305              	.LVL345:
 4306              	.L489:
 451:src/keys.c    **** 		if (shift == SHIFT_N)
 4307              		.loc 1 451 5 view .LVU1378
 4308              	.LBE436:
 4309              	.LBE481:
2257:src/keys.c    **** 			/*
 4310              		.loc 1 2257 29 discriminator 1 view .LVU1379
 4311 0254 0128     		cmp	r0, #1
 4312 0256 DBD1     		bne	.L408
 4313              	.LBB482:
2266:src/keys.c    **** 				OP_MON | OP_AR_DB,	OP_MON | OP_DB_AR,
 4314              		.loc 1 2266 4 is_stmt 1 view .LVU1380
2274:src/keys.c    **** 			int i;
 4315              		.loc 1 2274 4 view .LVU1381
2274:src/keys.c    **** 			int i;
ARM GAS  /tmp/ccJ0w3QJ.s 			page 146


 4316              		.loc 1 2274 22 is_stmt 0 view .LVU1382
 4317 0258 2846     		mov	r0, r5
 4318              	.LVL346:
2274:src/keys.c    **** 			int i;
 4319              		.loc 1 2274 22 view .LVU1383
 4320 025a FFF7FEFF 		bl	current_catalogue
 4321              	.LVL347:
2274:src/keys.c    **** 			int i;
 4322              		.loc 1 2274 22 view .LVU1384
 4323 025e 0446     		mov	r4, r0
 4324              	.LVL348:
2275:src/keys.c    **** 
 4325              		.loc 1 2275 4 is_stmt 1 view .LVU1385
2277:src/keys.c    **** 			if (isRARG(op))
 4326              		.loc 1 2277 4 view .LVU1386
 4327 0260 0020     		movs	r0, #0
 4328              	.LVL349:
2277:src/keys.c    **** 			if (isRARG(op))
 4329              		.loc 1 2277 4 is_stmt 0 view .LVU1387
 4330 0262 FFF7FEFF 		bl	init_cat
 4331              	.LVL350:
2278:src/keys.c    **** 				return op ^ 1;
 4332              		.loc 1 2278 4 is_stmt 1 view .LVU1388
2278:src/keys.c    **** 				return op ^ 1;
 4333              		.loc 1 2278 7 is_stmt 0 view .LVU1389
 4334 0266 14F47043 		ands	r3, r4, #61440
 4335 026a 33D0     		beq	.L409
2278:src/keys.c    **** 				return op ^ 1;
 4336              		.loc 1 2278 8 discriminator 1 view .LVU1390
 4337 026c B3F5704F 		cmp	r3, #61440
 4338 0270 30D0     		beq	.L409
2279:src/keys.c    **** 			for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 4339              		.loc 1 2279 5 is_stmt 1 view .LVU1391
2279:src/keys.c    **** 			for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 4340              		.loc 1 2279 15 is_stmt 0 view .LVU1392
 4341 0272 84F00100 		eor	r0, r4, #1
 4342 0276 60E7     		b	.L381
 4343              	.LVL351:
 4344              	.L485:
2279:src/keys.c    **** 			for (i = 0; i < sizeof(conv_mapping) / sizeof(conv_mapping[0]); ++i)
 4345              		.loc 1 2279 15 view .LVU1393
 4346              	.LBE482:
2226:src/keys.c    **** 					goto search;
 4347              		.loc 1 2226 9 is_stmt 1 view .LVU1394
2226:src/keys.c    **** 					goto search;
 4348              		.loc 1 2226 13 is_stmt 0 view .LVU1395
 4349 0278 357F     		ldrb	r5, [r6, #28]	@ zero_extendqisi2
 4350              	.LVL352:
2226:src/keys.c    **** 					goto search;
 4351              		.loc 1 2226 13 view .LVU1396
 4352 027a 013D     		subs	r5, r5, #1
 4353 027c EDB2     		uxtb	r5, r5
2226:src/keys.c    **** 					goto search;
 4354              		.loc 1 2226 12 view .LVU1397
 4355 027e 3577     		strb	r5, [r6, #28]
 4356 0280 002D     		cmp	r5, #0
 4357 0282 7FF4F3AE 		bne	.L399
ARM GAS  /tmp/ccJ0w3QJ.s 			page 147


 4358 0286 D9F80040 		ldr	r4, [r9]
 4359 028a 2AE7     		b	.L400
 4360              	.LVL353:
 4361              	.L487:
2243:src/keys.c    **** 			goto set_pos;
 4362              		.loc 1 2243 5 is_stmt 1 view .LVU1398
 4363 028c 013D     		subs	r5, r5, #1
 4364              	.LVL354:
2244:src/keys.c    **** 
 4365              		.loc 1 2244 4 view .LVU1399
 4366 028e 1AE7     		b	.L402
 4367              	.LVL355:
 4368              	.L486:
2244:src/keys.c    **** 
 4369              		.loc 1 2244 4 is_stmt 0 view .LVU1400
 4370 0290 FFF7FEFF 		bl	current_catalogue
 4371              	.LVL356:
2244:src/keys.c    **** 
 4372              		.loc 1 2244 4 view .LVU1401
 4373 0294 0446     		mov	r4, r0
 4374 0296 75E7     		b	.L392
 4375              	.LVL357:
 4376              	.L492:
2291:src/keys.c    **** 			init_cat(CATALOGUE_NONE);
 4377              		.loc 1 2291 16 discriminator 1 view .LVU1402
 4378 0298 BAF1130F 		cmp	r10, #19
 4379 029c D8D1     		bne	.L416
2292:src/keys.c    **** 			return OP_NIL | OP_SIGMACLEAR;
 4380              		.loc 1 2292 4 is_stmt 1 view .LVU1403
 4381 029e 0020     		movs	r0, #0
 4382              	.LVL358:
2292:src/keys.c    **** 			return OP_NIL | OP_SIGMACLEAR;
 4383              		.loc 1 2292 4 is_stmt 0 view .LVU1404
 4384 02a0 FFF7FEFF 		bl	init_cat
 4385              	.LVL359:
2293:src/keys.c    **** 		}
 4386              		.loc 1 2293 4 is_stmt 1 view .LVU1405
2293:src/keys.c    **** 		}
 4387              		.loc 1 2293 11 is_stmt 0 view .LVU1406
 4388 02a4 40F23D10 		movw	r0, #317
 4389 02a8 47E7     		b	.L381
 4390              	.L393:
 4391              	.LBB483:
2214:src/keys.c    **** 				}
 4392              		.loc 1 2214 6 is_stmt 1 view .LVU1407
 4393              	.LBB463:
 4394              	.LBB464:
 638:src/keys.c    **** 		const int nilop = argKIND(op);
 4395              		.loc 1 638 5 is_stmt 0 view .LVU1408
 4396 02aa C4F30723 		ubfx	r3, r4, #8, #8
 4397 02ae 012B     		cmp	r3, #1
 4398              	.LBE464:
 4399              	.LBE463:
2214:src/keys.c    **** 				}
 4400              		.loc 1 2214 13 view .LVU1409
 4401 02b0 2046     		mov	r0, r4
 4402              	.LVL360:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 148


 4403              	.LBB469:
 4404              	.LBI463:
 637:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 4405              		.loc 1 637 12 is_stmt 1 view .LVU1410
 4406              	.LBB468:
 638:src/keys.c    **** 		const int nilop = argKIND(op);
 4407              		.loc 1 638 2 view .LVU1411
 638:src/keys.c    **** 		const int nilop = argKIND(op);
 4408              		.loc 1 638 5 is_stmt 0 view .LVU1412
 4409 02b2 7FF442AF 		bne	.L381
 4410              	.LVL361:
 4411              	.LBB465:
 4412              	.LBI465:
 637:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 4413              		.loc 1 637 12 is_stmt 1 view .LVU1413
 4414              	.LBB466:
 4415              	.LBB467:
 639:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 4416              		.loc 1 639 3 view .LVU1414
 640:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 4417              		.loc 1 640 3 view .LVU1415
 639:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 4418              		.loc 1 639 13 is_stmt 0 view .LVU1416
 4419 02b6 E3B2     		uxtb	r3, r4
 640:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 4420              		.loc 1 640 25 view .LVU1417
 4421 02b8 413B     		subs	r3, r3, #65
 640:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 4422              		.loc 1 640 6 view .LVU1418
 4423 02ba 032B     		cmp	r3, #3
 4424 02bc 3FF63DAF 		bhi	.L381
 641:src/keys.c    **** 			return STATE_UNFINISHED;
 4425              		.loc 1 641 4 is_stmt 1 view .LVU1419
 641:src/keys.c    **** 			return STATE_UNFINISHED;
 4426              		.loc 1 641 19 is_stmt 0 view .LVU1420
 4427 02c0 337D     		ldrb	r3, [r6, #20]	@ zero_extendqisi2
 641:src/keys.c    **** 			return STATE_UNFINISHED;
 4428              		.loc 1 641 35 view .LVU1421
 4429 02c2 A4F14000 		sub	r0, r4, #64
 4430              	.LVL362:
 641:src/keys.c    **** 			return STATE_UNFINISHED;
 4431              		.loc 1 641 19 view .LVU1422
 4432 02c6 60F30203 		bfi	r3, r0, #0, #3
 4433 02ca 3375     		strb	r3, [r6, #20]
 642:src/keys.c    **** 		}
 4434              		.loc 1 642 4 is_stmt 1 view .LVU1423
 642:src/keys.c    **** 		}
 4435              		.loc 1 642 11 is_stmt 0 view .LVU1424
 4436 02cc 3320     		movs	r0, #51
 4437 02ce 34E7     		b	.L381
 4438              	.LVL363:
 4439              	.L394:
 642:src/keys.c    **** 		}
 4440              		.loc 1 642 11 view .LVU1425
 4441              	.LBE467:
 4442              	.LBE466:
 4443              	.LBE465:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 149


 4444              	.LBE468:
 4445              	.LBE469:
 4446              	.LBB470:
2207:src/keys.c    **** 					if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4447              		.loc 1 2207 7 is_stmt 1 view .LVU1426
2207:src/keys.c    **** 					if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4448              		.loc 1 2207 14 is_stmt 0 view .LVU1427
 4449 02d0 2046     		mov	r0, r4
 4450 02d2 32E7     		b	.L381
 4451              	.LVL364:
 4452              	.L409:
2207:src/keys.c    **** 					if (rarg >= RARG_TEST_EQ && rarg <= RARG_TEST_GE)
 4453              		.loc 1 2207 14 view .LVU1428
 4454 02d4 0748     		ldr	r0, .L495+20
 4455              	.LBE470:
 4456              	.LBE483:
2185:src/keys.c    **** 	int pos = State.catpos;
 4457              		.loc 1 2185 92 view .LVU1429
 4458 02d6 40F28522 		movw	r2, #645
 4459 02da 0146     		mov	r1, r0
 4460 02dc 0023     		movs	r3, #0
 4461 02de 11E0     		b	.L411
 4462              	.L496:
 4463              		.align	2
 4464              	.L495:
 4465 02e0 00000000 		.word	StateWhileOn
 4466 02e4 00000000 		.word	.LANCHOR2
 4467 02e8 00000000 		.word	.LANCHOR1
 4468 02ec 00000000 		.word	.LANCHOR9
 4469 02f0 00080800 		.word	526336
 4470 02f4 00000000 		.word	.LANCHOR8
 4471 02f8 00000000 		.word	main_ram
 4472 02fc 1F000000 		.word	StateWhileOn+31
 4473              	.LVL365:
 4474              	.L494:
2185:src/keys.c    **** 	int pos = State.catpos;
 4475              		.loc 1 2185 92 view .LVU1430
 4476 0300 31F8022F 		ldrh	r2, [r1, #2]!
 4477              	.LVL366:
 4478              	.L411:
 4479              	.LBB484:
2281:src/keys.c    **** 					return conv_mapping[i^1];
 4480              		.loc 1 2281 5 is_stmt 1 view .LVU1431
2280:src/keys.c    **** 				if (op == conv_mapping[i])
 4481              		.loc 1 2280 68 view .LVU1432
2281:src/keys.c    **** 					return conv_mapping[i^1];
 4482              		.loc 1 2281 8 is_stmt 0 view .LVU1433
 4483 0304 A242     		cmp	r2, r4
 4484 0306 0DD0     		beq	.L493
2280:src/keys.c    **** 				if (op == conv_mapping[i])
 4485              		.loc 1 2280 68 discriminator 2 view .LVU1434
 4486 0308 0133     		adds	r3, r3, #1
 4487              	.LVL367:
2280:src/keys.c    **** 				if (op == conv_mapping[i])
 4488              		.loc 1 2280 16 is_stmt 1 discriminator 2 view .LVU1435
2280:src/keys.c    **** 				if (op == conv_mapping[i])
 4489              		.loc 1 2280 4 is_stmt 0 discriminator 2 view .LVU1436
ARM GAS  /tmp/ccJ0w3QJ.s 			page 150


 4490 030a 0C2B     		cmp	r3, #12
 4491 030c F8D1     		bne	.L494
 4492 030e 13E7     		b	.L479
 4493              	.LVL368:
 4494              	.L397:
2280:src/keys.c    **** 				if (op == conv_mapping[i])
 4495              		.loc 1 2280 4 discriminator 2 view .LVU1437
 4496              	.LBE484:
 4497              	.LBB485:
 4498              	.LBB471:
2211:src/keys.c    **** 				}
 4499              		.loc 1 2211 7 is_stmt 1 view .LVU1438
 4500              	.LBB460:
 4501              	.LBI460:
 519:src/keys.c    **** 	if (is_bad_cmdline())
 4502              		.loc 1 519 13 view .LVU1439
 4503              	.LBB461:
 520:src/keys.c    **** 		return;
 4504              		.loc 1 520 2 view .LVU1440
 520:src/keys.c    **** 		return;
 4505              		.loc 1 520 6 is_stmt 0 view .LVU1441
 4506 0310 FFF7FEFF 		bl	is_bad_cmdline
 4507              	.LVL369:
 520:src/keys.c    **** 		return;
 4508              		.loc 1 520 5 view .LVU1442
 4509 0314 0028     		cmp	r0, #0
 4510 0316 7FF40FAF 		bne	.L479
 4511 031a 2846     		mov	r0, r5
 4512 031c FFF7FEFF 		bl	init_arg.part.0
 4513              	.LVL370:
 4514              	.LBE461:
 4515              	.LBE460:
 4516              	.LBE471:
 4517              	.LBE485:
2218:src/keys.c    **** 
 4518              		.loc 1 2218 11 view .LVU1443
 4519 0320 3320     		movs	r0, #51
 4520 0322 0AE7     		b	.L381
 4521              	.LVL371:
 4522              	.L493:
 4523              	.LBB486:
2282:src/keys.c    **** 			return STATE_UNFINISHED;		// Unreached
 4524              		.loc 1 2282 6 is_stmt 1 view .LVU1444
2282:src/keys.c    **** 			return STATE_UNFINISHED;		// Unreached
 4525              		.loc 1 2282 27 is_stmt 0 view .LVU1445
 4526 0324 83F00103 		eor	r3, r3, #1
 4527              	.LVL372:
2282:src/keys.c    **** 			return STATE_UNFINISHED;		// Unreached
 4528              		.loc 1 2282 25 view .LVU1446
 4529 0328 30F81300 		ldrh	r0, [r0, r3, lsl #1]
 4530 032c 05E7     		b	.L381
 4531              	.LBE486:
 4532              		.cfi_endproc
 4533              	.LFE43:
 4535 032e 00BF     		.section	.text.find_pos,"ax",%progbits
 4536              		.align	1
 4537              		.p2align 2,,3
ARM GAS  /tmp/ccJ0w3QJ.s 			page 151


 4538              		.global	find_pos
 4539              		.syntax unified
 4540              		.thumb
 4541              		.thumb_func
 4542              		.fpu fpv4-sp-d16
 4544              	find_pos:
 4545              	.LVL373:
 4546              	.LFB44:
2342:src/keys.c    **** 	int pos;
 4547              		.loc 1 2342 32 is_stmt 1 view -0
 4548              		.cfi_startproc
 4549              		@ args = 0, pretend = 0, frame = 16
 4550              		@ frame_needed = 0, uses_anonymous_args = 0
2343:src/keys.c    **** 	const int ctmax = current_catalogue_max();
 4551              		.loc 1 2343 2 view .LVU1448
2344:src/keys.c    **** 	for (pos = 0; pos < ctmax; ++pos) {
 4552              		.loc 1 2344 2 view .LVU1449
 4553              	.LBB487:
 4554              	.LBI487:
2040:src/keys.c    **** 	// A quick table of catalogue sizes
 4555              		.loc 1 2040 5 view .LVU1450
 4556              	.LBB488:
2043:src/keys.c    **** 	{
 4557              		.loc 1 2043 2 view .LVU1451
2074:src/keys.c    **** #endif
 4558              		.loc 1 2074 2 view .LVU1452
 4559              	.LBE488:
 4560              	.LBE487:
2342:src/keys.c    **** 	int pos;
 4561              		.loc 1 2342 32 is_stmt 0 view .LVU1453
 4562 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 4563              		.cfi_def_cfa_offset 32
 4564              		.cfi_offset 4, -32
 4565              		.cfi_offset 5, -28
 4566              		.cfi_offset 6, -24
 4567              		.cfi_offset 7, -20
 4568              		.cfi_offset 8, -16
 4569              		.cfi_offset 9, -12
 4570              		.cfi_offset 10, -8
 4571              		.cfi_offset 14, -4
 4572              	.LBB490:
 4573              	.LBB489:
2074:src/keys.c    **** #endif
 4574              		.loc 1 2074 31 view .LVU1454
 4575 0004 1E4B     		ldr	r3, .L514
2074:src/keys.c    **** #endif
 4576              		.loc 1 2074 24 view .LVU1455
 4577 0006 1F4A     		ldr	r2, .L514+4
2074:src/keys.c    **** #endif
 4578              		.loc 1 2074 31 view .LVU1456
 4579 0008 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
2074:src/keys.c    **** #endif
 4580              		.loc 1 2074 24 view .LVU1457
 4581 000a 12F803A0 		ldrb	r10, [r2, r3]	@ zero_extendqisi2
 4582              	.LVL374:
2074:src/keys.c    **** #endif
 4583              		.loc 1 2074 24 view .LVU1458
ARM GAS  /tmp/ccJ0w3QJ.s 			page 152


 4584              	.LBE489:
 4585              	.LBE490:
2345:src/keys.c    **** 		char buf[16];
 4586              		.loc 1 2345 2 is_stmt 1 view .LVU1459
2345:src/keys.c    **** 		char buf[16];
 4587              		.loc 1 2345 16 view .LVU1460
2342:src/keys.c    **** 	int pos;
 4588              		.loc 1 2342 32 is_stmt 0 view .LVU1461
 4589 000e 84B0     		sub	sp, sp, #16
 4590              		.cfi_def_cfa_offset 48
2345:src/keys.c    **** 		char buf[16];
 4591              		.loc 1 2345 2 view .LVU1462
 4592 0010 BAF1000F 		cmp	r10, #0
 4593 0014 32D0     		beq	.L504
 4594 0016 8146     		mov	r9, r0
2345:src/keys.c    **** 		char buf[16];
 4595              		.loc 1 2345 11 view .LVU1463
 4596 0018 4FF00008 		mov	r8, #0
 4597 001c C0F10107 		rsb	r7, r0, #1
 4598              	.LVL375:
 4599              	.L503:
 4600              	.LBB491:
2346:src/keys.c    **** 		const char *cmd = catcmd(current_catalogue(pos), buf);
 4601              		.loc 1 2346 3 is_stmt 1 view .LVU1464
2347:src/keys.c    **** 		int i;
 4602              		.loc 1 2347 3 view .LVU1465
2347:src/keys.c    **** 		int i;
 4603              		.loc 1 2347 21 is_stmt 0 view .LVU1466
 4604 0020 4046     		mov	r0, r8
 4605 0022 FFF7FEFF 		bl	current_catalogue
 4606              	.LVL376:
 4607 0026 6946     		mov	r1, sp
 4608 0028 FFF7FEFF 		bl	catcmd
 4609              	.LVL377:
 4610 002c 0646     		mov	r6, r0
 4611              	.LVL378:
2348:src/keys.c    **** 
 4612              		.loc 1 2348 3 is_stmt 1 view .LVU1467
2350:src/keys.c    **** 			cmd++;
 4613              		.loc 1 2350 3 view .LVU1468
2351:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 4614              		.loc 1 2351 4 view .LVU1469
2350:src/keys.c    **** 			cmd++;
 4615              		.loc 1 2350 7 is_stmt 0 view .LVU1470
 4616 002e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 4617              	.LVL379:
2350:src/keys.c    **** 			cmd++;
 4618              		.loc 1 2350 6 view .LVU1471
 4619 0030 1428     		cmp	r0, #20
 4620 0032 04BF     		itt	eq
 4621 0034 7078     		ldrbeq	r0, [r6, #1]	@ zero_extendqisi2
2351:src/keys.c    **** 		for (i=0; cmd[i] != '\0'; i++) {
 4622              		.loc 1 2351 7 view .LVU1472
 4623 0036 0136     		addeq	r6, r6, #1
 4624              	.LVL380:
2352:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4625              		.loc 1 2352 3 is_stmt 1 view .LVU1473
ARM GAS  /tmp/ccJ0w3QJ.s 			page 153


2352:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4626              		.loc 1 2352 13 view .LVU1474
2352:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4627              		.loc 1 2352 3 is_stmt 0 view .LVU1475
 4628 0038 A8B1     		cbz	r0, .L505
 4629 003a 09F1FF33 		add	r3, r9, #-1
 4630 003e 04E0     		b	.L502
 4631              	.LVL381:
 4632              	.L513:
 4633              	.LBB492:
2357:src/keys.c    **** 				break;
 4634              		.loc 1 2357 12 view .LVU1476
 4635 0040 12DB     		blt	.L500
 4636              	.LBE492:
2352:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4637              		.loc 1 2352 16 discriminator 2 view .LVU1477
 4638 0042 16F8010F 		ldrb	r0, [r6, #1]!	@ zero_extendqisi2
 4639              	.LVL382:
2352:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4640              		.loc 1 2352 16 discriminator 2 view .LVU1478
 4641 0046 3C44     		add	r4, r4, r7
2352:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4642              		.loc 1 2352 3 discriminator 2 view .LVU1479
 4643 0048 B0B1     		cbz	r0, .L512
 4644              	.LVL383:
 4645              	.L502:
 4646              	.LBB493:
2353:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 4647              		.loc 1 2353 4 is_stmt 1 view .LVU1480
 4648 004a 5C1C     		adds	r4, r3, #1
2353:src/keys.c    **** 			const int cl = remap_chars(text[i]);
 4649              		.loc 1 2353 18 is_stmt 0 view .LVU1481
 4650 004c FFF7FEFF 		bl	remap_chars
 4651              	.LVL384:
 4652 0050 0546     		mov	r5, r0
2354:src/keys.c    **** 			if (c > cl)
 4653              		.loc 1 2354 19 view .LVU1482
 4654 0052 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 4655              	.LVL385:
2354:src/keys.c    **** 			if (c > cl)
 4656              		.loc 1 2354 4 is_stmt 1 view .LVU1483
2354:src/keys.c    **** 			if (c > cl)
 4657              		.loc 1 2354 19 is_stmt 0 view .LVU1484
 4658 0054 FFF7FEFF 		bl	remap_chars
 4659              	.LVL386:
2357:src/keys.c    **** 				break;
 4660              		.loc 1 2357 9 is_stmt 1 view .LVU1485
 4661              	.LBE493:
2352:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4662              		.loc 1 2352 29 view .LVU1486
2352:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4663              		.loc 1 2352 13 view .LVU1487
 4664              	.LBB494:
2355:src/keys.c    **** 				return pos;
 4665              		.loc 1 2355 4 view .LVU1488
2355:src/keys.c    **** 				return pos;
 4666              		.loc 1 2355 7 is_stmt 0 view .LVU1489
ARM GAS  /tmp/ccJ0w3QJ.s 			page 154


 4667 0058 8542     		cmp	r5, r0
 4668 005a 2346     		mov	r3, r4
 4669 005c F0DD     		ble	.L513
 4670              	.LVL387:
 4671              	.L497:
2355:src/keys.c    **** 				return pos;
 4672              		.loc 1 2355 7 view .LVU1490
 4673              	.LBE494:
 4674              	.LBE491:
2364:src/keys.c    **** 
 4675              		.loc 1 2364 1 view .LVU1491
 4676 005e 4046     		mov	r0, r8
 4677 0060 04B0     		add	sp, sp, #16
 4678              		.cfi_remember_state
 4679              		.cfi_def_cfa_offset 32
 4680              		@ sp needed
 4681 0062 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4682              	.LVL388:
 4683              	.L505:
 4684              		.cfi_restore_state
 4685              	.LBB495:
2352:src/keys.c    **** 			const int c = remap_chars(cmd[i]);
 4686              		.loc 1 2352 3 view .LVU1492
 4687 0066 4C46     		mov	r4, r9
 4688              	.LVL389:
 4689              	.L500:
2360:src/keys.c    **** 			return pos;
 4690              		.loc 1 2360 3 is_stmt 1 view .LVU1493
2360:src/keys.c    **** 			return pos;
 4691              		.loc 1 2360 6 is_stmt 0 view .LVU1494
 4692 0068 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 4693 006a 002B     		cmp	r3, #0
 4694 006c F7D0     		beq	.L497
 4695              	.LBE495:
2345:src/keys.c    **** 		char buf[16];
 4696              		.loc 1 2345 29 is_stmt 1 view .LVU1495
 4697 006e 08F10108 		add	r8, r8, #1
 4698              	.LVL390:
2345:src/keys.c    **** 		char buf[16];
 4699              		.loc 1 2345 16 view .LVU1496
2345:src/keys.c    **** 		char buf[16];
 4700              		.loc 1 2345 2 is_stmt 0 view .LVU1497
 4701 0072 D045     		cmp	r8, r10
 4702 0074 D4D1     		bne	.L503
 4703 0076 F2E7     		b	.L497
 4704              	.LVL391:
 4705              	.L512:
2345:src/keys.c    **** 		char buf[16];
 4706              		.loc 1 2345 2 view .LVU1498
 4707 0078 4C44     		add	r4, r4, r9
 4708 007a F5E7     		b	.L500
 4709              	.LVL392:
 4710              	.L504:
2345:src/keys.c    **** 		char buf[16];
 4711              		.loc 1 2345 11 view .LVU1499
 4712 007c D046     		mov	r8, r10
 4713 007e EEE7     		b	.L497
ARM GAS  /tmp/ccJ0w3QJ.s 			page 155


 4714              	.L515:
 4715              		.align	2
 4716              	.L514:
 4717 0080 00000000 		.word	StateWhileOn
 4718 0084 00000000 		.word	.LANCHOR2
 4719              		.cfi_endproc
 4720              	.LFE44:
 4722              		.section	.text.get_alpha_state,"ax",%progbits
 4723              		.align	1
 4724              		.p2align 2,,3
 4725              		.global	get_alpha_state
 4726              		.syntax unified
 4727              		.thumb
 4728              		.thumb_func
 4729              		.fpu fpv4-sp-d16
 4731              	get_alpha_state:
 4732              	.LFB56:
2689:src/keys.c    **** 
2690:src/keys.c    **** 
2691:src/keys.c    **** static int process_registerlist(const keycode c) {
2692:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
2693:src/keys.c    **** 	enum shifts shift = reset_shift();
2694:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
2695:src/keys.c    **** 	const int g_max = global_regs();
2696:src/keys.c    **** 
2697:src/keys.c    **** 	if (n == LOCAL_REG_BASE) {	// '.'
2698:src/keys.c    **** 		if (local_regs())
2699:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
2700:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
2701:src/keys.c    **** 		goto reset_window;
2702:src/keys.c    **** 	}
2703:src/keys.c    **** 	else if (n <= 9) {
2704:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
2705:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
2706:src/keys.c    **** 			dv = n;
2707:src/keys.c    **** 		State2.digval = dv;
2708:src/keys.c    **** 		goto reset_window;
2709:src/keys.c    **** 	}
2710:src/keys.c    **** 	else if ((shift == SHIFT_F || shift == SHIFT_G) && c == K21) {  // <( )>
2711:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
2712:src/keys.c    **** 		set_smode(SDISP_SHOW);
2713:src/keys.c    **** 	}
2714:src/keys.c    **** 	else if (n != NO_REG) {
2715:src/keys.c    **** 		State2.digval = n;
2716:src/keys.c    **** 		goto reset_window;
2717:src/keys.c    **** 	}
2718:src/keys.c    **** 
2719:src/keys.c    **** 	switch (c) {
2720:src/keys.c    **** 	case K_DOWN:
2721:src/keys.c    **** 		if (State2.digval > 0) {
2722:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
2723:src/keys.c    **** 				State2.digval = global_regs();
2724:src/keys.c    **** 			--State2.digval;
2725:src/keys.c    **** 		}
2726:src/keys.c    **** 		else
2727:src/keys.c    **** 			State2.digval = max - 1;
2728:src/keys.c    **** 		goto reset_window;
ARM GAS  /tmp/ccJ0w3QJ.s 			page 156


2729:src/keys.c    **** 
2730:src/keys.c    **** 	case K_UP:
2731:src/keys.c    **** 		if (State2.digval < max - 1) {
2732:src/keys.c    **** 			State2.digval++;
2733:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
2734:src/keys.c    **** 				State2.digval = regX_idx;
2735:src/keys.c    **** 		}
2736:src/keys.c    **** 		else	
2737:src/keys.c    **** 			State2.digval = 0;
2738:src/keys.c    **** 		goto reset_window;
2739:src/keys.c    **** 
2740:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
2741:src/keys.c    **** 	case K04:
2742:src/keys.c    **** 		State2.digval2 = ! State2.digval2 && ! State2.local;
2743:src/keys.c    **** 		goto reset_window;
2744:src/keys.c    **** #endif
2745:src/keys.c    **** 
2746:src/keys.c    **** 	case K24:			
2747:src/keys.c    **** 	//case K60:
2748:src/keys.c    **** 		if (State2.disp_temp)
2749:src/keys.c    **** 			return STATE_UNFINISHED;
2750:src/keys.c    **** 		break;		// Exit doing nothing
2751:src/keys.c    **** 
2752:src/keys.c    **** 	case K20:		// ENTER
2753:src/keys.c    **** 		if (shift == SHIFT_F) {
2754:src/keys.c    **** 			State2.disp_as_alpha = 1;
2755:src/keys.c    **** 			goto reset_window;
2756:src/keys.c    **** 		}
2757:src/keys.c    **** 	case K11:		// RCL
2758:src/keys.c    **** 		if ( shift == SHIFT_N ) {
2759:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
2760:src/keys.c    **** 			n = RARG( State2.digval2 ? RARG_FLRCL : RARG_RCL, State2.digval );
2761:src/keys.c    **** #else
2762:src/keys.c    **** 			n = RARG( RARG_RCL, State2.digval );
2763:src/keys.c    **** #endif
2764:src/keys.c    **** 			State2.registerlist = 0;
2765:src/keys.c    **** 			State2.digval = 0;
2766:src/keys.c    **** 			State2.digval2 = 0;
2767:src/keys.c    **** 			return n;
2768:src/keys.c    **** 		}
2769:src/keys.c    **** 	default:
2770:src/keys.c    **** 		return STATE_UNFINISHED;
2771:src/keys.c    **** 	}
2772:src/keys.c    **** 	State2.registerlist = 0;
2773:src/keys.c    **** 	State2.digval = 0;
2774:src/keys.c    **** 	State2.digval2 = 0;
2775:src/keys.c    **** reset_window:
2776:src/keys.c    **** 	State2.window = 0;
2777:src/keys.c    **** 	return STATE_UNFINISHED;
2778:src/keys.c    **** }
2779:src/keys.c    **** 
2780:src/keys.c    **** 
2781:src/keys.c    **** static int process(const int c) {
2782:src/keys.c    ****   const enum shifts shift = cur_shift();
2783:src/keys.c    ****   enum catalogues cat;
2784:src/keys.c    **** 
2785:src/keys.c    **** #ifdef DM42
ARM GAS  /tmp/ccJ0w3QJ.s 			page 157


2786:src/keys.c    ****   // print_debug (0, c);
2787:src/keys.c    ****   if (Running || PAUSED) {
2788:src/keys.c    ****     /*
2789:src/keys.c    ****      *  Abort a running program with R/S or EXIT
2790:src/keys.c    ****      */
2791:src/keys.c    ****     if (c == K60 || c == K63) {
2792:src/keys.c    ****       if (PAUSED && isXROM(state_pc()))
2793:src/keys.c    **** 	set_pc(0);
2794:src/keys.c    ****       start_pause (0); //end the pause
2795:src/keys.c    ****       xeq_xrom();
2796:src/keys.c    ****       set_running_off();
2797:src/keys.c    ****       DispMsg = "Stopped";
2798:src/keys.c    ****       State2.disp_freeze = 0;
2799:src/keys.c    ****       return STATE_UNFINISHED;
2800:src/keys.c    ****     }
2801:src/keys.c    ****     if ( c != K_HEARTBEAT ) {
2802:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
2803:src/keys.c    ****       start_pause(0);			// leave PSE statement
2804:src/keys.c    ****       GoFast = 1;
2805:src/keys.c    ****     }
2806:src/keys.c    ****     // continue execution if really running, else ignore (PSE)
2807:src/keys.c    ****     return STATE_RUNNING;
2808:src/keys.c    ****   }
2809:src/keys.c    **** #else
2810:src/keys.c    ****   if (Running || Pause) {
2811:src/keys.c    ****     /*
2812:src/keys.c    ****      *  Abort a running program with R/S or EXIT
2813:src/keys.c    ****      */
2814:src/keys.c    ****     if (c == K60 || c == K63) {
2815:src/keys.c    ****       if (Pause && isXROM(state_pc()))
2816:src/keys.c    **** 	set_pc(0);
2817:src/keys.c    ****       Pause = 0;
2818:src/keys.c    ****       xeq_xrom();
2819:src/keys.c    ****       set_running_off();
2820:src/keys.c    ****       DispMsg = "Stopped";
2821:src/keys.c    ****       State2.disp_freeze = 0;
2822:src/keys.c    ****       return STATE_UNFINISHED;
2823:src/keys.c    ****     }
2824:src/keys.c    ****     if ( c != K_HEARTBEAT ) {
2825:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
2826:src/keys.c    ****       Pause = 0;			// leave PSE statement
2827:src/keys.c    ****       GoFast = 1;
2828:src/keys.c    ****     }
2829:src/keys.c    ****     // continue execution if really running, else ignore (PSE)
2830:src/keys.c    ****     return STATE_RUNNING;
2831:src/keys.c    ****   }
2832:src/keys.c    **** #endif
2833:src/keys.c    ****   /* Check for ON in the unshifted state -- this is a reset sequence
2834:src/keys.c    ****    * common across all modes.  Shifted modes need to check this themselves
2835:src/keys.c    ****    * if required.
2836:src/keys.c    ****    */
2837:src/keys.c    ****   if (c == K60 && shift == SHIFT_N && ! State2.catalogue) {
2838:src/keys.c    ****     soft_init_state();
2839:src/keys.c    ****     return STATE_UNFINISHED;
2840:src/keys.c    ****   }
2841:src/keys.c    **** 
2842:src/keys.c    **** #ifndef CONSOLE
ARM GAS  /tmp/ccJ0w3QJ.s 			page 158


2843:src/keys.c    **** 	if (c == K63 && JustStopped) {
2844:src/keys.c    **** 		// Avoid an accidental restart with R/S
2845:src/keys.c    **** 		JustStopped = 0;
2846:src/keys.c    **** 		return STATE_IGNORE;
2847:src/keys.c    **** 	}
2848:src/keys.c    **** #endif
2849:src/keys.c    **** 	/*  Handle the keyboard timeout for catalogue navigation
2850:src/keys.c    **** 	 *  Must be done early in the process to capture the shifts correctly
2851:src/keys.c    **** 	 */
2852:src/keys.c    **** #ifdef DM42
2853:src/keys.c    **** 	if (State2.catalogue && keyticks() > 30)	
2854:src/keys.c    **** #else	
2855:src/keys.c    **** 	if (State2.catalogue && Keyticks > 30)
2856:src/keys.c    **** #endif
2857:src/keys.c    **** 		CmdLineLength = 0;
2858:src/keys.c    **** 	// print_debug (1, c);
2859:src/keys.c    **** 	/*
2860:src/keys.c    **** 	 *  Process the various cases
2861:src/keys.c    **** 	 *  The handlers in this block here do not handle shifts at all or do it themselves
2862:src/keys.c    **** 	 */
2863:src/keys.c    **** 	if (State2.confirm)
2864:src/keys.c    **** 		return process_confirm((const keycode)c);
2865:src/keys.c    **** 
2866:src/keys.c    **** 	if (State2.rarg)
2867:src/keys.c    **** 		return process_arg((const keycode)c);
2868:src/keys.c    **** 
2869:src/keys.c    **** 	if (State2.gtodot)
2870:src/keys.c    **** 		return process_gtodot((const keycode)c);
2871:src/keys.c    **** 
2872:src/keys.c    **** 	if (State2.hyp)
2873:src/keys.c    **** 		return process_hyp((const keycode)c);
2874:src/keys.c    **** 
2875:src/keys.c    **** 	if (State2.test != TST_NONE)
2876:src/keys.c    **** 		return process_test((const keycode)c);
2877:src/keys.c    **** 
2878:src/keys.c    **** 	if (State2.status)
2879:src/keys.c    **** 		return process_status((const keycode)c);
2880:src/keys.c    **** 
2881:src/keys.c    **** 	/*
2882:src/keys.c    **** 	 *  Process shift keys directly
2883:src/keys.c    **** 	 */
2884:src/keys.c    **** 	if (c == K_F) {
2885:src/keys.c    **** 		toggle_shift(SHIFT_F);
2886:src/keys.c    **** 		return STATE_UNFINISHED;
2887:src/keys.c    **** 	}
2888:src/keys.c    **** 	if (c == K_G) {
2889:src/keys.c    **** 		toggle_shift(SHIFT_G);
2890:src/keys.c    **** 		return STATE_UNFINISHED;
2891:src/keys.c    **** 	}
2892:src/keys.c    **** 	if (c == K_H) {
2893:src/keys.c    **** 		toggle_shift(SHIFT_H);
2894:src/keys.c    **** 		State2.arrow = 0;
2895:src/keys.c    **** 		return STATE_UNFINISHED;
2896:src/keys.c    **** 	}
2897:src/keys.c    **** 	/*
2898:src/keys.c    **** 	 *  The handlers in this block need to call reset_shift somewhere
2899:src/keys.c    **** 	 */
ARM GAS  /tmp/ccJ0w3QJ.s 			page 159


2900:src/keys.c    **** 	// print_debug (2, c);
2901:src/keys.c    **** 	if (State2.arrow)
2902:src/keys.c    **** 		return process_arrow((const keycode)c);
2903:src/keys.c    **** 
2904:src/keys.c    **** 	/*
2905:src/keys.c    **** 	 * Here the keys are mapped to catalogues
2906:src/keys.c    **** 	 * The position of this code decides where catalogue switching
2907:src/keys.c    **** 	 * works and were not
2908:src/keys.c    **** 	 */
2909:src/keys.c    **** 	cat = keycode_to_cat((keycode)c, shift);
2910:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
2911:src/keys.c    **** 		if (is_bad_cmdline())
2912:src/keys.c    **** 			return STATE_UNFINISHED;
2913:src/keys.c    **** 		init_cat( CATALOGUE_NONE );
2914:src/keys.c    **** 		init_cat( cat );
2915:src/keys.c    **** 		return STATE_UNFINISHED;
2916:src/keys.c    **** 	}
2917:src/keys.c    **** 
2918:src/keys.c    **** 	/*
2919:src/keys.c    **** 	 *  More handlers...
2920:src/keys.c    **** 	 */
2921:src/keys.c    **** 	if (State2.multi)
2922:src/keys.c    **** 		return process_multi((const keycode)c);
2923:src/keys.c    **** 
2924:src/keys.c    **** 	if (State2.labellist)
2925:src/keys.c    **** 		return process_labellist((const keycode)c);
2926:src/keys.c    **** 
2927:src/keys.c    **** 	if (State2.registerlist)
2928:src/keys.c    **** 		return process_registerlist((const keycode)c);
2929:src/keys.c    **** 
2930:src/keys.c    **** 	if (State2.catalogue)
2931:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
2932:src/keys.c    **** 
2933:src/keys.c    **** 	if (State2.alphas) {
2934:src/keys.c    **** #ifndef INFRARED
2935:src/keys.c    **** 		return process_alpha((const keycode)c);
2936:src/keys.c    **** #else
2937:src/keys.c    **** 		int i = process_alpha((const keycode)c);
2938:src/keys.c    **** 		if (! State2.alphas && get_user_flag(T_FLAG)) {
2939:src/keys.c    **** 			print_tab(0);
2940:src/keys.c    **** 			print_alpha(OP_PRINT_ALPHA);
2941:src/keys.c    **** 		}
2942:src/keys.c    **** 		return i;
2943:src/keys.c    **** #endif
2944:src/keys.c    **** 	}
2945:src/keys.c    **** 
2946:src/keys.c    **** 	if (State2.cmplx) {
2947:src/keys.c    **** 		return process_cmplx((const keycode)c);
2948:src/keys.c    **** 	} else {
2949:src/keys.c    **** 		if (shift == SHIFT_F || shift == SHIFT_G)
2950:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
2951:src/keys.c    **** 		if (shift == SHIFT_H)
2952:src/keys.c    **** 			return process_h_shifted((const keycode)c);
2953:src/keys.c    **** 		// print_debug (3, c);
2954:src/keys.c    **** 		return process_normal((const keycode)c);
2955:src/keys.c    **** 	}
2956:src/keys.c    **** }
ARM GAS  /tmp/ccJ0w3QJ.s 			page 160


2957:src/keys.c    **** 
2958:src/keys.c    ****  unsigned int get_alpha_state ( void ) {
 4733              		.loc 1 2958 40 is_stmt 1 view -0
 4734              		.cfi_startproc
 4735              		@ args = 0, pretend = 0, frame = 0
 4736              		@ frame_needed = 0, uses_anonymous_args = 0
 4737              		@ link register save eliminated.
2959:src/keys.c    ****    return (State2.alphas || State2.confirm || State2.status || State2.labellist
 4738              		.loc 1 2959 4 view .LVU1501
 4739              		.loc 1 2959 53 is_stmt 0 view .LVU1502
 4740 0000 074B     		ldr	r3, .L521
 4741              		.loc 1 2959 44 view .LVU1503
 4742 0002 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 4743 0004 1AB9     		cbnz	r2, .L519
2960:src/keys.c    **** 	   || State2.rarg || State2.registerlist || State2.multi 
2961:src/keys.c    **** 	   || State2.gtodot || State2.catalogue || (State2.test != TST_NONE) );
 4744              		.loc 1 2961 5 discriminator 2 view .LVU1504
 4745 0006 5969     		ldr	r1, [r3, #20]
 4746 0008 064A     		ldr	r2, .L521+4
 4747 000a 0A40     		ands	r2, r2, r1
 4748 000c 0AB1     		cbz	r2, .L520
 4749              	.L519:
 4750 000e 0120     		movs	r0, #1
2962:src/keys.c    ****  }
 4751              		.loc 1 2962 2 view .LVU1505
 4752 0010 7047     		bx	lr
 4753              	.L520:
2961:src/keys.c    ****  }
 4754              		.loc 1 2961 42 discriminator 3 view .LVU1506
 4755 0012 D889     		ldrh	r0, [r3, #14]
 4756 0014 B0F5E060 		subs	r0, r0, #1792
 4757 0018 18BF     		it	ne
 4758 001a 0120     		movne	r0, #1
 4759 001c 7047     		bx	lr
 4760              	.L522:
 4761 001e 00BF     		.align	2
 4762              	.L521:
 4763 0020 00000000 		.word	StateWhileOn
 4764 0024 0709280C 		.word	203950343
 4765              		.cfi_endproc
 4766              	.LFE56:
 4768              		.section	.rodata.process_keycode.str1.4,"aMS",%progbits,1
 4769              		.align	2
 4770              	.LC0:
 4771 0000 52554E00 		.ascii	"RUN\000"
 4772              		.align	2
 4773              	.LC1:
 4774 0004 4E554C4C 		.ascii	"NULL\000"
 4774      00
 4775 0009 000000   		.align	2
 4776              	.LC2:
 4777 000c 53746F70 		.ascii	"Stopped\000"
 4777      70656400 
 4778              		.section	.text.process_keycode,"ax",%progbits
 4779              		.align	1
 4780              		.p2align 2,,3
 4781              		.global	process_keycode
ARM GAS  /tmp/ccJ0w3QJ.s 			page 161


 4782              		.syntax unified
 4783              		.thumb
 4784              		.thumb_func
 4785              		.fpu fpv4-sp-d16
 4787              	process_keycode:
 4788              	.LVL393:
 4789              	.LFB58:
2963:src/keys.c    **** 
2964:src/keys.c    ****  void process_keycode_with_shift ( struct _ndmap remapped ) {
2965:src/keys.c    ****    if (remapped.shift >= 0) set_shift ( remapped.shift );
2966:src/keys.c    ****    process_keycode ( remapped.key_34s );
2967:src/keys.c    ****  }
2968:src/keys.c    ****  
2969:src/keys.c    **** /*
2970:src/keys.c    ****  *  Fed with key codes by the event loop
2971:src/keys.c    ****  */
2972:src/keys.c    **** void process_keycode(int c)
2973:src/keys.c    **** {
 4790              		.loc 1 2973 1 is_stmt 1 view -0
 4791              		.cfi_startproc
 4792              		@ args = 0, pretend = 0, frame = 8
 4793              		@ frame_needed = 0, uses_anonymous_args = 0
2974:src/keys.c    ****   static int was_paused;
 4794              		.loc 1 2974 3 view .LVU1508
2975:src/keys.c    ****   //volatile int cmdline_empty; // volatile because it's uninitialized in some cases
2976:src/keys.c    ****   int cmdline_empty = 0;        // Visual studio chokes in debug mode over the above
 4795              		.loc 1 2976 3 view .LVU1509
2977:src/keys.c    **** #ifdef DM42
2978:src/keys.c    ****   if (was_paused && ! PAUSED) {
 4796              		.loc 1 2978 3 view .LVU1510
2973:src/keys.c    ****   static int was_paused;
 4797              		.loc 1 2973 1 is_stmt 0 view .LVU1511
 4798 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4799              		.cfi_def_cfa_offset 36
 4800              		.cfi_offset 4, -36
 4801              		.cfi_offset 5, -32
 4802              		.cfi_offset 6, -28
 4803              		.cfi_offset 7, -24
 4804              		.cfi_offset 8, -20
 4805              		.cfi_offset 9, -16
 4806              		.cfi_offset 10, -12
 4807              		.cfi_offset 11, -8
 4808              		.cfi_offset 14, -4
 4809              		.loc 1 2978 7 view .LVU1512
 4810 0004 954E     		ldr	r6, .L1131
 4811              		.loc 1 2978 21 view .LVU1513
 4812 0006 964D     		ldr	r5, .L1131+4
 4813              		.loc 1 2978 6 view .LVU1514
 4814 0008 3368     		ldr	r3, [r6]
2973:src/keys.c    ****   static int was_paused;
 4815              		.loc 1 2973 1 view .LVU1515
 4816 000a 83B0     		sub	sp, sp, #12
 4817              		.cfi_def_cfa_offset 48
2973:src/keys.c    ****   static int was_paused;
 4818              		.loc 1 2973 1 view .LVU1516
 4819 000c 0446     		mov	r4, r0
 4820              		.loc 1 2978 6 view .LVU1517
ARM GAS  /tmp/ccJ0w3QJ.s 			page 162


 4821 000e 1BB1     		cbz	r3, .L524
 4822              		.loc 1 2978 21 discriminator 1 view .LVU1518
 4823 0010 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 4824              		.loc 1 2978 18 discriminator 1 view .LVU1519
 4825 0012 002B     		cmp	r3, #0
 4826 0014 00F0E380 		beq	.L1060
 4827              	.LVL394:
 4828              	.L524:
2979:src/keys.c    ****     /*
2980:src/keys.c    ****      *  Continue XROM execution after a pause
2981:src/keys.c    ****      */
2982:src/keys.c    ****     xeq_xrom();
2983:src/keys.c    ****   }
2984:src/keys.c    ****   was_paused = PAUSED;
 4829              		.loc 1 2984 3 is_stmt 1 view .LVU1520
 4830              		.loc 1 2984 14 is_stmt 0 view .LVU1521
 4831 0018 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 4832 001a 3360     		str	r3, [r6]
2985:src/keys.c    **** #else
2986:src/keys.c    ****   if (was_paused && Pause == 0) {
2987:src/keys.c    ****     /*
2988:src/keys.c    ****      *  Continue XROM execution after a pause
2989:src/keys.c    ****      */
2990:src/keys.c    ****     xeq_xrom();
2991:src/keys.c    ****   }
2992:src/keys.c    ****   was_paused = Pause;
2993:src/keys.c    **** #endif
2994:src/keys.c    ****   if (c == K_HEARTBEAT) {
 4833              		.loc 1 2994 3 is_stmt 1 view .LVU1522
 4834              		.loc 1 2994 6 is_stmt 0 view .LVU1523
 4835 001c 622C     		cmp	r4, #98
 4836 001e 00F0AE80 		beq	.L1061
2995:src/keys.c    ****     /*
2996:src/keys.c    ****      *  Heartbeat processing goes here.
2997:src/keys.c    ****      *  This is totally thread safe!
2998:src/keys.c    ****      */
2999:src/keys.c    **** #ifdef DM42
3000:src/keys.c    ****     if (keyticks() >=2 ) {
3001:src/keys.c    **** #else
3002:src/keys.c    ****     if (Keyticks >= 2) {
3003:src/keys.c    **** #endif
3004:src/keys.c    ****       /*
3005:src/keys.c    ****        *  Some time has passed after last key press
3006:src/keys.c    ****        */
3007:src/keys.c    ****       if (OpCode != 0) {
3008:src/keys.c    **** 	/*
3009:src/keys.c    **** 	 *  Handle command display and NULL here
3010:src/keys.c    **** 	 */
3011:src/keys.c    **** 	if (OpCodeDisplayPending) {
3012:src/keys.c    **** 	  /*
3013:src/keys.c    **** 	   *  Show command to the user
3014:src/keys.c    **** 	   */
3015:src/keys.c    **** 	  OpCodeDisplayPending = 0;
3016:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
3017:src/keys.c    **** 	    DispMsg = "RUN";
3018:src/keys.c    **** 	  }
3019:src/keys.c    **** 	  else {
ARM GAS  /tmp/ccJ0w3QJ.s 			page 163


3020:src/keys.c    **** 	    scopy_char(TraceBuffer, prt(OpCode, TraceBuffer), '\0');
3021:src/keys.c    **** 	    DispMsg = TraceBuffer;
3022:src/keys.c    **** 	  }
3023:src/keys.c    **** 	  display();
3024:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
3025:src/keys.c    **** 	}
3026:src/keys.c    **** #ifdef DM42
3027:src/keys.c    ****     else if (keyticks() > 12 ) {
3028:src/keys.c    **** #else
3029:src/keys.c    ****     else if (Keyticks > 12) {
3030:src/keys.c    **** #endif
3031:src/keys.c    **** 	  
3032:src/keys.c    **** 	  /*
3033:src/keys.c    **** 	   *  Key is too long held down
3034:src/keys.c    **** 	   */
3035:src/keys.c    **** 	  OpCode = 0;
3036:src/keys.c    **** 	  message("NULL", CNULL);
3037:src/keys.c    **** 	  // Force display update on key-up
3038:src/keys.c    **** 	  State2.disp_temp = 0;
3039:src/keys.c    **** 	}
3040:src/keys.c    ****       }
3041:src/keys.c    **** #ifdef DM42
3042:src/keys.c    **** 	if (keyticks() > 12 && shift_down() != SHIFT_N) {
3043:src/keys.c    **** #else
3044:src/keys.c    ****       if (Keyticks > 12 && shift_down() != SHIFT_N) {
3045:src/keys.c    **** #endif
3046:src/keys.c    **** 	// Rely on the held shift key instead of the toggle
3047:src/keys.c    **** 	State2.shifts = SHIFT_N;
3048:src/keys.c    ****       }
3049:src/keys.c    ****     }
3050:src/keys.c    **** 
3051:src/keys.c    ****     /*
3052:src/keys.c    ****      *  Serve the watchdog
3053:src/keys.c    ****      */
3054:src/keys.c    ****     watchdog();
3055:src/keys.c    **** 
3056:src/keys.c    **** #ifndef CONSOLE
3057:src/keys.c    ****     /*
3058:src/keys.c    ****      *  If buffer is empty re-allow R/S to start a program
3059:src/keys.c    ****      */
3060:src/keys.c    ****     if (JustStopped && !is_key_pressed()) {
3061:src/keys.c    ****       JustStopped = 0;
3062:src/keys.c    ****     }
3063:src/keys.c    **** #endif
3064:src/keys.c    **** 
3065:src/keys.c    ****     /*
3066:src/keys.c    ****      *  Do nothing if not running a program
3067:src/keys.c    ****      */
3068:src/keys.c    **** #ifdef DM42
3069:src/keys.c    ****     if (!Running && ! PAUSED)
3070:src/keys.c    **** #else
3071:src/keys.c    ****     if (!Running && ! Pause)
3072:src/keys.c    **** #endif
3073:src/keys.c    ****       return;
3074:src/keys.c    ****   }
3075:src/keys.c    ****   else {
3076:src/keys.c    ****     /*
ARM GAS  /tmp/ccJ0w3QJ.s 			page 164


3077:src/keys.c    ****      *  Not the heartbeat - prepare for execution of any commands
3078:src/keys.c    ****      */
3079:src/keys.c    ****     xeq_init_contexts();
 4837              		.loc 1 3079 5 is_stmt 1 view .LVU1524
3080:src/keys.c    ****     State2.wascomplex = 0;
 4838              		.loc 1 3080 23 is_stmt 0 view .LVU1525
 4839 0022 904E     		ldr	r6, .L1131+8
3079:src/keys.c    ****     State2.wascomplex = 0;
 4840              		.loc 1 3079 5 view .LVU1526
 4841 0024 FFF7FEFF 		bl	xeq_init_contexts
 4842              	.LVL395:
 4843              		.loc 1 3080 5 is_stmt 1 view .LVU1527
 4844              		.loc 1 3080 23 is_stmt 0 view .LVU1528
 4845 0028 337D     		ldrb	r3, [r6, #20]	@ zero_extendqisi2
3081:src/keys.c    **** 
3082:src/keys.c    ****     if (is_dot(RPN)) {
 4846              		.loc 1 3082 9 view .LVU1529
 4847 002a 8D20     		movs	r0, #141
3080:src/keys.c    **** 
 4848              		.loc 1 3080 23 view .LVU1530
 4849 002c 6FF38713 		bfc	r3, #6, #2
 4850 0030 3375     		strb	r3, [r6, #20]
 4851              		.loc 1 3082 5 is_stmt 1 view .LVU1531
 4852              		.loc 1 3082 9 is_stmt 0 view .LVU1532
 4853 0032 FFF7FEFF 		bl	is_dot
 4854              	.LVL396:
 4855              		.loc 1 3082 8 view .LVU1533
 4856 0036 0028     		cmp	r0, #0
 4857 0038 40F09880 		bne	.L1062
3083:src/keys.c    ****       /*
3084:src/keys.c    ****        * Turn off the RPN annunciator as a visual feedback
3085:src/keys.c    ****        */
3086:src/keys.c    ****       clr_dot(RPN);
3087:src/keys.c    ****       finish_display();
3088:src/keys.c    ****     }
3089:src/keys.c    **** 
3090:src/keys.c    **** #ifndef CONSOLE
3091:src/keys.c    ****     /*
3092:src/keys.c    ****      *  Reallow display refresh which is temporarily disabled after a stop
3093:src/keys.c    ****      *  All keys execpt R/S trigger this. The latter will only be reenabled
3094:src/keys.c    ****      *  from the heartbeat after the keybord buffer has become empty to avoid
3095:src/keys.c    ****      *  an accidental restart of the program.
3096:src/keys.c    ****      */
3097:src/keys.c    ****     if (c != K63)
 4858              		.loc 1 3097 5 is_stmt 1 view .LVU1534
 4859              		.loc 1 3097 8 is_stmt 0 view .LVU1535
 4860 003c 272C     		cmp	r4, #39
 4861 003e 3AD0     		beq	.L1039
 4862              	.L541:
3098:src/keys.c    ****       JustStopped = 0;
 4863              		.loc 1 3098 7 is_stmt 1 view .LVU1536
 4864              		.loc 1 3098 19 is_stmt 0 view .LVU1537
 4865 0040 894B     		ldr	r3, .L1131+12
 4866 0042 0022     		movs	r2, #0
3099:src/keys.c    **** #endif
3100:src/keys.c    ****   }
3101:src/keys.c    **** 
ARM GAS  /tmp/ccJ0w3QJ.s 			page 165


3102:src/keys.c    ****   /*
3103:src/keys.c    ****    *  Handle key release
3104:src/keys.c    ****    */
3105:src/keys.c    ****   if (c == K_RELEASE) {
 4867              		.loc 1 3105 6 view .LVU1538
 4868 0044 632C     		cmp	r4, #99
3098:src/keys.c    ****       JustStopped = 0;
 4869              		.loc 1 3098 19 view .LVU1539
 4870 0046 1A60     		str	r2, [r3]
 4871              		.loc 1 3105 3 is_stmt 1 view .LVU1540
 4872              		.loc 1 3105 6 is_stmt 0 view .LVU1541
 4873 0048 35D1     		bne	.L1039
3106:src/keys.c    ****     if (OpCode != 0) {
 4874              		.loc 1 3106 5 is_stmt 1 view .LVU1542
 4875              		.loc 1 3106 16 is_stmt 0 view .LVU1543
 4876 004a 884B     		ldr	r3, .L1131+16
 4877 004c 1C68     		ldr	r4, [r3]
 4878              	.LVL397:
 4879              		.loc 1 3106 8 view .LVU1544
 4880 004e 002C     		cmp	r4, #0
 4881 0050 00F0C781 		beq	.L543
3107:src/keys.c    ****       /*
3108:src/keys.c    ****        * Execute the key on release
3109:src/keys.c    ****        */
3110:src/keys.c    ****       GoFast = 1;
 4882              		.loc 1 3110 7 is_stmt 1 view .LVU1545
 4883              		.loc 1 3110 14 is_stmt 0 view .LVU1546
 4884 0054 8649     		ldr	r1, .L1131+20
3111:src/keys.c    ****       c = OpCode;
3112:src/keys.c    ****       OpCode = 0;
 4885              		.loc 1 3112 14 view .LVU1547
 4886 0056 1A60     		str	r2, [r3]
3110:src/keys.c    ****       c = OpCode;
 4887              		.loc 1 3110 14 view .LVU1548
 4888 0058 0120     		movs	r0, #1
3113:src/keys.c    **** 
3114:src/keys.c    ****       if (c == STATE_SST)
 4889              		.loc 1 3114 10 view .LVU1549
 4890 005a 2E2C     		cmp	r4, #46
3111:src/keys.c    ****       OpCode = 0;
 4891              		.loc 1 3111 9 view .LVU1550
 4892 005c A346     		mov	fp, r4
3110:src/keys.c    ****       c = OpCode;
 4893              		.loc 1 3110 14 view .LVU1551
 4894 005e 0860     		str	r0, [r1]
3111:src/keys.c    ****       OpCode = 0;
 4895              		.loc 1 3111 7 is_stmt 1 view .LVU1552
 4896              	.LVL398:
3112:src/keys.c    **** 
 4897              		.loc 1 3112 7 view .LVU1553
 4898              		.loc 1 3114 7 view .LVU1554
 4899              		.loc 1 3114 10 is_stmt 0 view .LVU1555
 4900 0060 00F0D281 		beq	.L1063
3115:src/keys.c    **** 	xeq_sst_bst(1);
3116:src/keys.c    ****       else {
3117:src/keys.c    **** 	if (c == (OP_NIL | OP_OFF) || c == (OP_NIL | OP_rCLX) || !is_bad_cmdline()) {
 4901              		.loc 1 3117 2 is_stmt 1 view .LVU1556
ARM GAS  /tmp/ccJ0w3QJ.s 			page 166


 4902              		.loc 1 3117 5 is_stmt 0 view .LVU1557
 4903 0064 B4F5817F 		cmp	r4, #258
 4904 0068 04D0     		beq	.L549
 4905              		.loc 1 3117 29 discriminator 1 view .LVU1558
 4906 006a 40F23F13 		movw	r3, #319
 4907 006e 9C42     		cmp	r4, r3
 4908 0070 40F0B880 		bne	.L1064
 4909              	.L549:
3118:src/keys.c    **** 	  xeq(c);
 4910              		.loc 1 3118 4 is_stmt 1 view .LVU1559
3119:src/keys.c    **** #ifdef DM42
3120:src/keys.c    **** 	  if (Running || PAUSED)
 4911              		.loc 1 3120 8 is_stmt 0 view .LVU1560
 4912 0074 7F4F     		ldr	r7, .L1131+24
3118:src/keys.c    **** 	  xeq(c);
 4913              		.loc 1 3118 4 view .LVU1561
 4914 0076 2046     		mov	r0, r4
 4915 0078 FFF7FEFF 		bl	xeq
 4916              	.LVL399:
 4917              		.loc 1 3120 4 is_stmt 1 view .LVU1562
 4918              		.loc 1 3120 7 is_stmt 0 view .LVU1563
 4919 007c 3B68     		ldr	r3, [r7]
 4920 007e 0BB9     		cbnz	r3, .L547
 4921              		.loc 1 3120 16 discriminator 1 view .LVU1564
 4922 0080 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 4923 0082 0BB1     		cbz	r3, .L545
 4924              	.L547:
3121:src/keys.c    **** #else
3122:src/keys.c    **** 	  if (Running || Pause)
3123:src/keys.c    **** #endif
3124:src/keys.c    **** 	    xeqprog();
 4925              		.loc 1 3124 6 is_stmt 1 view .LVU1565
 4926 0084 FFF7FEFF 		bl	xeqprog
 4927              	.LVL400:
 4928              	.L545:
3125:src/keys.c    **** 	}
3126:src/keys.c    ****       }
3127:src/keys.c    ****       dot(RPN, ShowRPN);
 4929              		.loc 1 3127 7 view .LVU1566
 4930 0088 7B4C     		ldr	r4, .L1131+28
 4931              	.LVL401:
 4932              		.loc 1 3127 7 is_stmt 0 view .LVU1567
 4933 008a 8D20     		movs	r0, #141
 4934 008c 2168     		ldr	r1, [r4]
 4935 008e FFF7FEFF 		bl	dot
 4936              	.LVL402:
3128:src/keys.c    ****     }
3129:src/keys.c    ****     else {
3130:src/keys.c    ****       // Ignore key-up if no operation was pending
3131:src/keys.c    ****       dot(RPN, ShowRPN);
3132:src/keys.c    **** #ifndef CONSOLE
3133:src/keys.c    ****       if (! State2.disp_temp ) {
3134:src/keys.c    **** 	if (!WasDataEntry) {
3135:src/keys.c    **** 	  // This will get rid of the last displayed op-code
3136:src/keys.c    **** 	  display();
3137:src/keys.c    **** 	}
3138:src/keys.c    **** 	else {
ARM GAS  /tmp/ccJ0w3QJ.s 			page 167


3139:src/keys.c    **** 	  finish_display(); // Update the RPN annunciator
3140:src/keys.c    **** 	}
3141:src/keys.c    ****       }
3142:src/keys.c    **** #endif
3143:src/keys.c    ****       return;
3144:src/keys.c    ****     }
3145:src/keys.c    **** 
3146:src/keys.c    ****     /*
3147:src/keys.c    ****      *  Turn on the RPN symbol if desired
3148:src/keys.c    ****      */
3149:src/keys.c    ****     if (ShowRPN) {
 4937              		.loc 1 3149 5 is_stmt 1 view .LVU1568
 4938              		.loc 1 3149 9 is_stmt 0 view .LVU1569
 4939 0092 D4F80080 		ldr	r8, [r4]
 4940              		.loc 1 3149 8 view .LVU1570
 4941 0096 B8F1000F 		cmp	r8, #0
 4942 009a 3FD0     		beq	.L552
3150:src/keys.c    ****       finish_display();
 4943              		.loc 1 3150 7 is_stmt 1 view .LVU1571
 4944 009c FFF7FEFF 		bl	finish_display
 4945              	.LVL403:
3151:src/keys.c    ****     }
3152:src/keys.c    ****   }
3153:src/keys.c    ****   else {
3154:src/keys.c    ****     /*
3155:src/keys.c    ****      *  Decode the key 
3156:src/keys.c    ****      */
3157:src/keys.c    ****     // print_debug (100, c);
3158:src/keys.c    ****     WasDataEntry = 0;
3159:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
3160:src/keys.c    ****     c = process(c);		// returns an op-code or state
3161:src/keys.c    ****     switch (c) {
3162:src/keys.c    ****     case STATE_SST:
3163:src/keys.c    ****       OpCode = c;
3164:src/keys.c    ****       OpCodeDisplayPending = 0;
3165:src/keys.c    ****       xeq_sst_bst(0);
3166:src/keys.c    ****       break;
3167:src/keys.c    **** 
3168:src/keys.c    ****     case STATE_BST:
3169:src/keys.c    ****       xeq_sst_bst(-1);
3170:src/keys.c    ****       break;
3171:src/keys.c    **** 
3172:src/keys.c    ****     case STATE_BACKSPACE:
3173:src/keys.c    ****       if (! State2.runmode)
3174:src/keys.c    **** 	delprog();
3175:src/keys.c    ****       else if (State2.alphas) {
3176:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
3177:src/keys.c    **** 	if (p > Alpha)
3178:src/keys.c    **** 	  *--p = '\0';
3179:src/keys.c    ****       }
3180:src/keys.c    ****       break;
3181:src/keys.c    **** 
3182:src/keys.c    ****     case STATE_RUNNING:
3183:src/keys.c    ****       xeqprog();  // continue execution
3184:src/keys.c    ****       break;
3185:src/keys.c    **** 
3186:src/keys.c    ****     case STATE_WINDOWRIGHT:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 168


3187:src/keys.c    ****     case STATE_WINDOWLEFT:
3188:src/keys.c    ****       if (!is_bad_cmdline())
3189:src/keys.c    **** 	set_window(c);
3190:src/keys.c    ****       break;
3191:src/keys.c    **** 
3192:src/keys.c    ****     case STATE_UNFINISHED:
3193:src/keys.c    ****     case STATE_IGNORE:
3194:src/keys.c    ****       break;
3195:src/keys.c    **** 
3196:src/keys.c    ****     default:
3197:src/keys.c    ****       if (State2.runmode || NonProgrammable) {
3198:src/keys.c    **** 	NonProgrammable = 0;
3199:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
3200:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
3201:src/keys.c    **** 	    // Data entry key
3202:src/keys.c    **** #ifndef CONSOLE
3203:src/keys.c    **** 	    WasDataEntry = 1;
3204:src/keys.c    **** #endif
3205:src/keys.c    **** 	    cmdline_empty = (CmdLineLength == 0);
3206:src/keys.c    **** 	    xeq(c);
3207:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
3208:src/keys.c    **** 	  }
3209:src/keys.c    **** 	}
3210:src/keys.c    **** 	else {
3211:src/keys.c    **** 	  // Save the op-code for execution on key-up
3212:src/keys.c    **** 	  OpCode = c;
3213:src/keys.c    **** 	  OpCodeDisplayPending = 1;
3214:src/keys.c    **** 	  finish_display(); // Update the RPN annunciator
3215:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
3216:src/keys.c    **** 	}
3217:src/keys.c    ****       }
3218:src/keys.c    ****       else {
3219:src/keys.c    **** 	stoprog(c);
3220:src/keys.c    ****       }
3221:src/keys.c    ****     }
3222:src/keys.c    ****   }
3223:src/keys.c    **** #ifdef DM42
3224:src/keys.c    ****   if (! Running && ! PAUSED
 4946              		.loc 1 3224 6 is_stmt 0 view .LVU1572
 4947 00a0 3B68     		ldr	r3, [r7]
2976:src/keys.c    **** #ifdef DM42
 4948              		.loc 1 2976 7 view .LVU1573
 4949 00a2 4FF00008 		mov	r8, #0
 4950              	.LVL404:
 4951              		.loc 1 3224 3 is_stmt 1 view .LVU1574
 4952              		.loc 1 3224 6 is_stmt 0 view .LVU1575
 4953 00a6 002B     		cmp	r3, #0
 4954 00a8 3BD0     		beq	.L566
 4955              	.L1054:
 4956              		.loc 1 3224 6 view .LVU1576
 4957 00aa 744C     		ldr	r4, .L1131+32
 4958              	.LVL405:
 4959              	.L822:
3225:src/keys.c    **** #else
3226:src/keys.c    ****   if (! Running && ! Pause
3227:src/keys.c    **** #endif
3228:src/keys.c    **** #ifndef CONSOLE
ARM GAS  /tmp/ccJ0w3QJ.s 			page 169


3229:src/keys.c    ****       && ! JustStopped
3230:src/keys.c    **** #endif
3231:src/keys.c    ****       && ! JustDisplayed && c != STATE_IGNORE) {
3232:src/keys.c    ****     const int orig_WasDataEntry = WasDataEntry;
3233:src/keys.c    **** 
3234:src/keys.c    ****     WasDataEntry &= !(c == (OP_SPEC | OP_ENTER) || cmdline_empty || State2.invalid_disp);
3235:src/keys.c    ****     display();
3236:src/keys.c    ****     WasDataEntry = orig_WasDataEntry;
3237:src/keys.c    ****   }
3238:src/keys.c    **** 
3239:src/keys.c    ****  no_display:
3240:src/keys.c    ****   JustDisplayed = 0;
 4960              		.loc 1 3240 3 is_stmt 1 view .LVU1577
 4961              		.loc 1 3240 17 is_stmt 0 view .LVU1578
 4962 00ac 0023     		movs	r3, #0
 4963 00ae 2360     		str	r3, [r4]
3241:src/keys.c    ****   watchdog();
 4964              		.loc 1 3241 13 is_stmt 1 view .LVU1579
3242:src/keys.c    **** }
 4965              		.loc 1 3242 1 is_stmt 0 view .LVU1580
 4966 00b0 03B0     		add	sp, sp, #12
 4967              		.cfi_remember_state
 4968              		.cfi_def_cfa_offset 36
 4969              		@ sp needed
 4970 00b2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4971              	.LVL406:
 4972              	.L1039:
 4973              		.cfi_restore_state
 4974              		.loc 1 3242 1 view .LVU1581
 4975 00b6 6F4F     		ldr	r7, .L1131+24
 4976 00b8 3B68     		ldr	r3, [r7]
 4977              	.L538:
3158:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 4978              		.loc 1 3158 5 is_stmt 1 view .LVU1582
3159:src/keys.c    ****     c = process(c);		// returns an op-code or state
 4979              		.loc 1 3159 13 is_stmt 0 view .LVU1583
 4980 00ba 6F49     		ldr	r1, .L1131+28
3158:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 4981              		.loc 1 3158 18 view .LVU1584
 4982 00bc DFF8D491 		ldr	r9, .L1131+56
3159:src/keys.c    ****     c = process(c);		// returns an op-code or state
 4983              		.loc 1 3159 15 view .LVU1585
 4984 00c0 B3FA83F3 		clz	r3, r3
 4985 00c4 5B09     		lsrs	r3, r3, #5
3158:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 4986              		.loc 1 3158 18 view .LVU1586
 4987 00c6 0022     		movs	r2, #0
3159:src/keys.c    ****     c = process(c);		// returns an op-code or state
 4988              		.loc 1 3159 13 view .LVU1587
 4989 00c8 0B60     		str	r3, [r1]
3158:src/keys.c    ****     ShowRPN = ! Running;	// Default behaviour, may be turned off later
 4990              		.loc 1 3158 18 view .LVU1588
 4991 00ca C9F80020 		str	r2, [r9]
3159:src/keys.c    ****     c = process(c);		// returns an op-code or state
 4992              		.loc 1 3159 5 is_stmt 1 view .LVU1589
3160:src/keys.c    ****     switch (c) {
 4993              		.loc 1 3160 5 view .LVU1590
ARM GAS  /tmp/ccJ0w3QJ.s 			page 170


 4994              	.LVL407:
 4995              	.LBB678:
 4996              	.LBI678:
2781:src/keys.c    ****   const enum shifts shift = cur_shift();
 4997              		.loc 1 2781 12 view .LVU1591
 4998              	.LBB679:
2782:src/keys.c    ****   enum catalogues cat;
 4999              		.loc 1 2782 3 view .LVU1592
 5000              	.LBB680:
 5001              	.LBI680:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 5002              		.loc 1 84 13 view .LVU1593
 5003              	.LBB681:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5004              		.loc 1 85 2 view .LVU1594
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5005              		.loc 1 85 18 is_stmt 0 view .LVU1595
 5006 00ce FFF7FEFF 		bl	shift_down
 5007              	.LVL408:
  86:src/keys.c    **** }
 5008              		.loc 1 86 2 is_stmt 1 view .LVU1596
  86:src/keys.c    **** }
 5009              		.loc 1 86 52 is_stmt 0 view .LVU1597
 5010 00d2 8246     		mov	r10, r0
 5011 00d4 10B9     		cbnz	r0, .L555
 5012 00d6 634B     		ldr	r3, .L1131+8
 5013 00d8 93F810A0 		ldrb	r10, [r3, #16]	@ zero_extendqisi2
 5014              	.L555:
 5015              	.LVL409:
  86:src/keys.c    **** }
 5016              		.loc 1 86 52 view .LVU1598
 5017              	.LBE681:
 5018              	.LBE680:
2783:src/keys.c    **** 
 5019              		.loc 1 2783 3 is_stmt 1 view .LVU1599
2787:src/keys.c    ****     /*
 5020              		.loc 1 2787 3 view .LVU1600
2787:src/keys.c    ****     /*
 5021              		.loc 1 2787 7 is_stmt 0 view .LVU1601
 5022 00dc D7F80080 		ldr	r8, [r7]
2787:src/keys.c    ****     /*
 5023              		.loc 1 2787 6 view .LVU1602
 5024 00e0 B8F1000F 		cmp	r8, #0
 5025 00e4 03D1     		bne	.L556
2787:src/keys.c    ****     /*
 5026              		.loc 1 2787 15 view .LVU1603
 5027 00e6 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 5028 00e8 002B     		cmp	r3, #0
 5029 00ea 00F08280 		beq	.L557
 5030              	.L556:
2791:src/keys.c    ****       if (PAUSED && isXROM(state_pc()))
 5031              		.loc 1 2791 5 is_stmt 1 view .LVU1604
2791:src/keys.c    ****       if (PAUSED && isXROM(state_pc()))
 5032              		.loc 1 2791 8 is_stmt 0 view .LVU1605
 5033 00ee 242C     		cmp	r4, #36
 5034 00f0 00F08D80 		beq	.L558
2791:src/keys.c    ****       if (PAUSED && isXROM(state_pc()))
ARM GAS  /tmp/ccJ0w3QJ.s 			page 171


 5035              		.loc 1 2791 18 view .LVU1606
 5036 00f4 272C     		cmp	r4, #39
 5037 00f6 00F08A80 		beq	.L558
2801:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 5038              		.loc 1 2801 5 is_stmt 1 view .LVU1607
2801:src/keys.c    ****       LastKey = (char) (c + 1);	// Store for KEY?
 5039              		.loc 1 2801 8 is_stmt 0 view .LVU1608
 5040 00fa 622C     		cmp	r4, #98
 5041 00fc 08D0     		beq	.L561
2802:src/keys.c    ****       start_pause(0);			// leave PSE statement
 5042              		.loc 1 2802 7 is_stmt 1 view .LVU1609
2802:src/keys.c    ****       start_pause(0);			// leave PSE statement
 5043              		.loc 1 2802 15 is_stmt 0 view .LVU1610
 5044 00fe 594B     		ldr	r3, .L1131+8
2802:src/keys.c    ****       start_pause(0);			// leave PSE statement
 5045              		.loc 1 2802 17 view .LVU1611
 5046 0100 0134     		adds	r4, r4, #1
 5047              	.LVL410:
2803:src/keys.c    ****       GoFast = 1;
 5048              		.loc 1 2803 7 view .LVU1612
 5049 0102 0020     		movs	r0, #0
2802:src/keys.c    ****       start_pause(0);			// leave PSE statement
 5050              		.loc 1 2802 15 view .LVU1613
 5051 0104 DC74     		strb	r4, [r3, #19]
2803:src/keys.c    ****       GoFast = 1;
 5052              		.loc 1 2803 7 is_stmt 1 view .LVU1614
 5053 0106 FFF7FEFF 		bl	start_pause
 5054              	.LVL411:
2804:src/keys.c    ****     }
 5055              		.loc 1 2804 7 view .LVU1615
2804:src/keys.c    ****     }
 5056              		.loc 1 2804 14 is_stmt 0 view .LVU1616
 5057 010a 594B     		ldr	r3, .L1131+20
 5058 010c 0122     		movs	r2, #1
 5059 010e 1A60     		str	r2, [r3]
 5060              	.LVL412:
 5061              	.L561:
2804:src/keys.c    ****     }
 5062              		.loc 1 2804 14 view .LVU1617
 5063              	.LBE679:
 5064              	.LBE678:
3183:src/keys.c    ****       break;
 5065              		.loc 1 3183 7 is_stmt 1 view .LVU1618
 5066 0110 FFF7FEFF 		bl	xeqprog
 5067              	.LVL413:
3184:src/keys.c    **** 
 5068              		.loc 1 3184 7 view .LVU1619
2976:src/keys.c    **** #ifdef DM42
 5069              		.loc 1 2976 7 is_stmt 0 view .LVU1620
 5070 0114 4FF00008 		mov	r8, #0
3184:src/keys.c    **** 
 5071              		.loc 1 3184 7 view .LVU1621
 5072 0118 4FF0310B 		mov	fp, #49
 5073              	.LVL414:
 5074              	.L552:
3224:src/keys.c    **** #else
 5075              		.loc 1 3224 3 is_stmt 1 view .LVU1622
ARM GAS  /tmp/ccJ0w3QJ.s 			page 172


3224:src/keys.c    **** #else
 5076              		.loc 1 3224 6 is_stmt 0 view .LVU1623
 5077 011c 3B68     		ldr	r3, [r7]
 5078 011e 002B     		cmp	r3, #0
 5079 0120 C3D1     		bne	.L1054
 5080              	.LVL415:
 5081              	.L566:
3224:src/keys.c    **** #else
 5082              		.loc 1 3224 20 discriminator 1 view .LVU1624
 5083 0122 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
3224:src/keys.c    **** #else
 5084              		.loc 1 3224 17 discriminator 1 view .LVU1625
 5085 0124 002B     		cmp	r3, #0
 5086 0126 C0D1     		bne	.L1054
3229:src/keys.c    **** #endif
 5087              		.loc 1 3229 10 view .LVU1626
 5088 0128 4F4B     		ldr	r3, .L1131+12
3231:src/keys.c    ****     const int orig_WasDataEntry = WasDataEntry;
 5089              		.loc 1 3231 10 view .LVU1627
 5090 012a 544C     		ldr	r4, .L1131+32
 5091 012c 1B68     		ldr	r3, [r3]
 5092 012e 2268     		ldr	r2, [r4]
3231:src/keys.c    ****     const int orig_WasDataEntry = WasDataEntry;
 5093              		.loc 1 3231 7 view .LVU1628
 5094 0130 1343     		orrs	r3, r3, r2
 5095 0132 BBD1     		bne	.L822
3231:src/keys.c    ****     const int orig_WasDataEntry = WasDataEntry;
 5096              		.loc 1 3231 26 discriminator 1 view .LVU1629
 5097 0134 BBF1320F 		cmp	fp, #50
 5098 0138 B8D0     		beq	.L822
 5099              	.LBB1259:
3232:src/keys.c    **** 
 5100              		.loc 1 3232 5 is_stmt 1 view .LVU1630
3232:src/keys.c    **** 
 5101              		.loc 1 3232 15 is_stmt 0 view .LVU1631
 5102 013a DFF85891 		ldr	r9, .L1131+56
 5103 013e D9F80050 		ldr	r5, [r9]
 5104              	.LVL416:
3234:src/keys.c    ****     display();
 5105              		.loc 1 3234 5 is_stmt 1 view .LVU1632
3234:src/keys.c    ****     display();
 5106              		.loc 1 3234 21 is_stmt 0 view .LVU1633
 5107 0142 BBF1000F 		cmp	fp, #0
 5108 0146 0AD0     		beq	.L824
3234:src/keys.c    ****     display();
 5109              		.loc 1 3234 49 discriminator 1 view .LVU1634
 5110 0148 B8F1000F 		cmp	r8, #0
 5111 014c 40F07B84 		bne	.L875
3234:src/keys.c    ****     display();
 5112              		.loc 1 3234 66 discriminator 3 view .LVU1635
 5113 0150 444B     		ldr	r3, .L1131+8
 5114 0152 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
3234:src/keys.c    ****     display();
 5115              		.loc 1 3234 21 discriminator 3 view .LVU1636
 5116 0154 9807     		lsls	r0, r3, #30
 5117 0156 00F11985 		bmi	.L876
 5118 015a 05F0010B 		and	fp, r5, #1
ARM GAS  /tmp/ccJ0w3QJ.s 			page 173


 5119              	.LVL417:
 5120              	.L824:
3234:src/keys.c    ****     display();
 5121              		.loc 1 3234 18 discriminator 8 view .LVU1637
 5122 015e C9F800B0 		str	fp, [r9]
3235:src/keys.c    ****     WasDataEntry = orig_WasDataEntry;
 5123              		.loc 1 3235 5 is_stmt 1 discriminator 8 view .LVU1638
 5124 0162 FFF7FEFF 		bl	display
 5125              	.LVL418:
3236:src/keys.c    ****   }
 5126              		.loc 1 3236 5 discriminator 8 view .LVU1639
3236:src/keys.c    ****   }
 5127              		.loc 1 3236 18 is_stmt 0 discriminator 8 view .LVU1640
 5128 0166 C9F80050 		str	r5, [r9]
 5129 016a 9FE7     		b	.L822
 5130              	.LVL419:
 5131              	.L1062:
3236:src/keys.c    ****   }
 5132              		.loc 1 3236 18 discriminator 8 view .LVU1641
 5133              	.LBE1259:
3086:src/keys.c    ****       finish_display();
 5134              		.loc 1 3086 7 is_stmt 1 view .LVU1642
 5135 016c 8D20     		movs	r0, #141
 5136 016e FFF7FEFF 		bl	clr_dot
 5137              	.LVL420:
3087:src/keys.c    ****     }
 5138              		.loc 1 3087 7 view .LVU1643
 5139 0172 FFF7FEFF 		bl	finish_display
 5140              	.LVL421:
3097:src/keys.c    ****       JustStopped = 0;
 5141              		.loc 1 3097 5 view .LVU1644
3097:src/keys.c    ****       JustStopped = 0;
 5142              		.loc 1 3097 8 is_stmt 0 view .LVU1645
 5143 0176 272C     		cmp	r4, #39
 5144 0178 7FF462AF 		bne	.L541
 5145 017c 9BE7     		b	.L1039
 5146              	.L1061:
3000:src/keys.c    **** #else
 5147              		.loc 1 3000 5 is_stmt 1 view .LVU1646
3000:src/keys.c    **** #else
 5148              		.loc 1 3000 9 is_stmt 0 view .LVU1647
 5149 017e FFF7FEFF 		bl	keyticks
 5150              	.LVL422:
3000:src/keys.c    **** #else
 5151              		.loc 1 3000 8 view .LVU1648
 5152 0182 0128     		cmp	r0, #1
 5153 0184 1ADD     		ble	.L527
3007:src/keys.c    **** 	/*
 5154              		.loc 1 3007 7 is_stmt 1 view .LVU1649
3007:src/keys.c    **** 	/*
 5155              		.loc 1 3007 18 is_stmt 0 view .LVU1650
 5156 0186 394E     		ldr	r6, .L1131+16
 5157 0188 3068     		ldr	r0, [r6]
3007:src/keys.c    **** 	/*
 5158              		.loc 1 3007 10 view .LVU1651
 5159 018a 98B1     		cbz	r0, .L529
3011:src/keys.c    **** 	  /*
ARM GAS  /tmp/ccJ0w3QJ.s 			page 174


 5160              		.loc 1 3011 2 is_stmt 1 view .LVU1652
3011:src/keys.c    **** 	  /*
 5161              		.loc 1 3011 6 is_stmt 0 view .LVU1653
 5162 018c 3C4B     		ldr	r3, .L1131+36
3011:src/keys.c    **** 	  /*
 5163              		.loc 1 3011 5 view .LVU1654
 5164 018e 1F68     		ldr	r7, [r3]
 5165 0190 002F     		cmp	r7, #0
 5166 0192 00F01783 		beq	.L530
3015:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5167              		.loc 1 3015 4 is_stmt 1 view .LVU1655
3016:src/keys.c    **** 	    DispMsg = "RUN";
 5168              		.loc 1 3016 7 is_stmt 0 view .LVU1656
 5169 0196 40F23B12 		movw	r2, #315
3015:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5170              		.loc 1 3015 25 view .LVU1657
 5171 019a 0026     		movs	r6, #0
3016:src/keys.c    **** 	    DispMsg = "RUN";
 5172              		.loc 1 3016 7 view .LVU1658
 5173 019c 9042     		cmp	r0, r2
3015:src/keys.c    **** 	  if (OpCode == (OP_NIL | OP_RS)) {
 5174              		.loc 1 3015 25 view .LVU1659
 5175 019e 1E60     		str	r6, [r3]
3016:src/keys.c    **** 	    DispMsg = "RUN";
 5176              		.loc 1 3016 4 is_stmt 1 view .LVU1660
3016:src/keys.c    **** 	    DispMsg = "RUN";
 5177              		.loc 1 3016 7 is_stmt 0 view .LVU1661
 5178 01a0 40F03681 		bne	.L531
3017:src/keys.c    **** 	  }
 5179              		.loc 1 3017 6 is_stmt 1 view .LVU1662
3017:src/keys.c    **** 	  }
 5180              		.loc 1 3017 14 is_stmt 0 view .LVU1663
 5181 01a4 374B     		ldr	r3, .L1131+40
 5182 01a6 384A     		ldr	r2, .L1131+44
 5183 01a8 1A60     		str	r2, [r3]
 5184              	.L532:
3023:src/keys.c    **** 	  ShowRPN = 1;	// Off because of DispMsg setting
 5185              		.loc 1 3023 4 is_stmt 1 view .LVU1664
 5186 01aa FFF7FEFF 		bl	display
 5187              	.LVL423:
3024:src/keys.c    **** 	}
 5188              		.loc 1 3024 4 view .LVU1665
3024:src/keys.c    **** 	}
 5189              		.loc 1 3024 12 is_stmt 0 view .LVU1666
 5190 01ae 324B     		ldr	r3, .L1131+28
 5191 01b0 0122     		movs	r2, #1
 5192 01b2 1A60     		str	r2, [r3]
 5193              	.L529:
3042:src/keys.c    **** #else
 5194              		.loc 1 3042 2 is_stmt 1 view .LVU1667
3042:src/keys.c    **** #else
 5195              		.loc 1 3042 6 is_stmt 0 view .LVU1668
 5196 01b4 FFF7FEFF 		bl	keyticks
 5197              	.LVL424:
3042:src/keys.c    **** #else
 5198              		.loc 1 3042 5 view .LVU1669
 5199 01b8 0C28     		cmp	r0, #12
ARM GAS  /tmp/ccJ0w3QJ.s 			page 175


 5200 01ba 46DC     		bgt	.L1065
 5201              	.L527:
3054:src/keys.c    **** 
 5202              		.loc 1 3054 15 is_stmt 1 view .LVU1670
3060:src/keys.c    ****       JustStopped = 0;
 5203              		.loc 1 3060 5 view .LVU1671
3060:src/keys.c    ****       JustStopped = 0;
 5204              		.loc 1 3060 9 is_stmt 0 view .LVU1672
 5205 01bc 2A4E     		ldr	r6, .L1131+12
3060:src/keys.c    ****       JustStopped = 0;
 5206              		.loc 1 3060 8 view .LVU1673
 5207 01be 3368     		ldr	r3, [r6]
 5208 01c0 002B     		cmp	r3, #0
 5209 01c2 40F00781 		bne	.L1066
 5210              	.L536:
3069:src/keys.c    **** #else
 5211              		.loc 1 3069 5 is_stmt 1 view .LVU1674
3069:src/keys.c    **** #else
 5212              		.loc 1 3069 9 is_stmt 0 view .LVU1675
 5213 01c6 2B4F     		ldr	r7, .L1131+24
 5214 01c8 3B68     		ldr	r3, [r7]
3069:src/keys.c    **** #else
 5215              		.loc 1 3069 8 view .LVU1676
 5216 01ca 002B     		cmp	r3, #0
 5217 01cc 7FF475AF 		bne	.L538
3069:src/keys.c    **** #else
 5218              		.loc 1 3069 21 discriminator 1 view .LVU1677
 5219 01d0 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
3069:src/keys.c    **** #else
 5220              		.loc 1 3069 18 discriminator 1 view .LVU1678
 5221 01d2 002A     		cmp	r2, #0
 5222 01d4 7FF471AF 		bne	.L538
 5223              	.LVL425:
 5224              	.L523:
 5225              		.loc 1 3242 1 view .LVU1679
 5226 01d8 03B0     		add	sp, sp, #12
 5227              		.cfi_remember_state
 5228              		.cfi_def_cfa_offset 36
 5229              		@ sp needed
 5230 01da BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5231              	.LVL426:
 5232              	.L1060:
 5233              		.cfi_restore_state
2982:src/keys.c    ****   }
 5234              		.loc 1 2982 5 is_stmt 1 view .LVU1680
 5235 01de FFF7FEFF 		bl	xeq_xrom
 5236              	.LVL427:
2982:src/keys.c    ****   }
 5237              		.loc 1 2982 5 is_stmt 0 view .LVU1681
 5238 01e2 19E7     		b	.L524
 5239              	.L1064:
3117:src/keys.c    **** 	  xeq(c);
 5240              		.loc 1 3117 60 discriminator 2 view .LVU1682
 5241 01e4 FFF7FEFF 		bl	is_bad_cmdline
 5242              	.LVL428:
3117:src/keys.c    **** 	  xeq(c);
 5243              		.loc 1 3117 56 discriminator 2 view .LVU1683
ARM GAS  /tmp/ccJ0w3QJ.s 			page 176


 5244 01e8 0028     		cmp	r0, #0
 5245 01ea 3FF443AF 		beq	.L549
 5246 01ee 214F     		ldr	r7, .L1131+24
 5247 01f0 4AE7     		b	.L545
 5248              	.LVL429:
 5249              	.L557:
 5250              	.LBB1260:
 5251              	.LBB1203:
2837:src/keys.c    ****     soft_init_state();
 5252              		.loc 1 2837 3 is_stmt 1 view .LVU1684
2837:src/keys.c    ****     soft_init_state();
 5253              		.loc 1 2837 6 is_stmt 0 view .LVU1685
 5254 01f2 242C     		cmp	r4, #36
 5255 01f4 00F07783 		beq	.L1067
2843:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5256              		.loc 1 2843 2 is_stmt 1 view .LVU1686
2843:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5257              		.loc 1 2843 5 is_stmt 0 view .LVU1687
 5258 01f8 272C     		cmp	r4, #39
 5259 01fa 4DD1     		bne	.L565
2843:src/keys.c    **** 		// Avoid an accidental restart with R/S
 5260              		.loc 1 2843 15 view .LVU1688
 5261 01fc 1A4B     		ldr	r3, .L1131+12
 5262 01fe 1A68     		ldr	r2, [r3]
 5263 0200 002A     		cmp	r2, #0
 5264 0202 49D0     		beq	.L565
2845:src/keys.c    **** 		return STATE_IGNORE;
 5265              		.loc 1 2845 3 is_stmt 1 view .LVU1689
2845:src/keys.c    **** 		return STATE_IGNORE;
 5266              		.loc 1 2845 15 is_stmt 0 view .LVU1690
 5267 0204 C3F80080 		str	r8, [r3]
2846:src/keys.c    **** 	}
 5268              		.loc 1 2846 3 is_stmt 1 view .LVU1691
 5269              	.LVL430:
2846:src/keys.c    **** 	}
 5270              		.loc 1 2846 3 is_stmt 0 view .LVU1692
 5271              	.LBE1203:
 5272              	.LBE1260:
3224:src/keys.c    **** #else
 5273              		.loc 1 3224 3 is_stmt 1 view .LVU1693
 5274              	.LBB1261:
 5275              	.LBB1204:
2846:src/keys.c    **** 	}
 5276              		.loc 1 2846 10 is_stmt 0 view .LVU1694
 5277 0208 4FF0320B 		mov	fp, #50
 5278 020c 89E7     		b	.L566
 5279              	.LVL431:
 5280              	.L558:
2792:src/keys.c    **** 	set_pc(0);
 5281              		.loc 1 2792 7 is_stmt 1 view .LVU1695
2792:src/keys.c    **** 	set_pc(0);
 5282              		.loc 1 2792 11 is_stmt 0 view .LVU1696
 5283 020e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
2792:src/keys.c    **** 	set_pc(0);
 5284              		.loc 1 2792 10 view .LVU1697
 5285 0210 3BB1     		cbz	r3, .L560
2792:src/keys.c    **** 	set_pc(0);
ARM GAS  /tmp/ccJ0w3QJ.s 			page 177


 5286              		.loc 1 2792 21 view .LVU1698
 5287 0212 1E4B     		ldr	r3, .L1131+48
 5288 0214 1B68     		ldr	r3, [r3]
 5289 0216 B3F8E037 		ldrh	r3, [r3, #2016]
2792:src/keys.c    **** 	set_pc(0);
 5290              		.loc 1 2792 18 view .LVU1699
 5291 021a 9B0B     		lsrs	r3, r3, #14
 5292 021c 032B     		cmp	r3, #3
 5293 021e 00F07483 		beq	.L1068
 5294              	.L560:
2794:src/keys.c    ****       xeq_xrom();
 5295              		.loc 1 2794 7 is_stmt 1 view .LVU1700
 5296 0222 0020     		movs	r0, #0
 5297 0224 FFF7FEFF 		bl	start_pause
 5298              	.LVL432:
2795:src/keys.c    ****       set_running_off();
 5299              		.loc 1 2795 7 view .LVU1701
 5300 0228 FFF7FEFF 		bl	xeq_xrom
 5301              	.LVL433:
2796:src/keys.c    ****       DispMsg = "Stopped";
 5302              		.loc 1 2796 7 view .LVU1702
 5303 022c FFF7FEFF 		bl	set_running_off
 5304              	.LVL434:
2797:src/keys.c    ****       State2.disp_freeze = 0;
 5305              		.loc 1 2797 7 view .LVU1703
2798:src/keys.c    ****       return STATE_UNFINISHED;
 5306              		.loc 1 2798 26 is_stmt 0 view .LVU1704
 5307 0230 0C4B     		ldr	r3, .L1131+8
2797:src/keys.c    ****       State2.disp_freeze = 0;
 5308              		.loc 1 2797 15 view .LVU1705
 5309 0232 1449     		ldr	r1, .L1131+40
2798:src/keys.c    ****       return STATE_UNFINISHED;
 5310              		.loc 1 2798 26 view .LVU1706
 5311 0234 DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
2797:src/keys.c    ****       State2.disp_freeze = 0;
 5312              		.loc 1 2797 15 view .LVU1707
 5313 0236 1648     		ldr	r0, .L1131+52
 5314 0238 0860     		str	r0, [r1]
2798:src/keys.c    ****       return STATE_UNFINISHED;
 5315              		.loc 1 2798 7 is_stmt 1 view .LVU1708
2798:src/keys.c    ****       return STATE_UNFINISHED;
 5316              		.loc 1 2798 26 is_stmt 0 view .LVU1709
 5317 023a 6FF30412 		bfc	r2, #4, #1
 5318 023e DA75     		strb	r2, [r3, #23]
2799:src/keys.c    ****     }
 5319              		.loc 1 2799 7 is_stmt 1 view .LVU1710
 5320              	.LBE1204:
 5321              	.LBE1261:
2976:src/keys.c    **** #ifdef DM42
 5322              		.loc 1 2976 7 is_stmt 0 view .LVU1711
 5323 0240 4FF00008 		mov	r8, #0
 5324              	.LBB1262:
 5325              	.LBB1205:
2799:src/keys.c    ****     }
 5326              		.loc 1 2799 14 view .LVU1712
 5327 0244 4FF0330B 		mov	fp, #51
 5328 0248 68E7     		b	.L552
ARM GAS  /tmp/ccJ0w3QJ.s 			page 178


 5329              	.LVL435:
 5330              	.L1065:
2799:src/keys.c    ****     }
 5331              		.loc 1 2799 14 view .LVU1713
 5332              	.LBE1205:
 5333              	.LBE1262:
3042:src/keys.c    **** #else
 5334              		.loc 1 3042 25 discriminator 1 view .LVU1714
 5335 024a FFF7FEFF 		bl	shift_down
 5336              	.LVL436:
3042:src/keys.c    **** #else
 5337              		.loc 1 3042 22 discriminator 1 view .LVU1715
 5338 024e 0028     		cmp	r0, #0
 5339 0250 B4D0     		beq	.L527
3047:src/keys.c    ****       }
 5340              		.loc 1 3047 2 is_stmt 1 view .LVU1716
3047:src/keys.c    ****       }
 5341              		.loc 1 3047 16 is_stmt 0 view .LVU1717
 5342 0252 044B     		ldr	r3, .L1131+8
 5343 0254 0022     		movs	r2, #0
 5344 0256 1A74     		strb	r2, [r3, #16]
 5345 0258 B0E7     		b	.L527
 5346              	.L1132:
 5347 025a 00BF     		.align	2
 5348              	.L1131:
 5349 025c 00000000 		.word	.LANCHOR12
 5350 0260 00000000 		.word	Pause
 5351 0264 00000000 		.word	StateWhileOn
 5352 0268 00000000 		.word	JustStopped
 5353 026c 00000000 		.word	OpCode
 5354 0270 00000000 		.word	GoFast
 5355 0274 00000000 		.word	Running
 5356 0278 00000000 		.word	ShowRPN
 5357 027c 00000000 		.word	JustDisplayed
 5358 0280 00000000 		.word	OpCodeDisplayPending
 5359 0284 00000000 		.word	DispMsg
 5360 0288 00000000 		.word	.LC0
 5361 028c 00000000 		.word	main_ram
 5362 0290 0C000000 		.word	.LC2
 5363 0294 00000000 		.word	WasDataEntry
 5364              	.LVL437:
 5365              	.L565:
3047:src/keys.c    ****       }
 5366              		.loc 1 3047 16 view .LVU1718
 5367 0298 8D4E     		ldr	r6, .L1133
 5368 029a B37B     		ldrb	r3, [r6, #14]	@ zero_extendqisi2
 5369              	.L563:
 5370              	.LBB1263:
 5371              	.LBB1206:
2853:src/keys.c    **** #else	
 5372              		.loc 1 2853 2 is_stmt 1 view .LVU1719
2853:src/keys.c    **** #else	
 5373              		.loc 1 2853 5 is_stmt 0 view .LVU1720
 5374 029c 002B     		cmp	r3, #0
 5375 029e 40F08A82 		bne	.L1069
 5376              	.L568:
2863:src/keys.c    **** 		return process_confirm((const keycode)c);
ARM GAS  /tmp/ccJ0w3QJ.s 			page 179


 5377              		.loc 1 2863 2 is_stmt 1 view .LVU1721
2863:src/keys.c    **** 		return process_confirm((const keycode)c);
 5378              		.loc 1 2863 6 is_stmt 0 view .LVU1722
 5379 02a2 337D     		ldrb	r3, [r6, #20]	@ zero_extendqisi2
2863:src/keys.c    **** 		return process_confirm((const keycode)c);
 5380              		.loc 1 2863 5 view .LVU1723
 5381 02a4 5B07     		lsls	r3, r3, #29
 5382 02a6 40F0AA82 		bne	.L1070
2866:src/keys.c    **** 		return process_arg((const keycode)c);
 5383              		.loc 1 2866 2 is_stmt 1 view .LVU1724
2866:src/keys.c    **** 		return process_arg((const keycode)c);
 5384              		.loc 1 2866 6 is_stmt 0 view .LVU1725
 5385 02aa B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
2866:src/keys.c    **** 		return process_arg((const keycode)c);
 5386              		.loc 1 2866 5 view .LVU1726
 5387 02ac 13F02001 		ands	r1, r3, #32
 5388 02b0 40F02683 		bne	.L1071
2869:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5389              		.loc 1 2869 2 is_stmt 1 view .LVU1727
2869:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5390              		.loc 1 2869 6 is_stmt 0 view .LVU1728
 5391 02b4 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
2869:src/keys.c    **** 		return process_gtodot((const keycode)c);
 5392              		.loc 1 2869 5 view .LVU1729
 5393 02b6 12F0010B 		ands	fp, r2, #1
 5394 02ba 40F07483 		bne	.L1072
2872:src/keys.c    **** 		return process_hyp((const keycode)c);
 5395              		.loc 1 2872 2 is_stmt 1 view .LVU1730
2872:src/keys.c    **** 		return process_hyp((const keycode)c);
 5396              		.loc 1 2872 5 is_stmt 0 view .LVU1731
 5397 02be 12F02001 		ands	r1, r2, #32
 5398 02c2 40F0B180 		bne	.L1073
2875:src/keys.c    **** 		return process_test((const keycode)c);
 5399              		.loc 1 2875 2 is_stmt 1 view .LVU1732
2875:src/keys.c    **** 		return process_test((const keycode)c);
 5400              		.loc 1 2875 12 is_stmt 0 view .LVU1733
 5401 02c6 96F80FB0 		ldrb	fp, [r6, #15]	@ zero_extendqisi2
2875:src/keys.c    **** 		return process_test((const keycode)c);
 5402              		.loc 1 2875 5 view .LVU1734
 5403 02ca BBF1070F 		cmp	fp, #7
 5404 02ce 40F03083 		bne	.L1074
2878:src/keys.c    **** 		return process_status((const keycode)c);
 5405              		.loc 1 2878 2 is_stmt 1 view .LVU1735
2878:src/keys.c    **** 		return process_status((const keycode)c);
 5406              		.loc 1 2878 12 is_stmt 0 view .LVU1736
 5407 02d2 337B     		ldrb	r3, [r6, #12]	@ zero_extendqisi2
2878:src/keys.c    **** 		return process_status((const keycode)c);
 5408              		.loc 1 2878 5 view .LVU1737
 5409 02d4 002B     		cmp	r3, #0
 5410 02d6 40F0C583 		bne	.L1075
2884:src/keys.c    **** 		toggle_shift(SHIFT_F);
 5411              		.loc 1 2884 2 is_stmt 1 view .LVU1738
2884:src/keys.c    **** 		toggle_shift(SHIFT_F);
 5412              		.loc 1 2884 5 is_stmt 0 view .LVU1739
 5413 02da 292C     		cmp	r4, #41
 5414 02dc 00F0AA84 		beq	.L1076
2888:src/keys.c    **** 		toggle_shift(SHIFT_G);
ARM GAS  /tmp/ccJ0w3QJ.s 			page 180


 5415              		.loc 1 2888 2 is_stmt 1 view .LVU1740
2888:src/keys.c    **** 		toggle_shift(SHIFT_G);
 5416              		.loc 1 2888 5 is_stmt 0 view .LVU1741
 5417 02e0 2A2C     		cmp	r4, #42
 5418 02e2 00F0B784 		beq	.L1077
2892:src/keys.c    **** 		toggle_shift(SHIFT_H);
 5419              		.loc 1 2892 2 is_stmt 1 view .LVU1742
2892:src/keys.c    **** 		toggle_shift(SHIFT_H);
 5420              		.loc 1 2892 5 is_stmt 0 view .LVU1743
 5421 02e6 2B2C     		cmp	r4, #43
 5422 02e8 00F0C484 		beq	.L1078
2901:src/keys.c    **** 		return process_arrow((const keycode)c);
 5423              		.loc 1 2901 2 is_stmt 1 view .LVU1744
2901:src/keys.c    **** 		return process_arrow((const keycode)c);
 5424              		.loc 1 2901 5 is_stmt 0 view .LVU1745
 5425 02ec 5007     		lsls	r0, r2, #29
 5426 02ee 00F1E383 		bmi	.L1079
2909:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 5427              		.loc 1 2909 2 is_stmt 1 view .LVU1746
2909:src/keys.c    **** 	if ( cat != CATALOGUE_NONE ) {
 5428              		.loc 1 2909 8 is_stmt 0 view .LVU1747
 5429 02f2 E4B2     		uxtb	r4, r4
 5430              	.LVL438:
 5431              	.LBB682:
 5432              	.LBI682:
 271:src/keys.c    **** {
 5433              		.loc 1 271 24 is_stmt 1 view .LVU1748
 5434              	.LBB683:
 273:src/keys.c    ****   int i, col, max;
 5435              		.loc 1 273 3 view .LVU1749
 274:src/keys.c    ****   const struct _map {
 5436              		.loc 1 274 3 view .LVU1750
 275:src/keys.c    ****     unsigned char key, cat[3];
 5437              		.loc 1 275 3 view .LVU1751
 280:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 5438              		.loc 1 280 3 view .LVU1752
 280:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 5439              		.loc 1 280 6 is_stmt 0 view .LVU1753
 5440 02f4 212C     		cmp	r4, #33
 5441 02f6 00F06784 		beq	.L1080
 283:src/keys.c    ****     /*
 5442              		.loc 1 283 3 is_stmt 1 view .LVU1754
 283:src/keys.c    ****     /*
 5443              		.loc 1 283 23 is_stmt 0 view .LVU1755
 5444 02fa 7649     		ldr	r1, .L1133+4
 5445 02fc 7369     		ldr	r3, [r6, #20]
 283:src/keys.c    ****     /*
 5446              		.loc 1 283 6 view .LVU1756
 5447 02fe 1942     		tst	r1, r3
 5448 0300 40F01684 		bne	.L642
 5449              	.LBB684:
 287:src/keys.c    **** #ifdef DM42
 5450              		.loc 1 287 5 is_stmt 1 view .LVU1757
 314:src/keys.c    ****       /*
 5451              		.loc 1 314 5 view .LVU1758
 314:src/keys.c    ****       /*
 5452              		.loc 1 314 8 is_stmt 0 view .LVU1759
ARM GAS  /tmp/ccJ0w3QJ.s 			page 181


 5453 0304 242C     		cmp	r4, #36
 5454 0306 03D1     		bne	.L643
 314:src/keys.c    ****       /*
 5455              		.loc 1 314 18 view .LVU1760
 5456 0308 BAF1020F 		cmp	r10, #2
 5457 030c 01F0D481 		beq	.L849
 5458              	.L643:
 329:src/keys.c    ****       /*
 5459              		.loc 1 329 5 is_stmt 1 view .LVU1761
 329:src/keys.c    ****       /*
 5460              		.loc 1 329 8 is_stmt 0 view .LVU1762
 5461 0310 BAF1030F 		cmp	r10, #3
 5462 0314 1AD1     		bne	.L650
 5463              	.L838:
 339:src/keys.c    **** #ifndef WINGUI
 5464              		.loc 1 339 5 is_stmt 1 view .LVU1763
 5465              	.LVL439:
 341:src/keys.c    **** #else
 5466              		.loc 1 341 5 view .LVU1764
 341:src/keys.c    **** #else
 5467              		.loc 1 341 23 is_stmt 0 view .LVU1765
 5468 0316 704B     		ldr	r3, .L1133+8
 5469 0318 1B68     		ldr	r3, [r3]
 5470 031a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 341:src/keys.c    **** #else
 5471              		.loc 1 341 27 view .LVU1766
 5472 031e D907     		lsls	r1, r3, #31
 5473 0320 00F10185 		bmi	.L850
 341:src/keys.c    **** #else
 5474              		.loc 1 341 73 view .LVU1767
 5475 0324 12F0020B 		ands	fp, r2, #2
 5476 0328 00F0B587 		beq	.L1081
 339:src/keys.c    **** #ifndef WINGUI
 5477              		.loc 1 339 8 view .LVU1768
 5478 032c 6B4B     		ldr	r3, .L1133+12
 345:src/keys.c    ****   }
 5479              		.loc 1 345 9 view .LVU1769
 5480 032e 0C21     		movs	r1, #12
 341:src/keys.c    **** #else
 5481              		.loc 1 341 73 view .LVU1770
 5482 0330 4FF0020C 		mov	ip, #2
 5483              	.LVL440:
 5484              	.L645:
 341:src/keys.c    **** #else
 5485              		.loc 1 341 73 view .LVU1771
 5486              	.LBE684:
 387:src/keys.c    ****     if (cp->key == c) {
 5487              		.loc 1 387 3 is_stmt 1 view .LVU1772
 387:src/keys.c    ****     if (cp->key == c) {
 5488              		.loc 1 387 15 view .LVU1773
 5489 0334 181F     		subs	r0, r3, #4
 5490 0336 00EB8100 		add	r0, r0, r1, lsl #2
 5491              	.LBB685:
 341:src/keys.c    **** #else
 5492              		.loc 1 341 73 is_stmt 0 view .LVU1774
 5493 033a 0421     		movs	r1, #4
 5494              	.LVL441:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 182


 341:src/keys.c    **** #else
 5495              		.loc 1 341 73 view .LVU1775
 5496 033c 01E0     		b	.L651
 5497              	.LVL442:
 5498              	.L1083:
 341:src/keys.c    **** #else
 5499              		.loc 1 341 73 view .LVU1776
 5500 033e 13F8041F 		ldrb	r1, [r3, #4]!	@ zero_extendqisi2
 5501              	.LVL443:
 5502              	.L651:
 341:src/keys.c    **** #else
 5503              		.loc 1 341 73 view .LVU1777
 5504              	.LBE685:
 388:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 5505              		.loc 1 388 5 is_stmt 1 view .LVU1778
 387:src/keys.c    ****     if (cp->key == c) {
 5506              		.loc 1 387 24 view .LVU1779
 387:src/keys.c    ****     if (cp->key == c) {
 5507              		.loc 1 387 15 view .LVU1780
 388:src/keys.c    ****       cat = (enum catalogues) cp->cat[col];
 5508              		.loc 1 388 8 is_stmt 0 view .LVU1781
 5509 0342 8C42     		cmp	r4, r1
 5510 0344 00F02584 		beq	.L1082
 387:src/keys.c    ****     if (cp->key == c) {
 5511              		.loc 1 387 3 view .LVU1782
 5512 0348 9842     		cmp	r0, r3
 5513 034a F8D1     		bne	.L1083
 5514              	.LVL444:
 5515              	.L650:
 393:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5516              		.loc 1 393 3 is_stmt 1 view .LVU1783
 393:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5517              		.loc 1 393 6 is_stmt 0 view .LVU1784
 5518 034c 1107     		lsls	r1, r2, #28
 5519 034e 00F1DF80 		bmi	.L655
 5520              	.LVL445:
 5521              	.L654:
 393:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 5522              		.loc 1 393 6 view .LVU1785
 5523              	.LBE683:
 5524              	.LBE682:
2924:src/keys.c    **** 		return process_labellist((const keycode)c);
 5525              		.loc 1 2924 2 is_stmt 1 view .LVU1786
2924:src/keys.c    **** 		return process_labellist((const keycode)c);
 5526              		.loc 1 2924 6 is_stmt 0 view .LVU1787
 5527 0352 F17D     		ldrb	r1, [r6, #23]	@ zero_extendqisi2
2924:src/keys.c    **** 		return process_labellist((const keycode)c);
 5528              		.loc 1 2924 5 view .LVU1788
 5529 0354 4B07     		lsls	r3, r1, #29
 5530 0356 00F1EC84 		bmi	.L1084
2927:src/keys.c    **** 		return process_registerlist((const keycode)c);
 5531              		.loc 1 2927 2 is_stmt 1 view .LVU1789
2927:src/keys.c    **** 		return process_registerlist((const keycode)c);
 5532              		.loc 1 2927 5 is_stmt 0 view .LVU1790
 5533 035a 0807     		lsls	r0, r1, #28
 5534 035c 00F12886 		bmi	.L1085
2930:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
ARM GAS  /tmp/ccJ0w3QJ.s 			page 183


 5535              		.loc 1 2930 2 is_stmt 1 view .LVU1791
2930:src/keys.c    **** 		return process_catalogue((const keycode)c, reset_shift(), 0);
 5536              		.loc 1 2930 5 is_stmt 0 view .LVU1792
 5537 0360 B37B     		ldrb	r3, [r6, #14]	@ zero_extendqisi2
 5538 0362 002B     		cmp	r3, #0
 5539 0364 40F0BF86 		bne	.L1086
2933:src/keys.c    **** #ifndef INFRARED
 5540              		.loc 1 2933 2 is_stmt 1 view .LVU1793
2933:src/keys.c    **** #ifndef INFRARED
 5541              		.loc 1 2933 6 is_stmt 0 view .LVU1794
 5542 0368 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
2933:src/keys.c    **** #ifndef INFRARED
 5543              		.loc 1 2933 5 view .LVU1795
 5544 036a 1807     		lsls	r0, r3, #28
 5545 036c 00F1C986 		bmi	.L1087
2946:src/keys.c    **** 		return process_cmplx((const keycode)c);
 5546              		.loc 1 2946 2 is_stmt 1 view .LVU1796
2946:src/keys.c    **** 		return process_cmplx((const keycode)c);
 5547              		.loc 1 2946 5 is_stmt 0 view .LVU1797
 5548 0370 12F0020B 		ands	fp, r2, #2
 5549 0374 41F00280 		bne	.L1088
2949:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5550              		.loc 1 2949 3 is_stmt 1 view .LVU1798
2949:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5551              		.loc 1 2949 24 is_stmt 0 view .LVU1799
 5552 0378 0AF1FF32 		add	r2, r10, #-1
2949:src/keys.c    **** 			return process_fg_shifted((const keycode)c);
 5553              		.loc 1 2949 6 view .LVU1800
 5554 037c D2B2     		uxtb	r2, r2
 5555 037e 012A     		cmp	r2, #1
 5556 0380 41F27C80 		bls	.L1089
2951:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 5557              		.loc 1 2951 3 is_stmt 1 view .LVU1801
2951:src/keys.c    **** 			return process_h_shifted((const keycode)c);
 5558              		.loc 1 2951 6 is_stmt 0 view .LVU1802
 5559 0384 BAF1030F 		cmp	r10, #3
 5560 0388 00F04387 		beq	.L1090
2954:src/keys.c    **** 	}
 5561              		.loc 1 2954 3 is_stmt 1 view .LVU1803
 5562              	.LVL446:
 5563              	.LBB698:
 5564              	.LBI698:
 693:src/keys.c    **** {
 5565              		.loc 1 693 12 view .LVU1804
 5566              	.LBB699:
 695:src/keys.c    **** 		// Row 1
 5567              		.loc 1 695 2 view .LVU1805
 742:src/keys.c    **** 	// print_debug (10, lc);
 5568              		.loc 1 742 2 view .LVU1806
 5569              	.LBB700:
 5570              	.LBI700:
 139:src/keys.c    **** {
 5571              		.loc 1 139 12 view .LVU1807
 5572              	.LBB701:
 141:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 5573              		.loc 1 141 2 view .LVU1808
 151:src/keys.c    **** }
ARM GAS  /tmp/ccJ0w3QJ.s 			page 184


 5574              		.loc 1 151 2 view .LVU1809
 151:src/keys.c    **** }
 5575              		.loc 1 151 2 is_stmt 0 view .LVU1810
 5576              	.LBE701:
 5577              	.LBE700:
 744:src/keys.c    **** 	// print_debug (11, op);
 5578              		.loc 1 744 2 is_stmt 1 view .LVU1811
 750:src/keys.c    **** 	  switch (c) {
 5579              		.loc 1 750 6 is_stmt 0 view .LVU1812
 5580 038c 524A     		ldr	r2, .L1133+8
 5581              	.LBB704:
 5582              	.LBB702:
 151:src/keys.c    **** }
 5583              		.loc 1 151 23 view .LVU1813
 5584 038e 5448     		ldr	r0, .L1133+16
 5585              	.LBE702:
 5586              	.LBE704:
 750:src/keys.c    **** 	  switch (c) {
 5587              		.loc 1 750 6 view .LVU1814
 5588 0390 1268     		ldr	r2, [r2]
 5589              	.LBB705:
 5590              	.LBB703:
 151:src/keys.c    **** }
 5591              		.loc 1 151 23 view .LVU1815
 5592 0392 10F804C0 		ldrb	ip, [r0, r4]	@ zero_extendqisi2
 5593              	.LBE703:
 5594              	.LBE705:
 744:src/keys.c    **** 	// print_debug (11, op);
 5595              		.loc 1 744 17 view .LVU1816
 5596 0396 5348     		ldr	r0, .L1133+20
 750:src/keys.c    **** 	  switch (c) {
 5597              		.loc 1 750 6 view .LVU1817
 5598 0398 92F8E827 		ldrb	r2, [r2, #2024]	@ zero_extendqisi2
 744:src/keys.c    **** 	// print_debug (11, op);
 5599              		.loc 1 744 17 view .LVU1818
 5600 039c 30F81CA0 		ldrh	r10, [r0, ip, lsl #1]
 5601              	.LVL447:
 750:src/keys.c    **** 	  switch (c) {
 5602              		.loc 1 750 5 view .LVU1819
 5603 03a0 D007     		lsls	r0, r2, #31
 744:src/keys.c    **** 	// print_debug (11, op);
 5604              		.loc 1 744 6 view .LVU1820
 5605 03a2 D346     		mov	fp, r10
 5606              	.LVL448:
 749:src/keys.c    **** 	if (UState.intm) {
 5607              		.loc 1 749 2 is_stmt 1 view .LVU1821
 750:src/keys.c    **** 	  switch (c) {
 5608              		.loc 1 750 2 view .LVU1822
 750:src/keys.c    **** 	  switch (c) {
 5609              		.loc 1 750 5 is_stmt 0 view .LVU1823
 5610 03a4 79D5     		bpl	.L786
 751:src/keys.c    **** 	  case K00:
 5611              		.loc 1 751 4 is_stmt 1 view .LVU1824
 5612 03a6 122C     		cmp	r4, #18
 5613 03a8 77D8     		bhi	.L786
 5614 03aa DFE814F0 		tbh	[pc, r4, lsl #1]
 5615              	.L788:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 185


 5616 03ae 8C01     		.2byte	(.L791-.L788)/2
 5617 03b0 8001     		.2byte	(.L790-.L788)/2
 5618 03b2 7600     		.2byte	(.L786-.L788)/2
 5619 03b4 6001     		.2byte	(.L789-.L788)/2
 5620 03b6 7600     		.2byte	(.L786-.L788)/2
 5621 03b8 7600     		.2byte	(.L786-.L788)/2
 5622 03ba 7600     		.2byte	(.L786-.L788)/2
 5623 03bc 7600     		.2byte	(.L786-.L788)/2
 5624 03be 7600     		.2byte	(.L786-.L788)/2
 5625 03c0 7600     		.2byte	(.L786-.L788)/2
 5626 03c2 7600     		.2byte	(.L786-.L788)/2
 5627 03c4 7600     		.2byte	(.L786-.L788)/2
 5628 03c6 7600     		.2byte	(.L786-.L788)/2
 5629 03c8 7600     		.2byte	(.L786-.L788)/2
 5630 03ca 7600     		.2byte	(.L786-.L788)/2
 5631 03cc 7600     		.2byte	(.L786-.L788)/2
 5632 03ce 7600     		.2byte	(.L786-.L788)/2
 5633 03d0 7600     		.2byte	(.L786-.L788)/2
 5634 03d2 5401     		.2byte	(.L787-.L788)/2
 5635              	.LVL449:
 5636              		.p2align 1
 5637              	.L1066:
 751:src/keys.c    **** 	  case K00:
 5638              		.loc 1 751 4 is_stmt 0 view .LVU1825
 5639              	.LBE699:
 5640              	.LBE698:
 5641              	.LBE1206:
 5642              	.LBE1263:
3060:src/keys.c    ****       JustStopped = 0;
 5643              		.loc 1 3060 25 discriminator 1 view .LVU1826
 5644 03d4 FFF7FEFF 		bl	is_key_pressed
 5645              	.LVL450:
3060:src/keys.c    ****       JustStopped = 0;
 5646              		.loc 1 3060 21 discriminator 1 view .LVU1827
 5647 03d8 0028     		cmp	r0, #0
 5648 03da 7FF4F4AE 		bne	.L536
3061:src/keys.c    ****     }
 5649              		.loc 1 3061 7 is_stmt 1 view .LVU1828
3061:src/keys.c    ****     }
 5650              		.loc 1 3061 19 is_stmt 0 view .LVU1829
 5651 03de 3060     		str	r0, [r6]
 5652 03e0 F1E6     		b	.L536
 5653              	.LVL451:
 5654              	.L543:
3131:src/keys.c    **** #ifndef CONSOLE
 5655              		.loc 1 3131 7 is_stmt 1 view .LVU1830
 5656 03e2 414B     		ldr	r3, .L1133+24
 5657 03e4 8D20     		movs	r0, #141
 5658 03e6 1968     		ldr	r1, [r3]
 5659 03e8 FFF7FEFF 		bl	dot
 5660              	.LVL452:
3133:src/keys.c    **** 	if (!WasDataEntry) {
 5661              		.loc 1 3133 7 view .LVU1831
3133:src/keys.c    **** 	if (!WasDataEntry) {
 5662              		.loc 1 3133 11 is_stmt 0 view .LVU1832
 5663 03ec F37D     		ldrb	r3, [r6, #23]	@ zero_extendqisi2
3133:src/keys.c    **** 	if (!WasDataEntry) {
ARM GAS  /tmp/ccJ0w3QJ.s 			page 186


 5664              		.loc 1 3133 10 view .LVU1833
 5665 03ee 9A06     		lsls	r2, r3, #26
 5666 03f0 3FF5F2AE 		bmi	.L523
3134:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 5667              		.loc 1 3134 2 is_stmt 1 view .LVU1834
3134:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 5668              		.loc 1 3134 6 is_stmt 0 view .LVU1835
 5669 03f4 3D4B     		ldr	r3, .L1133+28
3134:src/keys.c    **** 	  // This will get rid of the last displayed op-code
 5670              		.loc 1 3134 5 view .LVU1836
 5671 03f6 1B68     		ldr	r3, [r3]
 5672 03f8 002B     		cmp	r3, #0
 5673 03fa 40F0FB81 		bne	.L554
3136:src/keys.c    **** 	}
 5674              		.loc 1 3136 4 is_stmt 1 view .LVU1837
 5675              		.loc 1 3242 1 is_stmt 0 view .LVU1838
 5676 03fe 03B0     		add	sp, sp, #12
 5677              		.cfi_remember_state
 5678              		.cfi_def_cfa_offset 36
 5679              		@ sp needed
 5680 0400 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5681              		.cfi_restore 14
 5682              		.cfi_restore 11
 5683              		.cfi_restore 10
 5684              		.cfi_restore 9
 5685              		.cfi_restore 8
 5686              		.cfi_restore 7
 5687              		.cfi_restore 6
 5688              		.cfi_restore 5
 5689              		.cfi_restore 4
 5690              		.cfi_def_cfa_offset 0
3136:src/keys.c    **** 	}
 5691              		.loc 1 3136 4 view .LVU1839
 5692 0404 FFF7FEBF 		b	display
 5693              	.LVL453:
 5694              	.L1063:
 5695              		.cfi_restore_state
3115:src/keys.c    ****       else {
 5696              		.loc 1 3115 2 is_stmt 1 view .LVU1840
 5697 0408 FFF7FEFF 		bl	xeq_sst_bst
 5698              	.LVL454:
 5699 040c 384F     		ldr	r7, .L1133+32
 5700 040e 3BE6     		b	.L545
 5701              	.L531:
3020:src/keys.c    **** 	    DispMsg = TraceBuffer;
 5702              		.loc 1 3020 6 view .LVU1841
 5703 0410 384F     		ldr	r7, .L1133+36
 5704 0412 3946     		mov	r1, r7
 5705 0414 FFF7FEFF 		bl	prt
 5706              	.LVL455:
 5707 0418 3246     		mov	r2, r6
 5708 041a 0146     		mov	r1, r0
 5709 041c 3846     		mov	r0, r7
 5710 041e FFF7FEFF 		bl	scopy_char
 5711              	.LVL456:
3021:src/keys.c    **** 	  }
 5712              		.loc 1 3021 6 view .LVU1842
ARM GAS  /tmp/ccJ0w3QJ.s 			page 187


3021:src/keys.c    **** 	  }
 5713              		.loc 1 3021 14 is_stmt 0 view .LVU1843
 5714 0422 354B     		ldr	r3, .L1133+40
 5715 0424 1F60     		str	r7, [r3]
 5716 0426 C0E6     		b	.L532
 5717              	.LVL457:
 5718              	.L1073:
 5719              	.LBB1264:
 5720              	.LBB1207:
2873:src/keys.c    **** 
 5721              		.loc 1 2873 3 is_stmt 1 view .LVU1844
 5722              	.LBB721:
 5723              	.LBB722:
1256:src/keys.c    **** 	State2.dot = 0;
 5724              		.loc 1 1256 15 is_stmt 0 view .LVU1845
 5725 0428 22F06203 		bic	r3, r2, #98
 5726              	.LBE722:
 5727              	.LBE721:
2873:src/keys.c    **** 
 5728              		.loc 1 2873 10 view .LVU1846
 5729 042c E4B2     		uxtb	r4, r4
 5730              	.LVL458:
 5731              	.LBB736:
 5732              	.LBI721:
1246:src/keys.c    **** 	static const unsigned char op_map[][2] = {
 5733              		.loc 1 1246 12 is_stmt 1 view .LVU1847
 5734              	.LBB732:
1247:src/keys.c    **** 		{ OP_ASINH, OP_SINH },
 5735              		.loc 1 1247 2 view .LVU1848
1252:src/keys.c    **** 	int f = State2.dot;
 5736              		.loc 1 1252 2 view .LVU1849
1256:src/keys.c    **** 	State2.dot = 0;
 5737              		.loc 1 1256 15 is_stmt 0 view .LVU1850
 5738 042e 7375     		strb	r3, [r6, #21]
1252:src/keys.c    **** 	int f = State2.dot;
 5739              		.loc 1 1252 20 view .LVU1851
 5740 0430 C2F3400A 		ubfx	r10, r2, #1, #1
 5741              	.LVL459:
1253:src/keys.c    **** 
 5742              		.loc 1 1253 2 is_stmt 1 view .LVU1852
1253:src/keys.c    **** 
 5743              		.loc 1 1253 16 is_stmt 0 view .LVU1853
 5744 0434 C2F38019 		ubfx	r9, r2, #6, #1
 5745              	.LVL460:
1255:src/keys.c    **** 	State2.cmplx = 0;
 5746              		.loc 1 1255 2 is_stmt 1 view .LVU1854
1256:src/keys.c    **** 	State2.dot = 0;
 5747              		.loc 1 1256 2 view .LVU1855
1257:src/keys.c    **** #ifdef DM42
 5748              		.loc 1 1257 2 view .LVU1856
1259:src/keys.c    **** #endif
 5749              		.loc 1 1259 2 view .LVU1857
 5750              	.LBB723:
 5751              	.LBI723:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 5752              		.loc 1 102 13 view .LVU1858
 5753              	.LBE723:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 188


 5754              	.LBE732:
 5755              	.LBE736:
 5756              	.LBE1207:
 5757              	.LBE1264:
 103:src/keys.c    **** }
 5758              		.loc 1 103 2 view .LVU1859
 5759              	.LBB1265:
 5760              	.LBB1208:
 5761              	.LBB737:
 5762              	.LBB733:
 5763              	.LBB730:
 5764              	.LBB724:
 5765              	.LBI724:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 5766              		.loc 1 92 20 view .LVU1860
 5767              	.LBB725:
  93:src/keys.c    **** 	State2.shifts = shift;
 5768              		.loc 1 93 2 view .LVU1861
 5769              	.LBB726:
 5770              	.LBI726:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 5771              		.loc 1 84 13 view .LVU1862
 5772              	.LBB727:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5773              		.loc 1 85 2 view .LVU1863
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5774              		.loc 1 85 18 is_stmt 0 view .LVU1864
 5775 0438 FFF7FEFF 		bl	shift_down
 5776              	.LVL461:
  86:src/keys.c    **** }
 5777              		.loc 1 86 2 is_stmt 1 view .LVU1865
 5778              	.LBE727:
 5779              	.LBE726:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 5780              		.loc 1 94 2 view .LVU1866
 5781              	.LBE725:
 5782              	.LBE724:
 5783              	.LBE730:
1261:src/keys.c    **** 
 5784              		.loc 1 1261 2 is_stmt 0 view .LVU1867
 5785 043c 2A2C     		cmp	r4, #42
 5786              	.LBB731:
 5787              	.LBB729:
 5788              	.LBB728:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 5789              		.loc 1 94 16 view .LVU1868
 5790 043e 86F810B0 		strb	fp, [r6, #16]
  95:src/keys.c    **** 	return r;
 5791              		.loc 1 95 2 is_stmt 1 view .LVU1869
  95:src/keys.c    **** 	return r;
 5792              		.loc 1 95 19 is_stmt 0 view .LVU1870
 5793 0442 86F80DB0 		strb	fp, [r6, #13]
  96:src/keys.c    **** }
 5794              		.loc 1 96 2 is_stmt 1 view .LVU1871
 5795              	.LVL462:
  96:src/keys.c    **** }
 5796              		.loc 1 96 2 is_stmt 0 view .LVU1872
ARM GAS  /tmp/ccJ0w3QJ.s 			page 189


 5797              	.LBE728:
 5798              	.LBE729:
 5799              	.LBE731:
1261:src/keys.c    **** 
 5800              		.loc 1 1261 2 is_stmt 1 view .LVU1873
 5801 0446 00F2E882 		bhi	.L598
 5802 044a 282C     		cmp	r4, #40
 5803 044c 00F2FB83 		bhi	.L599
 5804 0450 013C     		subs	r4, r4, #1
 5805              	.LVL463:
1261:src/keys.c    **** 
 5806              		.loc 1 1261 2 is_stmt 0 view .LVU1874
 5807 0452 E3B2     		uxtb	r3, r4
 5808 0454 022B     		cmp	r3, #2
 5809 0456 00F2C280 		bhi	.L1051
1266:src/keys.c    **** 
 5810              		.loc 1 1266 3 is_stmt 1 view .LVU1875
1266:src/keys.c    **** 
 5811              		.loc 1 1266 54 is_stmt 0 view .LVU1876
 5812 045a 284A     		ldr	r2, .L1133+44
 5813 045c B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 5814 045e 02EB4404 		add	r4, r2, r4, lsl #1
 5815              	.LVL464:
1266:src/keys.c    **** 
 5816              		.loc 1 1266 27 view .LVU1877
 5817 0462 BAF1000F 		cmp	r10, #0
1266:src/keys.c    **** 
 5818              		.loc 1 1266 54 view .LVU1878
 5819 0466 14F809B0 		ldrb	fp, [r4, r9]	@ zero_extendqisi2
1266:src/keys.c    **** 
 5820              		.loc 1 1266 27 view .LVU1879
 5821 046a 14BF     		ite	ne
 5822 046c 4FF4A062 		movne	r2, #1280
 5823 0470 4FF40072 		moveq	r2, #512
1266:src/keys.c    **** 
 5824              		.loc 1 1266 37 view .LVU1880
 5825 0474 4BEA020B 		orr	fp, fp, r2
 5826 0478 5846     		mov	r0, fp
 5827              	.LVL465:
 5828              	.L603:
1266:src/keys.c    **** 
 5829              		.loc 1 1266 37 view .LVU1881
 5830              	.LBE733:
 5831              	.LBE737:
 5832              	.LBE1208:
 5833              	.LBE1265:
3197:src/keys.c    **** 	NonProgrammable = 0;
 5834              		.loc 1 3197 7 is_stmt 1 view .LVU1882
3197:src/keys.c    **** 	NonProgrammable = 0;
 5835              		.loc 1 3197 10 is_stmt 0 view .LVU1883
 5836 047a 13F04003 		ands	r3, r3, #64
 5837 047e 00F0F283 		beq	.L1091
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 5838              		.loc 1 3198 2 is_stmt 1 view .LVU1884
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 5839              		.loc 1 3198 18 is_stmt 0 view .LVU1885
 5840 0482 1F4B     		ldr	r3, .L1133+48
ARM GAS  /tmp/ccJ0w3QJ.s 			page 190


 5841 0484 0022     		movs	r2, #0
 5842 0486 1A60     		str	r2, [r3]
3199:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 5843              		.loc 1 3199 2 is_stmt 1 view .LVU1886
 5844              	.LVL466:
 5845              	.L816:
3212:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 5846              		.loc 1 3212 4 view .LVU1887
3212:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 5847              		.loc 1 3212 11 is_stmt 0 view .LVU1888
 5848 0488 1E4A     		ldr	r2, .L1133+52
3213:src/keys.c    **** 	  finish_display(); // Update the RPN annunciator
 5849              		.loc 1 3213 25 view .LVU1889
 5850 048a 1F4B     		ldr	r3, .L1133+56
3212:src/keys.c    **** 	  OpCodeDisplayPending = 1;
 5851              		.loc 1 3212 11 view .LVU1890
 5852 048c 1060     		str	r0, [r2]
3213:src/keys.c    **** 	  finish_display(); // Update the RPN annunciator
 5853              		.loc 1 3213 4 is_stmt 1 view .LVU1891
3213:src/keys.c    **** 	  finish_display(); // Update the RPN annunciator
 5854              		.loc 1 3213 25 is_stmt 0 view .LVU1892
 5855 048e 0122     		movs	r2, #1
 5856 0490 1E4C     		ldr	r4, .L1133+60
 5857 0492 1A60     		str	r2, [r3]
3214:src/keys.c    **** 	  goto no_display; // No need to update the display before the command is executed
 5858              		.loc 1 3214 4 is_stmt 1 view .LVU1893
 5859 0494 FFF7FEFF 		bl	finish_display
 5860              	.LVL467:
3215:src/keys.c    **** 	}
 5861              		.loc 1 3215 4 view .LVU1894
 5862 0498 08E6     		b	.L822
 5863              	.LVL468:
 5864              	.L786:
 5865              	.LBB1266:
 5866              	.LBB1209:
 5867              	.LBB738:
 5868              	.LBB708:
 784:src/keys.c    **** 	  }
 5869              		.loc 1 784 12 view .LVU1895
 790:src/keys.c    **** #ifdef DM42
 5870              		.loc 1 790 2 view .LVU1896
 5871 049a 2D2C     		cmp	r4, #45
 5872 049c 7CD8     		bhi	.L581
 5873 049e DFE804F0 		tbb	[pc, r4]
 5874              	.L797:
 5875 04a2 D4       		.byte	(.L803-.L797)/2
 5876 04a3 C8       		.byte	(.L802-.L797)/2
 5877 04a4 7B       		.byte	(.L581-.L797)/2
 5878 04a5 CE       		.byte	(.L801-.L797)/2
 5879 04a6 7B       		.byte	(.L581-.L797)/2
 5880 04a7 7B       		.byte	(.L581-.L797)/2
 5881 04a8 95       		.byte	(.L799-.L797)/2
 5882 04a9 95       		.byte	(.L799-.L797)/2
 5883 04aa 7B       		.byte	(.L581-.L797)/2
 5884 04ab 7B       		.byte	(.L581-.L797)/2
 5885 04ac 7B       		.byte	(.L581-.L797)/2
 5886 04ad 7B       		.byte	(.L581-.L797)/2
ARM GAS  /tmp/ccJ0w3QJ.s 			page 191


 5887 04ae 7B       		.byte	(.L581-.L797)/2
 5888 04af 7B       		.byte	(.L581-.L797)/2
 5889 04b0 7B       		.byte	(.L581-.L797)/2
 5890 04b1 7B       		.byte	(.L581-.L797)/2
 5891 04b2 BE       		.byte	(.L800-.L797)/2
 5892 04b3 7B       		.byte	(.L581-.L797)/2
 5893 04b4 95       		.byte	(.L799-.L797)/2
 5894 04b5 7B       		.byte	(.L581-.L797)/2
 5895 04b6 7B       		.byte	(.L581-.L797)/2
 5896 04b7 7B       		.byte	(.L581-.L797)/2
 5897 04b8 7B       		.byte	(.L581-.L797)/2
 5898 04b9 7B       		.byte	(.L581-.L797)/2
 5899 04ba 7B       		.byte	(.L581-.L797)/2
 5900 04bb 7B       		.byte	(.L581-.L797)/2
 5901 04bc 7B       		.byte	(.L581-.L797)/2
 5902 04bd 7B       		.byte	(.L581-.L797)/2
 5903 04be 7B       		.byte	(.L581-.L797)/2
 5904 04bf 7B       		.byte	(.L581-.L797)/2
 5905 04c0 7B       		.byte	(.L581-.L797)/2
 5906 04c1 7B       		.byte	(.L581-.L797)/2
 5907 04c2 7B       		.byte	(.L581-.L797)/2
 5908 04c3 7B       		.byte	(.L581-.L797)/2
 5909 04c4 7B       		.byte	(.L581-.L797)/2
 5910 04c5 7B       		.byte	(.L581-.L797)/2
 5911 04c6 7B       		.byte	(.L581-.L797)/2
 5912 04c7 7B       		.byte	(.L581-.L797)/2
 5913 04c8 7B       		.byte	(.L581-.L797)/2
 5914 04c9 7B       		.byte	(.L581-.L797)/2
 5915 04ca 7B       		.byte	(.L581-.L797)/2
 5916 04cb 7B       		.byte	(.L581-.L797)/2
 5917 04cc 7B       		.byte	(.L581-.L797)/2
 5918 04cd 7B       		.byte	(.L581-.L797)/2
 5919 04ce A8       		.byte	(.L798-.L797)/2
 5920 04cf A1       		.byte	(.L796-.L797)/2
 5921              		.p2align 1
 5922              	.L1134:
 5923              		.align	2
 5924              	.L1133:
 5925 04d0 00000000 		.word	StateWhileOn
 5926 04d4 00080800 		.word	526336
 5927 04d8 00000000 		.word	main_ram
 5928 04dc 00000000 		.word	.LANCHOR11
 5929 04e0 00000000 		.word	.LANCHOR18
 5930 04e4 00000000 		.word	.LANCHOR22
 5931 04e8 00000000 		.word	ShowRPN
 5932 04ec 00000000 		.word	WasDataEntry
 5933 04f0 00000000 		.word	Running
 5934 04f4 00000000 		.word	TraceBuffer
 5935 04f8 00000000 		.word	DispMsg
 5936 04fc 00000000 		.word	.LANCHOR13
 5937 0500 00000000 		.word	NonProgrammable
 5938 0504 00000000 		.word	OpCode
 5939 0508 00000000 		.word	OpCodeDisplayPending
 5940 050c 00000000 		.word	JustDisplayed
 5941              	.LVL469:
 5942              	.L655:
 790:src/keys.c    **** #ifdef DM42
ARM GAS  /tmp/ccJ0w3QJ.s 			page 192


 5943              		.loc 1 790 2 is_stmt 0 view .LVU1897
 5944              	.LBE708:
 5945              	.LBE738:
2922:src/keys.c    **** 
 5946              		.loc 1 2922 3 is_stmt 1 view .LVU1898
 5947              	.LBB739:
 5948              	.LBI739:
2377:src/keys.c    **** 	enum shifts shift = reset_shift();
 5949              		.loc 1 2377 12 view .LVU1899
 5950              	.LBB740:
2378:src/keys.c    **** 	unsigned int ch = 0;
 5951              		.loc 1 2378 2 view .LVU1900
 5952              	.LBB741:
 5953              	.LBI741:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 5954              		.loc 1 102 13 view .LVU1901
 5955              	.LBE741:
 5956              	.LBE740:
 5957              	.LBE739:
 5958              	.LBE1209:
 5959              	.LBE1266:
 103:src/keys.c    **** }
 5960              		.loc 1 103 2 view .LVU1902
 5961              	.LBB1267:
 5962              	.LBB1210:
 5963              	.LBB772:
 5964              	.LBB767:
 5965              	.LBB748:
 5966              	.LBB742:
 5967              	.LBI742:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 5968              		.loc 1 92 20 view .LVU1903
 5969              	.LBB743:
  93:src/keys.c    **** 	State2.shifts = shift;
 5970              		.loc 1 93 2 view .LVU1904
 5971              	.LBB744:
 5972              	.LBI744:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 5973              		.loc 1 84 13 view .LVU1905
 5974              	.LBB745:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5975              		.loc 1 85 2 view .LVU1906
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 5976              		.loc 1 85 18 is_stmt 0 view .LVU1907
 5977 0510 FFF7FEFF 		bl	shift_down
 5978              	.LVL470:
  86:src/keys.c    **** }
 5979              		.loc 1 86 2 is_stmt 1 view .LVU1908
  86:src/keys.c    **** }
 5980              		.loc 1 86 52 is_stmt 0 view .LVU1909
 5981 0514 0146     		mov	r1, r0
 5982 0516 00B9     		cbnz	r0, .L653
 5983 0518 317C     		ldrb	r1, [r6, #16]	@ zero_extendqisi2
 5984              	.L653:
 5985              	.LVL471:
  86:src/keys.c    **** }
 5986              		.loc 1 86 52 view .LVU1910
ARM GAS  /tmp/ccJ0w3QJ.s 			page 193


 5987              	.LBE745:
 5988              	.LBE744:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 5989              		.loc 1 94 2 is_stmt 1 view .LVU1911
 5990              	.LBE743:
 5991              	.LBE742:
 5992              	.LBE748:
2382:src/keys.c    **** 		// Alpha catalogue from within multi character command
 5993              		.loc 1 2382 5 is_stmt 0 view .LVU1912
 5994 051a B27B     		ldrb	r2, [r6, #14]	@ zero_extendqisi2
 5995              	.LBB749:
 5996              	.LBB747:
 5997              	.LBB746:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 5998              		.loc 1 94 16 view .LVU1913
 5999 051c 0023     		movs	r3, #0
 6000 051e 3374     		strb	r3, [r6, #16]
  95:src/keys.c    **** 	return r;
 6001              		.loc 1 95 2 is_stmt 1 view .LVU1914
  95:src/keys.c    **** 	return r;
 6002              		.loc 1 95 19 is_stmt 0 view .LVU1915
 6003 0520 7373     		strb	r3, [r6, #13]
  96:src/keys.c    **** }
 6004              		.loc 1 96 2 is_stmt 1 view .LVU1916
 6005              	.LVL472:
  96:src/keys.c    **** }
 6006              		.loc 1 96 2 is_stmt 0 view .LVU1917
 6007              	.LBE746:
 6008              	.LBE747:
 6009              	.LBE749:
2379:src/keys.c    **** 	unsigned int opcode;
 6010              		.loc 1 2379 2 is_stmt 1 view .LVU1918
2380:src/keys.c    **** 
 6011              		.loc 1 2380 2 view .LVU1919
2382:src/keys.c    **** 		// Alpha catalogue from within multi character command
 6012              		.loc 1 2382 2 view .LVU1920
2382:src/keys.c    **** 		// Alpha catalogue from within multi character command
 6013              		.loc 1 2382 5 is_stmt 0 view .LVU1921
 6014 0522 002A     		cmp	r2, #0
 6015 0524 40F06C87 		bne	.L1092
2391:src/keys.c    **** 	case K20:	// Enter - exit multi mode, maybe return a result
 6016              		.loc 1 2391 2 is_stmt 1 view .LVU1922
 6017 0528 102C     		cmp	r4, #16
 6018 052a 01F02281 		beq	.L658
 6019 052e 242C     		cmp	r4, #36
 6020 0530 01F00F81 		beq	.L659
 6021 0534 0C2C     		cmp	r4, #12
 6022 0536 01F0F380 		beq	.L1093
 6023              	.L660:
2424:src/keys.c    **** 	if (ch == 0)
 6024              		.loc 1 2424 2 view .LVU1923
 6025              	.LBB750:
 6026              	.LBB751:
 451:src/keys.c    **** 		if (shift == SHIFT_N)
 6027              		.loc 1 451 6 is_stmt 0 view .LVU1924
 6028 053a B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 6029              	.LVL473:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 194


 451:src/keys.c    **** 		if (shift == SHIFT_N)
 6030              		.loc 1 451 6 view .LVU1925
 6031              	.LBE751:
 6032              	.LBI750:
 401:src/keys.c    **** {
 6033              		.loc 1 401 12 is_stmt 1 view .LVU1926
 6034              	.LBB756:
 403:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 6035              		.loc 1 403 2 view .LVU1927
 451:src/keys.c    **** 		if (shift == SHIFT_N)
 6036              		.loc 1 451 2 view .LVU1928
 451:src/keys.c    **** 		if (shift == SHIFT_N)
 6037              		.loc 1 451 5 is_stmt 0 view .LVU1929
 6038 053c DA06     		lsls	r2, r3, #27
 6039 053e 03D5     		bpl	.L663
 452:src/keys.c    **** 			shift = SHIFT_LC_N;
 6040              		.loc 1 452 3 is_stmt 1 view .LVU1930
 452:src/keys.c    **** 			shift = SHIFT_LC_N;
 6041              		.loc 1 452 6 is_stmt 0 view .LVU1931
 6042 0540 0029     		cmp	r1, #0
 6043 0542 41F00F83 		bne	.L1094
 453:src/keys.c    **** 		else if (shift == SHIFT_G)
 6044              		.loc 1 453 10 view .LVU1932
 6045 0546 0421     		movs	r1, #4
 6046              	.LVL474:
 6047              	.L663:
 457:src/keys.c    **** }
 6048              		.loc 1 457 2 is_stmt 1 view .LVU1933
 6049              	.LBB752:
 6050              	.LBI752:
 124:src/keys.c    **** {
 6051              		.loc 1 124 12 view .LVU1934
 6052              	.LBB753:
 126:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 6053              		.loc 1 126 2 view .LVU1935
 136:src/keys.c    **** }
 6054              		.loc 1 136 2 view .LVU1936
 136:src/keys.c    **** }
 6055              		.loc 1 136 23 is_stmt 0 view .LVU1937
 6056 0548 CB4B     		ldr	r3, .L1135
 6057              	.LBE753:
 6058              	.LBE752:
 457:src/keys.c    **** }
 6059              		.loc 1 457 49 view .LVU1938
 6060 054a CC4A     		ldr	r2, .L1135+4
 6061              	.LBB755:
 6062              	.LBB754:
 136:src/keys.c    **** }
 6063              		.loc 1 136 23 view .LVU1939
 6064 054c 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 6065              	.LBE754:
 6066              	.LBE755:
 457:src/keys.c    **** }
 6067              		.loc 1 457 49 view .LVU1940
 6068 054e 0620     		movs	r0, #6
 6069 0550 00FB0323 		mla	r3, r0, r3, r2
 6070              	.LBE756:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 195


 6071              	.LBE750:
2424:src/keys.c    **** 	if (ch == 0)
 6072              		.loc 1 2424 5 view .LVU1941
 6073 0554 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 6074              	.LVL475:
2425:src/keys.c    **** 		return STATE_UNFINISHED;
 6075              		.loc 1 2425 2 is_stmt 1 view .LVU1942
2425:src/keys.c    **** 		return STATE_UNFINISHED;
 6076              		.loc 1 2425 5 is_stmt 0 view .LVU1943
 6077 0556 002B     		cmp	r3, #0
 6078 0558 41D0     		beq	.L1051
 6079              	.L657:
2428:src/keys.c    **** 		State2.digval = ch;
 6080              		.loc 1 2428 2 is_stmt 1 view .LVU1944
2428:src/keys.c    **** 		State2.digval = ch;
 6081              		.loc 1 2428 12 is_stmt 0 view .LVU1945
 6082 055a F27A     		ldrb	r2, [r6, #11]	@ zero_extendqisi2
2428:src/keys.c    **** 		State2.digval = ch;
 6083              		.loc 1 2428 5 view .LVU1946
 6084 055c 002A     		cmp	r2, #0
 6085 055e 01F01481 		beq	.L1095
2432:src/keys.c    **** 		State2.digval2 = ch;
 6086              		.loc 1 2432 9 is_stmt 1 view .LVU1947
2432:src/keys.c    **** 		State2.digval2 = ch;
 6087              		.loc 1 2432 12 is_stmt 0 view .LVU1948
 6088 0562 012A     		cmp	r2, #1
 6089 0564 01F03481 		beq	.L1096
2437:src/keys.c    **** 
 6090              		.loc 1 2437 2 is_stmt 1 view .LVU1949
 6091              	.LBB758:
 6092              	.LBI758:
2370:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 6093              		.loc 1 2370 13 view .LVU1950
 6094              	.LBB759:
2372:src/keys.c    **** 	if (! State2.alphas )
 6095              		.loc 1 2372 2 view .LVU1951
2372:src/keys.c    **** 	if (! State2.alphas )
 6096              		.loc 1 2372 15 is_stmt 0 view .LVU1952
 6097 0568 717D     		ldrb	r1, [r6, #21]	@ zero_extendqisi2
2373:src/keys.c    **** 		State2.alphashift = 0;
 6098              		.loc 1 2373 6 view .LVU1953
 6099 056a B27D     		ldrb	r2, [r6, #22]	@ zero_extendqisi2
2372:src/keys.c    **** 	if (! State2.alphas )
 6100              		.loc 1 2372 15 view .LVU1954
 6101 056c 6FF3C301 		bfc	r1, #3, #1
 6102 0570 7175     		strb	r1, [r6, #21]
2373:src/keys.c    **** 		State2.alphashift = 0;
 6103              		.loc 1 2373 2 is_stmt 1 view .LVU1955
2373:src/keys.c    **** 		State2.alphashift = 0;
 6104              		.loc 1 2373 5 is_stmt 0 view .LVU1956
 6105 0572 12F00801 		ands	r1, r2, #8
2374:src/keys.c    **** }
 6106              		.loc 1 2374 3 is_stmt 1 view .LVU1957
2374:src/keys.c    **** }
 6107              		.loc 1 2374 21 is_stmt 0 view .LVU1958
 6108 0576 04BF     		itt	eq
 6109 0578 61F30412 		bfieq	r2, r1, #4, #1
ARM GAS  /tmp/ccJ0w3QJ.s 			page 196


 6110 057c B275     		strbeq	r2, [r6, #22]
 6111              	.LVL476:
 6112              	.L662:
2374:src/keys.c    **** }
 6113              		.loc 1 2374 21 view .LVU1959
 6114              	.LBE759:
 6115              	.LBE758:
2440:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6116              		.loc 1 2440 2 is_stmt 1 view .LVU1960
2442:src/keys.c    **** }
 6117              		.loc 1 2442 2 view .LVU1961
2440:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6118              		.loc 1 2440 21 is_stmt 0 view .LVU1962
 6119 057e 96F81FB0 		ldrb	fp, [r6, #31]	@ zero_extendqisi2
2441:src/keys.c    **** 	return opcode;
 6120              		.loc 1 2441 17 view .LVU1963
 6121 0582 3189     		ldrh	r1, [r6, #8]
2441:src/keys.c    **** 	return opcode;
 6122              		.loc 1 2441 34 view .LVU1964
 6123 0584 B27A     		ldrb	r2, [r6, #10]	@ zero_extendqisi2
2440:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6124              		.loc 1 2440 29 view .LVU1965
 6125 0586 4FEA0B2B 		lsl	fp, fp, #8
2440:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6126              		.loc 1 2440 18 view .LVU1966
 6127 058a 0BF5704B 		add	fp, fp, #61440
2441:src/keys.c    **** 	return opcode;
 6128              		.loc 1 2441 9 view .LVU1967
 6129 058e 8B44     		add	fp, fp, r1
2441:src/keys.c    **** 	return opcode;
 6130              		.loc 1 2441 25 view .LVU1968
 6131 0590 0BEB024B 		add	fp, fp, r2, lsl #16
2440:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6132              		.loc 1 2440 9 view .LVU1969
 6133 0594 0BEB036B 		add	fp, fp, r3, lsl #24
 6134              	.LVL477:
 6135              	.L581:
2440:src/keys.c    **** 	       + State2.digval + (State2.digval2 << 16) + (ch << 24);
 6136              		.loc 1 2440 9 view .LVU1970
 6137              	.LBE767:
 6138              	.LBE772:
 6139              	.LBE1210:
 6140              	.LBE1267:
3161:src/keys.c    ****     case STATE_SST:
 6141              		.loc 1 3161 5 is_stmt 1 view .LVU1971
 6142 0598 ABF12B03 		sub	r3, fp, #43
 6143 059c 082B     		cmp	r3, #8
 6144 059e 00F2D980 		bhi	.L837
 6145 05a2 01A2     		adr	r2, .L806
 6146 05a4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6147              		.p2align 2
 6148              	.L806:
 6149 05a8 DD060000 		.word	.L811+1
 6150 05ac DD060000 		.word	.L811+1
 6151 05b0 55070000 		.word	.L837+1
 6152 05b4 25070000 		.word	.L740+1
 6153 05b8 0B070000 		.word	.L739+1
ARM GAS  /tmp/ccJ0w3QJ.s 			page 197


 6154 05bc F9060000 		.word	.L736+1
 6155 05c0 11010000 		.word	.L561+1
 6156 05c4 1D010000 		.word	.L552+1
 6157 05c8 1D010000 		.word	.L552+1
 6158              	.LVL478:
 6159              		.p2align 1
 6160              	.L799:
 6161              	.LBB1268:
 6162              	.LBB1211:
 6163              	.LBB773:
 6164              	.LBB709:
 852:src/keys.c    **** 		break;
 6165              		.loc 1 852 3 view .LVU1972
 6166              	.LBB706:
 6167              	.LBI706:
 519:src/keys.c    **** 	if (is_bad_cmdline())
 6168              		.loc 1 519 13 view .LVU1973
 6169              	.LBB707:
 520:src/keys.c    **** 		return;
 6170              		.loc 1 520 2 view .LVU1974
 520:src/keys.c    **** 		return;
 6171              		.loc 1 520 6 is_stmt 0 view .LVU1975
 6172 05cc FFF7FEFF 		bl	is_bad_cmdline
 6173              	.LVL479:
 520:src/keys.c    **** 		return;
 6174              		.loc 1 520 5 view .LVU1976
 6175 05d0 0446     		mov	r4, r0
 6176 05d2 20B9     		cbnz	r0, .L1051
 6177 05d4 5FFA8AF0 		uxtb	r0, r10
 6178 05d8 FFF7FEFF 		bl	init_arg.part.0
 6179              	.LVL480:
 6180              	.LBE707:
 6181              	.LBE706:
 6182              	.LBE709:
 6183              	.LBE773:
 6184              	.LBE1211:
 6185              	.LBE1268:
2976:src/keys.c    **** #ifdef DM42
 6186              		.loc 1 2976 7 view .LVU1977
 6187 05dc A046     		mov	r8, r4
 6188              	.LVL481:
 6189              	.L1051:
 6190              	.LBB1269:
 6191              	.LBB1212:
 6192              	.LBB774:
 6193              	.LBB775:
2777:src/keys.c    **** }
 6194              		.loc 1 2777 2 is_stmt 1 view .LVU1978
2777:src/keys.c    **** }
 6195              		.loc 1 2777 9 is_stmt 0 view .LVU1979
 6196 05de 4FF0330B 		mov	fp, #51
 6197 05e2 9BE5     		b	.L552
 6198              	.LVL482:
 6199              	.L796:
2777:src/keys.c    **** }
 6200              		.loc 1 2777 9 view .LVU1980
 6201              	.LBE775:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 198


 6202              	.LBE774:
 6203              	.LBB807:
 6204              	.LBB710:
 839:src/keys.c    **** 		break;
 6205              		.loc 1 839 3 is_stmt 1 view .LVU1981
 839:src/keys.c    **** 		break;
 6206              		.loc 1 839 16 is_stmt 0 view .LVU1982
 6207 05e4 737D     		ldrb	r3, [r6, #21]	@ zero_extendqisi2
 6208 05e6 43F00203 		orr	r3, r3, #2
 6209 05ea 7375     		strb	r3, [r6, #21]
 840:src/keys.c    **** 
 6210              		.loc 1 840 3 is_stmt 1 view .LVU1983
 858:src/keys.c    **** }
 6211              		.loc 1 858 9 is_stmt 0 view .LVU1984
 6212 05ec 4FF0330B 		mov	fp, #51
 840:src/keys.c    **** 
 6213              		.loc 1 840 3 view .LVU1985
 6214 05f0 94E5     		b	.L552
 6215              	.L798:
 821:src/keys.c    **** 			return STATE_UNFINISHED;
 6216              		.loc 1 821 3 is_stmt 1 view .LVU1986
 821:src/keys.c    **** 			return STATE_UNFINISHED;
 6217              		.loc 1 821 7 is_stmt 0 view .LVU1987
 6218 05f2 FFF7FEFF 		bl	is_bad_cmdline
 6219              	.LVL483:
 821:src/keys.c    **** 			return STATE_UNFINISHED;
 6220              		.loc 1 821 6 view .LVU1988
 6221 05f6 0446     		mov	r4, r0
 6222 05f8 0028     		cmp	r0, #0
 6223 05fa F0D1     		bne	.L1051
 823:src/keys.c    **** 		State2.arrow = 1;
 6224              		.loc 1 823 3 is_stmt 1 view .LVU1989
 6225 05fc FFF7FEFF 		bl	process_cmdline_set_lift
 6226              	.LVL484:
 824:src/keys.c    **** #ifdef DM42
 6227              		.loc 1 824 3 view .LVU1990
 824:src/keys.c    **** #ifdef DM42
 6228              		.loc 1 824 16 is_stmt 0 view .LVU1991
 6229 0600 737D     		ldrb	r3, [r6, #21]	@ zero_extendqisi2
 6230 0602 43F00403 		orr	r3, r3, #4
 826:src/keys.c    **** 		display_current_menu ();
 6231              		.loc 1 826 3 view .LVU1992
 6232 0606 0920     		movs	r0, #9
 824:src/keys.c    **** #ifdef DM42
 6233              		.loc 1 824 16 view .LVU1993
 6234 0608 7375     		strb	r3, [r6, #21]
 826:src/keys.c    **** 		display_current_menu ();
 6235              		.loc 1 826 3 is_stmt 1 view .LVU1994
 6236 060a FFF7FEFF 		bl	set_menu
 6237              	.LVL485:
 827:src/keys.c    **** 		lcd_refresh ();
 6238              		.loc 1 827 3 view .LVU1995
 6239 060e FFF7FEFF 		bl	display_current_menu
 6240              	.LVL486:
 828:src/keys.c    **** #else
 6241              		.loc 1 828 3 view .LVU1996
 6242 0612 9B4B     		ldr	r3, .L1135+8
ARM GAS  /tmp/ccJ0w3QJ.s 			page 199


 6243 0614 9847     		blx	r3
 6244              	.LVL487:
 832:src/keys.c    **** 
 6245              		.loc 1 832 3 view .LVU1997
 6246              	.LBE710:
 6247              	.LBE807:
 6248              	.LBE1212:
 6249              	.LBE1269:
2976:src/keys.c    **** #ifdef DM42
 6250              		.loc 1 2976 7 is_stmt 0 view .LVU1998
 6251 0616 A046     		mov	r8, r4
 6252              	.LBB1270:
 6253              	.LBB1213:
 6254              	.LBB808:
 6255              	.LBB711:
 858:src/keys.c    **** }
 6256              		.loc 1 858 9 view .LVU1999
 6257 0618 4FF0330B 		mov	fp, #51
 832:src/keys.c    **** 
 6258              		.loc 1 832 3 view .LVU2000
 6259 061c 7EE5     		b	.L552
 6260              	.L800:
 843:src/keys.c    **** 			return STATE_UNFINISHED;
 6261              		.loc 1 843 3 is_stmt 1 view .LVU2001
 843:src/keys.c    **** 			return STATE_UNFINISHED;
 6262              		.loc 1 843 6 is_stmt 0 view .LVU2002
 6263 061e 8A06     		lsls	r2, r1, #26
 6264 0620 DDD4     		bmi	.L1051
 845:src/keys.c    **** 			return op;
 6265              		.loc 1 845 3 is_stmt 1 view .LVU2003
 845:src/keys.c    **** 			return op;
 6266              		.loc 1 845 6 is_stmt 0 view .LVU2004
 6267 0622 5B06     		lsls	r3, r3, #25
 6268 0624 00F1AA80 		bmi	.L804
 6269              	.LVL488:
 6270              	.L812:
 845:src/keys.c    **** 			return op;
 6271              		.loc 1 845 6 view .LVU2005
 6272              	.LBE711:
 6273              	.LBE808:
 6274              	.LBE1213:
 6275              	.LBE1270:
3174:src/keys.c    ****       else if (State2.alphas) {
 6276              		.loc 1 3174 2 is_stmt 1 view .LVU2006
 6277 0628 FFF7FEFF 		bl	delprog
 6278              	.LVL489:
 6279 062c 4FF0300B 		mov	fp, #48
 6280 0630 74E5     		b	.L552
 6281              	.LVL490:
 6282              	.L802:
 6283              	.LBB1271:
 6284              	.LBB1214:
 6285              	.LBB809:
 6286              	.LBB712:
 795:src/keys.c    **** 	case K03:
 6287              		.loc 1 795 3 view .LVU2007
 795:src/keys.c    **** 	case K03:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 200


 6288              		.loc 1 795 10 is_stmt 0 view .LVU2008
 6289 0632 5146     		mov	r1, r10
 6290 0634 0120     		movs	r0, #1
 6291 0636 FFF7FEFF 		bl	check_f_key
 6292              	.LVL491:
 6293 063a 8346     		mov	fp, r0
 6294 063c ACE7     		b	.L581
 6295              	.L801:
 797:src/keys.c    **** #else
 6296              		.loc 1 797 3 is_stmt 1 view .LVU2009
 797:src/keys.c    **** #else
 6297              		.loc 1 797 10 is_stmt 0 view .LVU2010
 6298 063e 5146     		mov	r1, r10
 6299 0640 0220     		movs	r0, #2
 6300 0642 FFF7FEFF 		bl	check_f_key
 6301              	.LVL492:
 6302 0646 8346     		mov	fp, r0
 6303 0648 A6E7     		b	.L581
 6304              	.L803:
 793:src/keys.c    **** 	case K01:
 6305              		.loc 1 793 3 is_stmt 1 view .LVU2011
 793:src/keys.c    **** 	case K01:
 6306              		.loc 1 793 10 is_stmt 0 view .LVU2012
 6307 064a 5146     		mov	r1, r10
 6308 064c 0020     		movs	r0, #0
 6309 064e FFF7FEFF 		bl	check_f_key
 6310              	.LVL493:
 6311 0652 8346     		mov	fp, r0
 6312 0654 A0E7     		b	.L581
 6313              	.L787:
 777:src/keys.c    **** 	    if (intltr(15)) {
 6314              		.loc 1 777 6 is_stmt 1 view .LVU2013
 6315              	.LVL494:
 778:src/keys.c    **** 	      return op_int;
 6316              		.loc 1 778 6 view .LVU2014
 778:src/keys.c    **** 	      return op_int;
 6317              		.loc 1 778 10 is_stmt 0 view .LVU2015
 6318 0656 0F20     		movs	r0, #15
 6319 0658 FFF7FEFF 		bl	intltr
 6320              	.LVL495:
 778:src/keys.c    **** 	      return op_int;
 6321              		.loc 1 778 9 view .LVU2016
 6322 065c 0028     		cmp	r0, #0
 6323 065e 41F03B81 		bne	.L795
 782:src/keys.c    **** 	    }
 6324              		.loc 1 782 8 is_stmt 1 view .LVU2017
 782:src/keys.c    **** 	    }
 6325              		.loc 1 782 15 is_stmt 0 view .LVU2018
 6326 0662 5146     		mov	r1, r10
 6327 0664 0520     		movs	r0, #5
 6328 0666 FFF7FEFF 		bl	check_f_key
 6329              	.LVL496:
 6330 066a 8346     		mov	fp, r0
 6331 066c 94E7     		b	.L581
 6332              	.LVL497:
 6333              	.L789:
 769:src/keys.c    **** 	    if (intltr(12)) {
ARM GAS  /tmp/ccJ0w3QJ.s 			page 201


 6334              		.loc 1 769 6 is_stmt 1 view .LVU2019
 770:src/keys.c    **** 	      return op_int;
 6335              		.loc 1 770 6 view .LVU2020
 770:src/keys.c    **** 	      return op_int;
 6336              		.loc 1 770 10 is_stmt 0 view .LVU2021
 6337 066e 0C20     		movs	r0, #12
 6338 0670 FFF7FEFF 		bl	intltr
 6339              	.LVL498:
 770:src/keys.c    **** 	      return op_int;
 6340              		.loc 1 770 9 view .LVU2022
 6341 0674 0028     		cmp	r0, #0
 6342 0676 E2D0     		beq	.L801
 6343              	.LVL499:
 770:src/keys.c    **** 	      return op_int;
 6344              		.loc 1 770 9 view .LVU2023
 6345              	.LBE712:
 6346              	.LBE809:
 6347              	.LBE1214:
 6348              	.LBE1271:
3197:src/keys.c    **** 	NonProgrammable = 0;
 6349              		.loc 1 3197 7 is_stmt 1 view .LVU2024
3197:src/keys.c    **** 	NonProgrammable = 0;
 6350              		.loc 1 3197 11 is_stmt 0 view .LVU2025
 6351 0678 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
3197:src/keys.c    **** 	NonProgrammable = 0;
 6352              		.loc 1 3197 10 view .LVU2026
 6353 067a 5806     		lsls	r0, r3, #25
 6354 067c 41F17782 		bpl	.L869
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6355              		.loc 1 3198 2 is_stmt 1 view .LVU2027
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6356              		.loc 1 3198 18 is_stmt 0 view .LVU2028
 6357 0680 804B     		ldr	r3, .L1135+12
 6358 0682 0022     		movs	r2, #0
 6359              	.LBB1272:
 6360              	.LBB1215:
 6361              	.LBB810:
 6362              	.LBB713:
 771:src/keys.c    **** 	    }
 6363              		.loc 1 771 15 view .LVU2029
 6364 0684 4FF0110B 		mov	fp, #17
 6365              	.LBE713:
 6366              	.LBE810:
 6367              	.LBE1215:
 6368              	.LBE1272:
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6369              		.loc 1 3198 18 view .LVU2030
 6370 0688 1A60     		str	r2, [r3]
3199:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6371              		.loc 1 3199 2 is_stmt 1 view .LVU2031
3199:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6372              		.loc 1 3199 32 is_stmt 0 view .LVU2032
 6373 068a 5846     		mov	r0, fp
 6374              	.LVL500:
 6375              	.L818:
3203:src/keys.c    **** #endif
 6376              		.loc 1 3203 6 is_stmt 1 view .LVU2033
ARM GAS  /tmp/ccJ0w3QJ.s 			page 202


3205:src/keys.c    **** 	    xeq(c);
 6377              		.loc 1 3205 37 is_stmt 0 view .LVU2034
 6378 068c 96F81C80 		ldrb	r8, [r6, #28]	@ zero_extendqisi2
3203:src/keys.c    **** #endif
 6379              		.loc 1 3203 19 view .LVU2035
 6380 0690 0123     		movs	r3, #1
 6381 0692 C9F80030 		str	r3, [r9]
3205:src/keys.c    **** 	    xeq(c);
 6382              		.loc 1 3205 6 is_stmt 1 view .LVU2036
3205:src/keys.c    **** 	    xeq(c);
 6383              		.loc 1 3205 37 is_stmt 0 view .LVU2037
 6384 0696 B8FA88F8 		clz	r8, r8
3206:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 6385              		.loc 1 3206 6 view .LVU2038
 6386 069a FFF7FEFF 		bl	xeq
 6387              	.LVL501:
3207:src/keys.c    **** 	  }
 6388              		.loc 1 3207 38 view .LVU2039
 6389 069e 337F     		ldrb	r3, [r6, #28]	@ zero_extendqisi2
3205:src/keys.c    **** 	    xeq(c);
 6390              		.loc 1 3205 37 view .LVU2040
 6391 06a0 4FEA5818 		lsr	r8, r8, #5
 6392              	.LVL502:
3206:src/keys.c    **** 	    cmdline_empty |= (CmdLineLength == 0);
 6393              		.loc 1 3206 6 is_stmt 1 view .LVU2041
3207:src/keys.c    **** 	  }
 6394              		.loc 1 3207 6 view .LVU2042
3207:src/keys.c    **** 	  }
 6395              		.loc 1 3207 20 is_stmt 0 view .LVU2043
 6396 06a4 002B     		cmp	r3, #0
 6397 06a6 08BF     		it	eq
 6398 06a8 4FF00108 		moveq	r8, #1
 6399              	.LVL503:
3207:src/keys.c    **** 	  }
 6400              		.loc 1 3207 20 view .LVU2044
 6401 06ac 36E5     		b	.L552
 6402              	.LVL504:
 6403              	.L790:
 6404              	.LBB1273:
 6405              	.LBB1216:
 6406              	.LBB811:
 6407              	.LBB714:
 761:src/keys.c    **** 	    if (intltr(11)) {
 6408              		.loc 1 761 6 is_stmt 1 view .LVU2045
 762:src/keys.c    **** 	      return op;
 6409              		.loc 1 762 6 view .LVU2046
 762:src/keys.c    **** 	      return op;
 6410              		.loc 1 762 10 is_stmt 0 view .LVU2047
 6411 06ae 0B20     		movs	r0, #11
 6412 06b0 FFF7FEFF 		bl	intltr
 6413              	.LVL505:
 762:src/keys.c    **** 	      return op;
 6414              		.loc 1 762 9 view .LVU2048
 6415 06b4 0028     		cmp	r0, #0
 6416 06b6 41F09280 		bne	.L793
 766:src/keys.c    **** 	    }
 6417              		.loc 1 766 8 is_stmt 1 view .LVU2049
ARM GAS  /tmp/ccJ0w3QJ.s 			page 203


 766:src/keys.c    **** 	    }
 6418              		.loc 1 766 15 is_stmt 0 view .LVU2050
 6419 06ba 1021     		movs	r1, #16
 6420 06bc 0120     		movs	r0, #1
 6421 06be FFF7FEFF 		bl	check_f_key
 6422              	.LVL506:
 6423 06c2 8346     		mov	fp, r0
 6424 06c4 68E7     		b	.L581
 6425              	.LVL507:
 6426              	.L791:
 753:src/keys.c    **** 	    if (intltr(10)) {
 6427              		.loc 1 753 6 is_stmt 1 view .LVU2051
 754:src/keys.c    **** 	      return op;
 6428              		.loc 1 754 6 view .LVU2052
 754:src/keys.c    **** 	      return op;
 6429              		.loc 1 754 10 is_stmt 0 view .LVU2053
 6430 06c6 0A20     		movs	r0, #10
 6431 06c8 FFF7FEFF 		bl	intltr
 6432              	.LVL508:
 754:src/keys.c    **** 	      return op;
 6433              		.loc 1 754 9 view .LVU2054
 6434 06cc 0028     		cmp	r0, #0
 6435 06ce 41F0F780 		bne	.L792
 758:src/keys.c    **** 	    }
 6436              		.loc 1 758 8 is_stmt 1 view .LVU2055
 758:src/keys.c    **** 	    }
 6437              		.loc 1 758 15 is_stmt 0 view .LVU2056
 6438 06d2 0F21     		movs	r1, #15
 6439 06d4 FFF7FEFF 		bl	check_f_key
 6440              	.LVL509:
 6441 06d8 8346     		mov	fp, r0
 6442 06da 5DE7     		b	.L581
 6443              	.LVL510:
 6444              	.L811:
 758:src/keys.c    **** 	    }
 6445              		.loc 1 758 15 view .LVU2057
 6446              	.LBE714:
 6447              	.LBE811:
 6448              	.LBE1216:
 6449              	.LBE1273:
3188:src/keys.c    **** 	set_window(c);
 6450              		.loc 1 3188 7 is_stmt 1 view .LVU2058
3188:src/keys.c    **** 	set_window(c);
 6451              		.loc 1 3188 12 is_stmt 0 view .LVU2059
 6452 06dc FFF7FEFF 		bl	is_bad_cmdline
 6453              	.LVL511:
3188:src/keys.c    **** 	set_window(c);
 6454              		.loc 1 3188 10 view .LVU2060
 6455 06e0 0346     		mov	r3, r0
 6456 06e2 0028     		cmp	r0, #0
 6457 06e4 7FF41AAD 		bne	.L552
3189:src/keys.c    ****       break;
 6458              		.loc 1 3189 2 is_stmt 1 view .LVU2061
 6459 06e8 5846     		mov	r0, fp
2976:src/keys.c    **** #ifdef DM42
 6460              		.loc 1 2976 7 is_stmt 0 view .LVU2062
 6461 06ea 9846     		mov	r8, r3
ARM GAS  /tmp/ccJ0w3QJ.s 			page 204


3189:src/keys.c    ****       break;
 6462              		.loc 1 3189 2 view .LVU2063
 6463 06ec FFF7FEFF 		bl	set_window
 6464              	.LVL512:
 6465 06f0 14E5     		b	.L552
 6466              	.LVL513:
 6467              	.L730:
 6468              	.LBB1274:
 6469              	.LBB1217:
 6470              	.LBB812:
 6471              	.LBB813:
1451:src/keys.c    **** 			return STATE_BACKSPACE;
 6472              		.loc 1 1451 3 is_stmt 1 view .LVU2064
1451:src/keys.c    **** 			return STATE_BACKSPACE;
 6473              		.loc 1 1451 6 is_stmt 0 view .LVU2065
 6474 06f2 0028     		cmp	r0, #0
 6475 06f4 41F08081 		bne	.L737
 6476              	.LVL514:
 6477              	.L736:
1451:src/keys.c    **** 			return STATE_BACKSPACE;
 6478              		.loc 1 1451 6 view .LVU2066
 6479              	.LBE813:
 6480              	.LBE812:
 6481              	.LBE1217:
 6482              	.LBE1274:
3173:src/keys.c    **** 	delprog();
 6483              		.loc 1 3173 7 is_stmt 1 view .LVU2067
3173:src/keys.c    **** 	delprog();
 6484              		.loc 1 3173 11 is_stmt 0 view .LVU2068
 6485 06f8 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
3173:src/keys.c    **** 	delprog();
 6486              		.loc 1 3173 10 view .LVU2069
 6487 06fa 5C06     		lsls	r4, r3, #25
 6488 06fc 94D5     		bpl	.L812
3175:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 6489              		.loc 1 3175 12 is_stmt 1 view .LVU2070
3175:src/keys.c    **** 	char *p = find_char(Alpha, '\0');
 6490              		.loc 1 3175 15 is_stmt 0 view .LVU2071
 6491 06fe 1807     		lsls	r0, r3, #28
 6492 0700 00F10781 		bmi	.L813
 6493              	.L1045:
 6494              	.LBB1275:
3178:src/keys.c    ****       }
 6495              		.loc 1 3178 9 view .LVU2072
 6496 0704 4FF0300B 		mov	fp, #48
 6497 0708 08E5     		b	.L552
 6498              	.L739:
 6499              	.LBE1275:
3169:src/keys.c    ****       break;
 6500              		.loc 1 3169 7 is_stmt 1 view .LVU2073
 6501 070a 4FF0FF30 		mov	r0, #-1
 6502 070e FFF7FEFF 		bl	xeq_sst_bst
 6503              	.LVL515:
3170:src/keys.c    **** 
 6504              		.loc 1 3170 7 view .LVU2074
 6505 0712 4FF02F0B 		mov	fp, #47
 6506 0716 01E5     		b	.L552
ARM GAS  /tmp/ccJ0w3QJ.s 			page 205


 6507              	.LVL516:
 6508              	.L728:
 6509              	.LBB1276:
 6510              	.LBB1218:
 6511              	.LBB870:
 6512              	.LBB856:
1470:src/keys.c    **** 			if ( State2.runmode ) {
 6513              		.loc 1 1470 3 view .LVU2075
1470:src/keys.c    **** 			if ( State2.runmode ) {
 6514              		.loc 1 1470 6 is_stmt 0 view .LVU2076
 6515 0718 0028     		cmp	r0, #0
 6516 071a 40F05785 		bne	.L724
1471:src/keys.c    **** 				// Alpha scroll right
 6517              		.loc 1 1471 4 is_stmt 1 view .LVU2077
1471:src/keys.c    **** 				// Alpha scroll right
 6518              		.loc 1 1471 7 is_stmt 0 view .LVU2078
 6519 071e 5E06     		lsls	r6, r3, #25
 6520 0720 3FF55DAF 		bmi	.L1051
 6521              	.LVL517:
 6522              	.L740:
1471:src/keys.c    **** 				// Alpha scroll right
 6523              		.loc 1 1471 7 view .LVU2079
 6524              	.LBE856:
 6525              	.LBE870:
 6526              	.LBE1218:
 6527              	.LBE1276:
3163:src/keys.c    ****       OpCodeDisplayPending = 0;
 6528              		.loc 1 3163 7 is_stmt 1 view .LVU2080
3163:src/keys.c    ****       OpCodeDisplayPending = 0;
 6529              		.loc 1 3163 14 is_stmt 0 view .LVU2081
 6530 0724 5849     		ldr	r1, .L1135+16
3164:src/keys.c    ****       xeq_sst_bst(0);
 6531              		.loc 1 3164 28 view .LVU2082
 6532 0726 594A     		ldr	r2, .L1135+20
3163:src/keys.c    ****       OpCodeDisplayPending = 0;
 6533              		.loc 1 3163 14 view .LVU2083
 6534 0728 2E23     		movs	r3, #46
3164:src/keys.c    ****       xeq_sst_bst(0);
 6535              		.loc 1 3164 28 view .LVU2084
 6536 072a 0020     		movs	r0, #0
3163:src/keys.c    ****       OpCodeDisplayPending = 0;
 6537              		.loc 1 3163 14 view .LVU2085
 6538 072c 0B60     		str	r3, [r1]
3164:src/keys.c    ****       xeq_sst_bst(0);
 6539              		.loc 1 3164 7 is_stmt 1 view .LVU2086
3166:src/keys.c    **** 
 6540              		.loc 1 3166 7 is_stmt 0 view .LVU2087
 6541 072e 9B46     		mov	fp, r3
3164:src/keys.c    ****       xeq_sst_bst(0);
 6542              		.loc 1 3164 28 view .LVU2088
 6543 0730 1060     		str	r0, [r2]
3165:src/keys.c    ****       break;
 6544              		.loc 1 3165 7 is_stmt 1 view .LVU2089
 6545 0732 FFF7FEFF 		bl	xeq_sst_bst
 6546              	.LVL518:
3166:src/keys.c    **** 
 6547              		.loc 1 3166 7 view .LVU2090
ARM GAS  /tmp/ccJ0w3QJ.s 			page 206


 6548 0736 F1E4     		b	.L552
 6549              	.LVL519:
 6550              	.L755:
 6551              	.LBB1277:
 6552              	.LBB1219:
 6553              	.LBB871:
 6554              	.LBB872:
1003:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 6555              		.loc 1 1003 3 view .LVU2091
1003:src/keys.c    **** 			if (! (no_int && UState.intm)) {
 6556              		.loc 1 1003 6 is_stmt 0 view .LVU2092
 6557 0738 BBF59C7F 		cmp	fp, #312
 6558 073c 41F0AC81 		bne	.L1097
1014:src/keys.c    **** 		return STATE_UNFINISHED;
 6559              		.loc 1 1014 2 is_stmt 1 view .LVU2093
1014:src/keys.c    **** 		return STATE_UNFINISHED;
 6560              		.loc 1 1014 5 is_stmt 0 view .LVU2094
 6561 0740 BAF5704F 		cmp	r10, #61440
 6562 0744 06D1     		bne	.L837
1014:src/keys.c    **** 		return STATE_UNFINISHED;
 6563              		.loc 1 1014 13 view .LVU2095
 6564 0746 524B     		ldr	r3, .L1135+24
 6565 0748 1B68     		ldr	r3, [r3]
 6566 074a 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 6567 074e DB07     		lsls	r3, r3, #31
 6568 0750 3FF545AF 		bmi	.L1051
 6569              	.LVL520:
 6570              	.L837:
1014:src/keys.c    **** 		return STATE_UNFINISHED;
 6571              		.loc 1 1014 13 view .LVU2096
 6572              	.LBE872:
 6573              	.LBE871:
 6574              	.LBE1219:
 6575              	.LBE1277:
3197:src/keys.c    **** 	NonProgrammable = 0;
 6576              		.loc 1 3197 7 is_stmt 1 view .LVU2097
3197:src/keys.c    **** 	NonProgrammable = 0;
 6577              		.loc 1 3197 11 is_stmt 0 view .LVU2098
 6578 0754 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
3197:src/keys.c    **** 	NonProgrammable = 0;
 6579              		.loc 1 3197 10 view .LVU2099
 6580 0756 5C06     		lsls	r4, r3, #25
 6581 0758 44D5     		bpl	.L819
 6582 075a 4A4A     		ldr	r2, .L1135+12
 6583 075c 5846     		mov	r0, fp
 6584              	.LVL521:
 6585              	.L820:
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6586              		.loc 1 3198 2 is_stmt 1 view .LVU2100
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6587              		.loc 1 3198 18 is_stmt 0 view .LVU2101
 6588 075e 0023     		movs	r3, #0
3199:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6589              		.loc 1 3199 5 view .LVU2102
 6590 0760 1428     		cmp	r0, #20
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 6591              		.loc 1 3198 18 view .LVU2103
ARM GAS  /tmp/ccJ0w3QJ.s 			page 207


 6592 0762 1360     		str	r3, [r2]
3199:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6593              		.loc 1 3199 2 is_stmt 1 view .LVU2104
3199:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6594              		.loc 1 3199 5 is_stmt 0 view .LVU2105
 6595 0764 3FF690AE 		bhi	.L816
3200:src/keys.c    **** 	    // Data entry key
 6596              		.loc 1 3200 4 is_stmt 1 view .LVU2106
3200:src/keys.c    **** 	    // Data entry key
 6597              		.loc 1 3200 7 is_stmt 0 view .LVU2107
 6598 0768 BBF1000F 		cmp	fp, #0
 6599 076c 8ED1     		bne	.L818
3200:src/keys.c    **** 	    // Data entry key
 6600              		.loc 1 3200 38 discriminator 1 view .LVU2108
 6601 076e FFF7FEFF 		bl	is_bad_cmdline
 6602              	.LVL522:
3200:src/keys.c    **** 	    // Data entry key
 6603              		.loc 1 3200 34 discriminator 1 view .LVU2109
 6604 0772 0028     		cmp	r0, #0
 6605 0774 40F04E81 		bne	.L874
3199:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 6606              		.loc 1 3199 32 view .LVU2110
 6607 0778 5846     		mov	r0, fp
 6608 077a 87E7     		b	.L818
 6609              	.LVL523:
 6610              	.L804:
3161:src/keys.c    ****     case STATE_SST:
 6611              		.loc 1 3161 5 is_stmt 1 view .LVU2111
 6612 077c AAF12B03 		sub	r3, r10, #43
 6613 0780 082B     		cmp	r3, #8
 6614 0782 15D8     		bhi	.L832
 6615 0784 01A2     		adr	r2, .L833
 6616 0786 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6617 078a 00BF     		.p2align 2
 6618              	.L833:
 6619 078c DD060000 		.word	.L811+1
 6620 0790 DD060000 		.word	.L811+1
 6621 0794 B1070000 		.word	.L832+1
 6622 0798 25070000 		.word	.L740+1
 6623 079c 0B070000 		.word	.L739+1
 6624 07a0 F9060000 		.word	.L736+1
 6625 07a4 11010000 		.word	.L561+1
 6626 07a8 1D010000 		.word	.L552+1
 6627 07ac 1D010000 		.word	.L552+1
 6628              		.p2align 1
 6629              	.L832:
 6630 07b0 344A     		ldr	r2, .L1135+12
 6631 07b2 5046     		mov	r0, r10
 6632 07b4 D3E7     		b	.L820
 6633              	.LVL524:
 6634              	.L1069:
 6635              	.LBB1278:
 6636              	.LBB1220:
2853:src/keys.c    **** #else	
 6637              		.loc 1 2853 26 is_stmt 0 view .LVU2112
 6638 07b6 FFF7FEFF 		bl	keyticks
 6639              	.LVL525:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 208


2853:src/keys.c    **** #else	
 6640              		.loc 1 2853 23 view .LVU2113
 6641 07ba 1E28     		cmp	r0, #30
2857:src/keys.c    **** 	// print_debug (1, c);
 6642              		.loc 1 2857 3 is_stmt 1 view .LVU2114
2857:src/keys.c    **** 	// print_debug (1, c);
 6643              		.loc 1 2857 17 is_stmt 0 view .LVU2115
 6644 07bc C4BF     		itt	gt
 6645 07be 0023     		movgt	r3, #0
 6646 07c0 3377     		strbgt	r3, [r6, #28]
 6647 07c2 6EE5     		b	.L568
 6648              	.LVL526:
 6649              	.L530:
2857:src/keys.c    **** 	// print_debug (1, c);
 6650              		.loc 1 2857 17 view .LVU2116
 6651              	.LBE1220:
 6652              	.LBE1278:
3027:src/keys.c    **** #else
 6653              		.loc 1 3027 10 is_stmt 1 view .LVU2117
3027:src/keys.c    **** #else
 6654              		.loc 1 3027 14 is_stmt 0 view .LVU2118
 6655 07c4 FFF7FEFF 		bl	keyticks
 6656              	.LVL527:
3027:src/keys.c    **** #else
 6657              		.loc 1 3027 13 view .LVU2119
 6658 07c8 0C28     		cmp	r0, #12
 6659 07ca 7FF7F3AC 		ble	.L529
3035:src/keys.c    **** 	  message("NULL", CNULL);
 6660              		.loc 1 3035 4 is_stmt 1 view .LVU2120
3036:src/keys.c    **** 	  // Force display update on key-up
 6661              		.loc 1 3036 4 is_stmt 0 view .LVU2121
 6662 07ce 3148     		ldr	r0, .L1135+28
3035:src/keys.c    **** 	  message("NULL", CNULL);
 6663              		.loc 1 3035 11 view .LVU2122
 6664 07d0 3760     		str	r7, [r6]
3036:src/keys.c    **** 	  // Force display update on key-up
 6665              		.loc 1 3036 4 is_stmt 1 view .LVU2123
 6666 07d2 3946     		mov	r1, r7
 6667 07d4 FFF7FEFF 		bl	message
 6668              	.LVL528:
3038:src/keys.c    **** 	}
 6669              		.loc 1 3038 4 view .LVU2124
3038:src/keys.c    **** 	}
 6670              		.loc 1 3038 21 is_stmt 0 view .LVU2125
 6671 07d8 2F4B     		ldr	r3, .L1135+32
 6672 07da DA7D     		ldrb	r2, [r3, #23]	@ zero_extendqisi2
 6673 07dc 67F34512 		bfi	r2, r7, #5, #1
 6674 07e0 DA75     		strb	r2, [r3, #23]
 6675 07e2 E7E4     		b	.L529
 6676              	.LVL529:
 6677              	.L819:
3197:src/keys.c    **** 	NonProgrammable = 0;
 6678              		.loc 1 3197 26 view .LVU2126
 6679 07e4 274A     		ldr	r2, .L1135+12
 6680 07e6 1368     		ldr	r3, [r2]
 6681 07e8 5846     		mov	r0, fp
 6682 07ea 002B     		cmp	r3, #0
ARM GAS  /tmp/ccJ0w3QJ.s 			page 209


 6683 07ec B7D1     		bne	.L820
 6684              	.LVL530:
 6685              	.L821:
3219:src/keys.c    ****       }
 6686              		.loc 1 3219 2 is_stmt 1 view .LVU2127
 6687 07ee FFF7FEFF 		bl	stoprog
 6688              	.LVL531:
 6689 07f2 93E4     		b	.L552
 6690              	.LVL532:
 6691              	.L554:
3139:src/keys.c    **** 	}
 6692              		.loc 1 3139 4 view .LVU2128
 6693              		.loc 1 3242 1 is_stmt 0 view .LVU2129
 6694 07f4 03B0     		add	sp, sp, #12
 6695              		.cfi_remember_state
 6696              		.cfi_def_cfa_offset 36
 6697              		@ sp needed
 6698 07f6 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6699              		.cfi_restore 14
 6700              		.cfi_restore 11
 6701              		.cfi_restore 10
 6702              		.cfi_restore 9
 6703              		.cfi_restore 8
 6704              		.cfi_restore 7
 6705              		.cfi_restore 6
 6706              		.cfi_restore 5
 6707              		.cfi_restore 4
 6708              		.cfi_def_cfa_offset 0
3139:src/keys.c    **** 	}
 6709              		.loc 1 3139 4 view .LVU2130
 6710 07fa FFF7FEBF 		b	finish_display
 6711              	.LVL533:
 6712              	.L1070:
 6713              		.cfi_restore_state
 6714              	.LBB1279:
 6715              	.LBB1221:
2864:src/keys.c    **** 
 6716              		.loc 1 2864 3 is_stmt 1 view .LVU2131
 6717              	.LBB916:
 6718              	.LBI916:
2448:src/keys.c    **** 	// Optimization hint: a switch is shorter then a table of function pointers!
 6719              		.loc 1 2448 12 view .LVU2132
 6720              	.LBB917:
2450:src/keys.c    **** #ifdef DM42
 6721              		.loc 1 2450 2 view .LVU2133
 6722 07fe E4B2     		uxtb	r4, r4
 6723              	.LVL534:
2450:src/keys.c    **** #ifdef DM42
 6724              		.loc 1 2450 2 is_stmt 0 view .LVU2134
 6725 0800 0E3C     		subs	r4, r4, #14
 6726 0802 192C     		cmp	r4, #25
 6727 0804 3FF6EBAE 		bhi	.L1051
 6728 0808 01A3     		adr	r3, .L573
 6729 080a 53F824F0 		ldr	pc, [r3, r4, lsl #2]
 6730 080e 00BF     		.p2align 2
 6731              	.L573:
 6732 0810 A1080000 		.word	.L574+1
ARM GAS  /tmp/ccJ0w3QJ.s 			page 210


 6733 0814 DF050000 		.word	.L1051+1
 6734 0818 A1080000 		.word	.L574+1
 6735 081c DF050000 		.word	.L1051+1
 6736 0820 DF050000 		.word	.L1051+1
 6737 0824 DF050000 		.word	.L1051+1
 6738 0828 DF050000 		.word	.L1051+1
 6739 082c DF050000 		.word	.L1051+1
 6740 0830 DF050000 		.word	.L1051+1
 6741 0834 DF050000 		.word	.L1051+1
 6742 0838 DF050000 		.word	.L1051+1
 6743 083c DF050000 		.word	.L1051+1
 6744 0840 DF050000 		.word	.L1051+1
 6745 0844 DF050000 		.word	.L1051+1
 6746 0848 DF050000 		.word	.L1051+1
 6747 084c DF050000 		.word	.L1051+1
 6748 0850 DF050000 		.word	.L1051+1
 6749 0854 DF050000 		.word	.L1051+1
 6750 0858 B3080000 		.word	.L572+1
 6751 085c DF050000 		.word	.L1051+1
 6752 0860 DF050000 		.word	.L1051+1
 6753 0864 DF050000 		.word	.L1051+1
 6754 0868 DF050000 		.word	.L1051+1
 6755 086c DF050000 		.word	.L1051+1
 6756 0870 DF050000 		.word	.L1051+1
 6757 0874 B3080000 		.word	.L572+1
 6758              		.p2align 1
 6759              	.L1136:
 6760              		.align	2
 6761              	.L1135:
 6762 0878 00000000 		.word	.LANCHOR1
 6763 087c 00000000 		.word	.LANCHOR9
 6764 0880 31020008 		.word	134218289
 6765 0884 00000000 		.word	NonProgrammable
 6766 0888 00000000 		.word	OpCode
 6767 088c 00000000 		.word	OpCodeDisplayPending
 6768 0890 00000000 		.word	main_ram
 6769 0894 04000000 		.word	.LC1
 6770 0898 00000000 		.word	StateWhileOn
 6771              	.L575:
2459:src/keys.c    **** 	  }
 6772              		.loc 1 2459 26 is_stmt 1 view .LVU2135
 6773 089c FFF7FEFF 		bl	clpall
 6774              	.LVL535:
2459:src/keys.c    **** 	  }
 6775              		.loc 1 2459 36 view .LVU2136
 6776              	.L574:
2468:src/keys.c    **** 	  State2.digval = 0;
 6777              		.loc 1 2468 4 view .LVU2137
2468:src/keys.c    **** 	  State2.digval = 0;
 6778              		.loc 1 2468 19 is_stmt 0 view .LVU2138
 6779 08a0 337D     		ldrb	r3, [r6, #20]	@ zero_extendqisi2
2469:src/keys.c    **** 	  break;
 6780              		.loc 1 2469 18 view .LVU2139
 6781 08a2 0022     		movs	r2, #0
2468:src/keys.c    **** 	  State2.digval = 0;
 6782              		.loc 1 2468 19 view .LVU2140
 6783 08a4 6FF30203 		bfc	r3, #0, #3
ARM GAS  /tmp/ccJ0w3QJ.s 			page 211


 6784 08a8 3375     		strb	r3, [r6, #20]
2469:src/keys.c    **** 	  break;
 6785              		.loc 1 2469 4 is_stmt 1 view .LVU2141
2469:src/keys.c    **** 	  break;
 6786              		.loc 1 2469 18 is_stmt 0 view .LVU2142
 6787 08aa 3281     		strh	r2, [r6, #8]	@ movhi
2470:src/keys.c    **** 	default:			// No state change
 6788              		.loc 1 2470 4 is_stmt 1 view .LVU2143
 6789              	.LBE917:
 6790              	.LBE916:
2864:src/keys.c    **** 
 6791              		.loc 1 2864 10 is_stmt 0 view .LVU2144
 6792 08ac 4FF0330B 		mov	fp, #51
 6793              	.LBB919:
 6794              	.LBB918:
2470:src/keys.c    **** 	default:			// No state change
 6795              		.loc 1 2470 4 view .LVU2145
 6796 08b0 34E4     		b	.L552
 6797              	.L572:
2455:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 6798              		.loc 1 2455 4 is_stmt 1 view .LVU2146
2455:src/keys.c    **** 	  case confirm_clall:	 clrall();	break;
 6799              		.loc 1 2455 18 is_stmt 0 view .LVU2147
 6800 08b2 337D     		ldrb	r3, [r6, #20]	@ zero_extendqisi2
 6801 08b4 03F00703 		and	r3, r3, #7
 6802 08b8 013B     		subs	r3, r3, #1
 6803 08ba 032B     		cmp	r3, #3
 6804 08bc F0D8     		bhi	.L574
 6805 08be 01A2     		adr	r2, .L576
 6806 08c0 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6807              		.p2align 2
 6808              	.L576:
 6809 08c4 E1080000 		.word	.L579+1
 6810 08c8 DB080000 		.word	.L578+1
 6811 08cc D5080000 		.word	.L577+1
 6812 08d0 9D080000 		.word	.L575+1
 6813              		.p2align 1
 6814              	.L577:
2458:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 6815              		.loc 1 2458 26 is_stmt 1 view .LVU2148
 6816 08d4 FFF7FEFF 		bl	clrprog
 6817              	.LVL536:
2458:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 6818              		.loc 1 2458 37 view .LVU2149
2458:src/keys.c    **** 	  case confirm_clpall:	 clpall();	break;
 6819              		.loc 1 2458 4 is_stmt 0 view .LVU2150
 6820 08d8 E2E7     		b	.L574
 6821              	.L578:
2457:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 6822              		.loc 1 2457 25 is_stmt 1 view .LVU2151
 6823 08da FFF7FEFF 		bl	reset
 6824              	.LVL537:
2457:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 6825              		.loc 1 2457 34 view .LVU2152
2457:src/keys.c    **** 	  case confirm_clprog:	 clrprog();	break;
 6826              		.loc 1 2457 4 is_stmt 0 view .LVU2153
 6827 08de DFE7     		b	.L574
ARM GAS  /tmp/ccJ0w3QJ.s 			page 212


 6828              	.L579:
2456:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 6829              		.loc 1 2456 25 is_stmt 1 view .LVU2154
 6830 08e0 FFF7FEFF 		bl	clrall
 6831              	.LVL538:
2456:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 6832              		.loc 1 2456 35 view .LVU2155
2456:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 6833              		.loc 1 2456 4 is_stmt 0 view .LVU2156
 6834 08e4 DCE7     		b	.L574
 6835              	.LVL539:
 6836              	.L1067:
2456:src/keys.c    **** 	  case confirm_reset:	 reset();	break;
 6837              		.loc 1 2456 4 view .LVU2157
 6838              	.LBE918:
 6839              	.LBE919:
2837:src/keys.c    ****     soft_init_state();
 6840              		.loc 1 2837 47 view .LVU2158
 6841 08e6 C94E     		ldr	r6, .L1137
 6842 08e8 B37B     		ldrb	r3, [r6, #14]	@ zero_extendqisi2
2837:src/keys.c    ****     soft_init_state();
 6843              		.loc 1 2837 36 view .LVU2159
 6844 08ea 4AEA0302 		orr	r2, r10, r3
 6845 08ee 12F0FF0F 		tst	r2, #255
 6846 08f2 7FF4D3AC 		bne	.L563
2838:src/keys.c    ****     return STATE_UNFINISHED;
 6847              		.loc 1 2838 5 is_stmt 1 view .LVU2160
 6848 08f6 FFF7FEFF 		bl	soft_init_state
 6849              	.LVL540:
2839:src/keys.c    ****   }
 6850              		.loc 1 2839 5 view .LVU2161
2839:src/keys.c    ****   }
 6851              		.loc 1 2839 12 is_stmt 0 view .LVU2162
 6852 08fa 4FF0330B 		mov	fp, #51
 6853 08fe 0DE4     		b	.L552
 6854              	.L1071:
2867:src/keys.c    **** 
 6855              		.loc 1 2867 3 is_stmt 1 view .LVU2163
2867:src/keys.c    **** 
 6856              		.loc 1 2867 10 is_stmt 0 view .LVU2164
 6857 0900 E0B2     		uxtb	r0, r4
 6858 0902 FFF7FEFF 		bl	process_arg
 6859              	.LVL541:
 6860 0906 8346     		mov	fp, r0
 6861 0908 46E6     		b	.L581
 6862              	.L1068:
2793:src/keys.c    ****       start_pause (0); //end the pause
 6863              		.loc 1 2793 2 is_stmt 1 view .LVU2165
 6864 090a 0020     		movs	r0, #0
 6865 090c FFF7FEFF 		bl	set_pc
 6866              	.LVL542:
 6867 0910 87E4     		b	.L560
 6868              	.LVL543:
 6869              	.L813:
2793:src/keys.c    ****       start_pause (0); //end the pause
 6870              		.loc 1 2793 2 is_stmt 0 view .LVU2166
 6871              	.LBE1221:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 213


 6872              	.LBE1279:
 6873              	.LBB1280:
3176:src/keys.c    **** 	if (p > Alpha)
 6874              		.loc 1 3176 2 is_stmt 1 view .LVU2167
3176:src/keys.c    **** 	if (p > Alpha)
 6875              		.loc 1 3176 22 is_stmt 0 view .LVU2168
 6876 0912 BF4C     		ldr	r4, .L1137+4
 6877 0914 2068     		ldr	r0, [r4]
3176:src/keys.c    **** 	if (p > Alpha)
 6878              		.loc 1 3176 12 view .LVU2169
 6879 0916 0021     		movs	r1, #0
 6880 0918 00F5F660 		add	r0, r0, #1968
 6881 091c FFF7FEFF 		bl	find_char
 6882              	.LVL544:
3177:src/keys.c    **** 	  *--p = '\0';
 6883              		.loc 1 3177 8 view .LVU2170
 6884 0920 2368     		ldr	r3, [r4]
 6885              	.LVL545:
3177:src/keys.c    **** 	  *--p = '\0';
 6886              		.loc 1 3177 2 is_stmt 1 view .LVU2171
3177:src/keys.c    **** 	  *--p = '\0';
 6887              		.loc 1 3177 8 is_stmt 0 view .LVU2172
 6888 0922 03F5F663 		add	r3, r3, #1968
3177:src/keys.c    **** 	  *--p = '\0';
 6889              		.loc 1 3177 5 view .LVU2173
 6890 0926 9842     		cmp	r0, r3
3178:src/keys.c    ****       }
 6891              		.loc 1 3178 4 is_stmt 1 view .LVU2174
 6892              	.LVL546:
3178:src/keys.c    ****       }
 6893              		.loc 1 3178 9 is_stmt 0 view .LVU2175
 6894 0928 84BF     		itt	hi
 6895 092a 0023     		movhi	r3, #0
 6896 092c 00F8013C 		strbhi	r3, [r0, #-1]
 6897 0930 E8E6     		b	.L1045
 6898              	.LVL547:
 6899              	.L1074:
3178:src/keys.c    ****       }
 6900              		.loc 1 3178 9 view .LVU2176
 6901              	.LBE1280:
 6902              	.LBB1281:
 6903              	.LBB1222:
2876:src/keys.c    **** 
 6904              		.loc 1 2876 3 is_stmt 1 view .LVU2177
 6905              	.LBB920:
 6906              	.LBI920:
1910:src/keys.c    **** 	int r = State2.test;
 6907              		.loc 1 1910 12 view .LVU2178
 6908              	.LBB921:
1911:src/keys.c    **** 	int cmpx = State2.cmplx;
 6909              		.loc 1 1911 2 view .LVU2179
1912:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 6910              		.loc 1 1912 2 view .LVU2180
 6911              	.LBB922:
 6912              	.LBB923:
 6913              	.LBB924:
 6914              	.LBB925:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 214


 136:src/keys.c    **** }
 6915              		.loc 1 136 23 is_stmt 0 view .LVU2181
 6916 0932 B848     		ldr	r0, .L1137+8
 6917              	.LBE925:
 6918              	.LBE924:
 231:src/keys.c    **** }
 6919              		.loc 1 231 28 view .LVU2182
 6920 0934 DFF8E0C2 		ldr	ip, .L1137+12
 6921              	.LBB929:
 6922              	.LBB926:
 136:src/keys.c    **** }
 6923              		.loc 1 136 23 view .LVU2183
 6924 0938 E4B2     		uxtb	r4, r4
 6925              	.LVL548:
 136:src/keys.c    **** }
 6926              		.loc 1 136 23 view .LVU2184
 6927              	.LBE926:
 6928              	.LBE929:
 6929              	.LBE923:
 6930              	.LBE922:
1914:src/keys.c    **** 
 6931              		.loc 1 1914 44 view .LVU2185
 6932 093a 12F0020F 		tst	r2, #2
 6933              	.LBB934:
 6934              	.LBB932:
 6935              	.LBB930:
 6936              	.LBB927:
 136:src/keys.c    **** }
 6937              		.loc 1 136 23 view .LVU2186
 6938 093e 005D     		ldrb	r0, [r0, r4]	@ zero_extendqisi2
 6939              	.LBE927:
 6940              	.LBE930:
 231:src/keys.c    **** }
 6941              		.loc 1 231 28 view .LVU2187
 6942 0940 1CF800C0 		ldrb	ip, [ip, r0]	@ zero_extendqisi2
 6943              	.LBE932:
 6944              	.LBE934:
1912:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 6945              		.loc 1 1912 19 view .LVU2188
 6946 0944 C2F3400E 		ubfx	lr, r2, #1, #1
 6947              	.LVL549:
1913:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 6948              		.loc 1 1913 2 is_stmt 1 view .LVU2189
 6949              	.LBB935:
 6950              	.LBI922:
 208:src/keys.c    **** {
 6951              		.loc 1 208 14 view .LVU2190
 6952              	.LBB933:
 210:src/keys.c    ****     // K00 - K05
 6953              		.loc 1 210 3 view .LVU2191
 231:src/keys.c    **** }
 6954              		.loc 1 231 3 view .LVU2192
 6955              	.LBB931:
 6956              	.LBI924:
 124:src/keys.c    **** {
 6957              		.loc 1 124 12 view .LVU2193
 6958              	.LBB928:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 215


 126:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 6959              		.loc 1 126 2 view .LVU2194
 136:src/keys.c    **** }
 6960              		.loc 1 136 2 view .LVU2195
 136:src/keys.c    **** }
 6961              		.loc 1 136 2 is_stmt 0 view .LVU2196
 6962              	.LBE928:
 6963              	.LBE931:
 6964              	.LBE933:
 6965              	.LBE935:
1913:src/keys.c    **** 	unsigned int base = (cmpx ? RARG_TEST_ZEQ : RARG_TEST_EQ) + r;
 6966              		.loc 1 1913 15 view .LVU2197
 6967 0948 2CF08000 		bic	r0, ip, #128
 6968              	.LVL550:
1914:src/keys.c    **** 
 6969              		.loc 1 1914 2 is_stmt 1 view .LVU2198
1914:src/keys.c    **** 
 6970              		.loc 1 1914 44 is_stmt 0 view .LVU2199
 6971 094c 7ED0     		beq	.L1098
1917:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 6972              		.loc 1 1917 15 view .LVU2200
 6973 094e 61F34102 		bfi	r2, r1, #1, #1
1918:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 6974              		.loc 1 1918 5 view .LVU2201
 6975 0952 6428     		cmp	r0, #100
1916:src/keys.c    **** 	State2.cmplx = 0;
 6976              		.loc 1 1916 14 view .LVU2202
 6977 0954 4FF00701 		mov	r1, #7
1917:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 6978              		.loc 1 1917 15 view .LVU2203
 6979 0958 7275     		strb	r2, [r6, #21]
1916:src/keys.c    **** 	State2.cmplx = 0;
 6980              		.loc 1 1916 14 view .LVU2204
 6981 095a F173     		strb	r1, [r6, #15]
1914:src/keys.c    **** 
 6982              		.loc 1 1914 60 view .LVU2205
 6983 095c 0BF1340A 		add	r10, fp, #52
 6984              	.LVL551:
1916:src/keys.c    **** 	State2.cmplx = 0;
 6985              		.loc 1 1916 2 is_stmt 1 view .LVU2206
1917:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 6986              		.loc 1 1917 2 view .LVU2207
1918:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 6987              		.loc 1 1918 2 view .LVU2208
1918:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 6988              		.loc 1 1918 5 is_stmt 0 view .LVU2209
 6989 0960 00F0C881 		beq	.L615
 6990              	.L834:
1919:src/keys.c    **** 		// Lettered register
 6991              		.loc 1 1919 2 is_stmt 1 view .LVU2210
1919:src/keys.c    **** 		// Lettered register
 6992              		.loc 1 1919 5 is_stmt 0 view .LVU2211
 6993 0964 7F28     		cmp	r0, #127
 6994 0966 05D0     		beq	.L608
 6995              	.LVL552:
1919:src/keys.c    **** 		// Lettered register
 6996              		.loc 1 1919 18 view .LVU2212
ARM GAS  /tmp/ccJ0w3QJ.s 			page 216


 6997 0968 6328     		cmp	r0, #99
 6998 096a 40F23681 		bls	.L609
1919:src/keys.c    **** 		// Lettered register
 6999              		.loc 1 1919 37 view .LVU2213
 7000 096e 6F28     		cmp	r0, #111
 7001 0970 40F26A85 		bls	.L1099
 7002              	.L608:
1938:src/keys.c    **** 		// digit 2..9, -> or .
 7003              		.loc 1 1938 19 view .LVU2214
 7004 0974 2C2C     		cmp	r4, #44
 7005 0976 00F03D81 		beq	.L617
1938:src/keys.c    **** 		// digit 2..9, -> or .
 7006              		.loc 1 1938 35 view .LVU2215
 7007 097a 262C     		cmp	r4, #38
 7008 097c 00F03A81 		beq	.L617
1944:src/keys.c    **** 	case K11:					// tests vs register
 7009              		.loc 1 1944 2 is_stmt 1 view .LVU2216
 7010 0980 0C2C     		cmp	r4, #12
 7011 0982 3FF423AE 		beq	.L799
 7012 0986 102C     		cmp	r4, #16
 7013 0988 3FF429AE 		beq	.L1051
 7014 098c 072C     		cmp	r4, #7
 7015 098e 3FF41DAE 		beq	.L799
 7016              	.L611:
1958:src/keys.c    **** 	State2.cmplx = cmpx;
 7017              		.loc 1 1958 2 view .LVU2217
1959:src/keys.c    **** 	return STATE_UNFINISHED;
 7018              		.loc 1 1959 15 is_stmt 0 view .LVU2218
 7019 0992 737D     		ldrb	r3, [r6, #21]	@ zero_extendqisi2
1958:src/keys.c    **** 	State2.cmplx = cmpx;
 7020              		.loc 1 1958 14 view .LVU2219
 7021 0994 86F80FB0 		strb	fp, [r6, #15]
1959:src/keys.c    **** 	return STATE_UNFINISHED;
 7022              		.loc 1 1959 2 is_stmt 1 view .LVU2220
1959:src/keys.c    **** 	return STATE_UNFINISHED;
 7023              		.loc 1 1959 15 is_stmt 0 view .LVU2221
 7024 0998 6EF34103 		bfi	r3, lr, #1, #1
 7025 099c 7375     		strb	r3, [r6, #21]
1960:src/keys.c    **** }
 7026              		.loc 1 1960 2 is_stmt 1 view .LVU2222
1960:src/keys.c    **** }
 7027              		.loc 1 1960 9 is_stmt 0 view .LVU2223
 7028 099e 4FF0330B 		mov	fp, #51
 7029              	.LVL553:
1960:src/keys.c    **** }
 7030              		.loc 1 1960 9 view .LVU2224
 7031 09a2 FFF7BBBB 		b	.L552
 7032              	.LVL554:
 7033              	.L1072:
1960:src/keys.c    **** }
 7034              		.loc 1 1960 9 view .LVU2225
 7035              	.LBE921:
 7036              	.LBE920:
2870:src/keys.c    **** 
 7037              		.loc 1 2870 3 is_stmt 1 view .LVU2226
 7038              	.LBB942:
 7039              	.LBI942:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 217


1350:src/keys.c    **** 	int pc = -1;
 7040              		.loc 1 1350 12 view .LVU2227
 7041              	.LBB943:
1351:src/keys.c    **** 	unsigned int rawpc = keycode_to_digit_or_register(c);
 7042              		.loc 1 1351 2 view .LVU2228
1352:src/keys.c    **** 
 7043              		.loc 1 1352 2 view .LVU2229
 7044              	.LBB944:
 7045              	.LBI944:
 208:src/keys.c    **** {
 7046              		.loc 1 208 14 view .LVU2230
 7047              	.LBB945:
 210:src/keys.c    ****     // K00 - K05
 7048              		.loc 1 210 3 view .LVU2231
 231:src/keys.c    **** }
 7049              		.loc 1 231 3 view .LVU2232
 7050              	.LBB946:
 7051              	.LBI946:
 124:src/keys.c    **** {
 7052              		.loc 1 124 12 view .LVU2233
 7053              	.LBB947:
 126:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 7054              		.loc 1 126 2 view .LVU2234
 136:src/keys.c    **** }
 7055              		.loc 1 136 2 view .LVU2235
 136:src/keys.c    **** }
 7056              		.loc 1 136 23 is_stmt 0 view .LVU2236
 7057 09a6 9B4B     		ldr	r3, .L1137+8
 7058              	.LBE947:
 7059              	.LBE946:
 231:src/keys.c    **** }
 7060              		.loc 1 231 28 view .LVU2237
 7061 09a8 9B4A     		ldr	r2, .L1137+12
 7062 09aa E4B2     		uxtb	r4, r4
 7063              	.LVL555:
 7064              	.LBB949:
 7065              	.LBB948:
 136:src/keys.c    **** }
 7066              		.loc 1 136 23 view .LVU2238
 7067 09ac 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 7068              	.LBE948:
 7069              	.LBE949:
 231:src/keys.c    **** }
 7070              		.loc 1 231 28 view .LVU2239
 7071 09ae D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7072              	.LVL556:
 231:src/keys.c    **** }
 7073              		.loc 1 231 28 view .LVU2240
 7074              	.LBE945:
 7075              	.LBE944:
1354:src/keys.c    **** 		// Digit 0 - 9
 7076              		.loc 1 1354 2 is_stmt 1 view .LVU2241
1354:src/keys.c    **** 		// Digit 0 - 9
 7077              		.loc 1 1354 5 is_stmt 0 view .LVU2242
 7078 09b0 092B     		cmp	r3, #9
 7079 09b2 40F2C480 		bls	.L1100
1358:src/keys.c    **** 		// A - D
ARM GAS  /tmp/ccJ0w3QJ.s 			page 218


 7080              		.loc 1 1358 7 is_stmt 1 view .LVU2243
1358:src/keys.c    **** 		// A - D
 7081              		.loc 1 1358 10 is_stmt 0 view .LVU2244
 7082 09b6 032C     		cmp	r4, #3
 7083 09b8 40F26F81 		bls	.L1101
1363:src/keys.c    **** 		// .
 7084              		.loc 1 1363 7 is_stmt 1 view .LVU2245
1363:src/keys.c    **** 		// .
 7085              		.loc 1 1363 10 is_stmt 0 view .LVU2246
 7086 09bc 262C     		cmp	r4, #38
 7087 09be 00F08981 		beq	.L1102
1368:src/keys.c    **** 		// ENTER - short circuit processing
 7088              		.loc 1 1368 7 is_stmt 1 view .LVU2247
1368:src/keys.c    **** 		// ENTER - short circuit processing
 7089              		.loc 1 1368 10 is_stmt 0 view .LVU2248
 7090 09c2 0C2C     		cmp	r4, #12
 7091 09c4 00F06281 		beq	.L1103
1372:src/keys.c    **** 		// backspace
 7092              		.loc 1 1372 7 is_stmt 1 view .LVU2249
1372:src/keys.c    **** 		// backspace
 7093              		.loc 1 1372 10 is_stmt 0 view .LVU2250
 7094 09c8 102C     		cmp	r4, #16
 7095 09ca 00F09681 		beq	.L1104
1381:src/keys.c    **** 		// up
 7096              		.loc 1 1381 7 is_stmt 1 view .LVU2251
1381:src/keys.c    **** 		// up
 7097              		.loc 1 1381 10 is_stmt 0 view .LVU2252
 7098 09ce 122C     		cmp	r4, #18
 7099 09d0 00F00984 		beq	.L1105
1391:src/keys.c    **** 		// down
 7100              		.loc 1 1391 7 is_stmt 1 view .LVU2253
1391:src/keys.c    **** 		// down
 7101              		.loc 1 1391 10 is_stmt 0 view .LVU2254
 7102 09d4 182C     		cmp	r4, #24
 7103 09d6 7FF402AE 		bne	.L1051
1393:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 7104              		.loc 1 1393 3 is_stmt 1 view .LVU2255
1394:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 7105              		.loc 1 1394 18 is_stmt 0 view .LVU2256
 7106 09da 8D4C     		ldr	r4, .L1137+4
1393:src/keys.c    **** 		rawpc = do_inc(ProgEnd, 0);
 7107              		.loc 1 1393 3 view .LVU2257
 7108 09dc 0120     		movs	r0, #1
 7109 09de FFF7FEFF 		bl	update_program_bounds
 7110              	.LVL557:
1394:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 7111              		.loc 1 1394 3 is_stmt 1 view .LVU2258
1394:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 7112              		.loc 1 1394 18 is_stmt 0 view .LVU2259
 7113 09e2 2368     		ldr	r3, [r4]
1394:src/keys.c    **** 		if (rawpc == 0 && ProgSize > 0)
 7114              		.loc 1 1394 11 view .LVU2260
 7115 09e4 0021     		movs	r1, #0
 7116 09e6 B3F8EE07 		ldrh	r0, [r3, #2030]
 7117 09ea FFF7FEFF 		bl	do_inc
 7118              	.LVL558:
1395:src/keys.c    **** 			rawpc = 1;
ARM GAS  /tmp/ccJ0w3QJ.s 			page 219


 7119              		.loc 1 1395 3 is_stmt 1 view .LVU2261
1395:src/keys.c    **** 			rawpc = 1;
 7120              		.loc 1 1395 6 is_stmt 0 view .LVU2262
 7121 09ee 20B9     		cbnz	r0, .L589
1395:src/keys.c    **** 			rawpc = 1;
 7122              		.loc 1 1395 21 view .LVU2263
 7123 09f0 2368     		ldr	r3, [r4]
1395:src/keys.c    **** 			rawpc = 1;
 7124              		.loc 1 1395 18 view .LVU2264
 7125 09f2 5888     		ldrh	r0, [r3, #2]
 7126              	.LVL559:
1395:src/keys.c    **** 			rawpc = 1;
 7127              		.loc 1 1395 18 view .LVU2265
 7128 09f4 0038     		subs	r0, r0, #0
 7129 09f6 18BF     		it	ne
 7130 09f8 0120     		movne	r0, #1
 7131              	.LVL560:
 7132              	.L589:
1401:src/keys.c    **** fin2:		State2.gtodot = 0;
 7133              		.loc 1 1401 7 is_stmt 1 view .LVU2266
 7134 09fa FFF7FEFF 		bl	set_pc
 7135              	.LVL561:
 7136              	.L593:
1402:src/keys.c    **** 		State2.digval = 0;
 7137              		.loc 1 1402 8 view .LVU2267
1402:src/keys.c    **** 		State2.digval = 0;
 7138              		.loc 1 1402 22 is_stmt 0 view .LVU2268
 7139 09fe 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
1403:src/keys.c    **** 		State2.numdigit = 0;
 7140              		.loc 1 1403 17 view .LVU2269
 7141 0a00 0023     		movs	r3, #0
1402:src/keys.c    **** 		State2.digval = 0;
 7142              		.loc 1 1402 22 view .LVU2270
 7143 0a02 6FF30002 		bfc	r2, #0, #1
 7144 0a06 7275     		strb	r2, [r6, #21]
1403:src/keys.c    **** 		State2.numdigit = 0;
 7145              		.loc 1 1403 3 is_stmt 1 view .LVU2271
1403:src/keys.c    **** 		State2.numdigit = 0;
 7146              		.loc 1 1403 17 is_stmt 0 view .LVU2272
 7147 0a08 3381     		strh	r3, [r6, #8]	@ movhi
1404:src/keys.c    **** 	}
 7148              		.loc 1 1404 3 is_stmt 1 view .LVU2273
1404:src/keys.c    **** 	}
 7149              		.loc 1 1404 19 is_stmt 0 view .LVU2274
 7150 0a0a F372     		strb	r3, [r6, #11]
 7151              	.LBE943:
 7152              	.LBE942:
2870:src/keys.c    **** 
 7153              		.loc 1 2870 10 view .LVU2275
 7154 0a0c 4FF0330B 		mov	fp, #51
 7155 0a10 FFF784BB 		b	.L552
 7156              	.LVL562:
 7157              	.L874:
2870:src/keys.c    **** 
 7158              		.loc 1 2870 10 view .LVU2276
 7159              	.LBE1222:
 7160              	.LBE1281:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 220


2976:src/keys.c    **** #ifdef DM42
 7161              		.loc 1 2976 7 view .LVU2277
 7162 0a14 D846     		mov	r8, fp
 7163 0a16 FFF781BB 		b	.L552
 7164              	.LVL563:
 7165              	.L598:
 7166              	.LBB1282:
 7167              	.LBB1223:
 7168              	.LBB961:
 7169              	.LBB734:
1261:src/keys.c    **** 
 7170              		.loc 1 1261 2 view .LVU2278
 7171 0a1a 2D2C     		cmp	r4, #45
 7172 0a1c 7FF4DFAD 		bne	.L1051
1269:src/keys.c    **** 		goto stay;
 7173              		.loc 1 1269 3 is_stmt 1 view .LVU2279
 7174 0a20 8AF0010A 		eor	r10, r10, #1
 7175              	.LVL564:
1270:src/keys.c    **** 
 7176              		.loc 1 1270 3 view .LVU2280
 7177              	.L604:
1278:src/keys.c    **** 		State2.cmplx = cmplx;
 7178              		.loc 1 1278 3 view .LVU2281
1279:src/keys.c    **** 		State2.dot = f;
 7179              		.loc 1 1279 3 view .LVU2282
1280:src/keys.c    **** 		break;
 7180              		.loc 1 1280 3 view .LVU2283
1279:src/keys.c    **** 		State2.dot = f;
 7181              		.loc 1 1279 16 is_stmt 0 view .LVU2284
 7182 0a24 4FEA4A03 		lsl	r3, r10, #1
 7183 0a28 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
 7184 0a2a 43F02003 		orr	r3, r3, #32
 7185 0a2e 43EA8913 		orr	r3, r3, r9, lsl #6
 7186 0a32 03F06203 		and	r3, r3, #98
 7187 0a36 22F06202 		bic	r2, r2, #98
 7188 0a3a 1343     		orrs	r3, r3, r2
 7189 0a3c 7375     		strb	r3, [r6, #21]
1281:src/keys.c    **** 
 7190              		.loc 1 1281 3 is_stmt 1 view .LVU2285
1286:src/keys.c    **** }
 7191              		.loc 1 1286 9 is_stmt 0 view .LVU2286
 7192 0a3e 4FF0330B 		mov	fp, #51
1281:src/keys.c    **** 
 7193              		.loc 1 1281 3 view .LVU2287
 7194 0a42 FFF76BBB 		b	.L552
 7195              	.LVL565:
 7196              	.L875:
1281:src/keys.c    **** 
 7197              		.loc 1 1281 3 view .LVU2288
 7198              	.LBE734:
 7199              	.LBE961:
 7200              	.LBE1223:
 7201              	.LBE1282:
 7202              	.LBB1283:
 7203 0a46 9B46     		mov	fp, r3
 7204              	.LVL566:
1281:src/keys.c    **** 
ARM GAS  /tmp/ccJ0w3QJ.s 			page 221


 7205              		.loc 1 1281 3 view .LVU2289
 7206 0a48 FFF789BB 		b	.L824
 7207              	.LVL567:
 7208              	.L1098:
1281:src/keys.c    **** 
 7209              		.loc 1 1281 3 view .LVU2290
 7210              	.LBE1283:
 7211              	.LBB1284:
 7212              	.LBB1224:
 7213              	.LBB962:
 7214              	.LBB938:
1917:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7215              		.loc 1 1917 15 view .LVU2291
 7216 0a4c 6EF34102 		bfi	r2, lr, #1, #1
1916:src/keys.c    **** 	State2.cmplx = 0;
 7217              		.loc 1 1916 14 view .LVU2292
 7218 0a50 0721     		movs	r1, #7
1918:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7219              		.loc 1 1918 5 view .LVU2293
 7220 0a52 6428     		cmp	r0, #100
1917:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7221              		.loc 1 1917 15 view .LVU2294
 7222 0a54 7275     		strb	r2, [r6, #21]
1916:src/keys.c    **** 	State2.cmplx = 0;
 7223              		.loc 1 1916 14 view .LVU2295
 7224 0a56 F173     		strb	r1, [r6, #15]
1914:src/keys.c    **** 
 7225              		.loc 1 1914 60 view .LVU2296
 7226 0a58 0BF12D0A 		add	r10, fp, #45
 7227              	.LVL568:
1916:src/keys.c    **** 	State2.cmplx = 0;
 7228              		.loc 1 1916 2 is_stmt 1 view .LVU2297
1917:src/keys.c    **** 	if (n == regX_idx) n = 1; //don't want x-reg
 7229              		.loc 1 1917 2 view .LVU2298
1918:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7230              		.loc 1 1918 2 view .LVU2299
1918:src/keys.c    **** 	if (n != NO_REG && n >= TOPREALREG && n < LOCAL_REG_BASE ) {
 7231              		.loc 1 1918 5 is_stmt 0 view .LVU2300
 7232 0a5c 82D1     		bne	.L834
 7233              	.LVL569:
 7234              	.L835:
1936:src/keys.c    **** 	}
 7235              		.loc 1 1936 18 view .LVU2301
 7236 0a5e 1E23     		movs	r3, #30
1936:src/keys.c    **** 	}
 7237              		.loc 1 1936 47 view .LVU2302
 7238 0a60 9B44     		add	fp, fp, r3
 7239              	.LVL570:
1936:src/keys.c    **** 	}
 7240              		.loc 1 1936 47 view .LVU2303
 7241 0a62 99E5     		b	.L581
 7242              	.LVL571:
 7243              	.L1075:
1936:src/keys.c    **** 	}
 7244              		.loc 1 1936 47 view .LVU2304
 7245              	.LBE938:
 7246              	.LBE962:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 222


2879:src/keys.c    **** 
 7247              		.loc 1 2879 3 is_stmt 1 view .LVU2305
 7248              	.LBB963:
 7249              	.LBB964:
2483:src/keys.c    **** 
 7250              		.loc 1 2483 12 is_stmt 0 view .LVU2306
 7251 0a64 6A4A     		ldr	r2, .L1137+4
 7252 0a66 1268     		ldr	r2, [r2]
2483:src/keys.c    **** 
 7253              		.loc 1 2483 31 view .LVU2307
 7254 0a68 B2F9DE27 		ldrsh	r2, [r2, #2014]
 7255              	.LBE964:
 7256              	.LBE963:
2879:src/keys.c    **** 
 7257              		.loc 1 2879 10 view .LVU2308
 7258 0a6c E4B2     		uxtb	r4, r4
 7259              	.LVL572:
 7260              	.LBB983:
 7261              	.LBI963:
2481:src/keys.c    **** 	int n = ((int)State2.status) - 3;
 7262              		.loc 1 2481 12 is_stmt 1 view .LVU2309
 7263              	.LBB975:
2482:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7264              		.loc 1 2482 2 view .LVU2310
2483:src/keys.c    **** 
 7265              		.loc 1 2483 2 view .LVU2311
2483:src/keys.c    **** 
 7266              		.loc 1 2483 31 is_stmt 0 view .LVU2312
 7267 0a6e 002A     		cmp	r2, #0
 7268 0a70 B4BF     		ite	lt
 7269 0a72 0B22     		movlt	r2, #11
 7270 0a74 0A22     		movge	r2, #10
 7271              	.LVL573:
2485:src/keys.c    **** 		if (--n < -2)
 7272              		.loc 1 2485 2 is_stmt 1 view .LVU2313
2485:src/keys.c    **** 		if (--n < -2)
 7273              		.loc 1 2485 5 is_stmt 0 view .LVU2314
 7274 0a76 122C     		cmp	r4, #18
 7275 0a78 00F00A81 		beq	.L1106
2489:src/keys.c    **** 		if (++n > max)
 7276              		.loc 1 2489 7 is_stmt 1 view .LVU2315
2489:src/keys.c    **** 		if (++n > max)
 7277              		.loc 1 2489 10 is_stmt 0 view .LVU2316
 7278 0a7c 182C     		cmp	r4, #24
 7279 0a7e 00F04B81 		beq	.L1107
2493:src/keys.c    **** 		State2.status = 0;
 7280              		.loc 1 2493 7 is_stmt 1 view .LVU2317
2493:src/keys.c    **** 		State2.status = 0;
 7281              		.loc 1 2493 10 is_stmt 0 view .LVU2318
 7282 0a82 102C     		cmp	r4, #16
 7283 0a84 00F0AA83 		beq	.L1108
 7284              	.LBB965:
2498:src/keys.c    **** 		if (nn <= 9)
 7285              		.loc 1 2498 3 is_stmt 1 view .LVU2319
 7286              	.LVL574:
 7287              	.LBB966:
 7288              	.LBI966:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 223


 208:src/keys.c    **** {
 7289              		.loc 1 208 14 view .LVU2320
 7290              	.LBB967:
 210:src/keys.c    ****     // K00 - K05
 7291              		.loc 1 210 3 view .LVU2321
 231:src/keys.c    **** }
 7292              		.loc 1 231 3 view .LVU2322
 7293              	.LBB968:
 7294              	.LBI968:
 124:src/keys.c    **** {
 7295              		.loc 1 124 12 view .LVU2323
 7296              	.LBB969:
 126:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 7297              		.loc 1 126 2 view .LVU2324
 136:src/keys.c    **** }
 7298              		.loc 1 136 2 view .LVU2325
 136:src/keys.c    **** }
 7299              		.loc 1 136 23 is_stmt 0 view .LVU2326
 7300 0a88 6249     		ldr	r1, .L1137+8
 7301              	.LBE969:
 7302              	.LBE968:
 231:src/keys.c    **** }
 7303              		.loc 1 231 28 view .LVU2327
 7304 0a8a 6348     		ldr	r0, .L1137+12
 7305              	.LBB971:
 7306              	.LBB970:
 136:src/keys.c    **** }
 7307              		.loc 1 136 23 view .LVU2328
 7308 0a8c 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 7309 0a8e 415C     		ldrb	r1, [r0, r1]	@ zero_extendqisi2
 7310 0a90 01F07F01 		and	r1, r1, #127
 7311              	.LVL575:
 136:src/keys.c    **** }
 7312              		.loc 1 136 23 view .LVU2329
 7313              	.LBE970:
 7314              	.LBE971:
 7315              	.LBE967:
 7316              	.LBE966:
2499:src/keys.c    **** 			n = nn;
 7317              		.loc 1 2499 3 is_stmt 1 view .LVU2330
2499:src/keys.c    **** 			n = nn;
 7318              		.loc 1 2499 6 is_stmt 0 view .LVU2331
 7319 0a94 0929     		cmp	r1, #9
 7320 0a96 40F27C82 		bls	.L845
2501:src/keys.c    **** 			n = n == max ? 10 : max;
 7321              		.loc 1 2501 11 view .LVU2332
 7322 0a9a 7029     		cmp	r1, #112
 7323              	.LBE965:
2482:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7324              		.loc 1 2482 6 view .LVU2333
 7325 0a9c A3F10303 		sub	r3, r3, #3
 7326              	.LVL576:
 7327              	.LBB972:
2501:src/keys.c    **** 			n = n == max ? 10 : max;
 7328              		.loc 1 2501 8 is_stmt 1 view .LVU2334
2501:src/keys.c    **** 			n = n == max ? 10 : max;
 7329              		.loc 1 2501 11 is_stmt 0 view .LVU2335
ARM GAS  /tmp/ccJ0w3QJ.s 			page 224


 7330 0aa0 00F0BB84 		beq	.L1109
2503:src/keys.c    **** 			n = 10; 
 7331              		.loc 1 2503 8 is_stmt 1 view .LVU2336
 7332              	.LBE972:
2482:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7333              		.loc 1 2482 6 is_stmt 0 view .LVU2337
 7334 0aa4 7F29     		cmp	r1, #127
 7335 0aa6 0CBF     		ite	eq
 7336 0aa8 1A46     		moveq	r2, r3
 7337              	.LVL577:
2482:src/keys.c    **** 	int max = LocalRegs < 0 ? 11 : 10;
 7338              		.loc 1 2482 6 view .LVU2338
 7339 0aaa 0A22     		movne	r2, #10
 7340              	.LVL578:
 7341              	.L625:
2506:src/keys.c    **** 
 7342              		.loc 1 2506 2 is_stmt 1 view .LVU2339
2506:src/keys.c    **** 
 7343              		.loc 1 2506 20 is_stmt 0 view .LVU2340
 7344 0aac 0332     		adds	r2, r2, #3
 7345              	.LVL579:
2506:src/keys.c    **** 
 7346              		.loc 1 2506 16 view .LVU2341
 7347 0aae 3273     		strb	r2, [r6, #12]
2508:src/keys.c    **** }
 7348              		.loc 1 2508 2 is_stmt 1 view .LVU2342
 7349              	.LBE975:
 7350              	.LBE983:
2879:src/keys.c    **** 
 7351              		.loc 1 2879 10 is_stmt 0 view .LVU2343
 7352 0ab0 4FF0330B 		mov	fp, #51
 7353              	.LBB984:
 7354              	.LBB976:
2508:src/keys.c    **** }
 7355              		.loc 1 2508 9 view .LVU2344
 7356 0ab4 FFF732BB 		b	.L552
 7357              	.LVL580:
 7358              	.L1079:
2508:src/keys.c    **** }
 7359              		.loc 1 2508 9 view .LVU2345
 7360              	.LBE976:
 7361              	.LBE984:
2902:src/keys.c    **** 
 7362              		.loc 1 2902 3 is_stmt 1 view .LVU2346
 7363              	.LBB985:
 7364              	.LBB986:
 7365              	.LBB987:
 7366              	.LBB988:
 7367              	.LBB989:
 7368              	.LBB990:
 7369              	.LBB991:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7370              		.loc 1 85 18 is_stmt 0 view .LVU2347
 7371 0ab8 FFF7FEFF 		bl	shift_down
 7372              	.LVL581:
 7373              	.LBE991:
 7374              	.LBE990:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 225


 7375              	.LBE989:
 7376              	.LBE988:
 7377              	.LBE987:
 7378              	.LBE986:
 7379              	.LBE985:
2902:src/keys.c    **** 
 7380              		.loc 1 2902 10 view .LVU2348
 7381 0abc E4B2     		uxtb	r4, r4
 7382              	.LVL582:
 7383              	.LBB1011:
 7384              	.LBI985:
1294:src/keys.c    **** 	static const unsigned short int op_map[][2] = {
 7385              		.loc 1 1294 12 is_stmt 1 view .LVU2349
 7386              	.LBB1008:
1295:src/keys.c    **** 		{ OP_MON | OP_2DEG,  OP_MON | OP_2HMS },
 7387              		.loc 1 1295 2 view .LVU2350
1300:src/keys.c    **** 		{ SDISP_OCT, SDISP_BIN },
 7388              		.loc 1 1300 2 view .LVU2351
1304:src/keys.c    **** 	const int f = (shift == SHIFT_F);
 7389              		.loc 1 1304 2 view .LVU2352
 7390              	.LBB1000:
 7391              	.LBI987:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 7392              		.loc 1 102 13 view .LVU2353
 7393              	.LBE1000:
 7394              	.LBE1008:
 7395              	.LBE1011:
 7396              	.LBE1224:
 7397              	.LBE1284:
 103:src/keys.c    **** }
 7398              		.loc 1 103 2 view .LVU2354
 7399              	.LBB1285:
 7400              	.LBB1225:
 7401              	.LBB1012:
 7402              	.LBB1009:
 7403              	.LBB1001:
 7404              	.LBB997:
 7405              	.LBI988:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 7406              		.loc 1 92 20 view .LVU2355
 7407              	.LBB994:
  93:src/keys.c    **** 	State2.shifts = shift;
 7408              		.loc 1 93 2 view .LVU2356
 7409              	.LBB993:
 7410              	.LBI990:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 7411              		.loc 1 84 13 view .LVU2357
 7412              	.LBB992:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 7413              		.loc 1 85 2 view .LVU2358
  86:src/keys.c    **** }
 7414              		.loc 1 86 2 view .LVU2359
  86:src/keys.c    **** }
 7415              		.loc 1 86 52 is_stmt 0 view .LVU2360
 7416 0abe 8346     		mov	fp, r0
 7417 0ac0 08B9     		cbnz	r0, .L635
 7418 0ac2 96F810B0 		ldrb	fp, [r6, #16]	@ zero_extendqisi2
ARM GAS  /tmp/ccJ0w3QJ.s 			page 226


 7419              	.L635:
 7420              	.LVL583:
  86:src/keys.c    **** }
 7421              		.loc 1 86 52 view .LVU2361
 7422              	.LBE992:
 7423              	.LBE993:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 7424              		.loc 1 94 2 is_stmt 1 view .LVU2362
 7425              	.LBE994:
 7426              	.LBE997:
 7427              	.LBE1001:
1307:src/keys.c    **** 	set_last_menu ();
 7428              		.loc 1 1307 15 is_stmt 0 view .LVU2363
 7429 0ac6 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
 7430              	.LBB1002:
 7431              	.LBB998:
 7432              	.LBB995:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 7433              		.loc 1 94 16 view .LVU2364
 7434 0ac8 0023     		movs	r3, #0
 7435              	.LBE995:
 7436              	.LBE998:
 7437              	.LBE1002:
1307:src/keys.c    **** 	set_last_menu ();
 7438              		.loc 1 1307 15 view .LVU2365
 7439 0aca 63F38202 		bfi	r2, r3, #2, #1
1305:src/keys.c    **** 
 7440              		.loc 1 1305 23 view .LVU2366
 7441 0ace ABF1010A 		sub	r10, fp, #1
 7442              	.LVL584:
1307:src/keys.c    **** 	set_last_menu ();
 7443              		.loc 1 1307 15 view .LVU2367
 7444 0ad2 7275     		strb	r2, [r6, #21]
1305:src/keys.c    **** 
 7445              		.loc 1 1305 23 view .LVU2368
 7446 0ad4 BAFA8AFA 		clz	r10, r10
 7447              	.LBB1003:
 7448              	.LBB999:
 7449              	.LBB996:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 7450              		.loc 1 94 16 view .LVU2369
 7451 0ad8 3374     		strb	r3, [r6, #16]
  95:src/keys.c    **** 	return r;
 7452              		.loc 1 95 2 is_stmt 1 view .LVU2370
  95:src/keys.c    **** 	return r;
 7453              		.loc 1 95 19 is_stmt 0 view .LVU2371
 7454 0ada 7373     		strb	r3, [r6, #13]
  96:src/keys.c    **** }
 7455              		.loc 1 96 2 is_stmt 1 view .LVU2372
 7456              	.LVL585:
  96:src/keys.c    **** }
 7457              		.loc 1 96 2 is_stmt 0 view .LVU2373
 7458              	.LBE996:
 7459              	.LBE999:
 7460              	.LBE1003:
1305:src/keys.c    **** 
 7461              		.loc 1 1305 2 is_stmt 1 view .LVU2374
ARM GAS  /tmp/ccJ0w3QJ.s 			page 227


1305:src/keys.c    **** 
 7462              		.loc 1 1305 23 is_stmt 0 view .LVU2375
 7463 0adc 4FEA5A1A 		lsr	r10, r10, #5
 7464              	.LVL586:
1307:src/keys.c    **** 	set_last_menu ();
 7465              		.loc 1 1307 2 is_stmt 1 view .LVU2376
1308:src/keys.c    **** 	display_current_menu ();
 7466              		.loc 1 1308 2 view .LVU2377
 7467 0ae0 FFF7FEFF 		bl	set_last_menu
 7468              	.LVL587:
1309:src/keys.c    **** 
 7469              		.loc 1 1309 2 view .LVU2378
 7470 0ae4 FFF7FEFF 		bl	display_current_menu
 7471              	.LVL588:
1311:src/keys.c    **** 	
 7472              		.loc 1 1311 2 view .LVU2379
1311:src/keys.c    **** 	
 7473              		.loc 1 1311 5 is_stmt 0 view .LVU2380
 7474 0ae8 BBF1000F 		cmp	fp, #0
 7475 0aec 3FF477AD 		beq	.L1051
1313:src/keys.c    **** 		return op_map[c - K10][f];
 7476              		.loc 1 1313 2 is_stmt 1 view .LVU2381
1313:src/keys.c    **** 		return op_map[c - K10][f];
 7477              		.loc 1 1313 15 is_stmt 0 view .LVU2382
 7478 0af0 A31F     		subs	r3, r4, #6
1313:src/keys.c    **** 		return op_map[c - K10][f];
 7479              		.loc 1 1313 5 view .LVU2383
 7480 0af2 DAB2     		uxtb	r2, r3
 7481 0af4 022A     		cmp	r2, #2
 7482 0af6 40F2F180 		bls	.L1110
1316:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7483              		.loc 1 1316 2 is_stmt 1 view .LVU2384
1316:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7484              		.loc 1 1316 15 is_stmt 0 view .LVU2385
 7485 0afa 0E3C     		subs	r4, r4, #14
 7486              	.LVL589:
1316:src/keys.c    **** 		set_smode(disp[c - K22][f]);
 7487              		.loc 1 1316 5 view .LVU2386
 7488 0afc E3B2     		uxtb	r3, r4
 7489 0afe 012B     		cmp	r3, #1
 7490 0b00 3FF66DAD 		bhi	.L1051
1317:src/keys.c    **** 
 7491              		.loc 1 1317 3 is_stmt 1 view .LVU2387
 7492 0b04 454B     		ldr	r3, .L1137+16
 7493              	.LBB1004:
 7494              	.LBB1005:
 665:src/keys.c    **** }
 7495              		.loc 1 665 15 is_stmt 0 view .LVU2388
 7496 0b06 727C     		ldrb	r2, [r6, #17]	@ zero_extendqisi2
 7497              	.LBE1005:
 7498              	.LBE1004:
1317:src/keys.c    **** 
 7499              		.loc 1 1317 3 view .LVU2389
 7500 0b08 03EB4404 		add	r4, r3, r4, lsl #1
 7501              	.LVL590:
1319:src/keys.c    **** }
 7502              		.loc 1 1319 9 view .LVU2390
ARM GAS  /tmp/ccJ0w3QJ.s 			page 228


 7503 0b0c 4FF0330B 		mov	fp, #51
 7504              	.LVL591:
1317:src/keys.c    **** 
 7505              		.loc 1 1317 3 view .LVU2391
 7506 0b10 14F80A30 		ldrb	r3, [r4, r10]	@ zero_extendqisi2
 7507              	.LVL592:
 7508              	.LBB1007:
 7509              	.LBI1004:
 664:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 7510              		.loc 1 664 13 is_stmt 1 view .LVU2392
 7511              	.LBB1006:
 665:src/keys.c    **** }
 7512              		.loc 1 665 2 view .LVU2393
 665:src/keys.c    **** }
 7513              		.loc 1 665 15 is_stmt 0 view .LVU2394
 7514 0b14 9A42     		cmp	r2, r3
 7515 0b16 08BF     		it	eq
 7516 0b18 0023     		moveq	r3, #0
 7517              	.LVL593:
 665:src/keys.c    **** }
 7518              		.loc 1 665 15 view .LVU2395
 7519 0b1a 7374     		strb	r3, [r6, #17]
 666:src/keys.c    **** 
 7520              		.loc 1 666 1 view .LVU2396
 7521 0b1c FFF7FEBA 		b	.L552
 7522              	.LVL594:
 7523              	.L1112:
 666:src/keys.c    **** 
 7524              		.loc 1 666 1 view .LVU2397
 7525              	.LBE1006:
 7526              	.LBE1007:
 7527              	.LBE1009:
 7528              	.LBE1012:
 7529              	.LBB1013:
 7530              	.LBB691:
 280:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 7531              		.loc 1 280 74 view .LVU2398
 7532 0b20 7369     		ldr	r3, [r6, #20]
 7533 0b22 3F49     		ldr	r1, .L1137+20
 7534 0b24 0B42     		tst	r3, r1
 7535 0b26 3FD0     		beq	.L640
 283:src/keys.c    ****     /*
 7536              		.loc 1 283 3 is_stmt 1 view .LVU2399
 283:src/keys.c    ****     /*
 7537              		.loc 1 283 23 is_stmt 0 view .LVU2400
 7538 0b28 3E49     		ldr	r1, .L1137+24
 283:src/keys.c    ****     /*
 7539              		.loc 1 283 6 view .LVU2401
 7540 0b2a 0B42     		tst	r3, r1
 7541 0b2c 3FF4F3AB 		beq	.L838
 7542              	.L642:
 7543              	.LBB686:
 352:src/keys.c    ****       { K04, { CATALOGUE_NONE, CATALOGUE_ALPHA_ARROWS,  CATALOGUE_NONE              } },
 7544              		.loc 1 352 5 is_stmt 1 view .LVU2402
 374:src/keys.c    **** 
 7545              		.loc 1 374 5 view .LVU2403
 379:src/keys.c    ****     col = smap[shift];
ARM GAS  /tmp/ccJ0w3QJ.s 			page 229


 7546              		.loc 1 379 5 view .LVU2404
 7547              	.LVL595:
 380:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7548              		.loc 1 380 5 view .LVU2405
 380:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7549              		.loc 1 380 15 is_stmt 0 view .LVU2406
 7550 0b30 3D49     		ldr	r1, .L1137+28
 379:src/keys.c    ****     col = smap[shift];
 7551              		.loc 1 379 8 view .LVU2407
 7552 0b32 3E4B     		ldr	r3, .L1137+32
 380:src/keys.c    ****     max = sizeof(amap) / sizeof(amap[0]);
 7553              		.loc 1 380 9 view .LVU2408
 7554 0b34 11F80AC0 		ldrb	ip, [r1, r10]	@ zero_extendqisi2
 7555              	.LVL596:
 381:src/keys.c    ****   }
 7556              		.loc 1 381 5 is_stmt 1 view .LVU2409
 381:src/keys.c    ****   }
 7557              		.loc 1 381 9 is_stmt 0 view .LVU2410
 7558 0b38 0621     		movs	r1, #6
 7559 0b3a FFF7FBBB 		b	.L645
 7560              	.LVL597:
 7561              	.L1100:
 381:src/keys.c    ****   }
 7562              		.loc 1 381 9 view .LVU2411
 7563              	.LBE686:
 7564              	.LBE691:
 7565              	.LBE1013:
 7566              	.LBB1014:
 7567              	.LBB954:
1356:src/keys.c    **** 	}
 7568              		.loc 1 1356 3 is_stmt 1 view .LVU2412
 7569              	.LBB950:
 7570              	.LBI950:
1325:src/keys.c    **** 	const int val = State2.digval * 10 + n;
 7571              		.loc 1 1325 12 view .LVU2413
 7572              	.LBB951:
1326:src/keys.c    **** 	const int lib = nLIB(state_pc());
 7573              		.loc 1 1326 2 view .LVU2414
1327:src/keys.c    **** 
 7574              		.loc 1 1327 18 is_stmt 0 view .LVU2415
 7575 0b3e 344A     		ldr	r2, .L1137+4
1326:src/keys.c    **** 	const int lib = nLIB(state_pc());
 7576              		.loc 1 1326 24 view .LVU2416
 7577 0b40 3489     		ldrh	r4, [r6, #8]
1327:src/keys.c    **** 
 7578              		.loc 1 1327 18 view .LVU2417
 7579 0b42 1268     		ldr	r2, [r2]
 7580 0b44 B2F8E097 		ldrh	r9, [r2, #2016]
 7581 0b48 4FEA9939 		lsr	r9, r9, #14
1329:src/keys.c    **** 		return val;
 7582              		.loc 1 1329 12 view .LVU2418
 7583 0b4c 4846     		mov	r0, r9
1326:src/keys.c    **** 	const int lib = nLIB(state_pc());
 7584              		.loc 1 1326 32 view .LVU2419
 7585 0b4e 04EB8404 		add	r4, r4, r4, lsl #2
1326:src/keys.c    **** 	const int lib = nLIB(state_pc());
 7586              		.loc 1 1326 12 view .LVU2420
ARM GAS  /tmp/ccJ0w3QJ.s 			page 230


 7587 0b52 03EB4404 		add	r4, r3, r4, lsl #1
 7588              	.LVL598:
1327:src/keys.c    **** 
 7589              		.loc 1 1327 2 is_stmt 1 view .LVU2421
1329:src/keys.c    **** 		return val;
 7590              		.loc 1 1329 2 view .LVU2422
1329:src/keys.c    **** 		return val;
 7591              		.loc 1 1329 12 is_stmt 0 view .LVU2423
 7592 0b56 FFF7FEFF 		bl	sizeLIB
 7593              	.LVL599:
1329:src/keys.c    **** 		return val;
 7594              		.loc 1 1329 25 view .LVU2424
 7595 0b5a 354A     		ldr	r2, .L1137+36
 7596 0b5c 82FB0032 		smull	r3, r2, r2, r0
 7597 0b60 C317     		asrs	r3, r0, #31
 7598 0b62 C3EBA203 		rsb	r3, r3, r2, asr #2
1329:src/keys.c    **** 		return val;
 7599              		.loc 1 1329 5 view .LVU2425
 7600 0b66 9C42     		cmp	r4, r3
 7601 0b68 0CDC     		bgt	.L584
1331:src/keys.c    **** 		return val;
 7602              		.loc 1 1331 2 is_stmt 1 view .LVU2426
1331:src/keys.c    **** 		return val;
 7603              		.loc 1 1331 6 is_stmt 0 view .LVU2427
 7604 0b6a F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
1331:src/keys.c    **** 		return val;
 7605              		.loc 1 1331 29 view .LVU2428
 7606 0b6c 19F0010F 		tst	r9, #1
1331:src/keys.c    **** 		return val;
 7607              		.loc 1 1331 6 view .LVU2429
 7608 0b70 03F10103 		add	r3, r3, #1
 7609 0b74 DBB2     		uxtb	r3, r3
1331:src/keys.c    **** 		return val;
 7610              		.loc 1 1331 29 view .LVU2430
 7611 0b76 0CBF     		ite	eq
 7612 0b78 0322     		moveq	r2, #3
 7613 0b7a 0422     		movne	r2, #4
1331:src/keys.c    **** 		return val;
 7614              		.loc 1 1331 5 view .LVU2431
 7615 0b7c 9342     		cmp	r3, r2
 7616 0b7e F372     		strb	r3, [r6, #11]
 7617 0b80 40F09585 		bne	.L673
 7618              	.LVL600:
 7619              	.L584:
1331:src/keys.c    **** 		return val;
 7620              		.loc 1 1331 5 view .LVU2432
 7621              	.LBE951:
 7622              	.LBE950:
1399:src/keys.c    **** 		rawpc = find_user_pc(pc);
 7623              		.loc 1 1399 2 is_stmt 1 view .LVU2433
1400:src/keys.c    **** fin:		set_pc(rawpc);
 7624              		.loc 1 1400 3 view .LVU2434
1400:src/keys.c    **** fin:		set_pc(rawpc);
 7625              		.loc 1 1400 11 is_stmt 0 view .LVU2435
 7626 0b84 2046     		mov	r0, r4
 7627 0b86 FFF7FEFF 		bl	find_user_pc
 7628              	.LVL601:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 231


1400:src/keys.c    **** fin:		set_pc(rawpc);
 7629              		.loc 1 1400 11 view .LVU2436
 7630 0b8a 36E7     		b	.L589
 7631              	.LVL602:
 7632              	.L876:
1400:src/keys.c    **** fin:		set_pc(rawpc);
 7633              		.loc 1 1400 11 view .LVU2437
 7634              	.LBE954:
 7635              	.LBE1014:
 7636              	.LBE1225:
 7637              	.LBE1285:
 7638              	.LBB1286:
 7639 0b8c C346     		mov	fp, r8
 7640              	.LVL603:
1400:src/keys.c    **** fin:		set_pc(rawpc);
 7641              		.loc 1 1400 11 view .LVU2438
 7642 0b8e FFF7E6BA 		b	.L824
 7643              	.LVL604:
 7644              	.L1082:
1400:src/keys.c    **** fin:		set_pc(rawpc);
 7645              		.loc 1 1400 11 view .LVU2439
 7646              	.LBE1286:
 7647              	.LBB1287:
 7648              	.LBB1226:
 7649              	.LBB1015:
 7650              	.LBB692:
 389:src/keys.c    ****       break;
 7651              		.loc 1 389 7 is_stmt 1 view .LVU2440
 389:src/keys.c    ****       break;
 7652              		.loc 1 389 11 is_stmt 0 view .LVU2441
 7653 0b92 6344     		add	r3, r3, ip
 7654              	.LVL605:
 389:src/keys.c    ****       break;
 7655              		.loc 1 389 11 view .LVU2442
 7656 0b94 93F801B0 		ldrb	fp, [r3, #1]	@ zero_extendqisi2
 7657              	.LVL606:
 390:src/keys.c    ****     }
 7658              		.loc 1 390 7 is_stmt 1 view .LVU2443
 393:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7659              		.loc 1 393 3 view .LVU2444
 393:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7660              		.loc 1 393 6 is_stmt 0 view .LVU2445
 7661 0b98 1307     		lsls	r3, r2, #28
 7662 0b9a 40F19580 		bpl	.L1111
 393:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7663              		.loc 1 393 20 view .LVU2446
 7664 0b9e ABF10B03 		sub	r3, fp, #11
 7665 0ba2 042B     		cmp	r3, #4
 7666 0ba4 3FF6B4AC 		bhi	.L655
 7667              	.LVL607:
 7668              	.L640:
 393:src/keys.c    ****     // Ignore the non character catalogues in multi character mode
 7669              		.loc 1 393 20 view .LVU2447
 7670              	.LBE692:
 7671              	.LBE1015:
2911:src/keys.c    **** 			return STATE_UNFINISHED;
 7672              		.loc 1 2911 3 is_stmt 1 view .LVU2448
ARM GAS  /tmp/ccJ0w3QJ.s 			page 232


2911:src/keys.c    **** 			return STATE_UNFINISHED;
 7673              		.loc 1 2911 7 is_stmt 0 view .LVU2449
 7674 0ba8 FFF7FEFF 		bl	is_bad_cmdline
 7675              	.LVL608:
2911:src/keys.c    **** 			return STATE_UNFINISHED;
 7676              		.loc 1 2911 6 view .LVU2450
 7677 0bac 0446     		mov	r4, r0
 7678 0bae 0028     		cmp	r0, #0
 7679 0bb0 7FF415AD 		bne	.L1051
2913:src/keys.c    **** 		init_cat( cat );
 7680              		.loc 1 2913 3 is_stmt 1 view .LVU2451
 7681 0bb4 FFF7FEFF 		bl	init_cat
 7682              	.LVL609:
2914:src/keys.c    **** 		return STATE_UNFINISHED;
 7683              		.loc 1 2914 3 view .LVU2452
 7684 0bb8 5846     		mov	r0, fp
 7685 0bba FFF7FEFF 		bl	init_cat
 7686              	.LVL610:
2915:src/keys.c    **** 	}
 7687              		.loc 1 2915 3 view .LVU2453
 7688              	.LBE1226:
 7689              	.LBE1287:
2976:src/keys.c    **** #ifdef DM42
 7690              		.loc 1 2976 7 is_stmt 0 view .LVU2454
 7691 0bbe A046     		mov	r8, r4
 7692              	.LBB1288:
 7693              	.LBB1227:
2915:src/keys.c    **** 	}
 7694              		.loc 1 2915 10 view .LVU2455
 7695 0bc0 4FF0330B 		mov	fp, #51
 7696 0bc4 FFF7AABA 		b	.L552
 7697              	.LVL611:
 7698              	.L1080:
 7699              	.LBB1016:
 7700              	.LBB693:
 280:src/keys.c    ****     return CATALOGUE_PROGXFCN;
 7701              		.loc 1 280 16 view .LVU2456
 7702 0bc8 BAF1030F 		cmp	r10, #3
 7703 0bcc A8D0     		beq	.L1112
 283:src/keys.c    ****     /*
 7704              		.loc 1 283 3 is_stmt 1 view .LVU2457
 283:src/keys.c    ****     /*
 7705              		.loc 1 283 23 is_stmt 0 view .LVU2458
 7706 0bce 1549     		ldr	r1, .L1137+24
 7707 0bd0 7369     		ldr	r3, [r6, #20]
 283:src/keys.c    ****     /*
 7708              		.loc 1 283 6 view .LVU2459
 7709 0bd2 1942     		tst	r1, r3
 7710 0bd4 3FF4BAAB 		beq	.L650
 7711 0bd8 AAE7     		b	.L642
 7712              	.LVL612:
 7713              	.L609:
 283:src/keys.c    ****     /*
 7714              		.loc 1 283 6 view .LVU2460
 7715              	.LBE693:
 7716              	.LBE1016:
 7717              	.LBB1017:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 233


 7718              	.LBB939:
1930:src/keys.c    **** 		// Special 0
 7719              		.loc 1 1930 7 is_stmt 1 view .LVU2461
1930:src/keys.c    **** 		// Special 0
 7720              		.loc 1 1930 10 is_stmt 0 view .LVU2462
 7721 0bda 0028     		cmp	r0, #0
 7722 0bdc 40F08480 		bne	.L612
1932:src/keys.c    **** 	}
 7723              		.loc 1 1932 3 is_stmt 1 view .LVU2463
1932:src/keys.c    **** 	}
 7724              		.loc 1 1932 18 is_stmt 0 view .LVU2464
 7725 0be0 BEF1000F 		cmp	lr, #0
 7726 0be4 14BF     		ite	ne
 7727 0be6 2523     		movne	r3, #37
 7728 0be8 1723     		moveq	r3, #23
1932:src/keys.c    **** 	}
 7729              		.loc 1 1932 47 view .LVU2465
 7730 0bea 9B44     		add	fp, fp, r3
 7731              	.LVL613:
1932:src/keys.c    **** 	}
 7732              		.loc 1 1932 47 view .LVU2466
 7733 0bec D4E4     		b	.L581
 7734              	.LVL614:
 7735              	.L614:
1938:src/keys.c    **** 		// digit 2..9, -> or .
 7736              		.loc 1 1938 7 is_stmt 1 view .LVU2467
1938:src/keys.c    **** 		// digit 2..9, -> or .
 7737              		.loc 1 1938 10 is_stmt 0 view .LVU2468
 7738 0bee 0928     		cmp	r0, #9
 7739 0bf0 3FF6C0AE 		bhi	.L608
 7740              	.L617:
1940:src/keys.c    **** 		return process_arg(c);
 7741              		.loc 1 1940 3 is_stmt 1 view .LVU2469
 7742              	.LVL615:
 7743              	.LBB936:
 7744              	.LBI936:
 519:src/keys.c    **** 	if (is_bad_cmdline())
 7745              		.loc 1 519 13 view .LVU2470
 7746              	.LBB937:
 520:src/keys.c    **** 		return;
 7747              		.loc 1 520 2 view .LVU2471
 520:src/keys.c    **** 		return;
 7748              		.loc 1 520 6 is_stmt 0 view .LVU2472
 7749 0bf4 FFF7FEFF 		bl	is_bad_cmdline
 7750              	.LVL616:
 520:src/keys.c    **** 		return;
 7751              		.loc 1 520 5 view .LVU2473
 7752 0bf8 18B9     		cbnz	r0, .L619
 7753 0bfa 5FFA8AF0 		uxtb	r0, r10
 7754 0bfe FFF7FEFF 		bl	init_arg.part.0
 7755              	.LVL617:
 7756              	.L619:
 520:src/keys.c    **** 		return;
 7757              		.loc 1 520 5 view .LVU2474
 7758              	.LBE937:
 7759              	.LBE936:
1941:src/keys.c    **** 	}
ARM GAS  /tmp/ccJ0w3QJ.s 			page 234


 7760              		.loc 1 1941 3 is_stmt 1 view .LVU2475
1941:src/keys.c    **** 	}
 7761              		.loc 1 1941 10 is_stmt 0 view .LVU2476
 7762 0c02 2046     		mov	r0, r4
 7763 0c04 FFF7FEFF 		bl	process_arg
 7764              	.LVL618:
 7765 0c08 8346     		mov	fp, r0
 7766              	.LVL619:
1941:src/keys.c    **** 	}
 7767              		.loc 1 1941 10 view .LVU2477
 7768 0c0a C5E4     		b	.L581
 7769              	.L1138:
 7770              		.align	2
 7771              	.L1137:
 7772 0c0c 00000000 		.word	StateWhileOn
 7773 0c10 00000000 		.word	main_ram
 7774 0c14 00000000 		.word	.LANCHOR1
 7775 0c18 00000000 		.word	.LANCHOR0
 7776 0c1c 00000000 		.word	.LANCHOR15
 7777 0c20 000A4000 		.word	4196864
 7778 0c24 00080800 		.word	526336
 7779 0c28 00000000 		.word	.LANCHOR16
 7780 0c2c 00000000 		.word	.LANCHOR10
 7781 0c30 67666666 		.word	1717986919
 7782              	.LVL620:
 7783              	.L1076:
1941:src/keys.c    **** 	}
 7784              		.loc 1 1941 10 view .LVU2478
 7785              	.LBE939:
 7786              	.LBE1017:
2885:src/keys.c    **** 		return STATE_UNFINISHED;
 7787              		.loc 1 2885 3 is_stmt 1 view .LVU2479
 7788              	.LBB1018:
 7789              	.LBI1018:
 109:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 7790              		.loc 1 109 13 view .LVU2480
 7791              	.LBB1019:
 110:src/keys.c    **** }
 7792              		.loc 1 110 2 view .LVU2481
 110:src/keys.c    **** }
 7793              		.loc 1 110 16 is_stmt 0 view .LVU2482
 7794 0c34 337C     		ldrb	r3, [r6, #16]	@ zero_extendqisi2
 7795 0c36 013B     		subs	r3, r3, #1
 7796 0c38 18BF     		it	ne
 7797 0c3a 0123     		movne	r3, #1
 7798 0c3c 3374     		strb	r3, [r6, #16]
 7799              	.LVL621:
 110:src/keys.c    **** }
 7800              		.loc 1 110 16 view .LVU2483
 7801              	.LBE1019:
 7802              	.LBE1018:
2886:src/keys.c    **** 	}
 7803              		.loc 1 2886 3 is_stmt 1 view .LVU2484
2886:src/keys.c    **** 	}
 7804              		.loc 1 2886 10 is_stmt 0 view .LVU2485
 7805 0c3e 4FF0330B 		mov	fp, #51
 7806 0c42 FFF76BBA 		b	.L552
ARM GAS  /tmp/ccJ0w3QJ.s 			page 235


 7807              	.LVL622:
 7808              	.L599:
 7809              	.LBB1020:
 7810              	.LBB735:
1274:src/keys.c    **** 		// fall trough
 7811              		.loc 1 1274 3 is_stmt 1 view .LVU2486
1274:src/keys.c    **** 		// fall trough
 7812              		.loc 1 1274 10 is_stmt 0 view .LVU2487
 7813 0c46 A4F12909 		sub	r9, r4, #41
 7814              	.LVL623:
1274:src/keys.c    **** 		// fall trough
 7815              		.loc 1 1274 10 view .LVU2488
 7816 0c4a B9FA89F9 		clz	r9, r9
 7817 0c4e 4FEA5919 		lsr	r9, r9, #5
 7818              	.LVL624:
1274:src/keys.c    **** 		// fall trough
 7819              		.loc 1 1274 10 view .LVU2489
 7820 0c52 E7E6     		b	.L604
 7821              	.LVL625:
 7822              	.L1077:
1274:src/keys.c    **** 		// fall trough
 7823              		.loc 1 1274 10 view .LVU2490
 7824              	.LBE735:
 7825              	.LBE1020:
2889:src/keys.c    **** 		return STATE_UNFINISHED;
 7826              		.loc 1 2889 3 is_stmt 1 view .LVU2491
 7827              	.LBB1021:
 7828              	.LBI1021:
 109:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 7829              		.loc 1 109 13 view .LVU2492
 7830              	.LBB1022:
 110:src/keys.c    **** }
 7831              		.loc 1 110 2 view .LVU2493
 110:src/keys.c    **** }
 7832              		.loc 1 110 16 is_stmt 0 view .LVU2494
 7833 0c54 327C     		ldrb	r2, [r6, #16]	@ zero_extendqisi2
 7834 0c56 022A     		cmp	r2, #2
 7835 0c58 18BF     		it	ne
 7836 0c5a 0223     		movne	r3, #2
 7837 0c5c 3374     		strb	r3, [r6, #16]
 7838              	.LVL626:
 110:src/keys.c    **** }
 7839              		.loc 1 110 16 view .LVU2495
 7840              	.LBE1022:
 7841              	.LBE1021:
2890:src/keys.c    **** 	}
 7842              		.loc 1 2890 3 is_stmt 1 view .LVU2496
2890:src/keys.c    **** 	}
 7843              		.loc 1 2890 10 is_stmt 0 view .LVU2497
 7844 0c5e 4FF0330B 		mov	fp, #51
 7845 0c62 FFF75BBA 		b	.L552
 7846              	.LVL627:
 7847              	.L1091:
2890:src/keys.c    **** 	}
 7848              		.loc 1 2890 10 view .LVU2498
 7849              	.LBE1227:
 7850              	.LBE1288:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 236


3197:src/keys.c    **** 	NonProgrammable = 0;
 7851              		.loc 1 3197 26 view .LVU2499
 7852 0c66 CC4A     		ldr	r2, .L1139
 7853 0c68 1168     		ldr	r1, [r2]
 7854 0c6a 0029     		cmp	r1, #0
 7855 0c6c 3FF4BFAD 		beq	.L821
 7856              	.LVL628:
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 7857              		.loc 1 3198 2 is_stmt 1 view .LVU2500
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 7858              		.loc 1 3198 18 is_stmt 0 view .LVU2501
 7859 0c70 1360     		str	r3, [r2]
3199:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 7860              		.loc 1 3199 2 is_stmt 1 view .LVU2502
 7861 0c72 09E4     		b	.L816
 7862              	.LVL629:
 7863              	.L1078:
 7864              	.LBB1289:
 7865              	.LBB1228:
2893:src/keys.c    **** 		State2.arrow = 0;
 7866              		.loc 1 2893 3 view .LVU2503
 7867              	.LBB1023:
 7868              	.LBI1023:
 109:src/keys.c    **** 	State2.shifts = State2.shifts == shift ? SHIFT_N : shift;
 7869              		.loc 1 109 13 view .LVU2504
 7870              	.LBB1024:
 110:src/keys.c    **** }
 7871              		.loc 1 110 2 view .LVU2505
 110:src/keys.c    **** }
 7872              		.loc 1 110 16 is_stmt 0 view .LVU2506
 7873 0c74 307C     		ldrb	r0, [r6, #16]	@ zero_extendqisi2
 7874 0c76 0328     		cmp	r0, #3
 7875              	.LBE1024:
 7876              	.LBE1023:
2894:src/keys.c    **** 		return STATE_UNFINISHED;
 7877              		.loc 1 2894 16 view .LVU2507
 7878 0c78 61F38202 		bfi	r2, r1, #2, #1
 7879              	.LBB1027:
 7880              	.LBB1025:
 110:src/keys.c    **** }
 7881              		.loc 1 110 16 view .LVU2508
 7882 0c7c 18BF     		it	ne
 7883 0c7e 0323     		movne	r3, #3
 7884              	.LBE1025:
 7885              	.LBE1027:
2894:src/keys.c    **** 		return STATE_UNFINISHED;
 7886              		.loc 1 2894 16 view .LVU2509
 7887 0c80 7275     		strb	r2, [r6, #21]
 7888              	.LBB1028:
 7889              	.LBB1026:
 110:src/keys.c    **** }
 7890              		.loc 1 110 16 view .LVU2510
 7891 0c82 3374     		strb	r3, [r6, #16]
 7892              	.LVL630:
 110:src/keys.c    **** }
 7893              		.loc 1 110 16 view .LVU2511
 7894              	.LBE1026:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 237


 7895              	.LBE1028:
2894:src/keys.c    **** 		return STATE_UNFINISHED;
 7896              		.loc 1 2894 3 is_stmt 1 view .LVU2512
2895:src/keys.c    **** 	}
 7897              		.loc 1 2895 3 view .LVU2513
2895:src/keys.c    **** 	}
 7898              		.loc 1 2895 10 is_stmt 0 view .LVU2514
 7899 0c84 4FF0330B 		mov	fp, #51
 7900 0c88 FFF748BA 		b	.L552
 7901              	.LVL631:
 7902              	.L1103:
 7903              	.LBB1029:
 7904              	.LBB955:
1370:src/keys.c    **** 	}
 7905              		.loc 1 1370 3 is_stmt 1 view .LVU2515
1370:src/keys.c    **** 	}
 7906              		.loc 1 1370 6 is_stmt 0 view .LVU2516
 7907 0c8c 3489     		ldrh	r4, [r6, #8]
 7908              	.LVL632:
1370:src/keys.c    **** 	}
 7909              		.loc 1 1370 6 view .LVU2517
 7910 0c8e 79E7     		b	.L584
 7911              	.LVL633:
 7912              	.L1106:
1370:src/keys.c    **** 	}
 7913              		.loc 1 1370 6 view .LVU2518
 7914              	.LBE955:
 7915              	.LBE1029:
 7916              	.LBB1030:
 7917              	.LBB977:
2486:src/keys.c    **** 			n = max;
 7918              		.loc 1 2486 3 is_stmt 1 view .LVU2519
2486:src/keys.c    **** 			n = max;
 7919              		.loc 1 2486 6 is_stmt 0 view .LVU2520
 7920 0c90 191F     		subs	r1, r3, #4
 7921              	.LVL634:
2486:src/keys.c    **** 			n = max;
 7922              		.loc 1 2486 6 view .LVU2521
 7923 0c92 012B     		cmp	r3, #1
 7924 0c94 18BF     		it	ne
 7925 0c96 0A46     		movne	r2, r1
 7926              	.LVL635:
2486:src/keys.c    **** 			n = max;
 7927              		.loc 1 2486 6 view .LVU2522
 7928 0c98 08E7     		b	.L625
 7929              	.LVL636:
 7930              	.L1101:
2486:src/keys.c    **** 			n = max;
 7931              		.loc 1 2486 6 view .LVU2523
 7932              	.LBE977:
 7933              	.LBE1030:
 7934              	.LBB1031:
 7935              	.LBB956:
1360:src/keys.c    **** 		goto fin;
 7936              		.loc 1 1360 3 is_stmt 1 view .LVU2524
 7937              	.LBB952:
 7938              	.LBI952:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 238


1337:src/keys.c    **** 	const int code = 100 + n;
 7939              		.loc 1 1337 12 view .LVU2525
 7940              	.LBB953:
1338:src/keys.c    **** 	unsigned int pc = state_pc();
 7941              		.loc 1 1338 2 view .LVU2526
1339:src/keys.c    **** 
 7942              		.loc 1 1339 2 view .LVU2527
1339:src/keys.c    **** 
 7943              		.loc 1 1339 20 is_stmt 0 view .LVU2528
 7944 0c9a DFF80093 		ldr	r9, .L1139+4
 7945 0c9e D9F80030 		ldr	r3, [r9]
 7946              	.LVL637:
1339:src/keys.c    **** 
 7947              		.loc 1 1339 15 view .LVU2529
 7948 0ca2 B3F8E007 		ldrh	r0, [r3, #2016]
 7949              	.LVL638:
1341:src/keys.c    **** 		pc = 1;
 7950              		.loc 1 1341 2 is_stmt 1 view .LVU2530
1341:src/keys.c    **** 		pc = 1;
 7951              		.loc 1 1341 5 is_stmt 0 view .LVU2531
 7952 0ca6 830B     		lsrs	r3, r0, #14
1342:src/keys.c    **** 	pc = find_label_from(pc, code, FIND_OP_ERROR | FIND_OP_ENDS);
 7953              		.loc 1 1342 6 view .LVU2532
 7954 0ca8 032B     		cmp	r3, #3
 7955              	.LVL639:
1343:src/keys.c    **** 	if (pc > 0)
 7956              		.loc 1 1343 2 is_stmt 1 view .LVU2533
1343:src/keys.c    **** 	if (pc > 0)
 7957              		.loc 1 1343 7 is_stmt 0 view .LVU2534
 7958 0caa 08BF     		it	eq
 7959 0cac 0120     		moveq	r0, #1
 7960              	.LVL640:
1343:src/keys.c    **** 	if (pc > 0)
 7961              		.loc 1 1343 7 view .LVU2535
 7962 0cae 04F16401 		add	r1, r4, #100
 7963              	.LVL641:
1343:src/keys.c    **** 	if (pc > 0)
 7964              		.loc 1 1343 7 view .LVU2536
 7965 0cb2 0322     		movs	r2, #3
 7966              	.LVL642:
1343:src/keys.c    **** 	if (pc > 0)
 7967              		.loc 1 1343 7 view .LVU2537
 7968 0cb4 FFF7FEFF 		bl	find_label_from
 7969              	.LVL643:
1344:src/keys.c    **** 		return pc;
 7970              		.loc 1 1344 2 is_stmt 1 view .LVU2538
1344:src/keys.c    **** 		return pc;
 7971              		.loc 1 1344 5 is_stmt 0 view .LVU2539
 7972 0cb8 0028     		cmp	r0, #0
 7973 0cba 7FF49EAE 		bne	.L589
1346:src/keys.c    **** }
 7974              		.loc 1 1346 2 is_stmt 1 view .LVU2540
1346:src/keys.c    **** }
 7975              		.loc 1 1346 9 is_stmt 0 view .LVU2541
 7976 0cbe D9F80030 		ldr	r3, [r9]
 7977 0cc2 B3F8E007 		ldrh	r0, [r3, #2016]
 7978              	.LVL644:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 239


1346:src/keys.c    **** }
 7979              		.loc 1 1346 9 view .LVU2542
 7980              	.LBE953:
 7981              	.LBE952:
1361:src/keys.c    **** 	}
 7982              		.loc 1 1361 3 is_stmt 1 view .LVU2543
 7983 0cc6 98E6     		b	.L589
 7984              	.LVL645:
 7985              	.L1111:
1361:src/keys.c    **** 	}
 7986              		.loc 1 1361 3 is_stmt 0 view .LVU2544
 7987              	.LBE956:
 7988              	.LBE1031:
2910:src/keys.c    **** 		if (is_bad_cmdline())
 7989              		.loc 1 2910 2 is_stmt 1 view .LVU2545
2910:src/keys.c    **** 		if (is_bad_cmdline())
 7990              		.loc 1 2910 5 is_stmt 0 view .LVU2546
 7991 0cc8 BBF1000F 		cmp	fp, #0
 7992 0ccc 7FF46CAF 		bne	.L640
 7993 0cd0 FFF73FBB 		b	.L654
 7994              	.LVL646:
 7995              	.L1102:
 7996              	.LBB1032:
 7997              	.LBB957:
1365:src/keys.c    **** 		goto fin;
 7998              		.loc 1 1365 3 is_stmt 1 view .LVU2547
1365:src/keys.c    **** 		goto fin;
 7999              		.loc 1 1365 11 is_stmt 0 view .LVU2548
 8000 0cd4 B14B     		ldr	r3, .L1139+4
 8001              	.LVL647:
1365:src/keys.c    **** 		goto fin;
 8002              		.loc 1 1365 11 view .LVU2549
 8003 0cd6 1B68     		ldr	r3, [r3]
1365:src/keys.c    **** 		goto fin;
 8004              		.loc 1 1365 9 view .LVU2550
 8005 0cd8 5888     		ldrh	r0, [r3, #2]
 8006              	.LVL648:
1366:src/keys.c    **** 	}
 8007              		.loc 1 1366 3 is_stmt 1 view .LVU2551
 8008 0cda 8EE6     		b	.L589
 8009              	.LVL649:
 8010              	.L1110:
1366:src/keys.c    **** 	}
 8011              		.loc 1 1366 3 is_stmt 0 view .LVU2552
 8012              	.LBE957:
 8013              	.LBE1032:
 8014              	.LBB1033:
 8015              	.LBB1010:
1314:src/keys.c    **** 
 8016              		.loc 1 1314 3 is_stmt 1 view .LVU2553
1314:src/keys.c    **** 
 8017              		.loc 1 1314 25 is_stmt 0 view .LVU2554
 8018 0cdc B04A     		ldr	r2, .L1139+8
 8019 0cde 0AEB4303 		add	r3, r10, r3, lsl #1
 8020 0ce2 32F813B0 		ldrh	fp, [r2, r3, lsl #1]
 8021              	.LVL650:
1314:src/keys.c    **** 
ARM GAS  /tmp/ccJ0w3QJ.s 			page 240


 8022              		.loc 1 1314 25 view .LVU2555
 8023 0ce6 57E4     		b	.L581
 8024              	.LVL651:
 8025              	.L612:
1314:src/keys.c    **** 
 8026              		.loc 1 1314 25 view .LVU2556
 8027              	.LBE1010:
 8028              	.LBE1033:
 8029              	.LBB1034:
 8030              	.LBB940:
1934:src/keys.c    **** 		// Special 1
 8031              		.loc 1 1934 7 is_stmt 1 view .LVU2557
1934:src/keys.c    **** 		// Special 1
 8032              		.loc 1 1934 10 is_stmt 0 view .LVU2558
 8033 0ce8 0128     		cmp	r0, #1
 8034 0cea 80D1     		bne	.L614
1936:src/keys.c    **** 	}
 8035              		.loc 1 1936 3 is_stmt 1 view .LVU2559
1936:src/keys.c    **** 	}
 8036              		.loc 1 1936 18 is_stmt 0 view .LVU2560
 8037 0cec BEF1000F 		cmp	lr, #0
 8038 0cf0 3FF4B5AE 		beq	.L835
 8039              	.L615:
1936:src/keys.c    **** 	}
 8040              		.loc 1 1936 18 view .LVU2561
 8041 0cf4 2723     		movs	r3, #39
1936:src/keys.c    **** 	}
 8042              		.loc 1 1936 47 view .LVU2562
 8043 0cf6 9B44     		add	fp, fp, r3
 8044              	.LVL652:
1936:src/keys.c    **** 	}
 8045              		.loc 1 1936 47 view .LVU2563
 8046 0cf8 4EE4     		b	.L581
 8047              	.LVL653:
 8048              	.L1104:
1936:src/keys.c    **** 	}
 8049              		.loc 1 1936 47 view .LVU2564
 8050              	.LBE940:
 8051              	.LBE1034:
 8052              	.LBB1035:
 8053              	.LBB958:
1374:src/keys.c    **** 			goto fin2;
 8054              		.loc 1 1374 3 is_stmt 1 view .LVU2565
1374:src/keys.c    **** 			goto fin2;
 8055              		.loc 1 1374 13 is_stmt 0 view .LVU2566
 8056 0cfa F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
 8057              	.LVL654:
1374:src/keys.c    **** 			goto fin2;
 8058              		.loc 1 1374 6 view .LVU2567
 8059 0cfc 002B     		cmp	r3, #0
 8060 0cfe 3FF47EAE 		beq	.L593
1377:src/keys.c    **** 			State2.digval /= 10;
 8061              		.loc 1 1377 4 is_stmt 1 view .LVU2568
1377:src/keys.c    **** 			State2.digval /= 10;
 8062              		.loc 1 1377 19 is_stmt 0 view .LVU2569
 8063 0d02 013B     		subs	r3, r3, #1
 8064 0d04 F372     		strb	r3, [r6, #11]
ARM GAS  /tmp/ccJ0w3QJ.s 			page 241


1378:src/keys.c    **** 		}
 8065              		.loc 1 1378 4 is_stmt 1 view .LVU2570
1378:src/keys.c    **** 		}
 8066              		.loc 1 1378 18 is_stmt 0 view .LVU2571
 8067 0d06 0A22     		movs	r2, #10
 8068              	.LVL655:
1378:src/keys.c    **** 		}
 8069              		.loc 1 1378 18 view .LVU2572
 8070 0d08 3389     		ldrh	r3, [r6, #8]
 8071 0d0a B3FBF2F3 		udiv	r3, r3, r2
 8072              	.LBE958:
 8073              	.LBE1035:
2870:src/keys.c    **** 
 8074              		.loc 1 2870 10 view .LVU2573
 8075 0d0e 4FF0330B 		mov	fp, #51
 8076              	.LBB1036:
 8077              	.LBB959:
1378:src/keys.c    **** 		}
 8078              		.loc 1 1378 18 view .LVU2574
 8079 0d12 3381     		strh	r3, [r6, #8]	@ movhi
1399:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8080              		.loc 1 1399 2 is_stmt 1 view .LVU2575
 8081 0d14 FFF702BA 		b	.L552
 8082              	.LVL656:
 8083              	.L1107:
1399:src/keys.c    **** 		rawpc = find_user_pc(pc);
 8084              		.loc 1 1399 2 is_stmt 0 view .LVU2576
 8085              	.LBE959:
 8086              	.LBE1036:
 8087              	.LBB1037:
 8088              	.LBB978:
2490:src/keys.c    **** 			n = -2;
 8089              		.loc 1 2490 3 is_stmt 1 view .LVU2577
2490:src/keys.c    **** 			n = -2;
 8090              		.loc 1 2490 6 is_stmt 0 view .LVU2578
 8091 0d18 023B     		subs	r3, r3, #2
 8092              	.LVL657:
2491:src/keys.c    **** 	}
 8093              		.loc 1 2491 6 view .LVU2579
 8094 0d1a 9342     		cmp	r3, r2
 8095 0d1c D4BF     		ite	le
 8096 0d1e 1A46     		movle	r2, r3
 8097              	.LVL658:
2491:src/keys.c    **** 	}
 8098              		.loc 1 2491 6 view .LVU2580
 8099 0d20 6FF00102 		mvngt	r2, #1
 8100 0d24 C2E6     		b	.L625
 8101              	.LVL659:
 8102              	.L850:
2491:src/keys.c    **** 	}
 8103              		.loc 1 2491 6 view .LVU2581
 8104              	.LBE978:
 8105              	.LBE1037:
 8106              	.LBB1038:
 8107              	.LBB694:
 8108              	.LBB687:
 339:src/keys.c    **** #ifndef WINGUI
ARM GAS  /tmp/ccJ0w3QJ.s 			page 242


 8109              		.loc 1 339 8 view .LVU2582
 8110 0d26 9F4B     		ldr	r3, .L1139+12
 345:src/keys.c    ****   }
 8111              		.loc 1 345 9 view .LVU2583
 8112 0d28 0C21     		movs	r1, #12
 341:src/keys.c    **** #else
 8113              		.loc 1 341 27 view .LVU2584
 8114 0d2a 4FF0010C 		mov	ip, #1
 8115 0d2e FFF701BB 		b	.L645
 8116              	.LVL660:
 8117              	.L1084:
 341:src/keys.c    **** #else
 8118              		.loc 1 341 27 view .LVU2585
 8119              	.LBE687:
 8120              	.LBE694:
 8121              	.LBE1038:
2925:src/keys.c    **** 
 8122              		.loc 1 2925 3 is_stmt 1 view .LVU2586
 8123              	.LBB1039:
 8124              	.LBI1039:
2560:src/keys.c    **** 	unsigned int pc = State2.digval;
 8125              		.loc 1 2560 12 view .LVU2587
 8126              	.LBB1040:
2561:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 8127              		.loc 1 2561 2 view .LVU2588
2563:src/keys.c    **** 	const int opcode = getprog(pc);
 8128              		.loc 1 2563 27 is_stmt 0 view .LVU2589
 8129 0d32 262C     		cmp	r4, #38
2561:src/keys.c    **** 	const unsigned int n = c == K62 ? REGION_XROM 
 8130              		.loc 1 2561 15 view .LVU2590
 8131 0d34 B6F808A0 		ldrh	r10, [r6, #8]
 8132              	.LVL661:
2562:src/keys.c    **** 		                        : keycode_to_digit_or_register(c) & ~NO_SHORT;
 8133              		.loc 1 2562 2 is_stmt 1 view .LVU2591
2563:src/keys.c    **** 	const int opcode = getprog(pc);
 8134              		.loc 1 2563 27 is_stmt 0 view .LVU2592
 8135 0d38 00F0B882 		beq	.L855
 8136              	.LVL662:
 8137              	.LBB1041:
 8138              	.LBI1041:
 208:src/keys.c    **** {
 8139              		.loc 1 208 14 is_stmt 1 view .LVU2593
 8140              	.LBB1042:
 210:src/keys.c    ****     // K00 - K05
 8141              		.loc 1 210 3 view .LVU2594
 231:src/keys.c    **** }
 8142              		.loc 1 231 3 view .LVU2595
 8143              	.LBB1043:
 8144              	.LBI1043:
 124:src/keys.c    **** {
 8145              		.loc 1 124 12 view .LVU2596
 8146              	.LBB1044:
 126:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8147              		.loc 1 126 2 view .LVU2597
 136:src/keys.c    **** }
 8148              		.loc 1 136 2 view .LVU2598
 136:src/keys.c    **** }
ARM GAS  /tmp/ccJ0w3QJ.s 			page 243


 8149              		.loc 1 136 23 is_stmt 0 view .LVU2599
 8150 0d3c 9A4B     		ldr	r3, .L1139+16
 8151              	.LBE1044:
 8152              	.LBE1043:
 231:src/keys.c    **** }
 8153              		.loc 1 231 28 view .LVU2600
 8154 0d3e 9B4A     		ldr	r2, .L1139+20
 8155              	.LBB1046:
 8156              	.LBB1045:
 136:src/keys.c    **** }
 8157              		.loc 1 136 23 view .LVU2601
 8158 0d40 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 8159              	.LBE1045:
 8160              	.LBE1046:
 231:src/keys.c    **** }
 8161              		.loc 1 231 10 view .LVU2602
 8162 0d42 12F803B0 		ldrb	fp, [r2, r3]	@ zero_extendqisi2
 8163              	.LBE1042:
 8164              	.LBE1041:
2563:src/keys.c    **** 	const int opcode = getprog(pc);
 8165              		.loc 1 2563 27 view .LVU2603
 8166 0d46 2BF0800B 		bic	fp, fp, #128
 8167              	.L669:
 8168              	.LVL663:
2564:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 8169              		.loc 1 2564 2 is_stmt 1 view .LVU2604
2564:src/keys.c    **** 	const int label = isDBL(opcode) ? (getprog(pc) & 0xfffff0ff) : 0;
 8170              		.loc 1 2564 21 is_stmt 0 view .LVU2605
 8171 0d4a 5046     		mov	r0, r10
 8172 0d4c FFF7FEFF 		bl	getprog
 8173              	.LVL664:
2565:src/keys.c    **** 	const int direct = State2.runmode;
 8174              		.loc 1 2565 2 is_stmt 1 view .LVU2606
2565:src/keys.c    **** 	const int direct = State2.runmode;
 8175              		.loc 1 2565 20 is_stmt 0 view .LVU2607
 8176 0d50 00F47040 		and	r0, r0, #61440
 8177              	.LVL665:
2565:src/keys.c    **** 	const int direct = State2.runmode;
 8178              		.loc 1 2565 63 view .LVU2608
 8179 0d54 B0F5704F 		cmp	r0, #61440
 8180 0d58 00F0C284 		beq	.L1113
 8181 0d5c 0023     		movs	r3, #0
 8182              	.L670:
 8183              	.LVL666:
2566:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8184              		.loc 1 2566 2 is_stmt 1 view .LVU2609
2566:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8185              		.loc 1 2566 27 is_stmt 0 view .LVU2610
 8186 0d5e B27D     		ldrb	r2, [r6, #22]	@ zero_extendqisi2
 8187 0d60 0193     		str	r3, [sp, #4]
 8188              	.LVL667:
2566:src/keys.c    **** 	const enum shifts shift = reset_shift();
 8189              		.loc 1 2566 27 view .LVU2611
 8190 0d62 C2F38012 		ubfx	r2, r2, #6, #1
 8191 0d66 0092     		str	r2, [sp]
 8192              	.LVL668:
2567:src/keys.c    **** 	int op = STATE_UNFINISHED;
ARM GAS  /tmp/ccJ0w3QJ.s 			page 244


 8193              		.loc 1 2567 2 is_stmt 1 view .LVU2612
 8194              	.LBB1047:
 8195              	.LBI1047:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 8196              		.loc 1 102 13 view .LVU2613
 8197              	.LBE1047:
 8198              	.LBE1040:
 8199              	.LBE1039:
 8200              	.LBE1228:
 8201              	.LBE1289:
 103:src/keys.c    **** }
 8202              		.loc 1 103 2 view .LVU2614
 8203              	.LBB1290:
 8204              	.LBB1229:
 8205              	.LBB1075:
 8206              	.LBB1068:
 8207              	.LBB1054:
 8208              	.LBB1048:
 8209              	.LBI1048:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 8210              		.loc 1 92 20 view .LVU2615
 8211              	.LBB1049:
  93:src/keys.c    **** 	State2.shifts = shift;
 8212              		.loc 1 93 2 view .LVU2616
 8213              	.LBB1050:
 8214              	.LBI1050:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 8215              		.loc 1 84 13 view .LVU2617
 8216              	.LBB1051:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8217              		.loc 1 85 2 view .LVU2618
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8218              		.loc 1 85 18 is_stmt 0 view .LVU2619
 8219 0d68 FFF7FEFF 		bl	shift_down
 8220              	.LVL669:
  86:src/keys.c    **** }
 8221              		.loc 1 86 2 is_stmt 1 view .LVU2620
  86:src/keys.c    **** }
 8222              		.loc 1 86 52 is_stmt 0 view .LVU2621
 8223 0d6c DDE90023 		ldrd	r2, r3, [sp]
 8224 0d70 00B9     		cbnz	r0, .L671
 8225 0d72 307C     		ldrb	r0, [r6, #16]	@ zero_extendqisi2
 8226              	.LVL670:
 8227              	.L671:
  86:src/keys.c    **** }
 8228              		.loc 1 86 52 view .LVU2622
 8229              	.LBE1051:
 8230              	.LBE1050:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8231              		.loc 1 94 2 is_stmt 1 view .LVU2623
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8232              		.loc 1 94 16 is_stmt 0 view .LVU2624
 8233 0d74 0021     		movs	r1, #0
 8234              	.LBE1049:
 8235              	.LBE1048:
 8236              	.LBE1054:
2570:src/keys.c    **** 		// Digits take you to that segment
ARM GAS  /tmp/ccJ0w3QJ.s 			page 245


 8237              		.loc 1 2570 5 view .LVU2625
 8238 0d76 BBF1020F 		cmp	fp, #2
 8239              	.LBB1055:
 8240              	.LBB1053:
 8241              	.LBB1052:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8242              		.loc 1 94 16 view .LVU2626
 8243 0d7a 3174     		strb	r1, [r6, #16]
  95:src/keys.c    **** 	return r;
 8244              		.loc 1 95 2 is_stmt 1 view .LVU2627
  95:src/keys.c    **** 	return r;
 8245              		.loc 1 95 19 is_stmt 0 view .LVU2628
 8246 0d7c 7173     		strb	r1, [r6, #13]
  96:src/keys.c    **** }
 8247              		.loc 1 96 2 is_stmt 1 view .LVU2629
 8248              	.LVL671:
  96:src/keys.c    **** }
 8249              		.loc 1 96 2 is_stmt 0 view .LVU2630
 8250              	.LBE1052:
 8251              	.LBE1053:
 8252              	.LBE1055:
2568:src/keys.c    **** 
 8253              		.loc 1 2568 2 is_stmt 1 view .LVU2631
2570:src/keys.c    **** 		// Digits take you to that segment
 8254              		.loc 1 2570 2 view .LVU2632
2570:src/keys.c    **** 		// Digits take you to that segment
 8255              		.loc 1 2570 5 is_stmt 0 view .LVU2633
 8256 0d7e 40F28884 		bls	.L1114
2579:src/keys.c    **** 
 8257              		.loc 1 2579 2 is_stmt 1 view .LVU2634
2579:src/keys.c    **** 
 8258              		.loc 1 2579 12 is_stmt 0 view .LVU2635
 8259 0d82 44EA0024 		orr	r4, r4, r0, lsl #8
2579:src/keys.c    **** 
 8260              		.loc 1 2579 2 view .LVU2636
 8261 0d86 272C     		cmp	r4, #39
 8262 0d88 00F3B780 		bgt	.L674
 8263 0d8c 042C     		cmp	r4, #4
 8264 0d8e 7FF726AC 		ble	.L1051
 8265 0d92 053C     		subs	r4, r4, #5
 8266 0d94 222C     		cmp	r4, #34
 8267 0d96 3FF622AC 		bhi	.L1051
 8268 0d9a 01A1     		adr	r1, .L682
 8269 0d9c 51F824F0 		ldr	pc, [r1, r4, lsl #2]
 8270              		.p2align 2
 8271              	.L682:
 8272 0da0 A50E0000 		.word	.L687+1
 8273 0da4 7F0E0000 		.word	.L858+1
 8274 0da8 7F0E0000 		.word	.L858+1
 8275 0dac DF050000 		.word	.L1051+1
 8276 0db0 DF050000 		.word	.L1051+1
 8277 0db4 DF050000 		.word	.L1051+1
 8278 0db8 DF050000 		.word	.L1051+1
 8279 0dbc 3F0E0000 		.word	.L1041+1
 8280 0dc0 DF050000 		.word	.L1051+1
 8281 0dc4 DF050000 		.word	.L1051+1
 8282 0dc8 DF050000 		.word	.L1051+1
ARM GAS  /tmp/ccJ0w3QJ.s 			page 246


 8283 0dcc E70E0000 		.word	.L685+1
 8284 0dd0 DF050000 		.word	.L1051+1
 8285 0dd4 D50E0000 		.word	.L684+1
 8286 0dd8 DF050000 		.word	.L1051+1
 8287 0ddc DF050000 		.word	.L1051+1
 8288 0de0 DF050000 		.word	.L1051+1
 8289 0de4 DF050000 		.word	.L1051+1
 8290 0de8 DF050000 		.word	.L1051+1
 8291 0dec 910E0000 		.word	.L683+1
 8292 0df0 DF050000 		.word	.L1051+1
 8293 0df4 DF050000 		.word	.L1051+1
 8294 0df8 DF050000 		.word	.L1051+1
 8295 0dfc DF050000 		.word	.L1051+1
 8296 0e00 DF050000 		.word	.L1051+1
 8297 0e04 DF050000 		.word	.L1051+1
 8298 0e08 DF050000 		.word	.L1051+1
 8299 0e0c DF050000 		.word	.L1051+1
 8300 0e10 DF050000 		.word	.L1051+1
 8301 0e14 DF050000 		.word	.L1051+1
 8302 0e18 DF050000 		.word	.L1051+1
 8303 0e1c DF050000 		.word	.L1051+1
 8304 0e20 DF050000 		.word	.L1051+1
 8305 0e24 DF050000 		.word	.L1051+1
 8306 0e28 B10E0000 		.word	.L681+1
 8307              		.p2align 1
 8308              	.L688:
 8309 0e2c 40F22733 		movw	r3, #807
 8310 0e30 9C42     		cmp	r4, r3
 8311 0e32 7FF4D4AB 		bne	.L1051
2649:src/keys.c    **** 		goto set_pc_and_exit;
 8312              		.loc 1 2649 3 is_stmt 1 view .LVU2637
2649:src/keys.c    **** 		goto set_pc_and_exit;
 8313              		.loc 1 2649 18 is_stmt 0 view .LVU2638
 8314 0e36 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 8315 0e38 61F38613 		bfi	r3, r1, #6, #1
 8316 0e3c B375     		strb	r3, [r6, #22]
 8317              	.L1041:
2650:src/keys.c    **** 
 8318              		.loc 1 2650 3 is_stmt 1 view .LVU2639
2568:src/keys.c    **** 
 8319              		.loc 1 2568 6 is_stmt 0 view .LVU2640
 8320 0e3e 4FF0330B 		mov	fp, #51
 8321              	.LVL672:
 8322              	.L679:
2601:src/keys.c    **** 		break;
 8323              		.loc 1 2601 3 is_stmt 1 view .LVU2641
 8324 0e42 5046     		mov	r0, r10
 8325              	.LVL673:
2601:src/keys.c    **** 		break;
 8326              		.loc 1 2601 3 is_stmt 0 view .LVU2642
 8327 0e44 FFF7FEFF 		bl	set_pc
 8328              	.LVL674:
2602:src/keys.c    **** 
 8329              		.loc 1 2602 3 is_stmt 1 view .LVU2643
 8330              	.L691:
2655:src/keys.c    **** 	State2.labellist = 0;
 8331              		.loc 1 2655 2 view .LVU2644
ARM GAS  /tmp/ccJ0w3QJ.s 			page 247


2656:src/keys.c    **** 	return check_confirm(op);
 8332              		.loc 1 2656 19 is_stmt 0 view .LVU2645
 8333 0e48 F17D     		ldrb	r1, [r6, #23]	@ zero_extendqisi2
2655:src/keys.c    **** 	State2.labellist = 0;
 8334              		.loc 1 2655 16 view .LVU2646
 8335 0e4a 0022     		movs	r2, #0
 8336              	.LBB1056:
 8337              	.LBB1057:
 638:src/keys.c    **** 		const int nilop = argKIND(op);
 8338              		.loc 1 638 5 view .LVU2647
 8339 0e4c CBF30723 		ubfx	r3, fp, #8, #8
 8340              	.LBE1057:
 8341              	.LBE1056:
2656:src/keys.c    **** 	return check_confirm(op);
 8342              		.loc 1 2656 19 view .LVU2648
 8343 0e50 62F38201 		bfi	r1, r2, #2, #1
 8344              	.LBB1064:
 8345              	.LBB1060:
 638:src/keys.c    **** 		const int nilop = argKIND(op);
 8346              		.loc 1 638 5 view .LVU2649
 8347 0e54 012B     		cmp	r3, #1
 8348              	.LBE1060:
 8349              	.LBE1064:
2656:src/keys.c    **** 	return check_confirm(op);
 8350              		.loc 1 2656 19 view .LVU2650
 8351 0e56 F175     		strb	r1, [r6, #23]
2655:src/keys.c    **** 	State2.labellist = 0;
 8352              		.loc 1 2655 16 view .LVU2651
 8353 0e58 3281     		strh	r2, [r6, #8]	@ movhi
2656:src/keys.c    **** 	return check_confirm(op);
 8354              		.loc 1 2656 2 is_stmt 1 view .LVU2652
2657:src/keys.c    **** }
 8355              		.loc 1 2657 2 view .LVU2653
 8356              	.LVL675:
 8357              	.LBB1065:
 8358              	.LBI1056:
 637:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8359              		.loc 1 637 12 view .LVU2654
 8360              	.LBB1061:
 638:src/keys.c    **** 		const int nilop = argKIND(op);
 8361              		.loc 1 638 2 view .LVU2655
 638:src/keys.c    **** 		const int nilop = argKIND(op);
 8362              		.loc 1 638 5 is_stmt 0 view .LVU2656
 8363 0e5a 7FF49DAB 		bne	.L581
 8364              	.LVL676:
 8365              	.LBB1058:
 8366              	.LBI1058:
 637:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8367              		.loc 1 637 12 is_stmt 1 view .LVU2657
 8368              	.LBB1059:
 639:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 8369              		.loc 1 639 3 view .LVU2658
 640:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 8370              		.loc 1 640 3 view .LVU2659
 639:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 8371              		.loc 1 639 13 is_stmt 0 view .LVU2660
 8372 0e5e 5FFA8BF3 		uxtb	r3, fp
ARM GAS  /tmp/ccJ0w3QJ.s 			page 248


 640:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 8373              		.loc 1 640 25 view .LVU2661
 8374 0e62 413B     		subs	r3, r3, #65
 640:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 8375              		.loc 1 640 6 view .LVU2662
 8376 0e64 032B     		cmp	r3, #3
 8377 0e66 3FF697AB 		bhi	.L581
 8378              	.LVL677:
 8379              	.L1048:
 640:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 8380              		.loc 1 640 6 view .LVU2663
 8381              	.LBE1059:
 8382              	.LBE1058:
 8383              	.LBE1061:
 8384              	.LBE1065:
 8385              	.LBE1068:
 8386              	.LBE1075:
 8387              	.LBB1076:
 8388              	.LBB904:
 8389              	.LBB873:
 8390              	.LBB874:
 8391              	.LBB875:
 8392              	.LBB876:
 641:src/keys.c    **** 			return STATE_UNFINISHED;
 8393              		.loc 1 641 4 is_stmt 1 view .LVU2664
 641:src/keys.c    **** 			return STATE_UNFINISHED;
 8394              		.loc 1 641 19 is_stmt 0 view .LVU2665
 8395 0e6a 337D     		ldrb	r3, [r6, #20]	@ zero_extendqisi2
 641:src/keys.c    **** 			return STATE_UNFINISHED;
 8396              		.loc 1 641 35 view .LVU2666
 8397 0e6c ABF1400B 		sub	fp, fp, #64
 641:src/keys.c    **** 			return STATE_UNFINISHED;
 8398              		.loc 1 641 19 view .LVU2667
 8399 0e70 6BF30203 		bfi	r3, fp, #0, #3
 8400 0e74 3375     		strb	r3, [r6, #20]
 642:src/keys.c    **** 		}
 8401              		.loc 1 642 4 is_stmt 1 view .LVU2668
 642:src/keys.c    **** 		}
 8402              		.loc 1 642 11 is_stmt 0 view .LVU2669
 8403 0e76 4FF0330B 		mov	fp, #51
 8404 0e7a FFF74FB9 		b	.L552
 8405              	.LVL678:
 8406              	.L858:
 642:src/keys.c    **** 		}
 8407              		.loc 1 642 11 view .LVU2670
 8408              	.LBE876:
 8409              	.LBE875:
 8410              	.LBE874:
 8411              	.LBE873:
 8412              	.LBE904:
 8413              	.LBE1076:
 8414              	.LBB1077:
 8415              	.LBB1069:
2614:src/keys.c    **** #endif	    
 8416              		.loc 1 2614 13 view .LVU2671
 8417 0e7e 4FF4807B 		mov	fp, #256
 8418              	.LVL679:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 249


2614:src/keys.c    **** #endif	    
 8419              		.loc 1 2614 13 view .LVU2672
 8420 0e82 DEE7     		b	.L679
 8421              	.LVL680:
 8422              	.L676:
2586:src/keys.c    **** 	case K_DOWN:				// Find next label
 8423              		.loc 1 2586 3 is_stmt 1 view .LVU2673
2586:src/keys.c    **** 	case K_DOWN:				// Find next label
 8424              		.loc 1 2586 8 is_stmt 0 view .LVU2674
 8425 0e84 5046     		mov	r0, r10
 8426              	.LVL681:
2586:src/keys.c    **** 	case K_DOWN:				// Find next label
 8427              		.loc 1 2586 8 view .LVU2675
 8428 0e86 0122     		movs	r2, #1
 8429 0e88 0021     		movs	r1, #0
 8430 0e8a FFF7FEFF 		bl	advance_to_next_label
 8431              	.LVL682:
 8432 0e8e 8246     		mov	r10, r0
 8433              	.LVL683:
 8434              	.L683:
2589:src/keys.c    **** 		return STATE_UNFINISHED;
 8435              		.loc 1 2589 3 is_stmt 1 view .LVU2676
2589:src/keys.c    **** 		return STATE_UNFINISHED;
 8436              		.loc 1 2589 19 is_stmt 0 view .LVU2677
 8437 0e90 5046     		mov	r0, r10
 8438 0e92 0022     		movs	r2, #0
 8439 0e94 0121     		movs	r1, #1
 8440 0e96 FFF7FEFF 		bl	advance_to_next_label
 8441              	.LVL684:
2590:src/keys.c    **** 
 8442              		.loc 1 2590 10 view .LVU2678
 8443 0e9a 4FF0330B 		mov	fp, #51
 8444              	.LVL685:
2589:src/keys.c    **** 		return STATE_UNFINISHED;
 8445              		.loc 1 2589 17 view .LVU2679
 8446 0e9e 3081     		strh	r0, [r6, #8]	@ movhi
2590:src/keys.c    **** 
 8447              		.loc 1 2590 3 is_stmt 1 view .LVU2680
2590:src/keys.c    **** 
 8448              		.loc 1 2590 10 is_stmt 0 view .LVU2681
 8449 0ea0 FFF73CB9 		b	.L552
 8450              	.LVL686:
 8451              	.L687:
 8452              	.L692:
2619:src/keys.c    **** 		goto xeq_or_gto;
 8453              		.loc 1 2619 3 is_stmt 1 view .LVU2682
2619:src/keys.c    **** 		goto xeq_or_gto;
 8454              		.loc 1 2619 6 is_stmt 0 view .LVU2683
 8455 0ea4 03F5007B 		add	fp, r3, #512
 8456              	.LVL687:
2620:src/keys.c    **** 
 8457              		.loc 1 2620 3 is_stmt 1 view .LVU2684
2625:src/keys.c    **** 			break;
 8458              		.loc 1 2625 3 view .LVU2685
2625:src/keys.c    **** 			break;
 8459              		.loc 1 2625 6 is_stmt 0 view .LVU2686
 8460 0ea8 002B     		cmp	r3, #0
ARM GAS  /tmp/ccJ0w3QJ.s 			page 250


 8461 0eaa CDD1     		bne	.L691
 8462 0eac FFF797BB 		b	.L1051
 8463              	.LVL688:
 8464              	.L681:
2641:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8465              		.loc 1 2641 3 is_stmt 1 view .LVU2687
2641:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8466              		.loc 1 2641 6 is_stmt 0 view .LVU2688
 8467 0eb0 002A     		cmp	r2, #0
 8468 0eb2 3FF494AB 		beq	.L1051
2641:src/keys.c    **** 			cmdgtocommon(1, pc);	// set pc and push return address
 8469              		.loc 1 2641 14 view .LVU2689
 8470 0eb6 002B     		cmp	r3, #0
 8471 0eb8 3FF491AB 		beq	.L1051
2642:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
 8472              		.loc 1 2642 4 is_stmt 1 view .LVU2690
 8473 0ebc 5146     		mov	r1, r10
 8474 0ebe 0120     		movs	r0, #1
 8475              	.LVL689:
2642:src/keys.c    **** 			op = STATE_RUNNING;	// quit the browser, start program
 8476              		.loc 1 2642 4 is_stmt 0 view .LVU2691
 8477 0ec0 FFF7FEFF 		bl	cmdgtocommon
 8478              	.LVL690:
2643:src/keys.c    **** 			break;
 8479              		.loc 1 2643 4 is_stmt 1 view .LVU2692
2644:src/keys.c    **** 		}
 8480              		.loc 1 2644 4 view .LVU2693
2655:src/keys.c    **** 	State2.labellist = 0;
 8481              		.loc 1 2655 2 view .LVU2694
2656:src/keys.c    **** 	return check_confirm(op);
 8482              		.loc 1 2656 19 is_stmt 0 view .LVU2695
 8483 0ec4 F27D     		ldrb	r2, [r6, #23]	@ zero_extendqisi2
2655:src/keys.c    **** 	State2.labellist = 0;
 8484              		.loc 1 2655 16 view .LVU2696
 8485 0ec6 0023     		movs	r3, #0
2656:src/keys.c    **** 	return check_confirm(op);
 8486              		.loc 1 2656 19 view .LVU2697
 8487 0ec8 63F38202 		bfi	r2, r3, #2, #1
 8488 0ecc F275     		strb	r2, [r6, #23]
2655:src/keys.c    **** 	State2.labellist = 0;
 8489              		.loc 1 2655 16 view .LVU2698
 8490 0ece 3381     		strh	r3, [r6, #8]	@ movhi
2656:src/keys.c    **** 	return check_confirm(op);
 8491              		.loc 1 2656 2 is_stmt 1 view .LVU2699
2657:src/keys.c    **** }
 8492              		.loc 1 2657 2 view .LVU2700
 8493              	.LVL691:
 8494              	.LBB1066:
 637:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8495              		.loc 1 637 12 view .LVU2701
 8496              	.LBB1062:
 638:src/keys.c    **** 		const int nilop = argKIND(op);
 8497              		.loc 1 638 2 view .LVU2702
 638:src/keys.c    **** 		const int nilop = argKIND(op);
 8498              		.loc 1 638 2 is_stmt 0 view .LVU2703
 8499              	.LBE1062:
 8500              	.LBE1066:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 251


 8501              	.LBE1069:
 8502              	.LBE1077:
 8503              	.LBE1229:
 8504              	.LBE1290:
3161:src/keys.c    ****     case STATE_SST:
 8505              		.loc 1 3161 5 is_stmt 1 view .LVU2704
 8506 0ed0 FFF71EB9 		b	.L561
 8507              	.LVL692:
 8508              	.L684:
 8509              	.LBB1291:
 8510              	.LBB1230:
 8511              	.LBB1078:
 8512              	.LBB1070:
2593:src/keys.c    **** 		return STATE_UNFINISHED;
 8513              		.loc 1 2593 3 view .LVU2705
2593:src/keys.c    **** 		return STATE_UNFINISHED;
 8514              		.loc 1 2593 19 is_stmt 0 view .LVU2706
 8515 0ed4 5046     		mov	r0, r10
 8516              	.LVL693:
2593:src/keys.c    **** 		return STATE_UNFINISHED;
 8517              		.loc 1 2593 19 view .LVU2707
 8518 0ed6 0021     		movs	r1, #0
 8519 0ed8 FFF7FEFF 		bl	advance_to_previous_label
 8520              	.LVL694:
2594:src/keys.c    **** 
 8521              		.loc 1 2594 10 view .LVU2708
 8522 0edc 4FF0330B 		mov	fp, #51
 8523              	.LVL695:
2593:src/keys.c    **** 		return STATE_UNFINISHED;
 8524              		.loc 1 2593 17 view .LVU2709
 8525 0ee0 3081     		strh	r0, [r6, #8]	@ movhi
2594:src/keys.c    **** 
 8526              		.loc 1 2594 3 is_stmt 1 view .LVU2710
2594:src/keys.c    **** 
 8527              		.loc 1 2594 10 is_stmt 0 view .LVU2711
 8528 0ee2 FFF71BB9 		b	.L552
 8529              	.LVL696:
 8530              	.L685:
2655:src/keys.c    **** 	State2.labellist = 0;
 8531              		.loc 1 2655 2 is_stmt 1 view .LVU2712
2656:src/keys.c    **** 	return check_confirm(op);
 8532              		.loc 1 2656 19 is_stmt 0 view .LVU2713
 8533 0ee6 F27D     		ldrb	r2, [r6, #23]	@ zero_extendqisi2
2655:src/keys.c    **** 	State2.labellist = 0;
 8534              		.loc 1 2655 16 view .LVU2714
 8535 0ee8 0023     		movs	r3, #0
2656:src/keys.c    **** 	return check_confirm(op);
 8536              		.loc 1 2656 19 view .LVU2715
 8537 0eea 63F38202 		bfi	r2, r3, #2, #1
 8538 0eee F275     		strb	r2, [r6, #23]
2655:src/keys.c    **** 	State2.labellist = 0;
 8539              		.loc 1 2655 16 view .LVU2716
 8540 0ef0 3381     		strh	r3, [r6, #8]	@ movhi
2656:src/keys.c    **** 	return check_confirm(op);
 8541              		.loc 1 2656 2 is_stmt 1 view .LVU2717
2657:src/keys.c    **** }
 8542              		.loc 1 2657 2 view .LVU2718
ARM GAS  /tmp/ccJ0w3QJ.s 			page 252


 8543              	.LVL697:
 8544              	.LBB1067:
 637:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 8545              		.loc 1 637 12 view .LVU2719
 8546              	.LBB1063:
 638:src/keys.c    **** 		const int nilop = argKIND(op);
 8547              		.loc 1 638 2 view .LVU2720
 638:src/keys.c    **** 		const int nilop = argKIND(op);
 8548              		.loc 1 638 2 is_stmt 0 view .LVU2721
 8549              	.LBE1063:
 8550              	.LBE1067:
 8551              	.LBE1070:
 8552              	.LBE1078:
 8553              	.LBE1230:
 8554              	.LBE1291:
3161:src/keys.c    ****     case STATE_SST:
 8555              		.loc 1 3161 5 is_stmt 1 view .LVU2722
 8556              	.LBB1292:
 8557              	.LBB1231:
 8558              	.LBB1079:
 8559              	.LBB1071:
2568:src/keys.c    **** 
 8560              		.loc 1 2568 6 is_stmt 0 view .LVU2723
 8561 0ef2 4FF0330B 		mov	fp, #51
 8562              	.LVL698:
2568:src/keys.c    **** 
 8563              		.loc 1 2568 6 view .LVU2724
 8564 0ef6 FFF711B9 		b	.L552
 8565              	.LVL699:
 8566              	.L674:
2579:src/keys.c    **** 
 8567              		.loc 1 2579 2 view .LVU2725
 8568 0efa B4F58C7F 		cmp	r4, #280
 8569 0efe 95DC     		bgt	.L688
 8570 0f00 B4F5827F 		cmp	r4, #260
 8571 0f04 7FF76BAB 		ble	.L1051
 8572 0f08 6FF4827C 		mvn	ip, #260
 8573 0f0c 6444     		add	r4, r4, ip
 8574 0f0e 132C     		cmp	r4, #19
 8575 0f10 3FF665AB 		bhi	.L1051
 8576 0f14 01A2     		adr	r2, .L677
 8577 0f16 52F824F0 		ldr	pc, [r2, r4, lsl #2]
 8578 0f1a 00BF     		.p2align 2
 8579              	.L677:
 8580 0f1c 730F0000 		.word	.L680+1
 8581 0f20 DF050000 		.word	.L1051+1
 8582 0f24 DF050000 		.word	.L1051+1
 8583 0f28 DF050000 		.word	.L1051+1
 8584 0f2c DF050000 		.word	.L1051+1
 8585 0f30 DF050000 		.word	.L1051+1
 8586 0f34 DF050000 		.word	.L1051+1
 8587 0f38 DF050000 		.word	.L1051+1
 8588 0f3c DF050000 		.word	.L1051+1
 8589 0f40 DF050000 		.word	.L1051+1
 8590 0f44 DF050000 		.word	.L1051+1
 8591 0f48 6D0F0000 		.word	.L857+1
 8592 0f4c DF050000 		.word	.L1051+1
ARM GAS  /tmp/ccJ0w3QJ.s 			page 253


 8593 0f50 810F0000 		.word	.L678+1
 8594 0f54 DF050000 		.word	.L1051+1
 8595 0f58 DF050000 		.word	.L1051+1
 8596 0f5c DF050000 		.word	.L1051+1
 8597 0f60 DF050000 		.word	.L1051+1
 8598 0f64 DF050000 		.word	.L1051+1
 8599 0f68 850E0000 		.word	.L676+1
 8600              		.p2align 1
 8601              	.L857:
 8602 0f6c 40F2431B 		movw	fp, #323
 8603              	.LVL700:
2579:src/keys.c    **** 
 8604              		.loc 1 2579 2 view .LVU2726
 8605 0f70 67E7     		b	.L679
 8606              	.LVL701:
 8607              	.L680:
2623:src/keys.c    **** 	xeq_or_gto:
 8608              		.loc 1 2623 3 is_stmt 1 view .LVU2727
2623:src/keys.c    **** 	xeq_or_gto:
 8609              		.loc 1 2623 6 is_stmt 0 view .LVU2728
 8610 0f72 03F5407B 		add	fp, r3, #768
 8611              	.LVL702:
2625:src/keys.c    **** 			break;
 8612              		.loc 1 2625 3 is_stmt 1 view .LVU2729
2625:src/keys.c    **** 			break;
 8613              		.loc 1 2625 6 is_stmt 0 view .LVU2730
 8614 0f76 002B     		cmp	r3, #0
 8615 0f78 7FF466AF 		bne	.L691
 8616 0f7c FFF72FBB 		b	.L1051
 8617              	.LVL703:
 8618              	.L678:
2582:src/keys.c    **** 		goto next;
 8619              		.loc 1 2582 3 is_stmt 1 view .LVU2731
2582:src/keys.c    **** 		goto next;
 8620              		.loc 1 2582 8 is_stmt 0 view .LVU2732
 8621 0f80 5046     		mov	r0, r10
 8622              	.LVL704:
2582:src/keys.c    **** 		goto next;
 8623              		.loc 1 2582 8 view .LVU2733
 8624 0f82 0121     		movs	r1, #1
 8625 0f84 FFF7FEFF 		bl	advance_to_previous_label
 8626              	.LVL705:
 8627 0f88 0121     		movs	r1, #1
 8628 0f8a FFF7FEFF 		bl	advance_to_previous_label
 8629              	.LVL706:
 8630 0f8e 8246     		mov	r10, r0
 8631              	.LVL707:
2583:src/keys.c    **** 
 8632              		.loc 1 2583 3 is_stmt 1 view .LVU2734
 8633 0f90 7EE7     		b	.L683
 8634              	.LVL708:
 8635              	.L845:
2583:src/keys.c    **** 
 8636              		.loc 1 2583 3 is_stmt 0 view .LVU2735
 8637              	.LBE1071:
 8638              	.LBE1079:
 8639              	.LBB1080:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 254


 8640              	.LBB979:
 8641              	.LBB973:
2498:src/keys.c    **** 		if (nn <= 9)
 8642              		.loc 1 2498 7 view .LVU2736
 8643 0f92 0A46     		mov	r2, r1
 8644              	.LVL709:
2498:src/keys.c    **** 		if (nn <= 9)
 8645              		.loc 1 2498 7 view .LVU2737
 8646 0f94 8AE5     		b	.L625
 8647              	.L1140:
 8648 0f96 00BF     		.align	2
 8649              	.L1139:
 8650 0f98 00000000 		.word	NonProgrammable
 8651 0f9c 00000000 		.word	main_ram
 8652 0fa0 00000000 		.word	.LANCHOR14
 8653 0fa4 00000000 		.word	.LANCHOR11
 8654 0fa8 00000000 		.word	.LANCHOR1
 8655 0fac 00000000 		.word	.LANCHOR0
 8656              	.LVL710:
 8657              	.L1085:
2498:src/keys.c    **** 		if (nn <= 9)
 8658              		.loc 1 2498 7 view .LVU2738
 8659              	.LBE973:
 8660              	.LBE979:
 8661              	.LBE1080:
2928:src/keys.c    **** 
 8662              		.loc 1 2928 3 is_stmt 1 view .LVU2739
 8663              	.LBB1081:
 8664              	.LBI774:
2691:src/keys.c    **** 	unsigned int n = keycode_to_digit_or_register(c) & ~NO_SHORT;
 8665              		.loc 1 2691 12 view .LVU2740
 8666              	.LBB799:
2692:src/keys.c    **** 	enum shifts shift = reset_shift();
 8667              		.loc 1 2692 2 view .LVU2741
 8668              	.LBB776:
 8669              	.LBI776:
 208:src/keys.c    **** {
 8670              		.loc 1 208 14 view .LVU2742
 8671              	.LBB777:
 210:src/keys.c    ****     // K00 - K05
 8672              		.loc 1 210 3 view .LVU2743
 231:src/keys.c    **** }
 8673              		.loc 1 231 3 view .LVU2744
 8674              	.LBB778:
 8675              	.LBI778:
 124:src/keys.c    **** {
 8676              		.loc 1 124 12 view .LVU2745
 8677              	.LBB779:
 126:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 8678              		.loc 1 126 2 view .LVU2746
 136:src/keys.c    **** }
 8679              		.loc 1 136 2 view .LVU2747
 136:src/keys.c    **** }
 8680              		.loc 1 136 23 is_stmt 0 view .LVU2748
 8681 0fb0 C04B     		ldr	r3, .L1141
 8682              	.LBE779:
 8683              	.LBE778:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 255


 231:src/keys.c    **** }
 8684              		.loc 1 231 28 view .LVU2749
 8685 0fb2 C14A     		ldr	r2, .L1141+4
 8686              	.LBB781:
 8687              	.LBB780:
 136:src/keys.c    **** }
 8688              		.loc 1 136 23 view .LVU2750
 8689 0fb4 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 8690              	.LBE780:
 8691              	.LBE781:
 231:src/keys.c    **** }
 8692              		.loc 1 231 10 view .LVU2751
 8693 0fb6 12F803A0 		ldrb	r10, [r2, r3]	@ zero_extendqisi2
 8694              	.LVL711:
 231:src/keys.c    **** }
 8695              		.loc 1 231 10 view .LVU2752
 8696              	.LBE777:
 8697              	.LBE776:
 8698              	.LBB782:
 8699              	.LBB783:
 8700              	.LBB784:
 8701              	.LBB785:
 8702              	.LBB786:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8703              		.loc 1 85 18 view .LVU2753
 8704 0fba FFF7FEFF 		bl	shift_down
 8705              	.LVL712:
 8706              	.LBE786:
 8707              	.LBE785:
 8708              	.LBE784:
 8709              	.LBE783:
 8710              	.LBE782:
2692:src/keys.c    **** 	enum shifts shift = reset_shift();
 8711              		.loc 1 2692 15 view .LVU2754
 8712 0fbe 2AF0800A 		bic	r10, r10, #128
 8713              	.LVL713:
2693:src/keys.c    **** 	const int max = State2.local ? local_regs() : NUMREG;
 8714              		.loc 1 2693 2 is_stmt 1 view .LVU2755
 8715              	.LBB793:
 8716              	.LBI782:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 8717              		.loc 1 102 13 view .LVU2756
 8718              	.LBE793:
 8719              	.LBE799:
 8720              	.LBE1081:
 8721              	.LBE1231:
 8722              	.LBE1292:
 103:src/keys.c    **** }
 8723              		.loc 1 103 2 view .LVU2757
 8724              	.LBB1293:
 8725              	.LBB1232:
 8726              	.LBB1082:
 8727              	.LBB800:
 8728              	.LBB794:
 8729              	.LBB791:
 8730              	.LBI783:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
ARM GAS  /tmp/ccJ0w3QJ.s 			page 256


 8731              		.loc 1 92 20 view .LVU2758
 8732              	.LBB789:
  93:src/keys.c    **** 	State2.shifts = shift;
 8733              		.loc 1 93 2 view .LVU2759
 8734              	.LBB788:
 8735              	.LBI785:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 8736              		.loc 1 84 13 view .LVU2760
 8737              	.LBB787:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8738              		.loc 1 85 2 view .LVU2761
  86:src/keys.c    **** }
 8739              		.loc 1 86 2 view .LVU2762
  86:src/keys.c    **** }
 8740              		.loc 1 86 52 is_stmt 0 view .LVU2763
 8741 0fc2 0346     		mov	r3, r0
 8742 0fc4 00B9     		cbnz	r0, .L694
 8743 0fc6 337C     		ldrb	r3, [r6, #16]	@ zero_extendqisi2
 8744              	.L694:
 8745              	.LVL714:
  86:src/keys.c    **** }
 8746              		.loc 1 86 52 view .LVU2764
 8747              	.LBE787:
 8748              	.LBE788:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8749              		.loc 1 94 2 is_stmt 1 view .LVU2765
 8750              	.LBE789:
 8751              	.LBE791:
 8752              	.LBE794:
2694:src/keys.c    **** 	const int g_max = global_regs();
 8753              		.loc 1 2694 31 is_stmt 0 view .LVU2766
 8754 0fc8 B17D     		ldrb	r1, [r6, #22]	@ zero_extendqisi2
 8755              	.LBB795:
 8756              	.LBB792:
 8757              	.LBB790:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8758              		.loc 1 94 16 view .LVU2767
 8759 0fca 0022     		movs	r2, #0
 8760 0fcc 3274     		strb	r2, [r6, #16]
  95:src/keys.c    **** 	return r;
 8761              		.loc 1 95 2 is_stmt 1 view .LVU2768
  95:src/keys.c    **** 	return r;
 8762              		.loc 1 95 19 is_stmt 0 view .LVU2769
 8763 0fce 7273     		strb	r2, [r6, #13]
  96:src/keys.c    **** }
 8764              		.loc 1 96 2 is_stmt 1 view .LVU2770
 8765              	.LVL715:
  96:src/keys.c    **** }
 8766              		.loc 1 96 2 is_stmt 0 view .LVU2771
 8767              	.LBE790:
 8768              	.LBE792:
 8769              	.LBE795:
2694:src/keys.c    **** 	const int g_max = global_regs();
 8770              		.loc 1 2694 2 is_stmt 1 view .LVU2772
2694:src/keys.c    **** 	const int g_max = global_regs();
 8771              		.loc 1 2694 46 is_stmt 0 view .LVU2773
 8772 0fd0 CA07     		lsls	r2, r1, #31
ARM GAS  /tmp/ccJ0w3QJ.s 			page 257


 8773 0fd2 00F14D82 		bmi	.L1115
 8774 0fd6 4FF07009 		mov	r9, #112
 8775              	.LVL716:
 8776              	.L695:
2694:src/keys.c    **** 	const int g_max = global_regs();
 8777              		.loc 1 2694 46 view .LVU2774
 8778 0fda 0093     		str	r3, [sp]
 8779              	.LVL717:
2695:src/keys.c    **** 
 8780              		.loc 1 2695 2 is_stmt 1 view .LVU2775
2695:src/keys.c    **** 
 8781              		.loc 1 2695 20 is_stmt 0 view .LVU2776
 8782 0fdc FFF7FEFF 		bl	global_regs
 8783              	.LVL718:
2697:src/keys.c    **** 		if (local_regs())
 8784              		.loc 1 2697 2 is_stmt 1 view .LVU2777
2697:src/keys.c    **** 		if (local_regs())
 8785              		.loc 1 2697 5 is_stmt 0 view .LVU2778
 8786 0fe0 BAF1700F 		cmp	r10, #112
 8787 0fe4 009B     		ldr	r3, [sp]
 8788 0fe6 00F0D783 		beq	.L1116
2703:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 8789              		.loc 1 2703 7 is_stmt 1 view .LVU2779
2703:src/keys.c    **** 		int dv = (State2.digval * 10 + n) % 100;
 8790              		.loc 1 2703 10 is_stmt 0 view .LVU2780
 8791 0fea BAF1090F 		cmp	r10, #9
 8792 0fee 40F27E83 		bls	.L1117
2710:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 8793              		.loc 1 2710 7 is_stmt 1 view .LVU2781
2710:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 8794              		.loc 1 2710 29 is_stmt 0 view .LVU2782
 8795 0ff2 5A1E     		subs	r2, r3, #1
2710:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 8796              		.loc 1 2710 10 view .LVU2783
 8797 0ff4 D2B2     		uxtb	r2, r2
 8798 0ff6 012A     		cmp	r2, #1
 8799 0ff8 40F21482 		bls	.L1118
 8800              	.L703:
2714:src/keys.c    **** 		State2.digval = n;
 8801              		.loc 1 2714 7 is_stmt 1 view .LVU2784
2714:src/keys.c    **** 		State2.digval = n;
 8802              		.loc 1 2714 10 is_stmt 0 view .LVU2785
 8803 0ffc BAF17F0F 		cmp	r10, #127
 8804 1000 40F08B83 		bne	.L1119
2719:src/keys.c    **** 	case K_DOWN:
 8805              		.loc 1 2719 2 is_stmt 1 view .LVU2786
 8806 1004 073C     		subs	r4, r4, #7
 8807 1006 112C     		cmp	r4, #17
 8808 1008 3FF6E9AA 		bhi	.L1051
 8809 100c 01A2     		adr	r2, .L825
 8810 100e 52F824F0 		ldr	pc, [r2, r4, lsl #2]
 8811 1012 00BF     		.p2align 2
 8812              	.L825:
 8813 1014 C5100000 		.word	.L716+1
 8814 1018 DF050000 		.word	.L1051+1
 8815 101c DF050000 		.word	.L1051+1
 8816 1020 DF050000 		.word	.L1051+1
ARM GAS  /tmp/ccJ0w3QJ.s 			page 258


 8817 1024 DF050000 		.word	.L1051+1
 8818 1028 BF100000 		.word	.L715+1
 8819 102c DF050000 		.word	.L1051+1
 8820 1030 DF050000 		.word	.L1051+1
 8821 1034 DF050000 		.word	.L1051+1
 8822 1038 A9100000 		.word	.L713+1
 8823 103c DF050000 		.word	.L1051+1
 8824 1040 83100000 		.word	.L709+1
 8825 1044 DF050000 		.word	.L1051+1
 8826 1048 DF050000 		.word	.L1051+1
 8827 104c DF050000 		.word	.L1051+1
 8828 1050 DF050000 		.word	.L1051+1
 8829 1054 DF050000 		.word	.L1051+1
 8830 1058 5D100000 		.word	.L706+1
 8831              		.p2align 1
 8832              	.L706:
2721:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 8833              		.loc 1 2721 3 view .LVU2787
2721:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 8834              		.loc 1 2721 13 is_stmt 0 view .LVU2788
 8835 105c 3389     		ldrh	r3, [r6, #8]
2721:src/keys.c    **** 			if (! State2.local && State2.digval == TOPREALREG)
 8836              		.loc 1 2721 6 view .LVU2789
 8837 105e 002B     		cmp	r3, #0
 8838 1060 00F06B85 		beq	.L707
2722:src/keys.c    **** 				State2.digval = global_regs();
 8839              		.loc 1 2722 4 is_stmt 1 view .LVU2790
2722:src/keys.c    **** 				State2.digval = global_regs();
 8840              		.loc 1 2722 8 is_stmt 0 view .LVU2791
 8841 1064 B27D     		ldrb	r2, [r6, #22]	@ zero_extendqisi2
2722:src/keys.c    **** 				State2.digval = global_regs();
 8842              		.loc 1 2722 7 view .LVU2792
 8843 1066 D207     		lsls	r2, r2, #31
 8844 1068 02D4     		bmi	.L708
2722:src/keys.c    **** 				State2.digval = global_regs();
 8845              		.loc 1 2722 23 view .LVU2793
 8846 106a 642B     		cmp	r3, #100
 8847 106c 00F06B85 		beq	.L1120
 8848              	.LVL719:
 8849              	.L708:
2724:src/keys.c    **** 		}
 8850              		.loc 1 2724 4 is_stmt 1 view .LVU2794
 8851 1070 3389     		ldrh	r3, [r6, #8]
 8852 1072 013B     		subs	r3, r3, #1
 8853              	.L1042:
2724:src/keys.c    **** 		}
 8854              		.loc 1 2724 4 is_stmt 0 view .LVU2795
 8855 1074 3381     		strh	r3, [r6, #8]	@ movhi
 8856              	.LVL720:
 8857              	.L699:
2776:src/keys.c    **** 	return STATE_UNFINISHED;
 8858              		.loc 1 2776 2 is_stmt 1 view .LVU2796
2776:src/keys.c    **** 	return STATE_UNFINISHED;
 8859              		.loc 1 2776 16 is_stmt 0 view .LVU2797
 8860 1076 337D     		ldrb	r3, [r6, #20]	@ zero_extendqisi2
 8861 1078 6FF3C503 		bfc	r3, #3, #3
 8862 107c 3375     		strb	r3, [r6, #20]
ARM GAS  /tmp/ccJ0w3QJ.s 			page 259


 8863 107e FFF7AEBA 		b	.L1051
 8864              	.LVL721:
 8865              	.L709:
2731:src/keys.c    **** 			State2.digval++;
 8866              		.loc 1 2731 3 is_stmt 1 view .LVU2798
2731:src/keys.c    **** 			State2.digval++;
 8867              		.loc 1 2731 13 is_stmt 0 view .LVU2799
 8868 1082 3389     		ldrh	r3, [r6, #8]
2731:src/keys.c    **** 			State2.digval++;
 8869              		.loc 1 2731 27 view .LVU2800
 8870 1084 09F1FF39 		add	r9, r9, #-1
 8871              	.LVL722:
2731:src/keys.c    **** 			State2.digval++;
 8872              		.loc 1 2731 6 view .LVU2801
 8873 1088 4B45     		cmp	r3, r9
 8874 108a 80F26185 		bge	.L710
2732:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 8875              		.loc 1 2732 4 is_stmt 1 view .LVU2802
2733:src/keys.c    **** 				State2.digval = regX_idx;
 8876              		.loc 1 2733 8 is_stmt 0 view .LVU2803
 8877 108e B27D     		ldrb	r2, [r6, #22]	@ zero_extendqisi2
2732:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 8878              		.loc 1 2732 17 view .LVU2804
 8879 1090 0133     		adds	r3, r3, #1
 8880 1092 9CB2     		uxth	r4, r3
2733:src/keys.c    **** 				State2.digval = regX_idx;
 8881              		.loc 1 2733 7 view .LVU2805
 8882 1094 D307     		lsls	r3, r2, #31
2732:src/keys.c    **** 			if (! State2.local && State2.digval == global_regs())
 8883              		.loc 1 2732 17 view .LVU2806
 8884 1096 3481     		strh	r4, [r6, #8]	@ movhi
2733:src/keys.c    **** 				State2.digval = regX_idx;
 8885              		.loc 1 2733 4 is_stmt 1 view .LVU2807
2733:src/keys.c    **** 				State2.digval = regX_idx;
 8886              		.loc 1 2733 7 is_stmt 0 view .LVU2808
 8887 1098 EDD4     		bmi	.L699
2733:src/keys.c    **** 				State2.digval = regX_idx;
 8888              		.loc 1 2733 43 view .LVU2809
 8889 109a FFF7FEFF 		bl	global_regs
 8890              	.LVL723:
2733:src/keys.c    **** 				State2.digval = regX_idx;
 8891              		.loc 1 2733 23 view .LVU2810
 8892 109e 8442     		cmp	r4, r0
 8893 10a0 E9D1     		bne	.L699
2734:src/keys.c    **** 		}
 8894              		.loc 1 2734 5 is_stmt 1 view .LVU2811
2734:src/keys.c    **** 		}
 8895              		.loc 1 2734 19 is_stmt 0 view .LVU2812
 8896 10a2 6423     		movs	r3, #100
 8897 10a4 3381     		strh	r3, [r6, #8]	@ movhi
 8898 10a6 E6E7     		b	.L699
 8899              	.LVL724:
 8900              	.L713:
2748:src/keys.c    **** 			return STATE_UNFINISHED;
 8901              		.loc 1 2748 3 is_stmt 1 view .LVU2813
2748:src/keys.c    **** 			return STATE_UNFINISHED;
 8902              		.loc 1 2748 7 is_stmt 0 view .LVU2814
ARM GAS  /tmp/ccJ0w3QJ.s 			page 260


 8903 10a8 F37D     		ldrb	r3, [r6, #23]	@ zero_extendqisi2
2748:src/keys.c    **** 			return STATE_UNFINISHED;
 8904              		.loc 1 2748 6 view .LVU2815
 8905 10aa 13F02002 		ands	r2, r3, #32
 8906 10ae 7FF496AA 		bne	.L1051
2750:src/keys.c    **** 
 8907              		.loc 1 2750 3 is_stmt 1 view .LVU2816
2772:src/keys.c    **** 	State2.digval = 0;
 8908              		.loc 1 2772 2 view .LVU2817
2772:src/keys.c    **** 	State2.digval = 0;
 8909              		.loc 1 2772 22 is_stmt 0 view .LVU2818
 8910 10b2 62F3C303 		bfi	r3, r2, #3, #1
 8911 10b6 F375     		strb	r3, [r6, #23]
2773:src/keys.c    **** 	State2.digval2 = 0;
 8912              		.loc 1 2773 2 is_stmt 1 view .LVU2819
2773:src/keys.c    **** 	State2.digval2 = 0;
 8913              		.loc 1 2773 16 is_stmt 0 view .LVU2820
 8914 10b8 3281     		strh	r2, [r6, #8]	@ movhi
2774:src/keys.c    **** reset_window:
 8915              		.loc 1 2774 2 is_stmt 1 view .LVU2821
2774:src/keys.c    **** reset_window:
 8916              		.loc 1 2774 17 is_stmt 0 view .LVU2822
 8917 10ba B272     		strb	r2, [r6, #10]
 8918 10bc DBE7     		b	.L699
 8919              	.L715:
2753:src/keys.c    **** 			State2.disp_as_alpha = 1;
 8920              		.loc 1 2753 3 is_stmt 1 view .LVU2823
2753:src/keys.c    **** 			State2.disp_as_alpha = 1;
 8921              		.loc 1 2753 6 is_stmt 0 view .LVU2824
 8922 10be 012B     		cmp	r3, #1
 8923 10c0 00F04A85 		beq	.L1121
 8924              	.L716:
2758:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 8925              		.loc 1 2758 3 is_stmt 1 view .LVU2825
2758:src/keys.c    **** #ifdef INCLUDE_FLASH_RECALL
 8926              		.loc 1 2758 6 is_stmt 0 view .LVU2826
 8927 10c4 002B     		cmp	r3, #0
 8928 10c6 7FF48AAA 		bne	.L1051
2762:src/keys.c    **** #endif
 8929              		.loc 1 2762 4 is_stmt 1 view .LVU2827
2762:src/keys.c    **** #endif
 8930              		.loc 1 2762 8 is_stmt 0 view .LVU2828
 8931 10ca B6F808B0 		ldrh	fp, [r6, #8]
 8932              	.LVL725:
2764:src/keys.c    **** 			State2.digval = 0;
 8933              		.loc 1 2764 4 is_stmt 1 view .LVU2829
2764:src/keys.c    **** 			State2.digval = 0;
 8934              		.loc 1 2764 24 is_stmt 0 view .LVU2830
 8935 10ce F27D     		ldrb	r2, [r6, #23]	@ zero_extendqisi2
2766:src/keys.c    **** 			return n;
 8936              		.loc 1 2766 19 view .LVU2831
 8937 10d0 B372     		strb	r3, [r6, #10]
2764:src/keys.c    **** 			State2.digval = 0;
 8938              		.loc 1 2764 24 view .LVU2832
 8939 10d2 63F3C302 		bfi	r2, r3, #3, #1
2767:src/keys.c    **** 		}
 8940              		.loc 1 2767 11 view .LVU2833
ARM GAS  /tmp/ccJ0w3QJ.s 			page 261


 8941 10d6 4BF4285B 		orr	fp, fp, #10752
 8942              	.LVL726:
2765:src/keys.c    **** 			State2.digval2 = 0;
 8943              		.loc 1 2765 18 view .LVU2834
 8944 10da 3381     		strh	r3, [r6, #8]	@ movhi
 8945 10dc 5846     		mov	r0, fp
 8946              	.LVL727:
2765:src/keys.c    **** 			State2.digval2 = 0;
 8947              		.loc 1 2765 18 view .LVU2835
 8948 10de B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
2764:src/keys.c    **** 			State2.digval = 0;
 8949              		.loc 1 2764 24 view .LVU2836
 8950 10e0 F275     		strb	r2, [r6, #23]
2765:src/keys.c    **** 			State2.digval2 = 0;
 8951              		.loc 1 2765 4 is_stmt 1 view .LVU2837
2766:src/keys.c    **** 			return n;
 8952              		.loc 1 2766 4 view .LVU2838
2767:src/keys.c    **** 		}
 8953              		.loc 1 2767 4 view .LVU2839
2767:src/keys.c    **** 		}
 8954              		.loc 1 2767 11 is_stmt 0 view .LVU2840
 8955 10e2 FFF7CAB9 		b	.L603
 8956              	.LVL728:
 8957              	.L1086:
2767:src/keys.c    **** 		}
 8958              		.loc 1 2767 11 view .LVU2841
 8959              	.LBE800:
 8960              	.LBE1082:
2931:src/keys.c    **** 
 8961              		.loc 1 2931 3 is_stmt 1 view .LVU2842
 8962              	.LBB1083:
 8963              	.LBI1083:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 8964              		.loc 1 102 13 view .LVU2843
 8965              	.LBE1083:
 8966              	.LBE1232:
 8967              	.LBE1293:
 103:src/keys.c    **** }
 8968              		.loc 1 103 2 view .LVU2844
 8969              	.LBB1294:
 8970              	.LBB1233:
 8971              	.LBB1090:
 8972              	.LBB1084:
 8973              	.LBI1084:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 8974              		.loc 1 92 20 view .LVU2845
 8975              	.LBB1085:
  93:src/keys.c    **** 	State2.shifts = shift;
 8976              		.loc 1 93 2 view .LVU2846
 8977              	.LBB1086:
 8978              	.LBI1086:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 8979              		.loc 1 84 13 view .LVU2847
 8980              	.LBB1087:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 8981              		.loc 1 85 2 view .LVU2848
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
ARM GAS  /tmp/ccJ0w3QJ.s 			page 262


 8982              		.loc 1 85 18 is_stmt 0 view .LVU2849
 8983 10e6 FFF7FEFF 		bl	shift_down
 8984              	.LVL729:
  86:src/keys.c    **** }
 8985              		.loc 1 86 2 is_stmt 1 view .LVU2850
  86:src/keys.c    **** }
 8986              		.loc 1 86 52 is_stmt 0 view .LVU2851
 8987 10ea 0146     		mov	r1, r0
 8988 10ec 00B9     		cbnz	r0, .L718
 8989 10ee 317C     		ldrb	r1, [r6, #16]	@ zero_extendqisi2
 8990              	.L718:
 8991              	.LVL730:
  86:src/keys.c    **** }
 8992              		.loc 1 86 52 view .LVU2852
 8993              	.LBE1087:
 8994              	.LBE1086:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8995              		.loc 1 94 2 is_stmt 1 view .LVU2853
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 8996              		.loc 1 94 16 is_stmt 0 view .LVU2854
 8997 10f0 0022     		movs	r2, #0
 8998              	.LBE1085:
 8999              	.LBE1084:
 9000              	.LBE1090:
2931:src/keys.c    **** 
 9001              		.loc 1 2931 10 view .LVU2855
 9002 10f2 2046     		mov	r0, r4
 9003              	.LBB1091:
 9004              	.LBB1089:
 9005              	.LBB1088:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9006              		.loc 1 94 16 view .LVU2856
 9007 10f4 3274     		strb	r2, [r6, #16]
  95:src/keys.c    **** 	return r;
 9008              		.loc 1 95 2 is_stmt 1 view .LVU2857
  95:src/keys.c    **** 	return r;
 9009              		.loc 1 95 19 is_stmt 0 view .LVU2858
 9010 10f6 7273     		strb	r2, [r6, #13]
  96:src/keys.c    **** }
 9011              		.loc 1 96 2 is_stmt 1 view .LVU2859
 9012              	.LVL731:
  96:src/keys.c    **** }
 9013              		.loc 1 96 2 is_stmt 0 view .LVU2860
 9014              	.LBE1088:
 9015              	.LBE1089:
 9016              	.LBE1091:
2931:src/keys.c    **** 
 9017              		.loc 1 2931 10 view .LVU2861
 9018 10f8 FFF7FEFF 		bl	process_catalogue
 9019              	.LVL732:
2931:src/keys.c    **** 
 9020              		.loc 1 2931 10 view .LVU2862
 9021 10fc 8346     		mov	fp, r0
 9022 10fe FFF74BBA 		b	.L581
 9023              	.L1087:
2935:src/keys.c    **** #else
 9024              		.loc 1 2935 3 is_stmt 1 view .LVU2863
ARM GAS  /tmp/ccJ0w3QJ.s 			page 263


 9025              	.LVL733:
 9026              	.LBB1092:
 9027              	.LBI812:
1412:src/keys.c    **** 	const enum shifts shift = reset_shift();
 9028              		.loc 1 1412 12 view .LVU2864
 9029              	.LBB857:
1413:src/keys.c    **** 	int ch = keycode_to_alpha(c, shift);
 9030              		.loc 1 1413 2 view .LVU2865
 9031              	.LBB814:
 9032              	.LBI814:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 9033              		.loc 1 102 13 view .LVU2866
 9034              	.LBE814:
 9035              	.LBE857:
 9036              	.LBE1092:
 9037              	.LBE1233:
 9038              	.LBE1294:
 103:src/keys.c    **** }
 9039              		.loc 1 103 2 view .LVU2867
 9040              	.LBB1295:
 9041              	.LBB1234:
 9042              	.LBB1093:
 9043              	.LBB858:
 9044              	.LBB823:
 9045              	.LBB815:
 9046              	.LBI815:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 9047              		.loc 1 92 20 view .LVU2868
 9048              	.LBB816:
  93:src/keys.c    **** 	State2.shifts = shift;
 9049              		.loc 1 93 2 view .LVU2869
 9050              	.LBB817:
 9051              	.LBI817:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 9052              		.loc 1 84 13 view .LVU2870
 9053              	.LBB818:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9054              		.loc 1 85 2 view .LVU2871
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9055              		.loc 1 85 18 is_stmt 0 view .LVU2872
 9056 1102 FFF7FEFF 		bl	shift_down
 9057              	.LVL734:
  86:src/keys.c    **** }
 9058              		.loc 1 86 2 is_stmt 1 view .LVU2873
  86:src/keys.c    **** }
 9059              		.loc 1 86 52 is_stmt 0 view .LVU2874
 9060 1106 00B9     		cbnz	r0, .L720
 9061 1108 307C     		ldrb	r0, [r6, #16]	@ zero_extendqisi2
 9062              	.LVL735:
 9063              	.L720:
  86:src/keys.c    **** }
 9064              		.loc 1 86 52 view .LVU2875
 9065              	.LBE818:
 9066              	.LBE817:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9067              		.loc 1 94 2 is_stmt 1 view .LVU2876
 9068              	.LBE816:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 264


 9069              	.LBE815:
 9070              	.LBE823:
 9071              	.LBB824:
 9072              	.LBB825:
 451:src/keys.c    **** 		if (shift == SHIFT_N)
 9073              		.loc 1 451 6 is_stmt 0 view .LVU2877
 9074 110a B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 9075              	.LBE825:
 9076              	.LBE824:
 9077              	.LBB839:
 9078              	.LBB821:
 9079              	.LBB819:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9080              		.loc 1 94 16 view .LVU2878
 9081 110c 0022     		movs	r2, #0
 9082              	.LBE819:
 9083              	.LBE821:
 9084              	.LBE839:
 9085              	.LBB840:
 9086              	.LBB836:
 451:src/keys.c    **** 		if (shift == SHIFT_N)
 9087              		.loc 1 451 5 view .LVU2879
 9088 110e D906     		lsls	r1, r3, #27
 9089              	.LBE836:
 9090              	.LBE840:
 9091              	.LBB841:
 9092              	.LBB822:
 9093              	.LBB820:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9094              		.loc 1 94 16 view .LVU2880
 9095 1110 3274     		strb	r2, [r6, #16]
  95:src/keys.c    **** 	return r;
 9096              		.loc 1 95 2 is_stmt 1 view .LVU2881
  95:src/keys.c    **** 	return r;
 9097              		.loc 1 95 19 is_stmt 0 view .LVU2882
 9098 1112 7273     		strb	r2, [r6, #13]
  96:src/keys.c    **** }
 9099              		.loc 1 96 2 is_stmt 1 view .LVU2883
 9100              	.LVL736:
  96:src/keys.c    **** }
 9101              		.loc 1 96 2 is_stmt 0 view .LVU2884
 9102              	.LBE820:
 9103              	.LBE822:
 9104              	.LBE841:
1414:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos, n;
 9105              		.loc 1 1414 2 is_stmt 1 view .LVU2885
1414:src/keys.c    **** 	unsigned int alpha_pos = State2.alpha_pos, n;
 9106              		.loc 1 1414 11 is_stmt 0 view .LVU2886
 9107 1114 0246     		mov	r2, r0
 9108              	.LVL737:
 9109              	.LBB842:
 9110              	.LBI824:
 401:src/keys.c    **** {
 9111              		.loc 1 401 12 is_stmt 1 view .LVU2887
 9112              	.LBB837:
 403:src/keys.c    **** 		/*upper f-sft g-sft h-sft lower g-lower */
 9113              		.loc 1 403 2 view .LVU2888
ARM GAS  /tmp/ccJ0w3QJ.s 			page 265


 451:src/keys.c    **** 		if (shift == SHIFT_N)
 9114              		.loc 1 451 2 view .LVU2889
 451:src/keys.c    **** 		if (shift == SHIFT_N)
 9115              		.loc 1 451 5 is_stmt 0 view .LVU2890
 9116 1116 40F1DC80 		bpl	.L721
 452:src/keys.c    **** 			shift = SHIFT_LC_N;
 9117              		.loc 1 452 3 is_stmt 1 view .LVU2891
 452:src/keys.c    **** 			shift = SHIFT_LC_N;
 9118              		.loc 1 452 6 is_stmt 0 view .LVU2892
 9119 111a 0028     		cmp	r0, #0
 9120 111c 00F0D880 		beq	.L862
 454:src/keys.c    **** 			shift = SHIFT_LC_G;
 9121              		.loc 1 454 8 is_stmt 1 view .LVU2893
 9122              	.LBB826:
 9123              	.LBB827:
 136:src/keys.c    **** }
 9124              		.loc 1 136 23 is_stmt 0 view .LVU2894
 9125 1120 6449     		ldr	r1, .L1141
 9126              	.LBE827:
 9127              	.LBE826:
 457:src/keys.c    **** }
 9128              		.loc 1 457 49 view .LVU2895
 9129 1122 664A     		ldr	r2, .L1141+8
 9130              	.LBB832:
 9131              	.LBB828:
 136:src/keys.c    **** }
 9132              		.loc 1 136 23 view .LVU2896
 9133 1124 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 9134              	.LBE828:
 9135              	.LBE832:
 455:src/keys.c    **** 	}
 9136              		.loc 1 455 10 view .LVU2897
 9137 1126 0228     		cmp	r0, #2
 457:src/keys.c    **** }
 9138              		.loc 1 457 49 view .LVU2898
 9139 1128 4FF0060C 		mov	ip, #6
 9140 112c 0CFB0121 		mla	r1, ip, r1, r2
 455:src/keys.c    **** 	}
 9141              		.loc 1 455 10 view .LVU2899
 9142 1130 14BF     		ite	ne
 9143 1132 0246     		movne	r2, r0
 9144 1134 0522     		moveq	r2, #5
 9145              	.LVL738:
 457:src/keys.c    **** }
 9146              		.loc 1 457 2 is_stmt 1 view .LVU2900
 9147              	.LBB833:
 9148              	.LBI826:
 124:src/keys.c    **** {
 9149              		.loc 1 124 12 view .LVU2901
 9150              	.LBB829:
 126:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9151              		.loc 1 126 2 view .LVU2902
 136:src/keys.c    **** }
 9152              		.loc 1 136 2 view .LVU2903
 136:src/keys.c    **** }
 9153              		.loc 1 136 2 is_stmt 0 view .LVU2904
 9154 1136 063C     		subs	r4, r4, #6
ARM GAS  /tmp/ccJ0w3QJ.s 			page 266


 9155              	.LBE829:
 9156              	.LBE833:
 457:src/keys.c    **** }
 9157              		.loc 1 457 49 view .LVU2905
 9158 1138 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9159              	.LVL739:
 457:src/keys.c    **** }
 9160              		.loc 1 457 49 view .LVU2906
 9161              	.LBE837:
 9162              	.LBE842:
1415:src/keys.c    ****         int op = STATE_UNFINISHED;
 9163              		.loc 1 1415 2 is_stmt 1 view .LVU2907
1416:src/keys.c    **** 	State2.alpha_pos = 0;
 9164              		.loc 1 1416 9 view .LVU2908
1417:src/keys.c    **** 
 9165              		.loc 1 1417 2 view .LVU2909
1419:src/keys.c    **** 	case K10:	// STO
 9166              		.loc 1 1419 2 view .LVU2910
 9167 113a 212C     		cmp	r4, #33
 9168 113c 46D8     		bhi	.L724
 9169 113e 01A1     		adr	r1, .L826
 9170 1140 51F824F0 		ldr	pc, [r1, r4, lsl #2]
 9171              		.p2align 2
 9172              	.L826:
 9173 1144 9F180000 		.word	.L733+1
 9174 1148 77180000 		.word	.L732+1
 9175 114c CD110000 		.word	.L724+1
 9176 1150 CD110000 		.word	.L724+1
 9177 1154 CD110000 		.word	.L724+1
 9178 1158 CD110000 		.word	.L724+1
 9179 115c 51180000 		.word	.L731+1
 9180 1160 CD110000 		.word	.L724+1
 9181 1164 CD110000 		.word	.L724+1
 9182 1168 CD110000 		.word	.L724+1
 9183 116c F9190000 		.word	.L737+1
 9184 1170 CD110000 		.word	.L724+1
 9185 1174 2D180000 		.word	.L729+1
 9186 1178 CD110000 		.word	.L724+1
 9187 117c CD110000 		.word	.L724+1
 9188 1180 CD110000 		.word	.L724+1
 9189 1184 CD110000 		.word	.L724+1
 9190 1188 CD110000 		.word	.L724+1
 9191 118c 19070000 		.word	.L728+1
 9192 1190 CD110000 		.word	.L724+1
 9193 1194 CD110000 		.word	.L724+1
 9194 1198 CD110000 		.word	.L724+1
 9195 119c CD110000 		.word	.L724+1
 9196 11a0 CD110000 		.word	.L724+1
 9197 11a4 CD110000 		.word	.L724+1
 9198 11a8 CD110000 		.word	.L724+1
 9199 11ac CD110000 		.word	.L724+1
 9200 11b0 CD110000 		.word	.L724+1
 9201 11b4 CD110000 		.word	.L724+1
 9202 11b8 CD110000 		.word	.L724+1
 9203 11bc 11180000 		.word	.L727+1
 9204 11c0 CD110000 		.word	.L724+1
 9205 11c4 CD110000 		.word	.L724+1
ARM GAS  /tmp/ccJ0w3QJ.s 			page 267


 9206 11c8 F7170000 		.word	.L725+1
 9207              		.p2align 1
 9208              	.L724:
1500:src/keys.c    **** 		return STATE_UNFINISHED;
 9209              		.loc 1 1500 2 view .LVU2911
1500:src/keys.c    **** 		return STATE_UNFINISHED;
 9210              		.loc 1 1500 5 is_stmt 0 view .LVU2912
 9211 11cc 002A     		cmp	r2, #0
 9212 11ce 3FF406AA 		beq	.L1051
1502:src/keys.c    **** }
 9213              		.loc 1 1502 2 is_stmt 1 view .LVU2913
1502:src/keys.c    **** }
 9214              		.loc 1 1502 9 is_stmt 0 view .LVU2914
 9215 11d2 42F4884B 		orr	fp, r2, #17408
 9216 11d6 5846     		mov	r0, fp
 9217              	.LVL740:
1502:src/keys.c    **** }
 9218              		.loc 1 1502 9 view .LVU2915
 9219 11d8 FFF74FB9 		b	.L603
 9220              	.LVL741:
 9221              	.L1108:
1502:src/keys.c    **** }
 9222              		.loc 1 1502 9 view .LVU2916
 9223              	.LBE858:
 9224              	.LBE1093:
 9225              	.LBB1094:
 9226              	.LBB980:
2494:src/keys.c    **** 		return STATE_UNFINISHED;
 9227              		.loc 1 2494 3 is_stmt 1 view .LVU2917
2494:src/keys.c    **** 		return STATE_UNFINISHED;
 9228              		.loc 1 2494 17 is_stmt 0 view .LVU2918
 9229 11dc 3173     		strb	r1, [r6, #12]
2495:src/keys.c    **** 	} 
 9230              		.loc 1 2495 3 is_stmt 1 view .LVU2919
 9231              	.LBE980:
 9232              	.LBE1094:
2879:src/keys.c    **** 
 9233              		.loc 1 2879 10 is_stmt 0 view .LVU2920
 9234 11de 4FF0330B 		mov	fp, #51
 9235              	.LBB1095:
 9236              	.LBB981:
2495:src/keys.c    **** 	} 
 9237              		.loc 1 2495 10 view .LVU2921
 9238 11e2 FEF79BBF 		b	.L552
 9239              	.LVL742:
 9240              	.L1105:
2495:src/keys.c    **** 	} 
 9241              		.loc 1 2495 10 view .LVU2922
 9242              	.LBE981:
 9243              	.LBE1095:
 9244              	.LBB1096:
 9245              	.LBB960:
1383:src/keys.c    **** 		if (rawpc == 1)
 9246              		.loc 1 1383 3 is_stmt 1 view .LVU2923
1383:src/keys.c    **** 		if (rawpc == 1)
 9247              		.loc 1 1383 11 is_stmt 0 view .LVU2924
 9248 11e6 DFF8E090 		ldr	r9, .L1141+20
ARM GAS  /tmp/ccJ0w3QJ.s 			page 268


 9249 11ea D9F80030 		ldr	r3, [r9]
 9250              	.LVL743:
1383:src/keys.c    **** 		if (rawpc == 1)
 9251              		.loc 1 1383 9 view .LVU2925
 9252 11ee B3F8E007 		ldrh	r0, [r3, #2016]
 9253              	.LVL744:
1384:src/keys.c    **** 			rawpc = 0;
 9254              		.loc 1 1384 3 is_stmt 1 view .LVU2926
1385:src/keys.c    **** 		set_pc(do_dec(rawpc, 0));
 9255              		.loc 1 1385 10 is_stmt 0 view .LVU2927
 9256 11f2 0128     		cmp	r0, #1
 9257              	.LVL745:
1386:src/keys.c    **** 		update_program_bounds(1);
 9258              		.loc 1 1386 3 is_stmt 1 view .LVU2928
 9259 11f4 08BF     		it	eq
 9260 11f6 0020     		moveq	r0, #0
 9261              	.LVL746:
1386:src/keys.c    **** 		update_program_bounds(1);
 9262              		.loc 1 1386 3 is_stmt 0 view .LVU2929
 9263 11f8 FFF7FEFF 		bl	do_dec
 9264              	.LVL747:
1386:src/keys.c    **** 		update_program_bounds(1);
 9265              		.loc 1 1386 3 view .LVU2930
 9266 11fc FFF7FEFF 		bl	set_pc
 9267              	.LVL748:
1387:src/keys.c    **** 		rawpc = ProgBegin;
 9268              		.loc 1 1387 3 is_stmt 1 view .LVU2931
 9269 1200 0120     		movs	r0, #1
 9270 1202 FFF7FEFF 		bl	update_program_bounds
 9271              	.LVL749:
1388:src/keys.c    **** 		goto fin;
 9272              		.loc 1 1388 3 view .LVU2932
1388:src/keys.c    **** 		goto fin;
 9273              		.loc 1 1388 11 is_stmt 0 view .LVU2933
 9274 1206 D9F80030 		ldr	r3, [r9]
1388:src/keys.c    **** 		goto fin;
 9275              		.loc 1 1388 9 view .LVU2934
 9276 120a B3F8EC07 		ldrh	r0, [r3, #2028]
 9277              	.LVL750:
1389:src/keys.c    **** 	}
 9278              		.loc 1 1389 3 is_stmt 1 view .LVU2935
 9279 120e FFF7F4BB 		b	.L589
 9280              	.LVL751:
 9281              	.L1090:
1389:src/keys.c    **** 	}
 9282              		.loc 1 1389 3 is_stmt 0 view .LVU2936
 9283              	.LBE960:
 9284              	.LBE1096:
2952:src/keys.c    **** 		// print_debug (3, c);
 9285              		.loc 1 2952 4 is_stmt 1 view .LVU2937
 9286              	.LBB1097:
 9287              	.LBI1097:
1025:src/keys.c    **** #define _RARG    0x8000	// Must not interfere with existing opcode markers
 9288              		.loc 1 1025 12 view .LVU2938
 9289              	.LBB1098:
1028:src/keys.c    **** 		// Row 1
 9290              		.loc 1 1028 2 view .LVU2939
ARM GAS  /tmp/ccJ0w3QJ.s 			page 269


1079:src/keys.c    **** 	int op = op_map[lc];
 9291              		.loc 1 1079 2 view .LVU2940
 9292              	.LBB1099:
 9293              	.LBI1099:
 139:src/keys.c    **** {
 9294              		.loc 1 139 12 view .LVU2941
 9295              	.LBB1100:
 141:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9296              		.loc 1 141 2 view .LVU2942
 151:src/keys.c    **** }
 9297              		.loc 1 151 2 view .LVU2943
 151:src/keys.c    **** }
 9298              		.loc 1 151 2 is_stmt 0 view .LVU2944
 9299              	.LBE1100:
 9300              	.LBE1099:
1080:src/keys.c    **** 	reset_shift();
 9301              		.loc 1 1080 2 is_stmt 1 view .LVU2945
 9302              	.LBB1103:
 9303              	.LBB1101:
 151:src/keys.c    **** }
 9304              		.loc 1 151 23 is_stmt 0 view .LVU2946
 9305 1212 2B4A     		ldr	r2, .L1141+12
 9306              	.LBE1101:
 9307              	.LBE1103:
1080:src/keys.c    **** 	reset_shift();
 9308              		.loc 1 1080 17 view .LVU2947
 9309 1214 2B4B     		ldr	r3, .L1141+16
 9310              	.LBB1104:
 9311              	.LBB1102:
 151:src/keys.c    **** }
 9312              		.loc 1 151 23 view .LVU2948
 9313 1216 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 9314              	.LBE1102:
 9315              	.LBE1104:
1080:src/keys.c    **** 	reset_shift();
 9316              		.loc 1 1080 17 view .LVU2949
 9317 1218 33F812A0 		ldrh	r10, [r3, r2, lsl #1]
 9318              	.LVL752:
1081:src/keys.c    **** 
 9319              		.loc 1 1081 2 is_stmt 1 view .LVU2950
 9320              	.LBB1105:
 9321              	.LBI1105:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 9322              		.loc 1 102 13 view .LVU2951
 9323              	.LBE1105:
 9324              	.LBE1098:
 9325              	.LBE1097:
 9326              	.LBE1234:
 9327              	.LBE1295:
 103:src/keys.c    **** }
 9328              		.loc 1 103 2 view .LVU2952
 9329              	.LBB1296:
 9330              	.LBB1235:
 9331              	.LBB1120:
 9332              	.LBB1116:
 9333              	.LBB1112:
 9334              	.LBB1106:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 270


 9335              	.LBI1106:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 9336              		.loc 1 92 20 view .LVU2953
 9337              	.LBB1107:
  93:src/keys.c    **** 	State2.shifts = shift;
 9338              		.loc 1 93 2 view .LVU2954
 9339              	.LBB1108:
 9340              	.LBI1108:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 9341              		.loc 1 84 13 view .LVU2955
 9342              	.LBB1109:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9343              		.loc 1 85 2 view .LVU2956
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9344              		.loc 1 85 18 is_stmt 0 view .LVU2957
 9345 121c FFF7FEFF 		bl	shift_down
 9346              	.LVL753:
  86:src/keys.c    **** }
 9347              		.loc 1 86 2 is_stmt 1 view .LVU2958
 9348              	.LBE1109:
 9349              	.LBE1108:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9350              		.loc 1 94 2 view .LVU2959
 9351              	.LBE1107:
 9352              	.LBE1106:
 9353              	.LBE1112:
1084:src/keys.c    **** 	case K62:
 9354              		.loc 1 1084 2 is_stmt 0 view .LVU2960
 9355 1220 262C     		cmp	r4, #38
 9356              	.LBB1113:
 9357              	.LBB1111:
 9358              	.LBB1110:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9359              		.loc 1 94 16 view .LVU2961
 9360 1222 86F810B0 		strb	fp, [r6, #16]
  95:src/keys.c    **** 	return r;
 9361              		.loc 1 95 2 is_stmt 1 view .LVU2962
  95:src/keys.c    **** 	return r;
 9362              		.loc 1 95 19 is_stmt 0 view .LVU2963
 9363 1226 86F80DB0 		strb	fp, [r6, #13]
  96:src/keys.c    **** }
 9364              		.loc 1 96 2 is_stmt 1 view .LVU2964
 9365              	.LVL754:
  96:src/keys.c    **** }
 9366              		.loc 1 96 2 is_stmt 0 view .LVU2965
 9367              	.LBE1110:
 9368              	.LBE1111:
 9369              	.LBE1113:
1084:src/keys.c    **** 	case K62:
 9370              		.loc 1 1084 2 is_stmt 1 view .LVU2966
 9371 122a 00F04982 		beq	.L775
 9372 122e 272C     		cmp	r4, #39
 9373 1230 1CD1     		bne	.L777
1097:src/keys.c    **** 			return STATE_UNFINISHED;
 9374              		.loc 1 1097 3 view .LVU2967
1097:src/keys.c    **** 			return STATE_UNFINISHED;
 9375              		.loc 1 1097 7 is_stmt 0 view .LVU2968
ARM GAS  /tmp/ccJ0w3QJ.s 			page 271


 9376 1232 FFF7FEFF 		bl	is_bad_cmdline
 9377              	.LVL755:
1097:src/keys.c    **** 			return STATE_UNFINISHED;
 9378              		.loc 1 1097 6 view .LVU2969
 9379 1236 0028     		cmp	r0, #0
 9380 1238 7FF4D1A9 		bne	.L1051
1099:src/keys.c    **** 		process_cmdline_set_lift();
 9381              		.loc 1 1099 3 is_stmt 1 view .LVU2970
1099:src/keys.c    **** 		process_cmdline_set_lift();
 9382              		.loc 1 1099 30 is_stmt 0 view .LVU2971
 9383 123c B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 9384 123e C3F38012 		ubfx	r2, r3, #6, #1
1099:src/keys.c    **** 		process_cmdline_set_lift();
 9385              		.loc 1 1099 22 view .LVU2972
 9386 1242 C2F10102 		rsb	r2, r2, #1
1099:src/keys.c    **** 		process_cmdline_set_lift();
 9387              		.loc 1 1099 18 view .LVU2973
 9388 1246 62F38613 		bfi	r3, r2, #6, #1
 9389 124a B375     		strb	r3, [r6, #22]
1100:src/keys.c    **** 		update_program_bounds(1);
 9390              		.loc 1 1100 3 is_stmt 1 view .LVU2974
 9391 124c FFF7FEFF 		bl	process_cmdline_set_lift
 9392              	.LVL756:
1101:src/keys.c    **** 		if (! State2.runmode && state_pc() == 1 && ProgEnd == 1)
 9393              		.loc 1 1101 3 view .LVU2975
 9394 1250 0120     		movs	r0, #1
 9395 1252 FFF7FEFF 		bl	update_program_bounds
 9396              	.LVL757:
1102:src/keys.c    **** 			set_pc(0);
 9397              		.loc 1 1102 3 view .LVU2976
1102:src/keys.c    **** 			set_pc(0);
 9398              		.loc 1 1102 7 is_stmt 0 view .LVU2977
 9399 1256 B07D     		ldrb	r0, [r6, #22]	@ zero_extendqisi2
1102:src/keys.c    **** 			set_pc(0);
 9400              		.loc 1 1102 6 view .LVU2978
 9401 1258 10F04000 		ands	r0, r0, #64
 9402 125c 06D1     		bne	.L777
1102:src/keys.c    **** 			set_pc(0);
 9403              		.loc 1 1102 27 view .LVU2979
 9404 125e 1A4B     		ldr	r3, .L1141+20
 9405 1260 1B68     		ldr	r3, [r3]
1102:src/keys.c    **** 			set_pc(0);
 9406              		.loc 1 1102 24 view .LVU2980
 9407 1262 B3F8E027 		ldrh	r2, [r3, #2016]
 9408 1266 012A     		cmp	r2, #1
 9409 1268 00F0BE83 		beq	.L1122
 9410              	.L777:
1110:src/keys.c    **** 		if (op & _RARG) {
 9411              		.loc 1 1110 5 view .LVU2981
 9412 126c BAF1330F 		cmp	r10, #51
1080:src/keys.c    **** 	reset_shift();
 9413              		.loc 1 1080 6 view .LVU2982
 9414 1270 D346     		mov	fp, r10
1110:src/keys.c    **** 		if (op & _RARG) {
 9415              		.loc 1 1110 2 is_stmt 1 view .LVU2983
1110:src/keys.c    **** 		if (op & _RARG) {
 9416              		.loc 1 1110 5 is_stmt 0 view .LVU2984
ARM GAS  /tmp/ccJ0w3QJ.s 			page 272


 9417 1272 0AD0     		beq	.L785
 9418              	.LVL758:
1111:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 9419              		.loc 1 1111 3 is_stmt 1 view .LVU2985
1111:src/keys.c    **** 			init_arg((enum rarg) (op & ~(_RARG | NO_INT)));
 9420              		.loc 1 1111 6 is_stmt 0 view .LVU2986
 9421 1274 1AF4004F 		tst	r10, #32768
 9422 1278 00F04983 		beq	.L1123
1112:src/keys.c    **** 			op = STATE_UNFINISHED;
 9423              		.loc 1 1112 4 is_stmt 1 view .LVU2987
 9424              	.LVL759:
 9425              	.LBB1114:
 9426              	.LBI1114:
 519:src/keys.c    **** 	if (is_bad_cmdline())
 9427              		.loc 1 519 13 view .LVU2988
 9428              	.LBB1115:
 520:src/keys.c    **** 		return;
 9429              		.loc 1 520 2 view .LVU2989
 520:src/keys.c    **** 		return;
 9430              		.loc 1 520 6 is_stmt 0 view .LVU2990
 9431 127c FFF7FEFF 		bl	is_bad_cmdline
 9432              	.LVL760:
 520:src/keys.c    **** 		return;
 9433              		.loc 1 520 5 view .LVU2991
 9434 1280 18B9     		cbnz	r0, .L785
 9435 1282 5FFA8AF0 		uxtb	r0, r10
 9436 1286 FFF7FEFF 		bl	init_arg.part.0
 9437              	.LVL761:
 9438              	.L785:
 520:src/keys.c    **** 		return;
 9439              		.loc 1 520 5 view .LVU2992
 9440              	.LBE1115:
 9441              	.LBE1114:
1116:src/keys.c    **** #undef _RARG
 9442              		.loc 1 1116 2 is_stmt 1 view .LVU2993
1092:src/keys.c    **** #endif
 9443              		.loc 1 1092 29 is_stmt 0 view .LVU2994
 9444 128a 4FF0330B 		mov	fp, #51
 9445              	.LVL762:
 9446              	.L780:
1116:src/keys.c    **** #undef _RARG
 9447              		.loc 1 1116 57 view .LVU2995
 9448 128e 2BF4804B 		bic	fp, fp, #16384
 9449 1292 FFF781B9 		b	.L581
 9450              	.LVL763:
 9451              	.L1081:
1116:src/keys.c    **** #undef _RARG
 9452              		.loc 1 1116 57 view .LVU2996
 9453              	.LBE1116:
 9454              	.LBE1120:
 9455              	.LBB1121:
 9456              	.LBB695:
 9457              	.LBB688:
 341:src/keys.c    **** #else
 9458              		.loc 1 341 45 view .LVU2997
 9459 1296 FFF7FEFF 		bl	shift_down
 9460              	.LVL764:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 273


 341:src/keys.c    **** #else
 9461              		.loc 1 341 42 view .LVU2998
 9462 129a 0328     		cmp	r0, #3
 9463 129c 00F02883 		beq	.L646
 9464 12a0 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
 339:src/keys.c    **** #ifndef WINGUI
 9465              		.loc 1 339 8 view .LVU2999
 9466 12a2 0A4B     		ldr	r3, .L1141+24
 341:src/keys.c    **** #else
 9467              		.loc 1 341 73 view .LVU3000
 9468 12a4 DC46     		mov	ip, fp
 345:src/keys.c    ****   }
 9469              		.loc 1 345 9 view .LVU3001
 9470 12a6 0C21     		movs	r1, #12
 9471 12a8 FFF744B8 		b	.L645
 9472              	.LVL765:
 9473              	.L855:
 345:src/keys.c    ****   }
 9474              		.loc 1 345 9 view .LVU3002
 9475              	.LBE688:
 9476              	.LBE695:
 9477              	.LBE1121:
 9478              	.LBB1122:
 9479              	.LBB1072:
2563:src/keys.c    **** 	const int opcode = getprog(pc);
 9480              		.loc 1 2563 27 view .LVU3003
 9481 12ac 4FF0030B 		mov	fp, #3
 9482 12b0 4BE5     		b	.L669
 9483              	.L1142:
 9484 12b2 00BF     		.align	2
 9485              	.L1141:
 9486 12b4 00000000 		.word	.LANCHOR1
 9487 12b8 00000000 		.word	.LANCHOR0
 9488 12bc 00000000 		.word	.LANCHOR9
 9489 12c0 00000000 		.word	.LANCHOR18
 9490 12c4 00000000 		.word	.LANCHOR21
 9491 12c8 00000000 		.word	main_ram
 9492 12cc 00000000 		.word	.LANCHOR11
 9493              	.LVL766:
 9494              	.L862:
2563:src/keys.c    **** 	const int opcode = getprog(pc);
 9495              		.loc 1 2563 27 view .LVU3004
 9496              	.LBE1072:
 9497              	.LBE1122:
 9498              	.LBB1123:
 9499              	.LBB859:
 9500              	.LBB843:
 9501              	.LBB838:
 453:src/keys.c    **** 		else if (shift == SHIFT_G)
 9502              		.loc 1 453 10 view .LVU3005
 9503 12d0 0422     		movs	r2, #4
 9504              	.L721:
 9505              	.LVL767:
 457:src/keys.c    **** }
 9506              		.loc 1 457 2 is_stmt 1 view .LVU3006
 9507              	.LBB834:
 124:src/keys.c    **** {
ARM GAS  /tmp/ccJ0w3QJ.s 			page 274


 9508              		.loc 1 124 12 view .LVU3007
 9509              	.LBB830:
 126:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9510              		.loc 1 126 2 view .LVU3008
 136:src/keys.c    **** }
 9511              		.loc 1 136 2 view .LVU3009
 136:src/keys.c    **** }
 9512              		.loc 1 136 23 is_stmt 0 view .LVU3010
 9513 12d2 D349     		ldr	r1, .L1143
 9514              	.LBE830:
 9515              	.LBE834:
 457:src/keys.c    **** }
 9516              		.loc 1 457 49 view .LVU3011
 9517 12d4 DFF85CC3 		ldr	ip, .L1143+20
 9518              	.LBB835:
 9519              	.LBB831:
 136:src/keys.c    **** }
 9520              		.loc 1 136 23 view .LVU3012
 9521 12d8 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
 9522              	.LBE831:
 9523              	.LBE835:
 457:src/keys.c    **** }
 9524              		.loc 1 457 49 view .LVU3013
 9525 12da 4FF0060E 		mov	lr, #6
 9526 12de 0EFB01C1 		mla	r1, lr, r1, ip
 9527 12e2 063C     		subs	r4, r4, #6
 9528 12e4 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9529              	.LVL768:
 457:src/keys.c    **** }
 9530              		.loc 1 457 49 view .LVU3014
 9531              	.LBE838:
 9532              	.LBE843:
1415:src/keys.c    ****         int op = STATE_UNFINISHED;
 9533              		.loc 1 1415 2 is_stmt 1 view .LVU3015
1416:src/keys.c    **** 	State2.alpha_pos = 0;
 9534              		.loc 1 1416 9 view .LVU3016
1417:src/keys.c    **** 
 9535              		.loc 1 1417 2 view .LVU3017
1419:src/keys.c    **** 	case K10:	// STO
 9536              		.loc 1 1419 2 view .LVU3018
 9537 12e6 212C     		cmp	r4, #33
 9538 12e8 3FF670AF 		bhi	.L724
 9539 12ec 01A1     		adr	r1, .L726
 9540 12ee 51F824F0 		ldr	pc, [r1, r4, lsl #2]
 9541 12f2 00BF     		.p2align 2
 9542              	.L726:
 9543 12f4 9F180000 		.word	.L733+1
 9544 12f8 77180000 		.word	.L732+1
 9545 12fc CD110000 		.word	.L724+1
 9546 1300 CD110000 		.word	.L724+1
 9547 1304 CD110000 		.word	.L724+1
 9548 1308 CD110000 		.word	.L724+1
 9549 130c 51180000 		.word	.L731+1
 9550 1310 CD110000 		.word	.L724+1
 9551 1314 CD110000 		.word	.L724+1
 9552 1318 CD110000 		.word	.L724+1
 9553 131c F3060000 		.word	.L730+1
ARM GAS  /tmp/ccJ0w3QJ.s 			page 275


 9554 1320 CD110000 		.word	.L724+1
 9555 1324 2D180000 		.word	.L729+1
 9556 1328 CD110000 		.word	.L724+1
 9557 132c CD110000 		.word	.L724+1
 9558 1330 CD110000 		.word	.L724+1
 9559 1334 CD110000 		.word	.L724+1
 9560 1338 CD110000 		.word	.L724+1
 9561 133c 19070000 		.word	.L728+1
 9562 1340 CD110000 		.word	.L724+1
 9563 1344 CD110000 		.word	.L724+1
 9564 1348 CD110000 		.word	.L724+1
 9565 134c CD110000 		.word	.L724+1
 9566 1350 CD110000 		.word	.L724+1
 9567 1354 CD110000 		.word	.L724+1
 9568 1358 CD110000 		.word	.L724+1
 9569 135c CD110000 		.word	.L724+1
 9570 1360 CD110000 		.word	.L724+1
 9571 1364 CD110000 		.word	.L724+1
 9572 1368 CD110000 		.word	.L724+1
 9573 136c 11180000 		.word	.L727+1
 9574 1370 CD110000 		.word	.L724+1
 9575 1374 CD110000 		.word	.L724+1
 9576 1378 F7170000 		.word	.L725+1
 9577              	.LVL769:
 9578              		.p2align 1
 9579              	.L1088:
1419:src/keys.c    **** 	case K10:	// STO
 9580              		.loc 1 1419 2 is_stmt 0 view .LVU3019
 9581              	.LBE859:
 9582              	.LBE1123:
2947:src/keys.c    **** 	} else {
 9583              		.loc 1 2947 3 is_stmt 1 view .LVU3020
 9584              	.LBB1124:
 9585              	.LBI1124:
1125:src/keys.c    **** #define _RARG   0xFF00
 9586              		.loc 1 1125 12 view .LVU3021
 9587              	.LBB1125:
1130:src/keys.c    **** 		// Row 1
 9588              		.loc 1 1130 2 view .LVU3022
1181:src/keys.c    **** 	int lc = keycode_to_linear(c);
 9589              		.loc 1 1181 2 view .LVU3023
 9590              	.LBB1126:
 9591              	.LBI1126:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 9592              		.loc 1 102 13 view .LVU3024
 9593              	.LBE1126:
 9594              	.LBE1125:
 9595              	.LBE1124:
 9596              	.LBE1235:
 9597              	.LBE1296:
 103:src/keys.c    **** }
 9598              		.loc 1 103 2 view .LVU3025
 9599              	.LBB1297:
 9600              	.LBB1236:
 9601              	.LBB1154:
 9602              	.LBB1151:
 9603              	.LBB1137:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 276


 9604              	.LBB1127:
 9605              	.LBI1127:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 9606              		.loc 1 92 20 view .LVU3026
 9607              	.LBB1128:
  93:src/keys.c    **** 	State2.shifts = shift;
 9608              		.loc 1 93 2 view .LVU3027
 9609              	.LBB1129:
 9610              	.LBI1129:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 9611              		.loc 1 84 13 view .LVU3028
 9612              	.LBB1130:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9613              		.loc 1 85 2 view .LVU3029
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9614              		.loc 1 85 18 is_stmt 0 view .LVU3030
 9615 137c FFF7FEFF 		bl	shift_down
 9616              	.LVL770:
  86:src/keys.c    **** }
 9617              		.loc 1 86 2 is_stmt 1 view .LVU3031
  86:src/keys.c    **** }
 9618              		.loc 1 86 52 is_stmt 0 view .LVU3032
 9619 1380 0346     		mov	r3, r0
 9620 1382 00B9     		cbnz	r0, .L745
 9621 1384 337C     		ldrb	r3, [r6, #16]	@ zero_extendqisi2
 9622              	.L745:
 9623              	.LVL771:
  86:src/keys.c    **** }
 9624              		.loc 1 86 52 view .LVU3033
 9625              	.LBE1130:
 9626              	.LBE1129:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9627              		.loc 1 94 2 is_stmt 1 view .LVU3034
 9628              	.LBE1128:
 9629              	.LBE1127:
 9630              	.LBE1137:
 9631              	.LBB1138:
 9632              	.LBB1139:
 151:src/keys.c    **** }
 9633              		.loc 1 151 23 is_stmt 0 view .LVU3035
 9634 1386 A74A     		ldr	r2, .L1143+4
 9635              	.LBE1139:
 9636              	.LBE1138:
1183:src/keys.c    **** 	State2.cmplx = 0;
 9637              		.loc 1 1183 21 view .LVU3036
 9638 1388 A748     		ldr	r0, .L1143+8
 9639              	.LBB1142:
 9640              	.LBB1140:
 151:src/keys.c    **** }
 9641              		.loc 1 151 23 view .LVU3037
 9642 138a 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 9643              	.LBE1140:
 9644              	.LBE1142:
1184:src/keys.c    **** 
 9645              		.loc 1 1184 15 view .LVU3038
 9646 138c 717D     		ldrb	r1, [r6, #21]	@ zero_extendqisi2
1183:src/keys.c    **** 	State2.cmplx = 0;
ARM GAS  /tmp/ccJ0w3QJ.s 			page 277


 9647              		.loc 1 1183 21 view .LVU3039
 9648 138e 03EB8202 		add	r2, r3, r2, lsl #2
 9649              	.LBB1143:
 9650              	.LBB1134:
 9651              	.LBB1131:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9652              		.loc 1 94 16 view .LVU3040
 9653 1392 4FF0000A 		mov	r10, #0
 9654              	.LVL772:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9655              		.loc 1 94 16 view .LVU3041
 9656              	.LBE1131:
 9657              	.LBE1134:
 9658              	.LBE1143:
1183:src/keys.c    **** 	State2.cmplx = 0;
 9659              		.loc 1 1183 21 view .LVU3042
 9660 1396 30F812B0 		ldrh	fp, [r0, r2, lsl #1]
 9661              	.LBB1144:
 9662              	.LBB1135:
 9663              	.LBB1132:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9664              		.loc 1 94 16 view .LVU3043
 9665 139a 86F810A0 		strb	r10, [r6, #16]
  95:src/keys.c    **** 	return r;
 9666              		.loc 1 95 2 is_stmt 1 view .LVU3044
 9667              	.LBE1132:
 9668              	.LBE1135:
 9669              	.LBE1144:
1186:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9670              		.loc 1 1186 5 is_stmt 0 view .LVU3045
 9671 139e 0BF47F42 		and	r2, fp, #65280
1184:src/keys.c    **** 
 9672              		.loc 1 1184 15 view .LVU3046
 9673 13a2 6AF34101 		bfi	r1, r10, #1, #1
1186:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9674              		.loc 1 1186 5 view .LVU3047
 9675 13a6 B2F57F4F 		cmp	r2, #65280
1184:src/keys.c    **** 
 9676              		.loc 1 1184 15 view .LVU3048
 9677 13aa 7175     		strb	r1, [r6, #21]
 9678              	.LBB1145:
 9679              	.LBB1136:
 9680              	.LBB1133:
  95:src/keys.c    **** 	return r;
 9681              		.loc 1 95 19 view .LVU3049
 9682 13ac 86F80DA0 		strb	r10, [r6, #13]
  96:src/keys.c    **** }
 9683              		.loc 1 96 2 is_stmt 1 view .LVU3050
 9684              	.LVL773:
  96:src/keys.c    **** }
 9685              		.loc 1 96 2 is_stmt 0 view .LVU3051
 9686              	.LBE1133:
 9687              	.LBE1136:
 9688              	.LBE1145:
1182:src/keys.c    **** 	int op = op_map[lc][shift];
 9689              		.loc 1 1182 2 is_stmt 1 view .LVU3052
 9690              	.LBB1146:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 278


 9691              	.LBI1138:
 139:src/keys.c    **** {
 9692              		.loc 1 139 12 view .LVU3053
 9693              	.LBB1141:
 141:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 9694              		.loc 1 141 2 view .LVU3054
 151:src/keys.c    **** }
 9695              		.loc 1 151 2 view .LVU3055
 151:src/keys.c    **** }
 9696              		.loc 1 151 2 is_stmt 0 view .LVU3056
 9697              	.LBE1141:
 9698              	.LBE1146:
1183:src/keys.c    **** 	State2.cmplx = 0;
 9699              		.loc 1 1183 2 is_stmt 1 view .LVU3057
1184:src/keys.c    **** 
 9700              		.loc 1 1184 2 view .LVU3058
1186:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9701              		.loc 1 1186 2 view .LVU3059
1186:src/keys.c    **** 		init_arg((enum rarg) (op & ~_RARG));
 9702              		.loc 1 1186 5 is_stmt 0 view .LVU3060
 9703 13b0 00F07C83 		beq	.L771
1190:src/keys.c    **** 		// HYP
 9704              		.loc 1 1190 2 is_stmt 1 view .LVU3061
1190:src/keys.c    **** 		// HYP
 9705              		.loc 1 1190 5 is_stmt 0 view .LVU3062
 9706 13b4 002C     		cmp	r4, #0
 9707 13b6 00F05F83 		beq	.L1124
1199:src/keys.c    **** 		switch (c) {
 9708              		.loc 1 1199 2 is_stmt 1 view .LVU3063
1199:src/keys.c    **** 		switch (c) {
 9709              		.loc 1 1199 5 is_stmt 0 view .LVU3064
 9710 13ba 002B     		cmp	r3, #0
 9711 13bc 3FF4ECA8 		beq	.L581
1200:src/keys.c    **** 		case K_CMPLX:
 9712              		.loc 1 1200 3 is_stmt 1 view .LVU3065
 9713 13c0 242C     		cmp	r4, #36
 9714 13c2 00F05583 		beq	.L748
 9715 13c6 2D2C     		cmp	r4, #45
 9716 13c8 00F04983 		beq	.L749
 9717 13cc 1F2C     		cmp	r4, #31
 9718 13ce 7FF4E3A8 		bne	.L581
1206:src/keys.c    **** 				if (is_bad_cmdline())
 9719              		.loc 1 1206 4 view .LVU3066
1206:src/keys.c    **** 				if (is_bad_cmdline())
 9720              		.loc 1 1206 7 is_stmt 0 view .LVU3067
 9721 13d2 BBF1330F 		cmp	fp, #51
 9722 13d6 3FF402A9 		beq	.L1051
1207:src/keys.c    **** 					return STATE_UNFINISHED;
 9723              		.loc 1 1207 5 is_stmt 1 view .LVU3068
1207:src/keys.c    **** 					return STATE_UNFINISHED;
 9724              		.loc 1 1207 9 is_stmt 0 view .LVU3069
 9725 13da FFF7FEFF 		bl	is_bad_cmdline
 9726              	.LVL774:
1207:src/keys.c    **** 					return STATE_UNFINISHED;
 9727              		.loc 1 1207 8 view .LVU3070
 9728 13de 0446     		mov	r4, r0
 9729 13e0 0028     		cmp	r0, #0
ARM GAS  /tmp/ccJ0w3QJ.s 			page 279


 9730 13e2 7FF4FCA8 		bne	.L1051
1209:src/keys.c    **** 				State2.cmplx = 1;
 9731              		.loc 1 1209 5 is_stmt 1 view .LVU3071
 9732 13e6 FFF7FEFF 		bl	process_cmdline_set_lift
 9733              	.LVL775:
1210:src/keys.c    **** 				State2.test = op;
 9734              		.loc 1 1210 5 view .LVU3072
1210:src/keys.c    **** 				State2.test = op;
 9735              		.loc 1 1210 18 is_stmt 0 view .LVU3073
 9736 13ea 737D     		ldrb	r3, [r6, #21]	@ zero_extendqisi2
1211:src/keys.c    **** 			}
 9737              		.loc 1 1211 17 view .LVU3074
 9738 13ec 86F80FB0 		strb	fp, [r6, #15]
1210:src/keys.c    **** 				State2.test = op;
 9739              		.loc 1 1210 18 view .LVU3075
 9740 13f0 43F00203 		orr	r3, r3, #2
 9741              	.LBE1151:
 9742              	.LBE1154:
 9743              	.LBE1236:
 9744              	.LBE1297:
2976:src/keys.c    **** #ifdef DM42
 9745              		.loc 1 2976 7 view .LVU3076
 9746 13f4 A046     		mov	r8, r4
 9747              	.LBB1298:
 9748              	.LBB1237:
 9749              	.LBB1155:
 9750              	.LBB1152:
1210:src/keys.c    **** 				State2.test = op;
 9751              		.loc 1 1210 18 view .LVU3077
 9752 13f6 7375     		strb	r3, [r6, #21]
1211:src/keys.c    **** 			}
 9753              		.loc 1 1211 5 is_stmt 1 view .LVU3078
1213:src/keys.c    **** 
 9754              		.loc 1 1213 11 is_stmt 0 view .LVU3079
 9755 13f8 4FF0330B 		mov	fp, #51
 9756              	.LVL776:
1213:src/keys.c    **** 
 9757              		.loc 1 1213 11 view .LVU3080
 9758 13fc FEF78EBE 		b	.L552
 9759              	.LVL777:
 9760              	.L1092:
1213:src/keys.c    **** 
 9761              		.loc 1 1213 11 view .LVU3081
 9762              	.LBE1152:
 9763              	.LBE1155:
 9764              	.LBB1156:
 9765              	.LBB768:
2384:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 9766              		.loc 1 2384 3 is_stmt 1 view .LVU3082
2384:src/keys.c    **** 		if (opcode == STATE_UNFINISHED)
 9767              		.loc 1 2384 12 is_stmt 0 view .LVU3083
 9768 1400 F27A     		ldrb	r2, [r6, #11]	@ zero_extendqisi2
 9769 1402 2046     		mov	r0, r4
 9770 1404 941E     		subs	r4, r2, #2
 9771 1406 6242     		rsbs	r2, r4, #0
 9772 1408 6241     		adcs	r2, r2, r4
 9773 140a FFF7FEFF 		bl	process_catalogue
ARM GAS  /tmp/ccJ0w3QJ.s 			page 280


 9774              	.LVL778:
2385:src/keys.c    **** 			return opcode;
 9775              		.loc 1 2385 3 is_stmt 1 view .LVU3084
2385:src/keys.c    **** 			return opcode;
 9776              		.loc 1 2385 6 is_stmt 0 view .LVU3085
 9777 140e 3328     		cmp	r0, #51
 9778 1410 3FF4E5A8 		beq	.L1051
2387:src/keys.c    **** 		goto add_char;
 9779              		.loc 1 2387 3 is_stmt 1 view .LVU3086
2387:src/keys.c    **** 		goto add_char;
 9780              		.loc 1 2387 6 is_stmt 0 view .LVU3087
 9781 1414 C3B2     		uxtb	r3, r0
 9782              	.LVL779:
2388:src/keys.c    **** 	}
 9783              		.loc 1 2388 3 is_stmt 1 view .LVU3088
 9784 1416 FFF7A0B8 		b	.L657
 9785              	.LVL780:
 9786              	.L1109:
2388:src/keys.c    **** 	}
 9787              		.loc 1 2388 3 is_stmt 0 view .LVU3089
 9788              	.LBE768:
 9789              	.LBE1156:
 9790              	.LBB1157:
 9791              	.LBB982:
 9792              	.LBB974:
2502:src/keys.c    **** 		else if (nn != NO_REG)
 9793              		.loc 1 2502 4 is_stmt 1 view .LVU3090
2504:src/keys.c    **** 	}
 9794              		.loc 1 2504 6 is_stmt 0 view .LVU3091
 9795 141a 9342     		cmp	r3, r2
 9796 141c 08BF     		it	eq
 9797 141e 0A22     		moveq	r2, #10
 9798              	.LVL781:
2504:src/keys.c    **** 	}
 9799              		.loc 1 2504 6 view .LVU3092
 9800 1420 FFF744BB 		b	.L625
 9801              	.LVL782:
 9802              	.L1118:
2504:src/keys.c    **** 	}
 9803              		.loc 1 2504 6 view .LVU3093
 9804              	.LBE974:
 9805              	.LBE982:
 9806              	.LBE1157:
 9807              	.LBB1158:
 9808              	.LBB801:
2710:src/keys.c    **** 		set_window(shift == SHIFT_F ? STATE_WINDOWLEFT : STATE_WINDOWRIGHT);
 9809              		.loc 1 2710 50 view .LVU3094
 9810 1424 0D2C     		cmp	r4, #13
 9811 1426 7FF4E9AD 		bne	.L703
2711:src/keys.c    **** 		set_smode(SDISP_SHOW);
 9812              		.loc 1 2711 3 is_stmt 1 view .LVU3095
 9813 142a 012B     		cmp	r3, #1
 9814 142c 14BF     		ite	ne
 9815 142e 2C20     		movne	r0, #44
 9816              	.LVL783:
2711:src/keys.c    **** 		set_smode(SDISP_SHOW);
 9817              		.loc 1 2711 3 is_stmt 0 view .LVU3096
ARM GAS  /tmp/ccJ0w3QJ.s 			page 281


 9818 1430 2B20     		moveq	r0, #43
 9819 1432 FFF7FEFF 		bl	set_window
 9820              	.LVL784:
2712:src/keys.c    **** 	}
 9821              		.loc 1 2712 3 is_stmt 1 view .LVU3097
 9822              	.LBB796:
 9823              	.LBI796:
 664:src/keys.c    **** 	State2.smode = (State2.smode == d)?SDISP_NORMAL:d;
 9824              		.loc 1 664 13 view .LVU3098
 9825              	.LBB797:
 665:src/keys.c    **** }
 9826              		.loc 1 665 2 view .LVU3099
 665:src/keys.c    **** }
 9827              		.loc 1 665 15 is_stmt 0 view .LVU3100
 9828 1436 737C     		ldrb	r3, [r6, #17]	@ zero_extendqisi2
 9829 1438 013B     		subs	r3, r3, #1
 9830 143a 18BF     		it	ne
 9831 143c 0123     		movne	r3, #1
 9832 143e 7374     		strb	r3, [r6, #17]
 9833              	.LVL785:
 665:src/keys.c    **** }
 9834              		.loc 1 665 15 view .LVU3101
 9835              	.LBE797:
 9836              	.LBE796:
2719:src/keys.c    **** 	case K_DOWN:
 9837              		.loc 1 2719 2 is_stmt 1 view .LVU3102
2719:src/keys.c    **** 	case K_DOWN:
 9838              		.loc 1 2719 2 is_stmt 0 view .LVU3103
 9839              	.LBE801:
 9840              	.LBE1158:
 9841              	.LBE1237:
 9842              	.LBE1298:
3161:src/keys.c    ****     case STATE_SST:
 9843              		.loc 1 3161 5 is_stmt 1 view .LVU3104
 9844              	.LBB1299:
 9845              	.LBB1238:
 9846              	.LBB1159:
 9847              	.LBB802:
2770:src/keys.c    **** 	}
 9848              		.loc 1 2770 10 is_stmt 0 view .LVU3105
 9849 1440 4FF0330B 		mov	fp, #51
 9850 1444 FEF76ABE 		b	.L552
 9851              	.LVL786:
 9852              	.L1099:
2770:src/keys.c    **** 	}
 9853              		.loc 1 2770 10 view .LVU3106
 9854              	.LBE802:
 9855              	.LBE1159:
 9856              	.LBB1160:
 9857              	.LBB941:
1921:src/keys.c    **** 			if (n == regI_idx)
 9858              		.loc 1 1921 3 is_stmt 1 view .LVU3107
1921:src/keys.c    **** 			if (n == regI_idx)
 9859              		.loc 1 1921 6 is_stmt 0 view .LVU3108
 9860 1448 BEF1000F 		cmp	lr, #0
 9861 144c 02D0     		beq	.L610
1921:src/keys.c    **** 			if (n == regI_idx)
ARM GAS  /tmp/ccJ0w3QJ.s 			page 282


 9862              		.loc 1 1921 12 view .LVU3109
 9863 144e 1CF0010F 		tst	ip, #1
 9864 1452 06D1     		bne	.L1125
 9865              	.L610:
1928:src/keys.c    **** 	}
 9866              		.loc 1 1928 3 is_stmt 1 view .LVU3110
1928:src/keys.c    **** 	}
 9867              		.loc 1 1928 10 is_stmt 0 view .LVU3111
 9868 1454 0AF1200A 		add	r10, r10, #32
 9869              	.LVL787:
1928:src/keys.c    **** 	}
 9870              		.loc 1 1928 10 view .LVU3112
 9871 1458 40EA0A20 		orr	r0, r0, r10, lsl #8
 9872 145c 8346     		mov	fp, r0
 9873              	.LVL788:
1928:src/keys.c    **** 	}
 9874              		.loc 1 1928 10 view .LVU3113
 9875 145e FFF70CB8 		b	.L603
 9876              	.LVL789:
 9877              	.L1125:
1922:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 9878              		.loc 1 1922 4 is_stmt 1 view .LVU3114
1922:src/keys.c    **** 				return OP_SPEC + OP_Zeqi + r;
 9879              		.loc 1 1922 7 is_stmt 0 view .LVU3115
 9880 1462 6D28     		cmp	r0, #109
 9881 1464 7FF495AA 		bne	.L611
1923:src/keys.c    **** 			// Disallow odd complex registers > A
 9882              		.loc 1 1923 5 is_stmt 1 view .LVU3116
1923:src/keys.c    **** 			// Disallow odd complex registers > A
 9883              		.loc 1 1923 30 is_stmt 0 view .LVU3117
 9884 1468 0BF1290B 		add	fp, fp, #41
 9885              	.LVL790:
1923:src/keys.c    **** 			// Disallow odd complex registers > A
 9886              		.loc 1 1923 30 view .LVU3118
 9887 146c FFF794B8 		b	.L581
 9888              	.LVL791:
 9889              	.L1115:
1923:src/keys.c    **** 			// Disallow odd complex registers > A
 9890              		.loc 1 1923 30 view .LVU3119
 9891 1470 0093     		str	r3, [sp]
 9892              	.LBE941:
 9893              	.LBE1160:
 9894              	.LBB1161:
 9895              	.LBB803:
2694:src/keys.c    **** 	const int g_max = global_regs();
 9896              		.loc 1 2694 33 view .LVU3120
 9897 1472 FFF7FEFF 		bl	local_regs
 9898              	.LVL792:
2694:src/keys.c    **** 	const int g_max = global_regs();
 9899              		.loc 1 2694 33 view .LVU3121
 9900 1476 009B     		ldr	r3, [sp]
 9901 1478 8146     		mov	r9, r0
 9902 147a AEE5     		b	.L695
 9903              	.LVL793:
 9904              	.L1089:
2694:src/keys.c    **** 	const int g_max = global_regs();
 9905              		.loc 1 2694 33 view .LVU3122
ARM GAS  /tmp/ccJ0w3QJ.s 			page 283


 9906              	.LBE803:
 9907              	.LBE1161:
2950:src/keys.c    **** 		if (shift == SHIFT_H)
 9908              		.loc 1 2950 4 is_stmt 1 view .LVU3123
 9909              	.LBB1162:
 9910              	.LBI871:
 866:src/keys.c    **** 
 9911              		.loc 1 866 12 view .LVU3124
 9912              	.LBB905:
 869:src/keys.c    **** 		// Row 1
 9913              		.loc 1 869 2 view .LVU3125
 920:src/keys.c    **** 		STATE_UNFINISHED,
 9914              		.loc 1 920 2 view .LVU3126
 927:src/keys.c    **** 	int lc = keycode_to_linear(c);
 9915              		.loc 1 927 2 view .LVU3127
 9916              	.LBB880:
 9917              	.LBI880:
 102:src/keys.c    **** 	return set_shift(SHIFT_N);
 9918              		.loc 1 102 13 view .LVU3128
 9919              	.LBE880:
 9920              	.LBE905:
 9921              	.LBE1162:
 9922              	.LBE1238:
 9923              	.LBE1299:
 103:src/keys.c    **** }
 9924              		.loc 1 103 2 view .LVU3129
 9925              	.LBB1300:
 9926              	.LBB1239:
 9927              	.LBB1163:
 9928              	.LBB906:
 9929              	.LBB891:
 9930              	.LBB881:
 9931              	.LBI881:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 9932              		.loc 1 92 20 view .LVU3130
 9933              	.LBB882:
  93:src/keys.c    **** 	State2.shifts = shift;
 9934              		.loc 1 93 2 view .LVU3131
 9935              	.LBB883:
 9936              	.LBI883:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 9937              		.loc 1 84 13 view .LVU3132
 9938              	.LBB884:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9939              		.loc 1 85 2 view .LVU3133
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 9940              		.loc 1 85 18 is_stmt 0 view .LVU3134
 9941 147c FFF7FEFF 		bl	shift_down
 9942              	.LVL794:
  86:src/keys.c    **** }
 9943              		.loc 1 86 2 is_stmt 1 view .LVU3135
  86:src/keys.c    **** }
 9944              		.loc 1 86 52 is_stmt 0 view .LVU3136
 9945 1480 0346     		mov	r3, r0
 9946 1482 00B9     		cbnz	r0, .L752
 9947 1484 337C     		ldrb	r3, [r6, #16]	@ zero_extendqisi2
 9948              	.L752:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 284


 9949              	.LVL795:
  86:src/keys.c    **** }
 9950              		.loc 1 86 52 view .LVU3137
 9951              	.LBE884:
 9952              	.LBE883:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9953              		.loc 1 94 2 is_stmt 1 view .LVU3138
 9954              	.LBE882:
 9955              	.LBE881:
 9956              	.LBE891:
 9957              	.LBB892:
 9958              	.LBB893:
 151:src/keys.c    **** }
 9959              		.loc 1 151 23 is_stmt 0 view .LVU3139
 9960 1486 674A     		ldr	r2, .L1143+4
 9961              	.LBE893:
 9962              	.LBE892:
 929:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 9963              		.loc 1 929 21 view .LVU3140
 9964 1488 DFF8ACC1 		ldr	ip, .L1143+24
 9965              	.LBB896:
 9966              	.LBB894:
 151:src/keys.c    **** }
 9967              		.loc 1 151 23 view .LVU3141
 9968 148c 105D     		ldrb	r0, [r2, r4]	@ zero_extendqisi2
 9969              	.LBE894:
 9970              	.LBE896:
 929:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 9971              		.loc 1 929 21 view .LVU3142
 9972 148e 4200     		lsls	r2, r0, #1
 9973 1490 022B     		cmp	r3, #2
 9974 1492 08BF     		it	eq
 9975 1494 0132     		addeq	r2, r2, #1
 9976              	.LBB897:
 9977              	.LBB888:
 9978              	.LBB885:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9979              		.loc 1 94 16 view .LVU3143
 9980 1496 0021     		movs	r1, #0
 9981              	.LBE885:
 9982              	.LBE888:
 9983              	.LBE897:
 929:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 9984              		.loc 1 929 21 view .LVU3144
 9985 1498 3CF812B0 		ldrh	fp, [ip, r2, lsl #1]
 9986              	.LBB898:
 9987              	.LBB889:
 9988              	.LBB886:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 9989              		.loc 1 94 16 view .LVU3145
 9990 149c 3174     		strb	r1, [r6, #16]
  95:src/keys.c    **** 	return r;
 9991              		.loc 1 95 2 is_stmt 1 view .LVU3146
 9992 149e 0BF4704A 		and	r10, fp, #61440
 9993              	.LVL796:
  95:src/keys.c    **** 	return r;
 9994              		.loc 1 95 2 is_stmt 0 view .LVU3147
ARM GAS  /tmp/ccJ0w3QJ.s 			page 285


 9995              	.LBE886:
 9996              	.LBE889:
 9997              	.LBE898:
 931:src/keys.c    **** 		op &= ~NO_INT;
 9998              		.loc 1 931 5 view .LVU3148
 9999 14a2 BAF5704F 		cmp	r10, #61440
 10000              	.LBB899:
 10001              	.LBB890:
 10002              	.LBB887:
  95:src/keys.c    **** 	return r;
 10003              		.loc 1 95 19 view .LVU3149
 10004 14a6 7173     		strb	r1, [r6, #13]
  96:src/keys.c    **** }
 10005              		.loc 1 96 2 is_stmt 1 view .LVU3150
 10006              	.LVL797:
  96:src/keys.c    **** }
 10007              		.loc 1 96 2 is_stmt 0 view .LVU3151
 10008              	.LBE887:
 10009              	.LBE890:
 10010              	.LBE899:
 928:src/keys.c    **** 	int op = op_map[lc][shift == SHIFT_G];
 10011              		.loc 1 928 2 is_stmt 1 view .LVU3152
 10012              	.LBB900:
 10013              	.LBI892:
 139:src/keys.c    **** {
 10014              		.loc 1 139 12 view .LVU3153
 10015              	.LBB895:
 141:src/keys.c    **** 		 0,  1,  2,  3,  4,  5,   // K00 - K05
 10016              		.loc 1 141 2 view .LVU3154
 151:src/keys.c    **** }
 10017              		.loc 1 151 2 view .LVU3155
 151:src/keys.c    **** }
 10018              		.loc 1 151 2 is_stmt 0 view .LVU3156
 10019              	.LBE895:
 10020              	.LBE900:
 929:src/keys.c    **** 	int no_int = ((op & NO_INT) == NO_INT);
 10021              		.loc 1 929 2 is_stmt 1 view .LVU3157
 930:src/keys.c    **** 	if (no_int)
 10022              		.loc 1 930 2 view .LVU3158
 931:src/keys.c    **** 		op &= ~NO_INT;
 10023              		.loc 1 931 2 view .LVU3159
 931:src/keys.c    **** 		op &= ~NO_INT;
 10024              		.loc 1 931 5 is_stmt 0 view .LVU3160
 10025 14a8 00F04482 		beq	.L1126
 934:src/keys.c    **** 	case K00:
 10026              		.loc 1 934 2 is_stmt 1 view .LVU3161
 10027 14ac 282C     		cmp	r4, #40
 10028 14ae 65D8     		bhi	.L772
 10029 14b0 01A2     		adr	r2, .L827
 10030 14b2 52F824F0 		ldr	pc, [r2, r4, lsl #2]
 10031 14b6 00BF     		.p2align 2
 10032              	.L827:
 10033 14b8 B1150000 		.word	.L764+1
 10034 14bc 5D150000 		.word	.L762+1
 10035 14c0 7D150000 		.word	.L772+1
 10036 14c4 5D150000 		.word	.L762+1
 10037 14c8 7D150000 		.word	.L772+1
ARM GAS  /tmp/ccJ0w3QJ.s 			page 286


 10038 14cc 7D150000 		.word	.L772+1
 10039 14d0 7D150000 		.word	.L772+1
 10040 14d4 7D150000 		.word	.L772+1
 10041 14d8 7D150000 		.word	.L772+1
 10042 14dc 7D150000 		.word	.L772+1
 10043 14e0 7D150000 		.word	.L772+1
 10044 14e4 7D150000 		.word	.L772+1
 10045 14e8 95150000 		.word	.L761+1
 10046 14ec 7D150000 		.word	.L772+1
 10047 14f0 7D150000 		.word	.L772+1
 10048 14f4 7D150000 		.word	.L772+1
 10049 14f8 7D150000 		.word	.L772+1
 10050 14fc 7D150000 		.word	.L772+1
 10051 1500 3D160000 		.word	.L760+1
 10052 1504 ED150000 		.word	.L759+1
 10053 1508 7D150000 		.word	.L772+1
 10054 150c 7D150000 		.word	.L772+1
 10055 1510 7D150000 		.word	.L772+1
 10056 1514 7D150000 		.word	.L772+1
 10057 1518 7D150000 		.word	.L772+1
 10058 151c 7D150000 		.word	.L772+1
 10059 1520 7D150000 		.word	.L772+1
 10060 1524 7D150000 		.word	.L772+1
 10061 1528 7D150000 		.word	.L772+1
 10062 152c 7D150000 		.word	.L772+1
 10063 1530 6F160000 		.word	.L758+1
 10064 1534 CF150000 		.word	.L757+1
 10065 1538 39070000 		.word	.L755+1
 10066 153c 39070000 		.word	.L755+1
 10067 1540 7D150000 		.word	.L772+1
 10068 1544 7D150000 		.word	.L772+1
 10069 1548 7D150000 		.word	.L772+1
 10070 154c 7D150000 		.word	.L772+1
 10071 1550 7D150000 		.word	.L772+1
 10072 1554 39070000 		.word	.L755+1
 10073 1558 39070000 		.word	.L755+1
 10074              		.p2align 1
 10075              	.L762:
 955:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10076              		.loc 1 955 4 view .LVU3162
 955:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10077              		.loc 1 955 8 is_stmt 0 view .LVU3163
 10078 155c 334A     		ldr	r2, .L1143+12
 10079 155e 1268     		ldr	r2, [r2]
 10080 1560 92F8E827 		ldrb	r2, [r2, #2024]	@ zero_extendqisi2
 955:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10081              		.loc 1 955 7 view .LVU3164
 10082 1564 D107     		lsls	r1, r2, #31
 10083 1566 2AD4     		bmi	.L1056
 10084              	.LVL798:
 10085              	.L766:
1014:src/keys.c    **** 		return STATE_UNFINISHED;
 10086              		.loc 1 1014 2 is_stmt 1 view .LVU3165
1014:src/keys.c    **** 		return STATE_UNFINISHED;
 10087              		.loc 1 1014 5 is_stmt 0 view .LVU3166
 10088 1568 BAF5704F 		cmp	r10, #61440
 10089 156c 06D1     		bne	.L772
ARM GAS  /tmp/ccJ0w3QJ.s 			page 287


 10090              	.L754:
1014:src/keys.c    **** 		return STATE_UNFINISHED;
 10091              		.loc 1 1014 13 view .LVU3167
 10092 156e 2F4B     		ldr	r3, .L1143+12
 10093 1570 1B68     		ldr	r3, [r3]
 10094 1572 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10095 1576 D907     		lsls	r1, r3, #31
 10096 1578 3FF531A8 		bmi	.L1051
 10097              	.LVL799:
 10098              	.L772:
1017:src/keys.c    **** #undef NO_INT
 10099              		.loc 1 1017 2 is_stmt 1 view .LVU3168
 10100              	.LBB901:
 10101              	.LBI873:
 637:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10102              		.loc 1 637 12 view .LVU3169
 10103              	.LBB879:
 638:src/keys.c    **** 		const int nilop = argKIND(op);
 10104              		.loc 1 638 2 view .LVU3170
 638:src/keys.c    **** 		const int nilop = argKIND(op);
 10105              		.loc 1 638 6 is_stmt 0 view .LVU3171
 10106 157c 4FEA2B23 		asr	r3, fp, #8
 638:src/keys.c    **** 		const int nilop = argKIND(op);
 10107              		.loc 1 638 5 view .LVU3172
 10108 1580 012B     		cmp	r3, #1
 10109 1582 7FF409A8 		bne	.L581
 10110              	.LVL800:
 10111              	.LBB878:
 10112              	.LBI875:
 637:src/keys.c    **** 	if (opKIND(op) == KIND_NIL) {
 10113              		.loc 1 637 12 is_stmt 1 view .LVU3173
 10114              	.LBB877:
 639:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 10115              		.loc 1 639 3 view .LVU3174
 640:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 10116              		.loc 1 640 3 view .LVU3175
 639:src/keys.c    **** 		if (nilop >= OP_CLALL && nilop <= OP_CLPALL) {
 10117              		.loc 1 639 13 is_stmt 0 view .LVU3176
 10118 1586 5FFA8BF3 		uxtb	r3, fp
 640:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 10119              		.loc 1 640 25 view .LVU3177
 10120 158a 413B     		subs	r3, r3, #65
 640:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 10121              		.loc 1 640 6 view .LVU3178
 10122 158c 032B     		cmp	r3, #3
 10123 158e 3FF6E1A8 		bhi	.L837
 10124 1592 6AE4     		b	.L1048
 10125              	.LVL801:
 10126              	.L761:
 640:src/keys.c    **** 			State2.confirm = confirm_clall + (nilop - OP_CLALL);
 10127              		.loc 1 640 6 view .LVU3179
 10128              	.LBE877:
 10129              	.LBE878:
 10130              	.LBE879:
 10131              	.LBE901:
 966:src/keys.c    **** 			if (is_bad_cmdline())
 10132              		.loc 1 966 3 is_stmt 1 view .LVU3180
ARM GAS  /tmp/ccJ0w3QJ.s 			page 288


 966:src/keys.c    **** 			if (is_bad_cmdline())
 10133              		.loc 1 966 6 is_stmt 0 view .LVU3181
 10134 1594 012B     		cmp	r3, #1
 10135 1596 E7D1     		bne	.L766
 967:src/keys.c    **** 				return STATE_UNFINISHED;
 10136              		.loc 1 967 4 is_stmt 1 view .LVU3182
 967:src/keys.c    **** 				return STATE_UNFINISHED;
 10137              		.loc 1 967 8 is_stmt 0 view .LVU3183
 10138 1598 FFF7FEFF 		bl	is_bad_cmdline
 10139              	.LVL802:
 967:src/keys.c    **** 				return STATE_UNFINISHED;
 10140              		.loc 1 967 7 view .LVU3184
 10141 159c 0028     		cmp	r0, #0
 10142 159e 7FF41EA8 		bne	.L1051
 969:src/keys.c    **** 			State2.alphas = 1;
 10143              		.loc 1 969 4 is_stmt 1 view .LVU3185
 10144 15a2 FFF7FEFF 		bl	process_cmdline_set_lift
 10145              	.LVL803:
 970:src/keys.c    **** 		}
 10146              		.loc 1 970 4 view .LVU3186
 970:src/keys.c    **** 		}
 10147              		.loc 1 970 18 is_stmt 0 view .LVU3187
 10148 15a6 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 10149 15a8 43F00803 		orr	r3, r3, #8
 10150 15ac B375     		strb	r3, [r6, #22]
 10151 15ae DBE7     		b	.L766
 10152              	.LVL804:
 10153              	.L764:
 936:src/keys.c    **** 	    State2.hyp = 1;
 10154              		.loc 1 936 4 is_stmt 1 view .LVU3188
 936:src/keys.c    **** 	    State2.hyp = 1;
 10155              		.loc 1 936 8 is_stmt 0 view .LVU3189
 10156 15b0 1E4A     		ldr	r2, .L1143+12
 10157 15b2 1268     		ldr	r2, [r2]
 10158 15b4 92F8E827 		ldrb	r2, [r2, #2024]	@ zero_extendqisi2
 936:src/keys.c    **** 	    State2.hyp = 1;
 10159              		.loc 1 936 7 view .LVU3190
 10160 15b8 D407     		lsls	r4, r2, #31
 10161 15ba 40F1A582 		bpl	.L1127
 10162              	.L1056:
 955:src/keys.c    **** 			return check_f_key(lc, op_map2[lc]);
 10163              		.loc 1 955 20 view .LVU3191
 10164 15be 012B     		cmp	r3, #1
 10165 15c0 00F0B082 		beq	.L1128
1014:src/keys.c    **** 		return STATE_UNFINISHED;
 10166              		.loc 1 1014 2 is_stmt 1 view .LVU3192
1014:src/keys.c    **** 		return STATE_UNFINISHED;
 10167              		.loc 1 1014 5 is_stmt 0 view .LVU3193
 10168 15c4 BAF5704F 		cmp	r10, #61440
 10169 15c8 D8D1     		bne	.L772
 10170 15ca FFF708B8 		b	.L1051
 10171              	.L757:
 986:src/keys.c    **** 			return STATE_UNFINISHED;
 10172              		.loc 1 986 3 is_stmt 1 view .LVU3194
 986:src/keys.c    **** 			return STATE_UNFINISHED;
 10173              		.loc 1 986 7 is_stmt 0 view .LVU3195
 10174 15ce FFF7FEFF 		bl	is_bad_cmdline
ARM GAS  /tmp/ccJ0w3QJ.s 			page 289


 10175              	.LVL805:
 986:src/keys.c    **** 			return STATE_UNFINISHED;
 10176              		.loc 1 986 6 view .LVU3196
 10177 15d2 0446     		mov	r4, r0
 10178              	.LVL806:
 986:src/keys.c    **** 			return STATE_UNFINISHED;
 10179              		.loc 1 986 6 view .LVU3197
 10180 15d4 0028     		cmp	r0, #0
 10181 15d6 7FF402A8 		bne	.L1051
 988:src/keys.c    **** 		State2.test = op;
 10182              		.loc 1 988 3 is_stmt 1 view .LVU3198
 10183 15da FFF7FEFF 		bl	process_cmdline_set_lift
 10184              	.LVL807:
 989:src/keys.c    **** 		return STATE_UNFINISHED;
 10185              		.loc 1 989 3 view .LVU3199
 10186              	.LBE906:
 10187              	.LBE1163:
 10188              	.LBE1239:
 10189              	.LBE1300:
2976:src/keys.c    **** #ifdef DM42
 10190              		.loc 1 2976 7 is_stmt 0 view .LVU3200
 10191 15de A046     		mov	r8, r4
 10192              	.LBB1301:
 10193              	.LBB1240:
 10194              	.LBB1164:
 10195              	.LBB907:
 989:src/keys.c    **** 		return STATE_UNFINISHED;
 10196              		.loc 1 989 15 view .LVU3201
 10197 15e0 86F80FB0 		strb	fp, [r6, #15]
 990:src/keys.c    **** 
 10198              		.loc 1 990 3 is_stmt 1 view .LVU3202
 990:src/keys.c    **** 
 10199              		.loc 1 990 10 is_stmt 0 view .LVU3203
 10200 15e4 4FF0330B 		mov	fp, #51
 10201              	.LVL808:
 990:src/keys.c    **** 
 10202              		.loc 1 990 10 view .LVU3204
 10203 15e8 FEF798BD 		b	.L552
 10204              	.LVL809:
 10205              	.L759:
 975:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10206              		.loc 1 975 4 is_stmt 1 view .LVU3205
 975:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10207              		.loc 1 975 7 is_stmt 0 view .LVU3206
 10208 15ec 022B     		cmp	r3, #2
 10209 15ee BBD1     		bne	.L766
 975:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10210              		.loc 1 975 27 view .LVU3207
 10211 15f0 0E4B     		ldr	r3, .L1143+12
 10212              	.LVL810:
 975:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10213              		.loc 1 975 27 view .LVU3208
 10214 15f2 1B68     		ldr	r3, [r3]
 10215 15f4 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10216 15f8 DA07     		lsls	r2, r3, #31
 10217 15fa B5D5     		bpl	.L766
 975:src/keys.c    **** 	    return OP_SPEC | OP_D;
ARM GAS  /tmp/ccJ0w3QJ.s 			page 290


 10218              		.loc 1 975 45 view .LVU3209
 10219 15fc 0D20     		movs	r0, #13
 10220              	.LVL811:
 975:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10221              		.loc 1 975 45 view .LVU3210
 10222 15fe FFF7FEFF 		bl	intltr
 10223              	.LVL812:
 975:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10224              		.loc 1 975 42 view .LVU3211
 10225 1602 0028     		cmp	r0, #0
 10226 1604 B0D0     		beq	.L766
 10227              	.LVL813:
 975:src/keys.c    **** 	    return OP_SPEC | OP_D;
 10228              		.loc 1 975 42 view .LVU3212
 10229              	.LBE907:
 10230              	.LBE1164:
 10231              	.LBE1240:
 10232              	.LBE1301:
3197:src/keys.c    **** 	NonProgrammable = 0;
 10233              		.loc 1 3197 7 is_stmt 1 view .LVU3213
3197:src/keys.c    **** 	NonProgrammable = 0;
 10234              		.loc 1 3197 11 is_stmt 0 view .LVU3214
 10235 1606 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
3197:src/keys.c    **** 	NonProgrammable = 0;
 10236              		.loc 1 3197 10 view .LVU3215
 10237 1608 5A06     		lsls	r2, r3, #25
 10238 160a 40F17A82 		bpl	.L866
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10239              		.loc 1 3198 2 is_stmt 1 view .LVU3216
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10240              		.loc 1 3198 18 is_stmt 0 view .LVU3217
 10241 160e 084B     		ldr	r3, .L1143+16
 10242 1610 0022     		movs	r2, #0
 10243              	.LBB1302:
 10244              	.LBB1241:
 10245              	.LBB1165:
 10246              	.LBB908:
 976:src/keys.c    **** 	  }
 10247              		.loc 1 976 13 view .LVU3218
 10248 1612 4FF0120B 		mov	fp, #18
 10249              	.LBE908:
 10250              	.LBE1165:
 10251              	.LBE1241:
 10252              	.LBE1302:
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10253              		.loc 1 3198 18 view .LVU3219
 10254 1616 1A60     		str	r2, [r3]
3199:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10255              		.loc 1 3199 2 is_stmt 1 view .LVU3220
3199:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10256              		.loc 1 3199 32 is_stmt 0 view .LVU3221
 10257 1618 5846     		mov	r0, fp
 10258 161a FFF737B8 		b	.L818
 10259              	.L1144:
 10260 161e 00BF     		.align	2
 10261              	.L1143:
 10262 1620 00000000 		.word	.LANCHOR1
ARM GAS  /tmp/ccJ0w3QJ.s 			page 291


 10263 1624 00000000 		.word	.LANCHOR18
 10264 1628 00000000 		.word	.LANCHOR17
 10265 162c 00000000 		.word	main_ram
 10266 1630 00000000 		.word	NonProgrammable
 10267 1634 00000000 		.word	.LANCHOR9
 10268 1638 00000000 		.word	.LANCHOR19
 10269              	.LVL814:
 10270              	.L760:
 10271              	.LBB1303:
 10272              	.LBB1242:
 10273              	.LBB1166:
 10274              	.LBB909:
 980:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10275              		.loc 1 980 4 is_stmt 1 view .LVU3222
 980:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10276              		.loc 1 980 7 is_stmt 0 view .LVU3223
 10277 163c 022B     		cmp	r3, #2
 10278 163e 93D1     		bne	.L766
 980:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10279              		.loc 1 980 27 view .LVU3224
 10280 1640 B94B     		ldr	r3, .L1145
 10281              	.LVL815:
 980:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10282              		.loc 1 980 27 view .LVU3225
 10283 1642 1B68     		ldr	r3, [r3]
 10284 1644 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
 10285 1648 DB07     		lsls	r3, r3, #31
 10286 164a 8DD5     		bpl	.L766
 980:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10287              		.loc 1 980 45 view .LVU3226
 10288 164c 0E20     		movs	r0, #14
 10289              	.LVL816:
 980:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10290              		.loc 1 980 45 view .LVU3227
 10291 164e FFF7FEFF 		bl	intltr
 10292              	.LVL817:
 980:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10293              		.loc 1 980 42 view .LVU3228
 10294 1652 0028     		cmp	r0, #0
 10295 1654 88D0     		beq	.L766
 10296              	.LVL818:
 980:src/keys.c    **** 	    return OP_SPEC | OP_E;
 10297              		.loc 1 980 42 view .LVU3229
 10298              	.LBE909:
 10299              	.LBE1166:
 10300              	.LBE1242:
 10301              	.LBE1303:
3197:src/keys.c    **** 	NonProgrammable = 0;
 10302              		.loc 1 3197 7 is_stmt 1 view .LVU3230
3197:src/keys.c    **** 	NonProgrammable = 0;
 10303              		.loc 1 3197 11 is_stmt 0 view .LVU3231
 10304 1656 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
3197:src/keys.c    **** 	NonProgrammable = 0;
 10305              		.loc 1 3197 10 view .LVU3232
 10306 1658 5B06     		lsls	r3, r3, #25
 10307 165a 40F16B82 		bpl	.L867
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
ARM GAS  /tmp/ccJ0w3QJ.s 			page 292


 10308              		.loc 1 3198 2 is_stmt 1 view .LVU3233
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10309              		.loc 1 3198 18 is_stmt 0 view .LVU3234
 10310 165e B34B     		ldr	r3, .L1145+4
 10311 1660 0022     		movs	r2, #0
 10312              	.LBB1304:
 10313              	.LBB1243:
 10314              	.LBB1167:
 10315              	.LBB910:
 981:src/keys.c    **** 	  }
 10316              		.loc 1 981 13 view .LVU3235
 10317 1662 4FF0130B 		mov	fp, #19
 10318              	.LBE910:
 10319              	.LBE1167:
 10320              	.LBE1243:
 10321              	.LBE1304:
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10322              		.loc 1 3198 18 view .LVU3236
 10323 1666 1A60     		str	r2, [r3]
3199:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10324              		.loc 1 3199 2 is_stmt 1 view .LVU3237
3199:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10325              		.loc 1 3199 32 is_stmt 0 view .LVU3238
 10326 1668 5846     		mov	r0, fp
 10327 166a FFF70FB8 		b	.L818
 10328              	.LVL819:
 10329              	.L758:
 10330              	.LBB1305:
 10331              	.LBB1244:
 10332              	.LBB1168:
 10333              	.LBB911:
 994:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10334              		.loc 1 994 3 is_stmt 1 view .LVU3239
 10335 166e 0093     		str	r3, [sp]
 994:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10336              		.loc 1 994 18 is_stmt 0 view .LVU3240
 10337 1670 FFF7FEFF 		bl	shift_down
 10338              	.LVL820:
 994:src/keys.c    **** 			State2.trace = (shift == SHIFT_F);
 10339              		.loc 1 994 6 view .LVU3241
 10340 1674 009B     		ldr	r3, [sp]
 10341 1676 0028     		cmp	r0, #0
 10342 1678 3FF45EA8 		beq	.L755
 995:src/keys.c    **** 			return STATE_UNFINISHED;
 10343              		.loc 1 995 4 is_stmt 1 view .LVU3242
 995:src/keys.c    **** 			return STATE_UNFINISHED;
 10344              		.loc 1 995 26 is_stmt 0 view .LVU3243
 10345 167c 5C1E     		subs	r4, r3, #1
 10346              	.LVL821:
 995:src/keys.c    **** 			return STATE_UNFINISHED;
 10347              		.loc 1 995 17 view .LVU3244
 10348 167e F27D     		ldrb	r2, [r6, #23]	@ zero_extendqisi2
 995:src/keys.c    **** 			return STATE_UNFINISHED;
 10349              		.loc 1 995 26 view .LVU3245
 10350 1680 6342     		rsbs	r3, r4, #0
 10351 1682 6341     		adcs	r3, r3, r4
 995:src/keys.c    **** 			return STATE_UNFINISHED;
ARM GAS  /tmp/ccJ0w3QJ.s 			page 293


 10352              		.loc 1 995 17 view .LVU3246
 10353 1684 63F3C712 		bfi	r2, r3, #7, #1
 10354 1688 F275     		strb	r2, [r6, #23]
 996:src/keys.c    **** 		}
 10355              		.loc 1 996 4 is_stmt 1 view .LVU3247
 996:src/keys.c    **** 		}
 10356              		.loc 1 996 11 is_stmt 0 view .LVU3248
 10357 168a 4FF0330B 		mov	fp, #51
 10358              	.LVL822:
 996:src/keys.c    **** 		}
 10359              		.loc 1 996 11 view .LVU3249
 10360 168e FEF745BD 		b	.L552
 10361              	.LVL823:
 10362              	.L1114:
 996:src/keys.c    **** 		}
 10363              		.loc 1 996 11 view .LVU3250
 10364              	.LBE911:
 10365              	.LBE1168:
 10366              	.LBB1169:
 10367              	.LBB1073:
2572:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 10368              		.loc 1 2572 3 is_stmt 1 view .LVU3251
2572:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 10369              		.loc 1 2572 8 is_stmt 0 view .LVU3252
 10370 1692 4FEA8B34 		lsl	r4, fp, #14
2572:src/keys.c    **** 		if (! is_label_or_end_at(pc, 0))
 10371              		.loc 1 2572 6 view .LVU3253
 10372 1696 44F00104 		orr	r4, r4, #1
 10373              	.LVL824:
2573:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 10374              		.loc 1 2573 3 is_stmt 1 view .LVU3254
2573:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 10375              		.loc 1 2573 9 is_stmt 0 view .LVU3255
 10376 169a 2046     		mov	r0, r4
 10377              	.LVL825:
2573:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 10378              		.loc 1 2573 9 view .LVU3256
 10379 169c FFF7FEFF 		bl	is_label_or_end_at
 10380              	.LVL826:
2573:src/keys.c    **** 			pc = advance_to_next_label(pc, 1, 0);
 10381              		.loc 1 2573 6 view .LVU3257
 10382 16a0 0246     		mov	r2, r0
 10383 16a2 20B9     		cbnz	r0, .L673
2574:src/keys.c    **** 		State2.digval = pc;
 10384              		.loc 1 2574 4 is_stmt 1 view .LVU3258
2574:src/keys.c    **** 		State2.digval = pc;
 10385              		.loc 1 2574 9 is_stmt 0 view .LVU3259
 10386 16a4 2046     		mov	r0, r4
 10387 16a6 0121     		movs	r1, #1
 10388 16a8 FFF7FEFF 		bl	advance_to_next_label
 10389              	.LVL827:
 10390 16ac 0446     		mov	r4, r0
 10391              	.LVL828:
 10392              	.L673:
2575:src/keys.c    **** 		return STATE_UNFINISHED;
 10393              		.loc 1 2575 3 is_stmt 1 view .LVU3260
2575:src/keys.c    **** 		return STATE_UNFINISHED;
ARM GAS  /tmp/ccJ0w3QJ.s 			page 294


 10394              		.loc 1 2575 17 is_stmt 0 view .LVU3261
 10395 16ae 3481     		strh	r4, [r6, #8]	@ movhi
2576:src/keys.c    **** 	}
 10396              		.loc 1 2576 3 is_stmt 1 view .LVU3262
2576:src/keys.c    **** 	}
 10397              		.loc 1 2576 10 is_stmt 0 view .LVU3263
 10398 16b0 4FF0330B 		mov	fp, #51
 10399 16b4 FEF732BD 		b	.L552
 10400              	.LVL829:
 10401              	.L849:
2576:src/keys.c    **** 	}
 10402              		.loc 1 2576 10 view .LVU3264
 10403              	.LBE1073:
 10404              	.LBE1169:
 10405              	.LBB1170:
 10406              	.LBB696:
 10407              	.LBB689:
 318:src/keys.c    ****     }
 10408              		.loc 1 318 14 view .LVU3265
 10409 16b8 4FF0160B 		mov	fp, #22
 10410 16bc FFF774BA 		b	.L640
 10411              	.LVL830:
 10412              	.L775:
 318:src/keys.c    ****     }
 10413              		.loc 1 318 14 view .LVU3266
 10414              	.LBE689:
 10415              	.LBE696:
 10416              	.LBE1170:
 10417              	.LBB1171:
 10418              	.LBB1117:
1086:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 10419              		.loc 1 1086 3 is_stmt 1 view .LVU3267
1086:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 10420              		.loc 1 1086 7 is_stmt 0 view .LVU3268
 10421 16c0 994B     		ldr	r3, .L1145
 10422 16c2 1B68     		ldr	r3, [r3]
 10423 16c4 93F8E827 		ldrb	r2, [r3, #2024]	@ zero_extendqisi2
1086:src/keys.c    **** 			op = UState.nointseparator ? (OP_NIL | OP_INTSEP_ON) : (OP_NIL | OP_INTSEP_OFF);
 10424              		.loc 1 1086 6 view .LVU3269
 10425 16c8 D207     		lsls	r2, r2, #31
 10426 16ca 40F11881 		bpl	.L778
1087:src/keys.c    **** 		else
 10427              		.loc 1 1087 4 is_stmt 1 view .LVU3270
1087:src/keys.c    **** 		else
 10428              		.loc 1 1087 57 is_stmt 0 view .LVU3271
 10429 16ce 93F9E737 		ldrsb	r3, [r3, #2023]
 10430 16d2 002B     		cmp	r3, #0
 10431 16d4 40F2531B 		movw	fp, #339
 10432 16d8 A8BF     		it	ge
 10433 16da 4FF4AA7B 		movge	fp, #340
 10434 16de D6E5     		b	.L780
 10435              	.LVL831:
 10436              	.L1113:
1087:src/keys.c    **** 		else
 10437              		.loc 1 1087 57 view .LVU3272
 10438              	.LBE1117:
 10439              	.LBE1171:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 295


 10440              	.LBB1172:
 10441              	.LBB1074:
2565:src/keys.c    **** 	const int direct = State2.runmode;
 10442              		.loc 1 2565 37 view .LVU3273
 10443 16e0 5046     		mov	r0, r10
 10444 16e2 FFF7FEFF 		bl	getprog
 10445              	.LVL832:
2565:src/keys.c    **** 	const int direct = State2.runmode;
 10446              		.loc 1 2565 63 view .LVU3274
 10447 16e6 20F47063 		bic	r3, r0, #3840
 10448 16ea FFF738BB 		b	.L670
 10449              	.LVL833:
 10450              	.L1117:
2565:src/keys.c    **** 	const int direct = State2.runmode;
 10451              		.loc 1 2565 63 view .LVU3275
 10452              	.LBE1074:
 10453              	.LBE1172:
 10454              	.LBB1173:
 10455              	.LBB804:
 10456              	.LBB798:
2704:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10457              		.loc 1 2704 3 is_stmt 1 view .LVU3276
2704:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10458              		.loc 1 2704 19 is_stmt 0 view .LVU3277
 10459 16ee 3189     		ldrh	r1, [r6, #8]
2704:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10460              		.loc 1 2704 27 view .LVU3278
 10461 16f0 0A23     		movs	r3, #10
2704:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10462              		.loc 1 2704 32 view .LVU3279
 10463 16f2 03FB01A2 		mla	r2, r3, r1, r10
2704:src/keys.c    **** 		if (dv >= max || (! State2.local && (State2.digval >= g_max || dv >= g_max)))
 10464              		.loc 1 2704 37 view .LVU3280
 10465 16f6 6424     		movs	r4, #100
 10466 16f8 B2FBF4F3 		udiv	r3, r2, r4
 10467 16fc 04FB1323 		mls	r3, r4, r3, r2
 10468              	.LVL834:
2705:src/keys.c    **** 			dv = n;
 10469              		.loc 1 2705 3 is_stmt 1 view .LVU3281
2705:src/keys.c    **** 			dv = n;
 10470              		.loc 1 2705 6 is_stmt 0 view .LVU3282
 10471 1700 4B45     		cmp	r3, r9
 10472 1702 08DA     		bge	.L701
2705:src/keys.c    **** 			dv = n;
 10473              		.loc 1 2705 21 view .LVU3283
 10474 1704 B27D     		ldrb	r2, [r6, #22]	@ zero_extendqisi2
2705:src/keys.c    **** 			dv = n;
 10475              		.loc 1 2705 17 view .LVU3284
 10476 1706 D407     		lsls	r4, r2, #31
 10477 1708 3FF5B4AC 		bmi	.L1042
2705:src/keys.c    **** 			dv = n;
 10478              		.loc 1 2705 36 view .LVU3285
 10479 170c 8842     		cmp	r0, r1
 10480 170e 02DD     		ble	.L701
2705:src/keys.c    **** 			dv = n;
 10481              		.loc 1 2705 63 view .LVU3286
 10482 1710 9842     		cmp	r0, r3
ARM GAS  /tmp/ccJ0w3QJ.s 			page 296


 10483 1712 3FF7AFAC 		bgt	.L1042
 10484              	.L701:
2706:src/keys.c    **** 		State2.digval = dv;
 10485              		.loc 1 2706 4 is_stmt 1 view .LVU3287
2706:src/keys.c    **** 		State2.digval = dv;
 10486              		.loc 1 2706 7 is_stmt 0 view .LVU3288
 10487 1716 5346     		mov	r3, r10
 10488              	.LVL835:
2707:src/keys.c    **** 		goto reset_window;
 10489              		.loc 1 2707 3 is_stmt 1 view .LVU3289
 10490 1718 ACE4     		b	.L1042
 10491              	.LVL836:
 10492              	.L1119:
2707:src/keys.c    **** 		goto reset_window;
 10493              		.loc 1 2707 3 is_stmt 0 view .LVU3290
 10494              	.LBE798:
2715:src/keys.c    **** 		goto reset_window;
 10495              		.loc 1 2715 3 is_stmt 1 view .LVU3291
2715:src/keys.c    **** 		goto reset_window;
 10496              		.loc 1 2715 17 is_stmt 0 view .LVU3292
 10497 171a A6F808A0 		strh	r10, [r6, #8]	@ movhi
2716:src/keys.c    **** 	}
 10498              		.loc 1 2716 3 is_stmt 1 view .LVU3293
 10499 171e AAE4     		b	.L699
 10500              	.LVL837:
 10501              	.L1093:
2716:src/keys.c    **** 	}
 10502              		.loc 1 2716 3 is_stmt 0 view .LVU3294
 10503              	.LBE804:
 10504              	.LBE1173:
 10505              	.LBB1174:
 10506              	.LBB769:
2393:src/keys.c    **** 				break;
 10507              		.loc 1 2393 3 is_stmt 1 view .LVU3295
2393:src/keys.c    **** 				break;
 10508              		.loc 1 2393 6 is_stmt 0 view .LVU3296
 10509 1720 0029     		cmp	r1, #0
 10510 1722 7EF40AAF 		bne	.L660
2395:src/keys.c    **** 		if (State2.numdigit == 0)
 10511              		.loc 1 2395 3 is_stmt 1 view .LVU3297
 10512              	.LBB760:
 10513              	.LBI760:
2370:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
 10514              		.loc 1 2370 13 view .LVU3298
 10515              	.LBB761:
2372:src/keys.c    **** 	if (! State2.alphas )
 10516              		.loc 1 2372 2 view .LVU3299
2373:src/keys.c    **** 		State2.alphashift = 0;
 10517              		.loc 1 2373 6 is_stmt 0 view .LVU3300
 10518 1726 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
2372:src/keys.c    **** 	if (! State2.alphas )
 10519              		.loc 1 2372 15 view .LVU3301
 10520 1728 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
2373:src/keys.c    **** 		State2.alphashift = 0;
 10521              		.loc 1 2373 5 view .LVU3302
 10522 172a 1807     		lsls	r0, r3, #28
2374:src/keys.c    **** }
ARM GAS  /tmp/ccJ0w3QJ.s 			page 297


 10523              		.loc 1 2374 21 view .LVU3303
 10524 172c 5CBF     		itt	pl
 10525 172e 61F30413 		bfipl	r3, r1, #4, #1
 10526 1732 B375     		strbpl	r3, [r6, #22]
 10527              	.LBE761:
 10528              	.LBE760:
2396:src/keys.c    **** 			return STATE_UNFINISHED;
 10529              		.loc 1 2396 13 view .LVU3304
 10530 1734 F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
 10531              	.LBB763:
 10532              	.LBB762:
2372:src/keys.c    **** 	if (! State2.alphas )
 10533              		.loc 1 2372 15 view .LVU3305
 10534 1736 61F3C302 		bfi	r2, r1, #3, #1
 10535 173a 7275     		strb	r2, [r6, #21]
2373:src/keys.c    **** 		State2.alphashift = 0;
 10536              		.loc 1 2373 2 is_stmt 1 view .LVU3306
2374:src/keys.c    **** }
 10537              		.loc 1 2374 3 view .LVU3307
 10538              	.LBE762:
 10539              	.LBE763:
2396:src/keys.c    **** 			return STATE_UNFINISHED;
 10540              		.loc 1 2396 3 view .LVU3308
2396:src/keys.c    **** 			return STATE_UNFINISHED;
 10541              		.loc 1 2396 6 is_stmt 0 view .LVU3309
 10542 173c 002B     		cmp	r3, #0
 10543 173e 3EF44EAF 		beq	.L1051
2398:src/keys.c    **** 			State2.digval2 = 0;
 10544              		.loc 1 2398 8 is_stmt 1 view .LVU3310
2398:src/keys.c    **** 			State2.digval2 = 0;
 10545              		.loc 1 2398 11 is_stmt 0 view .LVU3311
 10546 1742 012B     		cmp	r3, #1
2399:src/keys.c    **** 		goto fin;
 10547              		.loc 1 2399 19 view .LVU3312
 10548 1744 4FF00003 		mov	r3, #0
2398:src/keys.c    **** 			State2.digval2 = 0;
 10549              		.loc 1 2398 11 view .LVU3313
 10550 1748 7EF419AF 		bne	.L662
2399:src/keys.c    **** 		goto fin;
 10551              		.loc 1 2399 4 is_stmt 1 view .LVU3314
2399:src/keys.c    **** 		goto fin;
 10552              		.loc 1 2399 19 is_stmt 0 view .LVU3315
 10553 174c B372     		strb	r3, [r6, #10]
 10554 174e FEF716BF 		b	.L662
 10555              	.L659:
2413:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 10556              		.loc 1 2413 3 is_stmt 1 view .LVU3316
2413:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 10557              		.loc 1 2413 6 is_stmt 0 view .LVU3317
 10558 1752 0129     		cmp	r1, #1
 10559 1754 36D0     		beq	.L1053
 10560              	.L665:
2405:src/keys.c    **** 			else
 10561              		.loc 1 2405 5 is_stmt 1 view .LVU3318
 10562              	.LBB764:
 10563              	.LBI764:
2370:src/keys.c    **** 	// Reset the multi flag and clear lowercase flag if not called from alpha mode
ARM GAS  /tmp/ccJ0w3QJ.s 			page 298


 10564              		.loc 1 2370 13 view .LVU3319
 10565              	.LBB765:
2372:src/keys.c    **** 	if (! State2.alphas )
 10566              		.loc 1 2372 2 view .LVU3320
2372:src/keys.c    **** 	if (! State2.alphas )
 10567              		.loc 1 2372 15 is_stmt 0 view .LVU3321
 10568 1756 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
2373:src/keys.c    **** 		State2.alphashift = 0;
 10569              		.loc 1 2373 6 view .LVU3322
 10570 1758 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
2372:src/keys.c    **** 	if (! State2.alphas )
 10571              		.loc 1 2372 15 view .LVU3323
 10572 175a 6FF3C302 		bfc	r2, #3, #1
 10573 175e 7275     		strb	r2, [r6, #21]
2373:src/keys.c    **** 		State2.alphashift = 0;
 10574              		.loc 1 2373 2 is_stmt 1 view .LVU3324
2373:src/keys.c    **** 		State2.alphashift = 0;
 10575              		.loc 1 2373 5 is_stmt 0 view .LVU3325
 10576 1760 13F00802 		ands	r2, r3, #8
 10577 1764 7EF43BAF 		bne	.L1051
 10578              	.LVL838:
 10579              	.L1049:
2373:src/keys.c    **** 		State2.alphashift = 0;
 10580              		.loc 1 2373 5 view .LVU3326
 10581              	.LBE765:
 10582              	.LBE764:
2414:src/keys.c    **** 		else
 10583              		.loc 1 2414 22 view .LVU3327
 10584 1768 62F30413 		bfi	r3, r2, #4, #1
 10585 176c B375     		strb	r3, [r6, #22]
 10586 176e FEF736BF 		b	.L1051
 10587              	.LVL839:
 10588              	.L658:
2403:src/keys.c    **** 			if (State2.numdigit == 0)
 10589              		.loc 1 2403 3 is_stmt 1 view .LVU3328
2403:src/keys.c    **** 			if (State2.numdigit == 0)
 10590              		.loc 1 2403 6 is_stmt 0 view .LVU3329
 10591 1772 0329     		cmp	r1, #3
 10592 1774 3EF4E8AE 		beq	.L663
2404:src/keys.c    **** 				reset_multi();
 10593              		.loc 1 2404 4 is_stmt 1 view .LVU3330
2404:src/keys.c    **** 				reset_multi();
 10594              		.loc 1 2404 14 is_stmt 0 view .LVU3331
 10595 1778 F37A     		ldrb	r3, [r6, #11]	@ zero_extendqisi2
2404:src/keys.c    **** 				reset_multi();
 10596              		.loc 1 2404 7 view .LVU3332
 10597 177a 002B     		cmp	r3, #0
 10598 177c EBD0     		beq	.L665
2407:src/keys.c    **** 			return STATE_UNFINISHED;
 10599              		.loc 1 2407 5 is_stmt 1 view .LVU3333
2407:src/keys.c    **** 			return STATE_UNFINISHED;
 10600              		.loc 1 2407 20 is_stmt 0 view .LVU3334
 10601 177e 013B     		subs	r3, r3, #1
 10602 1780 F372     		strb	r3, [r6, #11]
2408:src/keys.c    **** 		}
 10603              		.loc 1 2408 11 view .LVU3335
 10604 1782 4FF0330B 		mov	fp, #51
ARM GAS  /tmp/ccJ0w3QJ.s 			page 299


 10605 1786 FEF7C9BC 		b	.L552
 10606              	.LVL840:
 10607              	.L1095:
2429:src/keys.c    **** 		State2.numdigit = 1;
 10608              		.loc 1 2429 3 is_stmt 1 view .LVU3336
2430:src/keys.c    **** 		return STATE_UNFINISHED;
 10609              		.loc 1 2430 19 is_stmt 0 view .LVU3337
 10610 178a 0122     		movs	r2, #1
2429:src/keys.c    **** 		State2.numdigit = 1;
 10611              		.loc 1 2429 17 view .LVU3338
 10612 178c 3381     		strh	r3, [r6, #8]	@ movhi
2430:src/keys.c    **** 		return STATE_UNFINISHED;
 10613              		.loc 1 2430 3 is_stmt 1 view .LVU3339
2430:src/keys.c    **** 		return STATE_UNFINISHED;
 10614              		.loc 1 2430 19 is_stmt 0 view .LVU3340
 10615 178e F272     		strb	r2, [r6, #11]
2431:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 10616              		.loc 1 2431 3 is_stmt 1 view .LVU3341
2431:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 10617              		.loc 1 2431 10 is_stmt 0 view .LVU3342
 10618 1790 4FF0330B 		mov	fp, #51
 10619 1794 FEF7C2BC 		b	.L552
 10620              	.LVL841:
 10621              	.L1116:
2431:src/keys.c    **** 	} else if (State2.numdigit == 1) {
 10622              		.loc 1 2431 10 view .LVU3343
 10623              	.LBE769:
 10624              	.LBE1174:
 10625              	.LBB1175:
 10626              	.LBB805:
2698:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 10627              		.loc 1 2698 3 is_stmt 1 view .LVU3344
2698:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 10628              		.loc 1 2698 7 is_stmt 0 view .LVU3345
 10629 1798 FFF7FEFF 		bl	local_regs
 10630              	.LVL842:
2698:src/keys.c    **** 			State2.local = ! State2.local && ! State2.digval2;
 10631              		.loc 1 2698 6 view .LVU3346
 10632 179c 50B1     		cbz	r0, .L697
2699:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 10633              		.loc 1 2699 4 is_stmt 1 view .LVU3347
2699:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 10634              		.loc 1 2699 19 is_stmt 0 view .LVU3348
 10635 179e B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
2699:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 10636              		.loc 1 2699 34 view .LVU3349
 10637 17a0 B27A     		ldrb	r2, [r6, #10]	@ zero_extendqisi2
2699:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 10638              		.loc 1 2699 19 view .LVU3350
 10639 17a2 03F00101 		and	r1, r3, #1
2699:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
 10640              		.loc 1 2699 34 view .LVU3351
 10641 17a6 0A43     		orrs	r2, r1, r2
 10642 17a8 0CBF     		ite	eq
 10643 17aa 0122     		moveq	r2, #1
 10644 17ac 0022     		movne	r2, #0
2699:src/keys.c    **** 		State2.digval = State2.local ? 0 : regX_idx;
ARM GAS  /tmp/ccJ0w3QJ.s 			page 300


 10645              		.loc 1 2699 17 view .LVU3352
 10646 17ae 62F30003 		bfi	r3, r2, #0, #1
 10647 17b2 B375     		strb	r3, [r6, #22]
 10648              	.L697:
2700:src/keys.c    **** 		goto reset_window;
 10649              		.loc 1 2700 3 is_stmt 1 view .LVU3353
2700:src/keys.c    **** 		goto reset_window;
 10650              		.loc 1 2700 32 is_stmt 0 view .LVU3354
 10651 17b4 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
2700:src/keys.c    **** 		goto reset_window;
 10652              		.loc 1 2700 17 view .LVU3355
 10653 17b6 13F0010F 		tst	r3, #1
 10654 17ba 14BF     		ite	ne
 10655 17bc 0023     		movne	r3, #0
 10656 17be 6423     		moveq	r3, #100
 10657 17c0 3381     		strh	r3, [r6, #8]	@ movhi
2701:src/keys.c    **** 	}
 10658              		.loc 1 2701 3 is_stmt 1 view .LVU3356
 10659 17c2 58E4     		b	.L699
 10660              	.LVL843:
 10661              	.L1053:
2701:src/keys.c    **** 	}
 10662              		.loc 1 2701 3 is_stmt 0 view .LVU3357
 10663              	.LBE805:
 10664              	.LBE1175:
 10665              	.LBB1176:
 10666              	.LBB770:
2414:src/keys.c    **** 		else
 10667              		.loc 1 2414 4 is_stmt 1 view .LVU3358
2414:src/keys.c    **** 		else
 10668              		.loc 1 2414 34 is_stmt 0 view .LVU3359
 10669 17c4 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 10670 17c6 C3F30012 		ubfx	r2, r3, #4, #1
2414:src/keys.c    **** 		else
 10671              		.loc 1 2414 26 view .LVU3360
 10672 17ca C2F10102 		rsb	r2, r2, #1
 10673 17ce CBE7     		b	.L1049
 10674              	.LVL844:
 10675              	.L1096:
2433:src/keys.c    **** 		State2.numdigit = 2;
 10676              		.loc 1 2433 3 is_stmt 1 view .LVU3361
2434:src/keys.c    **** 		return STATE_UNFINISHED;
 10677              		.loc 1 2434 19 is_stmt 0 view .LVU3362
 10678 17d0 0222     		movs	r2, #2
2433:src/keys.c    **** 		State2.numdigit = 2;
 10679              		.loc 1 2433 18 view .LVU3363
 10680 17d2 B372     		strb	r3, [r6, #10]
2434:src/keys.c    **** 		return STATE_UNFINISHED;
 10681              		.loc 1 2434 3 is_stmt 1 view .LVU3364
2434:src/keys.c    **** 		return STATE_UNFINISHED;
 10682              		.loc 1 2434 19 is_stmt 0 view .LVU3365
 10683 17d4 F272     		strb	r2, [r6, #11]
2435:src/keys.c    **** 	}
 10684              		.loc 1 2435 3 is_stmt 1 view .LVU3366
2435:src/keys.c    **** 	}
 10685              		.loc 1 2435 10 is_stmt 0 view .LVU3367
 10686 17d6 4FF0330B 		mov	fp, #51
ARM GAS  /tmp/ccJ0w3QJ.s 			page 301


 10687 17da FEF79FBC 		b	.L552
 10688              	.LVL845:
 10689              	.L793:
2435:src/keys.c    **** 	}
 10690              		.loc 1 2435 10 view .LVU3368
 10691              	.LBE770:
 10692              	.LBE1176:
 10693              	.LBE1244:
 10694              	.LBE1305:
3197:src/keys.c    **** 	NonProgrammable = 0;
 10695              		.loc 1 3197 7 is_stmt 1 view .LVU3369
3197:src/keys.c    **** 	NonProgrammable = 0;
 10696              		.loc 1 3197 11 is_stmt 0 view .LVU3370
 10697 17de B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
3197:src/keys.c    **** 	NonProgrammable = 0;
 10698              		.loc 1 3197 10 view .LVU3371
 10699 17e0 5C06     		lsls	r4, r3, #25
 10700 17e2 40F1C781 		bpl	.L868
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10701              		.loc 1 3198 2 is_stmt 1 view .LVU3372
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10702              		.loc 1 3198 18 is_stmt 0 view .LVU3373
 10703 17e6 514B     		ldr	r3, .L1145+4
 10704 17e8 0022     		movs	r2, #0
 10705              	.LBB1306:
 10706              	.LBB1245:
 10707              	.LBB1177:
 10708              	.LBB715:
 763:src/keys.c    **** 	    }
 10709              		.loc 1 763 15 view .LVU3374
 10710 17ea 4FF0100B 		mov	fp, #16
 10711              	.LBE715:
 10712              	.LBE1177:
 10713              	.LBE1245:
 10714              	.LBE1306:
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10715              		.loc 1 3198 18 view .LVU3375
 10716 17ee 1A60     		str	r2, [r3]
3199:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10717              		.loc 1 3199 2 is_stmt 1 view .LVU3376
3199:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10718              		.loc 1 3199 32 is_stmt 0 view .LVU3377
 10719 17f0 5846     		mov	r0, fp
 10720 17f2 FEF74BBF 		b	.L818
 10721              	.LVL846:
 10722              	.L725:
 10723              	.LBB1307:
 10724              	.LBB1246:
 10725              	.LBB1178:
 10726              	.LBB860:
1491:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 10727              		.loc 1 1491 3 is_stmt 1 view .LVU3378
1491:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 10728              		.loc 1 1491 6 is_stmt 0 view .LVU3379
 10729 17f6 0128     		cmp	r0, #1
 10730 17f8 7FF4E8AC 		bne	.L724
 10731              	.LVL847:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 302


1491:src/keys.c    **** 			return OP_NIL | OP_RS;		// R/S
 10732              		.loc 1 1491 6 view .LVU3380
 10733              	.LBE860:
 10734              	.LBE1178:
 10735              	.LBE1246:
 10736              	.LBE1307:
3197:src/keys.c    **** 	NonProgrammable = 0;
 10737              		.loc 1 3197 7 is_stmt 1 view .LVU3381
3197:src/keys.c    **** 	NonProgrammable = 0;
 10738              		.loc 1 3197 10 is_stmt 0 view .LVU3382
 10739 17fc 5906     		lsls	r1, r3, #25
 10740 17fe 40F11C81 		bpl	.L865
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10741              		.loc 1 3198 2 is_stmt 1 view .LVU3383
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10742              		.loc 1 3198 18 is_stmt 0 view .LVU3384
 10743 1802 4A4B     		ldr	r3, .L1145+4
 10744 1804 0022     		movs	r2, #0
 10745              	.LVL848:
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10746              		.loc 1 3198 18 view .LVU3385
 10747 1806 1A60     		str	r2, [r3]
3199:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10748              		.loc 1 3199 2 is_stmt 1 view .LVU3386
3199:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10749              		.loc 1 3199 32 is_stmt 0 view .LVU3387
 10750 1808 40F23B10 		movw	r0, #315
 10751              	.LVL849:
3199:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10752              		.loc 1 3199 32 view .LVU3388
 10753 180c FEF73CBE 		b	.L816
 10754              	.LVL850:
 10755              	.L727:
 10756              	.LBB1308:
 10757              	.LBB1247:
 10758              	.LBB1179:
 10759              	.LBB861:
1482:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 10760              		.loc 1 1482 3 is_stmt 1 view .LVU3389
1482:src/keys.c    **** 			State2.alphashift = 1 - State2.alphashift;
 10761              		.loc 1 1482 6 is_stmt 0 view .LVU3390
 10762 1810 0128     		cmp	r0, #1
 10763 1812 D7D0     		beq	.L1053
1484:src/keys.c    **** 			return OP_NIL | OP_OFF;
 10764              		.loc 1 1484 8 is_stmt 1 view .LVU3391
1484:src/keys.c    **** 			return OP_NIL | OP_OFF;
 10765              		.loc 1 1484 11 is_stmt 0 view .LVU3392
 10766 1814 0328     		cmp	r0, #3
 10767 1816 00F01381 		beq	.L742
1486:src/keys.c    **** 			init_state();
 10768              		.loc 1 1486 8 is_stmt 1 view .LVU3393
1486:src/keys.c    **** 			init_state();
 10769              		.loc 1 1486 11 is_stmt 0 view .LVU3394
 10770 181a 0028     		cmp	r0, #0
 10771 181c 7EF4DFAE 		bne	.L1051
1487:src/keys.c    **** 		return STATE_UNFINISHED;
 10772              		.loc 1 1487 4 is_stmt 1 view .LVU3395
ARM GAS  /tmp/ccJ0w3QJ.s 			page 303


 10773 1820 FFF7FEFF 		bl	init_state
 10774              	.LVL851:
1488:src/keys.c    **** 
 10775              		.loc 1 1488 10 is_stmt 0 view .LVU3396
 10776 1824 4FF0330B 		mov	fp, #51
 10777 1828 FEF778BC 		b	.L552
 10778              	.LVL852:
 10779              	.L729:
1458:src/keys.c    **** 			if ( State2.runmode ) {
 10780              		.loc 1 1458 3 is_stmt 1 view .LVU3397
1458:src/keys.c    **** 			if ( State2.runmode ) {
 10781              		.loc 1 1458 6 is_stmt 0 view .LVU3398
 10782 182c 0028     		cmp	r0, #0
 10783 182e 7FF4CDAC 		bne	.L724
1459:src/keys.c    **** 				// Alpha scroll left
 10784              		.loc 1 1459 4 is_stmt 1 view .LVU3399
1459:src/keys.c    **** 				// Alpha scroll left
 10785              		.loc 1 1459 7 is_stmt 0 view .LVU3400
 10786 1832 5B06     		lsls	r3, r3, #25
 10787 1834 7EF569AF 		bpl	.L739
1461:src/keys.c    **** 				State2.alpha_pos = ( n < ( alen() + 5 ) / 6 ) ? n : alpha_pos;
 10788              		.loc 1 1461 5 is_stmt 1 view .LVU3401
 10789              	.LVL853:
1462:src/keys.c    **** 				return STATE_UNFINISHED;
 10790              		.loc 1 1462 5 view .LVU3402
1462:src/keys.c    **** 				return STATE_UNFINISHED;
 10791              		.loc 1 1462 32 is_stmt 0 view .LVU3403
 10792 1838 FFF7FEFF 		bl	alen
 10793              	.LVL854:
1462:src/keys.c    **** 				return STATE_UNFINISHED;
 10794              		.loc 1 1462 39 view .LVU3404
 10795 183c 0530     		adds	r0, r0, #5
1462:src/keys.c    **** 				return STATE_UNFINISHED;
 10796              		.loc 1 1462 22 view .LVU3405
 10797 183e 0B28     		cmp	r0, #11
 10798 1840 94BF     		ite	ls
 10799 1842 0023     		movls	r3, #0
 10800 1844 0123     		movhi	r3, #1
 10801 1846 7373     		strb	r3, [r6, #13]
1463:src/keys.c    **** 			}
 10802              		.loc 1 1463 5 is_stmt 1 view .LVU3406
1463:src/keys.c    **** 			}
 10803              		.loc 1 1463 12 is_stmt 0 view .LVU3407
 10804 1848 4FF0330B 		mov	fp, #51
 10805 184c FEF766BC 		b	.L552
 10806              	.LVL855:
 10807              	.L731:
1438:src/keys.c    **** 			break;
 10808              		.loc 1 1438 3 is_stmt 1 view .LVU3408
1438:src/keys.c    **** 			break;
 10809              		.loc 1 1438 24 is_stmt 0 view .LVU3409
 10810 1850 811E     		subs	r1, r0, #2
1438:src/keys.c    **** 			break;
 10811              		.loc 1 1438 6 view .LVU3410
 10812 1852 C9B2     		uxtb	r1, r1
 10813 1854 0129     		cmp	r1, #1
 10814 1856 7FF6B9AC 		bls	.L724
ARM GAS  /tmp/ccJ0w3QJ.s 			page 304


1440:src/keys.c    **** 			State2.multi = 1;
 10815              		.loc 1 1440 3 is_stmt 1 view .LVU3411
1440:src/keys.c    **** 			State2.multi = 1;
 10816              		.loc 1 1440 6 is_stmt 0 view .LVU3412
 10817 185a 0128     		cmp	r0, #1
 10818 185c 03D1     		bne	.L735
1440:src/keys.c    **** 			State2.multi = 1;
 10819              		.loc 1 1440 24 view .LVU3413
 10820 185e 13F04002 		ands	r2, r3, #64
 10821              	.LVL856:
1440:src/keys.c    **** 			State2.multi = 1;
 10822              		.loc 1 1440 24 view .LVU3414
 10823 1862 00F0D580 		beq	.L1129
 10824              	.L735:
1446:src/keys.c    **** 		State2.alphashift = 0;
 10825              		.loc 1 1446 3 is_stmt 1 view .LVU3415
1447:src/keys.c    **** 		return op;
 10826              		.loc 1 1447 3 view .LVU3416
1446:src/keys.c    **** 		State2.alphashift = 0;
 10827              		.loc 1 1446 17 is_stmt 0 view .LVU3417
 10828 1866 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
 10829 1868 23F01803 		bic	r3, r3, #24
 10830 186c B375     		strb	r3, [r6, #22]
1448:src/keys.c    **** 
 10831              		.loc 1 1448 3 is_stmt 1 view .LVU3418
1448:src/keys.c    **** 
 10832              		.loc 1 1448 10 is_stmt 0 view .LVU3419
 10833 186e 4FF0330B 		mov	fp, #51
 10834 1872 FEF753BC 		b	.L552
 10835              	.LVL857:
 10836              	.L732:
1428:src/keys.c    **** 			init_arg(RARG_ARCL);
 10837              		.loc 1 1428 3 is_stmt 1 view .LVU3420
1428:src/keys.c    **** 			init_arg(RARG_ARCL);
 10838              		.loc 1 1428 6 is_stmt 0 view .LVU3421
 10839 1876 0128     		cmp	r0, #1
 10840 1878 00F02781 		beq	.L1130
1431:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 10841              		.loc 1 1431 10 is_stmt 1 view .LVU3422
1431:src/keys.c    **** 			init_arg(RARG_VIEW_REG);
 10842              		.loc 1 1431 13 is_stmt 0 view .LVU3423
 10843 187c 0328     		cmp	r0, #3
 10844 187e 7FF4A5AC 		bne	.L724
1432:src/keys.c    **** 			return STATE_UNFINISHED;
 10845              		.loc 1 1432 4 is_stmt 1 view .LVU3424
 10846              	.LVL858:
 10847              	.LBB844:
 10848              	.LBI844:
 519:src/keys.c    **** 	if (is_bad_cmdline())
 10849              		.loc 1 519 13 view .LVU3425
 10850              	.LBB845:
 520:src/keys.c    **** 		return;
 10851              		.loc 1 520 2 view .LVU3426
 520:src/keys.c    **** 		return;
 10852              		.loc 1 520 6 is_stmt 0 view .LVU3427
 10853 1882 FFF7FEFF 		bl	is_bad_cmdline
 10854              	.LVL859:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 305


 520:src/keys.c    **** 		return;
 10855              		.loc 1 520 5 view .LVU3428
 10856 1886 0346     		mov	r3, r0
 10857 1888 0028     		cmp	r0, #0
 10858 188a 7EF4A8AE 		bne	.L1051
 10859 188e 7320     		movs	r0, #115
 10860              	.LBE845:
 10861              	.LBE844:
 10862              	.LBE861:
 10863              	.LBE1179:
 10864              	.LBE1247:
 10865              	.LBE1308:
2976:src/keys.c    **** #ifdef DM42
 10866              		.loc 1 2976 7 view .LVU3429
 10867 1890 9846     		mov	r8, r3
 10868              	.LBB1309:
 10869              	.LBB1248:
 10870              	.LBB1180:
 10871              	.LBB862:
1433:src/keys.c    **** 		}
 10872              		.loc 1 1433 11 view .LVU3430
 10873 1892 4FF0330B 		mov	fp, #51
 10874              	.LBB847:
 10875              	.LBB846:
 10876 1896 FFF7FEFF 		bl	init_arg.part.0
 10877              	.LVL860:
 10878 189a FEF73FBC 		b	.L552
 10879              	.LVL861:
 10880              	.L733:
1433:src/keys.c    **** 		}
 10881              		.loc 1 1433 11 view .LVU3431
 10882              	.LBE846:
 10883              	.LBE847:
1421:src/keys.c    **** 			init_arg(RARG_ASTO);
 10884              		.loc 1 1421 3 is_stmt 1 view .LVU3432
1421:src/keys.c    **** 			init_arg(RARG_ASTO);
 10885              		.loc 1 1421 6 is_stmt 0 view .LVU3433
 10886 189e 0128     		cmp	r0, #1
 10887 18a0 7FF494AC 		bne	.L724
1422:src/keys.c    **** 			return STATE_UNFINISHED;
 10888              		.loc 1 1422 4 is_stmt 1 view .LVU3434
 10889              	.LVL862:
 10890              	.LBB848:
 10891              	.LBI848:
 519:src/keys.c    **** 	if (is_bad_cmdline())
 10892              		.loc 1 519 13 view .LVU3435
 10893              	.LBB849:
 520:src/keys.c    **** 		return;
 10894              		.loc 1 520 2 view .LVU3436
 520:src/keys.c    **** 		return;
 10895              		.loc 1 520 6 is_stmt 0 view .LVU3437
 10896 18a4 FFF7FEFF 		bl	is_bad_cmdline
 10897              	.LVL863:
 520:src/keys.c    **** 		return;
 10898              		.loc 1 520 5 view .LVU3438
 10899 18a8 0346     		mov	r3, r0
 10900 18aa 0028     		cmp	r0, #0
ARM GAS  /tmp/ccJ0w3QJ.s 			page 306


 10901 18ac 7EF497AE 		bne	.L1051
 10902 18b0 2620     		movs	r0, #38
 10903              	.LBE849:
 10904              	.LBE848:
 10905              	.LBE862:
 10906              	.LBE1180:
 10907              	.LBE1248:
 10908              	.LBE1309:
2976:src/keys.c    **** #ifdef DM42
 10909              		.loc 1 2976 7 view .LVU3439
 10910 18b2 9846     		mov	r8, r3
 10911              	.LBB1310:
 10912              	.LBB1249:
 10913              	.LBB1181:
 10914              	.LBB863:
1423:src/keys.c    **** 		}
 10915              		.loc 1 1423 11 view .LVU3440
 10916 18b4 4FF0330B 		mov	fp, #51
 10917              	.LBB851:
 10918              	.LBB850:
 10919 18b8 FFF7FEFF 		bl	init_arg.part.0
 10920              	.LVL864:
 10921 18bc FEF72EBC 		b	.L552
 10922              	.LVL865:
 10923              	.L792:
1423:src/keys.c    **** 		}
 10924              		.loc 1 1423 11 view .LVU3441
 10925              	.LBE850:
 10926              	.LBE851:
 10927              	.LBE863:
 10928              	.LBE1181:
 10929              	.LBE1249:
 10930              	.LBE1310:
3197:src/keys.c    **** 	NonProgrammable = 0;
 10931              		.loc 1 3197 7 is_stmt 1 view .LVU3442
3197:src/keys.c    **** 	NonProgrammable = 0;
 10932              		.loc 1 3197 11 is_stmt 0 view .LVU3443
 10933 18c0 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
3197:src/keys.c    **** 	NonProgrammable = 0;
 10934              		.loc 1 3197 10 view .LVU3444
 10935 18c2 5A06     		lsls	r2, r3, #25
 10936 18c4 40F10F81 		bpl	.L871
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10937              		.loc 1 3198 2 is_stmt 1 view .LVU3445
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10938              		.loc 1 3198 18 is_stmt 0 view .LVU3446
 10939 18c8 184B     		ldr	r3, .L1145+4
 10940 18ca 0022     		movs	r2, #0
 10941              	.LBB1311:
 10942              	.LBB1250:
 10943              	.LBB1182:
 10944              	.LBB716:
 755:src/keys.c    **** 	    }
 10945              		.loc 1 755 15 view .LVU3447
 10946 18cc 4FF00F0B 		mov	fp, #15
 10947              	.LBE716:
 10948              	.LBE1182:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 307


 10949              	.LBE1250:
 10950              	.LBE1311:
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10951              		.loc 1 3198 18 view .LVU3448
 10952 18d0 1A60     		str	r2, [r3]
3199:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10953              		.loc 1 3199 2 is_stmt 1 view .LVU3449
3199:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10954              		.loc 1 3199 32 is_stmt 0 view .LVU3450
 10955 18d2 5846     		mov	r0, fp
 10956 18d4 FEF7DABE 		b	.L818
 10957              	.LVL866:
 10958              	.L795:
3197:src/keys.c    **** 	NonProgrammable = 0;
 10959              		.loc 1 3197 7 is_stmt 1 view .LVU3451
3197:src/keys.c    **** 	NonProgrammable = 0;
 10960              		.loc 1 3197 11 is_stmt 0 view .LVU3452
 10961 18d8 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
3197:src/keys.c    **** 	NonProgrammable = 0;
 10962              		.loc 1 3197 10 view .LVU3453
 10963 18da 5906     		lsls	r1, r3, #25
 10964 18dc 40F10E81 		bpl	.L870
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10965              		.loc 1 3198 2 is_stmt 1 view .LVU3454
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10966              		.loc 1 3198 18 is_stmt 0 view .LVU3455
 10967 18e0 124B     		ldr	r3, .L1145+4
 10968 18e2 0022     		movs	r2, #0
 10969              	.LBB1312:
 10970              	.LBB1251:
 10971              	.LBB1183:
 10972              	.LBB717:
 779:src/keys.c    **** 	    }
 10973              		.loc 1 779 15 view .LVU3456
 10974 18e4 4FF0140B 		mov	fp, #20
 10975              	.LBE717:
 10976              	.LBE1183:
 10977              	.LBE1251:
 10978              	.LBE1312:
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 10979              		.loc 1 3198 18 view .LVU3457
 10980 18e8 1A60     		str	r2, [r3]
3199:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10981              		.loc 1 3199 2 is_stmt 1 view .LVU3458
3199:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10982              		.loc 1 3199 32 is_stmt 0 view .LVU3459
 10983 18ea 5846     		mov	r0, fp
 10984 18ec FEF7CEBE 		b	.L818
 10985              	.LVL867:
 10986              	.L646:
3199:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 10987              		.loc 1 3199 32 view .LVU3460
 10988 18f0 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
 10989              	.LBB1313:
 10990              	.LBB1252:
 10991              	.LBB1184:
 10992              	.LBB697:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 308


 10993              	.LBB690:
 339:src/keys.c    **** #ifndef WINGUI
 10994              		.loc 1 339 8 view .LVU3461
 10995 18f2 0F4B     		ldr	r3, .L1145+8
 345:src/keys.c    ****   }
 10996              		.loc 1 345 9 view .LVU3462
 10997 18f4 0C21     		movs	r1, #12
 341:src/keys.c    **** #else
 10998              		.loc 1 341 73 view .LVU3463
 10999 18f6 4FF0020C 		mov	ip, #2
 11000 18fa FEF71BBD 		b	.L645
 11001              	.LVL868:
 11002              	.L778:
 341:src/keys.c    **** #else
 11003              		.loc 1 341 73 view .LVU3464
 11004              	.LBE690:
 11005              	.LBE697:
 11006              	.LBE1184:
 11007              	.LBB1185:
 11008              	.LBB1118:
1092:src/keys.c    **** #endif
 11009              		.loc 1 1092 4 is_stmt 1 view .LVU3465
1092:src/keys.c    **** #endif
 11010              		.loc 1 1092 8 is_stmt 0 view .LVU3466
 11011 18fe 93F8E737 		ldrb	r3, [r3, #2023]	@ zero_extendqisi2
1092:src/keys.c    **** #endif
 11012              		.loc 1 1092 7 view .LVU3467
 11013 1902 9B06     		lsls	r3, r3, #26
 11014 1904 7FF5B2AC 		bpl	.L777
1092:src/keys.c    **** #endif
 11015              		.loc 1 1092 29 view .LVU3468
 11016 1908 40F24F1B 		movw	fp, #335
 11017 190c BFE4     		b	.L780
 11018              	.LVL869:
 11019              	.L1123:
1116:src/keys.c    **** #undef _RARG
 11020              		.loc 1 1116 2 is_stmt 1 view .LVU3469
1116:src/keys.c    **** #undef _RARG
 11021              		.loc 1 1116 9 is_stmt 0 view .LVU3470
 11022 190e 064B     		ldr	r3, .L1145
 11023 1910 1B68     		ldr	r3, [r3]
 11024 1912 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1116:src/keys.c    **** #undef _RARG
 11025              		.loc 1 1116 57 view .LVU3471
 11026 1916 DC07     		lsls	r4, r3, #31
 11027 1918 7FF5B9AC 		bpl	.L780
 11028              	.LVL870:
1116:src/keys.c    **** #undef _RARG
 11029              		.loc 1 1116 21 view .LVU3472
 11030 191c 1AF4804F 		tst	r10, #16384
 11031 1920 7EF45DAE 		bne	.L1051
 11032 1924 B3E4     		b	.L780
 11033              	.L1146:
 11034 1926 00BF     		.align	2
 11035              	.L1145:
 11036 1928 00000000 		.word	main_ram
 11037 192c 00000000 		.word	NonProgrammable
ARM GAS  /tmp/ccJ0w3QJ.s 			page 309


 11038 1930 00000000 		.word	.LANCHOR11
 11039              	.LVL871:
 11040              	.L1126:
1116:src/keys.c    **** #undef _RARG
 11041              		.loc 1 1116 21 view .LVU3473
 11042              	.LBE1118:
 11043              	.LBE1185:
 11044              	.LBB1186:
 11045              	.LBB912:
 932:src/keys.c    **** 
 11046              		.loc 1 932 3 is_stmt 1 view .LVU3474
 932:src/keys.c    **** 
 11047              		.loc 1 932 6 is_stmt 0 view .LVU3475
 11048 1934 2BF4704B 		bic	fp, fp, #61440
 11049              	.LVL872:
 934:src/keys.c    **** 	case K00:
 11050              		.loc 1 934 2 is_stmt 1 view .LVU3476
 11051 1938 282C     		cmp	r4, #40
 11052 193a 3FF618AE 		bhi	.L754
 11053 193e 01A2     		adr	r2, .L756
 11054 1940 52F824F0 		ldr	pc, [r2, r4, lsl #2]
 11055              		.p2align 2
 11056              	.L756:
 11057 1944 B1150000 		.word	.L764+1
 11058 1948 5D150000 		.word	.L762+1
 11059 194c 6F150000 		.word	.L754+1
 11060 1950 5D150000 		.word	.L762+1
 11061 1954 6F150000 		.word	.L754+1
 11062 1958 6F150000 		.word	.L754+1
 11063 195c 6F150000 		.word	.L754+1
 11064 1960 6F150000 		.word	.L754+1
 11065 1964 6F150000 		.word	.L754+1
 11066 1968 6F150000 		.word	.L754+1
 11067 196c 6F150000 		.word	.L754+1
 11068 1970 6F150000 		.word	.L754+1
 11069 1974 95150000 		.word	.L761+1
 11070 1978 6F150000 		.word	.L754+1
 11071 197c 6F150000 		.word	.L754+1
 11072 1980 6F150000 		.word	.L754+1
 11073 1984 6F150000 		.word	.L754+1
 11074 1988 6F150000 		.word	.L754+1
 11075 198c 3D160000 		.word	.L760+1
 11076 1990 ED150000 		.word	.L759+1
 11077 1994 6F150000 		.word	.L754+1
 11078 1998 6F150000 		.word	.L754+1
 11079 199c 6F150000 		.word	.L754+1
 11080 19a0 6F150000 		.word	.L754+1
 11081 19a4 6F150000 		.word	.L754+1
 11082 19a8 6F150000 		.word	.L754+1
 11083 19ac 6F150000 		.word	.L754+1
 11084 19b0 6F150000 		.word	.L754+1
 11085 19b4 6F150000 		.word	.L754+1
 11086 19b8 6F150000 		.word	.L754+1
 11087 19bc 6F160000 		.word	.L758+1
 11088 19c0 CF150000 		.word	.L757+1
 11089 19c4 39070000 		.word	.L755+1
 11090 19c8 39070000 		.word	.L755+1
ARM GAS  /tmp/ccJ0w3QJ.s 			page 310


 11091 19cc 6F150000 		.word	.L754+1
 11092 19d0 6F150000 		.word	.L754+1
 11093 19d4 6F150000 		.word	.L754+1
 11094 19d8 6F150000 		.word	.L754+1
 11095 19dc 6F150000 		.word	.L754+1
 11096 19e0 39070000 		.word	.L755+1
 11097 19e4 39070000 		.word	.L755+1
 11098              	.LVL873:
 11099              		.p2align 1
 11100              	.L1122:
 934:src/keys.c    **** 	case K00:
 11101              		.loc 1 934 2 is_stmt 0 view .LVU3477
 11102              	.LBE912:
 11103              	.LBE1186:
 11104              	.LBB1187:
 11105              	.LBB1119:
1102:src/keys.c    **** 			set_pc(0);
 11106              		.loc 1 1102 43 view .LVU3478
 11107 19e8 B3F8EE37 		ldrh	r3, [r3, #2030]
 11108 19ec 012B     		cmp	r3, #1
 11109 19ee 7FF43DAC 		bne	.L777
1103:src/keys.c    **** 		break;
 11110              		.loc 1 1103 4 is_stmt 1 view .LVU3479
 11111 19f2 FFF7FEFF 		bl	set_pc
 11112              	.LVL874:
 11113 19f6 39E4     		b	.L777
 11114              	.LVL875:
 11115              	.L737:
1103:src/keys.c    **** 		break;
 11116              		.loc 1 1103 4 is_stmt 0 view .LVU3480
 11117              	.LBE1119:
 11118              	.LBE1187:
 11119              	.LBB1188:
 11120              	.LBB864:
1453:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11121              		.loc 1 1453 3 is_stmt 1 view .LVU3481
1453:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11122              		.loc 1 1453 6 is_stmt 0 view .LVU3482
 11123 19f8 0328     		cmp	r0, #3
 11124 19fa 7FF4E7AB 		bne	.L724
 11125              	.LVL876:
1453:src/keys.c    **** 			return OP_NIL | OP_CLRALPHA;
 11126              		.loc 1 1453 6 view .LVU3483
 11127              	.LBE864:
 11128              	.LBE1188:
 11129              	.LBE1252:
 11130              	.LBE1313:
3197:src/keys.c    **** 	NonProgrammable = 0;
 11131              		.loc 1 3197 7 is_stmt 1 view .LVU3484
3197:src/keys.c    **** 	NonProgrammable = 0;
 11132              		.loc 1 3197 10 is_stmt 0 view .LVU3485
 11133 19fe 5B06     		lsls	r3, r3, #25
 11134 1a00 11D5     		bpl	.L872
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11135              		.loc 1 3198 2 is_stmt 1 view .LVU3486
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11136              		.loc 1 3198 18 is_stmt 0 view .LVU3487
ARM GAS  /tmp/ccJ0w3QJ.s 			page 311


 11137 1a02 5E4B     		ldr	r3, .L1147
 11138 1a04 0022     		movs	r2, #0
 11139              	.LVL877:
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11140              		.loc 1 3198 18 view .LVU3488
 11141 1a06 1A60     		str	r2, [r3]
3199:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11142              		.loc 1 3199 2 is_stmt 1 view .LVU3489
3199:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11143              		.loc 1 3199 32 is_stmt 0 view .LVU3490
 11144 1a08 4FF4BA70 		mov	r0, #372
 11145              	.LVL878:
3199:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11146              		.loc 1 3199 32 view .LVU3491
 11147 1a0c FEF73CBD 		b	.L816
 11148              	.LVL879:
 11149              	.L1129:
 11150              	.LBB1314:
 11151              	.LBB1253:
 11152              	.LBB1189:
 11153              	.LBB865:
1441:src/keys.c    **** 			State2.numdigit = 0;
 11154              		.loc 1 1441 4 is_stmt 1 view .LVU3492
1441:src/keys.c    **** 			State2.numdigit = 0;
 11155              		.loc 1 1441 17 is_stmt 0 view .LVU3493
 11156 1a10 737D     		ldrb	r3, [r6, #21]	@ zero_extendqisi2
1442:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 11157              		.loc 1 1442 20 view .LVU3494
 11158 1a12 F272     		strb	r2, [r6, #11]
1441:src/keys.c    **** 			State2.numdigit = 0;
 11159              		.loc 1 1441 17 view .LVU3495
 11160 1a14 43F00803 		orr	r3, r3, #8
1443:src/keys.c    **** 			return STATE_UNFINISHED;
 11161              		.loc 1 1443 12 view .LVU3496
 11162 1a18 0A22     		movs	r2, #10
1441:src/keys.c    **** 			State2.numdigit = 0;
 11163              		.loc 1 1441 17 view .LVU3497
 11164 1a1a 7375     		strb	r3, [r6, #21]
1442:src/keys.c    **** 			CmdBase = DBL_ALPHA;
 11165              		.loc 1 1442 4 is_stmt 1 view .LVU3498
1443:src/keys.c    **** 			return STATE_UNFINISHED;
 11166              		.loc 1 1443 4 view .LVU3499
1443:src/keys.c    **** 			return STATE_UNFINISHED;
 11167              		.loc 1 1443 12 is_stmt 0 view .LVU3500
 11168 1a1c F277     		strb	r2, [r6, #31]
1444:src/keys.c    **** 		}
 11169              		.loc 1 1444 4 is_stmt 1 view .LVU3501
1444:src/keys.c    **** 		}
 11170              		.loc 1 1444 11 is_stmt 0 view .LVU3502
 11171 1a1e 4FF0330B 		mov	fp, #51
 11172 1a22 FEF77BBB 		b	.L552
 11173              	.LVL880:
 11174              	.L872:
1454:src/keys.c    **** 		break;
 11175              		.loc 1 1454 11 view .LVU3503
 11176 1a26 4FF4BA7B 		mov	fp, #372
 11177              	.LVL881:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 312


 11178              	.L815:
1454:src/keys.c    **** 		break;
 11179              		.loc 1 1454 11 view .LVU3504
 11180              	.LBE865:
 11181              	.LBE1189:
 11182              	.LBE1253:
 11183              	.LBE1314:
3197:src/keys.c    **** 	NonProgrammable = 0;
 11184              		.loc 1 3197 26 view .LVU3505
 11185 1a2a 544B     		ldr	r3, .L1147
 11186 1a2c 1A68     		ldr	r2, [r3]
 11187              	.LVL882:
3197:src/keys.c    **** 	NonProgrammable = 0;
 11188              		.loc 1 3197 26 view .LVU3506
 11189 1a2e 82B1     		cbz	r2, .L1044
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11190              		.loc 1 3198 2 is_stmt 1 view .LVU3507
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11191              		.loc 1 3198 18 is_stmt 0 view .LVU3508
 11192 1a30 0022     		movs	r2, #0
3199:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11193              		.loc 1 3199 32 view .LVU3509
 11194 1a32 5846     		mov	r0, fp
 11195              	.LVL883:
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11196              		.loc 1 3198 18 view .LVU3510
 11197 1a34 1A60     		str	r2, [r3]
3199:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11198              		.loc 1 3199 2 is_stmt 1 view .LVU3511
 11199 1a36 FEF727BD 		b	.L816
 11200              	.LVL884:
 11201              	.L865:
 11202              	.LBB1315:
 11203              	.LBB1254:
 11204              	.LBB1190:
 11205              	.LBB866:
1492:src/keys.c    **** 		break;
 11206              		.loc 1 1492 11 is_stmt 0 view .LVU3512
 11207 1a3a 40F23B1B 		movw	fp, #315
 11208 1a3e F4E7     		b	.L815
 11209              	.LVL885:
 11210              	.L742:
1492:src/keys.c    **** 		break;
 11211              		.loc 1 1492 11 view .LVU3513
 11212              	.LBE866:
 11213              	.LBE1190:
 11214              	.LBE1254:
 11215              	.LBE1315:
3197:src/keys.c    **** 	NonProgrammable = 0;
 11216              		.loc 1 3197 7 is_stmt 1 view .LVU3514
3197:src/keys.c    **** 	NonProgrammable = 0;
 11217              		.loc 1 3197 10 is_stmt 0 view .LVU3515
 11218 1a40 5E06     		lsls	r6, r3, #25
 11219 1a42 09D5     		bpl	.L873
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11220              		.loc 1 3198 2 is_stmt 1 view .LVU3516
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
ARM GAS  /tmp/ccJ0w3QJ.s 			page 313


 11221              		.loc 1 3198 18 is_stmt 0 view .LVU3517
 11222 1a44 4D4B     		ldr	r3, .L1147
 11223 1a46 0022     		movs	r2, #0
 11224              	.LVL886:
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11225              		.loc 1 3198 18 view .LVU3518
 11226 1a48 1A60     		str	r2, [r3]
3199:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11227              		.loc 1 3199 2 is_stmt 1 view .LVU3519
3199:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11228              		.loc 1 3199 32 is_stmt 0 view .LVU3520
 11229 1a4a 4FF48170 		mov	r0, #258
 11230              	.LVL887:
3199:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11231              		.loc 1 3199 32 view .LVU3521
 11232 1a4e FEF71BBD 		b	.L816
 11233              	.LVL888:
 11234              	.L1044:
3199:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11235              		.loc 1 3199 32 view .LVU3522
 11236 1a52 5846     		mov	r0, fp
 11237 1a54 FEF7CBBE 		b	.L821
 11238              	.LVL889:
 11239              	.L873:
 11240              	.LBB1316:
 11241              	.LBB1255:
 11242              	.LBB1191:
 11243              	.LBB867:
1485:src/keys.c    **** 		else if (shift == SHIFT_N)
 11244              		.loc 1 1485 11 view .LVU3523
 11245 1a58 4FF4817B 		mov	fp, #258
 11246 1a5c E5E7     		b	.L815
 11247              	.LVL890:
 11248              	.L749:
1485:src/keys.c    **** 		else if (shift == SHIFT_N)
 11249              		.loc 1 1485 11 view .LVU3524
 11250 1a5e 0093     		str	r3, [sp]
 11251              	.LBE867:
 11252              	.LBE1191:
 11253              	.LBB1192:
 11254              	.LBB1153:
1202:src/keys.c    **** 			break;
 11255              		.loc 1 1202 4 is_stmt 1 view .LVU3525
 11256              	.LVL891:
 11257              	.LBB1147:
 11258              	.LBI1147:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 11259              		.loc 1 92 20 view .LVU3526
 11260              	.LBB1148:
  93:src/keys.c    **** 	State2.shifts = shift;
 11261              		.loc 1 93 2 view .LVU3527
 11262              	.LBB1149:
 11263              	.LBI1149:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 11264              		.loc 1 84 13 view .LVU3528
 11265              	.LBB1150:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
ARM GAS  /tmp/ccJ0w3QJ.s 			page 314


 11266              		.loc 1 85 2 view .LVU3529
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11267              		.loc 1 85 18 is_stmt 0 view .LVU3530
 11268 1a60 FFF7FEFF 		bl	shift_down
 11269              	.LVL892:
  86:src/keys.c    **** }
 11270              		.loc 1 86 2 is_stmt 1 view .LVU3531
 11271              	.LBE1150:
 11272              	.LBE1149:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 11273              		.loc 1 94 2 view .LVU3532
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 11274              		.loc 1 94 16 is_stmt 0 view .LVU3533
 11275 1a64 009B     		ldr	r3, [sp]
 11276 1a66 3374     		strb	r3, [r6, #16]
  95:src/keys.c    **** 	return r;
 11277              		.loc 1 95 2 is_stmt 1 view .LVU3534
  95:src/keys.c    **** 	return r;
 11278              		.loc 1 95 19 is_stmt 0 view .LVU3535
 11279 1a68 86F80DA0 		strb	r10, [r6, #13]
  96:src/keys.c    **** }
 11280              		.loc 1 96 2 is_stmt 1 view .LVU3536
  96:src/keys.c    **** }
 11281              		.loc 1 96 9 is_stmt 0 view .LVU3537
 11282 1a6c FEF794BD 		b	.L581
 11283              	.LVL893:
 11284              	.L748:
  96:src/keys.c    **** }
 11285              		.loc 1 96 9 view .LVU3538
 11286              	.LBE1148:
 11287              	.LBE1147:
1216:src/keys.c    **** 			break;
 11288              		.loc 1 1216 4 is_stmt 1 view .LVU3539
 11289 1a70 FFF7FEFF 		bl	init_state
 11290              	.LVL894:
1217:src/keys.c    **** 
 11291              		.loc 1 1217 4 view .LVU3540
 11292 1a74 FEF790BD 		b	.L581
 11293              	.LVL895:
 11294              	.L1124:
1192:src/keys.c    **** 		State2.hyp = 1;
 11295              		.loc 1 1192 3 view .LVU3541
 11296 1a78 FFF7FEFF 		bl	process_cmdline_set_lift
 11297              	.LVL896:
1193:src/keys.c    **** 		State2.dot = op;
 11298              		.loc 1 1193 3 view .LVU3542
1194:src/keys.c    **** 		State2.cmplx = 1;
 11299              		.loc 1 1194 3 view .LVU3543
1195:src/keys.c    **** 		return STATE_UNFINISHED;
 11300              		.loc 1 1195 3 view .LVU3544
1195:src/keys.c    **** 		return STATE_UNFINISHED;
 11301              		.loc 1 1195 16 is_stmt 0 view .LVU3545
 11302 1a7c 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
 11303 1a7e 0BF00103 		and	r3, fp, #1
 11304 1a82 9B01     		lsls	r3, r3, #6
 11305 1a84 43F02203 		orr	r3, r3, #34
 11306 1a88 22F06202 		bic	r2, r2, #98
ARM GAS  /tmp/ccJ0w3QJ.s 			page 315


 11307 1a8c 1343     		orrs	r3, r3, r2
 11308 1a8e 7375     		strb	r3, [r6, #21]
1196:src/keys.c    **** 	}
 11309              		.loc 1 1196 3 is_stmt 1 view .LVU3546
1196:src/keys.c    **** 	}
 11310              		.loc 1 1196 10 is_stmt 0 view .LVU3547
 11311 1a90 4FF0330B 		mov	fp, #51
 11312              	.LVL897:
1196:src/keys.c    **** 	}
 11313              		.loc 1 1196 10 view .LVU3548
 11314 1a94 FEF742BB 		b	.L552
 11315              	.LVL898:
 11316              	.L1097:
1196:src/keys.c    **** 	}
 11317              		.loc 1 1196 10 view .LVU3549
 11318              	.LBE1153:
 11319              	.LBE1192:
 11320              	.LBB1193:
 11321              	.LBB913:
1004:src/keys.c    **** 				init_arg((enum rarg) op);
 11322              		.loc 1 1004 4 is_stmt 1 view .LVU3550
1004:src/keys.c    **** 				init_arg((enum rarg) op);
 11323              		.loc 1 1004 7 is_stmt 0 view .LVU3551
 11324 1a98 BAF5704F 		cmp	r10, #61440
 11325 1a9c 06D1     		bne	.L771
1004:src/keys.c    **** 				init_arg((enum rarg) op);
 11326              		.loc 1 1004 18 view .LVU3552
 11327 1a9e 384B     		ldr	r3, .L1147+4
 11328 1aa0 1B68     		ldr	r3, [r3]
 11329 1aa2 93F8E837 		ldrb	r3, [r3, #2024]	@ zero_extendqisi2
1004:src/keys.c    **** 				init_arg((enum rarg) op);
 11330              		.loc 1 1004 8 view .LVU3553
 11331 1aa6 D807     		lsls	r0, r3, #31
 11332 1aa8 3EF599AD 		bmi	.L1051
 11333              	.LVL899:
 11334              	.L771:
1005:src/keys.c    **** 			}
 11335              		.loc 1 1005 5 is_stmt 1 view .LVU3554
 11336              	.LBB902:
 11337              	.LBI902:
 519:src/keys.c    **** 	if (is_bad_cmdline())
 11338              		.loc 1 519 13 view .LVU3555
 11339              	.LBB903:
 520:src/keys.c    **** 		return;
 11340              		.loc 1 520 2 view .LVU3556
 520:src/keys.c    **** 		return;
 11341              		.loc 1 520 6 is_stmt 0 view .LVU3557
 11342 1aac FFF7FEFF 		bl	is_bad_cmdline
 11343              	.LVL900:
 520:src/keys.c    **** 		return;
 11344              		.loc 1 520 5 view .LVU3558
 11345 1ab0 0446     		mov	r4, r0
 11346 1ab2 0028     		cmp	r0, #0
 11347 1ab4 7EF493AD 		bne	.L1051
 11348 1ab8 5FFA8BF0 		uxtb	r0, fp
 11349 1abc FFF7FEFF 		bl	init_arg.part.0
 11350              	.LVL901:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 316


 11351              	.LBE903:
 11352              	.LBE902:
 11353              	.LBE913:
 11354              	.LBE1193:
 11355              	.LBE1255:
 11356              	.LBE1316:
2976:src/keys.c    **** #ifdef DM42
 11357              		.loc 1 2976 7 view .LVU3559
 11358 1ac0 A046     		mov	r8, r4
 11359              	.LBB1317:
 11360              	.LBB1256:
 11361              	.LBB1194:
 11362              	.LBB914:
1007:src/keys.c    **** 		}
 11363              		.loc 1 1007 11 view .LVU3560
 11364 1ac2 4FF0330B 		mov	fp, #51
 11365              	.LVL902:
1007:src/keys.c    **** 		}
 11366              		.loc 1 1007 11 view .LVU3561
 11367 1ac6 FEF729BB 		b	.L552
 11368              	.LVL903:
 11369              	.L1130:
1007:src/keys.c    **** 		}
 11370              		.loc 1 1007 11 view .LVU3562
 11371              	.LBE914:
 11372              	.LBE1194:
 11373              	.LBB1195:
 11374              	.LBB868:
1429:src/keys.c    **** 			return STATE_UNFINISHED;
 11375              		.loc 1 1429 4 is_stmt 1 view .LVU3563
 11376              	.LBB852:
 11377              	.LBI852:
 519:src/keys.c    **** 	if (is_bad_cmdline())
 11378              		.loc 1 519 13 view .LVU3564
 11379              	.LBB853:
 520:src/keys.c    **** 		return;
 11380              		.loc 1 520 2 view .LVU3565
 520:src/keys.c    **** 		return;
 11381              		.loc 1 520 6 is_stmt 0 view .LVU3566
 11382 1aca FFF7FEFF 		bl	is_bad_cmdline
 11383              	.LVL904:
 520:src/keys.c    **** 		return;
 11384              		.loc 1 520 5 view .LVU3567
 11385 1ace 0346     		mov	r3, r0
 11386 1ad0 0028     		cmp	r0, #0
 11387 1ad2 7EF484AD 		bne	.L1051
 11388 1ad6 2720     		movs	r0, #39
 11389              	.LBE853:
 11390              	.LBE852:
 11391              	.LBE868:
 11392              	.LBE1195:
 11393              	.LBE1256:
 11394              	.LBE1317:
2976:src/keys.c    **** #ifdef DM42
 11395              		.loc 1 2976 7 view .LVU3568
 11396 1ad8 9846     		mov	r8, r3
 11397              	.LBB1318:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 317


 11398              	.LBB1257:
 11399              	.LBB1196:
 11400              	.LBB869:
1430:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 11401              		.loc 1 1430 11 view .LVU3569
 11402 1ada 4FF0330B 		mov	fp, #51
 11403              	.LBB855:
 11404              	.LBB854:
 11405 1ade FFF7FEFF 		bl	init_arg.part.0
 11406              	.LVL905:
 11407 1ae2 FEF71BBB 		b	.L552
 11408              	.LVL906:
 11409              	.L871:
1430:src/keys.c    **** 		} else if (shift == SHIFT_H) {
 11410              		.loc 1 1430 11 view .LVU3570
 11411              	.LBE854:
 11412              	.LBE855:
 11413              	.LBE869:
 11414              	.LBE1196:
 11415              	.LBB1197:
 11416              	.LBB718:
 755:src/keys.c    **** 	    }
 11417              		.loc 1 755 15 view .LVU3571
 11418 1ae6 4FF00F0B 		mov	fp, #15
 11419              	.LVL907:
 11420              	.L817:
 755:src/keys.c    **** 	    }
 11421              		.loc 1 755 15 view .LVU3572
 11422              	.LBE718:
 11423              	.LBE1197:
 11424              	.LBE1257:
 11425              	.LBE1318:
3197:src/keys.c    **** 	NonProgrammable = 0;
 11426              		.loc 1 3197 26 view .LVU3573
 11427 1aea 244B     		ldr	r3, .L1147
 11428 1aec 1A68     		ldr	r2, [r3]
 11429 1aee 002A     		cmp	r2, #0
 11430 1af0 AFD0     		beq	.L1044
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11431              		.loc 1 3198 2 is_stmt 1 view .LVU3574
3198:src/keys.c    **** 	if (c >= (OP_SPEC | OP_ENTER) && c <= (OP_SPEC | OP_F)) {
 11432              		.loc 1 3198 18 is_stmt 0 view .LVU3575
 11433 1af2 0022     		movs	r2, #0
 11434 1af4 1A60     		str	r2, [r3]
3199:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11435              		.loc 1 3199 2 is_stmt 1 view .LVU3576
3199:src/keys.c    **** 	  if (c != (OP_SPEC | OP_ENTER) || !is_bad_cmdline()) {
 11436              		.loc 1 3199 32 is_stmt 0 view .LVU3577
 11437 1af6 5846     		mov	r0, fp
 11438 1af8 FEF7C8BD 		b	.L818
 11439              	.LVL908:
 11440              	.L870:
 11441              	.LBB1319:
 11442              	.LBB1258:
 11443              	.LBB1198:
 11444              	.LBB719:
 779:src/keys.c    **** 	    }
ARM GAS  /tmp/ccJ0w3QJ.s 			page 318


 11445              		.loc 1 779 15 view .LVU3578
 11446 1afc 4FF0140B 		mov	fp, #20
 11447 1b00 F3E7     		b	.L817
 11448              	.LVL909:
 11449              	.L866:
 779:src/keys.c    **** 	    }
 11450              		.loc 1 779 15 view .LVU3579
 11451              	.LBE719:
 11452              	.LBE1198:
 11453              	.LBB1199:
 11454              	.LBB915:
 976:src/keys.c    **** 	  }
 11455              		.loc 1 976 13 view .LVU3580
 11456 1b02 4FF0120B 		mov	fp, #18
 11457 1b06 F0E7     		b	.L817
 11458              	.LVL910:
 11459              	.L1127:
 937:src/keys.c    **** 	    State2.dot = op;
 11460              		.loc 1 937 6 is_stmt 1 view .LVU3581
 938:src/keys.c    **** 	    // State2.cmplx = 0;
 11461              		.loc 1 938 6 view .LVU3582
 937:src/keys.c    **** 	    State2.dot = op;
 11462              		.loc 1 937 17 is_stmt 0 view .LVU3583
 11463 1b08 727D     		ldrb	r2, [r6, #21]	@ zero_extendqisi2
 11464 1b0a 0BF00103 		and	r3, fp, #1
 11465              	.LVL911:
 937:src/keys.c    **** 	    State2.dot = op;
 11466              		.loc 1 937 17 view .LVU3584
 11467 1b0e 9B01     		lsls	r3, r3, #6
 11468 1b10 43F02003 		orr	r3, r3, #32
 11469 1b14 22F06002 		bic	r2, r2, #96
 11470 1b18 1343     		orrs	r3, r3, r2
 11471 1b1a 7375     		strb	r3, [r6, #21]
 940:src/keys.c    **** 	  }
 11472              		.loc 1 940 6 is_stmt 1 view .LVU3585
 940:src/keys.c    **** 	  }
 11473              		.loc 1 940 13 is_stmt 0 view .LVU3586
 11474 1b1c 4FF0330B 		mov	fp, #51
 11475              	.LVL912:
 940:src/keys.c    **** 	  }
 11476              		.loc 1 940 13 view .LVU3587
 11477 1b20 FEF7FCBA 		b	.L552
 11478              	.LVL913:
 11479              	.L1128:
 956:src/keys.c    **** 		}
 11480              		.loc 1 956 4 is_stmt 1 view .LVU3588
 956:src/keys.c    **** 		}
 11481              		.loc 1 956 34 is_stmt 0 view .LVU3589
 11482 1b24 174B     		ldr	r3, .L1147+8
 11483              	.LVL914:
 956:src/keys.c    **** 		}
 11484              		.loc 1 956 11 view .LVU3590
 11485 1b26 33F81010 		ldrh	r1, [r3, r0, lsl #1]
 11486 1b2a FFF7FEFF 		bl	check_f_key
 11487              	.LVL915:
 956:src/keys.c    **** 		}
 11488              		.loc 1 956 11 view .LVU3591
ARM GAS  /tmp/ccJ0w3QJ.s 			page 319


 11489 1b2e 8346     		mov	fp, r0
 11490              	.LVL916:
 956:src/keys.c    **** 		}
 11491              		.loc 1 956 11 view .LVU3592
 11492 1b30 FEF732BD 		b	.L581
 11493              	.LVL917:
 11494              	.L867:
 981:src/keys.c    **** 	  }
 11495              		.loc 1 981 13 view .LVU3593
 11496 1b34 4FF0130B 		mov	fp, #19
 11497 1b38 D7E7     		b	.L817
 11498              	.LVL918:
 11499              	.L707:
 981:src/keys.c    **** 	  }
 11500              		.loc 1 981 13 view .LVU3594
 11501              	.LBE915:
 11502              	.LBE1199:
 11503              	.LBB1200:
 11504              	.LBB806:
2727:src/keys.c    **** 		goto reset_window;
 11505              		.loc 1 2727 4 is_stmt 1 view .LVU3595
2727:src/keys.c    **** 		goto reset_window;
 11506              		.loc 1 2727 24 is_stmt 0 view .LVU3596
 11507 1b3a 09F1FF39 		add	r9, r9, #-1
 11508              	.LVL919:
2727:src/keys.c    **** 		goto reset_window;
 11509              		.loc 1 2727 18 view .LVU3597
 11510 1b3e A6F80890 		strh	r9, [r6, #8]	@ movhi
 11511 1b42 FFF798BA 		b	.L699
 11512              	.LVL920:
 11513              	.L1120:
2723:src/keys.c    **** 			--State2.digval;
 11514              		.loc 1 2723 5 is_stmt 1 view .LVU3598
2723:src/keys.c    **** 			--State2.digval;
 11515              		.loc 1 2723 21 is_stmt 0 view .LVU3599
 11516 1b46 FFF7FEFF 		bl	global_regs
 11517              	.LVL921:
2723:src/keys.c    **** 			--State2.digval;
 11518              		.loc 1 2723 19 view .LVU3600
 11519 1b4a 3081     		strh	r0, [r6, #8]	@ movhi
 11520 1b4c FFF790BA 		b	.L708
 11521              	.LVL922:
 11522              	.L710:
2737:src/keys.c    **** 		goto reset_window;
 11523              		.loc 1 2737 4 is_stmt 1 view .LVU3601
2737:src/keys.c    **** 		goto reset_window;
 11524              		.loc 1 2737 18 is_stmt 0 view .LVU3602
 11525 1b50 0023     		movs	r3, #0
 11526 1b52 3381     		strh	r3, [r6, #8]	@ movhi
 11527 1b54 FFF78FBA 		b	.L699
 11528              	.LVL923:
 11529              	.L1121:
2754:src/keys.c    **** 			goto reset_window;
 11530              		.loc 1 2754 4 is_stmt 1 view .LVU3603
2754:src/keys.c    **** 			goto reset_window;
 11531              		.loc 1 2754 25 is_stmt 0 view .LVU3604
 11532 1b58 B37D     		ldrb	r3, [r6, #22]	@ zero_extendqisi2
ARM GAS  /tmp/ccJ0w3QJ.s 			page 320


 11533 1b5a 43F00403 		orr	r3, r3, #4
 11534 1b5e B375     		strb	r3, [r6, #22]
2755:src/keys.c    **** 		}
 11535              		.loc 1 2755 4 is_stmt 1 view .LVU3605
 11536 1b60 FFF789BA 		b	.L699
 11537              	.LVL924:
 11538              	.L1094:
2755:src/keys.c    **** 		}
 11539              		.loc 1 2755 4 is_stmt 0 view .LVU3606
 11540              	.LBE806:
 11541              	.LBE1200:
 11542              	.LBB1201:
 11543              	.LBB771:
 11544              	.LBB766:
 11545              	.LBB757:
 454:src/keys.c    **** 			shift = SHIFT_LC_G;
 11546              		.loc 1 454 8 is_stmt 1 view .LVU3607
 455:src/keys.c    **** 	}
 11547              		.loc 1 455 10 is_stmt 0 view .LVU3608
 11548 1b64 0229     		cmp	r1, #2
 11549 1b66 08BF     		it	eq
 11550 1b68 0521     		moveq	r1, #5
 11551              	.LVL925:
 455:src/keys.c    **** 	}
 11552              		.loc 1 455 10 view .LVU3609
 11553 1b6a FEF7EDBC 		b	.L663
 11554              	.LVL926:
 11555              	.L869:
 455:src/keys.c    **** 	}
 11556              		.loc 1 455 10 view .LVU3610
 11557              	.LBE757:
 11558              	.LBE766:
 11559              	.LBE771:
 11560              	.LBE1201:
 11561              	.LBB1202:
 11562              	.LBB720:
 771:src/keys.c    **** 	    }
 11563              		.loc 1 771 15 view .LVU3611
 11564 1b6e 4FF0110B 		mov	fp, #17
 11565 1b72 BAE7     		b	.L817
 11566              	.LVL927:
 11567              	.L868:
 763:src/keys.c    **** 	    }
 11568              		.loc 1 763 15 view .LVU3612
 11569 1b74 4FF0100B 		mov	fp, #16
 11570 1b78 B7E7     		b	.L817
 11571              	.L1148:
 11572 1b7a 00BF     		.align	2
 11573              	.L1147:
 11574 1b7c 00000000 		.word	NonProgrammable
 11575 1b80 00000000 		.word	main_ram
 11576 1b84 00000000 		.word	.LANCHOR20
 11577              	.LBE720:
 11578              	.LBE1202:
 11579              	.LBE1258:
 11580              	.LBE1319:
 11581              		.cfi_endproc
ARM GAS  /tmp/ccJ0w3QJ.s 			page 321


 11582              	.LFE58:
 11584              		.section	.text.process_keycode_with_shift,"ax",%progbits
 11585              		.align	1
 11586              		.p2align 2,,3
 11587              		.global	process_keycode_with_shift
 11588              		.syntax unified
 11589              		.thumb
 11590              		.thumb_func
 11591              		.fpu fpv4-sp-d16
 11593              	process_keycode_with_shift:
 11594              	.LFB57:
2964:src/keys.c    ****    if (remapped.shift >= 0) set_shift ( remapped.shift );
 11595              		.loc 1 2964 61 is_stmt 1 view -0
 11596              		.cfi_startproc
 11597              		@ args = 0, pretend = 0, frame = 8
 11598              		@ frame_needed = 0, uses_anonymous_args = 0
 11599 0000 10B5     		push	{r4, lr}
 11600              		.cfi_def_cfa_offset 8
 11601              		.cfi_offset 4, -8
 11602              		.cfi_offset 14, -4
 11603 0002 82B0     		sub	sp, sp, #8
 11604              		.cfi_def_cfa_offset 16
2964:src/keys.c    ****    if (remapped.shift >= 0) set_shift ( remapped.shift );
 11605              		.loc 1 2964 61 is_stmt 0 view .LVU3614
 11606 0004 02AB     		add	r3, sp, #8
 11607 0006 03E90300 		stmdb	r3, {r0, r1}
 11608 000a 019C     		ldr	r4, [sp, #4]
 11609              	.LVL928:
2965:src/keys.c    ****    process_keycode ( remapped.key_34s );
 11610              		.loc 1 2965 4 is_stmt 1 view .LVU3615
2965:src/keys.c    ****    process_keycode ( remapped.key_34s );
 11611              		.loc 1 2965 7 is_stmt 0 view .LVU3616
 11612 000c 002C     		cmp	r4, #0
 11613 000e 05DB     		blt	.L1150
2965:src/keys.c    ****    process_keycode ( remapped.key_34s );
 11614              		.loc 1 2965 29 is_stmt 1 discriminator 1 view .LVU3617
 11615              	.LVL929:
 11616              	.LBB1320:
 11617              	.LBI1320:
  92:src/keys.c    **** 	enum shifts r = cur_shift();
 11618              		.loc 1 92 20 discriminator 1 view .LVU3618
 11619              	.LBB1321:
  93:src/keys.c    **** 	State2.shifts = shift;
 11620              		.loc 1 93 2 discriminator 1 view .LVU3619
 11621              	.LBB1322:
 11622              	.LBI1322:
  84:src/keys.c    **** 	enum shifts s = shift_down();
 11623              		.loc 1 84 13 discriminator 1 view .LVU3620
 11624              	.LBB1323:
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11625              		.loc 1 85 2 discriminator 1 view .LVU3621
  85:src/keys.c    **** 	return s == SHIFT_N ? (enum shifts) State2.shifts : s;
 11626              		.loc 1 85 18 is_stmt 0 discriminator 1 view .LVU3622
 11627 0010 FFF7FEFF 		bl	shift_down
 11628              	.LVL930:
  86:src/keys.c    **** }
 11629              		.loc 1 86 2 is_stmt 1 discriminator 1 view .LVU3623
ARM GAS  /tmp/ccJ0w3QJ.s 			page 322


 11630              	.LBE1323:
 11631              	.LBE1322:
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 11632              		.loc 1 94 2 discriminator 1 view .LVU3624
  94:src/keys.c    **** 	State2.alpha_pos = 0;
 11633              		.loc 1 94 16 is_stmt 0 discriminator 1 view .LVU3625
 11634 0014 054B     		ldr	r3, .L1152
  95:src/keys.c    **** 	return r;
 11635              		.loc 1 95 19 discriminator 1 view .LVU3626
 11636 0016 0022     		movs	r2, #0
 11637              	.LBE1321:
 11638              	.LBE1320:
2965:src/keys.c    ****    process_keycode ( remapped.key_34s );
 11639              		.loc 1 2965 29 discriminator 1 view .LVU3627
 11640 0018 1C74     		strb	r4, [r3, #16]
 11641              	.LBB1325:
 11642              	.LBB1324:
  95:src/keys.c    **** 	return r;
 11643              		.loc 1 95 2 is_stmt 1 discriminator 1 view .LVU3628
  95:src/keys.c    **** 	return r;
 11644              		.loc 1 95 19 is_stmt 0 discriminator 1 view .LVU3629
 11645 001a 5A73     		strb	r2, [r3, #13]
  96:src/keys.c    **** }
 11646              		.loc 1 96 2 is_stmt 1 discriminator 1 view .LVU3630
 11647              	.LVL931:
 11648              	.L1150:
  96:src/keys.c    **** }
 11649              		.loc 1 96 2 is_stmt 0 discriminator 1 view .LVU3631
 11650              	.LBE1324:
 11651              	.LBE1325:
2966:src/keys.c    ****  }
 11652              		.loc 1 2966 4 is_stmt 1 view .LVU3632
 11653 001c 9DF80000 		ldrb	r0, [sp]	@ zero_extendqisi2
2967:src/keys.c    ****  
 11654              		.loc 1 2967 2 is_stmt 0 view .LVU3633
 11655 0020 02B0     		add	sp, sp, #8
 11656              		.cfi_def_cfa_offset 8
 11657              		@ sp needed
 11658 0022 BDE81040 		pop	{r4, lr}
 11659              		.cfi_restore 14
 11660              		.cfi_restore 4
 11661              		.cfi_def_cfa_offset 0
 11662              	.LVL932:
2966:src/keys.c    ****  }
 11663              		.loc 1 2966 4 view .LVU3634
 11664 0026 FFF7FEBF 		b	process_keycode
 11665              	.LVL933:
 11666              	.L1153:
 11667 002a 00BF     		.align	2
 11668              	.L1152:
 11669 002c 00000000 		.word	StateWhileOn
 11670              		.cfi_endproc
 11671              	.LFE57:
 11673              		.comm	NonProgrammable,4,4
 11674              		.comm	GoFast,4,4
 11675              		.comm	OpCodeDisplayPending,4,4
 11676              		.comm	OpCode,4,4
ARM GAS  /tmp/ccJ0w3QJ.s 			page 323


 11677              		.comm	WasDataEntry,4,4
 11678              		.section	.bss.was_paused.9671,"aw",%nobits
 11679              		.align	2
 11680              		.set	.LANCHOR12,. + 0
 11683              	was_paused.9671:
 11684 0000 00000000 		.space	4
 11685              		.section	.rodata.alpha_arrows,"a"
 11686              		.align	2
 11689              	alpha_arrows:
 11690 0000 0D0E100F 		.ascii	"\015\016\020\017\003\004\237^\177"
 11690      03049F5E 
 11690      7F
 11691              		.section	.rodata.alpha_catalogue,"a"
 11692              		.align	2
 11695              	alpha_catalogue:
 11696 0000 0D4AC280 		.ascii	"\015J\302\200\236\257J\242~\272\257\253\373\002\301"
 11696      9EAF4AA2 
 11696      7EBAAFAB 
 11696      FB02C1
 11697 000f 284AB0   		.ascii	"(J\260"
 11698              		.section	.rodata.alpha_compares,"a"
 11699              		.align	2
 11702              	alpha_compares:
 11703 0000 3C093D1D 		.ascii	"<\011=\035\012>[]{}"
 11703      0A3E5B5D 
 11703      7B7D
 11704              		.section	.rodata.alpha_letters,"a"
 11705              		.align	2
 11706              		.set	.LANCHOR3,. + 0
 11709              	alpha_letters:
 11710 0000 C0C1C2C3 		.ascii	"\300\301\302\303\210\304\305\306\307\204\310\311\312"
 11710      88C4C5C6 
 11710      C784C8C9 
 11710      CA
 11711 000d CB9ECCCD 		.ascii	"\313\236\314\315\316\317\320\321\322\323\324\025\325"
 11711      CECFD0D1 
 11711      D2D3D415 
 11711      D5
 11712 001a D618D8D9 		.ascii	"\326\030\330\331\332\333\334\001\031\002\335\032\336"
 11712      DADBDC01 
 11712      1902DD1A 
 11712      DE
 11713 0027 DF       		.ascii	"\337"
 11714              		.section	.rodata.alpha_letters_lower,"a"
 11715              		.align	2
 11716              		.set	.LANCHOR4,. + 0
 11719              	alpha_letters_lower:
 11720 0000 E0E1E2E3 		.ascii	"\340\341\342\343\211\344\345\346\347\205\350\351\352"
 11720      89E4E5E6 
 11720      E785E8E9 
 11720      EA
 11721 000d EB9EECED 		.ascii	"\353\236\354\355\356\357\360\361\362\363\364\026\365"
 11721      EEEFF0F1 
 11721      F2F3F416 
 11721      F5
 11722 001a F618F8F9 		.ascii	"\366\030\370\371\372\373\374\001\031\002\375\032\376"
 11722      FAFBFC01 
ARM GAS  /tmp/ccJ0w3QJ.s 			page 324


 11722      1902FD1A 
 11722      FE
 11723 0027 FF       		.ascii	"\377"
 11724              		.section	.rodata.alpha_subscripts,"a"
 11725              		.align	2
 11728              	alpha_subscripts:
 11729 0000 B805B9BA 		.ascii	"\270\005\271\272\232\200\327\230\273\024\206\274\367"
 11729      9A80D798 
 11729      BB1486BC 
 11729      F7
 11730 000d 1BBDBE93 		.ascii	"\033\275\276\223\277\201\213\234\214\231\235\220\233"
 11730      BF818B9C 
 11730      8C999D90 
 11730      9B
 11731              		.section	.rodata.alpha_symbols,"a"
 11732              		.align	2
 11735              	alpha_symbols:
 11736 0000 2C3A3B27 		.ascii	",:;'\"*@_~%$\014\036\037\216\256\222`#"
 11736      222A405F 
 11736      7E25240C 
 11736      1E1F8EAE 
 11736      926023
 11737              		.section	.rodata.alphamap.9203,"a"
 11738              		.align	2
 11739              		.set	.LANCHOR9,. + 0
 11742              	alphamap.9203:
 11743 0000 41004100 		.ascii	"A\000A\000a\240"
 11743      61A0
 11744 0006 42004200 		.ascii	"B\000B\000b\241"
 11744      62A1
 11745 000c 43008200 		.ascii	"C\000\202\000c\242"
 11745      63A2
 11746 0012 44008300 		.ascii	"D\000\203\000d\243"
 11746      64A3
 11747 0018 450D4500 		.ascii	"E\015E\000e\244"
 11747      65A4
 11748 001e 46009400 		.ascii	"F\000\224\000f\264"
 11748      66B4
 11749 0024 47008200 		.ascii	"G\000\202\000g\242"
 11749      67A2
 11750 002a 48005800 		.ascii	"H\000X\000h\265"
 11750      68B5
 11751 0030 49004900 		.ascii	"I\000I\000i\250"
 11751      69A8
 11752 0036 4AAF0000 		.ascii	"J\257\000\000j\000"
 11752      6A00
 11753 003c 4B004B00 		.ascii	"K\000K\000k\251"
 11753      6BA9
 11754 0042 4C008A00 		.ascii	"L\000\212\000l\252"
 11754      6CAA
 11755 0048 00004800 		.ascii	"\000\000H\000\000\246"
 11755      00A6
 11756 004e 4D00AB17 		.ascii	"M\000\253\027m\253"
 11756      6DAB
 11757 0054 4E084E95 		.ascii	"N\010N\225n\254"
 11757      6EAC
 11758 005a 4F0097AF 		.ascii	"O\000\227\257o\267"
ARM GAS  /tmp/ccJ0w3QJ.s 			page 325


 11758      6FB7
 11759 0060 00000000 		.ascii	"\000\000\000\000\000\000"
 11759      0000
 11760 0066 00000000 		.ascii	"\000\000\000\000\000\000"
 11760      0000
 11761 006c 50378F26 		.ascii	"P7\217&p\257"
 11761      70AF
 11762 0072 5138007C 		.ascii	"Q8\000|q\000"
 11762      7100
 11763 0078 52395200 		.ascii	"R9R\000r\260"
 11763      72B0
 11764 007e 532F9100 		.ascii	"S/\221\000s\261"
 11764      73B1
 11765 0084 00000000 		.ascii	"\000\000\000\000\000\000"
 11765      0000
 11766 008a 54345400 		.ascii	"T4T\000t\262"
 11766      74B2
 11767 0090 55350000 		.ascii	"U5\000\000u\000"
 11767      7500
 11768 0096 56360000 		.ascii	"V6\000\000v\000"
 11768      7600
 11769 009c 571C0000 		.ascii	"W\034\000\000w\000"
 11769      7700
 11770 00a2 00000000 		.ascii	"\000\000\000\000\000\000"
 11770      0000
 11771 00a8 58318D00 		.ascii	"X1\215\000x\255"
 11771      78AD
 11772 00ae 59325900 		.ascii	"Y2Y\000y\263"
 11772      79B3
 11773 00b4 5A335A00 		.ascii	"Z3Z\000z\245"
 11773      7AA5
 11774 00ba 2D282900 		.ascii	"-()\000\000\000"
 11774      0000
 11775 00c0 00000000 		.ascii	"\000\000\000\000\000\000"
 11775      0000
 11776 00c6 3A308700 		.ascii	":0\207\000;\247"
 11776      3BA7
 11777 00cc 2E2E9600 		.ascii	"..\226\000.\266"
 11777      2EB6
 11778 00d2 3F002100 		.ascii	"?\000!\000\000\000"
 11778      0000
 11779 00d8 202B3D00 		.ascii	" +=\000\000\000"
 11779      0000
 11780 00de 00000000 		.ascii	"\000\000\000\000\000\000"
 11780      0000
 11781              		.section	.rodata.amap.9194,"a"
 11782              		.align	2
 11783              		.set	.LANCHOR10,. + 0
 11786              	amap.9194:
 11787 0000 04       		.byte	4
 11788 0001 000D00   		.ascii	"\000\015\000"
 11789 0004 05       		.byte	5
 11790 0005 000E09   		.ascii	"\000\016\011"
 11791 0008 08       		.byte	8
 11792 0009 00000F   		.ascii	"\000\000\017"
 11793 000c 1F       		.byte	31
 11794 000d 00000C   		.ascii	"\000\000\014"
ARM GAS  /tmp/ccJ0w3QJ.s 			page 326


 11795 0010 21       		.byte	33
 11796 0011 00000A   		.ascii	"\000\000\012"
 11797 0014 26       		.byte	38
 11798 0015 00000B   		.ascii	"\000\000\013"
 11799              		.section	.rodata.catalogue,"a"
 11800              		.align	2
 11803              	catalogue:
 11804 0000 445A9674 		.ascii	"DZ\226t\301`\2303\354\242:Xf\320}E\261Q\011yL\323F!"
 11804      C1609833 
 11804      ECA23A58 
 11804      66D07D45 
 11804      B1510979 
 11805 0018 0B448FA6 		.ascii	"\013D\217\246\261&I\321\206\351\273j\232\266_\023pW"
 11805      B12649D1 
 11805      86E9BB6A 
 11805      9AB65F13 
 11805      7057
 11806 002a A6B5B942 		.ascii	"\246\265\271B\234V}*a\331\306m\231a[\027\000\303l\233"
 11806      9C567D2A 
 11806      61D9C66D 
 11806      99615B17 
 11806      00C36C9B 
 11807 003e 645F0B3F 		.ascii	"d_\013?0\254\033\007@\021\363\013\024(\333v%\270\015"
 11807      30AC1B07 
 11807      4011F30B 
 11807      1428DB76 
 11807      25B80D
 11808 0051 5783290D 		.ascii	"W\203)\015C\020\344A\263+\033\306\020\240'\253\322\250"
 11808      4310E441 
 11808      B32B1BC6 
 11808      10A027AB 
 11808      D2A8
 11809 0063 9FAF2BAA 		.ascii	"\237\257+\252\372\277\260,\032\354\241*\331\344\245"
 11809      FABFB02C 
 11809      1AECA12A 
 11809      D9E4A5
 11810 0072 A268DA06 		.ascii	"\242h\332\006\205\265`PW)\247q\027%\275\246"
 11810      85B56050 
 11810      5729A771 
 11810      1725BDA6 
 11811              		.section	.rodata.catalogue_sizes.9469,"a"
 11812              		.align	2
 11813              		.set	.LANCHOR2,. + 0
 11816              	catalogue_sizes.9469:
 11817 0000 00681911 		.ascii	"\000h\031\0216<T~&6\016\023\012\011(\032LLX\016\023"
 11817      363C547E 
 11817      26360E13 
 11817      0A09281A 
 11817      4C4C580E 
 11818              		.section	.rodata.catalogues.9477,"a"
 11819              		.align	2
 11820              		.set	.LANCHOR6,. + 0
 11823              	catalogues.9477:
 11824 0000 00000000 		.word	0
 11825 0004 00000000 		.word	catalogue
 11826 0008 00000000 		.word	cplx_catalogue
 11827 000c 00000000 		.word	stats_catalogue
ARM GAS  /tmp/ccJ0w3QJ.s 			page 327


 11828 0010 00000000 		.word	prob_catalogue
 11829 0014 00000000 		.word	int_catalogue
 11830 0018 00000000 		.word	prog_catalogue
 11831 001c 00000000 		.word	program_xfcn
 11832 0020 00000000 		.word	test_catalogue
 11833 0024 00000000 		.word	mode_catalogue
 11834 0028 00000000 		.word	alpha_catalogue
 11835 002c 00000000 		.word	alpha_symbols
 11836 0030 00000000 		.word	alpha_compares
 11837 0034 00000000 		.word	alpha_arrows
 11838 0038 00000000 		.word	alpha_letters
 11839 003c 00000000 		.word	alpha_subscripts
 11840 0040 00000000 		.word	0
 11841 0044 00000000 		.word	0
 11842 0048 00000000 		.word	0
 11843 004c 00000000 		.word	sums_catalogue
 11844 0050 00000000 		.word	matrix_catalogue
 11845              		.section	.rodata.cmap.9193,"a"
 11846              		.align	2
 11847              		.set	.LANCHOR11,. + 0
 11850              	cmap.9193:
 11851 0000 04       		.byte	4
 11852 0001 120012   		.ascii	"\022\000\022"
 11853 0004 05       		.byte	5
 11854 0005 090909   		.ascii	"\011\011\011"
 11855 0008 06       		.byte	6
 11856 0009 151515   		.ascii	"\025\025\025"
 11857 000c 0C       		.byte	12
 11858 000d 100011   		.ascii	"\020\000\021"
 11859 0010 19       		.byte	25
 11860 0011 040004   		.ascii	"\004\000\004"
 11861 0014 1A       		.byte	26
 11862 0015 030003   		.ascii	"\003\000\003"
 11863 0018 1B       		.byte	27
 11864 0019 130013   		.ascii	"\023\000\023"
 11865 001c 1C       		.byte	28
 11866 001d 140014   		.ascii	"\024\000\024"
 11867 0020 1E       		.byte	30
 11868 0021 171717   		.ascii	"\027\027\027"
 11869 0024 1F       		.byte	31
 11870 0025 080808   		.ascii	"\010\010\010"
 11871 0028 20       		.byte	32
 11872 0029 060606   		.ascii	"\006\006\006"
 11873 002c 21       		.byte	33
 11874 002d 010502   		.ascii	"\001\005\002"
 11875              		.section	.rodata.conv_catalogue,"a"
 11876              		.align	2
 11877              		.set	.LANCHOR5,. + 0
 11880              	conv_catalogue:
 11881 0000 DADB8C8A 		.ascii	"\332\333\214\212+-\3357'913\021\026\005\334\336\031"
 11881      2B2DDD37 
 11881      27393133 
 11881      111605DC 
 11881      DE19
 11882 0012 1D1B1315 		.ascii	"\035\033\023\025\015\017\215\010\217\012*,GCE\027?0"
 11882      0D0F8D08 
 11882      8F0A2A2C 
ARM GAS  /tmp/ccJ0w3QJ.s 			page 328


 11882      47434517 
 11882      3F30
 11883 0024 32340400 		.ascii	"24\004\000\002\006&\" ($5/\001#\020\014\016!\022\024"
 11883      02062622 
 11883      20282435 
 11883      2F012310 
 11883      0C0E2112 
 11884 0039 3B181A1C 		.ascii	";\030\032\034\036).\01168>:<@%\337=\213\216\003\007"
 11884      1E292E09 
 11884      36383E3A 
 11884      3C4025DF 
 11884      3D8B8E03 
 11885 004e 4B49410B 		.ascii	"KIA\013JHFBD\037"
 11885      4A484642 
 11885      441F
 11886              		.section	.rodata.conv_mapping.9516,"a"
 11887              		.align	2
 11888              		.set	.LANCHOR8,. + 0
 11891              	conv_mapping.9516:
 11892 0000 8502     		.short	645
 11893 0002 8402     		.short	644
 11894 0004 8602     		.short	646
 11895 0006 8702     		.short	647
 11896 0008 8202     		.short	642
 11897 000a 8302     		.short	643
 11898 000c 3202     		.short	562
 11899 000e 3302     		.short	563
 11900 0010 3402     		.short	564
 11901 0012 3502     		.short	565
 11902 0014 3602     		.short	566
 11903 0016 3702     		.short	567
 11904              		.section	.rodata.cplx_catalogue,"a"
 11905              		.align	2
 11908              	cplx_catalogue:
 11909 0000 7967DC7E 		.ascii	"yg\334~\006:\316\241\015\337y\237\247\356kw\2477\371"
 11909      063ACEA1 
 11909      0DDF799F 
 11909      A7EE6B77 
 11909      A737F9
 11910 0013 D47CDE07 		.ascii	"\324|\336\007\211\344\244+Y\311\375v@"
 11910      89E4A42B 
 11910      59C9FD76 
 11910      40
 11911              		.section	.rodata.disp.9331,"a"
 11912              		.align	2
 11913              		.set	.LANCHOR15,. + 0
 11916              	disp.9331:
 11917 0000 03       		.byte	3
 11918 0001 02       		.byte	2
 11919 0002 05       		.byte	5
 11920 0003 04       		.byte	4
 11921              		.section	.rodata.int_catalogue,"a"
 11922              		.align	2
 11925              	int_catalogue:
 11926 0000 446F8306 		.ascii	"Do\203\006\372>\3342Y\302\020\257\264H\372k\031v\264"
 11926      FA3EDC32 
 11926      59C210AF 
ARM GAS  /tmp/ccJ0w3QJ.s 			page 329


 11926      B448FA6B 
 11926      1976B4
 11927 0013 94BFAFF6 		.ascii	"\224\277\257\366q\233]\331\226\305vp\0146\310\225\274"
 11927      719B5DD9 
 11927      96C57670 
 11927      0C36C895 
 11927      BC
 11928 0024 AF43F2F3 		.ascii	"\257C\362\363\275o\221\241\000\275\257|Q\211\015L\244"
 11928      BD6F91A1 
 11928      00BDAF7C 
 11928      51890D4C 
 11928      A4
 11929 0035 41B32B1B 		.ascii	"A\263+\033\312\364\252\257+\252\372\277\260,\032\354"
 11929      CAF4AAAF 
 11929      2BAAFABF 
 11929      B02C1AEC 
 11930 0045 AB4A5057 		.ascii	"\253JPW-\314"
 11930      2DCC
 11931              		.section	.rodata.linear_key_map.9164,"a"
 11932              		.align	2
 11933              		.set	.LANCHOR1,. + 0
 11936              	linear_key_map.9164:
 11937 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\011\012\013\014"
 11937      04050607 
 11937      08090A0B 
 11937      0C
 11938 000d 0D0E0F10 		.ascii	"\015\016\017\020\000\021\022\023\024\025\000\026\027"
 11938      00111213 
 11938      14150016 
 11938      17
 11939 001a 18191A00 		.ascii	"\030\031\032\000\033\034\035\036\037\000 !\"#$%%%%%"
 11939      1B1C1D1E 
 11939      1F002021 
 11939      22232425 
 11939      25252525 
 11940 002e 25       		.ascii	"%"
 11941              		.section	.rodata.linear_key_map.9168,"a"
 11942              		.align	2
 11943              		.set	.LANCHOR18,. + 0
 11946              	linear_key_map.9168:
 11947 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\"\"\"\011\012\013"
 11947      04050607 
 11947      08222222 
 11947      090A0B
 11948 000f 0C0D000E 		.ascii	"\014\015\000\016\017\020\021\022\000\023\024\025\026"
 11948      0F101112 
 11948      00131415 
 11948      16
 11949 001c 17001819 		.ascii	"\027\000\030\031\032\033\034\000\035\036\037 !\"\"\""
 11949      1A1B1C00 
 11949      1D1E1F20 
 11949      21222222 
 11950 002c 040522   		.ascii	"\004\005\""
 11951              		.section	.rodata.map.9180,"a"
 11952              		.align	2
 11953              		.set	.LANCHOR0,. + 0
 11956              	map.9180:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 330


 11957 0000 E8E9EAEB 		.ascii	"\350\351\352\353\377\177\177\177mnol\377\377\377\377"
 11957      FF7F7F7F 
 11957      6D6E6F6C 
 11957      FFFFFFFF 
 11958 0010 FF7F0708 		.ascii	"\377\177\007\010\011\177\177\347\005\006\177\177\344"
 11958      097F7FE7 
 11958      05067F7F 
 11958      E4
 11959 001d E5E67FFF 		.ascii	"\345\346\177\377\000\360\177\177\177"
 11959      00F07F7F 
 11959      7F
 11960              		.section	.rodata.matrix_catalogue,"a"
 11961              		.align	2
 11964              	matrix_catalogue:
 11965 0000 641C9364 		.ascii	"d\034\223d\3305\334sm\212o\230\266\365\306o\330\366"
 11965      D835DC73 
 11965      6D8A6F98 
 11965      B6F5C66F 
 11965      D8F6
 11966 0012 45C86398 		.ascii	"E\310c\230\3260"
 11966      D630
 11967              		.section	.rodata.mode_catalogue,"a"
 11968              		.align	2
 11971              	mode_catalogue:
 11972 0000 2948C290 		.ascii	")H\302\220\213\300\006c\230\345\037\210\001\374|\271"
 11972      8BC00663 
 11972      98E51F88 
 11972      01FC7CB9 
 11973 0010 49818CCF 		.ascii	"I\201\214\317$I\302lb\031I2H\232\0310\322\020\203\304"
 11973      2449C26C 
 11973      62194932 
 11973      489A1930 
 11973      D21083C4 
 11974 0024 B0922087 		.ascii	"\260\222 \2072\012c\020\3072Js\024\306#\214\340\340"
 11974      320A6310 
 11974      C7324A73 
 11974      14C6238C 
 11974      E0E0
 11975 0036 39C30862 		.ascii	"9\303\010b\024\215\274O\203\334\231\311r@"
 11975      148DBC4F 
 11975      83DC99C9 
 11975      7240
 11976              		.section	.rodata.op_map.9247,"a"
 11977              		.align	2
 11978              		.set	.LANCHOR22,. + 0
 11981              	op_map.9247:
 11982 0000 1500     		.short	21
 11983 0002 0B02     		.short	523
 11984 0004 0003     		.short	768
 11985 0006 0A02     		.short	522
 11986 0008 1300     		.short	19
 11987 000a 1400     		.short	20
 11988 000c 0300     		.short	3
 11989 000e 0A00     		.short	10
 11990 0010 0701     		.short	263
 11991 0012 0000     		.short	0
 11992 0014 6531     		.short	12645
ARM GAS  /tmp/ccJ0w3QJ.s 			page 331


 11993 0016 0300     		.short	3
 11994 0018 0200     		.short	2
 11995 001a 0100     		.short	1
 11996 001c 4400     		.short	68
 11997 001e 0C00     		.short	12
 11998 0020 0D00     		.short	13
 11999 0022 0E00     		.short	14
 12000 0024 0403     		.short	772
 12001 0026 2F00     		.short	47
 12002 0028 0900     		.short	9
 12003 002a 0A00     		.short	10
 12004 002c 0B00     		.short	11
 12005 002e 0303     		.short	771
 12006 0030 2E00     		.short	46
 12007 0032 0600     		.short	6
 12008 0034 0700     		.short	7
 12009 0036 0800     		.short	8
 12010 0038 0203     		.short	770
 12011 003a 3300     		.short	51
 12012 003c 0500     		.short	5
 12013 003e 0400     		.short	4
 12014 0040 3B01     		.short	315
 12015 0042 0103     		.short	769
 12016 0044 0001     		.short	256
 12017              		.section	.rodata.op_map.9270,"a"
 12018              		.align	2
 12019              		.set	.LANCHOR19,. + 0
 12022              	op_map.9270:
 12023 0000 0100     		.short	1
 12024 0002 0000     		.short	0
 12025 0004 20F2     		.short	-3552
 12026 0006 23F2     		.short	-3549
 12027 0008 21F2     		.short	-3551
 12028 000a 24F2     		.short	-3548
 12029 000c 22F2     		.short	-3550
 12030 000e 25F2     		.short	-3547
 12031 0010 47F1     		.short	-3769
 12032 0012 46F1     		.short	-3770
 12033 0014 4E01     		.short	334
 12034 0016 4D01     		.short	333
 12035 0018 5C01     		.short	348
 12036 001a 35F1     		.short	-3787
 12037 001c 5B01     		.short	347
 12038 001e 36F1     		.short	-3786
 12039 0020 3301     		.short	307
 12040 0022 37F1     		.short	-3785
 12041 0024 3300     		.short	51
 12042 0026 0C01     		.short	268
 12043 0028 2B00     		.short	43
 12044 002a 2C00     		.short	44
 12045 002c 028B     		.short	-29950
 12046 002e 088B     		.short	-29944
 12047 0030 0A8B     		.short	-29942
 12048 0032 108B     		.short	-29936
 12049 0034 4301     		.short	323
 12050 0036 3D01     		.short	317
 12051 0038 0902     		.short	521
ARM GAS  /tmp/ccJ0w3QJ.s 			page 332


 12052 003a 0802     		.short	520
 12053 003c 1002     		.short	528
 12054 003e 0D02     		.short	525
 12055 0040 0F02     		.short	527
 12056 0042 0E02     		.short	526
 12057 0044 0003     		.short	768
 12058 0046 0803     		.short	776
 12059 0048 0BF2     		.short	-3573
 12060 004a 1603     		.short	790
 12061 004c 1203     		.short	786
 12062 004e 1303     		.short	787
 12063 0050 3DF2     		.short	-3523
 12064 0052 3EF2     		.short	-3522
 12065 0054 24F1     		.short	-3804
 12066 0056 1EF1     		.short	-3810
 12067 0058 75F2     		.short	-3467
 12068 005a 27F1     		.short	-3801
 12069 005c 0A02     		.short	522
 12070 005e 1602     		.short	534
 12071 0060 5100     		.short	81
 12072 0062 5200     		.short	82
 12073 0064 0000     		.short	0
 12074 0066 0100     		.short	1
 12075 0068 48F0     		.short	-4024
 12076 006a 4BF0     		.short	-4021
 12077 006c 47F0     		.short	-4025
 12078 006e 46F0     		.short	-4026
 12079 0070 77F2     		.short	-3465
 12080 0072 78F2     		.short	-3464
 12081 0074 3300     		.short	51
 12082 0076 3300     		.short	51
 12083 0078 0502     		.short	517
 12084 007a 0602     		.short	518
 12085 007c 0402     		.short	516
 12086 007e 0002     		.short	512
 12087 0080 4200     		.short	66
 12088 0082 3801     		.short	312
 12089 0084 3A00     		.short	58
 12090 0086 3B00     		.short	59
 12091 0088 0001     		.short	256
 12092 008a 0001     		.short	256
 12093              		.section	.rodata.op_map.9293,"a"
 12094              		.align	2
 12095              		.set	.LANCHOR21,. + 0
 12098              	op_map.9293:
 12099 0000 4C80     		.short	-32692
 12100 0002 4D80     		.short	-32691
 12101 0004 4E80     		.short	-32690
 12102 0006 4F80     		.short	-32689
 12103 0008 3300     		.short	51
 12104 000a 3300     		.short	51
 12105 000c 3300     		.short	51
 12106 000e 2180     		.short	-32735
 12107 0010 0801     		.short	264
 12108 0012 8780     		.short	-32633
 12109 0014 1180     		.short	-32751
 12110 0016 7C02     		.short	636
ARM GAS  /tmp/ccJ0w3QJ.s 			page 333


 12111 0018 5560     		.short	24661
 12112 001a 3F01     		.short	319
 12113 001c 4580     		.short	-32699
 12114 001e 1C03     		.short	796
 12115 0020 1D03     		.short	797
 12116 0022 1E03     		.short	798
 12117 0024 0603     		.short	774
 12118 0026 2F02     		.short	559
 12119 0028 3300     		.short	51
 12120 002a 3300     		.short	51
 12121 002c 3300     		.short	51
 12122 002e 3300     		.short	51
 12123 0030 3300     		.short	51
 12124 0032 3300     		.short	51
 12125 0034 3300     		.short	51
 12126 0036 3300     		.short	51
 12127 0038 1640     		.short	16406
 12128 003a 0201     		.short	258
 12129 003c 6D80     		.short	-32659
 12130 003e 5001     		.short	336
 12131 0040 3300     		.short	51
 12132 0042 1540     		.short	16405
 12133 0044 0001     		.short	256
 12134              		.section	.rodata.op_map.9303,"a"
 12135              		.align	2
 12136              		.set	.LANCHOR17,. + 0
 12139              	op_map.9303:
 12140 0000 0100     		.short	1
 12141 0002 0100     		.short	1
 12142 0004 0000     		.short	0
 12143 0006 0000     		.short	0
 12144 0008 0B05     		.short	1291
 12145 000a 2005     		.short	1312
 12146 000c 2305     		.short	1315
 12147 000e 3300     		.short	51
 12148 0010 0006     		.short	1536
 12149 0012 2105     		.short	1313
 12150 0014 2405     		.short	1316
 12151 0016 3300     		.short	51
 12152 0018 0A05     		.short	1290
 12153 001a 2205     		.short	1314
 12154 001c 2505     		.short	1317
 12155 001e 3300     		.short	51
 12156 0020 3300     		.short	51
 12157 0022 4701     		.short	327
 12158 0024 4601     		.short	326
 12159 0026 3300     		.short	51
 12160 0028 3300     		.short	51
 12161 002a 3300     		.short	51
 12162 002c 3300     		.short	51
 12163 002e 3300     		.short	51
 12164 0030 15FF     		.short	-235
 12165 0032 3300     		.short	51
 12166 0034 3300     		.short	51
 12167 0036 3300     		.short	51
 12168 0038 1AFF     		.short	-230
 12169 003a 3300     		.short	51
ARM GAS  /tmp/ccJ0w3QJ.s 			page 334


 12170 003c 3300     		.short	51
 12171 003e 9BFF     		.short	-101
 12172 0040 0901     		.short	265
 12173 0042 3300     		.short	51
 12174 0044 3300     		.short	51
 12175 0046 0A01     		.short	266
 12176 0048 0B01     		.short	267
 12177 004a 3300     		.short	51
 12178 004c 0D01     		.short	269
 12179 004e 0D01     		.short	269
 12180 0050 663F     		.short	16230
 12181 0052 3300     		.short	51
 12182 0054 3300     		.short	51
 12183 0056 1FFF     		.short	-225
 12184 0058 3805     		.short	1336
 12185 005a 3300     		.short	51
 12186 005c 3300     		.short	51
 12187 005e 3905     		.short	1337
 12188 0060 5521     		.short	8533
 12189 0062 3300     		.short	51
 12190 0064 3300     		.short	51
 12191 0066 5521     		.short	8533
 12192 0068 3300     		.short	51
 12193 006a 3300     		.short	51
 12194 006c 3300     		.short	51
 12195 006e 3300     		.short	51
 12196 0070 3300     		.short	51
 12197 0072 0905     		.short	1289
 12198 0074 0805     		.short	1288
 12199 0076 3300     		.short	51
 12200 0078 07A8     		.short	-22521
 12201 007a 1005     		.short	1296
 12202 007c 0D05     		.short	1293
 12203 007e 3300     		.short	51
 12204 0080 08A8     		.short	-22520
 12205 0082 0F05     		.short	1295
 12206 0084 0E05     		.short	1294
 12207 0086 3300     		.short	51
 12208 0088 09A8     		.short	-22519
 12209 008a 0006     		.short	1536
 12210 008c 0806     		.short	1544
 12211 008e 3300     		.short	51
 12212 0090 0406     		.short	1540
 12213 0092 0B05     		.short	1291
 12214 0094 1606     		.short	1558
 12215 0096 3300     		.short	51
 12216 0098 3300     		.short	51
 12217 009a 1206     		.short	1554
 12218 009c 1306     		.short	1555
 12219 009e 2F05     		.short	1327
 12220 00a0 04A8     		.short	-22524
 12221 00a2 3300     		.short	51
 12222 00a4 3300     		.short	51
 12223 00a6 3300     		.short	51
 12224 00a8 05A8     		.short	-22523
 12225 00aa 3300     		.short	51
 12226 00ac 3300     		.short	51
ARM GAS  /tmp/ccJ0w3QJ.s 			page 335


 12227 00ae 3300     		.short	51
 12228 00b0 06A8     		.short	-22522
 12229 00b2 3300     		.short	51
 12230 00b4 3300     		.short	51
 12231 00b6 3300     		.short	51
 12232 00b8 0306     		.short	1539
 12233 00ba 0A05     		.short	1290
 12234 00bc 1605     		.short	1302
 12235 00be 1605     		.short	1302
 12236 00c0 3300     		.short	51
 12237 00c2 3300     		.short	51
 12238 00c4 3300     		.short	51
 12239 00c6 3300     		.short	51
 12240 00c8 01A8     		.short	-22527
 12241 00ca 0000     		.short	0
 12242 00cc 0100     		.short	1
 12243 00ce 3300     		.short	51
 12244 00d0 02A8     		.short	-22526
 12245 00d2 3300     		.short	51
 12246 00d4 3300     		.short	51
 12247 00d6 3300     		.short	51
 12248 00d8 03A8     		.short	-22525
 12249 00da 3300     		.short	51
 12250 00dc 3300     		.short	51
 12251 00de 3300     		.short	51
 12252 00e0 0206     		.short	1538
 12253 00e2 3300     		.short	51
 12254 00e4 3300     		.short	51
 12255 00e6 3300     		.short	51
 12256 00e8 3300     		.short	51
 12257 00ea 3300     		.short	51
 12258 00ec 3300     		.short	51
 12259 00ee 0201     		.short	258
 12260 00f0 00A8     		.short	-22528
 12261 00f2 0505     		.short	1285
 12262 00f4 0605     		.short	1286
 12263 00f6 3300     		.short	51
 12264 00f8 B401     		.short	436
 12265 00fa 0405     		.short	1284
 12266 00fc 0005     		.short	1280
 12267 00fe 3300     		.short	51
 12268 0100 3300     		.short	51
 12269 0102 3300     		.short	51
 12270 0104 3300     		.short	51
 12271 0106 3300     		.short	51
 12272 0108 0106     		.short	1537
 12273 010a 3300     		.short	51
 12274 010c 3300     		.short	51
 12275 010e 3300     		.short	51
 12276 0110 0001     		.short	256
 12277 0112 0001     		.short	256
 12278 0114 0001     		.short	256
 12279 0116 0001     		.short	256
 12280              		.section	.rodata.op_map.9315,"a"
 12281              		.align	2
 12282              		.set	.LANCHOR13,. + 0
 12285              	op_map.9315:
ARM GAS  /tmp/ccJ0w3QJ.s 			page 336


 12286 0000 2A27     		.ascii	"*'"
 12287 0002 2B28     		.ascii	"+("
 12288 0004 2C29     		.ascii	",)"
 12289              		.section	.rodata.op_map.9330,"a"
 12290              		.align	2
 12291              		.set	.LANCHOR14,. + 0
 12294              	op_map.9330:
 12295 0000 1A02     		.short	538
 12296 0002 7B02     		.short	635
 12297 0004 1B02     		.short	539
 12298 0006 7A02     		.short	634
 12299 0008 1C02     		.short	540
 12300 000a 3300     		.short	51
 12301              		.section	.rodata.op_map2.9271,"a"
 12302              		.align	2
 12303              		.set	.LANCHOR20,. + 0
 12306              	op_map2.9271:
 12307 0000 3300     		.short	51
 12308 0002 3300     		.short	51
 12309 0004 0003     		.short	768
 12310 0006 0A02     		.short	522
 12311              		.section	.rodata.opcode_breaks,"a"
 12312              		.align	2
 12313              		.set	.LANCHOR7,. + 0
 12316              	opcode_breaks:
 12317 0000 34C5992F 		.ascii	"4\305\231/\014\231/"
 12317      0C992F
 12318              		.section	.rodata.prob_catalogue,"a"
 12319              		.align	2
 12322              	prob_catalogue:
 12323 0000 52147595 		.ascii	"R\024u\225IWU\305\261^QTE\221FO\226$\375@TU\005\241"
 12323      495755C5 
 12323      B15E5154 
 12323      4591464F 
 12323      9624FD40 
 12324 0018 5255D565 		.ascii	"RU\325e\251XV\225\225\255[U\0255\245US\224\325\235O"
 12324      A9585695 
 12324      95AD5B55 
 12324      1535A555 
 12324      5394D59D 
 12325 002d 52D4A599 		.ascii	"R\324\245\231LN\326\024\361=P\224\025\215CW\323T\345"
 12325      4C4ED614 
 12325      F13D5094 
 12325      158D4357 
 12325      D354E5
 12326 0040 3A4E1600 		.ascii	":N\026\000"
 12327              		.section	.rodata.prog_catalogue,"a"
 12328              		.align	2
 12331              	prog_catalogue:
 12332 0000 B30D1CBC 		.ascii	"\263\015\034\274y\035G\201\310t*1\353TB\264m1\272\227"
 12332      791D4781 
 12332      C8742A31 
 12332      EB5442B4 
 12332      6D31BA97 
 12333 0014 BA0E0B7A 		.ascii	"\272\016\013z\337\312\262|\243+\313r\2232\326\264\255"
 12333      DFCAB27C 
 12333      A32BCB72 
ARM GAS  /tmp/ccJ0w3QJ.s 			page 337


 12333      9332D6B4 
 12333      AD
 12334 0025 4C3CE2C4 		.ascii	"L<\342\304M\343w\020\015\015\303\214p90\352\340\337"
 12334      4DE37710 
 12334      0D0DC38C 
 12334      703930EA 
 12334      E0DF
 12335 0037 1D8CD1B4 		.ascii	"\035\214\321\264\261+\313\"\300\341\262\315 \336\267"
 12335      B12BCB22 
 12335      C0E1B2CD 
 12335      20DEB7
 12336 0046 302A92A7 		.ascii	"0*\222\247\010\016\214\272\236\250\301J\342\267\004"
 12336      080E8CBA 
 12336      9EA8C14A 
 12336      E2B704
 12337 0055 C6CF3C8B 		.ascii	"\306\317<\213&\313\216\314\200\355;\2623\320\360<N\363"
 12337      26CB8ECC 
 12337      80ED3BB2 
 12337      33D0F03C 
 12337      4EF3
 12338 0067 CB21     		.ascii	"\313!"
 12339              		.section	.rodata.program_xfcn,"a"
 12340              		.align	2
 12343              	program_xfcn:
 12344 0000 445A9676 		.ascii	"DZ\226v\3700X&\016\372>\312#\245\206m\0342Y\302\037"
 12344      F8305826 
 12344      0EFA3ECA 
 12344      23A5866D 
 12344      1C3259C2 
 12345 0015 516C5442 		.ascii	"QlTB^S4\321\210B\357\264H\372k\022d\235\030n\233\266"
 12345      5E5334D1 
 12345      8842EFB4 
 12345      48FA6B12 
 12345      649D186E 
 12346 002b A9AB65F1 		.ascii	"\251\253e\3617\005zkIF\345\012qY\364\251\207\277\257"
 12346      37057A6B 
 12346      4946E50A 
 12346      7159F4A9 
 12346      87BFAF
 12347 003e F6719B5D 		.ascii	"\366q\233]\331\226\025\261]\234\003\015\262m\221|,\225"
 12347      D99615B1 
 12347      5D9C030D 
 12347      B26D917C 
 12347      2C95
 12348 0050 BCAF43F2 		.ascii	"\274\257C\362\363\275p\253\347\006\301\306\204\001\037"
 12348      F3BD70AB 
 12348      E706C1C6 
 12348      84011F
 12349 005f BD8C2BDF 		.ascii	"\275\214+\337\024(\333v%\270\015W\203)\015C\020\344"
 12349      1428DB76 
 12349      25B80D57 
 12349      83290D43 
 12349      10E4
 12350 0071 41B32B1B 		.ascii	"A\263+\033\306\020\240'\253\322\250\237\257+\252\372"
 12350      C610A027 
 12350      ABD2A89F 
 12350      AF2BAAFA 
ARM GAS  /tmp/ccJ0w3QJ.s 			page 338


 12351 0081 BFB02C1A 		.ascii	"\277\260,\032\354\241*\331\344\245\242h\332\006\205"
 12351      ECA12AD9 
 12351      E4A5A268 
 12351      DA0685
 12352 0090 B5605057 		.ascii	"\265`PW-\312i\334E\311oi\234\300"
 12352      2DCA69DC 
 12352      45C96F69 
 12352      9CC0
 12353              		.section	.rodata.smap.9195,"a"
 12354              		.align	2
 12355              		.set	.LANCHOR16,. + 0
 12358              	smap.9195:
 12359 0000 00010002 		.ascii	"\000\001\000\002"
 12360              		.section	.rodata.stats_catalogue,"a"
 12361              		.align	2
 12364              	stats_catalogue:
 12365 0000 1805C1A0 		.ascii	"\030\005\301\240]\027\311qXa\026\205\225\264T\027\205"
 12365      5D17C971 
 12365      58611685 
 12365      95B45417 
 12365      85
 12366 0011 514C575B 		.ascii	"QLW[\300"
 12366      C0
 12367              		.section	.rodata.sums_catalogue,"a"
 12368              		.align	2
 12371              	sums_catalogue:
 12372 0000 1444B134 		.ascii	"\024D\2614J\023\204\301 E\021\004\361\034I\021\205\000"
 12372      4A1384C1 
 12372      20451104 
 12372      F11C4911 
 12372      8500
 12373              		.section	.rodata.test_catalogue,"a"
 12374              		.align	2
 12377              	test_catalogue:
 12378 0000 BF6FCC68 		.ascii	"\277o\314h\347/\313\333\252\356\274.\362\362\351\272"
 12378      E72FCBDB 
 12378      AAEEBC2E 
 12378      F2F2E9BA 
 12379 0010 EEDBB32C 		.ascii	"\356\333\263,4\313\274\016\330'M\242\340\276.\215B\344"
 12379      34CBBC0E 
 12379      D8274DA2 
 12379      E0BE2E8D 
 12379      42E4
 12380 0022 D03D6C5B 		.ascii	"\320=l[\030\3255\254K\"\307-\317`"
 12380      18D535AC 
 12380      4B22C72D 
 12380      CF60
 12381              		.text
 12382              	.Letext0:
 12383              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 12384              		.file 3 "dmcp/dmcp.h"
 12385              		.file 4 "src/decNumber/decContext.h"
 12386              		.file 5 "src/decNumber/decNumber.h"
 12387              		.file 6 "src/decNumber/decimal64.h"
 12388              		.file 7 "src/decNumber/decimal128.h"
 12389              		.file 8 "src/xeq.h"
 12390              		.file 9 "src/data.h"
ARM GAS  /tmp/ccJ0w3QJ.s 			page 339


 12391              		.file 10 "src/keys.h"
 12392              		.file 11 "src/display.h"
 12393              		.file 12 "src/consts.h"
 12394              		.file 13 "src/storage.h"
 12395              		.file 14 "src/stats.h"
 12396              		.file 15 "src/catalogues.h"
 12397              		.file 16 "src/lcd.h"
 12398              		.file 17 "src/int.h"
ARM GAS  /tmp/ccJ0w3QJ.s 			page 340


DEFINED SYMBOLS
                            *ABS*:0000000000000000 keys.c
     /tmp/ccJ0w3QJ.s:18     .text.check_f_key:0000000000000000 $t
     /tmp/ccJ0w3QJ.s:26     .text.check_f_key:0000000000000000 check_f_key
     /tmp/ccJ0w3QJ.s:105    .text.check_f_key:0000000000000038 $d
     /tmp/ccJ0w3QJ.s:111    .text.is_label_or_end_at:0000000000000000 $t
     /tmp/ccJ0w3QJ.s:118    .text.is_label_or_end_at:0000000000000000 is_label_or_end_at
     /tmp/ccJ0w3QJ.s:174    .text.advance_to_next_label:0000000000000000 $t
     /tmp/ccJ0w3QJ.s:181    .text.advance_to_next_label:0000000000000000 advance_to_next_label
     /tmp/ccJ0w3QJ.s:262    .text.advance_to_next_label:0000000000000048 $d
     /tmp/ccJ0w3QJ.s:267    .text.init_cat:0000000000000000 $t
     /tmp/ccJ0w3QJ.s:274    .text.init_cat:0000000000000000 init_cat
     /tmp/ccJ0w3QJ.s:599    .text.init_cat:00000000000000ec $d
     /tmp/ccJ0w3QJ.s:605    .text.advance_to_previous_label:0000000000000000 $t
     /tmp/ccJ0w3QJ.s:612    .text.advance_to_previous_label:0000000000000000 advance_to_previous_label
     /tmp/ccJ0w3QJ.s:697    .text.advance_to_previous_label:000000000000004c $d
     /tmp/ccJ0w3QJ.s:702    .text.init_arg.part.0:0000000000000000 $t
     /tmp/ccJ0w3QJ.s:709    .text.init_arg.part.0:0000000000000000 init_arg.part.0
     /tmp/ccJ0w3QJ.s:751    .text.init_arg.part.0:0000000000000024 $d
     /tmp/ccJ0w3QJ.s:756    .text.reset_arg:0000000000000000 $t
     /tmp/ccJ0w3QJ.s:763    .text.reset_arg:0000000000000000 reset_arg
     /tmp/ccJ0w3QJ.s:807    .text.reset_arg:0000000000000018 $d
     /tmp/ccJ0w3QJ.s:812    .text.arg_eval:0000000000000000 $t
     /tmp/ccJ0w3QJ.s:819    .text.arg_eval:0000000000000000 arg_eval
     /tmp/ccJ0w3QJ.s:941    .text.arg_eval:0000000000000074 $d
     /tmp/ccJ0w3QJ.s:948    .text.process_arg_shuffle:0000000000000000 $t
     /tmp/ccJ0w3QJ.s:955    .text.process_arg_shuffle:0000000000000000 process_arg_shuffle
     /tmp/ccJ0w3QJ.s:1013   .text.process_arg_shuffle:000000000000002c $d
     /tmp/ccJ0w3QJ.s:1018   .text.arg_digit:0000000000000000 $t
     /tmp/ccJ0w3QJ.s:1025   .text.arg_digit:0000000000000000 arg_digit
     /tmp/ccJ0w3QJ.s:1250   .text.arg_digit:00000000000000c8 $d
     /tmp/ccJ0w3QJ.s:1258   .text.intltr:0000000000000000 $t
     /tmp/ccJ0w3QJ.s:1265   .text.intltr:0000000000000000 intltr
     /tmp/ccJ0w3QJ.s:1328   .text.intltr:0000000000000030 $d
     /tmp/ccJ0w3QJ.s:1334   .text.set_window:0000000000000000 $t
     /tmp/ccJ0w3QJ.s:1341   .text.set_window:0000000000000000 set_window
     /tmp/ccJ0w3QJ.s:1488   .text.set_window:000000000000008c $d
     /tmp/ccJ0w3QJ.s:1495   .text.arg_storcl:0000000000000000 $t
     /tmp/ccJ0w3QJ.s:1502   .text.arg_storcl:0000000000000000 arg_storcl
     /tmp/ccJ0w3QJ.s:1618   .text.arg_storcl:0000000000000040 $d
     /tmp/ccJ0w3QJ.s:1623   .text.process_arg:0000000000000000 $t
     /tmp/ccJ0w3QJ.s:1630   .text.process_arg:0000000000000000 process_arg
     /tmp/ccJ0w3QJ.s:1851   .text.process_arg:000000000000009c $d
     /tmp/ccJ0w3QJ.s:1898   .text.process_arg:00000000000000f8 $t
     /tmp/ccJ0w3QJ.s:1931   .text.process_arg:000000000000011e $d
     /tmp/ccJ0w3QJ.s:2375   .text.process_arg:00000000000002b8 $d
     /tmp/ccJ0w3QJ.s:2387   .text.process_arg:00000000000002cc $t
     /tmp/ccJ0w3QJ.s:2760   .text.process_arg:0000000000000474 $d
     /tmp/ccJ0w3QJ.s:2765   .text.cur_shift:0000000000000000 $t
     /tmp/ccJ0w3QJ.s:2773   .text.cur_shift:0000000000000000 cur_shift
     /tmp/ccJ0w3QJ.s:2801   .text.cur_shift:0000000000000010 $d
     /tmp/ccJ0w3QJ.s:2806   .text.reset_shift:0000000000000000 $t
     /tmp/ccJ0w3QJ.s:2814   .text.reset_shift:0000000000000000 reset_shift
     /tmp/ccJ0w3QJ.s:2875   .text.reset_shift:0000000000000014 $d
     /tmp/ccJ0w3QJ.s:2880   .text.keycode_to_row_column:0000000000000000 $t
     /tmp/ccJ0w3QJ.s:2888   .text.keycode_to_row_column:0000000000000000 keycode_to_row_column
     /tmp/ccJ0w3QJ.s:2916   .text.keycode_to_row_column:0000000000000020 $d
ARM GAS  /tmp/ccJ0w3QJ.s 			page 341


     /tmp/ccJ0w3QJ.s:2921   .text.row_column_to_keycode:0000000000000000 $t
     /tmp/ccJ0w3QJ.s:2929   .text.row_column_to_keycode:0000000000000000 row_column_to_keycode
     /tmp/ccJ0w3QJ.s:2987   .text.row_column_to_keycode:000000000000003c $d
     /tmp/ccJ0w3QJ.s:2992   .text.keycode_to_digit_or_register:0000000000000000 $t
     /tmp/ccJ0w3QJ.s:3000   .text.keycode_to_digit_or_register:0000000000000000 keycode_to_digit_or_register
     /tmp/ccJ0w3QJ.s:3036   .text.keycode_to_digit_or_register:000000000000000c $d
     /tmp/ccJ0w3QJ.s:3042   .text.init_state:0000000000000000 $t
     /tmp/ccJ0w3QJ.s:3050   .text.init_state:0000000000000000 init_state
     /tmp/ccJ0w3QJ.s:3156   .text.init_state:000000000000005c $d
     /tmp/ccJ0w3QJ.s:3162   .text.soft_init_state:0000000000000000 $t
     /tmp/ccJ0w3QJ.s:3170   .text.soft_init_state:0000000000000000 soft_init_state
     /tmp/ccJ0w3QJ.s:3265   .text.soft_init_state:0000000000000048 $d
     /tmp/ccJ0w3QJ.s:3271   .text.current_catalogue_max:0000000000000000 $t
     /tmp/ccJ0w3QJ.s:3279   .text.current_catalogue_max:0000000000000000 current_catalogue_max
     /tmp/ccJ0w3QJ.s:3300   .text.current_catalogue_max:000000000000000c $d
     /tmp/ccJ0w3QJ.s:3306   .text.current_catalogue:0000000000000000 $t
     /tmp/ccJ0w3QJ.s:3314   .text.current_catalogue:0000000000000000 current_catalogue
     /tmp/ccJ0w3QJ.s:3570   .text.current_catalogue:00000000000000c8 $d
     /tmp/ccJ0w3QJ.s:3580   .text.process_catalogue:0000000000000000 $t
     /tmp/ccJ0w3QJ.s:3587   .text.process_catalogue:0000000000000000 process_catalogue
     /tmp/ccJ0w3QJ.s:3919   .text.process_catalogue:0000000000000100 $d
     /tmp/ccJ0w3QJ.s:3951   .text.process_catalogue:0000000000000120 $t
     /tmp/ccJ0w3QJ.s:4465   .text.process_catalogue:00000000000002e0 $d
     /tmp/ccJ0w3QJ.s:4476   .text.process_catalogue:0000000000000300 $t
     /tmp/ccJ0w3QJ.s:4536   .text.find_pos:0000000000000000 $t
     /tmp/ccJ0w3QJ.s:4544   .text.find_pos:0000000000000000 find_pos
     /tmp/ccJ0w3QJ.s:4717   .text.find_pos:0000000000000080 $d
     /tmp/ccJ0w3QJ.s:4723   .text.get_alpha_state:0000000000000000 $t
     /tmp/ccJ0w3QJ.s:4731   .text.get_alpha_state:0000000000000000 get_alpha_state
     /tmp/ccJ0w3QJ.s:4763   .text.get_alpha_state:0000000000000020 $d
     /tmp/ccJ0w3QJ.s:4769   .rodata.process_keycode.str1.4:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:4779   .text.process_keycode:0000000000000000 $t
     /tmp/ccJ0w3QJ.s:4787   .text.process_keycode:0000000000000000 process_keycode
     /tmp/ccJ0w3QJ.s:5349   .text.process_keycode:000000000000025c $d
                            *COM*:0000000000000004 OpCode
                            *COM*:0000000000000004 GoFast
                            *COM*:0000000000000004 OpCodeDisplayPending
                            *COM*:0000000000000004 WasDataEntry
     /tmp/ccJ0w3QJ.s:5367   .text.process_keycode:0000000000000298 $t
     /tmp/ccJ0w3QJ.s:5616   .text.process_keycode:00000000000003ae $d
     /tmp/ccJ0w3QJ.s:5636   .text.process_keycode:00000000000003d4 $t
     /tmp/ccJ0w3QJ.s:5875   .text.process_keycode:00000000000004a2 $d
     /tmp/ccJ0w3QJ.s:5925   .text.process_keycode:00000000000004d0 $d
                            *COM*:0000000000000004 NonProgrammable
     /tmp/ccJ0w3QJ.s:5977   .text.process_keycode:0000000000000510 $t
     /tmp/ccJ0w3QJ.s:6149   .text.process_keycode:00000000000005a8 $d
     /tmp/ccJ0w3QJ.s:6159   .text.process_keycode:00000000000005cc $t
     /tmp/ccJ0w3QJ.s:6619   .text.process_keycode:000000000000078c $d
     /tmp/ccJ0w3QJ.s:6628   .text.process_keycode:00000000000007b0 $t
     /tmp/ccJ0w3QJ.s:6732   .text.process_keycode:0000000000000810 $d
     /tmp/ccJ0w3QJ.s:6762   .text.process_keycode:0000000000000878 $d
     /tmp/ccJ0w3QJ.s:6773   .text.process_keycode:000000000000089c $t
     /tmp/ccJ0w3QJ.s:6809   .text.process_keycode:00000000000008c4 $d
     /tmp/ccJ0w3QJ.s:6813   .text.process_keycode:00000000000008d4 $t
     /tmp/ccJ0w3QJ.s:7772   .text.process_keycode:0000000000000c0c $d
     /tmp/ccJ0w3QJ.s:7794   .text.process_keycode:0000000000000c34 $t
     /tmp/ccJ0w3QJ.s:8272   .text.process_keycode:0000000000000da0 $d
ARM GAS  /tmp/ccJ0w3QJ.s 			page 342


     /tmp/ccJ0w3QJ.s:8307   .text.process_keycode:0000000000000e2c $t
     /tmp/ccJ0w3QJ.s:8580   .text.process_keycode:0000000000000f1c $d
     /tmp/ccJ0w3QJ.s:8600   .text.process_keycode:0000000000000f6c $t
     /tmp/ccJ0w3QJ.s:8650   .text.process_keycode:0000000000000f98 $d
     /tmp/ccJ0w3QJ.s:8681   .text.process_keycode:0000000000000fb0 $t
     /tmp/ccJ0w3QJ.s:8813   .text.process_keycode:0000000000001014 $d
     /tmp/ccJ0w3QJ.s:8831   .text.process_keycode:000000000000105c $t
     /tmp/ccJ0w3QJ.s:9173   .text.process_keycode:0000000000001144 $d
     /tmp/ccJ0w3QJ.s:9207   .text.process_keycode:00000000000011cc $t
     /tmp/ccJ0w3QJ.s:9486   .text.process_keycode:00000000000012b4 $d
     /tmp/ccJ0w3QJ.s:9503   .text.process_keycode:00000000000012d0 $t
     /tmp/ccJ0w3QJ.s:9543   .text.process_keycode:00000000000012f4 $d
     /tmp/ccJ0w3QJ.s:9578   .text.process_keycode:000000000000137c $t
     /tmp/ccJ0w3QJ.s:10033  .text.process_keycode:00000000000014b8 $d
     /tmp/ccJ0w3QJ.s:10074  .text.process_keycode:000000000000155c $t
     /tmp/ccJ0w3QJ.s:10262  .text.process_keycode:0000000000001620 $d
     /tmp/ccJ0w3QJ.s:10277  .text.process_keycode:000000000000163c $t
     /tmp/ccJ0w3QJ.s:11036  .text.process_keycode:0000000000001928 $d
     /tmp/ccJ0w3QJ.s:11048  .text.process_keycode:0000000000001934 $t
     /tmp/ccJ0w3QJ.s:11057  .text.process_keycode:0000000000001944 $d
     /tmp/ccJ0w3QJ.s:11099  .text.process_keycode:00000000000019e8 $t
     /tmp/ccJ0w3QJ.s:11574  .text.process_keycode:0000000000001b7c $d
     /tmp/ccJ0w3QJ.s:11585  .text.process_keycode_with_shift:0000000000000000 $t
     /tmp/ccJ0w3QJ.s:11593  .text.process_keycode_with_shift:0000000000000000 process_keycode_with_shift
     /tmp/ccJ0w3QJ.s:11669  .text.process_keycode_with_shift:000000000000002c $d
     /tmp/ccJ0w3QJ.s:11679  .bss.was_paused.9671:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:11683  .bss.was_paused.9671:0000000000000000 was_paused.9671
     /tmp/ccJ0w3QJ.s:11686  .rodata.alpha_arrows:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:11689  .rodata.alpha_arrows:0000000000000000 alpha_arrows
     /tmp/ccJ0w3QJ.s:11692  .rodata.alpha_catalogue:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:11695  .rodata.alpha_catalogue:0000000000000000 alpha_catalogue
     /tmp/ccJ0w3QJ.s:11699  .rodata.alpha_compares:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:11702  .rodata.alpha_compares:0000000000000000 alpha_compares
     /tmp/ccJ0w3QJ.s:11705  .rodata.alpha_letters:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:11709  .rodata.alpha_letters:0000000000000000 alpha_letters
     /tmp/ccJ0w3QJ.s:11715  .rodata.alpha_letters_lower:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:11719  .rodata.alpha_letters_lower:0000000000000000 alpha_letters_lower
     /tmp/ccJ0w3QJ.s:11725  .rodata.alpha_subscripts:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:11728  .rodata.alpha_subscripts:0000000000000000 alpha_subscripts
     /tmp/ccJ0w3QJ.s:11732  .rodata.alpha_symbols:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:11735  .rodata.alpha_symbols:0000000000000000 alpha_symbols
     /tmp/ccJ0w3QJ.s:11738  .rodata.alphamap.9203:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:11742  .rodata.alphamap.9203:0000000000000000 alphamap.9203
     /tmp/ccJ0w3QJ.s:11782  .rodata.amap.9194:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:11786  .rodata.amap.9194:0000000000000000 amap.9194
     /tmp/ccJ0w3QJ.s:11800  .rodata.catalogue:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:11803  .rodata.catalogue:0000000000000000 catalogue
     /tmp/ccJ0w3QJ.s:11812  .rodata.catalogue_sizes.9469:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:11816  .rodata.catalogue_sizes.9469:0000000000000000 catalogue_sizes.9469
     /tmp/ccJ0w3QJ.s:11819  .rodata.catalogues.9477:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:11823  .rodata.catalogues.9477:0000000000000000 catalogues.9477
     /tmp/ccJ0w3QJ.s:11908  .rodata.cplx_catalogue:0000000000000000 cplx_catalogue
     /tmp/ccJ0w3QJ.s:12364  .rodata.stats_catalogue:0000000000000000 stats_catalogue
     /tmp/ccJ0w3QJ.s:12322  .rodata.prob_catalogue:0000000000000000 prob_catalogue
     /tmp/ccJ0w3QJ.s:11925  .rodata.int_catalogue:0000000000000000 int_catalogue
     /tmp/ccJ0w3QJ.s:12331  .rodata.prog_catalogue:0000000000000000 prog_catalogue
     /tmp/ccJ0w3QJ.s:12343  .rodata.program_xfcn:0000000000000000 program_xfcn
ARM GAS  /tmp/ccJ0w3QJ.s 			page 343


     /tmp/ccJ0w3QJ.s:12377  .rodata.test_catalogue:0000000000000000 test_catalogue
     /tmp/ccJ0w3QJ.s:11971  .rodata.mode_catalogue:0000000000000000 mode_catalogue
     /tmp/ccJ0w3QJ.s:12371  .rodata.sums_catalogue:0000000000000000 sums_catalogue
     /tmp/ccJ0w3QJ.s:11964  .rodata.matrix_catalogue:0000000000000000 matrix_catalogue
     /tmp/ccJ0w3QJ.s:11846  .rodata.cmap.9193:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:11850  .rodata.cmap.9193:0000000000000000 cmap.9193
     /tmp/ccJ0w3QJ.s:11876  .rodata.conv_catalogue:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:11880  .rodata.conv_catalogue:0000000000000000 conv_catalogue
     /tmp/ccJ0w3QJ.s:11887  .rodata.conv_mapping.9516:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:11891  .rodata.conv_mapping.9516:0000000000000000 conv_mapping.9516
     /tmp/ccJ0w3QJ.s:11905  .rodata.cplx_catalogue:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:11912  .rodata.disp.9331:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:11916  .rodata.disp.9331:0000000000000000 disp.9331
     /tmp/ccJ0w3QJ.s:11922  .rodata.int_catalogue:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:11932  .rodata.linear_key_map.9164:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:11936  .rodata.linear_key_map.9164:0000000000000000 linear_key_map.9164
     /tmp/ccJ0w3QJ.s:11942  .rodata.linear_key_map.9168:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:11946  .rodata.linear_key_map.9168:0000000000000000 linear_key_map.9168
     /tmp/ccJ0w3QJ.s:11952  .rodata.map.9180:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:11956  .rodata.map.9180:0000000000000000 map.9180
     /tmp/ccJ0w3QJ.s:11961  .rodata.matrix_catalogue:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:11968  .rodata.mode_catalogue:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:11977  .rodata.op_map.9247:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:11981  .rodata.op_map.9247:0000000000000000 op_map.9247
     /tmp/ccJ0w3QJ.s:12018  .rodata.op_map.9270:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:12022  .rodata.op_map.9270:0000000000000000 op_map.9270
     /tmp/ccJ0w3QJ.s:12094  .rodata.op_map.9293:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:12098  .rodata.op_map.9293:0000000000000000 op_map.9293
     /tmp/ccJ0w3QJ.s:12135  .rodata.op_map.9303:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:12139  .rodata.op_map.9303:0000000000000000 op_map.9303
     /tmp/ccJ0w3QJ.s:12281  .rodata.op_map.9315:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:12285  .rodata.op_map.9315:0000000000000000 op_map.9315
     /tmp/ccJ0w3QJ.s:12290  .rodata.op_map.9330:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:12294  .rodata.op_map.9330:0000000000000000 op_map.9330
     /tmp/ccJ0w3QJ.s:12302  .rodata.op_map2.9271:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:12306  .rodata.op_map2.9271:0000000000000000 op_map2.9271
     /tmp/ccJ0w3QJ.s:12312  .rodata.opcode_breaks:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:12316  .rodata.opcode_breaks:0000000000000000 opcode_breaks
     /tmp/ccJ0w3QJ.s:12319  .rodata.prob_catalogue:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:12328  .rodata.prog_catalogue:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:12340  .rodata.program_xfcn:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:12354  .rodata.smap.9195:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:12358  .rodata.smap.9195:0000000000000000 smap.9195
     /tmp/ccJ0w3QJ.s:12361  .rodata.stats_catalogue:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:12368  .rodata.sums_catalogue:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:12374  .rodata.test_catalogue:0000000000000000 $d
     /tmp/ccJ0w3QJ.s:1935   .text.process_arg:0000000000000121 $d
     /tmp/ccJ0w3QJ.s:1935   .text.process_arg:0000000000000122 $t

UNDEFINED SYMBOLS
find_label_from
StateWhileOn
main_ram
getprog
do_inc
PcWrapped
process_cmdline
ARM GAS  /tmp/ccJ0w3QJ.s 			page 344


shift_down
do_dec
is_bad_cmdline
argcmds
local_regs_rarg
num_arg_digits
global_regs_rarg
int_base
process_cmdline_set_lift
display
is_dblmode
IntMaxWindow
xset
update_program_bounds
set_lift
ShowRegister
remap_chars
catcmd
keyticks
xeq_init_contexts
is_dot
xeq
xeqprog
dot
finish_display
start_pause
clr_dot
xeq_xrom
set_running_off
Pause
JustStopped
Running
ShowRPN
JustDisplayed
DispMsg
is_key_pressed
xeq_sst_bst
prt
scopy_char
TraceBuffer
set_menu
display_current_menu
delprog
message
stoprog
clpall
clrprog
reset
clrall
set_pc
find_char
set_last_menu
sizeLIB
find_user_pc
cmdgtocommon
global_regs
local_regs
ARM GAS  /tmp/ccJ0w3QJ.s 			page 345


alen
